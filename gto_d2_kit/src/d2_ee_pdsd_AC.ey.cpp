/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "gto_d2_kit/d2_ee_pdsd_AC.hpp"
#include <cmath>
/*

*/
#pragma GCC optimize("O0")
#pragma GCC optimize("O0")
namespace {
    const double Pi = M_PI;
}
//
void second_derivative_ee_1202_13(const double ae,
                                  const double xA,
                                  const double yA,
                                  const double zA,
                                  const double be,
                                  const double xB,
                                  const double yB,
                                  const double zB,
                                  const double ce,
                                  const double xC,
                                  const double yC,
                                  const double zC,
                                  const double de,
                                  const double xD,
                                  const double yD,
                                  const double zD,
                                  const double* const bs,
                                  double* const d2eexx,
                                  double* const d2eexy,
                                  double* const d2eexz,
                                  double* const d2eeyx,
                                  double* const d2eeyy,
                                  double* const d2eeyz,
                                  double* const d2eezx,
                                  double* const d2eezy,
                                  double* const d2eezz)
{
    const double p = ae + be;
    const double q = ce + de;
    const double xP = (ae * xA + be * xB) / p;
    const double yP = (ae * yA + be * yB) / p;
    const double zP = (ae * zA + be * zB) / p;
    const double xQ = (ce * xC + de * xD) / q;
    const double yQ = (ce * yC + de * yD) / q;
    const double zQ = (ce * zC + de * zD) / q;
    const double C89852 = 0 * ae;
    const double C89851 = ae * be;
    const double C89850 = 0 * be;
    const double C89849 = ae + be;
    const double C89848 = 0 * be;
    const double C89847 = xA - xB;
    const double C89893 = ce * de;
    const double C89892 = ce + de;
    const double C89891 = 0 * de;
    const double C89890 = xC - xD;
    const double C89920 = 0 * de;
    const double C89919 = yC - yD;
    const double C89935 = 0 * de;
    const double C89934 = zC - zD;
    const double C89966 = 0 * be;
    const double C89965 = yA - yB;
    const double C89981 = 0 * be;
    const double C89980 = zA - zB;
    const double C90024 = 0 * ae;
    const double C90020 = 0 * be;
    const double C90070 = 0 * ae;
    const double C90066 = 0 * be;
    const double C90101 = p + q;
    const double C90100 = p * q;
    const double C90106 = xP - xQ;
    const double C90105 = bs[2];
    const double C90115 = ae * ce;
    const double C90111 = bs[3];
    const double C90124 = bs[4];
    const double C90145 = bs[5];
    const double C90187 = bs[6];
    const double C90248 = yP - yQ;
    const double C90306 = zP - zQ;
    const double C107 = bs[0];
    const double C89857 = C89852 / C89849;
    const double C89854 = 2 * C89849;
    const double C89853 = std::pow(C89849, 2);
    const double C89856 = C89851 * C89847;
    const double C89855 = C89847 * C89850;
    const double C92058 = C89847 * be;
    const double C92057 = C89847 * ae;
    const double C92056 = std::pow(C89847, 2);
    const double C89894 = std::pow(C89892, 2);
    const double C90107 = C89892 * C89849;
    const double C92316 = 2 * C89892;
    const double C89895 = C89893 * C89890;
    const double C92074 = std::pow(C89890, 2);
    const double C92315 = C89890 * ce;
    const double C89921 = C89893 * C89919;
    const double C92095 = std::pow(C89919, 2);
    const double C92317 = C89919 * ce;
    const double C89936 = C89893 * C89934;
    const double C92106 = std::pow(C89934, 2);
    const double C92318 = C89934 * ce;
    const double C89967 = C89851 * C89965;
    const double C90021 = C89965 * C89966;
    const double C92133 = std::pow(C89965, 2);
    const double C92182 = C89965 * be;
    const double C92181 = C89965 * ae;
    const double C89982 = C89851 * C89980;
    const double C90067 = C89980 * C89981;
    const double C92144 = std::pow(C89980, 2);
    const double C92208 = C89980 * be;
    const double C92207 = C89980 * ae;
    const double C90029 = C90024 / C89849;
    const double C90075 = C90070 / C89849;
    const double C90102 = 2 * C90100;
    const double C90116 = C90106 * ae;
    const double C90114 = std::pow(C90106, 2);
    const double C90112 = C90106 * ce;
    const double C90251 = C90106 * C90248;
    const double C90250 = C90248 * ce;
    const double C90366 = C90248 * C90106;
    const double C90365 = C90248 * ae;
    const double C90420 = std::pow(C90248, 2);
    const double C90309 = C90106 * C90306;
    const double C90308 = C90306 * ce;
    const double C90445 = C90248 * C90306;
    const double C90467 = C90306 * C90106;
    const double C90466 = C90306 * ae;
    const double C90521 = C90306 * C90248;
    const double C90542 = std::pow(C90306, 2);
    const double C92066 = std::pow(C89854, -1);
    const double C92320 = std::pow(C89854, -2);
    const double C89858 = 2 * C89853;
    const double C92314 = 4 * C89853;
    const double C89859 = C89855 / C89849;
    const double C92059 = C92056 * C89851;
    const double C89896 = 2 * C89894;
    const double C92337 = std::pow(C92316, -2);
    const double C92335 = std::pow(C92316, -1);
    const double C92075 = C92074 * C89893;
    const double C92096 = C92095 * C89893;
    const double C92107 = C92106 * C89893;
    const double C90026 = C90021 / C89849;
    const double C92134 = C92133 * C89851;
    const double C90072 = C90067 / C89849;
    const double C92145 = C92144 * C89851;
    const double C90104 = C90102 / C90101;
    const double C125 =
        (-((std::pow(xP - xQ, 2) * bs[2] * std::pow(C90102 / C90101, 2) -
            (bs[1] * C90102) / C90101) *
           ae * ce) /
         C89892) /
        C89849;
    const double C108 = -(C90106 * bs[1] * C90102) / C90101;
    const double C805 = -(C90248 * bs[1] * C90102) / C90101;
    const double C1389 = -(C90306 * bs[1] * C90102) / C90101;
    const double C90119 = C90111 * C90116;
    const double C90130 = C90124 * C90116;
    const double C90154 = C90145 * C90116;
    const double C90202 = C90187 * C90116;
    const double C113 = (-(bs[1] * C90116 * C90102) / C90101) / C89849;
    const double C90126 = C90114 * C90124;
    const double C90149 = C90114 * C90145;
    const double C90196 = C90114 * C90187;
    const double C90118 = C90111 * C90112;
    const double C90127 = C90124 * C90112;
    const double C90150 = C90145 * C90112;
    const double C90198 = C90187 * C90112;
    const double C117 = (bs[1] * C90112 * C90102) / (C90101 * C89892);
    const double C90253 = C90251 * ae;
    const double C90252 = C90111 * C90250;
    const double C90258 = C90124 * C90250;
    const double C90265 = C90145 * C90250;
    const double C90281 = C90187 * C90250;
    const double C182 = (bs[1] * C90250 * C90102) / (C90101 * C89892);
    const double C90368 = C90366 * ae;
    const double C90367 = C90111 * C90365;
    const double C90373 = C90124 * C90365;
    const double C90380 = C90145 * C90365;
    const double C90396 = C90187 * C90365;
    const double C308 = (-(bs[1] * C90365 * C90102) / C90101) / C89849;
    const double C90422 = C90420 * C90124;
    const double C90427 = C90420 * C90145;
    const double C90432 = C90420 * C90187;
    const double C90311 = C90309 * ae;
    const double C90310 = C90111 * C90308;
    const double C90316 = C90124 * C90308;
    const double C90323 = C90145 * C90308;
    const double C90339 = C90187 * C90308;
    const double C245 = (bs[1] * C90308 * C90102) / (C90101 * C89892);
    const double C90446 = C90445 * ae;
    const double C90469 = C90467 * ae;
    const double C90468 = C90111 * C90466;
    const double C90474 = C90124 * C90466;
    const double C90481 = C90145 * C90466;
    const double C90497 = C90187 * C90466;
    const double C555 = (-(bs[1] * C90466 * C90102) / C90101) / C89849;
    const double C90522 = C90521 * ae;
    const double C90544 = C90542 * C90124;
    const double C90549 = C90542 * C90145;
    const double C90554 = C90542 * C90187;
    const double C89864 = C89850 / C89858;
    const double C89862 = C89848 / C89858;
    const double C90023 = C89966 / C89858;
    const double C90027 = C90020 / C89858;
    const double C90069 = C89981 / C89858;
    const double C90073 = C90066 / C89858;
    const double C89861 = 0 - C89859;
    const double C92060 = C92059 / C89849;
    const double C92076 = C92075 / C89892;
    const double C92097 = C92096 / C89892;
    const double C92108 = C92107 / C89892;
    const double C90030 = 0 - C90026;
    const double C92135 = C92134 / C89849;
    const double C90076 = 0 - C90072;
    const double C92146 = C92145 / C89849;
    const double C90108 = std::pow(C90104, 2);
    const double C90110 = -C90104;
    const double C90125 = std::pow(C90104, 4);
    const double C90188 = std::pow(C90104, 6);
    const double C90255 = C90253 * ce;
    const double C90370 = C90368 * ce;
    const double C90313 = C90311 * ce;
    const double C90447 = C90446 * ce;
    const double C90471 = C90469 * ce;
    const double C90523 = C90522 * ce;
    const double C89866 = C89861 * ae;
    const double C92061 = -C92060;
    const double C92077 = -C92076;
    const double C92098 = -C92097;
    const double C92109 = -C92108;
    const double C90033 = C90030 * ae;
    const double C92136 = -C92135;
    const double C90079 = C90076 * ae;
    const double C92147 = -C92146;
    const double C90113 = C90105 * C90108;
    const double C126 =
        (-(C90108 * C90105 * C90106 * ae * ce) / C89892) / C89849 -
        (ae * C90108 * C90105 * C90106 * ce) / C90107 -
        (C90106 *
         (C90105 * C90108 +
          std::pow(C90106, 2) * bs[3] * std::pow(-C90104, 3)) *
         ae * ce) /
            C90107;
    const double C188 =
        (-(C90108 * C90105 * C90106 * (yP - yQ) * ae * ce) / C89892) / C89849;
    const double C251 =
        (-(C90108 * C90105 * C90106 * (zP - zQ) * ae * ce) / C89892) / C89849;
    const double C314 =
        (-(C90108 * C90105 * C90248 * C90106 * ae * ce) / C89892) / C89849;
    const double C394 =
        (-((std::pow(C90248, 2) * C90105 * C90108 - (bs[1] * C90102) / C90101) *
           C90115) /
         C89892) /
        C89849;
    const double C474 =
        (-(C90108 * C90105 * C90248 * C90306 * ae * ce) / C89892) / C89849;
    const double C561 =
        (-(C90108 * C90105 * C90306 * C90106 * ae * ce) / C89892) / C89849;
    const double C641 =
        (-(C90108 * C90105 * C90306 * C90248 * ae * ce) / C89892) / C89849;
    const double C719 =
        (-((std::pow(C90306, 2) * C90105 * C90108 - (bs[1] * C90102) / C90101) *
           C90115) /
         C89892) /
        C89849;
    const double C114 = (C90106 * C90108 * C90105 * C90116) / C89849 -
                        (ae * bs[1] * C90102) / (C90101 * C89849);
    const double C118 = (ce * bs[1] * C90102) / (C90101 * C89892) -
                        (C90106 * C90108 * C90105 * C90112) / C89892;
    const double C183 = -(C90106 * C90108 * C90105 * C90250) / C89892;
    const double C246 = -(C90106 * C90108 * C90105 * C90308) / C89892;
    const double C309 = (C90106 * C90108 * C90105 * C90365) / C89849;
    const double C556 = (C90106 * C90108 * C90105 * C90466) / C89849;
    const double C813 = -(C90248 * C90108 * C90105 * C90112) / C89892;
    const double C817 = (C90248 * C90108 * C90105 * C90116) / C89849;
    const double C890 = (ce * bs[1] * C90102) / (C90101 * C89892) -
                        (C90248 * C90108 * C90105 * C90250) / C89892;
    const double C956 = -(C90248 * C90108 * C90105 * C90308) / C89892;
    const double C1022 = (C90248 * C90108 * C90105 * C90365) / C89849 -
                         (ae * bs[1] * C90102) / (C90101 * C89849);
    const double C1204 = (C90248 * C90108 * C90105 * C90466) / C89849;
    const double C1397 = -(C90306 * C90108 * C90105 * C90112) / C89892;
    const double C1401 = (C90306 * C90108 * C90105 * C90116) / C89849;
    const double C1471 = -(C90306 * C90108 * C90105 * C90250) / C89892;
    const double C1540 = (ce * bs[1] * C90102) / (C90101 * C89892) -
                         (C90306 * C90108 * C90105 * C90308) / C89892;
    const double C1606 = (C90306 * C90108 * C90105 * C90365) / C89849;
    const double C1788 = (C90306 * C90108 * C90105 * C90466) / C89849 -
                         (ae * bs[1] * C90102) / (C90101 * C89849);
    const double C90117 = std::pow(C90110, 3);
    const double C90146 = std::pow(C90110, 5);
    const double C90134 = C90125 * C90130;
    const double C90133 = C90125 * C90127;
    const double C90132 = C90126 * C90125;
    const double C90144 = C90124 * C90125;
    const double C90260 = C90125 * C90258;
    const double C90318 = C90125 * C90316;
    const double C90375 = C90125 * C90373;
    const double C90423 = C90422 * C90125;
    const double C90476 = C90125 * C90474;
    const double C90545 = C90544 * C90125;
    const double C90210 = C90188 * C90202;
    const double C90207 = C90188 * C90198;
    const double C90206 = C90196 * C90188;
    const double C90286 = C90188 * C90281;
    const double C90344 = C90188 * C90339;
    const double C90401 = C90188 * C90396;
    const double C90434 = C90432 * C90188;
    const double C90502 = C90188 * C90497;
    const double C90556 = C90554 * C90188;
    const double C90257 = C90124 * C90255;
    const double C90263 = C90145 * C90255;
    const double C90279 = C90187 * C90255;
    const double C90372 = C90124 * C90370;
    const double C90378 = C90145 * C90370;
    const double C90394 = C90187 * C90370;
    const double C90315 = C90124 * C90313;
    const double C90321 = C90145 * C90313;
    const double C90337 = C90187 * C90313;
    const double C90449 = C90124 * C90447;
    const double C90452 = C90145 * C90447;
    const double C90455 = C90187 * C90447;
    const double C90473 = C90124 * C90471;
    const double C90479 = C90145 * C90471;
    const double C90495 = C90187 * C90471;
    const double C90525 = C90124 * C90523;
    const double C90528 = C90145 * C90523;
    const double C90531 = C90187 * C90523;
    const double C89869 = C89866 / C89849;
    const double C92062 = std::exp(C92061);
    const double C92078 = std::exp(C92077);
    const double C92099 = std::exp(C92098);
    const double C92110 = std::exp(C92109);
    const double C90035 = C90033 / C89849;
    const double C92137 = std::exp(C92136);
    const double C90081 = C90079 / C89849;
    const double C92148 = std::exp(C92147);
    const double C109 = C90113 * C90114 - (bs[1] * C90102) / C90101;
    const double C804 = C90248 * C90106 * C90113;
    const double C806 = C90113 * C90420 - (bs[1] * C90102) / C90101;
    const double C1388 = C90306 * C90106 * C90113;
    const double C1390 = C90113 * C90542 - (bs[1] * C90102) / C90101;
    const double C3431 = C90306 * C90248 * C90113;
    const double C90121 = C90117 * C90119;
    const double C90120 = C90117 * C90118;
    const double C90123 = C90111 * C90117;
    const double C90254 = C90117 * C90252;
    const double C90312 = C90117 * C90310;
    const double C90369 = C90117 * C90367;
    const double C90470 = C90117 * C90468;
    const double C189 =
        (-(C90106 * C90117 * C90111 * C90106 * C90248 * ae * ce) / C89892) /
            C89849 -
        (ae * C90108 * C90105 * C90248 * ce) / C90107;
    const double C252 =
        (-(C90106 * C90117 * C90111 * C90106 * C90306 * ae * ce) / C89892) /
            C89849 -
        (ae * C90108 * C90105 * C90306 * ce) / C90107;
    const double C315 =
        (-(C90106 * C90117 * C90111 * C90248 * C90106 * ae * ce) / C89892) /
            C89849 -
        (C90108 * C90105 * C90248 * ae * ce) / C90107;
    const double C395 =
        (-(C90106 * (C90113 + std::pow(C90248, 2) * C90111 * C90117) * C90115) /
         C89892) /
        C89849;
    const double C475 =
        (-(C90106 * C90117 * C90111 * C90248 * C90306 * ae * ce) / C89892) /
        C89849;
    const double C476 =
        (-(C90125 * C90124 * C90447 * C90114) / C89892) / C89849 -
        (C90117 * C90111 * C90447) / C90107;
    const double C562 =
        (-(C90106 * C90117 * C90111 * C90306 * C90106 * ae * ce) / C89892) /
            C89849 -
        (C90108 * C90105 * C90306 * ae * ce) / C90107;
    const double C642 =
        (-(C90106 * C90117 * C90111 * C90306 * C90248 * ae * ce) / C89892) /
        C89849;
    const double C643 =
        (-(C90125 * C90124 * C90523 * C90114) / C89892) / C89849 -
        (C90117 * C90111 * C90523) / C90107;
    const double C720 =
        (-(C90106 * (C90113 + std::pow(C90306, 2) * C90111 * C90117) * C90115) /
         C89892) /
        C89849;
    const double C829 =
        (-(C90248 * (C90113 + C90114 * C90111 * C90117) * C90115) / C89892) /
        C89849;
    const double C898 =
        (-(C90248 * C90117 * C90111 * C90255) / C89892) / C89849 -
        (C90108 * C90105 * C90116 * ce) / C90107;
    const double C964 =
        (-(C90248 * C90117 * C90111 * C90313) / C89892) / C89849;
    const double C1030 =
        (-(C90248 * C90117 * C90111 * C90370) / C89892) / C89849 -
        (ae * C90108 * C90105 * C90112) / C90107;
    const double C1085 =
        (-(C90108 * C90105 * C90365 * ce) / C89892) / C89849 -
        (ae * C90108 * C90105 * C90250) / C90107 -
        (C90248 * (C90113 + C90420 * C90111 * C90117) * C90115) / C90107;
    const double C1146 =
        (-(C90248 * C90117 * C90111 * C90447) / C89892) / C89849 -
        (ae * C90108 * C90105 * C90308) / C90107;
    const double C1212 =
        (-(C90248 * C90117 * C90111 * C90471) / C89892) / C89849;
    const double C1267 =
        (-(C90248 * C90117 * C90111 * C90523) / C89892) / C89849 -
        (C90108 * C90105 * C90466 * ce) / C90107;
    const double C1328 =
        (-(C90248 * (C90113 + C90542 * C90111 * C90117) * C90115) / C89892) /
        C89849;
    const double C1413 =
        (-(C90306 * (C90113 + C90114 * C90111 * C90117) * C90115) / C89892) /
        C89849;
    const double C1479 =
        (-(C90306 * C90117 * C90111 * C90255) / C89892) / C89849;
    const double C1548 =
        (-(C90306 * C90117 * C90111 * C90313) / C89892) / C89849 -
        (C90108 * C90105 * C90116 * ce) / C90107;
    const double C1614 =
        (-(C90306 * C90117 * C90111 * C90370) / C89892) / C89849;
    const double C1672 =
        (-(C90306 * (C90113 + C90420 * C90111 * C90117) * C90115) / C89892) /
        C89849;
    const double C1727 =
        (-(C90306 * C90117 * C90111 * C90447) / C89892) / C89849 -
        (C90108 * C90105 * C90365 * ce) / C90107;
    const double C1796 =
        (-(C90306 * C90117 * C90111 * C90471) / C89892) / C89849 -
        (ae * C90108 * C90105 * C90112) / C90107;
    const double C1854 =
        (-(C90306 * C90117 * C90111 * C90523) / C89892) / C89849 -
        (ae * C90108 * C90105 * C90250) / C90107;
    const double C1909 =
        (-(C90108 * C90105 * C90466 * ce) / C89892) / C89849 -
        (ae * C90108 * C90105 * C90308) / C90107 -
        (C90306 * (C90113 + C90542 * C90111 * C90117) * C90115) / C90107;
    const double C90161 = C90146 * C90154;
    const double C90158 = C90146 * C90150;
    const double C90157 = C90149 * C90146;
    const double C90186 = C90145 * C90146;
    const double C90268 = C90146 * C90265;
    const double C90326 = C90146 * C90323;
    const double C90383 = C90146 * C90380;
    const double C90428 = C90427 * C90146;
    const double C90484 = C90146 * C90481;
    const double C90550 = C90549 * C90146;
    const double C90137 = C90106 * C90134;
    const double C90142 = C90134 * ce;
    const double C90808 = C90248 * C90134;
    const double C91084 = C90306 * C90134;
    const double C90136 = C90106 * C90133;
    const double C90143 = ae * C90133;
    const double C90830 = C90248 * C90133;
    const double C91119 = C90306 * C90133;
    const double C90155 = C90144 * ae;
    const double C90153 = C90144 * C90114;
    const double C90152 = C90106 * C90144;
    const double C90151 = C90144 * ce;
    const double C90856 = C90144 * C90420;
    const double C90855 = C90248 * C90144;
    const double C91164 = C90144 * C90542;
    const double C91163 = C90306 * C90144;
    const double C90264 = ae * C90260;
    const double C90262 = C90106 * C90260;
    const double C90846 = C90248 * C90260;
    const double C91136 = C90306 * C90260;
    const double C90322 = ae * C90318;
    const double C90320 = C90106 * C90318;
    const double C90909 = C90248 * C90318;
    const double C91154 = C90306 * C90318;
    const double C90379 = C90375 * ce;
    const double C90377 = C90106 * C90375;
    const double C90848 = C90248 * C90375;
    const double C91108 = C90306 * C90375;
    const double C90480 = C90476 * ce;
    const double C90478 = C90106 * C90476;
    const double C90937 = C90248 * C90476;
    const double C91156 = C90306 * C90476;
    const double C90218 = C90106 * C90210;
    const double C91281 = C90210 * C90420;
    const double C91480 = C90248 * C90210;
    const double C91562 = C90210 * C90542;
    const double C90215 = C90106 * C90207;
    const double C91301 = C90207 * C90420;
    const double C91498 = C90248 * C90207;
    const double C91582 = C90207 * C90542;
    const double C90290 = C90286 * C90114;
    const double C90884 = C90106 * C90286;
    const double C91322 = C90248 * C90286;
    const double C91601 = C90286 * C90542;
    const double C90348 = C90344 * C90114;
    const double C90921 = C90106 * C90344;
    const double C91369 = C90344 * C90420;
    const double C91516 = C90248 * C90344;
    const double C91622 = C90306 * C90344;
    const double C90404 = C90401 * C90114;
    const double C90887 = C90106 * C90401;
    const double C91327 = C90248 * C90401;
    const double C91492 = C90401 * C90542;
    const double C90505 = C90502 * C90114;
    const double C90949 = C90106 * C90502;
    const double C91395 = C90502 * C90420;
    const double C91519 = C90248 * C90502;
    const double C91628 = C90306 * C90502;
    const double C90259 = C90125 * C90257;
    const double C90266 = C90146 * C90263;
    const double C90283 = C90188 * C90279;
    const double C90374 = C90125 * C90372;
    const double C90381 = C90146 * C90378;
    const double C90398 = C90188 * C90394;
    const double C90317 = C90125 * C90315;
    const double C90324 = C90146 * C90321;
    const double C90341 = C90188 * C90337;
    const double C90450 = C90125 * C90449;
    const double C90453 = C90146 * C90452;
    const double C90457 = C90188 * C90455;
    const double C90475 = C90125 * C90473;
    const double C90482 = C90146 * C90479;
    const double C90499 = C90188 * C90495;
    const double C90526 = C90125 * C90525;
    const double C90529 = C90146 * C90528;
    const double C90533 = C90188 * C90531;
    const double C89871 = C89869 - C89862;
    const double C36677 = C92062 * C817;
    const double C41091 = C92062 * C1401;
    const double C89860 = C89856 * C92062;
    const double C92063 = C92062 * C92057;
    const double C92067 = C92066 * C92062;
    const double C92311 = C92062 * C92058;
    const double C92308 = C92062 / C89854;
    const double C31259 = C92320 * C92062;
    const double C89897 = C89895 * C92078;
    const double C92336 = C92078 * C92315;
    const double C93 =
        (C92078 * std::pow(C92315, 2)) / C89894 + C92078 / C92316;
    const double C95 = C92337 * C92078;
    const double C1984 = C92335 * C92078;
    const double C89922 = C89921 * C92099;
    const double C181 = -(2 * C89893 * (yC - yD) * C92099) / C89892;
    const double C92338 = C92099 * C92317;
    const double C798 =
        (C92099 * std::pow(C92317, 2)) / C89894 + C92099 / C92316;
    const double C800 = C92337 * C92099;
    const double C1986 = C92335 * C92099;
    const double C89937 = C89936 * C92110;
    const double C244 = -(2 * C89893 * (zC - zD) * C92110) / C89892;
    const double C92339 = C92110 * C92318;
    const double C1383 =
        (C92110 * std::pow(C92318, 2)) / C89894 + C92110 / C92316;
    const double C1385 = C92337 * C92110;
    const double C2710 = C92335 * C92110;
    const double C90037 = C90035 - C90027;
    const double C322 = C92137 * C309;
    const double C11308 = C92137 * C1606;
    const double C89968 = C89967 * C92137;
    const double C307 = -(2 * C89851 * (yA - yB) * C92137) / C89849;
    const double C92183 = C92137 * C92181;
    const double C92186 = C92066 * C92137;
    const double C92324 = C92137 * C92182;
    const double C92319 = C92137 / C89854;
    const double C4101 = C92320 * C92137;
    const double C90083 = C90081 - C90073;
    const double C569 = C92148 * C556;
    const double C5465 = C92148 * C1204;
    const double C89983 = C89982 * C92148;
    const double C554 = -(2 * C89851 * (zA - zB) * C92148) / C89849;
    const double C92209 = C92148 * C92207;
    const double C92212 = C92066 * C92148;
    const double C92328 = C92148 * C92208;
    const double C92321 = C92148 / C89854;
    const double C9516 = C92320 * C92148;
    const double C115 =
        (C90108 * C90105 * C90116 + C90106 * (C90106 * C90121 + C90113 * ae) +
         C90106 * C90113 * ae) /
        C89849;
    const double C816 = (C90248 * (C90106 * C90121 + C90113 * ae)) / C89849;
    const double C818 = (C90108 * C90105 * C90116 + C90121 * C90420) / C89849;
    const double C1400 = (C90306 * (C90106 * C90121 + C90113 * ae)) / C89849;
    const double C1402 = (C90108 * C90105 * C90116 + C90121 * C90542) / C89849;
    const double C3435 = (C90306 * C90248 * C90121) / C89849;
    const double C4888 =
        (2 * C90248 * C90121 + C90248 * (C90121 + C90134 * C90420)) / C89849;
    const double C5780 = (C90306 * (C90121 + C90134 * C90420)) / C89849;
    const double C10967 =
        (2 * C90306 * C90121 + C90306 * (C90121 + C90134 * C90542)) / C89849;
    const double C127 =
        (-(ae * (C90106 * C90120 + C90113 * ce)) / C89892) / C89849 -
        ((C90113 + C90114 * C90111 * C90117) * C90115) / C90107 -
        ((C90106 * C90121 + C90113 * ae) * ce) / C90107 +
        C90106 * ((-(C90121 * ce) / C89892) / C89849 - (ae * C90120) / C90107 -
                  (C90106 *
                   (C90111 * C90117 + C90114 * bs[4] * std::pow(C90104, 4)) *
                   C90115) /
                      C90107);
    const double C119 = -(C90106 * (C90106 * C90120 + C90113 * ce) +
                          C90108 * C90105 * C90112 + C90106 * C90113 * ce) /
                        C89892;
    const double C812 = -(C90248 * (C90106 * C90120 + C90113 * ce)) / C89892;
    const double C822 = -(C90120 * C90420 + C90108 * C90105 * C90112) / C89892;
    const double C1396 = -(C90306 * (C90106 * C90120 + C90113 * ce)) / C89892;
    const double C1406 = -(C90120 * C90542 + C90108 * C90105 * C90112) / C89892;
    const double C3439 = -(C90306 * C90248 * C90120) / C89892;
    const double C4886 = (-2 * C90248 * C90120) / C89892 -
                         (C90248 * (C90133 * C90420 + C90120)) / C89892;
    const double C5778 = -(C90306 * (C90133 * C90420 + C90120)) / C89892;
    const double C10965 = (-2 * C90306 * C90120) / C89892 -
                          (C90306 * (C90133 * C90542 + C90120)) / C89892;
    const double C90131 = C90123 * ae;
    const double C90129 = C90106 * C90123;
    const double C90128 = C90123 * ce;
    const double C90135 = C90123 + C90132;
    const double C90424 = C90123 + C90423;
    const double C90546 = C90123 + C90545;
    const double C90847 = C90248 * C90123;
    const double C91155 = C90306 * C90123;
    const double C396 =
        (-((C90123 + C90420 * C90124 * C90125) * C90115 * C90114) / C89892) /
            C89849 -
        ((C90113 + C90420 * C90111 * C90117) * C90115) / C90107;
    const double C721 =
        (-((C90123 + C90542 * C90124 * C90125) * C90115 * C90114) / C89892) /
            C89849 -
        ((C90113 + C90542 * C90111 * C90117) * C90115) / C90107;
    const double C110 =
        2 * C90106 * C90113 + C90106 * (C90113 + C90123 * C90114);
    const double C803 = C90248 * (C90113 + C90123 * C90114);
    const double C1387 = C90306 * (C90113 + C90123 * C90114);
    const double C4882 =
        2 * C90248 * C90113 + C90248 * (C90113 + C90123 * C90420);
    const double C5772 = C90306 * (C90113 + C90123 * C90420);
    const double C10961 =
        2 * C90306 * C90113 + C90306 * (C90113 + C90123 * C90542);
    const double C190 =
        (-(ae * C90106 * C90254) / C89892) / C89849 -
        (C90117 * C90111 * C90255) / C90107 +
        C90106 * ((-(C90106 * C90125 * C90124 * C90255) / C89892) / C89849 -
                  (ae * C90254) / C90107);
    const double C184 = -(C90254 * C90114 + C90108 * C90105 * C90250) / C89892;
    const double C185 = (-2 * C90106 * C90254) / C89892 -
                        (C90106 * (C90260 * C90114 + C90254)) / C89892;
    const double C888 = -(C90248 * (C90260 * C90114 + C90254) +
                          (C90113 + C90123 * C90114) * ce) /
                        C89892;
    const double C889 =
        -(C90248 * C90106 * C90254 + C90106 * C90113 * ce) / C89892;
    const double C891 = -(C90248 * (C90248 * C90254 + C90113 * ce) +
                          C90108 * C90105 * C90250 + C90248 * C90113 * ce) /
                        C89892;
    const double C1469 = -(C90306 * (C90260 * C90114 + C90254)) / C89892;
    const double C1470 = -(C90306 * C90106 * C90254) / C89892;
    const double C1472 = -(C90254 * C90542 + C90108 * C90105 * C90250) / C89892;
    const double C3513 = -(C90306 * (C90248 * C90254 + C90113 * ce)) / C89892;
    const double C11093 = (-2 * C90306 * C90254) / C89892 -
                          (C90306 * (C90260 * C90542 + C90254)) / C89892;
    const double C253 =
        (-(ae * C90106 * C90312) / C89892) / C89849 -
        (C90117 * C90111 * C90313) / C90107 +
        C90106 * ((-(C90106 * C90125 * C90124 * C90313) / C89892) / C89849 -
                  (ae * C90312) / C90107);
    const double C247 = -(C90312 * C90114 + C90108 * C90105 * C90308) / C89892;
    const double C248 = (-2 * C90106 * C90312) / C89892 -
                        (C90106 * (C90318 * C90114 + C90312)) / C89892;
    const double C954 = -(C90248 * (C90318 * C90114 + C90312)) / C89892;
    const double C955 = -(C90248 * C90106 * C90312) / C89892;
    const double C957 = -(C90312 * C90420 + C90108 * C90105 * C90308) / C89892;
    const double C1538 = -(C90306 * (C90318 * C90114 + C90312) +
                           (C90113 + C90123 * C90114) * ce) /
                         C89892;
    const double C1539 =
        -(C90306 * C90106 * C90312 + C90106 * C90113 * ce) / C89892;
    const double C1541 = -(C90306 * (C90306 * C90312 + C90113 * ce) +
                           C90108 * C90105 * C90308 + C90306 * C90113 * ce) /
                         C89892;
    const double C3587 =
        -(C90306 * C90248 * C90312 + C90248 * C90113 * ce) / C89892;
    const double C5114 = (-2 * C90248 * C90312) / C89892 -
                         (C90248 * (C90318 * C90420 + C90312)) / C89892;
    const double C5958 = -(C90306 * (C90318 * C90420 + C90312) +
                           (C90113 + C90123 * C90420) * ce) /
                         C89892;
    const double C316 =
        (-(C90106 * C90369 * ce) / C89892) / C89849 -
        (C90117 * C90111 * C90370) / C90107 +
        C90106 * ((-(C90106 * C90125 * C90124 * C90370) / C89892) / C89849 -
                  (C90369 * ce) / C90107);
    const double C310 = (C90108 * C90105 * C90365 + C90369 * C90114) / C89849;
    const double C311 =
        (2 * C90106 * C90369 + C90106 * (C90369 + C90375 * C90114)) / C89849;
    const double C1020 = (C90248 * (C90369 + C90375 * C90114) +
                          (C90113 + C90123 * C90114) * ae) /
                         C89849;
    const double C1021 =
        (C90248 * C90106 * C90369 + C90106 * C90113 * ae) / C89849;
    const double C1023 =
        (C90108 * C90105 * C90365 + C90248 * (C90248 * C90369 + C90113 * ae) +
         C90248 * C90113 * ae) /
        C89849;
    const double C1604 = (C90306 * (C90369 + C90375 * C90114)) / C89849;
    const double C1605 = (C90306 * C90106 * C90369) / C89849;
    const double C1607 = (C90108 * C90105 * C90365 + C90369 * C90542) / C89849;
    const double C3661 = (C90306 * (C90248 * C90369 + C90113 * ae)) / C89849;
    const double C11299 =
        (2 * C90306 * C90369 + C90306 * (C90369 + C90375 * C90542)) / C89849;
    const double C563 =
        (-(C90106 * C90470 * ce) / C89892) / C89849 -
        (C90117 * C90111 * C90471) / C90107 +
        C90106 * ((-(C90106 * C90125 * C90124 * C90471) / C89892) / C89849 -
                  (C90470 * ce) / C90107);
    const double C557 = (C90108 * C90105 * C90466 + C90470 * C90114) / C89849;
    const double C558 =
        (2 * C90106 * C90470 + C90106 * (C90470 + C90476 * C90114)) / C89849;
    const double C1202 = (C90248 * (C90470 + C90476 * C90114)) / C89849;
    const double C1203 = (C90248 * C90106 * C90470) / C89849;
    const double C1205 = (C90108 * C90105 * C90466 + C90470 * C90420) / C89849;
    const double C1786 = (C90306 * (C90470 + C90476 * C90114) +
                          (C90113 + C90123 * C90114) * ae) /
                         C89849;
    const double C1787 =
        (C90306 * C90106 * C90470 + C90106 * C90113 * ae) / C89849;
    const double C1789 =
        (C90108 * C90105 * C90466 + C90306 * (C90306 * C90470 + C90113 * ae) +
         C90306 * C90113 * ae) /
        C89849;
    const double C3875 =
        (C90306 * C90248 * C90470 + C90248 * C90113 * ae) / C89849;
    const double C5456 =
        (2 * C90248 * C90470 + C90248 * (C90470 + C90476 * C90420)) / C89849;
    const double C6288 = (C90306 * (C90470 + C90476 * C90420) +
                          (C90113 + C90123 * C90420) * ae) /
                         C89849;
    const double C324 = C92137 * C315;
    const double C403 = C92137 * C395;
    const double C483 = C92137 * C475;
    const double C486 = C92137 * C476;
    const double C571 = C92148 * C562;
    const double C650 = C92148 * C642;
    const double C653 = C92148 * C643;
    const double C728 = C92148 * C720;
    const double C36679 = C92062 * C829;
    const double C36763 = C92062 * C898;
    const double C36828 = C92062 * C964;
    const double C5467 = C92148 * C1212;
    const double C5584 = C92148 * C1267;
    const double C5675 = C92148 * C1328;
    const double C41093 = C92062 * C1413;
    const double C41205 = C92062 * C1479;
    const double C41309 = C92062 * C1548;
    const double C11310 = C92137 * C1614;
    const double C11425 = C92137 * C1672;
    const double C11524 = C92137 * C1727;
    const double C90166 = C90106 * C90161;
    const double C90184 = C90161 * ce;
    const double C90721 = C90248 * C90161;
    const double C90743 = C90306 * C90161;
    const double C90811 = C90161 * C90420;
    const double C91086 = C90161 * C90542;
    const double C90165 = C90106 * C90158;
    const double C90185 = ae * C90158;
    const double C90722 = C90248 * C90158;
    const double C90744 = C90306 * C90158;
    const double C90832 = C90158 * C90420;
    const double C91121 = C90158 * C90542;
    const double C90164 = C90144 + C90157;
    const double C90203 = C90186 * ae;
    const double C90201 = C90186 * C90114;
    const double C90200 = C90106 * C90186;
    const double C90199 = C90186 * ce;
    const double C90214 = C90186 + C90206;
    const double C90435 = C90186 + C90434;
    const double C90557 = C90186 + C90556;
    const double C91324 = C90186 * C90420;
    const double C91323 = C90248 * C90186;
    const double C91491 = C90186 * C90542;
    const double C91623 = C90306 * C90186;
    const double C90270 = C90268 * C90114;
    const double C90280 = ae * C90268;
    const double C90277 = C90106 * C90268;
    const double C90854 = C90248 * C90268;
    const double C91138 = C90268 * C90542;
    const double C91458 = C90306 * C90268;
    const double C90328 = C90326 * C90114;
    const double C90338 = ae * C90326;
    const double C90335 = C90106 * C90326;
    const double C90911 = C90326 * C90420;
    const double C91162 = C90306 * C90326;
    const double C91259 = C90248 * C90326;
    const double C90385 = C90383 * C90114;
    const double C90395 = C90383 * ce;
    const double C90392 = C90106 * C90383;
    const double C90857 = C90248 * C90383;
    const double C91109 = C90383 * C90542;
    const double C91431 = C90306 * C90383;
    const double C90429 = C90144 + C90428;
    const double C90486 = C90484 * C90114;
    const double C90496 = C90484 * ce;
    const double C90493 = C90106 * C90484;
    const double C90939 = C90484 * C90420;
    const double C91165 = C90306 * C90484;
    const double C91261 = C90248 * C90484;
    const double C90551 = C90144 + C90550;
    const double C90147 = C90142 / C89892;
    const double C90810 = C90142 / C90107;
    const double C5781 = (C90248 * C90121 + C90808 * C90542) / C89849;
    const double C90148 = C90143 / C90107;
    const double C5783 = -(C90830 * C90542 + C90248 * C90120) / C89892;
    const double C90160 = C90123 + C90153;
    const double C90162 = C90152 * ae;
    const double C90159 = C90152 * ce;
    const double C90190 = 2 * C90152;
    const double C90877 = C90248 * C90152;
    const double C91184 = C90306 * C90152;
    const double C90862 = C90123 + C90856;
    const double C90864 = C90855 * ae;
    const double C90861 = C90855 * ce;
    const double C91260 = C90306 * C90855;
    const double C91325 = 2 * C90855;
    const double C91170 = C90123 + C91164;
    const double C91172 = C91163 * ae;
    const double C91169 = C91163 * ce;
    const double C91625 = 2 * C91163;
    const double C90267 = C90264 / C90107;
    const double C1473 = -(C90262 * C90542 + C90106 * C90254) / C89892;
    const double C90325 = C90322 / C90107;
    const double C958 = -(C90320 * C90420 + C90106 * C90312) / C89892;
    const double C90382 = C90379 / C90107;
    const double C90852 = C90379 / C89892;
    const double C1608 = (C90106 * C90369 + C90377 * C90542) / C89849;
    const double C90483 = C90480 / C90107;
    const double C91160 = C90480 / C89892;
    const double C1206 = (C90106 * C90470 + C90478 * C90420) / C89849;
    const double C91283 = C90161 + C91281;
    const double C91482 = C91480 * C90542;
    const double C91564 = C90161 + C91562;
    const double C91305 = C91301 + C90158;
    const double C91500 = C91498 * C90542;
    const double C91586 = C91582 + C90158;
    const double C90293 = C90290 + C90268;
    const double C90890 = C90248 * C90884;
    const double C91147 = C90884 * C90542;
    const double C91605 = C91601 + C90268;
    const double C90351 = C90348 + C90326;
    const double C90923 = C90921 * C90420;
    const double C91191 = C90306 * C90921;
    const double C91268 = C90248 * C90921;
    const double C91373 = C91369 + C90326;
    const double C91522 = C90306 * C91516;
    const double C90407 = C90383 + C90404;
    const double C90893 = C90248 * C90887;
    const double C91114 = C90887 * C90542;
    const double C91494 = C90383 + C91492;
    const double C90508 = C90484 + C90505;
    const double C90951 = C90949 * C90420;
    const double C91194 = C90306 * C90949;
    const double C91270 = C90248 * C90949;
    const double C91398 = C90484 + C91395;
    const double C91525 = C90306 * C91519;
    const double C191 =
        2 * ((-(C90106 * C90259) / C89892) / C89849 - (ae * C90254) / C90107) -
        (ae * (C90260 * C90114 + C90254)) / C90107 +
        C90106 *
            ((-(ae * C90106 * C90260) / C89892) / C89849 - C90259 / C90107 +
             C90106 *
                 ((-(C90106 * C90146 * C90145 * C90255) / C89892) / C89849 -
                  (ae * C90260) / C90107));
    const double C897 = C90248 * ((-(C90106 * C90259) / C89892) / C89849 -
                                  (ae * C90254) / C90107) -
                        ((C90106 * C90121 + C90113 * ae) * ce) / C90107;
    const double C899 = (-(C90248 * C90121 * ce) / C89892) / C89849 -
                        (C90117 * C90111 * C90255) / C90107 +
                        C90248 * ((-(C90248 * C90259) / C89892) / C89849 -
                                  (C90121 * ce) / C90107);
    const double C1478 = C90306 * ((-(C90106 * C90259) / C89892) / C89849 -
                                   (ae * C90254) / C90107);
    const double C1480 = (-(C90259 * C90542) / C89892) / C89849 -
                         (C90117 * C90111 * C90255) / C90107;
    const double C3517 = C90306 * ((-(C90248 * C90259) / C89892) / C89849 -
                                   (C90121 * ce) / C90107);
    const double C90269 = C90106 * C90266;
    const double C90278 = C90266 / C90107;
    const double C90809 = C90248 * C90266;
    const double C5016 =
        2 * ((-(C90248 * C90259) / C89892) / C89849 - (C90121 * ce) / C90107) -
        ((C90121 + C90134 * C90420) * ce) / C90107 +
        C90248 *
            ((-(C90248 * C90134 * ce) / C89892) / C89849 - C90259 / C90107 +
             C90248 *
                 ((-(C90248 * C90266) / C89892) / C89849 - C90142 / C90107));
    const double C11097 =
        (-2 * C90306 * C90259) / C90107 +
        C90306 * ((-(C90266 * C90542) / C89892) / C89849 - C90259 / C90107);
    const double C90288 = C90106 * C90283;
    const double C91278 = C90248 * C90283;
    const double C91553 = C90283 * C90542;
    const double C317 =
        2 * ((-(C90106 * C90374) / C89892) / C89849 - (C90369 * ce) / C90107) -
        ((C90369 + C90375 * C90114) * ce) / C90107 +
        C90106 *
            ((-(C90106 * C90375 * ce) / C89892) / C89849 - C90374 / C90107 +
             C90106 *
                 ((-(C90106 * C90146 * C90145 * C90370) / C89892) / C89849 -
                  (C90375 * ce) / C90107));
    const double C1029 = C90248 * ((-(C90106 * C90374) / C89892) / C89849 -
                                   (C90369 * ce) / C90107) -
                         (ae * (C90106 * C90120 + C90113 * ce)) / C90107;
    const double C1031 = (-(ae * C90248 * C90120) / C89892) / C89849 -
                         (C90117 * C90111 * C90370) / C90107 +
                         C90248 * ((-(C90248 * C90374) / C89892) / C89849 -
                                   (ae * C90120) / C90107);
    const double C1613 = C90306 * ((-(C90106 * C90374) / C89892) / C89849 -
                                   (C90369 * ce) / C90107);
    const double C1615 = (-(C90374 * C90542) / C89892) / C89849 -
                         (C90117 * C90111 * C90370) / C90107;
    const double C3665 = (-(C90248 * C90306 * C90374) / C89892) / C89849 -
                         (ae * C90306 * C90120) / C90107;
    const double C90384 = C90106 * C90381;
    const double C90393 = C90381 / C90107;
    const double C90831 = C90248 * C90381;
    const double C91047 = C90306 * C90381;
    const double C6048 =
        (-(ae * C90306 * C90830) / C89892) / C89849 -
        (C90306 * C90374) / C90107 +
        C90248 * ((-(C90248 * C90306 * C90381) / C89892) / C89849 -
                  (ae * C90306 * C90133) / C90107);
    const double C6049 =
        C90248 * ((-(C90381 * C90542) / C89892) / C89849 - C90374 / C90107) -
        (ae * (C90133 * C90542 + C90120)) / C90107;
    const double C11303 =
        (-2 * C90306 * C90374) / C90107 +
        C90306 * ((-(C90381 * C90542) / C89892) / C89849 - C90374 / C90107);
    const double C90403 = C90106 * C90398;
    const double C91299 = C90248 * C90398;
    const double C91419 = C90398 * C90542;
    const double C91451 = C90306 * C90398;
    const double C254 =
        2 * ((-(C90106 * C90317) / C89892) / C89849 - (ae * C90312) / C90107) -
        (ae * (C90318 * C90114 + C90312)) / C90107 +
        C90106 *
            ((-(ae * C90106 * C90318) / C89892) / C89849 - C90317 / C90107 +
             C90106 *
                 ((-(C90106 * C90146 * C90145 * C90313) / C89892) / C89849 -
                  (ae * C90318) / C90107));
    const double C963 = C90248 * ((-(C90106 * C90317) / C89892) / C89849 -
                                  (ae * C90312) / C90107);
    const double C965 = (-(C90317 * C90420) / C89892) / C89849 -
                        (C90117 * C90111 * C90313) / C90107;
    const double C1547 = C90306 * ((-(C90106 * C90317) / C89892) / C89849 -
                                   (ae * C90312) / C90107) -
                         ((C90106 * C90121 + C90113 * ae) * ce) / C90107;
    const double C1549 = (-(C90306 * C90121 * ce) / C89892) / C89849 -
                         (C90117 * C90111 * C90313) / C90107 +
                         C90306 * ((-(C90306 * C90317) / C89892) / C89849 -
                                   (C90121 * ce) / C90107);
    const double C3591 = (-(C90306 * C90248 * C90317) / C89892) / C89849 -
                         (C90248 * C90121 * ce) / C90107;
    const double C90327 = C90106 * C90324;
    const double C90336 = C90324 / C90107;
    const double C91085 = C90306 * C90324;
    const double C91240 = C90248 * C90324;
    const double C5118 =
        (-2 * C90248 * C90317) / C90107 +
        C90248 * ((-(C90324 * C90420) / C89892) / C89849 - C90317 / C90107);
    const double C5961 =
        (-(C90306 * C90808 * ce) / C89892) / C89849 -
        (C90248 * C90317) / C90107 +
        C90306 * ((-(C90306 * C90248 * C90324) / C89892) / C89849 -
                  (C90808 * ce) / C90107);
    const double C5964 =
        C90306 * ((-(C90324 * C90420) / C89892) / C89849 - C90317 / C90107) -
        ((C90121 + C90134 * C90420) * ce) / C90107;
    const double C90346 = C90106 * C90341;
    const double C91292 = C90341 * C90420;
    const double C91478 = C90248 * C90341;
    const double C91560 = C90306 * C90341;
    const double C477 =
        (-2 * C90106 * C90450) / C90107 +
        C90106 * ((-(C90146 * C90145 * C90447 * C90114) / C89892) / C89849 -
                  C90450 / C90107);
    const double C1145 = (-(C90248 * C90106 * C90450) / C89892) / C89849 -
                         (ae * C90106 * C90312) / C90107;
    const double C1147 = (-(ae * C90248 * C90312) / C89892) / C89849 -
                         (C90117 * C90111 * C90447) / C90107 +
                         C90248 * ((-(C90248 * C90450) / C89892) / C89849 -
                                   (ae * C90312) / C90107);
    const double C1728 = (-(C90306 * C90369 * ce) / C89892) / C89849 -
                         (C90117 * C90111 * C90447) / C90107 +
                         C90306 * ((-(C90306 * C90450) / C89892) / C89849 -
                                   (C90369 * ce) / C90107);
    const double C1729 = (-(C90306 * C90106 * C90450) / C89892) / C89849 -
                         (C90106 * C90369 * ce) / C90107;
    const double C3805 = C90248 * ((-(C90306 * C90450) / C89892) / C89849 -
                                   (C90369 * ce) / C90107) -
                         (ae * (C90306 * C90312 + C90113 * ce)) / C90107;
    const double C90456 = C90453 / C90107;
    const double C90906 = C90106 * C90453;
    const double C90910 = C90248 * C90453;
    const double C91055 = C90306 * C90453;
    const double C478 =
        3 * ((-(C90453 * C90114) / C89892) / C89849 - C90450 / C90107) +
        C90106 * ((-2 * C90106 * C90453) / C90107 +
                  C90106 * ((-(C90188 * C90187 * C90447 * C90114) / C89892) /
                                C89849 -
                            C90453 / C90107));
    const double C1144 =
        C90248 * ((-(C90453 * C90114) / C89892) / C89849 - C90450 / C90107) -
        (ae * (C90318 * C90114 + C90312)) / C90107;
    const double C1148 =
        (-(ae * C90248 * C90320) / C89892) / C89849 -
        (C90106 * C90450) / C90107 +
        C90248 * ((-(C90248 * C90106 * C90453) / C89892) / C89849 -
                  (ae * C90320) / C90107);
    const double C1730 =
        (-(C90306 * C90377 * ce) / C89892) / C89849 -
        (C90106 * C90450) / C90107 +
        C90306 * ((-(C90306 * C90106 * C90453) / C89892) / C89849 -
                  (C90377 * ce) / C90107);
    const double C1731 =
        C90306 * ((-(C90453 * C90114) / C89892) / C89849 - C90450 / C90107) -
        ((C90369 + C90375 * C90114) * ce) / C90107;
    const double C90458 = C90457 * C90114;
    const double C90919 = C90106 * C90457;
    const double C91367 = C90248 * C90457;
    const double C91432 = C90306 * C90457;
    const double C564 =
        2 * ((-(C90106 * C90475) / C89892) / C89849 - (C90470 * ce) / C90107) -
        ((C90470 + C90476 * C90114) * ce) / C90107 +
        C90106 *
            ((-(C90106 * C90476 * ce) / C89892) / C89849 - C90475 / C90107 +
             C90106 *
                 ((-(C90106 * C90146 * C90145 * C90471) / C89892) / C89849 -
                  (C90476 * ce) / C90107));
    const double C1211 = C90248 * ((-(C90106 * C90475) / C89892) / C89849 -
                                   (C90470 * ce) / C90107);
    const double C1213 = (-(C90475 * C90420) / C89892) / C89849 -
                         (C90117 * C90111 * C90471) / C90107;
    const double C1795 = C90306 * ((-(C90106 * C90475) / C89892) / C89849 -
                                   (C90470 * ce) / C90107) -
                         (ae * (C90106 * C90120 + C90113 * ce)) / C90107;
    const double C1797 = (-(ae * C90306 * C90120) / C89892) / C89849 -
                         (C90117 * C90111 * C90471) / C90107 +
                         C90306 * ((-(C90306 * C90475) / C89892) / C89849 -
                                   (ae * C90120) / C90107);
    const double C3879 = (-(C90306 * C90248 * C90475) / C89892) / C89849 -
                         (ae * C90248 * C90120) / C90107;
    const double C90485 = C90106 * C90482;
    const double C90494 = C90482 / C90107;
    const double C91120 = C90306 * C90482;
    const double C91251 = C90248 * C90482;
    const double C5460 =
        (-2 * C90248 * C90475) / C90107 +
        C90248 * ((-(C90482 * C90420) / C89892) / C89849 - C90475 / C90107);
    const double C6294 =
        C90306 * ((-(C90482 * C90420) / C89892) / C89849 - C90475 / C90107) -
        (ae * (C90133 * C90420 + C90120)) / C90107;
    const double C6295 =
        (-(ae * C90306 * C90830) / C89892) / C89849 -
        (C90248 * C90475) / C90107 +
        C90306 * ((-(C90306 * C90248 * C90482) / C89892) / C89849 -
                  (ae * C90830) / C90107);
    const double C90504 = C90106 * C90499;
    const double C91386 = C90499 * C90420;
    const double C91497 = C90248 * C90499;
    const double C91580 = C90306 * C90499;
    const double C644 =
        (-2 * C90106 * C90526) / C90107 +
        C90106 * ((-(C90146 * C90145 * C90523 * C90114) / C89892) / C89849 -
                  C90526 / C90107);
    const double C1268 = (-(C90248 * C90470 * ce) / C89892) / C89849 -
                         (C90117 * C90111 * C90523) / C90107 +
                         C90248 * ((-(C90248 * C90526) / C89892) / C89849 -
                                   (C90470 * ce) / C90107);
    const double C1269 = (-(C90248 * C90106 * C90526) / C89892) / C89849 -
                         (C90106 * C90470 * ce) / C90107;
    const double C1853 = (-(C90306 * C90106 * C90526) / C89892) / C89849 -
                         (ae * C90106 * C90254) / C90107;
    const double C1855 = (-(ae * C90306 * C90254) / C89892) / C89849 -
                         (C90117 * C90111 * C90523) / C90107 +
                         C90306 * ((-(C90306 * C90526) / C89892) / C89849 -
                                   (ae * C90254) / C90107);
    const double C3949 = C90306 * ((-(C90248 * C90526) / C89892) / C89849 -
                                   (C90470 * ce) / C90107) -
                         (ae * (C90248 * C90254 + C90113 * ce)) / C90107;
    const double C90532 = C90529 / C90107;
    const double C90935 = C90106 * C90529;
    const double C90938 = C90248 * C90529;
    const double C91137 = C90306 * C90529;
    const double C645 =
        3 * ((-(C90529 * C90114) / C89892) / C89849 - C90526 / C90107) +
        C90106 * ((-2 * C90106 * C90529) / C90107 +
                  C90106 * ((-(C90188 * C90187 * C90523 * C90114) / C89892) /
                                C89849 -
                            C90529 / C90107));
    const double C1270 =
        (-(C90248 * C90478 * ce) / C89892) / C89849 -
        (C90106 * C90526) / C90107 +
        C90248 * ((-(C90248 * C90106 * C90529) / C89892) / C89849 -
                  (C90478 * ce) / C90107);
    const double C1271 =
        C90248 * ((-(C90529 * C90114) / C89892) / C89849 - C90526 / C90107) -
        ((C90470 + C90476 * C90114) * ce) / C90107;
    const double C1852 =
        C90306 * ((-(C90529 * C90114) / C89892) / C89849 - C90526 / C90107) -
        (ae * (C90260 * C90114 + C90254)) / C90107;
    const double C1856 =
        (-(ae * C90306 * C90262) / C89892) / C89849 -
        (C90106 * C90526) / C90107 +
        C90306 * ((-(C90306 * C90106 * C90529) / C89892) / C89849 -
                  (ae * C90262) / C90107);
    const double C90534 = C90533 * C90114;
    const double C90947 = C90106 * C90533;
    const double C91393 = C90248 * C90533;
    const double C91599 = C90306 * C90533;
    const double C89865 = C89860 / C89853;
    const double C89863 = 2 * C89860;
    const double C92312 = C92063 / C89858;
    const double C92310 = C92063 / C89849;
    const double C92309 = C92063 * C92058;
    const double C31258 = (2 * C92066 * C92063) / C89849;
    const double C92313 = C92067 * C92058;
    const double C92 = C92067 / C92314;
    const double C14805 = C92067 / C89854;
    const double C92333 = C92311 / C89849;
    const double C31257 = (C92062 * std::pow(C92057, 2)) / C89853 + C92308;
    const double C106 = ((0 * ce) / C89892 - C89897 / C89894) / (2 * C89892) +
                        (0 * ce) / C89892;
    const double C801 = -(2 * C89897) / C89892;
    const double C1987 =
        ((C92078 - (C89890 * 2 * C89897) / C89892) * ce) / C89892 -
        C89891 / C89896;
    const double C1988 = (0 * ce) / C89892 - C89897 / C89894;
    const double C94 = (2 * C92335 * C92336) / C89892;
    const double C1983 = C92336 / C89892;
    const double C105 =
        (((C92078 - (C89890 * 2 * C89897) / C89892) * ce) / C89892 -
         C89891 / C89896) /
            (2 * C89892) +
        ((C89890 * ((0 * ce) / C89892 - C89897 / C89894) + C1984) * ce) /
            C89892;
    const double C886 = ((0 * ce) / C89892 - C89922 / C89894) / (2 * C89892) +
                        (0 * ce) / C89892;
    const double C2059 =
        ((C92099 - (C89919 * 2 * C89922) / C89892) * ce) / C89892 -
        C89920 / C89896;
    const double C2060 = (0 * ce) / C89892 - C89922 / C89894;
    const double C799 = (2 * C92335 * C92338) / C89892;
    const double C1985 = C92338 / C89892;
    const double C885 =
        (((C92099 - (C89919 * 2 * C89922) / C89892) * ce) / C89892 -
         C89920 / C89896) /
            (2 * C89892) +
        ((C89919 * ((0 * ce) / C89892 - C89922 / C89894) + C1986) * ce) /
            C89892;
    const double C1536 = ((0 * ce) / C89892 - C89937 / C89894) / (2 * C89892) +
                         (0 * ce) / C89892;
    const double C2849 =
        ((C92110 - (C89934 * 2 * C89937) / C89892) * ce) / C89892 -
        C89935 / C89896;
    const double C2850 = (0 * ce) / C89892 - C89937 / C89894;
    const double C1384 = (2 * C92335 * C92339) / C89892;
    const double C2709 = C92339 / C89892;
    const double C1535 =
        (((C92110 - (C89934 * 2 * C89937) / C89892) * ce) / C89892 -
         C89935 / C89896) /
            (2 * C89892) +
        ((C89934 * ((0 * ce) / C89892 - C89937 / C89894) + C2710) * ce) /
            C89892;
    const double C90025 = C89968 / C89853;
    const double C90022 = 2 * C89968;
    const double C4328 =
        ((0 * ae) / C89849 - C89968 / C89853) / C89854 + (0 * ae) / C89849;
    const double C15033 =
        ((C92137 - (C89965 * 2 * C89968) / C89849) * ae) / C89849 -
        C89966 / C89858;
    const double C15034 = (0 * ae) / C89849 - C89968 / C89853;
    const double C31487 =
        (-C89966 / C89849) / C89854 -
        ((C92137 - (C89965 * 2 * C89968) / C89849) * be) / C89849;
    const double C31488 = (-(2 * C89968) / C89849) / C89854 - (0 * be) / C89849;
    const double C325 = C307 * C109;
    const double C323 = C307 * C118;
    const double C321 = C307 * C108;
    const double C402 = C307 * C183;
    const double C482 = C307 * C246;
    const double C2200 = C307 * C804;
    const double C2922 = C307 * C1388;
    const double C11311 = C307 * C1390;
    const double C11309 = C307 * C1397;
    const double C11307 = C307 * C1389;
    const double C11424 = C307 * C1471;
    const double C11523 = C307 * C1540;
    const double C14188 = C307 * C3431;
    const double C92326 = C92183 / C89858;
    const double C92325 = C92183 * C92182;
    const double C92322 = C92183 / C89849;
    const double C4100 = (2 * C92066 * C92183) / C89849;
    const double C4327 =
        (((C92137 - (C89965 * 2 * C89968) / C89849) * ae) / C89849 -
         C89966 / C89858) /
            C89854 +
        ((C89965 * ((0 * ae) / C89849 - C89968 / C89853) + C92186) * ae) /
            C89849;
    const double C92327 = C92186 * C92182;
    const double C36215 = C92186 / C92314;
    const double C44804 = C92186 / C89854;
    const double C92340 = C92324 / C89849;
    const double C4099 = (C92137 * std::pow(C92181, 2)) / C89853 + C92319;
    const double C90071 = C89983 / C89853;
    const double C90068 = 2 * C89983;
    const double C9999 =
        ((0 * ae) / C89849 - C89983 / C89853) / C89854 + (0 * ae) / C89849;
    const double C20274 =
        ((C92148 - (C89980 * 2 * C89983) / C89849) * ae) / C89849 -
        C89981 / C89858;
    const double C20275 = (0 * ae) / C89849 - C89983 / C89853;
    const double C61411 =
        (-C89981 / C89849) / C89854 -
        ((C92148 - (C89980 * 2 * C89983) / C89849) * be) / C89849;
    const double C61412 = (-(2 * C89983) / C89849) / C89854 - (0 * be) / C89849;
    const double C572 = C554 * C109;
    const double C570 = C554 * C118;
    const double C568 = C554 * C108;
    const double C649 = C554 * C183;
    const double C727 = C554 * C246;
    const double C2456 = C554 * C804;
    const double C3178 = C554 * C1388;
    const double C5470 = C554 * C806;
    const double C5466 = C554 * C813;
    const double C5464 = C554 * C805;
    const double C5583 = C554 * C890;
    const double C5674 = C554 * C956;
    const double C9211 = C554 * C3431;
    const double C92330 = C92209 / C89858;
    const double C92329 = C92209 * C92208;
    const double C92323 = C92209 / C89849;
    const double C9515 = (2 * C92066 * C92209) / C89849;
    const double C9998 =
        (((C92148 - (C89980 * 2 * C89983) / C89849) * ae) / C89849 -
         C89981 / C89858) /
            C89854 +
        ((C89980 * ((0 * ae) / C89849 - C89983 / C89853) + C92212) * ae) /
            C89849;
    const double C92331 = C92212 * C92208;
    const double C70786 = C92212 / C92314;
    const double C80243 = C92212 / C89854;
    const double C92343 = C92328 / C89849;
    const double C9514 = (C92148 * std::pow(C92207, 2)) / C89853 + C92321;
    const double C4901 = C92067 * C816;
    const double C37713 = C92062 * C816;
    const double C45552 = C92067 * C816;
    const double C36681 = C92062 * C818;
    const double C10980 = C92067 * C1400;
    const double C42873 = C92062 * C1400;
    const double C51574 = C92067 * C1400;
    const double C41095 = C92062 * C1402;
    const double C38971 = C92062 * C3435;
    const double C36685 = C92062 * C4888;
    const double C38967 = C92062 * C5780;
    const double C41106 = C92062 * C10967;
    const double C327 = C307 * C119;
    const double C574 = C554 * C119;
    const double C2202 = C307 * C812;
    const double C2458 = C554 * C812;
    const double C5472 = C554 * C822;
    const double C2924 = C307 * C1396;
    const double C3180 = C554 * C1396;
    const double C11313 = C307 * C1406;
    const double C9209 = C554 * C3439;
    const double C14190 = C307 * C3439;
    const double C5480 = C554 * C4886;
    const double C9203 = C554 * C5778;
    const double C11323 = C307 * C10965;
    const double C90140 = C90137 + C90131;
    const double C90850 = C90848 + C90131;
    const double C91158 = C91156 + C90131;
    const double C3806 =
        C90248 * ((-(C90306 * C90106 * C90453) / C89892) / C89849 -
                  (C90377 * ce) / C90107) -
        (ae * (C90306 * C90320 + C90129 * ce)) / C90107;
    const double C3950 =
        C90306 * ((-(C90248 * C90106 * C90529) / C89892) / C89849 -
                  (C90478 * ce) / C90107) -
        (ae * (C90248 * C90262 + C90129 * ce)) / C90107;
    const double C892 = -(C90248 * (C90248 * C90262 + C90129 * ce) +
                          C90106 * C90254 + C90248 * C90129 * ce) /
                        C89892;
    const double C1024 =
        (C90106 * C90369 + C90248 * (C90248 * C90377 + C90129 * ae) +
         C90248 * C90129 * ae) /
        C89849;
    const double C1542 = -(C90306 * (C90306 * C90320 + C90129 * ce) +
                           C90106 * C90312 + C90306 * C90129 * ce) /
                         C89892;
    const double C1790 =
        (C90106 * C90470 + C90306 * (C90306 * C90478 + C90129 * ae) +
         C90306 * C90129 * ae) /
        C89849;
    const double C3514 = -(C90306 * (C90248 * C90262 + C90129 * ce)) / C89892;
    const double C3588 =
        -(C90306 * C90248 * C90320 + C90248 * C90129 * ce) / C89892;
    const double C3662 = (C90306 * (C90248 * C90377 + C90129 * ae)) / C89849;
    const double C3876 =
        (C90306 * C90248 * C90478 + C90248 * C90129 * ae) / C89849;
    const double C807 = C90106 * C90113 + C90129 * C90420;
    const double C1391 = C90106 * C90113 + C90129 * C90542;
    const double C3432 = C90306 * C90248 * C90129;
    const double C4881 =
        2 * C90248 * C90129 + C90248 * (C90129 + C90152 * C90420);
    const double C5771 = C90306 * (C90129 + C90152 * C90420);
    const double C10960 =
        2 * C90306 * C90129 + C90306 * (C90129 + C90152 * C90542);
    const double C90139 = C90136 + C90128;
    const double C90849 = C90846 + C90128;
    const double C91157 = C91154 + C90128;
    const double C90138 = C90135 * C90115;
    const double C90425 = C90424 * C90115;
    const double C90547 = C90546 * C90115;
    const double C5955 = -(C90306 * (C90306 * C90909 + C90847 * ce) +
                           C90248 * C90312 + C90306 * C90847 * ce) /
                         C89892;
    const double C6289 =
        (C90248 * C90470 + C90306 * (C90306 * C90937 + C90847 * ae) +
         C90306 * C90847 * ae) /
        C89849;
    const double C5773 = C90248 * C90113 + C90847 * C90542;
    const double C13849 =
        2 * C90306 * C90847 + C90306 * (C90847 + C90855 * C90542);
    const double C406 = C92137 * C396;
    const double C731 = C92148 * C721;
    const double C329 = C307 * C110;
    const double C576 = C554 * C110;
    const double C2204 = C307 * C803;
    const double C2460 = C554 * C803;
    const double C2926 = C307 * C1387;
    const double C3182 = C554 * C1387;
    const double C5482 = C554 * C4882;
    const double C9205 = C554 * C5772;
    const double C11325 = C307 * C10961;
    const double C405 = C307 * C184;
    const double C652 = C554 * C184;
    const double C408 = C307 * C185;
    const double C655 = C554 * C185;
    const double C2293 = C307 * C888;
    const double C2549 = C554 * C888;
    const double C2288 = C307 * C889;
    const double C2544 = C554 * C889;
    const double C5585 = C554 * C891;
    const double C3011 = C307 * C1469;
    const double C3267 = C554 * C1469;
    const double C3008 = C307 * C1470;
    const double C3264 = C554 * C1470;
    const double C11427 = C307 * C1472;
    const double C9321 = C554 * C3513;
    const double C14311 = C307 * C3513;
    const double C11433 = C307 * C11093;
    const double C485 = C307 * C247;
    const double C730 = C554 * C247;
    const double C488 = C307 * C248;
    const double C733 = C554 * C248;
    const double C2376 = C307 * C954;
    const double C2632 = C554 * C954;
    const double C2379 = C307 * C955;
    const double C2635 = C554 * C955;
    const double C5677 = C554 * C957;
    const double C3097 = C307 * C1538;
    const double C3353 = C554 * C1538;
    const double C3092 = C307 * C1539;
    const double C3348 = C554 * C1539;
    const double C11525 = C307 * C1541;
    const double C9430 = C554 * C3587;
    const double C14422 = C307 * C3587;
    const double C5683 = C554 * C5114;
    const double C9435 = C554 * C5958;
    const double C328 = C92137 * C316;
    const double C326 = C92137 * C310;
    const double C330 = C92137 * C311;
    const double C2205 = C92137 * C1020;
    const double C15047 = C92186 * C1020;
    const double C31501 = C92186 * C1020;
    const double C2201 = C92137 * C1021;
    const double C15037 = C92186 * C1021;
    const double C31491 = C92186 * C1021;
    const double C2927 = C92137 * C1604;
    const double C2923 = C92137 * C1605;
    const double C11312 = C92137 * C1607;
    const double C14189 = C92137 * C3661;
    const double C26953 = C92186 * C3661;
    const double C41399 = C92186 * C3661;
    const double C11326 = C92137 * C11299;
    const double C575 = C92148 * C563;
    const double C573 = C92148 * C557;
    const double C577 = C92148 * C558;
    const double C2461 = C92148 * C1202;
    const double C2457 = C92148 * C1203;
    const double C5471 = C92148 * C1205;
    const double C3183 = C92148 * C1786;
    const double C20288 = C92212 * C1786;
    const double C61425 = C92212 * C1786;
    const double C3179 = C92148 * C1787;
    const double C20278 = C92212 * C1787;
    const double C61415 = C92212 * C1787;
    const double C9212 = C92148 * C3875;
    const double C26293 = C92212 * C3875;
    const double C67013 = C92212 * C3875;
    const double C5483 = C92148 * C5456;
    const double C9206 = C92148 * C6288;
    const double C26311 = C92212 * C6288;
    const double C67021 = C92212 * C6288;
    const double C90170 = C90166 + C90155;
    const double C90194 = C90184 / C89892;
    const double C91279 = C90184 / C90107;
    const double C90724 = C90721 * ce;
    const double C91280 = 2 * C90721;
    const double C91477 = C90306 * C90721;
    const double C13851 =
        (2 * C90306 * C90808 + C90306 * (C90808 + C90721 * C90542)) / C89849;
    const double C90746 = C90743 * ce;
    const double C91561 = 2 * C90743;
    const double C90813 = C90134 + C90811;
    const double C91088 = C90134 + C91086;
    const double C90169 = C90165 + C90151;
    const double C90195 = C90185 / C90107;
    const double C90725 = ae * C90722;
    const double C91300 = -2 * C90722;
    const double C91496 = C90306 * C90722;
    const double C13853 = (-2 * C90306 * C90830) / C89892 -
                          (C90306 * (C90722 * C90542 + C90830)) / C89892;
    const double C90747 = ae * C90744;
    const double C91581 = -2 * C90744;
    const double C90834 = C90832 + C90133;
    const double C91123 = C91121 + C90133;
    const double C90168 = C90164 * C90115;
    const double C90226 = C90218 + C90203;
    const double C91336 = C91327 + C90203;
    const double C91639 = C91628 + C90203;
    const double C90209 = C90144 + C90201;
    const double C90211 = C90200 * ae;
    const double C90208 = C90200 * ce;
    const double C90886 = C90200 * C90420;
    const double C90885 = C90248 * C90200;
    const double C91193 = C90200 * C90542;
    const double C91192 = C90306 * C90200;
    const double C90223 = C90215 + C90199;
    const double C91333 = C91322 + C90199;
    const double C91635 = C91622 + C90199;
    const double C90222 = C90214 * C90115;
    const double C90436 = C90435 * C90115;
    const double C90558 = C90557 * C90115;
    const double C91335 = C90144 + C91324;
    const double C91337 = C91323 * ae;
    const double C91334 = C91323 * ce;
    const double C91518 = C91323 * C90542;
    const double C91517 = C90306 * C91323;
    const double C91493 = C90144 + C91491;
    const double C91640 = C91623 * ae;
    const double C91636 = C91623 * ce;
    const double C90272 = C90270 + C90260;
    const double C90284 = C90280 / C90107;
    const double C90285 = -2 * C90277;
    const double C90282 = ae * C90277;
    const double C90876 = C90248 * C90277;
    const double C91145 = C90306 * C90277;
    const double C11092 = (-2 * C90306 * C90262) / C89892 -
                          (C90306 * (C90277 * C90542 + C90262)) / C89892;
    const double C90860 = C90854 + C90151;
    const double C91140 = C91138 + C90260;
    const double C91460 = ae * C91458;
    const double C91600 = -2 * C91458;
    const double C90330 = C90328 + C90318;
    const double C90342 = C90338 / C90107;
    const double C90343 = -2 * C90335;
    const double C90340 = ae * C90335;
    const double C90918 = C90248 * C90335;
    const double C91183 = C90306 * C90335;
    const double C5113 = (-2 * C90248 * C90320) / C89892 -
                         (C90248 * (C90335 * C90420 + C90320)) / C89892;
    const double C5957 = -(C90306 * (C90335 * C90420 + C90320) +
                           (C90129 + C90152 * C90420) * ce) /
                         C89892;
    const double C90913 = C90911 + C90318;
    const double C91168 = C91162 + C90151;
    const double C91262 = C90306 * C91259;
    const double C91368 = -2 * C91259;
    const double C91366 = ae * C91259;
    const double C90387 = C90375 + C90385;
    const double C90399 = C90395 / C90107;
    const double C91319 = C90395 / C89892;
    const double C90400 = 2 * C90392;
    const double C90397 = C90392 * ce;
    const double C90878 = C90248 * C90392;
    const double C91113 = C90306 * C90392;
    const double C11298 =
        (2 * C90306 * C90377 + C90306 * (C90377 + C90392 * C90542)) / C89849;
    const double C90863 = C90857 + C90155;
    const double C91110 = C90375 + C91109;
    const double C91433 = C91431 * ce;
    const double C91575 = 2 * C91431;
    const double C90430 = C90429 * C90115;
    const double C90488 = C90476 + C90486;
    const double C90500 = C90496 / C90107;
    const double C91619 = C90496 / C89892;
    const double C90501 = 2 * C90493;
    const double C90498 = C90493 * ce;
    const double C90946 = C90248 * C90493;
    const double C91185 = C90306 * C90493;
    const double C5455 =
        (2 * C90248 * C90478 + C90248 * (C90478 + C90493 * C90420)) / C89849;
    const double C6287 = (C90306 * (C90478 + C90493 * C90420) +
                          (C90129 + C90152 * C90420) * ae) /
                         C89849;
    const double C90941 = C90476 + C90939;
    const double C91171 = C91165 + C90155;
    const double C91263 = C90306 * C91261;
    const double C91394 = 2 * C91261;
    const double C91392 = C91261 * ce;
    const double C90552 = C90551 * C90115;
    const double C90156 = -C90147;
    const double C11201 =
        2 * ((-(C90306 * C90317) / C89892) / C89849 - (C90121 * ce) / C90107) -
        ((C90121 + C90134 * C90542) * ce) / C90107 +
        C90306 *
            ((-(C90306 * C90134 * ce) / C89892) / C89849 - C90317 / C90107 +
             C90306 * ((-(C90306 * C90324) / C89892) / C89849 - C90810));
    const double C40313 = C92062 * C5781;
    const double C5222 =
        2 * ((-(C90248 * C90374) / C89892) / C89849 - (ae * C90120) / C90107) -
        (ae * (C90133 * C90420 + C90120)) / C90107 +
        C90248 *
            ((-(ae * C90248 * C90133) / C89892) / C89849 - C90374 / C90107 +
             C90248 * ((-(C90248 * C90381) / C89892) / C89849 - C90148));
    const double C11613 =
        2 * ((-(C90306 * C90475) / C89892) / C89849 - (ae * C90120) / C90107) -
        (ae * (C90133 * C90542 + C90120)) / C90107 +
        C90306 *
            ((-(ae * C90306 * C90133) / C89892) / C89849 - C90475 / C90107 +
             C90306 * ((-(C90306 * C90482) / C89892) / C89849 - C90148));
    const double C14194 = C307 * C5783;
    const double C111 = 3 * (C90113 + C90123 * C90114) +
                        C90106 * (2 * C90129 + C90106 * C90160);
    const double C802 = C90248 * (2 * C90129 + C90106 * C90160);
    const double C808 = C90113 + C90123 * C90114 + C90160 * C90420;
    const double C1386 = C90306 * (2 * C90129 + C90106 * C90160);
    const double C1392 = C90113 + C90123 * C90114 + C90160 * C90542;
    const double C3433 = C90306 * C90248 * C90160;
    const double C5774 = C90248 * C90129 + C90877 * C90542;
    const double C4883 = 3 * (C90113 + C90123 * C90420) +
                         C90248 * (2 * C90847 + C90248 * C90862);
    const double C5775 = C90113 + C90123 * C90420 + C90862 * C90542;
    const double C8536 = C90306 * (2 * C90847 + C90248 * C90862);
    const double C10962 = 3 * (C90113 + C90123 * C90542) +
                          C90306 * (2 * C91155 + C90306 * C91170);
    const double C11691 =
        2 * ((-(C90306 * C90526) / C89892) / C89849 - (ae * C90254) / C90107) -
        (ae * (C90260 * C90542 + C90254)) / C90107 +
        C90306 *
            ((-(ae * C90306 * C90260) / C89892) / C89849 - C90526 / C90107 +
             C90306 * ((-(C90306 * C90529) / C89892) / C89849 - C90267));
    const double C9827 = C307 * C1473;
    const double C5378 =
        2 * ((-(C90248 * C90450) / C89892) / C89849 - (ae * C90312) / C90107) -
        (ae * (C90318 * C90420 + C90312)) / C90107 +
        C90248 *
            ((-(ae * C90248 * C90318) / C89892) / C89849 - C90450 / C90107 +
             C90248 * ((-(C90248 * C90453) / C89892) / C89849 - C90325));
    const double C4799 = C554 * C958;
    const double C6207 =
        (-(C90306 * C90450) / C89892) / C89849 - (C90369 * ce) / C90107 -
        (ae * (C90306 * C90909 + C90847 * ce)) / C90107 +
        C90248 * (C90248 * ((-(C90306 * C90453) / C89892) / C89849 - C90382) -
                  (ae * (C90306 * C90318 + C90128)) / C90107);
    const double C6208 =
        C90248 *
            ((-(C90306 * C90375 * ce) / C89892) / C89849 - C90450 / C90107 +
             C90306 * ((-(C90306 * C90453) / C89892) / C89849 - C90382)) -
        (ae * (C90306 * (C90306 * C90318 + C90128) + C90312 +
               C90306 * C90123 * ce)) /
            C90107;
    const double C90858 = -C90852;
    const double C9741 = C92137 * C1608;
    const double C5578 =
        2 * ((-(C90248 * C90526) / C89892) / C89849 - (C90470 * ce) / C90107) -
        ((C90470 + C90476 * C90420) * ce) / C90107 +
        C90248 *
            ((-(C90248 * C90476 * ce) / C89892) / C89849 - C90526 / C90107 +
             C90248 * ((-(C90248 * C90529) / C89892) / C89849 - C90483));
    const double C91166 = -C91160;
    const double C4625 = C92148 * C1206;
    const double C91285 = C90248 * C91283;
    const double C91484 = C90721 + C91482;
    const double C91566 = C90306 * C91564;
    const double C91308 = C90248 * C91305;
    const double C91502 = C91500 + C90722;
    const double C91589 = C90306 * C91586;
    const double C90296 = C90106 * C90293;
    const double C91022 = C90248 * C90293;
    const double C91149 = C91147 + C90277;
    const double C91608 = C90306 * C91605;
    const double C90354 = C90106 * C90351;
    const double C91219 = C90248 * C90351;
    const double C91230 = C90306 * C90351;
    const double C90925 = C90923 + C90335;
    const double C91271 = C90306 * C91268;
    const double C91376 = C90248 * C91373;
    const double C91546 = C90306 * C91373;
    const double C90410 = C90106 * C90407;
    const double C91024 = C90248 * C90407;
    const double C91115 = C90392 + C91114;
    const double C91576 = C90306 * C91494;
    const double C90511 = C90106 * C90508;
    const double C91220 = C90248 * C90508;
    const double C91232 = C90306 * C90508;
    const double C90953 = C90493 + C90951;
    const double C91272 = C90306 * C91270;
    const double C91401 = C90248 * C91398;
    const double C91548 = C90306 * C91398;
    const double C5022 = C92067 * C897;
    const double C37807 = C92062 * C897;
    const double C45665 = C92067 * C897;
    const double C36765 = C92062 * C899;
    const double C11104 = C92067 * C1478;
    const double C42996 = C92062 * C1478;
    const double C51708 = C92067 * C1478;
    const double C41210 = C92062 * C1480;
    const double C39053 = C92062 * C3517;
    const double C90271 = C90269 / C89892;
    const double C11098 =
        3 * ((-(C90266 * C90542) / C89892) / C89849 - C90259 / C90107) +
        C90306 * ((-2 * C90306 * C90266) / C90107 +
                  C90306 * ((-(C90283 * C90542) / C89892) / C89849 - C90278));
    const double C90812 = C90809 / C89892;
    const double C36767 = C92062 * C5016;
    const double C41217 = C92062 * C11097;
    const double C90292 = C90288 / C89892;
    const double C91282 = C91278 / C89892;
    const double C91554 = C91553 / C89892;
    const double C332 = C92137 * C317;
    const double C2203 = C92137 * C1029;
    const double C15041 = C92186 * C1029;
    const double C31495 = C92186 * C1029;
    const double C2925 = C92137 * C1613;
    const double C11314 = C92137 * C1615;
    const double C14191 = C92137 * C3665;
    const double C26957 = C92186 * C3665;
    const double C41403 = C92186 * C3665;
    const double C90386 = C90384 / C89892;
    const double C6050 =
        (-(C90381 * C90542) / C89892) / C89849 - C90374 / C90107 -
        (ae * (C90722 * C90542 + C90830)) / C90107 +
        C90248 * (C90248 * ((-(C90398 * C90542) / C89892) / C89849 - C90393) -
                  (ae * (C90158 * C90542 + C90133)) / C90107);
    const double C90833 = C90831 / C89892;
    const double C11304 =
        3 * ((-(C90381 * C90542) / C89892) / C89849 - C90374 / C90107) +
        C90306 * ((-2 * C91047) / C90107 +
                  C90306 * ((-(C90398 * C90542) / C89892) / C89849 - C90393));
    const double C30493 = C92186 * C6048;
    const double C44154 = C92186 * C6048;
    const double C67549 = C4101 * C6048;
    const double C14195 = C92137 * C6049;
    const double C26967 = C92186 * C6049;
    const double C41411 = C92186 * C6049;
    const double C11324 = C92137 * C11303;
    const double C90406 = C90403 / C89892;
    const double C91303 = C91299 / C89892;
    const double C91420 = C91419 / C89892;
    const double C91452 = C90248 * C91451;
    const double C5125 = C92067 * C963;
    const double C37883 = C92062 * C963;
    const double C45760 = C92067 * C963;
    const double C36831 = C92062 * C965;
    const double C11207 = C92067 * C1547;
    const double C43101 = C92062 * C1547;
    const double C51822 = C92067 * C1547;
    const double C41311 = C92062 * C1549;
    const double C39133 = C92062 * C3591;
    const double C90329 = C90327 / C89892;
    const double C5119 =
        3 * ((-(C90324 * C90420) / C89892) / C89849 - C90317 / C90107) +
        C90248 * ((-2 * C90248 * C90324) / C90107 +
                  C90248 * ((-(C90341 * C90420) / C89892) / C89849 - C90336));
    const double C91087 = C91085 / C89892;
    const double C36834 = C92062 * C5118;
    const double C40486 = C92062 * C5961;
    const double C39138 = C92062 * C5964;
    const double C90350 = C90346 / C89892;
    const double C91293 = C91292 / C89892;
    const double C91481 = C90306 * C91478;
    const double C91563 = C91560 / C89892;
    const double C489 = C92137 * C477;
    const double C2380 = C92137 * C1145;
    const double C15248 = C92186 * C1145;
    const double C31702 = C92186 * C1145;
    const double C11526 = C92137 * C1728;
    const double C3093 = C92137 * C1729;
    const double C14423 = C92137 * C3805;
    const double C27201 = C92186 * C3805;
    const double C41610 = C92186 * C3805;
    const double C90912 = C90910 / C89892;
    const double C91056 = C91055 / C89892;
    const double C491 = C92137 * C478;
    const double C2377 = C92137 * C1144;
    const double C15253 = C92186 * C1144;
    const double C31707 = C92186 * C1144;
    const double C4537 = C4101 * C1148;
    const double C17567 = C92186 * C1148;
    const double C34013 = C92186 * C1148;
    const double C9914 = C92137 * C1730;
    const double C3098 = C92137 * C1731;
    const double C90459 = C90458 / C89892;
    const double C90922 = C90248 * C90919;
    const double C91061 = C90306 * C90919;
    const double C91371 = C91367 / C89892;
    const double C91434 = C91432 / C89892;
    const double C579 = C92148 * C564;
    const double C2459 = C92148 * C1211;
    const double C5473 = C92148 * C1213;
    const double C3181 = C92148 * C1795;
    const double C20282 = C92212 * C1795;
    const double C61419 = C92212 * C1795;
    const double C9210 = C92148 * C3879;
    const double C26297 = C92212 * C3879;
    const double C67017 = C92212 * C3879;
    const double C90487 = C90485 / C89892;
    const double C5461 =
        3 * ((-(C90482 * C90420) / C89892) / C89849 - C90475 / C90107) +
        C90248 * ((-2 * C90248 * C90482) / C90107 +
                  C90248 * ((-(C90499 * C90420) / C89892) / C89849 - C90494));
    const double C91122 = C91120 / C89892;
    const double C5481 = C92148 * C5460;
    const double C9204 = C92148 * C6294;
    const double C26307 = C92212 * C6294;
    const double C67025 = C92212 * C6294;
    const double C30901 = C92212 * C6295;
    const double C40803 = C9516 * C6295;
    const double C70499 = C92212 * C6295;
    const double C90507 = C90504 / C89892;
    const double C91387 = C91386 / C89892;
    const double C91499 = C90306 * C91497;
    const double C91584 = C91580 / C89892;
    const double C656 = C92148 * C644;
    const double C5586 = C92148 * C1268;
    const double C2545 = C92148 * C1269;
    const double C3265 = C92148 * C1853;
    const double C20392 = C92212 * C1853;
    const double C61529 = C92212 * C1853;
    const double C9322 = C92148 * C3949;
    const double C26425 = C92212 * C3949;
    const double C67127 = C92212 * C3949;
    const double C90940 = C90938 / C89892;
    const double C91139 = C91137 / C89892;
    const double C658 = C92148 * C645;
    const double C4714 = C92148 * C1270;
    const double C2550 = C92148 * C1271;
    const double C3268 = C92148 * C1852;
    const double C20397 = C92212 * C1852;
    const double C61534 = C92212 * C1852;
    const double C10116 = C9516 * C1856;
    const double C23719 = C92212 * C1856;
    const double C64825 = C92212 * C1856;
    const double C90535 = C90534 / C89892;
    const double C90950 = C90248 * C90947;
    const double C91146 = C90306 * C90947;
    const double C91397 = C91393 / C89892;
    const double C91603 = C91599 / C89892;
    const double C89868 = C89857 - C89865;
    const double C89867 = C89847 * C89863;
    const double C4103 = (-C89863 / C89849) / C89854 - (0 * be) / C89849;
    const double C36216 = -C89863 / C89849;
    const double C45572 = C92310 * C4888;
    const double C45558 = C92310 * C818;
    const double C45554 = C92310 * C829;
    const double C45550 = C92310 * C817;
    const double C45673 = C92310 * C5016;
    const double C45669 = C92310 * C899;
    const double C45667 = C92310 * C898;
    const double C45769 = C92310 * C5118;
    const double C45763 = C92310 * C965;
    const double C45758 = C92310 * C964;
    const double C46996 = C92310 * C816;
    const double C47116 = C92310 * C897;
    const double C47226 = C92310 * C963;
    const double C48892 = C92310 * C3435;
    const double C48884 = C92310 * C5780;
    const double C49000 = C92310 * C3517;
    const double C49116 = C92310 * C5964;
    const double C49112 = C92310 * C3591;
    const double C51594 = C92310 * C1402;
    const double C51586 = C92310 * C5781;
    const double C51576 = C92310 * C1413;
    const double C51572 = C92310 * C1401;
    const double C51716 = C92310 * C1480;
    const double C51706 = C92310 * C1479;
    const double C51830 = C92310 * C5961;
    const double C51826 = C92310 * C1549;
    const double C51824 = C92310 * C1548;
    const double C53778 = C92310 * C1400;
    const double C53920 = C92310 * C1478;
    const double C54054 = C92310 * C1547;
    const double C81661 = C92310 * C10967;
    const double C81749 = C92310 * C11097;
    const double C92332 = C92309 / C89853;
    const double C32021 = C31258 * C816;
    const double C32131 = C31258 * C897;
    const double C32223 = C31258 * C963;
    const double C62387 = C31258 * C1400;
    const double C62497 = C31258 * C1478;
    const double C62589 = C31258 * C1547;
    const double C92334 = C92313 / C89849;
    const double C4097 = -C92333;
    const double C32041 = C31257 * C818;
    const double C32025 = C31257 * C829;
    const double C32019 = C31257 * C817;
    const double C32135 = C31257 * C899;
    const double C32133 = C31257 * C898;
    const double C32231 = C31257 * C965;
    const double C32221 = C31257 * C964;
    const double C33451 = C31257 * C816;
    const double C33563 = C31257 * C897;
    const double C33670 = C31257 * C963;
    const double C35353 = C31257 * C3435;
    const double C35459 = C31257 * C3517;
    const double C35570 = C31257 * C3591;
    const double C62407 = C31257 * C1402;
    const double C62391 = C31257 * C1413;
    const double C62385 = C31257 * C1401;
    const double C62505 = C31257 * C1480;
    const double C62495 = C31257 * C1479;
    const double C62593 = C31257 * C1549;
    const double C62591 = C31257 * C1548;
    const double C64081 = C31257 * C1400;
    const double C64197 = C31257 * C1478;
    const double C64300 = C31257 * C1547;
    const double C104 =
        (((0 - (C89890 * C89891) / C89892) * ce) / C89892 - (0 * de) / C89896) /
            (2 * C89892) +
        ((C89890 * (((C92078 - (C89890 * 2 * C89897) / C89892) * ce) / C89892 -
                    C89891 / C89896) +
          C1983) *
         ce) /
            C89892 +
        (0 * ce) / C89892 - C89897 / C89894;
    const double C884 =
        (((0 - (C89919 * C89920) / C89892) * ce) / C89892 - (0 * de) / C89896) /
            (2 * C89892) +
        ((C89919 * (((C92099 - (C89919 * 2 * C89922) / C89892) * ce) / C89892 -
                    C89920 / C89896) +
          C1985) *
         ce) /
            C89892 +
        (0 * ce) / C89892 - C89922 / C89894;
    const double C1534 =
        (((0 - (C89934 * C89935) / C89892) * ce) / C89892 - (0 * de) / C89896) /
            (2 * C89892) +
        ((C89934 * (((C92110 - (C89934 * 2 * C89937) / C89892) * ce) / C89892 -
                    C89935 / C89896) +
          C2709) *
         ce) /
            C89892 +
        (0 * ce) / C89892 - C89937 / C89894;
    const double C90032 = C90029 - C90025;
    const double C90028 = C89965 * C90022;
    const double C4536 = C4328 * C958;
    const double C67548 = C4328 * C5778;
    const double C67542 = C4328 * C5772;
    const double C67740 = C4328 * C5958;
    const double C15052 = C15033 * C110;
    const double C15048 = C15033 * C119;
    const double C15044 = C15033 * C109;
    const double C15042 = C15033 * C118;
    const double C15038 = C15033 * C108;
    const double C15159 = C15033 * C185;
    const double C15153 = C15033 * C184;
    const double C15148 = C15033 * C183;
    const double C15256 = C15033 * C248;
    const double C15250 = C15033 * C247;
    const double C15245 = C15033 * C246;
    const double C17338 = C15033 * C803;
    const double C17334 = C15033 * C812;
    const double C17330 = C15033 * C804;
    const double C17458 = C15033 * C888;
    const double C17454 = C15033 * C889;
    const double C17568 = C15033 * C955;
    const double C17564 = C15033 * C954;
    const double C18277 = C15033 * C1387;
    const double C18273 = C15033 * C1396;
    const double C18269 = C15033 * C1388;
    const double C18395 = C15033 * C1469;
    const double C18391 = C15033 * C1470;
    const double C18507 = C15033 * C1538;
    const double C18503 = C15033 * C1539;
    const double C26972 = C15033 * C1390;
    const double C26968 = C15033 * C1406;
    const double C26954 = C15033 * C1397;
    const double C26950 = C15033 * C1389;
    const double C27094 = C15033 * C1472;
    const double C27090 = C15033 * C1473;
    const double C27084 = C15033 * C1471;
    const double C27204 = C15033 * C1541;
    const double C27202 = C15033 * C1540;
    const double C30490 = C15033 * C3439;
    const double C30486 = C15033 * C3431;
    const double C30630 = C15033 * C3513;
    const double C30764 = C15033 * C3587;
    const double C86736 = C15033 * C10961;
    const double C86732 = C15033 * C10965;
    const double C86823 = C15033 * C11093;
    const double C89292 = C15033 * C5783;
    const double C15046 = C15034 * C803;
    const double C15040 = C15034 * C812;
    const double C15036 = C15034 * C804;
    const double C15155 = C15034 * C888;
    const double C15150 = C15034 * C889;
    const double C15252 = C15034 * C954;
    const double C15247 = C15034 * C955;
    const double C17566 = C15034 * C958;
    const double C26966 = C15034 * C5783;
    const double C26956 = C15034 * C3439;
    const double C26952 = C15034 * C3431;
    const double C27086 = C15034 * C3513;
    const double C27200 = C15034 * C3587;
    const double C30492 = C15034 * C5778;
    const double C30488 = C15034 * C5772;
    const double C30766 = C15034 * C5958;
    const double C31506 = C31487 * C110;
    const double C31502 = C31487 * C119;
    const double C31498 = C31487 * C109;
    const double C31496 = C31487 * C118;
    const double C31492 = C31487 * C108;
    const double C31613 = C31487 * C185;
    const double C31607 = C31487 * C184;
    const double C31602 = C31487 * C183;
    const double C31710 = C31487 * C248;
    const double C31704 = C31487 * C247;
    const double C31699 = C31487 * C246;
    const double C33784 = C31487 * C803;
    const double C33780 = C31487 * C812;
    const double C33776 = C31487 * C804;
    const double C33904 = C31487 * C888;
    const double C33900 = C31487 * C889;
    const double C34014 = C31487 * C955;
    const double C34010 = C31487 * C954;
    const double C34714 = C31487 * C1387;
    const double C34710 = C31487 * C1396;
    const double C34706 = C31487 * C1388;
    const double C34832 = C31487 * C1469;
    const double C34828 = C31487 * C1470;
    const double C34944 = C31487 * C1538;
    const double C34940 = C31487 * C1539;
    const double C41418 = C31487 * C10961;
    const double C41414 = C31487 * C10965;
    const double C41408 = C31487 * C1406;
    const double C41404 = C31487 * C1390;
    const double C41400 = C31487 * C1397;
    const double C41396 = C31487 * C1389;
    const double C41523 = C31487 * C11093;
    const double C41517 = C31487 * C1472;
    const double C41512 = C31487 * C1471;
    const double C41613 = C31487 * C1541;
    const double C41611 = C31487 * C1540;
    const double C43316 = C31487 * C1473;
    const double C44159 = C31487 * C5783;
    const double C44151 = C31487 * C3439;
    const double C44147 = C31487 * C3431;
    const double C44272 = C31487 * C3513;
    const double C44381 = C31487 * C3587;
    const double C31500 = C31488 * C803;
    const double C31494 = C31488 * C812;
    const double C31490 = C31488 * C804;
    const double C31609 = C31488 * C888;
    const double C31604 = C31488 * C889;
    const double C31706 = C31488 * C954;
    const double C31701 = C31488 * C955;
    const double C34012 = C31488 * C958;
    const double C41410 = C31488 * C5783;
    const double C41402 = C31488 * C3439;
    const double C41398 = C31488 * C3431;
    const double C41514 = C31488 * C3513;
    const double C41609 = C31488 * C3587;
    const double C44153 = C31488 * C5778;
    const double C44149 = C31488 * C5772;
    const double C44383 = C31488 * C5958;
    const double C338 = C323 + C324;
    const double C337 = C321 + C322;
    const double C413 = C402 + C403;
    const double C493 = C482 + C483;
    const double C11328 = C11309 + C11310;
    const double C11327 = C11307 + C11308;
    const double C11436 = C11424 + C11425;
    const double C11531 = C11523 + C11524;
    const double C92341 = C92325 / C89853;
    const double C15057 = C92322 * C317;
    const double C15053 = C92322 * C311;
    const double C15049 = C92322 * C316;
    const double C15045 = C92322 * C310;
    const double C15043 = C92322 * C315;
    const double C15039 = C92322 * C309;
    const double C15154 = C92322 * C396;
    const double C15149 = C92322 * C395;
    const double C15257 = C92322 * C477;
    const double C15251 = C92322 * C476;
    const double C15246 = C92322 * C475;
    const double C17339 = C92322 * C1020;
    const double C17335 = C92322 * C1029;
    const double C17331 = C92322 * C1021;
    const double C17569 = C92322 * C1145;
    const double C17565 = C92322 * C1144;
    const double C18278 = C92322 * C1604;
    const double C18274 = C92322 * C1613;
    const double C18270 = C92322 * C1605;
    const double C18508 = C92322 * C1731;
    const double C18504 = C92322 * C1729;
    const double C26973 = C92322 * C1607;
    const double C26969 = C92322 * C1615;
    const double C26965 = C92322 * C1608;
    const double C26955 = C92322 * C1614;
    const double C26951 = C92322 * C1606;
    const double C27085 = C92322 * C1672;
    const double C27209 = C92322 * C1730;
    const double C27205 = C92322 * C1728;
    const double C27203 = C92322 * C1727;
    const double C30491 = C92322 * C3665;
    const double C30487 = C92322 * C3661;
    const double C30765 = C92322 * C3805;
    const double C86737 = C92322 * C11299;
    const double C86733 = C92322 * C11303;
    const double C89293 = C92322 * C6049;
    const double C4326 =
        (((0 - (C89965 * C89966) / C89849) * ae) / C89849 - (0 * be) / C89858) /
            C89854 +
        ((C89965 * (((C92137 - (C89965 * 2 * C89968) / C89849) * ae) / C89849 -
                    C89966 / C89858) +
          C92322) *
         ae) /
            C89849 +
        (0 * ae) / C89849 - C89968 / C89853;
    const double C4345 = C4100 * C1020;
    const double C4339 = C4100 * C1029;
    const double C4333 = C4100 * C1021;
    const double C4541 = C4100 * C1144;
    const double C4535 = C4100 * C1145;
    const double C7138 = C4100 * C1148;
    const double C67553 = C4100 * C6049;
    const double C67547 = C4100 * C3665;
    const double C67541 = C4100 * C3661;
    const double C67743 = C4100 * C3805;
    const double C70169 = C4100 * C6048;
    const double C4344 = C4327 * C803;
    const double C4338 = C4327 * C812;
    const double C4332 = C4327 * C804;
    const double C4448 = C4327 * C888;
    const double C4442 = C4327 * C889;
    const double C4540 = C4327 * C954;
    const double C4534 = C4327 * C955;
    const double C7137 = C4327 * C958;
    const double C67552 = C4327 * C5783;
    const double C67546 = C4327 * C3439;
    const double C67540 = C4327 * C3431;
    const double C67650 = C4327 * C3513;
    const double C67742 = C4327 * C3587;
    const double C70168 = C4327 * C5778;
    const double C70162 = C4327 * C5772;
    const double C70385 = C4327 * C5958;
    const double C92342 = C92327 / C89849;
    const double C45240 = C44804 * C1148;
    const double C57720 = C44804 * C6048;
    const double C31260 = -C92340;
    const double C4349 = C4099 * C316;
    const double C4343 = C4099 * C310;
    const double C4341 = C4099 * C315;
    const double C4335 = C4099 * C309;
    const double C4451 = C4099 * C396;
    const double C4441 = C4099 * C395;
    const double C4543 = C4099 * C476;
    const double C4533 = C4099 * C475;
    const double C6917 = C4099 * C1029;
    const double C6911 = C4099 * C1021;
    const double C7140 = C4099 * C1145;
    const double C7878 = C4099 * C1613;
    const double C7872 = C4099 * C1605;
    const double C8101 = C4099 * C1729;
    const double C67561 = C4099 * C1607;
    const double C67555 = C4099 * C1615;
    const double C67545 = C4099 * C1614;
    const double C67539 = C4099 * C1606;
    const double C67649 = C4099 * C1672;
    const double C67747 = C4099 * C1728;
    const double C67745 = C4099 * C1727;
    const double C70167 = C4099 * C3665;
    const double C70161 = C4099 * C3661;
    const double C70384 = C4099 * C3805;
    const double C90078 = C90075 - C90071;
    const double C90074 = C89980 * C90068;
    const double C10115 = C9999 * C1473;
    const double C40802 = C9999 * C5783;
    const double C20293 = C20274 * C110;
    const double C20289 = C20274 * C119;
    const double C20285 = C20274 * C109;
    const double C20283 = C20274 * C118;
    const double C20279 = C20274 * C108;
    const double C20400 = C20274 * C185;
    const double C20394 = C20274 * C184;
    const double C20389 = C20274 * C183;
    const double C20496 = C20274 * C248;
    const double C20490 = C20274 * C247;
    const double C20485 = C20274 * C246;
    const double C22627 = C20274 * C803;
    const double C22623 = C20274 * C812;
    const double C22619 = C20274 * C804;
    const double C22747 = C20274 * C888;
    const double C22743 = C20274 * C889;
    const double C22857 = C20274 * C955;
    const double C22853 = C20274 * C954;
    const double C23602 = C20274 * C1387;
    const double C23598 = C20274 * C1396;
    const double C23594 = C20274 * C1388;
    const double C23720 = C20274 * C1469;
    const double C23716 = C20274 * C1470;
    const double C23832 = C20274 * C1538;
    const double C23828 = C20274 * C1539;
    const double C26312 = C20274 * C806;
    const double C26308 = C20274 * C822;
    const double C26294 = C20274 * C813;
    const double C26290 = C20274 * C805;
    const double C26428 = C20274 * C891;
    const double C26426 = C20274 * C890;
    const double C26550 = C20274 * C957;
    const double C26546 = C20274 * C958;
    const double C26540 = C20274 * C956;
    const double C30906 = C20274 * C3431;
    const double C30902 = C20274 * C3439;
    const double C31042 = C20274 * C3513;
    const double C31180 = C20274 * C3587;
    const double C57233 = C20274 * C4882;
    const double C57229 = C20274 * C4886;
    const double C57402 = C20274 * C5114;
    const double C60672 = C20274 * C5772;
    const double C60668 = C20274 * C5778;
    const double C60882 = C20274 * C5958;
    const double C20287 = C20275 * C1387;
    const double C20281 = C20275 * C1396;
    const double C20277 = C20275 * C1388;
    const double C20396 = C20275 * C1469;
    const double C20391 = C20275 * C1470;
    const double C20492 = C20275 * C1538;
    const double C20487 = C20275 * C1539;
    const double C23718 = C20275 * C1473;
    const double C26310 = C20275 * C5772;
    const double C26306 = C20275 * C5778;
    const double C26296 = C20275 * C3439;
    const double C26292 = C20275 * C3431;
    const double C26424 = C20275 * C3513;
    const double C26548 = C20275 * C5958;
    const double C26542 = C20275 * C3587;
    const double C30900 = C20275 * C5783;
    const double C61430 = C61411 * C110;
    const double C61426 = C61411 * C119;
    const double C61422 = C61411 * C109;
    const double C61420 = C61411 * C118;
    const double C61416 = C61411 * C108;
    const double C61537 = C61411 * C185;
    const double C61531 = C61411 * C184;
    const double C61526 = C61411 * C183;
    const double C61633 = C61411 * C248;
    const double C61627 = C61411 * C247;
    const double C61622 = C61411 * C246;
    const double C63742 = C61411 * C803;
    const double C63738 = C61411 * C812;
    const double C63734 = C61411 * C804;
    const double C63862 = C61411 * C888;
    const double C63858 = C61411 * C889;
    const double C63972 = C61411 * C955;
    const double C63968 = C61411 * C954;
    const double C64708 = C61411 * C1387;
    const double C64704 = C61411 * C1396;
    const double C64700 = C61411 * C1388;
    const double C64826 = C61411 * C1469;
    const double C64822 = C61411 * C1470;
    const double C64938 = C61411 * C1538;
    const double C64934 = C61411 * C1539;
    const double C67032 = C61411 * C4882;
    const double C67028 = C61411 * C4886;
    const double C67022 = C61411 * C822;
    const double C67018 = C61411 * C806;
    const double C67014 = C61411 * C813;
    const double C67010 = C61411 * C805;
    const double C67130 = C61411 * C891;
    const double C67128 = C61411 * C890;
    const double C67230 = C61411 * C5114;
    const double C67224 = C61411 * C957;
    const double C67219 = C61411 * C956;
    const double C68880 = C61411 * C958;
    const double C70504 = C61411 * C3431;
    const double C70500 = C61411 * C3439;
    const double C70496 = C61411 * C5772;
    const double C70492 = C61411 * C5778;
    const double C70612 = C61411 * C3513;
    const double C70728 = C61411 * C5958;
    const double C70724 = C61411 * C3587;
    const double C61424 = C61412 * C1387;
    const double C61418 = C61412 * C1396;
    const double C61414 = C61412 * C1388;
    const double C61533 = C61412 * C1469;
    const double C61528 = C61412 * C1470;
    const double C61629 = C61412 * C1538;
    const double C61624 = C61412 * C1539;
    const double C64824 = C61412 * C1473;
    const double C67024 = C61412 * C5778;
    const double C67020 = C61412 * C5772;
    const double C67016 = C61412 * C3439;
    const double C67012 = C61412 * C3431;
    const double C67126 = C61412 * C3513;
    const double C67226 = C61412 * C5958;
    const double C67221 = C61412 * C3587;
    const double C70498 = C61412 * C5783;
    const double C585 = C570 + C571;
    const double C584 = C568 + C569;
    const double C660 = C649 + C650;
    const double C738 = C727 + C728;
    const double C5485 = C5466 + C5467;
    const double C5484 = C5464 + C5465;
    const double C5591 = C5583 + C5584;
    const double C5686 = C5674 + C5675;
    const double C92344 = C92329 / C89853;
    const double C20298 = C92323 * C564;
    const double C20294 = C92323 * C558;
    const double C20290 = C92323 * C563;
    const double C20286 = C92323 * C557;
    const double C20284 = C92323 * C562;
    const double C20280 = C92323 * C556;
    const double C20401 = C92323 * C644;
    const double C20395 = C92323 * C643;
    const double C20390 = C92323 * C642;
    const double C20491 = C92323 * C721;
    const double C20486 = C92323 * C720;
    const double C22628 = C92323 * C1202;
    const double C22624 = C92323 * C1211;
    const double C22620 = C92323 * C1203;
    const double C22748 = C92323 * C1271;
    const double C22744 = C92323 * C1269;
    const double C23603 = C92323 * C1786;
    const double C23599 = C92323 * C1795;
    const double C23595 = C92323 * C1787;
    const double C23721 = C92323 * C1852;
    const double C23717 = C92323 * C1853;
    const double C26313 = C92323 * C1205;
    const double C26309 = C92323 * C1213;
    const double C26305 = C92323 * C1206;
    const double C26295 = C92323 * C1212;
    const double C26291 = C92323 * C1204;
    const double C26433 = C92323 * C1270;
    const double C26429 = C92323 * C1268;
    const double C26427 = C92323 * C1267;
    const double C26541 = C92323 * C1328;
    const double C30907 = C92323 * C3875;
    const double C30903 = C92323 * C3879;
    const double C31043 = C92323 * C3949;
    const double C57234 = C92323 * C5456;
    const double C57230 = C92323 * C5460;
    const double C60673 = C92323 * C6288;
    const double C60669 = C92323 * C6294;
    const double C9997 =
        (((0 - (C89980 * C89981) / C89849) * ae) / C89849 - (0 * be) / C89858) /
            C89854 +
        ((C89980 * (((C92148 - (C89980 * 2 * C89983) / C89849) * ae) / C89849 -
                    C89981 / C89858) +
          C92323) *
         ae) /
            C89849 +
        (0 * ae) / C89849 - C89983 / C89853;
    const double C10016 = C9515 * C1786;
    const double C10010 = C9515 * C1795;
    const double C10004 = C9515 * C1787;
    const double C10120 = C9515 * C1852;
    const double C10114 = C9515 * C1853;
    const double C13638 = C9515 * C1856;
    const double C40813 = C9515 * C6288;
    const double C40807 = C9515 * C6294;
    const double C40801 = C9515 * C3879;
    const double C40795 = C9515 * C3875;
    const double C40905 = C9515 * C3949;
    const double C44496 = C9515 * C6295;
    const double C10015 = C9998 * C1387;
    const double C10009 = C9998 * C1396;
    const double C10003 = C9998 * C1388;
    const double C10119 = C9998 * C1469;
    const double C10113 = C9998 * C1470;
    const double C10211 = C9998 * C1538;
    const double C10205 = C9998 * C1539;
    const double C13637 = C9998 * C1473;
    const double C40812 = C9998 * C5772;
    const double C40806 = C9998 * C5778;
    const double C40800 = C9998 * C3439;
    const double C40794 = C9998 * C3431;
    const double C40904 = C9998 * C3513;
    const double C41002 = C9998 * C5958;
    const double C40996 = C9998 * C3587;
    const double C44495 = C9998 * C5783;
    const double C92345 = C92331 / C89849;
    const double C80807 = C80243 * C1856;
    const double C86217 = C80243 * C6295;
    const double C60959 = -C92343;
    const double C10020 = C9514 * C563;
    const double C10014 = C9514 * C557;
    const double C10012 = C9514 * C562;
    const double C10006 = C9514 * C556;
    const double C10122 = C9514 * C643;
    const double C10112 = C9514 * C642;
    const double C10214 = C9514 * C721;
    const double C10204 = C9514 * C720;
    const double C12516 = C9514 * C1211;
    const double C12510 = C9514 * C1203;
    const double C12631 = C9514 * C1269;
    const double C13525 = C9514 * C1795;
    const double C13519 = C9514 * C1787;
    const double C13636 = C9514 * C1853;
    const double C40815 = C9514 * C1205;
    const double C40809 = C9514 * C1213;
    const double C40799 = C9514 * C1212;
    const double C40793 = C9514 * C1204;
    const double C40909 = C9514 * C1268;
    const double C40907 = C9514 * C1267;
    const double C40995 = C9514 * C1328;
    const double C44504 = C9514 * C3875;
    const double C44498 = C9514 * C3879;
    const double C44611 = C9514 * C3949;
    const double C116 = (2 * (C90106 * C90121 + C90113 * ae) +
                         C90106 * (C90121 + C90106 * C90140 + C90129 * ae) +
                         (C90113 + C90123 * C90114) * ae) /
                        C89849;
    const double C815 =
        (C90248 * (C90121 + C90106 * C90140 + C90129 * ae)) / C89849;
    const double C819 =
        (C90106 * C90121 + C90113 * ae + C90140 * C90420) / C89849;
    const double C1399 =
        (C90306 * (C90121 + C90106 * C90140 + C90129 * ae)) / C89849;
    const double C1403 =
        (C90106 * C90121 + C90113 * ae + C90140 * C90542) / C89849;
    const double C3436 = (C90306 * C90248 * C90140) / C89849;
    const double C5218 = (2 * (C90248 * C90369 + C90113 * ae) +
                          C90248 * (C90369 + C90248 * C90850 + C90847 * ae) +
                          (C90113 + C90123 * C90420) * ae) /
                         C89849;
    const double C6042 =
        (C90306 * (C90369 + C90248 * C90850 + C90847 * ae)) / C89849;
    const double C6043 =
        (C90248 * C90369 + C90113 * ae + C90850 * C90542) / C89849;
    const double C11609 = (2 * (C90306 * C90470 + C90113 * ae) +
                           C90306 * (C90470 + C90306 * C91158 + C91155 * ae) +
                           (C90113 + C90123 * C90542) * ae) /
                          C89849;
    const double C8099 = C4100 * C3806;
    const double C12403 = C92137 * C3806;
    const double C18502 = C92186 * C3806;
    const double C28337 = C92322 * C3806;
    const double C34939 = C92186 * C3806;
    const double C8318 = C92148 * C3950;
    const double C12629 = C9515 * C3950;
    const double C22742 = C92212 * C3950;
    const double C29811 = C92323 * C3950;
    const double C63857 = C92212 * C3950;
    const double C4444 = C4328 * C892;
    const double C4713 = C554 * C892;
    const double C7029 = C4327 * C892;
    const double C17452 = C15034 * C892;
    const double C26432 = C20274 * C892;
    const double C33898 = C31488 * C892;
    const double C68776 = C61411 * C892;
    const double C4331 = C4101 * C1024;
    const double C6913 = C4100 * C1024;
    const double C17333 = C92186 * C1024;
    const double C33779 = C92186 * C1024;
    const double C45034 = C44804 * C1024;
    const double C9913 = C307 * C1542;
    const double C10207 = C9999 * C1542;
    const double C13745 = C9998 * C1542;
    const double C23826 = C20275 * C1542;
    const double C27208 = C15033 * C1542;
    const double C43418 = C31487 * C1542;
    const double C64932 = C61412 * C1542;
    const double C10002 = C9516 * C1790;
    const double C13521 = C9515 * C1790;
    const double C23597 = C92212 * C1790;
    const double C64703 = C92212 * C1790;
    const double C80693 = C80243 * C1790;
    const double C7990 = C4327 * C3514;
    const double C8317 = C554 * C3514;
    const double C12289 = C307 * C3514;
    const double C12628 = C9998 * C3514;
    const double C18393 = C15034 * C3514;
    const double C22741 = C20275 * C3514;
    const double C28200 = C15033 * C3514;
    const double C29810 = C20274 * C3514;
    const double C34830 = C31488 * C3514;
    const double C53115 = C31487 * C3514;
    const double C63856 = C61412 * C3514;
    const double C78856 = C61411 * C3514;
    const double C8098 = C4327 * C3588;
    const double C8428 = C554 * C3588;
    const double C12402 = C307 * C3588;
    const double C12736 = C9998 * C3588;
    const double C18501 = C15034 * C3588;
    const double C22855 = C20275 * C3588;
    const double C28336 = C15033 * C3588;
    const double C29948 = C20274 * C3588;
    const double C34938 = C31488 * C3588;
    const double C53251 = C31487 * C3588;
    const double C63970 = C61412 * C3588;
    const double C78994 = C61411 * C3588;
    const double C7874 = C4100 * C3662;
    const double C12176 = C92137 * C3662;
    const double C18272 = C92186 * C3662;
    const double C28057 = C92322 * C3662;
    const double C34709 = C92186 * C3662;
    const double C8206 = C92148 * C3876;
    const double C12512 = C9515 * C3876;
    const double C22622 = C92212 * C3876;
    const double C29669 = C92323 * C3876;
    const double C63737 = C92212 * C3876;
    const double C4330 = C4328 * C807;
    const double C4624 = C554 * C807;
    const double C6912 = C4327 * C807;
    const double C17332 = C15034 * C807;
    const double C26304 = C20274 * C807;
    const double C33778 = C31488 * C807;
    const double C68668 = C61411 * C807;
    const double C9740 = C307 * C1391;
    const double C10001 = C9999 * C1391;
    const double C13520 = C9998 * C1391;
    const double C23596 = C20275 * C1391;
    const double C26964 = C15033 * C1391;
    const double C43206 = C31487 * C1391;
    const double C64702 = C61412 * C1391;
    const double C7873 = C4327 * C3432;
    const double C8205 = C554 * C3432;
    const double C12175 = C307 * C3432;
    const double C12511 = C9998 * C3432;
    const double C18271 = C15034 * C3432;
    const double C22621 = C20275 * C3432;
    const double C28056 = C15033 * C3432;
    const double C29668 = C20274 * C3432;
    const double C34708 = C31488 * C3432;
    const double C52971 = C31487 * C3432;
    const double C63736 = C61412 * C3432;
    const double C78714 = C61411 * C3432;
    const double C5478 = C554 * C4881;
    const double C6914 = C4328 * C4881;
    const double C7875 = C4328 * C5771;
    const double C8209 = C554 * C5771;
    const double C26302 = C20275 * C5771;
    const double C28058 = C15034 * C5771;
    const double C52973 = C31488 * C5771;
    const double C68666 = C61412 * C5771;
    const double C11321 = C307 * C10960;
    const double C13522 = C9999 * C10960;
    const double C120 =
        (-2 * (C90106 * C90120 + C90113 * ce)) / C89892 -
        (C90106 * (C90106 * C90139 + C90120 + C90129 * ce)) / C89892 -
        ((C90113 + C90123 * C90114) * ce) / C89892;
    const double C811 =
        -(C90248 * (C90106 * C90139 + C90120 + C90129 * ce)) / C89892;
    const double C823 =
        -(C90139 * C90420 + C90106 * C90120 + C90113 * ce) / C89892;
    const double C1395 =
        -(C90306 * (C90106 * C90139 + C90120 + C90129 * ce)) / C89892;
    const double C1407 =
        -(C90139 * C90542 + C90106 * C90120 + C90113 * ce) / C89892;
    const double C3440 = -(C90306 * C90248 * C90139) / C89892;
    const double C5012 =
        (-2 * (C90248 * C90254 + C90113 * ce)) / C89892 -
        (C90248 * (C90248 * C90849 + C90254 + C90847 * ce)) / C89892 -
        ((C90113 + C90123 * C90420) * ce) / C89892;
    const double C5870 =
        -(C90306 * (C90248 * C90849 + C90254 + C90847 * ce)) / C89892;
    const double C5871 =
        -(C90849 * C90542 + C90248 * C90254 + C90113 * ce) / C89892;
    const double C11197 =
        (-2 * (C90306 * C90312 + C90113 * ce)) / C89892 -
        (C90306 * (C90306 * C91157 + C90312 + C91155 * ce)) / C89892 -
        ((C90113 + C90123 * C90542) * ce) / C89892;
    const double C128 =
        2 * ((-(C90121 * ce) / C89892) / C89849 - (ae * C90120) / C90107 -
             (C90106 * C90138) / C90107) -
        (ae * (C90106 * C90139 + C90120 + C90129 * ce)) / C90107 -
        ((C90121 + C90106 * C90140 + C90129 * ae) * ce) / C90107 +
        C90106 *
            ((-(ae * C90139) / C89892) / C89849 - C90138 / C90107 -
             (C90140 * ce) / C90107 +
             C90106 *
                 ((-(C90134 * ce) / C89892) / C89849 - (ae * C90133) / C90107 -
                  (C90106 *
                   (C90124 * C90125 + C90114 * bs[5] * std::pow(C90110, 5)) *
                   C90115) /
                      C90107));
    const double C828 = (-(C90248 * C90121 * ce) / C89892) / C89849 -
                        (ae * C90248 * C90120) / C90107 -
                        (C90106 * C90248 * C90138) / C90107;
    const double C830 = (-(C90138 * C90420) / C89892) / C89849 -
                        ((C90113 + C90114 * C90111 * C90117) * C90115) / C90107;
    const double C1412 = (-(C90306 * C90121 * ce) / C89892) / C89849 -
                         (ae * C90306 * C90120) / C90107 -
                         (C90106 * C90306 * C90138) / C90107;
    const double C1414 =
        (-(C90138 * C90542) / C89892) / C89849 -
        ((C90113 + C90114 * C90111 * C90117) * C90115) / C90107;
    const double C3443 = (-(C90306 * C90248 * C90138) / C89892) / C89849;
    const double C397 =
        (-2 * C90106 * C90425) / C90107 +
        C90106 * ((-((C90144 + C90420 * C90145 * C90146) * C90115 * C90114) /
                   C89892) /
                      C89849 -
                  C90425 / C90107);
    const double C1086 =
        (-(ae * (C90248 * C90254 + C90113 * ce)) / C89892) / C89849 -
        ((C90113 + C90420 * C90111 * C90117) * C90115) / C90107 -
        ((C90248 * C90369 + C90113 * ae) * ce) / C90107 +
        C90248 * ((-(C90369 * ce) / C89892) / C89849 - (ae * C90254) / C90107 -
                  (C90248 * C90425) / C90107);
    const double C1087 = (-(C90106 * C90369 * ce) / C89892) / C89849 -
                         (ae * C90106 * C90254) / C90107 -
                         (C90248 * C90106 * C90425) / C90107;
    const double C1671 = (-(C90306 * C90106 * C90425) / C89892) / C89849;
    const double C1673 =
        (-(C90425 * C90542) / C89892) / C89849 -
        ((C90113 + C90420 * C90111 * C90117) * C90115) / C90107;
    const double C3735 = (-(C90306 * C90369 * ce) / C89892) / C89849 -
                         (ae * C90306 * C90254) / C90107 -
                         (C90248 * C90306 * C90425) / C90107;
    const double C722 =
        (-2 * C90106 * C90547) / C90107 +
        C90106 * ((-((C90144 + C90542 * C90145 * C90146) * C90115 * C90114) /
                   C89892) /
                      C89849 -
                  C90547 / C90107);
    const double C1327 = (-(C90248 * C90106 * C90547) / C89892) / C89849;
    const double C1329 =
        (-(C90547 * C90420) / C89892) / C89849 -
        ((C90113 + C90542 * C90111 * C90117) * C90115) / C90107;
    const double C1910 =
        (-(ae * (C90306 * C90312 + C90113 * ce)) / C89892) / C89849 -
        ((C90113 + C90542 * C90111 * C90117) * C90115) / C90107 -
        ((C90306 * C90470 + C90113 * ae) * ce) / C90107 +
        C90306 * ((-(C90470 * ce) / C89892) / C89849 - (ae * C90312) / C90107 -
                  (C90306 * C90547) / C90107);
    const double C1911 = (-(C90106 * C90470 * ce) / C89892) / C89849 -
                         (ae * C90106 * C90312) / C90107 -
                         (C90306 * C90106 * C90547) / C90107;
    const double C4019 = (-(C90248 * C90470 * ce) / C89892) / C89849 -
                         (ae * C90248 * C90312) / C90107 -
                         (C90306 * C90248 * C90547) / C90107;
    const double C14424 = C307 * C5955;
    const double C27206 = C15034 * C5955;
    const double C31178 = C20275 * C5955;
    const double C40998 = C9999 * C5955;
    const double C41615 = C31488 * C5955;
    const double C44385 = C31487 * C5955;
    const double C44720 = C9998 * C5955;
    const double C67748 = C4327 * C5955;
    const double C70722 = C61412 * C5955;
    const double C89502 = C15033 * C5955;
    const double C30905 = C92212 * C6289;
    const double C40797 = C9516 * C6289;
    const double C44502 = C9515 * C6289;
    const double C70503 = C92212 * C6289;
    const double C86211 = C80243 * C6289;
    const double C14192 = C307 * C5773;
    const double C26970 = C15034 * C5773;
    const double C30904 = C20275 * C5773;
    const double C40796 = C9999 * C5773;
    const double C41406 = C31488 * C5773;
    const double C44155 = C31487 * C5773;
    const double C44501 = C9998 * C5773;
    const double C67558 = C4327 * C5773;
    const double C70502 = C61412 * C5773;
    const double C89288 = C15033 * C5773;
    const double C41416 = C31488 * C13849;
    const double C44499 = C9999 * C13849;
    const double C73626 = C307 * C13849;
    const double C86734 = C15034 * C13849;
    const double C414 = C405 + C406;
    const double C661 = C652 + C653;
    const double C494 = C485 + C486;
    const double C739 = C730 + C731;
    const double C340 = C327 + C328;
    const double C339 = C325 + C326;
    const double C341 = C329 + C330;
    const double C2214 = C2204 + C2205;
    const double C2212 = C2200 + C2201;
    const double C2936 = C2926 + C2927;
    const double C2934 = C2922 + C2923;
    const double C11329 = C11311 + C11312;
    const double C14200 = C14188 + C14189;
    const double C11335 = C11325 + C11326;
    const double C587 = C574 + C575;
    const double C586 = C572 + C573;
    const double C588 = C576 + C577;
    const double C2470 = C2460 + C2461;
    const double C2468 = C2456 + C2457;
    const double C5486 = C5470 + C5471;
    const double C3192 = C3182 + C3183;
    const double C3190 = C3178 + C3179;
    const double C9216 = C9211 + C9212;
    const double C5492 = C5482 + C5483;
    const double C9214 = C9205 + C9206;
    const double C90173 = C90106 * C90170;
    const double C90191 = 2 * C90170;
    const double C90183 = C90170 * ce;
    const double C90818 = C90248 * C90170;
    const double C91093 = C90306 * C90170;
    const double C4887 =
        (2 * C90248 * C90140 + C90248 * (C90140 + C90170 * C90420)) / C89849;
    const double C5779 = (C90306 * (C90140 + C90170 * C90420)) / C89849;
    const double C10966 =
        (2 * C90306 * C90140 + C90306 * (C90140 + C90170 * C90542)) / C89849;
    const double C90205 = -C90194;
    const double C90727 = C90724 / C89892;
    const double C91479 = C90724 / C90107;
    const double C14077 =
        2 * ((-(C90306 * C91240) / C89892) / C89849 - (C90808 * ce) / C90107) -
        ((C90808 + C90721 * C90542) * ce) / C90107 +
        C90306 *
            ((-(C90306 * C90721 * ce) / C89892) / C89849 - C91240 / C90107 +
             C90306 * ((-(C90306 * C90248 * C90341) / C89892) / C89849 -
                       C90724 / C90107));
    const double C41102 = C92062 * C13851;
    const double C90749 = C90746 / C89892;
    const double C5965 =
        (-(C90324 * C90420) / C89892) / C89849 - C90317 / C90107 -
        (C90306 * C90813 * ce) / C90107 +
        C90306 * (C90306 * ((-(C90341 * C90420) / C89892) / C89849 - C90336) -
                  (C90813 * ce) / C90107);
    const double C8782 =
        C90306 * ((-2 * C90248 * C90324) / C90107 +
                  C90248 * ((-(C90341 * C90420) / C89892) / C89849 - C90336)) -
        ((2 * C90808 + C90248 * C90813) * ce) / C90107;
    const double C4889 = (3 * (C90121 + C90134 * C90420) +
                          C90248 * (2 * C90808 + C90248 * C90813)) /
                         C89849;
    const double C5785 = (C90121 + C90134 * C90420 + C90813 * C90542) / C89849;
    const double C8538 = (C90306 * (2 * C90808 + C90248 * C90813)) / C89849;
    const double C43816 =
        (2 * C90306 * C90813 + C90306 * (C90813 + C91283 * C90542)) / C89849;
    const double C10968 = (3 * (C90121 + C90134 * C90542) +
                           C90306 * (2 * C91084 + C90306 * C91088)) /
                          C89849;
    const double C90172 = C90106 * C90169;
    const double C90189 = -2 * C90169;
    const double C90181 = ae * C90169;
    const double C90839 = C90248 * C90169;
    const double C91128 = C90306 * C90169;
    const double C4885 = (-2 * C90248 * C90139) / C89892 -
                         (C90248 * (C90169 * C90420 + C90139)) / C89892;
    const double C5777 = -(C90306 * (C90169 * C90420 + C90139)) / C89892;
    const double C10964 = (-2 * C90306 * C90139) / C89892 -
                          (C90306 * (C90169 * C90542 + C90139)) / C89892;
    const double C90728 = C90725 / C90107;
    const double C91298 = C90725 / C89892;
    const double C91304 = C91300 / C89892;
    const double C41412 = C31488 * C13853;
    const double C44493 = C9999 * C13853;
    const double C73628 = C307 * C13853;
    const double C86730 = C15034 * C13853;
    const double C90750 = C90747 / C90107;
    const double C91579 = C90747 / C89892;
    const double C91585 = C91581 / C89892;
    const double C6297 =
        (-(C90482 * C90420) / C89892) / C89849 - C90475 / C90107 -
        (ae * C90306 * C90834) / C90107 +
        C90306 * (C90306 * ((-(C90499 * C90420) / C89892) / C89849 - C90494) -
                  (ae * C90834) / C90107);
    const double C9198 =
        (((-2 * C90830) / C89892 - (C90248 * C90834) / C89892) * ae) / C89849 +
        C90306 * ((-2 * C90248 * C90482) / C90107 +
                  C90248 * ((-(C90499 * C90420) / C89892) / C89849 - C90494));
    const double C4891 =
        (-3 * (C90133 * C90420 + C90120)) / C89892 +
        C90248 * ((-2 * C90830) / C89892 - (C90248 * C90834) / C89892);
    const double C5787 = -(C90834 * C90542 + C90133 * C90420 + C90120) / C89892;
    const double C8540 =
        C90306 * ((-2 * C90830) / C89892 - (C90248 * C90834) / C89892);
    const double C43817 = (-2 * C90306 * C90834) / C89892 -
                          (C90306 * (C91305 * C90542 + C90834)) / C89892;
    const double C14185 =
        (((-2 * C91119) / C89892 - (C90306 * C91123) / C89892) * ae) / C89849 +
        C90248 * ((-2 * C91047) / C90107 +
                  C90306 * ((-(C90398 * C90542) / C89892) / C89849 - C90393));
    const double C10970 =
        (-3 * (C90133 * C90542 + C90120)) / C89892 +
        C90306 * ((-2 * C91119) / C89892 - (C90306 * C91123) / C89892);
    const double C90171 = C90106 * C90168;
    const double C90182 = C90168 / C90107;
    const double C90565 = C90248 * C90168;
    const double C90643 = C90306 * C90168;
    const double C831 =
        (-((C90121 + C90134 * C90420) * ce) / C89892) / C89849 -
        (ae * (C90133 * C90420 + C90120)) / C90107 +
        C90106 * ((-(C90168 * C90420) / C89892) / C89849 - C90138 / C90107);
    const double C1415 =
        (-((C90121 + C90134 * C90542) * ce) / C89892) / C89849 -
        (ae * (C90133 * C90542 + C90120)) / C90107 +
        C90106 * ((-(C90168 * C90542) / C89892) / C89849 - C90138 / C90107);
    const double C4894 =
        (-2 * C90248 * C90138) / C90107 +
        C90248 * ((-(C90168 * C90420) / C89892) / C89849 - C90138 / C90107);
    const double C5790 =
        C90306 * ((-(C90168 * C90420) / C89892) / C89849 - C90138 / C90107);
    const double C10973 =
        (-2 * C90306 * C90138) / C90107 +
        C90306 * ((-(C90168 * C90542) / C89892) / C89849 - C90138 / C90107);
    const double C90230 = C90106 * C90226;
    const double C90820 = C90226 * C90420;
    const double C91095 = C90226 * C90542;
    const double C91243 = C90248 * C90226;
    const double C91343 = C90248 * C91336;
    const double C91644 = C90306 * C91639;
    const double C90219 = C90209 * ae;
    const double C90217 = C90106 * C90209;
    const double C90216 = C90209 * ce;
    const double C91023 = C90248 * C90209;
    const double C91231 = C90306 * C90209;
    const double C6557 =
        2 * C90248 * C90160 + C90248 * (C90160 + C90209 * C90420);
    const double C7566 = C90306 * (C90160 + C90209 * C90420);
    const double C12840 =
        2 * C90306 * C90160 + C90306 * (C90160 + C90209 * C90542);
    const double C90897 = C90893 + C90211;
    const double C91199 = C91194 + C90211;
    const double C90896 = C90890 + C90208;
    const double C91196 = C91191 + C90208;
    const double C90892 = C90152 + C90886;
    const double C90894 = C90885 * ae;
    const double C90891 = C90885 * ce;
    const double C91269 = C90306 * C90885;
    const double C13850 =
        2 * C90306 * C90877 + C90306 * (C90877 + C90885 * C90542);
    const double C91198 = C90152 + C91193;
    const double C91200 = C91192 * ae;
    const double C91197 = C91192 * ce;
    const double C90229 = C90106 * C90223;
    const double C90842 = C90223 * C90420;
    const double C91130 = C90223 * C90542;
    const double C91254 = C90248 * C90223;
    const double C91340 = C90248 * C91333;
    const double C91510 = C91333 * C90542;
    const double C91643 = C90306 * C91635;
    const double C90228 = C90106 * C90222;
    const double C90573 = C90222 * C90420;
    const double C90651 = C90222 * C90542;
    const double C90723 = C90248 * C90222;
    const double C90745 = C90306 * C90222;
    const double C90437 = C90436 * C90114;
    const double C90883 = C90106 * C90436;
    const double C91320 = C90248 * C90436;
    const double C91425 = C90436 * C90542;
    const double C91459 = C90306 * C90436;
    const double C90559 = C90558 * C90114;
    const double C90962 = C90106 * C90558;
    const double C91410 = C90558 * C90420;
    const double C91515 = C90248 * C90558;
    const double C91620 = C90306 * C90558;
    const double C91344 = C91335 * ae;
    const double C91342 = C90248 * C91335;
    const double C91341 = C91335 * ce;
    const double C91547 = C90306 * C91335;
    const double C43815 =
        2 * C90306 * C90862 + C90306 * (C90862 + C91335 * C90542);
    const double C91529 = C91525 + C91337;
    const double C91528 = C91522 + C91334;
    const double C91524 = C90855 + C91518;
    const double C91526 = C91517 * ae;
    const double C91523 = C91517 * ce;
    const double C91629 = C91493 * ae;
    const double C91626 = C90306 * C91493;
    const double C91624 = C91493 * ce;
    const double C186 =
        (-3 * (C90260 * C90114 + C90254)) / C89892 +
        C90106 * ((-2 * C90262) / C89892 - (C90106 * C90272) / C89892);
    const double C887 =
        C90248 * ((-2 * C90262) / C89892 - (C90106 * C90272) / C89892) -
        ((2 * C90129 + C90106 * C90160) * ce) / C89892;
    const double C893 = -(C90248 * (C90248 * C90272 + C90160 * ce) +
                          C90260 * C90114 + C90254 + C90248 * C90160 * ce) /
                        C89892;
    const double C1468 =
        C90306 * ((-2 * C90262) / C89892 - (C90106 * C90272) / C89892);
    const double C1474 = -(C90272 * C90542 + C90260 * C90114 + C90254) / C89892;
    const double C3515 = -(C90306 * (C90248 * C90272 + C90160 * ce)) / C89892;
    const double C12966 = (-2 * C90306 * C90272) / C89892 -
                          (C90306 * (C90293 * C90542 + C90272)) / C89892;
    const double C90289 = C90285 / C89892;
    const double C90287 = C90282 / C89892;
    const double C90882 = C90282 / C90107;
    const double C90879 = C90876 + C90159;
    const double C11430 = C307 * C11092;
    const double C13639 = C9999 * C11092;
    const double C90866 = C90248 * C90860;
    const double C91321 = -2 * C90860;
    const double C91317 = ae * C90860;
    const double C91507 = C90306 * C90860;
    const double C13967 = (-2 * C90306 * C90849) / C89892 -
                          (C90306 * (C90860 * C90542 + C90849)) / C89892;
    const double C11094 =
        (-3 * (C90260 * C90542 + C90254)) / C89892 +
        C90306 * ((-2 * C91136) / C89892 - (C90306 * C91140) / C89892);
    const double C91462 = C91460 / C90107;
    const double C91598 = C91460 / C89892;
    const double C91604 = C91600 / C89892;
    const double C249 =
        (-3 * (C90318 * C90114 + C90312)) / C89892 +
        C90106 * ((-2 * C90320) / C89892 - (C90106 * C90330) / C89892);
    const double C953 =
        C90248 * ((-2 * C90320) / C89892 - (C90106 * C90330) / C89892);
    const double C959 = -(C90330 * C90420 + C90318 * C90114 + C90312) / C89892;
    const double C1537 =
        C90306 * ((-2 * C90320) / C89892 - (C90106 * C90330) / C89892) -
        ((2 * C90129 + C90106 * C90160) * ce) / C89892;
    const double C1543 = -(C90306 * (C90306 * C90330 + C90160 * ce) +
                           C90318 * C90114 + C90312 + C90306 * C90160 * ce) /
                         C89892;
    const double C3589 =
        -(C90306 * C90248 * C90330 + C90248 * C90160 * ce) / C89892;
    const double C6795 = (-2 * C90248 * C90330) / C89892 -
                         (C90248 * (C90351 * C90420 + C90330)) / C89892;
    const double C7768 = -(C90306 * (C90351 * C90420 + C90330) +
                           (C90160 + C90209 * C90420) * ce) /
                         C89892;
    const double C90347 = C90343 / C89892;
    const double C90345 = C90340 / C89892;
    const double C90920 = C90340 / C90107;
    const double C5377 =
        2 * ((-(C90248 * C90906) / C89892) / C89849 - (ae * C90320) / C90107) -
        (ae * (C90335 * C90420 + C90320)) / C90107 +
        C90248 *
            ((-(ae * C90248 * C90335) / C89892) / C89849 - C90906 / C90107 +
             C90248 * ((-(C90248 * C90106 * C90457) / C89892) / C89849 -
                       C90340 / C90107));
    const double C5956 = -(C90306 * (C90306 * C90918 + C90877 * ce) +
                           C90248 * C90320 + C90306 * C90877 * ce) /
                         C89892;
    const double C91186 = C91183 + C90159;
    const double C5680 = C554 * C5113;
    const double C7135 = C4328 * C5113;
    const double C8096 = C4328 * C5957;
    const double C8433 = C554 * C5957;
    const double C26544 = C20275 * C5957;
    const double C28334 = C15034 * C5957;
    const double C53249 = C31488 * C5957;
    const double C68882 = C61412 * C5957;
    const double C5115 =
        (-3 * (C90318 * C90420 + C90312)) / C89892 +
        C90248 * ((-2 * C90909) / C89892 - (C90248 * C90913) / C89892);
    const double C5959 = -(C90306 * (C90306 * C90913 + C90862 * ce) +
                           C90318 * C90420 + C90312 + C90306 * C90862 * ce) /
                         C89892;
    const double C8780 =
        C90306 * ((-2 * C90909) / C89892 - (C90248 * C90913) / C89892) -
        ((2 * C90847 + C90248 * C90862) * ce) / C89892;
    const double C91174 = C90306 * C91168;
    const double C91468 = ae * C91168;
    const double C91621 = -2 * C91168;
    const double C91264 = C91262 + C90861;
    const double C91372 = C91368 / C89892;
    const double C91370 = C91366 / C89892;
    const double C91514 = C91366 / C90107;
    const double C312 = (3 * (C90369 + C90375 * C90114) +
                         C90106 * (2 * C90377 + C90106 * C90387)) /
                        C89849;
    const double C1019 = (C90248 * (2 * C90377 + C90106 * C90387) +
                          (2 * C90129 + C90106 * C90160) * ae) /
                         C89849;
    const double C1025 =
        (C90369 + C90375 * C90114 + C90248 * (C90248 * C90387 + C90160 * ae) +
         C90248 * C90160 * ae) /
        C89849;
    const double C1603 = (C90306 * (2 * C90377 + C90106 * C90387)) / C89849;
    const double C1609 = (C90369 + C90375 * C90114 + C90387 * C90542) / C89849;
    const double C3663 = (C90306 * (C90248 * C90387 + C90160 * ae)) / C89849;
    const double C13190 =
        (2 * C90306 * C90387 + C90306 * (C90387 + C90407 * C90542)) / C89849;
    const double C6209 =
        (-(C90306 * C90375 * ce) / C89892) / C89849 - C90450 / C90107 +
        C90306 * ((-(C90306 * C90453) / C89892) / C89849 - C90382) -
        (ae * (C90306 * (C90306 * C90248 * C90326 + C90861) + C90909 +
               C90306 * C90855 * ce)) /
            C90107 +
        C90248 *
            (C90248 *
                 ((-(C90306 * C90383 * ce) / C89892) / C89849 - C90456 +
                  C90306 * ((-(C90306 * C90457) / C89892) / C89849 - C90399)) -
             (ae * (C90306 * (C90306 * C90326 + C90151) + C90318 +
                    C90306 * C90144 * ce)) /
                 C90107);
    const double C91330 = -C91319;
    const double C90402 = C90397 / C89892;
    const double C91062 = C90397 / C90107;
    const double C6210 =
        (-(C90306 * C90906) / C89892) / C89849 - (C90377 * ce) / C90107 -
        (ae * (C90306 * C90918 + C90877 * ce)) / C90107 +
        C90248 * (C90248 * ((-(C90306 * C90919) / C89892) / C89849 -
                            C90397 / C90107) -
                  (ae * (C90306 * C90335 + C90159)) / C90107);
    const double C6211 =
        C90248 *
            ((-(C90306 * C90392 * ce) / C89892) / C89849 - C90906 / C90107 +
             C90306 *
                 ((-(C90306 * C90919) / C89892) / C89849 - C90397 / C90107)) -
        (ae * (C90306 * (C90306 * C90335 + C90159) + C90320 +
               C90306 * C90152 * ce)) /
            C90107;
    const double C90880 = C90878 + C90162;
    const double C11322 = C92137 * C11298;
    const double C90867 = C90248 * C90863;
    const double C91326 = 2 * C90863;
    const double C91318 = C90863 * ce;
    const double C14183 =
        (2 * C90306 * C90850 + C90306 * (C90850 + C90863 * C90542)) / C89849;
    const double C41393 =
        (3 * (C90850 + C90863 * C90542) +
         C90306 * (2 * C90306 * C90863 + C90306 * (C90863 + C91336 * C90542))) /
        C89849;
    const double C11300 = (3 * (C90369 + C90375 * C90542) +
                           C90306 * (2 * C91108 + C90306 * C91110)) /
                          C89849;
    const double C91435 = C91433 / C89892;
    const double C90433 = C90430 / C90107;
    const double C90853 = C90248 * C90430;
    const double C90875 = C90106 * C90430;
    const double C91051 = C90306 * C90430;
    const double C398 =
        3 * ((-(C90430 * C90114) / C89892) / C89849 - C90425 / C90107) +
        C90106 *
            ((-2 * C90106 * C90430) / C90107 +
             C90106 *
                 ((-((C90186 + C90420 * C90187 * C90188) * C90115 * C90114) /
                   C89892) /
                      C89849 -
                  C90430 / C90107));
    const double C1088 =
        (-(ae * (C90248 * C90262 + C90129 * ce)) / C89892) / C89849 -
        (C90106 * C90425) / C90107 -
        ((C90248 * C90377 + C90129 * ae) * ce) / C90107 +
        C90248 * ((-(C90377 * ce) / C89892) / C89849 - (ae * C90262) / C90107 -
                  (C90248 * C90106 * C90430) / C90107);
    const double C1089 =
        (-((C90369 + C90375 * C90114) * ce) / C89892) / C89849 -
        (ae * (C90260 * C90114 + C90254)) / C90107 +
        C90248 * ((-(C90430 * C90114) / C89892) / C89849 - C90425 / C90107);
    const double C1670 =
        C90306 * ((-(C90430 * C90114) / C89892) / C89849 - C90425 / C90107);
    const double C1674 = (-(C90106 * C90430 * C90542) / C89892) / C89849 -
                         (C90106 * C90425) / C90107;
    const double C3736 = (-(C90306 * C90377 * ce) / C89892) / C89849 -
                         (ae * C90306 * C90262) / C90107 -
                         (C90248 * C90306 * C90106 * C90430) / C90107;
    const double C5299 =
        2 * ((-(C90369 * ce) / C89892) / C89849 - (ae * C90254) / C90107 -
             (C90248 * C90425) / C90107) -
        (ae * (C90248 * C90849 + C90254 + C90847 * ce)) / C90107 -
        ((C90369 + C90248 * C90850 + C90847 * ae) * ce) / C90107 +
        C90248 * ((-(ae * C90849) / C89892) / C89849 - C90425 / C90107 -
                  (C90850 * ce) / C90107 +
                  C90248 * ((-C90379 / C89892) / C89849 - C90267 -
                            (C90248 * C90430) / C90107));
    const double C6128 = (-(ae * C90306 * C90849) / C89892) / C89849 -
                         (C90306 * C90425) / C90107 -
                         (C90306 * C90850 * ce) / C90107 +
                         C90248 * ((-(C90306 * C90375 * ce) / C89892) / C89849 -
                                   (ae * C90306 * C90260) / C90107 -
                                   (C90248 * C90306 * C90430) / C90107);
    const double C6129 =
        (-((C90369 + C90375 * C90542) * ce) / C89892) / C89849 -
        (ae * (C90260 * C90542 + C90254)) / C90107 +
        C90248 * ((-(C90430 * C90542) / C89892) / C89849 - C90425 / C90107);
    const double C11419 =
        (-2 * C90306 * C90425) / C90107 +
        C90306 * ((-(C90430 * C90542) / C89892) / C89849 - C90425 / C90107);
    const double C559 = (3 * (C90470 + C90476 * C90114) +
                         C90106 * (2 * C90478 + C90106 * C90488)) /
                        C89849;
    const double C1201 = (C90248 * (2 * C90478 + C90106 * C90488)) / C89849;
    const double C1207 = (C90470 + C90476 * C90114 + C90488 * C90420) / C89849;
    const double C1785 = (C90306 * (2 * C90478 + C90106 * C90488) +
                          (2 * C90129 + C90106 * C90160) * ae) /
                         C89849;
    const double C1791 =
        (C90470 + C90476 * C90114 + C90306 * (C90306 * C90488 + C90160 * ae) +
         C90306 * C90160 * ae) /
        C89849;
    const double C3877 =
        (C90306 * C90248 * C90488 + C90248 * C90160 * ae) / C89849;
    const double C7241 =
        (2 * C90248 * C90488 + C90248 * (C90488 + C90508 * C90420)) / C89849;
    const double C8202 = (C90306 * (C90488 + C90508 * C90420) +
                          (C90160 + C90209 * C90420) * ae) /
                         C89849;
    const double C91632 = -C91619;
    const double C90503 = C90498 / C89892;
    const double C90948 = C90498 / C90107;
    const double C5579 =
        2 * ((-(C90248 * C90935) / C89892) / C89849 - (C90478 * ce) / C90107) -
        ((C90478 + C90493 * C90420) * ce) / C90107 +
        C90248 *
            ((-(C90248 * C90493 * ce) / C89892) / C89849 - C90935 / C90107 +
             C90248 * ((-(C90248 * C90106 * C90533) / C89892) / C89849 -
                       C90498 / C90107));
    const double C6290 =
        (C90248 * C90478 + C90306 * (C90306 * C90946 + C90877 * ae) +
         C90306 * C90877 * ae) /
        C89849;
    const double C91187 = C91185 + C90162;
    const double C5479 = C92148 * C5455;
    const double C8210 = C92148 * C6287;
    const double C26303 = C92212 * C6287;
    const double C68667 = C92212 * C6287;
    const double C5457 = (3 * (C90470 + C90476 * C90420) +
                          C90248 * (2 * C90937 + C90248 * C90941)) /
                         C89849;
    const double C6291 =
        (C90470 + C90476 * C90420 + C90306 * (C90306 * C90941 + C90862 * ae) +
         C90306 * C90862 * ae) /
        C89849;
    const double C9196 = (C90306 * (2 * C90937 + C90248 * C90941) +
                          (2 * C90847 + C90248 * C90862) * ae) /
                         C89849;
    const double C91175 = C90306 * C91171;
    const double C91627 = 2 * C91171;
    const double C91618 = C91171 * ce;
    const double C91265 = C91263 + C90864;
    const double C91396 = C91392 / C89892;
    const double C90555 = C90552 / C90107;
    const double C90958 = C90106 * C90552;
    const double C91161 = C90306 * C90552;
    const double C91258 = C90248 * C90552;
    const double C723 =
        3 * ((-(C90552 * C90114) / C89892) / C89849 - C90547 / C90107) +
        C90106 *
            ((-2 * C90106 * C90552) / C90107 +
             C90106 *
                 ((-((C90186 + C90542 * C90187 * C90188) * C90115 * C90114) /
                   C89892) /
                      C89849 -
                  C90552 / C90107));
    const double C1326 =
        C90248 * ((-(C90552 * C90114) / C89892) / C89849 - C90547 / C90107);
    const double C1330 = (-(C90106 * C90552 * C90420) / C89892) / C89849 -
                         (C90106 * C90547) / C90107;
    const double C1912 =
        (-(ae * (C90306 * C90320 + C90129 * ce)) / C89892) / C89849 -
        (C90106 * C90547) / C90107 -
        ((C90306 * C90478 + C90129 * ae) * ce) / C90107 +
        C90306 * ((-(C90478 * ce) / C89892) / C89849 - (ae * C90320) / C90107 -
                  (C90306 * C90106 * C90552) / C90107);
    const double C1913 =
        (-((C90470 + C90476 * C90114) * ce) / C89892) / C89849 -
        (ae * (C90318 * C90114 + C90312)) / C90107 +
        C90306 * ((-(C90552 * C90114) / C89892) / C89849 - C90547 / C90107);
    const double C4020 = (-(C90248 * C90478 * ce) / C89892) / C89849 -
                         (ae * C90248 * C90320) / C90107 -
                         (C90306 * C90248 * C90106 * C90552) / C90107;
    const double C5669 =
        (-2 * C90248 * C90547) / C90107 +
        C90248 * ((-(C90552 * C90420) / C89892) / C89849 - C90547 / C90107);
    const double C6453 =
        (-(ae * (C90306 * C90909 + C90847 * ce)) / C89892) / C89849 -
        (C90248 * C90547) / C90107 -
        ((C90306 * C90937 + C90847 * ae) * ce) / C90107 +
        C90306 * ((-(C90937 * ce) / C89892) / C89849 - (ae * C90909) / C90107 -
                  (C90306 * C90248 * C90552) / C90107);
    const double C6455 =
        (-((C90470 + C90476 * C90420) * ce) / C89892) / C89849 -
        (ae * (C90318 * C90420 + C90312)) / C90107 +
        C90306 * ((-(C90552 * C90420) / C89892) / C89849 - C90547 / C90107);
    const double C11768 =
        2 * ((-(C90470 * ce) / C89892) / C89849 - (ae * C90312) / C90107 -
             (C90306 * C90547) / C90107) -
        (ae * (C90306 * C91157 + C90312 + C91155 * ce)) / C90107 -
        ((C90470 + C90306 * C91158 + C91155 * ae) * ce) / C90107 +
        C90306 * ((-(ae * C91157) / C89892) / C89849 - C90547 / C90107 -
                  (C91158 * ce) / C90107 +
                  C90306 * ((-C90480 / C89892) / C89849 - C90325 -
                            (C90306 * C90552) / C90107));
    const double C90163 = C90156 / C89849;
    const double C41313 = C92062 * C11201;
    const double C81831 = C92310 * C11201;
    const double C333 = C307 * C111;
    const double C580 = C554 * C111;
    const double C2208 = C307 * C802;
    const double C2464 = C554 * C802;
    const double C15054 = C15034 * C802;
    const double C31508 = C31488 * C802;
    const double C4346 = C4328 * C808;
    const double C4628 = C554 * C808;
    const double C17340 = C15034 * C808;
    const double C33786 = C31488 * C808;
    const double C2930 = C307 * C1386;
    const double C3186 = C554 * C1386;
    const double C20295 = C20275 * C1386;
    const double C61432 = C61412 * C1386;
    const double C9744 = C307 * C1392;
    const double C10017 = C9999 * C1392;
    const double C23604 = C20275 * C1392;
    const double C64710 = C61412 * C1392;
    const double C18279 = C15034 * C3433;
    const double C18611 = C554 * C3433;
    const double C22307 = C307 * C3433;
    const double C22629 = C20275 * C3433;
    const double C34716 = C31488 * C3433;
    const double C63744 = C61412 * C3433;
    const double C12179 = C307 * C5774;
    const double C12513 = C9999 * C5774;
    const double C26962 = C15034 * C5774;
    const double C29670 = C20275 * C5774;
    const double C43204 = C31488 * C5774;
    const double C78716 = C61412 * C5774;
    const double C37058 = C554 * C4883;
    const double C40810 = C9999 * C5775;
    const double C44157 = C31488 * C5775;
    const double C60670 = C20275 * C5775;
    const double C67556 = C4328 * C5775;
    const double C70494 = C61412 * C5775;
    const double C89290 = C15034 * C5775;
    const double C39422 = C554 * C8536;
    const double C57231 = C20275 * C8536;
    const double C67030 = C61412 * C8536;
    const double C70164 = C4328 * C8536;
    const double C71877 = C307 * C10962;
    const double C30767 = C92186 * C6207;
    const double C44384 = C92186 * C6207;
    const double C57912 = C44804 * C6207;
    const double C67741 = C4101 * C6207;
    const double C70386 = C4100 * C6207;
    const double C14425 = C92137 * C6208;
    const double C27207 = C92186 * C6208;
    const double C41616 = C92186 * C6208;
    const double C67749 = C4100 * C6208;
    const double C89503 = C92322 * C6208;
    const double C90865 = C90858 / C89849;
    const double C5588 = C92148 * C5578;
    const double C57319 = C92323 * C5578;
    const double C91173 = C91166 / C89849;
    const double C91287 = C91280 + C91285;
    const double C41086 = (3 * (C90808 + C90721 * C90542) +
                           C90306 * (2 * C91477 + C90306 * C91484)) /
                          C89849;
    const double C91568 = C91561 + C91566;
    const double C91311 = C91308 / C89892;
    const double C41087 =
        (-3 * (C90722 * C90542 + C90830)) / C89892 +
        C90306 * ((-2 * C91496) / C89892 - (C90306 * C91502) / C89892);
    const double C91592 = C91589 / C89892;
    const double C90299 = C90296 / C89892;
    const double C11095 =
        (-3 * (C90277 * C90542 + C90262)) / C89892 +
        C90306 * ((-2 * C91145) / C89892 - (C90306 * C91149) / C89892);
    const double C91611 = C91608 / C89892;
    const double C90357 = C90354 / C89892;
    const double C5116 =
        (-3 * (C90335 * C90420 + C90320)) / C89892 +
        C90248 * ((-2 * C90918) / C89892 - (C90248 * C90925) / C89892);
    const double C91379 = C91376 / C89892;
    const double C90413 = C90400 + C90410;
    const double C11301 = (3 * (C90377 + C90392 * C90542) +
                           C90306 * (2 * C91113 + C90306 * C91115)) /
                          C89849;
    const double C91577 = C91575 + C91576;
    const double C90514 = C90501 + C90511;
    const double C5458 = (3 * (C90478 + C90493 * C90420) +
                          C90248 * (2 * C90946 + C90248 * C90953)) /
                         C89849;
    const double C91404 = C91394 + C91401;
    const double C90273 = -C90271;
    const double C71762 = C92062 * C11098;
    const double C90814 = -C90812;
    const double C90295 = -C90292;
    const double C91284 = -C91282;
    const double C91555 = -C91554;
    const double C2213 = C2202 + C2203;
    const double C2935 = C2924 + C2925;
    const double C11330 = C11313 + C11314;
    const double C14201 = C14190 + C14191;
    const double C90388 = -C90386;
    const double C44162 = C92186 * C6050;
    const double C57722 = C44804 * C6050;
    const double C67551 = C4101 * C6050;
    const double C89295 = C92186 * C6050;
    const double C90835 = -C90833;
    const double C71876 = C92137 * C11304;
    const double C14203 = C14194 + C14195;
    const double C11334 = C11323 + C11324;
    const double C90409 = -C90406;
    const double C91307 = -C91303;
    const double C91421 = -C91420;
    const double C91453 = C91452 / C89892;
    const double C90331 = -C90329;
    const double C36836 = C92062 * C5119;
    const double C91089 = -C91087;
    const double C90353 = -C90350;
    const double C91294 = -C91293;
    const double C91483 = C91481 / C89892;
    const double C91565 = -C91563;
    const double C495 = C488 + C489;
    const double C2384 = C2379 + C2380;
    const double C11532 = C11525 + C11526;
    const double C3104 = C3092 + C3093;
    const double C14426 = C14422 + C14423;
    const double C90914 = -C90912;
    const double C91057 = -C91056;
    const double C2383 = C2376 + C2377;
    const double C3105 = C3097 + C3098;
    const double C90460 = -C90459;
    const double C90924 = C90922 / C89892;
    const double C91063 = C91061 / C89892;
    const double C91375 = -C91371;
    const double C91436 = -C91434;
    const double C2469 = C2458 + C2459;
    const double C5487 = C5472 + C5473;
    const double C3191 = C3180 + C3181;
    const double C9215 = C9209 + C9210;
    const double C90489 = -C90487;
    const double C37057 = C92148 * C5461;
    const double C91124 = -C91122;
    const double C5491 = C5480 + C5481;
    const double C9213 = C9203 + C9204;
    const double C90510 = -C90507;
    const double C91388 = -C91387;
    const double C91501 = C91499 / C89892;
    const double C91588 = -C91584;
    const double C662 = C655 + C656;
    const double C5592 = C5585 + C5586;
    const double C2556 = C2544 + C2545;
    const double C3272 = C3264 + C3265;
    const double C9325 = C9321 + C9322;
    const double C90942 = -C90940;
    const double C91141 = -C91139;
    const double C2557 = C2549 + C2550;
    const double C3273 = C3267 + C3268;
    const double C90536 = -C90535;
    const double C90952 = C90950 / C89892;
    const double C91148 = C91146 / C89892;
    const double C91400 = -C91397;
    const double C91607 = -C91603;
    const double C45569 = C89868 * C4881;
    const double C45559 = C89868 * C807;
    const double C45555 = C89868 * C812;
    const double C45551 = C89868 * C804;
    const double C45670 = C89868 * C892;
    const double C45664 = C89868 * C889;
    const double C45766 = C89868 * C5113;
    const double C45764 = C89868 * C958;
    const double C45759 = C89868 * C955;
    const double C47001 = C89868 * C808;
    const double C46993 = C89868 * C803;
    const double C47117 = C89868 * C888;
    const double C47227 = C89868 * C954;
    const double C48889 = C89868 * C3432;
    const double C48881 = C89868 * C5771;
    const double C49001 = C89868 * C3514;
    const double C49113 = C89868 * C5957;
    const double C49109 = C89868 * C3588;
    const double C51591 = C89868 * C1391;
    const double C51583 = C89868 * C5774;
    const double C51577 = C89868 * C1396;
    const double C51573 = C89868 * C1388;
    const double C51713 = C89868 * C1473;
    const double C51707 = C89868 * C1470;
    const double C51827 = C89868 * C1542;
    const double C51821 = C89868 * C1539;
    const double C52557 = C89868 * C3433;
    const double C53775 = C89868 * C1387;
    const double C53917 = C89868 * C1469;
    const double C54055 = C89868 * C1538;
    const double C81658 = C89868 * C10960;
    const double C81746 = C89868 * C11092;
    const double C83296 = C89868 * C1392;
    const double C103 =
        (C89868 / C89854 - (0 * be) / C89849) / C89854 + (0 * ae) / C89849;
    const double C14810 = C89868 / C89854 - (0 * be) / C89849;
    const double C31264 = C89868 / C89854 + (0 * ae) / C89849;
    const double C89870 = C89867 / C89849;
    const double C4918 = C4103 * C4881;
    const double C4908 = C4103 * C807;
    const double C4904 = C4103 * C812;
    const double C4900 = C4103 * C804;
    const double C5027 = C4103 * C892;
    const double C5021 = C4103 * C889;
    const double C5131 = C4103 * C5113;
    const double C5129 = C4103 * C958;
    const double C5124 = C4103 * C955;
    const double C6570 = C4103 * C808;
    const double C6562 = C4103 * C803;
    const double C6688 = C4103 * C888;
    const double C6800 = C4103 * C954;
    const double C8557 = C4103 * C3432;
    const double C8549 = C4103 * C5771;
    const double C8673 = C4103 * C3514;
    const double C8789 = C4103 * C5957;
    const double C8785 = C4103 * C3588;
    const double C10997 = C4103 * C10960;
    const double C10987 = C4103 * C1391;
    const double C10983 = C4103 * C1396;
    const double C10979 = C4103 * C1388;
    const double C11110 = C4103 * C11092;
    const double C11108 = C4103 * C1473;
    const double C11103 = C4103 * C1470;
    const double C11212 = C4103 * C1542;
    const double C11206 = C4103 * C1539;
    const double C12853 = C4103 * C1392;
    const double C12845 = C4103 * C1387;
    const double C12973 = C4103 * C1469;
    const double C13083 = C4103 * C1538;
    const double C13860 = C4103 * C5774;
    const double C27642 = C4103 * C3433;
    const double C36690 = C36216 * C4883;
    const double C36686 = C36216 * C4886;
    const double C36684 = C36216 * C4882;
    const double C36682 = C36216 * C822;
    const double C36680 = C36216 * C806;
    const double C36678 = C36216 * C813;
    const double C36676 = C36216 * C805;
    const double C36764 = C36216 * C891;
    const double C36762 = C36216 * C890;
    const double C36833 = C36216 * C5114;
    const double C36830 = C36216 * C957;
    const double C36827 = C36216 * C956;
    const double C37724 = C36216 * C4881;
    const double C37718 = C36216 * C807;
    const double C37714 = C36216 * C812;
    const double C37712 = C36216 * C804;
    const double C37808 = C36216 * C892;
    const double C37806 = C36216 * C889;
    const double C37888 = C36216 * C5113;
    const double C37885 = C36216 * C958;
    const double C37882 = C36216 * C955;
    const double C38970 = C36216 * C3431;
    const double C38968 = C36216 * C3439;
    const double C38966 = C36216 * C5772;
    const double C38964 = C36216 * C5778;
    const double C38962 = C36216 * C8536;
    const double C39052 = C36216 * C3513;
    const double C39137 = C36216 * C5958;
    const double C39132 = C36216 * C3587;
    const double C40318 = C36216 * C5775;
    const double C40314 = C36216 * C5783;
    const double C40312 = C36216 * C5773;
    const double C40485 = C36216 * C5955;
    const double C41105 = C36216 * C10961;
    const double C41103 = C36216 * C10965;
    const double C41101 = C36216 * C13849;
    const double C41099 = C36216 * C13853;
    const double C41096 = C36216 * C1406;
    const double C41094 = C36216 * C1390;
    const double C41092 = C36216 * C1397;
    const double C41090 = C36216 * C1389;
    const double C41216 = C36216 * C11093;
    const double C41209 = C36216 * C1472;
    const double C41204 = C36216 * C1471;
    const double C41310 = C36216 * C1541;
    const double C41308 = C36216 * C1540;
    const double C41960 = C36216 * C5774;
    const double C41954 = C36216 * C3432;
    const double C42070 = C36216 * C3514;
    const double C42175 = C36216 * C3588;
    const double C42878 = C36216 * C1391;
    const double C42874 = C36216 * C1396;
    const double C42872 = C36216 * C1388;
    const double C42995 = C36216 * C1470;
    const double C42990 = C36216 * C1473;
    const double C43102 = C36216 * C1542;
    const double C43100 = C36216 * C1539;
    const double C58251 = C36216 * C5771;
    const double C58459 = C36216 * C5957;
    const double C71700 = C36216 * C10962;
    const double C72810 = C36216 * C10960;
    const double C72884 = C36216 * C11092;
    const double C92346 = C92308 - C92332;
    const double C92347 = C92312 - C92334;
    const double C4921 = C4097 * C4888;
    const double C4907 = C4097 * C818;
    const double C4903 = C4097 * C829;
    const double C4899 = C4097 * C817;
    const double C5030 = C4097 * C5016;
    const double C5026 = C4097 * C899;
    const double C5024 = C4097 * C898;
    const double C5134 = C4097 * C5118;
    const double C5128 = C4097 * C965;
    const double C5123 = C4097 * C964;
    const double C6565 = C4097 * C816;
    const double C6687 = C4097 * C897;
    const double C6799 = C4097 * C963;
    const double C8560 = C4097 * C3435;
    const double C8552 = C4097 * C5780;
    const double C8672 = C4097 * C3517;
    const double C8792 = C4097 * C5964;
    const double C8788 = C4097 * C3591;
    const double C11000 = C4097 * C10967;
    const double C10986 = C4097 * C1402;
    const double C10982 = C4097 * C1413;
    const double C10978 = C4097 * C1401;
    const double C11113 = C4097 * C11097;
    const double C11107 = C4097 * C1480;
    const double C11102 = C4097 * C1479;
    const double C11215 = C4097 * C11201;
    const double C11211 = C4097 * C1549;
    const double C11209 = C4097 * C1548;
    const double C12848 = C4097 * C1400;
    const double C12976 = C4097 * C1478;
    const double C13082 = C4097 * C1547;
    const double C13859 = C4097 * C5781;
    const double C14081 = C4097 * C5961;
    const double C36370 =
        (C90032 / C89854 - (0 * be) / C89849) / C89854 + (0 * ae) / C89849;
    const double C45031 = C90032 / C89854 - (0 * be) / C89849;
    const double C90031 = C90028 / C89849;
    const double C4546 = C4536 + C4537;
    const double C67567 = C67548 + C67549;
    const double C15065 = C15046 + C15047;
    const double C15062 = C15040 + C15041;
    const double C15060 = C15036 + C15037;
    const double C15261 = C15252 + C15253;
    const double C15259 = C15247 + C15248;
    const double C17572 = C17566 + C17567;
    const double C26982 = C26966 + C26967;
    const double C26977 = C26956 + C26957;
    const double C26975 = C26952 + C26953;
    const double C27212 = C27200 + C27201;
    const double C30497 = C30492 + C30493;
    const double C31519 = C31500 + C31501;
    const double C31516 = C31494 + C31495;
    const double C31514 = C31490 + C31491;
    const double C31715 = C31706 + C31707;
    const double C31713 = C31701 + C31702;
    const double C34018 = C34012 + C34013;
    const double C41427 = C41410 + C41411;
    const double C41423 = C41402 + C41403;
    const double C41421 = C41398 + C41399;
    const double C41621 = C41609 + C41610;
    const double C44166 = C44153 + C44154;
    const double C401 = C337 * C181;
    const double C481 = C337 * C244;
    const double C2285 = C337 * C2059;
    const double C3089 = C337 * C2849;
    const double C417 = C413 * C92099;
    const double C2286 = C413 * C1985;
    const double C497 = C493 * C92110;
    const double C3090 = C493 * C2709;
    const double C11337 = C11328 * C92078;
    const double C13194 = C11328 * C1983;
    const double C11336 = C11327 * C801;
    const double C11423 = C11327 * C181;
    const double C13193 = C11327 * C1987;
    const double C14308 = C11327 * C2059;
    const double C11440 = C11436 * C92099;
    const double C14309 = C11436 * C1985;
    const double C92348 = C92319 - C92341;
    const double C15068 = C15052 + C15053;
    const double C15066 = C15048 + C15049;
    const double C15064 = C15044 + C15045;
    const double C15063 = C15042 + C15043;
    const double C15061 = C15038 + C15039;
    const double C15163 = C15153 + C15154;
    const double C15161 = C15148 + C15149;
    const double C15263 = C15256 + C15257;
    const double C15260 = C15250 + C15251;
    const double C15258 = C15245 + C15246;
    const double C17350 = C17338 + C17339;
    const double C17348 = C17334 + C17335;
    const double C17346 = C17330 + C17331;
    const double C17573 = C17568 + C17569;
    const double C17571 = C17564 + C17565;
    const double C18289 = C18277 + C18278;
    const double C18287 = C18273 + C18274;
    const double C18285 = C18269 + C18270;
    const double C18512 = C18507 + C18508;
    const double C18510 = C18503 + C18504;
    const double C26985 = C26972 + C26973;
    const double C26983 = C26968 + C26969;
    const double C26976 = C26954 + C26955;
    const double C26974 = C26950 + C26951;
    const double C27096 = C27084 + C27085;
    const double C27214 = C27204 + C27205;
    const double C27213 = C27202 + C27203;
    const double C30496 = C30490 + C30491;
    const double C30494 = C30486 + C30487;
    const double C30768 = C30764 + C30765;
    const double C86743 = C86736 + C86737;
    const double C86741 = C86732 + C86733;
    const double C89298 = C89292 + C89293;
    const double C4348 = C4326 * C119;
    const double C4342 = C4326 * C109;
    const double C4340 = C4326 * C118;
    const double C4334 = C4326 * C108;
    const double C4450 = C4326 * C184;
    const double C4440 = C4326 * C183;
    const double C4542 = C4326 * C247;
    const double C4532 = C4326 * C246;
    const double C6916 = C4326 * C812;
    const double C6910 = C4326 * C804;
    const double C7031 = C4326 * C889;
    const double C7139 = C4326 * C955;
    const double C7877 = C4326 * C1396;
    const double C7871 = C4326 * C1388;
    const double C7988 = C4326 * C1470;
    const double C8100 = C4326 * C1539;
    const double C67560 = C4326 * C1390;
    const double C67554 = C4326 * C1406;
    const double C67544 = C4326 * C1397;
    const double C67538 = C4326 * C1389;
    const double C67658 = C4326 * C1472;
    const double C67648 = C4326 * C1471;
    const double C67746 = C4326 * C1541;
    const double C67744 = C4326 * C1540;
    const double C70166 = C4326 * C3439;
    const double C70160 = C4326 * C3431;
    const double C70280 = C4326 * C3513;
    const double C70383 = C4326 * C3587;
    const double C4361 = C4344 + C4345;
    const double C4358 = C4338 + C4339;
    const double C4355 = C4332 + C4333;
    const double C4548 = C4540 + C4541;
    const double C4545 = C4534 + C4535;
    const double C7142 = C7137 + C7138;
    const double C67569 = C67552 + C67553;
    const double C67566 = C67546 + C67547;
    const double C67563 = C67540 + C67541;
    const double C67753 = C67742 + C67743;
    const double C70176 = C70168 + C70169;
    const double C92349 = C92326 - C92342;
    const double C31511 = C31260 * C317;
    const double C31507 = C31260 * C311;
    const double C31503 = C31260 * C316;
    const double C31499 = C31260 * C310;
    const double C31497 = C31260 * C315;
    const double C31493 = C31260 * C309;
    const double C31608 = C31260 * C396;
    const double C31603 = C31260 * C395;
    const double C31711 = C31260 * C477;
    const double C31705 = C31260 * C476;
    const double C31700 = C31260 * C475;
    const double C33785 = C31260 * C1020;
    const double C33781 = C31260 * C1029;
    const double C33777 = C31260 * C1021;
    const double C34015 = C31260 * C1145;
    const double C34011 = C31260 * C1144;
    const double C34715 = C31260 * C1604;
    const double C34711 = C31260 * C1613;
    const double C34707 = C31260 * C1605;
    const double C34945 = C31260 * C1731;
    const double C34941 = C31260 * C1729;
    const double C41419 = C31260 * C11299;
    const double C41415 = C31260 * C11303;
    const double C41409 = C31260 * C1615;
    const double C41405 = C31260 * C1607;
    const double C41401 = C31260 * C1614;
    const double C41397 = C31260 * C1606;
    const double C41513 = C31260 * C1672;
    const double C41614 = C31260 * C1728;
    const double C41612 = C31260 * C1727;
    const double C43207 = C31260 * C1608;
    const double C43419 = C31260 * C1730;
    const double C44160 = C31260 * C6049;
    const double C44152 = C31260 * C3665;
    const double C44148 = C31260 * C3661;
    const double C44386 = C31260 * C6208;
    const double C44382 = C31260 * C3805;
    const double C52972 = C31260 * C3662;
    const double C53252 = C31260 * C3806;
    const double C71090 =
        (C90078 / C89854 - (0 * be) / C89849) / C89854 + (0 * ae) / C89849;
    const double C80690 = C90078 / C89854 - (0 * be) / C89849;
    const double C90077 = C90074 / C89849;
    const double C10125 = C10115 + C10116;
    const double C40821 = C40802 + C40803;
    const double C20306 = C20287 + C20288;
    const double C20303 = C20281 + C20282;
    const double C20301 = C20277 + C20278;
    const double C20405 = C20396 + C20397;
    const double C20403 = C20391 + C20392;
    const double C23725 = C23718 + C23719;
    const double C26324 = C26310 + C26311;
    const double C26322 = C26306 + C26307;
    const double C26317 = C26296 + C26297;
    const double C26315 = C26292 + C26293;
    const double C26436 = C26424 + C26425;
    const double C30908 = C30900 + C30901;
    const double C61443 = C61424 + C61425;
    const double C61440 = C61418 + C61419;
    const double C61438 = C61414 + C61415;
    const double C61542 = C61533 + C61534;
    const double C61540 = C61528 + C61529;
    const double C64831 = C64824 + C64825;
    const double C67041 = C67024 + C67025;
    const double C67039 = C67020 + C67021;
    const double C67037 = C67016 + C67017;
    const double C67035 = C67012 + C67013;
    const double C67138 = C67126 + C67127;
    const double C70510 = C70498 + C70499;
    const double C648 = C584 * C181;
    const double C726 = C584 * C244;
    const double C2541 = C584 * C2059;
    const double C3345 = C584 * C2849;
    const double C664 = C660 * C92099;
    const double C2542 = C660 * C1985;
    const double C742 = C738 * C92110;
    const double C3346 = C738 * C2709;
    const double C5494 = C5485 * C92078;
    const double C7245 = C5485 * C1983;
    const double C5493 = C5484 * C801;
    const double C5673 = C5484 * C244;
    const double C7244 = C5484 * C1987;
    const double C9427 = C5484 * C2849;
    const double C5691 = C5686 * C92110;
    const double C9428 = C5686 * C2709;
    const double C92350 = C92321 - C92344;
    const double C20309 = C20293 + C20294;
    const double C20307 = C20289 + C20290;
    const double C20305 = C20285 + C20286;
    const double C20304 = C20283 + C20284;
    const double C20302 = C20279 + C20280;
    const double C20407 = C20400 + C20401;
    const double C20404 = C20394 + C20395;
    const double C20402 = C20389 + C20390;
    const double C20500 = C20490 + C20491;
    const double C20498 = C20485 + C20486;
    const double C22639 = C22627 + C22628;
    const double C22637 = C22623 + C22624;
    const double C22635 = C22619 + C22620;
    const double C22752 = C22747 + C22748;
    const double C22750 = C22743 + C22744;
    const double C23614 = C23602 + C23603;
    const double C23612 = C23598 + C23599;
    const double C23610 = C23594 + C23595;
    const double C23726 = C23720 + C23721;
    const double C23724 = C23716 + C23717;
    const double C26325 = C26312 + C26313;
    const double C26323 = C26308 + C26309;
    const double C26316 = C26294 + C26295;
    const double C26314 = C26290 + C26291;
    const double C26438 = C26428 + C26429;
    const double C26437 = C26426 + C26427;
    const double C26552 = C26540 + C26541;
    const double C30911 = C30906 + C30907;
    const double C30909 = C30902 + C30903;
    const double C31046 = C31042 + C31043;
    const double C57240 = C57233 + C57234;
    const double C57238 = C57229 + C57230;
    const double C60677 = C60672 + C60673;
    const double C60675 = C60668 + C60669;
    const double C10019 = C9997 * C119;
    const double C10013 = C9997 * C109;
    const double C10011 = C9997 * C118;
    const double C10005 = C9997 * C108;
    const double C10121 = C9997 * C184;
    const double C10111 = C9997 * C183;
    const double C10213 = C9997 * C247;
    const double C10203 = C9997 * C246;
    const double C12515 = C9997 * C812;
    const double C12509 = C9997 * C804;
    const double C12630 = C9997 * C889;
    const double C12738 = C9997 * C955;
    const double C13524 = C9997 * C1396;
    const double C13518 = C9997 * C1388;
    const double C13635 = C9997 * C1470;
    const double C13747 = C9997 * C1539;
    const double C40814 = C9997 * C806;
    const double C40808 = C9997 * C822;
    const double C40798 = C9997 * C813;
    const double C40792 = C9997 * C805;
    const double C40908 = C9997 * C891;
    const double C40906 = C9997 * C890;
    const double C41004 = C9997 * C957;
    const double C40994 = C9997 * C956;
    const double C44503 = C9997 * C3431;
    const double C44497 = C9997 * C3439;
    const double C44610 = C9997 * C3513;
    const double C44722 = C9997 * C3587;
    const double C10032 = C10015 + C10016;
    const double C10029 = C10009 + C10010;
    const double C10026 = C10003 + C10004;
    const double C10127 = C10119 + C10120;
    const double C10124 = C10113 + C10114;
    const double C13642 = C13637 + C13638;
    const double C40826 = C40812 + C40813;
    const double C40823 = C40806 + C40807;
    const double C40820 = C40800 + C40801;
    const double C40817 = C40794 + C40795;
    const double C40915 = C40904 + C40905;
    const double C44506 = C44495 + C44496;
    const double C92351 = C92330 - C92345;
    const double C61435 = C60959 * C564;
    const double C61431 = C60959 * C558;
    const double C61427 = C60959 * C563;
    const double C61423 = C60959 * C557;
    const double C61421 = C60959 * C562;
    const double C61417 = C60959 * C556;
    const double C61538 = C60959 * C644;
    const double C61532 = C60959 * C643;
    const double C61527 = C60959 * C642;
    const double C61628 = C60959 * C721;
    const double C61623 = C60959 * C720;
    const double C63743 = C60959 * C1202;
    const double C63739 = C60959 * C1211;
    const double C63735 = C60959 * C1203;
    const double C63863 = C60959 * C1271;
    const double C63859 = C60959 * C1269;
    const double C64709 = C60959 * C1786;
    const double C64705 = C60959 * C1795;
    const double C64701 = C60959 * C1787;
    const double C64827 = C60959 * C1852;
    const double C64823 = C60959 * C1853;
    const double C67033 = C60959 * C5456;
    const double C67029 = C60959 * C5460;
    const double C67023 = C60959 * C1213;
    const double C67019 = C60959 * C1205;
    const double C67015 = C60959 * C1212;
    const double C67011 = C60959 * C1204;
    const double C67135 = C60959 * C5578;
    const double C67131 = C60959 * C1268;
    const double C67129 = C60959 * C1267;
    const double C67220 = C60959 * C1328;
    const double C68669 = C60959 * C1206;
    const double C68777 = C60959 * C1270;
    const double C70505 = C60959 * C3875;
    const double C70501 = C60959 * C3879;
    const double C70497 = C60959 * C6288;
    const double C70493 = C60959 * C6294;
    const double C70613 = C60959 * C3949;
    const double C78715 = C60959 * C3876;
    const double C78857 = C60959 * C3950;
    const double C6563 = C92067 * C815;
    const double C15573 = C14805 * C815;
    const double C32023 = C31259 * C815;
    const double C33449 = C31258 * C815;
    const double C46994 = C92067 * C815;
    const double C4909 = C92067 * C819;
    const double C6573 = C4097 * C819;
    const double C32039 = C31258 * C819;
    const double C37719 = C92062 * C819;
    const double C45560 = C92067 * C819;
    const double C47004 = C92310 * C819;
    const double C12846 = C92067 * C1399;
    const double C21252 = C14805 * C1399;
    const double C53776 = C92067 * C1399;
    const double C62389 = C31259 * C1399;
    const double C64079 = C31258 * C1399;
    const double C10988 = C92067 * C1403;
    const double C12856 = C4097 * C1403;
    const double C42879 = C92062 * C1403;
    const double C51592 = C92067 * C1403;
    const double C62405 = C31258 * C1403;
    const double C83299 = C92310 * C1403;
    const double C8558 = C92067 * C3436;
    const double C27645 = C4097 * C3436;
    const double C35351 = C31258 * C3436;
    const double C41955 = C92062 * C3436;
    const double C48890 = C92067 * C3436;
    const double C52560 = C92310 * C3436;
    const double C30489 = C92186 * C6042;
    const double C44150 = C92186 * C6042;
    const double C57714 = C44804 * C6042;
    const double C67543 = C4101 * C6042;
    const double C70163 = C4100 * C6042;
    const double C14193 = C92137 * C6043;
    const double C26971 = C92186 * C6043;
    const double C41407 = C92186 * C6043;
    const double C44156 = C31260 * C6043;
    const double C67559 = C4100 * C6043;
    const double C89289 = C92322 * C6043;
    const double C4720 = C4713 + C4714;
    const double C26440 = C26432 + C26433;
    const double C9920 = C9913 + C9914;
    const double C27216 = C27208 + C27209;
    const double C8322 = C8317 + C8318;
    const double C12633 = C12628 + C12629;
    const double C22749 = C22741 + C22742;
    const double C29814 = C29810 + C29811;
    const double C63864 = C63856 + C63857;
    const double C8103 = C8098 + C8099;
    const double C12406 = C12402 + C12403;
    const double C18509 = C18501 + C18502;
    const double C28339 = C28336 + C28337;
    const double C34946 = C34938 + C34939;
    const double C4354 = C4330 + C4331;
    const double C4632 = C4624 + C4625;
    const double C6923 = C6912 + C6913;
    const double C17347 = C17332 + C17333;
    const double C26321 = C26304 + C26305;
    const double C33793 = C33778 + C33779;
    const double C9748 = C9740 + C9741;
    const double C10025 = C10001 + C10002;
    const double C13531 = C13520 + C13521;
    const double C23611 = C23596 + C23597;
    const double C26981 = C26964 + C26965;
    const double C64717 = C64702 + C64703;
    const double C7884 = C7873 + C7874;
    const double C8213 = C8205 + C8206;
    const double C12183 = C12175 + C12176;
    const double C12522 = C12511 + C12512;
    const double C18286 = C18271 + C18272;
    const double C22636 = C22621 + C22622;
    const double C28064 = C28056 + C28057;
    const double C29676 = C29668 + C29669;
    const double C34723 = C34708 + C34709;
    const double C63751 = C63736 + C63737;
    const double C331 = C307 * C120;
    const double C578 = C554 * C120;
    const double C15056 = C15033 * C120;
    const double C20297 = C20274 * C120;
    const double C31510 = C31487 * C120;
    const double C61434 = C61411 * C120;
    const double C2206 = C307 * C811;
    const double C2462 = C554 * C811;
    const double C4350 = C4327 * C811;
    const double C6566 = C4103 * C811;
    const double C15050 = C15034 * C811;
    const double C17342 = C15033 * C811;
    const double C22631 = C20274 * C811;
    const double C31504 = C31488 * C811;
    const double C33788 = C31487 * C811;
    const double C46997 = C89868 * C811;
    const double C63746 = C61411 * C811;
    const double C4336 = C4328 * C823;
    const double C4626 = C554 * C823;
    const double C4912 = C4103 * C823;
    const double C6918 = C4327 * C823;
    const double C17336 = C15034 * C823;
    const double C26300 = C20274 * C823;
    const double C33782 = C31488 * C823;
    const double C37720 = C36216 * C823;
    const double C45563 = C89868 * C823;
    const double C68672 = C61411 * C823;
    const double C2928 = C307 * C1395;
    const double C3184 = C554 * C1395;
    const double C10021 = C9998 * C1395;
    const double C12849 = C4103 * C1395;
    const double C18281 = C15033 * C1395;
    const double C20291 = C20275 * C1395;
    const double C23606 = C20274 * C1395;
    const double C34718 = C31487 * C1395;
    const double C53779 = C89868 * C1395;
    const double C61428 = C61412 * C1395;
    const double C64712 = C61411 * C1395;
    const double C9742 = C307 * C1407;
    const double C10007 = C9999 * C1407;
    const double C10991 = C4103 * C1407;
    const double C13526 = C9998 * C1407;
    const double C23600 = C20275 * C1407;
    const double C26960 = C15033 * C1407;
    const double C42880 = C36216 * C1407;
    const double C43210 = C31487 * C1407;
    const double C51587 = C89868 * C1407;
    const double C64706 = C61412 * C1407;
    const double C7879 = C4327 * C3440;
    const double C8207 = C554 * C3440;
    const double C8553 = C4103 * C3440;
    const double C12177 = C307 * C3440;
    const double C12517 = C9998 * C3440;
    const double C18275 = C15034 * C3440;
    const double C22625 = C20275 * C3440;
    const double C28060 = C15033 * C3440;
    const double C29672 = C20274 * C3440;
    const double C34712 = C31488 * C3440;
    const double C41956 = C36216 * C3440;
    const double C48885 = C89868 * C3440;
    const double C52975 = C31487 * C3440;
    const double C63740 = C61412 * C3440;
    const double C78718 = C61411 * C3440;
    const double C5587 = C554 * C5012;
    const double C36766 = C36216 * C5012;
    const double C57318 = C20274 * C5012;
    const double C67134 = C61411 * C5012;
    const double C9323 = C554 * C5870;
    const double C26430 = C20275 * C5870;
    const double C30628 = C15034 * C5870;
    const double C39054 = C36216 * C5870;
    const double C40910 = C9998 * C5870;
    const double C44270 = C31488 * C5870;
    const double C60776 = C20274 * C5870;
    const double C67132 = C61412 * C5870;
    const double C67652 = C4328 * C5870;
    const double C70278 = C4327 * C5870;
    const double C70616 = C61411 * C5870;
    const double C14316 = C307 * C5871;
    const double C27092 = C15034 * C5871;
    const double C31044 = C20275 * C5871;
    const double C40402 = C36216 * C5871;
    const double C40902 = C9999 * C5871;
    const double C41519 = C31488 * C5871;
    const double C44276 = C31487 * C5871;
    const double C44612 = C9998 * C5871;
    const double C67656 = C4327 * C5871;
    const double C70614 = C61412 * C5871;
    const double C89400 = C15033 * C5871;
    const double C11527 = C307 * C11197;
    const double C41312 = C36216 * C11197;
    const double C41617 = C31487 * C11197;
    const double C86904 = C15033 * C11197;
    const double C4905 = C92067 * C828;
    const double C6569 = C4097 * C828;
    const double C32027 = C31258 * C828;
    const double C33457 = C31257 * C828;
    const double C37715 = C92062 * C828;
    const double C45556 = C92067 * C828;
    const double C47000 = C92310 * C828;
    const double C4911 = C4097 * C830;
    const double C32035 = C31257 * C830;
    const double C36683 = C92062 * C830;
    const double C45562 = C92310 * C830;
    const double C10984 = C92067 * C1412;
    const double C12852 = C4097 * C1412;
    const double C42875 = C92062 * C1412;
    const double C51578 = C92067 * C1412;
    const double C53782 = C92310 * C1412;
    const double C62393 = C31258 * C1412;
    const double C64087 = C31257 * C1412;
    const double C10990 = C4097 * C1414;
    const double C41097 = C92062 * C1414;
    const double C51590 = C92310 * C1414;
    const double C62401 = C31257 * C1414;
    const double C8556 = C4097 * C3443;
    const double C35347 = C31257 * C3443;
    const double C38969 = C92062 * C3443;
    const double C48888 = C92310 * C3443;
    const double C409 = C92137 * C397;
    const double C15160 = C92322 * C397;
    const double C31614 = C31260 * C397;
    const double C2289 = C92137 * C1087;
    const double C4443 = C4100 * C1087;
    const double C7032 = C4099 * C1087;
    const double C15151 = C92186 * C1087;
    const double C17455 = C92322 * C1087;
    const double C31605 = C92186 * C1087;
    const double C33901 = C31260 * C1087;
    const double C3009 = C92137 * C1671;
    const double C7989 = C4099 * C1671;
    const double C18392 = C92322 * C1671;
    const double C34829 = C31260 * C1671;
    const double C11428 = C92137 * C1673;
    const double C27095 = C92322 * C1673;
    const double C41518 = C31260 * C1673;
    const double C67659 = C4099 * C1673;
    const double C14312 = C92137 * C3735;
    const double C27087 = C92186 * C3735;
    const double C30631 = C92322 * C3735;
    const double C41515 = C92186 * C3735;
    const double C44273 = C31260 * C3735;
    const double C67651 = C4100 * C3735;
    const double C70281 = C4099 * C3735;
    const double C734 = C92148 * C722;
    const double C20497 = C92323 * C722;
    const double C61634 = C60959 * C722;
    const double C2636 = C92148 * C1327;
    const double C12739 = C9514 * C1327;
    const double C22858 = C92323 * C1327;
    const double C63973 = C60959 * C1327;
    const double C5678 = C92148 * C1329;
    const double C26551 = C92323 * C1329;
    const double C41005 = C9514 * C1329;
    const double C67225 = C60959 * C1329;
    const double C3349 = C92148 * C1911;
    const double C10206 = C9515 * C1911;
    const double C13748 = C9514 * C1911;
    const double C20488 = C92212 * C1911;
    const double C23829 = C92323 * C1911;
    const double C61625 = C92212 * C1911;
    const double C64935 = C60959 * C1911;
    const double C9431 = C92148 * C4019;
    const double C26543 = C92212 * C4019;
    const double C31181 = C92323 * C4019;
    const double C40997 = C9515 * C4019;
    const double C44723 = C9514 * C4019;
    const double C67222 = C92212 * C4019;
    const double C70725 = C60959 * C4019;
    const double C30910 = C30904 + C30905;
    const double C40818 = C40796 + C40797;
    const double C44509 = C44501 + C44502;
    const double C70512 = C70502 + C70503;
    const double C418 = C414 * C92099;
    const double C2291 = C414 * C1985;
    const double C665 = C661 * C92099;
    const double C2547 = C661 * C1985;
    const double C498 = C494 * C92110;
    const double C3095 = C494 * C2709;
    const double C743 = C739 * C92110;
    const double C3351 = C739 * C2709;
    const double C404 = C339 * C181;
    const double C484 = C339 * C244;
    const double C2290 = C339 * C2059;
    const double C3094 = C339 * C2849;
    const double C407 = C341 * C181;
    const double C487 = C341 * C244;
    const double C2295 = C341 * C2059;
    const double C3099 = C341 * C2849;
    const double C2292 = C2214 * C2060;
    const double C2378 = C2214 * C244;
    const double C2287 = C2212 * C2060;
    const double C2381 = C2212 * C244;
    const double C3010 = C2936 * C181;
    const double C3096 = C2936 * C2850;
    const double C9919 = C2936 * C244;
    const double C13203 = C2936 * C1988;
    const double C21541 = C2936 * C801;
    const double C22411 = C2936 * C2059;
    const double C23291 = C2936 * C1987;
    const double C23492 = C2936 * C2849;
    const double C3007 = C2934 * C181;
    const double C3091 = C2934 * C2850;
    const double C9910 = C2934 * C244;
    const double C11315 = C2934 * C801;
    const double C12286 = C2934 * C2059;
    const double C13201 = C2934 * C1987;
    const double C13195 = C2934 * C1988;
    const double C13410 = C2934 * C2849;
    const double C11338 = C11329 * C801;
    const double C11426 = C11329 * C181;
    const double C13197 = C11329 * C1987;
    const double C14313 = C11329 * C2059;
    const double C14204 = C14200 * C801;
    const double C14310 = C14200 * C2060;
    const double C11343 = C11335 * C801;
    const double C11435 = C11335 * C181;
    const double C73024 = C11335 * C1987;
    const double C73700 = C11335 * C2059;
    const double C651 = C586 * C181;
    const double C729 = C586 * C244;
    const double C2546 = C586 * C2059;
    const double C3350 = C586 * C2849;
    const double C654 = C588 * C181;
    const double C732 = C588 * C244;
    const double C2551 = C588 * C2059;
    const double C3355 = C588 * C2849;
    const double C2548 = C2470 * C2060;
    const double C2634 = C2470 * C244;
    const double C4719 = C2470 * C181;
    const double C7250 = C2470 * C1988;
    const double C16084 = C2470 * C801;
    const double C17672 = C2470 * C1987;
    const double C17774 = C2470 * C2059;
    const double C18818 = C2470 * C2849;
    const double C2543 = C2468 * C2060;
    const double C2637 = C2468 * C244;
    const double C4710 = C2468 * C181;
    const double C5468 = C2468 * C801;
    const double C7248 = C2468 * C1987;
    const double C7246 = C2468 * C1988;
    const double C7359 = C2468 * C2059;
    const double C8425 = C2468 * C2849;
    const double C5495 = C5486 * C801;
    const double C5676 = C5486 * C244;
    const double C7252 = C5486 * C1987;
    const double C9432 = C5486 * C2849;
    const double C3266 = C3192 * C181;
    const double C3352 = C3192 * C2850;
    const double C3263 = C3190 * C181;
    const double C3347 = C3190 * C2850;
    const double C9220 = C9216 * C801;
    const double C9429 = C9216 * C2850;
    const double C5501 = C5492 * C801;
    const double C5685 = C5492 * C244;
    const double C38160 = C5492 * C1987;
    const double C39565 = C5492 * C2849;
    const double C9218 = C9214 * C801;
    const double C9434 = C9214 * C2850;
    const double C90176 = C90134 + C90173;
    const double C90193 = C90183 / C90107;
    const double C5782 = (C90248 * C90140 + C90818 * C90542) / C89849;
    const double C4919 = C92067 * C4887;
    const double C37725 = C92062 * C4887;
    const double C45570 = C92067 * C4887;
    const double C8550 = C92067 * C5779;
    const double C48882 = C92067 * C5779;
    const double C58252 = C92062 * C5779;
    const double C10998 = C92067 * C10966;
    const double C72811 = C92062 * C10966;
    const double C81659 = C92067 * C10966;
    const double C90213 = C90205 / C89849;
    const double C90730 = -C90727;
    const double C41315 = C92062 * C14077;
    const double C90752 = -C90749;
    const double C40488 = C92062 * C5965;
    const double C39143 = C92062 * C8782;
    const double C36691 = C92062 * C4889;
    const double C40319 = C92062 * C5785;
    const double C38963 = C92062 * C8538;
    const double C71701 = C92062 * C10968;
    const double C90175 = C90172 + C90133;
    const double C90197 = C90189 / C89892;
    const double C90192 = C90181 / C89892;
    const double C90841 = C90181 / C90107;
    const double C5784 = -(C90839 * C90542 + C90248 * C90139) / C89892;
    const double C4914 = C4103 * C4885;
    const double C5476 = C554 * C4885;
    const double C6920 = C4328 * C4885;
    const double C37726 = C36216 * C4885;
    const double C45565 = C89868 * C4885;
    const double C7881 = C4328 * C5777;
    const double C8211 = C554 * C5777;
    const double C8545 = C4103 * C5777;
    const double C26298 = C20275 * C5777;
    const double C28062 = C15034 * C5777;
    const double C48877 = C89868 * C5777;
    const double C52977 = C31488 * C5777;
    const double C58253 = C36216 * C5777;
    const double C68670 = C61412 * C5777;
    const double C10993 = C4103 * C10964;
    const double C11319 = C307 * C10964;
    const double C13528 = C9999 * C10964;
    const double C72812 = C36216 * C10964;
    const double C81654 = C89868 * C10964;
    const double C14527 =
        2 * ((-(C90306 * C91251) / C89892) / C89849 - (ae * C90830) / C90107) -
        (ae * (C90722 * C90542 + C90830)) / C90107 +
        C90306 *
            ((-(ae * C90306 * C90722) / C89892) / C89849 - C91251 / C90107 +
             C90306 *
                 ((-(C90306 * C90248 * C90499) / C89892) / C89849 - C90728));
    const double C91302 = -C91298;
    const double C8896 =
        2 * ((-(C90248 * C91047) / C89892) / C89849 -
             (ae * C90306 * C90133) / C90107) -
        (ae * C90306 * C90834) / C90107 +
        C90248 *
            ((-(ae * C90306 * C90722) / C89892) / C89849 - C91047 / C90107 +
             C90248 *
                 ((-(C90248 * C90306 * C90398) / C89892) / C89849 - C90750));
    const double C91583 = -C91579;
    const double C40805 = C9516 * C6297;
    const double C60667 = C92212 * C6297;
    const double C70491 = C92212 * C6297;
    const double C86219 = C80243 * C6297;
    const double C39421 = C92148 * C9198;
    const double C57228 = C92212 * C9198;
    const double C67027 = C92212 * C9198;
    const double C36688 = C36216 * C4891;
    const double C37056 = C554 * C4891;
    const double C40316 = C36216 * C5787;
    const double C40804 = C9999 * C5787;
    const double C44161 = C31488 * C5787;
    const double C60666 = C20275 * C5787;
    const double C67550 = C4328 * C5787;
    const double C70490 = C61412 * C5787;
    const double C89294 = C15034 * C5787;
    const double C38960 = C36216 * C8540;
    const double C39420 = C554 * C8540;
    const double C57227 = C20275 * C8540;
    const double C67026 = C61412 * C8540;
    const double C70170 = C4328 * C8540;
    const double C41413 = C92186 * C14185;
    const double C73629 = C92137 * C14185;
    const double C86731 = C92186 * C14185;
    const double C71698 = C36216 * C10970;
    const double C71875 = C307 * C10970;
    const double C90174 = C90171 / C90107;
    const double C832 =
        (-(C90168 * C90420) / C89892) / C89849 - C90138 / C90107 -
        (ae * (C90169 * C90420 + C90139)) / C90107 -
        ((C90140 + C90170 * C90420) * ce) / C90107 +
        C90106 * ((-((C90134 + C90161 * C90420) * ce) / C89892) / C89849 -
                  (ae * (C90158 * C90420 + C90133)) / C90107 +
                  C90106 * ((-(C90222 * C90420) / C89892) / C89849 - C90182));
    const double C1416 =
        (-(C90168 * C90542) / C89892) / C89849 - C90138 / C90107 -
        (ae * (C90169 * C90542 + C90139)) / C90107 -
        ((C90140 + C90170 * C90542) * ce) / C90107 +
        C90106 * ((-((C90134 + C90161 * C90542) * ce) / C89892) / C89849 -
                  (ae * (C90158 * C90542 + C90133)) / C90107 +
                  C90106 * ((-(C90222 * C90542) / C89892) / C89849 - C90182));
    const double C827 =
        (-(ae * C90248 * C90139) / C89892) / C89849 -
        (C90248 * C90138) / C90107 - (C90248 * C90140 * ce) / C90107 +
        C90106 * ((-(C90248 * C90134 * ce) / C89892) / C89849 -
                  (ae * C90248 * C90133) / C90107 - (C90106 * C90565) / C90107);
    const double C3444 = (-(C90306 * C90248 * C90134 * ce) / C89892) / C89849 -
                         (ae * C90306 * C90248 * C90133) / C90107 -
                         (C90106 * C90306 * C90565) / C90107;
    const double C5791 =
        (-(C90565 * C90542) / C89892) / C89849 - (C90248 * C90138) / C90107;
    const double C1411 =
        (-(ae * C90306 * C90139) / C89892) / C89849 -
        (C90306 * C90138) / C90107 - (C90306 * C90140 * ce) / C90107 +
        C90106 * ((-(C90306 * C90134 * ce) / C89892) / C89849 -
                  (ae * C90306 * C90133) / C90107 - (C90106 * C90643) / C90107);
    const double C4913 = C92067 * C831;
    const double C6577 = C4097 * C831;
    const double C32033 = C31258 * C831;
    const double C37721 = C92062 * C831;
    const double C45564 = C92067 * C831;
    const double C47008 = C92310 * C831;
    const double C10992 = C92067 * C1415;
    const double C12860 = C4097 * C1415;
    const double C42881 = C92062 * C1415;
    const double C51588 = C92067 * C1415;
    const double C62399 = C31258 * C1415;
    const double C83303 = C92310 * C1415;
    const double C4917 = C4097 * C4894;
    const double C36687 = C92062 * C4894;
    const double C45568 = C92310 * C4894;
    const double C8548 = C4097 * C5790;
    const double C38965 = C92062 * C5790;
    const double C48880 = C92310 * C5790;
    const double C10996 = C4097 * C10973;
    const double C41104 = C92062 * C10973;
    const double C81657 = C92310 * C10973;
    const double C90233 = C90161 + C90230;
    const double C90822 = C90170 + C90820;
    const double C91097 = C90170 + C91095;
    const double C13852 =
        (2 * C90306 * C90818 + C90306 * (C90818 + C91243 * C90542)) / C89849;
    const double C91350 = C90383 + C91343;
    const double C91648 = C90484 + C91644;
    const double C91026 = C91024 + C90219;
    const double C91234 = C91232 + C90219;
    const double C90225 = C90190 + C90217;
    const double C90224 = C90216 / C89892;
    const double C91025 = C91022 + C90216;
    const double C91233 = C91230 + C90216;
    const double C12072 = -(C90306 * (C90306 * C91219 + C91023 * ce) +
                            C90248 * C90330 + C90306 * C91023 * ce) /
                          C89892;
    const double C12506 =
        (C90248 * C90488 + C90306 * (C90306 * C91220 + C91023 * ae) +
         C90306 * C91023 * ae) /
        C89849;
    const double C11870 = C90248 * C90160 + C91023 * C90542;
    const double C90900 = C90248 * C90897;
    const double C91203 = C90306 * C91199;
    const double C90899 = C90248 * C90896;
    const double C91202 = C90306 * C91196;
    const double C5960 = -(C90306 * (C90306 * C90925 + C90892 * ce) +
                           C90335 * C90420 + C90320 + C90306 * C90892 * ce) /
                         C89892;
    const double C6292 =
        (C90478 + C90493 * C90420 + C90306 * (C90306 * C90953 + C90892 * ae) +
         C90306 * C90892 * ae) /
        C89849;
    const double C8781 =
        C90306 * ((-2 * C90918) / C89892 - (C90248 * C90925) / C89892) -
        ((2 * C90877 + C90248 * C90892) * ce) / C89892;
    const double C9197 = (C90306 * (2 * C90946 + C90248 * C90953) +
                          (2 * C90877 + C90248 * C90892) * ae) /
                         C89849;
    const double C4884 = 3 * (C90129 + C90152 * C90420) +
                         C90248 * (2 * C90877 + C90248 * C90892);
    const double C5776 = C90129 + C90152 * C90420 + C90892 * C90542;
    const double C8537 = C90306 * (2 * C90877 + C90248 * C90892);
    const double C91274 = C91272 + C90894;
    const double C91273 = C91271 + C90891;
    const double C6212 =
        (-(C90306 * C90392 * ce) / C89892) / C89849 - C90906 / C90107 +
        C90306 * ((-(C90306 * C90919) / C89892) / C89849 - C90397 / C90107) -
        (ae * (C90306 * (C90306 * C90248 * C90921 + C90891) + C90918 +
               C90306 * C90885 * ce)) /
            C90107 +
        C90248 * (C90248 * ((-(C90306 * C90887 * ce) / C89892) / C89849 -
                            C90919 / C90107 +
                            C90306 * ((-(C90306 * C90106 * std::pow(C90110, 7) *
                                         bs[7] * C90447) /
                                       C89892) /
                                          C89849 -
                                      (C90887 * ce) / C90107)) -
                  (ae * (C90306 * (C90306 * C90921 + C90208) + C90335 +
                         C90306 * C90200 * ce)) /
                      C90107);
    const double C10963 = 3 * (C90129 + C90152 * C90542) +
                          C90306 * (2 * C91184 + C90306 * C91198);
    const double C90232 = C90229 + C90158;
    const double C90844 = C90842 + C90169;
    const double C91132 = C91130 + C90169;
    const double C13854 = (-2 * C90306 * C90839) / C89892 -
                          (C90306 * (C91254 * C90542 + C90839)) / C89892;
    const double C91347 = C91340 + C90268;
    const double C91512 = C91510 + C90860;
    const double C91647 = C91643 + C90326;
    const double C90231 = C90228 / C90107;
    const double C90574 = C90573 / C89892;
    const double C90652 = C90651 / C89892;
    const double C90726 = C90106 * C90723;
    const double C90768 = C90306 * C90723;
    const double C3445 = (-(ae * C90306 * C90248 * C90169) / C89892) / C89849 -
                         (C90306 * C90565) / C90107 -
                         (C90306 * C90248 * C90170 * ce) / C90107 +
                         C90106 * ((-(C90306 * C90721 * ce) / C89892) / C89849 -
                                   (ae * C90306 * C90722) / C90107 -
                                   (C90106 * C90306 * C90723) / C90107);
    const double C5792 =
        (-((C90808 + C90721 * C90542) * ce) / C89892) / C89849 -
        (ae * (C90722 * C90542 + C90830)) / C90107 +
        C90106 * ((-(C90723 * C90542) / C89892) / C89849 - C90565 / C90107);
    const double C8543 =
        (C90306 *
         ((-2 * C90722) / C89892 -
          (C90248 * (C90207 * C90420 + C90158)) / C89892) *
         ae) /
            C89849 -
        (C90306 * (2 * C90721 + C90248 * (C90161 + C90210 * C90420)) * ce) /
            C90107 +
        C90106 * C90306 *
            ((-2 * C90723) / C90107 +
             C90248 *
                 ((-((C90187 * C90188 + C90114 * bs[7] * std::pow(C90110, 7)) *
                     C90115 * C90420) /
                   C89892) /
                      C89849 -
                  C90222 / C90107));
    const double C11873 =
        (-(C90723 * C90542) / C89892) / C89849 - C90565 / C90107 -
        (ae * (C90248 * C90223 * C90542 + C90839)) / C90107 -
        ((C90818 + C90248 * C90226 * C90542) * ce) / C90107 +
        C90106 *
            ((-((C90721 + C90248 * C90210 * C90542) * ce) / C89892) / C89849 -
             (ae * (C90248 * C90207 * C90542 + C90722)) / C90107 +
             C90106 *
                 ((-(C90248 *
                     (C90187 * C90188 + C90114 * bs[7] * std::pow(C90110, 7)) *
                     C90115 * C90542) /
                   C89892) /
                      C89849 -
                  C90723 / C90107));
    const double C13855 =
        (-2 * C90306 * C90565) / C90107 +
        C90306 * ((-(C90723 * C90542) / C89892) / C89849 - C90565 / C90107);
    const double C90748 = C90106 * C90745;
    const double C90438 = C90437 / C89892;
    const double C90889 = C90248 * C90883;
    const double C91053 = C90306 * C90883;
    const double C91331 = C91320 / C90107;
    const double C91426 = C91425 / C89892;
    const double C91461 = C90248 * C91459;
    const double C90560 = C90559 / C89892;
    const double C91190 = C90306 * C90962;
    const double C91267 = C90248 * C90962;
    const double C9425 =
        (((-2 * C90918) / C89892 - (C90248 * C90925) / C89892) * ae) / C89849 -
        ((2 * C90946 + C90248 * C90953) * ce) / C90107 +
        C90306 *
            ((-2 * C90248 * C90962) / C90107 +
             C90248 *
                 ((-(C90106 *
                     (C90187 * C90188 + C90542 * bs[7] * std::pow(C90110, 7)) *
                     C90115 * C90420) /
                   C89892) /
                      C89849 -
                  C90962 / C90107));
    const double C91411 = C91410 / C89892;
    const double C91521 = C90306 * C91515;
    const double C91633 = C91620 / C90107;
    const double C91550 = C91548 + C91344;
    const double C91349 = C91325 + C91342;
    const double C91348 = C91341 / C89892;
    const double C91549 = C91546 + C91341;
    const double C91532 = C90306 * C91529;
    const double C91531 = C90306 * C91528;
    const double C41085 = 3 * (C90847 + C90855 * C90542) +
                          C90306 * (2 * C91260 + C90306 * C91524);
    const double C91638 = C91625 + C91626;
    const double C91637 = C91624 / C89892;
    const double C410 = C307 * C186;
    const double C657 = C554 * C186;
    const double C2298 = C307 * C887;
    const double C2554 = C554 * C887;
    const double C15157 = C15034 * C887;
    const double C31611 = C31488 * C887;
    const double C4446 = C4328 * C893;
    const double C4715 = C554 * C893;
    const double C6692 = C4103 * C893;
    const double C17456 = C15034 * C893;
    const double C33902 = C31488 * C893;
    const double C47121 = C89868 * C893;
    const double C3014 = C307 * C1468;
    const double C3270 = C554 * C1468;
    const double C20398 = C20275 * C1468;
    const double C61535 = C61412 * C1468;
    const double C9829 = C307 * C1474;
    const double C10117 = C9999 * C1474;
    const double C12969 = C4103 * C1474;
    const double C23722 = C20275 * C1474;
    const double C64828 = C61412 * C1474;
    const double C83406 = C89868 * C1474;
    const double C18397 = C15034 * C3515;
    const double C18716 = C554 * C3515;
    const double C22414 = C307 * C3515;
    const double C22745 = C20275 * C3515;
    const double C27786 = C4103 * C3515;
    const double C34834 = C31488 * C3515;
    const double C52701 = C89868 * C3515;
    const double C63860 = C61412 * C3515;
    const double C90291 = -C90287;
    const double C11690 =
        2 * ((-(C90306 * C90935) / C89892) / C89849 - (ae * C90262) / C90107) -
        (ae * (C90277 * C90542 + C90262)) / C90107 +
        C90306 *
            ((-(ae * C90306 * C90277) / C89892) / C89849 - C90935 / C90107 +
             C90306 * ((-(C90306 * C90947) / C89892) / C89849 - C90882));
    const double C5013 =
        (-2 * (C90248 * C90262 + C90129 * ce)) / C89892 -
        (C90248 * (C90248 * C90879 + C90262 + C90877 * ce)) / C89892 -
        ((C90129 + C90152 * C90420) * ce) / C89892;
    const double C5869 =
        -(C90306 * (C90248 * C90879 + C90262 + C90877 * ce)) / C89892;
    const double C5872 =
        -(C90879 * C90542 + C90248 * C90262 + C90129 * ce) / C89892;
    const double C13968 = (-2 * C90306 * C90879) / C89892 -
                          (C90306 * (C90896 * C90542 + C90879)) / C89892;
    const double C90869 = C90866 + C90260;
    const double C91332 = C91321 / C89892;
    const double C91328 = C91317 / C89892;
    const double C91509 = C91317 / C90107;
    const double C41213 = C36216 * C13967;
    const double C41521 = C31488 * C13967;
    const double C44614 = C9999 * C13967;
    const double C73703 = C307 * C13967;
    const double C86821 = C15034 * C13967;
    const double C71761 = C36216 * C11094;
    const double C71935 = C307 * C11094;
    const double C91602 = -C91598;
    const double C490 = C307 * C249;
    const double C735 = C554 * C249;
    const double C2373 = C307 * C953;
    const double C2629 = C554 * C953;
    const double C15254 = C15034 * C953;
    const double C31708 = C31488 * C953;
    const double C4538 = C4328 * C959;
    const double C4801 = C554 * C959;
    const double C6804 = C4103 * C959;
    const double C17562 = C15034 * C959;
    const double C34008 = C31488 * C959;
    const double C47231 = C89868 * C959;
    const double C3102 = C307 * C1537;
    const double C3358 = C554 * C1537;
    const double C20494 = C20275 * C1537;
    const double C61631 = C61412 * C1537;
    const double C9915 = C307 * C1543;
    const double C10209 = C9999 * C1543;
    const double C13087 = C4103 * C1543;
    const double C23830 = C20275 * C1543;
    const double C64936 = C61412 * C1543;
    const double C83512 = C89868 * C1543;
    const double C18505 = C15034 * C3589;
    const double C18821 = C554 * C3589;
    const double C22516 = C307 * C3589;
    const double C22851 = C20275 * C3589;
    const double C27922 = C4103 * C3589;
    const double C34942 = C31488 * C3589;
    const double C52837 = C89868 * C3589;
    const double C63966 = C61412 * C3589;
    const double C90349 = -C90345;
    const double C7136 = C4101 * C5377;
    const double C47559 = C44804 * C5377;
    const double C12399 = C307 * C5956;
    const double C12734 = C9999 * C5956;
    const double C14082 = C4103 * C5956;
    const double C27210 = C15034 * C5956;
    const double C29946 = C20275 * C5956;
    const double C42178 = C36216 * C5956;
    const double C43420 = C31488 * C5956;
    const double C51831 = C89868 * C5956;
    const double C78992 = C61412 * C5956;
    const double C11198 =
        (-2 * (C90306 * C90320 + C90129 * ce)) / C89892 -
        (C90306 * (C90306 * C91186 + C90320 + C91184 * ce)) / C89892 -
        ((C90129 + C90152 * C90542) * ce) / C89892;
    const double C36835 = C36216 * C5115;
    const double C37172 = C554 * C5115;
    const double C40487 = C36216 * C5959;
    const double C41000 = C9999 * C5959;
    const double C44387 = C31488 * C5959;
    const double C60880 = C20275 * C5959;
    const double C67750 = C4328 * C5959;
    const double C70726 = C61412 * C5959;
    const double C89504 = C15034 * C5959;
    const double C39142 = C36216 * C8780;
    const double C39568 = C554 * C8780;
    const double C57400 = C20275 * C8780;
    const double C67228 = C61412 * C8780;
    const double C70387 = C4328 * C8780;
    const double C91177 = C91174 + C90318;
    const double C91469 = C91468 / C90107;
    const double C91617 = C91468 / C89892;
    const double C91634 = C91621 / C89892;
    const double C14075 =
        (-2 * (C90306 * C90909 + C90847 * ce)) / C89892 -
        (C90306 * (C90306 * C91264 + C90909 + C91260 * ce)) / C89892 -
        ((C90847 + C90855 * C90542) * ce) / C89892;
    const double C91374 = -C91370;
    const double C334 = C92137 * C312;
    const double C2209 = C92137 * C1019;
    const double C15055 = C92186 * C1019;
    const double C31509 = C92186 * C1019;
    const double C4347 = C4101 * C1025;
    const double C17341 = C92186 * C1025;
    const double C33787 = C92186 * C1025;
    const double C45050 = C44804 * C1025;
    const double C2931 = C92137 * C1603;
    const double C9745 = C92137 * C1609;
    const double C18280 = C92186 * C3663;
    const double C22308 = C92137 * C3663;
    const double C34717 = C92186 * C3663;
    const double C44388 = C92186 * C6209;
    const double C57922 = C44804 * C6209;
    const double C67751 = C4101 * C6209;
    const double C89505 = C92186 * C6209;
    const double C91339 = C91330 / C89849;
    const double C90405 = -C90402;
    const double C8097 = C4101 * C6210;
    const double C28335 = C92186 * C6210;
    const double C48477 = C44804 * C6210;
    const double C53250 = C92186 * C6210;
    const double C12400 = C92137 * C6211;
    const double C27211 = C92186 * C6211;
    const double C43421 = C92186 * C6211;
    const double C5217 = (2 * (C90248 * C90377 + C90129 * ae) +
                          C90248 * (C90377 + C90248 * C90880 + C90877 * ae) +
                          (C90129 + C90152 * C90420) * ae) /
                         C89849;
    const double C6041 =
        (C90306 * (C90377 + C90248 * C90880 + C90877 * ae)) / C89849;
    const double C6045 =
        (C90248 * C90377 + C90129 * ae + C90880 * C90542) / C89849;
    const double C14184 =
        (2 * C90306 * C90880 + C90306 * (C90880 + C90897 * C90542)) / C89849;
    const double C11333 = C11321 + C11322;
    const double C90870 = C90375 + C90867;
    const double C91329 = C91318 / C90107;
    const double C41417 = C92186 * C14183;
    const double C73627 = C92137 * C14183;
    const double C86735 = C92186 * C14183;
    const double C71878 = C92137 * C11300;
    const double C91437 = -C91435;
    const double C6130 =
        (-(C90430 * C90542) / C89892) / C89849 - C90425 / C90107 -
        (ae * (C90860 * C90542 + C90849)) / C90107 -
        ((C90850 + C90863 * C90542) * ce) / C90107 +
        C90248 * ((-((C90375 + C90383 * C90542) * ce) / C89892) / C89849 -
                  (ae * (C90268 * C90542 + C90260)) / C90107 +
                  C90248 * ((-(C90436 * C90542) / C89892) / C89849 - C90433));
    const double C90859 = C90853 / C90107;
    const double C6127 = (-(ae * C90306 * C90879) / C89892) / C89849 -
                         (C90306 * C90875) / C90107 -
                         (C90306 * C90880 * ce) / C90107 +
                         C90248 * ((-(C90306 * C90392 * ce) / C89892) / C89849 -
                                   (ae * C90306 * C90277) / C90107 -
                                   (C90248 * C90306 * C90883) / C90107);
    const double C6131 =
        (-((C90377 + C90392 * C90542) * ce) / C89892) / C89849 -
        (ae * (C90277 * C90542 + C90262)) / C90107 +
        C90248 * ((-(C90883 * C90542) / C89892) / C89849 - C90875 / C90107);
    const double C6132 =
        (-(C90883 * C90542) / C89892) / C89849 - C90875 / C90107 -
        (ae * (C90896 * C90542 + C90879)) / C90107 -
        ((C90880 + C90897 * C90542) * ce) / C90107 +
        C90248 *
            ((-((C90392 + C90887 * C90542) * ce) / C89892) / C89849 -
             (ae * (C90884 * C90542 + C90277)) / C90107 +
             C90248 *
                 ((-(C90106 *
                     (C90187 * C90188 + C90420 * bs[7] * std::pow(C90110, 7)) *
                     C90115 * C90542) /
                   C89892) /
                      C89849 -
                  C90883 / C90107));
    const double C11418 =
        (-2 * C90306 * C90875) / C90107 +
        C90306 * ((-(C90883 * C90542) / C89892) / C89849 - C90875 / C90107);
    const double C11420 =
        3 * ((-(C90430 * C90542) / C89892) / C89849 - C90425 / C90107) +
        C90306 * ((-2 * C91051) / C90107 +
                  C90306 * ((-(C90436 * C90542) / C89892) / C89849 - C90433));
    const double C14305 =
        (((-2 * C91136) / C89892 - (C90306 * C91140) / C89892) * ae) / C89849 -
        ((2 * C91108 + C90306 * C91110) * ce) / C90107 +
        C90248 * ((-2 * C91051) / C90107 +
                  C90306 * ((-(C90436 * C90542) / C89892) / C89849 - C90433));
    const double C411 = C92137 * C398;
    const double C4445 = C4101 * C1088;
    const double C7030 = C4100 * C1088;
    const double C17453 = C92186 * C1088;
    const double C33899 = C92186 * C1088;
    const double C45148 = C44804 * C1088;
    const double C2294 = C92137 * C1089;
    const double C4449 = C4100 * C1089;
    const double C15156 = C92186 * C1089;
    const double C17459 = C92322 * C1089;
    const double C31610 = C92186 * C1089;
    const double C33905 = C31260 * C1089;
    const double C3012 = C92137 * C1670;
    const double C18396 = C92322 * C1670;
    const double C34833 = C31260 * C1670;
    const double C9828 = C92137 * C1674;
    const double C27091 = C92322 * C1674;
    const double C43317 = C31260 * C1674;
    const double C7991 = C4100 * C3736;
    const double C12290 = C92137 * C3736;
    const double C18394 = C92186 * C3736;
    const double C28201 = C92322 * C3736;
    const double C34831 = C92186 * C3736;
    const double C53116 = C31260 * C3736;
    const double C30629 = C92186 * C6128;
    const double C44271 = C92186 * C6128;
    const double C57824 = C44804 * C6128;
    const double C67653 = C4101 * C6128;
    const double C70279 = C4100 * C6128;
    const double C14317 = C92137 * C6129;
    const double C27093 = C92186 * C6129;
    const double C41520 = C92186 * C6129;
    const double C44277 = C31260 * C6129;
    const double C67657 = C4100 * C6129;
    const double C89401 = C92322 * C6129;
    const double C11434 = C92137 * C11419;
    const double C41524 = C31260 * C11419;
    const double C86824 = C92322 * C11419;
    const double C581 = C92148 * C559;
    const double C2465 = C92148 * C1201;
    const double C4629 = C92148 * C1207;
    const double C3187 = C92148 * C1785;
    const double C20296 = C92212 * C1785;
    const double C61433 = C92212 * C1785;
    const double C10018 = C9516 * C1791;
    const double C23605 = C92212 * C1791;
    const double C64711 = C92212 * C1791;
    const double C80709 = C80243 * C1791;
    const double C18612 = C92148 * C3877;
    const double C22630 = C92212 * C3877;
    const double C63745 = C92212 * C3877;
    const double C91642 = C91632 / C89849;
    const double C90506 = -C90503;
    const double C5590 = C92148 * C5579;
    const double C12514 = C9516 * C6290;
    const double C29671 = C92212 * C6290;
    const double C78717 = C92212 * C6290;
    const double C82971 = C80243 * C6290;
    const double C11608 = (2 * (C90306 * C90478 + C90129 * ae) +
                           C90306 * (C90478 + C90306 * C91187 + C91184 * ae) +
                           (C90129 + C90152 * C90542) * ae) /
                          C89849;
    const double C5490 = C5478 + C5479;
    const double C8215 = C8209 + C8210;
    const double C26320 = C26302 + C26303;
    const double C68674 = C68666 + C68667;
    const double C37059 = C92148 * C5457;
    const double C40811 = C9516 * C6291;
    const double C60671 = C92212 * C6291;
    const double C70495 = C92212 * C6291;
    const double C86225 = C80243 * C6291;
    const double C39423 = C92148 * C9196;
    const double C57232 = C92212 * C9196;
    const double C67031 = C92212 * C9196;
    const double C91178 = C90476 + C91175;
    const double C91631 = C91618 / C90107;
    const double C14525 = (2 * (C90306 * C90937 + C90847 * ae) +
                           C90306 * (C90937 + C90306 * C91265 + C91260 * ae) +
                           (C90847 + C90855 * C90542) * ae) /
                          C89849;
    const double C91399 = -C91396;
    const double C5670 =
        3 * ((-(C90552 * C90420) / C89892) / C89849 - C90547 / C90107) +
        C90248 * ((-2 * C90248 * C90552) / C90107 +
                  C90248 * ((-(C90558 * C90420) / C89892) / C89849 - C90555));
    const double C6456 =
        (-(C90552 * C90420) / C89892) / C89849 - C90547 / C90107 -
        (ae * (C90306 * C90913 + C90862 * ce)) / C90107 -
        ((C90306 * C90941 + C90862 * ae) * ce) / C90107 +
        C90306 * ((-(C90941 * ce) / C89892) / C89849 - (ae * C90913) / C90107 +
                  C90306 * ((-(C90558 * C90420) / C89892) / C89849 - C90555));
    const double C9424 =
        (((-2 * C90909) / C89892 - (C90248 * C90913) / C89892) * ae) / C89849 -
        ((2 * C90937 + C90248 * C90941) * ce) / C90107 +
        C90306 * ((-2 * C90248 * C90552) / C90107 +
                  C90248 * ((-(C90558 * C90420) / C89892) / C89849 - C90555));
    const double C5668 =
        (-2 * C90248 * C90958) / C90107 +
        C90248 *
            ((-(C90106 * C90558 * C90420) / C89892) / C89849 - C90958 / C90107);
    const double C5671 =
        3 * ((-(C90962 * C90420) / C89892) / C89849 - C90958 / C90107) +
        C90248 *
            ((-2 * C90248 * C90962) / C90107 +
             C90248 *
                 ((-(C90106 *
                     (C90187 * C90188 + C90542 * bs[7] * std::pow(C90110, 7)) *
                     C90115 * C90420) /
                   C89892) /
                      C89849 -
                  C90962 / C90107));
    const double C6454 =
        (-(ae * (C90306 * C90918 + C90877 * ce)) / C89892) / C89849 -
        (C90248 * C90958) / C90107 -
        ((C90306 * C90946 + C90877 * ae) * ce) / C90107 +
        C90306 * ((-(C90946 * ce) / C89892) / C89849 - (ae * C90918) / C90107 -
                  (C90306 * C90248 * C90962) / C90107);
    const double C6457 =
        (-((C90478 + C90493 * C90420) * ce) / C89892) / C89849 -
        (ae * (C90335 * C90420 + C90320)) / C90107 +
        C90306 * ((-(C90962 * C90420) / C89892) / C89849 - C90958 / C90107);
    const double C6458 =
        (-(C90962 * C90420) / C89892) / C89849 - C90958 / C90107 -
        (ae * (C90306 * C90925 + C90892 * ce)) / C90107 -
        ((C90306 * C90953 + C90892 * ae) * ce) / C90107 +
        C90306 *
            ((-(C90953 * ce) / C89892) / C89849 - (ae * C90925) / C90107 +
             C90306 *
                 ((-(C90106 *
                     (C90187 * C90188 + C90542 * bs[7] * std::pow(C90110, 7)) *
                     C90115 * C90420) /
                   C89892) /
                      C89849 -
                  C90962 / C90107));
    const double C91167 = C91161 / C90107;
    const double C14727 =
        2 * ((-(C90937 * ce) / C89892) / C89849 - (ae * C90909) / C90107 -
             (C90306 * C91258) / C90107) -
        (ae * (C90306 * C91264 + C90909 + C91260 * ce)) / C90107 -
        ((C90937 + C90306 * C91265 + C91260 * ae) * ce) / C90107 +
        C90306 * ((-(ae * C91264) / C89892) / C89849 - C91258 / C90107 -
                  (C91265 * ce) / C90107 +
                  C90306 * ((-(C91261 * ce) / C89892) / C89849 -
                            (ae * C91259) / C90107 -
                            (C90306 * C90248 * C90558) / C90107));
    const double C736 = C92148 * C723;
    const double C2633 = C92148 * C1326;
    const double C22854 = C92323 * C1326;
    const double C63969 = C60959 * C1326;
    const double C4800 = C92148 * C1330;
    const double C26547 = C92323 * C1330;
    const double C68881 = C60959 * C1330;
    const double C10208 = C9516 * C1912;
    const double C13746 = C9515 * C1912;
    const double C23827 = C92212 * C1912;
    const double C64933 = C92212 * C1912;
    const double C80899 = C80243 * C1912;
    const double C3354 = C92148 * C1913;
    const double C10212 = C9515 * C1913;
    const double C20493 = C92212 * C1913;
    const double C23833 = C92323 * C1913;
    const double C61630 = C92212 * C1913;
    const double C64939 = C60959 * C1913;
    const double C8429 = C92148 * C4020;
    const double C12737 = C9515 * C4020;
    const double C22856 = C92212 * C4020;
    const double C29949 = C92323 * C4020;
    const double C63971 = C92212 * C4020;
    const double C78995 = C60959 * C4020;
    const double C5684 = C92148 * C5669;
    const double C57403 = C92323 * C5669;
    const double C67231 = C60959 * C5669;
    const double C31179 = C92212 * C6453;
    const double C40999 = C9516 * C6453;
    const double C44721 = C9515 * C6453;
    const double C70723 = C92212 * C6453;
    const double C86413 = C80243 * C6453;
    const double C9436 = C92148 * C6455;
    const double C26549 = C92212 * C6455;
    const double C41003 = C9515 * C6455;
    const double C60883 = C92323 * C6455;
    const double C67227 = C92212 * C6455;
    const double C70729 = C60959 * C6455;
    const double C90167 = C90163 - C90148;
    const double C30769 = C30766 + C30767;
    const double C44390 = C44383 + C44384;
    const double C67752 = C67740 + C67741;
    const double C70390 = C70385 + C70386;
    const double C14427 = C14424 + C14425;
    const double C27215 = C27206 + C27207;
    const double C41624 = C41615 + C41616;
    const double C67756 = C67748 + C67749;
    const double C89506 = C89502 + C89503;
    const double C90868 = C90865 - C90267;
    const double C91176 = C91173 - C90325;
    const double C36672 = (4 * (2 * C90808 + C90248 * C90813) +
                           C90248 * (3 * C90813 + C90248 * C91287)) /
                          C89849;
    const double C37228 =
        (2 * C90808 + C90248 * C90813 + C91287 * C90542) / C89849;
    const double C38956 = (C90306 * (3 * C90813 + C90248 * C91287)) / C89849;
    const double C71692 = (4 * (2 * C91084 + C90306 * C91088) +
                           C90306 * (3 * C91088 + C90306 * C91568)) /
                          C89849;
    const double C91313 = C91304 - C91311;
    const double C91594 = C91585 - C91592;
    const double C90301 = C90289 - C90299;
    const double C91613 = C91604 - C91611;
    const double C90359 = C90347 - C90357;
    const double C91382 = C91372 - C91379;
    const double C313 = (4 * (2 * C90377 + C90106 * C90387) +
                         C90106 * (3 * C90387 + C90106 * C90413)) /
                        C89849;
    const double C1610 =
        (2 * C90377 + C90106 * C90387 + C90413 * C90542) / C89849;
    const double C2919 = (C90306 * (3 * C90387 + C90106 * C90413)) / C89849;
    const double C71871 = (4 * (2 * C91108 + C90306 * C91110) +
                           C90306 * (3 * C91110 + C90306 * C91577)) /
                          C89849;
    const double C560 = (4 * (2 * C90478 + C90106 * C90488) +
                         C90106 * (3 * C90488 + C90106 * C90514)) /
                        C89849;
    const double C1208 =
        (2 * C90478 + C90106 * C90488 + C90514 * C90420) / C89849;
    const double C2453 = (C90248 * (3 * C90488 + C90106 * C90514)) / C89849;
    const double C37051 = (4 * (2 * C90937 + C90248 * C90941) +
                           C90248 * (3 * C90941 + C90248 * C91404)) /
                          C89849;
    const double C90274 = C90273 / C89849;
    const double C90815 = C90814 / C89849;
    const double C90298 = C90295 / C89849;
    const double C91286 = C91284 / C89849;
    const double C91556 = C91555 / C89849;
    const double C11316 = C2935 * C92078;
    const double C13202 = C2935 * C1983;
    const double C13196 = C2935 * C1984;
    const double C11339 = C11330 * C92078;
    const double C13198 = C11330 * C1983;
    const double C14205 = C14201 * C92078;
    const double C90389 = C90388 / C89849;
    const double C90836 = C90835 / C89849;
    const double C14207 = C14203 * C92078;
    const double C11342 = C11334 * C92078;
    const double C73025 = C11334 * C1983;
    const double C90412 = C90409 / C89849;
    const double C91310 = C91307 / C89849;
    const double C91422 = C91421 / C89849;
    const double C91454 = -C91453;
    const double C90332 = C90331 / C89849;
    const double C91090 = C91089 / C89849;
    const double C90356 = C90353 / C89849;
    const double C91295 = C91294 / C89849;
    const double C91485 = -C91483;
    const double C91567 = C91565 / C89849;
    const double C499 = C495 * C92110;
    const double C3100 = C495 * C2709;
    const double C2387 = C2384 * C92110;
    const double C3107 = C3104 * C2710;
    const double C9911 = C3104 * C92110;
    const double C13411 = C3104 * C2709;
    const double C90915 = C90914 / C89849;
    const double C91058 = C91057 / C89849;
    const double C2386 = C2383 * C92110;
    const double C3108 = C3105 * C2710;
    const double C9918 = C3105 * C92110;
    const double C23493 = C3105 * C2709;
    const double C90461 = C90460 / C89849;
    const double C90926 = -C90924;
    const double C91064 = -C91063;
    const double C91378 = C91375 / C89849;
    const double C91438 = C91436 / C89849;
    const double C5469 = C2469 * C92078;
    const double C7249 = C2469 * C1983;
    const double C7247 = C2469 * C1984;
    const double C5496 = C5487 * C92078;
    const double C7253 = C5487 * C1983;
    const double C9219 = C9215 * C92078;
    const double C90490 = C90489 / C89849;
    const double C91125 = C91124 / C89849;
    const double C5500 = C5491 * C92078;
    const double C38161 = C5491 * C1983;
    const double C9217 = C9213 * C92078;
    const double C90513 = C90510 / C89849;
    const double C91389 = C91388 / C89849;
    const double C91503 = -C91501;
    const double C91591 = C91588 / C89849;
    const double C666 = C662 * C92099;
    const double C2552 = C662 * C1985;
    const double C2559 = C2556 * C1986;
    const double C4711 = C2556 * C92099;
    const double C7360 = C2556 * C1985;
    const double C3275 = C3272 * C92099;
    const double C90943 = C90942 / C89849;
    const double C91142 = C91141 / C89849;
    const double C2560 = C2557 * C1986;
    const double C4718 = C2557 * C92099;
    const double C17775 = C2557 * C1985;
    const double C3276 = C3273 * C92099;
    const double C90537 = C90536 / C89849;
    const double C90954 = -C90952;
    const double C91150 = -C91148;
    const double C91403 = C91400 / C89849;
    const double C91610 = C91607 / C89849;
    const double C45574 = C45551 + C45552;
    const double C45676 = C45664 + C45665;
    const double C45771 = C45759 + C45760;
    const double C51596 = C51573 + C51574;
    const double C51718 = C51707 + C51708;
    const double C51833 = C51821 + C51822;
    const double C15586 = C14810 * C808;
    const double C15578 = C14810 * C811;
    const double C15572 = C14810 * C803;
    const double C15688 = C14810 * C893;
    const double C15678 = C14810 * C888;
    const double C15776 = C14810 * C959;
    const double C15774 = C14810 * C954;
    const double C17000 = C14810 * C802;
    const double C17120 = C14810 * C887;
    const double C17227 = C14810 * C953;
    const double C18929 = C14810 * C3433;
    const double C19043 = C14810 * C3515;
    const double C19146 = C14810 * C3589;
    const double C21265 = C14810 * C1392;
    const double C21257 = C14810 * C1395;
    const double C21251 = C14810 * C1387;
    const double C21363 = C14810 * C1474;
    const double C21361 = C14810 * C1469;
    const double C21459 = C14810 * C1543;
    const double C21449 = C14810 * C1538;
    const double C22961 = C14810 * C1386;
    const double C23077 = C14810 * C1468;
    const double C23188 = C14810 * C1537;
    const double C32036 = C31264 * C808;
    const double C32028 = C31264 * C811;
    const double C32022 = C31264 * C803;
    const double C32138 = C31264 * C893;
    const double C32128 = C31264 * C888;
    const double C32226 = C31264 * C959;
    const double C32224 = C31264 * C954;
    const double C33446 = C31264 * C802;
    const double C33566 = C31264 * C887;
    const double C33673 = C31264 * C953;
    const double C35348 = C31264 * C3433;
    const double C35462 = C31264 * C3515;
    const double C35565 = C31264 * C3589;
    const double C62402 = C31264 * C1392;
    const double C62394 = C31264 * C1395;
    const double C62388 = C31264 * C1387;
    const double C62500 = C31264 * C1474;
    const double C62498 = C31264 * C1469;
    const double C62596 = C31264 * C1543;
    const double C62586 = C31264 * C1538;
    const double C64076 = C31264 * C1386;
    const double C64192 = C31264 * C1468;
    const double C64303 = C31264 * C1537;
    const double C89872 = C92062 - C89870;
    const double C4923 = C4900 + C4901;
    const double C5033 = C5021 + C5022;
    const double C5136 = C5124 + C5125;
    const double C11002 = C10979 + C10980;
    const double C11115 = C11103 + C11104;
    const double C11218 = C11206 + C11207;
    const double C36696 = C36684 + C36685;
    const double C36694 = C36680 + C36681;
    const double C36693 = C36678 + C36679;
    const double C36692 = C36676 + C36677;
    const double C36771 = C36764 + C36765;
    const double C36770 = C36762 + C36763;
    const double C36840 = C36833 + C36834;
    const double C36839 = C36830 + C36831;
    const double C36838 = C36827 + C36828;
    const double C37728 = C37712 + C37713;
    const double C37812 = C37806 + C37807;
    const double C37890 = C37882 + C37883;
    const double C38977 = C38970 + C38971;
    const double C38975 = C38966 + C38967;
    const double C39058 = C39052 + C39053;
    const double C39145 = C39137 + C39138;
    const double C39144 = C39132 + C39133;
    const double C40320 = C40312 + C40313;
    const double C40492 = C40485 + C40486;
    const double C41115 = C41105 + C41106;
    const double C41113 = C41101 + C41102;
    const double C41109 = C41094 + C41095;
    const double C41108 = C41092 + C41093;
    const double C41107 = C41090 + C41091;
    const double C41223 = C41216 + C41217;
    const double C41220 = C41209 + C41210;
    const double C41219 = C41204 + C41205;
    const double C41317 = C41310 + C41311;
    const double C41316 = C41308 + C41309;
    const double C42882 = C42872 + C42873;
    const double C42999 = C42995 + C42996;
    const double C43104 = C43100 + C43101;
    const double C15591 = C92346 * C818;
    const double C15585 = C92346 * C830;
    const double C15575 = C92346 * C829;
    const double C15569 = C92346 * C817;
    const double C15685 = C92346 * C899;
    const double C15683 = C92346 * C898;
    const double C15781 = C92346 * C965;
    const double C15771 = C92346 * C964;
    const double C17011 = C92346 * C828;
    const double C17005 = C92346 * C816;
    const double C17117 = C92346 * C897;
    const double C17224 = C92346 * C963;
    const double C18934 = C92346 * C3435;
    const double C18928 = C92346 * C3443;
    const double C19040 = C92346 * C3517;
    const double C19151 = C92346 * C3591;
    const double C21270 = C92346 * C1402;
    const double C21264 = C92346 * C1414;
    const double C21254 = C92346 * C1413;
    const double C21248 = C92346 * C1401;
    const double C21368 = C92346 * C1480;
    const double C21358 = C92346 * C1479;
    const double C21456 = C92346 * C1549;
    const double C21454 = C92346 * C1548;
    const double C22972 = C92346 * C1412;
    const double C22966 = C92346 * C1400;
    const double C23082 = C92346 * C1478;
    const double C23185 = C92346 * C1547;
    const double C89 = (C92346 * C92057) / C89849 + (C92310 - C92333) / C89854;
    const double C15589 = C92347 * C819;
    const double C15583 = C92347 * C831;
    const double C15577 = C92347 * C828;
    const double C15571 = C92347 * C816;
    const double C15681 = C92347 * C897;
    const double C15773 = C92347 * C963;
    const double C17003 = C92347 * C815;
    const double C18932 = C92347 * C3436;
    const double C21268 = C92347 * C1403;
    const double C21262 = C92347 * C1415;
    const double C21256 = C92347 * C1412;
    const double C21250 = C92347 * C1400;
    const double C21360 = C92347 * C1478;
    const double C21452 = C92347 * C1547;
    const double C22964 = C92347 * C1399;
    const double C90 =
        (C92347 * C92057) / C89849 + (2 * C92067 + C92346) / C89854;
    const double C91 = (C92057 * C92067) / C89858 + C92347 / C89854;
    const double C45049 = C45031 * C808;
    const double C45039 = C45031 * C823;
    const double C45033 = C45031 * C807;
    const double C45149 = C45031 * C893;
    const double C45147 = C45031 * C892;
    const double C45241 = C45031 * C959;
    const double C45239 = C45031 * C958;
    const double C47345 = C45031 * C4885;
    const double C47339 = C45031 * C4881;
    const double C47558 = C45031 * C5113;
    const double C48263 = C45031 * C5777;
    const double C48257 = C45031 * C5771;
    const double C48476 = C45031 * C5957;
    const double C57727 = C45031 * C5775;
    const double C57721 = C45031 * C5787;
    const double C57719 = C45031 * C5778;
    const double C57713 = C45031 * C5772;
    const double C57823 = C45031 * C5870;
    const double C57921 = C45031 * C5959;
    const double C57911 = C45031 * C5958;
    const double C60346 = C45031 * C8540;
    const double C60340 = C45031 * C8536;
    const double C60563 = C45031 * C8780;
    const double C90034 = C92137 - C90031;
    const double C45052 = C92348 * C316;
    const double C45046 = C92348 * C310;
    const double C45044 = C92348 * C315;
    const double C45038 = C92348 * C309;
    const double C45154 = C92348 * C396;
    const double C45144 = C92348 * C395;
    const double C45246 = C92348 * C476;
    const double C45236 = C92348 * C475;
    const double C47342 = C92348 * C1029;
    const double C47336 = C92348 * C1021;
    const double C47456 = C92348 * C1087;
    const double C47563 = C92348 * C1145;
    const double C48260 = C92348 * C1613;
    const double C48254 = C92348 * C1605;
    const double C48370 = C92348 * C1671;
    const double C48481 = C92348 * C1729;
    const double C57732 = C92348 * C1607;
    const double C57726 = C92348 * C1615;
    const double C57716 = C92348 * C1614;
    const double C57710 = C92348 * C1606;
    const double C57830 = C92348 * C1673;
    const double C57820 = C92348 * C1672;
    const double C57918 = C92348 * C1728;
    const double C57916 = C92348 * C1727;
    const double C60343 = C92348 * C3665;
    const double C60337 = C92348 * C3661;
    const double C60457 = C92348 * C3735;
    const double C60560 = C92348 * C3805;
    const double C36212 =
        (C92348 * C92181) / C89849 + (C92322 - C92340) / C89854;
    const double C15072 = C15064 + C15065;
    const double C15264 = C15260 + C15261;
    const double C86729 = C26983 + C26982;
    const double C4363 = C4348 + C4349;
    const double C4360 = C4342 + C4343;
    const double C4359 = C4340 + C4341;
    const double C4356 = C4334 + C4335;
    const double C4457 = C4450 + C4451;
    const double C4452 = C4440 + C4441;
    const double C4549 = C4542 + C4543;
    const double C4544 = C4532 + C4533;
    const double C6925 = C6916 + C6917;
    const double C6922 = C6910 + C6911;
    const double C7143 = C7139 + C7140;
    const double C7886 = C7877 + C7878;
    const double C7883 = C7871 + C7872;
    const double C8104 = C8100 + C8101;
    const double C67573 = C67560 + C67561;
    const double C67570 = C67554 + C67555;
    const double C67565 = C67544 + C67545;
    const double C67562 = C67538 + C67539;
    const double C67660 = C67648 + C67649;
    const double C67755 = C67746 + C67747;
    const double C67754 = C67744 + C67745;
    const double C70175 = C70166 + C70167;
    const double C70172 = C70160 + C70161;
    const double C70389 = C70383 + C70384;
    const double C45048 = C92349 * C1020;
    const double C45042 = C92349 * C1029;
    const double C45036 = C92349 * C1021;
    const double C45152 = C92349 * C1089;
    const double C45146 = C92349 * C1087;
    const double C45244 = C92349 * C1144;
    const double C45238 = C92349 * C1145;
    const double C47338 = C92349 * C1024;
    const double C47454 = C92349 * C1088;
    const double C47561 = C92349 * C1148;
    const double C48256 = C92349 * C3662;
    const double C48372 = C92349 * C3736;
    const double C48479 = C92349 * C3806;
    const double C57730 = C92349 * C6043;
    const double C57724 = C92349 * C6049;
    const double C57718 = C92349 * C3665;
    const double C57712 = C92349 * C3661;
    const double C57828 = C92349 * C6129;
    const double C57822 = C92349 * C3735;
    const double C57920 = C92349 * C6208;
    const double C57914 = C92349 * C3805;
    const double C60345 = C92349 * C6048;
    const double C60339 = C92349 * C6042;
    const double C60455 = C92349 * C6128;
    const double C60562 = C92349 * C6207;
    const double C36213 =
        (C92349 * C92181) / C89849 + (2 * C92186 + C92348) / C89854;
    const double C36214 = (C92181 * C92186) / C89858 + C92349 / C89854;
    const double C31522 = C31506 + C31507;
    const double C31520 = C31502 + C31503;
    const double C31518 = C31498 + C31499;
    const double C31517 = C31496 + C31497;
    const double C31515 = C31492 + C31493;
    const double C31617 = C31607 + C31608;
    const double C31615 = C31602 + C31603;
    const double C31717 = C31710 + C31711;
    const double C31714 = C31704 + C31705;
    const double C31712 = C31699 + C31700;
    const double C33796 = C33784 + C33785;
    const double C33794 = C33780 + C33781;
    const double C33792 = C33776 + C33777;
    const double C34019 = C34014 + C34015;
    const double C34017 = C34010 + C34011;
    const double C34726 = C34714 + C34715;
    const double C34724 = C34710 + C34711;
    const double C34722 = C34706 + C34707;
    const double C34949 = C34944 + C34945;
    const double C34947 = C34940 + C34941;
    const double C41431 = C41418 + C41419;
    const double C41429 = C41414 + C41415;
    const double C41426 = C41408 + C41409;
    const double C41424 = C41404 + C41405;
    const double C41422 = C41400 + C41401;
    const double C41420 = C41396 + C41397;
    const double C41525 = C41512 + C41513;
    const double C41623 = C41613 + C41614;
    const double C41622 = C41611 + C41612;
    const double C43213 = C43206 + C43207;
    const double C43422 = C43418 + C43419;
    const double C44169 = C44159 + C44160;
    const double C44165 = C44151 + C44152;
    const double C44163 = C44147 + C44148;
    const double C44391 = C44385 + C44386;
    const double C44389 = C44381 + C44382;
    const double C52979 = C52971 + C52972;
    const double C53254 = C53251 + C53252;
    const double C80708 = C80690 * C1392;
    const double C80698 = C80690 * C1407;
    const double C80692 = C80690 * C1391;
    const double C80808 = C80690 * C1474;
    const double C80806 = C80690 * C1473;
    const double C80900 = C80690 * C1543;
    const double C80898 = C80690 * C1542;
    const double C82970 = C80690 * C5774;
    const double C83189 = C80690 * C5956;
    const double C83918 = C80690 * C10964;
    const double C83912 = C80690 * C10960;
    const double C84028 = C80690 * C11092;
    const double C86224 = C80690 * C5775;
    const double C86218 = C80690 * C5787;
    const double C86216 = C80690 * C5783;
    const double C86210 = C80690 * C5773;
    const double C86316 = C80690 * C5871;
    const double C86414 = C80690 * C5959;
    const double C86412 = C80690 * C5955;
    const double C89612 = C80690 * C13849;
    const double C89606 = C80690 * C13853;
    const double C89726 = C80690 * C13967;
    const double C90080 = C92148 - C90077;
    const double C80711 = C92350 * C563;
    const double C80705 = C92350 * C557;
    const double C80703 = C92350 * C562;
    const double C80697 = C92350 * C556;
    const double C80813 = C92350 * C643;
    const double C80803 = C92350 * C642;
    const double C80905 = C92350 * C721;
    const double C80895 = C92350 * C720;
    const double C82973 = C92350 * C1211;
    const double C82967 = C92350 * C1203;
    const double C83087 = C92350 * C1269;
    const double C83194 = C92350 * C1327;
    const double C83915 = C92350 * C1795;
    const double C83909 = C92350 * C1787;
    const double C84025 = C92350 * C1853;
    const double C84136 = C92350 * C1911;
    const double C86229 = C92350 * C1205;
    const double C86223 = C92350 * C1213;
    const double C86213 = C92350 * C1212;
    const double C86207 = C92350 * C1204;
    const double C86323 = C92350 * C1268;
    const double C86321 = C92350 * C1267;
    const double C86419 = C92350 * C1329;
    const double C86409 = C92350 * C1328;
    const double C89617 = C92350 * C3875;
    const double C89611 = C92350 * C3879;
    const double C89723 = C92350 * C3949;
    const double C89834 = C92350 * C4019;
    const double C70783 =
        (C92350 * C92207) / C89849 + (C92323 - C92343) / C89854;
    const double C20313 = C20305 + C20306;
    const double C20408 = C20404 + C20405;
    const double C57225 = C26325 + C26324;
    const double C57226 = C26323 + C26322;
    const double C10034 = C10019 + C10020;
    const double C10031 = C10013 + C10014;
    const double C10030 = C10011 + C10012;
    const double C10027 = C10005 + C10006;
    const double C10128 = C10121 + C10122;
    const double C10123 = C10111 + C10112;
    const double C10220 = C10213 + C10214;
    const double C10215 = C10203 + C10204;
    const double C12524 = C12515 + C12516;
    const double C12521 = C12509 + C12510;
    const double C12634 = C12630 + C12631;
    const double C13533 = C13524 + C13525;
    const double C13530 = C13518 + C13519;
    const double C13641 = C13635 + C13636;
    const double C40827 = C40814 + C40815;
    const double C40824 = C40808 + C40809;
    const double C40819 = C40798 + C40799;
    const double C40816 = C40792 + C40793;
    const double C40917 = C40908 + C40909;
    const double C40916 = C40906 + C40907;
    const double C41006 = C40994 + C40995;
    const double C44510 = C44503 + C44504;
    const double C44507 = C44497 + C44498;
    const double C44616 = C44610 + C44611;
    const double C80707 = C92351 * C1786;
    const double C80701 = C92351 * C1795;
    const double C80695 = C92351 * C1787;
    const double C80811 = C92351 * C1852;
    const double C80805 = C92351 * C1853;
    const double C80903 = C92351 * C1913;
    const double C80897 = C92351 * C1911;
    const double C82969 = C92351 * C3876;
    const double C83085 = C92351 * C3950;
    const double C83192 = C92351 * C4020;
    const double C83911 = C92351 * C1790;
    const double C84027 = C92351 * C1856;
    const double C84134 = C92351 * C1912;
    const double C86227 = C92351 * C6288;
    const double C86221 = C92351 * C6294;
    const double C86215 = C92351 * C3879;
    const double C86209 = C92351 * C3875;
    const double C86319 = C92351 * C3949;
    const double C86417 = C92351 * C6455;
    const double C86411 = C92351 * C4019;
    const double C89615 = C92351 * C6289;
    const double C89609 = C92351 * C6295;
    const double C89832 = C92351 * C6453;
    const double C70784 =
        (C92351 * C92207) / C89849 + (2 * C92212 + C92350) / C89854;
    const double C70785 = (C92207 * C92212) / C89858 + C92351 / C89854;
    const double C61446 = C61430 + C61431;
    const double C61444 = C61426 + C61427;
    const double C61442 = C61422 + C61423;
    const double C61441 = C61420 + C61421;
    const double C61439 = C61416 + C61417;
    const double C61544 = C61537 + C61538;
    const double C61541 = C61531 + C61532;
    const double C61539 = C61526 + C61527;
    const double C61637 = C61627 + C61628;
    const double C61635 = C61622 + C61623;
    const double C63754 = C63742 + C63743;
    const double C63752 = C63738 + C63739;
    const double C63750 = C63734 + C63735;
    const double C63867 = C63862 + C63863;
    const double C63865 = C63858 + C63859;
    const double C64720 = C64708 + C64709;
    const double C64718 = C64704 + C64705;
    const double C64716 = C64700 + C64701;
    const double C64832 = C64826 + C64827;
    const double C64830 = C64822 + C64823;
    const double C67045 = C67032 + C67033;
    const double C67043 = C67028 + C67029;
    const double C67040 = C67022 + C67023;
    const double C67038 = C67018 + C67019;
    const double C67036 = C67014 + C67015;
    const double C67034 = C67010 + C67011;
    const double C67140 = C67130 + C67131;
    const double C67139 = C67128 + C67129;
    const double C67232 = C67219 + C67220;
    const double C68675 = C68668 + C68669;
    const double C68780 = C68776 + C68777;
    const double C70513 = C70504 + C70505;
    const double C70511 = C70500 + C70501;
    const double C70509 = C70496 + C70497;
    const double C70507 = C70492 + C70493;
    const double C70620 = C70612 + C70613;
    const double C78722 = C78714 + C78715;
    const double C78860 = C78856 + C78857;
    const double C6578 = C6562 + C6563;
    const double C47009 = C46993 + C46994;
    const double C4927 = C4908 + C4909;
    const double C37730 = C37718 + C37719;
    const double C45578 = C45559 + C45560;
    const double C12861 = C12845 + C12846;
    const double C53783 = C53775 + C53776;
    const double C11006 = C10987 + C10988;
    const double C42884 = C42878 + C42879;
    const double C51605 = C51591 + C51592;
    const double C8567 = C8557 + C8558;
    const double C41964 = C41954 + C41955;
    const double C48899 = C48889 + C48890;
    const double C30495 = C30488 + C30489;
    const double C44164 = C44149 + C44150;
    const double C67564 = C67542 + C67543;
    const double C70173 = C70162 + C70163;
    const double C14202 = C14192 + C14193;
    const double C26984 = C26970 + C26971;
    const double C41425 = C41406 + C41407;
    const double C44167 = C44155 + C44156;
    const double C67572 = C67558 + C67559;
    const double C89296 = C89288 + C89289;
    const double C4722 = C4720 * C92099;
    const double C7364 = C4720 * C1985;
    const double C7362 = C4720 * C1986;
    const double C9922 = C9920 * C92110;
    const double C13415 = C9920 * C2709;
    const double C13413 = C9920 * C2710;
    const double C8324 = C8322 * C92099;
    const double C28605 = C22750 + C22749;
    const double C28604 = C22749 + C22750;
    const double C12408 = C12406 * C92110;
    const double C29537 = C18510 + C18509;
    const double C29536 = C18509 + C18510;
    const double C4712 = C4632 * C181;
    const double C4798 = C4632 * C244;
    const double C5474 = C4632 * C801;
    const double C7256 = C4632 * C1987;
    const double C7254 = C4632 * C1988;
    const double C7363 = C4632 * C2059;
    const double C7361 = C4632 * C2060;
    const double C8430 = C4632 * C2849;
    const double C9826 = C9748 * C181;
    const double C9912 = C9748 * C244;
    const double C11317 = C9748 * C801;
    const double C12291 = C9748 * C2059;
    const double C13205 = C9748 * C1987;
    const double C13199 = C9748 * C1988;
    const double C13414 = C9748 * C2849;
    const double C13412 = C9748 * C2850;
    const double C8316 = C8213 * C181;
    const double C8427 = C8213 * C2850;
    const double C9208 = C8213 * C801;
    const double C12288 = C12183 * C2060;
    const double C12404 = C12183 * C244;
    const double C14196 = C12183 * C801;
    const double C29266 = C18285 + C18286;
    const double C29264 = C18286 + C18285;
    const double C28472 = C22635 + C22636;
    const double C28470 = C22636 + C22635;
    const double C342 = C331 + C332;
    const double C589 = C578 + C579;
    const double C15070 = C15056 + C15057;
    const double C20311 = C20297 + C20298;
    const double C31524 = C31510 + C31511;
    const double C61448 = C61434 + C61435;
    const double C5593 = C5587 + C5588;
    const double C36772 = C36766 + C36767;
    const double C57322 = C57318 + C57319;
    const double C67142 = C67134 + C67135;
    const double C41318 = C41312 + C41313;
    const double C4925 = C4904 + C4905;
    const double C37729 = C37714 + C37715;
    const double C45576 = C45555 + C45556;
    const double C36695 = C36682 + C36683;
    const double C11004 = C10983 + C10984;
    const double C42883 = C42874 + C42875;
    const double C51598 = C51577 + C51578;
    const double C41110 = C41096 + C41097;
    const double C38976 = C38968 + C38969;
    const double C415 = C408 + C409;
    const double C15166 = C15159 + C15160;
    const double C31620 = C31613 + C31614;
    const double C2300 = C2288 + C2289;
    const double C4453 = C4442 + C4443;
    const double C7035 = C7031 + C7032;
    const double C15162 = C15150 + C15151;
    const double C17461 = C17454 + C17455;
    const double C31616 = C31604 + C31605;
    const double C33907 = C33900 + C33901;
    const double C3016 = C3008 + C3009;
    const double C7994 = C7988 + C7989;
    const double C18399 = C18391 + C18392;
    const double C34836 = C34828 + C34829;
    const double C11437 = C11427 + C11428;
    const double C27101 = C27094 + C27095;
    const double C41527 = C41517 + C41518;
    const double C67665 = C67658 + C67659;
    const double C14318 = C14311 + C14312;
    const double C27097 = C27086 + C27087;
    const double C30633 = C30630 + C30631;
    const double C41526 = C41514 + C41515;
    const double C44279 = C44272 + C44273;
    const double C67661 = C67650 + C67651;
    const double C70284 = C70280 + C70281;
    const double C740 = C733 + C734;
    const double C20503 = C20496 + C20497;
    const double C61640 = C61633 + C61634;
    const double C2640 = C2635 + C2636;
    const double C12742 = C12738 + C12739;
    const double C22862 = C22857 + C22858;
    const double C63977 = C63972 + C63973;
    const double C5687 = C5677 + C5678;
    const double C26557 = C26550 + C26551;
    const double C41011 = C41004 + C41005;
    const double C67234 = C67224 + C67225;
    const double C3360 = C3348 + C3349;
    const double C10216 = C10205 + C10206;
    const double C13751 = C13747 + C13748;
    const double C20499 = C20487 + C20488;
    const double C23835 = C23828 + C23829;
    const double C61636 = C61624 + C61625;
    const double C64941 = C64934 + C64935;
    const double C9437 = C9430 + C9431;
    const double C26553 = C26542 + C26543;
    const double C31183 = C31180 + C31181;
    const double C41007 = C40996 + C40997;
    const double C44726 = C44722 + C44723;
    const double C67233 = C67221 + C67222;
    const double C70731 = C70724 + C70725;
    const double C421 = C404 + C418;
    const double C501 = C484 + C498;
    const double C668 = C651 + C665;
    const double C746 = C729 + C743;
    const double C90179 = C90176 + C90162;
    const double C13861 = C92067 * C5782;
    const double C41961 = C92062 * C5782;
    const double C51584 = C92067 * C5782;
    const double C4932 = C4918 + C4919;
    const double C37732 = C37724 + C37725;
    const double C45583 = C45569 + C45570;
    const double C8563 = C8549 + C8550;
    const double C48895 = C48881 + C48882;
    const double C58255 = C58251 + C58252;
    const double C11011 = C10997 + C10998;
    const double C72814 = C72810 + C72811;
    const double C81666 = C81658 + C81659;
    const double C90221 = C90213 - C90195;
    const double C90731 = C90730 / C89849;
    const double C90753 = C90752 / C89849;
    const double C36699 = C36690 + C36691;
    const double C40323 = C40318 + C40319;
    const double C38973 = C38962 + C38963;
    const double C71704 = C71700 + C71701;
    const double C90178 = C90175 + C90159;
    const double C90204 = -C90192;
    const double C12181 = C307 * C5784;
    const double C12519 = C9999 * C5784;
    const double C13864 = C4103 * C5784;
    const double C26958 = C15034 * C5784;
    const double C29674 = C20275 * C5784;
    const double C41962 = C36216 * C5784;
    const double C43208 = C31488 * C5784;
    const double C51579 = C89868 * C5784;
    const double C78720 = C61412 * C5784;
    const double C82976 = C80690 * C5784;
    const double C44494 = C9516 * C14527;
    const double C89607 = C80243 * C14527;
    const double C91306 = C91302 / C89849;
    const double C60347 = C44804 * C8896;
    const double C70171 = C4101 * C8896;
    const double C91587 = C91583 / C89849;
    const double C37061 = C37056 + C37057;
    const double C40822 = C40804 + C40805;
    const double C44170 = C44161 + C44162;
    const double C60674 = C60666 + C60667;
    const double C67568 = C67550 + C67551;
    const double C70506 = C70490 + C70491;
    const double C89299 = C89294 + C89295;
    const double C39424 = C39420 + C39421;
    const double C57237 = C57227 + C57228;
    const double C67042 = C67026 + C67027;
    const double C41428 = C41412 + C41413;
    const double C73631 = C73628 + C73629;
    const double C86740 = C86730 + C86731;
    const double C71879 = C71875 + C71876;
    const double C6575 = C92067 * C832;
    const double C15581 = C14805 * C832;
    const double C32031 = C31259 * C832;
    const double C47006 = C92067 * C832;
    const double C12858 = C92067 * C1416;
    const double C21260 = C14805 * C1416;
    const double C62397 = C31259 * C1416;
    const double C83301 = C92067 * C1416;
    const double C6567 = C92067 * C827;
    const double C15579 = C14805 * C827;
    const double C17009 = C92347 * C827;
    const double C32029 = C31259 * C827;
    const double C33455 = C31258 * C827;
    const double C46998 = C92067 * C827;
    const double C8554 = C92067 * C3444;
    const double C18926 = C92347 * C3444;
    const double C27649 = C4097 * C3444;
    const double C35345 = C31258 * C3444;
    const double C41957 = C92062 * C3444;
    const double C48886 = C92067 * C3444;
    const double C52564 = C92310 * C3444;
    const double C13863 = C4097 * C5791;
    const double C40315 = C92062 * C5791;
    const double C51582 = C92310 * C5791;
    const double C12850 = C92067 * C1411;
    const double C21258 = C14805 * C1411;
    const double C22970 = C92347 * C1411;
    const double C53780 = C92067 * C1411;
    const double C62395 = C31259 * C1411;
    const double C64085 = C31258 * C1411;
    const double C4929 = C4912 + C4913;
    const double C37731 = C37720 + C37721;
    const double C45580 = C45563 + C45564;
    const double C11008 = C10991 + C10992;
    const double C42885 = C42880 + C42881;
    const double C51603 = C51587 + C51588;
    const double C36697 = C36686 + C36687;
    const double C38974 = C38964 + C38965;
    const double C41114 = C41103 + C41104;
    const double C90236 = C90233 + C90211;
    const double C4890 = (3 * (C90140 + C90170 * C90420) +
                          C90248 * (2 * C90818 + C90248 * C90822)) /
                         C89849;
    const double C5786 = (C90140 + C90170 * C90420 + C90822 * C90542) / C89849;
    const double C8539 = (C90306 * (2 * C90818 + C90248 * C90822)) / C89849;
    const double C10969 = (3 * (C90140 + C90170 * C90542) +
                           C90306 * (2 * C91093 + C90306 * C91097)) /
                          C89849;
    const double C91354 = C91350 + C91337;
    const double C91652 = C91648 + C91640;
    const double C6907 = (2 * (C90248 * C90387 + C90160 * ae) +
                          C90248 * (C90387 + C90248 * C91026 + C91023 * ae) +
                          (C90160 + C90209 * C90420) * ae) /
                         C89849;
    const double C7868 =
        (C90306 * (C90387 + C90248 * C91026 + C91023 * ae)) / C89849;
    const double C12172 =
        (C90248 * C90387 + C90160 * ae + C91026 * C90542) / C89849;
    const double C13515 = (2 * (C90306 * C90488 + C90160 * ae) +
                           C90306 * (C90488 + C90306 * C91234 + C91231 * ae) +
                           (C90160 + C90209 * C90542) * ae) /
                          C89849;
    const double C1026 =
        (2 * C90377 + C90106 * C90387 +
         C90248 * (C90248 * C90413 + C90225 * ae) + C90248 * C90225 * ae) /
        C89849;
    const double C1792 =
        (2 * C90478 + C90106 * C90488 +
         C90306 * (C90306 * C90514 + C90225 * ae) + C90306 * C90225 * ae) /
        C89849;
    const double C2197 = (C90248 * (3 * C90387 + C90106 * C90413) +
                          (3 * C90160 + C90106 * C90225) * ae) /
                         C89849;
    const double C3175 = (C90306 * (3 * C90488 + C90106 * C90514) +
                          (3 * C90160 + C90106 * C90225) * ae) /
                         C89849;
    const double C3664 = (C90306 * (C90248 * C90413 + C90225 * ae)) / C89849;
    const double C3878 =
        (C90306 * C90248 * C90514 + C90248 * C90225 * ae) / C89849;
    const double C112 = 4 * (2 * C90129 + C90106 * C90160) +
                        C90106 * (3 * C90160 + C90106 * C90225);
    const double C809 = 2 * C90129 + C90106 * C90160 + C90225 * C90420;
    const double C1393 = 2 * C90129 + C90106 * C90160 + C90225 * C90542;
    const double C1989 = C90248 * (3 * C90160 + C90106 * C90225);
    const double C2711 = C90306 * (3 * C90160 + C90106 * C90225);
    const double C3434 = C90306 * C90248 * C90225;
    const double C6683 =
        (-2 * (C90248 * C90272 + C90160 * ce)) / C89892 -
        (C90248 * (C90248 * C91025 + C90272 + C91023 * ce)) / C89892 -
        ((C90160 + C90209 * C90420) * ce) / C89892;
    const double C7668 =
        -(C90306 * (C90248 * C91025 + C90272 + C91023 * ce)) / C89892;
    const double C11972 =
        -(C91025 * C90542 + C90248 * C90272 + C90160 * ce) / C89892;
    const double C13078 =
        (-2 * (C90306 * C90330 + C90160 * ce)) / C89892 -
        (C90306 * (C90306 * C91233 + C90330 + C91231 * ce)) / C89892 -
        ((C90160 + C90209 * C90542) * ce) / C89892;
    const double C90902 = C90392 + C90900;
    const double C91205 = C90493 + C91203;
    const double C90901 = C90899 + C90277;
    const double C91204 = C91202 + C90335;
    const double C14526 = (2 * (C90306 * C90946 + C90877 * ae) +
                           C90306 * (C90946 + C90306 * C91274 + C91269 * ae) +
                           (C90877 + C90885 * C90542) * ae) /
                          C89849;
    const double C14076 =
        (-2 * (C90306 * C90918 + C90877 * ce)) / C89892 -
        (C90306 * (C90306 * C91273 + C90918 + C91269 * ce)) / C89892 -
        ((C90877 + C90885 * C90542) * ce) / C89892;
    const double C90235 = C90232 + C90208;
    const double C4892 =
        (-3 * (C90169 * C90420 + C90139)) / C89892 +
        C90248 * ((-2 * C90839) / C89892 - (C90248 * C90844) / C89892);
    const double C5788 = -(C90844 * C90542 + C90169 * C90420 + C90139) / C89892;
    const double C8541 =
        C90306 * ((-2 * C90839) / C89892 - (C90248 * C90844) / C89892);
    const double C10971 =
        (-3 * (C90169 * C90542 + C90139)) / C89892 +
        C90306 * ((-2 * C91128) / C89892 - (C90306 * C91132) / C89892);
    const double C91353 = C91347 + C91334;
    const double C41200 =
        (-3 * (C90860 * C90542 + C90849)) / C89892 +
        C90306 * ((-2 * C91507) / C89892 - (C90306 * C91512) / C89892);
    const double C91651 = C91647 + C91636;
    const double C90575 = -C90574;
    const double C90653 = -C90652;
    const double C90729 = C90726 / C90107;
    const double C13856 =
        (((-2 * C90306 * C90722) / C89892 -
          (C90306 * (C90248 * C90207 * C90542 + C90722)) / C89892) *
         ae) /
            C89849 -
        ((2 * C90306 * C90721 + C90306 * (C90721 + C90248 * C90210 * C90542)) *
         ce) /
            C90107 +
        C90106 *
            ((-2 * C90768) / C90107 +
             C90306 *
                 ((-(C90248 *
                     (C90187 * C90188 + C90114 * bs[7] * std::pow(C90110, 7)) *
                     C90115 * C90542) /
                   C89892) /
                      C89849 -
                  C90723 / C90107));
    const double C41088 =
        3 * ((-(C90723 * C90542) / C89892) / C89849 - C90565 / C90107) +
        C90306 *
            ((-2 * C90768) / C90107 +
             C90306 *
                 ((-(C90248 *
                     (C90187 * C90188 + C90114 * bs[7] * std::pow(C90110, 7)) *
                     C90115 * C90542) /
                   C89892) /
                      C89849 -
                  C90723 / C90107));
    const double C18924 = C14805 * C3445;
    const double C27647 = C92067 * C3445;
    const double C35343 = C31259 * C3445;
    const double C52562 = C92067 * C3445;
    const double C13865 = C92067 * C5792;
    const double C41963 = C92062 * C5792;
    const double C51580 = C92067 * C5792;
    const double C41100 = C92062 * C13855;
    const double C90751 = C90748 / C90107;
    const double C90439 = -C90438;
    const double C90895 = C90889 / C90107;
    const double C11421 =
        3 * ((-(C90883 * C90542) / C89892) / C89849 - C90875 / C90107) +
        C90306 *
            ((-2 * C91053) / C90107 +
             C90306 *
                 ((-(C90106 *
                     (C90187 * C90188 + C90420 * bs[7] * std::pow(C90110, 7)) *
                     C90115 * C90542) /
                   C89892) /
                      C89849 -
                  C90883 / C90107));
    const double C14306 =
        (((-2 * C91145) / C89892 - (C90306 * C91149) / C89892) * ae) / C89849 -
        ((2 * C91113 + C90306 * C91115) * ce) / C90107 +
        C90248 *
            ((-2 * C91053) / C90107 +
             C90306 *
                 ((-(C90106 *
                     (C90187 * C90188 + C90420 * bs[7] * std::pow(C90110, 7)) *
                     C90115 * C90542) /
                   C89892) /
                      C89849 -
                  C90883 / C90107));
    const double C91427 = -C91426;
    const double C91463 = C91461 / C90107;
    const double C90561 = -C90560;
    const double C91195 = C91190 / C90107;
    const double C14728 =
        2 * ((-(C90946 * ce) / C89892) / C89849 - (ae * C90918) / C90107 -
             (C90306 * C91267) / C90107) -
        (ae * (C90306 * C91273 + C90918 + C91269 * ce)) / C90107 -
        ((C90946 + C90306 * C91274 + C91269 * ae) * ce) / C90107 +
        C90306 *
            ((-(ae * C91273) / C89892) / C89849 - C91267 / C90107 -
             (C91274 * ce) / C90107 +
             C90306 *
                 ((-(C91270 * ce) / C89892) / C89849 - (ae * C91268) / C90107 -
                  (C90306 * C90248 * C90106 *
                   (C90187 * C90188 + C90542 * bs[7] * std::pow(C90110, 7)) *
                   C90115) /
                      C90107));
    const double C91412 = -C91411;
    const double C91527 = C91521 / C90107;
    const double C44490 = (2 * (C90306 * C90941 + C90862 * ae) +
                           C90306 * (C90941 + C90306 * C91550 + C91547 * ae) +
                           (C90862 + C91335 * C90542) * ae) /
                          C89849;
    const double C37539 =
        (2 * C90937 + C90248 * C90941 +
         C90306 * (C90306 * C91404 + C91349 * ae) + C90306 * C91349 * ae) /
        C89849;
    const double C39417 = (C90306 * (3 * C90941 + C90248 * C91404) +
                           (3 * C90862 + C90248 * C91349) * ae) /
                          C89849;
    const double C36671 = 4 * (2 * C90847 + C90248 * C90862) +
                          C90248 * (3 * C90862 + C90248 * C91349);
    const double C37227 = 2 * C90847 + C90248 * C90862 + C91349 * C90542;
    const double C38955 = C90306 * (3 * C90862 + C90248 * C91349);
    const double C44036 =
        (-2 * (C90306 * C90913 + C90862 * ce)) / C89892 -
        (C90306 * (C90306 * C91549 + C90913 + C91547 * ce)) / C89892 -
        ((C90862 + C91335 * C90542) * ce) / C89892;
    const double C91534 = C91261 + C91532;
    const double C91533 = C91531 + C91259;
    const double C71691 = 4 * (2 * C91155 + C90306 * C91170) +
                          C90306 * (3 * C91170 + C90306 * C91638);
    const double C663 = C657 + C658;
    const double C90294 = C90291 / C89849;
    const double C13640 = C9516 * C11690;
    const double C84029 = C80243 * C11690;
    const double C5031 = C4103 * C5013;
    const double C5589 = C554 * C5013;
    const double C7027 = C4328 * C5013;
    const double C37810 = C36216 * C5013;
    const double C45674 = C89868 * C5013;
    const double C47451 = C45031 * C5013;
    const double C7992 = C4328 * C5869;
    const double C8320 = C554 * C5869;
    const double C8677 = C4103 * C5869;
    const double C26434 = C20275 * C5869;
    const double C28198 = C15034 * C5869;
    const double C48373 = C45031 * C5869;
    const double C49005 = C89868 * C5869;
    const double C53113 = C31488 * C5869;
    const double C58357 = C36216 * C5869;
    const double C68778 = C61412 * C5869;
    const double C12294 = C307 * C5872;
    const double C12626 = C9999 * C5872;
    const double C13972 = C4103 * C5872;
    const double C27088 = C15034 * C5872;
    const double C29812 = C20275 * C5872;
    const double C42072 = C36216 * C5872;
    const double C43314 = C31488 * C5872;
    const double C51709 = C89868 * C5872;
    const double C78858 = C61412 * C5872;
    const double C83082 = C80690 * C5872;
    const double C90872 = C90869 + C90861;
    const double C91338 = -C91328;
    const double C71765 = C71761 + C71762;
    const double C91606 = C91602 / C89849;
    const double C496 = C490 + C491;
    const double C90352 = C90349 / C89849;
    const double C7141 = C7135 + C7136;
    const double C11216 = C4103 * C11198;
    const double C11529 = C307 * C11198;
    const double C13743 = C9999 * C11198;
    const double C72955 = C36216 * C11198;
    const double C81832 = C89868 * C11198;
    const double C84131 = C80690 * C11198;
    const double C36841 = C36835 + C36836;
    const double C40493 = C40487 + C40488;
    const double C39146 = C39142 + C39143;
    const double C91180 = C91177 + C91169;
    const double C91630 = -C91617;
    const double C41314 = C36216 * C14075;
    const double C41619 = C31488 * C14075;
    const double C44718 = C9999 * C14075;
    const double C73773 = C307 * C14075;
    const double C86906 = C15034 * C14075;
    const double C89829 = C80690 * C14075;
    const double C91377 = C91374 / C89849;
    const double C343 = C333 + C334;
    const double C2216 = C2208 + C2209;
    const double C15069 = C15054 + C15055;
    const double C31523 = C31508 + C31509;
    const double C4362 = C4346 + C4347;
    const double C17351 = C17340 + C17341;
    const double C33797 = C33786 + C33787;
    const double C2938 = C2930 + C2931;
    const double C9750 = C9744 + C9745;
    const double C18290 = C18279 + C18280;
    const double C22311 = C22307 + C22308;
    const double C34727 = C34716 + C34717;
    const double C44392 = C44387 + C44388;
    const double C67757 = C67750 + C67751;
    const double C89507 = C89504 + C89505;
    const double C91346 = C91339 - C90284;
    const double C90408 = C90405 / C89849;
    const double C8102 = C8096 + C8097;
    const double C28338 = C28334 + C28335;
    const double C53253 = C53249 + C53250;
    const double C12405 = C12399 + C12400;
    const double C27217 = C27210 + C27211;
    const double C43423 = C43420 + C43421;
    const double C6915 = C4101 * C5217;
    const double C47340 = C44804 * C5217;
    const double C7876 = C4101 * C6041;
    const double C28059 = C92186 * C6041;
    const double C48258 = C44804 * C6041;
    const double C52974 = C92186 * C6041;
    const double C12180 = C92137 * C6045;
    const double C26963 = C92186 * C6045;
    const double C43205 = C92186 * C6045;
    const double C11341 = C11333 * C801;
    const double C11432 = C11333 * C181;
    const double C13416 = C11333 * C2850;
    const double C73026 = C11333 * C1988;
    const double C90873 = C90870 + C90864;
    const double C41430 = C41416 + C41417;
    const double C73630 = C73626 + C73627;
    const double C86742 = C86734 + C86735;
    const double C71880 = C71877 + C71878;
    const double C91439 = C91437 / C89849;
    const double C44275 = C92186 * C6130;
    const double C57826 = C44804 * C6130;
    const double C67655 = C4101 * C6130;
    const double C89399 = C92186 * C6130;
    const double C7993 = C4101 * C6127;
    const double C28199 = C92186 * C6127;
    const double C48374 = C44804 * C6127;
    const double C53114 = C92186 * C6127;
    const double C12295 = C92137 * C6131;
    const double C27089 = C92186 * C6131;
    const double C43315 = C92186 * C6131;
    const double C11431 = C92137 * C11418;
    const double C71936 = C92137 * C11420;
    const double C41522 = C92186 * C14305;
    const double C73704 = C92137 * C14305;
    const double C86822 = C92186 * C14305;
    const double C416 = C410 + C411;
    const double C4454 = C4444 + C4445;
    const double C7034 = C7029 + C7030;
    const double C17460 = C17452 + C17453;
    const double C33906 = C33898 + C33899;
    const double C2301 = C2293 + C2294;
    const double C4456 = C4448 + C4449;
    const double C15164 = C15155 + C15156;
    const double C17463 = C17458 + C17459;
    const double C31618 = C31609 + C31610;
    const double C33909 = C33904 + C33905;
    const double C3017 = C3011 + C3012;
    const double C18401 = C18395 + C18396;
    const double C34838 = C34832 + C34833;
    const double C9832 = C9827 + C9828;
    const double C27099 = C27090 + C27091;
    const double C43319 = C43316 + C43317;
    const double C7995 = C7990 + C7991;
    const double C12296 = C12289 + C12290;
    const double C18400 = C18393 + C18394;
    const double C28203 = C28200 + C28201;
    const double C34837 = C34830 + C34831;
    const double C53118 = C53115 + C53116;
    const double C30632 = C30628 + C30629;
    const double C44278 = C44270 + C44271;
    const double C67662 = C67652 + C67653;
    const double C70283 = C70278 + C70279;
    const double C14319 = C14316 + C14317;
    const double C27100 = C27092 + C27093;
    const double C41528 = C41519 + C41520;
    const double C44281 = C44276 + C44277;
    const double C67664 = C67656 + C67657;
    const double C89403 = C89400 + C89401;
    const double C11439 = C11433 + C11434;
    const double C41530 = C41523 + C41524;
    const double C86827 = C86823 + C86824;
    const double C590 = C580 + C581;
    const double C2472 = C2464 + C2465;
    const double C4634 = C4628 + C4629;
    const double C3194 = C3186 + C3187;
    const double C20310 = C20295 + C20296;
    const double C61447 = C61432 + C61433;
    const double C10033 = C10017 + C10018;
    const double C23615 = C23604 + C23605;
    const double C64721 = C64710 + C64711;
    const double C18615 = C18611 + C18612;
    const double C22640 = C22629 + C22630;
    const double C63755 = C63744 + C63745;
    const double C91646 = C91642 - C90342;
    const double C90509 = C90506 / C89849;
    const double C12523 = C12513 + C12514;
    const double C29677 = C29670 + C29671;
    const double C78723 = C78716 + C78717;
    const double C13523 = C9516 * C11608;
    const double C83913 = C80243 * C11608;
    const double C5499 = C5490 * C801;
    const double C5682 = C5490 * C244;
    const double C7365 = C5490 * C2060;
    const double C38162 = C5490 * C1988;
    const double C8319 = C8215 * C181;
    const double C8432 = C8215 * C2850;
    const double C9202 = C8215 * C801;
    const double C37062 = C37058 + C37059;
    const double C40825 = C40810 + C40811;
    const double C60676 = C60670 + C60671;
    const double C70508 = C70494 + C70495;
    const double C39425 = C39422 + C39423;
    const double C57239 = C57231 + C57232;
    const double C67044 = C67030 + C67031;
    const double C91181 = C91178 + C91172;
    const double C44500 = C9516 * C14525;
    const double C89613 = C80243 * C14525;
    const double C91402 = C91399 / C89849;
    const double C37173 = C92148 * C5670;
    const double C41001 = C9516 * C6456;
    const double C60881 = C92212 * C6456;
    const double C70727 = C92212 * C6456;
    const double C86415 = C80243 * C6456;
    const double C39569 = C92148 * C9424;
    const double C57401 = C92212 * C9424;
    const double C67229 = C92212 * C9424;
    const double C5681 = C92148 * C5668;
    const double C12735 = C9516 * C6454;
    const double C29947 = C92212 * C6454;
    const double C78993 = C92212 * C6454;
    const double C83190 = C80243 * C6454;
    const double C8434 = C92148 * C6457;
    const double C26545 = C92212 * C6457;
    const double C68883 = C92212 * C6457;
    const double C44719 = C9516 * C14727;
    const double C89830 = C80243 * C14727;
    const double C741 = C735 + C736;
    const double C2639 = C2632 + C2633;
    const double C22860 = C22853 + C22854;
    const double C63975 = C63968 + C63969;
    const double C4804 = C4799 + C4800;
    const double C26555 = C26546 + C26547;
    const double C68884 = C68880 + C68881;
    const double C10217 = C10207 + C10208;
    const double C13750 = C13745 + C13746;
    const double C23834 = C23826 + C23827;
    const double C64940 = C64932 + C64933;
    const double C3361 = C3353 + C3354;
    const double C10219 = C10211 + C10212;
    const double C20501 = C20492 + C20493;
    const double C23837 = C23832 + C23833;
    const double C61638 = C61629 + C61630;
    const double C64943 = C64938 + C64939;
    const double C8435 = C8428 + C8429;
    const double C12741 = C12736 + C12737;
    const double C22861 = C22855 + C22856;
    const double C29951 = C29948 + C29949;
    const double C63976 = C63970 + C63971;
    const double C78997 = C78994 + C78995;
    const double C5690 = C5683 + C5684;
    const double C57406 = C57402 + C57403;
    const double C67237 = C67230 + C67231;
    const double C31182 = C31178 + C31179;
    const double C41008 = C40998 + C40999;
    const double C44725 = C44720 + C44721;
    const double C70730 = C70722 + C70723;
    const double C9438 = C9435 + C9436;
    const double C26556 = C26548 + C26549;
    const double C41010 = C41002 + C41003;
    const double C60885 = C60882 + C60883;
    const double C67235 = C67226 + C67227;
    const double C70733 = C70728 + C70729;
    const double C90177 = C90167 - C90174;
    const double C86903 = C27214 + C27215;
    const double C90871 = C90868 - C90859;
    const double C91179 = C91176 - C91167;
    const double C36673 =
        4 * ((-2 * C90830) / C89892 - (C90248 * C90834) / C89892) +
        C90248 * ((-3 * C90834) / C89892 + C90248 * C91313);
    const double C37229 =
        (-2 * C90830) / C89892 - (C90248 * C90834) / C89892 + C91313 * C90542;
    const double C38957 = C90306 * ((-3 * C90834) / C89892 + C90248 * C91313);
    const double C71693 =
        4 * ((-2 * C91119) / C89892 - (C90306 * C91123) / C89892) +
        C90306 * ((-3 * C91123) / C89892 + C90306 * C91594);
    const double C3738 =
        (C90306 * C90301 * ae) / C89849 - (C90306 * C90413 * ce) / C90107 +
        C90248 * C90306 *
            ((-2 * C90106 * C90436) / C90107 +
             C90106 *
                 ((-((C90187 * C90188 + C90420 * bs[7] * std::pow(C90110, 7)) *
                     C90115 * C90114) /
                   C89892) /
                      C89849 -
                  C90436 / C90107));
    const double C3952 =
        ((C90248 * C90301 - (C90225 * ce) / C89892) * ae) / C89849 +
        C90306 *
            (C90248 *
                 ((-2 * C90106 * C90533) / C90107 +
                  C90106 * ((-(std::pow(C90110, 7) * bs[7] * C90523 * C90114) /
                             C89892) /
                                C89849 -
                            C90533 / C90107)) -
             (C90514 * ce) / C90107);
    const double C187 =
        4 * ((-2 * C90262) / C89892 - (C90106 * C90272) / C89892) +
        C90106 * ((-3 * C90272) / C89892 + C90106 * C90301);
    const double C894 = (-2 * C90262) / C89892 - (C90106 * C90272) / C89892 +
                        C90248 * (C90248 * C90301 - (C90225 * ce) / C89892) -
                        (C90248 * C90225 * ce) / C89892;
    const double C1475 =
        (-2 * C90262) / C89892 - (C90106 * C90272) / C89892 + C90301 * C90542;
    const double C2061 = C90248 * ((-3 * C90272) / C89892 + C90106 * C90301) -
                         ((3 * C90160 + C90106 * C90225) * ce) / C89892;
    const double C2781 = C90306 * ((-3 * C90272) / C89892 + C90106 * C90301);
    const double C3516 = C90306 * (C90248 * C90301 - (C90225 * ce) / C89892);
    const double C71756 =
        4 * ((-2 * C91136) / C89892 - (C90306 * C91140) / C89892) +
        C90306 * ((-3 * C91140) / C89892 + C90306 * C91613);
    const double C3808 =
        ((C90306 * C90359 - (C90225 * ce) / C89892) * ae) / C89849 +
        C90248 *
            (C90306 *
                 ((-2 * C90106 * C90457) / C90107 +
                  C90106 * ((-(std::pow(C90110, 7) * bs[7] * C90447 * C90114) /
                             C89892) /
                                C89849 -
                            C90457 / C90107)) -
             (C90413 * ce) / C90107);
    const double C4022 =
        (C90248 * C90359 * ae) / C89849 - (C90248 * C90514 * ce) / C90107 +
        C90306 * C90248 *
            ((-2 * C90106 * C90558) / C90107 +
             C90106 *
                 ((-((C90187 * C90188 + C90542 * bs[7] * std::pow(C90110, 7)) *
                     C90115 * C90114) /
                   C89892) /
                      C89849 -
                  C90558 / C90107));
    const double C250 =
        4 * ((-2 * C90320) / C89892 - (C90106 * C90330) / C89892) +
        C90106 * ((-3 * C90330) / C89892 + C90106 * C90359);
    const double C960 =
        (-2 * C90320) / C89892 - (C90106 * C90330) / C89892 + C90359 * C90420;
    const double C1544 = (-2 * C90320) / C89892 - (C90106 * C90330) / C89892 +
                         C90306 * (C90306 * C90359 - (C90225 * ce) / C89892) -
                         (C90306 * C90225 * ce) / C89892;
    const double C2129 = C90248 * ((-3 * C90330) / C89892 + C90106 * C90359);
    const double C2851 = C90306 * ((-3 * C90330) / C89892 + C90106 * C90359) -
                         ((3 * C90160 + C90106 * C90225) * ce) / C89892;
    const double C3590 =
        C90306 * C90248 * C90359 - (C90248 * C90225 * ce) / C89892;
    const double C36823 =
        4 * ((-2 * C90909) / C89892 - (C90248 * C90913) / C89892) +
        C90248 * ((-3 * C90913) / C89892 + C90248 * C91382);
    const double C37333 = (-2 * C90909) / C89892 - (C90248 * C90913) / C89892 +
                          C90306 * (C90306 * C91382 - (C91349 * ce) / C89892) -
                          (C90306 * C91349 * ce) / C89892;
    const double C39126 = C90306 * ((-3 * C90913) / C89892 + C90248 * C91382) -
                          ((3 * C90862 + C90248 * C91349) * ce) / C89892;
    const double C90275 = C90274 - C90267;
    const double C90816 = C90815 - C90810;
    const double C90300 = C90298 - C90284;
    const double C91288 = C91286 - C91279;
    const double C91557 = C91556 - C90278;
    const double C11344 = C11338 + C11339;
    const double C90390 = C90389 - C90382;
    const double C90837 = C90836 - C90148;
    const double C71874 = C11343 + C11342;
    const double C90414 = C90412 - C90399;
    const double C91312 = C91310 - C90195;
    const double C91423 = C91422 - C90393;
    const double C91455 = C91454 / C89849;
    const double C90333 = C90332 - C90325;
    const double C91091 = C91090 - C90810;
    const double C90358 = C90356 - C90342;
    const double C91296 = C91295 - C90336;
    const double C91486 = C91485 / C89849;
    const double C91569 = C91567 - C91279;
    const double C502 = C487 + C499;
    const double C90916 = C90915 - C90325;
    const double C91059 = C91058 - C90382;
    const double C20196 = C9919 + C9918;
    const double C90462 = C90461 - C90456;
    const double C90927 = C90926 / C89849;
    const double C91065 = C91064 / C89849;
    const double C91381 = C91378 - C90342;
    const double C91440 = C91438 - C90399;
    const double C5502 = C5495 + C5496;
    const double C90491 = C90490 - C90483;
    const double C91126 = C91125 - C90148;
    const double C37055 = C5501 + C5500;
    const double C90515 = C90513 - C90500;
    const double C91390 = C91389 - C90494;
    const double C91504 = C91503 / C89849;
    const double C91593 = C91591 - C90195;
    const double C669 = C654 + C666;
    const double C90944 = C90943 - C90483;
    const double C91143 = C91142 - C90267;
    const double C15416 = C4719 + C4718;
    const double C90538 = C90537 - C90532;
    const double C90955 = C90954 / C89849;
    const double C91151 = C91150 / C89849;
    const double C91406 = C91403 - C90500;
    const double C91612 = C91610 - C90284;
    const double C15594 = C15572 + C15573;
    const double C21273 = C21251 + C21252;
    const double C32044 = C32022 + C32023;
    const double C62410 = C62388 + C62389;
    const double C89873 = C89872 * ae;
    const double C4102 = (-C89850 / C89849) / C89854 - (C89872 * be) / C89849;
    const double C36704 = C36696 * C801;
    const double C36832 = C36696 * C244;
    const double C37722 = C36696 * C1987;
    const double C39139 = C36696 * C2849;
    const double C36702 = C36694 * C801;
    const double C36829 = C36694 * C244;
    const double C37716 = C36694 * C1987;
    const double C39134 = C36694 * C2849;
    const double C36701 = C36693 * C92078;
    const double C37711 = C36693 * C1983;
    const double C36700 = C36692 * C801;
    const double C36826 = C36692 * C244;
    const double C37710 = C36692 * C1987;
    const double C39129 = C36692 * C2849;
    const double C36844 = C36840 * C92110;
    const double C39140 = C36840 * C2709;
    const double C36843 = C36839 * C92110;
    const double C39135 = C36839 * C2709;
    const double C36842 = C36838 * C92110;
    const double C39130 = C36838 * C2709;
    const double C37734 = C37728 * C1988;
    const double C37881 = C37728 * C244;
    const double C37893 = C37890 * C92110;
    const double C38983 = C38977 * C801;
    const double C39131 = C38977 * C2850;
    const double C40482 = C38977 * C244;
    const double C41206 = C38977 * C181;
    const double C41952 = C38977 * C1987;
    const double C43927 = C38977 * C2059;
    const double C43925 = C38977 * C2060;
    const double C44039 = C38977 * C2849;
    const double C38981 = C38975 * C801;
    const double C39136 = C38975 * C2850;
    const double C40491 = C38975 * C244;
    const double C43929 = C38975 * C2060;
    const double C57557 = C38975 * C181;
    const double C58249 = C38975 * C1987;
    const double C60132 = C38975 * C2059;
    const double C60234 = C38975 * C2849;
    const double C41207 = C39058 * C92099;
    const double C43928 = C39058 * C1985;
    const double C43926 = C39058 * C1986;
    const double C39148 = C39145 * C2710;
    const double C40490 = C39145 * C92110;
    const double C60235 = C39145 * C2709;
    const double C39147 = C39144 * C2710;
    const double C40483 = C39144 * C92110;
    const double C44040 = C39144 * C2709;
    const double C40324 = C40320 * C801;
    const double C40484 = C40320 * C244;
    const double C41211 = C40320 * C181;
    const double C41958 = C40320 * C1987;
    const double C43935 = C40320 * C2059;
    const double C43933 = C40320 * C2060;
    const double C44043 = C40320 * C2849;
    const double C44041 = C40320 * C2850;
    const double C40494 = C40492 * C92110;
    const double C44044 = C40492 * C2709;
    const double C44042 = C40492 * C2710;
    const double C41123 = C41115 * C801;
    const double C41218 = C41115 * C181;
    const double C72808 = C41115 * C1987;
    const double C73490 = C41115 * C2059;
    const double C41121 = C41113 * C801;
    const double C41215 = C41113 * C181;
    const double C44045 = C41113 * C2850;
    const double C73492 = C41113 * C2060;
    const double C41118 = C41109 * C801;
    const double C41208 = C41109 * C181;
    const double C42876 = C41109 * C1987;
    const double C43931 = C41109 * C2059;
    const double C41117 = C41108 * C92078;
    const double C42871 = C41108 * C1983;
    const double C41116 = C41107 * C801;
    const double C41203 = C41107 * C181;
    const double C42870 = C41107 * C1987;
    const double C43923 = C41107 * C2059;
    const double C41228 = C41223 * C92099;
    const double C73491 = C41223 * C1985;
    const double C41225 = C41220 * C92099;
    const double C43932 = C41220 * C1985;
    const double C41224 = C41219 * C92099;
    const double C43924 = C41219 * C1985;
    const double C42886 = C42882 * C1988;
    const double C42997 = C42882 * C181;
    const double C43001 = C42999 * C92099;
    const double C45065 = C45049 + C45050;
    const double C45057 = C45033 + C45034;
    const double C45157 = C45147 + C45148;
    const double C45249 = C45239 + C45240;
    const double C47564 = C47558 + C47559;
    const double C48482 = C48476 + C48477;
    const double C57739 = C57721 + C57722;
    const double C57738 = C57719 + C57720;
    const double C57735 = C57713 + C57714;
    const double C57833 = C57823 + C57824;
    const double C57928 = C57921 + C57922;
    const double C57923 = C57911 + C57912;
    const double C90036 = C90034 * ae;
    const double C15152 = C15072 * C181;
    const double C15249 = C15072 * C244;
    const double C15265 = C15264 * C92110;
    const double C86739 = C86729 * C92078;
    const double C31526 = C31518 + C31519;
    const double C31718 = C31714 + C31715;
    const double C54191 = C34722 + C34723;
    const double C54189 = C34723 + C34722;
    const double C54462 = C34947 + C34946;
    const double C54461 = C34946 + C34947;
    const double C41433 = C41426 + C41427;
    const double C41627 = C41623 + C41624;
    const double C80724 = C80708 + C80709;
    const double C80716 = C80692 + C80693;
    const double C80816 = C80806 + C80807;
    const double C80908 = C80898 + C80899;
    const double C82980 = C82970 + C82971;
    const double C86239 = C86224 + C86225;
    const double C86236 = C86218 + C86219;
    const double C86235 = C86216 + C86217;
    const double C86232 = C86210 + C86211;
    const double C86422 = C86412 + C86413;
    const double C90082 = C90080 * ae;
    const double C20393 = C20313 * C181;
    const double C20489 = C20313 * C244;
    const double C20409 = C20408 * C92099;
    const double C57235 = C57225 * C801;
    const double C57398 = C57225 * C244;
    const double C57236 = C57226 * C92078;
    const double C61450 = C61442 + C61443;
    const double C61545 = C61541 + C61542;
    const double C77532 = C63750 + C63751;
    const double C77530 = C63751 + C63750;
    const double C77665 = C63865 + C63864;
    const double C77664 = C63864 + C63865;
    const double C67047 = C67040 + C67041;
    const double C67046 = C67038 + C67039;
    const double C37736 = C37730 * C1988;
    const double C37884 = C37730 * C244;
    const double C42888 = C42884 * C1988;
    const double C42992 = C42884 * C181;
    const double C41968 = C41964 * C1988;
    const double C42174 = C41964 * C244;
    const double C42994 = C41964 * C181;
    const double C14206 = C14202 * C801;
    const double C14315 = C14202 * C2060;
    const double C86728 = C26985 + C26984;
    const double C41432 = C41424 + C41425;
    const double C29398 = C29266 * C181;
    const double C29401 = C29264 * C181;
    const double C28736 = C28472 * C244;
    const double C28739 = C28470 * C244;
    const double C37735 = C37729 * C1984;
    const double C36703 = C36695 * C92078;
    const double C37717 = C36695 * C1983;
    const double C42887 = C42883 * C1984;
    const double C41119 = C41110 * C92078;
    const double C42877 = C41110 * C1983;
    const double C38982 = C38976 * C92078;
    const double C41953 = C38976 * C1983;
    const double C419 = C415 * C92099;
    const double C2296 = C415 * C1985;
    const double C2303 = C2300 * C1986;
    const double C3019 = C3016 * C92099;
    const double C12287 = C3016 * C1985;
    const double C11441 = C11437 * C92099;
    const double C14314 = C11437 * C1985;
    const double C14320 = C14318 * C1986;
    const double C744 = C740 * C92110;
    const double C3356 = C740 * C2709;
    const double C2643 = C2640 * C92110;
    const double C8426 = C2640 * C2709;
    const double C5692 = C5687 * C92110;
    const double C9433 = C5687 * C2709;
    const double C3363 = C3360 * C2710;
    const double C9439 = C9437 * C2710;
    const double C423 = C421 * C92148;
    const double C20117 = C421 * C92323;
    const double C61258 = C421 * C60959;
    const double C503 = C501 * C92148;
    const double C20195 = C501 * C92323;
    const double C61335 = C501 * C60959;
    const double C121 = (3 * (C90121 + C90106 * C90140 + C90129 * ae) +
                         C90106 * (2 * C90140 + C90106 * C90179 + C90160 * ae) +
                         (2 * C90129 + C90106 * C90160) * ae) /
                        C89849;
    const double C814 =
        (C90248 * (2 * C90140 + C90106 * C90179 + C90160 * ae)) / C89849;
    const double C820 =
        (C90121 + C90106 * C90140 + C90129 * ae + C90179 * C90420) / C89849;
    const double C1398 =
        (C90306 * (2 * C90140 + C90106 * C90179 + C90160 * ae)) / C89849;
    const double C1404 =
        (C90121 + C90106 * C90140 + C90129 * ae + C90179 * C90542) / C89849;
    const double C3437 = (C90306 * C90248 * C90179) / C89849;
    const double C13867 = C13860 + C13861;
    const double C41966 = C41960 + C41961;
    const double C51601 = C51583 + C51584;
    const double C37738 = C37732 * C1988;
    const double C37887 = C37732 * C244;
    const double C58257 = C58255 * C1988;
    const double C58458 = C58255 * C244;
    const double C59248 = C58255 * C181;
    const double C72816 = C72814 * C1988;
    const double C72886 = C72814 * C181;
    const double C90234 = C90221 - C90231;
    const double C90732 = C90731 - C90728;
    const double C91277 = C90731 - C90278;
    const double C90754 = C90753 - C90750;
    const double C91559 = C90753 - C90336;
    const double C36707 = C36699 * C801;
    const double C36837 = C36699 * C244;
    const double C40327 = C40323 * C801;
    const double C40489 = C40323 * C244;
    const double C43937 = C40323 * C2060;
    const double C57560 = C40323 * C181;
    const double C60236 = C40323 * C2850;
    const double C38979 = C38973 * C801;
    const double C39141 = C38973 * C2850;
    const double C56928 = C38973 * C244;
    const double C60134 = C38973 * C2060;
    const double C71706 = C71704 * C801;
    const double C71763 = C71704 * C181;
    const double C826 =
        2 * ((-(C90248 * C90134 * ce) / C89892) / C89849 -
             (ae * C90248 * C90133) / C90107 - (C90106 * C90565) / C90107) -
        (ae * C90248 * C90178) / C90107 - (C90248 * C90179 * ce) / C90107 +
        C90106 * ((-(ae * C90248 * C90169) / C89892) / C89849 -
                  C90565 / C90107 - (C90248 * C90170 * ce) / C90107 +
                  C90106 * ((-(C90248 * C90161 * ce) / C89892) / C89849 -
                            (ae * C90248 * C90158) / C90107 -
                            (C90106 * C90248 * C90222) / C90107));
    const double C1410 =
        2 * ((-(C90306 * C90134 * ce) / C89892) / C89849 -
             (ae * C90306 * C90133) / C90107 - (C90106 * C90643) / C90107) -
        (ae * C90306 * C90178) / C90107 - (C90306 * C90179 * ce) / C90107 +
        C90106 * ((-(ae * C90306 * C90169) / C89892) / C89849 -
                  C90643 / C90107 - (C90306 * C90170 * ce) / C90107 +
                  C90106 * ((-(C90306 * C90161 * ce) / C89892) / C89849 -
                            (ae * C90306 * C90158) / C90107 -
                            (C90106 * C90306 * C90222) / C90107));
    const double C122 =
        (-3 * (C90106 * C90139 + C90120 + C90129 * ce)) / C89892 +
        C90106 * ((-2 * C90139) / C89892 - (C90106 * C90178) / C89892 -
                  (C90160 * ce) / C89892) -
        ((2 * C90129 + C90106 * C90160) * ce) / C89892;
    const double C810 =
        C90248 * ((-2 * C90139) / C89892 - (C90106 * C90178) / C89892 -
                  (C90160 * ce) / C89892);
    const double C824 =
        -(C90178 * C90420 + C90106 * C90139 + C90120 + C90129 * ce) / C89892;
    const double C1394 =
        C90306 * ((-2 * C90139) / C89892 - (C90106 * C90178) / C89892 -
                  (C90160 * ce) / C89892);
    const double C1408 =
        -(C90178 * C90542 + C90106 * C90139 + C90120 + C90129 * ce) / C89892;
    const double C3441 = -(C90306 * C90248 * C90178) / C89892;
    const double C90212 = C90204 / C89849;
    const double C44505 = C44493 + C44494;
    const double C89618 = C89606 + C89607;
    const double C91309 = C91306 - C90393;
    const double C60353 = C60346 + C60347;
    const double C70177 = C70170 + C70171;
    const double C91590 = C91587 - C90494;
    const double C37063 = C37061 * C92078;
    const double C39426 = C39424 * C92078;
    const double C73633 = C73631 * C92078;
    const double C71881 = C71879 * C92078;
    const double C6580 = C6566 + C6567;
    const double C15597 = C15578 + C15579;
    const double C32047 = C32028 + C32029;
    const double C47011 = C46997 + C46998;
    const double C8565 = C8553 + C8554;
    const double C41965 = C41956 + C41957;
    const double C48897 = C48885 + C48886;
    const double C40321 = C40314 + C40315;
    const double C12863 = C12849 + C12850;
    const double C21276 = C21257 + C21258;
    const double C53785 = C53779 + C53780;
    const double C62413 = C62394 + C62395;
    const double C37737 = C37731 * C1984;
    const double C42889 = C42885 * C1984;
    const double C36705 = C36697 * C92078;
    const double C37723 = C36697 * C1983;
    const double C38980 = C38974 * C92078;
    const double C58250 = C38974 * C1983;
    const double C41122 = C41114 * C92078;
    const double C72809 = C41114 * C1983;
    const double C90239 = C90106 * C90236;
    const double C91211 = C90248 * C90236;
    const double C6558 =
        (2 * C90248 * C90179 + C90248 * (C90179 + C90236 * C90420)) / C89849;
    const double C7567 = (C90306 * (C90179 + C90236 * C90420)) / C89849;
    const double C12841 =
        (2 * C90306 * C90179 + C90306 * (C90179 + C90236 * C90542)) / C89849;
    const double C91358 = C90248 * C91354;
    const double C91655 = C90306 * C91652;
    const double C90904 = C90902 + C90894;
    const double C91207 = C91205 + C91200;
    const double C90903 = C90901 + C90891;
    const double C91206 = C91204 + C91197;
    const double C90238 = C90106 * C90235;
    const double C91216 = C90248 * C90235;
    const double C3446 =
        2 * ((-(C90306 * C90721 * ce) / C89892) / C89849 -
             (ae * C90306 * C90722) / C90107 - (C90106 * C90768) / C90107) -
        (ae * C90306 * C90248 * C90235) / C90107 -
        (C90306 * C90248 * C90236 * ce) / C90107 +
        C90106 *
            ((-(ae * C90306 * C90248 * C90223) / C89892) / C89849 -
             C90768 / C90107 - (C90306 * C90248 * C90226 * ce) / C90107 +
             C90106 *
                 ((-(C90306 * C90248 * C90210 * ce) / C89892) / C89849 -
                  (ae * C90306 * C90248 * C90207) / C90107 -
                  (C90106 * C90306 * C90248 *
                   (C90187 * C90188 + C90114 * bs[7] * std::pow(C90110, 7)) *
                   C90115) /
                      C90107));
    const double C6559 = (-2 * C90248 * C90178) / C89892 -
                         (C90248 * (C90235 * C90420 + C90178)) / C89892;
    const double C7568 = -(C90306 * (C90235 * C90420 + C90178)) / C89892;
    const double C12842 = (-2 * C90306 * C90178) / C89892 -
                          (C90306 * (C90235 * C90542 + C90178)) / C89892;
    const double C91357 = C90248 * C91353;
    const double C91654 = C90306 * C91651;
    const double C90576 = C90575 / C89849;
    const double C90654 = C90653 / C89849;
    const double C13869 = C13864 + C13865;
    const double C41967 = C41962 + C41963;
    const double C51599 = C51579 + C51580;
    const double C41112 = C41099 + C41100;
    const double C90440 = C90439 / C89849;
    const double C91428 = C91427 / C89849;
    const double C90562 = C90561 / C89849;
    const double C91413 = C91412 / C89849;
    const double C91536 = C91534 + C91526;
    const double C91535 = C91533 + C91523;
    const double C667 = C663 * C92099;
    const double C90297 = C90294 - C90278;
    const double C13643 = C13639 + C13640;
    const double C84032 = C84028 + C84029;
    const double C5594 = C5589 + C5590;
    const double C5014 =
        (-3 * (C90248 * C90849 + C90254 + C90847 * ce)) / C89892 +
        C90248 * ((-2 * C90849) / C89892 - (C90248 * C90872) / C89892 -
                  (C90862 * ce) / C89892) -
        ((2 * C90847 + C90248 * C90862) * ce) / C89892;
    const double C5873 =
        -(C90872 * C90542 + C90248 * C90849 + C90254 + C90847 * ce) / C89892;
    const double C8666 =
        C90306 * ((-2 * C90849) / C89892 - (C90248 * C90872) / C89892 -
                  (C90862 * ce) / C89892);
    const double C43920 = (-2 * C90306 * C90872) / C89892 -
                          (C90306 * (C91353 * C90542 + C90872)) / C89892;
    const double C91345 = C91338 / C89849;
    const double C71766 = C71765 * C92099;
    const double C91609 = C91606 - C90532;
    const double C500 = C496 * C92110;
    const double C90355 = C90352 - C90336;
    const double C36845 = C36841 * C92110;
    const double C40495 = C40493 * C92110;
    const double C60237 = C40493 * C2710;
    const double C39149 = C39146 * C2710;
    const double C56927 = C39146 * C92110;
    const double C11199 =
        (-3 * (C90306 * C91157 + C90312 + C91155 * ce)) / C89892 +
        C90306 * ((-2 * C91157) / C89892 - (C90306 * C91180) / C89892 -
                  (C91170 * ce) / C89892) -
        ((2 * C91155 + C90306 * C91170) * ce) / C89892;
    const double C91641 = C91630 / C89849;
    const double C41319 = C41314 + C41315;
    const double C91380 = C91377 - C90456;
    const double C412 = C343 * C181;
    const double C492 = C343 * C244;
    const double C2297 = C2216 * C2060;
    const double C2375 = C2216 * C244;
    const double C3013 = C2938 * C181;
    const double C3101 = C2938 * C2850;
    const double C20198 = C2938 * C244;
    const double C23293 = C2938 * C1988;
    const double C9831 = C9750 * C181;
    const double C9917 = C9750 * C244;
    const double C13207 = C9750 * C1988;
    const double C21544 = C9750 * C801;
    const double C23494 = C9750 * C2850;
    const double C22413 = C22311 * C2060;
    const double C22518 = C22311 * C244;
    const double C24230 = C22311 * C801;
    const double C91352 = C91346 - C91331;
    const double C90411 = C90408 - C90393;
    const double C90888 = C90408 - C90882;
    const double C5301 =
        2 * ((-(C90377 * ce) / C89892) / C89849 - (ae * C90262) / C90107 -
             (C90248 * C90875) / C90107) -
        (ae * (C90248 * C90879 + C90262 + C90877 * ce)) / C90107 -
        ((C90377 + C90248 * C90880 + C90877 * ae) * ce) / C90107 +
        C90248 * ((-(ae * C90879) / C89892) / C89849 - C90875 / C90107 -
                  (C90880 * ce) / C90107 +
                  C90248 * (C90408 - C90282 / C90107 -
                            (C90248 * C90106 * C90436) / C90107));
    const double C12407 = C12405 * C92110;
    const double C6924 = C6914 + C6915;
    const double C47349 = C47339 + C47340;
    const double C7885 = C7875 + C7876;
    const double C28065 = C28058 + C28059;
    const double C48267 = C48257 + C48258;
    const double C52980 = C52973 + C52974;
    const double C12185 = C12179 + C12180;
    const double C26980 = C26962 + C26963;
    const double C43212 = C43204 + C43205;
    const double C8996 =
        2 * ((-(C90306 * C90375 * ce) / C89892) / C89849 -
             (ae * C90306 * C90260) / C90107 - (C90248 * C91051) / C90107) -
        (ae * C90306 * C90872) / C90107 - (C90306 * C90873 * ce) / C90107 +
        C90248 * ((-(ae * C90306 * C90860) / C89892) / C89849 -
                  C91051 / C90107 - (C90306 * C90863 * ce) / C90107 +
                  C90248 * ((-(C90306 * C90383 * ce) / C89892) / C89849 -
                            (ae * C90306 * C90268) / C90107 -
                            (C90248 * C90306 * C90436) / C90107));
    const double C5219 =
        (3 * (C90369 + C90248 * C90850 + C90847 * ae) +
         C90248 * (2 * C90850 + C90248 * C90873 + C90862 * ae) +
         (2 * C90847 + C90248 * C90862) * ae) /
        C89849;
    const double C6044 =
        (C90369 + C90248 * C90850 + C90847 * ae + C90873 * C90542) / C89849;
    const double C8894 =
        (C90306 * (2 * C90850 + C90248 * C90873 + C90862 * ae)) / C89849;
    const double C44144 =
        (2 * C90306 * C90873 + C90306 * (C90873 + C91354 * C90542)) / C89849;
    const double C73632 = C73630 * C801;
    const double C73702 = C73630 * C2060;
    const double C71882 = C71880 * C801;
    const double C71937 = C71880 * C181;
    const double C91441 = C91439 - C90456;
    const double C91464 = C91439 - C91462;
    const double C7996 = C7992 + C7993;
    const double C28202 = C28198 + C28199;
    const double C48377 = C48373 + C48374;
    const double C53117 = C53113 + C53114;
    const double C12297 = C12294 + C12295;
    const double C27098 = C27088 + C27089;
    const double C43318 = C43314 + C43315;
    const double C11438 = C11430 + C11431;
    const double C71938 = C71935 + C71936;
    const double C41529 = C41521 + C41522;
    const double C73705 = C73703 + C73704;
    const double C86826 = C86821 + C86822;
    const double C420 = C416 * C92099;
    const double C2304 = C2301 * C1986;
    const double C15167 = C15163 + C15164;
    const double C31621 = C31617 + C31618;
    const double C3020 = C3017 * C92099;
    const double C22412 = C3017 * C1985;
    const double C9834 = C9832 * C92099;
    const double C12292 = C9832 * C1985;
    const double C12298 = C12296 * C1986;
    const double C29400 = C18400 + C18399;
    const double C29399 = C18399 + C18400;
    const double C54325 = C34837 + C34836;
    const double C54324 = C34836 + C34837;
    const double C14321 = C14319 * C1986;
    const double C86820 = C27101 + C27100;
    const double C41531 = C41527 + C41528;
    const double C11443 = C11439 * C92099;
    const double C73701 = C11439 * C1985;
    const double C659 = C590 * C181;
    const double C737 = C590 * C244;
    const double C2553 = C2472 * C2060;
    const double C2631 = C2472 * C244;
    const double C15418 = C2472 * C181;
    const double C17674 = C2472 * C1988;
    const double C4717 = C4634 * C181;
    const double C4803 = C4634 * C244;
    const double C7258 = C4634 * C1988;
    const double C16087 = C4634 * C801;
    const double C17776 = C4634 * C2060;
    const double C3269 = C3194 * C181;
    const double C3357 = C3194 * C2850;
    const double C18715 = C18615 * C181;
    const double C18820 = C18615 * C2850;
    const double C19548 = C18615 * C801;
    const double C91650 = C91646 - C91633;
    const double C90512 = C90509 - C90494;
    const double C91189 = C90509 - C90920;
    const double C11770 =
        2 * ((-(C90478 * ce) / C89892) / C89849 - (ae * C90320) / C90107 -
             (C90306 * C90958) / C90107) -
        (ae * (C90306 * C91186 + C90320 + C91184 * ce)) / C90107 -
        ((C90478 + C90306 * C91187 + C91184 * ae) * ce) / C90107 +
        C90306 * ((-(ae * C91186) / C89892) / C89849 - C90958 / C90107 -
                  (C91187 * ce) / C90107 +
                  C90306 * (C90509 - C90920 - (C90306 * C90962) / C90107));
    const double C13532 = C13522 + C13523;
    const double C83922 = C83912 + C83913;
    const double C37064 = C37062 * C801;
    const double C37174 = C37062 * C244;
    const double C39427 = C39425 * C801;
    const double C39567 = C39425 * C2850;
    const double C11610 =
        (3 * (C90470 + C90306 * C91158 + C91155 * ae) +
         C90306 * (2 * C91158 + C90306 * C91181 + C91170 * ae) +
         (2 * C91155 + C90306 * C91170) * ae) /
        C89849;
    const double C44508 = C44499 + C44500;
    const double C89621 = C89612 + C89613;
    const double C91405 = C91402 - C90532;
    const double C91520 = C91402 - C91514;
    const double C37176 = C37172 + C37173;
    const double C41009 = C41000 + C41001;
    const double C60884 = C60880 + C60881;
    const double C70732 = C70726 + C70727;
    const double C86423 = C86414 + C86415;
    const double C39570 = C39568 + C39569;
    const double C57405 = C57400 + C57401;
    const double C67236 = C67228 + C67229;
    const double C5689 = C5680 + C5681;
    const double C12740 = C12734 + C12735;
    const double C29950 = C29946 + C29947;
    const double C78996 = C78992 + C78993;
    const double C83195 = C83189 + C83190;
    const double C8436 = C8433 + C8434;
    const double C26554 = C26544 + C26545;
    const double C68885 = C68882 + C68883;
    const double C44724 = C44718 + C44719;
    const double C89835 = C89829 + C89830;
    const double C745 = C741 * C92110;
    const double C2642 = C2639 * C92110;
    const double C18819 = C2639 * C2709;
    const double C4806 = C4804 * C92110;
    const double C8431 = C4804 * C2709;
    const double C3364 = C3361 * C2710;
    const double C20504 = C20500 + C20501;
    const double C61641 = C61637 + C61638;
    const double C8437 = C8435 * C2710;
    const double C28738 = C22861 + C22862;
    const double C28737 = C22862 + C22861;
    const double C77798 = C63976 + C63977;
    const double C77797 = C63977 + C63976;
    const double C5694 = C5690 * C92110;
    const double C39566 = C5690 * C2709;
    const double C9440 = C9438 * C2710;
    const double C57399 = C26557 + C26556;
    const double C67238 = C67234 + C67235;
    const double C129 =
        3 * ((-(ae * C90139) / C89892) / C89849 - C90138 / C90107 -
             (C90140 * ce) / C90107 + C90106 * C90177) +
        (((-2 * C90139) / C89892 - (C90106 * C90178) / C89892 -
          (C90160 * ce) / C89892) *
         ae) /
            C89849 -
        ((2 * C90140 + C90106 * C90179 + C90160 * ae) * ce) / C90107 +
        C90106 * (2 * C90177 - (ae * C90178) / C90107 - (C90179 * ce) / C90107 +
                  C90106 * ((-(ae * C90169) / C89892) / C89849 -
                            C90168 / C90107 - (C90170 * ce) / C90107 +
                            C90106 * ((-(C90161 * ce) / C89892) / C89849 -
                                      (ae * C90158) / C90107 -
                                      (C90106 *
                                       (C90145 * C90146 +
                                        C90114 * bs[6] * std::pow(C90104, 6)) *
                                       C90115) /
                                          C90107)));
    const double C5300 =
        3 * ((-(ae * C90849) / C89892) / C89849 - C90425 / C90107 -
             (C90850 * ce) / C90107 + C90248 * C90871) +
        (((-2 * C90849) / C89892 - (C90248 * C90872) / C89892 -
          (C90862 * ce) / C89892) *
         ae) /
            C89849 -
        ((2 * C90850 + C90248 * C90873 + C90862 * ae) * ce) / C90107 +
        C90248 * (2 * C90871 - (ae * C90872) / C90107 - (C90873 * ce) / C90107 +
                  C90248 * ((-(ae * C90860) / C89892) / C89849 - C90433 -
                            (C90863 * ce) / C90107 +
                            C90248 * ((-C90395 / C89892) / C89849 - C90284 -
                                      (C90248 * C90436) / C90107)));
    const double C11769 =
        3 * ((-(ae * C91157) / C89892) / C89849 - C90547 / C90107 -
             (C91158 * ce) / C90107 + C90306 * C91179) +
        (((-2 * C91157) / C89892 - (C90306 * C91180) / C89892 -
          (C91170 * ce) / C89892) *
         ae) /
            C89849 -
        ((2 * C91158 + C90306 * C91181 + C91170 * ae) * ce) / C90107 +
        C90306 * (2 * C91179 - (ae * C91180) / C90107 - (C91181 * ce) / C90107 +
                  C90306 * ((-(ae * C91168) / C89892) / C89849 - C90555 -
                            (C91171 * ce) / C90107 +
                            C90306 * ((-C90496 / C89892) / C89849 - C90342 -
                                      (C90306 * C90558) / C90107)));
    const double C192 =
        3 * ((-(ae * C90262) / C89892) / C89849 - C90259 / C90107 +
             C90106 * C90275) +
        (((-2 * C90262) / C89892 - (C90106 * C90272) / C89892) * ae) / C89849 +
        C90106 *
            (2 * C90275 - (ae * C90272) / C90107 +
             C90106 *
                 ((-(ae * C90106 * C90268) / C89892) / C89849 -
                  C90266 / C90107 +
                  C90106 * ((-(C90106 * C90188 * C90187 * C90255) / C89892) /
                                C89849 -
                            (ae * C90268) / C90107)));
    const double C896 =
        C90248 * ((-(ae * C90262) / C89892) / C89849 - C90259 / C90107 +
                  C90106 * C90275) -
        ((C90121 + C90106 * C90140 + C90129 * ae) * ce) / C90107;
    const double C900 = (-(C90106 * C90259) / C89892) / C89849 -
                        (ae * C90254) / C90107 -
                        (C90248 * C90140 * ce) / C90107 +
                        C90248 * (C90248 * C90275 - (C90140 * ce) / C90107);
    const double C1477 = C90306 * ((-(ae * C90262) / C89892) / C89849 -
                                   C90259 / C90107 + C90106 * C90275);
    const double C1481 = (-(C90106 * C90259) / C89892) / C89849 -
                         (ae * C90254) / C90107 + C90275 * C90542;
    const double C3518 = C90306 * (C90248 * C90275 - (C90140 * ce) / C90107);
    const double C5018 =
        3 * ((-(C90808 * ce) / C89892) / C89849 - C90259 / C90107 +
             C90248 * C90816) -
        ((2 * C90808 + C90248 * C90813) * ce) / C90107 +
        C90248 * (2 * C90816 - (C90813 * ce) / C90107 +
                  C90248 * (C90731 - C90278 +
                            C90248 * ((-(C90248 * C90283) / C89892) / C89849 -
                                      C90184 / C90107)));
    const double C5876 = C90306 * ((-(C90808 * ce) / C89892) / C89849 -
                                   C90259 / C90107 + C90248 * C90816);
    const double C5877 = (-(C90248 * C90259) / C89892) / C89849 -
                         (C90121 * ce) / C90107 + C90816 * C90542;
    const double C5879 =
        (-(C90808 * ce) / C89892) / C89849 - C90259 / C90107 + C90248 * C90816 +
        (C90731 - C90278 +
         C90248 * ((-(C90248 * C90283) / C89892) / C89849 - C90184 / C90107)) *
            C90542;
    const double C8668 =
        C90306 * (2 * C90816 - (C90813 * ce) / C90107 +
                  C90248 * (C90731 - C90278 +
                            C90248 * ((-(C90248 * C90283) / C89892) / C89849 -
                                      C90184 / C90107)));
    const double C13969 =
        2 * C90306 * C90816 +
        C90306 * (C90816 +
                  ((-(C90248 * C90283) / C89892) / C89849 - C90184 / C90107) *
                      C90542);
    const double C90302 = C90106 * C90300;
    const double C90819 = C90248 * C90300;
    const double C5017 = 2 * (C90248 * C90275 - (C90140 * ce) / C90107) -
                         ((C90140 + C90170 * C90420) * ce) / C90107 +
                         C90248 * (C90275 - (C90248 * C90170 * ce) / C90107 +
                                   C90248 * (C90248 * C90300 - C90193));
    const double C11096 =
        2 * C90306 * C90275 + C90306 * (C90275 + C90300 * C90542);
    const double C11099 =
        3 * (C90275 + C90300 * C90542) +
        C90306 *
            (2 * C90306 * C90300 +
             C90306 *
                 (C90300 +
                  ((-(C90106 * std::pow(C90110, 7) * bs[7] * C90255) / C89892) /
                       C89849 -
                   (ae * C90286) / C90107) *
                      C90542));
    const double C91289 = C90248 * C91288;
    const double C41201 =
        3 * (C90816 + C91288 * C90542) +
        C90306 *
            (2 * C90306 * C91288 +
             C90306 *
                 (C91288 +
                  ((-(C90248 * std::pow(C90110, 7) * bs[7] * C90255) / C89892) /
                       C89849 -
                   (C90210 * ce) / C90107) *
                      C90542));
    const double C71757 =
        4 * ((-2 * C90306 * C90266) / C90107 + C90306 * C91557) +
        C90306 * (3 * C91557 + C90306 * ((-2 * C90306 * C90283) / C90107 +
                                         C90306 * ((-(std::pow(C90110, 7) *
                                                      bs[7] * C90255 * C90542) /
                                                    C89892) /
                                                       C89849 -
                                                   C90283 / C90107)));
    const double C318 =
        3 * ((-(C90377 * ce) / C89892) / C89849 - C90374 / C90107 +
             C90106 * C90390) -
        ((2 * C90377 + C90106 * C90387) * ce) / C90107 +
        C90106 *
            (2 * C90390 - (C90387 * ce) / C90107 +
             C90106 *
                 ((-(C90106 * C90383 * ce) / C89892) / C89849 -
                  C90381 / C90107 +
                  C90106 * ((-(C90106 * C90188 * C90187 * C90370) / C89892) /
                                C89849 -
                            (C90383 * ce) / C90107)));
    const double C1028 =
        C90248 * ((-(C90377 * ce) / C89892) / C89849 - C90374 / C90107 +
                  C90106 * C90390) -
        (ae * (C90106 * C90139 + C90120 + C90129 * ce)) / C90107;
    const double C1032 = (-(C90106 * C90374) / C89892) / C89849 -
                         (C90369 * ce) / C90107 -
                         (ae * C90248 * C90139) / C90107 +
                         C90248 * (C90248 * C90390 - (ae * C90139) / C90107);
    const double C1612 = C90306 * ((-(C90377 * ce) / C89892) / C89849 -
                                   C90374 / C90107 + C90106 * C90390);
    const double C1616 = (-(C90106 * C90374) / C89892) / C89849 -
                         (C90369 * ce) / C90107 + C90390 * C90542;
    const double C3666 =
        C90248 * C90306 * C90390 - (ae * C90306 * C90139) / C90107;
    const double C5223 =
        3 * ((-(ae * C90830) / C89892) / C89849 - C90374 / C90107 +
             C90248 * C90837) +
        (((-2 * C90830) / C89892 - (C90248 * C90834) / C89892) * ae) / C89849 +
        C90248 * (2 * C90837 - (ae * C90834) / C90107 +
                  C90248 * ((-C90725 / C89892) / C89849 - C90393 +
                            C90248 * ((-(C90248 * C90398) / C89892) / C89849 -
                                      C90195)));
    const double C90415 = C90106 * C90414;
    const double C90840 = C90248 * C90414;
    const double C91049 = C90306 * C90414;
    const double C5221 =
        2 * (C90248 * C90390 - (ae * C90139) / C90107) -
        (ae * (C90169 * C90420 + C90139)) / C90107 +
        C90248 * (C90390 - (ae * C90248 * C90169) / C90107 +
                  C90248 * (C90248 * C90414 - C90181 / C90107));
    const double C6047 =
        C90306 * C90390 - (ae * C90306 * C90839) / C90107 +
        C90248 * (C90248 * C90306 * C90414 - (ae * C90306 * C90169) / C90107);
    const double C6051 = C90248 * (C90390 + C90414 * C90542) -
                         (ae * (C90169 * C90542 + C90139)) / C90107;
    const double C6052 =
        C90390 + C90414 * C90542 -
        (ae * (C90248 * C90223 * C90542 + C90839)) / C90107 +
        C90248 *
            (C90248 *
                 (C90414 +
                  ((-(C90106 * std::pow(C90110, 7) * bs[7] * C90370) / C89892) /
                       C89849 -
                   (C90401 * ce) / C90107) *
                      C90542) -
             (ae * (C90223 * C90542 + C90169)) / C90107);
    const double C11302 =
        2 * C90306 * C90390 + C90306 * (C90390 + C90414 * C90542);
    const double C91314 = C90248 * C91312;
    const double C37386 =
        2 * (C90248 * C91423 - (ae * C91123) / C90107) -
        (ae * (C91305 * C90542 + C90834)) / C90107 +
        C90248 *
            (C91423 - (ae * (C90248 * C90207 * C90542 + C90722)) / C90107 +
             C90248 *
                 (C90248 * ((-(std::pow(C90110, 7) * bs[7] * C90370 * C90542) /
                             C89892) /
                                C89849 -
                            C90398 / C90107) -
                  (ae * (C90207 * C90542 + C90158)) / C90107));
    const double C41394 =
        (((-3 * C91123) / C89892 +
          C90306 * ((-2 * C90744) / C89892 -
                    (C90306 * (C90207 * C90542 + C90158)) / C89892)) *
         ae) /
            C89849 +
        C90248 * (3 * C91423 + C90306 * ((-2 * C91451) / C90107 +
                                         C90306 * ((-(std::pow(C90110, 7) *
                                                      bs[7] * C90370 * C90542) /
                                                    C89892) /
                                                       C89849 -
                                                   C90398 / C90107)));
    const double C44145 =
        (-2 * C91047) / C90107 + C90306 * C91423 +
        (((-2 * C91496) / C89892 - (C90306 * C91502) / C89892) * ae) / C89849 +
        C90248 *
            ((((-2 * C90744) / C89892 -
               (C90306 * (C90207 * C90542 + C90158)) / C89892) *
              ae) /
                 C89849 +
             C90248 *
                 ((-2 * C91451) / C90107 +
                  C90306 * ((-(std::pow(C90110, 7) * bs[7] * C90370 * C90542) /
                             C89892) /
                                C89849 -
                            C90398 / C90107)));
    const double C71872 =
        4 * ((-2 * C91047) / C90107 + C90306 * C91423) +
        C90306 * (3 * C91423 + C90306 * ((-2 * C91451) / C90107 +
                                         C90306 * ((-(std::pow(C90110, 7) *
                                                      bs[7] * C90370 * C90542) /
                                                    C89892) /
                                                       C89849 -
                                                   C90398 / C90107)));
    const double C91456 = C91455 - C90750;
    const double C255 =
        3 * ((-(ae * C90320) / C89892) / C89849 - C90317 / C90107 +
             C90106 * C90333) +
        (((-2 * C90320) / C89892 - (C90106 * C90330) / C89892) * ae) / C89849 +
        C90106 *
            (2 * C90333 - (ae * C90330) / C90107 +
             C90106 *
                 ((-(ae * C90106 * C90326) / C89892) / C89849 -
                  C90324 / C90107 +
                  C90106 * ((-(C90106 * C90188 * C90187 * C90313) / C89892) /
                                C89849 -
                            (ae * C90326) / C90107)));
    const double C962 = C90248 * ((-(ae * C90320) / C89892) / C89849 -
                                  C90317 / C90107 + C90106 * C90333);
    const double C966 = (-(C90106 * C90317) / C89892) / C89849 -
                        (ae * C90312) / C90107 + C90333 * C90420;
    const double C1546 =
        C90306 * ((-(ae * C90320) / C89892) / C89849 - C90317 / C90107 +
                  C90106 * C90333) -
        ((C90121 + C90106 * C90140 + C90129 * ae) * ce) / C90107;
    const double C1550 = (-(C90106 * C90317) / C89892) / C89849 -
                         (ae * C90312) / C90107 -
                         (C90306 * C90140 * ce) / C90107 +
                         C90306 * (C90306 * C90333 - (C90140 * ce) / C90107);
    const double C3592 =
        C90306 * C90248 * C90333 - (C90248 * C90140 * ce) / C90107;
    const double C11203 =
        3 * ((-(C91084 * ce) / C89892) / C89849 - C90317 / C90107 +
             C90306 * C91091) -
        ((2 * C91084 + C90306 * C91088) * ce) / C90107 +
        C90306 * (2 * C91091 - (C91088 * ce) / C90107 +
                  C90306 * (C90753 - C90336 +
                            C90306 * ((-(C90306 * C90341) / C89892) / C89849 -
                                      C90184 / C90107)));
    const double C90360 = C90106 * C90358;
    const double C91094 = C90306 * C90358;
    const double C91242 = C90248 * C90358;
    const double C5117 =
        2 * C90248 * C90333 + C90248 * (C90333 + C90358 * C90420);
    const double C5120 =
        3 * (C90333 + C90358 * C90420) +
        C90248 *
            (2 * C90248 * C90358 +
             C90248 *
                 (C90358 +
                  ((-(C90106 * std::pow(C90110, 7) * bs[7] * C90313) / C89892) /
                       C89849 -
                   (ae * C90344) / C90107) *
                      C90420));
    const double C5962 =
        C90248 * C90333 - (C90306 * C90818 * ce) / C90107 +
        C90306 * (C90306 * C90248 * C90358 - (C90818 * ce) / C90107);
    const double C5963 = C90306 * (C90333 + C90358 * C90420) -
                         ((C90140 + C90170 * C90420) * ce) / C90107;
    const double C5966 =
        C90333 + C90358 * C90420 - (C90306 * C90822 * ce) / C90107 +
        C90306 *
            (C90306 *
                 (C90358 +
                  ((-(C90106 * std::pow(C90110, 7) * bs[7] * C90313) / C89892) /
                       C89849 -
                   (ae * C90344) / C90107) *
                      C90420) -
             (C90822 * ce) / C90107);
    const double C8783 =
        C90306 *
            (2 * C90248 * C90358 +
             C90248 *
                 (C90358 +
                  ((-(C90106 * std::pow(C90110, 7) * bs[7] * C90313) / C89892) /
                       C89849 -
                   (ae * C90344) / C90107) *
                      C90420)) -
        ((2 * C90818 + C90248 * C90822) * ce) / C90107;
    const double C11202 = 2 * (C90306 * C90333 - (C90140 * ce) / C90107) -
                          ((C90140 + C90170 * C90542) * ce) / C90107 +
                          C90306 * (C90333 - (C90306 * C90170 * ce) / C90107 +
                                    C90306 * (C90306 * C90358 - C90193));
    const double C36824 =
        4 * ((-2 * C91240) / C90107 + C90248 * C91296) +
        C90248 * (3 * C91296 + C90248 * ((-2 * C90248 * C90341) / C90107 +
                                         C90248 * ((-(std::pow(C90110, 7) *
                                                      bs[7] * C90313 * C90420) /
                                                    C89892) /
                                                       C89849 -
                                                   C90341 / C90107)));
    const double C37334 =
        (-2 * C91240) / C90107 + C90248 * C91296 -
        (C90306 * C91287 * ce) / C90107 +
        C90306 *
            (C90306 *
                 ((-2 * C90248 * C90341) / C90107 +
                  C90248 * ((-(std::pow(C90110, 7) * bs[7] * C90313 * C90420) /
                             C89892) /
                                C89849 -
                            C90341 / C90107)) -
             (C91287 * ce) / C90107);
    const double C39127 =
        C90306 * (3 * C91296 + C90248 * ((-2 * C90248 * C90341) / C90107 +
                                         C90248 * ((-(std::pow(C90110, 7) *
                                                      bs[7] * C90313 * C90420) /
                                                    C89892) /
                                                       C89849 -
                                                   C90341 / C90107))) -
        ((3 * C90813 + C90248 * C91287) * ce) / C90107;
    const double C44037 =
        2 * (C90306 * C91296 - (C90813 * ce) / C90107) -
        ((C90813 + C91283 * C90542) * ce) / C90107 +
        C90306 *
            (C91296 - (C90306 * C91283 * ce) / C90107 +
             C90306 *
                 (C90306 * ((-(std::pow(C90110, 7) * bs[7] * C90313 * C90420) /
                             C89892) /
                                C89849 -
                            C90341 / C90107) -
                  (C91283 * ce) / C90107));
    const double C91487 = C91486 - C91479;
    const double C91570 = C90306 * C91569;
    const double C504 = C502 * C92148;
    const double C5379 =
        3 * ((-(ae * C90909) / C89892) / C89849 - C90450 / C90107 +
             C90248 * C90916) +
        (((-2 * C90909) / C89892 - (C90248 * C90913) / C89892) * ae) / C89849 +
        C90248 *
            (2 * C90916 - (ae * C90913) / C90107 +
             C90248 *
                 ((-(ae * C90248 * C90326) / C89892) / C89849 - C90456 +
                  C90248 * ((-(C90248 * C90457) / C89892) / C89849 - C90342)));
    const double C9096 =
        2 * (C90248 * C91059 - (ae * (C90306 * C90318 + C90128)) / C90107) -
        (ae * (C90306 * C90913 + C90862 * ce)) / C90107 +
        C90248 * (C91059 - (ae * (C90306 * C90248 * C90326 + C90861)) / C90107 +
                  C90248 * (C90248 * ((-(C90306 * C90457) / C89892) / C89849 -
                                      C90399) -
                            (ae * (C90306 * C90326 + C90151)) / C90107));
    const double C11518 =
        2 * ((-(C90306 * C90450) / C89892) / C89849 - (C90369 * ce) / C90107) -
        ((C90369 + C90375 * C90542) * ce) / C90107 +
        C90306 * ((-(C90306 * C90375 * ce) / C89892) / C89849 -
                  C90450 / C90107 + C90306 * C91059);
    const double C11519 =
        3 * ((-(C91108 * ce) / C89892) / C89849 - C90450 / C90107 +
             C90306 * C91059) -
        ((2 * C91108 + C90306 * C91110) * ce) / C90107 +
        C90306 *
            (2 * C91059 - (C91110 * ce) / C90107 +
             C90306 *
                 ((-(C90306 * C90383 * ce) / C89892) / C89849 - C90456 +
                  C90306 * ((-(C90306 * C90457) / C89892) / C89849 - C90399)));
    const double C14419 =
        (((-2 * C91157) / C89892 - (C90306 * C91180) / C89892 -
          (C91170 * ce) / C89892) *
         ae) /
            C89849 +
        C90248 *
            (2 * C91059 - (C91110 * ce) / C90107 +
             C90306 *
                 ((-(C90306 * C90383 * ce) / C89892) / C89849 - C90456 +
                  C90306 * ((-(C90306 * C90457) / C89892) / C89849 - C90399)));
    const double C20199 = C20196 * C92212;
    const double C61336 = C20196 * C92212;
    const double C479 =
        4 * ((-2 * C90106 * C90453) / C90107 + C90106 * C90462) +
        C90106 * (3 * C90462 + C90106 * ((-2 * C90106 * C90457) / C90107 +
                                         C90106 * ((-(std::pow(C90110, 7) *
                                                      bs[7] * C90447 * C90114) /
                                                    C89892) /
                                                       C89849 -
                                                   C90457 / C90107)));
    const double C1143 =
        (((-2 * C90320) / C89892 - (C90106 * C90330) / C89892) * ae) / C89849 +
        C90248 * ((-2 * C90106 * C90453) / C90107 + C90106 * C90462);
    const double C1149 = (-(C90453 * C90114) / C89892) / C89849 -
                         C90450 / C90107 - (ae * C90248 * C90330) / C90107 +
                         C90248 * (C90248 * C90462 - (ae * C90330) / C90107);
    const double C1150 =
        (-2 * C90106 * C90453) / C90107 + C90106 * C90462 +
        (C90248 * C90359 * ae) / C89849 +
        C90248 *
            ((C90359 * ae) / C89849 +
             C90248 *
                 ((-2 * C90106 * C90457) / C90107 +
                  C90106 * ((-(std::pow(C90110, 7) * bs[7] * C90447 * C90114) /
                             C89892) /
                                C89849 -
                            C90457 / C90107)));
    const double C1732 = (-(C90453 * C90114) / C89892) / C89849 -
                         C90450 / C90107 - (C90306 * C90387 * ce) / C90107 +
                         C90306 * (C90306 * C90462 - (C90387 * ce) / C90107);
    const double C1733 =
        C90306 * ((-2 * C90106 * C90453) / C90107 + C90106 * C90462) -
        ((2 * C90377 + C90106 * C90387) * ce) / C90107;
    const double C1734 =
        (-2 * C90106 * C90453) / C90107 + C90106 * C90462 -
        (C90306 * C90413 * ce) / C90107 +
        C90306 *
            (C90306 *
                 ((-2 * C90106 * C90457) / C90107 +
                  C90106 * ((-(std::pow(C90110, 7) * bs[7] * C90447 * C90114) /
                             C89892) /
                                C89849 -
                            C90457 / C90107)) -
             (C90413 * ce) / C90107);
    const double C2371 =
        (((-3 * C90330) / C89892 + C90106 * C90359) * ae) / C89849 +
        C90248 * (3 * C90462 + C90106 * ((-2 * C90106 * C90457) / C90107 +
                                         C90106 * ((-(std::pow(C90110, 7) *
                                                      bs[7] * C90447 * C90114) /
                                                    C89892) /
                                                       C89849 -
                                                   C90457 / C90107)));
    const double C3087 =
        C90306 * (3 * C90462 + C90106 * ((-2 * C90106 * C90457) / C90107 +
                                         C90106 * ((-(std::pow(C90110, 7) *
                                                      bs[7] * C90447 * C90114) /
                                                    C89892) /
                                                       C89849 -
                                                   C90457 / C90107))) -
        ((3 * C90387 + C90106 * C90413) * ce) / C90107;
    const double C3807 = C90248 * (C90306 * C90462 - (C90387 * ce) / C90107) -
                         (ae * (C90306 * C90330 + C90160 * ce)) / C90107;
    const double C7133 =
        2 * (C90248 * C90462 - (ae * C90330) / C90107) -
        (ae * (C90351 * C90420 + C90330)) / C90107 +
        C90248 *
            (C90462 - (ae * C90248 * C90351) / C90107 +
             C90248 *
                 (C90248 * ((-(std::pow(C90110, 7) * bs[7] * C90447 * C90114) /
                             C89892) /
                                C89849 -
                            C90457 / C90107) -
                  (ae * C90351) / C90107));
    const double C8094 =
        C90306 * C90462 - (C90387 * ce) / C90107 -
        (ae * (C90306 * C90248 * C90351 + C91023 * ce)) / C90107 +
        C90248 *
            (C90248 *
                 (C90306 * ((-(std::pow(C90110, 7) * bs[7] * C90447 * C90114) /
                             C89892) /
                                C89849 -
                            C90457 / C90107) -
                  (C90407 * ce) / C90107) -
             (ae * (C90306 * C90351 + C90216)) / C90107);
    const double C12397 =
        C90248 *
            (C90462 - (C90306 * C90407 * ce) / C90107 +
             C90306 *
                 (C90306 * ((-(std::pow(C90110, 7) * bs[7] * C90447 * C90114) /
                             C89892) /
                                C89849 -
                            C90457 / C90107) -
                  (C90407 * ce) / C90107)) -
        (ae * (C90306 * (C90306 * C90351 + C90216) + C90330 +
               C90306 * C90209 * ce)) /
            C90107;
    const double C13408 =
        2 * (C90306 * C90462 - (C90387 * ce) / C90107) -
        ((C90387 + C90407 * C90542) * ce) / C90107 +
        C90306 *
            (C90462 - (C90306 * C90407 * ce) / C90107 +
             C90306 *
                 (C90306 * ((-(std::pow(C90110, 7) * bs[7] * C90447 * C90114) /
                             C89892) /
                                C89849 -
                            C90457 / C90107) -
                  (C90407 * ce) / C90107));
    const double C90928 = C90927 - C90920;
    const double C91066 = C91065 - C91062;
    const double C91383 = C90248 * C91381;
    const double C91442 = C90306 * C91440;
    const double C91467 = C90248 * C91440;
    const double C5503 = C5502 * C4097;
    const double C37054 = C5502 * C92062;
    const double C46075 = C5502 * C92310;
    const double C565 =
        3 * ((-(C90478 * ce) / C89892) / C89849 - C90475 / C90107 +
             C90106 * C90491) -
        ((2 * C90478 + C90106 * C90488) * ce) / C90107 +
        C90106 *
            (2 * C90491 - (C90488 * ce) / C90107 +
             C90106 *
                 ((-(C90106 * C90484 * ce) / C89892) / C89849 -
                  C90482 / C90107 +
                  C90106 * ((-(C90106 * C90188 * C90187 * C90471) / C89892) /
                                C89849 -
                            (C90484 * ce) / C90107)));
    const double C1210 = C90248 * ((-(C90478 * ce) / C89892) / C89849 -
                                   C90475 / C90107 + C90106 * C90491);
    const double C1214 = (-(C90106 * C90475) / C89892) / C89849 -
                         (C90470 * ce) / C90107 + C90491 * C90420;
    const double C1794 =
        C90306 * ((-(C90478 * ce) / C89892) / C89849 - C90475 / C90107 +
                  C90106 * C90491) -
        (ae * (C90106 * C90139 + C90120 + C90129 * ce)) / C90107;
    const double C1798 = (-(C90106 * C90475) / C89892) / C89849 -
                         (C90470 * ce) / C90107 -
                         (ae * C90306 * C90139) / C90107 +
                         C90306 * (C90306 * C90491 - (ae * C90139) / C90107);
    const double C3880 =
        C90306 * C90248 * C90491 - (ae * C90248 * C90139) / C90107;
    const double C11614 =
        3 * ((-(ae * C91119) / C89892) / C89849 - C90475 / C90107 +
             C90306 * C91126) +
        (((-2 * C91119) / C89892 - (C90306 * C91123) / C89892) * ae) / C89849 +
        C90306 * (2 * C91126 - (ae * C91123) / C90107 +
                  C90306 * ((-C90747 / C89892) / C89849 - C90494 +
                            C90306 * ((-(C90306 * C90499) / C89892) / C89849 -
                                      C90195)));
    const double C37060 = C37055 * C92062;
    const double C90516 = C90106 * C90515;
    const double C91129 = C90306 * C90515;
    const double C91253 = C90248 * C90515;
    const double C5459 =
        2 * C90248 * C90491 + C90248 * (C90491 + C90515 * C90420);
    const double C5462 =
        3 * (C90491 + C90515 * C90420) +
        C90248 *
            (2 * C90248 * C90515 +
             C90248 *
                 (C90515 +
                  ((-(C90106 * std::pow(C90110, 7) * bs[7] * C90471) / C89892) /
                       C89849 -
                   (C90502 * ce) / C90107) *
                      C90420));
    const double C6293 = C90306 * (C90491 + C90515 * C90420) -
                         (ae * (C90169 * C90420 + C90139)) / C90107;
    const double C6296 =
        C90248 * C90491 - (ae * C90306 * C90839) / C90107 +
        C90306 * (C90306 * C90248 * C90515 - (ae * C90839) / C90107);
    const double C6298 =
        C90491 + C90515 * C90420 - (ae * C90306 * C90844) / C90107 +
        C90306 *
            (C90306 *
                 (C90515 +
                  ((-(C90106 * std::pow(C90110, 7) * bs[7] * C90471) / C89892) /
                       C89849 -
                   (C90502 * ce) / C90107) *
                      C90420) -
             (ae * C90844) / C90107);
    const double C9199 =
        (((-2 * C90839) / C89892 - (C90248 * C90844) / C89892) * ae) / C89849 +
        C90306 *
            (2 * C90248 * C90515 +
             C90248 *
                 (C90515 +
                  ((-(C90106 * std::pow(C90110, 7) * bs[7] * C90471) / C89892) /
                       C89849 -
                   (C90502 * ce) / C90107) *
                      C90420));
    const double C11612 = 2 * (C90306 * C90491 - (ae * C90139) / C90107) -
                          (ae * (C90169 * C90542 + C90139)) / C90107 +
                          C90306 * (C90491 - (ae * C90306 * C90169) / C90107 +
                                    C90306 * (C90306 * C90515 - C90841));
    const double C37052 =
        4 * ((-2 * C91251) / C90107 + C90248 * C91390) +
        C90248 * (3 * C91390 + C90248 * ((-2 * C90248 * C90499) / C90107 +
                                         C90248 * ((-(std::pow(C90110, 7) *
                                                      bs[7] * C90471 * C90420) /
                                                    C89892) /
                                                       C89849 -
                                                   C90499 / C90107)));
    const double C37540 =
        (-2 * C91251) / C90107 + C90248 * C91390 +
        (C90306 * C91313 * ae) / C89849 +
        C90306 *
            ((C91313 * ae) / C89849 +
             C90306 *
                 ((-2 * C90248 * C90499) / C90107 +
                  C90248 * ((-(std::pow(C90110, 7) * bs[7] * C90471 * C90420) /
                             C89892) /
                                C89849 -
                            C90499 / C90107)));
    const double C39418 =
        (((-3 * C90834) / C89892 + C90248 * C91313) * ae) / C89849 +
        C90306 * (3 * C91390 + C90248 * ((-2 * C90248 * C90499) / C90107 +
                                         C90248 * ((-(std::pow(C90110, 7) *
                                                      bs[7] * C90471 * C90420) /
                                                    C89892) /
                                                       C89849 -
                                                   C90499 / C90107)));
    const double C44491 =
        2 * (C90306 * C91390 - (ae * C90834) / C90107) -
        (ae * (C91305 * C90542 + C90834)) / C90107 +
        C90306 *
            (C91390 - (ae * C90306 * C91305) / C90107 +
             C90306 *
                 (C90306 * ((-(std::pow(C90110, 7) * bs[7] * C90471 * C90420) /
                             C89892) /
                                C89849 -
                            C90499 / C90107) -
                  (ae * C91305) / C90107));
    const double C91505 = C91504 - C90728;
    const double C91595 = C90306 * C91593;
    const double C5580 =
        3 * ((-(C90937 * ce) / C89892) / C89849 - C90526 / C90107 +
             C90248 * C90944) -
        ((2 * C90937 + C90248 * C90941) * ce) / C90107 +
        C90248 *
            (2 * C90944 - (C90941 * ce) / C90107 +
             C90248 *
                 ((-(C90248 * C90484 * ce) / C89892) / C89849 - C90532 +
                  C90248 * ((-(C90248 * C90533) / C89892) / C89849 - C90500)));
    const double C6374 =
        C90306 * ((-(C90937 * ce) / C89892) / C89849 - C90526 / C90107 +
                  C90248 * C90944) -
        (ae * (C90248 * C90849 + C90254 + C90847 * ce)) / C90107;
    const double C6375 = (-(C90248 * C90526) / C89892) / C89849 -
                         (C90470 * ce) / C90107 -
                         (ae * C90306 * C90849) / C90107 +
                         C90306 * (C90306 * C90944 - (ae * C90849) / C90107);
    const double C6377 =
        (-(C90937 * ce) / C89892) / C89849 - C90526 / C90107 + C90248 * C90944 -
        (ae * C90306 * C90872) / C90107 +
        C90306 *
            (C90306 *
                 ((-(C90248 * C90484 * ce) / C89892) / C89849 - C90532 +
                  C90248 * ((-(C90248 * C90533) / C89892) / C89849 - C90500)) -
             (ae * C90872) / C90107);
    const double C9318 =
        (((-2 * C90849) / C89892 - (C90248 * C90872) / C89892 -
          (C90862 * ce) / C89892) *
         ae) /
            C89849 +
        C90306 *
            (2 * C90944 - (C90941 * ce) / C90107 +
             C90248 *
                 ((-(C90248 * C90484 * ce) / C89892) / C89849 - C90532 +
                  C90248 * ((-(C90248 * C90533) / C89892) / C89849 - C90500)));
    const double C14627 =
        2 * (C90306 * C90944 - (ae * C90849) / C90107) -
        (ae * (C90860 * C90542 + C90849)) / C90107 +
        C90306 * (C90944 - (ae * C90306 * C90860) / C90107 +
                  C90306 * (C90306 * ((-(C90248 * C90533) / C89892) / C89849 -
                                      C90500) -
                            (ae * C90860) / C90107));
    const double C11692 =
        3 * ((-(ae * C91136) / C89892) / C89849 - C90526 / C90107 +
             C90306 * C91143) +
        (((-2 * C91136) / C89892 - (C90306 * C91140) / C89892) * ae) / C89849 +
        C90306 *
            (2 * C91143 - (ae * C91140) / C90107 +
             C90306 *
                 ((-(ae * C90306 * C90268) / C89892) / C89849 - C90532 +
                  C90306 * ((-(C90306 * C90533) / C89892) / C89849 - C90284)));
    const double C646 =
        4 * ((-2 * C90106 * C90529) / C90107 + C90106 * C90538) +
        C90106 * (3 * C90538 + C90106 * ((-2 * C90106 * C90533) / C90107 +
                                         C90106 * ((-(std::pow(C90110, 7) *
                                                      bs[7] * C90523 * C90114) /
                                                    C89892) /
                                                       C89849 -
                                                   C90533 / C90107)));
    const double C1272 = (-(C90529 * C90114) / C89892) / C89849 -
                         C90526 / C90107 - (C90248 * C90488 * ce) / C90107 +
                         C90248 * (C90248 * C90538 - (C90488 * ce) / C90107);
    const double C1273 =
        C90248 * ((-2 * C90106 * C90529) / C90107 + C90106 * C90538) -
        ((2 * C90478 + C90106 * C90488) * ce) / C90107;
    const double C1274 =
        (-2 * C90106 * C90529) / C90107 + C90106 * C90538 -
        (C90248 * C90514 * ce) / C90107 +
        C90248 *
            (C90248 *
                 ((-2 * C90106 * C90533) / C90107 +
                  C90106 * ((-(std::pow(C90110, 7) * bs[7] * C90523 * C90114) /
                             C89892) /
                                C89849 -
                            C90533 / C90107)) -
             (C90514 * ce) / C90107);
    const double C1851 =
        (((-2 * C90262) / C89892 - (C90106 * C90272) / C89892) * ae) / C89849 +
        C90306 * ((-2 * C90106 * C90529) / C90107 + C90106 * C90538);
    const double C1857 = (-(C90529 * C90114) / C89892) / C89849 -
                         C90526 / C90107 - (ae * C90306 * C90272) / C90107 +
                         C90306 * (C90306 * C90538 - (ae * C90272) / C90107);
    const double C1858 =
        (-2 * C90106 * C90529) / C90107 + C90106 * C90538 +
        (C90306 * C90301 * ae) / C89849 +
        C90306 *
            ((C90301 * ae) / C89849 +
             C90306 *
                 ((-2 * C90106 * C90533) / C90107 +
                  C90106 * ((-(std::pow(C90110, 7) * bs[7] * C90523 * C90114) /
                             C89892) /
                                C89849 -
                            C90533 / C90107)));
    const double C2539 =
        C90248 * (3 * C90538 + C90106 * ((-2 * C90106 * C90533) / C90107 +
                                         C90106 * ((-(std::pow(C90110, 7) *
                                                      bs[7] * C90523 * C90114) /
                                                    C89892) /
                                                       C89849 -
                                                   C90533 / C90107))) -
        ((3 * C90488 + C90106 * C90514) * ce) / C90107;
    const double C3261 =
        (((-3 * C90272) / C89892 + C90106 * C90301) * ae) / C89849 +
        C90306 * (3 * C90538 + C90106 * ((-2 * C90106 * C90533) / C90107 +
                                         C90106 * ((-(std::pow(C90110, 7) *
                                                      bs[7] * C90523 * C90114) /
                                                    C89892) /
                                                       C89849 -
                                                   C90533 / C90107)));
    const double C3951 = C90306 * (C90248 * C90538 - (C90488 * ce) / C90107) -
                         (ae * (C90248 * C90272 + C90160 * ce)) / C90107;
    const double C7357 =
        2 * (C90248 * C90538 - (C90488 * ce) / C90107) -
        ((C90488 + C90508 * C90420) * ce) / C90107 +
        C90248 *
            (C90538 - (C90248 * C90508 * ce) / C90107 +
             C90248 *
                 (C90248 * ((-(std::pow(C90110, 7) * bs[7] * C90523 * C90114) /
                             C89892) /
                                C89849 -
                            C90533 / C90107) -
                  (C90508 * ce) / C90107));
    const double C8314 =
        C90306 *
            (C90538 - (C90248 * C90508 * ce) / C90107 +
             C90248 *
                 (C90248 * ((-(std::pow(C90110, 7) * bs[7] * C90523 * C90114) /
                             C89892) /
                                C89849 -
                            C90533 / C90107) -
                  (C90508 * ce) / C90107)) -
        (ae * (C90248 * C91025 + C90272 + C91023 * ce)) / C90107;
    const double C12624 =
        C90248 * C90538 - (C90488 * ce) / C90107 -
        (ae * C90306 * C91025) / C90107 +
        C90306 *
            (C90306 *
                 (C90248 * ((-(std::pow(C90110, 7) * bs[7] * C90523 * C90114) /
                             C89892) /
                                C89849 -
                            C90533 / C90107) -
                  (C90508 * ce) / C90107) -
             (ae * C91025) / C90107);
    const double C13633 =
        2 * (C90306 * C90538 - (ae * C90272) / C90107) -
        (ae * (C90293 * C90542 + C90272)) / C90107 +
        C90306 *
            (C90538 - (ae * C90306 * C90293) / C90107 +
             C90306 *
                 (C90306 * ((-(std::pow(C90110, 7) * bs[7] * C90523 * C90114) /
                             C89892) /
                                C89849 -
                            C90533 / C90107) -
                  (ae * C90293) / C90107));
    const double C90956 = C90955 - C90948;
    const double C91152 = C91151 - C90882;
    const double C91407 = C90248 * C91406;
    const double C91508 = C90306 * C91406;
    const double C91614 = C90306 * C91612;
    const double C89874 = C89873 / C89849;
    const double C4920 = C4102 * C4882;
    const double C4916 = C4102 * C4886;
    const double C4910 = C4102 * C822;
    const double C4906 = C4102 * C806;
    const double C4902 = C4102 * C813;
    const double C4898 = C4102 * C805;
    const double C5029 = C4102 * C5012;
    const double C5025 = C4102 * C891;
    const double C5023 = C4102 * C890;
    const double C5133 = C4102 * C5114;
    const double C5127 = C4102 * C957;
    const double C5122 = C4102 * C956;
    const double C6576 = C4102 * C823;
    const double C6572 = C4102 * C807;
    const double C6568 = C4102 * C812;
    const double C6564 = C4102 * C804;
    const double C6690 = C4102 * C892;
    const double C6686 = C4102 * C889;
    const double C6802 = C4102 * C958;
    const double C6798 = C4102 * C955;
    const double C8559 = C4102 * C3431;
    const double C8555 = C4102 * C3439;
    const double C8551 = C4102 * C5772;
    const double C8547 = C4102 * C5778;
    const double C8675 = C4102 * C5870;
    const double C8671 = C4102 * C3513;
    const double C8791 = C4102 * C5958;
    const double C8787 = C4102 * C3587;
    const double C10999 = C4102 * C10961;
    const double C10995 = C4102 * C10965;
    const double C10989 = C4102 * C1406;
    const double C10985 = C4102 * C1390;
    const double C10981 = C4102 * C1397;
    const double C10977 = C4102 * C1389;
    const double C11112 = C4102 * C11093;
    const double C11106 = C4102 * C1472;
    const double C11101 = C4102 * C1471;
    const double C11214 = C4102 * C11197;
    const double C11210 = C4102 * C1541;
    const double C11208 = C4102 * C1540;
    const double C12859 = C4102 * C1407;
    const double C12855 = C4102 * C1391;
    const double C12851 = C4102 * C1396;
    const double C12847 = C4102 * C1388;
    const double C12975 = C4102 * C1470;
    const double C12971 = C4102 * C1473;
    const double C13085 = C4102 * C1542;
    const double C13081 = C4102 * C1539;
    const double C13862 = C4102 * C5783;
    const double C13858 = C4102 * C5773;
    const double C13974 = C4102 * C5871;
    const double C14080 = C4102 * C5955;
    const double C27648 = C4102 * C3440;
    const double C27644 = C4102 * C3432;
    const double C27784 = C4102 * C3514;
    const double C27920 = C4102 * C3588;
    const double C36847 = C36832 + C36844;
    const double C36846 = C36829 + C36843;
    const double C56926 = C40491 + C40490;
    const double C71760 = C41218 + C41228;
    const double C41229 = C41208 + C41225;
    const double C90038 = C90036 / C89849;
    const double C15266 = C15249 + C15265;
    const double C31606 = C31526 * C181;
    const double C31703 = C31526 * C244;
    const double C31719 = C31718 * C92110;
    const double C54323 = C54191 * C181;
    const double C54326 = C54189 * C181;
    const double C41435 = C41433 * C92078;
    const double C90084 = C90082 / C89849;
    const double C20410 = C20393 + C20409;
    const double C57241 = C57235 + C57236;
    const double C61530 = C61450 * C181;
    const double C61626 = C61450 * C244;
    const double C61546 = C61545 * C92099;
    const double C77796 = C77532 * C244;
    const double C77799 = C77530 * C244;
    const double C67049 = C67047 * C92078;
    const double C67048 = C67046 * C801;
    const double C67223 = C67046 * C244;
    const double C86738 = C86728 * C801;
    const double C86819 = C86728 * C181;
    const double C41434 = C41432 * C801;
    const double C41516 = C41432 * C181;
    const double C36708 = C36702 + C36703;
    const double C41124 = C41118 + C41119;
    const double C43822 = C38982 + C38983;
    const double C43820 = C38983 + C38982;
    const double C422 = C407 + C419;
    const double C13310 = C3019 + C3007;
    const double C13308 = C3007 + C3019;
    const double C11444 = C11426 + C11441;
    const double C747 = C732 + C744;
    const double C7468 = C2643 + C2637;
    const double C7466 = C2637 + C2643;
    const double C5695 = C5676 + C5692;
    const double C17001 = C14805 * C814;
    const double C33447 = C31259 * C814;
    const double C6571 = C92067 * C820;
    const double C15587 = C14805 * C820;
    const double C32037 = C31259 * C820;
    const double C47002 = C92067 * C820;
    const double C22962 = C14805 * C1398;
    const double C64077 = C31259 * C1398;
    const double C12854 = C92067 * C1404;
    const double C21266 = C14805 * C1404;
    const double C62403 = C31259 * C1404;
    const double C83297 = C92067 * C1404;
    const double C18930 = C14805 * C3437;
    const double C27643 = C92067 * C3437;
    const double C35349 = C31259 * C3437;
    const double C52558 = C92067 * C3437;
    const double C41970 = C41966 * C1988;
    const double C42177 = C41966 * C244;
    const double C42989 = C41966 * C181;
    const double C90237 = C90106 * C90234;
    const double C90733 = C90732 - C90729;
    const double C90755 = C90754 - C90751;
    const double C17007 = C14805 * C826;
    const double C33453 = C31259 * C826;
    const double C22968 = C14805 * C1410;
    const double C64083 = C31259 * C1410;
    const double C335 = C307 * C122;
    const double C582 = C554 * C122;
    const double C2210 = C307 * C810;
    const double C2466 = C554 * C810;
    const double C15058 = C15034 * C810;
    const double C17006 = C14810 * C810;
    const double C31512 = C31488 * C810;
    const double C33452 = C31264 * C810;
    const double C4352 = C4328 * C824;
    const double C4630 = C554 * C824;
    const double C6574 = C4103 * C824;
    const double C15580 = C14810 * C824;
    const double C17344 = C15034 * C824;
    const double C32030 = C31264 * C824;
    const double C33790 = C31488 * C824;
    const double C45055 = C45031 * C824;
    const double C47005 = C89868 * C824;
    const double C2932 = C307 * C1394;
    const double C3188 = C554 * C1394;
    const double C20299 = C20275 * C1394;
    const double C22967 = C14810 * C1394;
    const double C61436 = C61412 * C1394;
    const double C64082 = C31264 * C1394;
    const double C9746 = C307 * C1408;
    const double C10023 = C9999 * C1408;
    const double C12857 = C4103 * C1408;
    const double C21259 = C14810 * C1408;
    const double C23608 = C20275 * C1408;
    const double C62396 = C31264 * C1408;
    const double C64714 = C61412 * C1408;
    const double C80714 = C80690 * C1408;
    const double C83300 = C89868 * C1408;
    const double C18283 = C15034 * C3441;
    const double C18613 = C554 * C3441;
    const double C18923 = C14810 * C3441;
    const double C22309 = C307 * C3441;
    const double C22633 = C20275 * C3441;
    const double C27646 = C4103 * C3441;
    const double C34720 = C31488 * C3441;
    const double C35342 = C31264 * C3441;
    const double C52561 = C89868 * C3441;
    const double C63748 = C61412 * C3441;
    const double C90220 = C90212 - C90182;
    const double C41969 = C41965 * C1984;
    const double C40325 = C40321 * C92078;
    const double C41959 = C40321 * C1983;
    const double C36709 = C36704 + C36705;
    const double C56777 = C38981 + C38980;
    const double C60033 = C38980 + C38981;
    const double C71697 = C41123 + C41122;
    const double C90242 = C90191 + C90239;
    const double C11871 = (C90248 * C90179 + C91211 * C90542) / C89849;
    const double C91361 = C91326 + C91358;
    const double C91658 = C91627 + C91655;
    const double C5220 =
        (3 * (C90377 + C90248 * C90880 + C90877 * ae) +
         C90248 * (2 * C90880 + C90248 * C90904 + C90892 * ae) +
         (2 * C90877 + C90248 * C90892) * ae) /
        C89849;
    const double C6046 =
        (C90377 + C90248 * C90880 + C90877 * ae + C90904 * C90542) / C89849;
    const double C8895 =
        (C90306 * (2 * C90880 + C90248 * C90904 + C90892 * ae)) / C89849;
    const double C11611 =
        (3 * (C90478 + C90306 * C91187 + C91184 * ae) +
         C90306 * (2 * C91187 + C90306 * C91207 + C91198 * ae) +
         (2 * C91184 + C90306 * C91198) * ae) /
        C89849;
    const double C8997 =
        2 * ((-(C90306 * C90392 * ce) / C89892) / C89849 -
             (ae * C90306 * C90277) / C90107 - (C90248 * C91053) / C90107) -
        (ae * C90306 * C90903) / C90107 - (C90306 * C90904 * ce) / C90107 +
        C90248 *
            ((-(ae * C90306 * C90896) / C89892) / C89849 - C91053 / C90107 -
             (C90306 * C90897 * ce) / C90107 +
             C90248 *
                 ((-(C90306 * C90887 * ce) / C89892) / C89849 -
                  (ae * C90306 * C90884) / C90107 -
                  (C90248 * C90306 * C90106 *
                   (C90187 * C90188 + C90420 * bs[7] * std::pow(C90110, 7)) *
                   C90115) /
                      C90107));
    const double C5015 =
        (-3 * (C90248 * C90879 + C90262 + C90877 * ce)) / C89892 +
        C90248 * ((-2 * C90879) / C89892 - (C90248 * C90903) / C89892 -
                  (C90892 * ce) / C89892) -
        ((2 * C90877 + C90248 * C90892) * ce) / C89892;
    const double C5874 =
        -(C90903 * C90542 + C90248 * C90879 + C90262 + C90877 * ce) / C89892;
    const double C8667 =
        C90306 * ((-2 * C90879) / C89892 - (C90248 * C90903) / C89892 -
                  (C90892 * ce) / C89892);
    const double C11200 =
        (-3 * (C90306 * C91186 + C90320 + C91184 * ce)) / C89892 +
        C90306 * ((-2 * C91186) / C89892 - (C90306 * C91206) / C89892 -
                  (C91198 * ce) / C89892) -
        ((2 * C91184 + C90306 * C91198) * ce) / C89892;
    const double C90241 = C90238 / C89892;
    const double C11872 = -(C91216 * C90542 + C90248 * C90178) / C89892;
    const double C91360 = C91357 / C89892;
    const double C91657 = C91654 / C89892;
    const double C90577 = C90576 - C90182;
    const double C90655 = C90654 - C90182;
    const double C41971 = C41967 * C1984;
    const double C41120 = C41112 * C92078;
    const double C90441 = C90440 - C90433;
    const double C91429 = C91428 - C90433;
    const double C90563 = C90562 - C90555;
    const double C91414 = C91413 - C90555;
    const double C41701 =
        (3 * (C90937 + C90306 * C91265 + C91260 * ae) +
         C90306 * (2 * C91265 + C90306 * C91536 + C91524 * ae) +
         (2 * C91260 + C90306 * C91524) * ae) /
        C89849;
    const double C41305 =
        (-3 * (C90306 * C91264 + C90909 + C91260 * ce)) / C89892 +
        C90306 * ((-2 * C91264) / C89892 - (C90306 * C91535) / C89892 -
                  (C91524 * ce) / C89892) -
        ((2 * C91260 + C90306 * C91524) * ce) / C89892;
    const double C7366 = C5594 * C1986;
    const double C36768 = C36216 * C5014;
    const double C37116 = C554 * C5014;
    const double C40404 = C36216 * C5873;
    const double C40912 = C9999 * C5873;
    const double C44274 = C31488 * C5873;
    const double C57825 = C45031 * C5873;
    const double C60778 = C20275 * C5873;
    const double C67654 = C4328 * C5873;
    const double C70618 = C61412 * C5873;
    const double C86326 = C80690 * C5873;
    const double C89398 = C15034 * C5873;
    const double C39056 = C36216 * C8666;
    const double C39495 = C554 * C8666;
    const double C57320 = C20275 * C8666;
    const double C60452 = C45031 * C8666;
    const double C67136 = C61412 * C8666;
    const double C70276 = C4328 * C8666;
    const double C91351 = C91345 - C90433;
    const double C71819 = C36216 * C11199;
    const double C71991 = C307 * C11199;
    const double C91645 = C91641 - C90555;
    const double C44046 = C41319 * C2710;
    const double C91356 = C90248 * C91352;
    const double C90898 = C90888 - C90895;
    const double C7028 = C4101 * C5301;
    const double C47452 = C44804 * C5301;
    const double C12293 = C12185 * C2060;
    const double C12401 = C12185 * C244;
    const double C14198 = C12185 * C801;
    const double C60453 = C44804 * C8996;
    const double C70277 = C4101 * C8996;
    const double C44158 = C92186 * C6044;
    const double C57728 = C44804 * C6044;
    const double C67557 = C4101 * C6044;
    const double C89291 = C92186 * C6044;
    const double C60341 = C44804 * C8894;
    const double C70165 = C4101 * C8894;
    const double C91465 = C91464 - C91463;
    const double C12299 = C12297 * C1986;
    const double C11442 = C11438 * C92099;
    const double C71939 = C71938 * C92099;
    const double C73706 = C73705 * C1986;
    const double C15168 = C15167 * C92099;
    const double C31622 = C31621 * C92099;
    const double C20118 = C3010 + C3020;
    const double C23393 = C3020 + C3010;
    const double C11429 = C9826 + C9834;
    const double C13309 = C9834 + C9826;
    const double C29403 = C29400 * C92099;
    const double C29402 = C29399 * C92099;
    const double C54328 = C54325 * C92099;
    const double C54327 = C54324 * C92099;
    const double C86825 = C86820 * C92099;
    const double C41532 = C41531 * C92099;
    const double C71934 = C11435 + C11443;
    const double C91653 = C90306 * C91650;
    const double C91201 = C91189 - C91195;
    const double C13744 = C9516 * C11770;
    const double C84132 = C80243 * C11770;
    const double C91530 = C91520 - C91527;
    const double C37177 = C37176 * C92110;
    const double C39571 = C39570 * C2710;
    const double C5693 = C5689 * C92110;
    const double C8438 = C8436 * C2710;
    const double C15493 = C2634 + C2642;
    const double C17876 = C2642 + C2634;
    const double C5679 = C4798 + C4806;
    const double C7467 = C4806 + C4798;
    const double C20505 = C20504 * C92110;
    const double C61642 = C61641 * C92110;
    const double C28741 = C28738 * C92110;
    const double C28740 = C28737 * C92110;
    const double C77801 = C77798 * C92110;
    const double C77800 = C77797 * C92110;
    const double C37171 = C5685 + C5694;
    const double C57404 = C57399 * C92110;
    const double C67239 = C67238 * C92110;
    const double C6689 = C92067 * C896;
    const double C15679 = C14805 * C896;
    const double C17119 = C92347 * C896;
    const double C32129 = C31259 * C896;
    const double C33565 = C31258 * C896;
    const double C47118 = C92067 * C896;
    const double C5028 = C92067 * C900;
    const double C6691 = C4097 * C900;
    const double C15687 = C92347 * C900;
    const double C32137 = C31258 * C900;
    const double C37809 = C92062 * C900;
    const double C45671 = C92067 * C900;
    const double C47120 = C92310 * C900;
    const double C12974 = C92067 * C1477;
    const double C21362 = C14805 * C1477;
    const double C23080 = C92347 * C1477;
    const double C53918 = C92067 * C1477;
    const double C62499 = C31259 * C1477;
    const double C64195 = C31258 * C1477;
    const double C11109 = C92067 * C1481;
    const double C12972 = C4097 * C1481;
    const double C21366 = C92347 * C1481;
    const double C42991 = C92062 * C1481;
    const double C51714 = C92067 * C1481;
    const double C62503 = C31258 * C1481;
    const double C83409 = C92310 * C1481;
    const double C8674 = C92067 * C3518;
    const double C19042 = C92347 * C3518;
    const double C27785 = C4097 * C3518;
    const double C35461 = C31258 * C3518;
    const double C42071 = C92062 * C3518;
    const double C49002 = C92067 * C3518;
    const double C52700 = C92310 * C3518;
    const double C36769 = C92062 * C5018;
    const double C8676 = C4097 * C5876;
    const double C39055 = C92062 * C5876;
    const double C49004 = C92310 * C5876;
    const double C13975 = C4097 * C5877;
    const double C40403 = C92062 * C5877;
    const double C51712 = C92310 * C5877;
    const double C40405 = C92062 * C5879;
    const double C39057 = C92062 * C8668;
    const double C41214 = C92062 * C13969;
    const double C90303 = C90297 + C90302;
    const double C90821 = C90819 - C90193;
    const double C5032 = C92067 * C5017;
    const double C37811 = C92062 * C5017;
    const double C45675 = C92067 * C5017;
    const double C11111 = C92067 * C11096;
    const double C72885 = C92062 * C11096;
    const double C81747 = C92067 * C11096;
    const double C91290 = C91277 + C91289;
    const double C336 = C92137 * C318;
    const double C2207 = C92137 * C1028;
    const double C4351 = C4100 * C1028;
    const double C15051 = C92186 * C1028;
    const double C17343 = C92322 * C1028;
    const double C31505 = C92186 * C1028;
    const double C33789 = C31260 * C1028;
    const double C45054 = C92349 * C1028;
    const double C4337 = C4101 * C1032;
    const double C6919 = C4100 * C1032;
    const double C17337 = C92186 * C1032;
    const double C33783 = C92186 * C1032;
    const double C45040 = C44804 * C1032;
    const double C47344 = C92349 * C1032;
    const double C2929 = C92137 * C1612;
    const double C18282 = C92322 * C1612;
    const double C34719 = C31260 * C1612;
    const double C9743 = C92137 * C1616;
    const double C26961 = C92322 * C1616;
    const double C43211 = C31260 * C1616;
    const double C7880 = C4100 * C3666;
    const double C12178 = C92137 * C3666;
    const double C18276 = C92186 * C3666;
    const double C28061 = C92322 * C3666;
    const double C34713 = C92186 * C3666;
    const double C48262 = C92349 * C3666;
    const double C52976 = C31260 * C3666;
    const double C90416 = C90411 + C90415;
    const double C90843 = C90840 - C90841;
    const double C8897 =
        2 * (C90248 * C91049 - (ae * C90306 * C90169) / C90107) -
        (ae * C90306 * C90844) / C90107 +
        C90248 *
            (C91049 - (ae * C90306 * C90248 * C90223) / C90107 +
             C90248 * (C90248 * C90306 *
                           ((-(C90106 * std::pow(C90110, 7) * bs[7] * C90370) /
                             C89892) /
                                C89849 -
                            (C90401 * ce) / C90107) -
                       (ae * C90306 * C90223) / C90107));
    const double C11305 =
        3 * (C90390 + C90414 * C90542) +
        C90306 *
            (2 * C91049 +
             C90306 *
                 (C90414 +
                  ((-(C90106 * std::pow(C90110, 7) * bs[7] * C90370) / C89892) /
                       C89849 -
                   (C90401 * ce) / C90107) *
                      C90542));
    const double C14186 =
        (((-2 * C91128) / C89892 - (C90306 * C91132) / C89892) * ae) / C89849 +
        C90248 *
            (2 * C91049 +
             C90306 *
                 (C90414 +
                  ((-(C90106 * std::pow(C90110, 7) * bs[7] * C90370) / C89892) /
                       C89849 -
                   (C90401 * ce) / C90107) *
                      C90542));
    const double C6921 = C4101 * C5221;
    const double C47346 = C44804 * C5221;
    const double C7882 = C4101 * C6047;
    const double C28063 = C92186 * C6047;
    const double C48264 = C44804 * C6047;
    const double C52978 = C92186 * C6047;
    const double C12182 = C92137 * C6051;
    const double C26959 = C92186 * C6051;
    const double C43209 = C92186 * C6051;
    const double C11320 = C92137 * C11302;
    const double C91315 = C91309 + C91314;
    const double C39216 =
        3 * ((-(ae * C90306 * C90722) / C89892) / C89849 - C91047 / C90107 +
             C90248 * C91456) +
        (C90306 * C91313 * ae) / C89849 +
        C90248 *
            (2 * C91456 - (ae * C90306 * C91305) / C90107 +
             C90248 * ((-(ae * C90306 * C90248 * C90207) / C89892) / C89849 -
                       C91451 / C90107 +
                       C90248 * ((-(C90248 * C90306 * std::pow(C90110, 7) *
                                    bs[7] * C90370) /
                                  C89892) /
                                     C89849 -
                                 (ae * C90306 * C90207) / C90107)));
    const double C6801 = C92067 * C962;
    const double C15775 = C14805 * C962;
    const double C17226 = C92347 * C962;
    const double C32225 = C31259 * C962;
    const double C33672 = C31258 * C962;
    const double C47228 = C92067 * C962;
    const double C5130 = C92067 * C966;
    const double C6803 = C4097 * C966;
    const double C15779 = C92347 * C966;
    const double C32229 = C31258 * C966;
    const double C37886 = C92062 * C966;
    const double C45765 = C92067 * C966;
    const double C47230 = C92310 * C966;
    const double C13084 = C92067 * C1546;
    const double C21450 = C14805 * C1546;
    const double C23187 = C92347 * C1546;
    const double C54056 = C92067 * C1546;
    const double C62587 = C31259 * C1546;
    const double C64302 = C31258 * C1546;
    const double C11213 = C92067 * C1550;
    const double C13086 = C4097 * C1550;
    const double C21458 = C92347 * C1550;
    const double C43103 = C92062 * C1550;
    const double C51828 = C92067 * C1550;
    const double C62595 = C31258 * C1550;
    const double C83511 = C92310 * C1550;
    const double C8786 = C92067 * C3592;
    const double C19149 = C92347 * C3592;
    const double C27921 = C4097 * C3592;
    const double C35568 = C31258 * C3592;
    const double C42176 = C92062 * C3592;
    const double C49110 = C92067 * C3592;
    const double C52836 = C92310 * C3592;
    const double C71820 = C92062 * C11203;
    const double C90361 = C90355 + C90360;
    const double C91096 = C91094 - C90193;
    const double C14078 =
        2 * (C90306 * C91242 - (C90818 * ce) / C90107) -
        ((C90818 + C91243 * C90542) * ce) / C90107 +
        C90306 *
            (C91242 - (C90306 * C91243 * ce) / C90107 +
             C90306 * (C90306 * C90248 *
                           ((-(C90106 * std::pow(C90110, 7) * bs[7] * C90313) /
                             C89892) /
                                C89849 -
                            (ae * C90344) / C90107) -
                       (C91243 * ce) / C90107));
    const double C5132 = C92067 * C5117;
    const double C37889 = C92062 * C5117;
    const double C45767 = C92067 * C5117;
    const double C14083 = C92067 * C5962;
    const double C42179 = C92062 * C5962;
    const double C51832 = C92067 * C5962;
    const double C8790 = C92067 * C5963;
    const double C49114 = C92067 * C5963;
    const double C58460 = C92062 * C5963;
    const double C11217 = C92067 * C11202;
    const double C72956 = C92062 * C11202;
    const double C81833 = C92067 * C11202;
    const double C41306 =
        3 * ((-(C91477 * ce) / C89892) / C89849 - C91240 / C90107 +
             C90306 * C91487) -
        ((2 * C91477 + C90306 * C91484) * ce) / C90107 +
        C90306 * (2 * C91487 - (C91484 * ce) / C90107 +
                  C90306 * ((-(C90306 * C91480 * ce) / C89892) / C89849 -
                            C91478 / C90107 +
                            C90306 * ((-(C90306 * C90248 * std::pow(C90110, 7) *
                                         bs[7] * C90313) /
                                       C89892) /
                                          C89849 -
                                      (C91480 * ce) / C90107)));
    const double C91571 = C91559 + C91570;
    const double C60564 = C44804 * C9096;
    const double C70388 = C4101 * C9096;
    const double C11528 = C92137 * C11518;
    const double C41618 = C31260 * C11518;
    const double C86905 = C92322 * C11518;
    const double C71992 = C92137 * C11519;
    const double C41620 = C92186 * C14419;
    const double C73774 = C92137 * C14419;
    const double C86907 = C92186 * C14419;
    const double C20200 = C20195 + C20199;
    const double C61337 = C61335 + C61336;
    const double C2374 = C92137 * C1143;
    const double C15255 = C92186 * C1143;
    const double C31709 = C92186 * C1143;
    const double C4539 = C4101 * C1149;
    const double C17563 = C92186 * C1149;
    const double C34009 = C92186 * C1149;
    const double C45242 = C44804 * C1149;
    const double C9916 = C92137 * C1732;
    const double C3103 = C92137 * C1733;
    const double C18506 = C92186 * C3807;
    const double C22517 = C92137 * C3807;
    const double C34943 = C92186 * C3807;
    const double C5380 =
        3 * ((-(ae * C90918) / C89892) / C89849 - C90906 / C90107 +
             C90248 * C90928) +
        (((-2 * C90918) / C89892 - (C90248 * C90925) / C89892) * ae) / C89849 +
        C90248 * (2 * C90928 - (ae * C90925) / C90107 +
                  C90248 * ((-(ae * C90248 * C90921) / C89892) / C89849 -
                            C90919 / C90107 +
                            C90248 * ((-(C90248 * C90106 * std::pow(C90110, 7) *
                                         bs[7] * C90447) /
                                       C89892) /
                                          C89849 -
                                      (ae * C90921) / C90107)));
    const double C9097 =
        2 * (C90248 * C91066 - (ae * (C90306 * C90335 + C90159)) / C90107) -
        (ae * (C90306 * C90925 + C90892 * ce)) / C90107 +
        C90248 * (C91066 - (ae * (C90306 * C90248 * C90921 + C90891)) / C90107 +
                  C90248 * (C90248 * ((-(C90306 * C90106 * std::pow(C90110, 7) *
                                         bs[7] * C90447) /
                                       C89892) /
                                          C89849 -
                                      (C90887 * ce) / C90107) -
                            (ae * (C90306 * C90921 + C90208)) / C90107));
    const double C11520 =
        2 * ((-(C90306 * C90906) / C89892) / C89849 - (C90377 * ce) / C90107) -
        ((C90377 + C90392 * C90542) * ce) / C90107 +
        C90306 * ((-(C90306 * C90392 * ce) / C89892) / C89849 -
                  C90906 / C90107 + C90306 * C91066);
    const double C11521 =
        3 * ((-(C91113 * ce) / C89892) / C89849 - C90906 / C90107 +
             C90306 * C91066) -
        ((2 * C91113 + C90306 * C91115) * ce) / C90107 +
        C90306 * (2 * C91066 - (C91115 * ce) / C90107 +
                  C90306 * ((-(C90306 * C90887 * ce) / C89892) / C89849 -
                            C90919 / C90107 +
                            C90306 * ((-(C90306 * C90106 * std::pow(C90110, 7) *
                                         bs[7] * C90447) /
                                       C89892) /
                                          C89849 -
                                      (C90887 * ce) / C90107)));
    const double C14420 =
        (((-2 * C91186) / C89892 - (C90306 * C91206) / C89892 -
          (C91198 * ce) / C89892) *
         ae) /
            C89849 +
        C90248 * (2 * C91066 - (C91115 * ce) / C90107 +
                  C90306 * ((-(C90306 * C90887 * ce) / C89892) / C89849 -
                            C90919 / C90107 +
                            C90306 * ((-(C90306 * C90106 * std::pow(C90110, 7) *
                                         bs[7] * C90447) /
                                       C89892) /
                                          C89849 -
                                      (C90887 * ce) / C90107)));
    const double C91384 = C91380 + C91383;
    const double C91443 = C91441 + C91442;
    const double C91470 = C91467 - C91469;
    const double C583 = C92148 * C565;
    const double C2463 = C92148 * C1210;
    const double C22632 = C92323 * C1210;
    const double C63747 = C60959 * C1210;
    const double C4627 = C92148 * C1214;
    const double C26301 = C92323 * C1214;
    const double C68673 = C60959 * C1214;
    const double C3185 = C92148 * C1794;
    const double C10022 = C9515 * C1794;
    const double C20292 = C92212 * C1794;
    const double C23607 = C92323 * C1794;
    const double C61429 = C92212 * C1794;
    const double C64713 = C60959 * C1794;
    const double C80713 = C92351 * C1794;
    const double C10008 = C9516 * C1798;
    const double C13527 = C9515 * C1798;
    const double C23601 = C92212 * C1798;
    const double C64707 = C92212 * C1798;
    const double C80699 = C80243 * C1798;
    const double C83917 = C92351 * C1798;
    const double C8208 = C92148 * C3880;
    const double C12518 = C9515 * C3880;
    const double C22626 = C92212 * C3880;
    const double C29673 = C92323 * C3880;
    const double C63741 = C92212 * C3880;
    const double C78719 = C60959 * C3880;
    const double C82975 = C92351 * C3880;
    const double C90517 = C90512 + C90516;
    const double C91131 = C91129 - C90841;
    const double C14528 =
        2 * (C90306 * C91253 - (ae * C90839) / C90107) -
        (ae * (C91254 * C90542 + C90839)) / C90107 +
        C90306 *
            (C91253 - (ae * C90306 * C91254) / C90107 +
             C90306 * (C90306 * C90248 *
                           ((-(C90106 * std::pow(C90110, 7) * bs[7] * C90471) /
                             C89892) /
                                C89849 -
                            (C90502 * ce) / C90107) -
                       (ae * C91254) / C90107));
    const double C5477 = C92148 * C5459;
    const double C8212 = C92148 * C6293;
    const double C26299 = C92212 * C6293;
    const double C68671 = C92212 * C6293;
    const double C12520 = C9516 * C6296;
    const double C29675 = C92212 * C6296;
    const double C78721 = C92212 * C6296;
    const double C82977 = C80243 * C6296;
    const double C13529 = C9516 * C11612;
    const double C83919 = C80243 * C11612;
    const double C41702 =
        3 * ((-(ae * C91496) / C89892) / C89849 - C91251 / C90107 +
             C90306 * C91505) +
        (((-2 * C91496) / C89892 - (C90306 * C91502) / C89892) * ae) / C89849 +
        C90306 * (2 * C91505 - (ae * C91502) / C90107 +
                  C90306 * ((-(ae * C90306 * C91498) / C89892) / C89849 -
                            C91497 / C90107 +
                            C90306 * ((-(C90306 * C90248 * std::pow(C90110, 7) *
                                         bs[7] * C90471) /
                                       C89892) /
                                          C89849 -
                                      (ae * C91498) / C90107)));
    const double C91596 = C91590 + C91595;
    const double C37117 = C92148 * C5580;
    const double C9324 = C92148 * C6374;
    const double C26431 = C92212 * C6374;
    const double C40911 = C9515 * C6374;
    const double C60777 = C92323 * C6374;
    const double C67133 = C92212 * C6374;
    const double C70617 = C60959 * C6374;
    const double C86325 = C92351 * C6374;
    const double C31045 = C92212 * C6375;
    const double C40903 = C9516 * C6375;
    const double C44613 = C9515 * C6375;
    const double C70615 = C92212 * C6375;
    const double C86317 = C80243 * C6375;
    const double C89725 = C92351 * C6375;
    const double C40913 = C9516 * C6377;
    const double C60779 = C92212 * C6377;
    const double C70619 = C92212 * C6377;
    const double C86327 = C80243 * C6377;
    const double C39496 = C92148 * C9318;
    const double C57321 = C92212 * C9318;
    const double C67137 = C92212 * C9318;
    const double C44615 = C9516 * C14627;
    const double C89727 = C80243 * C14627;
    const double C4716 = C92148 * C1272;
    const double C2555 = C92148 * C1273;
    const double C3271 = C92148 * C1851;
    const double C20399 = C92212 * C1851;
    const double C61536 = C92212 * C1851;
    const double C10118 = C9516 * C1857;
    const double C23723 = C92212 * C1857;
    const double C64829 = C92212 * C1857;
    const double C80809 = C80243 * C1857;
    const double C18717 = C92148 * C3951;
    const double C22746 = C92212 * C3951;
    const double C63861 = C92212 * C3951;
    const double C5581 =
        3 * ((-(C90946 * ce) / C89892) / C89849 - C90935 / C90107 +
             C90248 * C90956) -
        ((2 * C90946 + C90248 * C90953) * ce) / C90107 +
        C90248 * (2 * C90956 - (C90953 * ce) / C90107 +
                  C90248 * ((-(C90248 * C90949 * ce) / C89892) / C89849 -
                            C90947 / C90107 +
                            C90248 * ((-(C90248 * C90106 * std::pow(C90110, 7) *
                                         bs[7] * C90523) /
                                       C89892) /
                                          C89849 -
                                      (C90949 * ce) / C90107)));
    const double C6373 =
        C90306 * ((-(C90946 * ce) / C89892) / C89849 - C90935 / C90107 +
                  C90248 * C90956) -
        (ae * (C90248 * C90879 + C90262 + C90877 * ce)) / C90107;
    const double C6376 = (-(C90248 * C90935) / C89892) / C89849 -
                         (C90478 * ce) / C90107 -
                         (ae * C90306 * C90879) / C90107 +
                         C90306 * (C90306 * C90956 - (ae * C90879) / C90107);
    const double C6378 =
        (-(C90946 * ce) / C89892) / C89849 - C90935 / C90107 + C90248 * C90956 -
        (ae * C90306 * C90903) / C90107 +
        C90306 * (C90306 * ((-(C90248 * C90949 * ce) / C89892) / C89849 -
                            C90947 / C90107 +
                            C90248 * ((-(C90248 * C90106 * std::pow(C90110, 7) *
                                         bs[7] * C90523) /
                                       C89892) /
                                          C89849 -
                                      (C90949 * ce) / C90107)) -
                  (ae * C90903) / C90107);
    const double C9319 =
        (((-2 * C90879) / C89892 - (C90248 * C90903) / C89892 -
          (C90892 * ce) / C89892) *
         ae) /
            C89849 +
        C90306 * (2 * C90956 - (C90953 * ce) / C90107 +
                  C90248 * ((-(C90248 * C90949 * ce) / C89892) / C89849 -
                            C90947 / C90107 +
                            C90248 * ((-(C90248 * C90106 * std::pow(C90110, 7) *
                                         bs[7] * C90523) /
                                       C89892) /
                                          C89849 -
                                      (C90949 * ce) / C90107)));
    const double C14628 =
        2 * (C90306 * C90956 - (ae * C90879) / C90107) -
        (ae * (C90896 * C90542 + C90879)) / C90107 +
        C90306 * (C90956 - (ae * C90306 * C90896) / C90107 +
                  C90306 * (C90306 * ((-(C90248 * C90106 * std::pow(C90110, 7) *
                                         bs[7] * C90523) /
                                       C89892) /
                                          C89849 -
                                      (C90949 * ce) / C90107) -
                            (ae * C90896) / C90107));
    const double C11693 =
        3 * ((-(ae * C91145) / C89892) / C89849 - C90935 / C90107 +
             C90306 * C91152) +
        (((-2 * C91145) / C89892 - (C90306 * C91149) / C89892) * ae) / C89849 +
        C90306 * (2 * C91152 - (ae * C91149) / C90107 +
                  C90306 * ((-(ae * C90306 * C90884) / C89892) / C89849 -
                            C90947 / C90107 +
                            C90306 * ((-(C90306 * C90106 * std::pow(C90110, 7) *
                                         bs[7] * C90523) /
                                       C89892) /
                                          C89849 -
                                      (ae * C90884) / C90107)));
    const double C91408 = C91405 + C91407;
    const double C91511 = C91508 - C91509;
    const double C91615 = C91609 + C91614;
    const double C89875 = C89874 - C89864;
    const double C4933 = C4920 + C4921;
    const double C4931 = C4916 + C4917;
    const double C4928 = C4910 + C4911;
    const double C4926 = C4906 + C4907;
    const double C4924 = C4902 + C4903;
    const double C4922 = C4898 + C4899;
    const double C5037 = C5029 + C5030;
    const double C5035 = C5025 + C5026;
    const double C5034 = C5023 + C5024;
    const double C5140 = C5133 + C5134;
    const double C5137 = C5127 + C5128;
    const double C5135 = C5122 + C5123;
    const double C6585 = C6576 + C6577;
    const double C6583 = C6572 + C6573;
    const double C6581 = C6568 + C6569;
    const double C6579 = C6564 + C6565;
    const double C6694 = C6686 + C6687;
    const double C6806 = C6798 + C6799;
    const double C8568 = C8559 + C8560;
    const double C8566 = C8555 + C8556;
    const double C8564 = C8551 + C8552;
    const double C8562 = C8547 + C8548;
    const double C8679 = C8671 + C8672;
    const double C8796 = C8791 + C8792;
    const double C8794 = C8787 + C8788;
    const double C11012 = C10999 + C11000;
    const double C11010 = C10995 + C10996;
    const double C11007 = C10989 + C10990;
    const double C11005 = C10985 + C10986;
    const double C11003 = C10981 + C10982;
    const double C11001 = C10977 + C10978;
    const double C11119 = C11112 + C11113;
    const double C11116 = C11106 + C11107;
    const double C11114 = C11101 + C11102;
    const double C11222 = C11214 + C11215;
    const double C11220 = C11210 + C11211;
    const double C11219 = C11208 + C11209;
    const double C12868 = C12859 + C12860;
    const double C12866 = C12855 + C12856;
    const double C12864 = C12851 + C12852;
    const double C12862 = C12847 + C12848;
    const double C12980 = C12975 + C12976;
    const double C13089 = C13081 + C13082;
    const double C13868 = C13862 + C13863;
    const double C13866 = C13858 + C13859;
    const double C14084 = C14080 + C14081;
    const double C27653 = C27648 + C27649;
    const double C27651 = C27644 + C27645;
    const double C71764 = C71760 * C92137;
    const double C41230 = C41229 * C31260;
    const double C71759 = C41229 * C92137;
    const double C86577 = C41229 * C92322;
    const double C90039 = C90038 - C90023;
    const double C15267 = C15266 * C92148;
    const double C31720 = C31703 + C31719;
    const double C90085 = C90084 - C90069;
    const double C57242 = C57241 * C92062;
    const double C61547 = C61530 + C61546;
    const double C67050 = C67048 + C67049;
    const double C86744 = C86738 + C86739;
    const double C41436 = C41434 + C41435;
    const double C41125 = C41124 * C31260;
    const double C71696 = C41124 * C92137;
    const double C86500 = C41124 * C92322;
    const double C424 = C422 * C92148;
    const double C5696 = C5695 * C4097;
    const double C37170 = C5695 * C92062;
    const double C46226 = C5695 * C92310;
    const double C17012 = C17000 + C17001;
    const double C33458 = C33446 + C33447;
    const double C6582 = C6570 + C6571;
    const double C15601 = C15586 + C15587;
    const double C32051 = C32036 + C32037;
    const double C47013 = C47001 + C47002;
    const double C22973 = C22961 + C22962;
    const double C64088 = C64076 + C64077;
    const double C12865 = C12853 + C12854;
    const double C21280 = C21265 + C21266;
    const double C62417 = C62402 + C62403;
    const double C83304 = C83296 + C83297;
    const double C18938 = C18929 + C18930;
    const double C27650 = C27642 + C27643;
    const double C35357 = C35348 + C35349;
    const double C52565 = C52557 + C52558;
    const double C17015 = C17006 + C17007;
    const double C33461 = C33452 + C33453;
    const double C6584 = C6574 + C6575;
    const double C15598 = C15580 + C15581;
    const double C32048 = C32030 + C32031;
    const double C47015 = C47005 + C47006;
    const double C22976 = C22967 + C22968;
    const double C64091 = C64082 + C64083;
    const double C12867 = C12857 + C12858;
    const double C21277 = C21259 + C21260;
    const double C62414 = C62396 + C62397;
    const double C83306 = C83300 + C83301;
    const double C18935 = C18923 + C18924;
    const double C27652 = C27646 + C27647;
    const double C35354 = C35342 + C35343;
    const double C52567 = C52561 + C52562;
    const double C90227 = C90220 - C90193;
    const double C41098 = C40324 + C40325;
    const double C43821 = C40325 + C40324;
    const double C71702 = C71697 * C92137;
    const double C90244 = C90242 + C90219;
    const double C91363 = C91361 + C91344;
    const double C91660 = C91658 + C91629;
    const double C90243 = C90197 - C90241;
    const double C91362 = C91332 - C91360;
    const double C91659 = C91634 - C91657;
    const double C833 =
        2 * ((-((C90134 + C90161 * C90420) * ce) / C89892) / C89849 -
             (ae * (C90158 * C90420 + C90133)) / C90107 + C90106 * C90577) -
        (ae * (C90235 * C90420 + C90178)) / C90107 -
        ((C90179 + C90236 * C90420) * ce) / C90107 +
        C90106 *
            (C90577 - (ae * (C90223 * C90420 + C90169)) / C90107 -
             ((C90170 + C90226 * C90420) * ce) / C90107 +
             C90106 * ((-((C90161 + C90210 * C90420) * ce) / C89892) / C89849 -
                       (ae * (C90207 * C90420 + C90158)) / C90107 +
                       C90106 * ((-((C90187 * C90188 +
                                     C90114 * bs[7] * std::pow(C90110, 7)) *
                                    C90115 * C90420) /
                                  C89892) /
                                     C89849 -
                                 C90222 / C90107)));
    const double C4893 =
        (((-2 * C90248 * C90133) / C89892 -
          (C90248 * (C90158 * C90420 + C90133)) / C89892) *
         ae) /
            C89849 -
        ((2 * C90248 * C90134 + C90248 * (C90134 + C90161 * C90420)) * ce) /
            C90107 +
        C90106 * ((-2 * C90565) / C90107 + C90248 * C90577);
    const double C4895 =
        3 * ((-(C90168 * C90420) / C89892) / C89849 - C90138 / C90107) +
        C90248 * ((-2 * C90565) / C90107 + C90248 * C90577);
    const double C4896 =
        (((-3 * (C90158 * C90420 + C90133)) / C89892 +
          C90248 * ((-2 * C90722) / C89892 -
                    (C90248 * (C90207 * C90420 + C90158)) / C89892)) *
         ae) /
            C89849 -
        ((3 * (C90134 + C90161 * C90420) +
          C90248 * (2 * C90721 + C90248 * (C90161 + C90210 * C90420))) *
         ce) /
            C90107 +
        C90106 *
            (3 * C90577 +
             C90248 * ((-2 * C90723) / C90107 +
                       C90248 * ((-((C90187 * C90188 +
                                     C90114 * bs[7] * std::pow(C90110, 7)) *
                                    C90115 * C90420) /
                                  C89892) /
                                     C89849 -
                                 C90222 / C90107)));
    const double C5789 = (-(C90306 * C90813 * ce) / C89892) / C89849 -
                         (ae * C90306 * C90834) / C90107 +
                         C90106 * C90306 * C90577;
    const double C5793 = (-(C90168 * C90420) / C89892) / C89849 -
                         C90138 / C90107 + C90577 * C90542;
    const double C5794 =
        (-((C90813 + (C90161 + C90210 * C90420) * C90542) * ce) / C89892) /
            C89849 -
        (ae * ((C90207 * C90420 + C90158) * C90542 + C90834)) / C90107 +
        C90106 * (C90577 +
                  ((-((C90187 * C90188 + C90114 * bs[7] * std::pow(C90110, 7)) *
                      C90115 * C90420) /
                    C89892) /
                       C89849 -
                   C90222 / C90107) *
                      C90542);
    const double C6560 =
        (-2 * C90565) / C90107 + C90248 * C90577 +
        (((-2 * C90839) / C89892 - (C90248 * C90844) / C89892) * ae) / C89849 -
        ((2 * C90818 + C90248 * C90822) * ce) / C90107 +
        C90106 *
            ((((-2 * C90722) / C89892 -
               (C90248 * (C90207 * C90420 + C90158)) / C89892) *
              ae) /
                 C89849 -
             ((2 * C90721 + C90248 * (C90161 + C90210 * C90420)) * ce) /
                 C90107 +
             C90106 * ((-2 * C90723) / C90107 +
                       C90248 * ((-((C90187 * C90188 +
                                     C90114 * bs[7] * std::pow(C90110, 7)) *
                                    C90115 * C90420) /
                                  C89892) /
                                     C89849 -
                                 C90222 / C90107)));
    const double C7569 =
        C90306 * C90577 - (ae * C90306 * C90844) / C90107 -
        (C90306 * C90822 * ce) / C90107 +
        C90106 *
            ((-(C90306 * (C90161 + C90210 * C90420) * ce) / C89892) / C89849 -
             (ae * C90306 * (C90207 * C90420 + C90158)) / C90107 +
             C90106 * C90306 *
                 ((-((C90187 * C90188 + C90114 * bs[7] * std::pow(C90110, 7)) *
                     C90115 * C90420) /
                   C89892) /
                      C89849 -
                  C90222 / C90107));
    const double C8542 = C90306 * ((-2 * C90565) / C90107 + C90248 * C90577);
    const double C36674 =
        4 * ((-2 * C90565) / C90107 + C90248 * C90577) +
        C90248 *
            (3 * C90577 +
             C90248 * ((-2 * C90723) / C90107 +
                       C90248 * ((-((C90187 * C90188 +
                                     C90114 * bs[7] * std::pow(C90110, 7)) *
                                    C90115 * C90420) /
                                  C89892) /
                                     C89849 -
                                 C90222 / C90107)));
    const double C37230 =
        (-2 * C90565) / C90107 + C90248 * C90577 +
        ((-2 * C90723) / C90107 +
         C90248 * ((-((C90187 * C90188 + C90114 * bs[7] * std::pow(C90110, 7)) *
                      C90115 * C90420) /
                    C89892) /
                       C89849 -
                   C90222 / C90107)) *
            C90542;
    const double C38958 =
        C90306 *
        (3 * C90577 +
         C90248 *
             ((-2 * C90723) / C90107 +
              C90248 *
                  ((-((C90187 * C90188 + C90114 * bs[7] * std::pow(C90110, 7)) *
                      C90115 * C90420) /
                    C89892) /
                       C89849 -
                   C90222 / C90107)));
    const double C43818 =
        2 * C90306 * C90577 +
        C90306 * (C90577 +
                  ((-((C90187 * C90188 + C90114 * bs[7] * std::pow(C90110, 7)) *
                      C90115 * C90420) /
                    C89892) /
                       C89849 -
                   C90222 / C90107) *
                      C90542);
    const double C1417 =
        2 * ((-((C90134 + C90161 * C90542) * ce) / C89892) / C89849 -
             (ae * (C90158 * C90542 + C90133)) / C90107 + C90106 * C90655) -
        (ae * (C90235 * C90542 + C90178)) / C90107 -
        ((C90179 + C90236 * C90542) * ce) / C90107 +
        C90106 *
            (C90655 - (ae * (C90223 * C90542 + C90169)) / C90107 -
             ((C90170 + C90226 * C90542) * ce) / C90107 +
             C90106 * ((-((C90161 + C90210 * C90542) * ce) / C89892) / C89849 -
                       (ae * (C90207 * C90542 + C90158)) / C90107 +
                       C90106 * ((-((C90187 * C90188 +
                                     C90114 * bs[7] * std::pow(C90110, 7)) *
                                    C90115 * C90542) /
                                  C89892) /
                                     C89849 -
                                 C90222 / C90107)));
    const double C10972 =
        (((-2 * C90306 * C90133) / C89892 -
          (C90306 * (C90158 * C90542 + C90133)) / C89892) *
         ae) /
            C89849 -
        ((2 * C90306 * C90134 + C90306 * (C90134 + C90161 * C90542)) * ce) /
            C90107 +
        C90106 * ((-2 * C90643) / C90107 + C90306 * C90655);
    const double C10974 =
        3 * ((-(C90168 * C90542) / C89892) / C89849 - C90138 / C90107) +
        C90306 * ((-2 * C90643) / C90107 + C90306 * C90655);
    const double C10975 =
        (((-3 * (C90158 * C90542 + C90133)) / C89892 +
          C90306 * ((-2 * C90744) / C89892 -
                    (C90306 * (C90207 * C90542 + C90158)) / C89892)) *
         ae) /
            C89849 -
        ((3 * (C90134 + C90161 * C90542) +
          C90306 * (2 * C90743 + C90306 * (C90161 + C90210 * C90542))) *
         ce) /
            C90107 +
        C90106 *
            (3 * C90655 +
             C90306 * ((-2 * C90745) / C90107 +
                       C90306 * ((-((C90187 * C90188 +
                                     C90114 * bs[7] * std::pow(C90110, 7)) *
                                    C90115 * C90542) /
                                  C89892) /
                                     C89849 -
                                 C90222 / C90107)));
    const double C12843 =
        (-2 * C90643) / C90107 + C90306 * C90655 +
        (((-2 * C91128) / C89892 - (C90306 * C91132) / C89892) * ae) / C89849 -
        ((2 * C91093 + C90306 * C91097) * ce) / C90107 +
        C90106 *
            ((((-2 * C90744) / C89892 -
               (C90306 * (C90207 * C90542 + C90158)) / C89892) *
              ae) /
                 C89849 -
             ((2 * C90743 + C90306 * (C90161 + C90210 * C90542)) * ce) /
                 C90107 +
             C90106 * ((-2 * C90745) / C90107 +
                       C90306 * ((-((C90187 * C90188 +
                                     C90114 * bs[7] * std::pow(C90110, 7)) *
                                    C90115 * C90542) /
                                  C89892) /
                                     C89849 -
                                 C90222 / C90107)));
    const double C71694 =
        4 * ((-2 * C90643) / C90107 + C90306 * C90655) +
        C90306 *
            (3 * C90655 +
             C90306 * ((-2 * C90745) / C90107 +
                       C90306 * ((-((C90187 * C90188 +
                                     C90114 * bs[7] * std::pow(C90110, 7)) *
                                    C90115 * C90542) /
                                  C89892) /
                                     C89849 -
                                 C90222 / C90107)));
    const double C399 =
        4 * ((-2 * C90106 * C90430) / C90107 + C90106 * C90441) +
        C90106 *
            (3 * C90441 +
             C90106 * ((-2 * C90106 * C90436) / C90107 +
                       C90106 * ((-((C90187 * C90188 +
                                     C90420 * bs[7] * std::pow(C90110, 7)) *
                                    C90115 * C90114) /
                                  C89892) /
                                     C89849 -
                                 C90436 / C90107)));
    const double C1090 = (-(C90430 * C90114) / C89892) / C89849 -
                         C90425 / C90107 -
                         (ae * (C90248 * C90272 + C90160 * ce)) / C90107 -
                         ((C90248 * C90387 + C90160 * ae) * ce) / C90107 +
                         C90248 * ((-(C90387 * ce) / C89892) / C89849 -
                                   (ae * C90272) / C90107 + C90248 * C90441);
    const double C1091 =
        (((-2 * C90262) / C89892 - (C90106 * C90272) / C89892) * ae) / C89849 -
        ((2 * C90377 + C90106 * C90387) * ce) / C90107 +
        C90248 * ((-2 * C90106 * C90430) / C90107 + C90106 * C90441);
    const double C1092 =
        (-2 * C90106 * C90430) / C90107 + C90106 * C90441 +
        ((C90248 * C90301 - (C90225 * ce) / C89892) * ae) / C89849 -
        ((C90248 * C90413 + C90225 * ae) * ce) / C90107 +
        C90248 *
            ((C90301 * ae) / C89849 - (C90413 * ce) / C90107 +
             C90248 * ((-2 * C90106 * C90436) / C90107 +
                       C90106 * ((-((C90187 * C90188 +
                                     C90420 * bs[7] * std::pow(C90110, 7)) *
                                    C90115 * C90114) /
                                  C89892) /
                                     C89849 -
                                 C90436 / C90107)));
    const double C1669 =
        C90306 * ((-2 * C90106 * C90430) / C90107 + C90106 * C90441);
    const double C1675 = (-(C90430 * C90114) / C89892) / C89849 -
                         C90425 / C90107 + C90441 * C90542;
    const double C1676 =
        (-2 * C90106 * C90430) / C90107 + C90106 * C90441 +
        ((-2 * C90106 * C90436) / C90107 +
         C90106 * ((-((C90187 * C90188 + C90420 * bs[7] * std::pow(C90110, 7)) *
                      C90115 * C90114) /
                    C89892) /
                       C89849 -
                   C90436 / C90107)) *
            C90542;
    const double C2283 =
        (((-3 * C90272) / C89892 + C90106 * C90301) * ae) / C89849 -
        ((3 * C90387 + C90106 * C90413) * ce) / C90107 +
        C90248 *
            (3 * C90441 +
             C90106 * ((-2 * C90106 * C90436) / C90107 +
                       C90106 * ((-((C90187 * C90188 +
                                     C90420 * bs[7] * std::pow(C90110, 7)) *
                                    C90115 * C90114) /
                                  C89892) /
                                     C89849 -
                                 C90436 / C90107)));
    const double C3005 =
        C90306 *
        (3 * C90441 +
         C90106 *
             ((-2 * C90106 * C90436) / C90107 +
              C90106 *
                  ((-((C90187 * C90188 + C90420 * bs[7] * std::pow(C90110, 7)) *
                      C90115 * C90114) /
                    C89892) /
                       C89849 -
                   C90436 / C90107)));
    const double C3737 = (-(C90306 * C90387 * ce) / C89892) / C89849 -
                         (ae * C90306 * C90272) / C90107 +
                         C90248 * C90306 * C90441;
    const double C7025 =
        2 * ((-(C90387 * ce) / C89892) / C89849 - (ae * C90272) / C90107 +
             C90248 * C90441) -
        (ae * (C90248 * C91025 + C90272 + C91023 * ce)) / C90107 -
        ((C90387 + C90248 * C91026 + C91023 * ae) * ce) / C90107 +
        C90248 *
            (C90441 - (ae * C91025) / C90107 - (C91026 * ce) / C90107 +
             C90248 *
                 ((-(C90407 * ce) / C89892) / C89849 - (ae * C90293) / C90107 +
                  C90248 * ((-((C90187 * C90188 +
                                C90420 * bs[7] * std::pow(C90110, 7)) *
                               C90115 * C90114) /
                             C89892) /
                                C89849 -
                            C90436 / C90107)));
    const double C7986 =
        C90306 * C90441 - (ae * C90306 * C91025) / C90107 -
        (C90306 * C91026 * ce) / C90107 +
        C90248 *
            ((-(C90306 * C90407 * ce) / C89892) / C89849 -
             (ae * C90306 * C90293) / C90107 +
             C90248 * C90306 *
                 ((-((C90187 * C90188 + C90420 * bs[7] * std::pow(C90110, 7)) *
                     C90115 * C90114) /
                   C89892) /
                      C89849 -
                  C90436 / C90107));
    const double C12284 =
        (-((C90387 + C90407 * C90542) * ce) / C89892) / C89849 -
        (ae * (C90293 * C90542 + C90272)) / C90107 +
        C90248 * (C90441 +
                  ((-((C90187 * C90188 + C90420 * bs[7] * std::pow(C90110, 7)) *
                      C90115 * C90114) /
                    C89892) /
                       C89849 -
                   C90436 / C90107) *
                      C90542);
    const double C13306 =
        2 * C90306 * C90441 +
        C90306 * (C90441 +
                  ((-((C90187 * C90188 + C90420 * bs[7] * std::pow(C90110, 7)) *
                      C90115 * C90114) /
                    C89892) /
                       C89849 -
                   C90436 / C90107) *
                      C90542);
    const double C37437 =
        2 * ((-(C91110 * ce) / C89892) / C89849 - (ae * C91140) / C90107 +
             C90248 * C91429) -
        (ae * (C91353 * C90542 + C90872)) / C90107 -
        ((C90873 + C91354 * C90542) * ce) / C90107 +
        C90248 *
            (C91429 - (ae * (C91333 * C90542 + C90860)) / C90107 -
             ((C90863 + C91336 * C90542) * ce) / C90107 +
             C90248 * ((-((C90383 + C90401 * C90542) * ce) / C89892) / C89849 -
                       (ae * (C90286 * C90542 + C90268)) / C90107 +
                       C90248 * ((-((C90187 * C90188 +
                                     C90420 * bs[7] * std::pow(C90110, 7)) *
                                    C90115 * C90542) /
                                  C89892) /
                                     C89849 -
                                 C90436 / C90107)));
    const double C41510 =
        (((-3 * C91140) / C89892 +
          C90306 * ((-2 * C91458) / C89892 -
                    (C90306 * (C90286 * C90542 + C90268)) / C89892)) *
         ae) /
            C89849 -
        ((3 * C91110 +
          C90306 * (2 * C91431 + C90306 * (C90383 + C90401 * C90542))) *
         ce) /
            C90107 +
        C90248 *
            (3 * C91429 +
             C90306 * ((-2 * C91459) / C90107 +
                       C90306 * ((-((C90187 * C90188 +
                                     C90420 * bs[7] * std::pow(C90110, 7)) *
                                    C90115 * C90542) /
                                  C89892) /
                                     C89849 -
                                 C90436 / C90107)));
    const double C44268 =
        (-2 * C91051) / C90107 + C90306 * C91429 +
        (((-2 * C91507) / C89892 - (C90306 * C91512) / C89892) * ae) / C89849 -
        ((2 * C90306 * C90863 + C90306 * (C90863 + C91336 * C90542)) * ce) /
            C90107 +
        C90248 *
            ((((-2 * C91458) / C89892 -
               (C90306 * (C90286 * C90542 + C90268)) / C89892) *
              ae) /
                 C89849 -
             ((2 * C91431 + C90306 * C91494) * ce) / C90107 +
             C90248 * ((-2 * C91459) / C90107 +
                       C90306 * ((-((C90187 * C90188 +
                                     C90420 * bs[7] * std::pow(C90110, 7)) *
                                    C90115 * C90542) /
                                  C89892) /
                                     C89849 -
                                 C90436 / C90107)));
    const double C71932 =
        4 * ((-2 * C91051) / C90107 + C90306 * C91429) +
        C90306 *
            (3 * C91429 +
             C90306 * ((-2 * C91459) / C90107 +
                       C90306 * ((-((C90187 * C90188 +
                                     C90420 * bs[7] * std::pow(C90110, 7)) *
                                    C90115 * C90542) /
                                  C89892) /
                                     C89849 -
                                 C90436 / C90107)));
    const double C724 =
        4 * ((-2 * C90106 * C90552) / C90107 + C90106 * C90563) +
        C90106 *
            (3 * C90563 +
             C90106 * ((-2 * C90106 * C90558) / C90107 +
                       C90106 * ((-((C90187 * C90188 +
                                     C90542 * bs[7] * std::pow(C90110, 7)) *
                                    C90115 * C90114) /
                                  C89892) /
                                     C89849 -
                                 C90558 / C90107)));
    const double C1325 =
        C90248 * ((-2 * C90106 * C90552) / C90107 + C90106 * C90563);
    const double C1331 = (-(C90552 * C90114) / C89892) / C89849 -
                         C90547 / C90107 + C90563 * C90420;
    const double C1332 =
        (-2 * C90106 * C90552) / C90107 + C90106 * C90563 +
        ((-2 * C90106 * C90558) / C90107 +
         C90106 * ((-((C90187 * C90188 + C90542 * bs[7] * std::pow(C90110, 7)) *
                      C90115 * C90114) /
                    C89892) /
                       C89849 -
                   C90558 / C90107)) *
            C90420;
    const double C1914 = (-(C90552 * C90114) / C89892) / C89849 -
                         C90547 / C90107 -
                         (ae * (C90306 * C90330 + C90160 * ce)) / C90107 -
                         ((C90306 * C90488 + C90160 * ae) * ce) / C90107 +
                         C90306 * ((-(C90488 * ce) / C89892) / C89849 -
                                   (ae * C90330) / C90107 + C90306 * C90563);
    const double C1915 =
        (((-2 * C90320) / C89892 - (C90106 * C90330) / C89892) * ae) / C89849 -
        ((2 * C90478 + C90106 * C90488) * ce) / C90107 +
        C90306 * ((-2 * C90106 * C90552) / C90107 + C90106 * C90563);
    const double C1916 =
        (-2 * C90106 * C90552) / C90107 + C90106 * C90563 +
        ((C90306 * C90359 - (C90225 * ce) / C89892) * ae) / C89849 -
        ((C90306 * C90514 + C90225 * ae) * ce) / C90107 +
        C90306 *
            ((C90359 * ae) / C89849 - (C90514 * ce) / C90107 +
             C90306 * ((-2 * C90106 * C90558) / C90107 +
                       C90106 * ((-((C90187 * C90188 +
                                     C90542 * bs[7] * std::pow(C90110, 7)) *
                                    C90115 * C90114) /
                                  C89892) /
                                     C89849 -
                                 C90558 / C90107)));
    const double C2627 =
        C90248 *
        (3 * C90563 +
         C90106 *
             ((-2 * C90106 * C90558) / C90107 +
              C90106 *
                  ((-((C90187 * C90188 + C90542 * bs[7] * std::pow(C90110, 7)) *
                      C90115 * C90114) /
                    C89892) /
                       C89849 -
                   C90558 / C90107)));
    const double C3343 =
        (((-3 * C90330) / C89892 + C90106 * C90359) * ae) / C89849 -
        ((3 * C90488 + C90106 * C90514) * ce) / C90107 +
        C90306 *
            (3 * C90563 +
             C90106 * ((-2 * C90106 * C90558) / C90107 +
                       C90106 * ((-((C90187 * C90188 +
                                     C90542 * bs[7] * std::pow(C90110, 7)) *
                                    C90115 * C90114) /
                                  C89892) /
                                     C89849 -
                                 C90558 / C90107)));
    const double C4021 = (-(C90248 * C90488 * ce) / C89892) / C89849 -
                         (ae * C90248 * C90330) / C90107 +
                         C90306 * C90248 * C90563;
    const double C7464 =
        2 * C90248 * C90563 +
        C90248 * (C90563 +
                  ((-((C90187 * C90188 + C90542 * bs[7] * std::pow(C90110, 7)) *
                      C90115 * C90114) /
                    C89892) /
                       C89849 -
                   C90558 / C90107) *
                      C90420);
    const double C8423 =
        (-((C90488 + C90508 * C90420) * ce) / C89892) / C89849 -
        (ae * (C90351 * C90420 + C90330)) / C90107 +
        C90306 * (C90563 +
                  ((-((C90187 * C90188 + C90542 * bs[7] * std::pow(C90110, 7)) *
                      C90115 * C90114) /
                    C89892) /
                       C89849 -
                   C90558 / C90107) *
                      C90420);
    const double C12732 =
        C90248 * C90563 - (ae * (C90306 * C91219 + C91023 * ce)) / C90107 -
        ((C90306 * C91220 + C91023 * ae) * ce) / C90107 +
        C90306 *
            ((-(C91220 * ce) / C89892) / C89849 - (ae * C91219) / C90107 +
             C90306 * C90248 *
                 ((-((C90187 * C90188 + C90542 * bs[7] * std::pow(C90110, 7)) *
                     C90115 * C90114) /
                   C89892) /
                      C89849 -
                  C90558 / C90107));
    const double C13741 =
        2 * ((-(C90488 * ce) / C89892) / C89849 - (ae * C90330) / C90107 +
             C90306 * C90563) -
        (ae * (C90306 * C91233 + C90330 + C91231 * ce)) / C90107 -
        ((C90488 + C90306 * C91234 + C91231 * ae) * ce) / C90107 +
        C90306 *
            (C90563 - (ae * C91233) / C90107 - (C91234 * ce) / C90107 +
             C90306 *
                 ((-(C90508 * ce) / C89892) / C89849 - (ae * C90351) / C90107 +
                  C90306 * ((-((C90187 * C90188 +
                                C90542 * bs[7] * std::pow(C90110, 7)) *
                               C90115 * C90114) /
                             C89892) /
                                C89849 -
                            C90558 / C90107)));
    const double C37168 =
        4 * ((-2 * C91258) / C90107 + C90248 * C91414) +
        C90248 *
            (3 * C91414 +
             C90248 * ((-2 * C90248 * C90558) / C90107 +
                       C90248 * ((-((C90187 * C90188 +
                                     C90542 * bs[7] * std::pow(C90110, 7)) *
                                    C90115 * C90420) /
                                  C89892) /
                                     C89849 -
                                 C90558 / C90107)));
    const double C37642 =
        (-2 * C91258) / C90107 + C90248 * C91414 +
        ((C90306 * C91382 - (C91349 * ce) / C89892) * ae) / C89849 -
        ((C90306 * C91404 + C91349 * ae) * ce) / C90107 +
        C90306 *
            ((C91382 * ae) / C89849 - (C91404 * ce) / C90107 +
             C90306 * ((-2 * C90248 * C90558) / C90107 +
                       C90248 * ((-((C90187 * C90188 +
                                     C90542 * bs[7] * std::pow(C90110, 7)) *
                                    C90115 * C90420) /
                                  C89892) /
                                     C89849 -
                                 C90558 / C90107)));
    const double C39563 =
        (((-3 * C90913) / C89892 + C90248 * C91382) * ae) / C89849 -
        ((3 * C90941 + C90248 * C91404) * ce) / C90107 +
        C90306 *
            (3 * C91414 +
             C90248 * ((-2 * C90248 * C90558) / C90107 +
                       C90248 * ((-((C90187 * C90188 +
                                     C90542 * bs[7] * std::pow(C90110, 7)) *
                                    C90115 * C90420) /
                                  C89892) /
                                     C89849 -
                                 C90558 / C90107)));
    const double C44716 =
        2 * ((-(C90941 * ce) / C89892) / C89849 - (ae * C90913) / C90107 +
             C90306 * C91414) -
        (ae * (C90306 * C91549 + C90913 + C91547 * ce)) / C90107 -
        ((C90941 + C90306 * C91550 + C91547 * ae) * ce) / C90107 +
        C90306 *
            (C91414 - (ae * C91549) / C90107 - (C91550 * ce) / C90107 +
             C90306 *
                 ((-(C91398 * ce) / C89892) / C89849 - (ae * C91373) / C90107 +
                  C90306 * ((-((C90187 * C90188 +
                                C90542 * bs[7] * std::pow(C90110, 7)) *
                               C90115 * C90420) /
                             C89892) /
                                C89849 -
                            C90558 / C90107)));
    const double C44280 = C44274 + C44275;
    const double C57834 = C57825 + C57826;
    const double C67663 = C67654 + C67655;
    const double C89402 = C89398 + C89399;
    const double C91355 = C91351 - C91329;
    const double C91649 = C91645 - C91631;
    const double C5302 =
        3 * ((-(ae * C90879) / C89892) / C89849 - C90875 / C90107 -
             (C90880 * ce) / C90107 + C90248 * C90898) +
        (((-2 * C90879) / C89892 - (C90248 * C90903) / C89892 -
          (C90892 * ce) / C89892) *
         ae) /
            C89849 -
        ((2 * C90880 + C90248 * C90904 + C90892 * ae) * ce) / C90107 +
        C90248 * (2 * C90898 - (ae * C90903) / C90107 - (C90904 * ce) / C90107 +
                  C90248 * ((-(ae * C90896) / C89892) / C89849 -
                            C90883 / C90107 - (C90897 * ce) / C90107 +
                            C90248 * ((-(C90887 * ce) / C89892) / C89849 -
                                      (ae * C90884) / C90107 -
                                      (C90248 * C90106 *
                                       (C90187 * C90188 +
                                        C90420 * bs[7] * std::pow(C90110, 7)) *
                                       C90115) /
                                          C90107)));
    const double C7033 = C7027 + C7028;
    const double C47457 = C47451 + C47452;
    const double C60458 = C60452 + C60453;
    const double C70282 = C70276 + C70277;
    const double C44168 = C44157 + C44158;
    const double C57742 = C57727 + C57728;
    const double C67571 = C67556 + C67557;
    const double C89297 = C89290 + C89291;
    const double C60350 = C60340 + C60341;
    const double C70174 = C70164 + C70165;
    const double C15169 = C15152 + C15168;
    const double C31623 = C31606 + C31622;
    const double C20119 = C20118 * C92212;
    const double C61259 = C20118 * C92212;
    const double C29405 = C29403 + C29401;
    const double C29404 = C29398 + C29402;
    const double C54330 = C54328 + C54326;
    const double C54329 = C54323 + C54327;
    const double C86828 = C86819 + C86825;
    const double C41533 = C41516 + C41532;
    const double C11771 =
        3 * ((-(ae * C91186) / C89892) / C89849 - C90958 / C90107 -
             (C91187 * ce) / C90107 + C90306 * C91201) +
        (((-2 * C91186) / C89892 - (C90306 * C91206) / C89892 -
          (C91198 * ce) / C89892) *
         ae) /
            C89849 -
        ((2 * C91187 + C90306 * C91207 + C91198 * ae) * ce) / C90107 +
        C90306 * (2 * C91201 - (ae * C91206) / C90107 - (C91207 * ce) / C90107 +
                  C90306 * ((-(ae * C91196) / C89892) / C89849 -
                            C90962 / C90107 - (C91199 * ce) / C90107 +
                            C90306 * ((-(C90949 * ce) / C89892) / C89849 -
                                      (ae * C90921) / C90107 -
                                      (C90306 * C90106 *
                                       (C90187 * C90188 +
                                        C90542 * bs[7] * std::pow(C90110, 7)) *
                                       C90115) /
                                          C90107)));
    const double C13749 = C13743 + C13744;
    const double C84137 = C84131 + C84132;
    const double C41852 =
        3 * ((-(ae * C91264) / C89892) / C89849 - C91258 / C90107 -
             (C91265 * ce) / C90107 + C90306 * C91530) +
        (((-2 * C91264) / C89892 - (C90306 * C91535) / C89892 -
          (C91524 * ce) / C89892) *
         ae) /
            C89849 -
        ((2 * C91265 + C90306 * C91536 + C91524 * ae) * ce) / C90107 +
        C90306 * (2 * C91530 - (ae * C91535) / C90107 - (C91536 * ce) / C90107 +
                  C90306 * ((-(ae * C91528) / C89892) / C89849 -
                            C91515 / C90107 - (C91529 * ce) / C90107 +
                            C90306 * ((-(C91519 * ce) / C89892) / C89849 -
                                      (ae * C91516) / C90107 -
                                      (C90306 * C90248 *
                                       (C90187 * C90188 +
                                        C90542 * bs[7] * std::pow(C90110, 7)) *
                                       C90115) /
                                          C90107)));
    const double C5688 = C5679 * C92067;
    const double C46227 = C5679 * C92067;
    const double C20506 = C20489 + C20505;
    const double C61643 = C61626 + C61642;
    const double C28743 = C28741 + C28739;
    const double C28742 = C28736 + C28740;
    const double C77803 = C77801 + C77799;
    const double C77802 = C77796 + C77800;
    const double C37175 = C37171 * C92062;
    const double C57407 = C57398 + C57404;
    const double C67240 = C67223 + C67239;
    const double C6695 = C6688 + C6689;
    const double C15690 = C15678 + C15679;
    const double C32140 = C32128 + C32129;
    const double C47124 = C47117 + C47118;
    const double C5036 = C5027 + C5028;
    const double C6696 = C6690 + C6691;
    const double C37813 = C37808 + C37809;
    const double C45679 = C45670 + C45671;
    const double C12979 = C12973 + C12974;
    const double C21371 = C21361 + C21362;
    const double C53921 = C53917 + C53918;
    const double C62508 = C62498 + C62499;
    const double C11117 = C11108 + C11109;
    const double C12978 = C12971 + C12972;
    const double C42998 = C42990 + C42991;
    const double C51721 = C51713 + C51714;
    const double C8680 = C8673 + C8674;
    const double C27788 = C27784 + C27785;
    const double C42074 = C42070 + C42071;
    const double C49008 = C49001 + C49002;
    const double C36773 = C36768 + C36769;
    const double C8681 = C8675 + C8676;
    const double C39059 = C39054 + C39055;
    const double C13977 = C13974 + C13975;
    const double C40406 = C40402 + C40403;
    const double C40407 = C40404 + C40405;
    const double C39060 = C39056 + C39057;
    const double C41222 = C41213 + C41214;
    const double C193 =
        4 * (2 * C90275 - (ae * C90272) / C90107 + C90106 * C90303) +
        (((-3 * C90272) / C89892 + C90106 * C90301) * ae) / C89849 +
        C90106 *
            (3 * C90303 + (C90301 * ae) / C89849 +
             C90106 * (2 * C90300 - (ae * C90293) / C90107 +
                       C90106 * ((-(ae * C90106 * C90286) / C89892) / C89849 -
                                 C90283 / C90107 +
                                 C90106 * ((-(C90106 * std::pow(C90110, 7) *
                                              bs[7] * C90255) /
                                            C89892) /
                                               C89849 -
                                           (ae * C90286) / C90107))));
    const double C895 =
        C90248 * (2 * C90275 - (ae * C90272) / C90107 + C90106 * C90303) -
        ((2 * C90140 + C90106 * C90179 + C90160 * ae) * ce) / C90107;
    const double C901 = (-(ae * C90262) / C89892) / C89849 - C90259 / C90107 +
                        C90106 * C90275 - (C90248 * C90179 * ce) / C90107 +
                        C90248 * (C90248 * C90303 - (C90179 * ce) / C90107);
    const double C1476 =
        C90306 * (2 * C90275 - (ae * C90272) / C90107 + C90106 * C90303);
    const double C1482 = (-(ae * C90262) / C89892) / C89849 - C90259 / C90107 +
                         C90106 * C90275 + C90303 * C90542;
    const double C1483 =
        2 * C90275 - (ae * C90272) / C90107 + C90106 * C90303 +
        (2 * C90300 - (ae * C90293) / C90107 +
         C90106 *
             ((-(ae * C90106 * C90286) / C89892) / C89849 - C90283 / C90107 +
              C90106 *
                  ((-(C90106 * std::pow(C90110, 7) * bs[7] * C90255) / C89892) /
                       C89849 -
                   (ae * C90286) / C90107))) *
            C90542;
    const double C2782 =
        C90306 *
        (3 * C90303 + (C90301 * ae) / C89849 +
         C90106 *
             (2 * C90300 - (ae * C90293) / C90107 +
              C90106 *
                  ((-(ae * C90106 * C90286) / C89892) / C89849 -
                   C90283 / C90107 +
                   C90106 * ((-(C90106 * std::pow(C90110, 7) * bs[7] * C90255) /
                              C89892) /
                                 C89849 -
                             (ae * C90286) / C90107))));
    const double C3519 = C90306 * (C90248 * C90303 - (C90179 * ce) / C90107);
    const double C6684 =
        2 * (C90248 * C90303 - (C90179 * ce) / C90107) -
        ((C90179 + C90236 * C90420) * ce) / C90107 +
        C90248 *
            (C90303 - (C90248 * C90236 * ce) / C90107 +
             C90248 * (C90248 * ((-(ae * C90884) / C89892) / C89849 -
                                 C90283 / C90107 +
                                 C90106 * ((-(C90106 * std::pow(C90110, 7) *
                                              bs[7] * C90255) /
                                            C89892) /
                                               C89849 -
                                           (ae * C90286) / C90107)) -
                       (C90236 * ce) / C90107));
    const double C7669 =
        C90306 *
        (C90303 - (C90248 * C90236 * ce) / C90107 +
         C90248 *
             (C90248 *
                  ((-(ae * C90884) / C89892) / C89849 - C90283 / C90107 +
                   C90106 * ((-(C90106 * std::pow(C90110, 7) * bs[7] * C90255) /
                              C89892) /
                                 C89849 -
                             (ae * C90286) / C90107)) -
              (C90236 * ce) / C90107));
    const double C11973 =
        C90248 * C90303 - (C90179 * ce) / C90107 +
        (C90248 * ((-(ae * C90884) / C89892) / C89849 - C90283 / C90107 +
                   C90106 * ((-(C90106 * std::pow(C90110, 7) * bs[7] * C90255) /
                              C89892) /
                                 C89849 -
                             (ae * C90286) / C90107)) -
         (C90236 * ce) / C90107) *
            C90542;
    const double C12967 =
        2 * C90306 * C90303 +
        C90306 * (C90303 +
                  ((-(ae * C90884) / C89892) / C89849 - C90283 / C90107 +
                   C90106 * ((-(C90106 * std::pow(C90110, 7) * bs[7] * C90255) /
                              C89892) /
                                 C89849 -
                             (ae * C90286) / C90107)) *
                      C90542);
    const double C5019 =
        3 * (C90275 - (C90818 * ce) / C90107 + C90248 * C90821) -
        ((2 * C90818 + C90248 * C90822) * ce) / C90107 +
        C90248 *
            (2 * C90821 - (C90822 * ce) / C90107 +
             C90248 * (C90300 - (C90248 * C90226 * ce) / C90107 +
                       C90248 * (C90248 * ((-(C90106 * std::pow(C90110, 7) *
                                              bs[7] * C90255) /
                                            C89892) /
                                               C89849 -
                                           (ae * C90286) / C90107) -
                                 (C90226 * ce) / C90107)));
    const double C5875 =
        C90306 * (C90275 - (C90818 * ce) / C90107 + C90248 * C90821);
    const double C5878 =
        C90248 * C90275 - (C90140 * ce) / C90107 + C90821 * C90542;
    const double C5880 =
        C90275 - (C90818 * ce) / C90107 + C90248 * C90821 +
        (C90300 - (C90248 * C90226 * ce) / C90107 +
         C90248 * (C90248 * ((-(C90106 * std::pow(C90110, 7) * bs[7] * C90255) /
                              C89892) /
                                 C89849 -
                             (ae * C90286) / C90107) -
                   (C90226 * ce) / C90107)) *
            C90542;
    const double C8669 =
        C90306 *
        (2 * C90821 - (C90822 * ce) / C90107 +
         C90248 *
             (C90300 - (C90248 * C90226 * ce) / C90107 +
              C90248 *
                  (C90248 * ((-(C90106 * std::pow(C90110, 7) * bs[7] * C90255) /
                              C89892) /
                                 C89849 -
                             (ae * C90286) / C90107) -
                   (C90226 * ce) / C90107)));
    const double C13970 =
        2 * C90306 * C90821 +
        C90306 * (C90821 +
                  (C90248 * ((-(C90106 * std::pow(C90110, 7) * bs[7] * C90255) /
                              C89892) /
                                 C89849 -
                             (ae * C90286) / C90107) -
                   (C90226 * ce) / C90107) *
                      C90542);
    const double C5038 = C5031 + C5032;
    const double C37814 = C37810 + C37811;
    const double C45681 = C45674 + C45675;
    const double C11118 = C11110 + C11111;
    const double C72887 = C72884 + C72885;
    const double C81751 = C81746 + C81747;
    const double C36760 =
        4 * (2 * C90816 - (C90813 * ce) / C90107 + C90248 * C91290) -
        ((3 * C90813 + C90248 * C91287) * ce) / C90107 +
        C90248 *
            (3 * C91290 - (C91287 * ce) / C90107 +
             C90248 * (2 * C91288 - (C91283 * ce) / C90107 +
                       C90248 * ((-(C90248 * C90210 * ce) / C89892) / C89849 -
                                 C90283 / C90107 +
                                 C90248 * ((-(C90248 * std::pow(C90110, 7) *
                                              bs[7] * C90255) /
                                            C89892) /
                                               C89849 -
                                           (C90210 * ce) / C90107))));
    const double C37282 =
        2 * C90816 - (C90813 * ce) / C90107 + C90248 * C91290 +
        (2 * C91288 - (C91283 * ce) / C90107 +
         C90248 *
             ((-(C90248 * C90210 * ce) / C89892) / C89849 - C90283 / C90107 +
              C90248 *
                  ((-(C90248 * std::pow(C90110, 7) * bs[7] * C90255) / C89892) /
                       C89849 -
                   (C90210 * ce) / C90107))) *
            C90542;
    const double C39050 =
        C90306 *
        (3 * C91290 - (C91287 * ce) / C90107 +
         C90248 *
             (2 * C91288 - (C91283 * ce) / C90107 +
              C90248 *
                  ((-(C90248 * C90210 * ce) / C89892) / C89849 -
                   C90283 / C90107 +
                   C90248 * ((-(C90248 * std::pow(C90110, 7) * bs[7] * C90255) /
                              C89892) /
                                 C89849 -
                             (C90210 * ce) / C90107))));
    const double C43921 =
        2 * C90306 * C91290 +
        C90306 * (C91290 +
                  ((-(C91480 * ce) / C89892) / C89849 - C90283 / C90107 +
                   C90248 * ((-(C90248 * std::pow(C90110, 7) * bs[7] * C90255) /
                              C89892) /
                                 C89849 -
                             (C90210 * ce) / C90107)) *
                      C90542);
    const double C344 = C335 + C336;
    const double C2215 = C2206 + C2207;
    const double C4364 = C4350 + C4351;
    const double C15067 = C15050 + C15051;
    const double C17352 = C17342 + C17343;
    const double C31521 = C31504 + C31505;
    const double C33798 = C33788 + C33789;
    const double C4357 = C4336 + C4337;
    const double C6926 = C6918 + C6919;
    const double C17349 = C17336 + C17337;
    const double C33795 = C33782 + C33783;
    const double C45060 = C45039 + C45040;
    const double C2937 = C2928 + C2929;
    const double C18291 = C18281 + C18282;
    const double C34728 = C34718 + C34719;
    const double C9749 = C9742 + C9743;
    const double C26979 = C26960 + C26961;
    const double C43215 = C43210 + C43211;
    const double C7887 = C7879 + C7880;
    const double C12184 = C12177 + C12178;
    const double C18288 = C18275 + C18276;
    const double C28066 = C28060 + C28061;
    const double C34725 = C34712 + C34713;
    const double C52981 = C52975 + C52976;
    const double C319 =
        4 * (2 * C90390 - (C90387 * ce) / C90107 + C90106 * C90416) -
        ((3 * C90387 + C90106 * C90413) * ce) / C90107 +
        C90106 *
            (3 * C90416 - (C90413 * ce) / C90107 +
             C90106 * (2 * C90414 - (C90407 * ce) / C90107 +
                       C90106 * ((-(C90106 * C90401 * ce) / C89892) / C89849 -
                                 C90398 / C90107 +
                                 C90106 * ((-(C90106 * std::pow(C90110, 7) *
                                              bs[7] * C90370) /
                                            C89892) /
                                               C89849 -
                                           (C90401 * ce) / C90107))));
    const double C1027 =
        (((-2 * C90139) / C89892 - (C90106 * C90178) / C89892 -
          (C90160 * ce) / C89892) *
         ae) /
            C89849 +
        C90248 * (2 * C90390 - (C90387 * ce) / C90107 + C90106 * C90416);
    const double C1033 = (-(C90377 * ce) / C89892) / C89849 - C90374 / C90107 +
                         C90106 * C90390 - (ae * C90248 * C90178) / C90107 +
                         C90248 * (C90248 * C90416 - (ae * C90178) / C90107);
    const double C1611 =
        C90306 * (2 * C90390 - (C90387 * ce) / C90107 + C90106 * C90416);
    const double C1617 = (-(C90377 * ce) / C89892) / C89849 - C90374 / C90107 +
                         C90106 * C90390 + C90416 * C90542;
    const double C1618 =
        2 * C90390 - (C90387 * ce) / C90107 + C90106 * C90416 +
        (2 * C90414 - (C90407 * ce) / C90107 +
         C90106 *
             ((-(C90106 * C90401 * ce) / C89892) / C89849 - C90398 / C90107 +
              C90106 *
                  ((-(C90106 * std::pow(C90110, 7) * bs[7] * C90370) / C89892) /
                       C89849 -
                   (C90401 * ce) / C90107))) *
            C90542;
    const double C2920 =
        C90306 *
        (3 * C90416 - (C90413 * ce) / C90107 +
         C90106 *
             (2 * C90414 - (C90407 * ce) / C90107 +
              C90106 *
                  ((-(C90106 * C90401 * ce) / C89892) / C89849 -
                   C90398 / C90107 +
                   C90106 * ((-(C90106 * std::pow(C90110, 7) * bs[7] * C90370) /
                              C89892) /
                                 C89849 -
                             (C90401 * ce) / C90107))));
    const double C3667 =
        C90248 * C90306 * C90416 - (ae * C90306 * C90178) / C90107;
    const double C6908 =
        2 * (C90248 * C90416 - (ae * C90178) / C90107) -
        (ae * (C90235 * C90420 + C90178)) / C90107 +
        C90248 *
            (C90416 - (ae * C90248 * C90235) / C90107 +
             C90248 * (C90248 * ((-(C90887 * ce) / C89892) / C89849 -
                                 C90398 / C90107 +
                                 C90106 * ((-(C90106 * std::pow(C90110, 7) *
                                              bs[7] * C90370) /
                                            C89892) /
                                               C89849 -
                                           (C90401 * ce) / C90107)) -
                       (ae * C90235) / C90107));
    const double C7869 =
        C90306 * C90416 - (ae * C90306 * C90248 * C90235) / C90107 +
        C90248 *
            (C90248 * C90306 *
                 ((-(C90887 * ce) / C89892) / C89849 - C90398 / C90107 +
                  C90106 * ((-(C90106 * std::pow(C90110, 7) * bs[7] * C90370) /
                             C89892) /
                                C89849 -
                            (C90401 * ce) / C90107)) -
             (ae * C90306 * C90235) / C90107);
    const double C12173 =
        C90248 * (C90416 +
                  ((-(C90887 * ce) / C89892) / C89849 - C90398 / C90107 +
                   C90106 * ((-(C90106 * std::pow(C90110, 7) * bs[7] * C90370) /
                              C89892) /
                                 C89849 -
                             (C90401 * ce) / C90107)) *
                      C90542) -
        (ae * (C90235 * C90542 + C90178)) / C90107;
    const double C13191 =
        2 * C90306 * C90416 +
        C90306 * (C90416 +
                  ((-(C90887 * ce) / C89892) / C89849 - C90398 / C90107 +
                   C90106 * ((-(C90106 * std::pow(C90110, 7) * bs[7] * C90370) /
                              C89892) /
                                 C89849 -
                             (C90401 * ce) / C90107)) *
                      C90542);
    const double C5224 =
        3 * (C90390 - (ae * C90839) / C90107 + C90248 * C90843) +
        (((-2 * C90839) / C89892 - (C90248 * C90844) / C89892) * ae) / C89849 +
        C90248 *
            (2 * C90843 - (ae * C90844) / C90107 +
             C90248 * (C90414 - (ae * C90248 * C90223) / C90107 +
                       C90248 * (C90248 * ((-(C90106 * std::pow(C90110, 7) *
                                              bs[7] * C90370) /
                                            C89892) /
                                               C89849 -
                                           (C90401 * ce) / C90107) -
                                 (ae * C90223) / C90107)));
    const double C6927 = C6920 + C6921;
    const double C47352 = C47345 + C47346;
    const double C7888 = C7881 + C7882;
    const double C28067 = C28062 + C28063;
    const double C48270 = C48263 + C48264;
    const double C52982 = C52977 + C52978;
    const double C12186 = C12181 + C12182;
    const double C26978 = C26958 + C26959;
    const double C43214 = C43208 + C43209;
    const double C11332 = C11319 + C11320;
    const double C36898 =
        4 * (2 * C90837 - (ae * C90834) / C90107 + C90248 * C91315) +
        (((-3 * C90834) / C89892 + C90248 * C91313) * ae) / C89849 +
        C90248 *
            (3 * C91315 + (C91313 * ae) / C89849 +
             C90248 * (2 * C91312 - (ae * C91305) / C90107 +
                       C90248 * ((-(ae * C90248 * C90207) / C89892) / C89849 -
                                 C90398 / C90107 +
                                 C90248 * ((-(C90248 * std::pow(C90110, 7) *
                                              bs[7] * C90370) /
                                            C89892) /
                                               C89849 -
                                           (ae * C90207) / C90107))));
    const double C6807 = C6800 + C6801;
    const double C15784 = C15774 + C15775;
    const double C32234 = C32224 + C32225;
    const double C47234 = C47227 + C47228;
    const double C5138 = C5129 + C5130;
    const double C6808 = C6802 + C6803;
    const double C37891 = C37885 + C37886;
    const double C45773 = C45764 + C45765;
    const double C13090 = C13083 + C13084;
    const double C21461 = C21449 + C21450;
    const double C54058 = C54055 + C54056;
    const double C62598 = C62586 + C62587;
    const double C11221 = C11212 + C11213;
    const double C13091 = C13085 + C13086;
    const double C43105 = C43102 + C43103;
    const double C51836 = C51827 + C51828;
    const double C8793 = C8785 + C8786;
    const double C27924 = C27920 + C27921;
    const double C42180 = C42175 + C42176;
    const double C49117 = C49109 + C49110;
    const double C71821 = C71819 + C71820;
    const double C256 =
        4 * (2 * C90333 - (ae * C90330) / C90107 + C90106 * C90361) +
        (((-3 * C90330) / C89892 + C90106 * C90359) * ae) / C89849 +
        C90106 *
            (3 * C90361 + (C90359 * ae) / C89849 +
             C90106 * (2 * C90358 - (ae * C90351) / C90107 +
                       C90106 * ((-(ae * C90106 * C90344) / C89892) / C89849 -
                                 C90341 / C90107 +
                                 C90106 * ((-(C90106 * std::pow(C90110, 7) *
                                              bs[7] * C90313) /
                                            C89892) /
                                               C89849 -
                                           (ae * C90344) / C90107))));
    const double C961 =
        C90248 * (2 * C90333 - (ae * C90330) / C90107 + C90106 * C90361);
    const double C967 = (-(ae * C90320) / C89892) / C89849 - C90317 / C90107 +
                        C90106 * C90333 + C90361 * C90420;
    const double C968 =
        2 * C90333 - (ae * C90330) / C90107 + C90106 * C90361 +
        (2 * C90358 - (ae * C90351) / C90107 +
         C90106 *
             ((-(ae * C90106 * C90344) / C89892) / C89849 - C90341 / C90107 +
              C90106 *
                  ((-(C90106 * std::pow(C90110, 7) * bs[7] * C90313) / C89892) /
                       C89849 -
                   (ae * C90344) / C90107))) *
            C90420;
    const double C1545 =
        C90306 * (2 * C90333 - (ae * C90330) / C90107 + C90106 * C90361) -
        ((2 * C90140 + C90106 * C90179 + C90160 * ae) * ce) / C90107;
    const double C1551 = (-(ae * C90320) / C89892) / C89849 - C90317 / C90107 +
                         C90106 * C90333 - (C90306 * C90179 * ce) / C90107 +
                         C90306 * (C90306 * C90361 - (C90179 * ce) / C90107);
    const double C2130 =
        C90248 *
        (3 * C90361 + (C90359 * ae) / C89849 +
         C90106 *
             (2 * C90358 - (ae * C90351) / C90107 +
              C90106 *
                  ((-(ae * C90106 * C90344) / C89892) / C89849 -
                   C90341 / C90107 +
                   C90106 * ((-(C90106 * std::pow(C90110, 7) * bs[7] * C90313) /
                              C89892) /
                                 C89849 -
                             (ae * C90344) / C90107))));
    const double C3593 =
        C90306 * C90248 * C90361 - (C90248 * C90179 * ce) / C90107;
    const double C6796 =
        2 * C90248 * C90361 +
        C90248 * (C90361 +
                  ((-(ae * C90921) / C89892) / C89849 - C90341 / C90107 +
                   C90106 * ((-(C90106 * std::pow(C90110, 7) * bs[7] * C90313) /
                              C89892) /
                                 C89849 -
                             (ae * C90344) / C90107)) *
                      C90420);
    const double C7769 =
        C90306 * (C90361 +
                  ((-(ae * C90921) / C89892) / C89849 - C90341 / C90107 +
                   C90106 * ((-(C90106 * std::pow(C90110, 7) * bs[7] * C90313) /
                              C89892) /
                                 C89849 -
                             (ae * C90344) / C90107)) *
                      C90420) -
        ((C90179 + C90236 * C90420) * ce) / C90107;
    const double C12073 =
        C90248 * C90361 - (C90306 * C91211 * ce) / C90107 +
        C90306 *
            (C90306 * C90248 *
                 ((-(ae * C90921) / C89892) / C89849 - C90341 / C90107 +
                  C90106 * ((-(C90106 * std::pow(C90110, 7) * bs[7] * C90313) /
                             C89892) /
                                C89849 -
                            (ae * C90344) / C90107)) -
             (C91211 * ce) / C90107);
    const double C13079 =
        2 * (C90306 * C90361 - (C90179 * ce) / C90107) -
        ((C90179 + C90236 * C90542) * ce) / C90107 +
        C90306 *
            (C90361 - (C90306 * C90236 * ce) / C90107 +
             C90306 * (C90306 * ((-(ae * C90921) / C89892) / C89849 -
                                 C90341 / C90107 +
                                 C90106 * ((-(C90106 * std::pow(C90110, 7) *
                                              bs[7] * C90313) /
                                            C89892) /
                                               C89849 -
                                           (ae * C90344) / C90107)) -
                       (C90236 * ce) / C90107));
    const double C11204 =
        3 * (C90333 - (C91093 * ce) / C90107 + C90306 * C91096) -
        ((2 * C91093 + C90306 * C91097) * ce) / C90107 +
        C90306 *
            (2 * C91096 - (C91097 * ce) / C90107 +
             C90306 * (C90358 - (C90306 * C90226 * ce) / C90107 +
                       C90306 * (C90306 * ((-(C90106 * std::pow(C90110, 7) *
                                              bs[7] * C90313) /
                                            C89892) /
                                               C89849 -
                                           (ae * C90344) / C90107) -
                                 (C90226 * ce) / C90107)));
    const double C5139 = C5131 + C5132;
    const double C37892 = C37888 + C37889;
    const double C45774 = C45766 + C45767;
    const double C14085 = C14082 + C14083;
    const double C42181 = C42178 + C42179;
    const double C51838 = C51831 + C51832;
    const double C8795 = C8789 + C8790;
    const double C49119 = C49113 + C49114;
    const double C58461 = C58459 + C58460;
    const double C11223 = C11216 + C11217;
    const double C72957 = C72955 + C72956;
    const double C81835 = C81832 + C81833;
    const double C71817 =
        4 * (2 * C91091 - (C91088 * ce) / C90107 + C90306 * C91571) -
        ((3 * C91088 + C90306 * C91568) * ce) / C90107 +
        C90306 *
            (3 * C91571 - (C91568 * ce) / C90107 +
             C90306 * (2 * C91569 - (C91564 * ce) / C90107 +
                       C90306 * ((-(C90306 * C90210 * ce) / C89892) / C89849 -
                                 C90341 / C90107 +
                                 C90306 * ((-(C90306 * std::pow(C90110, 7) *
                                              bs[7] * C90313) /
                                            C89892) /
                                               C89849 -
                                           (C90210 * ce) / C90107))));
    const double C60567 = C60563 + C60564;
    const double C70391 = C70387 + C70388;
    const double C11533 = C11527 + C11528;
    const double C41625 = C41617 + C41618;
    const double C86908 = C86904 + C86905;
    const double C71993 = C71991 + C71992;
    const double C41626 = C41619 + C41620;
    const double C73775 = C73773 + C73774;
    const double C86909 = C86906 + C86907;
    const double C2382 = C2373 + C2374;
    const double C15262 = C15254 + C15255;
    const double C31716 = C31708 + C31709;
    const double C4547 = C4538 + C4539;
    const double C17570 = C17562 + C17563;
    const double C34016 = C34008 + C34009;
    const double C45250 = C45241 + C45242;
    const double C9921 = C9915 + C9916;
    const double C3106 = C3102 + C3103;
    const double C18511 = C18505 + C18506;
    const double C22519 = C22516 + C22517;
    const double C34948 = C34942 + C34943;
    const double C11530 = C92137 * C11520;
    const double C37000 =
        4 * (2 * C90916 - (ae * C90913) / C90107 + C90248 * C91384) +
        (((-3 * C90913) / C89892 + C90248 * C91382) * ae) / C89849 +
        C90248 *
            (3 * C91384 + (C91382 * ae) / C89849 +
             C90248 * (2 * C91381 - (ae * C91373) / C90107 +
                       C90248 * ((-(ae * C90248 * C90344) / C89892) / C89849 -
                                 C90457 / C90107 +
                                 C90248 * ((-(C90248 * std::pow(C90110, 7) *
                                              bs[7] * C90447) /
                                            C89892) /
                                               C89849 -
                                           (ae * C90344) / C90107))));
    const double C37488 =
        2 * (C90248 * C91443 - (ae * C91180) / C90107) -
        (ae * (C90306 * (C90306 * C91373 + C91341) + C90913 +
               C90306 * C91335 * ce)) /
            C90107 +
        C90248 *
            (C91443 -
             (ae * (C90306 * (C90306 * C90248 * C90344 + C91334) + C91259 +
                    C90306 * C91323 * ce)) /
                 C90107 +
             C90248 * (C90248 * ((-(C90306 * C90401 * ce) / C89892) / C89849 -
                                 C90457 / C90107 +
                                 C90306 * ((-(C90306 * std::pow(C90110, 7) *
                                              bs[7] * C90447) /
                                            C89892) /
                                               C89849 -
                                           (C90401 * ce) / C90107)) -
                       (ae * (C90306 * (C90306 * C90344 + C90199) + C90326 +
                              C90306 * C90186 * ce)) /
                           C90107));
    const double C41607 =
        (((-3 * C91180) / C89892 +
          C90306 * ((-2 * C91168) / C89892 -
                    (C90306 * (C90306 * (C90306 * C90344 + C90199) + C90326 +
                               C90306 * C90186 * ce)) /
                        C89892 -
                    (C91493 * ce) / C89892) -
          ((2 * C91163 + C90306 * C91493) * ce) / C89892) *
         ae) /
            C89849 +
        C90248 *
            (3 * C91443 - ((2 * C91431 + C90306 * C91494) * ce) / C90107 +
             C90306 * (2 * C91440 - (C91494 * ce) / C90107 +
                       C90306 * ((-(C90306 * C90401 * ce) / C89892) / C89849 -
                                 C90457 / C90107 +
                                 C90306 * ((-(C90306 * std::pow(C90110, 7) *
                                              bs[7] * C90447) /
                                            C89892) /
                                               C89849 -
                                           (C90401 * ce) / C90107))));
    const double C44379 =
        2 * C91059 - (C91110 * ce) / C90107 + C90306 * C91443 +
        (((-2 * C91264) / C89892 - (C90306 * C91535) / C89892 -
          (C91524 * ce) / C89892) *
         ae) /
            C89849 +
        C90248 *
            ((((-2 * C91168) / C89892 -
               (C90306 * (C90306 * (C90306 * C90344 + C90199) + C90326 +
                          C90306 * C90186 * ce)) /
                   C89892 -
               (C91493 * ce) / C89892) *
              ae) /
                 C89849 +
             C90248 * (2 * C91440 - (C91494 * ce) / C90107 +
                       C90306 * ((-(C90306 * C90401 * ce) / C89892) / C89849 -
                                 C90457 / C90107 +
                                 C90306 * ((-(C90306 * std::pow(C90110, 7) *
                                              bs[7] * C90447) /
                                            C89892) /
                                               C89849 -
                                           (C90401 * ce) / C90107))));
    const double C71989 =
        4 * (2 * C91059 - (C91110 * ce) / C90107 + C90306 * C91443) -
        ((3 * C91110 + C90306 * C91577) * ce) / C90107 +
        C90306 *
            (3 * C91443 - (C91577 * ce) / C90107 +
             C90306 * (2 * C91440 - (C91494 * ce) / C90107 +
                       C90306 * ((-(C90306 * C90401 * ce) / C89892) / C89849 -
                                 C90457 / C90107 +
                                 C90306 * ((-(C90306 * std::pow(C90110, 7) *
                                              bs[7] * C90447) /
                                            C89892) /
                                               C89849 -
                                           (C90401 * ce) / C90107))));
    const double C39350 =
        3 * (C91059 - (ae * C91264) / C90107 + C90248 * C91470) +
        ((C90306 * C91382 - (C91349 * ce) / C89892) * ae) / C89849 +
        C90248 *
            (2 * C91470 - (ae * (C90306 * C91373 + C91341)) / C90107 +
             C90248 *
                 (C91440 - (ae * (C90306 * C90248 * C90344 + C91334)) / C90107 +
                  C90248 * (C90248 * ((-(C90306 * std::pow(C90110, 7) * bs[7] *
                                         C90447) /
                                       C89892) /
                                          C89849 -
                                      (C90401 * ce) / C90107) -
                            (ae * (C90306 * C90344 + C90199)) / C90107)));
    const double C591 = C582 + C583;
    const double C2471 = C2462 + C2463;
    const double C22641 = C22631 + C22632;
    const double C63756 = C63746 + C63747;
    const double C4633 = C4626 + C4627;
    const double C26319 = C26300 + C26301;
    const double C68677 = C68672 + C68673;
    const double C3193 = C3184 + C3185;
    const double C10035 = C10021 + C10022;
    const double C20308 = C20291 + C20292;
    const double C23616 = C23606 + C23607;
    const double C61445 = C61428 + C61429;
    const double C64722 = C64712 + C64713;
    const double C10028 = C10007 + C10008;
    const double C13534 = C13526 + C13527;
    const double C23613 = C23600 + C23601;
    const double C64719 = C64706 + C64707;
    const double C80719 = C80698 + C80699;
    const double C8214 = C8207 + C8208;
    const double C12525 = C12517 + C12518;
    const double C22638 = C22625 + C22626;
    const double C29678 = C29672 + C29673;
    const double C63753 = C63740 + C63741;
    const double C78724 = C78718 + C78719;
    const double C566 =
        4 * (2 * C90491 - (C90488 * ce) / C90107 + C90106 * C90517) -
        ((3 * C90488 + C90106 * C90514) * ce) / C90107 +
        C90106 *
            (3 * C90517 - (C90514 * ce) / C90107 +
             C90106 * (2 * C90515 - (C90508 * ce) / C90107 +
                       C90106 * ((-(C90106 * C90502 * ce) / C89892) / C89849 -
                                 C90499 / C90107 +
                                 C90106 * ((-(C90106 * std::pow(C90110, 7) *
                                              bs[7] * C90471) /
                                            C89892) /
                                               C89849 -
                                           (C90502 * ce) / C90107))));
    const double C1209 =
        C90248 * (2 * C90491 - (C90488 * ce) / C90107 + C90106 * C90517);
    const double C1215 = (-(C90478 * ce) / C89892) / C89849 - C90475 / C90107 +
                         C90106 * C90491 + C90517 * C90420;
    const double C1216 =
        2 * C90491 - (C90488 * ce) / C90107 + C90106 * C90517 +
        (2 * C90515 - (C90508 * ce) / C90107 +
         C90106 *
             ((-(C90106 * C90502 * ce) / C89892) / C89849 - C90499 / C90107 +
              C90106 *
                  ((-(C90106 * std::pow(C90110, 7) * bs[7] * C90471) / C89892) /
                       C89849 -
                   (C90502 * ce) / C90107))) *
            C90420;
    const double C1793 =
        (((-2 * C90139) / C89892 - (C90106 * C90178) / C89892 -
          (C90160 * ce) / C89892) *
         ae) /
            C89849 +
        C90306 * (2 * C90491 - (C90488 * ce) / C90107 + C90106 * C90517);
    const double C1799 = (-(C90478 * ce) / C89892) / C89849 - C90475 / C90107 +
                         C90106 * C90491 - (ae * C90306 * C90178) / C90107 +
                         C90306 * (C90306 * C90517 - (ae * C90178) / C90107);
    const double C2454 =
        C90248 *
        (3 * C90517 - (C90514 * ce) / C90107 +
         C90106 *
             (2 * C90515 - (C90508 * ce) / C90107 +
              C90106 *
                  ((-(C90106 * C90502 * ce) / C89892) / C89849 -
                   C90499 / C90107 +
                   C90106 * ((-(C90106 * std::pow(C90110, 7) * bs[7] * C90471) /
                              C89892) /
                                 C89849 -
                             (C90502 * ce) / C90107))));
    const double C3881 =
        C90306 * C90248 * C90517 - (ae * C90248 * C90178) / C90107;
    const double C7242 =
        2 * C90248 * C90517 +
        C90248 * (C90517 +
                  ((-(C90949 * ce) / C89892) / C89849 - C90499 / C90107 +
                   C90106 * ((-(C90106 * std::pow(C90110, 7) * bs[7] * C90471) /
                              C89892) /
                                 C89849 -
                             (C90502 * ce) / C90107)) *
                      C90420);
    const double C8203 =
        C90306 * (C90517 +
                  ((-(C90949 * ce) / C89892) / C89849 - C90499 / C90107 +
                   C90106 * ((-(C90106 * std::pow(C90110, 7) * bs[7] * C90471) /
                              C89892) /
                                 C89849 -
                             (C90502 * ce) / C90107)) *
                      C90420) -
        (ae * (C90235 * C90420 + C90178)) / C90107;
    const double C12507 =
        C90248 * C90517 - (ae * C90306 * C91216) / C90107 +
        C90306 *
            (C90306 * C90248 *
                 ((-(C90949 * ce) / C89892) / C89849 - C90499 / C90107 +
                  C90106 * ((-(C90106 * std::pow(C90110, 7) * bs[7] * C90471) /
                             C89892) /
                                C89849 -
                            (C90502 * ce) / C90107)) -
             (ae * C91216) / C90107);
    const double C13516 =
        2 * (C90306 * C90517 - (ae * C90178) / C90107) -
        (ae * (C90235 * C90542 + C90178)) / C90107 +
        C90306 *
            (C90517 - (ae * C90306 * C90235) / C90107 +
             C90306 * (C90306 * ((-(C90949 * ce) / C89892) / C89849 -
                                 C90499 / C90107 +
                                 C90106 * ((-(C90106 * std::pow(C90110, 7) *
                                              bs[7] * C90471) /
                                            C89892) /
                                               C89849 -
                                           (C90502 * ce) / C90107)) -
                       (ae * C90235) / C90107));
    const double C11615 =
        3 * (C90491 - (ae * C91128) / C90107 + C90306 * C91131) +
        (((-2 * C91128) / C89892 - (C90306 * C91132) / C89892) * ae) / C89849 +
        C90306 *
            (2 * C91131 - (ae * C91132) / C90107 +
             C90306 * (C90515 - (ae * C90306 * C90223) / C90107 +
                       C90306 * (C90306 * ((-(C90106 * std::pow(C90110, 7) *
                                              bs[7] * C90471) /
                                            C89892) /
                                               C89849 -
                                           (C90502 * ce) / C90107) -
                                 (ae * C90223) / C90107)));
    const double C5489 = C5476 + C5477;
    const double C8216 = C8211 + C8212;
    const double C26318 = C26298 + C26299;
    const double C68676 = C68670 + C68671;
    const double C12526 = C12519 + C12520;
    const double C29679 = C29674 + C29675;
    const double C78725 = C78720 + C78721;
    const double C82983 = C82976 + C82977;
    const double C13535 = C13528 + C13529;
    const double C83925 = C83918 + C83919;
    const double C72044 =
        4 * (2 * C91126 - (ae * C91123) / C90107 + C90306 * C91596) +
        (((-3 * C91123) / C89892 + C90306 * C91594) * ae) / C89849 +
        C90306 *
            (3 * C91596 + (C91594 * ae) / C89849 +
             C90306 * (2 * C91593 - (ae * C91586) / C90107 +
                       C90306 * ((-(ae * C90306 * C90207) / C89892) / C89849 -
                                 C90499 / C90107 +
                                 C90306 * ((-(C90306 * std::pow(C90110, 7) *
                                              bs[7] * C90471) /
                                            C89892) /
                                               C89849 -
                                           (ae * C90207) / C90107))));
    const double C37118 = C37116 + C37117;
    const double C9326 = C9323 + C9324;
    const double C26439 = C26430 + C26431;
    const double C40918 = C40910 + C40911;
    const double C60780 = C60776 + C60777;
    const double C67141 = C67132 + C67133;
    const double C70622 = C70616 + C70617;
    const double C31047 = C31044 + C31045;
    const double C40914 = C40902 + C40903;
    const double C44617 = C44612 + C44613;
    const double C70621 = C70614 + C70615;
    const double C86328 = C86316 + C86317;
    const double C40919 = C40912 + C40913;
    const double C60781 = C60778 + C60779;
    const double C70623 = C70618 + C70619;
    const double C86333 = C86326 + C86327;
    const double C39497 = C39495 + C39496;
    const double C57323 = C57320 + C57321;
    const double C67143 = C67136 + C67137;
    const double C44618 = C44614 + C44615;
    const double C89730 = C89726 + C89727;
    const double C4721 = C4715 + C4716;
    const double C2558 = C2554 + C2555;
    const double C3274 = C3270 + C3271;
    const double C20406 = C20398 + C20399;
    const double C61543 = C61535 + C61536;
    const double C10126 = C10117 + C10118;
    const double C23727 = C23722 + C23723;
    const double C64833 = C64828 + C64829;
    const double C80817 = C80808 + C80809;
    const double C18718 = C18716 + C18717;
    const double C22751 = C22745 + C22746;
    const double C63866 = C63860 + C63861;
    const double C8321 = C92148 * C6373;
    const double C26435 = C92212 * C6373;
    const double C68779 = C92212 * C6373;
    const double C12627 = C9516 * C6376;
    const double C29813 = C92212 * C6376;
    const double C78859 = C92212 * C6376;
    const double C83083 = C80243 * C6376;
    const double C37114 =
        4 * (2 * C90944 - (C90941 * ce) / C90107 + C90248 * C91408) -
        ((3 * C90941 + C90248 * C91404) * ce) / C90107 +
        C90248 *
            (3 * C91408 - (C91404 * ce) / C90107 +
             C90248 * (2 * C91406 - (C91398 * ce) / C90107 +
                       C90248 * ((-(C90248 * C90502 * ce) / C89892) / C89849 -
                                 C90533 / C90107 +
                                 C90248 * ((-(C90248 * std::pow(C90110, 7) *
                                              bs[7] * C90523) /
                                            C89892) /
                                               C89849 -
                                           (C90502 * ce) / C90107))));
    const double C44608 =
        2 * (C90306 * C91408 - (ae * C90872) / C90107) -
        (ae * (C91353 * C90542 + C90872)) / C90107 +
        C90306 *
            (C91408 - (ae * C90306 * C91353) / C90107 +
             C90306 * (C90306 * ((-(C91519 * ce) / C89892) / C89849 -
                                 C90533 / C90107 +
                                 C90248 * ((-(C90248 * std::pow(C90110, 7) *
                                              bs[7] * C90523) /
                                            C89892) /
                                               C89849 -
                                           (C90502 * ce) / C90107)) -
                       (ae * C91353) / C90107));
    const double C41777 =
        3 * (C90944 - (ae * C91507) / C90107 + C90306 * C91511) +
        (((-2 * C91507) / C89892 - (C90306 * C91512) / C89892) * ae) / C89849 +
        C90306 *
            (2 * C91511 - (ae * C91512) / C90107 +
             C90306 * (C91406 - (ae * C90306 * C91333) / C90107 +
                       C90306 * (C90306 * ((-(C90248 * std::pow(C90110, 7) *
                                              bs[7] * C90523) /
                                            C89892) /
                                               C89849 -
                                           (C90502 * ce) / C90107) -
                                 (ae * C91333) / C90107)));
    const double C72095 =
        4 * (2 * C91143 - (ae * C91140) / C90107 + C90306 * C91615) +
        (((-3 * C91140) / C89892 + C90306 * C91613) * ae) / C89849 +
        C90306 *
            (3 * C91615 + (C91613 * ae) / C89849 +
             C90306 * (2 * C91612 - (ae * C91605) / C90107 +
                       C90306 * ((-(ae * C90306 * C90286) / C89892) / C89849 -
                                 C90533 / C90107 +
                                 C90306 * ((-(C90306 * std::pow(C90110, 7) *
                                              bs[7] * C90523) /
                                            C89892) /
                                               C89849 -
                                           (ae * C90286) / C90107))));
    const double C45571 = C89875 * C4882;
    const double C45567 = C89875 * C4886;
    const double C45561 = C89875 * C822;
    const double C45557 = C89875 * C806;
    const double C45553 = C89875 * C813;
    const double C45549 = C89875 * C805;
    const double C45672 = C89875 * C5012;
    const double C45668 = C89875 * C891;
    const double C45666 = C89875 * C890;
    const double C45768 = C89875 * C5114;
    const double C45762 = C89875 * C957;
    const double C45757 = C89875 * C956;
    const double C47007 = C89875 * C823;
    const double C47003 = C89875 * C807;
    const double C46999 = C89875 * C812;
    const double C46995 = C89875 * C804;
    const double C47119 = C89875 * C892;
    const double C47115 = C89875 * C889;
    const double C47229 = C89875 * C958;
    const double C47225 = C89875 * C955;
    const double C48891 = C89875 * C3431;
    const double C48887 = C89875 * C3439;
    const double C48883 = C89875 * C5772;
    const double C48879 = C89875 * C5778;
    const double C49003 = C89875 * C5870;
    const double C48999 = C89875 * C3513;
    const double C49115 = C89875 * C5958;
    const double C49111 = C89875 * C3587;
    const double C51593 = C89875 * C1390;
    const double C51589 = C89875 * C1406;
    const double C51585 = C89875 * C5773;
    const double C51581 = C89875 * C5783;
    const double C51575 = C89875 * C1397;
    const double C51571 = C89875 * C1389;
    const double C51715 = C89875 * C1472;
    const double C51711 = C89875 * C5871;
    const double C51705 = C89875 * C1471;
    const double C51829 = C89875 * C5955;
    const double C51825 = C89875 * C1541;
    const double C51823 = C89875 * C1540;
    const double C52563 = C89875 * C3440;
    const double C52559 = C89875 * C3432;
    const double C52699 = C89875 * C3514;
    const double C52835 = C89875 * C3588;
    const double C53781 = C89875 * C1396;
    const double C53777 = C89875 * C1388;
    const double C53919 = C89875 * C1470;
    const double C54053 = C89875 * C1539;
    const double C81660 = C89875 * C10961;
    const double C81656 = C89875 * C10965;
    const double C81748 = C89875 * C11093;
    const double C81830 = C89875 * C11197;
    const double C83302 = C89875 * C1407;
    const double C83298 = C89875 * C1391;
    const double C83408 = C89875 * C1473;
    const double C83510 = C89875 * C1542;
    const double C100 =
        ((((0 - (C89847 * C89848) / C89849) * ae) / C89849 - (0 * be) / C89858 +
          C89850 / C89849) /
             C89854 -
         ((C89847 * C89871 + 0) * be) / C89849) /
            C89854 +
        ((C89847 * (C89871 / C89854 -
                    ((C89847 * C89875 + C92310) * be) / C89849 + C89868) +
          C92346) *
         ae) /
            C89849 +
        C89875 / C89854 - ((C89847 * C89868 + C92067) * be) / C89849;
    const double C101 =
        (C89871 / C89854 - ((C89847 * C89875 + C92310) * be) / C89849 +
         C89868) /
            C89854 +
        ((C89847 *
              (C89875 / C89854 - ((C89847 * C89868 + C92067) * be) / C89849) +
          C92347) *
         ae) /
            C89849 +
        2 * (C89868 / C89854 - (0 * be) / C89849);
    const double C102 =
        (C89875 / C89854 - ((C89847 * C89868 + C92067) * be) / C89849) /
            C89854 +
        ((C89847 * (C89868 / C89854 - (0 * be) / C89849) + C14805) * ae) /
            C89849;
    const double C14808 =
        C89871 / C89854 - ((C89847 * C89875 + C92310) * be) / C89849 + C89868;
    const double C14809 =
        C89875 / C89854 - ((C89847 * C89868 + C92067) * be) / C89849;
    const double C31262 =
        C89871 / C89854 + ((C89847 * C89875 + C92310) * ae) / C89849 + C89868;
    const double C31263 =
        C89875 / C89854 + ((C89847 * C89868 + C92067) * ae) / C89849;
    const double C4935 = C4928 + C4929;
    const double C4934 = C4926 + C4927;
    const double C30085 = C8567 + C8568;
    const double C30082 = C8568 + C8567;
    const double C30084 = C8565 + C8566;
    const double C30083 = C8566 + C8565;
    const double C11014 = C11007 + C11008;
    const double C11013 = C11005 + C11006;
    const double C36367 =
        ((((0 - (C89965 * C90020) / C89849) * ae) / C89849 - (0 * be) / C89858 +
          C89966 / C89849) /
             C89854 -
         ((C89965 * C90037 + 0) * be) / C89849) /
            C89854 +
        ((C89965 * (C90037 / C89854 -
                    ((C89965 * C90039 + C92322) * be) / C89849 + C90032) +
          C92348) *
         ae) /
            C89849 +
        C90039 / C89854 - ((C89965 * C90032 + C92186) * be) / C89849;
    const double C36368 =
        (C90037 / C89854 - ((C89965 * C90039 + C92322) * be) / C89849 +
         C90032) /
            C89854 +
        ((C89965 *
              (C90039 / C89854 - ((C89965 * C90032 + C92186) * be) / C89849) +
          C92349) *
         ae) /
            C89849 +
        2 * (C90032 / C89854 - (0 * be) / C89849);
    const double C36369 =
        (C90039 / C89854 - ((C89965 * C90032 + C92186) * be) / C89849) /
            C89854 +
        ((C89965 * (C90032 / C89854 - (0 * be) / C89849) + C44804) * ae) /
            C89849;
    const double C45029 =
        C90037 / C89854 - ((C89965 * C90039 + C92322) * be) / C89849 + C90032;
    const double C45030 =
        C90039 / C89854 - ((C89965 * C90032 + C92186) * be) / C89849;
    const double C31721 = C31720 * C92148;
    const double C71087 =
        ((((0 - (C89980 * C90066) / C89849) * ae) / C89849 - (0 * be) / C89858 +
          C89981 / C89849) /
             C89854 -
         ((C89980 * C90083 + 0) * be) / C89849) /
            C89854 +
        ((C89980 * (C90083 / C89854 -
                    ((C89980 * C90085 + C92323) * be) / C89849 + C90078) +
          C92350) *
         ae) /
            C89849 +
        C90085 / C89854 - ((C89980 * C90078 + C92212) * be) / C89849;
    const double C71088 =
        (C90083 / C89854 - ((C89980 * C90085 + C92323) * be) / C89849 +
         C90078) /
            C89854 +
        ((C89980 *
              (C90085 / C89854 - ((C89980 * C90078 + C92212) * be) / C89849) +
          C92351) *
         ae) /
            C89849 +
        2 * (C90078 / C89854 - (0 * be) / C89849);
    const double C71089 =
        (C90085 / C89854 - ((C89980 * C90078 + C92212) * be) / C89849) /
            C89854 +
        ((C89980 * (C90078 / C89854 - (0 * be) / C89849) + C80243) * ae) /
            C89849;
    const double C80688 =
        C90083 / C89854 - ((C89980 * C90085 + C92323) * be) / C89849 + C90078;
    const double C80689 =
        C90085 / C89854 - ((C89980 * C90078 + C92212) * be) / C89849;
    const double C67051 = C67050 * C92062;
    const double C90240 = C90227 + C90237;
    const double C41111 = C41098 * C92186;
    const double C86501 = C41098 * C92186;
    const double C902 =
        2 * C90275 - (ae * C90272) / C90107 + C90106 * C90303 -
        (C90248 * C90244 * ce) / C90107 +
        C90248 *
            (C90248 * (2 * C90300 - (ae * C90293) / C90107 +
                       C90106 * ((-(ae * C90106 * C90286) / C89892) / C89849 -
                                 C90283 / C90107 +
                                 C90106 * ((-(C90106 * std::pow(C90110, 7) *
                                              bs[7] * C90255) /
                                            C89892) /
                                               C89849 -
                                           (ae * C90286) / C90107))) -
             (C90244 * ce) / C90107);
    const double C1552 =
        2 * C90333 - (ae * C90330) / C90107 + C90106 * C90361 -
        (C90306 * C90244 * ce) / C90107 +
        C90306 *
            (C90306 * (2 * C90358 - (ae * C90351) / C90107 +
                       C90106 * ((-(ae * C90106 * C90344) / C89892) / C89849 -
                                 C90341 / C90107 +
                                 C90106 * ((-(C90106 * std::pow(C90110, 7) *
                                              bs[7] * C90313) /
                                            C89892) /
                                               C89849 -
                                           (ae * C90344) / C90107))) -
             (C90244 * ce) / C90107);
    const double C2062 =
        C90248 *
            (3 * C90303 + (C90301 * ae) / C89849 +
             C90106 * (2 * C90300 - (ae * C90293) / C90107 +
                       C90106 * ((-(ae * C90106 * C90286) / C89892) / C89849 -
                                 C90283 / C90107 +
                                 C90106 * ((-(C90106 * std::pow(C90110, 7) *
                                              bs[7] * C90255) /
                                            C89892) /
                                               C89849 -
                                           (ae * C90286) / C90107)))) -
        ((3 * C90179 + C90106 * C90244 + C90225 * ae) * ce) / C90107;
    const double C2852 =
        C90306 *
            (3 * C90361 + (C90359 * ae) / C89849 +
             C90106 * (2 * C90358 - (ae * C90351) / C90107 +
                       C90106 * ((-(ae * C90106 * C90344) / C89892) / C89849 -
                                 C90341 / C90107 +
                                 C90106 * ((-(C90106 * std::pow(C90110, 7) *
                                              bs[7] * C90313) /
                                            C89892) /
                                               C89849 -
                                           (ae * C90344) / C90107)))) -
        ((3 * C90179 + C90106 * C90244 + C90225 * ae) * ce) / C90107;
    const double C3520 =
        C90306 *
        (C90248 *
             (2 * C90300 - (ae * C90293) / C90107 +
              C90106 *
                  ((-(ae * C90106 * C90286) / C89892) / C89849 -
                   C90283 / C90107 +
                   C90106 * ((-(C90106 * std::pow(C90110, 7) * bs[7] * C90255) /
                              C89892) /
                                 C89849 -
                             (ae * C90286) / C90107))) -
         (C90244 * ce) / C90107);
    const double C3594 =
        C90306 * C90248 *
            (2 * C90358 - (ae * C90351) / C90107 +
             C90106 *
                 ((-(ae * C90106 * C90344) / C89892) / C89849 -
                  C90341 / C90107 +
                  C90106 * ((-(C90106 * std::pow(C90110, 7) * bs[7] * C90313) /
                             C89892) /
                                C89849 -
                            (ae * C90344) / C90107))) -
        (C90248 * C90244 * ce) / C90107;
    const double C123 = (4 * (2 * C90140 + C90106 * C90179 + C90160 * ae) +
                         C90106 * (3 * C90179 + C90106 * C90244 + C90225 * ae) +
                         (3 * C90160 + C90106 * C90225) * ae) /
                        C89849;
    const double C821 =
        (2 * C90140 + C90106 * C90179 + C90160 * ae + C90244 * C90420) / C89849;
    const double C1405 =
        (2 * C90140 + C90106 * C90179 + C90160 * ae + C90244 * C90542) / C89849;
    const double C1990 =
        (C90248 * (3 * C90179 + C90106 * C90244 + C90225 * ae)) / C89849;
    const double C2712 =
        (C90306 * (3 * C90179 + C90106 * C90244 + C90225 * ae)) / C89849;
    const double C3438 = (C90306 * C90248 * C90244) / C89849;
    const double C36897 =
        (4 * (2 * C90850 + C90248 * C90873 + C90862 * ae) +
         C90248 * (3 * C90873 + C90248 * C91363 + C91349 * ae) +
         (3 * C90862 + C90248 * C91349) * ae) /
        C89849;
    const double C37385 =
        (2 * C90850 + C90248 * C90873 + C90862 * ae + C91363 * C90542) / C89849;
    const double C39215 =
        (C90306 * (3 * C90873 + C90248 * C91363 + C91349 * ae)) / C89849;
    const double C72043 =
        (4 * (2 * C91158 + C90306 * C91181 + C91170 * ae) +
         C90306 * (3 * C91181 + C90306 * C91660 + C91638 * ae) +
         (3 * C91170 + C90306 * C91638) * ae) /
        C89849;
    const double C90245 = C90243 - C90224;
    const double C91364 = C91362 - C91348;
    const double C91661 = C91659 - C91637;
    const double C4915 = C92067 * C4893;
    const double C37727 = C92062 * C4893;
    const double C45566 = C92067 * C4893;
    const double C36689 = C92062 * C4895;
    const double C8546 = C92067 * C5789;
    const double C48878 = C92067 * C5789;
    const double C58254 = C92062 * C5789;
    const double C40317 = C92062 * C5793;
    const double C38961 = C92062 * C8542;
    const double C10994 = C92067 * C10972;
    const double C72813 = C92062 * C10972;
    const double C81655 = C92067 * C10972;
    const double C71699 = C92062 * C10974;
    const double C4447 = C4101 * C1090;
    const double C17457 = C92186 * C1090;
    const double C33903 = C92186 * C1090;
    const double C45150 = C44804 * C1090;
    const double C2299 = C92137 * C1091;
    const double C15158 = C92186 * C1091;
    const double C31612 = C92186 * C1091;
    const double C3015 = C92137 * C1669;
    const double C9830 = C92137 * C1675;
    const double C18398 = C92186 * C3737;
    const double C22415 = C92137 * C3737;
    const double C34835 = C92186 * C3737;
    const double C2630 = C92148 * C1325;
    const double C4802 = C92148 * C1331;
    const double C10210 = C9516 * C1914;
    const double C23831 = C92212 * C1914;
    const double C64937 = C92212 * C1914;
    const double C80901 = C80243 * C1914;
    const double C3359 = C92148 * C1915;
    const double C20495 = C92212 * C1915;
    const double C61632 = C92212 * C1915;
    const double C18822 = C92148 * C4021;
    const double C22852 = C92212 * C4021;
    const double C63967 = C92212 * C4021;
    const double C91359 = C91355 + C91356;
    const double C91656 = C91649 + C91653;
    const double C15170 = C15169 * C92148;
    const double C31624 = C31623 * C92148;
    const double C20120 = C20117 + C20119;
    const double C61260 = C61258 + C61259;
    const double C5697 = C5696 + C5688;
    const double C46228 = C46226 + C46227;
    const double C57408 = C57407 * C92062;
    const double C67241 = C67240 * C92062;
    const double C5039 = C5035 + C5036;
    const double C11120 = C11116 + C11117;
    const double C43000 = C42998 * C92099;
    const double C30223 = C8679 + C8680;
    const double C30222 = C8680 + C8679;
    const double C42993 = C42074 * C92099;
    const double C43930 = C39059 * C1986;
    const double C57558 = C39059 * C92099;
    const double C60133 = C39059 * C1985;
    const double C41212 = C40406 * C92099;
    const double C43936 = C40406 * C1985;
    const double C43934 = C40406 * C1986;
    const double C43938 = C40407 * C1986;
    const double C57559 = C40407 * C92099;
    const double C60135 = C39060 * C1986;
    const double C41227 = C41222 * C92099;
    const double C73493 = C41222 * C1986;
    const double C17121 = C14805 * C895;
    const double C33567 = C31259 * C895;
    const double C6693 = C92067 * C901;
    const double C15689 = C14805 * C901;
    const double C32139 = C31259 * C901;
    const double C47122 = C92067 * C901;
    const double C23078 = C14805 * C1476;
    const double C64193 = C31259 * C1476;
    const double C12970 = C92067 * C1482;
    const double C21364 = C14805 * C1482;
    const double C62501 = C31259 * C1482;
    const double C83407 = C92067 * C1482;
    const double C19044 = C14805 * C3519;
    const double C27787 = C92067 * C3519;
    const double C35463 = C31259 * C3519;
    const double C52702 = C92067 * C3519;
    const double C8678 = C92067 * C5875;
    const double C49006 = C92067 * C5875;
    const double C58358 = C92062 * C5875;
    const double C13973 = C92067 * C5878;
    const double C42073 = C92062 * C5878;
    const double C51710 = C92067 * C5878;
    const double C72888 = C72887 * C92099;
    const double C15073 = C15066 + C15067;
    const double C31527 = C31520 + C31521;
    const double C13204 = C2937 * C1984;
    const double C21542 = C2937 * C92078;
    const double C23292 = C2937 * C1983;
    const double C11318 = C9749 * C92078;
    const double C13206 = C9749 * C1983;
    const double C13200 = C9749 * C1984;
    const double C14197 = C12184 * C92078;
    const double C29267 = C18287 + C18288;
    const double C29265 = C18288 + C18287;
    const double C54192 = C34724 + C34725;
    const double C54190 = C34725 + C34724;
    const double C2211 = C92137 * C1027;
    const double C15059 = C92186 * C1027;
    const double C31513 = C92186 * C1027;
    const double C4353 = C4101 * C1033;
    const double C17345 = C92186 * C1033;
    const double C33791 = C92186 * C1033;
    const double C45056 = C44804 * C1033;
    const double C2933 = C92137 * C1611;
    const double C9747 = C92137 * C1617;
    const double C18284 = C92186 * C3667;
    const double C22310 = C92137 * C3667;
    const double C34721 = C92186 * C3667;
    const double C14199 = C12186 * C92078;
    const double C11340 = C11332 * C92078;
    const double C73027 = C11332 * C1984;
    const double C5141 = C5137 + C5138;
    const double C37894 = C37891 * C92110;
    const double C11224 = C11220 + C11221;
    const double C30355 = C8794 + C8793;
    const double C30354 = C8793 + C8794;
    const double C42182 = C42180 * C92110;
    const double C17228 = C14805 * C961;
    const double C33674 = C31259 * C961;
    const double C6805 = C92067 * C967;
    const double C15777 = C14805 * C967;
    const double C32227 = C31259 * C967;
    const double C47232 = C92067 * C967;
    const double C23189 = C14805 * C1545;
    const double C64304 = C31259 * C1545;
    const double C13088 = C92067 * C1551;
    const double C21460 = C14805 * C1551;
    const double C62597 = C31259 * C1551;
    const double C83513 = C92067 * C1551;
    const double C19147 = C14805 * C3593;
    const double C27923 = C92067 * C3593;
    const double C35566 = C31259 * C3593;
    const double C52838 = C92067 * C3593;
    const double C37895 = C37892 * C92110;
    const double C42183 = C42181 * C92110;
    const double C58462 = C58461 * C92110;
    const double C2385 = C2382 * C92110;
    const double C9923 = C9921 * C92110;
    const double C23495 = C9921 * C2710;
    const double C3109 = C3106 * C2710;
    const double C20197 = C3106 * C92110;
    const double C22520 = C22519 * C92110;
    const double C11534 = C11529 + C11530;
    const double C7251 = C2471 * C1984;
    const double C16085 = C2471 * C92078;
    const double C17673 = C2471 * C1983;
    const double C5475 = C4633 * C92078;
    const double C7257 = C4633 * C1983;
    const double C7255 = C4633 * C1984;
    const double C20314 = C20307 + C20308;
    const double C61451 = C61444 + C61445;
    const double C9207 = C8214 * C92078;
    const double C28473 = C22637 + C22638;
    const double C28471 = C22638 + C22637;
    const double C77533 = C63752 + C63753;
    const double C77531 = C63753 + C63752;
    const double C2467 = C92148 * C1209;
    const double C4631 = C92148 * C1215;
    const double C3189 = C92148 * C1793;
    const double C20300 = C92212 * C1793;
    const double C61437 = C92212 * C1793;
    const double C10024 = C9516 * C1799;
    const double C23609 = C92212 * C1799;
    const double C64715 = C92212 * C1799;
    const double C80715 = C80243 * C1799;
    const double C18614 = C92148 * C3881;
    const double C22634 = C92212 * C3881;
    const double C63749 = C92212 * C3881;
    const double C5498 = C5489 * C92078;
    const double C38163 = C5489 * C1984;
    const double C9201 = C8216 * C92078;
    const double C57317 = C26438 + C26439;
    const double C67144 = C67140 + C67141;
    const double C4723 = C4721 * C92099;
    const double C17777 = C4721 * C1986;
    const double C2561 = C2558 * C1986;
    const double C15417 = C2558 * C92099;
    const double C3277 = C3274 * C92099;
    const double C18719 = C18718 * C92099;
    const double C8323 = C8320 + C8321;
    const double C26441 = C26434 + C26435;
    const double C68781 = C68778 + C68779;
    const double C12632 = C12626 + C12627;
    const double C29815 = C29812 + C29813;
    const double C78861 = C78858 + C78859;
    const double C83088 = C83082 + C83083;
    const double C45584 = C45571 + C45572;
    const double C45582 = C45567 + C45568;
    const double C45579 = C45561 + C45562;
    const double C45577 = C45557 + C45558;
    const double C45575 = C45553 + C45554;
    const double C45573 = C45549 + C45550;
    const double C45680 = C45672 + C45673;
    const double C45678 = C45668 + C45669;
    const double C45677 = C45666 + C45667;
    const double C45775 = C45768 + C45769;
    const double C45772 = C45762 + C45763;
    const double C45770 = C45757 + C45758;
    const double C47016 = C47007 + C47008;
    const double C47014 = C47003 + C47004;
    const double C47012 = C46999 + C47000;
    const double C47010 = C46995 + C46996;
    const double C47125 = C47119 + C47120;
    const double C47123 = C47115 + C47116;
    const double C47235 = C47229 + C47230;
    const double C47233 = C47225 + C47226;
    const double C48900 = C48891 + C48892;
    const double C48898 = C48887 + C48888;
    const double C48896 = C48883 + C48884;
    const double C48894 = C48879 + C48880;
    const double C49009 = C49003 + C49004;
    const double C49007 = C48999 + C49000;
    const double C49120 = C49115 + C49116;
    const double C49118 = C49111 + C49112;
    const double C51606 = C51593 + C51594;
    const double C51604 = C51589 + C51590;
    const double C51602 = C51585 + C51586;
    const double C51600 = C51581 + C51582;
    const double C51597 = C51575 + C51576;
    const double C51595 = C51571 + C51572;
    const double C51722 = C51715 + C51716;
    const double C51720 = C51711 + C51712;
    const double C51717 = C51705 + C51706;
    const double C51837 = C51829 + C51830;
    const double C51835 = C51825 + C51826;
    const double C51834 = C51823 + C51824;
    const double C52568 = C52563 + C52564;
    const double C52566 = C52559 + C52560;
    const double C52703 = C52699 + C52700;
    const double C52839 = C52835 + C52836;
    const double C53786 = C53781 + C53782;
    const double C53784 = C53777 + C53778;
    const double C53922 = C53919 + C53920;
    const double C54057 = C54053 + C54054;
    const double C81667 = C81660 + C81661;
    const double C81665 = C81656 + C81657;
    const double C81752 = C81748 + C81749;
    const double C81834 = C81830 + C81831;
    const double C83307 = C83302 + C83303;
    const double C83305 = C83298 + C83299;
    const double C83411 = C83408 + C83409;
    const double C83514 = C83510 + C83511;
    const double C15590 = C14808 * C806;
    const double C15584 = C14808 * C822;
    const double C15574 = C14808 * C813;
    const double C15568 = C14808 * C805;
    const double C15684 = C14808 * C891;
    const double C15682 = C14808 * C890;
    const double C15780 = C14808 * C957;
    const double C15770 = C14808 * C956;
    const double C17010 = C14808 * C812;
    const double C17004 = C14808 * C804;
    const double C17116 = C14808 * C889;
    const double C17223 = C14808 * C955;
    const double C18933 = C14808 * C3431;
    const double C18927 = C14808 * C3439;
    const double C19039 = C14808 * C3513;
    const double C19150 = C14808 * C3587;
    const double C21269 = C14808 * C1390;
    const double C21263 = C14808 * C1406;
    const double C21253 = C14808 * C1397;
    const double C21247 = C14808 * C1389;
    const double C21367 = C14808 * C1472;
    const double C21357 = C14808 * C1471;
    const double C21455 = C14808 * C1541;
    const double C21453 = C14808 * C1540;
    const double C22971 = C14808 * C1396;
    const double C22965 = C14808 * C1388;
    const double C23081 = C14808 * C1470;
    const double C23184 = C14808 * C1539;
    const double C15588 = C14809 * C807;
    const double C15582 = C14809 * C823;
    const double C15576 = C14809 * C812;
    const double C15570 = C14809 * C804;
    const double C15686 = C14809 * C892;
    const double C15680 = C14809 * C889;
    const double C15778 = C14809 * C958;
    const double C15772 = C14809 * C955;
    const double C17008 = C14809 * C811;
    const double C17002 = C14809 * C803;
    const double C17118 = C14809 * C888;
    const double C17225 = C14809 * C954;
    const double C18931 = C14809 * C3432;
    const double C18925 = C14809 * C3440;
    const double C19041 = C14809 * C3514;
    const double C19148 = C14809 * C3588;
    const double C21267 = C14809 * C1391;
    const double C21261 = C14809 * C1407;
    const double C21255 = C14809 * C1396;
    const double C21249 = C14809 * C1388;
    const double C21365 = C14809 * C1473;
    const double C21359 = C14809 * C1470;
    const double C21457 = C14809 * C1542;
    const double C21451 = C14809 * C1539;
    const double C22969 = C14809 * C1395;
    const double C22963 = C14809 * C1387;
    const double C23079 = C14809 * C1469;
    const double C23186 = C14809 * C1538;
    const double C32040 = C31262 * C806;
    const double C32034 = C31262 * C822;
    const double C32024 = C31262 * C813;
    const double C32018 = C31262 * C805;
    const double C32134 = C31262 * C891;
    const double C32132 = C31262 * C890;
    const double C32230 = C31262 * C957;
    const double C32220 = C31262 * C956;
    const double C33456 = C31262 * C812;
    const double C33450 = C31262 * C804;
    const double C33562 = C31262 * C889;
    const double C33669 = C31262 * C955;
    const double C35352 = C31262 * C3431;
    const double C35346 = C31262 * C3439;
    const double C35458 = C31262 * C3513;
    const double C35569 = C31262 * C3587;
    const double C62406 = C31262 * C1390;
    const double C62400 = C31262 * C1406;
    const double C62390 = C31262 * C1397;
    const double C62384 = C31262 * C1389;
    const double C62504 = C31262 * C1472;
    const double C62494 = C31262 * C1471;
    const double C62592 = C31262 * C1541;
    const double C62590 = C31262 * C1540;
    const double C64086 = C31262 * C1396;
    const double C64080 = C31262 * C1388;
    const double C64196 = C31262 * C1470;
    const double C64299 = C31262 * C1539;
    const double C32038 = C31263 * C807;
    const double C32032 = C31263 * C823;
    const double C32026 = C31263 * C812;
    const double C32020 = C31263 * C804;
    const double C32136 = C31263 * C892;
    const double C32130 = C31263 * C889;
    const double C32228 = C31263 * C958;
    const double C32222 = C31263 * C955;
    const double C33454 = C31263 * C811;
    const double C33448 = C31263 * C803;
    const double C33564 = C31263 * C888;
    const double C33671 = C31263 * C954;
    const double C35350 = C31263 * C3432;
    const double C35344 = C31263 * C3440;
    const double C35460 = C31263 * C3514;
    const double C35567 = C31263 * C3588;
    const double C62404 = C31263 * C1391;
    const double C62398 = C31263 * C1407;
    const double C62392 = C31263 * C1396;
    const double C62386 = C31263 * C1388;
    const double C62502 = C31263 * C1473;
    const double C62496 = C31263 * C1470;
    const double C62594 = C31263 * C1542;
    const double C62588 = C31263 * C1539;
    const double C64084 = C31263 * C1395;
    const double C64078 = C31263 * C1387;
    const double C64194 = C31263 * C1469;
    const double C64301 = C31263 * C1538;
    const double C4937 = C4935 * C92078;
    const double C4936 = C4934 * C801;
    const double C5126 = C4934 * C244;
    const double C30089 = C30085 * C801;
    const double C30086 = C30082 * C801;
    const double C30088 = C30084 * C92078;
    const double C30087 = C30083 * C92078;
    const double C11016 = C11014 * C92078;
    const double C11015 = C11013 * C801;
    const double C11105 = C11013 * C181;
    const double C45051 = C45029 * C119;
    const double C45045 = C45029 * C109;
    const double C45043 = C45029 * C118;
    const double C45037 = C45029 * C108;
    const double C45153 = C45029 * C184;
    const double C45143 = C45029 * C183;
    const double C45245 = C45029 * C247;
    const double C45235 = C45029 * C246;
    const double C47341 = C45029 * C812;
    const double C47335 = C45029 * C804;
    const double C47455 = C45029 * C889;
    const double C47562 = C45029 * C955;
    const double C48259 = C45029 * C1396;
    const double C48253 = C45029 * C1388;
    const double C48369 = C45029 * C1470;
    const double C48480 = C45029 * C1539;
    const double C57731 = C45029 * C1390;
    const double C57725 = C45029 * C1406;
    const double C57715 = C45029 * C1397;
    const double C57709 = C45029 * C1389;
    const double C57829 = C45029 * C1472;
    const double C57819 = C45029 * C1471;
    const double C57917 = C45029 * C1541;
    const double C57915 = C45029 * C1540;
    const double C60342 = C45029 * C3439;
    const double C60336 = C45029 * C3431;
    const double C60456 = C45029 * C3513;
    const double C60559 = C45029 * C3587;
    const double C45053 = C45030 * C811;
    const double C45047 = C45030 * C803;
    const double C45041 = C45030 * C812;
    const double C45035 = C45030 * C804;
    const double C45151 = C45030 * C888;
    const double C45145 = C45030 * C889;
    const double C45243 = C45030 * C954;
    const double C45237 = C45030 * C955;
    const double C47343 = C45030 * C823;
    const double C47337 = C45030 * C807;
    const double C47453 = C45030 * C892;
    const double C47560 = C45030 * C958;
    const double C48261 = C45030 * C3440;
    const double C48255 = C45030 * C3432;
    const double C48371 = C45030 * C3514;
    const double C48478 = C45030 * C3588;
    const double C57729 = C45030 * C5773;
    const double C57723 = C45030 * C5783;
    const double C57717 = C45030 * C3439;
    const double C57711 = C45030 * C3431;
    const double C57827 = C45030 * C5871;
    const double C57821 = C45030 * C3513;
    const double C57919 = C45030 * C5955;
    const double C57913 = C45030 * C3587;
    const double C60344 = C45030 * C5778;
    const double C60338 = C45030 * C5772;
    const double C60454 = C45030 * C5870;
    const double C60561 = C45030 * C5958;
    const double C80710 = C80688 * C119;
    const double C80704 = C80688 * C109;
    const double C80702 = C80688 * C118;
    const double C80696 = C80688 * C108;
    const double C80812 = C80688 * C184;
    const double C80802 = C80688 * C183;
    const double C80904 = C80688 * C247;
    const double C80894 = C80688 * C246;
    const double C82972 = C80688 * C812;
    const double C82966 = C80688 * C804;
    const double C83086 = C80688 * C889;
    const double C83193 = C80688 * C955;
    const double C83914 = C80688 * C1396;
    const double C83908 = C80688 * C1388;
    const double C84024 = C80688 * C1470;
    const double C84135 = C80688 * C1539;
    const double C86228 = C80688 * C806;
    const double C86222 = C80688 * C822;
    const double C86212 = C80688 * C813;
    const double C86206 = C80688 * C805;
    const double C86322 = C80688 * C891;
    const double C86320 = C80688 * C890;
    const double C86418 = C80688 * C957;
    const double C86408 = C80688 * C956;
    const double C89616 = C80688 * C3431;
    const double C89610 = C80688 * C3439;
    const double C89722 = C80688 * C3513;
    const double C89833 = C80688 * C3587;
    const double C80712 = C80689 * C1395;
    const double C80706 = C80689 * C1387;
    const double C80700 = C80689 * C1396;
    const double C80694 = C80689 * C1388;
    const double C80810 = C80689 * C1469;
    const double C80804 = C80689 * C1470;
    const double C80902 = C80689 * C1538;
    const double C80896 = C80689 * C1539;
    const double C82974 = C80689 * C3440;
    const double C82968 = C80689 * C3432;
    const double C83084 = C80689 * C3514;
    const double C83191 = C80689 * C3588;
    const double C83916 = C80689 * C1407;
    const double C83910 = C80689 * C1391;
    const double C84026 = C80689 * C1473;
    const double C84133 = C80689 * C1542;
    const double C86226 = C80689 * C5772;
    const double C86220 = C80689 * C5778;
    const double C86214 = C80689 * C3439;
    const double C86208 = C80689 * C3431;
    const double C86324 = C80689 * C5870;
    const double C86318 = C80689 * C3513;
    const double C86416 = C80689 * C5958;
    const double C86410 = C80689 * C3587;
    const double C89614 = C80689 * C5773;
    const double C89608 = C80689 * C5783;
    const double C89724 = C80689 * C5871;
    const double C89831 = C80689 * C5955;
    const double C41126 = C41125 + C41111;
    const double C86502 = C86500 + C86501;
    const double C130 =
        4 * (2 * C90177 - (ae * C90178) / C90107 - (C90179 * ce) / C90107 +
             C90106 * C90240) +
        (((-3 * C90178) / C89892 + C90106 * C90245 - (C90225 * ce) / C89892) *
         ae) /
            C89849 -
        ((3 * C90179 + C90106 * C90244 + C90225 * ae) * ce) / C90107 +
        C90106 *
            (3 * C90240 + (C90245 * ae) / C89849 - (C90244 * ce) / C90107 +
             C90106 *
                 (2 * C90234 - (ae * C90235) / C90107 - (C90236 * ce) / C90107 +
                  C90106 * ((-(ae * C90223) / C89892) / C89849 -
                            C90222 / C90107 - (C90226 * ce) / C90107 +
                            C90106 * ((-(C90210 * ce) / C89892) / C89849 -
                                      (ae * C90207) / C90107 -
                                      (C90106 *
                                       (C90187 * C90188 +
                                        C90114 * bs[7] * std::pow(C90110, 7)) *
                                       C90115) /
                                          C90107))));
    const double C1034 =
        2 * C90390 - (C90387 * ce) / C90107 + C90106 * C90416 +
        (C90248 * C90245 * ae) / C89849 +
        C90248 *
            ((C90245 * ae) / C89849 +
             C90248 * (2 * C90414 - (C90407 * ce) / C90107 +
                       C90106 * ((-(C90106 * C90401 * ce) / C89892) / C89849 -
                                 C90398 / C90107 +
                                 C90106 * ((-(C90106 * std::pow(C90110, 7) *
                                              bs[7] * C90370) /
                                            C89892) /
                                               C89849 -
                                           (C90401 * ce) / C90107))));
    const double C1800 =
        2 * C90491 - (C90488 * ce) / C90107 + C90106 * C90517 +
        (C90306 * C90245 * ae) / C89849 +
        C90306 *
            ((C90245 * ae) / C89849 +
             C90306 * (2 * C90515 - (C90508 * ce) / C90107 +
                       C90106 * ((-(C90106 * C90502 * ce) / C89892) / C89849 -
                                 C90499 / C90107 +
                                 C90106 * ((-(C90106 * std::pow(C90110, 7) *
                                              bs[7] * C90471) /
                                            C89892) /
                                               C89849 -
                                           (C90502 * ce) / C90107))));
    const double C1992 =
        3 * ((-(ae * C90248 * C90169) / C89892) / C89849 - C90565 / C90107 -
             (C90248 * C90170 * ce) / C90107 + C90106 * C90733) +
        (C90248 * C90245 * ae) / C89849 - (C90248 * C90244 * ce) / C90107 +
        C90106 *
            (2 * C90733 - (ae * C90248 * C90235) / C90107 -
             (C90248 * C90236 * ce) / C90107 +
             C90106 * ((-(ae * C90248 * C90223) / C89892) / C89849 -
                       C90723 / C90107 - (C90248 * C90226 * ce) / C90107 +
                       C90106 * ((-(C90248 * C90210 * ce) / C89892) / C89849 -
                                 (ae * C90248 * C90207) / C90107 -
                                 (C90106 * C90248 *
                                  (C90187 * C90188 +
                                   C90114 * bs[7] * std::pow(C90110, 7)) *
                                  C90115) /
                                     C90107)));
    const double C2198 =
        (((-3 * C90178) / C89892 + C90106 * C90245 - (C90225 * ce) / C89892) *
         ae) /
            C89849 +
        C90248 *
            (3 * C90416 - (C90413 * ce) / C90107 +
             C90106 * (2 * C90414 - (C90407 * ce) / C90107 +
                       C90106 * ((-(C90106 * C90401 * ce) / C89892) / C89849 -
                                 C90398 / C90107 +
                                 C90106 * ((-(C90106 * std::pow(C90110, 7) *
                                              bs[7] * C90370) /
                                            C89892) /
                                               C89849 -
                                           (C90401 * ce) / C90107))));
    const double C2714 =
        3 * ((-(ae * C90306 * C90169) / C89892) / C89849 - C90643 / C90107 -
             (C90306 * C90170 * ce) / C90107 + C90106 * C90755) +
        (C90306 * C90245 * ae) / C89849 - (C90306 * C90244 * ce) / C90107 +
        C90106 *
            (2 * C90755 - (ae * C90306 * C90235) / C90107 -
             (C90306 * C90236 * ce) / C90107 +
             C90106 * ((-(ae * C90306 * C90223) / C89892) / C89849 -
                       C90745 / C90107 - (C90306 * C90226 * ce) / C90107 +
                       C90106 * ((-(C90306 * C90210 * ce) / C89892) / C89849 -
                                 (ae * C90306 * C90207) / C90107 -
                                 (C90106 * C90306 *
                                  (C90187 * C90188 +
                                   C90114 * bs[7] * std::pow(C90110, 7)) *
                                  C90115) /
                                     C90107)));
    const double C3176 =
        (((-3 * C90178) / C89892 + C90106 * C90245 - (C90225 * ce) / C89892) *
         ae) /
            C89849 +
        C90306 *
            (3 * C90517 - (C90514 * ce) / C90107 +
             C90106 * (2 * C90515 - (C90508 * ce) / C90107 +
                       C90106 * ((-(C90106 * C90502 * ce) / C89892) / C89849 -
                                 C90499 / C90107 +
                                 C90106 * ((-(C90106 * std::pow(C90110, 7) *
                                              bs[7] * C90471) /
                                            C89892) /
                                               C89849 -
                                           (C90502 * ce) / C90107))));
    const double C3668 =
        (C90306 * C90245 * ae) / C89849 +
        C90248 * C90306 *
            (2 * C90414 - (C90407 * ce) / C90107 +
             C90106 *
                 ((-(C90106 * C90401 * ce) / C89892) / C89849 -
                  C90398 / C90107 +
                  C90106 * ((-(C90106 * std::pow(C90110, 7) * bs[7] * C90370) /
                             C89892) /
                                C89849 -
                            (C90401 * ce) / C90107)));
    const double C3882 =
        (C90248 * C90245 * ae) / C89849 +
        C90306 * C90248 *
            (2 * C90515 - (C90508 * ce) / C90107 +
             C90106 *
                 ((-(C90106 * C90502 * ce) / C89892) / C89849 -
                  C90499 / C90107 +
                  C90106 * ((-(C90106 * std::pow(C90110, 7) * bs[7] * C90471) /
                             C89892) /
                                C89849 -
                            (C90502 * ce) / C90107)));
    const double C124 =
        4 * ((-2 * C90139) / C89892 - (C90106 * C90178) / C89892 -
             (C90160 * ce) / C89892) +
        C90106 * ((-3 * C90178) / C89892 + C90106 * C90245 -
                  (C90225 * ce) / C89892) -
        ((3 * C90160 + C90106 * C90225) * ce) / C89892;
    const double C825 = (-2 * C90139) / C89892 - (C90106 * C90178) / C89892 -
                        (C90160 * ce) / C89892 + C90245 * C90420;
    const double C1409 = (-2 * C90139) / C89892 - (C90106 * C90178) / C89892 -
                         (C90160 * ce) / C89892 + C90245 * C90542;
    const double C1991 = C90248 * ((-3 * C90178) / C89892 + C90106 * C90245 -
                                   (C90225 * ce) / C89892);
    const double C2713 = C90306 * ((-3 * C90178) / C89892 + C90106 * C90245 -
                                   (C90225 * ce) / C89892);
    const double C3442 = C90306 * C90248 * C90245;
    const double C37591 =
        2 * C90944 - (C90941 * ce) / C90107 + C90248 * C91408 +
        (C90306 * C91364 * ae) / C89849 +
        C90306 *
            ((C91364 * ae) / C89849 +
             C90306 * (2 * C91406 - (C91398 * ce) / C90107 +
                       C90248 * ((-(C90248 * C90502 * ce) / C89892) / C89849 -
                                 C90533 / C90107 +
                                 C90248 * ((-(C90248 * std::pow(C90110, 7) *
                                              bs[7] * C90523) /
                                            C89892) /
                                               C89849 -
                                           (C90502 * ce) / C90107))));
    const double C39283 =
        3 * ((-(ae * C90306 * C90860) / C89892) / C89849 - C91051 / C90107 -
             (C90306 * C90863 * ce) / C90107 + C90248 * C91465) +
        (C90306 * C91364 * ae) / C89849 - (C90306 * C91363 * ce) / C90107 +
        C90248 *
            (2 * C91465 - (ae * C90306 * C91353) / C90107 -
             (C90306 * C91354 * ce) / C90107 +
             C90248 * ((-(ae * C90306 * C91333) / C89892) / C89849 -
                       C91459 / C90107 - (C90306 * C91336 * ce) / C90107 +
                       C90248 * ((-(C90306 * C90401 * ce) / C89892) / C89849 -
                                 (ae * C90306 * C90286) / C90107 -
                                 (C90248 * C90306 *
                                  (C90187 * C90188 +
                                   C90420 * bs[7] * std::pow(C90110, 7)) *
                                  C90115) /
                                     C90107)));
    const double C39493 =
        (((-3 * C90872) / C89892 + C90248 * C91364 - (C91349 * ce) / C89892) *
         ae) /
            C89849 +
        C90306 *
            (3 * C91408 - (C91404 * ce) / C90107 +
             C90248 * (2 * C91406 - (C91398 * ce) / C90107 +
                       C90248 * ((-(C90248 * C90502 * ce) / C89892) / C89849 -
                                 C90533 / C90107 +
                                 C90248 * ((-(C90248 * std::pow(C90110, 7) *
                                              bs[7] * C90523) /
                                            C89892) /
                                               C89849 -
                                           (C90502 * ce) / C90107))));
    const double C36759 =
        4 * ((-2 * C90849) / C89892 - (C90248 * C90872) / C89892 -
             (C90862 * ce) / C89892) +
        C90248 * ((-3 * C90872) / C89892 + C90248 * C91364 -
                  (C91349 * ce) / C89892) -
        ((3 * C90862 + C90248 * C91349) * ce) / C89892;
    const double C37281 = (-2 * C90849) / C89892 - (C90248 * C90872) / C89892 -
                          (C90862 * ce) / C89892 + C91364 * C90542;
    const double C39049 = C90306 * ((-3 * C90872) / C89892 + C90248 * C91364 -
                                    (C91349 * ce) / C89892);
    const double C71816 =
        4 * ((-2 * C91157) / C89892 - (C90306 * C91180) / C89892 -
             (C91170 * ce) / C89892) +
        C90306 * ((-3 * C91180) / C89892 + C90306 * C91661 -
                  (C91638 * ce) / C89892) -
        ((3 * C91170 + C90306 * C91638) * ce) / C89892;
    const double C4930 = C4914 + C4915;
    const double C37733 = C37726 + C37727;
    const double C45581 = C45565 + C45566;
    const double C36698 = C36688 + C36689;
    const double C8561 = C8545 + C8546;
    const double C48893 = C48877 + C48878;
    const double C58256 = C58253 + C58254;
    const double C40322 = C40316 + C40317;
    const double C38972 = C38960 + C38961;
    const double C11009 = C10993 + C10994;
    const double C72815 = C72812 + C72813;
    const double C81664 = C81654 + C81655;
    const double C71703 = C71698 + C71699;
    const double C4455 = C4446 + C4447;
    const double C17462 = C17456 + C17457;
    const double C33908 = C33902 + C33903;
    const double C45158 = C45149 + C45150;
    const double C2302 = C2298 + C2299;
    const double C15165 = C15157 + C15158;
    const double C31619 = C31611 + C31612;
    const double C3018 = C3014 + C3015;
    const double C9833 = C9829 + C9830;
    const double C18402 = C18397 + C18398;
    const double C22416 = C22414 + C22415;
    const double C34839 = C34834 + C34835;
    const double C2638 = C2629 + C2630;
    const double C4805 = C4801 + C4802;
    const double C10218 = C10209 + C10210;
    const double C23836 = C23830 + C23831;
    const double C64942 = C64936 + C64937;
    const double C80909 = C80900 + C80901;
    const double C3362 = C3358 + C3359;
    const double C20502 = C20494 + C20495;
    const double C61639 = C61631 + C61632;
    const double C18823 = C18821 + C18822;
    const double C22859 = C22851 + C22852;
    const double C63974 = C63966 + C63967;
    const double C36949 =
        4 * (2 * C90871 - (ae * C90872) / C90107 - (C90873 * ce) / C90107 +
             C90248 * C91359) +
        (((-3 * C90872) / C89892 + C90248 * C91364 - (C91349 * ce) / C89892) *
         ae) /
            C89849 -
        ((3 * C90873 + C90248 * C91363 + C91349 * ae) * ce) / C90107 +
        C90248 *
            (3 * C91359 + (C91364 * ae) / C89849 - (C91363 * ce) / C90107 +
             C90248 *
                 (2 * C91352 - (ae * C91353) / C90107 - (C91354 * ce) / C90107 +
                  C90248 * ((-(ae * C91333) / C89892) / C89849 -
                            C90436 / C90107 - (C91336 * ce) / C90107 +
                            C90248 * ((-(C90401 * ce) / C89892) / C89849 -
                                      (ae * C90286) / C90107 -
                                      (C90248 *
                                       (C90187 * C90188 +
                                        C90420 * bs[7] * std::pow(C90110, 7)) *
                                       C90115) /
                                          C90107))));
    const double C72146 =
        4 * (2 * C91179 - (ae * C91180) / C90107 - (C91181 * ce) / C90107 +
             C90306 * C91656) +
        (((-3 * C91180) / C89892 + C90306 * C91661 - (C91638 * ce) / C89892) *
         ae) /
            C89849 -
        ((3 * C91181 + C90306 * C91660 + C91638 * ae) * ce) / C90107 +
        C90306 *
            (3 * C91656 + (C91661 * ae) / C89849 - (C91660 * ce) / C90107 +
             C90306 *
                 (2 * C91650 - (ae * C91651) / C90107 - (C91652 * ce) / C90107 +
                  C90306 * ((-(ae * C91635) / C89892) / C89849 -
                            C90558 / C90107 - (C91639 * ce) / C90107 +
                            C90306 * ((-(C90502 * ce) / C89892) / C89849 -
                                      (ae * C90344) / C90107 -
                                      (C90306 *
                                       (C90187 * C90188 +
                                        C90542 * bs[7] * std::pow(C90110, 7)) *
                                       C90115) /
                                          C90107))));
    const double C11121 = C11120 * C92099;
    const double C41221 = C41211 + C41212;
    const double C17124 = C17120 + C17121;
    const double C33570 = C33566 + C33567;
    const double C6697 = C6692 + C6693;
    const double C15695 = C15688 + C15689;
    const double C32145 = C32138 + C32139;
    const double C47126 = C47121 + C47122;
    const double C23083 = C23077 + C23078;
    const double C64198 = C64192 + C64193;
    const double C12977 = C12969 + C12970;
    const double C21372 = C21363 + C21364;
    const double C62509 = C62500 + C62501;
    const double C83410 = C83406 + C83407;
    const double C19047 = C19043 + C19044;
    const double C27789 = C27786 + C27787;
    const double C35466 = C35462 + C35463;
    const double C52704 = C52701 + C52702;
    const double C8682 = C8677 + C8678;
    const double C49010 = C49005 + C49006;
    const double C58359 = C58357 + C58358;
    const double C13976 = C13972 + C13973;
    const double C42075 = C42072 + C42073;
    const double C51719 = C51709 + C51710;
    const double C11331 = C11317 + C11318;
    const double C2217 = C2210 + C2211;
    const double C15071 = C15058 + C15059;
    const double C31525 = C31512 + C31513;
    const double C4365 = C4352 + C4353;
    const double C17353 = C17344 + C17345;
    const double C33799 = C33790 + C33791;
    const double C45068 = C45055 + C45056;
    const double C2939 = C2932 + C2933;
    const double C9751 = C9746 + C9747;
    const double C18292 = C18283 + C18284;
    const double C22312 = C22309 + C22310;
    const double C34729 = C34720 + C34721;
    const double C5142 = C5141 * C92110;
    const double C17231 = C17227 + C17228;
    const double C33677 = C33673 + C33674;
    const double C6809 = C6804 + C6805;
    const double C15785 = C15776 + C15777;
    const double C32235 = C32226 + C32227;
    const double C47236 = C47231 + C47232;
    const double C23192 = C23188 + C23189;
    const double C64307 = C64303 + C64304;
    const double C13092 = C13087 + C13088;
    const double C21466 = C21459 + C21460;
    const double C62603 = C62596 + C62597;
    const double C83515 = C83512 + C83513;
    const double C19152 = C19146 + C19147;
    const double C27925 = C27922 + C27923;
    const double C35571 = C35565 + C35566;
    const double C52840 = C52837 + C52838;
    const double C13417 = C11534 * C2710;
    const double C5488 = C5474 + C5475;
    const double C2473 = C2466 + C2467;
    const double C4635 = C4630 + C4631;
    const double C3195 = C3188 + C3189;
    const double C20312 = C20299 + C20300;
    const double C61449 = C61436 + C61437;
    const double C10036 = C10023 + C10024;
    const double C23617 = C23608 + C23609;
    const double C64723 = C64714 + C64715;
    const double C80727 = C80714 + C80715;
    const double C18616 = C18613 + C18614;
    const double C22642 = C22633 + C22634;
    const double C63757 = C63748 + C63749;
    const double C8325 = C8323 * C92099;
    const double C45586 = C45579 + C45580;
    const double C45585 = C45577 + C45578;
    const double C45682 = C45678 + C45679;
    const double C45776 = C45772 + C45773;
    const double C54986 = C48899 + C48900;
    const double C54983 = C48900 + C48899;
    const double C54985 = C48897 + C48898;
    const double C54984 = C48898 + C48897;
    const double C55124 = C49007 + C49008;
    const double C55123 = C49008 + C49007;
    const double C55256 = C49118 + C49117;
    const double C55255 = C49117 + C49118;
    const double C81652 = C51606 + C51605;
    const double C81653 = C51604 + C51603;
    const double C81745 = C51722 + C51721;
    const double C81829 = C51835 + C51836;
    const double C15603 = C15590 + C15591;
    const double C15600 = C15584 + C15585;
    const double C15595 = C15574 + C15575;
    const double C15592 = C15568 + C15569;
    const double C15693 = C15684 + C15685;
    const double C15692 = C15682 + C15683;
    const double C15787 = C15780 + C15781;
    const double C15782 = C15770 + C15771;
    const double C17017 = C17010 + C17011;
    const double C17014 = C17004 + C17005;
    const double C17122 = C17116 + C17117;
    const double C17229 = C17223 + C17224;
    const double C18940 = C18933 + C18934;
    const double C18937 = C18927 + C18928;
    const double C19045 = C19039 + C19040;
    const double C19154 = C19150 + C19151;
    const double C21282 = C21269 + C21270;
    const double C21279 = C21263 + C21264;
    const double C21274 = C21253 + C21254;
    const double C21271 = C21247 + C21248;
    const double C21374 = C21367 + C21368;
    const double C21369 = C21357 + C21358;
    const double C21464 = C21455 + C21456;
    const double C21463 = C21453 + C21454;
    const double C22978 = C22971 + C22972;
    const double C22975 = C22965 + C22966;
    const double C23085 = C23081 + C23082;
    const double C23190 = C23184 + C23185;
    const double C15602 = C15588 + C15589;
    const double C15599 = C15582 + C15583;
    const double C15596 = C15576 + C15577;
    const double C15593 = C15570 + C15571;
    const double C15694 = C15686 + C15687;
    const double C15691 = C15680 + C15681;
    const double C15786 = C15778 + C15779;
    const double C15783 = C15772 + C15773;
    const double C17016 = C17008 + C17009;
    const double C17013 = C17002 + C17003;
    const double C17123 = C17118 + C17119;
    const double C17230 = C17225 + C17226;
    const double C18939 = C18931 + C18932;
    const double C18936 = C18925 + C18926;
    const double C19046 = C19041 + C19042;
    const double C19153 = C19148 + C19149;
    const double C21281 = C21267 + C21268;
    const double C21278 = C21261 + C21262;
    const double C21275 = C21255 + C21256;
    const double C21272 = C21249 + C21250;
    const double C21373 = C21365 + C21366;
    const double C21370 = C21359 + C21360;
    const double C21465 = C21457 + C21458;
    const double C21462 = C21451 + C21452;
    const double C22977 = C22969 + C22970;
    const double C22974 = C22963 + C22964;
    const double C23084 = C23079 + C23080;
    const double C23191 = C23186 + C23187;
    const double C32053 = C32040 + C32041;
    const double C32050 = C32034 + C32035;
    const double C32045 = C32024 + C32025;
    const double C32042 = C32018 + C32019;
    const double C32143 = C32134 + C32135;
    const double C32142 = C32132 + C32133;
    const double C32237 = C32230 + C32231;
    const double C32232 = C32220 + C32221;
    const double C33463 = C33456 + C33457;
    const double C33460 = C33450 + C33451;
    const double C33568 = C33562 + C33563;
    const double C33675 = C33669 + C33670;
    const double C35359 = C35352 + C35353;
    const double C35356 = C35346 + C35347;
    const double C35464 = C35458 + C35459;
    const double C35573 = C35569 + C35570;
    const double C62419 = C62406 + C62407;
    const double C62416 = C62400 + C62401;
    const double C62411 = C62390 + C62391;
    const double C62408 = C62384 + C62385;
    const double C62511 = C62504 + C62505;
    const double C62506 = C62494 + C62495;
    const double C62601 = C62592 + C62593;
    const double C62600 = C62590 + C62591;
    const double C64093 = C64086 + C64087;
    const double C64090 = C64080 + C64081;
    const double C64200 = C64196 + C64197;
    const double C64305 = C64299 + C64300;
    const double C32052 = C32038 + C32039;
    const double C32049 = C32032 + C32033;
    const double C32046 = C32026 + C32027;
    const double C32043 = C32020 + C32021;
    const double C32144 = C32136 + C32137;
    const double C32141 = C32130 + C32131;
    const double C32236 = C32228 + C32229;
    const double C32233 = C32222 + C32223;
    const double C33462 = C33454 + C33455;
    const double C33459 = C33448 + C33449;
    const double C33569 = C33564 + C33565;
    const double C33676 = C33671 + C33672;
    const double C35358 = C35350 + C35351;
    const double C35355 = C35344 + C35345;
    const double C35465 = C35460 + C35461;
    const double C35572 = C35567 + C35568;
    const double C62418 = C62404 + C62405;
    const double C62415 = C62398 + C62399;
    const double C62412 = C62392 + C62393;
    const double C62409 = C62386 + C62387;
    const double C62510 = C62502 + C62503;
    const double C62507 = C62496 + C62497;
    const double C62602 = C62594 + C62595;
    const double C62599 = C62588 + C62589;
    const double C64092 = C64084 + C64085;
    const double C64089 = C64078 + C64079;
    const double C64199 = C64194 + C64195;
    const double C64306 = C64301 + C64302;
    const double C4938 = C4936 + C4937;
    const double C30091 = C30088 + C30089;
    const double C30090 = C30086 + C30087;
    const double C11017 = C11015 + C11016;
    const double C45066 = C45051 + C45052;
    const double C45063 = C45045 + C45046;
    const double C45062 = C45043 + C45044;
    const double C45059 = C45037 + C45038;
    const double C45160 = C45153 + C45154;
    const double C45155 = C45143 + C45144;
    const double C45252 = C45245 + C45246;
    const double C45247 = C45235 + C45236;
    const double C47350 = C47341 + C47342;
    const double C47347 = C47335 + C47336;
    const double C47459 = C47455 + C47456;
    const double C47566 = C47562 + C47563;
    const double C48268 = C48259 + C48260;
    const double C48265 = C48253 + C48254;
    const double C48375 = C48369 + C48370;
    const double C48484 = C48480 + C48481;
    const double C57744 = C57731 + C57732;
    const double C57741 = C57725 + C57726;
    const double C57736 = C57715 + C57716;
    const double C57733 = C57709 + C57710;
    const double C57836 = C57829 + C57830;
    const double C57831 = C57819 + C57820;
    const double C57926 = C57917 + C57918;
    const double C57925 = C57915 + C57916;
    const double C60351 = C60342 + C60343;
    const double C60348 = C60336 + C60337;
    const double C60460 = C60456 + C60457;
    const double C60565 = C60559 + C60560;
    const double C45067 = C45053 + C45054;
    const double C45064 = C45047 + C45048;
    const double C45061 = C45041 + C45042;
    const double C45058 = C45035 + C45036;
    const double C45159 = C45151 + C45152;
    const double C45156 = C45145 + C45146;
    const double C45251 = C45243 + C45244;
    const double C45248 = C45237 + C45238;
    const double C47351 = C47343 + C47344;
    const double C47348 = C47337 + C47338;
    const double C47458 = C47453 + C47454;
    const double C47565 = C47560 + C47561;
    const double C48269 = C48261 + C48262;
    const double C48266 = C48255 + C48256;
    const double C48376 = C48371 + C48372;
    const double C48483 = C48478 + C48479;
    const double C57743 = C57729 + C57730;
    const double C57740 = C57723 + C57724;
    const double C57737 = C57717 + C57718;
    const double C57734 = C57711 + C57712;
    const double C57835 = C57827 + C57828;
    const double C57832 = C57821 + C57822;
    const double C57927 = C57919 + C57920;
    const double C57924 = C57913 + C57914;
    const double C60352 = C60344 + C60345;
    const double C60349 = C60338 + C60339;
    const double C60459 = C60454 + C60455;
    const double C60566 = C60561 + C60562;
    const double C80725 = C80710 + C80711;
    const double C80722 = C80704 + C80705;
    const double C80721 = C80702 + C80703;
    const double C80718 = C80696 + C80697;
    const double C80819 = C80812 + C80813;
    const double C80814 = C80802 + C80803;
    const double C80911 = C80904 + C80905;
    const double C80906 = C80894 + C80895;
    const double C82981 = C82972 + C82973;
    const double C82978 = C82966 + C82967;
    const double C83090 = C83086 + C83087;
    const double C83197 = C83193 + C83194;
    const double C83923 = C83914 + C83915;
    const double C83920 = C83908 + C83909;
    const double C84030 = C84024 + C84025;
    const double C84139 = C84135 + C84136;
    const double C86241 = C86228 + C86229;
    const double C86238 = C86222 + C86223;
    const double C86233 = C86212 + C86213;
    const double C86230 = C86206 + C86207;
    const double C86331 = C86322 + C86323;
    const double C86330 = C86320 + C86321;
    const double C86425 = C86418 + C86419;
    const double C86420 = C86408 + C86409;
    const double C89623 = C89616 + C89617;
    const double C89620 = C89610 + C89611;
    const double C89728 = C89722 + C89723;
    const double C89837 = C89833 + C89834;
    const double C80726 = C80712 + C80713;
    const double C80723 = C80706 + C80707;
    const double C80720 = C80700 + C80701;
    const double C80717 = C80694 + C80695;
    const double C80818 = C80810 + C80811;
    const double C80815 = C80804 + C80805;
    const double C80910 = C80902 + C80903;
    const double C80907 = C80896 + C80897;
    const double C82982 = C82974 + C82975;
    const double C82979 = C82968 + C82969;
    const double C83089 = C83084 + C83085;
    const double C83196 = C83191 + C83192;
    const double C83924 = C83916 + C83917;
    const double C83921 = C83910 + C83911;
    const double C84031 = C84026 + C84027;
    const double C84138 = C84133 + C84134;
    const double C86240 = C86226 + C86227;
    const double C86237 = C86220 + C86221;
    const double C86234 = C86214 + C86215;
    const double C86231 = C86208 + C86209;
    const double C86332 = C86324 + C86325;
    const double C86329 = C86318 + C86319;
    const double C86424 = C86416 + C86417;
    const double C86421 = C86410 + C86411;
    const double C89622 = C89614 + C89615;
    const double C89619 = C89608 + C89609;
    const double C89729 = C89724 + C89725;
    const double C89836 = C89831 + C89832;
    const double C37739 = C37733 * C1984;
    const double C36706 = C36698 * C92078;
    const double C58258 = C58256 * C1984;
    const double C40326 = C40322 * C92078;
    const double C38978 = C38972 * C92078;
    const double C72817 = C72815 * C1984;
    const double C71705 = C71703 * C92078;
    const double C2305 = C2302 * C1986;
    const double C3021 = C3018 * C92099;
    const double C9835 = C9833 * C92099;
    const double C22417 = C22416 * C1986;
    const double C2641 = C2638 * C92110;
    const double C4807 = C4805 * C92110;
    const double C3365 = C3362 * C2710;
    const double C18824 = C18823 * C2710;
    const double C11122 = C11105 + C11121;
    const double C41226 = C41221 * C92186;
    const double C86578 = C41221 * C92186;
    const double C59247 = C58359 * C92099;
    const double C42988 = C42075 * C92099;
    const double C23294 = C2939 * C1984;
    const double C13208 = C9751 * C1984;
    const double C21543 = C9751 * C92078;
    const double C24231 = C22312 * C92078;
    const double C5143 = C5126 + C5142;
    const double C5497 = C5488 * C92067;
    const double C46076 = C5488 * C92067;
    const double C17675 = C2473 * C1984;
    const double C7259 = C4635 * C1984;
    const double C16086 = C4635 * C92078;
    const double C19547 = C18616 * C92078;
    const double C45588 = C45586 * C92078;
    const double C45587 = C45585 * C801;
    const double C45761 = C45585 * C244;
    const double C45777 = C45776 * C92110;
    const double C54990 = C54986 * C801;
    const double C54987 = C54983 * C801;
    const double C54989 = C54985 * C92078;
    const double C54988 = C54984 * C92078;
    const double C81662 = C81652 * C801;
    const double C81744 = C81652 * C181;
    const double C81663 = C81653 * C92078;
    const double C81750 = C81745 * C92099;
    const double C11018 = C11017 * C92137;
    const double C11123 = C11122 * C92137;
    const double C41231 = C41230 + C41226;
    const double C86579 = C86577 + C86578;
    const double C5504 = C5503 + C5497;
    const double C46077 = C46075 + C46076;
    const double C45589 = C45587 + C45588;
    const double C45778 = C45761 + C45777;
    const double C54992 = C54989 + C54990;
    const double C54991 = C54987 + C54988;
    const double C81668 = C81662 + C81663;
    const double C81753 = C81744 + C81750;
    const double C81669 = C81668 * C92137;
    const double C81754 = C81753 * C92137;
    d2eexx[0] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C14808 * C107 + C92346 * C113 + C14809 * C108 +
                      C92347 * C114 + C14810 * C109 + C14805 * C115) *
                         C1987 +
                     (C14808 * C117 + C92346 * C125 + C14809 * C118 +
                      C92347 * C126 + C14810 * C119 + C14805 * C127) *
                         C1983 -
                     (C14810 * C110 + C14805 * C116 + C14809 * C109 +
                      C92347 * C115 + C14808 * C108 + C92346 * C114) *
                         C1988 -
                     (C14810 * C120 + C14805 * C128 + C14809 * C119 +
                      C92347 * C127 + C14808 * C118 + C92346 * C126) *
                         C1984) *
                        C92322 +
                    ((C15592 + C15593 + C15594) * C1987 +
                     (C15595 + C15596 + C15597) * C1983 -
                     (C17012 + C17013 + C17014) * C1988 -
                     (C17015 + C17016 + C17017) * C1984) *
                        C92186) *
                       C92148 * C92110 * C1985 +
                   (((C17014 + C17013 + C17012) * C1988 -
                     ((C15597 + C15596 + C15595) * C1983 +
                      (C15594 + C15593 + C15592) * C1987) +
                     (C17017 + C17016 + C17015) * C1984) *
                        C92322 +
                    ((C14808 * C807 + C92346 * C819 + C14809 * C808 +
                      C92347 * C820 + C14810 * C809 + C14805 * C821) *
                         C1988 -
                     ((C15598 + C15599 + C15600) * C1983 +
                      (C15601 + C15602 + C15603) * C1987) +
                     (C14808 * C823 + C92346 * C831 + C14809 * C824 +
                      C92347 * C832 + C14810 * C825 + C14805 * C833) *
                         C1984) *
                        C92186) *
                       C92148 * C92110 * C1986)) /
                 (p * q * std::sqrt(p + q));
    d2eexy[0] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C14808 * C107 + C92346 * C113 + C14809 * C108 +
                      C92347 * C114 + C14810 * C109 + C14805 * C115) *
                         C2059 +
                     (C14808 * C182 + C92346 * C188 + C14809 * C183 +
                      C92347 * C189 + C14810 * C184 + C14805 * C190) *
                         C1985 -
                     (C15594 + C15593 + C15592) * C2060 -
                     (C15690 + C15691 + C15692) * C1986) *
                        C92322 +
                    ((C15592 + C15593 + C15594) * C2059 +
                     (C15692 + C15691 + C15690) * C1985 -
                     (C15601 + C15602 + C15603) * C2060 -
                     (C15695 + C15694 + C15693) * C1986) *
                        C92186) *
                       C92148 * C1983 +
                   (((C17014 + C17013 + C17012) * C2060 -
                     ((C14810 * C185 + C14805 * C191 + C14809 * C184 +
                       C92347 * C190 + C14808 * C183 + C92346 * C189) *
                          C1985 +
                      (C14810 * C110 + C14805 * C116 + C14809 * C109 +
                       C92347 * C115 + C14808 * C108 + C92346 * C114) *
                          C2059) +
                     (C17122 + C17123 + C17124) * C1986) *
                        C92322 +
                    ((C14808 * C807 + C92346 * C819 + C14809 * C808 +
                      C92347 * C820 + C14810 * C809 + C14805 * C821) *
                         C2060 -
                     ((C17124 + C17123 + C17122) * C1985 +
                      (C17012 + C17013 + C17014) * C2059) +
                     (C14808 * C892 + C92346 * C900 + C14809 * C893 +
                      C92347 * C901 + C14810 * C894 + C14805 * C902) *
                         C1986) *
                        C92186) *
                       C92148 * C1984) *
                  C92110) /
                 (p * q * std::sqrt(p + q));
    d2eexz[0] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C14808 * C107 + C92346 * C113 + C14809 * C108 +
                       C92347 * C114 + C14810 * C109 + C14805 * C115) *
                          C244 +
                      (C14808 * C245 + C92346 * C251 + C14809 * C246 +
                       C92347 * C252 + C14810 * C247 + C14805 * C253) *
                          C92110) *
                         C92322 +
                     ((C15592 + C15593 + C15594) * C244 +
                      (C15782 + C15783 + C15784) * C92110) *
                         C92186) *
                        C92148 * C1985 -
                    (((C15785 + C15786 + C15787) * C92110 +
                      (C15601 + C15602 + C15603) * C244) *
                         C92186 +
                     ((C15784 + C15783 + C15782) * C92110 +
                      (C15594 + C15593 + C15592) * C244) *
                         C92322) *
                        C92148 * C1986) *
                       C1983 +
                   ((((C17014 + C17013 + C17012) * C244 +
                      (C17229 + C17230 + C17231) * C92110) *
                         C92322 +
                     ((C14808 * C807 + C92346 * C819 + C14809 * C808 +
                       C92347 * C820 + C14810 * C809 + C14805 * C821) *
                          C244 +
                      (C14808 * C958 + C92346 * C966 + C14809 * C959 +
                       C92347 * C967 + C14810 * C960 + C14805 * C968) *
                          C92110) *
                         C92186) *
                        C92148 * C1986 -
                    (((C17231 + C17230 + C17229) * C92110 +
                      (C17012 + C17013 + C17014) * C244) *
                         C92186 +
                     ((C14810 * C248 + C14805 * C254 + C14809 * C247 +
                       C92347 * C253 + C14808 * C246 + C92346 * C252) *
                          C92110 +
                      (C14810 * C110 + C14805 * C116 + C14809 * C109 +
                       C92347 * C115 + C14808 * C108 + C92346 * C114) *
                          C244) *
                         C92322) *
                        C92148 * C1985) *
                       C1984)) /
                 (p * q * std::sqrt(p + q));
    d2eeyx[0] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C15033 * C107 + C92322 * C308 + C15034 * C805 + C92186 * C1022) *
                C1987 +
            (C15033 * C117 + C92322 * C314 + C15034 * C813 + C92186 * C1030) *
                C1983 -
            (C15060 + C15061) * C1988 - (C15062 + C15063) * C1984) *
               C92148 * C92346 +
           ((C15061 + C15060) * C1987 + (C15063 + C15062) * C1983 -
            (C15065 + C15064) * C1988 - (C15067 + C15066) * C1984) *
               C92148 * C92347 +
           (C15072 * C1987 + C15073 * C1983 - (C15069 + C15068) * C1988 -
            (C15071 + C15070) * C1984) *
               C92148 * C14805) *
              C92110 * C1985 +
          (((C17346 + C17347) * C1988 -
            ((C15034 * C822 + C92186 * C1031 + C15033 * C813 + C92322 * C1030) *
                 C1983 +
             (C15034 * C806 + C92186 * C1023 + C15033 * C805 + C92322 * C1022) *
                 C1987) +
            (C17348 + C17349) * C1984) *
               C92148 * C92346 +
           ((C17350 + C17351) * C1988 -
            ((C17349 + C17348) * C1983 + (C17347 + C17346) * C1987) +
            (C17352 + C17353) * C1984) *
               C92148 * C92347 +
           ((C15033 * C802 + C92322 * C1019 + C15034 * C809 + C92186 * C1026) *
                C1988 -
            ((C17353 + C17352) * C1983 + (C17351 + C17350) * C1987) +
            (C15033 * C810 + C92322 * C1027 + C15034 * C825 + C92186 * C1034) *
                C1984) *
               C92148 * C14805) *
              C92110 * C1986)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[0] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C15033 * C107 + C92322 * C308 + C15034 * C805 + C92186 * C1022) *
                C2059 +
            (C15033 * C182 + C92322 * C394 + C15034 * C890 + C92186 * C1085) *
                C1985 -
            (C15034 * C806 + C92186 * C1023 + C15033 * C805 + C92322 * C1022) *
                C2060 -
            (C15034 * C891 + C92186 * C1086 + C15033 * C890 + C92322 * C1085) *
                C1986) *
               C92148 * C92346 +
           ((C15061 + C15060) * C2059 + (C15161 + C15162) * C1985 -
            (C17347 + C17346) * C2060 - (C17460 + C17461) * C1986) *
               C92148 * C92347 +
           (C15072 * C2059 + C15167 * C1985 - (C17351 + C17350) * C2060 -
            (C17462 + C17463) * C1986) *
               C92148 * C14805) *
              C1983 +
          (((C17346 + C17347) * C2060 -
            ((C15162 + C15161) * C1985 + (C15060 + C15061) * C2059) +
            (C17461 + C17460) * C1986) *
               C92148 * C92346 +
           ((C17350 + C17351) * C2060 -
            ((C15164 + C15163) * C1985 + (C15065 + C15064) * C2059) +
            (C17463 + C17462) * C1986) *
               C92148 * C92347 +
           ((C15033 * C802 + C92322 * C1019 + C15034 * C809 + C92186 * C1026) *
                C2060 -
            ((C15165 + C15166) * C1985 + (C15069 + C15068) * C2059) +
            (C15033 * C887 + C92322 * C1091 + C15034 * C894 + C92186 * C1092) *
                C1986) *
               C92148 * C14805) *
              C1984) *
         C92110) /
        (p * q * std::sqrt(p + q));
    d2eeyz[0] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C15033 * C107 + C92322 * C308 + C15034 * C805 + C92186 * C1022) *
                 C244 +
             (C15033 * C245 + C92322 * C474 + C15034 * C956 + C92186 * C1146) *
                 C92110) *
                C92148 * C92346 +
            ((C15061 + C15060) * C244 + (C15258 + C15259) * C92110) * C92148 *
                C92347 +
            C15267 * C14805) *
               C1985 -
           (((C17570 + C17571) * C92110 + (C17351 + C17350) * C244) * C92148 *
                C14805 +
            ((C17572 + C17573) * C92110 + (C17347 + C17346) * C244) * C92148 *
                C92347 +
            ((C15034 * C957 + C92186 * C1147 + C15033 * C956 + C92322 * C1146) *
                 C92110 +
             (C15034 * C806 + C92186 * C1023 + C15033 * C805 + C92322 * C1022) *
                 C244) *
                C92148 * C92346) *
               C1986) *
              C1983 +
          ((((C17346 + C17347) * C244 + (C17573 + C17572) * C92110) * C92148 *
                C92346 +
            ((C17350 + C17351) * C244 + (C17571 + C17570) * C92110) * C92148 *
                C92347 +
            ((C15033 * C802 + C92322 * C1019 + C15034 * C809 + C92186 * C1026) *
                 C244 +
             (C15033 * C953 + C92322 * C1143 + C15034 * C960 + C92186 * C1150) *
                 C92110) *
                C92148 * C14805) *
               C1986 -
           (((C15262 + C15263) * C92110 + (C15069 + C15068) * C244) * C92148 *
                C14805 +
            ((C15261 + C15260) * C92110 + (C15065 + C15064) * C244) * C92148 *
                C92347 +
            ((C15259 + C15258) * C92110 + (C15060 + C15061) * C244) * C92148 *
                C92346) *
               C1985) *
              C1984)) /
        (p * q * std::sqrt(p + q));
    d2eezx[0] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92148 * C555) * C1987 +
             (C554 * C117 + C92148 * C561) * C1983 - C584 * C1988 -
             C585 * C1984) *
                C92346 +
            (C584 * C1987 + C585 * C1983 - C586 * C1988 - C587 * C1984) *
                C92347 +
            (C586 * C1987 + C587 * C1983 - C588 * C1988 - C589 * C1984) *
                C14805) *
               C92322 +
           ((C7244 + C7245 - C7246 - C7247) * C92346 +
            (C7248 + C7249 - C7250 - C7251) * C92347 +
            (C17672 + C17673 - C17674 - C17675) * C14805) *
               C92186) *
              C92110 * C1985 +
          (((C7246 - (C7245 + C7244) + C7247) * C92346 +
            (C7250 - (C7249 + C7248) + C7251) * C92347 +
            (C17674 - (C17673 + C17672) + C17675) * C14805) *
               C92322 +
           ((C7254 - (C7253 + C7252) + C7255) * C92346 +
            (C7258 - (C7257 + C7256) + C7259) * C92347 +
            ((C554 * C809 + C92148 * C1208) * C1988 -
             (C4635 * C1983 + C4634 * C1987) +
             (C554 * C825 + C92148 * C1216) * C1984) *
                C14805) *
               C92186) *
              C92110 * C1986)) /
        (p * q * std::sqrt(p + q));
    d2eezy[0] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92148 * C555) * C2059 +
             (C554 * C182 + C92148 * C641) * C1985 - C5484 * C2060 -
             C5591 * C1986) *
                C92346 +
            (C2541 + C2542 - C2543 - C2559) * C92347 +
            (C2546 + C2547 - C2548 - C2560) * C14805) *
               C92322 +
           ((C5484 * C2059 + C5591 * C1985 - C5486 * C2060 - C5592 * C1986) *
                C92346 +
            (C7359 + C7360 - C7361 - C7362) * C92347 +
            (C17774 + C17775 - C17776 - C17777) * C14805) *
               C92186) *
              C1983 +
          (((C2543 - (C2542 + C2541) + C2559) * C92346 +
            (C2548 - (C2547 + C2546) + C2560) * C92347 +
            (C2553 - (C2552 + C2551) + C2561) * C14805) *
               C92322 +
           ((C7361 - (C7360 + C7359) + C7362) * C92346 +
            (C17776 - (C17775 + C17774) + C17777) * C92347 +
            ((C554 * C809 + C92148 * C1208) * C2060 -
             (C2558 * C1985 + C2472 * C2059) +
             (C554 * C894 + C92148 * C1274) * C1986) *
                C14805) *
               C92186) *
              C1984) *
         C92110) /
        (p * q * std::sqrt(p + q));
    d2eezz[0] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C554 * C107 + C92148 * C555) * C244 +
              (C554 * C245 + C92148 * C719) * C92110) *
                 C92346 +
             (C726 + C742) * C92347 + C746 * C14805) *
                C92322 +
            ((C5673 + C5691) * C92346 + C7466 * C92347 + C15493 * C14805) *
                C92186) *
               C1985 -
           (((C4807 + C4803) * C14805 + C7467 * C92347 +
             (C5692 + C5676) * C92346) *
                C92186 +
            (C17876 * C14805 + C7468 * C92347 + (C5691 + C5673) * C92346) *
                C92322) *
               C1986) *
              C1983 +
          (((C7466 * C92346 + C15493 * C92347 + (C2631 + C2641) * C14805) *
                C92322 +
            (C5679 * C92346 + (C4803 + C4807) * C92347 +
             ((C554 * C809 + C92148 * C1208) * C244 +
              (C554 * C960 + C92148 * C1332) * C92110) *
                 C14805) *
                C92186) *
               C1986 -
           (((C2641 + C2631) * C14805 + C17876 * C92347 + C7468 * C92346) *
                C92186 +
            ((C744 + C732) * C14805 + (C743 + C729) * C92347 +
             (C742 + C726) * C92346) *
                C92322) *
               C1985) *
              C1984)) /
        (p * q * std::sqrt(p + q));
    d2eexx[1] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C14808 * C107 + C92346 * C113 + C14809 * C108 +
                       C92347 * C114 + C14810 * C109 + C14805 * C115) *
                          C801 +
                      (C14808 * C117 + C92346 * C125 + C14809 * C118 +
                       C92347 * C126 + C14810 * C119 + C14805 * C127) *
                          C92078) *
                         C92322 +
                     ((C15592 + C15593 + C15594) * C801 +
                      (C15595 + C15596 + C15597) * C92078) *
                         C92186) *
                        C92148 * C2709 -
                    (((C18935 + C18936 + C18937) * C92078 +
                      (C18938 + C18939 + C18940) * C801) *
                         C92186 +
                     ((C14810 * C1395 + C14805 * C1411 + C14809 * C1396 +
                       C92347 * C1412 + C14808 * C1397 + C92346 * C1413) *
                          C92078 +
                      (C14810 * C1387 + C14805 * C1399 + C14809 * C1388 +
                       C92347 * C1400 + C14808 * C1389 + C92346 * C1401) *
                          C801) *
                         C92322) *
                        C92148 * C2710) *
                       C1985 +
                   ((((C18940 + C18939 + C18938) * C801 +
                      (C18937 + C18936 + C18935) * C92078) *
                         C92322 +
                     ((C14808 * C5772 + C92346 * C5780 + C14809 * C5771 +
                       C92347 * C5779 + C14810 * C7566 + C14805 * C7567) *
                          C801 +
                      (C14808 * C5778 + C92346 * C5790 + C14809 * C5777 +
                       C92347 * C5789 + C14810 * C7568 + C14805 * C7569) *
                          C92078) *
                         C92186) *
                        C92148 * C2710 -
                    (((C15598 + C15599 + C15600) * C92078 +
                      (C15601 + C15602 + C15603) * C801) *
                         C92186 +
                     ((C15597 + C15596 + C15595) * C92078 +
                      (C15594 + C15593 + C15592) * C801) *
                         C92322) *
                        C92148 * C2709) *
                       C1986)) /
                 (p * q * std::sqrt(p + q));
    d2eexy[1] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C14808 * C107 + C92346 * C113 + C14809 * C108 +
                      C92347 * C114 + C14810 * C109 + C14805 * C115) *
                         C2059 +
                     (C14808 * C182 + C92346 * C188 + C14809 * C183 +
                      C92347 * C189 + C14810 * C184 + C14805 * C190) *
                         C1985 -
                     (C15594 + C15593 + C15592) * C2060 -
                     (C15690 + C15691 + C15692) * C1986) *
                        C92322 +
                    ((C15592 + C15593 + C15594) * C2059 +
                     (C15692 + C15691 + C15690) * C1985 -
                     (C15601 + C15602 + C15603) * C2060 -
                     (C15695 + C15694 + C15693) * C1986) *
                        C92186) *
                       C92148 * C92078 * C2709 +
                   (((C18940 + C18939 + C18938) * C2060 -
                     ((C14810 * C1469 + C14805 * C1477 + C14809 * C1470 +
                       C92347 * C1478 + C14808 * C1471 + C92346 * C1479) *
                          C1985 +
                      (C14810 * C1387 + C14805 * C1399 + C14809 * C1388 +
                       C92347 * C1400 + C14808 * C1389 + C92346 * C1401) *
                          C2059) +
                     (C19045 + C19046 + C19047) * C1986) *
                        C92322 +
                    ((C14808 * C5772 + C92346 * C5780 + C14809 * C5771 +
                      C92347 * C5779 + C14810 * C7566 + C14805 * C7567) *
                         C2060 -
                     ((C19047 + C19046 + C19045) * C1985 +
                      (C18938 + C18939 + C18940) * C2059) +
                     (C14808 * C5870 + C92346 * C5876 + C14809 * C5869 +
                      C92347 * C5875 + C14810 * C7668 + C14805 * C7669) *
                         C1986) *
                        C92186) *
                       C92148 * C92078 * C2710)) /
                 (p * q * std::sqrt(p + q));
    d2eexz[1] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C14808 * C107 + C92346 * C113 + C14809 * C108 +
                      C92347 * C114 + C14810 * C109 + C14805 * C115) *
                         C2849 +
                     (C14808 * C245 + C92346 * C251 + C14809 * C246 +
                      C92347 * C252 + C14810 * C247 + C14805 * C253) *
                         C2709 -
                     (C14810 * C1387 + C14805 * C1399 + C14809 * C1388 +
                      C92347 * C1400 + C14808 * C1389 + C92346 * C1401) *
                         C2850 -
                     (C14810 * C1538 + C14805 * C1546 + C14809 * C1539 +
                      C92347 * C1547 + C14808 * C1540 + C92346 * C1548) *
                         C2710) *
                        C92322 +
                    ((C15592 + C15593 + C15594) * C2849 +
                     (C15782 + C15783 + C15784) * C2709 -
                     (C18938 + C18939 + C18940) * C2850 -
                     (C19152 + C19153 + C19154) * C2710) *
                        C92186) *
                       C92148 * C1985 +
                   (((C18940 + C18939 + C18938) * C2850 -
                     ((C15784 + C15783 + C15782) * C2709 +
                      (C15594 + C15593 + C15592) * C2849) +
                     (C19154 + C19153 + C19152) * C2710) *
                        C92322 +
                    ((C14808 * C5772 + C92346 * C5780 + C14809 * C5771 +
                      C92347 * C5779 + C14810 * C7566 + C14805 * C7567) *
                         C2850 -
                     ((C15785 + C15786 + C15787) * C2709 +
                      (C15601 + C15602 + C15603) * C2849) +
                     (C14808 * C5958 + C92346 * C5964 + C14809 * C5957 +
                      C92347 * C5963 + C14810 * C7768 + C14805 * C7769) *
                         C2710) *
                        C92186) *
                       C92148 * C1986) *
                  C92078) /
                 (p * q * std::sqrt(p + q));
    d2eeyx[1] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C15033 * C107 + C92322 * C308 + C15034 * C805 + C92186 * C1022) *
                 C801 +
             (C15033 * C117 + C92322 * C314 + C15034 * C813 + C92186 * C1030) *
                 C92078) *
                C92148 * C92346 +
            ((C15061 + C15060) * C801 + (C15063 + C15062) * C92078) * C92148 *
                C92347 +
            (C15072 * C801 + C15073 * C92078) * C92148 * C14805) *
               C2709 -
           (((C18292 + C18291) * C92078 + (C18290 + C18289) * C801) * C92148 *
                C14805 +
            ((C18288 + C18287) * C92078 + (C18286 + C18285) * C801) * C92148 *
                C92347 +
            ((C15034 * C3439 + C92186 * C3665 + C15033 * C1397 +
              C92322 * C1614) *
                 C92078 +
             (C15034 * C3431 + C92186 * C3661 + C15033 * C1389 +
              C92322 * C1606) *
                 C801) *
                C92148 * C92346) *
               C2710) *
              C1985 +
          ((((C15033 * C3431 + C92322 * C3661 + C15034 * C5772 +
              C92186 * C6042) *
                 C801 +
             (C15033 * C3439 + C92322 * C3665 + C15034 * C5778 +
              C92186 * C6048) *
                 C92078) *
                C92148 * C92346 +
            ((C15033 * C3432 + C92322 * C3662 + C15034 * C5771 +
              C92186 * C6041) *
                 C801 +
             (C15033 * C3440 + C92322 * C3666 + C15034 * C5777 +
              C92186 * C6047) *
                 C92078) *
                C92148 * C92347 +
            ((C15033 * C3433 + C92322 * C3663 + C15034 * C7566 +
              C92186 * C7868) *
                 C801 +
             (C15033 * C3441 + C92322 * C3667 + C15034 * C7568 +
              C92186 * C7869) *
                 C92078) *
                C92148 * C14805) *
               C2710 -
           (((C17353 + C17352) * C92078 + (C17351 + C17350) * C801) * C92148 *
                C14805 +
            ((C17349 + C17348) * C92078 + (C17347 + C17346) * C801) * C92148 *
                C92347 +
            ((C15034 * C822 + C92186 * C1031 + C15033 * C813 + C92322 * C1030) *
                 C92078 +
             (C15034 * C806 + C92186 * C1023 + C15033 * C805 + C92322 * C1022) *
                 C801) *
                C92148 * C92346) *
               C2709) *
              C1986)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[1] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C15033 * C107 + C92322 * C308 + C15034 * C805 + C92186 * C1022) *
                C2059 +
            (C15033 * C182 + C92322 * C394 + C15034 * C890 + C92186 * C1085) *
                C1985 -
            (C15034 * C806 + C92186 * C1023 + C15033 * C805 + C92322 * C1022) *
                C2060 -
            (C15034 * C891 + C92186 * C1086 + C15033 * C890 + C92322 * C1085) *
                C1986) *
               C92148 * C92346 +
           ((C15061 + C15060) * C2059 + (C15161 + C15162) * C1985 -
            (C17347 + C17346) * C2060 - (C17460 + C17461) * C1986) *
               C92148 * C92347 +
           (C15072 * C2059 + C15167 * C1985 - (C17351 + C17350) * C2060 -
            (C17462 + C17463) * C1986) *
               C92148 * C14805) *
              C92078 * C2709 +
          (((C15033 * C3431 + C92322 * C3661 + C15034 * C5772 +
             C92186 * C6042) *
                C2060 -
            ((C15034 * C3513 + C92186 * C3735 + C15033 * C1471 +
              C92322 * C1672) *
                 C1985 +
             (C15034 * C3431 + C92186 * C3661 + C15033 * C1389 +
              C92322 * C1606) *
                 C2059) +
            (C15033 * C3513 + C92322 * C3735 + C15034 * C5870 +
             C92186 * C6128) *
                C1986) *
               C92148 * C92346 +
           ((C15033 * C3432 + C92322 * C3662 + C15034 * C5771 +
             C92186 * C6041) *
                C2060 -
            ((C18400 + C18399) * C1985 + (C18286 + C18285) * C2059) +
            (C15033 * C3514 + C92322 * C3736 + C15034 * C5869 +
             C92186 * C6127) *
                C1986) *
               C92148 * C92347 +
           ((C15033 * C3433 + C92322 * C3663 + C15034 * C7566 +
             C92186 * C7868) *
                C2060 -
            ((C18402 + C18401) * C1985 + (C18290 + C18289) * C2059) +
            (C15033 * C3515 + C92322 * C3737 + C15034 * C7668 +
             C92186 * C7986) *
                C1986) *
               C92148 * C14805) *
              C92078 * C2710)) /
        (p * q * std::sqrt(p + q));
    d2eeyz[1] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C15033 * C107 + C92322 * C308 + C15034 * C805 + C92186 * C1022) *
                C2849 +
            (C15033 * C245 + C92322 * C474 + C15034 * C956 + C92186 * C1146) *
                C2709 -
            (C15034 * C3431 + C92186 * C3661 + C15033 * C1389 +
             C92322 * C1606) *
                C2850 -
            (C15034 * C3587 + C92186 * C3805 + C15033 * C1540 +
             C92322 * C1727) *
                C2710) *
               C92148 * C92346 +
           ((C15061 + C15060) * C2849 + (C15258 + C15259) * C2709 -
            (C18286 + C18285) * C2850 - (C18509 + C18510) * C2710) *
               C92148 * C92347 +
           (C15072 * C2849 + C15264 * C2709 - (C18290 + C18289) * C2850 -
            (C18511 + C18512) * C2710) *
               C92148 * C14805) *
              C1985 +
          (((C15033 * C3431 + C92322 * C3661 + C15034 * C5772 +
             C92186 * C6042) *
                C2850 -
            ((C15034 * C957 + C92186 * C1147 + C15033 * C956 + C92322 * C1146) *
                 C2709 +
             (C15034 * C806 + C92186 * C1023 + C15033 * C805 + C92322 * C1022) *
                 C2849) +
            (C15033 * C3587 + C92322 * C3805 + C15034 * C5958 +
             C92186 * C6207) *
                C2710) *
               C92148 * C92346 +
           ((C15033 * C3432 + C92322 * C3662 + C15034 * C5771 +
             C92186 * C6041) *
                C2850 -
            ((C17572 + C17573) * C2709 + (C17347 + C17346) * C2849) +
            (C15033 * C3588 + C92322 * C3806 + C15034 * C5957 +
             C92186 * C6210) *
                C2710) *
               C92148 * C92347 +
           ((C15033 * C3433 + C92322 * C3663 + C15034 * C7566 +
             C92186 * C7868) *
                C2850 -
            ((C17570 + C17571) * C2709 + (C17351 + C17350) * C2849) +
            (C15033 * C3589 + C92322 * C3807 + C15034 * C7768 +
             C92186 * C8094) *
                C2710) *
               C92148 * C14805) *
              C1986) *
         C92078) /
        (p * q * std::sqrt(p + q));
    d2eezx[1] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((((C554 * C107 + C92148 * C555) * C801 +
                       (C554 * C117 + C92148 * C561) * C92078) *
                          C92346 +
                      (C584 * C801 + C585 * C92078) * C92347 +
                      (C586 * C801 + C587 * C92078) * C14805) *
                         C92322 +
                     ((C5493 + C5494) * C92346 + (C5468 + C5469) * C92347 +
                      (C16084 + C16085) * C14805) *
                         C92186) *
                        C2709 -
                    (((C19547 + C19548) * C14805 + (C9207 + C9208) * C92347 +
                      (C9219 + C9220) * C92346) *
                         C92186 +
                     ((C3193 * C92078 + C3192 * C801) * C14805 +
                      (C3191 * C92078 + C3190 * C801) * C92347 +
                      ((C554 * C1397 + C92148 * C1796) * C92078 +
                       (C554 * C1389 + C92148 * C1788) * C801) *
                          C92346) *
                         C92322) *
                        C2710) *
                       C1985 +
                   ((((C9220 + C9219) * C92346 + (C9208 + C9207) * C92347 +
                      (C19548 + C19547) * C14805) *
                         C92322 +
                     ((C9218 + C9217) * C92346 + (C9202 + C9201) * C92347 +
                      ((C554 * C7566 + C92148 * C8202) * C801 +
                       (C554 * C7568 + C92148 * C8203) * C92078) *
                          C14805) *
                         C92186) *
                        C2710 -
                    (((C16086 + C16087) * C14805 + (C5475 + C5474) * C92347 +
                      (C5496 + C5495) * C92346) *
                         C92186 +
                     ((C16085 + C16084) * C14805 + (C5469 + C5468) * C92347 +
                      (C5494 + C5493) * C92346) *
                         C92322) *
                        C2709) *
                       C1986)) /
                 (p * q * std::sqrt(p + q));
    d2eezy[1] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92148 * C555) * C2059 +
             (C554 * C182 + C92148 * C641) * C1985 - C5484 * C2060 -
             C5591 * C1986) *
                C92346 +
            (C2541 + C2542 - C2543 - C2559) * C92347 +
            (C2546 + C2547 - C2548 - C2560) * C14805) *
               C92322 +
           ((C5484 * C2059 + C5591 * C1985 - C5486 * C2060 - C5592 * C1986) *
                C92346 +
            (C7359 + C7360 - C7361 - C7362) * C92347 +
            (C17774 + C17775 - C17776 - C17777) * C14805) *
               C92186) *
              C92078 * C2709 +
          (((C9216 * C2060 -
             ((C554 * C1471 + C92148 * C1854) * C1985 +
              (C554 * C1389 + C92148 * C1788) * C2059) +
             C9325 * C1986) *
                C92346 +
            (C8213 * C2060 - (C3272 * C1985 + C3190 * C2059) + C8322 * C1986) *
                C92347 +
            (C18615 * C2060 - (C3273 * C1985 + C3192 * C2059) +
             C18718 * C1986) *
                C14805) *
               C92322 +
           ((C9214 * C2060 - (C9325 * C1985 + C9216 * C2059) + C9326 * C1986) *
                C92346 +
            (C8215 * C2060 - (C8322 * C1985 + C8213 * C2059) + C8323 * C1986) *
                C92347 +
            ((C554 * C7566 + C92148 * C8202) * C2060 -
             (C18718 * C1985 + C18615 * C2059) +
             (C554 * C7668 + C92148 * C8314) * C1986) *
                C14805) *
               C92186) *
              C92078 * C2710)) /
        (p * q * std::sqrt(p + q));
    d2eezz[1] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C554 * C107 + C92148 * C555) * C2849 +
                      (C554 * C245 + C92148 * C719) * C2709 -
                      (C554 * C1389 + C92148 * C1788) * C2850 -
                      (C554 * C1540 + C92148 * C1909) * C2710) *
                         C92346 +
                     (C3345 + C3346 - C3347 - C3363) * C92347 +
                     (C3350 + C3351 - C3352 - C3364) * C14805) *
                        C92322 +
                    ((C9427 + C9428 - C9429 - C9439) * C92346 +
                     (C8425 + C8426 - C8427 - C8437) * C92347 +
                     (C18818 + C18819 - C18820 - C18824) * C14805) *
                        C92186) *
                       C1985 +
                   (((C9429 - (C9428 + C9427) + C9439) * C92346 +
                     (C8427 - (C8426 + C8425) + C8437) * C92347 +
                     (C18820 - (C18819 + C18818) + C18824) * C14805) *
                        C92322 +
                    ((C9434 - (C9433 + C9432) + C9440) * C92346 +
                     (C8432 - (C8431 + C8430) + C8438) * C92347 +
                     ((C554 * C7566 + C92148 * C8202) * C2850 -
                      (C4805 * C2709 + C4634 * C2849) +
                      (C554 * C7768 + C92148 * C8423) * C2710) *
                         C14805) *
                        C92186) *
                       C1986) *
                  C92078) /
                 (p * q * std::sqrt(p + q));
    d2eexx[2] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C14808 * C107 + C92346 * C113 + C14809 * C108 +
                      C92347 * C114 + C14810 * C109 + C14805 * C115) *
                         C801 +
                     (C14808 * C117 + C92346 * C125 + C14809 * C118 +
                      C92347 * C126 + C14810 * C119 + C14805 * C127) *
                         C92078) *
                        C92322 +
                    ((C15592 + C15593 + C15594) * C801 +
                     (C15595 + C15596 + C15597) * C92078) *
                        C92186) *
                       C92148 * C92110 * C798 -
                   (((C15598 + C15599 + C15600) * C92078 +
                     (C15601 + C15602 + C15603) * C801) *
                        C92186 +
                    ((C15597 + C15596 + C15595) * C92078 +
                     (C15594 + C15593 + C15592) * C801) *
                        C92322) *
                       C92148 * C92110 * C799 +
                   (((C15603 + C15602 + C15601) * C801 +
                     (C15600 + C15599 + C15598) * C92078) *
                        C92322 +
                    ((C14808 * C4882 + C92346 * C4888 + C14809 * C4881 +
                      C92347 * C4887 + C14810 * C6557 + C14805 * C6558) *
                         C801 +
                     (C14808 * C4886 + C92346 * C4894 + C14809 * C4885 +
                      C92347 * C4893 + C14810 * C6559 + C14805 * C6560) *
                         C92078) *
                        C92186) *
                       C92148 * C92110 * C800)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((C14808 * C107 + C92346 * C113 + C14809 * C108 +
                     C92347 * C114 + C14810 * C109 + C14805 * C115) *
                        C104 +
                    (C14808 * C117 + C92346 * C125 + C14809 * C118 +
                     C92347 * C126 + C14810 * C119 + C14805 * C127) *
                        C93 -
                    (C14810 * C110 + C14805 * C116 + C14809 * C109 +
                     C92347 * C115 + C14808 * C108 + C92346 * C114) *
                        C105 -
                    (C14810 * C120 + C14805 * C128 + C14809 * C119 +
                     C92347 * C127 + C14808 * C118 + C92346 * C126) *
                        C94 +
                    (C14808 * C109 + C92346 * C115 + C14809 * C110 +
                     C92347 * C116 + C14810 * C111 + C14805 * C121) *
                        C106 +
                    (C14808 * C119 + C92346 * C127 + C14809 * C120 +
                     C92347 * C128 + C14810 * C122 + C14805 * C129) *
                        C95) *
                       C92322 +
                   ((C14808 * C805 + C92346 * C817 + C14809 * C804 +
                     C92347 * C816 + C14810 * C803 + C14805 * C815) *
                        C104 +
                    (C14808 * C813 + C92346 * C829 + C14809 * C812 +
                     C92347 * C828 + C14810 * C811 + C14805 * C827) *
                        C93 -
                    (C14810 * C802 + C14805 * C814 + C14809 * C803 +
                     C92347 * C815 + C14808 * C804 + C92346 * C816) *
                        C105 -
                    (C14810 * C810 + C14805 * C826 + C14809 * C811 +
                     C92347 * C827 + C14808 * C812 + C92346 * C828) *
                        C94 +
                    (C14808 * C803 + C92346 * C815 + C14809 * C802 +
                     C92347 * C814 + C14810 * C1989 + C14805 * C1990) *
                        C106 +
                    (C14808 * C811 + C92346 * C827 + C14809 * C810 +
                     C92347 * C826 + C14810 * C1991 + C14805 * C1992) *
                        C95) *
                       C92186) *
                  C92148 * C92110 * C92099) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((C14808 * C107 + C92346 * C113 + C14809 * C108 +
                      C92347 * C114 + C14810 * C109 + C14805 * C115) *
                         C801 +
                     (C14808 * C117 + C92346 * C125 + C14809 * C118 +
                      C92347 * C126 + C14810 * C119 + C14805 * C127) *
                         C92078) *
                        C92322 +
                    ((C15592 + C15593 + C15594) * C801 +
                     (C15595 + C15596 + C15597) * C92078) *
                        C92186) *
                       C92148 * C1383 -
                   (((C14810 * C3441 + C14805 * C3445 + C14809 * C3440 +
                      C92347 * C3444 + C14808 * C3439 + C92346 * C3443) *
                         C92078 +
                     (C14810 * C3433 + C14805 * C3437 + C14809 * C3432 +
                      C92347 * C3436 + C14808 * C3431 + C92346 * C3435) *
                         C801) *
                        C92186 +
                    ((C14810 * C1395 + C14805 * C1411 + C14809 * C1396 +
                      C92347 * C1412 + C14808 * C1397 + C92346 * C1413) *
                         C92078 +
                     (C14810 * C1387 + C14805 * C1399 + C14809 * C1388 +
                      C92347 * C1400 + C14808 * C1389 + C92346 * C1401) *
                         C801) *
                        C92322) *
                       C92148 * C1384 +
                   (((C14808 * C1390 + C92346 * C1402 + C14809 * C1391 +
                      C92347 * C1403 + C14810 * C1392 + C14805 * C1404) *
                         C801 +
                     (C14808 * C1406 + C92346 * C1414 + C14809 * C1407 +
                      C92347 * C1415 + C14810 * C1408 + C14805 * C1416) *
                         C92078) *
                        C92322 +
                    ((C14808 * C5773 + C92346 * C5781 + C14809 * C5774 +
                      C92347 * C5782 + C14810 * C11870 + C14805 * C11871) *
                         C801 +
                     (C14808 * C5783 + C92346 * C5791 + C14809 * C5784 +
                      C92347 * C5792 + C14810 * C11872 + C14805 * C11873) *
                         C92078) *
                        C92186) *
                       C92148 * C1385) *
                  C92099) /
                     (p * q * std::sqrt(p + q));
    d2eexy[2] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((C14808 * C107 + C92346 * C113 + C14809 * C108 +
                     C92347 * C114 + C14810 * C109 + C14805 * C115) *
                        C884 +
                    (C14808 * C182 + C92346 * C188 + C14809 * C183 +
                     C92347 * C189 + C14810 * C184 + C14805 * C190) *
                        C798 -
                    (C15594 + C15593 + C15592) * C885 -
                    (C15690 + C15691 + C15692) * C799 +
                    (C15603 + C15602 + C15601) * C886 +
                    (C15693 + C15694 + C15695) * C800) *
                       C92322 +
                   ((C15592 + C15593 + C15594) * C884 +
                    (C15692 + C15691 + C15690) * C798 -
                    (C15601 + C15602 + C15603) * C885 -
                    (C15695 + C15694 + C15693) * C799 +
                    (C14808 * C4882 + C92346 * C4888 + C14809 * C4881 +
                     C92347 * C4887 + C14810 * C6557 + C14805 * C6558) *
                        C886 +
                    (C14808 * C5012 + C92346 * C5016 + C14809 * C5013 +
                     C92347 * C5017 + C14810 * C6683 + C14805 * C6684) *
                        C800) *
                       C92186) *
                  C92148 * C92078 * C92110) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C14808 * C107 + C92346 * C113 + C14809 * C108 +
                      C92347 * C114 + C14810 * C109 + C14805 * C115) *
                         C181 +
                     (C14808 * C182 + C92346 * C188 + C14809 * C183 +
                      C92347 * C189 + C14810 * C184 + C14805 * C190) *
                         C92099) *
                        C92322 +
                    ((C14808 * C805 + C92346 * C817 + C14809 * C804 +
                      C92347 * C816 + C14810 * C803 + C14805 * C815) *
                         C181 +
                     (C14808 * C890 + C92346 * C898 + C14809 * C889 +
                      C92347 * C897 + C14810 * C888 + C14805 * C896) *
                         C92099) *
                        C92186) *
                       C92148 * C93 -
                   (((C14810 * C887 + C14805 * C895 + C14809 * C888 +
                      C92347 * C896 + C14808 * C889 + C92346 * C897) *
                         C92099 +
                     (C14810 * C802 + C14805 * C814 + C14809 * C803 +
                      C92347 * C815 + C14808 * C804 + C92346 * C816) *
                         C181) *
                        C92186 +
                    ((C14810 * C185 + C14805 * C191 + C14809 * C184 +
                      C92347 * C190 + C14808 * C183 + C92346 * C189) *
                         C92099 +
                     (C14810 * C110 + C14805 * C116 + C14809 * C109 +
                      C92347 * C115 + C14808 * C108 + C92346 * C114) *
                         C181) *
                        C92322) *
                       C92148 * C94 +
                   (((C14808 * C109 + C92346 * C115 + C14809 * C110 +
                      C92347 * C116 + C14810 * C111 + C14805 * C121) *
                         C181 +
                     (C14808 * C184 + C92346 * C190 + C14809 * C185 +
                      C92347 * C191 + C14810 * C186 + C14805 * C192) *
                         C92099) *
                        C92322 +
                    ((C14808 * C803 + C92346 * C815 + C14809 * C802 +
                      C92347 * C814 + C14810 * C1989 + C14805 * C1990) *
                         C181 +
                     (C14808 * C888 + C92346 * C896 + C14809 * C887 +
                      C92347 * C895 + C14810 * C2061 + C14805 * C2062) *
                         C92099) *
                        C92186) *
                       C92148 * C95) *
                  C92110) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((C14808 * C107 + C92346 * C113 + C14809 * C108 +
                      C92347 * C114 + C14810 * C109 + C14805 * C115) *
                         C181 +
                     (C14808 * C182 + C92346 * C188 + C14809 * C183 +
                      C92347 * C189 + C14810 * C184 + C14805 * C190) *
                         C92099) *
                        C92322 +
                    ((C15592 + C15593 + C15594) * C181 +
                     (C15692 + C15691 + C15690) * C92099) *
                        C92186) *
                       C92148 * C92078 * C1383 -
                   (((C14810 * C3515 + C14805 * C3519 + C14809 * C3514 +
                      C92347 * C3518 + C14808 * C3513 + C92346 * C3517) *
                         C92099 +
                     (C14810 * C3433 + C14805 * C3437 + C14809 * C3432 +
                      C92347 * C3436 + C14808 * C3431 + C92346 * C3435) *
                         C181) *
                        C92186 +
                    ((C14810 * C1469 + C14805 * C1477 + C14809 * C1470 +
                      C92347 * C1478 + C14808 * C1471 + C92346 * C1479) *
                         C92099 +
                     (C14810 * C1387 + C14805 * C1399 + C14809 * C1388 +
                      C92347 * C1400 + C14808 * C1389 + C92346 * C1401) *
                         C181) *
                        C92322) *
                       C92148 * C92078 * C1384 +
                   (((C14808 * C1390 + C92346 * C1402 + C14809 * C1391 +
                      C92347 * C1403 + C14810 * C1392 + C14805 * C1404) *
                         C181 +
                     (C14808 * C1472 + C92346 * C1480 + C14809 * C1473 +
                      C92347 * C1481 + C14810 * C1474 + C14805 * C1482) *
                         C92099) *
                        C92322 +
                    ((C14808 * C5773 + C92346 * C5781 + C14809 * C5774 +
                      C92347 * C5782 + C14810 * C11870 + C14805 * C11871) *
                         C181 +
                     (C14808 * C5871 + C92346 * C5877 + C14809 * C5872 +
                      C92347 * C5878 + C14810 * C11972 + C14805 * C11973) *
                         C92099) *
                        C92186) *
                       C92148 * C92078 * C1385)) /
                     (p * q * std::sqrt(p + q));
    d2eexz[2] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C14808 * C107 + C92346 * C113 + C14809 * C108 +
                      C92347 * C114 + C14810 * C109 + C14805 * C115) *
                         C244 +
                     (C14808 * C245 + C92346 * C251 + C14809 * C246 +
                      C92347 * C252 + C14810 * C247 + C14805 * C253) *
                         C92110) *
                        C92322 +
                    ((C15592 + C15593 + C15594) * C244 +
                     (C15782 + C15783 + C15784) * C92110) *
                        C92186) *
                       C92148 * C798 -
                   (((C15785 + C15786 + C15787) * C92110 +
                     (C15601 + C15602 + C15603) * C244) *
                        C92186 +
                    ((C15784 + C15783 + C15782) * C92110 +
                     (C15594 + C15593 + C15592) * C244) *
                        C92322) *
                       C92148 * C799 +
                   (((C15603 + C15602 + C15601) * C244 +
                     (C15787 + C15786 + C15785) * C92110) *
                        C92322 +
                    ((C14808 * C4882 + C92346 * C4888 + C14809 * C4881 +
                      C92347 * C4887 + C14810 * C6557 + C14805 * C6558) *
                         C244 +
                     (C14808 * C5114 + C92346 * C5118 + C14809 * C5113 +
                      C92347 * C5117 + C14810 * C6795 + C14805 * C6796) *
                         C92110) *
                        C92186) *
                       C92148 * C800) *
                  C92078) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C14808 * C107 + C92346 * C113 + C14809 * C108 +
                      C92347 * C114 + C14810 * C109 + C14805 * C115) *
                         C244 +
                     (C14808 * C245 + C92346 * C251 + C14809 * C246 +
                      C92347 * C252 + C14810 * C247 + C14805 * C253) *
                         C92110) *
                        C92322 +
                    ((C14808 * C805 + C92346 * C817 + C14809 * C804 +
                      C92347 * C816 + C14810 * C803 + C14805 * C815) *
                         C244 +
                     (C14808 * C956 + C92346 * C964 + C14809 * C955 +
                      C92347 * C963 + C14810 * C954 + C14805 * C962) *
                         C92110) *
                        C92186) *
                       C92148 * C92099 * C93 -
                   (((C14810 * C953 + C14805 * C961 + C14809 * C954 +
                      C92347 * C962 + C14808 * C955 + C92346 * C963) *
                         C92110 +
                     (C14810 * C802 + C14805 * C814 + C14809 * C803 +
                      C92347 * C815 + C14808 * C804 + C92346 * C816) *
                         C244) *
                        C92186 +
                    ((C14810 * C248 + C14805 * C254 + C14809 * C247 +
                      C92347 * C253 + C14808 * C246 + C92346 * C252) *
                         C92110 +
                     (C14810 * C110 + C14805 * C116 + C14809 * C109 +
                      C92347 * C115 + C14808 * C108 + C92346 * C114) *
                         C244) *
                        C92322) *
                       C92148 * C92099 * C94 +
                   (((C14808 * C109 + C92346 * C115 + C14809 * C110 +
                      C92347 * C116 + C14810 * C111 + C14805 * C121) *
                         C244 +
                     (C14808 * C247 + C92346 * C253 + C14809 * C248 +
                      C92347 * C254 + C14810 * C249 + C14805 * C255) *
                         C92110) *
                        C92322 +
                    ((C14808 * C803 + C92346 * C815 + C14809 * C802 +
                      C92347 * C814 + C14810 * C1989 + C14805 * C1990) *
                         C244 +
                     (C14808 * C954 + C92346 * C962 + C14809 * C953 +
                      C92347 * C961 + C14810 * C2129 + C14805 * C2130) *
                         C92110) *
                        C92186) *
                       C92148 * C92099 * C95)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  (((C14808 * C107 + C92346 * C113 + C14809 * C108 +
                     C92347 * C114 + C14810 * C109 + C14805 * C115) *
                        C1534 +
                    (C14808 * C245 + C92346 * C251 + C14809 * C246 +
                     C92347 * C252 + C14810 * C247 + C14805 * C253) *
                        C1383 -
                    (C14810 * C1387 + C14805 * C1399 + C14809 * C1388 +
                     C92347 * C1400 + C14808 * C1389 + C92346 * C1401) *
                        C1535 -
                    (C14810 * C1538 + C14805 * C1546 + C14809 * C1539 +
                     C92347 * C1547 + C14808 * C1540 + C92346 * C1548) *
                        C1384 +
                    (C14808 * C1390 + C92346 * C1402 + C14809 * C1391 +
                     C92347 * C1403 + C14810 * C1392 + C14805 * C1404) *
                        C1536 +
                    (C14808 * C1541 + C92346 * C1549 + C14809 * C1542 +
                     C92347 * C1550 + C14810 * C1543 + C14805 * C1551) *
                        C1385) *
                       C92322 +
                   ((C15592 + C15593 + C15594) * C1534 +
                    (C15782 + C15783 + C15784) * C1383 -
                    (C14810 * C3433 + C14805 * C3437 + C14809 * C3432 +
                     C92347 * C3436 + C14808 * C3431 + C92346 * C3435) *
                        C1535 -
                    (C14810 * C3589 + C14805 * C3593 + C14809 * C3588 +
                     C92347 * C3592 + C14808 * C3587 + C92346 * C3591) *
                        C1384 +
                    (C14808 * C5773 + C92346 * C5781 + C14809 * C5774 +
                     C92347 * C5782 + C14810 * C11870 + C14805 * C11871) *
                        C1536 +
                    (C14808 * C5955 + C92346 * C5961 + C14809 * C5956 +
                     C92347 * C5962 + C14810 * C12072 + C14805 * C12073) *
                        C1385) *
                       C92186) *
                  C92148 * C92099 * C92078) /
                     (p * q * std::sqrt(p + q));
    d2eeyx[2] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15033 * C107 + C92322 * C308 + C15034 * C805 + C92186 * C1022) *
                C801 +
            (C15033 * C117 + C92322 * C314 + C15034 * C813 + C92186 * C1030) *
                C92078) *
               C92148 * C92346 +
           ((C15061 + C15060) * C801 + (C15063 + C15062) * C92078) * C92148 *
               C92347 +
           (C15072 * C801 + C15073 * C92078) * C92148 * C14805) *
              C92110 * C798 -
          (((C15034 * C824 + C92186 * C1033 + C15033 * C811 + C92322 * C1028) *
                C92078 +
            (C15034 * C808 + C92186 * C1025 + C15033 * C803 + C92322 * C1020) *
                C801) *
               C92148 * C14805 +
           ((C15034 * C823 + C92186 * C1032 + C15033 * C812 + C92322 * C1029) *
                C92078 +
            (C15034 * C807 + C92186 * C1024 + C15033 * C804 + C92322 * C1021) *
                C801) *
               C92148 * C92347 +
           ((C15034 * C822 + C92186 * C1031 + C15033 * C813 + C92322 * C1030) *
                C92078 +
            (C15034 * C806 + C92186 * C1023 + C15033 * C805 + C92322 * C1022) *
                C801) *
               C92148 * C92346) *
              C92110 * C799 +
          (((C15033 * C806 + C92322 * C1023 + C15034 * C4882 + C92186 * C5218) *
                C801 +
            (C15033 * C822 + C92322 * C1031 + C15034 * C4886 + C92186 * C5222) *
                C92078) *
               C92148 * C92346 +
           ((C15033 * C807 + C92322 * C1024 + C15034 * C4881 + C92186 * C5217) *
                C801 +
            (C15033 * C823 + C92322 * C1032 + C15034 * C4885 + C92186 * C5221) *
                C92078) *
               C92148 * C92347 +
           ((C15033 * C808 + C92322 * C1025 + C15034 * C6557 + C92186 * C6907) *
                C801 +
            (C15033 * C824 + C92322 * C1033 + C15034 * C6559 + C92186 * C6908) *
                C92078) *
               C92148 * C14805) *
              C92110 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C15033 * C107 + C92322 * C308 + C15034 * C805 + C92186 * C1022) *
               C104 +
           (C15033 * C117 + C92322 * C314 + C15034 * C813 + C92186 * C1030) *
               C93 -
           (C15060 + C15061) * C105 - (C15062 + C15063) * C94 + C15072 * C106 +
           C15073 * C95) *
              C92148 * C92346 +
          ((C15061 + C15060) * C104 + (C15063 + C15062) * C93 -
           (C15065 + C15064) * C105 - (C15067 + C15066) * C94 +
           (C15068 + C15069) * C106 + (C15070 + C15071) * C95) *
              C92148 * C92347 +
          (C15072 * C104 + C15073 * C93 - (C15069 + C15068) * C105 -
           (C15071 + C15070) * C94 +
           (C15033 * C111 + C92322 * C312 + C15034 * C1989 + C92186 * C2197) *
               C106 +
           (C15033 * C122 + C92322 * C318 + C15034 * C1991 + C92186 * C2198) *
               C95) *
              C92148 * C14805) *
         C92110 * C92099) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C15033 * C107 + C92322 * C308 + C15034 * C805 + C92186 * C1022) *
                C801 +
            (C15033 * C117 + C92322 * C314 + C15034 * C813 + C92186 * C1030) *
                C92078) *
               C92148 * C92346 +
           ((C15061 + C15060) * C801 + (C15063 + C15062) * C92078) * C92148 *
               C92347 +
           (C15072 * C801 + C15073 * C92078) * C92148 * C14805) *
              C1383 -
          (((C15034 * C3441 + C92186 * C3667 + C15033 * C1395 +
             C92322 * C1612) *
                C92078 +
            (C15034 * C3433 + C92186 * C3663 + C15033 * C1387 +
             C92322 * C1604) *
                C801) *
               C92148 * C14805 +
           ((C15034 * C3440 + C92186 * C3666 + C15033 * C1396 +
             C92322 * C1613) *
                C92078 +
            (C15034 * C3432 + C92186 * C3662 + C15033 * C1388 +
             C92322 * C1605) *
                C801) *
               C92148 * C92347 +
           ((C15034 * C3439 + C92186 * C3665 + C15033 * C1397 +
             C92322 * C1614) *
                C92078 +
            (C15034 * C3431 + C92186 * C3661 + C15033 * C1389 +
             C92322 * C1606) *
                C801) *
               C92148 * C92346) *
              C1384 +
          (((C15033 * C1390 + C92322 * C1607 + C15034 * C5773 +
             C92186 * C6043) *
                C801 +
            (C15033 * C1406 + C92322 * C1615 + C15034 * C5783 +
             C92186 * C6049) *
                C92078) *
               C92148 * C92346 +
           ((C15033 * C1391 + C92322 * C1608 + C15034 * C5774 +
             C92186 * C6045) *
                C801 +
            (C15033 * C1407 + C92322 * C1616 + C15034 * C5784 +
             C92186 * C6051) *
                C92078) *
               C92148 * C92347 +
           ((C15033 * C1392 + C92322 * C1609 + C15034 * C11870 +
             C92186 * C12172) *
                C801 +
            (C15033 * C1408 + C92322 * C1617 + C15034 * C11872 +
             C92186 * C12173) *
                C92078) *
               C92148 * C14805) *
              C1385) *
         C92099) /
            (p * q * std::sqrt(p + q));
    d2eeyy[2] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C15033 * C107 + C92322 * C308 + C15034 * C805 + C92186 * C1022) *
               C884 +
           (C15033 * C182 + C92322 * C394 + C15034 * C890 + C92186 * C1085) *
               C798 -
           (C15034 * C806 + C92186 * C1023 + C15033 * C805 + C92322 * C1022) *
               C885 -
           (C15034 * C891 + C92186 * C1086 + C15033 * C890 + C92322 * C1085) *
               C799 +
           (C15033 * C806 + C92322 * C1023 + C15034 * C4882 + C92186 * C5218) *
               C886 +
           (C15033 * C891 + C92322 * C1086 + C15034 * C5012 + C92186 * C5299) *
               C800) *
              C92148 * C92346 +
          ((C15061 + C15060) * C884 + (C15161 + C15162) * C798 -
           (C15034 * C807 + C92186 * C1024 + C15033 * C804 + C92322 * C1021) *
               C885 -
           (C15034 * C892 + C92186 * C1088 + C15033 * C889 + C92322 * C1087) *
               C799 +
           (C15033 * C807 + C92322 * C1024 + C15034 * C4881 + C92186 * C5217) *
               C886 +
           (C15033 * C892 + C92322 * C1088 + C15034 * C5013 + C92186 * C5301) *
               C800) *
              C92148 * C92347 +
          (C15072 * C884 + C15167 * C798 -
           (C15034 * C808 + C92186 * C1025 + C15033 * C803 + C92322 * C1020) *
               C885 -
           (C15034 * C893 + C92186 * C1090 + C15033 * C888 + C92322 * C1089) *
               C799 +
           (C15033 * C808 + C92322 * C1025 + C15034 * C6557 + C92186 * C6907) *
               C886 +
           (C15033 * C893 + C92322 * C1090 + C15034 * C6683 + C92186 * C7025) *
               C800) *
              C92148 * C14805) *
         C92078 * C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15033 * C107 + C92322 * C308 + C15034 * C805 + C92186 * C1022) *
                C181 +
            (C15033 * C182 + C92322 * C394 + C15034 * C890 + C92186 * C1085) *
                C92099) *
               C92148 * C92346 +
           ((C15061 + C15060) * C181 + (C15161 + C15162) * C92099) * C92148 *
               C92347 +
           C15170 * C14805) *
              C93 -
          (((C15165 + C15166) * C92099 + (C15069 + C15068) * C181) * C92148 *
               C14805 +
           ((C15164 + C15163) * C92099 + (C15065 + C15064) * C181) * C92148 *
               C92347 +
           ((C15162 + C15161) * C92099 + (C15060 + C15061) * C181) * C92148 *
               C92346) *
              C94 +
          (C15170 * C92346 +
           ((C15068 + C15069) * C181 + (C15166 + C15165) * C92099) * C92148 *
               C92347 +
           ((C15033 * C111 + C92322 * C312 + C15034 * C1989 + C92186 * C2197) *
                C181 +
            (C15033 * C186 + C92322 * C398 + C15034 * C2061 + C92186 * C2283) *
                C92099) *
               C92148 * C14805) *
              C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C15033 * C107 + C92322 * C308 + C15034 * C805 + C92186 * C1022) *
                C181 +
            (C15033 * C182 + C92322 * C394 + C15034 * C890 + C92186 * C1085) *
                C92099) *
               C92148 * C92346 +
           ((C15061 + C15060) * C181 + (C15161 + C15162) * C92099) * C92148 *
               C92347 +
           C15170 * C14805) *
              C92078 * C1383 -
          (((C15034 * C3515 + C92186 * C3737 + C15033 * C1469 +
             C92322 * C1670) *
                C92099 +
            (C15034 * C3433 + C92186 * C3663 + C15033 * C1387 +
             C92322 * C1604) *
                C181) *
               C92148 * C14805 +
           ((C15034 * C3514 + C92186 * C3736 + C15033 * C1470 +
             C92322 * C1671) *
                C92099 +
            (C15034 * C3432 + C92186 * C3662 + C15033 * C1388 +
             C92322 * C1605) *
                C181) *
               C92148 * C92347 +
           ((C15034 * C3513 + C92186 * C3735 + C15033 * C1471 +
             C92322 * C1672) *
                C92099 +
            (C15034 * C3431 + C92186 * C3661 + C15033 * C1389 +
             C92322 * C1606) *
                C181) *
               C92148 * C92346) *
              C92078 * C1384 +
          (((C15033 * C1390 + C92322 * C1607 + C15034 * C5773 +
             C92186 * C6043) *
                C181 +
            (C15033 * C1472 + C92322 * C1673 + C15034 * C5871 +
             C92186 * C6129) *
                C92099) *
               C92148 * C92346 +
           ((C15033 * C1391 + C92322 * C1608 + C15034 * C5774 +
             C92186 * C6045) *
                C181 +
            (C15033 * C1473 + C92322 * C1674 + C15034 * C5872 +
             C92186 * C6131) *
                C92099) *
               C92148 * C92347 +
           ((C15033 * C1392 + C92322 * C1609 + C15034 * C11870 +
             C92186 * C12172) *
                C181 +
            (C15033 * C1474 + C92322 * C1675 + C15034 * C11972 +
             C92186 * C12284) *
                C92099) *
               C92148 * C14805) *
              C92078 * C1385)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[2] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15033 * C107 + C92322 * C308 + C15034 * C805 + C92186 * C1022) *
                C244 +
            (C15033 * C245 + C92322 * C474 + C15034 * C956 + C92186 * C1146) *
                C92110) *
               C92148 * C92346 +
           ((C15061 + C15060) * C244 + (C15258 + C15259) * C92110) * C92148 *
               C92347 +
           C15267 * C14805) *
              C798 -
          (((C15034 * C959 + C92186 * C1149 + C15033 * C954 + C92322 * C1144) *
                C92110 +
            (C15034 * C808 + C92186 * C1025 + C15033 * C803 + C92322 * C1020) *
                C244) *
               C92148 * C14805 +
           ((C15034 * C958 + C92186 * C1148 + C15033 * C955 + C92322 * C1145) *
                C92110 +
            (C15034 * C807 + C92186 * C1024 + C15033 * C804 + C92322 * C1021) *
                C244) *
               C92148 * C92347 +
           ((C15034 * C957 + C92186 * C1147 + C15033 * C956 + C92322 * C1146) *
                C92110 +
            (C15034 * C806 + C92186 * C1023 + C15033 * C805 + C92322 * C1022) *
                C244) *
               C92148 * C92346) *
              C799 +
          (((C15033 * C806 + C92322 * C1023 + C15034 * C4882 + C92186 * C5218) *
                C244 +
            (C15033 * C957 + C92322 * C1147 + C15034 * C5114 + C92186 * C5378) *
                C92110) *
               C92148 * C92346 +
           ((C15033 * C807 + C92322 * C1024 + C15034 * C4881 + C92186 * C5217) *
                C244 +
            (C15033 * C958 + C92322 * C1148 + C15034 * C5113 + C92186 * C5377) *
                C92110) *
               C92148 * C92347 +
           ((C15033 * C808 + C92322 * C1025 + C15034 * C6557 + C92186 * C6907) *
                C244 +
            (C15033 * C959 + C92322 * C1149 + C15034 * C6795 + C92186 * C7133) *
                C92110) *
               C92148 * C14805) *
              C800) *
         C92078) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15033 * C107 + C92322 * C308 + C15034 * C805 + C92186 * C1022) *
                C244 +
            (C15033 * C245 + C92322 * C474 + C15034 * C956 + C92186 * C1146) *
                C92110) *
               C92148 * C92346 +
           ((C15061 + C15060) * C244 + (C15258 + C15259) * C92110) * C92148 *
               C92347 +
           C15267 * C14805) *
              C92099 * C93 -
          (((C15262 + C15263) * C92110 + (C15069 + C15068) * C244) * C92148 *
               C14805 +
           ((C15261 + C15260) * C92110 + (C15065 + C15064) * C244) * C92148 *
               C92347 +
           ((C15259 + C15258) * C92110 + (C15060 + C15061) * C244) * C92148 *
               C92346) *
              C92099 * C94 +
          (C15267 * C92346 +
           ((C15068 + C15069) * C244 + (C15263 + C15262) * C92110) * C92148 *
               C92347 +
           ((C15033 * C111 + C92322 * C312 + C15034 * C1989 + C92186 * C2197) *
                C244 +
            (C15033 * C249 + C92322 * C478 + C15034 * C2129 + C92186 * C2371) *
                C92110) *
               C92148 * C14805) *
              C92099 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C15033 * C107 + C92322 * C308 + C15034 * C805 + C92186 * C1022) *
               C1534 +
           (C15033 * C245 + C92322 * C474 + C15034 * C956 + C92186 * C1146) *
               C1383 -
           (C15034 * C3431 + C92186 * C3661 + C15033 * C1389 + C92322 * C1606) *
               C1535 -
           (C15034 * C3587 + C92186 * C3805 + C15033 * C1540 + C92322 * C1727) *
               C1384 +
           (C15033 * C1390 + C92322 * C1607 + C15034 * C5773 + C92186 * C6043) *
               C1536 +
           (C15033 * C1541 + C92322 * C1728 + C15034 * C5955 + C92186 * C6208) *
               C1385) *
              C92148 * C92346 +
          ((C15061 + C15060) * C1534 + (C15258 + C15259) * C1383 -
           (C15034 * C3432 + C92186 * C3662 + C15033 * C1388 + C92322 * C1605) *
               C1535 -
           (C15034 * C3588 + C92186 * C3806 + C15033 * C1539 + C92322 * C1729) *
               C1384 +
           (C15033 * C1391 + C92322 * C1608 + C15034 * C5774 + C92186 * C6045) *
               C1536 +
           (C15033 * C1542 + C92322 * C1730 + C15034 * C5956 + C92186 * C6211) *
               C1385) *
              C92148 * C92347 +
          (C15072 * C1534 + C15264 * C1383 -
           (C15034 * C3433 + C92186 * C3663 + C15033 * C1387 + C92322 * C1604) *
               C1535 -
           (C15034 * C3589 + C92186 * C3807 + C15033 * C1538 + C92322 * C1731) *
               C1384 +
           (C15033 * C1392 + C92322 * C1609 + C15034 * C11870 +
            C92186 * C12172) *
               C1536 +
           (C15033 * C1543 + C92322 * C1732 + C15034 * C12072 +
            C92186 * C12397) *
               C1385) *
              C92148 * C14805) *
         C92099 * C92078) /
            (p * q * std::sqrt(p + q));
    d2eezx[2] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92148 * C555) * C801 +
             (C554 * C117 + C92148 * C561) * C92078) *
                C92346 +
            (C584 * C801 + C585 * C92078) * C92347 +
            (C586 * C801 + C587 * C92078) * C14805) *
               C92322 +
           ((C5493 + C5494) * C92346 + (C5468 + C5469) * C92347 +
            (C16084 + C16085) * C14805) *
               C92186) *
              C92110 * C798 -
          (((C16086 + C16087) * C14805 + (C5475 + C5474) * C92347 +
            (C5496 + C5495) * C92346) *
               C92186 +
           ((C16085 + C16084) * C14805 + (C5469 + C5468) * C92347 +
            (C5494 + C5493) * C92346) *
               C92322) *
              C92110 * C799 +
          ((C5502 * C92346 + C5488 * C92347 + (C16087 + C16086) * C14805) *
               C92322 +
           ((C5501 + C5500) * C92346 + (C5499 + C5498) * C92347 +
            ((C554 * C6557 + C92148 * C7241) * C801 +
             (C554 * C6559 + C92148 * C7242) * C92078) *
                C14805) *
               C92186) *
              C92110 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92148 * C555) * C104 +
            (C554 * C117 + C92148 * C561) * C93 - C584 * C105 - C585 * C94 +
            C586 * C106 + C587 * C95) *
               C92346 +
           (C584 * C104 + C585 * C93 - C586 * C105 - C587 * C94 + C588 * C106 +
            C589 * C95) *
               C92347 +
           (C586 * C104 + C587 * C93 - C588 * C105 - C589 * C94 + C590 * C106 +
            C591 * C95) *
               C14805) *
              C92322 +
          ((C5484 * C104 + C5485 * C93 - C2468 * C105 - C2469 * C94 +
            C2470 * C106 + C2471 * C95) *
               C92346 +
           (C2468 * C104 + C2469 * C93 - C2470 * C105 - C2471 * C94 +
            C2472 * C106 + C2473 * C95) *
               C92347 +
           (C2470 * C104 + C2471 * C93 - C2472 * C105 - C2473 * C94 +
            (C554 * C1989 + C92148 * C2453) * C106 +
            (C554 * C1991 + C92148 * C2454) * C95) *
               C14805) *
              C92186) *
         C92110 * C92099) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92148 * C555) * C801 +
             (C554 * C117 + C92148 * C561) * C92078) *
                C92346 +
            (C584 * C801 + C585 * C92078) * C92347 +
            (C586 * C801 + C587 * C92078) * C14805) *
               C92322 +
           ((C5493 + C5494) * C92346 + (C5468 + C5469) * C92347 +
            (C16084 + C16085) * C14805) *
               C92186) *
              C1383 -
          ((((C554 * C3441 + C92148 * C3881) * C92078 +
             (C554 * C3433 + C92148 * C3877) * C801) *
                C14805 +
            (C9207 + C9208) * C92347 + (C9219 + C9220) * C92346) *
               C92186 +
           ((C3193 * C92078 + C3192 * C801) * C14805 +
            (C3191 * C92078 + C3190 * C801) * C92347 +
            ((C554 * C1397 + C92148 * C1796) * C92078 +
             (C554 * C1389 + C92148 * C1788) * C801) *
                C92346) *
               C92322) *
              C1384 +
          ((((C554 * C1390 + C92148 * C1789) * C801 +
             (C554 * C1406 + C92148 * C1797) * C92078) *
                C92346 +
            ((C554 * C1391 + C92148 * C1790) * C801 +
             (C554 * C1407 + C92148 * C1798) * C92078) *
                C92347 +
            ((C554 * C1392 + C92148 * C1791) * C801 +
             (C554 * C1408 + C92148 * C1799) * C92078) *
                C14805) *
               C92322 +
           (((C554 * C5773 + C92148 * C6289) * C801 +
             (C554 * C5783 + C92148 * C6295) * C92078) *
                C92346 +
            ((C554 * C5774 + C92148 * C6290) * C801 +
             (C554 * C5784 + C92148 * C6296) * C92078) *
                C92347 +
            ((C554 * C11870 + C92148 * C12506) * C801 +
             (C554 * C11872 + C92148 * C12507) * C92078) *
                C14805) *
               C92186) *
              C1385) *
         C92099) /
            (p * q * std::sqrt(p + q));
    d2eezy[2] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92148 * C555) * C884 +
            (C554 * C182 + C92148 * C641) * C798 - C5484 * C885 - C5591 * C799 +
            C5486 * C886 + C5592 * C800) *
               C92346 +
           (C584 * C884 + C660 * C798 - C2468 * C885 - C2556 * C799 +
            C4632 * C886 + C4720 * C800) *
               C92347 +
           (C586 * C884 + C661 * C798 - C2470 * C885 - C2557 * C799 +
            C4634 * C886 + C4721 * C800) *
               C14805) *
              C92322 +
          ((C5484 * C884 + C5591 * C798 - C5486 * C885 - C5592 * C799 +
            C5492 * C886 + C5593 * C800) *
               C92346 +
           (C2468 * C884 + C2556 * C798 - C4632 * C885 - C4720 * C799 +
            C5490 * C886 + C5594 * C800) *
               C92347 +
           (C2470 * C884 + C2557 * C798 - C4634 * C885 - C4721 * C799 +
            (C554 * C6557 + C92148 * C7241) * C886 +
            (C554 * C6683 + C92148 * C7357) * C800) *
               C14805) *
              C92186) *
         C92078 * C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92148 * C555) * C181 +
             (C554 * C182 + C92148 * C641) * C92099) *
                C92346 +
            (C648 + C664) * C92347 + C668 * C14805) *
               C92322 +
           ((C5484 * C181 + C5591 * C92099) * C92346 +
            (C4710 + C4711) * C92347 + C15416 * C14805) *
               C92186) *
              C93 -
          (((C15417 + C15418) * C14805 + (C4718 + C4719) * C92347 +
            (C4711 + C4710) * C92346) *
               C92186 +
           ((C666 + C654) * C14805 + (C665 + C651) * C92347 +
            (C664 + C648) * C92346) *
               C92322) *
              C94 +
          ((C668 * C92346 + C669 * C92347 + (C659 + C667) * C14805) * C92322 +
           (C15416 * C92346 + (C15418 + C15417) * C92347 +
            ((C554 * C1989 + C92148 * C2453) * C181 +
             (C554 * C2061 + C92148 * C2539) * C92099) *
                C14805) *
               C92186) *
              C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92148 * C555) * C181 +
             (C554 * C182 + C92148 * C641) * C92099) *
                C92346 +
            (C648 + C664) * C92347 + C668 * C14805) *
               C92322 +
           ((C5484 * C181 + C5591 * C92099) * C92346 +
            (C4710 + C4711) * C92347 + C15416 * C14805) *
               C92186) *
              C92078 * C1383 -
          ((((C554 * C3515 + C92148 * C3951) * C92099 +
             (C554 * C3433 + C92148 * C3877) * C181) *
                C14805 +
            (C8324 + C8316) * C92347 +
            (C9325 * C92099 + C9216 * C181) * C92346) *
               C92186 +
           ((C3276 + C3266) * C14805 + (C3275 + C3263) * C92347 +
            ((C554 * C1471 + C92148 * C1854) * C92099 +
             (C554 * C1389 + C92148 * C1788) * C181) *
                C92346) *
               C92322) *
              C92078 * C1384 +
          ((((C554 * C1390 + C92148 * C1789) * C181 +
             (C554 * C1472 + C92148 * C1855) * C92099) *
                C92346 +
            ((C554 * C1391 + C92148 * C1790) * C181 +
             (C554 * C1473 + C92148 * C1856) * C92099) *
                C92347 +
            ((C554 * C1392 + C92148 * C1791) * C181 +
             (C554 * C1474 + C92148 * C1857) * C92099) *
                C14805) *
               C92322 +
           (((C554 * C5773 + C92148 * C6289) * C181 +
             (C554 * C5871 + C92148 * C6375) * C92099) *
                C92346 +
            ((C554 * C5774 + C92148 * C6290) * C181 +
             (C554 * C5872 + C92148 * C6376) * C92099) *
                C92347 +
            ((C554 * C11870 + C92148 * C12506) * C181 +
             (C554 * C11972 + C92148 * C12624) * C92099) *
                C14805) *
               C92186) *
              C92078 * C1385)) /
            (p * q * std::sqrt(p + q));
    d2eezz[2] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92148 * C555) * C244 +
             (C554 * C245 + C92148 * C719) * C92110) *
                C92346 +
            (C726 + C742) * C92347 + C746 * C14805) *
               C92322 +
           ((C5673 + C5691) * C92346 + C7466 * C92347 + C15493 * C14805) *
               C92186) *
              C798 -
          (((C4807 + C4803) * C14805 + C7467 * C92347 +
            (C5692 + C5676) * C92346) *
               C92186 +
           ((C2642 + C2634) * C14805 + C7468 * C92347 +
            (C5691 + C5673) * C92346) *
               C92322) *
              C799 +
          ((C5695 * C92346 + C5679 * C92347 + (C4803 + C4807) * C14805) *
               C92322 +
           ((C5685 + C5694) * C92346 + (C5682 + C5693) * C92347 +
            ((C554 * C6557 + C92148 * C7241) * C244 +
             (C554 * C6795 + C92148 * C7464) * C92110) *
                C14805) *
               C92186) *
              C800) *
         C92078) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92148 * C555) * C244 +
             (C554 * C245 + C92148 * C719) * C92110) *
                C92346 +
            (C726 + C742) * C92347 + C746 * C14805) *
               C92322 +
           ((C5673 + C5691) * C92346 + C7466 * C92347 + C15493 * C14805) *
               C92186) *
              C92099 * C93 -
          (((C2641 + C2631) * C14805 + (C2642 + C2634) * C92347 +
            C7468 * C92346) *
               C92186 +
           ((C744 + C732) * C14805 + (C743 + C729) * C92347 +
            (C742 + C726) * C92346) *
               C92322) *
              C92099 * C94 +
          ((C746 * C92346 + C747 * C92347 + (C737 + C745) * C14805) * C92322 +
           (C15493 * C92346 + (C2631 + C2641) * C92347 +
            ((C554 * C1989 + C92148 * C2453) * C244 +
             (C554 * C2129 + C92148 * C2627) * C92110) *
                C14805) *
               C92186) *
              C92099 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92148 * C555) * C1534 +
            (C554 * C245 + C92148 * C719) * C1383 -
            (C554 * C1389 + C92148 * C1788) * C1535 -
            (C554 * C1540 + C92148 * C1909) * C1384 +
            (C554 * C1390 + C92148 * C1789) * C1536 +
            (C554 * C1541 + C92148 * C1910) * C1385) *
               C92346 +
           (C584 * C1534 + C738 * C1383 - C3190 * C1535 - C3360 * C1384 +
            (C554 * C1391 + C92148 * C1790) * C1536 +
            (C554 * C1542 + C92148 * C1912) * C1385) *
               C92347 +
           (C586 * C1534 + C739 * C1383 - C3192 * C1535 - C3361 * C1384 +
            (C554 * C1392 + C92148 * C1791) * C1536 +
            (C554 * C1543 + C92148 * C1914) * C1385) *
               C14805) *
              C92322 +
          ((C5484 * C1534 + C5686 * C1383 - C9216 * C1535 - C9437 * C1384 +
            (C554 * C5773 + C92148 * C6289) * C1536 +
            (C554 * C5955 + C92148 * C6453) * C1385) *
               C92346 +
           (C2468 * C1534 + C2640 * C1383 - C8213 * C1535 - C8435 * C1384 +
            (C554 * C5774 + C92148 * C6290) * C1536 +
            (C554 * C5956 + C92148 * C6454) * C1385) *
               C92347 +
           (C2470 * C1534 + C2639 * C1383 -
            (C554 * C3433 + C92148 * C3877) * C1535 -
            (C554 * C3589 + C92148 * C4021) * C1384 +
            (C554 * C11870 + C92148 * C12506) * C1536 +
            (C554 * C12072 + C92148 * C12732) * C1385) *
               C14805) *
              C92186) *
         C92099 * C92078) /
            (p * q * std::sqrt(p + q));
    d2eexx[3] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C14808 * C107 + C92346 * C113 + C14809 * C108 +
                      C92347 * C114 + C14810 * C109 + C14805 * C115) *
                         C1987 +
                     (C14808 * C117 + C92346 * C125 + C14809 * C118 +
                      C92347 * C126 + C14810 * C119 + C14805 * C127) *
                         C1983 -
                     (C14810 * C110 + C14805 * C116 + C14809 * C109 +
                      C92347 * C115 + C14808 * C108 + C92346 * C114) *
                         C1988 -
                     (C14810 * C120 + C14805 * C128 + C14809 * C119 +
                      C92347 * C127 + C14808 * C118 + C92346 * C126) *
                         C1984) *
                        C92322 +
                    ((C15592 + C15593 + C15594) * C1987 +
                     (C15595 + C15596 + C15597) * C1983 -
                     (C17012 + C17013 + C17014) * C1988 -
                     (C17015 + C17016 + C17017) * C1984) *
                        C92186) *
                       C92148 * C2709 +
                   (((C14808 * C1388 + C92346 * C1400 + C14809 * C1387 +
                      C92347 * C1399 + C14810 * C1386 + C14805 * C1398) *
                         C1988 -
                     ((C14810 * C1395 + C14805 * C1411 + C14809 * C1396 +
                       C92347 * C1412 + C14808 * C1397 + C92346 * C1413) *
                          C1983 +
                      (C14810 * C1387 + C14805 * C1399 + C14809 * C1388 +
                       C92347 * C1400 + C14808 * C1389 + C92346 * C1401) *
                          C1987) +
                     (C14808 * C1396 + C92346 * C1412 + C14809 * C1395 +
                      C92347 * C1411 + C14810 * C1394 + C14805 * C1410) *
                         C1984) *
                        C92322 +
                    ((C14808 * C3432 + C92346 * C3436 + C14809 * C3433 +
                      C92347 * C3437 + C14810 * C3434 + C14805 * C3438) *
                         C1988 -
                     ((C14810 * C3441 + C14805 * C3445 + C14809 * C3440 +
                       C92347 * C3444 + C14808 * C3439 + C92346 * C3443) *
                          C1983 +
                      (C14810 * C3433 + C14805 * C3437 + C14809 * C3432 +
                       C92347 * C3436 + C14808 * C3431 + C92346 * C3435) *
                          C1987) +
                     (C14808 * C3440 + C92346 * C3444 + C14809 * C3441 +
                      C92347 * C3445 + C14810 * C3442 + C14805 * C3446) *
                         C1984) *
                        C92186) *
                       C92148 * C2710) *
                  C92099) /
                 (p * q * std::sqrt(p + q));
    d2eexy[3] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C14808 * C107 + C92346 * C113 + C14809 * C108 +
                       C92347 * C114 + C14810 * C109 + C14805 * C115) *
                          C181 +
                      (C14808 * C182 + C92346 * C188 + C14809 * C183 +
                       C92347 * C189 + C14810 * C184 + C14805 * C190) *
                          C92099) *
                         C92322 +
                     ((C15592 + C15593 + C15594) * C181 +
                      (C15692 + C15691 + C15690) * C92099) *
                         C92186) *
                        C92148 * C1983 -
                    (((C17124 + C17123 + C17122) * C92099 +
                      (C17012 + C17013 + C17014) * C181) *
                         C92186 +
                     ((C14810 * C185 + C14805 * C191 + C14809 * C184 +
                       C92347 * C190 + C14808 * C183 + C92346 * C189) *
                          C92099 +
                      (C14810 * C110 + C14805 * C116 + C14809 * C109 +
                       C92347 * C115 + C14808 * C108 + C92346 * C114) *
                          C181) *
                         C92322) *
                        C92148 * C1984) *
                       C2709 +
                   ((((C14808 * C1388 + C92346 * C1400 + C14809 * C1387 +
                       C92347 * C1399 + C14810 * C1386 + C14805 * C1398) *
                          C181 +
                      (C14808 * C1470 + C92346 * C1478 + C14809 * C1469 +
                       C92347 * C1477 + C14810 * C1468 + C14805 * C1476) *
                          C92099) *
                         C92322 +
                     ((C14808 * C3432 + C92346 * C3436 + C14809 * C3433 +
                       C92347 * C3437 + C14810 * C3434 + C14805 * C3438) *
                          C181 +
                      (C14808 * C3514 + C92346 * C3518 + C14809 * C3515 +
                       C92347 * C3519 + C14810 * C3516 + C14805 * C3520) *
                          C92099) *
                         C92186) *
                        C92148 * C1984 -
                    (((C14810 * C3515 + C14805 * C3519 + C14809 * C3514 +
                       C92347 * C3518 + C14808 * C3513 + C92346 * C3517) *
                          C92099 +
                      (C14810 * C3433 + C14805 * C3437 + C14809 * C3432 +
                       C92347 * C3436 + C14808 * C3431 + C92346 * C3435) *
                          C181) *
                         C92186 +
                     ((C14810 * C1469 + C14805 * C1477 + C14809 * C1470 +
                       C92347 * C1478 + C14808 * C1471 + C92346 * C1479) *
                          C92099 +
                      (C14810 * C1387 + C14805 * C1399 + C14809 * C1388 +
                       C92347 * C1400 + C14808 * C1389 + C92346 * C1401) *
                          C181) *
                         C92322) *
                        C92148 * C1983) *
                       C2710)) /
                 (p * q * std::sqrt(p + q));
    d2eexz[3] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C14808 * C107 + C92346 * C113 + C14809 * C108 +
                      C92347 * C114 + C14810 * C109 + C14805 * C115) *
                         C2849 +
                     (C14808 * C245 + C92346 * C251 + C14809 * C246 +
                      C92347 * C252 + C14810 * C247 + C14805 * C253) *
                         C2709 -
                     (C14810 * C1387 + C14805 * C1399 + C14809 * C1388 +
                      C92347 * C1400 + C14808 * C1389 + C92346 * C1401) *
                         C2850 -
                     (C14810 * C1538 + C14805 * C1546 + C14809 * C1539 +
                      C92347 * C1547 + C14808 * C1540 + C92346 * C1548) *
                         C2710) *
                        C92322 +
                    ((C15592 + C15593 + C15594) * C2849 +
                     (C15782 + C15783 + C15784) * C2709 -
                     (C14810 * C3433 + C14805 * C3437 + C14809 * C3432 +
                      C92347 * C3436 + C14808 * C3431 + C92346 * C3435) *
                         C2850 -
                     (C14810 * C3589 + C14805 * C3593 + C14809 * C3588 +
                      C92347 * C3592 + C14808 * C3587 + C92346 * C3591) *
                         C2710) *
                        C92186) *
                       C92148 * C92099 * C1983 +
                   (((C14808 * C1388 + C92346 * C1400 + C14809 * C1387 +
                      C92347 * C1399 + C14810 * C1386 + C14805 * C1398) *
                         C2850 -
                     ((C14810 * C248 + C14805 * C254 + C14809 * C247 +
                       C92347 * C253 + C14808 * C246 + C92346 * C252) *
                          C2709 +
                      (C14810 * C110 + C14805 * C116 + C14809 * C109 +
                       C92347 * C115 + C14808 * C108 + C92346 * C114) *
                          C2849) +
                     (C14808 * C1539 + C92346 * C1547 + C14809 * C1538 +
                      C92347 * C1546 + C14810 * C1537 + C14805 * C1545) *
                         C2710) *
                        C92322 +
                    ((C14808 * C3432 + C92346 * C3436 + C14809 * C3433 +
                      C92347 * C3437 + C14810 * C3434 + C14805 * C3438) *
                         C2850 -
                     ((C17231 + C17230 + C17229) * C2709 +
                      (C17012 + C17013 + C17014) * C2849) +
                     (C14808 * C3588 + C92346 * C3592 + C14809 * C3589 +
                      C92347 * C3593 + C14810 * C3590 + C14805 * C3594) *
                         C2710) *
                        C92186) *
                       C92148 * C92099 * C1984)) /
                 (p * q * std::sqrt(p + q));
    d2eeyx[3] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C15033 * C107 + C92322 * C308 + C15034 * C805 + C92186 * C1022) *
                C1987 +
            (C15033 * C117 + C92322 * C314 + C15034 * C813 + C92186 * C1030) *
                C1983 -
            (C15060 + C15061) * C1988 - (C15062 + C15063) * C1984) *
               C92148 * C92346 +
           ((C15061 + C15060) * C1987 + (C15063 + C15062) * C1983 -
            (C15065 + C15064) * C1988 - (C15067 + C15066) * C1984) *
               C92148 * C92347 +
           (C15072 * C1987 + C15073 * C1983 - (C15069 + C15068) * C1988 -
            (C15071 + C15070) * C1984) *
               C92148 * C14805) *
              C2709 +
          (((C18285 + C18286) * C1988 -
            ((C15034 * C3439 + C92186 * C3665 + C15033 * C1397 +
              C92322 * C1614) *
                 C1983 +
             (C15034 * C3431 + C92186 * C3661 + C15033 * C1389 +
              C92322 * C1606) *
                 C1987) +
            (C18287 + C18288) * C1984) *
               C92148 * C92346 +
           ((C18289 + C18290) * C1988 -
            ((C18288 + C18287) * C1983 + (C18286 + C18285) * C1987) +
            (C18291 + C18292) * C1984) *
               C92148 * C92347 +
           ((C15033 * C1386 + C92322 * C1603 + C15034 * C3434 +
             C92186 * C3664) *
                C1988 -
            ((C18292 + C18291) * C1983 + (C18290 + C18289) * C1987) +
            (C15033 * C1394 + C92322 * C1611 + C15034 * C3442 +
             C92186 * C3668) *
                C1984) *
               C92148 * C14805) *
              C2710) *
         C92099) /
        (p * q * std::sqrt(p + q));
    d2eeyy[3] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C15033 * C107 + C92322 * C308 + C15034 * C805 + C92186 * C1022) *
                 C181 +
             (C15033 * C182 + C92322 * C394 + C15034 * C890 + C92186 * C1085) *
                 C92099) *
                C92148 * C92346 +
            ((C15061 + C15060) * C181 + (C15161 + C15162) * C92099) * C92148 *
                C92347 +
            C15170 * C14805) *
               C1983 -
           (((C15165 + C15166) * C92099 + (C15069 + C15068) * C181) * C92148 *
                C14805 +
            ((C15164 + C15163) * C92099 + (C15065 + C15064) * C181) * C92148 *
                C92347 +
            ((C15162 + C15161) * C92099 + (C15060 + C15061) * C181) * C92148 *
                C92346) *
               C1984) *
              C2709 +
          ((((C18285 + C18286) * C181 + (C18399 + C18400) * C92099) * C92148 *
                C92346 +
            ((C18289 + C18290) * C181 + (C18401 + C18402) * C92099) * C92148 *
                C92347 +
            ((C15033 * C1386 + C92322 * C1603 + C15034 * C3434 +
              C92186 * C3664) *
                 C181 +
             (C15033 * C1468 + C92322 * C1669 + C15034 * C3516 +
              C92186 * C3738) *
                 C92099) *
                C92148 * C14805) *
               C1984 -
           (((C18402 + C18401) * C92099 + (C18290 + C18289) * C181) * C92148 *
                C14805 +
            ((C18400 + C18399) * C92099 + (C18286 + C18285) * C181) * C92148 *
                C92347 +
            ((C15034 * C3513 + C92186 * C3735 + C15033 * C1471 +
              C92322 * C1672) *
                 C92099 +
             (C15034 * C3431 + C92186 * C3661 + C15033 * C1389 +
              C92322 * C1606) *
                 C181) *
                C92148 * C92346) *
               C1983) *
              C2710)) /
        (p * q * std::sqrt(p + q));
    d2eeyz[3] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C15033 * C107 + C92322 * C308 + C15034 * C805 + C92186 * C1022) *
                C2849 +
            (C15033 * C245 + C92322 * C474 + C15034 * C956 + C92186 * C1146) *
                C2709 -
            (C15034 * C3431 + C92186 * C3661 + C15033 * C1389 +
             C92322 * C1606) *
                C2850 -
            (C15034 * C3587 + C92186 * C3805 + C15033 * C1540 +
             C92322 * C1727) *
                C2710) *
               C92148 * C92346 +
           ((C15061 + C15060) * C2849 + (C15258 + C15259) * C2709 -
            (C18286 + C18285) * C2850 - (C18509 + C18510) * C2710) *
               C92148 * C92347 +
           (C15072 * C2849 + C15264 * C2709 - (C18290 + C18289) * C2850 -
            (C18511 + C18512) * C2710) *
               C92148 * C14805) *
              C92099 * C1983 +
          (((C18285 + C18286) * C2850 -
            ((C15259 + C15258) * C2709 + (C15060 + C15061) * C2849) +
            (C18510 + C18509) * C2710) *
               C92148 * C92346 +
           ((C18289 + C18290) * C2850 -
            ((C15261 + C15260) * C2709 + (C15065 + C15064) * C2849) +
            (C18512 + C18511) * C2710) *
               C92148 * C92347 +
           ((C15033 * C1386 + C92322 * C1603 + C15034 * C3434 +
             C92186 * C3664) *
                C2850 -
            ((C15262 + C15263) * C2709 + (C15069 + C15068) * C2849) +
            (C15033 * C1537 + C92322 * C1733 + C15034 * C3590 +
             C92186 * C3808) *
                C2710) *
               C92148 * C14805) *
              C92099 * C1984)) /
        (p * q * std::sqrt(p + q));
    d2eezx[3] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92148 * C555) * C1987 +
             (C554 * C117 + C92148 * C561) * C1983 - C584 * C1988 -
             C585 * C1984) *
                C92346 +
            (C584 * C1987 + C585 * C1983 - C586 * C1988 - C587 * C1984) *
                C92347 +
            (C586 * C1987 + C587 * C1983 - C588 * C1988 - C589 * C1984) *
                C14805) *
               C92322 +
           ((C7244 + C7245 - C7246 - C7247) * C92346 +
            (C7248 + C7249 - C7250 - C7251) * C92347 +
            (C17672 + C17673 - C17674 - C17675) * C14805) *
               C92186) *
              C2709 +
          (((C3190 * C1988 -
             ((C554 * C1397 + C92148 * C1796) * C1983 +
              (C554 * C1389 + C92148 * C1788) * C1987) +
             C3191 * C1984) *
                C92346 +
            (C3192 * C1988 - (C3191 * C1983 + C3190 * C1987) + C3193 * C1984) *
                C92347 +
            (C3194 * C1988 - (C3193 * C1983 + C3192 * C1987) + C3195 * C1984) *
                C14805) *
               C92322 +
           ((C8213 * C1988 - (C9215 * C1983 + C9216 * C1987) + C8214 * C1984) *
                C92346 +
            (C18615 * C1988 - (C8214 * C1983 + C8213 * C1987) +
             C18616 * C1984) *
                C92347 +
            ((C554 * C3434 + C92148 * C3878) * C1988 -
             (C18616 * C1983 + C18615 * C1987) +
             (C554 * C3442 + C92148 * C3882) * C1984) *
                C14805) *
               C92186) *
              C2710) *
         C92099) /
        (p * q * std::sqrt(p + q));
    d2eezy[3] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((((C554 * C107 + C92148 * C555) * C181 +
                       (C554 * C182 + C92148 * C641) * C92099) *
                          C92346 +
                      (C648 + C664) * C92347 + C668 * C14805) *
                         C92322 +
                     ((C5484 * C181 + C5591 * C92099) * C92346 +
                      (C4710 + C4711) * C92347 + C15416 * C14805) *
                         C92186) *
                        C1983 -
                    (((C15417 + C15418) * C14805 + (C4718 + C4719) * C92347 +
                      (C4711 + C4710) * C92346) *
                         C92186 +
                     ((C666 + C654) * C14805 + (C665 + C651) * C92347 +
                      (C664 + C648) * C92346) *
                         C92322) *
                        C1984) *
                       C2709 +
                   ((((C3263 + C3275) * C92346 + (C3266 + C3276) * C92347 +
                      (C3269 + C3277) * C14805) *
                         C92322 +
                     ((C8316 + C8324) * C92346 + (C18715 + C18719) * C92347 +
                      ((C554 * C3434 + C92148 * C3878) * C181 +
                       (C554 * C3516 + C92148 * C3952) * C92099) *
                          C14805) *
                         C92186) *
                        C1984 -
                    (((C18719 + C18715) * C14805 + (C8324 + C8316) * C92347 +
                      (C9325 * C92099 + C9216 * C181) * C92346) *
                         C92186 +
                     ((C3276 + C3266) * C14805 + (C3275 + C3263) * C92347 +
                      ((C554 * C1471 + C92148 * C1854) * C92099 +
                       (C554 * C1389 + C92148 * C1788) * C181) *
                          C92346) *
                         C92322) *
                        C1983) *
                       C2710)) /
                 (p * q * std::sqrt(p + q));
    d2eezz[3] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C554 * C107 + C92148 * C555) * C2849 +
                      (C554 * C245 + C92148 * C719) * C2709 -
                      (C554 * C1389 + C92148 * C1788) * C2850 -
                      (C554 * C1540 + C92148 * C1909) * C2710) *
                         C92346 +
                     (C3345 + C3346 - C3347 - C3363) * C92347 +
                     (C3350 + C3351 - C3352 - C3364) * C14805) *
                        C92322 +
                    ((C9427 + C9428 - C9429 - C9439) * C92346 +
                     (C8425 + C8426 - C8427 - C8437) * C92347 +
                     (C18818 + C18819 - C18820 - C18824) * C14805) *
                        C92186) *
                       C92099 * C1983 +
                   (((C3347 - (C3346 + C3345) + C3363) * C92346 +
                     (C3352 - (C3351 + C3350) + C3364) * C92347 +
                     (C3357 - (C3356 + C3355) + C3365) * C14805) *
                        C92322 +
                    ((C8427 - (C8426 + C8425) + C8437) * C92346 +
                     (C18820 - (C18819 + C18818) + C18824) * C92347 +
                     ((C554 * C3434 + C92148 * C3878) * C2850 -
                      (C2638 * C2709 + C2472 * C2849) +
                      (C554 * C3590 + C92148 * C4022) * C2710) *
                         C14805) *
                        C92186) *
                       C92099 * C1984)) /
                 (p * q * std::sqrt(p + q));
    d2eexx[4] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((C14808 * C107 + C92346 * C113 + C14809 * C108 +
                     C92347 * C114 + C14810 * C109 + C14805 * C115) *
                        C104 +
                    (C14808 * C117 + C92346 * C125 + C14809 * C118 +
                     C92347 * C126 + C14810 * C119 + C14805 * C127) *
                        C93 -
                    (C14810 * C110 + C14805 * C116 + C14809 * C109 +
                     C92347 * C115 + C14808 * C108 + C92346 * C114) *
                        C105 -
                    (C14810 * C120 + C14805 * C128 + C14809 * C119 +
                     C92347 * C127 + C14808 * C118 + C92346 * C126) *
                        C94 +
                    (C14808 * C109 + C92346 * C115 + C14809 * C110 +
                     C92347 * C116 + C14810 * C111 + C14805 * C121) *
                        C106 +
                    (C14808 * C119 + C92346 * C127 + C14809 * C120 +
                     C92347 * C128 + C14810 * C122 + C14805 * C129) *
                        C95) *
                       C92322 +
                   ((C14808 * C805 + C92346 * C817 + C14809 * C804 +
                     C92347 * C816 + C14810 * C803 + C14805 * C815) *
                        C104 +
                    (C14808 * C813 + C92346 * C829 + C14809 * C812 +
                     C92347 * C828 + C14810 * C811 + C14805 * C827) *
                        C93 -
                    (C14810 * C802 + C14805 * C814 + C14809 * C803 +
                     C92347 * C815 + C14808 * C804 + C92346 * C816) *
                        C105 -
                    (C14810 * C810 + C14805 * C826 + C14809 * C811 +
                     C92347 * C827 + C14808 * C812 + C92346 * C828) *
                        C94 +
                    (C14808 * C803 + C92346 * C815 + C14809 * C802 +
                     C92347 * C814 + C14810 * C1989 + C14805 * C1990) *
                        C106 +
                    (C14808 * C811 + C92346 * C827 + C14809 * C810 +
                     C92347 * C826 + C14810 * C1991 + C14805 * C1992) *
                        C95) *
                       C92186) *
                  C92148 * C92110 * C92099) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C14808 * C107 + C92346 * C113 + C14809 * C108 +
                      C92347 * C114 + C14810 * C109 + C14805 * C115) *
                         C801 +
                     (C14808 * C117 + C92346 * C125 + C14809 * C118 +
                      C92347 * C126 + C14810 * C119 + C14805 * C127) *
                         C92078) *
                        C92322 +
                    ((C15592 + C15593 + C15594) * C801 +
                     (C15595 + C15596 + C15597) * C92078) *
                        C92186) *
                       C92148 * C92110 * C798 -
                   (((C15598 + C15599 + C15600) * C92078 +
                     (C15601 + C15602 + C15603) * C801) *
                        C92186 +
                    ((C15597 + C15596 + C15595) * C92078 +
                     (C15594 + C15593 + C15592) * C801) *
                        C92322) *
                       C92148 * C92110 * C799 +
                   (((C15603 + C15602 + C15601) * C801 +
                     (C15600 + C15599 + C15598) * C92078) *
                        C92322 +
                    ((C14808 * C4882 + C92346 * C4888 + C14809 * C4881 +
                      C92347 * C4887 + C14810 * C6557 + C14805 * C6558) *
                         C801 +
                     (C14808 * C4886 + C92346 * C4894 + C14809 * C4885 +
                      C92347 * C4893 + C14810 * C6559 + C14805 * C6560) *
                         C92078) *
                        C92186) *
                       C92148 * C92110 * C800)) /
                     (p * q * std::sqrt(p + q));
    d2eexy[4] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C14808 * C107 + C92346 * C113 + C14809 * C108 +
                      C92347 * C114 + C14810 * C109 + C14805 * C115) *
                         C181 +
                     (C14808 * C182 + C92346 * C188 + C14809 * C183 +
                      C92347 * C189 + C14810 * C184 + C14805 * C190) *
                         C92099) *
                        C92322 +
                    ((C14808 * C805 + C92346 * C817 + C14809 * C804 +
                      C92347 * C816 + C14810 * C803 + C14805 * C815) *
                         C181 +
                     (C14808 * C890 + C92346 * C898 + C14809 * C889 +
                      C92347 * C897 + C14810 * C888 + C14805 * C896) *
                         C92099) *
                        C92186) *
                       C92148 * C93 -
                   (((C14810 * C887 + C14805 * C895 + C14809 * C888 +
                      C92347 * C896 + C14808 * C889 + C92346 * C897) *
                         C92099 +
                     (C14810 * C802 + C14805 * C814 + C14809 * C803 +
                      C92347 * C815 + C14808 * C804 + C92346 * C816) *
                         C181) *
                        C92186 +
                    ((C14810 * C185 + C14805 * C191 + C14809 * C184 +
                      C92347 * C190 + C14808 * C183 + C92346 * C189) *
                         C92099 +
                     (C14810 * C110 + C14805 * C116 + C14809 * C109 +
                      C92347 * C115 + C14808 * C108 + C92346 * C114) *
                         C181) *
                        C92322) *
                       C92148 * C94 +
                   (((C14808 * C109 + C92346 * C115 + C14809 * C110 +
                      C92347 * C116 + C14810 * C111 + C14805 * C121) *
                         C181 +
                     (C14808 * C184 + C92346 * C190 + C14809 * C185 +
                      C92347 * C191 + C14810 * C186 + C14805 * C192) *
                         C92099) *
                        C92322 +
                    ((C14808 * C803 + C92346 * C815 + C14809 * C802 +
                      C92347 * C814 + C14810 * C1989 + C14805 * C1990) *
                         C181 +
                     (C14808 * C888 + C92346 * C896 + C14809 * C887 +
                      C92347 * C895 + C14810 * C2061 + C14805 * C2062) *
                         C92099) *
                        C92186) *
                       C92148 * C95) *
                  C92110) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((C14808 * C107 + C92346 * C113 + C14809 * C108 +
                     C92347 * C114 + C14810 * C109 + C14805 * C115) *
                        C884 +
                    (C14808 * C182 + C92346 * C188 + C14809 * C183 +
                     C92347 * C189 + C14810 * C184 + C14805 * C190) *
                        C798 -
                    (C15594 + C15593 + C15592) * C885 -
                    (C15690 + C15691 + C15692) * C799 +
                    (C15603 + C15602 + C15601) * C886 +
                    (C15693 + C15694 + C15695) * C800) *
                       C92322 +
                   ((C15592 + C15593 + C15594) * C884 +
                    (C15692 + C15691 + C15690) * C798 -
                    (C15601 + C15602 + C15603) * C885 -
                    (C15695 + C15694 + C15693) * C799 +
                    (C14808 * C4882 + C92346 * C4888 + C14809 * C4881 +
                     C92347 * C4887 + C14810 * C6557 + C14805 * C6558) *
                        C886 +
                    (C14808 * C5012 + C92346 * C5016 + C14809 * C5013 +
                     C92347 * C5017 + C14810 * C6683 + C14805 * C6684) *
                        C800) *
                       C92186) *
                  C92148 * C92078 * C92110) /
                     (p * q * std::sqrt(p + q));
    d2eexz[4] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C14808 * C107 + C92346 * C113 + C14809 * C108 +
                      C92347 * C114 + C14810 * C109 + C14805 * C115) *
                         C244 +
                     (C14808 * C245 + C92346 * C251 + C14809 * C246 +
                      C92347 * C252 + C14810 * C247 + C14805 * C253) *
                         C92110) *
                        C92322 +
                    ((C14808 * C805 + C92346 * C817 + C14809 * C804 +
                      C92347 * C816 + C14810 * C803 + C14805 * C815) *
                         C244 +
                     (C14808 * C956 + C92346 * C964 + C14809 * C955 +
                      C92347 * C963 + C14810 * C954 + C14805 * C962) *
                         C92110) *
                        C92186) *
                       C92148 * C92099 * C93 -
                   (((C14810 * C953 + C14805 * C961 + C14809 * C954 +
                      C92347 * C962 + C14808 * C955 + C92346 * C963) *
                         C92110 +
                     (C14810 * C802 + C14805 * C814 + C14809 * C803 +
                      C92347 * C815 + C14808 * C804 + C92346 * C816) *
                         C244) *
                        C92186 +
                    ((C14810 * C248 + C14805 * C254 + C14809 * C247 +
                      C92347 * C253 + C14808 * C246 + C92346 * C252) *
                         C92110 +
                     (C14810 * C110 + C14805 * C116 + C14809 * C109 +
                      C92347 * C115 + C14808 * C108 + C92346 * C114) *
                         C244) *
                        C92322) *
                       C92148 * C92099 * C94 +
                   (((C14808 * C109 + C92346 * C115 + C14809 * C110 +
                      C92347 * C116 + C14810 * C111 + C14805 * C121) *
                         C244 +
                     (C14808 * C247 + C92346 * C253 + C14809 * C248 +
                      C92347 * C254 + C14810 * C249 + C14805 * C255) *
                         C92110) *
                        C92322 +
                    ((C14808 * C803 + C92346 * C815 + C14809 * C802 +
                      C92347 * C814 + C14810 * C1989 + C14805 * C1990) *
                         C244 +
                     (C14808 * C954 + C92346 * C962 + C14809 * C953 +
                      C92347 * C961 + C14810 * C2129 + C14805 * C2130) *
                         C92110) *
                        C92186) *
                       C92148 * C92099 * C95)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C14808 * C107 + C92346 * C113 + C14809 * C108 +
                      C92347 * C114 + C14810 * C109 + C14805 * C115) *
                         C244 +
                     (C14808 * C245 + C92346 * C251 + C14809 * C246 +
                      C92347 * C252 + C14810 * C247 + C14805 * C253) *
                         C92110) *
                        C92322 +
                    ((C15592 + C15593 + C15594) * C244 +
                     (C15782 + C15783 + C15784) * C92110) *
                        C92186) *
                       C92148 * C798 -
                   (((C15785 + C15786 + C15787) * C92110 +
                     (C15601 + C15602 + C15603) * C244) *
                        C92186 +
                    ((C15784 + C15783 + C15782) * C92110 +
                     (C15594 + C15593 + C15592) * C244) *
                        C92322) *
                       C92148 * C799 +
                   (((C15603 + C15602 + C15601) * C244 +
                     (C15787 + C15786 + C15785) * C92110) *
                        C92322 +
                    ((C14808 * C4882 + C92346 * C4888 + C14809 * C4881 +
                      C92347 * C4887 + C14810 * C6557 + C14805 * C6558) *
                         C244 +
                     (C14808 * C5114 + C92346 * C5118 + C14809 * C5113 +
                      C92347 * C5117 + C14810 * C6795 + C14805 * C6796) *
                         C92110) *
                        C92186) *
                       C92148 * C800) *
                  C92078) /
                     (p * q * std::sqrt(p + q));
    d2eeyx[4] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C15033 * C107 + C92322 * C308 + C15034 * C805 + C92186 * C1022) *
               C104 +
           (C15033 * C117 + C92322 * C314 + C15034 * C813 + C92186 * C1030) *
               C93 -
           (C15060 + C15061) * C105 - (C15062 + C15063) * C94 + C15072 * C106 +
           C15073 * C95) *
              C92148 * C92346 +
          ((C15061 + C15060) * C104 + (C15063 + C15062) * C93 -
           (C15065 + C15064) * C105 - (C15067 + C15066) * C94 +
           (C15068 + C15069) * C106 + (C15070 + C15071) * C95) *
              C92148 * C92347 +
          (C15072 * C104 + C15073 * C93 - (C15069 + C15068) * C105 -
           (C15071 + C15070) * C94 +
           (C15033 * C111 + C92322 * C312 + C15034 * C1989 + C92186 * C2197) *
               C106 +
           (C15033 * C122 + C92322 * C318 + C15034 * C1991 + C92186 * C2198) *
               C95) *
              C92148 * C14805) *
         C92110 * C92099) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C15033 * C107 + C92322 * C308 + C15034 * C805 + C92186 * C1022) *
                C801 +
            (C15033 * C117 + C92322 * C314 + C15034 * C813 + C92186 * C1030) *
                C92078) *
               C92148 * C92346 +
           ((C15061 + C15060) * C801 + (C15063 + C15062) * C92078) * C92148 *
               C92347 +
           (C15072 * C801 + C15073 * C92078) * C92148 * C14805) *
              C92110 * C798 -
          (((C15034 * C824 + C92186 * C1033 + C15033 * C811 + C92322 * C1028) *
                C92078 +
            (C15034 * C808 + C92186 * C1025 + C15033 * C803 + C92322 * C1020) *
                C801) *
               C92148 * C14805 +
           ((C15034 * C823 + C92186 * C1032 + C15033 * C812 + C92322 * C1029) *
                C92078 +
            (C15034 * C807 + C92186 * C1024 + C15033 * C804 + C92322 * C1021) *
                C801) *
               C92148 * C92347 +
           ((C15034 * C822 + C92186 * C1031 + C15033 * C813 + C92322 * C1030) *
                C92078 +
            (C15034 * C806 + C92186 * C1023 + C15033 * C805 + C92322 * C1022) *
                C801) *
               C92148 * C92346) *
              C92110 * C799 +
          (((C15033 * C806 + C92322 * C1023 + C15034 * C4882 + C92186 * C5218) *
                C801 +
            (C15033 * C822 + C92322 * C1031 + C15034 * C4886 + C92186 * C5222) *
                C92078) *
               C92148 * C92346 +
           ((C15033 * C807 + C92322 * C1024 + C15034 * C4881 + C92186 * C5217) *
                C801 +
            (C15033 * C823 + C92322 * C1032 + C15034 * C4885 + C92186 * C5221) *
                C92078) *
               C92148 * C92347 +
           ((C15033 * C808 + C92322 * C1025 + C15034 * C6557 + C92186 * C6907) *
                C801 +
            (C15033 * C824 + C92322 * C1033 + C15034 * C6559 + C92186 * C6908) *
                C92078) *
               C92148 * C14805) *
              C92110 * C800)) /
            (p * q * std::sqrt(p + q));
    d2eeyy[4] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C15033 * C107 + C92322 * C308 + C15034 * C805 + C92186 * C1022) *
                C181 +
            (C15033 * C182 + C92322 * C394 + C15034 * C890 + C92186 * C1085) *
                C92099) *
               C92148 * C92346 +
           ((C15061 + C15060) * C181 + (C15161 + C15162) * C92099) * C92148 *
               C92347 +
           C15170 * C14805) *
              C93 -
          (((C15165 + C15166) * C92099 + (C15069 + C15068) * C181) * C92148 *
               C14805 +
           ((C15164 + C15163) * C92099 + (C15065 + C15064) * C181) * C92148 *
               C92347 +
           ((C15162 + C15161) * C92099 + (C15060 + C15061) * C181) * C92148 *
               C92346) *
              C94 +
          (C15170 * C92346 +
           ((C15068 + C15069) * C181 + (C15166 + C15165) * C92099) * C92148 *
               C92347 +
           ((C15033 * C111 + C92322 * C312 + C15034 * C1989 + C92186 * C2197) *
                C181 +
            (C15033 * C186 + C92322 * C398 + C15034 * C2061 + C92186 * C2283) *
                C92099) *
               C92148 * C14805) *
              C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C15033 * C107 + C92322 * C308 + C15034 * C805 + C92186 * C1022) *
               C884 +
           (C15033 * C182 + C92322 * C394 + C15034 * C890 + C92186 * C1085) *
               C798 -
           (C15034 * C806 + C92186 * C1023 + C15033 * C805 + C92322 * C1022) *
               C885 -
           (C15034 * C891 + C92186 * C1086 + C15033 * C890 + C92322 * C1085) *
               C799 +
           (C15033 * C806 + C92322 * C1023 + C15034 * C4882 + C92186 * C5218) *
               C886 +
           (C15033 * C891 + C92322 * C1086 + C15034 * C5012 + C92186 * C5299) *
               C800) *
              C92148 * C92346 +
          ((C15061 + C15060) * C884 + (C15161 + C15162) * C798 -
           (C15034 * C807 + C92186 * C1024 + C15033 * C804 + C92322 * C1021) *
               C885 -
           (C15034 * C892 + C92186 * C1088 + C15033 * C889 + C92322 * C1087) *
               C799 +
           (C15033 * C807 + C92322 * C1024 + C15034 * C4881 + C92186 * C5217) *
               C886 +
           (C15033 * C892 + C92322 * C1088 + C15034 * C5013 + C92186 * C5301) *
               C800) *
              C92148 * C92347 +
          (C15072 * C884 + C15167 * C798 -
           (C15034 * C808 + C92186 * C1025 + C15033 * C803 + C92322 * C1020) *
               C885 -
           (C15034 * C893 + C92186 * C1090 + C15033 * C888 + C92322 * C1089) *
               C799 +
           (C15033 * C808 + C92322 * C1025 + C15034 * C6557 + C92186 * C6907) *
               C886 +
           (C15033 * C893 + C92322 * C1090 + C15034 * C6683 + C92186 * C7025) *
               C800) *
              C92148 * C14805) *
         C92078 * C92110) /
            (p * q * std::sqrt(p + q));
    d2eeyz[4] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C15033 * C107 + C92322 * C308 + C15034 * C805 + C92186 * C1022) *
                C244 +
            (C15033 * C245 + C92322 * C474 + C15034 * C956 + C92186 * C1146) *
                C92110) *
               C92148 * C92346 +
           ((C15061 + C15060) * C244 + (C15258 + C15259) * C92110) * C92148 *
               C92347 +
           C15267 * C14805) *
              C92099 * C93 -
          (((C15262 + C15263) * C92110 + (C15069 + C15068) * C244) * C92148 *
               C14805 +
           ((C15261 + C15260) * C92110 + (C15065 + C15064) * C244) * C92148 *
               C92347 +
           ((C15259 + C15258) * C92110 + (C15060 + C15061) * C244) * C92148 *
               C92346) *
              C92099 * C94 +
          (C15267 * C92346 +
           ((C15068 + C15069) * C244 + (C15263 + C15262) * C92110) * C92148 *
               C92347 +
           ((C15033 * C111 + C92322 * C312 + C15034 * C1989 + C92186 * C2197) *
                C244 +
            (C15033 * C249 + C92322 * C478 + C15034 * C2129 + C92186 * C2371) *
                C92110) *
               C92148 * C14805) *
              C92099 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C15033 * C107 + C92322 * C308 + C15034 * C805 + C92186 * C1022) *
                C244 +
            (C15033 * C245 + C92322 * C474 + C15034 * C956 + C92186 * C1146) *
                C92110) *
               C92148 * C92346 +
           ((C15061 + C15060) * C244 + (C15258 + C15259) * C92110) * C92148 *
               C92347 +
           C15267 * C14805) *
              C798 -
          (((C15034 * C959 + C92186 * C1149 + C15033 * C954 + C92322 * C1144) *
                C92110 +
            (C15034 * C808 + C92186 * C1025 + C15033 * C803 + C92322 * C1020) *
                C244) *
               C92148 * C14805 +
           ((C15034 * C958 + C92186 * C1148 + C15033 * C955 + C92322 * C1145) *
                C92110 +
            (C15034 * C807 + C92186 * C1024 + C15033 * C804 + C92322 * C1021) *
                C244) *
               C92148 * C92347 +
           ((C15034 * C957 + C92186 * C1147 + C15033 * C956 + C92322 * C1146) *
                C92110 +
            (C15034 * C806 + C92186 * C1023 + C15033 * C805 + C92322 * C1022) *
                C244) *
               C92148 * C92346) *
              C799 +
          (((C15033 * C806 + C92322 * C1023 + C15034 * C4882 + C92186 * C5218) *
                C244 +
            (C15033 * C957 + C92322 * C1147 + C15034 * C5114 + C92186 * C5378) *
                C92110) *
               C92148 * C92346 +
           ((C15033 * C807 + C92322 * C1024 + C15034 * C4881 + C92186 * C5217) *
                C244 +
            (C15033 * C958 + C92322 * C1148 + C15034 * C5113 + C92186 * C5377) *
                C92110) *
               C92148 * C92347 +
           ((C15033 * C808 + C92322 * C1025 + C15034 * C6557 + C92186 * C6907) *
                C244 +
            (C15033 * C959 + C92322 * C1149 + C15034 * C6795 + C92186 * C7133) *
                C92110) *
               C92148 * C14805) *
              C800) *
         C92078) /
            (p * q * std::sqrt(p + q));
    d2eezx[4] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92148 * C555) * C104 +
            (C554 * C117 + C92148 * C561) * C93 - C584 * C105 - C585 * C94 +
            C586 * C106 + C587 * C95) *
               C92346 +
           (C584 * C104 + C585 * C93 - C586 * C105 - C587 * C94 + C588 * C106 +
            C589 * C95) *
               C92347 +
           (C586 * C104 + C587 * C93 - C588 * C105 - C589 * C94 + C590 * C106 +
            C591 * C95) *
               C14805) *
              C92322 +
          ((C5484 * C104 + C5485 * C93 - C2468 * C105 - C2469 * C94 +
            C2470 * C106 + C2471 * C95) *
               C92346 +
           (C2468 * C104 + C2469 * C93 - C2470 * C105 - C2471 * C94 +
            C2472 * C106 + C2473 * C95) *
               C92347 +
           (C2470 * C104 + C2471 * C93 - C2472 * C105 - C2473 * C94 +
            (C554 * C1989 + C92148 * C2453) * C106 +
            (C554 * C1991 + C92148 * C2454) * C95) *
               C14805) *
              C92186) *
         C92110 * C92099) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92148 * C555) * C801 +
             (C554 * C117 + C92148 * C561) * C92078) *
                C92346 +
            (C584 * C801 + C585 * C92078) * C92347 +
            (C586 * C801 + C587 * C92078) * C14805) *
               C92322 +
           ((C5493 + C5494) * C92346 + (C5468 + C5469) * C92347 +
            (C16084 + C16085) * C14805) *
               C92186) *
              C92110 * C798 -
          (((C16086 + C16087) * C14805 + (C5475 + C5474) * C92347 +
            (C5496 + C5495) * C92346) *
               C92186 +
           ((C16085 + C16084) * C14805 + (C5469 + C5468) * C92347 +
            (C5494 + C5493) * C92346) *
               C92322) *
              C92110 * C799 +
          ((C5502 * C92346 + C5488 * C92347 + (C16087 + C16086) * C14805) *
               C92322 +
           ((C5501 + C5500) * C92346 + (C5499 + C5498) * C92347 +
            ((C554 * C6557 + C92148 * C7241) * C801 +
             (C554 * C6559 + C92148 * C7242) * C92078) *
                C14805) *
               C92186) *
              C92110 * C800)) /
            (p * q * std::sqrt(p + q));
    d2eezy[4] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92148 * C555) * C181 +
             (C554 * C182 + C92148 * C641) * C92099) *
                C92346 +
            (C648 + C664) * C92347 + C668 * C14805) *
               C92322 +
           ((C5484 * C181 + C5591 * C92099) * C92346 +
            (C4710 + C4711) * C92347 + C15416 * C14805) *
               C92186) *
              C93 -
          (((C15417 + C15418) * C14805 + (C4718 + C4719) * C92347 +
            (C4711 + C4710) * C92346) *
               C92186 +
           ((C666 + C654) * C14805 + (C665 + C651) * C92347 +
            (C664 + C648) * C92346) *
               C92322) *
              C94 +
          ((C668 * C92346 + C669 * C92347 + (C659 + C667) * C14805) * C92322 +
           (C15416 * C92346 + (C15418 + C15417) * C92347 +
            ((C554 * C1989 + C92148 * C2453) * C181 +
             (C554 * C2061 + C92148 * C2539) * C92099) *
                C14805) *
               C92186) *
              C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92148 * C555) * C884 +
            (C554 * C182 + C92148 * C641) * C798 - C5484 * C885 - C5591 * C799 +
            C5486 * C886 + C5592 * C800) *
               C92346 +
           (C584 * C884 + C660 * C798 - C2468 * C885 - C2556 * C799 +
            C4632 * C886 + C4720 * C800) *
               C92347 +
           (C586 * C884 + C661 * C798 - C2470 * C885 - C2557 * C799 +
            C4634 * C886 + C4721 * C800) *
               C14805) *
              C92322 +
          ((C5484 * C884 + C5591 * C798 - C5486 * C885 - C5592 * C799 +
            C5492 * C886 + C5593 * C800) *
               C92346 +
           (C2468 * C884 + C2556 * C798 - C4632 * C885 - C4720 * C799 +
            C5490 * C886 + C5594 * C800) *
               C92347 +
           (C2470 * C884 + C2557 * C798 - C4634 * C885 - C4721 * C799 +
            (C554 * C6557 + C92148 * C7241) * C886 +
            (C554 * C6683 + C92148 * C7357) * C800) *
               C14805) *
              C92186) *
         C92078 * C92110) /
            (p * q * std::sqrt(p + q));
    d2eezz[4] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92148 * C555) * C244 +
             (C554 * C245 + C92148 * C719) * C92110) *
                C92346 +
            (C726 + C742) * C92347 + C746 * C14805) *
               C92322 +
           ((C5673 + C5691) * C92346 + C7466 * C92347 + C15493 * C14805) *
               C92186) *
              C92099 * C93 -
          (((C2641 + C2631) * C14805 + (C2642 + C2634) * C92347 +
            C7468 * C92346) *
               C92186 +
           ((C744 + C732) * C14805 + (C743 + C729) * C92347 +
            (C742 + C726) * C92346) *
               C92322) *
              C92099 * C94 +
          ((C746 * C92346 + C747 * C92347 + (C737 + C745) * C14805) * C92322 +
           (C15493 * C92346 + (C2631 + C2641) * C92347 +
            ((C554 * C1989 + C92148 * C2453) * C244 +
             (C554 * C2129 + C92148 * C2627) * C92110) *
                C14805) *
               C92186) *
              C92099 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92148 * C555) * C244 +
             (C554 * C245 + C92148 * C719) * C92110) *
                C92346 +
            (C726 + C742) * C92347 + C746 * C14805) *
               C92322 +
           ((C5673 + C5691) * C92346 + C7466 * C92347 + C15493 * C14805) *
               C92186) *
              C798 -
          (((C4807 + C4803) * C14805 + C7467 * C92347 +
            (C5692 + C5676) * C92346) *
               C92186 +
           ((C2642 + C2634) * C14805 + C7468 * C92347 +
            (C5691 + C5673) * C92346) *
               C92322) *
              C799 +
          ((C5695 * C92346 + C5679 * C92347 + (C4803 + C4807) * C14805) *
               C92322 +
           ((C5685 + C5694) * C92346 + (C5682 + C5693) * C92347 +
            ((C554 * C6557 + C92148 * C7241) * C244 +
             (C554 * C6795 + C92148 * C7464) * C92110) *
                C14805) *
               C92186) *
              C800) *
         C92078) /
            (p * q * std::sqrt(p + q));
    d2eexx[5] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C92067 * C114) *
                 C1987 +
             (C4102 * C117 + C4097 * C125 + C4103 * C118 + C92067 * C126) *
                 C1983 -
             (C4103 * C109 + C92067 * C115 + C4102 * C108 + C4097 * C114) *
                 C1988 -
             (C4103 * C119 + C92067 * C127 + C4102 * C118 + C4097 * C126) *
                 C1984) *
                C92322 +
            ((C4922 + C4923) * C1987 + (C4924 + C4925) * C1983 -
             (C6578 + C6579) * C1988 - (C6580 + C6581) * C1984) *
                C92186) *
               C92323 +
           (((C11001 + C11002) * C1987 + (C11003 + C11004) * C1983 -
             (C12861 + C12862) * C1988 - (C12863 + C12864) * C1984) *
                C92322 +
            ((C8568 + C8567) * C1987 + (C8566 + C8565) * C1983 -
             (C27650 + C27651) * C1988 - (C27652 + C27653) * C1984) *
                C92186) *
               C92212) *
              C92110 * C1985 +
          ((((C6579 + C6578) * C1988 -
             ((C4925 + C4924) * C1983 + (C4923 + C4922) * C1987) +
             (C6581 + C6580) * C1984) *
                C92322 +
            ((C6583 + C6582) * C1988 -
             ((C4929 + C4928) * C1983 + (C4927 + C4926) * C1987) +
             (C6585 + C6584) * C1984) *
                C92186) *
               C92323 +
           (((C27651 + C27650) * C1988 -
             ((C8565 + C8566) * C1983 + (C8567 + C8568) * C1987) +
             (C27653 + C27652) * C1984) *
                C92322 +
            ((C4102 * C5771 + C4097 * C5779 + C4103 * C7566 + C92067 * C7567) *
                 C1988 -
             ((C8561 + C8562) * C1983 + (C8563 + C8564) * C1987) +
             (C4102 * C5777 + C4097 * C5789 + C4103 * C7568 + C92067 * C7569) *
                 C1984) *
                C92186) *
               C92212) *
              C92110 * C1986)) /
        (p * q * std::sqrt(p + q));
    d2eexy[5] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C92067 * C114) *
                 C2059 +
             (C4102 * C182 + C4097 * C188 + C4103 * C183 + C92067 * C189) *
                 C1985 -
             (C4923 + C4922) * C2060 - (C5033 + C5034) * C1986) *
                C92322 +
            ((C4922 + C4923) * C2059 + (C5034 + C5033) * C1985 -
             (C4927 + C4926) * C2060 - (C5036 + C5035) * C1986) *
                C92186) *
               C92323 +
           (((C11001 + C11002) * C2059 + (C11114 + C11115) * C1985 -
             (C8567 + C8568) * C2060 - (C8680 + C8679) * C1986) *
                C92322 +
            ((C8568 + C8567) * C2059 + (C8679 + C8680) * C1985 -
             (C8563 + C8564) * C2060 - (C8682 + C8681) * C1986) *
                C92186) *
               C92212) *
              C1983 +
          ((((C6579 + C6578) * C2060 -
             ((C4103 * C184 + C92067 * C190 + C4102 * C183 + C4097 * C189) *
                  C1985 +
              (C4103 * C109 + C92067 * C115 + C4102 * C108 + C4097 * C114) *
                  C2059) +
             (C6694 + C6695) * C1986) *
                C92322 +
            ((C6583 + C6582) * C2060 -
             ((C6695 + C6694) * C1985 + (C6578 + C6579) * C2059) +
             (C6696 + C6697) * C1986) *
                C92186) *
               C92323 +
           (((C27651 + C27650) * C2060 -
             ((C12979 + C12980) * C1985 + (C12861 + C12862) * C2059) +
             (C27788 + C27789) * C1986) *
                C92322 +
            ((C4102 * C5771 + C4097 * C5779 + C4103 * C7566 + C92067 * C7567) *
                 C2060 -
             ((C27789 + C27788) * C1985 + (C27650 + C27651) * C2059) +
             (C4102 * C5869 + C4097 * C5875 + C4103 * C7668 + C92067 * C7669) *
                 C1986) *
                C92186) *
               C92212) *
              C1984) *
         C92110) /
        (p * q * std::sqrt(p + q));
    d2eexz[5] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C92067 * C114) *
                  C244 +
              (C4102 * C245 + C4097 * C251 + C4103 * C246 + C92067 * C252) *
                  C92110) *
                 C92322 +
             ((C4922 + C4923) * C244 + (C5135 + C5136) * C92110) * C92186) *
                C92323 +
            (((C11001 + C11002) * C244 + (C11219 + C11218) * C92110) * C92322 +
             ((C8568 + C8567) * C244 + (C8794 + C8793) * C92110) * C92186) *
                C92212) *
               C1985 -
           ((((C8795 + C8796) * C92110 + (C8563 + C8564) * C244) * C92186 +
             ((C8793 + C8794) * C92110 + (C8567 + C8568) * C244) * C92322) *
                C92212 +
            (((C5138 + C5137) * C92110 + (C4927 + C4926) * C244) * C92186 +
             ((C5136 + C5135) * C92110 + (C4923 + C4922) * C244) * C92322) *
                C92323) *
               C1986) *
              C1983 +
          (((((C6579 + C6578) * C244 + (C6806 + C6807) * C92110) * C92322 +
             ((C6583 + C6582) * C244 + (C6808 + C6809) * C92110) * C92186) *
                C92323 +
            (((C27651 + C27650) * C244 + (C27924 + C27925) * C92110) * C92322 +
             ((C4102 * C5771 + C4097 * C5779 + C4103 * C7566 + C92067 * C7567) *
                  C244 +
              (C4102 * C5957 + C4097 * C5963 + C4103 * C7768 + C92067 * C7769) *
                  C92110) *
                 C92186) *
                C92212) *
               C1986 -
           ((((C27925 + C27924) * C92110 + (C27650 + C27651) * C244) * C92186 +
             ((C13090 + C13089) * C92110 + (C12861 + C12862) * C244) * C92322) *
                C92212 +
            (((C6807 + C6806) * C92110 + (C6578 + C6579) * C244) * C92186 +
             ((C4103 * C247 + C92067 * C253 + C4102 * C246 + C4097 * C252) *
                  C92110 +
              (C4103 * C109 + C92067 * C115 + C4102 * C108 + C4097 * C114) *
                  C244) *
                 C92322) *
                C92323) *
               C1985) *
              C1984)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[5] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C15033 * C107 + C92322 * C308 + C15034 * C805 + C92186 * C1022) *
                 C1987 +
             (C15033 * C117 + C92322 * C314 + C15034 * C813 + C92186 * C1030) *
                 C1983 -
             (C15060 + C15061) * C1988 - (C15062 + C15063) * C1984) *
                C92323 +
            ((C26974 + C26975) * C1987 + (C26976 + C26977) * C1983 -
             (C18286 + C18285) * C1988 - (C18288 + C18287) * C1984) *
                C92212) *
               C4097 +
           (((C15061 + C15060) * C1987 + (C15063 + C15062) * C1983 -
             (C15065 + C15064) * C1988 - (C15067 + C15066) * C1984) *
                C92323 +
            ((C18285 + C18286) * C1987 + (C18287 + C18288) * C1983 -
             (C18290 + C18289) * C1988 - (C18292 + C18291) * C1984) *
                C92212) *
               C92067) *
              C92110 * C1985 +
          ((((C17346 + C17347) * C1988 -
             ((C15034 * C822 + C92186 * C1031 + C15033 * C813 +
               C92322 * C1030) *
                  C1983 +
              (C15034 * C806 + C92186 * C1023 + C15033 * C805 +
               C92322 * C1022) *
                  C1987) +
             (C17348 + C17349) * C1984) *
                C92323 +
            ((C28064 + C28065) * C1988 -
             ((C15034 * C5778 + C92186 * C6048 + C15033 * C3439 +
               C92322 * C3665) *
                  C1983 +
              (C15034 * C5772 + C92186 * C6042 + C15033 * C3431 +
               C92322 * C3661) *
                  C1987) +
             (C28066 + C28067) * C1984) *
                C92212) *
               C4097 +
           (((C17350 + C17351) * C1988 -
             ((C17349 + C17348) * C1983 + (C17347 + C17346) * C1987) +
             (C17352 + C17353) * C1984) *
                C92323 +
            ((C15033 * C3433 + C92322 * C3663 + C15034 * C7566 +
              C92186 * C7868) *
                 C1988 -
             ((C28067 + C28066) * C1983 + (C28065 + C28064) * C1987) +
             (C15033 * C3441 + C92322 * C3667 + C15034 * C7568 +
              C92186 * C7869) *
                 C1984) *
                C92212) *
               C92067) *
              C92110 * C1986)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[5] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C15033 * C107 + C92322 * C308 + C15034 * C805 + C92186 * C1022) *
                 C2059 +
             (C15033 * C182 + C92322 * C394 + C15034 * C890 + C92186 * C1085) *
                 C1985 -
             (C15034 * C806 + C92186 * C1023 + C15033 * C805 + C92322 * C1022) *
                 C2060 -
             (C15034 * C891 + C92186 * C1086 + C15033 * C890 + C92322 * C1085) *
                 C1986) *
                C92323 +
            ((C26974 + C26975) * C2059 + (C27096 + C27097) * C1985 -
             (C15034 * C5772 + C92186 * C6042 + C15033 * C3431 +
              C92322 * C3661) *
                 C2060 -
             (C15034 * C5870 + C92186 * C6128 + C15033 * C3513 +
              C92322 * C3735) *
                 C1986) *
                C92212) *
               C4097 +
           (((C15061 + C15060) * C2059 + (C15161 + C15162) * C1985 -
             (C17347 + C17346) * C2060 - (C17460 + C17461) * C1986) *
                C92323 +
            ((C18285 + C18286) * C2059 + (C18399 + C18400) * C1985 -
             (C28065 + C28064) * C2060 - (C28202 + C28203) * C1986) *
                C92212) *
               C92067) *
              C1983 +
          ((((C17346 + C17347) * C2060 -
             ((C15162 + C15161) * C1985 + (C15060 + C15061) * C2059) +
             (C17461 + C17460) * C1986) *
                C92323 +
            ((C28064 + C28065) * C2060 -
             ((C18400 + C18399) * C1985 + (C18286 + C18285) * C2059) +
             (C28203 + C28202) * C1986) *
                C92212) *
               C4097 +
           (((C17350 + C17351) * C2060 -
             ((C15164 + C15163) * C1985 + (C15065 + C15064) * C2059) +
             (C17463 + C17462) * C1986) *
                C92323 +
            ((C15033 * C3433 + C92322 * C3663 + C15034 * C7566 +
              C92186 * C7868) *
                 C2060 -
             ((C18402 + C18401) * C1985 + (C18290 + C18289) * C2059) +
             (C15033 * C3515 + C92322 * C3737 + C15034 * C7668 +
              C92186 * C7986) *
                 C1986) *
                C92212) *
               C92067) *
              C1984) *
         C92110) /
        (p * q * std::sqrt(p + q));
    d2eeyz[5] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C15033 * C107 + C92322 * C308 + C15034 * C805 + C92186 * C1022) *
                  C244 +
              (C15033 * C245 + C92322 * C474 + C15034 * C956 + C92186 * C1146) *
                  C92110) *
                 C92323 +
             ((C26974 + C26975) * C244 + (C27213 + C27212) * C92110) * C92212) *
                C4097 +
            (((C15061 + C15060) * C244 + (C15258 + C15259) * C92110) * C92323 +
             ((C18285 + C18286) * C244 + (C18510 + C18509) * C92110) * C92212) *
                C92067) *
               C1985 -
           ((((C28338 + C28339) * C92110 + (C28065 + C28064) * C244) * C92212 +
             ((C17572 + C17573) * C92110 + (C17347 + C17346) * C244) * C92323) *
                C92067 +
            (((C15034 * C5958 + C92186 * C6207 + C15033 * C3587 +
               C92322 * C3805) *
                  C92110 +
              (C15034 * C5772 + C92186 * C6042 + C15033 * C3431 +
               C92322 * C3661) *
                  C244) *
                 C92212 +
             ((C15034 * C957 + C92186 * C1147 + C15033 * C956 +
               C92322 * C1146) *
                  C92110 +
              (C15034 * C806 + C92186 * C1023 + C15033 * C805 +
               C92322 * C1022) *
                  C244) *
                 C92323) *
                C4097) *
               C1986) *
              C1983 +
          (((((C17346 + C17347) * C244 + (C17573 + C17572) * C92110) * C92323 +
             ((C28064 + C28065) * C244 + (C28339 + C28338) * C92110) * C92212) *
                C4097 +
            (((C17350 + C17351) * C244 + (C17571 + C17570) * C92110) * C92323 +
             ((C15033 * C3433 + C92322 * C3663 + C15034 * C7566 +
               C92186 * C7868) *
                  C244 +
              (C15033 * C3589 + C92322 * C3807 + C15034 * C7768 +
               C92186 * C8094) *
                  C92110) *
                 C92212) *
                C92067) *
               C1986 -
           ((((C18511 + C18512) * C92110 + (C18290 + C18289) * C244) * C92212 +
             ((C15261 + C15260) * C92110 + (C15065 + C15064) * C244) * C92323) *
                C92067 +
            (((C18509 + C18510) * C92110 + (C18286 + C18285) * C244) * C92212 +
             ((C15259 + C15258) * C92110 + (C15060 + C15061) * C244) * C92323) *
                C4097) *
               C1985) *
              C1984)) /
        (p * q * std::sqrt(p + q));
    d2eezx[5] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C20274 * C107 + C92323 * C555 + C20275 * C1389 + C92212 * C1788) *
                 C1987 +
             (C20274 * C117 + C92323 * C561 + C20275 * C1397 + C92212 * C1796) *
                 C1983 -
             (C20301 + C20302) * C1988 - (C20303 + C20304) * C1984) *
                C4097 +
            ((C20302 + C20301) * C1987 + (C20304 + C20303) * C1983 -
             (C20306 + C20305) * C1988 - (C20308 + C20307) * C1984) *
                C92067) *
               C92322 +
           (((C26314 + C26315) * C1987 + (C26316 + C26317) * C1983 -
             C28470 * C1988 - C28471 * C1984) *
                C4097 +
            (C28472 * C1987 + C28473 * C1983 - (C22640 + C22639) * C1988 -
             (C22642 + C22641) * C1984) *
                C92067) *
               C92186) *
              C92110 * C1985 +
          (((C28472 * C1988 -
             ((C26317 + C26316) * C1983 + (C26315 + C26314) * C1987) +
             C28473 * C1984) *
                C4097 +
            ((C22639 + C22640) * C1988 - (C28471 * C1983 + C28470 * C1987) +
             (C22641 + C22642) * C1984) *
                C92067) *
               C92322 +
           (((C26321 + C26320) * C1988 -
             ((C26322 + C26323) * C1983 + (C26324 + C26325) * C1987) +
             (C26319 + C26318) * C1984) *
                C4097 +
            ((C20274 * C808 + C92323 * C1207 + C20275 * C7566 +
              C92212 * C8202) *
                 C1988 -
             ((C26318 + C26319) * C1983 + (C26320 + C26321) * C1987) +
             (C20274 * C824 + C92323 * C1215 + C20275 * C7568 +
              C92212 * C8203) *
                 C1984) *
                C92067) *
               C92186) *
              C92110 * C1986)) /
        (p * q * std::sqrt(p + q));
    d2eezy[5] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C20274 * C107 + C92323 * C555 + C20275 * C1389 + C92212 * C1788) *
                 C2059 +
             (C20274 * C182 + C92323 * C641 + C20275 * C1471 + C92212 * C1854) *
                 C1985 -
             (C26315 + C26314) * C2060 - (C26436 + C26437) * C1986) *
                C4097 +
            ((C20302 + C20301) * C2059 + (C20402 + C20403) * C1985 -
             C28470 * C2060 - C28604 * C1986) *
                C92067) *
               C92322 +
           (((C26314 + C26315) * C2059 + (C26437 + C26436) * C1985 -
             (C26324 + C26325) * C2060 - (C26439 + C26438) * C1986) *
                C4097 +
            (C28472 * C2059 + C28605 * C1985 - (C26320 + C26321) * C2060 -
             (C26441 + C26440) * C1986) *
                C92067) *
               C92186) *
              C1983 +
          (((C28472 * C2060 -
             ((C20403 + C20402) * C1985 + (C20301 + C20302) * C2059) +
             C28605 * C1986) *
                C4097 +
            ((C22639 + C22640) * C2060 -
             ((C20405 + C20404) * C1985 + (C20306 + C20305) * C2059) +
             (C22752 + C22751) * C1986) *
                C92067) *
               C92322 +
           (((C26321 + C26320) * C2060 - (C28604 * C1985 + C28470 * C2059) +
             (C26440 + C26441) * C1986) *
                C4097 +
            ((C20274 * C808 + C92323 * C1207 + C20275 * C7566 +
              C92212 * C8202) *
                 C2060 -
             ((C22751 + C22752) * C1985 + (C22640 + C22639) * C2059) +
             (C20274 * C893 + C92323 * C1272 + C20275 * C7668 +
              C92212 * C8314) *
                 C1986) *
                C92067) *
               C92186) *
              C1984) *
         C92110) /
        (p * q * std::sqrt(p + q));
    d2eezz[5] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C20274 * C107 + C92323 * C555 + C20275 * C1389 +
               C92212 * C1788) *
                  C244 +
              (C20274 * C245 + C92323 * C719 + C20275 * C1540 +
               C92212 * C1909) *
                  C92110) *
                 C4097 +
             ((C20302 + C20301) * C244 + (C20498 + C20499) * C92110) * C92067) *
                C92322 +
            (((C26314 + C26315) * C244 + (C26552 + C26553) * C92110) * C4097 +
             C28742 * C92067) *
                C92186) *
               C1985 -
           ((((C26554 + C26555) * C92110 + (C26320 + C26321) * C244) * C92067 +
             ((C26556 + C26557) * C92110 + (C26324 + C26325) * C244) * C4097) *
                C92186 +
            (C28743 * C92067 +
             ((C26553 + C26552) * C92110 + (C26315 + C26314) * C244) * C4097) *
                C92322) *
               C1986) *
              C1983 +
          (((C28742 * C4097 +
             ((C22639 + C22640) * C244 + (C22860 + C22859) * C92110) * C92067) *
                C92322 +
            (((C26321 + C26320) * C244 + (C26555 + C26554) * C92110) * C4097 +
             ((C20274 * C808 + C92323 * C1207 + C20275 * C7566 +
               C92212 * C8202) *
                  C244 +
              (C20274 * C959 + C92323 * C1331 + C20275 * C7768 +
               C92212 * C8423) *
                  C92110) *
                 C92067) *
                C92186) *
               C1986 -
           ((((C22859 + C22860) * C92110 + (C22640 + C22639) * C244) * C92067 +
             C28743 * C4097) *
                C92186 +
            (((C20501 + C20500) * C92110 + (C20306 + C20305) * C244) * C92067 +
             ((C20499 + C20498) * C92110 + (C20301 + C20302) * C244) * C4097) *
                C92322) *
               C1985) *
              C1984)) /
        (p * q * std::sqrt(p + q));
    d2eexx[6] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C92067 * C114) *
                  C801 +
              (C4102 * C117 + C4097 * C125 + C4103 * C118 + C92067 * C126) *
                  C92078) *
                 C92322 +
             ((C4922 + C4923) * C801 + (C4924 + C4925) * C92078) * C92186) *
                C92323 +
            (((C11001 + C11002) * C801 + (C11003 + C11004) * C92078) * C92322 +
             C30090 * C92186) *
                C92212) *
               C2709 -
           ((((C13869 + C13868) * C92078 + (C13867 + C13866) * C801) * C92186 +
             ((C11008 + C11007) * C92078 + (C11006 + C11005) * C801) * C92322) *
                C92212 +
            (C30091 * C92186 +
             ((C11004 + C11003) * C92078 + (C11002 + C11001) * C801) * C92322) *
                C92323) *
               C2710) *
              C1985 +
          (((C30090 * C92322 +
             ((C8564 + C8563) * C801 + (C8562 + C8561) * C92078) * C92186) *
                C92323 +
            (((C13866 + C13867) * C801 + (C13868 + C13869) * C92078) * C92322 +
             ((C4102 * C5775 + C4097 * C5785 + C4103 * C5776 + C92067 * C5786) *
                  C801 +
              (C4102 * C5787 + C4097 * C5793 + C4103 * C5788 + C92067 * C5794) *
                  C92078) *
                 C92186) *
                C92212) *
               C2710 -
           ((((C8561 + C8562) * C92078 + (C8563 + C8564) * C801) * C92186 +
             C30091 * C92322) *
                C92212 +
            (((C4929 + C4928) * C92078 + (C4927 + C4926) * C801) * C92186 +
             ((C4925 + C4924) * C92078 + (C4923 + C4922) * C801) * C92322) *
                C92323) *
               C2709) *
              C1986)) /
        (p * q * std::sqrt(p + q));
    d2eexy[6] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C92067 * C114) *
                 C2059 +
             (C4102 * C182 + C4097 * C188 + C4103 * C183 + C92067 * C189) *
                 C1985 -
             (C4923 + C4922) * C2060 - (C5033 + C5034) * C1986) *
                C92322 +
            ((C4922 + C4923) * C2059 + (C5034 + C5033) * C1985 -
             (C4927 + C4926) * C2060 - (C5036 + C5035) * C1986) *
                C92186) *
               C92323 +
           (((C11001 + C11002) * C2059 + (C11114 + C11115) * C1985 -
             C30085 * C2060 - C30222 * C1986) *
                C92322 +
            (C30082 * C2059 + C30223 * C1985 - (C8563 + C8564) * C2060 -
             (C8682 + C8681) * C1986) *
                C92186) *
               C92212) *
              C92078 * C2709 +
          (((C30082 * C2060 -
             ((C11115 + C11114) * C1985 + (C11002 + C11001) * C2059) +
             C30223 * C1986) *
                C92322 +
            ((C8564 + C8563) * C2060 - (C30222 * C1985 + C30085 * C2059) +
             (C8681 + C8682) * C1986) *
                C92186) *
               C92323 +
           (((C13866 + C13867) * C2060 -
             ((C11117 + C11116) * C1985 + (C11006 + C11005) * C2059) +
             (C13977 + C13976) * C1986) *
                C92322 +
            ((C4102 * C5775 + C4097 * C5785 + C4103 * C5776 + C92067 * C5786) *
                 C2060 -
             ((C13976 + C13977) * C1985 + (C13867 + C13866) * C2059) +
             (C4102 * C5873 + C4097 * C5879 + C4103 * C5874 + C92067 * C5880) *
                 C1986) *
                C92186) *
               C92212) *
              C92078 * C2710)) /
        (p * q * std::sqrt(p + q));
    d2eexz[6] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C92067 * C114) *
                 C2849 +
             (C4102 * C245 + C4097 * C251 + C4103 * C246 + C92067 * C252) *
                 C2709 -
             (C11002 + C11001) * C2850 - (C11218 + C11219) * C2710) *
                C92322 +
            ((C4922 + C4923) * C2849 + (C5135 + C5136) * C2709 -
             C30085 * C2850 - C30354 * C2710) *
                C92186) *
               C92323 +
           (((C11001 + C11002) * C2849 + (C11219 + C11218) * C2709 -
             (C11006 + C11005) * C2850 - (C11221 + C11220) * C2710) *
                C92322 +
            (C30082 * C2849 + C30355 * C2709 - (C13867 + C13866) * C2850 -
             (C14085 + C14084) * C2710) *
                C92186) *
               C92212) *
              C1985 +
          (((C30082 * C2850 -
             ((C5136 + C5135) * C2709 + (C4923 + C4922) * C2849) +
             C30355 * C2710) *
                C92322 +
            ((C8564 + C8563) * C2850 -
             ((C5138 + C5137) * C2709 + (C4927 + C4926) * C2849) +
             (C8796 + C8795) * C2710) *
                C92186) *
               C92323 +
           (((C13866 + C13867) * C2850 - (C30354 * C2709 + C30085 * C2849) +
             (C14084 + C14085) * C2710) *
                C92322 +
            ((C4102 * C5775 + C4097 * C5785 + C4103 * C5776 + C92067 * C5786) *
                 C2850 -
             ((C8795 + C8796) * C2709 + (C8563 + C8564) * C2849) +
             (C4102 * C5959 + C4097 * C5965 + C4103 * C5960 + C92067 * C5966) *
                 C2710) *
                C92186) *
               C92212) *
              C1986) *
         C92078) /
        (p * q * std::sqrt(p + q));
    d2eeyx[6] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C15033 * C107 + C92322 * C308 + C15034 * C805 + C92186 * C1022) *
                  C801 +
              (C15033 * C117 + C92322 * C314 + C15034 * C813 + C92186 * C1030) *
                  C92078) *
                 C92323 +
             ((C26974 + C26975) * C801 + (C26976 + C26977) * C92078) * C92212) *
                C4097 +
            (((C15061 + C15060) * C801 + (C15063 + C15062) * C92078) * C92323 +
             (C29266 * C801 + C29267 * C92078) * C92212) *
                C92067) *
               C2709 -
           ((((C26978 + C26979) * C92078 + (C26980 + C26981) * C801) * C92212 +
             (C29265 * C92078 + C29264 * C801) * C92323) *
                C92067 +
            (((C26982 + C26983) * C92078 + (C26984 + C26985) * C801) * C92212 +
             ((C26977 + C26976) * C92078 + (C26975 + C26974) * C801) * C92323) *
                C4097) *
               C2710) *
              C1985 +
          (((((C30494 + C30495) * C801 + (C30496 + C30497) * C92078) * C92323 +
             ((C15033 * C5773 + C92322 * C6043 + C15034 * C5775 +
               C92186 * C6044) *
                  C801 +
              (C15033 * C5783 + C92322 * C6049 + C15034 * C5787 +
               C92186 * C6050) *
                  C92078) *
                 C92212) *
                C4097 +
            (((C28064 + C28065) * C801 + (C28066 + C28067) * C92078) * C92323 +
             ((C15033 * C5774 + C92322 * C6045 + C15034 * C5776 +
               C92186 * C6046) *
                  C801 +
              (C15033 * C5784 + C92322 * C6051 + C15034 * C5788 +
               C92186 * C6052) *
                  C92078) *
                 C92212) *
                C92067) *
               C2710 -
           ((((C28067 + C28066) * C92078 + (C28065 + C28064) * C801) * C92212 +
             ((C17349 + C17348) * C92078 + (C17347 + C17346) * C801) * C92323) *
                C92067 +
            (((C30497 + C30496) * C92078 + (C30495 + C30494) * C801) * C92212 +
             ((C15034 * C822 + C92186 * C1031 + C15033 * C813 +
               C92322 * C1030) *
                  C92078 +
              (C15034 * C806 + C92186 * C1023 + C15033 * C805 +
               C92322 * C1022) *
                  C801) *
                 C92323) *
                C4097) *
               C2709) *
              C1986)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[6] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C15033 * C107 + C92322 * C308 + C15034 * C805 + C92186 * C1022) *
                 C2059 +
             (C15033 * C182 + C92322 * C394 + C15034 * C890 + C92186 * C1085) *
                 C1985 -
             (C15034 * C806 + C92186 * C1023 + C15033 * C805 + C92322 * C1022) *
                 C2060 -
             (C15034 * C891 + C92186 * C1086 + C15033 * C890 + C92322 * C1085) *
                 C1986) *
                C92323 +
            ((C26974 + C26975) * C2059 + (C27096 + C27097) * C1985 -
             (C30495 + C30494) * C2060 - (C30632 + C30633) * C1986) *
                C92212) *
               C4097 +
           (((C15061 + C15060) * C2059 + (C15161 + C15162) * C1985 -
             (C17347 + C17346) * C2060 - (C17460 + C17461) * C1986) *
                C92323 +
            (C29266 * C2059 + C29399 * C1985 - (C28065 + C28064) * C2060 -
             (C28202 + C28203) * C1986) *
                C92212) *
               C92067) *
              C92078 * C2709 +
          ((((C30494 + C30495) * C2060 -
             ((C27097 + C27096) * C1985 + (C26975 + C26974) * C2059) +
             (C30633 + C30632) * C1986) *
                C92323 +
            ((C15033 * C5773 + C92322 * C6043 + C15034 * C5775 +
              C92186 * C6044) *
                 C2060 -
             ((C27100 + C27101) * C1985 + (C26984 + C26985) * C2059) +
             (C15033 * C5871 + C92322 * C6129 + C15034 * C5873 +
              C92186 * C6130) *
                 C1986) *
                C92212) *
               C4097 +
           (((C28064 + C28065) * C2060 - (C29400 * C1985 + C29264 * C2059) +
             (C28203 + C28202) * C1986) *
                C92323 +
            ((C15033 * C5774 + C92322 * C6045 + C15034 * C5776 +
              C92186 * C6046) *
                 C2060 -
             ((C27098 + C27099) * C1985 + (C26980 + C26981) * C2059) +
             (C15033 * C5872 + C92322 * C6131 + C15034 * C5874 +
              C92186 * C6132) *
                 C1986) *
                C92212) *
               C92067) *
              C92078 * C2710)) /
        (p * q * std::sqrt(p + q));
    d2eeyz[6] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C15033 * C107 + C92322 * C308 + C15034 * C805 + C92186 * C1022) *
                 C2849 +
             (C15033 * C245 + C92322 * C474 + C15034 * C956 + C92186 * C1146) *
                 C2709 -
             (C26975 + C26974) * C2850 - (C27212 + C27213) * C2710) *
                C92323 +
            ((C26974 + C26975) * C2849 + (C27213 + C27212) * C2709 -
             (C26984 + C26985) * C2850 - (C27215 + C27214) * C2710) *
                C92212) *
               C4097 +
           (((C15061 + C15060) * C2849 + (C15258 + C15259) * C2709 -
             C29264 * C2850 - C29536 * C2710) *
                C92323 +
            (C29266 * C2849 + C29537 * C2709 - (C26980 + C26981) * C2850 -
             (C27217 + C27216) * C2710) *
                C92212) *
               C92067) *
              C1985 +
          ((((C30494 + C30495) * C2850 -
             ((C15034 * C957 + C92186 * C1147 + C15033 * C956 +
               C92322 * C1146) *
                  C2709 +
              (C15034 * C806 + C92186 * C1023 + C15033 * C805 +
               C92322 * C1022) *
                  C2849) +
             (C30768 + C30769) * C2710) *
                C92323 +
            ((C15033 * C5773 + C92322 * C6043 + C15034 * C5775 +
              C92186 * C6044) *
                 C2850 -
             ((C30769 + C30768) * C2709 + (C30495 + C30494) * C2849) +
             (C15033 * C5955 + C92322 * C6208 + C15034 * C5959 +
              C92186 * C6209) *
                 C2710) *
                C92212) *
               C4097 +
           (((C28064 + C28065) * C2850 -
             ((C17572 + C17573) * C2709 + (C17347 + C17346) * C2849) +
             (C28339 + C28338) * C2710) *
                C92323 +
            ((C15033 * C5774 + C92322 * C6045 + C15034 * C5776 +
              C92186 * C6046) *
                 C2850 -
             ((C28338 + C28339) * C2709 + (C28065 + C28064) * C2849) +
             (C15033 * C5956 + C92322 * C6211 + C15034 * C5960 +
              C92186 * C6212) *
                 C2710) *
                C92212) *
               C92067) *
              C1986) *
         C92078) /
        (p * q * std::sqrt(p + q));
    d2eezx[6] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C20274 * C107 + C92323 * C555 + C20275 * C1389 +
               C92212 * C1788) *
                  C801 +
              (C20274 * C117 + C92323 * C561 + C20275 * C1397 +
               C92212 * C1796) *
                  C92078) *
                 C4097 +
             ((C20302 + C20301) * C801 + (C20304 + C20303) * C92078) * C92067) *
                C92322 +
            (((C26314 + C26315) * C801 + (C26316 + C26317) * C92078) * C4097 +
             (C28472 * C801 + C28473 * C92078) * C92067) *
                C92186) *
               C2709 -
           ((((C29679 + C29678) * C92078 + (C29677 + C29676) * C801) * C92067 +
             ((C30908 + C30909) * C92078 + (C30910 + C30911) * C801) * C4097) *
                C92186 +
            (((C23613 + C23612) * C92078 + (C23611 + C23610) * C801) * C92067 +
             ((C20275 * C1406 + C92212 * C1797 + C20274 * C1397 +
               C92323 * C1796) *
                  C92078 +
              (C20275 * C1390 + C92212 * C1789 + C20274 * C1389 +
               C92323 * C1788) *
                  C801) *
                 C4097) *
                C92322) *
               C2710) *
              C1985 +
          (((((C30911 + C30910) * C801 + (C30909 + C30908) * C92078) * C4097 +
             ((C29676 + C29677) * C801 + (C29678 + C29679) * C92078) * C92067) *
                C92322 +
            (((C20274 * C5772 + C92323 * C6288 + C20275 * C5775 +
               C92212 * C6291) *
                  C801 +
              (C20274 * C5778 + C92323 * C6294 + C20275 * C5787 +
               C92212 * C6297) *
                  C92078) *
                 C4097 +
             ((C20274 * C5771 + C92323 * C6287 + C20275 * C5776 +
               C92212 * C6292) *
                  C801 +
              (C20274 * C5777 + C92323 * C6293 + C20275 * C5788 +
               C92212 * C6298) *
                  C92078) *
                 C92067) *
                C92186) *
               C2710 -
           ((((C26318 + C26319) * C92078 + (C26320 + C26321) * C801) * C92067 +
             ((C26322 + C26323) * C92078 + (C26324 + C26325) * C801) * C4097) *
                C92186 +
            ((C28471 * C92078 + C28470 * C801) * C92067 +
             ((C26317 + C26316) * C92078 + (C26315 + C26314) * C801) * C4097) *
                C92322) *
               C2709) *
              C1986)) /
        (p * q * std::sqrt(p + q));
    d2eezy[6] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C20274 * C107 + C92323 * C555 + C20275 * C1389 + C92212 * C1788) *
                 C2059 +
             (C20274 * C182 + C92323 * C641 + C20275 * C1471 + C92212 * C1854) *
                 C1985 -
             (C26315 + C26314) * C2060 - (C26436 + C26437) * C1986) *
                C4097 +
            ((C20302 + C20301) * C2059 + (C20402 + C20403) * C1985 -
             C28470 * C2060 - C28604 * C1986) *
                C92067) *
               C92322 +
           (((C26314 + C26315) * C2059 + (C26437 + C26436) * C1985 -
             (C26324 + C26325) * C2060 - (C26439 + C26438) * C1986) *
                C4097 +
            (C28472 * C2059 + C28605 * C1985 - (C26320 + C26321) * C2060 -
             (C26441 + C26440) * C1986) *
                C92067) *
               C92186) *
              C92078 * C2709 +
          ((((C30911 + C30910) * C2060 -
             ((C20275 * C1472 + C92212 * C1855 + C20274 * C1471 +
               C92323 * C1854) *
                  C1985 +
              (C20275 * C1390 + C92212 * C1789 + C20274 * C1389 +
               C92323 * C1788) *
                  C2059) +
             (C31046 + C31047) * C1986) *
                C4097 +
            ((C29676 + C29677) * C2060 -
             ((C23725 + C23724) * C1985 + (C23611 + C23610) * C2059) +
             (C29814 + C29815) * C1986) *
                C92067) *
               C92322 +
           (((C20274 * C5772 + C92323 * C6288 + C20275 * C5775 +
              C92212 * C6291) *
                 C2060 -
             ((C31047 + C31046) * C1985 + (C30910 + C30911) * C2059) +
             (C20274 * C5870 + C92323 * C6374 + C20275 * C5873 +
              C92212 * C6377) *
                 C1986) *
                C4097 +
            ((C20274 * C5771 + C92323 * C6287 + C20275 * C5776 +
              C92212 * C6292) *
                 C2060 -
             ((C29815 + C29814) * C1985 + (C29677 + C29676) * C2059) +
             (C20274 * C5869 + C92323 * C6373 + C20275 * C5874 +
              C92212 * C6378) *
                 C1986) *
                C92067) *
               C92186) *
              C92078 * C2710)) /
        (p * q * std::sqrt(p + q));
    d2eezz[6] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C20274 * C107 + C92323 * C555 + C20275 * C1389 + C92212 * C1788) *
                 C2849 +
             (C20274 * C245 + C92323 * C719 + C20275 * C1540 + C92212 * C1909) *
                 C2709 -
             (C20275 * C1390 + C92212 * C1789 + C20274 * C1389 +
              C92323 * C1788) *
                 C2850 -
             (C20275 * C1541 + C92212 * C1910 + C20274 * C1540 +
              C92323 * C1909) *
                 C2710) *
                C4097 +
            ((C20302 + C20301) * C2849 + (C20498 + C20499) * C2709 -
             (C23611 + C23610) * C2850 - (C23834 + C23835) * C2710) *
                C92067) *
               C92322 +
           (((C26314 + C26315) * C2849 + (C26552 + C26553) * C2709 -
             (C30910 + C30911) * C2850 - (C31182 + C31183) * C2710) *
                C4097 +
            (C28472 * C2849 + C28737 * C2709 - (C29677 + C29676) * C2850 -
             (C29950 + C29951) * C2710) *
                C92067) *
               C92186) *
              C1985 +
          ((((C30911 + C30910) * C2850 -
             ((C26553 + C26552) * C2709 + (C26315 + C26314) * C2849) +
             (C31183 + C31182) * C2710) *
                C4097 +
            ((C29676 + C29677) * C2850 - (C28738 * C2709 + C28470 * C2849) +
             (C29951 + C29950) * C2710) *
                C92067) *
               C92322 +
           (((C20274 * C5772 + C92323 * C6288 + C20275 * C5775 +
              C92212 * C6291) *
                 C2850 -
             ((C26556 + C26557) * C2709 + (C26324 + C26325) * C2849) +
             (C20274 * C5958 + C92323 * C6455 + C20275 * C5959 +
              C92212 * C6456) *
                 C2710) *
                C4097 +
            ((C20274 * C5771 + C92323 * C6287 + C20275 * C5776 +
              C92212 * C6292) *
                 C2850 -
             ((C26554 + C26555) * C2709 + (C26320 + C26321) * C2849) +
             (C20274 * C5957 + C92323 * C6457 + C20275 * C5960 +
              C92212 * C6458) *
                 C2710) *
                C92067) *
               C92186) *
              C1986) *
         C92078) /
        (p * q * std::sqrt(p + q));
    d2eexx[7] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C92067 * C114) *
                 C801 +
             (C4102 * C117 + C4097 * C125 + C4103 * C118 + C92067 * C126) *
                 C92078) *
                C92322 +
            ((C4922 + C4923) * C801 + (C4924 + C4925) * C92078) * C92186) *
               C92323 +
           (((C11001 + C11002) * C801 + (C11003 + C11004) * C92078) * C92322 +
            ((C8568 + C8567) * C801 + (C8566 + C8565) * C92078) * C92186) *
               C92212) *
              C92110 * C798 -
          ((((C8561 + C8562) * C92078 + (C8563 + C8564) * C801) * C92186 +
            ((C8565 + C8566) * C92078 + (C8567 + C8568) * C801) * C92322) *
               C92212 +
           (((C4929 + C4928) * C92078 + (C4927 + C4926) * C801) * C92186 +
            ((C4925 + C4924) * C92078 + (C4923 + C4922) * C801) * C92322) *
               C92323) *
              C92110 * C799 +
          ((C4938 * C92322 +
            ((C4933 + C4932) * C801 + (C4931 + C4930) * C92078) * C92186) *
               C92323 +
           (((C8564 + C8563) * C801 + (C8562 + C8561) * C92078) * C92322 +
            ((C4102 * C8536 + C4097 * C8538 + C4103 * C8537 + C92067 * C8539) *
                 C801 +
             (C4102 * C8540 + C4097 * C8542 + C4103 * C8541 + C92067 * C8543) *
                 C92078) *
                C92186) *
               C92212) *
              C92110 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C92067 * C114) *
                C104 +
            (C4102 * C117 + C4097 * C125 + C4103 * C118 + C92067 * C126) * C93 -
            (C4103 * C109 + C92067 * C115 + C4102 * C108 + C4097 * C114) *
                C105 -
            (C4103 * C119 + C92067 * C127 + C4102 * C118 + C4097 * C126) * C94 +
            (C4102 * C109 + C4097 * C115 + C4103 * C110 + C92067 * C116) *
                C106 +
            (C4102 * C119 + C4097 * C127 + C4103 * C120 + C92067 * C128) *
                C95) *
               C92322 +
           ((C4922 + C4923) * C104 + (C4924 + C4925) * C93 -
            (C6578 + C6579) * C105 - (C6580 + C6581) * C94 +
            (C4102 * C803 + C4097 * C815 + C4103 * C802 + C92067 * C814) *
                C106 +
            (C4102 * C811 + C4097 * C827 + C4103 * C810 + C92067 * C826) *
                C95) *
               C92186) *
              C92323 +
          (((C11001 + C11002) * C104 + (C11003 + C11004) * C93 -
            (C12861 + C12862) * C105 - (C12863 + C12864) * C94 +
            (C4102 * C1387 + C4097 * C1399 + C4103 * C1386 + C92067 * C1398) *
                C106 +
            (C4102 * C1395 + C4097 * C1411 + C4103 * C1394 + C92067 * C1410) *
                C95) *
               C92322 +
           ((C8568 + C8567) * C104 + (C8566 + C8565) * C93 -
            (C4103 * C3433 + C92067 * C3437 + C4102 * C3432 + C4097 * C3436) *
                C105 -
            (C4103 * C3441 + C92067 * C3445 + C4102 * C3440 + C4097 * C3444) *
                C94 +
            (C4102 * C3433 + C4097 * C3437 + C4103 * C3434 + C92067 * C3438) *
                C106 +
            (C4102 * C3441 + C4097 * C3445 + C4103 * C3442 + C92067 * C3446) *
                C95) *
               C92186) *
              C92212) *
         C92110 * C92099) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C92067 * C114) *
                 C801 +
             (C4102 * C117 + C4097 * C125 + C4103 * C118 + C92067 * C126) *
                 C92078) *
                C92322 +
            ((C4922 + C4923) * C801 + (C4924 + C4925) * C92078) * C92186) *
               C92323 +
           (((C11001 + C11002) * C801 + (C11003 + C11004) * C92078) * C92322 +
            ((C8568 + C8567) * C801 + (C8566 + C8565) * C92078) * C92186) *
               C92212) *
              C1383 -
          ((((C13869 + C13868) * C92078 + (C13867 + C13866) * C801) * C92186 +
            ((C11008 + C11007) * C92078 + (C11006 + C11005) * C801) * C92322) *
               C92212 +
           (((C8565 + C8566) * C92078 + (C8567 + C8568) * C801) * C92186 +
            ((C11004 + C11003) * C92078 + (C11002 + C11001) * C801) * C92322) *
               C92323) *
              C1384 +
          ((C11017 * C92322 +
            ((C13866 + C13867) * C801 + (C13868 + C13869) * C92078) * C92186) *
               C92323 +
           (((C11012 + C11011) * C801 + (C11010 + C11009) * C92078) * C92322 +
            ((C4102 * C13849 + C4097 * C13851 + C4103 * C13850 +
              C92067 * C13852) *
                 C801 +
             (C4102 * C13853 + C4097 * C13855 + C4103 * C13854 +
              C92067 * C13856) *
                 C92078) *
                C92186) *
               C92212) *
              C1385) *
         C92099) /
            (p * q * std::sqrt(p + q));
    d2eexy[7] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C92067 * C114) *
                C884 +
            (C4102 * C182 + C4097 * C188 + C4103 * C183 + C92067 * C189) *
                C798 -
            (C4923 + C4922) * C885 - (C5033 + C5034) * C799 + C4934 * C886 +
            C5039 * C800) *
               C92322 +
           ((C4922 + C4923) * C884 + (C5034 + C5033) * C798 -
            (C4927 + C4926) * C885 - (C5036 + C5035) * C799 +
            (C4933 + C4932) * C886 + (C5037 + C5038) * C800) *
               C92186) *
              C92323 +
          (((C11001 + C11002) * C884 + (C11114 + C11115) * C798 -
            (C8567 + C8568) * C885 - (C8680 + C8679) * C799 +
            (C8564 + C8563) * C886 + (C8681 + C8682) * C800) *
               C92322 +
           ((C8568 + C8567) * C884 + (C8679 + C8680) * C798 -
            (C8563 + C8564) * C885 - (C8682 + C8681) * C799 +
            (C4102 * C8536 + C4097 * C8538 + C4103 * C8537 + C92067 * C8539) *
                C886 +
            (C4102 * C8666 + C4097 * C8668 + C4103 * C8667 + C92067 * C8669) *
                C800) *
               C92186) *
              C92212) *
         C92078 * C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C92067 * C114) *
                 C181 +
             (C4102 * C182 + C4097 * C188 + C4103 * C183 + C92067 * C189) *
                 C92099) *
                C92322 +
            ((C4922 + C4923) * C181 + (C5034 + C5033) * C92099) * C92186) *
               C92323 +
           (((C11001 + C11002) * C181 + (C11114 + C11115) * C92099) * C92322 +
            ((C8568 + C8567) * C181 + (C8679 + C8680) * C92099) * C92186) *
               C92212) *
              C93 -
          ((((C4103 * C3515 + C92067 * C3519 + C4102 * C3514 + C4097 * C3518) *
                 C92099 +
             (C4103 * C3433 + C92067 * C3437 + C4102 * C3432 + C4097 * C3436) *
                 C181) *
                C92186 +
            ((C12979 + C12980) * C92099 + (C12861 + C12862) * C181) * C92322) *
               C92212 +
           (((C6695 + C6694) * C92099 + (C6578 + C6579) * C181) * C92186 +
            ((C4103 * C184 + C92067 * C190 + C4102 * C183 + C4097 * C189) *
                 C92099 +
             (C4103 * C109 + C92067 * C115 + C4102 * C108 + C4097 * C114) *
                 C181) *
                C92322) *
               C92323) *
              C94 +
          ((((C4102 * C109 + C4097 * C115 + C4103 * C110 + C92067 * C116) *
                 C181 +
             (C4102 * C184 + C4097 * C190 + C4103 * C185 + C92067 * C191) *
                 C92099) *
                C92322 +
            ((C4102 * C803 + C4097 * C815 + C4103 * C802 + C92067 * C814) *
                 C181 +
             (C4102 * C888 + C4097 * C896 + C4103 * C887 + C92067 * C895) *
                 C92099) *
                C92186) *
               C92323 +
           (((C4102 * C1387 + C4097 * C1399 + C4103 * C1386 + C92067 * C1398) *
                 C181 +
             (C4102 * C1469 + C4097 * C1477 + C4103 * C1468 + C92067 * C1476) *
                 C92099) *
                C92322 +
            ((C4102 * C3433 + C4097 * C3437 + C4103 * C3434 + C92067 * C3438) *
                 C181 +
             (C4102 * C3515 + C4097 * C3519 + C4103 * C3516 + C92067 * C3520) *
                 C92099) *
                C92186) *
               C92212) *
              C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C92067 * C114) *
                 C181 +
             (C4102 * C182 + C4097 * C188 + C4103 * C183 + C92067 * C189) *
                 C92099) *
                C92322 +
            ((C4922 + C4923) * C181 + (C5034 + C5033) * C92099) * C92186) *
               C92323 +
           (((C11001 + C11002) * C181 + (C11114 + C11115) * C92099) * C92322 +
            ((C8568 + C8567) * C181 + (C8679 + C8680) * C92099) * C92186) *
               C92212) *
              C92078 * C1383 -
          ((((C13976 + C13977) * C92099 + (C13867 + C13866) * C181) * C92186 +
            ((C11117 + C11116) * C92099 + (C11006 + C11005) * C181) * C92322) *
               C92212 +
           (((C8680 + C8679) * C92099 + (C8567 + C8568) * C181) * C92186 +
            ((C11115 + C11114) * C92099 + (C11002 + C11001) * C181) * C92322) *
               C92323) *
              C92078 * C1384 +
          ((C11122 * C92322 +
            ((C13866 + C13867) * C181 + (C13977 + C13976) * C92099) * C92186) *
               C92323 +
           (((C11012 + C11011) * C181 + (C11119 + C11118) * C92099) * C92322 +
            ((C4102 * C13849 + C4097 * C13851 + C4103 * C13850 +
              C92067 * C13852) *
                 C181 +
             (C4102 * C13967 + C4097 * C13969 + C4103 * C13968 +
              C92067 * C13970) *
                 C92099) *
                C92186) *
               C92212) *
              C92078 * C1385)) /
            (p * q * std::sqrt(p + q));
    d2eexz[7] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C92067 * C114) *
                 C244 +
             (C4102 * C245 + C4097 * C251 + C4103 * C246 + C92067 * C252) *
                 C92110) *
                C92322 +
            ((C4922 + C4923) * C244 + (C5135 + C5136) * C92110) * C92186) *
               C92323 +
           (((C11001 + C11002) * C244 + (C11219 + C11218) * C92110) * C92322 +
            ((C8568 + C8567) * C244 + (C8794 + C8793) * C92110) * C92186) *
               C92212) *
              C798 -
          ((((C8795 + C8796) * C92110 + (C8563 + C8564) * C244) * C92186 +
            ((C8793 + C8794) * C92110 + (C8567 + C8568) * C244) * C92322) *
               C92212 +
           (((C5138 + C5137) * C92110 + (C4927 + C4926) * C244) * C92186 +
            ((C5136 + C5135) * C92110 + (C4923 + C4922) * C244) * C92322) *
               C92323) *
              C799 +
          ((C5143 * C92322 +
            ((C4933 + C4932) * C244 + (C5140 + C5139) * C92110) * C92186) *
               C92323 +
           (((C8564 + C8563) * C244 + (C8796 + C8795) * C92110) * C92322 +
            ((C4102 * C8536 + C4097 * C8538 + C4103 * C8537 + C92067 * C8539) *
                 C244 +
             (C4102 * C8780 + C4097 * C8782 + C4103 * C8781 + C92067 * C8783) *
                 C92110) *
                C92186) *
               C92212) *
              C800) *
         C92078) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C92067 * C114) *
                 C244 +
             (C4102 * C245 + C4097 * C251 + C4103 * C246 + C92067 * C252) *
                 C92110) *
                C92322 +
            ((C4922 + C4923) * C244 + (C5135 + C5136) * C92110) * C92186) *
               C92323 +
           (((C11001 + C11002) * C244 + (C11219 + C11218) * C92110) * C92322 +
            ((C8568 + C8567) * C244 + (C8794 + C8793) * C92110) * C92186) *
               C92212) *
              C92099 * C93 -
          ((((C4103 * C3589 + C92067 * C3593 + C4102 * C3588 + C4097 * C3592) *
                 C92110 +
             (C4103 * C3433 + C92067 * C3437 + C4102 * C3432 + C4097 * C3436) *
                 C244) *
                C92186 +
            ((C13090 + C13089) * C92110 + (C12861 + C12862) * C244) * C92322) *
               C92212 +
           (((C6807 + C6806) * C92110 + (C6578 + C6579) * C244) * C92186 +
            ((C4103 * C247 + C92067 * C253 + C4102 * C246 + C4097 * C252) *
                 C92110 +
             (C4103 * C109 + C92067 * C115 + C4102 * C108 + C4097 * C114) *
                 C244) *
                C92322) *
               C92323) *
              C92099 * C94 +
          ((((C4102 * C109 + C4097 * C115 + C4103 * C110 + C92067 * C116) *
                 C244 +
             (C4102 * C247 + C4097 * C253 + C4103 * C248 + C92067 * C254) *
                 C92110) *
                C92322 +
            ((C4102 * C803 + C4097 * C815 + C4103 * C802 + C92067 * C814) *
                 C244 +
             (C4102 * C954 + C4097 * C962 + C4103 * C953 + C92067 * C961) *
                 C92110) *
                C92186) *
               C92323 +
           (((C4102 * C1387 + C4097 * C1399 + C4103 * C1386 + C92067 * C1398) *
                 C244 +
             (C4102 * C1538 + C4097 * C1546 + C4103 * C1537 + C92067 * C1545) *
                 C92110) *
                C92322 +
            ((C4102 * C3433 + C4097 * C3437 + C4103 * C3434 + C92067 * C3438) *
                 C244 +
             (C4102 * C3589 + C4097 * C3593 + C4103 * C3590 + C92067 * C3594) *
                 C92110) *
                C92186) *
               C92212) *
              C92099 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C92067 * C114) *
                C1534 +
            (C4102 * C245 + C4097 * C251 + C4103 * C246 + C92067 * C252) *
                C1383 -
            (C11002 + C11001) * C1535 - (C11218 + C11219) * C1384 +
            C11013 * C1536 + C11224 * C1385) *
               C92322 +
           ((C4922 + C4923) * C1534 + (C5135 + C5136) * C1383 -
            (C8567 + C8568) * C1535 - (C8793 + C8794) * C1384 +
            (C13866 + C13867) * C1536 + (C14084 + C14085) * C1385) *
               C92186) *
              C92323 +
          (((C11001 + C11002) * C1534 + (C11219 + C11218) * C1383 -
            (C11006 + C11005) * C1535 - (C11221 + C11220) * C1384 +
            (C11012 + C11011) * C1536 + (C11222 + C11223) * C1385) *
               C92322 +
           ((C8568 + C8567) * C1534 + (C8794 + C8793) * C1383 -
            (C13867 + C13866) * C1535 - (C14085 + C14084) * C1384 +
            (C4102 * C13849 + C4097 * C13851 + C4103 * C13850 +
             C92067 * C13852) *
                C1536 +
            (C4102 * C14075 + C4097 * C14077 + C4103 * C14076 +
             C92067 * C14078) *
                C1385) *
               C92186) *
              C92212) *
         C92099 * C92078) /
            (p * q * std::sqrt(p + q));
    d2eeyx[7] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C15033 * C107 + C92322 * C308 + C15034 * C805 + C92186 * C1022) *
                 C801 +
             (C15033 * C117 + C92322 * C314 + C15034 * C813 + C92186 * C1030) *
                 C92078) *
                C92323 +
            ((C15033 * C1389 + C92322 * C1606 + C15034 * C3431 +
              C92186 * C3661) *
                 C801 +
             (C15033 * C1397 + C92322 * C1614 + C15034 * C3439 +
              C92186 * C3665) *
                 C92078) *
                C92212) *
               C4097 +
           (((C15061 + C15060) * C801 + (C15063 + C15062) * C92078) * C92323 +
            ((C18285 + C18286) * C801 + (C18287 + C18288) * C92078) * C92212) *
               C92067) *
              C92110 * C798 -
          ((((C15034 * C5777 + C92186 * C6047 + C15033 * C3440 +
              C92322 * C3666) *
                 C92078 +
             (C15034 * C5771 + C92186 * C6041 + C15033 * C3432 +
              C92322 * C3662) *
                 C801) *
                C92212 +
            ((C17349 + C17348) * C92078 + (C17347 + C17346) * C801) * C92323) *
               C92067 +
           (((C15034 * C5778 + C92186 * C6048 + C15033 * C3439 +
              C92322 * C3665) *
                 C92078 +
             (C15034 * C5772 + C92186 * C6042 + C15033 * C3431 +
              C92322 * C3661) *
                 C801) *
                C92212 +
            ((C15034 * C822 + C92186 * C1031 + C15033 * C813 + C92322 * C1030) *
                 C92078 +
             (C15034 * C806 + C92186 * C1023 + C15033 * C805 + C92322 * C1022) *
                 C801) *
                C92323) *
               C4097) *
              C92110 * C799 +
          ((((C15033 * C806 + C92322 * C1023 + C15034 * C4882 +
              C92186 * C5218) *
                 C801 +
             (C15033 * C822 + C92322 * C1031 + C15034 * C4886 +
              C92186 * C5222) *
                 C92078) *
                C92323 +
            ((C15033 * C5772 + C92322 * C6042 + C15034 * C8536 +
              C92186 * C8894) *
                 C801 +
             (C15033 * C5778 + C92322 * C6048 + C15034 * C8540 +
              C92186 * C8896) *
                 C92078) *
                C92212) *
               C4097 +
           (((C15033 * C807 + C92322 * C1024 + C15034 * C4881 +
              C92186 * C5217) *
                 C801 +
             (C15033 * C823 + C92322 * C1032 + C15034 * C4885 +
              C92186 * C5221) *
                 C92078) *
                C92323 +
            ((C15033 * C5771 + C92322 * C6041 + C15034 * C8537 +
              C92186 * C8895) *
                 C801 +
             (C15033 * C5777 + C92322 * C6047 + C15034 * C8541 +
              C92186 * C8897) *
                 C92078) *
                C92212) *
               C92067) *
              C92110 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15033 * C107 + C92322 * C308 + C15034 * C805 + C92186 * C1022) *
                C104 +
            (C15033 * C117 + C92322 * C314 + C15034 * C813 + C92186 * C1030) *
                C93 -
            (C15060 + C15061) * C105 - (C15062 + C15063) * C94 + C15072 * C106 +
            C15073 * C95) *
               C92323 +
           ((C15033 * C1389 + C92322 * C1606 + C15034 * C3431 +
             C92186 * C3661) *
                C104 +
            (C15033 * C1397 + C92322 * C1614 + C15034 * C3439 +
             C92186 * C3665) *
                C93 -
            (C18286 + C18285) * C105 - (C18288 + C18287) * C94 +
            (C18289 + C18290) * C106 + (C18291 + C18292) * C95) *
               C92212) *
              C4097 +
          (((C15061 + C15060) * C104 + (C15063 + C15062) * C93 -
            (C15065 + C15064) * C105 - (C15067 + C15066) * C94 +
            (C15068 + C15069) * C106 + (C15070 + C15071) * C95) *
               C92323 +
           ((C18285 + C18286) * C104 + (C18287 + C18288) * C93 -
            (C18290 + C18289) * C105 - (C18292 + C18291) * C94 +
            (C15033 * C1386 + C92322 * C1603 + C15034 * C3434 +
             C92186 * C3664) *
                C106 +
            (C15033 * C1394 + C92322 * C1611 + C15034 * C3442 +
             C92186 * C3668) *
                C95) *
               C92212) *
              C92067) *
         C92110 * C92099) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C15033 * C107 + C92322 * C308 + C15034 * C805 + C92186 * C1022) *
                 C801 +
             (C15033 * C117 + C92322 * C314 + C15034 * C813 + C92186 * C1030) *
                 C92078) *
                C92323 +
            ((C26974 + C26975) * C801 + (C26976 + C26977) * C92078) * C92212) *
               C4097 +
           (((C15061 + C15060) * C801 + (C15063 + C15062) * C92078) * C92323 +
            ((C18285 + C18286) * C801 + (C18287 + C18288) * C92078) * C92212) *
               C92067) *
              C1383 -
          ((((C26978 + C26979) * C92078 + (C26980 + C26981) * C801) * C92212 +
            ((C18288 + C18287) * C92078 + (C18286 + C18285) * C801) * C92323) *
               C92067 +
           (((C26982 + C26983) * C92078 + (C26984 + C26985) * C801) * C92212 +
            ((C26977 + C26976) * C92078 + (C26975 + C26974) * C801) * C92323) *
               C4097) *
              C1384 +
          ((((C26985 + C26984) * C801 + (C26983 + C26982) * C92078) * C92323 +
            ((C15033 * C10961 + C92322 * C11299 + C15034 * C13849 +
              C92186 * C14183) *
                 C801 +
             (C15033 * C10965 + C92322 * C11303 + C15034 * C13853 +
              C92186 * C14185) *
                 C92078) *
                C92212) *
               C4097 +
           (((C26981 + C26980) * C801 + (C26979 + C26978) * C92078) * C92323 +
            ((C15033 * C10960 + C92322 * C11298 + C15034 * C13850 +
              C92186 * C14184) *
                 C801 +
             (C15033 * C10964 + C92322 * C11302 + C15034 * C13854 +
              C92186 * C14186) *
                 C92078) *
                C92212) *
               C92067) *
              C1385) *
         C92099) /
            (p * q * std::sqrt(p + q));
    d2eeyy[7] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15033 * C107 + C92322 * C308 + C15034 * C805 + C92186 * C1022) *
                C884 +
            (C15033 * C182 + C92322 * C394 + C15034 * C890 + C92186 * C1085) *
                C798 -
            (C15034 * C806 + C92186 * C1023 + C15033 * C805 + C92322 * C1022) *
                C885 -
            (C15034 * C891 + C92186 * C1086 + C15033 * C890 + C92322 * C1085) *
                C799 +
            (C15033 * C806 + C92322 * C1023 + C15034 * C4882 + C92186 * C5218) *
                C886 +
            (C15033 * C891 + C92322 * C1086 + C15034 * C5012 + C92186 * C5299) *
                C800) *
               C92323 +
           ((C15033 * C1389 + C92322 * C1606 + C15034 * C3431 +
             C92186 * C3661) *
                C884 +
            (C15033 * C1471 + C92322 * C1672 + C15034 * C3513 +
             C92186 * C3735) *
                C798 -
            (C15034 * C5772 + C92186 * C6042 + C15033 * C3431 +
             C92322 * C3661) *
                C885 -
            (C15034 * C5870 + C92186 * C6128 + C15033 * C3513 +
             C92322 * C3735) *
                C799 +
            (C15033 * C5772 + C92322 * C6042 + C15034 * C8536 +
             C92186 * C8894) *
                C886 +
            (C15033 * C5870 + C92322 * C6128 + C15034 * C8666 +
             C92186 * C8996) *
                C800) *
               C92212) *
              C4097 +
          (((C15061 + C15060) * C884 + (C15161 + C15162) * C798 -
            (C17347 + C17346) * C885 - (C17460 + C17461) * C799 +
            (C15033 * C807 + C92322 * C1024 + C15034 * C4881 + C92186 * C5217) *
                C886 +
            (C15033 * C892 + C92322 * C1088 + C15034 * C5013 + C92186 * C5301) *
                C800) *
               C92323 +
           ((C18285 + C18286) * C884 + (C18399 + C18400) * C798 -
            (C15034 * C5771 + C92186 * C6041 + C15033 * C3432 +
             C92322 * C3662) *
                C885 -
            (C15034 * C5869 + C92186 * C6127 + C15033 * C3514 +
             C92322 * C3736) *
                C799 +
            (C15033 * C5771 + C92322 * C6041 + C15034 * C8537 +
             C92186 * C8895) *
                C886 +
            (C15033 * C5869 + C92322 * C6127 + C15034 * C8667 +
             C92186 * C8997) *
                C800) *
               C92212) *
              C92067) *
         C92078 * C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C15033 * C107 + C92322 * C308 + C15034 * C805 + C92186 * C1022) *
                 C181 +
             (C15033 * C182 + C92322 * C394 + C15034 * C890 + C92186 * C1085) *
                 C92099) *
                C92323 +
            ((C15033 * C1389 + C92322 * C1606 + C15034 * C3431 +
              C92186 * C3661) *
                 C181 +
             (C15033 * C1471 + C92322 * C1672 + C15034 * C3513 +
              C92186 * C3735) *
                 C92099) *
                C92212) *
               C4097 +
           (((C15061 + C15060) * C181 + (C15161 + C15162) * C92099) * C92323 +
            ((C18285 + C18286) * C181 + (C18399 + C18400) * C92099) * C92212) *
               C92067) *
              C93 -
          ((((C18402 + C18401) * C92099 + (C18290 + C18289) * C181) * C92212 +
            ((C15164 + C15163) * C92099 + (C15065 + C15064) * C181) * C92323) *
               C92067 +
           (((C18400 + C18399) * C92099 + (C18286 + C18285) * C181) * C92212 +
            ((C15162 + C15161) * C92099 + (C15060 + C15061) * C181) * C92323) *
               C4097) *
              C94 +
          ((C15169 * C92323 +
            ((C18289 + C18290) * C181 + (C18401 + C18402) * C92099) * C92212) *
               C4097 +
           (((C15068 + C15069) * C181 + (C15166 + C15165) * C92099) * C92323 +
            ((C15033 * C1386 + C92322 * C1603 + C15034 * C3434 +
              C92186 * C3664) *
                 C181 +
             (C15033 * C1468 + C92322 * C1669 + C15034 * C3516 +
              C92186 * C3738) *
                 C92099) *
                C92212) *
               C92067) *
              C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C15033 * C107 + C92322 * C308 + C15034 * C805 + C92186 * C1022) *
                 C181 +
             (C15033 * C182 + C92322 * C394 + C15034 * C890 + C92186 * C1085) *
                 C92099) *
                C92323 +
            ((C26974 + C26975) * C181 + (C27096 + C27097) * C92099) * C92212) *
               C4097 +
           (((C15061 + C15060) * C181 + (C15161 + C15162) * C92099) * C92323 +
            ((C18285 + C18286) * C181 + (C18399 + C18400) * C92099) * C92212) *
               C92067) *
              C92078 * C1383 -
          ((((C27098 + C27099) * C92099 + (C26980 + C26981) * C181) * C92212 +
            ((C18400 + C18399) * C92099 + (C18286 + C18285) * C181) * C92323) *
               C92067 +
           (((C27100 + C27101) * C92099 + (C26984 + C26985) * C181) * C92212 +
            ((C27097 + C27096) * C92099 + (C26975 + C26974) * C181) * C92323) *
               C4097) *
              C92078 * C1384 +
          ((((C26985 + C26984) * C181 + (C27101 + C27100) * C92099) * C92323 +
            ((C15033 * C10961 + C92322 * C11299 + C15034 * C13849 +
              C92186 * C14183) *
                 C181 +
             (C15033 * C11093 + C92322 * C11419 + C15034 * C13967 +
              C92186 * C14305) *
                 C92099) *
                C92212) *
               C4097 +
           (((C26981 + C26980) * C181 + (C27099 + C27098) * C92099) * C92323 +
            ((C15033 * C10960 + C92322 * C11298 + C15034 * C13850 +
              C92186 * C14184) *
                 C181 +
             (C15033 * C11092 + C92322 * C11418 + C15034 * C13968 +
              C92186 * C14306) *
                 C92099) *
                C92212) *
               C92067) *
              C92078 * C1385)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[7] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C15033 * C107 + C92322 * C308 + C15034 * C805 + C92186 * C1022) *
                 C244 +
             (C15033 * C245 + C92322 * C474 + C15034 * C956 + C92186 * C1146) *
                 C92110) *
                C92323 +
            ((C15033 * C1389 + C92322 * C1606 + C15034 * C3431 +
              C92186 * C3661) *
                 C244 +
             (C15033 * C1540 + C92322 * C1727 + C15034 * C3587 +
              C92186 * C3805) *
                 C92110) *
                C92212) *
               C4097 +
           (((C15061 + C15060) * C244 + (C15258 + C15259) * C92110) * C92323 +
            ((C18285 + C18286) * C244 + (C18510 + C18509) * C92110) * C92212) *
               C92067) *
              C798 -
          ((((C15034 * C5957 + C92186 * C6210 + C15033 * C3588 +
              C92322 * C3806) *
                 C92110 +
             (C15034 * C5771 + C92186 * C6041 + C15033 * C3432 +
              C92322 * C3662) *
                 C244) *
                C92212 +
            ((C17572 + C17573) * C92110 + (C17347 + C17346) * C244) * C92323) *
               C92067 +
           (((C15034 * C5958 + C92186 * C6207 + C15033 * C3587 +
              C92322 * C3805) *
                 C92110 +
             (C15034 * C5772 + C92186 * C6042 + C15033 * C3431 +
              C92322 * C3661) *
                 C244) *
                C92212 +
            ((C15034 * C957 + C92186 * C1147 + C15033 * C956 + C92322 * C1146) *
                 C92110 +
             (C15034 * C806 + C92186 * C1023 + C15033 * C805 + C92322 * C1022) *
                 C244) *
                C92323) *
               C4097) *
              C799 +
          ((((C15033 * C806 + C92322 * C1023 + C15034 * C4882 +
              C92186 * C5218) *
                 C244 +
             (C15033 * C957 + C92322 * C1147 + C15034 * C5114 +
              C92186 * C5378) *
                 C92110) *
                C92323 +
            ((C15033 * C5772 + C92322 * C6042 + C15034 * C8536 +
              C92186 * C8894) *
                 C244 +
             (C15033 * C5958 + C92322 * C6207 + C15034 * C8780 +
              C92186 * C9096) *
                 C92110) *
                C92212) *
               C4097 +
           (((C15033 * C807 + C92322 * C1024 + C15034 * C4881 +
              C92186 * C5217) *
                 C244 +
             (C15033 * C958 + C92322 * C1148 + C15034 * C5113 +
              C92186 * C5377) *
                 C92110) *
                C92323 +
            ((C15033 * C5771 + C92322 * C6041 + C15034 * C8537 +
              C92186 * C8895) *
                 C244 +
             (C15033 * C5957 + C92322 * C6210 + C15034 * C8781 +
              C92186 * C9097) *
                 C92110) *
                C92212) *
               C92067) *
              C800) *
         C92078) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C15033 * C107 + C92322 * C308 + C15034 * C805 + C92186 * C1022) *
                 C244 +
             (C15033 * C245 + C92322 * C474 + C15034 * C956 + C92186 * C1146) *
                 C92110) *
                C92323 +
            ((C15033 * C1389 + C92322 * C1606 + C15034 * C3431 +
              C92186 * C3661) *
                 C244 +
             (C15033 * C1540 + C92322 * C1727 + C15034 * C3587 +
              C92186 * C3805) *
                 C92110) *
                C92212) *
               C4097 +
           (((C15061 + C15060) * C244 + (C15258 + C15259) * C92110) * C92323 +
            ((C18285 + C18286) * C244 + (C18510 + C18509) * C92110) * C92212) *
               C92067) *
              C92099 * C93 -
          ((((C18511 + C18512) * C92110 + (C18290 + C18289) * C244) * C92212 +
            ((C15261 + C15260) * C92110 + (C15065 + C15064) * C244) * C92323) *
               C92067 +
           (((C18509 + C18510) * C92110 + (C18286 + C18285) * C244) * C92212 +
            ((C15259 + C15258) * C92110 + (C15060 + C15061) * C244) * C92323) *
               C4097) *
              C92099 * C94 +
          ((C15266 * C92323 +
            ((C18289 + C18290) * C244 + (C18512 + C18511) * C92110) * C92212) *
               C4097 +
           (((C15068 + C15069) * C244 + (C15263 + C15262) * C92110) * C92323 +
            ((C15033 * C1386 + C92322 * C1603 + C15034 * C3434 +
              C92186 * C3664) *
                 C244 +
             (C15033 * C1537 + C92322 * C1733 + C15034 * C3590 +
              C92186 * C3808) *
                 C92110) *
                C92212) *
               C92067) *
              C92099 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C15033 * C107 + C92322 * C308 + C15034 * C805 + C92186 * C1022) *
                C1534 +
            (C15033 * C245 + C92322 * C474 + C15034 * C956 + C92186 * C1146) *
                C1383 -
            (C26975 + C26974) * C1535 - (C27212 + C27213) * C1384 +
            (C26985 + C26984) * C1536 + (C27214 + C27215) * C1385) *
               C92323 +
           ((C26974 + C26975) * C1534 + (C27213 + C27212) * C1383 -
            (C26984 + C26985) * C1535 - (C27215 + C27214) * C1384 +
            (C15033 * C10961 + C92322 * C11299 + C15034 * C13849 +
             C92186 * C14183) *
                C1536 +
            (C15033 * C11197 + C92322 * C11518 + C15034 * C14075 +
             C92186 * C14419) *
                C1385) *
               C92212) *
              C4097 +
          (((C15061 + C15060) * C1534 + (C15258 + C15259) * C1383 -
            (C18286 + C18285) * C1535 - (C18509 + C18510) * C1384 +
            (C26981 + C26980) * C1536 + (C27216 + C27217) * C1385) *
               C92323 +
           ((C18285 + C18286) * C1534 + (C18510 + C18509) * C1383 -
            (C26980 + C26981) * C1535 - (C27217 + C27216) * C1384 +
            (C15033 * C10960 + C92322 * C11298 + C15034 * C13850 +
             C92186 * C14184) *
                C1536 +
            (C15033 * C11198 + C92322 * C11520 + C15034 * C14076 +
             C92186 * C14420) *
                C1385) *
               C92212) *
              C92067) *
         C92099 * C92078) /
            (p * q * std::sqrt(p + q));
    d2eezx[7] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C20274 * C107 + C92323 * C555 + C20275 * C1389 + C92212 * C1788) *
                 C801 +
             (C20274 * C117 + C92323 * C561 + C20275 * C1397 + C92212 * C1796) *
                 C92078) *
                C4097 +
            ((C20302 + C20301) * C801 + (C20304 + C20303) * C92078) * C92067) *
               C92322 +
           (((C26314 + C26315) * C801 + (C26316 + C26317) * C92078) * C4097 +
            ((C22635 + C22636) * C801 + (C22637 + C22638) * C92078) * C92067) *
               C92186) *
              C92110 * C798 -
          ((((C26318 + C26319) * C92078 + (C26320 + C26321) * C801) * C92067 +
            ((C26322 + C26323) * C92078 + (C26324 + C26325) * C801) * C4097) *
               C92186 +
           (((C22638 + C22637) * C92078 + (C22636 + C22635) * C801) * C92067 +
            ((C26317 + C26316) * C92078 + (C26315 + C26314) * C801) * C4097) *
               C92322) *
              C92110 * C799 +
          ((((C26325 + C26324) * C801 + (C26323 + C26322) * C92078) * C4097 +
            ((C26321 + C26320) * C801 + (C26319 + C26318) * C92078) * C92067) *
               C92322 +
           (((C20274 * C4882 + C92323 * C5456 + C20275 * C8536 +
              C92212 * C9196) *
                 C801 +
             (C20274 * C4886 + C92323 * C5460 + C20275 * C8540 +
              C92212 * C9198) *
                 C92078) *
                C4097 +
            ((C20274 * C4881 + C92323 * C5455 + C20275 * C8537 +
              C92212 * C9197) *
                 C801 +
             (C20274 * C4885 + C92323 * C5459 + C20275 * C8541 +
              C92212 * C9199) *
                 C92078) *
                C92067) *
               C92186) *
              C92110 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C20274 * C107 + C92323 * C555 + C20275 * C1389 + C92212 * C1788) *
                C104 +
            (C20274 * C117 + C92323 * C561 + C20275 * C1397 + C92212 * C1796) *
                C93 -
            (C20301 + C20302) * C105 - (C20303 + C20304) * C94 + C20313 * C106 +
            C20314 * C95) *
               C4097 +
           ((C20302 + C20301) * C104 + (C20304 + C20303) * C93 -
            (C20306 + C20305) * C105 - (C20308 + C20307) * C94 +
            (C20309 + C20310) * C106 + (C20311 + C20312) * C95) *
               C92067) *
              C92322 +
          (((C20274 * C805 + C92323 * C1204 + C20275 * C3431 + C92212 * C3875) *
                C104 +
            (C20274 * C813 + C92323 * C1212 + C20275 * C3439 + C92212 * C3879) *
                C93 -
            (C22636 + C22635) * C105 - (C22638 + C22637) * C94 +
            (C22639 + C22640) * C106 + (C22641 + C22642) * C95) *
               C4097 +
           ((C22635 + C22636) * C104 + (C22637 + C22638) * C93 -
            (C22640 + C22639) * C105 - (C22642 + C22641) * C94 +
            (C20274 * C802 + C92323 * C1201 + C20275 * C3434 + C92212 * C3878) *
                C106 +
            (C20274 * C810 + C92323 * C1209 + C20275 * C3442 + C92212 * C3882) *
                C95) *
               C92067) *
              C92186) *
         C92110 * C92099) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C20274 * C107 + C92323 * C555 + C20275 * C1389 + C92212 * C1788) *
                 C801 +
             (C20274 * C117 + C92323 * C561 + C20275 * C1397 + C92212 * C1796) *
                 C92078) *
                C4097 +
            ((C20302 + C20301) * C801 + (C20304 + C20303) * C92078) * C92067) *
               C92322 +
           (((C26314 + C26315) * C801 + (C26316 + C26317) * C92078) * C4097 +
            ((C22635 + C22636) * C801 + (C22637 + C22638) * C92078) * C92067) *
               C92186) *
              C1383 -
          ((((C20275 * C5784 + C92212 * C6296 + C20274 * C3440 +
              C92323 * C3880) *
                 C92078 +
             (C20275 * C5774 + C92212 * C6290 + C20274 * C3432 +
              C92323 * C3876) *
                 C801) *
                C92067 +
            ((C20275 * C5783 + C92212 * C6295 + C20274 * C3439 +
              C92323 * C3879) *
                 C92078 +
             (C20275 * C5773 + C92212 * C6289 + C20274 * C3431 +
              C92323 * C3875) *
                 C801) *
                C4097) *
               C92186 +
           (((C23613 + C23612) * C92078 + (C23611 + C23610) * C801) * C92067 +
            ((C20275 * C1406 + C92212 * C1797 + C20274 * C1397 +
              C92323 * C1796) *
                 C92078 +
             (C20275 * C1390 + C92212 * C1789 + C20274 * C1389 +
              C92323 * C1788) *
                 C801) *
                C4097) *
               C92322) *
              C1384 +
          ((((C20274 * C1390 + C92323 * C1789 + C20275 * C10961 +
              C92212 * C11609) *
                 C801 +
             (C20274 * C1406 + C92323 * C1797 + C20275 * C10965 +
              C92212 * C11613) *
                 C92078) *
                C4097 +
            ((C20274 * C1391 + C92323 * C1790 + C20275 * C10960 +
              C92212 * C11608) *
                 C801 +
             (C20274 * C1407 + C92323 * C1798 + C20275 * C10964 +
              C92212 * C11612) *
                 C92078) *
                C92067) *
               C92322 +
           (((C20274 * C5773 + C92323 * C6289 + C20275 * C13849 +
              C92212 * C14525) *
                 C801 +
             (C20274 * C5783 + C92323 * C6295 + C20275 * C13853 +
              C92212 * C14527) *
                 C92078) *
                C4097 +
            ((C20274 * C5774 + C92323 * C6290 + C20275 * C13850 +
              C92212 * C14526) *
                 C801 +
             (C20274 * C5784 + C92323 * C6296 + C20275 * C13854 +
              C92212 * C14528) *
                 C92078) *
                C92067) *
               C92186) *
              C1385) *
         C92099) /
            (p * q * std::sqrt(p + q));
    d2eezy[7] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C20274 * C107 + C92323 * C555 + C20275 * C1389 + C92212 * C1788) *
                C884 +
            (C20274 * C182 + C92323 * C641 + C20275 * C1471 + C92212 * C1854) *
                C798 -
            (C26315 + C26314) * C885 - (C26436 + C26437) * C799 +
            (C26325 + C26324) * C886 + (C26438 + C26439) * C800) *
               C4097 +
           ((C20302 + C20301) * C884 + (C20402 + C20403) * C798 -
            (C22636 + C22635) * C885 - (C22749 + C22750) * C799 +
            (C26321 + C26320) * C886 + (C26440 + C26441) * C800) *
               C92067) *
              C92322 +
          (((C26314 + C26315) * C884 + (C26437 + C26436) * C798 -
            (C26324 + C26325) * C885 - (C26439 + C26438) * C799 +
            (C20274 * C4882 + C92323 * C5456 + C20275 * C8536 +
             C92212 * C9196) *
                C886 +
            (C20274 * C5012 + C92323 * C5578 + C20275 * C8666 +
             C92212 * C9318) *
                C800) *
               C4097 +
           ((C22635 + C22636) * C884 + (C22750 + C22749) * C798 -
            (C26320 + C26321) * C885 - (C26441 + C26440) * C799 +
            (C20274 * C4881 + C92323 * C5455 + C20275 * C8537 +
             C92212 * C9197) *
                C886 +
            (C20274 * C5013 + C92323 * C5579 + C20275 * C8667 +
             C92212 * C9319) *
                C800) *
               C92067) *
              C92186) *
         C92078 * C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C20274 * C107 + C92323 * C555 + C20275 * C1389 + C92212 * C1788) *
                 C181 +
             (C20274 * C182 + C92323 * C641 + C20275 * C1471 + C92212 * C1854) *
                 C92099) *
                C4097 +
            ((C20302 + C20301) * C181 + (C20402 + C20403) * C92099) * C92067) *
               C92322 +
           (((C20274 * C805 + C92323 * C1204 + C20275 * C3431 +
              C92212 * C3875) *
                 C181 +
             (C20274 * C890 + C92323 * C1267 + C20275 * C3513 +
              C92212 * C3949) *
                 C92099) *
                C4097 +
            ((C22635 + C22636) * C181 + (C22750 + C22749) * C92099) * C92067) *
               C92186) *
              C93 -
          ((((C22751 + C22752) * C92099 + (C22640 + C22639) * C181) * C92067 +
            ((C22749 + C22750) * C92099 + (C22636 + C22635) * C181) * C4097) *
               C92186 +
           (((C20405 + C20404) * C92099 + (C20306 + C20305) * C181) * C92067 +
            ((C20403 + C20402) * C92099 + (C20301 + C20302) * C181) * C4097) *
               C92322) *
              C94 +
          ((C20410 * C4097 +
            ((C20309 + C20310) * C181 + (C20407 + C20406) * C92099) * C92067) *
               C92322 +
           (((C22639 + C22640) * C181 + (C22752 + C22751) * C92099) * C4097 +
            ((C20274 * C802 + C92323 * C1201 + C20275 * C3434 +
              C92212 * C3878) *
                 C181 +
             (C20274 * C887 + C92323 * C1273 + C20275 * C3516 +
              C92212 * C3952) *
                 C92099) *
                C92067) *
               C92186) *
              C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C20274 * C107 + C92323 * C555 + C20275 * C1389 + C92212 * C1788) *
                 C181 +
             (C20274 * C182 + C92323 * C641 + C20275 * C1471 + C92212 * C1854) *
                 C92099) *
                C4097 +
            ((C20302 + C20301) * C181 + (C20402 + C20403) * C92099) * C92067) *
               C92322 +
           (((C26314 + C26315) * C181 + (C26437 + C26436) * C92099) * C4097 +
            ((C22635 + C22636) * C181 + (C22750 + C22749) * C92099) * C92067) *
               C92186) *
              C92078 * C1383 -
          ((((C20275 * C5872 + C92212 * C6376 + C20274 * C3514 +
              C92323 * C3950) *
                 C92099 +
             (C20275 * C5774 + C92212 * C6290 + C20274 * C3432 +
              C92323 * C3876) *
                 C181) *
                C92067 +
            ((C20275 * C5871 + C92212 * C6375 + C20274 * C3513 +
              C92323 * C3949) *
                 C92099 +
             (C20275 * C5773 + C92212 * C6289 + C20274 * C3431 +
              C92323 * C3875) *
                 C181) *
                C4097) *
               C92186 +
           (((C23725 + C23724) * C92099 + (C23611 + C23610) * C181) * C92067 +
            ((C20275 * C1472 + C92212 * C1855 + C20274 * C1471 +
              C92323 * C1854) *
                 C92099 +
             (C20275 * C1390 + C92212 * C1789 + C20274 * C1389 +
              C92323 * C1788) *
                 C181) *
                C4097) *
               C92322) *
              C92078 * C1384 +
          ((((C20274 * C1390 + C92323 * C1789 + C20275 * C10961 +
              C92212 * C11609) *
                 C181 +
             (C20274 * C1472 + C92323 * C1855 + C20275 * C11093 +
              C92212 * C11691) *
                 C92099) *
                C4097 +
            ((C20274 * C1391 + C92323 * C1790 + C20275 * C10960 +
              C92212 * C11608) *
                 C181 +
             (C20274 * C1473 + C92323 * C1856 + C20275 * C11092 +
              C92212 * C11690) *
                 C92099) *
                C92067) *
               C92322 +
           (((C20274 * C5773 + C92323 * C6289 + C20275 * C13849 +
              C92212 * C14525) *
                 C181 +
             (C20274 * C5871 + C92323 * C6375 + C20275 * C13967 +
              C92212 * C14627) *
                 C92099) *
                C4097 +
            ((C20274 * C5774 + C92323 * C6290 + C20275 * C13850 +
              C92212 * C14526) *
                 C181 +
             (C20274 * C5872 + C92323 * C6376 + C20275 * C13968 +
              C92212 * C14628) *
                 C92099) *
                C92067) *
               C92186) *
              C92078 * C1385)) /
            (p * q * std::sqrt(p + q));
    d2eezz[7] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C20274 * C107 + C92323 * C555 + C20275 * C1389 + C92212 * C1788) *
                 C244 +
             (C20274 * C245 + C92323 * C719 + C20275 * C1540 + C92212 * C1909) *
                 C92110) *
                C4097 +
            ((C20302 + C20301) * C244 + (C20498 + C20499) * C92110) * C92067) *
               C92322 +
           (((C26314 + C26315) * C244 + (C26552 + C26553) * C92110) * C4097 +
            ((C22635 + C22636) * C244 + (C22862 + C22861) * C92110) * C92067) *
               C92186) *
              C798 -
          ((((C26554 + C26555) * C92110 + (C26320 + C26321) * C244) * C92067 +
            ((C26556 + C26557) * C92110 + (C26324 + C26325) * C244) * C4097) *
               C92186 +
           (((C22861 + C22862) * C92110 + (C22636 + C22635) * C244) * C92067 +
            ((C26553 + C26552) * C92110 + (C26315 + C26314) * C244) * C4097) *
               C92322) *
              C799 +
          ((((C26325 + C26324) * C244 + (C26557 + C26556) * C92110) * C4097 +
            ((C26321 + C26320) * C244 + (C26555 + C26554) * C92110) * C92067) *
               C92322 +
           (((C20274 * C4882 + C92323 * C5456 + C20275 * C8536 +
              C92212 * C9196) *
                 C244 +
             (C20274 * C5114 + C92323 * C5669 + C20275 * C8780 +
              C92212 * C9424) *
                 C92110) *
                C4097 +
            ((C20274 * C4881 + C92323 * C5455 + C20275 * C8537 +
              C92212 * C9197) *
                 C244 +
             (C20274 * C5113 + C92323 * C5668 + C20275 * C8781 +
              C92212 * C9425) *
                 C92110) *
                C92067) *
               C92186) *
              C800) *
         C92078) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C20274 * C107 + C92323 * C555 + C20275 * C1389 + C92212 * C1788) *
                 C244 +
             (C20274 * C245 + C92323 * C719 + C20275 * C1540 + C92212 * C1909) *
                 C92110) *
                C4097 +
            ((C20302 + C20301) * C244 + (C20498 + C20499) * C92110) * C92067) *
               C92322 +
           (((C20274 * C805 + C92323 * C1204 + C20275 * C3431 +
              C92212 * C3875) *
                 C244 +
             (C20274 * C956 + C92323 * C1328 + C20275 * C3587 +
              C92212 * C4019) *
                 C92110) *
                C4097 +
            ((C22635 + C22636) * C244 + (C22862 + C22861) * C92110) * C92067) *
               C92186) *
              C92099 * C93 -
          ((((C22859 + C22860) * C92110 + (C22640 + C22639) * C244) * C92067 +
            ((C22861 + C22862) * C92110 + (C22636 + C22635) * C244) * C4097) *
               C92186 +
           (((C20501 + C20500) * C92110 + (C20306 + C20305) * C244) * C92067 +
            ((C20499 + C20498) * C92110 + (C20301 + C20302) * C244) * C4097) *
               C92322) *
              C92099 * C94 +
          ((C20506 * C4097 +
            ((C20309 + C20310) * C244 + (C20503 + C20502) * C92110) * C92067) *
               C92322 +
           (((C22639 + C22640) * C244 + (C22860 + C22859) * C92110) * C4097 +
            ((C20274 * C802 + C92323 * C1201 + C20275 * C3434 +
              C92212 * C3878) *
                 C244 +
             (C20274 * C953 + C92323 * C1325 + C20275 * C3590 +
              C92212 * C4022) *
                 C92110) *
                C92067) *
               C92186) *
              C92099 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C20274 * C107 + C92323 * C555 + C20275 * C1389 + C92212 * C1788) *
                C1534 +
            (C20274 * C245 + C92323 * C719 + C20275 * C1540 + C92212 * C1909) *
                C1383 -
            (C20275 * C1390 + C92212 * C1789 + C20274 * C1389 +
             C92323 * C1788) *
                C1535 -
            (C20275 * C1541 + C92212 * C1910 + C20274 * C1540 +
             C92323 * C1909) *
                C1384 +
            (C20274 * C1390 + C92323 * C1789 + C20275 * C10961 +
             C92212 * C11609) *
                C1536 +
            (C20274 * C1541 + C92323 * C1910 + C20275 * C11197 +
             C92212 * C11768) *
                C1385) *
               C4097 +
           ((C20302 + C20301) * C1534 + (C20498 + C20499) * C1383 -
            (C23611 + C23610) * C1535 - (C23834 + C23835) * C1384 +
            (C20274 * C1391 + C92323 * C1790 + C20275 * C10960 +
             C92212 * C11608) *
                C1536 +
            (C20274 * C1542 + C92323 * C1912 + C20275 * C11198 +
             C92212 * C11770) *
                C1385) *
               C92067) *
              C92322 +
          (((C26314 + C26315) * C1534 + (C26552 + C26553) * C1383 -
            (C20275 * C5773 + C92212 * C6289 + C20274 * C3431 +
             C92323 * C3875) *
                C1535 -
            (C20275 * C5955 + C92212 * C6453 + C20274 * C3587 +
             C92323 * C4019) *
                C1384 +
            (C20274 * C5773 + C92323 * C6289 + C20275 * C13849 +
             C92212 * C14525) *
                C1536 +
            (C20274 * C5955 + C92323 * C6453 + C20275 * C14075 +
             C92212 * C14727) *
                C1385) *
               C4097 +
           ((C22635 + C22636) * C1534 + (C22862 + C22861) * C1383 -
            (C20275 * C5774 + C92212 * C6290 + C20274 * C3432 +
             C92323 * C3876) *
                C1535 -
            (C20275 * C5956 + C92212 * C6454 + C20274 * C3588 +
             C92323 * C4020) *
                C1384 +
            (C20274 * C5774 + C92323 * C6290 + C20275 * C13850 +
             C92212 * C14526) *
                C1536 +
            (C20274 * C5956 + C92323 * C6454 + C20275 * C14076 +
             C92212 * C14728) *
                C1385) *
               C92067) *
              C92186) *
         C92099 * C92078) /
            (p * q * std::sqrt(p + q));
    d2eexx[8] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C92067 * C114) *
                 C1987 +
             (C4102 * C117 + C4097 * C125 + C4103 * C118 + C92067 * C126) *
                 C1983 -
             (C4103 * C109 + C92067 * C115 + C4102 * C108 + C4097 * C114) *
                 C1988 -
             (C4103 * C119 + C92067 * C127 + C4102 * C118 + C4097 * C126) *
                 C1984) *
                C92322 +
            ((C4922 + C4923) * C1987 + (C4924 + C4925) * C1983 -
             (C6578 + C6579) * C1988 - (C6580 + C6581) * C1984) *
                C92186) *
               C92323 +
           (((C11001 + C11002) * C1987 + (C11003 + C11004) * C1983 -
             (C12861 + C12862) * C1988 - (C12863 + C12864) * C1984) *
                C92322 +
            ((C8568 + C8567) * C1987 + (C8566 + C8565) * C1983 -
             (C27650 + C27651) * C1988 - (C27652 + C27653) * C1984) *
                C92186) *
               C92212) *
              C2709 +
          ((((C12862 + C12861) * C1988 -
             ((C11004 + C11003) * C1983 + (C11002 + C11001) * C1987) +
             (C12864 + C12863) * C1984) *
                C92322 +
            ((C27651 + C27650) * C1988 -
             ((C8565 + C8566) * C1983 + (C8567 + C8568) * C1987) +
             (C27653 + C27652) * C1984) *
                C92186) *
               C92323 +
           (((C12866 + C12865) * C1988 -
             ((C11008 + C11007) * C1983 + (C11006 + C11005) * C1987) +
             (C12868 + C12867) * C1984) *
                C92322 +
            ((C4102 * C5774 + C4097 * C5782 + C4103 * C11870 +
              C92067 * C11871) *
                 C1988 -
             ((C13869 + C13868) * C1983 + (C13867 + C13866) * C1987) +
             (C4102 * C5784 + C4097 * C5792 + C4103 * C11872 +
              C92067 * C11873) *
                 C1984) *
                C92186) *
               C92212) *
              C2710) *
         C92099) /
        (p * q * std::sqrt(p + q));
    d2eexy[8] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C92067 * C114) *
                  C181 +
              (C4102 * C182 + C4097 * C188 + C4103 * C183 + C92067 * C189) *
                  C92099) *
                 C92322 +
             ((C4922 + C4923) * C181 + (C5034 + C5033) * C92099) * C92186) *
                C92323 +
            (((C11001 + C11002) * C181 + (C11114 + C11115) * C92099) * C92322 +
             ((C8568 + C8567) * C181 + (C8679 + C8680) * C92099) * C92186) *
                C92212) *
               C1983 -
           ((((C27789 + C27788) * C92099 + (C27650 + C27651) * C181) * C92186 +
             ((C12979 + C12980) * C92099 + (C12861 + C12862) * C181) * C92322) *
                C92212 +
            (((C6695 + C6694) * C92099 + (C6578 + C6579) * C181) * C92186 +
             ((C4103 * C184 + C92067 * C190 + C4102 * C183 + C4097 * C189) *
                  C92099 +
              (C4103 * C109 + C92067 * C115 + C4102 * C108 + C4097 * C114) *
                  C181) *
                 C92322) *
                C92323) *
               C1984) *
              C2709 +
          (((((C12862 + C12861) * C181 + (C12980 + C12979) * C92099) * C92322 +
             ((C27651 + C27650) * C181 + (C27788 + C27789) * C92099) * C92186) *
                C92323 +
            (((C12866 + C12865) * C181 + (C12978 + C12977) * C92099) * C92322 +
             ((C4102 * C5774 + C4097 * C5782 + C4103 * C11870 +
               C92067 * C11871) *
                  C181 +
              (C4102 * C5872 + C4097 * C5878 + C4103 * C11972 +
               C92067 * C11973) *
                  C92099) *
                 C92186) *
                C92212) *
               C1984 -
           ((((C13976 + C13977) * C92099 + (C13867 + C13866) * C181) * C92186 +
             ((C11117 + C11116) * C92099 + (C11006 + C11005) * C181) * C92322) *
                C92212 +
            (((C8680 + C8679) * C92099 + (C8567 + C8568) * C181) * C92186 +
             ((C11115 + C11114) * C92099 + (C11002 + C11001) * C181) * C92322) *
                C92323) *
               C1983) *
              C2710)) /
        (p * q * std::sqrt(p + q));
    d2eexz[8] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C92067 * C114) *
                 C2849 +
             (C4102 * C245 + C4097 * C251 + C4103 * C246 + C92067 * C252) *
                 C2709 -
             (C11002 + C11001) * C2850 - (C11218 + C11219) * C2710) *
                C92322 +
            ((C4922 + C4923) * C2849 + (C5135 + C5136) * C2709 -
             (C8567 + C8568) * C2850 - (C8793 + C8794) * C2710) *
                C92186) *
               C92323 +
           (((C11001 + C11002) * C2849 + (C11219 + C11218) * C2709 -
             (C11006 + C11005) * C2850 - (C11221 + C11220) * C2710) *
                C92322 +
            ((C8568 + C8567) * C2849 + (C8794 + C8793) * C2709 -
             (C13867 + C13866) * C2850 - (C14085 + C14084) * C2710) *
                C92186) *
               C92212) *
              C92099 * C1983 +
          ((((C12862 + C12861) * C2850 -
             ((C4103 * C247 + C92067 * C253 + C4102 * C246 + C4097 * C252) *
                  C2709 +
              (C4103 * C109 + C92067 * C115 + C4102 * C108 + C4097 * C114) *
                  C2849) +
             (C13089 + C13090) * C2710) *
                C92322 +
            ((C27651 + C27650) * C2850 -
             ((C6807 + C6806) * C2709 + (C6578 + C6579) * C2849) +
             (C27924 + C27925) * C2710) *
                C92186) *
               C92323 +
           (((C12866 + C12865) * C2850 -
             ((C13090 + C13089) * C2709 + (C12861 + C12862) * C2849) +
             (C13091 + C13092) * C2710) *
                C92322 +
            ((C4102 * C5774 + C4097 * C5782 + C4103 * C11870 +
              C92067 * C11871) *
                 C2850 -
             ((C27925 + C27924) * C2709 + (C27650 + C27651) * C2849) +
             (C4102 * C5956 + C4097 * C5962 + C4103 * C12072 +
              C92067 * C12073) *
                 C2710) *
                C92186) *
               C92212) *
              C92099 * C1984)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[8] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C15033 * C107 + C92322 * C308 + C15034 * C805 + C92186 * C1022) *
                 C1987 +
             (C15033 * C117 + C92322 * C314 + C15034 * C813 + C92186 * C1030) *
                 C1983 -
             (C15060 + C15061) * C1988 - (C15062 + C15063) * C1984) *
                C92323 +
            ((C26974 + C26975) * C1987 + (C26976 + C26977) * C1983 -
             C29264 * C1988 - C29265 * C1984) *
                C92212) *
               C4097 +
           (((C15061 + C15060) * C1987 + (C15063 + C15062) * C1983 -
             (C15065 + C15064) * C1988 - (C15067 + C15066) * C1984) *
                C92323 +
            (C29266 * C1987 + C29267 * C1983 - (C18290 + C18289) * C1988 -
             (C18292 + C18291) * C1984) *
                C92212) *
               C92067) *
              C2709 +
          (((C29266 * C1988 -
             ((C26977 + C26976) * C1983 + (C26975 + C26974) * C1987) +
             C29267 * C1984) *
                C92323 +
            ((C26981 + C26980) * C1988 -
             ((C26982 + C26983) * C1983 + (C26984 + C26985) * C1987) +
             (C26979 + C26978) * C1984) *
                C92212) *
               C4097 +
           (((C18289 + C18290) * C1988 - (C29265 * C1983 + C29264 * C1987) +
             (C18291 + C18292) * C1984) *
                C92323 +
            ((C15033 * C1392 + C92322 * C1609 + C15034 * C11870 +
              C92186 * C12172) *
                 C1988 -
             ((C26978 + C26979) * C1983 + (C26980 + C26981) * C1987) +
             (C15033 * C1408 + C92322 * C1617 + C15034 * C11872 +
              C92186 * C12173) *
                 C1984) *
                C92212) *
               C92067) *
              C2710) *
         C92099) /
        (p * q * std::sqrt(p + q));
    d2eeyy[8] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C15033 * C107 + C92322 * C308 + C15034 * C805 + C92186 * C1022) *
                  C181 +
              (C15033 * C182 + C92322 * C394 + C15034 * C890 + C92186 * C1085) *
                  C92099) *
                 C92323 +
             ((C26974 + C26975) * C181 + (C27096 + C27097) * C92099) * C92212) *
                C4097 +
            (((C15061 + C15060) * C181 + (C15161 + C15162) * C92099) * C92323 +
             C29404 * C92212) *
                C92067) *
               C1983 -
           ((((C18402 + C18401) * C92099 + (C18290 + C18289) * C181) * C92212 +
             ((C15164 + C15163) * C92099 + (C15065 + C15064) * C181) * C92323) *
                C92067 +
            (C29405 * C92212 +
             ((C15162 + C15161) * C92099 + (C15060 + C15061) * C181) * C92323) *
                C4097) *
               C1984) *
              C2709 +
          (((C29404 * C92323 +
             ((C26981 + C26980) * C181 + (C27099 + C27098) * C92099) * C92212) *
                C4097 +
            (((C18289 + C18290) * C181 + (C18401 + C18402) * C92099) * C92323 +
             ((C15033 * C1392 + C92322 * C1609 + C15034 * C11870 +
               C92186 * C12172) *
                  C181 +
              (C15033 * C1474 + C92322 * C1675 + C15034 * C11972 +
               C92186 * C12284) *
                  C92099) *
                 C92212) *
                C92067) *
               C1984 -
           ((((C27098 + C27099) * C92099 + (C26980 + C26981) * C181) * C92212 +
             C29405 * C92323) *
                C92067 +
            (((C27100 + C27101) * C92099 + (C26984 + C26985) * C181) * C92212 +
             ((C27097 + C27096) * C92099 + (C26975 + C26974) * C181) * C92323) *
                C4097) *
               C1983) *
              C2710)) /
        (p * q * std::sqrt(p + q));
    d2eeyz[8] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C15033 * C107 + C92322 * C308 + C15034 * C805 + C92186 * C1022) *
                 C2849 +
             (C15033 * C245 + C92322 * C474 + C15034 * C956 + C92186 * C1146) *
                 C2709 -
             (C26975 + C26974) * C2850 - (C27212 + C27213) * C2710) *
                C92323 +
            ((C26974 + C26975) * C2849 + (C27213 + C27212) * C2709 -
             (C26984 + C26985) * C2850 - (C27215 + C27214) * C2710) *
                C92212) *
               C4097 +
           (((C15061 + C15060) * C2849 + (C15258 + C15259) * C2709 -
             C29264 * C2850 - C29536 * C2710) *
                C92323 +
            (C29266 * C2849 + C29537 * C2709 - (C26980 + C26981) * C2850 -
             (C27217 + C27216) * C2710) *
                C92212) *
               C92067) *
              C92099 * C1983 +
          (((C29266 * C2850 -
             ((C15259 + C15258) * C2709 + (C15060 + C15061) * C2849) +
             C29537 * C2710) *
                C92323 +
            ((C26981 + C26980) * C2850 - (C29536 * C2709 + C29264 * C2849) +
             (C27216 + C27217) * C2710) *
                C92212) *
               C4097 +
           (((C18289 + C18290) * C2850 -
             ((C15261 + C15260) * C2709 + (C15065 + C15064) * C2849) +
             (C18512 + C18511) * C2710) *
                C92323 +
            ((C15033 * C1392 + C92322 * C1609 + C15034 * C11870 +
              C92186 * C12172) *
                 C2850 -
             ((C18511 + C18512) * C2709 + (C18290 + C18289) * C2849) +
             (C15033 * C1543 + C92322 * C1732 + C15034 * C12072 +
              C92186 * C12397) *
                 C2710) *
                C92212) *
               C92067) *
              C92099 * C1984)) /
        (p * q * std::sqrt(p + q));
    d2eezx[8] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C20274 * C107 + C92323 * C555 + C20275 * C1389 + C92212 * C1788) *
                 C1987 +
             (C20274 * C117 + C92323 * C561 + C20275 * C1397 + C92212 * C1796) *
                 C1983 -
             (C20301 + C20302) * C1988 - (C20303 + C20304) * C1984) *
                C4097 +
            ((C20302 + C20301) * C1987 + (C20304 + C20303) * C1983 -
             (C20306 + C20305) * C1988 - (C20308 + C20307) * C1984) *
                C92067) *
               C92322 +
           (((C26314 + C26315) * C1987 + (C26316 + C26317) * C1983 -
             C28470 * C1988 - C28471 * C1984) *
                C4097 +
            (C28472 * C1987 + C28473 * C1983 - (C22640 + C22639) * C1988 -
             (C22642 + C22641) * C1984) *
                C92067) *
               C92186) *
              C2709 +
          ((((C23610 + C23611) * C1988 -
             ((C20275 * C1406 + C92212 * C1797 + C20274 * C1397 +
               C92323 * C1796) *
                  C1983 +
              (C20275 * C1390 + C92212 * C1789 + C20274 * C1389 +
               C92323 * C1788) *
                  C1987) +
             (C23612 + C23613) * C1984) *
                C4097 +
            ((C23614 + C23615) * C1988 -
             ((C23613 + C23612) * C1983 + (C23611 + C23610) * C1987) +
             (C23616 + C23617) * C1984) *
                C92067) *
               C92322 +
           (((C29676 + C29677) * C1988 -
             ((C20275 * C5783 + C92212 * C6295 + C20274 * C3439 +
               C92323 * C3879) *
                  C1983 +
              (C20275 * C5773 + C92212 * C6289 + C20274 * C3431 +
               C92323 * C3875) *
                  C1987) +
             (C29678 + C29679) * C1984) *
                C4097 +
            ((C20274 * C3433 + C92323 * C3877 + C20275 * C11870 +
              C92212 * C12506) *
                 C1988 -
             ((C29679 + C29678) * C1983 + (C29677 + C29676) * C1987) +
             (C20274 * C3441 + C92323 * C3881 + C20275 * C11872 +
              C92212 * C12507) *
                 C1984) *
                C92067) *
               C92186) *
              C2710) *
         C92099) /
        (p * q * std::sqrt(p + q));
    d2eezy[8] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C20274 * C107 + C92323 * C555 + C20275 * C1389 +
               C92212 * C1788) *
                  C181 +
              (C20274 * C182 + C92323 * C641 + C20275 * C1471 +
               C92212 * C1854) *
                  C92099) *
                 C4097 +
             ((C20302 + C20301) * C181 + (C20402 + C20403) * C92099) * C92067) *
                C92322 +
            (((C26314 + C26315) * C181 + (C26437 + C26436) * C92099) * C4097 +
             (C28472 * C181 + C28605 * C92099) * C92067) *
                C92186) *
               C1983 -
           ((((C22751 + C22752) * C92099 + (C22640 + C22639) * C181) * C92067 +
             (C28604 * C92099 + C28470 * C181) * C4097) *
                C92186 +
            (((C20405 + C20404) * C92099 + (C20306 + C20305) * C181) * C92067 +
             ((C20403 + C20402) * C92099 + (C20301 + C20302) * C181) * C4097) *
                C92322) *
               C1984) *
              C2709 +
          (((((C23610 + C23611) * C181 + (C23724 + C23725) * C92099) * C4097 +
             ((C23614 + C23615) * C181 + (C23726 + C23727) * C92099) * C92067) *
                C92322 +
            (((C29676 + C29677) * C181 + (C29814 + C29815) * C92099) * C4097 +
             ((C20274 * C3433 + C92323 * C3877 + C20275 * C11870 +
               C92212 * C12506) *
                  C181 +
              (C20274 * C3515 + C92323 * C3951 + C20275 * C11972 +
               C92212 * C12624) *
                  C92099) *
                 C92067) *
                C92186) *
               C1984 -
           ((((C29815 + C29814) * C92099 + (C29677 + C29676) * C181) * C92067 +
             ((C20275 * C5871 + C92212 * C6375 + C20274 * C3513 +
               C92323 * C3949) *
                  C92099 +
              (C20275 * C5773 + C92212 * C6289 + C20274 * C3431 +
               C92323 * C3875) *
                  C181) *
                 C4097) *
                C92186 +
            (((C23725 + C23724) * C92099 + (C23611 + C23610) * C181) * C92067 +
             ((C20275 * C1472 + C92212 * C1855 + C20274 * C1471 +
               C92323 * C1854) *
                  C92099 +
              (C20275 * C1390 + C92212 * C1789 + C20274 * C1389 +
               C92323 * C1788) *
                  C181) *
                 C4097) *
                C92322) *
               C1983) *
              C2710)) /
        (p * q * std::sqrt(p + q));
    d2eezz[8] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C20274 * C107 + C92323 * C555 + C20275 * C1389 + C92212 * C1788) *
                 C2849 +
             (C20274 * C245 + C92323 * C719 + C20275 * C1540 + C92212 * C1909) *
                 C2709 -
             (C20275 * C1390 + C92212 * C1789 + C20274 * C1389 +
              C92323 * C1788) *
                 C2850 -
             (C20275 * C1541 + C92212 * C1910 + C20274 * C1540 +
              C92323 * C1909) *
                 C2710) *
                C4097 +
            ((C20302 + C20301) * C2849 + (C20498 + C20499) * C2709 -
             (C23611 + C23610) * C2850 - (C23834 + C23835) * C2710) *
                C92067) *
               C92322 +
           (((C26314 + C26315) * C2849 + (C26552 + C26553) * C2709 -
             (C20275 * C5773 + C92212 * C6289 + C20274 * C3431 +
              C92323 * C3875) *
                 C2850 -
             (C20275 * C5955 + C92212 * C6453 + C20274 * C3587 +
              C92323 * C4019) *
                 C2710) *
                C4097 +
            (C28472 * C2849 + C28737 * C2709 - (C29677 + C29676) * C2850 -
             (C29950 + C29951) * C2710) *
                C92067) *
               C92186) *
              C92099 * C1983 +
          ((((C23610 + C23611) * C2850 -
             ((C20499 + C20498) * C2709 + (C20301 + C20302) * C2849) +
             (C23835 + C23834) * C2710) *
                C4097 +
            ((C23614 + C23615) * C2850 -
             ((C20501 + C20500) * C2709 + (C20306 + C20305) * C2849) +
             (C23837 + C23836) * C2710) *
                C92067) *
               C92322 +
           (((C29676 + C29677) * C2850 - (C28738 * C2709 + C28470 * C2849) +
             (C29951 + C29950) * C2710) *
                C4097 +
            ((C20274 * C3433 + C92323 * C3877 + C20275 * C11870 +
              C92212 * C12506) *
                 C2850 -
             ((C22859 + C22860) * C2709 + (C22640 + C22639) * C2849) +
             (C20274 * C3589 + C92323 * C4021 + C20275 * C12072 +
              C92212 * C12732) *
                 C2710) *
                C92067) *
               C92186) *
              C92099 * C1984)) /
        (p * q * std::sqrt(p + q));
    d2eexx[9] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C92067 * C114) *
                C104 +
            (C4102 * C117 + C4097 * C125 + C4103 * C118 + C92067 * C126) * C93 -
            (C4103 * C109 + C92067 * C115 + C4102 * C108 + C4097 * C114) *
                C105 -
            (C4103 * C119 + C92067 * C127 + C4102 * C118 + C4097 * C126) * C94 +
            (C4102 * C109 + C4097 * C115 + C4103 * C110 + C92067 * C116) *
                C106 +
            (C4102 * C119 + C4097 * C127 + C4103 * C120 + C92067 * C128) *
                C95) *
               C92322 +
           ((C4922 + C4923) * C104 + (C4924 + C4925) * C93 -
            (C6578 + C6579) * C105 - (C6580 + C6581) * C94 +
            (C4102 * C803 + C4097 * C815 + C4103 * C802 + C92067 * C814) *
                C106 +
            (C4102 * C811 + C4097 * C827 + C4103 * C810 + C92067 * C826) *
                C95) *
               C92186) *
              C92323 +
          (((C11001 + C11002) * C104 + (C11003 + C11004) * C93 -
            (C12861 + C12862) * C105 - (C12863 + C12864) * C94 +
            (C4102 * C1387 + C4097 * C1399 + C4103 * C1386 + C92067 * C1398) *
                C106 +
            (C4102 * C1395 + C4097 * C1411 + C4103 * C1394 + C92067 * C1410) *
                C95) *
               C92322 +
           ((C8568 + C8567) * C104 + (C8566 + C8565) * C93 -
            (C4103 * C3433 + C92067 * C3437 + C4102 * C3432 + C4097 * C3436) *
                C105 -
            (C4103 * C3441 + C92067 * C3445 + C4102 * C3440 + C4097 * C3444) *
                C94 +
            (C4102 * C3433 + C4097 * C3437 + C4103 * C3434 + C92067 * C3438) *
                C106 +
            (C4102 * C3441 + C4097 * C3445 + C4103 * C3442 + C92067 * C3446) *
                C95) *
               C92186) *
              C92212) *
         C92110 * C92099) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C92067 * C114) *
                 C801 +
             (C4102 * C117 + C4097 * C125 + C4103 * C118 + C92067 * C126) *
                 C92078) *
                C92322 +
            ((C4922 + C4923) * C801 + (C4924 + C4925) * C92078) * C92186) *
               C92323 +
           (((C11001 + C11002) * C801 + (C11003 + C11004) * C92078) * C92322 +
            ((C8568 + C8567) * C801 + (C8566 + C8565) * C92078) * C92186) *
               C92212) *
              C92110 * C798 -
          ((((C8561 + C8562) * C92078 + (C8563 + C8564) * C801) * C92186 +
            ((C8565 + C8566) * C92078 + (C8567 + C8568) * C801) * C92322) *
               C92212 +
           (((C4929 + C4928) * C92078 + (C4927 + C4926) * C801) * C92186 +
            ((C4925 + C4924) * C92078 + (C4923 + C4922) * C801) * C92322) *
               C92323) *
              C92110 * C799 +
          ((C4938 * C92322 +
            ((C4933 + C4932) * C801 + (C4931 + C4930) * C92078) * C92186) *
               C92323 +
           (((C8564 + C8563) * C801 + (C8562 + C8561) * C92078) * C92322 +
            ((C4102 * C8536 + C4097 * C8538 + C4103 * C8537 + C92067 * C8539) *
                 C801 +
             (C4102 * C8540 + C4097 * C8542 + C4103 * C8541 + C92067 * C8543) *
                 C92078) *
                C92186) *
               C92212) *
              C92110 * C800)) /
            (p * q * std::sqrt(p + q));
    d2eexy[9] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C92067 * C114) *
                 C181 +
             (C4102 * C182 + C4097 * C188 + C4103 * C183 + C92067 * C189) *
                 C92099) *
                C92322 +
            ((C4922 + C4923) * C181 + (C5034 + C5033) * C92099) * C92186) *
               C92323 +
           (((C11001 + C11002) * C181 + (C11114 + C11115) * C92099) * C92322 +
            ((C8568 + C8567) * C181 + (C8679 + C8680) * C92099) * C92186) *
               C92212) *
              C93 -
          ((((C4103 * C3515 + C92067 * C3519 + C4102 * C3514 + C4097 * C3518) *
                 C92099 +
             (C4103 * C3433 + C92067 * C3437 + C4102 * C3432 + C4097 * C3436) *
                 C181) *
                C92186 +
            ((C12979 + C12980) * C92099 + (C12861 + C12862) * C181) * C92322) *
               C92212 +
           (((C6695 + C6694) * C92099 + (C6578 + C6579) * C181) * C92186 +
            ((C4103 * C184 + C92067 * C190 + C4102 * C183 + C4097 * C189) *
                 C92099 +
             (C4103 * C109 + C92067 * C115 + C4102 * C108 + C4097 * C114) *
                 C181) *
                C92322) *
               C92323) *
              C94 +
          ((((C4102 * C109 + C4097 * C115 + C4103 * C110 + C92067 * C116) *
                 C181 +
             (C4102 * C184 + C4097 * C190 + C4103 * C185 + C92067 * C191) *
                 C92099) *
                C92322 +
            ((C4102 * C803 + C4097 * C815 + C4103 * C802 + C92067 * C814) *
                 C181 +
             (C4102 * C888 + C4097 * C896 + C4103 * C887 + C92067 * C895) *
                 C92099) *
                C92186) *
               C92323 +
           (((C4102 * C1387 + C4097 * C1399 + C4103 * C1386 + C92067 * C1398) *
                 C181 +
             (C4102 * C1469 + C4097 * C1477 + C4103 * C1468 + C92067 * C1476) *
                 C92099) *
                C92322 +
            ((C4102 * C3433 + C4097 * C3437 + C4103 * C3434 + C92067 * C3438) *
                 C181 +
             (C4102 * C3515 + C4097 * C3519 + C4103 * C3516 + C92067 * C3520) *
                 C92099) *
                C92186) *
               C92212) *
              C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C92067 * C114) *
                C884 +
            (C4102 * C182 + C4097 * C188 + C4103 * C183 + C92067 * C189) *
                C798 -
            (C4923 + C4922) * C885 - (C5033 + C5034) * C799 + C4934 * C886 +
            C5039 * C800) *
               C92322 +
           ((C4922 + C4923) * C884 + (C5034 + C5033) * C798 -
            (C4927 + C4926) * C885 - (C5036 + C5035) * C799 +
            (C4933 + C4932) * C886 + (C5037 + C5038) * C800) *
               C92186) *
              C92323 +
          (((C11001 + C11002) * C884 + (C11114 + C11115) * C798 -
            (C8567 + C8568) * C885 - (C8680 + C8679) * C799 +
            (C8564 + C8563) * C886 + (C8681 + C8682) * C800) *
               C92322 +
           ((C8568 + C8567) * C884 + (C8679 + C8680) * C798 -
            (C8563 + C8564) * C885 - (C8682 + C8681) * C799 +
            (C4102 * C8536 + C4097 * C8538 + C4103 * C8537 + C92067 * C8539) *
                C886 +
            (C4102 * C8666 + C4097 * C8668 + C4103 * C8667 + C92067 * C8669) *
                C800) *
               C92186) *
              C92212) *
         C92078 * C92110) /
            (p * q * std::sqrt(p + q));
    d2eexz[9] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C92067 * C114) *
                 C244 +
             (C4102 * C245 + C4097 * C251 + C4103 * C246 + C92067 * C252) *
                 C92110) *
                C92322 +
            ((C4922 + C4923) * C244 + (C5135 + C5136) * C92110) * C92186) *
               C92323 +
           (((C11001 + C11002) * C244 + (C11219 + C11218) * C92110) * C92322 +
            ((C8568 + C8567) * C244 + (C8794 + C8793) * C92110) * C92186) *
               C92212) *
              C92099 * C93 -
          ((((C4103 * C3589 + C92067 * C3593 + C4102 * C3588 + C4097 * C3592) *
                 C92110 +
             (C4103 * C3433 + C92067 * C3437 + C4102 * C3432 + C4097 * C3436) *
                 C244) *
                C92186 +
            ((C13090 + C13089) * C92110 + (C12861 + C12862) * C244) * C92322) *
               C92212 +
           (((C6807 + C6806) * C92110 + (C6578 + C6579) * C244) * C92186 +
            ((C4103 * C247 + C92067 * C253 + C4102 * C246 + C4097 * C252) *
                 C92110 +
             (C4103 * C109 + C92067 * C115 + C4102 * C108 + C4097 * C114) *
                 C244) *
                C92322) *
               C92323) *
              C92099 * C94 +
          ((((C4102 * C109 + C4097 * C115 + C4103 * C110 + C92067 * C116) *
                 C244 +
             (C4102 * C247 + C4097 * C253 + C4103 * C248 + C92067 * C254) *
                 C92110) *
                C92322 +
            ((C4102 * C803 + C4097 * C815 + C4103 * C802 + C92067 * C814) *
                 C244 +
             (C4102 * C954 + C4097 * C962 + C4103 * C953 + C92067 * C961) *
                 C92110) *
                C92186) *
               C92323 +
           (((C4102 * C1387 + C4097 * C1399 + C4103 * C1386 + C92067 * C1398) *
                 C244 +
             (C4102 * C1538 + C4097 * C1546 + C4103 * C1537 + C92067 * C1545) *
                 C92110) *
                C92322 +
            ((C4102 * C3433 + C4097 * C3437 + C4103 * C3434 + C92067 * C3438) *
                 C244 +
             (C4102 * C3589 + C4097 * C3593 + C4103 * C3590 + C92067 * C3594) *
                 C92110) *
                C92186) *
               C92212) *
              C92099 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C92067 * C114) *
                 C244 +
             (C4102 * C245 + C4097 * C251 + C4103 * C246 + C92067 * C252) *
                 C92110) *
                C92322 +
            ((C4922 + C4923) * C244 + (C5135 + C5136) * C92110) * C92186) *
               C92323 +
           (((C11001 + C11002) * C244 + (C11219 + C11218) * C92110) * C92322 +
            ((C8568 + C8567) * C244 + (C8794 + C8793) * C92110) * C92186) *
               C92212) *
              C798 -
          ((((C8795 + C8796) * C92110 + (C8563 + C8564) * C244) * C92186 +
            ((C8793 + C8794) * C92110 + (C8567 + C8568) * C244) * C92322) *
               C92212 +
           (((C5138 + C5137) * C92110 + (C4927 + C4926) * C244) * C92186 +
            ((C5136 + C5135) * C92110 + (C4923 + C4922) * C244) * C92322) *
               C92323) *
              C799 +
          ((C5143 * C92322 +
            ((C4933 + C4932) * C244 + (C5140 + C5139) * C92110) * C92186) *
               C92323 +
           (((C8564 + C8563) * C244 + (C8796 + C8795) * C92110) * C92322 +
            ((C4102 * C8536 + C4097 * C8538 + C4103 * C8537 + C92067 * C8539) *
                 C244 +
             (C4102 * C8780 + C4097 * C8782 + C4103 * C8781 + C92067 * C8783) *
                 C92110) *
                C92186) *
               C92212) *
              C800) *
         C92078) /
            (p * q * std::sqrt(p + q));
    d2eeyx[9] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C15033 * C107 + C92322 * C308 + C15034 * C805 + C92186 * C1022) *
                C104 +
            (C15033 * C117 + C92322 * C314 + C15034 * C813 + C92186 * C1030) *
                C93 -
            (C15060 + C15061) * C105 - (C15062 + C15063) * C94 + C15072 * C106 +
            C15073 * C95) *
               C92323 +
           ((C15033 * C1389 + C92322 * C1606 + C15034 * C3431 +
             C92186 * C3661) *
                C104 +
            (C15033 * C1397 + C92322 * C1614 + C15034 * C3439 +
             C92186 * C3665) *
                C93 -
            (C18286 + C18285) * C105 - (C18288 + C18287) * C94 +
            (C18289 + C18290) * C106 + (C18291 + C18292) * C95) *
               C92212) *
              C4097 +
          (((C15061 + C15060) * C104 + (C15063 + C15062) * C93 -
            (C15065 + C15064) * C105 - (C15067 + C15066) * C94 +
            (C15068 + C15069) * C106 + (C15070 + C15071) * C95) *
               C92323 +
           ((C18285 + C18286) * C104 + (C18287 + C18288) * C93 -
            (C18290 + C18289) * C105 - (C18292 + C18291) * C94 +
            (C15033 * C1386 + C92322 * C1603 + C15034 * C3434 +
             C92186 * C3664) *
                C106 +
            (C15033 * C1394 + C92322 * C1611 + C15034 * C3442 +
             C92186 * C3668) *
                C95) *
               C92212) *
              C92067) *
         C92110 * C92099) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C15033 * C107 + C92322 * C308 + C15034 * C805 + C92186 * C1022) *
                 C801 +
             (C15033 * C117 + C92322 * C314 + C15034 * C813 + C92186 * C1030) *
                 C92078) *
                C92323 +
            ((C15033 * C1389 + C92322 * C1606 + C15034 * C3431 +
              C92186 * C3661) *
                 C801 +
             (C15033 * C1397 + C92322 * C1614 + C15034 * C3439 +
              C92186 * C3665) *
                 C92078) *
                C92212) *
               C4097 +
           (((C15061 + C15060) * C801 + (C15063 + C15062) * C92078) * C92323 +
            ((C18285 + C18286) * C801 + (C18287 + C18288) * C92078) * C92212) *
               C92067) *
              C92110 * C798 -
          ((((C15034 * C5777 + C92186 * C6047 + C15033 * C3440 +
              C92322 * C3666) *
                 C92078 +
             (C15034 * C5771 + C92186 * C6041 + C15033 * C3432 +
              C92322 * C3662) *
                 C801) *
                C92212 +
            ((C17349 + C17348) * C92078 + (C17347 + C17346) * C801) * C92323) *
               C92067 +
           (((C15034 * C5778 + C92186 * C6048 + C15033 * C3439 +
              C92322 * C3665) *
                 C92078 +
             (C15034 * C5772 + C92186 * C6042 + C15033 * C3431 +
              C92322 * C3661) *
                 C801) *
                C92212 +
            ((C15034 * C822 + C92186 * C1031 + C15033 * C813 + C92322 * C1030) *
                 C92078 +
             (C15034 * C806 + C92186 * C1023 + C15033 * C805 + C92322 * C1022) *
                 C801) *
                C92323) *
               C4097) *
              C92110 * C799 +
          ((((C15033 * C806 + C92322 * C1023 + C15034 * C4882 +
              C92186 * C5218) *
                 C801 +
             (C15033 * C822 + C92322 * C1031 + C15034 * C4886 +
              C92186 * C5222) *
                 C92078) *
                C92323 +
            ((C15033 * C5772 + C92322 * C6042 + C15034 * C8536 +
              C92186 * C8894) *
                 C801 +
             (C15033 * C5778 + C92322 * C6048 + C15034 * C8540 +
              C92186 * C8896) *
                 C92078) *
                C92212) *
               C4097 +
           (((C15033 * C807 + C92322 * C1024 + C15034 * C4881 +
              C92186 * C5217) *
                 C801 +
             (C15033 * C823 + C92322 * C1032 + C15034 * C4885 +
              C92186 * C5221) *
                 C92078) *
                C92323 +
            ((C15033 * C5771 + C92322 * C6041 + C15034 * C8537 +
              C92186 * C8895) *
                 C801 +
             (C15033 * C5777 + C92322 * C6047 + C15034 * C8541 +
              C92186 * C8897) *
                 C92078) *
                C92212) *
               C92067) *
              C92110 * C800)) /
            (p * q * std::sqrt(p + q));
    d2eeyy[9] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C15033 * C107 + C92322 * C308 + C15034 * C805 + C92186 * C1022) *
                 C181 +
             (C15033 * C182 + C92322 * C394 + C15034 * C890 + C92186 * C1085) *
                 C92099) *
                C92323 +
            ((C15033 * C1389 + C92322 * C1606 + C15034 * C3431 +
              C92186 * C3661) *
                 C181 +
             (C15033 * C1471 + C92322 * C1672 + C15034 * C3513 +
              C92186 * C3735) *
                 C92099) *
                C92212) *
               C4097 +
           (((C15061 + C15060) * C181 + (C15161 + C15162) * C92099) * C92323 +
            ((C18285 + C18286) * C181 + (C18399 + C18400) * C92099) * C92212) *
               C92067) *
              C93 -
          ((((C18402 + C18401) * C92099 + (C18290 + C18289) * C181) * C92212 +
            ((C15164 + C15163) * C92099 + (C15065 + C15064) * C181) * C92323) *
               C92067 +
           (((C18400 + C18399) * C92099 + (C18286 + C18285) * C181) * C92212 +
            ((C15162 + C15161) * C92099 + (C15060 + C15061) * C181) * C92323) *
               C4097) *
              C94 +
          ((C15169 * C92323 +
            ((C18289 + C18290) * C181 + (C18401 + C18402) * C92099) * C92212) *
               C4097 +
           (((C15068 + C15069) * C181 + (C15166 + C15165) * C92099) * C92323 +
            ((C15033 * C1386 + C92322 * C1603 + C15034 * C3434 +
              C92186 * C3664) *
                 C181 +
             (C15033 * C1468 + C92322 * C1669 + C15034 * C3516 +
              C92186 * C3738) *
                 C92099) *
                C92212) *
               C92067) *
              C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C15033 * C107 + C92322 * C308 + C15034 * C805 + C92186 * C1022) *
                C884 +
            (C15033 * C182 + C92322 * C394 + C15034 * C890 + C92186 * C1085) *
                C798 -
            (C15034 * C806 + C92186 * C1023 + C15033 * C805 + C92322 * C1022) *
                C885 -
            (C15034 * C891 + C92186 * C1086 + C15033 * C890 + C92322 * C1085) *
                C799 +
            (C15033 * C806 + C92322 * C1023 + C15034 * C4882 + C92186 * C5218) *
                C886 +
            (C15033 * C891 + C92322 * C1086 + C15034 * C5012 + C92186 * C5299) *
                C800) *
               C92323 +
           ((C15033 * C1389 + C92322 * C1606 + C15034 * C3431 +
             C92186 * C3661) *
                C884 +
            (C15033 * C1471 + C92322 * C1672 + C15034 * C3513 +
             C92186 * C3735) *
                C798 -
            (C15034 * C5772 + C92186 * C6042 + C15033 * C3431 +
             C92322 * C3661) *
                C885 -
            (C15034 * C5870 + C92186 * C6128 + C15033 * C3513 +
             C92322 * C3735) *
                C799 +
            (C15033 * C5772 + C92322 * C6042 + C15034 * C8536 +
             C92186 * C8894) *
                C886 +
            (C15033 * C5870 + C92322 * C6128 + C15034 * C8666 +
             C92186 * C8996) *
                C800) *
               C92212) *
              C4097 +
          (((C15061 + C15060) * C884 + (C15161 + C15162) * C798 -
            (C17347 + C17346) * C885 - (C17460 + C17461) * C799 +
            (C15033 * C807 + C92322 * C1024 + C15034 * C4881 + C92186 * C5217) *
                C886 +
            (C15033 * C892 + C92322 * C1088 + C15034 * C5013 + C92186 * C5301) *
                C800) *
               C92323 +
           ((C18285 + C18286) * C884 + (C18399 + C18400) * C798 -
            (C15034 * C5771 + C92186 * C6041 + C15033 * C3432 +
             C92322 * C3662) *
                C885 -
            (C15034 * C5869 + C92186 * C6127 + C15033 * C3514 +
             C92322 * C3736) *
                C799 +
            (C15033 * C5771 + C92322 * C6041 + C15034 * C8537 +
             C92186 * C8895) *
                C886 +
            (C15033 * C5869 + C92322 * C6127 + C15034 * C8667 +
             C92186 * C8997) *
                C800) *
               C92212) *
              C92067) *
         C92078 * C92110) /
            (p * q * std::sqrt(p + q));
    d2eeyz[9] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C15033 * C107 + C92322 * C308 + C15034 * C805 + C92186 * C1022) *
                 C244 +
             (C15033 * C245 + C92322 * C474 + C15034 * C956 + C92186 * C1146) *
                 C92110) *
                C92323 +
            ((C15033 * C1389 + C92322 * C1606 + C15034 * C3431 +
              C92186 * C3661) *
                 C244 +
             (C15033 * C1540 + C92322 * C1727 + C15034 * C3587 +
              C92186 * C3805) *
                 C92110) *
                C92212) *
               C4097 +
           (((C15061 + C15060) * C244 + (C15258 + C15259) * C92110) * C92323 +
            ((C18285 + C18286) * C244 + (C18510 + C18509) * C92110) * C92212) *
               C92067) *
              C92099 * C93 -
          ((((C18511 + C18512) * C92110 + (C18290 + C18289) * C244) * C92212 +
            ((C15261 + C15260) * C92110 + (C15065 + C15064) * C244) * C92323) *
               C92067 +
           (((C18509 + C18510) * C92110 + (C18286 + C18285) * C244) * C92212 +
            ((C15259 + C15258) * C92110 + (C15060 + C15061) * C244) * C92323) *
               C4097) *
              C92099 * C94 +
          ((C15266 * C92323 +
            ((C18289 + C18290) * C244 + (C18512 + C18511) * C92110) * C92212) *
               C4097 +
           (((C15068 + C15069) * C244 + (C15263 + C15262) * C92110) * C92323 +
            ((C15033 * C1386 + C92322 * C1603 + C15034 * C3434 +
              C92186 * C3664) *
                 C244 +
             (C15033 * C1537 + C92322 * C1733 + C15034 * C3590 +
              C92186 * C3808) *
                 C92110) *
                C92212) *
               C92067) *
              C92099 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C15033 * C107 + C92322 * C308 + C15034 * C805 + C92186 * C1022) *
                 C244 +
             (C15033 * C245 + C92322 * C474 + C15034 * C956 + C92186 * C1146) *
                 C92110) *
                C92323 +
            ((C15033 * C1389 + C92322 * C1606 + C15034 * C3431 +
              C92186 * C3661) *
                 C244 +
             (C15033 * C1540 + C92322 * C1727 + C15034 * C3587 +
              C92186 * C3805) *
                 C92110) *
                C92212) *
               C4097 +
           (((C15061 + C15060) * C244 + (C15258 + C15259) * C92110) * C92323 +
            ((C18285 + C18286) * C244 + (C18510 + C18509) * C92110) * C92212) *
               C92067) *
              C798 -
          ((((C15034 * C5957 + C92186 * C6210 + C15033 * C3588 +
              C92322 * C3806) *
                 C92110 +
             (C15034 * C5771 + C92186 * C6041 + C15033 * C3432 +
              C92322 * C3662) *
                 C244) *
                C92212 +
            ((C17572 + C17573) * C92110 + (C17347 + C17346) * C244) * C92323) *
               C92067 +
           (((C15034 * C5958 + C92186 * C6207 + C15033 * C3587 +
              C92322 * C3805) *
                 C92110 +
             (C15034 * C5772 + C92186 * C6042 + C15033 * C3431 +
              C92322 * C3661) *
                 C244) *
                C92212 +
            ((C15034 * C957 + C92186 * C1147 + C15033 * C956 + C92322 * C1146) *
                 C92110 +
             (C15034 * C806 + C92186 * C1023 + C15033 * C805 + C92322 * C1022) *
                 C244) *
                C92323) *
               C4097) *
              C799 +
          ((((C15033 * C806 + C92322 * C1023 + C15034 * C4882 +
              C92186 * C5218) *
                 C244 +
             (C15033 * C957 + C92322 * C1147 + C15034 * C5114 +
              C92186 * C5378) *
                 C92110) *
                C92323 +
            ((C15033 * C5772 + C92322 * C6042 + C15034 * C8536 +
              C92186 * C8894) *
                 C244 +
             (C15033 * C5958 + C92322 * C6207 + C15034 * C8780 +
              C92186 * C9096) *
                 C92110) *
                C92212) *
               C4097 +
           (((C15033 * C807 + C92322 * C1024 + C15034 * C4881 +
              C92186 * C5217) *
                 C244 +
             (C15033 * C958 + C92322 * C1148 + C15034 * C5113 +
              C92186 * C5377) *
                 C92110) *
                C92323 +
            ((C15033 * C5771 + C92322 * C6041 + C15034 * C8537 +
              C92186 * C8895) *
                 C244 +
             (C15033 * C5957 + C92322 * C6210 + C15034 * C8781 +
              C92186 * C9097) *
                 C92110) *
                C92212) *
               C92067) *
              C800) *
         C92078) /
            (p * q * std::sqrt(p + q));
    d2eezx[9] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C20274 * C107 + C92323 * C555 + C20275 * C1389 + C92212 * C1788) *
                C104 +
            (C20274 * C117 + C92323 * C561 + C20275 * C1397 + C92212 * C1796) *
                C93 -
            (C20301 + C20302) * C105 - (C20303 + C20304) * C94 + C20313 * C106 +
            C20314 * C95) *
               C4097 +
           ((C20302 + C20301) * C104 + (C20304 + C20303) * C93 -
            (C20306 + C20305) * C105 - (C20308 + C20307) * C94 +
            (C20309 + C20310) * C106 + (C20311 + C20312) * C95) *
               C92067) *
              C92322 +
          (((C20274 * C805 + C92323 * C1204 + C20275 * C3431 + C92212 * C3875) *
                C104 +
            (C20274 * C813 + C92323 * C1212 + C20275 * C3439 + C92212 * C3879) *
                C93 -
            (C22636 + C22635) * C105 - (C22638 + C22637) * C94 +
            (C22639 + C22640) * C106 + (C22641 + C22642) * C95) *
               C4097 +
           ((C22635 + C22636) * C104 + (C22637 + C22638) * C93 -
            (C22640 + C22639) * C105 - (C22642 + C22641) * C94 +
            (C20274 * C802 + C92323 * C1201 + C20275 * C3434 + C92212 * C3878) *
                C106 +
            (C20274 * C810 + C92323 * C1209 + C20275 * C3442 + C92212 * C3882) *
                C95) *
               C92067) *
              C92186) *
         C92110 * C92099) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C20274 * C107 + C92323 * C555 + C20275 * C1389 + C92212 * C1788) *
                 C801 +
             (C20274 * C117 + C92323 * C561 + C20275 * C1397 + C92212 * C1796) *
                 C92078) *
                C4097 +
            ((C20302 + C20301) * C801 + (C20304 + C20303) * C92078) * C92067) *
               C92322 +
           (((C26314 + C26315) * C801 + (C26316 + C26317) * C92078) * C4097 +
            ((C22635 + C22636) * C801 + (C22637 + C22638) * C92078) * C92067) *
               C92186) *
              C92110 * C798 -
          ((((C26318 + C26319) * C92078 + (C26320 + C26321) * C801) * C92067 +
            ((C26322 + C26323) * C92078 + (C26324 + C26325) * C801) * C4097) *
               C92186 +
           (((C22638 + C22637) * C92078 + (C22636 + C22635) * C801) * C92067 +
            ((C26317 + C26316) * C92078 + (C26315 + C26314) * C801) * C4097) *
               C92322) *
              C92110 * C799 +
          ((((C26325 + C26324) * C801 + (C26323 + C26322) * C92078) * C4097 +
            ((C26321 + C26320) * C801 + (C26319 + C26318) * C92078) * C92067) *
               C92322 +
           (((C20274 * C4882 + C92323 * C5456 + C20275 * C8536 +
              C92212 * C9196) *
                 C801 +
             (C20274 * C4886 + C92323 * C5460 + C20275 * C8540 +
              C92212 * C9198) *
                 C92078) *
                C4097 +
            ((C20274 * C4881 + C92323 * C5455 + C20275 * C8537 +
              C92212 * C9197) *
                 C801 +
             (C20274 * C4885 + C92323 * C5459 + C20275 * C8541 +
              C92212 * C9199) *
                 C92078) *
                C92067) *
               C92186) *
              C92110 * C800)) /
            (p * q * std::sqrt(p + q));
    d2eezy[9] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C20274 * C107 + C92323 * C555 + C20275 * C1389 + C92212 * C1788) *
                 C181 +
             (C20274 * C182 + C92323 * C641 + C20275 * C1471 + C92212 * C1854) *
                 C92099) *
                C4097 +
            ((C20302 + C20301) * C181 + (C20402 + C20403) * C92099) * C92067) *
               C92322 +
           (((C20274 * C805 + C92323 * C1204 + C20275 * C3431 +
              C92212 * C3875) *
                 C181 +
             (C20274 * C890 + C92323 * C1267 + C20275 * C3513 +
              C92212 * C3949) *
                 C92099) *
                C4097 +
            ((C22635 + C22636) * C181 + (C22750 + C22749) * C92099) * C92067) *
               C92186) *
              C93 -
          ((((C22751 + C22752) * C92099 + (C22640 + C22639) * C181) * C92067 +
            ((C22749 + C22750) * C92099 + (C22636 + C22635) * C181) * C4097) *
               C92186 +
           (((C20405 + C20404) * C92099 + (C20306 + C20305) * C181) * C92067 +
            ((C20403 + C20402) * C92099 + (C20301 + C20302) * C181) * C4097) *
               C92322) *
              C94 +
          ((C20410 * C4097 +
            ((C20309 + C20310) * C181 + (C20407 + C20406) * C92099) * C92067) *
               C92322 +
           (((C22639 + C22640) * C181 + (C22752 + C22751) * C92099) * C4097 +
            ((C20274 * C802 + C92323 * C1201 + C20275 * C3434 +
              C92212 * C3878) *
                 C181 +
             (C20274 * C887 + C92323 * C1273 + C20275 * C3516 +
              C92212 * C3952) *
                 C92099) *
                C92067) *
               C92186) *
              C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C20274 * C107 + C92323 * C555 + C20275 * C1389 + C92212 * C1788) *
                C884 +
            (C20274 * C182 + C92323 * C641 + C20275 * C1471 + C92212 * C1854) *
                C798 -
            (C26315 + C26314) * C885 - (C26436 + C26437) * C799 +
            (C26325 + C26324) * C886 + (C26438 + C26439) * C800) *
               C4097 +
           ((C20302 + C20301) * C884 + (C20402 + C20403) * C798 -
            (C22636 + C22635) * C885 - (C22749 + C22750) * C799 +
            (C26321 + C26320) * C886 + (C26440 + C26441) * C800) *
               C92067) *
              C92322 +
          (((C26314 + C26315) * C884 + (C26437 + C26436) * C798 -
            (C26324 + C26325) * C885 - (C26439 + C26438) * C799 +
            (C20274 * C4882 + C92323 * C5456 + C20275 * C8536 +
             C92212 * C9196) *
                C886 +
            (C20274 * C5012 + C92323 * C5578 + C20275 * C8666 +
             C92212 * C9318) *
                C800) *
               C4097 +
           ((C22635 + C22636) * C884 + (C22750 + C22749) * C798 -
            (C26320 + C26321) * C885 - (C26441 + C26440) * C799 +
            (C20274 * C4881 + C92323 * C5455 + C20275 * C8537 +
             C92212 * C9197) *
                C886 +
            (C20274 * C5013 + C92323 * C5579 + C20275 * C8667 +
             C92212 * C9319) *
                C800) *
               C92067) *
              C92186) *
         C92078 * C92110) /
            (p * q * std::sqrt(p + q));
    d2eezz[9] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C20274 * C107 + C92323 * C555 + C20275 * C1389 + C92212 * C1788) *
                 C244 +
             (C20274 * C245 + C92323 * C719 + C20275 * C1540 + C92212 * C1909) *
                 C92110) *
                C4097 +
            ((C20302 + C20301) * C244 + (C20498 + C20499) * C92110) * C92067) *
               C92322 +
           (((C20274 * C805 + C92323 * C1204 + C20275 * C3431 +
              C92212 * C3875) *
                 C244 +
             (C20274 * C956 + C92323 * C1328 + C20275 * C3587 +
              C92212 * C4019) *
                 C92110) *
                C4097 +
            ((C22635 + C22636) * C244 + (C22862 + C22861) * C92110) * C92067) *
               C92186) *
              C92099 * C93 -
          ((((C22859 + C22860) * C92110 + (C22640 + C22639) * C244) * C92067 +
            ((C22861 + C22862) * C92110 + (C22636 + C22635) * C244) * C4097) *
               C92186 +
           (((C20501 + C20500) * C92110 + (C20306 + C20305) * C244) * C92067 +
            ((C20499 + C20498) * C92110 + (C20301 + C20302) * C244) * C4097) *
               C92322) *
              C92099 * C94 +
          ((C20506 * C4097 +
            ((C20309 + C20310) * C244 + (C20503 + C20502) * C92110) * C92067) *
               C92322 +
           (((C22639 + C22640) * C244 + (C22860 + C22859) * C92110) * C4097 +
            ((C20274 * C802 + C92323 * C1201 + C20275 * C3434 +
              C92212 * C3878) *
                 C244 +
             (C20274 * C953 + C92323 * C1325 + C20275 * C3590 +
              C92212 * C4022) *
                 C92110) *
                C92067) *
               C92186) *
              C92099 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C20274 * C107 + C92323 * C555 + C20275 * C1389 + C92212 * C1788) *
                 C244 +
             (C20274 * C245 + C92323 * C719 + C20275 * C1540 + C92212 * C1909) *
                 C92110) *
                C4097 +
            ((C20302 + C20301) * C244 + (C20498 + C20499) * C92110) * C92067) *
               C92322 +
           (((C26314 + C26315) * C244 + (C26552 + C26553) * C92110) * C4097 +
            ((C22635 + C22636) * C244 + (C22862 + C22861) * C92110) * C92067) *
               C92186) *
              C798 -
          ((((C26554 + C26555) * C92110 + (C26320 + C26321) * C244) * C92067 +
            ((C26556 + C26557) * C92110 + (C26324 + C26325) * C244) * C4097) *
               C92186 +
           (((C22861 + C22862) * C92110 + (C22636 + C22635) * C244) * C92067 +
            ((C26553 + C26552) * C92110 + (C26315 + C26314) * C244) * C4097) *
               C92322) *
              C799 +
          ((((C26325 + C26324) * C244 + (C26557 + C26556) * C92110) * C4097 +
            ((C26321 + C26320) * C244 + (C26555 + C26554) * C92110) * C92067) *
               C92322 +
           (((C20274 * C4882 + C92323 * C5456 + C20275 * C8536 +
              C92212 * C9196) *
                 C244 +
             (C20274 * C5114 + C92323 * C5669 + C20275 * C8780 +
              C92212 * C9424) *
                 C92110) *
                C4097 +
            ((C20274 * C4881 + C92323 * C5455 + C20275 * C8537 +
              C92212 * C9197) *
                 C244 +
             (C20274 * C5113 + C92323 * C5668 + C20275 * C8781 +
              C92212 * C9425) *
                 C92110) *
                C92067) *
               C92186) *
              C800) *
         C92078) /
            (p * q * std::sqrt(p + q));
    d2eexx[10] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C92067 * C114) *
                C1987 +
            (C4102 * C117 + C4097 * C125 + C4103 * C118 + C92067 * C126) *
                C1983 -
            (C4103 * C109 + C92067 * C115 + C4102 * C108 + C4097 * C114) *
                C1988 -
            (C4103 * C119 + C92067 * C127 + C4102 * C118 + C4097 * C126) *
                C1984) *
               C4099 +
           ((C4922 + C4923) * C1987 + (C4924 + C4925) * C1983 -
            (C6578 + C6579) * C1988 - (C6580 + C6581) * C1984) *
               C4100 +
           (C4934 * C1987 + C4935 * C1983 - (C6582 + C6583) * C1988 -
            (C6584 + C6585) * C1984) *
               C4101) *
              C92148 * C92110 * C1985 +
          (((C6579 + C6578) * C1988 -
            ((C4925 + C4924) * C1983 + (C4923 + C4922) * C1987) +
            (C6581 + C6580) * C1984) *
               C4099 +
           ((C6583 + C6582) * C1988 -
            ((C4929 + C4928) * C1983 + (C4927 + C4926) * C1987) +
            (C6585 + C6584) * C1984) *
               C4100 +
           ((C4102 * C4881 + C4097 * C4887 + C4103 * C6557 + C92067 * C6558) *
                C1988 -
            ((C4930 + C4931) * C1983 + (C4932 + C4933) * C1987) +
            (C4102 * C4885 + C4097 * C4893 + C4103 * C6559 + C92067 * C6560) *
                C1984) *
               C4101) *
              C92148 * C92110 * C1986)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C100 * C107 + C89 * C113 + C101 * C108 + C90 * C114 + C102 * C109 +
            C91 * C115 + C103 * C110 + C92 * C116) *
               C1987 +
           (C100 * C117 + C89 * C125 + C101 * C118 + C90 * C126 + C102 * C119 +
            C91 * C127 + C103 * C120 + C92 * C128) *
               C1983 -
           (C103 * C111 + C92 * C121 + C102 * C110 + C91 * C116 + C101 * C109 +
            C90 * C115 + C100 * C108 + C89 * C114) *
               C1988 -
           (C103 * C122 + C92 * C129 + C102 * C120 + C91 * C128 + C101 * C119 +
            C90 * C127 + C100 * C118 + C89 * C126) *
               C1984) *
              C92137 * C92148 * C92110 * C1985 +
          ((C100 * C804 + C89 * C816 + C101 * C803 + C90 * C815 + C102 * C802 +
            C91 * C814 + C103 * C1989 + C92 * C1990) *
               C1988 -
           ((C103 * C810 + C92 * C826 + C102 * C811 + C91 * C827 + C101 * C812 +
             C90 * C828 + C100 * C813 + C89 * C829) *
                C1983 +
            (C103 * C802 + C92 * C814 + C102 * C803 + C91 * C815 + C101 * C804 +
             C90 * C816 + C100 * C805 + C89 * C817) *
                C1987) +
           (C100 * C812 + C89 * C828 + C101 * C811 + C90 * C827 + C102 * C810 +
            C91 * C826 + C103 * C1991 + C92 * C1992) *
               C1984) *
              C92137 * C92148 * C92110 * C1986)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C92067 * C114) *
                C1987 +
            (C4102 * C117 + C4097 * C125 + C4103 * C118 + C92067 * C126) *
                C1983 -
            (C4103 * C109 + C92067 * C115 + C4102 * C108 + C4097 * C114) *
                C1988 -
            (C4103 * C119 + C92067 * C127 + C4102 * C118 + C4097 * C126) *
                C1984) *
               C92137 * C9514 +
           ((C11001 + C11002) * C1987 + (C11003 + C11004) * C1983 -
            (C4103 * C1387 + C92067 * C1399 + C4102 * C1388 + C4097 * C1400) *
                C1988 -
            (C4103 * C1395 + C92067 * C1411 + C4102 * C1396 + C4097 * C1412) *
                C1984) *
               C92137 * C9515 +
           (C11013 * C1987 + C11014 * C1983 -
            (C4103 * C1392 + C92067 * C1404 + C4102 * C1391 + C4097 * C1403) *
                C1988 -
            (C4103 * C1408 + C92067 * C1416 + C4102 * C1407 + C4097 * C1415) *
                C1984) *
               C92137 * C9516) *
              C92110 * C1985 +
          (((C6579 + C6578) * C1988 -
            ((C4925 + C4924) * C1983 + (C4923 + C4922) * C1987) +
            (C6581 + C6580) * C1984) *
               C92137 * C9514 +
           ((C4102 * C3432 + C4097 * C3436 + C4103 * C3433 + C92067 * C3437) *
                C1988 -
            ((C8565 + C8566) * C1983 + (C8567 + C8568) * C1987) +
            (C4102 * C3440 + C4097 * C3444 + C4103 * C3441 + C92067 * C3445) *
                C1984) *
               C92137 * C9515 +
           ((C4102 * C5774 + C4097 * C5782 + C4103 * C11870 + C92067 * C11871) *
                C1988 -
            ((C4103 * C5784 + C92067 * C5792 + C4102 * C5783 + C4097 * C5791) *
                 C1983 +
             (C4103 * C5774 + C92067 * C5782 + C4102 * C5773 + C4097 * C5781) *
                 C1987) +
            (C4102 * C5784 + C4097 * C5792 + C4103 * C11872 + C92067 * C11873) *
                C1984) *
               C92137 * C9516) *
              C92110 * C1986)) /
            (p * q * std::sqrt(p + q));
    d2eexy[10] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C92067 * C114) *
                C2059 +
            (C4102 * C182 + C4097 * C188 + C4103 * C183 + C92067 * C189) *
                C1985 -
            (C4923 + C4922) * C2060 - (C5033 + C5034) * C1986) *
               C4099 +
           ((C4922 + C4923) * C2059 + (C5034 + C5033) * C1985 -
            (C4927 + C4926) * C2060 - (C5036 + C5035) * C1986) *
               C4100 +
           (C4934 * C2059 + C5039 * C1985 - (C4932 + C4933) * C2060 -
            (C5038 + C5037) * C1986) *
               C4101) *
              C92148 * C1983 +
          (((C6579 + C6578) * C2060 -
            ((C4103 * C184 + C92067 * C190 + C4102 * C183 + C4097 * C189) *
                 C1985 +
             (C4103 * C109 + C92067 * C115 + C4102 * C108 + C4097 * C114) *
                 C2059) +
            (C6694 + C6695) * C1986) *
               C4099 +
           ((C6583 + C6582) * C2060 -
            ((C6695 + C6694) * C1985 + (C6578 + C6579) * C2059) +
            (C6696 + C6697) * C1986) *
               C4100 +
           ((C4102 * C4881 + C4097 * C4887 + C4103 * C6557 + C92067 * C6558) *
                C2060 -
            ((C6697 + C6696) * C1985 + (C6582 + C6583) * C2059) +
            (C4102 * C5013 + C4097 * C5017 + C4103 * C6683 + C92067 * C6684) *
                C1986) *
               C4101) *
              C92148 * C1984) *
         C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C100 * C107 + C89 * C113 + C101 * C108 + C90 * C114 + C102 * C109 +
            C91 * C115 + C103 * C110 + C92 * C116) *
               C2059 +
           (C100 * C182 + C89 * C188 + C101 * C183 + C90 * C189 + C102 * C184 +
            C91 * C190 + C103 * C185 + C92 * C191) *
               C1985 -
           (C103 * C802 + C92 * C814 + C102 * C803 + C91 * C815 + C101 * C804 +
            C90 * C816 + C100 * C805 + C89 * C817) *
               C2060 -
           (C103 * C887 + C92 * C895 + C102 * C888 + C91 * C896 + C101 * C889 +
            C90 * C897 + C100 * C890 + C89 * C898) *
               C1986) *
              C92137 * C92148 * C1983 +
          ((C100 * C804 + C89 * C816 + C101 * C803 + C90 * C815 + C102 * C802 +
            C91 * C814 + C103 * C1989 + C92 * C1990) *
               C2060 -
           ((C103 * C186 + C92 * C192 + C102 * C185 + C91 * C191 + C101 * C184 +
             C90 * C190 + C100 * C183 + C89 * C189) *
                C1985 +
            (C103 * C111 + C92 * C121 + C102 * C110 + C91 * C116 + C101 * C109 +
             C90 * C115 + C100 * C108 + C89 * C114) *
                C2059) +
           (C100 * C889 + C89 * C897 + C101 * C888 + C90 * C896 + C102 * C887 +
            C91 * C895 + C103 * C2061 + C92 * C2062) *
               C1986) *
              C92137 * C92148 * C1984) *
         C92110) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C92067 * C114) *
                C2059 +
            (C4102 * C182 + C4097 * C188 + C4103 * C183 + C92067 * C189) *
                C1985 -
            (C4923 + C4922) * C2060 - (C5033 + C5034) * C1986) *
               C92137 * C9514 +
           ((C11001 + C11002) * C2059 + (C11114 + C11115) * C1985 -
            (C8567 + C8568) * C2060 - (C8680 + C8679) * C1986) *
               C92137 * C9515 +
           (C11013 * C2059 + C11120 * C1985 -
            (C4103 * C5774 + C92067 * C5782 + C4102 * C5773 + C4097 * C5781) *
                C2060 -
            (C4103 * C5872 + C92067 * C5878 + C4102 * C5871 + C4097 * C5877) *
                C1986) *
               C92137 * C9516) *
              C1983 +
          (((C6579 + C6578) * C2060 -
            ((C4103 * C184 + C92067 * C190 + C4102 * C183 + C4097 * C189) *
                 C1985 +
             (C4103 * C109 + C92067 * C115 + C4102 * C108 + C4097 * C114) *
                 C2059) +
            (C6694 + C6695) * C1986) *
               C92137 * C9514 +
           ((C4102 * C3432 + C4097 * C3436 + C4103 * C3433 + C92067 * C3437) *
                C2060 -
            ((C4103 * C1469 + C92067 * C1477 + C4102 * C1470 + C4097 * C1478) *
                 C1985 +
             (C4103 * C1387 + C92067 * C1399 + C4102 * C1388 + C4097 * C1400) *
                 C2059) +
            (C4102 * C3514 + C4097 * C3518 + C4103 * C3515 + C92067 * C3519) *
                C1986) *
               C92137 * C9515 +
           ((C4102 * C5774 + C4097 * C5782 + C4103 * C11870 + C92067 * C11871) *
                C2060 -
            ((C4103 * C1474 + C92067 * C1482 + C4102 * C1473 + C4097 * C1481) *
                 C1985 +
             (C4103 * C1392 + C92067 * C1404 + C4102 * C1391 + C4097 * C1403) *
                 C2059) +
            (C4102 * C5872 + C4097 * C5878 + C4103 * C11972 + C92067 * C11973) *
                C1986) *
               C92137 * C9516) *
              C1984) *
         C92110) /
            (p * q * std::sqrt(p + q));
    d2eexz[10] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C92067 * C114) *
                 C244 +
             (C4102 * C245 + C4097 * C251 + C4103 * C246 + C92067 * C252) *
                 C92110) *
                C4099 +
            ((C4922 + C4923) * C244 + (C5135 + C5136) * C92110) * C4100 +
            C5143 * C4101) *
               C92148 * C1985 -
           (((C5139 + C5140) * C92110 + (C4932 + C4933) * C244) * C4101 +
            ((C5138 + C5137) * C92110 + (C4927 + C4926) * C244) * C4100 +
            ((C5136 + C5135) * C92110 + (C4923 + C4922) * C244) * C4099) *
               C92148 * C1986) *
              C1983 +
          ((((C6579 + C6578) * C244 + (C6806 + C6807) * C92110) * C4099 +
            ((C6583 + C6582) * C244 + (C6808 + C6809) * C92110) * C4100 +
            ((C4102 * C4881 + C4097 * C4887 + C4103 * C6557 + C92067 * C6558) *
                 C244 +
             (C4102 * C5113 + C4097 * C5117 + C4103 * C6795 + C92067 * C6796) *
                 C92110) *
                C4101) *
               C92148 * C1986 -
           (((C6809 + C6808) * C92110 + (C6582 + C6583) * C244) * C4101 +
            ((C6807 + C6806) * C92110 + (C6578 + C6579) * C244) * C4100 +
            ((C4103 * C247 + C92067 * C253 + C4102 * C246 + C4097 * C252) *
                 C92110 +
             (C4103 * C109 + C92067 * C115 + C4102 * C108 + C4097 * C114) *
                 C244) *
                C4099) *
               C92148 * C1985) *
              C1984)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C100 * C107 + C89 * C113 + C101 * C108 + C90 * C114 + C102 * C109 +
             C91 * C115 + C103 * C110 + C92 * C116) *
                C244 +
            (C100 * C245 + C89 * C251 + C101 * C246 + C90 * C252 + C102 * C247 +
             C91 * C253 + C103 * C248 + C92 * C254) *
                C92110) *
               C92137 * C92148 * C1985 -
           ((C103 * C953 + C92 * C961 + C102 * C954 + C91 * C962 + C101 * C955 +
             C90 * C963 + C100 * C956 + C89 * C964) *
                C92110 +
            (C103 * C802 + C92 * C814 + C102 * C803 + C91 * C815 + C101 * C804 +
             C90 * C816 + C100 * C805 + C89 * C817) *
                C244) *
               C92137 * C92148 * C1986) *
              C1983 +
          (((C100 * C804 + C89 * C816 + C101 * C803 + C90 * C815 + C102 * C802 +
             C91 * C814 + C103 * C1989 + C92 * C1990) *
                C244 +
            (C100 * C955 + C89 * C963 + C101 * C954 + C90 * C962 + C102 * C953 +
             C91 * C961 + C103 * C2129 + C92 * C2130) *
                C92110) *
               C92137 * C92148 * C1986 -
           ((C103 * C249 + C92 * C255 + C102 * C248 + C91 * C254 + C101 * C247 +
             C90 * C253 + C100 * C246 + C89 * C252) *
                C92110 +
            (C103 * C111 + C92 * C121 + C102 * C110 + C91 * C116 + C101 * C109 +
             C90 * C115 + C100 * C108 + C89 * C114) *
                C244) *
               C92137 * C92148 * C1985) *
              C1984)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C92067 * C114) *
                 C244 +
             (C4102 * C245 + C4097 * C251 + C4103 * C246 + C92067 * C252) *
                 C92110) *
                C92137 * C9514 +
            ((C11001 + C11002) * C244 + (C11219 + C11218) * C92110) * C92137 *
                C9515 +
            (C11013 * C244 + C11224 * C92110) * C92137 * C9516) *
               C1985 -
           (((C4103 * C5956 + C92067 * C5962 + C4102 * C5955 + C4097 * C5961) *
                 C92110 +
             (C4103 * C5774 + C92067 * C5782 + C4102 * C5773 + C4097 * C5781) *
                 C244) *
                C92137 * C9516 +
            ((C8793 + C8794) * C92110 + (C8567 + C8568) * C244) * C92137 *
                C9515 +
            ((C5136 + C5135) * C92110 + (C4923 + C4922) * C244) * C92137 *
                C9514) *
               C1986) *
              C1983 +
          ((((C6579 + C6578) * C244 + (C6806 + C6807) * C92110) * C92137 *
                C9514 +
            ((C4102 * C3432 + C4097 * C3436 + C4103 * C3433 + C92067 * C3437) *
                 C244 +
             (C4102 * C3588 + C4097 * C3592 + C4103 * C3589 + C92067 * C3593) *
                 C92110) *
                C92137 * C9515 +
            ((C4102 * C5774 + C4097 * C5782 + C4103 * C11870 +
              C92067 * C11871) *
                 C244 +
             (C4102 * C5956 + C4097 * C5962 + C4103 * C12072 +
              C92067 * C12073) *
                 C92110) *
                C92137 * C9516) *
               C1986 -
           (((C4103 * C1543 + C92067 * C1551 + C4102 * C1542 + C4097 * C1550) *
                 C92110 +
             (C4103 * C1392 + C92067 * C1404 + C4102 * C1391 + C4097 * C1403) *
                 C244) *
                C92137 * C9516 +
            ((C4103 * C1538 + C92067 * C1546 + C4102 * C1539 + C4097 * C1547) *
                 C92110 +
             (C4103 * C1387 + C92067 * C1399 + C4102 * C1388 + C4097 * C1400) *
                 C244) *
                C92137 * C9515 +
            ((C4103 * C247 + C92067 * C253 + C4102 * C246 + C4097 * C252) *
                 C92110 +
             (C4103 * C109 + C92067 * C115 + C4102 * C108 + C4097 * C114) *
                 C244) *
                C92137 * C9514) *
               C1985) *
              C1984)) /
            (p * q * std::sqrt(p + q));
    d2eeyx[10] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4326 * C107 + C4099 * C308 + C4327 * C805 + C4100 * C1022 +
             C4328 * C806 + C4101 * C1023) *
                C1987 +
            (C4326 * C117 + C4099 * C314 + C4327 * C813 + C4100 * C1030 +
             C4328 * C822 + C4101 * C1031) *
                C1983 -
            (C4354 + C4355 + C4356) * C1988 - (C4357 + C4358 + C4359) * C1984) *
               C92148 * C4097 +
           ((C4356 + C4355 + C4354) * C1987 + (C4359 + C4358 + C4357) * C1983 -
            (C4362 + C4361 + C4360) * C1988 - (C4365 + C4364 + C4363) * C1984) *
               C92148 * C92067) *
              C92110 * C1985 +
          (((C6922 + C6923 + C6924) * C1988 -
            ((C4328 * C4886 + C4101 * C5222 + C4327 * C822 + C4100 * C1031 +
              C4326 * C813 + C4099 * C1030) *
                 C1983 +
             (C4328 * C4882 + C4101 * C5218 + C4327 * C806 + C4100 * C1023 +
              C4326 * C805 + C4099 * C1022) *
                 C1987) +
            (C6925 + C6926 + C6927) * C1984) *
               C92148 * C4097 +
           ((C4326 * C803 + C4099 * C1020 + C4327 * C808 + C4100 * C1025 +
             C4328 * C6557 + C4101 * C6907) *
                C1988 -
            ((C6927 + C6926 + C6925) * C1983 +
             (C6924 + C6923 + C6922) * C1987) +
            (C4326 * C811 + C4099 * C1028 + C4327 * C824 + C4100 * C1033 +
             C4328 * C6559 + C4101 * C6908) *
                C1984) *
               C92148 * C92067) *
              C92110 * C1986)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C307 * C107 + C92137 * C308) * C1987 +
            (C307 * C117 + C92137 * C314) * C1983 - C337 * C1988 -
            C338 * C1984) *
               C92148 * C89 +
           (C337 * C1987 + C338 * C1983 - C339 * C1988 - C340 * C1984) *
               C92148 * C90 +
           (C339 * C1987 + C340 * C1983 - C341 * C1988 - C342 * C1984) *
               C92148 * C91 +
           (C341 * C1987 + C342 * C1983 - C343 * C1988 - C344 * C1984) *
               C92148 * C92) *
              C92110 * C1985 +
          ((C2212 * C1988 -
            ((C307 * C813 + C92137 * C1030) * C1983 +
             (C307 * C805 + C92137 * C1022) * C1987) +
            C2213 * C1984) *
               C92148 * C89 +
           (C2214 * C1988 - (C2213 * C1983 + C2212 * C1987) + C2215 * C1984) *
               C92148 * C90 +
           (C2216 * C1988 - (C2215 * C1983 + C2214 * C1987) + C2217 * C1984) *
               C92148 * C91 +
           ((C307 * C1989 + C92137 * C2197) * C1988 -
            (C2217 * C1983 + C2216 * C1987) +
            (C307 * C1991 + C92137 * C2198) * C1984) *
               C92148 * C92) *
              C92110 * C1986)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92137 * C308) * C1987 +
             (C307 * C117 + C92137 * C314) * C1983 - C337 * C1988 -
             C338 * C1984) *
                C9514 +
            (C11327 * C1987 + C11328 * C1983 - C2934 * C1988 - C2935 * C1984) *
                C9515 +
            (C11329 * C1987 + C11330 * C1983 - C9748 * C1988 - C9749 * C1984) *
                C9516) *
               C4097 +
           ((C337 * C1987 + C338 * C1983 - C339 * C1988 - C340 * C1984) *
                C9514 +
            (C2934 * C1987 + C2935 * C1983 - C2936 * C1988 - C2937 * C1984) *
                C9515 +
            (C9748 * C1987 + C9749 * C1983 - C9750 * C1988 - C9751 * C1984) *
                C9516) *
               C92067) *
              C92110 * C1985 +
          (((C2212 * C1988 -
             ((C307 * C813 + C92137 * C1030) * C1983 +
              (C307 * C805 + C92137 * C1022) * C1987) +
             C2213 * C1984) *
                C9514 +
            (C12183 * C1988 -
             ((C307 * C3439 + C92137 * C3665) * C1983 +
              (C307 * C3431 + C92137 * C3661) * C1987) +
             C12184 * C1984) *
                C9515 +
            (C12185 * C1988 -
             ((C307 * C5783 + C92137 * C6049) * C1983 +
              (C307 * C5773 + C92137 * C6043) * C1987) +
             C12186 * C1984) *
                C9516) *
               C4097 +
           ((C2214 * C1988 - (C2213 * C1983 + C2212 * C1987) + C2215 * C1984) *
                C9514 +
            ((C307 * C3433 + C92137 * C3663) * C1988 -
             (C12184 * C1983 + C12183 * C1987) +
             (C307 * C3441 + C92137 * C3667) * C1984) *
                C9515 +
            ((C307 * C11870 + C92137 * C12172) * C1988 -
             (C12186 * C1983 + C12185 * C1987) +
             (C307 * C11872 + C92137 * C12173) * C1984) *
                C9516) *
               C92067) *
              C92110 * C1986)) /
            (p * q * std::sqrt(p + q));
    d2eeyy[10] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4326 * C107 + C4099 * C308 + C4327 * C805 + C4100 * C1022 +
             C4328 * C806 + C4101 * C1023) *
                C2059 +
            (C4326 * C182 + C4099 * C394 + C4327 * C890 + C4100 * C1085 +
             C4328 * C891 + C4101 * C1086) *
                C1985 -
            (C4328 * C4882 + C4101 * C5218 + C4327 * C806 + C4100 * C1023 +
             C4326 * C805 + C4099 * C1022) *
                C2060 -
            (C4328 * C5012 + C4101 * C5299 + C4327 * C891 + C4100 * C1086 +
             C4326 * C890 + C4099 * C1085) *
                C1986) *
               C92148 * C4097 +
           ((C4356 + C4355 + C4354) * C2059 + (C4452 + C4453 + C4454) * C1985 -
            (C6924 + C6923 + C6922) * C2060 - (C7033 + C7034 + C7035) * C1986) *
               C92148 * C92067) *
              C1983 +
          (((C6922 + C6923 + C6924) * C2060 -
            ((C4454 + C4453 + C4452) * C1985 +
             (C4354 + C4355 + C4356) * C2059) +
            (C7035 + C7034 + C7033) * C1986) *
               C92148 * C4097 +
           ((C4326 * C803 + C4099 * C1020 + C4327 * C808 + C4100 * C1025 +
             C4328 * C6557 + C4101 * C6907) *
                C2060 -
            ((C4455 + C4456 + C4457) * C1985 +
             (C4362 + C4361 + C4360) * C2059) +
            (C4326 * C888 + C4099 * C1089 + C4327 * C893 + C4100 * C1090 +
             C4328 * C6683 + C4101 * C7025) *
                C1986) *
               C92148 * C92067) *
              C1984) *
         C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C307 * C107 + C92137 * C308) * C2059 +
            (C307 * C182 + C92137 * C394) * C1985 -
            (C307 * C805 + C92137 * C1022) * C2060 -
            (C307 * C890 + C92137 * C1085) * C1986) *
               C92148 * C89 +
           (C2285 + C2286 - C2287 - C2303) * C92148 * C90 +
           (C2290 + C2291 - C2292 - C2304) * C92148 * C91 +
           (C2295 + C2296 - C2297 - C2305) * C92148 * C92) *
              C1983 +
          ((C2287 - (C2286 + C2285) + C2303) * C92148 * C89 +
           (C2292 - (C2291 + C2290) + C2304) * C92148 * C90 +
           (C2297 - (C2296 + C2295) + C2305) * C92148 * C91 +
           ((C307 * C1989 + C92137 * C2197) * C2060 -
            (C416 * C1985 + C343 * C2059) +
            (C307 * C2061 + C92137 * C2283) * C1986) *
               C92148 * C92) *
              C1984) *
         C92110) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92137 * C308) * C2059 +
             (C307 * C182 + C92137 * C394) * C1985 -
             (C307 * C805 + C92137 * C1022) * C2060 -
             (C307 * C890 + C92137 * C1085) * C1986) *
                C9514 +
            (C11327 * C2059 + C11436 * C1985 -
             (C307 * C3431 + C92137 * C3661) * C2060 -
             (C307 * C3513 + C92137 * C3735) * C1986) *
                C9515 +
            (C11329 * C2059 + C11437 * C1985 -
             (C307 * C5773 + C92137 * C6043) * C2060 -
             (C307 * C5871 + C92137 * C6129) * C1986) *
                C9516) *
               C4097 +
           ((C2285 + C2286 - C2287 - C2303) * C9514 +
            (C12286 + C12287 - C12288 - C12298) * C9515 +
            (C12291 + C12292 - C12293 - C12299) * C9516) *
               C92067) *
              C1983 +
          (((C2287 - (C2286 + C2285) + C2303) * C9514 +
            (C12288 - (C12287 + C12286) + C12298) * C9515 +
            (C12293 - (C12292 + C12291) + C12299) * C9516) *
               C4097 +
           ((C2292 - (C2291 + C2290) + C2304) * C9514 +
            ((C307 * C3433 + C92137 * C3663) * C2060 -
             (C3017 * C1985 + C2936 * C2059) +
             (C307 * C3515 + C92137 * C3737) * C1986) *
                C9515 +
            ((C307 * C11870 + C92137 * C12172) * C2060 -
             (C9833 * C1985 + C9750 * C2059) +
             (C307 * C11972 + C92137 * C12284) * C1986) *
                C9516) *
               C92067) *
              C1984) *
         C92110) /
            (p * q * std::sqrt(p + q));
    d2eeyz[10] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4326 * C107 + C4099 * C308 + C4327 * C805 + C4100 * C1022 +
              C4328 * C806 + C4101 * C1023) *
                 C244 +
             (C4326 * C245 + C4099 * C474 + C4327 * C956 + C4100 * C1146 +
              C4328 * C957 + C4101 * C1147) *
                 C92110) *
                C92148 * C4097 +
            ((C4356 + C4355 + C4354) * C244 +
             (C4544 + C4545 + C4546) * C92110) *
                C92148 * C92067) *
               C1985 -
           (((C7141 + C7142 + C7143) * C92110 +
             (C6924 + C6923 + C6922) * C244) *
                C92148 * C92067 +
            ((C4328 * C5114 + C4101 * C5378 + C4327 * C957 + C4100 * C1147 +
              C4326 * C956 + C4099 * C1146) *
                 C92110 +
             (C4328 * C4882 + C4101 * C5218 + C4327 * C806 + C4100 * C1023 +
              C4326 * C805 + C4099 * C1022) *
                 C244) *
                C92148 * C4097) *
               C1986) *
              C1983 +
          ((((C6922 + C6923 + C6924) * C244 +
             (C7143 + C7142 + C7141) * C92110) *
                C92148 * C4097 +
            ((C4326 * C803 + C4099 * C1020 + C4327 * C808 + C4100 * C1025 +
              C4328 * C6557 + C4101 * C6907) *
                 C244 +
             (C4326 * C954 + C4099 * C1144 + C4327 * C959 + C4100 * C1149 +
              C4328 * C6795 + C4101 * C7133) *
                 C92110) *
                C92148 * C92067) *
               C1986 -
           (((C4547 + C4548 + C4549) * C92110 +
             (C4362 + C4361 + C4360) * C244) *
                C92148 * C92067 +
            ((C4546 + C4545 + C4544) * C92110 +
             (C4354 + C4355 + C4356) * C244) *
                C92148 * C4097) *
               C1985) *
              C1984)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92137 * C308) * C244 +
             (C307 * C245 + C92137 * C474) * C92110) *
                C92148 * C89 +
            (C481 + C497) * C92148 * C90 + C503 * C91 + C504 * C92) *
               C1985 -
           ((C2385 + C2375) * C92148 * C92 + (C2386 + C2378) * C92148 * C91 +
            (C2387 + C2381) * C92148 * C90 +
            ((C307 * C956 + C92137 * C1146) * C92110 +
             (C307 * C805 + C92137 * C1022) * C244) *
                C92148 * C89) *
               C1986) *
              C1983 +
          (((C2381 + C2387) * C92148 * C89 + (C2378 + C2386) * C92148 * C90 +
            (C2375 + C2385) * C92148 * C91 +
            ((C307 * C1989 + C92137 * C2197) * C244 +
             (C307 * C2129 + C92137 * C2371) * C92110) *
                C92148 * C92) *
               C1986 -
           ((C500 + C492) * C92148 * C92 + (C499 + C487) * C92148 * C91 +
            (C498 + C484) * C92148 * C90 + (C497 + C481) * C92148 * C89) *
               C1985) *
              C1984)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C307 * C107 + C92137 * C308) * C244 +
              (C307 * C245 + C92137 * C474) * C92110) *
                 C9514 +
             (C11327 * C244 + C11531 * C92110) * C9515 +
             (C11329 * C244 + C11532 * C92110) * C9516) *
                C4097 +
            ((C481 + C497) * C9514 + (C9910 + C9911) * C9515 +
             (C9912 + C9922) * C9516) *
                C92067) *
               C1985 -
           (((C12407 + C12401) * C9516 + (C12408 + C12404) * C9515 +
             (C2387 + C2381) * C9514) *
                C92067 +
            (((C307 * C5955 + C92137 * C6208) * C92110 +
              (C307 * C5773 + C92137 * C6043) * C244) *
                 C9516 +
             ((C307 * C3587 + C92137 * C3805) * C92110 +
              (C307 * C3431 + C92137 * C3661) * C244) *
                 C9515 +
             ((C307 * C956 + C92137 * C1146) * C92110 +
              (C307 * C805 + C92137 * C1022) * C244) *
                 C9514) *
                C4097) *
               C1986) *
              C1983 +
          ((((C2381 + C2387) * C9514 + (C12404 + C12408) * C9515 +
             (C12401 + C12407) * C9516) *
                C4097 +
            ((C2378 + C2386) * C9514 +
             ((C307 * C3433 + C92137 * C3663) * C244 +
              (C307 * C3589 + C92137 * C3807) * C92110) *
                 C9515 +
             ((C307 * C11870 + C92137 * C12172) * C244 +
              (C307 * C12072 + C92137 * C12397) * C92110) *
                 C9516) *
                C92067) *
               C1986 -
           (((C9923 + C9917) * C9516 + (C9918 + C9919) * C9515 +
             (C498 + C484) * C9514) *
                C92067 +
            ((C9922 + C9912) * C9516 + (C9911 + C9910) * C9515 +
             (C497 + C481) * C9514) *
                C4097) *
               C1985) *
              C1984)) /
            (p * q * std::sqrt(p + q));
    d2eezx[10] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92148 * C555) * C1987 +
             (C554 * C117 + C92148 * C561) * C1983 - C584 * C1988 -
             C585 * C1984) *
                C4097 +
            (C584 * C1987 + C585 * C1983 - C586 * C1988 - C587 * C1984) *
                C92067) *
               C4099 +
           ((C7244 + C7245 - C7246 - C7247) * C4097 +
            (C7248 + C7249 - C7250 - C7251) * C92067) *
               C4100 +
           ((C7252 + C7253 - C7254 - C7255) * C4097 +
            (C7256 + C7257 - C7258 - C7259) * C92067) *
               C4101) *
              C92110 * C1985 +
          (((C7246 - (C7245 + C7244) + C7247) * C4097 +
            (C7250 - (C7249 + C7248) + C7251) * C92067) *
               C4099 +
           ((C7254 - (C7253 + C7252) + C7255) * C4097 +
            (C7258 - (C7257 + C7256) + C7259) * C92067) *
               C4100 +
           ((C5490 * C1988 - (C5491 * C1983 + C5492 * C1987) + C5489 * C1984) *
                C4097 +
            ((C554 * C6557 + C92148 * C7241) * C1988 -
             (C5489 * C1983 + C5490 * C1987) +
             (C554 * C6559 + C92148 * C7242) * C1984) *
                C92067) *
               C4101) *
              C92110 * C1986)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92148 * C555) * C1987 +
            (C554 * C117 + C92148 * C561) * C1983 - C584 * C1988 -
            C585 * C1984) *
               C89 +
           (C584 * C1987 + C585 * C1983 - C586 * C1988 - C587 * C1984) * C90 +
           (C586 * C1987 + C587 * C1983 - C588 * C1988 - C589 * C1984) * C91 +
           (C588 * C1987 + C589 * C1983 - C590 * C1988 - C591 * C1984) * C92) *
              C92137 * C92110 * C1985 +
          ((C2468 * C1988 -
            ((C554 * C813 + C92148 * C1212) * C1983 +
             (C554 * C805 + C92148 * C1204) * C1987) +
            C2469 * C1984) *
               C89 +
           (C2470 * C1988 - (C2469 * C1983 + C2468 * C1987) + C2471 * C1984) *
               C90 +
           (C2472 * C1988 - (C2471 * C1983 + C2470 * C1987) + C2473 * C1984) *
               C91 +
           ((C554 * C1989 + C92148 * C2453) * C1988 -
            (C2473 * C1983 + C2472 * C1987) +
            (C554 * C1991 + C92148 * C2454) * C1984) *
               C92) *
              C92137 * C92110 * C1986)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C9997 * C107 + C9514 * C555 + C9998 * C1389 + C9515 * C1788 +
             C9999 * C1390 + C9516 * C1789) *
                C1987 +
            (C9997 * C117 + C9514 * C561 + C9998 * C1397 + C9515 * C1796 +
             C9999 * C1406 + C9516 * C1797) *
                C1983 -
            (C10025 + C10026 + C10027) * C1988 -
            (C10028 + C10029 + C10030) * C1984) *
               C4097 +
           ((C10027 + C10026 + C10025) * C1987 +
            (C10030 + C10029 + C10028) * C1983 -
            (C10033 + C10032 + C10031) * C1988 -
            (C10036 + C10035 + C10034) * C1984) *
               C92067) *
              C92137 * C92110 * C1985 +
          (((C12521 + C12522 + C12523) * C1988 -
            ((C9999 * C5783 + C9516 * C6295 + C9998 * C3439 + C9515 * C3879 +
              C9997 * C813 + C9514 * C1212) *
                 C1983 +
             (C9999 * C5773 + C9516 * C6289 + C9998 * C3431 + C9515 * C3875 +
              C9997 * C805 + C9514 * C1204) *
                 C1987) +
            (C12524 + C12525 + C12526) * C1984) *
               C4097 +
           ((C9997 * C803 + C9514 * C1202 + C9998 * C3433 + C9515 * C3877 +
             C9999 * C11870 + C9516 * C12506) *
                C1988 -
            ((C12526 + C12525 + C12524) * C1983 +
             (C12523 + C12522 + C12521) * C1987) +
            (C9997 * C811 + C9514 * C1210 + C9998 * C3441 + C9515 * C3881 +
             C9999 * C11872 + C9516 * C12507) *
                C1984) *
               C92067) *
              C92137 * C92110 * C1986)) /
            (p * q * std::sqrt(p + q));
    d2eezy[10] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92148 * C555) * C2059 +
             (C554 * C182 + C92148 * C641) * C1985 - C5484 * C2060 -
             C5591 * C1986) *
                C4097 +
            (C2541 + C2542 - C2543 - C2559) * C92067) *
               C4099 +
           ((C5484 * C2059 + C5591 * C1985 - C5486 * C2060 - C5592 * C1986) *
                C4097 +
            (C7359 + C7360 - C7361 - C7362) * C92067) *
               C4100 +
           ((C5486 * C2059 + C5592 * C1985 - C5492 * C2060 - C5593 * C1986) *
                C4097 +
            (C7363 + C7364 - C7365 - C7366) * C92067) *
               C4101) *
              C1983 +
          (((C2543 - (C2542 + C2541) + C2559) * C4097 +
            (C2548 - (C2547 + C2546) + C2560) * C92067) *
               C4099 +
           ((C7361 - (C7360 + C7359) + C7362) * C4097 +
            (C4634 * C2060 - (C2557 * C1985 + C2470 * C2059) + C4721 * C1986) *
                C92067) *
               C4100 +
           ((C7365 - (C7364 + C7363) + C7366) * C4097 +
            ((C554 * C6557 + C92148 * C7241) * C2060 -
             (C4721 * C1985 + C4634 * C2059) +
             (C554 * C6683 + C92148 * C7357) * C1986) *
                C92067) *
               C4101) *
              C1984) *
         C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92148 * C555) * C2059 +
            (C554 * C182 + C92148 * C641) * C1985 -
            (C554 * C805 + C92148 * C1204) * C2060 -
            (C554 * C890 + C92148 * C1267) * C1986) *
               C89 +
           (C2541 + C2542 - C2543 - C2559) * C90 +
           (C2546 + C2547 - C2548 - C2560) * C91 +
           (C2551 + C2552 - C2553 - C2561) * C92) *
              C92137 * C1983 +
          ((C2543 - (C2542 + C2541) + C2559) * C89 +
           (C2548 - (C2547 + C2546) + C2560) * C90 +
           (C2553 - (C2552 + C2551) + C2561) * C91 +
           ((C554 * C1989 + C92148 * C2453) * C2060 -
            (C663 * C1985 + C590 * C2059) +
            (C554 * C2061 + C92148 * C2539) * C1986) *
               C92) *
              C92137 * C1984) *
         C92110) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C9997 * C107 + C9514 * C555 + C9998 * C1389 + C9515 * C1788 +
             C9999 * C1390 + C9516 * C1789) *
                C2059 +
            (C9997 * C182 + C9514 * C641 + C9998 * C1471 + C9515 * C1854 +
             C9999 * C1472 + C9516 * C1855) *
                C1985 -
            (C9999 * C5773 + C9516 * C6289 + C9998 * C3431 + C9515 * C3875 +
             C9997 * C805 + C9514 * C1204) *
                C2060 -
            (C9999 * C5871 + C9516 * C6375 + C9998 * C3513 + C9515 * C3949 +
             C9997 * C890 + C9514 * C1267) *
                C1986) *
               C4097 +
           ((C10027 + C10026 + C10025) * C2059 +
            (C10123 + C10124 + C10125) * C1985 -
            (C12523 + C12522 + C12521) * C2060 -
            (C12632 + C12633 + C12634) * C1986) *
               C92067) *
              C92137 * C1983 +
          (((C12521 + C12522 + C12523) * C2060 -
            ((C10125 + C10124 + C10123) * C1985 +
             (C10025 + C10026 + C10027) * C2059) +
            (C12634 + C12633 + C12632) * C1986) *
               C4097 +
           ((C9997 * C803 + C9514 * C1202 + C9998 * C3433 + C9515 * C3877 +
             C9999 * C11870 + C9516 * C12506) *
                C2060 -
            ((C10126 + C10127 + C10128) * C1985 +
             (C10033 + C10032 + C10031) * C2059) +
            (C9997 * C888 + C9514 * C1271 + C9998 * C3515 + C9515 * C3951 +
             C9999 * C11972 + C9516 * C12624) *
                C1986) *
               C92067) *
              C92137 * C1984) *
         C92110) /
            (p * q * std::sqrt(p + q));
    d2eezz[10] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C554 * C107 + C92148 * C555) * C244 +
              (C554 * C245 + C92148 * C719) * C92110) *
                 C4097 +
             (C726 + C742) * C92067) *
                C4099 +
            ((C5673 + C5691) * C4097 + C7466 * C92067) * C4100 +
            C5697 * C4101) *
               C1985 -
           (((C5693 + C5682) * C92067 + (C5694 + C5685) * C4097) * C4101 +
            (C7467 * C92067 + (C5692 + C5676) * C4097) * C4100 +
            (C7468 * C92067 + (C5691 + C5673) * C4097) * C4099) *
               C1986) *
              C1983 +
          (((C7466 * C4097 + (C2634 + C2642) * C92067) * C4099 +
            (C5679 * C4097 + (C4803 + C4807) * C92067) * C4100 +
            ((C5682 + C5693) * C4097 +
             ((C554 * C6557 + C92148 * C7241) * C244 +
              (C554 * C6795 + C92148 * C7464) * C92110) *
                 C92067) *
                C4101) *
               C1986 -
           (((C4807 + C4803) * C92067 + C7467 * C4097) * C4101 +
            ((C2642 + C2634) * C92067 + C7468 * C4097) * C4100 +
            ((C743 + C729) * C92067 + (C742 + C726) * C4097) * C4099) *
               C1985) *
              C1984)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92148 * C555) * C244 +
             (C554 * C245 + C92148 * C719) * C92110) *
                C89 +
            (C726 + C742) * C90 + C746 * C91 + C747 * C92) *
               C92137 * C1985 -
           ((C2641 + C2631) * C92 + (C2642 + C2634) * C91 +
            (C2643 + C2637) * C90 +
            ((C554 * C956 + C92148 * C1328) * C92110 +
             (C554 * C805 + C92148 * C1204) * C244) *
                C89) *
               C92137 * C1986) *
              C1983 +
          (((C2637 + C2643) * C89 + (C2634 + C2642) * C90 +
            (C2631 + C2641) * C91 +
            ((C554 * C1989 + C92148 * C2453) * C244 +
             (C554 * C2129 + C92148 * C2627) * C92110) *
                C92) *
               C92137 * C1986 -
           ((C745 + C737) * C92 + (C744 + C732) * C91 + (C743 + C729) * C90 +
            (C742 + C726) * C89) *
               C92137 * C1985) *
              C1984)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C9997 * C107 + C9514 * C555 + C9998 * C1389 + C9515 * C1788 +
              C9999 * C1390 + C9516 * C1789) *
                 C244 +
             (C9997 * C245 + C9514 * C719 + C9998 * C1540 + C9515 * C1909 +
              C9999 * C1541 + C9516 * C1910) *
                 C92110) *
                C4097 +
            ((C10027 + C10026 + C10025) * C244 +
             (C10215 + C10216 + C10217) * C92110) *
                C92067) *
               C92137 * C1985 -
           (((C12740 + C12741 + C12742) * C92110 +
             (C12523 + C12522 + C12521) * C244) *
                C92067 +
            ((C9999 * C5955 + C9516 * C6453 + C9998 * C3587 + C9515 * C4019 +
              C9997 * C956 + C9514 * C1328) *
                 C92110 +
             (C9999 * C5773 + C9516 * C6289 + C9998 * C3431 + C9515 * C3875 +
              C9997 * C805 + C9514 * C1204) *
                 C244) *
                C4097) *
               C92137 * C1986) *
              C1983 +
          ((((C12521 + C12522 + C12523) * C244 +
             (C12742 + C12741 + C12740) * C92110) *
                C4097 +
            ((C9997 * C803 + C9514 * C1202 + C9998 * C3433 + C9515 * C3877 +
              C9999 * C11870 + C9516 * C12506) *
                 C244 +
             (C9997 * C954 + C9514 * C1326 + C9998 * C3589 + C9515 * C4021 +
              C9999 * C12072 + C9516 * C12732) *
                 C92110) *
                C92067) *
               C92137 * C1986 -
           (((C10218 + C10219 + C10220) * C92110 +
             (C10033 + C10032 + C10031) * C244) *
                C92067 +
            ((C10217 + C10216 + C10215) * C92110 +
             (C10025 + C10026 + C10027) * C244) *
                C4097) *
               C92137 * C1985) *
              C1984)) /
            (p * q * std::sqrt(p + q));
    d2eexx[11] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C92067 * C114) *
                 C801 +
             (C4102 * C117 + C4097 * C125 + C4103 * C118 + C92067 * C126) *
                 C92078) *
                C4099 +
            ((C4922 + C4923) * C801 + (C4924 + C4925) * C92078) * C4100 +
            C4938 * C4101) *
               C92148 * C2709 -
           (((C8561 + C8562) * C92078 + (C8563 + C8564) * C801) * C4101 +
            ((C8565 + C8566) * C92078 + (C8567 + C8568) * C801) * C4100 +
            ((C4103 * C1396 + C92067 * C1412 + C4102 * C1397 + C4097 * C1413) *
                 C92078 +
             (C4103 * C1388 + C92067 * C1400 + C4102 * C1389 + C4097 * C1401) *
                 C801) *
                C4099) *
               C92148 * C2710) *
              C1985 +
          ((((C8568 + C8567) * C801 + (C8566 + C8565) * C92078) * C4099 +
            ((C8564 + C8563) * C801 + (C8562 + C8561) * C92078) * C4100 +
            ((C4102 * C8536 + C4097 * C8538 + C4103 * C8537 + C92067 * C8539) *
                 C801 +
             (C4102 * C8540 + C4097 * C8542 + C4103 * C8541 + C92067 * C8543) *
                 C92078) *
                C4101) *
               C92148 * C2710 -
           (((C4930 + C4931) * C92078 + (C4932 + C4933) * C801) * C4101 +
            ((C4929 + C4928) * C92078 + (C4927 + C4926) * C801) * C4100 +
            ((C4925 + C4924) * C92078 + (C4923 + C4922) * C801) * C4099) *
               C92148 * C2709) *
              C1986)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C100 * C107 + C89 * C113 + C101 * C108 + C90 * C114 + C102 * C109 +
             C91 * C115 + C103 * C110 + C92 * C116) *
                C801 +
            (C100 * C117 + C89 * C125 + C101 * C118 + C90 * C126 + C102 * C119 +
             C91 * C127 + C103 * C120 + C92 * C128) *
                C92078) *
               C92137 * C92148 * C2709 -
           ((C103 * C1394 + C92 * C1410 + C102 * C1395 + C91 * C1411 +
             C101 * C1396 + C90 * C1412 + C100 * C1397 + C89 * C1413) *
                C92078 +
            (C103 * C1386 + C92 * C1398 + C102 * C1387 + C91 * C1399 +
             C101 * C1388 + C90 * C1400 + C100 * C1389 + C89 * C1401) *
                C801) *
               C92137 * C92148 * C2710) *
              C1985 +
          (((C100 * C3431 + C89 * C3435 + C101 * C3432 + C90 * C3436 +
             C102 * C3433 + C91 * C3437 + C103 * C3434 + C92 * C3438) *
                C801 +
            (C100 * C3439 + C89 * C3443 + C101 * C3440 + C90 * C3444 +
             C102 * C3441 + C91 * C3445 + C103 * C3442 + C92 * C3446) *
                C92078) *
               C92137 * C92148 * C2710 -
           ((C103 * C810 + C92 * C826 + C102 * C811 + C91 * C827 + C101 * C812 +
             C90 * C828 + C100 * C813 + C89 * C829) *
                C92078 +
            (C103 * C802 + C92 * C814 + C102 * C803 + C91 * C815 + C101 * C804 +
             C90 * C816 + C100 * C805 + C89 * C817) *
                C801) *
               C92137 * C92148 * C2709) *
              C1986)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C92067 * C114) *
                 C801 +
             (C4102 * C117 + C4097 * C125 + C4103 * C118 + C92067 * C126) *
                 C92078) *
                C92137 * C9514 +
            ((C11001 + C11002) * C801 + (C11003 + C11004) * C92078) * C92137 *
                C9515 +
            C11018 * C9516) *
               C2709 -
           (((C11009 + C11010) * C92078 + (C11011 + C11012) * C801) * C92137 *
                C9516 +
            ((C11008 + C11007) * C92078 + (C11006 + C11005) * C801) * C92137 *
                C9515 +
            ((C11004 + C11003) * C92078 + (C11002 + C11001) * C801) * C92137 *
                C9514) *
               C2710) *
              C1985 +
          ((((C8568 + C8567) * C801 + (C8566 + C8565) * C92078) * C92137 *
                C9514 +
            ((C13866 + C13867) * C801 + (C13868 + C13869) * C92078) * C92137 *
                C9515 +
            ((C4102 * C13849 + C4097 * C13851 + C4103 * C13850 +
              C92067 * C13852) *
                 C801 +
             (C4102 * C13853 + C4097 * C13855 + C4103 * C13854 +
              C92067 * C13856) *
                 C92078) *
                C92137 * C9516) *
               C2710 -
           (((C13869 + C13868) * C92078 + (C13867 + C13866) * C801) * C92137 *
                C9516 +
            ((C8565 + C8566) * C92078 + (C8567 + C8568) * C801) * C92137 *
                C9515 +
            ((C4925 + C4924) * C92078 + (C4923 + C4922) * C801) * C92137 *
                C9514) *
               C2709) *
              C1986)) /
            (p * q * std::sqrt(p + q));
    d2eexy[11] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C92067 * C114) *
                C2059 +
            (C4102 * C182 + C4097 * C188 + C4103 * C183 + C92067 * C189) *
                C1985 -
            (C4923 + C4922) * C2060 - (C5033 + C5034) * C1986) *
               C4099 +
           ((C4922 + C4923) * C2059 + (C5034 + C5033) * C1985 -
            (C4927 + C4926) * C2060 - (C5036 + C5035) * C1986) *
               C4100 +
           (C4934 * C2059 + C5039 * C1985 - (C4932 + C4933) * C2060 -
            (C5038 + C5037) * C1986) *
               C4101) *
              C92148 * C92078 * C2709 +
          (((C8568 + C8567) * C2060 -
            ((C4103 * C1470 + C92067 * C1478 + C4102 * C1471 + C4097 * C1479) *
                 C1985 +
             (C4103 * C1388 + C92067 * C1400 + C4102 * C1389 + C4097 * C1401) *
                 C2059) +
            (C8679 + C8680) * C1986) *
               C4099 +
           ((C8564 + C8563) * C2060 -
            ((C8680 + C8679) * C1985 + (C8567 + C8568) * C2059) +
            (C8681 + C8682) * C1986) *
               C4100 +
           ((C4102 * C8536 + C4097 * C8538 + C4103 * C8537 + C92067 * C8539) *
                C2060 -
            ((C8682 + C8681) * C1985 + (C8563 + C8564) * C2059) +
            (C4102 * C8666 + C4097 * C8668 + C4103 * C8667 + C92067 * C8669) *
                C1986) *
               C4101) *
              C92148 * C92078 * C2710)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C100 * C107 + C89 * C113 + C101 * C108 + C90 * C114 + C102 * C109 +
            C91 * C115 + C103 * C110 + C92 * C116) *
               C2059 +
           (C100 * C182 + C89 * C188 + C101 * C183 + C90 * C189 + C102 * C184 +
            C91 * C190 + C103 * C185 + C92 * C191) *
               C1985 -
           (C103 * C802 + C92 * C814 + C102 * C803 + C91 * C815 + C101 * C804 +
            C90 * C816 + C100 * C805 + C89 * C817) *
               C2060 -
           (C103 * C887 + C92 * C895 + C102 * C888 + C91 * C896 + C101 * C889 +
            C90 * C897 + C100 * C890 + C89 * C898) *
               C1986) *
              C92137 * C92148 * C92078 * C2709 +
          ((C100 * C3431 + C89 * C3435 + C101 * C3432 + C90 * C3436 +
            C102 * C3433 + C91 * C3437 + C103 * C3434 + C92 * C3438) *
               C2060 -
           ((C103 * C1468 + C92 * C1476 + C102 * C1469 + C91 * C1477 +
             C101 * C1470 + C90 * C1478 + C100 * C1471 + C89 * C1479) *
                C1985 +
            (C103 * C1386 + C92 * C1398 + C102 * C1387 + C91 * C1399 +
             C101 * C1388 + C90 * C1400 + C100 * C1389 + C89 * C1401) *
                C2059) +
           (C100 * C3513 + C89 * C3517 + C101 * C3514 + C90 * C3518 +
            C102 * C3515 + C91 * C3519 + C103 * C3516 + C92 * C3520) *
               C1986) *
              C92137 * C92148 * C92078 * C2710)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C92067 * C114) *
                C2059 +
            (C4102 * C182 + C4097 * C188 + C4103 * C183 + C92067 * C189) *
                C1985 -
            (C4923 + C4922) * C2060 - (C5033 + C5034) * C1986) *
               C92137 * C9514 +
           ((C11001 + C11002) * C2059 + (C11114 + C11115) * C1985 -
            (C8567 + C8568) * C2060 - (C8680 + C8679) * C1986) *
               C92137 * C9515 +
           (C11013 * C2059 + C11120 * C1985 - (C13867 + C13866) * C2060 -
            (C13976 + C13977) * C1986) *
               C92137 * C9516) *
              C92078 * C2709 +
          (((C8568 + C8567) * C2060 -
            ((C11115 + C11114) * C1985 + (C11002 + C11001) * C2059) +
            (C8679 + C8680) * C1986) *
               C92137 * C9514 +
           ((C13866 + C13867) * C2060 -
            ((C11117 + C11116) * C1985 + (C11006 + C11005) * C2059) +
            (C13977 + C13976) * C1986) *
               C92137 * C9515 +
           ((C4102 * C13849 + C4097 * C13851 + C4103 * C13850 +
             C92067 * C13852) *
                C2060 -
            ((C11118 + C11119) * C1985 + (C11011 + C11012) * C2059) +
            (C4102 * C13967 + C4097 * C13969 + C4103 * C13968 +
             C92067 * C13970) *
                C1986) *
               C92137 * C9516) *
              C92078 * C2710)) /
            (p * q * std::sqrt(p + q));
    d2eexz[11] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C92067 * C114) *
                C2849 +
            (C4102 * C245 + C4097 * C251 + C4103 * C246 + C92067 * C252) *
                C2709 -
            (C4103 * C1388 + C92067 * C1400 + C4102 * C1389 + C4097 * C1401) *
                C2850 -
            (C4103 * C1539 + C92067 * C1547 + C4102 * C1540 + C4097 * C1548) *
                C2710) *
               C4099 +
           ((C4922 + C4923) * C2849 + (C5135 + C5136) * C2709 -
            (C8567 + C8568) * C2850 - (C8793 + C8794) * C2710) *
               C4100 +
           (C4934 * C2849 + C5141 * C2709 - (C8563 + C8564) * C2850 -
            (C8795 + C8796) * C2710) *
               C4101) *
              C92148 * C1985 +
          (((C8568 + C8567) * C2850 -
            ((C5136 + C5135) * C2709 + (C4923 + C4922) * C2849) +
            (C8794 + C8793) * C2710) *
               C4099 +
           ((C8564 + C8563) * C2850 -
            ((C5138 + C5137) * C2709 + (C4927 + C4926) * C2849) +
            (C8796 + C8795) * C2710) *
               C4100 +
           ((C4102 * C8536 + C4097 * C8538 + C4103 * C8537 + C92067 * C8539) *
                C2850 -
            ((C5139 + C5140) * C2709 + (C4932 + C4933) * C2849) +
            (C4102 * C8780 + C4097 * C8782 + C4103 * C8781 + C92067 * C8783) *
                C2710) *
               C4101) *
              C92148 * C1986) *
         C92078) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C100 * C107 + C89 * C113 + C101 * C108 + C90 * C114 + C102 * C109 +
            C91 * C115 + C103 * C110 + C92 * C116) *
               C2849 +
           (C100 * C245 + C89 * C251 + C101 * C246 + C90 * C252 + C102 * C247 +
            C91 * C253 + C103 * C248 + C92 * C254) *
               C2709 -
           (C103 * C1386 + C92 * C1398 + C102 * C1387 + C91 * C1399 +
            C101 * C1388 + C90 * C1400 + C100 * C1389 + C89 * C1401) *
               C2850 -
           (C103 * C1537 + C92 * C1545 + C102 * C1538 + C91 * C1546 +
            C101 * C1539 + C90 * C1547 + C100 * C1540 + C89 * C1548) *
               C2710) *
              C92137 * C92148 * C1985 +
          ((C100 * C3431 + C89 * C3435 + C101 * C3432 + C90 * C3436 +
            C102 * C3433 + C91 * C3437 + C103 * C3434 + C92 * C3438) *
               C2850 -
           ((C103 * C953 + C92 * C961 + C102 * C954 + C91 * C962 + C101 * C955 +
             C90 * C963 + C100 * C956 + C89 * C964) *
                C2709 +
            (C103 * C802 + C92 * C814 + C102 * C803 + C91 * C815 + C101 * C804 +
             C90 * C816 + C100 * C805 + C89 * C817) *
                C2849) +
           (C100 * C3587 + C89 * C3591 + C101 * C3588 + C90 * C3592 +
            C102 * C3589 + C91 * C3593 + C103 * C3590 + C92 * C3594) *
               C2710) *
              C92137 * C92148 * C1986) *
         C92078) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C92067 * C114) *
                C2849 +
            (C4102 * C245 + C4097 * C251 + C4103 * C246 + C92067 * C252) *
                C2709 -
            (C11002 + C11001) * C2850 - (C11218 + C11219) * C2710) *
               C92137 * C9514 +
           ((C11001 + C11002) * C2849 + (C11219 + C11218) * C2709 -
            (C11006 + C11005) * C2850 - (C11221 + C11220) * C2710) *
               C92137 * C9515 +
           (C11013 * C2849 + C11224 * C2709 - (C11011 + C11012) * C2850 -
            (C11223 + C11222) * C2710) *
               C92137 * C9516) *
              C1985 +
          (((C8568 + C8567) * C2850 -
            ((C5136 + C5135) * C2709 + (C4923 + C4922) * C2849) +
            (C8794 + C8793) * C2710) *
               C92137 * C9514 +
           ((C13866 + C13867) * C2850 -
            ((C8793 + C8794) * C2709 + (C8567 + C8568) * C2849) +
            (C14084 + C14085) * C2710) *
               C92137 * C9515 +
           ((C4102 * C13849 + C4097 * C13851 + C4103 * C13850 +
             C92067 * C13852) *
                C2850 -
            ((C14085 + C14084) * C2709 + (C13867 + C13866) * C2849) +
            (C4102 * C14075 + C4097 * C14077 + C4103 * C14076 +
             C92067 * C14078) *
                C2710) *
               C92137 * C9516) *
              C1986) *
         C92078) /
            (p * q * std::sqrt(p + q));
    d2eeyx[11] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((((C4326 * C107 + C4099 * C308 + C4327 * C805 +
                        C4100 * C1022 + C4328 * C806 + C4101 * C1023) *
                           C801 +
                       (C4326 * C117 + C4099 * C314 + C4327 * C813 +
                        C4100 * C1030 + C4328 * C822 + C4101 * C1031) *
                           C92078) *
                          C92148 * C4097 +
                      ((C4356 + C4355 + C4354) * C801 +
                       (C4359 + C4358 + C4357) * C92078) *
                          C92148 * C92067) *
                         C2709 -
                     (((C7888 + C7887 + C7886) * C92078 +
                       (C7885 + C7884 + C7883) * C801) *
                          C92148 * C92067 +
                      ((C4328 * C5778 + C4101 * C6048 + C4327 * C3439 +
                        C4100 * C3665 + C4326 * C1397 + C4099 * C1614) *
                           C92078 +
                       (C4328 * C5772 + C4101 * C6042 + C4327 * C3431 +
                        C4100 * C3661 + C4326 * C1389 + C4099 * C1606) *
                           C801) *
                          C92148 * C4097) *
                         C2710) *
                        C1985 +
                    ((((C4326 * C3431 + C4099 * C3661 + C4327 * C5772 +
                        C4100 * C6042 + C4328 * C8536 + C4101 * C8894) *
                           C801 +
                       (C4326 * C3439 + C4099 * C3665 + C4327 * C5778 +
                        C4100 * C6048 + C4328 * C8540 + C4101 * C8896) *
                           C92078) *
                          C92148 * C4097 +
                      ((C4326 * C3432 + C4099 * C3662 + C4327 * C5771 +
                        C4100 * C6041 + C4328 * C8537 + C4101 * C8895) *
                           C801 +
                       (C4326 * C3440 + C4099 * C3666 + C4327 * C5777 +
                        C4100 * C6047 + C4328 * C8541 + C4101 * C8897) *
                           C92078) *
                          C92148 * C92067) *
                         C2710 -
                     (((C6927 + C6926 + C6925) * C92078 +
                       (C6924 + C6923 + C6922) * C801) *
                          C92148 * C92067 +
                      ((C4328 * C4886 + C4101 * C5222 + C4327 * C822 +
                        C4100 * C1031 + C4326 * C813 + C4099 * C1030) *
                           C92078 +
                       (C4328 * C4882 + C4101 * C5218 + C4327 * C806 +
                        C4100 * C1023 + C4326 * C805 + C4099 * C1022) *
                           C801) *
                          C92148 * C4097) *
                         C2709) *
                        C1986)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((((C307 * C107 + C92137 * C308) * C801 +
                       (C307 * C117 + C92137 * C314) * C92078) *
                          C92148 * C89 +
                      (C337 * C801 + C338 * C92078) * C92148 * C90 +
                      (C339 * C801 + C340 * C92078) * C92148 * C91 +
                      (C341 * C801 + C342 * C92078) * C92148 * C92) *
                         C2709 -
                     ((C2939 * C92078 + C2938 * C801) * C92148 * C92 +
                      (C2937 * C92078 + C2936 * C801) * C92148 * C91 +
                      (C2935 * C92078 + C2934 * C801) * C92148 * C90 +
                      ((C307 * C1397 + C92137 * C1614) * C92078 +
                       (C307 * C1389 + C92137 * C1606) * C801) *
                          C92148 * C89) *
                         C2710) *
                        C1985 +
                    ((((C307 * C3431 + C92137 * C3661) * C801 +
                       (C307 * C3439 + C92137 * C3665) * C92078) *
                          C92148 * C89 +
                      ((C307 * C3432 + C92137 * C3662) * C801 +
                       (C307 * C3440 + C92137 * C3666) * C92078) *
                          C92148 * C90 +
                      ((C307 * C3433 + C92137 * C3663) * C801 +
                       (C307 * C3441 + C92137 * C3667) * C92078) *
                          C92148 * C91 +
                      ((C307 * C3434 + C92137 * C3664) * C801 +
                       (C307 * C3442 + C92137 * C3668) * C92078) *
                          C92148 * C92) *
                         C2710 -
                     ((C2217 * C92078 + C2216 * C801) * C92148 * C92 +
                      (C2215 * C92078 + C2214 * C801) * C92148 * C91 +
                      (C2213 * C92078 + C2212 * C801) * C92148 * C90 +
                      ((C307 * C813 + C92137 * C1030) * C92078 +
                       (C307 * C805 + C92137 * C1022) * C801) *
                          C92148 * C89) *
                         C2709) *
                        C1986)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((((C307 * C107 + C92137 * C308) * C801 +
                        (C307 * C117 + C92137 * C314) * C92078) *
                           C9514 +
                       (C11336 + C11337) * C9515 + C11344 * C9516) *
                          C4097 +
                      ((C337 * C801 + C338 * C92078) * C9514 +
                       (C11315 + C11316) * C9515 + C11331 * C9516) *
                          C92067) *
                         C2709 -
                     (((C11340 + C11341) * C9516 + (C11318 + C11317) * C9515 +
                       (C11316 + C11315) * C9514) *
                          C92067 +
                      ((C11342 + C11343) * C9516 + (C11339 + C11338) * C9515 +
                       (C11337 + C11336) * C9514) *
                          C4097) *
                         C2710) *
                        C1985 +
                    ((((C14204 + C14205) * C9514 + (C14206 + C14207) * C9515 +
                       ((C307 * C13849 + C92137 * C14183) * C801 +
                        (C307 * C13853 + C92137 * C14185) * C92078) *
                           C9516) *
                          C4097 +
                      ((C14196 + C14197) * C9514 + (C14198 + C14199) * C9515 +
                       ((C307 * C13850 + C92137 * C14184) * C801 +
                        (C307 * C13854 + C92137 * C14186) * C92078) *
                           C9516) *
                          C92067) *
                         C2710 -
                     (((C14199 + C14198) * C9516 + (C14197 + C14196) * C9515 +
                       (C2213 * C92078 + C2212 * C801) * C9514) *
                          C92067 +
                      ((C14207 + C14206) * C9516 + (C14205 + C14204) * C9515 +
                       ((C307 * C813 + C92137 * C1030) * C92078 +
                        (C307 * C805 + C92137 * C1022) * C801) *
                           C9514) *
                          C4097) *
                         C2709) *
                        C1986)) /
                      (p * q * std::sqrt(p + q));
    d2eeyy[11] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4326 * C107 + C4099 * C308 + C4327 * C805 + C4100 * C1022 +
             C4328 * C806 + C4101 * C1023) *
                C2059 +
            (C4326 * C182 + C4099 * C394 + C4327 * C890 + C4100 * C1085 +
             C4328 * C891 + C4101 * C1086) *
                C1985 -
            (C4328 * C4882 + C4101 * C5218 + C4327 * C806 + C4100 * C1023 +
             C4326 * C805 + C4099 * C1022) *
                C2060 -
            (C4328 * C5012 + C4101 * C5299 + C4327 * C891 + C4100 * C1086 +
             C4326 * C890 + C4099 * C1085) *
                C1986) *
               C92148 * C4097 +
           ((C4356 + C4355 + C4354) * C2059 + (C4452 + C4453 + C4454) * C1985 -
            (C6924 + C6923 + C6922) * C2060 - (C7033 + C7034 + C7035) * C1986) *
               C92148 * C92067) *
              C92078 * C2709 +
          (((C4326 * C3431 + C4099 * C3661 + C4327 * C5772 + C4100 * C6042 +
             C4328 * C8536 + C4101 * C8894) *
                C2060 -
            ((C4328 * C5870 + C4101 * C6128 + C4327 * C3513 + C4100 * C3735 +
              C4326 * C1471 + C4099 * C1672) *
                 C1985 +
             (C4328 * C5772 + C4101 * C6042 + C4327 * C3431 + C4100 * C3661 +
              C4326 * C1389 + C4099 * C1606) *
                 C2059) +
            (C4326 * C3513 + C4099 * C3735 + C4327 * C5870 + C4100 * C6128 +
             C4328 * C8666 + C4101 * C8996) *
                C1986) *
               C92148 * C4097 +
           ((C4326 * C3432 + C4099 * C3662 + C4327 * C5771 + C4100 * C6041 +
             C4328 * C8537 + C4101 * C8895) *
                C2060 -
            ((C7996 + C7995 + C7994) * C1985 +
             (C7885 + C7884 + C7883) * C2059) +
            (C4326 * C3514 + C4099 * C3736 + C4327 * C5869 + C4100 * C6127 +
             C4328 * C8667 + C4101 * C8997) *
                C1986) *
               C92148 * C92067) *
              C92078 * C2710)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C307 * C107 + C92137 * C308) * C2059 +
            (C307 * C182 + C92137 * C394) * C1985 -
            (C307 * C805 + C92137 * C1022) * C2060 -
            (C307 * C890 + C92137 * C1085) * C1986) *
               C92148 * C89 +
           (C2285 + C2286 - C2287 - C2303) * C92148 * C90 +
           (C2290 + C2291 - C2292 - C2304) * C92148 * C91 +
           (C2295 + C2296 - C2297 - C2305) * C92148 * C92) *
              C92078 * C2709 +
          (((C307 * C3431 + C92137 * C3661) * C2060 -
            ((C307 * C1471 + C92137 * C1672) * C1985 +
             (C307 * C1389 + C92137 * C1606) * C2059) +
            (C307 * C3513 + C92137 * C3735) * C1986) *
               C92148 * C89 +
           ((C307 * C3432 + C92137 * C3662) * C2060 -
            (C3016 * C1985 + C2934 * C2059) +
            (C307 * C3514 + C92137 * C3736) * C1986) *
               C92148 * C90 +
           ((C307 * C3433 + C92137 * C3663) * C2060 -
            (C3017 * C1985 + C2936 * C2059) +
            (C307 * C3515 + C92137 * C3737) * C1986) *
               C92148 * C91 +
           ((C307 * C3434 + C92137 * C3664) * C2060 -
            (C3018 * C1985 + C2938 * C2059) +
            (C307 * C3516 + C92137 * C3738) * C1986) *
               C92148 * C92) *
              C92078 * C2710)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92137 * C308) * C2059 +
             (C307 * C182 + C92137 * C394) * C1985 -
             (C307 * C805 + C92137 * C1022) * C2060 -
             (C307 * C890 + C92137 * C1085) * C1986) *
                C9514 +
            (C14308 + C14309 - C14310 - C14320) * C9515 +
            (C14313 + C14314 - C14315 - C14321) * C9516) *
               C4097 +
           ((C2285 + C2286 - C2287 - C2303) * C9514 +
            (C12286 + C12287 - C12288 - C12298) * C9515 +
            (C12291 + C12292 - C12293 - C12299) * C9516) *
               C92067) *
              C92078 * C2709 +
          (((C14310 - (C14309 + C14308) + C14320) * C9514 +
            (C14315 - (C14314 + C14313) + C14321) * C9515 +
            ((C307 * C13849 + C92137 * C14183) * C2060 -
             (C11439 * C1985 + C11335 * C2059) +
             (C307 * C13967 + C92137 * C14305) * C1986) *
                C9516) *
               C4097 +
           ((C12288 - (C12287 + C12286) + C12298) * C9514 +
            (C12293 - (C12292 + C12291) + C12299) * C9515 +
            ((C307 * C13850 + C92137 * C14184) * C2060 -
             (C11438 * C1985 + C11333 * C2059) +
             (C307 * C13968 + C92137 * C14306) * C1986) *
                C9516) *
               C92067) *
              C92078 * C2710)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[11] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4326 * C107 + C4099 * C308 + C4327 * C805 + C4100 * C1022 +
             C4328 * C806 + C4101 * C1023) *
                C2849 +
            (C4326 * C245 + C4099 * C474 + C4327 * C956 + C4100 * C1146 +
             C4328 * C957 + C4101 * C1147) *
                C2709 -
            (C4328 * C5772 + C4101 * C6042 + C4327 * C3431 + C4100 * C3661 +
             C4326 * C1389 + C4099 * C1606) *
                C2850 -
            (C4328 * C5958 + C4101 * C6207 + C4327 * C3587 + C4100 * C3805 +
             C4326 * C1540 + C4099 * C1727) *
                C2710) *
               C92148 * C4097 +
           ((C4356 + C4355 + C4354) * C2849 + (C4544 + C4545 + C4546) * C2709 -
            (C7885 + C7884 + C7883) * C2850 - (C8102 + C8103 + C8104) * C2710) *
               C92148 * C92067) *
              C1985 +
          (((C4326 * C3431 + C4099 * C3661 + C4327 * C5772 + C4100 * C6042 +
             C4328 * C8536 + C4101 * C8894) *
                C2850 -
            ((C4328 * C5114 + C4101 * C5378 + C4327 * C957 + C4100 * C1147 +
              C4326 * C956 + C4099 * C1146) *
                 C2709 +
             (C4328 * C4882 + C4101 * C5218 + C4327 * C806 + C4100 * C1023 +
              C4326 * C805 + C4099 * C1022) *
                 C2849) +
            (C4326 * C3587 + C4099 * C3805 + C4327 * C5958 + C4100 * C6207 +
             C4328 * C8780 + C4101 * C9096) *
                C2710) *
               C92148 * C4097 +
           ((C4326 * C3432 + C4099 * C3662 + C4327 * C5771 + C4100 * C6041 +
             C4328 * C8537 + C4101 * C8895) *
                C2850 -
            ((C7141 + C7142 + C7143) * C2709 +
             (C6924 + C6923 + C6922) * C2849) +
            (C4326 * C3588 + C4099 * C3806 + C4327 * C5957 + C4100 * C6210 +
             C4328 * C8781 + C4101 * C9097) *
                C2710) *
               C92148 * C92067) *
              C1986) *
         C92078) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C307 * C107 + C92137 * C308) * C2849 +
            (C307 * C245 + C92137 * C474) * C2709 -
            (C307 * C1389 + C92137 * C1606) * C2850 -
            (C307 * C1540 + C92137 * C1727) * C2710) *
               C92148 * C89 +
           (C3089 + C3090 - C3091 - C3107) * C92148 * C90 +
           (C3094 + C3095 - C3096 - C3108) * C92148 * C91 +
           (C3099 + C3100 - C3101 - C3109) * C92148 * C92) *
              C1985 +
          (((C307 * C3431 + C92137 * C3661) * C2850 -
            ((C307 * C956 + C92137 * C1146) * C2709 +
             (C307 * C805 + C92137 * C1022) * C2849) +
            (C307 * C3587 + C92137 * C3805) * C2710) *
               C92148 * C89 +
           ((C307 * C3432 + C92137 * C3662) * C2850 -
            (C2384 * C2709 + C2212 * C2849) +
            (C307 * C3588 + C92137 * C3806) * C2710) *
               C92148 * C90 +
           ((C307 * C3433 + C92137 * C3663) * C2850 -
            (C2383 * C2709 + C2214 * C2849) +
            (C307 * C3589 + C92137 * C3807) * C2710) *
               C92148 * C91 +
           ((C307 * C3434 + C92137 * C3664) * C2850 -
            (C2382 * C2709 + C2216 * C2849) +
            (C307 * C3590 + C92137 * C3808) * C2710) *
               C92148 * C92) *
              C1986) *
         C92078) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92137 * C308) * C2849 +
             (C307 * C245 + C92137 * C474) * C2709 - C11327 * C2850 -
             C11531 * C2710) *
                C9514 +
            (C11327 * C2849 + C11531 * C2709 - C11329 * C2850 -
             C11532 * C2710) *
                C9515 +
            (C11329 * C2849 + C11532 * C2709 - C11335 * C2850 -
             C11533 * C2710) *
                C9516) *
               C4097 +
           ((C3089 + C3090 - C3091 - C3107) * C9514 +
            (C13410 + C13411 - C13412 - C13413) * C9515 +
            (C13414 + C13415 - C13416 - C13417) * C9516) *
               C92067) *
              C1985 +
          (((C14200 * C2850 -
             ((C307 * C956 + C92137 * C1146) * C2709 +
              (C307 * C805 + C92137 * C1022) * C2849) +
             C14426 * C2710) *
                C9514 +
            (C14202 * C2850 - (C14426 * C2709 + C14200 * C2849) +
             C14427 * C2710) *
                C9515 +
            ((C307 * C13849 + C92137 * C14183) * C2850 -
             (C14427 * C2709 + C14202 * C2849) +
             (C307 * C14075 + C92137 * C14419) * C2710) *
                C9516) *
               C4097 +
           ((C12183 * C2850 - (C2384 * C2709 + C2212 * C2849) +
             C12406 * C2710) *
                C9514 +
            (C12185 * C2850 - (C12406 * C2709 + C12183 * C2849) +
             C12405 * C2710) *
                C9515 +
            ((C307 * C13850 + C92137 * C14184) * C2850 -
             (C12405 * C2709 + C12185 * C2849) +
             (C307 * C14076 + C92137 * C14420) * C2710) *
                C9516) *
               C92067) *
              C1986) *
         C92078) /
            (p * q * std::sqrt(p + q));
    d2eezx[11] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C554 * C107 + C92148 * C555) * C801 +
              (C554 * C117 + C92148 * C561) * C92078) *
                 C4097 +
             (C584 * C801 + C585 * C92078) * C92067) *
                C4099 +
            ((C5493 + C5494) * C4097 + (C5468 + C5469) * C92067) * C4100 +
            C5504 * C4101) *
               C2709 -
           (((C9201 + C9202) * C92067 + (C9217 + C9218) * C4097) * C4101 +
            ((C9207 + C9208) * C92067 + (C9219 + C9220) * C4097) * C4100 +
            ((C3191 * C92078 + C3190 * C801) * C92067 +
             ((C554 * C1397 + C92148 * C1796) * C92078 +
              (C554 * C1389 + C92148 * C1788) * C801) *
                 C4097) *
                C4099) *
               C2710) *
              C1985 +
          ((((C9220 + C9219) * C4097 + (C9208 + C9207) * C92067) * C4099 +
            ((C9218 + C9217) * C4097 + (C9202 + C9201) * C92067) * C4100 +
            (((C554 * C8536 + C92148 * C9196) * C801 +
              (C554 * C8540 + C92148 * C9198) * C92078) *
                 C4097 +
             ((C554 * C8537 + C92148 * C9197) * C801 +
              (C554 * C8541 + C92148 * C9199) * C92078) *
                 C92067) *
                C4101) *
               C2710 -
           (((C5498 + C5499) * C92067 + (C5500 + C5501) * C4097) * C4101 +
            ((C5475 + C5474) * C92067 + (C5496 + C5495) * C4097) * C4100 +
            ((C5469 + C5468) * C92067 + (C5494 + C5493) * C4097) * C4099) *
               C2709) *
              C1986)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92148 * C555) * C801 +
             (C554 * C117 + C92148 * C561) * C92078) *
                C89 +
            (C584 * C801 + C585 * C92078) * C90 +
            (C586 * C801 + C587 * C92078) * C91 +
            (C588 * C801 + C589 * C92078) * C92) *
               C92137 * C2709 -
           ((C3195 * C92078 + C3194 * C801) * C92 +
            (C3193 * C92078 + C3192 * C801) * C91 +
            (C3191 * C92078 + C3190 * C801) * C90 +
            ((C554 * C1397 + C92148 * C1796) * C92078 +
             (C554 * C1389 + C92148 * C1788) * C801) *
                C89) *
               C92137 * C2710) *
              C1985 +
          ((((C554 * C3431 + C92148 * C3875) * C801 +
             (C554 * C3439 + C92148 * C3879) * C92078) *
                C89 +
            ((C554 * C3432 + C92148 * C3876) * C801 +
             (C554 * C3440 + C92148 * C3880) * C92078) *
                C90 +
            ((C554 * C3433 + C92148 * C3877) * C801 +
             (C554 * C3441 + C92148 * C3881) * C92078) *
                C91 +
            ((C554 * C3434 + C92148 * C3878) * C801 +
             (C554 * C3442 + C92148 * C3882) * C92078) *
                C92) *
               C92137 * C2710 -
           ((C2473 * C92078 + C2472 * C801) * C92 +
            (C2471 * C92078 + C2470 * C801) * C91 +
            (C2469 * C92078 + C2468 * C801) * C90 +
            ((C554 * C813 + C92148 * C1212) * C92078 +
             (C554 * C805 + C92148 * C1204) * C801) *
                C89) *
               C92137 * C2709) *
              C1986)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C9997 * C107 + C9514 * C555 + C9998 * C1389 + C9515 * C1788 +
              C9999 * C1390 + C9516 * C1789) *
                 C801 +
             (C9997 * C117 + C9514 * C561 + C9998 * C1397 + C9515 * C1796 +
              C9999 * C1406 + C9516 * C1797) *
                 C92078) *
                C4097 +
            ((C10027 + C10026 + C10025) * C801 +
             (C10030 + C10029 + C10028) * C92078) *
                C92067) *
               C92137 * C2709 -
           (((C13535 + C13534 + C13533) * C92078 +
             (C13532 + C13531 + C13530) * C801) *
                C92067 +
            ((C9999 * C10965 + C9516 * C11613 + C9998 * C1406 + C9515 * C1797 +
              C9997 * C1397 + C9514 * C1796) *
                 C92078 +
             (C9999 * C10961 + C9516 * C11609 + C9998 * C1390 + C9515 * C1789 +
              C9997 * C1389 + C9514 * C1788) *
                 C801) *
                C4097) *
               C92137 * C2710) *
              C1985 +
          ((((C9997 * C3431 + C9514 * C3875 + C9998 * C5773 + C9515 * C6289 +
              C9999 * C13849 + C9516 * C14525) *
                 C801 +
             (C9997 * C3439 + C9514 * C3879 + C9998 * C5783 + C9515 * C6295 +
              C9999 * C13853 + C9516 * C14527) *
                 C92078) *
                C4097 +
            ((C9997 * C3432 + C9514 * C3876 + C9998 * C5774 + C9515 * C6290 +
              C9999 * C13850 + C9516 * C14526) *
                 C801 +
             (C9997 * C3440 + C9514 * C3880 + C9998 * C5784 + C9515 * C6296 +
              C9999 * C13854 + C9516 * C14528) *
                 C92078) *
                C92067) *
               C92137 * C2710 -
           (((C12526 + C12525 + C12524) * C92078 +
             (C12523 + C12522 + C12521) * C801) *
                C92067 +
            ((C9999 * C5783 + C9516 * C6295 + C9998 * C3439 + C9515 * C3879 +
              C9997 * C813 + C9514 * C1212) *
                 C92078 +
             (C9999 * C5773 + C9516 * C6289 + C9998 * C3431 + C9515 * C3875 +
              C9997 * C805 + C9514 * C1204) *
                 C801) *
                C4097) *
               C92137 * C2709) *
              C1986)) /
            (p * q * std::sqrt(p + q));
    d2eezy[11] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92148 * C555) * C2059 +
             (C554 * C182 + C92148 * C641) * C1985 - C5484 * C2060 -
             C5591 * C1986) *
                C4097 +
            (C2541 + C2542 - C2543 - C2559) * C92067) *
               C4099 +
           ((C5484 * C2059 + C5591 * C1985 - C5486 * C2060 - C5592 * C1986) *
                C4097 +
            (C7359 + C7360 - C7361 - C7362) * C92067) *
               C4100 +
           ((C5486 * C2059 + C5592 * C1985 - C5492 * C2060 - C5593 * C1986) *
                C4097 +
            (C7363 + C7364 - C7365 - C7366) * C92067) *
               C4101) *
              C92078 * C2709 +
          (((C9216 * C2060 -
             ((C554 * C1471 + C92148 * C1854) * C1985 +
              (C554 * C1389 + C92148 * C1788) * C2059) +
             C9325 * C1986) *
                C4097 +
            (C8213 * C2060 - (C3272 * C1985 + C3190 * C2059) + C8322 * C1986) *
                C92067) *
               C4099 +
           ((C9214 * C2060 - (C9325 * C1985 + C9216 * C2059) + C9326 * C1986) *
                C4097 +
            (C8215 * C2060 - (C8322 * C1985 + C8213 * C2059) + C8323 * C1986) *
                C92067) *
               C4100 +
           (((C554 * C8536 + C92148 * C9196) * C2060 -
             (C9326 * C1985 + C9214 * C2059) +
             (C554 * C8666 + C92148 * C9318) * C1986) *
                C4097 +
            ((C554 * C8537 + C92148 * C9197) * C2060 -
             (C8323 * C1985 + C8215 * C2059) +
             (C554 * C8667 + C92148 * C9319) * C1986) *
                C92067) *
               C4101) *
              C92078 * C2710)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92148 * C555) * C2059 +
            (C554 * C182 + C92148 * C641) * C1985 -
            (C554 * C805 + C92148 * C1204) * C2060 -
            (C554 * C890 + C92148 * C1267) * C1986) *
               C89 +
           (C2541 + C2542 - C2543 - C2559) * C90 +
           (C2546 + C2547 - C2548 - C2560) * C91 +
           (C2551 + C2552 - C2553 - C2561) * C92) *
              C92137 * C92078 * C2709 +
          (((C554 * C3431 + C92148 * C3875) * C2060 -
            ((C554 * C1471 + C92148 * C1854) * C1985 +
             (C554 * C1389 + C92148 * C1788) * C2059) +
            (C554 * C3513 + C92148 * C3949) * C1986) *
               C89 +
           ((C554 * C3432 + C92148 * C3876) * C2060 -
            (C3272 * C1985 + C3190 * C2059) +
            (C554 * C3514 + C92148 * C3950) * C1986) *
               C90 +
           ((C554 * C3433 + C92148 * C3877) * C2060 -
            (C3273 * C1985 + C3192 * C2059) +
            (C554 * C3515 + C92148 * C3951) * C1986) *
               C91 +
           ((C554 * C3434 + C92148 * C3878) * C2060 -
            (C3274 * C1985 + C3194 * C2059) +
            (C554 * C3516 + C92148 * C3952) * C1986) *
               C92) *
              C92137 * C92078 * C2710)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C9997 * C107 + C9514 * C555 + C9998 * C1389 + C9515 * C1788 +
             C9999 * C1390 + C9516 * C1789) *
                C2059 +
            (C9997 * C182 + C9514 * C641 + C9998 * C1471 + C9515 * C1854 +
             C9999 * C1472 + C9516 * C1855) *
                C1985 -
            (C9999 * C5773 + C9516 * C6289 + C9998 * C3431 + C9515 * C3875 +
             C9997 * C805 + C9514 * C1204) *
                C2060 -
            (C9999 * C5871 + C9516 * C6375 + C9998 * C3513 + C9515 * C3949 +
             C9997 * C890 + C9514 * C1267) *
                C1986) *
               C4097 +
           ((C10027 + C10026 + C10025) * C2059 +
            (C10123 + C10124 + C10125) * C1985 -
            (C12523 + C12522 + C12521) * C2060 -
            (C12632 + C12633 + C12634) * C1986) *
               C92067) *
              C92137 * C92078 * C2709 +
          (((C9997 * C3431 + C9514 * C3875 + C9998 * C5773 + C9515 * C6289 +
             C9999 * C13849 + C9516 * C14525) *
                C2060 -
            ((C9999 * C11093 + C9516 * C11691 + C9998 * C1472 + C9515 * C1855 +
              C9997 * C1471 + C9514 * C1854) *
                 C1985 +
             (C9999 * C10961 + C9516 * C11609 + C9998 * C1390 + C9515 * C1789 +
              C9997 * C1389 + C9514 * C1788) *
                 C2059) +
            (C9997 * C3513 + C9514 * C3949 + C9998 * C5871 + C9515 * C6375 +
             C9999 * C13967 + C9516 * C14627) *
                C1986) *
               C4097 +
           ((C9997 * C3432 + C9514 * C3876 + C9998 * C5774 + C9515 * C6290 +
             C9999 * C13850 + C9516 * C14526) *
                C2060 -
            ((C13643 + C13642 + C13641) * C1985 +
             (C13532 + C13531 + C13530) * C2059) +
            (C9997 * C3514 + C9514 * C3950 + C9998 * C5872 + C9515 * C6376 +
             C9999 * C13968 + C9516 * C14628) *
                C1986) *
               C92067) *
              C92137 * C92078 * C2710)) /
            (p * q * std::sqrt(p + q));
    d2eezz[11] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((((C554 * C107 + C92148 * C555) * C2849 +
                       (C554 * C245 + C92148 * C719) * C2709 -
                       (C554 * C1389 + C92148 * C1788) * C2850 -
                       (C554 * C1540 + C92148 * C1909) * C2710) *
                          C4097 +
                      (C3345 + C3346 - C3347 - C3363) * C92067) *
                         C4099 +
                     ((C9427 + C9428 - C9429 - C9439) * C4097 +
                      (C8425 + C8426 - C8427 - C8437) * C92067) *
                         C4100 +
                     ((C9432 + C9433 - C9434 - C9440) * C4097 +
                      (C8430 + C8431 - C8432 - C8438) * C92067) *
                         C4101) *
                        C1985 +
                    (((C9429 - (C9428 + C9427) + C9439) * C4097 +
                      (C8427 - (C8426 + C8425) + C8437) * C92067) *
                         C4099 +
                     ((C9434 - (C9433 + C9432) + C9440) * C4097 +
                      (C8432 - (C8431 + C8430) + C8438) * C92067) *
                         C4100 +
                     (((C554 * C8536 + C92148 * C9196) * C2850 -
                       (C5690 * C2709 + C5492 * C2849) +
                       (C554 * C8780 + C92148 * C9424) * C2710) *
                          C4097 +
                      ((C554 * C8537 + C92148 * C9197) * C2850 -
                       (C5689 * C2709 + C5490 * C2849) +
                       (C554 * C8781 + C92148 * C9425) * C2710) *
                          C92067) *
                         C4101) *
                        C1986) *
                   C92078) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C554 * C107 + C92148 * C555) * C2849 +
                      (C554 * C245 + C92148 * C719) * C2709 -
                      (C554 * C1389 + C92148 * C1788) * C2850 -
                      (C554 * C1540 + C92148 * C1909) * C2710) *
                         C89 +
                     (C3345 + C3346 - C3347 - C3363) * C90 +
                     (C3350 + C3351 - C3352 - C3364) * C91 +
                     (C3355 + C3356 - C3357 - C3365) * C92) *
                        C92137 * C1985 +
                    (((C554 * C3431 + C92148 * C3875) * C2850 -
                      ((C554 * C956 + C92148 * C1328) * C2709 +
                       (C554 * C805 + C92148 * C1204) * C2849) +
                      (C554 * C3587 + C92148 * C4019) * C2710) *
                         C89 +
                     ((C554 * C3432 + C92148 * C3876) * C2850 -
                      (C2640 * C2709 + C2468 * C2849) +
                      (C554 * C3588 + C92148 * C4020) * C2710) *
                         C90 +
                     ((C554 * C3433 + C92148 * C3877) * C2850 -
                      (C2639 * C2709 + C2470 * C2849) +
                      (C554 * C3589 + C92148 * C4021) * C2710) *
                         C91 +
                     ((C554 * C3434 + C92148 * C3878) * C2850 -
                      (C2638 * C2709 + C2472 * C2849) +
                      (C554 * C3590 + C92148 * C4022) * C2710) *
                         C92) *
                        C92137 * C1986) *
                   C92078) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C9997 * C107 + C9514 * C555 + C9998 * C1389 +
                       C9515 * C1788 + C9999 * C1390 + C9516 * C1789) *
                          C2849 +
                      (C9997 * C245 + C9514 * C719 + C9998 * C1540 +
                       C9515 * C1909 + C9999 * C1541 + C9516 * C1910) *
                          C2709 -
                      (C9999 * C10961 + C9516 * C11609 + C9998 * C1390 +
                       C9515 * C1789 + C9997 * C1389 + C9514 * C1788) *
                          C2850 -
                      (C9999 * C11197 + C9516 * C11768 + C9998 * C1541 +
                       C9515 * C1910 + C9997 * C1540 + C9514 * C1909) *
                          C2710) *
                         C4097 +
                     ((C10027 + C10026 + C10025) * C2849 +
                      (C10215 + C10216 + C10217) * C2709 -
                      (C13532 + C13531 + C13530) * C2850 -
                      (C13749 + C13750 + C13751) * C2710) *
                         C92067) *
                        C92137 * C1985 +
                    (((C9997 * C3431 + C9514 * C3875 + C9998 * C5773 +
                       C9515 * C6289 + C9999 * C13849 + C9516 * C14525) *
                          C2850 -
                      ((C9999 * C5955 + C9516 * C6453 + C9998 * C3587 +
                        C9515 * C4019 + C9997 * C956 + C9514 * C1328) *
                           C2709 +
                       (C9999 * C5773 + C9516 * C6289 + C9998 * C3431 +
                        C9515 * C3875 + C9997 * C805 + C9514 * C1204) *
                           C2849) +
                      (C9997 * C3587 + C9514 * C4019 + C9998 * C5955 +
                       C9515 * C6453 + C9999 * C14075 + C9516 * C14727) *
                          C2710) *
                         C4097 +
                     ((C9997 * C3432 + C9514 * C3876 + C9998 * C5774 +
                       C9515 * C6290 + C9999 * C13850 + C9516 * C14526) *
                          C2850 -
                      ((C12740 + C12741 + C12742) * C2709 +
                       (C12523 + C12522 + C12521) * C2849) +
                      (C9997 * C3588 + C9514 * C4020 + C9998 * C5956 +
                       C9515 * C6454 + C9999 * C14076 + C9516 * C14728) *
                          C2710) *
                         C92067) *
                        C92137 * C1986) *
                   C92078) /
                      (p * q * std::sqrt(p + q));
    d2eexx[12] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((C100 * C107 + C89 * C113 + C101 * C108 + C90 * C114 +
               C102 * C109 + C91 * C115 + C103 * C110 + C92 * C116) *
                  C104 +
              (C100 * C117 + C89 * C125 + C101 * C118 + C90 * C126 +
               C102 * C119 + C91 * C127 + C103 * C120 + C92 * C128) *
                  C93 -
              (C103 * C111 + C92 * C121 + C102 * C110 + C91 * C116 +
               C101 * C109 + C90 * C115 + C100 * C108 + C89 * C114) *
                  C105 -
              (C103 * C122 + C92 * C129 + C102 * C120 + C91 * C128 +
               C101 * C119 + C90 * C127 + C100 * C118 + C89 * C126) *
                  C94 +
              (C100 * C109 + C89 * C115 + C101 * C110 + C90 * C116 +
               C102 * C111 + C91 * C121 + C103 * C112 + C92 * C123) *
                  C106 +
              (C100 * C119 + C89 * C127 + C101 * C120 + C90 * C128 +
               C102 * C122 + C91 * C129 + C103 * C124 + C92 * C130) *
                  C95) *
             C92137 * C92148 * C92110 * C92099 +
         0.5 * std::pow(Pi, 2.5) *
             (((C100 * C107 + C89 * C113 + C101 * C108 + C90 * C114 +
                C102 * C109 + C91 * C115 + C103 * C110 + C92 * C116) *
                   C801 +
               (C100 * C117 + C89 * C125 + C101 * C118 + C90 * C126 +
                C102 * C119 + C91 * C127 + C103 * C120 + C92 * C128) *
                   C92078) *
                  C92137 * C92148 * C92110 * C798 -
              ((C103 * C810 + C92 * C826 + C102 * C811 + C91 * C827 +
                C101 * C812 + C90 * C828 + C100 * C813 + C89 * C829) *
                   C92078 +
               (C103 * C802 + C92 * C814 + C102 * C803 + C91 * C815 +
                C101 * C804 + C90 * C816 + C100 * C805 + C89 * C817) *
                   C801) *
                  C92137 * C92148 * C92110 * C799 +
              ((C100 * C806 + C89 * C818 + C101 * C807 + C90 * C819 +
                C102 * C808 + C91 * C820 + C103 * C809 + C92 * C821) *
                   C801 +
               (C100 * C822 + C89 * C830 + C101 * C823 + C90 * C831 +
                C102 * C824 + C91 * C832 + C103 * C825 + C92 * C833) *
                   C92078) *
                  C92137 * C92148 * C92110 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C100 * C107 + C89 * C113 + C101 * C108 + C90 * C114 + C102 * C109 +
            C91 * C115 + C103 * C110 + C92 * C116) *
               C801 +
           (C100 * C117 + C89 * C125 + C101 * C118 + C90 * C126 + C102 * C119 +
            C91 * C127 + C103 * C120 + C92 * C128) *
               C92078) *
              C92137 * C92148 * C1383 -
          ((C103 * C1394 + C92 * C1410 + C102 * C1395 + C91 * C1411 +
            C101 * C1396 + C90 * C1412 + C100 * C1397 + C89 * C1413) *
               C92078 +
           (C103 * C1386 + C92 * C1398 + C102 * C1387 + C91 * C1399 +
            C101 * C1388 + C90 * C1400 + C100 * C1389 + C89 * C1401) *
               C801) *
              C92137 * C92148 * C1384 +
          ((C100 * C1390 + C89 * C1402 + C101 * C1391 + C90 * C1403 +
            C102 * C1392 + C91 * C1404 + C103 * C1393 + C92 * C1405) *
               C801 +
           (C100 * C1406 + C89 * C1414 + C101 * C1407 + C90 * C1415 +
            C102 * C1408 + C91 * C1416 + C103 * C1409 + C92 * C1417) *
               C92078) *
              C92137 * C92148 * C1385) *
         C92099) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C4102 * C107 + C4097 * C113 + C4103 * C108 + C92067 * C114) * C104 +
           (C4102 * C117 + C4097 * C125 + C4103 * C118 + C92067 * C126) * C93 -
           (C4103 * C109 + C92067 * C115 + C4102 * C108 + C4097 * C114) * C105 -
           (C4103 * C119 + C92067 * C127 + C4102 * C118 + C4097 * C126) * C94 +
           (C4102 * C109 + C4097 * C115 + C4103 * C110 + C92067 * C116) * C106 +
           (C4102 * C119 + C4097 * C127 + C4103 * C120 + C92067 * C128) * C95) *
              C4099 +
          ((C4102 * C805 + C4097 * C817 + C4103 * C804 + C92067 * C816) * C104 +
           (C4102 * C813 + C4097 * C829 + C4103 * C812 + C92067 * C828) * C93 -
           (C4103 * C803 + C92067 * C815 + C4102 * C804 + C4097 * C816) * C105 -
           (C4103 * C811 + C92067 * C827 + C4102 * C812 + C4097 * C828) * C94 +
           (C4102 * C803 + C4097 * C815 + C4103 * C802 + C92067 * C814) * C106 +
           (C4102 * C811 + C4097 * C827 + C4103 * C810 + C92067 * C826) * C95) *
              C4100 +
          ((C4102 * C806 + C4097 * C818 + C4103 * C807 + C92067 * C819) * C104 +
           (C4102 * C822 + C4097 * C830 + C4103 * C823 + C92067 * C831) * C93 -
           (C4103 * C808 + C92067 * C820 + C4102 * C807 + C4097 * C819) * C105 -
           (C4103 * C824 + C92067 * C832 + C4102 * C823 + C4097 * C831) * C94 +
           (C4102 * C808 + C4097 * C820 + C4103 * C809 + C92067 * C821) * C106 +
           (C4102 * C824 + C4097 * C832 + C4103 * C825 + C92067 * C833) * C95) *
              C4101) *
         C92148 * C92110 * C92099) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C92067 * C114) *
                C801 +
            (C4102 * C117 + C4097 * C125 + C4103 * C118 + C92067 * C126) *
                C92078) *
               C4099 +
           ((C4922 + C4923) * C801 + (C4924 + C4925) * C92078) * C4100 +
           C4938 * C4101) *
              C92148 * C92110 * C798 -
          (((C4930 + C4931) * C92078 + (C4932 + C4933) * C801) * C4101 +
           ((C4929 + C4928) * C92078 + (C4927 + C4926) * C801) * C4100 +
           ((C4925 + C4924) * C92078 + (C4923 + C4922) * C801) * C4099) *
              C92148 * C92110 * C799 +
          (C4938 * C4099 +
           ((C4933 + C4932) * C801 + (C4931 + C4930) * C92078) * C4100 +
           ((C4102 * C4883 + C4097 * C4889 + C4103 * C4884 + C92067 * C4890) *
                C801 +
            (C4102 * C4891 + C4097 * C4895 + C4103 * C4892 + C92067 * C4896) *
                C92078) *
               C4101) *
              C92148 * C92110 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C92067 * C114) *
                C801 +
            (C4102 * C117 + C4097 * C125 + C4103 * C118 + C92067 * C126) *
                C92078) *
               C4099 +
           ((C4922 + C4923) * C801 + (C4924 + C4925) * C92078) * C4100 +
           C4938 * C4101) *
              C92148 * C1383 -
          (((C4103 * C5777 + C92067 * C5789 + C4102 * C5778 + C4097 * C5790) *
                C92078 +
            (C4103 * C5771 + C92067 * C5779 + C4102 * C5772 + C4097 * C5780) *
                C801) *
               C4101 +
           ((C4103 * C3440 + C92067 * C3444 + C4102 * C3439 + C4097 * C3443) *
                C92078 +
            (C4103 * C3432 + C92067 * C3436 + C4102 * C3431 + C4097 * C3435) *
                C801) *
               C4100 +
           ((C4103 * C1396 + C92067 * C1412 + C4102 * C1397 + C4097 * C1413) *
                C92078 +
            (C4103 * C1388 + C92067 * C1400 + C4102 * C1389 + C4097 * C1401) *
                C801) *
               C4099) *
              C92148 * C1384 +
          (((C4102 * C1390 + C4097 * C1402 + C4103 * C1391 + C92067 * C1403) *
                C801 +
            (C4102 * C1406 + C4097 * C1414 + C4103 * C1407 + C92067 * C1415) *
                C92078) *
               C4099 +
           ((C4102 * C5773 + C4097 * C5781 + C4103 * C5774 + C92067 * C5782) *
                C801 +
            (C4102 * C5783 + C4097 * C5791 + C4103 * C5784 + C92067 * C5792) *
                C92078) *
               C4100 +
           ((C4102 * C5775 + C4097 * C5785 + C4103 * C5776 + C92067 * C5786) *
                C801 +
            (C4102 * C5787 + C4097 * C5793 + C4103 * C5788 + C92067 * C5794) *
                C92078) *
               C4101) *
              C92148 * C1385) *
         C92099) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C4102 * C107 + C4097 * C113 + C4103 * C108 + C92067 * C114) * C104 +
           (C4102 * C117 + C4097 * C125 + C4103 * C118 + C92067 * C126) * C93 -
           (C4103 * C109 + C92067 * C115 + C4102 * C108 + C4097 * C114) * C105 -
           (C4103 * C119 + C92067 * C127 + C4102 * C118 + C4097 * C126) * C94 +
           (C4102 * C109 + C4097 * C115 + C4103 * C110 + C92067 * C116) * C106 +
           (C4102 * C119 + C4097 * C127 + C4103 * C120 + C92067 * C128) * C95) *
              C92137 * C9514 +
          ((C4102 * C1389 + C4097 * C1401 + C4103 * C1388 + C92067 * C1400) *
               C104 +
           (C4102 * C1397 + C4097 * C1413 + C4103 * C1396 + C92067 * C1412) *
               C93 -
           (C4103 * C1387 + C92067 * C1399 + C4102 * C1388 + C4097 * C1400) *
               C105 -
           (C4103 * C1395 + C92067 * C1411 + C4102 * C1396 + C4097 * C1412) *
               C94 +
           (C4102 * C1387 + C4097 * C1399 + C4103 * C1386 + C92067 * C1398) *
               C106 +
           (C4102 * C1395 + C4097 * C1411 + C4103 * C1394 + C92067 * C1410) *
               C95) *
              C92137 * C9515 +
          ((C4102 * C1390 + C4097 * C1402 + C4103 * C1391 + C92067 * C1403) *
               C104 +
           (C4102 * C1406 + C4097 * C1414 + C4103 * C1407 + C92067 * C1415) *
               C93 -
           (C4103 * C1392 + C92067 * C1404 + C4102 * C1391 + C4097 * C1403) *
               C105 -
           (C4103 * C1408 + C92067 * C1416 + C4102 * C1407 + C4097 * C1415) *
               C94 +
           (C4102 * C1392 + C4097 * C1404 + C4103 * C1393 + C92067 * C1405) *
               C106 +
           (C4102 * C1408 + C4097 * C1416 + C4103 * C1409 + C92067 * C1417) *
               C95) *
              C92137 * C9516) *
         C92110 * C92099) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C92067 * C114) *
                C801 +
            (C4102 * C117 + C4097 * C125 + C4103 * C118 + C92067 * C126) *
                C92078) *
               C92137 * C9514 +
           ((C4102 * C1389 + C4097 * C1401 + C4103 * C1388 + C92067 * C1400) *
                C801 +
            (C4102 * C1397 + C4097 * C1413 + C4103 * C1396 + C92067 * C1412) *
                C92078) *
               C92137 * C9515 +
           ((C4102 * C1390 + C4097 * C1402 + C4103 * C1391 + C92067 * C1403) *
                C801 +
            (C4102 * C1406 + C4097 * C1414 + C4103 * C1407 + C92067 * C1415) *
                C92078) *
               C92137 * C9516) *
              C92110 * C798 -
          (((C4103 * C5784 + C92067 * C5792 + C4102 * C5783 + C4097 * C5791) *
                C92078 +
            (C4103 * C5774 + C92067 * C5782 + C4102 * C5773 + C4097 * C5781) *
                C801) *
               C92137 * C9516 +
           ((C8565 + C8566) * C92078 + (C8567 + C8568) * C801) * C92137 *
               C9515 +
           ((C4925 + C4924) * C92078 + (C4923 + C4922) * C801) * C92137 *
               C9514) *
              C92110 * C799 +
          (C4938 * C92137 * C9514 +
           ((C8564 + C8563) * C801 + (C8562 + C8561) * C92078) * C92137 *
               C9515 +
           ((C4102 * C5775 + C4097 * C5785 + C4103 * C5776 + C92067 * C5786) *
                C801 +
            (C4102 * C5787 + C4097 * C5793 + C4103 * C5788 + C92067 * C5794) *
                C92078) *
               C92137 * C9516) *
              C92110 * C800)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C92067 * C114) *
                C801 +
            (C4102 * C117 + C4097 * C125 + C4103 * C118 + C92067 * C126) *
                C92078) *
               C92137 * C9514 +
           ((C11001 + C11002) * C801 + (C11003 + C11004) * C92078) * C92137 *
               C9515 +
           C11018 * C9516) *
              C1383 -
          (((C11009 + C11010) * C92078 + (C11011 + C11012) * C801) * C92137 *
               C9516 +
           ((C11008 + C11007) * C92078 + (C11006 + C11005) * C801) * C92137 *
               C9515 +
           ((C11004 + C11003) * C92078 + (C11002 + C11001) * C801) * C92137 *
               C9514) *
              C1384 +
          (C11018 * C9514 +
           ((C11012 + C11011) * C801 + (C11010 + C11009) * C92078) * C92137 *
               C9515 +
           ((C4102 * C10962 + C4097 * C10968 + C4103 * C10963 +
             C92067 * C10969) *
                C801 +
            (C4102 * C10970 + C4097 * C10974 + C4103 * C10971 +
             C92067 * C10975) *
                C92078) *
               C92137 * C9516) *
              C1385) *
         C92099) /
            (p * q * std::sqrt(p + q));
    d2eexy[12] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((C100 * C107 + C89 * C113 + C101 * C108 + C90 * C114 +
                C102 * C109 + C91 * C115 + C103 * C110 + C92 * C116) *
                   C181 +
               (C100 * C182 + C89 * C188 + C101 * C183 + C90 * C189 +
                C102 * C184 + C91 * C190 + C103 * C185 + C92 * C191) *
                   C92099) *
                  C92137 * C92148 * C93 -
              ((C103 * C186 + C92 * C192 + C102 * C185 + C91 * C191 +
                C101 * C184 + C90 * C190 + C100 * C183 + C89 * C189) *
                   C92099 +
               (C103 * C111 + C92 * C121 + C102 * C110 + C91 * C116 +
                C101 * C109 + C90 * C115 + C100 * C108 + C89 * C114) *
                   C181) *
                  C92137 * C92148 * C94 +
              ((C100 * C109 + C89 * C115 + C101 * C110 + C90 * C116 +
                C102 * C111 + C91 * C121 + C103 * C112 + C92 * C123) *
                   C181 +
               (C100 * C184 + C89 * C190 + C101 * C185 + C90 * C191 +
                C102 * C186 + C91 * C192 + C103 * C187 + C92 * C193) *
                   C92099) *
                  C92137 * C92148 * C95) *
             C92110 +
         0.5 * std::pow(Pi, 2.5) *
             ((C100 * C107 + C89 * C113 + C101 * C108 + C90 * C114 +
               C102 * C109 + C91 * C115 + C103 * C110 + C92 * C116) *
                  C884 +
              (C100 * C182 + C89 * C188 + C101 * C183 + C90 * C189 +
               C102 * C184 + C91 * C190 + C103 * C185 + C92 * C191) *
                  C798 -
              (C103 * C802 + C92 * C814 + C102 * C803 + C91 * C815 +
               C101 * C804 + C90 * C816 + C100 * C805 + C89 * C817) *
                  C885 -
              (C103 * C887 + C92 * C895 + C102 * C888 + C91 * C896 +
               C101 * C889 + C90 * C897 + C100 * C890 + C89 * C898) *
                  C799 +
              (C100 * C806 + C89 * C818 + C101 * C807 + C90 * C819 +
               C102 * C808 + C91 * C820 + C103 * C809 + C92 * C821) *
                  C886 +
              (C100 * C891 + C89 * C899 + C101 * C892 + C90 * C900 +
               C102 * C893 + C91 * C901 + C103 * C894 + C92 * C902) *
                  C800) *
             C92137 * C92148 * C92078 * C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C100 * C107 + C89 * C113 + C101 * C108 + C90 * C114 + C102 * C109 +
            C91 * C115 + C103 * C110 + C92 * C116) *
               C181 +
           (C100 * C182 + C89 * C188 + C101 * C183 + C90 * C189 + C102 * C184 +
            C91 * C190 + C103 * C185 + C92 * C191) *
               C92099) *
              C92137 * C92148 * C92078 * C1383 -
          ((C103 * C1468 + C92 * C1476 + C102 * C1469 + C91 * C1477 +
            C101 * C1470 + C90 * C1478 + C100 * C1471 + C89 * C1479) *
               C92099 +
           (C103 * C1386 + C92 * C1398 + C102 * C1387 + C91 * C1399 +
            C101 * C1388 + C90 * C1400 + C100 * C1389 + C89 * C1401) *
               C181) *
              C92137 * C92148 * C92078 * C1384 +
          ((C100 * C1390 + C89 * C1402 + C101 * C1391 + C90 * C1403 +
            C102 * C1392 + C91 * C1404 + C103 * C1393 + C92 * C1405) *
               C181 +
           (C100 * C1472 + C89 * C1480 + C101 * C1473 + C90 * C1481 +
            C102 * C1474 + C91 * C1482 + C103 * C1475 + C92 * C1483) *
               C92099) *
              C92137 * C92148 * C92078 * C1385)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C92067 * C114) *
                C181 +
            (C4102 * C182 + C4097 * C188 + C4103 * C183 + C92067 * C189) *
                C92099) *
               C4099 +
           ((C4102 * C805 + C4097 * C817 + C4103 * C804 + C92067 * C816) *
                C181 +
            (C4102 * C890 + C4097 * C898 + C4103 * C889 + C92067 * C897) *
                C92099) *
               C4100 +
           ((C4102 * C806 + C4097 * C818 + C4103 * C807 + C92067 * C819) *
                C181 +
            (C4102 * C891 + C4097 * C899 + C4103 * C892 + C92067 * C900) *
                C92099) *
               C4101) *
              C92148 * C93 -
          (((C4103 * C893 + C92067 * C901 + C4102 * C892 + C4097 * C900) *
                C92099 +
            (C4103 * C808 + C92067 * C820 + C4102 * C807 + C4097 * C819) *
                C181) *
               C4101 +
           ((C4103 * C888 + C92067 * C896 + C4102 * C889 + C4097 * C897) *
                C92099 +
            (C4103 * C803 + C92067 * C815 + C4102 * C804 + C4097 * C816) *
                C181) *
               C4100 +
           ((C4103 * C184 + C92067 * C190 + C4102 * C183 + C4097 * C189) *
                C92099 +
            (C4103 * C109 + C92067 * C115 + C4102 * C108 + C4097 * C114) *
                C181) *
               C4099) *
              C92148 * C94 +
          (((C4102 * C109 + C4097 * C115 + C4103 * C110 + C92067 * C116) *
                C181 +
            (C4102 * C184 + C4097 * C190 + C4103 * C185 + C92067 * C191) *
                C92099) *
               C4099 +
           ((C4102 * C803 + C4097 * C815 + C4103 * C802 + C92067 * C814) *
                C181 +
            (C4102 * C888 + C4097 * C896 + C4103 * C887 + C92067 * C895) *
                C92099) *
               C4100 +
           ((C4102 * C808 + C4097 * C820 + C4103 * C809 + C92067 * C821) *
                C181 +
            (C4102 * C893 + C4097 * C901 + C4103 * C894 + C92067 * C902) *
                C92099) *
               C4101) *
              C92148 * C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C4102 * C107 + C4097 * C113 + C4103 * C108 + C92067 * C114) * C884 +
           (C4102 * C182 + C4097 * C188 + C4103 * C183 + C92067 * C189) * C798 -
           (C4923 + C4922) * C885 - (C5033 + C5034) * C799 + C4934 * C886 +
           C5039 * C800) *
              C4099 +
          ((C4922 + C4923) * C884 + (C5034 + C5033) * C798 -
           (C4927 + C4926) * C885 - (C5036 + C5035) * C799 +
           (C4933 + C4932) * C886 + (C5037 + C5038) * C800) *
              C4100 +
          (C4934 * C884 + C5039 * C798 - (C4932 + C4933) * C885 -
           (C5038 + C5037) * C799 +
           (C4102 * C4883 + C4097 * C4889 + C4103 * C4884 + C92067 * C4890) *
               C886 +
           (C4102 * C5014 + C4097 * C5018 + C4103 * C5015 + C92067 * C5019) *
               C800) *
              C4101) *
         C92148 * C92078 * C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C92067 * C114) *
                C181 +
            (C4102 * C182 + C4097 * C188 + C4103 * C183 + C92067 * C189) *
                C92099) *
               C4099 +
           ((C4922 + C4923) * C181 + (C5034 + C5033) * C92099) * C4100 +
           (C4934 * C181 + C5039 * C92099) * C4101) *
              C92148 * C92078 * C1383 -
          (((C4103 * C5869 + C92067 * C5875 + C4102 * C5870 + C4097 * C5876) *
                C92099 +
            (C4103 * C5771 + C92067 * C5779 + C4102 * C5772 + C4097 * C5780) *
                C181) *
               C4101 +
           ((C4103 * C3514 + C92067 * C3518 + C4102 * C3513 + C4097 * C3517) *
                C92099 +
            (C4103 * C3432 + C92067 * C3436 + C4102 * C3431 + C4097 * C3435) *
                C181) *
               C4100 +
           ((C4103 * C1470 + C92067 * C1478 + C4102 * C1471 + C4097 * C1479) *
                C92099 +
            (C4103 * C1388 + C92067 * C1400 + C4102 * C1389 + C4097 * C1401) *
                C181) *
               C4099) *
              C92148 * C92078 * C1384 +
          (((C4102 * C1390 + C4097 * C1402 + C4103 * C1391 + C92067 * C1403) *
                C181 +
            (C4102 * C1472 + C4097 * C1480 + C4103 * C1473 + C92067 * C1481) *
                C92099) *
               C4099 +
           ((C4102 * C5773 + C4097 * C5781 + C4103 * C5774 + C92067 * C5782) *
                C181 +
            (C4102 * C5871 + C4097 * C5877 + C4103 * C5872 + C92067 * C5878) *
                C92099) *
               C4100 +
           ((C4102 * C5775 + C4097 * C5785 + C4103 * C5776 + C92067 * C5786) *
                C181 +
            (C4102 * C5873 + C4097 * C5879 + C4103 * C5874 + C92067 * C5880) *
                C92099) *
               C4101) *
              C92148 * C92078 * C1385)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C92067 * C114) *
                C181 +
            (C4102 * C182 + C4097 * C188 + C4103 * C183 + C92067 * C189) *
                C92099) *
               C92137 * C9514 +
           ((C4102 * C1389 + C4097 * C1401 + C4103 * C1388 + C92067 * C1400) *
                C181 +
            (C4102 * C1471 + C4097 * C1479 + C4103 * C1470 + C92067 * C1478) *
                C92099) *
               C92137 * C9515 +
           ((C4102 * C1390 + C4097 * C1402 + C4103 * C1391 + C92067 * C1403) *
                C181 +
            (C4102 * C1472 + C4097 * C1480 + C4103 * C1473 + C92067 * C1481) *
                C92099) *
               C92137 * C9516) *
              C93 -
          (((C4103 * C1474 + C92067 * C1482 + C4102 * C1473 + C4097 * C1481) *
                C92099 +
            (C4103 * C1392 + C92067 * C1404 + C4102 * C1391 + C4097 * C1403) *
                C181) *
               C92137 * C9516 +
           ((C4103 * C1469 + C92067 * C1477 + C4102 * C1470 + C4097 * C1478) *
                C92099 +
            (C4103 * C1387 + C92067 * C1399 + C4102 * C1388 + C4097 * C1400) *
                C181) *
               C92137 * C9515 +
           ((C4103 * C184 + C92067 * C190 + C4102 * C183 + C4097 * C189) *
                C92099 +
            (C4103 * C109 + C92067 * C115 + C4102 * C108 + C4097 * C114) *
                C181) *
               C92137 * C9514) *
              C94 +
          (((C4102 * C109 + C4097 * C115 + C4103 * C110 + C92067 * C116) *
                C181 +
            (C4102 * C184 + C4097 * C190 + C4103 * C185 + C92067 * C191) *
                C92099) *
               C92137 * C9514 +
           ((C4102 * C1387 + C4097 * C1399 + C4103 * C1386 + C92067 * C1398) *
                C181 +
            (C4102 * C1469 + C4097 * C1477 + C4103 * C1468 + C92067 * C1476) *
                C92099) *
               C92137 * C9515 +
           ((C4102 * C1392 + C4097 * C1404 + C4103 * C1393 + C92067 * C1405) *
                C181 +
            (C4102 * C1474 + C4097 * C1482 + C4103 * C1475 + C92067 * C1483) *
                C92099) *
               C92137 * C9516) *
              C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C4102 * C107 + C4097 * C113 + C4103 * C108 + C92067 * C114) * C884 +
           (C4102 * C182 + C4097 * C188 + C4103 * C183 + C92067 * C189) * C798 -
           (C4923 + C4922) * C885 - (C5033 + C5034) * C799 + C4934 * C886 +
           C5039 * C800) *
              C92137 * C9514 +
          ((C4102 * C1389 + C4097 * C1401 + C4103 * C1388 + C92067 * C1400) *
               C884 +
           (C4102 * C1471 + C4097 * C1479 + C4103 * C1470 + C92067 * C1478) *
               C798 -
           (C8567 + C8568) * C885 - (C8680 + C8679) * C799 +
           (C8564 + C8563) * C886 + (C8681 + C8682) * C800) *
              C92137 * C9515 +
          ((C4102 * C1390 + C4097 * C1402 + C4103 * C1391 + C92067 * C1403) *
               C884 +
           (C4102 * C1472 + C4097 * C1480 + C4103 * C1473 + C92067 * C1481) *
               C798 -
           (C4103 * C5774 + C92067 * C5782 + C4102 * C5773 + C4097 * C5781) *
               C885 -
           (C4103 * C5872 + C92067 * C5878 + C4102 * C5871 + C4097 * C5877) *
               C799 +
           (C4102 * C5775 + C4097 * C5785 + C4103 * C5776 + C92067 * C5786) *
               C886 +
           (C4102 * C5873 + C4097 * C5879 + C4103 * C5874 + C92067 * C5880) *
               C800) *
              C92137 * C9516) *
         C92078 * C92110) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C92067 * C114) *
                C181 +
            (C4102 * C182 + C4097 * C188 + C4103 * C183 + C92067 * C189) *
                C92099) *
               C92137 * C9514 +
           ((C11001 + C11002) * C181 + (C11114 + C11115) * C92099) * C92137 *
               C9515 +
           C11123 * C9516) *
              C92078 * C1383 -
          (((C11118 + C11119) * C92099 + (C11011 + C11012) * C181) * C92137 *
               C9516 +
           ((C11117 + C11116) * C92099 + (C11006 + C11005) * C181) * C92137 *
               C9515 +
           ((C11115 + C11114) * C92099 + (C11002 + C11001) * C181) * C92137 *
               C9514) *
              C92078 * C1384 +
          (C11123 * C9514 +
           ((C11012 + C11011) * C181 + (C11119 + C11118) * C92099) * C92137 *
               C9515 +
           ((C4102 * C10962 + C4097 * C10968 + C4103 * C10963 +
             C92067 * C10969) *
                C181 +
            (C4102 * C11094 + C4097 * C11098 + C4103 * C11095 +
             C92067 * C11099) *
                C92099) *
               C92137 * C9516) *
              C92078 * C1385)) /
            (p * q * std::sqrt(p + q));
    d2eexz[12] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((C100 * C107 + C89 * C113 + C101 * C108 + C90 * C114 +
                C102 * C109 + C91 * C115 + C103 * C110 + C92 * C116) *
                   C244 +
               (C100 * C245 + C89 * C251 + C101 * C246 + C90 * C252 +
                C102 * C247 + C91 * C253 + C103 * C248 + C92 * C254) *
                   C92110) *
                  C92137 * C92148 * C92099 * C93 -
              ((C103 * C249 + C92 * C255 + C102 * C248 + C91 * C254 +
                C101 * C247 + C90 * C253 + C100 * C246 + C89 * C252) *
                   C92110 +
               (C103 * C111 + C92 * C121 + C102 * C110 + C91 * C116 +
                C101 * C109 + C90 * C115 + C100 * C108 + C89 * C114) *
                   C244) *
                  C92137 * C92148 * C92099 * C94 +
              ((C100 * C109 + C89 * C115 + C101 * C110 + C90 * C116 +
                C102 * C111 + C91 * C121 + C103 * C112 + C92 * C123) *
                   C244 +
               (C100 * C247 + C89 * C253 + C101 * C248 + C90 * C254 +
                C102 * C249 + C91 * C255 + C103 * C250 + C92 * C256) *
                   C92110) *
                  C92137 * C92148 * C92099 * C95) +
         0.5 * std::pow(Pi, 2.5) *
             (((C100 * C107 + C89 * C113 + C101 * C108 + C90 * C114 +
                C102 * C109 + C91 * C115 + C103 * C110 + C92 * C116) *
                   C244 +
               (C100 * C245 + C89 * C251 + C101 * C246 + C90 * C252 +
                C102 * C247 + C91 * C253 + C103 * C248 + C92 * C254) *
                   C92110) *
                  C92137 * C92148 * C798 -
              ((C103 * C953 + C92 * C961 + C102 * C954 + C91 * C962 +
                C101 * C955 + C90 * C963 + C100 * C956 + C89 * C964) *
                   C92110 +
               (C103 * C802 + C92 * C814 + C102 * C803 + C91 * C815 +
                C101 * C804 + C90 * C816 + C100 * C805 + C89 * C817) *
                   C244) *
                  C92137 * C92148 * C799 +
              ((C100 * C806 + C89 * C818 + C101 * C807 + C90 * C819 +
                C102 * C808 + C91 * C820 + C103 * C809 + C92 * C821) *
                   C244 +
               (C100 * C957 + C89 * C965 + C101 * C958 + C90 * C966 +
                C102 * C959 + C91 * C967 + C103 * C960 + C92 * C968) *
                   C92110) *
                  C92137 * C92148 * C800) *
             C92078) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((C100 * C107 + C89 * C113 + C101 * C108 + C90 * C114 + C102 * C109 +
           C91 * C115 + C103 * C110 + C92 * C116) *
              C1534 +
          (C100 * C245 + C89 * C251 + C101 * C246 + C90 * C252 + C102 * C247 +
           C91 * C253 + C103 * C248 + C92 * C254) *
              C1383 -
          (C103 * C1386 + C92 * C1398 + C102 * C1387 + C91 * C1399 +
           C101 * C1388 + C90 * C1400 + C100 * C1389 + C89 * C1401) *
              C1535 -
          (C103 * C1537 + C92 * C1545 + C102 * C1538 + C91 * C1546 +
           C101 * C1539 + C90 * C1547 + C100 * C1540 + C89 * C1548) *
              C1384 +
          (C100 * C1390 + C89 * C1402 + C101 * C1391 + C90 * C1403 +
           C102 * C1392 + C91 * C1404 + C103 * C1393 + C92 * C1405) *
              C1536 +
          (C100 * C1541 + C89 * C1549 + C101 * C1542 + C90 * C1550 +
           C102 * C1543 + C91 * C1551 + C103 * C1544 + C92 * C1552) *
              C1385) *
         C92137 * C92148 * C92099 * C92078) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C92067 * C114) *
                C244 +
            (C4102 * C245 + C4097 * C251 + C4103 * C246 + C92067 * C252) *
                C92110) *
               C4099 +
           ((C4102 * C805 + C4097 * C817 + C4103 * C804 + C92067 * C816) *
                C244 +
            (C4102 * C956 + C4097 * C964 + C4103 * C955 + C92067 * C963) *
                C92110) *
               C4100 +
           ((C4102 * C806 + C4097 * C818 + C4103 * C807 + C92067 * C819) *
                C244 +
            (C4102 * C957 + C4097 * C965 + C4103 * C958 + C92067 * C966) *
                C92110) *
               C4101) *
              C92148 * C92099 * C93 -
          (((C4103 * C959 + C92067 * C967 + C4102 * C958 + C4097 * C966) *
                C92110 +
            (C4103 * C808 + C92067 * C820 + C4102 * C807 + C4097 * C819) *
                C244) *
               C4101 +
           ((C4103 * C954 + C92067 * C962 + C4102 * C955 + C4097 * C963) *
                C92110 +
            (C4103 * C803 + C92067 * C815 + C4102 * C804 + C4097 * C816) *
                C244) *
               C4100 +
           ((C4103 * C247 + C92067 * C253 + C4102 * C246 + C4097 * C252) *
                C92110 +
            (C4103 * C109 + C92067 * C115 + C4102 * C108 + C4097 * C114) *
                C244) *
               C4099) *
              C92148 * C92099 * C94 +
          (((C4102 * C109 + C4097 * C115 + C4103 * C110 + C92067 * C116) *
                C244 +
            (C4102 * C247 + C4097 * C253 + C4103 * C248 + C92067 * C254) *
                C92110) *
               C4099 +
           ((C4102 * C803 + C4097 * C815 + C4103 * C802 + C92067 * C814) *
                C244 +
            (C4102 * C954 + C4097 * C962 + C4103 * C953 + C92067 * C961) *
                C92110) *
               C4100 +
           ((C4102 * C808 + C4097 * C820 + C4103 * C809 + C92067 * C821) *
                C244 +
            (C4102 * C959 + C4097 * C967 + C4103 * C960 + C92067 * C968) *
                C92110) *
               C4101) *
              C92148 * C92099 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C92067 * C114) *
                C244 +
            (C4102 * C245 + C4097 * C251 + C4103 * C246 + C92067 * C252) *
                C92110) *
               C4099 +
           ((C4922 + C4923) * C244 + (C5135 + C5136) * C92110) * C4100 +
           C5143 * C4101) *
              C92148 * C798 -
          (((C5139 + C5140) * C92110 + (C4932 + C4933) * C244) * C4101 +
           ((C5138 + C5137) * C92110 + (C4927 + C4926) * C244) * C4100 +
           ((C5136 + C5135) * C92110 + (C4923 + C4922) * C244) * C4099) *
              C92148 * C799 +
          (C5143 * C4099 +
           ((C4933 + C4932) * C244 + (C5140 + C5139) * C92110) * C4100 +
           ((C4102 * C4883 + C4097 * C4889 + C4103 * C4884 + C92067 * C4890) *
                C244 +
            (C4102 * C5115 + C4097 * C5119 + C4103 * C5116 + C92067 * C5120) *
                C92110) *
               C4101) *
              C92148 * C800) *
         C92078) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C4102 * C107 + C4097 * C113 + C4103 * C108 + C92067 * C114) *
               C1534 +
           (C4102 * C245 + C4097 * C251 + C4103 * C246 + C92067 * C252) *
               C1383 -
           (C4103 * C1388 + C92067 * C1400 + C4102 * C1389 + C4097 * C1401) *
               C1535 -
           (C4103 * C1539 + C92067 * C1547 + C4102 * C1540 + C4097 * C1548) *
               C1384 +
           (C4102 * C1390 + C4097 * C1402 + C4103 * C1391 + C92067 * C1403) *
               C1536 +
           (C4102 * C1541 + C4097 * C1549 + C4103 * C1542 + C92067 * C1550) *
               C1385) *
              C4099 +
          ((C4922 + C4923) * C1534 + (C5135 + C5136) * C1383 -
           (C4103 * C3432 + C92067 * C3436 + C4102 * C3431 + C4097 * C3435) *
               C1535 -
           (C4103 * C3588 + C92067 * C3592 + C4102 * C3587 + C4097 * C3591) *
               C1384 +
           (C4102 * C5773 + C4097 * C5781 + C4103 * C5774 + C92067 * C5782) *
               C1536 +
           (C4102 * C5955 + C4097 * C5961 + C4103 * C5956 + C92067 * C5962) *
               C1385) *
              C4100 +
          (C4934 * C1534 + C5141 * C1383 -
           (C4103 * C5771 + C92067 * C5779 + C4102 * C5772 + C4097 * C5780) *
               C1535 -
           (C4103 * C5957 + C92067 * C5963 + C4102 * C5958 + C4097 * C5964) *
               C1384 +
           (C4102 * C5775 + C4097 * C5785 + C4103 * C5776 + C92067 * C5786) *
               C1536 +
           (C4102 * C5959 + C4097 * C5965 + C4103 * C5960 + C92067 * C5966) *
               C1385) *
              C4101) *
         C92148 * C92099 * C92078) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C92067 * C114) *
                C244 +
            (C4102 * C245 + C4097 * C251 + C4103 * C246 + C92067 * C252) *
                C92110) *
               C92137 * C9514 +
           ((C4102 * C1389 + C4097 * C1401 + C4103 * C1388 + C92067 * C1400) *
                C244 +
            (C4102 * C1540 + C4097 * C1548 + C4103 * C1539 + C92067 * C1547) *
                C92110) *
               C92137 * C9515 +
           ((C4102 * C1390 + C4097 * C1402 + C4103 * C1391 + C92067 * C1403) *
                C244 +
            (C4102 * C1541 + C4097 * C1549 + C4103 * C1542 + C92067 * C1550) *
                C92110) *
               C92137 * C9516) *
              C92099 * C93 -
          (((C4103 * C1543 + C92067 * C1551 + C4102 * C1542 + C4097 * C1550) *
                C92110 +
            (C4103 * C1392 + C92067 * C1404 + C4102 * C1391 + C4097 * C1403) *
                C244) *
               C92137 * C9516 +
           ((C4103 * C1538 + C92067 * C1546 + C4102 * C1539 + C4097 * C1547) *
                C92110 +
            (C4103 * C1387 + C92067 * C1399 + C4102 * C1388 + C4097 * C1400) *
                C244) *
               C92137 * C9515 +
           ((C4103 * C247 + C92067 * C253 + C4102 * C246 + C4097 * C252) *
                C92110 +
            (C4103 * C109 + C92067 * C115 + C4102 * C108 + C4097 * C114) *
                C244) *
               C92137 * C9514) *
              C92099 * C94 +
          (((C4102 * C109 + C4097 * C115 + C4103 * C110 + C92067 * C116) *
                C244 +
            (C4102 * C247 + C4097 * C253 + C4103 * C248 + C92067 * C254) *
                C92110) *
               C92137 * C9514 +
           ((C4102 * C1387 + C4097 * C1399 + C4103 * C1386 + C92067 * C1398) *
                C244 +
            (C4102 * C1538 + C4097 * C1546 + C4103 * C1537 + C92067 * C1545) *
                C92110) *
               C92137 * C9515 +
           ((C4102 * C1392 + C4097 * C1404 + C4103 * C1393 + C92067 * C1405) *
                C244 +
            (C4102 * C1543 + C4097 * C1551 + C4103 * C1544 + C92067 * C1552) *
                C92110) *
               C92137 * C9516) *
              C92099 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C92067 * C114) *
                C244 +
            (C4102 * C245 + C4097 * C251 + C4103 * C246 + C92067 * C252) *
                C92110) *
               C92137 * C9514 +
           ((C4102 * C1389 + C4097 * C1401 + C4103 * C1388 + C92067 * C1400) *
                C244 +
            (C4102 * C1540 + C4097 * C1548 + C4103 * C1539 + C92067 * C1547) *
                C92110) *
               C92137 * C9515 +
           ((C4102 * C1390 + C4097 * C1402 + C4103 * C1391 + C92067 * C1403) *
                C244 +
            (C4102 * C1541 + C4097 * C1549 + C4103 * C1542 + C92067 * C1550) *
                C92110) *
               C92137 * C9516) *
              C798 -
          (((C4103 * C5956 + C92067 * C5962 + C4102 * C5955 + C4097 * C5961) *
                C92110 +
            (C4103 * C5774 + C92067 * C5782 + C4102 * C5773 + C4097 * C5781) *
                C244) *
               C92137 * C9516 +
           ((C8793 + C8794) * C92110 + (C8567 + C8568) * C244) * C92137 *
               C9515 +
           ((C5136 + C5135) * C92110 + (C4923 + C4922) * C244) * C92137 *
               C9514) *
              C799 +
          (C5143 * C92137 * C9514 +
           ((C8564 + C8563) * C244 + (C8796 + C8795) * C92110) * C92137 *
               C9515 +
           ((C4102 * C5775 + C4097 * C5785 + C4103 * C5776 + C92067 * C5786) *
                C244 +
            (C4102 * C5959 + C4097 * C5965 + C4103 * C5960 + C92067 * C5966) *
                C92110) *
               C92137 * C9516) *
              C800) *
         C92078) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C4102 * C107 + C4097 * C113 + C4103 * C108 + C92067 * C114) *
               C1534 +
           (C4102 * C245 + C4097 * C251 + C4103 * C246 + C92067 * C252) *
               C1383 -
           (C11002 + C11001) * C1535 - (C11218 + C11219) * C1384 +
           C11013 * C1536 + C11224 * C1385) *
              C92137 * C9514 +
          ((C11001 + C11002) * C1534 + (C11219 + C11218) * C1383 -
           (C11006 + C11005) * C1535 - (C11221 + C11220) * C1384 +
           (C11012 + C11011) * C1536 + (C11222 + C11223) * C1385) *
              C92137 * C9515 +
          (C11013 * C1534 + C11224 * C1383 - (C11011 + C11012) * C1535 -
           (C11223 + C11222) * C1384 +
           (C4102 * C10962 + C4097 * C10968 + C4103 * C10963 +
            C92067 * C10969) *
               C1536 +
           (C4102 * C11199 + C4097 * C11203 + C4103 * C11200 +
            C92067 * C11204) *
               C1385) *
              C92137 * C9516) *
         C92099 * C92078) /
            (p * q * std::sqrt(p + q));
    d2eeyx[12] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((C307 * C107 + C92137 * C308) * C104 +
               (C307 * C117 + C92137 * C314) * C93 - C337 * C105 - C338 * C94 +
               C339 * C106 + C340 * C95) *
                  C92148 * C89 +
              (C337 * C104 + C338 * C93 - C339 * C105 - C340 * C94 +
               C341 * C106 + C342 * C95) *
                  C92148 * C90 +
              (C339 * C104 + C340 * C93 - C341 * C105 - C342 * C94 +
               C343 * C106 + C344 * C95) *
                  C92148 * C91 +
              (C341 * C104 + C342 * C93 - C343 * C105 - C344 * C94 +
               (C307 * C112 + C92137 * C313) * C106 +
               (C307 * C124 + C92137 * C319) * C95) *
                  C92148 * C92) *
             C92110 * C92099 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C307 * C107 + C92137 * C308) * C801 +
                (C307 * C117 + C92137 * C314) * C92078) *
                   C92148 * C89 +
               (C337 * C801 + C338 * C92078) * C92148 * C90 +
               (C339 * C801 + C340 * C92078) * C92148 * C91 +
               (C341 * C801 + C342 * C92078) * C92148 * C92) *
                  C92110 * C798 -
              (((C307 * C810 + C92137 * C1027) * C92078 +
                (C307 * C802 + C92137 * C1019) * C801) *
                   C92148 * C92 +
               ((C307 * C811 + C92137 * C1028) * C92078 +
                (C307 * C803 + C92137 * C1020) * C801) *
                   C92148 * C91 +
               ((C307 * C812 + C92137 * C1029) * C92078 +
                (C307 * C804 + C92137 * C1021) * C801) *
                   C92148 * C90 +
               ((C307 * C813 + C92137 * C1030) * C92078 +
                (C307 * C805 + C92137 * C1022) * C801) *
                   C92148 * C89) *
                  C92110 * C799 +
              (((C307 * C806 + C92137 * C1023) * C801 +
                (C307 * C822 + C92137 * C1031) * C92078) *
                   C92148 * C89 +
               ((C307 * C807 + C92137 * C1024) * C801 +
                (C307 * C823 + C92137 * C1032) * C92078) *
                   C92148 * C90 +
               ((C307 * C808 + C92137 * C1025) * C801 +
                (C307 * C824 + C92137 * C1033) * C92078) *
                   C92148 * C91 +
               ((C307 * C809 + C92137 * C1026) * C801 +
                (C307 * C825 + C92137 * C1034) * C92078) *
                   C92148 * C92) *
                  C92110 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C307 * C107 + C92137 * C308) * C801 +
            (C307 * C117 + C92137 * C314) * C92078) *
               C92148 * C89 +
           (C337 * C801 + C338 * C92078) * C92148 * C90 +
           (C339 * C801 + C340 * C92078) * C92148 * C91 +
           (C341 * C801 + C342 * C92078) * C92148 * C92) *
              C1383 -
          (((C307 * C1394 + C92137 * C1611) * C92078 +
            (C307 * C1386 + C92137 * C1603) * C801) *
               C92148 * C92 +
           ((C307 * C1395 + C92137 * C1612) * C92078 +
            (C307 * C1387 + C92137 * C1604) * C801) *
               C92148 * C91 +
           ((C307 * C1396 + C92137 * C1613) * C92078 +
            (C307 * C1388 + C92137 * C1605) * C801) *
               C92148 * C90 +
           ((C307 * C1397 + C92137 * C1614) * C92078 +
            (C307 * C1389 + C92137 * C1606) * C801) *
               C92148 * C89) *
              C1384 +
          (((C307 * C1390 + C92137 * C1607) * C801 +
            (C307 * C1406 + C92137 * C1615) * C92078) *
               C92148 * C89 +
           ((C307 * C1391 + C92137 * C1608) * C801 +
            (C307 * C1407 + C92137 * C1616) * C92078) *
               C92148 * C90 +
           ((C307 * C1392 + C92137 * C1609) * C801 +
            (C307 * C1408 + C92137 * C1617) * C92078) *
               C92148 * C91 +
           ((C307 * C1393 + C92137 * C1610) * C801 +
            (C307 * C1409 + C92137 * C1618) * C92078) *
               C92148 * C92) *
              C1385) *
         C92099) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C4326 * C107 + C4099 * C308 + C4327 * C805 + C4100 * C1022 +
            C4328 * C806 + C4101 * C1023) *
               C104 +
           (C4326 * C117 + C4099 * C314 + C4327 * C813 + C4100 * C1030 +
            C4328 * C822 + C4101 * C1031) *
               C93 -
           (C4354 + C4355 + C4356) * C105 - (C4357 + C4358 + C4359) * C94 +
           (C4360 + C4361 + C4362) * C106 + (C4363 + C4364 + C4365) * C95) *
              C92148 * C4097 +
          ((C4356 + C4355 + C4354) * C104 + (C4359 + C4358 + C4357) * C93 -
           (C4362 + C4361 + C4360) * C105 - (C4365 + C4364 + C4363) * C94 +
           (C4326 * C110 + C4099 * C311 + C4327 * C802 + C4100 * C1019 +
            C4328 * C809 + C4101 * C1026) *
               C106 +
           (C4326 * C120 + C4099 * C317 + C4327 * C810 + C4100 * C1027 +
            C4328 * C825 + C4101 * C1034) *
               C95) *
              C92148 * C92067) *
         C92110 * C92099) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C4326 * C107 + C4099 * C308 + C4327 * C805 + C4100 * C1022 +
             C4328 * C806 + C4101 * C1023) *
                C801 +
            (C4326 * C117 + C4099 * C314 + C4327 * C813 + C4100 * C1030 +
             C4328 * C822 + C4101 * C1031) *
                C92078) *
               C92148 * C4097 +
           ((C4356 + C4355 + C4354) * C801 + (C4359 + C4358 + C4357) * C92078) *
               C92148 * C92067) *
              C92110 * C798 -
          (((C4328 * C4885 + C4101 * C5221 + C4327 * C823 + C4100 * C1032 +
             C4326 * C812 + C4099 * C1029) *
                C92078 +
            (C4328 * C4881 + C4101 * C5217 + C4327 * C807 + C4100 * C1024 +
             C4326 * C804 + C4099 * C1021) *
                C801) *
               C92148 * C92067 +
           ((C4328 * C4886 + C4101 * C5222 + C4327 * C822 + C4100 * C1031 +
             C4326 * C813 + C4099 * C1030) *
                C92078 +
            (C4328 * C4882 + C4101 * C5218 + C4327 * C806 + C4100 * C1023 +
             C4326 * C805 + C4099 * C1022) *
                C801) *
               C92148 * C4097) *
              C92110 * C799 +
          (((C4326 * C806 + C4099 * C1023 + C4327 * C4882 + C4100 * C5218 +
             C4328 * C4883 + C4101 * C5219) *
                C801 +
            (C4326 * C822 + C4099 * C1031 + C4327 * C4886 + C4100 * C5222 +
             C4328 * C4891 + C4101 * C5223) *
                C92078) *
               C92148 * C4097 +
           ((C4326 * C807 + C4099 * C1024 + C4327 * C4881 + C4100 * C5217 +
             C4328 * C4884 + C4101 * C5220) *
                C801 +
            (C4326 * C823 + C4099 * C1032 + C4327 * C4885 + C4100 * C5221 +
             C4328 * C4892 + C4101 * C5224) *
                C92078) *
               C92148 * C92067) *
              C92110 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C4326 * C107 + C4099 * C308 + C4327 * C805 + C4100 * C1022 +
             C4328 * C806 + C4101 * C1023) *
                C801 +
            (C4326 * C117 + C4099 * C314 + C4327 * C813 + C4100 * C1030 +
             C4328 * C822 + C4101 * C1031) *
                C92078) *
               C92148 * C4097 +
           ((C4356 + C4355 + C4354) * C801 + (C4359 + C4358 + C4357) * C92078) *
               C92148 * C92067) *
              C1383 -
          (((C4328 * C5777 + C4101 * C6047 + C4327 * C3440 + C4100 * C3666 +
             C4326 * C1396 + C4099 * C1613) *
                C92078 +
            (C4328 * C5771 + C4101 * C6041 + C4327 * C3432 + C4100 * C3662 +
             C4326 * C1388 + C4099 * C1605) *
                C801) *
               C92148 * C92067 +
           ((C4328 * C5778 + C4101 * C6048 + C4327 * C3439 + C4100 * C3665 +
             C4326 * C1397 + C4099 * C1614) *
                C92078 +
            (C4328 * C5772 + C4101 * C6042 + C4327 * C3431 + C4100 * C3661 +
             C4326 * C1389 + C4099 * C1606) *
                C801) *
               C92148 * C4097) *
              C1384 +
          (((C4326 * C1390 + C4099 * C1607 + C4327 * C5773 + C4100 * C6043 +
             C4328 * C5775 + C4101 * C6044) *
                C801 +
            (C4326 * C1406 + C4099 * C1615 + C4327 * C5783 + C4100 * C6049 +
             C4328 * C5787 + C4101 * C6050) *
                C92078) *
               C92148 * C4097 +
           ((C4326 * C1391 + C4099 * C1608 + C4327 * C5774 + C4100 * C6045 +
             C4328 * C5776 + C4101 * C6046) *
                C801 +
            (C4326 * C1407 + C4099 * C1616 + C4327 * C5784 + C4100 * C6051 +
             C4328 * C5788 + C4101 * C6052) *
                C92078) *
               C92148 * C92067) *
              C1385) *
         C92099) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C307 * C107 + C92137 * C308) * C104 +
            (C307 * C117 + C92137 * C314) * C93 - C337 * C105 - C338 * C94 +
            C339 * C106 + C340 * C95) *
               C9514 +
           ((C307 * C1389 + C92137 * C1606) * C104 +
            (C307 * C1397 + C92137 * C1614) * C93 - C2934 * C105 - C2935 * C94 +
            C2936 * C106 + C2937 * C95) *
               C9515 +
           ((C307 * C1390 + C92137 * C1607) * C104 +
            (C307 * C1406 + C92137 * C1615) * C93 - C9748 * C105 - C9749 * C94 +
            C9750 * C106 + C9751 * C95) *
               C9516) *
              C4097 +
          ((C337 * C104 + C338 * C93 - C339 * C105 - C340 * C94 + C341 * C106 +
            C342 * C95) *
               C9514 +
           (C2934 * C104 + C2935 * C93 - C2936 * C105 - C2937 * C94 +
            C2938 * C106 + C2939 * C95) *
               C9515 +
           (C9748 * C104 + C9749 * C93 - C9750 * C105 - C9751 * C94 +
            (C307 * C1393 + C92137 * C1610) * C106 +
            (C307 * C1409 + C92137 * C1618) * C95) *
               C9516) *
              C92067) *
         C92110 * C92099) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) * (((((C307 * C107 + C92137 * C308) * C801 +
                                 (C307 * C117 + C92137 * C314) * C92078) *
                                    C9514 +
                                ((C307 * C1389 + C92137 * C1606) * C801 +
                                 (C307 * C1397 + C92137 * C1614) * C92078) *
                                    C9515 +
                                ((C307 * C1390 + C92137 * C1607) * C801 +
                                 (C307 * C1406 + C92137 * C1615) * C92078) *
                                    C9516) *
                                   C4097 +
                               ((C337 * C801 + C338 * C92078) * C9514 +
                                (C2934 * C801 + C2935 * C92078) * C9515 +
                                (C9748 * C801 + C9749 * C92078) * C9516) *
                                   C92067) *
                                  C92110 * C798 -
                              ((((C307 * C5784 + C92137 * C6051) * C92078 +
                                 (C307 * C5774 + C92137 * C6045) * C801) *
                                    C9516 +
                                ((C307 * C3440 + C92137 * C3666) * C92078 +
                                 (C307 * C3432 + C92137 * C3662) * C801) *
                                    C9515 +
                                (C2213 * C92078 + C2212 * C801) * C9514) *
                                   C92067 +
                               (((C307 * C5783 + C92137 * C6049) * C92078 +
                                 (C307 * C5773 + C92137 * C6043) * C801) *
                                    C9516 +
                                ((C307 * C3439 + C92137 * C3665) * C92078 +
                                 (C307 * C3431 + C92137 * C3661) * C801) *
                                    C9515 +
                                ((C307 * C813 + C92137 * C1030) * C92078 +
                                 (C307 * C805 + C92137 * C1022) * C801) *
                                    C9514) *
                                   C4097) *
                                  C92110 * C799 +
                              ((((C307 * C806 + C92137 * C1023) * C801 +
                                 (C307 * C822 + C92137 * C1031) * C92078) *
                                    C9514 +
                                ((C307 * C5772 + C92137 * C6042) * C801 +
                                 (C307 * C5778 + C92137 * C6048) * C92078) *
                                    C9515 +
                                ((C307 * C5775 + C92137 * C6044) * C801 +
                                 (C307 * C5787 + C92137 * C6050) * C92078) *
                                    C9516) *
                                   C4097 +
                               (((C307 * C807 + C92137 * C1024) * C801 +
                                 (C307 * C823 + C92137 * C1032) * C92078) *
                                    C9514 +
                                ((C307 * C5771 + C92137 * C6041) * C801 +
                                 (C307 * C5777 + C92137 * C6047) * C92078) *
                                    C9515 +
                                ((C307 * C5776 + C92137 * C6046) * C801 +
                                 (C307 * C5788 + C92137 * C6052) * C92078) *
                                    C9516) *
                                   C92067) *
                                  C92110 * C800)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92137 * C308) * C801 +
             (C307 * C117 + C92137 * C314) * C92078) *
                C9514 +
            (C11336 + C11337) * C9515 + C11344 * C9516) *
               C4097 +
           ((C337 * C801 + C338 * C92078) * C9514 + (C11315 + C11316) * C9515 +
            C11331 * C9516) *
               C92067) *
              C1383 -
          (((C11340 + C11341) * C9516 + (C11318 + C11317) * C9515 +
            (C11316 + C11315) * C9514) *
               C92067 +
           ((C11342 + C11343) * C9516 + (C11339 + C11338) * C9515 +
            (C11337 + C11336) * C9514) *
               C4097) *
              C1384 +
          ((C11344 * C9514 + (C11343 + C11342) * C9515 +
            ((C307 * C10962 + C92137 * C11300) * C801 +
             (C307 * C10970 + C92137 * C11304) * C92078) *
                C9516) *
               C4097 +
           (C11331 * C9514 + (C11341 + C11340) * C9515 +
            ((C307 * C10963 + C92137 * C11301) * C801 +
             (C307 * C10971 + C92137 * C11305) * C92078) *
                C9516) *
               C92067) *
              C1385) *
         C92099) /
            (p * q * std::sqrt(p + q));
    d2eeyy[12] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C307 * C107 + C92137 * C308) * C181 +
                (C307 * C182 + C92137 * C394) * C92099) *
                   C92148 * C89 +
               (C401 + C417) * C92148 * C90 + C423 * C91 + C424 * C92) *
                  C93 -
              ((C420 + C412) * C92148 * C92 + (C419 + C407) * C92148 * C91 +
               (C418 + C404) * C92148 * C90 + (C417 + C401) * C92148 * C89) *
                  C94 +
              (C423 * C89 + C424 * C90 + (C412 + C420) * C92148 * C91 +
               ((C307 * C112 + C92137 * C313) * C181 +
                (C307 * C187 + C92137 * C399) * C92099) *
                   C92148 * C92) *
                  C95) *
             C92110 +
         0.5 * std::pow(Pi, 2.5) *
             (((C307 * C107 + C92137 * C308) * C884 +
               (C307 * C182 + C92137 * C394) * C798 -
               (C307 * C805 + C92137 * C1022) * C885 -
               (C307 * C890 + C92137 * C1085) * C799 +
               (C307 * C806 + C92137 * C1023) * C886 +
               (C307 * C891 + C92137 * C1086) * C800) *
                  C92148 * C89 +
              (C337 * C884 + C413 * C798 -
               (C307 * C804 + C92137 * C1021) * C885 -
               (C307 * C889 + C92137 * C1087) * C799 +
               (C307 * C807 + C92137 * C1024) * C886 +
               (C307 * C892 + C92137 * C1088) * C800) *
                  C92148 * C90 +
              (C339 * C884 + C414 * C798 -
               (C307 * C803 + C92137 * C1020) * C885 -
               (C307 * C888 + C92137 * C1089) * C799 +
               (C307 * C808 + C92137 * C1025) * C886 +
               (C307 * C893 + C92137 * C1090) * C800) *
                  C92148 * C91 +
              (C341 * C884 + C415 * C798 -
               (C307 * C802 + C92137 * C1019) * C885 -
               (C307 * C887 + C92137 * C1091) * C799 +
               (C307 * C809 + C92137 * C1026) * C886 +
               (C307 * C894 + C92137 * C1092) * C800) *
                  C92148 * C92) *
             C92078 * C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C307 * C107 + C92137 * C308) * C181 +
            (C307 * C182 + C92137 * C394) * C92099) *
               C92148 * C89 +
           (C401 + C417) * C92148 * C90 + C423 * C91 + C424 * C92) *
              C92078 * C1383 -
          (((C307 * C1468 + C92137 * C1669) * C92099 +
            (C307 * C1386 + C92137 * C1603) * C181) *
               C92148 * C92 +
           ((C307 * C1469 + C92137 * C1670) * C92099 +
            (C307 * C1387 + C92137 * C1604) * C181) *
               C92148 * C91 +
           ((C307 * C1470 + C92137 * C1671) * C92099 +
            (C307 * C1388 + C92137 * C1605) * C181) *
               C92148 * C90 +
           ((C307 * C1471 + C92137 * C1672) * C92099 +
            (C307 * C1389 + C92137 * C1606) * C181) *
               C92148 * C89) *
              C92078 * C1384 +
          (((C307 * C1390 + C92137 * C1607) * C181 +
            (C307 * C1472 + C92137 * C1673) * C92099) *
               C92148 * C89 +
           ((C307 * C1391 + C92137 * C1608) * C181 +
            (C307 * C1473 + C92137 * C1674) * C92099) *
               C92148 * C90 +
           ((C307 * C1392 + C92137 * C1609) * C181 +
            (C307 * C1474 + C92137 * C1675) * C92099) *
               C92148 * C91 +
           ((C307 * C1393 + C92137 * C1610) * C181 +
            (C307 * C1475 + C92137 * C1676) * C92099) *
               C92148 * C92) *
              C92078 * C1385)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C4326 * C107 + C4099 * C308 + C4327 * C805 + C4100 * C1022 +
             C4328 * C806 + C4101 * C1023) *
                C181 +
            (C4326 * C182 + C4099 * C394 + C4327 * C890 + C4100 * C1085 +
             C4328 * C891 + C4101 * C1086) *
                C92099) *
               C92148 * C4097 +
           ((C4356 + C4355 + C4354) * C181 + (C4452 + C4453 + C4454) * C92099) *
               C92148 * C92067) *
              C93 -
          (((C4455 + C4456 + C4457) * C92099 + (C4362 + C4361 + C4360) * C181) *
               C92148 * C92067 +
           ((C4454 + C4453 + C4452) * C92099 + (C4354 + C4355 + C4356) * C181) *
               C92148 * C4097) *
              C94 +
          (((C4360 + C4361 + C4362) * C181 + (C4457 + C4456 + C4455) * C92099) *
               C92148 * C4097 +
           ((C4326 * C110 + C4099 * C311 + C4327 * C802 + C4100 * C1019 +
             C4328 * C809 + C4101 * C1026) *
                C181 +
            (C4326 * C185 + C4099 * C397 + C4327 * C887 + C4100 * C1091 +
             C4328 * C894 + C4101 * C1092) *
                C92099) *
               C92148 * C92067) *
              C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C4326 * C107 + C4099 * C308 + C4327 * C805 + C4100 * C1022 +
            C4328 * C806 + C4101 * C1023) *
               C884 +
           (C4326 * C182 + C4099 * C394 + C4327 * C890 + C4100 * C1085 +
            C4328 * C891 + C4101 * C1086) *
               C798 -
           (C4328 * C4882 + C4101 * C5218 + C4327 * C806 + C4100 * C1023 +
            C4326 * C805 + C4099 * C1022) *
               C885 -
           (C4328 * C5012 + C4101 * C5299 + C4327 * C891 + C4100 * C1086 +
            C4326 * C890 + C4099 * C1085) *
               C799 +
           (C4326 * C806 + C4099 * C1023 + C4327 * C4882 + C4100 * C5218 +
            C4328 * C4883 + C4101 * C5219) *
               C886 +
           (C4326 * C891 + C4099 * C1086 + C4327 * C5012 + C4100 * C5299 +
            C4328 * C5014 + C4101 * C5300) *
               C800) *
              C92148 * C4097 +
          ((C4356 + C4355 + C4354) * C884 + (C4452 + C4453 + C4454) * C798 -
           (C4328 * C4881 + C4101 * C5217 + C4327 * C807 + C4100 * C1024 +
            C4326 * C804 + C4099 * C1021) *
               C885 -
           (C4328 * C5013 + C4101 * C5301 + C4327 * C892 + C4100 * C1088 +
            C4326 * C889 + C4099 * C1087) *
               C799 +
           (C4326 * C807 + C4099 * C1024 + C4327 * C4881 + C4100 * C5217 +
            C4328 * C4884 + C4101 * C5220) *
               C886 +
           (C4326 * C892 + C4099 * C1088 + C4327 * C5013 + C4100 * C5301 +
            C4328 * C5015 + C4101 * C5302) *
               C800) *
              C92148 * C92067) *
         C92078 * C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C4326 * C107 + C4099 * C308 + C4327 * C805 + C4100 * C1022 +
             C4328 * C806 + C4101 * C1023) *
                C181 +
            (C4326 * C182 + C4099 * C394 + C4327 * C890 + C4100 * C1085 +
             C4328 * C891 + C4101 * C1086) *
                C92099) *
               C92148 * C4097 +
           ((C4356 + C4355 + C4354) * C181 + (C4452 + C4453 + C4454) * C92099) *
               C92148 * C92067) *
              C92078 * C1383 -
          (((C4328 * C5869 + C4101 * C6127 + C4327 * C3514 + C4100 * C3736 +
             C4326 * C1470 + C4099 * C1671) *
                C92099 +
            (C4328 * C5771 + C4101 * C6041 + C4327 * C3432 + C4100 * C3662 +
             C4326 * C1388 + C4099 * C1605) *
                C181) *
               C92148 * C92067 +
           ((C4328 * C5870 + C4101 * C6128 + C4327 * C3513 + C4100 * C3735 +
             C4326 * C1471 + C4099 * C1672) *
                C92099 +
            (C4328 * C5772 + C4101 * C6042 + C4327 * C3431 + C4100 * C3661 +
             C4326 * C1389 + C4099 * C1606) *
                C181) *
               C92148 * C4097) *
              C92078 * C1384 +
          (((C4326 * C1390 + C4099 * C1607 + C4327 * C5773 + C4100 * C6043 +
             C4328 * C5775 + C4101 * C6044) *
                C181 +
            (C4326 * C1472 + C4099 * C1673 + C4327 * C5871 + C4100 * C6129 +
             C4328 * C5873 + C4101 * C6130) *
                C92099) *
               C92148 * C4097 +
           ((C4326 * C1391 + C4099 * C1608 + C4327 * C5774 + C4100 * C6045 +
             C4328 * C5776 + C4101 * C6046) *
                C181 +
            (C4326 * C1473 + C4099 * C1674 + C4327 * C5872 + C4100 * C6131 +
             C4328 * C5874 + C4101 * C6132) *
                C92099) *
               C92148 * C92067) *
              C92078 * C1385)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92137 * C308) * C181 +
             (C307 * C182 + C92137 * C394) * C92099) *
                C9514 +
            ((C307 * C1389 + C92137 * C1606) * C181 +
             (C307 * C1471 + C92137 * C1672) * C92099) *
                C9515 +
            ((C307 * C1390 + C92137 * C1607) * C181 +
             (C307 * C1472 + C92137 * C1673) * C92099) *
                C9516) *
               C4097 +
           ((C401 + C417) * C9514 + (C3007 + C3019) * C9515 +
            (C9826 + C9834) * C9516) *
               C92067) *
              C93 -
          (((C9835 + C9831) * C9516 + (C3020 + C3010) * C9515 +
            (C418 + C404) * C9514) *
               C92067 +
           ((C9834 + C9826) * C9516 + (C3019 + C3007) * C9515 +
            (C417 + C401) * C9514) *
               C4097) *
              C94 +
          ((C421 * C9514 + (C3010 + C3020) * C9515 + (C9831 + C9835) * C9516) *
               C4097 +
           (C422 * C9514 + (C3013 + C3021) * C9515 +
            ((C307 * C1393 + C92137 * C1610) * C181 +
             (C307 * C1475 + C92137 * C1676) * C92099) *
                C9516) *
               C92067) *
              C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C307 * C107 + C92137 * C308) * C884 +
            (C307 * C182 + C92137 * C394) * C798 -
            (C307 * C805 + C92137 * C1022) * C885 -
            (C307 * C890 + C92137 * C1085) * C799 +
            (C307 * C806 + C92137 * C1023) * C886 +
            (C307 * C891 + C92137 * C1086) * C800) *
               C9514 +
           ((C307 * C1389 + C92137 * C1606) * C884 +
            (C307 * C1471 + C92137 * C1672) * C798 -
            (C307 * C3431 + C92137 * C3661) * C885 -
            (C307 * C3513 + C92137 * C3735) * C799 +
            (C307 * C5772 + C92137 * C6042) * C886 +
            (C307 * C5870 + C92137 * C6128) * C800) *
               C9515 +
           ((C307 * C1390 + C92137 * C1607) * C884 +
            (C307 * C1472 + C92137 * C1673) * C798 -
            (C307 * C5773 + C92137 * C6043) * C885 -
            (C307 * C5871 + C92137 * C6129) * C799 +
            (C307 * C5775 + C92137 * C6044) * C886 +
            (C307 * C5873 + C92137 * C6130) * C800) *
               C9516) *
              C4097 +
          ((C337 * C884 + C413 * C798 - C2212 * C885 - C2300 * C799 +
            (C307 * C807 + C92137 * C1024) * C886 +
            (C307 * C892 + C92137 * C1088) * C800) *
               C9514 +
           (C2934 * C884 + C3016 * C798 -
            (C307 * C3432 + C92137 * C3662) * C885 -
            (C307 * C3514 + C92137 * C3736) * C799 +
            (C307 * C5771 + C92137 * C6041) * C886 +
            (C307 * C5869 + C92137 * C6127) * C800) *
               C9515 +
           (C9748 * C884 + C9832 * C798 -
            (C307 * C5774 + C92137 * C6045) * C885 -
            (C307 * C5872 + C92137 * C6131) * C799 +
            (C307 * C5776 + C92137 * C6046) * C886 +
            (C307 * C5874 + C92137 * C6132) * C800) *
               C9516) *
              C92067) *
         C92078 * C92110) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92137 * C308) * C181 +
             (C307 * C182 + C92137 * C394) * C92099) *
                C9514 +
            (C11423 + C11440) * C9515 + C11444 * C9516) *
               C4097 +
           ((C401 + C417) * C9514 + (C3007 + C3019) * C9515 + C11429 * C9516) *
               C92067) *
              C92078 * C1383 -
          (((C11442 + C11432) * C9516 + (C9834 + C9826) * C9515 +
            (C3019 + C3007) * C9514) *
               C92067 +
           ((C11443 + C11435) * C9516 + (C11441 + C11426) * C9515 +
            (C11440 + C11423) * C9514) *
               C4097) *
              C92078 * C1384 +
          ((C11444 * C9514 + (C11435 + C11443) * C9515 +
            ((C307 * C10962 + C92137 * C11300) * C181 +
             (C307 * C11094 + C92137 * C11420) * C92099) *
                C9516) *
               C4097 +
           (C11429 * C9514 + (C11432 + C11442) * C9515 +
            ((C307 * C10963 + C92137 * C11301) * C181 +
             (C307 * C11095 + C92137 * C11421) * C92099) *
                C9516) *
               C92067) *
              C92078 * C1385)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[12] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C307 * C107 + C92137 * C308) * C244 +
                (C307 * C245 + C92137 * C474) * C92110) *
                   C92148 * C89 +
               (C481 + C497) * C92148 * C90 + C503 * C91 + C504 * C92) *
                  C92099 * C93 -
              ((C500 + C492) * C92148 * C92 + (C499 + C487) * C92148 * C91 +
               (C498 + C484) * C92148 * C90 + (C497 + C481) * C92148 * C89) *
                  C92099 * C94 +
              (C503 * C89 + C504 * C90 + (C492 + C500) * C92148 * C91 +
               ((C307 * C112 + C92137 * C313) * C244 +
                (C307 * C250 + C92137 * C479) * C92110) *
                   C92148 * C92) *
                  C92099 * C95) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C307 * C107 + C92137 * C308) * C244 +
                (C307 * C245 + C92137 * C474) * C92110) *
                   C92148 * C89 +
               (C481 + C497) * C92148 * C90 + C503 * C91 + C504 * C92) *
                  C798 -
              (((C307 * C953 + C92137 * C1143) * C92110 +
                (C307 * C802 + C92137 * C1019) * C244) *
                   C92148 * C92 +
               ((C307 * C954 + C92137 * C1144) * C92110 +
                (C307 * C803 + C92137 * C1020) * C244) *
                   C92148 * C91 +
               ((C307 * C955 + C92137 * C1145) * C92110 +
                (C307 * C804 + C92137 * C1021) * C244) *
                   C92148 * C90 +
               ((C307 * C956 + C92137 * C1146) * C92110 +
                (C307 * C805 + C92137 * C1022) * C244) *
                   C92148 * C89) *
                  C799 +
              (((C307 * C806 + C92137 * C1023) * C244 +
                (C307 * C957 + C92137 * C1147) * C92110) *
                   C92148 * C89 +
               ((C307 * C807 + C92137 * C1024) * C244 +
                (C307 * C958 + C92137 * C1148) * C92110) *
                   C92148 * C90 +
               ((C307 * C808 + C92137 * C1025) * C244 +
                (C307 * C959 + C92137 * C1149) * C92110) *
                   C92148 * C91 +
               ((C307 * C809 + C92137 * C1026) * C244 +
                (C307 * C960 + C92137 * C1150) * C92110) *
                   C92148 * C92) *
                  C800) *
             C92078) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C307 * C107 + C92137 * C308) * C1534 +
           (C307 * C245 + C92137 * C474) * C1383 -
           (C307 * C1389 + C92137 * C1606) * C1535 -
           (C307 * C1540 + C92137 * C1727) * C1384 +
           (C307 * C1390 + C92137 * C1607) * C1536 +
           (C307 * C1541 + C92137 * C1728) * C1385) *
              C92148 * C89 +
          (C337 * C1534 + C493 * C1383 -
           (C307 * C1388 + C92137 * C1605) * C1535 -
           (C307 * C1539 + C92137 * C1729) * C1384 +
           (C307 * C1391 + C92137 * C1608) * C1536 +
           (C307 * C1542 + C92137 * C1730) * C1385) *
              C92148 * C90 +
          (C339 * C1534 + C494 * C1383 -
           (C307 * C1387 + C92137 * C1604) * C1535 -
           (C307 * C1538 + C92137 * C1731) * C1384 +
           (C307 * C1392 + C92137 * C1609) * C1536 +
           (C307 * C1543 + C92137 * C1732) * C1385) *
              C92148 * C91 +
          (C341 * C1534 + C495 * C1383 -
           (C307 * C1386 + C92137 * C1603) * C1535 -
           (C307 * C1537 + C92137 * C1733) * C1384 +
           (C307 * C1393 + C92137 * C1610) * C1536 +
           (C307 * C1544 + C92137 * C1734) * C1385) *
              C92148 * C92) *
         C92099 * C92078) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C4326 * C107 + C4099 * C308 + C4327 * C805 + C4100 * C1022 +
             C4328 * C806 + C4101 * C1023) *
                C244 +
            (C4326 * C245 + C4099 * C474 + C4327 * C956 + C4100 * C1146 +
             C4328 * C957 + C4101 * C1147) *
                C92110) *
               C92148 * C4097 +
           ((C4356 + C4355 + C4354) * C244 + (C4544 + C4545 + C4546) * C92110) *
               C92148 * C92067) *
              C92099 * C93 -
          (((C4547 + C4548 + C4549) * C92110 + (C4362 + C4361 + C4360) * C244) *
               C92148 * C92067 +
           ((C4546 + C4545 + C4544) * C92110 + (C4354 + C4355 + C4356) * C244) *
               C92148 * C4097) *
              C92099 * C94 +
          (((C4360 + C4361 + C4362) * C244 + (C4549 + C4548 + C4547) * C92110) *
               C92148 * C4097 +
           ((C4326 * C110 + C4099 * C311 + C4327 * C802 + C4100 * C1019 +
             C4328 * C809 + C4101 * C1026) *
                C244 +
            (C4326 * C248 + C4099 * C477 + C4327 * C953 + C4100 * C1143 +
             C4328 * C960 + C4101 * C1150) *
                C92110) *
               C92148 * C92067) *
              C92099 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C4326 * C107 + C4099 * C308 + C4327 * C805 + C4100 * C1022 +
             C4328 * C806 + C4101 * C1023) *
                C244 +
            (C4326 * C245 + C4099 * C474 + C4327 * C956 + C4100 * C1146 +
             C4328 * C957 + C4101 * C1147) *
                C92110) *
               C92148 * C4097 +
           ((C4356 + C4355 + C4354) * C244 + (C4544 + C4545 + C4546) * C92110) *
               C92148 * C92067) *
              C798 -
          (((C4328 * C5113 + C4101 * C5377 + C4327 * C958 + C4100 * C1148 +
             C4326 * C955 + C4099 * C1145) *
                C92110 +
            (C4328 * C4881 + C4101 * C5217 + C4327 * C807 + C4100 * C1024 +
             C4326 * C804 + C4099 * C1021) *
                C244) *
               C92148 * C92067 +
           ((C4328 * C5114 + C4101 * C5378 + C4327 * C957 + C4100 * C1147 +
             C4326 * C956 + C4099 * C1146) *
                C92110 +
            (C4328 * C4882 + C4101 * C5218 + C4327 * C806 + C4100 * C1023 +
             C4326 * C805 + C4099 * C1022) *
                C244) *
               C92148 * C4097) *
              C799 +
          (((C4326 * C806 + C4099 * C1023 + C4327 * C4882 + C4100 * C5218 +
             C4328 * C4883 + C4101 * C5219) *
                C244 +
            (C4326 * C957 + C4099 * C1147 + C4327 * C5114 + C4100 * C5378 +
             C4328 * C5115 + C4101 * C5379) *
                C92110) *
               C92148 * C4097 +
           ((C4326 * C807 + C4099 * C1024 + C4327 * C4881 + C4100 * C5217 +
             C4328 * C4884 + C4101 * C5220) *
                C244 +
            (C4326 * C958 + C4099 * C1148 + C4327 * C5113 + C4100 * C5377 +
             C4328 * C5116 + C4101 * C5380) *
                C92110) *
               C92148 * C92067) *
              C800) *
         C92078) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C4326 * C107 + C4099 * C308 + C4327 * C805 + C4100 * C1022 +
            C4328 * C806 + C4101 * C1023) *
               C1534 +
           (C4326 * C245 + C4099 * C474 + C4327 * C956 + C4100 * C1146 +
            C4328 * C957 + C4101 * C1147) *
               C1383 -
           (C4328 * C5772 + C4101 * C6042 + C4327 * C3431 + C4100 * C3661 +
            C4326 * C1389 + C4099 * C1606) *
               C1535 -
           (C4328 * C5958 + C4101 * C6207 + C4327 * C3587 + C4100 * C3805 +
            C4326 * C1540 + C4099 * C1727) *
               C1384 +
           (C4326 * C1390 + C4099 * C1607 + C4327 * C5773 + C4100 * C6043 +
            C4328 * C5775 + C4101 * C6044) *
               C1536 +
           (C4326 * C1541 + C4099 * C1728 + C4327 * C5955 + C4100 * C6208 +
            C4328 * C5959 + C4101 * C6209) *
               C1385) *
              C92148 * C4097 +
          ((C4356 + C4355 + C4354) * C1534 + (C4544 + C4545 + C4546) * C1383 -
           (C4328 * C5771 + C4101 * C6041 + C4327 * C3432 + C4100 * C3662 +
            C4326 * C1388 + C4099 * C1605) *
               C1535 -
           (C4328 * C5957 + C4101 * C6210 + C4327 * C3588 + C4100 * C3806 +
            C4326 * C1539 + C4099 * C1729) *
               C1384 +
           (C4326 * C1391 + C4099 * C1608 + C4327 * C5774 + C4100 * C6045 +
            C4328 * C5776 + C4101 * C6046) *
               C1536 +
           (C4326 * C1542 + C4099 * C1730 + C4327 * C5956 + C4100 * C6211 +
            C4328 * C5960 + C4101 * C6212) *
               C1385) *
              C92148 * C92067) *
         C92099 * C92078) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92137 * C308) * C244 +
             (C307 * C245 + C92137 * C474) * C92110) *
                C9514 +
            ((C307 * C1389 + C92137 * C1606) * C244 +
             (C307 * C1540 + C92137 * C1727) * C92110) *
                C9515 +
            ((C307 * C1390 + C92137 * C1607) * C244 +
             (C307 * C1541 + C92137 * C1728) * C92110) *
                C9516) *
               C4097 +
           ((C481 + C497) * C9514 + (C9910 + C9911) * C9515 +
            (C9912 + C9922) * C9516) *
               C92067) *
              C92099 * C93 -
          (((C9923 + C9917) * C9516 + (C9918 + C9919) * C9515 +
            (C498 + C484) * C9514) *
               C92067 +
           ((C9922 + C9912) * C9516 + (C9911 + C9910) * C9515 +
            (C497 + C481) * C9514) *
               C4097) *
              C92099 * C94 +
          ((C501 * C9514 + (C9919 + C9918) * C9515 + (C9917 + C9923) * C9516) *
               C4097 +
           (C502 * C9514 + (C2938 * C244 + C3106 * C92110) * C9515 +
            ((C307 * C1393 + C92137 * C1610) * C244 +
             (C307 * C1544 + C92137 * C1734) * C92110) *
                C9516) *
               C92067) *
              C92099 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92137 * C308) * C244 +
             (C307 * C245 + C92137 * C474) * C92110) *
                C9514 +
            ((C307 * C1389 + C92137 * C1606) * C244 +
             (C307 * C1540 + C92137 * C1727) * C92110) *
                C9515 +
            ((C307 * C1390 + C92137 * C1607) * C244 +
             (C307 * C1541 + C92137 * C1728) * C92110) *
                C9516) *
               C4097 +
           ((C481 + C497) * C9514 + (C9910 + C9911) * C9515 +
            (C9912 + C9922) * C9516) *
               C92067) *
              C798 -
          ((((C307 * C5956 + C92137 * C6211) * C92110 +
             (C307 * C5774 + C92137 * C6045) * C244) *
                C9516 +
            ((C307 * C3588 + C92137 * C3806) * C92110 +
             (C307 * C3432 + C92137 * C3662) * C244) *
                C9515 +
            (C2387 + C2381) * C9514) *
               C92067 +
           (((C307 * C5955 + C92137 * C6208) * C92110 +
             (C307 * C5773 + C92137 * C6043) * C244) *
                C9516 +
            ((C307 * C3587 + C92137 * C3805) * C92110 +
             (C307 * C3431 + C92137 * C3661) * C244) *
                C9515 +
            ((C307 * C956 + C92137 * C1146) * C92110 +
             (C307 * C805 + C92137 * C1022) * C244) *
                C9514) *
               C4097) *
              C799 +
          ((((C307 * C806 + C92137 * C1023) * C244 +
             (C307 * C957 + C92137 * C1147) * C92110) *
                C9514 +
            ((C307 * C5772 + C92137 * C6042) * C244 +
             (C307 * C5958 + C92137 * C6207) * C92110) *
                C9515 +
            ((C307 * C5775 + C92137 * C6044) * C244 +
             (C307 * C5959 + C92137 * C6209) * C92110) *
                C9516) *
               C4097 +
           (((C307 * C807 + C92137 * C1024) * C244 +
             (C307 * C958 + C92137 * C1148) * C92110) *
                C9514 +
            ((C307 * C5771 + C92137 * C6041) * C244 +
             (C307 * C5957 + C92137 * C6210) * C92110) *
                C9515 +
            ((C307 * C5776 + C92137 * C6046) * C244 +
             (C307 * C5960 + C92137 * C6212) * C92110) *
                C9516) *
               C92067) *
              C800) *
         C92078) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C307 * C107 + C92137 * C308) * C1534 +
            (C307 * C245 + C92137 * C474) * C1383 - C11327 * C1535 -
            C11531 * C1384 + C11329 * C1536 + C11532 * C1385) *
               C9514 +
           (C11327 * C1534 + C11531 * C1383 - C11329 * C1535 - C11532 * C1384 +
            C11335 * C1536 + C11533 * C1385) *
               C9515 +
           (C11329 * C1534 + C11532 * C1383 - C11335 * C1535 - C11533 * C1384 +
            (C307 * C10962 + C92137 * C11300) * C1536 +
            (C307 * C11199 + C92137 * C11519) * C1385) *
               C9516) *
              C4097 +
          ((C337 * C1534 + C493 * C1383 - C2934 * C1535 - C3104 * C1384 +
            C9748 * C1536 + C9920 * C1385) *
               C9514 +
           (C2934 * C1534 + C3104 * C1383 - C9748 * C1535 - C9920 * C1384 +
            C11333 * C1536 + C11534 * C1385) *
               C9515 +
           (C9748 * C1534 + C9920 * C1383 - C11333 * C1535 - C11534 * C1384 +
            (C307 * C10963 + C92137 * C11301) * C1536 +
            (C307 * C11200 + C92137 * C11521) * C1385) *
               C9516) *
              C92067) *
         C92099 * C92078) /
            (p * q * std::sqrt(p + q));
    d2eezx[12] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((C554 * C107 + C92148 * C555) * C104 +
               (C554 * C117 + C92148 * C561) * C93 - C584 * C105 - C585 * C94 +
               C586 * C106 + C587 * C95) *
                  C89 +
              (C584 * C104 + C585 * C93 - C586 * C105 - C587 * C94 +
               C588 * C106 + C589 * C95) *
                  C90 +
              (C586 * C104 + C587 * C93 - C588 * C105 - C589 * C94 +
               C590 * C106 + C591 * C95) *
                  C91 +
              (C588 * C104 + C589 * C93 - C590 * C105 - C591 * C94 +
               (C554 * C112 + C92148 * C560) * C106 +
               (C554 * C124 + C92148 * C566) * C95) *
                  C92) *
             C92137 * C92110 * C92099 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C554 * C107 + C92148 * C555) * C801 +
                (C554 * C117 + C92148 * C561) * C92078) *
                   C89 +
               (C584 * C801 + C585 * C92078) * C90 +
               (C586 * C801 + C587 * C92078) * C91 +
               (C588 * C801 + C589 * C92078) * C92) *
                  C92137 * C92110 * C798 -
              (((C554 * C810 + C92148 * C1209) * C92078 +
                (C554 * C802 + C92148 * C1201) * C801) *
                   C92 +
               ((C554 * C811 + C92148 * C1210) * C92078 +
                (C554 * C803 + C92148 * C1202) * C801) *
                   C91 +
               ((C554 * C812 + C92148 * C1211) * C92078 +
                (C554 * C804 + C92148 * C1203) * C801) *
                   C90 +
               ((C554 * C813 + C92148 * C1212) * C92078 +
                (C554 * C805 + C92148 * C1204) * C801) *
                   C89) *
                  C92137 * C92110 * C799 +
              (((C554 * C806 + C92148 * C1205) * C801 +
                (C554 * C822 + C92148 * C1213) * C92078) *
                   C89 +
               ((C554 * C807 + C92148 * C1206) * C801 +
                (C554 * C823 + C92148 * C1214) * C92078) *
                   C90 +
               ((C554 * C808 + C92148 * C1207) * C801 +
                (C554 * C824 + C92148 * C1215) * C92078) *
                   C91 +
               ((C554 * C809 + C92148 * C1208) * C801 +
                (C554 * C825 + C92148 * C1216) * C92078) *
                   C92) *
                  C92137 * C92110 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92148 * C555) * C801 +
            (C554 * C117 + C92148 * C561) * C92078) *
               C89 +
           (C584 * C801 + C585 * C92078) * C90 +
           (C586 * C801 + C587 * C92078) * C91 +
           (C588 * C801 + C589 * C92078) * C92) *
              C92137 * C1383 -
          (((C554 * C1394 + C92148 * C1793) * C92078 +
            (C554 * C1386 + C92148 * C1785) * C801) *
               C92 +
           ((C554 * C1395 + C92148 * C1794) * C92078 +
            (C554 * C1387 + C92148 * C1786) * C801) *
               C91 +
           ((C554 * C1396 + C92148 * C1795) * C92078 +
            (C554 * C1388 + C92148 * C1787) * C801) *
               C90 +
           ((C554 * C1397 + C92148 * C1796) * C92078 +
            (C554 * C1389 + C92148 * C1788) * C801) *
               C89) *
              C92137 * C1384 +
          (((C554 * C1390 + C92148 * C1789) * C801 +
            (C554 * C1406 + C92148 * C1797) * C92078) *
               C89 +
           ((C554 * C1391 + C92148 * C1790) * C801 +
            (C554 * C1407 + C92148 * C1798) * C92078) *
               C90 +
           ((C554 * C1392 + C92148 * C1791) * C801 +
            (C554 * C1408 + C92148 * C1799) * C92078) *
               C91 +
           ((C554 * C1393 + C92148 * C1792) * C801 +
            (C554 * C1409 + C92148 * C1800) * C92078) *
               C92) *
              C92137 * C1385) *
         C92099) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92148 * C555) * C104 +
            (C554 * C117 + C92148 * C561) * C93 - C584 * C105 - C585 * C94 +
            C586 * C106 + C587 * C95) *
               C4097 +
           (C584 * C104 + C585 * C93 - C586 * C105 - C587 * C94 + C588 * C106 +
            C589 * C95) *
               C92067) *
              C4099 +
          (((C554 * C805 + C92148 * C1204) * C104 +
            (C554 * C813 + C92148 * C1212) * C93 - C2468 * C105 - C2469 * C94 +
            C2470 * C106 + C2471 * C95) *
               C4097 +
           (C2468 * C104 + C2469 * C93 - C2470 * C105 - C2471 * C94 +
            C2472 * C106 + C2473 * C95) *
               C92067) *
              C4100 +
          (((C554 * C806 + C92148 * C1205) * C104 +
            (C554 * C822 + C92148 * C1213) * C93 - C4632 * C105 - C4633 * C94 +
            C4634 * C106 + C4635 * C95) *
               C4097 +
           (C4632 * C104 + C4633 * C93 - C4634 * C105 - C4635 * C94 +
            (C554 * C809 + C92148 * C1208) * C106 +
            (C554 * C825 + C92148 * C1216) * C95) *
               C92067) *
              C4101) *
         C92110 * C92099) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92148 * C555) * C801 +
             (C554 * C117 + C92148 * C561) * C92078) *
                C4097 +
            (C584 * C801 + C585 * C92078) * C92067) *
               C4099 +
           ((C5493 + C5494) * C4097 + (C5468 + C5469) * C92067) * C4100 +
           C5504 * C4101) *
              C92110 * C798 -
          (((C5498 + C5499) * C92067 + (C5500 + C5501) * C4097) * C4101 +
           ((C5475 + C5474) * C92067 + (C5496 + C5495) * C4097) * C4100 +
           ((C5469 + C5468) * C92067 + (C5494 + C5493) * C4097) * C4099) *
              C92110 * C799 +
          (C5504 * C4099 +
           ((C5501 + C5500) * C4097 + (C5499 + C5498) * C92067) * C4100 +
           (((C554 * C4883 + C92148 * C5457) * C801 +
             (C554 * C4891 + C92148 * C5461) * C92078) *
                C4097 +
            ((C554 * C4884 + C92148 * C5458) * C801 +
             (C554 * C4892 + C92148 * C5462) * C92078) *
                C92067) *
               C4101) *
              C92110 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92148 * C555) * C801 +
             (C554 * C117 + C92148 * C561) * C92078) *
                C4097 +
            (C584 * C801 + C585 * C92078) * C92067) *
               C4099 +
           ((C5493 + C5494) * C4097 + (C5468 + C5469) * C92067) * C4100 +
           C5504 * C4101) *
              C1383 -
          ((((C554 * C5777 + C92148 * C6293) * C92078 +
             (C554 * C5771 + C92148 * C6287) * C801) *
                C92067 +
            ((C554 * C5778 + C92148 * C6294) * C92078 +
             (C554 * C5772 + C92148 * C6288) * C801) *
                C4097) *
               C4101 +
           (((C554 * C3440 + C92148 * C3880) * C92078 +
             (C554 * C3432 + C92148 * C3876) * C801) *
                C92067 +
            ((C554 * C3439 + C92148 * C3879) * C92078 +
             (C554 * C3431 + C92148 * C3875) * C801) *
                C4097) *
               C4100 +
           ((C3191 * C92078 + C3190 * C801) * C92067 +
            ((C554 * C1397 + C92148 * C1796) * C92078 +
             (C554 * C1389 + C92148 * C1788) * C801) *
                C4097) *
               C4099) *
              C1384 +
          ((((C554 * C1390 + C92148 * C1789) * C801 +
             (C554 * C1406 + C92148 * C1797) * C92078) *
                C4097 +
            ((C554 * C1391 + C92148 * C1790) * C801 +
             (C554 * C1407 + C92148 * C1798) * C92078) *
                C92067) *
               C4099 +
           (((C554 * C5773 + C92148 * C6289) * C801 +
             (C554 * C5783 + C92148 * C6295) * C92078) *
                C4097 +
            ((C554 * C5774 + C92148 * C6290) * C801 +
             (C554 * C5784 + C92148 * C6296) * C92078) *
                C92067) *
               C4100 +
           (((C554 * C5775 + C92148 * C6291) * C801 +
             (C554 * C5787 + C92148 * C6297) * C92078) *
                C4097 +
            ((C554 * C5776 + C92148 * C6292) * C801 +
             (C554 * C5788 + C92148 * C6298) * C92078) *
                C92067) *
               C4101) *
              C1385) *
         C92099) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C9997 * C107 + C9514 * C555 + C9998 * C1389 + C9515 * C1788 +
            C9999 * C1390 + C9516 * C1789) *
               C104 +
           (C9997 * C117 + C9514 * C561 + C9998 * C1397 + C9515 * C1796 +
            C9999 * C1406 + C9516 * C1797) *
               C93 -
           (C10025 + C10026 + C10027) * C105 -
           (C10028 + C10029 + C10030) * C94 +
           (C10031 + C10032 + C10033) * C106 +
           (C10034 + C10035 + C10036) * C95) *
              C4097 +
          ((C10027 + C10026 + C10025) * C104 +
           (C10030 + C10029 + C10028) * C93 -
           (C10033 + C10032 + C10031) * C105 -
           (C10036 + C10035 + C10034) * C94 +
           (C9997 * C110 + C9514 * C558 + C9998 * C1386 + C9515 * C1785 +
            C9999 * C1393 + C9516 * C1792) *
               C106 +
           (C9997 * C120 + C9514 * C564 + C9998 * C1394 + C9515 * C1793 +
            C9999 * C1409 + C9516 * C1800) *
               C95) *
              C92067) *
         C92137 * C92110 * C92099) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C9997 * C107 + C9514 * C555 + C9998 * C1389 + C9515 * C1788 +
             C9999 * C1390 + C9516 * C1789) *
                C801 +
            (C9997 * C117 + C9514 * C561 + C9998 * C1397 + C9515 * C1796 +
             C9999 * C1406 + C9516 * C1797) *
                C92078) *
               C4097 +
           ((C10027 + C10026 + C10025) * C801 +
            (C10030 + C10029 + C10028) * C92078) *
               C92067) *
              C92137 * C92110 * C798 -
          (((C9999 * C5784 + C9516 * C6296 + C9998 * C3440 + C9515 * C3880 +
             C9997 * C812 + C9514 * C1211) *
                C92078 +
            (C9999 * C5774 + C9516 * C6290 + C9998 * C3432 + C9515 * C3876 +
             C9997 * C804 + C9514 * C1203) *
                C801) *
               C92067 +
           ((C9999 * C5783 + C9516 * C6295 + C9998 * C3439 + C9515 * C3879 +
             C9997 * C813 + C9514 * C1212) *
                C92078 +
            (C9999 * C5773 + C9516 * C6289 + C9998 * C3431 + C9515 * C3875 +
             C9997 * C805 + C9514 * C1204) *
                C801) *
               C4097) *
              C92137 * C92110 * C799 +
          (((C9997 * C806 + C9514 * C1205 + C9998 * C5772 + C9515 * C6288 +
             C9999 * C5775 + C9516 * C6291) *
                C801 +
            (C9997 * C822 + C9514 * C1213 + C9998 * C5778 + C9515 * C6294 +
             C9999 * C5787 + C9516 * C6297) *
                C92078) *
               C4097 +
           ((C9997 * C807 + C9514 * C1206 + C9998 * C5771 + C9515 * C6287 +
             C9999 * C5776 + C9516 * C6292) *
                C801 +
            (C9997 * C823 + C9514 * C1214 + C9998 * C5777 + C9515 * C6293 +
             C9999 * C5788 + C9516 * C6298) *
                C92078) *
               C92067) *
              C92137 * C92110 * C800)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C9997 * C107 + C9514 * C555 + C9998 * C1389 + C9515 * C1788 +
             C9999 * C1390 + C9516 * C1789) *
                C801 +
            (C9997 * C117 + C9514 * C561 + C9998 * C1397 + C9515 * C1796 +
             C9999 * C1406 + C9516 * C1797) *
                C92078) *
               C4097 +
           ((C10027 + C10026 + C10025) * C801 +
            (C10030 + C10029 + C10028) * C92078) *
               C92067) *
              C92137 * C1383 -
          (((C9999 * C10964 + C9516 * C11612 + C9998 * C1407 + C9515 * C1798 +
             C9997 * C1396 + C9514 * C1795) *
                C92078 +
            (C9999 * C10960 + C9516 * C11608 + C9998 * C1391 + C9515 * C1790 +
             C9997 * C1388 + C9514 * C1787) *
                C801) *
               C92067 +
           ((C9999 * C10965 + C9516 * C11613 + C9998 * C1406 + C9515 * C1797 +
             C9997 * C1397 + C9514 * C1796) *
                C92078 +
            (C9999 * C10961 + C9516 * C11609 + C9998 * C1390 + C9515 * C1789 +
             C9997 * C1389 + C9514 * C1788) *
                C801) *
               C4097) *
              C92137 * C1384 +
          (((C9997 * C1390 + C9514 * C1789 + C9998 * C10961 + C9515 * C11609 +
             C9999 * C10962 + C9516 * C11610) *
                C801 +
            (C9997 * C1406 + C9514 * C1797 + C9998 * C10965 + C9515 * C11613 +
             C9999 * C10970 + C9516 * C11614) *
                C92078) *
               C4097 +
           ((C9997 * C1391 + C9514 * C1790 + C9998 * C10960 + C9515 * C11608 +
             C9999 * C10963 + C9516 * C11611) *
                C801 +
            (C9997 * C1407 + C9514 * C1798 + C9998 * C10964 + C9515 * C11612 +
             C9999 * C10971 + C9516 * C11615) *
                C92078) *
               C92067) *
              C92137 * C1385) *
         C92099) /
            (p * q * std::sqrt(p + q));
    d2eezy[12] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C554 * C107 + C92148 * C555) * C181 +
                (C554 * C182 + C92148 * C641) * C92099) *
                   C89 +
               (C648 + C664) * C90 + C668 * C91 + C669 * C92) *
                  C92137 * C93 -
              ((C667 + C659) * C92 + (C666 + C654) * C91 + (C665 + C651) * C90 +
               (C664 + C648) * C89) *
                  C92137 * C94 +
              (C668 * C89 + C669 * C90 + (C659 + C667) * C91 +
               ((C554 * C112 + C92148 * C560) * C181 +
                (C554 * C187 + C92148 * C646) * C92099) *
                   C92) *
                  C92137 * C95) *
             C92110 +
         0.5 * std::pow(Pi, 2.5) *
             (((C554 * C107 + C92148 * C555) * C884 +
               (C554 * C182 + C92148 * C641) * C798 -
               (C554 * C805 + C92148 * C1204) * C885 -
               (C554 * C890 + C92148 * C1267) * C799 +
               (C554 * C806 + C92148 * C1205) * C886 +
               (C554 * C891 + C92148 * C1268) * C800) *
                  C89 +
              (C584 * C884 + C660 * C798 -
               (C554 * C804 + C92148 * C1203) * C885 -
               (C554 * C889 + C92148 * C1269) * C799 +
               (C554 * C807 + C92148 * C1206) * C886 +
               (C554 * C892 + C92148 * C1270) * C800) *
                  C90 +
              (C586 * C884 + C661 * C798 -
               (C554 * C803 + C92148 * C1202) * C885 -
               (C554 * C888 + C92148 * C1271) * C799 +
               (C554 * C808 + C92148 * C1207) * C886 +
               (C554 * C893 + C92148 * C1272) * C800) *
                  C91 +
              (C588 * C884 + C662 * C798 -
               (C554 * C802 + C92148 * C1201) * C885 -
               (C554 * C887 + C92148 * C1273) * C799 +
               (C554 * C809 + C92148 * C1208) * C886 +
               (C554 * C894 + C92148 * C1274) * C800) *
                  C92) *
             C92137 * C92078 * C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) * ((((C554 * C107 + C92148 * C555) * C181 +
                                (C554 * C182 + C92148 * C641) * C92099) *
                                   C89 +
                               (C648 + C664) * C90 + C668 * C91 + C669 * C92) *
                                  C92137 * C92078 * C1383 -
                              (((C554 * C1468 + C92148 * C1851) * C92099 +
                                (C554 * C1386 + C92148 * C1785) * C181) *
                                   C92 +
                               ((C554 * C1469 + C92148 * C1852) * C92099 +
                                (C554 * C1387 + C92148 * C1786) * C181) *
                                   C91 +
                               ((C554 * C1470 + C92148 * C1853) * C92099 +
                                (C554 * C1388 + C92148 * C1787) * C181) *
                                   C90 +
                               ((C554 * C1471 + C92148 * C1854) * C92099 +
                                (C554 * C1389 + C92148 * C1788) * C181) *
                                   C89) *
                                  C92137 * C92078 * C1384 +
                              (((C554 * C1390 + C92148 * C1789) * C181 +
                                (C554 * C1472 + C92148 * C1855) * C92099) *
                                   C89 +
                               ((C554 * C1391 + C92148 * C1790) * C181 +
                                (C554 * C1473 + C92148 * C1856) * C92099) *
                                   C90 +
                               ((C554 * C1392 + C92148 * C1791) * C181 +
                                (C554 * C1474 + C92148 * C1857) * C92099) *
                                   C91 +
                               ((C554 * C1393 + C92148 * C1792) * C181 +
                                (C554 * C1475 + C92148 * C1858) * C92099) *
                                   C92) *
                                  C92137 * C92078 * C1385)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92148 * C555) * C181 +
             (C554 * C182 + C92148 * C641) * C92099) *
                C4097 +
            (C648 + C664) * C92067) *
               C4099 +
           (((C554 * C805 + C92148 * C1204) * C181 +
             (C554 * C890 + C92148 * C1267) * C92099) *
                C4097 +
            (C4710 + C4711) * C92067) *
               C4100 +
           (((C554 * C806 + C92148 * C1205) * C181 +
             (C554 * C891 + C92148 * C1268) * C92099) *
                C4097 +
            (C4712 + C4722) * C92067) *
               C4101) *
              C93 -
          (((C4723 + C4717) * C92067 + (C4722 + C4712) * C4097) * C4101 +
           ((C4718 + C4719) * C92067 + (C4711 + C4710) * C4097) * C4100 +
           ((C665 + C651) * C92067 + (C664 + C648) * C4097) * C4099) *
              C94 +
          ((C668 * C4097 + C669 * C92067) * C4099 +
           ((C4719 + C4718) * C4097 +
            (C2472 * C181 + C2558 * C92099) * C92067) *
               C4100 +
           ((C4717 + C4723) * C4097 +
            ((C554 * C809 + C92148 * C1208) * C181 +
             (C554 * C894 + C92148 * C1274) * C92099) *
                C92067) *
               C4101) *
              C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92148 * C555) * C884 +
            (C554 * C182 + C92148 * C641) * C798 - C5484 * C885 - C5591 * C799 +
            C5486 * C886 + C5592 * C800) *
               C4097 +
           (C584 * C884 + C660 * C798 - C2468 * C885 - C2556 * C799 +
            C4632 * C886 + C4720 * C800) *
               C92067) *
              C4099 +
          ((C5484 * C884 + C5591 * C798 - C5486 * C885 - C5592 * C799 +
            C5492 * C886 + C5593 * C800) *
               C4097 +
           (C2468 * C884 + C2556 * C798 - C4632 * C885 - C4720 * C799 +
            C5490 * C886 + C5594 * C800) *
               C92067) *
              C4100 +
          ((C5486 * C884 + C5592 * C798 - C5492 * C885 - C5593 * C799 +
            (C554 * C4883 + C92148 * C5457) * C886 +
            (C554 * C5014 + C92148 * C5580) * C800) *
               C4097 +
           (C4632 * C884 + C4720 * C798 - C5490 * C885 - C5594 * C799 +
            (C554 * C4884 + C92148 * C5458) * C886 +
            (C554 * C5015 + C92148 * C5581) * C800) *
               C92067) *
              C4101) *
         C92078 * C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) * (((((C554 * C107 + C92148 * C555) * C181 +
                                 (C554 * C182 + C92148 * C641) * C92099) *
                                    C4097 +
                                (C648 + C664) * C92067) *
                                   C4099 +
                               ((C5484 * C181 + C5591 * C92099) * C4097 +
                                (C4710 + C4711) * C92067) *
                                   C4100 +
                               ((C5486 * C181 + C5592 * C92099) * C4097 +
                                (C4712 + C4722) * C92067) *
                                   C4101) *
                                  C92078 * C1383 -
                              ((((C554 * C5869 + C92148 * C6373) * C92099 +
                                 (C554 * C5771 + C92148 * C6287) * C181) *
                                    C92067 +
                                ((C554 * C5870 + C92148 * C6374) * C92099 +
                                 (C554 * C5772 + C92148 * C6288) * C181) *
                                    C4097) *
                                   C4101 +
                               (((C554 * C3514 + C92148 * C3950) * C92099 +
                                 (C554 * C3432 + C92148 * C3876) * C181) *
                                    C92067 +
                                ((C554 * C3513 + C92148 * C3949) * C92099 +
                                 (C554 * C3431 + C92148 * C3875) * C181) *
                                    C4097) *
                                   C4100 +
                               ((C3275 + C3263) * C92067 +
                                ((C554 * C1471 + C92148 * C1854) * C92099 +
                                 (C554 * C1389 + C92148 * C1788) * C181) *
                                    C4097) *
                                   C4099) *
                                  C92078 * C1384 +
                              ((((C554 * C1390 + C92148 * C1789) * C181 +
                                 (C554 * C1472 + C92148 * C1855) * C92099) *
                                    C4097 +
                                ((C554 * C1391 + C92148 * C1790) * C181 +
                                 (C554 * C1473 + C92148 * C1856) * C92099) *
                                    C92067) *
                                   C4099 +
                               (((C554 * C5773 + C92148 * C6289) * C181 +
                                 (C554 * C5871 + C92148 * C6375) * C92099) *
                                    C4097 +
                                ((C554 * C5774 + C92148 * C6290) * C181 +
                                 (C554 * C5872 + C92148 * C6376) * C92099) *
                                    C92067) *
                                   C4100 +
                               (((C554 * C5775 + C92148 * C6291) * C181 +
                                 (C554 * C5873 + C92148 * C6377) * C92099) *
                                    C4097 +
                                ((C554 * C5776 + C92148 * C6292) * C181 +
                                 (C554 * C5874 + C92148 * C6378) * C92099) *
                                    C92067) *
                                   C4101) *
                                  C92078 * C1385)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C9997 * C107 + C9514 * C555 + C9998 * C1389 + C9515 * C1788 +
             C9999 * C1390 + C9516 * C1789) *
                C181 +
            (C9997 * C182 + C9514 * C641 + C9998 * C1471 + C9515 * C1854 +
             C9999 * C1472 + C9516 * C1855) *
                C92099) *
               C4097 +
           ((C10027 + C10026 + C10025) * C181 +
            (C10123 + C10124 + C10125) * C92099) *
               C92067) *
              C92137 * C93 -
          (((C10126 + C10127 + C10128) * C92099 +
            (C10033 + C10032 + C10031) * C181) *
               C92067 +
           ((C10125 + C10124 + C10123) * C92099 +
            (C10025 + C10026 + C10027) * C181) *
               C4097) *
              C92137 * C94 +
          (((C10031 + C10032 + C10033) * C181 +
            (C10128 + C10127 + C10126) * C92099) *
               C4097 +
           ((C9997 * C110 + C9514 * C558 + C9998 * C1386 + C9515 * C1785 +
             C9999 * C1393 + C9516 * C1792) *
                C181 +
            (C9997 * C185 + C9514 * C644 + C9998 * C1468 + C9515 * C1851 +
             C9999 * C1475 + C9516 * C1858) *
                C92099) *
               C92067) *
              C92137 * C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C9997 * C107 + C9514 * C555 + C9998 * C1389 + C9515 * C1788 +
            C9999 * C1390 + C9516 * C1789) *
               C884 +
           (C9997 * C182 + C9514 * C641 + C9998 * C1471 + C9515 * C1854 +
            C9999 * C1472 + C9516 * C1855) *
               C798 -
           (C9999 * C5773 + C9516 * C6289 + C9998 * C3431 + C9515 * C3875 +
            C9997 * C805 + C9514 * C1204) *
               C885 -
           (C9999 * C5871 + C9516 * C6375 + C9998 * C3513 + C9515 * C3949 +
            C9997 * C890 + C9514 * C1267) *
               C799 +
           (C9997 * C806 + C9514 * C1205 + C9998 * C5772 + C9515 * C6288 +
            C9999 * C5775 + C9516 * C6291) *
               C886 +
           (C9997 * C891 + C9514 * C1268 + C9998 * C5870 + C9515 * C6374 +
            C9999 * C5873 + C9516 * C6377) *
               C800) *
              C4097 +
          ((C10027 + C10026 + C10025) * C884 +
           (C10123 + C10124 + C10125) * C798 -
           (C9999 * C5774 + C9516 * C6290 + C9998 * C3432 + C9515 * C3876 +
            C9997 * C804 + C9514 * C1203) *
               C885 -
           (C9999 * C5872 + C9516 * C6376 + C9998 * C3514 + C9515 * C3950 +
            C9997 * C889 + C9514 * C1269) *
               C799 +
           (C9997 * C807 + C9514 * C1206 + C9998 * C5771 + C9515 * C6287 +
            C9999 * C5776 + C9516 * C6292) *
               C886 +
           (C9997 * C892 + C9514 * C1270 + C9998 * C5869 + C9515 * C6373 +
            C9999 * C5874 + C9516 * C6378) *
               C800) *
              C92067) *
         C92137 * C92078 * C92110) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C9997 * C107 + C9514 * C555 + C9998 * C1389 + C9515 * C1788 +
             C9999 * C1390 + C9516 * C1789) *
                C181 +
            (C9997 * C182 + C9514 * C641 + C9998 * C1471 + C9515 * C1854 +
             C9999 * C1472 + C9516 * C1855) *
                C92099) *
               C4097 +
           ((C10027 + C10026 + C10025) * C181 +
            (C10123 + C10124 + C10125) * C92099) *
               C92067) *
              C92137 * C92078 * C1383 -
          (((C9999 * C11092 + C9516 * C11690 + C9998 * C1473 + C9515 * C1856 +
             C9997 * C1470 + C9514 * C1853) *
                C92099 +
            (C9999 * C10960 + C9516 * C11608 + C9998 * C1391 + C9515 * C1790 +
             C9997 * C1388 + C9514 * C1787) *
                C181) *
               C92067 +
           ((C9999 * C11093 + C9516 * C11691 + C9998 * C1472 + C9515 * C1855 +
             C9997 * C1471 + C9514 * C1854) *
                C92099 +
            (C9999 * C10961 + C9516 * C11609 + C9998 * C1390 + C9515 * C1789 +
             C9997 * C1389 + C9514 * C1788) *
                C181) *
               C4097) *
              C92137 * C92078 * C1384 +
          (((C9997 * C1390 + C9514 * C1789 + C9998 * C10961 + C9515 * C11609 +
             C9999 * C10962 + C9516 * C11610) *
                C181 +
            (C9997 * C1472 + C9514 * C1855 + C9998 * C11093 + C9515 * C11691 +
             C9999 * C11094 + C9516 * C11692) *
                C92099) *
               C4097 +
           ((C9997 * C1391 + C9514 * C1790 + C9998 * C10960 + C9515 * C11608 +
             C9999 * C10963 + C9516 * C11611) *
                C181 +
            (C9997 * C1473 + C9514 * C1856 + C9998 * C11092 + C9515 * C11690 +
             C9999 * C11095 + C9516 * C11693) *
                C92099) *
               C92067) *
              C92137 * C92078 * C1385)) /
            (p * q * std::sqrt(p + q));
    d2eezz[12] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C554 * C107 + C92148 * C555) * C244 +
                (C554 * C245 + C92148 * C719) * C92110) *
                   C89 +
               (C726 + C742) * C90 + C746 * C91 + C747 * C92) *
                  C92137 * C92099 * C93 -
              ((C745 + C737) * C92 + (C744 + C732) * C91 + (C743 + C729) * C90 +
               (C742 + C726) * C89) *
                  C92137 * C92099 * C94 +
              (C746 * C89 + C747 * C90 + (C737 + C745) * C91 +
               ((C554 * C112 + C92148 * C560) * C244 +
                (C554 * C250 + C92148 * C724) * C92110) *
                   C92) *
                  C92137 * C92099 * C95) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C554 * C107 + C92148 * C555) * C244 +
                (C554 * C245 + C92148 * C719) * C92110) *
                   C89 +
               (C726 + C742) * C90 + C746 * C91 + C747 * C92) *
                  C92137 * C798 -
              (((C554 * C953 + C92148 * C1325) * C92110 +
                (C554 * C802 + C92148 * C1201) * C244) *
                   C92 +
               ((C554 * C954 + C92148 * C1326) * C92110 +
                (C554 * C803 + C92148 * C1202) * C244) *
                   C91 +
               ((C554 * C955 + C92148 * C1327) * C92110 +
                (C554 * C804 + C92148 * C1203) * C244) *
                   C90 +
               ((C554 * C956 + C92148 * C1328) * C92110 +
                (C554 * C805 + C92148 * C1204) * C244) *
                   C89) *
                  C92137 * C799 +
              (((C554 * C806 + C92148 * C1205) * C244 +
                (C554 * C957 + C92148 * C1329) * C92110) *
                   C89 +
               ((C554 * C807 + C92148 * C1206) * C244 +
                (C554 * C958 + C92148 * C1330) * C92110) *
                   C90 +
               ((C554 * C808 + C92148 * C1207) * C244 +
                (C554 * C959 + C92148 * C1331) * C92110) *
                   C91 +
               ((C554 * C809 + C92148 * C1208) * C244 +
                (C554 * C960 + C92148 * C1332) * C92110) *
                   C92) *
                  C92137 * C800) *
             C92078) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C554 * C107 + C92148 * C555) * C1534 +
           (C554 * C245 + C92148 * C719) * C1383 -
           (C554 * C1389 + C92148 * C1788) * C1535 -
           (C554 * C1540 + C92148 * C1909) * C1384 +
           (C554 * C1390 + C92148 * C1789) * C1536 +
           (C554 * C1541 + C92148 * C1910) * C1385) *
              C89 +
          (C584 * C1534 + C738 * C1383 -
           (C554 * C1388 + C92148 * C1787) * C1535 -
           (C554 * C1539 + C92148 * C1911) * C1384 +
           (C554 * C1391 + C92148 * C1790) * C1536 +
           (C554 * C1542 + C92148 * C1912) * C1385) *
              C90 +
          (C586 * C1534 + C739 * C1383 -
           (C554 * C1387 + C92148 * C1786) * C1535 -
           (C554 * C1538 + C92148 * C1913) * C1384 +
           (C554 * C1392 + C92148 * C1791) * C1536 +
           (C554 * C1543 + C92148 * C1914) * C1385) *
              C91 +
          (C588 * C1534 + C740 * C1383 -
           (C554 * C1386 + C92148 * C1785) * C1535 -
           (C554 * C1537 + C92148 * C1915) * C1384 +
           (C554 * C1393 + C92148 * C1792) * C1536 +
           (C554 * C1544 + C92148 * C1916) * C1385) *
              C92) *
         C92137 * C92099 * C92078) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92148 * C555) * C244 +
             (C554 * C245 + C92148 * C719) * C92110) *
                C4097 +
            (C726 + C742) * C92067) *
               C4099 +
           (((C554 * C805 + C92148 * C1204) * C244 +
             (C554 * C956 + C92148 * C1328) * C92110) *
                C4097 +
            (C2637 + C2643) * C92067) *
               C4100 +
           (((C554 * C806 + C92148 * C1205) * C244 +
             (C554 * C957 + C92148 * C1329) * C92110) *
                C4097 +
            (C4798 + C4806) * C92067) *
               C4101) *
              C92099 * C93 -
          (((C4807 + C4803) * C92067 + (C4806 + C4798) * C4097) * C4101 +
           ((C2642 + C2634) * C92067 + (C2643 + C2637) * C4097) * C4100 +
           ((C743 + C729) * C92067 + (C742 + C726) * C4097) * C4099) *
              C92099 * C94 +
          ((C746 * C4097 + C747 * C92067) * C4099 +
           ((C2634 + C2642) * C4097 + (C2631 + C2641) * C92067) * C4100 +
           ((C4803 + C4807) * C4097 +
            ((C554 * C809 + C92148 * C1208) * C244 +
             (C554 * C960 + C92148 * C1332) * C92110) *
                C92067) *
               C4101) *
              C92099 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92148 * C555) * C244 +
             (C554 * C245 + C92148 * C719) * C92110) *
                C4097 +
            (C726 + C742) * C92067) *
               C4099 +
           ((C5673 + C5691) * C4097 + (C2637 + C2643) * C92067) * C4100 +
           C5697 * C4101) *
              C798 -
          (((C5693 + C5682) * C92067 + (C5694 + C5685) * C4097) * C4101 +
           ((C4806 + C4798) * C92067 + (C5692 + C5676) * C4097) * C4100 +
           ((C2643 + C2637) * C92067 + (C5691 + C5673) * C4097) * C4099) *
              C799 +
          (C5697 * C4099 +
           ((C5685 + C5694) * C4097 + (C5682 + C5693) * C92067) * C4100 +
           (((C554 * C4883 + C92148 * C5457) * C244 +
             (C554 * C5115 + C92148 * C5670) * C92110) *
                C4097 +
            ((C554 * C4884 + C92148 * C5458) * C244 +
             (C554 * C5116 + C92148 * C5671) * C92110) *
                C92067) *
               C4101) *
              C800) *
         C92078) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92148 * C555) * C1534 +
            (C554 * C245 + C92148 * C719) * C1383 -
            (C554 * C1389 + C92148 * C1788) * C1535 -
            (C554 * C1540 + C92148 * C1909) * C1384 +
            (C554 * C1390 + C92148 * C1789) * C1536 +
            (C554 * C1541 + C92148 * C1910) * C1385) *
               C4097 +
           (C584 * C1534 + C738 * C1383 - C3190 * C1535 - C3360 * C1384 +
            (C554 * C1391 + C92148 * C1790) * C1536 +
            (C554 * C1542 + C92148 * C1912) * C1385) *
               C92067) *
              C4099 +
          ((C5484 * C1534 + C5686 * C1383 -
            (C554 * C3431 + C92148 * C3875) * C1535 -
            (C554 * C3587 + C92148 * C4019) * C1384 +
            (C554 * C5773 + C92148 * C6289) * C1536 +
            (C554 * C5955 + C92148 * C6453) * C1385) *
               C4097 +
           (C2468 * C1534 + C2640 * C1383 -
            (C554 * C3432 + C92148 * C3876) * C1535 -
            (C554 * C3588 + C92148 * C4020) * C1384 +
            (C554 * C5774 + C92148 * C6290) * C1536 +
            (C554 * C5956 + C92148 * C6454) * C1385) *
               C92067) *
              C4100 +
          ((C5486 * C1534 + C5687 * C1383 -
            (C554 * C5772 + C92148 * C6288) * C1535 -
            (C554 * C5958 + C92148 * C6455) * C1384 +
            (C554 * C5775 + C92148 * C6291) * C1536 +
            (C554 * C5959 + C92148 * C6456) * C1385) *
               C4097 +
           (C4632 * C1534 + C4804 * C1383 -
            (C554 * C5771 + C92148 * C6287) * C1535 -
            (C554 * C5957 + C92148 * C6457) * C1384 +
            (C554 * C5776 + C92148 * C6292) * C1536 +
            (C554 * C5960 + C92148 * C6458) * C1385) *
               C92067) *
              C4101) *
         C92099 * C92078) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C9997 * C107 + C9514 * C555 + C9998 * C1389 + C9515 * C1788 +
             C9999 * C1390 + C9516 * C1789) *
                C244 +
            (C9997 * C245 + C9514 * C719 + C9998 * C1540 + C9515 * C1909 +
             C9999 * C1541 + C9516 * C1910) *
                C92110) *
               C4097 +
           ((C10027 + C10026 + C10025) * C244 +
            (C10215 + C10216 + C10217) * C92110) *
               C92067) *
              C92137 * C92099 * C93 -
          (((C10218 + C10219 + C10220) * C92110 +
            (C10033 + C10032 + C10031) * C244) *
               C92067 +
           ((C10217 + C10216 + C10215) * C92110 +
            (C10025 + C10026 + C10027) * C244) *
               C4097) *
              C92137 * C92099 * C94 +
          (((C10031 + C10032 + C10033) * C244 +
            (C10220 + C10219 + C10218) * C92110) *
               C4097 +
           ((C9997 * C110 + C9514 * C558 + C9998 * C1386 + C9515 * C1785 +
             C9999 * C1393 + C9516 * C1792) *
                C244 +
            (C9997 * C248 + C9514 * C722 + C9998 * C1537 + C9515 * C1915 +
             C9999 * C1544 + C9516 * C1916) *
                C92110) *
               C92067) *
              C92137 * C92099 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C9997 * C107 + C9514 * C555 + C9998 * C1389 + C9515 * C1788 +
             C9999 * C1390 + C9516 * C1789) *
                C244 +
            (C9997 * C245 + C9514 * C719 + C9998 * C1540 + C9515 * C1909 +
             C9999 * C1541 + C9516 * C1910) *
                C92110) *
               C4097 +
           ((C10027 + C10026 + C10025) * C244 +
            (C10215 + C10216 + C10217) * C92110) *
               C92067) *
              C92137 * C798 -
          (((C9999 * C5956 + C9516 * C6454 + C9998 * C3588 + C9515 * C4020 +
             C9997 * C955 + C9514 * C1327) *
                C92110 +
            (C9999 * C5774 + C9516 * C6290 + C9998 * C3432 + C9515 * C3876 +
             C9997 * C804 + C9514 * C1203) *
                C244) *
               C92067 +
           ((C9999 * C5955 + C9516 * C6453 + C9998 * C3587 + C9515 * C4019 +
             C9997 * C956 + C9514 * C1328) *
                C92110 +
            (C9999 * C5773 + C9516 * C6289 + C9998 * C3431 + C9515 * C3875 +
             C9997 * C805 + C9514 * C1204) *
                C244) *
               C4097) *
              C92137 * C799 +
          (((C9997 * C806 + C9514 * C1205 + C9998 * C5772 + C9515 * C6288 +
             C9999 * C5775 + C9516 * C6291) *
                C244 +
            (C9997 * C957 + C9514 * C1329 + C9998 * C5958 + C9515 * C6455 +
             C9999 * C5959 + C9516 * C6456) *
                C92110) *
               C4097 +
           ((C9997 * C807 + C9514 * C1206 + C9998 * C5771 + C9515 * C6287 +
             C9999 * C5776 + C9516 * C6292) *
                C244 +
            (C9997 * C958 + C9514 * C1330 + C9998 * C5957 + C9515 * C6457 +
             C9999 * C5960 + C9516 * C6458) *
                C92110) *
               C92067) *
              C92137 * C800) *
         C92078) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C9997 * C107 + C9514 * C555 + C9998 * C1389 + C9515 * C1788 +
            C9999 * C1390 + C9516 * C1789) *
               C1534 +
           (C9997 * C245 + C9514 * C719 + C9998 * C1540 + C9515 * C1909 +
            C9999 * C1541 + C9516 * C1910) *
               C1383 -
           (C9999 * C10961 + C9516 * C11609 + C9998 * C1390 + C9515 * C1789 +
            C9997 * C1389 + C9514 * C1788) *
               C1535 -
           (C9999 * C11197 + C9516 * C11768 + C9998 * C1541 + C9515 * C1910 +
            C9997 * C1540 + C9514 * C1909) *
               C1384 +
           (C9997 * C1390 + C9514 * C1789 + C9998 * C10961 + C9515 * C11609 +
            C9999 * C10962 + C9516 * C11610) *
               C1536 +
           (C9997 * C1541 + C9514 * C1910 + C9998 * C11197 + C9515 * C11768 +
            C9999 * C11199 + C9516 * C11769) *
               C1385) *
              C4097 +
          ((C10027 + C10026 + C10025) * C1534 +
           (C10215 + C10216 + C10217) * C1383 -
           (C9999 * C10960 + C9516 * C11608 + C9998 * C1391 + C9515 * C1790 +
            C9997 * C1388 + C9514 * C1787) *
               C1535 -
           (C9999 * C11198 + C9516 * C11770 + C9998 * C1542 + C9515 * C1912 +
            C9997 * C1539 + C9514 * C1911) *
               C1384 +
           (C9997 * C1391 + C9514 * C1790 + C9998 * C10960 + C9515 * C11608 +
            C9999 * C10963 + C9516 * C11611) *
               C1536 +
           (C9997 * C1542 + C9514 * C1912 + C9998 * C11198 + C9515 * C11770 +
            C9999 * C11200 + C9516 * C11771) *
               C1385) *
              C92067) *
         C92137 * C92099 * C92078) /
            (p * q * std::sqrt(p + q));
    d2eexx[13] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C92067 * C114) *
                C1987 +
            (C4102 * C117 + C4097 * C125 + C4103 * C118 + C92067 * C126) *
                C1983 -
            (C4103 * C109 + C92067 * C115 + C4102 * C108 + C4097 * C114) *
                C1988 -
            (C4103 * C119 + C92067 * C127 + C4102 * C118 + C4097 * C126) *
                C1984) *
               C4099 +
           ((C4922 + C4923) * C1987 + (C4924 + C4925) * C1983 -
            (C6578 + C6579) * C1988 - (C6580 + C6581) * C1984) *
               C4100 +
           (C4934 * C1987 + C4935 * C1983 - (C6582 + C6583) * C1988 -
            (C6584 + C6585) * C1984) *
               C4101) *
              C92148 * C2709 +
          (((C4102 * C1388 + C4097 * C1400 + C4103 * C1387 + C92067 * C1399) *
                C1988 -
            ((C4103 * C1396 + C92067 * C1412 + C4102 * C1397 + C4097 * C1413) *
                 C1983 +
             (C4103 * C1388 + C92067 * C1400 + C4102 * C1389 + C4097 * C1401) *
                 C1987) +
            (C4102 * C1396 + C4097 * C1412 + C4103 * C1395 + C92067 * C1411) *
                C1984) *
               C4099 +
           ((C4102 * C3432 + C4097 * C3436 + C4103 * C3433 + C92067 * C3437) *
                C1988 -
            ((C4103 * C3440 + C92067 * C3444 + C4102 * C3439 + C4097 * C3443) *
                 C1983 +
             (C4103 * C3432 + C92067 * C3436 + C4102 * C3431 + C4097 * C3435) *
                 C1987) +
            (C4102 * C3440 + C4097 * C3444 + C4103 * C3441 + C92067 * C3445) *
                C1984) *
               C4100 +
           ((C4102 * C5771 + C4097 * C5779 + C4103 * C7566 + C92067 * C7567) *
                C1988 -
            ((C4103 * C5777 + C92067 * C5789 + C4102 * C5778 + C4097 * C5790) *
                 C1983 +
             (C4103 * C5771 + C92067 * C5779 + C4102 * C5772 + C4097 * C5780) *
                 C1987) +
            (C4102 * C5777 + C4097 * C5789 + C4103 * C7568 + C92067 * C7569) *
                C1984) *
               C4101) *
              C92148 * C2710) *
         C92099) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C100 * C107 + C89 * C113 + C101 * C108 + C90 * C114 + C102 * C109 +
            C91 * C115 + C103 * C110 + C92 * C116) *
               C1987 +
           (C100 * C117 + C89 * C125 + C101 * C118 + C90 * C126 + C102 * C119 +
            C91 * C127 + C103 * C120 + C92 * C128) *
               C1983 -
           (C103 * C111 + C92 * C121 + C102 * C110 + C91 * C116 + C101 * C109 +
            C90 * C115 + C100 * C108 + C89 * C114) *
               C1988 -
           (C103 * C122 + C92 * C129 + C102 * C120 + C91 * C128 + C101 * C119 +
            C90 * C127 + C100 * C118 + C89 * C126) *
               C1984) *
              C92137 * C92148 * C2709 +
          ((C100 * C1388 + C89 * C1400 + C101 * C1387 + C90 * C1399 +
            C102 * C1386 + C91 * C1398 + C103 * C2711 + C92 * C2712) *
               C1988 -
           ((C103 * C1394 + C92 * C1410 + C102 * C1395 + C91 * C1411 +
             C101 * C1396 + C90 * C1412 + C100 * C1397 + C89 * C1413) *
                C1983 +
            (C103 * C1386 + C92 * C1398 + C102 * C1387 + C91 * C1399 +
             C101 * C1388 + C90 * C1400 + C100 * C1389 + C89 * C1401) *
                C1987) +
           (C100 * C1396 + C89 * C1412 + C101 * C1395 + C90 * C1411 +
            C102 * C1394 + C91 * C1410 + C103 * C2713 + C92 * C2714) *
               C1984) *
              C92137 * C92148 * C2710) *
         C92099) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C92067 * C114) *
                C1987 +
            (C4102 * C117 + C4097 * C125 + C4103 * C118 + C92067 * C126) *
                C1983 -
            (C4103 * C109 + C92067 * C115 + C4102 * C108 + C4097 * C114) *
                C1988 -
            (C4103 * C119 + C92067 * C127 + C4102 * C118 + C4097 * C126) *
                C1984) *
               C92137 * C9514 +
           ((C11001 + C11002) * C1987 + (C11003 + C11004) * C1983 -
            (C12861 + C12862) * C1988 - (C12863 + C12864) * C1984) *
               C92137 * C9515 +
           (C11013 * C1987 + C11014 * C1983 - (C12865 + C12866) * C1988 -
            (C12867 + C12868) * C1984) *
               C92137 * C9516) *
              C2709 +
          (((C12862 + C12861) * C1988 -
            ((C11004 + C11003) * C1983 + (C11002 + C11001) * C1987) +
            (C12864 + C12863) * C1984) *
               C92137 * C9514 +
           ((C12866 + C12865) * C1988 -
            ((C11008 + C11007) * C1983 + (C11006 + C11005) * C1987) +
            (C12868 + C12867) * C1984) *
               C92137 * C9515 +
           ((C4102 * C10960 + C4097 * C10966 + C4103 * C12840 +
             C92067 * C12841) *
                C1988 -
            ((C11009 + C11010) * C1983 + (C11011 + C11012) * C1987) +
            (C4102 * C10964 + C4097 * C10972 + C4103 * C12842 +
             C92067 * C12843) *
                C1984) *
               C92137 * C9516) *
              C2710) *
         C92099) /
            (p * q * std::sqrt(p + q));
    d2eexy[13] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C92067 * C114) *
                 C181 +
             (C4102 * C182 + C4097 * C188 + C4103 * C183 + C92067 * C189) *
                 C92099) *
                C4099 +
            ((C4922 + C4923) * C181 + (C5034 + C5033) * C92099) * C4100 +
            (C4934 * C181 + C5039 * C92099) * C4101) *
               C92148 * C1983 -
           (((C6697 + C6696) * C92099 + (C6582 + C6583) * C181) * C4101 +
            ((C6695 + C6694) * C92099 + (C6578 + C6579) * C181) * C4100 +
            ((C4103 * C184 + C92067 * C190 + C4102 * C183 + C4097 * C189) *
                 C92099 +
             (C4103 * C109 + C92067 * C115 + C4102 * C108 + C4097 * C114) *
                 C181) *
                C4099) *
               C92148 * C1984) *
              C2709 +
          ((((C4102 * C1388 + C4097 * C1400 + C4103 * C1387 + C92067 * C1399) *
                 C181 +
             (C4102 * C1470 + C4097 * C1478 + C4103 * C1469 + C92067 * C1477) *
                 C92099) *
                C4099 +
            ((C4102 * C3432 + C4097 * C3436 + C4103 * C3433 + C92067 * C3437) *
                 C181 +
             (C4102 * C3514 + C4097 * C3518 + C4103 * C3515 + C92067 * C3519) *
                 C92099) *
                C4100 +
            ((C4102 * C5771 + C4097 * C5779 + C4103 * C7566 + C92067 * C7567) *
                 C181 +
             (C4102 * C5869 + C4097 * C5875 + C4103 * C7668 + C92067 * C7669) *
                 C92099) *
                C4101) *
               C92148 * C1984 -
           (((C4103 * C5869 + C92067 * C5875 + C4102 * C5870 + C4097 * C5876) *
                 C92099 +
             (C4103 * C5771 + C92067 * C5779 + C4102 * C5772 + C4097 * C5780) *
                 C181) *
                C4101 +
            ((C4103 * C3514 + C92067 * C3518 + C4102 * C3513 + C4097 * C3517) *
                 C92099 +
             (C4103 * C3432 + C92067 * C3436 + C4102 * C3431 + C4097 * C3435) *
                 C181) *
                C4100 +
            ((C4103 * C1470 + C92067 * C1478 + C4102 * C1471 + C4097 * C1479) *
                 C92099 +
             (C4103 * C1388 + C92067 * C1400 + C4102 * C1389 + C4097 * C1401) *
                 C181) *
                C4099) *
               C92148 * C1983) *
              C2710)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C100 * C107 + C89 * C113 + C101 * C108 + C90 * C114 + C102 * C109 +
             C91 * C115 + C103 * C110 + C92 * C116) *
                C181 +
            (C100 * C182 + C89 * C188 + C101 * C183 + C90 * C189 + C102 * C184 +
             C91 * C190 + C103 * C185 + C92 * C191) *
                C92099) *
               C92137 * C92148 * C1983 -
           ((C103 * C186 + C92 * C192 + C102 * C185 + C91 * C191 + C101 * C184 +
             C90 * C190 + C100 * C183 + C89 * C189) *
                C92099 +
            (C103 * C111 + C92 * C121 + C102 * C110 + C91 * C116 + C101 * C109 +
             C90 * C115 + C100 * C108 + C89 * C114) *
                C181) *
               C92137 * C92148 * C1984) *
              C2709 +
          (((C100 * C1388 + C89 * C1400 + C101 * C1387 + C90 * C1399 +
             C102 * C1386 + C91 * C1398 + C103 * C2711 + C92 * C2712) *
                C181 +
            (C100 * C1470 + C89 * C1478 + C101 * C1469 + C90 * C1477 +
             C102 * C1468 + C91 * C1476 + C103 * C2781 + C92 * C2782) *
                C92099) *
               C92137 * C92148 * C1984 -
           ((C103 * C1468 + C92 * C1476 + C102 * C1469 + C91 * C1477 +
             C101 * C1470 + C90 * C1478 + C100 * C1471 + C89 * C1479) *
                C92099 +
            (C103 * C1386 + C92 * C1398 + C102 * C1387 + C91 * C1399 +
             C101 * C1388 + C90 * C1400 + C100 * C1389 + C89 * C1401) *
                C181) *
               C92137 * C92148 * C1983) *
              C2710)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C92067 * C114) *
                 C181 +
             (C4102 * C182 + C4097 * C188 + C4103 * C183 + C92067 * C189) *
                 C92099) *
                C92137 * C9514 +
            ((C11001 + C11002) * C181 + (C11114 + C11115) * C92099) * C92137 *
                C9515 +
            C11123 * C9516) *
               C1983 -
           (((C12977 + C12978) * C92099 + (C12865 + C12866) * C181) * C92137 *
                C9516 +
            ((C12979 + C12980) * C92099 + (C12861 + C12862) * C181) * C92137 *
                C9515 +
            ((C4103 * C184 + C92067 * C190 + C4102 * C183 + C4097 * C189) *
                 C92099 +
             (C4103 * C109 + C92067 * C115 + C4102 * C108 + C4097 * C114) *
                 C181) *
                C92137 * C9514) *
               C1984) *
              C2709 +
          ((((C12862 + C12861) * C181 + (C12980 + C12979) * C92099) * C92137 *
                C9514 +
            ((C12866 + C12865) * C181 + (C12978 + C12977) * C92099) * C92137 *
                C9515 +
            ((C4102 * C10960 + C4097 * C10966 + C4103 * C12840 +
              C92067 * C12841) *
                 C181 +
             (C4102 * C11092 + C4097 * C11096 + C4103 * C12966 +
              C92067 * C12967) *
                 C92099) *
                C92137 * C9516) *
               C1984 -
           (((C11118 + C11119) * C92099 + (C11011 + C11012) * C181) * C92137 *
                C9516 +
            ((C11117 + C11116) * C92099 + (C11006 + C11005) * C181) * C92137 *
                C9515 +
            ((C11115 + C11114) * C92099 + (C11002 + C11001) * C181) * C92137 *
                C9514) *
               C1983) *
              C2710)) /
            (p * q * std::sqrt(p + q));
    d2eexz[13] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C92067 * C114) *
                C2849 +
            (C4102 * C245 + C4097 * C251 + C4103 * C246 + C92067 * C252) *
                C2709 -
            (C4103 * C1388 + C92067 * C1400 + C4102 * C1389 + C4097 * C1401) *
                C2850 -
            (C4103 * C1539 + C92067 * C1547 + C4102 * C1540 + C4097 * C1548) *
                C2710) *
               C4099 +
           ((C4922 + C4923) * C2849 + (C5135 + C5136) * C2709 -
            (C4103 * C3432 + C92067 * C3436 + C4102 * C3431 + C4097 * C3435) *
                C2850 -
            (C4103 * C3588 + C92067 * C3592 + C4102 * C3587 + C4097 * C3591) *
                C2710) *
               C4100 +
           (C4934 * C2849 + C5141 * C2709 -
            (C4103 * C5771 + C92067 * C5779 + C4102 * C5772 + C4097 * C5780) *
                C2850 -
            (C4103 * C5957 + C92067 * C5963 + C4102 * C5958 + C4097 * C5964) *
                C2710) *
               C4101) *
              C92148 * C92099 * C1983 +
          (((C4102 * C1388 + C4097 * C1400 + C4103 * C1387 + C92067 * C1399) *
                C2850 -
            ((C4103 * C247 + C92067 * C253 + C4102 * C246 + C4097 * C252) *
                 C2709 +
             (C4103 * C109 + C92067 * C115 + C4102 * C108 + C4097 * C114) *
                 C2849) +
            (C4102 * C1539 + C4097 * C1547 + C4103 * C1538 + C92067 * C1546) *
                C2710) *
               C4099 +
           ((C4102 * C3432 + C4097 * C3436 + C4103 * C3433 + C92067 * C3437) *
                C2850 -
            ((C6807 + C6806) * C2709 + (C6578 + C6579) * C2849) +
            (C4102 * C3588 + C4097 * C3592 + C4103 * C3589 + C92067 * C3593) *
                C2710) *
               C4100 +
           ((C4102 * C5771 + C4097 * C5779 + C4103 * C7566 + C92067 * C7567) *
                C2850 -
            ((C6809 + C6808) * C2709 + (C6582 + C6583) * C2849) +
            (C4102 * C5957 + C4097 * C5963 + C4103 * C7768 + C92067 * C7769) *
                C2710) *
               C4101) *
              C92148 * C92099 * C1984)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C100 * C107 + C89 * C113 + C101 * C108 + C90 * C114 + C102 * C109 +
            C91 * C115 + C103 * C110 + C92 * C116) *
               C2849 +
           (C100 * C245 + C89 * C251 + C101 * C246 + C90 * C252 + C102 * C247 +
            C91 * C253 + C103 * C248 + C92 * C254) *
               C2709 -
           (C103 * C1386 + C92 * C1398 + C102 * C1387 + C91 * C1399 +
            C101 * C1388 + C90 * C1400 + C100 * C1389 + C89 * C1401) *
               C2850 -
           (C103 * C1537 + C92 * C1545 + C102 * C1538 + C91 * C1546 +
            C101 * C1539 + C90 * C1547 + C100 * C1540 + C89 * C1548) *
               C2710) *
              C92137 * C92148 * C92099 * C1983 +
          ((C100 * C1388 + C89 * C1400 + C101 * C1387 + C90 * C1399 +
            C102 * C1386 + C91 * C1398 + C103 * C2711 + C92 * C2712) *
               C2850 -
           ((C103 * C249 + C92 * C255 + C102 * C248 + C91 * C254 + C101 * C247 +
             C90 * C253 + C100 * C246 + C89 * C252) *
                C2709 +
            (C103 * C111 + C92 * C121 + C102 * C110 + C91 * C116 + C101 * C109 +
             C90 * C115 + C100 * C108 + C89 * C114) *
                C2849) +
           (C100 * C1539 + C89 * C1547 + C101 * C1538 + C90 * C1546 +
            C102 * C1537 + C91 * C1545 + C103 * C2851 + C92 * C2852) *
               C2710) *
              C92137 * C92148 * C92099 * C1984)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C92067 * C114) *
                C2849 +
            (C4102 * C245 + C4097 * C251 + C4103 * C246 + C92067 * C252) *
                C2709 -
            (C11002 + C11001) * C2850 - (C11218 + C11219) * C2710) *
               C92137 * C9514 +
           ((C11001 + C11002) * C2849 + (C11219 + C11218) * C2709 -
            (C11006 + C11005) * C2850 - (C11221 + C11220) * C2710) *
               C92137 * C9515 +
           (C11013 * C2849 + C11224 * C2709 - (C11011 + C11012) * C2850 -
            (C11223 + C11222) * C2710) *
               C92137 * C9516) *
              C92099 * C1983 +
          (((C12862 + C12861) * C2850 -
            ((C4103 * C247 + C92067 * C253 + C4102 * C246 + C4097 * C252) *
                 C2709 +
             (C4103 * C109 + C92067 * C115 + C4102 * C108 + C4097 * C114) *
                 C2849) +
            (C13089 + C13090) * C2710) *
               C92137 * C9514 +
           ((C12866 + C12865) * C2850 -
            ((C13090 + C13089) * C2709 + (C12861 + C12862) * C2849) +
            (C13091 + C13092) * C2710) *
               C92137 * C9515 +
           ((C4102 * C10960 + C4097 * C10966 + C4103 * C12840 +
             C92067 * C12841) *
                C2850 -
            ((C13092 + C13091) * C2709 + (C12865 + C12866) * C2849) +
            (C4102 * C11198 + C4097 * C11202 + C4103 * C13078 +
             C92067 * C13079) *
                C2710) *
               C92137 * C9516) *
              C92099 * C1984)) /
            (p * q * std::sqrt(p + q));
    d2eeyx[13] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4326 * C107 + C4099 * C308 + C4327 * C805 + C4100 * C1022 +
             C4328 * C806 + C4101 * C1023) *
                C1987 +
            (C4326 * C117 + C4099 * C314 + C4327 * C813 + C4100 * C1030 +
             C4328 * C822 + C4101 * C1031) *
                C1983 -
            (C4354 + C4355 + C4356) * C1988 - (C4357 + C4358 + C4359) * C1984) *
               C92148 * C4097 +
           ((C4356 + C4355 + C4354) * C1987 + (C4359 + C4358 + C4357) * C1983 -
            (C4362 + C4361 + C4360) * C1988 - (C4365 + C4364 + C4363) * C1984) *
               C92148 * C92067) *
              C2709 +
          (((C7883 + C7884 + C7885) * C1988 -
            ((C4328 * C5778 + C4101 * C6048 + C4327 * C3439 + C4100 * C3665 +
              C4326 * C1397 + C4099 * C1614) *
                 C1983 +
             (C4328 * C5772 + C4101 * C6042 + C4327 * C3431 + C4100 * C3661 +
              C4326 * C1389 + C4099 * C1606) *
                 C1987) +
            (C7886 + C7887 + C7888) * C1984) *
               C92148 * C4097 +
           ((C4326 * C1387 + C4099 * C1604 + C4327 * C3433 + C4100 * C3663 +
             C4328 * C7566 + C4101 * C7868) *
                C1988 -
            ((C7888 + C7887 + C7886) * C1983 +
             (C7885 + C7884 + C7883) * C1987) +
            (C4326 * C1395 + C4099 * C1612 + C4327 * C3441 + C4100 * C3667 +
             C4328 * C7568 + C4101 * C7869) *
                C1984) *
               C92148 * C92067) *
              C2710) *
         C92099) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C307 * C107 + C92137 * C308) * C1987 +
            (C307 * C117 + C92137 * C314) * C1983 - C337 * C1988 -
            C338 * C1984) *
               C92148 * C89 +
           (C337 * C1987 + C338 * C1983 - C339 * C1988 - C340 * C1984) *
               C92148 * C90 +
           (C339 * C1987 + C340 * C1983 - C341 * C1988 - C342 * C1984) *
               C92148 * C91 +
           (C341 * C1987 + C342 * C1983 - C343 * C1988 - C344 * C1984) *
               C92148 * C92) *
              C2709 +
          ((C2934 * C1988 -
            ((C307 * C1397 + C92137 * C1614) * C1983 +
             (C307 * C1389 + C92137 * C1606) * C1987) +
            C2935 * C1984) *
               C92148 * C89 +
           (C2936 * C1988 - (C2935 * C1983 + C2934 * C1987) + C2937 * C1984) *
               C92148 * C90 +
           (C2938 * C1988 - (C2937 * C1983 + C2936 * C1987) + C2939 * C1984) *
               C92148 * C91 +
           ((C307 * C2711 + C92137 * C2919) * C1988 -
            (C2939 * C1983 + C2938 * C1987) +
            (C307 * C2713 + C92137 * C2920) * C1984) *
               C92148 * C92) *
              C2710) *
         C92099) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92137 * C308) * C1987 +
             (C307 * C117 + C92137 * C314) * C1983 - C337 * C1988 -
             C338 * C1984) *
                C9514 +
            (C13193 + C13194 - C13195 - C13196) * C9515 +
            (C13197 + C13198 - C13199 - C13200) * C9516) *
               C4097 +
           ((C337 * C1987 + C338 * C1983 - C339 * C1988 - C340 * C1984) *
                C9514 +
            (C13201 + C13202 - C13203 - C13204) * C9515 +
            (C13205 + C13206 - C13207 - C13208) * C9516) *
               C92067) *
              C2709 +
          (((C13195 - (C13194 + C13193) + C13196) * C9514 +
            (C13199 - (C13198 + C13197) + C13200) * C9515 +
            (C11333 * C1988 - (C11334 * C1983 + C11335 * C1987) +
             C11332 * C1984) *
                C9516) *
               C4097 +
           ((C13203 - (C13202 + C13201) + C13204) * C9514 +
            (C13207 - (C13206 + C13205) + C13208) * C9515 +
            ((C307 * C12840 + C92137 * C13190) * C1988 -
             (C11332 * C1983 + C11333 * C1987) +
             (C307 * C12842 + C92137 * C13191) * C1984) *
                C9516) *
               C92067) *
              C2710) *
         C92099) /
            (p * q * std::sqrt(p + q));
    d2eeyy[13] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4326 * C107 + C4099 * C308 + C4327 * C805 + C4100 * C1022 +
              C4328 * C806 + C4101 * C1023) *
                 C181 +
             (C4326 * C182 + C4099 * C394 + C4327 * C890 + C4100 * C1085 +
              C4328 * C891 + C4101 * C1086) *
                 C92099) *
                C92148 * C4097 +
            ((C4356 + C4355 + C4354) * C181 +
             (C4452 + C4453 + C4454) * C92099) *
                C92148 * C92067) *
               C1983 -
           (((C4455 + C4456 + C4457) * C92099 +
             (C4362 + C4361 + C4360) * C181) *
                C92148 * C92067 +
            ((C4454 + C4453 + C4452) * C92099 +
             (C4354 + C4355 + C4356) * C181) *
                C92148 * C4097) *
               C1984) *
              C2709 +
          ((((C7883 + C7884 + C7885) * C181 +
             (C7994 + C7995 + C7996) * C92099) *
                C92148 * C4097 +
            ((C4326 * C1387 + C4099 * C1604 + C4327 * C3433 + C4100 * C3663 +
              C4328 * C7566 + C4101 * C7868) *
                 C181 +
             (C4326 * C1469 + C4099 * C1670 + C4327 * C3515 + C4100 * C3737 +
              C4328 * C7668 + C4101 * C7986) *
                 C92099) *
                C92148 * C92067) *
               C1984 -
           (((C7996 + C7995 + C7994) * C92099 +
             (C7885 + C7884 + C7883) * C181) *
                C92148 * C92067 +
            ((C4328 * C5870 + C4101 * C6128 + C4327 * C3513 + C4100 * C3735 +
              C4326 * C1471 + C4099 * C1672) *
                 C92099 +
             (C4328 * C5772 + C4101 * C6042 + C4327 * C3431 + C4100 * C3661 +
              C4326 * C1389 + C4099 * C1606) *
                 C181) *
                C92148 * C4097) *
               C1983) *
              C2710)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92137 * C308) * C181 +
             (C307 * C182 + C92137 * C394) * C92099) *
                C92148 * C89 +
            (C401 + C417) * C92148 * C90 + C423 * C91 + C424 * C92) *
               C1983 -
           ((C420 + C412) * C92148 * C92 + (C419 + C407) * C92148 * C91 +
            (C418 + C404) * C92148 * C90 + (C417 + C401) * C92148 * C89) *
               C1984) *
              C2709 +
          (((C3007 + C3019) * C92148 * C89 + (C3010 + C3020) * C92148 * C90 +
            (C3013 + C3021) * C92148 * C91 +
            ((C307 * C2711 + C92137 * C2919) * C181 +
             (C307 * C2781 + C92137 * C3005) * C92099) *
                C92148 * C92) *
               C1984 -
           ((C3021 + C3013) * C92148 * C92 + (C3020 + C3010) * C92148 * C91 +
            (C3019 + C3007) * C92148 * C90 +
            ((C307 * C1471 + C92137 * C1672) * C92099 +
             (C307 * C1389 + C92137 * C1606) * C181) *
                C92148 * C89) *
               C1983) *
              C2710)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C307 * C107 + C92137 * C308) * C181 +
              (C307 * C182 + C92137 * C394) * C92099) *
                 C9514 +
             (C11423 + C11440) * C9515 + C11444 * C9516) *
                C4097 +
            ((C401 + C417) * C9514 + C13308 * C9515 + C11429 * C9516) *
                C92067) *
               C1983 -
           (((C9835 + C9831) * C9516 + (C3020 + C3010) * C9515 +
             (C418 + C404) * C9514) *
                C92067 +
            (C13309 * C9516 + C13310 * C9515 + (C417 + C401) * C9514) * C4097) *
               C1984) *
              C2709 +
          (((C13308 * C9514 + C11429 * C9515 + (C11432 + C11442) * C9516) *
                C4097 +
            ((C3010 + C3020) * C9514 + (C9831 + C9835) * C9515 +
             ((C307 * C12840 + C92137 * C13190) * C181 +
              (C307 * C12966 + C92137 * C13306) * C92099) *
                 C9516) *
                C92067) *
               C1984 -
           (((C11442 + C11432) * C9516 + C13309 * C9515 + C13310 * C9514) *
                C92067 +
            ((C11443 + C11435) * C9516 + (C11441 + C11426) * C9515 +
             (C11440 + C11423) * C9514) *
                C4097) *
               C1983) *
              C2710)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[13] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4326 * C107 + C4099 * C308 + C4327 * C805 + C4100 * C1022 +
             C4328 * C806 + C4101 * C1023) *
                C2849 +
            (C4326 * C245 + C4099 * C474 + C4327 * C956 + C4100 * C1146 +
             C4328 * C957 + C4101 * C1147) *
                C2709 -
            (C4328 * C5772 + C4101 * C6042 + C4327 * C3431 + C4100 * C3661 +
             C4326 * C1389 + C4099 * C1606) *
                C2850 -
            (C4328 * C5958 + C4101 * C6207 + C4327 * C3587 + C4100 * C3805 +
             C4326 * C1540 + C4099 * C1727) *
                C2710) *
               C92148 * C4097 +
           ((C4356 + C4355 + C4354) * C2849 + (C4544 + C4545 + C4546) * C2709 -
            (C7885 + C7884 + C7883) * C2850 - (C8102 + C8103 + C8104) * C2710) *
               C92148 * C92067) *
              C92099 * C1983 +
          (((C7883 + C7884 + C7885) * C2850 -
            ((C4546 + C4545 + C4544) * C2709 +
             (C4354 + C4355 + C4356) * C2849) +
            (C8104 + C8103 + C8102) * C2710) *
               C92148 * C4097 +
           ((C4326 * C1387 + C4099 * C1604 + C4327 * C3433 + C4100 * C3663 +
             C4328 * C7566 + C4101 * C7868) *
                C2850 -
            ((C4547 + C4548 + C4549) * C2709 +
             (C4362 + C4361 + C4360) * C2849) +
            (C4326 * C1538 + C4099 * C1731 + C4327 * C3589 + C4100 * C3807 +
             C4328 * C7768 + C4101 * C8094) *
                C2710) *
               C92148 * C92067) *
              C92099 * C1984)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C307 * C107 + C92137 * C308) * C2849 +
            (C307 * C245 + C92137 * C474) * C2709 -
            (C307 * C1389 + C92137 * C1606) * C2850 -
            (C307 * C1540 + C92137 * C1727) * C2710) *
               C92148 * C89 +
           (C3089 + C3090 - C3091 - C3107) * C92148 * C90 +
           (C3094 + C3095 - C3096 - C3108) * C92148 * C91 +
           (C3099 + C3100 - C3101 - C3109) * C92148 * C92) *
              C92099 * C1983 +
          ((C3091 - (C3090 + C3089) + C3107) * C92148 * C89 +
           (C3096 - (C3095 + C3094) + C3108) * C92148 * C90 +
           (C3101 - (C3100 + C3099) + C3109) * C92148 * C91 +
           ((C307 * C2711 + C92137 * C2919) * C2850 -
            (C496 * C2709 + C343 * C2849) +
            (C307 * C2851 + C92137 * C3087) * C2710) *
               C92148 * C92) *
              C92099 * C1984)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92137 * C308) * C2849 +
             (C307 * C245 + C92137 * C474) * C2709 - C11327 * C2850 -
             C11531 * C2710) *
                C9514 +
            (C11327 * C2849 + C11531 * C2709 - C11329 * C2850 -
             C11532 * C2710) *
                C9515 +
            (C11329 * C2849 + C11532 * C2709 - C11335 * C2850 -
             C11533 * C2710) *
                C9516) *
               C4097 +
           ((C3089 + C3090 - C3091 - C3107) * C9514 +
            (C13410 + C13411 - C13412 - C13413) * C9515 +
            (C13414 + C13415 - C13416 - C13417) * C9516) *
               C92067) *
              C92099 * C1983 +
          (((C3091 - (C3090 + C3089) + C3107) * C9514 +
            (C13412 - (C13411 + C13410) + C13413) * C9515 +
            (C13416 - (C13415 + C13414) + C13417) * C9516) *
               C4097 +
           ((C3096 - (C3095 + C3094) + C3108) * C9514 +
            (C9750 * C2850 - (C3105 * C2709 + C2936 * C2849) + C9921 * C2710) *
                C9515 +
            ((C307 * C12840 + C92137 * C13190) * C2850 -
             (C9921 * C2709 + C9750 * C2849) +
             (C307 * C13078 + C92137 * C13408) * C2710) *
                C9516) *
               C92067) *
              C92099 * C1984)) /
            (p * q * std::sqrt(p + q));
    d2eezx[13] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92148 * C555) * C1987 +
             (C554 * C117 + C92148 * C561) * C1983 - C584 * C1988 -
             C585 * C1984) *
                C4097 +
            (C584 * C1987 + C585 * C1983 - C586 * C1988 - C587 * C1984) *
                C92067) *
               C4099 +
           ((C7244 + C7245 - C7246 - C7247) * C4097 +
            (C7248 + C7249 - C7250 - C7251) * C92067) *
               C4100 +
           ((C7252 + C7253 - C7254 - C7255) * C4097 +
            (C7256 + C7257 - C7258 - C7259) * C92067) *
               C4101) *
              C2709 +
          (((C3190 * C1988 -
             ((C554 * C1397 + C92148 * C1796) * C1983 +
              (C554 * C1389 + C92148 * C1788) * C1987) +
             C3191 * C1984) *
                C4097 +
            (C3192 * C1988 - (C3191 * C1983 + C3190 * C1987) + C3193 * C1984) *
                C92067) *
               C4099 +
           ((C8213 * C1988 -
             ((C554 * C3439 + C92148 * C3879) * C1983 +
              (C554 * C3431 + C92148 * C3875) * C1987) +
             C8214 * C1984) *
                C4097 +
            ((C554 * C3433 + C92148 * C3877) * C1988 -
             (C8214 * C1983 + C8213 * C1987) +
             (C554 * C3441 + C92148 * C3881) * C1984) *
                C92067) *
               C4100 +
           ((C8215 * C1988 -
             ((C554 * C5778 + C92148 * C6294) * C1983 +
              (C554 * C5772 + C92148 * C6288) * C1987) +
             C8216 * C1984) *
                C4097 +
            ((C554 * C7566 + C92148 * C8202) * C1988 -
             (C8216 * C1983 + C8215 * C1987) +
             (C554 * C7568 + C92148 * C8203) * C1984) *
                C92067) *
               C4101) *
              C2710) *
         C92099) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92148 * C555) * C1987 +
            (C554 * C117 + C92148 * C561) * C1983 - C584 * C1988 -
            C585 * C1984) *
               C89 +
           (C584 * C1987 + C585 * C1983 - C586 * C1988 - C587 * C1984) * C90 +
           (C586 * C1987 + C587 * C1983 - C588 * C1988 - C589 * C1984) * C91 +
           (C588 * C1987 + C589 * C1983 - C590 * C1988 - C591 * C1984) * C92) *
              C92137 * C2709 +
          ((C3190 * C1988 -
            ((C554 * C1397 + C92148 * C1796) * C1983 +
             (C554 * C1389 + C92148 * C1788) * C1987) +
            C3191 * C1984) *
               C89 +
           (C3192 * C1988 - (C3191 * C1983 + C3190 * C1987) + C3193 * C1984) *
               C90 +
           (C3194 * C1988 - (C3193 * C1983 + C3192 * C1987) + C3195 * C1984) *
               C91 +
           ((C554 * C2711 + C92148 * C3175) * C1988 -
            (C3195 * C1983 + C3194 * C1987) +
            (C554 * C2713 + C92148 * C3176) * C1984) *
               C92) *
              C92137 * C2710) *
         C92099) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C9997 * C107 + C9514 * C555 + C9998 * C1389 + C9515 * C1788 +
             C9999 * C1390 + C9516 * C1789) *
                C1987 +
            (C9997 * C117 + C9514 * C561 + C9998 * C1397 + C9515 * C1796 +
             C9999 * C1406 + C9516 * C1797) *
                C1983 -
            (C10025 + C10026 + C10027) * C1988 -
            (C10028 + C10029 + C10030) * C1984) *
               C4097 +
           ((C10027 + C10026 + C10025) * C1987 +
            (C10030 + C10029 + C10028) * C1983 -
            (C10033 + C10032 + C10031) * C1988 -
            (C10036 + C10035 + C10034) * C1984) *
               C92067) *
              C92137 * C2709 +
          (((C13530 + C13531 + C13532) * C1988 -
            ((C9999 * C10965 + C9516 * C11613 + C9998 * C1406 + C9515 * C1797 +
              C9997 * C1397 + C9514 * C1796) *
                 C1983 +
             (C9999 * C10961 + C9516 * C11609 + C9998 * C1390 + C9515 * C1789 +
              C9997 * C1389 + C9514 * C1788) *
                 C1987) +
            (C13533 + C13534 + C13535) * C1984) *
               C4097 +
           ((C9997 * C1387 + C9514 * C1786 + C9998 * C1392 + C9515 * C1791 +
             C9999 * C12840 + C9516 * C13515) *
                C1988 -
            ((C13535 + C13534 + C13533) * C1983 +
             (C13532 + C13531 + C13530) * C1987) +
            (C9997 * C1395 + C9514 * C1794 + C9998 * C1408 + C9515 * C1799 +
             C9999 * C12842 + C9516 * C13516) *
                C1984) *
               C92067) *
              C92137 * C2710) *
         C92099) /
            (p * q * std::sqrt(p + q));
    d2eezy[13] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C554 * C107 + C92148 * C555) * C181 +
              (C554 * C182 + C92148 * C641) * C92099) *
                 C4097 +
             (C648 + C664) * C92067) *
                C4099 +
            ((C5484 * C181 + C5591 * C92099) * C4097 +
             (C4710 + C4711) * C92067) *
                C4100 +
            ((C5486 * C181 + C5592 * C92099) * C4097 +
             (C4712 + C4722) * C92067) *
                C4101) *
               C1983 -
           (((C4723 + C4717) * C92067 + (C4722 + C4712) * C4097) * C4101 +
            ((C4718 + C4719) * C92067 + (C4711 + C4710) * C4097) * C4100 +
            ((C665 + C651) * C92067 + (C664 + C648) * C4097) * C4099) *
               C1984) *
              C2709 +
          ((((C3263 + C3275) * C4097 + (C3266 + C3276) * C92067) * C4099 +
            ((C8316 + C8324) * C4097 +
             ((C554 * C3433 + C92148 * C3877) * C181 +
              (C554 * C3515 + C92148 * C3951) * C92099) *
                 C92067) *
                C4100 +
            ((C8319 + C8325) * C4097 +
             ((C554 * C7566 + C92148 * C8202) * C181 +
              (C554 * C7668 + C92148 * C8314) * C92099) *
                 C92067) *
                C4101) *
               C1984 -
           (((C8325 + C8319) * C92067 +
             ((C554 * C5870 + C92148 * C6374) * C92099 +
              (C554 * C5772 + C92148 * C6288) * C181) *
                 C4097) *
                C4101 +
            ((C8324 + C8316) * C92067 +
             ((C554 * C3513 + C92148 * C3949) * C92099 +
              (C554 * C3431 + C92148 * C3875) * C181) *
                 C4097) *
                C4100 +
            ((C3275 + C3263) * C92067 +
             ((C554 * C1471 + C92148 * C1854) * C92099 +
              (C554 * C1389 + C92148 * C1788) * C181) *
                 C4097) *
                C4099) *
               C1983) *
              C2710)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92148 * C555) * C181 +
             (C554 * C182 + C92148 * C641) * C92099) *
                C89 +
            (C648 + C664) * C90 + C668 * C91 + C669 * C92) *
               C92137 * C1983 -
           ((C667 + C659) * C92 + (C666 + C654) * C91 + (C665 + C651) * C90 +
            (C664 + C648) * C89) *
               C92137 * C1984) *
              C2709 +
          (((C3263 + C3275) * C89 + (C3266 + C3276) * C90 +
            (C3269 + C3277) * C91 +
            ((C554 * C2711 + C92148 * C3175) * C181 +
             (C554 * C2781 + C92148 * C3261) * C92099) *
                C92) *
               C92137 * C1984 -
           ((C3277 + C3269) * C92 + (C3276 + C3266) * C91 +
            (C3275 + C3263) * C90 +
            ((C554 * C1471 + C92148 * C1854) * C92099 +
             (C554 * C1389 + C92148 * C1788) * C181) *
                C89) *
               C92137 * C1983) *
              C2710)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C9997 * C107 + C9514 * C555 + C9998 * C1389 + C9515 * C1788 +
              C9999 * C1390 + C9516 * C1789) *
                 C181 +
             (C9997 * C182 + C9514 * C641 + C9998 * C1471 + C9515 * C1854 +
              C9999 * C1472 + C9516 * C1855) *
                 C92099) *
                C4097 +
            ((C10027 + C10026 + C10025) * C181 +
             (C10123 + C10124 + C10125) * C92099) *
                C92067) *
               C92137 * C1983 -
           (((C10126 + C10127 + C10128) * C92099 +
             (C10033 + C10032 + C10031) * C181) *
                C92067 +
            ((C10125 + C10124 + C10123) * C92099 +
             (C10025 + C10026 + C10027) * C181) *
                C4097) *
               C92137 * C1984) *
              C2709 +
          ((((C13530 + C13531 + C13532) * C181 +
             (C13641 + C13642 + C13643) * C92099) *
                C4097 +
            ((C9997 * C1387 + C9514 * C1786 + C9998 * C1392 + C9515 * C1791 +
              C9999 * C12840 + C9516 * C13515) *
                 C181 +
             (C9997 * C1469 + C9514 * C1852 + C9998 * C1474 + C9515 * C1857 +
              C9999 * C12966 + C9516 * C13633) *
                 C92099) *
                C92067) *
               C92137 * C1984 -
           (((C13643 + C13642 + C13641) * C92099 +
             (C13532 + C13531 + C13530) * C181) *
                C92067 +
            ((C9999 * C11093 + C9516 * C11691 + C9998 * C1472 + C9515 * C1855 +
              C9997 * C1471 + C9514 * C1854) *
                 C92099 +
             (C9999 * C10961 + C9516 * C11609 + C9998 * C1390 + C9515 * C1789 +
              C9997 * C1389 + C9514 * C1788) *
                 C181) *
                C4097) *
               C92137 * C1983) *
              C2710)) /
            (p * q * std::sqrt(p + q));
    d2eezz[13] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((((C554 * C107 + C92148 * C555) * C2849 +
                       (C554 * C245 + C92148 * C719) * C2709 -
                       (C554 * C1389 + C92148 * C1788) * C2850 -
                       (C554 * C1540 + C92148 * C1909) * C2710) *
                          C4097 +
                      (C3345 + C3346 - C3347 - C3363) * C92067) *
                         C4099 +
                     ((C5484 * C2849 + C5686 * C2709 -
                       (C554 * C3431 + C92148 * C3875) * C2850 -
                       (C554 * C3587 + C92148 * C4019) * C2710) *
                          C4097 +
                      (C8425 + C8426 - C8427 - C8437) * C92067) *
                         C4100 +
                     ((C5486 * C2849 + C5687 * C2709 -
                       (C554 * C5772 + C92148 * C6288) * C2850 -
                       (C554 * C5958 + C92148 * C6455) * C2710) *
                          C4097 +
                      (C8430 + C8431 - C8432 - C8438) * C92067) *
                         C4101) *
                        C92099 * C1983 +
                    (((C3347 - (C3346 + C3345) + C3363) * C4097 +
                      (C3352 - (C3351 + C3350) + C3364) * C92067) *
                         C4099 +
                     ((C8427 - (C8426 + C8425) + C8437) * C4097 +
                      ((C554 * C3433 + C92148 * C3877) * C2850 -
                       (C2639 * C2709 + C2470 * C2849) +
                       (C554 * C3589 + C92148 * C4021) * C2710) *
                          C92067) *
                         C4100 +
                     ((C8432 - (C8431 + C8430) + C8438) * C4097 +
                      ((C554 * C7566 + C92148 * C8202) * C2850 -
                       (C4805 * C2709 + C4634 * C2849) +
                       (C554 * C7768 + C92148 * C8423) * C2710) *
                          C92067) *
                         C4101) *
                        C92099 * C1984)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C554 * C107 + C92148 * C555) * C2849 +
                      (C554 * C245 + C92148 * C719) * C2709 -
                      (C554 * C1389 + C92148 * C1788) * C2850 -
                      (C554 * C1540 + C92148 * C1909) * C2710) *
                         C89 +
                     (C3345 + C3346 - C3347 - C3363) * C90 +
                     (C3350 + C3351 - C3352 - C3364) * C91 +
                     (C3355 + C3356 - C3357 - C3365) * C92) *
                        C92137 * C92099 * C1983 +
                    ((C3347 - (C3346 + C3345) + C3363) * C89 +
                     (C3352 - (C3351 + C3350) + C3364) * C90 +
                     (C3357 - (C3356 + C3355) + C3365) * C91 +
                     ((C554 * C2711 + C92148 * C3175) * C2850 -
                      (C741 * C2709 + C590 * C2849) +
                      (C554 * C2851 + C92148 * C3343) * C2710) *
                         C92) *
                        C92137 * C92099 * C1984)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C9997 * C107 + C9514 * C555 + C9998 * C1389 +
                       C9515 * C1788 + C9999 * C1390 + C9516 * C1789) *
                          C2849 +
                      (C9997 * C245 + C9514 * C719 + C9998 * C1540 +
                       C9515 * C1909 + C9999 * C1541 + C9516 * C1910) *
                          C2709 -
                      (C9999 * C10961 + C9516 * C11609 + C9998 * C1390 +
                       C9515 * C1789 + C9997 * C1389 + C9514 * C1788) *
                          C2850 -
                      (C9999 * C11197 + C9516 * C11768 + C9998 * C1541 +
                       C9515 * C1910 + C9997 * C1540 + C9514 * C1909) *
                          C2710) *
                         C4097 +
                     ((C10027 + C10026 + C10025) * C2849 +
                      (C10215 + C10216 + C10217) * C2709 -
                      (C13532 + C13531 + C13530) * C2850 -
                      (C13749 + C13750 + C13751) * C2710) *
                         C92067) *
                        C92137 * C92099 * C1983 +
                    (((C13530 + C13531 + C13532) * C2850 -
                      ((C10217 + C10216 + C10215) * C2709 +
                       (C10025 + C10026 + C10027) * C2849) +
                      (C13751 + C13750 + C13749) * C2710) *
                         C4097 +
                     ((C9997 * C1387 + C9514 * C1786 + C9998 * C1392 +
                       C9515 * C1791 + C9999 * C12840 + C9516 * C13515) *
                          C2850 -
                      ((C10218 + C10219 + C10220) * C2709 +
                       (C10033 + C10032 + C10031) * C2849) +
                      (C9997 * C1538 + C9514 * C1913 + C9998 * C1543 +
                       C9515 * C1914 + C9999 * C13078 + C9516 * C13741) *
                          C2710) *
                         C92067) *
                        C92137 * C92099 * C1984)) /
                      (p * q * std::sqrt(p + q));
    d2eexx[14] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C100 * C107 + C89 * C113 + C101 * C108 + C90 * C114 + C102 * C109 +
            C91 * C115 + C103 * C110 + C92 * C116) *
               C801 +
           (C100 * C117 + C89 * C125 + C101 * C118 + C90 * C126 + C102 * C119 +
            C91 * C127 + C103 * C120 + C92 * C128) *
               C92078) *
              C92137 * C92148 * C92110 * C798 -
          ((C103 * C810 + C92 * C826 + C102 * C811 + C91 * C827 + C101 * C812 +
            C90 * C828 + C100 * C813 + C89 * C829) *
               C92078 +
           (C103 * C802 + C92 * C814 + C102 * C803 + C91 * C815 + C101 * C804 +
            C90 * C816 + C100 * C805 + C89 * C817) *
               C801) *
              C92137 * C92148 * C92110 * C799 +
          ((C100 * C806 + C89 * C818 + C101 * C807 + C90 * C819 + C102 * C808 +
            C91 * C820 + C103 * C809 + C92 * C821) *
               C801 +
           (C100 * C822 + C89 * C830 + C101 * C823 + C90 * C831 + C102 * C824 +
            C91 * C832 + C103 * C825 + C92 * C833) *
               C92078) *
              C92137 * C92148 * C92110 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((C100 * C107 + C89 * C113 + C101 * C108 + C90 * C114 + C102 * C109 +
           C91 * C115 + C103 * C110 + C92 * C116) *
              C104 +
          (C100 * C117 + C89 * C125 + C101 * C118 + C90 * C126 + C102 * C119 +
           C91 * C127 + C103 * C120 + C92 * C128) *
              C93 -
          (C103 * C111 + C92 * C121 + C102 * C110 + C91 * C116 + C101 * C109 +
           C90 * C115 + C100 * C108 + C89 * C114) *
              C105 -
          (C103 * C122 + C92 * C129 + C102 * C120 + C91 * C128 + C101 * C119 +
           C90 * C127 + C100 * C118 + C89 * C126) *
              C94 +
          (C100 * C109 + C89 * C115 + C101 * C110 + C90 * C116 + C102 * C111 +
           C91 * C121 + C103 * C112 + C92 * C123) *
              C106 +
          (C100 * C119 + C89 * C127 + C101 * C120 + C90 * C128 + C102 * C122 +
           C91 * C129 + C103 * C124 + C92 * C130) *
              C95) *
         C92137 * C92148 * C92110 * C92099) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C4102 * C107 + C4097 * C113 + C4103 * C108 + C92067 * C114) * C104 +
           (C4102 * C117 + C4097 * C125 + C4103 * C118 + C92067 * C126) * C93 -
           (C4103 * C109 + C92067 * C115 + C4102 * C108 + C4097 * C114) * C105 -
           (C4103 * C119 + C92067 * C127 + C4102 * C118 + C4097 * C126) * C94 +
           (C4102 * C109 + C4097 * C115 + C4103 * C110 + C92067 * C116) * C106 +
           (C4102 * C119 + C4097 * C127 + C4103 * C120 + C92067 * C128) * C95) *
              C4099 +
          ((C4102 * C805 + C4097 * C817 + C4103 * C804 + C92067 * C816) * C104 +
           (C4102 * C813 + C4097 * C829 + C4103 * C812 + C92067 * C828) * C93 -
           (C4103 * C803 + C92067 * C815 + C4102 * C804 + C4097 * C816) * C105 -
           (C4103 * C811 + C92067 * C827 + C4102 * C812 + C4097 * C828) * C94 +
           (C4102 * C803 + C4097 * C815 + C4103 * C802 + C92067 * C814) * C106 +
           (C4102 * C811 + C4097 * C827 + C4103 * C810 + C92067 * C826) * C95) *
              C4100 +
          ((C4102 * C806 + C4097 * C818 + C4103 * C807 + C92067 * C819) * C104 +
           (C4102 * C822 + C4097 * C830 + C4103 * C823 + C92067 * C831) * C93 -
           (C4103 * C808 + C92067 * C820 + C4102 * C807 + C4097 * C819) * C105 -
           (C4103 * C824 + C92067 * C832 + C4102 * C823 + C4097 * C831) * C94 +
           (C4102 * C808 + C4097 * C820 + C4103 * C809 + C92067 * C821) * C106 +
           (C4102 * C824 + C4097 * C832 + C4103 * C825 + C92067 * C833) * C95) *
              C4101) *
         C92148 * C92110 * C92099) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C92067 * C114) *
                C801 +
            (C4102 * C117 + C4097 * C125 + C4103 * C118 + C92067 * C126) *
                C92078) *
               C4099 +
           ((C4922 + C4923) * C801 + (C4924 + C4925) * C92078) * C4100 +
           C4938 * C4101) *
              C92148 * C92110 * C798 -
          (((C4930 + C4931) * C92078 + (C4932 + C4933) * C801) * C4101 +
           ((C4929 + C4928) * C92078 + (C4927 + C4926) * C801) * C4100 +
           ((C4925 + C4924) * C92078 + (C4923 + C4922) * C801) * C4099) *
              C92148 * C92110 * C799 +
          (C4938 * C4099 +
           ((C4933 + C4932) * C801 + (C4931 + C4930) * C92078) * C4100 +
           ((C4102 * C4883 + C4097 * C4889 + C4103 * C4884 + C92067 * C4890) *
                C801 +
            (C4102 * C4891 + C4097 * C4895 + C4103 * C4892 + C92067 * C4896) *
                C92078) *
               C4101) *
              C92148 * C92110 * C800)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C4102 * C107 + C4097 * C113 + C4103 * C108 + C92067 * C114) * C104 +
           (C4102 * C117 + C4097 * C125 + C4103 * C118 + C92067 * C126) * C93 -
           (C4103 * C109 + C92067 * C115 + C4102 * C108 + C4097 * C114) * C105 -
           (C4103 * C119 + C92067 * C127 + C4102 * C118 + C4097 * C126) * C94 +
           (C4102 * C109 + C4097 * C115 + C4103 * C110 + C92067 * C116) * C106 +
           (C4102 * C119 + C4097 * C127 + C4103 * C120 + C92067 * C128) * C95) *
              C92137 * C9514 +
          ((C4102 * C1389 + C4097 * C1401 + C4103 * C1388 + C92067 * C1400) *
               C104 +
           (C4102 * C1397 + C4097 * C1413 + C4103 * C1396 + C92067 * C1412) *
               C93 -
           (C4103 * C1387 + C92067 * C1399 + C4102 * C1388 + C4097 * C1400) *
               C105 -
           (C4103 * C1395 + C92067 * C1411 + C4102 * C1396 + C4097 * C1412) *
               C94 +
           (C4102 * C1387 + C4097 * C1399 + C4103 * C1386 + C92067 * C1398) *
               C106 +
           (C4102 * C1395 + C4097 * C1411 + C4103 * C1394 + C92067 * C1410) *
               C95) *
              C92137 * C9515 +
          ((C4102 * C1390 + C4097 * C1402 + C4103 * C1391 + C92067 * C1403) *
               C104 +
           (C4102 * C1406 + C4097 * C1414 + C4103 * C1407 + C92067 * C1415) *
               C93 -
           (C4103 * C1392 + C92067 * C1404 + C4102 * C1391 + C4097 * C1403) *
               C105 -
           (C4103 * C1408 + C92067 * C1416 + C4102 * C1407 + C4097 * C1415) *
               C94 +
           (C4102 * C1392 + C4097 * C1404 + C4103 * C1393 + C92067 * C1405) *
               C106 +
           (C4102 * C1408 + C4097 * C1416 + C4103 * C1409 + C92067 * C1417) *
               C95) *
              C92137 * C9516) *
         C92110 * C92099) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C92067 * C114) *
                C801 +
            (C4102 * C117 + C4097 * C125 + C4103 * C118 + C92067 * C126) *
                C92078) *
               C92137 * C9514 +
           ((C4102 * C1389 + C4097 * C1401 + C4103 * C1388 + C92067 * C1400) *
                C801 +
            (C4102 * C1397 + C4097 * C1413 + C4103 * C1396 + C92067 * C1412) *
                C92078) *
               C92137 * C9515 +
           ((C4102 * C1390 + C4097 * C1402 + C4103 * C1391 + C92067 * C1403) *
                C801 +
            (C4102 * C1406 + C4097 * C1414 + C4103 * C1407 + C92067 * C1415) *
                C92078) *
               C92137 * C9516) *
              C92110 * C798 -
          (((C4103 * C5784 + C92067 * C5792 + C4102 * C5783 + C4097 * C5791) *
                C92078 +
            (C4103 * C5774 + C92067 * C5782 + C4102 * C5773 + C4097 * C5781) *
                C801) *
               C92137 * C9516 +
           ((C8565 + C8566) * C92078 + (C8567 + C8568) * C801) * C92137 *
               C9515 +
           ((C4925 + C4924) * C92078 + (C4923 + C4922) * C801) * C92137 *
               C9514) *
              C92110 * C799 +
          (C4938 * C92137 * C9514 +
           ((C8564 + C8563) * C801 + (C8562 + C8561) * C92078) * C92137 *
               C9515 +
           ((C4102 * C5775 + C4097 * C5785 + C4103 * C5776 + C92067 * C5786) *
                C801 +
            (C4102 * C5787 + C4097 * C5793 + C4103 * C5788 + C92067 * C5794) *
                C92078) *
               C92137 * C9516) *
              C92110 * C800)) /
            (p * q * std::sqrt(p + q));
    d2eexy[14] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((C100 * C107 + C89 * C113 + C101 * C108 + C90 * C114 + C102 * C109 +
           C91 * C115 + C103 * C110 + C92 * C116) *
              C884 +
          (C100 * C182 + C89 * C188 + C101 * C183 + C90 * C189 + C102 * C184 +
           C91 * C190 + C103 * C185 + C92 * C191) *
              C798 -
          (C103 * C802 + C92 * C814 + C102 * C803 + C91 * C815 + C101 * C804 +
           C90 * C816 + C100 * C805 + C89 * C817) *
              C885 -
          (C103 * C887 + C92 * C895 + C102 * C888 + C91 * C896 + C101 * C889 +
           C90 * C897 + C100 * C890 + C89 * C898) *
              C799 +
          (C100 * C806 + C89 * C818 + C101 * C807 + C90 * C819 + C102 * C808 +
           C91 * C820 + C103 * C809 + C92 * C821) *
              C886 +
          (C100 * C891 + C89 * C899 + C101 * C892 + C90 * C900 + C102 * C893 +
           C91 * C901 + C103 * C894 + C92 * C902) *
              C800) *
         C92137 * C92148 * C92078 * C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C100 * C107 + C89 * C113 + C101 * C108 + C90 * C114 + C102 * C109 +
            C91 * C115 + C103 * C110 + C92 * C116) *
               C181 +
           (C100 * C182 + C89 * C188 + C101 * C183 + C90 * C189 + C102 * C184 +
            C91 * C190 + C103 * C185 + C92 * C191) *
               C92099) *
              C92137 * C92148 * C93 -
          ((C103 * C186 + C92 * C192 + C102 * C185 + C91 * C191 + C101 * C184 +
            C90 * C190 + C100 * C183 + C89 * C189) *
               C92099 +
           (C103 * C111 + C92 * C121 + C102 * C110 + C91 * C116 + C101 * C109 +
            C90 * C115 + C100 * C108 + C89 * C114) *
               C181) *
              C92137 * C92148 * C94 +
          ((C100 * C109 + C89 * C115 + C101 * C110 + C90 * C116 + C102 * C111 +
            C91 * C121 + C103 * C112 + C92 * C123) *
               C181 +
           (C100 * C184 + C89 * C190 + C101 * C185 + C90 * C191 + C102 * C186 +
            C91 * C192 + C103 * C187 + C92 * C193) *
               C92099) *
              C92137 * C92148 * C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C92067 * C114) *
                C181 +
            (C4102 * C182 + C4097 * C188 + C4103 * C183 + C92067 * C189) *
                C92099) *
               C4099 +
           ((C4102 * C805 + C4097 * C817 + C4103 * C804 + C92067 * C816) *
                C181 +
            (C4102 * C890 + C4097 * C898 + C4103 * C889 + C92067 * C897) *
                C92099) *
               C4100 +
           ((C4102 * C806 + C4097 * C818 + C4103 * C807 + C92067 * C819) *
                C181 +
            (C4102 * C891 + C4097 * C899 + C4103 * C892 + C92067 * C900) *
                C92099) *
               C4101) *
              C92148 * C93 -
          (((C4103 * C893 + C92067 * C901 + C4102 * C892 + C4097 * C900) *
                C92099 +
            (C4103 * C808 + C92067 * C820 + C4102 * C807 + C4097 * C819) *
                C181) *
               C4101 +
           ((C4103 * C888 + C92067 * C896 + C4102 * C889 + C4097 * C897) *
                C92099 +
            (C4103 * C803 + C92067 * C815 + C4102 * C804 + C4097 * C816) *
                C181) *
               C4100 +
           ((C4103 * C184 + C92067 * C190 + C4102 * C183 + C4097 * C189) *
                C92099 +
            (C4103 * C109 + C92067 * C115 + C4102 * C108 + C4097 * C114) *
                C181) *
               C4099) *
              C92148 * C94 +
          (((C4102 * C109 + C4097 * C115 + C4103 * C110 + C92067 * C116) *
                C181 +
            (C4102 * C184 + C4097 * C190 + C4103 * C185 + C92067 * C191) *
                C92099) *
               C4099 +
           ((C4102 * C803 + C4097 * C815 + C4103 * C802 + C92067 * C814) *
                C181 +
            (C4102 * C888 + C4097 * C896 + C4103 * C887 + C92067 * C895) *
                C92099) *
               C4100 +
           ((C4102 * C808 + C4097 * C820 + C4103 * C809 + C92067 * C821) *
                C181 +
            (C4102 * C893 + C4097 * C901 + C4103 * C894 + C92067 * C902) *
                C92099) *
               C4101) *
              C92148 * C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C4102 * C107 + C4097 * C113 + C4103 * C108 + C92067 * C114) * C884 +
           (C4102 * C182 + C4097 * C188 + C4103 * C183 + C92067 * C189) * C798 -
           (C4923 + C4922) * C885 - (C5033 + C5034) * C799 + C4934 * C886 +
           C5039 * C800) *
              C4099 +
          ((C4922 + C4923) * C884 + (C5034 + C5033) * C798 -
           (C4927 + C4926) * C885 - (C5036 + C5035) * C799 +
           (C4933 + C4932) * C886 + (C5037 + C5038) * C800) *
              C4100 +
          (C4934 * C884 + C5039 * C798 - (C4932 + C4933) * C885 -
           (C5038 + C5037) * C799 +
           (C4102 * C4883 + C4097 * C4889 + C4103 * C4884 + C92067 * C4890) *
               C886 +
           (C4102 * C5014 + C4097 * C5018 + C4103 * C5015 + C92067 * C5019) *
               C800) *
              C4101) *
         C92148 * C92078 * C92110) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C92067 * C114) *
                C181 +
            (C4102 * C182 + C4097 * C188 + C4103 * C183 + C92067 * C189) *
                C92099) *
               C92137 * C9514 +
           ((C4102 * C1389 + C4097 * C1401 + C4103 * C1388 + C92067 * C1400) *
                C181 +
            (C4102 * C1471 + C4097 * C1479 + C4103 * C1470 + C92067 * C1478) *
                C92099) *
               C92137 * C9515 +
           ((C4102 * C1390 + C4097 * C1402 + C4103 * C1391 + C92067 * C1403) *
                C181 +
            (C4102 * C1472 + C4097 * C1480 + C4103 * C1473 + C92067 * C1481) *
                C92099) *
               C92137 * C9516) *
              C93 -
          (((C4103 * C1474 + C92067 * C1482 + C4102 * C1473 + C4097 * C1481) *
                C92099 +
            (C4103 * C1392 + C92067 * C1404 + C4102 * C1391 + C4097 * C1403) *
                C181) *
               C92137 * C9516 +
           ((C4103 * C1469 + C92067 * C1477 + C4102 * C1470 + C4097 * C1478) *
                C92099 +
            (C4103 * C1387 + C92067 * C1399 + C4102 * C1388 + C4097 * C1400) *
                C181) *
               C92137 * C9515 +
           ((C4103 * C184 + C92067 * C190 + C4102 * C183 + C4097 * C189) *
                C92099 +
            (C4103 * C109 + C92067 * C115 + C4102 * C108 + C4097 * C114) *
                C181) *
               C92137 * C9514) *
              C94 +
          (((C4102 * C109 + C4097 * C115 + C4103 * C110 + C92067 * C116) *
                C181 +
            (C4102 * C184 + C4097 * C190 + C4103 * C185 + C92067 * C191) *
                C92099) *
               C92137 * C9514 +
           ((C4102 * C1387 + C4097 * C1399 + C4103 * C1386 + C92067 * C1398) *
                C181 +
            (C4102 * C1469 + C4097 * C1477 + C4103 * C1468 + C92067 * C1476) *
                C92099) *
               C92137 * C9515 +
           ((C4102 * C1392 + C4097 * C1404 + C4103 * C1393 + C92067 * C1405) *
                C181 +
            (C4102 * C1474 + C4097 * C1482 + C4103 * C1475 + C92067 * C1483) *
                C92099) *
               C92137 * C9516) *
              C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C4102 * C107 + C4097 * C113 + C4103 * C108 + C92067 * C114) * C884 +
           (C4102 * C182 + C4097 * C188 + C4103 * C183 + C92067 * C189) * C798 -
           (C4923 + C4922) * C885 - (C5033 + C5034) * C799 + C4934 * C886 +
           C5039 * C800) *
              C92137 * C9514 +
          ((C4102 * C1389 + C4097 * C1401 + C4103 * C1388 + C92067 * C1400) *
               C884 +
           (C4102 * C1471 + C4097 * C1479 + C4103 * C1470 + C92067 * C1478) *
               C798 -
           (C8567 + C8568) * C885 - (C8680 + C8679) * C799 +
           (C8564 + C8563) * C886 + (C8681 + C8682) * C800) *
              C92137 * C9515 +
          ((C4102 * C1390 + C4097 * C1402 + C4103 * C1391 + C92067 * C1403) *
               C884 +
           (C4102 * C1472 + C4097 * C1480 + C4103 * C1473 + C92067 * C1481) *
               C798 -
           (C4103 * C5774 + C92067 * C5782 + C4102 * C5773 + C4097 * C5781) *
               C885 -
           (C4103 * C5872 + C92067 * C5878 + C4102 * C5871 + C4097 * C5877) *
               C799 +
           (C4102 * C5775 + C4097 * C5785 + C4103 * C5776 + C92067 * C5786) *
               C886 +
           (C4102 * C5873 + C4097 * C5879 + C4103 * C5874 + C92067 * C5880) *
               C800) *
              C92137 * C9516) *
         C92078 * C92110) /
            (p * q * std::sqrt(p + q));
    d2eexz[14] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C100 * C107 + C89 * C113 + C101 * C108 + C90 * C114 + C102 * C109 +
            C91 * C115 + C103 * C110 + C92 * C116) *
               C244 +
           (C100 * C245 + C89 * C251 + C101 * C246 + C90 * C252 + C102 * C247 +
            C91 * C253 + C103 * C248 + C92 * C254) *
               C92110) *
              C92137 * C92148 * C798 -
          ((C103 * C953 + C92 * C961 + C102 * C954 + C91 * C962 + C101 * C955 +
            C90 * C963 + C100 * C956 + C89 * C964) *
               C92110 +
           (C103 * C802 + C92 * C814 + C102 * C803 + C91 * C815 + C101 * C804 +
            C90 * C816 + C100 * C805 + C89 * C817) *
               C244) *
              C92137 * C92148 * C799 +
          ((C100 * C806 + C89 * C818 + C101 * C807 + C90 * C819 + C102 * C808 +
            C91 * C820 + C103 * C809 + C92 * C821) *
               C244 +
           (C100 * C957 + C89 * C965 + C101 * C958 + C90 * C966 + C102 * C959 +
            C91 * C967 + C103 * C960 + C92 * C968) *
               C92110) *
              C92137 * C92148 * C800) *
         C92078) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C100 * C107 + C89 * C113 + C101 * C108 + C90 * C114 + C102 * C109 +
            C91 * C115 + C103 * C110 + C92 * C116) *
               C244 +
           (C100 * C245 + C89 * C251 + C101 * C246 + C90 * C252 + C102 * C247 +
            C91 * C253 + C103 * C248 + C92 * C254) *
               C92110) *
              C92137 * C92148 * C92099 * C93 -
          ((C103 * C249 + C92 * C255 + C102 * C248 + C91 * C254 + C101 * C247 +
            C90 * C253 + C100 * C246 + C89 * C252) *
               C92110 +
           (C103 * C111 + C92 * C121 + C102 * C110 + C91 * C116 + C101 * C109 +
            C90 * C115 + C100 * C108 + C89 * C114) *
               C244) *
              C92137 * C92148 * C92099 * C94 +
          ((C100 * C109 + C89 * C115 + C101 * C110 + C90 * C116 + C102 * C111 +
            C91 * C121 + C103 * C112 + C92 * C123) *
               C244 +
           (C100 * C247 + C89 * C253 + C101 * C248 + C90 * C254 + C102 * C249 +
            C91 * C255 + C103 * C250 + C92 * C256) *
               C92110) *
              C92137 * C92148 * C92099 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C92067 * C114) *
                C244 +
            (C4102 * C245 + C4097 * C251 + C4103 * C246 + C92067 * C252) *
                C92110) *
               C4099 +
           ((C4102 * C805 + C4097 * C817 + C4103 * C804 + C92067 * C816) *
                C244 +
            (C4102 * C956 + C4097 * C964 + C4103 * C955 + C92067 * C963) *
                C92110) *
               C4100 +
           ((C4102 * C806 + C4097 * C818 + C4103 * C807 + C92067 * C819) *
                C244 +
            (C4102 * C957 + C4097 * C965 + C4103 * C958 + C92067 * C966) *
                C92110) *
               C4101) *
              C92148 * C92099 * C93 -
          (((C4103 * C959 + C92067 * C967 + C4102 * C958 + C4097 * C966) *
                C92110 +
            (C4103 * C808 + C92067 * C820 + C4102 * C807 + C4097 * C819) *
                C244) *
               C4101 +
           ((C4103 * C954 + C92067 * C962 + C4102 * C955 + C4097 * C963) *
                C92110 +
            (C4103 * C803 + C92067 * C815 + C4102 * C804 + C4097 * C816) *
                C244) *
               C4100 +
           ((C4103 * C247 + C92067 * C253 + C4102 * C246 + C4097 * C252) *
                C92110 +
            (C4103 * C109 + C92067 * C115 + C4102 * C108 + C4097 * C114) *
                C244) *
               C4099) *
              C92148 * C92099 * C94 +
          (((C4102 * C109 + C4097 * C115 + C4103 * C110 + C92067 * C116) *
                C244 +
            (C4102 * C247 + C4097 * C253 + C4103 * C248 + C92067 * C254) *
                C92110) *
               C4099 +
           ((C4102 * C803 + C4097 * C815 + C4103 * C802 + C92067 * C814) *
                C244 +
            (C4102 * C954 + C4097 * C962 + C4103 * C953 + C92067 * C961) *
                C92110) *
               C4100 +
           ((C4102 * C808 + C4097 * C820 + C4103 * C809 + C92067 * C821) *
                C244 +
            (C4102 * C959 + C4097 * C967 + C4103 * C960 + C92067 * C968) *
                C92110) *
               C4101) *
              C92148 * C92099 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C92067 * C114) *
                C244 +
            (C4102 * C245 + C4097 * C251 + C4103 * C246 + C92067 * C252) *
                C92110) *
               C4099 +
           ((C4922 + C4923) * C244 + (C5135 + C5136) * C92110) * C4100 +
           C5143 * C4101) *
              C92148 * C798 -
          (((C5139 + C5140) * C92110 + (C4932 + C4933) * C244) * C4101 +
           ((C5138 + C5137) * C92110 + (C4927 + C4926) * C244) * C4100 +
           ((C5136 + C5135) * C92110 + (C4923 + C4922) * C244) * C4099) *
              C92148 * C799 +
          (C5143 * C4099 +
           ((C4933 + C4932) * C244 + (C5140 + C5139) * C92110) * C4100 +
           ((C4102 * C4883 + C4097 * C4889 + C4103 * C4884 + C92067 * C4890) *
                C244 +
            (C4102 * C5115 + C4097 * C5119 + C4103 * C5116 + C92067 * C5120) *
                C92110) *
               C4101) *
              C92148 * C800) *
         C92078) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C92067 * C114) *
                C244 +
            (C4102 * C245 + C4097 * C251 + C4103 * C246 + C92067 * C252) *
                C92110) *
               C92137 * C9514 +
           ((C4102 * C1389 + C4097 * C1401 + C4103 * C1388 + C92067 * C1400) *
                C244 +
            (C4102 * C1540 + C4097 * C1548 + C4103 * C1539 + C92067 * C1547) *
                C92110) *
               C92137 * C9515 +
           ((C4102 * C1390 + C4097 * C1402 + C4103 * C1391 + C92067 * C1403) *
                C244 +
            (C4102 * C1541 + C4097 * C1549 + C4103 * C1542 + C92067 * C1550) *
                C92110) *
               C92137 * C9516) *
              C92099 * C93 -
          (((C4103 * C1543 + C92067 * C1551 + C4102 * C1542 + C4097 * C1550) *
                C92110 +
            (C4103 * C1392 + C92067 * C1404 + C4102 * C1391 + C4097 * C1403) *
                C244) *
               C92137 * C9516 +
           ((C4103 * C1538 + C92067 * C1546 + C4102 * C1539 + C4097 * C1547) *
                C92110 +
            (C4103 * C1387 + C92067 * C1399 + C4102 * C1388 + C4097 * C1400) *
                C244) *
               C92137 * C9515 +
           ((C4103 * C247 + C92067 * C253 + C4102 * C246 + C4097 * C252) *
                C92110 +
            (C4103 * C109 + C92067 * C115 + C4102 * C108 + C4097 * C114) *
                C244) *
               C92137 * C9514) *
              C92099 * C94 +
          (((C4102 * C109 + C4097 * C115 + C4103 * C110 + C92067 * C116) *
                C244 +
            (C4102 * C247 + C4097 * C253 + C4103 * C248 + C92067 * C254) *
                C92110) *
               C92137 * C9514 +
           ((C4102 * C1387 + C4097 * C1399 + C4103 * C1386 + C92067 * C1398) *
                C244 +
            (C4102 * C1538 + C4097 * C1546 + C4103 * C1537 + C92067 * C1545) *
                C92110) *
               C92137 * C9515 +
           ((C4102 * C1392 + C4097 * C1404 + C4103 * C1393 + C92067 * C1405) *
                C244 +
            (C4102 * C1543 + C4097 * C1551 + C4103 * C1544 + C92067 * C1552) *
                C92110) *
               C92137 * C9516) *
              C92099 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C92067 * C114) *
                C244 +
            (C4102 * C245 + C4097 * C251 + C4103 * C246 + C92067 * C252) *
                C92110) *
               C92137 * C9514 +
           ((C4102 * C1389 + C4097 * C1401 + C4103 * C1388 + C92067 * C1400) *
                C244 +
            (C4102 * C1540 + C4097 * C1548 + C4103 * C1539 + C92067 * C1547) *
                C92110) *
               C92137 * C9515 +
           ((C4102 * C1390 + C4097 * C1402 + C4103 * C1391 + C92067 * C1403) *
                C244 +
            (C4102 * C1541 + C4097 * C1549 + C4103 * C1542 + C92067 * C1550) *
                C92110) *
               C92137 * C9516) *
              C798 -
          (((C4103 * C5956 + C92067 * C5962 + C4102 * C5955 + C4097 * C5961) *
                C92110 +
            (C4103 * C5774 + C92067 * C5782 + C4102 * C5773 + C4097 * C5781) *
                C244) *
               C92137 * C9516 +
           ((C8793 + C8794) * C92110 + (C8567 + C8568) * C244) * C92137 *
               C9515 +
           ((C5136 + C5135) * C92110 + (C4923 + C4922) * C244) * C92137 *
               C9514) *
              C799 +
          (C5143 * C92137 * C9514 +
           ((C8564 + C8563) * C244 + (C8796 + C8795) * C92110) * C92137 *
               C9515 +
           ((C4102 * C5775 + C4097 * C5785 + C4103 * C5776 + C92067 * C5786) *
                C244 +
            (C4102 * C5959 + C4097 * C5965 + C4103 * C5960 + C92067 * C5966) *
                C92110) *
               C92137 * C9516) *
              C800) *
         C92078) /
            (p * q * std::sqrt(p + q));
    d2eeyx[14] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C307 * C107 + C92137 * C308) * C801 +
            (C307 * C117 + C92137 * C314) * C92078) *
               C92148 * C89 +
           (C337 * C801 + C338 * C92078) * C92148 * C90 +
           (C339 * C801 + C340 * C92078) * C92148 * C91 +
           (C341 * C801 + C342 * C92078) * C92148 * C92) *
              C92110 * C798 -
          (((C307 * C810 + C92137 * C1027) * C92078 +
            (C307 * C802 + C92137 * C1019) * C801) *
               C92148 * C92 +
           ((C307 * C811 + C92137 * C1028) * C92078 +
            (C307 * C803 + C92137 * C1020) * C801) *
               C92148 * C91 +
           ((C307 * C812 + C92137 * C1029) * C92078 +
            (C307 * C804 + C92137 * C1021) * C801) *
               C92148 * C90 +
           ((C307 * C813 + C92137 * C1030) * C92078 +
            (C307 * C805 + C92137 * C1022) * C801) *
               C92148 * C89) *
              C92110 * C799 +
          (((C307 * C806 + C92137 * C1023) * C801 +
            (C307 * C822 + C92137 * C1031) * C92078) *
               C92148 * C89 +
           ((C307 * C807 + C92137 * C1024) * C801 +
            (C307 * C823 + C92137 * C1032) * C92078) *
               C92148 * C90 +
           ((C307 * C808 + C92137 * C1025) * C801 +
            (C307 * C824 + C92137 * C1033) * C92078) *
               C92148 * C91 +
           ((C307 * C809 + C92137 * C1026) * C801 +
            (C307 * C825 + C92137 * C1034) * C92078) *
               C92148 * C92) *
              C92110 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C307 * C107 + C92137 * C308) * C104 +
           (C307 * C117 + C92137 * C314) * C93 - C337 * C105 - C338 * C94 +
           C339 * C106 + C340 * C95) *
              C92148 * C89 +
          (C337 * C104 + C338 * C93 - C339 * C105 - C340 * C94 + C341 * C106 +
           C342 * C95) *
              C92148 * C90 +
          (C339 * C104 + C340 * C93 - C341 * C105 - C342 * C94 + C343 * C106 +
           C344 * C95) *
              C92148 * C91 +
          (C341 * C104 + C342 * C93 - C343 * C105 - C344 * C94 +
           (C307 * C112 + C92137 * C313) * C106 +
           (C307 * C124 + C92137 * C319) * C95) *
              C92148 * C92) *
         C92110 * C92099) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C4326 * C107 + C4099 * C308 + C4327 * C805 + C4100 * C1022 +
            C4328 * C806 + C4101 * C1023) *
               C104 +
           (C4326 * C117 + C4099 * C314 + C4327 * C813 + C4100 * C1030 +
            C4328 * C822 + C4101 * C1031) *
               C93 -
           (C4354 + C4355 + C4356) * C105 - (C4357 + C4358 + C4359) * C94 +
           (C4360 + C4361 + C4362) * C106 + (C4363 + C4364 + C4365) * C95) *
              C92148 * C4097 +
          ((C4356 + C4355 + C4354) * C104 + (C4359 + C4358 + C4357) * C93 -
           (C4362 + C4361 + C4360) * C105 - (C4365 + C4364 + C4363) * C94 +
           (C4326 * C110 + C4099 * C311 + C4327 * C802 + C4100 * C1019 +
            C4328 * C809 + C4101 * C1026) *
               C106 +
           (C4326 * C120 + C4099 * C317 + C4327 * C810 + C4100 * C1027 +
            C4328 * C825 + C4101 * C1034) *
               C95) *
              C92148 * C92067) *
         C92110 * C92099) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4326 * C107 + C4099 * C308 + C4327 * C805 + C4100 * C1022 +
             C4328 * C806 + C4101 * C1023) *
                C801 +
            (C4326 * C117 + C4099 * C314 + C4327 * C813 + C4100 * C1030 +
             C4328 * C822 + C4101 * C1031) *
                C92078) *
               C92148 * C4097 +
           ((C4356 + C4355 + C4354) * C801 + (C4359 + C4358 + C4357) * C92078) *
               C92148 * C92067) *
              C92110 * C798 -
          (((C4328 * C4885 + C4101 * C5221 + C4327 * C823 + C4100 * C1032 +
             C4326 * C812 + C4099 * C1029) *
                C92078 +
            (C4328 * C4881 + C4101 * C5217 + C4327 * C807 + C4100 * C1024 +
             C4326 * C804 + C4099 * C1021) *
                C801) *
               C92148 * C92067 +
           ((C4328 * C4886 + C4101 * C5222 + C4327 * C822 + C4100 * C1031 +
             C4326 * C813 + C4099 * C1030) *
                C92078 +
            (C4328 * C4882 + C4101 * C5218 + C4327 * C806 + C4100 * C1023 +
             C4326 * C805 + C4099 * C1022) *
                C801) *
               C92148 * C4097) *
              C92110 * C799 +
          (((C4326 * C806 + C4099 * C1023 + C4327 * C4882 + C4100 * C5218 +
             C4328 * C4883 + C4101 * C5219) *
                C801 +
            (C4326 * C822 + C4099 * C1031 + C4327 * C4886 + C4100 * C5222 +
             C4328 * C4891 + C4101 * C5223) *
                C92078) *
               C92148 * C4097 +
           ((C4326 * C807 + C4099 * C1024 + C4327 * C4881 + C4100 * C5217 +
             C4328 * C4884 + C4101 * C5220) *
                C801 +
            (C4326 * C823 + C4099 * C1032 + C4327 * C4885 + C4100 * C5221 +
             C4328 * C4892 + C4101 * C5224) *
                C92078) *
               C92148 * C92067) *
              C92110 * C800)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C307 * C107 + C92137 * C308) * C104 +
            (C307 * C117 + C92137 * C314) * C93 - C337 * C105 - C338 * C94 +
            C339 * C106 + C340 * C95) *
               C9514 +
           ((C307 * C1389 + C92137 * C1606) * C104 +
            (C307 * C1397 + C92137 * C1614) * C93 - C2934 * C105 - C2935 * C94 +
            C2936 * C106 + C2937 * C95) *
               C9515 +
           ((C307 * C1390 + C92137 * C1607) * C104 +
            (C307 * C1406 + C92137 * C1615) * C93 - C9748 * C105 - C9749 * C94 +
            C9750 * C106 + C9751 * C95) *
               C9516) *
              C4097 +
          ((C337 * C104 + C338 * C93 - C339 * C105 - C340 * C94 + C341 * C106 +
            C342 * C95) *
               C9514 +
           (C2934 * C104 + C2935 * C93 - C2936 * C105 - C2937 * C94 +
            C2938 * C106 + C2939 * C95) *
               C9515 +
           (C9748 * C104 + C9749 * C93 - C9750 * C105 - C9751 * C94 +
            (C307 * C1393 + C92137 * C1610) * C106 +
            (C307 * C1409 + C92137 * C1618) * C95) *
               C9516) *
              C92067) *
         C92110 * C92099) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92137 * C308) * C801 +
             (C307 * C117 + C92137 * C314) * C92078) *
                C9514 +
            ((C307 * C1389 + C92137 * C1606) * C801 +
             (C307 * C1397 + C92137 * C1614) * C92078) *
                C9515 +
            ((C307 * C1390 + C92137 * C1607) * C801 +
             (C307 * C1406 + C92137 * C1615) * C92078) *
                C9516) *
               C4097 +
           ((C337 * C801 + C338 * C92078) * C9514 +
            (C2934 * C801 + C2935 * C92078) * C9515 +
            (C9748 * C801 + C9749 * C92078) * C9516) *
               C92067) *
              C92110 * C798 -
          ((((C307 * C5784 + C92137 * C6051) * C92078 +
             (C307 * C5774 + C92137 * C6045) * C801) *
                C9516 +
            ((C307 * C3440 + C92137 * C3666) * C92078 +
             (C307 * C3432 + C92137 * C3662) * C801) *
                C9515 +
            (C2213 * C92078 + C2212 * C801) * C9514) *
               C92067 +
           (((C307 * C5783 + C92137 * C6049) * C92078 +
             (C307 * C5773 + C92137 * C6043) * C801) *
                C9516 +
            ((C307 * C3439 + C92137 * C3665) * C92078 +
             (C307 * C3431 + C92137 * C3661) * C801) *
                C9515 +
            ((C307 * C813 + C92137 * C1030) * C92078 +
             (C307 * C805 + C92137 * C1022) * C801) *
                C9514) *
               C4097) *
              C92110 * C799 +
          ((((C307 * C806 + C92137 * C1023) * C801 +
             (C307 * C822 + C92137 * C1031) * C92078) *
                C9514 +
            ((C307 * C5772 + C92137 * C6042) * C801 +
             (C307 * C5778 + C92137 * C6048) * C92078) *
                C9515 +
            ((C307 * C5775 + C92137 * C6044) * C801 +
             (C307 * C5787 + C92137 * C6050) * C92078) *
                C9516) *
               C4097 +
           (((C307 * C807 + C92137 * C1024) * C801 +
             (C307 * C823 + C92137 * C1032) * C92078) *
                C9514 +
            ((C307 * C5771 + C92137 * C6041) * C801 +
             (C307 * C5777 + C92137 * C6047) * C92078) *
                C9515 +
            ((C307 * C5776 + C92137 * C6046) * C801 +
             (C307 * C5788 + C92137 * C6052) * C92078) *
                C9516) *
               C92067) *
              C92110 * C800)) /
            (p * q * std::sqrt(p + q));
    d2eeyy[14] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C307 * C107 + C92137 * C308) * C884 +
           (C307 * C182 + C92137 * C394) * C798 -
           (C307 * C805 + C92137 * C1022) * C885 -
           (C307 * C890 + C92137 * C1085) * C799 +
           (C307 * C806 + C92137 * C1023) * C886 +
           (C307 * C891 + C92137 * C1086) * C800) *
              C92148 * C89 +
          (C337 * C884 + C413 * C798 - (C307 * C804 + C92137 * C1021) * C885 -
           (C307 * C889 + C92137 * C1087) * C799 +
           (C307 * C807 + C92137 * C1024) * C886 +
           (C307 * C892 + C92137 * C1088) * C800) *
              C92148 * C90 +
          (C339 * C884 + C414 * C798 - (C307 * C803 + C92137 * C1020) * C885 -
           (C307 * C888 + C92137 * C1089) * C799 +
           (C307 * C808 + C92137 * C1025) * C886 +
           (C307 * C893 + C92137 * C1090) * C800) *
              C92148 * C91 +
          (C341 * C884 + C415 * C798 - (C307 * C802 + C92137 * C1019) * C885 -
           (C307 * C887 + C92137 * C1091) * C799 +
           (C307 * C809 + C92137 * C1026) * C886 +
           (C307 * C894 + C92137 * C1092) * C800) *
              C92148 * C92) *
         C92078 * C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C307 * C107 + C92137 * C308) * C181 +
            (C307 * C182 + C92137 * C394) * C92099) *
               C92148 * C89 +
           (C401 + C417) * C92148 * C90 + C423 * C91 + C424 * C92) *
              C93 -
          ((C420 + C412) * C92148 * C92 + (C419 + C407) * C92148 * C91 +
           (C418 + C404) * C92148 * C90 + (C417 + C401) * C92148 * C89) *
              C94 +
          (C423 * C89 + C424 * C90 + (C412 + C420) * C92148 * C91 +
           ((C307 * C112 + C92137 * C313) * C181 +
            (C307 * C187 + C92137 * C399) * C92099) *
               C92148 * C92) *
              C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4326 * C107 + C4099 * C308 + C4327 * C805 + C4100 * C1022 +
             C4328 * C806 + C4101 * C1023) *
                C181 +
            (C4326 * C182 + C4099 * C394 + C4327 * C890 + C4100 * C1085 +
             C4328 * C891 + C4101 * C1086) *
                C92099) *
               C92148 * C4097 +
           ((C4356 + C4355 + C4354) * C181 + (C4452 + C4453 + C4454) * C92099) *
               C92148 * C92067) *
              C93 -
          (((C4455 + C4456 + C4457) * C92099 + (C4362 + C4361 + C4360) * C181) *
               C92148 * C92067 +
           ((C4454 + C4453 + C4452) * C92099 + (C4354 + C4355 + C4356) * C181) *
               C92148 * C4097) *
              C94 +
          (((C4360 + C4361 + C4362) * C181 + (C4457 + C4456 + C4455) * C92099) *
               C92148 * C4097 +
           ((C4326 * C110 + C4099 * C311 + C4327 * C802 + C4100 * C1019 +
             C4328 * C809 + C4101 * C1026) *
                C181 +
            (C4326 * C185 + C4099 * C397 + C4327 * C887 + C4100 * C1091 +
             C4328 * C894 + C4101 * C1092) *
                C92099) *
               C92148 * C92067) *
              C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C4326 * C107 + C4099 * C308 + C4327 * C805 + C4100 * C1022 +
            C4328 * C806 + C4101 * C1023) *
               C884 +
           (C4326 * C182 + C4099 * C394 + C4327 * C890 + C4100 * C1085 +
            C4328 * C891 + C4101 * C1086) *
               C798 -
           (C4328 * C4882 + C4101 * C5218 + C4327 * C806 + C4100 * C1023 +
            C4326 * C805 + C4099 * C1022) *
               C885 -
           (C4328 * C5012 + C4101 * C5299 + C4327 * C891 + C4100 * C1086 +
            C4326 * C890 + C4099 * C1085) *
               C799 +
           (C4326 * C806 + C4099 * C1023 + C4327 * C4882 + C4100 * C5218 +
            C4328 * C4883 + C4101 * C5219) *
               C886 +
           (C4326 * C891 + C4099 * C1086 + C4327 * C5012 + C4100 * C5299 +
            C4328 * C5014 + C4101 * C5300) *
               C800) *
              C92148 * C4097 +
          ((C4356 + C4355 + C4354) * C884 + (C4452 + C4453 + C4454) * C798 -
           (C4328 * C4881 + C4101 * C5217 + C4327 * C807 + C4100 * C1024 +
            C4326 * C804 + C4099 * C1021) *
               C885 -
           (C4328 * C5013 + C4101 * C5301 + C4327 * C892 + C4100 * C1088 +
            C4326 * C889 + C4099 * C1087) *
               C799 +
           (C4326 * C807 + C4099 * C1024 + C4327 * C4881 + C4100 * C5217 +
            C4328 * C4884 + C4101 * C5220) *
               C886 +
           (C4326 * C892 + C4099 * C1088 + C4327 * C5013 + C4100 * C5301 +
            C4328 * C5015 + C4101 * C5302) *
               C800) *
              C92148 * C92067) *
         C92078 * C92110) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92137 * C308) * C181 +
             (C307 * C182 + C92137 * C394) * C92099) *
                C9514 +
            ((C307 * C1389 + C92137 * C1606) * C181 +
             (C307 * C1471 + C92137 * C1672) * C92099) *
                C9515 +
            ((C307 * C1390 + C92137 * C1607) * C181 +
             (C307 * C1472 + C92137 * C1673) * C92099) *
                C9516) *
               C4097 +
           ((C401 + C417) * C9514 + (C3007 + C3019) * C9515 +
            (C9826 + C9834) * C9516) *
               C92067) *
              C93 -
          (((C9835 + C9831) * C9516 + (C3020 + C3010) * C9515 +
            (C418 + C404) * C9514) *
               C92067 +
           ((C9834 + C9826) * C9516 + (C3019 + C3007) * C9515 +
            (C417 + C401) * C9514) *
               C4097) *
              C94 +
          ((C421 * C9514 + (C3010 + C3020) * C9515 + (C9831 + C9835) * C9516) *
               C4097 +
           (C422 * C9514 + (C3013 + C3021) * C9515 +
            ((C307 * C1393 + C92137 * C1610) * C181 +
             (C307 * C1475 + C92137 * C1676) * C92099) *
                C9516) *
               C92067) *
              C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C307 * C107 + C92137 * C308) * C884 +
            (C307 * C182 + C92137 * C394) * C798 -
            (C307 * C805 + C92137 * C1022) * C885 -
            (C307 * C890 + C92137 * C1085) * C799 +
            (C307 * C806 + C92137 * C1023) * C886 +
            (C307 * C891 + C92137 * C1086) * C800) *
               C9514 +
           ((C307 * C1389 + C92137 * C1606) * C884 +
            (C307 * C1471 + C92137 * C1672) * C798 -
            (C307 * C3431 + C92137 * C3661) * C885 -
            (C307 * C3513 + C92137 * C3735) * C799 +
            (C307 * C5772 + C92137 * C6042) * C886 +
            (C307 * C5870 + C92137 * C6128) * C800) *
               C9515 +
           ((C307 * C1390 + C92137 * C1607) * C884 +
            (C307 * C1472 + C92137 * C1673) * C798 -
            (C307 * C5773 + C92137 * C6043) * C885 -
            (C307 * C5871 + C92137 * C6129) * C799 +
            (C307 * C5775 + C92137 * C6044) * C886 +
            (C307 * C5873 + C92137 * C6130) * C800) *
               C9516) *
              C4097 +
          ((C337 * C884 + C413 * C798 - C2212 * C885 - C2300 * C799 +
            (C307 * C807 + C92137 * C1024) * C886 +
            (C307 * C892 + C92137 * C1088) * C800) *
               C9514 +
           (C2934 * C884 + C3016 * C798 -
            (C307 * C3432 + C92137 * C3662) * C885 -
            (C307 * C3514 + C92137 * C3736) * C799 +
            (C307 * C5771 + C92137 * C6041) * C886 +
            (C307 * C5869 + C92137 * C6127) * C800) *
               C9515 +
           (C9748 * C884 + C9832 * C798 -
            (C307 * C5774 + C92137 * C6045) * C885 -
            (C307 * C5872 + C92137 * C6131) * C799 +
            (C307 * C5776 + C92137 * C6046) * C886 +
            (C307 * C5874 + C92137 * C6132) * C800) *
               C9516) *
              C92067) *
         C92078 * C92110) /
            (p * q * std::sqrt(p + q));
    d2eeyz[14] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C307 * C107 + C92137 * C308) * C244 +
            (C307 * C245 + C92137 * C474) * C92110) *
               C92148 * C89 +
           (C481 + C497) * C92148 * C90 + C503 * C91 + C504 * C92) *
              C798 -
          (((C307 * C953 + C92137 * C1143) * C92110 +
            (C307 * C802 + C92137 * C1019) * C244) *
               C92148 * C92 +
           ((C307 * C954 + C92137 * C1144) * C92110 +
            (C307 * C803 + C92137 * C1020) * C244) *
               C92148 * C91 +
           ((C307 * C955 + C92137 * C1145) * C92110 +
            (C307 * C804 + C92137 * C1021) * C244) *
               C92148 * C90 +
           ((C307 * C956 + C92137 * C1146) * C92110 +
            (C307 * C805 + C92137 * C1022) * C244) *
               C92148 * C89) *
              C799 +
          (((C307 * C806 + C92137 * C1023) * C244 +
            (C307 * C957 + C92137 * C1147) * C92110) *
               C92148 * C89 +
           ((C307 * C807 + C92137 * C1024) * C244 +
            (C307 * C958 + C92137 * C1148) * C92110) *
               C92148 * C90 +
           ((C307 * C808 + C92137 * C1025) * C244 +
            (C307 * C959 + C92137 * C1149) * C92110) *
               C92148 * C91 +
           ((C307 * C809 + C92137 * C1026) * C244 +
            (C307 * C960 + C92137 * C1150) * C92110) *
               C92148 * C92) *
              C800) *
         C92078) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C307 * C107 + C92137 * C308) * C244 +
            (C307 * C245 + C92137 * C474) * C92110) *
               C92148 * C89 +
           (C481 + C497) * C92148 * C90 + C503 * C91 + C504 * C92) *
              C92099 * C93 -
          ((C500 + C492) * C92148 * C92 + (C499 + C487) * C92148 * C91 +
           (C498 + C484) * C92148 * C90 + (C497 + C481) * C92148 * C89) *
              C92099 * C94 +
          (C503 * C89 + C504 * C90 + (C492 + C500) * C92148 * C91 +
           ((C307 * C112 + C92137 * C313) * C244 +
            (C307 * C250 + C92137 * C479) * C92110) *
               C92148 * C92) *
              C92099 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4326 * C107 + C4099 * C308 + C4327 * C805 + C4100 * C1022 +
             C4328 * C806 + C4101 * C1023) *
                C244 +
            (C4326 * C245 + C4099 * C474 + C4327 * C956 + C4100 * C1146 +
             C4328 * C957 + C4101 * C1147) *
                C92110) *
               C92148 * C4097 +
           ((C4356 + C4355 + C4354) * C244 + (C4544 + C4545 + C4546) * C92110) *
               C92148 * C92067) *
              C92099 * C93 -
          (((C4547 + C4548 + C4549) * C92110 + (C4362 + C4361 + C4360) * C244) *
               C92148 * C92067 +
           ((C4546 + C4545 + C4544) * C92110 + (C4354 + C4355 + C4356) * C244) *
               C92148 * C4097) *
              C92099 * C94 +
          (((C4360 + C4361 + C4362) * C244 + (C4549 + C4548 + C4547) * C92110) *
               C92148 * C4097 +
           ((C4326 * C110 + C4099 * C311 + C4327 * C802 + C4100 * C1019 +
             C4328 * C809 + C4101 * C1026) *
                C244 +
            (C4326 * C248 + C4099 * C477 + C4327 * C953 + C4100 * C1143 +
             C4328 * C960 + C4101 * C1150) *
                C92110) *
               C92148 * C92067) *
              C92099 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4326 * C107 + C4099 * C308 + C4327 * C805 + C4100 * C1022 +
             C4328 * C806 + C4101 * C1023) *
                C244 +
            (C4326 * C245 + C4099 * C474 + C4327 * C956 + C4100 * C1146 +
             C4328 * C957 + C4101 * C1147) *
                C92110) *
               C92148 * C4097 +
           ((C4356 + C4355 + C4354) * C244 + (C4544 + C4545 + C4546) * C92110) *
               C92148 * C92067) *
              C798 -
          (((C4328 * C5113 + C4101 * C5377 + C4327 * C958 + C4100 * C1148 +
             C4326 * C955 + C4099 * C1145) *
                C92110 +
            (C4328 * C4881 + C4101 * C5217 + C4327 * C807 + C4100 * C1024 +
             C4326 * C804 + C4099 * C1021) *
                C244) *
               C92148 * C92067 +
           ((C4328 * C5114 + C4101 * C5378 + C4327 * C957 + C4100 * C1147 +
             C4326 * C956 + C4099 * C1146) *
                C92110 +
            (C4328 * C4882 + C4101 * C5218 + C4327 * C806 + C4100 * C1023 +
             C4326 * C805 + C4099 * C1022) *
                C244) *
               C92148 * C4097) *
              C799 +
          (((C4326 * C806 + C4099 * C1023 + C4327 * C4882 + C4100 * C5218 +
             C4328 * C4883 + C4101 * C5219) *
                C244 +
            (C4326 * C957 + C4099 * C1147 + C4327 * C5114 + C4100 * C5378 +
             C4328 * C5115 + C4101 * C5379) *
                C92110) *
               C92148 * C4097 +
           ((C4326 * C807 + C4099 * C1024 + C4327 * C4881 + C4100 * C5217 +
             C4328 * C4884 + C4101 * C5220) *
                C244 +
            (C4326 * C958 + C4099 * C1148 + C4327 * C5113 + C4100 * C5377 +
             C4328 * C5116 + C4101 * C5380) *
                C92110) *
               C92148 * C92067) *
              C800) *
         C92078) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92137 * C308) * C244 +
             (C307 * C245 + C92137 * C474) * C92110) *
                C9514 +
            ((C307 * C1389 + C92137 * C1606) * C244 +
             (C307 * C1540 + C92137 * C1727) * C92110) *
                C9515 +
            ((C307 * C1390 + C92137 * C1607) * C244 +
             (C307 * C1541 + C92137 * C1728) * C92110) *
                C9516) *
               C4097 +
           ((C481 + C497) * C9514 + (C9910 + C9911) * C9515 +
            (C9912 + C9922) * C9516) *
               C92067) *
              C92099 * C93 -
          (((C9923 + C9917) * C9516 + (C9918 + C9919) * C9515 +
            (C498 + C484) * C9514) *
               C92067 +
           ((C9922 + C9912) * C9516 + (C9911 + C9910) * C9515 +
            (C497 + C481) * C9514) *
               C4097) *
              C92099 * C94 +
          ((C501 * C9514 + (C9919 + C9918) * C9515 + (C9917 + C9923) * C9516) *
               C4097 +
           (C502 * C9514 + (C2938 * C244 + C3106 * C92110) * C9515 +
            ((C307 * C1393 + C92137 * C1610) * C244 +
             (C307 * C1544 + C92137 * C1734) * C92110) *
                C9516) *
               C92067) *
              C92099 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92137 * C308) * C244 +
             (C307 * C245 + C92137 * C474) * C92110) *
                C9514 +
            ((C307 * C1389 + C92137 * C1606) * C244 +
             (C307 * C1540 + C92137 * C1727) * C92110) *
                C9515 +
            ((C307 * C1390 + C92137 * C1607) * C244 +
             (C307 * C1541 + C92137 * C1728) * C92110) *
                C9516) *
               C4097 +
           ((C481 + C497) * C9514 + (C9910 + C9911) * C9515 +
            (C9912 + C9922) * C9516) *
               C92067) *
              C798 -
          ((((C307 * C5956 + C92137 * C6211) * C92110 +
             (C307 * C5774 + C92137 * C6045) * C244) *
                C9516 +
            ((C307 * C3588 + C92137 * C3806) * C92110 +
             (C307 * C3432 + C92137 * C3662) * C244) *
                C9515 +
            (C2387 + C2381) * C9514) *
               C92067 +
           (((C307 * C5955 + C92137 * C6208) * C92110 +
             (C307 * C5773 + C92137 * C6043) * C244) *
                C9516 +
            ((C307 * C3587 + C92137 * C3805) * C92110 +
             (C307 * C3431 + C92137 * C3661) * C244) *
                C9515 +
            ((C307 * C956 + C92137 * C1146) * C92110 +
             (C307 * C805 + C92137 * C1022) * C244) *
                C9514) *
               C4097) *
              C799 +
          ((((C307 * C806 + C92137 * C1023) * C244 +
             (C307 * C957 + C92137 * C1147) * C92110) *
                C9514 +
            ((C307 * C5772 + C92137 * C6042) * C244 +
             (C307 * C5958 + C92137 * C6207) * C92110) *
                C9515 +
            ((C307 * C5775 + C92137 * C6044) * C244 +
             (C307 * C5959 + C92137 * C6209) * C92110) *
                C9516) *
               C4097 +
           (((C307 * C807 + C92137 * C1024) * C244 +
             (C307 * C958 + C92137 * C1148) * C92110) *
                C9514 +
            ((C307 * C5771 + C92137 * C6041) * C244 +
             (C307 * C5957 + C92137 * C6210) * C92110) *
                C9515 +
            ((C307 * C5776 + C92137 * C6046) * C244 +
             (C307 * C5960 + C92137 * C6212) * C92110) *
                C9516) *
               C92067) *
              C800) *
         C92078) /
            (p * q * std::sqrt(p + q));
    d2eezx[14] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92148 * C555) * C801 +
            (C554 * C117 + C92148 * C561) * C92078) *
               C89 +
           (C584 * C801 + C585 * C92078) * C90 +
           (C586 * C801 + C587 * C92078) * C91 +
           (C588 * C801 + C589 * C92078) * C92) *
              C92137 * C92110 * C798 -
          (((C554 * C810 + C92148 * C1209) * C92078 +
            (C554 * C802 + C92148 * C1201) * C801) *
               C92 +
           ((C554 * C811 + C92148 * C1210) * C92078 +
            (C554 * C803 + C92148 * C1202) * C801) *
               C91 +
           ((C554 * C812 + C92148 * C1211) * C92078 +
            (C554 * C804 + C92148 * C1203) * C801) *
               C90 +
           ((C554 * C813 + C92148 * C1212) * C92078 +
            (C554 * C805 + C92148 * C1204) * C801) *
               C89) *
              C92137 * C92110 * C799 +
          (((C554 * C806 + C92148 * C1205) * C801 +
            (C554 * C822 + C92148 * C1213) * C92078) *
               C89 +
           ((C554 * C807 + C92148 * C1206) * C801 +
            (C554 * C823 + C92148 * C1214) * C92078) *
               C90 +
           ((C554 * C808 + C92148 * C1207) * C801 +
            (C554 * C824 + C92148 * C1215) * C92078) *
               C91 +
           ((C554 * C809 + C92148 * C1208) * C801 +
            (C554 * C825 + C92148 * C1216) * C92078) *
               C92) *
              C92137 * C92110 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C554 * C107 + C92148 * C555) * C104 +
           (C554 * C117 + C92148 * C561) * C93 - C584 * C105 - C585 * C94 +
           C586 * C106 + C587 * C95) *
              C89 +
          (C584 * C104 + C585 * C93 - C586 * C105 - C587 * C94 + C588 * C106 +
           C589 * C95) *
              C90 +
          (C586 * C104 + C587 * C93 - C588 * C105 - C589 * C94 + C590 * C106 +
           C591 * C95) *
              C91 +
          (C588 * C104 + C589 * C93 - C590 * C105 - C591 * C94 +
           (C554 * C112 + C92148 * C560) * C106 +
           (C554 * C124 + C92148 * C566) * C95) *
              C92) *
         C92137 * C92110 * C92099) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92148 * C555) * C104 +
            (C554 * C117 + C92148 * C561) * C93 - C584 * C105 - C585 * C94 +
            C586 * C106 + C587 * C95) *
               C4097 +
           (C584 * C104 + C585 * C93 - C586 * C105 - C587 * C94 + C588 * C106 +
            C589 * C95) *
               C92067) *
              C4099 +
          (((C554 * C805 + C92148 * C1204) * C104 +
            (C554 * C813 + C92148 * C1212) * C93 - C2468 * C105 - C2469 * C94 +
            C2470 * C106 + C2471 * C95) *
               C4097 +
           (C2468 * C104 + C2469 * C93 - C2470 * C105 - C2471 * C94 +
            C2472 * C106 + C2473 * C95) *
               C92067) *
              C4100 +
          (((C554 * C806 + C92148 * C1205) * C104 +
            (C554 * C822 + C92148 * C1213) * C93 - C4632 * C105 - C4633 * C94 +
            C4634 * C106 + C4635 * C95) *
               C4097 +
           (C4632 * C104 + C4633 * C93 - C4634 * C105 - C4635 * C94 +
            (C554 * C809 + C92148 * C1208) * C106 +
            (C554 * C825 + C92148 * C1216) * C95) *
               C92067) *
              C4101) *
         C92110 * C92099) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92148 * C555) * C801 +
             (C554 * C117 + C92148 * C561) * C92078) *
                C4097 +
            (C584 * C801 + C585 * C92078) * C92067) *
               C4099 +
           ((C5493 + C5494) * C4097 + (C5468 + C5469) * C92067) * C4100 +
           C5504 * C4101) *
              C92110 * C798 -
          (((C5498 + C5499) * C92067 + (C5500 + C5501) * C4097) * C4101 +
           ((C5475 + C5474) * C92067 + (C5496 + C5495) * C4097) * C4100 +
           ((C5469 + C5468) * C92067 + (C5494 + C5493) * C4097) * C4099) *
              C92110 * C799 +
          (C5504 * C4099 +
           ((C5501 + C5500) * C4097 + (C5499 + C5498) * C92067) * C4100 +
           (((C554 * C4883 + C92148 * C5457) * C801 +
             (C554 * C4891 + C92148 * C5461) * C92078) *
                C4097 +
            ((C554 * C4884 + C92148 * C5458) * C801 +
             (C554 * C4892 + C92148 * C5462) * C92078) *
                C92067) *
               C4101) *
              C92110 * C800)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C9997 * C107 + C9514 * C555 + C9998 * C1389 + C9515 * C1788 +
            C9999 * C1390 + C9516 * C1789) *
               C104 +
           (C9997 * C117 + C9514 * C561 + C9998 * C1397 + C9515 * C1796 +
            C9999 * C1406 + C9516 * C1797) *
               C93 -
           (C10025 + C10026 + C10027) * C105 -
           (C10028 + C10029 + C10030) * C94 +
           (C10031 + C10032 + C10033) * C106 +
           (C10034 + C10035 + C10036) * C95) *
              C4097 +
          ((C10027 + C10026 + C10025) * C104 +
           (C10030 + C10029 + C10028) * C93 -
           (C10033 + C10032 + C10031) * C105 -
           (C10036 + C10035 + C10034) * C94 +
           (C9997 * C110 + C9514 * C558 + C9998 * C1386 + C9515 * C1785 +
            C9999 * C1393 + C9516 * C1792) *
               C106 +
           (C9997 * C120 + C9514 * C564 + C9998 * C1394 + C9515 * C1793 +
            C9999 * C1409 + C9516 * C1800) *
               C95) *
              C92067) *
         C92137 * C92110 * C92099) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9997 * C107 + C9514 * C555 + C9998 * C1389 + C9515 * C1788 +
             C9999 * C1390 + C9516 * C1789) *
                C801 +
            (C9997 * C117 + C9514 * C561 + C9998 * C1397 + C9515 * C1796 +
             C9999 * C1406 + C9516 * C1797) *
                C92078) *
               C4097 +
           ((C10027 + C10026 + C10025) * C801 +
            (C10030 + C10029 + C10028) * C92078) *
               C92067) *
              C92137 * C92110 * C798 -
          (((C9999 * C5784 + C9516 * C6296 + C9998 * C3440 + C9515 * C3880 +
             C9997 * C812 + C9514 * C1211) *
                C92078 +
            (C9999 * C5774 + C9516 * C6290 + C9998 * C3432 + C9515 * C3876 +
             C9997 * C804 + C9514 * C1203) *
                C801) *
               C92067 +
           ((C9999 * C5783 + C9516 * C6295 + C9998 * C3439 + C9515 * C3879 +
             C9997 * C813 + C9514 * C1212) *
                C92078 +
            (C9999 * C5773 + C9516 * C6289 + C9998 * C3431 + C9515 * C3875 +
             C9997 * C805 + C9514 * C1204) *
                C801) *
               C4097) *
              C92137 * C92110 * C799 +
          (((C9997 * C806 + C9514 * C1205 + C9998 * C5772 + C9515 * C6288 +
             C9999 * C5775 + C9516 * C6291) *
                C801 +
            (C9997 * C822 + C9514 * C1213 + C9998 * C5778 + C9515 * C6294 +
             C9999 * C5787 + C9516 * C6297) *
                C92078) *
               C4097 +
           ((C9997 * C807 + C9514 * C1206 + C9998 * C5771 + C9515 * C6287 +
             C9999 * C5776 + C9516 * C6292) *
                C801 +
            (C9997 * C823 + C9514 * C1214 + C9998 * C5777 + C9515 * C6293 +
             C9999 * C5788 + C9516 * C6298) *
                C92078) *
               C92067) *
              C92137 * C92110 * C800)) /
            (p * q * std::sqrt(p + q));
    d2eezy[14] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C554 * C107 + C92148 * C555) * C884 +
           (C554 * C182 + C92148 * C641) * C798 -
           (C554 * C805 + C92148 * C1204) * C885 -
           (C554 * C890 + C92148 * C1267) * C799 +
           (C554 * C806 + C92148 * C1205) * C886 +
           (C554 * C891 + C92148 * C1268) * C800) *
              C89 +
          (C584 * C884 + C660 * C798 - (C554 * C804 + C92148 * C1203) * C885 -
           (C554 * C889 + C92148 * C1269) * C799 +
           (C554 * C807 + C92148 * C1206) * C886 +
           (C554 * C892 + C92148 * C1270) * C800) *
              C90 +
          (C586 * C884 + C661 * C798 - (C554 * C803 + C92148 * C1202) * C885 -
           (C554 * C888 + C92148 * C1271) * C799 +
           (C554 * C808 + C92148 * C1207) * C886 +
           (C554 * C893 + C92148 * C1272) * C800) *
              C91 +
          (C588 * C884 + C662 * C798 - (C554 * C802 + C92148 * C1201) * C885 -
           (C554 * C887 + C92148 * C1273) * C799 +
           (C554 * C809 + C92148 * C1208) * C886 +
           (C554 * C894 + C92148 * C1274) * C800) *
              C92) *
         C92137 * C92078 * C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92148 * C555) * C181 +
            (C554 * C182 + C92148 * C641) * C92099) *
               C89 +
           (C648 + C664) * C90 + C668 * C91 + C669 * C92) *
              C92137 * C93 -
          ((C667 + C659) * C92 + (C666 + C654) * C91 + (C665 + C651) * C90 +
           (C664 + C648) * C89) *
              C92137 * C94 +
          (C668 * C89 + C669 * C90 + (C659 + C667) * C91 +
           ((C554 * C112 + C92148 * C560) * C181 +
            (C554 * C187 + C92148 * C646) * C92099) *
               C92) *
              C92137 * C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92148 * C555) * C181 +
             (C554 * C182 + C92148 * C641) * C92099) *
                C4097 +
            (C648 + C664) * C92067) *
               C4099 +
           (((C554 * C805 + C92148 * C1204) * C181 +
             (C554 * C890 + C92148 * C1267) * C92099) *
                C4097 +
            (C4710 + C4711) * C92067) *
               C4100 +
           (((C554 * C806 + C92148 * C1205) * C181 +
             (C554 * C891 + C92148 * C1268) * C92099) *
                C4097 +
            (C4712 + C4722) * C92067) *
               C4101) *
              C93 -
          (((C4723 + C4717) * C92067 + (C4722 + C4712) * C4097) * C4101 +
           ((C4718 + C4719) * C92067 + (C4711 + C4710) * C4097) * C4100 +
           ((C665 + C651) * C92067 + (C664 + C648) * C4097) * C4099) *
              C94 +
          ((C668 * C4097 + C669 * C92067) * C4099 +
           ((C4719 + C4718) * C4097 +
            (C2472 * C181 + C2558 * C92099) * C92067) *
               C4100 +
           ((C4717 + C4723) * C4097 +
            ((C554 * C809 + C92148 * C1208) * C181 +
             (C554 * C894 + C92148 * C1274) * C92099) *
                C92067) *
               C4101) *
              C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92148 * C555) * C884 +
            (C554 * C182 + C92148 * C641) * C798 - C5484 * C885 - C5591 * C799 +
            C5486 * C886 + C5592 * C800) *
               C4097 +
           (C584 * C884 + C660 * C798 - C2468 * C885 - C2556 * C799 +
            C4632 * C886 + C4720 * C800) *
               C92067) *
              C4099 +
          ((C5484 * C884 + C5591 * C798 - C5486 * C885 - C5592 * C799 +
            C5492 * C886 + C5593 * C800) *
               C4097 +
           (C2468 * C884 + C2556 * C798 - C4632 * C885 - C4720 * C799 +
            C5490 * C886 + C5594 * C800) *
               C92067) *
              C4100 +
          ((C5486 * C884 + C5592 * C798 - C5492 * C885 - C5593 * C799 +
            (C554 * C4883 + C92148 * C5457) * C886 +
            (C554 * C5014 + C92148 * C5580) * C800) *
               C4097 +
           (C4632 * C884 + C4720 * C798 - C5490 * C885 - C5594 * C799 +
            (C554 * C4884 + C92148 * C5458) * C886 +
            (C554 * C5015 + C92148 * C5581) * C800) *
               C92067) *
              C4101) *
         C92078 * C92110) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9997 * C107 + C9514 * C555 + C9998 * C1389 + C9515 * C1788 +
             C9999 * C1390 + C9516 * C1789) *
                C181 +
            (C9997 * C182 + C9514 * C641 + C9998 * C1471 + C9515 * C1854 +
             C9999 * C1472 + C9516 * C1855) *
                C92099) *
               C4097 +
           ((C10027 + C10026 + C10025) * C181 +
            (C10123 + C10124 + C10125) * C92099) *
               C92067) *
              C92137 * C93 -
          (((C10126 + C10127 + C10128) * C92099 +
            (C10033 + C10032 + C10031) * C181) *
               C92067 +
           ((C10125 + C10124 + C10123) * C92099 +
            (C10025 + C10026 + C10027) * C181) *
               C4097) *
              C92137 * C94 +
          (((C10031 + C10032 + C10033) * C181 +
            (C10128 + C10127 + C10126) * C92099) *
               C4097 +
           ((C9997 * C110 + C9514 * C558 + C9998 * C1386 + C9515 * C1785 +
             C9999 * C1393 + C9516 * C1792) *
                C181 +
            (C9997 * C185 + C9514 * C644 + C9998 * C1468 + C9515 * C1851 +
             C9999 * C1475 + C9516 * C1858) *
                C92099) *
               C92067) *
              C92137 * C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C9997 * C107 + C9514 * C555 + C9998 * C1389 + C9515 * C1788 +
            C9999 * C1390 + C9516 * C1789) *
               C884 +
           (C9997 * C182 + C9514 * C641 + C9998 * C1471 + C9515 * C1854 +
            C9999 * C1472 + C9516 * C1855) *
               C798 -
           (C9999 * C5773 + C9516 * C6289 + C9998 * C3431 + C9515 * C3875 +
            C9997 * C805 + C9514 * C1204) *
               C885 -
           (C9999 * C5871 + C9516 * C6375 + C9998 * C3513 + C9515 * C3949 +
            C9997 * C890 + C9514 * C1267) *
               C799 +
           (C9997 * C806 + C9514 * C1205 + C9998 * C5772 + C9515 * C6288 +
            C9999 * C5775 + C9516 * C6291) *
               C886 +
           (C9997 * C891 + C9514 * C1268 + C9998 * C5870 + C9515 * C6374 +
            C9999 * C5873 + C9516 * C6377) *
               C800) *
              C4097 +
          ((C10027 + C10026 + C10025) * C884 +
           (C10123 + C10124 + C10125) * C798 -
           (C9999 * C5774 + C9516 * C6290 + C9998 * C3432 + C9515 * C3876 +
            C9997 * C804 + C9514 * C1203) *
               C885 -
           (C9999 * C5872 + C9516 * C6376 + C9998 * C3514 + C9515 * C3950 +
            C9997 * C889 + C9514 * C1269) *
               C799 +
           (C9997 * C807 + C9514 * C1206 + C9998 * C5771 + C9515 * C6287 +
            C9999 * C5776 + C9516 * C6292) *
               C886 +
           (C9997 * C892 + C9514 * C1270 + C9998 * C5869 + C9515 * C6373 +
            C9999 * C5874 + C9516 * C6378) *
               C800) *
              C92067) *
         C92137 * C92078 * C92110) /
            (p * q * std::sqrt(p + q));
    d2eezz[14] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92148 * C555) * C244 +
            (C554 * C245 + C92148 * C719) * C92110) *
               C89 +
           (C726 + C742) * C90 + C746 * C91 + C747 * C92) *
              C92137 * C798 -
          (((C554 * C953 + C92148 * C1325) * C92110 +
            (C554 * C802 + C92148 * C1201) * C244) *
               C92 +
           ((C554 * C954 + C92148 * C1326) * C92110 +
            (C554 * C803 + C92148 * C1202) * C244) *
               C91 +
           ((C554 * C955 + C92148 * C1327) * C92110 +
            (C554 * C804 + C92148 * C1203) * C244) *
               C90 +
           ((C554 * C956 + C92148 * C1328) * C92110 +
            (C554 * C805 + C92148 * C1204) * C244) *
               C89) *
              C92137 * C799 +
          (((C554 * C806 + C92148 * C1205) * C244 +
            (C554 * C957 + C92148 * C1329) * C92110) *
               C89 +
           ((C554 * C807 + C92148 * C1206) * C244 +
            (C554 * C958 + C92148 * C1330) * C92110) *
               C90 +
           ((C554 * C808 + C92148 * C1207) * C244 +
            (C554 * C959 + C92148 * C1331) * C92110) *
               C91 +
           ((C554 * C809 + C92148 * C1208) * C244 +
            (C554 * C960 + C92148 * C1332) * C92110) *
               C92) *
              C92137 * C800) *
         C92078) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92148 * C555) * C244 +
            (C554 * C245 + C92148 * C719) * C92110) *
               C89 +
           (C726 + C742) * C90 + C746 * C91 + C747 * C92) *
              C92137 * C92099 * C93 -
          ((C745 + C737) * C92 + (C744 + C732) * C91 + (C743 + C729) * C90 +
           (C742 + C726) * C89) *
              C92137 * C92099 * C94 +
          (C746 * C89 + C747 * C90 + (C737 + C745) * C91 +
           ((C554 * C112 + C92148 * C560) * C244 +
            (C554 * C250 + C92148 * C724) * C92110) *
               C92) *
              C92137 * C92099 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92148 * C555) * C244 +
             (C554 * C245 + C92148 * C719) * C92110) *
                C4097 +
            (C726 + C742) * C92067) *
               C4099 +
           (((C554 * C805 + C92148 * C1204) * C244 +
             (C554 * C956 + C92148 * C1328) * C92110) *
                C4097 +
            (C2637 + C2643) * C92067) *
               C4100 +
           (((C554 * C806 + C92148 * C1205) * C244 +
             (C554 * C957 + C92148 * C1329) * C92110) *
                C4097 +
            (C4798 + C4806) * C92067) *
               C4101) *
              C92099 * C93 -
          (((C4807 + C4803) * C92067 + (C4806 + C4798) * C4097) * C4101 +
           ((C2642 + C2634) * C92067 + (C2643 + C2637) * C4097) * C4100 +
           ((C743 + C729) * C92067 + (C742 + C726) * C4097) * C4099) *
              C92099 * C94 +
          ((C746 * C4097 + C747 * C92067) * C4099 +
           ((C2634 + C2642) * C4097 + (C2631 + C2641) * C92067) * C4100 +
           ((C4803 + C4807) * C4097 +
            ((C554 * C809 + C92148 * C1208) * C244 +
             (C554 * C960 + C92148 * C1332) * C92110) *
                C92067) *
               C4101) *
              C92099 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92148 * C555) * C244 +
             (C554 * C245 + C92148 * C719) * C92110) *
                C4097 +
            (C726 + C742) * C92067) *
               C4099 +
           ((C5673 + C5691) * C4097 + (C2637 + C2643) * C92067) * C4100 +
           C5697 * C4101) *
              C798 -
          (((C5693 + C5682) * C92067 + (C5694 + C5685) * C4097) * C4101 +
           ((C4806 + C4798) * C92067 + (C5692 + C5676) * C4097) * C4100 +
           ((C2643 + C2637) * C92067 + (C5691 + C5673) * C4097) * C4099) *
              C799 +
          (C5697 * C4099 +
           ((C5685 + C5694) * C4097 + (C5682 + C5693) * C92067) * C4100 +
           (((C554 * C4883 + C92148 * C5457) * C244 +
             (C554 * C5115 + C92148 * C5670) * C92110) *
                C4097 +
            ((C554 * C4884 + C92148 * C5458) * C244 +
             (C554 * C5116 + C92148 * C5671) * C92110) *
                C92067) *
               C4101) *
              C800) *
         C92078) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9997 * C107 + C9514 * C555 + C9998 * C1389 + C9515 * C1788 +
             C9999 * C1390 + C9516 * C1789) *
                C244 +
            (C9997 * C245 + C9514 * C719 + C9998 * C1540 + C9515 * C1909 +
             C9999 * C1541 + C9516 * C1910) *
                C92110) *
               C4097 +
           ((C10027 + C10026 + C10025) * C244 +
            (C10215 + C10216 + C10217) * C92110) *
               C92067) *
              C92137 * C92099 * C93 -
          (((C10218 + C10219 + C10220) * C92110 +
            (C10033 + C10032 + C10031) * C244) *
               C92067 +
           ((C10217 + C10216 + C10215) * C92110 +
            (C10025 + C10026 + C10027) * C244) *
               C4097) *
              C92137 * C92099 * C94 +
          (((C10031 + C10032 + C10033) * C244 +
            (C10220 + C10219 + C10218) * C92110) *
               C4097 +
           ((C9997 * C110 + C9514 * C558 + C9998 * C1386 + C9515 * C1785 +
             C9999 * C1393 + C9516 * C1792) *
                C244 +
            (C9997 * C248 + C9514 * C722 + C9998 * C1537 + C9515 * C1915 +
             C9999 * C1544 + C9516 * C1916) *
                C92110) *
               C92067) *
              C92137 * C92099 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9997 * C107 + C9514 * C555 + C9998 * C1389 + C9515 * C1788 +
             C9999 * C1390 + C9516 * C1789) *
                C244 +
            (C9997 * C245 + C9514 * C719 + C9998 * C1540 + C9515 * C1909 +
             C9999 * C1541 + C9516 * C1910) *
                C92110) *
               C4097 +
           ((C10027 + C10026 + C10025) * C244 +
            (C10215 + C10216 + C10217) * C92110) *
               C92067) *
              C92137 * C798 -
          (((C9999 * C5956 + C9516 * C6454 + C9998 * C3588 + C9515 * C4020 +
             C9997 * C955 + C9514 * C1327) *
                C92110 +
            (C9999 * C5774 + C9516 * C6290 + C9998 * C3432 + C9515 * C3876 +
             C9997 * C804 + C9514 * C1203) *
                C244) *
               C92067 +
           ((C9999 * C5955 + C9516 * C6453 + C9998 * C3587 + C9515 * C4019 +
             C9997 * C956 + C9514 * C1328) *
                C92110 +
            (C9999 * C5773 + C9516 * C6289 + C9998 * C3431 + C9515 * C3875 +
             C9997 * C805 + C9514 * C1204) *
                C244) *
               C4097) *
              C92137 * C799 +
          (((C9997 * C806 + C9514 * C1205 + C9998 * C5772 + C9515 * C6288 +
             C9999 * C5775 + C9516 * C6291) *
                C244 +
            (C9997 * C957 + C9514 * C1329 + C9998 * C5958 + C9515 * C6455 +
             C9999 * C5959 + C9516 * C6456) *
                C92110) *
               C4097 +
           ((C9997 * C807 + C9514 * C1206 + C9998 * C5771 + C9515 * C6287 +
             C9999 * C5776 + C9516 * C6292) *
                C244 +
            (C9997 * C958 + C9514 * C1330 + C9998 * C5957 + C9515 * C6457 +
             C9999 * C5960 + C9516 * C6458) *
                C92110) *
               C92067) *
              C92137 * C800) *
         C92078) /
            (p * q * std::sqrt(p + q));
    d2eexx[15] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C14808 * C107 + C92346 * C113 + C14809 * C108 +
                       C92347 * C114 + C14810 * C109 + C14805 * C115) *
                          C1987 +
                      (C14808 * C117 + C92346 * C125 + C14809 * C118 +
                       C92347 * C126 + C14810 * C119 + C14805 * C127) *
                          C1983 -
                      (C14810 * C110 + C14805 * C116 + C14809 * C109 +
                       C92347 * C115 + C14808 * C108 + C92346 * C114) *
                          C1988 -
                      (C14810 * C120 + C14805 * C128 + C14809 * C119 +
                       C92347 * C127 + C14808 * C118 + C92346 * C126) *
                          C1984) *
                         C92137 * C92323 +
                     ((C21271 + C21272 + C21273) * C1987 +
                      (C21274 + C21275 + C21276) * C1983 -
                      (C14810 * C1386 + C14805 * C1398 + C14809 * C1387 +
                       C92347 * C1399 + C14808 * C1388 + C92346 * C1400) *
                          C1988 -
                      (C14810 * C1394 + C14805 * C1410 + C14809 * C1395 +
                       C92347 * C1411 + C14808 * C1396 + C92346 * C1412) *
                          C1984) *
                         C92137 * C92212) *
                        C92110 * C1985 +
                    (((C17014 + C17013 + C17012) * C1988 -
                      ((C15597 + C15596 + C15595) * C1983 +
                       (C15594 + C15593 + C15592) * C1987) +
                      (C17017 + C17016 + C17015) * C1984) *
                         C92137 * C92323 +
                     ((C14808 * C3432 + C92346 * C3436 + C14809 * C3433 +
                       C92347 * C3437 + C14810 * C3434 + C14805 * C3438) *
                          C1988 -
                      ((C18935 + C18936 + C18937) * C1983 +
                       (C18938 + C18939 + C18940) * C1987) +
                      (C14808 * C3440 + C92346 * C3444 + C14809 * C3441 +
                       C92347 * C3445 + C14810 * C3442 + C14805 * C3446) *
                          C1984) *
                         C92137 * C92212) *
                        C92110 * C1986)) /
                  (p * q * std::sqrt(p + q));
    d2eexy[15] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C14808 * C107 + C92346 * C113 + C14809 * C108 +
                       C92347 * C114 + C14810 * C109 + C14805 * C115) *
                          C2059 +
                      (C14808 * C182 + C92346 * C188 + C14809 * C183 +
                       C92347 * C189 + C14810 * C184 + C14805 * C190) *
                          C1985 -
                      (C15594 + C15593 + C15592) * C2060 -
                      (C15690 + C15691 + C15692) * C1986) *
                         C92137 * C92323 +
                     ((C21271 + C21272 + C21273) * C2059 +
                      (C21369 + C21370 + C21371) * C1985 -
                      (C18938 + C18939 + C18940) * C2060 -
                      (C19047 + C19046 + C19045) * C1986) *
                         C92137 * C92212) *
                        C1983 +
                    (((C17014 + C17013 + C17012) * C2060 -
                      ((C14810 * C185 + C14805 * C191 + C14809 * C184 +
                        C92347 * C190 + C14808 * C183 + C92346 * C189) *
                           C1985 +
                       (C14810 * C110 + C14805 * C116 + C14809 * C109 +
                        C92347 * C115 + C14808 * C108 + C92346 * C114) *
                           C2059) +
                      (C17122 + C17123 + C17124) * C1986) *
                         C92137 * C92323 +
                     ((C14808 * C3432 + C92346 * C3436 + C14809 * C3433 +
                       C92347 * C3437 + C14810 * C3434 + C14805 * C3438) *
                          C2060 -
                      ((C14810 * C1468 + C14805 * C1476 + C14809 * C1469 +
                        C92347 * C1477 + C14808 * C1470 + C92346 * C1478) *
                           C1985 +
                       (C14810 * C1386 + C14805 * C1398 + C14809 * C1387 +
                        C92347 * C1399 + C14808 * C1388 + C92346 * C1400) *
                           C2059) +
                      (C14808 * C3514 + C92346 * C3518 + C14809 * C3515 +
                       C92347 * C3519 + C14810 * C3516 + C14805 * C3520) *
                          C1986) *
                         C92137 * C92212) *
                        C1984) *
                   C92110) /
                  (p * q * std::sqrt(p + q));
    d2eexz[15] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C14808 * C107 + C92346 * C113 + C14809 * C108 +
                        C92347 * C114 + C14810 * C109 + C14805 * C115) *
                           C244 +
                       (C14808 * C245 + C92346 * C251 + C14809 * C246 +
                        C92347 * C252 + C14810 * C247 + C14805 * C253) *
                           C92110) *
                          C92137 * C92323 +
                      ((C21271 + C21272 + C21273) * C244 +
                       (C21463 + C21462 + C21461) * C92110) *
                          C92137 * C92212) *
                         C1985 -
                     (((C19152 + C19153 + C19154) * C92110 +
                       (C18938 + C18939 + C18940) * C244) *
                          C92137 * C92212 +
                      ((C15784 + C15783 + C15782) * C92110 +
                       (C15594 + C15593 + C15592) * C244) *
                          C92137 * C92323) *
                         C1986) *
                        C1983 +
                    ((((C17014 + C17013 + C17012) * C244 +
                       (C17229 + C17230 + C17231) * C92110) *
                          C92137 * C92323 +
                      ((C14808 * C3432 + C92346 * C3436 + C14809 * C3433 +
                        C92347 * C3437 + C14810 * C3434 + C14805 * C3438) *
                           C244 +
                       (C14808 * C3588 + C92346 * C3592 + C14809 * C3589 +
                        C92347 * C3593 + C14810 * C3590 + C14805 * C3594) *
                           C92110) *
                          C92137 * C92212) *
                         C1986 -
                     (((C14810 * C1537 + C14805 * C1545 + C14809 * C1538 +
                        C92347 * C1546 + C14808 * C1539 + C92346 * C1547) *
                           C92110 +
                       (C14810 * C1386 + C14805 * C1398 + C14809 * C1387 +
                        C92347 * C1399 + C14808 * C1388 + C92346 * C1400) *
                           C244) *
                          C92137 * C92212 +
                      ((C14810 * C248 + C14805 * C254 + C14809 * C247 +
                        C92347 * C253 + C14808 * C246 + C92346 * C252) *
                           C92110 +
                       (C14810 * C110 + C14805 * C116 + C14809 * C109 +
                        C92347 * C115 + C14808 * C108 + C92346 * C114) *
                           C244) *
                          C92137 * C92323) *
                         C1985) *
                        C1984)) /
                  (p * q * std::sqrt(p + q));
    d2eeyx[15] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92137 * C308) * C1987 +
             (C307 * C117 + C92137 * C314) * C1983 - C337 * C1988 -
             C338 * C1984) *
                C92323 +
            (C13193 + C13194 - C13195 - C13196) * C92212) *
               C92346 +
           ((C337 * C1987 + C338 * C1983 - C339 * C1988 - C340 * C1984) *
                C92323 +
            (C13201 + C13202 - C13203 - C13204) * C92212) *
               C92347 +
           ((C339 * C1987 + C340 * C1983 - C341 * C1988 - C342 * C1984) *
                C92323 +
            (C2936 * C1987 + C2937 * C1983 - C2938 * C1988 - C2939 * C1984) *
                C92212) *
               C14805) *
              C92110 * C1985 +
          (((C2212 * C1988 -
             ((C307 * C813 + C92137 * C1030) * C1983 +
              (C307 * C805 + C92137 * C1022) * C1987) +
             C2213 * C1984) *
                C92323 +
            (C12183 * C1988 - (C14201 * C1983 + C14200 * C1987) +
             C12184 * C1984) *
                C92212) *
               C92346 +
           ((C2214 * C1988 - (C2213 * C1983 + C2212 * C1987) + C2215 * C1984) *
                C92323 +
            (C22311 * C1988 - (C12184 * C1983 + C12183 * C1987) +
             C22312 * C1984) *
                C92212) *
               C92347 +
           ((C2216 * C1988 - (C2215 * C1983 + C2214 * C1987) + C2217 * C1984) *
                C92323 +
            ((C307 * C3434 + C92137 * C3664) * C1988 -
             (C22312 * C1983 + C22311 * C1987) +
             (C307 * C3442 + C92137 * C3668) * C1984) *
                C92212) *
               C14805) *
              C92110 * C1986)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[15] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C307 * C107 + C92137 * C308) * C2059 +
                       (C307 * C182 + C92137 * C394) * C1985 -
                       (C307 * C805 + C92137 * C1022) * C2060 -
                       (C307 * C890 + C92137 * C1085) * C1986) *
                          C92323 +
                      (C14308 + C14309 - C14310 - C14320) * C92212) *
                         C92346 +
                     ((C2285 + C2286 - C2287 - C2303) * C92323 +
                      (C12286 + C12287 - C12288 - C12298) * C92212) *
                         C92347 +
                     ((C2290 + C2291 - C2292 - C2304) * C92323 +
                      (C22411 + C22412 - C22413 - C22417) * C92212) *
                         C14805) *
                        C1983 +
                    (((C2287 - (C2286 + C2285) + C2303) * C92323 +
                      (C12288 - (C12287 + C12286) + C12298) * C92212) *
                         C92346 +
                     ((C2292 - (C2291 + C2290) + C2304) * C92323 +
                      (C22413 - (C22412 + C22411) + C22417) * C92212) *
                         C92347 +
                     ((C2297 - (C2296 + C2295) + C2305) * C92323 +
                      ((C307 * C3434 + C92137 * C3664) * C2060 -
                       (C3018 * C1985 + C2938 * C2059) +
                       (C307 * C3516 + C92137 * C3738) * C1986) *
                          C92212) *
                         C14805) *
                        C1984) *
                   C92110) /
                  (p * q * std::sqrt(p + q));
    d2eeyz[15] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C307 * C107 + C92137 * C308) * C244 +
              (C307 * C245 + C92137 * C474) * C92110) *
                 C92323 +
             (C11327 * C244 + C11531 * C92110) * C92212) *
                C92346 +
            ((C481 + C497) * C92323 + (C9910 + C9911) * C92212) * C92347 +
            C20200 * C14805) *
               C1985 -
           (((C22520 + C22518) * C92212 + (C2386 + C2378) * C92323) * C14805 +
            ((C12408 + C12404) * C92212 + (C2387 + C2381) * C92323) * C92347 +
            ((C14426 * C92110 + C14200 * C244) * C92212 +
             ((C307 * C956 + C92137 * C1146) * C92110 +
              (C307 * C805 + C92137 * C1022) * C244) *
                 C92323) *
                C92346) *
               C1986) *
              C1983 +
          ((((C2381 + C2387) * C92323 + (C12404 + C12408) * C92212) * C92346 +
            ((C2378 + C2386) * C92323 + (C22518 + C22520) * C92212) * C92347 +
            ((C2375 + C2385) * C92323 +
             ((C307 * C3434 + C92137 * C3664) * C244 +
              (C307 * C3590 + C92137 * C3808) * C92110) *
                 C92212) *
                C14805) *
               C1986 -
           (((C20197 + C20198) * C92212 + (C499 + C487) * C92323) * C14805 +
            ((C9918 + C9919) * C92212 + (C498 + C484) * C92323) * C92347 +
            ((C9911 + C9910) * C92212 + (C497 + C481) * C92323) * C92346) *
               C1985) *
              C1984)) /
        (p * q * std::sqrt(p + q));
    d2eezx[15] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C20274 * C107 + C92323 * C555 + C20275 * C1389 + C92212 * C1788) *
                C1987 +
            (C20274 * C117 + C92323 * C561 + C20275 * C1397 + C92212 * C1796) *
                C1983 -
            (C20301 + C20302) * C1988 - (C20303 + C20304) * C1984) *
               C92346 +
           ((C20302 + C20301) * C1987 + (C20304 + C20303) * C1983 -
            (C20306 + C20305) * C1988 - (C20308 + C20307) * C1984) *
               C92347 +
           (C20313 * C1987 + C20314 * C1983 - (C20310 + C20309) * C1988 -
            (C20312 + C20311) * C1984) *
               C14805) *
              C92137 * C92110 * C1985 +
          (((C22635 + C22636) * C1988 -
            ((C20275 * C3439 + C92212 * C3879 + C20274 * C813 +
              C92323 * C1212) *
                 C1983 +
             (C20275 * C3431 + C92212 * C3875 + C20274 * C805 +
              C92323 * C1204) *
                 C1987) +
            (C22637 + C22638) * C1984) *
               C92346 +
           ((C22639 + C22640) * C1988 -
            ((C22638 + C22637) * C1983 + (C22636 + C22635) * C1987) +
            (C22641 + C22642) * C1984) *
               C92347 +
           ((C20274 * C802 + C92323 * C1201 + C20275 * C3434 + C92212 * C3878) *
                C1988 -
            ((C22642 + C22641) * C1983 + (C22640 + C22639) * C1987) +
            (C20274 * C810 + C92323 * C1209 + C20275 * C3442 + C92212 * C3882) *
                C1984) *
               C14805) *
              C92137 * C92110 * C1986)) /
        (p * q * std::sqrt(p + q));
    d2eezy[15] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C20274 * C107 + C92323 * C555 + C20275 * C1389 + C92212 * C1788) *
                C2059 +
            (C20274 * C182 + C92323 * C641 + C20275 * C1471 + C92212 * C1854) *
                C1985 -
            (C20275 * C3431 + C92212 * C3875 + C20274 * C805 + C92323 * C1204) *
                C2060 -
            (C20275 * C3513 + C92212 * C3949 + C20274 * C890 + C92323 * C1267) *
                C1986) *
               C92346 +
           ((C20302 + C20301) * C2059 + (C20402 + C20403) * C1985 -
            (C22636 + C22635) * C2060 - (C22749 + C22750) * C1986) *
               C92347 +
           (C20313 * C2059 + C20408 * C1985 - (C22640 + C22639) * C2060 -
            (C22751 + C22752) * C1986) *
               C14805) *
              C92137 * C1983 +
          (((C22635 + C22636) * C2060 -
            ((C20403 + C20402) * C1985 + (C20301 + C20302) * C2059) +
            (C22750 + C22749) * C1986) *
               C92346 +
           ((C22639 + C22640) * C2060 -
            ((C20405 + C20404) * C1985 + (C20306 + C20305) * C2059) +
            (C22752 + C22751) * C1986) *
               C92347 +
           ((C20274 * C802 + C92323 * C1201 + C20275 * C3434 + C92212 * C3878) *
                C2060 -
            ((C20406 + C20407) * C1985 + (C20310 + C20309) * C2059) +
            (C20274 * C887 + C92323 * C1273 + C20275 * C3516 + C92212 * C3952) *
                C1986) *
               C14805) *
              C92137 * C1984) *
         C92110) /
        (p * q * std::sqrt(p + q));
    d2eezz[15] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C20274 * C107 + C92323 * C555 + C20275 * C1389 + C92212 * C1788) *
                 C244 +
             (C20274 * C245 + C92323 * C719 + C20275 * C1540 + C92212 * C1909) *
                 C92110) *
                C92346 +
            ((C20302 + C20301) * C244 + (C20498 + C20499) * C92110) * C92347 +
            C20506 * C14805) *
               C92137 * C1985 -
           (((C22859 + C22860) * C92110 + (C22640 + C22639) * C244) * C14805 +
            ((C22861 + C22862) * C92110 + (C22636 + C22635) * C244) * C92347 +
            ((C20275 * C3587 + C92212 * C4019 + C20274 * C956 +
              C92323 * C1328) *
                 C92110 +
             (C20275 * C3431 + C92212 * C3875 + C20274 * C805 +
              C92323 * C1204) *
                 C244) *
                C92346) *
               C92137 * C1986) *
              C1983 +
          ((((C22635 + C22636) * C244 + (C22862 + C22861) * C92110) * C92346 +
            ((C22639 + C22640) * C244 + (C22860 + C22859) * C92110) * C92347 +
            ((C20274 * C802 + C92323 * C1201 + C20275 * C3434 +
              C92212 * C3878) *
                 C244 +
             (C20274 * C953 + C92323 * C1325 + C20275 * C3590 +
              C92212 * C4022) *
                 C92110) *
                C14805) *
               C92137 * C1986 -
           (((C20502 + C20503) * C92110 + (C20310 + C20309) * C244) * C14805 +
            ((C20501 + C20500) * C92110 + (C20306 + C20305) * C244) * C92347 +
            ((C20499 + C20498) * C92110 + (C20301 + C20302) * C244) * C92346) *
               C92137 * C1985) *
              C1984)) /
        (p * q * std::sqrt(p + q));
    d2eexx[16] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C14808 * C107 + C92346 * C113 + C14809 * C108 +
                        C92347 * C114 + C14810 * C109 + C14805 * C115) *
                           C801 +
                       (C14808 * C117 + C92346 * C125 + C14809 * C118 +
                        C92347 * C126 + C14810 * C119 + C14805 * C127) *
                           C92078) *
                          C92137 * C92323 +
                      ((C21271 + C21272 + C21273) * C801 +
                       (C21274 + C21275 + C21276) * C92078) *
                          C92137 * C92212) *
                         C2709 -
                     (((C21277 + C21278 + C21279) * C92078 +
                       (C21280 + C21281 + C21282) * C801) *
                          C92137 * C92212 +
                      ((C21276 + C21275 + C21274) * C92078 +
                       (C21273 + C21272 + C21271) * C801) *
                          C92137 * C92323) *
                         C2710) *
                        C1985 +
                    ((((C18940 + C18939 + C18938) * C801 +
                       (C18937 + C18936 + C18935) * C92078) *
                          C92137 * C92323 +
                      ((C14808 * C5773 + C92346 * C5781 + C14809 * C5774 +
                        C92347 * C5782 + C14810 * C11870 + C14805 * C11871) *
                           C801 +
                       (C14808 * C5783 + C92346 * C5791 + C14809 * C5784 +
                        C92347 * C5792 + C14810 * C11872 + C14805 * C11873) *
                           C92078) *
                          C92137 * C92212) *
                         C2710 -
                     (((C18935 + C18936 + C18937) * C92078 +
                       (C18938 + C18939 + C18940) * C801) *
                          C92137 * C92212 +
                      ((C15597 + C15596 + C15595) * C92078 +
                       (C15594 + C15593 + C15592) * C801) *
                          C92137 * C92323) *
                         C2709) *
                        C1986)) /
                  (p * q * std::sqrt(p + q));
    d2eexy[16] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C14808 * C107 + C92346 * C113 + C14809 * C108 +
                       C92347 * C114 + C14810 * C109 + C14805 * C115) *
                          C2059 +
                      (C14808 * C182 + C92346 * C188 + C14809 * C183 +
                       C92347 * C189 + C14810 * C184 + C14805 * C190) *
                          C1985 -
                      (C15594 + C15593 + C15592) * C2060 -
                      (C15690 + C15691 + C15692) * C1986) *
                         C92137 * C92323 +
                     ((C21271 + C21272 + C21273) * C2059 +
                      (C21369 + C21370 + C21371) * C1985 -
                      (C18938 + C18939 + C18940) * C2060 -
                      (C19047 + C19046 + C19045) * C1986) *
                         C92137 * C92212) *
                        C92078 * C2709 +
                    (((C18940 + C18939 + C18938) * C2060 -
                      ((C21371 + C21370 + C21369) * C1985 +
                       (C21273 + C21272 + C21271) * C2059) +
                      (C19045 + C19046 + C19047) * C1986) *
                         C92137 * C92323 +
                     ((C14808 * C5773 + C92346 * C5781 + C14809 * C5774 +
                       C92347 * C5782 + C14810 * C11870 + C14805 * C11871) *
                          C2060 -
                      ((C21372 + C21373 + C21374) * C1985 +
                       (C21280 + C21281 + C21282) * C2059) +
                      (C14808 * C5871 + C92346 * C5877 + C14809 * C5872 +
                       C92347 * C5878 + C14810 * C11972 + C14805 * C11973) *
                          C1986) *
                         C92137 * C92212) *
                        C92078 * C2710)) /
                  (p * q * std::sqrt(p + q));
    d2eexz[16] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C14808 * C107 + C92346 * C113 + C14809 * C108 +
                       C92347 * C114 + C14810 * C109 + C14805 * C115) *
                          C2849 +
                      (C14808 * C245 + C92346 * C251 + C14809 * C246 +
                       C92347 * C252 + C14810 * C247 + C14805 * C253) *
                          C2709 -
                      (C21273 + C21272 + C21271) * C2850 -
                      (C21461 + C21462 + C21463) * C2710) *
                         C92137 * C92323 +
                     ((C21271 + C21272 + C21273) * C2849 +
                      (C21463 + C21462 + C21461) * C2709 -
                      (C21280 + C21281 + C21282) * C2850 -
                      (C21466 + C21465 + C21464) * C2710) *
                         C92137 * C92212) *
                        C1985 +
                    (((C18940 + C18939 + C18938) * C2850 -
                      ((C15784 + C15783 + C15782) * C2709 +
                       (C15594 + C15593 + C15592) * C2849) +
                      (C19154 + C19153 + C19152) * C2710) *
                         C92137 * C92323 +
                     ((C14808 * C5773 + C92346 * C5781 + C14809 * C5774 +
                       C92347 * C5782 + C14810 * C11870 + C14805 * C11871) *
                          C2850 -
                      ((C19152 + C19153 + C19154) * C2709 +
                       (C18938 + C18939 + C18940) * C2849) +
                      (C14808 * C5955 + C92346 * C5961 + C14809 * C5956 +
                       C92347 * C5962 + C14810 * C12072 + C14805 * C12073) *
                          C2710) *
                         C92137 * C92212) *
                        C1986) *
                   C92078) /
                  (p * q * std::sqrt(p + q));
    d2eeyx[16] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C307 * C107 + C92137 * C308) * C801 +
              (C307 * C117 + C92137 * C314) * C92078) *
                 C92323 +
             (C11336 + C11337) * C92212) *
                C92346 +
            ((C337 * C801 + C338 * C92078) * C92323 +
             (C11315 + C11316) * C92212) *
                C92347 +
            ((C339 * C801 + C340 * C92078) * C92323 +
             (C21541 + C21542) * C92212) *
                C14805) *
               C2709 -
           (((C21543 + C21544) * C92212 + (C21542 + C21541) * C92323) * C14805 +
            ((C11318 + C11317) * C92212 + (C11316 + C11315) * C92323) * C92347 +
            ((C11339 + C11338) * C92212 + (C11337 + C11336) * C92323) *
                C92346) *
               C2710) *
              C1985 +
          ((((C14204 + C14205) * C92323 + (C14206 + C14207) * C92212) * C92346 +
            ((C14196 + C14197) * C92323 + (C14198 + C14199) * C92212) * C92347 +
            ((C24230 + C24231) * C92323 +
             ((C307 * C11870 + C92137 * C12172) * C801 +
              (C307 * C11872 + C92137 * C12173) * C92078) *
                 C92212) *
                C14805) *
               C2710 -
           (((C24231 + C24230) * C92212 +
             (C2215 * C92078 + C2214 * C801) * C92323) *
                C14805 +
            ((C14197 + C14196) * C92212 +
             (C2213 * C92078 + C2212 * C801) * C92323) *
                C92347 +
            ((C14205 + C14204) * C92212 +
             ((C307 * C813 + C92137 * C1030) * C92078 +
              (C307 * C805 + C92137 * C1022) * C801) *
                 C92323) *
                C92346) *
               C2709) *
              C1986)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[16] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C307 * C107 + C92137 * C308) * C2059 +
                       (C307 * C182 + C92137 * C394) * C1985 -
                       (C307 * C805 + C92137 * C1022) * C2060 -
                       (C307 * C890 + C92137 * C1085) * C1986) *
                          C92323 +
                      (C14308 + C14309 - C14310 - C14320) * C92212) *
                         C92346 +
                     ((C2285 + C2286 - C2287 - C2303) * C92323 +
                      (C12286 + C12287 - C12288 - C12298) * C92212) *
                         C92347 +
                     ((C2290 + C2291 - C2292 - C2304) * C92323 +
                      (C22411 + C22412 - C22413 - C22417) * C92212) *
                         C14805) *
                        C92078 * C2709 +
                    (((C14310 - (C14309 + C14308) + C14320) * C92323 +
                      (C14315 - (C14314 + C14313) + C14321) * C92212) *
                         C92346 +
                     ((C12288 - (C12287 + C12286) + C12298) * C92323 +
                      (C12293 - (C12292 + C12291) + C12299) * C92212) *
                         C92347 +
                     ((C22413 - (C22412 + C22411) + C22417) * C92323 +
                      ((C307 * C11870 + C92137 * C12172) * C2060 -
                       (C9833 * C1985 + C9750 * C2059) +
                       (C307 * C11972 + C92137 * C12284) * C1986) *
                          C92212) *
                         C14805) *
                        C92078 * C2710)) /
                  (p * q * std::sqrt(p + q));
    d2eeyz[16] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C307 * C107 + C92137 * C308) * C2849 +
                       (C307 * C245 + C92137 * C474) * C2709 - C11327 * C2850 -
                       C11531 * C2710) *
                          C92323 +
                      (C11327 * C2849 + C11531 * C2709 - C11329 * C2850 -
                       C11532 * C2710) *
                          C92212) *
                         C92346 +
                     ((C3089 + C3090 - C3091 - C3107) * C92323 +
                      (C13410 + C13411 - C13412 - C13413) * C92212) *
                         C92347 +
                     ((C3094 + C3095 - C3096 - C3108) * C92323 +
                      (C23492 + C23493 - C23494 - C23495) * C92212) *
                         C14805) *
                        C1985 +
                    (((C14200 * C2850 -
                       ((C307 * C956 + C92137 * C1146) * C2709 +
                        (C307 * C805 + C92137 * C1022) * C2849) +
                       C14426 * C2710) *
                          C92323 +
                      (C14202 * C2850 - (C14426 * C2709 + C14200 * C2849) +
                       C14427 * C2710) *
                          C92212) *
                         C92346 +
                     ((C12183 * C2850 - (C2384 * C2709 + C2212 * C2849) +
                       C12406 * C2710) *
                          C92323 +
                      (C12185 * C2850 - (C12406 * C2709 + C12183 * C2849) +
                       C12405 * C2710) *
                          C92212) *
                         C92347 +
                     ((C22311 * C2850 - (C2383 * C2709 + C2214 * C2849) +
                       C22519 * C2710) *
                          C92323 +
                      ((C307 * C11870 + C92137 * C12172) * C2850 -
                       (C22519 * C2709 + C22311 * C2849) +
                       (C307 * C12072 + C92137 * C12397) * C2710) *
                          C92212) *
                         C14805) *
                        C1986) *
                   C92078) /
                  (p * q * std::sqrt(p + q));
    d2eezx[16] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C20274 * C107 + C92323 * C555 + C20275 * C1389 + C92212 * C1788) *
                 C801 +
             (C20274 * C117 + C92323 * C561 + C20275 * C1397 + C92212 * C1796) *
                 C92078) *
                C92346 +
            ((C20302 + C20301) * C801 + (C20304 + C20303) * C92078) * C92347 +
            (C20313 * C801 + C20314 * C92078) * C14805) *
               C92137 * C2709 -
           (((C23617 + C23616) * C92078 + (C23615 + C23614) * C801) * C14805 +
            ((C23613 + C23612) * C92078 + (C23611 + C23610) * C801) * C92347 +
            ((C20275 * C1406 + C92212 * C1797 + C20274 * C1397 +
              C92323 * C1796) *
                 C92078 +
             (C20275 * C1390 + C92212 * C1789 + C20274 * C1389 +
              C92323 * C1788) *
                 C801) *
                C92346) *
               C92137 * C2710) *
              C1985 +
          ((((C20274 * C3431 + C92323 * C3875 + C20275 * C5773 +
              C92212 * C6289) *
                 C801 +
             (C20274 * C3439 + C92323 * C3879 + C20275 * C5783 +
              C92212 * C6295) *
                 C92078) *
                C92346 +
            ((C20274 * C3432 + C92323 * C3876 + C20275 * C5774 +
              C92212 * C6290) *
                 C801 +
             (C20274 * C3440 + C92323 * C3880 + C20275 * C5784 +
              C92212 * C6296) *
                 C92078) *
                C92347 +
            ((C20274 * C3433 + C92323 * C3877 + C20275 * C11870 +
              C92212 * C12506) *
                 C801 +
             (C20274 * C3441 + C92323 * C3881 + C20275 * C11872 +
              C92212 * C12507) *
                 C92078) *
                C14805) *
               C92137 * C2710 -
           (((C22642 + C22641) * C92078 + (C22640 + C22639) * C801) * C14805 +
            ((C22638 + C22637) * C92078 + (C22636 + C22635) * C801) * C92347 +
            ((C20275 * C3439 + C92212 * C3879 + C20274 * C813 +
              C92323 * C1212) *
                 C92078 +
             (C20275 * C3431 + C92212 * C3875 + C20274 * C805 +
              C92323 * C1204) *
                 C801) *
                C92346) *
               C92137 * C2709) *
              C1986)) /
        (p * q * std::sqrt(p + q));
    d2eezy[16] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C20274 * C107 + C92323 * C555 + C20275 * C1389 + C92212 * C1788) *
                C2059 +
            (C20274 * C182 + C92323 * C641 + C20275 * C1471 + C92212 * C1854) *
                C1985 -
            (C20275 * C3431 + C92212 * C3875 + C20274 * C805 + C92323 * C1204) *
                C2060 -
            (C20275 * C3513 + C92212 * C3949 + C20274 * C890 + C92323 * C1267) *
                C1986) *
               C92346 +
           ((C20302 + C20301) * C2059 + (C20402 + C20403) * C1985 -
            (C22636 + C22635) * C2060 - (C22749 + C22750) * C1986) *
               C92347 +
           (C20313 * C2059 + C20408 * C1985 - (C22640 + C22639) * C2060 -
            (C22751 + C22752) * C1986) *
               C14805) *
              C92137 * C92078 * C2709 +
          (((C20274 * C3431 + C92323 * C3875 + C20275 * C5773 +
             C92212 * C6289) *
                C2060 -
            ((C20275 * C1472 + C92212 * C1855 + C20274 * C1471 +
              C92323 * C1854) *
                 C1985 +
             (C20275 * C1390 + C92212 * C1789 + C20274 * C1389 +
              C92323 * C1788) *
                 C2059) +
            (C20274 * C3513 + C92323 * C3949 + C20275 * C5871 +
             C92212 * C6375) *
                C1986) *
               C92346 +
           ((C20274 * C3432 + C92323 * C3876 + C20275 * C5774 +
             C92212 * C6290) *
                C2060 -
            ((C23725 + C23724) * C1985 + (C23611 + C23610) * C2059) +
            (C20274 * C3514 + C92323 * C3950 + C20275 * C5872 +
             C92212 * C6376) *
                C1986) *
               C92347 +
           ((C20274 * C3433 + C92323 * C3877 + C20275 * C11870 +
             C92212 * C12506) *
                C2060 -
            ((C23727 + C23726) * C1985 + (C23615 + C23614) * C2059) +
            (C20274 * C3515 + C92323 * C3951 + C20275 * C11972 +
             C92212 * C12624) *
                C1986) *
               C14805) *
              C92137 * C92078 * C2710)) /
        (p * q * std::sqrt(p + q));
    d2eezz[16] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C20274 * C107 + C92323 * C555 + C20275 * C1389 + C92212 * C1788) *
                C2849 +
            (C20274 * C245 + C92323 * C719 + C20275 * C1540 + C92212 * C1909) *
                C2709 -
            (C20275 * C1390 + C92212 * C1789 + C20274 * C1389 +
             C92323 * C1788) *
                C2850 -
            (C20275 * C1541 + C92212 * C1910 + C20274 * C1540 +
             C92323 * C1909) *
                C2710) *
               C92346 +
           ((C20302 + C20301) * C2849 + (C20498 + C20499) * C2709 -
            (C23611 + C23610) * C2850 - (C23834 + C23835) * C2710) *
               C92347 +
           (C20313 * C2849 + C20504 * C2709 - (C23615 + C23614) * C2850 -
            (C23836 + C23837) * C2710) *
               C14805) *
              C92137 * C1985 +
          (((C20274 * C3431 + C92323 * C3875 + C20275 * C5773 +
             C92212 * C6289) *
                C2850 -
            ((C20275 * C3587 + C92212 * C4019 + C20274 * C956 +
              C92323 * C1328) *
                 C2709 +
             (C20275 * C3431 + C92212 * C3875 + C20274 * C805 +
              C92323 * C1204) *
                 C2849) +
            (C20274 * C3587 + C92323 * C4019 + C20275 * C5955 +
             C92212 * C6453) *
                C2710) *
               C92346 +
           ((C20274 * C3432 + C92323 * C3876 + C20275 * C5774 +
             C92212 * C6290) *
                C2850 -
            ((C22861 + C22862) * C2709 + (C22636 + C22635) * C2849) +
            (C20274 * C3588 + C92323 * C4020 + C20275 * C5956 +
             C92212 * C6454) *
                C2710) *
               C92347 +
           ((C20274 * C3433 + C92323 * C3877 + C20275 * C11870 +
             C92212 * C12506) *
                C2850 -
            ((C22859 + C22860) * C2709 + (C22640 + C22639) * C2849) +
            (C20274 * C3589 + C92323 * C4021 + C20275 * C12072 +
             C92212 * C12732) *
                C2710) *
               C14805) *
              C92137 * C1986) *
         C92078) /
        (p * q * std::sqrt(p + q));
    d2eexx[17] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C14808 * C107 + C92346 * C113 + C14809 * C108 +
                       C92347 * C114 + C14810 * C109 + C14805 * C115) *
                          C801 +
                      (C14808 * C117 + C92346 * C125 + C14809 * C118 +
                       C92347 * C126 + C14810 * C119 + C14805 * C127) *
                          C92078) *
                         C92137 * C92323 +
                     ((C14808 * C1389 + C92346 * C1401 + C14809 * C1388 +
                       C92347 * C1400 + C14810 * C1387 + C14805 * C1399) *
                          C801 +
                      (C14808 * C1397 + C92346 * C1413 + C14809 * C1396 +
                       C92347 * C1412 + C14810 * C1395 + C14805 * C1411) *
                          C92078) *
                         C92137 * C92212) *
                        C92110 * C798 -
                    (((C18935 + C18936 + C18937) * C92078 +
                      (C18938 + C18939 + C18940) * C801) *
                         C92137 * C92212 +
                     ((C15597 + C15596 + C15595) * C92078 +
                      (C15594 + C15593 + C15592) * C801) *
                         C92137 * C92323) *
                        C92110 * C799 +
                    (((C15603 + C15602 + C15601) * C801 +
                      (C15600 + C15599 + C15598) * C92078) *
                         C92137 * C92323 +
                     ((C14808 * C5772 + C92346 * C5780 + C14809 * C5771 +
                       C92347 * C5779 + C14810 * C7566 + C14805 * C7567) *
                          C801 +
                      (C14808 * C5778 + C92346 * C5790 + C14809 * C5777 +
                       C92347 * C5789 + C14810 * C7568 + C14805 * C7569) *
                          C92078) *
                         C92137 * C92212) *
                        C92110 * C800)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C14808 * C107 + C92346 * C113 + C14809 * C108 +
                      C92347 * C114 + C14810 * C109 + C14805 * C115) *
                         C104 +
                     (C14808 * C117 + C92346 * C125 + C14809 * C118 +
                      C92347 * C126 + C14810 * C119 + C14805 * C127) *
                         C93 -
                     (C14810 * C110 + C14805 * C116 + C14809 * C109 +
                      C92347 * C115 + C14808 * C108 + C92346 * C114) *
                         C105 -
                     (C14810 * C120 + C14805 * C128 + C14809 * C119 +
                      C92347 * C127 + C14808 * C118 + C92346 * C126) *
                         C94 +
                     (C14808 * C109 + C92346 * C115 + C14809 * C110 +
                      C92347 * C116 + C14810 * C111 + C14805 * C121) *
                         C106 +
                     (C14808 * C119 + C92346 * C127 + C14809 * C120 +
                      C92347 * C128 + C14810 * C122 + C14805 * C129) *
                         C95) *
                        C92137 * C92323 +
                    ((C14808 * C1389 + C92346 * C1401 + C14809 * C1388 +
                      C92347 * C1400 + C14810 * C1387 + C14805 * C1399) *
                         C104 +
                     (C14808 * C1397 + C92346 * C1413 + C14809 * C1396 +
                      C92347 * C1412 + C14810 * C1395 + C14805 * C1411) *
                         C93 -
                     (C14810 * C1386 + C14805 * C1398 + C14809 * C1387 +
                      C92347 * C1399 + C14808 * C1388 + C92346 * C1400) *
                         C105 -
                     (C14810 * C1394 + C14805 * C1410 + C14809 * C1395 +
                      C92347 * C1411 + C14808 * C1396 + C92346 * C1412) *
                         C94 +
                     (C14808 * C1387 + C92346 * C1399 + C14809 * C1386 +
                      C92347 * C1398 + C14810 * C2711 + C14805 * C2712) *
                         C106 +
                     (C14808 * C1395 + C92346 * C1411 + C14809 * C1394 +
                      C92347 * C1410 + C14810 * C2713 + C14805 * C2714) *
                         C95) *
                        C92137 * C92212) *
                   C92110 * C92099) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C14808 * C107 + C92346 * C113 + C14809 * C108 +
                       C92347 * C114 + C14810 * C109 + C14805 * C115) *
                          C801 +
                      (C14808 * C117 + C92346 * C125 + C14809 * C118 +
                       C92347 * C126 + C14810 * C119 + C14805 * C127) *
                          C92078) *
                         C92137 * C92323 +
                     ((C21271 + C21272 + C21273) * C801 +
                      (C21274 + C21275 + C21276) * C92078) *
                         C92137 * C92212) *
                        C1383 -
                    (((C21277 + C21278 + C21279) * C92078 +
                      (C21280 + C21281 + C21282) * C801) *
                         C92137 * C92212 +
                     ((C21276 + C21275 + C21274) * C92078 +
                      (C21273 + C21272 + C21271) * C801) *
                         C92137 * C92323) *
                        C1384 +
                    (((C21282 + C21281 + C21280) * C801 +
                      (C21279 + C21278 + C21277) * C92078) *
                         C92137 * C92323 +
                     ((C14808 * C10961 + C92346 * C10967 + C14809 * C10960 +
                       C92347 * C10966 + C14810 * C12840 + C14805 * C12841) *
                          C801 +
                      (C14808 * C10965 + C92346 * C10973 + C14809 * C10964 +
                       C92347 * C10972 + C14810 * C12842 + C14805 * C12843) *
                          C92078) *
                         C92137 * C92212) *
                        C1385) *
                   C92099) /
                      (p * q * std::sqrt(p + q));
    d2eexy[17] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C14808 * C107 + C92346 * C113 + C14809 * C108 +
                      C92347 * C114 + C14810 * C109 + C14805 * C115) *
                         C884 +
                     (C14808 * C182 + C92346 * C188 + C14809 * C183 +
                      C92347 * C189 + C14810 * C184 + C14805 * C190) *
                         C798 -
                     (C15594 + C15593 + C15592) * C885 -
                     (C15690 + C15691 + C15692) * C799 +
                     (C15603 + C15602 + C15601) * C886 +
                     (C15693 + C15694 + C15695) * C800) *
                        C92137 * C92323 +
                    ((C14808 * C1389 + C92346 * C1401 + C14809 * C1388 +
                      C92347 * C1400 + C14810 * C1387 + C14805 * C1399) *
                         C884 +
                     (C14808 * C1471 + C92346 * C1479 + C14809 * C1470 +
                      C92347 * C1478 + C14810 * C1469 + C14805 * C1477) *
                         C798 -
                     (C18938 + C18939 + C18940) * C885 -
                     (C19047 + C19046 + C19045) * C799 +
                     (C14808 * C5772 + C92346 * C5780 + C14809 * C5771 +
                      C92347 * C5779 + C14810 * C7566 + C14805 * C7567) *
                         C886 +
                     (C14808 * C5870 + C92346 * C5876 + C14809 * C5869 +
                      C92347 * C5875 + C14810 * C7668 + C14805 * C7669) *
                         C800) *
                        C92137 * C92212) *
                   C92078 * C92110) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C14808 * C107 + C92346 * C113 + C14809 * C108 +
                       C92347 * C114 + C14810 * C109 + C14805 * C115) *
                          C181 +
                      (C14808 * C182 + C92346 * C188 + C14809 * C183 +
                       C92347 * C189 + C14810 * C184 + C14805 * C190) *
                          C92099) *
                         C92137 * C92323 +
                     ((C14808 * C1389 + C92346 * C1401 + C14809 * C1388 +
                       C92347 * C1400 + C14810 * C1387 + C14805 * C1399) *
                          C181 +
                      (C14808 * C1471 + C92346 * C1479 + C14809 * C1470 +
                       C92347 * C1478 + C14810 * C1469 + C14805 * C1477) *
                          C92099) *
                         C92137 * C92212) *
                        C93 -
                    (((C14810 * C1468 + C14805 * C1476 + C14809 * C1469 +
                       C92347 * C1477 + C14808 * C1470 + C92346 * C1478) *
                          C92099 +
                      (C14810 * C1386 + C14805 * C1398 + C14809 * C1387 +
                       C92347 * C1399 + C14808 * C1388 + C92346 * C1400) *
                          C181) *
                         C92137 * C92212 +
                     ((C14810 * C185 + C14805 * C191 + C14809 * C184 +
                       C92347 * C190 + C14808 * C183 + C92346 * C189) *
                          C92099 +
                      (C14810 * C110 + C14805 * C116 + C14809 * C109 +
                       C92347 * C115 + C14808 * C108 + C92346 * C114) *
                          C181) *
                         C92137 * C92323) *
                        C94 +
                    (((C14808 * C109 + C92346 * C115 + C14809 * C110 +
                       C92347 * C116 + C14810 * C111 + C14805 * C121) *
                          C181 +
                      (C14808 * C184 + C92346 * C190 + C14809 * C185 +
                       C92347 * C191 + C14810 * C186 + C14805 * C192) *
                          C92099) *
                         C92137 * C92323 +
                     ((C14808 * C1387 + C92346 * C1399 + C14809 * C1386 +
                       C92347 * C1398 + C14810 * C2711 + C14805 * C2712) *
                          C181 +
                      (C14808 * C1469 + C92346 * C1477 + C14809 * C1468 +
                       C92347 * C1476 + C14810 * C2781 + C14805 * C2782) *
                          C92099) *
                         C92137 * C92212) *
                        C95) *
                   C92110) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C14808 * C107 + C92346 * C113 + C14809 * C108 +
                       C92347 * C114 + C14810 * C109 + C14805 * C115) *
                          C181 +
                      (C14808 * C182 + C92346 * C188 + C14809 * C183 +
                       C92347 * C189 + C14810 * C184 + C14805 * C190) *
                          C92099) *
                         C92137 * C92323 +
                     ((C21271 + C21272 + C21273) * C181 +
                      (C21369 + C21370 + C21371) * C92099) *
                         C92137 * C92212) *
                        C92078 * C1383 -
                    (((C21372 + C21373 + C21374) * C92099 +
                      (C21280 + C21281 + C21282) * C181) *
                         C92137 * C92212 +
                     ((C21371 + C21370 + C21369) * C92099 +
                      (C21273 + C21272 + C21271) * C181) *
                         C92137 * C92323) *
                        C92078 * C1384 +
                    (((C21282 + C21281 + C21280) * C181 +
                      (C21374 + C21373 + C21372) * C92099) *
                         C92137 * C92323 +
                     ((C14808 * C10961 + C92346 * C10967 + C14809 * C10960 +
                       C92347 * C10966 + C14810 * C12840 + C14805 * C12841) *
                          C181 +
                      (C14808 * C11093 + C92346 * C11097 + C14809 * C11092 +
                       C92347 * C11096 + C14810 * C12966 + C14805 * C12967) *
                          C92099) *
                         C92137 * C92212) *
                        C92078 * C1385)) /
                      (p * q * std::sqrt(p + q));
    d2eexz[17] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C14808 * C107 + C92346 * C113 + C14809 * C108 +
                       C92347 * C114 + C14810 * C109 + C14805 * C115) *
                          C244 +
                      (C14808 * C245 + C92346 * C251 + C14809 * C246 +
                       C92347 * C252 + C14810 * C247 + C14805 * C253) *
                          C92110) *
                         C92137 * C92323 +
                     ((C14808 * C1389 + C92346 * C1401 + C14809 * C1388 +
                       C92347 * C1400 + C14810 * C1387 + C14805 * C1399) *
                          C244 +
                      (C14808 * C1540 + C92346 * C1548 + C14809 * C1539 +
                       C92347 * C1547 + C14810 * C1538 + C14805 * C1546) *
                          C92110) *
                         C92137 * C92212) *
                        C798 -
                    (((C19152 + C19153 + C19154) * C92110 +
                      (C18938 + C18939 + C18940) * C244) *
                         C92137 * C92212 +
                     ((C15784 + C15783 + C15782) * C92110 +
                      (C15594 + C15593 + C15592) * C244) *
                         C92137 * C92323) *
                        C799 +
                    (((C15603 + C15602 + C15601) * C244 +
                      (C15787 + C15786 + C15785) * C92110) *
                         C92137 * C92323 +
                     ((C14808 * C5772 + C92346 * C5780 + C14809 * C5771 +
                       C92347 * C5779 + C14810 * C7566 + C14805 * C7567) *
                          C244 +
                      (C14808 * C5958 + C92346 * C5964 + C14809 * C5957 +
                       C92347 * C5963 + C14810 * C7768 + C14805 * C7769) *
                          C92110) *
                         C92137 * C92212) *
                        C800) *
                   C92078) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C14808 * C107 + C92346 * C113 + C14809 * C108 +
                       C92347 * C114 + C14810 * C109 + C14805 * C115) *
                          C244 +
                      (C14808 * C245 + C92346 * C251 + C14809 * C246 +
                       C92347 * C252 + C14810 * C247 + C14805 * C253) *
                          C92110) *
                         C92137 * C92323 +
                     ((C14808 * C1389 + C92346 * C1401 + C14809 * C1388 +
                       C92347 * C1400 + C14810 * C1387 + C14805 * C1399) *
                          C244 +
                      (C14808 * C1540 + C92346 * C1548 + C14809 * C1539 +
                       C92347 * C1547 + C14810 * C1538 + C14805 * C1546) *
                          C92110) *
                         C92137 * C92212) *
                        C92099 * C93 -
                    (((C14810 * C1537 + C14805 * C1545 + C14809 * C1538 +
                       C92347 * C1546 + C14808 * C1539 + C92346 * C1547) *
                          C92110 +
                      (C14810 * C1386 + C14805 * C1398 + C14809 * C1387 +
                       C92347 * C1399 + C14808 * C1388 + C92346 * C1400) *
                          C244) *
                         C92137 * C92212 +
                     ((C14810 * C248 + C14805 * C254 + C14809 * C247 +
                       C92347 * C253 + C14808 * C246 + C92346 * C252) *
                          C92110 +
                      (C14810 * C110 + C14805 * C116 + C14809 * C109 +
                       C92347 * C115 + C14808 * C108 + C92346 * C114) *
                          C244) *
                         C92137 * C92323) *
                        C92099 * C94 +
                    (((C14808 * C109 + C92346 * C115 + C14809 * C110 +
                       C92347 * C116 + C14810 * C111 + C14805 * C121) *
                          C244 +
                      (C14808 * C247 + C92346 * C253 + C14809 * C248 +
                       C92347 * C254 + C14810 * C249 + C14805 * C255) *
                          C92110) *
                         C92137 * C92323 +
                     ((C14808 * C1387 + C92346 * C1399 + C14809 * C1386 +
                       C92347 * C1398 + C14810 * C2711 + C14805 * C2712) *
                          C244 +
                      (C14808 * C1538 + C92346 * C1546 + C14809 * C1537 +
                       C92347 * C1545 + C14810 * C2851 + C14805 * C2852) *
                          C92110) *
                         C92137 * C92212) *
                        C92099 * C95)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((C14808 * C107 + C92346 * C113 + C14809 * C108 +
                      C92347 * C114 + C14810 * C109 + C14805 * C115) *
                         C1534 +
                     (C14808 * C245 + C92346 * C251 + C14809 * C246 +
                      C92347 * C252 + C14810 * C247 + C14805 * C253) *
                         C1383 -
                     (C21273 + C21272 + C21271) * C1535 -
                     (C21461 + C21462 + C21463) * C1384 +
                     (C21282 + C21281 + C21280) * C1536 +
                     (C21464 + C21465 + C21466) * C1385) *
                        C92137 * C92323 +
                    ((C21271 + C21272 + C21273) * C1534 +
                     (C21463 + C21462 + C21461) * C1383 -
                     (C21280 + C21281 + C21282) * C1535 -
                     (C21466 + C21465 + C21464) * C1384 +
                     (C14808 * C10961 + C92346 * C10967 + C14809 * C10960 +
                      C92347 * C10966 + C14810 * C12840 + C14805 * C12841) *
                         C1536 +
                     (C14808 * C11197 + C92346 * C11201 + C14809 * C11198 +
                      C92347 * C11202 + C14810 * C13078 + C14805 * C13079) *
                         C1385) *
                        C92137 * C92212) *
                   C92099 * C92078) /
                      (p * q * std::sqrt(p + q));
    d2eeyx[17] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92137 * C308) * C801 +
             (C307 * C117 + C92137 * C314) * C92078) *
                C92323 +
            (C11336 + C11337) * C92212) *
               C92346 +
           ((C337 * C801 + C338 * C92078) * C92323 +
            (C11315 + C11316) * C92212) *
               C92347 +
           ((C339 * C801 + C340 * C92078) * C92323 +
            (C2936 * C801 + C2937 * C92078) * C92212) *
               C14805) *
              C92110 * C798 -
          ((((C307 * C3441 + C92137 * C3667) * C92078 +
             (C307 * C3433 + C92137 * C3663) * C801) *
                C92212 +
            (C2215 * C92078 + C2214 * C801) * C92323) *
               C14805 +
           ((C14197 + C14196) * C92212 +
            (C2213 * C92078 + C2212 * C801) * C92323) *
               C92347 +
           ((C14205 + C14204) * C92212 +
            ((C307 * C813 + C92137 * C1030) * C92078 +
             (C307 * C805 + C92137 * C1022) * C801) *
                C92323) *
               C92346) *
              C92110 * C799 +
          ((((C307 * C806 + C92137 * C1023) * C801 +
             (C307 * C822 + C92137 * C1031) * C92078) *
                C92323 +
            ((C307 * C5772 + C92137 * C6042) * C801 +
             (C307 * C5778 + C92137 * C6048) * C92078) *
                C92212) *
               C92346 +
           (((C307 * C807 + C92137 * C1024) * C801 +
             (C307 * C823 + C92137 * C1032) * C92078) *
                C92323 +
            ((C307 * C5771 + C92137 * C6041) * C801 +
             (C307 * C5777 + C92137 * C6047) * C92078) *
                C92212) *
               C92347 +
           (((C307 * C808 + C92137 * C1025) * C801 +
             (C307 * C824 + C92137 * C1033) * C92078) *
                C92323 +
            ((C307 * C7566 + C92137 * C7868) * C801 +
             (C307 * C7568 + C92137 * C7869) * C92078) *
                C92212) *
               C14805) *
              C92110 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C307 * C107 + C92137 * C308) * C104 +
            (C307 * C117 + C92137 * C314) * C93 - C337 * C105 - C338 * C94 +
            C339 * C106 + C340 * C95) *
               C92323 +
           (C11327 * C104 + C11328 * C93 - C2934 * C105 - C2935 * C94 +
            C2936 * C106 + C2937 * C95) *
               C92212) *
              C92346 +
          ((C337 * C104 + C338 * C93 - C339 * C105 - C340 * C94 + C341 * C106 +
            C342 * C95) *
               C92323 +
           (C2934 * C104 + C2935 * C93 - C2936 * C105 - C2937 * C94 +
            C2938 * C106 + C2939 * C95) *
               C92212) *
              C92347 +
          ((C339 * C104 + C340 * C93 - C341 * C105 - C342 * C94 + C343 * C106 +
            C344 * C95) *
               C92323 +
           (C2936 * C104 + C2937 * C93 - C2938 * C105 - C2939 * C94 +
            (C307 * C2711 + C92137 * C2919) * C106 +
            (C307 * C2713 + C92137 * C2920) * C95) *
               C92212) *
              C14805) *
         C92110 * C92099) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92137 * C308) * C801 +
             (C307 * C117 + C92137 * C314) * C92078) *
                C92323 +
            (C11336 + C11337) * C92212) *
               C92346 +
           ((C337 * C801 + C338 * C92078) * C92323 +
            (C11315 + C11316) * C92212) *
               C92347 +
           ((C339 * C801 + C340 * C92078) * C92323 +
            (C21541 + C21542) * C92212) *
               C14805) *
              C1383 -
          (((C21543 + C21544) * C92212 + (C21542 + C21541) * C92323) * C14805 +
           ((C11318 + C11317) * C92212 + (C11316 + C11315) * C92323) * C92347 +
           ((C11339 + C11338) * C92212 + (C11337 + C11336) * C92323) * C92346) *
              C1384 +
          ((C11344 * C92323 + (C11343 + C11342) * C92212) * C92346 +
           (C11331 * C92323 + (C11341 + C11340) * C92212) * C92347 +
           ((C21544 + C21543) * C92323 +
            ((C307 * C12840 + C92137 * C13190) * C801 +
             (C307 * C12842 + C92137 * C13191) * C92078) *
                C92212) *
               C14805) *
              C1385) *
         C92099) /
            (p * q * std::sqrt(p + q));
    d2eeyy[17] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C307 * C107 + C92137 * C308) * C884 +
            (C307 * C182 + C92137 * C394) * C798 -
            (C307 * C805 + C92137 * C1022) * C885 -
            (C307 * C890 + C92137 * C1085) * C799 +
            (C307 * C806 + C92137 * C1023) * C886 +
            (C307 * C891 + C92137 * C1086) * C800) *
               C92323 +
           (C11327 * C884 + C11436 * C798 - C14200 * C885 - C14318 * C799 +
            (C307 * C5772 + C92137 * C6042) * C886 +
            (C307 * C5870 + C92137 * C6128) * C800) *
               C92212) *
              C92346 +
          ((C337 * C884 + C413 * C798 - C2212 * C885 - C2300 * C799 +
            (C307 * C807 + C92137 * C1024) * C886 +
            (C307 * C892 + C92137 * C1088) * C800) *
               C92323 +
           (C2934 * C884 + C3016 * C798 - C12183 * C885 - C12296 * C799 +
            (C307 * C5771 + C92137 * C6041) * C886 +
            (C307 * C5869 + C92137 * C6127) * C800) *
               C92212) *
              C92347 +
          ((C339 * C884 + C414 * C798 - C2214 * C885 - C2301 * C799 +
            (C307 * C808 + C92137 * C1025) * C886 +
            (C307 * C893 + C92137 * C1090) * C800) *
               C92323 +
           (C2936 * C884 + C3017 * C798 -
            (C307 * C3433 + C92137 * C3663) * C885 -
            (C307 * C3515 + C92137 * C3737) * C799 +
            (C307 * C7566 + C92137 * C7868) * C886 +
            (C307 * C7668 + C92137 * C7986) * C800) *
               C92212) *
              C14805) *
         C92078 * C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92137 * C308) * C181 +
             (C307 * C182 + C92137 * C394) * C92099) *
                C92323 +
            (C11423 + C11440) * C92212) *
               C92346 +
           ((C401 + C417) * C92323 + C13308 * C92212) * C92347 +
           C20120 * C14805) *
              C93 -
          (((C3021 + C3013) * C92212 + (C419 + C407) * C92323) * C14805 +
           ((C3020 + C3010) * C92212 + (C418 + C404) * C92323) * C92347 +
           (C13310 * C92212 + (C417 + C401) * C92323) * C92346) *
              C94 +
          (C20120 * C92346 +
           (C422 * C92323 + (C3013 + C3021) * C92212) * C92347 +
           ((C412 + C420) * C92323 +
            ((C307 * C2711 + C92137 * C2919) * C181 +
             (C307 * C2781 + C92137 * C3005) * C92099) *
                C92212) *
               C14805) *
              C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92137 * C308) * C181 +
             (C307 * C182 + C92137 * C394) * C92099) *
                C92323 +
            (C11423 + C11440) * C92212) *
               C92346 +
           ((C401 + C417) * C92323 + C13308 * C92212) * C92347 +
           C20120 * C14805) *
              C92078 * C1383 -
          (((C9835 + C9831) * C92212 + (C3020 + C3010) * C92323) * C14805 +
           (C13309 * C92212 + C13310 * C92323) * C92347 +
           ((C11441 + C11426) * C92212 + (C11440 + C11423) * C92323) * C92346) *
              C92078 * C1384 +
          ((C11444 * C92323 + (C11435 + C11443) * C92212) * C92346 +
           (C11429 * C92323 + (C11432 + C11442) * C92212) * C92347 +
           ((C9831 + C9835) * C92323 +
            ((C307 * C12840 + C92137 * C13190) * C181 +
             (C307 * C12966 + C92137 * C13306) * C92099) *
                C92212) *
               C14805) *
              C92078 * C1385)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[17] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92137 * C308) * C244 +
             (C307 * C245 + C92137 * C474) * C92110) *
                C92323 +
            (C11327 * C244 + C11531 * C92110) * C92212) *
               C92346 +
           ((C481 + C497) * C92323 + (C9910 + C9911) * C92212) * C92347 +
           C20200 * C14805) *
              C798 -
          ((((C307 * C3589 + C92137 * C3807) * C92110 +
             (C307 * C3433 + C92137 * C3663) * C244) *
                C92212 +
            (C2386 + C2378) * C92323) *
               C14805 +
           ((C12408 + C12404) * C92212 + (C2387 + C2381) * C92323) * C92347 +
           ((C14426 * C92110 + C14200 * C244) * C92212 +
            ((C307 * C956 + C92137 * C1146) * C92110 +
             (C307 * C805 + C92137 * C1022) * C244) *
                C92323) *
               C92346) *
              C799 +
          ((((C307 * C806 + C92137 * C1023) * C244 +
             (C307 * C957 + C92137 * C1147) * C92110) *
                C92323 +
            ((C307 * C5772 + C92137 * C6042) * C244 +
             (C307 * C5958 + C92137 * C6207) * C92110) *
                C92212) *
               C92346 +
           (((C307 * C807 + C92137 * C1024) * C244 +
             (C307 * C958 + C92137 * C1148) * C92110) *
                C92323 +
            ((C307 * C5771 + C92137 * C6041) * C244 +
             (C307 * C5957 + C92137 * C6210) * C92110) *
                C92212) *
               C92347 +
           (((C307 * C808 + C92137 * C1025) * C244 +
             (C307 * C959 + C92137 * C1149) * C92110) *
                C92323 +
            ((C307 * C7566 + C92137 * C7868) * C244 +
             (C307 * C7768 + C92137 * C8094) * C92110) *
                C92212) *
               C14805) *
              C800) *
         C92078) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92137 * C308) * C244 +
             (C307 * C245 + C92137 * C474) * C92110) *
                C92323 +
            (C11327 * C244 + C11531 * C92110) * C92212) *
               C92346 +
           ((C481 + C497) * C92323 + (C9910 + C9911) * C92212) * C92347 +
           C20200 * C14805) *
              C92099 * C93 -
          (((C20197 + C20198) * C92212 + (C499 + C487) * C92323) * C14805 +
           ((C9918 + C9919) * C92212 + (C498 + C484) * C92323) * C92347 +
           ((C9911 + C9910) * C92212 + (C497 + C481) * C92323) * C92346) *
              C92099 * C94 +
          (C20200 * C92346 +
           (C502 * C92323 + (C20198 + C20197) * C92212) * C92347 +
           ((C492 + C500) * C92323 +
            ((C307 * C2711 + C92137 * C2919) * C244 +
             (C307 * C2851 + C92137 * C3087) * C92110) *
                C92212) *
               C14805) *
              C92099 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C307 * C107 + C92137 * C308) * C1534 +
            (C307 * C245 + C92137 * C474) * C1383 - C11327 * C1535 -
            C11531 * C1384 + C11329 * C1536 + C11532 * C1385) *
               C92323 +
           (C11327 * C1534 + C11531 * C1383 - C11329 * C1535 - C11532 * C1384 +
            C11335 * C1536 + C11533 * C1385) *
               C92212) *
              C92346 +
          ((C337 * C1534 + C493 * C1383 - C2934 * C1535 - C3104 * C1384 +
            C9748 * C1536 + C9920 * C1385) *
               C92323 +
           (C2934 * C1534 + C3104 * C1383 - C9748 * C1535 - C9920 * C1384 +
            C11333 * C1536 + C11534 * C1385) *
               C92212) *
              C92347 +
          ((C339 * C1534 + C494 * C1383 - C2936 * C1535 - C3105 * C1384 +
            C9750 * C1536 + C9921 * C1385) *
               C92323 +
           (C2936 * C1534 + C3105 * C1383 - C9750 * C1535 - C9921 * C1384 +
            (C307 * C12840 + C92137 * C13190) * C1536 +
            (C307 * C13078 + C92137 * C13408) * C1385) *
               C92212) *
              C14805) *
         C92099 * C92078) /
            (p * q * std::sqrt(p + q));
    d2eezx[17] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C20274 * C107 + C92323 * C555 + C20275 * C1389 + C92212 * C1788) *
                C801 +
            (C20274 * C117 + C92323 * C561 + C20275 * C1397 + C92212 * C1796) *
                C92078) *
               C92346 +
           ((C20302 + C20301) * C801 + (C20304 + C20303) * C92078) * C92347 +
           (C20313 * C801 + C20314 * C92078) * C14805) *
              C92137 * C92110 * C798 -
          (((C20275 * C3441 + C92212 * C3881 + C20274 * C811 + C92323 * C1210) *
                C92078 +
            (C20275 * C3433 + C92212 * C3877 + C20274 * C803 + C92323 * C1202) *
                C801) *
               C14805 +
           ((C20275 * C3440 + C92212 * C3880 + C20274 * C812 + C92323 * C1211) *
                C92078 +
            (C20275 * C3432 + C92212 * C3876 + C20274 * C804 + C92323 * C1203) *
                C801) *
               C92347 +
           ((C20275 * C3439 + C92212 * C3879 + C20274 * C813 + C92323 * C1212) *
                C92078 +
            (C20275 * C3431 + C92212 * C3875 + C20274 * C805 + C92323 * C1204) *
                C801) *
               C92346) *
              C92137 * C92110 * C799 +
          (((C20274 * C806 + C92323 * C1205 + C20275 * C5772 + C92212 * C6288) *
                C801 +
            (C20274 * C822 + C92323 * C1213 + C20275 * C5778 + C92212 * C6294) *
                C92078) *
               C92346 +
           ((C20274 * C807 + C92323 * C1206 + C20275 * C5771 + C92212 * C6287) *
                C801 +
            (C20274 * C823 + C92323 * C1214 + C20275 * C5777 + C92212 * C6293) *
                C92078) *
               C92347 +
           ((C20274 * C808 + C92323 * C1207 + C20275 * C7566 + C92212 * C8202) *
                C801 +
            (C20274 * C824 + C92323 * C1215 + C20275 * C7568 + C92212 * C8203) *
                C92078) *
               C14805) *
              C92137 * C92110 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C20274 * C107 + C92323 * C555 + C20275 * C1389 + C92212 * C1788) *
               C104 +
           (C20274 * C117 + C92323 * C561 + C20275 * C1397 + C92212 * C1796) *
               C93 -
           (C20301 + C20302) * C105 - (C20303 + C20304) * C94 + C20313 * C106 +
           C20314 * C95) *
              C92346 +
          ((C20302 + C20301) * C104 + (C20304 + C20303) * C93 -
           (C20306 + C20305) * C105 - (C20308 + C20307) * C94 +
           (C20309 + C20310) * C106 + (C20311 + C20312) * C95) *
              C92347 +
          (C20313 * C104 + C20314 * C93 - (C20310 + C20309) * C105 -
           (C20312 + C20311) * C94 +
           (C20274 * C111 + C92323 * C559 + C20275 * C2711 + C92212 * C3175) *
               C106 +
           (C20274 * C122 + C92323 * C565 + C20275 * C2713 + C92212 * C3176) *
               C95) *
              C14805) *
         C92137 * C92110 * C92099) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C20274 * C107 + C92323 * C555 + C20275 * C1389 + C92212 * C1788) *
                C801 +
            (C20274 * C117 + C92323 * C561 + C20275 * C1397 + C92212 * C1796) *
                C92078) *
               C92346 +
           ((C20302 + C20301) * C801 + (C20304 + C20303) * C92078) * C92347 +
           (C20313 * C801 + C20314 * C92078) * C14805) *
              C92137 * C1383 -
          (((C20275 * C1408 + C92212 * C1799 + C20274 * C1395 +
             C92323 * C1794) *
                C92078 +
            (C20275 * C1392 + C92212 * C1791 + C20274 * C1387 +
             C92323 * C1786) *
                C801) *
               C14805 +
           ((C20275 * C1407 + C92212 * C1798 + C20274 * C1396 +
             C92323 * C1795) *
                C92078 +
            (C20275 * C1391 + C92212 * C1790 + C20274 * C1388 +
             C92323 * C1787) *
                C801) *
               C92347 +
           ((C20275 * C1406 + C92212 * C1797 + C20274 * C1397 +
             C92323 * C1796) *
                C92078 +
            (C20275 * C1390 + C92212 * C1789 + C20274 * C1389 +
             C92323 * C1788) *
                C801) *
               C92346) *
              C92137 * C1384 +
          (((C20274 * C1390 + C92323 * C1789 + C20275 * C10961 +
             C92212 * C11609) *
                C801 +
            (C20274 * C1406 + C92323 * C1797 + C20275 * C10965 +
             C92212 * C11613) *
                C92078) *
               C92346 +
           ((C20274 * C1391 + C92323 * C1790 + C20275 * C10960 +
             C92212 * C11608) *
                C801 +
            (C20274 * C1407 + C92323 * C1798 + C20275 * C10964 +
             C92212 * C11612) *
                C92078) *
               C92347 +
           ((C20274 * C1392 + C92323 * C1791 + C20275 * C12840 +
             C92212 * C13515) *
                C801 +
            (C20274 * C1408 + C92323 * C1799 + C20275 * C12842 +
             C92212 * C13516) *
                C92078) *
               C14805) *
              C92137 * C1385) *
         C92099) /
            (p * q * std::sqrt(p + q));
    d2eezy[17] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C20274 * C107 + C92323 * C555 + C20275 * C1389 + C92212 * C1788) *
               C884 +
           (C20274 * C182 + C92323 * C641 + C20275 * C1471 + C92212 * C1854) *
               C798 -
           (C20275 * C3431 + C92212 * C3875 + C20274 * C805 + C92323 * C1204) *
               C885 -
           (C20275 * C3513 + C92212 * C3949 + C20274 * C890 + C92323 * C1267) *
               C799 +
           (C20274 * C806 + C92323 * C1205 + C20275 * C5772 + C92212 * C6288) *
               C886 +
           (C20274 * C891 + C92323 * C1268 + C20275 * C5870 + C92212 * C6374) *
               C800) *
              C92346 +
          ((C20302 + C20301) * C884 + (C20402 + C20403) * C798 -
           (C20275 * C3432 + C92212 * C3876 + C20274 * C804 + C92323 * C1203) *
               C885 -
           (C20275 * C3514 + C92212 * C3950 + C20274 * C889 + C92323 * C1269) *
               C799 +
           (C20274 * C807 + C92323 * C1206 + C20275 * C5771 + C92212 * C6287) *
               C886 +
           (C20274 * C892 + C92323 * C1270 + C20275 * C5869 + C92212 * C6373) *
               C800) *
              C92347 +
          (C20313 * C884 + C20408 * C798 -
           (C20275 * C3433 + C92212 * C3877 + C20274 * C803 + C92323 * C1202) *
               C885 -
           (C20275 * C3515 + C92212 * C3951 + C20274 * C888 + C92323 * C1271) *
               C799 +
           (C20274 * C808 + C92323 * C1207 + C20275 * C7566 + C92212 * C8202) *
               C886 +
           (C20274 * C893 + C92323 * C1272 + C20275 * C7668 + C92212 * C8314) *
               C800) *
              C14805) *
         C92137 * C92078 * C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C20274 * C107 + C92323 * C555 + C20275 * C1389 + C92212 * C1788) *
                C181 +
            (C20274 * C182 + C92323 * C641 + C20275 * C1471 + C92212 * C1854) *
                C92099) *
               C92346 +
           ((C20302 + C20301) * C181 + (C20402 + C20403) * C92099) * C92347 +
           C20410 * C14805) *
              C92137 * C93 -
          (((C20406 + C20407) * C92099 + (C20310 + C20309) * C181) * C14805 +
           ((C20405 + C20404) * C92099 + (C20306 + C20305) * C181) * C92347 +
           ((C20403 + C20402) * C92099 + (C20301 + C20302) * C181) * C92346) *
              C92137 * C94 +
          (C20410 * C92346 +
           ((C20309 + C20310) * C181 + (C20407 + C20406) * C92099) * C92347 +
           ((C20274 * C111 + C92323 * C559 + C20275 * C2711 + C92212 * C3175) *
                C181 +
            (C20274 * C186 + C92323 * C645 + C20275 * C2781 + C92212 * C3261) *
                C92099) *
               C14805) *
              C92137 * C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C20274 * C107 + C92323 * C555 + C20275 * C1389 + C92212 * C1788) *
                C181 +
            (C20274 * C182 + C92323 * C641 + C20275 * C1471 + C92212 * C1854) *
                C92099) *
               C92346 +
           ((C20302 + C20301) * C181 + (C20402 + C20403) * C92099) * C92347 +
           C20410 * C14805) *
              C92137 * C92078 * C1383 -
          (((C20275 * C1474 + C92212 * C1857 + C20274 * C1469 +
             C92323 * C1852) *
                C92099 +
            (C20275 * C1392 + C92212 * C1791 + C20274 * C1387 +
             C92323 * C1786) *
                C181) *
               C14805 +
           ((C20275 * C1473 + C92212 * C1856 + C20274 * C1470 +
             C92323 * C1853) *
                C92099 +
            (C20275 * C1391 + C92212 * C1790 + C20274 * C1388 +
             C92323 * C1787) *
                C181) *
               C92347 +
           ((C20275 * C1472 + C92212 * C1855 + C20274 * C1471 +
             C92323 * C1854) *
                C92099 +
            (C20275 * C1390 + C92212 * C1789 + C20274 * C1389 +
             C92323 * C1788) *
                C181) *
               C92346) *
              C92137 * C92078 * C1384 +
          (((C20274 * C1390 + C92323 * C1789 + C20275 * C10961 +
             C92212 * C11609) *
                C181 +
            (C20274 * C1472 + C92323 * C1855 + C20275 * C11093 +
             C92212 * C11691) *
                C92099) *
               C92346 +
           ((C20274 * C1391 + C92323 * C1790 + C20275 * C10960 +
             C92212 * C11608) *
                C181 +
            (C20274 * C1473 + C92323 * C1856 + C20275 * C11092 +
             C92212 * C11690) *
                C92099) *
               C92347 +
           ((C20274 * C1392 + C92323 * C1791 + C20275 * C12840 +
             C92212 * C13515) *
                C181 +
            (C20274 * C1474 + C92323 * C1857 + C20275 * C12966 +
             C92212 * C13633) *
                C92099) *
               C14805) *
              C92137 * C92078 * C1385)) /
            (p * q * std::sqrt(p + q));
    d2eezz[17] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C20274 * C107 + C92323 * C555 + C20275 * C1389 + C92212 * C1788) *
                C244 +
            (C20274 * C245 + C92323 * C719 + C20275 * C1540 + C92212 * C1909) *
                C92110) *
               C92346 +
           ((C20302 + C20301) * C244 + (C20498 + C20499) * C92110) * C92347 +
           C20506 * C14805) *
              C92137 * C798 -
          (((C20275 * C3589 + C92212 * C4021 + C20274 * C954 + C92323 * C1326) *
                C92110 +
            (C20275 * C3433 + C92212 * C3877 + C20274 * C803 + C92323 * C1202) *
                C244) *
               C14805 +
           ((C20275 * C3588 + C92212 * C4020 + C20274 * C955 + C92323 * C1327) *
                C92110 +
            (C20275 * C3432 + C92212 * C3876 + C20274 * C804 + C92323 * C1203) *
                C244) *
               C92347 +
           ((C20275 * C3587 + C92212 * C4019 + C20274 * C956 + C92323 * C1328) *
                C92110 +
            (C20275 * C3431 + C92212 * C3875 + C20274 * C805 + C92323 * C1204) *
                C244) *
               C92346) *
              C92137 * C799 +
          (((C20274 * C806 + C92323 * C1205 + C20275 * C5772 + C92212 * C6288) *
                C244 +
            (C20274 * C957 + C92323 * C1329 + C20275 * C5958 + C92212 * C6455) *
                C92110) *
               C92346 +
           ((C20274 * C807 + C92323 * C1206 + C20275 * C5771 + C92212 * C6287) *
                C244 +
            (C20274 * C958 + C92323 * C1330 + C20275 * C5957 + C92212 * C6457) *
                C92110) *
               C92347 +
           ((C20274 * C808 + C92323 * C1207 + C20275 * C7566 + C92212 * C8202) *
                C244 +
            (C20274 * C959 + C92323 * C1331 + C20275 * C7768 + C92212 * C8423) *
                C92110) *
               C14805) *
              C92137 * C800) *
         C92078) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C20274 * C107 + C92323 * C555 + C20275 * C1389 + C92212 * C1788) *
                C244 +
            (C20274 * C245 + C92323 * C719 + C20275 * C1540 + C92212 * C1909) *
                C92110) *
               C92346 +
           ((C20302 + C20301) * C244 + (C20498 + C20499) * C92110) * C92347 +
           C20506 * C14805) *
              C92137 * C92099 * C93 -
          (((C20502 + C20503) * C92110 + (C20310 + C20309) * C244) * C14805 +
           ((C20501 + C20500) * C92110 + (C20306 + C20305) * C244) * C92347 +
           ((C20499 + C20498) * C92110 + (C20301 + C20302) * C244) * C92346) *
              C92137 * C92099 * C94 +
          (C20506 * C92346 +
           ((C20309 + C20310) * C244 + (C20503 + C20502) * C92110) * C92347 +
           ((C20274 * C111 + C92323 * C559 + C20275 * C2711 + C92212 * C3175) *
                C244 +
            (C20274 * C249 + C92323 * C723 + C20275 * C2851 + C92212 * C3343) *
                C92110) *
               C14805) *
              C92137 * C92099 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C20274 * C107 + C92323 * C555 + C20275 * C1389 + C92212 * C1788) *
               C1534 +
           (C20274 * C245 + C92323 * C719 + C20275 * C1540 + C92212 * C1909) *
               C1383 -
           (C20275 * C1390 + C92212 * C1789 + C20274 * C1389 + C92323 * C1788) *
               C1535 -
           (C20275 * C1541 + C92212 * C1910 + C20274 * C1540 + C92323 * C1909) *
               C1384 +
           (C20274 * C1390 + C92323 * C1789 + C20275 * C10961 +
            C92212 * C11609) *
               C1536 +
           (C20274 * C1541 + C92323 * C1910 + C20275 * C11197 +
            C92212 * C11768) *
               C1385) *
              C92346 +
          ((C20302 + C20301) * C1534 + (C20498 + C20499) * C1383 -
           (C20275 * C1391 + C92212 * C1790 + C20274 * C1388 + C92323 * C1787) *
               C1535 -
           (C20275 * C1542 + C92212 * C1912 + C20274 * C1539 + C92323 * C1911) *
               C1384 +
           (C20274 * C1391 + C92323 * C1790 + C20275 * C10960 +
            C92212 * C11608) *
               C1536 +
           (C20274 * C1542 + C92323 * C1912 + C20275 * C11198 +
            C92212 * C11770) *
               C1385) *
              C92347 +
          (C20313 * C1534 + C20504 * C1383 -
           (C20275 * C1392 + C92212 * C1791 + C20274 * C1387 + C92323 * C1786) *
               C1535 -
           (C20275 * C1543 + C92212 * C1914 + C20274 * C1538 + C92323 * C1913) *
               C1384 +
           (C20274 * C1392 + C92323 * C1791 + C20275 * C12840 +
            C92212 * C13515) *
               C1536 +
           (C20274 * C1543 + C92323 * C1914 + C20275 * C13078 +
            C92212 * C13741) *
               C1385) *
              C14805) *
         C92137 * C92099 * C92078) /
            (p * q * std::sqrt(p + q));
    d2eexx[18] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C14808 * C107 + C92346 * C113 + C14809 * C108 +
                       C92347 * C114 + C14810 * C109 + C14805 * C115) *
                          C1987 +
                      (C14808 * C117 + C92346 * C125 + C14809 * C118 +
                       C92347 * C126 + C14810 * C119 + C14805 * C127) *
                          C1983 -
                      (C14810 * C110 + C14805 * C116 + C14809 * C109 +
                       C92347 * C115 + C14808 * C108 + C92346 * C114) *
                          C1988 -
                      (C14810 * C120 + C14805 * C128 + C14809 * C119 +
                       C92347 * C127 + C14808 * C118 + C92346 * C126) *
                          C1984) *
                         C92137 * C92323 +
                     ((C21271 + C21272 + C21273) * C1987 +
                      (C21274 + C21275 + C21276) * C1983 -
                      (C22973 + C22974 + C22975) * C1988 -
                      (C22976 + C22977 + C22978) * C1984) *
                         C92137 * C92212) *
                        C2709 +
                    (((C22975 + C22974 + C22973) * C1988 -
                      ((C21276 + C21275 + C21274) * C1983 +
                       (C21273 + C21272 + C21271) * C1987) +
                      (C22978 + C22977 + C22976) * C1984) *
                         C92137 * C92323 +
                     ((C14808 * C1391 + C92346 * C1403 + C14809 * C1392 +
                       C92347 * C1404 + C14810 * C1393 + C14805 * C1405) *
                          C1988 -
                      ((C21277 + C21278 + C21279) * C1983 +
                       (C21280 + C21281 + C21282) * C1987) +
                      (C14808 * C1407 + C92346 * C1415 + C14809 * C1408 +
                       C92347 * C1416 + C14810 * C1409 + C14805 * C1417) *
                          C1984) *
                         C92137 * C92212) *
                        C2710) *
                   C92099) /
                  (p * q * std::sqrt(p + q));
    d2eexy[18] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C14808 * C107 + C92346 * C113 + C14809 * C108 +
                        C92347 * C114 + C14810 * C109 + C14805 * C115) *
                           C181 +
                       (C14808 * C182 + C92346 * C188 + C14809 * C183 +
                        C92347 * C189 + C14810 * C184 + C14805 * C190) *
                           C92099) *
                          C92137 * C92323 +
                      ((C21271 + C21272 + C21273) * C181 +
                       (C21369 + C21370 + C21371) * C92099) *
                          C92137 * C92212) *
                         C1983 -
                     (((C23083 + C23084 + C23085) * C92099 +
                       (C22973 + C22974 + C22975) * C181) *
                          C92137 * C92212 +
                      ((C14810 * C185 + C14805 * C191 + C14809 * C184 +
                        C92347 * C190 + C14808 * C183 + C92346 * C189) *
                           C92099 +
                       (C14810 * C110 + C14805 * C116 + C14809 * C109 +
                        C92347 * C115 + C14808 * C108 + C92346 * C114) *
                           C181) *
                          C92137 * C92323) *
                         C1984) *
                        C2709 +
                    ((((C22975 + C22974 + C22973) * C181 +
                       (C23085 + C23084 + C23083) * C92099) *
                          C92137 * C92323 +
                      ((C14808 * C1391 + C92346 * C1403 + C14809 * C1392 +
                        C92347 * C1404 + C14810 * C1393 + C14805 * C1405) *
                           C181 +
                       (C14808 * C1473 + C92346 * C1481 + C14809 * C1474 +
                        C92347 * C1482 + C14810 * C1475 + C14805 * C1483) *
                           C92099) *
                          C92137 * C92212) *
                         C1984 -
                     (((C21372 + C21373 + C21374) * C92099 +
                       (C21280 + C21281 + C21282) * C181) *
                          C92137 * C92212 +
                      ((C21371 + C21370 + C21369) * C92099 +
                       (C21273 + C21272 + C21271) * C181) *
                          C92137 * C92323) *
                         C1983) *
                        C2710)) /
                  (p * q * std::sqrt(p + q));
    d2eexz[18] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C14808 * C107 + C92346 * C113 + C14809 * C108 +
                       C92347 * C114 + C14810 * C109 + C14805 * C115) *
                          C2849 +
                      (C14808 * C245 + C92346 * C251 + C14809 * C246 +
                       C92347 * C252 + C14810 * C247 + C14805 * C253) *
                          C2709 -
                      (C21273 + C21272 + C21271) * C2850 -
                      (C21461 + C21462 + C21463) * C2710) *
                         C92137 * C92323 +
                     ((C21271 + C21272 + C21273) * C2849 +
                      (C21463 + C21462 + C21461) * C2709 -
                      (C21280 + C21281 + C21282) * C2850 -
                      (C21466 + C21465 + C21464) * C2710) *
                         C92137 * C92212) *
                        C92099 * C1983 +
                    (((C22975 + C22974 + C22973) * C2850 -
                      ((C14810 * C248 + C14805 * C254 + C14809 * C247 +
                        C92347 * C253 + C14808 * C246 + C92346 * C252) *
                           C2709 +
                       (C14810 * C110 + C14805 * C116 + C14809 * C109 +
                        C92347 * C115 + C14808 * C108 + C92346 * C114) *
                           C2849) +
                      (C23190 + C23191 + C23192) * C2710) *
                         C92137 * C92323 +
                     ((C14808 * C1391 + C92346 * C1403 + C14809 * C1392 +
                       C92347 * C1404 + C14810 * C1393 + C14805 * C1405) *
                          C2850 -
                      ((C23192 + C23191 + C23190) * C2709 +
                       (C22973 + C22974 + C22975) * C2849) +
                      (C14808 * C1542 + C92346 * C1550 + C14809 * C1543 +
                       C92347 * C1551 + C14810 * C1544 + C14805 * C1552) *
                          C2710) *
                         C92137 * C92212) *
                        C92099 * C1984)) /
                  (p * q * std::sqrt(p + q));
    d2eeyx[18] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92137 * C308) * C1987 +
             (C307 * C117 + C92137 * C314) * C1983 - C337 * C1988 -
             C338 * C1984) *
                C92323 +
            (C13193 + C13194 - C13195 - C13196) * C92212) *
               C92346 +
           ((C337 * C1987 + C338 * C1983 - C339 * C1988 - C340 * C1984) *
                C92323 +
            (C13201 + C13202 - C13203 - C13204) * C92212) *
               C92347 +
           ((C339 * C1987 + C340 * C1983 - C341 * C1988 - C342 * C1984) *
                C92323 +
            (C23291 + C23292 - C23293 - C23294) * C92212) *
               C14805) *
              C2709 +
          (((C13195 - (C13194 + C13193) + C13196) * C92323 +
            (C13199 - (C13198 + C13197) + C13200) * C92212) *
               C92346 +
           ((C13203 - (C13202 + C13201) + C13204) * C92323 +
            (C13207 - (C13206 + C13205) + C13208) * C92212) *
               C92347 +
           ((C23293 - (C23292 + C23291) + C23294) * C92323 +
            ((C307 * C1393 + C92137 * C1610) * C1988 -
             (C9751 * C1983 + C9750 * C1987) +
             (C307 * C1409 + C92137 * C1618) * C1984) *
                C92212) *
               C14805) *
              C2710) *
         C92099) /
        (p * q * std::sqrt(p + q));
    d2eeyy[18] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C307 * C107 + C92137 * C308) * C181 +
              (C307 * C182 + C92137 * C394) * C92099) *
                 C92323 +
             (C11423 + C11440) * C92212) *
                C92346 +
            ((C401 + C417) * C92323 + C13308 * C92212) * C92347 +
            C20120 * C14805) *
               C1983 -
           (((C3021 + C3013) * C92212 + (C419 + C407) * C92323) * C14805 +
            (C23393 * C92212 + (C418 + C404) * C92323) * C92347 +
            (C13310 * C92212 + (C417 + C401) * C92323) * C92346) *
               C1984) *
              C2709 +
          (((C13308 * C92323 + C11429 * C92212) * C92346 +
            (C20118 * C92323 + (C9831 + C9835) * C92212) * C92347 +
            ((C3013 + C3021) * C92323 +
             ((C307 * C1393 + C92137 * C1610) * C181 +
              (C307 * C1475 + C92137 * C1676) * C92099) *
                 C92212) *
                C14805) *
               C1984 -
           (((C9835 + C9831) * C92212 + C23393 * C92323) * C14805 +
            (C13309 * C92212 + C13310 * C92323) * C92347 +
            ((C11441 + C11426) * C92212 + (C11440 + C11423) * C92323) *
                C92346) *
               C1983) *
              C2710)) /
        (p * q * std::sqrt(p + q));
    d2eeyz[18] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C307 * C107 + C92137 * C308) * C2849 +
                       (C307 * C245 + C92137 * C474) * C2709 - C11327 * C2850 -
                       C11531 * C2710) *
                          C92323 +
                      (C11327 * C2849 + C11531 * C2709 - C11329 * C2850 -
                       C11532 * C2710) *
                          C92212) *
                         C92346 +
                     ((C3089 + C3090 - C3091 - C3107) * C92323 +
                      (C13410 + C13411 - C13412 - C13413) * C92212) *
                         C92347 +
                     ((C3094 + C3095 - C3096 - C3108) * C92323 +
                      (C23492 + C23493 - C23494 - C23495) * C92212) *
                         C14805) *
                        C92099 * C1983 +
                    (((C3091 - (C3090 + C3089) + C3107) * C92323 +
                      (C13412 - (C13411 + C13410) + C13413) * C92212) *
                         C92346 +
                     ((C3096 - (C3095 + C3094) + C3108) * C92323 +
                      (C23494 - (C23493 + C23492) + C23495) * C92212) *
                         C92347 +
                     ((C3101 - (C3100 + C3099) + C3109) * C92323 +
                      ((C307 * C1393 + C92137 * C1610) * C2850 -
                       (C3106 * C2709 + C2938 * C2849) +
                       (C307 * C1544 + C92137 * C1734) * C2710) *
                          C92212) *
                         C14805) *
                        C92099 * C1984)) /
                  (p * q * std::sqrt(p + q));
    d2eezx[18] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C20274 * C107 + C92323 * C555 + C20275 * C1389 + C92212 * C1788) *
                C1987 +
            (C20274 * C117 + C92323 * C561 + C20275 * C1397 + C92212 * C1796) *
                C1983 -
            (C20301 + C20302) * C1988 - (C20303 + C20304) * C1984) *
               C92346 +
           ((C20302 + C20301) * C1987 + (C20304 + C20303) * C1983 -
            (C20306 + C20305) * C1988 - (C20308 + C20307) * C1984) *
               C92347 +
           (C20313 * C1987 + C20314 * C1983 - (C20310 + C20309) * C1988 -
            (C20312 + C20311) * C1984) *
               C14805) *
              C92137 * C2709 +
          (((C23610 + C23611) * C1988 -
            ((C20275 * C1406 + C92212 * C1797 + C20274 * C1397 +
              C92323 * C1796) *
                 C1983 +
             (C20275 * C1390 + C92212 * C1789 + C20274 * C1389 +
              C92323 * C1788) *
                 C1987) +
            (C23612 + C23613) * C1984) *
               C92346 +
           ((C23614 + C23615) * C1988 -
            ((C23613 + C23612) * C1983 + (C23611 + C23610) * C1987) +
            (C23616 + C23617) * C1984) *
               C92347 +
           ((C20274 * C1386 + C92323 * C1785 + C20275 * C1393 +
             C92212 * C1792) *
                C1988 -
            ((C23617 + C23616) * C1983 + (C23615 + C23614) * C1987) +
            (C20274 * C1394 + C92323 * C1793 + C20275 * C1409 +
             C92212 * C1800) *
                C1984) *
               C14805) *
              C92137 * C2710) *
         C92099) /
        (p * q * std::sqrt(p + q));
    d2eezy[18] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C20274 * C107 + C92323 * C555 + C20275 * C1389 + C92212 * C1788) *
                 C181 +
             (C20274 * C182 + C92323 * C641 + C20275 * C1471 + C92212 * C1854) *
                 C92099) *
                C92346 +
            ((C20302 + C20301) * C181 + (C20402 + C20403) * C92099) * C92347 +
            C20410 * C14805) *
               C92137 * C1983 -
           (((C20406 + C20407) * C92099 + (C20310 + C20309) * C181) * C14805 +
            ((C20405 + C20404) * C92099 + (C20306 + C20305) * C181) * C92347 +
            ((C20403 + C20402) * C92099 + (C20301 + C20302) * C181) * C92346) *
               C92137 * C1984) *
              C2709 +
          ((((C23610 + C23611) * C181 + (C23724 + C23725) * C92099) * C92346 +
            ((C23614 + C23615) * C181 + (C23726 + C23727) * C92099) * C92347 +
            ((C20274 * C1386 + C92323 * C1785 + C20275 * C1393 +
              C92212 * C1792) *
                 C181 +
             (C20274 * C1468 + C92323 * C1851 + C20275 * C1475 +
              C92212 * C1858) *
                 C92099) *
                C14805) *
               C92137 * C1984 -
           (((C23727 + C23726) * C92099 + (C23615 + C23614) * C181) * C14805 +
            ((C23725 + C23724) * C92099 + (C23611 + C23610) * C181) * C92347 +
            ((C20275 * C1472 + C92212 * C1855 + C20274 * C1471 +
              C92323 * C1854) *
                 C92099 +
             (C20275 * C1390 + C92212 * C1789 + C20274 * C1389 +
              C92323 * C1788) *
                 C181) *
                C92346) *
               C92137 * C1983) *
              C2710)) /
        (p * q * std::sqrt(p + q));
    d2eezz[18] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C20274 * C107 + C92323 * C555 + C20275 * C1389 + C92212 * C1788) *
                C2849 +
            (C20274 * C245 + C92323 * C719 + C20275 * C1540 + C92212 * C1909) *
                C2709 -
            (C20275 * C1390 + C92212 * C1789 + C20274 * C1389 +
             C92323 * C1788) *
                C2850 -
            (C20275 * C1541 + C92212 * C1910 + C20274 * C1540 +
             C92323 * C1909) *
                C2710) *
               C92346 +
           ((C20302 + C20301) * C2849 + (C20498 + C20499) * C2709 -
            (C23611 + C23610) * C2850 - (C23834 + C23835) * C2710) *
               C92347 +
           (C20313 * C2849 + C20504 * C2709 - (C23615 + C23614) * C2850 -
            (C23836 + C23837) * C2710) *
               C14805) *
              C92137 * C92099 * C1983 +
          (((C23610 + C23611) * C2850 -
            ((C20499 + C20498) * C2709 + (C20301 + C20302) * C2849) +
            (C23835 + C23834) * C2710) *
               C92346 +
           ((C23614 + C23615) * C2850 -
            ((C20501 + C20500) * C2709 + (C20306 + C20305) * C2849) +
            (C23837 + C23836) * C2710) *
               C92347 +
           ((C20274 * C1386 + C92323 * C1785 + C20275 * C1393 +
             C92212 * C1792) *
                C2850 -
            ((C20502 + C20503) * C2709 + (C20310 + C20309) * C2849) +
            (C20274 * C1537 + C92323 * C1915 + C20275 * C1544 +
             C92212 * C1916) *
                C2710) *
               C14805) *
              C92137 * C92099 * C1984)) /
        (p * q * std::sqrt(p + q));
    d2eexx[19] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((C14808 * C107 + C92346 * C113 + C14809 * C108 +
                      C92347 * C114 + C14810 * C109 + C14805 * C115) *
                         C104 +
                     (C14808 * C117 + C92346 * C125 + C14809 * C118 +
                      C92347 * C126 + C14810 * C119 + C14805 * C127) *
                         C93 -
                     (C14810 * C110 + C14805 * C116 + C14809 * C109 +
                      C92347 * C115 + C14808 * C108 + C92346 * C114) *
                         C105 -
                     (C14810 * C120 + C14805 * C128 + C14809 * C119 +
                      C92347 * C127 + C14808 * C118 + C92346 * C126) *
                         C94 +
                     (C14808 * C109 + C92346 * C115 + C14809 * C110 +
                      C92347 * C116 + C14810 * C111 + C14805 * C121) *
                         C106 +
                     (C14808 * C119 + C92346 * C127 + C14809 * C120 +
                      C92347 * C128 + C14810 * C122 + C14805 * C129) *
                         C95) *
                        C92137 * C92323 +
                    ((C14808 * C1389 + C92346 * C1401 + C14809 * C1388 +
                      C92347 * C1400 + C14810 * C1387 + C14805 * C1399) *
                         C104 +
                     (C14808 * C1397 + C92346 * C1413 + C14809 * C1396 +
                      C92347 * C1412 + C14810 * C1395 + C14805 * C1411) *
                         C93 -
                     (C14810 * C1386 + C14805 * C1398 + C14809 * C1387 +
                      C92347 * C1399 + C14808 * C1388 + C92346 * C1400) *
                         C105 -
                     (C14810 * C1394 + C14805 * C1410 + C14809 * C1395 +
                      C92347 * C1411 + C14808 * C1396 + C92346 * C1412) *
                         C94 +
                     (C14808 * C1387 + C92346 * C1399 + C14809 * C1386 +
                      C92347 * C1398 + C14810 * C2711 + C14805 * C2712) *
                         C106 +
                     (C14808 * C1395 + C92346 * C1411 + C14809 * C1394 +
                      C92347 * C1410 + C14810 * C2713 + C14805 * C2714) *
                         C95) *
                        C92137 * C92212) *
                   C92110 * C92099) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C14808 * C107 + C92346 * C113 + C14809 * C108 +
                       C92347 * C114 + C14810 * C109 + C14805 * C115) *
                          C801 +
                      (C14808 * C117 + C92346 * C125 + C14809 * C118 +
                       C92347 * C126 + C14810 * C119 + C14805 * C127) *
                          C92078) *
                         C92137 * C92323 +
                     ((C14808 * C1389 + C92346 * C1401 + C14809 * C1388 +
                       C92347 * C1400 + C14810 * C1387 + C14805 * C1399) *
                          C801 +
                      (C14808 * C1397 + C92346 * C1413 + C14809 * C1396 +
                       C92347 * C1412 + C14810 * C1395 + C14805 * C1411) *
                          C92078) *
                         C92137 * C92212) *
                        C92110 * C798 -
                    (((C18935 + C18936 + C18937) * C92078 +
                      (C18938 + C18939 + C18940) * C801) *
                         C92137 * C92212 +
                     ((C15597 + C15596 + C15595) * C92078 +
                      (C15594 + C15593 + C15592) * C801) *
                         C92137 * C92323) *
                        C92110 * C799 +
                    (((C15603 + C15602 + C15601) * C801 +
                      (C15600 + C15599 + C15598) * C92078) *
                         C92137 * C92323 +
                     ((C14808 * C5772 + C92346 * C5780 + C14809 * C5771 +
                       C92347 * C5779 + C14810 * C7566 + C14805 * C7567) *
                          C801 +
                      (C14808 * C5778 + C92346 * C5790 + C14809 * C5777 +
                       C92347 * C5789 + C14810 * C7568 + C14805 * C7569) *
                          C92078) *
                         C92137 * C92212) *
                        C92110 * C800)) /
                      (p * q * std::sqrt(p + q));
    d2eexy[19] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C14808 * C107 + C92346 * C113 + C14809 * C108 +
                       C92347 * C114 + C14810 * C109 + C14805 * C115) *
                          C181 +
                      (C14808 * C182 + C92346 * C188 + C14809 * C183 +
                       C92347 * C189 + C14810 * C184 + C14805 * C190) *
                          C92099) *
                         C92137 * C92323 +
                     ((C14808 * C1389 + C92346 * C1401 + C14809 * C1388 +
                       C92347 * C1400 + C14810 * C1387 + C14805 * C1399) *
                          C181 +
                      (C14808 * C1471 + C92346 * C1479 + C14809 * C1470 +
                       C92347 * C1478 + C14810 * C1469 + C14805 * C1477) *
                          C92099) *
                         C92137 * C92212) *
                        C93 -
                    (((C14810 * C1468 + C14805 * C1476 + C14809 * C1469 +
                       C92347 * C1477 + C14808 * C1470 + C92346 * C1478) *
                          C92099 +
                      (C14810 * C1386 + C14805 * C1398 + C14809 * C1387 +
                       C92347 * C1399 + C14808 * C1388 + C92346 * C1400) *
                          C181) *
                         C92137 * C92212 +
                     ((C14810 * C185 + C14805 * C191 + C14809 * C184 +
                       C92347 * C190 + C14808 * C183 + C92346 * C189) *
                          C92099 +
                      (C14810 * C110 + C14805 * C116 + C14809 * C109 +
                       C92347 * C115 + C14808 * C108 + C92346 * C114) *
                          C181) *
                         C92137 * C92323) *
                        C94 +
                    (((C14808 * C109 + C92346 * C115 + C14809 * C110 +
                       C92347 * C116 + C14810 * C111 + C14805 * C121) *
                          C181 +
                      (C14808 * C184 + C92346 * C190 + C14809 * C185 +
                       C92347 * C191 + C14810 * C186 + C14805 * C192) *
                          C92099) *
                         C92137 * C92323 +
                     ((C14808 * C1387 + C92346 * C1399 + C14809 * C1386 +
                       C92347 * C1398 + C14810 * C2711 + C14805 * C2712) *
                          C181 +
                      (C14808 * C1469 + C92346 * C1477 + C14809 * C1468 +
                       C92347 * C1476 + C14810 * C2781 + C14805 * C2782) *
                          C92099) *
                         C92137 * C92212) *
                        C95) *
                   C92110) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((C14808 * C107 + C92346 * C113 + C14809 * C108 +
                      C92347 * C114 + C14810 * C109 + C14805 * C115) *
                         C884 +
                     (C14808 * C182 + C92346 * C188 + C14809 * C183 +
                      C92347 * C189 + C14810 * C184 + C14805 * C190) *
                         C798 -
                     (C15594 + C15593 + C15592) * C885 -
                     (C15690 + C15691 + C15692) * C799 +
                     (C15603 + C15602 + C15601) * C886 +
                     (C15693 + C15694 + C15695) * C800) *
                        C92137 * C92323 +
                    ((C14808 * C1389 + C92346 * C1401 + C14809 * C1388 +
                      C92347 * C1400 + C14810 * C1387 + C14805 * C1399) *
                         C884 +
                     (C14808 * C1471 + C92346 * C1479 + C14809 * C1470 +
                      C92347 * C1478 + C14810 * C1469 + C14805 * C1477) *
                         C798 -
                     (C18938 + C18939 + C18940) * C885 -
                     (C19047 + C19046 + C19045) * C799 +
                     (C14808 * C5772 + C92346 * C5780 + C14809 * C5771 +
                      C92347 * C5779 + C14810 * C7566 + C14805 * C7567) *
                         C886 +
                     (C14808 * C5870 + C92346 * C5876 + C14809 * C5869 +
                      C92347 * C5875 + C14810 * C7668 + C14805 * C7669) *
                         C800) *
                        C92137 * C92212) *
                   C92078 * C92110) /
                      (p * q * std::sqrt(p + q));
    d2eexz[19] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C14808 * C107 + C92346 * C113 + C14809 * C108 +
                       C92347 * C114 + C14810 * C109 + C14805 * C115) *
                          C244 +
                      (C14808 * C245 + C92346 * C251 + C14809 * C246 +
                       C92347 * C252 + C14810 * C247 + C14805 * C253) *
                          C92110) *
                         C92137 * C92323 +
                     ((C14808 * C1389 + C92346 * C1401 + C14809 * C1388 +
                       C92347 * C1400 + C14810 * C1387 + C14805 * C1399) *
                          C244 +
                      (C14808 * C1540 + C92346 * C1548 + C14809 * C1539 +
                       C92347 * C1547 + C14810 * C1538 + C14805 * C1546) *
                          C92110) *
                         C92137 * C92212) *
                        C92099 * C93 -
                    (((C14810 * C1537 + C14805 * C1545 + C14809 * C1538 +
                       C92347 * C1546 + C14808 * C1539 + C92346 * C1547) *
                          C92110 +
                      (C14810 * C1386 + C14805 * C1398 + C14809 * C1387 +
                       C92347 * C1399 + C14808 * C1388 + C92346 * C1400) *
                          C244) *
                         C92137 * C92212 +
                     ((C14810 * C248 + C14805 * C254 + C14809 * C247 +
                       C92347 * C253 + C14808 * C246 + C92346 * C252) *
                          C92110 +
                      (C14810 * C110 + C14805 * C116 + C14809 * C109 +
                       C92347 * C115 + C14808 * C108 + C92346 * C114) *
                          C244) *
                         C92137 * C92323) *
                        C92099 * C94 +
                    (((C14808 * C109 + C92346 * C115 + C14809 * C110 +
                       C92347 * C116 + C14810 * C111 + C14805 * C121) *
                          C244 +
                      (C14808 * C247 + C92346 * C253 + C14809 * C248 +
                       C92347 * C254 + C14810 * C249 + C14805 * C255) *
                          C92110) *
                         C92137 * C92323 +
                     ((C14808 * C1387 + C92346 * C1399 + C14809 * C1386 +
                       C92347 * C1398 + C14810 * C2711 + C14805 * C2712) *
                          C244 +
                      (C14808 * C1538 + C92346 * C1546 + C14809 * C1537 +
                       C92347 * C1545 + C14810 * C2851 + C14805 * C2852) *
                          C92110) *
                         C92137 * C92212) *
                        C92099 * C95)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C14808 * C107 + C92346 * C113 + C14809 * C108 +
                       C92347 * C114 + C14810 * C109 + C14805 * C115) *
                          C244 +
                      (C14808 * C245 + C92346 * C251 + C14809 * C246 +
                       C92347 * C252 + C14810 * C247 + C14805 * C253) *
                          C92110) *
                         C92137 * C92323 +
                     ((C14808 * C1389 + C92346 * C1401 + C14809 * C1388 +
                       C92347 * C1400 + C14810 * C1387 + C14805 * C1399) *
                          C244 +
                      (C14808 * C1540 + C92346 * C1548 + C14809 * C1539 +
                       C92347 * C1547 + C14810 * C1538 + C14805 * C1546) *
                          C92110) *
                         C92137 * C92212) *
                        C798 -
                    (((C19152 + C19153 + C19154) * C92110 +
                      (C18938 + C18939 + C18940) * C244) *
                         C92137 * C92212 +
                     ((C15784 + C15783 + C15782) * C92110 +
                      (C15594 + C15593 + C15592) * C244) *
                         C92137 * C92323) *
                        C799 +
                    (((C15603 + C15602 + C15601) * C244 +
                      (C15787 + C15786 + C15785) * C92110) *
                         C92137 * C92323 +
                     ((C14808 * C5772 + C92346 * C5780 + C14809 * C5771 +
                       C92347 * C5779 + C14810 * C7566 + C14805 * C7567) *
                          C244 +
                      (C14808 * C5958 + C92346 * C5964 + C14809 * C5957 +
                       C92347 * C5963 + C14810 * C7768 + C14805 * C7769) *
                          C92110) *
                         C92137 * C92212) *
                        C800) *
                   C92078) /
                      (p * q * std::sqrt(p + q));
    d2eeyx[19] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C307 * C107 + C92137 * C308) * C104 +
                      (C307 * C117 + C92137 * C314) * C93 - C337 * C105 -
                      C338 * C94 + C339 * C106 + C340 * C95) *
                         C92323 +
                     (C11327 * C104 + C11328 * C93 - C2934 * C105 -
                      C2935 * C94 + C2936 * C106 + C2937 * C95) *
                         C92212) *
                        C92346 +
                    ((C337 * C104 + C338 * C93 - C339 * C105 - C340 * C94 +
                      C341 * C106 + C342 * C95) *
                         C92323 +
                     (C2934 * C104 + C2935 * C93 - C2936 * C105 - C2937 * C94 +
                      C2938 * C106 + C2939 * C95) *
                         C92212) *
                        C92347 +
                    ((C339 * C104 + C340 * C93 - C341 * C105 - C342 * C94 +
                      C343 * C106 + C344 * C95) *
                         C92323 +
                     (C2936 * C104 + C2937 * C93 - C2938 * C105 - C2939 * C94 +
                      (C307 * C2711 + C92137 * C2919) * C106 +
                      (C307 * C2713 + C92137 * C2920) * C95) *
                         C92212) *
                        C14805) *
                   C92110 * C92099) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((((C307 * C107 + C92137 * C308) * C801 +
                       (C307 * C117 + C92137 * C314) * C92078) *
                          C92323 +
                      (C11336 + C11337) * C92212) *
                         C92346 +
                     ((C337 * C801 + C338 * C92078) * C92323 +
                      (C11315 + C11316) * C92212) *
                         C92347 +
                     ((C339 * C801 + C340 * C92078) * C92323 +
                      (C2936 * C801 + C2937 * C92078) * C92212) *
                         C14805) *
                        C92110 * C798 -
                    ((((C307 * C3441 + C92137 * C3667) * C92078 +
                       (C307 * C3433 + C92137 * C3663) * C801) *
                          C92212 +
                      (C2215 * C92078 + C2214 * C801) * C92323) *
                         C14805 +
                     ((C14197 + C14196) * C92212 +
                      (C2213 * C92078 + C2212 * C801) * C92323) *
                         C92347 +
                     ((C14205 + C14204) * C92212 +
                      ((C307 * C813 + C92137 * C1030) * C92078 +
                       (C307 * C805 + C92137 * C1022) * C801) *
                          C92323) *
                         C92346) *
                        C92110 * C799 +
                    ((((C307 * C806 + C92137 * C1023) * C801 +
                       (C307 * C822 + C92137 * C1031) * C92078) *
                          C92323 +
                      ((C307 * C5772 + C92137 * C6042) * C801 +
                       (C307 * C5778 + C92137 * C6048) * C92078) *
                          C92212) *
                         C92346 +
                     (((C307 * C807 + C92137 * C1024) * C801 +
                       (C307 * C823 + C92137 * C1032) * C92078) *
                          C92323 +
                      ((C307 * C5771 + C92137 * C6041) * C801 +
                       (C307 * C5777 + C92137 * C6047) * C92078) *
                          C92212) *
                         C92347 +
                     (((C307 * C808 + C92137 * C1025) * C801 +
                       (C307 * C824 + C92137 * C1033) * C92078) *
                          C92323 +
                      ((C307 * C7566 + C92137 * C7868) * C801 +
                       (C307 * C7568 + C92137 * C7869) * C92078) *
                          C92212) *
                         C14805) *
                        C92110 * C800)) /
                      (p * q * std::sqrt(p + q));
    d2eeyy[19] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92137 * C308) * C181 +
             (C307 * C182 + C92137 * C394) * C92099) *
                C92323 +
            (C11423 + C11440) * C92212) *
               C92346 +
           ((C401 + C417) * C92323 + C13308 * C92212) * C92347 +
           C20120 * C14805) *
              C93 -
          (((C3021 + C3013) * C92212 + (C419 + C407) * C92323) * C14805 +
           ((C3020 + C3010) * C92212 + (C418 + C404) * C92323) * C92347 +
           (C13310 * C92212 + (C417 + C401) * C92323) * C92346) *
              C94 +
          (C20120 * C92346 +
           (C422 * C92323 + (C3013 + C3021) * C92212) * C92347 +
           ((C412 + C420) * C92323 +
            ((C307 * C2711 + C92137 * C2919) * C181 +
             (C307 * C2781 + C92137 * C3005) * C92099) *
                C92212) *
               C14805) *
              C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C307 * C107 + C92137 * C308) * C884 +
            (C307 * C182 + C92137 * C394) * C798 -
            (C307 * C805 + C92137 * C1022) * C885 -
            (C307 * C890 + C92137 * C1085) * C799 +
            (C307 * C806 + C92137 * C1023) * C886 +
            (C307 * C891 + C92137 * C1086) * C800) *
               C92323 +
           (C11327 * C884 + C11436 * C798 - C14200 * C885 - C14318 * C799 +
            (C307 * C5772 + C92137 * C6042) * C886 +
            (C307 * C5870 + C92137 * C6128) * C800) *
               C92212) *
              C92346 +
          ((C337 * C884 + C413 * C798 - C2212 * C885 - C2300 * C799 +
            (C307 * C807 + C92137 * C1024) * C886 +
            (C307 * C892 + C92137 * C1088) * C800) *
               C92323 +
           (C2934 * C884 + C3016 * C798 - C12183 * C885 - C12296 * C799 +
            (C307 * C5771 + C92137 * C6041) * C886 +
            (C307 * C5869 + C92137 * C6127) * C800) *
               C92212) *
              C92347 +
          ((C339 * C884 + C414 * C798 - C2214 * C885 - C2301 * C799 +
            (C307 * C808 + C92137 * C1025) * C886 +
            (C307 * C893 + C92137 * C1090) * C800) *
               C92323 +
           (C2936 * C884 + C3017 * C798 -
            (C307 * C3433 + C92137 * C3663) * C885 -
            (C307 * C3515 + C92137 * C3737) * C799 +
            (C307 * C7566 + C92137 * C7868) * C886 +
            (C307 * C7668 + C92137 * C7986) * C800) *
               C92212) *
              C14805) *
         C92078 * C92110) /
            (p * q * std::sqrt(p + q));
    d2eeyz[19] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92137 * C308) * C244 +
             (C307 * C245 + C92137 * C474) * C92110) *
                C92323 +
            (C11327 * C244 + C11531 * C92110) * C92212) *
               C92346 +
           ((C481 + C497) * C92323 + (C9910 + C9911) * C92212) * C92347 +
           C20200 * C14805) *
              C92099 * C93 -
          (((C20197 + C20198) * C92212 + (C499 + C487) * C92323) * C14805 +
           ((C9918 + C9919) * C92212 + (C498 + C484) * C92323) * C92347 +
           ((C9911 + C9910) * C92212 + (C497 + C481) * C92323) * C92346) *
              C92099 * C94 +
          (C20200 * C92346 +
           (C502 * C92323 + (C20198 + C20197) * C92212) * C92347 +
           ((C492 + C500) * C92323 +
            ((C307 * C2711 + C92137 * C2919) * C244 +
             (C307 * C2851 + C92137 * C3087) * C92110) *
                C92212) *
               C14805) *
              C92099 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92137 * C308) * C244 +
             (C307 * C245 + C92137 * C474) * C92110) *
                C92323 +
            (C11327 * C244 + C11531 * C92110) * C92212) *
               C92346 +
           ((C481 + C497) * C92323 + (C9910 + C9911) * C92212) * C92347 +
           C20200 * C14805) *
              C798 -
          ((((C307 * C3589 + C92137 * C3807) * C92110 +
             (C307 * C3433 + C92137 * C3663) * C244) *
                C92212 +
            (C2386 + C2378) * C92323) *
               C14805 +
           ((C12408 + C12404) * C92212 + (C2387 + C2381) * C92323) * C92347 +
           ((C14426 * C92110 + C14200 * C244) * C92212 +
            ((C307 * C956 + C92137 * C1146) * C92110 +
             (C307 * C805 + C92137 * C1022) * C244) *
                C92323) *
               C92346) *
              C799 +
          ((((C307 * C806 + C92137 * C1023) * C244 +
             (C307 * C957 + C92137 * C1147) * C92110) *
                C92323 +
            ((C307 * C5772 + C92137 * C6042) * C244 +
             (C307 * C5958 + C92137 * C6207) * C92110) *
                C92212) *
               C92346 +
           (((C307 * C807 + C92137 * C1024) * C244 +
             (C307 * C958 + C92137 * C1148) * C92110) *
                C92323 +
            ((C307 * C5771 + C92137 * C6041) * C244 +
             (C307 * C5957 + C92137 * C6210) * C92110) *
                C92212) *
               C92347 +
           (((C307 * C808 + C92137 * C1025) * C244 +
             (C307 * C959 + C92137 * C1149) * C92110) *
                C92323 +
            ((C307 * C7566 + C92137 * C7868) * C244 +
             (C307 * C7768 + C92137 * C8094) * C92110) *
                C92212) *
               C14805) *
              C800) *
         C92078) /
            (p * q * std::sqrt(p + q));
    d2eezx[19] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C20274 * C107 + C92323 * C555 + C20275 * C1389 + C92212 * C1788) *
               C104 +
           (C20274 * C117 + C92323 * C561 + C20275 * C1397 + C92212 * C1796) *
               C93 -
           (C20301 + C20302) * C105 - (C20303 + C20304) * C94 + C20313 * C106 +
           C20314 * C95) *
              C92346 +
          ((C20302 + C20301) * C104 + (C20304 + C20303) * C93 -
           (C20306 + C20305) * C105 - (C20308 + C20307) * C94 +
           (C20309 + C20310) * C106 + (C20311 + C20312) * C95) *
              C92347 +
          (C20313 * C104 + C20314 * C93 - (C20310 + C20309) * C105 -
           (C20312 + C20311) * C94 +
           (C20274 * C111 + C92323 * C559 + C20275 * C2711 + C92212 * C3175) *
               C106 +
           (C20274 * C122 + C92323 * C565 + C20275 * C2713 + C92212 * C3176) *
               C95) *
              C14805) *
         C92137 * C92110 * C92099) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C20274 * C107 + C92323 * C555 + C20275 * C1389 + C92212 * C1788) *
                C801 +
            (C20274 * C117 + C92323 * C561 + C20275 * C1397 + C92212 * C1796) *
                C92078) *
               C92346 +
           ((C20302 + C20301) * C801 + (C20304 + C20303) * C92078) * C92347 +
           (C20313 * C801 + C20314 * C92078) * C14805) *
              C92137 * C92110 * C798 -
          (((C20275 * C3441 + C92212 * C3881 + C20274 * C811 + C92323 * C1210) *
                C92078 +
            (C20275 * C3433 + C92212 * C3877 + C20274 * C803 + C92323 * C1202) *
                C801) *
               C14805 +
           ((C20275 * C3440 + C92212 * C3880 + C20274 * C812 + C92323 * C1211) *
                C92078 +
            (C20275 * C3432 + C92212 * C3876 + C20274 * C804 + C92323 * C1203) *
                C801) *
               C92347 +
           ((C20275 * C3439 + C92212 * C3879 + C20274 * C813 + C92323 * C1212) *
                C92078 +
            (C20275 * C3431 + C92212 * C3875 + C20274 * C805 + C92323 * C1204) *
                C801) *
               C92346) *
              C92137 * C92110 * C799 +
          (((C20274 * C806 + C92323 * C1205 + C20275 * C5772 + C92212 * C6288) *
                C801 +
            (C20274 * C822 + C92323 * C1213 + C20275 * C5778 + C92212 * C6294) *
                C92078) *
               C92346 +
           ((C20274 * C807 + C92323 * C1206 + C20275 * C5771 + C92212 * C6287) *
                C801 +
            (C20274 * C823 + C92323 * C1214 + C20275 * C5777 + C92212 * C6293) *
                C92078) *
               C92347 +
           ((C20274 * C808 + C92323 * C1207 + C20275 * C7566 + C92212 * C8202) *
                C801 +
            (C20274 * C824 + C92323 * C1215 + C20275 * C7568 + C92212 * C8203) *
                C92078) *
               C14805) *
              C92137 * C92110 * C800)) /
            (p * q * std::sqrt(p + q));
    d2eezy[19] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C20274 * C107 + C92323 * C555 + C20275 * C1389 + C92212 * C1788) *
                C181 +
            (C20274 * C182 + C92323 * C641 + C20275 * C1471 + C92212 * C1854) *
                C92099) *
               C92346 +
           ((C20302 + C20301) * C181 + (C20402 + C20403) * C92099) * C92347 +
           C20410 * C14805) *
              C92137 * C93 -
          (((C20406 + C20407) * C92099 + (C20310 + C20309) * C181) * C14805 +
           ((C20405 + C20404) * C92099 + (C20306 + C20305) * C181) * C92347 +
           ((C20403 + C20402) * C92099 + (C20301 + C20302) * C181) * C92346) *
              C92137 * C94 +
          (C20410 * C92346 +
           ((C20309 + C20310) * C181 + (C20407 + C20406) * C92099) * C92347 +
           ((C20274 * C111 + C92323 * C559 + C20275 * C2711 + C92212 * C3175) *
                C181 +
            (C20274 * C186 + C92323 * C645 + C20275 * C2781 + C92212 * C3261) *
                C92099) *
               C14805) *
              C92137 * C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C20274 * C107 + C92323 * C555 + C20275 * C1389 + C92212 * C1788) *
               C884 +
           (C20274 * C182 + C92323 * C641 + C20275 * C1471 + C92212 * C1854) *
               C798 -
           (C20275 * C3431 + C92212 * C3875 + C20274 * C805 + C92323 * C1204) *
               C885 -
           (C20275 * C3513 + C92212 * C3949 + C20274 * C890 + C92323 * C1267) *
               C799 +
           (C20274 * C806 + C92323 * C1205 + C20275 * C5772 + C92212 * C6288) *
               C886 +
           (C20274 * C891 + C92323 * C1268 + C20275 * C5870 + C92212 * C6374) *
               C800) *
              C92346 +
          ((C20302 + C20301) * C884 + (C20402 + C20403) * C798 -
           (C20275 * C3432 + C92212 * C3876 + C20274 * C804 + C92323 * C1203) *
               C885 -
           (C20275 * C3514 + C92212 * C3950 + C20274 * C889 + C92323 * C1269) *
               C799 +
           (C20274 * C807 + C92323 * C1206 + C20275 * C5771 + C92212 * C6287) *
               C886 +
           (C20274 * C892 + C92323 * C1270 + C20275 * C5869 + C92212 * C6373) *
               C800) *
              C92347 +
          (C20313 * C884 + C20408 * C798 -
           (C20275 * C3433 + C92212 * C3877 + C20274 * C803 + C92323 * C1202) *
               C885 -
           (C20275 * C3515 + C92212 * C3951 + C20274 * C888 + C92323 * C1271) *
               C799 +
           (C20274 * C808 + C92323 * C1207 + C20275 * C7566 + C92212 * C8202) *
               C886 +
           (C20274 * C893 + C92323 * C1272 + C20275 * C7668 + C92212 * C8314) *
               C800) *
              C14805) *
         C92137 * C92078 * C92110) /
            (p * q * std::sqrt(p + q));
    d2eezz[19] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C20274 * C107 + C92323 * C555 + C20275 * C1389 + C92212 * C1788) *
                C244 +
            (C20274 * C245 + C92323 * C719 + C20275 * C1540 + C92212 * C1909) *
                C92110) *
               C92346 +
           ((C20302 + C20301) * C244 + (C20498 + C20499) * C92110) * C92347 +
           C20506 * C14805) *
              C92137 * C92099 * C93 -
          (((C20502 + C20503) * C92110 + (C20310 + C20309) * C244) * C14805 +
           ((C20501 + C20500) * C92110 + (C20306 + C20305) * C244) * C92347 +
           ((C20499 + C20498) * C92110 + (C20301 + C20302) * C244) * C92346) *
              C92137 * C92099 * C94 +
          (C20506 * C92346 +
           ((C20309 + C20310) * C244 + (C20503 + C20502) * C92110) * C92347 +
           ((C20274 * C111 + C92323 * C559 + C20275 * C2711 + C92212 * C3175) *
                C244 +
            (C20274 * C249 + C92323 * C723 + C20275 * C2851 + C92212 * C3343) *
                C92110) *
               C14805) *
              C92137 * C92099 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C20274 * C107 + C92323 * C555 + C20275 * C1389 + C92212 * C1788) *
                C244 +
            (C20274 * C245 + C92323 * C719 + C20275 * C1540 + C92212 * C1909) *
                C92110) *
               C92346 +
           ((C20302 + C20301) * C244 + (C20498 + C20499) * C92110) * C92347 +
           C20506 * C14805) *
              C92137 * C798 -
          (((C20275 * C3589 + C92212 * C4021 + C20274 * C954 + C92323 * C1326) *
                C92110 +
            (C20275 * C3433 + C92212 * C3877 + C20274 * C803 + C92323 * C1202) *
                C244) *
               C14805 +
           ((C20275 * C3588 + C92212 * C4020 + C20274 * C955 + C92323 * C1327) *
                C92110 +
            (C20275 * C3432 + C92212 * C3876 + C20274 * C804 + C92323 * C1203) *
                C244) *
               C92347 +
           ((C20275 * C3587 + C92212 * C4019 + C20274 * C956 + C92323 * C1328) *
                C92110 +
            (C20275 * C3431 + C92212 * C3875 + C20274 * C805 + C92323 * C1204) *
                C244) *
               C92346) *
              C92137 * C799 +
          (((C20274 * C806 + C92323 * C1205 + C20275 * C5772 + C92212 * C6288) *
                C244 +
            (C20274 * C957 + C92323 * C1329 + C20275 * C5958 + C92212 * C6455) *
                C92110) *
               C92346 +
           ((C20274 * C807 + C92323 * C1206 + C20275 * C5771 + C92212 * C6287) *
                C244 +
            (C20274 * C958 + C92323 * C1330 + C20275 * C5957 + C92212 * C6457) *
                C92110) *
               C92347 +
           ((C20274 * C808 + C92323 * C1207 + C20275 * C7566 + C92212 * C8202) *
                C244 +
            (C20274 * C959 + C92323 * C1331 + C20275 * C7768 + C92212 * C8423) *
                C92110) *
               C14805) *
              C92137 * C800) *
         C92078) /
            (p * q * std::sqrt(p + q));
    d2eexx[20] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C100 * C107 + C89 * C113 + C101 * C108 + C90 * C114 + C102 * C109 +
            C91 * C115 + C103 * C110 + C92 * C116) *
               C1987 +
           (C100 * C117 + C89 * C125 + C101 * C118 + C90 * C126 + C102 * C119 +
            C91 * C127 + C103 * C120 + C92 * C128) *
               C1983 -
           (C103 * C111 + C92 * C121 + C102 * C110 + C91 * C116 + C101 * C109 +
            C90 * C115 + C100 * C108 + C89 * C114) *
               C1988 -
           (C103 * C122 + C92 * C129 + C102 * C120 + C91 * C128 + C101 * C119 +
            C90 * C127 + C100 * C118 + C89 * C126) *
               C1984) *
              C92137 * C92148 * C92110 * C1985 +
          ((C100 * C804 + C89 * C816 + C101 * C803 + C90 * C815 + C102 * C802 +
            C91 * C814 + C103 * C1989 + C92 * C1990) *
               C1988 -
           ((C103 * C810 + C92 * C826 + C102 * C811 + C91 * C827 + C101 * C812 +
             C90 * C828 + C100 * C813 + C89 * C829) *
                C1983 +
            (C103 * C802 + C92 * C814 + C102 * C803 + C91 * C815 + C101 * C804 +
             C90 * C816 + C100 * C805 + C89 * C817) *
                C1987) +
           (C100 * C812 + C89 * C828 + C101 * C811 + C90 * C827 + C102 * C810 +
            C91 * C826 + C103 * C1991 + C92 * C1992) *
               C1984) *
              C92137 * C92148 * C92110 * C1986)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C92067 * C114) *
                C1987 +
            (C4102 * C117 + C4097 * C125 + C4103 * C118 + C92067 * C126) *
                C1983 -
            (C4103 * C109 + C92067 * C115 + C4102 * C108 + C4097 * C114) *
                C1988 -
            (C4103 * C119 + C92067 * C127 + C4102 * C118 + C4097 * C126) *
                C1984) *
               C4099 +
           ((C4922 + C4923) * C1987 + (C4924 + C4925) * C1983 -
            (C6578 + C6579) * C1988 - (C6580 + C6581) * C1984) *
               C4100 +
           (C4934 * C1987 + C4935 * C1983 - (C6582 + C6583) * C1988 -
            (C6584 + C6585) * C1984) *
               C4101) *
              C92148 * C92110 * C1985 +
          (((C6579 + C6578) * C1988 -
            ((C4925 + C4924) * C1983 + (C4923 + C4922) * C1987) +
            (C6581 + C6580) * C1984) *
               C4099 +
           ((C6583 + C6582) * C1988 -
            ((C4929 + C4928) * C1983 + (C4927 + C4926) * C1987) +
            (C6585 + C6584) * C1984) *
               C4100 +
           ((C4102 * C4881 + C4097 * C4887 + C4103 * C6557 + C92067 * C6558) *
                C1988 -
            ((C4930 + C4931) * C1983 + (C4932 + C4933) * C1987) +
            (C4102 * C4885 + C4097 * C4893 + C4103 * C6559 + C92067 * C6560) *
                C1984) *
               C4101) *
              C92148 * C92110 * C1986)) /
            (p * q * std::sqrt(p + q));
    d2eexy[20] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C100 * C107 + C89 * C113 + C101 * C108 + C90 * C114 + C102 * C109 +
            C91 * C115 + C103 * C110 + C92 * C116) *
               C2059 +
           (C100 * C182 + C89 * C188 + C101 * C183 + C90 * C189 + C102 * C184 +
            C91 * C190 + C103 * C185 + C92 * C191) *
               C1985 -
           (C103 * C802 + C92 * C814 + C102 * C803 + C91 * C815 + C101 * C804 +
            C90 * C816 + C100 * C805 + C89 * C817) *
               C2060 -
           (C103 * C887 + C92 * C895 + C102 * C888 + C91 * C896 + C101 * C889 +
            C90 * C897 + C100 * C890 + C89 * C898) *
               C1986) *
              C92137 * C92148 * C1983 +
          ((C100 * C804 + C89 * C816 + C101 * C803 + C90 * C815 + C102 * C802 +
            C91 * C814 + C103 * C1989 + C92 * C1990) *
               C2060 -
           ((C103 * C186 + C92 * C192 + C102 * C185 + C91 * C191 + C101 * C184 +
             C90 * C190 + C100 * C183 + C89 * C189) *
                C1985 +
            (C103 * C111 + C92 * C121 + C102 * C110 + C91 * C116 + C101 * C109 +
             C90 * C115 + C100 * C108 + C89 * C114) *
                C2059) +
           (C100 * C889 + C89 * C897 + C101 * C888 + C90 * C896 + C102 * C887 +
            C91 * C895 + C103 * C2061 + C92 * C2062) *
               C1986) *
              C92137 * C92148 * C1984) *
         C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C92067 * C114) *
                C2059 +
            (C4102 * C182 + C4097 * C188 + C4103 * C183 + C92067 * C189) *
                C1985 -
            (C4923 + C4922) * C2060 - (C5033 + C5034) * C1986) *
               C4099 +
           ((C4922 + C4923) * C2059 + (C5034 + C5033) * C1985 -
            (C4927 + C4926) * C2060 - (C5036 + C5035) * C1986) *
               C4100 +
           (C4934 * C2059 + C5039 * C1985 - (C4932 + C4933) * C2060 -
            (C5038 + C5037) * C1986) *
               C4101) *
              C92148 * C1983 +
          (((C6579 + C6578) * C2060 -
            ((C4103 * C184 + C92067 * C190 + C4102 * C183 + C4097 * C189) *
                 C1985 +
             (C4103 * C109 + C92067 * C115 + C4102 * C108 + C4097 * C114) *
                 C2059) +
            (C6694 + C6695) * C1986) *
               C4099 +
           ((C6583 + C6582) * C2060 -
            ((C6695 + C6694) * C1985 + (C6578 + C6579) * C2059) +
            (C6696 + C6697) * C1986) *
               C4100 +
           ((C4102 * C4881 + C4097 * C4887 + C4103 * C6557 + C92067 * C6558) *
                C2060 -
            ((C6697 + C6696) * C1985 + (C6582 + C6583) * C2059) +
            (C4102 * C5013 + C4097 * C5017 + C4103 * C6683 + C92067 * C6684) *
                C1986) *
               C4101) *
              C92148 * C1984) *
         C92110) /
            (p * q * std::sqrt(p + q));
    d2eexz[20] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C100 * C107 + C89 * C113 + C101 * C108 + C90 * C114 + C102 * C109 +
             C91 * C115 + C103 * C110 + C92 * C116) *
                C244 +
            (C100 * C245 + C89 * C251 + C101 * C246 + C90 * C252 + C102 * C247 +
             C91 * C253 + C103 * C248 + C92 * C254) *
                C92110) *
               C92137 * C92148 * C1985 -
           ((C103 * C953 + C92 * C961 + C102 * C954 + C91 * C962 + C101 * C955 +
             C90 * C963 + C100 * C956 + C89 * C964) *
                C92110 +
            (C103 * C802 + C92 * C814 + C102 * C803 + C91 * C815 + C101 * C804 +
             C90 * C816 + C100 * C805 + C89 * C817) *
                C244) *
               C92137 * C92148 * C1986) *
              C1983 +
          (((C100 * C804 + C89 * C816 + C101 * C803 + C90 * C815 + C102 * C802 +
             C91 * C814 + C103 * C1989 + C92 * C1990) *
                C244 +
            (C100 * C955 + C89 * C963 + C101 * C954 + C90 * C962 + C102 * C953 +
             C91 * C961 + C103 * C2129 + C92 * C2130) *
                C92110) *
               C92137 * C92148 * C1986 -
           ((C103 * C249 + C92 * C255 + C102 * C248 + C91 * C254 + C101 * C247 +
             C90 * C253 + C100 * C246 + C89 * C252) *
                C92110 +
            (C103 * C111 + C92 * C121 + C102 * C110 + C91 * C116 + C101 * C109 +
             C90 * C115 + C100 * C108 + C89 * C114) *
                C244) *
               C92137 * C92148 * C1985) *
              C1984)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C92067 * C114) *
                 C244 +
             (C4102 * C245 + C4097 * C251 + C4103 * C246 + C92067 * C252) *
                 C92110) *
                C4099 +
            ((C4922 + C4923) * C244 + (C5135 + C5136) * C92110) * C4100 +
            C5143 * C4101) *
               C92148 * C1985 -
           (((C5139 + C5140) * C92110 + (C4932 + C4933) * C244) * C4101 +
            ((C5138 + C5137) * C92110 + (C4927 + C4926) * C244) * C4100 +
            ((C5136 + C5135) * C92110 + (C4923 + C4922) * C244) * C4099) *
               C92148 * C1986) *
              C1983 +
          ((((C6579 + C6578) * C244 + (C6806 + C6807) * C92110) * C4099 +
            ((C6583 + C6582) * C244 + (C6808 + C6809) * C92110) * C4100 +
            ((C4102 * C4881 + C4097 * C4887 + C4103 * C6557 + C92067 * C6558) *
                 C244 +
             (C4102 * C5113 + C4097 * C5117 + C4103 * C6795 + C92067 * C6796) *
                 C92110) *
                C4101) *
               C92148 * C1986 -
           (((C6809 + C6808) * C92110 + (C6582 + C6583) * C244) * C4101 +
            ((C6807 + C6806) * C92110 + (C6578 + C6579) * C244) * C4100 +
            ((C4103 * C247 + C92067 * C253 + C4102 * C246 + C4097 * C252) *
                 C92110 +
             (C4103 * C109 + C92067 * C115 + C4102 * C108 + C4097 * C114) *
                 C244) *
                C4099) *
               C92148 * C1985) *
              C1984)) /
            (p * q * std::sqrt(p + q));
    d2eeyx[20] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C307 * C107 + C92137 * C308) * C1987 +
            (C307 * C117 + C92137 * C314) * C1983 - C337 * C1988 -
            C338 * C1984) *
               C92148 * C89 +
           (C337 * C1987 + C338 * C1983 - C339 * C1988 - C340 * C1984) *
               C92148 * C90 +
           (C339 * C1987 + C340 * C1983 - C341 * C1988 - C342 * C1984) *
               C92148 * C91 +
           (C341 * C1987 + C342 * C1983 - C343 * C1988 - C344 * C1984) *
               C92148 * C92) *
              C92110 * C1985 +
          ((C2212 * C1988 -
            ((C307 * C813 + C92137 * C1030) * C1983 +
             (C307 * C805 + C92137 * C1022) * C1987) +
            C2213 * C1984) *
               C92148 * C89 +
           (C2214 * C1988 - (C2213 * C1983 + C2212 * C1987) + C2215 * C1984) *
               C92148 * C90 +
           (C2216 * C1988 - (C2215 * C1983 + C2214 * C1987) + C2217 * C1984) *
               C92148 * C91 +
           ((C307 * C1989 + C92137 * C2197) * C1988 -
            (C2217 * C1983 + C2216 * C1987) +
            (C307 * C1991 + C92137 * C2198) * C1984) *
               C92148 * C92) *
              C92110 * C1986)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C4326 * C107 + C4099 * C308 + C4327 * C805 + C4100 * C1022 +
             C4328 * C806 + C4101 * C1023) *
                C1987 +
            (C4326 * C117 + C4099 * C314 + C4327 * C813 + C4100 * C1030 +
             C4328 * C822 + C4101 * C1031) *
                C1983 -
            (C4354 + C4355 + C4356) * C1988 - (C4357 + C4358 + C4359) * C1984) *
               C92148 * C4097 +
           ((C4356 + C4355 + C4354) * C1987 + (C4359 + C4358 + C4357) * C1983 -
            (C4362 + C4361 + C4360) * C1988 - (C4365 + C4364 + C4363) * C1984) *
               C92148 * C92067) *
              C92110 * C1985 +
          (((C6922 + C6923 + C6924) * C1988 -
            ((C4328 * C4886 + C4101 * C5222 + C4327 * C822 + C4100 * C1031 +
              C4326 * C813 + C4099 * C1030) *
                 C1983 +
             (C4328 * C4882 + C4101 * C5218 + C4327 * C806 + C4100 * C1023 +
              C4326 * C805 + C4099 * C1022) *
                 C1987) +
            (C6925 + C6926 + C6927) * C1984) *
               C92148 * C4097 +
           ((C4326 * C803 + C4099 * C1020 + C4327 * C808 + C4100 * C1025 +
             C4328 * C6557 + C4101 * C6907) *
                C1988 -
            ((C6927 + C6926 + C6925) * C1983 +
             (C6924 + C6923 + C6922) * C1987) +
            (C4326 * C811 + C4099 * C1028 + C4327 * C824 + C4100 * C1033 +
             C4328 * C6559 + C4101 * C6908) *
                C1984) *
               C92148 * C92067) *
              C92110 * C1986)) /
            (p * q * std::sqrt(p + q));
    d2eeyy[20] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C307 * C107 + C92137 * C308) * C2059 +
            (C307 * C182 + C92137 * C394) * C1985 -
            (C307 * C805 + C92137 * C1022) * C2060 -
            (C307 * C890 + C92137 * C1085) * C1986) *
               C92148 * C89 +
           (C2285 + C2286 - C2287 - C2303) * C92148 * C90 +
           (C2290 + C2291 - C2292 - C2304) * C92148 * C91 +
           (C2295 + C2296 - C2297 - C2305) * C92148 * C92) *
              C1983 +
          ((C2287 - (C2286 + C2285) + C2303) * C92148 * C89 +
           (C2292 - (C2291 + C2290) + C2304) * C92148 * C90 +
           (C2297 - (C2296 + C2295) + C2305) * C92148 * C91 +
           ((C307 * C1989 + C92137 * C2197) * C2060 -
            (C416 * C1985 + C343 * C2059) +
            (C307 * C2061 + C92137 * C2283) * C1986) *
               C92148 * C92) *
              C1984) *
         C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C4326 * C107 + C4099 * C308 + C4327 * C805 + C4100 * C1022 +
             C4328 * C806 + C4101 * C1023) *
                C2059 +
            (C4326 * C182 + C4099 * C394 + C4327 * C890 + C4100 * C1085 +
             C4328 * C891 + C4101 * C1086) *
                C1985 -
            (C4328 * C4882 + C4101 * C5218 + C4327 * C806 + C4100 * C1023 +
             C4326 * C805 + C4099 * C1022) *
                C2060 -
            (C4328 * C5012 + C4101 * C5299 + C4327 * C891 + C4100 * C1086 +
             C4326 * C890 + C4099 * C1085) *
                C1986) *
               C92148 * C4097 +
           ((C4356 + C4355 + C4354) * C2059 + (C4452 + C4453 + C4454) * C1985 -
            (C6924 + C6923 + C6922) * C2060 - (C7033 + C7034 + C7035) * C1986) *
               C92148 * C92067) *
              C1983 +
          (((C6922 + C6923 + C6924) * C2060 -
            ((C4454 + C4453 + C4452) * C1985 +
             (C4354 + C4355 + C4356) * C2059) +
            (C7035 + C7034 + C7033) * C1986) *
               C92148 * C4097 +
           ((C4326 * C803 + C4099 * C1020 + C4327 * C808 + C4100 * C1025 +
             C4328 * C6557 + C4101 * C6907) *
                C2060 -
            ((C4455 + C4456 + C4457) * C1985 +
             (C4362 + C4361 + C4360) * C2059) +
            (C4326 * C888 + C4099 * C1089 + C4327 * C893 + C4100 * C1090 +
             C4328 * C6683 + C4101 * C7025) *
                C1986) *
               C92148 * C92067) *
              C1984) *
         C92110) /
            (p * q * std::sqrt(p + q));
    d2eeyz[20] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92137 * C308) * C244 +
             (C307 * C245 + C92137 * C474) * C92110) *
                C92148 * C89 +
            (C481 + C497) * C92148 * C90 + C503 * C91 + C504 * C92) *
               C1985 -
           ((C2385 + C2375) * C92148 * C92 + (C2386 + C2378) * C92148 * C91 +
            (C2387 + C2381) * C92148 * C90 +
            ((C307 * C956 + C92137 * C1146) * C92110 +
             (C307 * C805 + C92137 * C1022) * C244) *
                C92148 * C89) *
               C1986) *
              C1983 +
          (((C2381 + C2387) * C92148 * C89 + (C2378 + C2386) * C92148 * C90 +
            (C2375 + C2385) * C92148 * C91 +
            ((C307 * C1989 + C92137 * C2197) * C244 +
             (C307 * C2129 + C92137 * C2371) * C92110) *
                C92148 * C92) *
               C1986 -
           ((C500 + C492) * C92148 * C92 + (C499 + C487) * C92148 * C91 +
            (C498 + C484) * C92148 * C90 + (C497 + C481) * C92148 * C89) *
               C1985) *
              C1984)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4326 * C107 + C4099 * C308 + C4327 * C805 + C4100 * C1022 +
              C4328 * C806 + C4101 * C1023) *
                 C244 +
             (C4326 * C245 + C4099 * C474 + C4327 * C956 + C4100 * C1146 +
              C4328 * C957 + C4101 * C1147) *
                 C92110) *
                C92148 * C4097 +
            ((C4356 + C4355 + C4354) * C244 +
             (C4544 + C4545 + C4546) * C92110) *
                C92148 * C92067) *
               C1985 -
           (((C7141 + C7142 + C7143) * C92110 +
             (C6924 + C6923 + C6922) * C244) *
                C92148 * C92067 +
            ((C4328 * C5114 + C4101 * C5378 + C4327 * C957 + C4100 * C1147 +
              C4326 * C956 + C4099 * C1146) *
                 C92110 +
             (C4328 * C4882 + C4101 * C5218 + C4327 * C806 + C4100 * C1023 +
              C4326 * C805 + C4099 * C1022) *
                 C244) *
                C92148 * C4097) *
               C1986) *
              C1983 +
          ((((C6922 + C6923 + C6924) * C244 +
             (C7143 + C7142 + C7141) * C92110) *
                C92148 * C4097 +
            ((C4326 * C803 + C4099 * C1020 + C4327 * C808 + C4100 * C1025 +
              C4328 * C6557 + C4101 * C6907) *
                 C244 +
             (C4326 * C954 + C4099 * C1144 + C4327 * C959 + C4100 * C1149 +
              C4328 * C6795 + C4101 * C7133) *
                 C92110) *
                C92148 * C92067) *
               C1986 -
           (((C4547 + C4548 + C4549) * C92110 +
             (C4362 + C4361 + C4360) * C244) *
                C92148 * C92067 +
            ((C4546 + C4545 + C4544) * C92110 +
             (C4354 + C4355 + C4356) * C244) *
                C92148 * C4097) *
               C1985) *
              C1984)) /
            (p * q * std::sqrt(p + q));
    d2eezx[20] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92148 * C555) * C1987 +
            (C554 * C117 + C92148 * C561) * C1983 - C584 * C1988 -
            C585 * C1984) *
               C89 +
           (C584 * C1987 + C585 * C1983 - C586 * C1988 - C587 * C1984) * C90 +
           (C586 * C1987 + C587 * C1983 - C588 * C1988 - C589 * C1984) * C91 +
           (C588 * C1987 + C589 * C1983 - C590 * C1988 - C591 * C1984) * C92) *
              C92137 * C92110 * C1985 +
          ((C2468 * C1988 -
            ((C554 * C813 + C92148 * C1212) * C1983 +
             (C554 * C805 + C92148 * C1204) * C1987) +
            C2469 * C1984) *
               C89 +
           (C2470 * C1988 - (C2469 * C1983 + C2468 * C1987) + C2471 * C1984) *
               C90 +
           (C2472 * C1988 - (C2471 * C1983 + C2470 * C1987) + C2473 * C1984) *
               C91 +
           ((C554 * C1989 + C92148 * C2453) * C1988 -
            (C2473 * C1983 + C2472 * C1987) +
            (C554 * C1991 + C92148 * C2454) * C1984) *
               C92) *
              C92137 * C92110 * C1986)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92148 * C555) * C1987 +
             (C554 * C117 + C92148 * C561) * C1983 - C584 * C1988 -
             C585 * C1984) *
                C4097 +
            (C584 * C1987 + C585 * C1983 - C586 * C1988 - C587 * C1984) *
                C92067) *
               C4099 +
           ((C7244 + C7245 - C7246 - C7247) * C4097 +
            (C7248 + C7249 - C7250 - C7251) * C92067) *
               C4100 +
           ((C7252 + C7253 - C7254 - C7255) * C4097 +
            (C7256 + C7257 - C7258 - C7259) * C92067) *
               C4101) *
              C92110 * C1985 +
          (((C7246 - (C7245 + C7244) + C7247) * C4097 +
            (C7250 - (C7249 + C7248) + C7251) * C92067) *
               C4099 +
           ((C7254 - (C7253 + C7252) + C7255) * C4097 +
            (C7258 - (C7257 + C7256) + C7259) * C92067) *
               C4100 +
           ((C5490 * C1988 - (C5491 * C1983 + C5492 * C1987) + C5489 * C1984) *
                C4097 +
            ((C554 * C6557 + C92148 * C7241) * C1988 -
             (C5489 * C1983 + C5490 * C1987) +
             (C554 * C6559 + C92148 * C7242) * C1984) *
                C92067) *
               C4101) *
              C92110 * C1986)) /
            (p * q * std::sqrt(p + q));
    d2eezy[20] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92148 * C555) * C2059 +
            (C554 * C182 + C92148 * C641) * C1985 -
            (C554 * C805 + C92148 * C1204) * C2060 -
            (C554 * C890 + C92148 * C1267) * C1986) *
               C89 +
           (C2541 + C2542 - C2543 - C2559) * C90 +
           (C2546 + C2547 - C2548 - C2560) * C91 +
           (C2551 + C2552 - C2553 - C2561) * C92) *
              C92137 * C1983 +
          ((C2543 - (C2542 + C2541) + C2559) * C89 +
           (C2548 - (C2547 + C2546) + C2560) * C90 +
           (C2553 - (C2552 + C2551) + C2561) * C91 +
           ((C554 * C1989 + C92148 * C2453) * C2060 -
            (C663 * C1985 + C590 * C2059) +
            (C554 * C2061 + C92148 * C2539) * C1986) *
               C92) *
              C92137 * C1984) *
         C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92148 * C555) * C2059 +
             (C554 * C182 + C92148 * C641) * C1985 - C5484 * C2060 -
             C5591 * C1986) *
                C4097 +
            (C2541 + C2542 - C2543 - C2559) * C92067) *
               C4099 +
           ((C5484 * C2059 + C5591 * C1985 - C5486 * C2060 - C5592 * C1986) *
                C4097 +
            (C7359 + C7360 - C7361 - C7362) * C92067) *
               C4100 +
           ((C5486 * C2059 + C5592 * C1985 - C5492 * C2060 - C5593 * C1986) *
                C4097 +
            (C7363 + C7364 - C7365 - C7366) * C92067) *
               C4101) *
              C1983 +
          (((C2543 - (C2542 + C2541) + C2559) * C4097 +
            (C2548 - (C2547 + C2546) + C2560) * C92067) *
               C4099 +
           ((C7361 - (C7360 + C7359) + C7362) * C4097 +
            (C4634 * C2060 - (C2557 * C1985 + C2470 * C2059) + C4721 * C1986) *
                C92067) *
               C4100 +
           ((C7365 - (C7364 + C7363) + C7366) * C4097 +
            ((C554 * C6557 + C92148 * C7241) * C2060 -
             (C4721 * C1985 + C4634 * C2059) +
             (C554 * C6683 + C92148 * C7357) * C1986) *
                C92067) *
               C4101) *
              C1984) *
         C92110) /
            (p * q * std::sqrt(p + q));
    d2eezz[20] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92148 * C555) * C244 +
             (C554 * C245 + C92148 * C719) * C92110) *
                C89 +
            (C726 + C742) * C90 + C746 * C91 + C747 * C92) *
               C92137 * C1985 -
           ((C2641 + C2631) * C92 + (C2642 + C2634) * C91 +
            (C2643 + C2637) * C90 +
            ((C554 * C956 + C92148 * C1328) * C92110 +
             (C554 * C805 + C92148 * C1204) * C244) *
                C89) *
               C92137 * C1986) *
              C1983 +
          (((C2637 + C2643) * C89 + (C2634 + C2642) * C90 +
            (C2631 + C2641) * C91 +
            ((C554 * C1989 + C92148 * C2453) * C244 +
             (C554 * C2129 + C92148 * C2627) * C92110) *
                C92) *
               C92137 * C1986 -
           ((C745 + C737) * C92 + (C744 + C732) * C91 + (C743 + C729) * C90 +
            (C742 + C726) * C89) *
               C92137 * C1985) *
              C1984)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C554 * C107 + C92148 * C555) * C244 +
              (C554 * C245 + C92148 * C719) * C92110) *
                 C4097 +
             (C726 + C742) * C92067) *
                C4099 +
            ((C5673 + C5691) * C4097 + C7466 * C92067) * C4100 +
            C5697 * C4101) *
               C1985 -
           (((C5693 + C5682) * C92067 + (C5694 + C5685) * C4097) * C4101 +
            (C7467 * C92067 + (C5692 + C5676) * C4097) * C4100 +
            (C7468 * C92067 + (C5691 + C5673) * C4097) * C4099) *
               C1986) *
              C1983 +
          (((C7466 * C4097 + (C2634 + C2642) * C92067) * C4099 +
            (C5679 * C4097 + (C4803 + C4807) * C92067) * C4100 +
            ((C5682 + C5693) * C4097 +
             ((C554 * C6557 + C92148 * C7241) * C244 +
              (C554 * C6795 + C92148 * C7464) * C92110) *
                 C92067) *
                C4101) *
               C1986 -
           (((C4807 + C4803) * C92067 + C7467 * C4097) * C4101 +
            ((C2642 + C2634) * C92067 + C7468 * C4097) * C4100 +
            ((C743 + C729) * C92067 + (C742 + C726) * C4097) * C4099) *
               C1985) *
              C1984)) /
            (p * q * std::sqrt(p + q));
    d2eexx[21] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C100 * C107 + C89 * C113 + C101 * C108 + C90 * C114 + C102 * C109 +
             C91 * C115 + C103 * C110 + C92 * C116) *
                C801 +
            (C100 * C117 + C89 * C125 + C101 * C118 + C90 * C126 + C102 * C119 +
             C91 * C127 + C103 * C120 + C92 * C128) *
                C92078) *
               C92137 * C92148 * C2709 -
           ((C103 * C1394 + C92 * C1410 + C102 * C1395 + C91 * C1411 +
             C101 * C1396 + C90 * C1412 + C100 * C1397 + C89 * C1413) *
                C92078 +
            (C103 * C1386 + C92 * C1398 + C102 * C1387 + C91 * C1399 +
             C101 * C1388 + C90 * C1400 + C100 * C1389 + C89 * C1401) *
                C801) *
               C92137 * C92148 * C2710) *
              C1985 +
          (((C100 * C3431 + C89 * C3435 + C101 * C3432 + C90 * C3436 +
             C102 * C3433 + C91 * C3437 + C103 * C3434 + C92 * C3438) *
                C801 +
            (C100 * C3439 + C89 * C3443 + C101 * C3440 + C90 * C3444 +
             C102 * C3441 + C91 * C3445 + C103 * C3442 + C92 * C3446) *
                C92078) *
               C92137 * C92148 * C2710 -
           ((C103 * C810 + C92 * C826 + C102 * C811 + C91 * C827 + C101 * C812 +
             C90 * C828 + C100 * C813 + C89 * C829) *
                C92078 +
            (C103 * C802 + C92 * C814 + C102 * C803 + C91 * C815 + C101 * C804 +
             C90 * C816 + C100 * C805 + C89 * C817) *
                C801) *
               C92137 * C92148 * C2709) *
              C1986)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C92067 * C114) *
                 C801 +
             (C4102 * C117 + C4097 * C125 + C4103 * C118 + C92067 * C126) *
                 C92078) *
                C4099 +
            ((C4922 + C4923) * C801 + (C4924 + C4925) * C92078) * C4100 +
            C4938 * C4101) *
               C92148 * C2709 -
           (((C8561 + C8562) * C92078 + (C8563 + C8564) * C801) * C4101 +
            ((C8565 + C8566) * C92078 + (C8567 + C8568) * C801) * C4100 +
            ((C4103 * C1396 + C92067 * C1412 + C4102 * C1397 + C4097 * C1413) *
                 C92078 +
             (C4103 * C1388 + C92067 * C1400 + C4102 * C1389 + C4097 * C1401) *
                 C801) *
                C4099) *
               C92148 * C2710) *
              C1985 +
          ((((C8568 + C8567) * C801 + (C8566 + C8565) * C92078) * C4099 +
            ((C8564 + C8563) * C801 + (C8562 + C8561) * C92078) * C4100 +
            ((C4102 * C8536 + C4097 * C8538 + C4103 * C8537 + C92067 * C8539) *
                 C801 +
             (C4102 * C8540 + C4097 * C8542 + C4103 * C8541 + C92067 * C8543) *
                 C92078) *
                C4101) *
               C92148 * C2710 -
           (((C4930 + C4931) * C92078 + (C4932 + C4933) * C801) * C4101 +
            ((C4929 + C4928) * C92078 + (C4927 + C4926) * C801) * C4100 +
            ((C4925 + C4924) * C92078 + (C4923 + C4922) * C801) * C4099) *
               C92148 * C2709) *
              C1986)) /
            (p * q * std::sqrt(p + q));
    d2eexy[21] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C100 * C107 + C89 * C113 + C101 * C108 + C90 * C114 + C102 * C109 +
            C91 * C115 + C103 * C110 + C92 * C116) *
               C2059 +
           (C100 * C182 + C89 * C188 + C101 * C183 + C90 * C189 + C102 * C184 +
            C91 * C190 + C103 * C185 + C92 * C191) *
               C1985 -
           (C103 * C802 + C92 * C814 + C102 * C803 + C91 * C815 + C101 * C804 +
            C90 * C816 + C100 * C805 + C89 * C817) *
               C2060 -
           (C103 * C887 + C92 * C895 + C102 * C888 + C91 * C896 + C101 * C889 +
            C90 * C897 + C100 * C890 + C89 * C898) *
               C1986) *
              C92137 * C92148 * C92078 * C2709 +
          ((C100 * C3431 + C89 * C3435 + C101 * C3432 + C90 * C3436 +
            C102 * C3433 + C91 * C3437 + C103 * C3434 + C92 * C3438) *
               C2060 -
           ((C103 * C1468 + C92 * C1476 + C102 * C1469 + C91 * C1477 +
             C101 * C1470 + C90 * C1478 + C100 * C1471 + C89 * C1479) *
                C1985 +
            (C103 * C1386 + C92 * C1398 + C102 * C1387 + C91 * C1399 +
             C101 * C1388 + C90 * C1400 + C100 * C1389 + C89 * C1401) *
                C2059) +
           (C100 * C3513 + C89 * C3517 + C101 * C3514 + C90 * C3518 +
            C102 * C3515 + C91 * C3519 + C103 * C3516 + C92 * C3520) *
               C1986) *
              C92137 * C92148 * C92078 * C2710)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C92067 * C114) *
                C2059 +
            (C4102 * C182 + C4097 * C188 + C4103 * C183 + C92067 * C189) *
                C1985 -
            (C4923 + C4922) * C2060 - (C5033 + C5034) * C1986) *
               C4099 +
           ((C4922 + C4923) * C2059 + (C5034 + C5033) * C1985 -
            (C4927 + C4926) * C2060 - (C5036 + C5035) * C1986) *
               C4100 +
           (C4934 * C2059 + C5039 * C1985 - (C4932 + C4933) * C2060 -
            (C5038 + C5037) * C1986) *
               C4101) *
              C92148 * C92078 * C2709 +
          (((C8568 + C8567) * C2060 -
            ((C4103 * C1470 + C92067 * C1478 + C4102 * C1471 + C4097 * C1479) *
                 C1985 +
             (C4103 * C1388 + C92067 * C1400 + C4102 * C1389 + C4097 * C1401) *
                 C2059) +
            (C8679 + C8680) * C1986) *
               C4099 +
           ((C8564 + C8563) * C2060 -
            ((C8680 + C8679) * C1985 + (C8567 + C8568) * C2059) +
            (C8681 + C8682) * C1986) *
               C4100 +
           ((C4102 * C8536 + C4097 * C8538 + C4103 * C8537 + C92067 * C8539) *
                C2060 -
            ((C8682 + C8681) * C1985 + (C8563 + C8564) * C2059) +
            (C4102 * C8666 + C4097 * C8668 + C4103 * C8667 + C92067 * C8669) *
                C1986) *
               C4101) *
              C92148 * C92078 * C2710)) /
            (p * q * std::sqrt(p + q));
    d2eexz[21] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C100 * C107 + C89 * C113 + C101 * C108 + C90 * C114 + C102 * C109 +
            C91 * C115 + C103 * C110 + C92 * C116) *
               C2849 +
           (C100 * C245 + C89 * C251 + C101 * C246 + C90 * C252 + C102 * C247 +
            C91 * C253 + C103 * C248 + C92 * C254) *
               C2709 -
           (C103 * C1386 + C92 * C1398 + C102 * C1387 + C91 * C1399 +
            C101 * C1388 + C90 * C1400 + C100 * C1389 + C89 * C1401) *
               C2850 -
           (C103 * C1537 + C92 * C1545 + C102 * C1538 + C91 * C1546 +
            C101 * C1539 + C90 * C1547 + C100 * C1540 + C89 * C1548) *
               C2710) *
              C92137 * C92148 * C1985 +
          ((C100 * C3431 + C89 * C3435 + C101 * C3432 + C90 * C3436 +
            C102 * C3433 + C91 * C3437 + C103 * C3434 + C92 * C3438) *
               C2850 -
           ((C103 * C953 + C92 * C961 + C102 * C954 + C91 * C962 + C101 * C955 +
             C90 * C963 + C100 * C956 + C89 * C964) *
                C2709 +
            (C103 * C802 + C92 * C814 + C102 * C803 + C91 * C815 + C101 * C804 +
             C90 * C816 + C100 * C805 + C89 * C817) *
                C2849) +
           (C100 * C3587 + C89 * C3591 + C101 * C3588 + C90 * C3592 +
            C102 * C3589 + C91 * C3593 + C103 * C3590 + C92 * C3594) *
               C2710) *
              C92137 * C92148 * C1986) *
         C92078) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C92067 * C114) *
                C2849 +
            (C4102 * C245 + C4097 * C251 + C4103 * C246 + C92067 * C252) *
                C2709 -
            (C4103 * C1388 + C92067 * C1400 + C4102 * C1389 + C4097 * C1401) *
                C2850 -
            (C4103 * C1539 + C92067 * C1547 + C4102 * C1540 + C4097 * C1548) *
                C2710) *
               C4099 +
           ((C4922 + C4923) * C2849 + (C5135 + C5136) * C2709 -
            (C8567 + C8568) * C2850 - (C8793 + C8794) * C2710) *
               C4100 +
           (C4934 * C2849 + C5141 * C2709 - (C8563 + C8564) * C2850 -
            (C8795 + C8796) * C2710) *
               C4101) *
              C92148 * C1985 +
          (((C8568 + C8567) * C2850 -
            ((C5136 + C5135) * C2709 + (C4923 + C4922) * C2849) +
            (C8794 + C8793) * C2710) *
               C4099 +
           ((C8564 + C8563) * C2850 -
            ((C5138 + C5137) * C2709 + (C4927 + C4926) * C2849) +
            (C8796 + C8795) * C2710) *
               C4100 +
           ((C4102 * C8536 + C4097 * C8538 + C4103 * C8537 + C92067 * C8539) *
                C2850 -
            ((C5139 + C5140) * C2709 + (C4932 + C4933) * C2849) +
            (C4102 * C8780 + C4097 * C8782 + C4103 * C8781 + C92067 * C8783) *
                C2710) *
               C4101) *
              C92148 * C1986) *
         C92078) /
            (p * q * std::sqrt(p + q));
    d2eeyx[21] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((((C307 * C107 + C92137 * C308) * C801 +
                       (C307 * C117 + C92137 * C314) * C92078) *
                          C92148 * C89 +
                      (C337 * C801 + C338 * C92078) * C92148 * C90 +
                      (C339 * C801 + C340 * C92078) * C92148 * C91 +
                      (C341 * C801 + C342 * C92078) * C92148 * C92) *
                         C2709 -
                     ((C2939 * C92078 + C2938 * C801) * C92148 * C92 +
                      (C2937 * C92078 + C2936 * C801) * C92148 * C91 +
                      (C2935 * C92078 + C2934 * C801) * C92148 * C90 +
                      ((C307 * C1397 + C92137 * C1614) * C92078 +
                       (C307 * C1389 + C92137 * C1606) * C801) *
                          C92148 * C89) *
                         C2710) *
                        C1985 +
                    ((((C307 * C3431 + C92137 * C3661) * C801 +
                       (C307 * C3439 + C92137 * C3665) * C92078) *
                          C92148 * C89 +
                      ((C307 * C3432 + C92137 * C3662) * C801 +
                       (C307 * C3440 + C92137 * C3666) * C92078) *
                          C92148 * C90 +
                      ((C307 * C3433 + C92137 * C3663) * C801 +
                       (C307 * C3441 + C92137 * C3667) * C92078) *
                          C92148 * C91 +
                      ((C307 * C3434 + C92137 * C3664) * C801 +
                       (C307 * C3442 + C92137 * C3668) * C92078) *
                          C92148 * C92) *
                         C2710 -
                     ((C2217 * C92078 + C2216 * C801) * C92148 * C92 +
                      (C2215 * C92078 + C2214 * C801) * C92148 * C91 +
                      (C2213 * C92078 + C2212 * C801) * C92148 * C90 +
                      ((C307 * C813 + C92137 * C1030) * C92078 +
                       (C307 * C805 + C92137 * C1022) * C801) *
                          C92148 * C89) *
                         C2709) *
                        C1986)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((((C4326 * C107 + C4099 * C308 + C4327 * C805 +
                        C4100 * C1022 + C4328 * C806 + C4101 * C1023) *
                           C801 +
                       (C4326 * C117 + C4099 * C314 + C4327 * C813 +
                        C4100 * C1030 + C4328 * C822 + C4101 * C1031) *
                           C92078) *
                          C92148 * C4097 +
                      ((C4356 + C4355 + C4354) * C801 +
                       (C4359 + C4358 + C4357) * C92078) *
                          C92148 * C92067) *
                         C2709 -
                     (((C7888 + C7887 + C7886) * C92078 +
                       (C7885 + C7884 + C7883) * C801) *
                          C92148 * C92067 +
                      ((C4328 * C5778 + C4101 * C6048 + C4327 * C3439 +
                        C4100 * C3665 + C4326 * C1397 + C4099 * C1614) *
                           C92078 +
                       (C4328 * C5772 + C4101 * C6042 + C4327 * C3431 +
                        C4100 * C3661 + C4326 * C1389 + C4099 * C1606) *
                           C801) *
                          C92148 * C4097) *
                         C2710) *
                        C1985 +
                    ((((C4326 * C3431 + C4099 * C3661 + C4327 * C5772 +
                        C4100 * C6042 + C4328 * C8536 + C4101 * C8894) *
                           C801 +
                       (C4326 * C3439 + C4099 * C3665 + C4327 * C5778 +
                        C4100 * C6048 + C4328 * C8540 + C4101 * C8896) *
                           C92078) *
                          C92148 * C4097 +
                      ((C4326 * C3432 + C4099 * C3662 + C4327 * C5771 +
                        C4100 * C6041 + C4328 * C8537 + C4101 * C8895) *
                           C801 +
                       (C4326 * C3440 + C4099 * C3666 + C4327 * C5777 +
                        C4100 * C6047 + C4328 * C8541 + C4101 * C8897) *
                           C92078) *
                          C92148 * C92067) *
                         C2710 -
                     (((C6927 + C6926 + C6925) * C92078 +
                       (C6924 + C6923 + C6922) * C801) *
                          C92148 * C92067 +
                      ((C4328 * C4886 + C4101 * C5222 + C4327 * C822 +
                        C4100 * C1031 + C4326 * C813 + C4099 * C1030) *
                           C92078 +
                       (C4328 * C4882 + C4101 * C5218 + C4327 * C806 +
                        C4100 * C1023 + C4326 * C805 + C4099 * C1022) *
                           C801) *
                          C92148 * C4097) *
                         C2709) *
                        C1986)) /
                      (p * q * std::sqrt(p + q));
    d2eeyy[21] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C307 * C107 + C92137 * C308) * C2059 +
            (C307 * C182 + C92137 * C394) * C1985 -
            (C307 * C805 + C92137 * C1022) * C2060 -
            (C307 * C890 + C92137 * C1085) * C1986) *
               C92148 * C89 +
           (C2285 + C2286 - C2287 - C2303) * C92148 * C90 +
           (C2290 + C2291 - C2292 - C2304) * C92148 * C91 +
           (C2295 + C2296 - C2297 - C2305) * C92148 * C92) *
              C92078 * C2709 +
          (((C307 * C3431 + C92137 * C3661) * C2060 -
            ((C307 * C1471 + C92137 * C1672) * C1985 +
             (C307 * C1389 + C92137 * C1606) * C2059) +
            (C307 * C3513 + C92137 * C3735) * C1986) *
               C92148 * C89 +
           ((C307 * C3432 + C92137 * C3662) * C2060 -
            (C3016 * C1985 + C2934 * C2059) +
            (C307 * C3514 + C92137 * C3736) * C1986) *
               C92148 * C90 +
           ((C307 * C3433 + C92137 * C3663) * C2060 -
            (C3017 * C1985 + C2936 * C2059) +
            (C307 * C3515 + C92137 * C3737) * C1986) *
               C92148 * C91 +
           ((C307 * C3434 + C92137 * C3664) * C2060 -
            (C3018 * C1985 + C2938 * C2059) +
            (C307 * C3516 + C92137 * C3738) * C1986) *
               C92148 * C92) *
              C92078 * C2710)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C4326 * C107 + C4099 * C308 + C4327 * C805 + C4100 * C1022 +
             C4328 * C806 + C4101 * C1023) *
                C2059 +
            (C4326 * C182 + C4099 * C394 + C4327 * C890 + C4100 * C1085 +
             C4328 * C891 + C4101 * C1086) *
                C1985 -
            (C4328 * C4882 + C4101 * C5218 + C4327 * C806 + C4100 * C1023 +
             C4326 * C805 + C4099 * C1022) *
                C2060 -
            (C4328 * C5012 + C4101 * C5299 + C4327 * C891 + C4100 * C1086 +
             C4326 * C890 + C4099 * C1085) *
                C1986) *
               C92148 * C4097 +
           ((C4356 + C4355 + C4354) * C2059 + (C4452 + C4453 + C4454) * C1985 -
            (C6924 + C6923 + C6922) * C2060 - (C7033 + C7034 + C7035) * C1986) *
               C92148 * C92067) *
              C92078 * C2709 +
          (((C4326 * C3431 + C4099 * C3661 + C4327 * C5772 + C4100 * C6042 +
             C4328 * C8536 + C4101 * C8894) *
                C2060 -
            ((C4328 * C5870 + C4101 * C6128 + C4327 * C3513 + C4100 * C3735 +
              C4326 * C1471 + C4099 * C1672) *
                 C1985 +
             (C4328 * C5772 + C4101 * C6042 + C4327 * C3431 + C4100 * C3661 +
              C4326 * C1389 + C4099 * C1606) *
                 C2059) +
            (C4326 * C3513 + C4099 * C3735 + C4327 * C5870 + C4100 * C6128 +
             C4328 * C8666 + C4101 * C8996) *
                C1986) *
               C92148 * C4097 +
           ((C4326 * C3432 + C4099 * C3662 + C4327 * C5771 + C4100 * C6041 +
             C4328 * C8537 + C4101 * C8895) *
                C2060 -
            ((C7996 + C7995 + C7994) * C1985 +
             (C7885 + C7884 + C7883) * C2059) +
            (C4326 * C3514 + C4099 * C3736 + C4327 * C5869 + C4100 * C6127 +
             C4328 * C8667 + C4101 * C8997) *
                C1986) *
               C92148 * C92067) *
              C92078 * C2710)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[21] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C307 * C107 + C92137 * C308) * C2849 +
            (C307 * C245 + C92137 * C474) * C2709 -
            (C307 * C1389 + C92137 * C1606) * C2850 -
            (C307 * C1540 + C92137 * C1727) * C2710) *
               C92148 * C89 +
           (C3089 + C3090 - C3091 - C3107) * C92148 * C90 +
           (C3094 + C3095 - C3096 - C3108) * C92148 * C91 +
           (C3099 + C3100 - C3101 - C3109) * C92148 * C92) *
              C1985 +
          (((C307 * C3431 + C92137 * C3661) * C2850 -
            ((C307 * C956 + C92137 * C1146) * C2709 +
             (C307 * C805 + C92137 * C1022) * C2849) +
            (C307 * C3587 + C92137 * C3805) * C2710) *
               C92148 * C89 +
           ((C307 * C3432 + C92137 * C3662) * C2850 -
            (C2384 * C2709 + C2212 * C2849) +
            (C307 * C3588 + C92137 * C3806) * C2710) *
               C92148 * C90 +
           ((C307 * C3433 + C92137 * C3663) * C2850 -
            (C2383 * C2709 + C2214 * C2849) +
            (C307 * C3589 + C92137 * C3807) * C2710) *
               C92148 * C91 +
           ((C307 * C3434 + C92137 * C3664) * C2850 -
            (C2382 * C2709 + C2216 * C2849) +
            (C307 * C3590 + C92137 * C3808) * C2710) *
               C92148 * C92) *
              C1986) *
         C92078) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C4326 * C107 + C4099 * C308 + C4327 * C805 + C4100 * C1022 +
             C4328 * C806 + C4101 * C1023) *
                C2849 +
            (C4326 * C245 + C4099 * C474 + C4327 * C956 + C4100 * C1146 +
             C4328 * C957 + C4101 * C1147) *
                C2709 -
            (C4328 * C5772 + C4101 * C6042 + C4327 * C3431 + C4100 * C3661 +
             C4326 * C1389 + C4099 * C1606) *
                C2850 -
            (C4328 * C5958 + C4101 * C6207 + C4327 * C3587 + C4100 * C3805 +
             C4326 * C1540 + C4099 * C1727) *
                C2710) *
               C92148 * C4097 +
           ((C4356 + C4355 + C4354) * C2849 + (C4544 + C4545 + C4546) * C2709 -
            (C7885 + C7884 + C7883) * C2850 - (C8102 + C8103 + C8104) * C2710) *
               C92148 * C92067) *
              C1985 +
          (((C4326 * C3431 + C4099 * C3661 + C4327 * C5772 + C4100 * C6042 +
             C4328 * C8536 + C4101 * C8894) *
                C2850 -
            ((C4328 * C5114 + C4101 * C5378 + C4327 * C957 + C4100 * C1147 +
              C4326 * C956 + C4099 * C1146) *
                 C2709 +
             (C4328 * C4882 + C4101 * C5218 + C4327 * C806 + C4100 * C1023 +
              C4326 * C805 + C4099 * C1022) *
                 C2849) +
            (C4326 * C3587 + C4099 * C3805 + C4327 * C5958 + C4100 * C6207 +
             C4328 * C8780 + C4101 * C9096) *
                C2710) *
               C92148 * C4097 +
           ((C4326 * C3432 + C4099 * C3662 + C4327 * C5771 + C4100 * C6041 +
             C4328 * C8537 + C4101 * C8895) *
                C2850 -
            ((C7141 + C7142 + C7143) * C2709 +
             (C6924 + C6923 + C6922) * C2849) +
            (C4326 * C3588 + C4099 * C3806 + C4327 * C5957 + C4100 * C6210 +
             C4328 * C8781 + C4101 * C9097) *
                C2710) *
               C92148 * C92067) *
              C1986) *
         C92078) /
            (p * q * std::sqrt(p + q));
    d2eezx[21] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92148 * C555) * C801 +
             (C554 * C117 + C92148 * C561) * C92078) *
                C89 +
            (C584 * C801 + C585 * C92078) * C90 +
            (C586 * C801 + C587 * C92078) * C91 +
            (C588 * C801 + C589 * C92078) * C92) *
               C92137 * C2709 -
           ((C3195 * C92078 + C3194 * C801) * C92 +
            (C3193 * C92078 + C3192 * C801) * C91 +
            (C3191 * C92078 + C3190 * C801) * C90 +
            ((C554 * C1397 + C92148 * C1796) * C92078 +
             (C554 * C1389 + C92148 * C1788) * C801) *
                C89) *
               C92137 * C2710) *
              C1985 +
          ((((C554 * C3431 + C92148 * C3875) * C801 +
             (C554 * C3439 + C92148 * C3879) * C92078) *
                C89 +
            ((C554 * C3432 + C92148 * C3876) * C801 +
             (C554 * C3440 + C92148 * C3880) * C92078) *
                C90 +
            ((C554 * C3433 + C92148 * C3877) * C801 +
             (C554 * C3441 + C92148 * C3881) * C92078) *
                C91 +
            ((C554 * C3434 + C92148 * C3878) * C801 +
             (C554 * C3442 + C92148 * C3882) * C92078) *
                C92) *
               C92137 * C2710 -
           ((C2473 * C92078 + C2472 * C801) * C92 +
            (C2471 * C92078 + C2470 * C801) * C91 +
            (C2469 * C92078 + C2468 * C801) * C90 +
            ((C554 * C813 + C92148 * C1212) * C92078 +
             (C554 * C805 + C92148 * C1204) * C801) *
                C89) *
               C92137 * C2709) *
              C1986)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C554 * C107 + C92148 * C555) * C801 +
              (C554 * C117 + C92148 * C561) * C92078) *
                 C4097 +
             (C584 * C801 + C585 * C92078) * C92067) *
                C4099 +
            ((C5493 + C5494) * C4097 + (C5468 + C5469) * C92067) * C4100 +
            C5504 * C4101) *
               C2709 -
           (((C9201 + C9202) * C92067 + (C9217 + C9218) * C4097) * C4101 +
            ((C9207 + C9208) * C92067 + (C9219 + C9220) * C4097) * C4100 +
            ((C3191 * C92078 + C3190 * C801) * C92067 +
             ((C554 * C1397 + C92148 * C1796) * C92078 +
              (C554 * C1389 + C92148 * C1788) * C801) *
                 C4097) *
                C4099) *
               C2710) *
              C1985 +
          ((((C9220 + C9219) * C4097 + (C9208 + C9207) * C92067) * C4099 +
            ((C9218 + C9217) * C4097 + (C9202 + C9201) * C92067) * C4100 +
            (((C554 * C8536 + C92148 * C9196) * C801 +
              (C554 * C8540 + C92148 * C9198) * C92078) *
                 C4097 +
             ((C554 * C8537 + C92148 * C9197) * C801 +
              (C554 * C8541 + C92148 * C9199) * C92078) *
                 C92067) *
                C4101) *
               C2710 -
           (((C5498 + C5499) * C92067 + (C5500 + C5501) * C4097) * C4101 +
            ((C5475 + C5474) * C92067 + (C5496 + C5495) * C4097) * C4100 +
            ((C5469 + C5468) * C92067 + (C5494 + C5493) * C4097) * C4099) *
               C2709) *
              C1986)) /
            (p * q * std::sqrt(p + q));
    d2eezy[21] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92148 * C555) * C2059 +
            (C554 * C182 + C92148 * C641) * C1985 -
            (C554 * C805 + C92148 * C1204) * C2060 -
            (C554 * C890 + C92148 * C1267) * C1986) *
               C89 +
           (C2541 + C2542 - C2543 - C2559) * C90 +
           (C2546 + C2547 - C2548 - C2560) * C91 +
           (C2551 + C2552 - C2553 - C2561) * C92) *
              C92137 * C92078 * C2709 +
          (((C554 * C3431 + C92148 * C3875) * C2060 -
            ((C554 * C1471 + C92148 * C1854) * C1985 +
             (C554 * C1389 + C92148 * C1788) * C2059) +
            (C554 * C3513 + C92148 * C3949) * C1986) *
               C89 +
           ((C554 * C3432 + C92148 * C3876) * C2060 -
            (C3272 * C1985 + C3190 * C2059) +
            (C554 * C3514 + C92148 * C3950) * C1986) *
               C90 +
           ((C554 * C3433 + C92148 * C3877) * C2060 -
            (C3273 * C1985 + C3192 * C2059) +
            (C554 * C3515 + C92148 * C3951) * C1986) *
               C91 +
           ((C554 * C3434 + C92148 * C3878) * C2060 -
            (C3274 * C1985 + C3194 * C2059) +
            (C554 * C3516 + C92148 * C3952) * C1986) *
               C92) *
              C92137 * C92078 * C2710)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92148 * C555) * C2059 +
             (C554 * C182 + C92148 * C641) * C1985 - C5484 * C2060 -
             C5591 * C1986) *
                C4097 +
            (C2541 + C2542 - C2543 - C2559) * C92067) *
               C4099 +
           ((C5484 * C2059 + C5591 * C1985 - C5486 * C2060 - C5592 * C1986) *
                C4097 +
            (C7359 + C7360 - C7361 - C7362) * C92067) *
               C4100 +
           ((C5486 * C2059 + C5592 * C1985 - C5492 * C2060 - C5593 * C1986) *
                C4097 +
            (C7363 + C7364 - C7365 - C7366) * C92067) *
               C4101) *
              C92078 * C2709 +
          (((C9216 * C2060 -
             ((C554 * C1471 + C92148 * C1854) * C1985 +
              (C554 * C1389 + C92148 * C1788) * C2059) +
             C9325 * C1986) *
                C4097 +
            (C8213 * C2060 - (C3272 * C1985 + C3190 * C2059) + C8322 * C1986) *
                C92067) *
               C4099 +
           ((C9214 * C2060 - (C9325 * C1985 + C9216 * C2059) + C9326 * C1986) *
                C4097 +
            (C8215 * C2060 - (C8322 * C1985 + C8213 * C2059) + C8323 * C1986) *
                C92067) *
               C4100 +
           (((C554 * C8536 + C92148 * C9196) * C2060 -
             (C9326 * C1985 + C9214 * C2059) +
             (C554 * C8666 + C92148 * C9318) * C1986) *
                C4097 +
            ((C554 * C8537 + C92148 * C9197) * C2060 -
             (C8323 * C1985 + C8215 * C2059) +
             (C554 * C8667 + C92148 * C9319) * C1986) *
                C92067) *
               C4101) *
              C92078 * C2710)) /
            (p * q * std::sqrt(p + q));
    d2eezz[21] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C554 * C107 + C92148 * C555) * C2849 +
                      (C554 * C245 + C92148 * C719) * C2709 -
                      (C554 * C1389 + C92148 * C1788) * C2850 -
                      (C554 * C1540 + C92148 * C1909) * C2710) *
                         C89 +
                     (C3345 + C3346 - C3347 - C3363) * C90 +
                     (C3350 + C3351 - C3352 - C3364) * C91 +
                     (C3355 + C3356 - C3357 - C3365) * C92) *
                        C92137 * C1985 +
                    (((C554 * C3431 + C92148 * C3875) * C2850 -
                      ((C554 * C956 + C92148 * C1328) * C2709 +
                       (C554 * C805 + C92148 * C1204) * C2849) +
                      (C554 * C3587 + C92148 * C4019) * C2710) *
                         C89 +
                     ((C554 * C3432 + C92148 * C3876) * C2850 -
                      (C2640 * C2709 + C2468 * C2849) +
                      (C554 * C3588 + C92148 * C4020) * C2710) *
                         C90 +
                     ((C554 * C3433 + C92148 * C3877) * C2850 -
                      (C2639 * C2709 + C2470 * C2849) +
                      (C554 * C3589 + C92148 * C4021) * C2710) *
                         C91 +
                     ((C554 * C3434 + C92148 * C3878) * C2850 -
                      (C2638 * C2709 + C2472 * C2849) +
                      (C554 * C3590 + C92148 * C4022) * C2710) *
                         C92) *
                        C92137 * C1986) *
                   C92078) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((((C554 * C107 + C92148 * C555) * C2849 +
                       (C554 * C245 + C92148 * C719) * C2709 -
                       (C554 * C1389 + C92148 * C1788) * C2850 -
                       (C554 * C1540 + C92148 * C1909) * C2710) *
                          C4097 +
                      (C3345 + C3346 - C3347 - C3363) * C92067) *
                         C4099 +
                     ((C9427 + C9428 - C9429 - C9439) * C4097 +
                      (C8425 + C8426 - C8427 - C8437) * C92067) *
                         C4100 +
                     ((C9432 + C9433 - C9434 - C9440) * C4097 +
                      (C8430 + C8431 - C8432 - C8438) * C92067) *
                         C4101) *
                        C1985 +
                    (((C9429 - (C9428 + C9427) + C9439) * C4097 +
                      (C8427 - (C8426 + C8425) + C8437) * C92067) *
                         C4099 +
                     ((C9434 - (C9433 + C9432) + C9440) * C4097 +
                      (C8432 - (C8431 + C8430) + C8438) * C92067) *
                         C4100 +
                     (((C554 * C8536 + C92148 * C9196) * C2850 -
                       (C5690 * C2709 + C5492 * C2849) +
                       (C554 * C8780 + C92148 * C9424) * C2710) *
                          C4097 +
                      ((C554 * C8537 + C92148 * C9197) * C2850 -
                       (C5689 * C2709 + C5490 * C2849) +
                       (C554 * C8781 + C92148 * C9425) * C2710) *
                          C92067) *
                         C4101) *
                        C1986) *
                   C92078) /
                      (p * q * std::sqrt(p + q));
    d2eexx[22] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C100 * C107 + C89 * C113 + C101 * C108 + C90 * C114 + C102 * C109 +
            C91 * C115 + C103 * C110 + C92 * C116) *
               C801 +
           (C100 * C117 + C89 * C125 + C101 * C118 + C90 * C126 + C102 * C119 +
            C91 * C127 + C103 * C120 + C92 * C128) *
               C92078) *
              C92137 * C92148 * C92110 * C798 -
          ((C103 * C810 + C92 * C826 + C102 * C811 + C91 * C827 + C101 * C812 +
            C90 * C828 + C100 * C813 + C89 * C829) *
               C92078 +
           (C103 * C802 + C92 * C814 + C102 * C803 + C91 * C815 + C101 * C804 +
            C90 * C816 + C100 * C805 + C89 * C817) *
               C801) *
              C92137 * C92148 * C92110 * C799 +
          ((C100 * C806 + C89 * C818 + C101 * C807 + C90 * C819 + C102 * C808 +
            C91 * C820 + C103 * C809 + C92 * C821) *
               C801 +
           (C100 * C822 + C89 * C830 + C101 * C823 + C90 * C831 + C102 * C824 +
            C91 * C832 + C103 * C825 + C92 * C833) *
               C92078) *
              C92137 * C92148 * C92110 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((C100 * C107 + C89 * C113 + C101 * C108 + C90 * C114 + C102 * C109 +
           C91 * C115 + C103 * C110 + C92 * C116) *
              C104 +
          (C100 * C117 + C89 * C125 + C101 * C118 + C90 * C126 + C102 * C119 +
           C91 * C127 + C103 * C120 + C92 * C128) *
              C93 -
          (C103 * C111 + C92 * C121 + C102 * C110 + C91 * C116 + C101 * C109 +
           C90 * C115 + C100 * C108 + C89 * C114) *
              C105 -
          (C103 * C122 + C92 * C129 + C102 * C120 + C91 * C128 + C101 * C119 +
           C90 * C127 + C100 * C118 + C89 * C126) *
              C94 +
          (C100 * C109 + C89 * C115 + C101 * C110 + C90 * C116 + C102 * C111 +
           C91 * C121 + C103 * C112 + C92 * C123) *
              C106 +
          (C100 * C119 + C89 * C127 + C101 * C120 + C90 * C128 + C102 * C122 +
           C91 * C129 + C103 * C124 + C92 * C130) *
              C95) *
         C92137 * C92148 * C92110 * C92099) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C100 * C107 + C89 * C113 + C101 * C108 + C90 * C114 + C102 * C109 +
            C91 * C115 + C103 * C110 + C92 * C116) *
               C801 +
           (C100 * C117 + C89 * C125 + C101 * C118 + C90 * C126 + C102 * C119 +
            C91 * C127 + C103 * C120 + C92 * C128) *
               C92078) *
              C92137 * C92148 * C1383 -
          ((C103 * C1394 + C92 * C1410 + C102 * C1395 + C91 * C1411 +
            C101 * C1396 + C90 * C1412 + C100 * C1397 + C89 * C1413) *
               C92078 +
           (C103 * C1386 + C92 * C1398 + C102 * C1387 + C91 * C1399 +
            C101 * C1388 + C90 * C1400 + C100 * C1389 + C89 * C1401) *
               C801) *
              C92137 * C92148 * C1384 +
          ((C100 * C1390 + C89 * C1402 + C101 * C1391 + C90 * C1403 +
            C102 * C1392 + C91 * C1404 + C103 * C1393 + C92 * C1405) *
               C801 +
           (C100 * C1406 + C89 * C1414 + C101 * C1407 + C90 * C1415 +
            C102 * C1408 + C91 * C1416 + C103 * C1409 + C92 * C1417) *
               C92078) *
              C92137 * C92148 * C1385) *
         C92099) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C4102 * C107 + C4097 * C113 + C4103 * C108 + C92067 * C114) * C104 +
           (C4102 * C117 + C4097 * C125 + C4103 * C118 + C92067 * C126) * C93 -
           (C4103 * C109 + C92067 * C115 + C4102 * C108 + C4097 * C114) * C105 -
           (C4103 * C119 + C92067 * C127 + C4102 * C118 + C4097 * C126) * C94 +
           (C4102 * C109 + C4097 * C115 + C4103 * C110 + C92067 * C116) * C106 +
           (C4102 * C119 + C4097 * C127 + C4103 * C120 + C92067 * C128) * C95) *
              C4099 +
          ((C4102 * C805 + C4097 * C817 + C4103 * C804 + C92067 * C816) * C104 +
           (C4102 * C813 + C4097 * C829 + C4103 * C812 + C92067 * C828) * C93 -
           (C4103 * C803 + C92067 * C815 + C4102 * C804 + C4097 * C816) * C105 -
           (C4103 * C811 + C92067 * C827 + C4102 * C812 + C4097 * C828) * C94 +
           (C4102 * C803 + C4097 * C815 + C4103 * C802 + C92067 * C814) * C106 +
           (C4102 * C811 + C4097 * C827 + C4103 * C810 + C92067 * C826) * C95) *
              C4100 +
          ((C4102 * C806 + C4097 * C818 + C4103 * C807 + C92067 * C819) * C104 +
           (C4102 * C822 + C4097 * C830 + C4103 * C823 + C92067 * C831) * C93 -
           (C4103 * C808 + C92067 * C820 + C4102 * C807 + C4097 * C819) * C105 -
           (C4103 * C824 + C92067 * C832 + C4102 * C823 + C4097 * C831) * C94 +
           (C4102 * C808 + C4097 * C820 + C4103 * C809 + C92067 * C821) * C106 +
           (C4102 * C824 + C4097 * C832 + C4103 * C825 + C92067 * C833) * C95) *
              C4101) *
         C92148 * C92110 * C92099) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C92067 * C114) *
                C801 +
            (C4102 * C117 + C4097 * C125 + C4103 * C118 + C92067 * C126) *
                C92078) *
               C4099 +
           ((C4922 + C4923) * C801 + (C4924 + C4925) * C92078) * C4100 +
           C4938 * C4101) *
              C92148 * C92110 * C798 -
          (((C4930 + C4931) * C92078 + (C4932 + C4933) * C801) * C4101 +
           ((C4929 + C4928) * C92078 + (C4927 + C4926) * C801) * C4100 +
           ((C4925 + C4924) * C92078 + (C4923 + C4922) * C801) * C4099) *
              C92148 * C92110 * C799 +
          (C4938 * C4099 +
           ((C4933 + C4932) * C801 + (C4931 + C4930) * C92078) * C4100 +
           ((C4102 * C4883 + C4097 * C4889 + C4103 * C4884 + C92067 * C4890) *
                C801 +
            (C4102 * C4891 + C4097 * C4895 + C4103 * C4892 + C92067 * C4896) *
                C92078) *
               C4101) *
              C92148 * C92110 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C92067 * C114) *
                C801 +
            (C4102 * C117 + C4097 * C125 + C4103 * C118 + C92067 * C126) *
                C92078) *
               C4099 +
           ((C4922 + C4923) * C801 + (C4924 + C4925) * C92078) * C4100 +
           C4938 * C4101) *
              C92148 * C1383 -
          (((C4103 * C5777 + C92067 * C5789 + C4102 * C5778 + C4097 * C5790) *
                C92078 +
            (C4103 * C5771 + C92067 * C5779 + C4102 * C5772 + C4097 * C5780) *
                C801) *
               C4101 +
           ((C4103 * C3440 + C92067 * C3444 + C4102 * C3439 + C4097 * C3443) *
                C92078 +
            (C4103 * C3432 + C92067 * C3436 + C4102 * C3431 + C4097 * C3435) *
                C801) *
               C4100 +
           ((C4103 * C1396 + C92067 * C1412 + C4102 * C1397 + C4097 * C1413) *
                C92078 +
            (C4103 * C1388 + C92067 * C1400 + C4102 * C1389 + C4097 * C1401) *
                C801) *
               C4099) *
              C92148 * C1384 +
          (((C4102 * C1390 + C4097 * C1402 + C4103 * C1391 + C92067 * C1403) *
                C801 +
            (C4102 * C1406 + C4097 * C1414 + C4103 * C1407 + C92067 * C1415) *
                C92078) *
               C4099 +
           ((C4102 * C5773 + C4097 * C5781 + C4103 * C5774 + C92067 * C5782) *
                C801 +
            (C4102 * C5783 + C4097 * C5791 + C4103 * C5784 + C92067 * C5792) *
                C92078) *
               C4100 +
           ((C4102 * C5775 + C4097 * C5785 + C4103 * C5776 + C92067 * C5786) *
                C801 +
            (C4102 * C5787 + C4097 * C5793 + C4103 * C5788 + C92067 * C5794) *
                C92078) *
               C4101) *
              C92148 * C1385) *
         C92099) /
            (p * q * std::sqrt(p + q));
    d2eexy[22] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((C100 * C107 + C89 * C113 + C101 * C108 + C90 * C114 + C102 * C109 +
           C91 * C115 + C103 * C110 + C92 * C116) *
              C884 +
          (C100 * C182 + C89 * C188 + C101 * C183 + C90 * C189 + C102 * C184 +
           C91 * C190 + C103 * C185 + C92 * C191) *
              C798 -
          (C103 * C802 + C92 * C814 + C102 * C803 + C91 * C815 + C101 * C804 +
           C90 * C816 + C100 * C805 + C89 * C817) *
              C885 -
          (C103 * C887 + C92 * C895 + C102 * C888 + C91 * C896 + C101 * C889 +
           C90 * C897 + C100 * C890 + C89 * C898) *
              C799 +
          (C100 * C806 + C89 * C818 + C101 * C807 + C90 * C819 + C102 * C808 +
           C91 * C820 + C103 * C809 + C92 * C821) *
              C886 +
          (C100 * C891 + C89 * C899 + C101 * C892 + C90 * C900 + C102 * C893 +
           C91 * C901 + C103 * C894 + C92 * C902) *
              C800) *
         C92137 * C92148 * C92078 * C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C100 * C107 + C89 * C113 + C101 * C108 + C90 * C114 + C102 * C109 +
            C91 * C115 + C103 * C110 + C92 * C116) *
               C181 +
           (C100 * C182 + C89 * C188 + C101 * C183 + C90 * C189 + C102 * C184 +
            C91 * C190 + C103 * C185 + C92 * C191) *
               C92099) *
              C92137 * C92148 * C93 -
          ((C103 * C186 + C92 * C192 + C102 * C185 + C91 * C191 + C101 * C184 +
            C90 * C190 + C100 * C183 + C89 * C189) *
               C92099 +
           (C103 * C111 + C92 * C121 + C102 * C110 + C91 * C116 + C101 * C109 +
            C90 * C115 + C100 * C108 + C89 * C114) *
               C181) *
              C92137 * C92148 * C94 +
          ((C100 * C109 + C89 * C115 + C101 * C110 + C90 * C116 + C102 * C111 +
            C91 * C121 + C103 * C112 + C92 * C123) *
               C181 +
           (C100 * C184 + C89 * C190 + C101 * C185 + C90 * C191 + C102 * C186 +
            C91 * C192 + C103 * C187 + C92 * C193) *
               C92099) *
              C92137 * C92148 * C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C100 * C107 + C89 * C113 + C101 * C108 + C90 * C114 + C102 * C109 +
            C91 * C115 + C103 * C110 + C92 * C116) *
               C181 +
           (C100 * C182 + C89 * C188 + C101 * C183 + C90 * C189 + C102 * C184 +
            C91 * C190 + C103 * C185 + C92 * C191) *
               C92099) *
              C92137 * C92148 * C92078 * C1383 -
          ((C103 * C1468 + C92 * C1476 + C102 * C1469 + C91 * C1477 +
            C101 * C1470 + C90 * C1478 + C100 * C1471 + C89 * C1479) *
               C92099 +
           (C103 * C1386 + C92 * C1398 + C102 * C1387 + C91 * C1399 +
            C101 * C1388 + C90 * C1400 + C100 * C1389 + C89 * C1401) *
               C181) *
              C92137 * C92148 * C92078 * C1384 +
          ((C100 * C1390 + C89 * C1402 + C101 * C1391 + C90 * C1403 +
            C102 * C1392 + C91 * C1404 + C103 * C1393 + C92 * C1405) *
               C181 +
           (C100 * C1472 + C89 * C1480 + C101 * C1473 + C90 * C1481 +
            C102 * C1474 + C91 * C1482 + C103 * C1475 + C92 * C1483) *
               C92099) *
              C92137 * C92148 * C92078 * C1385)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C92067 * C114) *
                C181 +
            (C4102 * C182 + C4097 * C188 + C4103 * C183 + C92067 * C189) *
                C92099) *
               C4099 +
           ((C4102 * C805 + C4097 * C817 + C4103 * C804 + C92067 * C816) *
                C181 +
            (C4102 * C890 + C4097 * C898 + C4103 * C889 + C92067 * C897) *
                C92099) *
               C4100 +
           ((C4102 * C806 + C4097 * C818 + C4103 * C807 + C92067 * C819) *
                C181 +
            (C4102 * C891 + C4097 * C899 + C4103 * C892 + C92067 * C900) *
                C92099) *
               C4101) *
              C92148 * C93 -
          (((C4103 * C893 + C92067 * C901 + C4102 * C892 + C4097 * C900) *
                C92099 +
            (C4103 * C808 + C92067 * C820 + C4102 * C807 + C4097 * C819) *
                C181) *
               C4101 +
           ((C4103 * C888 + C92067 * C896 + C4102 * C889 + C4097 * C897) *
                C92099 +
            (C4103 * C803 + C92067 * C815 + C4102 * C804 + C4097 * C816) *
                C181) *
               C4100 +
           ((C4103 * C184 + C92067 * C190 + C4102 * C183 + C4097 * C189) *
                C92099 +
            (C4103 * C109 + C92067 * C115 + C4102 * C108 + C4097 * C114) *
                C181) *
               C4099) *
              C92148 * C94 +
          (((C4102 * C109 + C4097 * C115 + C4103 * C110 + C92067 * C116) *
                C181 +
            (C4102 * C184 + C4097 * C190 + C4103 * C185 + C92067 * C191) *
                C92099) *
               C4099 +
           ((C4102 * C803 + C4097 * C815 + C4103 * C802 + C92067 * C814) *
                C181 +
            (C4102 * C888 + C4097 * C896 + C4103 * C887 + C92067 * C895) *
                C92099) *
               C4100 +
           ((C4102 * C808 + C4097 * C820 + C4103 * C809 + C92067 * C821) *
                C181 +
            (C4102 * C893 + C4097 * C901 + C4103 * C894 + C92067 * C902) *
                C92099) *
               C4101) *
              C92148 * C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C4102 * C107 + C4097 * C113 + C4103 * C108 + C92067 * C114) * C884 +
           (C4102 * C182 + C4097 * C188 + C4103 * C183 + C92067 * C189) * C798 -
           (C4923 + C4922) * C885 - (C5033 + C5034) * C799 + C4934 * C886 +
           C5039 * C800) *
              C4099 +
          ((C4922 + C4923) * C884 + (C5034 + C5033) * C798 -
           (C4927 + C4926) * C885 - (C5036 + C5035) * C799 +
           (C4933 + C4932) * C886 + (C5037 + C5038) * C800) *
              C4100 +
          (C4934 * C884 + C5039 * C798 - (C4932 + C4933) * C885 -
           (C5038 + C5037) * C799 +
           (C4102 * C4883 + C4097 * C4889 + C4103 * C4884 + C92067 * C4890) *
               C886 +
           (C4102 * C5014 + C4097 * C5018 + C4103 * C5015 + C92067 * C5019) *
               C800) *
              C4101) *
         C92148 * C92078 * C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C92067 * C114) *
                C181 +
            (C4102 * C182 + C4097 * C188 + C4103 * C183 + C92067 * C189) *
                C92099) *
               C4099 +
           ((C4922 + C4923) * C181 + (C5034 + C5033) * C92099) * C4100 +
           (C4934 * C181 + C5039 * C92099) * C4101) *
              C92148 * C92078 * C1383 -
          (((C4103 * C5869 + C92067 * C5875 + C4102 * C5870 + C4097 * C5876) *
                C92099 +
            (C4103 * C5771 + C92067 * C5779 + C4102 * C5772 + C4097 * C5780) *
                C181) *
               C4101 +
           ((C4103 * C3514 + C92067 * C3518 + C4102 * C3513 + C4097 * C3517) *
                C92099 +
            (C4103 * C3432 + C92067 * C3436 + C4102 * C3431 + C4097 * C3435) *
                C181) *
               C4100 +
           ((C4103 * C1470 + C92067 * C1478 + C4102 * C1471 + C4097 * C1479) *
                C92099 +
            (C4103 * C1388 + C92067 * C1400 + C4102 * C1389 + C4097 * C1401) *
                C181) *
               C4099) *
              C92148 * C92078 * C1384 +
          (((C4102 * C1390 + C4097 * C1402 + C4103 * C1391 + C92067 * C1403) *
                C181 +
            (C4102 * C1472 + C4097 * C1480 + C4103 * C1473 + C92067 * C1481) *
                C92099) *
               C4099 +
           ((C4102 * C5773 + C4097 * C5781 + C4103 * C5774 + C92067 * C5782) *
                C181 +
            (C4102 * C5871 + C4097 * C5877 + C4103 * C5872 + C92067 * C5878) *
                C92099) *
               C4100 +
           ((C4102 * C5775 + C4097 * C5785 + C4103 * C5776 + C92067 * C5786) *
                C181 +
            (C4102 * C5873 + C4097 * C5879 + C4103 * C5874 + C92067 * C5880) *
                C92099) *
               C4101) *
              C92148 * C92078 * C1385)) /
            (p * q * std::sqrt(p + q));
    d2eexz[22] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C100 * C107 + C89 * C113 + C101 * C108 + C90 * C114 + C102 * C109 +
            C91 * C115 + C103 * C110 + C92 * C116) *
               C244 +
           (C100 * C245 + C89 * C251 + C101 * C246 + C90 * C252 + C102 * C247 +
            C91 * C253 + C103 * C248 + C92 * C254) *
               C92110) *
              C92137 * C92148 * C798 -
          ((C103 * C953 + C92 * C961 + C102 * C954 + C91 * C962 + C101 * C955 +
            C90 * C963 + C100 * C956 + C89 * C964) *
               C92110 +
           (C103 * C802 + C92 * C814 + C102 * C803 + C91 * C815 + C101 * C804 +
            C90 * C816 + C100 * C805 + C89 * C817) *
               C244) *
              C92137 * C92148 * C799 +
          ((C100 * C806 + C89 * C818 + C101 * C807 + C90 * C819 + C102 * C808 +
            C91 * C820 + C103 * C809 + C92 * C821) *
               C244 +
           (C100 * C957 + C89 * C965 + C101 * C958 + C90 * C966 + C102 * C959 +
            C91 * C967 + C103 * C960 + C92 * C968) *
               C92110) *
              C92137 * C92148 * C800) *
         C92078) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C100 * C107 + C89 * C113 + C101 * C108 + C90 * C114 + C102 * C109 +
            C91 * C115 + C103 * C110 + C92 * C116) *
               C244 +
           (C100 * C245 + C89 * C251 + C101 * C246 + C90 * C252 + C102 * C247 +
            C91 * C253 + C103 * C248 + C92 * C254) *
               C92110) *
              C92137 * C92148 * C92099 * C93 -
          ((C103 * C249 + C92 * C255 + C102 * C248 + C91 * C254 + C101 * C247 +
            C90 * C253 + C100 * C246 + C89 * C252) *
               C92110 +
           (C103 * C111 + C92 * C121 + C102 * C110 + C91 * C116 + C101 * C109 +
            C90 * C115 + C100 * C108 + C89 * C114) *
               C244) *
              C92137 * C92148 * C92099 * C94 +
          ((C100 * C109 + C89 * C115 + C101 * C110 + C90 * C116 + C102 * C111 +
            C91 * C121 + C103 * C112 + C92 * C123) *
               C244 +
           (C100 * C247 + C89 * C253 + C101 * C248 + C90 * C254 + C102 * C249 +
            C91 * C255 + C103 * C250 + C92 * C256) *
               C92110) *
              C92137 * C92148 * C92099 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((C100 * C107 + C89 * C113 + C101 * C108 + C90 * C114 + C102 * C109 +
           C91 * C115 + C103 * C110 + C92 * C116) *
              C1534 +
          (C100 * C245 + C89 * C251 + C101 * C246 + C90 * C252 + C102 * C247 +
           C91 * C253 + C103 * C248 + C92 * C254) *
              C1383 -
          (C103 * C1386 + C92 * C1398 + C102 * C1387 + C91 * C1399 +
           C101 * C1388 + C90 * C1400 + C100 * C1389 + C89 * C1401) *
              C1535 -
          (C103 * C1537 + C92 * C1545 + C102 * C1538 + C91 * C1546 +
           C101 * C1539 + C90 * C1547 + C100 * C1540 + C89 * C1548) *
              C1384 +
          (C100 * C1390 + C89 * C1402 + C101 * C1391 + C90 * C1403 +
           C102 * C1392 + C91 * C1404 + C103 * C1393 + C92 * C1405) *
              C1536 +
          (C100 * C1541 + C89 * C1549 + C101 * C1542 + C90 * C1550 +
           C102 * C1543 + C91 * C1551 + C103 * C1544 + C92 * C1552) *
              C1385) *
         C92137 * C92148 * C92099 * C92078) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C92067 * C114) *
                C244 +
            (C4102 * C245 + C4097 * C251 + C4103 * C246 + C92067 * C252) *
                C92110) *
               C4099 +
           ((C4102 * C805 + C4097 * C817 + C4103 * C804 + C92067 * C816) *
                C244 +
            (C4102 * C956 + C4097 * C964 + C4103 * C955 + C92067 * C963) *
                C92110) *
               C4100 +
           ((C4102 * C806 + C4097 * C818 + C4103 * C807 + C92067 * C819) *
                C244 +
            (C4102 * C957 + C4097 * C965 + C4103 * C958 + C92067 * C966) *
                C92110) *
               C4101) *
              C92148 * C92099 * C93 -
          (((C4103 * C959 + C92067 * C967 + C4102 * C958 + C4097 * C966) *
                C92110 +
            (C4103 * C808 + C92067 * C820 + C4102 * C807 + C4097 * C819) *
                C244) *
               C4101 +
           ((C4103 * C954 + C92067 * C962 + C4102 * C955 + C4097 * C963) *
                C92110 +
            (C4103 * C803 + C92067 * C815 + C4102 * C804 + C4097 * C816) *
                C244) *
               C4100 +
           ((C4103 * C247 + C92067 * C253 + C4102 * C246 + C4097 * C252) *
                C92110 +
            (C4103 * C109 + C92067 * C115 + C4102 * C108 + C4097 * C114) *
                C244) *
               C4099) *
              C92148 * C92099 * C94 +
          (((C4102 * C109 + C4097 * C115 + C4103 * C110 + C92067 * C116) *
                C244 +
            (C4102 * C247 + C4097 * C253 + C4103 * C248 + C92067 * C254) *
                C92110) *
               C4099 +
           ((C4102 * C803 + C4097 * C815 + C4103 * C802 + C92067 * C814) *
                C244 +
            (C4102 * C954 + C4097 * C962 + C4103 * C953 + C92067 * C961) *
                C92110) *
               C4100 +
           ((C4102 * C808 + C4097 * C820 + C4103 * C809 + C92067 * C821) *
                C244 +
            (C4102 * C959 + C4097 * C967 + C4103 * C960 + C92067 * C968) *
                C92110) *
               C4101) *
              C92148 * C92099 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C92067 * C114) *
                C244 +
            (C4102 * C245 + C4097 * C251 + C4103 * C246 + C92067 * C252) *
                C92110) *
               C4099 +
           ((C4922 + C4923) * C244 + (C5135 + C5136) * C92110) * C4100 +
           C5143 * C4101) *
              C92148 * C798 -
          (((C5139 + C5140) * C92110 + (C4932 + C4933) * C244) * C4101 +
           ((C5138 + C5137) * C92110 + (C4927 + C4926) * C244) * C4100 +
           ((C5136 + C5135) * C92110 + (C4923 + C4922) * C244) * C4099) *
              C92148 * C799 +
          (C5143 * C4099 +
           ((C4933 + C4932) * C244 + (C5140 + C5139) * C92110) * C4100 +
           ((C4102 * C4883 + C4097 * C4889 + C4103 * C4884 + C92067 * C4890) *
                C244 +
            (C4102 * C5115 + C4097 * C5119 + C4103 * C5116 + C92067 * C5120) *
                C92110) *
               C4101) *
              C92148 * C800) *
         C92078) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C4102 * C107 + C4097 * C113 + C4103 * C108 + C92067 * C114) *
               C1534 +
           (C4102 * C245 + C4097 * C251 + C4103 * C246 + C92067 * C252) *
               C1383 -
           (C4103 * C1388 + C92067 * C1400 + C4102 * C1389 + C4097 * C1401) *
               C1535 -
           (C4103 * C1539 + C92067 * C1547 + C4102 * C1540 + C4097 * C1548) *
               C1384 +
           (C4102 * C1390 + C4097 * C1402 + C4103 * C1391 + C92067 * C1403) *
               C1536 +
           (C4102 * C1541 + C4097 * C1549 + C4103 * C1542 + C92067 * C1550) *
               C1385) *
              C4099 +
          ((C4922 + C4923) * C1534 + (C5135 + C5136) * C1383 -
           (C4103 * C3432 + C92067 * C3436 + C4102 * C3431 + C4097 * C3435) *
               C1535 -
           (C4103 * C3588 + C92067 * C3592 + C4102 * C3587 + C4097 * C3591) *
               C1384 +
           (C4102 * C5773 + C4097 * C5781 + C4103 * C5774 + C92067 * C5782) *
               C1536 +
           (C4102 * C5955 + C4097 * C5961 + C4103 * C5956 + C92067 * C5962) *
               C1385) *
              C4100 +
          (C4934 * C1534 + C5141 * C1383 -
           (C4103 * C5771 + C92067 * C5779 + C4102 * C5772 + C4097 * C5780) *
               C1535 -
           (C4103 * C5957 + C92067 * C5963 + C4102 * C5958 + C4097 * C5964) *
               C1384 +
           (C4102 * C5775 + C4097 * C5785 + C4103 * C5776 + C92067 * C5786) *
               C1536 +
           (C4102 * C5959 + C4097 * C5965 + C4103 * C5960 + C92067 * C5966) *
               C1385) *
              C4101) *
         C92148 * C92099 * C92078) /
            (p * q * std::sqrt(p + q));
    d2eeyx[22] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C307 * C107 + C92137 * C308) * C801 +
            (C307 * C117 + C92137 * C314) * C92078) *
               C92148 * C89 +
           (C337 * C801 + C338 * C92078) * C92148 * C90 +
           (C339 * C801 + C340 * C92078) * C92148 * C91 +
           (C341 * C801 + C342 * C92078) * C92148 * C92) *
              C92110 * C798 -
          (((C307 * C810 + C92137 * C1027) * C92078 +
            (C307 * C802 + C92137 * C1019) * C801) *
               C92148 * C92 +
           ((C307 * C811 + C92137 * C1028) * C92078 +
            (C307 * C803 + C92137 * C1020) * C801) *
               C92148 * C91 +
           ((C307 * C812 + C92137 * C1029) * C92078 +
            (C307 * C804 + C92137 * C1021) * C801) *
               C92148 * C90 +
           ((C307 * C813 + C92137 * C1030) * C92078 +
            (C307 * C805 + C92137 * C1022) * C801) *
               C92148 * C89) *
              C92110 * C799 +
          (((C307 * C806 + C92137 * C1023) * C801 +
            (C307 * C822 + C92137 * C1031) * C92078) *
               C92148 * C89 +
           ((C307 * C807 + C92137 * C1024) * C801 +
            (C307 * C823 + C92137 * C1032) * C92078) *
               C92148 * C90 +
           ((C307 * C808 + C92137 * C1025) * C801 +
            (C307 * C824 + C92137 * C1033) * C92078) *
               C92148 * C91 +
           ((C307 * C809 + C92137 * C1026) * C801 +
            (C307 * C825 + C92137 * C1034) * C92078) *
               C92148 * C92) *
              C92110 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C307 * C107 + C92137 * C308) * C104 +
           (C307 * C117 + C92137 * C314) * C93 - C337 * C105 - C338 * C94 +
           C339 * C106 + C340 * C95) *
              C92148 * C89 +
          (C337 * C104 + C338 * C93 - C339 * C105 - C340 * C94 + C341 * C106 +
           C342 * C95) *
              C92148 * C90 +
          (C339 * C104 + C340 * C93 - C341 * C105 - C342 * C94 + C343 * C106 +
           C344 * C95) *
              C92148 * C91 +
          (C341 * C104 + C342 * C93 - C343 * C105 - C344 * C94 +
           (C307 * C112 + C92137 * C313) * C106 +
           (C307 * C124 + C92137 * C319) * C95) *
              C92148 * C92) *
         C92110 * C92099) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C307 * C107 + C92137 * C308) * C801 +
            (C307 * C117 + C92137 * C314) * C92078) *
               C92148 * C89 +
           (C337 * C801 + C338 * C92078) * C92148 * C90 +
           (C339 * C801 + C340 * C92078) * C92148 * C91 +
           (C341 * C801 + C342 * C92078) * C92148 * C92) *
              C1383 -
          (((C307 * C1394 + C92137 * C1611) * C92078 +
            (C307 * C1386 + C92137 * C1603) * C801) *
               C92148 * C92 +
           ((C307 * C1395 + C92137 * C1612) * C92078 +
            (C307 * C1387 + C92137 * C1604) * C801) *
               C92148 * C91 +
           ((C307 * C1396 + C92137 * C1613) * C92078 +
            (C307 * C1388 + C92137 * C1605) * C801) *
               C92148 * C90 +
           ((C307 * C1397 + C92137 * C1614) * C92078 +
            (C307 * C1389 + C92137 * C1606) * C801) *
               C92148 * C89) *
              C1384 +
          (((C307 * C1390 + C92137 * C1607) * C801 +
            (C307 * C1406 + C92137 * C1615) * C92078) *
               C92148 * C89 +
           ((C307 * C1391 + C92137 * C1608) * C801 +
            (C307 * C1407 + C92137 * C1616) * C92078) *
               C92148 * C90 +
           ((C307 * C1392 + C92137 * C1609) * C801 +
            (C307 * C1408 + C92137 * C1617) * C92078) *
               C92148 * C91 +
           ((C307 * C1393 + C92137 * C1610) * C801 +
            (C307 * C1409 + C92137 * C1618) * C92078) *
               C92148 * C92) *
              C1385) *
         C92099) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C4326 * C107 + C4099 * C308 + C4327 * C805 + C4100 * C1022 +
            C4328 * C806 + C4101 * C1023) *
               C104 +
           (C4326 * C117 + C4099 * C314 + C4327 * C813 + C4100 * C1030 +
            C4328 * C822 + C4101 * C1031) *
               C93 -
           (C4354 + C4355 + C4356) * C105 - (C4357 + C4358 + C4359) * C94 +
           (C4360 + C4361 + C4362) * C106 + (C4363 + C4364 + C4365) * C95) *
              C92148 * C4097 +
          ((C4356 + C4355 + C4354) * C104 + (C4359 + C4358 + C4357) * C93 -
           (C4362 + C4361 + C4360) * C105 - (C4365 + C4364 + C4363) * C94 +
           (C4326 * C110 + C4099 * C311 + C4327 * C802 + C4100 * C1019 +
            C4328 * C809 + C4101 * C1026) *
               C106 +
           (C4326 * C120 + C4099 * C317 + C4327 * C810 + C4100 * C1027 +
            C4328 * C825 + C4101 * C1034) *
               C95) *
              C92148 * C92067) *
         C92110 * C92099) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4326 * C107 + C4099 * C308 + C4327 * C805 + C4100 * C1022 +
             C4328 * C806 + C4101 * C1023) *
                C801 +
            (C4326 * C117 + C4099 * C314 + C4327 * C813 + C4100 * C1030 +
             C4328 * C822 + C4101 * C1031) *
                C92078) *
               C92148 * C4097 +
           ((C4356 + C4355 + C4354) * C801 + (C4359 + C4358 + C4357) * C92078) *
               C92148 * C92067) *
              C92110 * C798 -
          (((C4328 * C4885 + C4101 * C5221 + C4327 * C823 + C4100 * C1032 +
             C4326 * C812 + C4099 * C1029) *
                C92078 +
            (C4328 * C4881 + C4101 * C5217 + C4327 * C807 + C4100 * C1024 +
             C4326 * C804 + C4099 * C1021) *
                C801) *
               C92148 * C92067 +
           ((C4328 * C4886 + C4101 * C5222 + C4327 * C822 + C4100 * C1031 +
             C4326 * C813 + C4099 * C1030) *
                C92078 +
            (C4328 * C4882 + C4101 * C5218 + C4327 * C806 + C4100 * C1023 +
             C4326 * C805 + C4099 * C1022) *
                C801) *
               C92148 * C4097) *
              C92110 * C799 +
          (((C4326 * C806 + C4099 * C1023 + C4327 * C4882 + C4100 * C5218 +
             C4328 * C4883 + C4101 * C5219) *
                C801 +
            (C4326 * C822 + C4099 * C1031 + C4327 * C4886 + C4100 * C5222 +
             C4328 * C4891 + C4101 * C5223) *
                C92078) *
               C92148 * C4097 +
           ((C4326 * C807 + C4099 * C1024 + C4327 * C4881 + C4100 * C5217 +
             C4328 * C4884 + C4101 * C5220) *
                C801 +
            (C4326 * C823 + C4099 * C1032 + C4327 * C4885 + C4100 * C5221 +
             C4328 * C4892 + C4101 * C5224) *
                C92078) *
               C92148 * C92067) *
              C92110 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4326 * C107 + C4099 * C308 + C4327 * C805 + C4100 * C1022 +
             C4328 * C806 + C4101 * C1023) *
                C801 +
            (C4326 * C117 + C4099 * C314 + C4327 * C813 + C4100 * C1030 +
             C4328 * C822 + C4101 * C1031) *
                C92078) *
               C92148 * C4097 +
           ((C4356 + C4355 + C4354) * C801 + (C4359 + C4358 + C4357) * C92078) *
               C92148 * C92067) *
              C1383 -
          (((C4328 * C5777 + C4101 * C6047 + C4327 * C3440 + C4100 * C3666 +
             C4326 * C1396 + C4099 * C1613) *
                C92078 +
            (C4328 * C5771 + C4101 * C6041 + C4327 * C3432 + C4100 * C3662 +
             C4326 * C1388 + C4099 * C1605) *
                C801) *
               C92148 * C92067 +
           ((C4328 * C5778 + C4101 * C6048 + C4327 * C3439 + C4100 * C3665 +
             C4326 * C1397 + C4099 * C1614) *
                C92078 +
            (C4328 * C5772 + C4101 * C6042 + C4327 * C3431 + C4100 * C3661 +
             C4326 * C1389 + C4099 * C1606) *
                C801) *
               C92148 * C4097) *
              C1384 +
          (((C4326 * C1390 + C4099 * C1607 + C4327 * C5773 + C4100 * C6043 +
             C4328 * C5775 + C4101 * C6044) *
                C801 +
            (C4326 * C1406 + C4099 * C1615 + C4327 * C5783 + C4100 * C6049 +
             C4328 * C5787 + C4101 * C6050) *
                C92078) *
               C92148 * C4097 +
           ((C4326 * C1391 + C4099 * C1608 + C4327 * C5774 + C4100 * C6045 +
             C4328 * C5776 + C4101 * C6046) *
                C801 +
            (C4326 * C1407 + C4099 * C1616 + C4327 * C5784 + C4100 * C6051 +
             C4328 * C5788 + C4101 * C6052) *
                C92078) *
               C92148 * C92067) *
              C1385) *
         C92099) /
            (p * q * std::sqrt(p + q));
    d2eeyy[22] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C307 * C107 + C92137 * C308) * C884 +
           (C307 * C182 + C92137 * C394) * C798 -
           (C307 * C805 + C92137 * C1022) * C885 -
           (C307 * C890 + C92137 * C1085) * C799 +
           (C307 * C806 + C92137 * C1023) * C886 +
           (C307 * C891 + C92137 * C1086) * C800) *
              C92148 * C89 +
          (C337 * C884 + C413 * C798 - (C307 * C804 + C92137 * C1021) * C885 -
           (C307 * C889 + C92137 * C1087) * C799 +
           (C307 * C807 + C92137 * C1024) * C886 +
           (C307 * C892 + C92137 * C1088) * C800) *
              C92148 * C90 +
          (C339 * C884 + C414 * C798 - (C307 * C803 + C92137 * C1020) * C885 -
           (C307 * C888 + C92137 * C1089) * C799 +
           (C307 * C808 + C92137 * C1025) * C886 +
           (C307 * C893 + C92137 * C1090) * C800) *
              C92148 * C91 +
          (C341 * C884 + C415 * C798 - (C307 * C802 + C92137 * C1019) * C885 -
           (C307 * C887 + C92137 * C1091) * C799 +
           (C307 * C809 + C92137 * C1026) * C886 +
           (C307 * C894 + C92137 * C1092) * C800) *
              C92148 * C92) *
         C92078 * C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C307 * C107 + C92137 * C308) * C181 +
            (C307 * C182 + C92137 * C394) * C92099) *
               C92148 * C89 +
           (C401 + C417) * C92148 * C90 + C423 * C91 + C424 * C92) *
              C93 -
          ((C420 + C412) * C92148 * C92 + (C419 + C407) * C92148 * C91 +
           (C418 + C404) * C92148 * C90 + (C417 + C401) * C92148 * C89) *
              C94 +
          (C423 * C89 + C424 * C90 + (C412 + C420) * C92148 * C91 +
           ((C307 * C112 + C92137 * C313) * C181 +
            (C307 * C187 + C92137 * C399) * C92099) *
               C92148 * C92) *
              C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C307 * C107 + C92137 * C308) * C181 +
            (C307 * C182 + C92137 * C394) * C92099) *
               C92148 * C89 +
           (C401 + C417) * C92148 * C90 + C423 * C91 + C424 * C92) *
              C92078 * C1383 -
          (((C307 * C1468 + C92137 * C1669) * C92099 +
            (C307 * C1386 + C92137 * C1603) * C181) *
               C92148 * C92 +
           ((C307 * C1469 + C92137 * C1670) * C92099 +
            (C307 * C1387 + C92137 * C1604) * C181) *
               C92148 * C91 +
           ((C307 * C1470 + C92137 * C1671) * C92099 +
            (C307 * C1388 + C92137 * C1605) * C181) *
               C92148 * C90 +
           ((C307 * C1471 + C92137 * C1672) * C92099 +
            (C307 * C1389 + C92137 * C1606) * C181) *
               C92148 * C89) *
              C92078 * C1384 +
          (((C307 * C1390 + C92137 * C1607) * C181 +
            (C307 * C1472 + C92137 * C1673) * C92099) *
               C92148 * C89 +
           ((C307 * C1391 + C92137 * C1608) * C181 +
            (C307 * C1473 + C92137 * C1674) * C92099) *
               C92148 * C90 +
           ((C307 * C1392 + C92137 * C1609) * C181 +
            (C307 * C1474 + C92137 * C1675) * C92099) *
               C92148 * C91 +
           ((C307 * C1393 + C92137 * C1610) * C181 +
            (C307 * C1475 + C92137 * C1676) * C92099) *
               C92148 * C92) *
              C92078 * C1385)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4326 * C107 + C4099 * C308 + C4327 * C805 + C4100 * C1022 +
             C4328 * C806 + C4101 * C1023) *
                C181 +
            (C4326 * C182 + C4099 * C394 + C4327 * C890 + C4100 * C1085 +
             C4328 * C891 + C4101 * C1086) *
                C92099) *
               C92148 * C4097 +
           ((C4356 + C4355 + C4354) * C181 + (C4452 + C4453 + C4454) * C92099) *
               C92148 * C92067) *
              C93 -
          (((C4455 + C4456 + C4457) * C92099 + (C4362 + C4361 + C4360) * C181) *
               C92148 * C92067 +
           ((C4454 + C4453 + C4452) * C92099 + (C4354 + C4355 + C4356) * C181) *
               C92148 * C4097) *
              C94 +
          (((C4360 + C4361 + C4362) * C181 + (C4457 + C4456 + C4455) * C92099) *
               C92148 * C4097 +
           ((C4326 * C110 + C4099 * C311 + C4327 * C802 + C4100 * C1019 +
             C4328 * C809 + C4101 * C1026) *
                C181 +
            (C4326 * C185 + C4099 * C397 + C4327 * C887 + C4100 * C1091 +
             C4328 * C894 + C4101 * C1092) *
                C92099) *
               C92148 * C92067) *
              C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C4326 * C107 + C4099 * C308 + C4327 * C805 + C4100 * C1022 +
            C4328 * C806 + C4101 * C1023) *
               C884 +
           (C4326 * C182 + C4099 * C394 + C4327 * C890 + C4100 * C1085 +
            C4328 * C891 + C4101 * C1086) *
               C798 -
           (C4328 * C4882 + C4101 * C5218 + C4327 * C806 + C4100 * C1023 +
            C4326 * C805 + C4099 * C1022) *
               C885 -
           (C4328 * C5012 + C4101 * C5299 + C4327 * C891 + C4100 * C1086 +
            C4326 * C890 + C4099 * C1085) *
               C799 +
           (C4326 * C806 + C4099 * C1023 + C4327 * C4882 + C4100 * C5218 +
            C4328 * C4883 + C4101 * C5219) *
               C886 +
           (C4326 * C891 + C4099 * C1086 + C4327 * C5012 + C4100 * C5299 +
            C4328 * C5014 + C4101 * C5300) *
               C800) *
              C92148 * C4097 +
          ((C4356 + C4355 + C4354) * C884 + (C4452 + C4453 + C4454) * C798 -
           (C4328 * C4881 + C4101 * C5217 + C4327 * C807 + C4100 * C1024 +
            C4326 * C804 + C4099 * C1021) *
               C885 -
           (C4328 * C5013 + C4101 * C5301 + C4327 * C892 + C4100 * C1088 +
            C4326 * C889 + C4099 * C1087) *
               C799 +
           (C4326 * C807 + C4099 * C1024 + C4327 * C4881 + C4100 * C5217 +
            C4328 * C4884 + C4101 * C5220) *
               C886 +
           (C4326 * C892 + C4099 * C1088 + C4327 * C5013 + C4100 * C5301 +
            C4328 * C5015 + C4101 * C5302) *
               C800) *
              C92148 * C92067) *
         C92078 * C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4326 * C107 + C4099 * C308 + C4327 * C805 + C4100 * C1022 +
             C4328 * C806 + C4101 * C1023) *
                C181 +
            (C4326 * C182 + C4099 * C394 + C4327 * C890 + C4100 * C1085 +
             C4328 * C891 + C4101 * C1086) *
                C92099) *
               C92148 * C4097 +
           ((C4356 + C4355 + C4354) * C181 + (C4452 + C4453 + C4454) * C92099) *
               C92148 * C92067) *
              C92078 * C1383 -
          (((C4328 * C5869 + C4101 * C6127 + C4327 * C3514 + C4100 * C3736 +
             C4326 * C1470 + C4099 * C1671) *
                C92099 +
            (C4328 * C5771 + C4101 * C6041 + C4327 * C3432 + C4100 * C3662 +
             C4326 * C1388 + C4099 * C1605) *
                C181) *
               C92148 * C92067 +
           ((C4328 * C5870 + C4101 * C6128 + C4327 * C3513 + C4100 * C3735 +
             C4326 * C1471 + C4099 * C1672) *
                C92099 +
            (C4328 * C5772 + C4101 * C6042 + C4327 * C3431 + C4100 * C3661 +
             C4326 * C1389 + C4099 * C1606) *
                C181) *
               C92148 * C4097) *
              C92078 * C1384 +
          (((C4326 * C1390 + C4099 * C1607 + C4327 * C5773 + C4100 * C6043 +
             C4328 * C5775 + C4101 * C6044) *
                C181 +
            (C4326 * C1472 + C4099 * C1673 + C4327 * C5871 + C4100 * C6129 +
             C4328 * C5873 + C4101 * C6130) *
                C92099) *
               C92148 * C4097 +
           ((C4326 * C1391 + C4099 * C1608 + C4327 * C5774 + C4100 * C6045 +
             C4328 * C5776 + C4101 * C6046) *
                C181 +
            (C4326 * C1473 + C4099 * C1674 + C4327 * C5872 + C4100 * C6131 +
             C4328 * C5874 + C4101 * C6132) *
                C92099) *
               C92148 * C92067) *
              C92078 * C1385)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[22] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C307 * C107 + C92137 * C308) * C244 +
            (C307 * C245 + C92137 * C474) * C92110) *
               C92148 * C89 +
           (C481 + C497) * C92148 * C90 + C503 * C91 + C504 * C92) *
              C798 -
          (((C307 * C953 + C92137 * C1143) * C92110 +
            (C307 * C802 + C92137 * C1019) * C244) *
               C92148 * C92 +
           ((C307 * C954 + C92137 * C1144) * C92110 +
            (C307 * C803 + C92137 * C1020) * C244) *
               C92148 * C91 +
           ((C307 * C955 + C92137 * C1145) * C92110 +
            (C307 * C804 + C92137 * C1021) * C244) *
               C92148 * C90 +
           ((C307 * C956 + C92137 * C1146) * C92110 +
            (C307 * C805 + C92137 * C1022) * C244) *
               C92148 * C89) *
              C799 +
          (((C307 * C806 + C92137 * C1023) * C244 +
            (C307 * C957 + C92137 * C1147) * C92110) *
               C92148 * C89 +
           ((C307 * C807 + C92137 * C1024) * C244 +
            (C307 * C958 + C92137 * C1148) * C92110) *
               C92148 * C90 +
           ((C307 * C808 + C92137 * C1025) * C244 +
            (C307 * C959 + C92137 * C1149) * C92110) *
               C92148 * C91 +
           ((C307 * C809 + C92137 * C1026) * C244 +
            (C307 * C960 + C92137 * C1150) * C92110) *
               C92148 * C92) *
              C800) *
         C92078) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C307 * C107 + C92137 * C308) * C244 +
            (C307 * C245 + C92137 * C474) * C92110) *
               C92148 * C89 +
           (C481 + C497) * C92148 * C90 + C503 * C91 + C504 * C92) *
              C92099 * C93 -
          ((C500 + C492) * C92148 * C92 + (C499 + C487) * C92148 * C91 +
           (C498 + C484) * C92148 * C90 + (C497 + C481) * C92148 * C89) *
              C92099 * C94 +
          (C503 * C89 + C504 * C90 + (C492 + C500) * C92148 * C91 +
           ((C307 * C112 + C92137 * C313) * C244 +
            (C307 * C250 + C92137 * C479) * C92110) *
               C92148 * C92) *
              C92099 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C307 * C107 + C92137 * C308) * C1534 +
           (C307 * C245 + C92137 * C474) * C1383 -
           (C307 * C1389 + C92137 * C1606) * C1535 -
           (C307 * C1540 + C92137 * C1727) * C1384 +
           (C307 * C1390 + C92137 * C1607) * C1536 +
           (C307 * C1541 + C92137 * C1728) * C1385) *
              C92148 * C89 +
          (C337 * C1534 + C493 * C1383 -
           (C307 * C1388 + C92137 * C1605) * C1535 -
           (C307 * C1539 + C92137 * C1729) * C1384 +
           (C307 * C1391 + C92137 * C1608) * C1536 +
           (C307 * C1542 + C92137 * C1730) * C1385) *
              C92148 * C90 +
          (C339 * C1534 + C494 * C1383 -
           (C307 * C1387 + C92137 * C1604) * C1535 -
           (C307 * C1538 + C92137 * C1731) * C1384 +
           (C307 * C1392 + C92137 * C1609) * C1536 +
           (C307 * C1543 + C92137 * C1732) * C1385) *
              C92148 * C91 +
          (C341 * C1534 + C495 * C1383 -
           (C307 * C1386 + C92137 * C1603) * C1535 -
           (C307 * C1537 + C92137 * C1733) * C1384 +
           (C307 * C1393 + C92137 * C1610) * C1536 +
           (C307 * C1544 + C92137 * C1734) * C1385) *
              C92148 * C92) *
         C92099 * C92078) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4326 * C107 + C4099 * C308 + C4327 * C805 + C4100 * C1022 +
             C4328 * C806 + C4101 * C1023) *
                C244 +
            (C4326 * C245 + C4099 * C474 + C4327 * C956 + C4100 * C1146 +
             C4328 * C957 + C4101 * C1147) *
                C92110) *
               C92148 * C4097 +
           ((C4356 + C4355 + C4354) * C244 + (C4544 + C4545 + C4546) * C92110) *
               C92148 * C92067) *
              C92099 * C93 -
          (((C4547 + C4548 + C4549) * C92110 + (C4362 + C4361 + C4360) * C244) *
               C92148 * C92067 +
           ((C4546 + C4545 + C4544) * C92110 + (C4354 + C4355 + C4356) * C244) *
               C92148 * C4097) *
              C92099 * C94 +
          (((C4360 + C4361 + C4362) * C244 + (C4549 + C4548 + C4547) * C92110) *
               C92148 * C4097 +
           ((C4326 * C110 + C4099 * C311 + C4327 * C802 + C4100 * C1019 +
             C4328 * C809 + C4101 * C1026) *
                C244 +
            (C4326 * C248 + C4099 * C477 + C4327 * C953 + C4100 * C1143 +
             C4328 * C960 + C4101 * C1150) *
                C92110) *
               C92148 * C92067) *
              C92099 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4326 * C107 + C4099 * C308 + C4327 * C805 + C4100 * C1022 +
             C4328 * C806 + C4101 * C1023) *
                C244 +
            (C4326 * C245 + C4099 * C474 + C4327 * C956 + C4100 * C1146 +
             C4328 * C957 + C4101 * C1147) *
                C92110) *
               C92148 * C4097 +
           ((C4356 + C4355 + C4354) * C244 + (C4544 + C4545 + C4546) * C92110) *
               C92148 * C92067) *
              C798 -
          (((C4328 * C5113 + C4101 * C5377 + C4327 * C958 + C4100 * C1148 +
             C4326 * C955 + C4099 * C1145) *
                C92110 +
            (C4328 * C4881 + C4101 * C5217 + C4327 * C807 + C4100 * C1024 +
             C4326 * C804 + C4099 * C1021) *
                C244) *
               C92148 * C92067 +
           ((C4328 * C5114 + C4101 * C5378 + C4327 * C957 + C4100 * C1147 +
             C4326 * C956 + C4099 * C1146) *
                C92110 +
            (C4328 * C4882 + C4101 * C5218 + C4327 * C806 + C4100 * C1023 +
             C4326 * C805 + C4099 * C1022) *
                C244) *
               C92148 * C4097) *
              C799 +
          (((C4326 * C806 + C4099 * C1023 + C4327 * C4882 + C4100 * C5218 +
             C4328 * C4883 + C4101 * C5219) *
                C244 +
            (C4326 * C957 + C4099 * C1147 + C4327 * C5114 + C4100 * C5378 +
             C4328 * C5115 + C4101 * C5379) *
                C92110) *
               C92148 * C4097 +
           ((C4326 * C807 + C4099 * C1024 + C4327 * C4881 + C4100 * C5217 +
             C4328 * C4884 + C4101 * C5220) *
                C244 +
            (C4326 * C958 + C4099 * C1148 + C4327 * C5113 + C4100 * C5377 +
             C4328 * C5116 + C4101 * C5380) *
                C92110) *
               C92148 * C92067) *
              C800) *
         C92078) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C4326 * C107 + C4099 * C308 + C4327 * C805 + C4100 * C1022 +
            C4328 * C806 + C4101 * C1023) *
               C1534 +
           (C4326 * C245 + C4099 * C474 + C4327 * C956 + C4100 * C1146 +
            C4328 * C957 + C4101 * C1147) *
               C1383 -
           (C4328 * C5772 + C4101 * C6042 + C4327 * C3431 + C4100 * C3661 +
            C4326 * C1389 + C4099 * C1606) *
               C1535 -
           (C4328 * C5958 + C4101 * C6207 + C4327 * C3587 + C4100 * C3805 +
            C4326 * C1540 + C4099 * C1727) *
               C1384 +
           (C4326 * C1390 + C4099 * C1607 + C4327 * C5773 + C4100 * C6043 +
            C4328 * C5775 + C4101 * C6044) *
               C1536 +
           (C4326 * C1541 + C4099 * C1728 + C4327 * C5955 + C4100 * C6208 +
            C4328 * C5959 + C4101 * C6209) *
               C1385) *
              C92148 * C4097 +
          ((C4356 + C4355 + C4354) * C1534 + (C4544 + C4545 + C4546) * C1383 -
           (C4328 * C5771 + C4101 * C6041 + C4327 * C3432 + C4100 * C3662 +
            C4326 * C1388 + C4099 * C1605) *
               C1535 -
           (C4328 * C5957 + C4101 * C6210 + C4327 * C3588 + C4100 * C3806 +
            C4326 * C1539 + C4099 * C1729) *
               C1384 +
           (C4326 * C1391 + C4099 * C1608 + C4327 * C5774 + C4100 * C6045 +
            C4328 * C5776 + C4101 * C6046) *
               C1536 +
           (C4326 * C1542 + C4099 * C1730 + C4327 * C5956 + C4100 * C6211 +
            C4328 * C5960 + C4101 * C6212) *
               C1385) *
              C92148 * C92067) *
         C92099 * C92078) /
            (p * q * std::sqrt(p + q));
    d2eezx[22] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92148 * C555) * C801 +
            (C554 * C117 + C92148 * C561) * C92078) *
               C89 +
           (C584 * C801 + C585 * C92078) * C90 +
           (C586 * C801 + C587 * C92078) * C91 +
           (C588 * C801 + C589 * C92078) * C92) *
              C92137 * C92110 * C798 -
          (((C554 * C810 + C92148 * C1209) * C92078 +
            (C554 * C802 + C92148 * C1201) * C801) *
               C92 +
           ((C554 * C811 + C92148 * C1210) * C92078 +
            (C554 * C803 + C92148 * C1202) * C801) *
               C91 +
           ((C554 * C812 + C92148 * C1211) * C92078 +
            (C554 * C804 + C92148 * C1203) * C801) *
               C90 +
           ((C554 * C813 + C92148 * C1212) * C92078 +
            (C554 * C805 + C92148 * C1204) * C801) *
               C89) *
              C92137 * C92110 * C799 +
          (((C554 * C806 + C92148 * C1205) * C801 +
            (C554 * C822 + C92148 * C1213) * C92078) *
               C89 +
           ((C554 * C807 + C92148 * C1206) * C801 +
            (C554 * C823 + C92148 * C1214) * C92078) *
               C90 +
           ((C554 * C808 + C92148 * C1207) * C801 +
            (C554 * C824 + C92148 * C1215) * C92078) *
               C91 +
           ((C554 * C809 + C92148 * C1208) * C801 +
            (C554 * C825 + C92148 * C1216) * C92078) *
               C92) *
              C92137 * C92110 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C554 * C107 + C92148 * C555) * C104 +
           (C554 * C117 + C92148 * C561) * C93 - C584 * C105 - C585 * C94 +
           C586 * C106 + C587 * C95) *
              C89 +
          (C584 * C104 + C585 * C93 - C586 * C105 - C587 * C94 + C588 * C106 +
           C589 * C95) *
              C90 +
          (C586 * C104 + C587 * C93 - C588 * C105 - C589 * C94 + C590 * C106 +
           C591 * C95) *
              C91 +
          (C588 * C104 + C589 * C93 - C590 * C105 - C591 * C94 +
           (C554 * C112 + C92148 * C560) * C106 +
           (C554 * C124 + C92148 * C566) * C95) *
              C92) *
         C92137 * C92110 * C92099) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92148 * C555) * C801 +
            (C554 * C117 + C92148 * C561) * C92078) *
               C89 +
           (C584 * C801 + C585 * C92078) * C90 +
           (C586 * C801 + C587 * C92078) * C91 +
           (C588 * C801 + C589 * C92078) * C92) *
              C92137 * C1383 -
          (((C554 * C1394 + C92148 * C1793) * C92078 +
            (C554 * C1386 + C92148 * C1785) * C801) *
               C92 +
           ((C554 * C1395 + C92148 * C1794) * C92078 +
            (C554 * C1387 + C92148 * C1786) * C801) *
               C91 +
           ((C554 * C1396 + C92148 * C1795) * C92078 +
            (C554 * C1388 + C92148 * C1787) * C801) *
               C90 +
           ((C554 * C1397 + C92148 * C1796) * C92078 +
            (C554 * C1389 + C92148 * C1788) * C801) *
               C89) *
              C92137 * C1384 +
          (((C554 * C1390 + C92148 * C1789) * C801 +
            (C554 * C1406 + C92148 * C1797) * C92078) *
               C89 +
           ((C554 * C1391 + C92148 * C1790) * C801 +
            (C554 * C1407 + C92148 * C1798) * C92078) *
               C90 +
           ((C554 * C1392 + C92148 * C1791) * C801 +
            (C554 * C1408 + C92148 * C1799) * C92078) *
               C91 +
           ((C554 * C1393 + C92148 * C1792) * C801 +
            (C554 * C1409 + C92148 * C1800) * C92078) *
               C92) *
              C92137 * C1385) *
         C92099) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92148 * C555) * C104 +
            (C554 * C117 + C92148 * C561) * C93 - C584 * C105 - C585 * C94 +
            C586 * C106 + C587 * C95) *
               C4097 +
           (C584 * C104 + C585 * C93 - C586 * C105 - C587 * C94 + C588 * C106 +
            C589 * C95) *
               C92067) *
              C4099 +
          (((C554 * C805 + C92148 * C1204) * C104 +
            (C554 * C813 + C92148 * C1212) * C93 - C2468 * C105 - C2469 * C94 +
            C2470 * C106 + C2471 * C95) *
               C4097 +
           (C2468 * C104 + C2469 * C93 - C2470 * C105 - C2471 * C94 +
            C2472 * C106 + C2473 * C95) *
               C92067) *
              C4100 +
          (((C554 * C806 + C92148 * C1205) * C104 +
            (C554 * C822 + C92148 * C1213) * C93 - C4632 * C105 - C4633 * C94 +
            C4634 * C106 + C4635 * C95) *
               C4097 +
           (C4632 * C104 + C4633 * C93 - C4634 * C105 - C4635 * C94 +
            (C554 * C809 + C92148 * C1208) * C106 +
            (C554 * C825 + C92148 * C1216) * C95) *
               C92067) *
              C4101) *
         C92110 * C92099) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92148 * C555) * C801 +
             (C554 * C117 + C92148 * C561) * C92078) *
                C4097 +
            (C584 * C801 + C585 * C92078) * C92067) *
               C4099 +
           ((C5493 + C5494) * C4097 + (C5468 + C5469) * C92067) * C4100 +
           C5504 * C4101) *
              C92110 * C798 -
          (((C5498 + C5499) * C92067 + (C5500 + C5501) * C4097) * C4101 +
           ((C5475 + C5474) * C92067 + (C5496 + C5495) * C4097) * C4100 +
           ((C5469 + C5468) * C92067 + (C5494 + C5493) * C4097) * C4099) *
              C92110 * C799 +
          (C5504 * C4099 +
           ((C5501 + C5500) * C4097 + (C5499 + C5498) * C92067) * C4100 +
           (((C554 * C4883 + C92148 * C5457) * C801 +
             (C554 * C4891 + C92148 * C5461) * C92078) *
                C4097 +
            ((C554 * C4884 + C92148 * C5458) * C801 +
             (C554 * C4892 + C92148 * C5462) * C92078) *
                C92067) *
               C4101) *
              C92110 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92148 * C555) * C801 +
             (C554 * C117 + C92148 * C561) * C92078) *
                C4097 +
            (C584 * C801 + C585 * C92078) * C92067) *
               C4099 +
           ((C5493 + C5494) * C4097 + (C5468 + C5469) * C92067) * C4100 +
           C5504 * C4101) *
              C1383 -
          ((((C554 * C5777 + C92148 * C6293) * C92078 +
             (C554 * C5771 + C92148 * C6287) * C801) *
                C92067 +
            ((C554 * C5778 + C92148 * C6294) * C92078 +
             (C554 * C5772 + C92148 * C6288) * C801) *
                C4097) *
               C4101 +
           (((C554 * C3440 + C92148 * C3880) * C92078 +
             (C554 * C3432 + C92148 * C3876) * C801) *
                C92067 +
            ((C554 * C3439 + C92148 * C3879) * C92078 +
             (C554 * C3431 + C92148 * C3875) * C801) *
                C4097) *
               C4100 +
           ((C3191 * C92078 + C3190 * C801) * C92067 +
            ((C554 * C1397 + C92148 * C1796) * C92078 +
             (C554 * C1389 + C92148 * C1788) * C801) *
                C4097) *
               C4099) *
              C1384 +
          ((((C554 * C1390 + C92148 * C1789) * C801 +
             (C554 * C1406 + C92148 * C1797) * C92078) *
                C4097 +
            ((C554 * C1391 + C92148 * C1790) * C801 +
             (C554 * C1407 + C92148 * C1798) * C92078) *
                C92067) *
               C4099 +
           (((C554 * C5773 + C92148 * C6289) * C801 +
             (C554 * C5783 + C92148 * C6295) * C92078) *
                C4097 +
            ((C554 * C5774 + C92148 * C6290) * C801 +
             (C554 * C5784 + C92148 * C6296) * C92078) *
                C92067) *
               C4100 +
           (((C554 * C5775 + C92148 * C6291) * C801 +
             (C554 * C5787 + C92148 * C6297) * C92078) *
                C4097 +
            ((C554 * C5776 + C92148 * C6292) * C801 +
             (C554 * C5788 + C92148 * C6298) * C92078) *
                C92067) *
               C4101) *
              C1385) *
         C92099) /
            (p * q * std::sqrt(p + q));
    d2eezy[22] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C554 * C107 + C92148 * C555) * C884 +
           (C554 * C182 + C92148 * C641) * C798 -
           (C554 * C805 + C92148 * C1204) * C885 -
           (C554 * C890 + C92148 * C1267) * C799 +
           (C554 * C806 + C92148 * C1205) * C886 +
           (C554 * C891 + C92148 * C1268) * C800) *
              C89 +
          (C584 * C884 + C660 * C798 - (C554 * C804 + C92148 * C1203) * C885 -
           (C554 * C889 + C92148 * C1269) * C799 +
           (C554 * C807 + C92148 * C1206) * C886 +
           (C554 * C892 + C92148 * C1270) * C800) *
              C90 +
          (C586 * C884 + C661 * C798 - (C554 * C803 + C92148 * C1202) * C885 -
           (C554 * C888 + C92148 * C1271) * C799 +
           (C554 * C808 + C92148 * C1207) * C886 +
           (C554 * C893 + C92148 * C1272) * C800) *
              C91 +
          (C588 * C884 + C662 * C798 - (C554 * C802 + C92148 * C1201) * C885 -
           (C554 * C887 + C92148 * C1273) * C799 +
           (C554 * C809 + C92148 * C1208) * C886 +
           (C554 * C894 + C92148 * C1274) * C800) *
              C92) *
         C92137 * C92078 * C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92148 * C555) * C181 +
            (C554 * C182 + C92148 * C641) * C92099) *
               C89 +
           (C648 + C664) * C90 + C668 * C91 + C669 * C92) *
              C92137 * C93 -
          ((C667 + C659) * C92 + (C666 + C654) * C91 + (C665 + C651) * C90 +
           (C664 + C648) * C89) *
              C92137 * C94 +
          (C668 * C89 + C669 * C90 + (C659 + C667) * C91 +
           ((C554 * C112 + C92148 * C560) * C181 +
            (C554 * C187 + C92148 * C646) * C92099) *
               C92) *
              C92137 * C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92148 * C555) * C181 +
            (C554 * C182 + C92148 * C641) * C92099) *
               C89 +
           (C648 + C664) * C90 + C668 * C91 + C669 * C92) *
              C92137 * C92078 * C1383 -
          (((C554 * C1468 + C92148 * C1851) * C92099 +
            (C554 * C1386 + C92148 * C1785) * C181) *
               C92 +
           ((C554 * C1469 + C92148 * C1852) * C92099 +
            (C554 * C1387 + C92148 * C1786) * C181) *
               C91 +
           ((C554 * C1470 + C92148 * C1853) * C92099 +
            (C554 * C1388 + C92148 * C1787) * C181) *
               C90 +
           ((C554 * C1471 + C92148 * C1854) * C92099 +
            (C554 * C1389 + C92148 * C1788) * C181) *
               C89) *
              C92137 * C92078 * C1384 +
          (((C554 * C1390 + C92148 * C1789) * C181 +
            (C554 * C1472 + C92148 * C1855) * C92099) *
               C89 +
           ((C554 * C1391 + C92148 * C1790) * C181 +
            (C554 * C1473 + C92148 * C1856) * C92099) *
               C90 +
           ((C554 * C1392 + C92148 * C1791) * C181 +
            (C554 * C1474 + C92148 * C1857) * C92099) *
               C91 +
           ((C554 * C1393 + C92148 * C1792) * C181 +
            (C554 * C1475 + C92148 * C1858) * C92099) *
               C92) *
              C92137 * C92078 * C1385)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92148 * C555) * C181 +
             (C554 * C182 + C92148 * C641) * C92099) *
                C4097 +
            (C648 + C664) * C92067) *
               C4099 +
           (((C554 * C805 + C92148 * C1204) * C181 +
             (C554 * C890 + C92148 * C1267) * C92099) *
                C4097 +
            (C4710 + C4711) * C92067) *
               C4100 +
           (((C554 * C806 + C92148 * C1205) * C181 +
             (C554 * C891 + C92148 * C1268) * C92099) *
                C4097 +
            (C4712 + C4722) * C92067) *
               C4101) *
              C93 -
          (((C4723 + C4717) * C92067 + (C4722 + C4712) * C4097) * C4101 +
           ((C4718 + C4719) * C92067 + (C4711 + C4710) * C4097) * C4100 +
           ((C665 + C651) * C92067 + (C664 + C648) * C4097) * C4099) *
              C94 +
          ((C668 * C4097 + C669 * C92067) * C4099 +
           ((C4719 + C4718) * C4097 +
            (C2472 * C181 + C2558 * C92099) * C92067) *
               C4100 +
           ((C4717 + C4723) * C4097 +
            ((C554 * C809 + C92148 * C1208) * C181 +
             (C554 * C894 + C92148 * C1274) * C92099) *
                C92067) *
               C4101) *
              C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92148 * C555) * C884 +
            (C554 * C182 + C92148 * C641) * C798 - C5484 * C885 - C5591 * C799 +
            C5486 * C886 + C5592 * C800) *
               C4097 +
           (C584 * C884 + C660 * C798 - C2468 * C885 - C2556 * C799 +
            C4632 * C886 + C4720 * C800) *
               C92067) *
              C4099 +
          ((C5484 * C884 + C5591 * C798 - C5486 * C885 - C5592 * C799 +
            C5492 * C886 + C5593 * C800) *
               C4097 +
           (C2468 * C884 + C2556 * C798 - C4632 * C885 - C4720 * C799 +
            C5490 * C886 + C5594 * C800) *
               C92067) *
              C4100 +
          ((C5486 * C884 + C5592 * C798 - C5492 * C885 - C5593 * C799 +
            (C554 * C4883 + C92148 * C5457) * C886 +
            (C554 * C5014 + C92148 * C5580) * C800) *
               C4097 +
           (C4632 * C884 + C4720 * C798 - C5490 * C885 - C5594 * C799 +
            (C554 * C4884 + C92148 * C5458) * C886 +
            (C554 * C5015 + C92148 * C5581) * C800) *
               C92067) *
              C4101) *
         C92078 * C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92148 * C555) * C181 +
             (C554 * C182 + C92148 * C641) * C92099) *
                C4097 +
            (C648 + C664) * C92067) *
               C4099 +
           ((C5484 * C181 + C5591 * C92099) * C4097 +
            (C4710 + C4711) * C92067) *
               C4100 +
           ((C5486 * C181 + C5592 * C92099) * C4097 +
            (C4712 + C4722) * C92067) *
               C4101) *
              C92078 * C1383 -
          ((((C554 * C5869 + C92148 * C6373) * C92099 +
             (C554 * C5771 + C92148 * C6287) * C181) *
                C92067 +
            ((C554 * C5870 + C92148 * C6374) * C92099 +
             (C554 * C5772 + C92148 * C6288) * C181) *
                C4097) *
               C4101 +
           (((C554 * C3514 + C92148 * C3950) * C92099 +
             (C554 * C3432 + C92148 * C3876) * C181) *
                C92067 +
            ((C554 * C3513 + C92148 * C3949) * C92099 +
             (C554 * C3431 + C92148 * C3875) * C181) *
                C4097) *
               C4100 +
           ((C3275 + C3263) * C92067 +
            ((C554 * C1471 + C92148 * C1854) * C92099 +
             (C554 * C1389 + C92148 * C1788) * C181) *
                C4097) *
               C4099) *
              C92078 * C1384 +
          ((((C554 * C1390 + C92148 * C1789) * C181 +
             (C554 * C1472 + C92148 * C1855) * C92099) *
                C4097 +
            ((C554 * C1391 + C92148 * C1790) * C181 +
             (C554 * C1473 + C92148 * C1856) * C92099) *
                C92067) *
               C4099 +
           (((C554 * C5773 + C92148 * C6289) * C181 +
             (C554 * C5871 + C92148 * C6375) * C92099) *
                C4097 +
            ((C554 * C5774 + C92148 * C6290) * C181 +
             (C554 * C5872 + C92148 * C6376) * C92099) *
                C92067) *
               C4100 +
           (((C554 * C5775 + C92148 * C6291) * C181 +
             (C554 * C5873 + C92148 * C6377) * C92099) *
                C4097 +
            ((C554 * C5776 + C92148 * C6292) * C181 +
             (C554 * C5874 + C92148 * C6378) * C92099) *
                C92067) *
               C4101) *
              C92078 * C1385)) /
            (p * q * std::sqrt(p + q));
    d2eezz[22] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92148 * C555) * C244 +
            (C554 * C245 + C92148 * C719) * C92110) *
               C89 +
           (C726 + C742) * C90 + C746 * C91 + C747 * C92) *
              C92137 * C798 -
          (((C554 * C953 + C92148 * C1325) * C92110 +
            (C554 * C802 + C92148 * C1201) * C244) *
               C92 +
           ((C554 * C954 + C92148 * C1326) * C92110 +
            (C554 * C803 + C92148 * C1202) * C244) *
               C91 +
           ((C554 * C955 + C92148 * C1327) * C92110 +
            (C554 * C804 + C92148 * C1203) * C244) *
               C90 +
           ((C554 * C956 + C92148 * C1328) * C92110 +
            (C554 * C805 + C92148 * C1204) * C244) *
               C89) *
              C92137 * C799 +
          (((C554 * C806 + C92148 * C1205) * C244 +
            (C554 * C957 + C92148 * C1329) * C92110) *
               C89 +
           ((C554 * C807 + C92148 * C1206) * C244 +
            (C554 * C958 + C92148 * C1330) * C92110) *
               C90 +
           ((C554 * C808 + C92148 * C1207) * C244 +
            (C554 * C959 + C92148 * C1331) * C92110) *
               C91 +
           ((C554 * C809 + C92148 * C1208) * C244 +
            (C554 * C960 + C92148 * C1332) * C92110) *
               C92) *
              C92137 * C800) *
         C92078) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92148 * C555) * C244 +
            (C554 * C245 + C92148 * C719) * C92110) *
               C89 +
           (C726 + C742) * C90 + C746 * C91 + C747 * C92) *
              C92137 * C92099 * C93 -
          ((C745 + C737) * C92 + (C744 + C732) * C91 + (C743 + C729) * C90 +
           (C742 + C726) * C89) *
              C92137 * C92099 * C94 +
          (C746 * C89 + C747 * C90 + (C737 + C745) * C91 +
           ((C554 * C112 + C92148 * C560) * C244 +
            (C554 * C250 + C92148 * C724) * C92110) *
               C92) *
              C92137 * C92099 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C554 * C107 + C92148 * C555) * C1534 +
           (C554 * C245 + C92148 * C719) * C1383 -
           (C554 * C1389 + C92148 * C1788) * C1535 -
           (C554 * C1540 + C92148 * C1909) * C1384 +
           (C554 * C1390 + C92148 * C1789) * C1536 +
           (C554 * C1541 + C92148 * C1910) * C1385) *
              C89 +
          (C584 * C1534 + C738 * C1383 -
           (C554 * C1388 + C92148 * C1787) * C1535 -
           (C554 * C1539 + C92148 * C1911) * C1384 +
           (C554 * C1391 + C92148 * C1790) * C1536 +
           (C554 * C1542 + C92148 * C1912) * C1385) *
              C90 +
          (C586 * C1534 + C739 * C1383 -
           (C554 * C1387 + C92148 * C1786) * C1535 -
           (C554 * C1538 + C92148 * C1913) * C1384 +
           (C554 * C1392 + C92148 * C1791) * C1536 +
           (C554 * C1543 + C92148 * C1914) * C1385) *
              C91 +
          (C588 * C1534 + C740 * C1383 -
           (C554 * C1386 + C92148 * C1785) * C1535 -
           (C554 * C1537 + C92148 * C1915) * C1384 +
           (C554 * C1393 + C92148 * C1792) * C1536 +
           (C554 * C1544 + C92148 * C1916) * C1385) *
              C92) *
         C92137 * C92099 * C92078) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92148 * C555) * C244 +
             (C554 * C245 + C92148 * C719) * C92110) *
                C4097 +
            (C726 + C742) * C92067) *
               C4099 +
           (((C554 * C805 + C92148 * C1204) * C244 +
             (C554 * C956 + C92148 * C1328) * C92110) *
                C4097 +
            (C2637 + C2643) * C92067) *
               C4100 +
           (((C554 * C806 + C92148 * C1205) * C244 +
             (C554 * C957 + C92148 * C1329) * C92110) *
                C4097 +
            (C4798 + C4806) * C92067) *
               C4101) *
              C92099 * C93 -
          (((C4807 + C4803) * C92067 + (C4806 + C4798) * C4097) * C4101 +
           ((C2642 + C2634) * C92067 + (C2643 + C2637) * C4097) * C4100 +
           ((C743 + C729) * C92067 + (C742 + C726) * C4097) * C4099) *
              C92099 * C94 +
          ((C746 * C4097 + C747 * C92067) * C4099 +
           ((C2634 + C2642) * C4097 + (C2631 + C2641) * C92067) * C4100 +
           ((C4803 + C4807) * C4097 +
            ((C554 * C809 + C92148 * C1208) * C244 +
             (C554 * C960 + C92148 * C1332) * C92110) *
                C92067) *
               C4101) *
              C92099 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92148 * C555) * C244 +
             (C554 * C245 + C92148 * C719) * C92110) *
                C4097 +
            (C726 + C742) * C92067) *
               C4099 +
           ((C5673 + C5691) * C4097 + (C2637 + C2643) * C92067) * C4100 +
           C5697 * C4101) *
              C798 -
          (((C5693 + C5682) * C92067 + (C5694 + C5685) * C4097) * C4101 +
           ((C4806 + C4798) * C92067 + (C5692 + C5676) * C4097) * C4100 +
           ((C2643 + C2637) * C92067 + (C5691 + C5673) * C4097) * C4099) *
              C799 +
          (C5697 * C4099 +
           ((C5685 + C5694) * C4097 + (C5682 + C5693) * C92067) * C4100 +
           (((C554 * C4883 + C92148 * C5457) * C244 +
             (C554 * C5115 + C92148 * C5670) * C92110) *
                C4097 +
            ((C554 * C4884 + C92148 * C5458) * C244 +
             (C554 * C5116 + C92148 * C5671) * C92110) *
                C92067) *
               C4101) *
              C800) *
         C92078) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92148 * C555) * C1534 +
            (C554 * C245 + C92148 * C719) * C1383 -
            (C554 * C1389 + C92148 * C1788) * C1535 -
            (C554 * C1540 + C92148 * C1909) * C1384 +
            (C554 * C1390 + C92148 * C1789) * C1536 +
            (C554 * C1541 + C92148 * C1910) * C1385) *
               C4097 +
           (C584 * C1534 + C738 * C1383 - C3190 * C1535 - C3360 * C1384 +
            (C554 * C1391 + C92148 * C1790) * C1536 +
            (C554 * C1542 + C92148 * C1912) * C1385) *
               C92067) *
              C4099 +
          ((C5484 * C1534 + C5686 * C1383 -
            (C554 * C3431 + C92148 * C3875) * C1535 -
            (C554 * C3587 + C92148 * C4019) * C1384 +
            (C554 * C5773 + C92148 * C6289) * C1536 +
            (C554 * C5955 + C92148 * C6453) * C1385) *
               C4097 +
           (C2468 * C1534 + C2640 * C1383 -
            (C554 * C3432 + C92148 * C3876) * C1535 -
            (C554 * C3588 + C92148 * C4020) * C1384 +
            (C554 * C5774 + C92148 * C6290) * C1536 +
            (C554 * C5956 + C92148 * C6454) * C1385) *
               C92067) *
              C4100 +
          ((C5486 * C1534 + C5687 * C1383 -
            (C554 * C5772 + C92148 * C6288) * C1535 -
            (C554 * C5958 + C92148 * C6455) * C1384 +
            (C554 * C5775 + C92148 * C6291) * C1536 +
            (C554 * C5959 + C92148 * C6456) * C1385) *
               C4097 +
           (C4632 * C1534 + C4804 * C1383 -
            (C554 * C5771 + C92148 * C6287) * C1535 -
            (C554 * C5957 + C92148 * C6457) * C1384 +
            (C554 * C5776 + C92148 * C6292) * C1536 +
            (C554 * C5960 + C92148 * C6458) * C1385) *
               C92067) *
              C4101) *
         C92099 * C92078) /
            (p * q * std::sqrt(p + q));
    d2eexx[23] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C100 * C107 + C89 * C113 + C101 * C108 + C90 * C114 + C102 * C109 +
            C91 * C115 + C103 * C110 + C92 * C116) *
               C1987 +
           (C100 * C117 + C89 * C125 + C101 * C118 + C90 * C126 + C102 * C119 +
            C91 * C127 + C103 * C120 + C92 * C128) *
               C1983 -
           (C103 * C111 + C92 * C121 + C102 * C110 + C91 * C116 + C101 * C109 +
            C90 * C115 + C100 * C108 + C89 * C114) *
               C1988 -
           (C103 * C122 + C92 * C129 + C102 * C120 + C91 * C128 + C101 * C119 +
            C90 * C127 + C100 * C118 + C89 * C126) *
               C1984) *
              C92137 * C92148 * C2709 +
          ((C100 * C1388 + C89 * C1400 + C101 * C1387 + C90 * C1399 +
            C102 * C1386 + C91 * C1398 + C103 * C2711 + C92 * C2712) *
               C1988 -
           ((C103 * C1394 + C92 * C1410 + C102 * C1395 + C91 * C1411 +
             C101 * C1396 + C90 * C1412 + C100 * C1397 + C89 * C1413) *
                C1983 +
            (C103 * C1386 + C92 * C1398 + C102 * C1387 + C91 * C1399 +
             C101 * C1388 + C90 * C1400 + C100 * C1389 + C89 * C1401) *
                C1987) +
           (C100 * C1396 + C89 * C1412 + C101 * C1395 + C90 * C1411 +
            C102 * C1394 + C91 * C1410 + C103 * C2713 + C92 * C2714) *
               C1984) *
              C92137 * C92148 * C2710) *
         C92099) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C92067 * C114) *
                C1987 +
            (C4102 * C117 + C4097 * C125 + C4103 * C118 + C92067 * C126) *
                C1983 -
            (C4103 * C109 + C92067 * C115 + C4102 * C108 + C4097 * C114) *
                C1988 -
            (C4103 * C119 + C92067 * C127 + C4102 * C118 + C4097 * C126) *
                C1984) *
               C4099 +
           ((C4922 + C4923) * C1987 + (C4924 + C4925) * C1983 -
            (C6578 + C6579) * C1988 - (C6580 + C6581) * C1984) *
               C4100 +
           (C4934 * C1987 + C4935 * C1983 - (C6582 + C6583) * C1988 -
            (C6584 + C6585) * C1984) *
               C4101) *
              C92148 * C2709 +
          (((C4102 * C1388 + C4097 * C1400 + C4103 * C1387 + C92067 * C1399) *
                C1988 -
            ((C4103 * C1396 + C92067 * C1412 + C4102 * C1397 + C4097 * C1413) *
                 C1983 +
             (C4103 * C1388 + C92067 * C1400 + C4102 * C1389 + C4097 * C1401) *
                 C1987) +
            (C4102 * C1396 + C4097 * C1412 + C4103 * C1395 + C92067 * C1411) *
                C1984) *
               C4099 +
           ((C4102 * C3432 + C4097 * C3436 + C4103 * C3433 + C92067 * C3437) *
                C1988 -
            ((C4103 * C3440 + C92067 * C3444 + C4102 * C3439 + C4097 * C3443) *
                 C1983 +
             (C4103 * C3432 + C92067 * C3436 + C4102 * C3431 + C4097 * C3435) *
                 C1987) +
            (C4102 * C3440 + C4097 * C3444 + C4103 * C3441 + C92067 * C3445) *
                C1984) *
               C4100 +
           ((C4102 * C5771 + C4097 * C5779 + C4103 * C7566 + C92067 * C7567) *
                C1988 -
            ((C4103 * C5777 + C92067 * C5789 + C4102 * C5778 + C4097 * C5790) *
                 C1983 +
             (C4103 * C5771 + C92067 * C5779 + C4102 * C5772 + C4097 * C5780) *
                 C1987) +
            (C4102 * C5777 + C4097 * C5789 + C4103 * C7568 + C92067 * C7569) *
                C1984) *
               C4101) *
              C92148 * C2710) *
         C92099) /
            (p * q * std::sqrt(p + q));
    d2eexy[23] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C100 * C107 + C89 * C113 + C101 * C108 + C90 * C114 + C102 * C109 +
             C91 * C115 + C103 * C110 + C92 * C116) *
                C181 +
            (C100 * C182 + C89 * C188 + C101 * C183 + C90 * C189 + C102 * C184 +
             C91 * C190 + C103 * C185 + C92 * C191) *
                C92099) *
               C92137 * C92148 * C1983 -
           ((C103 * C186 + C92 * C192 + C102 * C185 + C91 * C191 + C101 * C184 +
             C90 * C190 + C100 * C183 + C89 * C189) *
                C92099 +
            (C103 * C111 + C92 * C121 + C102 * C110 + C91 * C116 + C101 * C109 +
             C90 * C115 + C100 * C108 + C89 * C114) *
                C181) *
               C92137 * C92148 * C1984) *
              C2709 +
          (((C100 * C1388 + C89 * C1400 + C101 * C1387 + C90 * C1399 +
             C102 * C1386 + C91 * C1398 + C103 * C2711 + C92 * C2712) *
                C181 +
            (C100 * C1470 + C89 * C1478 + C101 * C1469 + C90 * C1477 +
             C102 * C1468 + C91 * C1476 + C103 * C2781 + C92 * C2782) *
                C92099) *
               C92137 * C92148 * C1984 -
           ((C103 * C1468 + C92 * C1476 + C102 * C1469 + C91 * C1477 +
             C101 * C1470 + C90 * C1478 + C100 * C1471 + C89 * C1479) *
                C92099 +
            (C103 * C1386 + C92 * C1398 + C102 * C1387 + C91 * C1399 +
             C101 * C1388 + C90 * C1400 + C100 * C1389 + C89 * C1401) *
                C181) *
               C92137 * C92148 * C1983) *
              C2710)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C92067 * C114) *
                 C181 +
             (C4102 * C182 + C4097 * C188 + C4103 * C183 + C92067 * C189) *
                 C92099) *
                C4099 +
            ((C4922 + C4923) * C181 + (C5034 + C5033) * C92099) * C4100 +
            (C4934 * C181 + C5039 * C92099) * C4101) *
               C92148 * C1983 -
           (((C6697 + C6696) * C92099 + (C6582 + C6583) * C181) * C4101 +
            ((C6695 + C6694) * C92099 + (C6578 + C6579) * C181) * C4100 +
            ((C4103 * C184 + C92067 * C190 + C4102 * C183 + C4097 * C189) *
                 C92099 +
             (C4103 * C109 + C92067 * C115 + C4102 * C108 + C4097 * C114) *
                 C181) *
                C4099) *
               C92148 * C1984) *
              C2709 +
          ((((C4102 * C1388 + C4097 * C1400 + C4103 * C1387 + C92067 * C1399) *
                 C181 +
             (C4102 * C1470 + C4097 * C1478 + C4103 * C1469 + C92067 * C1477) *
                 C92099) *
                C4099 +
            ((C4102 * C3432 + C4097 * C3436 + C4103 * C3433 + C92067 * C3437) *
                 C181 +
             (C4102 * C3514 + C4097 * C3518 + C4103 * C3515 + C92067 * C3519) *
                 C92099) *
                C4100 +
            ((C4102 * C5771 + C4097 * C5779 + C4103 * C7566 + C92067 * C7567) *
                 C181 +
             (C4102 * C5869 + C4097 * C5875 + C4103 * C7668 + C92067 * C7669) *
                 C92099) *
                C4101) *
               C92148 * C1984 -
           (((C4103 * C5869 + C92067 * C5875 + C4102 * C5870 + C4097 * C5876) *
                 C92099 +
             (C4103 * C5771 + C92067 * C5779 + C4102 * C5772 + C4097 * C5780) *
                 C181) *
                C4101 +
            ((C4103 * C3514 + C92067 * C3518 + C4102 * C3513 + C4097 * C3517) *
                 C92099 +
             (C4103 * C3432 + C92067 * C3436 + C4102 * C3431 + C4097 * C3435) *
                 C181) *
                C4100 +
            ((C4103 * C1470 + C92067 * C1478 + C4102 * C1471 + C4097 * C1479) *
                 C92099 +
             (C4103 * C1388 + C92067 * C1400 + C4102 * C1389 + C4097 * C1401) *
                 C181) *
                C4099) *
               C92148 * C1983) *
              C2710)) /
            (p * q * std::sqrt(p + q));
    d2eexz[23] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C100 * C107 + C89 * C113 + C101 * C108 + C90 * C114 + C102 * C109 +
            C91 * C115 + C103 * C110 + C92 * C116) *
               C2849 +
           (C100 * C245 + C89 * C251 + C101 * C246 + C90 * C252 + C102 * C247 +
            C91 * C253 + C103 * C248 + C92 * C254) *
               C2709 -
           (C103 * C1386 + C92 * C1398 + C102 * C1387 + C91 * C1399 +
            C101 * C1388 + C90 * C1400 + C100 * C1389 + C89 * C1401) *
               C2850 -
           (C103 * C1537 + C92 * C1545 + C102 * C1538 + C91 * C1546 +
            C101 * C1539 + C90 * C1547 + C100 * C1540 + C89 * C1548) *
               C2710) *
              C92137 * C92148 * C92099 * C1983 +
          ((C100 * C1388 + C89 * C1400 + C101 * C1387 + C90 * C1399 +
            C102 * C1386 + C91 * C1398 + C103 * C2711 + C92 * C2712) *
               C2850 -
           ((C103 * C249 + C92 * C255 + C102 * C248 + C91 * C254 + C101 * C247 +
             C90 * C253 + C100 * C246 + C89 * C252) *
                C2709 +
            (C103 * C111 + C92 * C121 + C102 * C110 + C91 * C116 + C101 * C109 +
             C90 * C115 + C100 * C108 + C89 * C114) *
                C2849) +
           (C100 * C1539 + C89 * C1547 + C101 * C1538 + C90 * C1546 +
            C102 * C1537 + C91 * C1545 + C103 * C2851 + C92 * C2852) *
               C2710) *
              C92137 * C92148 * C92099 * C1984)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C92067 * C114) *
                C2849 +
            (C4102 * C245 + C4097 * C251 + C4103 * C246 + C92067 * C252) *
                C2709 -
            (C4103 * C1388 + C92067 * C1400 + C4102 * C1389 + C4097 * C1401) *
                C2850 -
            (C4103 * C1539 + C92067 * C1547 + C4102 * C1540 + C4097 * C1548) *
                C2710) *
               C4099 +
           ((C4922 + C4923) * C2849 + (C5135 + C5136) * C2709 -
            (C4103 * C3432 + C92067 * C3436 + C4102 * C3431 + C4097 * C3435) *
                C2850 -
            (C4103 * C3588 + C92067 * C3592 + C4102 * C3587 + C4097 * C3591) *
                C2710) *
               C4100 +
           (C4934 * C2849 + C5141 * C2709 -
            (C4103 * C5771 + C92067 * C5779 + C4102 * C5772 + C4097 * C5780) *
                C2850 -
            (C4103 * C5957 + C92067 * C5963 + C4102 * C5958 + C4097 * C5964) *
                C2710) *
               C4101) *
              C92148 * C92099 * C1983 +
          (((C4102 * C1388 + C4097 * C1400 + C4103 * C1387 + C92067 * C1399) *
                C2850 -
            ((C4103 * C247 + C92067 * C253 + C4102 * C246 + C4097 * C252) *
                 C2709 +
             (C4103 * C109 + C92067 * C115 + C4102 * C108 + C4097 * C114) *
                 C2849) +
            (C4102 * C1539 + C4097 * C1547 + C4103 * C1538 + C92067 * C1546) *
                C2710) *
               C4099 +
           ((C4102 * C3432 + C4097 * C3436 + C4103 * C3433 + C92067 * C3437) *
                C2850 -
            ((C6807 + C6806) * C2709 + (C6578 + C6579) * C2849) +
            (C4102 * C3588 + C4097 * C3592 + C4103 * C3589 + C92067 * C3593) *
                C2710) *
               C4100 +
           ((C4102 * C5771 + C4097 * C5779 + C4103 * C7566 + C92067 * C7567) *
                C2850 -
            ((C6809 + C6808) * C2709 + (C6582 + C6583) * C2849) +
            (C4102 * C5957 + C4097 * C5963 + C4103 * C7768 + C92067 * C7769) *
                C2710) *
               C4101) *
              C92148 * C92099 * C1984)) /
            (p * q * std::sqrt(p + q));
    d2eeyx[23] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C307 * C107 + C92137 * C308) * C1987 +
            (C307 * C117 + C92137 * C314) * C1983 - C337 * C1988 -
            C338 * C1984) *
               C92148 * C89 +
           (C337 * C1987 + C338 * C1983 - C339 * C1988 - C340 * C1984) *
               C92148 * C90 +
           (C339 * C1987 + C340 * C1983 - C341 * C1988 - C342 * C1984) *
               C92148 * C91 +
           (C341 * C1987 + C342 * C1983 - C343 * C1988 - C344 * C1984) *
               C92148 * C92) *
              C2709 +
          ((C2934 * C1988 -
            ((C307 * C1397 + C92137 * C1614) * C1983 +
             (C307 * C1389 + C92137 * C1606) * C1987) +
            C2935 * C1984) *
               C92148 * C89 +
           (C2936 * C1988 - (C2935 * C1983 + C2934 * C1987) + C2937 * C1984) *
               C92148 * C90 +
           (C2938 * C1988 - (C2937 * C1983 + C2936 * C1987) + C2939 * C1984) *
               C92148 * C91 +
           ((C307 * C2711 + C92137 * C2919) * C1988 -
            (C2939 * C1983 + C2938 * C1987) +
            (C307 * C2713 + C92137 * C2920) * C1984) *
               C92148 * C92) *
              C2710) *
         C92099) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C4326 * C107 + C4099 * C308 + C4327 * C805 + C4100 * C1022 +
             C4328 * C806 + C4101 * C1023) *
                C1987 +
            (C4326 * C117 + C4099 * C314 + C4327 * C813 + C4100 * C1030 +
             C4328 * C822 + C4101 * C1031) *
                C1983 -
            (C4354 + C4355 + C4356) * C1988 - (C4357 + C4358 + C4359) * C1984) *
               C92148 * C4097 +
           ((C4356 + C4355 + C4354) * C1987 + (C4359 + C4358 + C4357) * C1983 -
            (C4362 + C4361 + C4360) * C1988 - (C4365 + C4364 + C4363) * C1984) *
               C92148 * C92067) *
              C2709 +
          (((C7883 + C7884 + C7885) * C1988 -
            ((C4328 * C5778 + C4101 * C6048 + C4327 * C3439 + C4100 * C3665 +
              C4326 * C1397 + C4099 * C1614) *
                 C1983 +
             (C4328 * C5772 + C4101 * C6042 + C4327 * C3431 + C4100 * C3661 +
              C4326 * C1389 + C4099 * C1606) *
                 C1987) +
            (C7886 + C7887 + C7888) * C1984) *
               C92148 * C4097 +
           ((C4326 * C1387 + C4099 * C1604 + C4327 * C3433 + C4100 * C3663 +
             C4328 * C7566 + C4101 * C7868) *
                C1988 -
            ((C7888 + C7887 + C7886) * C1983 +
             (C7885 + C7884 + C7883) * C1987) +
            (C4326 * C1395 + C4099 * C1612 + C4327 * C3441 + C4100 * C3667 +
             C4328 * C7568 + C4101 * C7869) *
                C1984) *
               C92148 * C92067) *
              C2710) *
         C92099) /
            (p * q * std::sqrt(p + q));
    d2eeyy[23] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92137 * C308) * C181 +
             (C307 * C182 + C92137 * C394) * C92099) *
                C92148 * C89 +
            (C401 + C417) * C92148 * C90 + C423 * C91 + C424 * C92) *
               C1983 -
           ((C420 + C412) * C92148 * C92 + (C419 + C407) * C92148 * C91 +
            (C418 + C404) * C92148 * C90 + (C417 + C401) * C92148 * C89) *
               C1984) *
              C2709 +
          (((C3007 + C3019) * C92148 * C89 + (C3010 + C3020) * C92148 * C90 +
            (C3013 + C3021) * C92148 * C91 +
            ((C307 * C2711 + C92137 * C2919) * C181 +
             (C307 * C2781 + C92137 * C3005) * C92099) *
                C92148 * C92) *
               C1984 -
           ((C3021 + C3013) * C92148 * C92 + (C3020 + C3010) * C92148 * C91 +
            (C3019 + C3007) * C92148 * C90 +
            ((C307 * C1471 + C92137 * C1672) * C92099 +
             (C307 * C1389 + C92137 * C1606) * C181) *
                C92148 * C89) *
               C1983) *
              C2710)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4326 * C107 + C4099 * C308 + C4327 * C805 + C4100 * C1022 +
              C4328 * C806 + C4101 * C1023) *
                 C181 +
             (C4326 * C182 + C4099 * C394 + C4327 * C890 + C4100 * C1085 +
              C4328 * C891 + C4101 * C1086) *
                 C92099) *
                C92148 * C4097 +
            ((C4356 + C4355 + C4354) * C181 +
             (C4452 + C4453 + C4454) * C92099) *
                C92148 * C92067) *
               C1983 -
           (((C4455 + C4456 + C4457) * C92099 +
             (C4362 + C4361 + C4360) * C181) *
                C92148 * C92067 +
            ((C4454 + C4453 + C4452) * C92099 +
             (C4354 + C4355 + C4356) * C181) *
                C92148 * C4097) *
               C1984) *
              C2709 +
          ((((C7883 + C7884 + C7885) * C181 +
             (C7994 + C7995 + C7996) * C92099) *
                C92148 * C4097 +
            ((C4326 * C1387 + C4099 * C1604 + C4327 * C3433 + C4100 * C3663 +
              C4328 * C7566 + C4101 * C7868) *
                 C181 +
             (C4326 * C1469 + C4099 * C1670 + C4327 * C3515 + C4100 * C3737 +
              C4328 * C7668 + C4101 * C7986) *
                 C92099) *
                C92148 * C92067) *
               C1984 -
           (((C7996 + C7995 + C7994) * C92099 +
             (C7885 + C7884 + C7883) * C181) *
                C92148 * C92067 +
            ((C4328 * C5870 + C4101 * C6128 + C4327 * C3513 + C4100 * C3735 +
              C4326 * C1471 + C4099 * C1672) *
                 C92099 +
             (C4328 * C5772 + C4101 * C6042 + C4327 * C3431 + C4100 * C3661 +
              C4326 * C1389 + C4099 * C1606) *
                 C181) *
                C92148 * C4097) *
               C1983) *
              C2710)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[23] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C307 * C107 + C92137 * C308) * C2849 +
            (C307 * C245 + C92137 * C474) * C2709 -
            (C307 * C1389 + C92137 * C1606) * C2850 -
            (C307 * C1540 + C92137 * C1727) * C2710) *
               C92148 * C89 +
           (C3089 + C3090 - C3091 - C3107) * C92148 * C90 +
           (C3094 + C3095 - C3096 - C3108) * C92148 * C91 +
           (C3099 + C3100 - C3101 - C3109) * C92148 * C92) *
              C92099 * C1983 +
          ((C3091 - (C3090 + C3089) + C3107) * C92148 * C89 +
           (C3096 - (C3095 + C3094) + C3108) * C92148 * C90 +
           (C3101 - (C3100 + C3099) + C3109) * C92148 * C91 +
           ((C307 * C2711 + C92137 * C2919) * C2850 -
            (C496 * C2709 + C343 * C2849) +
            (C307 * C2851 + C92137 * C3087) * C2710) *
               C92148 * C92) *
              C92099 * C1984)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C4326 * C107 + C4099 * C308 + C4327 * C805 + C4100 * C1022 +
             C4328 * C806 + C4101 * C1023) *
                C2849 +
            (C4326 * C245 + C4099 * C474 + C4327 * C956 + C4100 * C1146 +
             C4328 * C957 + C4101 * C1147) *
                C2709 -
            (C4328 * C5772 + C4101 * C6042 + C4327 * C3431 + C4100 * C3661 +
             C4326 * C1389 + C4099 * C1606) *
                C2850 -
            (C4328 * C5958 + C4101 * C6207 + C4327 * C3587 + C4100 * C3805 +
             C4326 * C1540 + C4099 * C1727) *
                C2710) *
               C92148 * C4097 +
           ((C4356 + C4355 + C4354) * C2849 + (C4544 + C4545 + C4546) * C2709 -
            (C7885 + C7884 + C7883) * C2850 - (C8102 + C8103 + C8104) * C2710) *
               C92148 * C92067) *
              C92099 * C1983 +
          (((C7883 + C7884 + C7885) * C2850 -
            ((C4546 + C4545 + C4544) * C2709 +
             (C4354 + C4355 + C4356) * C2849) +
            (C8104 + C8103 + C8102) * C2710) *
               C92148 * C4097 +
           ((C4326 * C1387 + C4099 * C1604 + C4327 * C3433 + C4100 * C3663 +
             C4328 * C7566 + C4101 * C7868) *
                C2850 -
            ((C4547 + C4548 + C4549) * C2709 +
             (C4362 + C4361 + C4360) * C2849) +
            (C4326 * C1538 + C4099 * C1731 + C4327 * C3589 + C4100 * C3807 +
             C4328 * C7768 + C4101 * C8094) *
                C2710) *
               C92148 * C92067) *
              C92099 * C1984)) /
            (p * q * std::sqrt(p + q));
    d2eezx[23] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92148 * C555) * C1987 +
            (C554 * C117 + C92148 * C561) * C1983 - C584 * C1988 -
            C585 * C1984) *
               C89 +
           (C584 * C1987 + C585 * C1983 - C586 * C1988 - C587 * C1984) * C90 +
           (C586 * C1987 + C587 * C1983 - C588 * C1988 - C589 * C1984) * C91 +
           (C588 * C1987 + C589 * C1983 - C590 * C1988 - C591 * C1984) * C92) *
              C92137 * C2709 +
          ((C3190 * C1988 -
            ((C554 * C1397 + C92148 * C1796) * C1983 +
             (C554 * C1389 + C92148 * C1788) * C1987) +
            C3191 * C1984) *
               C89 +
           (C3192 * C1988 - (C3191 * C1983 + C3190 * C1987) + C3193 * C1984) *
               C90 +
           (C3194 * C1988 - (C3193 * C1983 + C3192 * C1987) + C3195 * C1984) *
               C91 +
           ((C554 * C2711 + C92148 * C3175) * C1988 -
            (C3195 * C1983 + C3194 * C1987) +
            (C554 * C2713 + C92148 * C3176) * C1984) *
               C92) *
              C92137 * C2710) *
         C92099) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92148 * C555) * C1987 +
             (C554 * C117 + C92148 * C561) * C1983 - C584 * C1988 -
             C585 * C1984) *
                C4097 +
            (C584 * C1987 + C585 * C1983 - C586 * C1988 - C587 * C1984) *
                C92067) *
               C4099 +
           ((C7244 + C7245 - C7246 - C7247) * C4097 +
            (C7248 + C7249 - C7250 - C7251) * C92067) *
               C4100 +
           ((C7252 + C7253 - C7254 - C7255) * C4097 +
            (C7256 + C7257 - C7258 - C7259) * C92067) *
               C4101) *
              C2709 +
          (((C3190 * C1988 -
             ((C554 * C1397 + C92148 * C1796) * C1983 +
              (C554 * C1389 + C92148 * C1788) * C1987) +
             C3191 * C1984) *
                C4097 +
            (C3192 * C1988 - (C3191 * C1983 + C3190 * C1987) + C3193 * C1984) *
                C92067) *
               C4099 +
           ((C8213 * C1988 -
             ((C554 * C3439 + C92148 * C3879) * C1983 +
              (C554 * C3431 + C92148 * C3875) * C1987) +
             C8214 * C1984) *
                C4097 +
            ((C554 * C3433 + C92148 * C3877) * C1988 -
             (C8214 * C1983 + C8213 * C1987) +
             (C554 * C3441 + C92148 * C3881) * C1984) *
                C92067) *
               C4100 +
           ((C8215 * C1988 -
             ((C554 * C5778 + C92148 * C6294) * C1983 +
              (C554 * C5772 + C92148 * C6288) * C1987) +
             C8216 * C1984) *
                C4097 +
            ((C554 * C7566 + C92148 * C8202) * C1988 -
             (C8216 * C1983 + C8215 * C1987) +
             (C554 * C7568 + C92148 * C8203) * C1984) *
                C92067) *
               C4101) *
              C2710) *
         C92099) /
            (p * q * std::sqrt(p + q));
    d2eezy[23] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92148 * C555) * C181 +
             (C554 * C182 + C92148 * C641) * C92099) *
                C89 +
            (C648 + C664) * C90 + C668 * C91 + C669 * C92) *
               C92137 * C1983 -
           ((C667 + C659) * C92 + (C666 + C654) * C91 + (C665 + C651) * C90 +
            (C664 + C648) * C89) *
               C92137 * C1984) *
              C2709 +
          (((C3263 + C3275) * C89 + (C3266 + C3276) * C90 +
            (C3269 + C3277) * C91 +
            ((C554 * C2711 + C92148 * C3175) * C181 +
             (C554 * C2781 + C92148 * C3261) * C92099) *
                C92) *
               C92137 * C1984 -
           ((C3277 + C3269) * C92 + (C3276 + C3266) * C91 +
            (C3275 + C3263) * C90 +
            ((C554 * C1471 + C92148 * C1854) * C92099 +
             (C554 * C1389 + C92148 * C1788) * C181) *
                C89) *
               C92137 * C1983) *
              C2710)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C554 * C107 + C92148 * C555) * C181 +
              (C554 * C182 + C92148 * C641) * C92099) *
                 C4097 +
             (C648 + C664) * C92067) *
                C4099 +
            ((C5484 * C181 + C5591 * C92099) * C4097 +
             (C4710 + C4711) * C92067) *
                C4100 +
            ((C5486 * C181 + C5592 * C92099) * C4097 +
             (C4712 + C4722) * C92067) *
                C4101) *
               C1983 -
           (((C4723 + C4717) * C92067 + (C4722 + C4712) * C4097) * C4101 +
            ((C4718 + C4719) * C92067 + (C4711 + C4710) * C4097) * C4100 +
            ((C665 + C651) * C92067 + (C664 + C648) * C4097) * C4099) *
               C1984) *
              C2709 +
          ((((C3263 + C3275) * C4097 + (C3266 + C3276) * C92067) * C4099 +
            ((C8316 + C8324) * C4097 +
             ((C554 * C3433 + C92148 * C3877) * C181 +
              (C554 * C3515 + C92148 * C3951) * C92099) *
                 C92067) *
                C4100 +
            ((C8319 + C8325) * C4097 +
             ((C554 * C7566 + C92148 * C8202) * C181 +
              (C554 * C7668 + C92148 * C8314) * C92099) *
                 C92067) *
                C4101) *
               C1984 -
           (((C8325 + C8319) * C92067 +
             ((C554 * C5870 + C92148 * C6374) * C92099 +
              (C554 * C5772 + C92148 * C6288) * C181) *
                 C4097) *
                C4101 +
            ((C8324 + C8316) * C92067 +
             ((C554 * C3513 + C92148 * C3949) * C92099 +
              (C554 * C3431 + C92148 * C3875) * C181) *
                 C4097) *
                C4100 +
            ((C3275 + C3263) * C92067 +
             ((C554 * C1471 + C92148 * C1854) * C92099 +
              (C554 * C1389 + C92148 * C1788) * C181) *
                 C4097) *
                C4099) *
               C1983) *
              C2710)) /
            (p * q * std::sqrt(p + q));
    d2eezz[23] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C554 * C107 + C92148 * C555) * C2849 +
                      (C554 * C245 + C92148 * C719) * C2709 -
                      (C554 * C1389 + C92148 * C1788) * C2850 -
                      (C554 * C1540 + C92148 * C1909) * C2710) *
                         C89 +
                     (C3345 + C3346 - C3347 - C3363) * C90 +
                     (C3350 + C3351 - C3352 - C3364) * C91 +
                     (C3355 + C3356 - C3357 - C3365) * C92) *
                        C92137 * C92099 * C1983 +
                    ((C3347 - (C3346 + C3345) + C3363) * C89 +
                     (C3352 - (C3351 + C3350) + C3364) * C90 +
                     (C3357 - (C3356 + C3355) + C3365) * C91 +
                     ((C554 * C2711 + C92148 * C3175) * C2850 -
                      (C741 * C2709 + C590 * C2849) +
                      (C554 * C2851 + C92148 * C3343) * C2710) *
                         C92) *
                        C92137 * C92099 * C1984)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((((C554 * C107 + C92148 * C555) * C2849 +
                       (C554 * C245 + C92148 * C719) * C2709 -
                       (C554 * C1389 + C92148 * C1788) * C2850 -
                       (C554 * C1540 + C92148 * C1909) * C2710) *
                          C4097 +
                      (C3345 + C3346 - C3347 - C3363) * C92067) *
                         C4099 +
                     ((C5484 * C2849 + C5686 * C2709 -
                       (C554 * C3431 + C92148 * C3875) * C2850 -
                       (C554 * C3587 + C92148 * C4019) * C2710) *
                          C4097 +
                      (C8425 + C8426 - C8427 - C8437) * C92067) *
                         C4100 +
                     ((C5486 * C2849 + C5687 * C2709 -
                       (C554 * C5772 + C92148 * C6288) * C2850 -
                       (C554 * C5958 + C92148 * C6455) * C2710) *
                          C4097 +
                      (C8430 + C8431 - C8432 - C8438) * C92067) *
                         C4101) *
                        C92099 * C1983 +
                    (((C3347 - (C3346 + C3345) + C3363) * C4097 +
                      (C3352 - (C3351 + C3350) + C3364) * C92067) *
                         C4099 +
                     ((C8427 - (C8426 + C8425) + C8437) * C4097 +
                      ((C554 * C3433 + C92148 * C3877) * C2850 -
                       (C2639 * C2709 + C2470 * C2849) +
                       (C554 * C3589 + C92148 * C4021) * C2710) *
                          C92067) *
                         C4100 +
                     ((C8432 - (C8431 + C8430) + C8438) * C4097 +
                      ((C554 * C7566 + C92148 * C8202) * C2850 -
                       (C4805 * C2709 + C4634 * C2849) +
                       (C554 * C7768 + C92148 * C8423) * C2710) *
                          C92067) *
                         C4101) *
                        C92099 * C1984)) /
                      (p * q * std::sqrt(p + q));
    d2eexx[24] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((C100 * C107 + C89 * C113 + C101 * C108 + C90 * C114 + C102 * C109 +
           C91 * C115 + C103 * C110 + C92 * C116) *
              C104 +
          (C100 * C117 + C89 * C125 + C101 * C118 + C90 * C126 + C102 * C119 +
           C91 * C127 + C103 * C120 + C92 * C128) *
              C93 -
          (C103 * C111 + C92 * C121 + C102 * C110 + C91 * C116 + C101 * C109 +
           C90 * C115 + C100 * C108 + C89 * C114) *
              C105 -
          (C103 * C122 + C92 * C129 + C102 * C120 + C91 * C128 + C101 * C119 +
           C90 * C127 + C100 * C118 + C89 * C126) *
              C94 +
          (C100 * C109 + C89 * C115 + C101 * C110 + C90 * C116 + C102 * C111 +
           C91 * C121 + C103 * C112 + C92 * C123) *
              C106 +
          (C100 * C119 + C89 * C127 + C101 * C120 + C90 * C128 + C102 * C122 +
           C91 * C129 + C103 * C124 + C92 * C130) *
              C95) *
         C92137 * C92148 * C92110 * C92099) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C100 * C107 + C89 * C113 + C101 * C108 + C90 * C114 + C102 * C109 +
            C91 * C115 + C103 * C110 + C92 * C116) *
               C801 +
           (C100 * C117 + C89 * C125 + C101 * C118 + C90 * C126 + C102 * C119 +
            C91 * C127 + C103 * C120 + C92 * C128) *
               C92078) *
              C92137 * C92148 * C92110 * C798 -
          ((C103 * C810 + C92 * C826 + C102 * C811 + C91 * C827 + C101 * C812 +
            C90 * C828 + C100 * C813 + C89 * C829) *
               C92078 +
           (C103 * C802 + C92 * C814 + C102 * C803 + C91 * C815 + C101 * C804 +
            C90 * C816 + C100 * C805 + C89 * C817) *
               C801) *
              C92137 * C92148 * C92110 * C799 +
          ((C100 * C806 + C89 * C818 + C101 * C807 + C90 * C819 + C102 * C808 +
            C91 * C820 + C103 * C809 + C92 * C821) *
               C801 +
           (C100 * C822 + C89 * C830 + C101 * C823 + C90 * C831 + C102 * C824 +
            C91 * C832 + C103 * C825 + C92 * C833) *
               C92078) *
              C92137 * C92148 * C92110 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C4102 * C107 + C4097 * C113 + C4103 * C108 + C92067 * C114) * C104 +
           (C4102 * C117 + C4097 * C125 + C4103 * C118 + C92067 * C126) * C93 -
           (C4103 * C109 + C92067 * C115 + C4102 * C108 + C4097 * C114) * C105 -
           (C4103 * C119 + C92067 * C127 + C4102 * C118 + C4097 * C126) * C94 +
           (C4102 * C109 + C4097 * C115 + C4103 * C110 + C92067 * C116) * C106 +
           (C4102 * C119 + C4097 * C127 + C4103 * C120 + C92067 * C128) * C95) *
              C4099 +
          ((C4102 * C805 + C4097 * C817 + C4103 * C804 + C92067 * C816) * C104 +
           (C4102 * C813 + C4097 * C829 + C4103 * C812 + C92067 * C828) * C93 -
           (C4103 * C803 + C92067 * C815 + C4102 * C804 + C4097 * C816) * C105 -
           (C4103 * C811 + C92067 * C827 + C4102 * C812 + C4097 * C828) * C94 +
           (C4102 * C803 + C4097 * C815 + C4103 * C802 + C92067 * C814) * C106 +
           (C4102 * C811 + C4097 * C827 + C4103 * C810 + C92067 * C826) * C95) *
              C4100 +
          ((C4102 * C806 + C4097 * C818 + C4103 * C807 + C92067 * C819) * C104 +
           (C4102 * C822 + C4097 * C830 + C4103 * C823 + C92067 * C831) * C93 -
           (C4103 * C808 + C92067 * C820 + C4102 * C807 + C4097 * C819) * C105 -
           (C4103 * C824 + C92067 * C832 + C4102 * C823 + C4097 * C831) * C94 +
           (C4102 * C808 + C4097 * C820 + C4103 * C809 + C92067 * C821) * C106 +
           (C4102 * C824 + C4097 * C832 + C4103 * C825 + C92067 * C833) * C95) *
              C4101) *
         C92148 * C92110 * C92099) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C92067 * C114) *
                C801 +
            (C4102 * C117 + C4097 * C125 + C4103 * C118 + C92067 * C126) *
                C92078) *
               C4099 +
           ((C4922 + C4923) * C801 + (C4924 + C4925) * C92078) * C4100 +
           C4938 * C4101) *
              C92148 * C92110 * C798 -
          (((C4930 + C4931) * C92078 + (C4932 + C4933) * C801) * C4101 +
           ((C4929 + C4928) * C92078 + (C4927 + C4926) * C801) * C4100 +
           ((C4925 + C4924) * C92078 + (C4923 + C4922) * C801) * C4099) *
              C92148 * C92110 * C799 +
          (C4938 * C4099 +
           ((C4933 + C4932) * C801 + (C4931 + C4930) * C92078) * C4100 +
           ((C4102 * C4883 + C4097 * C4889 + C4103 * C4884 + C92067 * C4890) *
                C801 +
            (C4102 * C4891 + C4097 * C4895 + C4103 * C4892 + C92067 * C4896) *
                C92078) *
               C4101) *
              C92148 * C92110 * C800)) /
            (p * q * std::sqrt(p + q));
    d2eexy[24] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C100 * C107 + C89 * C113 + C101 * C108 + C90 * C114 + C102 * C109 +
            C91 * C115 + C103 * C110 + C92 * C116) *
               C181 +
           (C100 * C182 + C89 * C188 + C101 * C183 + C90 * C189 + C102 * C184 +
            C91 * C190 + C103 * C185 + C92 * C191) *
               C92099) *
              C92137 * C92148 * C93 -
          ((C103 * C186 + C92 * C192 + C102 * C185 + C91 * C191 + C101 * C184 +
            C90 * C190 + C100 * C183 + C89 * C189) *
               C92099 +
           (C103 * C111 + C92 * C121 + C102 * C110 + C91 * C116 + C101 * C109 +
            C90 * C115 + C100 * C108 + C89 * C114) *
               C181) *
              C92137 * C92148 * C94 +
          ((C100 * C109 + C89 * C115 + C101 * C110 + C90 * C116 + C102 * C111 +
            C91 * C121 + C103 * C112 + C92 * C123) *
               C181 +
           (C100 * C184 + C89 * C190 + C101 * C185 + C90 * C191 + C102 * C186 +
            C91 * C192 + C103 * C187 + C92 * C193) *
               C92099) *
              C92137 * C92148 * C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((C100 * C107 + C89 * C113 + C101 * C108 + C90 * C114 + C102 * C109 +
           C91 * C115 + C103 * C110 + C92 * C116) *
              C884 +
          (C100 * C182 + C89 * C188 + C101 * C183 + C90 * C189 + C102 * C184 +
           C91 * C190 + C103 * C185 + C92 * C191) *
              C798 -
          (C103 * C802 + C92 * C814 + C102 * C803 + C91 * C815 + C101 * C804 +
           C90 * C816 + C100 * C805 + C89 * C817) *
              C885 -
          (C103 * C887 + C92 * C895 + C102 * C888 + C91 * C896 + C101 * C889 +
           C90 * C897 + C100 * C890 + C89 * C898) *
              C799 +
          (C100 * C806 + C89 * C818 + C101 * C807 + C90 * C819 + C102 * C808 +
           C91 * C820 + C103 * C809 + C92 * C821) *
              C886 +
          (C100 * C891 + C89 * C899 + C101 * C892 + C90 * C900 + C102 * C893 +
           C91 * C901 + C103 * C894 + C92 * C902) *
              C800) *
         C92137 * C92148 * C92078 * C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C92067 * C114) *
                C181 +
            (C4102 * C182 + C4097 * C188 + C4103 * C183 + C92067 * C189) *
                C92099) *
               C4099 +
           ((C4102 * C805 + C4097 * C817 + C4103 * C804 + C92067 * C816) *
                C181 +
            (C4102 * C890 + C4097 * C898 + C4103 * C889 + C92067 * C897) *
                C92099) *
               C4100 +
           ((C4102 * C806 + C4097 * C818 + C4103 * C807 + C92067 * C819) *
                C181 +
            (C4102 * C891 + C4097 * C899 + C4103 * C892 + C92067 * C900) *
                C92099) *
               C4101) *
              C92148 * C93 -
          (((C4103 * C893 + C92067 * C901 + C4102 * C892 + C4097 * C900) *
                C92099 +
            (C4103 * C808 + C92067 * C820 + C4102 * C807 + C4097 * C819) *
                C181) *
               C4101 +
           ((C4103 * C888 + C92067 * C896 + C4102 * C889 + C4097 * C897) *
                C92099 +
            (C4103 * C803 + C92067 * C815 + C4102 * C804 + C4097 * C816) *
                C181) *
               C4100 +
           ((C4103 * C184 + C92067 * C190 + C4102 * C183 + C4097 * C189) *
                C92099 +
            (C4103 * C109 + C92067 * C115 + C4102 * C108 + C4097 * C114) *
                C181) *
               C4099) *
              C92148 * C94 +
          (((C4102 * C109 + C4097 * C115 + C4103 * C110 + C92067 * C116) *
                C181 +
            (C4102 * C184 + C4097 * C190 + C4103 * C185 + C92067 * C191) *
                C92099) *
               C4099 +
           ((C4102 * C803 + C4097 * C815 + C4103 * C802 + C92067 * C814) *
                C181 +
            (C4102 * C888 + C4097 * C896 + C4103 * C887 + C92067 * C895) *
                C92099) *
               C4100 +
           ((C4102 * C808 + C4097 * C820 + C4103 * C809 + C92067 * C821) *
                C181 +
            (C4102 * C893 + C4097 * C901 + C4103 * C894 + C92067 * C902) *
                C92099) *
               C4101) *
              C92148 * C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C4102 * C107 + C4097 * C113 + C4103 * C108 + C92067 * C114) * C884 +
           (C4102 * C182 + C4097 * C188 + C4103 * C183 + C92067 * C189) * C798 -
           (C4923 + C4922) * C885 - (C5033 + C5034) * C799 + C4934 * C886 +
           C5039 * C800) *
              C4099 +
          ((C4922 + C4923) * C884 + (C5034 + C5033) * C798 -
           (C4927 + C4926) * C885 - (C5036 + C5035) * C799 +
           (C4933 + C4932) * C886 + (C5037 + C5038) * C800) *
              C4100 +
          (C4934 * C884 + C5039 * C798 - (C4932 + C4933) * C885 -
           (C5038 + C5037) * C799 +
           (C4102 * C4883 + C4097 * C4889 + C4103 * C4884 + C92067 * C4890) *
               C886 +
           (C4102 * C5014 + C4097 * C5018 + C4103 * C5015 + C92067 * C5019) *
               C800) *
              C4101) *
         C92148 * C92078 * C92110) /
            (p * q * std::sqrt(p + q));
    d2eexz[24] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C100 * C107 + C89 * C113 + C101 * C108 + C90 * C114 + C102 * C109 +
            C91 * C115 + C103 * C110 + C92 * C116) *
               C244 +
           (C100 * C245 + C89 * C251 + C101 * C246 + C90 * C252 + C102 * C247 +
            C91 * C253 + C103 * C248 + C92 * C254) *
               C92110) *
              C92137 * C92148 * C92099 * C93 -
          ((C103 * C249 + C92 * C255 + C102 * C248 + C91 * C254 + C101 * C247 +
            C90 * C253 + C100 * C246 + C89 * C252) *
               C92110 +
           (C103 * C111 + C92 * C121 + C102 * C110 + C91 * C116 + C101 * C109 +
            C90 * C115 + C100 * C108 + C89 * C114) *
               C244) *
              C92137 * C92148 * C92099 * C94 +
          ((C100 * C109 + C89 * C115 + C101 * C110 + C90 * C116 + C102 * C111 +
            C91 * C121 + C103 * C112 + C92 * C123) *
               C244 +
           (C100 * C247 + C89 * C253 + C101 * C248 + C90 * C254 + C102 * C249 +
            C91 * C255 + C103 * C250 + C92 * C256) *
               C92110) *
              C92137 * C92148 * C92099 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C100 * C107 + C89 * C113 + C101 * C108 + C90 * C114 + C102 * C109 +
            C91 * C115 + C103 * C110 + C92 * C116) *
               C244 +
           (C100 * C245 + C89 * C251 + C101 * C246 + C90 * C252 + C102 * C247 +
            C91 * C253 + C103 * C248 + C92 * C254) *
               C92110) *
              C92137 * C92148 * C798 -
          ((C103 * C953 + C92 * C961 + C102 * C954 + C91 * C962 + C101 * C955 +
            C90 * C963 + C100 * C956 + C89 * C964) *
               C92110 +
           (C103 * C802 + C92 * C814 + C102 * C803 + C91 * C815 + C101 * C804 +
            C90 * C816 + C100 * C805 + C89 * C817) *
               C244) *
              C92137 * C92148 * C799 +
          ((C100 * C806 + C89 * C818 + C101 * C807 + C90 * C819 + C102 * C808 +
            C91 * C820 + C103 * C809 + C92 * C821) *
               C244 +
           (C100 * C957 + C89 * C965 + C101 * C958 + C90 * C966 + C102 * C959 +
            C91 * C967 + C103 * C960 + C92 * C968) *
               C92110) *
              C92137 * C92148 * C800) *
         C92078) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C92067 * C114) *
                C244 +
            (C4102 * C245 + C4097 * C251 + C4103 * C246 + C92067 * C252) *
                C92110) *
               C4099 +
           ((C4102 * C805 + C4097 * C817 + C4103 * C804 + C92067 * C816) *
                C244 +
            (C4102 * C956 + C4097 * C964 + C4103 * C955 + C92067 * C963) *
                C92110) *
               C4100 +
           ((C4102 * C806 + C4097 * C818 + C4103 * C807 + C92067 * C819) *
                C244 +
            (C4102 * C957 + C4097 * C965 + C4103 * C958 + C92067 * C966) *
                C92110) *
               C4101) *
              C92148 * C92099 * C93 -
          (((C4103 * C959 + C92067 * C967 + C4102 * C958 + C4097 * C966) *
                C92110 +
            (C4103 * C808 + C92067 * C820 + C4102 * C807 + C4097 * C819) *
                C244) *
               C4101 +
           ((C4103 * C954 + C92067 * C962 + C4102 * C955 + C4097 * C963) *
                C92110 +
            (C4103 * C803 + C92067 * C815 + C4102 * C804 + C4097 * C816) *
                C244) *
               C4100 +
           ((C4103 * C247 + C92067 * C253 + C4102 * C246 + C4097 * C252) *
                C92110 +
            (C4103 * C109 + C92067 * C115 + C4102 * C108 + C4097 * C114) *
                C244) *
               C4099) *
              C92148 * C92099 * C94 +
          (((C4102 * C109 + C4097 * C115 + C4103 * C110 + C92067 * C116) *
                C244 +
            (C4102 * C247 + C4097 * C253 + C4103 * C248 + C92067 * C254) *
                C92110) *
               C4099 +
           ((C4102 * C803 + C4097 * C815 + C4103 * C802 + C92067 * C814) *
                C244 +
            (C4102 * C954 + C4097 * C962 + C4103 * C953 + C92067 * C961) *
                C92110) *
               C4100 +
           ((C4102 * C808 + C4097 * C820 + C4103 * C809 + C92067 * C821) *
                C244 +
            (C4102 * C959 + C4097 * C967 + C4103 * C960 + C92067 * C968) *
                C92110) *
               C4101) *
              C92148 * C92099 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C4102 * C107 + C4097 * C113 + C4103 * C108 + C92067 * C114) *
                C244 +
            (C4102 * C245 + C4097 * C251 + C4103 * C246 + C92067 * C252) *
                C92110) *
               C4099 +
           ((C4922 + C4923) * C244 + (C5135 + C5136) * C92110) * C4100 +
           C5143 * C4101) *
              C92148 * C798 -
          (((C5139 + C5140) * C92110 + (C4932 + C4933) * C244) * C4101 +
           ((C5138 + C5137) * C92110 + (C4927 + C4926) * C244) * C4100 +
           ((C5136 + C5135) * C92110 + (C4923 + C4922) * C244) * C4099) *
              C92148 * C799 +
          (C5143 * C4099 +
           ((C4933 + C4932) * C244 + (C5140 + C5139) * C92110) * C4100 +
           ((C4102 * C4883 + C4097 * C4889 + C4103 * C4884 + C92067 * C4890) *
                C244 +
            (C4102 * C5115 + C4097 * C5119 + C4103 * C5116 + C92067 * C5120) *
                C92110) *
               C4101) *
              C92148 * C800) *
         C92078) /
            (p * q * std::sqrt(p + q));
    d2eeyx[24] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C307 * C107 + C92137 * C308) * C104 +
           (C307 * C117 + C92137 * C314) * C93 - C337 * C105 - C338 * C94 +
           C339 * C106 + C340 * C95) *
              C92148 * C89 +
          (C337 * C104 + C338 * C93 - C339 * C105 - C340 * C94 + C341 * C106 +
           C342 * C95) *
              C92148 * C90 +
          (C339 * C104 + C340 * C93 - C341 * C105 - C342 * C94 + C343 * C106 +
           C344 * C95) *
              C92148 * C91 +
          (C341 * C104 + C342 * C93 - C343 * C105 - C344 * C94 +
           (C307 * C112 + C92137 * C313) * C106 +
           (C307 * C124 + C92137 * C319) * C95) *
              C92148 * C92) *
         C92110 * C92099) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C307 * C107 + C92137 * C308) * C801 +
            (C307 * C117 + C92137 * C314) * C92078) *
               C92148 * C89 +
           (C337 * C801 + C338 * C92078) * C92148 * C90 +
           (C339 * C801 + C340 * C92078) * C92148 * C91 +
           (C341 * C801 + C342 * C92078) * C92148 * C92) *
              C92110 * C798 -
          (((C307 * C810 + C92137 * C1027) * C92078 +
            (C307 * C802 + C92137 * C1019) * C801) *
               C92148 * C92 +
           ((C307 * C811 + C92137 * C1028) * C92078 +
            (C307 * C803 + C92137 * C1020) * C801) *
               C92148 * C91 +
           ((C307 * C812 + C92137 * C1029) * C92078 +
            (C307 * C804 + C92137 * C1021) * C801) *
               C92148 * C90 +
           ((C307 * C813 + C92137 * C1030) * C92078 +
            (C307 * C805 + C92137 * C1022) * C801) *
               C92148 * C89) *
              C92110 * C799 +
          (((C307 * C806 + C92137 * C1023) * C801 +
            (C307 * C822 + C92137 * C1031) * C92078) *
               C92148 * C89 +
           ((C307 * C807 + C92137 * C1024) * C801 +
            (C307 * C823 + C92137 * C1032) * C92078) *
               C92148 * C90 +
           ((C307 * C808 + C92137 * C1025) * C801 +
            (C307 * C824 + C92137 * C1033) * C92078) *
               C92148 * C91 +
           ((C307 * C809 + C92137 * C1026) * C801 +
            (C307 * C825 + C92137 * C1034) * C92078) *
               C92148 * C92) *
              C92110 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C4326 * C107 + C4099 * C308 + C4327 * C805 + C4100 * C1022 +
            C4328 * C806 + C4101 * C1023) *
               C104 +
           (C4326 * C117 + C4099 * C314 + C4327 * C813 + C4100 * C1030 +
            C4328 * C822 + C4101 * C1031) *
               C93 -
           (C4354 + C4355 + C4356) * C105 - (C4357 + C4358 + C4359) * C94 +
           (C4360 + C4361 + C4362) * C106 + (C4363 + C4364 + C4365) * C95) *
              C92148 * C4097 +
          ((C4356 + C4355 + C4354) * C104 + (C4359 + C4358 + C4357) * C93 -
           (C4362 + C4361 + C4360) * C105 - (C4365 + C4364 + C4363) * C94 +
           (C4326 * C110 + C4099 * C311 + C4327 * C802 + C4100 * C1019 +
            C4328 * C809 + C4101 * C1026) *
               C106 +
           (C4326 * C120 + C4099 * C317 + C4327 * C810 + C4100 * C1027 +
            C4328 * C825 + C4101 * C1034) *
               C95) *
              C92148 * C92067) *
         C92110 * C92099) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C4326 * C107 + C4099 * C308 + C4327 * C805 + C4100 * C1022 +
             C4328 * C806 + C4101 * C1023) *
                C801 +
            (C4326 * C117 + C4099 * C314 + C4327 * C813 + C4100 * C1030 +
             C4328 * C822 + C4101 * C1031) *
                C92078) *
               C92148 * C4097 +
           ((C4356 + C4355 + C4354) * C801 + (C4359 + C4358 + C4357) * C92078) *
               C92148 * C92067) *
              C92110 * C798 -
          (((C4328 * C4885 + C4101 * C5221 + C4327 * C823 + C4100 * C1032 +
             C4326 * C812 + C4099 * C1029) *
                C92078 +
            (C4328 * C4881 + C4101 * C5217 + C4327 * C807 + C4100 * C1024 +
             C4326 * C804 + C4099 * C1021) *
                C801) *
               C92148 * C92067 +
           ((C4328 * C4886 + C4101 * C5222 + C4327 * C822 + C4100 * C1031 +
             C4326 * C813 + C4099 * C1030) *
                C92078 +
            (C4328 * C4882 + C4101 * C5218 + C4327 * C806 + C4100 * C1023 +
             C4326 * C805 + C4099 * C1022) *
                C801) *
               C92148 * C4097) *
              C92110 * C799 +
          (((C4326 * C806 + C4099 * C1023 + C4327 * C4882 + C4100 * C5218 +
             C4328 * C4883 + C4101 * C5219) *
                C801 +
            (C4326 * C822 + C4099 * C1031 + C4327 * C4886 + C4100 * C5222 +
             C4328 * C4891 + C4101 * C5223) *
                C92078) *
               C92148 * C4097 +
           ((C4326 * C807 + C4099 * C1024 + C4327 * C4881 + C4100 * C5217 +
             C4328 * C4884 + C4101 * C5220) *
                C801 +
            (C4326 * C823 + C4099 * C1032 + C4327 * C4885 + C4100 * C5221 +
             C4328 * C4892 + C4101 * C5224) *
                C92078) *
               C92148 * C92067) *
              C92110 * C800)) /
            (p * q * std::sqrt(p + q));
    d2eeyy[24] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C307 * C107 + C92137 * C308) * C181 +
            (C307 * C182 + C92137 * C394) * C92099) *
               C92148 * C89 +
           (C401 + C417) * C92148 * C90 + C423 * C91 + C424 * C92) *
              C93 -
          ((C420 + C412) * C92148 * C92 + (C419 + C407) * C92148 * C91 +
           (C418 + C404) * C92148 * C90 + (C417 + C401) * C92148 * C89) *
              C94 +
          (C423 * C89 + C424 * C90 + (C412 + C420) * C92148 * C91 +
           ((C307 * C112 + C92137 * C313) * C181 +
            (C307 * C187 + C92137 * C399) * C92099) *
               C92148 * C92) *
              C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C307 * C107 + C92137 * C308) * C884 +
           (C307 * C182 + C92137 * C394) * C798 -
           (C307 * C805 + C92137 * C1022) * C885 -
           (C307 * C890 + C92137 * C1085) * C799 +
           (C307 * C806 + C92137 * C1023) * C886 +
           (C307 * C891 + C92137 * C1086) * C800) *
              C92148 * C89 +
          (C337 * C884 + C413 * C798 - (C307 * C804 + C92137 * C1021) * C885 -
           (C307 * C889 + C92137 * C1087) * C799 +
           (C307 * C807 + C92137 * C1024) * C886 +
           (C307 * C892 + C92137 * C1088) * C800) *
              C92148 * C90 +
          (C339 * C884 + C414 * C798 - (C307 * C803 + C92137 * C1020) * C885 -
           (C307 * C888 + C92137 * C1089) * C799 +
           (C307 * C808 + C92137 * C1025) * C886 +
           (C307 * C893 + C92137 * C1090) * C800) *
              C92148 * C91 +
          (C341 * C884 + C415 * C798 - (C307 * C802 + C92137 * C1019) * C885 -
           (C307 * C887 + C92137 * C1091) * C799 +
           (C307 * C809 + C92137 * C1026) * C886 +
           (C307 * C894 + C92137 * C1092) * C800) *
              C92148 * C92) *
         C92078 * C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C4326 * C107 + C4099 * C308 + C4327 * C805 + C4100 * C1022 +
             C4328 * C806 + C4101 * C1023) *
                C181 +
            (C4326 * C182 + C4099 * C394 + C4327 * C890 + C4100 * C1085 +
             C4328 * C891 + C4101 * C1086) *
                C92099) *
               C92148 * C4097 +
           ((C4356 + C4355 + C4354) * C181 + (C4452 + C4453 + C4454) * C92099) *
               C92148 * C92067) *
              C93 -
          (((C4455 + C4456 + C4457) * C92099 + (C4362 + C4361 + C4360) * C181) *
               C92148 * C92067 +
           ((C4454 + C4453 + C4452) * C92099 + (C4354 + C4355 + C4356) * C181) *
               C92148 * C4097) *
              C94 +
          (((C4360 + C4361 + C4362) * C181 + (C4457 + C4456 + C4455) * C92099) *
               C92148 * C4097 +
           ((C4326 * C110 + C4099 * C311 + C4327 * C802 + C4100 * C1019 +
             C4328 * C809 + C4101 * C1026) *
                C181 +
            (C4326 * C185 + C4099 * C397 + C4327 * C887 + C4100 * C1091 +
             C4328 * C894 + C4101 * C1092) *
                C92099) *
               C92148 * C92067) *
              C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C4326 * C107 + C4099 * C308 + C4327 * C805 + C4100 * C1022 +
            C4328 * C806 + C4101 * C1023) *
               C884 +
           (C4326 * C182 + C4099 * C394 + C4327 * C890 + C4100 * C1085 +
            C4328 * C891 + C4101 * C1086) *
               C798 -
           (C4328 * C4882 + C4101 * C5218 + C4327 * C806 + C4100 * C1023 +
            C4326 * C805 + C4099 * C1022) *
               C885 -
           (C4328 * C5012 + C4101 * C5299 + C4327 * C891 + C4100 * C1086 +
            C4326 * C890 + C4099 * C1085) *
               C799 +
           (C4326 * C806 + C4099 * C1023 + C4327 * C4882 + C4100 * C5218 +
            C4328 * C4883 + C4101 * C5219) *
               C886 +
           (C4326 * C891 + C4099 * C1086 + C4327 * C5012 + C4100 * C5299 +
            C4328 * C5014 + C4101 * C5300) *
               C800) *
              C92148 * C4097 +
          ((C4356 + C4355 + C4354) * C884 + (C4452 + C4453 + C4454) * C798 -
           (C4328 * C4881 + C4101 * C5217 + C4327 * C807 + C4100 * C1024 +
            C4326 * C804 + C4099 * C1021) *
               C885 -
           (C4328 * C5013 + C4101 * C5301 + C4327 * C892 + C4100 * C1088 +
            C4326 * C889 + C4099 * C1087) *
               C799 +
           (C4326 * C807 + C4099 * C1024 + C4327 * C4881 + C4100 * C5217 +
            C4328 * C4884 + C4101 * C5220) *
               C886 +
           (C4326 * C892 + C4099 * C1088 + C4327 * C5013 + C4100 * C5301 +
            C4328 * C5015 + C4101 * C5302) *
               C800) *
              C92148 * C92067) *
         C92078 * C92110) /
            (p * q * std::sqrt(p + q));
    d2eeyz[24] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C307 * C107 + C92137 * C308) * C244 +
            (C307 * C245 + C92137 * C474) * C92110) *
               C92148 * C89 +
           (C481 + C497) * C92148 * C90 + C503 * C91 + C504 * C92) *
              C92099 * C93 -
          ((C500 + C492) * C92148 * C92 + (C499 + C487) * C92148 * C91 +
           (C498 + C484) * C92148 * C90 + (C497 + C481) * C92148 * C89) *
              C92099 * C94 +
          (C503 * C89 + C504 * C90 + (C492 + C500) * C92148 * C91 +
           ((C307 * C112 + C92137 * C313) * C244 +
            (C307 * C250 + C92137 * C479) * C92110) *
               C92148 * C92) *
              C92099 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C307 * C107 + C92137 * C308) * C244 +
            (C307 * C245 + C92137 * C474) * C92110) *
               C92148 * C89 +
           (C481 + C497) * C92148 * C90 + C503 * C91 + C504 * C92) *
              C798 -
          (((C307 * C953 + C92137 * C1143) * C92110 +
            (C307 * C802 + C92137 * C1019) * C244) *
               C92148 * C92 +
           ((C307 * C954 + C92137 * C1144) * C92110 +
            (C307 * C803 + C92137 * C1020) * C244) *
               C92148 * C91 +
           ((C307 * C955 + C92137 * C1145) * C92110 +
            (C307 * C804 + C92137 * C1021) * C244) *
               C92148 * C90 +
           ((C307 * C956 + C92137 * C1146) * C92110 +
            (C307 * C805 + C92137 * C1022) * C244) *
               C92148 * C89) *
              C799 +
          (((C307 * C806 + C92137 * C1023) * C244 +
            (C307 * C957 + C92137 * C1147) * C92110) *
               C92148 * C89 +
           ((C307 * C807 + C92137 * C1024) * C244 +
            (C307 * C958 + C92137 * C1148) * C92110) *
               C92148 * C90 +
           ((C307 * C808 + C92137 * C1025) * C244 +
            (C307 * C959 + C92137 * C1149) * C92110) *
               C92148 * C91 +
           ((C307 * C809 + C92137 * C1026) * C244 +
            (C307 * C960 + C92137 * C1150) * C92110) *
               C92148 * C92) *
              C800) *
         C92078) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C4326 * C107 + C4099 * C308 + C4327 * C805 + C4100 * C1022 +
             C4328 * C806 + C4101 * C1023) *
                C244 +
            (C4326 * C245 + C4099 * C474 + C4327 * C956 + C4100 * C1146 +
             C4328 * C957 + C4101 * C1147) *
                C92110) *
               C92148 * C4097 +
           ((C4356 + C4355 + C4354) * C244 + (C4544 + C4545 + C4546) * C92110) *
               C92148 * C92067) *
              C92099 * C93 -
          (((C4547 + C4548 + C4549) * C92110 + (C4362 + C4361 + C4360) * C244) *
               C92148 * C92067 +
           ((C4546 + C4545 + C4544) * C92110 + (C4354 + C4355 + C4356) * C244) *
               C92148 * C4097) *
              C92099 * C94 +
          (((C4360 + C4361 + C4362) * C244 + (C4549 + C4548 + C4547) * C92110) *
               C92148 * C4097 +
           ((C4326 * C110 + C4099 * C311 + C4327 * C802 + C4100 * C1019 +
             C4328 * C809 + C4101 * C1026) *
                C244 +
            (C4326 * C248 + C4099 * C477 + C4327 * C953 + C4100 * C1143 +
             C4328 * C960 + C4101 * C1150) *
                C92110) *
               C92148 * C92067) *
              C92099 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C4326 * C107 + C4099 * C308 + C4327 * C805 + C4100 * C1022 +
             C4328 * C806 + C4101 * C1023) *
                C244 +
            (C4326 * C245 + C4099 * C474 + C4327 * C956 + C4100 * C1146 +
             C4328 * C957 + C4101 * C1147) *
                C92110) *
               C92148 * C4097 +
           ((C4356 + C4355 + C4354) * C244 + (C4544 + C4545 + C4546) * C92110) *
               C92148 * C92067) *
              C798 -
          (((C4328 * C5113 + C4101 * C5377 + C4327 * C958 + C4100 * C1148 +
             C4326 * C955 + C4099 * C1145) *
                C92110 +
            (C4328 * C4881 + C4101 * C5217 + C4327 * C807 + C4100 * C1024 +
             C4326 * C804 + C4099 * C1021) *
                C244) *
               C92148 * C92067 +
           ((C4328 * C5114 + C4101 * C5378 + C4327 * C957 + C4100 * C1147 +
             C4326 * C956 + C4099 * C1146) *
                C92110 +
            (C4328 * C4882 + C4101 * C5218 + C4327 * C806 + C4100 * C1023 +
             C4326 * C805 + C4099 * C1022) *
                C244) *
               C92148 * C4097) *
              C799 +
          (((C4326 * C806 + C4099 * C1023 + C4327 * C4882 + C4100 * C5218 +
             C4328 * C4883 + C4101 * C5219) *
                C244 +
            (C4326 * C957 + C4099 * C1147 + C4327 * C5114 + C4100 * C5378 +
             C4328 * C5115 + C4101 * C5379) *
                C92110) *
               C92148 * C4097 +
           ((C4326 * C807 + C4099 * C1024 + C4327 * C4881 + C4100 * C5217 +
             C4328 * C4884 + C4101 * C5220) *
                C244 +
            (C4326 * C958 + C4099 * C1148 + C4327 * C5113 + C4100 * C5377 +
             C4328 * C5116 + C4101 * C5380) *
                C92110) *
               C92148 * C92067) *
              C800) *
         C92078) /
            (p * q * std::sqrt(p + q));
    d2eezx[24] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C554 * C107 + C92148 * C555) * C104 +
           (C554 * C117 + C92148 * C561) * C93 - C584 * C105 - C585 * C94 +
           C586 * C106 + C587 * C95) *
              C89 +
          (C584 * C104 + C585 * C93 - C586 * C105 - C587 * C94 + C588 * C106 +
           C589 * C95) *
              C90 +
          (C586 * C104 + C587 * C93 - C588 * C105 - C589 * C94 + C590 * C106 +
           C591 * C95) *
              C91 +
          (C588 * C104 + C589 * C93 - C590 * C105 - C591 * C94 +
           (C554 * C112 + C92148 * C560) * C106 +
           (C554 * C124 + C92148 * C566) * C95) *
              C92) *
         C92137 * C92110 * C92099) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92148 * C555) * C801 +
            (C554 * C117 + C92148 * C561) * C92078) *
               C89 +
           (C584 * C801 + C585 * C92078) * C90 +
           (C586 * C801 + C587 * C92078) * C91 +
           (C588 * C801 + C589 * C92078) * C92) *
              C92137 * C92110 * C798 -
          (((C554 * C810 + C92148 * C1209) * C92078 +
            (C554 * C802 + C92148 * C1201) * C801) *
               C92 +
           ((C554 * C811 + C92148 * C1210) * C92078 +
            (C554 * C803 + C92148 * C1202) * C801) *
               C91 +
           ((C554 * C812 + C92148 * C1211) * C92078 +
            (C554 * C804 + C92148 * C1203) * C801) *
               C90 +
           ((C554 * C813 + C92148 * C1212) * C92078 +
            (C554 * C805 + C92148 * C1204) * C801) *
               C89) *
              C92137 * C92110 * C799 +
          (((C554 * C806 + C92148 * C1205) * C801 +
            (C554 * C822 + C92148 * C1213) * C92078) *
               C89 +
           ((C554 * C807 + C92148 * C1206) * C801 +
            (C554 * C823 + C92148 * C1214) * C92078) *
               C90 +
           ((C554 * C808 + C92148 * C1207) * C801 +
            (C554 * C824 + C92148 * C1215) * C92078) *
               C91 +
           ((C554 * C809 + C92148 * C1208) * C801 +
            (C554 * C825 + C92148 * C1216) * C92078) *
               C92) *
              C92137 * C92110 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92148 * C555) * C104 +
            (C554 * C117 + C92148 * C561) * C93 - C584 * C105 - C585 * C94 +
            C586 * C106 + C587 * C95) *
               C4097 +
           (C584 * C104 + C585 * C93 - C586 * C105 - C587 * C94 + C588 * C106 +
            C589 * C95) *
               C92067) *
              C4099 +
          (((C554 * C805 + C92148 * C1204) * C104 +
            (C554 * C813 + C92148 * C1212) * C93 - C2468 * C105 - C2469 * C94 +
            C2470 * C106 + C2471 * C95) *
               C4097 +
           (C2468 * C104 + C2469 * C93 - C2470 * C105 - C2471 * C94 +
            C2472 * C106 + C2473 * C95) *
               C92067) *
              C4100 +
          (((C554 * C806 + C92148 * C1205) * C104 +
            (C554 * C822 + C92148 * C1213) * C93 - C4632 * C105 - C4633 * C94 +
            C4634 * C106 + C4635 * C95) *
               C4097 +
           (C4632 * C104 + C4633 * C93 - C4634 * C105 - C4635 * C94 +
            (C554 * C809 + C92148 * C1208) * C106 +
            (C554 * C825 + C92148 * C1216) * C95) *
               C92067) *
              C4101) *
         C92110 * C92099) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92148 * C555) * C801 +
             (C554 * C117 + C92148 * C561) * C92078) *
                C4097 +
            (C584 * C801 + C585 * C92078) * C92067) *
               C4099 +
           ((C5493 + C5494) * C4097 + (C5468 + C5469) * C92067) * C4100 +
           C5504 * C4101) *
              C92110 * C798 -
          (((C5498 + C5499) * C92067 + (C5500 + C5501) * C4097) * C4101 +
           ((C5475 + C5474) * C92067 + (C5496 + C5495) * C4097) * C4100 +
           ((C5469 + C5468) * C92067 + (C5494 + C5493) * C4097) * C4099) *
              C92110 * C799 +
          (C5504 * C4099 +
           ((C5501 + C5500) * C4097 + (C5499 + C5498) * C92067) * C4100 +
           (((C554 * C4883 + C92148 * C5457) * C801 +
             (C554 * C4891 + C92148 * C5461) * C92078) *
                C4097 +
            ((C554 * C4884 + C92148 * C5458) * C801 +
             (C554 * C4892 + C92148 * C5462) * C92078) *
                C92067) *
               C4101) *
              C92110 * C800)) /
            (p * q * std::sqrt(p + q));
    d2eezy[24] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92148 * C555) * C181 +
            (C554 * C182 + C92148 * C641) * C92099) *
               C89 +
           (C648 + C664) * C90 + C668 * C91 + C669 * C92) *
              C92137 * C93 -
          ((C667 + C659) * C92 + (C666 + C654) * C91 + (C665 + C651) * C90 +
           (C664 + C648) * C89) *
              C92137 * C94 +
          (C668 * C89 + C669 * C90 + (C659 + C667) * C91 +
           ((C554 * C112 + C92148 * C560) * C181 +
            (C554 * C187 + C92148 * C646) * C92099) *
               C92) *
              C92137 * C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C554 * C107 + C92148 * C555) * C884 +
           (C554 * C182 + C92148 * C641) * C798 -
           (C554 * C805 + C92148 * C1204) * C885 -
           (C554 * C890 + C92148 * C1267) * C799 +
           (C554 * C806 + C92148 * C1205) * C886 +
           (C554 * C891 + C92148 * C1268) * C800) *
              C89 +
          (C584 * C884 + C660 * C798 - (C554 * C804 + C92148 * C1203) * C885 -
           (C554 * C889 + C92148 * C1269) * C799 +
           (C554 * C807 + C92148 * C1206) * C886 +
           (C554 * C892 + C92148 * C1270) * C800) *
              C90 +
          (C586 * C884 + C661 * C798 - (C554 * C803 + C92148 * C1202) * C885 -
           (C554 * C888 + C92148 * C1271) * C799 +
           (C554 * C808 + C92148 * C1207) * C886 +
           (C554 * C893 + C92148 * C1272) * C800) *
              C91 +
          (C588 * C884 + C662 * C798 - (C554 * C802 + C92148 * C1201) * C885 -
           (C554 * C887 + C92148 * C1273) * C799 +
           (C554 * C809 + C92148 * C1208) * C886 +
           (C554 * C894 + C92148 * C1274) * C800) *
              C92) *
         C92137 * C92078 * C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92148 * C555) * C181 +
             (C554 * C182 + C92148 * C641) * C92099) *
                C4097 +
            (C648 + C664) * C92067) *
               C4099 +
           (((C554 * C805 + C92148 * C1204) * C181 +
             (C554 * C890 + C92148 * C1267) * C92099) *
                C4097 +
            (C4710 + C4711) * C92067) *
               C4100 +
           (((C554 * C806 + C92148 * C1205) * C181 +
             (C554 * C891 + C92148 * C1268) * C92099) *
                C4097 +
            (C4712 + C4722) * C92067) *
               C4101) *
              C93 -
          (((C4723 + C4717) * C92067 + (C4722 + C4712) * C4097) * C4101 +
           ((C4718 + C4719) * C92067 + (C4711 + C4710) * C4097) * C4100 +
           ((C665 + C651) * C92067 + (C664 + C648) * C4097) * C4099) *
              C94 +
          ((C668 * C4097 + C669 * C92067) * C4099 +
           ((C4719 + C4718) * C4097 +
            (C2472 * C181 + C2558 * C92099) * C92067) *
               C4100 +
           ((C4717 + C4723) * C4097 +
            ((C554 * C809 + C92148 * C1208) * C181 +
             (C554 * C894 + C92148 * C1274) * C92099) *
                C92067) *
               C4101) *
              C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92148 * C555) * C884 +
            (C554 * C182 + C92148 * C641) * C798 - C5484 * C885 - C5591 * C799 +
            C5486 * C886 + C5592 * C800) *
               C4097 +
           (C584 * C884 + C660 * C798 - C2468 * C885 - C2556 * C799 +
            C4632 * C886 + C4720 * C800) *
               C92067) *
              C4099 +
          ((C5484 * C884 + C5591 * C798 - C5486 * C885 - C5592 * C799 +
            C5492 * C886 + C5593 * C800) *
               C4097 +
           (C2468 * C884 + C2556 * C798 - C4632 * C885 - C4720 * C799 +
            C5490 * C886 + C5594 * C800) *
               C92067) *
              C4100 +
          ((C5486 * C884 + C5592 * C798 - C5492 * C885 - C5593 * C799 +
            (C554 * C4883 + C92148 * C5457) * C886 +
            (C554 * C5014 + C92148 * C5580) * C800) *
               C4097 +
           (C4632 * C884 + C4720 * C798 - C5490 * C885 - C5594 * C799 +
            (C554 * C4884 + C92148 * C5458) * C886 +
            (C554 * C5015 + C92148 * C5581) * C800) *
               C92067) *
              C4101) *
         C92078 * C92110) /
            (p * q * std::sqrt(p + q));
    d2eezz[24] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92148 * C555) * C244 +
            (C554 * C245 + C92148 * C719) * C92110) *
               C89 +
           (C726 + C742) * C90 + C746 * C91 + C747 * C92) *
              C92137 * C92099 * C93 -
          ((C745 + C737) * C92 + (C744 + C732) * C91 + (C743 + C729) * C90 +
           (C742 + C726) * C89) *
              C92137 * C92099 * C94 +
          (C746 * C89 + C747 * C90 + (C737 + C745) * C91 +
           ((C554 * C112 + C92148 * C560) * C244 +
            (C554 * C250 + C92148 * C724) * C92110) *
               C92) *
              C92137 * C92099 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92148 * C555) * C244 +
            (C554 * C245 + C92148 * C719) * C92110) *
               C89 +
           (C726 + C742) * C90 + C746 * C91 + C747 * C92) *
              C92137 * C798 -
          (((C554 * C953 + C92148 * C1325) * C92110 +
            (C554 * C802 + C92148 * C1201) * C244) *
               C92 +
           ((C554 * C954 + C92148 * C1326) * C92110 +
            (C554 * C803 + C92148 * C1202) * C244) *
               C91 +
           ((C554 * C955 + C92148 * C1327) * C92110 +
            (C554 * C804 + C92148 * C1203) * C244) *
               C90 +
           ((C554 * C956 + C92148 * C1328) * C92110 +
            (C554 * C805 + C92148 * C1204) * C244) *
               C89) *
              C92137 * C799 +
          (((C554 * C806 + C92148 * C1205) * C244 +
            (C554 * C957 + C92148 * C1329) * C92110) *
               C89 +
           ((C554 * C807 + C92148 * C1206) * C244 +
            (C554 * C958 + C92148 * C1330) * C92110) *
               C90 +
           ((C554 * C808 + C92148 * C1207) * C244 +
            (C554 * C959 + C92148 * C1331) * C92110) *
               C91 +
           ((C554 * C809 + C92148 * C1208) * C244 +
            (C554 * C960 + C92148 * C1332) * C92110) *
               C92) *
              C92137 * C800) *
         C92078) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92148 * C555) * C244 +
             (C554 * C245 + C92148 * C719) * C92110) *
                C4097 +
            (C726 + C742) * C92067) *
               C4099 +
           (((C554 * C805 + C92148 * C1204) * C244 +
             (C554 * C956 + C92148 * C1328) * C92110) *
                C4097 +
            (C2637 + C2643) * C92067) *
               C4100 +
           (((C554 * C806 + C92148 * C1205) * C244 +
             (C554 * C957 + C92148 * C1329) * C92110) *
                C4097 +
            (C4798 + C4806) * C92067) *
               C4101) *
              C92099 * C93 -
          (((C4807 + C4803) * C92067 + (C4806 + C4798) * C4097) * C4101 +
           ((C2642 + C2634) * C92067 + (C2643 + C2637) * C4097) * C4100 +
           ((C743 + C729) * C92067 + (C742 + C726) * C4097) * C4099) *
              C92099 * C94 +
          ((C746 * C4097 + C747 * C92067) * C4099 +
           ((C2634 + C2642) * C4097 + (C2631 + C2641) * C92067) * C4100 +
           ((C4803 + C4807) * C4097 +
            ((C554 * C809 + C92148 * C1208) * C244 +
             (C554 * C960 + C92148 * C1332) * C92110) *
                C92067) *
               C4101) *
              C92099 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92148 * C555) * C244 +
             (C554 * C245 + C92148 * C719) * C92110) *
                C4097 +
            (C726 + C742) * C92067) *
               C4099 +
           ((C5673 + C5691) * C4097 + (C2637 + C2643) * C92067) * C4100 +
           C5697 * C4101) *
              C798 -
          (((C5693 + C5682) * C92067 + (C5694 + C5685) * C4097) * C4101 +
           ((C4806 + C4798) * C92067 + (C5692 + C5676) * C4097) * C4100 +
           ((C2643 + C2637) * C92067 + (C5691 + C5673) * C4097) * C4099) *
              C799 +
          (C5697 * C4099 +
           ((C5685 + C5694) * C4097 + (C5682 + C5693) * C92067) * C4100 +
           (((C554 * C4883 + C92148 * C5457) * C244 +
             (C554 * C5115 + C92148 * C5670) * C92110) *
                C4097 +
            ((C554 * C4884 + C92148 * C5458) * C244 +
             (C554 * C5116 + C92148 * C5671) * C92110) *
                C92067) *
               C4101) *
              C800) *
         C92078) /
            (p * q * std::sqrt(p + q));
    d2eexx[25] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C89875 * C107 + C92310 * C113 + C89868 * C108 + C92067 * C114) *
                C1987 +
            (C89875 * C117 + C92310 * C125 + C89868 * C118 + C92067 * C126) *
                C1983 -
            (C89868 * C109 + C92067 * C115 + C89875 * C108 + C92310 * C114) *
                C1988 -
            (C89868 * C119 + C92067 * C127 + C89875 * C118 + C92310 * C126) *
                C1984) *
               C92348 +
           ((C45573 + C45574) * C1987 + (C45575 + C45576) * C1983 -
            (C47009 + C47010) * C1988 - (C47011 + C47012) * C1984) *
               C92349 +
           (C45585 * C1987 + C45586 * C1983 - (C47013 + C47014) * C1988 -
            (C47015 + C47016) * C1984) *
               C44804) *
              C92148 * C92110 * C1985 +
          (((C47010 + C47009) * C1988 -
            ((C45576 + C45575) * C1983 + (C45574 + C45573) * C1987) +
            (C47012 + C47011) * C1984) *
               C92348 +
           ((C47014 + C47013) * C1988 -
            ((C45580 + C45579) * C1983 + (C45578 + C45577) * C1987) +
            (C47016 + C47015) * C1984) *
               C92349 +
           ((C89875 * C4881 + C92310 * C4887 + C89868 * C6557 +
             C92067 * C6558) *
                C1988 -
            ((C45581 + C45582) * C1983 + (C45583 + C45584) * C1987) +
            (C89875 * C4885 + C92310 * C4893 + C89868 * C6559 +
             C92067 * C6560) *
                C1984) *
               C44804) *
              C92148 * C92110 * C1986)) /
        (p * q * std::sqrt(p + q));
    d2eexy[25] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C89875 * C107 + C92310 * C113 + C89868 * C108 + C92067 * C114) *
                C2059 +
            (C89875 * C182 + C92310 * C188 + C89868 * C183 + C92067 * C189) *
                C1985 -
            (C45574 + C45573) * C2060 - (C45676 + C45677) * C1986) *
               C92348 +
           ((C45573 + C45574) * C2059 + (C45677 + C45676) * C1985 -
            (C45578 + C45577) * C2060 - (C45679 + C45678) * C1986) *
               C92349 +
           (C45585 * C2059 + C45682 * C1985 - (C45583 + C45584) * C2060 -
            (C45681 + C45680) * C1986) *
               C44804) *
              C92148 * C1983 +
          (((C47010 + C47009) * C2060 -
            ((C89868 * C184 + C92067 * C190 + C89875 * C183 + C92310 * C189) *
                 C1985 +
             (C89868 * C109 + C92067 * C115 + C89875 * C108 + C92310 * C114) *
                 C2059) +
            (C47123 + C47124) * C1986) *
               C92348 +
           ((C47014 + C47013) * C2060 -
            ((C47124 + C47123) * C1985 + (C47009 + C47010) * C2059) +
            (C47125 + C47126) * C1986) *
               C92349 +
           ((C89875 * C4881 + C92310 * C4887 + C89868 * C6557 +
             C92067 * C6558) *
                C2060 -
            ((C47126 + C47125) * C1985 + (C47013 + C47014) * C2059) +
            (C89875 * C5013 + C92310 * C5017 + C89868 * C6683 +
             C92067 * C6684) *
                C1986) *
               C44804) *
              C92148 * C1984) *
         C92110) /
        (p * q * std::sqrt(p + q));
    d2eexz[25] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C89875 * C107 + C92310 * C113 + C89868 * C108 + C92067 * C114) *
                 C244 +
             (C89875 * C245 + C92310 * C251 + C89868 * C246 + C92067 * C252) *
                 C92110) *
                C92348 +
            ((C45573 + C45574) * C244 + (C45770 + C45771) * C92110) * C92349 +
            C45778 * C44804) *
               C92148 * C1985 -
           (((C45774 + C45775) * C92110 + (C45583 + C45584) * C244) * C44804 +
            ((C45773 + C45772) * C92110 + (C45578 + C45577) * C244) * C92349 +
            ((C45771 + C45770) * C92110 + (C45574 + C45573) * C244) * C92348) *
               C92148 * C1986) *
              C1983 +
          ((((C47010 + C47009) * C244 + (C47233 + C47234) * C92110) * C92348 +
            ((C47014 + C47013) * C244 + (C47235 + C47236) * C92110) * C92349 +
            ((C89875 * C4881 + C92310 * C4887 + C89868 * C6557 +
              C92067 * C6558) *
                 C244 +
             (C89875 * C5113 + C92310 * C5117 + C89868 * C6795 +
              C92067 * C6796) *
                 C92110) *
                C44804) *
               C92148 * C1986 -
           (((C47236 + C47235) * C92110 + (C47013 + C47014) * C244) * C44804 +
            ((C47234 + C47233) * C92110 + (C47009 + C47010) * C244) * C92349 +
            ((C89868 * C247 + C92067 * C253 + C89875 * C246 + C92310 * C252) *
                 C92110 +
             (C89868 * C109 + C92067 * C115 + C89875 * C108 + C92310 * C114) *
                 C244) *
                C92348) *
               C92148 * C1985) *
              C1984)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[25] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C45029 * C107 + C92348 * C308 + C45030 * C805 +
                       C92349 * C1022 + C45031 * C806 + C44804 * C1023) *
                          C1987 +
                      (C45029 * C117 + C92348 * C314 + C45030 * C813 +
                       C92349 * C1030 + C45031 * C822 + C44804 * C1031) *
                          C1983 -
                      (C45057 + C45058 + C45059) * C1988 -
                      (C45060 + C45061 + C45062) * C1984) *
                         C92148 * C92310 +
                     ((C45059 + C45058 + C45057) * C1987 +
                      (C45062 + C45061 + C45060) * C1983 -
                      (C45065 + C45064 + C45063) * C1988 -
                      (C45068 + C45067 + C45066) * C1984) *
                         C92148 * C92067) *
                        C92110 * C1985 +
                    (((C47347 + C47348 + C47349) * C1988 -
                      ((C45031 * C4886 + C44804 * C5222 + C45030 * C822 +
                        C92349 * C1031 + C45029 * C813 + C92348 * C1030) *
                           C1983 +
                       (C45031 * C4882 + C44804 * C5218 + C45030 * C806 +
                        C92349 * C1023 + C45029 * C805 + C92348 * C1022) *
                           C1987) +
                      (C47350 + C47351 + C47352) * C1984) *
                         C92148 * C92310 +
                     ((C45029 * C803 + C92348 * C1020 + C45030 * C808 +
                       C92349 * C1025 + C45031 * C6557 + C44804 * C6907) *
                          C1988 -
                      ((C47352 + C47351 + C47350) * C1983 +
                       (C47349 + C47348 + C47347) * C1987) +
                      (C45029 * C811 + C92348 * C1028 + C45030 * C824 +
                       C92349 * C1033 + C45031 * C6559 + C44804 * C6908) *
                          C1984) *
                         C92148 * C92067) *
                        C92110 * C1986)) /
                  (p * q * std::sqrt(p + q));
    d2eeyy[25] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C45029 * C107 + C92348 * C308 + C45030 * C805 +
                       C92349 * C1022 + C45031 * C806 + C44804 * C1023) *
                          C2059 +
                      (C45029 * C182 + C92348 * C394 + C45030 * C890 +
                       C92349 * C1085 + C45031 * C891 + C44804 * C1086) *
                          C1985 -
                      (C45031 * C4882 + C44804 * C5218 + C45030 * C806 +
                       C92349 * C1023 + C45029 * C805 + C92348 * C1022) *
                          C2060 -
                      (C45031 * C5012 + C44804 * C5299 + C45030 * C891 +
                       C92349 * C1086 + C45029 * C890 + C92348 * C1085) *
                          C1986) *
                         C92148 * C92310 +
                     ((C45059 + C45058 + C45057) * C2059 +
                      (C45155 + C45156 + C45157) * C1985 -
                      (C47349 + C47348 + C47347) * C2060 -
                      (C47457 + C47458 + C47459) * C1986) *
                         C92148 * C92067) *
                        C1983 +
                    (((C47347 + C47348 + C47349) * C2060 -
                      ((C45157 + C45156 + C45155) * C1985 +
                       (C45057 + C45058 + C45059) * C2059) +
                      (C47459 + C47458 + C47457) * C1986) *
                         C92148 * C92310 +
                     ((C45029 * C803 + C92348 * C1020 + C45030 * C808 +
                       C92349 * C1025 + C45031 * C6557 + C44804 * C6907) *
                          C2060 -
                      ((C45158 + C45159 + C45160) * C1985 +
                       (C45065 + C45064 + C45063) * C2059) +
                      (C45029 * C888 + C92348 * C1089 + C45030 * C893 +
                       C92349 * C1090 + C45031 * C6683 + C44804 * C7025) *
                          C1986) *
                         C92148 * C92067) *
                        C1984) *
                   C92110) /
                  (p * q * std::sqrt(p + q));
    d2eeyz[25] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C45029 * C107 + C92348 * C308 + C45030 * C805 +
                        C92349 * C1022 + C45031 * C806 + C44804 * C1023) *
                           C244 +
                       (C45029 * C245 + C92348 * C474 + C45030 * C956 +
                        C92349 * C1146 + C45031 * C957 + C44804 * C1147) *
                           C92110) *
                          C92148 * C92310 +
                      ((C45059 + C45058 + C45057) * C244 +
                       (C45247 + C45248 + C45249) * C92110) *
                          C92148 * C92067) *
                         C1985 -
                     (((C47564 + C47565 + C47566) * C92110 +
                       (C47349 + C47348 + C47347) * C244) *
                          C92148 * C92067 +
                      ((C45031 * C5114 + C44804 * C5378 + C45030 * C957 +
                        C92349 * C1147 + C45029 * C956 + C92348 * C1146) *
                           C92110 +
                       (C45031 * C4882 + C44804 * C5218 + C45030 * C806 +
                        C92349 * C1023 + C45029 * C805 + C92348 * C1022) *
                           C244) *
                          C92148 * C92310) *
                         C1986) *
                        C1983 +
                    ((((C47347 + C47348 + C47349) * C244 +
                       (C47566 + C47565 + C47564) * C92110) *
                          C92148 * C92310 +
                      ((C45029 * C803 + C92348 * C1020 + C45030 * C808 +
                        C92349 * C1025 + C45031 * C6557 + C44804 * C6907) *
                           C244 +
                       (C45029 * C954 + C92348 * C1144 + C45030 * C959 +
                        C92349 * C1149 + C45031 * C6795 + C44804 * C7133) *
                           C92110) *
                          C92148 * C92067) *
                         C1986 -
                     (((C45250 + C45251 + C45252) * C92110 +
                       (C45065 + C45064 + C45063) * C244) *
                          C92148 * C92067 +
                      ((C45249 + C45248 + C45247) * C92110 +
                       (C45057 + C45058 + C45059) * C244) *
                          C92148 * C92310) *
                         C1985) *
                        C1984)) /
                  (p * q * std::sqrt(p + q));
    d2eezx[25] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92148 * C555) * C1987 +
             (C554 * C117 + C92148 * C561) * C1983 - C584 * C1988 -
             C585 * C1984) *
                C92310 +
            (C584 * C1987 + C585 * C1983 - C586 * C1988 - C587 * C1984) *
                C92067) *
               C92348 +
           ((C7244 + C7245 - C7246 - C7247) * C92310 +
            (C7248 + C7249 - C7250 - C7251) * C92067) *
               C92349 +
           ((C7252 + C7253 - C7254 - C7255) * C92310 +
            (C7256 + C7257 - C7258 - C7259) * C92067) *
               C44804) *
              C92110 * C1985 +
          (((C7246 - (C7245 + C7244) + C7247) * C92310 +
            (C7250 - (C7249 + C7248) + C7251) * C92067) *
               C92348 +
           ((C7254 - (C7253 + C7252) + C7255) * C92310 +
            (C7258 - (C7257 + C7256) + C7259) * C92067) *
               C92349 +
           ((C38162 - (C38161 + C38160) + C38163) * C92310 +
            ((C554 * C6557 + C92148 * C7241) * C1988 -
             (C5489 * C1983 + C5490 * C1987) +
             (C554 * C6559 + C92148 * C7242) * C1984) *
                C92067) *
               C44804) *
              C92110 * C1986)) /
        (p * q * std::sqrt(p + q));
    d2eezy[25] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92148 * C555) * C2059 +
             (C554 * C182 + C92148 * C641) * C1985 - C5484 * C2060 -
             C5591 * C1986) *
                C92310 +
            (C2541 + C2542 - C2543 - C2559) * C92067) *
               C92348 +
           ((C5484 * C2059 + C5591 * C1985 - C5486 * C2060 - C5592 * C1986) *
                C92310 +
            (C7359 + C7360 - C7361 - C7362) * C92067) *
               C92349 +
           ((C5486 * C2059 + C5592 * C1985 - C5492 * C2060 - C5593 * C1986) *
                C92310 +
            (C7363 + C7364 - C7365 - C7366) * C92067) *
               C44804) *
              C1983 +
          (((C2543 - (C2542 + C2541) + C2559) * C92310 +
            (C2548 - (C2547 + C2546) + C2560) * C92067) *
               C92348 +
           ((C7361 - (C7360 + C7359) + C7362) * C92310 +
            (C17776 - (C17775 + C17774) + C17777) * C92067) *
               C92349 +
           ((C7365 - (C7364 + C7363) + C7366) * C92310 +
            ((C554 * C6557 + C92148 * C7241) * C2060 -
             (C4721 * C1985 + C4634 * C2059) +
             (C554 * C6683 + C92148 * C7357) * C1986) *
                C92067) *
               C44804) *
              C1984) *
         C92110) /
        (p * q * std::sqrt(p + q));
    d2eezz[25] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C554 * C107 + C92148 * C555) * C244 +
              (C554 * C245 + C92148 * C719) * C92110) *
                 C92310 +
             (C726 + C742) * C92067) *
                C92348 +
            ((C5673 + C5691) * C92310 + C7466 * C92067) * C92349 +
            C46228 * C44804) *
               C1985 -
           (((C5693 + C5682) * C92067 + (C5694 + C5685) * C92310) * C44804 +
            (C7467 * C92067 + (C5692 + C5676) * C92310) * C92349 +
            (C7468 * C92067 + (C5691 + C5673) * C92310) * C92348) *
               C1986) *
              C1983 +
          (((C7466 * C92310 + C15493 * C92067) * C92348 +
            (C5679 * C92310 + (C4803 + C4807) * C92067) * C92349 +
            ((C5682 + C5693) * C92310 +
             ((C554 * C6557 + C92148 * C7241) * C244 +
              (C554 * C6795 + C92148 * C7464) * C92110) *
                 C92067) *
                C44804) *
               C1986 -
           (((C4807 + C4803) * C92067 + C7467 * C92310) * C44804 +
            (C17876 * C92067 + C7468 * C92310) * C92349 +
            ((C743 + C729) * C92067 + (C742 + C726) * C92310) * C92348) *
               C1985) *
              C1984)) /
        (p * q * std::sqrt(p + q));
    d2eexx[26] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C89875 * C107 + C92310 * C113 + C89868 * C108 + C92067 * C114) *
                 C801 +
             (C89875 * C117 + C92310 * C125 + C89868 * C118 + C92067 * C126) *
                 C92078) *
                C92348 +
            ((C45573 + C45574) * C801 + (C45575 + C45576) * C92078) * C92349 +
            C45589 * C44804) *
               C92148 * C2709 -
           (((C48893 + C48894) * C92078 + (C48895 + C48896) * C801) * C44804 +
            ((C48897 + C48898) * C92078 + (C48899 + C48900) * C801) * C92349 +
            ((C89868 * C1396 + C92067 * C1412 + C89875 * C1397 +
              C92310 * C1413) *
                 C92078 +
             (C89868 * C1388 + C92067 * C1400 + C89875 * C1389 +
              C92310 * C1401) *
                 C801) *
                C92348) *
               C92148 * C2710) *
              C1985 +
          ((((C48900 + C48899) * C801 + (C48898 + C48897) * C92078) * C92348 +
            ((C48896 + C48895) * C801 + (C48894 + C48893) * C92078) * C92349 +
            ((C89875 * C8536 + C92310 * C8538 + C89868 * C8537 +
              C92067 * C8539) *
                 C801 +
             (C89875 * C8540 + C92310 * C8542 + C89868 * C8541 +
              C92067 * C8543) *
                 C92078) *
                C44804) *
               C92148 * C2710 -
           (((C45581 + C45582) * C92078 + (C45583 + C45584) * C801) * C44804 +
            ((C45580 + C45579) * C92078 + (C45578 + C45577) * C801) * C92349 +
            ((C45576 + C45575) * C92078 + (C45574 + C45573) * C801) * C92348) *
               C92148 * C2709) *
              C1986)) /
        (p * q * std::sqrt(p + q));
    d2eexy[26] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C89875 * C107 + C92310 * C113 + C89868 * C108 + C92067 * C114) *
                C2059 +
            (C89875 * C182 + C92310 * C188 + C89868 * C183 + C92067 * C189) *
                C1985 -
            (C45574 + C45573) * C2060 - (C45676 + C45677) * C1986) *
               C92348 +
           ((C45573 + C45574) * C2059 + (C45677 + C45676) * C1985 -
            (C45578 + C45577) * C2060 - (C45679 + C45678) * C1986) *
               C92349 +
           (C45585 * C2059 + C45682 * C1985 - (C45583 + C45584) * C2060 -
            (C45681 + C45680) * C1986) *
               C44804) *
              C92148 * C92078 * C2709 +
          (((C48900 + C48899) * C2060 -
            ((C89868 * C1470 + C92067 * C1478 + C89875 * C1471 +
              C92310 * C1479) *
                 C1985 +
             (C89868 * C1388 + C92067 * C1400 + C89875 * C1389 +
              C92310 * C1401) *
                 C2059) +
            (C49007 + C49008) * C1986) *
               C92348 +
           ((C48896 + C48895) * C2060 -
            ((C49008 + C49007) * C1985 + (C48899 + C48900) * C2059) +
            (C49009 + C49010) * C1986) *
               C92349 +
           ((C89875 * C8536 + C92310 * C8538 + C89868 * C8537 +
             C92067 * C8539) *
                C2060 -
            ((C49010 + C49009) * C1985 + (C48895 + C48896) * C2059) +
            (C89875 * C8666 + C92310 * C8668 + C89868 * C8667 +
             C92067 * C8669) *
                C1986) *
               C44804) *
              C92148 * C92078 * C2710)) /
        (p * q * std::sqrt(p + q));
    d2eexz[26] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C89875 * C107 + C92310 * C113 + C89868 * C108 + C92067 * C114) *
                C2849 +
            (C89875 * C245 + C92310 * C251 + C89868 * C246 + C92067 * C252) *
                C2709 -
            (C89868 * C1388 + C92067 * C1400 + C89875 * C1389 +
             C92310 * C1401) *
                C2850 -
            (C89868 * C1539 + C92067 * C1547 + C89875 * C1540 +
             C92310 * C1548) *
                C2710) *
               C92348 +
           ((C45573 + C45574) * C2849 + (C45770 + C45771) * C2709 -
            (C48899 + C48900) * C2850 - (C49117 + C49118) * C2710) *
               C92349 +
           (C45585 * C2849 + C45776 * C2709 - (C48895 + C48896) * C2850 -
            (C49119 + C49120) * C2710) *
               C44804) *
              C92148 * C1985 +
          (((C48900 + C48899) * C2850 -
            ((C45771 + C45770) * C2709 + (C45574 + C45573) * C2849) +
            (C49118 + C49117) * C2710) *
               C92348 +
           ((C48896 + C48895) * C2850 -
            ((C45773 + C45772) * C2709 + (C45578 + C45577) * C2849) +
            (C49120 + C49119) * C2710) *
               C92349 +
           ((C89875 * C8536 + C92310 * C8538 + C89868 * C8537 +
             C92067 * C8539) *
                C2850 -
            ((C45774 + C45775) * C2709 + (C45583 + C45584) * C2849) +
            (C89875 * C8780 + C92310 * C8782 + C89868 * C8781 +
             C92067 * C8783) *
                C2710) *
               C44804) *
              C92148 * C1986) *
         C92078) /
        (p * q * std::sqrt(p + q));
    d2eeyx[26] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C45029 * C107 + C92348 * C308 + C45030 * C805 +
                        C92349 * C1022 + C45031 * C806 + C44804 * C1023) *
                           C801 +
                       (C45029 * C117 + C92348 * C314 + C45030 * C813 +
                        C92349 * C1030 + C45031 * C822 + C44804 * C1031) *
                           C92078) *
                          C92148 * C92310 +
                      ((C45059 + C45058 + C45057) * C801 +
                       (C45062 + C45061 + C45060) * C92078) *
                          C92148 * C92067) *
                         C2709 -
                     (((C48270 + C48269 + C48268) * C92078 +
                       (C48267 + C48266 + C48265) * C801) *
                          C92148 * C92067 +
                      ((C45031 * C5778 + C44804 * C6048 + C45030 * C3439 +
                        C92349 * C3665 + C45029 * C1397 + C92348 * C1614) *
                           C92078 +
                       (C45031 * C5772 + C44804 * C6042 + C45030 * C3431 +
                        C92349 * C3661 + C45029 * C1389 + C92348 * C1606) *
                           C801) *
                          C92148 * C92310) *
                         C2710) *
                        C1985 +
                    ((((C45029 * C3431 + C92348 * C3661 + C45030 * C5772 +
                        C92349 * C6042 + C45031 * C8536 + C44804 * C8894) *
                           C801 +
                       (C45029 * C3439 + C92348 * C3665 + C45030 * C5778 +
                        C92349 * C6048 + C45031 * C8540 + C44804 * C8896) *
                           C92078) *
                          C92148 * C92310 +
                      ((C45029 * C3432 + C92348 * C3662 + C45030 * C5771 +
                        C92349 * C6041 + C45031 * C8537 + C44804 * C8895) *
                           C801 +
                       (C45029 * C3440 + C92348 * C3666 + C45030 * C5777 +
                        C92349 * C6047 + C45031 * C8541 + C44804 * C8897) *
                           C92078) *
                          C92148 * C92067) *
                         C2710 -
                     (((C47352 + C47351 + C47350) * C92078 +
                       (C47349 + C47348 + C47347) * C801) *
                          C92148 * C92067 +
                      ((C45031 * C4886 + C44804 * C5222 + C45030 * C822 +
                        C92349 * C1031 + C45029 * C813 + C92348 * C1030) *
                           C92078 +
                       (C45031 * C4882 + C44804 * C5218 + C45030 * C806 +
                        C92349 * C1023 + C45029 * C805 + C92348 * C1022) *
                           C801) *
                          C92148 * C92310) *
                         C2709) *
                        C1986)) /
                  (p * q * std::sqrt(p + q));
    d2eeyy[26] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C45029 * C107 + C92348 * C308 + C45030 * C805 +
                       C92349 * C1022 + C45031 * C806 + C44804 * C1023) *
                          C2059 +
                      (C45029 * C182 + C92348 * C394 + C45030 * C890 +
                       C92349 * C1085 + C45031 * C891 + C44804 * C1086) *
                          C1985 -
                      (C45031 * C4882 + C44804 * C5218 + C45030 * C806 +
                       C92349 * C1023 + C45029 * C805 + C92348 * C1022) *
                          C2060 -
                      (C45031 * C5012 + C44804 * C5299 + C45030 * C891 +
                       C92349 * C1086 + C45029 * C890 + C92348 * C1085) *
                          C1986) *
                         C92148 * C92310 +
                     ((C45059 + C45058 + C45057) * C2059 +
                      (C45155 + C45156 + C45157) * C1985 -
                      (C47349 + C47348 + C47347) * C2060 -
                      (C47457 + C47458 + C47459) * C1986) *
                         C92148 * C92067) *
                        C92078 * C2709 +
                    (((C45029 * C3431 + C92348 * C3661 + C45030 * C5772 +
                       C92349 * C6042 + C45031 * C8536 + C44804 * C8894) *
                          C2060 -
                      ((C45031 * C5870 + C44804 * C6128 + C45030 * C3513 +
                        C92349 * C3735 + C45029 * C1471 + C92348 * C1672) *
                           C1985 +
                       (C45031 * C5772 + C44804 * C6042 + C45030 * C3431 +
                        C92349 * C3661 + C45029 * C1389 + C92348 * C1606) *
                           C2059) +
                      (C45029 * C3513 + C92348 * C3735 + C45030 * C5870 +
                       C92349 * C6128 + C45031 * C8666 + C44804 * C8996) *
                          C1986) *
                         C92148 * C92310 +
                     ((C45029 * C3432 + C92348 * C3662 + C45030 * C5771 +
                       C92349 * C6041 + C45031 * C8537 + C44804 * C8895) *
                          C2060 -
                      ((C48377 + C48376 + C48375) * C1985 +
                       (C48267 + C48266 + C48265) * C2059) +
                      (C45029 * C3514 + C92348 * C3736 + C45030 * C5869 +
                       C92349 * C6127 + C45031 * C8667 + C44804 * C8997) *
                          C1986) *
                         C92148 * C92067) *
                        C92078 * C2710)) /
                  (p * q * std::sqrt(p + q));
    d2eeyz[26] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C45029 * C107 + C92348 * C308 + C45030 * C805 +
                       C92349 * C1022 + C45031 * C806 + C44804 * C1023) *
                          C2849 +
                      (C45029 * C245 + C92348 * C474 + C45030 * C956 +
                       C92349 * C1146 + C45031 * C957 + C44804 * C1147) *
                          C2709 -
                      (C45031 * C5772 + C44804 * C6042 + C45030 * C3431 +
                       C92349 * C3661 + C45029 * C1389 + C92348 * C1606) *
                          C2850 -
                      (C45031 * C5958 + C44804 * C6207 + C45030 * C3587 +
                       C92349 * C3805 + C45029 * C1540 + C92348 * C1727) *
                          C2710) *
                         C92148 * C92310 +
                     ((C45059 + C45058 + C45057) * C2849 +
                      (C45247 + C45248 + C45249) * C2709 -
                      (C48267 + C48266 + C48265) * C2850 -
                      (C48482 + C48483 + C48484) * C2710) *
                         C92148 * C92067) *
                        C1985 +
                    (((C45029 * C3431 + C92348 * C3661 + C45030 * C5772 +
                       C92349 * C6042 + C45031 * C8536 + C44804 * C8894) *
                          C2850 -
                      ((C45031 * C5114 + C44804 * C5378 + C45030 * C957 +
                        C92349 * C1147 + C45029 * C956 + C92348 * C1146) *
                           C2709 +
                       (C45031 * C4882 + C44804 * C5218 + C45030 * C806 +
                        C92349 * C1023 + C45029 * C805 + C92348 * C1022) *
                           C2849) +
                      (C45029 * C3587 + C92348 * C3805 + C45030 * C5958 +
                       C92349 * C6207 + C45031 * C8780 + C44804 * C9096) *
                          C2710) *
                         C92148 * C92310 +
                     ((C45029 * C3432 + C92348 * C3662 + C45030 * C5771 +
                       C92349 * C6041 + C45031 * C8537 + C44804 * C8895) *
                          C2850 -
                      ((C47564 + C47565 + C47566) * C2709 +
                       (C47349 + C47348 + C47347) * C2849) +
                      (C45029 * C3588 + C92348 * C3806 + C45030 * C5957 +
                       C92349 * C6210 + C45031 * C8781 + C44804 * C9097) *
                          C2710) *
                         C92148 * C92067) *
                        C1986) *
                   C92078) /
                  (p * q * std::sqrt(p + q));
    d2eezx[26] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C554 * C107 + C92148 * C555) * C801 +
              (C554 * C117 + C92148 * C561) * C92078) *
                 C92310 +
             (C584 * C801 + C585 * C92078) * C92067) *
                C92348 +
            ((C5493 + C5494) * C92310 + (C5468 + C5469) * C92067) * C92349 +
            C46077 * C44804) *
               C2709 -
           (((C9201 + C9202) * C92067 + (C9217 + C9218) * C92310) * C44804 +
            ((C9207 + C9208) * C92067 + (C9219 + C9220) * C92310) * C92349 +
            ((C3191 * C92078 + C3190 * C801) * C92067 +
             ((C554 * C1397 + C92148 * C1796) * C92078 +
              (C554 * C1389 + C92148 * C1788) * C801) *
                 C92310) *
                C92348) *
               C2710) *
              C1985 +
          ((((C9220 + C9219) * C92310 + (C9208 + C9207) * C92067) * C92348 +
            ((C9218 + C9217) * C92310 + (C9202 + C9201) * C92067) * C92349 +
            ((C39427 + C39426) * C92310 +
             ((C554 * C8537 + C92148 * C9197) * C801 +
              (C554 * C8541 + C92148 * C9199) * C92078) *
                 C92067) *
                C44804) *
               C2710 -
           (((C5498 + C5499) * C92067 + (C5500 + C5501) * C92310) * C44804 +
            ((C5475 + C5474) * C92067 + (C5496 + C5495) * C92310) * C92349 +
            ((C5469 + C5468) * C92067 + (C5494 + C5493) * C92310) * C92348) *
               C2709) *
              C1986)) /
        (p * q * std::sqrt(p + q));
    d2eezy[26] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92148 * C555) * C2059 +
             (C554 * C182 + C92148 * C641) * C1985 - C5484 * C2060 -
             C5591 * C1986) *
                C92310 +
            (C2541 + C2542 - C2543 - C2559) * C92067) *
               C92348 +
           ((C5484 * C2059 + C5591 * C1985 - C5486 * C2060 - C5592 * C1986) *
                C92310 +
            (C7359 + C7360 - C7361 - C7362) * C92067) *
               C92349 +
           ((C5486 * C2059 + C5592 * C1985 - C5492 * C2060 - C5593 * C1986) *
                C92310 +
            (C7363 + C7364 - C7365 - C7366) * C92067) *
               C44804) *
              C92078 * C2709 +
          (((C9216 * C2060 -
             ((C554 * C1471 + C92148 * C1854) * C1985 +
              (C554 * C1389 + C92148 * C1788) * C2059) +
             C9325 * C1986) *
                C92310 +
            (C8213 * C2060 - (C3272 * C1985 + C3190 * C2059) + C8322 * C1986) *
                C92067) *
               C92348 +
           ((C9214 * C2060 - (C9325 * C1985 + C9216 * C2059) + C9326 * C1986) *
                C92310 +
            (C8215 * C2060 - (C8322 * C1985 + C8213 * C2059) + C8323 * C1986) *
                C92067) *
               C92349 +
           ((C39425 * C2060 - (C9326 * C1985 + C9214 * C2059) +
             C39497 * C1986) *
                C92310 +
            ((C554 * C8537 + C92148 * C9197) * C2060 -
             (C8323 * C1985 + C8215 * C2059) +
             (C554 * C8667 + C92148 * C9319) * C1986) *
                C92067) *
               C44804) *
              C92078 * C2710)) /
        (p * q * std::sqrt(p + q));
    d2eezz[26] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C554 * C107 + C92148 * C555) * C2849 +
                       (C554 * C245 + C92148 * C719) * C2709 -
                       (C554 * C1389 + C92148 * C1788) * C2850 -
                       (C554 * C1540 + C92148 * C1909) * C2710) *
                          C92310 +
                      (C3345 + C3346 - C3347 - C3363) * C92067) *
                         C92348 +
                     ((C9427 + C9428 - C9429 - C9439) * C92310 +
                      (C8425 + C8426 - C8427 - C8437) * C92067) *
                         C92349 +
                     ((C9432 + C9433 - C9434 - C9440) * C92310 +
                      (C8430 + C8431 - C8432 - C8438) * C92067) *
                         C44804) *
                        C1985 +
                    (((C9429 - (C9428 + C9427) + C9439) * C92310 +
                      (C8427 - (C8426 + C8425) + C8437) * C92067) *
                         C92348 +
                     ((C9434 - (C9433 + C9432) + C9440) * C92310 +
                      (C8432 - (C8431 + C8430) + C8438) * C92067) *
                         C92349 +
                     ((C39567 - (C39566 + C39565) + C39571) * C92310 +
                      ((C554 * C8537 + C92148 * C9197) * C2850 -
                       (C5689 * C2709 + C5490 * C2849) +
                       (C554 * C8781 + C92148 * C9425) * C2710) *
                          C92067) *
                         C44804) *
                        C1986) *
                   C92078) /
                  (p * q * std::sqrt(p + q));
    d2eexx[27] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C89875 * C107 + C92310 * C113 + C89868 * C108 + C92067 * C114) *
                C801 +
            (C89875 * C117 + C92310 * C125 + C89868 * C118 + C92067 * C126) *
                C92078) *
               C92348 +
           ((C45573 + C45574) * C801 + (C45575 + C45576) * C92078) * C92349 +
           C45589 * C44804) *
              C92148 * C92110 * C798 -
          (((C45581 + C45582) * C92078 + (C45583 + C45584) * C801) * C44804 +
           ((C45580 + C45579) * C92078 + (C45578 + C45577) * C801) * C92349 +
           ((C45576 + C45575) * C92078 + (C45574 + C45573) * C801) * C92348) *
              C92148 * C92110 * C799 +
          (C45589 * C92348 +
           ((C45584 + C45583) * C801 + (C45582 + C45581) * C92078) * C92349 +
           ((C89875 * C4883 + C92310 * C4889 + C89868 * C4884 +
             C92067 * C4890) *
                C801 +
            (C89875 * C4891 + C92310 * C4895 + C89868 * C4892 +
             C92067 * C4896) *
                C92078) *
               C44804) *
              C92148 * C92110 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C89875 * C107 + C92310 * C113 + C89868 * C108 + C92067 * C114) *
               C104 +
           (C89875 * C117 + C92310 * C125 + C89868 * C118 + C92067 * C126) *
               C93 -
           (C89868 * C109 + C92067 * C115 + C89875 * C108 + C92310 * C114) *
               C105 -
           (C89868 * C119 + C92067 * C127 + C89875 * C118 + C92310 * C126) *
               C94 +
           (C89875 * C109 + C92310 * C115 + C89868 * C110 + C92067 * C116) *
               C106 +
           (C89875 * C119 + C92310 * C127 + C89868 * C120 + C92067 * C128) *
               C95) *
              C92348 +
          ((C89875 * C805 + C92310 * C817 + C89868 * C804 + C92067 * C816) *
               C104 +
           (C89875 * C813 + C92310 * C829 + C89868 * C812 + C92067 * C828) *
               C93 -
           (C89868 * C803 + C92067 * C815 + C89875 * C804 + C92310 * C816) *
               C105 -
           (C89868 * C811 + C92067 * C827 + C89875 * C812 + C92310 * C828) *
               C94 +
           (C89875 * C803 + C92310 * C815 + C89868 * C802 + C92067 * C814) *
               C106 +
           (C89875 * C811 + C92310 * C827 + C89868 * C810 + C92067 * C826) *
               C95) *
              C92349 +
          ((C89875 * C806 + C92310 * C818 + C89868 * C807 + C92067 * C819) *
               C104 +
           (C89875 * C822 + C92310 * C830 + C89868 * C823 + C92067 * C831) *
               C93 -
           (C89868 * C808 + C92067 * C820 + C89875 * C807 + C92310 * C819) *
               C105 -
           (C89868 * C824 + C92067 * C832 + C89875 * C823 + C92310 * C831) *
               C94 +
           (C89875 * C808 + C92310 * C820 + C89868 * C809 + C92067 * C821) *
               C106 +
           (C89875 * C824 + C92310 * C832 + C89868 * C825 + C92067 * C833) *
               C95) *
              C44804) *
         C92148 * C92110 * C92099) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C89875 * C107 + C92310 * C113 + C89868 * C108 + C92067 * C114) *
                C801 +
            (C89875 * C117 + C92310 * C125 + C89868 * C118 + C92067 * C126) *
                C92078) *
               C92348 +
           ((C45573 + C45574) * C801 + (C45575 + C45576) * C92078) * C92349 +
           C45589 * C44804) *
              C92148 * C1383 -
          (((C89868 * C5777 + C92067 * C5789 + C89875 * C5778 +
             C92310 * C5790) *
                C92078 +
            (C89868 * C5771 + C92067 * C5779 + C89875 * C5772 +
             C92310 * C5780) *
                C801) *
               C44804 +
           ((C89868 * C3440 + C92067 * C3444 + C89875 * C3439 +
             C92310 * C3443) *
                C92078 +
            (C89868 * C3432 + C92067 * C3436 + C89875 * C3431 +
             C92310 * C3435) *
                C801) *
               C92349 +
           ((C89868 * C1396 + C92067 * C1412 + C89875 * C1397 +
             C92310 * C1413) *
                C92078 +
            (C89868 * C1388 + C92067 * C1400 + C89875 * C1389 +
             C92310 * C1401) *
                C801) *
               C92348) *
              C92148 * C1384 +
          (((C89875 * C1390 + C92310 * C1402 + C89868 * C1391 +
             C92067 * C1403) *
                C801 +
            (C89875 * C1406 + C92310 * C1414 + C89868 * C1407 +
             C92067 * C1415) *
                C92078) *
               C92348 +
           ((C89875 * C5773 + C92310 * C5781 + C89868 * C5774 +
             C92067 * C5782) *
                C801 +
            (C89875 * C5783 + C92310 * C5791 + C89868 * C5784 +
             C92067 * C5792) *
                C92078) *
               C92349 +
           ((C89875 * C5775 + C92310 * C5785 + C89868 * C5776 +
             C92067 * C5786) *
                C801 +
            (C89875 * C5787 + C92310 * C5793 + C89868 * C5788 +
             C92067 * C5794) *
                C92078) *
               C44804) *
              C92148 * C1385) *
         C92099) /
            (p * q * std::sqrt(p + q));
    d2eexy[27] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C89875 * C107 + C92310 * C113 + C89868 * C108 + C92067 * C114) *
               C884 +
           (C89875 * C182 + C92310 * C188 + C89868 * C183 + C92067 * C189) *
               C798 -
           (C45574 + C45573) * C885 - (C45676 + C45677) * C799 + C45585 * C886 +
           C45682 * C800) *
              C92348 +
          ((C45573 + C45574) * C884 + (C45677 + C45676) * C798 -
           (C45578 + C45577) * C885 - (C45679 + C45678) * C799 +
           (C45584 + C45583) * C886 + (C45680 + C45681) * C800) *
              C92349 +
          (C45585 * C884 + C45682 * C798 - (C45583 + C45584) * C885 -
           (C45681 + C45680) * C799 +
           (C89875 * C4883 + C92310 * C4889 + C89868 * C4884 + C92067 * C4890) *
               C886 +
           (C89875 * C5014 + C92310 * C5018 + C89868 * C5015 + C92067 * C5019) *
               C800) *
              C44804) *
         C92148 * C92078 * C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C89875 * C107 + C92310 * C113 + C89868 * C108 + C92067 * C114) *
                C181 +
            (C89875 * C182 + C92310 * C188 + C89868 * C183 + C92067 * C189) *
                C92099) *
               C92348 +
           ((C89875 * C805 + C92310 * C817 + C89868 * C804 + C92067 * C816) *
                C181 +
            (C89875 * C890 + C92310 * C898 + C89868 * C889 + C92067 * C897) *
                C92099) *
               C92349 +
           ((C89875 * C806 + C92310 * C818 + C89868 * C807 + C92067 * C819) *
                C181 +
            (C89875 * C891 + C92310 * C899 + C89868 * C892 + C92067 * C900) *
                C92099) *
               C44804) *
              C92148 * C93 -
          (((C89868 * C893 + C92067 * C901 + C89875 * C892 + C92310 * C900) *
                C92099 +
            (C89868 * C808 + C92067 * C820 + C89875 * C807 + C92310 * C819) *
                C181) *
               C44804 +
           ((C89868 * C888 + C92067 * C896 + C89875 * C889 + C92310 * C897) *
                C92099 +
            (C89868 * C803 + C92067 * C815 + C89875 * C804 + C92310 * C816) *
                C181) *
               C92349 +
           ((C89868 * C184 + C92067 * C190 + C89875 * C183 + C92310 * C189) *
                C92099 +
            (C89868 * C109 + C92067 * C115 + C89875 * C108 + C92310 * C114) *
                C181) *
               C92348) *
              C92148 * C94 +
          (((C89875 * C109 + C92310 * C115 + C89868 * C110 + C92067 * C116) *
                C181 +
            (C89875 * C184 + C92310 * C190 + C89868 * C185 + C92067 * C191) *
                C92099) *
               C92348 +
           ((C89875 * C803 + C92310 * C815 + C89868 * C802 + C92067 * C814) *
                C181 +
            (C89875 * C888 + C92310 * C896 + C89868 * C887 + C92067 * C895) *
                C92099) *
               C92349 +
           ((C89875 * C808 + C92310 * C820 + C89868 * C809 + C92067 * C821) *
                C181 +
            (C89875 * C893 + C92310 * C901 + C89868 * C894 + C92067 * C902) *
                C92099) *
               C44804) *
              C92148 * C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C89875 * C107 + C92310 * C113 + C89868 * C108 + C92067 * C114) *
                C181 +
            (C89875 * C182 + C92310 * C188 + C89868 * C183 + C92067 * C189) *
                C92099) *
               C92348 +
           ((C45573 + C45574) * C181 + (C45677 + C45676) * C92099) * C92349 +
           (C45585 * C181 + C45682 * C92099) * C44804) *
              C92148 * C92078 * C1383 -
          (((C89868 * C5869 + C92067 * C5875 + C89875 * C5870 +
             C92310 * C5876) *
                C92099 +
            (C89868 * C5771 + C92067 * C5779 + C89875 * C5772 +
             C92310 * C5780) *
                C181) *
               C44804 +
           ((C89868 * C3514 + C92067 * C3518 + C89875 * C3513 +
             C92310 * C3517) *
                C92099 +
            (C89868 * C3432 + C92067 * C3436 + C89875 * C3431 +
             C92310 * C3435) *
                C181) *
               C92349 +
           ((C89868 * C1470 + C92067 * C1478 + C89875 * C1471 +
             C92310 * C1479) *
                C92099 +
            (C89868 * C1388 + C92067 * C1400 + C89875 * C1389 +
             C92310 * C1401) *
                C181) *
               C92348) *
              C92148 * C92078 * C1384 +
          (((C89875 * C1390 + C92310 * C1402 + C89868 * C1391 +
             C92067 * C1403) *
                C181 +
            (C89875 * C1472 + C92310 * C1480 + C89868 * C1473 +
             C92067 * C1481) *
                C92099) *
               C92348 +
           ((C89875 * C5773 + C92310 * C5781 + C89868 * C5774 +
             C92067 * C5782) *
                C181 +
            (C89875 * C5871 + C92310 * C5877 + C89868 * C5872 +
             C92067 * C5878) *
                C92099) *
               C92349 +
           ((C89875 * C5775 + C92310 * C5785 + C89868 * C5776 +
             C92067 * C5786) *
                C181 +
            (C89875 * C5873 + C92310 * C5879 + C89868 * C5874 +
             C92067 * C5880) *
                C92099) *
               C44804) *
              C92148 * C92078 * C1385)) /
            (p * q * std::sqrt(p + q));
    d2eexz[27] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C89875 * C107 + C92310 * C113 + C89868 * C108 + C92067 * C114) *
                C244 +
            (C89875 * C245 + C92310 * C251 + C89868 * C246 + C92067 * C252) *
                C92110) *
               C92348 +
           ((C45573 + C45574) * C244 + (C45770 + C45771) * C92110) * C92349 +
           C45778 * C44804) *
              C92148 * C798 -
          (((C45774 + C45775) * C92110 + (C45583 + C45584) * C244) * C44804 +
           ((C45773 + C45772) * C92110 + (C45578 + C45577) * C244) * C92349 +
           ((C45771 + C45770) * C92110 + (C45574 + C45573) * C244) * C92348) *
              C92148 * C799 +
          (C45778 * C92348 +
           ((C45584 + C45583) * C244 + (C45775 + C45774) * C92110) * C92349 +
           ((C89875 * C4883 + C92310 * C4889 + C89868 * C4884 +
             C92067 * C4890) *
                C244 +
            (C89875 * C5115 + C92310 * C5119 + C89868 * C5116 +
             C92067 * C5120) *
                C92110) *
               C44804) *
              C92148 * C800) *
         C92078) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C89875 * C107 + C92310 * C113 + C89868 * C108 + C92067 * C114) *
                C244 +
            (C89875 * C245 + C92310 * C251 + C89868 * C246 + C92067 * C252) *
                C92110) *
               C92348 +
           ((C89875 * C805 + C92310 * C817 + C89868 * C804 + C92067 * C816) *
                C244 +
            (C89875 * C956 + C92310 * C964 + C89868 * C955 + C92067 * C963) *
                C92110) *
               C92349 +
           ((C89875 * C806 + C92310 * C818 + C89868 * C807 + C92067 * C819) *
                C244 +
            (C89875 * C957 + C92310 * C965 + C89868 * C958 + C92067 * C966) *
                C92110) *
               C44804) *
              C92148 * C92099 * C93 -
          (((C89868 * C959 + C92067 * C967 + C89875 * C958 + C92310 * C966) *
                C92110 +
            (C89868 * C808 + C92067 * C820 + C89875 * C807 + C92310 * C819) *
                C244) *
               C44804 +
           ((C89868 * C954 + C92067 * C962 + C89875 * C955 + C92310 * C963) *
                C92110 +
            (C89868 * C803 + C92067 * C815 + C89875 * C804 + C92310 * C816) *
                C244) *
               C92349 +
           ((C89868 * C247 + C92067 * C253 + C89875 * C246 + C92310 * C252) *
                C92110 +
            (C89868 * C109 + C92067 * C115 + C89875 * C108 + C92310 * C114) *
                C244) *
               C92348) *
              C92148 * C92099 * C94 +
          (((C89875 * C109 + C92310 * C115 + C89868 * C110 + C92067 * C116) *
                C244 +
            (C89875 * C247 + C92310 * C253 + C89868 * C248 + C92067 * C254) *
                C92110) *
               C92348 +
           ((C89875 * C803 + C92310 * C815 + C89868 * C802 + C92067 * C814) *
                C244 +
            (C89875 * C954 + C92310 * C962 + C89868 * C953 + C92067 * C961) *
                C92110) *
               C92349 +
           ((C89875 * C808 + C92310 * C820 + C89868 * C809 + C92067 * C821) *
                C244 +
            (C89875 * C959 + C92310 * C967 + C89868 * C960 + C92067 * C968) *
                C92110) *
               C44804) *
              C92148 * C92099 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C89875 * C107 + C92310 * C113 + C89868 * C108 + C92067 * C114) *
               C1534 +
           (C89875 * C245 + C92310 * C251 + C89868 * C246 + C92067 * C252) *
               C1383 -
           (C89868 * C1388 + C92067 * C1400 + C89875 * C1389 + C92310 * C1401) *
               C1535 -
           (C89868 * C1539 + C92067 * C1547 + C89875 * C1540 + C92310 * C1548) *
               C1384 +
           (C89875 * C1390 + C92310 * C1402 + C89868 * C1391 + C92067 * C1403) *
               C1536 +
           (C89875 * C1541 + C92310 * C1549 + C89868 * C1542 + C92067 * C1550) *
               C1385) *
              C92348 +
          ((C45573 + C45574) * C1534 + (C45770 + C45771) * C1383 -
           (C89868 * C3432 + C92067 * C3436 + C89875 * C3431 + C92310 * C3435) *
               C1535 -
           (C89868 * C3588 + C92067 * C3592 + C89875 * C3587 + C92310 * C3591) *
               C1384 +
           (C89875 * C5773 + C92310 * C5781 + C89868 * C5774 + C92067 * C5782) *
               C1536 +
           (C89875 * C5955 + C92310 * C5961 + C89868 * C5956 + C92067 * C5962) *
               C1385) *
              C92349 +
          (C45585 * C1534 + C45776 * C1383 -
           (C89868 * C5771 + C92067 * C5779 + C89875 * C5772 + C92310 * C5780) *
               C1535 -
           (C89868 * C5957 + C92067 * C5963 + C89875 * C5958 + C92310 * C5964) *
               C1384 +
           (C89875 * C5775 + C92310 * C5785 + C89868 * C5776 + C92067 * C5786) *
               C1536 +
           (C89875 * C5959 + C92310 * C5965 + C89868 * C5960 + C92067 * C5966) *
               C1385) *
              C44804) *
         C92148 * C92099 * C92078) /
            (p * q * std::sqrt(p + q));
    d2eeyx[27] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C45029 * C107 + C92348 * C308 + C45030 * C805 +
                       C92349 * C1022 + C45031 * C806 + C44804 * C1023) *
                          C801 +
                      (C45029 * C117 + C92348 * C314 + C45030 * C813 +
                       C92349 * C1030 + C45031 * C822 + C44804 * C1031) *
                          C92078) *
                         C92148 * C92310 +
                     ((C45059 + C45058 + C45057) * C801 +
                      (C45062 + C45061 + C45060) * C92078) *
                         C92148 * C92067) *
                        C92110 * C798 -
                    (((C45031 * C4885 + C44804 * C5221 + C45030 * C823 +
                       C92349 * C1032 + C45029 * C812 + C92348 * C1029) *
                          C92078 +
                      (C45031 * C4881 + C44804 * C5217 + C45030 * C807 +
                       C92349 * C1024 + C45029 * C804 + C92348 * C1021) *
                          C801) *
                         C92148 * C92067 +
                     ((C45031 * C4886 + C44804 * C5222 + C45030 * C822 +
                       C92349 * C1031 + C45029 * C813 + C92348 * C1030) *
                          C92078 +
                      (C45031 * C4882 + C44804 * C5218 + C45030 * C806 +
                       C92349 * C1023 + C45029 * C805 + C92348 * C1022) *
                          C801) *
                         C92148 * C92310) *
                        C92110 * C799 +
                    (((C45029 * C806 + C92348 * C1023 + C45030 * C4882 +
                       C92349 * C5218 + C45031 * C4883 + C44804 * C5219) *
                          C801 +
                      (C45029 * C822 + C92348 * C1031 + C45030 * C4886 +
                       C92349 * C5222 + C45031 * C4891 + C44804 * C5223) *
                          C92078) *
                         C92148 * C92310 +
                     ((C45029 * C807 + C92348 * C1024 + C45030 * C4881 +
                       C92349 * C5217 + C45031 * C4884 + C44804 * C5220) *
                          C801 +
                      (C45029 * C823 + C92348 * C1032 + C45030 * C4885 +
                       C92349 * C5221 + C45031 * C4892 + C44804 * C5224) *
                          C92078) *
                         C92148 * C92067) *
                        C92110 * C800)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C45029 * C107 + C92348 * C308 + C45030 * C805 +
                      C92349 * C1022 + C45031 * C806 + C44804 * C1023) *
                         C104 +
                     (C45029 * C117 + C92348 * C314 + C45030 * C813 +
                      C92349 * C1030 + C45031 * C822 + C44804 * C1031) *
                         C93 -
                     (C45057 + C45058 + C45059) * C105 -
                     (C45060 + C45061 + C45062) * C94 +
                     (C45063 + C45064 + C45065) * C106 +
                     (C45066 + C45067 + C45068) * C95) *
                        C92148 * C92310 +
                    ((C45059 + C45058 + C45057) * C104 +
                     (C45062 + C45061 + C45060) * C93 -
                     (C45065 + C45064 + C45063) * C105 -
                     (C45068 + C45067 + C45066) * C94 +
                     (C45029 * C110 + C92348 * C311 + C45030 * C802 +
                      C92349 * C1019 + C45031 * C809 + C44804 * C1026) *
                         C106 +
                     (C45029 * C120 + C92348 * C317 + C45030 * C810 +
                      C92349 * C1027 + C45031 * C825 + C44804 * C1034) *
                         C95) *
                        C92148 * C92067) *
                   C92110 * C92099) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C45029 * C107 + C92348 * C308 + C45030 * C805 +
                       C92349 * C1022 + C45031 * C806 + C44804 * C1023) *
                          C801 +
                      (C45029 * C117 + C92348 * C314 + C45030 * C813 +
                       C92349 * C1030 + C45031 * C822 + C44804 * C1031) *
                          C92078) *
                         C92148 * C92310 +
                     ((C45059 + C45058 + C45057) * C801 +
                      (C45062 + C45061 + C45060) * C92078) *
                         C92148 * C92067) *
                        C1383 -
                    (((C45031 * C5777 + C44804 * C6047 + C45030 * C3440 +
                       C92349 * C3666 + C45029 * C1396 + C92348 * C1613) *
                          C92078 +
                      (C45031 * C5771 + C44804 * C6041 + C45030 * C3432 +
                       C92349 * C3662 + C45029 * C1388 + C92348 * C1605) *
                          C801) *
                         C92148 * C92067 +
                     ((C45031 * C5778 + C44804 * C6048 + C45030 * C3439 +
                       C92349 * C3665 + C45029 * C1397 + C92348 * C1614) *
                          C92078 +
                      (C45031 * C5772 + C44804 * C6042 + C45030 * C3431 +
                       C92349 * C3661 + C45029 * C1389 + C92348 * C1606) *
                          C801) *
                         C92148 * C92310) *
                        C1384 +
                    (((C45029 * C1390 + C92348 * C1607 + C45030 * C5773 +
                       C92349 * C6043 + C45031 * C5775 + C44804 * C6044) *
                          C801 +
                      (C45029 * C1406 + C92348 * C1615 + C45030 * C5783 +
                       C92349 * C6049 + C45031 * C5787 + C44804 * C6050) *
                          C92078) *
                         C92148 * C92310 +
                     ((C45029 * C1391 + C92348 * C1608 + C45030 * C5774 +
                       C92349 * C6045 + C45031 * C5776 + C44804 * C6046) *
                          C801 +
                      (C45029 * C1407 + C92348 * C1616 + C45030 * C5784 +
                       C92349 * C6051 + C45031 * C5788 + C44804 * C6052) *
                          C92078) *
                         C92148 * C92067) *
                        C1385) *
                   C92099) /
                      (p * q * std::sqrt(p + q));
    d2eeyy[27] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C45029 * C107 + C92348 * C308 + C45030 * C805 +
                      C92349 * C1022 + C45031 * C806 + C44804 * C1023) *
                         C884 +
                     (C45029 * C182 + C92348 * C394 + C45030 * C890 +
                      C92349 * C1085 + C45031 * C891 + C44804 * C1086) *
                         C798 -
                     (C45031 * C4882 + C44804 * C5218 + C45030 * C806 +
                      C92349 * C1023 + C45029 * C805 + C92348 * C1022) *
                         C885 -
                     (C45031 * C5012 + C44804 * C5299 + C45030 * C891 +
                      C92349 * C1086 + C45029 * C890 + C92348 * C1085) *
                         C799 +
                     (C45029 * C806 + C92348 * C1023 + C45030 * C4882 +
                      C92349 * C5218 + C45031 * C4883 + C44804 * C5219) *
                         C886 +
                     (C45029 * C891 + C92348 * C1086 + C45030 * C5012 +
                      C92349 * C5299 + C45031 * C5014 + C44804 * C5300) *
                         C800) *
                        C92148 * C92310 +
                    ((C45059 + C45058 + C45057) * C884 +
                     (C45155 + C45156 + C45157) * C798 -
                     (C45031 * C4881 + C44804 * C5217 + C45030 * C807 +
                      C92349 * C1024 + C45029 * C804 + C92348 * C1021) *
                         C885 -
                     (C45031 * C5013 + C44804 * C5301 + C45030 * C892 +
                      C92349 * C1088 + C45029 * C889 + C92348 * C1087) *
                         C799 +
                     (C45029 * C807 + C92348 * C1024 + C45030 * C4881 +
                      C92349 * C5217 + C45031 * C4884 + C44804 * C5220) *
                         C886 +
                     (C45029 * C892 + C92348 * C1088 + C45030 * C5013 +
                      C92349 * C5301 + C45031 * C5015 + C44804 * C5302) *
                         C800) *
                        C92148 * C92067) *
                   C92078 * C92110) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C45029 * C107 + C92348 * C308 + C45030 * C805 +
                       C92349 * C1022 + C45031 * C806 + C44804 * C1023) *
                          C181 +
                      (C45029 * C182 + C92348 * C394 + C45030 * C890 +
                       C92349 * C1085 + C45031 * C891 + C44804 * C1086) *
                          C92099) *
                         C92148 * C92310 +
                     ((C45059 + C45058 + C45057) * C181 +
                      (C45155 + C45156 + C45157) * C92099) *
                         C92148 * C92067) *
                        C93 -
                    (((C45158 + C45159 + C45160) * C92099 +
                      (C45065 + C45064 + C45063) * C181) *
                         C92148 * C92067 +
                     ((C45157 + C45156 + C45155) * C92099 +
                      (C45057 + C45058 + C45059) * C181) *
                         C92148 * C92310) *
                        C94 +
                    (((C45063 + C45064 + C45065) * C181 +
                      (C45160 + C45159 + C45158) * C92099) *
                         C92148 * C92310 +
                     ((C45029 * C110 + C92348 * C311 + C45030 * C802 +
                       C92349 * C1019 + C45031 * C809 + C44804 * C1026) *
                          C181 +
                      (C45029 * C185 + C92348 * C397 + C45030 * C887 +
                       C92349 * C1091 + C45031 * C894 + C44804 * C1092) *
                          C92099) *
                         C92148 * C92067) *
                        C95) *
                   C92110) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C45029 * C107 + C92348 * C308 + C45030 * C805 +
                       C92349 * C1022 + C45031 * C806 + C44804 * C1023) *
                          C181 +
                      (C45029 * C182 + C92348 * C394 + C45030 * C890 +
                       C92349 * C1085 + C45031 * C891 + C44804 * C1086) *
                          C92099) *
                         C92148 * C92310 +
                     ((C45059 + C45058 + C45057) * C181 +
                      (C45155 + C45156 + C45157) * C92099) *
                         C92148 * C92067) *
                        C92078 * C1383 -
                    (((C45031 * C5869 + C44804 * C6127 + C45030 * C3514 +
                       C92349 * C3736 + C45029 * C1470 + C92348 * C1671) *
                          C92099 +
                      (C45031 * C5771 + C44804 * C6041 + C45030 * C3432 +
                       C92349 * C3662 + C45029 * C1388 + C92348 * C1605) *
                          C181) *
                         C92148 * C92067 +
                     ((C45031 * C5870 + C44804 * C6128 + C45030 * C3513 +
                       C92349 * C3735 + C45029 * C1471 + C92348 * C1672) *
                          C92099 +
                      (C45031 * C5772 + C44804 * C6042 + C45030 * C3431 +
                       C92349 * C3661 + C45029 * C1389 + C92348 * C1606) *
                          C181) *
                         C92148 * C92310) *
                        C92078 * C1384 +
                    (((C45029 * C1390 + C92348 * C1607 + C45030 * C5773 +
                       C92349 * C6043 + C45031 * C5775 + C44804 * C6044) *
                          C181 +
                      (C45029 * C1472 + C92348 * C1673 + C45030 * C5871 +
                       C92349 * C6129 + C45031 * C5873 + C44804 * C6130) *
                          C92099) *
                         C92148 * C92310 +
                     ((C45029 * C1391 + C92348 * C1608 + C45030 * C5774 +
                       C92349 * C6045 + C45031 * C5776 + C44804 * C6046) *
                          C181 +
                      (C45029 * C1473 + C92348 * C1674 + C45030 * C5872 +
                       C92349 * C6131 + C45031 * C5874 + C44804 * C6132) *
                          C92099) *
                         C92148 * C92067) *
                        C92078 * C1385)) /
                      (p * q * std::sqrt(p + q));
    d2eeyz[27] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C45029 * C107 + C92348 * C308 + C45030 * C805 +
                       C92349 * C1022 + C45031 * C806 + C44804 * C1023) *
                          C244 +
                      (C45029 * C245 + C92348 * C474 + C45030 * C956 +
                       C92349 * C1146 + C45031 * C957 + C44804 * C1147) *
                          C92110) *
                         C92148 * C92310 +
                     ((C45059 + C45058 + C45057) * C244 +
                      (C45247 + C45248 + C45249) * C92110) *
                         C92148 * C92067) *
                        C798 -
                    (((C45031 * C5113 + C44804 * C5377 + C45030 * C958 +
                       C92349 * C1148 + C45029 * C955 + C92348 * C1145) *
                          C92110 +
                      (C45031 * C4881 + C44804 * C5217 + C45030 * C807 +
                       C92349 * C1024 + C45029 * C804 + C92348 * C1021) *
                          C244) *
                         C92148 * C92067 +
                     ((C45031 * C5114 + C44804 * C5378 + C45030 * C957 +
                       C92349 * C1147 + C45029 * C956 + C92348 * C1146) *
                          C92110 +
                      (C45031 * C4882 + C44804 * C5218 + C45030 * C806 +
                       C92349 * C1023 + C45029 * C805 + C92348 * C1022) *
                          C244) *
                         C92148 * C92310) *
                        C799 +
                    (((C45029 * C806 + C92348 * C1023 + C45030 * C4882 +
                       C92349 * C5218 + C45031 * C4883 + C44804 * C5219) *
                          C244 +
                      (C45029 * C957 + C92348 * C1147 + C45030 * C5114 +
                       C92349 * C5378 + C45031 * C5115 + C44804 * C5379) *
                          C92110) *
                         C92148 * C92310 +
                     ((C45029 * C807 + C92348 * C1024 + C45030 * C4881 +
                       C92349 * C5217 + C45031 * C4884 + C44804 * C5220) *
                          C244 +
                      (C45029 * C958 + C92348 * C1148 + C45030 * C5113 +
                       C92349 * C5377 + C45031 * C5116 + C44804 * C5380) *
                          C92110) *
                         C92148 * C92067) *
                        C800) *
                   C92078) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C45029 * C107 + C92348 * C308 + C45030 * C805 +
                       C92349 * C1022 + C45031 * C806 + C44804 * C1023) *
                          C244 +
                      (C45029 * C245 + C92348 * C474 + C45030 * C956 +
                       C92349 * C1146 + C45031 * C957 + C44804 * C1147) *
                          C92110) *
                         C92148 * C92310 +
                     ((C45059 + C45058 + C45057) * C244 +
                      (C45247 + C45248 + C45249) * C92110) *
                         C92148 * C92067) *
                        C92099 * C93 -
                    (((C45250 + C45251 + C45252) * C92110 +
                      (C45065 + C45064 + C45063) * C244) *
                         C92148 * C92067 +
                     ((C45249 + C45248 + C45247) * C92110 +
                      (C45057 + C45058 + C45059) * C244) *
                         C92148 * C92310) *
                        C92099 * C94 +
                    (((C45063 + C45064 + C45065) * C244 +
                      (C45252 + C45251 + C45250) * C92110) *
                         C92148 * C92310 +
                     ((C45029 * C110 + C92348 * C311 + C45030 * C802 +
                       C92349 * C1019 + C45031 * C809 + C44804 * C1026) *
                          C244 +
                      (C45029 * C248 + C92348 * C477 + C45030 * C953 +
                       C92349 * C1143 + C45031 * C960 + C44804 * C1150) *
                          C92110) *
                         C92148 * C92067) *
                        C92099 * C95)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((C45029 * C107 + C92348 * C308 + C45030 * C805 +
                      C92349 * C1022 + C45031 * C806 + C44804 * C1023) *
                         C1534 +
                     (C45029 * C245 + C92348 * C474 + C45030 * C956 +
                      C92349 * C1146 + C45031 * C957 + C44804 * C1147) *
                         C1383 -
                     (C45031 * C5772 + C44804 * C6042 + C45030 * C3431 +
                      C92349 * C3661 + C45029 * C1389 + C92348 * C1606) *
                         C1535 -
                     (C45031 * C5958 + C44804 * C6207 + C45030 * C3587 +
                      C92349 * C3805 + C45029 * C1540 + C92348 * C1727) *
                         C1384 +
                     (C45029 * C1390 + C92348 * C1607 + C45030 * C5773 +
                      C92349 * C6043 + C45031 * C5775 + C44804 * C6044) *
                         C1536 +
                     (C45029 * C1541 + C92348 * C1728 + C45030 * C5955 +
                      C92349 * C6208 + C45031 * C5959 + C44804 * C6209) *
                         C1385) *
                        C92148 * C92310 +
                    ((C45059 + C45058 + C45057) * C1534 +
                     (C45247 + C45248 + C45249) * C1383 -
                     (C45031 * C5771 + C44804 * C6041 + C45030 * C3432 +
                      C92349 * C3662 + C45029 * C1388 + C92348 * C1605) *
                         C1535 -
                     (C45031 * C5957 + C44804 * C6210 + C45030 * C3588 +
                      C92349 * C3806 + C45029 * C1539 + C92348 * C1729) *
                         C1384 +
                     (C45029 * C1391 + C92348 * C1608 + C45030 * C5774 +
                      C92349 * C6045 + C45031 * C5776 + C44804 * C6046) *
                         C1536 +
                     (C45029 * C1542 + C92348 * C1730 + C45030 * C5956 +
                      C92349 * C6211 + C45031 * C5960 + C44804 * C6212) *
                         C1385) *
                        C92148 * C92067) *
                   C92099 * C92078) /
                      (p * q * std::sqrt(p + q));
    d2eezx[27] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92148 * C555) * C801 +
             (C554 * C117 + C92148 * C561) * C92078) *
                C92310 +
            (C584 * C801 + C585 * C92078) * C92067) *
               C92348 +
           ((C5493 + C5494) * C92310 + (C5468 + C5469) * C92067) * C92349 +
           C46077 * C44804) *
              C92110 * C798 -
          (((C5498 + C5499) * C92067 + (C5500 + C5501) * C92310) * C44804 +
           ((C5475 + C5474) * C92067 + (C5496 + C5495) * C92310) * C92349 +
           ((C5469 + C5468) * C92067 + (C5494 + C5493) * C92310) * C92348) *
              C92110 * C799 +
          (C46077 * C92348 +
           (C37055 * C92310 + (C5499 + C5498) * C92067) * C92349 +
           ((C37064 + C37063) * C92310 +
            ((C554 * C4884 + C92148 * C5458) * C801 +
             (C554 * C4892 + C92148 * C5462) * C92078) *
                C92067) *
               C44804) *
              C92110 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92148 * C555) * C104 +
            (C554 * C117 + C92148 * C561) * C93 - C584 * C105 - C585 * C94 +
            C586 * C106 + C587 * C95) *
               C92310 +
           (C584 * C104 + C585 * C93 - C586 * C105 - C587 * C94 + C588 * C106 +
            C589 * C95) *
               C92067) *
              C92348 +
          ((C5484 * C104 + C5485 * C93 - C2468 * C105 - C2469 * C94 +
            C2470 * C106 + C2471 * C95) *
               C92310 +
           (C2468 * C104 + C2469 * C93 - C2470 * C105 - C2471 * C94 +
            C2472 * C106 + C2473 * C95) *
               C92067) *
              C92349 +
          ((C5486 * C104 + C5487 * C93 - C4632 * C105 - C4633 * C94 +
            C4634 * C106 + C4635 * C95) *
               C92310 +
           (C4632 * C104 + C4633 * C93 - C4634 * C105 - C4635 * C94 +
            (C554 * C809 + C92148 * C1208) * C106 +
            (C554 * C825 + C92148 * C1216) * C95) *
               C92067) *
              C44804) *
         C92110 * C92099) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92148 * C555) * C801 +
             (C554 * C117 + C92148 * C561) * C92078) *
                C92310 +
            (C584 * C801 + C585 * C92078) * C92067) *
               C92348 +
           ((C5493 + C5494) * C92310 + (C5468 + C5469) * C92067) * C92349 +
           C46077 * C44804) *
              C1383 -
          (((C9201 + C9202) * C92067 + (C9217 + C9218) * C92310) * C44804 +
           ((C9207 + C9208) * C92067 + (C9219 + C9220) * C92310) * C92349 +
           ((C3191 * C92078 + C3190 * C801) * C92067 +
            ((C554 * C1397 + C92148 * C1796) * C92078 +
             (C554 * C1389 + C92148 * C1788) * C801) *
                C92310) *
               C92348) *
              C1384 +
          ((((C554 * C1390 + C92148 * C1789) * C801 +
             (C554 * C1406 + C92148 * C1797) * C92078) *
                C92310 +
            ((C554 * C1391 + C92148 * C1790) * C801 +
             (C554 * C1407 + C92148 * C1798) * C92078) *
                C92067) *
               C92348 +
           (((C554 * C5773 + C92148 * C6289) * C801 +
             (C554 * C5783 + C92148 * C6295) * C92078) *
                C92310 +
            ((C554 * C5774 + C92148 * C6290) * C801 +
             (C554 * C5784 + C92148 * C6296) * C92078) *
                C92067) *
               C92349 +
           (((C554 * C5775 + C92148 * C6291) * C801 +
             (C554 * C5787 + C92148 * C6297) * C92078) *
                C92310 +
            ((C554 * C5776 + C92148 * C6292) * C801 +
             (C554 * C5788 + C92148 * C6298) * C92078) *
                C92067) *
               C44804) *
              C1385) *
         C92099) /
            (p * q * std::sqrt(p + q));
    d2eezy[27] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92148 * C555) * C884 +
            (C554 * C182 + C92148 * C641) * C798 - C5484 * C885 - C5591 * C799 +
            C5486 * C886 + C5592 * C800) *
               C92310 +
           (C584 * C884 + C660 * C798 - C2468 * C885 - C2556 * C799 +
            C4632 * C886 + C4720 * C800) *
               C92067) *
              C92348 +
          ((C5484 * C884 + C5591 * C798 - C5486 * C885 - C5592 * C799 +
            C5492 * C886 + C5593 * C800) *
               C92310 +
           (C2468 * C884 + C2556 * C798 - C4632 * C885 - C4720 * C799 +
            C5490 * C886 + C5594 * C800) *
               C92067) *
              C92349 +
          ((C5486 * C884 + C5592 * C798 - C5492 * C885 - C5593 * C799 +
            C37062 * C886 + C37118 * C800) *
               C92310 +
           (C4632 * C884 + C4720 * C798 - C5490 * C885 - C5594 * C799 +
            (C554 * C4884 + C92148 * C5458) * C886 +
            (C554 * C5015 + C92148 * C5581) * C800) *
               C92067) *
              C44804) *
         C92078 * C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92148 * C555) * C181 +
             (C554 * C182 + C92148 * C641) * C92099) *
                C92310 +
            (C648 + C664) * C92067) *
               C92348 +
           ((C5484 * C181 + C5591 * C92099) * C92310 +
            (C4710 + C4711) * C92067) *
               C92349 +
           ((C5486 * C181 + C5592 * C92099) * C92310 +
            (C4712 + C4722) * C92067) *
               C44804) *
              C93 -
          (((C4723 + C4717) * C92067 + (C4722 + C4712) * C92310) * C44804 +
           ((C4718 + C4719) * C92067 + (C4711 + C4710) * C92310) * C92349 +
           ((C665 + C651) * C92067 + (C664 + C648) * C92310) * C92348) *
              C94 +
          ((C668 * C92310 + C669 * C92067) * C92348 +
           (C15416 * C92310 + (C15418 + C15417) * C92067) * C92349 +
           ((C4717 + C4723) * C92310 +
            ((C554 * C809 + C92148 * C1208) * C181 +
             (C554 * C894 + C92148 * C1274) * C92099) *
                C92067) *
               C44804) *
              C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92148 * C555) * C181 +
             (C554 * C182 + C92148 * C641) * C92099) *
                C92310 +
            (C648 + C664) * C92067) *
               C92348 +
           ((C5484 * C181 + C5591 * C92099) * C92310 +
            (C4710 + C4711) * C92067) *
               C92349 +
           ((C5486 * C181 + C5592 * C92099) * C92310 +
            (C4712 + C4722) * C92067) *
               C44804) *
              C92078 * C1383 -
          (((C8325 + C8319) * C92067 +
            (C9326 * C92099 + C9214 * C181) * C92310) *
               C44804 +
           ((C8324 + C8316) * C92067 +
            (C9325 * C92099 + C9216 * C181) * C92310) *
               C92349 +
           ((C3275 + C3263) * C92067 +
            ((C554 * C1471 + C92148 * C1854) * C92099 +
             (C554 * C1389 + C92148 * C1788) * C181) *
                C92310) *
               C92348) *
              C92078 * C1384 +
          ((((C554 * C1390 + C92148 * C1789) * C181 +
             (C554 * C1472 + C92148 * C1855) * C92099) *
                C92310 +
            ((C554 * C1391 + C92148 * C1790) * C181 +
             (C554 * C1473 + C92148 * C1856) * C92099) *
                C92067) *
               C92348 +
           (((C554 * C5773 + C92148 * C6289) * C181 +
             (C554 * C5871 + C92148 * C6375) * C92099) *
                C92310 +
            ((C554 * C5774 + C92148 * C6290) * C181 +
             (C554 * C5872 + C92148 * C6376) * C92099) *
                C92067) *
               C92349 +
           (((C554 * C5775 + C92148 * C6291) * C181 +
             (C554 * C5873 + C92148 * C6377) * C92099) *
                C92310 +
            ((C554 * C5776 + C92148 * C6292) * C181 +
             (C554 * C5874 + C92148 * C6378) * C92099) *
                C92067) *
               C44804) *
              C92078 * C1385)) /
            (p * q * std::sqrt(p + q));
    d2eezz[27] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92148 * C555) * C244 +
             (C554 * C245 + C92148 * C719) * C92110) *
                C92310 +
            (C726 + C742) * C92067) *
               C92348 +
           ((C5673 + C5691) * C92310 + C7466 * C92067) * C92349 +
           C46228 * C44804) *
              C798 -
          (((C5693 + C5682) * C92067 + (C5694 + C5685) * C92310) * C44804 +
           (C7467 * C92067 + (C5692 + C5676) * C92310) * C92349 +
           (C7468 * C92067 + (C5691 + C5673) * C92310) * C92348) *
              C799 +
          (C46228 * C92348 +
           (C37171 * C92310 + (C5682 + C5693) * C92067) * C92349 +
           ((C37174 + C37177) * C92310 +
            ((C554 * C4884 + C92148 * C5458) * C244 +
             (C554 * C5116 + C92148 * C5671) * C92110) *
                C92067) *
               C44804) *
              C800) *
         C92078) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92148 * C555) * C244 +
             (C554 * C245 + C92148 * C719) * C92110) *
                C92310 +
            (C726 + C742) * C92067) *
               C92348 +
           ((C5673 + C5691) * C92310 + C7466 * C92067) * C92349 +
           (C5695 * C92310 + C5679 * C92067) * C44804) *
              C92099 * C93 -
          (((C4807 + C4803) * C92067 + C7467 * C92310) * C44804 +
           (C17876 * C92067 + C7468 * C92310) * C92349 +
           ((C743 + C729) * C92067 + (C742 + C726) * C92310) * C92348) *
              C92099 * C94 +
          ((C746 * C92310 + C747 * C92067) * C92348 +
           (C15493 * C92310 + (C2631 + C2641) * C92067) * C92349 +
           ((C4803 + C4807) * C92310 +
            ((C554 * C809 + C92148 * C1208) * C244 +
             (C554 * C960 + C92148 * C1332) * C92110) *
                C92067) *
               C44804) *
              C92099 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92148 * C555) * C1534 +
            (C554 * C245 + C92148 * C719) * C1383 -
            (C554 * C1389 + C92148 * C1788) * C1535 -
            (C554 * C1540 + C92148 * C1909) * C1384 +
            (C554 * C1390 + C92148 * C1789) * C1536 +
            (C554 * C1541 + C92148 * C1910) * C1385) *
               C92310 +
           (C584 * C1534 + C738 * C1383 - C3190 * C1535 - C3360 * C1384 +
            (C554 * C1391 + C92148 * C1790) * C1536 +
            (C554 * C1542 + C92148 * C1912) * C1385) *
               C92067) *
              C92348 +
          ((C5484 * C1534 + C5686 * C1383 - C9216 * C1535 - C9437 * C1384 +
            (C554 * C5773 + C92148 * C6289) * C1536 +
            (C554 * C5955 + C92148 * C6453) * C1385) *
               C92310 +
           (C2468 * C1534 + C2640 * C1383 - C8213 * C1535 - C8435 * C1384 +
            (C554 * C5774 + C92148 * C6290) * C1536 +
            (C554 * C5956 + C92148 * C6454) * C1385) *
               C92067) *
              C92349 +
          ((C5486 * C1534 + C5687 * C1383 - C9214 * C1535 - C9438 * C1384 +
            (C554 * C5775 + C92148 * C6291) * C1536 +
            (C554 * C5959 + C92148 * C6456) * C1385) *
               C92310 +
           (C4632 * C1534 + C4804 * C1383 - C8215 * C1535 - C8436 * C1384 +
            (C554 * C5776 + C92148 * C6292) * C1536 +
            (C554 * C5960 + C92148 * C6458) * C1385) *
               C92067) *
              C44804) *
         C92099 * C92078) /
            (p * q * std::sqrt(p + q));
    d2eexx[28] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C89875 * C107 + C92310 * C113 + C89868 * C108 + C92067 * C114) *
                C1987 +
            (C89875 * C117 + C92310 * C125 + C89868 * C118 + C92067 * C126) *
                C1983 -
            (C89868 * C109 + C92067 * C115 + C89875 * C108 + C92310 * C114) *
                C1988 -
            (C89868 * C119 + C92067 * C127 + C89875 * C118 + C92310 * C126) *
                C1984) *
               C92348 +
           ((C45573 + C45574) * C1987 + (C45575 + C45576) * C1983 -
            (C47009 + C47010) * C1988 - (C47011 + C47012) * C1984) *
               C92349 +
           (C45585 * C1987 + C45586 * C1983 - (C47013 + C47014) * C1988 -
            (C47015 + C47016) * C1984) *
               C44804) *
              C92148 * C2709 +
          (((C89875 * C1388 + C92310 * C1400 + C89868 * C1387 +
             C92067 * C1399) *
                C1988 -
            ((C89868 * C1396 + C92067 * C1412 + C89875 * C1397 +
              C92310 * C1413) *
                 C1983 +
             (C89868 * C1388 + C92067 * C1400 + C89875 * C1389 +
              C92310 * C1401) *
                 C1987) +
            (C89875 * C1396 + C92310 * C1412 + C89868 * C1395 +
             C92067 * C1411) *
                C1984) *
               C92348 +
           ((C89875 * C3432 + C92310 * C3436 + C89868 * C3433 +
             C92067 * C3437) *
                C1988 -
            ((C89868 * C3440 + C92067 * C3444 + C89875 * C3439 +
              C92310 * C3443) *
                 C1983 +
             (C89868 * C3432 + C92067 * C3436 + C89875 * C3431 +
              C92310 * C3435) *
                 C1987) +
            (C89875 * C3440 + C92310 * C3444 + C89868 * C3441 +
             C92067 * C3445) *
                C1984) *
               C92349 +
           ((C89875 * C5771 + C92310 * C5779 + C89868 * C7566 +
             C92067 * C7567) *
                C1988 -
            ((C89868 * C5777 + C92067 * C5789 + C89875 * C5778 +
              C92310 * C5790) *
                 C1983 +
             (C89868 * C5771 + C92067 * C5779 + C89875 * C5772 +
              C92310 * C5780) *
                 C1987) +
            (C89875 * C5777 + C92310 * C5789 + C89868 * C7568 +
             C92067 * C7569) *
                C1984) *
               C44804) *
              C92148 * C2710) *
         C92099) /
        (p * q * std::sqrt(p + q));
    d2eexy[28] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C89875 * C107 + C92310 * C113 + C89868 * C108 + C92067 * C114) *
                 C181 +
             (C89875 * C182 + C92310 * C188 + C89868 * C183 + C92067 * C189) *
                 C92099) *
                C92348 +
            ((C45573 + C45574) * C181 + (C45677 + C45676) * C92099) * C92349 +
            (C45585 * C181 + C45682 * C92099) * C44804) *
               C92148 * C1983 -
           (((C47126 + C47125) * C92099 + (C47013 + C47014) * C181) * C44804 +
            ((C47124 + C47123) * C92099 + (C47009 + C47010) * C181) * C92349 +
            ((C89868 * C184 + C92067 * C190 + C89875 * C183 + C92310 * C189) *
                 C92099 +
             (C89868 * C109 + C92067 * C115 + C89875 * C108 + C92310 * C114) *
                 C181) *
                C92348) *
               C92148 * C1984) *
              C2709 +
          ((((C89875 * C1388 + C92310 * C1400 + C89868 * C1387 +
              C92067 * C1399) *
                 C181 +
             (C89875 * C1470 + C92310 * C1478 + C89868 * C1469 +
              C92067 * C1477) *
                 C92099) *
                C92348 +
            ((C89875 * C3432 + C92310 * C3436 + C89868 * C3433 +
              C92067 * C3437) *
                 C181 +
             (C89875 * C3514 + C92310 * C3518 + C89868 * C3515 +
              C92067 * C3519) *
                 C92099) *
                C92349 +
            ((C89875 * C5771 + C92310 * C5779 + C89868 * C7566 +
              C92067 * C7567) *
                 C181 +
             (C89875 * C5869 + C92310 * C5875 + C89868 * C7668 +
              C92067 * C7669) *
                 C92099) *
                C44804) *
               C92148 * C1984 -
           (((C89868 * C5869 + C92067 * C5875 + C89875 * C5870 +
              C92310 * C5876) *
                 C92099 +
             (C89868 * C5771 + C92067 * C5779 + C89875 * C5772 +
              C92310 * C5780) *
                 C181) *
                C44804 +
            ((C89868 * C3514 + C92067 * C3518 + C89875 * C3513 +
              C92310 * C3517) *
                 C92099 +
             (C89868 * C3432 + C92067 * C3436 + C89875 * C3431 +
              C92310 * C3435) *
                 C181) *
                C92349 +
            ((C89868 * C1470 + C92067 * C1478 + C89875 * C1471 +
              C92310 * C1479) *
                 C92099 +
             (C89868 * C1388 + C92067 * C1400 + C89875 * C1389 +
              C92310 * C1401) *
                 C181) *
                C92348) *
               C92148 * C1983) *
              C2710)) /
        (p * q * std::sqrt(p + q));
    d2eexz[28] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C89875 * C107 + C92310 * C113 + C89868 * C108 + C92067 * C114) *
                C2849 +
            (C89875 * C245 + C92310 * C251 + C89868 * C246 + C92067 * C252) *
                C2709 -
            (C89868 * C1388 + C92067 * C1400 + C89875 * C1389 +
             C92310 * C1401) *
                C2850 -
            (C89868 * C1539 + C92067 * C1547 + C89875 * C1540 +
             C92310 * C1548) *
                C2710) *
               C92348 +
           ((C45573 + C45574) * C2849 + (C45770 + C45771) * C2709 -
            (C89868 * C3432 + C92067 * C3436 + C89875 * C3431 +
             C92310 * C3435) *
                C2850 -
            (C89868 * C3588 + C92067 * C3592 + C89875 * C3587 +
             C92310 * C3591) *
                C2710) *
               C92349 +
           (C45585 * C2849 + C45776 * C2709 -
            (C89868 * C5771 + C92067 * C5779 + C89875 * C5772 +
             C92310 * C5780) *
                C2850 -
            (C89868 * C5957 + C92067 * C5963 + C89875 * C5958 +
             C92310 * C5964) *
                C2710) *
               C44804) *
              C92148 * C92099 * C1983 +
          (((C89875 * C1388 + C92310 * C1400 + C89868 * C1387 +
             C92067 * C1399) *
                C2850 -
            ((C89868 * C247 + C92067 * C253 + C89875 * C246 + C92310 * C252) *
                 C2709 +
             (C89868 * C109 + C92067 * C115 + C89875 * C108 + C92310 * C114) *
                 C2849) +
            (C89875 * C1539 + C92310 * C1547 + C89868 * C1538 +
             C92067 * C1546) *
                C2710) *
               C92348 +
           ((C89875 * C3432 + C92310 * C3436 + C89868 * C3433 +
             C92067 * C3437) *
                C2850 -
            ((C47234 + C47233) * C2709 + (C47009 + C47010) * C2849) +
            (C89875 * C3588 + C92310 * C3592 + C89868 * C3589 +
             C92067 * C3593) *
                C2710) *
               C92349 +
           ((C89875 * C5771 + C92310 * C5779 + C89868 * C7566 +
             C92067 * C7567) *
                C2850 -
            ((C47236 + C47235) * C2709 + (C47013 + C47014) * C2849) +
            (C89875 * C5957 + C92310 * C5963 + C89868 * C7768 +
             C92067 * C7769) *
                C2710) *
               C44804) *
              C92148 * C92099 * C1984)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[28] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C45029 * C107 + C92348 * C308 + C45030 * C805 +
                       C92349 * C1022 + C45031 * C806 + C44804 * C1023) *
                          C1987 +
                      (C45029 * C117 + C92348 * C314 + C45030 * C813 +
                       C92349 * C1030 + C45031 * C822 + C44804 * C1031) *
                          C1983 -
                      (C45057 + C45058 + C45059) * C1988 -
                      (C45060 + C45061 + C45062) * C1984) *
                         C92148 * C92310 +
                     ((C45059 + C45058 + C45057) * C1987 +
                      (C45062 + C45061 + C45060) * C1983 -
                      (C45065 + C45064 + C45063) * C1988 -
                      (C45068 + C45067 + C45066) * C1984) *
                         C92148 * C92067) *
                        C2709 +
                    (((C48265 + C48266 + C48267) * C1988 -
                      ((C45031 * C5778 + C44804 * C6048 + C45030 * C3439 +
                        C92349 * C3665 + C45029 * C1397 + C92348 * C1614) *
                           C1983 +
                       (C45031 * C5772 + C44804 * C6042 + C45030 * C3431 +
                        C92349 * C3661 + C45029 * C1389 + C92348 * C1606) *
                           C1987) +
                      (C48268 + C48269 + C48270) * C1984) *
                         C92148 * C92310 +
                     ((C45029 * C1387 + C92348 * C1604 + C45030 * C3433 +
                       C92349 * C3663 + C45031 * C7566 + C44804 * C7868) *
                          C1988 -
                      ((C48270 + C48269 + C48268) * C1983 +
                       (C48267 + C48266 + C48265) * C1987) +
                      (C45029 * C1395 + C92348 * C1612 + C45030 * C3441 +
                       C92349 * C3667 + C45031 * C7568 + C44804 * C7869) *
                          C1984) *
                         C92148 * C92067) *
                        C2710) *
                   C92099) /
                  (p * q * std::sqrt(p + q));
    d2eeyy[28] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C45029 * C107 + C92348 * C308 + C45030 * C805 +
                        C92349 * C1022 + C45031 * C806 + C44804 * C1023) *
                           C181 +
                       (C45029 * C182 + C92348 * C394 + C45030 * C890 +
                        C92349 * C1085 + C45031 * C891 + C44804 * C1086) *
                           C92099) *
                          C92148 * C92310 +
                      ((C45059 + C45058 + C45057) * C181 +
                       (C45155 + C45156 + C45157) * C92099) *
                          C92148 * C92067) *
                         C1983 -
                     (((C45158 + C45159 + C45160) * C92099 +
                       (C45065 + C45064 + C45063) * C181) *
                          C92148 * C92067 +
                      ((C45157 + C45156 + C45155) * C92099 +
                       (C45057 + C45058 + C45059) * C181) *
                          C92148 * C92310) *
                         C1984) *
                        C2709 +
                    ((((C48265 + C48266 + C48267) * C181 +
                       (C48375 + C48376 + C48377) * C92099) *
                          C92148 * C92310 +
                      ((C45029 * C1387 + C92348 * C1604 + C45030 * C3433 +
                        C92349 * C3663 + C45031 * C7566 + C44804 * C7868) *
                           C181 +
                       (C45029 * C1469 + C92348 * C1670 + C45030 * C3515 +
                        C92349 * C3737 + C45031 * C7668 + C44804 * C7986) *
                           C92099) *
                          C92148 * C92067) *
                         C1984 -
                     (((C48377 + C48376 + C48375) * C92099 +
                       (C48267 + C48266 + C48265) * C181) *
                          C92148 * C92067 +
                      ((C45031 * C5870 + C44804 * C6128 + C45030 * C3513 +
                        C92349 * C3735 + C45029 * C1471 + C92348 * C1672) *
                           C92099 +
                       (C45031 * C5772 + C44804 * C6042 + C45030 * C3431 +
                        C92349 * C3661 + C45029 * C1389 + C92348 * C1606) *
                           C181) *
                          C92148 * C92310) *
                         C1983) *
                        C2710)) /
                  (p * q * std::sqrt(p + q));
    d2eeyz[28] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C45029 * C107 + C92348 * C308 + C45030 * C805 +
                       C92349 * C1022 + C45031 * C806 + C44804 * C1023) *
                          C2849 +
                      (C45029 * C245 + C92348 * C474 + C45030 * C956 +
                       C92349 * C1146 + C45031 * C957 + C44804 * C1147) *
                          C2709 -
                      (C45031 * C5772 + C44804 * C6042 + C45030 * C3431 +
                       C92349 * C3661 + C45029 * C1389 + C92348 * C1606) *
                          C2850 -
                      (C45031 * C5958 + C44804 * C6207 + C45030 * C3587 +
                       C92349 * C3805 + C45029 * C1540 + C92348 * C1727) *
                          C2710) *
                         C92148 * C92310 +
                     ((C45059 + C45058 + C45057) * C2849 +
                      (C45247 + C45248 + C45249) * C2709 -
                      (C48267 + C48266 + C48265) * C2850 -
                      (C48482 + C48483 + C48484) * C2710) *
                         C92148 * C92067) *
                        C92099 * C1983 +
                    (((C48265 + C48266 + C48267) * C2850 -
                      ((C45249 + C45248 + C45247) * C2709 +
                       (C45057 + C45058 + C45059) * C2849) +
                      (C48484 + C48483 + C48482) * C2710) *
                         C92148 * C92310 +
                     ((C45029 * C1387 + C92348 * C1604 + C45030 * C3433 +
                       C92349 * C3663 + C45031 * C7566 + C44804 * C7868) *
                          C2850 -
                      ((C45250 + C45251 + C45252) * C2709 +
                       (C45065 + C45064 + C45063) * C2849) +
                      (C45029 * C1538 + C92348 * C1731 + C45030 * C3589 +
                       C92349 * C3807 + C45031 * C7768 + C44804 * C8094) *
                          C2710) *
                         C92148 * C92067) *
                        C92099 * C1984)) /
                  (p * q * std::sqrt(p + q));
    d2eezx[28] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92148 * C555) * C1987 +
             (C554 * C117 + C92148 * C561) * C1983 - C584 * C1988 -
             C585 * C1984) *
                C92310 +
            (C584 * C1987 + C585 * C1983 - C586 * C1988 - C587 * C1984) *
                C92067) *
               C92348 +
           ((C7244 + C7245 - C7246 - C7247) * C92310 +
            (C7248 + C7249 - C7250 - C7251) * C92067) *
               C92349 +
           ((C7252 + C7253 - C7254 - C7255) * C92310 +
            (C7256 + C7257 - C7258 - C7259) * C92067) *
               C44804) *
              C2709 +
          (((C3190 * C1988 -
             ((C554 * C1397 + C92148 * C1796) * C1983 +
              (C554 * C1389 + C92148 * C1788) * C1987) +
             C3191 * C1984) *
                C92310 +
            (C3192 * C1988 - (C3191 * C1983 + C3190 * C1987) + C3193 * C1984) *
                C92067) *
               C92348 +
           ((C8213 * C1988 - (C9215 * C1983 + C9216 * C1987) + C8214 * C1984) *
                C92310 +
            (C18615 * C1988 - (C8214 * C1983 + C8213 * C1987) +
             C18616 * C1984) *
                C92067) *
               C92349 +
           ((C8215 * C1988 - (C9213 * C1983 + C9214 * C1987) + C8216 * C1984) *
                C92310 +
            ((C554 * C7566 + C92148 * C8202) * C1988 -
             (C8216 * C1983 + C8215 * C1987) +
             (C554 * C7568 + C92148 * C8203) * C1984) *
                C92067) *
               C44804) *
              C2710) *
         C92099) /
        (p * q * std::sqrt(p + q));
    d2eezy[28] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C554 * C107 + C92148 * C555) * C181 +
              (C554 * C182 + C92148 * C641) * C92099) *
                 C92310 +
             (C648 + C664) * C92067) *
                C92348 +
            ((C5484 * C181 + C5591 * C92099) * C92310 +
             (C4710 + C4711) * C92067) *
                C92349 +
            ((C5486 * C181 + C5592 * C92099) * C92310 +
             (C4712 + C4722) * C92067) *
                C44804) *
               C1983 -
           (((C4723 + C4717) * C92067 + (C4722 + C4712) * C92310) * C44804 +
            ((C4718 + C4719) * C92067 + (C4711 + C4710) * C92310) * C92349 +
            ((C665 + C651) * C92067 + (C664 + C648) * C92310) * C92348) *
               C1984) *
              C2709 +
          ((((C3263 + C3275) * C92310 + (C3266 + C3276) * C92067) * C92348 +
            ((C8316 + C8324) * C92310 + (C18715 + C18719) * C92067) * C92349 +
            ((C8319 + C8325) * C92310 +
             ((C554 * C7566 + C92148 * C8202) * C181 +
              (C554 * C7668 + C92148 * C8314) * C92099) *
                 C92067) *
                C44804) *
               C1984 -
           (((C8325 + C8319) * C92067 +
             (C9326 * C92099 + C9214 * C181) * C92310) *
                C44804 +
            ((C8324 + C8316) * C92067 +
             (C9325 * C92099 + C9216 * C181) * C92310) *
                C92349 +
            ((C3275 + C3263) * C92067 +
             ((C554 * C1471 + C92148 * C1854) * C92099 +
              (C554 * C1389 + C92148 * C1788) * C181) *
                 C92310) *
                C92348) *
               C1983) *
              C2710)) /
        (p * q * std::sqrt(p + q));
    d2eezz[28] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C554 * C107 + C92148 * C555) * C2849 +
                       (C554 * C245 + C92148 * C719) * C2709 -
                       (C554 * C1389 + C92148 * C1788) * C2850 -
                       (C554 * C1540 + C92148 * C1909) * C2710) *
                          C92310 +
                      (C3345 + C3346 - C3347 - C3363) * C92067) *
                         C92348 +
                     ((C9427 + C9428 - C9429 - C9439) * C92310 +
                      (C8425 + C8426 - C8427 - C8437) * C92067) *
                         C92349 +
                     ((C9432 + C9433 - C9434 - C9440) * C92310 +
                      (C8430 + C8431 - C8432 - C8438) * C92067) *
                         C44804) *
                        C92099 * C1983 +
                    (((C3347 - (C3346 + C3345) + C3363) * C92310 +
                      (C3352 - (C3351 + C3350) + C3364) * C92067) *
                         C92348 +
                     ((C8427 - (C8426 + C8425) + C8437) * C92310 +
                      (C18820 - (C18819 + C18818) + C18824) * C92067) *
                         C92349 +
                     ((C8432 - (C8431 + C8430) + C8438) * C92310 +
                      ((C554 * C7566 + C92148 * C8202) * C2850 -
                       (C4805 * C2709 + C4634 * C2849) +
                       (C554 * C7768 + C92148 * C8423) * C2710) *
                          C92067) *
                         C44804) *
                        C92099 * C1984)) /
                  (p * q * std::sqrt(p + q));
    d2eexx[29] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C89875 * C107 + C92310 * C113 + C89868 * C108 + C92067 * C114) *
               C104 +
           (C89875 * C117 + C92310 * C125 + C89868 * C118 + C92067 * C126) *
               C93 -
           (C89868 * C109 + C92067 * C115 + C89875 * C108 + C92310 * C114) *
               C105 -
           (C89868 * C119 + C92067 * C127 + C89875 * C118 + C92310 * C126) *
               C94 +
           (C89875 * C109 + C92310 * C115 + C89868 * C110 + C92067 * C116) *
               C106 +
           (C89875 * C119 + C92310 * C127 + C89868 * C120 + C92067 * C128) *
               C95) *
              C92348 +
          ((C89875 * C805 + C92310 * C817 + C89868 * C804 + C92067 * C816) *
               C104 +
           (C89875 * C813 + C92310 * C829 + C89868 * C812 + C92067 * C828) *
               C93 -
           (C89868 * C803 + C92067 * C815 + C89875 * C804 + C92310 * C816) *
               C105 -
           (C89868 * C811 + C92067 * C827 + C89875 * C812 + C92310 * C828) *
               C94 +
           (C89875 * C803 + C92310 * C815 + C89868 * C802 + C92067 * C814) *
               C106 +
           (C89875 * C811 + C92310 * C827 + C89868 * C810 + C92067 * C826) *
               C95) *
              C92349 +
          ((C89875 * C806 + C92310 * C818 + C89868 * C807 + C92067 * C819) *
               C104 +
           (C89875 * C822 + C92310 * C830 + C89868 * C823 + C92067 * C831) *
               C93 -
           (C89868 * C808 + C92067 * C820 + C89875 * C807 + C92310 * C819) *
               C105 -
           (C89868 * C824 + C92067 * C832 + C89875 * C823 + C92310 * C831) *
               C94 +
           (C89875 * C808 + C92310 * C820 + C89868 * C809 + C92067 * C821) *
               C106 +
           (C89875 * C824 + C92310 * C832 + C89868 * C825 + C92067 * C833) *
               C95) *
              C44804) *
         C92148 * C92110 * C92099) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C89875 * C107 + C92310 * C113 + C89868 * C108 + C92067 * C114) *
                C801 +
            (C89875 * C117 + C92310 * C125 + C89868 * C118 + C92067 * C126) *
                C92078) *
               C92348 +
           ((C45573 + C45574) * C801 + (C45575 + C45576) * C92078) * C92349 +
           C45589 * C44804) *
              C92148 * C92110 * C798 -
          (((C45581 + C45582) * C92078 + (C45583 + C45584) * C801) * C44804 +
           ((C45580 + C45579) * C92078 + (C45578 + C45577) * C801) * C92349 +
           ((C45576 + C45575) * C92078 + (C45574 + C45573) * C801) * C92348) *
              C92148 * C92110 * C799 +
          (C45589 * C92348 +
           ((C45584 + C45583) * C801 + (C45582 + C45581) * C92078) * C92349 +
           ((C89875 * C4883 + C92310 * C4889 + C89868 * C4884 +
             C92067 * C4890) *
                C801 +
            (C89875 * C4891 + C92310 * C4895 + C89868 * C4892 +
             C92067 * C4896) *
                C92078) *
               C44804) *
              C92148 * C92110 * C800)) /
            (p * q * std::sqrt(p + q));
    d2eexy[29] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C89875 * C107 + C92310 * C113 + C89868 * C108 + C92067 * C114) *
                C181 +
            (C89875 * C182 + C92310 * C188 + C89868 * C183 + C92067 * C189) *
                C92099) *
               C92348 +
           ((C89875 * C805 + C92310 * C817 + C89868 * C804 + C92067 * C816) *
                C181 +
            (C89875 * C890 + C92310 * C898 + C89868 * C889 + C92067 * C897) *
                C92099) *
               C92349 +
           ((C89875 * C806 + C92310 * C818 + C89868 * C807 + C92067 * C819) *
                C181 +
            (C89875 * C891 + C92310 * C899 + C89868 * C892 + C92067 * C900) *
                C92099) *
               C44804) *
              C92148 * C93 -
          (((C89868 * C893 + C92067 * C901 + C89875 * C892 + C92310 * C900) *
                C92099 +
            (C89868 * C808 + C92067 * C820 + C89875 * C807 + C92310 * C819) *
                C181) *
               C44804 +
           ((C89868 * C888 + C92067 * C896 + C89875 * C889 + C92310 * C897) *
                C92099 +
            (C89868 * C803 + C92067 * C815 + C89875 * C804 + C92310 * C816) *
                C181) *
               C92349 +
           ((C89868 * C184 + C92067 * C190 + C89875 * C183 + C92310 * C189) *
                C92099 +
            (C89868 * C109 + C92067 * C115 + C89875 * C108 + C92310 * C114) *
                C181) *
               C92348) *
              C92148 * C94 +
          (((C89875 * C109 + C92310 * C115 + C89868 * C110 + C92067 * C116) *
                C181 +
            (C89875 * C184 + C92310 * C190 + C89868 * C185 + C92067 * C191) *
                C92099) *
               C92348 +
           ((C89875 * C803 + C92310 * C815 + C89868 * C802 + C92067 * C814) *
                C181 +
            (C89875 * C888 + C92310 * C896 + C89868 * C887 + C92067 * C895) *
                C92099) *
               C92349 +
           ((C89875 * C808 + C92310 * C820 + C89868 * C809 + C92067 * C821) *
                C181 +
            (C89875 * C893 + C92310 * C901 + C89868 * C894 + C92067 * C902) *
                C92099) *
               C44804) *
              C92148 * C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C89875 * C107 + C92310 * C113 + C89868 * C108 + C92067 * C114) *
               C884 +
           (C89875 * C182 + C92310 * C188 + C89868 * C183 + C92067 * C189) *
               C798 -
           (C45574 + C45573) * C885 - (C45676 + C45677) * C799 + C45585 * C886 +
           C45682 * C800) *
              C92348 +
          ((C45573 + C45574) * C884 + (C45677 + C45676) * C798 -
           (C45578 + C45577) * C885 - (C45679 + C45678) * C799 +
           (C45584 + C45583) * C886 + (C45680 + C45681) * C800) *
              C92349 +
          (C45585 * C884 + C45682 * C798 - (C45583 + C45584) * C885 -
           (C45681 + C45680) * C799 +
           (C89875 * C4883 + C92310 * C4889 + C89868 * C4884 + C92067 * C4890) *
               C886 +
           (C89875 * C5014 + C92310 * C5018 + C89868 * C5015 + C92067 * C5019) *
               C800) *
              C44804) *
         C92148 * C92078 * C92110) /
            (p * q * std::sqrt(p + q));
    d2eexz[29] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C89875 * C107 + C92310 * C113 + C89868 * C108 + C92067 * C114) *
                C244 +
            (C89875 * C245 + C92310 * C251 + C89868 * C246 + C92067 * C252) *
                C92110) *
               C92348 +
           ((C89875 * C805 + C92310 * C817 + C89868 * C804 + C92067 * C816) *
                C244 +
            (C89875 * C956 + C92310 * C964 + C89868 * C955 + C92067 * C963) *
                C92110) *
               C92349 +
           ((C89875 * C806 + C92310 * C818 + C89868 * C807 + C92067 * C819) *
                C244 +
            (C89875 * C957 + C92310 * C965 + C89868 * C958 + C92067 * C966) *
                C92110) *
               C44804) *
              C92148 * C92099 * C93 -
          (((C89868 * C959 + C92067 * C967 + C89875 * C958 + C92310 * C966) *
                C92110 +
            (C89868 * C808 + C92067 * C820 + C89875 * C807 + C92310 * C819) *
                C244) *
               C44804 +
           ((C89868 * C954 + C92067 * C962 + C89875 * C955 + C92310 * C963) *
                C92110 +
            (C89868 * C803 + C92067 * C815 + C89875 * C804 + C92310 * C816) *
                C244) *
               C92349 +
           ((C89868 * C247 + C92067 * C253 + C89875 * C246 + C92310 * C252) *
                C92110 +
            (C89868 * C109 + C92067 * C115 + C89875 * C108 + C92310 * C114) *
                C244) *
               C92348) *
              C92148 * C92099 * C94 +
          (((C89875 * C109 + C92310 * C115 + C89868 * C110 + C92067 * C116) *
                C244 +
            (C89875 * C247 + C92310 * C253 + C89868 * C248 + C92067 * C254) *
                C92110) *
               C92348 +
           ((C89875 * C803 + C92310 * C815 + C89868 * C802 + C92067 * C814) *
                C244 +
            (C89875 * C954 + C92310 * C962 + C89868 * C953 + C92067 * C961) *
                C92110) *
               C92349 +
           ((C89875 * C808 + C92310 * C820 + C89868 * C809 + C92067 * C821) *
                C244 +
            (C89875 * C959 + C92310 * C967 + C89868 * C960 + C92067 * C968) *
                C92110) *
               C44804) *
              C92148 * C92099 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C89875 * C107 + C92310 * C113 + C89868 * C108 + C92067 * C114) *
                C244 +
            (C89875 * C245 + C92310 * C251 + C89868 * C246 + C92067 * C252) *
                C92110) *
               C92348 +
           ((C45573 + C45574) * C244 + (C45770 + C45771) * C92110) * C92349 +
           C45778 * C44804) *
              C92148 * C798 -
          (((C45774 + C45775) * C92110 + (C45583 + C45584) * C244) * C44804 +
           ((C45773 + C45772) * C92110 + (C45578 + C45577) * C244) * C92349 +
           ((C45771 + C45770) * C92110 + (C45574 + C45573) * C244) * C92348) *
              C92148 * C799 +
          (C45778 * C92348 +
           ((C45584 + C45583) * C244 + (C45775 + C45774) * C92110) * C92349 +
           ((C89875 * C4883 + C92310 * C4889 + C89868 * C4884 +
             C92067 * C4890) *
                C244 +
            (C89875 * C5115 + C92310 * C5119 + C89868 * C5116 +
             C92067 * C5120) *
                C92110) *
               C44804) *
              C92148 * C800) *
         C92078) /
            (p * q * std::sqrt(p + q));
    d2eeyx[29] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((C45029 * C107 + C92348 * C308 + C45030 * C805 +
                      C92349 * C1022 + C45031 * C806 + C44804 * C1023) *
                         C104 +
                     (C45029 * C117 + C92348 * C314 + C45030 * C813 +
                      C92349 * C1030 + C45031 * C822 + C44804 * C1031) *
                         C93 -
                     (C45057 + C45058 + C45059) * C105 -
                     (C45060 + C45061 + C45062) * C94 +
                     (C45063 + C45064 + C45065) * C106 +
                     (C45066 + C45067 + C45068) * C95) *
                        C92148 * C92310 +
                    ((C45059 + C45058 + C45057) * C104 +
                     (C45062 + C45061 + C45060) * C93 -
                     (C45065 + C45064 + C45063) * C105 -
                     (C45068 + C45067 + C45066) * C94 +
                     (C45029 * C110 + C92348 * C311 + C45030 * C802 +
                      C92349 * C1019 + C45031 * C809 + C44804 * C1026) *
                         C106 +
                     (C45029 * C120 + C92348 * C317 + C45030 * C810 +
                      C92349 * C1027 + C45031 * C825 + C44804 * C1034) *
                         C95) *
                        C92148 * C92067) *
                   C92110 * C92099) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C45029 * C107 + C92348 * C308 + C45030 * C805 +
                       C92349 * C1022 + C45031 * C806 + C44804 * C1023) *
                          C801 +
                      (C45029 * C117 + C92348 * C314 + C45030 * C813 +
                       C92349 * C1030 + C45031 * C822 + C44804 * C1031) *
                          C92078) *
                         C92148 * C92310 +
                     ((C45059 + C45058 + C45057) * C801 +
                      (C45062 + C45061 + C45060) * C92078) *
                         C92148 * C92067) *
                        C92110 * C798 -
                    (((C45031 * C4885 + C44804 * C5221 + C45030 * C823 +
                       C92349 * C1032 + C45029 * C812 + C92348 * C1029) *
                          C92078 +
                      (C45031 * C4881 + C44804 * C5217 + C45030 * C807 +
                       C92349 * C1024 + C45029 * C804 + C92348 * C1021) *
                          C801) *
                         C92148 * C92067 +
                     ((C45031 * C4886 + C44804 * C5222 + C45030 * C822 +
                       C92349 * C1031 + C45029 * C813 + C92348 * C1030) *
                          C92078 +
                      (C45031 * C4882 + C44804 * C5218 + C45030 * C806 +
                       C92349 * C1023 + C45029 * C805 + C92348 * C1022) *
                          C801) *
                         C92148 * C92310) *
                        C92110 * C799 +
                    (((C45029 * C806 + C92348 * C1023 + C45030 * C4882 +
                       C92349 * C5218 + C45031 * C4883 + C44804 * C5219) *
                          C801 +
                      (C45029 * C822 + C92348 * C1031 + C45030 * C4886 +
                       C92349 * C5222 + C45031 * C4891 + C44804 * C5223) *
                          C92078) *
                         C92148 * C92310 +
                     ((C45029 * C807 + C92348 * C1024 + C45030 * C4881 +
                       C92349 * C5217 + C45031 * C4884 + C44804 * C5220) *
                          C801 +
                      (C45029 * C823 + C92348 * C1032 + C45030 * C4885 +
                       C92349 * C5221 + C45031 * C4892 + C44804 * C5224) *
                          C92078) *
                         C92148 * C92067) *
                        C92110 * C800)) /
                      (p * q * std::sqrt(p + q));
    d2eeyy[29] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C45029 * C107 + C92348 * C308 + C45030 * C805 +
                       C92349 * C1022 + C45031 * C806 + C44804 * C1023) *
                          C181 +
                      (C45029 * C182 + C92348 * C394 + C45030 * C890 +
                       C92349 * C1085 + C45031 * C891 + C44804 * C1086) *
                          C92099) *
                         C92148 * C92310 +
                     ((C45059 + C45058 + C45057) * C181 +
                      (C45155 + C45156 + C45157) * C92099) *
                         C92148 * C92067) *
                        C93 -
                    (((C45158 + C45159 + C45160) * C92099 +
                      (C45065 + C45064 + C45063) * C181) *
                         C92148 * C92067 +
                     ((C45157 + C45156 + C45155) * C92099 +
                      (C45057 + C45058 + C45059) * C181) *
                         C92148 * C92310) *
                        C94 +
                    (((C45063 + C45064 + C45065) * C181 +
                      (C45160 + C45159 + C45158) * C92099) *
                         C92148 * C92310 +
                     ((C45029 * C110 + C92348 * C311 + C45030 * C802 +
                       C92349 * C1019 + C45031 * C809 + C44804 * C1026) *
                          C181 +
                      (C45029 * C185 + C92348 * C397 + C45030 * C887 +
                       C92349 * C1091 + C45031 * C894 + C44804 * C1092) *
                          C92099) *
                         C92148 * C92067) *
                        C95) *
                   C92110) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((C45029 * C107 + C92348 * C308 + C45030 * C805 +
                      C92349 * C1022 + C45031 * C806 + C44804 * C1023) *
                         C884 +
                     (C45029 * C182 + C92348 * C394 + C45030 * C890 +
                      C92349 * C1085 + C45031 * C891 + C44804 * C1086) *
                         C798 -
                     (C45031 * C4882 + C44804 * C5218 + C45030 * C806 +
                      C92349 * C1023 + C45029 * C805 + C92348 * C1022) *
                         C885 -
                     (C45031 * C5012 + C44804 * C5299 + C45030 * C891 +
                      C92349 * C1086 + C45029 * C890 + C92348 * C1085) *
                         C799 +
                     (C45029 * C806 + C92348 * C1023 + C45030 * C4882 +
                      C92349 * C5218 + C45031 * C4883 + C44804 * C5219) *
                         C886 +
                     (C45029 * C891 + C92348 * C1086 + C45030 * C5012 +
                      C92349 * C5299 + C45031 * C5014 + C44804 * C5300) *
                         C800) *
                        C92148 * C92310 +
                    ((C45059 + C45058 + C45057) * C884 +
                     (C45155 + C45156 + C45157) * C798 -
                     (C45031 * C4881 + C44804 * C5217 + C45030 * C807 +
                      C92349 * C1024 + C45029 * C804 + C92348 * C1021) *
                         C885 -
                     (C45031 * C5013 + C44804 * C5301 + C45030 * C892 +
                      C92349 * C1088 + C45029 * C889 + C92348 * C1087) *
                         C799 +
                     (C45029 * C807 + C92348 * C1024 + C45030 * C4881 +
                      C92349 * C5217 + C45031 * C4884 + C44804 * C5220) *
                         C886 +
                     (C45029 * C892 + C92348 * C1088 + C45030 * C5013 +
                      C92349 * C5301 + C45031 * C5015 + C44804 * C5302) *
                         C800) *
                        C92148 * C92067) *
                   C92078 * C92110) /
                      (p * q * std::sqrt(p + q));
    d2eeyz[29] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C45029 * C107 + C92348 * C308 + C45030 * C805 +
                       C92349 * C1022 + C45031 * C806 + C44804 * C1023) *
                          C244 +
                      (C45029 * C245 + C92348 * C474 + C45030 * C956 +
                       C92349 * C1146 + C45031 * C957 + C44804 * C1147) *
                          C92110) *
                         C92148 * C92310 +
                     ((C45059 + C45058 + C45057) * C244 +
                      (C45247 + C45248 + C45249) * C92110) *
                         C92148 * C92067) *
                        C92099 * C93 -
                    (((C45250 + C45251 + C45252) * C92110 +
                      (C45065 + C45064 + C45063) * C244) *
                         C92148 * C92067 +
                     ((C45249 + C45248 + C45247) * C92110 +
                      (C45057 + C45058 + C45059) * C244) *
                         C92148 * C92310) *
                        C92099 * C94 +
                    (((C45063 + C45064 + C45065) * C244 +
                      (C45252 + C45251 + C45250) * C92110) *
                         C92148 * C92310 +
                     ((C45029 * C110 + C92348 * C311 + C45030 * C802 +
                       C92349 * C1019 + C45031 * C809 + C44804 * C1026) *
                          C244 +
                      (C45029 * C248 + C92348 * C477 + C45030 * C953 +
                       C92349 * C1143 + C45031 * C960 + C44804 * C1150) *
                          C92110) *
                         C92148 * C92067) *
                        C92099 * C95)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C45029 * C107 + C92348 * C308 + C45030 * C805 +
                       C92349 * C1022 + C45031 * C806 + C44804 * C1023) *
                          C244 +
                      (C45029 * C245 + C92348 * C474 + C45030 * C956 +
                       C92349 * C1146 + C45031 * C957 + C44804 * C1147) *
                          C92110) *
                         C92148 * C92310 +
                     ((C45059 + C45058 + C45057) * C244 +
                      (C45247 + C45248 + C45249) * C92110) *
                         C92148 * C92067) *
                        C798 -
                    (((C45031 * C5113 + C44804 * C5377 + C45030 * C958 +
                       C92349 * C1148 + C45029 * C955 + C92348 * C1145) *
                          C92110 +
                      (C45031 * C4881 + C44804 * C5217 + C45030 * C807 +
                       C92349 * C1024 + C45029 * C804 + C92348 * C1021) *
                          C244) *
                         C92148 * C92067 +
                     ((C45031 * C5114 + C44804 * C5378 + C45030 * C957 +
                       C92349 * C1147 + C45029 * C956 + C92348 * C1146) *
                          C92110 +
                      (C45031 * C4882 + C44804 * C5218 + C45030 * C806 +
                       C92349 * C1023 + C45029 * C805 + C92348 * C1022) *
                          C244) *
                         C92148 * C92310) *
                        C799 +
                    (((C45029 * C806 + C92348 * C1023 + C45030 * C4882 +
                       C92349 * C5218 + C45031 * C4883 + C44804 * C5219) *
                          C244 +
                      (C45029 * C957 + C92348 * C1147 + C45030 * C5114 +
                       C92349 * C5378 + C45031 * C5115 + C44804 * C5379) *
                          C92110) *
                         C92148 * C92310 +
                     ((C45029 * C807 + C92348 * C1024 + C45030 * C4881 +
                       C92349 * C5217 + C45031 * C4884 + C44804 * C5220) *
                          C244 +
                      (C45029 * C958 + C92348 * C1148 + C45030 * C5113 +
                       C92349 * C5377 + C45031 * C5116 + C44804 * C5380) *
                          C92110) *
                         C92148 * C92067) *
                        C800) *
                   C92078) /
                      (p * q * std::sqrt(p + q));
    d2eezx[29] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92148 * C555) * C104 +
            (C554 * C117 + C92148 * C561) * C93 - C584 * C105 - C585 * C94 +
            C586 * C106 + C587 * C95) *
               C92310 +
           (C584 * C104 + C585 * C93 - C586 * C105 - C587 * C94 + C588 * C106 +
            C589 * C95) *
               C92067) *
              C92348 +
          ((C5484 * C104 + C5485 * C93 - C2468 * C105 - C2469 * C94 +
            C2470 * C106 + C2471 * C95) *
               C92310 +
           (C2468 * C104 + C2469 * C93 - C2470 * C105 - C2471 * C94 +
            C2472 * C106 + C2473 * C95) *
               C92067) *
              C92349 +
          ((C5486 * C104 + C5487 * C93 - C4632 * C105 - C4633 * C94 +
            C4634 * C106 + C4635 * C95) *
               C92310 +
           (C4632 * C104 + C4633 * C93 - C4634 * C105 - C4635 * C94 +
            (C554 * C809 + C92148 * C1208) * C106 +
            (C554 * C825 + C92148 * C1216) * C95) *
               C92067) *
              C44804) *
         C92110 * C92099) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92148 * C555) * C801 +
             (C554 * C117 + C92148 * C561) * C92078) *
                C92310 +
            (C584 * C801 + C585 * C92078) * C92067) *
               C92348 +
           ((C5493 + C5494) * C92310 + (C5468 + C5469) * C92067) * C92349 +
           C46077 * C44804) *
              C92110 * C798 -
          (((C5498 + C5499) * C92067 + (C5500 + C5501) * C92310) * C44804 +
           ((C5475 + C5474) * C92067 + (C5496 + C5495) * C92310) * C92349 +
           ((C5469 + C5468) * C92067 + (C5494 + C5493) * C92310) * C92348) *
              C92110 * C799 +
          (C46077 * C92348 +
           (C37055 * C92310 + (C5499 + C5498) * C92067) * C92349 +
           ((C37064 + C37063) * C92310 +
            ((C554 * C4884 + C92148 * C5458) * C801 +
             (C554 * C4892 + C92148 * C5462) * C92078) *
                C92067) *
               C44804) *
              C92110 * C800)) /
            (p * q * std::sqrt(p + q));
    d2eezy[29] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92148 * C555) * C181 +
             (C554 * C182 + C92148 * C641) * C92099) *
                C92310 +
            (C648 + C664) * C92067) *
               C92348 +
           ((C5484 * C181 + C5591 * C92099) * C92310 +
            (C4710 + C4711) * C92067) *
               C92349 +
           ((C5486 * C181 + C5592 * C92099) * C92310 +
            (C4712 + C4722) * C92067) *
               C44804) *
              C93 -
          (((C4723 + C4717) * C92067 + (C4722 + C4712) * C92310) * C44804 +
           ((C4718 + C4719) * C92067 + (C4711 + C4710) * C92310) * C92349 +
           ((C665 + C651) * C92067 + (C664 + C648) * C92310) * C92348) *
              C94 +
          ((C668 * C92310 + C669 * C92067) * C92348 +
           (C15416 * C92310 + (C15418 + C15417) * C92067) * C92349 +
           ((C4717 + C4723) * C92310 +
            ((C554 * C809 + C92148 * C1208) * C181 +
             (C554 * C894 + C92148 * C1274) * C92099) *
                C92067) *
               C44804) *
              C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92148 * C555) * C884 +
            (C554 * C182 + C92148 * C641) * C798 - C5484 * C885 - C5591 * C799 +
            C5486 * C886 + C5592 * C800) *
               C92310 +
           (C584 * C884 + C660 * C798 - C2468 * C885 - C2556 * C799 +
            C4632 * C886 + C4720 * C800) *
               C92067) *
              C92348 +
          ((C5484 * C884 + C5591 * C798 - C5486 * C885 - C5592 * C799 +
            C5492 * C886 + C5593 * C800) *
               C92310 +
           (C2468 * C884 + C2556 * C798 - C4632 * C885 - C4720 * C799 +
            C5490 * C886 + C5594 * C800) *
               C92067) *
              C92349 +
          ((C5486 * C884 + C5592 * C798 - C5492 * C885 - C5593 * C799 +
            C37062 * C886 + C37118 * C800) *
               C92310 +
           (C4632 * C884 + C4720 * C798 - C5490 * C885 - C5594 * C799 +
            (C554 * C4884 + C92148 * C5458) * C886 +
            (C554 * C5015 + C92148 * C5581) * C800) *
               C92067) *
              C44804) *
         C92078 * C92110) /
            (p * q * std::sqrt(p + q));
    d2eezz[29] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92148 * C555) * C244 +
             (C554 * C245 + C92148 * C719) * C92110) *
                C92310 +
            (C726 + C742) * C92067) *
               C92348 +
           ((C5673 + C5691) * C92310 + C7466 * C92067) * C92349 +
           (C5695 * C92310 + C5679 * C92067) * C44804) *
              C92099 * C93 -
          (((C4807 + C4803) * C92067 + C7467 * C92310) * C44804 +
           (C17876 * C92067 + C7468 * C92310) * C92349 +
           ((C743 + C729) * C92067 + (C742 + C726) * C92310) * C92348) *
              C92099 * C94 +
          ((C746 * C92310 + C747 * C92067) * C92348 +
           (C15493 * C92310 + (C2631 + C2641) * C92067) * C92349 +
           ((C4803 + C4807) * C92310 +
            ((C554 * C809 + C92148 * C1208) * C244 +
             (C554 * C960 + C92148 * C1332) * C92110) *
                C92067) *
               C44804) *
              C92099 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92148 * C555) * C244 +
             (C554 * C245 + C92148 * C719) * C92110) *
                C92310 +
            (C726 + C742) * C92067) *
               C92348 +
           ((C5673 + C5691) * C92310 + C7466 * C92067) * C92349 +
           C46228 * C44804) *
              C798 -
          (((C5693 + C5682) * C92067 + (C5694 + C5685) * C92310) * C44804 +
           (C7467 * C92067 + (C5692 + C5676) * C92310) * C92349 +
           (C7468 * C92067 + (C5691 + C5673) * C92310) * C92348) *
              C799 +
          (C46228 * C92348 +
           (C37171 * C92310 + (C5682 + C5693) * C92067) * C92349 +
           ((C37174 + C37177) * C92310 +
            ((C554 * C4884 + C92148 * C5458) * C244 +
             (C554 * C5116 + C92148 * C5671) * C92110) *
                C92067) *
               C44804) *
              C800) *
         C92078) /
            (p * q * std::sqrt(p + q));
    d2eexx[30] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C36216 * C107 + C92062 * C113) * C1987 +
                       (C36216 * C117 + C92062 * C125) * C1983 -
                       (C36216 * C108 + C92062 * C114) * C1988 -
                       (C36216 * C118 + C92062 * C126) * C1984) *
                          C92348 +
                      (C37710 + C37711 - C37734 - C37735) * C92349 +
                      (C37716 + C37717 - C37736 - C37737) * C44804) *
                         C92323 +
                     ((C42870 + C42871 - C42886 - C42887) * C92348 +
                      (C41952 + C41953 - C41968 - C41969) * C92349 +
                      (C58249 + C58250 - C58257 - C58258) * C44804) *
                         C92212) *
                        C92110 * C1985 +
                    (((C37734 - (C37711 + C37710) + C37735) * C92348 +
                      (C37736 - (C37717 + C37716) + C37737) * C92349 +
                      (C37738 - (C37723 + C37722) + C37739) * C44804) *
                         C92323 +
                     ((C41968 - (C41953 + C41952) + C41969) * C92348 +
                      (C58257 - (C58250 + C58249) + C58258) * C92349 +
                      ((C36216 * C8537 + C92062 * C8539) * C1988 -
                       (C38972 * C1983 + C38973 * C1987) +
                       (C36216 * C8541 + C92062 * C8543) * C1984) *
                          C44804) *
                         C92212) *
                        C92110 * C1986)) /
                  (p * q * std::sqrt(p + q));
    d2eexy[30] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C36216 * C107 + C92062 * C113) * C2059 +
                       (C36216 * C182 + C92062 * C188) * C1985 -
                       C36692 * C2060 - C36770 * C1986) *
                          C92348 +
                      (C36692 * C2059 + C36770 * C1985 - C36694 * C2060 -
                       C36771 * C1986) *
                          C92349 +
                      (C36694 * C2059 + C36771 * C1985 - C36696 * C2060 -
                       C36772 * C1986) *
                          C44804) *
                         C92323 +
                     ((C43923 + C43924 - C43925 - C43926) * C92348 +
                      (C43927 + C43928 - C43929 - C43930) * C92349 +
                      (C38975 * C2059 + C39059 * C1985 - C38973 * C2060 -
                       C39060 * C1986) *
                          C44804) *
                         C92212) *
                        C1983 +
                    (((C37728 * C2060 -
                       ((C36216 * C183 + C92062 * C189) * C1985 +
                        (C36216 * C108 + C92062 * C114) * C2059) +
                       C37812 * C1986) *
                          C92348 +
                      (C37730 * C2060 - (C37812 * C1985 + C37728 * C2059) +
                       C37813 * C1986) *
                          C92349 +
                      (C37732 * C2060 - (C37813 * C1985 + C37730 * C2059) +
                       C37814 * C1986) *
                          C44804) *
                         C92323 +
                     ((C41964 * C2060 - (C42999 * C1985 + C42882 * C2059) +
                       C42074 * C1986) *
                          C92348 +
                      (C58255 * C2060 - (C42074 * C1985 + C41964 * C2059) +
                       C58359 * C1986) *
                          C92349 +
                      ((C36216 * C8537 + C92062 * C8539) * C2060 -
                       (C58359 * C1985 + C58255 * C2059) +
                       (C36216 * C8667 + C92062 * C8669) * C1986) *
                          C44804) *
                         C92212) *
                        C1984) *
                   C92110) /
                  (p * q * std::sqrt(p + q));
    d2eexz[30] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((((C36216 * C107 + C92062 * C113) * C244 +
                        (C36216 * C245 + C92062 * C251) * C92110) *
                           C92348 +
                       (C36826 + C36842) * C92349 + C36846 * C44804) *
                          C92323 +
                      ((C41107 * C244 + C41316 * C92110) * C92348 +
                       (C40482 + C40483) * C92349 + C56926 * C44804) *
                          C92212) *
                         C1985 -
                     (((C56927 + C56928) * C44804 + (C40490 + C40491) * C92349 +
                       (C40483 + C40482) * C92348) *
                          C92212 +
                      ((C36844 + C36832) * C44804 + (C36843 + C36829) * C92349 +
                       (C36842 + C36826) * C92348) *
                          C92323) *
                         C1986) *
                        C1983 +
                    ((((C37881 + C37893) * C92348 + (C37884 + C37894) * C92349 +
                       (C37887 + C37895) * C44804) *
                          C92323 +
                      ((C42174 + C42182) * C92348 + (C58458 + C58462) * C92349 +
                       ((C36216 * C8537 + C92062 * C8539) * C244 +
                        (C36216 * C8781 + C92062 * C8783) * C92110) *
                           C44804) *
                          C92212) *
                         C1986 -
                     (((C58462 + C58458) * C44804 + (C42182 + C42174) * C92349 +
                       (C43104 * C92110 + C42882 * C244) * C92348) *
                          C92212 +
                      ((C37894 + C37884) * C44804 + (C37893 + C37881) * C92349 +
                       ((C36216 * C246 + C92062 * C252) * C92110 +
                        (C36216 * C108 + C92062 * C114) * C244) *
                           C92348) *
                          C92323) *
                         C1985) *
                        C1984)) /
                  (p * q * std::sqrt(p + q));
    d2eeyx[30] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C45029 * C107 + C92348 * C308 + C45030 * C805 +
                       C92349 * C1022 + C45031 * C806 + C44804 * C1023) *
                          C1987 +
                      (C45029 * C117 + C92348 * C314 + C45030 * C813 +
                       C92349 * C1030 + C45031 * C822 + C44804 * C1031) *
                          C1983 -
                      (C45057 + C45058 + C45059) * C1988 -
                      (C45060 + C45061 + C45062) * C1984) *
                         C92323 +
                     ((C57733 + C57734 + C57735) * C1987 +
                      (C57736 + C57737 + C57738) * C1983 -
                      (C48267 + C48266 + C48265) * C1988 -
                      (C48270 + C48269 + C48268) * C1984) *
                         C92212) *
                        C92062 * C92110 * C1985 +
                    (((C47347 + C47348 + C47349) * C1988 -
                      ((C45031 * C4886 + C44804 * C5222 + C45030 * C822 +
                        C92349 * C1031 + C45029 * C813 + C92348 * C1030) *
                           C1983 +
                       (C45031 * C4882 + C44804 * C5218 + C45030 * C806 +
                        C92349 * C1023 + C45029 * C805 + C92348 * C1022) *
                           C1987) +
                      (C47350 + C47351 + C47352) * C1984) *
                         C92323 +
                     ((C45029 * C3432 + C92348 * C3662 + C45030 * C5771 +
                       C92349 * C6041 + C45031 * C8537 + C44804 * C8895) *
                          C1988 -
                      ((C45031 * C8540 + C44804 * C8896 + C45030 * C5778 +
                        C92349 * C6048 + C45029 * C3439 + C92348 * C3665) *
                           C1983 +
                       (C45031 * C8536 + C44804 * C8894 + C45030 * C5772 +
                        C92349 * C6042 + C45029 * C3431 + C92348 * C3661) *
                           C1987) +
                      (C45029 * C3440 + C92348 * C3666 + C45030 * C5777 +
                       C92349 * C6047 + C45031 * C8541 + C44804 * C8897) *
                          C1984) *
                         C92212) *
                        C92062 * C92110 * C1986)) /
                  (p * q * std::sqrt(p + q));
    d2eeyy[30] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C45029 * C107 + C92348 * C308 + C45030 * C805 +
                       C92349 * C1022 + C45031 * C806 + C44804 * C1023) *
                          C2059 +
                      (C45029 * C182 + C92348 * C394 + C45030 * C890 +
                       C92349 * C1085 + C45031 * C891 + C44804 * C1086) *
                          C1985 -
                      (C45031 * C4882 + C44804 * C5218 + C45030 * C806 +
                       C92349 * C1023 + C45029 * C805 + C92348 * C1022) *
                          C2060 -
                      (C45031 * C5012 + C44804 * C5299 + C45030 * C891 +
                       C92349 * C1086 + C45029 * C890 + C92348 * C1085) *
                          C1986) *
                         C92323 +
                     ((C57733 + C57734 + C57735) * C2059 +
                      (C57831 + C57832 + C57833) * C1985 -
                      (C45031 * C8536 + C44804 * C8894 + C45030 * C5772 +
                       C92349 * C6042 + C45029 * C3431 + C92348 * C3661) *
                          C2060 -
                      (C45031 * C8666 + C44804 * C8996 + C45030 * C5870 +
                       C92349 * C6128 + C45029 * C3513 + C92348 * C3735) *
                          C1986) *
                         C92212) *
                        C92062 * C1983 +
                    (((C47347 + C47348 + C47349) * C2060 -
                      ((C45157 + C45156 + C45155) * C1985 +
                       (C45057 + C45058 + C45059) * C2059) +
                      (C47459 + C47458 + C47457) * C1986) *
                         C92323 +
                     ((C45029 * C3432 + C92348 * C3662 + C45030 * C5771 +
                       C92349 * C6041 + C45031 * C8537 + C44804 * C8895) *
                          C2060 -
                      ((C48377 + C48376 + C48375) * C1985 +
                       (C48267 + C48266 + C48265) * C2059) +
                      (C45029 * C3514 + C92348 * C3736 + C45030 * C5869 +
                       C92349 * C6127 + C45031 * C8667 + C44804 * C8997) *
                          C1986) *
                         C92212) *
                        C92062 * C1984) *
                   C92110) /
                  (p * q * std::sqrt(p + q));
    d2eeyz[30] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C45029 * C107 + C92348 * C308 + C45030 * C805 +
                        C92349 * C1022 + C45031 * C806 + C44804 * C1023) *
                           C244 +
                       (C45029 * C245 + C92348 * C474 + C45030 * C956 +
                        C92349 * C1146 + C45031 * C957 + C44804 * C1147) *
                           C92110) *
                          C92323 +
                      ((C57733 + C57734 + C57735) * C244 +
                       (C57925 + C57924 + C57923) * C92110) *
                          C92212) *
                         C92062 * C1985 -
                     (((C45031 * C8780 + C44804 * C9096 + C45030 * C5958 +
                        C92349 * C6207 + C45029 * C3587 + C92348 * C3805) *
                           C92110 +
                       (C45031 * C8536 + C44804 * C8894 + C45030 * C5772 +
                        C92349 * C6042 + C45029 * C3431 + C92348 * C3661) *
                           C244) *
                          C92212 +
                      ((C45031 * C5114 + C44804 * C5378 + C45030 * C957 +
                        C92349 * C1147 + C45029 * C956 + C92348 * C1146) *
                           C92110 +
                       (C45031 * C4882 + C44804 * C5218 + C45030 * C806 +
                        C92349 * C1023 + C45029 * C805 + C92348 * C1022) *
                           C244) *
                          C92323) *
                         C92062 * C1986) *
                        C1983 +
                    ((((C47347 + C47348 + C47349) * C244 +
                       (C47566 + C47565 + C47564) * C92110) *
                          C92323 +
                      ((C45029 * C3432 + C92348 * C3662 + C45030 * C5771 +
                        C92349 * C6041 + C45031 * C8537 + C44804 * C8895) *
                           C244 +
                       (C45029 * C3588 + C92348 * C3806 + C45030 * C5957 +
                        C92349 * C6210 + C45031 * C8781 + C44804 * C9097) *
                           C92110) *
                          C92212) *
                         C92062 * C1986 -
                     (((C48482 + C48483 + C48484) * C92110 +
                       (C48267 + C48266 + C48265) * C244) *
                          C92212 +
                      ((C45249 + C45248 + C45247) * C92110 +
                       (C45057 + C45058 + C45059) * C244) *
                          C92323) *
                         C92062 * C1985) *
                        C1984)) /
                  (p * q * std::sqrt(p + q));
    d2eezx[30] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C20274 * C107 + C92323 * C555 + C20275 * C1389 + C92212 * C1788) *
                C1987 +
            (C20274 * C117 + C92323 * C561 + C20275 * C1397 + C92212 * C1796) *
                C1983 -
            (C20301 + C20302) * C1988 - (C20303 + C20304) * C1984) *
               C92062 * C92348 +
           ((C26314 + C26315) * C1987 + (C26316 + C26317) * C1983 -
            C28470 * C1988 - C28471 * C1984) *
               C92062 * C92349 +
           (C57225 * C1987 + C57226 * C1983 - (C26320 + C26321) * C1988 -
            (C26318 + C26319) * C1984) *
               C92062 * C44804) *
              C92110 * C1985 +
          ((C28472 * C1988 -
            ((C26317 + C26316) * C1983 + (C26315 + C26314) * C1987) +
            C28473 * C1984) *
               C92062 * C92348 +
           ((C26321 + C26320) * C1988 -
            ((C26322 + C26323) * C1983 + (C26324 + C26325) * C1987) +
            (C26319 + C26318) * C1984) *
               C92062 * C92349 +
           ((C20274 * C4881 + C92323 * C5455 + C20275 * C8537 +
             C92212 * C9197) *
                C1988 -
            ((C57237 + C57238) * C1983 + (C57239 + C57240) * C1987) +
            (C20274 * C4885 + C92323 * C5459 + C20275 * C8541 +
             C92212 * C9199) *
                C1984) *
               C92062 * C44804) *
              C92110 * C1986)) /
        (p * q * std::sqrt(p + q));
    d2eezy[30] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C20274 * C107 + C92323 * C555 + C20275 * C1389 + C92212 * C1788) *
                C2059 +
            (C20274 * C182 + C92323 * C641 + C20275 * C1471 + C92212 * C1854) *
                C1985 -
            (C26315 + C26314) * C2060 - (C26436 + C26437) * C1986) *
               C92062 * C92348 +
           ((C26314 + C26315) * C2059 + (C26437 + C26436) * C1985 -
            (C26324 + C26325) * C2060 - (C26439 + C26438) * C1986) *
               C92062 * C92349 +
           (C57225 * C2059 + C57317 * C1985 - (C57239 + C57240) * C2060 -
            (C57323 + C57322) * C1986) *
               C92062 * C44804) *
              C1983 +
          ((C28472 * C2060 -
            ((C20403 + C20402) * C1985 + (C20301 + C20302) * C2059) +
            C28605 * C1986) *
               C92062 * C92348 +
           ((C26321 + C26320) * C2060 - (C28604 * C1985 + C28470 * C2059) +
            (C26440 + C26441) * C1986) *
               C92062 * C92349 +
           ((C20274 * C4881 + C92323 * C5455 + C20275 * C8537 +
             C92212 * C9197) *
                C2060 -
            ((C26441 + C26440) * C1985 + (C26320 + C26321) * C2059) +
            (C20274 * C5013 + C92323 * C5579 + C20275 * C8667 +
             C92212 * C9319) *
                C1986) *
               C92062 * C44804) *
              C1984) *
         C92110) /
        (p * q * std::sqrt(p + q));
    d2eezz[30] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C20274 * C107 + C92323 * C555 + C20275 * C1389 + C92212 * C1788) *
                 C244 +
             (C20274 * C245 + C92323 * C719 + C20275 * C1540 + C92212 * C1909) *
                 C92110) *
                C92062 * C92348 +
            ((C26314 + C26315) * C244 + (C26552 + C26553) * C92110) * C92062 *
                C92349 +
            C57408 * C44804) *
               C1985 -
           (((C57405 + C57406) * C92110 + (C57239 + C57240) * C244) * C92062 *
                C44804 +
            ((C26556 + C26557) * C92110 + (C26324 + C26325) * C244) * C92062 *
                C92349 +
            ((C26553 + C26552) * C92110 + (C26315 + C26314) * C244) * C92062 *
                C92348) *
               C1986) *
              C1983 +
          ((C28742 * C92062 * C92348 +
            ((C26321 + C26320) * C244 + (C26555 + C26554) * C92110) * C92062 *
                C92349 +
            ((C20274 * C4881 + C92323 * C5455 + C20275 * C8537 +
              C92212 * C9197) *
                 C244 +
             (C20274 * C5113 + C92323 * C5668 + C20275 * C8781 +
              C92212 * C9425) *
                 C92110) *
                C92062 * C44804) *
               C1986 -
           (((C26554 + C26555) * C92110 + (C26320 + C26321) * C244) * C92062 *
                C44804 +
            C28743 * C92062 * C92349 +
            ((C20499 + C20498) * C92110 + (C20301 + C20302) * C244) * C92062 *
                C92348) *
               C1985) *
              C1984)) /
        (p * q * std::sqrt(p + q));
    d2eexx[31] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C36216 * C107 + C92062 * C113) * C801 +
              (C36216 * C117 + C92062 * C125) * C92078) *
                 C92348 +
             (C36700 + C36701) * C92349 + C36708 * C44804) *
                C92323 +
            ((C41116 + C41117) * C92348 + C43820 * C92349 + C56777 * C44804) *
                C92212) *
               C2709 -
           (((C40326 + C40327) * C44804 + C43821 * C92349 +
             (C41119 + C41118) * C92348) *
                C92212 +
            (C60033 * C44804 + C43822 * C92349 + (C41117 + C41116) * C92348) *
                C92323) *
               C2710) *
              C1985 +
          (((C43820 * C92348 + C56777 * C92349 + (C38979 + C38978) * C44804) *
                C92323 +
            (C41098 * C92348 + (C40327 + C40326) * C92349 +
             ((C36216 * C37227 + C92062 * C37228) * C801 +
              (C36216 * C37229 + C92062 * C37230) * C92078) *
                 C44804) *
                C92212) *
               C2710 -
           (((C38978 + C38979) * C44804 + C60033 * C92349 + C43822 * C92348) *
                C92212 +
            ((C36705 + C36704) * C44804 + (C36703 + C36702) * C92349 +
             (C36701 + C36700) * C92348) *
                C92323) *
               C2709) *
              C1986)) /
        (p * q * std::sqrt(p + q));
    d2eexy[31] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C36216 * C107 + C92062 * C113) * C2059 +
                       (C36216 * C182 + C92062 * C188) * C1985 -
                       C36692 * C2060 - C36770 * C1986) *
                          C92348 +
                      (C36692 * C2059 + C36770 * C1985 - C36694 * C2060 -
                       C36771 * C1986) *
                          C92349 +
                      (C36694 * C2059 + C36771 * C1985 - C36696 * C2060 -
                       C36772 * C1986) *
                          C44804) *
                         C92323 +
                     ((C43923 + C43924 - C43925 - C43926) * C92348 +
                      (C43927 + C43928 - C43929 - C43930) * C92349 +
                      (C60132 + C60133 - C60134 - C60135) * C44804) *
                         C92212) *
                        C92078 * C2709 +
                    (((C43925 - (C43924 + C43923) + C43926) * C92348 +
                      (C43929 - (C43928 + C43927) + C43930) * C92349 +
                      (C60134 - (C60133 + C60132) + C60135) * C44804) *
                         C92323 +
                     ((C43933 - (C43932 + C43931) + C43934) * C92348 +
                      (C43937 - (C43936 + C43935) + C43938) * C92349 +
                      ((C36216 * C37227 + C92062 * C37228) * C2060 -
                       (C40407 * C1985 + C40323 * C2059) +
                       (C36216 * C37281 + C92062 * C37282) * C1986) *
                          C44804) *
                         C92212) *
                        C92078 * C2710)) /
                  (p * q * std::sqrt(p + q));
    d2eexz[31] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C36216 * C107 + C92062 * C113) * C2849 +
                       (C36216 * C245 + C92062 * C251) * C2709 -
                       C41107 * C2850 - C41316 * C2710) *
                          C92348 +
                      (C39129 + C39130 - C39131 - C39147) * C92349 +
                      (C39134 + C39135 - C39136 - C39148) * C44804) *
                         C92323 +
                     ((C41107 * C2849 + C41316 * C2709 - C41109 * C2850 -
                       C41317 * C2710) *
                          C92348 +
                      (C44039 + C44040 - C44041 - C44042) * C92349 +
                      (C60234 + C60235 - C60236 - C60237) * C44804) *
                         C92212) *
                        C1985 +
                    (((C39131 - (C39130 + C39129) + C39147) * C92348 +
                      (C39136 - (C39135 + C39134) + C39148) * C92349 +
                      (C39141 - (C39140 + C39139) + C39149) * C44804) *
                         C92323 +
                     ((C44041 - (C44040 + C44039) + C44042) * C92348 +
                      (C60236 - (C60235 + C60234) + C60237) * C92349 +
                      ((C36216 * C37227 + C92062 * C37228) * C2850 -
                       (C39146 * C2709 + C38973 * C2849) +
                       (C36216 * C37333 + C92062 * C37334) * C2710) *
                          C44804) *
                         C92212) *
                        C1986) *
                   C92078) /
                  (p * q * std::sqrt(p + q));
    d2eeyx[31] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C45029 * C107 + C92348 * C308 + C45030 * C805 +
                        C92349 * C1022 + C45031 * C806 + C44804 * C1023) *
                           C801 +
                       (C45029 * C117 + C92348 * C314 + C45030 * C813 +
                        C92349 * C1030 + C45031 * C822 + C44804 * C1031) *
                           C92078) *
                          C92323 +
                      ((C57733 + C57734 + C57735) * C801 +
                       (C57736 + C57737 + C57738) * C92078) *
                          C92212) *
                         C92062 * C2709 -
                     (((C57739 + C57740 + C57741) * C92078 +
                       (C57742 + C57743 + C57744) * C801) *
                          C92212 +
                      ((C57738 + C57737 + C57736) * C92078 +
                       (C57735 + C57734 + C57733) * C801) *
                          C92323) *
                         C92062 * C2710) *
                        C1985 +
                    ((((C60348 + C60349 + C60350) * C801 +
                       (C60351 + C60352 + C60353) * C92078) *
                          C92323 +
                      ((C45029 * C5773 + C92348 * C6043 + C45030 * C5775 +
                        C92349 * C6044 + C45031 * C37227 + C44804 * C37385) *
                           C801 +
                       (C45029 * C5783 + C92348 * C6049 + C45030 * C5787 +
                        C92349 * C6050 + C45031 * C37229 + C44804 * C37386) *
                           C92078) *
                          C92212) *
                         C92062 * C2710 -
                     (((C60353 + C60352 + C60351) * C92078 +
                       (C60350 + C60349 + C60348) * C801) *
                          C92212 +
                      ((C45031 * C4886 + C44804 * C5222 + C45030 * C822 +
                        C92349 * C1031 + C45029 * C813 + C92348 * C1030) *
                           C92078 +
                       (C45031 * C4882 + C44804 * C5218 + C45030 * C806 +
                        C92349 * C1023 + C45029 * C805 + C92348 * C1022) *
                           C801) *
                          C92323) *
                         C92062 * C2709) *
                        C1986)) /
                  (p * q * std::sqrt(p + q));
    d2eeyy[31] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C45029 * C107 + C92348 * C308 + C45030 * C805 +
                       C92349 * C1022 + C45031 * C806 + C44804 * C1023) *
                          C2059 +
                      (C45029 * C182 + C92348 * C394 + C45030 * C890 +
                       C92349 * C1085 + C45031 * C891 + C44804 * C1086) *
                          C1985 -
                      (C45031 * C4882 + C44804 * C5218 + C45030 * C806 +
                       C92349 * C1023 + C45029 * C805 + C92348 * C1022) *
                          C2060 -
                      (C45031 * C5012 + C44804 * C5299 + C45030 * C891 +
                       C92349 * C1086 + C45029 * C890 + C92348 * C1085) *
                          C1986) *
                         C92323 +
                     ((C57733 + C57734 + C57735) * C2059 +
                      (C57831 + C57832 + C57833) * C1985 -
                      (C60350 + C60349 + C60348) * C2060 -
                      (C60458 + C60459 + C60460) * C1986) *
                         C92212) *
                        C92062 * C92078 * C2709 +
                    (((C60348 + C60349 + C60350) * C2060 -
                      ((C57833 + C57832 + C57831) * C1985 +
                       (C57735 + C57734 + C57733) * C2059) +
                      (C60460 + C60459 + C60458) * C1986) *
                         C92323 +
                     ((C45029 * C5773 + C92348 * C6043 + C45030 * C5775 +
                       C92349 * C6044 + C45031 * C37227 + C44804 * C37385) *
                          C2060 -
                      ((C57834 + C57835 + C57836) * C1985 +
                       (C57742 + C57743 + C57744) * C2059) +
                      (C45029 * C5871 + C92348 * C6129 + C45030 * C5873 +
                       C92349 * C6130 + C45031 * C37281 + C44804 * C37437) *
                          C1986) *
                         C92212) *
                        C92062 * C92078 * C2710)) /
                  (p * q * std::sqrt(p + q));
    d2eeyz[31] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C45029 * C107 + C92348 * C308 + C45030 * C805 +
                       C92349 * C1022 + C45031 * C806 + C44804 * C1023) *
                          C2849 +
                      (C45029 * C245 + C92348 * C474 + C45030 * C956 +
                       C92349 * C1146 + C45031 * C957 + C44804 * C1147) *
                          C2709 -
                      (C57735 + C57734 + C57733) * C2850 -
                      (C57923 + C57924 + C57925) * C2710) *
                         C92323 +
                     ((C57733 + C57734 + C57735) * C2849 +
                      (C57925 + C57924 + C57923) * C2709 -
                      (C57742 + C57743 + C57744) * C2850 -
                      (C57928 + C57927 + C57926) * C2710) *
                         C92212) *
                        C92062 * C1985 +
                    (((C60348 + C60349 + C60350) * C2850 -
                      ((C45031 * C5114 + C44804 * C5378 + C45030 * C957 +
                        C92349 * C1147 + C45029 * C956 + C92348 * C1146) *
                           C2709 +
                       (C45031 * C4882 + C44804 * C5218 + C45030 * C806 +
                        C92349 * C1023 + C45029 * C805 + C92348 * C1022) *
                           C2849) +
                      (C60565 + C60566 + C60567) * C2710) *
                         C92323 +
                     ((C45029 * C5773 + C92348 * C6043 + C45030 * C5775 +
                       C92349 * C6044 + C45031 * C37227 + C44804 * C37385) *
                          C2850 -
                      ((C60567 + C60566 + C60565) * C2709 +
                       (C60350 + C60349 + C60348) * C2849) +
                      (C45029 * C5955 + C92348 * C6208 + C45030 * C5959 +
                       C92349 * C6209 + C45031 * C37333 + C44804 * C37488) *
                          C2710) *
                         C92212) *
                        C92062 * C1986) *
                   C92078) /
                  (p * q * std::sqrt(p + q));
    d2eezx[31] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C20274 * C107 + C92323 * C555 + C20275 * C1389 + C92212 * C1788) *
                 C801 +
             (C20274 * C117 + C92323 * C561 + C20275 * C1397 + C92212 * C1796) *
                 C92078) *
                C92062 * C92348 +
            ((C26314 + C26315) * C801 + (C26316 + C26317) * C92078) * C92062 *
                C92349 +
            C57242 * C44804) *
               C2709 -
           (((C60674 + C60675) * C92078 + (C60676 + C60677) * C801) * C92062 *
                C44804 +
            ((C30908 + C30909) * C92078 + (C30910 + C30911) * C801) * C92062 *
                C92349 +
            ((C20275 * C1406 + C92212 * C1797 + C20274 * C1397 +
              C92323 * C1796) *
                 C92078 +
             (C20275 * C1390 + C92212 * C1789 + C20274 * C1389 +
              C92323 * C1788) *
                 C801) *
                C92062 * C92348) *
               C2710) *
              C1985 +
          ((((C30911 + C30910) * C801 + (C30909 + C30908) * C92078) * C92062 *
                C92348 +
            ((C60677 + C60676) * C801 + (C60675 + C60674) * C92078) * C92062 *
                C92349 +
            ((C20274 * C8536 + C92323 * C9196 + C20275 * C37227 +
              C92212 * C37539) *
                 C801 +
             (C20274 * C8540 + C92323 * C9198 + C20275 * C37229 +
              C92212 * C37540) *
                 C92078) *
                C92062 * C44804) *
               C2710 -
           (((C57237 + C57238) * C92078 + (C57239 + C57240) * C801) * C92062 *
                C44804 +
            ((C26322 + C26323) * C92078 + (C26324 + C26325) * C801) * C92062 *
                C92349 +
            ((C26317 + C26316) * C92078 + (C26315 + C26314) * C801) * C92062 *
                C92348) *
               C2709) *
              C1986)) /
        (p * q * std::sqrt(p + q));
    d2eezy[31] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C20274 * C107 + C92323 * C555 + C20275 * C1389 + C92212 * C1788) *
                C2059 +
            (C20274 * C182 + C92323 * C641 + C20275 * C1471 + C92212 * C1854) *
                C1985 -
            (C26315 + C26314) * C2060 - (C26436 + C26437) * C1986) *
               C92062 * C92348 +
           ((C26314 + C26315) * C2059 + (C26437 + C26436) * C1985 -
            (C26324 + C26325) * C2060 - (C26439 + C26438) * C1986) *
               C92062 * C92349 +
           (C57225 * C2059 + C57317 * C1985 - (C57239 + C57240) * C2060 -
            (C57323 + C57322) * C1986) *
               C92062 * C44804) *
              C92078 * C2709 +
          (((C30911 + C30910) * C2060 -
            ((C20275 * C1472 + C92212 * C1855 + C20274 * C1471 +
              C92323 * C1854) *
                 C1985 +
             (C20275 * C1390 + C92212 * C1789 + C20274 * C1389 +
              C92323 * C1788) *
                 C2059) +
            (C31046 + C31047) * C1986) *
               C92062 * C92348 +
           ((C60677 + C60676) * C2060 -
            ((C31047 + C31046) * C1985 + (C30910 + C30911) * C2059) +
            (C60780 + C60781) * C1986) *
               C92062 * C92349 +
           ((C20274 * C8536 + C92323 * C9196 + C20275 * C37227 +
             C92212 * C37539) *
                C2060 -
            ((C60781 + C60780) * C1985 + (C60676 + C60677) * C2059) +
            (C20274 * C8666 + C92323 * C9318 + C20275 * C37281 +
             C92212 * C37591) *
                C1986) *
               C92062 * C44804) *
              C92078 * C2710)) /
        (p * q * std::sqrt(p + q));
    d2eezz[31] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C20274 * C107 + C92323 * C555 + C20275 * C1389 + C92212 * C1788) *
                C2849 +
            (C20274 * C245 + C92323 * C719 + C20275 * C1540 + C92212 * C1909) *
                C2709 -
            (C20275 * C1390 + C92212 * C1789 + C20274 * C1389 +
             C92323 * C1788) *
                C2850 -
            (C20275 * C1541 + C92212 * C1910 + C20274 * C1540 +
             C92323 * C1909) *
                C2710) *
               C92062 * C92348 +
           ((C26314 + C26315) * C2849 + (C26552 + C26553) * C2709 -
            (C30910 + C30911) * C2850 - (C31182 + C31183) * C2710) *
               C92062 * C92349 +
           (C57225 * C2849 + C57399 * C2709 - (C60676 + C60677) * C2850 -
            (C60884 + C60885) * C2710) *
               C92062 * C44804) *
              C1985 +
          (((C30911 + C30910) * C2850 -
            ((C26553 + C26552) * C2709 + (C26315 + C26314) * C2849) +
            (C31183 + C31182) * C2710) *
               C92062 * C92348 +
           ((C60677 + C60676) * C2850 -
            ((C26556 + C26557) * C2709 + (C26324 + C26325) * C2849) +
            (C60885 + C60884) * C2710) *
               C92062 * C92349 +
           ((C20274 * C8536 + C92323 * C9196 + C20275 * C37227 +
             C92212 * C37539) *
                C2850 -
            ((C57405 + C57406) * C2709 + (C57239 + C57240) * C2849) +
            (C20274 * C8780 + C92323 * C9424 + C20275 * C37333 +
             C92212 * C37642) *
                C2710) *
               C92062 * C44804) *
              C1986) *
         C92078) /
        (p * q * std::sqrt(p + q));
    d2eexx[32] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C36216 * C107 + C92062 * C113) * C801 +
             (C36216 * C117 + C92062 * C125) * C92078) *
                C92348 +
            (C36700 + C36701) * C92349 + C36708 * C44804) *
               C92323 +
           ((C41116 + C41117) * C92348 + C43820 * C92349 + C56777 * C44804) *
               C92212) *
              C92110 * C798 -
          (((C38978 + C38979) * C44804 + (C38980 + C38981) * C92349 +
            C43822 * C92348) *
               C92212 +
           ((C36705 + C36704) * C44804 + (C36703 + C36702) * C92349 +
            (C36701 + C36700) * C92348) *
               C92323) *
              C92110 * C799 +
          ((C36708 * C92348 + C36709 * C92349 + (C36707 + C36706) * C44804) *
               C92323 +
           (C56777 * C92348 + (C38979 + C38978) * C92349 +
            ((C36216 * C38955 + C92062 * C38956) * C801 +
             (C36216 * C38957 + C92062 * C38958) * C92078) *
                C44804) *
               C92212) *
              C92110 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C36216 * C107 + C92062 * C113) * C104 +
            (C36216 * C117 + C92062 * C125) * C93 -
            (C36216 * C108 + C92062 * C114) * C105 -
            (C36216 * C118 + C92062 * C126) * C94 +
            (C36216 * C109 + C92062 * C115) * C106 +
            (C36216 * C119 + C92062 * C127) * C95) *
               C92348 +
           (C36692 * C104 + C36693 * C93 - C37728 * C105 - C37729 * C94 +
            (C36216 * C803 + C92062 * C815) * C106 +
            (C36216 * C811 + C92062 * C827) * C95) *
               C92349 +
           (C36694 * C104 + C36695 * C93 - C37730 * C105 - C37731 * C94 +
            (C36216 * C808 + C92062 * C820) * C106 +
            (C36216 * C824 + C92062 * C832) * C95) *
               C44804) *
              C92323 +
          ((C41107 * C104 + C41108 * C93 - C42882 * C105 - C42883 * C94 +
            (C36216 * C1387 + C92062 * C1399) * C106 +
            (C36216 * C1395 + C92062 * C1411) * C95) *
               C92348 +
           (C38977 * C104 + C38976 * C93 - C41964 * C105 - C41965 * C94 +
            (C36216 * C3433 + C92062 * C3437) * C106 +
            (C36216 * C3441 + C92062 * C3445) * C95) *
               C92349 +
           (C38975 * C104 + C38974 * C93 -
            (C36216 * C5771 + C92062 * C5779) * C105 -
            (C36216 * C5777 + C92062 * C5789) * C94 +
            (C36216 * C7566 + C92062 * C7567) * C106 +
            (C36216 * C7568 + C92062 * C7569) * C95) *
               C44804) *
              C92212) *
         C92110 * C92099) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C36216 * C107 + C92062 * C113) * C801 +
             (C36216 * C117 + C92062 * C125) * C92078) *
                C92348 +
            (C36700 + C36701) * C92349 + C36708 * C44804) *
               C92323 +
           ((C41116 + C41117) * C92348 + C43820 * C92349 + C56777 * C44804) *
               C92212) *
              C1383 -
          (((C40326 + C40327) * C44804 + C43821 * C92349 +
            (C41119 + C41118) * C92348) *
               C92212 +
           ((C38980 + C38981) * C44804 + C43822 * C92349 +
            (C41117 + C41116) * C92348) *
               C92323) *
              C1384 +
          ((C41124 * C92348 + C41098 * C92349 + (C40327 + C40326) * C44804) *
               C92323 +
           ((C41123 + C41122) * C92348 + (C41121 + C41120) * C92349 +
            ((C36216 * C43815 + C92062 * C43816) * C801 +
             (C36216 * C43817 + C92062 * C43818) * C92078) *
                C44804) *
               C92212) *
              C1385) *
         C92099) /
            (p * q * std::sqrt(p + q));
    d2eexy[32] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C36216 * C107 + C92062 * C113) * C884 +
            (C36216 * C182 + C92062 * C188) * C798 - C36692 * C885 -
            C36770 * C799 + C36694 * C886 + C36771 * C800) *
               C92348 +
           (C36692 * C884 + C36770 * C798 - C36694 * C885 - C36771 * C799 +
            C36696 * C886 + C36772 * C800) *
               C92349 +
           (C36694 * C884 + C36771 * C798 - C36696 * C885 - C36772 * C799 +
            C36699 * C886 + C36773 * C800) *
               C44804) *
              C92323 +
          ((C41107 * C884 + C41219 * C798 - C38977 * C885 - C39058 * C799 +
            C38975 * C886 + C39059 * C800) *
               C92348 +
           (C38977 * C884 + C39058 * C798 - C38975 * C885 - C39059 * C799 +
            C38973 * C886 + C39060 * C800) *
               C92349 +
           (C38975 * C884 + C39059 * C798 - C38973 * C885 - C39060 * C799 +
            (C36216 * C38955 + C92062 * C38956) * C886 +
            (C36216 * C39049 + C92062 * C39050) * C800) *
               C44804) *
              C92212) *
         C92078 * C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C36216 * C107 + C92062 * C113) * C181 +
             (C36216 * C182 + C92062 * C188) * C92099) *
                C92348 +
            (C36692 * C181 + C36770 * C92099) * C92349 +
            (C36694 * C181 + C36771 * C92099) * C44804) *
               C92323 +
           ((C41203 + C41224) * C92348 + (C41206 + C41207) * C92349 +
            (C38975 * C181 + C39059 * C92099) * C44804) *
               C92212) *
              C93 -
          ((((C36216 * C5869 + C92062 * C5875) * C92099 +
             (C36216 * C5771 + C92062 * C5779) * C181) *
                C44804 +
            (C42993 + C42994) * C92349 + (C43001 + C42997) * C92348) *
               C92212 +
           ((C37813 * C92099 + C37730 * C181) * C44804 +
            (C37812 * C92099 + C37728 * C181) * C92349 +
            ((C36216 * C183 + C92062 * C189) * C92099 +
             (C36216 * C108 + C92062 * C114) * C181) *
                C92348) *
               C92323) *
              C94 +
          ((((C36216 * C109 + C92062 * C115) * C181 +
             (C36216 * C184 + C92062 * C190) * C92099) *
                C92348 +
            ((C36216 * C803 + C92062 * C815) * C181 +
             (C36216 * C888 + C92062 * C896) * C92099) *
                C92349 +
            ((C36216 * C808 + C92062 * C820) * C181 +
             (C36216 * C893 + C92062 * C901) * C92099) *
                C44804) *
               C92323 +
           (((C36216 * C1387 + C92062 * C1399) * C181 +
             (C36216 * C1469 + C92062 * C1477) * C92099) *
                C92348 +
            ((C36216 * C3433 + C92062 * C3437) * C181 +
             (C36216 * C3515 + C92062 * C3519) * C92099) *
                C92349 +
            ((C36216 * C7566 + C92062 * C7567) * C181 +
             (C36216 * C7668 + C92062 * C7669) * C92099) *
                C44804) *
               C92212) *
              C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C36216 * C107 + C92062 * C113) * C181 +
             (C36216 * C182 + C92062 * C188) * C92099) *
                C92348 +
            (C36692 * C181 + C36770 * C92099) * C92349 +
            (C36694 * C181 + C36771 * C92099) * C44804) *
               C92323 +
           ((C41203 + C41224) * C92348 + (C41206 + C41207) * C92349 +
            (C57557 + C57558) * C44804) *
               C92212) *
              C92078 * C1383 -
          (((C57559 + C57560) * C44804 + (C41212 + C41211) * C92349 +
            (C41225 + C41208) * C92348) *
               C92212 +
           ((C57558 + C57557) * C44804 + (C41207 + C41206) * C92349 +
            (C41224 + C41203) * C92348) *
               C92323) *
              C92078 * C1384 +
          ((C41229 * C92348 + C41221 * C92349 + (C57560 + C57559) * C44804) *
               C92323 +
           ((C41218 + C41228) * C92348 + (C41215 + C41227) * C92349 +
            ((C36216 * C43815 + C92062 * C43816) * C181 +
             (C36216 * C43920 + C92062 * C43921) * C92099) *
                C44804) *
               C92212) *
              C92078 * C1385)) /
            (p * q * std::sqrt(p + q));
    d2eexz[32] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C36216 * C107 + C92062 * C113) * C244 +
             (C36216 * C245 + C92062 * C251) * C92110) *
                C92348 +
            (C36826 + C36842) * C92349 + C36846 * C44804) *
               C92323 +
           ((C41107 * C244 + C41316 * C92110) * C92348 +
            (C40482 + C40483) * C92349 + C56926 * C44804) *
               C92212) *
              C798 -
          (((C56927 + C56928) * C44804 + (C40490 + C40491) * C92349 +
            (C40483 + C40482) * C92348) *
               C92212 +
           ((C36844 + C36832) * C44804 + (C36843 + C36829) * C92349 +
            (C36842 + C36826) * C92348) *
               C92323) *
              C799 +
          ((C36846 * C92348 + C36847 * C92349 + (C36837 + C36845) * C44804) *
               C92323 +
           (C56926 * C92348 + (C56928 + C56927) * C92349 +
            ((C36216 * C38955 + C92062 * C38956) * C244 +
             (C36216 * C39126 + C92062 * C39127) * C92110) *
                C44804) *
               C92212) *
              C800) *
         C92078) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C36216 * C107 + C92062 * C113) * C244 +
             (C36216 * C245 + C92062 * C251) * C92110) *
                C92348 +
            (C36826 + C36842) * C92349 + C36846 * C44804) *
               C92323 +
           ((C41107 * C244 + C41316 * C92110) * C92348 +
            (C40482 + C40483) * C92349 + (C40491 + C40490) * C44804) *
               C92212) *
              C92099 * C93 -
          ((((C36216 * C5957 + C92062 * C5963) * C92110 +
             (C36216 * C5771 + C92062 * C5779) * C244) *
                C44804 +
            (C42182 + C42174) * C92349 +
            (C43104 * C92110 + C42882 * C244) * C92348) *
               C92212 +
           ((C37894 + C37884) * C44804 + (C37893 + C37881) * C92349 +
            ((C36216 * C246 + C92062 * C252) * C92110 +
             (C36216 * C108 + C92062 * C114) * C244) *
                C92348) *
               C92323) *
              C92099 * C94 +
          ((((C36216 * C109 + C92062 * C115) * C244 +
             (C36216 * C247 + C92062 * C253) * C92110) *
                C92348 +
            ((C36216 * C803 + C92062 * C815) * C244 +
             (C36216 * C954 + C92062 * C962) * C92110) *
                C92349 +
            ((C36216 * C808 + C92062 * C820) * C244 +
             (C36216 * C959 + C92062 * C967) * C92110) *
                C44804) *
               C92323 +
           (((C36216 * C1387 + C92062 * C1399) * C244 +
             (C36216 * C1538 + C92062 * C1546) * C92110) *
                C92348 +
            ((C36216 * C3433 + C92062 * C3437) * C244 +
             (C36216 * C3589 + C92062 * C3593) * C92110) *
                C92349 +
            ((C36216 * C7566 + C92062 * C7567) * C244 +
             (C36216 * C7768 + C92062 * C7769) * C92110) *
                C44804) *
               C92212) *
              C92099 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C36216 * C107 + C92062 * C113) * C1534 +
            (C36216 * C245 + C92062 * C251) * C1383 - C41107 * C1535 -
            C41316 * C1384 + C41109 * C1536 + C41317 * C1385) *
               C92348 +
           (C36692 * C1534 + C36838 * C1383 - C38977 * C1535 - C39144 * C1384 +
            C40320 * C1536 + C40492 * C1385) *
               C92349 +
           (C36694 * C1534 + C36839 * C1383 - C38975 * C1535 - C39145 * C1384 +
            C40323 * C1536 + C40493 * C1385) *
               C44804) *
              C92323 +
          ((C41107 * C1534 + C41316 * C1383 - C41109 * C1535 - C41317 * C1384 +
            C41115 * C1536 + C41318 * C1385) *
               C92348 +
           (C38977 * C1534 + C39144 * C1383 - C40320 * C1535 - C40492 * C1384 +
            C41113 * C1536 + C41319 * C1385) *
               C92349 +
           (C38975 * C1534 + C39145 * C1383 - C40323 * C1535 - C40493 * C1384 +
            (C36216 * C43815 + C92062 * C43816) * C1536 +
            (C36216 * C44036 + C92062 * C44037) * C1385) *
               C44804) *
              C92212) *
         C92099 * C92078) /
            (p * q * std::sqrt(p + q));
    d2eeyx[32] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C45029 * C107 + C92348 * C308 + C45030 * C805 +
                       C92349 * C1022 + C45031 * C806 + C44804 * C1023) *
                          C801 +
                      (C45029 * C117 + C92348 * C314 + C45030 * C813 +
                       C92349 * C1030 + C45031 * C822 + C44804 * C1031) *
                          C92078) *
                         C92323 +
                     ((C45029 * C1389 + C92348 * C1606 + C45030 * C3431 +
                       C92349 * C3661 + C45031 * C5772 + C44804 * C6042) *
                          C801 +
                      (C45029 * C1397 + C92348 * C1614 + C45030 * C3439 +
                       C92349 * C3665 + C45031 * C5778 + C44804 * C6048) *
                          C92078) *
                         C92212) *
                        C92062 * C92110 * C798 -
                    (((C45031 * C8540 + C44804 * C8896 + C45030 * C5778 +
                       C92349 * C6048 + C45029 * C3439 + C92348 * C3665) *
                          C92078 +
                      (C45031 * C8536 + C44804 * C8894 + C45030 * C5772 +
                       C92349 * C6042 + C45029 * C3431 + C92348 * C3661) *
                          C801) *
                         C92212 +
                     ((C45031 * C4886 + C44804 * C5222 + C45030 * C822 +
                       C92349 * C1031 + C45029 * C813 + C92348 * C1030) *
                          C92078 +
                      (C45031 * C4882 + C44804 * C5218 + C45030 * C806 +
                       C92349 * C1023 + C45029 * C805 + C92348 * C1022) *
                          C801) *
                         C92323) *
                        C92062 * C92110 * C799 +
                    (((C45029 * C806 + C92348 * C1023 + C45030 * C4882 +
                       C92349 * C5218 + C45031 * C4883 + C44804 * C5219) *
                          C801 +
                      (C45029 * C822 + C92348 * C1031 + C45030 * C4886 +
                       C92349 * C5222 + C45031 * C4891 + C44804 * C5223) *
                          C92078) *
                         C92323 +
                     ((C45029 * C5772 + C92348 * C6042 + C45030 * C8536 +
                       C92349 * C8894 + C45031 * C38955 + C44804 * C39215) *
                          C801 +
                      (C45029 * C5778 + C92348 * C6048 + C45030 * C8540 +
                       C92349 * C8896 + C45031 * C38957 + C44804 * C39216) *
                          C92078) *
                         C92212) *
                        C92062 * C92110 * C800)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C45029 * C107 + C92348 * C308 + C45030 * C805 +
                      C92349 * C1022 + C45031 * C806 + C44804 * C1023) *
                         C104 +
                     (C45029 * C117 + C92348 * C314 + C45030 * C813 +
                      C92349 * C1030 + C45031 * C822 + C44804 * C1031) *
                         C93 -
                     (C45057 + C45058 + C45059) * C105 -
                     (C45060 + C45061 + C45062) * C94 +
                     (C45063 + C45064 + C45065) * C106 +
                     (C45066 + C45067 + C45068) * C95) *
                        C92323 +
                    ((C45029 * C1389 + C92348 * C1606 + C45030 * C3431 +
                      C92349 * C3661 + C45031 * C5772 + C44804 * C6042) *
                         C104 +
                     (C45029 * C1397 + C92348 * C1614 + C45030 * C3439 +
                      C92349 * C3665 + C45031 * C5778 + C44804 * C6048) *
                         C93 -
                     (C48267 + C48266 + C48265) * C105 -
                     (C48270 + C48269 + C48268) * C94 +
                     (C45029 * C1387 + C92348 * C1604 + C45030 * C3433 +
                      C92349 * C3663 + C45031 * C7566 + C44804 * C7868) *
                         C106 +
                     (C45029 * C1395 + C92348 * C1612 + C45030 * C3441 +
                      C92349 * C3667 + C45031 * C7568 + C44804 * C7869) *
                         C95) *
                        C92212) *
                   C92062 * C92110 * C92099) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C45029 * C107 + C92348 * C308 + C45030 * C805 +
                       C92349 * C1022 + C45031 * C806 + C44804 * C1023) *
                          C801 +
                      (C45029 * C117 + C92348 * C314 + C45030 * C813 +
                       C92349 * C1030 + C45031 * C822 + C44804 * C1031) *
                          C92078) *
                         C92323 +
                     ((C57733 + C57734 + C57735) * C801 +
                      (C57736 + C57737 + C57738) * C92078) *
                         C92212) *
                        C92062 * C1383 -
                    (((C57739 + C57740 + C57741) * C92078 +
                      (C57742 + C57743 + C57744) * C801) *
                         C92212 +
                     ((C57738 + C57737 + C57736) * C92078 +
                      (C57735 + C57734 + C57733) * C801) *
                         C92323) *
                        C92062 * C1384 +
                    (((C57744 + C57743 + C57742) * C801 +
                      (C57741 + C57740 + C57739) * C92078) *
                         C92323 +
                     ((C45029 * C10961 + C92348 * C11299 + C45030 * C13849 +
                       C92349 * C14183 + C45031 * C43815 + C44804 * C44144) *
                          C801 +
                      (C45029 * C10965 + C92348 * C11303 + C45030 * C13853 +
                       C92349 * C14185 + C45031 * C43817 + C44804 * C44145) *
                          C92078) *
                         C92212) *
                        C92062 * C1385) *
                   C92099) /
                      (p * q * std::sqrt(p + q));
    d2eeyy[32] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C45029 * C107 + C92348 * C308 + C45030 * C805 +
                      C92349 * C1022 + C45031 * C806 + C44804 * C1023) *
                         C884 +
                     (C45029 * C182 + C92348 * C394 + C45030 * C890 +
                      C92349 * C1085 + C45031 * C891 + C44804 * C1086) *
                         C798 -
                     (C45031 * C4882 + C44804 * C5218 + C45030 * C806 +
                      C92349 * C1023 + C45029 * C805 + C92348 * C1022) *
                         C885 -
                     (C45031 * C5012 + C44804 * C5299 + C45030 * C891 +
                      C92349 * C1086 + C45029 * C890 + C92348 * C1085) *
                         C799 +
                     (C45029 * C806 + C92348 * C1023 + C45030 * C4882 +
                      C92349 * C5218 + C45031 * C4883 + C44804 * C5219) *
                         C886 +
                     (C45029 * C891 + C92348 * C1086 + C45030 * C5012 +
                      C92349 * C5299 + C45031 * C5014 + C44804 * C5300) *
                         C800) *
                        C92323 +
                    ((C45029 * C1389 + C92348 * C1606 + C45030 * C3431 +
                      C92349 * C3661 + C45031 * C5772 + C44804 * C6042) *
                         C884 +
                     (C45029 * C1471 + C92348 * C1672 + C45030 * C3513 +
                      C92349 * C3735 + C45031 * C5870 + C44804 * C6128) *
                         C798 -
                     (C45031 * C8536 + C44804 * C8894 + C45030 * C5772 +
                      C92349 * C6042 + C45029 * C3431 + C92348 * C3661) *
                         C885 -
                     (C45031 * C8666 + C44804 * C8996 + C45030 * C5870 +
                      C92349 * C6128 + C45029 * C3513 + C92348 * C3735) *
                         C799 +
                     (C45029 * C5772 + C92348 * C6042 + C45030 * C8536 +
                      C92349 * C8894 + C45031 * C38955 + C44804 * C39215) *
                         C886 +
                     (C45029 * C5870 + C92348 * C6128 + C45030 * C8666 +
                      C92349 * C8996 + C45031 * C39049 + C44804 * C39283) *
                         C800) *
                        C92212) *
                   C92062 * C92078 * C92110) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C45029 * C107 + C92348 * C308 + C45030 * C805 +
                       C92349 * C1022 + C45031 * C806 + C44804 * C1023) *
                          C181 +
                      (C45029 * C182 + C92348 * C394 + C45030 * C890 +
                       C92349 * C1085 + C45031 * C891 + C44804 * C1086) *
                          C92099) *
                         C92323 +
                     ((C45029 * C1389 + C92348 * C1606 + C45030 * C3431 +
                       C92349 * C3661 + C45031 * C5772 + C44804 * C6042) *
                          C181 +
                      (C45029 * C1471 + C92348 * C1672 + C45030 * C3513 +
                       C92349 * C3735 + C45031 * C5870 + C44804 * C6128) *
                          C92099) *
                         C92212) *
                        C92062 * C93 -
                    (((C48377 + C48376 + C48375) * C92099 +
                      (C48267 + C48266 + C48265) * C181) *
                         C92212 +
                     ((C45157 + C45156 + C45155) * C92099 +
                      (C45057 + C45058 + C45059) * C181) *
                         C92323) *
                        C92062 * C94 +
                    (((C45063 + C45064 + C45065) * C181 +
                      (C45160 + C45159 + C45158) * C92099) *
                         C92323 +
                     ((C45029 * C1387 + C92348 * C1604 + C45030 * C3433 +
                       C92349 * C3663 + C45031 * C7566 + C44804 * C7868) *
                          C181 +
                      (C45029 * C1469 + C92348 * C1670 + C45030 * C3515 +
                       C92349 * C3737 + C45031 * C7668 + C44804 * C7986) *
                          C92099) *
                         C92212) *
                        C92062 * C95) *
                   C92110) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C45029 * C107 + C92348 * C308 + C45030 * C805 +
                       C92349 * C1022 + C45031 * C806 + C44804 * C1023) *
                          C181 +
                      (C45029 * C182 + C92348 * C394 + C45030 * C890 +
                       C92349 * C1085 + C45031 * C891 + C44804 * C1086) *
                          C92099) *
                         C92323 +
                     ((C57733 + C57734 + C57735) * C181 +
                      (C57831 + C57832 + C57833) * C92099) *
                         C92212) *
                        C92062 * C92078 * C1383 -
                    (((C57834 + C57835 + C57836) * C92099 +
                      (C57742 + C57743 + C57744) * C181) *
                         C92212 +
                     ((C57833 + C57832 + C57831) * C92099 +
                      (C57735 + C57734 + C57733) * C181) *
                         C92323) *
                        C92062 * C92078 * C1384 +
                    (((C57744 + C57743 + C57742) * C181 +
                      (C57836 + C57835 + C57834) * C92099) *
                         C92323 +
                     ((C45029 * C10961 + C92348 * C11299 + C45030 * C13849 +
                       C92349 * C14183 + C45031 * C43815 + C44804 * C44144) *
                          C181 +
                      (C45029 * C11093 + C92348 * C11419 + C45030 * C13967 +
                       C92349 * C14305 + C45031 * C43920 + C44804 * C44268) *
                          C92099) *
                         C92212) *
                        C92062 * C92078 * C1385)) /
                      (p * q * std::sqrt(p + q));
    d2eeyz[32] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C45029 * C107 + C92348 * C308 + C45030 * C805 +
                       C92349 * C1022 + C45031 * C806 + C44804 * C1023) *
                          C244 +
                      (C45029 * C245 + C92348 * C474 + C45030 * C956 +
                       C92349 * C1146 + C45031 * C957 + C44804 * C1147) *
                          C92110) *
                         C92323 +
                     ((C45029 * C1389 + C92348 * C1606 + C45030 * C3431 +
                       C92349 * C3661 + C45031 * C5772 + C44804 * C6042) *
                          C244 +
                      (C45029 * C1540 + C92348 * C1727 + C45030 * C3587 +
                       C92349 * C3805 + C45031 * C5958 + C44804 * C6207) *
                          C92110) *
                         C92212) *
                        C92062 * C798 -
                    (((C45031 * C8780 + C44804 * C9096 + C45030 * C5958 +
                       C92349 * C6207 + C45029 * C3587 + C92348 * C3805) *
                          C92110 +
                      (C45031 * C8536 + C44804 * C8894 + C45030 * C5772 +
                       C92349 * C6042 + C45029 * C3431 + C92348 * C3661) *
                          C244) *
                         C92212 +
                     ((C45031 * C5114 + C44804 * C5378 + C45030 * C957 +
                       C92349 * C1147 + C45029 * C956 + C92348 * C1146) *
                          C92110 +
                      (C45031 * C4882 + C44804 * C5218 + C45030 * C806 +
                       C92349 * C1023 + C45029 * C805 + C92348 * C1022) *
                          C244) *
                         C92323) *
                        C92062 * C799 +
                    (((C45029 * C806 + C92348 * C1023 + C45030 * C4882 +
                       C92349 * C5218 + C45031 * C4883 + C44804 * C5219) *
                          C244 +
                      (C45029 * C957 + C92348 * C1147 + C45030 * C5114 +
                       C92349 * C5378 + C45031 * C5115 + C44804 * C5379) *
                          C92110) *
                         C92323 +
                     ((C45029 * C5772 + C92348 * C6042 + C45030 * C8536 +
                       C92349 * C8894 + C45031 * C38955 + C44804 * C39215) *
                          C244 +
                      (C45029 * C5958 + C92348 * C6207 + C45030 * C8780 +
                       C92349 * C9096 + C45031 * C39126 + C44804 * C39350) *
                          C92110) *
                         C92212) *
                        C92062 * C800) *
                   C92078) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C45029 * C107 + C92348 * C308 + C45030 * C805 +
                       C92349 * C1022 + C45031 * C806 + C44804 * C1023) *
                          C244 +
                      (C45029 * C245 + C92348 * C474 + C45030 * C956 +
                       C92349 * C1146 + C45031 * C957 + C44804 * C1147) *
                          C92110) *
                         C92323 +
                     ((C45029 * C1389 + C92348 * C1606 + C45030 * C3431 +
                       C92349 * C3661 + C45031 * C5772 + C44804 * C6042) *
                          C244 +
                      (C45029 * C1540 + C92348 * C1727 + C45030 * C3587 +
                       C92349 * C3805 + C45031 * C5958 + C44804 * C6207) *
                          C92110) *
                         C92212) *
                        C92062 * C92099 * C93 -
                    (((C48482 + C48483 + C48484) * C92110 +
                      (C48267 + C48266 + C48265) * C244) *
                         C92212 +
                     ((C45249 + C45248 + C45247) * C92110 +
                      (C45057 + C45058 + C45059) * C244) *
                         C92323) *
                        C92062 * C92099 * C94 +
                    (((C45063 + C45064 + C45065) * C244 +
                      (C45252 + C45251 + C45250) * C92110) *
                         C92323 +
                     ((C45029 * C1387 + C92348 * C1604 + C45030 * C3433 +
                       C92349 * C3663 + C45031 * C7566 + C44804 * C7868) *
                          C244 +
                      (C45029 * C1538 + C92348 * C1731 + C45030 * C3589 +
                       C92349 * C3807 + C45031 * C7768 + C44804 * C8094) *
                          C92110) *
                         C92212) *
                        C92062 * C92099 * C95)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((C45029 * C107 + C92348 * C308 + C45030 * C805 +
                      C92349 * C1022 + C45031 * C806 + C44804 * C1023) *
                         C1534 +
                     (C45029 * C245 + C92348 * C474 + C45030 * C956 +
                      C92349 * C1146 + C45031 * C957 + C44804 * C1147) *
                         C1383 -
                     (C57735 + C57734 + C57733) * C1535 -
                     (C57923 + C57924 + C57925) * C1384 +
                     (C57744 + C57743 + C57742) * C1536 +
                     (C57926 + C57927 + C57928) * C1385) *
                        C92323 +
                    ((C57733 + C57734 + C57735) * C1534 +
                     (C57925 + C57924 + C57923) * C1383 -
                     (C57742 + C57743 + C57744) * C1535 -
                     (C57928 + C57927 + C57926) * C1384 +
                     (C45029 * C10961 + C92348 * C11299 + C45030 * C13849 +
                      C92349 * C14183 + C45031 * C43815 + C44804 * C44144) *
                         C1536 +
                     (C45029 * C11197 + C92348 * C11518 + C45030 * C14075 +
                      C92349 * C14419 + C45031 * C44036 + C44804 * C44379) *
                         C1385) *
                        C92212) *
                   C92062 * C92099 * C92078) /
                      (p * q * std::sqrt(p + q));
    d2eezx[32] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C20274 * C107 + C92323 * C555 + C20275 * C1389 + C92212 * C1788) *
                C801 +
            (C20274 * C117 + C92323 * C561 + C20275 * C1397 + C92212 * C1796) *
                C92078) *
               C92062 * C92348 +
           ((C26314 + C26315) * C801 + (C26316 + C26317) * C92078) * C92062 *
               C92349 +
           C57242 * C44804) *
              C92110 * C798 -
          (((C57237 + C57238) * C92078 + (C57239 + C57240) * C801) * C92062 *
               C44804 +
           ((C26322 + C26323) * C92078 + (C26324 + C26325) * C801) * C92062 *
               C92349 +
           ((C26317 + C26316) * C92078 + (C26315 + C26314) * C801) * C92062 *
               C92348) *
              C92110 * C799 +
          (C57242 * C92348 +
           ((C57240 + C57239) * C801 + (C57238 + C57237) * C92078) * C92062 *
               C92349 +
           ((C20274 * C4883 + C92323 * C5457 + C20275 * C38955 +
             C92212 * C39417) *
                C801 +
            (C20274 * C4891 + C92323 * C5461 + C20275 * C38957 +
             C92212 * C39418) *
                C92078) *
               C92062 * C44804) *
              C92110 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C20274 * C107 + C92323 * C555 + C20275 * C1389 + C92212 * C1788) *
               C104 +
           (C20274 * C117 + C92323 * C561 + C20275 * C1397 + C92212 * C1796) *
               C93 -
           (C20301 + C20302) * C105 - (C20303 + C20304) * C94 + C20313 * C106 +
           C20314 * C95) *
              C92062 * C92348 +
          ((C26314 + C26315) * C104 + (C26316 + C26317) * C93 - C28470 * C105 -
           C28471 * C94 + (C22639 + C22640) * C106 + (C22641 + C22642) * C95) *
              C92062 * C92349 +
          ((C26325 + C26324) * C104 + (C26323 + C26322) * C93 -
           (C26320 + C26321) * C105 - (C26318 + C26319) * C94 +
           (C20274 * C808 + C92323 * C1207 + C20275 * C7566 + C92212 * C8202) *
               C106 +
           (C20274 * C824 + C92323 * C1215 + C20275 * C7568 + C92212 * C8203) *
               C95) *
              C92062 * C44804) *
         C92110 * C92099) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C20274 * C107 + C92323 * C555 + C20275 * C1389 + C92212 * C1788) *
                C801 +
            (C20274 * C117 + C92323 * C561 + C20275 * C1397 + C92212 * C1796) *
                C92078) *
               C92062 * C92348 +
           ((C26314 + C26315) * C801 + (C26316 + C26317) * C92078) * C92062 *
               C92349 +
           C57242 * C44804) *
              C1383 -
          (((C20275 * C5787 + C92212 * C6297 + C20274 * C5778 +
             C92323 * C6294) *
                C92078 +
            (C20275 * C5775 + C92212 * C6291 + C20274 * C5772 +
             C92323 * C6288) *
                C801) *
               C92062 * C44804 +
           ((C30908 + C30909) * C92078 + (C30910 + C30911) * C801) * C92062 *
               C92349 +
           ((C20275 * C1406 + C92212 * C1797 + C20274 * C1397 +
             C92323 * C1796) *
                C92078 +
            (C20275 * C1390 + C92212 * C1789 + C20274 * C1389 +
             C92323 * C1788) *
                C801) *
               C92062 * C92348) *
              C1384 +
          (((C20274 * C1390 + C92323 * C1789 + C20275 * C10961 +
             C92212 * C11609) *
                C801 +
            (C20274 * C1406 + C92323 * C1797 + C20275 * C10965 +
             C92212 * C11613) *
                C92078) *
               C92062 * C92348 +
           ((C20274 * C5773 + C92323 * C6289 + C20275 * C13849 +
             C92212 * C14525) *
                C801 +
            (C20274 * C5783 + C92323 * C6295 + C20275 * C13853 +
             C92212 * C14527) *
                C92078) *
               C92062 * C92349 +
           ((C20274 * C5775 + C92323 * C6291 + C20275 * C43815 +
             C92212 * C44490) *
                C801 +
            (C20274 * C5787 + C92323 * C6297 + C20275 * C43817 +
             C92212 * C44491) *
                C92078) *
               C92062 * C44804) *
              C1385) *
         C92099) /
            (p * q * std::sqrt(p + q));
    d2eezy[32] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C20274 * C107 + C92323 * C555 + C20275 * C1389 + C92212 * C1788) *
               C884 +
           (C20274 * C182 + C92323 * C641 + C20275 * C1471 + C92212 * C1854) *
               C798 -
           (C26315 + C26314) * C885 - (C26436 + C26437) * C799 + C57225 * C886 +
           C57317 * C800) *
              C92062 * C92348 +
          ((C26314 + C26315) * C884 + (C26437 + C26436) * C798 -
           (C26324 + C26325) * C885 - (C26439 + C26438) * C799 +
           (C57240 + C57239) * C886 + (C57322 + C57323) * C800) *
              C92062 * C92349 +
          (C57225 * C884 + C57317 * C798 - (C57239 + C57240) * C885 -
           (C57323 + C57322) * C799 +
           (C20274 * C4883 + C92323 * C5457 + C20275 * C38955 +
            C92212 * C39417) *
               C886 +
           (C20274 * C5014 + C92323 * C5580 + C20275 * C39049 +
            C92212 * C39493) *
               C800) *
              C92062 * C44804) *
         C92078 * C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C20274 * C107 + C92323 * C555 + C20275 * C1389 + C92212 * C1788) *
                C181 +
            (C20274 * C182 + C92323 * C641 + C20275 * C1471 + C92212 * C1854) *
                C92099) *
               C92062 * C92348 +
           ((C26314 + C26315) * C181 + (C26437 + C26436) * C92099) * C92062 *
               C92349 +
           ((C26325 + C26324) * C181 + (C26438 + C26439) * C92099) * C92062 *
               C44804) *
              C93 -
          (((C26441 + C26440) * C92099 + (C26320 + C26321) * C181) * C92062 *
               C44804 +
           (C28604 * C92099 + C28470 * C181) * C92062 * C92349 +
           ((C20403 + C20402) * C92099 + (C20301 + C20302) * C181) * C92062 *
               C92348) *
              C94 +
          (C20410 * C92062 * C92348 +
           ((C22639 + C22640) * C181 + (C22752 + C22751) * C92099) * C92062 *
               C92349 +
           ((C20274 * C808 + C92323 * C1207 + C20275 * C7566 + C92212 * C8202) *
                C181 +
            (C20274 * C893 + C92323 * C1272 + C20275 * C7668 + C92212 * C8314) *
                C92099) *
               C92062 * C44804) *
              C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C20274 * C107 + C92323 * C555 + C20275 * C1389 + C92212 * C1788) *
                C181 +
            (C20274 * C182 + C92323 * C641 + C20275 * C1471 + C92212 * C1854) *
                C92099) *
               C92062 * C92348 +
           ((C26314 + C26315) * C181 + (C26437 + C26436) * C92099) * C92062 *
               C92349 +
           (C57225 * C181 + C57317 * C92099) * C92062 * C44804) *
              C92078 * C1383 -
          (((C20275 * C5873 + C92212 * C6377 + C20274 * C5870 +
             C92323 * C6374) *
                C92099 +
            (C20275 * C5775 + C92212 * C6291 + C20274 * C5772 +
             C92323 * C6288) *
                C181) *
               C92062 * C44804 +
           ((C31047 + C31046) * C92099 + (C30910 + C30911) * C181) * C92062 *
               C92349 +
           ((C20275 * C1472 + C92212 * C1855 + C20274 * C1471 +
             C92323 * C1854) *
                C92099 +
            (C20275 * C1390 + C92212 * C1789 + C20274 * C1389 +
             C92323 * C1788) *
                C181) *
               C92062 * C92348) *
              C92078 * C1384 +
          (((C20274 * C1390 + C92323 * C1789 + C20275 * C10961 +
             C92212 * C11609) *
                C181 +
            (C20274 * C1472 + C92323 * C1855 + C20275 * C11093 +
             C92212 * C11691) *
                C92099) *
               C92062 * C92348 +
           ((C20274 * C5773 + C92323 * C6289 + C20275 * C13849 +
             C92212 * C14525) *
                C181 +
            (C20274 * C5871 + C92323 * C6375 + C20275 * C13967 +
             C92212 * C14627) *
                C92099) *
               C92062 * C92349 +
           ((C20274 * C5775 + C92323 * C6291 + C20275 * C43815 +
             C92212 * C44490) *
                C181 +
            (C20274 * C5873 + C92323 * C6377 + C20275 * C43920 +
             C92212 * C44608) *
                C92099) *
               C92062 * C44804) *
              C92078 * C1385)) /
            (p * q * std::sqrt(p + q));
    d2eezz[32] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C20274 * C107 + C92323 * C555 + C20275 * C1389 + C92212 * C1788) *
                C244 +
            (C20274 * C245 + C92323 * C719 + C20275 * C1540 + C92212 * C1909) *
                C92110) *
               C92062 * C92348 +
           ((C26314 + C26315) * C244 + (C26552 + C26553) * C92110) * C92062 *
               C92349 +
           C57408 * C44804) *
              C798 -
          (((C57405 + C57406) * C92110 + (C57239 + C57240) * C244) * C92062 *
               C44804 +
           ((C26556 + C26557) * C92110 + (C26324 + C26325) * C244) * C92062 *
               C92349 +
           ((C26553 + C26552) * C92110 + (C26315 + C26314) * C244) * C92062 *
               C92348) *
              C799 +
          (C57408 * C92348 +
           ((C57240 + C57239) * C244 + (C57406 + C57405) * C92110) * C92062 *
               C92349 +
           ((C20274 * C4883 + C92323 * C5457 + C20275 * C38955 +
             C92212 * C39417) *
                C244 +
            (C20274 * C5115 + C92323 * C5670 + C20275 * C39126 +
             C92212 * C39563) *
                C92110) *
               C92062 * C44804) *
              C800) *
         C92078) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C20274 * C107 + C92323 * C555 + C20275 * C1389 + C92212 * C1788) *
                C244 +
            (C20274 * C245 + C92323 * C719 + C20275 * C1540 + C92212 * C1909) *
                C92110) *
               C92062 * C92348 +
           ((C26314 + C26315) * C244 + (C26552 + C26553) * C92110) * C92062 *
               C92349 +
           ((C26325 + C26324) * C244 + (C26557 + C26556) * C92110) * C92062 *
               C44804) *
              C92099 * C93 -
          (((C26554 + C26555) * C92110 + (C26320 + C26321) * C244) * C92062 *
               C44804 +
           C28743 * C92062 * C92349 +
           ((C20499 + C20498) * C92110 + (C20301 + C20302) * C244) * C92062 *
               C92348) *
              C92099 * C94 +
          (C20506 * C92062 * C92348 +
           ((C22639 + C22640) * C244 + (C22860 + C22859) * C92110) * C92062 *
               C92349 +
           ((C20274 * C808 + C92323 * C1207 + C20275 * C7566 + C92212 * C8202) *
                C244 +
            (C20274 * C959 + C92323 * C1331 + C20275 * C7768 + C92212 * C8423) *
                C92110) *
               C92062 * C44804) *
              C92099 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C20274 * C107 + C92323 * C555 + C20275 * C1389 + C92212 * C1788) *
               C1534 +
           (C20274 * C245 + C92323 * C719 + C20275 * C1540 + C92212 * C1909) *
               C1383 -
           (C20275 * C1390 + C92212 * C1789 + C20274 * C1389 + C92323 * C1788) *
               C1535 -
           (C20275 * C1541 + C92212 * C1910 + C20274 * C1540 + C92323 * C1909) *
               C1384 +
           (C20274 * C1390 + C92323 * C1789 + C20275 * C10961 +
            C92212 * C11609) *
               C1536 +
           (C20274 * C1541 + C92323 * C1910 + C20275 * C11197 +
            C92212 * C11768) *
               C1385) *
              C92062 * C92348 +
          ((C26314 + C26315) * C1534 + (C26552 + C26553) * C1383 -
           (C30910 + C30911) * C1535 - (C31182 + C31183) * C1384 +
           (C20274 * C5773 + C92323 * C6289 + C20275 * C13849 +
            C92212 * C14525) *
               C1536 +
           (C20274 * C5955 + C92323 * C6453 + C20275 * C14075 +
            C92212 * C14727) *
               C1385) *
              C92062 * C92349 +
          (C57225 * C1534 + C57399 * C1383 -
           (C20275 * C5775 + C92212 * C6291 + C20274 * C5772 + C92323 * C6288) *
               C1535 -
           (C20275 * C5959 + C92212 * C6456 + C20274 * C5958 + C92323 * C6455) *
               C1384 +
           (C20274 * C5775 + C92323 * C6291 + C20275 * C43815 +
            C92212 * C44490) *
               C1536 +
           (C20274 * C5959 + C92323 * C6456 + C20275 * C44036 +
            C92212 * C44716) *
               C1385) *
              C92062 * C44804) *
         C92099 * C92078) /
            (p * q * std::sqrt(p + q));
    d2eexx[33] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C36216 * C107 + C92062 * C113) * C1987 +
                       (C36216 * C117 + C92062 * C125) * C1983 -
                       (C36216 * C108 + C92062 * C114) * C1988 -
                       (C36216 * C118 + C92062 * C126) * C1984) *
                          C92348 +
                      (C37710 + C37711 - C37734 - C37735) * C92349 +
                      (C37716 + C37717 - C37736 - C37737) * C44804) *
                         C92323 +
                     ((C42870 + C42871 - C42886 - C42887) * C92348 +
                      (C41952 + C41953 - C41968 - C41969) * C92349 +
                      (C58249 + C58250 - C58257 - C58258) * C44804) *
                         C92212) *
                        C2709 +
                    (((C42886 - (C42871 + C42870) + C42887) * C92348 +
                      (C41968 - (C41953 + C41952) + C41969) * C92349 +
                      (C58257 - (C58250 + C58249) + C58258) * C44804) *
                         C92323 +
                     ((C42888 - (C42877 + C42876) + C42889) * C92348 +
                      (C41970 - (C41959 + C41958) + C41971) * C92349 +
                      ((C36216 * C5776 + C92062 * C5786) * C1988 -
                       (C40322 * C1983 + C40323 * C1987) +
                       (C36216 * C5788 + C92062 * C5794) * C1984) *
                          C44804) *
                         C92212) *
                        C2710) *
                   C92099) /
                  (p * q * std::sqrt(p + q));
    d2eexy[33] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((((C36216 * C107 + C92062 * C113) * C181 +
                        (C36216 * C182 + C92062 * C188) * C92099) *
                           C92348 +
                       (C36692 * C181 + C36770 * C92099) * C92349 +
                       (C36694 * C181 + C36771 * C92099) * C44804) *
                          C92323 +
                      ((C41203 + C41224) * C92348 + (C41206 + C41207) * C92349 +
                       (C57557 + C57558) * C44804) *
                          C92212) *
                         C1983 -
                     (((C59247 + C59248) * C44804 + (C42993 + C42994) * C92349 +
                       (C43001 + C42997) * C92348) *
                          C92212 +
                      ((C37813 * C92099 + C37730 * C181) * C44804 +
                       (C37812 * C92099 + C37728 * C181) * C92349 +
                       ((C36216 * C183 + C92062 * C189) * C92099 +
                        (C36216 * C108 + C92062 * C114) * C181) *
                           C92348) *
                          C92323) *
                         C1984) *
                        C2709 +
                    ((((C42997 + C43001) * C92348 + (C42994 + C42993) * C92349 +
                       (C59248 + C59247) * C44804) *
                          C92323 +
                      ((C42992 + C43000) * C92348 + (C42989 + C42988) * C92349 +
                       ((C36216 * C5776 + C92062 * C5786) * C181 +
                        (C36216 * C5874 + C92062 * C5880) * C92099) *
                           C44804) *
                          C92212) *
                         C1984 -
                     (((C57559 + C57560) * C44804 + (C41212 + C41211) * C92349 +
                       (C41225 + C41208) * C92348) *
                          C92212 +
                      ((C57558 + C57557) * C44804 + (C41207 + C41206) * C92349 +
                       (C41224 + C41203) * C92348) *
                          C92323) *
                         C1983) *
                        C2710)) /
                  (p * q * std::sqrt(p + q));
    d2eexz[33] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C36216 * C107 + C92062 * C113) * C2849 +
                       (C36216 * C245 + C92062 * C251) * C2709 -
                       C41107 * C2850 - C41316 * C2710) *
                          C92348 +
                      (C39129 + C39130 - C39131 - C39147) * C92349 +
                      (C39134 + C39135 - C39136 - C39148) * C44804) *
                         C92323 +
                     ((C41107 * C2849 + C41316 * C2709 - C41109 * C2850 -
                       C41317 * C2710) *
                          C92348 +
                      (C44039 + C44040 - C44041 - C44042) * C92349 +
                      (C38975 * C2849 + C39145 * C2709 - C40323 * C2850 -
                       C40493 * C2710) *
                          C44804) *
                         C92212) *
                        C92099 * C1983 +
                    (((C42882 * C2850 -
                       ((C36216 * C246 + C92062 * C252) * C2709 +
                        (C36216 * C108 + C92062 * C114) * C2849) +
                       C43104 * C2710) *
                          C92348 +
                      (C41964 * C2850 - (C37890 * C2709 + C37728 * C2849) +
                       C42180 * C2710) *
                          C92349 +
                      (C58255 * C2850 - (C37891 * C2709 + C37730 * C2849) +
                       C58461 * C2710) *
                          C44804) *
                         C92323 +
                     ((C42884 * C2850 - (C43104 * C2709 + C42882 * C2849) +
                       C43105 * C2710) *
                          C92348 +
                      (C41966 * C2850 - (C42180 * C2709 + C41964 * C2849) +
                       C42181 * C2710) *
                          C92349 +
                      ((C36216 * C5776 + C92062 * C5786) * C2850 -
                       (C58461 * C2709 + C58255 * C2849) +
                       (C36216 * C5960 + C92062 * C5966) * C2710) *
                          C44804) *
                         C92212) *
                        C92099 * C1984)) /
                  (p * q * std::sqrt(p + q));
    d2eeyx[33] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C45029 * C107 + C92348 * C308 + C45030 * C805 +
                       C92349 * C1022 + C45031 * C806 + C44804 * C1023) *
                          C1987 +
                      (C45029 * C117 + C92348 * C314 + C45030 * C813 +
                       C92349 * C1030 + C45031 * C822 + C44804 * C1031) *
                          C1983 -
                      (C45057 + C45058 + C45059) * C1988 -
                      (C45060 + C45061 + C45062) * C1984) *
                         C92323 +
                     ((C57733 + C57734 + C57735) * C1987 +
                      (C57736 + C57737 + C57738) * C1983 -
                      (C48267 + C48266 + C48265) * C1988 -
                      (C48270 + C48269 + C48268) * C1984) *
                         C92212) *
                        C92062 * C2709 +
                    (((C48265 + C48266 + C48267) * C1988 -
                      ((C57738 + C57737 + C57736) * C1983 +
                       (C57735 + C57734 + C57733) * C1987) +
                      (C48268 + C48269 + C48270) * C1984) *
                         C92323 +
                     ((C45029 * C1391 + C92348 * C1608 + C45030 * C5774 +
                       C92349 * C6045 + C45031 * C5776 + C44804 * C6046) *
                          C1988 -
                      ((C57739 + C57740 + C57741) * C1983 +
                       (C57742 + C57743 + C57744) * C1987) +
                      (C45029 * C1407 + C92348 * C1616 + C45030 * C5784 +
                       C92349 * C6051 + C45031 * C5788 + C44804 * C6052) *
                          C1984) *
                         C92212) *
                        C92062 * C2710) *
                   C92099) /
                  (p * q * std::sqrt(p + q));
    d2eeyy[33] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C45029 * C107 + C92348 * C308 + C45030 * C805 +
                        C92349 * C1022 + C45031 * C806 + C44804 * C1023) *
                           C181 +
                       (C45029 * C182 + C92348 * C394 + C45030 * C890 +
                        C92349 * C1085 + C45031 * C891 + C44804 * C1086) *
                           C92099) *
                          C92323 +
                      ((C57733 + C57734 + C57735) * C181 +
                       (C57831 + C57832 + C57833) * C92099) *
                          C92212) *
                         C92062 * C1983 -
                     (((C48377 + C48376 + C48375) * C92099 +
                       (C48267 + C48266 + C48265) * C181) *
                          C92212 +
                      ((C45157 + C45156 + C45155) * C92099 +
                       (C45057 + C45058 + C45059) * C181) *
                          C92323) *
                         C92062 * C1984) *
                        C2709 +
                    ((((C48265 + C48266 + C48267) * C181 +
                       (C48375 + C48376 + C48377) * C92099) *
                          C92323 +
                      ((C45029 * C1391 + C92348 * C1608 + C45030 * C5774 +
                        C92349 * C6045 + C45031 * C5776 + C44804 * C6046) *
                           C181 +
                       (C45029 * C1473 + C92348 * C1674 + C45030 * C5872 +
                        C92349 * C6131 + C45031 * C5874 + C44804 * C6132) *
                           C92099) *
                          C92212) *
                         C92062 * C1984 -
                     (((C57834 + C57835 + C57836) * C92099 +
                       (C57742 + C57743 + C57744) * C181) *
                          C92212 +
                      ((C57833 + C57832 + C57831) * C92099 +
                       (C57735 + C57734 + C57733) * C181) *
                          C92323) *
                         C92062 * C1983) *
                        C2710)) /
                  (p * q * std::sqrt(p + q));
    d2eeyz[33] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C45029 * C107 + C92348 * C308 + C45030 * C805 +
                       C92349 * C1022 + C45031 * C806 + C44804 * C1023) *
                          C2849 +
                      (C45029 * C245 + C92348 * C474 + C45030 * C956 +
                       C92349 * C1146 + C45031 * C957 + C44804 * C1147) *
                          C2709 -
                      (C57735 + C57734 + C57733) * C2850 -
                      (C57923 + C57924 + C57925) * C2710) *
                         C92323 +
                     ((C57733 + C57734 + C57735) * C2849 +
                      (C57925 + C57924 + C57923) * C2709 -
                      (C57742 + C57743 + C57744) * C2850 -
                      (C57928 + C57927 + C57926) * C2710) *
                         C92212) *
                        C92062 * C92099 * C1983 +
                    (((C48265 + C48266 + C48267) * C2850 -
                      ((C45249 + C45248 + C45247) * C2709 +
                       (C45057 + C45058 + C45059) * C2849) +
                      (C48484 + C48483 + C48482) * C2710) *
                         C92323 +
                     ((C45029 * C1391 + C92348 * C1608 + C45030 * C5774 +
                       C92349 * C6045 + C45031 * C5776 + C44804 * C6046) *
                          C2850 -
                      ((C48482 + C48483 + C48484) * C2709 +
                       (C48267 + C48266 + C48265) * C2849) +
                      (C45029 * C1542 + C92348 * C1730 + C45030 * C5956 +
                       C92349 * C6211 + C45031 * C5960 + C44804 * C6212) *
                          C2710) *
                         C92212) *
                        C92062 * C92099 * C1984)) /
                  (p * q * std::sqrt(p + q));
    d2eezx[33] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C20274 * C107 + C92323 * C555 + C20275 * C1389 + C92212 * C1788) *
                C1987 +
            (C20274 * C117 + C92323 * C561 + C20275 * C1397 + C92212 * C1796) *
                C1983 -
            (C20301 + C20302) * C1988 - (C20303 + C20304) * C1984) *
               C92062 * C92348 +
           ((C26314 + C26315) * C1987 + (C26316 + C26317) * C1983 -
            C28470 * C1988 - C28471 * C1984) *
               C92062 * C92349 +
           (C57225 * C1987 + C57226 * C1983 - (C26320 + C26321) * C1988 -
            (C26318 + C26319) * C1984) *
               C92062 * C44804) *
              C2709 +
          (((C23610 + C23611) * C1988 -
            ((C20275 * C1406 + C92212 * C1797 + C20274 * C1397 +
              C92323 * C1796) *
                 C1983 +
             (C20275 * C1390 + C92212 * C1789 + C20274 * C1389 +
              C92323 * C1788) *
                 C1987) +
            (C23612 + C23613) * C1984) *
               C92062 * C92348 +
           ((C29676 + C29677) * C1988 -
            ((C30908 + C30909) * C1983 + (C30910 + C30911) * C1987) +
            (C29678 + C29679) * C1984) *
               C92062 * C92349 +
           ((C20274 * C5771 + C92323 * C6287 + C20275 * C5776 +
             C92212 * C6292) *
                C1988 -
            ((C20275 * C5787 + C92212 * C6297 + C20274 * C5778 +
              C92323 * C6294) *
                 C1983 +
             (C20275 * C5775 + C92212 * C6291 + C20274 * C5772 +
              C92323 * C6288) *
                 C1987) +
            (C20274 * C5777 + C92323 * C6293 + C20275 * C5788 +
             C92212 * C6298) *
                C1984) *
               C92062 * C44804) *
              C2710) *
         C92099) /
        (p * q * std::sqrt(p + q));
    d2eezy[33] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C20274 * C107 + C92323 * C555 + C20275 * C1389 + C92212 * C1788) *
                 C181 +
             (C20274 * C182 + C92323 * C641 + C20275 * C1471 + C92212 * C1854) *
                 C92099) *
                C92062 * C92348 +
            ((C26314 + C26315) * C181 + (C26437 + C26436) * C92099) * C92062 *
                C92349 +
            (C57225 * C181 + C57317 * C92099) * C92062 * C44804) *
               C1983 -
           (((C26441 + C26440) * C92099 + (C26320 + C26321) * C181) * C92062 *
                C44804 +
            (C28604 * C92099 + C28470 * C181) * C92062 * C92349 +
            ((C20403 + C20402) * C92099 + (C20301 + C20302) * C181) * C92062 *
                C92348) *
               C1984) *
              C2709 +
          ((((C23610 + C23611) * C181 + (C23724 + C23725) * C92099) * C92062 *
                C92348 +
            ((C29676 + C29677) * C181 + (C29814 + C29815) * C92099) * C92062 *
                C92349 +
            ((C20274 * C5771 + C92323 * C6287 + C20275 * C5776 +
              C92212 * C6292) *
                 C181 +
             (C20274 * C5869 + C92323 * C6373 + C20275 * C5874 +
              C92212 * C6378) *
                 C92099) *
                C92062 * C44804) *
               C1984 -
           (((C20275 * C5873 + C92212 * C6377 + C20274 * C5870 +
              C92323 * C6374) *
                 C92099 +
             (C20275 * C5775 + C92212 * C6291 + C20274 * C5772 +
              C92323 * C6288) *
                 C181) *
                C92062 * C44804 +
            ((C31047 + C31046) * C92099 + (C30910 + C30911) * C181) * C92062 *
                C92349 +
            ((C20275 * C1472 + C92212 * C1855 + C20274 * C1471 +
              C92323 * C1854) *
                 C92099 +
             (C20275 * C1390 + C92212 * C1789 + C20274 * C1389 +
              C92323 * C1788) *
                 C181) *
                C92062 * C92348) *
               C1983) *
              C2710)) /
        (p * q * std::sqrt(p + q));
    d2eezz[33] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C20274 * C107 + C92323 * C555 + C20275 * C1389 + C92212 * C1788) *
                C2849 +
            (C20274 * C245 + C92323 * C719 + C20275 * C1540 + C92212 * C1909) *
                C2709 -
            (C20275 * C1390 + C92212 * C1789 + C20274 * C1389 +
             C92323 * C1788) *
                C2850 -
            (C20275 * C1541 + C92212 * C1910 + C20274 * C1540 +
             C92323 * C1909) *
                C2710) *
               C92062 * C92348 +
           ((C26314 + C26315) * C2849 + (C26552 + C26553) * C2709 -
            (C30910 + C30911) * C2850 - (C31182 + C31183) * C2710) *
               C92062 * C92349 +
           (C57225 * C2849 + C57399 * C2709 -
            (C20275 * C5775 + C92212 * C6291 + C20274 * C5772 +
             C92323 * C6288) *
                C2850 -
            (C20275 * C5959 + C92212 * C6456 + C20274 * C5958 +
             C92323 * C6455) *
                C2710) *
               C92062 * C44804) *
              C92099 * C1983 +
          (((C23610 + C23611) * C2850 -
            ((C20499 + C20498) * C2709 + (C20301 + C20302) * C2849) +
            (C23835 + C23834) * C2710) *
               C92062 * C92348 +
           ((C29676 + C29677) * C2850 - (C28738 * C2709 + C28470 * C2849) +
            (C29951 + C29950) * C2710) *
               C92062 * C92349 +
           ((C20274 * C5771 + C92323 * C6287 + C20275 * C5776 +
             C92212 * C6292) *
                C2850 -
            ((C26554 + C26555) * C2709 + (C26320 + C26321) * C2849) +
            (C20274 * C5957 + C92323 * C6457 + C20275 * C5960 +
             C92212 * C6458) *
                C2710) *
               C92062 * C44804) *
              C92099 * C1984)) /
        (p * q * std::sqrt(p + q));
    d2eexx[34] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C36216 * C107 + C92062 * C113) * C104 +
            (C36216 * C117 + C92062 * C125) * C93 -
            (C36216 * C108 + C92062 * C114) * C105 -
            (C36216 * C118 + C92062 * C126) * C94 +
            (C36216 * C109 + C92062 * C115) * C106 +
            (C36216 * C119 + C92062 * C127) * C95) *
               C92348 +
           (C36692 * C104 + C36693 * C93 - C37728 * C105 - C37729 * C94 +
            (C36216 * C803 + C92062 * C815) * C106 +
            (C36216 * C811 + C92062 * C827) * C95) *
               C92349 +
           (C36694 * C104 + C36695 * C93 - C37730 * C105 - C37731 * C94 +
            (C36216 * C808 + C92062 * C820) * C106 +
            (C36216 * C824 + C92062 * C832) * C95) *
               C44804) *
              C92323 +
          ((C41107 * C104 + C41108 * C93 - C42882 * C105 - C42883 * C94 +
            (C36216 * C1387 + C92062 * C1399) * C106 +
            (C36216 * C1395 + C92062 * C1411) * C95) *
               C92348 +
           (C38977 * C104 + C38976 * C93 - C41964 * C105 - C41965 * C94 +
            (C36216 * C3433 + C92062 * C3437) * C106 +
            (C36216 * C3441 + C92062 * C3445) * C95) *
               C92349 +
           (C38975 * C104 + C38974 * C93 -
            (C36216 * C5771 + C92062 * C5779) * C105 -
            (C36216 * C5777 + C92062 * C5789) * C94 +
            (C36216 * C7566 + C92062 * C7567) * C106 +
            (C36216 * C7568 + C92062 * C7569) * C95) *
               C44804) *
              C92212) *
         C92110 * C92099) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C36216 * C107 + C92062 * C113) * C801 +
             (C36216 * C117 + C92062 * C125) * C92078) *
                C92348 +
            (C36700 + C36701) * C92349 + C36708 * C44804) *
               C92323 +
           ((C41116 + C41117) * C92348 + C43820 * C92349 + C56777 * C44804) *
               C92212) *
              C92110 * C798 -
          (((C38978 + C38979) * C44804 + (C38980 + C38981) * C92349 +
            C43822 * C92348) *
               C92212 +
           ((C36705 + C36704) * C44804 + (C36703 + C36702) * C92349 +
            (C36701 + C36700) * C92348) *
               C92323) *
              C92110 * C799 +
          ((C36708 * C92348 + C36709 * C92349 + (C36707 + C36706) * C44804) *
               C92323 +
           (C56777 * C92348 + (C38979 + C38978) * C92349 +
            ((C36216 * C38955 + C92062 * C38956) * C801 +
             (C36216 * C38957 + C92062 * C38958) * C92078) *
                C44804) *
               C92212) *
              C92110 * C800)) /
            (p * q * std::sqrt(p + q));
    d2eexy[34] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C36216 * C107 + C92062 * C113) * C181 +
             (C36216 * C182 + C92062 * C188) * C92099) *
                C92348 +
            (C36692 * C181 + C36770 * C92099) * C92349 +
            (C36694 * C181 + C36771 * C92099) * C44804) *
               C92323 +
           ((C41203 + C41224) * C92348 + (C41206 + C41207) * C92349 +
            (C38975 * C181 + C39059 * C92099) * C44804) *
               C92212) *
              C93 -
          ((((C36216 * C5869 + C92062 * C5875) * C92099 +
             (C36216 * C5771 + C92062 * C5779) * C181) *
                C44804 +
            (C42993 + C42994) * C92349 + (C43001 + C42997) * C92348) *
               C92212 +
           ((C37813 * C92099 + C37730 * C181) * C44804 +
            (C37812 * C92099 + C37728 * C181) * C92349 +
            ((C36216 * C183 + C92062 * C189) * C92099 +
             (C36216 * C108 + C92062 * C114) * C181) *
                C92348) *
               C92323) *
              C94 +
          ((((C36216 * C109 + C92062 * C115) * C181 +
             (C36216 * C184 + C92062 * C190) * C92099) *
                C92348 +
            ((C36216 * C803 + C92062 * C815) * C181 +
             (C36216 * C888 + C92062 * C896) * C92099) *
                C92349 +
            ((C36216 * C808 + C92062 * C820) * C181 +
             (C36216 * C893 + C92062 * C901) * C92099) *
                C44804) *
               C92323 +
           (((C36216 * C1387 + C92062 * C1399) * C181 +
             (C36216 * C1469 + C92062 * C1477) * C92099) *
                C92348 +
            ((C36216 * C3433 + C92062 * C3437) * C181 +
             (C36216 * C3515 + C92062 * C3519) * C92099) *
                C92349 +
            ((C36216 * C7566 + C92062 * C7567) * C181 +
             (C36216 * C7668 + C92062 * C7669) * C92099) *
                C44804) *
               C92212) *
              C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C36216 * C107 + C92062 * C113) * C884 +
            (C36216 * C182 + C92062 * C188) * C798 - C36692 * C885 -
            C36770 * C799 + C36694 * C886 + C36771 * C800) *
               C92348 +
           (C36692 * C884 + C36770 * C798 - C36694 * C885 - C36771 * C799 +
            C36696 * C886 + C36772 * C800) *
               C92349 +
           (C36694 * C884 + C36771 * C798 - C36696 * C885 - C36772 * C799 +
            C36699 * C886 + C36773 * C800) *
               C44804) *
              C92323 +
          ((C41107 * C884 + C41219 * C798 - C38977 * C885 - C39058 * C799 +
            C38975 * C886 + C39059 * C800) *
               C92348 +
           (C38977 * C884 + C39058 * C798 - C38975 * C885 - C39059 * C799 +
            C38973 * C886 + C39060 * C800) *
               C92349 +
           (C38975 * C884 + C39059 * C798 - C38973 * C885 - C39060 * C799 +
            (C36216 * C38955 + C92062 * C38956) * C886 +
            (C36216 * C39049 + C92062 * C39050) * C800) *
               C44804) *
              C92212) *
         C92078 * C92110) /
            (p * q * std::sqrt(p + q));
    d2eexz[34] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C36216 * C107 + C92062 * C113) * C244 +
             (C36216 * C245 + C92062 * C251) * C92110) *
                C92348 +
            (C36826 + C36842) * C92349 + C36846 * C44804) *
               C92323 +
           ((C41107 * C244 + C41316 * C92110) * C92348 +
            (C40482 + C40483) * C92349 + (C40491 + C40490) * C44804) *
               C92212) *
              C92099 * C93 -
          ((((C36216 * C5957 + C92062 * C5963) * C92110 +
             (C36216 * C5771 + C92062 * C5779) * C244) *
                C44804 +
            (C42182 + C42174) * C92349 +
            (C43104 * C92110 + C42882 * C244) * C92348) *
               C92212 +
           ((C37894 + C37884) * C44804 + (C37893 + C37881) * C92349 +
            ((C36216 * C246 + C92062 * C252) * C92110 +
             (C36216 * C108 + C92062 * C114) * C244) *
                C92348) *
               C92323) *
              C92099 * C94 +
          ((((C36216 * C109 + C92062 * C115) * C244 +
             (C36216 * C247 + C92062 * C253) * C92110) *
                C92348 +
            ((C36216 * C803 + C92062 * C815) * C244 +
             (C36216 * C954 + C92062 * C962) * C92110) *
                C92349 +
            ((C36216 * C808 + C92062 * C820) * C244 +
             (C36216 * C959 + C92062 * C967) * C92110) *
                C44804) *
               C92323 +
           (((C36216 * C1387 + C92062 * C1399) * C244 +
             (C36216 * C1538 + C92062 * C1546) * C92110) *
                C92348 +
            ((C36216 * C3433 + C92062 * C3437) * C244 +
             (C36216 * C3589 + C92062 * C3593) * C92110) *
                C92349 +
            ((C36216 * C7566 + C92062 * C7567) * C244 +
             (C36216 * C7768 + C92062 * C7769) * C92110) *
                C44804) *
               C92212) *
              C92099 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C36216 * C107 + C92062 * C113) * C244 +
             (C36216 * C245 + C92062 * C251) * C92110) *
                C92348 +
            (C36826 + C36842) * C92349 + C36846 * C44804) *
               C92323 +
           ((C41107 * C244 + C41316 * C92110) * C92348 +
            (C40482 + C40483) * C92349 + C56926 * C44804) *
               C92212) *
              C798 -
          (((C56927 + C56928) * C44804 + (C40490 + C40491) * C92349 +
            (C40483 + C40482) * C92348) *
               C92212 +
           ((C36844 + C36832) * C44804 + (C36843 + C36829) * C92349 +
            (C36842 + C36826) * C92348) *
               C92323) *
              C799 +
          ((C36846 * C92348 + C36847 * C92349 + (C36837 + C36845) * C44804) *
               C92323 +
           (C56926 * C92348 + (C56928 + C56927) * C92349 +
            ((C36216 * C38955 + C92062 * C38956) * C244 +
             (C36216 * C39126 + C92062 * C39127) * C92110) *
                C44804) *
               C92212) *
              C800) *
         C92078) /
            (p * q * std::sqrt(p + q));
    d2eeyx[34] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((C45029 * C107 + C92348 * C308 + C45030 * C805 +
                      C92349 * C1022 + C45031 * C806 + C44804 * C1023) *
                         C104 +
                     (C45029 * C117 + C92348 * C314 + C45030 * C813 +
                      C92349 * C1030 + C45031 * C822 + C44804 * C1031) *
                         C93 -
                     (C45057 + C45058 + C45059) * C105 -
                     (C45060 + C45061 + C45062) * C94 +
                     (C45063 + C45064 + C45065) * C106 +
                     (C45066 + C45067 + C45068) * C95) *
                        C92323 +
                    ((C45029 * C1389 + C92348 * C1606 + C45030 * C3431 +
                      C92349 * C3661 + C45031 * C5772 + C44804 * C6042) *
                         C104 +
                     (C45029 * C1397 + C92348 * C1614 + C45030 * C3439 +
                      C92349 * C3665 + C45031 * C5778 + C44804 * C6048) *
                         C93 -
                     (C48267 + C48266 + C48265) * C105 -
                     (C48270 + C48269 + C48268) * C94 +
                     (C45029 * C1387 + C92348 * C1604 + C45030 * C3433 +
                      C92349 * C3663 + C45031 * C7566 + C44804 * C7868) *
                         C106 +
                     (C45029 * C1395 + C92348 * C1612 + C45030 * C3441 +
                      C92349 * C3667 + C45031 * C7568 + C44804 * C7869) *
                         C95) *
                        C92212) *
                   C92062 * C92110 * C92099) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C45029 * C107 + C92348 * C308 + C45030 * C805 +
                       C92349 * C1022 + C45031 * C806 + C44804 * C1023) *
                          C801 +
                      (C45029 * C117 + C92348 * C314 + C45030 * C813 +
                       C92349 * C1030 + C45031 * C822 + C44804 * C1031) *
                          C92078) *
                         C92323 +
                     ((C45029 * C1389 + C92348 * C1606 + C45030 * C3431 +
                       C92349 * C3661 + C45031 * C5772 + C44804 * C6042) *
                          C801 +
                      (C45029 * C1397 + C92348 * C1614 + C45030 * C3439 +
                       C92349 * C3665 + C45031 * C5778 + C44804 * C6048) *
                          C92078) *
                         C92212) *
                        C92062 * C92110 * C798 -
                    (((C45031 * C8540 + C44804 * C8896 + C45030 * C5778 +
                       C92349 * C6048 + C45029 * C3439 + C92348 * C3665) *
                          C92078 +
                      (C45031 * C8536 + C44804 * C8894 + C45030 * C5772 +
                       C92349 * C6042 + C45029 * C3431 + C92348 * C3661) *
                          C801) *
                         C92212 +
                     ((C45031 * C4886 + C44804 * C5222 + C45030 * C822 +
                       C92349 * C1031 + C45029 * C813 + C92348 * C1030) *
                          C92078 +
                      (C45031 * C4882 + C44804 * C5218 + C45030 * C806 +
                       C92349 * C1023 + C45029 * C805 + C92348 * C1022) *
                          C801) *
                         C92323) *
                        C92062 * C92110 * C799 +
                    (((C45029 * C806 + C92348 * C1023 + C45030 * C4882 +
                       C92349 * C5218 + C45031 * C4883 + C44804 * C5219) *
                          C801 +
                      (C45029 * C822 + C92348 * C1031 + C45030 * C4886 +
                       C92349 * C5222 + C45031 * C4891 + C44804 * C5223) *
                          C92078) *
                         C92323 +
                     ((C45029 * C5772 + C92348 * C6042 + C45030 * C8536 +
                       C92349 * C8894 + C45031 * C38955 + C44804 * C39215) *
                          C801 +
                      (C45029 * C5778 + C92348 * C6048 + C45030 * C8540 +
                       C92349 * C8896 + C45031 * C38957 + C44804 * C39216) *
                          C92078) *
                         C92212) *
                        C92062 * C92110 * C800)) /
                      (p * q * std::sqrt(p + q));
    d2eeyy[34] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C45029 * C107 + C92348 * C308 + C45030 * C805 +
                       C92349 * C1022 + C45031 * C806 + C44804 * C1023) *
                          C181 +
                      (C45029 * C182 + C92348 * C394 + C45030 * C890 +
                       C92349 * C1085 + C45031 * C891 + C44804 * C1086) *
                          C92099) *
                         C92323 +
                     ((C45029 * C1389 + C92348 * C1606 + C45030 * C3431 +
                       C92349 * C3661 + C45031 * C5772 + C44804 * C6042) *
                          C181 +
                      (C45029 * C1471 + C92348 * C1672 + C45030 * C3513 +
                       C92349 * C3735 + C45031 * C5870 + C44804 * C6128) *
                          C92099) *
                         C92212) *
                        C92062 * C93 -
                    (((C48377 + C48376 + C48375) * C92099 +
                      (C48267 + C48266 + C48265) * C181) *
                         C92212 +
                     ((C45157 + C45156 + C45155) * C92099 +
                      (C45057 + C45058 + C45059) * C181) *
                         C92323) *
                        C92062 * C94 +
                    (((C45063 + C45064 + C45065) * C181 +
                      (C45160 + C45159 + C45158) * C92099) *
                         C92323 +
                     ((C45029 * C1387 + C92348 * C1604 + C45030 * C3433 +
                       C92349 * C3663 + C45031 * C7566 + C44804 * C7868) *
                          C181 +
                      (C45029 * C1469 + C92348 * C1670 + C45030 * C3515 +
                       C92349 * C3737 + C45031 * C7668 + C44804 * C7986) *
                          C92099) *
                         C92212) *
                        C92062 * C95) *
                   C92110) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((C45029 * C107 + C92348 * C308 + C45030 * C805 +
                      C92349 * C1022 + C45031 * C806 + C44804 * C1023) *
                         C884 +
                     (C45029 * C182 + C92348 * C394 + C45030 * C890 +
                      C92349 * C1085 + C45031 * C891 + C44804 * C1086) *
                         C798 -
                     (C45031 * C4882 + C44804 * C5218 + C45030 * C806 +
                      C92349 * C1023 + C45029 * C805 + C92348 * C1022) *
                         C885 -
                     (C45031 * C5012 + C44804 * C5299 + C45030 * C891 +
                      C92349 * C1086 + C45029 * C890 + C92348 * C1085) *
                         C799 +
                     (C45029 * C806 + C92348 * C1023 + C45030 * C4882 +
                      C92349 * C5218 + C45031 * C4883 + C44804 * C5219) *
                         C886 +
                     (C45029 * C891 + C92348 * C1086 + C45030 * C5012 +
                      C92349 * C5299 + C45031 * C5014 + C44804 * C5300) *
                         C800) *
                        C92323 +
                    ((C45029 * C1389 + C92348 * C1606 + C45030 * C3431 +
                      C92349 * C3661 + C45031 * C5772 + C44804 * C6042) *
                         C884 +
                     (C45029 * C1471 + C92348 * C1672 + C45030 * C3513 +
                      C92349 * C3735 + C45031 * C5870 + C44804 * C6128) *
                         C798 -
                     (C45031 * C8536 + C44804 * C8894 + C45030 * C5772 +
                      C92349 * C6042 + C45029 * C3431 + C92348 * C3661) *
                         C885 -
                     (C45031 * C8666 + C44804 * C8996 + C45030 * C5870 +
                      C92349 * C6128 + C45029 * C3513 + C92348 * C3735) *
                         C799 +
                     (C45029 * C5772 + C92348 * C6042 + C45030 * C8536 +
                      C92349 * C8894 + C45031 * C38955 + C44804 * C39215) *
                         C886 +
                     (C45029 * C5870 + C92348 * C6128 + C45030 * C8666 +
                      C92349 * C8996 + C45031 * C39049 + C44804 * C39283) *
                         C800) *
                        C92212) *
                   C92062 * C92078 * C92110) /
                      (p * q * std::sqrt(p + q));
    d2eeyz[34] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C45029 * C107 + C92348 * C308 + C45030 * C805 +
                       C92349 * C1022 + C45031 * C806 + C44804 * C1023) *
                          C244 +
                      (C45029 * C245 + C92348 * C474 + C45030 * C956 +
                       C92349 * C1146 + C45031 * C957 + C44804 * C1147) *
                          C92110) *
                         C92323 +
                     ((C45029 * C1389 + C92348 * C1606 + C45030 * C3431 +
                       C92349 * C3661 + C45031 * C5772 + C44804 * C6042) *
                          C244 +
                      (C45029 * C1540 + C92348 * C1727 + C45030 * C3587 +
                       C92349 * C3805 + C45031 * C5958 + C44804 * C6207) *
                          C92110) *
                         C92212) *
                        C92062 * C92099 * C93 -
                    (((C48482 + C48483 + C48484) * C92110 +
                      (C48267 + C48266 + C48265) * C244) *
                         C92212 +
                     ((C45249 + C45248 + C45247) * C92110 +
                      (C45057 + C45058 + C45059) * C244) *
                         C92323) *
                        C92062 * C92099 * C94 +
                    (((C45063 + C45064 + C45065) * C244 +
                      (C45252 + C45251 + C45250) * C92110) *
                         C92323 +
                     ((C45029 * C1387 + C92348 * C1604 + C45030 * C3433 +
                       C92349 * C3663 + C45031 * C7566 + C44804 * C7868) *
                          C244 +
                      (C45029 * C1538 + C92348 * C1731 + C45030 * C3589 +
                       C92349 * C3807 + C45031 * C7768 + C44804 * C8094) *
                          C92110) *
                         C92212) *
                        C92062 * C92099 * C95)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C45029 * C107 + C92348 * C308 + C45030 * C805 +
                       C92349 * C1022 + C45031 * C806 + C44804 * C1023) *
                          C244 +
                      (C45029 * C245 + C92348 * C474 + C45030 * C956 +
                       C92349 * C1146 + C45031 * C957 + C44804 * C1147) *
                          C92110) *
                         C92323 +
                     ((C45029 * C1389 + C92348 * C1606 + C45030 * C3431 +
                       C92349 * C3661 + C45031 * C5772 + C44804 * C6042) *
                          C244 +
                      (C45029 * C1540 + C92348 * C1727 + C45030 * C3587 +
                       C92349 * C3805 + C45031 * C5958 + C44804 * C6207) *
                          C92110) *
                         C92212) *
                        C92062 * C798 -
                    (((C45031 * C8780 + C44804 * C9096 + C45030 * C5958 +
                       C92349 * C6207 + C45029 * C3587 + C92348 * C3805) *
                          C92110 +
                      (C45031 * C8536 + C44804 * C8894 + C45030 * C5772 +
                       C92349 * C6042 + C45029 * C3431 + C92348 * C3661) *
                          C244) *
                         C92212 +
                     ((C45031 * C5114 + C44804 * C5378 + C45030 * C957 +
                       C92349 * C1147 + C45029 * C956 + C92348 * C1146) *
                          C92110 +
                      (C45031 * C4882 + C44804 * C5218 + C45030 * C806 +
                       C92349 * C1023 + C45029 * C805 + C92348 * C1022) *
                          C244) *
                         C92323) *
                        C92062 * C799 +
                    (((C45029 * C806 + C92348 * C1023 + C45030 * C4882 +
                       C92349 * C5218 + C45031 * C4883 + C44804 * C5219) *
                          C244 +
                      (C45029 * C957 + C92348 * C1147 + C45030 * C5114 +
                       C92349 * C5378 + C45031 * C5115 + C44804 * C5379) *
                          C92110) *
                         C92323 +
                     ((C45029 * C5772 + C92348 * C6042 + C45030 * C8536 +
                       C92349 * C8894 + C45031 * C38955 + C44804 * C39215) *
                          C244 +
                      (C45029 * C5958 + C92348 * C6207 + C45030 * C8780 +
                       C92349 * C9096 + C45031 * C39126 + C44804 * C39350) *
                          C92110) *
                         C92212) *
                        C92062 * C800) *
                   C92078) /
                      (p * q * std::sqrt(p + q));
    d2eezx[34] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C20274 * C107 + C92323 * C555 + C20275 * C1389 + C92212 * C1788) *
               C104 +
           (C20274 * C117 + C92323 * C561 + C20275 * C1397 + C92212 * C1796) *
               C93 -
           (C20301 + C20302) * C105 - (C20303 + C20304) * C94 + C20313 * C106 +
           C20314 * C95) *
              C92062 * C92348 +
          ((C26314 + C26315) * C104 + (C26316 + C26317) * C93 - C28470 * C105 -
           C28471 * C94 + (C22639 + C22640) * C106 + (C22641 + C22642) * C95) *
              C92062 * C92349 +
          ((C26325 + C26324) * C104 + (C26323 + C26322) * C93 -
           (C26320 + C26321) * C105 - (C26318 + C26319) * C94 +
           (C20274 * C808 + C92323 * C1207 + C20275 * C7566 + C92212 * C8202) *
               C106 +
           (C20274 * C824 + C92323 * C1215 + C20275 * C7568 + C92212 * C8203) *
               C95) *
              C92062 * C44804) *
         C92110 * C92099) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C20274 * C107 + C92323 * C555 + C20275 * C1389 + C92212 * C1788) *
                C801 +
            (C20274 * C117 + C92323 * C561 + C20275 * C1397 + C92212 * C1796) *
                C92078) *
               C92062 * C92348 +
           ((C26314 + C26315) * C801 + (C26316 + C26317) * C92078) * C92062 *
               C92349 +
           C57242 * C44804) *
              C92110 * C798 -
          (((C57237 + C57238) * C92078 + (C57239 + C57240) * C801) * C92062 *
               C44804 +
           ((C26322 + C26323) * C92078 + (C26324 + C26325) * C801) * C92062 *
               C92349 +
           ((C26317 + C26316) * C92078 + (C26315 + C26314) * C801) * C92062 *
               C92348) *
              C92110 * C799 +
          (C57242 * C92348 +
           ((C57240 + C57239) * C801 + (C57238 + C57237) * C92078) * C92062 *
               C92349 +
           ((C20274 * C4883 + C92323 * C5457 + C20275 * C38955 +
             C92212 * C39417) *
                C801 +
            (C20274 * C4891 + C92323 * C5461 + C20275 * C38957 +
             C92212 * C39418) *
                C92078) *
               C92062 * C44804) *
              C92110 * C800)) /
            (p * q * std::sqrt(p + q));
    d2eezy[34] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C20274 * C107 + C92323 * C555 + C20275 * C1389 + C92212 * C1788) *
                C181 +
            (C20274 * C182 + C92323 * C641 + C20275 * C1471 + C92212 * C1854) *
                C92099) *
               C92062 * C92348 +
           ((C26314 + C26315) * C181 + (C26437 + C26436) * C92099) * C92062 *
               C92349 +
           ((C26325 + C26324) * C181 + (C26438 + C26439) * C92099) * C92062 *
               C44804) *
              C93 -
          (((C26441 + C26440) * C92099 + (C26320 + C26321) * C181) * C92062 *
               C44804 +
           (C28604 * C92099 + C28470 * C181) * C92062 * C92349 +
           ((C20403 + C20402) * C92099 + (C20301 + C20302) * C181) * C92062 *
               C92348) *
              C94 +
          (C20410 * C92062 * C92348 +
           ((C22639 + C22640) * C181 + (C22752 + C22751) * C92099) * C92062 *
               C92349 +
           ((C20274 * C808 + C92323 * C1207 + C20275 * C7566 + C92212 * C8202) *
                C181 +
            (C20274 * C893 + C92323 * C1272 + C20275 * C7668 + C92212 * C8314) *
                C92099) *
               C92062 * C44804) *
              C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C20274 * C107 + C92323 * C555 + C20275 * C1389 + C92212 * C1788) *
               C884 +
           (C20274 * C182 + C92323 * C641 + C20275 * C1471 + C92212 * C1854) *
               C798 -
           (C26315 + C26314) * C885 - (C26436 + C26437) * C799 + C57225 * C886 +
           C57317 * C800) *
              C92062 * C92348 +
          ((C26314 + C26315) * C884 + (C26437 + C26436) * C798 -
           (C26324 + C26325) * C885 - (C26439 + C26438) * C799 +
           (C57240 + C57239) * C886 + (C57322 + C57323) * C800) *
              C92062 * C92349 +
          (C57225 * C884 + C57317 * C798 - (C57239 + C57240) * C885 -
           (C57323 + C57322) * C799 +
           (C20274 * C4883 + C92323 * C5457 + C20275 * C38955 +
            C92212 * C39417) *
               C886 +
           (C20274 * C5014 + C92323 * C5580 + C20275 * C39049 +
            C92212 * C39493) *
               C800) *
              C92062 * C44804) *
         C92078 * C92110) /
            (p * q * std::sqrt(p + q));
    d2eezz[34] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C20274 * C107 + C92323 * C555 + C20275 * C1389 + C92212 * C1788) *
                C244 +
            (C20274 * C245 + C92323 * C719 + C20275 * C1540 + C92212 * C1909) *
                C92110) *
               C92062 * C92348 +
           ((C26314 + C26315) * C244 + (C26552 + C26553) * C92110) * C92062 *
               C92349 +
           ((C26325 + C26324) * C244 + (C26557 + C26556) * C92110) * C92062 *
               C44804) *
              C92099 * C93 -
          (((C26554 + C26555) * C92110 + (C26320 + C26321) * C244) * C92062 *
               C44804 +
           C28743 * C92062 * C92349 +
           ((C20499 + C20498) * C92110 + (C20301 + C20302) * C244) * C92062 *
               C92348) *
              C92099 * C94 +
          (C20506 * C92062 * C92348 +
           ((C22639 + C22640) * C244 + (C22860 + C22859) * C92110) * C92062 *
               C92349 +
           ((C20274 * C808 + C92323 * C1207 + C20275 * C7566 + C92212 * C8202) *
                C244 +
            (C20274 * C959 + C92323 * C1331 + C20275 * C7768 + C92212 * C8423) *
                C92110) *
               C92062 * C44804) *
              C92099 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C20274 * C107 + C92323 * C555 + C20275 * C1389 + C92212 * C1788) *
                C244 +
            (C20274 * C245 + C92323 * C719 + C20275 * C1540 + C92212 * C1909) *
                C92110) *
               C92062 * C92348 +
           ((C26314 + C26315) * C244 + (C26552 + C26553) * C92110) * C92062 *
               C92349 +
           C57408 * C44804) *
              C798 -
          (((C57405 + C57406) * C92110 + (C57239 + C57240) * C244) * C92062 *
               C44804 +
           ((C26556 + C26557) * C92110 + (C26324 + C26325) * C244) * C92062 *
               C92349 +
           ((C26553 + C26552) * C92110 + (C26315 + C26314) * C244) * C92062 *
               C92348) *
              C799 +
          (C57408 * C92348 +
           ((C57240 + C57239) * C244 + (C57406 + C57405) * C92110) * C92062 *
               C92349 +
           ((C20274 * C4883 + C92323 * C5457 + C20275 * C38955 +
             C92212 * C39417) *
                C244 +
            (C20274 * C5115 + C92323 * C5670 + C20275 * C39126 +
             C92212 * C39563) *
                C92110) *
               C92062 * C44804) *
              C800) *
         C92078) /
            (p * q * std::sqrt(p + q));
    d2eexx[35] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C36216 * C107 + C92062 * C113) * C1987 +
                      (C36216 * C117 + C92062 * C125) * C1983 -
                      (C36216 * C108 + C92062 * C114) * C1988 -
                      (C36216 * C118 + C92062 * C126) * C1984) *
                         C36212 +
                     (C37710 + C37711 - C37734 - C37735) * C36213 +
                     (C37716 + C37717 - C37736 - C37737) * C36214 +
                     (C37722 + C37723 - C37738 - C37739) * C36215) *
                        C92148 * C92110 * C1985 +
                    ((C37734 - (C37711 + C37710) + C37735) * C36212 +
                     (C37736 - (C37717 + C37716) + C37737) * C36213 +
                     (C37738 - (C37723 + C37722) + C37739) * C36214 +
                     ((C36216 * C4884 + C92062 * C4890) * C1988 -
                      (C36698 * C1983 + C36699 * C1987) +
                      (C36216 * C4892 + C92062 * C4896) * C1984) *
                         C36215) *
                        C92148 * C92110 * C1986)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C31262 * C107 + C31257 * C113 + C31263 * C108 +
                       C31258 * C114 + C31264 * C109 + C31259 * C115) *
                          C1987 +
                      (C31262 * C117 + C31257 * C125 + C31263 * C118 +
                       C31258 * C126 + C31264 * C119 + C31259 * C127) *
                          C1983 -
                      (C31264 * C110 + C31259 * C116 + C31263 * C109 +
                       C31258 * C115 + C31262 * C108 + C31257 * C114) *
                          C1988 -
                      (C31264 * C120 + C31259 * C128 + C31263 * C119 +
                       C31258 * C127 + C31262 * C118 + C31257 * C126) *
                          C1984) *
                         C31260 +
                     ((C32042 + C32043 + C32044) * C1987 +
                      (C32045 + C32046 + C32047) * C1983 -
                      (C33458 + C33459 + C33460) * C1988 -
                      (C33461 + C33462 + C33463) * C1984) *
                         C92186) *
                        C92148 * C92110 * C1985 +
                    (((C33460 + C33459 + C33458) * C1988 -
                      ((C32047 + C32046 + C32045) * C1983 +
                       (C32044 + C32043 + C32042) * C1987) +
                      (C33463 + C33462 + C33461) * C1984) *
                         C31260 +
                     ((C31262 * C807 + C31257 * C819 + C31263 * C808 +
                       C31258 * C820 + C31264 * C809 + C31259 * C821) *
                          C1988 -
                      ((C32048 + C32049 + C32050) * C1983 +
                       (C32051 + C32052 + C32053) * C1987) +
                      (C31262 * C823 + C31257 * C831 + C31263 * C824 +
                       C31258 * C832 + C31264 * C825 + C31259 * C833) *
                          C1984) *
                         C92186) *
                        C92148 * C92110 * C1986)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C36216 * C107 + C92062 * C113) * C1987 +
                       (C36216 * C117 + C92062 * C125) * C1983 -
                       (C36216 * C108 + C92062 * C114) * C1988 -
                       (C36216 * C118 + C92062 * C126) * C1984) *
                          C31260 +
                      (C37710 + C37711 - C37734 - C37735) * C92186) *
                         C9514 +
                     ((C41107 * C1987 + C41108 * C1983 -
                       (C36216 * C1388 + C92062 * C1400) * C1988 -
                       (C36216 * C1396 + C92062 * C1412) * C1984) *
                          C31260 +
                      (C41952 + C41953 - C41968 - C41969) * C92186) *
                         C9515 +
                     ((C41109 * C1987 + C41110 * C1983 -
                       (C36216 * C1391 + C92062 * C1403) * C1988 -
                       (C36216 * C1407 + C92062 * C1415) * C1984) *
                          C31260 +
                      (C41958 + C41959 - C41970 - C41971) * C92186) *
                         C9516) *
                        C92110 * C1985 +
                    (((C37734 - (C37711 + C37710) + C37735) * C31260 +
                      (C37736 - (C37717 + C37716) + C37737) * C92186) *
                         C9514 +
                     ((C41968 - (C41953 + C41952) + C41969) * C31260 +
                      ((C36216 * C5771 + C92062 * C5779) * C1988 -
                       (C38974 * C1983 + C38975 * C1987) +
                       (C36216 * C5777 + C92062 * C5789) * C1984) *
                          C92186) *
                         C9515 +
                     ((C41970 - (C41959 + C41958) + C41971) * C31260 +
                      ((C36216 * C5776 + C92062 * C5786) * C1988 -
                       (C40322 * C1983 + C40323 * C1987) +
                       (C36216 * C5788 + C92062 * C5794) * C1984) *
                          C92186) *
                         C9516) *
                        C92110 * C1986)) /
                      (p * q * std::sqrt(p + q));
    d2eexy[35] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C36216 * C107 + C92062 * C113) * C2059 +
            (C36216 * C182 + C92062 * C188) * C1985 - C36692 * C2060 -
            C36770 * C1986) *
               C36212 +
           (C36692 * C2059 + C36770 * C1985 - C36694 * C2060 - C36771 * C1986) *
               C36213 +
           (C36694 * C2059 + C36771 * C1985 - C36696 * C2060 - C36772 * C1986) *
               C36214 +
           (C36696 * C2059 + C36772 * C1985 - C36699 * C2060 - C36773 * C1986) *
               C36215) *
              C92148 * C1983 +
          ((C37728 * C2060 -
            ((C36216 * C183 + C92062 * C189) * C1985 +
             (C36216 * C108 + C92062 * C114) * C2059) +
            C37812 * C1986) *
               C36212 +
           (C37730 * C2060 - (C37812 * C1985 + C37728 * C2059) +
            C37813 * C1986) *
               C36213 +
           (C37732 * C2060 - (C37813 * C1985 + C37730 * C2059) +
            C37814 * C1986) *
               C36214 +
           ((C36216 * C4884 + C92062 * C4890) * C2060 -
            (C37814 * C1985 + C37732 * C2059) +
            (C36216 * C5015 + C92062 * C5019) * C1986) *
               C36215) *
              C92148 * C1984) *
         C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31262 * C107 + C31257 * C113 + C31263 * C108 + C31258 * C114 +
             C31264 * C109 + C31259 * C115) *
                C2059 +
            (C31262 * C182 + C31257 * C188 + C31263 * C183 + C31258 * C189 +
             C31264 * C184 + C31259 * C190) *
                C1985 -
            (C32044 + C32043 + C32042) * C2060 -
            (C32140 + C32141 + C32142) * C1986) *
               C31260 +
           ((C32042 + C32043 + C32044) * C2059 +
            (C32142 + C32141 + C32140) * C1985 -
            (C32051 + C32052 + C32053) * C2060 -
            (C32145 + C32144 + C32143) * C1986) *
               C92186) *
              C92148 * C1983 +
          (((C33460 + C33459 + C33458) * C2060 -
            ((C31264 * C185 + C31259 * C191 + C31263 * C184 + C31258 * C190 +
              C31262 * C183 + C31257 * C189) *
                 C1985 +
             (C31264 * C110 + C31259 * C116 + C31263 * C109 + C31258 * C115 +
              C31262 * C108 + C31257 * C114) *
                 C2059) +
            (C33568 + C33569 + C33570) * C1986) *
               C31260 +
           ((C31262 * C807 + C31257 * C819 + C31263 * C808 + C31258 * C820 +
             C31264 * C809 + C31259 * C821) *
                C2060 -
            ((C33570 + C33569 + C33568) * C1985 +
             (C33458 + C33459 + C33460) * C2059) +
            (C31262 * C892 + C31257 * C900 + C31263 * C893 + C31258 * C901 +
             C31264 * C894 + C31259 * C902) *
                C1986) *
               C92186) *
              C92148 * C1984) *
         C92110) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C36216 * C107 + C92062 * C113) * C2059 +
             (C36216 * C182 + C92062 * C188) * C1985 - C36692 * C2060 -
             C36770 * C1986) *
                C31260 +
            (C36692 * C2059 + C36770 * C1985 - C36694 * C2060 -
             C36771 * C1986) *
                C92186) *
               C9514 +
           ((C41107 * C2059 + C41219 * C1985 - C38977 * C2060 -
             C39058 * C1986) *
                C31260 +
            (C38977 * C2059 + C39058 * C1985 - C38975 * C2060 -
             C39059 * C1986) *
                C92186) *
               C9515 +
           ((C41109 * C2059 + C41220 * C1985 - C40320 * C2060 -
             C40406 * C1986) *
                C31260 +
            (C40320 * C2059 + C40406 * C1985 - C40323 * C2060 -
             C40407 * C1986) *
                C92186) *
               C9516) *
              C1983 +
          (((C37728 * C2060 -
             ((C36216 * C183 + C92062 * C189) * C1985 +
              (C36216 * C108 + C92062 * C114) * C2059) +
             C37812 * C1986) *
                C31260 +
            (C37730 * C2060 - (C37812 * C1985 + C37728 * C2059) +
             C37813 * C1986) *
                C92186) *
               C9514 +
           ((C41964 * C2060 -
             ((C36216 * C1470 + C92062 * C1478) * C1985 +
              (C36216 * C1388 + C92062 * C1400) * C2059) +
             C42074 * C1986) *
                C31260 +
            ((C36216 * C5771 + C92062 * C5779) * C2060 -
             (C42074 * C1985 + C41964 * C2059) +
             (C36216 * C5869 + C92062 * C5875) * C1986) *
                C92186) *
               C9515 +
           ((C41966 * C2060 -
             ((C36216 * C1473 + C92062 * C1481) * C1985 +
              (C36216 * C1391 + C92062 * C1403) * C2059) +
             C42075 * C1986) *
                C31260 +
            ((C36216 * C5776 + C92062 * C5786) * C2060 -
             (C42075 * C1985 + C41966 * C2059) +
             (C36216 * C5874 + C92062 * C5880) * C1986) *
                C92186) *
               C9516) *
              C1984) *
         C92110) /
            (p * q * std::sqrt(p + q));
    d2eexz[35] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C36216 * C107 + C92062 * C113) * C244 +
             (C36216 * C245 + C92062 * C251) * C92110) *
                C36212 +
            (C36826 + C36842) * C36213 + C36846 * C36214 + C36847 * C36215) *
               C92148 * C1985 -
           ((C36845 + C36837) * C36215 + (C36844 + C36832) * C36214 +
            (C36843 + C36829) * C36213 + (C36842 + C36826) * C36212) *
               C92148 * C1986) *
              C1983 +
          (((C37881 + C37893) * C36212 + (C37884 + C37894) * C36213 +
            (C37887 + C37895) * C36214 +
            ((C36216 * C4884 + C92062 * C4890) * C244 +
             (C36216 * C5116 + C92062 * C5120) * C92110) *
                C36215) *
               C92148 * C1986 -
           ((C37895 + C37887) * C36215 + (C37894 + C37884) * C36214 +
            (C37893 + C37881) * C36213 +
            ((C36216 * C246 + C92062 * C252) * C92110 +
             (C36216 * C108 + C92062 * C114) * C244) *
                C36212) *
               C92148 * C1985) *
              C1984)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31262 * C107 + C31257 * C113 + C31263 * C108 + C31258 * C114 +
              C31264 * C109 + C31259 * C115) *
                 C244 +
             (C31262 * C245 + C31257 * C251 + C31263 * C246 + C31258 * C252 +
              C31264 * C247 + C31259 * C253) *
                 C92110) *
                C31260 +
            ((C32042 + C32043 + C32044) * C244 +
             (C32232 + C32233 + C32234) * C92110) *
                C92186) *
               C92148 * C1985 -
           (((C32235 + C32236 + C32237) * C92110 +
             (C32051 + C32052 + C32053) * C244) *
                C92186 +
            ((C32234 + C32233 + C32232) * C92110 +
             (C32044 + C32043 + C32042) * C244) *
                C31260) *
               C92148 * C1986) *
              C1983 +
          ((((C33460 + C33459 + C33458) * C244 +
             (C33675 + C33676 + C33677) * C92110) *
                C31260 +
            ((C31262 * C807 + C31257 * C819 + C31263 * C808 + C31258 * C820 +
              C31264 * C809 + C31259 * C821) *
                 C244 +
             (C31262 * C958 + C31257 * C966 + C31263 * C959 + C31258 * C967 +
              C31264 * C960 + C31259 * C968) *
                 C92110) *
                C92186) *
               C92148 * C1986 -
           (((C33677 + C33676 + C33675) * C92110 +
             (C33458 + C33459 + C33460) * C244) *
                C92186 +
            ((C31264 * C248 + C31259 * C254 + C31263 * C247 + C31258 * C253 +
              C31262 * C246 + C31257 * C252) *
                 C92110 +
             (C31264 * C110 + C31259 * C116 + C31263 * C109 + C31258 * C115 +
              C31262 * C108 + C31257 * C114) *
                 C244) *
                C31260) *
               C92148 * C1985) *
              C1984)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C36216 * C107 + C92062 * C113) * C244 +
              (C36216 * C245 + C92062 * C251) * C92110) *
                 C31260 +
             (C36826 + C36842) * C92186) *
                C9514 +
            ((C41107 * C244 + C41316 * C92110) * C31260 +
             (C40482 + C40483) * C92186) *
                C9515 +
            ((C41109 * C244 + C41317 * C92110) * C31260 +
             (C40484 + C40494) * C92186) *
                C9516) *
               C1985 -
           (((C40495 + C40489) * C92186 + (C40494 + C40484) * C31260) * C9516 +
            ((C40490 + C40491) * C92186 + (C40483 + C40482) * C31260) * C9515 +
            ((C36843 + C36829) * C92186 + (C36842 + C36826) * C31260) * C9514) *
               C1986) *
              C1983 +
          ((((C37881 + C37893) * C31260 + (C37884 + C37894) * C92186) * C9514 +
            ((C42174 + C42182) * C31260 +
             ((C36216 * C5771 + C92062 * C5779) * C244 +
              (C36216 * C5957 + C92062 * C5963) * C92110) *
                 C92186) *
                C9515 +
            ((C42177 + C42183) * C31260 +
             ((C36216 * C5776 + C92062 * C5786) * C244 +
              (C36216 * C5960 + C92062 * C5966) * C92110) *
                 C92186) *
                C9516) *
               C1986 -
           (((C42183 + C42177) * C92186 +
             ((C36216 * C1542 + C92062 * C1550) * C92110 +
              (C36216 * C1391 + C92062 * C1403) * C244) *
                 C31260) *
                C9516 +
            ((C42182 + C42174) * C92186 +
             ((C36216 * C1539 + C92062 * C1547) * C92110 +
              (C36216 * C1388 + C92062 * C1400) * C244) *
                 C31260) *
                C9515 +
            ((C37893 + C37881) * C92186 +
             ((C36216 * C246 + C92062 * C252) * C92110 +
              (C36216 * C108 + C92062 * C114) * C244) *
                 C31260) *
                C9514) *
               C1985) *
              C1984)) /
            (p * q * std::sqrt(p + q));
    d2eeyx[35] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C36367 * C107 + C36212 * C308 + C36368 * C805 + C36213 * C1022 +
            C36369 * C806 + C36214 * C1023 + C36370 * C4882 + C36215 * C5218) *
               C1987 +
           (C36367 * C117 + C36212 * C314 + C36368 * C813 + C36213 * C1030 +
            C36369 * C822 + C36214 * C1031 + C36370 * C4886 + C36215 * C5222) *
               C1983 -
           (C36370 * C4881 + C36215 * C5217 + C36369 * C807 + C36214 * C1024 +
            C36368 * C804 + C36213 * C1021 + C36367 * C108 + C36212 * C309) *
               C1988 -
           (C36370 * C4885 + C36215 * C5221 + C36369 * C823 + C36214 * C1032 +
            C36368 * C812 + C36213 * C1029 + C36367 * C118 + C36212 * C315) *
               C1984) *
              C92148 * C92062 * C92110 * C1985 +
          ((C36367 * C804 + C36212 * C1021 + C36368 * C807 + C36213 * C1024 +
            C36369 * C4881 + C36214 * C5217 + C36370 * C4884 + C36215 * C5220) *
               C1988 -
           ((C36370 * C4891 + C36215 * C5223 + C36369 * C4886 + C36214 * C5222 +
             C36368 * C822 + C36213 * C1031 + C36367 * C813 + C36212 * C1030) *
                C1983 +
            (C36370 * C4883 + C36215 * C5219 + C36369 * C4882 + C36214 * C5218 +
             C36368 * C806 + C36213 * C1023 + C36367 * C805 + C36212 * C1022) *
                C1987) +
           (C36367 * C812 + C36212 * C1029 + C36368 * C823 + C36213 * C1032 +
            C36369 * C4885 + C36214 * C5221 + C36370 * C4892 + C36215 * C5224) *
               C1984) *
              C92148 * C92062 * C92110 * C1986)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31487 * C107 + C31260 * C308 + C31488 * C805 + C92186 * C1022) *
                C1987 +
            (C31487 * C117 + C31260 * C314 + C31488 * C813 + C92186 * C1030) *
                C1983 -
            (C31514 + C31515) * C1988 - (C31516 + C31517) * C1984) *
               C92148 * C31257 +
           ((C31515 + C31514) * C1987 + (C31517 + C31516) * C1983 -
            (C31519 + C31518) * C1988 - (C31521 + C31520) * C1984) *
               C92148 * C31258 +
           (C31526 * C1987 + C31527 * C1983 - (C31523 + C31522) * C1988 -
            (C31525 + C31524) * C1984) *
               C92148 * C31259) *
              C92110 * C1985 +
          (((C33792 + C33793) * C1988 -
            ((C31488 * C822 + C92186 * C1031 + C31487 * C813 + C31260 * C1030) *
                 C1983 +
             (C31488 * C806 + C92186 * C1023 + C31487 * C805 + C31260 * C1022) *
                 C1987) +
            (C33794 + C33795) * C1984) *
               C92148 * C31257 +
           ((C33796 + C33797) * C1988 -
            ((C33795 + C33794) * C1983 + (C33793 + C33792) * C1987) +
            (C33798 + C33799) * C1984) *
               C92148 * C31258 +
           ((C31487 * C802 + C31260 * C1019 + C31488 * C809 + C92186 * C1026) *
                C1988 -
            ((C33799 + C33798) * C1983 + (C33797 + C33796) * C1987) +
            (C31487 * C810 + C31260 * C1027 + C31488 * C825 + C92186 * C1034) *
                C1984) *
               C92148 * C31259) *
              C92110 * C1986)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C31487 * C107 + C31260 * C308 + C31488 * C805 + C92186 * C1022) *
                C1987 +
            (C31487 * C117 + C31260 * C314 + C31488 * C813 + C92186 * C1030) *
                C1983 -
            (C31514 + C31515) * C1988 - (C31516 + C31517) * C1984) *
               C9514 +
           ((C41420 + C41421) * C1987 + (C41422 + C41423) * C1983 -
            (C34723 + C34722) * C1988 - (C34725 + C34724) * C1984) *
               C9515 +
           (C41432 * C1987 + C41433 * C1983 -
            (C31488 * C5774 + C92186 * C6045 + C31487 * C1391 +
             C31260 * C1608) *
                C1988 -
            (C31488 * C5784 + C92186 * C6051 + C31487 * C1407 +
             C31260 * C1616) *
                C1984) *
               C9516) *
              C92062 * C92110 * C1985 +
          (((C33792 + C33793) * C1988 -
            ((C31488 * C822 + C92186 * C1031 + C31487 * C813 + C31260 * C1030) *
                 C1983 +
             (C31488 * C806 + C92186 * C1023 + C31487 * C805 + C31260 * C1022) *
                 C1987) +
            (C33794 + C33795) * C1984) *
               C9514 +
           ((C31487 * C3432 + C31260 * C3662 + C31488 * C5771 +
             C92186 * C6041) *
                C1988 -
            ((C31488 * C5778 + C92186 * C6048 + C31487 * C3439 +
              C31260 * C3665) *
                 C1983 +
             (C31488 * C5772 + C92186 * C6042 + C31487 * C3431 +
              C31260 * C3661) *
                 C1987) +
            (C31487 * C3440 + C31260 * C3666 + C31488 * C5777 +
             C92186 * C6047) *
                C1984) *
               C9515 +
           ((C31487 * C5774 + C31260 * C6045 + C31488 * C5776 +
             C92186 * C6046) *
                C1988 -
            ((C31488 * C5787 + C92186 * C6050 + C31487 * C5783 +
              C31260 * C6049) *
                 C1983 +
             (C31488 * C5775 + C92186 * C6044 + C31487 * C5773 +
              C31260 * C6043) *
                 C1987) +
            (C31487 * C5784 + C31260 * C6051 + C31488 * C5788 +
             C92186 * C6052) *
                C1984) *
               C9516) *
              C92062 * C92110 * C1986)) /
            (p * q * std::sqrt(p + q));
    d2eeyy[35] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C36367 * C107 + C36212 * C308 + C36368 * C805 + C36213 * C1022 +
            C36369 * C806 + C36214 * C1023 + C36370 * C4882 + C36215 * C5218) *
               C2059 +
           (C36367 * C182 + C36212 * C394 + C36368 * C890 + C36213 * C1085 +
            C36369 * C891 + C36214 * C1086 + C36370 * C5012 + C36215 * C5299) *
               C1985 -
           (C36370 * C4883 + C36215 * C5219 + C36369 * C4882 + C36214 * C5218 +
            C36368 * C806 + C36213 * C1023 + C36367 * C805 + C36212 * C1022) *
               C2060 -
           (C36370 * C5014 + C36215 * C5300 + C36369 * C5012 + C36214 * C5299 +
            C36368 * C891 + C36213 * C1086 + C36367 * C890 + C36212 * C1085) *
               C1986) *
              C92148 * C92062 * C1983 +
          ((C36367 * C804 + C36212 * C1021 + C36368 * C807 + C36213 * C1024 +
            C36369 * C4881 + C36214 * C5217 + C36370 * C4884 + C36215 * C5220) *
               C2060 -
           ((C36370 * C5013 + C36215 * C5301 + C36369 * C892 + C36214 * C1088 +
             C36368 * C889 + C36213 * C1087 + C36367 * C183 + C36212 * C395) *
                C1985 +
            (C36370 * C4881 + C36215 * C5217 + C36369 * C807 + C36214 * C1024 +
             C36368 * C804 + C36213 * C1021 + C36367 * C108 + C36212 * C309) *
                C2059) +
           (C36367 * C889 + C36212 * C1087 + C36368 * C892 + C36213 * C1088 +
            C36369 * C5013 + C36214 * C5301 + C36370 * C5015 + C36215 * C5302) *
               C1986) *
              C92148 * C92062 * C1984) *
         C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31487 * C107 + C31260 * C308 + C31488 * C805 + C92186 * C1022) *
                C2059 +
            (C31487 * C182 + C31260 * C394 + C31488 * C890 + C92186 * C1085) *
                C1985 -
            (C31488 * C806 + C92186 * C1023 + C31487 * C805 + C31260 * C1022) *
                C2060 -
            (C31488 * C891 + C92186 * C1086 + C31487 * C890 + C31260 * C1085) *
                C1986) *
               C92148 * C31257 +
           ((C31515 + C31514) * C2059 + (C31615 + C31616) * C1985 -
            (C33793 + C33792) * C2060 - (C33906 + C33907) * C1986) *
               C92148 * C31258 +
           (C31526 * C2059 + C31621 * C1985 - (C33797 + C33796) * C2060 -
            (C33908 + C33909) * C1986) *
               C92148 * C31259) *
              C1983 +
          (((C33792 + C33793) * C2060 -
            ((C31616 + C31615) * C1985 + (C31514 + C31515) * C2059) +
            (C33907 + C33906) * C1986) *
               C92148 * C31257 +
           ((C33796 + C33797) * C2060 -
            ((C31618 + C31617) * C1985 + (C31519 + C31518) * C2059) +
            (C33909 + C33908) * C1986) *
               C92148 * C31258 +
           ((C31487 * C802 + C31260 * C1019 + C31488 * C809 + C92186 * C1026) *
                C2060 -
            ((C31619 + C31620) * C1985 + (C31523 + C31522) * C2059) +
            (C31487 * C887 + C31260 * C1091 + C31488 * C894 + C92186 * C1092) *
                C1986) *
               C92148 * C31259) *
              C1984) *
         C92110) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C31487 * C107 + C31260 * C308 + C31488 * C805 + C92186 * C1022) *
                C2059 +
            (C31487 * C182 + C31260 * C394 + C31488 * C890 + C92186 * C1085) *
                C1985 -
            (C31488 * C806 + C92186 * C1023 + C31487 * C805 + C31260 * C1022) *
                C2060 -
            (C31488 * C891 + C92186 * C1086 + C31487 * C890 + C31260 * C1085) *
                C1986) *
               C9514 +
           ((C41420 + C41421) * C2059 + (C41525 + C41526) * C1985 -
            (C31488 * C5772 + C92186 * C6042 + C31487 * C3431 +
             C31260 * C3661) *
                C2060 -
            (C31488 * C5870 + C92186 * C6128 + C31487 * C3513 +
             C31260 * C3735) *
                C1986) *
               C9515 +
           (C41432 * C2059 + C41531 * C1985 -
            (C31488 * C5775 + C92186 * C6044 + C31487 * C5773 +
             C31260 * C6043) *
                C2060 -
            (C31488 * C5873 + C92186 * C6130 + C31487 * C5871 +
             C31260 * C6129) *
                C1986) *
               C9516) *
              C92062 * C1983 +
          (((C33792 + C33793) * C2060 -
            ((C31616 + C31615) * C1985 + (C31514 + C31515) * C2059) +
            (C33907 + C33906) * C1986) *
               C9514 +
           ((C31487 * C3432 + C31260 * C3662 + C31488 * C5771 +
             C92186 * C6041) *
                C2060 -
            ((C34837 + C34836) * C1985 + (C34723 + C34722) * C2059) +
            (C31487 * C3514 + C31260 * C3736 + C31488 * C5869 +
             C92186 * C6127) *
                C1986) *
               C9515 +
           ((C31487 * C5774 + C31260 * C6045 + C31488 * C5776 +
             C92186 * C6046) *
                C2060 -
            ((C31488 * C5872 + C92186 * C6131 + C31487 * C1473 +
              C31260 * C1674) *
                 C1985 +
             (C31488 * C5774 + C92186 * C6045 + C31487 * C1391 +
              C31260 * C1608) *
                 C2059) +
            (C31487 * C5872 + C31260 * C6131 + C31488 * C5874 +
             C92186 * C6132) *
                C1986) *
               C9516) *
              C92062 * C1984) *
         C92110) /
            (p * q * std::sqrt(p + q));
    d2eeyz[35] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C36367 * C107 + C36212 * C308 + C36368 * C805 + C36213 * C1022 +
             C36369 * C806 + C36214 * C1023 + C36370 * C4882 + C36215 * C5218) *
                C244 +
            (C36367 * C245 + C36212 * C474 + C36368 * C956 + C36213 * C1146 +
             C36369 * C957 + C36214 * C1147 + C36370 * C5114 + C36215 * C5378) *
                C92110) *
               C92148 * C92062 * C1985 -
           ((C36370 * C5115 + C36215 * C5379 + C36369 * C5114 + C36214 * C5378 +
             C36368 * C957 + C36213 * C1147 + C36367 * C956 + C36212 * C1146) *
                C92110 +
            (C36370 * C4883 + C36215 * C5219 + C36369 * C4882 + C36214 * C5218 +
             C36368 * C806 + C36213 * C1023 + C36367 * C805 + C36212 * C1022) *
                C244) *
               C92148 * C92062 * C1986) *
              C1983 +
          (((C36367 * C804 + C36212 * C1021 + C36368 * C807 + C36213 * C1024 +
             C36369 * C4881 + C36214 * C5217 + C36370 * C4884 +
             C36215 * C5220) *
                C244 +
            (C36367 * C955 + C36212 * C1145 + C36368 * C958 + C36213 * C1148 +
             C36369 * C5113 + C36214 * C5377 + C36370 * C5116 +
             C36215 * C5380) *
                C92110) *
               C92148 * C92062 * C1986 -
           ((C36370 * C5113 + C36215 * C5377 + C36369 * C958 + C36214 * C1148 +
             C36368 * C955 + C36213 * C1145 + C36367 * C246 + C36212 * C475) *
                C92110 +
            (C36370 * C4881 + C36215 * C5217 + C36369 * C807 + C36214 * C1024 +
             C36368 * C804 + C36213 * C1021 + C36367 * C108 + C36212 * C309) *
                C244) *
               C92148 * C92062 * C1985) *
              C1984)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31487 * C107 + C31260 * C308 + C31488 * C805 + C92186 * C1022) *
                 C244 +
             (C31487 * C245 + C31260 * C474 + C31488 * C956 + C92186 * C1146) *
                 C92110) *
                C92148 * C31257 +
            ((C31515 + C31514) * C244 + (C31712 + C31713) * C92110) * C92148 *
                C31258 +
            C31721 * C31259) *
               C1985 -
           (((C34016 + C34017) * C92110 + (C33797 + C33796) * C244) * C92148 *
                C31259 +
            ((C34018 + C34019) * C92110 + (C33793 + C33792) * C244) * C92148 *
                C31258 +
            ((C31488 * C957 + C92186 * C1147 + C31487 * C956 + C31260 * C1146) *
                 C92110 +
             (C31488 * C806 + C92186 * C1023 + C31487 * C805 + C31260 * C1022) *
                 C244) *
                C92148 * C31257) *
               C1986) *
              C1983 +
          ((((C33792 + C33793) * C244 + (C34019 + C34018) * C92110) * C92148 *
                C31257 +
            ((C33796 + C33797) * C244 + (C34017 + C34016) * C92110) * C92148 *
                C31258 +
            ((C31487 * C802 + C31260 * C1019 + C31488 * C809 + C92186 * C1026) *
                 C244 +
             (C31487 * C953 + C31260 * C1143 + C31488 * C960 + C92186 * C1150) *
                 C92110) *
                C92148 * C31259) *
               C1986 -
           (((C31716 + C31717) * C92110 + (C31523 + C31522) * C244) * C92148 *
                C31259 +
            ((C31715 + C31714) * C92110 + (C31519 + C31518) * C244) * C92148 *
                C31258 +
            ((C31713 + C31712) * C92110 + (C31514 + C31515) * C244) * C92148 *
                C31257) *
               C1985) *
              C1984)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C31487 * C107 + C31260 * C308 + C31488 * C805 + C92186 * C1022) *
                 C244 +
             (C31487 * C245 + C31260 * C474 + C31488 * C956 + C92186 * C1146) *
                 C92110) *
                C9514 +
            ((C41420 + C41421) * C244 + (C41622 + C41621) * C92110) * C9515 +
            (C41432 * C244 + C41627 * C92110) * C9516) *
               C92062 * C1985 -
           (((C31488 * C5959 + C92186 * C6209 + C31487 * C5955 +
              C31260 * C6208) *
                 C92110 +
             (C31488 * C5775 + C92186 * C6044 + C31487 * C5773 +
              C31260 * C6043) *
                 C244) *
                C9516 +
            ((C31488 * C5958 + C92186 * C6207 + C31487 * C3587 +
              C31260 * C3805) *
                 C92110 +
             (C31488 * C5772 + C92186 * C6042 + C31487 * C3431 +
              C31260 * C3661) *
                 C244) *
                C9515 +
            ((C31488 * C957 + C92186 * C1147 + C31487 * C956 + C31260 * C1146) *
                 C92110 +
             (C31488 * C806 + C92186 * C1023 + C31487 * C805 + C31260 * C1022) *
                 C244) *
                C9514) *
               C92062 * C1986) *
              C1983 +
          ((((C33792 + C33793) * C244 + (C34019 + C34018) * C92110) * C9514 +
            ((C31487 * C3432 + C31260 * C3662 + C31488 * C5771 +
              C92186 * C6041) *
                 C244 +
             (C31487 * C3588 + C31260 * C3806 + C31488 * C5957 +
              C92186 * C6210) *
                 C92110) *
                C9515 +
            ((C31487 * C5774 + C31260 * C6045 + C31488 * C5776 +
              C92186 * C6046) *
                 C244 +
             (C31487 * C5956 + C31260 * C6211 + C31488 * C5960 +
              C92186 * C6212) *
                 C92110) *
                C9516) *
               C92062 * C1986 -
           (((C31488 * C5956 + C92186 * C6211 + C31487 * C1542 +
              C31260 * C1730) *
                 C92110 +
             (C31488 * C5774 + C92186 * C6045 + C31487 * C1391 +
              C31260 * C1608) *
                 C244) *
                C9516 +
            ((C34946 + C34947) * C92110 + (C34723 + C34722) * C244) * C9515 +
            ((C31713 + C31712) * C92110 + (C31514 + C31515) * C244) * C9514) *
               C92062 * C1985) *
              C1984)) /
            (p * q * std::sqrt(p + q));
    d2eezx[35] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92148 * C555) * C1987 +
            (C554 * C117 + C92148 * C561) * C1983 - C584 * C1988 -
            C585 * C1984) *
               C92062 * C36212 +
           (C7244 + C7245 - C7246 - C7247) * C92062 * C36213 +
           (C7252 + C7253 - C7254 - C7255) * C92062 * C36214 +
           (C38160 + C38161 - C38162 - C38163) * C92062 * C36215) *
              C92110 * C1985 +
          ((C7246 - (C7245 + C7244) + C7247) * C92062 * C36212 +
           (C7254 - (C7253 + C7252) + C7255) * C92062 * C36213 +
           (C38162 - (C38161 + C38160) + C38163) * C92062 * C36214 +
           ((C554 * C4884 + C92148 * C5458) * C1988 -
            (C37061 * C1983 + C37062 * C1987) +
            (C554 * C4892 + C92148 * C5462) * C1984) *
               C92062 * C36215) *
              C92110 * C1986)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92148 * C555) * C1987 +
             (C554 * C117 + C92148 * C561) * C1983 - C584 * C1988 -
             C585 * C1984) *
                C31257 +
            (C584 * C1987 + C585 * C1983 - C586 * C1988 - C587 * C1984) *
                C31258 +
            (C586 * C1987 + C587 * C1983 - C588 * C1988 - C589 * C1984) *
                C31259) *
               C31260 +
           ((C7244 + C7245 - C7246 - C7247) * C31257 +
            (C7248 + C7249 - C7250 - C7251) * C31258 +
            (C17672 + C17673 - C17674 - C17675) * C31259) *
               C92186) *
              C92110 * C1985 +
          (((C7246 - (C7245 + C7244) + C7247) * C31257 +
            (C7250 - (C7249 + C7248) + C7251) * C31258 +
            (C17674 - (C17673 + C17672) + C17675) * C31259) *
               C31260 +
           ((C7254 - (C7253 + C7252) + C7255) * C31257 +
            (C7258 - (C7257 + C7256) + C7259) * C31258 +
            ((C554 * C809 + C92148 * C1208) * C1988 -
             (C4635 * C1983 + C4634 * C1987) +
             (C554 * C825 + C92148 * C1216) * C1984) *
                C31259) *
               C92186) *
              C92110 * C1986)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C9997 * C107 + C9514 * C555 + C9998 * C1389 + C9515 * C1788 +
             C9999 * C1390 + C9516 * C1789) *
                C1987 +
            (C9997 * C117 + C9514 * C561 + C9998 * C1397 + C9515 * C1796 +
             C9999 * C1406 + C9516 * C1797) *
                C1983 -
            (C10025 + C10026 + C10027) * C1988 -
            (C10028 + C10029 + C10030) * C1984) *
               C92062 * C31260 +
           ((C40816 + C40817 + C40818) * C1987 +
            (C40819 + C40820 + C40821) * C1983 -
            (C12523 + C12522 + C12521) * C1988 -
            (C12526 + C12525 + C12524) * C1984) *
               C92062 * C92186) *
              C92110 * C1985 +
          (((C12521 + C12522 + C12523) * C1988 -
            ((C40821 + C40820 + C40819) * C1983 +
             (C40818 + C40817 + C40816) * C1987) +
            (C12524 + C12525 + C12526) * C1984) *
               C92062 * C31260 +
           ((C9997 * C807 + C9514 * C1206 + C9998 * C5771 + C9515 * C6287 +
             C9999 * C5776 + C9516 * C6292) *
                C1988 -
            ((C40822 + C40823 + C40824) * C1983 +
             (C40825 + C40826 + C40827) * C1987) +
            (C9997 * C823 + C9514 * C1214 + C9998 * C5777 + C9515 * C6293 +
             C9999 * C5788 + C9516 * C6298) *
                C1984) *
               C92062 * C92186) *
              C92110 * C1986)) /
            (p * q * std::sqrt(p + q));
    d2eezy[35] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92148 * C555) * C2059 +
            (C554 * C182 + C92148 * C641) * C1985 - C5484 * C2060 -
            C5591 * C1986) *
               C92062 * C36212 +
           (C5484 * C2059 + C5591 * C1985 - C5486 * C2060 - C5592 * C1986) *
               C92062 * C36213 +
           (C5486 * C2059 + C5592 * C1985 - C5492 * C2060 - C5593 * C1986) *
               C92062 * C36214 +
           (C5492 * C2059 + C5593 * C1985 - C37062 * C2060 - C37118 * C1986) *
               C92062 * C36215) *
              C1983 +
          ((C2543 - (C2542 + C2541) + C2559) * C92062 * C36212 +
           (C7361 - (C7360 + C7359) + C7362) * C92062 * C36213 +
           (C7365 - (C7364 + C7363) + C7366) * C92062 * C36214 +
           ((C554 * C4884 + C92148 * C5458) * C2060 -
            (C5594 * C1985 + C5490 * C2059) +
            (C554 * C5015 + C92148 * C5581) * C1986) *
               C92062 * C36215) *
              C1984) *
         C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92148 * C555) * C2059 +
             (C554 * C182 + C92148 * C641) * C1985 - C5484 * C2060 -
             C5591 * C1986) *
                C31257 +
            (C2541 + C2542 - C2543 - C2559) * C31258 +
            (C2546 + C2547 - C2548 - C2560) * C31259) *
               C31260 +
           ((C5484 * C2059 + C5591 * C1985 - C5486 * C2060 - C5592 * C1986) *
                C31257 +
            (C7359 + C7360 - C7361 - C7362) * C31258 +
            (C17774 + C17775 - C17776 - C17777) * C31259) *
               C92186) *
              C1983 +
          (((C2543 - (C2542 + C2541) + C2559) * C31257 +
            (C2548 - (C2547 + C2546) + C2560) * C31258 +
            (C2553 - (C2552 + C2551) + C2561) * C31259) *
               C31260 +
           ((C7361 - (C7360 + C7359) + C7362) * C31257 +
            (C17776 - (C17775 + C17774) + C17777) * C31258 +
            ((C554 * C809 + C92148 * C1208) * C2060 -
             (C2558 * C1985 + C2472 * C2059) +
             (C554 * C894 + C92148 * C1274) * C1986) *
                C31259) *
               C92186) *
              C1984) *
         C92110) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C9997 * C107 + C9514 * C555 + C9998 * C1389 + C9515 * C1788 +
             C9999 * C1390 + C9516 * C1789) *
                C2059 +
            (C9997 * C182 + C9514 * C641 + C9998 * C1471 + C9515 * C1854 +
             C9999 * C1472 + C9516 * C1855) *
                C1985 -
            (C40818 + C40817 + C40816) * C2060 -
            (C40914 + C40915 + C40916) * C1986) *
               C92062 * C31260 +
           ((C40816 + C40817 + C40818) * C2059 +
            (C40916 + C40915 + C40914) * C1985 -
            (C40825 + C40826 + C40827) * C2060 -
            (C40919 + C40918 + C40917) * C1986) *
               C92062 * C92186) *
              C1983 +
          (((C12521 + C12522 + C12523) * C2060 -
            ((C10125 + C10124 + C10123) * C1985 +
             (C10025 + C10026 + C10027) * C2059) +
            (C12634 + C12633 + C12632) * C1986) *
               C92062 * C31260 +
           ((C9997 * C807 + C9514 * C1206 + C9998 * C5771 + C9515 * C6287 +
             C9999 * C5776 + C9516 * C6292) *
                C2060 -
            ((C12632 + C12633 + C12634) * C1985 +
             (C12523 + C12522 + C12521) * C2059) +
            (C9997 * C892 + C9514 * C1270 + C9998 * C5869 + C9515 * C6373 +
             C9999 * C5874 + C9516 * C6378) *
                C1986) *
               C92062 * C92186) *
              C1984) *
         C92110) /
            (p * q * std::sqrt(p + q));
    d2eezz[35] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92148 * C555) * C244 +
             (C554 * C245 + C92148 * C719) * C92110) *
                C92062 * C36212 +
            (C5673 + C5691) * C92062 * C36213 + C37170 * C36214 +
            C37175 * C36215) *
               C1985 -
           ((C37177 + C37174) * C92062 * C36215 +
            (C5694 + C5685) * C92062 * C36214 +
            (C5692 + C5676) * C92062 * C36213 +
            (C5691 + C5673) * C92062 * C36212) *
               C1986) *
              C1983 +
          ((C7466 * C92062 * C36212 + C5679 * C92062 * C36213 +
            (C5682 + C5693) * C92062 * C36214 +
            ((C554 * C4884 + C92148 * C5458) * C244 +
             (C554 * C5116 + C92148 * C5671) * C92110) *
                C92062 * C36215) *
               C1986 -
           ((C5693 + C5682) * C92062 * C36215 + C7467 * C92062 * C36214 +
            C7468 * C92062 * C36213 + (C742 + C726) * C92062 * C36212) *
               C1985) *
              C1984)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C554 * C107 + C92148 * C555) * C244 +
              (C554 * C245 + C92148 * C719) * C92110) *
                 C31257 +
             (C726 + C742) * C31258 + C746 * C31259) *
                C31260 +
            ((C5673 + C5691) * C31257 + C7466 * C31258 + C15493 * C31259) *
                C92186) *
               C1985 -
           (((C4807 + C4803) * C31259 + C7467 * C31258 +
             (C5692 + C5676) * C31257) *
                C92186 +
            (C17876 * C31259 + C7468 * C31258 + (C5691 + C5673) * C31257) *
                C31260) *
               C1986) *
              C1983 +
          (((C7466 * C31257 + C15493 * C31258 + (C2631 + C2641) * C31259) *
                C31260 +
            (C5679 * C31257 + (C4803 + C4807) * C31258 +
             ((C554 * C809 + C92148 * C1208) * C244 +
              (C554 * C960 + C92148 * C1332) * C92110) *
                 C31259) *
                C92186) *
               C1986 -
           (((C2641 + C2631) * C31259 + C17876 * C31258 + C7468 * C31257) *
                C92186 +
            ((C744 + C732) * C31259 + (C743 + C729) * C31258 +
             (C742 + C726) * C31257) *
                C31260) *
               C1985) *
              C1984)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C9997 * C107 + C9514 * C555 + C9998 * C1389 + C9515 * C1788 +
              C9999 * C1390 + C9516 * C1789) *
                 C244 +
             (C9997 * C245 + C9514 * C719 + C9998 * C1540 + C9515 * C1909 +
              C9999 * C1541 + C9516 * C1910) *
                 C92110) *
                C92062 * C31260 +
            ((C40816 + C40817 + C40818) * C244 +
             (C41006 + C41007 + C41008) * C92110) *
                C92062 * C92186) *
               C1985 -
           (((C41009 + C41010 + C41011) * C92110 +
             (C40825 + C40826 + C40827) * C244) *
                C92062 * C92186 +
            ((C41008 + C41007 + C41006) * C92110 +
             (C40818 + C40817 + C40816) * C244) *
                C92062 * C31260) *
               C1986) *
              C1983 +
          ((((C12521 + C12522 + C12523) * C244 +
             (C12742 + C12741 + C12740) * C92110) *
                C92062 * C31260 +
            ((C9997 * C807 + C9514 * C1206 + C9998 * C5771 + C9515 * C6287 +
              C9999 * C5776 + C9516 * C6292) *
                 C244 +
             (C9997 * C958 + C9514 * C1330 + C9998 * C5957 + C9515 * C6457 +
              C9999 * C5960 + C9516 * C6458) *
                 C92110) *
                C92062 * C92186) *
               C1986 -
           (((C12740 + C12741 + C12742) * C92110 +
             (C12523 + C12522 + C12521) * C244) *
                C92062 * C92186 +
            ((C10217 + C10216 + C10215) * C92110 +
             (C10025 + C10026 + C10027) * C244) *
                C92062 * C31260) *
               C1985) *
              C1984)) /
            (p * q * std::sqrt(p + q));
    d2eexx[36] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C36216 * C107 + C92062 * C113) * C801 +
             (C36216 * C117 + C92062 * C125) * C92078) *
                C36212 +
            (C36700 + C36701) * C36213 + C36708 * C36214 + C36709 * C36215) *
               C92148 * C2709 -
           ((C38978 + C38979) * C36215 + (C38980 + C38981) * C36214 +
            (C38982 + C38983) * C36213 +
            ((C36216 * C1397 + C92062 * C1413) * C92078 +
             (C36216 * C1389 + C92062 * C1401) * C801) *
                C36212) *
               C92148 * C2710) *
              C1985 +
          (((C38983 + C38982) * C36212 + (C38981 + C38980) * C36213 +
            (C38979 + C38978) * C36214 +
            ((C36216 * C38955 + C92062 * C38956) * C801 +
             (C36216 * C38957 + C92062 * C38958) * C92078) *
                C36215) *
               C92148 * C2710 -
           ((C36706 + C36707) * C36215 + (C36705 + C36704) * C36214 +
            (C36703 + C36702) * C36213 + (C36701 + C36700) * C36212) *
               C92148 * C2709) *
              C1986)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31262 * C107 + C31257 * C113 + C31263 * C108 + C31258 * C114 +
              C31264 * C109 + C31259 * C115) *
                 C801 +
             (C31262 * C117 + C31257 * C125 + C31263 * C118 + C31258 * C126 +
              C31264 * C119 + C31259 * C127) *
                 C92078) *
                C31260 +
            ((C32042 + C32043 + C32044) * C801 +
             (C32045 + C32046 + C32047) * C92078) *
                C92186) *
               C92148 * C2709 -
           (((C35354 + C35355 + C35356) * C92078 +
             (C35357 + C35358 + C35359) * C801) *
                C92186 +
            ((C31264 * C1395 + C31259 * C1411 + C31263 * C1396 +
              C31258 * C1412 + C31262 * C1397 + C31257 * C1413) *
                 C92078 +
             (C31264 * C1387 + C31259 * C1399 + C31263 * C1388 +
              C31258 * C1400 + C31262 * C1389 + C31257 * C1401) *
                 C801) *
                C31260) *
               C92148 * C2710) *
              C1985 +
          ((((C35359 + C35358 + C35357) * C801 +
             (C35356 + C35355 + C35354) * C92078) *
                C31260 +
            ((C31262 * C5772 + C31257 * C5780 + C31263 * C5771 +
              C31258 * C5779 + C31264 * C7566 + C31259 * C7567) *
                 C801 +
             (C31262 * C5778 + C31257 * C5790 + C31263 * C5777 +
              C31258 * C5789 + C31264 * C7568 + C31259 * C7569) *
                 C92078) *
                C92186) *
               C92148 * C2710 -
           (((C32048 + C32049 + C32050) * C92078 +
             (C32051 + C32052 + C32053) * C801) *
                C92186 +
            ((C32047 + C32046 + C32045) * C92078 +
             (C32044 + C32043 + C32042) * C801) *
                C31260) *
               C92148 * C2709) *
              C1986)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C36216 * C107 + C92062 * C113) * C801 +
              (C36216 * C117 + C92062 * C125) * C92078) *
                 C31260 +
             (C36700 + C36701) * C92186) *
                C9514 +
            ((C41116 + C41117) * C31260 + C43820 * C92186) * C9515 +
            C41126 * C9516) *
               C2709 -
           (((C41120 + C41121) * C92186 + (C41122 + C41123) * C31260) * C9516 +
            (C43821 * C92186 + (C41119 + C41118) * C31260) * C9515 +
            (C43822 * C92186 + (C41117 + C41116) * C31260) * C9514) *
               C2710) *
              C1985 +
          (((C43820 * C31260 + (C38981 + C38980) * C92186) * C9514 +
            (C41098 * C31260 + (C40327 + C40326) * C92186) * C9515 +
            ((C41121 + C41120) * C31260 +
             ((C36216 * C43815 + C92062 * C43816) * C801 +
              (C36216 * C43817 + C92062 * C43818) * C92078) *
                 C92186) *
                C9516) *
               C2710 -
           (((C40326 + C40327) * C92186 + C43821 * C31260) * C9516 +
            ((C38980 + C38981) * C92186 + C43822 * C31260) * C9515 +
            ((C36703 + C36702) * C92186 + (C36701 + C36700) * C31260) * C9514) *
               C2709) *
              C1986)) /
            (p * q * std::sqrt(p + q));
    d2eexy[36] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C36216 * C107 + C92062 * C113) * C2059 +
            (C36216 * C182 + C92062 * C188) * C1985 - C36692 * C2060 -
            C36770 * C1986) *
               C36212 +
           (C36692 * C2059 + C36770 * C1985 - C36694 * C2060 - C36771 * C1986) *
               C36213 +
           (C36694 * C2059 + C36771 * C1985 - C36696 * C2060 - C36772 * C1986) *
               C36214 +
           (C36696 * C2059 + C36772 * C1985 - C36699 * C2060 - C36773 * C1986) *
               C36215) *
              C92148 * C92078 * C2709 +
          ((C38977 * C2060 -
            ((C36216 * C1471 + C92062 * C1479) * C1985 +
             (C36216 * C1389 + C92062 * C1401) * C2059) +
            C39058 * C1986) *
               C36212 +
           (C38975 * C2060 - (C39058 * C1985 + C38977 * C2059) +
            C39059 * C1986) *
               C36213 +
           (C38973 * C2060 - (C39059 * C1985 + C38975 * C2059) +
            C39060 * C1986) *
               C36214 +
           ((C36216 * C38955 + C92062 * C38956) * C2060 -
            (C39060 * C1985 + C38973 * C2059) +
            (C36216 * C39049 + C92062 * C39050) * C1986) *
               C36215) *
              C92148 * C92078 * C2710)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31262 * C107 + C31257 * C113 + C31263 * C108 + C31258 * C114 +
             C31264 * C109 + C31259 * C115) *
                C2059 +
            (C31262 * C182 + C31257 * C188 + C31263 * C183 + C31258 * C189 +
             C31264 * C184 + C31259 * C190) *
                C1985 -
            (C32044 + C32043 + C32042) * C2060 -
            (C32140 + C32141 + C32142) * C1986) *
               C31260 +
           ((C32042 + C32043 + C32044) * C2059 +
            (C32142 + C32141 + C32140) * C1985 -
            (C32051 + C32052 + C32053) * C2060 -
            (C32145 + C32144 + C32143) * C1986) *
               C92186) *
              C92148 * C92078 * C2709 +
          (((C35359 + C35358 + C35357) * C2060 -
            ((C31264 * C1469 + C31259 * C1477 + C31263 * C1470 +
              C31258 * C1478 + C31262 * C1471 + C31257 * C1479) *
                 C1985 +
             (C31264 * C1387 + C31259 * C1399 + C31263 * C1388 +
              C31258 * C1400 + C31262 * C1389 + C31257 * C1401) *
                 C2059) +
            (C35464 + C35465 + C35466) * C1986) *
               C31260 +
           ((C31262 * C5772 + C31257 * C5780 + C31263 * C5771 + C31258 * C5779 +
             C31264 * C7566 + C31259 * C7567) *
                C2060 -
            ((C35466 + C35465 + C35464) * C1985 +
             (C35357 + C35358 + C35359) * C2059) +
            (C31262 * C5870 + C31257 * C5876 + C31263 * C5869 + C31258 * C5875 +
             C31264 * C7668 + C31259 * C7669) *
                C1986) *
               C92186) *
              C92148 * C92078 * C2710)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C36216 * C107 + C92062 * C113) * C2059 +
             (C36216 * C182 + C92062 * C188) * C1985 - C36692 * C2060 -
             C36770 * C1986) *
                C31260 +
            (C36692 * C2059 + C36770 * C1985 - C36694 * C2060 -
             C36771 * C1986) *
                C92186) *
               C9514 +
           ((C43923 + C43924 - C43925 - C43926) * C31260 +
            (C43927 + C43928 - C43929 - C43930) * C92186) *
               C9515 +
           ((C43931 + C43932 - C43933 - C43934) * C31260 +
            (C43935 + C43936 - C43937 - C43938) * C92186) *
               C9516) *
              C92078 * C2709 +
          (((C43925 - (C43924 + C43923) + C43926) * C31260 +
            (C43929 - (C43928 + C43927) + C43930) * C92186) *
               C9514 +
           ((C43933 - (C43932 + C43931) + C43934) * C31260 +
            (C43937 - (C43936 + C43935) + C43938) * C92186) *
               C9515 +
           ((C41113 * C2060 - (C41223 * C1985 + C41115 * C2059) +
             C41222 * C1986) *
                C31260 +
            ((C36216 * C43815 + C92062 * C43816) * C2060 -
             (C41222 * C1985 + C41113 * C2059) +
             (C36216 * C43920 + C92062 * C43921) * C1986) *
                C92186) *
               C9516) *
              C92078 * C2710)) /
            (p * q * std::sqrt(p + q));
    d2eexz[36] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C36216 * C107 + C92062 * C113) * C2849 +
                      (C36216 * C245 + C92062 * C251) * C2709 -
                      (C36216 * C1389 + C92062 * C1401) * C2850 -
                      (C36216 * C1540 + C92062 * C1548) * C2710) *
                         C36212 +
                     (C39129 + C39130 - C39131 - C39147) * C36213 +
                     (C39134 + C39135 - C39136 - C39148) * C36214 +
                     (C39139 + C39140 - C39141 - C39149) * C36215) *
                        C92148 * C1985 +
                    ((C39131 - (C39130 + C39129) + C39147) * C36212 +
                     (C39136 - (C39135 + C39134) + C39148) * C36213 +
                     (C39141 - (C39140 + C39139) + C39149) * C36214 +
                     ((C36216 * C38955 + C92062 * C38956) * C2850 -
                      (C36841 * C2709 + C36699 * C2849) +
                      (C36216 * C39126 + C92062 * C39127) * C2710) *
                         C36215) *
                        C92148 * C1986) *
                   C92078) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C31262 * C107 + C31257 * C113 + C31263 * C108 +
                       C31258 * C114 + C31264 * C109 + C31259 * C115) *
                          C2849 +
                      (C31262 * C245 + C31257 * C251 + C31263 * C246 +
                       C31258 * C252 + C31264 * C247 + C31259 * C253) *
                          C2709 -
                      (C31264 * C1387 + C31259 * C1399 + C31263 * C1388 +
                       C31258 * C1400 + C31262 * C1389 + C31257 * C1401) *
                          C2850 -
                      (C31264 * C1538 + C31259 * C1546 + C31263 * C1539 +
                       C31258 * C1547 + C31262 * C1540 + C31257 * C1548) *
                          C2710) *
                         C31260 +
                     ((C32042 + C32043 + C32044) * C2849 +
                      (C32232 + C32233 + C32234) * C2709 -
                      (C35357 + C35358 + C35359) * C2850 -
                      (C35571 + C35572 + C35573) * C2710) *
                         C92186) *
                        C92148 * C1985 +
                    (((C35359 + C35358 + C35357) * C2850 -
                      ((C32234 + C32233 + C32232) * C2709 +
                       (C32044 + C32043 + C32042) * C2849) +
                      (C35573 + C35572 + C35571) * C2710) *
                         C31260 +
                     ((C31262 * C5772 + C31257 * C5780 + C31263 * C5771 +
                       C31258 * C5779 + C31264 * C7566 + C31259 * C7567) *
                          C2850 -
                      ((C32235 + C32236 + C32237) * C2709 +
                       (C32051 + C32052 + C32053) * C2849) +
                      (C31262 * C5958 + C31257 * C5964 + C31263 * C5957 +
                       C31258 * C5963 + C31264 * C7768 + C31259 * C7769) *
                          C2710) *
                         C92186) *
                        C92148 * C1986) *
                   C92078) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C36216 * C107 + C92062 * C113) * C2849 +
                       (C36216 * C245 + C92062 * C251) * C2709 -
                       C41107 * C2850 - C41316 * C2710) *
                          C31260 +
                      (C39129 + C39130 - C39131 - C39147) * C92186) *
                         C9514 +
                     ((C41107 * C2849 + C41316 * C2709 - C41109 * C2850 -
                       C41317 * C2710) *
                          C31260 +
                      (C44039 + C44040 - C44041 - C44042) * C92186) *
                         C9515 +
                     ((C41109 * C2849 + C41317 * C2709 - C41115 * C2850 -
                       C41318 * C2710) *
                          C31260 +
                      (C44043 + C44044 - C44045 - C44046) * C92186) *
                         C9516) *
                        C1985 +
                    (((C39131 - (C39130 + C39129) + C39147) * C31260 +
                      (C39136 - (C39135 + C39134) + C39148) * C92186) *
                         C9514 +
                     ((C44041 - (C44040 + C44039) + C44042) * C31260 +
                      (C40323 * C2850 - (C39145 * C2709 + C38975 * C2849) +
                       C40493 * C2710) *
                          C92186) *
                         C9515 +
                     ((C44045 - (C44044 + C44043) + C44046) * C31260 +
                      ((C36216 * C43815 + C92062 * C43816) * C2850 -
                       (C40493 * C2709 + C40323 * C2849) +
                       (C36216 * C44036 + C92062 * C44037) * C2710) *
                          C92186) *
                         C9516) *
                        C1986) *
                   C92078) /
                      (p * q * std::sqrt(p + q));
    d2eeyx[36] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C36367 * C107 + C36212 * C308 + C36368 * C805 + C36213 * C1022 +
             C36369 * C806 + C36214 * C1023 + C36370 * C4882 + C36215 * C5218) *
                C801 +
            (C36367 * C117 + C36212 * C314 + C36368 * C813 + C36213 * C1030 +
             C36369 * C822 + C36214 * C1031 + C36370 * C4886 + C36215 * C5222) *
                C92078) *
               C92148 * C92062 * C2709 -
           ((C36370 * C8540 + C36215 * C8896 + C36369 * C5778 + C36214 * C6048 +
             C36368 * C3439 + C36213 * C3665 + C36367 * C1397 +
             C36212 * C1614) *
                C92078 +
            (C36370 * C8536 + C36215 * C8894 + C36369 * C5772 + C36214 * C6042 +
             C36368 * C3431 + C36213 * C3661 + C36367 * C1389 +
             C36212 * C1606) *
                C801) *
               C92148 * C92062 * C2710) *
              C1985 +
          (((C36367 * C3431 + C36212 * C3661 + C36368 * C5772 + C36213 * C6042 +
             C36369 * C8536 + C36214 * C8894 + C36370 * C38955 +
             C36215 * C39215) *
                C801 +
            (C36367 * C3439 + C36212 * C3665 + C36368 * C5778 + C36213 * C6048 +
             C36369 * C8540 + C36214 * C8896 + C36370 * C38957 +
             C36215 * C39216) *
                C92078) *
               C92148 * C92062 * C2710 -
           ((C36370 * C4891 + C36215 * C5223 + C36369 * C4886 + C36214 * C5222 +
             C36368 * C822 + C36213 * C1031 + C36367 * C813 + C36212 * C1030) *
                C92078 +
            (C36370 * C4883 + C36215 * C5219 + C36369 * C4882 + C36214 * C5218 +
             C36368 * C806 + C36213 * C1023 + C36367 * C805 + C36212 * C1022) *
                C801) *
               C92148 * C92062 * C2709) *
              C1986)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31487 * C107 + C31260 * C308 + C31488 * C805 + C92186 * C1022) *
                 C801 +
             (C31487 * C117 + C31260 * C314 + C31488 * C813 + C92186 * C1030) *
                 C92078) *
                C92148 * C31257 +
            ((C31515 + C31514) * C801 + (C31517 + C31516) * C92078) * C92148 *
                C31258 +
            (C31526 * C801 + C31527 * C92078) * C92148 * C31259) *
               C2709 -
           (((C34729 + C34728) * C92078 + (C34727 + C34726) * C801) * C92148 *
                C31259 +
            ((C34725 + C34724) * C92078 + (C34723 + C34722) * C801) * C92148 *
                C31258 +
            ((C31488 * C3439 + C92186 * C3665 + C31487 * C1397 +
              C31260 * C1614) *
                 C92078 +
             (C31488 * C3431 + C92186 * C3661 + C31487 * C1389 +
              C31260 * C1606) *
                 C801) *
                C92148 * C31257) *
               C2710) *
              C1985 +
          ((((C31487 * C3431 + C31260 * C3661 + C31488 * C5772 +
              C92186 * C6042) *
                 C801 +
             (C31487 * C3439 + C31260 * C3665 + C31488 * C5778 +
              C92186 * C6048) *
                 C92078) *
                C92148 * C31257 +
            ((C31487 * C3432 + C31260 * C3662 + C31488 * C5771 +
              C92186 * C6041) *
                 C801 +
             (C31487 * C3440 + C31260 * C3666 + C31488 * C5777 +
              C92186 * C6047) *
                 C92078) *
                C92148 * C31258 +
            ((C31487 * C3433 + C31260 * C3663 + C31488 * C7566 +
              C92186 * C7868) *
                 C801 +
             (C31487 * C3441 + C31260 * C3667 + C31488 * C7568 +
              C92186 * C7869) *
                 C92078) *
                C92148 * C31259) *
               C2710 -
           (((C33799 + C33798) * C92078 + (C33797 + C33796) * C801) * C92148 *
                C31259 +
            ((C33795 + C33794) * C92078 + (C33793 + C33792) * C801) * C92148 *
                C31258 +
            ((C31488 * C822 + C92186 * C1031 + C31487 * C813 + C31260 * C1030) *
                 C92078 +
             (C31488 * C806 + C92186 * C1023 + C31487 * C805 + C31260 * C1022) *
                 C801) *
                C92148 * C31257) *
               C2709) *
              C1986)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C31487 * C107 + C31260 * C308 + C31488 * C805 + C92186 * C1022) *
                 C801 +
             (C31487 * C117 + C31260 * C314 + C31488 * C813 + C92186 * C1030) *
                 C92078) *
                C9514 +
            ((C41420 + C41421) * C801 + (C41422 + C41423) * C92078) * C9515 +
            C41436 * C9516) *
               C92062 * C2709 -
           (((C41428 + C41429) * C92078 + (C41430 + C41431) * C801) * C9516 +
            ((C41427 + C41426) * C92078 + (C41425 + C41424) * C801) * C9515 +
            ((C41423 + C41422) * C92078 + (C41421 + C41420) * C801) * C9514) *
               C92062 * C2710) *
              C1985 +
          ((((C44163 + C44164) * C801 + (C44165 + C44166) * C92078) * C9514 +
            ((C44167 + C44168) * C801 + (C44169 + C44170) * C92078) * C9515 +
            ((C31487 * C13849 + C31260 * C14183 + C31488 * C43815 +
              C92186 * C44144) *
                 C801 +
             (C31487 * C13853 + C31260 * C14185 + C31488 * C43817 +
              C92186 * C44145) *
                 C92078) *
                C9516) *
               C92062 * C2710 -
           (((C44170 + C44169) * C92078 + (C44168 + C44167) * C801) * C9516 +
            ((C44166 + C44165) * C92078 + (C44164 + C44163) * C801) * C9515 +
            ((C31488 * C822 + C92186 * C1031 + C31487 * C813 + C31260 * C1030) *
                 C92078 +
             (C31488 * C806 + C92186 * C1023 + C31487 * C805 + C31260 * C1022) *
                 C801) *
                C9514) *
               C92062 * C2709) *
              C1986)) /
            (p * q * std::sqrt(p + q));
    d2eeyy[36] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C36367 * C107 + C36212 * C308 + C36368 * C805 + C36213 * C1022 +
            C36369 * C806 + C36214 * C1023 + C36370 * C4882 + C36215 * C5218) *
               C2059 +
           (C36367 * C182 + C36212 * C394 + C36368 * C890 + C36213 * C1085 +
            C36369 * C891 + C36214 * C1086 + C36370 * C5012 + C36215 * C5299) *
               C1985 -
           (C36370 * C4883 + C36215 * C5219 + C36369 * C4882 + C36214 * C5218 +
            C36368 * C806 + C36213 * C1023 + C36367 * C805 + C36212 * C1022) *
               C2060 -
           (C36370 * C5014 + C36215 * C5300 + C36369 * C5012 + C36214 * C5299 +
            C36368 * C891 + C36213 * C1086 + C36367 * C890 + C36212 * C1085) *
               C1986) *
              C92148 * C92062 * C92078 * C2709 +
          ((C36367 * C3431 + C36212 * C3661 + C36368 * C5772 + C36213 * C6042 +
            C36369 * C8536 + C36214 * C8894 + C36370 * C38955 +
            C36215 * C39215) *
               C2060 -
           ((C36370 * C8666 + C36215 * C8996 + C36369 * C5870 + C36214 * C6128 +
             C36368 * C3513 + C36213 * C3735 + C36367 * C1471 +
             C36212 * C1672) *
                C1985 +
            (C36370 * C8536 + C36215 * C8894 + C36369 * C5772 + C36214 * C6042 +
             C36368 * C3431 + C36213 * C3661 + C36367 * C1389 +
             C36212 * C1606) *
                C2059) +
           (C36367 * C3513 + C36212 * C3735 + C36368 * C5870 + C36213 * C6128 +
            C36369 * C8666 + C36214 * C8996 + C36370 * C39049 +
            C36215 * C39283) *
               C1986) *
              C92148 * C92062 * C92078 * C2710)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31487 * C107 + C31260 * C308 + C31488 * C805 + C92186 * C1022) *
                C2059 +
            (C31487 * C182 + C31260 * C394 + C31488 * C890 + C92186 * C1085) *
                C1985 -
            (C31488 * C806 + C92186 * C1023 + C31487 * C805 + C31260 * C1022) *
                C2060 -
            (C31488 * C891 + C92186 * C1086 + C31487 * C890 + C31260 * C1085) *
                C1986) *
               C92148 * C31257 +
           ((C31515 + C31514) * C2059 + (C31615 + C31616) * C1985 -
            (C33793 + C33792) * C2060 - (C33906 + C33907) * C1986) *
               C92148 * C31258 +
           (C31526 * C2059 + C31621 * C1985 - (C33797 + C33796) * C2060 -
            (C33908 + C33909) * C1986) *
               C92148 * C31259) *
              C92078 * C2709 +
          (((C31487 * C3431 + C31260 * C3661 + C31488 * C5772 +
             C92186 * C6042) *
                C2060 -
            ((C31488 * C3513 + C92186 * C3735 + C31487 * C1471 +
              C31260 * C1672) *
                 C1985 +
             (C31488 * C3431 + C92186 * C3661 + C31487 * C1389 +
              C31260 * C1606) *
                 C2059) +
            (C31487 * C3513 + C31260 * C3735 + C31488 * C5870 +
             C92186 * C6128) *
                C1986) *
               C92148 * C31257 +
           ((C31487 * C3432 + C31260 * C3662 + C31488 * C5771 +
             C92186 * C6041) *
                C2060 -
            ((C34837 + C34836) * C1985 + (C34723 + C34722) * C2059) +
            (C31487 * C3514 + C31260 * C3736 + C31488 * C5869 +
             C92186 * C6127) *
                C1986) *
               C92148 * C31258 +
           ((C31487 * C3433 + C31260 * C3663 + C31488 * C7566 +
             C92186 * C7868) *
                C2060 -
            ((C34839 + C34838) * C1985 + (C34727 + C34726) * C2059) +
            (C31487 * C3515 + C31260 * C3737 + C31488 * C7668 +
             C92186 * C7986) *
                C1986) *
               C92148 * C31259) *
              C92078 * C2710)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C31487 * C107 + C31260 * C308 + C31488 * C805 + C92186 * C1022) *
                C2059 +
            (C31487 * C182 + C31260 * C394 + C31488 * C890 + C92186 * C1085) *
                C1985 -
            (C31488 * C806 + C92186 * C1023 + C31487 * C805 + C31260 * C1022) *
                C2060 -
            (C31488 * C891 + C92186 * C1086 + C31487 * C890 + C31260 * C1085) *
                C1986) *
               C9514 +
           ((C41420 + C41421) * C2059 + (C41525 + C41526) * C1985 -
            (C44164 + C44163) * C2060 - (C44278 + C44279) * C1986) *
               C9515 +
           (C41432 * C2059 + C41531 * C1985 - (C44168 + C44167) * C2060 -
            (C44280 + C44281) * C1986) *
               C9516) *
              C92062 * C92078 * C2709 +
          (((C44163 + C44164) * C2060 -
            ((C41526 + C41525) * C1985 + (C41421 + C41420) * C2059) +
            (C44279 + C44278) * C1986) *
               C9514 +
           ((C44167 + C44168) * C2060 -
            ((C41528 + C41527) * C1985 + (C41425 + C41424) * C2059) +
            (C44281 + C44280) * C1986) *
               C9515 +
           ((C31487 * C13849 + C31260 * C14183 + C31488 * C43815 +
             C92186 * C44144) *
                C2060 -
            ((C41529 + C41530) * C1985 + (C41430 + C41431) * C2059) +
            (C31487 * C13967 + C31260 * C14305 + C31488 * C43920 +
             C92186 * C44268) *
                C1986) *
               C9516) *
              C92062 * C92078 * C2710)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[36] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C36367 * C107 + C36212 * C308 + C36368 * C805 + C36213 * C1022 +
            C36369 * C806 + C36214 * C1023 + C36370 * C4882 + C36215 * C5218) *
               C2849 +
           (C36367 * C245 + C36212 * C474 + C36368 * C956 + C36213 * C1146 +
            C36369 * C957 + C36214 * C1147 + C36370 * C5114 + C36215 * C5378) *
               C2709 -
           (C36370 * C8536 + C36215 * C8894 + C36369 * C5772 + C36214 * C6042 +
            C36368 * C3431 + C36213 * C3661 + C36367 * C1389 + C36212 * C1606) *
               C2850 -
           (C36370 * C8780 + C36215 * C9096 + C36369 * C5958 + C36214 * C6207 +
            C36368 * C3587 + C36213 * C3805 + C36367 * C1540 + C36212 * C1727) *
               C2710) *
              C92148 * C92062 * C1985 +
          ((C36367 * C3431 + C36212 * C3661 + C36368 * C5772 + C36213 * C6042 +
            C36369 * C8536 + C36214 * C8894 + C36370 * C38955 +
            C36215 * C39215) *
               C2850 -
           ((C36370 * C5115 + C36215 * C5379 + C36369 * C5114 + C36214 * C5378 +
             C36368 * C957 + C36213 * C1147 + C36367 * C956 + C36212 * C1146) *
                C2709 +
            (C36370 * C4883 + C36215 * C5219 + C36369 * C4882 + C36214 * C5218 +
             C36368 * C806 + C36213 * C1023 + C36367 * C805 + C36212 * C1022) *
                C2849) +
           (C36367 * C3587 + C36212 * C3805 + C36368 * C5958 + C36213 * C6207 +
            C36369 * C8780 + C36214 * C9096 + C36370 * C39126 +
            C36215 * C39350) *
               C2710) *
              C92148 * C92062 * C1986) *
         C92078) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31487 * C107 + C31260 * C308 + C31488 * C805 + C92186 * C1022) *
                C2849 +
            (C31487 * C245 + C31260 * C474 + C31488 * C956 + C92186 * C1146) *
                C2709 -
            (C31488 * C3431 + C92186 * C3661 + C31487 * C1389 +
             C31260 * C1606) *
                C2850 -
            (C31488 * C3587 + C92186 * C3805 + C31487 * C1540 +
             C31260 * C1727) *
                C2710) *
               C92148 * C31257 +
           ((C31515 + C31514) * C2849 + (C31712 + C31713) * C2709 -
            (C34723 + C34722) * C2850 - (C34946 + C34947) * C2710) *
               C92148 * C31258 +
           (C31526 * C2849 + C31718 * C2709 - (C34727 + C34726) * C2850 -
            (C34948 + C34949) * C2710) *
               C92148 * C31259) *
              C1985 +
          (((C31487 * C3431 + C31260 * C3661 + C31488 * C5772 +
             C92186 * C6042) *
                C2850 -
            ((C31488 * C957 + C92186 * C1147 + C31487 * C956 + C31260 * C1146) *
                 C2709 +
             (C31488 * C806 + C92186 * C1023 + C31487 * C805 + C31260 * C1022) *
                 C2849) +
            (C31487 * C3587 + C31260 * C3805 + C31488 * C5958 +
             C92186 * C6207) *
                C2710) *
               C92148 * C31257 +
           ((C31487 * C3432 + C31260 * C3662 + C31488 * C5771 +
             C92186 * C6041) *
                C2850 -
            ((C34018 + C34019) * C2709 + (C33793 + C33792) * C2849) +
            (C31487 * C3588 + C31260 * C3806 + C31488 * C5957 +
             C92186 * C6210) *
                C2710) *
               C92148 * C31258 +
           ((C31487 * C3433 + C31260 * C3663 + C31488 * C7566 +
             C92186 * C7868) *
                C2850 -
            ((C34016 + C34017) * C2709 + (C33797 + C33796) * C2849) +
            (C31487 * C3589 + C31260 * C3807 + C31488 * C7768 +
             C92186 * C8094) *
                C2710) *
               C92148 * C31259) *
              C1986) *
         C92078) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C31487 * C107 + C31260 * C308 + C31488 * C805 + C92186 * C1022) *
                C2849 +
            (C31487 * C245 + C31260 * C474 + C31488 * C956 + C92186 * C1146) *
                C2709 -
            (C41421 + C41420) * C2850 - (C41621 + C41622) * C2710) *
               C9514 +
           ((C41420 + C41421) * C2849 + (C41622 + C41621) * C2709 -
            (C41425 + C41424) * C2850 - (C41624 + C41623) * C2710) *
               C9515 +
           (C41432 * C2849 + C41627 * C2709 - (C41430 + C41431) * C2850 -
            (C41626 + C41625) * C2710) *
               C9516) *
              C92062 * C1985 +
          (((C44163 + C44164) * C2850 -
            ((C31488 * C957 + C92186 * C1147 + C31487 * C956 + C31260 * C1146) *
                 C2709 +
             (C31488 * C806 + C92186 * C1023 + C31487 * C805 + C31260 * C1022) *
                 C2849) +
            (C44389 + C44390) * C2710) *
               C9514 +
           ((C44167 + C44168) * C2850 -
            ((C44390 + C44389) * C2709 + (C44164 + C44163) * C2849) +
            (C44391 + C44392) * C2710) *
               C9515 +
           ((C31487 * C13849 + C31260 * C14183 + C31488 * C43815 +
             C92186 * C44144) *
                C2850 -
            ((C44392 + C44391) * C2709 + (C44168 + C44167) * C2849) +
            (C31487 * C14075 + C31260 * C14419 + C31488 * C44036 +
             C92186 * C44379) *
                C2710) *
               C9516) *
              C92062 * C1986) *
         C92078) /
            (p * q * std::sqrt(p + q));
    d2eezx[36] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((((C554 * C107 + C92148 * C555) * C801 +
                       (C554 * C117 + C92148 * C561) * C92078) *
                          C92062 * C36212 +
                      (C5493 + C5494) * C92062 * C36213 + C37054 * C36214 +
                      C37060 * C36215) *
                         C2709 -
                     ((C39426 + C39427) * C92062 * C36215 +
                      (C9217 + C9218) * C92062 * C36214 +
                      (C9219 + C9220) * C92062 * C36213 +
                      ((C554 * C1397 + C92148 * C1796) * C92078 +
                       (C554 * C1389 + C92148 * C1788) * C801) *
                          C92062 * C36212) *
                         C2710) *
                        C1985 +
                    (((C9220 + C9219) * C92062 * C36212 +
                      (C9218 + C9217) * C92062 * C36213 +
                      (C39427 + C39426) * C92062 * C36214 +
                      ((C554 * C38955 + C92148 * C39417) * C801 +
                       (C554 * C38957 + C92148 * C39418) * C92078) *
                          C92062 * C36215) *
                         C2710 -
                     ((C37063 + C37064) * C92062 * C36215 +
                      (C5500 + C5501) * C92062 * C36214 +
                      (C5496 + C5495) * C92062 * C36213 +
                      (C5494 + C5493) * C92062 * C36212) *
                         C2709) *
                        C1986)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((((C554 * C107 + C92148 * C555) * C801 +
                        (C554 * C117 + C92148 * C561) * C92078) *
                           C31257 +
                       (C584 * C801 + C585 * C92078) * C31258 +
                       (C586 * C801 + C587 * C92078) * C31259) *
                          C31260 +
                      ((C5493 + C5494) * C31257 + (C5468 + C5469) * C31258 +
                       (C16084 + C16085) * C31259) *
                          C92186) *
                         C2709 -
                     (((C19547 + C19548) * C31259 + (C9207 + C9208) * C31258 +
                       (C9219 + C9220) * C31257) *
                          C92186 +
                      ((C3193 * C92078 + C3192 * C801) * C31259 +
                       (C3191 * C92078 + C3190 * C801) * C31258 +
                       ((C554 * C1397 + C92148 * C1796) * C92078 +
                        (C554 * C1389 + C92148 * C1788) * C801) *
                           C31257) *
                          C31260) *
                         C2710) *
                        C1985 +
                    ((((C9220 + C9219) * C31257 + (C9208 + C9207) * C31258 +
                       (C19548 + C19547) * C31259) *
                          C31260 +
                      ((C9218 + C9217) * C31257 + (C9202 + C9201) * C31258 +
                       ((C554 * C7566 + C92148 * C8202) * C801 +
                        (C554 * C7568 + C92148 * C8203) * C92078) *
                           C31259) *
                          C92186) *
                         C2710 -
                     (((C16086 + C16087) * C31259 + (C5475 + C5474) * C31258 +
                       (C5496 + C5495) * C31257) *
                          C92186 +
                      ((C16085 + C16084) * C31259 + (C5469 + C5468) * C31258 +
                       (C5494 + C5493) * C31257) *
                          C31260) *
                         C2709) *
                        C1986)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C9997 * C107 + C9514 * C555 + C9998 * C1389 +
                        C9515 * C1788 + C9999 * C1390 + C9516 * C1789) *
                           C801 +
                       (C9997 * C117 + C9514 * C561 + C9998 * C1397 +
                        C9515 * C1796 + C9999 * C1406 + C9516 * C1797) *
                           C92078) *
                          C92062 * C31260 +
                      ((C40816 + C40817 + C40818) * C801 +
                       (C40819 + C40820 + C40821) * C92078) *
                          C92062 * C92186) *
                         C2709 -
                     (((C44505 + C44506 + C44507) * C92078 +
                       (C44508 + C44509 + C44510) * C801) *
                          C92062 * C92186 +
                      ((C9999 * C10965 + C9516 * C11613 + C9998 * C1406 +
                        C9515 * C1797 + C9997 * C1397 + C9514 * C1796) *
                           C92078 +
                       (C9999 * C10961 + C9516 * C11609 + C9998 * C1390 +
                        C9515 * C1789 + C9997 * C1389 + C9514 * C1788) *
                           C801) *
                          C92062 * C31260) *
                         C2710) *
                        C1985 +
                    ((((C44510 + C44509 + C44508) * C801 +
                       (C44507 + C44506 + C44505) * C92078) *
                          C92062 * C31260 +
                      ((C9997 * C5772 + C9514 * C6288 + C9998 * C5775 +
                        C9515 * C6291 + C9999 * C43815 + C9516 * C44490) *
                           C801 +
                       (C9997 * C5778 + C9514 * C6294 + C9998 * C5787 +
                        C9515 * C6297 + C9999 * C43817 + C9516 * C44491) *
                           C92078) *
                          C92062 * C92186) *
                         C2710 -
                     (((C40822 + C40823 + C40824) * C92078 +
                       (C40825 + C40826 + C40827) * C801) *
                          C92062 * C92186 +
                      ((C40821 + C40820 + C40819) * C92078 +
                       (C40818 + C40817 + C40816) * C801) *
                          C92062 * C31260) *
                         C2709) *
                        C1986)) /
                      (p * q * std::sqrt(p + q));
    d2eezy[36] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92148 * C555) * C2059 +
            (C554 * C182 + C92148 * C641) * C1985 - C5484 * C2060 -
            C5591 * C1986) *
               C92062 * C36212 +
           (C5484 * C2059 + C5591 * C1985 - C5486 * C2060 - C5592 * C1986) *
               C92062 * C36213 +
           (C5486 * C2059 + C5592 * C1985 - C5492 * C2060 - C5593 * C1986) *
               C92062 * C36214 +
           (C5492 * C2059 + C5593 * C1985 - C37062 * C2060 - C37118 * C1986) *
               C92062 * C36215) *
              C92078 * C2709 +
          ((C9216 * C2060 -
            ((C554 * C1471 + C92148 * C1854) * C1985 +
             (C554 * C1389 + C92148 * C1788) * C2059) +
            C9325 * C1986) *
               C92062 * C36212 +
           (C9214 * C2060 - (C9325 * C1985 + C9216 * C2059) + C9326 * C1986) *
               C92062 * C36213 +
           (C39425 * C2060 - (C9326 * C1985 + C9214 * C2059) + C39497 * C1986) *
               C92062 * C36214 +
           ((C554 * C38955 + C92148 * C39417) * C2060 -
            (C39497 * C1985 + C39425 * C2059) +
            (C554 * C39049 + C92148 * C39493) * C1986) *
               C92062 * C36215) *
              C92078 * C2710)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92148 * C555) * C2059 +
             (C554 * C182 + C92148 * C641) * C1985 - C5484 * C2060 -
             C5591 * C1986) *
                C31257 +
            (C2541 + C2542 - C2543 - C2559) * C31258 +
            (C2546 + C2547 - C2548 - C2560) * C31259) *
               C31260 +
           ((C5484 * C2059 + C5591 * C1985 - C5486 * C2060 - C5592 * C1986) *
                C31257 +
            (C7359 + C7360 - C7361 - C7362) * C31258 +
            (C17774 + C17775 - C17776 - C17777) * C31259) *
               C92186) *
              C92078 * C2709 +
          (((C9216 * C2060 -
             ((C554 * C1471 + C92148 * C1854) * C1985 +
              (C554 * C1389 + C92148 * C1788) * C2059) +
             C9325 * C1986) *
                C31257 +
            (C8213 * C2060 - (C3272 * C1985 + C3190 * C2059) + C8322 * C1986) *
                C31258 +
            (C18615 * C2060 - (C3273 * C1985 + C3192 * C2059) +
             C18718 * C1986) *
                C31259) *
               C31260 +
           ((C9214 * C2060 - (C9325 * C1985 + C9216 * C2059) + C9326 * C1986) *
                C31257 +
            (C8215 * C2060 - (C8322 * C1985 + C8213 * C2059) + C8323 * C1986) *
                C31258 +
            ((C554 * C7566 + C92148 * C8202) * C2060 -
             (C18718 * C1985 + C18615 * C2059) +
             (C554 * C7668 + C92148 * C8314) * C1986) *
                C31259) *
               C92186) *
              C92078 * C2710)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C9997 * C107 + C9514 * C555 + C9998 * C1389 + C9515 * C1788 +
             C9999 * C1390 + C9516 * C1789) *
                C2059 +
            (C9997 * C182 + C9514 * C641 + C9998 * C1471 + C9515 * C1854 +
             C9999 * C1472 + C9516 * C1855) *
                C1985 -
            (C40818 + C40817 + C40816) * C2060 -
            (C40914 + C40915 + C40916) * C1986) *
               C92062 * C31260 +
           ((C40816 + C40817 + C40818) * C2059 +
            (C40916 + C40915 + C40914) * C1985 -
            (C40825 + C40826 + C40827) * C2060 -
            (C40919 + C40918 + C40917) * C1986) *
               C92062 * C92186) *
              C92078 * C2709 +
          (((C44510 + C44509 + C44508) * C2060 -
            ((C9999 * C11093 + C9516 * C11691 + C9998 * C1472 + C9515 * C1855 +
              C9997 * C1471 + C9514 * C1854) *
                 C1985 +
             (C9999 * C10961 + C9516 * C11609 + C9998 * C1390 + C9515 * C1789 +
              C9997 * C1389 + C9514 * C1788) *
                 C2059) +
            (C44616 + C44617 + C44618) * C1986) *
               C92062 * C31260 +
           ((C9997 * C5772 + C9514 * C6288 + C9998 * C5775 + C9515 * C6291 +
             C9999 * C43815 + C9516 * C44490) *
                C2060 -
            ((C44618 + C44617 + C44616) * C1985 +
             (C44508 + C44509 + C44510) * C2059) +
            (C9997 * C5870 + C9514 * C6374 + C9998 * C5873 + C9515 * C6377 +
             C9999 * C43920 + C9516 * C44608) *
                C1986) *
               C92062 * C92186) *
              C92078 * C2710)) /
            (p * q * std::sqrt(p + q));
    d2eezz[36] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C554 * C107 + C92148 * C555) * C2849 +
                      (C554 * C245 + C92148 * C719) * C2709 -
                      (C554 * C1389 + C92148 * C1788) * C2850 -
                      (C554 * C1540 + C92148 * C1909) * C2710) *
                         C92062 * C36212 +
                     (C9427 + C9428 - C9429 - C9439) * C92062 * C36213 +
                     (C9432 + C9433 - C9434 - C9440) * C92062 * C36214 +
                     (C39565 + C39566 - C39567 - C39571) * C92062 * C36215) *
                        C1985 +
                    ((C9429 - (C9428 + C9427) + C9439) * C92062 * C36212 +
                     (C9434 - (C9433 + C9432) + C9440) * C92062 * C36213 +
                     (C39567 - (C39566 + C39565) + C39571) * C92062 * C36214 +
                     ((C554 * C38955 + C92148 * C39417) * C2850 -
                      (C37176 * C2709 + C37062 * C2849) +
                      (C554 * C39126 + C92148 * C39563) * C2710) *
                         C92062 * C36215) *
                        C1986) *
                   C92078) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((((C554 * C107 + C92148 * C555) * C2849 +
                       (C554 * C245 + C92148 * C719) * C2709 -
                       (C554 * C1389 + C92148 * C1788) * C2850 -
                       (C554 * C1540 + C92148 * C1909) * C2710) *
                          C31257 +
                      (C3345 + C3346 - C3347 - C3363) * C31258 +
                      (C3350 + C3351 - C3352 - C3364) * C31259) *
                         C31260 +
                     ((C9427 + C9428 - C9429 - C9439) * C31257 +
                      (C8425 + C8426 - C8427 - C8437) * C31258 +
                      (C18818 + C18819 - C18820 - C18824) * C31259) *
                         C92186) *
                        C1985 +
                    (((C9429 - (C9428 + C9427) + C9439) * C31257 +
                      (C8427 - (C8426 + C8425) + C8437) * C31258 +
                      (C18820 - (C18819 + C18818) + C18824) * C31259) *
                         C31260 +
                     ((C9434 - (C9433 + C9432) + C9440) * C31257 +
                      (C8432 - (C8431 + C8430) + C8438) * C31258 +
                      ((C554 * C7566 + C92148 * C8202) * C2850 -
                       (C4805 * C2709 + C4634 * C2849) +
                       (C554 * C7768 + C92148 * C8423) * C2710) *
                          C31259) *
                         C92186) *
                        C1986) *
                   C92078) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C9997 * C107 + C9514 * C555 + C9998 * C1389 +
                       C9515 * C1788 + C9999 * C1390 + C9516 * C1789) *
                          C2849 +
                      (C9997 * C245 + C9514 * C719 + C9998 * C1540 +
                       C9515 * C1909 + C9999 * C1541 + C9516 * C1910) *
                          C2709 -
                      (C9999 * C10961 + C9516 * C11609 + C9998 * C1390 +
                       C9515 * C1789 + C9997 * C1389 + C9514 * C1788) *
                          C2850 -
                      (C9999 * C11197 + C9516 * C11768 + C9998 * C1541 +
                       C9515 * C1910 + C9997 * C1540 + C9514 * C1909) *
                          C2710) *
                         C92062 * C31260 +
                     ((C40816 + C40817 + C40818) * C2849 +
                      (C41006 + C41007 + C41008) * C2709 -
                      (C44508 + C44509 + C44510) * C2850 -
                      (C44724 + C44725 + C44726) * C2710) *
                         C92062 * C92186) *
                        C1985 +
                    (((C44510 + C44509 + C44508) * C2850 -
                      ((C41008 + C41007 + C41006) * C2709 +
                       (C40818 + C40817 + C40816) * C2849) +
                      (C44726 + C44725 + C44724) * C2710) *
                         C92062 * C31260 +
                     ((C9997 * C5772 + C9514 * C6288 + C9998 * C5775 +
                       C9515 * C6291 + C9999 * C43815 + C9516 * C44490) *
                          C2850 -
                      ((C41009 + C41010 + C41011) * C2709 +
                       (C40825 + C40826 + C40827) * C2849) +
                      (C9997 * C5958 + C9514 * C6455 + C9998 * C5959 +
                       C9515 * C6456 + C9999 * C44036 + C9516 * C44716) *
                          C2710) *
                         C92062 * C92186) *
                        C1986) *
                   C92078) /
                      (p * q * std::sqrt(p + q));
    d2eexx[37] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((C31262 * C107 + C31257 * C113 + C31263 * C108 + C31258 * C114 +
                C31264 * C109 + C31259 * C115) *
                   C104 +
               (C31262 * C117 + C31257 * C125 + C31263 * C118 + C31258 * C126 +
                C31264 * C119 + C31259 * C127) *
                   C93 -
               (C31264 * C110 + C31259 * C116 + C31263 * C109 + C31258 * C115 +
                C31262 * C108 + C31257 * C114) *
                   C105 -
               (C31264 * C120 + C31259 * C128 + C31263 * C119 + C31258 * C127 +
                C31262 * C118 + C31257 * C126) *
                   C94 +
               (C31262 * C109 + C31257 * C115 + C31263 * C110 + C31258 * C116 +
                C31264 * C111 + C31259 * C121) *
                   C106 +
               (C31262 * C119 + C31257 * C127 + C31263 * C120 + C31258 * C128 +
                C31264 * C122 + C31259 * C129) *
                   C95) *
                  C31260 +
              ((C31262 * C805 + C31257 * C817 + C31263 * C804 + C31258 * C816 +
                C31264 * C803 + C31259 * C815) *
                   C104 +
               (C31262 * C813 + C31257 * C829 + C31263 * C812 + C31258 * C828 +
                C31264 * C811 + C31259 * C827) *
                   C93 -
               (C31264 * C802 + C31259 * C814 + C31263 * C803 + C31258 * C815 +
                C31262 * C804 + C31257 * C816) *
                   C105 -
               (C31264 * C810 + C31259 * C826 + C31263 * C811 + C31258 * C827 +
                C31262 * C812 + C31257 * C828) *
                   C94 +
               (C31262 * C803 + C31257 * C815 + C31263 * C802 + C31258 * C814 +
                C31264 * C1989 + C31259 * C1990) *
                   C106 +
               (C31262 * C811 + C31257 * C827 + C31263 * C810 + C31258 * C826 +
                C31264 * C1991 + C31259 * C1992) *
                   C95) *
                  C92186) *
             C92148 * C92110 * C92099 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C31262 * C107 + C31257 * C113 + C31263 * C108 + C31258 * C114 +
                 C31264 * C109 + C31259 * C115) *
                    C801 +
                (C31262 * C117 + C31257 * C125 + C31263 * C118 + C31258 * C126 +
                 C31264 * C119 + C31259 * C127) *
                    C92078) *
                   C31260 +
               ((C32042 + C32043 + C32044) * C801 +
                (C32045 + C32046 + C32047) * C92078) *
                   C92186) *
                  C92148 * C92110 * C798 -
              (((C32048 + C32049 + C32050) * C92078 +
                (C32051 + C32052 + C32053) * C801) *
                   C92186 +
               ((C32047 + C32046 + C32045) * C92078 +
                (C32044 + C32043 + C32042) * C801) *
                   C31260) *
                  C92148 * C92110 * C799 +
              (((C32053 + C32052 + C32051) * C801 +
                (C32050 + C32049 + C32048) * C92078) *
                   C31260 +
               ((C31262 * C4882 + C31257 * C4888 + C31263 * C4881 +
                 C31258 * C4887 + C31264 * C6557 + C31259 * C6558) *
                    C801 +
                (C31262 * C4886 + C31257 * C4894 + C31263 * C4885 +
                 C31258 * C4893 + C31264 * C6559 + C31259 * C6560) *
                    C92078) *
                   C92186) *
                  C92148 * C92110 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C31262 * C107 + C31257 * C113 + C31263 * C108 + C31258 * C114 +
             C31264 * C109 + C31259 * C115) *
                C801 +
            (C31262 * C117 + C31257 * C125 + C31263 * C118 + C31258 * C126 +
             C31264 * C119 + C31259 * C127) *
                C92078) *
               C31260 +
           ((C32042 + C32043 + C32044) * C801 +
            (C32045 + C32046 + C32047) * C92078) *
               C92186) *
              C92148 * C1383 -
          (((C31264 * C3441 + C31259 * C3445 + C31263 * C3440 + C31258 * C3444 +
             C31262 * C3439 + C31257 * C3443) *
                C92078 +
            (C31264 * C3433 + C31259 * C3437 + C31263 * C3432 + C31258 * C3436 +
             C31262 * C3431 + C31257 * C3435) *
                C801) *
               C92186 +
           ((C31264 * C1395 + C31259 * C1411 + C31263 * C1396 + C31258 * C1412 +
             C31262 * C1397 + C31257 * C1413) *
                C92078 +
            (C31264 * C1387 + C31259 * C1399 + C31263 * C1388 + C31258 * C1400 +
             C31262 * C1389 + C31257 * C1401) *
                C801) *
               C31260) *
              C92148 * C1384 +
          (((C31262 * C1390 + C31257 * C1402 + C31263 * C1391 + C31258 * C1403 +
             C31264 * C1392 + C31259 * C1404) *
                C801 +
            (C31262 * C1406 + C31257 * C1414 + C31263 * C1407 + C31258 * C1415 +
             C31264 * C1408 + C31259 * C1416) *
                C92078) *
               C31260 +
           ((C31262 * C5773 + C31257 * C5781 + C31263 * C5774 + C31258 * C5782 +
             C31264 * C11870 + C31259 * C11871) *
                C801 +
            (C31262 * C5783 + C31257 * C5791 + C31263 * C5784 + C31258 * C5792 +
             C31264 * C11872 + C31259 * C11873) *
                C92078) *
               C92186) *
              C92148 * C1385) *
         C92099) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C36216 * C107 + C92062 * C113) * C104 +
           (C36216 * C117 + C92062 * C125) * C93 -
           (C36216 * C108 + C92062 * C114) * C105 -
           (C36216 * C118 + C92062 * C126) * C94 +
           (C36216 * C109 + C92062 * C115) * C106 +
           (C36216 * C119 + C92062 * C127) * C95) *
              C36212 +
          ((C36216 * C805 + C92062 * C817) * C104 +
           (C36216 * C813 + C92062 * C829) * C93 -
           (C36216 * C804 + C92062 * C816) * C105 -
           (C36216 * C812 + C92062 * C828) * C94 +
           (C36216 * C803 + C92062 * C815) * C106 +
           (C36216 * C811 + C92062 * C827) * C95) *
              C36213 +
          ((C36216 * C806 + C92062 * C818) * C104 +
           (C36216 * C822 + C92062 * C830) * C93 -
           (C36216 * C807 + C92062 * C819) * C105 -
           (C36216 * C823 + C92062 * C831) * C94 +
           (C36216 * C808 + C92062 * C820) * C106 +
           (C36216 * C824 + C92062 * C832) * C95) *
              C36214 +
          ((C36216 * C4882 + C92062 * C4888) * C104 +
           (C36216 * C4886 + C92062 * C4894) * C93 -
           (C36216 * C4881 + C92062 * C4887) * C105 -
           (C36216 * C4885 + C92062 * C4893) * C94 +
           (C36216 * C6557 + C92062 * C6558) * C106 +
           (C36216 * C6559 + C92062 * C6560) * C95) *
              C36215) *
         C92148 * C92110 * C92099) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C36216 * C107 + C92062 * C113) * C801 +
            (C36216 * C117 + C92062 * C125) * C92078) *
               C36212 +
           (C36700 + C36701) * C36213 + C36708 * C36214 + C36709 * C36215) *
              C92148 * C92110 * C798 -
          ((C36706 + C36707) * C36215 + (C36705 + C36704) * C36214 +
           (C36703 + C36702) * C36213 + (C36701 + C36700) * C36212) *
              C92148 * C92110 * C799 +
          (C36708 * C36212 + C36709 * C36213 + (C36707 + C36706) * C36214 +
           ((C36216 * C36671 + C92062 * C36672) * C801 +
            (C36216 * C36673 + C92062 * C36674) * C92078) *
               C36215) *
              C92148 * C92110 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C36216 * C107 + C92062 * C113) * C801 +
            (C36216 * C117 + C92062 * C125) * C92078) *
               C36212 +
           (C36700 + C36701) * C36213 + C36708 * C36214 + C36709 * C36215) *
              C92148 * C1383 -
          (((C36216 * C8540 + C92062 * C8542) * C92078 +
            (C36216 * C8536 + C92062 * C8538) * C801) *
               C36215 +
           ((C36216 * C5778 + C92062 * C5790) * C92078 +
            (C36216 * C5772 + C92062 * C5780) * C801) *
               C36214 +
           ((C36216 * C3439 + C92062 * C3443) * C92078 +
            (C36216 * C3431 + C92062 * C3435) * C801) *
               C36213 +
           ((C36216 * C1397 + C92062 * C1413) * C92078 +
            (C36216 * C1389 + C92062 * C1401) * C801) *
               C36212) *
              C92148 * C1384 +
          (((C36216 * C1390 + C92062 * C1402) * C801 +
            (C36216 * C1406 + C92062 * C1414) * C92078) *
               C36212 +
           ((C36216 * C5773 + C92062 * C5781) * C801 +
            (C36216 * C5783 + C92062 * C5791) * C92078) *
               C36213 +
           ((C36216 * C5775 + C92062 * C5785) * C801 +
            (C36216 * C5787 + C92062 * C5793) * C92078) *
               C36214 +
           ((C36216 * C37227 + C92062 * C37228) * C801 +
            (C36216 * C37229 + C92062 * C37230) * C92078) *
               C36215) *
              C92148 * C1385) *
         C92099) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C36216 * C107 + C92062 * C113) * C104 +
            (C36216 * C117 + C92062 * C125) * C93 -
            (C36216 * C108 + C92062 * C114) * C105 -
            (C36216 * C118 + C92062 * C126) * C94 +
            (C36216 * C109 + C92062 * C115) * C106 +
            (C36216 * C119 + C92062 * C127) * C95) *
               C31260 +
           (C36692 * C104 + C36693 * C93 - C37728 * C105 - C37729 * C94 +
            (C36216 * C803 + C92062 * C815) * C106 +
            (C36216 * C811 + C92062 * C827) * C95) *
               C92186) *
              C9514 +
          (((C36216 * C1389 + C92062 * C1401) * C104 +
            (C36216 * C1397 + C92062 * C1413) * C93 -
            (C36216 * C1388 + C92062 * C1400) * C105 -
            (C36216 * C1396 + C92062 * C1412) * C94 +
            (C36216 * C1387 + C92062 * C1399) * C106 +
            (C36216 * C1395 + C92062 * C1411) * C95) *
               C31260 +
           (C38977 * C104 + C38976 * C93 -
            (C36216 * C3432 + C92062 * C3436) * C105 -
            (C36216 * C3440 + C92062 * C3444) * C94 +
            (C36216 * C3433 + C92062 * C3437) * C106 +
            (C36216 * C3441 + C92062 * C3445) * C95) *
               C92186) *
              C9515 +
          (((C36216 * C1390 + C92062 * C1402) * C104 +
            (C36216 * C1406 + C92062 * C1414) * C93 -
            (C36216 * C1391 + C92062 * C1403) * C105 -
            (C36216 * C1407 + C92062 * C1415) * C94 +
            (C36216 * C1392 + C92062 * C1404) * C106 +
            (C36216 * C1408 + C92062 * C1416) * C95) *
               C31260 +
           ((C36216 * C5773 + C92062 * C5781) * C104 +
            (C36216 * C5783 + C92062 * C5791) * C93 -
            (C36216 * C5774 + C92062 * C5782) * C105 -
            (C36216 * C5784 + C92062 * C5792) * C94 +
            (C36216 * C11870 + C92062 * C11871) * C106 +
            (C36216 * C11872 + C92062 * C11873) * C95) *
               C92186) *
              C9516) *
         C92110 * C92099) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C36216 * C107 + C92062 * C113) * C801 +
             (C36216 * C117 + C92062 * C125) * C92078) *
                C31260 +
            (C36700 + C36701) * C92186) *
               C9514 +
           (((C36216 * C1389 + C92062 * C1401) * C801 +
             (C36216 * C1397 + C92062 * C1413) * C92078) *
                C31260 +
            (C38983 + C38982) * C92186) *
               C9515 +
           (((C36216 * C1390 + C92062 * C1402) * C801 +
             (C36216 * C1406 + C92062 * C1414) * C92078) *
                C31260 +
            (C40324 + C40325) * C92186) *
               C9516) *
              C92110 * C798 -
          (((C40326 + C40327) * C92186 + (C40325 + C40324) * C31260) * C9516 +
           ((C38980 + C38981) * C92186 + (C38982 + C38983) * C31260) * C9515 +
           ((C36703 + C36702) * C92186 + (C36701 + C36700) * C31260) * C9514) *
              C92110 * C799 +
          ((C36708 * C31260 + C36709 * C92186) * C9514 +
           ((C38981 + C38980) * C31260 + (C38979 + C38978) * C92186) * C9515 +
           ((C40327 + C40326) * C31260 +
            ((C36216 * C37227 + C92062 * C37228) * C801 +
             (C36216 * C37229 + C92062 * C37230) * C92078) *
                C92186) *
               C9516) *
              C92110 * C800)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C36216 * C107 + C92062 * C113) * C801 +
             (C36216 * C117 + C92062 * C125) * C92078) *
                C31260 +
            (C36700 + C36701) * C92186) *
               C9514 +
           ((C41116 + C41117) * C31260 + (C38983 + C38982) * C92186) * C9515 +
           C41126 * C9516) *
              C1383 -
          (((C41120 + C41121) * C92186 + (C41122 + C41123) * C31260) * C9516 +
           ((C40325 + C40324) * C92186 + (C41119 + C41118) * C31260) * C9515 +
           ((C38982 + C38983) * C92186 + (C41117 + C41116) * C31260) * C9514) *
              C1384 +
          (C41126 * C9514 +
           ((C41123 + C41122) * C31260 + (C41121 + C41120) * C92186) * C9515 +
           (((C36216 * C10962 + C92062 * C10968) * C801 +
             (C36216 * C10970 + C92062 * C10974) * C92078) *
                C31260 +
            ((C36216 * C41085 + C92062 * C41086) * C801 +
             (C36216 * C41087 + C92062 * C41088) * C92078) *
                C92186) *
               C9516) *
              C1385) *
         C92099) /
            (p * q * std::sqrt(p + q));
    d2eexy[37] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C31262 * C107 + C31257 * C113 + C31263 * C108 + C31258 * C114 +
                 C31264 * C109 + C31259 * C115) *
                    C181 +
                (C31262 * C182 + C31257 * C188 + C31263 * C183 + C31258 * C189 +
                 C31264 * C184 + C31259 * C190) *
                    C92099) *
                   C31260 +
               ((C31262 * C805 + C31257 * C817 + C31263 * C804 + C31258 * C816 +
                 C31264 * C803 + C31259 * C815) *
                    C181 +
                (C31262 * C890 + C31257 * C898 + C31263 * C889 + C31258 * C897 +
                 C31264 * C888 + C31259 * C896) *
                    C92099) *
                   C92186) *
                  C92148 * C93 -
              (((C31264 * C887 + C31259 * C895 + C31263 * C888 + C31258 * C896 +
                 C31262 * C889 + C31257 * C897) *
                    C92099 +
                (C31264 * C802 + C31259 * C814 + C31263 * C803 + C31258 * C815 +
                 C31262 * C804 + C31257 * C816) *
                    C181) *
                   C92186 +
               ((C31264 * C185 + C31259 * C191 + C31263 * C184 + C31258 * C190 +
                 C31262 * C183 + C31257 * C189) *
                    C92099 +
                (C31264 * C110 + C31259 * C116 + C31263 * C109 + C31258 * C115 +
                 C31262 * C108 + C31257 * C114) *
                    C181) *
                   C31260) *
                  C92148 * C94 +
              (((C31262 * C109 + C31257 * C115 + C31263 * C110 + C31258 * C116 +
                 C31264 * C111 + C31259 * C121) *
                    C181 +
                (C31262 * C184 + C31257 * C190 + C31263 * C185 + C31258 * C191 +
                 C31264 * C186 + C31259 * C192) *
                    C92099) *
                   C31260 +
               ((C31262 * C803 + C31257 * C815 + C31263 * C802 + C31258 * C814 +
                 C31264 * C1989 + C31259 * C1990) *
                    C181 +
                (C31262 * C888 + C31257 * C896 + C31263 * C887 + C31258 * C895 +
                 C31264 * C2061 + C31259 * C2062) *
                    C92099) *
                   C92186) *
                  C92148 * C95) *
             C92110 +
         0.5 * std::pow(Pi, 2.5) *
             (((C31262 * C107 + C31257 * C113 + C31263 * C108 + C31258 * C114 +
                C31264 * C109 + C31259 * C115) *
                   C884 +
               (C31262 * C182 + C31257 * C188 + C31263 * C183 + C31258 * C189 +
                C31264 * C184 + C31259 * C190) *
                   C798 -
               (C32044 + C32043 + C32042) * C885 -
               (C32140 + C32141 + C32142) * C799 +
               (C32053 + C32052 + C32051) * C886 +
               (C32143 + C32144 + C32145) * C800) *
                  C31260 +
              ((C32042 + C32043 + C32044) * C884 +
               (C32142 + C32141 + C32140) * C798 -
               (C32051 + C32052 + C32053) * C885 -
               (C32145 + C32144 + C32143) * C799 +
               (C31262 * C4882 + C31257 * C4888 + C31263 * C4881 +
                C31258 * C4887 + C31264 * C6557 + C31259 * C6558) *
                   C886 +
               (C31262 * C5012 + C31257 * C5016 + C31263 * C5013 +
                C31258 * C5017 + C31264 * C6683 + C31259 * C6684) *
                   C800) *
                  C92186) *
             C92148 * C92078 * C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C31262 * C107 + C31257 * C113 + C31263 * C108 + C31258 * C114 +
             C31264 * C109 + C31259 * C115) *
                C181 +
            (C31262 * C182 + C31257 * C188 + C31263 * C183 + C31258 * C189 +
             C31264 * C184 + C31259 * C190) *
                C92099) *
               C31260 +
           ((C32042 + C32043 + C32044) * C181 +
            (C32142 + C32141 + C32140) * C92099) *
               C92186) *
              C92148 * C92078 * C1383 -
          (((C31264 * C3515 + C31259 * C3519 + C31263 * C3514 + C31258 * C3518 +
             C31262 * C3513 + C31257 * C3517) *
                C92099 +
            (C31264 * C3433 + C31259 * C3437 + C31263 * C3432 + C31258 * C3436 +
             C31262 * C3431 + C31257 * C3435) *
                C181) *
               C92186 +
           ((C31264 * C1469 + C31259 * C1477 + C31263 * C1470 + C31258 * C1478 +
             C31262 * C1471 + C31257 * C1479) *
                C92099 +
            (C31264 * C1387 + C31259 * C1399 + C31263 * C1388 + C31258 * C1400 +
             C31262 * C1389 + C31257 * C1401) *
                C181) *
               C31260) *
              C92148 * C92078 * C1384 +
          (((C31262 * C1390 + C31257 * C1402 + C31263 * C1391 + C31258 * C1403 +
             C31264 * C1392 + C31259 * C1404) *
                C181 +
            (C31262 * C1472 + C31257 * C1480 + C31263 * C1473 + C31258 * C1481 +
             C31264 * C1474 + C31259 * C1482) *
                C92099) *
               C31260 +
           ((C31262 * C5773 + C31257 * C5781 + C31263 * C5774 + C31258 * C5782 +
             C31264 * C11870 + C31259 * C11871) *
                C181 +
            (C31262 * C5871 + C31257 * C5877 + C31263 * C5872 + C31258 * C5878 +
             C31264 * C11972 + C31259 * C11973) *
                C92099) *
               C92186) *
              C92148 * C92078 * C1385)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C36216 * C107 + C92062 * C113) * C181 +
            (C36216 * C182 + C92062 * C188) * C92099) *
               C36212 +
           ((C36216 * C805 + C92062 * C817) * C181 +
            (C36216 * C890 + C92062 * C898) * C92099) *
               C36213 +
           ((C36216 * C806 + C92062 * C818) * C181 +
            (C36216 * C891 + C92062 * C899) * C92099) *
               C36214 +
           ((C36216 * C4882 + C92062 * C4888) * C181 +
            (C36216 * C5012 + C92062 * C5016) * C92099) *
               C36215) *
              C92148 * C93 -
          (((C36216 * C5013 + C92062 * C5017) * C92099 +
            (C36216 * C4881 + C92062 * C4887) * C181) *
               C36215 +
           ((C36216 * C892 + C92062 * C900) * C92099 +
            (C36216 * C807 + C92062 * C819) * C181) *
               C36214 +
           ((C36216 * C889 + C92062 * C897) * C92099 +
            (C36216 * C804 + C92062 * C816) * C181) *
               C36213 +
           ((C36216 * C183 + C92062 * C189) * C92099 +
            (C36216 * C108 + C92062 * C114) * C181) *
               C36212) *
              C92148 * C94 +
          (((C36216 * C109 + C92062 * C115) * C181 +
            (C36216 * C184 + C92062 * C190) * C92099) *
               C36212 +
           ((C36216 * C803 + C92062 * C815) * C181 +
            (C36216 * C888 + C92062 * C896) * C92099) *
               C36213 +
           ((C36216 * C808 + C92062 * C820) * C181 +
            (C36216 * C893 + C92062 * C901) * C92099) *
               C36214 +
           ((C36216 * C6557 + C92062 * C6558) * C181 +
            (C36216 * C6683 + C92062 * C6684) * C92099) *
               C36215) *
              C92148 * C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C36216 * C107 + C92062 * C113) * C884 +
           (C36216 * C182 + C92062 * C188) * C798 - C36692 * C885 -
           C36770 * C799 + C36694 * C886 + C36771 * C800) *
              C36212 +
          (C36692 * C884 + C36770 * C798 - C36694 * C885 - C36771 * C799 +
           C36696 * C886 + C36772 * C800) *
              C36213 +
          (C36694 * C884 + C36771 * C798 - C36696 * C885 - C36772 * C799 +
           C36699 * C886 + C36773 * C800) *
              C36214 +
          (C36696 * C884 + C36772 * C798 - C36699 * C885 - C36773 * C799 +
           (C36216 * C36671 + C92062 * C36672) * C886 +
           (C36216 * C36759 + C92062 * C36760) * C800) *
              C36215) *
         C92148 * C92078 * C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) * ((((C36216 * C107 + C92062 * C113) * C181 +
                                (C36216 * C182 + C92062 * C188) * C92099) *
                                   C36212 +
                               (C36692 * C181 + C36770 * C92099) * C36213 +
                               (C36694 * C181 + C36771 * C92099) * C36214 +
                               (C36696 * C181 + C36772 * C92099) * C36215) *
                                  C92148 * C92078 * C1383 -
                              (((C36216 * C8666 + C92062 * C8668) * C92099 +
                                (C36216 * C8536 + C92062 * C8538) * C181) *
                                   C36215 +
                               ((C36216 * C5870 + C92062 * C5876) * C92099 +
                                (C36216 * C5772 + C92062 * C5780) * C181) *
                                   C36214 +
                               ((C36216 * C3513 + C92062 * C3517) * C92099 +
                                (C36216 * C3431 + C92062 * C3435) * C181) *
                                   C36213 +
                               ((C36216 * C1471 + C92062 * C1479) * C92099 +
                                (C36216 * C1389 + C92062 * C1401) * C181) *
                                   C36212) *
                                  C92148 * C92078 * C1384 +
                              (((C36216 * C1390 + C92062 * C1402) * C181 +
                                (C36216 * C1472 + C92062 * C1480) * C92099) *
                                   C36212 +
                               ((C36216 * C5773 + C92062 * C5781) * C181 +
                                (C36216 * C5871 + C92062 * C5877) * C92099) *
                                   C36213 +
                               ((C36216 * C5775 + C92062 * C5785) * C181 +
                                (C36216 * C5873 + C92062 * C5879) * C92099) *
                                   C36214 +
                               ((C36216 * C37227 + C92062 * C37228) * C181 +
                                (C36216 * C37281 + C92062 * C37282) * C92099) *
                                   C36215) *
                                  C92148 * C92078 * C1385)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C36216 * C107 + C92062 * C113) * C181 +
             (C36216 * C182 + C92062 * C188) * C92099) *
                C31260 +
            (C36692 * C181 + C36770 * C92099) * C92186) *
               C9514 +
           (((C36216 * C1389 + C92062 * C1401) * C181 +
             (C36216 * C1471 + C92062 * C1479) * C92099) *
                C31260 +
            (C38977 * C181 + C39058 * C92099) * C92186) *
               C9515 +
           (((C36216 * C1390 + C92062 * C1402) * C181 +
             (C36216 * C1472 + C92062 * C1480) * C92099) *
                C31260 +
            ((C36216 * C5773 + C92062 * C5781) * C181 +
             (C36216 * C5871 + C92062 * C5877) * C92099) *
                C92186) *
               C9516) *
              C93 -
          ((((C36216 * C5872 + C92062 * C5878) * C92099 +
             (C36216 * C5774 + C92062 * C5782) * C181) *
                C92186 +
            ((C36216 * C1473 + C92062 * C1481) * C92099 +
             (C36216 * C1391 + C92062 * C1403) * C181) *
                C31260) *
               C9516 +
           (((C36216 * C3514 + C92062 * C3518) * C92099 +
             (C36216 * C3432 + C92062 * C3436) * C181) *
                C92186 +
            ((C36216 * C1470 + C92062 * C1478) * C92099 +
             (C36216 * C1388 + C92062 * C1400) * C181) *
                C31260) *
               C9515 +
           ((C37812 * C92099 + C37728 * C181) * C92186 +
            ((C36216 * C183 + C92062 * C189) * C92099 +
             (C36216 * C108 + C92062 * C114) * C181) *
                C31260) *
               C9514) *
              C94 +
          ((((C36216 * C109 + C92062 * C115) * C181 +
             (C36216 * C184 + C92062 * C190) * C92099) *
                C31260 +
            ((C36216 * C803 + C92062 * C815) * C181 +
             (C36216 * C888 + C92062 * C896) * C92099) *
                C92186) *
               C9514 +
           (((C36216 * C1387 + C92062 * C1399) * C181 +
             (C36216 * C1469 + C92062 * C1477) * C92099) *
                C31260 +
            ((C36216 * C3433 + C92062 * C3437) * C181 +
             (C36216 * C3515 + C92062 * C3519) * C92099) *
                C92186) *
               C9515 +
           (((C36216 * C1392 + C92062 * C1404) * C181 +
             (C36216 * C1474 + C92062 * C1482) * C92099) *
                C31260 +
            ((C36216 * C11870 + C92062 * C11871) * C181 +
             (C36216 * C11972 + C92062 * C11973) * C92099) *
                C92186) *
               C9516) *
              C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C36216 * C107 + C92062 * C113) * C884 +
            (C36216 * C182 + C92062 * C188) * C798 - C36692 * C885 -
            C36770 * C799 + C36694 * C886 + C36771 * C800) *
               C31260 +
           (C36692 * C884 + C36770 * C798 - C36694 * C885 - C36771 * C799 +
            C36696 * C886 + C36772 * C800) *
               C92186) *
              C9514 +
          (((C36216 * C1389 + C92062 * C1401) * C884 +
            (C36216 * C1471 + C92062 * C1479) * C798 - C38977 * C885 -
            C39058 * C799 + C38975 * C886 + C39059 * C800) *
               C31260 +
           (C38977 * C884 + C39058 * C798 - C38975 * C885 - C39059 * C799 +
            C38973 * C886 + C39060 * C800) *
               C92186) *
              C9515 +
          (((C36216 * C1390 + C92062 * C1402) * C884 +
            (C36216 * C1472 + C92062 * C1480) * C798 - C40320 * C885 -
            C40406 * C799 + C40323 * C886 + C40407 * C800) *
               C31260 +
           (C40320 * C884 + C40406 * C798 - C40323 * C885 - C40407 * C799 +
            (C36216 * C37227 + C92062 * C37228) * C886 +
            (C36216 * C37281 + C92062 * C37282) * C800) *
               C92186) *
              C9516) *
         C92078 * C92110) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C36216 * C107 + C92062 * C113) * C181 +
             (C36216 * C182 + C92062 * C188) * C92099) *
                C31260 +
            (C36692 * C181 + C36770 * C92099) * C92186) *
               C9514 +
           ((C41203 + C41224) * C31260 + (C41206 + C41207) * C92186) * C9515 +
           C41231 * C9516) *
              C92078 * C1383 -
          (((C41227 + C41215) * C92186 + (C41228 + C41218) * C31260) * C9516 +
           ((C41212 + C41211) * C92186 + (C41225 + C41208) * C31260) * C9515 +
           ((C41207 + C41206) * C92186 + (C41224 + C41203) * C31260) * C9514) *
              C92078 * C1384 +
          (C41231 * C9514 +
           ((C41218 + C41228) * C31260 + (C41215 + C41227) * C92186) * C9515 +
           (((C36216 * C10962 + C92062 * C10968) * C181 +
             (C36216 * C11094 + C92062 * C11098) * C92099) *
                C31260 +
            ((C36216 * C41085 + C92062 * C41086) * C181 +
             (C36216 * C41200 + C92062 * C41201) * C92099) *
                C92186) *
               C9516) *
              C92078 * C1385)) /
            (p * q * std::sqrt(p + q));
    d2eexz[37] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C31262 * C107 + C31257 * C113 + C31263 * C108 + C31258 * C114 +
                 C31264 * C109 + C31259 * C115) *
                    C244 +
                (C31262 * C245 + C31257 * C251 + C31263 * C246 + C31258 * C252 +
                 C31264 * C247 + C31259 * C253) *
                    C92110) *
                   C31260 +
               ((C31262 * C805 + C31257 * C817 + C31263 * C804 + C31258 * C816 +
                 C31264 * C803 + C31259 * C815) *
                    C244 +
                (C31262 * C956 + C31257 * C964 + C31263 * C955 + C31258 * C963 +
                 C31264 * C954 + C31259 * C962) *
                    C92110) *
                   C92186) *
                  C92148 * C92099 * C93 -
              (((C31264 * C953 + C31259 * C961 + C31263 * C954 + C31258 * C962 +
                 C31262 * C955 + C31257 * C963) *
                    C92110 +
                (C31264 * C802 + C31259 * C814 + C31263 * C803 + C31258 * C815 +
                 C31262 * C804 + C31257 * C816) *
                    C244) *
                   C92186 +
               ((C31264 * C248 + C31259 * C254 + C31263 * C247 + C31258 * C253 +
                 C31262 * C246 + C31257 * C252) *
                    C92110 +
                (C31264 * C110 + C31259 * C116 + C31263 * C109 + C31258 * C115 +
                 C31262 * C108 + C31257 * C114) *
                    C244) *
                   C31260) *
                  C92148 * C92099 * C94 +
              (((C31262 * C109 + C31257 * C115 + C31263 * C110 + C31258 * C116 +
                 C31264 * C111 + C31259 * C121) *
                    C244 +
                (C31262 * C247 + C31257 * C253 + C31263 * C248 + C31258 * C254 +
                 C31264 * C249 + C31259 * C255) *
                    C92110) *
                   C31260 +
               ((C31262 * C803 + C31257 * C815 + C31263 * C802 + C31258 * C814 +
                 C31264 * C1989 + C31259 * C1990) *
                    C244 +
                (C31262 * C954 + C31257 * C962 + C31263 * C953 + C31258 * C961 +
                 C31264 * C2129 + C31259 * C2130) *
                    C92110) *
                   C92186) *
                  C92148 * C92099 * C95) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C31262 * C107 + C31257 * C113 + C31263 * C108 + C31258 * C114 +
                 C31264 * C109 + C31259 * C115) *
                    C244 +
                (C31262 * C245 + C31257 * C251 + C31263 * C246 + C31258 * C252 +
                 C31264 * C247 + C31259 * C253) *
                    C92110) *
                   C31260 +
               ((C32042 + C32043 + C32044) * C244 +
                (C32232 + C32233 + C32234) * C92110) *
                   C92186) *
                  C92148 * C798 -
              (((C32235 + C32236 + C32237) * C92110 +
                (C32051 + C32052 + C32053) * C244) *
                   C92186 +
               ((C32234 + C32233 + C32232) * C92110 +
                (C32044 + C32043 + C32042) * C244) *
                   C31260) *
                  C92148 * C799 +
              (((C32053 + C32052 + C32051) * C244 +
                (C32237 + C32236 + C32235) * C92110) *
                   C31260 +
               ((C31262 * C4882 + C31257 * C4888 + C31263 * C4881 +
                 C31258 * C4887 + C31264 * C6557 + C31259 * C6558) *
                    C244 +
                (C31262 * C5114 + C31257 * C5118 + C31263 * C5113 +
                 C31258 * C5117 + C31264 * C6795 + C31259 * C6796) *
                    C92110) *
                   C92186) *
                  C92148 * C800) *
             C92078) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C31262 * C107 + C31257 * C113 + C31263 * C108 + C31258 * C114 +
            C31264 * C109 + C31259 * C115) *
               C1534 +
           (C31262 * C245 + C31257 * C251 + C31263 * C246 + C31258 * C252 +
            C31264 * C247 + C31259 * C253) *
               C1383 -
           (C31264 * C1387 + C31259 * C1399 + C31263 * C1388 + C31258 * C1400 +
            C31262 * C1389 + C31257 * C1401) *
               C1535 -
           (C31264 * C1538 + C31259 * C1546 + C31263 * C1539 + C31258 * C1547 +
            C31262 * C1540 + C31257 * C1548) *
               C1384 +
           (C31262 * C1390 + C31257 * C1402 + C31263 * C1391 + C31258 * C1403 +
            C31264 * C1392 + C31259 * C1404) *
               C1536 +
           (C31262 * C1541 + C31257 * C1549 + C31263 * C1542 + C31258 * C1550 +
            C31264 * C1543 + C31259 * C1551) *
               C1385) *
              C31260 +
          ((C32042 + C32043 + C32044) * C1534 +
           (C32232 + C32233 + C32234) * C1383 -
           (C31264 * C3433 + C31259 * C3437 + C31263 * C3432 + C31258 * C3436 +
            C31262 * C3431 + C31257 * C3435) *
               C1535 -
           (C31264 * C3589 + C31259 * C3593 + C31263 * C3588 + C31258 * C3592 +
            C31262 * C3587 + C31257 * C3591) *
               C1384 +
           (C31262 * C5773 + C31257 * C5781 + C31263 * C5774 + C31258 * C5782 +
            C31264 * C11870 + C31259 * C11871) *
               C1536 +
           (C31262 * C5955 + C31257 * C5961 + C31263 * C5956 + C31258 * C5962 +
            C31264 * C12072 + C31259 * C12073) *
               C1385) *
              C92186) *
         C92148 * C92099 * C92078) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C36216 * C107 + C92062 * C113) * C244 +
            (C36216 * C245 + C92062 * C251) * C92110) *
               C36212 +
           ((C36216 * C805 + C92062 * C817) * C244 +
            (C36216 * C956 + C92062 * C964) * C92110) *
               C36213 +
           ((C36216 * C806 + C92062 * C818) * C244 +
            (C36216 * C957 + C92062 * C965) * C92110) *
               C36214 +
           ((C36216 * C4882 + C92062 * C4888) * C244 +
            (C36216 * C5114 + C92062 * C5118) * C92110) *
               C36215) *
              C92148 * C92099 * C93 -
          (((C36216 * C5113 + C92062 * C5117) * C92110 +
            (C36216 * C4881 + C92062 * C4887) * C244) *
               C36215 +
           ((C36216 * C958 + C92062 * C966) * C92110 +
            (C36216 * C807 + C92062 * C819) * C244) *
               C36214 +
           ((C36216 * C955 + C92062 * C963) * C92110 +
            (C36216 * C804 + C92062 * C816) * C244) *
               C36213 +
           ((C36216 * C246 + C92062 * C252) * C92110 +
            (C36216 * C108 + C92062 * C114) * C244) *
               C36212) *
              C92148 * C92099 * C94 +
          (((C36216 * C109 + C92062 * C115) * C244 +
            (C36216 * C247 + C92062 * C253) * C92110) *
               C36212 +
           ((C36216 * C803 + C92062 * C815) * C244 +
            (C36216 * C954 + C92062 * C962) * C92110) *
               C36213 +
           ((C36216 * C808 + C92062 * C820) * C244 +
            (C36216 * C959 + C92062 * C967) * C92110) *
               C36214 +
           ((C36216 * C6557 + C92062 * C6558) * C244 +
            (C36216 * C6795 + C92062 * C6796) * C92110) *
               C36215) *
              C92148 * C92099 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C36216 * C107 + C92062 * C113) * C244 +
            (C36216 * C245 + C92062 * C251) * C92110) *
               C36212 +
           (C36826 + C36842) * C36213 + C36846 * C36214 + C36847 * C36215) *
              C92148 * C798 -
          ((C36845 + C36837) * C36215 + (C36844 + C36832) * C36214 +
           (C36843 + C36829) * C36213 + (C36842 + C36826) * C36212) *
              C92148 * C799 +
          (C36846 * C36212 + C36847 * C36213 + (C36837 + C36845) * C36214 +
           ((C36216 * C36671 + C92062 * C36672) * C244 +
            (C36216 * C36823 + C92062 * C36824) * C92110) *
               C36215) *
              C92148 * C800) *
         C92078) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C36216 * C107 + C92062 * C113) * C1534 +
           (C36216 * C245 + C92062 * C251) * C1383 -
           (C36216 * C1389 + C92062 * C1401) * C1535 -
           (C36216 * C1540 + C92062 * C1548) * C1384 +
           (C36216 * C1390 + C92062 * C1402) * C1536 +
           (C36216 * C1541 + C92062 * C1549) * C1385) *
              C36212 +
          (C36692 * C1534 + C36838 * C1383 -
           (C36216 * C3431 + C92062 * C3435) * C1535 -
           (C36216 * C3587 + C92062 * C3591) * C1384 +
           (C36216 * C5773 + C92062 * C5781) * C1536 +
           (C36216 * C5955 + C92062 * C5961) * C1385) *
              C36213 +
          (C36694 * C1534 + C36839 * C1383 -
           (C36216 * C5772 + C92062 * C5780) * C1535 -
           (C36216 * C5958 + C92062 * C5964) * C1384 +
           (C36216 * C5775 + C92062 * C5785) * C1536 +
           (C36216 * C5959 + C92062 * C5965) * C1385) *
              C36214 +
          (C36696 * C1534 + C36840 * C1383 -
           (C36216 * C8536 + C92062 * C8538) * C1535 -
           (C36216 * C8780 + C92062 * C8782) * C1384 +
           (C36216 * C37227 + C92062 * C37228) * C1536 +
           (C36216 * C37333 + C92062 * C37334) * C1385) *
              C36215) *
         C92148 * C92099 * C92078) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) * (((((C36216 * C107 + C92062 * C113) * C244 +
                                 (C36216 * C245 + C92062 * C251) * C92110) *
                                    C31260 +
                                (C36826 + C36842) * C92186) *
                                   C9514 +
                               (((C36216 * C1389 + C92062 * C1401) * C244 +
                                 (C36216 * C1540 + C92062 * C1548) * C92110) *
                                    C31260 +
                                (C38977 * C244 + C39144 * C92110) * C92186) *
                                   C9515 +
                               (((C36216 * C1390 + C92062 * C1402) * C244 +
                                 (C36216 * C1541 + C92062 * C1549) * C92110) *
                                    C31260 +
                                ((C36216 * C5773 + C92062 * C5781) * C244 +
                                 (C36216 * C5955 + C92062 * C5961) * C92110) *
                                    C92186) *
                                   C9516) *
                                  C92099 * C93 -
                              ((((C36216 * C5956 + C92062 * C5962) * C92110 +
                                 (C36216 * C5774 + C92062 * C5782) * C244) *
                                    C92186 +
                                ((C36216 * C1542 + C92062 * C1550) * C92110 +
                                 (C36216 * C1391 + C92062 * C1403) * C244) *
                                    C31260) *
                                   C9516 +
                               (((C36216 * C3588 + C92062 * C3592) * C92110 +
                                 (C36216 * C3432 + C92062 * C3436) * C244) *
                                    C92186 +
                                ((C36216 * C1539 + C92062 * C1547) * C92110 +
                                 (C36216 * C1388 + C92062 * C1400) * C244) *
                                    C31260) *
                                   C9515 +
                               ((C37893 + C37881) * C92186 +
                                ((C36216 * C246 + C92062 * C252) * C92110 +
                                 (C36216 * C108 + C92062 * C114) * C244) *
                                    C31260) *
                                   C9514) *
                                  C92099 * C94 +
                              ((((C36216 * C109 + C92062 * C115) * C244 +
                                 (C36216 * C247 + C92062 * C253) * C92110) *
                                    C31260 +
                                ((C36216 * C803 + C92062 * C815) * C244 +
                                 (C36216 * C954 + C92062 * C962) * C92110) *
                                    C92186) *
                                   C9514 +
                               (((C36216 * C1387 + C92062 * C1399) * C244 +
                                 (C36216 * C1538 + C92062 * C1546) * C92110) *
                                    C31260 +
                                ((C36216 * C3433 + C92062 * C3437) * C244 +
                                 (C36216 * C3589 + C92062 * C3593) * C92110) *
                                    C92186) *
                                   C9515 +
                               (((C36216 * C1392 + C92062 * C1404) * C244 +
                                 (C36216 * C1543 + C92062 * C1551) * C92110) *
                                    C31260 +
                                ((C36216 * C11870 + C92062 * C11871) * C244 +
                                 (C36216 * C12072 + C92062 * C12073) * C92110) *
                                    C92186) *
                                   C9516) *
                                  C92099 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C36216 * C107 + C92062 * C113) * C244 +
             (C36216 * C245 + C92062 * C251) * C92110) *
                C31260 +
            (C36826 + C36842) * C92186) *
               C9514 +
           (((C36216 * C1389 + C92062 * C1401) * C244 +
             (C36216 * C1540 + C92062 * C1548) * C92110) *
                C31260 +
            (C40482 + C40483) * C92186) *
               C9515 +
           (((C36216 * C1390 + C92062 * C1402) * C244 +
             (C36216 * C1541 + C92062 * C1549) * C92110) *
                C31260 +
            (C40484 + C40494) * C92186) *
               C9516) *
              C798 -
          (((C40495 + C40489) * C92186 + (C40494 + C40484) * C31260) * C9516 +
           ((C40490 + C40491) * C92186 + (C40483 + C40482) * C31260) * C9515 +
           ((C36843 + C36829) * C92186 + (C36842 + C36826) * C31260) * C9514) *
              C799 +
          ((C36846 * C31260 + C36847 * C92186) * C9514 +
           ((C40491 + C40490) * C31260 +
            (C38973 * C244 + C39146 * C92110) * C92186) *
               C9515 +
           ((C40489 + C40495) * C31260 +
            ((C36216 * C37227 + C92062 * C37228) * C244 +
             (C36216 * C37333 + C92062 * C37334) * C92110) *
                C92186) *
               C9516) *
              C800) *
         C92078) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C36216 * C107 + C92062 * C113) * C1534 +
            (C36216 * C245 + C92062 * C251) * C1383 - C41107 * C1535 -
            C41316 * C1384 + C41109 * C1536 + C41317 * C1385) *
               C31260 +
           (C36692 * C1534 + C36838 * C1383 - C38977 * C1535 - C39144 * C1384 +
            C40320 * C1536 + C40492 * C1385) *
               C92186) *
              C9514 +
          ((C41107 * C1534 + C41316 * C1383 - C41109 * C1535 - C41317 * C1384 +
            C41115 * C1536 + C41318 * C1385) *
               C31260 +
           (C38977 * C1534 + C39144 * C1383 - C40320 * C1535 - C40492 * C1384 +
            C41113 * C1536 + C41319 * C1385) *
               C92186) *
              C9515 +
          ((C41109 * C1534 + C41317 * C1383 - C41115 * C1535 - C41318 * C1384 +
            (C36216 * C10962 + C92062 * C10968) * C1536 +
            (C36216 * C11199 + C92062 * C11203) * C1385) *
               C31260 +
           (C40320 * C1534 + C40492 * C1383 - C41113 * C1535 - C41319 * C1384 +
            (C36216 * C41085 + C92062 * C41086) * C1536 +
            (C36216 * C41305 + C92062 * C41306) * C1385) *
               C92186) *
              C9516) *
         C92099 * C92078) /
            (p * q * std::sqrt(p + q));
    d2eeyx[37] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((C31487 * C107 + C31260 * C308 + C31488 * C805 +
                C92186 * C1022) *
                   C104 +
               (C31487 * C117 + C31260 * C314 + C31488 * C813 +
                C92186 * C1030) *
                   C93 -
               (C31514 + C31515) * C105 - (C31516 + C31517) * C94 +
               C31526 * C106 + C31527 * C95) *
                  C92148 * C31257 +
              ((C31515 + C31514) * C104 + (C31517 + C31516) * C93 -
               (C31519 + C31518) * C105 - (C31521 + C31520) * C94 +
               (C31522 + C31523) * C106 + (C31524 + C31525) * C95) *
                  C92148 * C31258 +
              (C31526 * C104 + C31527 * C93 - (C31523 + C31522) * C105 -
               (C31525 + C31524) * C94 +
               (C31487 * C111 + C31260 * C312 + C31488 * C1989 +
                C92186 * C2197) *
                   C106 +
               (C31487 * C122 + C31260 * C318 + C31488 * C1991 +
                C92186 * C2198) *
                   C95) *
                  C92148 * C31259) *
             C92110 * C92099 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C31487 * C107 + C31260 * C308 + C31488 * C805 +
                 C92186 * C1022) *
                    C801 +
                (C31487 * C117 + C31260 * C314 + C31488 * C813 +
                 C92186 * C1030) *
                    C92078) *
                   C92148 * C31257 +
               ((C31515 + C31514) * C801 + (C31517 + C31516) * C92078) *
                   C92148 * C31258 +
               (C31526 * C801 + C31527 * C92078) * C92148 * C31259) *
                  C92110 * C798 -
              (((C31488 * C824 + C92186 * C1033 + C31487 * C811 +
                 C31260 * C1028) *
                    C92078 +
                (C31488 * C808 + C92186 * C1025 + C31487 * C803 +
                 C31260 * C1020) *
                    C801) *
                   C92148 * C31259 +
               ((C31488 * C823 + C92186 * C1032 + C31487 * C812 +
                 C31260 * C1029) *
                    C92078 +
                (C31488 * C807 + C92186 * C1024 + C31487 * C804 +
                 C31260 * C1021) *
                    C801) *
                   C92148 * C31258 +
               ((C31488 * C822 + C92186 * C1031 + C31487 * C813 +
                 C31260 * C1030) *
                    C92078 +
                (C31488 * C806 + C92186 * C1023 + C31487 * C805 +
                 C31260 * C1022) *
                    C801) *
                   C92148 * C31257) *
                  C92110 * C799 +
              (((C31487 * C806 + C31260 * C1023 + C31488 * C4882 +
                 C92186 * C5218) *
                    C801 +
                (C31487 * C822 + C31260 * C1031 + C31488 * C4886 +
                 C92186 * C5222) *
                    C92078) *
                   C92148 * C31257 +
               ((C31487 * C807 + C31260 * C1024 + C31488 * C4881 +
                 C92186 * C5217) *
                    C801 +
                (C31487 * C823 + C31260 * C1032 + C31488 * C4885 +
                 C92186 * C5221) *
                    C92078) *
                   C92148 * C31258 +
               ((C31487 * C808 + C31260 * C1025 + C31488 * C6557 +
                 C92186 * C6907) *
                    C801 +
                (C31487 * C824 + C31260 * C1033 + C31488 * C6559 +
                 C92186 * C6908) *
                    C92078) *
                   C92148 * C31259) *
                  C92110 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C31487 * C107 + C31260 * C308 + C31488 * C805 + C92186 * C1022) *
                C801 +
            (C31487 * C117 + C31260 * C314 + C31488 * C813 + C92186 * C1030) *
                C92078) *
               C92148 * C31257 +
           ((C31515 + C31514) * C801 + (C31517 + C31516) * C92078) * C92148 *
               C31258 +
           (C31526 * C801 + C31527 * C92078) * C92148 * C31259) *
              C1383 -
          (((C31488 * C3441 + C92186 * C3667 + C31487 * C1395 +
             C31260 * C1612) *
                C92078 +
            (C31488 * C3433 + C92186 * C3663 + C31487 * C1387 +
             C31260 * C1604) *
                C801) *
               C92148 * C31259 +
           ((C31488 * C3440 + C92186 * C3666 + C31487 * C1396 +
             C31260 * C1613) *
                C92078 +
            (C31488 * C3432 + C92186 * C3662 + C31487 * C1388 +
             C31260 * C1605) *
                C801) *
               C92148 * C31258 +
           ((C31488 * C3439 + C92186 * C3665 + C31487 * C1397 +
             C31260 * C1614) *
                C92078 +
            (C31488 * C3431 + C92186 * C3661 + C31487 * C1389 +
             C31260 * C1606) *
                C801) *
               C92148 * C31257) *
              C1384 +
          (((C31487 * C1390 + C31260 * C1607 + C31488 * C5773 +
             C92186 * C6043) *
                C801 +
            (C31487 * C1406 + C31260 * C1615 + C31488 * C5783 +
             C92186 * C6049) *
                C92078) *
               C92148 * C31257 +
           ((C31487 * C1391 + C31260 * C1608 + C31488 * C5774 +
             C92186 * C6045) *
                C801 +
            (C31487 * C1407 + C31260 * C1616 + C31488 * C5784 +
             C92186 * C6051) *
                C92078) *
               C92148 * C31258 +
           ((C31487 * C1392 + C31260 * C1609 + C31488 * C11870 +
             C92186 * C12172) *
                C801 +
            (C31487 * C1408 + C31260 * C1617 + C31488 * C11872 +
             C92186 * C12173) *
                C92078) *
               C92148 * C31259) *
              C1385) *
         C92099) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((C36367 * C107 + C36212 * C308 + C36368 * C805 + C36213 * C1022 +
           C36369 * C806 + C36214 * C1023 + C36370 * C4882 + C36215 * C5218) *
              C104 +
          (C36367 * C117 + C36212 * C314 + C36368 * C813 + C36213 * C1030 +
           C36369 * C822 + C36214 * C1031 + C36370 * C4886 + C36215 * C5222) *
              C93 -
          (C36370 * C4881 + C36215 * C5217 + C36369 * C807 + C36214 * C1024 +
           C36368 * C804 + C36213 * C1021 + C36367 * C108 + C36212 * C309) *
              C105 -
          (C36370 * C4885 + C36215 * C5221 + C36369 * C823 + C36214 * C1032 +
           C36368 * C812 + C36213 * C1029 + C36367 * C118 + C36212 * C315) *
              C94 +
          (C36367 * C109 + C36212 * C310 + C36368 * C803 + C36213 * C1020 +
           C36369 * C808 + C36214 * C1025 + C36370 * C6557 + C36215 * C6907) *
              C106 +
          (C36367 * C119 + C36212 * C316 + C36368 * C811 + C36213 * C1028 +
           C36369 * C824 + C36214 * C1033 + C36370 * C6559 + C36215 * C6908) *
              C95) *
         C92148 * C92062 * C92110 * C92099) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C36367 * C107 + C36212 * C308 + C36368 * C805 + C36213 * C1022 +
            C36369 * C806 + C36214 * C1023 + C36370 * C4882 + C36215 * C5218) *
               C801 +
           (C36367 * C117 + C36212 * C314 + C36368 * C813 + C36213 * C1030 +
            C36369 * C822 + C36214 * C1031 + C36370 * C4886 + C36215 * C5222) *
               C92078) *
              C92148 * C92062 * C92110 * C798 -
          ((C36370 * C4891 + C36215 * C5223 + C36369 * C4886 + C36214 * C5222 +
            C36368 * C822 + C36213 * C1031 + C36367 * C813 + C36212 * C1030) *
               C92078 +
           (C36370 * C4883 + C36215 * C5219 + C36369 * C4882 + C36214 * C5218 +
            C36368 * C806 + C36213 * C1023 + C36367 * C805 + C36212 * C1022) *
               C801) *
              C92148 * C92062 * C92110 * C799 +
          ((C36367 * C806 + C36212 * C1023 + C36368 * C4882 + C36213 * C5218 +
            C36369 * C4883 + C36214 * C5219 + C36370 * C36671 +
            C36215 * C36897) *
               C801 +
           (C36367 * C822 + C36212 * C1031 + C36368 * C4886 + C36213 * C5222 +
            C36369 * C4891 + C36214 * C5223 + C36370 * C36673 +
            C36215 * C36898) *
               C92078) *
              C92148 * C92062 * C92110 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C36367 * C107 + C36212 * C308 + C36368 * C805 + C36213 * C1022 +
            C36369 * C806 + C36214 * C1023 + C36370 * C4882 + C36215 * C5218) *
               C801 +
           (C36367 * C117 + C36212 * C314 + C36368 * C813 + C36213 * C1030 +
            C36369 * C822 + C36214 * C1031 + C36370 * C4886 + C36215 * C5222) *
               C92078) *
              C92148 * C92062 * C1383 -
          ((C36370 * C8540 + C36215 * C8896 + C36369 * C5778 + C36214 * C6048 +
            C36368 * C3439 + C36213 * C3665 + C36367 * C1397 + C36212 * C1614) *
               C92078 +
           (C36370 * C8536 + C36215 * C8894 + C36369 * C5772 + C36214 * C6042 +
            C36368 * C3431 + C36213 * C3661 + C36367 * C1389 + C36212 * C1606) *
               C801) *
              C92148 * C92062 * C1384 +
          ((C36367 * C1390 + C36212 * C1607 + C36368 * C5773 + C36213 * C6043 +
            C36369 * C5775 + C36214 * C6044 + C36370 * C37227 +
            C36215 * C37385) *
               C801 +
           (C36367 * C1406 + C36212 * C1615 + C36368 * C5783 + C36213 * C6049 +
            C36369 * C5787 + C36214 * C6050 + C36370 * C37229 +
            C36215 * C37386) *
               C92078) *
              C92148 * C92062 * C1385) *
         C92099) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C31487 * C107 + C31260 * C308 + C31488 * C805 + C92186 * C1022) *
               C104 +
           (C31487 * C117 + C31260 * C314 + C31488 * C813 + C92186 * C1030) *
               C93 -
           (C31514 + C31515) * C105 - (C31516 + C31517) * C94 + C31526 * C106 +
           C31527 * C95) *
              C9514 +
          ((C31487 * C1389 + C31260 * C1606 + C31488 * C3431 + C92186 * C3661) *
               C104 +
           (C31487 * C1397 + C31260 * C1614 + C31488 * C3439 + C92186 * C3665) *
               C93 -
           (C34723 + C34722) * C105 - (C34725 + C34724) * C94 +
           (C34726 + C34727) * C106 + (C34728 + C34729) * C95) *
              C9515 +
          ((C31487 * C1390 + C31260 * C1607 + C31488 * C5773 + C92186 * C6043) *
               C104 +
           (C31487 * C1406 + C31260 * C1615 + C31488 * C5783 + C92186 * C6049) *
               C93 -
           (C31488 * C5774 + C92186 * C6045 + C31487 * C1391 + C31260 * C1608) *
               C105 -
           (C31488 * C5784 + C92186 * C6051 + C31487 * C1407 + C31260 * C1616) *
               C94 +
           (C31487 * C1392 + C31260 * C1609 + C31488 * C11870 +
            C92186 * C12172) *
               C106 +
           (C31487 * C1408 + C31260 * C1617 + C31488 * C11872 +
            C92186 * C12173) *
               C95) *
              C9516) *
         C92062 * C92110 * C92099) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C31487 * C107 + C31260 * C308 + C31488 * C805 + C92186 * C1022) *
                C801 +
            (C31487 * C117 + C31260 * C314 + C31488 * C813 + C92186 * C1030) *
                C92078) *
               C9514 +
           ((C31487 * C1389 + C31260 * C1606 + C31488 * C3431 +
             C92186 * C3661) *
                C801 +
            (C31487 * C1397 + C31260 * C1614 + C31488 * C3439 +
             C92186 * C3665) *
                C92078) *
               C9515 +
           ((C31487 * C1390 + C31260 * C1607 + C31488 * C5773 +
             C92186 * C6043) *
                C801 +
            (C31487 * C1406 + C31260 * C1615 + C31488 * C5783 +
             C92186 * C6049) *
                C92078) *
               C9516) *
              C92062 * C92110 * C798 -
          (((C31488 * C5787 + C92186 * C6050 + C31487 * C5783 +
             C31260 * C6049) *
                C92078 +
            (C31488 * C5775 + C92186 * C6044 + C31487 * C5773 +
             C31260 * C6043) *
                C801) *
               C9516 +
           ((C31488 * C5778 + C92186 * C6048 + C31487 * C3439 +
             C31260 * C3665) *
                C92078 +
            (C31488 * C5772 + C92186 * C6042 + C31487 * C3431 +
             C31260 * C3661) *
                C801) *
               C9515 +
           ((C31488 * C822 + C92186 * C1031 + C31487 * C813 + C31260 * C1030) *
                C92078 +
            (C31488 * C806 + C92186 * C1023 + C31487 * C805 + C31260 * C1022) *
                C801) *
               C9514) *
              C92062 * C92110 * C799 +
          (((C31487 * C806 + C31260 * C1023 + C31488 * C4882 + C92186 * C5218) *
                C801 +
            (C31487 * C822 + C31260 * C1031 + C31488 * C4886 + C92186 * C5222) *
                C92078) *
               C9514 +
           ((C31487 * C5772 + C31260 * C6042 + C31488 * C8536 +
             C92186 * C8894) *
                C801 +
            (C31487 * C5778 + C31260 * C6048 + C31488 * C8540 +
             C92186 * C8896) *
                C92078) *
               C9515 +
           ((C31487 * C5775 + C31260 * C6044 + C31488 * C37227 +
             C92186 * C37385) *
                C801 +
            (C31487 * C5787 + C31260 * C6050 + C31488 * C37229 +
             C92186 * C37386) *
                C92078) *
               C9516) *
              C92062 * C92110 * C800)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C31487 * C107 + C31260 * C308 + C31488 * C805 + C92186 * C1022) *
                C801 +
            (C31487 * C117 + C31260 * C314 + C31488 * C813 + C92186 * C1030) *
                C92078) *
               C9514 +
           ((C41420 + C41421) * C801 + (C41422 + C41423) * C92078) * C9515 +
           C41436 * C9516) *
              C92062 * C1383 -
          (((C41428 + C41429) * C92078 + (C41430 + C41431) * C801) * C9516 +
           ((C41427 + C41426) * C92078 + (C41425 + C41424) * C801) * C9515 +
           ((C41423 + C41422) * C92078 + (C41421 + C41420) * C801) * C9514) *
              C92062 * C1384 +
          (C41436 * C9514 +
           ((C41431 + C41430) * C801 + (C41429 + C41428) * C92078) * C9515 +
           ((C31487 * C10962 + C31260 * C11300 + C31488 * C41085 +
             C92186 * C41393) *
                C801 +
            (C31487 * C10970 + C31260 * C11304 + C31488 * C41087 +
             C92186 * C41394) *
                C92078) *
               C9516) *
              C92062 * C1385) *
         C92099) /
            (p * q * std::sqrt(p + q));
    d2eeyy[37] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C31487 * C107 + C31260 * C308 + C31488 * C805 +
                 C92186 * C1022) *
                    C181 +
                (C31487 * C182 + C31260 * C394 + C31488 * C890 +
                 C92186 * C1085) *
                    C92099) *
                   C92148 * C31257 +
               ((C31515 + C31514) * C181 + (C31615 + C31616) * C92099) *
                   C92148 * C31258 +
               C31624 * C31259) *
                  C93 -
              (((C31619 + C31620) * C92099 + (C31523 + C31522) * C181) *
                   C92148 * C31259 +
               ((C31618 + C31617) * C92099 + (C31519 + C31518) * C181) *
                   C92148 * C31258 +
               ((C31616 + C31615) * C92099 + (C31514 + C31515) * C181) *
                   C92148 * C31257) *
                  C94 +
              (C31624 * C31257 +
               ((C31522 + C31523) * C181 + (C31620 + C31619) * C92099) *
                   C92148 * C31258 +
               ((C31487 * C111 + C31260 * C312 + C31488 * C1989 +
                 C92186 * C2197) *
                    C181 +
                (C31487 * C186 + C31260 * C398 + C31488 * C2061 +
                 C92186 * C2283) *
                    C92099) *
                   C92148 * C31259) *
                  C95) *
             C92110 +
         0.5 * std::pow(Pi, 2.5) *
             (((C31487 * C107 + C31260 * C308 + C31488 * C805 +
                C92186 * C1022) *
                   C884 +
               (C31487 * C182 + C31260 * C394 + C31488 * C890 +
                C92186 * C1085) *
                   C798 -
               (C31488 * C806 + C92186 * C1023 + C31487 * C805 +
                C31260 * C1022) *
                   C885 -
               (C31488 * C891 + C92186 * C1086 + C31487 * C890 +
                C31260 * C1085) *
                   C799 +
               (C31487 * C806 + C31260 * C1023 + C31488 * C4882 +
                C92186 * C5218) *
                   C886 +
               (C31487 * C891 + C31260 * C1086 + C31488 * C5012 +
                C92186 * C5299) *
                   C800) *
                  C92148 * C31257 +
              ((C31515 + C31514) * C884 + (C31615 + C31616) * C798 -
               (C31488 * C807 + C92186 * C1024 + C31487 * C804 +
                C31260 * C1021) *
                   C885 -
               (C31488 * C892 + C92186 * C1088 + C31487 * C889 +
                C31260 * C1087) *
                   C799 +
               (C31487 * C807 + C31260 * C1024 + C31488 * C4881 +
                C92186 * C5217) *
                   C886 +
               (C31487 * C892 + C31260 * C1088 + C31488 * C5013 +
                C92186 * C5301) *
                   C800) *
                  C92148 * C31258 +
              (C31526 * C884 + C31621 * C798 -
               (C31488 * C808 + C92186 * C1025 + C31487 * C803 +
                C31260 * C1020) *
                   C885 -
               (C31488 * C893 + C92186 * C1090 + C31487 * C888 +
                C31260 * C1089) *
                   C799 +
               (C31487 * C808 + C31260 * C1025 + C31488 * C6557 +
                C92186 * C6907) *
                   C886 +
               (C31487 * C893 + C31260 * C1090 + C31488 * C6683 +
                C92186 * C7025) *
                   C800) *
                  C92148 * C31259) *
             C92078 * C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C31487 * C107 + C31260 * C308 + C31488 * C805 + C92186 * C1022) *
                C181 +
            (C31487 * C182 + C31260 * C394 + C31488 * C890 + C92186 * C1085) *
                C92099) *
               C92148 * C31257 +
           ((C31515 + C31514) * C181 + (C31615 + C31616) * C92099) * C92148 *
               C31258 +
           C31624 * C31259) *
              C92078 * C1383 -
          (((C31488 * C3515 + C92186 * C3737 + C31487 * C1469 +
             C31260 * C1670) *
                C92099 +
            (C31488 * C3433 + C92186 * C3663 + C31487 * C1387 +
             C31260 * C1604) *
                C181) *
               C92148 * C31259 +
           ((C31488 * C3514 + C92186 * C3736 + C31487 * C1470 +
             C31260 * C1671) *
                C92099 +
            (C31488 * C3432 + C92186 * C3662 + C31487 * C1388 +
             C31260 * C1605) *
                C181) *
               C92148 * C31258 +
           ((C31488 * C3513 + C92186 * C3735 + C31487 * C1471 +
             C31260 * C1672) *
                C92099 +
            (C31488 * C3431 + C92186 * C3661 + C31487 * C1389 +
             C31260 * C1606) *
                C181) *
               C92148 * C31257) *
              C92078 * C1384 +
          (((C31487 * C1390 + C31260 * C1607 + C31488 * C5773 +
             C92186 * C6043) *
                C181 +
            (C31487 * C1472 + C31260 * C1673 + C31488 * C5871 +
             C92186 * C6129) *
                C92099) *
               C92148 * C31257 +
           ((C31487 * C1391 + C31260 * C1608 + C31488 * C5774 +
             C92186 * C6045) *
                C181 +
            (C31487 * C1473 + C31260 * C1674 + C31488 * C5872 +
             C92186 * C6131) *
                C92099) *
               C92148 * C31258 +
           ((C31487 * C1392 + C31260 * C1609 + C31488 * C11870 +
             C92186 * C12172) *
                C181 +
            (C31487 * C1474 + C31260 * C1675 + C31488 * C11972 +
             C92186 * C12284) *
                C92099) *
               C92148 * C31259) *
              C92078 * C1385)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C36367 * C107 + C36212 * C308 + C36368 * C805 + C36213 * C1022 +
            C36369 * C806 + C36214 * C1023 + C36370 * C4882 + C36215 * C5218) *
               C181 +
           (C36367 * C182 + C36212 * C394 + C36368 * C890 + C36213 * C1085 +
            C36369 * C891 + C36214 * C1086 + C36370 * C5012 + C36215 * C5299) *
               C92099) *
              C92148 * C92062 * C93 -
          ((C36370 * C5013 + C36215 * C5301 + C36369 * C892 + C36214 * C1088 +
            C36368 * C889 + C36213 * C1087 + C36367 * C183 + C36212 * C395) *
               C92099 +
           (C36370 * C4881 + C36215 * C5217 + C36369 * C807 + C36214 * C1024 +
            C36368 * C804 + C36213 * C1021 + C36367 * C108 + C36212 * C309) *
               C181) *
              C92148 * C92062 * C94 +
          ((C36367 * C109 + C36212 * C310 + C36368 * C803 + C36213 * C1020 +
            C36369 * C808 + C36214 * C1025 + C36370 * C6557 + C36215 * C6907) *
               C181 +
           (C36367 * C184 + C36212 * C396 + C36368 * C888 + C36213 * C1089 +
            C36369 * C893 + C36214 * C1090 + C36370 * C6683 + C36215 * C7025) *
               C92099) *
              C92148 * C92062 * C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((C36367 * C107 + C36212 * C308 + C36368 * C805 + C36213 * C1022 +
           C36369 * C806 + C36214 * C1023 + C36370 * C4882 + C36215 * C5218) *
              C884 +
          (C36367 * C182 + C36212 * C394 + C36368 * C890 + C36213 * C1085 +
           C36369 * C891 + C36214 * C1086 + C36370 * C5012 + C36215 * C5299) *
              C798 -
          (C36370 * C4883 + C36215 * C5219 + C36369 * C4882 + C36214 * C5218 +
           C36368 * C806 + C36213 * C1023 + C36367 * C805 + C36212 * C1022) *
              C885 -
          (C36370 * C5014 + C36215 * C5300 + C36369 * C5012 + C36214 * C5299 +
           C36368 * C891 + C36213 * C1086 + C36367 * C890 + C36212 * C1085) *
              C799 +
          (C36367 * C806 + C36212 * C1023 + C36368 * C4882 + C36213 * C5218 +
           C36369 * C4883 + C36214 * C5219 + C36370 * C36671 +
           C36215 * C36897) *
              C886 +
          (C36367 * C891 + C36212 * C1086 + C36368 * C5012 + C36213 * C5299 +
           C36369 * C5014 + C36214 * C5300 + C36370 * C36759 +
           C36215 * C36949) *
              C800) *
         C92148 * C92062 * C92078 * C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C36367 * C107 + C36212 * C308 + C36368 * C805 + C36213 * C1022 +
            C36369 * C806 + C36214 * C1023 + C36370 * C4882 + C36215 * C5218) *
               C181 +
           (C36367 * C182 + C36212 * C394 + C36368 * C890 + C36213 * C1085 +
            C36369 * C891 + C36214 * C1086 + C36370 * C5012 + C36215 * C5299) *
               C92099) *
              C92148 * C92062 * C92078 * C1383 -
          ((C36370 * C8666 + C36215 * C8996 + C36369 * C5870 + C36214 * C6128 +
            C36368 * C3513 + C36213 * C3735 + C36367 * C1471 + C36212 * C1672) *
               C92099 +
           (C36370 * C8536 + C36215 * C8894 + C36369 * C5772 + C36214 * C6042 +
            C36368 * C3431 + C36213 * C3661 + C36367 * C1389 + C36212 * C1606) *
               C181) *
              C92148 * C92062 * C92078 * C1384 +
          ((C36367 * C1390 + C36212 * C1607 + C36368 * C5773 + C36213 * C6043 +
            C36369 * C5775 + C36214 * C6044 + C36370 * C37227 +
            C36215 * C37385) *
               C181 +
           (C36367 * C1472 + C36212 * C1673 + C36368 * C5871 + C36213 * C6129 +
            C36369 * C5873 + C36214 * C6130 + C36370 * C37281 +
            C36215 * C37437) *
               C92099) *
              C92148 * C92062 * C92078 * C1385)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C31487 * C107 + C31260 * C308 + C31488 * C805 + C92186 * C1022) *
                C181 +
            (C31487 * C182 + C31260 * C394 + C31488 * C890 + C92186 * C1085) *
                C92099) *
               C9514 +
           ((C31487 * C1389 + C31260 * C1606 + C31488 * C3431 +
             C92186 * C3661) *
                C181 +
            (C31487 * C1471 + C31260 * C1672 + C31488 * C3513 +
             C92186 * C3735) *
                C92099) *
               C9515 +
           ((C31487 * C1390 + C31260 * C1607 + C31488 * C5773 +
             C92186 * C6043) *
                C181 +
            (C31487 * C1472 + C31260 * C1673 + C31488 * C5871 +
             C92186 * C6129) *
                C92099) *
               C9516) *
              C92062 * C93 -
          (((C31488 * C5872 + C92186 * C6131 + C31487 * C1473 +
             C31260 * C1674) *
                C92099 +
            (C31488 * C5774 + C92186 * C6045 + C31487 * C1391 +
             C31260 * C1608) *
                C181) *
               C9516 +
           ((C34837 + C34836) * C92099 + (C34723 + C34722) * C181) * C9515 +
           ((C31616 + C31615) * C92099 + (C31514 + C31515) * C181) * C9514) *
              C92062 * C94 +
          (C31623 * C9514 +
           ((C34726 + C34727) * C181 + (C34838 + C34839) * C92099) * C9515 +
           ((C31487 * C1392 + C31260 * C1609 + C31488 * C11870 +
             C92186 * C12172) *
                C181 +
            (C31487 * C1474 + C31260 * C1675 + C31488 * C11972 +
             C92186 * C12284) *
                C92099) *
               C9516) *
              C92062 * C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C31487 * C107 + C31260 * C308 + C31488 * C805 + C92186 * C1022) *
               C884 +
           (C31487 * C182 + C31260 * C394 + C31488 * C890 + C92186 * C1085) *
               C798 -
           (C31488 * C806 + C92186 * C1023 + C31487 * C805 + C31260 * C1022) *
               C885 -
           (C31488 * C891 + C92186 * C1086 + C31487 * C890 + C31260 * C1085) *
               C799 +
           (C31487 * C806 + C31260 * C1023 + C31488 * C4882 + C92186 * C5218) *
               C886 +
           (C31487 * C891 + C31260 * C1086 + C31488 * C5012 + C92186 * C5299) *
               C800) *
              C9514 +
          ((C31487 * C1389 + C31260 * C1606 + C31488 * C3431 + C92186 * C3661) *
               C884 +
           (C31487 * C1471 + C31260 * C1672 + C31488 * C3513 + C92186 * C3735) *
               C798 -
           (C31488 * C5772 + C92186 * C6042 + C31487 * C3431 + C31260 * C3661) *
               C885 -
           (C31488 * C5870 + C92186 * C6128 + C31487 * C3513 + C31260 * C3735) *
               C799 +
           (C31487 * C5772 + C31260 * C6042 + C31488 * C8536 + C92186 * C8894) *
               C886 +
           (C31487 * C5870 + C31260 * C6128 + C31488 * C8666 + C92186 * C8996) *
               C800) *
              C9515 +
          ((C31487 * C1390 + C31260 * C1607 + C31488 * C5773 + C92186 * C6043) *
               C884 +
           (C31487 * C1472 + C31260 * C1673 + C31488 * C5871 + C92186 * C6129) *
               C798 -
           (C31488 * C5775 + C92186 * C6044 + C31487 * C5773 + C31260 * C6043) *
               C885 -
           (C31488 * C5873 + C92186 * C6130 + C31487 * C5871 + C31260 * C6129) *
               C799 +
           (C31487 * C5775 + C31260 * C6044 + C31488 * C37227 +
            C92186 * C37385) *
               C886 +
           (C31487 * C5873 + C31260 * C6130 + C31488 * C37281 +
            C92186 * C37437) *
               C800) *
              C9516) *
         C92062 * C92078 * C92110) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C31487 * C107 + C31260 * C308 + C31488 * C805 + C92186 * C1022) *
                C181 +
            (C31487 * C182 + C31260 * C394 + C31488 * C890 + C92186 * C1085) *
                C92099) *
               C9514 +
           ((C41420 + C41421) * C181 + (C41525 + C41526) * C92099) * C9515 +
           C41533 * C9516) *
              C92062 * C92078 * C1383 -
          (((C41529 + C41530) * C92099 + (C41430 + C41431) * C181) * C9516 +
           ((C41528 + C41527) * C92099 + (C41425 + C41424) * C181) * C9515 +
           ((C41526 + C41525) * C92099 + (C41421 + C41420) * C181) * C9514) *
              C92062 * C92078 * C1384 +
          (C41533 * C9514 +
           ((C41431 + C41430) * C181 + (C41530 + C41529) * C92099) * C9515 +
           ((C31487 * C10962 + C31260 * C11300 + C31488 * C41085 +
             C92186 * C41393) *
                C181 +
            (C31487 * C11094 + C31260 * C11420 + C31488 * C41200 +
             C92186 * C41510) *
                C92099) *
               C9516) *
              C92062 * C92078 * C1385)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[37] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C31487 * C107 + C31260 * C308 + C31488 * C805 +
                 C92186 * C1022) *
                    C244 +
                (C31487 * C245 + C31260 * C474 + C31488 * C956 +
                 C92186 * C1146) *
                    C92110) *
                   C92148 * C31257 +
               ((C31515 + C31514) * C244 + (C31712 + C31713) * C92110) *
                   C92148 * C31258 +
               C31721 * C31259) *
                  C92099 * C93 -
              (((C31716 + C31717) * C92110 + (C31523 + C31522) * C244) *
                   C92148 * C31259 +
               ((C31715 + C31714) * C92110 + (C31519 + C31518) * C244) *
                   C92148 * C31258 +
               ((C31713 + C31712) * C92110 + (C31514 + C31515) * C244) *
                   C92148 * C31257) *
                  C92099 * C94 +
              (C31721 * C31257 +
               ((C31522 + C31523) * C244 + (C31717 + C31716) * C92110) *
                   C92148 * C31258 +
               ((C31487 * C111 + C31260 * C312 + C31488 * C1989 +
                 C92186 * C2197) *
                    C244 +
                (C31487 * C249 + C31260 * C478 + C31488 * C2129 +
                 C92186 * C2371) *
                    C92110) *
                   C92148 * C31259) *
                  C92099 * C95) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C31487 * C107 + C31260 * C308 + C31488 * C805 +
                 C92186 * C1022) *
                    C244 +
                (C31487 * C245 + C31260 * C474 + C31488 * C956 +
                 C92186 * C1146) *
                    C92110) *
                   C92148 * C31257 +
               ((C31515 + C31514) * C244 + (C31712 + C31713) * C92110) *
                   C92148 * C31258 +
               C31721 * C31259) *
                  C798 -
              (((C31488 * C959 + C92186 * C1149 + C31487 * C954 +
                 C31260 * C1144) *
                    C92110 +
                (C31488 * C808 + C92186 * C1025 + C31487 * C803 +
                 C31260 * C1020) *
                    C244) *
                   C92148 * C31259 +
               ((C31488 * C958 + C92186 * C1148 + C31487 * C955 +
                 C31260 * C1145) *
                    C92110 +
                (C31488 * C807 + C92186 * C1024 + C31487 * C804 +
                 C31260 * C1021) *
                    C244) *
                   C92148 * C31258 +
               ((C31488 * C957 + C92186 * C1147 + C31487 * C956 +
                 C31260 * C1146) *
                    C92110 +
                (C31488 * C806 + C92186 * C1023 + C31487 * C805 +
                 C31260 * C1022) *
                    C244) *
                   C92148 * C31257) *
                  C799 +
              (((C31487 * C806 + C31260 * C1023 + C31488 * C4882 +
                 C92186 * C5218) *
                    C244 +
                (C31487 * C957 + C31260 * C1147 + C31488 * C5114 +
                 C92186 * C5378) *
                    C92110) *
                   C92148 * C31257 +
               ((C31487 * C807 + C31260 * C1024 + C31488 * C4881 +
                 C92186 * C5217) *
                    C244 +
                (C31487 * C958 + C31260 * C1148 + C31488 * C5113 +
                 C92186 * C5377) *
                    C92110) *
                   C92148 * C31258 +
               ((C31487 * C808 + C31260 * C1025 + C31488 * C6557 +
                 C92186 * C6907) *
                    C244 +
                (C31487 * C959 + C31260 * C1149 + C31488 * C6795 +
                 C92186 * C7133) *
                    C92110) *
                   C92148 * C31259) *
                  C800) *
             C92078) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C31487 * C107 + C31260 * C308 + C31488 * C805 + C92186 * C1022) *
               C1534 +
           (C31487 * C245 + C31260 * C474 + C31488 * C956 + C92186 * C1146) *
               C1383 -
           (C31488 * C3431 + C92186 * C3661 + C31487 * C1389 + C31260 * C1606) *
               C1535 -
           (C31488 * C3587 + C92186 * C3805 + C31487 * C1540 + C31260 * C1727) *
               C1384 +
           (C31487 * C1390 + C31260 * C1607 + C31488 * C5773 + C92186 * C6043) *
               C1536 +
           (C31487 * C1541 + C31260 * C1728 + C31488 * C5955 + C92186 * C6208) *
               C1385) *
              C92148 * C31257 +
          ((C31515 + C31514) * C1534 + (C31712 + C31713) * C1383 -
           (C31488 * C3432 + C92186 * C3662 + C31487 * C1388 + C31260 * C1605) *
               C1535 -
           (C31488 * C3588 + C92186 * C3806 + C31487 * C1539 + C31260 * C1729) *
               C1384 +
           (C31487 * C1391 + C31260 * C1608 + C31488 * C5774 + C92186 * C6045) *
               C1536 +
           (C31487 * C1542 + C31260 * C1730 + C31488 * C5956 + C92186 * C6211) *
               C1385) *
              C92148 * C31258 +
          (C31526 * C1534 + C31718 * C1383 -
           (C31488 * C3433 + C92186 * C3663 + C31487 * C1387 + C31260 * C1604) *
               C1535 -
           (C31488 * C3589 + C92186 * C3807 + C31487 * C1538 + C31260 * C1731) *
               C1384 +
           (C31487 * C1392 + C31260 * C1609 + C31488 * C11870 +
            C92186 * C12172) *
               C1536 +
           (C31487 * C1543 + C31260 * C1732 + C31488 * C12072 +
            C92186 * C12397) *
               C1385) *
              C92148 * C31259) *
         C92099 * C92078) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C36367 * C107 + C36212 * C308 + C36368 * C805 + C36213 * C1022 +
            C36369 * C806 + C36214 * C1023 + C36370 * C4882 + C36215 * C5218) *
               C244 +
           (C36367 * C245 + C36212 * C474 + C36368 * C956 + C36213 * C1146 +
            C36369 * C957 + C36214 * C1147 + C36370 * C5114 + C36215 * C5378) *
               C92110) *
              C92148 * C92062 * C92099 * C93 -
          ((C36370 * C5113 + C36215 * C5377 + C36369 * C958 + C36214 * C1148 +
            C36368 * C955 + C36213 * C1145 + C36367 * C246 + C36212 * C475) *
               C92110 +
           (C36370 * C4881 + C36215 * C5217 + C36369 * C807 + C36214 * C1024 +
            C36368 * C804 + C36213 * C1021 + C36367 * C108 + C36212 * C309) *
               C244) *
              C92148 * C92062 * C92099 * C94 +
          ((C36367 * C109 + C36212 * C310 + C36368 * C803 + C36213 * C1020 +
            C36369 * C808 + C36214 * C1025 + C36370 * C6557 + C36215 * C6907) *
               C244 +
           (C36367 * C247 + C36212 * C476 + C36368 * C954 + C36213 * C1144 +
            C36369 * C959 + C36214 * C1149 + C36370 * C6795 + C36215 * C7133) *
               C92110) *
              C92148 * C92062 * C92099 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C36367 * C107 + C36212 * C308 + C36368 * C805 + C36213 * C1022 +
            C36369 * C806 + C36214 * C1023 + C36370 * C4882 + C36215 * C5218) *
               C244 +
           (C36367 * C245 + C36212 * C474 + C36368 * C956 + C36213 * C1146 +
            C36369 * C957 + C36214 * C1147 + C36370 * C5114 + C36215 * C5378) *
               C92110) *
              C92148 * C92062 * C798 -
          ((C36370 * C5115 + C36215 * C5379 + C36369 * C5114 + C36214 * C5378 +
            C36368 * C957 + C36213 * C1147 + C36367 * C956 + C36212 * C1146) *
               C92110 +
           (C36370 * C4883 + C36215 * C5219 + C36369 * C4882 + C36214 * C5218 +
            C36368 * C806 + C36213 * C1023 + C36367 * C805 + C36212 * C1022) *
               C244) *
              C92148 * C92062 * C799 +
          ((C36367 * C806 + C36212 * C1023 + C36368 * C4882 + C36213 * C5218 +
            C36369 * C4883 + C36214 * C5219 + C36370 * C36671 +
            C36215 * C36897) *
               C244 +
           (C36367 * C957 + C36212 * C1147 + C36368 * C5114 + C36213 * C5378 +
            C36369 * C5115 + C36214 * C5379 + C36370 * C36823 +
            C36215 * C37000) *
               C92110) *
              C92148 * C92062 * C800) *
         C92078) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((C36367 * C107 + C36212 * C308 + C36368 * C805 + C36213 * C1022 +
           C36369 * C806 + C36214 * C1023 + C36370 * C4882 + C36215 * C5218) *
              C1534 +
          (C36367 * C245 + C36212 * C474 + C36368 * C956 + C36213 * C1146 +
           C36369 * C957 + C36214 * C1147 + C36370 * C5114 + C36215 * C5378) *
              C1383 -
          (C36370 * C8536 + C36215 * C8894 + C36369 * C5772 + C36214 * C6042 +
           C36368 * C3431 + C36213 * C3661 + C36367 * C1389 + C36212 * C1606) *
              C1535 -
          (C36370 * C8780 + C36215 * C9096 + C36369 * C5958 + C36214 * C6207 +
           C36368 * C3587 + C36213 * C3805 + C36367 * C1540 + C36212 * C1727) *
              C1384 +
          (C36367 * C1390 + C36212 * C1607 + C36368 * C5773 + C36213 * C6043 +
           C36369 * C5775 + C36214 * C6044 + C36370 * C37227 +
           C36215 * C37385) *
              C1536 +
          (C36367 * C1541 + C36212 * C1728 + C36368 * C5955 + C36213 * C6208 +
           C36369 * C5959 + C36214 * C6209 + C36370 * C37333 +
           C36215 * C37488) *
              C1385) *
         C92148 * C92062 * C92099 * C92078) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C31487 * C107 + C31260 * C308 + C31488 * C805 + C92186 * C1022) *
                C244 +
            (C31487 * C245 + C31260 * C474 + C31488 * C956 + C92186 * C1146) *
                C92110) *
               C9514 +
           ((C31487 * C1389 + C31260 * C1606 + C31488 * C3431 +
             C92186 * C3661) *
                C244 +
            (C31487 * C1540 + C31260 * C1727 + C31488 * C3587 +
             C92186 * C3805) *
                C92110) *
               C9515 +
           ((C31487 * C1390 + C31260 * C1607 + C31488 * C5773 +
             C92186 * C6043) *
                C244 +
            (C31487 * C1541 + C31260 * C1728 + C31488 * C5955 +
             C92186 * C6208) *
                C92110) *
               C9516) *
              C92062 * C92099 * C93 -
          (((C31488 * C5956 + C92186 * C6211 + C31487 * C1542 +
             C31260 * C1730) *
                C92110 +
            (C31488 * C5774 + C92186 * C6045 + C31487 * C1391 +
             C31260 * C1608) *
                C244) *
               C9516 +
           ((C34946 + C34947) * C92110 + (C34723 + C34722) * C244) * C9515 +
           ((C31713 + C31712) * C92110 + (C31514 + C31515) * C244) * C9514) *
              C92062 * C92099 * C94 +
          (C31720 * C9514 +
           ((C34726 + C34727) * C244 + (C34949 + C34948) * C92110) * C9515 +
           ((C31487 * C1392 + C31260 * C1609 + C31488 * C11870 +
             C92186 * C12172) *
                C244 +
            (C31487 * C1543 + C31260 * C1732 + C31488 * C12072 +
             C92186 * C12397) *
                C92110) *
               C9516) *
              C92062 * C92099 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C31487 * C107 + C31260 * C308 + C31488 * C805 + C92186 * C1022) *
                C244 +
            (C31487 * C245 + C31260 * C474 + C31488 * C956 + C92186 * C1146) *
                C92110) *
               C9514 +
           ((C31487 * C1389 + C31260 * C1606 + C31488 * C3431 +
             C92186 * C3661) *
                C244 +
            (C31487 * C1540 + C31260 * C1727 + C31488 * C3587 +
             C92186 * C3805) *
                C92110) *
               C9515 +
           ((C31487 * C1390 + C31260 * C1607 + C31488 * C5773 +
             C92186 * C6043) *
                C244 +
            (C31487 * C1541 + C31260 * C1728 + C31488 * C5955 +
             C92186 * C6208) *
                C92110) *
               C9516) *
              C92062 * C798 -
          (((C31488 * C5959 + C92186 * C6209 + C31487 * C5955 +
             C31260 * C6208) *
                C92110 +
            (C31488 * C5775 + C92186 * C6044 + C31487 * C5773 +
             C31260 * C6043) *
                C244) *
               C9516 +
           ((C31488 * C5958 + C92186 * C6207 + C31487 * C3587 +
             C31260 * C3805) *
                C92110 +
            (C31488 * C5772 + C92186 * C6042 + C31487 * C3431 +
             C31260 * C3661) *
                C244) *
               C9515 +
           ((C31488 * C957 + C92186 * C1147 + C31487 * C956 + C31260 * C1146) *
                C92110 +
            (C31488 * C806 + C92186 * C1023 + C31487 * C805 + C31260 * C1022) *
                C244) *
               C9514) *
              C92062 * C799 +
          (((C31487 * C806 + C31260 * C1023 + C31488 * C4882 + C92186 * C5218) *
                C244 +
            (C31487 * C957 + C31260 * C1147 + C31488 * C5114 + C92186 * C5378) *
                C92110) *
               C9514 +
           ((C31487 * C5772 + C31260 * C6042 + C31488 * C8536 +
             C92186 * C8894) *
                C244 +
            (C31487 * C5958 + C31260 * C6207 + C31488 * C8780 +
             C92186 * C9096) *
                C92110) *
               C9515 +
           ((C31487 * C5775 + C31260 * C6044 + C31488 * C37227 +
             C92186 * C37385) *
                C244 +
            (C31487 * C5959 + C31260 * C6209 + C31488 * C37333 +
             C92186 * C37488) *
                C92110) *
               C9516) *
              C92062 * C800) *
         C92078) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C31487 * C107 + C31260 * C308 + C31488 * C805 + C92186 * C1022) *
               C1534 +
           (C31487 * C245 + C31260 * C474 + C31488 * C956 + C92186 * C1146) *
               C1383 -
           (C41421 + C41420) * C1535 - (C41621 + C41622) * C1384 +
           C41432 * C1536 + C41627 * C1385) *
              C9514 +
          ((C41420 + C41421) * C1534 + (C41622 + C41621) * C1383 -
           (C41425 + C41424) * C1535 - (C41624 + C41623) * C1384 +
           (C41431 + C41430) * C1536 + (C41625 + C41626) * C1385) *
              C9515 +
          (C41432 * C1534 + C41627 * C1383 - (C41430 + C41431) * C1535 -
           (C41626 + C41625) * C1384 +
           (C31487 * C10962 + C31260 * C11300 + C31488 * C41085 +
            C92186 * C41393) *
               C1536 +
           (C31487 * C11199 + C31260 * C11519 + C31488 * C41305 +
            C92186 * C41607) *
               C1385) *
              C9516) *
         C92062 * C92099 * C92078) /
            (p * q * std::sqrt(p + q));
    d2eezx[37] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C554 * C107 + C92148 * C555) * C104 +
                (C554 * C117 + C92148 * C561) * C93 - C584 * C105 - C585 * C94 +
                C586 * C106 + C587 * C95) *
                   C31257 +
               (C584 * C104 + C585 * C93 - C586 * C105 - C587 * C94 +
                C588 * C106 + C589 * C95) *
                   C31258 +
               (C586 * C104 + C587 * C93 - C588 * C105 - C589 * C94 +
                C590 * C106 + C591 * C95) *
                   C31259) *
                  C31260 +
              ((C5484 * C104 + C5485 * C93 - C2468 * C105 - C2469 * C94 +
                C2470 * C106 + C2471 * C95) *
                   C31257 +
               (C2468 * C104 + C2469 * C93 - C2470 * C105 - C2471 * C94 +
                C2472 * C106 + C2473 * C95) *
                   C31258 +
               (C2470 * C104 + C2471 * C93 - C2472 * C105 - C2473 * C94 +
                (C554 * C1989 + C92148 * C2453) * C106 +
                (C554 * C1991 + C92148 * C2454) * C95) *
                   C31259) *
                  C92186) *
             C92110 * C92099 +
         0.5 * std::pow(Pi, 2.5) *
             (((((C554 * C107 + C92148 * C555) * C801 +
                 (C554 * C117 + C92148 * C561) * C92078) *
                    C31257 +
                (C584 * C801 + C585 * C92078) * C31258 +
                (C586 * C801 + C587 * C92078) * C31259) *
                   C31260 +
               ((C5493 + C5494) * C31257 + (C5468 + C5469) * C31258 +
                (C16084 + C16085) * C31259) *
                   C92186) *
                  C92110 * C798 -
              (((C16086 + C16087) * C31259 + (C5475 + C5474) * C31258 +
                (C5496 + C5495) * C31257) *
                   C92186 +
               ((C16085 + C16084) * C31259 + (C5469 + C5468) * C31258 +
                (C5494 + C5493) * C31257) *
                   C31260) *
                  C92110 * C799 +
              ((C5502 * C31257 + C5488 * C31258 + (C16087 + C16086) * C31259) *
                   C31260 +
               ((C5501 + C5500) * C31257 + (C5499 + C5498) * C31258 +
                ((C554 * C6557 + C92148 * C7241) * C801 +
                 (C554 * C6559 + C92148 * C7242) * C92078) *
                    C31259) *
                   C92186) *
                  C92110 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92148 * C555) * C801 +
             (C554 * C117 + C92148 * C561) * C92078) *
                C31257 +
            (C584 * C801 + C585 * C92078) * C31258 +
            (C586 * C801 + C587 * C92078) * C31259) *
               C31260 +
           ((C5493 + C5494) * C31257 + (C5468 + C5469) * C31258 +
            (C16084 + C16085) * C31259) *
               C92186) *
              C1383 -
          (((C19547 + C19548) * C31259 + (C9207 + C9208) * C31258 +
            (C9219 + C9220) * C31257) *
               C92186 +
           ((C3193 * C92078 + C3192 * C801) * C31259 +
            (C3191 * C92078 + C3190 * C801) * C31258 +
            ((C554 * C1397 + C92148 * C1796) * C92078 +
             (C554 * C1389 + C92148 * C1788) * C801) *
                C31257) *
               C31260) *
              C1384 +
          ((((C554 * C1390 + C92148 * C1789) * C801 +
             (C554 * C1406 + C92148 * C1797) * C92078) *
                C31257 +
            ((C554 * C1391 + C92148 * C1790) * C801 +
             (C554 * C1407 + C92148 * C1798) * C92078) *
                C31258 +
            ((C554 * C1392 + C92148 * C1791) * C801 +
             (C554 * C1408 + C92148 * C1799) * C92078) *
                C31259) *
               C31260 +
           (((C554 * C5773 + C92148 * C6289) * C801 +
             (C554 * C5783 + C92148 * C6295) * C92078) *
                C31257 +
            ((C554 * C5774 + C92148 * C6290) * C801 +
             (C554 * C5784 + C92148 * C6296) * C92078) *
                C31258 +
            ((C554 * C11870 + C92148 * C12506) * C801 +
             (C554 * C11872 + C92148 * C12507) * C92078) *
                C31259) *
               C92186) *
              C1385) *
         C92099) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C554 * C107 + C92148 * C555) * C104 +
           (C554 * C117 + C92148 * C561) * C93 - C584 * C105 - C585 * C94 +
           C586 * C106 + C587 * C95) *
              C92062 * C36212 +
          (C5484 * C104 + C5485 * C93 - C2468 * C105 - C2469 * C94 +
           C2470 * C106 + C2471 * C95) *
              C92062 * C36213 +
          (C5486 * C104 + C5487 * C93 - C4632 * C105 - C4633 * C94 +
           C4634 * C106 + C4635 * C95) *
              C92062 * C36214 +
          (C5492 * C104 + C5491 * C93 - C5490 * C105 - C5489 * C94 +
           (C554 * C6557 + C92148 * C7241) * C106 +
           (C554 * C6559 + C92148 * C7242) * C95) *
              C92062 * C36215) *
         C92110 * C92099) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92148 * C555) * C801 +
            (C554 * C117 + C92148 * C561) * C92078) *
               C92062 * C36212 +
           (C5493 + C5494) * C92062 * C36213 + C37054 * C36214 +
           C37060 * C36215) *
              C92110 * C798 -
          ((C37063 + C37064) * C92062 * C36215 +
           (C5500 + C5501) * C92062 * C36214 +
           (C5496 + C5495) * C92062 * C36213 +
           (C5494 + C5493) * C92062 * C36212) *
              C92110 * C799 +
          (C37054 * C36212 + C37060 * C36213 +
           (C37064 + C37063) * C92062 * C36214 +
           ((C554 * C36671 + C92148 * C37051) * C801 +
            (C554 * C36673 + C92148 * C37052) * C92078) *
               C92062 * C36215) *
              C92110 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92148 * C555) * C801 +
            (C554 * C117 + C92148 * C561) * C92078) *
               C92062 * C36212 +
           (C5493 + C5494) * C92062 * C36213 + C37054 * C36214 +
           C37060 * C36215) *
              C1383 -
          (((C554 * C8540 + C92148 * C9198) * C92078 +
            (C554 * C8536 + C92148 * C9196) * C801) *
               C92062 * C36215 +
           (C9217 + C9218) * C92062 * C36214 +
           (C9219 + C9220) * C92062 * C36213 +
           ((C554 * C1397 + C92148 * C1796) * C92078 +
            (C554 * C1389 + C92148 * C1788) * C801) *
               C92062 * C36212) *
              C1384 +
          (((C554 * C1390 + C92148 * C1789) * C801 +
            (C554 * C1406 + C92148 * C1797) * C92078) *
               C92062 * C36212 +
           ((C554 * C5773 + C92148 * C6289) * C801 +
            (C554 * C5783 + C92148 * C6295) * C92078) *
               C92062 * C36213 +
           ((C554 * C5775 + C92148 * C6291) * C801 +
            (C554 * C5787 + C92148 * C6297) * C92078) *
               C92062 * C36214 +
           ((C554 * C37227 + C92148 * C37539) * C801 +
            (C554 * C37229 + C92148 * C37540) * C92078) *
               C92062 * C36215) *
              C1385) *
         C92099) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C9997 * C107 + C9514 * C555 + C9998 * C1389 + C9515 * C1788 +
            C9999 * C1390 + C9516 * C1789) *
               C104 +
           (C9997 * C117 + C9514 * C561 + C9998 * C1397 + C9515 * C1796 +
            C9999 * C1406 + C9516 * C1797) *
               C93 -
           (C10025 + C10026 + C10027) * C105 -
           (C10028 + C10029 + C10030) * C94 +
           (C10031 + C10032 + C10033) * C106 +
           (C10034 + C10035 + C10036) * C95) *
              C92062 * C31260 +
          ((C9997 * C805 + C9514 * C1204 + C9998 * C3431 + C9515 * C3875 +
            C9999 * C5773 + C9516 * C6289) *
               C104 +
           (C9997 * C813 + C9514 * C1212 + C9998 * C3439 + C9515 * C3879 +
            C9999 * C5783 + C9516 * C6295) *
               C93 -
           (C12523 + C12522 + C12521) * C105 -
           (C12526 + C12525 + C12524) * C94 +
           (C9997 * C803 + C9514 * C1202 + C9998 * C3433 + C9515 * C3877 +
            C9999 * C11870 + C9516 * C12506) *
               C106 +
           (C9997 * C811 + C9514 * C1210 + C9998 * C3441 + C9515 * C3881 +
            C9999 * C11872 + C9516 * C12507) *
               C95) *
              C92062 * C92186) *
         C92110 * C92099) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C9997 * C107 + C9514 * C555 + C9998 * C1389 + C9515 * C1788 +
             C9999 * C1390 + C9516 * C1789) *
                C801 +
            (C9997 * C117 + C9514 * C561 + C9998 * C1397 + C9515 * C1796 +
             C9999 * C1406 + C9516 * C1797) *
                C92078) *
               C92062 * C31260 +
           ((C40816 + C40817 + C40818) * C801 +
            (C40819 + C40820 + C40821) * C92078) *
               C92062 * C92186) *
              C92110 * C798 -
          (((C40822 + C40823 + C40824) * C92078 +
            (C40825 + C40826 + C40827) * C801) *
               C92062 * C92186 +
           ((C40821 + C40820 + C40819) * C92078 +
            (C40818 + C40817 + C40816) * C801) *
               C92062 * C31260) *
              C92110 * C799 +
          (((C40827 + C40826 + C40825) * C801 +
            (C40824 + C40823 + C40822) * C92078) *
               C92062 * C31260 +
           ((C9997 * C4882 + C9514 * C5456 + C9998 * C8536 + C9515 * C9196 +
             C9999 * C37227 + C9516 * C37539) *
                C801 +
            (C9997 * C4886 + C9514 * C5460 + C9998 * C8540 + C9515 * C9198 +
             C9999 * C37229 + C9516 * C37540) *
                C92078) *
               C92062 * C92186) *
              C92110 * C800)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C9997 * C107 + C9514 * C555 + C9998 * C1389 + C9515 * C1788 +
             C9999 * C1390 + C9516 * C1789) *
                C801 +
            (C9997 * C117 + C9514 * C561 + C9998 * C1397 + C9515 * C1796 +
             C9999 * C1406 + C9516 * C1797) *
                C92078) *
               C92062 * C31260 +
           ((C40816 + C40817 + C40818) * C801 +
            (C40819 + C40820 + C40821) * C92078) *
               C92062 * C92186) *
              C1383 -
          (((C9999 * C13853 + C9516 * C14527 + C9998 * C5783 + C9515 * C6295 +
             C9997 * C3439 + C9514 * C3879) *
                C92078 +
            (C9999 * C13849 + C9516 * C14525 + C9998 * C5773 + C9515 * C6289 +
             C9997 * C3431 + C9514 * C3875) *
                C801) *
               C92062 * C92186 +
           ((C9999 * C10965 + C9516 * C11613 + C9998 * C1406 + C9515 * C1797 +
             C9997 * C1397 + C9514 * C1796) *
                C92078 +
            (C9999 * C10961 + C9516 * C11609 + C9998 * C1390 + C9515 * C1789 +
             C9997 * C1389 + C9514 * C1788) *
                C801) *
               C92062 * C31260) *
              C1384 +
          (((C9997 * C1390 + C9514 * C1789 + C9998 * C10961 + C9515 * C11609 +
             C9999 * C10962 + C9516 * C11610) *
                C801 +
            (C9997 * C1406 + C9514 * C1797 + C9998 * C10965 + C9515 * C11613 +
             C9999 * C10970 + C9516 * C11614) *
                C92078) *
               C92062 * C31260 +
           ((C9997 * C5773 + C9514 * C6289 + C9998 * C13849 + C9515 * C14525 +
             C9999 * C41085 + C9516 * C41701) *
                C801 +
            (C9997 * C5783 + C9514 * C6295 + C9998 * C13853 + C9515 * C14527 +
             C9999 * C41087 + C9516 * C41702) *
                C92078) *
               C92062 * C92186) *
              C1385) *
         C92099) /
            (p * q * std::sqrt(p + q));
    d2eezy[37] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((((C554 * C107 + C92148 * C555) * C181 +
                 (C554 * C182 + C92148 * C641) * C92099) *
                    C31257 +
                (C648 + C664) * C31258 + C668 * C31259) *
                   C31260 +
               ((C5484 * C181 + C5591 * C92099) * C31257 +
                (C4710 + C4711) * C31258 + C15416 * C31259) *
                   C92186) *
                  C93 -
              (((C15417 + C15418) * C31259 + (C4718 + C4719) * C31258 +
                (C4711 + C4710) * C31257) *
                   C92186 +
               ((C666 + C654) * C31259 + (C665 + C651) * C31258 +
                (C664 + C648) * C31257) *
                   C31260) *
                  C94 +
              ((C668 * C31257 + C669 * C31258 + (C659 + C667) * C31259) *
                   C31260 +
               (C15416 * C31257 + (C15418 + C15417) * C31258 +
                ((C554 * C1989 + C92148 * C2453) * C181 +
                 (C554 * C2061 + C92148 * C2539) * C92099) *
                    C31259) *
                   C92186) *
                  C95) *
             C92110 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C554 * C107 + C92148 * C555) * C884 +
                (C554 * C182 + C92148 * C641) * C798 - C5484 * C885 -
                C5591 * C799 + C5486 * C886 + C5592 * C800) *
                   C31257 +
               (C584 * C884 + C660 * C798 - C2468 * C885 - C2556 * C799 +
                C4632 * C886 + C4720 * C800) *
                   C31258 +
               (C586 * C884 + C661 * C798 - C2470 * C885 - C2557 * C799 +
                C4634 * C886 + C4721 * C800) *
                   C31259) *
                  C31260 +
              ((C5484 * C884 + C5591 * C798 - C5486 * C885 - C5592 * C799 +
                C5492 * C886 + C5593 * C800) *
                   C31257 +
               (C2468 * C884 + C2556 * C798 - C4632 * C885 - C4720 * C799 +
                C5490 * C886 + C5594 * C800) *
                   C31258 +
               (C2470 * C884 + C2557 * C798 - C4634 * C885 - C4721 * C799 +
                (C554 * C6557 + C92148 * C7241) * C886 +
                (C554 * C6683 + C92148 * C7357) * C800) *
                   C31259) *
                  C92186) *
             C92078 * C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92148 * C555) * C181 +
             (C554 * C182 + C92148 * C641) * C92099) *
                C31257 +
            (C648 + C664) * C31258 + C668 * C31259) *
               C31260 +
           ((C5484 * C181 + C5591 * C92099) * C31257 +
            (C4710 + C4711) * C31258 + C15416 * C31259) *
               C92186) *
              C92078 * C1383 -
          (((C18719 + C18715) * C31259 + (C8324 + C8316) * C31258 +
            (C9325 * C92099 + C9216 * C181) * C31257) *
               C92186 +
           ((C3276 + C3266) * C31259 + (C3275 + C3263) * C31258 +
            ((C554 * C1471 + C92148 * C1854) * C92099 +
             (C554 * C1389 + C92148 * C1788) * C181) *
                C31257) *
               C31260) *
              C92078 * C1384 +
          ((((C554 * C1390 + C92148 * C1789) * C181 +
             (C554 * C1472 + C92148 * C1855) * C92099) *
                C31257 +
            ((C554 * C1391 + C92148 * C1790) * C181 +
             (C554 * C1473 + C92148 * C1856) * C92099) *
                C31258 +
            ((C554 * C1392 + C92148 * C1791) * C181 +
             (C554 * C1474 + C92148 * C1857) * C92099) *
                C31259) *
               C31260 +
           (((C554 * C5773 + C92148 * C6289) * C181 +
             (C554 * C5871 + C92148 * C6375) * C92099) *
                C31257 +
            ((C554 * C5774 + C92148 * C6290) * C181 +
             (C554 * C5872 + C92148 * C6376) * C92099) *
                C31258 +
            ((C554 * C11870 + C92148 * C12506) * C181 +
             (C554 * C11972 + C92148 * C12624) * C92099) *
                C31259) *
               C92186) *
              C92078 * C1385)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92148 * C555) * C181 +
            (C554 * C182 + C92148 * C641) * C92099) *
               C92062 * C36212 +
           (C5484 * C181 + C5591 * C92099) * C92062 * C36213 +
           (C5486 * C181 + C5592 * C92099) * C92062 * C36214 +
           (C5492 * C181 + C5593 * C92099) * C92062 * C36215) *
              C93 -
          ((C5594 * C92099 + C5490 * C181) * C92062 * C36215 +
           (C4722 + C4712) * C92062 * C36214 +
           (C4711 + C4710) * C92062 * C36213 +
           (C664 + C648) * C92062 * C36212) *
              C94 +
          (C668 * C92062 * C36212 + C15416 * C92062 * C36213 +
           (C4717 + C4723) * C92062 * C36214 +
           ((C554 * C6557 + C92148 * C7241) * C181 +
            (C554 * C6683 + C92148 * C7357) * C92099) *
               C92062 * C36215) *
              C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C554 * C107 + C92148 * C555) * C884 +
           (C554 * C182 + C92148 * C641) * C798 - C5484 * C885 - C5591 * C799 +
           C5486 * C886 + C5592 * C800) *
              C92062 * C36212 +
          (C5484 * C884 + C5591 * C798 - C5486 * C885 - C5592 * C799 +
           C5492 * C886 + C5593 * C800) *
              C92062 * C36213 +
          (C5486 * C884 + C5592 * C798 - C5492 * C885 - C5593 * C799 +
           C37062 * C886 + C37118 * C800) *
              C92062 * C36214 +
          (C5492 * C884 + C5593 * C798 - C37062 * C885 - C37118 * C799 +
           (C554 * C36671 + C92148 * C37051) * C886 +
           (C554 * C36759 + C92148 * C37114) * C800) *
              C92062 * C36215) *
         C92078 * C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92148 * C555) * C181 +
            (C554 * C182 + C92148 * C641) * C92099) *
               C92062 * C36212 +
           (C5484 * C181 + C5591 * C92099) * C92062 * C36213 +
           (C5486 * C181 + C5592 * C92099) * C92062 * C36214 +
           (C5492 * C181 + C5593 * C92099) * C92062 * C36215) *
              C92078 * C1383 -
          (((C554 * C8666 + C92148 * C9318) * C92099 +
            (C554 * C8536 + C92148 * C9196) * C181) *
               C92062 * C36215 +
           (C9326 * C92099 + C9214 * C181) * C92062 * C36214 +
           (C9325 * C92099 + C9216 * C181) * C92062 * C36213 +
           ((C554 * C1471 + C92148 * C1854) * C92099 +
            (C554 * C1389 + C92148 * C1788) * C181) *
               C92062 * C36212) *
              C92078 * C1384 +
          (((C554 * C1390 + C92148 * C1789) * C181 +
            (C554 * C1472 + C92148 * C1855) * C92099) *
               C92062 * C36212 +
           ((C554 * C5773 + C92148 * C6289) * C181 +
            (C554 * C5871 + C92148 * C6375) * C92099) *
               C92062 * C36213 +
           ((C554 * C5775 + C92148 * C6291) * C181 +
            (C554 * C5873 + C92148 * C6377) * C92099) *
               C92062 * C36214 +
           ((C554 * C37227 + C92148 * C37539) * C181 +
            (C554 * C37281 + C92148 * C37591) * C92099) *
               C92062 * C36215) *
              C92078 * C1385)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C9997 * C107 + C9514 * C555 + C9998 * C1389 + C9515 * C1788 +
             C9999 * C1390 + C9516 * C1789) *
                C181 +
            (C9997 * C182 + C9514 * C641 + C9998 * C1471 + C9515 * C1854 +
             C9999 * C1472 + C9516 * C1855) *
                C92099) *
               C92062 * C31260 +
           ((C9997 * C805 + C9514 * C1204 + C9998 * C3431 + C9515 * C3875 +
             C9999 * C5773 + C9516 * C6289) *
                C181 +
            (C9997 * C890 + C9514 * C1267 + C9998 * C3513 + C9515 * C3949 +
             C9999 * C5871 + C9516 * C6375) *
                C92099) *
               C92062 * C92186) *
              C93 -
          (((C12632 + C12633 + C12634) * C92099 +
            (C12523 + C12522 + C12521) * C181) *
               C92062 * C92186 +
           ((C10125 + C10124 + C10123) * C92099 +
            (C10025 + C10026 + C10027) * C181) *
               C92062 * C31260) *
              C94 +
          (((C10031 + C10032 + C10033) * C181 +
            (C10128 + C10127 + C10126) * C92099) *
               C92062 * C31260 +
           ((C9997 * C803 + C9514 * C1202 + C9998 * C3433 + C9515 * C3877 +
             C9999 * C11870 + C9516 * C12506) *
                C181 +
            (C9997 * C888 + C9514 * C1271 + C9998 * C3515 + C9515 * C3951 +
             C9999 * C11972 + C9516 * C12624) *
                C92099) *
               C92062 * C92186) *
              C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C9997 * C107 + C9514 * C555 + C9998 * C1389 + C9515 * C1788 +
            C9999 * C1390 + C9516 * C1789) *
               C884 +
           (C9997 * C182 + C9514 * C641 + C9998 * C1471 + C9515 * C1854 +
            C9999 * C1472 + C9516 * C1855) *
               C798 -
           (C40818 + C40817 + C40816) * C885 -
           (C40914 + C40915 + C40916) * C799 +
           (C40827 + C40826 + C40825) * C886 +
           (C40917 + C40918 + C40919) * C800) *
              C92062 * C31260 +
          ((C40816 + C40817 + C40818) * C884 +
           (C40916 + C40915 + C40914) * C798 -
           (C40825 + C40826 + C40827) * C885 -
           (C40919 + C40918 + C40917) * C799 +
           (C9997 * C4882 + C9514 * C5456 + C9998 * C8536 + C9515 * C9196 +
            C9999 * C37227 + C9516 * C37539) *
               C886 +
           (C9997 * C5012 + C9514 * C5578 + C9998 * C8666 + C9515 * C9318 +
            C9999 * C37281 + C9516 * C37591) *
               C800) *
              C92062 * C92186) *
         C92078 * C92110) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C9997 * C107 + C9514 * C555 + C9998 * C1389 + C9515 * C1788 +
             C9999 * C1390 + C9516 * C1789) *
                C181 +
            (C9997 * C182 + C9514 * C641 + C9998 * C1471 + C9515 * C1854 +
             C9999 * C1472 + C9516 * C1855) *
                C92099) *
               C92062 * C31260 +
           ((C40816 + C40817 + C40818) * C181 +
            (C40916 + C40915 + C40914) * C92099) *
               C92062 * C92186) *
              C92078 * C1383 -
          (((C9999 * C13967 + C9516 * C14627 + C9998 * C5871 + C9515 * C6375 +
             C9997 * C3513 + C9514 * C3949) *
                C92099 +
            (C9999 * C13849 + C9516 * C14525 + C9998 * C5773 + C9515 * C6289 +
             C9997 * C3431 + C9514 * C3875) *
                C181) *
               C92062 * C92186 +
           ((C9999 * C11093 + C9516 * C11691 + C9998 * C1472 + C9515 * C1855 +
             C9997 * C1471 + C9514 * C1854) *
                C92099 +
            (C9999 * C10961 + C9516 * C11609 + C9998 * C1390 + C9515 * C1789 +
             C9997 * C1389 + C9514 * C1788) *
                C181) *
               C92062 * C31260) *
              C92078 * C1384 +
          (((C9997 * C1390 + C9514 * C1789 + C9998 * C10961 + C9515 * C11609 +
             C9999 * C10962 + C9516 * C11610) *
                C181 +
            (C9997 * C1472 + C9514 * C1855 + C9998 * C11093 + C9515 * C11691 +
             C9999 * C11094 + C9516 * C11692) *
                C92099) *
               C92062 * C31260 +
           ((C9997 * C5773 + C9514 * C6289 + C9998 * C13849 + C9515 * C14525 +
             C9999 * C41085 + C9516 * C41701) *
                C181 +
            (C9997 * C5871 + C9514 * C6375 + C9998 * C13967 + C9515 * C14627 +
             C9999 * C41200 + C9516 * C41777) *
                C92099) *
               C92062 * C92186) *
              C92078 * C1385)) /
            (p * q * std::sqrt(p + q));
    d2eezz[37] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((((C554 * C107 + C92148 * C555) * C244 +
                 (C554 * C245 + C92148 * C719) * C92110) *
                    C31257 +
                (C726 + C742) * C31258 + C746 * C31259) *
                   C31260 +
               ((C5673 + C5691) * C31257 + C7466 * C31258 + C15493 * C31259) *
                   C92186) *
                  C92099 * C93 -
              (((C2641 + C2631) * C31259 + C17876 * C31258 + C7468 * C31257) *
                   C92186 +
               ((C744 + C732) * C31259 + (C743 + C729) * C31258 +
                (C742 + C726) * C31257) *
                   C31260) *
                  C92099 * C94 +
              ((C746 * C31257 + C747 * C31258 + (C737 + C745) * C31259) *
                   C31260 +
               (C15493 * C31257 + (C2631 + C2641) * C31258 +
                ((C554 * C1989 + C92148 * C2453) * C244 +
                 (C554 * C2129 + C92148 * C2627) * C92110) *
                    C31259) *
                   C92186) *
                  C92099 * C95) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C554 * C107 + C92148 * C555) * C244 +
                 (C554 * C245 + C92148 * C719) * C92110) *
                    C31257 +
                (C726 + C742) * C31258 + C746 * C31259) *
                   C31260 +
               ((C5673 + C5691) * C31257 + C7466 * C31258 + C15493 * C31259) *
                   C92186) *
                  C798 -
              (((C4807 + C4803) * C31259 + C7467 * C31258 +
                (C5692 + C5676) * C31257) *
                   C92186 +
               (C17876 * C31259 + C7468 * C31258 + (C5691 + C5673) * C31257) *
                   C31260) *
                  C799 +
              ((C5695 * C31257 + C5679 * C31258 + (C4803 + C4807) * C31259) *
                   C31260 +
               ((C5685 + C5694) * C31257 + (C5682 + C5693) * C31258 +
                ((C554 * C6557 + C92148 * C7241) * C244 +
                 (C554 * C6795 + C92148 * C7464) * C92110) *
                    C31259) *
                   C92186) *
                  C800) *
             C92078) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92148 * C555) * C1534 +
            (C554 * C245 + C92148 * C719) * C1383 -
            (C554 * C1389 + C92148 * C1788) * C1535 -
            (C554 * C1540 + C92148 * C1909) * C1384 +
            (C554 * C1390 + C92148 * C1789) * C1536 +
            (C554 * C1541 + C92148 * C1910) * C1385) *
               C31257 +
           (C584 * C1534 + C738 * C1383 - C3190 * C1535 - C3360 * C1384 +
            (C554 * C1391 + C92148 * C1790) * C1536 +
            (C554 * C1542 + C92148 * C1912) * C1385) *
               C31258 +
           (C586 * C1534 + C739 * C1383 - C3192 * C1535 - C3361 * C1384 +
            (C554 * C1392 + C92148 * C1791) * C1536 +
            (C554 * C1543 + C92148 * C1914) * C1385) *
               C31259) *
              C31260 +
          ((C5484 * C1534 + C5686 * C1383 - C9216 * C1535 - C9437 * C1384 +
            (C554 * C5773 + C92148 * C6289) * C1536 +
            (C554 * C5955 + C92148 * C6453) * C1385) *
               C31257 +
           (C2468 * C1534 + C2640 * C1383 - C8213 * C1535 - C8435 * C1384 +
            (C554 * C5774 + C92148 * C6290) * C1536 +
            (C554 * C5956 + C92148 * C6454) * C1385) *
               C31258 +
           (C2470 * C1534 + C2639 * C1383 - C18615 * C1535 - C18823 * C1384 +
            (C554 * C11870 + C92148 * C12506) * C1536 +
            (C554 * C12072 + C92148 * C12732) * C1385) *
               C31259) *
              C92186) *
         C92099 * C92078) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92148 * C555) * C244 +
            (C554 * C245 + C92148 * C719) * C92110) *
               C92062 * C36212 +
           (C5673 + C5691) * C92062 * C36213 + C5695 * C92062 * C36214 +
           (C5685 + C5694) * C92062 * C36215) *
              C92099 * C93 -
          ((C5693 + C5682) * C92062 * C36215 + C7467 * C92062 * C36214 +
           C7468 * C92062 * C36213 + (C742 + C726) * C92062 * C36212) *
              C92099 * C94 +
          (C746 * C92062 * C36212 + C15493 * C92062 * C36213 +
           (C4803 + C4807) * C92062 * C36214 +
           ((C554 * C6557 + C92148 * C7241) * C244 +
            (C554 * C6795 + C92148 * C7464) * C92110) *
               C92062 * C36215) *
              C92099 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92148 * C555) * C244 +
            (C554 * C245 + C92148 * C719) * C92110) *
               C92062 * C36212 +
           (C5673 + C5691) * C92062 * C36213 + C37170 * C36214 +
           C37175 * C36215) *
              C798 -
          ((C37177 + C37174) * C92062 * C36215 +
           (C5694 + C5685) * C92062 * C36214 +
           (C5692 + C5676) * C92062 * C36213 +
           (C5691 + C5673) * C92062 * C36212) *
              C799 +
          (C37170 * C36212 + C37175 * C36213 +
           (C37174 + C37177) * C92062 * C36214 +
           ((C554 * C36671 + C92148 * C37051) * C244 +
            (C554 * C36823 + C92148 * C37168) * C92110) *
               C92062 * C36215) *
              C800) *
         C92078) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C554 * C107 + C92148 * C555) * C1534 +
           (C554 * C245 + C92148 * C719) * C1383 -
           (C554 * C1389 + C92148 * C1788) * C1535 -
           (C554 * C1540 + C92148 * C1909) * C1384 +
           (C554 * C1390 + C92148 * C1789) * C1536 +
           (C554 * C1541 + C92148 * C1910) * C1385) *
              C92062 * C36212 +
          (C5484 * C1534 + C5686 * C1383 - C9216 * C1535 - C9437 * C1384 +
           (C554 * C5773 + C92148 * C6289) * C1536 +
           (C554 * C5955 + C92148 * C6453) * C1385) *
              C92062 * C36213 +
          (C5486 * C1534 + C5687 * C1383 - C9214 * C1535 - C9438 * C1384 +
           (C554 * C5775 + C92148 * C6291) * C1536 +
           (C554 * C5959 + C92148 * C6456) * C1385) *
              C92062 * C36214 +
          (C5492 * C1534 + C5690 * C1383 -
           (C554 * C8536 + C92148 * C9196) * C1535 -
           (C554 * C8780 + C92148 * C9424) * C1384 +
           (C554 * C37227 + C92148 * C37539) * C1536 +
           (C554 * C37333 + C92148 * C37642) * C1385) *
              C92062 * C36215) *
         C92099 * C92078) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C9997 * C107 + C9514 * C555 + C9998 * C1389 + C9515 * C1788 +
             C9999 * C1390 + C9516 * C1789) *
                C244 +
            (C9997 * C245 + C9514 * C719 + C9998 * C1540 + C9515 * C1909 +
             C9999 * C1541 + C9516 * C1910) *
                C92110) *
               C92062 * C31260 +
           ((C9997 * C805 + C9514 * C1204 + C9998 * C3431 + C9515 * C3875 +
             C9999 * C5773 + C9516 * C6289) *
                C244 +
            (C9997 * C956 + C9514 * C1328 + C9998 * C3587 + C9515 * C4019 +
             C9999 * C5955 + C9516 * C6453) *
                C92110) *
               C92062 * C92186) *
              C92099 * C93 -
          (((C12740 + C12741 + C12742) * C92110 +
            (C12523 + C12522 + C12521) * C244) *
               C92062 * C92186 +
           ((C10217 + C10216 + C10215) * C92110 +
            (C10025 + C10026 + C10027) * C244) *
               C92062 * C31260) *
              C92099 * C94 +
          (((C10031 + C10032 + C10033) * C244 +
            (C10220 + C10219 + C10218) * C92110) *
               C92062 * C31260 +
           ((C9997 * C803 + C9514 * C1202 + C9998 * C3433 + C9515 * C3877 +
             C9999 * C11870 + C9516 * C12506) *
                C244 +
            (C9997 * C954 + C9514 * C1326 + C9998 * C3589 + C9515 * C4021 +
             C9999 * C12072 + C9516 * C12732) *
                C92110) *
               C92062 * C92186) *
              C92099 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C9997 * C107 + C9514 * C555 + C9998 * C1389 + C9515 * C1788 +
             C9999 * C1390 + C9516 * C1789) *
                C244 +
            (C9997 * C245 + C9514 * C719 + C9998 * C1540 + C9515 * C1909 +
             C9999 * C1541 + C9516 * C1910) *
                C92110) *
               C92062 * C31260 +
           ((C40816 + C40817 + C40818) * C244 +
            (C41006 + C41007 + C41008) * C92110) *
               C92062 * C92186) *
              C798 -
          (((C41009 + C41010 + C41011) * C92110 +
            (C40825 + C40826 + C40827) * C244) *
               C92062 * C92186 +
           ((C41008 + C41007 + C41006) * C92110 +
            (C40818 + C40817 + C40816) * C244) *
               C92062 * C31260) *
              C799 +
          (((C40827 + C40826 + C40825) * C244 +
            (C41011 + C41010 + C41009) * C92110) *
               C92062 * C31260 +
           ((C9997 * C4882 + C9514 * C5456 + C9998 * C8536 + C9515 * C9196 +
             C9999 * C37227 + C9516 * C37539) *
                C244 +
            (C9997 * C5114 + C9514 * C5669 + C9998 * C8780 + C9515 * C9424 +
             C9999 * C37333 + C9516 * C37642) *
                C92110) *
               C92062 * C92186) *
              C800) *
         C92078) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C9997 * C107 + C9514 * C555 + C9998 * C1389 + C9515 * C1788 +
            C9999 * C1390 + C9516 * C1789) *
               C1534 +
           (C9997 * C245 + C9514 * C719 + C9998 * C1540 + C9515 * C1909 +
            C9999 * C1541 + C9516 * C1910) *
               C1383 -
           (C9999 * C10961 + C9516 * C11609 + C9998 * C1390 + C9515 * C1789 +
            C9997 * C1389 + C9514 * C1788) *
               C1535 -
           (C9999 * C11197 + C9516 * C11768 + C9998 * C1541 + C9515 * C1910 +
            C9997 * C1540 + C9514 * C1909) *
               C1384 +
           (C9997 * C1390 + C9514 * C1789 + C9998 * C10961 + C9515 * C11609 +
            C9999 * C10962 + C9516 * C11610) *
               C1536 +
           (C9997 * C1541 + C9514 * C1910 + C9998 * C11197 + C9515 * C11768 +
            C9999 * C11199 + C9516 * C11769) *
               C1385) *
              C92062 * C31260 +
          ((C40816 + C40817 + C40818) * C1534 +
           (C41006 + C41007 + C41008) * C1383 -
           (C9999 * C13849 + C9516 * C14525 + C9998 * C5773 + C9515 * C6289 +
            C9997 * C3431 + C9514 * C3875) *
               C1535 -
           (C9999 * C14075 + C9516 * C14727 + C9998 * C5955 + C9515 * C6453 +
            C9997 * C3587 + C9514 * C4019) *
               C1384 +
           (C9997 * C5773 + C9514 * C6289 + C9998 * C13849 + C9515 * C14525 +
            C9999 * C41085 + C9516 * C41701) *
               C1536 +
           (C9997 * C5955 + C9514 * C6453 + C9998 * C14075 + C9515 * C14727 +
            C9999 * C41305 + C9516 * C41852) *
               C1385) *
              C92062 * C92186) *
         C92099 * C92078) /
            (p * q * std::sqrt(p + q));
    d2eexx[38] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C36216 * C107 + C92062 * C113) * C1987 +
                      (C36216 * C117 + C92062 * C125) * C1983 -
                      (C36216 * C108 + C92062 * C114) * C1988 -
                      (C36216 * C118 + C92062 * C126) * C1984) *
                         C36212 +
                     (C37710 + C37711 - C37734 - C37735) * C36213 +
                     (C37716 + C37717 - C37736 - C37737) * C36214 +
                     (C37722 + C37723 - C37738 - C37739) * C36215) *
                        C92148 * C2709 +
                    (((C36216 * C1388 + C92062 * C1400) * C1988 -
                      ((C36216 * C1397 + C92062 * C1413) * C1983 +
                       (C36216 * C1389 + C92062 * C1401) * C1987) +
                      (C36216 * C1396 + C92062 * C1412) * C1984) *
                         C36212 +
                     ((C36216 * C3432 + C92062 * C3436) * C1988 -
                      ((C36216 * C3439 + C92062 * C3443) * C1983 +
                       (C36216 * C3431 + C92062 * C3435) * C1987) +
                      (C36216 * C3440 + C92062 * C3444) * C1984) *
                         C36213 +
                     ((C36216 * C5771 + C92062 * C5779) * C1988 -
                      ((C36216 * C5778 + C92062 * C5790) * C1983 +
                       (C36216 * C5772 + C92062 * C5780) * C1987) +
                      (C36216 * C5777 + C92062 * C5789) * C1984) *
                         C36214 +
                     ((C36216 * C8537 + C92062 * C8539) * C1988 -
                      ((C36216 * C8540 + C92062 * C8542) * C1983 +
                       (C36216 * C8536 + C92062 * C8538) * C1987) +
                      (C36216 * C8541 + C92062 * C8543) * C1984) *
                         C36215) *
                        C92148 * C2710) *
                   C92099) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C31262 * C107 + C31257 * C113 + C31263 * C108 +
                       C31258 * C114 + C31264 * C109 + C31259 * C115) *
                          C1987 +
                      (C31262 * C117 + C31257 * C125 + C31263 * C118 +
                       C31258 * C126 + C31264 * C119 + C31259 * C127) *
                          C1983 -
                      (C31264 * C110 + C31259 * C116 + C31263 * C109 +
                       C31258 * C115 + C31262 * C108 + C31257 * C114) *
                          C1988 -
                      (C31264 * C120 + C31259 * C128 + C31263 * C119 +
                       C31258 * C127 + C31262 * C118 + C31257 * C126) *
                          C1984) *
                         C31260 +
                     ((C32042 + C32043 + C32044) * C1987 +
                      (C32045 + C32046 + C32047) * C1983 -
                      (C33458 + C33459 + C33460) * C1988 -
                      (C33461 + C33462 + C33463) * C1984) *
                         C92186) *
                        C92148 * C2709 +
                    (((C31262 * C1388 + C31257 * C1400 + C31263 * C1387 +
                       C31258 * C1399 + C31264 * C1386 + C31259 * C1398) *
                          C1988 -
                      ((C31264 * C1395 + C31259 * C1411 + C31263 * C1396 +
                        C31258 * C1412 + C31262 * C1397 + C31257 * C1413) *
                           C1983 +
                       (C31264 * C1387 + C31259 * C1399 + C31263 * C1388 +
                        C31258 * C1400 + C31262 * C1389 + C31257 * C1401) *
                           C1987) +
                      (C31262 * C1396 + C31257 * C1412 + C31263 * C1395 +
                       C31258 * C1411 + C31264 * C1394 + C31259 * C1410) *
                          C1984) *
                         C31260 +
                     ((C31262 * C3432 + C31257 * C3436 + C31263 * C3433 +
                       C31258 * C3437 + C31264 * C3434 + C31259 * C3438) *
                          C1988 -
                      ((C31264 * C3441 + C31259 * C3445 + C31263 * C3440 +
                        C31258 * C3444 + C31262 * C3439 + C31257 * C3443) *
                           C1983 +
                       (C31264 * C3433 + C31259 * C3437 + C31263 * C3432 +
                        C31258 * C3436 + C31262 * C3431 + C31257 * C3435) *
                           C1987) +
                      (C31262 * C3440 + C31257 * C3444 + C31263 * C3441 +
                       C31258 * C3445 + C31264 * C3442 + C31259 * C3446) *
                          C1984) *
                         C92186) *
                        C92148 * C2710) *
                   C92099) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C36216 * C107 + C92062 * C113) * C1987 +
                       (C36216 * C117 + C92062 * C125) * C1983 -
                       (C36216 * C108 + C92062 * C114) * C1988 -
                       (C36216 * C118 + C92062 * C126) * C1984) *
                          C31260 +
                      (C37710 + C37711 - C37734 - C37735) * C92186) *
                         C9514 +
                     ((C42870 + C42871 - C42886 - C42887) * C31260 +
                      (C41952 + C41953 - C41968 - C41969) * C92186) *
                         C9515 +
                     ((C42876 + C42877 - C42888 - C42889) * C31260 +
                      (C41958 + C41959 - C41970 - C41971) * C92186) *
                         C9516) *
                        C2709 +
                    (((C42886 - (C42871 + C42870) + C42887) * C31260 +
                      (C41968 - (C41953 + C41952) + C41969) * C92186) *
                         C9514 +
                     ((C42888 - (C42877 + C42876) + C42889) * C31260 +
                      (C41970 - (C41959 + C41958) + C41971) * C92186) *
                         C9515 +
                     (((C36216 * C10960 + C92062 * C10966) * C1988 -
                       (C41114 * C1983 + C41115 * C1987) +
                       (C36216 * C10964 + C92062 * C10972) * C1984) *
                          C31260 +
                      ((C36216 * C13850 + C92062 * C13852) * C1988 -
                       (C41112 * C1983 + C41113 * C1987) +
                       (C36216 * C13854 + C92062 * C13856) * C1984) *
                          C92186) *
                         C9516) *
                        C2710) *
                   C92099) /
                      (p * q * std::sqrt(p + q));
    d2eexy[38] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C36216 * C107 + C92062 * C113) * C181 +
             (C36216 * C182 + C92062 * C188) * C92099) *
                C36212 +
            (C36692 * C181 + C36770 * C92099) * C36213 +
            (C36694 * C181 + C36771 * C92099) * C36214 +
            (C36696 * C181 + C36772 * C92099) * C36215) *
               C92148 * C1983 -
           ((C37814 * C92099 + C37732 * C181) * C36215 +
            (C37813 * C92099 + C37730 * C181) * C36214 +
            (C37812 * C92099 + C37728 * C181) * C36213 +
            ((C36216 * C183 + C92062 * C189) * C92099 +
             (C36216 * C108 + C92062 * C114) * C181) *
                C36212) *
               C92148 * C1984) *
              C2709 +
          ((((C36216 * C1388 + C92062 * C1400) * C181 +
             (C36216 * C1470 + C92062 * C1478) * C92099) *
                C36212 +
            ((C36216 * C3432 + C92062 * C3436) * C181 +
             (C36216 * C3514 + C92062 * C3518) * C92099) *
                C36213 +
            ((C36216 * C5771 + C92062 * C5779) * C181 +
             (C36216 * C5869 + C92062 * C5875) * C92099) *
                C36214 +
            ((C36216 * C8537 + C92062 * C8539) * C181 +
             (C36216 * C8667 + C92062 * C8669) * C92099) *
                C36215) *
               C92148 * C1984 -
           (((C36216 * C8666 + C92062 * C8668) * C92099 +
             (C36216 * C8536 + C92062 * C8538) * C181) *
                C36215 +
            ((C36216 * C5870 + C92062 * C5876) * C92099 +
             (C36216 * C5772 + C92062 * C5780) * C181) *
                C36214 +
            ((C36216 * C3513 + C92062 * C3517) * C92099 +
             (C36216 * C3431 + C92062 * C3435) * C181) *
                C36213 +
            ((C36216 * C1471 + C92062 * C1479) * C92099 +
             (C36216 * C1389 + C92062 * C1401) * C181) *
                C36212) *
               C92148 * C1983) *
              C2710)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31262 * C107 + C31257 * C113 + C31263 * C108 + C31258 * C114 +
              C31264 * C109 + C31259 * C115) *
                 C181 +
             (C31262 * C182 + C31257 * C188 + C31263 * C183 + C31258 * C189 +
              C31264 * C184 + C31259 * C190) *
                 C92099) *
                C31260 +
            ((C32042 + C32043 + C32044) * C181 +
             (C32142 + C32141 + C32140) * C92099) *
                C92186) *
               C92148 * C1983 -
           (((C33570 + C33569 + C33568) * C92099 +
             (C33458 + C33459 + C33460) * C181) *
                C92186 +
            ((C31264 * C185 + C31259 * C191 + C31263 * C184 + C31258 * C190 +
              C31262 * C183 + C31257 * C189) *
                 C92099 +
             (C31264 * C110 + C31259 * C116 + C31263 * C109 + C31258 * C115 +
              C31262 * C108 + C31257 * C114) *
                 C181) *
                C31260) *
               C92148 * C1984) *
              C2709 +
          ((((C31262 * C1388 + C31257 * C1400 + C31263 * C1387 +
              C31258 * C1399 + C31264 * C1386 + C31259 * C1398) *
                 C181 +
             (C31262 * C1470 + C31257 * C1478 + C31263 * C1469 +
              C31258 * C1477 + C31264 * C1468 + C31259 * C1476) *
                 C92099) *
                C31260 +
            ((C31262 * C3432 + C31257 * C3436 + C31263 * C3433 +
              C31258 * C3437 + C31264 * C3434 + C31259 * C3438) *
                 C181 +
             (C31262 * C3514 + C31257 * C3518 + C31263 * C3515 +
              C31258 * C3519 + C31264 * C3516 + C31259 * C3520) *
                 C92099) *
                C92186) *
               C92148 * C1984 -
           (((C31264 * C3515 + C31259 * C3519 + C31263 * C3514 +
              C31258 * C3518 + C31262 * C3513 + C31257 * C3517) *
                 C92099 +
             (C31264 * C3433 + C31259 * C3437 + C31263 * C3432 +
              C31258 * C3436 + C31262 * C3431 + C31257 * C3435) *
                 C181) *
                C92186 +
            ((C31264 * C1469 + C31259 * C1477 + C31263 * C1470 +
              C31258 * C1478 + C31262 * C1471 + C31257 * C1479) *
                 C92099 +
             (C31264 * C1387 + C31259 * C1399 + C31263 * C1388 +
              C31258 * C1400 + C31262 * C1389 + C31257 * C1401) *
                 C181) *
                C31260) *
               C92148 * C1983) *
              C2710)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C36216 * C107 + C92062 * C113) * C181 +
              (C36216 * C182 + C92062 * C188) * C92099) *
                 C31260 +
             (C36692 * C181 + C36770 * C92099) * C92186) *
                C9514 +
            ((C41203 + C41224) * C31260 + (C41206 + C41207) * C92186) * C9515 +
            C41231 * C9516) *
               C1983 -
           (((C42988 + C42989) * C92186 + (C43000 + C42992) * C31260) * C9516 +
            ((C42993 + C42994) * C92186 + (C43001 + C42997) * C31260) * C9515 +
            ((C37812 * C92099 + C37728 * C181) * C92186 +
             ((C36216 * C183 + C92062 * C189) * C92099 +
              (C36216 * C108 + C92062 * C114) * C181) *
                 C31260) *
                C9514) *
               C1984) *
              C2709 +
          ((((C42997 + C43001) * C31260 + (C42994 + C42993) * C92186) * C9514 +
            ((C42992 + C43000) * C31260 + (C42989 + C42988) * C92186) * C9515 +
            (((C36216 * C10960 + C92062 * C10966) * C181 +
              (C36216 * C11092 + C92062 * C11096) * C92099) *
                 C31260 +
             ((C36216 * C13850 + C92062 * C13852) * C181 +
              (C36216 * C13968 + C92062 * C13970) * C92099) *
                 C92186) *
                C9516) *
               C1984 -
           (((C41227 + C41215) * C92186 + (C41228 + C41218) * C31260) * C9516 +
            ((C41212 + C41211) * C92186 + (C41225 + C41208) * C31260) * C9515 +
            ((C41207 + C41206) * C92186 + (C41224 + C41203) * C31260) * C9514) *
               C1983) *
              C2710)) /
            (p * q * std::sqrt(p + q));
    d2eexz[38] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C36216 * C107 + C92062 * C113) * C2849 +
                      (C36216 * C245 + C92062 * C251) * C2709 -
                      (C36216 * C1389 + C92062 * C1401) * C2850 -
                      (C36216 * C1540 + C92062 * C1548) * C2710) *
                         C36212 +
                     (C36692 * C2849 + C36838 * C2709 -
                      (C36216 * C3431 + C92062 * C3435) * C2850 -
                      (C36216 * C3587 + C92062 * C3591) * C2710) *
                         C36213 +
                     (C36694 * C2849 + C36839 * C2709 -
                      (C36216 * C5772 + C92062 * C5780) * C2850 -
                      (C36216 * C5958 + C92062 * C5964) * C2710) *
                         C36214 +
                     (C36696 * C2849 + C36840 * C2709 -
                      (C36216 * C8536 + C92062 * C8538) * C2850 -
                      (C36216 * C8780 + C92062 * C8782) * C2710) *
                         C36215) *
                        C92148 * C92099 * C1983 +
                    (((C36216 * C1388 + C92062 * C1400) * C2850 -
                      ((C36216 * C246 + C92062 * C252) * C2709 +
                       (C36216 * C108 + C92062 * C114) * C2849) +
                      (C36216 * C1539 + C92062 * C1547) * C2710) *
                         C36212 +
                     ((C36216 * C3432 + C92062 * C3436) * C2850 -
                      (C37890 * C2709 + C37728 * C2849) +
                      (C36216 * C3588 + C92062 * C3592) * C2710) *
                         C36213 +
                     ((C36216 * C5771 + C92062 * C5779) * C2850 -
                      (C37891 * C2709 + C37730 * C2849) +
                      (C36216 * C5957 + C92062 * C5963) * C2710) *
                         C36214 +
                     ((C36216 * C8537 + C92062 * C8539) * C2850 -
                      (C37892 * C2709 + C37732 * C2849) +
                      (C36216 * C8781 + C92062 * C8783) * C2710) *
                         C36215) *
                        C92148 * C92099 * C1984)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C31262 * C107 + C31257 * C113 + C31263 * C108 +
                       C31258 * C114 + C31264 * C109 + C31259 * C115) *
                          C2849 +
                      (C31262 * C245 + C31257 * C251 + C31263 * C246 +
                       C31258 * C252 + C31264 * C247 + C31259 * C253) *
                          C2709 -
                      (C31264 * C1387 + C31259 * C1399 + C31263 * C1388 +
                       C31258 * C1400 + C31262 * C1389 + C31257 * C1401) *
                          C2850 -
                      (C31264 * C1538 + C31259 * C1546 + C31263 * C1539 +
                       C31258 * C1547 + C31262 * C1540 + C31257 * C1548) *
                          C2710) *
                         C31260 +
                     ((C32042 + C32043 + C32044) * C2849 +
                      (C32232 + C32233 + C32234) * C2709 -
                      (C31264 * C3433 + C31259 * C3437 + C31263 * C3432 +
                       C31258 * C3436 + C31262 * C3431 + C31257 * C3435) *
                          C2850 -
                      (C31264 * C3589 + C31259 * C3593 + C31263 * C3588 +
                       C31258 * C3592 + C31262 * C3587 + C31257 * C3591) *
                          C2710) *
                         C92186) *
                        C92148 * C92099 * C1983 +
                    (((C31262 * C1388 + C31257 * C1400 + C31263 * C1387 +
                       C31258 * C1399 + C31264 * C1386 + C31259 * C1398) *
                          C2850 -
                      ((C31264 * C248 + C31259 * C254 + C31263 * C247 +
                        C31258 * C253 + C31262 * C246 + C31257 * C252) *
                           C2709 +
                       (C31264 * C110 + C31259 * C116 + C31263 * C109 +
                        C31258 * C115 + C31262 * C108 + C31257 * C114) *
                           C2849) +
                      (C31262 * C1539 + C31257 * C1547 + C31263 * C1538 +
                       C31258 * C1546 + C31264 * C1537 + C31259 * C1545) *
                          C2710) *
                         C31260 +
                     ((C31262 * C3432 + C31257 * C3436 + C31263 * C3433 +
                       C31258 * C3437 + C31264 * C3434 + C31259 * C3438) *
                          C2850 -
                      ((C33677 + C33676 + C33675) * C2709 +
                       (C33458 + C33459 + C33460) * C2849) +
                      (C31262 * C3588 + C31257 * C3592 + C31263 * C3589 +
                       C31258 * C3593 + C31264 * C3590 + C31259 * C3594) *
                          C2710) *
                         C92186) *
                        C92148 * C92099 * C1984)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C36216 * C107 + C92062 * C113) * C2849 +
                       (C36216 * C245 + C92062 * C251) * C2709 -
                       C41107 * C2850 - C41316 * C2710) *
                          C31260 +
                      (C39129 + C39130 - C39131 - C39147) * C92186) *
                         C9514 +
                     ((C41107 * C2849 + C41316 * C2709 - C41109 * C2850 -
                       C41317 * C2710) *
                          C31260 +
                      (C38977 * C2849 + C39144 * C2709 - C40320 * C2850 -
                       C40492 * C2710) *
                          C92186) *
                         C9515 +
                     ((C41109 * C2849 + C41317 * C2709 - C41115 * C2850 -
                       C41318 * C2710) *
                          C31260 +
                      (C40320 * C2849 + C40492 * C2709 - C41113 * C2850 -
                       C41319 * C2710) *
                          C92186) *
                         C9516) *
                        C92099 * C1983 +
                    (((C42882 * C2850 -
                       ((C36216 * C246 + C92062 * C252) * C2709 +
                        (C36216 * C108 + C92062 * C114) * C2849) +
                       C43104 * C2710) *
                          C31260 +
                      (C41964 * C2850 - (C37890 * C2709 + C37728 * C2849) +
                       C42180 * C2710) *
                          C92186) *
                         C9514 +
                     ((C42884 * C2850 - (C43104 * C2709 + C42882 * C2849) +
                       C43105 * C2710) *
                          C31260 +
                      (C41966 * C2850 - (C42180 * C2709 + C41964 * C2849) +
                       C42181 * C2710) *
                          C92186) *
                         C9515 +
                     (((C36216 * C10960 + C92062 * C10966) * C2850 -
                       (C43105 * C2709 + C42884 * C2849) +
                       (C36216 * C11198 + C92062 * C11202) * C2710) *
                          C31260 +
                      ((C36216 * C13850 + C92062 * C13852) * C2850 -
                       (C42181 * C2709 + C41966 * C2849) +
                       (C36216 * C14076 + C92062 * C14078) * C2710) *
                          C92186) *
                         C9516) *
                        C92099 * C1984)) /
                      (p * q * std::sqrt(p + q));
    d2eeyx[38] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C36367 * C107 + C36212 * C308 + C36368 * C805 + C36213 * C1022 +
            C36369 * C806 + C36214 * C1023 + C36370 * C4882 + C36215 * C5218) *
               C1987 +
           (C36367 * C117 + C36212 * C314 + C36368 * C813 + C36213 * C1030 +
            C36369 * C822 + C36214 * C1031 + C36370 * C4886 + C36215 * C5222) *
               C1983 -
           (C36370 * C4881 + C36215 * C5217 + C36369 * C807 + C36214 * C1024 +
            C36368 * C804 + C36213 * C1021 + C36367 * C108 + C36212 * C309) *
               C1988 -
           (C36370 * C4885 + C36215 * C5221 + C36369 * C823 + C36214 * C1032 +
            C36368 * C812 + C36213 * C1029 + C36367 * C118 + C36212 * C315) *
               C1984) *
              C92148 * C92062 * C2709 +
          ((C36367 * C1388 + C36212 * C1605 + C36368 * C3432 + C36213 * C3662 +
            C36369 * C5771 + C36214 * C6041 + C36370 * C8537 + C36215 * C8895) *
               C1988 -
           ((C36370 * C8540 + C36215 * C8896 + C36369 * C5778 + C36214 * C6048 +
             C36368 * C3439 + C36213 * C3665 + C36367 * C1397 +
             C36212 * C1614) *
                C1983 +
            (C36370 * C8536 + C36215 * C8894 + C36369 * C5772 + C36214 * C6042 +
             C36368 * C3431 + C36213 * C3661 + C36367 * C1389 +
             C36212 * C1606) *
                C1987) +
           (C36367 * C1396 + C36212 * C1613 + C36368 * C3440 + C36213 * C3666 +
            C36369 * C5777 + C36214 * C6047 + C36370 * C8541 + C36215 * C8897) *
               C1984) *
              C92148 * C92062 * C2710) *
         C92099) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31487 * C107 + C31260 * C308 + C31488 * C805 + C92186 * C1022) *
                C1987 +
            (C31487 * C117 + C31260 * C314 + C31488 * C813 + C92186 * C1030) *
                C1983 -
            (C31514 + C31515) * C1988 - (C31516 + C31517) * C1984) *
               C92148 * C31257 +
           ((C31515 + C31514) * C1987 + (C31517 + C31516) * C1983 -
            (C31519 + C31518) * C1988 - (C31521 + C31520) * C1984) *
               C92148 * C31258 +
           (C31526 * C1987 + C31527 * C1983 - (C31523 + C31522) * C1988 -
            (C31525 + C31524) * C1984) *
               C92148 * C31259) *
              C2709 +
          (((C34722 + C34723) * C1988 -
            ((C31488 * C3439 + C92186 * C3665 + C31487 * C1397 +
              C31260 * C1614) *
                 C1983 +
             (C31488 * C3431 + C92186 * C3661 + C31487 * C1389 +
              C31260 * C1606) *
                 C1987) +
            (C34724 + C34725) * C1984) *
               C92148 * C31257 +
           ((C34726 + C34727) * C1988 -
            ((C34725 + C34724) * C1983 + (C34723 + C34722) * C1987) +
            (C34728 + C34729) * C1984) *
               C92148 * C31258 +
           ((C31487 * C1386 + C31260 * C1603 + C31488 * C3434 +
             C92186 * C3664) *
                C1988 -
            ((C34729 + C34728) * C1983 + (C34727 + C34726) * C1987) +
            (C31487 * C1394 + C31260 * C1611 + C31488 * C3442 +
             C92186 * C3668) *
                C1984) *
               C92148 * C31259) *
              C2710) *
         C92099) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C31487 * C107 + C31260 * C308 + C31488 * C805 + C92186 * C1022) *
                C1987 +
            (C31487 * C117 + C31260 * C314 + C31488 * C813 + C92186 * C1030) *
                C1983 -
            (C31514 + C31515) * C1988 - (C31516 + C31517) * C1984) *
               C9514 +
           ((C41420 + C41421) * C1987 + (C41422 + C41423) * C1983 -
            (C34723 + C34722) * C1988 - (C34725 + C34724) * C1984) *
               C9515 +
           (C41432 * C1987 + C41433 * C1983 - (C43212 + C43213) * C1988 -
            (C43214 + C43215) * C1984) *
               C9516) *
              C92062 * C2709 +
          (((C34722 + C34723) * C1988 -
            ((C41423 + C41422) * C1983 + (C41421 + C41420) * C1987) +
            (C34724 + C34725) * C1984) *
               C9514 +
           ((C43213 + C43212) * C1988 -
            ((C41427 + C41426) * C1983 + (C41425 + C41424) * C1987) +
            (C43215 + C43214) * C1984) *
               C9515 +
           ((C31487 * C10960 + C31260 * C11298 + C31488 * C13850 +
             C92186 * C14184) *
                C1988 -
            ((C41428 + C41429) * C1983 + (C41430 + C41431) * C1987) +
            (C31487 * C10964 + C31260 * C11302 + C31488 * C13854 +
             C92186 * C14186) *
                C1984) *
               C9516) *
              C92062 * C2710) *
         C92099) /
            (p * q * std::sqrt(p + q));
    d2eeyy[38] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C36367 * C107 + C36212 * C308 + C36368 * C805 + C36213 * C1022 +
             C36369 * C806 + C36214 * C1023 + C36370 * C4882 + C36215 * C5218) *
                C181 +
            (C36367 * C182 + C36212 * C394 + C36368 * C890 + C36213 * C1085 +
             C36369 * C891 + C36214 * C1086 + C36370 * C5012 + C36215 * C5299) *
                C92099) *
               C92148 * C92062 * C1983 -
           ((C36370 * C5013 + C36215 * C5301 + C36369 * C892 + C36214 * C1088 +
             C36368 * C889 + C36213 * C1087 + C36367 * C183 + C36212 * C395) *
                C92099 +
            (C36370 * C4881 + C36215 * C5217 + C36369 * C807 + C36214 * C1024 +
             C36368 * C804 + C36213 * C1021 + C36367 * C108 + C36212 * C309) *
                C181) *
               C92148 * C92062 * C1984) *
              C2709 +
          (((C36367 * C1388 + C36212 * C1605 + C36368 * C3432 + C36213 * C3662 +
             C36369 * C5771 + C36214 * C6041 + C36370 * C8537 +
             C36215 * C8895) *
                C181 +
            (C36367 * C1470 + C36212 * C1671 + C36368 * C3514 + C36213 * C3736 +
             C36369 * C5869 + C36214 * C6127 + C36370 * C8667 +
             C36215 * C8997) *
                C92099) *
               C92148 * C92062 * C1984 -
           ((C36370 * C8666 + C36215 * C8996 + C36369 * C5870 + C36214 * C6128 +
             C36368 * C3513 + C36213 * C3735 + C36367 * C1471 +
             C36212 * C1672) *
                C92099 +
            (C36370 * C8536 + C36215 * C8894 + C36369 * C5772 + C36214 * C6042 +
             C36368 * C3431 + C36213 * C3661 + C36367 * C1389 +
             C36212 * C1606) *
                C181) *
               C92148 * C92062 * C1983) *
              C2710)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31487 * C107 + C31260 * C308 + C31488 * C805 + C92186 * C1022) *
                 C181 +
             (C31487 * C182 + C31260 * C394 + C31488 * C890 + C92186 * C1085) *
                 C92099) *
                C92148 * C31257 +
            ((C31515 + C31514) * C181 + (C31615 + C31616) * C92099) * C92148 *
                C31258 +
            C31624 * C31259) *
               C1983 -
           (((C31619 + C31620) * C92099 + (C31523 + C31522) * C181) * C92148 *
                C31259 +
            ((C31618 + C31617) * C92099 + (C31519 + C31518) * C181) * C92148 *
                C31258 +
            ((C31616 + C31615) * C92099 + (C31514 + C31515) * C181) * C92148 *
                C31257) *
               C1984) *
              C2709 +
          ((((C34722 + C34723) * C181 + (C34836 + C34837) * C92099) * C92148 *
                C31257 +
            ((C34726 + C34727) * C181 + (C34838 + C34839) * C92099) * C92148 *
                C31258 +
            ((C31487 * C1386 + C31260 * C1603 + C31488 * C3434 +
              C92186 * C3664) *
                 C181 +
             (C31487 * C1468 + C31260 * C1669 + C31488 * C3516 +
              C92186 * C3738) *
                 C92099) *
                C92148 * C31259) *
               C1984 -
           (((C34839 + C34838) * C92099 + (C34727 + C34726) * C181) * C92148 *
                C31259 +
            ((C34837 + C34836) * C92099 + (C34723 + C34722) * C181) * C92148 *
                C31258 +
            ((C31488 * C3513 + C92186 * C3735 + C31487 * C1471 +
              C31260 * C1672) *
                 C92099 +
             (C31488 * C3431 + C92186 * C3661 + C31487 * C1389 +
              C31260 * C1606) *
                 C181) *
                C92148 * C31257) *
               C1983) *
              C2710)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C31487 * C107 + C31260 * C308 + C31488 * C805 + C92186 * C1022) *
                 C181 +
             (C31487 * C182 + C31260 * C394 + C31488 * C890 + C92186 * C1085) *
                 C92099) *
                C9514 +
            ((C41420 + C41421) * C181 + (C41525 + C41526) * C92099) * C9515 +
            C41533 * C9516) *
               C92062 * C1983 -
           (((C43318 + C43319) * C92099 + (C43212 + C43213) * C181) * C9516 +
            ((C34837 + C34836) * C92099 + (C34723 + C34722) * C181) * C9515 +
            ((C31616 + C31615) * C92099 + (C31514 + C31515) * C181) * C9514) *
               C92062 * C1984) *
              C2709 +
          ((((C34722 + C34723) * C181 + (C34836 + C34837) * C92099) * C9514 +
            ((C43213 + C43212) * C181 + (C43319 + C43318) * C92099) * C9515 +
            ((C31487 * C10960 + C31260 * C11298 + C31488 * C13850 +
              C92186 * C14184) *
                 C181 +
             (C31487 * C11092 + C31260 * C11418 + C31488 * C13968 +
              C92186 * C14306) *
                 C92099) *
                C9516) *
               C92062 * C1984 -
           (((C41529 + C41530) * C92099 + (C41430 + C41431) * C181) * C9516 +
            ((C41528 + C41527) * C92099 + (C41425 + C41424) * C181) * C9515 +
            ((C41526 + C41525) * C92099 + (C41421 + C41420) * C181) * C9514) *
               C92062 * C1983) *
              C2710)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[38] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C36367 * C107 + C36212 * C308 + C36368 * C805 + C36213 * C1022 +
            C36369 * C806 + C36214 * C1023 + C36370 * C4882 + C36215 * C5218) *
               C2849 +
           (C36367 * C245 + C36212 * C474 + C36368 * C956 + C36213 * C1146 +
            C36369 * C957 + C36214 * C1147 + C36370 * C5114 + C36215 * C5378) *
               C2709 -
           (C36370 * C8536 + C36215 * C8894 + C36369 * C5772 + C36214 * C6042 +
            C36368 * C3431 + C36213 * C3661 + C36367 * C1389 + C36212 * C1606) *
               C2850 -
           (C36370 * C8780 + C36215 * C9096 + C36369 * C5958 + C36214 * C6207 +
            C36368 * C3587 + C36213 * C3805 + C36367 * C1540 + C36212 * C1727) *
               C2710) *
              C92148 * C92062 * C92099 * C1983 +
          ((C36367 * C1388 + C36212 * C1605 + C36368 * C3432 + C36213 * C3662 +
            C36369 * C5771 + C36214 * C6041 + C36370 * C8537 + C36215 * C8895) *
               C2850 -
           ((C36370 * C5113 + C36215 * C5377 + C36369 * C958 + C36214 * C1148 +
             C36368 * C955 + C36213 * C1145 + C36367 * C246 + C36212 * C475) *
                C2709 +
            (C36370 * C4881 + C36215 * C5217 + C36369 * C807 + C36214 * C1024 +
             C36368 * C804 + C36213 * C1021 + C36367 * C108 + C36212 * C309) *
                C2849) +
           (C36367 * C1539 + C36212 * C1729 + C36368 * C3588 + C36213 * C3806 +
            C36369 * C5957 + C36214 * C6210 + C36370 * C8781 + C36215 * C9097) *
               C2710) *
              C92148 * C92062 * C92099 * C1984)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31487 * C107 + C31260 * C308 + C31488 * C805 + C92186 * C1022) *
                C2849 +
            (C31487 * C245 + C31260 * C474 + C31488 * C956 + C92186 * C1146) *
                C2709 -
            (C31488 * C3431 + C92186 * C3661 + C31487 * C1389 +
             C31260 * C1606) *
                C2850 -
            (C31488 * C3587 + C92186 * C3805 + C31487 * C1540 +
             C31260 * C1727) *
                C2710) *
               C92148 * C31257 +
           ((C31515 + C31514) * C2849 + (C31712 + C31713) * C2709 -
            (C34723 + C34722) * C2850 - (C34946 + C34947) * C2710) *
               C92148 * C31258 +
           (C31526 * C2849 + C31718 * C2709 - (C34727 + C34726) * C2850 -
            (C34948 + C34949) * C2710) *
               C92148 * C31259) *
              C92099 * C1983 +
          (((C34722 + C34723) * C2850 -
            ((C31713 + C31712) * C2709 + (C31514 + C31515) * C2849) +
            (C34947 + C34946) * C2710) *
               C92148 * C31257 +
           ((C34726 + C34727) * C2850 -
            ((C31715 + C31714) * C2709 + (C31519 + C31518) * C2849) +
            (C34949 + C34948) * C2710) *
               C92148 * C31258 +
           ((C31487 * C1386 + C31260 * C1603 + C31488 * C3434 +
             C92186 * C3664) *
                C2850 -
            ((C31716 + C31717) * C2709 + (C31523 + C31522) * C2849) +
            (C31487 * C1537 + C31260 * C1733 + C31488 * C3590 +
             C92186 * C3808) *
                C2710) *
               C92148 * C31259) *
              C92099 * C1984)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C31487 * C107 + C31260 * C308 + C31488 * C805 + C92186 * C1022) *
                C2849 +
            (C31487 * C245 + C31260 * C474 + C31488 * C956 + C92186 * C1146) *
                C2709 -
            (C41421 + C41420) * C2850 - (C41621 + C41622) * C2710) *
               C9514 +
           ((C41420 + C41421) * C2849 + (C41622 + C41621) * C2709 -
            (C41425 + C41424) * C2850 - (C41624 + C41623) * C2710) *
               C9515 +
           (C41432 * C2849 + C41627 * C2709 - (C41430 + C41431) * C2850 -
            (C41626 + C41625) * C2710) *
               C9516) *
              C92062 * C92099 * C1983 +
          (((C34722 + C34723) * C2850 -
            ((C31713 + C31712) * C2709 + (C31514 + C31515) * C2849) +
            (C34947 + C34946) * C2710) *
               C9514 +
           ((C43213 + C43212) * C2850 -
            ((C34946 + C34947) * C2709 + (C34723 + C34722) * C2849) +
            (C43422 + C43423) * C2710) *
               C9515 +
           ((C31487 * C10960 + C31260 * C11298 + C31488 * C13850 +
             C92186 * C14184) *
                C2850 -
            ((C43423 + C43422) * C2709 + (C43212 + C43213) * C2849) +
            (C31487 * C11198 + C31260 * C11520 + C31488 * C14076 +
             C92186 * C14420) *
                C2710) *
               C9516) *
              C92062 * C92099 * C1984)) /
            (p * q * std::sqrt(p + q));
    d2eezx[38] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92148 * C555) * C1987 +
            (C554 * C117 + C92148 * C561) * C1983 - C584 * C1988 -
            C585 * C1984) *
               C92062 * C36212 +
           (C7244 + C7245 - C7246 - C7247) * C92062 * C36213 +
           (C7252 + C7253 - C7254 - C7255) * C92062 * C36214 +
           (C38160 + C38161 - C38162 - C38163) * C92062 * C36215) *
              C2709 +
          ((C3190 * C1988 -
            ((C554 * C1397 + C92148 * C1796) * C1983 +
             (C554 * C1389 + C92148 * C1788) * C1987) +
            C3191 * C1984) *
               C92062 * C36212 +
           (C8213 * C1988 - (C9215 * C1983 + C9216 * C1987) + C8214 * C1984) *
               C92062 * C36213 +
           (C8215 * C1988 - (C9213 * C1983 + C9214 * C1987) + C8216 * C1984) *
               C92062 * C36214 +
           ((C554 * C8537 + C92148 * C9197) * C1988 -
            ((C554 * C8540 + C92148 * C9198) * C1983 +
             (C554 * C8536 + C92148 * C9196) * C1987) +
            (C554 * C8541 + C92148 * C9199) * C1984) *
               C92062 * C36215) *
              C2710) *
         C92099) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92148 * C555) * C1987 +
             (C554 * C117 + C92148 * C561) * C1983 - C584 * C1988 -
             C585 * C1984) *
                C31257 +
            (C584 * C1987 + C585 * C1983 - C586 * C1988 - C587 * C1984) *
                C31258 +
            (C586 * C1987 + C587 * C1983 - C588 * C1988 - C589 * C1984) *
                C31259) *
               C31260 +
           ((C7244 + C7245 - C7246 - C7247) * C31257 +
            (C7248 + C7249 - C7250 - C7251) * C31258 +
            (C17672 + C17673 - C17674 - C17675) * C31259) *
               C92186) *
              C2709 +
          (((C3190 * C1988 -
             ((C554 * C1397 + C92148 * C1796) * C1983 +
              (C554 * C1389 + C92148 * C1788) * C1987) +
             C3191 * C1984) *
                C31257 +
            (C3192 * C1988 - (C3191 * C1983 + C3190 * C1987) + C3193 * C1984) *
                C31258 +
            (C3194 * C1988 - (C3193 * C1983 + C3192 * C1987) + C3195 * C1984) *
                C31259) *
               C31260 +
           ((C8213 * C1988 - (C9215 * C1983 + C9216 * C1987) + C8214 * C1984) *
                C31257 +
            (C18615 * C1988 - (C8214 * C1983 + C8213 * C1987) +
             C18616 * C1984) *
                C31258 +
            ((C554 * C3434 + C92148 * C3878) * C1988 -
             (C18616 * C1983 + C18615 * C1987) +
             (C554 * C3442 + C92148 * C3882) * C1984) *
                C31259) *
               C92186) *
              C2710) *
         C92099) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C9997 * C107 + C9514 * C555 + C9998 * C1389 + C9515 * C1788 +
             C9999 * C1390 + C9516 * C1789) *
                C1987 +
            (C9997 * C117 + C9514 * C561 + C9998 * C1397 + C9515 * C1796 +
             C9999 * C1406 + C9516 * C1797) *
                C1983 -
            (C10025 + C10026 + C10027) * C1988 -
            (C10028 + C10029 + C10030) * C1984) *
               C92062 * C31260 +
           ((C40816 + C40817 + C40818) * C1987 +
            (C40819 + C40820 + C40821) * C1983 -
            (C12523 + C12522 + C12521) * C1988 -
            (C12526 + C12525 + C12524) * C1984) *
               C92062 * C92186) *
              C2709 +
          (((C13530 + C13531 + C13532) * C1988 -
            ((C9999 * C10965 + C9516 * C11613 + C9998 * C1406 + C9515 * C1797 +
              C9997 * C1397 + C9514 * C1796) *
                 C1983 +
             (C9999 * C10961 + C9516 * C11609 + C9998 * C1390 + C9515 * C1789 +
              C9997 * C1389 + C9514 * C1788) *
                 C1987) +
            (C13533 + C13534 + C13535) * C1984) *
               C92062 * C31260 +
           ((C9997 * C3432 + C9514 * C3876 + C9998 * C5774 + C9515 * C6290 +
             C9999 * C13850 + C9516 * C14526) *
                C1988 -
            ((C9999 * C13853 + C9516 * C14527 + C9998 * C5783 + C9515 * C6295 +
              C9997 * C3439 + C9514 * C3879) *
                 C1983 +
             (C9999 * C13849 + C9516 * C14525 + C9998 * C5773 + C9515 * C6289 +
              C9997 * C3431 + C9514 * C3875) *
                 C1987) +
            (C9997 * C3440 + C9514 * C3880 + C9998 * C5784 + C9515 * C6296 +
             C9999 * C13854 + C9516 * C14528) *
                C1984) *
               C92062 * C92186) *
              C2710) *
         C92099) /
            (p * q * std::sqrt(p + q));
    d2eezy[38] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((((C554 * C107 + C92148 * C555) * C181 +
                       (C554 * C182 + C92148 * C641) * C92099) *
                          C92062 * C36212 +
                      (C5484 * C181 + C5591 * C92099) * C92062 * C36213 +
                      (C5486 * C181 + C5592 * C92099) * C92062 * C36214 +
                      (C5492 * C181 + C5593 * C92099) * C92062 * C36215) *
                         C1983 -
                     ((C5594 * C92099 + C5490 * C181) * C92062 * C36215 +
                      (C4722 + C4712) * C92062 * C36214 +
                      (C4711 + C4710) * C92062 * C36213 +
                      (C664 + C648) * C92062 * C36212) *
                         C1984) *
                        C2709 +
                    (((C3263 + C3275) * C92062 * C36212 +
                      (C8316 + C8324) * C92062 * C36213 +
                      (C8319 + C8325) * C92062 * C36214 +
                      ((C554 * C8537 + C92148 * C9197) * C181 +
                       (C554 * C8667 + C92148 * C9319) * C92099) *
                          C92062 * C36215) *
                         C1984 -
                     (((C554 * C8666 + C92148 * C9318) * C92099 +
                       (C554 * C8536 + C92148 * C9196) * C181) *
                          C92062 * C36215 +
                      (C9326 * C92099 + C9214 * C181) * C92062 * C36214 +
                      (C9325 * C92099 + C9216 * C181) * C92062 * C36213 +
                      ((C554 * C1471 + C92148 * C1854) * C92099 +
                       (C554 * C1389 + C92148 * C1788) * C181) *
                          C92062 * C36212) *
                         C1983) *
                        C2710)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((((C554 * C107 + C92148 * C555) * C181 +
                        (C554 * C182 + C92148 * C641) * C92099) *
                           C31257 +
                       (C648 + C664) * C31258 + C668 * C31259) *
                          C31260 +
                      ((C5484 * C181 + C5591 * C92099) * C31257 +
                       (C4710 + C4711) * C31258 + C15416 * C31259) *
                          C92186) *
                         C1983 -
                     (((C15417 + C15418) * C31259 + (C4718 + C4719) * C31258 +
                       (C4711 + C4710) * C31257) *
                          C92186 +
                      ((C666 + C654) * C31259 + (C665 + C651) * C31258 +
                       (C664 + C648) * C31257) *
                          C31260) *
                         C1984) *
                        C2709 +
                    ((((C3263 + C3275) * C31257 + (C3266 + C3276) * C31258 +
                       (C3269 + C3277) * C31259) *
                          C31260 +
                      ((C8316 + C8324) * C31257 + (C18715 + C18719) * C31258 +
                       ((C554 * C3434 + C92148 * C3878) * C181 +
                        (C554 * C3516 + C92148 * C3952) * C92099) *
                           C31259) *
                          C92186) *
                         C1984 -
                     (((C18719 + C18715) * C31259 + (C8324 + C8316) * C31258 +
                       (C9325 * C92099 + C9216 * C181) * C31257) *
                          C92186 +
                      ((C3276 + C3266) * C31259 + (C3275 + C3263) * C31258 +
                       ((C554 * C1471 + C92148 * C1854) * C92099 +
                        (C554 * C1389 + C92148 * C1788) * C181) *
                           C31257) *
                          C31260) *
                         C1983) *
                        C2710)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C9997 * C107 + C9514 * C555 + C9998 * C1389 +
                        C9515 * C1788 + C9999 * C1390 + C9516 * C1789) *
                           C181 +
                       (C9997 * C182 + C9514 * C641 + C9998 * C1471 +
                        C9515 * C1854 + C9999 * C1472 + C9516 * C1855) *
                           C92099) *
                          C92062 * C31260 +
                      ((C40816 + C40817 + C40818) * C181 +
                       (C40916 + C40915 + C40914) * C92099) *
                          C92062 * C92186) *
                         C1983 -
                     (((C12632 + C12633 + C12634) * C92099 +
                       (C12523 + C12522 + C12521) * C181) *
                          C92062 * C92186 +
                      ((C10125 + C10124 + C10123) * C92099 +
                       (C10025 + C10026 + C10027) * C181) *
                          C92062 * C31260) *
                         C1984) *
                        C2709 +
                    ((((C13530 + C13531 + C13532) * C181 +
                       (C13641 + C13642 + C13643) * C92099) *
                          C92062 * C31260 +
                      ((C9997 * C3432 + C9514 * C3876 + C9998 * C5774 +
                        C9515 * C6290 + C9999 * C13850 + C9516 * C14526) *
                           C181 +
                       (C9997 * C3514 + C9514 * C3950 + C9998 * C5872 +
                        C9515 * C6376 + C9999 * C13968 + C9516 * C14628) *
                           C92099) *
                          C92062 * C92186) *
                         C1984 -
                     (((C9999 * C13967 + C9516 * C14627 + C9998 * C5871 +
                        C9515 * C6375 + C9997 * C3513 + C9514 * C3949) *
                           C92099 +
                       (C9999 * C13849 + C9516 * C14525 + C9998 * C5773 +
                        C9515 * C6289 + C9997 * C3431 + C9514 * C3875) *
                           C181) *
                          C92062 * C92186 +
                      ((C9999 * C11093 + C9516 * C11691 + C9998 * C1472 +
                        C9515 * C1855 + C9997 * C1471 + C9514 * C1854) *
                           C92099 +
                       (C9999 * C10961 + C9516 * C11609 + C9998 * C1390 +
                        C9515 * C1789 + C9997 * C1389 + C9514 * C1788) *
                           C181) *
                          C92062 * C31260) *
                         C1983) *
                        C2710)) /
                      (p * q * std::sqrt(p + q));
    d2eezz[38] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C554 * C107 + C92148 * C555) * C2849 +
                      (C554 * C245 + C92148 * C719) * C2709 -
                      (C554 * C1389 + C92148 * C1788) * C2850 -
                      (C554 * C1540 + C92148 * C1909) * C2710) *
                         C92062 * C36212 +
                     (C9427 + C9428 - C9429 - C9439) * C92062 * C36213 +
                     (C9432 + C9433 - C9434 - C9440) * C92062 * C36214 +
                     (C5492 * C2849 + C5690 * C2709 -
                      (C554 * C8536 + C92148 * C9196) * C2850 -
                      (C554 * C8780 + C92148 * C9424) * C2710) *
                         C92062 * C36215) *
                        C92099 * C1983 +
                    ((C3347 - (C3346 + C3345) + C3363) * C92062 * C36212 +
                     (C8427 - (C8426 + C8425) + C8437) * C92062 * C36213 +
                     (C8432 - (C8431 + C8430) + C8438) * C92062 * C36214 +
                     ((C554 * C8537 + C92148 * C9197) * C2850 -
                      (C5689 * C2709 + C5490 * C2849) +
                      (C554 * C8781 + C92148 * C9425) * C2710) *
                         C92062 * C36215) *
                        C92099 * C1984)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((((C554 * C107 + C92148 * C555) * C2849 +
                       (C554 * C245 + C92148 * C719) * C2709 -
                       (C554 * C1389 + C92148 * C1788) * C2850 -
                       (C554 * C1540 + C92148 * C1909) * C2710) *
                          C31257 +
                      (C3345 + C3346 - C3347 - C3363) * C31258 +
                      (C3350 + C3351 - C3352 - C3364) * C31259) *
                         C31260 +
                     ((C9427 + C9428 - C9429 - C9439) * C31257 +
                      (C8425 + C8426 - C8427 - C8437) * C31258 +
                      (C18818 + C18819 - C18820 - C18824) * C31259) *
                         C92186) *
                        C92099 * C1983 +
                    (((C3347 - (C3346 + C3345) + C3363) * C31257 +
                      (C3352 - (C3351 + C3350) + C3364) * C31258 +
                      (C3357 - (C3356 + C3355) + C3365) * C31259) *
                         C31260 +
                     ((C8427 - (C8426 + C8425) + C8437) * C31257 +
                      (C18820 - (C18819 + C18818) + C18824) * C31258 +
                      ((C554 * C3434 + C92148 * C3878) * C2850 -
                       (C2638 * C2709 + C2472 * C2849) +
                       (C554 * C3590 + C92148 * C4022) * C2710) *
                          C31259) *
                         C92186) *
                        C92099 * C1984)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C9997 * C107 + C9514 * C555 + C9998 * C1389 +
                       C9515 * C1788 + C9999 * C1390 + C9516 * C1789) *
                          C2849 +
                      (C9997 * C245 + C9514 * C719 + C9998 * C1540 +
                       C9515 * C1909 + C9999 * C1541 + C9516 * C1910) *
                          C2709 -
                      (C9999 * C10961 + C9516 * C11609 + C9998 * C1390 +
                       C9515 * C1789 + C9997 * C1389 + C9514 * C1788) *
                          C2850 -
                      (C9999 * C11197 + C9516 * C11768 + C9998 * C1541 +
                       C9515 * C1910 + C9997 * C1540 + C9514 * C1909) *
                          C2710) *
                         C92062 * C31260 +
                     ((C40816 + C40817 + C40818) * C2849 +
                      (C41006 + C41007 + C41008) * C2709 -
                      (C9999 * C13849 + C9516 * C14525 + C9998 * C5773 +
                       C9515 * C6289 + C9997 * C3431 + C9514 * C3875) *
                          C2850 -
                      (C9999 * C14075 + C9516 * C14727 + C9998 * C5955 +
                       C9515 * C6453 + C9997 * C3587 + C9514 * C4019) *
                          C2710) *
                         C92062 * C92186) *
                        C92099 * C1983 +
                    (((C13530 + C13531 + C13532) * C2850 -
                      ((C10217 + C10216 + C10215) * C2709 +
                       (C10025 + C10026 + C10027) * C2849) +
                      (C13751 + C13750 + C13749) * C2710) *
                         C92062 * C31260 +
                     ((C9997 * C3432 + C9514 * C3876 + C9998 * C5774 +
                       C9515 * C6290 + C9999 * C13850 + C9516 * C14526) *
                          C2850 -
                      ((C12740 + C12741 + C12742) * C2709 +
                       (C12523 + C12522 + C12521) * C2849) +
                      (C9997 * C3588 + C9514 * C4020 + C9998 * C5956 +
                       C9515 * C6454 + C9999 * C14076 + C9516 * C14728) *
                          C2710) *
                         C92062 * C92186) *
                        C92099 * C1984)) /
                      (p * q * std::sqrt(p + q));
    d2eexx[39] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31262 * C107 + C31257 * C113 + C31263 * C108 + C31258 * C114 +
             C31264 * C109 + C31259 * C115) *
                C801 +
            (C31262 * C117 + C31257 * C125 + C31263 * C118 + C31258 * C126 +
             C31264 * C119 + C31259 * C127) *
                C92078) *
               C31260 +
           ((C32042 + C32043 + C32044) * C801 +
            (C32045 + C32046 + C32047) * C92078) *
               C92186) *
              C92148 * C92110 * C798 -
          (((C32048 + C32049 + C32050) * C92078 +
            (C32051 + C32052 + C32053) * C801) *
               C92186 +
           ((C32047 + C32046 + C32045) * C92078 +
            (C32044 + C32043 + C32042) * C801) *
               C31260) *
              C92148 * C92110 * C799 +
          (((C32053 + C32052 + C32051) * C801 +
            (C32050 + C32049 + C32048) * C92078) *
               C31260 +
           ((C31262 * C4882 + C31257 * C4888 + C31263 * C4881 + C31258 * C4887 +
             C31264 * C6557 + C31259 * C6558) *
                C801 +
            (C31262 * C4886 + C31257 * C4894 + C31263 * C4885 + C31258 * C4893 +
             C31264 * C6559 + C31259 * C6560) *
                C92078) *
               C92186) *
              C92148 * C92110 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C31262 * C107 + C31257 * C113 + C31263 * C108 + C31258 * C114 +
            C31264 * C109 + C31259 * C115) *
               C104 +
           (C31262 * C117 + C31257 * C125 + C31263 * C118 + C31258 * C126 +
            C31264 * C119 + C31259 * C127) *
               C93 -
           (C31264 * C110 + C31259 * C116 + C31263 * C109 + C31258 * C115 +
            C31262 * C108 + C31257 * C114) *
               C105 -
           (C31264 * C120 + C31259 * C128 + C31263 * C119 + C31258 * C127 +
            C31262 * C118 + C31257 * C126) *
               C94 +
           (C31262 * C109 + C31257 * C115 + C31263 * C110 + C31258 * C116 +
            C31264 * C111 + C31259 * C121) *
               C106 +
           (C31262 * C119 + C31257 * C127 + C31263 * C120 + C31258 * C128 +
            C31264 * C122 + C31259 * C129) *
               C95) *
              C31260 +
          ((C31262 * C805 + C31257 * C817 + C31263 * C804 + C31258 * C816 +
            C31264 * C803 + C31259 * C815) *
               C104 +
           (C31262 * C813 + C31257 * C829 + C31263 * C812 + C31258 * C828 +
            C31264 * C811 + C31259 * C827) *
               C93 -
           (C31264 * C802 + C31259 * C814 + C31263 * C803 + C31258 * C815 +
            C31262 * C804 + C31257 * C816) *
               C105 -
           (C31264 * C810 + C31259 * C826 + C31263 * C811 + C31258 * C827 +
            C31262 * C812 + C31257 * C828) *
               C94 +
           (C31262 * C803 + C31257 * C815 + C31263 * C802 + C31258 * C814 +
            C31264 * C1989 + C31259 * C1990) *
               C106 +
           (C31262 * C811 + C31257 * C827 + C31263 * C810 + C31258 * C826 +
            C31264 * C1991 + C31259 * C1992) *
               C95) *
              C92186) *
         C92148 * C92110 * C92099) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C36216 * C107 + C92062 * C113) * C104 +
           (C36216 * C117 + C92062 * C125) * C93 -
           (C36216 * C108 + C92062 * C114) * C105 -
           (C36216 * C118 + C92062 * C126) * C94 +
           (C36216 * C109 + C92062 * C115) * C106 +
           (C36216 * C119 + C92062 * C127) * C95) *
              C36212 +
          ((C36216 * C805 + C92062 * C817) * C104 +
           (C36216 * C813 + C92062 * C829) * C93 -
           (C36216 * C804 + C92062 * C816) * C105 -
           (C36216 * C812 + C92062 * C828) * C94 +
           (C36216 * C803 + C92062 * C815) * C106 +
           (C36216 * C811 + C92062 * C827) * C95) *
              C36213 +
          ((C36216 * C806 + C92062 * C818) * C104 +
           (C36216 * C822 + C92062 * C830) * C93 -
           (C36216 * C807 + C92062 * C819) * C105 -
           (C36216 * C823 + C92062 * C831) * C94 +
           (C36216 * C808 + C92062 * C820) * C106 +
           (C36216 * C824 + C92062 * C832) * C95) *
              C36214 +
          ((C36216 * C4882 + C92062 * C4888) * C104 +
           (C36216 * C4886 + C92062 * C4894) * C93 -
           (C36216 * C4881 + C92062 * C4887) * C105 -
           (C36216 * C4885 + C92062 * C4893) * C94 +
           (C36216 * C6557 + C92062 * C6558) * C106 +
           (C36216 * C6559 + C92062 * C6560) * C95) *
              C36215) *
         C92148 * C92110 * C92099) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C36216 * C107 + C92062 * C113) * C801 +
            (C36216 * C117 + C92062 * C125) * C92078) *
               C36212 +
           (C36700 + C36701) * C36213 + C36708 * C36214 + C36709 * C36215) *
              C92148 * C92110 * C798 -
          ((C36706 + C36707) * C36215 + (C36705 + C36704) * C36214 +
           (C36703 + C36702) * C36213 + (C36701 + C36700) * C36212) *
              C92148 * C92110 * C799 +
          (C36708 * C36212 + C36709 * C36213 + (C36707 + C36706) * C36214 +
           ((C36216 * C36671 + C92062 * C36672) * C801 +
            (C36216 * C36673 + C92062 * C36674) * C92078) *
               C36215) *
              C92148 * C92110 * C800)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C36216 * C107 + C92062 * C113) * C104 +
            (C36216 * C117 + C92062 * C125) * C93 -
            (C36216 * C108 + C92062 * C114) * C105 -
            (C36216 * C118 + C92062 * C126) * C94 +
            (C36216 * C109 + C92062 * C115) * C106 +
            (C36216 * C119 + C92062 * C127) * C95) *
               C31260 +
           (C36692 * C104 + C36693 * C93 - C37728 * C105 - C37729 * C94 +
            (C36216 * C803 + C92062 * C815) * C106 +
            (C36216 * C811 + C92062 * C827) * C95) *
               C92186) *
              C9514 +
          (((C36216 * C1389 + C92062 * C1401) * C104 +
            (C36216 * C1397 + C92062 * C1413) * C93 -
            (C36216 * C1388 + C92062 * C1400) * C105 -
            (C36216 * C1396 + C92062 * C1412) * C94 +
            (C36216 * C1387 + C92062 * C1399) * C106 +
            (C36216 * C1395 + C92062 * C1411) * C95) *
               C31260 +
           (C38977 * C104 + C38976 * C93 -
            (C36216 * C3432 + C92062 * C3436) * C105 -
            (C36216 * C3440 + C92062 * C3444) * C94 +
            (C36216 * C3433 + C92062 * C3437) * C106 +
            (C36216 * C3441 + C92062 * C3445) * C95) *
               C92186) *
              C9515 +
          (((C36216 * C1390 + C92062 * C1402) * C104 +
            (C36216 * C1406 + C92062 * C1414) * C93 -
            (C36216 * C1391 + C92062 * C1403) * C105 -
            (C36216 * C1407 + C92062 * C1415) * C94 +
            (C36216 * C1392 + C92062 * C1404) * C106 +
            (C36216 * C1408 + C92062 * C1416) * C95) *
               C31260 +
           ((C36216 * C5773 + C92062 * C5781) * C104 +
            (C36216 * C5783 + C92062 * C5791) * C93 -
            (C36216 * C5774 + C92062 * C5782) * C105 -
            (C36216 * C5784 + C92062 * C5792) * C94 +
            (C36216 * C11870 + C92062 * C11871) * C106 +
            (C36216 * C11872 + C92062 * C11873) * C95) *
               C92186) *
              C9516) *
         C92110 * C92099) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C36216 * C107 + C92062 * C113) * C801 +
             (C36216 * C117 + C92062 * C125) * C92078) *
                C31260 +
            (C36700 + C36701) * C92186) *
               C9514 +
           (((C36216 * C1389 + C92062 * C1401) * C801 +
             (C36216 * C1397 + C92062 * C1413) * C92078) *
                C31260 +
            (C38983 + C38982) * C92186) *
               C9515 +
           (((C36216 * C1390 + C92062 * C1402) * C801 +
             (C36216 * C1406 + C92062 * C1414) * C92078) *
                C31260 +
            (C40324 + C40325) * C92186) *
               C9516) *
              C92110 * C798 -
          (((C40326 + C40327) * C92186 + (C40325 + C40324) * C31260) * C9516 +
           ((C38980 + C38981) * C92186 + (C38982 + C38983) * C31260) * C9515 +
           ((C36703 + C36702) * C92186 + (C36701 + C36700) * C31260) * C9514) *
              C92110 * C799 +
          ((C36708 * C31260 + C36709 * C92186) * C9514 +
           ((C38981 + C38980) * C31260 + (C38979 + C38978) * C92186) * C9515 +
           ((C40327 + C40326) * C31260 +
            ((C36216 * C37227 + C92062 * C37228) * C801 +
             (C36216 * C37229 + C92062 * C37230) * C92078) *
                C92186) *
               C9516) *
              C92110 * C800)) /
            (p * q * std::sqrt(p + q));
    d2eexy[39] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C31262 * C107 + C31257 * C113 + C31263 * C108 + C31258 * C114 +
            C31264 * C109 + C31259 * C115) *
               C884 +
           (C31262 * C182 + C31257 * C188 + C31263 * C183 + C31258 * C189 +
            C31264 * C184 + C31259 * C190) *
               C798 -
           (C32044 + C32043 + C32042) * C885 -
           (C32140 + C32141 + C32142) * C799 +
           (C32053 + C32052 + C32051) * C886 +
           (C32143 + C32144 + C32145) * C800) *
              C31260 +
          ((C32042 + C32043 + C32044) * C884 +
           (C32142 + C32141 + C32140) * C798 -
           (C32051 + C32052 + C32053) * C885 -
           (C32145 + C32144 + C32143) * C799 +
           (C31262 * C4882 + C31257 * C4888 + C31263 * C4881 + C31258 * C4887 +
            C31264 * C6557 + C31259 * C6558) *
               C886 +
           (C31262 * C5012 + C31257 * C5016 + C31263 * C5013 + C31258 * C5017 +
            C31264 * C6683 + C31259 * C6684) *
               C800) *
              C92186) *
         C92148 * C92078 * C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31262 * C107 + C31257 * C113 + C31263 * C108 + C31258 * C114 +
             C31264 * C109 + C31259 * C115) *
                C181 +
            (C31262 * C182 + C31257 * C188 + C31263 * C183 + C31258 * C189 +
             C31264 * C184 + C31259 * C190) *
                C92099) *
               C31260 +
           ((C31262 * C805 + C31257 * C817 + C31263 * C804 + C31258 * C816 +
             C31264 * C803 + C31259 * C815) *
                C181 +
            (C31262 * C890 + C31257 * C898 + C31263 * C889 + C31258 * C897 +
             C31264 * C888 + C31259 * C896) *
                C92099) *
               C92186) *
              C92148 * C93 -
          (((C31264 * C887 + C31259 * C895 + C31263 * C888 + C31258 * C896 +
             C31262 * C889 + C31257 * C897) *
                C92099 +
            (C31264 * C802 + C31259 * C814 + C31263 * C803 + C31258 * C815 +
             C31262 * C804 + C31257 * C816) *
                C181) *
               C92186 +
           ((C31264 * C185 + C31259 * C191 + C31263 * C184 + C31258 * C190 +
             C31262 * C183 + C31257 * C189) *
                C92099 +
            (C31264 * C110 + C31259 * C116 + C31263 * C109 + C31258 * C115 +
             C31262 * C108 + C31257 * C114) *
                C181) *
               C31260) *
              C92148 * C94 +
          (((C31262 * C109 + C31257 * C115 + C31263 * C110 + C31258 * C116 +
             C31264 * C111 + C31259 * C121) *
                C181 +
            (C31262 * C184 + C31257 * C190 + C31263 * C185 + C31258 * C191 +
             C31264 * C186 + C31259 * C192) *
                C92099) *
               C31260 +
           ((C31262 * C803 + C31257 * C815 + C31263 * C802 + C31258 * C814 +
             C31264 * C1989 + C31259 * C1990) *
                C181 +
            (C31262 * C888 + C31257 * C896 + C31263 * C887 + C31258 * C895 +
             C31264 * C2061 + C31259 * C2062) *
                C92099) *
               C92186) *
              C92148 * C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C36216 * C107 + C92062 * C113) * C181 +
            (C36216 * C182 + C92062 * C188) * C92099) *
               C36212 +
           ((C36216 * C805 + C92062 * C817) * C181 +
            (C36216 * C890 + C92062 * C898) * C92099) *
               C36213 +
           ((C36216 * C806 + C92062 * C818) * C181 +
            (C36216 * C891 + C92062 * C899) * C92099) *
               C36214 +
           ((C36216 * C4882 + C92062 * C4888) * C181 +
            (C36216 * C5012 + C92062 * C5016) * C92099) *
               C36215) *
              C92148 * C93 -
          (((C36216 * C5013 + C92062 * C5017) * C92099 +
            (C36216 * C4881 + C92062 * C4887) * C181) *
               C36215 +
           ((C36216 * C892 + C92062 * C900) * C92099 +
            (C36216 * C807 + C92062 * C819) * C181) *
               C36214 +
           ((C36216 * C889 + C92062 * C897) * C92099 +
            (C36216 * C804 + C92062 * C816) * C181) *
               C36213 +
           ((C36216 * C183 + C92062 * C189) * C92099 +
            (C36216 * C108 + C92062 * C114) * C181) *
               C36212) *
              C92148 * C94 +
          (((C36216 * C109 + C92062 * C115) * C181 +
            (C36216 * C184 + C92062 * C190) * C92099) *
               C36212 +
           ((C36216 * C803 + C92062 * C815) * C181 +
            (C36216 * C888 + C92062 * C896) * C92099) *
               C36213 +
           ((C36216 * C808 + C92062 * C820) * C181 +
            (C36216 * C893 + C92062 * C901) * C92099) *
               C36214 +
           ((C36216 * C6557 + C92062 * C6558) * C181 +
            (C36216 * C6683 + C92062 * C6684) * C92099) *
               C36215) *
              C92148 * C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C36216 * C107 + C92062 * C113) * C884 +
           (C36216 * C182 + C92062 * C188) * C798 - C36692 * C885 -
           C36770 * C799 + C36694 * C886 + C36771 * C800) *
              C36212 +
          (C36692 * C884 + C36770 * C798 - C36694 * C885 - C36771 * C799 +
           C36696 * C886 + C36772 * C800) *
              C36213 +
          (C36694 * C884 + C36771 * C798 - C36696 * C885 - C36772 * C799 +
           C36699 * C886 + C36773 * C800) *
              C36214 +
          (C36696 * C884 + C36772 * C798 - C36699 * C885 - C36773 * C799 +
           (C36216 * C36671 + C92062 * C36672) * C886 +
           (C36216 * C36759 + C92062 * C36760) * C800) *
              C36215) *
         C92148 * C92078 * C92110) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C36216 * C107 + C92062 * C113) * C181 +
             (C36216 * C182 + C92062 * C188) * C92099) *
                C31260 +
            (C36692 * C181 + C36770 * C92099) * C92186) *
               C9514 +
           (((C36216 * C1389 + C92062 * C1401) * C181 +
             (C36216 * C1471 + C92062 * C1479) * C92099) *
                C31260 +
            (C38977 * C181 + C39058 * C92099) * C92186) *
               C9515 +
           (((C36216 * C1390 + C92062 * C1402) * C181 +
             (C36216 * C1472 + C92062 * C1480) * C92099) *
                C31260 +
            ((C36216 * C5773 + C92062 * C5781) * C181 +
             (C36216 * C5871 + C92062 * C5877) * C92099) *
                C92186) *
               C9516) *
              C93 -
          ((((C36216 * C5872 + C92062 * C5878) * C92099 +
             (C36216 * C5774 + C92062 * C5782) * C181) *
                C92186 +
            ((C36216 * C1473 + C92062 * C1481) * C92099 +
             (C36216 * C1391 + C92062 * C1403) * C181) *
                C31260) *
               C9516 +
           (((C36216 * C3514 + C92062 * C3518) * C92099 +
             (C36216 * C3432 + C92062 * C3436) * C181) *
                C92186 +
            ((C36216 * C1470 + C92062 * C1478) * C92099 +
             (C36216 * C1388 + C92062 * C1400) * C181) *
                C31260) *
               C9515 +
           ((C37812 * C92099 + C37728 * C181) * C92186 +
            ((C36216 * C183 + C92062 * C189) * C92099 +
             (C36216 * C108 + C92062 * C114) * C181) *
                C31260) *
               C9514) *
              C94 +
          ((((C36216 * C109 + C92062 * C115) * C181 +
             (C36216 * C184 + C92062 * C190) * C92099) *
                C31260 +
            ((C36216 * C803 + C92062 * C815) * C181 +
             (C36216 * C888 + C92062 * C896) * C92099) *
                C92186) *
               C9514 +
           (((C36216 * C1387 + C92062 * C1399) * C181 +
             (C36216 * C1469 + C92062 * C1477) * C92099) *
                C31260 +
            ((C36216 * C3433 + C92062 * C3437) * C181 +
             (C36216 * C3515 + C92062 * C3519) * C92099) *
                C92186) *
               C9515 +
           (((C36216 * C1392 + C92062 * C1404) * C181 +
             (C36216 * C1474 + C92062 * C1482) * C92099) *
                C31260 +
            ((C36216 * C11870 + C92062 * C11871) * C181 +
             (C36216 * C11972 + C92062 * C11973) * C92099) *
                C92186) *
               C9516) *
              C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C36216 * C107 + C92062 * C113) * C884 +
            (C36216 * C182 + C92062 * C188) * C798 - C36692 * C885 -
            C36770 * C799 + C36694 * C886 + C36771 * C800) *
               C31260 +
           (C36692 * C884 + C36770 * C798 - C36694 * C885 - C36771 * C799 +
            C36696 * C886 + C36772 * C800) *
               C92186) *
              C9514 +
          (((C36216 * C1389 + C92062 * C1401) * C884 +
            (C36216 * C1471 + C92062 * C1479) * C798 - C38977 * C885 -
            C39058 * C799 + C38975 * C886 + C39059 * C800) *
               C31260 +
           (C38977 * C884 + C39058 * C798 - C38975 * C885 - C39059 * C799 +
            C38973 * C886 + C39060 * C800) *
               C92186) *
              C9515 +
          (((C36216 * C1390 + C92062 * C1402) * C884 +
            (C36216 * C1472 + C92062 * C1480) * C798 - C40320 * C885 -
            C40406 * C799 + C40323 * C886 + C40407 * C800) *
               C31260 +
           (C40320 * C884 + C40406 * C798 - C40323 * C885 - C40407 * C799 +
            (C36216 * C37227 + C92062 * C37228) * C886 +
            (C36216 * C37281 + C92062 * C37282) * C800) *
               C92186) *
              C9516) *
         C92078 * C92110) /
            (p * q * std::sqrt(p + q));
    d2eexz[39] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31262 * C107 + C31257 * C113 + C31263 * C108 + C31258 * C114 +
             C31264 * C109 + C31259 * C115) *
                C244 +
            (C31262 * C245 + C31257 * C251 + C31263 * C246 + C31258 * C252 +
             C31264 * C247 + C31259 * C253) *
                C92110) *
               C31260 +
           ((C32042 + C32043 + C32044) * C244 +
            (C32232 + C32233 + C32234) * C92110) *
               C92186) *
              C92148 * C798 -
          (((C32235 + C32236 + C32237) * C92110 +
            (C32051 + C32052 + C32053) * C244) *
               C92186 +
           ((C32234 + C32233 + C32232) * C92110 +
            (C32044 + C32043 + C32042) * C244) *
               C31260) *
              C92148 * C799 +
          (((C32053 + C32052 + C32051) * C244 +
            (C32237 + C32236 + C32235) * C92110) *
               C31260 +
           ((C31262 * C4882 + C31257 * C4888 + C31263 * C4881 + C31258 * C4887 +
             C31264 * C6557 + C31259 * C6558) *
                C244 +
            (C31262 * C5114 + C31257 * C5118 + C31263 * C5113 + C31258 * C5117 +
             C31264 * C6795 + C31259 * C6796) *
                C92110) *
               C92186) *
              C92148 * C800) *
         C92078) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31262 * C107 + C31257 * C113 + C31263 * C108 + C31258 * C114 +
             C31264 * C109 + C31259 * C115) *
                C244 +
            (C31262 * C245 + C31257 * C251 + C31263 * C246 + C31258 * C252 +
             C31264 * C247 + C31259 * C253) *
                C92110) *
               C31260 +
           ((C31262 * C805 + C31257 * C817 + C31263 * C804 + C31258 * C816 +
             C31264 * C803 + C31259 * C815) *
                C244 +
            (C31262 * C956 + C31257 * C964 + C31263 * C955 + C31258 * C963 +
             C31264 * C954 + C31259 * C962) *
                C92110) *
               C92186) *
              C92148 * C92099 * C93 -
          (((C31264 * C953 + C31259 * C961 + C31263 * C954 + C31258 * C962 +
             C31262 * C955 + C31257 * C963) *
                C92110 +
            (C31264 * C802 + C31259 * C814 + C31263 * C803 + C31258 * C815 +
             C31262 * C804 + C31257 * C816) *
                C244) *
               C92186 +
           ((C31264 * C248 + C31259 * C254 + C31263 * C247 + C31258 * C253 +
             C31262 * C246 + C31257 * C252) *
                C92110 +
            (C31264 * C110 + C31259 * C116 + C31263 * C109 + C31258 * C115 +
             C31262 * C108 + C31257 * C114) *
                C244) *
               C31260) *
              C92148 * C92099 * C94 +
          (((C31262 * C109 + C31257 * C115 + C31263 * C110 + C31258 * C116 +
             C31264 * C111 + C31259 * C121) *
                C244 +
            (C31262 * C247 + C31257 * C253 + C31263 * C248 + C31258 * C254 +
             C31264 * C249 + C31259 * C255) *
                C92110) *
               C31260 +
           ((C31262 * C803 + C31257 * C815 + C31263 * C802 + C31258 * C814 +
             C31264 * C1989 + C31259 * C1990) *
                C244 +
            (C31262 * C954 + C31257 * C962 + C31263 * C953 + C31258 * C961 +
             C31264 * C2129 + C31259 * C2130) *
                C92110) *
               C92186) *
              C92148 * C92099 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C36216 * C107 + C92062 * C113) * C244 +
            (C36216 * C245 + C92062 * C251) * C92110) *
               C36212 +
           ((C36216 * C805 + C92062 * C817) * C244 +
            (C36216 * C956 + C92062 * C964) * C92110) *
               C36213 +
           ((C36216 * C806 + C92062 * C818) * C244 +
            (C36216 * C957 + C92062 * C965) * C92110) *
               C36214 +
           ((C36216 * C4882 + C92062 * C4888) * C244 +
            (C36216 * C5114 + C92062 * C5118) * C92110) *
               C36215) *
              C92148 * C92099 * C93 -
          (((C36216 * C5113 + C92062 * C5117) * C92110 +
            (C36216 * C4881 + C92062 * C4887) * C244) *
               C36215 +
           ((C36216 * C958 + C92062 * C966) * C92110 +
            (C36216 * C807 + C92062 * C819) * C244) *
               C36214 +
           ((C36216 * C955 + C92062 * C963) * C92110 +
            (C36216 * C804 + C92062 * C816) * C244) *
               C36213 +
           ((C36216 * C246 + C92062 * C252) * C92110 +
            (C36216 * C108 + C92062 * C114) * C244) *
               C36212) *
              C92148 * C92099 * C94 +
          (((C36216 * C109 + C92062 * C115) * C244 +
            (C36216 * C247 + C92062 * C253) * C92110) *
               C36212 +
           ((C36216 * C803 + C92062 * C815) * C244 +
            (C36216 * C954 + C92062 * C962) * C92110) *
               C36213 +
           ((C36216 * C808 + C92062 * C820) * C244 +
            (C36216 * C959 + C92062 * C967) * C92110) *
               C36214 +
           ((C36216 * C6557 + C92062 * C6558) * C244 +
            (C36216 * C6795 + C92062 * C6796) * C92110) *
               C36215) *
              C92148 * C92099 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C36216 * C107 + C92062 * C113) * C244 +
            (C36216 * C245 + C92062 * C251) * C92110) *
               C36212 +
           (C36826 + C36842) * C36213 + C36846 * C36214 + C36847 * C36215) *
              C92148 * C798 -
          ((C36845 + C36837) * C36215 + (C36844 + C36832) * C36214 +
           (C36843 + C36829) * C36213 + (C36842 + C36826) * C36212) *
              C92148 * C799 +
          (C36846 * C36212 + C36847 * C36213 + (C36837 + C36845) * C36214 +
           ((C36216 * C36671 + C92062 * C36672) * C244 +
            (C36216 * C36823 + C92062 * C36824) * C92110) *
               C36215) *
              C92148 * C800) *
         C92078) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C36216 * C107 + C92062 * C113) * C244 +
             (C36216 * C245 + C92062 * C251) * C92110) *
                C31260 +
            (C36826 + C36842) * C92186) *
               C9514 +
           (((C36216 * C1389 + C92062 * C1401) * C244 +
             (C36216 * C1540 + C92062 * C1548) * C92110) *
                C31260 +
            (C38977 * C244 + C39144 * C92110) * C92186) *
               C9515 +
           (((C36216 * C1390 + C92062 * C1402) * C244 +
             (C36216 * C1541 + C92062 * C1549) * C92110) *
                C31260 +
            ((C36216 * C5773 + C92062 * C5781) * C244 +
             (C36216 * C5955 + C92062 * C5961) * C92110) *
                C92186) *
               C9516) *
              C92099 * C93 -
          ((((C36216 * C5956 + C92062 * C5962) * C92110 +
             (C36216 * C5774 + C92062 * C5782) * C244) *
                C92186 +
            ((C36216 * C1542 + C92062 * C1550) * C92110 +
             (C36216 * C1391 + C92062 * C1403) * C244) *
                C31260) *
               C9516 +
           (((C36216 * C3588 + C92062 * C3592) * C92110 +
             (C36216 * C3432 + C92062 * C3436) * C244) *
                C92186 +
            ((C36216 * C1539 + C92062 * C1547) * C92110 +
             (C36216 * C1388 + C92062 * C1400) * C244) *
                C31260) *
               C9515 +
           ((C37893 + C37881) * C92186 +
            ((C36216 * C246 + C92062 * C252) * C92110 +
             (C36216 * C108 + C92062 * C114) * C244) *
                C31260) *
               C9514) *
              C92099 * C94 +
          ((((C36216 * C109 + C92062 * C115) * C244 +
             (C36216 * C247 + C92062 * C253) * C92110) *
                C31260 +
            ((C36216 * C803 + C92062 * C815) * C244 +
             (C36216 * C954 + C92062 * C962) * C92110) *
                C92186) *
               C9514 +
           (((C36216 * C1387 + C92062 * C1399) * C244 +
             (C36216 * C1538 + C92062 * C1546) * C92110) *
                C31260 +
            ((C36216 * C3433 + C92062 * C3437) * C244 +
             (C36216 * C3589 + C92062 * C3593) * C92110) *
                C92186) *
               C9515 +
           (((C36216 * C1392 + C92062 * C1404) * C244 +
             (C36216 * C1543 + C92062 * C1551) * C92110) *
                C31260 +
            ((C36216 * C11870 + C92062 * C11871) * C244 +
             (C36216 * C12072 + C92062 * C12073) * C92110) *
                C92186) *
               C9516) *
              C92099 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C36216 * C107 + C92062 * C113) * C244 +
             (C36216 * C245 + C92062 * C251) * C92110) *
                C31260 +
            (C36826 + C36842) * C92186) *
               C9514 +
           (((C36216 * C1389 + C92062 * C1401) * C244 +
             (C36216 * C1540 + C92062 * C1548) * C92110) *
                C31260 +
            (C40482 + C40483) * C92186) *
               C9515 +
           (((C36216 * C1390 + C92062 * C1402) * C244 +
             (C36216 * C1541 + C92062 * C1549) * C92110) *
                C31260 +
            (C40484 + C40494) * C92186) *
               C9516) *
              C798 -
          (((C40495 + C40489) * C92186 + (C40494 + C40484) * C31260) * C9516 +
           ((C40490 + C40491) * C92186 + (C40483 + C40482) * C31260) * C9515 +
           ((C36843 + C36829) * C92186 + (C36842 + C36826) * C31260) * C9514) *
              C799 +
          ((C36846 * C31260 + C36847 * C92186) * C9514 +
           ((C40491 + C40490) * C31260 +
            (C38973 * C244 + C39146 * C92110) * C92186) *
               C9515 +
           ((C40489 + C40495) * C31260 +
            ((C36216 * C37227 + C92062 * C37228) * C244 +
             (C36216 * C37333 + C92062 * C37334) * C92110) *
                C92186) *
               C9516) *
              C800) *
         C92078) /
            (p * q * std::sqrt(p + q));
    d2eeyx[39] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31487 * C107 + C31260 * C308 + C31488 * C805 + C92186 * C1022) *
                C801 +
            (C31487 * C117 + C31260 * C314 + C31488 * C813 + C92186 * C1030) *
                C92078) *
               C92148 * C31257 +
           ((C31515 + C31514) * C801 + (C31517 + C31516) * C92078) * C92148 *
               C31258 +
           (C31526 * C801 + C31527 * C92078) * C92148 * C31259) *
              C92110 * C798 -
          (((C31488 * C824 + C92186 * C1033 + C31487 * C811 + C31260 * C1028) *
                C92078 +
            (C31488 * C808 + C92186 * C1025 + C31487 * C803 + C31260 * C1020) *
                C801) *
               C92148 * C31259 +
           ((C31488 * C823 + C92186 * C1032 + C31487 * C812 + C31260 * C1029) *
                C92078 +
            (C31488 * C807 + C92186 * C1024 + C31487 * C804 + C31260 * C1021) *
                C801) *
               C92148 * C31258 +
           ((C31488 * C822 + C92186 * C1031 + C31487 * C813 + C31260 * C1030) *
                C92078 +
            (C31488 * C806 + C92186 * C1023 + C31487 * C805 + C31260 * C1022) *
                C801) *
               C92148 * C31257) *
              C92110 * C799 +
          (((C31487 * C806 + C31260 * C1023 + C31488 * C4882 + C92186 * C5218) *
                C801 +
            (C31487 * C822 + C31260 * C1031 + C31488 * C4886 + C92186 * C5222) *
                C92078) *
               C92148 * C31257 +
           ((C31487 * C807 + C31260 * C1024 + C31488 * C4881 + C92186 * C5217) *
                C801 +
            (C31487 * C823 + C31260 * C1032 + C31488 * C4885 + C92186 * C5221) *
                C92078) *
               C92148 * C31258 +
           ((C31487 * C808 + C31260 * C1025 + C31488 * C6557 + C92186 * C6907) *
                C801 +
            (C31487 * C824 + C31260 * C1033 + C31488 * C6559 + C92186 * C6908) *
                C92078) *
               C92148 * C31259) *
              C92110 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C31487 * C107 + C31260 * C308 + C31488 * C805 + C92186 * C1022) *
               C104 +
           (C31487 * C117 + C31260 * C314 + C31488 * C813 + C92186 * C1030) *
               C93 -
           (C31514 + C31515) * C105 - (C31516 + C31517) * C94 + C31526 * C106 +
           C31527 * C95) *
              C92148 * C31257 +
          ((C31515 + C31514) * C104 + (C31517 + C31516) * C93 -
           (C31519 + C31518) * C105 - (C31521 + C31520) * C94 +
           (C31522 + C31523) * C106 + (C31524 + C31525) * C95) *
              C92148 * C31258 +
          (C31526 * C104 + C31527 * C93 - (C31523 + C31522) * C105 -
           (C31525 + C31524) * C94 +
           (C31487 * C111 + C31260 * C312 + C31488 * C1989 + C92186 * C2197) *
               C106 +
           (C31487 * C122 + C31260 * C318 + C31488 * C1991 + C92186 * C2198) *
               C95) *
              C92148 * C31259) *
         C92110 * C92099) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((C36367 * C107 + C36212 * C308 + C36368 * C805 + C36213 * C1022 +
           C36369 * C806 + C36214 * C1023 + C36370 * C4882 + C36215 * C5218) *
              C104 +
          (C36367 * C117 + C36212 * C314 + C36368 * C813 + C36213 * C1030 +
           C36369 * C822 + C36214 * C1031 + C36370 * C4886 + C36215 * C5222) *
              C93 -
          (C36370 * C4881 + C36215 * C5217 + C36369 * C807 + C36214 * C1024 +
           C36368 * C804 + C36213 * C1021 + C36367 * C108 + C36212 * C309) *
              C105 -
          (C36370 * C4885 + C36215 * C5221 + C36369 * C823 + C36214 * C1032 +
           C36368 * C812 + C36213 * C1029 + C36367 * C118 + C36212 * C315) *
              C94 +
          (C36367 * C109 + C36212 * C310 + C36368 * C803 + C36213 * C1020 +
           C36369 * C808 + C36214 * C1025 + C36370 * C6557 + C36215 * C6907) *
              C106 +
          (C36367 * C119 + C36212 * C316 + C36368 * C811 + C36213 * C1028 +
           C36369 * C824 + C36214 * C1033 + C36370 * C6559 + C36215 * C6908) *
              C95) *
         C92148 * C92062 * C92110 * C92099) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C36367 * C107 + C36212 * C308 + C36368 * C805 + C36213 * C1022 +
            C36369 * C806 + C36214 * C1023 + C36370 * C4882 + C36215 * C5218) *
               C801 +
           (C36367 * C117 + C36212 * C314 + C36368 * C813 + C36213 * C1030 +
            C36369 * C822 + C36214 * C1031 + C36370 * C4886 + C36215 * C5222) *
               C92078) *
              C92148 * C92062 * C92110 * C798 -
          ((C36370 * C4891 + C36215 * C5223 + C36369 * C4886 + C36214 * C5222 +
            C36368 * C822 + C36213 * C1031 + C36367 * C813 + C36212 * C1030) *
               C92078 +
           (C36370 * C4883 + C36215 * C5219 + C36369 * C4882 + C36214 * C5218 +
            C36368 * C806 + C36213 * C1023 + C36367 * C805 + C36212 * C1022) *
               C801) *
              C92148 * C92062 * C92110 * C799 +
          ((C36367 * C806 + C36212 * C1023 + C36368 * C4882 + C36213 * C5218 +
            C36369 * C4883 + C36214 * C5219 + C36370 * C36671 +
            C36215 * C36897) *
               C801 +
           (C36367 * C822 + C36212 * C1031 + C36368 * C4886 + C36213 * C5222 +
            C36369 * C4891 + C36214 * C5223 + C36370 * C36673 +
            C36215 * C36898) *
               C92078) *
              C92148 * C92062 * C92110 * C800)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C31487 * C107 + C31260 * C308 + C31488 * C805 + C92186 * C1022) *
               C104 +
           (C31487 * C117 + C31260 * C314 + C31488 * C813 + C92186 * C1030) *
               C93 -
           (C31514 + C31515) * C105 - (C31516 + C31517) * C94 + C31526 * C106 +
           C31527 * C95) *
              C9514 +
          ((C31487 * C1389 + C31260 * C1606 + C31488 * C3431 + C92186 * C3661) *
               C104 +
           (C31487 * C1397 + C31260 * C1614 + C31488 * C3439 + C92186 * C3665) *
               C93 -
           (C34723 + C34722) * C105 - (C34725 + C34724) * C94 +
           (C34726 + C34727) * C106 + (C34728 + C34729) * C95) *
              C9515 +
          ((C31487 * C1390 + C31260 * C1607 + C31488 * C5773 + C92186 * C6043) *
               C104 +
           (C31487 * C1406 + C31260 * C1615 + C31488 * C5783 + C92186 * C6049) *
               C93 -
           (C31488 * C5774 + C92186 * C6045 + C31487 * C1391 + C31260 * C1608) *
               C105 -
           (C31488 * C5784 + C92186 * C6051 + C31487 * C1407 + C31260 * C1616) *
               C94 +
           (C31487 * C1392 + C31260 * C1609 + C31488 * C11870 +
            C92186 * C12172) *
               C106 +
           (C31487 * C1408 + C31260 * C1617 + C31488 * C11872 +
            C92186 * C12173) *
               C95) *
              C9516) *
         C92062 * C92110 * C92099) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31487 * C107 + C31260 * C308 + C31488 * C805 + C92186 * C1022) *
                C801 +
            (C31487 * C117 + C31260 * C314 + C31488 * C813 + C92186 * C1030) *
                C92078) *
               C9514 +
           ((C31487 * C1389 + C31260 * C1606 + C31488 * C3431 +
             C92186 * C3661) *
                C801 +
            (C31487 * C1397 + C31260 * C1614 + C31488 * C3439 +
             C92186 * C3665) *
                C92078) *
               C9515 +
           ((C31487 * C1390 + C31260 * C1607 + C31488 * C5773 +
             C92186 * C6043) *
                C801 +
            (C31487 * C1406 + C31260 * C1615 + C31488 * C5783 +
             C92186 * C6049) *
                C92078) *
               C9516) *
              C92062 * C92110 * C798 -
          (((C31488 * C5787 + C92186 * C6050 + C31487 * C5783 +
             C31260 * C6049) *
                C92078 +
            (C31488 * C5775 + C92186 * C6044 + C31487 * C5773 +
             C31260 * C6043) *
                C801) *
               C9516 +
           ((C31488 * C5778 + C92186 * C6048 + C31487 * C3439 +
             C31260 * C3665) *
                C92078 +
            (C31488 * C5772 + C92186 * C6042 + C31487 * C3431 +
             C31260 * C3661) *
                C801) *
               C9515 +
           ((C31488 * C822 + C92186 * C1031 + C31487 * C813 + C31260 * C1030) *
                C92078 +
            (C31488 * C806 + C92186 * C1023 + C31487 * C805 + C31260 * C1022) *
                C801) *
               C9514) *
              C92062 * C92110 * C799 +
          (((C31487 * C806 + C31260 * C1023 + C31488 * C4882 + C92186 * C5218) *
                C801 +
            (C31487 * C822 + C31260 * C1031 + C31488 * C4886 + C92186 * C5222) *
                C92078) *
               C9514 +
           ((C31487 * C5772 + C31260 * C6042 + C31488 * C8536 +
             C92186 * C8894) *
                C801 +
            (C31487 * C5778 + C31260 * C6048 + C31488 * C8540 +
             C92186 * C8896) *
                C92078) *
               C9515 +
           ((C31487 * C5775 + C31260 * C6044 + C31488 * C37227 +
             C92186 * C37385) *
                C801 +
            (C31487 * C5787 + C31260 * C6050 + C31488 * C37229 +
             C92186 * C37386) *
                C92078) *
               C9516) *
              C92062 * C92110 * C800)) /
            (p * q * std::sqrt(p + q));
    d2eeyy[39] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C31487 * C107 + C31260 * C308 + C31488 * C805 + C92186 * C1022) *
               C884 +
           (C31487 * C182 + C31260 * C394 + C31488 * C890 + C92186 * C1085) *
               C798 -
           (C31488 * C806 + C92186 * C1023 + C31487 * C805 + C31260 * C1022) *
               C885 -
           (C31488 * C891 + C92186 * C1086 + C31487 * C890 + C31260 * C1085) *
               C799 +
           (C31487 * C806 + C31260 * C1023 + C31488 * C4882 + C92186 * C5218) *
               C886 +
           (C31487 * C891 + C31260 * C1086 + C31488 * C5012 + C92186 * C5299) *
               C800) *
              C92148 * C31257 +
          ((C31515 + C31514) * C884 + (C31615 + C31616) * C798 -
           (C31488 * C807 + C92186 * C1024 + C31487 * C804 + C31260 * C1021) *
               C885 -
           (C31488 * C892 + C92186 * C1088 + C31487 * C889 + C31260 * C1087) *
               C799 +
           (C31487 * C807 + C31260 * C1024 + C31488 * C4881 + C92186 * C5217) *
               C886 +
           (C31487 * C892 + C31260 * C1088 + C31488 * C5013 + C92186 * C5301) *
               C800) *
              C92148 * C31258 +
          (C31526 * C884 + C31621 * C798 -
           (C31488 * C808 + C92186 * C1025 + C31487 * C803 + C31260 * C1020) *
               C885 -
           (C31488 * C893 + C92186 * C1090 + C31487 * C888 + C31260 * C1089) *
               C799 +
           (C31487 * C808 + C31260 * C1025 + C31488 * C6557 + C92186 * C6907) *
               C886 +
           (C31487 * C893 + C31260 * C1090 + C31488 * C6683 + C92186 * C7025) *
               C800) *
              C92148 * C31259) *
         C92078 * C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31487 * C107 + C31260 * C308 + C31488 * C805 + C92186 * C1022) *
                C181 +
            (C31487 * C182 + C31260 * C394 + C31488 * C890 + C92186 * C1085) *
                C92099) *
               C92148 * C31257 +
           ((C31515 + C31514) * C181 + (C31615 + C31616) * C92099) * C92148 *
               C31258 +
           C31624 * C31259) *
              C93 -
          (((C31619 + C31620) * C92099 + (C31523 + C31522) * C181) * C92148 *
               C31259 +
           ((C31618 + C31617) * C92099 + (C31519 + C31518) * C181) * C92148 *
               C31258 +
           ((C31616 + C31615) * C92099 + (C31514 + C31515) * C181) * C92148 *
               C31257) *
              C94 +
          (C31624 * C31257 +
           ((C31522 + C31523) * C181 + (C31620 + C31619) * C92099) * C92148 *
               C31258 +
           ((C31487 * C111 + C31260 * C312 + C31488 * C1989 + C92186 * C2197) *
                C181 +
            (C31487 * C186 + C31260 * C398 + C31488 * C2061 + C92186 * C2283) *
                C92099) *
               C92148 * C31259) *
              C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C36367 * C107 + C36212 * C308 + C36368 * C805 + C36213 * C1022 +
            C36369 * C806 + C36214 * C1023 + C36370 * C4882 + C36215 * C5218) *
               C181 +
           (C36367 * C182 + C36212 * C394 + C36368 * C890 + C36213 * C1085 +
            C36369 * C891 + C36214 * C1086 + C36370 * C5012 + C36215 * C5299) *
               C92099) *
              C92148 * C92062 * C93 -
          ((C36370 * C5013 + C36215 * C5301 + C36369 * C892 + C36214 * C1088 +
            C36368 * C889 + C36213 * C1087 + C36367 * C183 + C36212 * C395) *
               C92099 +
           (C36370 * C4881 + C36215 * C5217 + C36369 * C807 + C36214 * C1024 +
            C36368 * C804 + C36213 * C1021 + C36367 * C108 + C36212 * C309) *
               C181) *
              C92148 * C92062 * C94 +
          ((C36367 * C109 + C36212 * C310 + C36368 * C803 + C36213 * C1020 +
            C36369 * C808 + C36214 * C1025 + C36370 * C6557 + C36215 * C6907) *
               C181 +
           (C36367 * C184 + C36212 * C396 + C36368 * C888 + C36213 * C1089 +
            C36369 * C893 + C36214 * C1090 + C36370 * C6683 + C36215 * C7025) *
               C92099) *
              C92148 * C92062 * C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((C36367 * C107 + C36212 * C308 + C36368 * C805 + C36213 * C1022 +
           C36369 * C806 + C36214 * C1023 + C36370 * C4882 + C36215 * C5218) *
              C884 +
          (C36367 * C182 + C36212 * C394 + C36368 * C890 + C36213 * C1085 +
           C36369 * C891 + C36214 * C1086 + C36370 * C5012 + C36215 * C5299) *
              C798 -
          (C36370 * C4883 + C36215 * C5219 + C36369 * C4882 + C36214 * C5218 +
           C36368 * C806 + C36213 * C1023 + C36367 * C805 + C36212 * C1022) *
              C885 -
          (C36370 * C5014 + C36215 * C5300 + C36369 * C5012 + C36214 * C5299 +
           C36368 * C891 + C36213 * C1086 + C36367 * C890 + C36212 * C1085) *
              C799 +
          (C36367 * C806 + C36212 * C1023 + C36368 * C4882 + C36213 * C5218 +
           C36369 * C4883 + C36214 * C5219 + C36370 * C36671 +
           C36215 * C36897) *
              C886 +
          (C36367 * C891 + C36212 * C1086 + C36368 * C5012 + C36213 * C5299 +
           C36369 * C5014 + C36214 * C5300 + C36370 * C36759 +
           C36215 * C36949) *
              C800) *
         C92148 * C92062 * C92078 * C92110) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31487 * C107 + C31260 * C308 + C31488 * C805 + C92186 * C1022) *
                C181 +
            (C31487 * C182 + C31260 * C394 + C31488 * C890 + C92186 * C1085) *
                C92099) *
               C9514 +
           ((C31487 * C1389 + C31260 * C1606 + C31488 * C3431 +
             C92186 * C3661) *
                C181 +
            (C31487 * C1471 + C31260 * C1672 + C31488 * C3513 +
             C92186 * C3735) *
                C92099) *
               C9515 +
           ((C31487 * C1390 + C31260 * C1607 + C31488 * C5773 +
             C92186 * C6043) *
                C181 +
            (C31487 * C1472 + C31260 * C1673 + C31488 * C5871 +
             C92186 * C6129) *
                C92099) *
               C9516) *
              C92062 * C93 -
          (((C31488 * C5872 + C92186 * C6131 + C31487 * C1473 +
             C31260 * C1674) *
                C92099 +
            (C31488 * C5774 + C92186 * C6045 + C31487 * C1391 +
             C31260 * C1608) *
                C181) *
               C9516 +
           ((C34837 + C34836) * C92099 + (C34723 + C34722) * C181) * C9515 +
           ((C31616 + C31615) * C92099 + (C31514 + C31515) * C181) * C9514) *
              C92062 * C94 +
          (C31623 * C9514 +
           ((C34726 + C34727) * C181 + (C34838 + C34839) * C92099) * C9515 +
           ((C31487 * C1392 + C31260 * C1609 + C31488 * C11870 +
             C92186 * C12172) *
                C181 +
            (C31487 * C1474 + C31260 * C1675 + C31488 * C11972 +
             C92186 * C12284) *
                C92099) *
               C9516) *
              C92062 * C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C31487 * C107 + C31260 * C308 + C31488 * C805 + C92186 * C1022) *
               C884 +
           (C31487 * C182 + C31260 * C394 + C31488 * C890 + C92186 * C1085) *
               C798 -
           (C31488 * C806 + C92186 * C1023 + C31487 * C805 + C31260 * C1022) *
               C885 -
           (C31488 * C891 + C92186 * C1086 + C31487 * C890 + C31260 * C1085) *
               C799 +
           (C31487 * C806 + C31260 * C1023 + C31488 * C4882 + C92186 * C5218) *
               C886 +
           (C31487 * C891 + C31260 * C1086 + C31488 * C5012 + C92186 * C5299) *
               C800) *
              C9514 +
          ((C31487 * C1389 + C31260 * C1606 + C31488 * C3431 + C92186 * C3661) *
               C884 +
           (C31487 * C1471 + C31260 * C1672 + C31488 * C3513 + C92186 * C3735) *
               C798 -
           (C31488 * C5772 + C92186 * C6042 + C31487 * C3431 + C31260 * C3661) *
               C885 -
           (C31488 * C5870 + C92186 * C6128 + C31487 * C3513 + C31260 * C3735) *
               C799 +
           (C31487 * C5772 + C31260 * C6042 + C31488 * C8536 + C92186 * C8894) *
               C886 +
           (C31487 * C5870 + C31260 * C6128 + C31488 * C8666 + C92186 * C8996) *
               C800) *
              C9515 +
          ((C31487 * C1390 + C31260 * C1607 + C31488 * C5773 + C92186 * C6043) *
               C884 +
           (C31487 * C1472 + C31260 * C1673 + C31488 * C5871 + C92186 * C6129) *
               C798 -
           (C31488 * C5775 + C92186 * C6044 + C31487 * C5773 + C31260 * C6043) *
               C885 -
           (C31488 * C5873 + C92186 * C6130 + C31487 * C5871 + C31260 * C6129) *
               C799 +
           (C31487 * C5775 + C31260 * C6044 + C31488 * C37227 +
            C92186 * C37385) *
               C886 +
           (C31487 * C5873 + C31260 * C6130 + C31488 * C37281 +
            C92186 * C37437) *
               C800) *
              C9516) *
         C92062 * C92078 * C92110) /
            (p * q * std::sqrt(p + q));
    d2eeyz[39] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31487 * C107 + C31260 * C308 + C31488 * C805 + C92186 * C1022) *
                C244 +
            (C31487 * C245 + C31260 * C474 + C31488 * C956 + C92186 * C1146) *
                C92110) *
               C92148 * C31257 +
           ((C31515 + C31514) * C244 + (C31712 + C31713) * C92110) * C92148 *
               C31258 +
           C31721 * C31259) *
              C798 -
          (((C31488 * C959 + C92186 * C1149 + C31487 * C954 + C31260 * C1144) *
                C92110 +
            (C31488 * C808 + C92186 * C1025 + C31487 * C803 + C31260 * C1020) *
                C244) *
               C92148 * C31259 +
           ((C31488 * C958 + C92186 * C1148 + C31487 * C955 + C31260 * C1145) *
                C92110 +
            (C31488 * C807 + C92186 * C1024 + C31487 * C804 + C31260 * C1021) *
                C244) *
               C92148 * C31258 +
           ((C31488 * C957 + C92186 * C1147 + C31487 * C956 + C31260 * C1146) *
                C92110 +
            (C31488 * C806 + C92186 * C1023 + C31487 * C805 + C31260 * C1022) *
                C244) *
               C92148 * C31257) *
              C799 +
          (((C31487 * C806 + C31260 * C1023 + C31488 * C4882 + C92186 * C5218) *
                C244 +
            (C31487 * C957 + C31260 * C1147 + C31488 * C5114 + C92186 * C5378) *
                C92110) *
               C92148 * C31257 +
           ((C31487 * C807 + C31260 * C1024 + C31488 * C4881 + C92186 * C5217) *
                C244 +
            (C31487 * C958 + C31260 * C1148 + C31488 * C5113 + C92186 * C5377) *
                C92110) *
               C92148 * C31258 +
           ((C31487 * C808 + C31260 * C1025 + C31488 * C6557 + C92186 * C6907) *
                C244 +
            (C31487 * C959 + C31260 * C1149 + C31488 * C6795 + C92186 * C7133) *
                C92110) *
               C92148 * C31259) *
              C800) *
         C92078) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31487 * C107 + C31260 * C308 + C31488 * C805 + C92186 * C1022) *
                C244 +
            (C31487 * C245 + C31260 * C474 + C31488 * C956 + C92186 * C1146) *
                C92110) *
               C92148 * C31257 +
           ((C31515 + C31514) * C244 + (C31712 + C31713) * C92110) * C92148 *
               C31258 +
           C31721 * C31259) *
              C92099 * C93 -
          (((C31716 + C31717) * C92110 + (C31523 + C31522) * C244) * C92148 *
               C31259 +
           ((C31715 + C31714) * C92110 + (C31519 + C31518) * C244) * C92148 *
               C31258 +
           ((C31713 + C31712) * C92110 + (C31514 + C31515) * C244) * C92148 *
               C31257) *
              C92099 * C94 +
          (C31721 * C31257 +
           ((C31522 + C31523) * C244 + (C31717 + C31716) * C92110) * C92148 *
               C31258 +
           ((C31487 * C111 + C31260 * C312 + C31488 * C1989 + C92186 * C2197) *
                C244 +
            (C31487 * C249 + C31260 * C478 + C31488 * C2129 + C92186 * C2371) *
                C92110) *
               C92148 * C31259) *
              C92099 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C36367 * C107 + C36212 * C308 + C36368 * C805 + C36213 * C1022 +
            C36369 * C806 + C36214 * C1023 + C36370 * C4882 + C36215 * C5218) *
               C244 +
           (C36367 * C245 + C36212 * C474 + C36368 * C956 + C36213 * C1146 +
            C36369 * C957 + C36214 * C1147 + C36370 * C5114 + C36215 * C5378) *
               C92110) *
              C92148 * C92062 * C92099 * C93 -
          ((C36370 * C5113 + C36215 * C5377 + C36369 * C958 + C36214 * C1148 +
            C36368 * C955 + C36213 * C1145 + C36367 * C246 + C36212 * C475) *
               C92110 +
           (C36370 * C4881 + C36215 * C5217 + C36369 * C807 + C36214 * C1024 +
            C36368 * C804 + C36213 * C1021 + C36367 * C108 + C36212 * C309) *
               C244) *
              C92148 * C92062 * C92099 * C94 +
          ((C36367 * C109 + C36212 * C310 + C36368 * C803 + C36213 * C1020 +
            C36369 * C808 + C36214 * C1025 + C36370 * C6557 + C36215 * C6907) *
               C244 +
           (C36367 * C247 + C36212 * C476 + C36368 * C954 + C36213 * C1144 +
            C36369 * C959 + C36214 * C1149 + C36370 * C6795 + C36215 * C7133) *
               C92110) *
              C92148 * C92062 * C92099 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C36367 * C107 + C36212 * C308 + C36368 * C805 + C36213 * C1022 +
            C36369 * C806 + C36214 * C1023 + C36370 * C4882 + C36215 * C5218) *
               C244 +
           (C36367 * C245 + C36212 * C474 + C36368 * C956 + C36213 * C1146 +
            C36369 * C957 + C36214 * C1147 + C36370 * C5114 + C36215 * C5378) *
               C92110) *
              C92148 * C92062 * C798 -
          ((C36370 * C5115 + C36215 * C5379 + C36369 * C5114 + C36214 * C5378 +
            C36368 * C957 + C36213 * C1147 + C36367 * C956 + C36212 * C1146) *
               C92110 +
           (C36370 * C4883 + C36215 * C5219 + C36369 * C4882 + C36214 * C5218 +
            C36368 * C806 + C36213 * C1023 + C36367 * C805 + C36212 * C1022) *
               C244) *
              C92148 * C92062 * C799 +
          ((C36367 * C806 + C36212 * C1023 + C36368 * C4882 + C36213 * C5218 +
            C36369 * C4883 + C36214 * C5219 + C36370 * C36671 +
            C36215 * C36897) *
               C244 +
           (C36367 * C957 + C36212 * C1147 + C36368 * C5114 + C36213 * C5378 +
            C36369 * C5115 + C36214 * C5379 + C36370 * C36823 +
            C36215 * C37000) *
               C92110) *
              C92148 * C92062 * C800) *
         C92078) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31487 * C107 + C31260 * C308 + C31488 * C805 + C92186 * C1022) *
                C244 +
            (C31487 * C245 + C31260 * C474 + C31488 * C956 + C92186 * C1146) *
                C92110) *
               C9514 +
           ((C31487 * C1389 + C31260 * C1606 + C31488 * C3431 +
             C92186 * C3661) *
                C244 +
            (C31487 * C1540 + C31260 * C1727 + C31488 * C3587 +
             C92186 * C3805) *
                C92110) *
               C9515 +
           ((C31487 * C1390 + C31260 * C1607 + C31488 * C5773 +
             C92186 * C6043) *
                C244 +
            (C31487 * C1541 + C31260 * C1728 + C31488 * C5955 +
             C92186 * C6208) *
                C92110) *
               C9516) *
              C92062 * C92099 * C93 -
          (((C31488 * C5956 + C92186 * C6211 + C31487 * C1542 +
             C31260 * C1730) *
                C92110 +
            (C31488 * C5774 + C92186 * C6045 + C31487 * C1391 +
             C31260 * C1608) *
                C244) *
               C9516 +
           ((C34946 + C34947) * C92110 + (C34723 + C34722) * C244) * C9515 +
           ((C31713 + C31712) * C92110 + (C31514 + C31515) * C244) * C9514) *
              C92062 * C92099 * C94 +
          (C31720 * C9514 +
           ((C34726 + C34727) * C244 + (C34949 + C34948) * C92110) * C9515 +
           ((C31487 * C1392 + C31260 * C1609 + C31488 * C11870 +
             C92186 * C12172) *
                C244 +
            (C31487 * C1543 + C31260 * C1732 + C31488 * C12072 +
             C92186 * C12397) *
                C92110) *
               C9516) *
              C92062 * C92099 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31487 * C107 + C31260 * C308 + C31488 * C805 + C92186 * C1022) *
                C244 +
            (C31487 * C245 + C31260 * C474 + C31488 * C956 + C92186 * C1146) *
                C92110) *
               C9514 +
           ((C31487 * C1389 + C31260 * C1606 + C31488 * C3431 +
             C92186 * C3661) *
                C244 +
            (C31487 * C1540 + C31260 * C1727 + C31488 * C3587 +
             C92186 * C3805) *
                C92110) *
               C9515 +
           ((C31487 * C1390 + C31260 * C1607 + C31488 * C5773 +
             C92186 * C6043) *
                C244 +
            (C31487 * C1541 + C31260 * C1728 + C31488 * C5955 +
             C92186 * C6208) *
                C92110) *
               C9516) *
              C92062 * C798 -
          (((C31488 * C5959 + C92186 * C6209 + C31487 * C5955 +
             C31260 * C6208) *
                C92110 +
            (C31488 * C5775 + C92186 * C6044 + C31487 * C5773 +
             C31260 * C6043) *
                C244) *
               C9516 +
           ((C31488 * C5958 + C92186 * C6207 + C31487 * C3587 +
             C31260 * C3805) *
                C92110 +
            (C31488 * C5772 + C92186 * C6042 + C31487 * C3431 +
             C31260 * C3661) *
                C244) *
               C9515 +
           ((C31488 * C957 + C92186 * C1147 + C31487 * C956 + C31260 * C1146) *
                C92110 +
            (C31488 * C806 + C92186 * C1023 + C31487 * C805 + C31260 * C1022) *
                C244) *
               C9514) *
              C92062 * C799 +
          (((C31487 * C806 + C31260 * C1023 + C31488 * C4882 + C92186 * C5218) *
                C244 +
            (C31487 * C957 + C31260 * C1147 + C31488 * C5114 + C92186 * C5378) *
                C92110) *
               C9514 +
           ((C31487 * C5772 + C31260 * C6042 + C31488 * C8536 +
             C92186 * C8894) *
                C244 +
            (C31487 * C5958 + C31260 * C6207 + C31488 * C8780 +
             C92186 * C9096) *
                C92110) *
               C9515 +
           ((C31487 * C5775 + C31260 * C6044 + C31488 * C37227 +
             C92186 * C37385) *
                C244 +
            (C31487 * C5959 + C31260 * C6209 + C31488 * C37333 +
             C92186 * C37488) *
                C92110) *
               C9516) *
              C92062 * C800) *
         C92078) /
            (p * q * std::sqrt(p + q));
    d2eezx[39] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92148 * C555) * C801 +
             (C554 * C117 + C92148 * C561) * C92078) *
                C31257 +
            (C584 * C801 + C585 * C92078) * C31258 +
            (C586 * C801 + C587 * C92078) * C31259) *
               C31260 +
           ((C5493 + C5494) * C31257 + (C5468 + C5469) * C31258 +
            (C16084 + C16085) * C31259) *
               C92186) *
              C92110 * C798 -
          (((C16086 + C16087) * C31259 + (C5475 + C5474) * C31258 +
            (C5496 + C5495) * C31257) *
               C92186 +
           ((C16085 + C16084) * C31259 + (C5469 + C5468) * C31258 +
            (C5494 + C5493) * C31257) *
               C31260) *
              C92110 * C799 +
          ((C5502 * C31257 + C5488 * C31258 + (C16087 + C16086) * C31259) *
               C31260 +
           ((C5501 + C5500) * C31257 + (C5499 + C5498) * C31258 +
            ((C554 * C6557 + C92148 * C7241) * C801 +
             (C554 * C6559 + C92148 * C7242) * C92078) *
                C31259) *
               C92186) *
              C92110 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92148 * C555) * C104 +
            (C554 * C117 + C92148 * C561) * C93 - C584 * C105 - C585 * C94 +
            C586 * C106 + C587 * C95) *
               C31257 +
           (C584 * C104 + C585 * C93 - C586 * C105 - C587 * C94 + C588 * C106 +
            C589 * C95) *
               C31258 +
           (C586 * C104 + C587 * C93 - C588 * C105 - C589 * C94 + C590 * C106 +
            C591 * C95) *
               C31259) *
              C31260 +
          ((C5484 * C104 + C5485 * C93 - C2468 * C105 - C2469 * C94 +
            C2470 * C106 + C2471 * C95) *
               C31257 +
           (C2468 * C104 + C2469 * C93 - C2470 * C105 - C2471 * C94 +
            C2472 * C106 + C2473 * C95) *
               C31258 +
           (C2470 * C104 + C2471 * C93 - C2472 * C105 - C2473 * C94 +
            (C554 * C1989 + C92148 * C2453) * C106 +
            (C554 * C1991 + C92148 * C2454) * C95) *
               C31259) *
              C92186) *
         C92110 * C92099) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C554 * C107 + C92148 * C555) * C104 +
           (C554 * C117 + C92148 * C561) * C93 - C584 * C105 - C585 * C94 +
           C586 * C106 + C587 * C95) *
              C92062 * C36212 +
          (C5484 * C104 + C5485 * C93 - C2468 * C105 - C2469 * C94 +
           C2470 * C106 + C2471 * C95) *
              C92062 * C36213 +
          (C5486 * C104 + C5487 * C93 - C4632 * C105 - C4633 * C94 +
           C4634 * C106 + C4635 * C95) *
              C92062 * C36214 +
          (C5492 * C104 + C5491 * C93 - C5490 * C105 - C5489 * C94 +
           (C554 * C6557 + C92148 * C7241) * C106 +
           (C554 * C6559 + C92148 * C7242) * C95) *
              C92062 * C36215) *
         C92110 * C92099) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92148 * C555) * C801 +
            (C554 * C117 + C92148 * C561) * C92078) *
               C92062 * C36212 +
           (C5493 + C5494) * C92062 * C36213 + C37054 * C36214 +
           C37060 * C36215) *
              C92110 * C798 -
          ((C37063 + C37064) * C92062 * C36215 +
           (C5500 + C5501) * C92062 * C36214 +
           (C5496 + C5495) * C92062 * C36213 +
           (C5494 + C5493) * C92062 * C36212) *
              C92110 * C799 +
          (C37054 * C36212 + C37060 * C36213 +
           (C37064 + C37063) * C92062 * C36214 +
           ((C554 * C36671 + C92148 * C37051) * C801 +
            (C554 * C36673 + C92148 * C37052) * C92078) *
               C92062 * C36215) *
              C92110 * C800)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C9997 * C107 + C9514 * C555 + C9998 * C1389 + C9515 * C1788 +
            C9999 * C1390 + C9516 * C1789) *
               C104 +
           (C9997 * C117 + C9514 * C561 + C9998 * C1397 + C9515 * C1796 +
            C9999 * C1406 + C9516 * C1797) *
               C93 -
           (C10025 + C10026 + C10027) * C105 -
           (C10028 + C10029 + C10030) * C94 +
           (C10031 + C10032 + C10033) * C106 +
           (C10034 + C10035 + C10036) * C95) *
              C92062 * C31260 +
          ((C9997 * C805 + C9514 * C1204 + C9998 * C3431 + C9515 * C3875 +
            C9999 * C5773 + C9516 * C6289) *
               C104 +
           (C9997 * C813 + C9514 * C1212 + C9998 * C3439 + C9515 * C3879 +
            C9999 * C5783 + C9516 * C6295) *
               C93 -
           (C12523 + C12522 + C12521) * C105 -
           (C12526 + C12525 + C12524) * C94 +
           (C9997 * C803 + C9514 * C1202 + C9998 * C3433 + C9515 * C3877 +
            C9999 * C11870 + C9516 * C12506) *
               C106 +
           (C9997 * C811 + C9514 * C1210 + C9998 * C3441 + C9515 * C3881 +
            C9999 * C11872 + C9516 * C12507) *
               C95) *
              C92062 * C92186) *
         C92110 * C92099) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9997 * C107 + C9514 * C555 + C9998 * C1389 + C9515 * C1788 +
             C9999 * C1390 + C9516 * C1789) *
                C801 +
            (C9997 * C117 + C9514 * C561 + C9998 * C1397 + C9515 * C1796 +
             C9999 * C1406 + C9516 * C1797) *
                C92078) *
               C92062 * C31260 +
           ((C40816 + C40817 + C40818) * C801 +
            (C40819 + C40820 + C40821) * C92078) *
               C92062 * C92186) *
              C92110 * C798 -
          (((C40822 + C40823 + C40824) * C92078 +
            (C40825 + C40826 + C40827) * C801) *
               C92062 * C92186 +
           ((C40821 + C40820 + C40819) * C92078 +
            (C40818 + C40817 + C40816) * C801) *
               C92062 * C31260) *
              C92110 * C799 +
          (((C40827 + C40826 + C40825) * C801 +
            (C40824 + C40823 + C40822) * C92078) *
               C92062 * C31260 +
           ((C9997 * C4882 + C9514 * C5456 + C9998 * C8536 + C9515 * C9196 +
             C9999 * C37227 + C9516 * C37539) *
                C801 +
            (C9997 * C4886 + C9514 * C5460 + C9998 * C8540 + C9515 * C9198 +
             C9999 * C37229 + C9516 * C37540) *
                C92078) *
               C92062 * C92186) *
              C92110 * C800)) /
            (p * q * std::sqrt(p + q));
    d2eezy[39] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92148 * C555) * C884 +
            (C554 * C182 + C92148 * C641) * C798 - C5484 * C885 - C5591 * C799 +
            C5486 * C886 + C5592 * C800) *
               C31257 +
           (C584 * C884 + C660 * C798 - C2468 * C885 - C2556 * C799 +
            C4632 * C886 + C4720 * C800) *
               C31258 +
           (C586 * C884 + C661 * C798 - C2470 * C885 - C2557 * C799 +
            C4634 * C886 + C4721 * C800) *
               C31259) *
              C31260 +
          ((C5484 * C884 + C5591 * C798 - C5486 * C885 - C5592 * C799 +
            C5492 * C886 + C5593 * C800) *
               C31257 +
           (C2468 * C884 + C2556 * C798 - C4632 * C885 - C4720 * C799 +
            C5490 * C886 + C5594 * C800) *
               C31258 +
           (C2470 * C884 + C2557 * C798 - C4634 * C885 - C4721 * C799 +
            (C554 * C6557 + C92148 * C7241) * C886 +
            (C554 * C6683 + C92148 * C7357) * C800) *
               C31259) *
              C92186) *
         C92078 * C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92148 * C555) * C181 +
             (C554 * C182 + C92148 * C641) * C92099) *
                C31257 +
            (C648 + C664) * C31258 + C668 * C31259) *
               C31260 +
           ((C5484 * C181 + C5591 * C92099) * C31257 +
            (C4710 + C4711) * C31258 + C15416 * C31259) *
               C92186) *
              C93 -
          (((C15417 + C15418) * C31259 + (C4718 + C4719) * C31258 +
            (C4711 + C4710) * C31257) *
               C92186 +
           ((C666 + C654) * C31259 + (C665 + C651) * C31258 +
            (C664 + C648) * C31257) *
               C31260) *
              C94 +
          ((C668 * C31257 + C669 * C31258 + (C659 + C667) * C31259) * C31260 +
           (C15416 * C31257 + (C15418 + C15417) * C31258 +
            ((C554 * C1989 + C92148 * C2453) * C181 +
             (C554 * C2061 + C92148 * C2539) * C92099) *
                C31259) *
               C92186) *
              C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92148 * C555) * C181 +
            (C554 * C182 + C92148 * C641) * C92099) *
               C92062 * C36212 +
           (C5484 * C181 + C5591 * C92099) * C92062 * C36213 +
           (C5486 * C181 + C5592 * C92099) * C92062 * C36214 +
           (C5492 * C181 + C5593 * C92099) * C92062 * C36215) *
              C93 -
          ((C5594 * C92099 + C5490 * C181) * C92062 * C36215 +
           (C4722 + C4712) * C92062 * C36214 +
           (C4711 + C4710) * C92062 * C36213 +
           (C664 + C648) * C92062 * C36212) *
              C94 +
          (C668 * C92062 * C36212 + C15416 * C92062 * C36213 +
           (C4717 + C4723) * C92062 * C36214 +
           ((C554 * C6557 + C92148 * C7241) * C181 +
            (C554 * C6683 + C92148 * C7357) * C92099) *
               C92062 * C36215) *
              C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C554 * C107 + C92148 * C555) * C884 +
           (C554 * C182 + C92148 * C641) * C798 - C5484 * C885 - C5591 * C799 +
           C5486 * C886 + C5592 * C800) *
              C92062 * C36212 +
          (C5484 * C884 + C5591 * C798 - C5486 * C885 - C5592 * C799 +
           C5492 * C886 + C5593 * C800) *
              C92062 * C36213 +
          (C5486 * C884 + C5592 * C798 - C5492 * C885 - C5593 * C799 +
           C37062 * C886 + C37118 * C800) *
              C92062 * C36214 +
          (C5492 * C884 + C5593 * C798 - C37062 * C885 - C37118 * C799 +
           (C554 * C36671 + C92148 * C37051) * C886 +
           (C554 * C36759 + C92148 * C37114) * C800) *
              C92062 * C36215) *
         C92078 * C92110) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9997 * C107 + C9514 * C555 + C9998 * C1389 + C9515 * C1788 +
             C9999 * C1390 + C9516 * C1789) *
                C181 +
            (C9997 * C182 + C9514 * C641 + C9998 * C1471 + C9515 * C1854 +
             C9999 * C1472 + C9516 * C1855) *
                C92099) *
               C92062 * C31260 +
           ((C9997 * C805 + C9514 * C1204 + C9998 * C3431 + C9515 * C3875 +
             C9999 * C5773 + C9516 * C6289) *
                C181 +
            (C9997 * C890 + C9514 * C1267 + C9998 * C3513 + C9515 * C3949 +
             C9999 * C5871 + C9516 * C6375) *
                C92099) *
               C92062 * C92186) *
              C93 -
          (((C12632 + C12633 + C12634) * C92099 +
            (C12523 + C12522 + C12521) * C181) *
               C92062 * C92186 +
           ((C10125 + C10124 + C10123) * C92099 +
            (C10025 + C10026 + C10027) * C181) *
               C92062 * C31260) *
              C94 +
          (((C10031 + C10032 + C10033) * C181 +
            (C10128 + C10127 + C10126) * C92099) *
               C92062 * C31260 +
           ((C9997 * C803 + C9514 * C1202 + C9998 * C3433 + C9515 * C3877 +
             C9999 * C11870 + C9516 * C12506) *
                C181 +
            (C9997 * C888 + C9514 * C1271 + C9998 * C3515 + C9515 * C3951 +
             C9999 * C11972 + C9516 * C12624) *
                C92099) *
               C92062 * C92186) *
              C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C9997 * C107 + C9514 * C555 + C9998 * C1389 + C9515 * C1788 +
            C9999 * C1390 + C9516 * C1789) *
               C884 +
           (C9997 * C182 + C9514 * C641 + C9998 * C1471 + C9515 * C1854 +
            C9999 * C1472 + C9516 * C1855) *
               C798 -
           (C40818 + C40817 + C40816) * C885 -
           (C40914 + C40915 + C40916) * C799 +
           (C40827 + C40826 + C40825) * C886 +
           (C40917 + C40918 + C40919) * C800) *
              C92062 * C31260 +
          ((C40816 + C40817 + C40818) * C884 +
           (C40916 + C40915 + C40914) * C798 -
           (C40825 + C40826 + C40827) * C885 -
           (C40919 + C40918 + C40917) * C799 +
           (C9997 * C4882 + C9514 * C5456 + C9998 * C8536 + C9515 * C9196 +
            C9999 * C37227 + C9516 * C37539) *
               C886 +
           (C9997 * C5012 + C9514 * C5578 + C9998 * C8666 + C9515 * C9318 +
            C9999 * C37281 + C9516 * C37591) *
               C800) *
              C92062 * C92186) *
         C92078 * C92110) /
            (p * q * std::sqrt(p + q));
    d2eezz[39] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92148 * C555) * C244 +
             (C554 * C245 + C92148 * C719) * C92110) *
                C31257 +
            (C726 + C742) * C31258 + C746 * C31259) *
               C31260 +
           ((C5673 + C5691) * C31257 + C7466 * C31258 + C15493 * C31259) *
               C92186) *
              C798 -
          (((C4807 + C4803) * C31259 + C7467 * C31258 +
            (C5692 + C5676) * C31257) *
               C92186 +
           (C17876 * C31259 + C7468 * C31258 + (C5691 + C5673) * C31257) *
               C31260) *
              C799 +
          ((C5695 * C31257 + C5679 * C31258 + (C4803 + C4807) * C31259) *
               C31260 +
           ((C5685 + C5694) * C31257 + (C5682 + C5693) * C31258 +
            ((C554 * C6557 + C92148 * C7241) * C244 +
             (C554 * C6795 + C92148 * C7464) * C92110) *
                C31259) *
               C92186) *
              C800) *
         C92078) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92148 * C555) * C244 +
             (C554 * C245 + C92148 * C719) * C92110) *
                C31257 +
            (C726 + C742) * C31258 + C746 * C31259) *
               C31260 +
           ((C5673 + C5691) * C31257 + C7466 * C31258 + C15493 * C31259) *
               C92186) *
              C92099 * C93 -
          (((C2641 + C2631) * C31259 + C17876 * C31258 + C7468 * C31257) *
               C92186 +
           ((C744 + C732) * C31259 + (C743 + C729) * C31258 +
            (C742 + C726) * C31257) *
               C31260) *
              C92099 * C94 +
          ((C746 * C31257 + C747 * C31258 + (C737 + C745) * C31259) * C31260 +
           (C15493 * C31257 + (C2631 + C2641) * C31258 +
            ((C554 * C1989 + C92148 * C2453) * C244 +
             (C554 * C2129 + C92148 * C2627) * C92110) *
                C31259) *
               C92186) *
              C92099 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92148 * C555) * C244 +
            (C554 * C245 + C92148 * C719) * C92110) *
               C92062 * C36212 +
           (C5673 + C5691) * C92062 * C36213 + C5695 * C92062 * C36214 +
           (C5685 + C5694) * C92062 * C36215) *
              C92099 * C93 -
          ((C5693 + C5682) * C92062 * C36215 + C7467 * C92062 * C36214 +
           C7468 * C92062 * C36213 + (C742 + C726) * C92062 * C36212) *
              C92099 * C94 +
          (C746 * C92062 * C36212 + C15493 * C92062 * C36213 +
           (C4803 + C4807) * C92062 * C36214 +
           ((C554 * C6557 + C92148 * C7241) * C244 +
            (C554 * C6795 + C92148 * C7464) * C92110) *
               C92062 * C36215) *
              C92099 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92148 * C555) * C244 +
            (C554 * C245 + C92148 * C719) * C92110) *
               C92062 * C36212 +
           (C5673 + C5691) * C92062 * C36213 + C37170 * C36214 +
           C37175 * C36215) *
              C798 -
          ((C37177 + C37174) * C92062 * C36215 +
           (C5694 + C5685) * C92062 * C36214 +
           (C5692 + C5676) * C92062 * C36213 +
           (C5691 + C5673) * C92062 * C36212) *
              C799 +
          (C37170 * C36212 + C37175 * C36213 +
           (C37174 + C37177) * C92062 * C36214 +
           ((C554 * C36671 + C92148 * C37051) * C244 +
            (C554 * C36823 + C92148 * C37168) * C92110) *
               C92062 * C36215) *
              C800) *
         C92078) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9997 * C107 + C9514 * C555 + C9998 * C1389 + C9515 * C1788 +
             C9999 * C1390 + C9516 * C1789) *
                C244 +
            (C9997 * C245 + C9514 * C719 + C9998 * C1540 + C9515 * C1909 +
             C9999 * C1541 + C9516 * C1910) *
                C92110) *
               C92062 * C31260 +
           ((C9997 * C805 + C9514 * C1204 + C9998 * C3431 + C9515 * C3875 +
             C9999 * C5773 + C9516 * C6289) *
                C244 +
            (C9997 * C956 + C9514 * C1328 + C9998 * C3587 + C9515 * C4019 +
             C9999 * C5955 + C9516 * C6453) *
                C92110) *
               C92062 * C92186) *
              C92099 * C93 -
          (((C12740 + C12741 + C12742) * C92110 +
            (C12523 + C12522 + C12521) * C244) *
               C92062 * C92186 +
           ((C10217 + C10216 + C10215) * C92110 +
            (C10025 + C10026 + C10027) * C244) *
               C92062 * C31260) *
              C92099 * C94 +
          (((C10031 + C10032 + C10033) * C244 +
            (C10220 + C10219 + C10218) * C92110) *
               C92062 * C31260 +
           ((C9997 * C803 + C9514 * C1202 + C9998 * C3433 + C9515 * C3877 +
             C9999 * C11870 + C9516 * C12506) *
                C244 +
            (C9997 * C954 + C9514 * C1326 + C9998 * C3589 + C9515 * C4021 +
             C9999 * C12072 + C9516 * C12732) *
                C92110) *
               C92062 * C92186) *
              C92099 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9997 * C107 + C9514 * C555 + C9998 * C1389 + C9515 * C1788 +
             C9999 * C1390 + C9516 * C1789) *
                C244 +
            (C9997 * C245 + C9514 * C719 + C9998 * C1540 + C9515 * C1909 +
             C9999 * C1541 + C9516 * C1910) *
                C92110) *
               C92062 * C31260 +
           ((C40816 + C40817 + C40818) * C244 +
            (C41006 + C41007 + C41008) * C92110) *
               C92062 * C92186) *
              C798 -
          (((C41009 + C41010 + C41011) * C92110 +
            (C40825 + C40826 + C40827) * C244) *
               C92062 * C92186 +
           ((C41008 + C41007 + C41006) * C92110 +
            (C40818 + C40817 + C40816) * C244) *
               C92062 * C31260) *
              C799 +
          (((C40827 + C40826 + C40825) * C244 +
            (C41011 + C41010 + C41009) * C92110) *
               C92062 * C31260 +
           ((C9997 * C4882 + C9514 * C5456 + C9998 * C8536 + C9515 * C9196 +
             C9999 * C37227 + C9516 * C37539) *
                C244 +
            (C9997 * C5114 + C9514 * C5669 + C9998 * C8780 + C9515 * C9424 +
             C9999 * C37333 + C9516 * C37642) *
                C92110) *
               C92062 * C92186) *
              C800) *
         C92078) /
            (p * q * std::sqrt(p + q));
    d2eexx[40] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C89875 * C107 + C92310 * C113 + C89868 * C108 + C92067 * C114) *
                 C1987 +
             (C89875 * C117 + C92310 * C125 + C89868 * C118 + C92067 * C126) *
                 C1983 -
             (C89868 * C109 + C92067 * C115 + C89875 * C108 + C92310 * C114) *
                 C1988 -
             (C89868 * C119 + C92067 * C127 + C89875 * C118 + C92310 * C126) *
                 C1984) *
                C31260 +
            ((C45573 + C45574) * C1987 + (C45575 + C45576) * C1983 -
             (C47009 + C47010) * C1988 - (C47011 + C47012) * C1984) *
                C92186) *
               C92323 +
           (((C51595 + C51596) * C1987 + (C51597 + C51598) * C1983 -
             (C89868 * C1387 + C92067 * C1399 + C89875 * C1388 +
              C92310 * C1400) *
                 C1988 -
             (C89868 * C1395 + C92067 * C1411 + C89875 * C1396 +
              C92310 * C1412) *
                 C1984) *
                C31260 +
            ((C48900 + C48899) * C1987 + (C48898 + C48897) * C1983 -
             (C52565 + C52566) * C1988 - (C52567 + C52568) * C1984) *
                C92186) *
               C92212) *
              C92110 * C1985 +
          ((((C47010 + C47009) * C1988 -
             ((C45576 + C45575) * C1983 + (C45574 + C45573) * C1987) +
             (C47012 + C47011) * C1984) *
                C31260 +
            ((C47014 + C47013) * C1988 -
             ((C45580 + C45579) * C1983 + (C45578 + C45577) * C1987) +
             (C47016 + C47015) * C1984) *
                C92186) *
               C92323 +
           (((C52566 + C52565) * C1988 -
             ((C48897 + C48898) * C1983 + (C48899 + C48900) * C1987) +
             (C52568 + C52567) * C1984) *
                C31260 +
            ((C89875 * C5771 + C92310 * C5779 + C89868 * C7566 +
              C92067 * C7567) *
                 C1988 -
             ((C48893 + C48894) * C1983 + (C48895 + C48896) * C1987) +
             (C89875 * C5777 + C92310 * C5789 + C89868 * C7568 +
              C92067 * C7569) *
                 C1984) *
                C92186) *
               C92212) *
              C92110 * C1986)) /
        (p * q * std::sqrt(p + q));
    d2eexy[40] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C89875 * C107 + C92310 * C113 + C89868 * C108 + C92067 * C114) *
                 C2059 +
             (C89875 * C182 + C92310 * C188 + C89868 * C183 + C92067 * C189) *
                 C1985 -
             (C45574 + C45573) * C2060 - (C45676 + C45677) * C1986) *
                C31260 +
            ((C45573 + C45574) * C2059 + (C45677 + C45676) * C1985 -
             (C45578 + C45577) * C2060 - (C45679 + C45678) * C1986) *
                C92186) *
               C92323 +
           (((C51595 + C51596) * C2059 + (C51717 + C51718) * C1985 -
             (C48899 + C48900) * C2060 - (C49008 + C49007) * C1986) *
                C31260 +
            ((C48900 + C48899) * C2059 + (C49007 + C49008) * C1985 -
             (C48895 + C48896) * C2060 - (C49010 + C49009) * C1986) *
                C92186) *
               C92212) *
              C1983 +
          ((((C47010 + C47009) * C2060 -
             ((C89868 * C184 + C92067 * C190 + C89875 * C183 + C92310 * C189) *
                  C1985 +
              (C89868 * C109 + C92067 * C115 + C89875 * C108 + C92310 * C114) *
                  C2059) +
             (C47123 + C47124) * C1986) *
                C31260 +
            ((C47014 + C47013) * C2060 -
             ((C47124 + C47123) * C1985 + (C47009 + C47010) * C2059) +
             (C47125 + C47126) * C1986) *
                C92186) *
               C92323 +
           (((C52566 + C52565) * C2060 -
             ((C89868 * C1469 + C92067 * C1477 + C89875 * C1470 +
               C92310 * C1478) *
                  C1985 +
              (C89868 * C1387 + C92067 * C1399 + C89875 * C1388 +
               C92310 * C1400) *
                  C2059) +
             (C52703 + C52704) * C1986) *
                C31260 +
            ((C89875 * C5771 + C92310 * C5779 + C89868 * C7566 +
              C92067 * C7567) *
                 C2060 -
             ((C52704 + C52703) * C1985 + (C52565 + C52566) * C2059) +
             (C89875 * C5869 + C92310 * C5875 + C89868 * C7668 +
              C92067 * C7669) *
                 C1986) *
                C92186) *
               C92212) *
              C1984) *
         C92110) /
        (p * q * std::sqrt(p + q));
    d2eexz[40] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C89875 * C107 + C92310 * C113 + C89868 * C108 + C92067 * C114) *
                  C244 +
              (C89875 * C245 + C92310 * C251 + C89868 * C246 + C92067 * C252) *
                  C92110) *
                 C31260 +
             ((C45573 + C45574) * C244 + (C45770 + C45771) * C92110) * C92186) *
                C92323 +
            (((C51595 + C51596) * C244 + (C51834 + C51833) * C92110) * C31260 +
             ((C48900 + C48899) * C244 + (C49118 + C49117) * C92110) * C92186) *
                C92212) *
               C1985 -
           ((((C49119 + C49120) * C92110 + (C48895 + C48896) * C244) * C92186 +
             ((C49117 + C49118) * C92110 + (C48899 + C48900) * C244) * C31260) *
                C92212 +
            (((C45773 + C45772) * C92110 + (C45578 + C45577) * C244) * C92186 +
             ((C45771 + C45770) * C92110 + (C45574 + C45573) * C244) * C31260) *
                C92323) *
               C1986) *
              C1983 +
          (((((C47010 + C47009) * C244 + (C47233 + C47234) * C92110) * C31260 +
             ((C47014 + C47013) * C244 + (C47235 + C47236) * C92110) * C92186) *
                C92323 +
            (((C52566 + C52565) * C244 + (C52839 + C52840) * C92110) * C31260 +
             ((C89875 * C5771 + C92310 * C5779 + C89868 * C7566 +
               C92067 * C7567) *
                  C244 +
              (C89875 * C5957 + C92310 * C5963 + C89868 * C7768 +
               C92067 * C7769) *
                  C92110) *
                 C92186) *
                C92212) *
               C1986 -
           ((((C52840 + C52839) * C92110 + (C52565 + C52566) * C244) * C92186 +
             ((C89868 * C1538 + C92067 * C1546 + C89875 * C1539 +
               C92310 * C1547) *
                  C92110 +
              (C89868 * C1387 + C92067 * C1399 + C89875 * C1388 +
               C92310 * C1400) *
                  C244) *
                 C31260) *
                C92212 +
            (((C47234 + C47233) * C92110 + (C47009 + C47010) * C244) * C92186 +
             ((C89868 * C247 + C92067 * C253 + C89875 * C246 + C92310 * C252) *
                  C92110 +
              (C89868 * C109 + C92067 * C115 + C89875 * C108 + C92310 * C114) *
                  C244) *
                 C31260) *
                C92323) *
               C1985) *
              C1984)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[40] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31487 * C107 + C31260 * C308 + C31488 * C805 + C92186 * C1022) *
                 C1987 +
             (C31487 * C117 + C31260 * C314 + C31488 * C813 + C92186 * C1030) *
                 C1983 -
             (C31514 + C31515) * C1988 - (C31516 + C31517) * C1984) *
                C92323 +
            ((C41420 + C41421) * C1987 + (C41422 + C41423) * C1983 -
             (C34723 + C34722) * C1988 - (C34725 + C34724) * C1984) *
                C92212) *
               C92310 +
           (((C31515 + C31514) * C1987 + (C31517 + C31516) * C1983 -
             (C31519 + C31518) * C1988 - (C31521 + C31520) * C1984) *
                C92323 +
            ((C34722 + C34723) * C1987 + (C34724 + C34725) * C1983 -
             (C34727 + C34726) * C1988 - (C34729 + C34728) * C1984) *
                C92212) *
               C92067) *
              C92110 * C1985 +
          ((((C33792 + C33793) * C1988 -
             ((C31488 * C822 + C92186 * C1031 + C31487 * C813 +
               C31260 * C1030) *
                  C1983 +
              (C31488 * C806 + C92186 * C1023 + C31487 * C805 +
               C31260 * C1022) *
                  C1987) +
             (C33794 + C33795) * C1984) *
                C92323 +
            ((C52979 + C52980) * C1988 -
             ((C44166 + C44165) * C1983 + (C44164 + C44163) * C1987) +
             (C52981 + C52982) * C1984) *
                C92212) *
               C92310 +
           (((C33796 + C33797) * C1988 -
             ((C33795 + C33794) * C1983 + (C33793 + C33792) * C1987) +
             (C33798 + C33799) * C1984) *
                C92323 +
            ((C31487 * C3433 + C31260 * C3663 + C31488 * C7566 +
              C92186 * C7868) *
                 C1988 -
             ((C52982 + C52981) * C1983 + (C52980 + C52979) * C1987) +
             (C31487 * C3441 + C31260 * C3667 + C31488 * C7568 +
              C92186 * C7869) *
                 C1984) *
                C92212) *
               C92067) *
              C92110 * C1986)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[40] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31487 * C107 + C31260 * C308 + C31488 * C805 + C92186 * C1022) *
                 C2059 +
             (C31487 * C182 + C31260 * C394 + C31488 * C890 + C92186 * C1085) *
                 C1985 -
             (C31488 * C806 + C92186 * C1023 + C31487 * C805 + C31260 * C1022) *
                 C2060 -
             (C31488 * C891 + C92186 * C1086 + C31487 * C890 + C31260 * C1085) *
                 C1986) *
                C92323 +
            ((C41420 + C41421) * C2059 + (C41525 + C41526) * C1985 -
             (C44164 + C44163) * C2060 - (C44278 + C44279) * C1986) *
                C92212) *
               C92310 +
           (((C31515 + C31514) * C2059 + (C31615 + C31616) * C1985 -
             (C33793 + C33792) * C2060 - (C33906 + C33907) * C1986) *
                C92323 +
            ((C34722 + C34723) * C2059 + (C34836 + C34837) * C1985 -
             (C52980 + C52979) * C2060 - (C53117 + C53118) * C1986) *
                C92212) *
               C92067) *
              C1983 +
          ((((C33792 + C33793) * C2060 -
             ((C31616 + C31615) * C1985 + (C31514 + C31515) * C2059) +
             (C33907 + C33906) * C1986) *
                C92323 +
            ((C52979 + C52980) * C2060 -
             ((C34837 + C34836) * C1985 + (C34723 + C34722) * C2059) +
             (C53118 + C53117) * C1986) *
                C92212) *
               C92310 +
           (((C33796 + C33797) * C2060 -
             ((C31618 + C31617) * C1985 + (C31519 + C31518) * C2059) +
             (C33909 + C33908) * C1986) *
                C92323 +
            ((C31487 * C3433 + C31260 * C3663 + C31488 * C7566 +
              C92186 * C7868) *
                 C2060 -
             ((C34839 + C34838) * C1985 + (C34727 + C34726) * C2059) +
             (C31487 * C3515 + C31260 * C3737 + C31488 * C7668 +
              C92186 * C7986) *
                 C1986) *
                C92212) *
               C92067) *
              C1984) *
         C92110) /
        (p * q * std::sqrt(p + q));
    d2eeyz[40] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C31487 * C107 + C31260 * C308 + C31488 * C805 + C92186 * C1022) *
                  C244 +
              (C31487 * C245 + C31260 * C474 + C31488 * C956 + C92186 * C1146) *
                  C92110) *
                 C92323 +
             ((C41420 + C41421) * C244 + (C41622 + C41621) * C92110) * C92212) *
                C92310 +
            (((C31515 + C31514) * C244 + (C31712 + C31713) * C92110) * C92323 +
             ((C34722 + C34723) * C244 + (C34947 + C34946) * C92110) * C92212) *
                C92067) *
               C1985 -
           ((((C53253 + C53254) * C92110 + (C52980 + C52979) * C244) * C92212 +
             ((C34018 + C34019) * C92110 + (C33793 + C33792) * C244) * C92323) *
                C92067 +
            (((C44390 + C44389) * C92110 + (C44164 + C44163) * C244) * C92212 +
             ((C31488 * C957 + C92186 * C1147 + C31487 * C956 +
               C31260 * C1146) *
                  C92110 +
              (C31488 * C806 + C92186 * C1023 + C31487 * C805 +
               C31260 * C1022) *
                  C244) *
                 C92323) *
                C92310) *
               C1986) *
              C1983 +
          (((((C33792 + C33793) * C244 + (C34019 + C34018) * C92110) * C92323 +
             ((C52979 + C52980) * C244 + (C53254 + C53253) * C92110) * C92212) *
                C92310 +
            (((C33796 + C33797) * C244 + (C34017 + C34016) * C92110) * C92323 +
             ((C31487 * C3433 + C31260 * C3663 + C31488 * C7566 +
               C92186 * C7868) *
                  C244 +
              (C31487 * C3589 + C31260 * C3807 + C31488 * C7768 +
               C92186 * C8094) *
                  C92110) *
                 C92212) *
                C92067) *
               C1986 -
           ((((C34948 + C34949) * C92110 + (C34727 + C34726) * C244) * C92212 +
             ((C31715 + C31714) * C92110 + (C31519 + C31518) * C244) * C92323) *
                C92067 +
            (((C34946 + C34947) * C92110 + (C34723 + C34722) * C244) * C92212 +
             ((C31713 + C31712) * C92110 + (C31514 + C31515) * C244) * C92323) *
                C92310) *
               C1985) *
              C1984)) /
        (p * q * std::sqrt(p + q));
    d2eezx[40] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C20274 * C107 + C92323 * C555 + C20275 * C1389 + C92212 * C1788) *
                 C1987 +
             (C20274 * C117 + C92323 * C561 + C20275 * C1397 + C92212 * C1796) *
                 C1983 -
             (C20301 + C20302) * C1988 - (C20303 + C20304) * C1984) *
                C92310 +
            ((C20302 + C20301) * C1987 + (C20304 + C20303) * C1983 -
             (C20306 + C20305) * C1988 - (C20308 + C20307) * C1984) *
                C92067) *
               C31260 +
           (((C26314 + C26315) * C1987 + (C26316 + C26317) * C1983 -
             C28470 * C1988 - C28471 * C1984) *
                C92310 +
            (C28472 * C1987 + C28473 * C1983 - (C22640 + C22639) * C1988 -
             (C22642 + C22641) * C1984) *
                C92067) *
               C92186) *
              C92110 * C1985 +
          (((C28472 * C1988 -
             ((C26317 + C26316) * C1983 + (C26315 + C26314) * C1987) +
             C28473 * C1984) *
                C92310 +
            ((C22639 + C22640) * C1988 - (C28471 * C1983 + C28470 * C1987) +
             (C22641 + C22642) * C1984) *
                C92067) *
               C31260 +
           (((C26321 + C26320) * C1988 -
             ((C26322 + C26323) * C1983 + (C26324 + C26325) * C1987) +
             (C26319 + C26318) * C1984) *
                C92310 +
            ((C20274 * C808 + C92323 * C1207 + C20275 * C7566 +
              C92212 * C8202) *
                 C1988 -
             ((C26318 + C26319) * C1983 + (C26320 + C26321) * C1987) +
             (C20274 * C824 + C92323 * C1215 + C20275 * C7568 +
              C92212 * C8203) *
                 C1984) *
                C92067) *
               C92186) *
              C92110 * C1986)) /
        (p * q * std::sqrt(p + q));
    d2eezy[40] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C20274 * C107 + C92323 * C555 + C20275 * C1389 + C92212 * C1788) *
                 C2059 +
             (C20274 * C182 + C92323 * C641 + C20275 * C1471 + C92212 * C1854) *
                 C1985 -
             (C26315 + C26314) * C2060 - (C26436 + C26437) * C1986) *
                C92310 +
            ((C20302 + C20301) * C2059 + (C20402 + C20403) * C1985 -
             C28470 * C2060 - C28604 * C1986) *
                C92067) *
               C31260 +
           (((C26314 + C26315) * C2059 + (C26437 + C26436) * C1985 -
             (C26324 + C26325) * C2060 - (C26439 + C26438) * C1986) *
                C92310 +
            (C28472 * C2059 + C28605 * C1985 - (C26320 + C26321) * C2060 -
             (C26441 + C26440) * C1986) *
                C92067) *
               C92186) *
              C1983 +
          (((C28472 * C2060 -
             ((C20403 + C20402) * C1985 + (C20301 + C20302) * C2059) +
             C28605 * C1986) *
                C92310 +
            ((C22639 + C22640) * C2060 -
             ((C20405 + C20404) * C1985 + (C20306 + C20305) * C2059) +
             (C22752 + C22751) * C1986) *
                C92067) *
               C31260 +
           (((C26321 + C26320) * C2060 - (C28604 * C1985 + C28470 * C2059) +
             (C26440 + C26441) * C1986) *
                C92310 +
            ((C20274 * C808 + C92323 * C1207 + C20275 * C7566 +
              C92212 * C8202) *
                 C2060 -
             ((C22751 + C22752) * C1985 + (C22640 + C22639) * C2059) +
             (C20274 * C893 + C92323 * C1272 + C20275 * C7668 +
              C92212 * C8314) *
                 C1986) *
                C92067) *
               C92186) *
              C1984) *
         C92110) /
        (p * q * std::sqrt(p + q));
    d2eezz[40] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C20274 * C107 + C92323 * C555 + C20275 * C1389 +
               C92212 * C1788) *
                  C244 +
              (C20274 * C245 + C92323 * C719 + C20275 * C1540 +
               C92212 * C1909) *
                  C92110) *
                 C92310 +
             ((C20302 + C20301) * C244 + (C20498 + C20499) * C92110) * C92067) *
                C31260 +
            (((C26314 + C26315) * C244 + (C26552 + C26553) * C92110) * C92310 +
             C28742 * C92067) *
                C92186) *
               C1985 -
           ((((C26554 + C26555) * C92110 + (C26320 + C26321) * C244) * C92067 +
             ((C26556 + C26557) * C92110 + (C26324 + C26325) * C244) * C92310) *
                C92186 +
            (C28743 * C92067 +
             ((C26553 + C26552) * C92110 + (C26315 + C26314) * C244) * C92310) *
                C31260) *
               C1986) *
              C1983 +
          (((C28742 * C92310 +
             ((C22639 + C22640) * C244 + (C22860 + C22859) * C92110) * C92067) *
                C31260 +
            (((C26321 + C26320) * C244 + (C26555 + C26554) * C92110) * C92310 +
             ((C20274 * C808 + C92323 * C1207 + C20275 * C7566 +
               C92212 * C8202) *
                  C244 +
              (C20274 * C959 + C92323 * C1331 + C20275 * C7768 +
               C92212 * C8423) *
                  C92110) *
                 C92067) *
                C92186) *
               C1986 -
           ((((C22859 + C22860) * C92110 + (C22640 + C22639) * C244) * C92067 +
             C28743 * C92310) *
                C92186 +
            (((C20501 + C20500) * C92110 + (C20306 + C20305) * C244) * C92067 +
             ((C20499 + C20498) * C92110 + (C20301 + C20302) * C244) * C92310) *
                C31260) *
               C1985) *
              C1984)) /
        (p * q * std::sqrt(p + q));
    d2eexx[41] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C89875 * C107 + C92310 * C113 + C89868 * C108 + C92067 * C114) *
                  C801 +
              (C89875 * C117 + C92310 * C125 + C89868 * C118 + C92067 * C126) *
                  C92078) *
                 C31260 +
             ((C45573 + C45574) * C801 + (C45575 + C45576) * C92078) * C92186) *
                C92323 +
            (((C51595 + C51596) * C801 + (C51597 + C51598) * C92078) * C31260 +
             C54991 * C92186) *
                C92212) *
               C2709 -
           ((((C51599 + C51600) * C92078 + (C51601 + C51602) * C801) * C92186 +
             ((C51603 + C51604) * C92078 + (C51605 + C51606) * C801) * C31260) *
                C92212 +
            (C54992 * C92186 +
             ((C51598 + C51597) * C92078 + (C51596 + C51595) * C801) * C31260) *
                C92323) *
               C2710) *
              C1985 +
          (((C54991 * C31260 +
             ((C48896 + C48895) * C801 + (C48894 + C48893) * C92078) * C92186) *
                C92323 +
            (((C51602 + C51601) * C801 + (C51600 + C51599) * C92078) * C31260 +
             ((C89875 * C5775 + C92310 * C5785 + C89868 * C5776 +
               C92067 * C5786) *
                  C801 +
              (C89875 * C5787 + C92310 * C5793 + C89868 * C5788 +
               C92067 * C5794) *
                  C92078) *
                 C92186) *
                C92212) *
               C2710 -
           ((((C48893 + C48894) * C92078 + (C48895 + C48896) * C801) * C92186 +
             C54992 * C31260) *
                C92212 +
            (((C45580 + C45579) * C92078 + (C45578 + C45577) * C801) * C92186 +
             ((C45576 + C45575) * C92078 + (C45574 + C45573) * C801) * C31260) *
                C92323) *
               C2709) *
              C1986)) /
        (p * q * std::sqrt(p + q));
    d2eexy[41] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C89875 * C107 + C92310 * C113 + C89868 * C108 + C92067 * C114) *
                 C2059 +
             (C89875 * C182 + C92310 * C188 + C89868 * C183 + C92067 * C189) *
                 C1985 -
             (C45574 + C45573) * C2060 - (C45676 + C45677) * C1986) *
                C31260 +
            ((C45573 + C45574) * C2059 + (C45677 + C45676) * C1985 -
             (C45578 + C45577) * C2060 - (C45679 + C45678) * C1986) *
                C92186) *
               C92323 +
           (((C51595 + C51596) * C2059 + (C51717 + C51718) * C1985 -
             C54986 * C2060 - C55123 * C1986) *
                C31260 +
            (C54983 * C2059 + C55124 * C1985 - (C48895 + C48896) * C2060 -
             (C49010 + C49009) * C1986) *
                C92186) *
               C92212) *
              C92078 * C2709 +
          (((C54983 * C2060 -
             ((C51718 + C51717) * C1985 + (C51596 + C51595) * C2059) +
             C55124 * C1986) *
                C31260 +
            ((C48896 + C48895) * C2060 - (C55123 * C1985 + C54986 * C2059) +
             (C49009 + C49010) * C1986) *
                C92186) *
               C92323 +
           (((C51602 + C51601) * C2060 -
             ((C51721 + C51722) * C1985 + (C51605 + C51606) * C2059) +
             (C51720 + C51719) * C1986) *
                C31260 +
            ((C89875 * C5775 + C92310 * C5785 + C89868 * C5776 +
              C92067 * C5786) *
                 C2060 -
             ((C51719 + C51720) * C1985 + (C51601 + C51602) * C2059) +
             (C89875 * C5873 + C92310 * C5879 + C89868 * C5874 +
              C92067 * C5880) *
                 C1986) *
                C92186) *
               C92212) *
              C92078 * C2710)) /
        (p * q * std::sqrt(p + q));
    d2eexz[41] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C89875 * C107 + C92310 * C113 + C89868 * C108 + C92067 * C114) *
                 C2849 +
             (C89875 * C245 + C92310 * C251 + C89868 * C246 + C92067 * C252) *
                 C2709 -
             (C51596 + C51595) * C2850 - (C51833 + C51834) * C2710) *
                C31260 +
            ((C45573 + C45574) * C2849 + (C45770 + C45771) * C2709 -
             C54986 * C2850 - C55255 * C2710) *
                C92186) *
               C92323 +
           (((C51595 + C51596) * C2849 + (C51834 + C51833) * C2709 -
             (C51605 + C51606) * C2850 - (C51836 + C51835) * C2710) *
                C31260 +
            (C54983 * C2849 + C55256 * C2709 - (C51601 + C51602) * C2850 -
             (C51838 + C51837) * C2710) *
                C92186) *
               C92212) *
              C1985 +
          (((C54983 * C2850 -
             ((C45771 + C45770) * C2709 + (C45574 + C45573) * C2849) +
             C55256 * C2710) *
                C31260 +
            ((C48896 + C48895) * C2850 -
             ((C45773 + C45772) * C2709 + (C45578 + C45577) * C2849) +
             (C49120 + C49119) * C2710) *
                C92186) *
               C92323 +
           (((C51602 + C51601) * C2850 - (C55255 * C2709 + C54986 * C2849) +
             (C51837 + C51838) * C2710) *
                C31260 +
            ((C89875 * C5775 + C92310 * C5785 + C89868 * C5776 +
              C92067 * C5786) *
                 C2850 -
             ((C49119 + C49120) * C2709 + (C48895 + C48896) * C2849) +
             (C89875 * C5959 + C92310 * C5965 + C89868 * C5960 +
              C92067 * C5966) *
                 C2710) *
                C92186) *
               C92212) *
              C1986) *
         C92078) /
        (p * q * std::sqrt(p + q));
    d2eeyx[41] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C31487 * C107 + C31260 * C308 + C31488 * C805 + C92186 * C1022) *
                  C801 +
              (C31487 * C117 + C31260 * C314 + C31488 * C813 + C92186 * C1030) *
                  C92078) *
                 C92323 +
             ((C41420 + C41421) * C801 + (C41422 + C41423) * C92078) * C92212) *
                C92310 +
            (((C31515 + C31514) * C801 + (C31517 + C31516) * C92078) * C92323 +
             (C54191 * C801 + C54192 * C92078) * C92212) *
                C92067) *
               C2709 -
           ((((C43214 + C43215) * C92078 + (C43212 + C43213) * C801) * C92212 +
             (C54190 * C92078 + C54189 * C801) * C92323) *
                C92067 +
            (((C41427 + C41426) * C92078 + (C41425 + C41424) * C801) * C92212 +
             ((C41423 + C41422) * C92078 + (C41421 + C41420) * C801) * C92323) *
                C92310) *
               C2710) *
              C1985 +
          (((((C44163 + C44164) * C801 + (C44165 + C44166) * C92078) * C92323 +
             ((C44167 + C44168) * C801 + (C44169 + C44170) * C92078) * C92212) *
                C92310 +
            (((C52979 + C52980) * C801 + (C52981 + C52982) * C92078) * C92323 +
             ((C31487 * C5774 + C31260 * C6045 + C31488 * C5776 +
               C92186 * C6046) *
                  C801 +
              (C31487 * C5784 + C31260 * C6051 + C31488 * C5788 +
               C92186 * C6052) *
                  C92078) *
                 C92212) *
                C92067) *
               C2710 -
           ((((C52982 + C52981) * C92078 + (C52980 + C52979) * C801) * C92212 +
             ((C33795 + C33794) * C92078 + (C33793 + C33792) * C801) * C92323) *
                C92067 +
            (((C44166 + C44165) * C92078 + (C44164 + C44163) * C801) * C92212 +
             ((C31488 * C822 + C92186 * C1031 + C31487 * C813 +
               C31260 * C1030) *
                  C92078 +
              (C31488 * C806 + C92186 * C1023 + C31487 * C805 +
               C31260 * C1022) *
                  C801) *
                 C92323) *
                C92310) *
               C2709) *
              C1986)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[41] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31487 * C107 + C31260 * C308 + C31488 * C805 + C92186 * C1022) *
                 C2059 +
             (C31487 * C182 + C31260 * C394 + C31488 * C890 + C92186 * C1085) *
                 C1985 -
             (C31488 * C806 + C92186 * C1023 + C31487 * C805 + C31260 * C1022) *
                 C2060 -
             (C31488 * C891 + C92186 * C1086 + C31487 * C890 + C31260 * C1085) *
                 C1986) *
                C92323 +
            ((C41420 + C41421) * C2059 + (C41525 + C41526) * C1985 -
             (C44164 + C44163) * C2060 - (C44278 + C44279) * C1986) *
                C92212) *
               C92310 +
           (((C31515 + C31514) * C2059 + (C31615 + C31616) * C1985 -
             (C33793 + C33792) * C2060 - (C33906 + C33907) * C1986) *
                C92323 +
            (C54191 * C2059 + C54324 * C1985 - (C52980 + C52979) * C2060 -
             (C53117 + C53118) * C1986) *
                C92212) *
               C92067) *
              C92078 * C2709 +
          ((((C44163 + C44164) * C2060 -
             ((C41526 + C41525) * C1985 + (C41421 + C41420) * C2059) +
             (C44279 + C44278) * C1986) *
                C92323 +
            ((C44167 + C44168) * C2060 -
             ((C41528 + C41527) * C1985 + (C41425 + C41424) * C2059) +
             (C44281 + C44280) * C1986) *
                C92212) *
               C92310 +
           (((C52979 + C52980) * C2060 - (C54325 * C1985 + C54189 * C2059) +
             (C53118 + C53117) * C1986) *
                C92323 +
            ((C31487 * C5774 + C31260 * C6045 + C31488 * C5776 +
              C92186 * C6046) *
                 C2060 -
             ((C43318 + C43319) * C1985 + (C43212 + C43213) * C2059) +
             (C31487 * C5872 + C31260 * C6131 + C31488 * C5874 +
              C92186 * C6132) *
                 C1986) *
                C92212) *
               C92067) *
              C92078 * C2710)) /
        (p * q * std::sqrt(p + q));
    d2eeyz[41] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31487 * C107 + C31260 * C308 + C31488 * C805 + C92186 * C1022) *
                 C2849 +
             (C31487 * C245 + C31260 * C474 + C31488 * C956 + C92186 * C1146) *
                 C2709 -
             (C41421 + C41420) * C2850 - (C41621 + C41622) * C2710) *
                C92323 +
            ((C41420 + C41421) * C2849 + (C41622 + C41621) * C2709 -
             (C41425 + C41424) * C2850 - (C41624 + C41623) * C2710) *
                C92212) *
               C92310 +
           (((C31515 + C31514) * C2849 + (C31712 + C31713) * C2709 -
             C54189 * C2850 - C54461 * C2710) *
                C92323 +
            (C54191 * C2849 + C54462 * C2709 - (C43212 + C43213) * C2850 -
             (C43423 + C43422) * C2710) *
                C92212) *
               C92067) *
              C1985 +
          ((((C44163 + C44164) * C2850 -
             ((C31488 * C957 + C92186 * C1147 + C31487 * C956 +
               C31260 * C1146) *
                  C2709 +
              (C31488 * C806 + C92186 * C1023 + C31487 * C805 +
               C31260 * C1022) *
                  C2849) +
             (C44389 + C44390) * C2710) *
                C92323 +
            ((C44167 + C44168) * C2850 -
             ((C44390 + C44389) * C2709 + (C44164 + C44163) * C2849) +
             (C44391 + C44392) * C2710) *
                C92212) *
               C92310 +
           (((C52979 + C52980) * C2850 -
             ((C34018 + C34019) * C2709 + (C33793 + C33792) * C2849) +
             (C53254 + C53253) * C2710) *
                C92323 +
            ((C31487 * C5774 + C31260 * C6045 + C31488 * C5776 +
              C92186 * C6046) *
                 C2850 -
             ((C53253 + C53254) * C2709 + (C52980 + C52979) * C2849) +
             (C31487 * C5956 + C31260 * C6211 + C31488 * C5960 +
              C92186 * C6212) *
                 C2710) *
                C92212) *
               C92067) *
              C1986) *
         C92078) /
        (p * q * std::sqrt(p + q));
    d2eezx[41] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C20274 * C107 + C92323 * C555 + C20275 * C1389 +
               C92212 * C1788) *
                  C801 +
              (C20274 * C117 + C92323 * C561 + C20275 * C1397 +
               C92212 * C1796) *
                  C92078) *
                 C92310 +
             ((C20302 + C20301) * C801 + (C20304 + C20303) * C92078) * C92067) *
                C31260 +
            (((C26314 + C26315) * C801 + (C26316 + C26317) * C92078) * C92310 +
             (C28472 * C801 + C28473 * C92078) * C92067) *
                C92186) *
               C2709 -
           ((((C29679 + C29678) * C92078 + (C29677 + C29676) * C801) * C92067 +
             ((C30908 + C30909) * C92078 + (C30910 + C30911) * C801) * C92310) *
                C92186 +
            (((C23613 + C23612) * C92078 + (C23611 + C23610) * C801) * C92067 +
             ((C20275 * C1406 + C92212 * C1797 + C20274 * C1397 +
               C92323 * C1796) *
                  C92078 +
              (C20275 * C1390 + C92212 * C1789 + C20274 * C1389 +
               C92323 * C1788) *
                  C801) *
                 C92310) *
                C31260) *
               C2710) *
              C1985 +
          (((((C30911 + C30910) * C801 + (C30909 + C30908) * C92078) * C92310 +
             ((C29676 + C29677) * C801 + (C29678 + C29679) * C92078) * C92067) *
                C31260 +
            (((C20274 * C5772 + C92323 * C6288 + C20275 * C5775 +
               C92212 * C6291) *
                  C801 +
              (C20274 * C5778 + C92323 * C6294 + C20275 * C5787 +
               C92212 * C6297) *
                  C92078) *
                 C92310 +
             ((C20274 * C5771 + C92323 * C6287 + C20275 * C5776 +
               C92212 * C6292) *
                  C801 +
              (C20274 * C5777 + C92323 * C6293 + C20275 * C5788 +
               C92212 * C6298) *
                  C92078) *
                 C92067) *
                C92186) *
               C2710 -
           ((((C26318 + C26319) * C92078 + (C26320 + C26321) * C801) * C92067 +
             ((C26322 + C26323) * C92078 + (C26324 + C26325) * C801) * C92310) *
                C92186 +
            ((C28471 * C92078 + C28470 * C801) * C92067 +
             ((C26317 + C26316) * C92078 + (C26315 + C26314) * C801) * C92310) *
                C31260) *
               C2709) *
              C1986)) /
        (p * q * std::sqrt(p + q));
    d2eezy[41] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C20274 * C107 + C92323 * C555 + C20275 * C1389 + C92212 * C1788) *
                 C2059 +
             (C20274 * C182 + C92323 * C641 + C20275 * C1471 + C92212 * C1854) *
                 C1985 -
             (C26315 + C26314) * C2060 - (C26436 + C26437) * C1986) *
                C92310 +
            ((C20302 + C20301) * C2059 + (C20402 + C20403) * C1985 -
             C28470 * C2060 - C28604 * C1986) *
                C92067) *
               C31260 +
           (((C26314 + C26315) * C2059 + (C26437 + C26436) * C1985 -
             (C26324 + C26325) * C2060 - (C26439 + C26438) * C1986) *
                C92310 +
            (C28472 * C2059 + C28605 * C1985 - (C26320 + C26321) * C2060 -
             (C26441 + C26440) * C1986) *
                C92067) *
               C92186) *
              C92078 * C2709 +
          ((((C30911 + C30910) * C2060 -
             ((C20275 * C1472 + C92212 * C1855 + C20274 * C1471 +
               C92323 * C1854) *
                  C1985 +
              (C20275 * C1390 + C92212 * C1789 + C20274 * C1389 +
               C92323 * C1788) *
                  C2059) +
             (C31046 + C31047) * C1986) *
                C92310 +
            ((C29676 + C29677) * C2060 -
             ((C23725 + C23724) * C1985 + (C23611 + C23610) * C2059) +
             (C29814 + C29815) * C1986) *
                C92067) *
               C31260 +
           (((C20274 * C5772 + C92323 * C6288 + C20275 * C5775 +
              C92212 * C6291) *
                 C2060 -
             ((C31047 + C31046) * C1985 + (C30910 + C30911) * C2059) +
             (C20274 * C5870 + C92323 * C6374 + C20275 * C5873 +
              C92212 * C6377) *
                 C1986) *
                C92310 +
            ((C20274 * C5771 + C92323 * C6287 + C20275 * C5776 +
              C92212 * C6292) *
                 C2060 -
             ((C29815 + C29814) * C1985 + (C29677 + C29676) * C2059) +
             (C20274 * C5869 + C92323 * C6373 + C20275 * C5874 +
              C92212 * C6378) *
                 C1986) *
                C92067) *
               C92186) *
              C92078 * C2710)) /
        (p * q * std::sqrt(p + q));
    d2eezz[41] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C20274 * C107 + C92323 * C555 + C20275 * C1389 + C92212 * C1788) *
                 C2849 +
             (C20274 * C245 + C92323 * C719 + C20275 * C1540 + C92212 * C1909) *
                 C2709 -
             (C20275 * C1390 + C92212 * C1789 + C20274 * C1389 +
              C92323 * C1788) *
                 C2850 -
             (C20275 * C1541 + C92212 * C1910 + C20274 * C1540 +
              C92323 * C1909) *
                 C2710) *
                C92310 +
            ((C20302 + C20301) * C2849 + (C20498 + C20499) * C2709 -
             (C23611 + C23610) * C2850 - (C23834 + C23835) * C2710) *
                C92067) *
               C31260 +
           (((C26314 + C26315) * C2849 + (C26552 + C26553) * C2709 -
             (C30910 + C30911) * C2850 - (C31182 + C31183) * C2710) *
                C92310 +
            (C28472 * C2849 + C28737 * C2709 - (C29677 + C29676) * C2850 -
             (C29950 + C29951) * C2710) *
                C92067) *
               C92186) *
              C1985 +
          ((((C30911 + C30910) * C2850 -
             ((C26553 + C26552) * C2709 + (C26315 + C26314) * C2849) +
             (C31183 + C31182) * C2710) *
                C92310 +
            ((C29676 + C29677) * C2850 - (C28738 * C2709 + C28470 * C2849) +
             (C29951 + C29950) * C2710) *
                C92067) *
               C31260 +
           (((C20274 * C5772 + C92323 * C6288 + C20275 * C5775 +
              C92212 * C6291) *
                 C2850 -
             ((C26556 + C26557) * C2709 + (C26324 + C26325) * C2849) +
             (C20274 * C5958 + C92323 * C6455 + C20275 * C5959 +
              C92212 * C6456) *
                 C2710) *
                C92310 +
            ((C20274 * C5771 + C92323 * C6287 + C20275 * C5776 +
              C92212 * C6292) *
                 C2850 -
             ((C26554 + C26555) * C2709 + (C26320 + C26321) * C2849) +
             (C20274 * C5957 + C92323 * C6457 + C20275 * C5960 +
              C92212 * C6458) *
                 C2710) *
                C92067) *
               C92186) *
              C1986) *
         C92078) /
        (p * q * std::sqrt(p + q));
    d2eexx[42] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C89875 * C107 + C92310 * C113 + C89868 * C108 + C92067 * C114) *
                 C801 +
             (C89875 * C117 + C92310 * C125 + C89868 * C118 + C92067 * C126) *
                 C92078) *
                C31260 +
            ((C45573 + C45574) * C801 + (C45575 + C45576) * C92078) * C92186) *
               C92323 +
           (((C89875 * C1389 + C92310 * C1401 + C89868 * C1388 +
              C92067 * C1400) *
                 C801 +
             (C89875 * C1397 + C92310 * C1413 + C89868 * C1396 +
              C92067 * C1412) *
                 C92078) *
                C31260 +
            ((C48900 + C48899) * C801 + (C48898 + C48897) * C92078) * C92186) *
               C92212) *
              C92110 * C798 -
          ((((C48893 + C48894) * C92078 + (C48895 + C48896) * C801) * C92186 +
            ((C48897 + C48898) * C92078 + (C48899 + C48900) * C801) * C31260) *
               C92212 +
           (((C45580 + C45579) * C92078 + (C45578 + C45577) * C801) * C92186 +
            ((C45576 + C45575) * C92078 + (C45574 + C45573) * C801) * C31260) *
               C92323) *
              C92110 * C799 +
          ((C45589 * C31260 +
            ((C45584 + C45583) * C801 + (C45582 + C45581) * C92078) * C92186) *
               C92323 +
           (((C48896 + C48895) * C801 + (C48894 + C48893) * C92078) * C31260 +
            ((C89875 * C8536 + C92310 * C8538 + C89868 * C8537 +
              C92067 * C8539) *
                 C801 +
             (C89875 * C8540 + C92310 * C8542 + C89868 * C8541 +
              C92067 * C8543) *
                 C92078) *
                C92186) *
               C92212) *
              C92110 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C89875 * C107 + C92310 * C113 + C89868 * C108 + C92067 * C114) *
                C104 +
            (C89875 * C117 + C92310 * C125 + C89868 * C118 + C92067 * C126) *
                C93 -
            (C89868 * C109 + C92067 * C115 + C89875 * C108 + C92310 * C114) *
                C105 -
            (C89868 * C119 + C92067 * C127 + C89875 * C118 + C92310 * C126) *
                C94 +
            (C89875 * C109 + C92310 * C115 + C89868 * C110 + C92067 * C116) *
                C106 +
            (C89875 * C119 + C92310 * C127 + C89868 * C120 + C92067 * C128) *
                C95) *
               C31260 +
           ((C45573 + C45574) * C104 + (C45575 + C45576) * C93 -
            (C47009 + C47010) * C105 - (C47011 + C47012) * C94 +
            (C89875 * C803 + C92310 * C815 + C89868 * C802 + C92067 * C814) *
                C106 +
            (C89875 * C811 + C92310 * C827 + C89868 * C810 + C92067 * C826) *
                C95) *
               C92186) *
              C92323 +
          (((C89875 * C1389 + C92310 * C1401 + C89868 * C1388 +
             C92067 * C1400) *
                C104 +
            (C89875 * C1397 + C92310 * C1413 + C89868 * C1396 +
             C92067 * C1412) *
                C93 -
            (C89868 * C1387 + C92067 * C1399 + C89875 * C1388 +
             C92310 * C1400) *
                C105 -
            (C89868 * C1395 + C92067 * C1411 + C89875 * C1396 +
             C92310 * C1412) *
                C94 +
            (C89875 * C1387 + C92310 * C1399 + C89868 * C1386 +
             C92067 * C1398) *
                C106 +
            (C89875 * C1395 + C92310 * C1411 + C89868 * C1394 +
             C92067 * C1410) *
                C95) *
               C31260 +
           ((C48900 + C48899) * C104 + (C48898 + C48897) * C93 -
            (C89868 * C3433 + C92067 * C3437 + C89875 * C3432 +
             C92310 * C3436) *
                C105 -
            (C89868 * C3441 + C92067 * C3445 + C89875 * C3440 +
             C92310 * C3444) *
                C94 +
            (C89875 * C3433 + C92310 * C3437 + C89868 * C3434 +
             C92067 * C3438) *
                C106 +
            (C89875 * C3441 + C92310 * C3445 + C89868 * C3442 +
             C92067 * C3446) *
                C95) *
               C92186) *
              C92212) *
         C92110 * C92099) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C89875 * C107 + C92310 * C113 + C89868 * C108 + C92067 * C114) *
                 C801 +
             (C89875 * C117 + C92310 * C125 + C89868 * C118 + C92067 * C126) *
                 C92078) *
                C31260 +
            ((C45573 + C45574) * C801 + (C45575 + C45576) * C92078) * C92186) *
               C92323 +
           (((C51595 + C51596) * C801 + (C51597 + C51598) * C92078) * C31260 +
            ((C48900 + C48899) * C801 + (C48898 + C48897) * C92078) * C92186) *
               C92212) *
              C1383 -
          ((((C51599 + C51600) * C92078 + (C51601 + C51602) * C801) * C92186 +
            ((C51603 + C51604) * C92078 + (C51605 + C51606) * C801) * C31260) *
               C92212 +
           (((C48897 + C48898) * C92078 + (C48899 + C48900) * C801) * C92186 +
            ((C51598 + C51597) * C92078 + (C51596 + C51595) * C801) * C31260) *
               C92323) *
              C1384 +
          ((((C51606 + C51605) * C801 + (C51604 + C51603) * C92078) * C31260 +
            ((C51602 + C51601) * C801 + (C51600 + C51599) * C92078) * C92186) *
               C92323 +
           (((C89875 * C10961 + C92310 * C10967 + C89868 * C10960 +
              C92067 * C10966) *
                 C801 +
             (C89875 * C10965 + C92310 * C10973 + C89868 * C10964 +
              C92067 * C10972) *
                 C92078) *
                C31260 +
            ((C89875 * C13849 + C92310 * C13851 + C89868 * C13850 +
              C92067 * C13852) *
                 C801 +
             (C89875 * C13853 + C92310 * C13855 + C89868 * C13854 +
              C92067 * C13856) *
                 C92078) *
                C92186) *
               C92212) *
              C1385) *
         C92099) /
            (p * q * std::sqrt(p + q));
    d2eexy[42] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C89875 * C107 + C92310 * C113 + C89868 * C108 + C92067 * C114) *
                C884 +
            (C89875 * C182 + C92310 * C188 + C89868 * C183 + C92067 * C189) *
                C798 -
            (C45574 + C45573) * C885 - (C45676 + C45677) * C799 +
            C45585 * C886 + C45682 * C800) *
               C31260 +
           ((C45573 + C45574) * C884 + (C45677 + C45676) * C798 -
            (C45578 + C45577) * C885 - (C45679 + C45678) * C799 +
            (C45584 + C45583) * C886 + (C45680 + C45681) * C800) *
               C92186) *
              C92323 +
          (((C89875 * C1389 + C92310 * C1401 + C89868 * C1388 +
             C92067 * C1400) *
                C884 +
            (C89875 * C1471 + C92310 * C1479 + C89868 * C1470 +
             C92067 * C1478) *
                C798 -
            (C48899 + C48900) * C885 - (C49008 + C49007) * C799 +
            (C48896 + C48895) * C886 + (C49009 + C49010) * C800) *
               C31260 +
           ((C48900 + C48899) * C884 + (C49007 + C49008) * C798 -
            (C48895 + C48896) * C885 - (C49010 + C49009) * C799 +
            (C89875 * C8536 + C92310 * C8538 + C89868 * C8537 +
             C92067 * C8539) *
                C886 +
            (C89875 * C8666 + C92310 * C8668 + C89868 * C8667 +
             C92067 * C8669) *
                C800) *
               C92186) *
              C92212) *
         C92078 * C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C89875 * C107 + C92310 * C113 + C89868 * C108 + C92067 * C114) *
                 C181 +
             (C89875 * C182 + C92310 * C188 + C89868 * C183 + C92067 * C189) *
                 C92099) *
                C31260 +
            ((C45573 + C45574) * C181 + (C45677 + C45676) * C92099) * C92186) *
               C92323 +
           (((C89875 * C1389 + C92310 * C1401 + C89868 * C1388 +
              C92067 * C1400) *
                 C181 +
             (C89875 * C1471 + C92310 * C1479 + C89868 * C1470 +
              C92067 * C1478) *
                 C92099) *
                C31260 +
            ((C48900 + C48899) * C181 + (C49007 + C49008) * C92099) * C92186) *
               C92212) *
              C93 -
          ((((C89868 * C3515 + C92067 * C3519 + C89875 * C3514 +
              C92310 * C3518) *
                 C92099 +
             (C89868 * C3433 + C92067 * C3437 + C89875 * C3432 +
              C92310 * C3436) *
                 C181) *
                C92186 +
            ((C89868 * C1469 + C92067 * C1477 + C89875 * C1470 +
              C92310 * C1478) *
                 C92099 +
             (C89868 * C1387 + C92067 * C1399 + C89875 * C1388 +
              C92310 * C1400) *
                 C181) *
                C31260) *
               C92212 +
           (((C47124 + C47123) * C92099 + (C47009 + C47010) * C181) * C92186 +
            ((C89868 * C184 + C92067 * C190 + C89875 * C183 + C92310 * C189) *
                 C92099 +
             (C89868 * C109 + C92067 * C115 + C89875 * C108 + C92310 * C114) *
                 C181) *
                C31260) *
               C92323) *
              C94 +
          ((((C89875 * C109 + C92310 * C115 + C89868 * C110 + C92067 * C116) *
                 C181 +
             (C89875 * C184 + C92310 * C190 + C89868 * C185 + C92067 * C191) *
                 C92099) *
                C31260 +
            ((C89875 * C803 + C92310 * C815 + C89868 * C802 + C92067 * C814) *
                 C181 +
             (C89875 * C888 + C92310 * C896 + C89868 * C887 + C92067 * C895) *
                 C92099) *
                C92186) *
               C92323 +
           (((C89875 * C1387 + C92310 * C1399 + C89868 * C1386 +
              C92067 * C1398) *
                 C181 +
             (C89875 * C1469 + C92310 * C1477 + C89868 * C1468 +
              C92067 * C1476) *
                 C92099) *
                C31260 +
            ((C89875 * C3433 + C92310 * C3437 + C89868 * C3434 +
              C92067 * C3438) *
                 C181 +
             (C89875 * C3515 + C92310 * C3519 + C89868 * C3516 +
              C92067 * C3520) *
                 C92099) *
                C92186) *
               C92212) *
              C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C89875 * C107 + C92310 * C113 + C89868 * C108 + C92067 * C114) *
                 C181 +
             (C89875 * C182 + C92310 * C188 + C89868 * C183 + C92067 * C189) *
                 C92099) *
                C31260 +
            ((C45573 + C45574) * C181 + (C45677 + C45676) * C92099) * C92186) *
               C92323 +
           (((C51595 + C51596) * C181 + (C51717 + C51718) * C92099) * C31260 +
            ((C48900 + C48899) * C181 + (C49007 + C49008) * C92099) * C92186) *
               C92212) *
              C92078 * C1383 -
          ((((C51719 + C51720) * C92099 + (C51601 + C51602) * C181) * C92186 +
            ((C51721 + C51722) * C92099 + (C51605 + C51606) * C181) * C31260) *
               C92212 +
           (((C49008 + C49007) * C92099 + (C48899 + C48900) * C181) * C92186 +
            ((C51718 + C51717) * C92099 + (C51596 + C51595) * C181) * C31260) *
               C92323) *
              C92078 * C1384 +
          ((((C51606 + C51605) * C181 + (C51722 + C51721) * C92099) * C31260 +
            ((C51602 + C51601) * C181 + (C51720 + C51719) * C92099) * C92186) *
               C92323 +
           (((C89875 * C10961 + C92310 * C10967 + C89868 * C10960 +
              C92067 * C10966) *
                 C181 +
             (C89875 * C11093 + C92310 * C11097 + C89868 * C11092 +
              C92067 * C11096) *
                 C92099) *
                C31260 +
            ((C89875 * C13849 + C92310 * C13851 + C89868 * C13850 +
              C92067 * C13852) *
                 C181 +
             (C89875 * C13967 + C92310 * C13969 + C89868 * C13968 +
              C92067 * C13970) *
                 C92099) *
                C92186) *
               C92212) *
              C92078 * C1385)) /
            (p * q * std::sqrt(p + q));
    d2eexz[42] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C89875 * C107 + C92310 * C113 + C89868 * C108 + C92067 * C114) *
                 C244 +
             (C89875 * C245 + C92310 * C251 + C89868 * C246 + C92067 * C252) *
                 C92110) *
                C31260 +
            ((C45573 + C45574) * C244 + (C45770 + C45771) * C92110) * C92186) *
               C92323 +
           (((C89875 * C1389 + C92310 * C1401 + C89868 * C1388 +
              C92067 * C1400) *
                 C244 +
             (C89875 * C1540 + C92310 * C1548 + C89868 * C1539 +
              C92067 * C1547) *
                 C92110) *
                C31260 +
            ((C48900 + C48899) * C244 + (C49118 + C49117) * C92110) * C92186) *
               C92212) *
              C798 -
          ((((C49119 + C49120) * C92110 + (C48895 + C48896) * C244) * C92186 +
            ((C49117 + C49118) * C92110 + (C48899 + C48900) * C244) * C31260) *
               C92212 +
           (((C45773 + C45772) * C92110 + (C45578 + C45577) * C244) * C92186 +
            ((C45771 + C45770) * C92110 + (C45574 + C45573) * C244) * C31260) *
               C92323) *
              C799 +
          ((C45778 * C31260 +
            ((C45584 + C45583) * C244 + (C45775 + C45774) * C92110) * C92186) *
               C92323 +
           (((C48896 + C48895) * C244 + (C49120 + C49119) * C92110) * C31260 +
            ((C89875 * C8536 + C92310 * C8538 + C89868 * C8537 +
              C92067 * C8539) *
                 C244 +
             (C89875 * C8780 + C92310 * C8782 + C89868 * C8781 +
              C92067 * C8783) *
                 C92110) *
                C92186) *
               C92212) *
              C800) *
         C92078) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C89875 * C107 + C92310 * C113 + C89868 * C108 + C92067 * C114) *
                 C244 +
             (C89875 * C245 + C92310 * C251 + C89868 * C246 + C92067 * C252) *
                 C92110) *
                C31260 +
            ((C45573 + C45574) * C244 + (C45770 + C45771) * C92110) * C92186) *
               C92323 +
           (((C89875 * C1389 + C92310 * C1401 + C89868 * C1388 +
              C92067 * C1400) *
                 C244 +
             (C89875 * C1540 + C92310 * C1548 + C89868 * C1539 +
              C92067 * C1547) *
                 C92110) *
                C31260 +
            ((C48900 + C48899) * C244 + (C49118 + C49117) * C92110) * C92186) *
               C92212) *
              C92099 * C93 -
          ((((C89868 * C3589 + C92067 * C3593 + C89875 * C3588 +
              C92310 * C3592) *
                 C92110 +
             (C89868 * C3433 + C92067 * C3437 + C89875 * C3432 +
              C92310 * C3436) *
                 C244) *
                C92186 +
            ((C89868 * C1538 + C92067 * C1546 + C89875 * C1539 +
              C92310 * C1547) *
                 C92110 +
             (C89868 * C1387 + C92067 * C1399 + C89875 * C1388 +
              C92310 * C1400) *
                 C244) *
                C31260) *
               C92212 +
           (((C47234 + C47233) * C92110 + (C47009 + C47010) * C244) * C92186 +
            ((C89868 * C247 + C92067 * C253 + C89875 * C246 + C92310 * C252) *
                 C92110 +
             (C89868 * C109 + C92067 * C115 + C89875 * C108 + C92310 * C114) *
                 C244) *
                C31260) *
               C92323) *
              C92099 * C94 +
          ((((C89875 * C109 + C92310 * C115 + C89868 * C110 + C92067 * C116) *
                 C244 +
             (C89875 * C247 + C92310 * C253 + C89868 * C248 + C92067 * C254) *
                 C92110) *
                C31260 +
            ((C89875 * C803 + C92310 * C815 + C89868 * C802 + C92067 * C814) *
                 C244 +
             (C89875 * C954 + C92310 * C962 + C89868 * C953 + C92067 * C961) *
                 C92110) *
                C92186) *
               C92323 +
           (((C89875 * C1387 + C92310 * C1399 + C89868 * C1386 +
              C92067 * C1398) *
                 C244 +
             (C89875 * C1538 + C92310 * C1546 + C89868 * C1537 +
              C92067 * C1545) *
                 C92110) *
                C31260 +
            ((C89875 * C3433 + C92310 * C3437 + C89868 * C3434 +
              C92067 * C3438) *
                 C244 +
             (C89875 * C3589 + C92310 * C3593 + C89868 * C3590 +
              C92067 * C3594) *
                 C92110) *
                C92186) *
               C92212) *
              C92099 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C89875 * C107 + C92310 * C113 + C89868 * C108 + C92067 * C114) *
                C1534 +
            (C89875 * C245 + C92310 * C251 + C89868 * C246 + C92067 * C252) *
                C1383 -
            (C51596 + C51595) * C1535 - (C51833 + C51834) * C1384 +
            (C51606 + C51605) * C1536 + (C51835 + C51836) * C1385) *
               C31260 +
           ((C45573 + C45574) * C1534 + (C45770 + C45771) * C1383 -
            (C48899 + C48900) * C1535 - (C49117 + C49118) * C1384 +
            (C51602 + C51601) * C1536 + (C51837 + C51838) * C1385) *
               C92186) *
              C92323 +
          (((C51595 + C51596) * C1534 + (C51834 + C51833) * C1383 -
            (C51605 + C51606) * C1535 - (C51836 + C51835) * C1384 +
            (C89875 * C10961 + C92310 * C10967 + C89868 * C10960 +
             C92067 * C10966) *
                C1536 +
            (C89875 * C11197 + C92310 * C11201 + C89868 * C11198 +
             C92067 * C11202) *
                C1385) *
               C31260 +
           ((C48900 + C48899) * C1534 + (C49118 + C49117) * C1383 -
            (C51601 + C51602) * C1535 - (C51838 + C51837) * C1384 +
            (C89875 * C13849 + C92310 * C13851 + C89868 * C13850 +
             C92067 * C13852) *
                C1536 +
            (C89875 * C14075 + C92310 * C14077 + C89868 * C14076 +
             C92067 * C14078) *
                C1385) *
               C92186) *
              C92212) *
         C92099 * C92078) /
            (p * q * std::sqrt(p + q));
    d2eeyx[42] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31487 * C107 + C31260 * C308 + C31488 * C805 + C92186 * C1022) *
                 C801 +
             (C31487 * C117 + C31260 * C314 + C31488 * C813 + C92186 * C1030) *
                 C92078) *
                C92323 +
            ((C41420 + C41421) * C801 + (C41422 + C41423) * C92078) * C92212) *
               C92310 +
           (((C31515 + C31514) * C801 + (C31517 + C31516) * C92078) * C92323 +
            ((C34722 + C34723) * C801 + (C34724 + C34725) * C92078) * C92212) *
               C92067) *
              C92110 * C798 -
          ((((C31488 * C5777 + C92186 * C6047 + C31487 * C3440 +
              C31260 * C3666) *
                 C92078 +
             (C31488 * C5771 + C92186 * C6041 + C31487 * C3432 +
              C31260 * C3662) *
                 C801) *
                C92212 +
            ((C33795 + C33794) * C92078 + (C33793 + C33792) * C801) * C92323) *
               C92067 +
           (((C44166 + C44165) * C92078 + (C44164 + C44163) * C801) * C92212 +
            ((C31488 * C822 + C92186 * C1031 + C31487 * C813 + C31260 * C1030) *
                 C92078 +
             (C31488 * C806 + C92186 * C1023 + C31487 * C805 + C31260 * C1022) *
                 C801) *
                C92323) *
               C92310) *
              C92110 * C799 +
          ((((C31487 * C806 + C31260 * C1023 + C31488 * C4882 +
              C92186 * C5218) *
                 C801 +
             (C31487 * C822 + C31260 * C1031 + C31488 * C4886 +
              C92186 * C5222) *
                 C92078) *
                C92323 +
            ((C31487 * C5772 + C31260 * C6042 + C31488 * C8536 +
              C92186 * C8894) *
                 C801 +
             (C31487 * C5778 + C31260 * C6048 + C31488 * C8540 +
              C92186 * C8896) *
                 C92078) *
                C92212) *
               C92310 +
           (((C31487 * C807 + C31260 * C1024 + C31488 * C4881 +
              C92186 * C5217) *
                 C801 +
             (C31487 * C823 + C31260 * C1032 + C31488 * C4885 +
              C92186 * C5221) *
                 C92078) *
                C92323 +
            ((C31487 * C5771 + C31260 * C6041 + C31488 * C8537 +
              C92186 * C8895) *
                 C801 +
             (C31487 * C5777 + C31260 * C6047 + C31488 * C8541 +
              C92186 * C8897) *
                 C92078) *
                C92212) *
               C92067) *
              C92110 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31487 * C107 + C31260 * C308 + C31488 * C805 + C92186 * C1022) *
                C104 +
            (C31487 * C117 + C31260 * C314 + C31488 * C813 + C92186 * C1030) *
                C93 -
            (C31514 + C31515) * C105 - (C31516 + C31517) * C94 + C31526 * C106 +
            C31527 * C95) *
               C92323 +
           ((C41420 + C41421) * C104 + (C41422 + C41423) * C93 -
            (C34723 + C34722) * C105 - (C34725 + C34724) * C94 +
            (C34726 + C34727) * C106 + (C34728 + C34729) * C95) *
               C92212) *
              C92310 +
          (((C31515 + C31514) * C104 + (C31517 + C31516) * C93 -
            (C31519 + C31518) * C105 - (C31521 + C31520) * C94 +
            (C31522 + C31523) * C106 + (C31524 + C31525) * C95) *
               C92323 +
           ((C34722 + C34723) * C104 + (C34724 + C34725) * C93 -
            (C34727 + C34726) * C105 - (C34729 + C34728) * C94 +
            (C31487 * C1386 + C31260 * C1603 + C31488 * C3434 +
             C92186 * C3664) *
                C106 +
            (C31487 * C1394 + C31260 * C1611 + C31488 * C3442 +
             C92186 * C3668) *
                C95) *
               C92212) *
              C92067) *
         C92110 * C92099) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C31487 * C107 + C31260 * C308 + C31488 * C805 + C92186 * C1022) *
                 C801 +
             (C31487 * C117 + C31260 * C314 + C31488 * C813 + C92186 * C1030) *
                 C92078) *
                C92323 +
            ((C41420 + C41421) * C801 + (C41422 + C41423) * C92078) * C92212) *
               C92310 +
           (((C31515 + C31514) * C801 + (C31517 + C31516) * C92078) * C92323 +
            ((C34722 + C34723) * C801 + (C34724 + C34725) * C92078) * C92212) *
               C92067) *
              C1383 -
          ((((C43214 + C43215) * C92078 + (C43212 + C43213) * C801) * C92212 +
            ((C34725 + C34724) * C92078 + (C34723 + C34722) * C801) * C92323) *
               C92067 +
           (((C41427 + C41426) * C92078 + (C41425 + C41424) * C801) * C92212 +
            ((C41423 + C41422) * C92078 + (C41421 + C41420) * C801) * C92323) *
               C92310) *
              C1384 +
          ((C41436 * C92323 +
            ((C41431 + C41430) * C801 + (C41429 + C41428) * C92078) * C92212) *
               C92310 +
           (((C43213 + C43212) * C801 + (C43215 + C43214) * C92078) * C92323 +
            ((C31487 * C10960 + C31260 * C11298 + C31488 * C13850 +
              C92186 * C14184) *
                 C801 +
             (C31487 * C10964 + C31260 * C11302 + C31488 * C13854 +
              C92186 * C14186) *
                 C92078) *
                C92212) *
               C92067) *
              C1385) *
         C92099) /
            (p * q * std::sqrt(p + q));
    d2eeyy[42] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31487 * C107 + C31260 * C308 + C31488 * C805 + C92186 * C1022) *
                C884 +
            (C31487 * C182 + C31260 * C394 + C31488 * C890 + C92186 * C1085) *
                C798 -
            (C31488 * C806 + C92186 * C1023 + C31487 * C805 + C31260 * C1022) *
                C885 -
            (C31488 * C891 + C92186 * C1086 + C31487 * C890 + C31260 * C1085) *
                C799 +
            (C31487 * C806 + C31260 * C1023 + C31488 * C4882 + C92186 * C5218) *
                C886 +
            (C31487 * C891 + C31260 * C1086 + C31488 * C5012 + C92186 * C5299) *
                C800) *
               C92323 +
           ((C41420 + C41421) * C884 + (C41525 + C41526) * C798 -
            (C44164 + C44163) * C885 - (C44278 + C44279) * C799 +
            (C31487 * C5772 + C31260 * C6042 + C31488 * C8536 +
             C92186 * C8894) *
                C886 +
            (C31487 * C5870 + C31260 * C6128 + C31488 * C8666 +
             C92186 * C8996) *
                C800) *
               C92212) *
              C92310 +
          (((C31515 + C31514) * C884 + (C31615 + C31616) * C798 -
            (C33793 + C33792) * C885 - (C33906 + C33907) * C799 +
            (C31487 * C807 + C31260 * C1024 + C31488 * C4881 + C92186 * C5217) *
                C886 +
            (C31487 * C892 + C31260 * C1088 + C31488 * C5013 + C92186 * C5301) *
                C800) *
               C92323 +
           ((C34722 + C34723) * C884 + (C34836 + C34837) * C798 -
            (C31488 * C5771 + C92186 * C6041 + C31487 * C3432 +
             C31260 * C3662) *
                C885 -
            (C31488 * C5869 + C92186 * C6127 + C31487 * C3514 +
             C31260 * C3736) *
                C799 +
            (C31487 * C5771 + C31260 * C6041 + C31488 * C8537 +
             C92186 * C8895) *
                C886 +
            (C31487 * C5869 + C31260 * C6127 + C31488 * C8667 +
             C92186 * C8997) *
                C800) *
               C92212) *
              C92067) *
         C92078 * C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31487 * C107 + C31260 * C308 + C31488 * C805 + C92186 * C1022) *
                 C181 +
             (C31487 * C182 + C31260 * C394 + C31488 * C890 + C92186 * C1085) *
                 C92099) *
                C92323 +
            ((C41420 + C41421) * C181 + (C41525 + C41526) * C92099) * C92212) *
               C92310 +
           (((C31515 + C31514) * C181 + (C31615 + C31616) * C92099) * C92323 +
            ((C34722 + C34723) * C181 + (C34836 + C34837) * C92099) * C92212) *
               C92067) *
              C93 -
          ((((C34839 + C34838) * C92099 + (C34727 + C34726) * C181) * C92212 +
            ((C31618 + C31617) * C92099 + (C31519 + C31518) * C181) * C92323) *
               C92067 +
           (((C34837 + C34836) * C92099 + (C34723 + C34722) * C181) * C92212 +
            ((C31616 + C31615) * C92099 + (C31514 + C31515) * C181) * C92323) *
               C92310) *
              C94 +
          ((C31623 * C92323 +
            ((C34726 + C34727) * C181 + (C34838 + C34839) * C92099) * C92212) *
               C92310 +
           (((C31522 + C31523) * C181 + (C31620 + C31619) * C92099) * C92323 +
            ((C31487 * C1386 + C31260 * C1603 + C31488 * C3434 +
              C92186 * C3664) *
                 C181 +
             (C31487 * C1468 + C31260 * C1669 + C31488 * C3516 +
              C92186 * C3738) *
                 C92099) *
                C92212) *
               C92067) *
              C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C31487 * C107 + C31260 * C308 + C31488 * C805 + C92186 * C1022) *
                 C181 +
             (C31487 * C182 + C31260 * C394 + C31488 * C890 + C92186 * C1085) *
                 C92099) *
                C92323 +
            ((C41420 + C41421) * C181 + (C41525 + C41526) * C92099) * C92212) *
               C92310 +
           (((C31515 + C31514) * C181 + (C31615 + C31616) * C92099) * C92323 +
            ((C34722 + C34723) * C181 + (C34836 + C34837) * C92099) * C92212) *
               C92067) *
              C92078 * C1383 -
          ((((C43318 + C43319) * C92099 + (C43212 + C43213) * C181) * C92212 +
            ((C34837 + C34836) * C92099 + (C34723 + C34722) * C181) * C92323) *
               C92067 +
           (((C41528 + C41527) * C92099 + (C41425 + C41424) * C181) * C92212 +
            ((C41526 + C41525) * C92099 + (C41421 + C41420) * C181) * C92323) *
               C92310) *
              C92078 * C1384 +
          ((C41533 * C92323 +
            ((C41431 + C41430) * C181 + (C41530 + C41529) * C92099) * C92212) *
               C92310 +
           (((C43213 + C43212) * C181 + (C43319 + C43318) * C92099) * C92323 +
            ((C31487 * C10960 + C31260 * C11298 + C31488 * C13850 +
              C92186 * C14184) *
                 C181 +
             (C31487 * C11092 + C31260 * C11418 + C31488 * C13968 +
              C92186 * C14306) *
                 C92099) *
                C92212) *
               C92067) *
              C92078 * C1385)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[42] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31487 * C107 + C31260 * C308 + C31488 * C805 + C92186 * C1022) *
                 C244 +
             (C31487 * C245 + C31260 * C474 + C31488 * C956 + C92186 * C1146) *
                 C92110) *
                C92323 +
            ((C41420 + C41421) * C244 + (C41622 + C41621) * C92110) * C92212) *
               C92310 +
           (((C31515 + C31514) * C244 + (C31712 + C31713) * C92110) * C92323 +
            ((C34722 + C34723) * C244 + (C34947 + C34946) * C92110) * C92212) *
               C92067) *
              C798 -
          ((((C31488 * C5957 + C92186 * C6210 + C31487 * C3588 +
              C31260 * C3806) *
                 C92110 +
             (C31488 * C5771 + C92186 * C6041 + C31487 * C3432 +
              C31260 * C3662) *
                 C244) *
                C92212 +
            ((C34018 + C34019) * C92110 + (C33793 + C33792) * C244) * C92323) *
               C92067 +
           (((C44390 + C44389) * C92110 + (C44164 + C44163) * C244) * C92212 +
            ((C31488 * C957 + C92186 * C1147 + C31487 * C956 + C31260 * C1146) *
                 C92110 +
             (C31488 * C806 + C92186 * C1023 + C31487 * C805 + C31260 * C1022) *
                 C244) *
                C92323) *
               C92310) *
              C799 +
          ((((C31487 * C806 + C31260 * C1023 + C31488 * C4882 +
              C92186 * C5218) *
                 C244 +
             (C31487 * C957 + C31260 * C1147 + C31488 * C5114 +
              C92186 * C5378) *
                 C92110) *
                C92323 +
            ((C31487 * C5772 + C31260 * C6042 + C31488 * C8536 +
              C92186 * C8894) *
                 C244 +
             (C31487 * C5958 + C31260 * C6207 + C31488 * C8780 +
              C92186 * C9096) *
                 C92110) *
                C92212) *
               C92310 +
           (((C31487 * C807 + C31260 * C1024 + C31488 * C4881 +
              C92186 * C5217) *
                 C244 +
             (C31487 * C958 + C31260 * C1148 + C31488 * C5113 +
              C92186 * C5377) *
                 C92110) *
                C92323 +
            ((C31487 * C5771 + C31260 * C6041 + C31488 * C8537 +
              C92186 * C8895) *
                 C244 +
             (C31487 * C5957 + C31260 * C6210 + C31488 * C8781 +
              C92186 * C9097) *
                 C92110) *
                C92212) *
               C92067) *
              C800) *
         C92078) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31487 * C107 + C31260 * C308 + C31488 * C805 + C92186 * C1022) *
                 C244 +
             (C31487 * C245 + C31260 * C474 + C31488 * C956 + C92186 * C1146) *
                 C92110) *
                C92323 +
            ((C41420 + C41421) * C244 + (C41622 + C41621) * C92110) * C92212) *
               C92310 +
           (((C31515 + C31514) * C244 + (C31712 + C31713) * C92110) * C92323 +
            ((C34722 + C34723) * C244 + (C34947 + C34946) * C92110) * C92212) *
               C92067) *
              C92099 * C93 -
          ((((C34948 + C34949) * C92110 + (C34727 + C34726) * C244) * C92212 +
            ((C31715 + C31714) * C92110 + (C31519 + C31518) * C244) * C92323) *
               C92067 +
           (((C34946 + C34947) * C92110 + (C34723 + C34722) * C244) * C92212 +
            ((C31713 + C31712) * C92110 + (C31514 + C31515) * C244) * C92323) *
               C92310) *
              C92099 * C94 +
          ((C31720 * C92323 +
            ((C34726 + C34727) * C244 + (C34949 + C34948) * C92110) * C92212) *
               C92310 +
           (((C31522 + C31523) * C244 + (C31717 + C31716) * C92110) * C92323 +
            ((C31487 * C1386 + C31260 * C1603 + C31488 * C3434 +
              C92186 * C3664) *
                 C244 +
             (C31487 * C1537 + C31260 * C1733 + C31488 * C3590 +
              C92186 * C3808) *
                 C92110) *
                C92212) *
               C92067) *
              C92099 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C31487 * C107 + C31260 * C308 + C31488 * C805 + C92186 * C1022) *
                C1534 +
            (C31487 * C245 + C31260 * C474 + C31488 * C956 + C92186 * C1146) *
                C1383 -
            (C41421 + C41420) * C1535 - (C41621 + C41622) * C1384 +
            C41432 * C1536 + C41627 * C1385) *
               C92323 +
           ((C41420 + C41421) * C1534 + (C41622 + C41621) * C1383 -
            (C41425 + C41424) * C1535 - (C41624 + C41623) * C1384 +
            (C41431 + C41430) * C1536 + (C41625 + C41626) * C1385) *
               C92212) *
              C92310 +
          (((C31515 + C31514) * C1534 + (C31712 + C31713) * C1383 -
            (C34723 + C34722) * C1535 - (C34946 + C34947) * C1384 +
            (C43213 + C43212) * C1536 + (C43422 + C43423) * C1385) *
               C92323 +
           ((C34722 + C34723) * C1534 + (C34947 + C34946) * C1383 -
            (C43212 + C43213) * C1535 - (C43423 + C43422) * C1384 +
            (C31487 * C10960 + C31260 * C11298 + C31488 * C13850 +
             C92186 * C14184) *
                C1536 +
            (C31487 * C11198 + C31260 * C11520 + C31488 * C14076 +
             C92186 * C14420) *
                C1385) *
               C92212) *
              C92067) *
         C92099 * C92078) /
            (p * q * std::sqrt(p + q));
    d2eezx[42] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C20274 * C107 + C92323 * C555 + C20275 * C1389 + C92212 * C1788) *
                 C801 +
             (C20274 * C117 + C92323 * C561 + C20275 * C1397 + C92212 * C1796) *
                 C92078) *
                C92310 +
            ((C20302 + C20301) * C801 + (C20304 + C20303) * C92078) * C92067) *
               C31260 +
           (((C26314 + C26315) * C801 + (C26316 + C26317) * C92078) * C92310 +
            (C28472 * C801 + C28473 * C92078) * C92067) *
               C92186) *
              C92110 * C798 -
          ((((C26318 + C26319) * C92078 + (C26320 + C26321) * C801) * C92067 +
            ((C26322 + C26323) * C92078 + (C26324 + C26325) * C801) * C92310) *
               C92186 +
           ((C28471 * C92078 + C28470 * C801) * C92067 +
            ((C26317 + C26316) * C92078 + (C26315 + C26314) * C801) * C92310) *
               C31260) *
              C92110 * C799 +
          ((((C26325 + C26324) * C801 + (C26323 + C26322) * C92078) * C92310 +
            ((C26321 + C26320) * C801 + (C26319 + C26318) * C92078) * C92067) *
               C31260 +
           (((C20274 * C4882 + C92323 * C5456 + C20275 * C8536 +
              C92212 * C9196) *
                 C801 +
             (C20274 * C4886 + C92323 * C5460 + C20275 * C8540 +
              C92212 * C9198) *
                 C92078) *
                C92310 +
            ((C20274 * C4881 + C92323 * C5455 + C20275 * C8537 +
              C92212 * C9197) *
                 C801 +
             (C20274 * C4885 + C92323 * C5459 + C20275 * C8541 +
              C92212 * C9199) *
                 C92078) *
                C92067) *
               C92186) *
              C92110 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C20274 * C107 + C92323 * C555 + C20275 * C1389 + C92212 * C1788) *
                C104 +
            (C20274 * C117 + C92323 * C561 + C20275 * C1397 + C92212 * C1796) *
                C93 -
            (C20301 + C20302) * C105 - (C20303 + C20304) * C94 + C20313 * C106 +
            C20314 * C95) *
               C92310 +
           ((C20302 + C20301) * C104 + (C20304 + C20303) * C93 -
            (C20306 + C20305) * C105 - (C20308 + C20307) * C94 +
            (C20309 + C20310) * C106 + (C20311 + C20312) * C95) *
               C92067) *
              C31260 +
          (((C26314 + C26315) * C104 + (C26316 + C26317) * C93 - C28470 * C105 -
            C28471 * C94 + (C22639 + C22640) * C106 + (C22641 + C22642) * C95) *
               C92310 +
           (C28472 * C104 + C28473 * C93 - (C22640 + C22639) * C105 -
            (C22642 + C22641) * C94 +
            (C20274 * C802 + C92323 * C1201 + C20275 * C3434 + C92212 * C3878) *
                C106 +
            (C20274 * C810 + C92323 * C1209 + C20275 * C3442 + C92212 * C3882) *
                C95) *
               C92067) *
              C92186) *
         C92110 * C92099) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C20274 * C107 + C92323 * C555 + C20275 * C1389 + C92212 * C1788) *
                 C801 +
             (C20274 * C117 + C92323 * C561 + C20275 * C1397 + C92212 * C1796) *
                 C92078) *
                C92310 +
            ((C20302 + C20301) * C801 + (C20304 + C20303) * C92078) * C92067) *
               C31260 +
           (((C26314 + C26315) * C801 + (C26316 + C26317) * C92078) * C92310 +
            (C28472 * C801 + C28473 * C92078) * C92067) *
               C92186) *
              C1383 -
          ((((C29679 + C29678) * C92078 + (C29677 + C29676) * C801) * C92067 +
            ((C30908 + C30909) * C92078 + (C30910 + C30911) * C801) * C92310) *
               C92186 +
           (((C23613 + C23612) * C92078 + (C23611 + C23610) * C801) * C92067 +
            ((C20275 * C1406 + C92212 * C1797 + C20274 * C1397 +
              C92323 * C1796) *
                 C92078 +
             (C20275 * C1390 + C92212 * C1789 + C20274 * C1389 +
              C92323 * C1788) *
                 C801) *
                C92310) *
               C31260) *
              C1384 +
          ((((C20274 * C1390 + C92323 * C1789 + C20275 * C10961 +
              C92212 * C11609) *
                 C801 +
             (C20274 * C1406 + C92323 * C1797 + C20275 * C10965 +
              C92212 * C11613) *
                 C92078) *
                C92310 +
            ((C20274 * C1391 + C92323 * C1790 + C20275 * C10960 +
              C92212 * C11608) *
                 C801 +
             (C20274 * C1407 + C92323 * C1798 + C20275 * C10964 +
              C92212 * C11612) *
                 C92078) *
                C92067) *
               C31260 +
           (((C20274 * C5773 + C92323 * C6289 + C20275 * C13849 +
              C92212 * C14525) *
                 C801 +
             (C20274 * C5783 + C92323 * C6295 + C20275 * C13853 +
              C92212 * C14527) *
                 C92078) *
                C92310 +
            ((C20274 * C5774 + C92323 * C6290 + C20275 * C13850 +
              C92212 * C14526) *
                 C801 +
             (C20274 * C5784 + C92323 * C6296 + C20275 * C13854 +
              C92212 * C14528) *
                 C92078) *
                C92067) *
               C92186) *
              C1385) *
         C92099) /
            (p * q * std::sqrt(p + q));
    d2eezy[42] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C20274 * C107 + C92323 * C555 + C20275 * C1389 + C92212 * C1788) *
                C884 +
            (C20274 * C182 + C92323 * C641 + C20275 * C1471 + C92212 * C1854) *
                C798 -
            (C26315 + C26314) * C885 - (C26436 + C26437) * C799 +
            (C26325 + C26324) * C886 + (C26438 + C26439) * C800) *
               C92310 +
           ((C20302 + C20301) * C884 + (C20402 + C20403) * C798 -
            C28470 * C885 - C28604 * C799 + (C26321 + C26320) * C886 +
            (C26440 + C26441) * C800) *
               C92067) *
              C31260 +
          (((C26314 + C26315) * C884 + (C26437 + C26436) * C798 -
            (C26324 + C26325) * C885 - (C26439 + C26438) * C799 +
            (C20274 * C4882 + C92323 * C5456 + C20275 * C8536 +
             C92212 * C9196) *
                C886 +
            (C20274 * C5012 + C92323 * C5578 + C20275 * C8666 +
             C92212 * C9318) *
                C800) *
               C92310 +
           (C28472 * C884 + C28605 * C798 - (C26320 + C26321) * C885 -
            (C26441 + C26440) * C799 +
            (C20274 * C4881 + C92323 * C5455 + C20275 * C8537 +
             C92212 * C9197) *
                C886 +
            (C20274 * C5013 + C92323 * C5579 + C20275 * C8667 +
             C92212 * C9319) *
                C800) *
               C92067) *
              C92186) *
         C92078 * C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C20274 * C107 + C92323 * C555 + C20275 * C1389 + C92212 * C1788) *
                 C181 +
             (C20274 * C182 + C92323 * C641 + C20275 * C1471 + C92212 * C1854) *
                 C92099) *
                C92310 +
            ((C20302 + C20301) * C181 + (C20402 + C20403) * C92099) * C92067) *
               C31260 +
           (((C26314 + C26315) * C181 + (C26437 + C26436) * C92099) * C92310 +
            (C28472 * C181 + C28605 * C92099) * C92067) *
               C92186) *
              C93 -
          ((((C22751 + C22752) * C92099 + (C22640 + C22639) * C181) * C92067 +
            (C28604 * C92099 + C28470 * C181) * C92310) *
               C92186 +
           (((C20405 + C20404) * C92099 + (C20306 + C20305) * C181) * C92067 +
            ((C20403 + C20402) * C92099 + (C20301 + C20302) * C181) * C92310) *
               C31260) *
              C94 +
          ((C20410 * C92310 +
            ((C20309 + C20310) * C181 + (C20407 + C20406) * C92099) * C92067) *
               C31260 +
           (((C22639 + C22640) * C181 + (C22752 + C22751) * C92099) * C92310 +
            ((C20274 * C802 + C92323 * C1201 + C20275 * C3434 +
              C92212 * C3878) *
                 C181 +
             (C20274 * C887 + C92323 * C1273 + C20275 * C3516 +
              C92212 * C3952) *
                 C92099) *
                C92067) *
               C92186) *
              C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C20274 * C107 + C92323 * C555 + C20275 * C1389 + C92212 * C1788) *
                 C181 +
             (C20274 * C182 + C92323 * C641 + C20275 * C1471 + C92212 * C1854) *
                 C92099) *
                C92310 +
            ((C20302 + C20301) * C181 + (C20402 + C20403) * C92099) * C92067) *
               C31260 +
           (((C26314 + C26315) * C181 + (C26437 + C26436) * C92099) * C92310 +
            (C28472 * C181 + C28605 * C92099) * C92067) *
               C92186) *
              C92078 * C1383 -
          ((((C29815 + C29814) * C92099 + (C29677 + C29676) * C181) * C92067 +
            ((C31047 + C31046) * C92099 + (C30910 + C30911) * C181) * C92310) *
               C92186 +
           (((C23725 + C23724) * C92099 + (C23611 + C23610) * C181) * C92067 +
            ((C20275 * C1472 + C92212 * C1855 + C20274 * C1471 +
              C92323 * C1854) *
                 C92099 +
             (C20275 * C1390 + C92212 * C1789 + C20274 * C1389 +
              C92323 * C1788) *
                 C181) *
                C92310) *
               C31260) *
              C92078 * C1384 +
          ((((C20274 * C1390 + C92323 * C1789 + C20275 * C10961 +
              C92212 * C11609) *
                 C181 +
             (C20274 * C1472 + C92323 * C1855 + C20275 * C11093 +
              C92212 * C11691) *
                 C92099) *
                C92310 +
            ((C20274 * C1391 + C92323 * C1790 + C20275 * C10960 +
              C92212 * C11608) *
                 C181 +
             (C20274 * C1473 + C92323 * C1856 + C20275 * C11092 +
              C92212 * C11690) *
                 C92099) *
                C92067) *
               C31260 +
           (((C20274 * C5773 + C92323 * C6289 + C20275 * C13849 +
              C92212 * C14525) *
                 C181 +
             (C20274 * C5871 + C92323 * C6375 + C20275 * C13967 +
              C92212 * C14627) *
                 C92099) *
                C92310 +
            ((C20274 * C5774 + C92323 * C6290 + C20275 * C13850 +
              C92212 * C14526) *
                 C181 +
             (C20274 * C5872 + C92323 * C6376 + C20275 * C13968 +
              C92212 * C14628) *
                 C92099) *
                C92067) *
               C92186) *
              C92078 * C1385)) /
            (p * q * std::sqrt(p + q));
    d2eezz[42] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C20274 * C107 + C92323 * C555 + C20275 * C1389 + C92212 * C1788) *
                 C244 +
             (C20274 * C245 + C92323 * C719 + C20275 * C1540 + C92212 * C1909) *
                 C92110) *
                C92310 +
            ((C20302 + C20301) * C244 + (C20498 + C20499) * C92110) * C92067) *
               C31260 +
           (((C26314 + C26315) * C244 + (C26552 + C26553) * C92110) * C92310 +
            C28742 * C92067) *
               C92186) *
              C798 -
          ((((C26554 + C26555) * C92110 + (C26320 + C26321) * C244) * C92067 +
            ((C26556 + C26557) * C92110 + (C26324 + C26325) * C244) * C92310) *
               C92186 +
           (C28743 * C92067 +
            ((C26553 + C26552) * C92110 + (C26315 + C26314) * C244) * C92310) *
               C31260) *
              C799 +
          ((((C26325 + C26324) * C244 + (C26557 + C26556) * C92110) * C92310 +
            ((C26321 + C26320) * C244 + (C26555 + C26554) * C92110) * C92067) *
               C31260 +
           (((C20274 * C4882 + C92323 * C5456 + C20275 * C8536 +
              C92212 * C9196) *
                 C244 +
             (C20274 * C5114 + C92323 * C5669 + C20275 * C8780 +
              C92212 * C9424) *
                 C92110) *
                C92310 +
            ((C20274 * C4881 + C92323 * C5455 + C20275 * C8537 +
              C92212 * C9197) *
                 C244 +
             (C20274 * C5113 + C92323 * C5668 + C20275 * C8781 +
              C92212 * C9425) *
                 C92110) *
                C92067) *
               C92186) *
              C800) *
         C92078) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C20274 * C107 + C92323 * C555 + C20275 * C1389 + C92212 * C1788) *
                 C244 +
             (C20274 * C245 + C92323 * C719 + C20275 * C1540 + C92212 * C1909) *
                 C92110) *
                C92310 +
            ((C20302 + C20301) * C244 + (C20498 + C20499) * C92110) * C92067) *
               C31260 +
           (((C26314 + C26315) * C244 + (C26552 + C26553) * C92110) * C92310 +
            C28742 * C92067) *
               C92186) *
              C92099 * C93 -
          ((((C22859 + C22860) * C92110 + (C22640 + C22639) * C244) * C92067 +
            C28743 * C92310) *
               C92186 +
           (((C20501 + C20500) * C92110 + (C20306 + C20305) * C244) * C92067 +
            ((C20499 + C20498) * C92110 + (C20301 + C20302) * C244) * C92310) *
               C31260) *
              C92099 * C94 +
          ((C20506 * C92310 +
            ((C20309 + C20310) * C244 + (C20503 + C20502) * C92110) * C92067) *
               C31260 +
           (((C22639 + C22640) * C244 + (C22860 + C22859) * C92110) * C92310 +
            ((C20274 * C802 + C92323 * C1201 + C20275 * C3434 +
              C92212 * C3878) *
                 C244 +
             (C20274 * C953 + C92323 * C1325 + C20275 * C3590 +
              C92212 * C4022) *
                 C92110) *
                C92067) *
               C92186) *
              C92099 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C20274 * C107 + C92323 * C555 + C20275 * C1389 + C92212 * C1788) *
                C1534 +
            (C20274 * C245 + C92323 * C719 + C20275 * C1540 + C92212 * C1909) *
                C1383 -
            (C20275 * C1390 + C92212 * C1789 + C20274 * C1389 +
             C92323 * C1788) *
                C1535 -
            (C20275 * C1541 + C92212 * C1910 + C20274 * C1540 +
             C92323 * C1909) *
                C1384 +
            (C20274 * C1390 + C92323 * C1789 + C20275 * C10961 +
             C92212 * C11609) *
                C1536 +
            (C20274 * C1541 + C92323 * C1910 + C20275 * C11197 +
             C92212 * C11768) *
                C1385) *
               C92310 +
           ((C20302 + C20301) * C1534 + (C20498 + C20499) * C1383 -
            (C23611 + C23610) * C1535 - (C23834 + C23835) * C1384 +
            (C20274 * C1391 + C92323 * C1790 + C20275 * C10960 +
             C92212 * C11608) *
                C1536 +
            (C20274 * C1542 + C92323 * C1912 + C20275 * C11198 +
             C92212 * C11770) *
                C1385) *
               C92067) *
              C31260 +
          (((C26314 + C26315) * C1534 + (C26552 + C26553) * C1383 -
            (C30910 + C30911) * C1535 - (C31182 + C31183) * C1384 +
            (C20274 * C5773 + C92323 * C6289 + C20275 * C13849 +
             C92212 * C14525) *
                C1536 +
            (C20274 * C5955 + C92323 * C6453 + C20275 * C14075 +
             C92212 * C14727) *
                C1385) *
               C92310 +
           (C28472 * C1534 + C28737 * C1383 - (C29677 + C29676) * C1535 -
            (C29950 + C29951) * C1384 +
            (C20274 * C5774 + C92323 * C6290 + C20275 * C13850 +
             C92212 * C14526) *
                C1536 +
            (C20274 * C5956 + C92323 * C6454 + C20275 * C14076 +
             C92212 * C14728) *
                C1385) *
               C92067) *
              C92186) *
         C92099 * C92078) /
            (p * q * std::sqrt(p + q));
    d2eexx[43] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C89875 * C107 + C92310 * C113 + C89868 * C108 + C92067 * C114) *
                 C1987 +
             (C89875 * C117 + C92310 * C125 + C89868 * C118 + C92067 * C126) *
                 C1983 -
             (C89868 * C109 + C92067 * C115 + C89875 * C108 + C92310 * C114) *
                 C1988 -
             (C89868 * C119 + C92067 * C127 + C89875 * C118 + C92310 * C126) *
                 C1984) *
                C31260 +
            ((C45573 + C45574) * C1987 + (C45575 + C45576) * C1983 -
             (C47009 + C47010) * C1988 - (C47011 + C47012) * C1984) *
                C92186) *
               C92323 +
           (((C51595 + C51596) * C1987 + (C51597 + C51598) * C1983 -
             (C53783 + C53784) * C1988 - (C53785 + C53786) * C1984) *
                C31260 +
            ((C48900 + C48899) * C1987 + (C48898 + C48897) * C1983 -
             (C52565 + C52566) * C1988 - (C52567 + C52568) * C1984) *
                C92186) *
               C92212) *
              C2709 +
          ((((C53784 + C53783) * C1988 -
             ((C51598 + C51597) * C1983 + (C51596 + C51595) * C1987) +
             (C53786 + C53785) * C1984) *
                C31260 +
            ((C52566 + C52565) * C1988 -
             ((C48897 + C48898) * C1983 + (C48899 + C48900) * C1987) +
             (C52568 + C52567) * C1984) *
                C92186) *
               C92323 +
           (((C89875 * C1391 + C92310 * C1403 + C89868 * C1392 +
              C92067 * C1404) *
                 C1988 -
             ((C51603 + C51604) * C1983 + (C51605 + C51606) * C1987) +
             (C89875 * C1407 + C92310 * C1415 + C89868 * C1408 +
              C92067 * C1416) *
                 C1984) *
                C31260 +
            ((C89875 * C5774 + C92310 * C5782 + C89868 * C11870 +
              C92067 * C11871) *
                 C1988 -
             ((C51599 + C51600) * C1983 + (C51601 + C51602) * C1987) +
             (C89875 * C5784 + C92310 * C5792 + C89868 * C11872 +
              C92067 * C11873) *
                 C1984) *
                C92186) *
               C92212) *
              C2710) *
         C92099) /
        (p * q * std::sqrt(p + q));
    d2eexy[43] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C89875 * C107 + C92310 * C113 + C89868 * C108 + C92067 * C114) *
                  C181 +
              (C89875 * C182 + C92310 * C188 + C89868 * C183 + C92067 * C189) *
                  C92099) *
                 C31260 +
             ((C45573 + C45574) * C181 + (C45677 + C45676) * C92099) * C92186) *
                C92323 +
            (((C51595 + C51596) * C181 + (C51717 + C51718) * C92099) * C31260 +
             ((C48900 + C48899) * C181 + (C49007 + C49008) * C92099) * C92186) *
                C92212) *
               C1983 -
           ((((C52704 + C52703) * C92099 + (C52565 + C52566) * C181) * C92186 +
             ((C53921 + C53922) * C92099 + (C53783 + C53784) * C181) * C31260) *
                C92212 +
            (((C47124 + C47123) * C92099 + (C47009 + C47010) * C181) * C92186 +
             ((C89868 * C184 + C92067 * C190 + C89875 * C183 + C92310 * C189) *
                  C92099 +
              (C89868 * C109 + C92067 * C115 + C89875 * C108 + C92310 * C114) *
                  C181) *
                 C31260) *
                C92323) *
               C1984) *
              C2709 +
          (((((C53784 + C53783) * C181 + (C53922 + C53921) * C92099) * C31260 +
             ((C52566 + C52565) * C181 + (C52703 + C52704) * C92099) * C92186) *
                C92323 +
            (((C89875 * C1391 + C92310 * C1403 + C89868 * C1392 +
               C92067 * C1404) *
                  C181 +
              (C89875 * C1473 + C92310 * C1481 + C89868 * C1474 +
               C92067 * C1482) *
                  C92099) *
                 C31260 +
             ((C89875 * C5774 + C92310 * C5782 + C89868 * C11870 +
               C92067 * C11871) *
                  C181 +
              (C89875 * C5872 + C92310 * C5878 + C89868 * C11972 +
               C92067 * C11973) *
                  C92099) *
                 C92186) *
                C92212) *
               C1984 -
           ((((C51719 + C51720) * C92099 + (C51601 + C51602) * C181) * C92186 +
             ((C51721 + C51722) * C92099 + (C51605 + C51606) * C181) * C31260) *
                C92212 +
            (((C49008 + C49007) * C92099 + (C48899 + C48900) * C181) * C92186 +
             ((C51718 + C51717) * C92099 + (C51596 + C51595) * C181) * C31260) *
                C92323) *
               C1983) *
              C2710)) /
        (p * q * std::sqrt(p + q));
    d2eexz[43] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C89875 * C107 + C92310 * C113 + C89868 * C108 + C92067 * C114) *
                 C2849 +
             (C89875 * C245 + C92310 * C251 + C89868 * C246 + C92067 * C252) *
                 C2709 -
             (C51596 + C51595) * C2850 - (C51833 + C51834) * C2710) *
                C31260 +
            ((C45573 + C45574) * C2849 + (C45770 + C45771) * C2709 -
             (C48899 + C48900) * C2850 - (C49117 + C49118) * C2710) *
                C92186) *
               C92323 +
           (((C51595 + C51596) * C2849 + (C51834 + C51833) * C2709 -
             (C51605 + C51606) * C2850 - (C51836 + C51835) * C2710) *
                C31260 +
            ((C48900 + C48899) * C2849 + (C49118 + C49117) * C2709 -
             (C51601 + C51602) * C2850 - (C51838 + C51837) * C2710) *
                C92186) *
               C92212) *
              C92099 * C1983 +
          ((((C53784 + C53783) * C2850 -
             ((C89868 * C247 + C92067 * C253 + C89875 * C246 + C92310 * C252) *
                  C2709 +
              (C89868 * C109 + C92067 * C115 + C89875 * C108 + C92310 * C114) *
                  C2849) +
             (C54057 + C54058) * C2710) *
                C31260 +
            ((C52566 + C52565) * C2850 -
             ((C47234 + C47233) * C2709 + (C47009 + C47010) * C2849) +
             (C52839 + C52840) * C2710) *
                C92186) *
               C92323 +
           (((C89875 * C1391 + C92310 * C1403 + C89868 * C1392 +
              C92067 * C1404) *
                 C2850 -
             ((C54058 + C54057) * C2709 + (C53783 + C53784) * C2849) +
             (C89875 * C1542 + C92310 * C1550 + C89868 * C1543 +
              C92067 * C1551) *
                 C2710) *
                C31260 +
            ((C89875 * C5774 + C92310 * C5782 + C89868 * C11870 +
              C92067 * C11871) *
                 C2850 -
             ((C52840 + C52839) * C2709 + (C52565 + C52566) * C2849) +
             (C89875 * C5956 + C92310 * C5962 + C89868 * C12072 +
              C92067 * C12073) *
                 C2710) *
                C92186) *
               C92212) *
              C92099 * C1984)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[43] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31487 * C107 + C31260 * C308 + C31488 * C805 + C92186 * C1022) *
                 C1987 +
             (C31487 * C117 + C31260 * C314 + C31488 * C813 + C92186 * C1030) *
                 C1983 -
             (C31514 + C31515) * C1988 - (C31516 + C31517) * C1984) *
                C92323 +
            ((C41420 + C41421) * C1987 + (C41422 + C41423) * C1983 -
             C54189 * C1988 - C54190 * C1984) *
                C92212) *
               C92310 +
           (((C31515 + C31514) * C1987 + (C31517 + C31516) * C1983 -
             (C31519 + C31518) * C1988 - (C31521 + C31520) * C1984) *
                C92323 +
            (C54191 * C1987 + C54192 * C1983 - (C34727 + C34726) * C1988 -
             (C34729 + C34728) * C1984) *
                C92212) *
               C92067) *
              C2709 +
          (((C54191 * C1988 -
             ((C41423 + C41422) * C1983 + (C41421 + C41420) * C1987) +
             C54192 * C1984) *
                C92323 +
            ((C43213 + C43212) * C1988 -
             ((C41427 + C41426) * C1983 + (C41425 + C41424) * C1987) +
             (C43215 + C43214) * C1984) *
                C92212) *
               C92310 +
           (((C34726 + C34727) * C1988 - (C54190 * C1983 + C54189 * C1987) +
             (C34728 + C34729) * C1984) *
                C92323 +
            ((C31487 * C1392 + C31260 * C1609 + C31488 * C11870 +
              C92186 * C12172) *
                 C1988 -
             ((C43214 + C43215) * C1983 + (C43212 + C43213) * C1987) +
             (C31487 * C1408 + C31260 * C1617 + C31488 * C11872 +
              C92186 * C12173) *
                 C1984) *
                C92212) *
               C92067) *
              C2710) *
         C92099) /
        (p * q * std::sqrt(p + q));
    d2eeyy[43] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C31487 * C107 + C31260 * C308 + C31488 * C805 + C92186 * C1022) *
                  C181 +
              (C31487 * C182 + C31260 * C394 + C31488 * C890 + C92186 * C1085) *
                  C92099) *
                 C92323 +
             ((C41420 + C41421) * C181 + (C41525 + C41526) * C92099) * C92212) *
                C92310 +
            (((C31515 + C31514) * C181 + (C31615 + C31616) * C92099) * C92323 +
             C54329 * C92212) *
                C92067) *
               C1983 -
           ((((C34839 + C34838) * C92099 + (C34727 + C34726) * C181) * C92212 +
             ((C31618 + C31617) * C92099 + (C31519 + C31518) * C181) * C92323) *
                C92067 +
            (C54330 * C92212 +
             ((C31616 + C31615) * C92099 + (C31514 + C31515) * C181) * C92323) *
                C92310) *
               C1984) *
              C2709 +
          (((C54329 * C92323 +
             ((C43213 + C43212) * C181 + (C43319 + C43318) * C92099) * C92212) *
                C92310 +
            (((C34726 + C34727) * C181 + (C34838 + C34839) * C92099) * C92323 +
             ((C31487 * C1392 + C31260 * C1609 + C31488 * C11870 +
               C92186 * C12172) *
                  C181 +
              (C31487 * C1474 + C31260 * C1675 + C31488 * C11972 +
               C92186 * C12284) *
                  C92099) *
                 C92212) *
                C92067) *
               C1984 -
           ((((C43318 + C43319) * C92099 + (C43212 + C43213) * C181) * C92212 +
             C54330 * C92323) *
                C92067 +
            (((C41528 + C41527) * C92099 + (C41425 + C41424) * C181) * C92212 +
             ((C41526 + C41525) * C92099 + (C41421 + C41420) * C181) * C92323) *
                C92310) *
               C1983) *
              C2710)) /
        (p * q * std::sqrt(p + q));
    d2eeyz[43] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31487 * C107 + C31260 * C308 + C31488 * C805 + C92186 * C1022) *
                 C2849 +
             (C31487 * C245 + C31260 * C474 + C31488 * C956 + C92186 * C1146) *
                 C2709 -
             (C41421 + C41420) * C2850 - (C41621 + C41622) * C2710) *
                C92323 +
            ((C41420 + C41421) * C2849 + (C41622 + C41621) * C2709 -
             (C41425 + C41424) * C2850 - (C41624 + C41623) * C2710) *
                C92212) *
               C92310 +
           (((C31515 + C31514) * C2849 + (C31712 + C31713) * C2709 -
             C54189 * C2850 - C54461 * C2710) *
                C92323 +
            (C54191 * C2849 + C54462 * C2709 - (C43212 + C43213) * C2850 -
             (C43423 + C43422) * C2710) *
                C92212) *
               C92067) *
              C92099 * C1983 +
          (((C54191 * C2850 -
             ((C31713 + C31712) * C2709 + (C31514 + C31515) * C2849) +
             C54462 * C2710) *
                C92323 +
            ((C43213 + C43212) * C2850 - (C54461 * C2709 + C54189 * C2849) +
             (C43422 + C43423) * C2710) *
                C92212) *
               C92310 +
           (((C34726 + C34727) * C2850 -
             ((C31715 + C31714) * C2709 + (C31519 + C31518) * C2849) +
             (C34949 + C34948) * C2710) *
                C92323 +
            ((C31487 * C1392 + C31260 * C1609 + C31488 * C11870 +
              C92186 * C12172) *
                 C2850 -
             ((C34948 + C34949) * C2709 + (C34727 + C34726) * C2849) +
             (C31487 * C1543 + C31260 * C1732 + C31488 * C12072 +
              C92186 * C12397) *
                 C2710) *
                C92212) *
               C92067) *
              C92099 * C1984)) /
        (p * q * std::sqrt(p + q));
    d2eezx[43] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C20274 * C107 + C92323 * C555 + C20275 * C1389 + C92212 * C1788) *
                 C1987 +
             (C20274 * C117 + C92323 * C561 + C20275 * C1397 + C92212 * C1796) *
                 C1983 -
             (C20301 + C20302) * C1988 - (C20303 + C20304) * C1984) *
                C92310 +
            ((C20302 + C20301) * C1987 + (C20304 + C20303) * C1983 -
             (C20306 + C20305) * C1988 - (C20308 + C20307) * C1984) *
                C92067) *
               C31260 +
           (((C26314 + C26315) * C1987 + (C26316 + C26317) * C1983 -
             C28470 * C1988 - C28471 * C1984) *
                C92310 +
            (C28472 * C1987 + C28473 * C1983 - (C22640 + C22639) * C1988 -
             (C22642 + C22641) * C1984) *
                C92067) *
               C92186) *
              C2709 +
          ((((C23610 + C23611) * C1988 -
             ((C20275 * C1406 + C92212 * C1797 + C20274 * C1397 +
               C92323 * C1796) *
                  C1983 +
              (C20275 * C1390 + C92212 * C1789 + C20274 * C1389 +
               C92323 * C1788) *
                  C1987) +
             (C23612 + C23613) * C1984) *
                C92310 +
            ((C23614 + C23615) * C1988 -
             ((C23613 + C23612) * C1983 + (C23611 + C23610) * C1987) +
             (C23616 + C23617) * C1984) *
                C92067) *
               C31260 +
           (((C29676 + C29677) * C1988 -
             ((C30908 + C30909) * C1983 + (C30910 + C30911) * C1987) +
             (C29678 + C29679) * C1984) *
                C92310 +
            ((C20274 * C3433 + C92323 * C3877 + C20275 * C11870 +
              C92212 * C12506) *
                 C1988 -
             ((C29679 + C29678) * C1983 + (C29677 + C29676) * C1987) +
             (C20274 * C3441 + C92323 * C3881 + C20275 * C11872 +
              C92212 * C12507) *
                 C1984) *
                C92067) *
               C92186) *
              C2710) *
         C92099) /
        (p * q * std::sqrt(p + q));
    d2eezy[43] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C20274 * C107 + C92323 * C555 + C20275 * C1389 +
               C92212 * C1788) *
                  C181 +
              (C20274 * C182 + C92323 * C641 + C20275 * C1471 +
               C92212 * C1854) *
                  C92099) *
                 C92310 +
             ((C20302 + C20301) * C181 + (C20402 + C20403) * C92099) * C92067) *
                C31260 +
            (((C26314 + C26315) * C181 + (C26437 + C26436) * C92099) * C92310 +
             (C28472 * C181 + C28605 * C92099) * C92067) *
                C92186) *
               C1983 -
           ((((C22751 + C22752) * C92099 + (C22640 + C22639) * C181) * C92067 +
             (C28604 * C92099 + C28470 * C181) * C92310) *
                C92186 +
            (((C20405 + C20404) * C92099 + (C20306 + C20305) * C181) * C92067 +
             ((C20403 + C20402) * C92099 + (C20301 + C20302) * C181) * C92310) *
                C31260) *
               C1984) *
              C2709 +
          (((((C23610 + C23611) * C181 + (C23724 + C23725) * C92099) * C92310 +
             ((C23614 + C23615) * C181 + (C23726 + C23727) * C92099) * C92067) *
                C31260 +
            (((C29676 + C29677) * C181 + (C29814 + C29815) * C92099) * C92310 +
             ((C20274 * C3433 + C92323 * C3877 + C20275 * C11870 +
               C92212 * C12506) *
                  C181 +
              (C20274 * C3515 + C92323 * C3951 + C20275 * C11972 +
               C92212 * C12624) *
                  C92099) *
                 C92067) *
                C92186) *
               C1984 -
           ((((C29815 + C29814) * C92099 + (C29677 + C29676) * C181) * C92067 +
             ((C31047 + C31046) * C92099 + (C30910 + C30911) * C181) * C92310) *
                C92186 +
            (((C23725 + C23724) * C92099 + (C23611 + C23610) * C181) * C92067 +
             ((C20275 * C1472 + C92212 * C1855 + C20274 * C1471 +
               C92323 * C1854) *
                  C92099 +
              (C20275 * C1390 + C92212 * C1789 + C20274 * C1389 +
               C92323 * C1788) *
                  C181) *
                 C92310) *
                C31260) *
               C1983) *
              C2710)) /
        (p * q * std::sqrt(p + q));
    d2eezz[43] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C20274 * C107 + C92323 * C555 + C20275 * C1389 + C92212 * C1788) *
                 C2849 +
             (C20274 * C245 + C92323 * C719 + C20275 * C1540 + C92212 * C1909) *
                 C2709 -
             (C20275 * C1390 + C92212 * C1789 + C20274 * C1389 +
              C92323 * C1788) *
                 C2850 -
             (C20275 * C1541 + C92212 * C1910 + C20274 * C1540 +
              C92323 * C1909) *
                 C2710) *
                C92310 +
            ((C20302 + C20301) * C2849 + (C20498 + C20499) * C2709 -
             (C23611 + C23610) * C2850 - (C23834 + C23835) * C2710) *
                C92067) *
               C31260 +
           (((C26314 + C26315) * C2849 + (C26552 + C26553) * C2709 -
             (C30910 + C30911) * C2850 - (C31182 + C31183) * C2710) *
                C92310 +
            (C28472 * C2849 + C28737 * C2709 - (C29677 + C29676) * C2850 -
             (C29950 + C29951) * C2710) *
                C92067) *
               C92186) *
              C92099 * C1983 +
          ((((C23610 + C23611) * C2850 -
             ((C20499 + C20498) * C2709 + (C20301 + C20302) * C2849) +
             (C23835 + C23834) * C2710) *
                C92310 +
            ((C23614 + C23615) * C2850 -
             ((C20501 + C20500) * C2709 + (C20306 + C20305) * C2849) +
             (C23837 + C23836) * C2710) *
                C92067) *
               C31260 +
           (((C29676 + C29677) * C2850 - (C28738 * C2709 + C28470 * C2849) +
             (C29951 + C29950) * C2710) *
                C92310 +
            ((C20274 * C3433 + C92323 * C3877 + C20275 * C11870 +
              C92212 * C12506) *
                 C2850 -
             ((C22859 + C22860) * C2709 + (C22640 + C22639) * C2849) +
             (C20274 * C3589 + C92323 * C4021 + C20275 * C12072 +
              C92212 * C12732) *
                 C2710) *
                C92067) *
               C92186) *
              C92099 * C1984)) /
        (p * q * std::sqrt(p + q));
    d2eexx[44] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C89875 * C107 + C92310 * C113 + C89868 * C108 + C92067 * C114) *
                C104 +
            (C89875 * C117 + C92310 * C125 + C89868 * C118 + C92067 * C126) *
                C93 -
            (C89868 * C109 + C92067 * C115 + C89875 * C108 + C92310 * C114) *
                C105 -
            (C89868 * C119 + C92067 * C127 + C89875 * C118 + C92310 * C126) *
                C94 +
            (C89875 * C109 + C92310 * C115 + C89868 * C110 + C92067 * C116) *
                C106 +
            (C89875 * C119 + C92310 * C127 + C89868 * C120 + C92067 * C128) *
                C95) *
               C31260 +
           ((C45573 + C45574) * C104 + (C45575 + C45576) * C93 -
            (C47009 + C47010) * C105 - (C47011 + C47012) * C94 +
            (C89875 * C803 + C92310 * C815 + C89868 * C802 + C92067 * C814) *
                C106 +
            (C89875 * C811 + C92310 * C827 + C89868 * C810 + C92067 * C826) *
                C95) *
               C92186) *
              C92323 +
          (((C89875 * C1389 + C92310 * C1401 + C89868 * C1388 +
             C92067 * C1400) *
                C104 +
            (C89875 * C1397 + C92310 * C1413 + C89868 * C1396 +
             C92067 * C1412) *
                C93 -
            (C89868 * C1387 + C92067 * C1399 + C89875 * C1388 +
             C92310 * C1400) *
                C105 -
            (C89868 * C1395 + C92067 * C1411 + C89875 * C1396 +
             C92310 * C1412) *
                C94 +
            (C89875 * C1387 + C92310 * C1399 + C89868 * C1386 +
             C92067 * C1398) *
                C106 +
            (C89875 * C1395 + C92310 * C1411 + C89868 * C1394 +
             C92067 * C1410) *
                C95) *
               C31260 +
           ((C48900 + C48899) * C104 + (C48898 + C48897) * C93 -
            (C89868 * C3433 + C92067 * C3437 + C89875 * C3432 +
             C92310 * C3436) *
                C105 -
            (C89868 * C3441 + C92067 * C3445 + C89875 * C3440 +
             C92310 * C3444) *
                C94 +
            (C89875 * C3433 + C92310 * C3437 + C89868 * C3434 +
             C92067 * C3438) *
                C106 +
            (C89875 * C3441 + C92310 * C3445 + C89868 * C3442 +
             C92067 * C3446) *
                C95) *
               C92186) *
              C92212) *
         C92110 * C92099) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C89875 * C107 + C92310 * C113 + C89868 * C108 + C92067 * C114) *
                 C801 +
             (C89875 * C117 + C92310 * C125 + C89868 * C118 + C92067 * C126) *
                 C92078) *
                C31260 +
            ((C45573 + C45574) * C801 + (C45575 + C45576) * C92078) * C92186) *
               C92323 +
           (((C89875 * C1389 + C92310 * C1401 + C89868 * C1388 +
              C92067 * C1400) *
                 C801 +
             (C89875 * C1397 + C92310 * C1413 + C89868 * C1396 +
              C92067 * C1412) *
                 C92078) *
                C31260 +
            ((C48900 + C48899) * C801 + (C48898 + C48897) * C92078) * C92186) *
               C92212) *
              C92110 * C798 -
          ((((C48893 + C48894) * C92078 + (C48895 + C48896) * C801) * C92186 +
            ((C48897 + C48898) * C92078 + (C48899 + C48900) * C801) * C31260) *
               C92212 +
           (((C45580 + C45579) * C92078 + (C45578 + C45577) * C801) * C92186 +
            ((C45576 + C45575) * C92078 + (C45574 + C45573) * C801) * C31260) *
               C92323) *
              C92110 * C799 +
          ((C45589 * C31260 +
            ((C45584 + C45583) * C801 + (C45582 + C45581) * C92078) * C92186) *
               C92323 +
           (((C48896 + C48895) * C801 + (C48894 + C48893) * C92078) * C31260 +
            ((C89875 * C8536 + C92310 * C8538 + C89868 * C8537 +
              C92067 * C8539) *
                 C801 +
             (C89875 * C8540 + C92310 * C8542 + C89868 * C8541 +
              C92067 * C8543) *
                 C92078) *
                C92186) *
               C92212) *
              C92110 * C800)) /
            (p * q * std::sqrt(p + q));
    d2eexy[44] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C89875 * C107 + C92310 * C113 + C89868 * C108 + C92067 * C114) *
                 C181 +
             (C89875 * C182 + C92310 * C188 + C89868 * C183 + C92067 * C189) *
                 C92099) *
                C31260 +
            ((C45573 + C45574) * C181 + (C45677 + C45676) * C92099) * C92186) *
               C92323 +
           (((C89875 * C1389 + C92310 * C1401 + C89868 * C1388 +
              C92067 * C1400) *
                 C181 +
             (C89875 * C1471 + C92310 * C1479 + C89868 * C1470 +
              C92067 * C1478) *
                 C92099) *
                C31260 +
            ((C48900 + C48899) * C181 + (C49007 + C49008) * C92099) * C92186) *
               C92212) *
              C93 -
          ((((C89868 * C3515 + C92067 * C3519 + C89875 * C3514 +
              C92310 * C3518) *
                 C92099 +
             (C89868 * C3433 + C92067 * C3437 + C89875 * C3432 +
              C92310 * C3436) *
                 C181) *
                C92186 +
            ((C89868 * C1469 + C92067 * C1477 + C89875 * C1470 +
              C92310 * C1478) *
                 C92099 +
             (C89868 * C1387 + C92067 * C1399 + C89875 * C1388 +
              C92310 * C1400) *
                 C181) *
                C31260) *
               C92212 +
           (((C47124 + C47123) * C92099 + (C47009 + C47010) * C181) * C92186 +
            ((C89868 * C184 + C92067 * C190 + C89875 * C183 + C92310 * C189) *
                 C92099 +
             (C89868 * C109 + C92067 * C115 + C89875 * C108 + C92310 * C114) *
                 C181) *
                C31260) *
               C92323) *
              C94 +
          ((((C89875 * C109 + C92310 * C115 + C89868 * C110 + C92067 * C116) *
                 C181 +
             (C89875 * C184 + C92310 * C190 + C89868 * C185 + C92067 * C191) *
                 C92099) *
                C31260 +
            ((C89875 * C803 + C92310 * C815 + C89868 * C802 + C92067 * C814) *
                 C181 +
             (C89875 * C888 + C92310 * C896 + C89868 * C887 + C92067 * C895) *
                 C92099) *
                C92186) *
               C92323 +
           (((C89875 * C1387 + C92310 * C1399 + C89868 * C1386 +
              C92067 * C1398) *
                 C181 +
             (C89875 * C1469 + C92310 * C1477 + C89868 * C1468 +
              C92067 * C1476) *
                 C92099) *
                C31260 +
            ((C89875 * C3433 + C92310 * C3437 + C89868 * C3434 +
              C92067 * C3438) *
                 C181 +
             (C89875 * C3515 + C92310 * C3519 + C89868 * C3516 +
              C92067 * C3520) *
                 C92099) *
                C92186) *
               C92212) *
              C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C89875 * C107 + C92310 * C113 + C89868 * C108 + C92067 * C114) *
                C884 +
            (C89875 * C182 + C92310 * C188 + C89868 * C183 + C92067 * C189) *
                C798 -
            (C45574 + C45573) * C885 - (C45676 + C45677) * C799 +
            C45585 * C886 + C45682 * C800) *
               C31260 +
           ((C45573 + C45574) * C884 + (C45677 + C45676) * C798 -
            (C45578 + C45577) * C885 - (C45679 + C45678) * C799 +
            (C45584 + C45583) * C886 + (C45680 + C45681) * C800) *
               C92186) *
              C92323 +
          (((C89875 * C1389 + C92310 * C1401 + C89868 * C1388 +
             C92067 * C1400) *
                C884 +
            (C89875 * C1471 + C92310 * C1479 + C89868 * C1470 +
             C92067 * C1478) *
                C798 -
            (C48899 + C48900) * C885 - (C49008 + C49007) * C799 +
            (C48896 + C48895) * C886 + (C49009 + C49010) * C800) *
               C31260 +
           ((C48900 + C48899) * C884 + (C49007 + C49008) * C798 -
            (C48895 + C48896) * C885 - (C49010 + C49009) * C799 +
            (C89875 * C8536 + C92310 * C8538 + C89868 * C8537 +
             C92067 * C8539) *
                C886 +
            (C89875 * C8666 + C92310 * C8668 + C89868 * C8667 +
             C92067 * C8669) *
                C800) *
               C92186) *
              C92212) *
         C92078 * C92110) /
            (p * q * std::sqrt(p + q));
    d2eexz[44] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C89875 * C107 + C92310 * C113 + C89868 * C108 + C92067 * C114) *
                 C244 +
             (C89875 * C245 + C92310 * C251 + C89868 * C246 + C92067 * C252) *
                 C92110) *
                C31260 +
            ((C45573 + C45574) * C244 + (C45770 + C45771) * C92110) * C92186) *
               C92323 +
           (((C89875 * C1389 + C92310 * C1401 + C89868 * C1388 +
              C92067 * C1400) *
                 C244 +
             (C89875 * C1540 + C92310 * C1548 + C89868 * C1539 +
              C92067 * C1547) *
                 C92110) *
                C31260 +
            ((C48900 + C48899) * C244 + (C49118 + C49117) * C92110) * C92186) *
               C92212) *
              C92099 * C93 -
          ((((C89868 * C3589 + C92067 * C3593 + C89875 * C3588 +
              C92310 * C3592) *
                 C92110 +
             (C89868 * C3433 + C92067 * C3437 + C89875 * C3432 +
              C92310 * C3436) *
                 C244) *
                C92186 +
            ((C89868 * C1538 + C92067 * C1546 + C89875 * C1539 +
              C92310 * C1547) *
                 C92110 +
             (C89868 * C1387 + C92067 * C1399 + C89875 * C1388 +
              C92310 * C1400) *
                 C244) *
                C31260) *
               C92212 +
           (((C47234 + C47233) * C92110 + (C47009 + C47010) * C244) * C92186 +
            ((C89868 * C247 + C92067 * C253 + C89875 * C246 + C92310 * C252) *
                 C92110 +
             (C89868 * C109 + C92067 * C115 + C89875 * C108 + C92310 * C114) *
                 C244) *
                C31260) *
               C92323) *
              C92099 * C94 +
          ((((C89875 * C109 + C92310 * C115 + C89868 * C110 + C92067 * C116) *
                 C244 +
             (C89875 * C247 + C92310 * C253 + C89868 * C248 + C92067 * C254) *
                 C92110) *
                C31260 +
            ((C89875 * C803 + C92310 * C815 + C89868 * C802 + C92067 * C814) *
                 C244 +
             (C89875 * C954 + C92310 * C962 + C89868 * C953 + C92067 * C961) *
                 C92110) *
                C92186) *
               C92323 +
           (((C89875 * C1387 + C92310 * C1399 + C89868 * C1386 +
              C92067 * C1398) *
                 C244 +
             (C89875 * C1538 + C92310 * C1546 + C89868 * C1537 +
              C92067 * C1545) *
                 C92110) *
                C31260 +
            ((C89875 * C3433 + C92310 * C3437 + C89868 * C3434 +
              C92067 * C3438) *
                 C244 +
             (C89875 * C3589 + C92310 * C3593 + C89868 * C3590 +
              C92067 * C3594) *
                 C92110) *
                C92186) *
               C92212) *
              C92099 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C89875 * C107 + C92310 * C113 + C89868 * C108 + C92067 * C114) *
                 C244 +
             (C89875 * C245 + C92310 * C251 + C89868 * C246 + C92067 * C252) *
                 C92110) *
                C31260 +
            ((C45573 + C45574) * C244 + (C45770 + C45771) * C92110) * C92186) *
               C92323 +
           (((C89875 * C1389 + C92310 * C1401 + C89868 * C1388 +
              C92067 * C1400) *
                 C244 +
             (C89875 * C1540 + C92310 * C1548 + C89868 * C1539 +
              C92067 * C1547) *
                 C92110) *
                C31260 +
            ((C48900 + C48899) * C244 + (C49118 + C49117) * C92110) * C92186) *
               C92212) *
              C798 -
          ((((C49119 + C49120) * C92110 + (C48895 + C48896) * C244) * C92186 +
            ((C49117 + C49118) * C92110 + (C48899 + C48900) * C244) * C31260) *
               C92212 +
           (((C45773 + C45772) * C92110 + (C45578 + C45577) * C244) * C92186 +
            ((C45771 + C45770) * C92110 + (C45574 + C45573) * C244) * C31260) *
               C92323) *
              C799 +
          ((C45778 * C31260 +
            ((C45584 + C45583) * C244 + (C45775 + C45774) * C92110) * C92186) *
               C92323 +
           (((C48896 + C48895) * C244 + (C49120 + C49119) * C92110) * C31260 +
            ((C89875 * C8536 + C92310 * C8538 + C89868 * C8537 +
              C92067 * C8539) *
                 C244 +
             (C89875 * C8780 + C92310 * C8782 + C89868 * C8781 +
              C92067 * C8783) *
                 C92110) *
                C92186) *
               C92212) *
              C800) *
         C92078) /
            (p * q * std::sqrt(p + q));
    d2eeyx[44] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31487 * C107 + C31260 * C308 + C31488 * C805 + C92186 * C1022) *
                C104 +
            (C31487 * C117 + C31260 * C314 + C31488 * C813 + C92186 * C1030) *
                C93 -
            (C31514 + C31515) * C105 - (C31516 + C31517) * C94 + C31526 * C106 +
            C31527 * C95) *
               C92323 +
           ((C41420 + C41421) * C104 + (C41422 + C41423) * C93 -
            (C34723 + C34722) * C105 - (C34725 + C34724) * C94 +
            (C34726 + C34727) * C106 + (C34728 + C34729) * C95) *
               C92212) *
              C92310 +
          (((C31515 + C31514) * C104 + (C31517 + C31516) * C93 -
            (C31519 + C31518) * C105 - (C31521 + C31520) * C94 +
            (C31522 + C31523) * C106 + (C31524 + C31525) * C95) *
               C92323 +
           ((C34722 + C34723) * C104 + (C34724 + C34725) * C93 -
            (C34727 + C34726) * C105 - (C34729 + C34728) * C94 +
            (C31487 * C1386 + C31260 * C1603 + C31488 * C3434 +
             C92186 * C3664) *
                C106 +
            (C31487 * C1394 + C31260 * C1611 + C31488 * C3442 +
             C92186 * C3668) *
                C95) *
               C92212) *
              C92067) *
         C92110 * C92099) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31487 * C107 + C31260 * C308 + C31488 * C805 + C92186 * C1022) *
                 C801 +
             (C31487 * C117 + C31260 * C314 + C31488 * C813 + C92186 * C1030) *
                 C92078) *
                C92323 +
            ((C41420 + C41421) * C801 + (C41422 + C41423) * C92078) * C92212) *
               C92310 +
           (((C31515 + C31514) * C801 + (C31517 + C31516) * C92078) * C92323 +
            ((C34722 + C34723) * C801 + (C34724 + C34725) * C92078) * C92212) *
               C92067) *
              C92110 * C798 -
          ((((C31488 * C5777 + C92186 * C6047 + C31487 * C3440 +
              C31260 * C3666) *
                 C92078 +
             (C31488 * C5771 + C92186 * C6041 + C31487 * C3432 +
              C31260 * C3662) *
                 C801) *
                C92212 +
            ((C33795 + C33794) * C92078 + (C33793 + C33792) * C801) * C92323) *
               C92067 +
           (((C44166 + C44165) * C92078 + (C44164 + C44163) * C801) * C92212 +
            ((C31488 * C822 + C92186 * C1031 + C31487 * C813 + C31260 * C1030) *
                 C92078 +
             (C31488 * C806 + C92186 * C1023 + C31487 * C805 + C31260 * C1022) *
                 C801) *
                C92323) *
               C92310) *
              C92110 * C799 +
          ((((C31487 * C806 + C31260 * C1023 + C31488 * C4882 +
              C92186 * C5218) *
                 C801 +
             (C31487 * C822 + C31260 * C1031 + C31488 * C4886 +
              C92186 * C5222) *
                 C92078) *
                C92323 +
            ((C31487 * C5772 + C31260 * C6042 + C31488 * C8536 +
              C92186 * C8894) *
                 C801 +
             (C31487 * C5778 + C31260 * C6048 + C31488 * C8540 +
              C92186 * C8896) *
                 C92078) *
                C92212) *
               C92310 +
           (((C31487 * C807 + C31260 * C1024 + C31488 * C4881 +
              C92186 * C5217) *
                 C801 +
             (C31487 * C823 + C31260 * C1032 + C31488 * C4885 +
              C92186 * C5221) *
                 C92078) *
                C92323 +
            ((C31487 * C5771 + C31260 * C6041 + C31488 * C8537 +
              C92186 * C8895) *
                 C801 +
             (C31487 * C5777 + C31260 * C6047 + C31488 * C8541 +
              C92186 * C8897) *
                 C92078) *
                C92212) *
               C92067) *
              C92110 * C800)) /
            (p * q * std::sqrt(p + q));
    d2eeyy[44] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31487 * C107 + C31260 * C308 + C31488 * C805 + C92186 * C1022) *
                 C181 +
             (C31487 * C182 + C31260 * C394 + C31488 * C890 + C92186 * C1085) *
                 C92099) *
                C92323 +
            ((C41420 + C41421) * C181 + (C41525 + C41526) * C92099) * C92212) *
               C92310 +
           (((C31515 + C31514) * C181 + (C31615 + C31616) * C92099) * C92323 +
            ((C34722 + C34723) * C181 + (C34836 + C34837) * C92099) * C92212) *
               C92067) *
              C93 -
          ((((C34839 + C34838) * C92099 + (C34727 + C34726) * C181) * C92212 +
            ((C31618 + C31617) * C92099 + (C31519 + C31518) * C181) * C92323) *
               C92067 +
           (((C34837 + C34836) * C92099 + (C34723 + C34722) * C181) * C92212 +
            ((C31616 + C31615) * C92099 + (C31514 + C31515) * C181) * C92323) *
               C92310) *
              C94 +
          ((C31623 * C92323 +
            ((C34726 + C34727) * C181 + (C34838 + C34839) * C92099) * C92212) *
               C92310 +
           (((C31522 + C31523) * C181 + (C31620 + C31619) * C92099) * C92323 +
            ((C31487 * C1386 + C31260 * C1603 + C31488 * C3434 +
              C92186 * C3664) *
                 C181 +
             (C31487 * C1468 + C31260 * C1669 + C31488 * C3516 +
              C92186 * C3738) *
                 C92099) *
                C92212) *
               C92067) *
              C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31487 * C107 + C31260 * C308 + C31488 * C805 + C92186 * C1022) *
                C884 +
            (C31487 * C182 + C31260 * C394 + C31488 * C890 + C92186 * C1085) *
                C798 -
            (C31488 * C806 + C92186 * C1023 + C31487 * C805 + C31260 * C1022) *
                C885 -
            (C31488 * C891 + C92186 * C1086 + C31487 * C890 + C31260 * C1085) *
                C799 +
            (C31487 * C806 + C31260 * C1023 + C31488 * C4882 + C92186 * C5218) *
                C886 +
            (C31487 * C891 + C31260 * C1086 + C31488 * C5012 + C92186 * C5299) *
                C800) *
               C92323 +
           ((C41420 + C41421) * C884 + (C41525 + C41526) * C798 -
            (C44164 + C44163) * C885 - (C44278 + C44279) * C799 +
            (C31487 * C5772 + C31260 * C6042 + C31488 * C8536 +
             C92186 * C8894) *
                C886 +
            (C31487 * C5870 + C31260 * C6128 + C31488 * C8666 +
             C92186 * C8996) *
                C800) *
               C92212) *
              C92310 +
          (((C31515 + C31514) * C884 + (C31615 + C31616) * C798 -
            (C33793 + C33792) * C885 - (C33906 + C33907) * C799 +
            (C31487 * C807 + C31260 * C1024 + C31488 * C4881 + C92186 * C5217) *
                C886 +
            (C31487 * C892 + C31260 * C1088 + C31488 * C5013 + C92186 * C5301) *
                C800) *
               C92323 +
           ((C34722 + C34723) * C884 + (C34836 + C34837) * C798 -
            (C31488 * C5771 + C92186 * C6041 + C31487 * C3432 +
             C31260 * C3662) *
                C885 -
            (C31488 * C5869 + C92186 * C6127 + C31487 * C3514 +
             C31260 * C3736) *
                C799 +
            (C31487 * C5771 + C31260 * C6041 + C31488 * C8537 +
             C92186 * C8895) *
                C886 +
            (C31487 * C5869 + C31260 * C6127 + C31488 * C8667 +
             C92186 * C8997) *
                C800) *
               C92212) *
              C92067) *
         C92078 * C92110) /
            (p * q * std::sqrt(p + q));
    d2eeyz[44] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31487 * C107 + C31260 * C308 + C31488 * C805 + C92186 * C1022) *
                 C244 +
             (C31487 * C245 + C31260 * C474 + C31488 * C956 + C92186 * C1146) *
                 C92110) *
                C92323 +
            ((C41420 + C41421) * C244 + (C41622 + C41621) * C92110) * C92212) *
               C92310 +
           (((C31515 + C31514) * C244 + (C31712 + C31713) * C92110) * C92323 +
            ((C34722 + C34723) * C244 + (C34947 + C34946) * C92110) * C92212) *
               C92067) *
              C92099 * C93 -
          ((((C34948 + C34949) * C92110 + (C34727 + C34726) * C244) * C92212 +
            ((C31715 + C31714) * C92110 + (C31519 + C31518) * C244) * C92323) *
               C92067 +
           (((C34946 + C34947) * C92110 + (C34723 + C34722) * C244) * C92212 +
            ((C31713 + C31712) * C92110 + (C31514 + C31515) * C244) * C92323) *
               C92310) *
              C92099 * C94 +
          ((C31720 * C92323 +
            ((C34726 + C34727) * C244 + (C34949 + C34948) * C92110) * C92212) *
               C92310 +
           (((C31522 + C31523) * C244 + (C31717 + C31716) * C92110) * C92323 +
            ((C31487 * C1386 + C31260 * C1603 + C31488 * C3434 +
              C92186 * C3664) *
                 C244 +
             (C31487 * C1537 + C31260 * C1733 + C31488 * C3590 +
              C92186 * C3808) *
                 C92110) *
                C92212) *
               C92067) *
              C92099 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31487 * C107 + C31260 * C308 + C31488 * C805 + C92186 * C1022) *
                 C244 +
             (C31487 * C245 + C31260 * C474 + C31488 * C956 + C92186 * C1146) *
                 C92110) *
                C92323 +
            ((C41420 + C41421) * C244 + (C41622 + C41621) * C92110) * C92212) *
               C92310 +
           (((C31515 + C31514) * C244 + (C31712 + C31713) * C92110) * C92323 +
            ((C34722 + C34723) * C244 + (C34947 + C34946) * C92110) * C92212) *
               C92067) *
              C798 -
          ((((C31488 * C5957 + C92186 * C6210 + C31487 * C3588 +
              C31260 * C3806) *
                 C92110 +
             (C31488 * C5771 + C92186 * C6041 + C31487 * C3432 +
              C31260 * C3662) *
                 C244) *
                C92212 +
            ((C34018 + C34019) * C92110 + (C33793 + C33792) * C244) * C92323) *
               C92067 +
           (((C44390 + C44389) * C92110 + (C44164 + C44163) * C244) * C92212 +
            ((C31488 * C957 + C92186 * C1147 + C31487 * C956 + C31260 * C1146) *
                 C92110 +
             (C31488 * C806 + C92186 * C1023 + C31487 * C805 + C31260 * C1022) *
                 C244) *
                C92323) *
               C92310) *
              C799 +
          ((((C31487 * C806 + C31260 * C1023 + C31488 * C4882 +
              C92186 * C5218) *
                 C244 +
             (C31487 * C957 + C31260 * C1147 + C31488 * C5114 +
              C92186 * C5378) *
                 C92110) *
                C92323 +
            ((C31487 * C5772 + C31260 * C6042 + C31488 * C8536 +
              C92186 * C8894) *
                 C244 +
             (C31487 * C5958 + C31260 * C6207 + C31488 * C8780 +
              C92186 * C9096) *
                 C92110) *
                C92212) *
               C92310 +
           (((C31487 * C807 + C31260 * C1024 + C31488 * C4881 +
              C92186 * C5217) *
                 C244 +
             (C31487 * C958 + C31260 * C1148 + C31488 * C5113 +
              C92186 * C5377) *
                 C92110) *
                C92323 +
            ((C31487 * C5771 + C31260 * C6041 + C31488 * C8537 +
              C92186 * C8895) *
                 C244 +
             (C31487 * C5957 + C31260 * C6210 + C31488 * C8781 +
              C92186 * C9097) *
                 C92110) *
                C92212) *
               C92067) *
              C800) *
         C92078) /
            (p * q * std::sqrt(p + q));
    d2eezx[44] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C20274 * C107 + C92323 * C555 + C20275 * C1389 + C92212 * C1788) *
                C104 +
            (C20274 * C117 + C92323 * C561 + C20275 * C1397 + C92212 * C1796) *
                C93 -
            (C20301 + C20302) * C105 - (C20303 + C20304) * C94 + C20313 * C106 +
            C20314 * C95) *
               C92310 +
           ((C20302 + C20301) * C104 + (C20304 + C20303) * C93 -
            (C20306 + C20305) * C105 - (C20308 + C20307) * C94 +
            (C20309 + C20310) * C106 + (C20311 + C20312) * C95) *
               C92067) *
              C31260 +
          (((C26314 + C26315) * C104 + (C26316 + C26317) * C93 - C28470 * C105 -
            C28471 * C94 + (C22639 + C22640) * C106 + (C22641 + C22642) * C95) *
               C92310 +
           (C28472 * C104 + C28473 * C93 - (C22640 + C22639) * C105 -
            (C22642 + C22641) * C94 +
            (C20274 * C802 + C92323 * C1201 + C20275 * C3434 + C92212 * C3878) *
                C106 +
            (C20274 * C810 + C92323 * C1209 + C20275 * C3442 + C92212 * C3882) *
                C95) *
               C92067) *
              C92186) *
         C92110 * C92099) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C20274 * C107 + C92323 * C555 + C20275 * C1389 + C92212 * C1788) *
                 C801 +
             (C20274 * C117 + C92323 * C561 + C20275 * C1397 + C92212 * C1796) *
                 C92078) *
                C92310 +
            ((C20302 + C20301) * C801 + (C20304 + C20303) * C92078) * C92067) *
               C31260 +
           (((C26314 + C26315) * C801 + (C26316 + C26317) * C92078) * C92310 +
            (C28472 * C801 + C28473 * C92078) * C92067) *
               C92186) *
              C92110 * C798 -
          ((((C26318 + C26319) * C92078 + (C26320 + C26321) * C801) * C92067 +
            ((C26322 + C26323) * C92078 + (C26324 + C26325) * C801) * C92310) *
               C92186 +
           ((C28471 * C92078 + C28470 * C801) * C92067 +
            ((C26317 + C26316) * C92078 + (C26315 + C26314) * C801) * C92310) *
               C31260) *
              C92110 * C799 +
          ((((C26325 + C26324) * C801 + (C26323 + C26322) * C92078) * C92310 +
            ((C26321 + C26320) * C801 + (C26319 + C26318) * C92078) * C92067) *
               C31260 +
           (((C20274 * C4882 + C92323 * C5456 + C20275 * C8536 +
              C92212 * C9196) *
                 C801 +
             (C20274 * C4886 + C92323 * C5460 + C20275 * C8540 +
              C92212 * C9198) *
                 C92078) *
                C92310 +
            ((C20274 * C4881 + C92323 * C5455 + C20275 * C8537 +
              C92212 * C9197) *
                 C801 +
             (C20274 * C4885 + C92323 * C5459 + C20275 * C8541 +
              C92212 * C9199) *
                 C92078) *
                C92067) *
               C92186) *
              C92110 * C800)) /
            (p * q * std::sqrt(p + q));
    d2eezy[44] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C20274 * C107 + C92323 * C555 + C20275 * C1389 + C92212 * C1788) *
                 C181 +
             (C20274 * C182 + C92323 * C641 + C20275 * C1471 + C92212 * C1854) *
                 C92099) *
                C92310 +
            ((C20302 + C20301) * C181 + (C20402 + C20403) * C92099) * C92067) *
               C31260 +
           (((C26314 + C26315) * C181 + (C26437 + C26436) * C92099) * C92310 +
            (C28472 * C181 + C28605 * C92099) * C92067) *
               C92186) *
              C93 -
          ((((C22751 + C22752) * C92099 + (C22640 + C22639) * C181) * C92067 +
            (C28604 * C92099 + C28470 * C181) * C92310) *
               C92186 +
           (((C20405 + C20404) * C92099 + (C20306 + C20305) * C181) * C92067 +
            ((C20403 + C20402) * C92099 + (C20301 + C20302) * C181) * C92310) *
               C31260) *
              C94 +
          ((C20410 * C92310 +
            ((C20309 + C20310) * C181 + (C20407 + C20406) * C92099) * C92067) *
               C31260 +
           (((C22639 + C22640) * C181 + (C22752 + C22751) * C92099) * C92310 +
            ((C20274 * C802 + C92323 * C1201 + C20275 * C3434 +
              C92212 * C3878) *
                 C181 +
             (C20274 * C887 + C92323 * C1273 + C20275 * C3516 +
              C92212 * C3952) *
                 C92099) *
                C92067) *
               C92186) *
              C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C20274 * C107 + C92323 * C555 + C20275 * C1389 + C92212 * C1788) *
                C884 +
            (C20274 * C182 + C92323 * C641 + C20275 * C1471 + C92212 * C1854) *
                C798 -
            (C26315 + C26314) * C885 - (C26436 + C26437) * C799 +
            (C26325 + C26324) * C886 + (C26438 + C26439) * C800) *
               C92310 +
           ((C20302 + C20301) * C884 + (C20402 + C20403) * C798 -
            C28470 * C885 - C28604 * C799 + (C26321 + C26320) * C886 +
            (C26440 + C26441) * C800) *
               C92067) *
              C31260 +
          (((C26314 + C26315) * C884 + (C26437 + C26436) * C798 -
            (C26324 + C26325) * C885 - (C26439 + C26438) * C799 +
            (C20274 * C4882 + C92323 * C5456 + C20275 * C8536 +
             C92212 * C9196) *
                C886 +
            (C20274 * C5012 + C92323 * C5578 + C20275 * C8666 +
             C92212 * C9318) *
                C800) *
               C92310 +
           (C28472 * C884 + C28605 * C798 - (C26320 + C26321) * C885 -
            (C26441 + C26440) * C799 +
            (C20274 * C4881 + C92323 * C5455 + C20275 * C8537 +
             C92212 * C9197) *
                C886 +
            (C20274 * C5013 + C92323 * C5579 + C20275 * C8667 +
             C92212 * C9319) *
                C800) *
               C92067) *
              C92186) *
         C92078 * C92110) /
            (p * q * std::sqrt(p + q));
    d2eezz[44] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C20274 * C107 + C92323 * C555 + C20275 * C1389 + C92212 * C1788) *
                 C244 +
             (C20274 * C245 + C92323 * C719 + C20275 * C1540 + C92212 * C1909) *
                 C92110) *
                C92310 +
            ((C20302 + C20301) * C244 + (C20498 + C20499) * C92110) * C92067) *
               C31260 +
           (((C26314 + C26315) * C244 + (C26552 + C26553) * C92110) * C92310 +
            C28742 * C92067) *
               C92186) *
              C92099 * C93 -
          ((((C22859 + C22860) * C92110 + (C22640 + C22639) * C244) * C92067 +
            C28743 * C92310) *
               C92186 +
           (((C20501 + C20500) * C92110 + (C20306 + C20305) * C244) * C92067 +
            ((C20499 + C20498) * C92110 + (C20301 + C20302) * C244) * C92310) *
               C31260) *
              C92099 * C94 +
          ((C20506 * C92310 +
            ((C20309 + C20310) * C244 + (C20503 + C20502) * C92110) * C92067) *
               C31260 +
           (((C22639 + C22640) * C244 + (C22860 + C22859) * C92110) * C92310 +
            ((C20274 * C802 + C92323 * C1201 + C20275 * C3434 +
              C92212 * C3878) *
                 C244 +
             (C20274 * C953 + C92323 * C1325 + C20275 * C3590 +
              C92212 * C4022) *
                 C92110) *
                C92067) *
               C92186) *
              C92099 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C20274 * C107 + C92323 * C555 + C20275 * C1389 + C92212 * C1788) *
                 C244 +
             (C20274 * C245 + C92323 * C719 + C20275 * C1540 + C92212 * C1909) *
                 C92110) *
                C92310 +
            ((C20302 + C20301) * C244 + (C20498 + C20499) * C92110) * C92067) *
               C31260 +
           (((C26314 + C26315) * C244 + (C26552 + C26553) * C92110) * C92310 +
            C28742 * C92067) *
               C92186) *
              C798 -
          ((((C26554 + C26555) * C92110 + (C26320 + C26321) * C244) * C92067 +
            ((C26556 + C26557) * C92110 + (C26324 + C26325) * C244) * C92310) *
               C92186 +
           (C28743 * C92067 +
            ((C26553 + C26552) * C92110 + (C26315 + C26314) * C244) * C92310) *
               C31260) *
              C799 +
          ((((C26325 + C26324) * C244 + (C26557 + C26556) * C92110) * C92310 +
            ((C26321 + C26320) * C244 + (C26555 + C26554) * C92110) * C92067) *
               C31260 +
           (((C20274 * C4882 + C92323 * C5456 + C20275 * C8536 +
              C92212 * C9196) *
                 C244 +
             (C20274 * C5114 + C92323 * C5669 + C20275 * C8780 +
              C92212 * C9424) *
                 C92110) *
                C92310 +
            ((C20274 * C4881 + C92323 * C5455 + C20275 * C8537 +
              C92212 * C9197) *
                 C244 +
             (C20274 * C5113 + C92323 * C5668 + C20275 * C8781 +
              C92212 * C9425) *
                 C92110) *
                C92067) *
               C92186) *
              C800) *
         C92078) /
            (p * q * std::sqrt(p + q));
    d2eexx[45] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C31262 * C107 + C31257 * C113 + C31263 * C108 +
                       C31258 * C114 + C31264 * C109 + C31259 * C115) *
                          C1987 +
                      (C31262 * C117 + C31257 * C125 + C31263 * C118 +
                       C31258 * C126 + C31264 * C119 + C31259 * C127) *
                          C1983 -
                      (C31264 * C110 + C31259 * C116 + C31263 * C109 +
                       C31258 * C115 + C31262 * C108 + C31257 * C114) *
                          C1988 -
                      (C31264 * C120 + C31259 * C128 + C31263 * C119 +
                       C31258 * C127 + C31262 * C118 + C31257 * C126) *
                          C1984) *
                         C31260 +
                     ((C32042 + C32043 + C32044) * C1987 +
                      (C32045 + C32046 + C32047) * C1983 -
                      (C33458 + C33459 + C33460) * C1988 -
                      (C33461 + C33462 + C33463) * C1984) *
                         C92186) *
                        C92148 * C92110 * C1985 +
                    (((C33460 + C33459 + C33458) * C1988 -
                      ((C32047 + C32046 + C32045) * C1983 +
                       (C32044 + C32043 + C32042) * C1987) +
                      (C33463 + C33462 + C33461) * C1984) *
                         C31260 +
                     ((C31262 * C807 + C31257 * C819 + C31263 * C808 +
                       C31258 * C820 + C31264 * C809 + C31259 * C821) *
                          C1988 -
                      ((C32048 + C32049 + C32050) * C1983 +
                       (C32051 + C32052 + C32053) * C1987) +
                      (C31262 * C823 + C31257 * C831 + C31263 * C824 +
                       C31258 * C832 + C31264 * C825 + C31259 * C833) *
                          C1984) *
                         C92186) *
                        C92148 * C92110 * C1986)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C36216 * C107 + C92062 * C113) * C1987 +
                      (C36216 * C117 + C92062 * C125) * C1983 -
                      (C36216 * C108 + C92062 * C114) * C1988 -
                      (C36216 * C118 + C92062 * C126) * C1984) *
                         C36212 +
                     (C37710 + C37711 - C37734 - C37735) * C36213 +
                     (C37716 + C37717 - C37736 - C37737) * C36214 +
                     (C37722 + C37723 - C37738 - C37739) * C36215) *
                        C92148 * C92110 * C1985 +
                    ((C37734 - (C37711 + C37710) + C37735) * C36212 +
                     (C37736 - (C37717 + C37716) + C37737) * C36213 +
                     (C37738 - (C37723 + C37722) + C37739) * C36214 +
                     ((C36216 * C4884 + C92062 * C4890) * C1988 -
                      (C36698 * C1983 + C36699 * C1987) +
                      (C36216 * C4892 + C92062 * C4896) * C1984) *
                         C36215) *
                        C92148 * C92110 * C1986)) /
                      (p * q * std::sqrt(p + q));
    d2eexy[45] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31262 * C107 + C31257 * C113 + C31263 * C108 + C31258 * C114 +
             C31264 * C109 + C31259 * C115) *
                C2059 +
            (C31262 * C182 + C31257 * C188 + C31263 * C183 + C31258 * C189 +
             C31264 * C184 + C31259 * C190) *
                C1985 -
            (C32044 + C32043 + C32042) * C2060 -
            (C32140 + C32141 + C32142) * C1986) *
               C31260 +
           ((C32042 + C32043 + C32044) * C2059 +
            (C32142 + C32141 + C32140) * C1985 -
            (C32051 + C32052 + C32053) * C2060 -
            (C32145 + C32144 + C32143) * C1986) *
               C92186) *
              C92148 * C1983 +
          (((C33460 + C33459 + C33458) * C2060 -
            ((C31264 * C185 + C31259 * C191 + C31263 * C184 + C31258 * C190 +
              C31262 * C183 + C31257 * C189) *
                 C1985 +
             (C31264 * C110 + C31259 * C116 + C31263 * C109 + C31258 * C115 +
              C31262 * C108 + C31257 * C114) *
                 C2059) +
            (C33568 + C33569 + C33570) * C1986) *
               C31260 +
           ((C31262 * C807 + C31257 * C819 + C31263 * C808 + C31258 * C820 +
             C31264 * C809 + C31259 * C821) *
                C2060 -
            ((C33570 + C33569 + C33568) * C1985 +
             (C33458 + C33459 + C33460) * C2059) +
            (C31262 * C892 + C31257 * C900 + C31263 * C893 + C31258 * C901 +
             C31264 * C894 + C31259 * C902) *
                C1986) *
               C92186) *
              C92148 * C1984) *
         C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C36216 * C107 + C92062 * C113) * C2059 +
            (C36216 * C182 + C92062 * C188) * C1985 - C36692 * C2060 -
            C36770 * C1986) *
               C36212 +
           (C36692 * C2059 + C36770 * C1985 - C36694 * C2060 - C36771 * C1986) *
               C36213 +
           (C36694 * C2059 + C36771 * C1985 - C36696 * C2060 - C36772 * C1986) *
               C36214 +
           (C36696 * C2059 + C36772 * C1985 - C36699 * C2060 - C36773 * C1986) *
               C36215) *
              C92148 * C1983 +
          ((C37728 * C2060 -
            ((C36216 * C183 + C92062 * C189) * C1985 +
             (C36216 * C108 + C92062 * C114) * C2059) +
            C37812 * C1986) *
               C36212 +
           (C37730 * C2060 - (C37812 * C1985 + C37728 * C2059) +
            C37813 * C1986) *
               C36213 +
           (C37732 * C2060 - (C37813 * C1985 + C37730 * C2059) +
            C37814 * C1986) *
               C36214 +
           ((C36216 * C4884 + C92062 * C4890) * C2060 -
            (C37814 * C1985 + C37732 * C2059) +
            (C36216 * C5015 + C92062 * C5019) * C1986) *
               C36215) *
              C92148 * C1984) *
         C92110) /
            (p * q * std::sqrt(p + q));
    d2eexz[45] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31262 * C107 + C31257 * C113 + C31263 * C108 + C31258 * C114 +
              C31264 * C109 + C31259 * C115) *
                 C244 +
             (C31262 * C245 + C31257 * C251 + C31263 * C246 + C31258 * C252 +
              C31264 * C247 + C31259 * C253) *
                 C92110) *
                C31260 +
            ((C32042 + C32043 + C32044) * C244 +
             (C32232 + C32233 + C32234) * C92110) *
                C92186) *
               C92148 * C1985 -
           (((C32235 + C32236 + C32237) * C92110 +
             (C32051 + C32052 + C32053) * C244) *
                C92186 +
            ((C32234 + C32233 + C32232) * C92110 +
             (C32044 + C32043 + C32042) * C244) *
                C31260) *
               C92148 * C1986) *
              C1983 +
          ((((C33460 + C33459 + C33458) * C244 +
             (C33675 + C33676 + C33677) * C92110) *
                C31260 +
            ((C31262 * C807 + C31257 * C819 + C31263 * C808 + C31258 * C820 +
              C31264 * C809 + C31259 * C821) *
                 C244 +
             (C31262 * C958 + C31257 * C966 + C31263 * C959 + C31258 * C967 +
              C31264 * C960 + C31259 * C968) *
                 C92110) *
                C92186) *
               C92148 * C1986 -
           (((C33677 + C33676 + C33675) * C92110 +
             (C33458 + C33459 + C33460) * C244) *
                C92186 +
            ((C31264 * C248 + C31259 * C254 + C31263 * C247 + C31258 * C253 +
              C31262 * C246 + C31257 * C252) *
                 C92110 +
             (C31264 * C110 + C31259 * C116 + C31263 * C109 + C31258 * C115 +
              C31262 * C108 + C31257 * C114) *
                 C244) *
                C31260) *
               C92148 * C1985) *
              C1984)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C36216 * C107 + C92062 * C113) * C244 +
             (C36216 * C245 + C92062 * C251) * C92110) *
                C36212 +
            (C36826 + C36842) * C36213 + C36846 * C36214 + C36847 * C36215) *
               C92148 * C1985 -
           ((C36845 + C36837) * C36215 + (C36844 + C36832) * C36214 +
            (C36843 + C36829) * C36213 + (C36842 + C36826) * C36212) *
               C92148 * C1986) *
              C1983 +
          (((C37881 + C37893) * C36212 + (C37884 + C37894) * C36213 +
            (C37887 + C37895) * C36214 +
            ((C36216 * C4884 + C92062 * C4890) * C244 +
             (C36216 * C5116 + C92062 * C5120) * C92110) *
                C36215) *
               C92148 * C1986 -
           ((C37895 + C37887) * C36215 + (C37894 + C37884) * C36214 +
            (C37893 + C37881) * C36213 +
            ((C36216 * C246 + C92062 * C252) * C92110 +
             (C36216 * C108 + C92062 * C114) * C244) *
                C36212) *
               C92148 * C1985) *
              C1984)) /
            (p * q * std::sqrt(p + q));
    d2eeyx[45] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31487 * C107 + C31260 * C308 + C31488 * C805 + C92186 * C1022) *
                C1987 +
            (C31487 * C117 + C31260 * C314 + C31488 * C813 + C92186 * C1030) *
                C1983 -
            (C31514 + C31515) * C1988 - (C31516 + C31517) * C1984) *
               C92148 * C31257 +
           ((C31515 + C31514) * C1987 + (C31517 + C31516) * C1983 -
            (C31519 + C31518) * C1988 - (C31521 + C31520) * C1984) *
               C92148 * C31258 +
           (C31526 * C1987 + C31527 * C1983 - (C31523 + C31522) * C1988 -
            (C31525 + C31524) * C1984) *
               C92148 * C31259) *
              C92110 * C1985 +
          (((C33792 + C33793) * C1988 -
            ((C31488 * C822 + C92186 * C1031 + C31487 * C813 + C31260 * C1030) *
                 C1983 +
             (C31488 * C806 + C92186 * C1023 + C31487 * C805 + C31260 * C1022) *
                 C1987) +
            (C33794 + C33795) * C1984) *
               C92148 * C31257 +
           ((C33796 + C33797) * C1988 -
            ((C33795 + C33794) * C1983 + (C33793 + C33792) * C1987) +
            (C33798 + C33799) * C1984) *
               C92148 * C31258 +
           ((C31487 * C802 + C31260 * C1019 + C31488 * C809 + C92186 * C1026) *
                C1988 -
            ((C33799 + C33798) * C1983 + (C33797 + C33796) * C1987) +
            (C31487 * C810 + C31260 * C1027 + C31488 * C825 + C92186 * C1034) *
                C1984) *
               C92148 * C31259) *
              C92110 * C1986)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C36367 * C107 + C36212 * C308 + C36368 * C805 + C36213 * C1022 +
            C36369 * C806 + C36214 * C1023 + C36370 * C4882 + C36215 * C5218) *
               C1987 +
           (C36367 * C117 + C36212 * C314 + C36368 * C813 + C36213 * C1030 +
            C36369 * C822 + C36214 * C1031 + C36370 * C4886 + C36215 * C5222) *
               C1983 -
           (C36370 * C4881 + C36215 * C5217 + C36369 * C807 + C36214 * C1024 +
            C36368 * C804 + C36213 * C1021 + C36367 * C108 + C36212 * C309) *
               C1988 -
           (C36370 * C4885 + C36215 * C5221 + C36369 * C823 + C36214 * C1032 +
            C36368 * C812 + C36213 * C1029 + C36367 * C118 + C36212 * C315) *
               C1984) *
              C92148 * C92062 * C92110 * C1985 +
          ((C36367 * C804 + C36212 * C1021 + C36368 * C807 + C36213 * C1024 +
            C36369 * C4881 + C36214 * C5217 + C36370 * C4884 + C36215 * C5220) *
               C1988 -
           ((C36370 * C4891 + C36215 * C5223 + C36369 * C4886 + C36214 * C5222 +
             C36368 * C822 + C36213 * C1031 + C36367 * C813 + C36212 * C1030) *
                C1983 +
            (C36370 * C4883 + C36215 * C5219 + C36369 * C4882 + C36214 * C5218 +
             C36368 * C806 + C36213 * C1023 + C36367 * C805 + C36212 * C1022) *
                C1987) +
           (C36367 * C812 + C36212 * C1029 + C36368 * C823 + C36213 * C1032 +
            C36369 * C4885 + C36214 * C5221 + C36370 * C4892 + C36215 * C5224) *
               C1984) *
              C92148 * C92062 * C92110 * C1986)) /
            (p * q * std::sqrt(p + q));
    d2eeyy[45] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31487 * C107 + C31260 * C308 + C31488 * C805 + C92186 * C1022) *
                C2059 +
            (C31487 * C182 + C31260 * C394 + C31488 * C890 + C92186 * C1085) *
                C1985 -
            (C31488 * C806 + C92186 * C1023 + C31487 * C805 + C31260 * C1022) *
                C2060 -
            (C31488 * C891 + C92186 * C1086 + C31487 * C890 + C31260 * C1085) *
                C1986) *
               C92148 * C31257 +
           ((C31515 + C31514) * C2059 + (C31615 + C31616) * C1985 -
            (C33793 + C33792) * C2060 - (C33906 + C33907) * C1986) *
               C92148 * C31258 +
           (C31526 * C2059 + C31621 * C1985 - (C33797 + C33796) * C2060 -
            (C33908 + C33909) * C1986) *
               C92148 * C31259) *
              C1983 +
          (((C33792 + C33793) * C2060 -
            ((C31616 + C31615) * C1985 + (C31514 + C31515) * C2059) +
            (C33907 + C33906) * C1986) *
               C92148 * C31257 +
           ((C33796 + C33797) * C2060 -
            ((C31618 + C31617) * C1985 + (C31519 + C31518) * C2059) +
            (C33909 + C33908) * C1986) *
               C92148 * C31258 +
           ((C31487 * C802 + C31260 * C1019 + C31488 * C809 + C92186 * C1026) *
                C2060 -
            ((C31619 + C31620) * C1985 + (C31523 + C31522) * C2059) +
            (C31487 * C887 + C31260 * C1091 + C31488 * C894 + C92186 * C1092) *
                C1986) *
               C92148 * C31259) *
              C1984) *
         C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C36367 * C107 + C36212 * C308 + C36368 * C805 + C36213 * C1022 +
            C36369 * C806 + C36214 * C1023 + C36370 * C4882 + C36215 * C5218) *
               C2059 +
           (C36367 * C182 + C36212 * C394 + C36368 * C890 + C36213 * C1085 +
            C36369 * C891 + C36214 * C1086 + C36370 * C5012 + C36215 * C5299) *
               C1985 -
           (C36370 * C4883 + C36215 * C5219 + C36369 * C4882 + C36214 * C5218 +
            C36368 * C806 + C36213 * C1023 + C36367 * C805 + C36212 * C1022) *
               C2060 -
           (C36370 * C5014 + C36215 * C5300 + C36369 * C5012 + C36214 * C5299 +
            C36368 * C891 + C36213 * C1086 + C36367 * C890 + C36212 * C1085) *
               C1986) *
              C92148 * C92062 * C1983 +
          ((C36367 * C804 + C36212 * C1021 + C36368 * C807 + C36213 * C1024 +
            C36369 * C4881 + C36214 * C5217 + C36370 * C4884 + C36215 * C5220) *
               C2060 -
           ((C36370 * C5013 + C36215 * C5301 + C36369 * C892 + C36214 * C1088 +
             C36368 * C889 + C36213 * C1087 + C36367 * C183 + C36212 * C395) *
                C1985 +
            (C36370 * C4881 + C36215 * C5217 + C36369 * C807 + C36214 * C1024 +
             C36368 * C804 + C36213 * C1021 + C36367 * C108 + C36212 * C309) *
                C2059) +
           (C36367 * C889 + C36212 * C1087 + C36368 * C892 + C36213 * C1088 +
            C36369 * C5013 + C36214 * C5301 + C36370 * C5015 + C36215 * C5302) *
               C1986) *
              C92148 * C92062 * C1984) *
         C92110) /
            (p * q * std::sqrt(p + q));
    d2eeyz[45] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31487 * C107 + C31260 * C308 + C31488 * C805 + C92186 * C1022) *
                 C244 +
             (C31487 * C245 + C31260 * C474 + C31488 * C956 + C92186 * C1146) *
                 C92110) *
                C92148 * C31257 +
            ((C31515 + C31514) * C244 + (C31712 + C31713) * C92110) * C92148 *
                C31258 +
            C31721 * C31259) *
               C1985 -
           (((C34016 + C34017) * C92110 + (C33797 + C33796) * C244) * C92148 *
                C31259 +
            ((C34018 + C34019) * C92110 + (C33793 + C33792) * C244) * C92148 *
                C31258 +
            ((C31488 * C957 + C92186 * C1147 + C31487 * C956 + C31260 * C1146) *
                 C92110 +
             (C31488 * C806 + C92186 * C1023 + C31487 * C805 + C31260 * C1022) *
                 C244) *
                C92148 * C31257) *
               C1986) *
              C1983 +
          ((((C33792 + C33793) * C244 + (C34019 + C34018) * C92110) * C92148 *
                C31257 +
            ((C33796 + C33797) * C244 + (C34017 + C34016) * C92110) * C92148 *
                C31258 +
            ((C31487 * C802 + C31260 * C1019 + C31488 * C809 + C92186 * C1026) *
                 C244 +
             (C31487 * C953 + C31260 * C1143 + C31488 * C960 + C92186 * C1150) *
                 C92110) *
                C92148 * C31259) *
               C1986 -
           (((C31716 + C31717) * C92110 + (C31523 + C31522) * C244) * C92148 *
                C31259 +
            ((C31715 + C31714) * C92110 + (C31519 + C31518) * C244) * C92148 *
                C31258 +
            ((C31713 + C31712) * C92110 + (C31514 + C31515) * C244) * C92148 *
                C31257) *
               C1985) *
              C1984)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C36367 * C107 + C36212 * C308 + C36368 * C805 + C36213 * C1022 +
             C36369 * C806 + C36214 * C1023 + C36370 * C4882 + C36215 * C5218) *
                C244 +
            (C36367 * C245 + C36212 * C474 + C36368 * C956 + C36213 * C1146 +
             C36369 * C957 + C36214 * C1147 + C36370 * C5114 + C36215 * C5378) *
                C92110) *
               C92148 * C92062 * C1985 -
           ((C36370 * C5115 + C36215 * C5379 + C36369 * C5114 + C36214 * C5378 +
             C36368 * C957 + C36213 * C1147 + C36367 * C956 + C36212 * C1146) *
                C92110 +
            (C36370 * C4883 + C36215 * C5219 + C36369 * C4882 + C36214 * C5218 +
             C36368 * C806 + C36213 * C1023 + C36367 * C805 + C36212 * C1022) *
                C244) *
               C92148 * C92062 * C1986) *
              C1983 +
          (((C36367 * C804 + C36212 * C1021 + C36368 * C807 + C36213 * C1024 +
             C36369 * C4881 + C36214 * C5217 + C36370 * C4884 +
             C36215 * C5220) *
                C244 +
            (C36367 * C955 + C36212 * C1145 + C36368 * C958 + C36213 * C1148 +
             C36369 * C5113 + C36214 * C5377 + C36370 * C5116 +
             C36215 * C5380) *
                C92110) *
               C92148 * C92062 * C1986 -
           ((C36370 * C5113 + C36215 * C5377 + C36369 * C958 + C36214 * C1148 +
             C36368 * C955 + C36213 * C1145 + C36367 * C246 + C36212 * C475) *
                C92110 +
            (C36370 * C4881 + C36215 * C5217 + C36369 * C807 + C36214 * C1024 +
             C36368 * C804 + C36213 * C1021 + C36367 * C108 + C36212 * C309) *
                C244) *
               C92148 * C92062 * C1985) *
              C1984)) /
            (p * q * std::sqrt(p + q));
    d2eezx[45] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92148 * C555) * C1987 +
             (C554 * C117 + C92148 * C561) * C1983 - C584 * C1988 -
             C585 * C1984) *
                C31257 +
            (C584 * C1987 + C585 * C1983 - C586 * C1988 - C587 * C1984) *
                C31258 +
            (C586 * C1987 + C587 * C1983 - C588 * C1988 - C589 * C1984) *
                C31259) *
               C31260 +
           ((C7244 + C7245 - C7246 - C7247) * C31257 +
            (C7248 + C7249 - C7250 - C7251) * C31258 +
            (C17672 + C17673 - C17674 - C17675) * C31259) *
               C92186) *
              C92110 * C1985 +
          (((C7246 - (C7245 + C7244) + C7247) * C31257 +
            (C7250 - (C7249 + C7248) + C7251) * C31258 +
            (C17674 - (C17673 + C17672) + C17675) * C31259) *
               C31260 +
           ((C7254 - (C7253 + C7252) + C7255) * C31257 +
            (C7258 - (C7257 + C7256) + C7259) * C31258 +
            ((C554 * C809 + C92148 * C1208) * C1988 -
             (C4635 * C1983 + C4634 * C1987) +
             (C554 * C825 + C92148 * C1216) * C1984) *
                C31259) *
               C92186) *
              C92110 * C1986)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92148 * C555) * C1987 +
            (C554 * C117 + C92148 * C561) * C1983 - C584 * C1988 -
            C585 * C1984) *
               C92062 * C36212 +
           (C7244 + C7245 - C7246 - C7247) * C92062 * C36213 +
           (C7252 + C7253 - C7254 - C7255) * C92062 * C36214 +
           (C38160 + C38161 - C38162 - C38163) * C92062 * C36215) *
              C92110 * C1985 +
          ((C7246 - (C7245 + C7244) + C7247) * C92062 * C36212 +
           (C7254 - (C7253 + C7252) + C7255) * C92062 * C36213 +
           (C38162 - (C38161 + C38160) + C38163) * C92062 * C36214 +
           ((C554 * C4884 + C92148 * C5458) * C1988 -
            (C37061 * C1983 + C37062 * C1987) +
            (C554 * C4892 + C92148 * C5462) * C1984) *
               C92062 * C36215) *
              C92110 * C1986)) /
            (p * q * std::sqrt(p + q));
    d2eezy[45] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92148 * C555) * C2059 +
             (C554 * C182 + C92148 * C641) * C1985 - C5484 * C2060 -
             C5591 * C1986) *
                C31257 +
            (C2541 + C2542 - C2543 - C2559) * C31258 +
            (C2546 + C2547 - C2548 - C2560) * C31259) *
               C31260 +
           ((C5484 * C2059 + C5591 * C1985 - C5486 * C2060 - C5592 * C1986) *
                C31257 +
            (C7359 + C7360 - C7361 - C7362) * C31258 +
            (C17774 + C17775 - C17776 - C17777) * C31259) *
               C92186) *
              C1983 +
          (((C2543 - (C2542 + C2541) + C2559) * C31257 +
            (C2548 - (C2547 + C2546) + C2560) * C31258 +
            (C2553 - (C2552 + C2551) + C2561) * C31259) *
               C31260 +
           ((C7361 - (C7360 + C7359) + C7362) * C31257 +
            (C17776 - (C17775 + C17774) + C17777) * C31258 +
            ((C554 * C809 + C92148 * C1208) * C2060 -
             (C2558 * C1985 + C2472 * C2059) +
             (C554 * C894 + C92148 * C1274) * C1986) *
                C31259) *
               C92186) *
              C1984) *
         C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92148 * C555) * C2059 +
            (C554 * C182 + C92148 * C641) * C1985 - C5484 * C2060 -
            C5591 * C1986) *
               C92062 * C36212 +
           (C5484 * C2059 + C5591 * C1985 - C5486 * C2060 - C5592 * C1986) *
               C92062 * C36213 +
           (C5486 * C2059 + C5592 * C1985 - C5492 * C2060 - C5593 * C1986) *
               C92062 * C36214 +
           (C5492 * C2059 + C5593 * C1985 - C37062 * C2060 - C37118 * C1986) *
               C92062 * C36215) *
              C1983 +
          ((C2543 - (C2542 + C2541) + C2559) * C92062 * C36212 +
           (C7361 - (C7360 + C7359) + C7362) * C92062 * C36213 +
           (C7365 - (C7364 + C7363) + C7366) * C92062 * C36214 +
           ((C554 * C4884 + C92148 * C5458) * C2060 -
            (C5594 * C1985 + C5490 * C2059) +
            (C554 * C5015 + C92148 * C5581) * C1986) *
               C92062 * C36215) *
              C1984) *
         C92110) /
            (p * q * std::sqrt(p + q));
    d2eezz[45] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C554 * C107 + C92148 * C555) * C244 +
              (C554 * C245 + C92148 * C719) * C92110) *
                 C31257 +
             (C726 + C742) * C31258 + C746 * C31259) *
                C31260 +
            ((C5673 + C5691) * C31257 + C7466 * C31258 + C15493 * C31259) *
                C92186) *
               C1985 -
           (((C4807 + C4803) * C31259 + C7467 * C31258 +
             (C5692 + C5676) * C31257) *
                C92186 +
            (C17876 * C31259 + C7468 * C31258 + (C5691 + C5673) * C31257) *
                C31260) *
               C1986) *
              C1983 +
          (((C7466 * C31257 + C15493 * C31258 + (C2631 + C2641) * C31259) *
                C31260 +
            (C5679 * C31257 + (C4803 + C4807) * C31258 +
             ((C554 * C809 + C92148 * C1208) * C244 +
              (C554 * C960 + C92148 * C1332) * C92110) *
                 C31259) *
                C92186) *
               C1986 -
           (((C2641 + C2631) * C31259 + C17876 * C31258 + C7468 * C31257) *
                C92186 +
            ((C744 + C732) * C31259 + (C743 + C729) * C31258 +
             (C742 + C726) * C31257) *
                C31260) *
               C1985) *
              C1984)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92148 * C555) * C244 +
             (C554 * C245 + C92148 * C719) * C92110) *
                C92062 * C36212 +
            (C5673 + C5691) * C92062 * C36213 + C37170 * C36214 +
            C37175 * C36215) *
               C1985 -
           ((C37177 + C37174) * C92062 * C36215 +
            (C5694 + C5685) * C92062 * C36214 +
            (C5692 + C5676) * C92062 * C36213 +
            (C5691 + C5673) * C92062 * C36212) *
               C1986) *
              C1983 +
          ((C7466 * C92062 * C36212 + C5679 * C92062 * C36213 +
            (C5682 + C5693) * C92062 * C36214 +
            ((C554 * C4884 + C92148 * C5458) * C244 +
             (C554 * C5116 + C92148 * C5671) * C92110) *
                C92062 * C36215) *
               C1986 -
           ((C5693 + C5682) * C92062 * C36215 + C7467 * C92062 * C36214 +
            C7468 * C92062 * C36213 + (C742 + C726) * C92062 * C36212) *
               C1985) *
              C1984)) /
            (p * q * std::sqrt(p + q));
    d2eexx[46] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31262 * C107 + C31257 * C113 + C31263 * C108 + C31258 * C114 +
              C31264 * C109 + C31259 * C115) *
                 C801 +
             (C31262 * C117 + C31257 * C125 + C31263 * C118 + C31258 * C126 +
              C31264 * C119 + C31259 * C127) *
                 C92078) *
                C31260 +
            ((C32042 + C32043 + C32044) * C801 +
             (C32045 + C32046 + C32047) * C92078) *
                C92186) *
               C92148 * C2709 -
           (((C35354 + C35355 + C35356) * C92078 +
             (C35357 + C35358 + C35359) * C801) *
                C92186 +
            ((C31264 * C1395 + C31259 * C1411 + C31263 * C1396 +
              C31258 * C1412 + C31262 * C1397 + C31257 * C1413) *
                 C92078 +
             (C31264 * C1387 + C31259 * C1399 + C31263 * C1388 +
              C31258 * C1400 + C31262 * C1389 + C31257 * C1401) *
                 C801) *
                C31260) *
               C92148 * C2710) *
              C1985 +
          ((((C35359 + C35358 + C35357) * C801 +
             (C35356 + C35355 + C35354) * C92078) *
                C31260 +
            ((C31262 * C5772 + C31257 * C5780 + C31263 * C5771 +
              C31258 * C5779 + C31264 * C7566 + C31259 * C7567) *
                 C801 +
             (C31262 * C5778 + C31257 * C5790 + C31263 * C5777 +
              C31258 * C5789 + C31264 * C7568 + C31259 * C7569) *
                 C92078) *
                C92186) *
               C92148 * C2710 -
           (((C32048 + C32049 + C32050) * C92078 +
             (C32051 + C32052 + C32053) * C801) *
                C92186 +
            ((C32047 + C32046 + C32045) * C92078 +
             (C32044 + C32043 + C32042) * C801) *
                C31260) *
               C92148 * C2709) *
              C1986)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C36216 * C107 + C92062 * C113) * C801 +
             (C36216 * C117 + C92062 * C125) * C92078) *
                C36212 +
            (C36700 + C36701) * C36213 + C36708 * C36214 + C36709 * C36215) *
               C92148 * C2709 -
           ((C38978 + C38979) * C36215 + (C38980 + C38981) * C36214 +
            (C38982 + C38983) * C36213 +
            ((C36216 * C1397 + C92062 * C1413) * C92078 +
             (C36216 * C1389 + C92062 * C1401) * C801) *
                C36212) *
               C92148 * C2710) *
              C1985 +
          (((C38983 + C38982) * C36212 + (C38981 + C38980) * C36213 +
            (C38979 + C38978) * C36214 +
            ((C36216 * C38955 + C92062 * C38956) * C801 +
             (C36216 * C38957 + C92062 * C38958) * C92078) *
                C36215) *
               C92148 * C2710 -
           ((C36706 + C36707) * C36215 + (C36705 + C36704) * C36214 +
            (C36703 + C36702) * C36213 + (C36701 + C36700) * C36212) *
               C92148 * C2709) *
              C1986)) /
            (p * q * std::sqrt(p + q));
    d2eexy[46] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31262 * C107 + C31257 * C113 + C31263 * C108 + C31258 * C114 +
             C31264 * C109 + C31259 * C115) *
                C2059 +
            (C31262 * C182 + C31257 * C188 + C31263 * C183 + C31258 * C189 +
             C31264 * C184 + C31259 * C190) *
                C1985 -
            (C32044 + C32043 + C32042) * C2060 -
            (C32140 + C32141 + C32142) * C1986) *
               C31260 +
           ((C32042 + C32043 + C32044) * C2059 +
            (C32142 + C32141 + C32140) * C1985 -
            (C32051 + C32052 + C32053) * C2060 -
            (C32145 + C32144 + C32143) * C1986) *
               C92186) *
              C92148 * C92078 * C2709 +
          (((C35359 + C35358 + C35357) * C2060 -
            ((C31264 * C1469 + C31259 * C1477 + C31263 * C1470 +
              C31258 * C1478 + C31262 * C1471 + C31257 * C1479) *
                 C1985 +
             (C31264 * C1387 + C31259 * C1399 + C31263 * C1388 +
              C31258 * C1400 + C31262 * C1389 + C31257 * C1401) *
                 C2059) +
            (C35464 + C35465 + C35466) * C1986) *
               C31260 +
           ((C31262 * C5772 + C31257 * C5780 + C31263 * C5771 + C31258 * C5779 +
             C31264 * C7566 + C31259 * C7567) *
                C2060 -
            ((C35466 + C35465 + C35464) * C1985 +
             (C35357 + C35358 + C35359) * C2059) +
            (C31262 * C5870 + C31257 * C5876 + C31263 * C5869 + C31258 * C5875 +
             C31264 * C7668 + C31259 * C7669) *
                C1986) *
               C92186) *
              C92148 * C92078 * C2710)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C36216 * C107 + C92062 * C113) * C2059 +
            (C36216 * C182 + C92062 * C188) * C1985 - C36692 * C2060 -
            C36770 * C1986) *
               C36212 +
           (C36692 * C2059 + C36770 * C1985 - C36694 * C2060 - C36771 * C1986) *
               C36213 +
           (C36694 * C2059 + C36771 * C1985 - C36696 * C2060 - C36772 * C1986) *
               C36214 +
           (C36696 * C2059 + C36772 * C1985 - C36699 * C2060 - C36773 * C1986) *
               C36215) *
              C92148 * C92078 * C2709 +
          ((C38977 * C2060 -
            ((C36216 * C1471 + C92062 * C1479) * C1985 +
             (C36216 * C1389 + C92062 * C1401) * C2059) +
            C39058 * C1986) *
               C36212 +
           (C38975 * C2060 - (C39058 * C1985 + C38977 * C2059) +
            C39059 * C1986) *
               C36213 +
           (C38973 * C2060 - (C39059 * C1985 + C38975 * C2059) +
            C39060 * C1986) *
               C36214 +
           ((C36216 * C38955 + C92062 * C38956) * C2060 -
            (C39060 * C1985 + C38973 * C2059) +
            (C36216 * C39049 + C92062 * C39050) * C1986) *
               C36215) *
              C92148 * C92078 * C2710)) /
            (p * q * std::sqrt(p + q));
    d2eexz[46] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C31262 * C107 + C31257 * C113 + C31263 * C108 +
                       C31258 * C114 + C31264 * C109 + C31259 * C115) *
                          C2849 +
                      (C31262 * C245 + C31257 * C251 + C31263 * C246 +
                       C31258 * C252 + C31264 * C247 + C31259 * C253) *
                          C2709 -
                      (C31264 * C1387 + C31259 * C1399 + C31263 * C1388 +
                       C31258 * C1400 + C31262 * C1389 + C31257 * C1401) *
                          C2850 -
                      (C31264 * C1538 + C31259 * C1546 + C31263 * C1539 +
                       C31258 * C1547 + C31262 * C1540 + C31257 * C1548) *
                          C2710) *
                         C31260 +
                     ((C32042 + C32043 + C32044) * C2849 +
                      (C32232 + C32233 + C32234) * C2709 -
                      (C35357 + C35358 + C35359) * C2850 -
                      (C35571 + C35572 + C35573) * C2710) *
                         C92186) *
                        C92148 * C1985 +
                    (((C35359 + C35358 + C35357) * C2850 -
                      ((C32234 + C32233 + C32232) * C2709 +
                       (C32044 + C32043 + C32042) * C2849) +
                      (C35573 + C35572 + C35571) * C2710) *
                         C31260 +
                     ((C31262 * C5772 + C31257 * C5780 + C31263 * C5771 +
                       C31258 * C5779 + C31264 * C7566 + C31259 * C7567) *
                          C2850 -
                      ((C32235 + C32236 + C32237) * C2709 +
                       (C32051 + C32052 + C32053) * C2849) +
                      (C31262 * C5958 + C31257 * C5964 + C31263 * C5957 +
                       C31258 * C5963 + C31264 * C7768 + C31259 * C7769) *
                          C2710) *
                         C92186) *
                        C92148 * C1986) *
                   C92078) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C36216 * C107 + C92062 * C113) * C2849 +
                      (C36216 * C245 + C92062 * C251) * C2709 -
                      (C36216 * C1389 + C92062 * C1401) * C2850 -
                      (C36216 * C1540 + C92062 * C1548) * C2710) *
                         C36212 +
                     (C39129 + C39130 - C39131 - C39147) * C36213 +
                     (C39134 + C39135 - C39136 - C39148) * C36214 +
                     (C39139 + C39140 - C39141 - C39149) * C36215) *
                        C92148 * C1985 +
                    ((C39131 - (C39130 + C39129) + C39147) * C36212 +
                     (C39136 - (C39135 + C39134) + C39148) * C36213 +
                     (C39141 - (C39140 + C39139) + C39149) * C36214 +
                     ((C36216 * C38955 + C92062 * C38956) * C2850 -
                      (C36841 * C2709 + C36699 * C2849) +
                      (C36216 * C39126 + C92062 * C39127) * C2710) *
                         C36215) *
                        C92148 * C1986) *
                   C92078) /
                      (p * q * std::sqrt(p + q));
    d2eeyx[46] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31487 * C107 + C31260 * C308 + C31488 * C805 + C92186 * C1022) *
                 C801 +
             (C31487 * C117 + C31260 * C314 + C31488 * C813 + C92186 * C1030) *
                 C92078) *
                C92148 * C31257 +
            ((C31515 + C31514) * C801 + (C31517 + C31516) * C92078) * C92148 *
                C31258 +
            (C31526 * C801 + C31527 * C92078) * C92148 * C31259) *
               C2709 -
           (((C34729 + C34728) * C92078 + (C34727 + C34726) * C801) * C92148 *
                C31259 +
            ((C34725 + C34724) * C92078 + (C34723 + C34722) * C801) * C92148 *
                C31258 +
            ((C31488 * C3439 + C92186 * C3665 + C31487 * C1397 +
              C31260 * C1614) *
                 C92078 +
             (C31488 * C3431 + C92186 * C3661 + C31487 * C1389 +
              C31260 * C1606) *
                 C801) *
                C92148 * C31257) *
               C2710) *
              C1985 +
          ((((C31487 * C3431 + C31260 * C3661 + C31488 * C5772 +
              C92186 * C6042) *
                 C801 +
             (C31487 * C3439 + C31260 * C3665 + C31488 * C5778 +
              C92186 * C6048) *
                 C92078) *
                C92148 * C31257 +
            ((C31487 * C3432 + C31260 * C3662 + C31488 * C5771 +
              C92186 * C6041) *
                 C801 +
             (C31487 * C3440 + C31260 * C3666 + C31488 * C5777 +
              C92186 * C6047) *
                 C92078) *
                C92148 * C31258 +
            ((C31487 * C3433 + C31260 * C3663 + C31488 * C7566 +
              C92186 * C7868) *
                 C801 +
             (C31487 * C3441 + C31260 * C3667 + C31488 * C7568 +
              C92186 * C7869) *
                 C92078) *
                C92148 * C31259) *
               C2710 -
           (((C33799 + C33798) * C92078 + (C33797 + C33796) * C801) * C92148 *
                C31259 +
            ((C33795 + C33794) * C92078 + (C33793 + C33792) * C801) * C92148 *
                C31258 +
            ((C31488 * C822 + C92186 * C1031 + C31487 * C813 + C31260 * C1030) *
                 C92078 +
             (C31488 * C806 + C92186 * C1023 + C31487 * C805 + C31260 * C1022) *
                 C801) *
                C92148 * C31257) *
               C2709) *
              C1986)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C36367 * C107 + C36212 * C308 + C36368 * C805 + C36213 * C1022 +
             C36369 * C806 + C36214 * C1023 + C36370 * C4882 + C36215 * C5218) *
                C801 +
            (C36367 * C117 + C36212 * C314 + C36368 * C813 + C36213 * C1030 +
             C36369 * C822 + C36214 * C1031 + C36370 * C4886 + C36215 * C5222) *
                C92078) *
               C92148 * C92062 * C2709 -
           ((C36370 * C8540 + C36215 * C8896 + C36369 * C5778 + C36214 * C6048 +
             C36368 * C3439 + C36213 * C3665 + C36367 * C1397 +
             C36212 * C1614) *
                C92078 +
            (C36370 * C8536 + C36215 * C8894 + C36369 * C5772 + C36214 * C6042 +
             C36368 * C3431 + C36213 * C3661 + C36367 * C1389 +
             C36212 * C1606) *
                C801) *
               C92148 * C92062 * C2710) *
              C1985 +
          (((C36367 * C3431 + C36212 * C3661 + C36368 * C5772 + C36213 * C6042 +
             C36369 * C8536 + C36214 * C8894 + C36370 * C38955 +
             C36215 * C39215) *
                C801 +
            (C36367 * C3439 + C36212 * C3665 + C36368 * C5778 + C36213 * C6048 +
             C36369 * C8540 + C36214 * C8896 + C36370 * C38957 +
             C36215 * C39216) *
                C92078) *
               C92148 * C92062 * C2710 -
           ((C36370 * C4891 + C36215 * C5223 + C36369 * C4886 + C36214 * C5222 +
             C36368 * C822 + C36213 * C1031 + C36367 * C813 + C36212 * C1030) *
                C92078 +
            (C36370 * C4883 + C36215 * C5219 + C36369 * C4882 + C36214 * C5218 +
             C36368 * C806 + C36213 * C1023 + C36367 * C805 + C36212 * C1022) *
                C801) *
               C92148 * C92062 * C2709) *
              C1986)) /
            (p * q * std::sqrt(p + q));
    d2eeyy[46] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31487 * C107 + C31260 * C308 + C31488 * C805 + C92186 * C1022) *
                C2059 +
            (C31487 * C182 + C31260 * C394 + C31488 * C890 + C92186 * C1085) *
                C1985 -
            (C31488 * C806 + C92186 * C1023 + C31487 * C805 + C31260 * C1022) *
                C2060 -
            (C31488 * C891 + C92186 * C1086 + C31487 * C890 + C31260 * C1085) *
                C1986) *
               C92148 * C31257 +
           ((C31515 + C31514) * C2059 + (C31615 + C31616) * C1985 -
            (C33793 + C33792) * C2060 - (C33906 + C33907) * C1986) *
               C92148 * C31258 +
           (C31526 * C2059 + C31621 * C1985 - (C33797 + C33796) * C2060 -
            (C33908 + C33909) * C1986) *
               C92148 * C31259) *
              C92078 * C2709 +
          (((C31487 * C3431 + C31260 * C3661 + C31488 * C5772 +
             C92186 * C6042) *
                C2060 -
            ((C31488 * C3513 + C92186 * C3735 + C31487 * C1471 +
              C31260 * C1672) *
                 C1985 +
             (C31488 * C3431 + C92186 * C3661 + C31487 * C1389 +
              C31260 * C1606) *
                 C2059) +
            (C31487 * C3513 + C31260 * C3735 + C31488 * C5870 +
             C92186 * C6128) *
                C1986) *
               C92148 * C31257 +
           ((C31487 * C3432 + C31260 * C3662 + C31488 * C5771 +
             C92186 * C6041) *
                C2060 -
            ((C34837 + C34836) * C1985 + (C34723 + C34722) * C2059) +
            (C31487 * C3514 + C31260 * C3736 + C31488 * C5869 +
             C92186 * C6127) *
                C1986) *
               C92148 * C31258 +
           ((C31487 * C3433 + C31260 * C3663 + C31488 * C7566 +
             C92186 * C7868) *
                C2060 -
            ((C34839 + C34838) * C1985 + (C34727 + C34726) * C2059) +
            (C31487 * C3515 + C31260 * C3737 + C31488 * C7668 +
             C92186 * C7986) *
                C1986) *
               C92148 * C31259) *
              C92078 * C2710)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C36367 * C107 + C36212 * C308 + C36368 * C805 + C36213 * C1022 +
            C36369 * C806 + C36214 * C1023 + C36370 * C4882 + C36215 * C5218) *
               C2059 +
           (C36367 * C182 + C36212 * C394 + C36368 * C890 + C36213 * C1085 +
            C36369 * C891 + C36214 * C1086 + C36370 * C5012 + C36215 * C5299) *
               C1985 -
           (C36370 * C4883 + C36215 * C5219 + C36369 * C4882 + C36214 * C5218 +
            C36368 * C806 + C36213 * C1023 + C36367 * C805 + C36212 * C1022) *
               C2060 -
           (C36370 * C5014 + C36215 * C5300 + C36369 * C5012 + C36214 * C5299 +
            C36368 * C891 + C36213 * C1086 + C36367 * C890 + C36212 * C1085) *
               C1986) *
              C92148 * C92062 * C92078 * C2709 +
          ((C36367 * C3431 + C36212 * C3661 + C36368 * C5772 + C36213 * C6042 +
            C36369 * C8536 + C36214 * C8894 + C36370 * C38955 +
            C36215 * C39215) *
               C2060 -
           ((C36370 * C8666 + C36215 * C8996 + C36369 * C5870 + C36214 * C6128 +
             C36368 * C3513 + C36213 * C3735 + C36367 * C1471 +
             C36212 * C1672) *
                C1985 +
            (C36370 * C8536 + C36215 * C8894 + C36369 * C5772 + C36214 * C6042 +
             C36368 * C3431 + C36213 * C3661 + C36367 * C1389 +
             C36212 * C1606) *
                C2059) +
           (C36367 * C3513 + C36212 * C3735 + C36368 * C5870 + C36213 * C6128 +
            C36369 * C8666 + C36214 * C8996 + C36370 * C39049 +
            C36215 * C39283) *
               C1986) *
              C92148 * C92062 * C92078 * C2710)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[46] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31487 * C107 + C31260 * C308 + C31488 * C805 + C92186 * C1022) *
                C2849 +
            (C31487 * C245 + C31260 * C474 + C31488 * C956 + C92186 * C1146) *
                C2709 -
            (C31488 * C3431 + C92186 * C3661 + C31487 * C1389 +
             C31260 * C1606) *
                C2850 -
            (C31488 * C3587 + C92186 * C3805 + C31487 * C1540 +
             C31260 * C1727) *
                C2710) *
               C92148 * C31257 +
           ((C31515 + C31514) * C2849 + (C31712 + C31713) * C2709 -
            (C34723 + C34722) * C2850 - (C34946 + C34947) * C2710) *
               C92148 * C31258 +
           (C31526 * C2849 + C31718 * C2709 - (C34727 + C34726) * C2850 -
            (C34948 + C34949) * C2710) *
               C92148 * C31259) *
              C1985 +
          (((C31487 * C3431 + C31260 * C3661 + C31488 * C5772 +
             C92186 * C6042) *
                C2850 -
            ((C31488 * C957 + C92186 * C1147 + C31487 * C956 + C31260 * C1146) *
                 C2709 +
             (C31488 * C806 + C92186 * C1023 + C31487 * C805 + C31260 * C1022) *
                 C2849) +
            (C31487 * C3587 + C31260 * C3805 + C31488 * C5958 +
             C92186 * C6207) *
                C2710) *
               C92148 * C31257 +
           ((C31487 * C3432 + C31260 * C3662 + C31488 * C5771 +
             C92186 * C6041) *
                C2850 -
            ((C34018 + C34019) * C2709 + (C33793 + C33792) * C2849) +
            (C31487 * C3588 + C31260 * C3806 + C31488 * C5957 +
             C92186 * C6210) *
                C2710) *
               C92148 * C31258 +
           ((C31487 * C3433 + C31260 * C3663 + C31488 * C7566 +
             C92186 * C7868) *
                C2850 -
            ((C34016 + C34017) * C2709 + (C33797 + C33796) * C2849) +
            (C31487 * C3589 + C31260 * C3807 + C31488 * C7768 +
             C92186 * C8094) *
                C2710) *
               C92148 * C31259) *
              C1986) *
         C92078) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C36367 * C107 + C36212 * C308 + C36368 * C805 + C36213 * C1022 +
            C36369 * C806 + C36214 * C1023 + C36370 * C4882 + C36215 * C5218) *
               C2849 +
           (C36367 * C245 + C36212 * C474 + C36368 * C956 + C36213 * C1146 +
            C36369 * C957 + C36214 * C1147 + C36370 * C5114 + C36215 * C5378) *
               C2709 -
           (C36370 * C8536 + C36215 * C8894 + C36369 * C5772 + C36214 * C6042 +
            C36368 * C3431 + C36213 * C3661 + C36367 * C1389 + C36212 * C1606) *
               C2850 -
           (C36370 * C8780 + C36215 * C9096 + C36369 * C5958 + C36214 * C6207 +
            C36368 * C3587 + C36213 * C3805 + C36367 * C1540 + C36212 * C1727) *
               C2710) *
              C92148 * C92062 * C1985 +
          ((C36367 * C3431 + C36212 * C3661 + C36368 * C5772 + C36213 * C6042 +
            C36369 * C8536 + C36214 * C8894 + C36370 * C38955 +
            C36215 * C39215) *
               C2850 -
           ((C36370 * C5115 + C36215 * C5379 + C36369 * C5114 + C36214 * C5378 +
             C36368 * C957 + C36213 * C1147 + C36367 * C956 + C36212 * C1146) *
                C2709 +
            (C36370 * C4883 + C36215 * C5219 + C36369 * C4882 + C36214 * C5218 +
             C36368 * C806 + C36213 * C1023 + C36367 * C805 + C36212 * C1022) *
                C2849) +
           (C36367 * C3587 + C36212 * C3805 + C36368 * C5958 + C36213 * C6207 +
            C36369 * C8780 + C36214 * C9096 + C36370 * C39126 +
            C36215 * C39350) *
               C2710) *
              C92148 * C92062 * C1986) *
         C92078) /
            (p * q * std::sqrt(p + q));
    d2eezx[46] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((((C554 * C107 + C92148 * C555) * C801 +
                        (C554 * C117 + C92148 * C561) * C92078) *
                           C31257 +
                       (C584 * C801 + C585 * C92078) * C31258 +
                       (C586 * C801 + C587 * C92078) * C31259) *
                          C31260 +
                      ((C5493 + C5494) * C31257 + (C5468 + C5469) * C31258 +
                       (C16084 + C16085) * C31259) *
                          C92186) *
                         C2709 -
                     (((C19547 + C19548) * C31259 + (C9207 + C9208) * C31258 +
                       (C9219 + C9220) * C31257) *
                          C92186 +
                      ((C3193 * C92078 + C3192 * C801) * C31259 +
                       (C3191 * C92078 + C3190 * C801) * C31258 +
                       ((C554 * C1397 + C92148 * C1796) * C92078 +
                        (C554 * C1389 + C92148 * C1788) * C801) *
                           C31257) *
                          C31260) *
                         C2710) *
                        C1985 +
                    ((((C9220 + C9219) * C31257 + (C9208 + C9207) * C31258 +
                       (C19548 + C19547) * C31259) *
                          C31260 +
                      ((C9218 + C9217) * C31257 + (C9202 + C9201) * C31258 +
                       ((C554 * C7566 + C92148 * C8202) * C801 +
                        (C554 * C7568 + C92148 * C8203) * C92078) *
                           C31259) *
                          C92186) *
                         C2710 -
                     (((C16086 + C16087) * C31259 + (C5475 + C5474) * C31258 +
                       (C5496 + C5495) * C31257) *
                          C92186 +
                      ((C16085 + C16084) * C31259 + (C5469 + C5468) * C31258 +
                       (C5494 + C5493) * C31257) *
                          C31260) *
                         C2709) *
                        C1986)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((((C554 * C107 + C92148 * C555) * C801 +
                       (C554 * C117 + C92148 * C561) * C92078) *
                          C92062 * C36212 +
                      (C5493 + C5494) * C92062 * C36213 + C37054 * C36214 +
                      C37060 * C36215) *
                         C2709 -
                     ((C39426 + C39427) * C92062 * C36215 +
                      (C9217 + C9218) * C92062 * C36214 +
                      (C9219 + C9220) * C92062 * C36213 +
                      ((C554 * C1397 + C92148 * C1796) * C92078 +
                       (C554 * C1389 + C92148 * C1788) * C801) *
                          C92062 * C36212) *
                         C2710) *
                        C1985 +
                    (((C9220 + C9219) * C92062 * C36212 +
                      (C9218 + C9217) * C92062 * C36213 +
                      (C39427 + C39426) * C92062 * C36214 +
                      ((C554 * C38955 + C92148 * C39417) * C801 +
                       (C554 * C38957 + C92148 * C39418) * C92078) *
                          C92062 * C36215) *
                         C2710 -
                     ((C37063 + C37064) * C92062 * C36215 +
                      (C5500 + C5501) * C92062 * C36214 +
                      (C5496 + C5495) * C92062 * C36213 +
                      (C5494 + C5493) * C92062 * C36212) *
                         C2709) *
                        C1986)) /
                      (p * q * std::sqrt(p + q));
    d2eezy[46] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92148 * C555) * C2059 +
             (C554 * C182 + C92148 * C641) * C1985 - C5484 * C2060 -
             C5591 * C1986) *
                C31257 +
            (C2541 + C2542 - C2543 - C2559) * C31258 +
            (C2546 + C2547 - C2548 - C2560) * C31259) *
               C31260 +
           ((C5484 * C2059 + C5591 * C1985 - C5486 * C2060 - C5592 * C1986) *
                C31257 +
            (C7359 + C7360 - C7361 - C7362) * C31258 +
            (C17774 + C17775 - C17776 - C17777) * C31259) *
               C92186) *
              C92078 * C2709 +
          (((C9216 * C2060 -
             ((C554 * C1471 + C92148 * C1854) * C1985 +
              (C554 * C1389 + C92148 * C1788) * C2059) +
             C9325 * C1986) *
                C31257 +
            (C8213 * C2060 - (C3272 * C1985 + C3190 * C2059) + C8322 * C1986) *
                C31258 +
            (C18615 * C2060 - (C3273 * C1985 + C3192 * C2059) +
             C18718 * C1986) *
                C31259) *
               C31260 +
           ((C9214 * C2060 - (C9325 * C1985 + C9216 * C2059) + C9326 * C1986) *
                C31257 +
            (C8215 * C2060 - (C8322 * C1985 + C8213 * C2059) + C8323 * C1986) *
                C31258 +
            ((C554 * C7566 + C92148 * C8202) * C2060 -
             (C18718 * C1985 + C18615 * C2059) +
             (C554 * C7668 + C92148 * C8314) * C1986) *
                C31259) *
               C92186) *
              C92078 * C2710)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92148 * C555) * C2059 +
            (C554 * C182 + C92148 * C641) * C1985 - C5484 * C2060 -
            C5591 * C1986) *
               C92062 * C36212 +
           (C5484 * C2059 + C5591 * C1985 - C5486 * C2060 - C5592 * C1986) *
               C92062 * C36213 +
           (C5486 * C2059 + C5592 * C1985 - C5492 * C2060 - C5593 * C1986) *
               C92062 * C36214 +
           (C5492 * C2059 + C5593 * C1985 - C37062 * C2060 - C37118 * C1986) *
               C92062 * C36215) *
              C92078 * C2709 +
          ((C9216 * C2060 -
            ((C554 * C1471 + C92148 * C1854) * C1985 +
             (C554 * C1389 + C92148 * C1788) * C2059) +
            C9325 * C1986) *
               C92062 * C36212 +
           (C9214 * C2060 - (C9325 * C1985 + C9216 * C2059) + C9326 * C1986) *
               C92062 * C36213 +
           (C39425 * C2060 - (C9326 * C1985 + C9214 * C2059) + C39497 * C1986) *
               C92062 * C36214 +
           ((C554 * C38955 + C92148 * C39417) * C2060 -
            (C39497 * C1985 + C39425 * C2059) +
            (C554 * C39049 + C92148 * C39493) * C1986) *
               C92062 * C36215) *
              C92078 * C2710)) /
            (p * q * std::sqrt(p + q));
    d2eezz[46] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((((C554 * C107 + C92148 * C555) * C2849 +
                       (C554 * C245 + C92148 * C719) * C2709 -
                       (C554 * C1389 + C92148 * C1788) * C2850 -
                       (C554 * C1540 + C92148 * C1909) * C2710) *
                          C31257 +
                      (C3345 + C3346 - C3347 - C3363) * C31258 +
                      (C3350 + C3351 - C3352 - C3364) * C31259) *
                         C31260 +
                     ((C9427 + C9428 - C9429 - C9439) * C31257 +
                      (C8425 + C8426 - C8427 - C8437) * C31258 +
                      (C18818 + C18819 - C18820 - C18824) * C31259) *
                         C92186) *
                        C1985 +
                    (((C9429 - (C9428 + C9427) + C9439) * C31257 +
                      (C8427 - (C8426 + C8425) + C8437) * C31258 +
                      (C18820 - (C18819 + C18818) + C18824) * C31259) *
                         C31260 +
                     ((C9434 - (C9433 + C9432) + C9440) * C31257 +
                      (C8432 - (C8431 + C8430) + C8438) * C31258 +
                      ((C554 * C7566 + C92148 * C8202) * C2850 -
                       (C4805 * C2709 + C4634 * C2849) +
                       (C554 * C7768 + C92148 * C8423) * C2710) *
                          C31259) *
                         C92186) *
                        C1986) *
                   C92078) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C554 * C107 + C92148 * C555) * C2849 +
                      (C554 * C245 + C92148 * C719) * C2709 -
                      (C554 * C1389 + C92148 * C1788) * C2850 -
                      (C554 * C1540 + C92148 * C1909) * C2710) *
                         C92062 * C36212 +
                     (C9427 + C9428 - C9429 - C9439) * C92062 * C36213 +
                     (C9432 + C9433 - C9434 - C9440) * C92062 * C36214 +
                     (C39565 + C39566 - C39567 - C39571) * C92062 * C36215) *
                        C1985 +
                    ((C9429 - (C9428 + C9427) + C9439) * C92062 * C36212 +
                     (C9434 - (C9433 + C9432) + C9440) * C92062 * C36213 +
                     (C39567 - (C39566 + C39565) + C39571) * C92062 * C36214 +
                     ((C554 * C38955 + C92148 * C39417) * C2850 -
                      (C37176 * C2709 + C37062 * C2849) +
                      (C554 * C39126 + C92148 * C39563) * C2710) *
                         C92062 * C36215) *
                        C1986) *
                   C92078) /
                      (p * q * std::sqrt(p + q));
    d2eexx[47] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31262 * C107 + C31257 * C113 + C31263 * C108 + C31258 * C114 +
             C31264 * C109 + C31259 * C115) *
                C801 +
            (C31262 * C117 + C31257 * C125 + C31263 * C118 + C31258 * C126 +
             C31264 * C119 + C31259 * C127) *
                C92078) *
               C31260 +
           ((C32042 + C32043 + C32044) * C801 +
            (C32045 + C32046 + C32047) * C92078) *
               C92186) *
              C92148 * C92110 * C798 -
          (((C32048 + C32049 + C32050) * C92078 +
            (C32051 + C32052 + C32053) * C801) *
               C92186 +
           ((C32047 + C32046 + C32045) * C92078 +
            (C32044 + C32043 + C32042) * C801) *
               C31260) *
              C92148 * C92110 * C799 +
          (((C32053 + C32052 + C32051) * C801 +
            (C32050 + C32049 + C32048) * C92078) *
               C31260 +
           ((C31262 * C4882 + C31257 * C4888 + C31263 * C4881 + C31258 * C4887 +
             C31264 * C6557 + C31259 * C6558) *
                C801 +
            (C31262 * C4886 + C31257 * C4894 + C31263 * C4885 + C31258 * C4893 +
             C31264 * C6559 + C31259 * C6560) *
                C92078) *
               C92186) *
              C92148 * C92110 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C31262 * C107 + C31257 * C113 + C31263 * C108 + C31258 * C114 +
            C31264 * C109 + C31259 * C115) *
               C104 +
           (C31262 * C117 + C31257 * C125 + C31263 * C118 + C31258 * C126 +
            C31264 * C119 + C31259 * C127) *
               C93 -
           (C31264 * C110 + C31259 * C116 + C31263 * C109 + C31258 * C115 +
            C31262 * C108 + C31257 * C114) *
               C105 -
           (C31264 * C120 + C31259 * C128 + C31263 * C119 + C31258 * C127 +
            C31262 * C118 + C31257 * C126) *
               C94 +
           (C31262 * C109 + C31257 * C115 + C31263 * C110 + C31258 * C116 +
            C31264 * C111 + C31259 * C121) *
               C106 +
           (C31262 * C119 + C31257 * C127 + C31263 * C120 + C31258 * C128 +
            C31264 * C122 + C31259 * C129) *
               C95) *
              C31260 +
          ((C31262 * C805 + C31257 * C817 + C31263 * C804 + C31258 * C816 +
            C31264 * C803 + C31259 * C815) *
               C104 +
           (C31262 * C813 + C31257 * C829 + C31263 * C812 + C31258 * C828 +
            C31264 * C811 + C31259 * C827) *
               C93 -
           (C31264 * C802 + C31259 * C814 + C31263 * C803 + C31258 * C815 +
            C31262 * C804 + C31257 * C816) *
               C105 -
           (C31264 * C810 + C31259 * C826 + C31263 * C811 + C31258 * C827 +
            C31262 * C812 + C31257 * C828) *
               C94 +
           (C31262 * C803 + C31257 * C815 + C31263 * C802 + C31258 * C814 +
            C31264 * C1989 + C31259 * C1990) *
               C106 +
           (C31262 * C811 + C31257 * C827 + C31263 * C810 + C31258 * C826 +
            C31264 * C1991 + C31259 * C1992) *
               C95) *
              C92186) *
         C92148 * C92110 * C92099) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31262 * C107 + C31257 * C113 + C31263 * C108 + C31258 * C114 +
             C31264 * C109 + C31259 * C115) *
                C801 +
            (C31262 * C117 + C31257 * C125 + C31263 * C118 + C31258 * C126 +
             C31264 * C119 + C31259 * C127) *
                C92078) *
               C31260 +
           ((C32042 + C32043 + C32044) * C801 +
            (C32045 + C32046 + C32047) * C92078) *
               C92186) *
              C92148 * C1383 -
          (((C31264 * C3441 + C31259 * C3445 + C31263 * C3440 + C31258 * C3444 +
             C31262 * C3439 + C31257 * C3443) *
                C92078 +
            (C31264 * C3433 + C31259 * C3437 + C31263 * C3432 + C31258 * C3436 +
             C31262 * C3431 + C31257 * C3435) *
                C801) *
               C92186 +
           ((C31264 * C1395 + C31259 * C1411 + C31263 * C1396 + C31258 * C1412 +
             C31262 * C1397 + C31257 * C1413) *
                C92078 +
            (C31264 * C1387 + C31259 * C1399 + C31263 * C1388 + C31258 * C1400 +
             C31262 * C1389 + C31257 * C1401) *
                C801) *
               C31260) *
              C92148 * C1384 +
          (((C31262 * C1390 + C31257 * C1402 + C31263 * C1391 + C31258 * C1403 +
             C31264 * C1392 + C31259 * C1404) *
                C801 +
            (C31262 * C1406 + C31257 * C1414 + C31263 * C1407 + C31258 * C1415 +
             C31264 * C1408 + C31259 * C1416) *
                C92078) *
               C31260 +
           ((C31262 * C5773 + C31257 * C5781 + C31263 * C5774 + C31258 * C5782 +
             C31264 * C11870 + C31259 * C11871) *
                C801 +
            (C31262 * C5783 + C31257 * C5791 + C31263 * C5784 + C31258 * C5792 +
             C31264 * C11872 + C31259 * C11873) *
                C92078) *
               C92186) *
              C92148 * C1385) *
         C92099) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C36216 * C107 + C92062 * C113) * C104 +
           (C36216 * C117 + C92062 * C125) * C93 -
           (C36216 * C108 + C92062 * C114) * C105 -
           (C36216 * C118 + C92062 * C126) * C94 +
           (C36216 * C109 + C92062 * C115) * C106 +
           (C36216 * C119 + C92062 * C127) * C95) *
              C36212 +
          ((C36216 * C805 + C92062 * C817) * C104 +
           (C36216 * C813 + C92062 * C829) * C93 -
           (C36216 * C804 + C92062 * C816) * C105 -
           (C36216 * C812 + C92062 * C828) * C94 +
           (C36216 * C803 + C92062 * C815) * C106 +
           (C36216 * C811 + C92062 * C827) * C95) *
              C36213 +
          ((C36216 * C806 + C92062 * C818) * C104 +
           (C36216 * C822 + C92062 * C830) * C93 -
           (C36216 * C807 + C92062 * C819) * C105 -
           (C36216 * C823 + C92062 * C831) * C94 +
           (C36216 * C808 + C92062 * C820) * C106 +
           (C36216 * C824 + C92062 * C832) * C95) *
              C36214 +
          ((C36216 * C4882 + C92062 * C4888) * C104 +
           (C36216 * C4886 + C92062 * C4894) * C93 -
           (C36216 * C4881 + C92062 * C4887) * C105 -
           (C36216 * C4885 + C92062 * C4893) * C94 +
           (C36216 * C6557 + C92062 * C6558) * C106 +
           (C36216 * C6559 + C92062 * C6560) * C95) *
              C36215) *
         C92148 * C92110 * C92099) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C36216 * C107 + C92062 * C113) * C801 +
            (C36216 * C117 + C92062 * C125) * C92078) *
               C36212 +
           (C36700 + C36701) * C36213 + C36708 * C36214 + C36709 * C36215) *
              C92148 * C92110 * C798 -
          ((C36706 + C36707) * C36215 + (C36705 + C36704) * C36214 +
           (C36703 + C36702) * C36213 + (C36701 + C36700) * C36212) *
              C92148 * C92110 * C799 +
          (C36708 * C36212 + C36709 * C36213 + (C36707 + C36706) * C36214 +
           ((C36216 * C36671 + C92062 * C36672) * C801 +
            (C36216 * C36673 + C92062 * C36674) * C92078) *
               C36215) *
              C92148 * C92110 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C36216 * C107 + C92062 * C113) * C801 +
            (C36216 * C117 + C92062 * C125) * C92078) *
               C36212 +
           (C36700 + C36701) * C36213 + C36708 * C36214 + C36709 * C36215) *
              C92148 * C1383 -
          (((C36216 * C8540 + C92062 * C8542) * C92078 +
            (C36216 * C8536 + C92062 * C8538) * C801) *
               C36215 +
           ((C36216 * C5778 + C92062 * C5790) * C92078 +
            (C36216 * C5772 + C92062 * C5780) * C801) *
               C36214 +
           ((C36216 * C3439 + C92062 * C3443) * C92078 +
            (C36216 * C3431 + C92062 * C3435) * C801) *
               C36213 +
           ((C36216 * C1397 + C92062 * C1413) * C92078 +
            (C36216 * C1389 + C92062 * C1401) * C801) *
               C36212) *
              C92148 * C1384 +
          (((C36216 * C1390 + C92062 * C1402) * C801 +
            (C36216 * C1406 + C92062 * C1414) * C92078) *
               C36212 +
           ((C36216 * C5773 + C92062 * C5781) * C801 +
            (C36216 * C5783 + C92062 * C5791) * C92078) *
               C36213 +
           ((C36216 * C5775 + C92062 * C5785) * C801 +
            (C36216 * C5787 + C92062 * C5793) * C92078) *
               C36214 +
           ((C36216 * C37227 + C92062 * C37228) * C801 +
            (C36216 * C37229 + C92062 * C37230) * C92078) *
               C36215) *
              C92148 * C1385) *
         C92099) /
            (p * q * std::sqrt(p + q));
    d2eexy[47] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C31262 * C107 + C31257 * C113 + C31263 * C108 + C31258 * C114 +
            C31264 * C109 + C31259 * C115) *
               C884 +
           (C31262 * C182 + C31257 * C188 + C31263 * C183 + C31258 * C189 +
            C31264 * C184 + C31259 * C190) *
               C798 -
           (C32044 + C32043 + C32042) * C885 -
           (C32140 + C32141 + C32142) * C799 +
           (C32053 + C32052 + C32051) * C886 +
           (C32143 + C32144 + C32145) * C800) *
              C31260 +
          ((C32042 + C32043 + C32044) * C884 +
           (C32142 + C32141 + C32140) * C798 -
           (C32051 + C32052 + C32053) * C885 -
           (C32145 + C32144 + C32143) * C799 +
           (C31262 * C4882 + C31257 * C4888 + C31263 * C4881 + C31258 * C4887 +
            C31264 * C6557 + C31259 * C6558) *
               C886 +
           (C31262 * C5012 + C31257 * C5016 + C31263 * C5013 + C31258 * C5017 +
            C31264 * C6683 + C31259 * C6684) *
               C800) *
              C92186) *
         C92148 * C92078 * C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31262 * C107 + C31257 * C113 + C31263 * C108 + C31258 * C114 +
             C31264 * C109 + C31259 * C115) *
                C181 +
            (C31262 * C182 + C31257 * C188 + C31263 * C183 + C31258 * C189 +
             C31264 * C184 + C31259 * C190) *
                C92099) *
               C31260 +
           ((C31262 * C805 + C31257 * C817 + C31263 * C804 + C31258 * C816 +
             C31264 * C803 + C31259 * C815) *
                C181 +
            (C31262 * C890 + C31257 * C898 + C31263 * C889 + C31258 * C897 +
             C31264 * C888 + C31259 * C896) *
                C92099) *
               C92186) *
              C92148 * C93 -
          (((C31264 * C887 + C31259 * C895 + C31263 * C888 + C31258 * C896 +
             C31262 * C889 + C31257 * C897) *
                C92099 +
            (C31264 * C802 + C31259 * C814 + C31263 * C803 + C31258 * C815 +
             C31262 * C804 + C31257 * C816) *
                C181) *
               C92186 +
           ((C31264 * C185 + C31259 * C191 + C31263 * C184 + C31258 * C190 +
             C31262 * C183 + C31257 * C189) *
                C92099 +
            (C31264 * C110 + C31259 * C116 + C31263 * C109 + C31258 * C115 +
             C31262 * C108 + C31257 * C114) *
                C181) *
               C31260) *
              C92148 * C94 +
          (((C31262 * C109 + C31257 * C115 + C31263 * C110 + C31258 * C116 +
             C31264 * C111 + C31259 * C121) *
                C181 +
            (C31262 * C184 + C31257 * C190 + C31263 * C185 + C31258 * C191 +
             C31264 * C186 + C31259 * C192) *
                C92099) *
               C31260 +
           ((C31262 * C803 + C31257 * C815 + C31263 * C802 + C31258 * C814 +
             C31264 * C1989 + C31259 * C1990) *
                C181 +
            (C31262 * C888 + C31257 * C896 + C31263 * C887 + C31258 * C895 +
             C31264 * C2061 + C31259 * C2062) *
                C92099) *
               C92186) *
              C92148 * C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31262 * C107 + C31257 * C113 + C31263 * C108 + C31258 * C114 +
             C31264 * C109 + C31259 * C115) *
                C181 +
            (C31262 * C182 + C31257 * C188 + C31263 * C183 + C31258 * C189 +
             C31264 * C184 + C31259 * C190) *
                C92099) *
               C31260 +
           ((C32042 + C32043 + C32044) * C181 +
            (C32142 + C32141 + C32140) * C92099) *
               C92186) *
              C92148 * C92078 * C1383 -
          (((C31264 * C3515 + C31259 * C3519 + C31263 * C3514 + C31258 * C3518 +
             C31262 * C3513 + C31257 * C3517) *
                C92099 +
            (C31264 * C3433 + C31259 * C3437 + C31263 * C3432 + C31258 * C3436 +
             C31262 * C3431 + C31257 * C3435) *
                C181) *
               C92186 +
           ((C31264 * C1469 + C31259 * C1477 + C31263 * C1470 + C31258 * C1478 +
             C31262 * C1471 + C31257 * C1479) *
                C92099 +
            (C31264 * C1387 + C31259 * C1399 + C31263 * C1388 + C31258 * C1400 +
             C31262 * C1389 + C31257 * C1401) *
                C181) *
               C31260) *
              C92148 * C92078 * C1384 +
          (((C31262 * C1390 + C31257 * C1402 + C31263 * C1391 + C31258 * C1403 +
             C31264 * C1392 + C31259 * C1404) *
                C181 +
            (C31262 * C1472 + C31257 * C1480 + C31263 * C1473 + C31258 * C1481 +
             C31264 * C1474 + C31259 * C1482) *
                C92099) *
               C31260 +
           ((C31262 * C5773 + C31257 * C5781 + C31263 * C5774 + C31258 * C5782 +
             C31264 * C11870 + C31259 * C11871) *
                C181 +
            (C31262 * C5871 + C31257 * C5877 + C31263 * C5872 + C31258 * C5878 +
             C31264 * C11972 + C31259 * C11973) *
                C92099) *
               C92186) *
              C92148 * C92078 * C1385)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C36216 * C107 + C92062 * C113) * C181 +
            (C36216 * C182 + C92062 * C188) * C92099) *
               C36212 +
           ((C36216 * C805 + C92062 * C817) * C181 +
            (C36216 * C890 + C92062 * C898) * C92099) *
               C36213 +
           ((C36216 * C806 + C92062 * C818) * C181 +
            (C36216 * C891 + C92062 * C899) * C92099) *
               C36214 +
           ((C36216 * C4882 + C92062 * C4888) * C181 +
            (C36216 * C5012 + C92062 * C5016) * C92099) *
               C36215) *
              C92148 * C93 -
          (((C36216 * C5013 + C92062 * C5017) * C92099 +
            (C36216 * C4881 + C92062 * C4887) * C181) *
               C36215 +
           ((C36216 * C892 + C92062 * C900) * C92099 +
            (C36216 * C807 + C92062 * C819) * C181) *
               C36214 +
           ((C36216 * C889 + C92062 * C897) * C92099 +
            (C36216 * C804 + C92062 * C816) * C181) *
               C36213 +
           ((C36216 * C183 + C92062 * C189) * C92099 +
            (C36216 * C108 + C92062 * C114) * C181) *
               C36212) *
              C92148 * C94 +
          (((C36216 * C109 + C92062 * C115) * C181 +
            (C36216 * C184 + C92062 * C190) * C92099) *
               C36212 +
           ((C36216 * C803 + C92062 * C815) * C181 +
            (C36216 * C888 + C92062 * C896) * C92099) *
               C36213 +
           ((C36216 * C808 + C92062 * C820) * C181 +
            (C36216 * C893 + C92062 * C901) * C92099) *
               C36214 +
           ((C36216 * C6557 + C92062 * C6558) * C181 +
            (C36216 * C6683 + C92062 * C6684) * C92099) *
               C36215) *
              C92148 * C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C36216 * C107 + C92062 * C113) * C884 +
           (C36216 * C182 + C92062 * C188) * C798 - C36692 * C885 -
           C36770 * C799 + C36694 * C886 + C36771 * C800) *
              C36212 +
          (C36692 * C884 + C36770 * C798 - C36694 * C885 - C36771 * C799 +
           C36696 * C886 + C36772 * C800) *
              C36213 +
          (C36694 * C884 + C36771 * C798 - C36696 * C885 - C36772 * C799 +
           C36699 * C886 + C36773 * C800) *
              C36214 +
          (C36696 * C884 + C36772 * C798 - C36699 * C885 - C36773 * C799 +
           (C36216 * C36671 + C92062 * C36672) * C886 +
           (C36216 * C36759 + C92062 * C36760) * C800) *
              C36215) *
         C92148 * C92078 * C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C36216 * C107 + C92062 * C113) * C181 +
            (C36216 * C182 + C92062 * C188) * C92099) *
               C36212 +
           (C36692 * C181 + C36770 * C92099) * C36213 +
           (C36694 * C181 + C36771 * C92099) * C36214 +
           (C36696 * C181 + C36772 * C92099) * C36215) *
              C92148 * C92078 * C1383 -
          (((C36216 * C8666 + C92062 * C8668) * C92099 +
            (C36216 * C8536 + C92062 * C8538) * C181) *
               C36215 +
           ((C36216 * C5870 + C92062 * C5876) * C92099 +
            (C36216 * C5772 + C92062 * C5780) * C181) *
               C36214 +
           ((C36216 * C3513 + C92062 * C3517) * C92099 +
            (C36216 * C3431 + C92062 * C3435) * C181) *
               C36213 +
           ((C36216 * C1471 + C92062 * C1479) * C92099 +
            (C36216 * C1389 + C92062 * C1401) * C181) *
               C36212) *
              C92148 * C92078 * C1384 +
          (((C36216 * C1390 + C92062 * C1402) * C181 +
            (C36216 * C1472 + C92062 * C1480) * C92099) *
               C36212 +
           ((C36216 * C5773 + C92062 * C5781) * C181 +
            (C36216 * C5871 + C92062 * C5877) * C92099) *
               C36213 +
           ((C36216 * C5775 + C92062 * C5785) * C181 +
            (C36216 * C5873 + C92062 * C5879) * C92099) *
               C36214 +
           ((C36216 * C37227 + C92062 * C37228) * C181 +
            (C36216 * C37281 + C92062 * C37282) * C92099) *
               C36215) *
              C92148 * C92078 * C1385)) /
            (p * q * std::sqrt(p + q));
    d2eexz[47] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31262 * C107 + C31257 * C113 + C31263 * C108 + C31258 * C114 +
             C31264 * C109 + C31259 * C115) *
                C244 +
            (C31262 * C245 + C31257 * C251 + C31263 * C246 + C31258 * C252 +
             C31264 * C247 + C31259 * C253) *
                C92110) *
               C31260 +
           ((C32042 + C32043 + C32044) * C244 +
            (C32232 + C32233 + C32234) * C92110) *
               C92186) *
              C92148 * C798 -
          (((C32235 + C32236 + C32237) * C92110 +
            (C32051 + C32052 + C32053) * C244) *
               C92186 +
           ((C32234 + C32233 + C32232) * C92110 +
            (C32044 + C32043 + C32042) * C244) *
               C31260) *
              C92148 * C799 +
          (((C32053 + C32052 + C32051) * C244 +
            (C32237 + C32236 + C32235) * C92110) *
               C31260 +
           ((C31262 * C4882 + C31257 * C4888 + C31263 * C4881 + C31258 * C4887 +
             C31264 * C6557 + C31259 * C6558) *
                C244 +
            (C31262 * C5114 + C31257 * C5118 + C31263 * C5113 + C31258 * C5117 +
             C31264 * C6795 + C31259 * C6796) *
                C92110) *
               C92186) *
              C92148 * C800) *
         C92078) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31262 * C107 + C31257 * C113 + C31263 * C108 + C31258 * C114 +
             C31264 * C109 + C31259 * C115) *
                C244 +
            (C31262 * C245 + C31257 * C251 + C31263 * C246 + C31258 * C252 +
             C31264 * C247 + C31259 * C253) *
                C92110) *
               C31260 +
           ((C31262 * C805 + C31257 * C817 + C31263 * C804 + C31258 * C816 +
             C31264 * C803 + C31259 * C815) *
                C244 +
            (C31262 * C956 + C31257 * C964 + C31263 * C955 + C31258 * C963 +
             C31264 * C954 + C31259 * C962) *
                C92110) *
               C92186) *
              C92148 * C92099 * C93 -
          (((C31264 * C953 + C31259 * C961 + C31263 * C954 + C31258 * C962 +
             C31262 * C955 + C31257 * C963) *
                C92110 +
            (C31264 * C802 + C31259 * C814 + C31263 * C803 + C31258 * C815 +
             C31262 * C804 + C31257 * C816) *
                C244) *
               C92186 +
           ((C31264 * C248 + C31259 * C254 + C31263 * C247 + C31258 * C253 +
             C31262 * C246 + C31257 * C252) *
                C92110 +
            (C31264 * C110 + C31259 * C116 + C31263 * C109 + C31258 * C115 +
             C31262 * C108 + C31257 * C114) *
                C244) *
               C31260) *
              C92148 * C92099 * C94 +
          (((C31262 * C109 + C31257 * C115 + C31263 * C110 + C31258 * C116 +
             C31264 * C111 + C31259 * C121) *
                C244 +
            (C31262 * C247 + C31257 * C253 + C31263 * C248 + C31258 * C254 +
             C31264 * C249 + C31259 * C255) *
                C92110) *
               C31260 +
           ((C31262 * C803 + C31257 * C815 + C31263 * C802 + C31258 * C814 +
             C31264 * C1989 + C31259 * C1990) *
                C244 +
            (C31262 * C954 + C31257 * C962 + C31263 * C953 + C31258 * C961 +
             C31264 * C2129 + C31259 * C2130) *
                C92110) *
               C92186) *
              C92148 * C92099 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C31262 * C107 + C31257 * C113 + C31263 * C108 + C31258 * C114 +
            C31264 * C109 + C31259 * C115) *
               C1534 +
           (C31262 * C245 + C31257 * C251 + C31263 * C246 + C31258 * C252 +
            C31264 * C247 + C31259 * C253) *
               C1383 -
           (C31264 * C1387 + C31259 * C1399 + C31263 * C1388 + C31258 * C1400 +
            C31262 * C1389 + C31257 * C1401) *
               C1535 -
           (C31264 * C1538 + C31259 * C1546 + C31263 * C1539 + C31258 * C1547 +
            C31262 * C1540 + C31257 * C1548) *
               C1384 +
           (C31262 * C1390 + C31257 * C1402 + C31263 * C1391 + C31258 * C1403 +
            C31264 * C1392 + C31259 * C1404) *
               C1536 +
           (C31262 * C1541 + C31257 * C1549 + C31263 * C1542 + C31258 * C1550 +
            C31264 * C1543 + C31259 * C1551) *
               C1385) *
              C31260 +
          ((C32042 + C32043 + C32044) * C1534 +
           (C32232 + C32233 + C32234) * C1383 -
           (C31264 * C3433 + C31259 * C3437 + C31263 * C3432 + C31258 * C3436 +
            C31262 * C3431 + C31257 * C3435) *
               C1535 -
           (C31264 * C3589 + C31259 * C3593 + C31263 * C3588 + C31258 * C3592 +
            C31262 * C3587 + C31257 * C3591) *
               C1384 +
           (C31262 * C5773 + C31257 * C5781 + C31263 * C5774 + C31258 * C5782 +
            C31264 * C11870 + C31259 * C11871) *
               C1536 +
           (C31262 * C5955 + C31257 * C5961 + C31263 * C5956 + C31258 * C5962 +
            C31264 * C12072 + C31259 * C12073) *
               C1385) *
              C92186) *
         C92148 * C92099 * C92078) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C36216 * C107 + C92062 * C113) * C244 +
            (C36216 * C245 + C92062 * C251) * C92110) *
               C36212 +
           ((C36216 * C805 + C92062 * C817) * C244 +
            (C36216 * C956 + C92062 * C964) * C92110) *
               C36213 +
           ((C36216 * C806 + C92062 * C818) * C244 +
            (C36216 * C957 + C92062 * C965) * C92110) *
               C36214 +
           ((C36216 * C4882 + C92062 * C4888) * C244 +
            (C36216 * C5114 + C92062 * C5118) * C92110) *
               C36215) *
              C92148 * C92099 * C93 -
          (((C36216 * C5113 + C92062 * C5117) * C92110 +
            (C36216 * C4881 + C92062 * C4887) * C244) *
               C36215 +
           ((C36216 * C958 + C92062 * C966) * C92110 +
            (C36216 * C807 + C92062 * C819) * C244) *
               C36214 +
           ((C36216 * C955 + C92062 * C963) * C92110 +
            (C36216 * C804 + C92062 * C816) * C244) *
               C36213 +
           ((C36216 * C246 + C92062 * C252) * C92110 +
            (C36216 * C108 + C92062 * C114) * C244) *
               C36212) *
              C92148 * C92099 * C94 +
          (((C36216 * C109 + C92062 * C115) * C244 +
            (C36216 * C247 + C92062 * C253) * C92110) *
               C36212 +
           ((C36216 * C803 + C92062 * C815) * C244 +
            (C36216 * C954 + C92062 * C962) * C92110) *
               C36213 +
           ((C36216 * C808 + C92062 * C820) * C244 +
            (C36216 * C959 + C92062 * C967) * C92110) *
               C36214 +
           ((C36216 * C6557 + C92062 * C6558) * C244 +
            (C36216 * C6795 + C92062 * C6796) * C92110) *
               C36215) *
              C92148 * C92099 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C36216 * C107 + C92062 * C113) * C244 +
            (C36216 * C245 + C92062 * C251) * C92110) *
               C36212 +
           (C36826 + C36842) * C36213 + C36846 * C36214 + C36847 * C36215) *
              C92148 * C798 -
          ((C36845 + C36837) * C36215 + (C36844 + C36832) * C36214 +
           (C36843 + C36829) * C36213 + (C36842 + C36826) * C36212) *
              C92148 * C799 +
          (C36846 * C36212 + C36847 * C36213 + (C36837 + C36845) * C36214 +
           ((C36216 * C36671 + C92062 * C36672) * C244 +
            (C36216 * C36823 + C92062 * C36824) * C92110) *
               C36215) *
              C92148 * C800) *
         C92078) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C36216 * C107 + C92062 * C113) * C1534 +
           (C36216 * C245 + C92062 * C251) * C1383 -
           (C36216 * C1389 + C92062 * C1401) * C1535 -
           (C36216 * C1540 + C92062 * C1548) * C1384 +
           (C36216 * C1390 + C92062 * C1402) * C1536 +
           (C36216 * C1541 + C92062 * C1549) * C1385) *
              C36212 +
          (C36692 * C1534 + C36838 * C1383 -
           (C36216 * C3431 + C92062 * C3435) * C1535 -
           (C36216 * C3587 + C92062 * C3591) * C1384 +
           (C36216 * C5773 + C92062 * C5781) * C1536 +
           (C36216 * C5955 + C92062 * C5961) * C1385) *
              C36213 +
          (C36694 * C1534 + C36839 * C1383 -
           (C36216 * C5772 + C92062 * C5780) * C1535 -
           (C36216 * C5958 + C92062 * C5964) * C1384 +
           (C36216 * C5775 + C92062 * C5785) * C1536 +
           (C36216 * C5959 + C92062 * C5965) * C1385) *
              C36214 +
          (C36696 * C1534 + C36840 * C1383 -
           (C36216 * C8536 + C92062 * C8538) * C1535 -
           (C36216 * C8780 + C92062 * C8782) * C1384 +
           (C36216 * C37227 + C92062 * C37228) * C1536 +
           (C36216 * C37333 + C92062 * C37334) * C1385) *
              C36215) *
         C92148 * C92099 * C92078) /
            (p * q * std::sqrt(p + q));
    d2eeyx[47] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31487 * C107 + C31260 * C308 + C31488 * C805 + C92186 * C1022) *
                C801 +
            (C31487 * C117 + C31260 * C314 + C31488 * C813 + C92186 * C1030) *
                C92078) *
               C92148 * C31257 +
           ((C31515 + C31514) * C801 + (C31517 + C31516) * C92078) * C92148 *
               C31258 +
           (C31526 * C801 + C31527 * C92078) * C92148 * C31259) *
              C92110 * C798 -
          (((C31488 * C824 + C92186 * C1033 + C31487 * C811 + C31260 * C1028) *
                C92078 +
            (C31488 * C808 + C92186 * C1025 + C31487 * C803 + C31260 * C1020) *
                C801) *
               C92148 * C31259 +
           ((C31488 * C823 + C92186 * C1032 + C31487 * C812 + C31260 * C1029) *
                C92078 +
            (C31488 * C807 + C92186 * C1024 + C31487 * C804 + C31260 * C1021) *
                C801) *
               C92148 * C31258 +
           ((C31488 * C822 + C92186 * C1031 + C31487 * C813 + C31260 * C1030) *
                C92078 +
            (C31488 * C806 + C92186 * C1023 + C31487 * C805 + C31260 * C1022) *
                C801) *
               C92148 * C31257) *
              C92110 * C799 +
          (((C31487 * C806 + C31260 * C1023 + C31488 * C4882 + C92186 * C5218) *
                C801 +
            (C31487 * C822 + C31260 * C1031 + C31488 * C4886 + C92186 * C5222) *
                C92078) *
               C92148 * C31257 +
           ((C31487 * C807 + C31260 * C1024 + C31488 * C4881 + C92186 * C5217) *
                C801 +
            (C31487 * C823 + C31260 * C1032 + C31488 * C4885 + C92186 * C5221) *
                C92078) *
               C92148 * C31258 +
           ((C31487 * C808 + C31260 * C1025 + C31488 * C6557 + C92186 * C6907) *
                C801 +
            (C31487 * C824 + C31260 * C1033 + C31488 * C6559 + C92186 * C6908) *
                C92078) *
               C92148 * C31259) *
              C92110 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C31487 * C107 + C31260 * C308 + C31488 * C805 + C92186 * C1022) *
               C104 +
           (C31487 * C117 + C31260 * C314 + C31488 * C813 + C92186 * C1030) *
               C93 -
           (C31514 + C31515) * C105 - (C31516 + C31517) * C94 + C31526 * C106 +
           C31527 * C95) *
              C92148 * C31257 +
          ((C31515 + C31514) * C104 + (C31517 + C31516) * C93 -
           (C31519 + C31518) * C105 - (C31521 + C31520) * C94 +
           (C31522 + C31523) * C106 + (C31524 + C31525) * C95) *
              C92148 * C31258 +
          (C31526 * C104 + C31527 * C93 - (C31523 + C31522) * C105 -
           (C31525 + C31524) * C94 +
           (C31487 * C111 + C31260 * C312 + C31488 * C1989 + C92186 * C2197) *
               C106 +
           (C31487 * C122 + C31260 * C318 + C31488 * C1991 + C92186 * C2198) *
               C95) *
              C92148 * C31259) *
         C92110 * C92099) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31487 * C107 + C31260 * C308 + C31488 * C805 + C92186 * C1022) *
                C801 +
            (C31487 * C117 + C31260 * C314 + C31488 * C813 + C92186 * C1030) *
                C92078) *
               C92148 * C31257 +
           ((C31515 + C31514) * C801 + (C31517 + C31516) * C92078) * C92148 *
               C31258 +
           (C31526 * C801 + C31527 * C92078) * C92148 * C31259) *
              C1383 -
          (((C31488 * C3441 + C92186 * C3667 + C31487 * C1395 +
             C31260 * C1612) *
                C92078 +
            (C31488 * C3433 + C92186 * C3663 + C31487 * C1387 +
             C31260 * C1604) *
                C801) *
               C92148 * C31259 +
           ((C31488 * C3440 + C92186 * C3666 + C31487 * C1396 +
             C31260 * C1613) *
                C92078 +
            (C31488 * C3432 + C92186 * C3662 + C31487 * C1388 +
             C31260 * C1605) *
                C801) *
               C92148 * C31258 +
           ((C31488 * C3439 + C92186 * C3665 + C31487 * C1397 +
             C31260 * C1614) *
                C92078 +
            (C31488 * C3431 + C92186 * C3661 + C31487 * C1389 +
             C31260 * C1606) *
                C801) *
               C92148 * C31257) *
              C1384 +
          (((C31487 * C1390 + C31260 * C1607 + C31488 * C5773 +
             C92186 * C6043) *
                C801 +
            (C31487 * C1406 + C31260 * C1615 + C31488 * C5783 +
             C92186 * C6049) *
                C92078) *
               C92148 * C31257 +
           ((C31487 * C1391 + C31260 * C1608 + C31488 * C5774 +
             C92186 * C6045) *
                C801 +
            (C31487 * C1407 + C31260 * C1616 + C31488 * C5784 +
             C92186 * C6051) *
                C92078) *
               C92148 * C31258 +
           ((C31487 * C1392 + C31260 * C1609 + C31488 * C11870 +
             C92186 * C12172) *
                C801 +
            (C31487 * C1408 + C31260 * C1617 + C31488 * C11872 +
             C92186 * C12173) *
                C92078) *
               C92148 * C31259) *
              C1385) *
         C92099) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((C36367 * C107 + C36212 * C308 + C36368 * C805 + C36213 * C1022 +
           C36369 * C806 + C36214 * C1023 + C36370 * C4882 + C36215 * C5218) *
              C104 +
          (C36367 * C117 + C36212 * C314 + C36368 * C813 + C36213 * C1030 +
           C36369 * C822 + C36214 * C1031 + C36370 * C4886 + C36215 * C5222) *
              C93 -
          (C36370 * C4881 + C36215 * C5217 + C36369 * C807 + C36214 * C1024 +
           C36368 * C804 + C36213 * C1021 + C36367 * C108 + C36212 * C309) *
              C105 -
          (C36370 * C4885 + C36215 * C5221 + C36369 * C823 + C36214 * C1032 +
           C36368 * C812 + C36213 * C1029 + C36367 * C118 + C36212 * C315) *
              C94 +
          (C36367 * C109 + C36212 * C310 + C36368 * C803 + C36213 * C1020 +
           C36369 * C808 + C36214 * C1025 + C36370 * C6557 + C36215 * C6907) *
              C106 +
          (C36367 * C119 + C36212 * C316 + C36368 * C811 + C36213 * C1028 +
           C36369 * C824 + C36214 * C1033 + C36370 * C6559 + C36215 * C6908) *
              C95) *
         C92148 * C92062 * C92110 * C92099) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C36367 * C107 + C36212 * C308 + C36368 * C805 + C36213 * C1022 +
            C36369 * C806 + C36214 * C1023 + C36370 * C4882 + C36215 * C5218) *
               C801 +
           (C36367 * C117 + C36212 * C314 + C36368 * C813 + C36213 * C1030 +
            C36369 * C822 + C36214 * C1031 + C36370 * C4886 + C36215 * C5222) *
               C92078) *
              C92148 * C92062 * C92110 * C798 -
          ((C36370 * C4891 + C36215 * C5223 + C36369 * C4886 + C36214 * C5222 +
            C36368 * C822 + C36213 * C1031 + C36367 * C813 + C36212 * C1030) *
               C92078 +
           (C36370 * C4883 + C36215 * C5219 + C36369 * C4882 + C36214 * C5218 +
            C36368 * C806 + C36213 * C1023 + C36367 * C805 + C36212 * C1022) *
               C801) *
              C92148 * C92062 * C92110 * C799 +
          ((C36367 * C806 + C36212 * C1023 + C36368 * C4882 + C36213 * C5218 +
            C36369 * C4883 + C36214 * C5219 + C36370 * C36671 +
            C36215 * C36897) *
               C801 +
           (C36367 * C822 + C36212 * C1031 + C36368 * C4886 + C36213 * C5222 +
            C36369 * C4891 + C36214 * C5223 + C36370 * C36673 +
            C36215 * C36898) *
               C92078) *
              C92148 * C92062 * C92110 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C36367 * C107 + C36212 * C308 + C36368 * C805 + C36213 * C1022 +
            C36369 * C806 + C36214 * C1023 + C36370 * C4882 + C36215 * C5218) *
               C801 +
           (C36367 * C117 + C36212 * C314 + C36368 * C813 + C36213 * C1030 +
            C36369 * C822 + C36214 * C1031 + C36370 * C4886 + C36215 * C5222) *
               C92078) *
              C92148 * C92062 * C1383 -
          ((C36370 * C8540 + C36215 * C8896 + C36369 * C5778 + C36214 * C6048 +
            C36368 * C3439 + C36213 * C3665 + C36367 * C1397 + C36212 * C1614) *
               C92078 +
           (C36370 * C8536 + C36215 * C8894 + C36369 * C5772 + C36214 * C6042 +
            C36368 * C3431 + C36213 * C3661 + C36367 * C1389 + C36212 * C1606) *
               C801) *
              C92148 * C92062 * C1384 +
          ((C36367 * C1390 + C36212 * C1607 + C36368 * C5773 + C36213 * C6043 +
            C36369 * C5775 + C36214 * C6044 + C36370 * C37227 +
            C36215 * C37385) *
               C801 +
           (C36367 * C1406 + C36212 * C1615 + C36368 * C5783 + C36213 * C6049 +
            C36369 * C5787 + C36214 * C6050 + C36370 * C37229 +
            C36215 * C37386) *
               C92078) *
              C92148 * C92062 * C1385) *
         C92099) /
            (p * q * std::sqrt(p + q));
    d2eeyy[47] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C31487 * C107 + C31260 * C308 + C31488 * C805 + C92186 * C1022) *
               C884 +
           (C31487 * C182 + C31260 * C394 + C31488 * C890 + C92186 * C1085) *
               C798 -
           (C31488 * C806 + C92186 * C1023 + C31487 * C805 + C31260 * C1022) *
               C885 -
           (C31488 * C891 + C92186 * C1086 + C31487 * C890 + C31260 * C1085) *
               C799 +
           (C31487 * C806 + C31260 * C1023 + C31488 * C4882 + C92186 * C5218) *
               C886 +
           (C31487 * C891 + C31260 * C1086 + C31488 * C5012 + C92186 * C5299) *
               C800) *
              C92148 * C31257 +
          ((C31515 + C31514) * C884 + (C31615 + C31616) * C798 -
           (C31488 * C807 + C92186 * C1024 + C31487 * C804 + C31260 * C1021) *
               C885 -
           (C31488 * C892 + C92186 * C1088 + C31487 * C889 + C31260 * C1087) *
               C799 +
           (C31487 * C807 + C31260 * C1024 + C31488 * C4881 + C92186 * C5217) *
               C886 +
           (C31487 * C892 + C31260 * C1088 + C31488 * C5013 + C92186 * C5301) *
               C800) *
              C92148 * C31258 +
          (C31526 * C884 + C31621 * C798 -
           (C31488 * C808 + C92186 * C1025 + C31487 * C803 + C31260 * C1020) *
               C885 -
           (C31488 * C893 + C92186 * C1090 + C31487 * C888 + C31260 * C1089) *
               C799 +
           (C31487 * C808 + C31260 * C1025 + C31488 * C6557 + C92186 * C6907) *
               C886 +
           (C31487 * C893 + C31260 * C1090 + C31488 * C6683 + C92186 * C7025) *
               C800) *
              C92148 * C31259) *
         C92078 * C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31487 * C107 + C31260 * C308 + C31488 * C805 + C92186 * C1022) *
                C181 +
            (C31487 * C182 + C31260 * C394 + C31488 * C890 + C92186 * C1085) *
                C92099) *
               C92148 * C31257 +
           ((C31515 + C31514) * C181 + (C31615 + C31616) * C92099) * C92148 *
               C31258 +
           C31624 * C31259) *
              C93 -
          (((C31619 + C31620) * C92099 + (C31523 + C31522) * C181) * C92148 *
               C31259 +
           ((C31618 + C31617) * C92099 + (C31519 + C31518) * C181) * C92148 *
               C31258 +
           ((C31616 + C31615) * C92099 + (C31514 + C31515) * C181) * C92148 *
               C31257) *
              C94 +
          (C31624 * C31257 +
           ((C31522 + C31523) * C181 + (C31620 + C31619) * C92099) * C92148 *
               C31258 +
           ((C31487 * C111 + C31260 * C312 + C31488 * C1989 + C92186 * C2197) *
                C181 +
            (C31487 * C186 + C31260 * C398 + C31488 * C2061 + C92186 * C2283) *
                C92099) *
               C92148 * C31259) *
              C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31487 * C107 + C31260 * C308 + C31488 * C805 + C92186 * C1022) *
                C181 +
            (C31487 * C182 + C31260 * C394 + C31488 * C890 + C92186 * C1085) *
                C92099) *
               C92148 * C31257 +
           ((C31515 + C31514) * C181 + (C31615 + C31616) * C92099) * C92148 *
               C31258 +
           C31624 * C31259) *
              C92078 * C1383 -
          (((C31488 * C3515 + C92186 * C3737 + C31487 * C1469 +
             C31260 * C1670) *
                C92099 +
            (C31488 * C3433 + C92186 * C3663 + C31487 * C1387 +
             C31260 * C1604) *
                C181) *
               C92148 * C31259 +
           ((C31488 * C3514 + C92186 * C3736 + C31487 * C1470 +
             C31260 * C1671) *
                C92099 +
            (C31488 * C3432 + C92186 * C3662 + C31487 * C1388 +
             C31260 * C1605) *
                C181) *
               C92148 * C31258 +
           ((C31488 * C3513 + C92186 * C3735 + C31487 * C1471 +
             C31260 * C1672) *
                C92099 +
            (C31488 * C3431 + C92186 * C3661 + C31487 * C1389 +
             C31260 * C1606) *
                C181) *
               C92148 * C31257) *
              C92078 * C1384 +
          (((C31487 * C1390 + C31260 * C1607 + C31488 * C5773 +
             C92186 * C6043) *
                C181 +
            (C31487 * C1472 + C31260 * C1673 + C31488 * C5871 +
             C92186 * C6129) *
                C92099) *
               C92148 * C31257 +
           ((C31487 * C1391 + C31260 * C1608 + C31488 * C5774 +
             C92186 * C6045) *
                C181 +
            (C31487 * C1473 + C31260 * C1674 + C31488 * C5872 +
             C92186 * C6131) *
                C92099) *
               C92148 * C31258 +
           ((C31487 * C1392 + C31260 * C1609 + C31488 * C11870 +
             C92186 * C12172) *
                C181 +
            (C31487 * C1474 + C31260 * C1675 + C31488 * C11972 +
             C92186 * C12284) *
                C92099) *
               C92148 * C31259) *
              C92078 * C1385)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C36367 * C107 + C36212 * C308 + C36368 * C805 + C36213 * C1022 +
            C36369 * C806 + C36214 * C1023 + C36370 * C4882 + C36215 * C5218) *
               C181 +
           (C36367 * C182 + C36212 * C394 + C36368 * C890 + C36213 * C1085 +
            C36369 * C891 + C36214 * C1086 + C36370 * C5012 + C36215 * C5299) *
               C92099) *
              C92148 * C92062 * C93 -
          ((C36370 * C5013 + C36215 * C5301 + C36369 * C892 + C36214 * C1088 +
            C36368 * C889 + C36213 * C1087 + C36367 * C183 + C36212 * C395) *
               C92099 +
           (C36370 * C4881 + C36215 * C5217 + C36369 * C807 + C36214 * C1024 +
            C36368 * C804 + C36213 * C1021 + C36367 * C108 + C36212 * C309) *
               C181) *
              C92148 * C92062 * C94 +
          ((C36367 * C109 + C36212 * C310 + C36368 * C803 + C36213 * C1020 +
            C36369 * C808 + C36214 * C1025 + C36370 * C6557 + C36215 * C6907) *
               C181 +
           (C36367 * C184 + C36212 * C396 + C36368 * C888 + C36213 * C1089 +
            C36369 * C893 + C36214 * C1090 + C36370 * C6683 + C36215 * C7025) *
               C92099) *
              C92148 * C92062 * C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((C36367 * C107 + C36212 * C308 + C36368 * C805 + C36213 * C1022 +
           C36369 * C806 + C36214 * C1023 + C36370 * C4882 + C36215 * C5218) *
              C884 +
          (C36367 * C182 + C36212 * C394 + C36368 * C890 + C36213 * C1085 +
           C36369 * C891 + C36214 * C1086 + C36370 * C5012 + C36215 * C5299) *
              C798 -
          (C36370 * C4883 + C36215 * C5219 + C36369 * C4882 + C36214 * C5218 +
           C36368 * C806 + C36213 * C1023 + C36367 * C805 + C36212 * C1022) *
              C885 -
          (C36370 * C5014 + C36215 * C5300 + C36369 * C5012 + C36214 * C5299 +
           C36368 * C891 + C36213 * C1086 + C36367 * C890 + C36212 * C1085) *
              C799 +
          (C36367 * C806 + C36212 * C1023 + C36368 * C4882 + C36213 * C5218 +
           C36369 * C4883 + C36214 * C5219 + C36370 * C36671 +
           C36215 * C36897) *
              C886 +
          (C36367 * C891 + C36212 * C1086 + C36368 * C5012 + C36213 * C5299 +
           C36369 * C5014 + C36214 * C5300 + C36370 * C36759 +
           C36215 * C36949) *
              C800) *
         C92148 * C92062 * C92078 * C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C36367 * C107 + C36212 * C308 + C36368 * C805 + C36213 * C1022 +
            C36369 * C806 + C36214 * C1023 + C36370 * C4882 + C36215 * C5218) *
               C181 +
           (C36367 * C182 + C36212 * C394 + C36368 * C890 + C36213 * C1085 +
            C36369 * C891 + C36214 * C1086 + C36370 * C5012 + C36215 * C5299) *
               C92099) *
              C92148 * C92062 * C92078 * C1383 -
          ((C36370 * C8666 + C36215 * C8996 + C36369 * C5870 + C36214 * C6128 +
            C36368 * C3513 + C36213 * C3735 + C36367 * C1471 + C36212 * C1672) *
               C92099 +
           (C36370 * C8536 + C36215 * C8894 + C36369 * C5772 + C36214 * C6042 +
            C36368 * C3431 + C36213 * C3661 + C36367 * C1389 + C36212 * C1606) *
               C181) *
              C92148 * C92062 * C92078 * C1384 +
          ((C36367 * C1390 + C36212 * C1607 + C36368 * C5773 + C36213 * C6043 +
            C36369 * C5775 + C36214 * C6044 + C36370 * C37227 +
            C36215 * C37385) *
               C181 +
           (C36367 * C1472 + C36212 * C1673 + C36368 * C5871 + C36213 * C6129 +
            C36369 * C5873 + C36214 * C6130 + C36370 * C37281 +
            C36215 * C37437) *
               C92099) *
              C92148 * C92062 * C92078 * C1385)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[47] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31487 * C107 + C31260 * C308 + C31488 * C805 + C92186 * C1022) *
                C244 +
            (C31487 * C245 + C31260 * C474 + C31488 * C956 + C92186 * C1146) *
                C92110) *
               C92148 * C31257 +
           ((C31515 + C31514) * C244 + (C31712 + C31713) * C92110) * C92148 *
               C31258 +
           C31721 * C31259) *
              C798 -
          (((C31488 * C959 + C92186 * C1149 + C31487 * C954 + C31260 * C1144) *
                C92110 +
            (C31488 * C808 + C92186 * C1025 + C31487 * C803 + C31260 * C1020) *
                C244) *
               C92148 * C31259 +
           ((C31488 * C958 + C92186 * C1148 + C31487 * C955 + C31260 * C1145) *
                C92110 +
            (C31488 * C807 + C92186 * C1024 + C31487 * C804 + C31260 * C1021) *
                C244) *
               C92148 * C31258 +
           ((C31488 * C957 + C92186 * C1147 + C31487 * C956 + C31260 * C1146) *
                C92110 +
            (C31488 * C806 + C92186 * C1023 + C31487 * C805 + C31260 * C1022) *
                C244) *
               C92148 * C31257) *
              C799 +
          (((C31487 * C806 + C31260 * C1023 + C31488 * C4882 + C92186 * C5218) *
                C244 +
            (C31487 * C957 + C31260 * C1147 + C31488 * C5114 + C92186 * C5378) *
                C92110) *
               C92148 * C31257 +
           ((C31487 * C807 + C31260 * C1024 + C31488 * C4881 + C92186 * C5217) *
                C244 +
            (C31487 * C958 + C31260 * C1148 + C31488 * C5113 + C92186 * C5377) *
                C92110) *
               C92148 * C31258 +
           ((C31487 * C808 + C31260 * C1025 + C31488 * C6557 + C92186 * C6907) *
                C244 +
            (C31487 * C959 + C31260 * C1149 + C31488 * C6795 + C92186 * C7133) *
                C92110) *
               C92148 * C31259) *
              C800) *
         C92078) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31487 * C107 + C31260 * C308 + C31488 * C805 + C92186 * C1022) *
                C244 +
            (C31487 * C245 + C31260 * C474 + C31488 * C956 + C92186 * C1146) *
                C92110) *
               C92148 * C31257 +
           ((C31515 + C31514) * C244 + (C31712 + C31713) * C92110) * C92148 *
               C31258 +
           C31721 * C31259) *
              C92099 * C93 -
          (((C31716 + C31717) * C92110 + (C31523 + C31522) * C244) * C92148 *
               C31259 +
           ((C31715 + C31714) * C92110 + (C31519 + C31518) * C244) * C92148 *
               C31258 +
           ((C31713 + C31712) * C92110 + (C31514 + C31515) * C244) * C92148 *
               C31257) *
              C92099 * C94 +
          (C31721 * C31257 +
           ((C31522 + C31523) * C244 + (C31717 + C31716) * C92110) * C92148 *
               C31258 +
           ((C31487 * C111 + C31260 * C312 + C31488 * C1989 + C92186 * C2197) *
                C244 +
            (C31487 * C249 + C31260 * C478 + C31488 * C2129 + C92186 * C2371) *
                C92110) *
               C92148 * C31259) *
              C92099 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C31487 * C107 + C31260 * C308 + C31488 * C805 + C92186 * C1022) *
               C1534 +
           (C31487 * C245 + C31260 * C474 + C31488 * C956 + C92186 * C1146) *
               C1383 -
           (C31488 * C3431 + C92186 * C3661 + C31487 * C1389 + C31260 * C1606) *
               C1535 -
           (C31488 * C3587 + C92186 * C3805 + C31487 * C1540 + C31260 * C1727) *
               C1384 +
           (C31487 * C1390 + C31260 * C1607 + C31488 * C5773 + C92186 * C6043) *
               C1536 +
           (C31487 * C1541 + C31260 * C1728 + C31488 * C5955 + C92186 * C6208) *
               C1385) *
              C92148 * C31257 +
          ((C31515 + C31514) * C1534 + (C31712 + C31713) * C1383 -
           (C31488 * C3432 + C92186 * C3662 + C31487 * C1388 + C31260 * C1605) *
               C1535 -
           (C31488 * C3588 + C92186 * C3806 + C31487 * C1539 + C31260 * C1729) *
               C1384 +
           (C31487 * C1391 + C31260 * C1608 + C31488 * C5774 + C92186 * C6045) *
               C1536 +
           (C31487 * C1542 + C31260 * C1730 + C31488 * C5956 + C92186 * C6211) *
               C1385) *
              C92148 * C31258 +
          (C31526 * C1534 + C31718 * C1383 -
           (C31488 * C3433 + C92186 * C3663 + C31487 * C1387 + C31260 * C1604) *
               C1535 -
           (C31488 * C3589 + C92186 * C3807 + C31487 * C1538 + C31260 * C1731) *
               C1384 +
           (C31487 * C1392 + C31260 * C1609 + C31488 * C11870 +
            C92186 * C12172) *
               C1536 +
           (C31487 * C1543 + C31260 * C1732 + C31488 * C12072 +
            C92186 * C12397) *
               C1385) *
              C92148 * C31259) *
         C92099 * C92078) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C36367 * C107 + C36212 * C308 + C36368 * C805 + C36213 * C1022 +
            C36369 * C806 + C36214 * C1023 + C36370 * C4882 + C36215 * C5218) *
               C244 +
           (C36367 * C245 + C36212 * C474 + C36368 * C956 + C36213 * C1146 +
            C36369 * C957 + C36214 * C1147 + C36370 * C5114 + C36215 * C5378) *
               C92110) *
              C92148 * C92062 * C92099 * C93 -
          ((C36370 * C5113 + C36215 * C5377 + C36369 * C958 + C36214 * C1148 +
            C36368 * C955 + C36213 * C1145 + C36367 * C246 + C36212 * C475) *
               C92110 +
           (C36370 * C4881 + C36215 * C5217 + C36369 * C807 + C36214 * C1024 +
            C36368 * C804 + C36213 * C1021 + C36367 * C108 + C36212 * C309) *
               C244) *
              C92148 * C92062 * C92099 * C94 +
          ((C36367 * C109 + C36212 * C310 + C36368 * C803 + C36213 * C1020 +
            C36369 * C808 + C36214 * C1025 + C36370 * C6557 + C36215 * C6907) *
               C244 +
           (C36367 * C247 + C36212 * C476 + C36368 * C954 + C36213 * C1144 +
            C36369 * C959 + C36214 * C1149 + C36370 * C6795 + C36215 * C7133) *
               C92110) *
              C92148 * C92062 * C92099 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C36367 * C107 + C36212 * C308 + C36368 * C805 + C36213 * C1022 +
            C36369 * C806 + C36214 * C1023 + C36370 * C4882 + C36215 * C5218) *
               C244 +
           (C36367 * C245 + C36212 * C474 + C36368 * C956 + C36213 * C1146 +
            C36369 * C957 + C36214 * C1147 + C36370 * C5114 + C36215 * C5378) *
               C92110) *
              C92148 * C92062 * C798 -
          ((C36370 * C5115 + C36215 * C5379 + C36369 * C5114 + C36214 * C5378 +
            C36368 * C957 + C36213 * C1147 + C36367 * C956 + C36212 * C1146) *
               C92110 +
           (C36370 * C4883 + C36215 * C5219 + C36369 * C4882 + C36214 * C5218 +
            C36368 * C806 + C36213 * C1023 + C36367 * C805 + C36212 * C1022) *
               C244) *
              C92148 * C92062 * C799 +
          ((C36367 * C806 + C36212 * C1023 + C36368 * C4882 + C36213 * C5218 +
            C36369 * C4883 + C36214 * C5219 + C36370 * C36671 +
            C36215 * C36897) *
               C244 +
           (C36367 * C957 + C36212 * C1147 + C36368 * C5114 + C36213 * C5378 +
            C36369 * C5115 + C36214 * C5379 + C36370 * C36823 +
            C36215 * C37000) *
               C92110) *
              C92148 * C92062 * C800) *
         C92078) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((C36367 * C107 + C36212 * C308 + C36368 * C805 + C36213 * C1022 +
           C36369 * C806 + C36214 * C1023 + C36370 * C4882 + C36215 * C5218) *
              C1534 +
          (C36367 * C245 + C36212 * C474 + C36368 * C956 + C36213 * C1146 +
           C36369 * C957 + C36214 * C1147 + C36370 * C5114 + C36215 * C5378) *
              C1383 -
          (C36370 * C8536 + C36215 * C8894 + C36369 * C5772 + C36214 * C6042 +
           C36368 * C3431 + C36213 * C3661 + C36367 * C1389 + C36212 * C1606) *
              C1535 -
          (C36370 * C8780 + C36215 * C9096 + C36369 * C5958 + C36214 * C6207 +
           C36368 * C3587 + C36213 * C3805 + C36367 * C1540 + C36212 * C1727) *
              C1384 +
          (C36367 * C1390 + C36212 * C1607 + C36368 * C5773 + C36213 * C6043 +
           C36369 * C5775 + C36214 * C6044 + C36370 * C37227 +
           C36215 * C37385) *
              C1536 +
          (C36367 * C1541 + C36212 * C1728 + C36368 * C5955 + C36213 * C6208 +
           C36369 * C5959 + C36214 * C6209 + C36370 * C37333 +
           C36215 * C37488) *
              C1385) *
         C92148 * C92062 * C92099 * C92078) /
            (p * q * std::sqrt(p + q));
    d2eezx[47] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92148 * C555) * C801 +
             (C554 * C117 + C92148 * C561) * C92078) *
                C31257 +
            (C584 * C801 + C585 * C92078) * C31258 +
            (C586 * C801 + C587 * C92078) * C31259) *
               C31260 +
           ((C5493 + C5494) * C31257 + (C5468 + C5469) * C31258 +
            (C16084 + C16085) * C31259) *
               C92186) *
              C92110 * C798 -
          (((C16086 + C16087) * C31259 + (C5475 + C5474) * C31258 +
            (C5496 + C5495) * C31257) *
               C92186 +
           ((C16085 + C16084) * C31259 + (C5469 + C5468) * C31258 +
            (C5494 + C5493) * C31257) *
               C31260) *
              C92110 * C799 +
          ((C5502 * C31257 + C5488 * C31258 + (C16087 + C16086) * C31259) *
               C31260 +
           ((C5501 + C5500) * C31257 + (C5499 + C5498) * C31258 +
            ((C554 * C6557 + C92148 * C7241) * C801 +
             (C554 * C6559 + C92148 * C7242) * C92078) *
                C31259) *
               C92186) *
              C92110 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92148 * C555) * C104 +
            (C554 * C117 + C92148 * C561) * C93 - C584 * C105 - C585 * C94 +
            C586 * C106 + C587 * C95) *
               C31257 +
           (C584 * C104 + C585 * C93 - C586 * C105 - C587 * C94 + C588 * C106 +
            C589 * C95) *
               C31258 +
           (C586 * C104 + C587 * C93 - C588 * C105 - C589 * C94 + C590 * C106 +
            C591 * C95) *
               C31259) *
              C31260 +
          ((C5484 * C104 + C5485 * C93 - C2468 * C105 - C2469 * C94 +
            C2470 * C106 + C2471 * C95) *
               C31257 +
           (C2468 * C104 + C2469 * C93 - C2470 * C105 - C2471 * C94 +
            C2472 * C106 + C2473 * C95) *
               C31258 +
           (C2470 * C104 + C2471 * C93 - C2472 * C105 - C2473 * C94 +
            (C554 * C1989 + C92148 * C2453) * C106 +
            (C554 * C1991 + C92148 * C2454) * C95) *
               C31259) *
              C92186) *
         C92110 * C92099) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92148 * C555) * C801 +
             (C554 * C117 + C92148 * C561) * C92078) *
                C31257 +
            (C584 * C801 + C585 * C92078) * C31258 +
            (C586 * C801 + C587 * C92078) * C31259) *
               C31260 +
           ((C5493 + C5494) * C31257 + (C5468 + C5469) * C31258 +
            (C16084 + C16085) * C31259) *
               C92186) *
              C1383 -
          (((C19547 + C19548) * C31259 + (C9207 + C9208) * C31258 +
            (C9219 + C9220) * C31257) *
               C92186 +
           ((C3193 * C92078 + C3192 * C801) * C31259 +
            (C3191 * C92078 + C3190 * C801) * C31258 +
            ((C554 * C1397 + C92148 * C1796) * C92078 +
             (C554 * C1389 + C92148 * C1788) * C801) *
                C31257) *
               C31260) *
              C1384 +
          ((((C554 * C1390 + C92148 * C1789) * C801 +
             (C554 * C1406 + C92148 * C1797) * C92078) *
                C31257 +
            ((C554 * C1391 + C92148 * C1790) * C801 +
             (C554 * C1407 + C92148 * C1798) * C92078) *
                C31258 +
            ((C554 * C1392 + C92148 * C1791) * C801 +
             (C554 * C1408 + C92148 * C1799) * C92078) *
                C31259) *
               C31260 +
           (((C554 * C5773 + C92148 * C6289) * C801 +
             (C554 * C5783 + C92148 * C6295) * C92078) *
                C31257 +
            ((C554 * C5774 + C92148 * C6290) * C801 +
             (C554 * C5784 + C92148 * C6296) * C92078) *
                C31258 +
            ((C554 * C11870 + C92148 * C12506) * C801 +
             (C554 * C11872 + C92148 * C12507) * C92078) *
                C31259) *
               C92186) *
              C1385) *
         C92099) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C554 * C107 + C92148 * C555) * C104 +
           (C554 * C117 + C92148 * C561) * C93 - C584 * C105 - C585 * C94 +
           C586 * C106 + C587 * C95) *
              C92062 * C36212 +
          (C5484 * C104 + C5485 * C93 - C2468 * C105 - C2469 * C94 +
           C2470 * C106 + C2471 * C95) *
              C92062 * C36213 +
          (C5486 * C104 + C5487 * C93 - C4632 * C105 - C4633 * C94 +
           C4634 * C106 + C4635 * C95) *
              C92062 * C36214 +
          (C5492 * C104 + C5491 * C93 - C5490 * C105 - C5489 * C94 +
           (C554 * C6557 + C92148 * C7241) * C106 +
           (C554 * C6559 + C92148 * C7242) * C95) *
              C92062 * C36215) *
         C92110 * C92099) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92148 * C555) * C801 +
            (C554 * C117 + C92148 * C561) * C92078) *
               C92062 * C36212 +
           (C5493 + C5494) * C92062 * C36213 + C37054 * C36214 +
           C37060 * C36215) *
              C92110 * C798 -
          ((C37063 + C37064) * C92062 * C36215 +
           (C5500 + C5501) * C92062 * C36214 +
           (C5496 + C5495) * C92062 * C36213 +
           (C5494 + C5493) * C92062 * C36212) *
              C92110 * C799 +
          (C37054 * C36212 + C37060 * C36213 +
           (C37064 + C37063) * C92062 * C36214 +
           ((C554 * C36671 + C92148 * C37051) * C801 +
            (C554 * C36673 + C92148 * C37052) * C92078) *
               C92062 * C36215) *
              C92110 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92148 * C555) * C801 +
            (C554 * C117 + C92148 * C561) * C92078) *
               C92062 * C36212 +
           (C5493 + C5494) * C92062 * C36213 + C37054 * C36214 +
           C37060 * C36215) *
              C1383 -
          (((C554 * C8540 + C92148 * C9198) * C92078 +
            (C554 * C8536 + C92148 * C9196) * C801) *
               C92062 * C36215 +
           (C9217 + C9218) * C92062 * C36214 +
           (C9219 + C9220) * C92062 * C36213 +
           ((C554 * C1397 + C92148 * C1796) * C92078 +
            (C554 * C1389 + C92148 * C1788) * C801) *
               C92062 * C36212) *
              C1384 +
          (((C554 * C1390 + C92148 * C1789) * C801 +
            (C554 * C1406 + C92148 * C1797) * C92078) *
               C92062 * C36212 +
           ((C554 * C5773 + C92148 * C6289) * C801 +
            (C554 * C5783 + C92148 * C6295) * C92078) *
               C92062 * C36213 +
           ((C554 * C5775 + C92148 * C6291) * C801 +
            (C554 * C5787 + C92148 * C6297) * C92078) *
               C92062 * C36214 +
           ((C554 * C37227 + C92148 * C37539) * C801 +
            (C554 * C37229 + C92148 * C37540) * C92078) *
               C92062 * C36215) *
              C1385) *
         C92099) /
            (p * q * std::sqrt(p + q));
    d2eezy[47] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92148 * C555) * C884 +
            (C554 * C182 + C92148 * C641) * C798 - C5484 * C885 - C5591 * C799 +
            C5486 * C886 + C5592 * C800) *
               C31257 +
           (C584 * C884 + C660 * C798 - C2468 * C885 - C2556 * C799 +
            C4632 * C886 + C4720 * C800) *
               C31258 +
           (C586 * C884 + C661 * C798 - C2470 * C885 - C2557 * C799 +
            C4634 * C886 + C4721 * C800) *
               C31259) *
              C31260 +
          ((C5484 * C884 + C5591 * C798 - C5486 * C885 - C5592 * C799 +
            C5492 * C886 + C5593 * C800) *
               C31257 +
           (C2468 * C884 + C2556 * C798 - C4632 * C885 - C4720 * C799 +
            C5490 * C886 + C5594 * C800) *
               C31258 +
           (C2470 * C884 + C2557 * C798 - C4634 * C885 - C4721 * C799 +
            (C554 * C6557 + C92148 * C7241) * C886 +
            (C554 * C6683 + C92148 * C7357) * C800) *
               C31259) *
              C92186) *
         C92078 * C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92148 * C555) * C181 +
             (C554 * C182 + C92148 * C641) * C92099) *
                C31257 +
            (C648 + C664) * C31258 + C668 * C31259) *
               C31260 +
           ((C5484 * C181 + C5591 * C92099) * C31257 +
            (C4710 + C4711) * C31258 + C15416 * C31259) *
               C92186) *
              C93 -
          (((C15417 + C15418) * C31259 + (C4718 + C4719) * C31258 +
            (C4711 + C4710) * C31257) *
               C92186 +
           ((C666 + C654) * C31259 + (C665 + C651) * C31258 +
            (C664 + C648) * C31257) *
               C31260) *
              C94 +
          ((C668 * C31257 + C669 * C31258 + (C659 + C667) * C31259) * C31260 +
           (C15416 * C31257 + (C15418 + C15417) * C31258 +
            ((C554 * C1989 + C92148 * C2453) * C181 +
             (C554 * C2061 + C92148 * C2539) * C92099) *
                C31259) *
               C92186) *
              C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92148 * C555) * C181 +
             (C554 * C182 + C92148 * C641) * C92099) *
                C31257 +
            (C648 + C664) * C31258 + C668 * C31259) *
               C31260 +
           ((C5484 * C181 + C5591 * C92099) * C31257 +
            (C4710 + C4711) * C31258 + C15416 * C31259) *
               C92186) *
              C92078 * C1383 -
          (((C18719 + C18715) * C31259 + (C8324 + C8316) * C31258 +
            (C9325 * C92099 + C9216 * C181) * C31257) *
               C92186 +
           ((C3276 + C3266) * C31259 + (C3275 + C3263) * C31258 +
            ((C554 * C1471 + C92148 * C1854) * C92099 +
             (C554 * C1389 + C92148 * C1788) * C181) *
                C31257) *
               C31260) *
              C92078 * C1384 +
          ((((C554 * C1390 + C92148 * C1789) * C181 +
             (C554 * C1472 + C92148 * C1855) * C92099) *
                C31257 +
            ((C554 * C1391 + C92148 * C1790) * C181 +
             (C554 * C1473 + C92148 * C1856) * C92099) *
                C31258 +
            ((C554 * C1392 + C92148 * C1791) * C181 +
             (C554 * C1474 + C92148 * C1857) * C92099) *
                C31259) *
               C31260 +
           (((C554 * C5773 + C92148 * C6289) * C181 +
             (C554 * C5871 + C92148 * C6375) * C92099) *
                C31257 +
            ((C554 * C5774 + C92148 * C6290) * C181 +
             (C554 * C5872 + C92148 * C6376) * C92099) *
                C31258 +
            ((C554 * C11870 + C92148 * C12506) * C181 +
             (C554 * C11972 + C92148 * C12624) * C92099) *
                C31259) *
               C92186) *
              C92078 * C1385)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92148 * C555) * C181 +
            (C554 * C182 + C92148 * C641) * C92099) *
               C92062 * C36212 +
           (C5484 * C181 + C5591 * C92099) * C92062 * C36213 +
           (C5486 * C181 + C5592 * C92099) * C92062 * C36214 +
           (C5492 * C181 + C5593 * C92099) * C92062 * C36215) *
              C93 -
          ((C5594 * C92099 + C5490 * C181) * C92062 * C36215 +
           (C4722 + C4712) * C92062 * C36214 +
           (C4711 + C4710) * C92062 * C36213 +
           (C664 + C648) * C92062 * C36212) *
              C94 +
          (C668 * C92062 * C36212 + C15416 * C92062 * C36213 +
           (C4717 + C4723) * C92062 * C36214 +
           ((C554 * C6557 + C92148 * C7241) * C181 +
            (C554 * C6683 + C92148 * C7357) * C92099) *
               C92062 * C36215) *
              C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C554 * C107 + C92148 * C555) * C884 +
           (C554 * C182 + C92148 * C641) * C798 - C5484 * C885 - C5591 * C799 +
           C5486 * C886 + C5592 * C800) *
              C92062 * C36212 +
          (C5484 * C884 + C5591 * C798 - C5486 * C885 - C5592 * C799 +
           C5492 * C886 + C5593 * C800) *
              C92062 * C36213 +
          (C5486 * C884 + C5592 * C798 - C5492 * C885 - C5593 * C799 +
           C37062 * C886 + C37118 * C800) *
              C92062 * C36214 +
          (C5492 * C884 + C5593 * C798 - C37062 * C885 - C37118 * C799 +
           (C554 * C36671 + C92148 * C37051) * C886 +
           (C554 * C36759 + C92148 * C37114) * C800) *
              C92062 * C36215) *
         C92078 * C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92148 * C555) * C181 +
            (C554 * C182 + C92148 * C641) * C92099) *
               C92062 * C36212 +
           (C5484 * C181 + C5591 * C92099) * C92062 * C36213 +
           (C5486 * C181 + C5592 * C92099) * C92062 * C36214 +
           (C5492 * C181 + C5593 * C92099) * C92062 * C36215) *
              C92078 * C1383 -
          (((C554 * C8666 + C92148 * C9318) * C92099 +
            (C554 * C8536 + C92148 * C9196) * C181) *
               C92062 * C36215 +
           (C9326 * C92099 + C9214 * C181) * C92062 * C36214 +
           (C9325 * C92099 + C9216 * C181) * C92062 * C36213 +
           ((C554 * C1471 + C92148 * C1854) * C92099 +
            (C554 * C1389 + C92148 * C1788) * C181) *
               C92062 * C36212) *
              C92078 * C1384 +
          (((C554 * C1390 + C92148 * C1789) * C181 +
            (C554 * C1472 + C92148 * C1855) * C92099) *
               C92062 * C36212 +
           ((C554 * C5773 + C92148 * C6289) * C181 +
            (C554 * C5871 + C92148 * C6375) * C92099) *
               C92062 * C36213 +
           ((C554 * C5775 + C92148 * C6291) * C181 +
            (C554 * C5873 + C92148 * C6377) * C92099) *
               C92062 * C36214 +
           ((C554 * C37227 + C92148 * C37539) * C181 +
            (C554 * C37281 + C92148 * C37591) * C92099) *
               C92062 * C36215) *
              C92078 * C1385)) /
            (p * q * std::sqrt(p + q));
    d2eezz[47] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92148 * C555) * C244 +
             (C554 * C245 + C92148 * C719) * C92110) *
                C31257 +
            (C726 + C742) * C31258 + C746 * C31259) *
               C31260 +
           ((C5673 + C5691) * C31257 + C7466 * C31258 + C15493 * C31259) *
               C92186) *
              C798 -
          (((C4807 + C4803) * C31259 + C7467 * C31258 +
            (C5692 + C5676) * C31257) *
               C92186 +
           (C17876 * C31259 + C7468 * C31258 + (C5691 + C5673) * C31257) *
               C31260) *
              C799 +
          ((C5695 * C31257 + C5679 * C31258 + (C4803 + C4807) * C31259) *
               C31260 +
           ((C5685 + C5694) * C31257 + (C5682 + C5693) * C31258 +
            ((C554 * C6557 + C92148 * C7241) * C244 +
             (C554 * C6795 + C92148 * C7464) * C92110) *
                C31259) *
               C92186) *
              C800) *
         C92078) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92148 * C555) * C244 +
             (C554 * C245 + C92148 * C719) * C92110) *
                C31257 +
            (C726 + C742) * C31258 + C746 * C31259) *
               C31260 +
           ((C5673 + C5691) * C31257 + C7466 * C31258 + C15493 * C31259) *
               C92186) *
              C92099 * C93 -
          (((C2641 + C2631) * C31259 + C17876 * C31258 + C7468 * C31257) *
               C92186 +
           ((C744 + C732) * C31259 + (C743 + C729) * C31258 +
            (C742 + C726) * C31257) *
               C31260) *
              C92099 * C94 +
          ((C746 * C31257 + C747 * C31258 + (C737 + C745) * C31259) * C31260 +
           (C15493 * C31257 + (C2631 + C2641) * C31258 +
            ((C554 * C1989 + C92148 * C2453) * C244 +
             (C554 * C2129 + C92148 * C2627) * C92110) *
                C31259) *
               C92186) *
              C92099 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92148 * C555) * C1534 +
            (C554 * C245 + C92148 * C719) * C1383 -
            (C554 * C1389 + C92148 * C1788) * C1535 -
            (C554 * C1540 + C92148 * C1909) * C1384 +
            (C554 * C1390 + C92148 * C1789) * C1536 +
            (C554 * C1541 + C92148 * C1910) * C1385) *
               C31257 +
           (C584 * C1534 + C738 * C1383 - C3190 * C1535 - C3360 * C1384 +
            (C554 * C1391 + C92148 * C1790) * C1536 +
            (C554 * C1542 + C92148 * C1912) * C1385) *
               C31258 +
           (C586 * C1534 + C739 * C1383 - C3192 * C1535 - C3361 * C1384 +
            (C554 * C1392 + C92148 * C1791) * C1536 +
            (C554 * C1543 + C92148 * C1914) * C1385) *
               C31259) *
              C31260 +
          ((C5484 * C1534 + C5686 * C1383 - C9216 * C1535 - C9437 * C1384 +
            (C554 * C5773 + C92148 * C6289) * C1536 +
            (C554 * C5955 + C92148 * C6453) * C1385) *
               C31257 +
           (C2468 * C1534 + C2640 * C1383 - C8213 * C1535 - C8435 * C1384 +
            (C554 * C5774 + C92148 * C6290) * C1536 +
            (C554 * C5956 + C92148 * C6454) * C1385) *
               C31258 +
           (C2470 * C1534 + C2639 * C1383 - C18615 * C1535 - C18823 * C1384 +
            (C554 * C11870 + C92148 * C12506) * C1536 +
            (C554 * C12072 + C92148 * C12732) * C1385) *
               C31259) *
              C92186) *
         C92099 * C92078) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92148 * C555) * C244 +
            (C554 * C245 + C92148 * C719) * C92110) *
               C92062 * C36212 +
           (C5673 + C5691) * C92062 * C36213 + C5695 * C92062 * C36214 +
           (C5685 + C5694) * C92062 * C36215) *
              C92099 * C93 -
          ((C5693 + C5682) * C92062 * C36215 + C7467 * C92062 * C36214 +
           C7468 * C92062 * C36213 + (C742 + C726) * C92062 * C36212) *
              C92099 * C94 +
          (C746 * C92062 * C36212 + C15493 * C92062 * C36213 +
           (C4803 + C4807) * C92062 * C36214 +
           ((C554 * C6557 + C92148 * C7241) * C244 +
            (C554 * C6795 + C92148 * C7464) * C92110) *
               C92062 * C36215) *
              C92099 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92148 * C555) * C244 +
            (C554 * C245 + C92148 * C719) * C92110) *
               C92062 * C36212 +
           (C5673 + C5691) * C92062 * C36213 + C37170 * C36214 +
           C37175 * C36215) *
              C798 -
          ((C37177 + C37174) * C92062 * C36215 +
           (C5694 + C5685) * C92062 * C36214 +
           (C5692 + C5676) * C92062 * C36213 +
           (C5691 + C5673) * C92062 * C36212) *
              C799 +
          (C37170 * C36212 + C37175 * C36213 +
           (C37174 + C37177) * C92062 * C36214 +
           ((C554 * C36671 + C92148 * C37051) * C244 +
            (C554 * C36823 + C92148 * C37168) * C92110) *
               C92062 * C36215) *
              C800) *
         C92078) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C554 * C107 + C92148 * C555) * C1534 +
           (C554 * C245 + C92148 * C719) * C1383 -
           (C554 * C1389 + C92148 * C1788) * C1535 -
           (C554 * C1540 + C92148 * C1909) * C1384 +
           (C554 * C1390 + C92148 * C1789) * C1536 +
           (C554 * C1541 + C92148 * C1910) * C1385) *
              C92062 * C36212 +
          (C5484 * C1534 + C5686 * C1383 - C9216 * C1535 - C9437 * C1384 +
           (C554 * C5773 + C92148 * C6289) * C1536 +
           (C554 * C5955 + C92148 * C6453) * C1385) *
              C92062 * C36213 +
          (C5486 * C1534 + C5687 * C1383 - C9214 * C1535 - C9438 * C1384 +
           (C554 * C5775 + C92148 * C6291) * C1536 +
           (C554 * C5959 + C92148 * C6456) * C1385) *
              C92062 * C36214 +
          (C5492 * C1534 + C5690 * C1383 -
           (C554 * C8536 + C92148 * C9196) * C1535 -
           (C554 * C8780 + C92148 * C9424) * C1384 +
           (C554 * C37227 + C92148 * C37539) * C1536 +
           (C554 * C37333 + C92148 * C37642) * C1385) *
              C92062 * C36215) *
         C92099 * C92078) /
            (p * q * std::sqrt(p + q));
    d2eexx[48] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C31262 * C107 + C31257 * C113 + C31263 * C108 +
                       C31258 * C114 + C31264 * C109 + C31259 * C115) *
                          C1987 +
                      (C31262 * C117 + C31257 * C125 + C31263 * C118 +
                       C31258 * C126 + C31264 * C119 + C31259 * C127) *
                          C1983 -
                      (C31264 * C110 + C31259 * C116 + C31263 * C109 +
                       C31258 * C115 + C31262 * C108 + C31257 * C114) *
                          C1988 -
                      (C31264 * C120 + C31259 * C128 + C31263 * C119 +
                       C31258 * C127 + C31262 * C118 + C31257 * C126) *
                          C1984) *
                         C31260 +
                     ((C32042 + C32043 + C32044) * C1987 +
                      (C32045 + C32046 + C32047) * C1983 -
                      (C33458 + C33459 + C33460) * C1988 -
                      (C33461 + C33462 + C33463) * C1984) *
                         C92186) *
                        C92148 * C2709 +
                    (((C31262 * C1388 + C31257 * C1400 + C31263 * C1387 +
                       C31258 * C1399 + C31264 * C1386 + C31259 * C1398) *
                          C1988 -
                      ((C31264 * C1395 + C31259 * C1411 + C31263 * C1396 +
                        C31258 * C1412 + C31262 * C1397 + C31257 * C1413) *
                           C1983 +
                       (C31264 * C1387 + C31259 * C1399 + C31263 * C1388 +
                        C31258 * C1400 + C31262 * C1389 + C31257 * C1401) *
                           C1987) +
                      (C31262 * C1396 + C31257 * C1412 + C31263 * C1395 +
                       C31258 * C1411 + C31264 * C1394 + C31259 * C1410) *
                          C1984) *
                         C31260 +
                     ((C31262 * C3432 + C31257 * C3436 + C31263 * C3433 +
                       C31258 * C3437 + C31264 * C3434 + C31259 * C3438) *
                          C1988 -
                      ((C31264 * C3441 + C31259 * C3445 + C31263 * C3440 +
                        C31258 * C3444 + C31262 * C3439 + C31257 * C3443) *
                           C1983 +
                       (C31264 * C3433 + C31259 * C3437 + C31263 * C3432 +
                        C31258 * C3436 + C31262 * C3431 + C31257 * C3435) *
                           C1987) +
                      (C31262 * C3440 + C31257 * C3444 + C31263 * C3441 +
                       C31258 * C3445 + C31264 * C3442 + C31259 * C3446) *
                          C1984) *
                         C92186) *
                        C92148 * C2710) *
                   C92099) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C36216 * C107 + C92062 * C113) * C1987 +
                      (C36216 * C117 + C92062 * C125) * C1983 -
                      (C36216 * C108 + C92062 * C114) * C1988 -
                      (C36216 * C118 + C92062 * C126) * C1984) *
                         C36212 +
                     (C37710 + C37711 - C37734 - C37735) * C36213 +
                     (C37716 + C37717 - C37736 - C37737) * C36214 +
                     (C37722 + C37723 - C37738 - C37739) * C36215) *
                        C92148 * C2709 +
                    (((C36216 * C1388 + C92062 * C1400) * C1988 -
                      ((C36216 * C1397 + C92062 * C1413) * C1983 +
                       (C36216 * C1389 + C92062 * C1401) * C1987) +
                      (C36216 * C1396 + C92062 * C1412) * C1984) *
                         C36212 +
                     ((C36216 * C3432 + C92062 * C3436) * C1988 -
                      ((C36216 * C3439 + C92062 * C3443) * C1983 +
                       (C36216 * C3431 + C92062 * C3435) * C1987) +
                      (C36216 * C3440 + C92062 * C3444) * C1984) *
                         C36213 +
                     ((C36216 * C5771 + C92062 * C5779) * C1988 -
                      ((C36216 * C5778 + C92062 * C5790) * C1983 +
                       (C36216 * C5772 + C92062 * C5780) * C1987) +
                      (C36216 * C5777 + C92062 * C5789) * C1984) *
                         C36214 +
                     ((C36216 * C8537 + C92062 * C8539) * C1988 -
                      ((C36216 * C8540 + C92062 * C8542) * C1983 +
                       (C36216 * C8536 + C92062 * C8538) * C1987) +
                      (C36216 * C8541 + C92062 * C8543) * C1984) *
                         C36215) *
                        C92148 * C2710) *
                   C92099) /
                      (p * q * std::sqrt(p + q));
    d2eexy[48] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((((C31262 * C107 + C31257 * C113 + C31263 * C108 +
                        C31258 * C114 + C31264 * C109 + C31259 * C115) *
                           C181 +
                       (C31262 * C182 + C31257 * C188 + C31263 * C183 +
                        C31258 * C189 + C31264 * C184 + C31259 * C190) *
                           C92099) *
                          C31260 +
                      ((C32042 + C32043 + C32044) * C181 +
                       (C32142 + C32141 + C32140) * C92099) *
                          C92186) *
                         C92148 * C1983 -
                     (((C33570 + C33569 + C33568) * C92099 +
                       (C33458 + C33459 + C33460) * C181) *
                          C92186 +
                      ((C31264 * C185 + C31259 * C191 + C31263 * C184 +
                        C31258 * C190 + C31262 * C183 + C31257 * C189) *
                           C92099 +
                       (C31264 * C110 + C31259 * C116 + C31263 * C109 +
                        C31258 * C115 + C31262 * C108 + C31257 * C114) *
                           C181) *
                          C31260) *
                         C92148 * C1984) *
                        C2709 +
                    ((((C31262 * C1388 + C31257 * C1400 + C31263 * C1387 +
                        C31258 * C1399 + C31264 * C1386 + C31259 * C1398) *
                           C181 +
                       (C31262 * C1470 + C31257 * C1478 + C31263 * C1469 +
                        C31258 * C1477 + C31264 * C1468 + C31259 * C1476) *
                           C92099) *
                          C31260 +
                      ((C31262 * C3432 + C31257 * C3436 + C31263 * C3433 +
                        C31258 * C3437 + C31264 * C3434 + C31259 * C3438) *
                           C181 +
                       (C31262 * C3514 + C31257 * C3518 + C31263 * C3515 +
                        C31258 * C3519 + C31264 * C3516 + C31259 * C3520) *
                           C92099) *
                          C92186) *
                         C92148 * C1984 -
                     (((C31264 * C3515 + C31259 * C3519 + C31263 * C3514 +
                        C31258 * C3518 + C31262 * C3513 + C31257 * C3517) *
                           C92099 +
                       (C31264 * C3433 + C31259 * C3437 + C31263 * C3432 +
                        C31258 * C3436 + C31262 * C3431 + C31257 * C3435) *
                           C181) *
                          C92186 +
                      ((C31264 * C1469 + C31259 * C1477 + C31263 * C1470 +
                        C31258 * C1478 + C31262 * C1471 + C31257 * C1479) *
                           C92099 +
                       (C31264 * C1387 + C31259 * C1399 + C31263 * C1388 +
                        C31258 * C1400 + C31262 * C1389 + C31257 * C1401) *
                           C181) *
                          C31260) *
                         C92148 * C1983) *
                        C2710)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((((C36216 * C107 + C92062 * C113) * C181 +
                       (C36216 * C182 + C92062 * C188) * C92099) *
                          C36212 +
                      (C36692 * C181 + C36770 * C92099) * C36213 +
                      (C36694 * C181 + C36771 * C92099) * C36214 +
                      (C36696 * C181 + C36772 * C92099) * C36215) *
                         C92148 * C1983 -
                     ((C37814 * C92099 + C37732 * C181) * C36215 +
                      (C37813 * C92099 + C37730 * C181) * C36214 +
                      (C37812 * C92099 + C37728 * C181) * C36213 +
                      ((C36216 * C183 + C92062 * C189) * C92099 +
                       (C36216 * C108 + C92062 * C114) * C181) *
                          C36212) *
                         C92148 * C1984) *
                        C2709 +
                    ((((C36216 * C1388 + C92062 * C1400) * C181 +
                       (C36216 * C1470 + C92062 * C1478) * C92099) *
                          C36212 +
                      ((C36216 * C3432 + C92062 * C3436) * C181 +
                       (C36216 * C3514 + C92062 * C3518) * C92099) *
                          C36213 +
                      ((C36216 * C5771 + C92062 * C5779) * C181 +
                       (C36216 * C5869 + C92062 * C5875) * C92099) *
                          C36214 +
                      ((C36216 * C8537 + C92062 * C8539) * C181 +
                       (C36216 * C8667 + C92062 * C8669) * C92099) *
                          C36215) *
                         C92148 * C1984 -
                     (((C36216 * C8666 + C92062 * C8668) * C92099 +
                       (C36216 * C8536 + C92062 * C8538) * C181) *
                          C36215 +
                      ((C36216 * C5870 + C92062 * C5876) * C92099 +
                       (C36216 * C5772 + C92062 * C5780) * C181) *
                          C36214 +
                      ((C36216 * C3513 + C92062 * C3517) * C92099 +
                       (C36216 * C3431 + C92062 * C3435) * C181) *
                          C36213 +
                      ((C36216 * C1471 + C92062 * C1479) * C92099 +
                       (C36216 * C1389 + C92062 * C1401) * C181) *
                          C36212) *
                         C92148 * C1983) *
                        C2710)) /
                      (p * q * std::sqrt(p + q));
    d2eexz[48] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C31262 * C107 + C31257 * C113 + C31263 * C108 +
                       C31258 * C114 + C31264 * C109 + C31259 * C115) *
                          C2849 +
                      (C31262 * C245 + C31257 * C251 + C31263 * C246 +
                       C31258 * C252 + C31264 * C247 + C31259 * C253) *
                          C2709 -
                      (C31264 * C1387 + C31259 * C1399 + C31263 * C1388 +
                       C31258 * C1400 + C31262 * C1389 + C31257 * C1401) *
                          C2850 -
                      (C31264 * C1538 + C31259 * C1546 + C31263 * C1539 +
                       C31258 * C1547 + C31262 * C1540 + C31257 * C1548) *
                          C2710) *
                         C31260 +
                     ((C32042 + C32043 + C32044) * C2849 +
                      (C32232 + C32233 + C32234) * C2709 -
                      (C31264 * C3433 + C31259 * C3437 + C31263 * C3432 +
                       C31258 * C3436 + C31262 * C3431 + C31257 * C3435) *
                          C2850 -
                      (C31264 * C3589 + C31259 * C3593 + C31263 * C3588 +
                       C31258 * C3592 + C31262 * C3587 + C31257 * C3591) *
                          C2710) *
                         C92186) *
                        C92148 * C92099 * C1983 +
                    (((C31262 * C1388 + C31257 * C1400 + C31263 * C1387 +
                       C31258 * C1399 + C31264 * C1386 + C31259 * C1398) *
                          C2850 -
                      ((C31264 * C248 + C31259 * C254 + C31263 * C247 +
                        C31258 * C253 + C31262 * C246 + C31257 * C252) *
                           C2709 +
                       (C31264 * C110 + C31259 * C116 + C31263 * C109 +
                        C31258 * C115 + C31262 * C108 + C31257 * C114) *
                           C2849) +
                      (C31262 * C1539 + C31257 * C1547 + C31263 * C1538 +
                       C31258 * C1546 + C31264 * C1537 + C31259 * C1545) *
                          C2710) *
                         C31260 +
                     ((C31262 * C3432 + C31257 * C3436 + C31263 * C3433 +
                       C31258 * C3437 + C31264 * C3434 + C31259 * C3438) *
                          C2850 -
                      ((C33677 + C33676 + C33675) * C2709 +
                       (C33458 + C33459 + C33460) * C2849) +
                      (C31262 * C3588 + C31257 * C3592 + C31263 * C3589 +
                       C31258 * C3593 + C31264 * C3590 + C31259 * C3594) *
                          C2710) *
                         C92186) *
                        C92148 * C92099 * C1984)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C36216 * C107 + C92062 * C113) * C2849 +
                      (C36216 * C245 + C92062 * C251) * C2709 -
                      (C36216 * C1389 + C92062 * C1401) * C2850 -
                      (C36216 * C1540 + C92062 * C1548) * C2710) *
                         C36212 +
                     (C36692 * C2849 + C36838 * C2709 -
                      (C36216 * C3431 + C92062 * C3435) * C2850 -
                      (C36216 * C3587 + C92062 * C3591) * C2710) *
                         C36213 +
                     (C36694 * C2849 + C36839 * C2709 -
                      (C36216 * C5772 + C92062 * C5780) * C2850 -
                      (C36216 * C5958 + C92062 * C5964) * C2710) *
                         C36214 +
                     (C36696 * C2849 + C36840 * C2709 -
                      (C36216 * C8536 + C92062 * C8538) * C2850 -
                      (C36216 * C8780 + C92062 * C8782) * C2710) *
                         C36215) *
                        C92148 * C92099 * C1983 +
                    (((C36216 * C1388 + C92062 * C1400) * C2850 -
                      ((C36216 * C246 + C92062 * C252) * C2709 +
                       (C36216 * C108 + C92062 * C114) * C2849) +
                      (C36216 * C1539 + C92062 * C1547) * C2710) *
                         C36212 +
                     ((C36216 * C3432 + C92062 * C3436) * C2850 -
                      (C37890 * C2709 + C37728 * C2849) +
                      (C36216 * C3588 + C92062 * C3592) * C2710) *
                         C36213 +
                     ((C36216 * C5771 + C92062 * C5779) * C2850 -
                      (C37891 * C2709 + C37730 * C2849) +
                      (C36216 * C5957 + C92062 * C5963) * C2710) *
                         C36214 +
                     ((C36216 * C8537 + C92062 * C8539) * C2850 -
                      (C37892 * C2709 + C37732 * C2849) +
                      (C36216 * C8781 + C92062 * C8783) * C2710) *
                         C36215) *
                        C92148 * C92099 * C1984)) /
                      (p * q * std::sqrt(p + q));
    d2eeyx[48] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31487 * C107 + C31260 * C308 + C31488 * C805 + C92186 * C1022) *
                C1987 +
            (C31487 * C117 + C31260 * C314 + C31488 * C813 + C92186 * C1030) *
                C1983 -
            (C31514 + C31515) * C1988 - (C31516 + C31517) * C1984) *
               C92148 * C31257 +
           ((C31515 + C31514) * C1987 + (C31517 + C31516) * C1983 -
            (C31519 + C31518) * C1988 - (C31521 + C31520) * C1984) *
               C92148 * C31258 +
           (C31526 * C1987 + C31527 * C1983 - (C31523 + C31522) * C1988 -
            (C31525 + C31524) * C1984) *
               C92148 * C31259) *
              C2709 +
          (((C34722 + C34723) * C1988 -
            ((C31488 * C3439 + C92186 * C3665 + C31487 * C1397 +
              C31260 * C1614) *
                 C1983 +
             (C31488 * C3431 + C92186 * C3661 + C31487 * C1389 +
              C31260 * C1606) *
                 C1987) +
            (C34724 + C34725) * C1984) *
               C92148 * C31257 +
           ((C34726 + C34727) * C1988 -
            ((C34725 + C34724) * C1983 + (C34723 + C34722) * C1987) +
            (C34728 + C34729) * C1984) *
               C92148 * C31258 +
           ((C31487 * C1386 + C31260 * C1603 + C31488 * C3434 +
             C92186 * C3664) *
                C1988 -
            ((C34729 + C34728) * C1983 + (C34727 + C34726) * C1987) +
            (C31487 * C1394 + C31260 * C1611 + C31488 * C3442 +
             C92186 * C3668) *
                C1984) *
               C92148 * C31259) *
              C2710) *
         C92099) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C36367 * C107 + C36212 * C308 + C36368 * C805 + C36213 * C1022 +
            C36369 * C806 + C36214 * C1023 + C36370 * C4882 + C36215 * C5218) *
               C1987 +
           (C36367 * C117 + C36212 * C314 + C36368 * C813 + C36213 * C1030 +
            C36369 * C822 + C36214 * C1031 + C36370 * C4886 + C36215 * C5222) *
               C1983 -
           (C36370 * C4881 + C36215 * C5217 + C36369 * C807 + C36214 * C1024 +
            C36368 * C804 + C36213 * C1021 + C36367 * C108 + C36212 * C309) *
               C1988 -
           (C36370 * C4885 + C36215 * C5221 + C36369 * C823 + C36214 * C1032 +
            C36368 * C812 + C36213 * C1029 + C36367 * C118 + C36212 * C315) *
               C1984) *
              C92148 * C92062 * C2709 +
          ((C36367 * C1388 + C36212 * C1605 + C36368 * C3432 + C36213 * C3662 +
            C36369 * C5771 + C36214 * C6041 + C36370 * C8537 + C36215 * C8895) *
               C1988 -
           ((C36370 * C8540 + C36215 * C8896 + C36369 * C5778 + C36214 * C6048 +
             C36368 * C3439 + C36213 * C3665 + C36367 * C1397 +
             C36212 * C1614) *
                C1983 +
            (C36370 * C8536 + C36215 * C8894 + C36369 * C5772 + C36214 * C6042 +
             C36368 * C3431 + C36213 * C3661 + C36367 * C1389 +
             C36212 * C1606) *
                C1987) +
           (C36367 * C1396 + C36212 * C1613 + C36368 * C3440 + C36213 * C3666 +
            C36369 * C5777 + C36214 * C6047 + C36370 * C8541 + C36215 * C8897) *
               C1984) *
              C92148 * C92062 * C2710) *
         C92099) /
            (p * q * std::sqrt(p + q));
    d2eeyy[48] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31487 * C107 + C31260 * C308 + C31488 * C805 + C92186 * C1022) *
                 C181 +
             (C31487 * C182 + C31260 * C394 + C31488 * C890 + C92186 * C1085) *
                 C92099) *
                C92148 * C31257 +
            ((C31515 + C31514) * C181 + (C31615 + C31616) * C92099) * C92148 *
                C31258 +
            C31624 * C31259) *
               C1983 -
           (((C31619 + C31620) * C92099 + (C31523 + C31522) * C181) * C92148 *
                C31259 +
            ((C31618 + C31617) * C92099 + (C31519 + C31518) * C181) * C92148 *
                C31258 +
            ((C31616 + C31615) * C92099 + (C31514 + C31515) * C181) * C92148 *
                C31257) *
               C1984) *
              C2709 +
          ((((C34722 + C34723) * C181 + (C34836 + C34837) * C92099) * C92148 *
                C31257 +
            ((C34726 + C34727) * C181 + (C34838 + C34839) * C92099) * C92148 *
                C31258 +
            ((C31487 * C1386 + C31260 * C1603 + C31488 * C3434 +
              C92186 * C3664) *
                 C181 +
             (C31487 * C1468 + C31260 * C1669 + C31488 * C3516 +
              C92186 * C3738) *
                 C92099) *
                C92148 * C31259) *
               C1984 -
           (((C34839 + C34838) * C92099 + (C34727 + C34726) * C181) * C92148 *
                C31259 +
            ((C34837 + C34836) * C92099 + (C34723 + C34722) * C181) * C92148 *
                C31258 +
            ((C31488 * C3513 + C92186 * C3735 + C31487 * C1471 +
              C31260 * C1672) *
                 C92099 +
             (C31488 * C3431 + C92186 * C3661 + C31487 * C1389 +
              C31260 * C1606) *
                 C181) *
                C92148 * C31257) *
               C1983) *
              C2710)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C36367 * C107 + C36212 * C308 + C36368 * C805 + C36213 * C1022 +
             C36369 * C806 + C36214 * C1023 + C36370 * C4882 + C36215 * C5218) *
                C181 +
            (C36367 * C182 + C36212 * C394 + C36368 * C890 + C36213 * C1085 +
             C36369 * C891 + C36214 * C1086 + C36370 * C5012 + C36215 * C5299) *
                C92099) *
               C92148 * C92062 * C1983 -
           ((C36370 * C5013 + C36215 * C5301 + C36369 * C892 + C36214 * C1088 +
             C36368 * C889 + C36213 * C1087 + C36367 * C183 + C36212 * C395) *
                C92099 +
            (C36370 * C4881 + C36215 * C5217 + C36369 * C807 + C36214 * C1024 +
             C36368 * C804 + C36213 * C1021 + C36367 * C108 + C36212 * C309) *
                C181) *
               C92148 * C92062 * C1984) *
              C2709 +
          (((C36367 * C1388 + C36212 * C1605 + C36368 * C3432 + C36213 * C3662 +
             C36369 * C5771 + C36214 * C6041 + C36370 * C8537 +
             C36215 * C8895) *
                C181 +
            (C36367 * C1470 + C36212 * C1671 + C36368 * C3514 + C36213 * C3736 +
             C36369 * C5869 + C36214 * C6127 + C36370 * C8667 +
             C36215 * C8997) *
                C92099) *
               C92148 * C92062 * C1984 -
           ((C36370 * C8666 + C36215 * C8996 + C36369 * C5870 + C36214 * C6128 +
             C36368 * C3513 + C36213 * C3735 + C36367 * C1471 +
             C36212 * C1672) *
                C92099 +
            (C36370 * C8536 + C36215 * C8894 + C36369 * C5772 + C36214 * C6042 +
             C36368 * C3431 + C36213 * C3661 + C36367 * C1389 +
             C36212 * C1606) *
                C181) *
               C92148 * C92062 * C1983) *
              C2710)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[48] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31487 * C107 + C31260 * C308 + C31488 * C805 + C92186 * C1022) *
                C2849 +
            (C31487 * C245 + C31260 * C474 + C31488 * C956 + C92186 * C1146) *
                C2709 -
            (C31488 * C3431 + C92186 * C3661 + C31487 * C1389 +
             C31260 * C1606) *
                C2850 -
            (C31488 * C3587 + C92186 * C3805 + C31487 * C1540 +
             C31260 * C1727) *
                C2710) *
               C92148 * C31257 +
           ((C31515 + C31514) * C2849 + (C31712 + C31713) * C2709 -
            (C34723 + C34722) * C2850 - (C34946 + C34947) * C2710) *
               C92148 * C31258 +
           (C31526 * C2849 + C31718 * C2709 - (C34727 + C34726) * C2850 -
            (C34948 + C34949) * C2710) *
               C92148 * C31259) *
              C92099 * C1983 +
          (((C34722 + C34723) * C2850 -
            ((C31713 + C31712) * C2709 + (C31514 + C31515) * C2849) +
            (C34947 + C34946) * C2710) *
               C92148 * C31257 +
           ((C34726 + C34727) * C2850 -
            ((C31715 + C31714) * C2709 + (C31519 + C31518) * C2849) +
            (C34949 + C34948) * C2710) *
               C92148 * C31258 +
           ((C31487 * C1386 + C31260 * C1603 + C31488 * C3434 +
             C92186 * C3664) *
                C2850 -
            ((C31716 + C31717) * C2709 + (C31523 + C31522) * C2849) +
            (C31487 * C1537 + C31260 * C1733 + C31488 * C3590 +
             C92186 * C3808) *
                C2710) *
               C92148 * C31259) *
              C92099 * C1984)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C36367 * C107 + C36212 * C308 + C36368 * C805 + C36213 * C1022 +
            C36369 * C806 + C36214 * C1023 + C36370 * C4882 + C36215 * C5218) *
               C2849 +
           (C36367 * C245 + C36212 * C474 + C36368 * C956 + C36213 * C1146 +
            C36369 * C957 + C36214 * C1147 + C36370 * C5114 + C36215 * C5378) *
               C2709 -
           (C36370 * C8536 + C36215 * C8894 + C36369 * C5772 + C36214 * C6042 +
            C36368 * C3431 + C36213 * C3661 + C36367 * C1389 + C36212 * C1606) *
               C2850 -
           (C36370 * C8780 + C36215 * C9096 + C36369 * C5958 + C36214 * C6207 +
            C36368 * C3587 + C36213 * C3805 + C36367 * C1540 + C36212 * C1727) *
               C2710) *
              C92148 * C92062 * C92099 * C1983 +
          ((C36367 * C1388 + C36212 * C1605 + C36368 * C3432 + C36213 * C3662 +
            C36369 * C5771 + C36214 * C6041 + C36370 * C8537 + C36215 * C8895) *
               C2850 -
           ((C36370 * C5113 + C36215 * C5377 + C36369 * C958 + C36214 * C1148 +
             C36368 * C955 + C36213 * C1145 + C36367 * C246 + C36212 * C475) *
                C2709 +
            (C36370 * C4881 + C36215 * C5217 + C36369 * C807 + C36214 * C1024 +
             C36368 * C804 + C36213 * C1021 + C36367 * C108 + C36212 * C309) *
                C2849) +
           (C36367 * C1539 + C36212 * C1729 + C36368 * C3588 + C36213 * C3806 +
            C36369 * C5957 + C36214 * C6210 + C36370 * C8781 + C36215 * C9097) *
               C2710) *
              C92148 * C92062 * C92099 * C1984)) /
            (p * q * std::sqrt(p + q));
    d2eezx[48] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92148 * C555) * C1987 +
             (C554 * C117 + C92148 * C561) * C1983 - C584 * C1988 -
             C585 * C1984) *
                C31257 +
            (C584 * C1987 + C585 * C1983 - C586 * C1988 - C587 * C1984) *
                C31258 +
            (C586 * C1987 + C587 * C1983 - C588 * C1988 - C589 * C1984) *
                C31259) *
               C31260 +
           ((C7244 + C7245 - C7246 - C7247) * C31257 +
            (C7248 + C7249 - C7250 - C7251) * C31258 +
            (C17672 + C17673 - C17674 - C17675) * C31259) *
               C92186) *
              C2709 +
          (((C3190 * C1988 -
             ((C554 * C1397 + C92148 * C1796) * C1983 +
              (C554 * C1389 + C92148 * C1788) * C1987) +
             C3191 * C1984) *
                C31257 +
            (C3192 * C1988 - (C3191 * C1983 + C3190 * C1987) + C3193 * C1984) *
                C31258 +
            (C3194 * C1988 - (C3193 * C1983 + C3192 * C1987) + C3195 * C1984) *
                C31259) *
               C31260 +
           ((C8213 * C1988 - (C9215 * C1983 + C9216 * C1987) + C8214 * C1984) *
                C31257 +
            (C18615 * C1988 - (C8214 * C1983 + C8213 * C1987) +
             C18616 * C1984) *
                C31258 +
            ((C554 * C3434 + C92148 * C3878) * C1988 -
             (C18616 * C1983 + C18615 * C1987) +
             (C554 * C3442 + C92148 * C3882) * C1984) *
                C31259) *
               C92186) *
              C2710) *
         C92099) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92148 * C555) * C1987 +
            (C554 * C117 + C92148 * C561) * C1983 - C584 * C1988 -
            C585 * C1984) *
               C92062 * C36212 +
           (C7244 + C7245 - C7246 - C7247) * C92062 * C36213 +
           (C7252 + C7253 - C7254 - C7255) * C92062 * C36214 +
           (C38160 + C38161 - C38162 - C38163) * C92062 * C36215) *
              C2709 +
          ((C3190 * C1988 -
            ((C554 * C1397 + C92148 * C1796) * C1983 +
             (C554 * C1389 + C92148 * C1788) * C1987) +
            C3191 * C1984) *
               C92062 * C36212 +
           (C8213 * C1988 - (C9215 * C1983 + C9216 * C1987) + C8214 * C1984) *
               C92062 * C36213 +
           (C8215 * C1988 - (C9213 * C1983 + C9214 * C1987) + C8216 * C1984) *
               C92062 * C36214 +
           ((C554 * C8537 + C92148 * C9197) * C1988 -
            ((C554 * C8540 + C92148 * C9198) * C1983 +
             (C554 * C8536 + C92148 * C9196) * C1987) +
            (C554 * C8541 + C92148 * C9199) * C1984) *
               C92062 * C36215) *
              C2710) *
         C92099) /
            (p * q * std::sqrt(p + q));
    d2eezy[48] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((((C554 * C107 + C92148 * C555) * C181 +
                        (C554 * C182 + C92148 * C641) * C92099) *
                           C31257 +
                       (C648 + C664) * C31258 + C668 * C31259) *
                          C31260 +
                      ((C5484 * C181 + C5591 * C92099) * C31257 +
                       (C4710 + C4711) * C31258 + C15416 * C31259) *
                          C92186) *
                         C1983 -
                     (((C15417 + C15418) * C31259 + (C4718 + C4719) * C31258 +
                       (C4711 + C4710) * C31257) *
                          C92186 +
                      ((C666 + C654) * C31259 + (C665 + C651) * C31258 +
                       (C664 + C648) * C31257) *
                          C31260) *
                         C1984) *
                        C2709 +
                    ((((C3263 + C3275) * C31257 + (C3266 + C3276) * C31258 +
                       (C3269 + C3277) * C31259) *
                          C31260 +
                      ((C8316 + C8324) * C31257 + (C18715 + C18719) * C31258 +
                       ((C554 * C3434 + C92148 * C3878) * C181 +
                        (C554 * C3516 + C92148 * C3952) * C92099) *
                           C31259) *
                          C92186) *
                         C1984 -
                     (((C18719 + C18715) * C31259 + (C8324 + C8316) * C31258 +
                       (C9325 * C92099 + C9216 * C181) * C31257) *
                          C92186 +
                      ((C3276 + C3266) * C31259 + (C3275 + C3263) * C31258 +
                       ((C554 * C1471 + C92148 * C1854) * C92099 +
                        (C554 * C1389 + C92148 * C1788) * C181) *
                           C31257) *
                          C31260) *
                         C1983) *
                        C2710)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((((C554 * C107 + C92148 * C555) * C181 +
                       (C554 * C182 + C92148 * C641) * C92099) *
                          C92062 * C36212 +
                      (C5484 * C181 + C5591 * C92099) * C92062 * C36213 +
                      (C5486 * C181 + C5592 * C92099) * C92062 * C36214 +
                      (C5492 * C181 + C5593 * C92099) * C92062 * C36215) *
                         C1983 -
                     ((C5594 * C92099 + C5490 * C181) * C92062 * C36215 +
                      (C4722 + C4712) * C92062 * C36214 +
                      (C4711 + C4710) * C92062 * C36213 +
                      (C664 + C648) * C92062 * C36212) *
                         C1984) *
                        C2709 +
                    (((C3263 + C3275) * C92062 * C36212 +
                      (C8316 + C8324) * C92062 * C36213 +
                      (C8319 + C8325) * C92062 * C36214 +
                      ((C554 * C8537 + C92148 * C9197) * C181 +
                       (C554 * C8667 + C92148 * C9319) * C92099) *
                          C92062 * C36215) *
                         C1984 -
                     (((C554 * C8666 + C92148 * C9318) * C92099 +
                       (C554 * C8536 + C92148 * C9196) * C181) *
                          C92062 * C36215 +
                      (C9326 * C92099 + C9214 * C181) * C92062 * C36214 +
                      (C9325 * C92099 + C9216 * C181) * C92062 * C36213 +
                      ((C554 * C1471 + C92148 * C1854) * C92099 +
                       (C554 * C1389 + C92148 * C1788) * C181) *
                          C92062 * C36212) *
                         C1983) *
                        C2710)) /
                      (p * q * std::sqrt(p + q));
    d2eezz[48] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((((C554 * C107 + C92148 * C555) * C2849 +
                       (C554 * C245 + C92148 * C719) * C2709 -
                       (C554 * C1389 + C92148 * C1788) * C2850 -
                       (C554 * C1540 + C92148 * C1909) * C2710) *
                          C31257 +
                      (C3345 + C3346 - C3347 - C3363) * C31258 +
                      (C3350 + C3351 - C3352 - C3364) * C31259) *
                         C31260 +
                     ((C9427 + C9428 - C9429 - C9439) * C31257 +
                      (C8425 + C8426 - C8427 - C8437) * C31258 +
                      (C18818 + C18819 - C18820 - C18824) * C31259) *
                         C92186) *
                        C92099 * C1983 +
                    (((C3347 - (C3346 + C3345) + C3363) * C31257 +
                      (C3352 - (C3351 + C3350) + C3364) * C31258 +
                      (C3357 - (C3356 + C3355) + C3365) * C31259) *
                         C31260 +
                     ((C8427 - (C8426 + C8425) + C8437) * C31257 +
                      (C18820 - (C18819 + C18818) + C18824) * C31258 +
                      ((C554 * C3434 + C92148 * C3878) * C2850 -
                       (C2638 * C2709 + C2472 * C2849) +
                       (C554 * C3590 + C92148 * C4022) * C2710) *
                          C31259) *
                         C92186) *
                        C92099 * C1984)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C554 * C107 + C92148 * C555) * C2849 +
                      (C554 * C245 + C92148 * C719) * C2709 -
                      (C554 * C1389 + C92148 * C1788) * C2850 -
                      (C554 * C1540 + C92148 * C1909) * C2710) *
                         C92062 * C36212 +
                     (C9427 + C9428 - C9429 - C9439) * C92062 * C36213 +
                     (C9432 + C9433 - C9434 - C9440) * C92062 * C36214 +
                     (C5492 * C2849 + C5690 * C2709 -
                      (C554 * C8536 + C92148 * C9196) * C2850 -
                      (C554 * C8780 + C92148 * C9424) * C2710) *
                         C92062 * C36215) *
                        C92099 * C1983 +
                    ((C3347 - (C3346 + C3345) + C3363) * C92062 * C36212 +
                     (C8427 - (C8426 + C8425) + C8437) * C92062 * C36213 +
                     (C8432 - (C8431 + C8430) + C8438) * C92062 * C36214 +
                     ((C554 * C8537 + C92148 * C9197) * C2850 -
                      (C5689 * C2709 + C5490 * C2849) +
                      (C554 * C8781 + C92148 * C9425) * C2710) *
                         C92062 * C36215) *
                        C92099 * C1984)) /
                      (p * q * std::sqrt(p + q));
    d2eexx[49] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C31262 * C107 + C31257 * C113 + C31263 * C108 + C31258 * C114 +
            C31264 * C109 + C31259 * C115) *
               C104 +
           (C31262 * C117 + C31257 * C125 + C31263 * C118 + C31258 * C126 +
            C31264 * C119 + C31259 * C127) *
               C93 -
           (C31264 * C110 + C31259 * C116 + C31263 * C109 + C31258 * C115 +
            C31262 * C108 + C31257 * C114) *
               C105 -
           (C31264 * C120 + C31259 * C128 + C31263 * C119 + C31258 * C127 +
            C31262 * C118 + C31257 * C126) *
               C94 +
           (C31262 * C109 + C31257 * C115 + C31263 * C110 + C31258 * C116 +
            C31264 * C111 + C31259 * C121) *
               C106 +
           (C31262 * C119 + C31257 * C127 + C31263 * C120 + C31258 * C128 +
            C31264 * C122 + C31259 * C129) *
               C95) *
              C31260 +
          ((C31262 * C805 + C31257 * C817 + C31263 * C804 + C31258 * C816 +
            C31264 * C803 + C31259 * C815) *
               C104 +
           (C31262 * C813 + C31257 * C829 + C31263 * C812 + C31258 * C828 +
            C31264 * C811 + C31259 * C827) *
               C93 -
           (C31264 * C802 + C31259 * C814 + C31263 * C803 + C31258 * C815 +
            C31262 * C804 + C31257 * C816) *
               C105 -
           (C31264 * C810 + C31259 * C826 + C31263 * C811 + C31258 * C827 +
            C31262 * C812 + C31257 * C828) *
               C94 +
           (C31262 * C803 + C31257 * C815 + C31263 * C802 + C31258 * C814 +
            C31264 * C1989 + C31259 * C1990) *
               C106 +
           (C31262 * C811 + C31257 * C827 + C31263 * C810 + C31258 * C826 +
            C31264 * C1991 + C31259 * C1992) *
               C95) *
              C92186) *
         C92148 * C92110 * C92099) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31262 * C107 + C31257 * C113 + C31263 * C108 + C31258 * C114 +
             C31264 * C109 + C31259 * C115) *
                C801 +
            (C31262 * C117 + C31257 * C125 + C31263 * C118 + C31258 * C126 +
             C31264 * C119 + C31259 * C127) *
                C92078) *
               C31260 +
           ((C32042 + C32043 + C32044) * C801 +
            (C32045 + C32046 + C32047) * C92078) *
               C92186) *
              C92148 * C92110 * C798 -
          (((C32048 + C32049 + C32050) * C92078 +
            (C32051 + C32052 + C32053) * C801) *
               C92186 +
           ((C32047 + C32046 + C32045) * C92078 +
            (C32044 + C32043 + C32042) * C801) *
               C31260) *
              C92148 * C92110 * C799 +
          (((C32053 + C32052 + C32051) * C801 +
            (C32050 + C32049 + C32048) * C92078) *
               C31260 +
           ((C31262 * C4882 + C31257 * C4888 + C31263 * C4881 + C31258 * C4887 +
             C31264 * C6557 + C31259 * C6558) *
                C801 +
            (C31262 * C4886 + C31257 * C4894 + C31263 * C4885 + C31258 * C4893 +
             C31264 * C6559 + C31259 * C6560) *
                C92078) *
               C92186) *
              C92148 * C92110 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C36216 * C107 + C92062 * C113) * C104 +
           (C36216 * C117 + C92062 * C125) * C93 -
           (C36216 * C108 + C92062 * C114) * C105 -
           (C36216 * C118 + C92062 * C126) * C94 +
           (C36216 * C109 + C92062 * C115) * C106 +
           (C36216 * C119 + C92062 * C127) * C95) *
              C36212 +
          ((C36216 * C805 + C92062 * C817) * C104 +
           (C36216 * C813 + C92062 * C829) * C93 -
           (C36216 * C804 + C92062 * C816) * C105 -
           (C36216 * C812 + C92062 * C828) * C94 +
           (C36216 * C803 + C92062 * C815) * C106 +
           (C36216 * C811 + C92062 * C827) * C95) *
              C36213 +
          ((C36216 * C806 + C92062 * C818) * C104 +
           (C36216 * C822 + C92062 * C830) * C93 -
           (C36216 * C807 + C92062 * C819) * C105 -
           (C36216 * C823 + C92062 * C831) * C94 +
           (C36216 * C808 + C92062 * C820) * C106 +
           (C36216 * C824 + C92062 * C832) * C95) *
              C36214 +
          ((C36216 * C4882 + C92062 * C4888) * C104 +
           (C36216 * C4886 + C92062 * C4894) * C93 -
           (C36216 * C4881 + C92062 * C4887) * C105 -
           (C36216 * C4885 + C92062 * C4893) * C94 +
           (C36216 * C6557 + C92062 * C6558) * C106 +
           (C36216 * C6559 + C92062 * C6560) * C95) *
              C36215) *
         C92148 * C92110 * C92099) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C36216 * C107 + C92062 * C113) * C801 +
            (C36216 * C117 + C92062 * C125) * C92078) *
               C36212 +
           (C36700 + C36701) * C36213 + C36708 * C36214 + C36709 * C36215) *
              C92148 * C92110 * C798 -
          ((C36706 + C36707) * C36215 + (C36705 + C36704) * C36214 +
           (C36703 + C36702) * C36213 + (C36701 + C36700) * C36212) *
              C92148 * C92110 * C799 +
          (C36708 * C36212 + C36709 * C36213 + (C36707 + C36706) * C36214 +
           ((C36216 * C36671 + C92062 * C36672) * C801 +
            (C36216 * C36673 + C92062 * C36674) * C92078) *
               C36215) *
              C92148 * C92110 * C800)) /
            (p * q * std::sqrt(p + q));
    d2eexy[49] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31262 * C107 + C31257 * C113 + C31263 * C108 + C31258 * C114 +
             C31264 * C109 + C31259 * C115) *
                C181 +
            (C31262 * C182 + C31257 * C188 + C31263 * C183 + C31258 * C189 +
             C31264 * C184 + C31259 * C190) *
                C92099) *
               C31260 +
           ((C31262 * C805 + C31257 * C817 + C31263 * C804 + C31258 * C816 +
             C31264 * C803 + C31259 * C815) *
                C181 +
            (C31262 * C890 + C31257 * C898 + C31263 * C889 + C31258 * C897 +
             C31264 * C888 + C31259 * C896) *
                C92099) *
               C92186) *
              C92148 * C93 -
          (((C31264 * C887 + C31259 * C895 + C31263 * C888 + C31258 * C896 +
             C31262 * C889 + C31257 * C897) *
                C92099 +
            (C31264 * C802 + C31259 * C814 + C31263 * C803 + C31258 * C815 +
             C31262 * C804 + C31257 * C816) *
                C181) *
               C92186 +
           ((C31264 * C185 + C31259 * C191 + C31263 * C184 + C31258 * C190 +
             C31262 * C183 + C31257 * C189) *
                C92099 +
            (C31264 * C110 + C31259 * C116 + C31263 * C109 + C31258 * C115 +
             C31262 * C108 + C31257 * C114) *
                C181) *
               C31260) *
              C92148 * C94 +
          (((C31262 * C109 + C31257 * C115 + C31263 * C110 + C31258 * C116 +
             C31264 * C111 + C31259 * C121) *
                C181 +
            (C31262 * C184 + C31257 * C190 + C31263 * C185 + C31258 * C191 +
             C31264 * C186 + C31259 * C192) *
                C92099) *
               C31260 +
           ((C31262 * C803 + C31257 * C815 + C31263 * C802 + C31258 * C814 +
             C31264 * C1989 + C31259 * C1990) *
                C181 +
            (C31262 * C888 + C31257 * C896 + C31263 * C887 + C31258 * C895 +
             C31264 * C2061 + C31259 * C2062) *
                C92099) *
               C92186) *
              C92148 * C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C31262 * C107 + C31257 * C113 + C31263 * C108 + C31258 * C114 +
            C31264 * C109 + C31259 * C115) *
               C884 +
           (C31262 * C182 + C31257 * C188 + C31263 * C183 + C31258 * C189 +
            C31264 * C184 + C31259 * C190) *
               C798 -
           (C32044 + C32043 + C32042) * C885 -
           (C32140 + C32141 + C32142) * C799 +
           (C32053 + C32052 + C32051) * C886 +
           (C32143 + C32144 + C32145) * C800) *
              C31260 +
          ((C32042 + C32043 + C32044) * C884 +
           (C32142 + C32141 + C32140) * C798 -
           (C32051 + C32052 + C32053) * C885 -
           (C32145 + C32144 + C32143) * C799 +
           (C31262 * C4882 + C31257 * C4888 + C31263 * C4881 + C31258 * C4887 +
            C31264 * C6557 + C31259 * C6558) *
               C886 +
           (C31262 * C5012 + C31257 * C5016 + C31263 * C5013 + C31258 * C5017 +
            C31264 * C6683 + C31259 * C6684) *
               C800) *
              C92186) *
         C92148 * C92078 * C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C36216 * C107 + C92062 * C113) * C181 +
            (C36216 * C182 + C92062 * C188) * C92099) *
               C36212 +
           ((C36216 * C805 + C92062 * C817) * C181 +
            (C36216 * C890 + C92062 * C898) * C92099) *
               C36213 +
           ((C36216 * C806 + C92062 * C818) * C181 +
            (C36216 * C891 + C92062 * C899) * C92099) *
               C36214 +
           ((C36216 * C4882 + C92062 * C4888) * C181 +
            (C36216 * C5012 + C92062 * C5016) * C92099) *
               C36215) *
              C92148 * C93 -
          (((C36216 * C5013 + C92062 * C5017) * C92099 +
            (C36216 * C4881 + C92062 * C4887) * C181) *
               C36215 +
           ((C36216 * C892 + C92062 * C900) * C92099 +
            (C36216 * C807 + C92062 * C819) * C181) *
               C36214 +
           ((C36216 * C889 + C92062 * C897) * C92099 +
            (C36216 * C804 + C92062 * C816) * C181) *
               C36213 +
           ((C36216 * C183 + C92062 * C189) * C92099 +
            (C36216 * C108 + C92062 * C114) * C181) *
               C36212) *
              C92148 * C94 +
          (((C36216 * C109 + C92062 * C115) * C181 +
            (C36216 * C184 + C92062 * C190) * C92099) *
               C36212 +
           ((C36216 * C803 + C92062 * C815) * C181 +
            (C36216 * C888 + C92062 * C896) * C92099) *
               C36213 +
           ((C36216 * C808 + C92062 * C820) * C181 +
            (C36216 * C893 + C92062 * C901) * C92099) *
               C36214 +
           ((C36216 * C6557 + C92062 * C6558) * C181 +
            (C36216 * C6683 + C92062 * C6684) * C92099) *
               C36215) *
              C92148 * C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C36216 * C107 + C92062 * C113) * C884 +
           (C36216 * C182 + C92062 * C188) * C798 - C36692 * C885 -
           C36770 * C799 + C36694 * C886 + C36771 * C800) *
              C36212 +
          (C36692 * C884 + C36770 * C798 - C36694 * C885 - C36771 * C799 +
           C36696 * C886 + C36772 * C800) *
              C36213 +
          (C36694 * C884 + C36771 * C798 - C36696 * C885 - C36772 * C799 +
           C36699 * C886 + C36773 * C800) *
              C36214 +
          (C36696 * C884 + C36772 * C798 - C36699 * C885 - C36773 * C799 +
           (C36216 * C36671 + C92062 * C36672) * C886 +
           (C36216 * C36759 + C92062 * C36760) * C800) *
              C36215) *
         C92148 * C92078 * C92110) /
            (p * q * std::sqrt(p + q));
    d2eexz[49] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31262 * C107 + C31257 * C113 + C31263 * C108 + C31258 * C114 +
             C31264 * C109 + C31259 * C115) *
                C244 +
            (C31262 * C245 + C31257 * C251 + C31263 * C246 + C31258 * C252 +
             C31264 * C247 + C31259 * C253) *
                C92110) *
               C31260 +
           ((C31262 * C805 + C31257 * C817 + C31263 * C804 + C31258 * C816 +
             C31264 * C803 + C31259 * C815) *
                C244 +
            (C31262 * C956 + C31257 * C964 + C31263 * C955 + C31258 * C963 +
             C31264 * C954 + C31259 * C962) *
                C92110) *
               C92186) *
              C92148 * C92099 * C93 -
          (((C31264 * C953 + C31259 * C961 + C31263 * C954 + C31258 * C962 +
             C31262 * C955 + C31257 * C963) *
                C92110 +
            (C31264 * C802 + C31259 * C814 + C31263 * C803 + C31258 * C815 +
             C31262 * C804 + C31257 * C816) *
                C244) *
               C92186 +
           ((C31264 * C248 + C31259 * C254 + C31263 * C247 + C31258 * C253 +
             C31262 * C246 + C31257 * C252) *
                C92110 +
            (C31264 * C110 + C31259 * C116 + C31263 * C109 + C31258 * C115 +
             C31262 * C108 + C31257 * C114) *
                C244) *
               C31260) *
              C92148 * C92099 * C94 +
          (((C31262 * C109 + C31257 * C115 + C31263 * C110 + C31258 * C116 +
             C31264 * C111 + C31259 * C121) *
                C244 +
            (C31262 * C247 + C31257 * C253 + C31263 * C248 + C31258 * C254 +
             C31264 * C249 + C31259 * C255) *
                C92110) *
               C31260 +
           ((C31262 * C803 + C31257 * C815 + C31263 * C802 + C31258 * C814 +
             C31264 * C1989 + C31259 * C1990) *
                C244 +
            (C31262 * C954 + C31257 * C962 + C31263 * C953 + C31258 * C961 +
             C31264 * C2129 + C31259 * C2130) *
                C92110) *
               C92186) *
              C92148 * C92099 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31262 * C107 + C31257 * C113 + C31263 * C108 + C31258 * C114 +
             C31264 * C109 + C31259 * C115) *
                C244 +
            (C31262 * C245 + C31257 * C251 + C31263 * C246 + C31258 * C252 +
             C31264 * C247 + C31259 * C253) *
                C92110) *
               C31260 +
           ((C32042 + C32043 + C32044) * C244 +
            (C32232 + C32233 + C32234) * C92110) *
               C92186) *
              C92148 * C798 -
          (((C32235 + C32236 + C32237) * C92110 +
            (C32051 + C32052 + C32053) * C244) *
               C92186 +
           ((C32234 + C32233 + C32232) * C92110 +
            (C32044 + C32043 + C32042) * C244) *
               C31260) *
              C92148 * C799 +
          (((C32053 + C32052 + C32051) * C244 +
            (C32237 + C32236 + C32235) * C92110) *
               C31260 +
           ((C31262 * C4882 + C31257 * C4888 + C31263 * C4881 + C31258 * C4887 +
             C31264 * C6557 + C31259 * C6558) *
                C244 +
            (C31262 * C5114 + C31257 * C5118 + C31263 * C5113 + C31258 * C5117 +
             C31264 * C6795 + C31259 * C6796) *
                C92110) *
               C92186) *
              C92148 * C800) *
         C92078) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C36216 * C107 + C92062 * C113) * C244 +
            (C36216 * C245 + C92062 * C251) * C92110) *
               C36212 +
           ((C36216 * C805 + C92062 * C817) * C244 +
            (C36216 * C956 + C92062 * C964) * C92110) *
               C36213 +
           ((C36216 * C806 + C92062 * C818) * C244 +
            (C36216 * C957 + C92062 * C965) * C92110) *
               C36214 +
           ((C36216 * C4882 + C92062 * C4888) * C244 +
            (C36216 * C5114 + C92062 * C5118) * C92110) *
               C36215) *
              C92148 * C92099 * C93 -
          (((C36216 * C5113 + C92062 * C5117) * C92110 +
            (C36216 * C4881 + C92062 * C4887) * C244) *
               C36215 +
           ((C36216 * C958 + C92062 * C966) * C92110 +
            (C36216 * C807 + C92062 * C819) * C244) *
               C36214 +
           ((C36216 * C955 + C92062 * C963) * C92110 +
            (C36216 * C804 + C92062 * C816) * C244) *
               C36213 +
           ((C36216 * C246 + C92062 * C252) * C92110 +
            (C36216 * C108 + C92062 * C114) * C244) *
               C36212) *
              C92148 * C92099 * C94 +
          (((C36216 * C109 + C92062 * C115) * C244 +
            (C36216 * C247 + C92062 * C253) * C92110) *
               C36212 +
           ((C36216 * C803 + C92062 * C815) * C244 +
            (C36216 * C954 + C92062 * C962) * C92110) *
               C36213 +
           ((C36216 * C808 + C92062 * C820) * C244 +
            (C36216 * C959 + C92062 * C967) * C92110) *
               C36214 +
           ((C36216 * C6557 + C92062 * C6558) * C244 +
            (C36216 * C6795 + C92062 * C6796) * C92110) *
               C36215) *
              C92148 * C92099 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C36216 * C107 + C92062 * C113) * C244 +
            (C36216 * C245 + C92062 * C251) * C92110) *
               C36212 +
           (C36826 + C36842) * C36213 + C36846 * C36214 + C36847 * C36215) *
              C92148 * C798 -
          ((C36845 + C36837) * C36215 + (C36844 + C36832) * C36214 +
           (C36843 + C36829) * C36213 + (C36842 + C36826) * C36212) *
              C92148 * C799 +
          (C36846 * C36212 + C36847 * C36213 + (C36837 + C36845) * C36214 +
           ((C36216 * C36671 + C92062 * C36672) * C244 +
            (C36216 * C36823 + C92062 * C36824) * C92110) *
               C36215) *
              C92148 * C800) *
         C92078) /
            (p * q * std::sqrt(p + q));
    d2eeyx[49] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C31487 * C107 + C31260 * C308 + C31488 * C805 + C92186 * C1022) *
               C104 +
           (C31487 * C117 + C31260 * C314 + C31488 * C813 + C92186 * C1030) *
               C93 -
           (C31514 + C31515) * C105 - (C31516 + C31517) * C94 + C31526 * C106 +
           C31527 * C95) *
              C92148 * C31257 +
          ((C31515 + C31514) * C104 + (C31517 + C31516) * C93 -
           (C31519 + C31518) * C105 - (C31521 + C31520) * C94 +
           (C31522 + C31523) * C106 + (C31524 + C31525) * C95) *
              C92148 * C31258 +
          (C31526 * C104 + C31527 * C93 - (C31523 + C31522) * C105 -
           (C31525 + C31524) * C94 +
           (C31487 * C111 + C31260 * C312 + C31488 * C1989 + C92186 * C2197) *
               C106 +
           (C31487 * C122 + C31260 * C318 + C31488 * C1991 + C92186 * C2198) *
               C95) *
              C92148 * C31259) *
         C92110 * C92099) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31487 * C107 + C31260 * C308 + C31488 * C805 + C92186 * C1022) *
                C801 +
            (C31487 * C117 + C31260 * C314 + C31488 * C813 + C92186 * C1030) *
                C92078) *
               C92148 * C31257 +
           ((C31515 + C31514) * C801 + (C31517 + C31516) * C92078) * C92148 *
               C31258 +
           (C31526 * C801 + C31527 * C92078) * C92148 * C31259) *
              C92110 * C798 -
          (((C31488 * C824 + C92186 * C1033 + C31487 * C811 + C31260 * C1028) *
                C92078 +
            (C31488 * C808 + C92186 * C1025 + C31487 * C803 + C31260 * C1020) *
                C801) *
               C92148 * C31259 +
           ((C31488 * C823 + C92186 * C1032 + C31487 * C812 + C31260 * C1029) *
                C92078 +
            (C31488 * C807 + C92186 * C1024 + C31487 * C804 + C31260 * C1021) *
                C801) *
               C92148 * C31258 +
           ((C31488 * C822 + C92186 * C1031 + C31487 * C813 + C31260 * C1030) *
                C92078 +
            (C31488 * C806 + C92186 * C1023 + C31487 * C805 + C31260 * C1022) *
                C801) *
               C92148 * C31257) *
              C92110 * C799 +
          (((C31487 * C806 + C31260 * C1023 + C31488 * C4882 + C92186 * C5218) *
                C801 +
            (C31487 * C822 + C31260 * C1031 + C31488 * C4886 + C92186 * C5222) *
                C92078) *
               C92148 * C31257 +
           ((C31487 * C807 + C31260 * C1024 + C31488 * C4881 + C92186 * C5217) *
                C801 +
            (C31487 * C823 + C31260 * C1032 + C31488 * C4885 + C92186 * C5221) *
                C92078) *
               C92148 * C31258 +
           ((C31487 * C808 + C31260 * C1025 + C31488 * C6557 + C92186 * C6907) *
                C801 +
            (C31487 * C824 + C31260 * C1033 + C31488 * C6559 + C92186 * C6908) *
                C92078) *
               C92148 * C31259) *
              C92110 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((C36367 * C107 + C36212 * C308 + C36368 * C805 + C36213 * C1022 +
           C36369 * C806 + C36214 * C1023 + C36370 * C4882 + C36215 * C5218) *
              C104 +
          (C36367 * C117 + C36212 * C314 + C36368 * C813 + C36213 * C1030 +
           C36369 * C822 + C36214 * C1031 + C36370 * C4886 + C36215 * C5222) *
              C93 -
          (C36370 * C4881 + C36215 * C5217 + C36369 * C807 + C36214 * C1024 +
           C36368 * C804 + C36213 * C1021 + C36367 * C108 + C36212 * C309) *
              C105 -
          (C36370 * C4885 + C36215 * C5221 + C36369 * C823 + C36214 * C1032 +
           C36368 * C812 + C36213 * C1029 + C36367 * C118 + C36212 * C315) *
              C94 +
          (C36367 * C109 + C36212 * C310 + C36368 * C803 + C36213 * C1020 +
           C36369 * C808 + C36214 * C1025 + C36370 * C6557 + C36215 * C6907) *
              C106 +
          (C36367 * C119 + C36212 * C316 + C36368 * C811 + C36213 * C1028 +
           C36369 * C824 + C36214 * C1033 + C36370 * C6559 + C36215 * C6908) *
              C95) *
         C92148 * C92062 * C92110 * C92099) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C36367 * C107 + C36212 * C308 + C36368 * C805 + C36213 * C1022 +
            C36369 * C806 + C36214 * C1023 + C36370 * C4882 + C36215 * C5218) *
               C801 +
           (C36367 * C117 + C36212 * C314 + C36368 * C813 + C36213 * C1030 +
            C36369 * C822 + C36214 * C1031 + C36370 * C4886 + C36215 * C5222) *
               C92078) *
              C92148 * C92062 * C92110 * C798 -
          ((C36370 * C4891 + C36215 * C5223 + C36369 * C4886 + C36214 * C5222 +
            C36368 * C822 + C36213 * C1031 + C36367 * C813 + C36212 * C1030) *
               C92078 +
           (C36370 * C4883 + C36215 * C5219 + C36369 * C4882 + C36214 * C5218 +
            C36368 * C806 + C36213 * C1023 + C36367 * C805 + C36212 * C1022) *
               C801) *
              C92148 * C92062 * C92110 * C799 +
          ((C36367 * C806 + C36212 * C1023 + C36368 * C4882 + C36213 * C5218 +
            C36369 * C4883 + C36214 * C5219 + C36370 * C36671 +
            C36215 * C36897) *
               C801 +
           (C36367 * C822 + C36212 * C1031 + C36368 * C4886 + C36213 * C5222 +
            C36369 * C4891 + C36214 * C5223 + C36370 * C36673 +
            C36215 * C36898) *
               C92078) *
              C92148 * C92062 * C92110 * C800)) /
            (p * q * std::sqrt(p + q));
    d2eeyy[49] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31487 * C107 + C31260 * C308 + C31488 * C805 + C92186 * C1022) *
                C181 +
            (C31487 * C182 + C31260 * C394 + C31488 * C890 + C92186 * C1085) *
                C92099) *
               C92148 * C31257 +
           ((C31515 + C31514) * C181 + (C31615 + C31616) * C92099) * C92148 *
               C31258 +
           C31624 * C31259) *
              C93 -
          (((C31619 + C31620) * C92099 + (C31523 + C31522) * C181) * C92148 *
               C31259 +
           ((C31618 + C31617) * C92099 + (C31519 + C31518) * C181) * C92148 *
               C31258 +
           ((C31616 + C31615) * C92099 + (C31514 + C31515) * C181) * C92148 *
               C31257) *
              C94 +
          (C31624 * C31257 +
           ((C31522 + C31523) * C181 + (C31620 + C31619) * C92099) * C92148 *
               C31258 +
           ((C31487 * C111 + C31260 * C312 + C31488 * C1989 + C92186 * C2197) *
                C181 +
            (C31487 * C186 + C31260 * C398 + C31488 * C2061 + C92186 * C2283) *
                C92099) *
               C92148 * C31259) *
              C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C31487 * C107 + C31260 * C308 + C31488 * C805 + C92186 * C1022) *
               C884 +
           (C31487 * C182 + C31260 * C394 + C31488 * C890 + C92186 * C1085) *
               C798 -
           (C31488 * C806 + C92186 * C1023 + C31487 * C805 + C31260 * C1022) *
               C885 -
           (C31488 * C891 + C92186 * C1086 + C31487 * C890 + C31260 * C1085) *
               C799 +
           (C31487 * C806 + C31260 * C1023 + C31488 * C4882 + C92186 * C5218) *
               C886 +
           (C31487 * C891 + C31260 * C1086 + C31488 * C5012 + C92186 * C5299) *
               C800) *
              C92148 * C31257 +
          ((C31515 + C31514) * C884 + (C31615 + C31616) * C798 -
           (C31488 * C807 + C92186 * C1024 + C31487 * C804 + C31260 * C1021) *
               C885 -
           (C31488 * C892 + C92186 * C1088 + C31487 * C889 + C31260 * C1087) *
               C799 +
           (C31487 * C807 + C31260 * C1024 + C31488 * C4881 + C92186 * C5217) *
               C886 +
           (C31487 * C892 + C31260 * C1088 + C31488 * C5013 + C92186 * C5301) *
               C800) *
              C92148 * C31258 +
          (C31526 * C884 + C31621 * C798 -
           (C31488 * C808 + C92186 * C1025 + C31487 * C803 + C31260 * C1020) *
               C885 -
           (C31488 * C893 + C92186 * C1090 + C31487 * C888 + C31260 * C1089) *
               C799 +
           (C31487 * C808 + C31260 * C1025 + C31488 * C6557 + C92186 * C6907) *
               C886 +
           (C31487 * C893 + C31260 * C1090 + C31488 * C6683 + C92186 * C7025) *
               C800) *
              C92148 * C31259) *
         C92078 * C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C36367 * C107 + C36212 * C308 + C36368 * C805 + C36213 * C1022 +
            C36369 * C806 + C36214 * C1023 + C36370 * C4882 + C36215 * C5218) *
               C181 +
           (C36367 * C182 + C36212 * C394 + C36368 * C890 + C36213 * C1085 +
            C36369 * C891 + C36214 * C1086 + C36370 * C5012 + C36215 * C5299) *
               C92099) *
              C92148 * C92062 * C93 -
          ((C36370 * C5013 + C36215 * C5301 + C36369 * C892 + C36214 * C1088 +
            C36368 * C889 + C36213 * C1087 + C36367 * C183 + C36212 * C395) *
               C92099 +
           (C36370 * C4881 + C36215 * C5217 + C36369 * C807 + C36214 * C1024 +
            C36368 * C804 + C36213 * C1021 + C36367 * C108 + C36212 * C309) *
               C181) *
              C92148 * C92062 * C94 +
          ((C36367 * C109 + C36212 * C310 + C36368 * C803 + C36213 * C1020 +
            C36369 * C808 + C36214 * C1025 + C36370 * C6557 + C36215 * C6907) *
               C181 +
           (C36367 * C184 + C36212 * C396 + C36368 * C888 + C36213 * C1089 +
            C36369 * C893 + C36214 * C1090 + C36370 * C6683 + C36215 * C7025) *
               C92099) *
              C92148 * C92062 * C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((C36367 * C107 + C36212 * C308 + C36368 * C805 + C36213 * C1022 +
           C36369 * C806 + C36214 * C1023 + C36370 * C4882 + C36215 * C5218) *
              C884 +
          (C36367 * C182 + C36212 * C394 + C36368 * C890 + C36213 * C1085 +
           C36369 * C891 + C36214 * C1086 + C36370 * C5012 + C36215 * C5299) *
              C798 -
          (C36370 * C4883 + C36215 * C5219 + C36369 * C4882 + C36214 * C5218 +
           C36368 * C806 + C36213 * C1023 + C36367 * C805 + C36212 * C1022) *
              C885 -
          (C36370 * C5014 + C36215 * C5300 + C36369 * C5012 + C36214 * C5299 +
           C36368 * C891 + C36213 * C1086 + C36367 * C890 + C36212 * C1085) *
              C799 +
          (C36367 * C806 + C36212 * C1023 + C36368 * C4882 + C36213 * C5218 +
           C36369 * C4883 + C36214 * C5219 + C36370 * C36671 +
           C36215 * C36897) *
              C886 +
          (C36367 * C891 + C36212 * C1086 + C36368 * C5012 + C36213 * C5299 +
           C36369 * C5014 + C36214 * C5300 + C36370 * C36759 +
           C36215 * C36949) *
              C800) *
         C92148 * C92062 * C92078 * C92110) /
            (p * q * std::sqrt(p + q));
    d2eeyz[49] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31487 * C107 + C31260 * C308 + C31488 * C805 + C92186 * C1022) *
                C244 +
            (C31487 * C245 + C31260 * C474 + C31488 * C956 + C92186 * C1146) *
                C92110) *
               C92148 * C31257 +
           ((C31515 + C31514) * C244 + (C31712 + C31713) * C92110) * C92148 *
               C31258 +
           C31721 * C31259) *
              C92099 * C93 -
          (((C31716 + C31717) * C92110 + (C31523 + C31522) * C244) * C92148 *
               C31259 +
           ((C31715 + C31714) * C92110 + (C31519 + C31518) * C244) * C92148 *
               C31258 +
           ((C31713 + C31712) * C92110 + (C31514 + C31515) * C244) * C92148 *
               C31257) *
              C92099 * C94 +
          (C31721 * C31257 +
           ((C31522 + C31523) * C244 + (C31717 + C31716) * C92110) * C92148 *
               C31258 +
           ((C31487 * C111 + C31260 * C312 + C31488 * C1989 + C92186 * C2197) *
                C244 +
            (C31487 * C249 + C31260 * C478 + C31488 * C2129 + C92186 * C2371) *
                C92110) *
               C92148 * C31259) *
              C92099 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31487 * C107 + C31260 * C308 + C31488 * C805 + C92186 * C1022) *
                C244 +
            (C31487 * C245 + C31260 * C474 + C31488 * C956 + C92186 * C1146) *
                C92110) *
               C92148 * C31257 +
           ((C31515 + C31514) * C244 + (C31712 + C31713) * C92110) * C92148 *
               C31258 +
           C31721 * C31259) *
              C798 -
          (((C31488 * C959 + C92186 * C1149 + C31487 * C954 + C31260 * C1144) *
                C92110 +
            (C31488 * C808 + C92186 * C1025 + C31487 * C803 + C31260 * C1020) *
                C244) *
               C92148 * C31259 +
           ((C31488 * C958 + C92186 * C1148 + C31487 * C955 + C31260 * C1145) *
                C92110 +
            (C31488 * C807 + C92186 * C1024 + C31487 * C804 + C31260 * C1021) *
                C244) *
               C92148 * C31258 +
           ((C31488 * C957 + C92186 * C1147 + C31487 * C956 + C31260 * C1146) *
                C92110 +
            (C31488 * C806 + C92186 * C1023 + C31487 * C805 + C31260 * C1022) *
                C244) *
               C92148 * C31257) *
              C799 +
          (((C31487 * C806 + C31260 * C1023 + C31488 * C4882 + C92186 * C5218) *
                C244 +
            (C31487 * C957 + C31260 * C1147 + C31488 * C5114 + C92186 * C5378) *
                C92110) *
               C92148 * C31257 +
           ((C31487 * C807 + C31260 * C1024 + C31488 * C4881 + C92186 * C5217) *
                C244 +
            (C31487 * C958 + C31260 * C1148 + C31488 * C5113 + C92186 * C5377) *
                C92110) *
               C92148 * C31258 +
           ((C31487 * C808 + C31260 * C1025 + C31488 * C6557 + C92186 * C6907) *
                C244 +
            (C31487 * C959 + C31260 * C1149 + C31488 * C6795 + C92186 * C7133) *
                C92110) *
               C92148 * C31259) *
              C800) *
         C92078) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C36367 * C107 + C36212 * C308 + C36368 * C805 + C36213 * C1022 +
            C36369 * C806 + C36214 * C1023 + C36370 * C4882 + C36215 * C5218) *
               C244 +
           (C36367 * C245 + C36212 * C474 + C36368 * C956 + C36213 * C1146 +
            C36369 * C957 + C36214 * C1147 + C36370 * C5114 + C36215 * C5378) *
               C92110) *
              C92148 * C92062 * C92099 * C93 -
          ((C36370 * C5113 + C36215 * C5377 + C36369 * C958 + C36214 * C1148 +
            C36368 * C955 + C36213 * C1145 + C36367 * C246 + C36212 * C475) *
               C92110 +
           (C36370 * C4881 + C36215 * C5217 + C36369 * C807 + C36214 * C1024 +
            C36368 * C804 + C36213 * C1021 + C36367 * C108 + C36212 * C309) *
               C244) *
              C92148 * C92062 * C92099 * C94 +
          ((C36367 * C109 + C36212 * C310 + C36368 * C803 + C36213 * C1020 +
            C36369 * C808 + C36214 * C1025 + C36370 * C6557 + C36215 * C6907) *
               C244 +
           (C36367 * C247 + C36212 * C476 + C36368 * C954 + C36213 * C1144 +
            C36369 * C959 + C36214 * C1149 + C36370 * C6795 + C36215 * C7133) *
               C92110) *
              C92148 * C92062 * C92099 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C36367 * C107 + C36212 * C308 + C36368 * C805 + C36213 * C1022 +
            C36369 * C806 + C36214 * C1023 + C36370 * C4882 + C36215 * C5218) *
               C244 +
           (C36367 * C245 + C36212 * C474 + C36368 * C956 + C36213 * C1146 +
            C36369 * C957 + C36214 * C1147 + C36370 * C5114 + C36215 * C5378) *
               C92110) *
              C92148 * C92062 * C798 -
          ((C36370 * C5115 + C36215 * C5379 + C36369 * C5114 + C36214 * C5378 +
            C36368 * C957 + C36213 * C1147 + C36367 * C956 + C36212 * C1146) *
               C92110 +
           (C36370 * C4883 + C36215 * C5219 + C36369 * C4882 + C36214 * C5218 +
            C36368 * C806 + C36213 * C1023 + C36367 * C805 + C36212 * C1022) *
               C244) *
              C92148 * C92062 * C799 +
          ((C36367 * C806 + C36212 * C1023 + C36368 * C4882 + C36213 * C5218 +
            C36369 * C4883 + C36214 * C5219 + C36370 * C36671 +
            C36215 * C36897) *
               C244 +
           (C36367 * C957 + C36212 * C1147 + C36368 * C5114 + C36213 * C5378 +
            C36369 * C5115 + C36214 * C5379 + C36370 * C36823 +
            C36215 * C37000) *
               C92110) *
              C92148 * C92062 * C800) *
         C92078) /
            (p * q * std::sqrt(p + q));
    d2eezx[49] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92148 * C555) * C104 +
            (C554 * C117 + C92148 * C561) * C93 - C584 * C105 - C585 * C94 +
            C586 * C106 + C587 * C95) *
               C31257 +
           (C584 * C104 + C585 * C93 - C586 * C105 - C587 * C94 + C588 * C106 +
            C589 * C95) *
               C31258 +
           (C586 * C104 + C587 * C93 - C588 * C105 - C589 * C94 + C590 * C106 +
            C591 * C95) *
               C31259) *
              C31260 +
          ((C5484 * C104 + C5485 * C93 - C2468 * C105 - C2469 * C94 +
            C2470 * C106 + C2471 * C95) *
               C31257 +
           (C2468 * C104 + C2469 * C93 - C2470 * C105 - C2471 * C94 +
            C2472 * C106 + C2473 * C95) *
               C31258 +
           (C2470 * C104 + C2471 * C93 - C2472 * C105 - C2473 * C94 +
            (C554 * C1989 + C92148 * C2453) * C106 +
            (C554 * C1991 + C92148 * C2454) * C95) *
               C31259) *
              C92186) *
         C92110 * C92099) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92148 * C555) * C801 +
             (C554 * C117 + C92148 * C561) * C92078) *
                C31257 +
            (C584 * C801 + C585 * C92078) * C31258 +
            (C586 * C801 + C587 * C92078) * C31259) *
               C31260 +
           ((C5493 + C5494) * C31257 + (C5468 + C5469) * C31258 +
            (C16084 + C16085) * C31259) *
               C92186) *
              C92110 * C798 -
          (((C16086 + C16087) * C31259 + (C5475 + C5474) * C31258 +
            (C5496 + C5495) * C31257) *
               C92186 +
           ((C16085 + C16084) * C31259 + (C5469 + C5468) * C31258 +
            (C5494 + C5493) * C31257) *
               C31260) *
              C92110 * C799 +
          ((C5502 * C31257 + C5488 * C31258 + (C16087 + C16086) * C31259) *
               C31260 +
           ((C5501 + C5500) * C31257 + (C5499 + C5498) * C31258 +
            ((C554 * C6557 + C92148 * C7241) * C801 +
             (C554 * C6559 + C92148 * C7242) * C92078) *
                C31259) *
               C92186) *
              C92110 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C554 * C107 + C92148 * C555) * C104 +
           (C554 * C117 + C92148 * C561) * C93 - C584 * C105 - C585 * C94 +
           C586 * C106 + C587 * C95) *
              C92062 * C36212 +
          (C5484 * C104 + C5485 * C93 - C2468 * C105 - C2469 * C94 +
           C2470 * C106 + C2471 * C95) *
              C92062 * C36213 +
          (C5486 * C104 + C5487 * C93 - C4632 * C105 - C4633 * C94 +
           C4634 * C106 + C4635 * C95) *
              C92062 * C36214 +
          (C5492 * C104 + C5491 * C93 - C5490 * C105 - C5489 * C94 +
           (C554 * C6557 + C92148 * C7241) * C106 +
           (C554 * C6559 + C92148 * C7242) * C95) *
              C92062 * C36215) *
         C92110 * C92099) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92148 * C555) * C801 +
            (C554 * C117 + C92148 * C561) * C92078) *
               C92062 * C36212 +
           (C5493 + C5494) * C92062 * C36213 + C37054 * C36214 +
           C37060 * C36215) *
              C92110 * C798 -
          ((C37063 + C37064) * C92062 * C36215 +
           (C5500 + C5501) * C92062 * C36214 +
           (C5496 + C5495) * C92062 * C36213 +
           (C5494 + C5493) * C92062 * C36212) *
              C92110 * C799 +
          (C37054 * C36212 + C37060 * C36213 +
           (C37064 + C37063) * C92062 * C36214 +
           ((C554 * C36671 + C92148 * C37051) * C801 +
            (C554 * C36673 + C92148 * C37052) * C92078) *
               C92062 * C36215) *
              C92110 * C800)) /
            (p * q * std::sqrt(p + q));
    d2eezy[49] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92148 * C555) * C181 +
             (C554 * C182 + C92148 * C641) * C92099) *
                C31257 +
            (C648 + C664) * C31258 + C668 * C31259) *
               C31260 +
           ((C5484 * C181 + C5591 * C92099) * C31257 +
            (C4710 + C4711) * C31258 + C15416 * C31259) *
               C92186) *
              C93 -
          (((C15417 + C15418) * C31259 + (C4718 + C4719) * C31258 +
            (C4711 + C4710) * C31257) *
               C92186 +
           ((C666 + C654) * C31259 + (C665 + C651) * C31258 +
            (C664 + C648) * C31257) *
               C31260) *
              C94 +
          ((C668 * C31257 + C669 * C31258 + (C659 + C667) * C31259) * C31260 +
           (C15416 * C31257 + (C15418 + C15417) * C31258 +
            ((C554 * C1989 + C92148 * C2453) * C181 +
             (C554 * C2061 + C92148 * C2539) * C92099) *
                C31259) *
               C92186) *
              C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92148 * C555) * C884 +
            (C554 * C182 + C92148 * C641) * C798 - C5484 * C885 - C5591 * C799 +
            C5486 * C886 + C5592 * C800) *
               C31257 +
           (C584 * C884 + C660 * C798 - C2468 * C885 - C2556 * C799 +
            C4632 * C886 + C4720 * C800) *
               C31258 +
           (C586 * C884 + C661 * C798 - C2470 * C885 - C2557 * C799 +
            C4634 * C886 + C4721 * C800) *
               C31259) *
              C31260 +
          ((C5484 * C884 + C5591 * C798 - C5486 * C885 - C5592 * C799 +
            C5492 * C886 + C5593 * C800) *
               C31257 +
           (C2468 * C884 + C2556 * C798 - C4632 * C885 - C4720 * C799 +
            C5490 * C886 + C5594 * C800) *
               C31258 +
           (C2470 * C884 + C2557 * C798 - C4634 * C885 - C4721 * C799 +
            (C554 * C6557 + C92148 * C7241) * C886 +
            (C554 * C6683 + C92148 * C7357) * C800) *
               C31259) *
              C92186) *
         C92078 * C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92148 * C555) * C181 +
            (C554 * C182 + C92148 * C641) * C92099) *
               C92062 * C36212 +
           (C5484 * C181 + C5591 * C92099) * C92062 * C36213 +
           (C5486 * C181 + C5592 * C92099) * C92062 * C36214 +
           (C5492 * C181 + C5593 * C92099) * C92062 * C36215) *
              C93 -
          ((C5594 * C92099 + C5490 * C181) * C92062 * C36215 +
           (C4722 + C4712) * C92062 * C36214 +
           (C4711 + C4710) * C92062 * C36213 +
           (C664 + C648) * C92062 * C36212) *
              C94 +
          (C668 * C92062 * C36212 + C15416 * C92062 * C36213 +
           (C4717 + C4723) * C92062 * C36214 +
           ((C554 * C6557 + C92148 * C7241) * C181 +
            (C554 * C6683 + C92148 * C7357) * C92099) *
               C92062 * C36215) *
              C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C554 * C107 + C92148 * C555) * C884 +
           (C554 * C182 + C92148 * C641) * C798 - C5484 * C885 - C5591 * C799 +
           C5486 * C886 + C5592 * C800) *
              C92062 * C36212 +
          (C5484 * C884 + C5591 * C798 - C5486 * C885 - C5592 * C799 +
           C5492 * C886 + C5593 * C800) *
              C92062 * C36213 +
          (C5486 * C884 + C5592 * C798 - C5492 * C885 - C5593 * C799 +
           C37062 * C886 + C37118 * C800) *
              C92062 * C36214 +
          (C5492 * C884 + C5593 * C798 - C37062 * C885 - C37118 * C799 +
           (C554 * C36671 + C92148 * C37051) * C886 +
           (C554 * C36759 + C92148 * C37114) * C800) *
              C92062 * C36215) *
         C92078 * C92110) /
            (p * q * std::sqrt(p + q));
    d2eezz[49] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92148 * C555) * C244 +
             (C554 * C245 + C92148 * C719) * C92110) *
                C31257 +
            (C726 + C742) * C31258 + C746 * C31259) *
               C31260 +
           ((C5673 + C5691) * C31257 + C7466 * C31258 + C15493 * C31259) *
               C92186) *
              C92099 * C93 -
          (((C2641 + C2631) * C31259 + C17876 * C31258 + C7468 * C31257) *
               C92186 +
           ((C744 + C732) * C31259 + (C743 + C729) * C31258 +
            (C742 + C726) * C31257) *
               C31260) *
              C92099 * C94 +
          ((C746 * C31257 + C747 * C31258 + (C737 + C745) * C31259) * C31260 +
           (C15493 * C31257 + (C2631 + C2641) * C31258 +
            ((C554 * C1989 + C92148 * C2453) * C244 +
             (C554 * C2129 + C92148 * C2627) * C92110) *
                C31259) *
               C92186) *
              C92099 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C554 * C107 + C92148 * C555) * C244 +
             (C554 * C245 + C92148 * C719) * C92110) *
                C31257 +
            (C726 + C742) * C31258 + C746 * C31259) *
               C31260 +
           ((C5673 + C5691) * C31257 + C7466 * C31258 + C15493 * C31259) *
               C92186) *
              C798 -
          (((C4807 + C4803) * C31259 + C7467 * C31258 +
            (C5692 + C5676) * C31257) *
               C92186 +
           (C17876 * C31259 + C7468 * C31258 + (C5691 + C5673) * C31257) *
               C31260) *
              C799 +
          ((C5695 * C31257 + C5679 * C31258 + (C4803 + C4807) * C31259) *
               C31260 +
           ((C5685 + C5694) * C31257 + (C5682 + C5693) * C31258 +
            ((C554 * C6557 + C92148 * C7241) * C244 +
             (C554 * C6795 + C92148 * C7464) * C92110) *
                C31259) *
               C92186) *
              C800) *
         C92078) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92148 * C555) * C244 +
            (C554 * C245 + C92148 * C719) * C92110) *
               C92062 * C36212 +
           (C5673 + C5691) * C92062 * C36213 + C5695 * C92062 * C36214 +
           (C5685 + C5694) * C92062 * C36215) *
              C92099 * C93 -
          ((C5693 + C5682) * C92062 * C36215 + C7467 * C92062 * C36214 +
           C7468 * C92062 * C36213 + (C742 + C726) * C92062 * C36212) *
              C92099 * C94 +
          (C746 * C92062 * C36212 + C15493 * C92062 * C36213 +
           (C4803 + C4807) * C92062 * C36214 +
           ((C554 * C6557 + C92148 * C7241) * C244 +
            (C554 * C6795 + C92148 * C7464) * C92110) *
               C92062 * C36215) *
              C92099 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C554 * C107 + C92148 * C555) * C244 +
            (C554 * C245 + C92148 * C719) * C92110) *
               C92062 * C36212 +
           (C5673 + C5691) * C92062 * C36213 + C37170 * C36214 +
           C37175 * C36215) *
              C798 -
          ((C37177 + C37174) * C92062 * C36215 +
           (C5694 + C5685) * C92062 * C36214 +
           (C5692 + C5676) * C92062 * C36213 +
           (C5691 + C5673) * C92062 * C36212) *
              C799 +
          (C37170 * C36212 + C37175 * C36213 +
           (C37174 + C37177) * C92062 * C36214 +
           ((C554 * C36671 + C92148 * C37051) * C244 +
            (C554 * C36823 + C92148 * C37168) * C92110) *
               C92062 * C36215) *
              C800) *
         C92078) /
            (p * q * std::sqrt(p + q));
    d2eexx[50] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C89875 * C107 + C92310 * C113 + C89868 * C108 + C92067 * C114) *
                 C1987 +
             (C89875 * C117 + C92310 * C125 + C89868 * C118 + C92067 * C126) *
                 C1983 -
             (C89868 * C109 + C92067 * C115 + C89875 * C108 + C92310 * C114) *
                 C1988 -
             (C89868 * C119 + C92067 * C127 + C89875 * C118 + C92310 * C126) *
                 C1984) *
                C92322 +
            ((C45573 + C45574) * C1987 + (C45575 + C45576) * C1983 -
             (C47009 + C47010) * C1988 - (C47011 + C47012) * C1984) *
                C92186) *
               C60959 +
           (((C51595 + C51596) * C1987 + (C51597 + C51598) * C1983 -
             (C53783 + C53784) * C1988 - (C53785 + C53786) * C1984) *
                C92322 +
            (C54983 * C1987 + C54984 * C1983 - (C52565 + C52566) * C1988 -
             (C52567 + C52568) * C1984) *
                C92186) *
               C92212) *
              C92110 * C1985 +
          ((((C47010 + C47009) * C1988 -
             ((C45576 + C45575) * C1983 + (C45574 + C45573) * C1987) +
             (C47012 + C47011) * C1984) *
                C92322 +
            ((C47014 + C47013) * C1988 -
             ((C45580 + C45579) * C1983 + (C45578 + C45577) * C1987) +
             (C47016 + C47015) * C1984) *
                C92186) *
               C60959 +
           (((C52566 + C52565) * C1988 - (C54985 * C1983 + C54986 * C1987) +
             (C52568 + C52567) * C1984) *
                C92322 +
            ((C89875 * C5771 + C92310 * C5779 + C89868 * C7566 +
              C92067 * C7567) *
                 C1988 -
             ((C48893 + C48894) * C1983 + (C48895 + C48896) * C1987) +
             (C89875 * C5777 + C92310 * C5789 + C89868 * C7568 +
              C92067 * C7569) *
                 C1984) *
                C92186) *
               C92212) *
              C92110 * C1986)) /
        (p * q * std::sqrt(p + q));
    d2eexy[50] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C89875 * C107 + C92310 * C113 + C89868 * C108 + C92067 * C114) *
                 C2059 +
             (C89875 * C182 + C92310 * C188 + C89868 * C183 + C92067 * C189) *
                 C1985 -
             (C45574 + C45573) * C2060 - (C45676 + C45677) * C1986) *
                C92322 +
            ((C45573 + C45574) * C2059 + (C45677 + C45676) * C1985 -
             (C45578 + C45577) * C2060 - (C45679 + C45678) * C1986) *
                C92186) *
               C60959 +
           (((C51595 + C51596) * C2059 + (C51717 + C51718) * C1985 -
             C54986 * C2060 - C55123 * C1986) *
                C92322 +
            (C54983 * C2059 + C55124 * C1985 - (C48895 + C48896) * C2060 -
             (C49010 + C49009) * C1986) *
                C92186) *
               C92212) *
              C1983 +
          ((((C47010 + C47009) * C2060 -
             ((C89868 * C184 + C92067 * C190 + C89875 * C183 + C92310 * C189) *
                  C1985 +
              (C89868 * C109 + C92067 * C115 + C89875 * C108 + C92310 * C114) *
                  C2059) +
             (C47123 + C47124) * C1986) *
                C92322 +
            ((C47014 + C47013) * C2060 -
             ((C47124 + C47123) * C1985 + (C47009 + C47010) * C2059) +
             (C47125 + C47126) * C1986) *
                C92186) *
               C60959 +
           (((C52566 + C52565) * C2060 -
             ((C53921 + C53922) * C1985 + (C53783 + C53784) * C2059) +
             (C52703 + C52704) * C1986) *
                C92322 +
            ((C89875 * C5771 + C92310 * C5779 + C89868 * C7566 +
              C92067 * C7567) *
                 C2060 -
             ((C52704 + C52703) * C1985 + (C52565 + C52566) * C2059) +
             (C89875 * C5869 + C92310 * C5875 + C89868 * C7668 +
              C92067 * C7669) *
                 C1986) *
                C92186) *
               C92212) *
              C1984) *
         C92110) /
        (p * q * std::sqrt(p + q));
    d2eexz[50] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C89875 * C107 + C92310 * C113 + C89868 * C108 + C92067 * C114) *
                  C244 +
              (C89875 * C245 + C92310 * C251 + C89868 * C246 + C92067 * C252) *
                  C92110) *
                 C92322 +
             ((C45573 + C45574) * C244 + (C45770 + C45771) * C92110) * C92186) *
                C60959 +
            (((C51595 + C51596) * C244 + (C51834 + C51833) * C92110) * C92322 +
             (C54983 * C244 + C55256 * C92110) * C92186) *
                C92212) *
               C1985 -
           ((((C49119 + C49120) * C92110 + (C48895 + C48896) * C244) * C92186 +
             (C55255 * C92110 + C54986 * C244) * C92322) *
                C92212 +
            (((C45773 + C45772) * C92110 + (C45578 + C45577) * C244) * C92186 +
             ((C45771 + C45770) * C92110 + (C45574 + C45573) * C244) * C92322) *
                C60959) *
               C1986) *
              C1983 +
          (((((C47010 + C47009) * C244 + (C47233 + C47234) * C92110) * C92322 +
             ((C47014 + C47013) * C244 + (C47235 + C47236) * C92110) * C92186) *
                C60959 +
            (((C52566 + C52565) * C244 + (C52839 + C52840) * C92110) * C92322 +
             ((C89875 * C5771 + C92310 * C5779 + C89868 * C7566 +
               C92067 * C7567) *
                  C244 +
              (C89875 * C5957 + C92310 * C5963 + C89868 * C7768 +
               C92067 * C7769) *
                  C92110) *
                 C92186) *
                C92212) *
               C1986 -
           ((((C52840 + C52839) * C92110 + (C52565 + C52566) * C244) * C92186 +
             ((C54058 + C54057) * C92110 + (C53783 + C53784) * C244) * C92322) *
                C92212 +
            (((C47234 + C47233) * C92110 + (C47009 + C47010) * C244) * C92186 +
             ((C89868 * C247 + C92067 * C253 + C89875 * C246 + C92310 * C252) *
                  C92110 +
              (C89868 * C109 + C92067 * C115 + C89875 * C108 + C92310 * C114) *
                  C244) *
                 C92322) *
                C60959) *
               C1985) *
              C1984)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[50] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C15033 * C107 + C92322 * C308 + C15034 * C805 + C92186 * C1022) *
                 C1987 +
             (C15033 * C117 + C92322 * C314 + C15034 * C813 + C92186 * C1030) *
                 C1983 -
             (C15060 + C15061) * C1988 - (C15062 + C15063) * C1984) *
                C60959 +
            ((C26974 + C26975) * C1987 + (C26976 + C26977) * C1983 -
             C29264 * C1988 - C29265 * C1984) *
                C92212) *
               C92310 +
           (((C15061 + C15060) * C1987 + (C15063 + C15062) * C1983 -
             (C15065 + C15064) * C1988 - (C15067 + C15066) * C1984) *
                C60959 +
            (C29266 * C1987 + C29267 * C1983 - (C18290 + C18289) * C1988 -
             (C18292 + C18291) * C1984) *
                C92212) *
               C92067) *
              C92110 * C1985 +
          ((((C17346 + C17347) * C1988 -
             ((C15034 * C822 + C92186 * C1031 + C15033 * C813 +
               C92322 * C1030) *
                  C1983 +
              (C15034 * C806 + C92186 * C1023 + C15033 * C805 +
               C92322 * C1022) *
                  C1987) +
             (C17348 + C17349) * C1984) *
                C60959 +
            ((C28064 + C28065) * C1988 -
             ((C30497 + C30496) * C1983 + (C30495 + C30494) * C1987) +
             (C28066 + C28067) * C1984) *
                C92212) *
               C92310 +
           (((C17350 + C17351) * C1988 -
             ((C17349 + C17348) * C1983 + (C17347 + C17346) * C1987) +
             (C17352 + C17353) * C1984) *
                C60959 +
            ((C15033 * C3433 + C92322 * C3663 + C15034 * C7566 +
              C92186 * C7868) *
                 C1988 -
             ((C28067 + C28066) * C1983 + (C28065 + C28064) * C1987) +
             (C15033 * C3441 + C92322 * C3667 + C15034 * C7568 +
              C92186 * C7869) *
                 C1984) *
                C92212) *
               C92067) *
              C92110 * C1986)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[50] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C15033 * C107 + C92322 * C308 + C15034 * C805 + C92186 * C1022) *
                 C2059 +
             (C15033 * C182 + C92322 * C394 + C15034 * C890 + C92186 * C1085) *
                 C1985 -
             (C15034 * C806 + C92186 * C1023 + C15033 * C805 + C92322 * C1022) *
                 C2060 -
             (C15034 * C891 + C92186 * C1086 + C15033 * C890 + C92322 * C1085) *
                 C1986) *
                C60959 +
            ((C26974 + C26975) * C2059 + (C27096 + C27097) * C1985 -
             (C30495 + C30494) * C2060 - (C30632 + C30633) * C1986) *
                C92212) *
               C92310 +
           (((C15061 + C15060) * C2059 + (C15161 + C15162) * C1985 -
             (C17347 + C17346) * C2060 - (C17460 + C17461) * C1986) *
                C60959 +
            (C29266 * C2059 + C29399 * C1985 - (C28065 + C28064) * C2060 -
             (C28202 + C28203) * C1986) *
                C92212) *
               C92067) *
              C1983 +
          ((((C17346 + C17347) * C2060 -
             ((C15162 + C15161) * C1985 + (C15060 + C15061) * C2059) +
             (C17461 + C17460) * C1986) *
                C60959 +
            ((C28064 + C28065) * C2060 - (C29400 * C1985 + C29264 * C2059) +
             (C28203 + C28202) * C1986) *
                C92212) *
               C92310 +
           (((C17350 + C17351) * C2060 -
             ((C15164 + C15163) * C1985 + (C15065 + C15064) * C2059) +
             (C17463 + C17462) * C1986) *
                C60959 +
            ((C15033 * C3433 + C92322 * C3663 + C15034 * C7566 +
              C92186 * C7868) *
                 C2060 -
             ((C18402 + C18401) * C1985 + (C18290 + C18289) * C2059) +
             (C15033 * C3515 + C92322 * C3737 + C15034 * C7668 +
              C92186 * C7986) *
                 C1986) *
                C92212) *
               C92067) *
              C1984) *
         C92110) /
        (p * q * std::sqrt(p + q));
    d2eeyz[50] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C15033 * C107 + C92322 * C308 + C15034 * C805 + C92186 * C1022) *
                  C244 +
              (C15033 * C245 + C92322 * C474 + C15034 * C956 + C92186 * C1146) *
                  C92110) *
                 C60959 +
             ((C26974 + C26975) * C244 + (C27213 + C27212) * C92110) * C92212) *
                C92310 +
            (((C15061 + C15060) * C244 + (C15258 + C15259) * C92110) * C60959 +
             (C29266 * C244 + C29537 * C92110) * C92212) *
                C92067) *
               C1985 -
           ((((C28338 + C28339) * C92110 + (C28065 + C28064) * C244) * C92212 +
             ((C17572 + C17573) * C92110 + (C17347 + C17346) * C244) * C60959) *
                C92067 +
            (((C30769 + C30768) * C92110 + (C30495 + C30494) * C244) * C92212 +
             ((C15034 * C957 + C92186 * C1147 + C15033 * C956 +
               C92322 * C1146) *
                  C92110 +
              (C15034 * C806 + C92186 * C1023 + C15033 * C805 +
               C92322 * C1022) *
                  C244) *
                 C60959) *
                C92310) *
               C1986) *
              C1983 +
          (((((C17346 + C17347) * C244 + (C17573 + C17572) * C92110) * C60959 +
             ((C28064 + C28065) * C244 + (C28339 + C28338) * C92110) * C92212) *
                C92310 +
            (((C17350 + C17351) * C244 + (C17571 + C17570) * C92110) * C60959 +
             ((C15033 * C3433 + C92322 * C3663 + C15034 * C7566 +
               C92186 * C7868) *
                  C244 +
              (C15033 * C3589 + C92322 * C3807 + C15034 * C7768 +
               C92186 * C8094) *
                  C92110) *
                 C92212) *
                C92067) *
               C1986 -
           ((((C18511 + C18512) * C92110 + (C18290 + C18289) * C244) * C92212 +
             ((C15261 + C15260) * C92110 + (C15065 + C15064) * C244) * C60959) *
                C92067 +
            ((C29536 * C92110 + C29264 * C244) * C92212 +
             ((C15259 + C15258) * C92110 + (C15060 + C15061) * C244) * C60959) *
                C92310) *
               C1985) *
              C1984)) /
        (p * q * std::sqrt(p + q));
    d2eezx[50] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C61411 * C107 + C60959 * C555 + C61412 * C1389 + C92212 * C1788) *
                 C1987 +
             (C61411 * C117 + C60959 * C561 + C61412 * C1397 + C92212 * C1796) *
                 C1983 -
             (C61438 + C61439) * C1988 - (C61440 + C61441) * C1984) *
                C92310 +
            ((C61439 + C61438) * C1987 + (C61441 + C61440) * C1983 -
             (C61443 + C61442) * C1988 - (C61445 + C61444) * C1984) *
                C92067) *
               C92322 +
           (((C67034 + C67035) * C1987 + (C67036 + C67037) * C1983 -
             C77530 * C1988 - C77531 * C1984) *
                C92310 +
            (C77532 * C1987 + C77533 * C1983 - (C63755 + C63754) * C1988 -
             (C63757 + C63756) * C1984) *
                C92067) *
               C92186) *
              C92110 * C1985 +
          (((C77532 * C1988 -
             ((C67037 + C67036) * C1983 + (C67035 + C67034) * C1987) +
             C77533 * C1984) *
                C92310 +
            ((C63754 + C63755) * C1988 - (C77531 * C1983 + C77530 * C1987) +
             (C63756 + C63757) * C1984) *
                C92067) *
               C92322 +
           (((C68675 + C68674) * C1988 -
             ((C67041 + C67040) * C1983 + (C67039 + C67038) * C1987) +
             (C68677 + C68676) * C1984) *
                C92310 +
            ((C61411 * C808 + C60959 * C1207 + C61412 * C7566 +
              C92212 * C8202) *
                 C1988 -
             ((C68676 + C68677) * C1983 + (C68674 + C68675) * C1987) +
             (C61411 * C824 + C60959 * C1215 + C61412 * C7568 +
              C92212 * C8203) *
                 C1984) *
                C92067) *
               C92186) *
              C92110 * C1986)) /
        (p * q * std::sqrt(p + q));
    d2eezy[50] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C61411 * C107 + C60959 * C555 + C61412 * C1389 + C92212 * C1788) *
                 C2059 +
             (C61411 * C182 + C60959 * C641 + C61412 * C1471 + C92212 * C1854) *
                 C1985 -
             (C67035 + C67034) * C2060 - (C67138 + C67139) * C1986) *
                C92310 +
            ((C61439 + C61438) * C2059 + (C61539 + C61540) * C1985 -
             C77530 * C2060 - C77664 * C1986) *
                C92067) *
               C92322 +
           (((C67034 + C67035) * C2059 + (C67139 + C67138) * C1985 -
             (C67039 + C67038) * C2060 - (C67141 + C67140) * C1986) *
                C92310 +
            (C77532 * C2059 + C77665 * C1985 - (C68674 + C68675) * C2060 -
             (C68781 + C68780) * C1986) *
                C92067) *
               C92186) *
              C1983 +
          (((C77532 * C2060 -
             ((C61540 + C61539) * C1985 + (C61438 + C61439) * C2059) +
             C77665 * C1986) *
                C92310 +
            ((C63754 + C63755) * C2060 -
             ((C61542 + C61541) * C1985 + (C61443 + C61442) * C2059) +
             (C63867 + C63866) * C1986) *
                C92067) *
               C92322 +
           (((C68675 + C68674) * C2060 - (C77664 * C1985 + C77530 * C2059) +
             (C68780 + C68781) * C1986) *
                C92310 +
            ((C61411 * C808 + C60959 * C1207 + C61412 * C7566 +
              C92212 * C8202) *
                 C2060 -
             ((C63866 + C63867) * C1985 + (C63755 + C63754) * C2059) +
             (C61411 * C893 + C60959 * C1272 + C61412 * C7668 +
              C92212 * C8314) *
                 C1986) *
                C92067) *
               C92186) *
              C1984) *
         C92110) /
        (p * q * std::sqrt(p + q));
    d2eezz[50] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C61411 * C107 + C60959 * C555 + C61412 * C1389 +
               C92212 * C1788) *
                  C244 +
              (C61411 * C245 + C60959 * C719 + C61412 * C1540 +
               C92212 * C1909) *
                  C92110) *
                 C92310 +
             ((C61439 + C61438) * C244 + (C61635 + C61636) * C92110) * C92067) *
                C92322 +
            (((C67034 + C67035) * C244 + (C67232 + C67233) * C92110) * C92310 +
             C77802 * C92067) *
                C92186) *
               C1985 -
           ((((C68885 + C68884) * C92110 + (C68674 + C68675) * C244) * C92067 +
             ((C67235 + C67234) * C92110 + (C67039 + C67038) * C244) * C92310) *
                C92186 +
            (C77803 * C92067 +
             ((C67233 + C67232) * C92110 + (C67035 + C67034) * C244) * C92310) *
                C92322) *
               C1986) *
              C1983 +
          (((C77802 * C92310 +
             ((C63754 + C63755) * C244 + (C63975 + C63974) * C92110) * C92067) *
                C92322 +
            (((C68675 + C68674) * C244 + (C68884 + C68885) * C92110) * C92310 +
             ((C61411 * C808 + C60959 * C1207 + C61412 * C7566 +
               C92212 * C8202) *
                  C244 +
              (C61411 * C959 + C60959 * C1331 + C61412 * C7768 +
               C92212 * C8423) *
                  C92110) *
                 C92067) *
                C92186) *
               C1986 -
           ((((C63974 + C63975) * C92110 + (C63755 + C63754) * C244) * C92067 +
             C77803 * C92310) *
                C92186 +
            (((C61638 + C61637) * C92110 + (C61443 + C61442) * C244) * C92067 +
             ((C61636 + C61635) * C92110 + (C61438 + C61439) * C244) * C92310) *
                C92322) *
               C1985) *
              C1984)) /
        (p * q * std::sqrt(p + q));
    d2eexx[51] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C89875 * C107 + C92310 * C113 + C89868 * C108 + C92067 * C114) *
                  C801 +
              (C89875 * C117 + C92310 * C125 + C89868 * C118 + C92067 * C126) *
                  C92078) *
                 C92322 +
             ((C45573 + C45574) * C801 + (C45575 + C45576) * C92078) * C92186) *
                C60959 +
            (((C51595 + C51596) * C801 + (C51597 + C51598) * C92078) * C92322 +
             C54991 * C92186) *
                C92212) *
               C2709 -
           ((((C51599 + C51600) * C92078 + (C51601 + C51602) * C801) * C92186 +
             ((C51603 + C51604) * C92078 + (C51605 + C51606) * C801) * C92322) *
                C92212 +
            (C54992 * C92186 +
             ((C51598 + C51597) * C92078 + (C51596 + C51595) * C801) * C92322) *
                C60959) *
               C2710) *
              C1985 +
          (((C54991 * C92322 +
             ((C48896 + C48895) * C801 + (C48894 + C48893) * C92078) * C92186) *
                C60959 +
            (((C51602 + C51601) * C801 + (C51600 + C51599) * C92078) * C92322 +
             ((C89875 * C5775 + C92310 * C5785 + C89868 * C5776 +
               C92067 * C5786) *
                  C801 +
              (C89875 * C5787 + C92310 * C5793 + C89868 * C5788 +
               C92067 * C5794) *
                  C92078) *
                 C92186) *
                C92212) *
               C2710 -
           ((((C48893 + C48894) * C92078 + (C48895 + C48896) * C801) * C92186 +
             C54992 * C92322) *
                C92212 +
            (((C45580 + C45579) * C92078 + (C45578 + C45577) * C801) * C92186 +
             ((C45576 + C45575) * C92078 + (C45574 + C45573) * C801) * C92322) *
                C60959) *
               C2709) *
              C1986)) /
        (p * q * std::sqrt(p + q));
    d2eexy[51] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C89875 * C107 + C92310 * C113 + C89868 * C108 + C92067 * C114) *
                 C2059 +
             (C89875 * C182 + C92310 * C188 + C89868 * C183 + C92067 * C189) *
                 C1985 -
             (C45574 + C45573) * C2060 - (C45676 + C45677) * C1986) *
                C92322 +
            ((C45573 + C45574) * C2059 + (C45677 + C45676) * C1985 -
             (C45578 + C45577) * C2060 - (C45679 + C45678) * C1986) *
                C92186) *
               C60959 +
           (((C51595 + C51596) * C2059 + (C51717 + C51718) * C1985 -
             C54986 * C2060 - C55123 * C1986) *
                C92322 +
            (C54983 * C2059 + C55124 * C1985 - (C48895 + C48896) * C2060 -
             (C49010 + C49009) * C1986) *
                C92186) *
               C92212) *
              C92078 * C2709 +
          (((C54983 * C2060 -
             ((C51718 + C51717) * C1985 + (C51596 + C51595) * C2059) +
             C55124 * C1986) *
                C92322 +
            ((C48896 + C48895) * C2060 - (C55123 * C1985 + C54986 * C2059) +
             (C49009 + C49010) * C1986) *
                C92186) *
               C60959 +
           (((C51602 + C51601) * C2060 -
             ((C51721 + C51722) * C1985 + (C51605 + C51606) * C2059) +
             (C51720 + C51719) * C1986) *
                C92322 +
            ((C89875 * C5775 + C92310 * C5785 + C89868 * C5776 +
              C92067 * C5786) *
                 C2060 -
             ((C51719 + C51720) * C1985 + (C51601 + C51602) * C2059) +
             (C89875 * C5873 + C92310 * C5879 + C89868 * C5874 +
              C92067 * C5880) *
                 C1986) *
                C92186) *
               C92212) *
              C92078 * C2710)) /
        (p * q * std::sqrt(p + q));
    d2eexz[51] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C89875 * C107 + C92310 * C113 + C89868 * C108 + C92067 * C114) *
                 C2849 +
             (C89875 * C245 + C92310 * C251 + C89868 * C246 + C92067 * C252) *
                 C2709 -
             (C51596 + C51595) * C2850 - (C51833 + C51834) * C2710) *
                C92322 +
            ((C45573 + C45574) * C2849 + (C45770 + C45771) * C2709 -
             C54986 * C2850 - C55255 * C2710) *
                C92186) *
               C60959 +
           (((C51595 + C51596) * C2849 + (C51834 + C51833) * C2709 -
             (C51605 + C51606) * C2850 - (C51836 + C51835) * C2710) *
                C92322 +
            (C54983 * C2849 + C55256 * C2709 - (C51601 + C51602) * C2850 -
             (C51838 + C51837) * C2710) *
                C92186) *
               C92212) *
              C1985 +
          (((C54983 * C2850 -
             ((C45771 + C45770) * C2709 + (C45574 + C45573) * C2849) +
             C55256 * C2710) *
                C92322 +
            ((C48896 + C48895) * C2850 -
             ((C45773 + C45772) * C2709 + (C45578 + C45577) * C2849) +
             (C49120 + C49119) * C2710) *
                C92186) *
               C60959 +
           (((C51602 + C51601) * C2850 - (C55255 * C2709 + C54986 * C2849) +
             (C51837 + C51838) * C2710) *
                C92322 +
            ((C89875 * C5775 + C92310 * C5785 + C89868 * C5776 +
              C92067 * C5786) *
                 C2850 -
             ((C49119 + C49120) * C2709 + (C48895 + C48896) * C2849) +
             (C89875 * C5959 + C92310 * C5965 + C89868 * C5960 +
              C92067 * C5966) *
                 C2710) *
                C92186) *
               C92212) *
              C1986) *
         C92078) /
        (p * q * std::sqrt(p + q));
    d2eeyx[51] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C15033 * C107 + C92322 * C308 + C15034 * C805 + C92186 * C1022) *
                  C801 +
              (C15033 * C117 + C92322 * C314 + C15034 * C813 + C92186 * C1030) *
                  C92078) *
                 C60959 +
             ((C26974 + C26975) * C801 + (C26976 + C26977) * C92078) * C92212) *
                C92310 +
            (((C15061 + C15060) * C801 + (C15063 + C15062) * C92078) * C60959 +
             (C29266 * C801 + C29267 * C92078) * C92212) *
                C92067) *
               C2709 -
           ((((C26978 + C26979) * C92078 + (C26980 + C26981) * C801) * C92212 +
             (C29265 * C92078 + C29264 * C801) * C60959) *
                C92067 +
            (((C26982 + C26983) * C92078 + (C26984 + C26985) * C801) * C92212 +
             ((C26977 + C26976) * C92078 + (C26975 + C26974) * C801) * C60959) *
                C92310) *
               C2710) *
              C1985 +
          (((((C30494 + C30495) * C801 + (C30496 + C30497) * C92078) * C60959 +
             ((C15033 * C5773 + C92322 * C6043 + C15034 * C5775 +
               C92186 * C6044) *
                  C801 +
              (C15033 * C5783 + C92322 * C6049 + C15034 * C5787 +
               C92186 * C6050) *
                  C92078) *
                 C92212) *
                C92310 +
            (((C28064 + C28065) * C801 + (C28066 + C28067) * C92078) * C60959 +
             ((C15033 * C5774 + C92322 * C6045 + C15034 * C5776 +
               C92186 * C6046) *
                  C801 +
              (C15033 * C5784 + C92322 * C6051 + C15034 * C5788 +
               C92186 * C6052) *
                  C92078) *
                 C92212) *
                C92067) *
               C2710 -
           ((((C28067 + C28066) * C92078 + (C28065 + C28064) * C801) * C92212 +
             ((C17349 + C17348) * C92078 + (C17347 + C17346) * C801) * C60959) *
                C92067 +
            (((C30497 + C30496) * C92078 + (C30495 + C30494) * C801) * C92212 +
             ((C15034 * C822 + C92186 * C1031 + C15033 * C813 +
               C92322 * C1030) *
                  C92078 +
              (C15034 * C806 + C92186 * C1023 + C15033 * C805 +
               C92322 * C1022) *
                  C801) *
                 C60959) *
                C92310) *
               C2709) *
              C1986)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[51] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C15033 * C107 + C92322 * C308 + C15034 * C805 + C92186 * C1022) *
                 C2059 +
             (C15033 * C182 + C92322 * C394 + C15034 * C890 + C92186 * C1085) *
                 C1985 -
             (C15034 * C806 + C92186 * C1023 + C15033 * C805 + C92322 * C1022) *
                 C2060 -
             (C15034 * C891 + C92186 * C1086 + C15033 * C890 + C92322 * C1085) *
                 C1986) *
                C60959 +
            ((C26974 + C26975) * C2059 + (C27096 + C27097) * C1985 -
             (C30495 + C30494) * C2060 - (C30632 + C30633) * C1986) *
                C92212) *
               C92310 +
           (((C15061 + C15060) * C2059 + (C15161 + C15162) * C1985 -
             (C17347 + C17346) * C2060 - (C17460 + C17461) * C1986) *
                C60959 +
            (C29266 * C2059 + C29399 * C1985 - (C28065 + C28064) * C2060 -
             (C28202 + C28203) * C1986) *
                C92212) *
               C92067) *
              C92078 * C2709 +
          ((((C30494 + C30495) * C2060 -
             ((C27097 + C27096) * C1985 + (C26975 + C26974) * C2059) +
             (C30633 + C30632) * C1986) *
                C60959 +
            ((C15033 * C5773 + C92322 * C6043 + C15034 * C5775 +
              C92186 * C6044) *
                 C2060 -
             ((C27100 + C27101) * C1985 + (C26984 + C26985) * C2059) +
             (C15033 * C5871 + C92322 * C6129 + C15034 * C5873 +
              C92186 * C6130) *
                 C1986) *
                C92212) *
               C92310 +
           (((C28064 + C28065) * C2060 - (C29400 * C1985 + C29264 * C2059) +
             (C28203 + C28202) * C1986) *
                C60959 +
            ((C15033 * C5774 + C92322 * C6045 + C15034 * C5776 +
              C92186 * C6046) *
                 C2060 -
             ((C27098 + C27099) * C1985 + (C26980 + C26981) * C2059) +
             (C15033 * C5872 + C92322 * C6131 + C15034 * C5874 +
              C92186 * C6132) *
                 C1986) *
                C92212) *
               C92067) *
              C92078 * C2710)) /
        (p * q * std::sqrt(p + q));
    d2eeyz[51] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C15033 * C107 + C92322 * C308 + C15034 * C805 + C92186 * C1022) *
                 C2849 +
             (C15033 * C245 + C92322 * C474 + C15034 * C956 + C92186 * C1146) *
                 C2709 -
             (C26975 + C26974) * C2850 - (C27212 + C27213) * C2710) *
                C60959 +
            ((C26974 + C26975) * C2849 + (C27213 + C27212) * C2709 -
             (C26984 + C26985) * C2850 - (C27215 + C27214) * C2710) *
                C92212) *
               C92310 +
           (((C15061 + C15060) * C2849 + (C15258 + C15259) * C2709 -
             C29264 * C2850 - C29536 * C2710) *
                C60959 +
            (C29266 * C2849 + C29537 * C2709 - (C26980 + C26981) * C2850 -
             (C27217 + C27216) * C2710) *
                C92212) *
               C92067) *
              C1985 +
          ((((C30494 + C30495) * C2850 -
             ((C15034 * C957 + C92186 * C1147 + C15033 * C956 +
               C92322 * C1146) *
                  C2709 +
              (C15034 * C806 + C92186 * C1023 + C15033 * C805 +
               C92322 * C1022) *
                  C2849) +
             (C30768 + C30769) * C2710) *
                C60959 +
            ((C15033 * C5773 + C92322 * C6043 + C15034 * C5775 +
              C92186 * C6044) *
                 C2850 -
             ((C30769 + C30768) * C2709 + (C30495 + C30494) * C2849) +
             (C15033 * C5955 + C92322 * C6208 + C15034 * C5959 +
              C92186 * C6209) *
                 C2710) *
                C92212) *
               C92310 +
           (((C28064 + C28065) * C2850 -
             ((C17572 + C17573) * C2709 + (C17347 + C17346) * C2849) +
             (C28339 + C28338) * C2710) *
                C60959 +
            ((C15033 * C5774 + C92322 * C6045 + C15034 * C5776 +
              C92186 * C6046) *
                 C2850 -
             ((C28338 + C28339) * C2709 + (C28065 + C28064) * C2849) +
             (C15033 * C5956 + C92322 * C6211 + C15034 * C5960 +
              C92186 * C6212) *
                 C2710) *
                C92212) *
               C92067) *
              C1986) *
         C92078) /
        (p * q * std::sqrt(p + q));
    d2eezx[51] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C61411 * C107 + C60959 * C555 + C61412 * C1389 +
               C92212 * C1788) *
                  C801 +
              (C61411 * C117 + C60959 * C561 + C61412 * C1397 +
               C92212 * C1796) *
                  C92078) *
                 C92310 +
             ((C61439 + C61438) * C801 + (C61441 + C61440) * C92078) * C92067) *
                C92322 +
            (((C67034 + C67035) * C801 + (C67036 + C67037) * C92078) * C92310 +
             (C77532 * C801 + C77533 * C92078) * C92067) *
                C92186) *
               C2709 -
           ((((C78725 + C78724) * C92078 + (C78723 + C78722) * C801) * C92067 +
             ((C70510 + C70511) * C92078 + (C70512 + C70513) * C801) * C92310) *
                C92186 +
            (((C64719 + C64718) * C92078 + (C64717 + C64716) * C801) * C92067 +
             ((C61412 * C1406 + C92212 * C1797 + C61411 * C1397 +
               C60959 * C1796) *
                  C92078 +
              (C61412 * C1390 + C92212 * C1789 + C61411 * C1389 +
               C60959 * C1788) *
                  C801) *
                 C92310) *
                C92322) *
               C2710) *
              C1985 +
          (((((C70513 + C70512) * C801 + (C70511 + C70510) * C92078) * C92310 +
             ((C78722 + C78723) * C801 + (C78724 + C78725) * C92078) * C92067) *
                C92322 +
            (((C70509 + C70508) * C801 + (C70507 + C70506) * C92078) * C92310 +
             ((C61411 * C5771 + C60959 * C6287 + C61412 * C5776 +
               C92212 * C6292) *
                  C801 +
              (C61411 * C5777 + C60959 * C6293 + C61412 * C5788 +
               C92212 * C6298) *
                  C92078) *
                 C92067) *
                C92186) *
               C2710 -
           ((((C68676 + C68677) * C92078 + (C68674 + C68675) * C801) * C92067 +
             ((C67041 + C67040) * C92078 + (C67039 + C67038) * C801) * C92310) *
                C92186 +
            ((C77531 * C92078 + C77530 * C801) * C92067 +
             ((C67037 + C67036) * C92078 + (C67035 + C67034) * C801) * C92310) *
                C92322) *
               C2709) *
              C1986)) /
        (p * q * std::sqrt(p + q));
    d2eezy[51] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C61411 * C107 + C60959 * C555 + C61412 * C1389 + C92212 * C1788) *
                 C2059 +
             (C61411 * C182 + C60959 * C641 + C61412 * C1471 + C92212 * C1854) *
                 C1985 -
             (C67035 + C67034) * C2060 - (C67138 + C67139) * C1986) *
                C92310 +
            ((C61439 + C61438) * C2059 + (C61539 + C61540) * C1985 -
             C77530 * C2060 - C77664 * C1986) *
                C92067) *
               C92322 +
           (((C67034 + C67035) * C2059 + (C67139 + C67138) * C1985 -
             (C67039 + C67038) * C2060 - (C67141 + C67140) * C1986) *
                C92310 +
            (C77532 * C2059 + C77665 * C1985 - (C68674 + C68675) * C2060 -
             (C68781 + C68780) * C1986) *
                C92067) *
               C92186) *
              C92078 * C2709 +
          ((((C70513 + C70512) * C2060 -
             ((C61412 * C1472 + C92212 * C1855 + C61411 * C1471 +
               C60959 * C1854) *
                  C1985 +
              (C61412 * C1390 + C92212 * C1789 + C61411 * C1389 +
               C60959 * C1788) *
                  C2059) +
             (C70620 + C70621) * C1986) *
                C92310 +
            ((C78722 + C78723) * C2060 -
             ((C64831 + C64830) * C1985 + (C64717 + C64716) * C2059) +
             (C78860 + C78861) * C1986) *
                C92067) *
               C92322 +
           (((C70509 + C70508) * C2060 -
             ((C70621 + C70620) * C1985 + (C70512 + C70513) * C2059) +
             (C70622 + C70623) * C1986) *
                C92310 +
            ((C61411 * C5771 + C60959 * C6287 + C61412 * C5776 +
              C92212 * C6292) *
                 C2060 -
             ((C78861 + C78860) * C1985 + (C78723 + C78722) * C2059) +
             (C61411 * C5869 + C60959 * C6373 + C61412 * C5874 +
              C92212 * C6378) *
                 C1986) *
                C92067) *
               C92186) *
              C92078 * C2710)) /
        (p * q * std::sqrt(p + q));
    d2eezz[51] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C61411 * C107 + C60959 * C555 + C61412 * C1389 + C92212 * C1788) *
                 C2849 +
             (C61411 * C245 + C60959 * C719 + C61412 * C1540 + C92212 * C1909) *
                 C2709 -
             (C61412 * C1390 + C92212 * C1789 + C61411 * C1389 +
              C60959 * C1788) *
                 C2850 -
             (C61412 * C1541 + C92212 * C1910 + C61411 * C1540 +
              C60959 * C1909) *
                 C2710) *
                C92310 +
            ((C61439 + C61438) * C2849 + (C61635 + C61636) * C2709 -
             (C64717 + C64716) * C2850 - (C64940 + C64941) * C2710) *
                C92067) *
               C92322 +
           (((C67034 + C67035) * C2849 + (C67232 + C67233) * C2709 -
             (C70512 + C70513) * C2850 - (C70730 + C70731) * C2710) *
                C92310 +
            (C77532 * C2849 + C77797 * C2709 - (C78723 + C78722) * C2850 -
             (C78996 + C78997) * C2710) *
                C92067) *
               C92186) *
              C1985 +
          ((((C70513 + C70512) * C2850 -
             ((C67233 + C67232) * C2709 + (C67035 + C67034) * C2849) +
             (C70731 + C70730) * C2710) *
                C92310 +
            ((C78722 + C78723) * C2850 - (C77798 * C2709 + C77530 * C2849) +
             (C78997 + C78996) * C2710) *
                C92067) *
               C92322 +
           (((C70509 + C70508) * C2850 -
             ((C67235 + C67234) * C2709 + (C67039 + C67038) * C2849) +
             (C70733 + C70732) * C2710) *
                C92310 +
            ((C61411 * C5771 + C60959 * C6287 + C61412 * C5776 +
              C92212 * C6292) *
                 C2850 -
             ((C68885 + C68884) * C2709 + (C68674 + C68675) * C2849) +
             (C61411 * C5957 + C60959 * C6457 + C61412 * C5960 +
              C92212 * C6458) *
                 C2710) *
                C92067) *
               C92186) *
              C1986) *
         C92078) /
        (p * q * std::sqrt(p + q));
    d2eexx[52] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C89875 * C107 + C92310 * C113 + C89868 * C108 + C92067 * C114) *
                 C801 +
             (C89875 * C117 + C92310 * C125 + C89868 * C118 + C92067 * C126) *
                 C92078) *
                C92322 +
            ((C45573 + C45574) * C801 + (C45575 + C45576) * C92078) * C92186) *
               C60959 +
           (((C51595 + C51596) * C801 + (C51597 + C51598) * C92078) * C92322 +
            C54991 * C92186) *
               C92212) *
              C92110 * C798 -
          ((((C48893 + C48894) * C92078 + (C48895 + C48896) * C801) * C92186 +
            C54992 * C92322) *
               C92212 +
           (((C45580 + C45579) * C92078 + (C45578 + C45577) * C801) * C92186 +
            ((C45576 + C45575) * C92078 + (C45574 + C45573) * C801) * C92322) *
               C60959) *
              C92110 * C799 +
          ((C45589 * C92322 +
            ((C45584 + C45583) * C801 + (C45582 + C45581) * C92078) * C92186) *
               C60959 +
           (((C48896 + C48895) * C801 + (C48894 + C48893) * C92078) * C92322 +
            ((C89875 * C8536 + C92310 * C8538 + C89868 * C8537 +
              C92067 * C8539) *
                 C801 +
             (C89875 * C8540 + C92310 * C8542 + C89868 * C8541 +
              C92067 * C8543) *
                 C92078) *
                C92186) *
               C92212) *
              C92110 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C89875 * C107 + C92310 * C113 + C89868 * C108 + C92067 * C114) *
                C104 +
            (C89875 * C117 + C92310 * C125 + C89868 * C118 + C92067 * C126) *
                C93 -
            (C89868 * C109 + C92067 * C115 + C89875 * C108 + C92310 * C114) *
                C105 -
            (C89868 * C119 + C92067 * C127 + C89875 * C118 + C92310 * C126) *
                C94 +
            (C89875 * C109 + C92310 * C115 + C89868 * C110 + C92067 * C116) *
                C106 +
            (C89875 * C119 + C92310 * C127 + C89868 * C120 + C92067 * C128) *
                C95) *
               C92322 +
           ((C45573 + C45574) * C104 + (C45575 + C45576) * C93 -
            (C47009 + C47010) * C105 - (C47011 + C47012) * C94 +
            (C89875 * C803 + C92310 * C815 + C89868 * C802 + C92067 * C814) *
                C106 +
            (C89875 * C811 + C92310 * C827 + C89868 * C810 + C92067 * C826) *
                C95) *
               C92186) *
              C60959 +
          (((C51595 + C51596) * C104 + (C51597 + C51598) * C93 -
            (C53783 + C53784) * C105 - (C53785 + C53786) * C94 +
            (C89875 * C1387 + C92310 * C1399 + C89868 * C1386 +
             C92067 * C1398) *
                C106 +
            (C89875 * C1395 + C92310 * C1411 + C89868 * C1394 +
             C92067 * C1410) *
                C95) *
               C92322 +
           (C54983 * C104 + C54984 * C93 - (C52565 + C52566) * C105 -
            (C52567 + C52568) * C94 +
            (C89875 * C3433 + C92310 * C3437 + C89868 * C3434 +
             C92067 * C3438) *
                C106 +
            (C89875 * C3441 + C92310 * C3445 + C89868 * C3442 +
             C92067 * C3446) *
                C95) *
               C92186) *
              C92212) *
         C92110 * C92099) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C89875 * C107 + C92310 * C113 + C89868 * C108 + C92067 * C114) *
                 C801 +
             (C89875 * C117 + C92310 * C125 + C89868 * C118 + C92067 * C126) *
                 C92078) *
                C92322 +
            ((C45573 + C45574) * C801 + (C45575 + C45576) * C92078) * C92186) *
               C60959 +
           (((C51595 + C51596) * C801 + (C51597 + C51598) * C92078) * C92322 +
            C54991 * C92186) *
               C92212) *
              C1383 -
          ((((C51599 + C51600) * C92078 + (C51601 + C51602) * C801) * C92186 +
            ((C51603 + C51604) * C92078 + (C51605 + C51606) * C801) * C92322) *
               C92212 +
           (C54992 * C92186 +
            ((C51598 + C51597) * C92078 + (C51596 + C51595) * C801) * C92322) *
               C60959) *
              C1384 +
          ((((C51606 + C51605) * C801 + (C51604 + C51603) * C92078) * C92322 +
            ((C51602 + C51601) * C801 + (C51600 + C51599) * C92078) * C92186) *
               C60959 +
           (((C89875 * C10961 + C92310 * C10967 + C89868 * C10960 +
              C92067 * C10966) *
                 C801 +
             (C89875 * C10965 + C92310 * C10973 + C89868 * C10964 +
              C92067 * C10972) *
                 C92078) *
                C92322 +
            ((C89875 * C13849 + C92310 * C13851 + C89868 * C13850 +
              C92067 * C13852) *
                 C801 +
             (C89875 * C13853 + C92310 * C13855 + C89868 * C13854 +
              C92067 * C13856) *
                 C92078) *
                C92186) *
               C92212) *
              C1385) *
         C92099) /
            (p * q * std::sqrt(p + q));
    d2eexy[52] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C89875 * C107 + C92310 * C113 + C89868 * C108 + C92067 * C114) *
                C884 +
            (C89875 * C182 + C92310 * C188 + C89868 * C183 + C92067 * C189) *
                C798 -
            (C45574 + C45573) * C885 - (C45676 + C45677) * C799 +
            C45585 * C886 + C45682 * C800) *
               C92322 +
           ((C45573 + C45574) * C884 + (C45677 + C45676) * C798 -
            (C45578 + C45577) * C885 - (C45679 + C45678) * C799 +
            (C45584 + C45583) * C886 + (C45680 + C45681) * C800) *
               C92186) *
              C60959 +
          (((C51595 + C51596) * C884 + (C51717 + C51718) * C798 -
            C54986 * C885 - C55123 * C799 + (C48896 + C48895) * C886 +
            (C49009 + C49010) * C800) *
               C92322 +
           (C54983 * C884 + C55124 * C798 - (C48895 + C48896) * C885 -
            (C49010 + C49009) * C799 +
            (C89875 * C8536 + C92310 * C8538 + C89868 * C8537 +
             C92067 * C8539) *
                C886 +
            (C89875 * C8666 + C92310 * C8668 + C89868 * C8667 +
             C92067 * C8669) *
                C800) *
               C92186) *
              C92212) *
         C92078 * C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C89875 * C107 + C92310 * C113 + C89868 * C108 + C92067 * C114) *
                 C181 +
             (C89875 * C182 + C92310 * C188 + C89868 * C183 + C92067 * C189) *
                 C92099) *
                C92322 +
            ((C45573 + C45574) * C181 + (C45677 + C45676) * C92099) * C92186) *
               C60959 +
           (((C51595 + C51596) * C181 + (C51717 + C51718) * C92099) * C92322 +
            (C54983 * C181 + C55124 * C92099) * C92186) *
               C92212) *
              C93 -
          ((((C52704 + C52703) * C92099 + (C52565 + C52566) * C181) * C92186 +
            ((C53921 + C53922) * C92099 + (C53783 + C53784) * C181) * C92322) *
               C92212 +
           (((C47124 + C47123) * C92099 + (C47009 + C47010) * C181) * C92186 +
            ((C89868 * C184 + C92067 * C190 + C89875 * C183 + C92310 * C189) *
                 C92099 +
             (C89868 * C109 + C92067 * C115 + C89875 * C108 + C92310 * C114) *
                 C181) *
                C92322) *
               C60959) *
              C94 +
          ((((C89875 * C109 + C92310 * C115 + C89868 * C110 + C92067 * C116) *
                 C181 +
             (C89875 * C184 + C92310 * C190 + C89868 * C185 + C92067 * C191) *
                 C92099) *
                C92322 +
            ((C89875 * C803 + C92310 * C815 + C89868 * C802 + C92067 * C814) *
                 C181 +
             (C89875 * C888 + C92310 * C896 + C89868 * C887 + C92067 * C895) *
                 C92099) *
                C92186) *
               C60959 +
           (((C89875 * C1387 + C92310 * C1399 + C89868 * C1386 +
              C92067 * C1398) *
                 C181 +
             (C89875 * C1469 + C92310 * C1477 + C89868 * C1468 +
              C92067 * C1476) *
                 C92099) *
                C92322 +
            ((C89875 * C3433 + C92310 * C3437 + C89868 * C3434 +
              C92067 * C3438) *
                 C181 +
             (C89875 * C3515 + C92310 * C3519 + C89868 * C3516 +
              C92067 * C3520) *
                 C92099) *
                C92186) *
               C92212) *
              C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C89875 * C107 + C92310 * C113 + C89868 * C108 + C92067 * C114) *
                 C181 +
             (C89875 * C182 + C92310 * C188 + C89868 * C183 + C92067 * C189) *
                 C92099) *
                C92322 +
            ((C45573 + C45574) * C181 + (C45677 + C45676) * C92099) * C92186) *
               C60959 +
           (((C51595 + C51596) * C181 + (C51717 + C51718) * C92099) * C92322 +
            (C54983 * C181 + C55124 * C92099) * C92186) *
               C92212) *
              C92078 * C1383 -
          ((((C51719 + C51720) * C92099 + (C51601 + C51602) * C181) * C92186 +
            ((C51721 + C51722) * C92099 + (C51605 + C51606) * C181) * C92322) *
               C92212 +
           ((C55123 * C92099 + C54986 * C181) * C92186 +
            ((C51718 + C51717) * C92099 + (C51596 + C51595) * C181) * C92322) *
               C60959) *
              C92078 * C1384 +
          ((((C51606 + C51605) * C181 + (C51722 + C51721) * C92099) * C92322 +
            ((C51602 + C51601) * C181 + (C51720 + C51719) * C92099) * C92186) *
               C60959 +
           (((C89875 * C10961 + C92310 * C10967 + C89868 * C10960 +
              C92067 * C10966) *
                 C181 +
             (C89875 * C11093 + C92310 * C11097 + C89868 * C11092 +
              C92067 * C11096) *
                 C92099) *
                C92322 +
            ((C89875 * C13849 + C92310 * C13851 + C89868 * C13850 +
              C92067 * C13852) *
                 C181 +
             (C89875 * C13967 + C92310 * C13969 + C89868 * C13968 +
              C92067 * C13970) *
                 C92099) *
                C92186) *
               C92212) *
              C92078 * C1385)) /
            (p * q * std::sqrt(p + q));
    d2eexz[52] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C89875 * C107 + C92310 * C113 + C89868 * C108 + C92067 * C114) *
                 C244 +
             (C89875 * C245 + C92310 * C251 + C89868 * C246 + C92067 * C252) *
                 C92110) *
                C92322 +
            ((C45573 + C45574) * C244 + (C45770 + C45771) * C92110) * C92186) *
               C60959 +
           (((C51595 + C51596) * C244 + (C51834 + C51833) * C92110) * C92322 +
            (C54983 * C244 + C55256 * C92110) * C92186) *
               C92212) *
              C798 -
          ((((C49119 + C49120) * C92110 + (C48895 + C48896) * C244) * C92186 +
            (C55255 * C92110 + C54986 * C244) * C92322) *
               C92212 +
           (((C45773 + C45772) * C92110 + (C45578 + C45577) * C244) * C92186 +
            ((C45771 + C45770) * C92110 + (C45574 + C45573) * C244) * C92322) *
               C60959) *
              C799 +
          ((C45778 * C92322 +
            ((C45584 + C45583) * C244 + (C45775 + C45774) * C92110) * C92186) *
               C60959 +
           (((C48896 + C48895) * C244 + (C49120 + C49119) * C92110) * C92322 +
            ((C89875 * C8536 + C92310 * C8538 + C89868 * C8537 +
              C92067 * C8539) *
                 C244 +
             (C89875 * C8780 + C92310 * C8782 + C89868 * C8781 +
              C92067 * C8783) *
                 C92110) *
                C92186) *
               C92212) *
              C800) *
         C92078) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C89875 * C107 + C92310 * C113 + C89868 * C108 + C92067 * C114) *
                 C244 +
             (C89875 * C245 + C92310 * C251 + C89868 * C246 + C92067 * C252) *
                 C92110) *
                C92322 +
            ((C45573 + C45574) * C244 + (C45770 + C45771) * C92110) * C92186) *
               C60959 +
           (((C51595 + C51596) * C244 + (C51834 + C51833) * C92110) * C92322 +
            (C54983 * C244 + C55256 * C92110) * C92186) *
               C92212) *
              C92099 * C93 -
          ((((C52840 + C52839) * C92110 + (C52565 + C52566) * C244) * C92186 +
            ((C54058 + C54057) * C92110 + (C53783 + C53784) * C244) * C92322) *
               C92212 +
           (((C47234 + C47233) * C92110 + (C47009 + C47010) * C244) * C92186 +
            ((C89868 * C247 + C92067 * C253 + C89875 * C246 + C92310 * C252) *
                 C92110 +
             (C89868 * C109 + C92067 * C115 + C89875 * C108 + C92310 * C114) *
                 C244) *
                C92322) *
               C60959) *
              C92099 * C94 +
          ((((C89875 * C109 + C92310 * C115 + C89868 * C110 + C92067 * C116) *
                 C244 +
             (C89875 * C247 + C92310 * C253 + C89868 * C248 + C92067 * C254) *
                 C92110) *
                C92322 +
            ((C89875 * C803 + C92310 * C815 + C89868 * C802 + C92067 * C814) *
                 C244 +
             (C89875 * C954 + C92310 * C962 + C89868 * C953 + C92067 * C961) *
                 C92110) *
                C92186) *
               C60959 +
           (((C89875 * C1387 + C92310 * C1399 + C89868 * C1386 +
              C92067 * C1398) *
                 C244 +
             (C89875 * C1538 + C92310 * C1546 + C89868 * C1537 +
              C92067 * C1545) *
                 C92110) *
                C92322 +
            ((C89875 * C3433 + C92310 * C3437 + C89868 * C3434 +
              C92067 * C3438) *
                 C244 +
             (C89875 * C3589 + C92310 * C3593 + C89868 * C3590 +
              C92067 * C3594) *
                 C92110) *
                C92186) *
               C92212) *
              C92099 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C89875 * C107 + C92310 * C113 + C89868 * C108 + C92067 * C114) *
                C1534 +
            (C89875 * C245 + C92310 * C251 + C89868 * C246 + C92067 * C252) *
                C1383 -
            (C51596 + C51595) * C1535 - (C51833 + C51834) * C1384 +
            (C51606 + C51605) * C1536 + (C51835 + C51836) * C1385) *
               C92322 +
           ((C45573 + C45574) * C1534 + (C45770 + C45771) * C1383 -
            C54986 * C1535 - C55255 * C1384 + (C51602 + C51601) * C1536 +
            (C51837 + C51838) * C1385) *
               C92186) *
              C60959 +
          (((C51595 + C51596) * C1534 + (C51834 + C51833) * C1383 -
            (C51605 + C51606) * C1535 - (C51836 + C51835) * C1384 +
            (C89875 * C10961 + C92310 * C10967 + C89868 * C10960 +
             C92067 * C10966) *
                C1536 +
            (C89875 * C11197 + C92310 * C11201 + C89868 * C11198 +
             C92067 * C11202) *
                C1385) *
               C92322 +
           (C54983 * C1534 + C55256 * C1383 - (C51601 + C51602) * C1535 -
            (C51838 + C51837) * C1384 +
            (C89875 * C13849 + C92310 * C13851 + C89868 * C13850 +
             C92067 * C13852) *
                C1536 +
            (C89875 * C14075 + C92310 * C14077 + C89868 * C14076 +
             C92067 * C14078) *
                C1385) *
               C92186) *
              C92212) *
         C92099 * C92078) /
            (p * q * std::sqrt(p + q));
    d2eeyx[52] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C15033 * C107 + C92322 * C308 + C15034 * C805 + C92186 * C1022) *
                 C801 +
             (C15033 * C117 + C92322 * C314 + C15034 * C813 + C92186 * C1030) *
                 C92078) *
                C60959 +
            ((C26974 + C26975) * C801 + (C26976 + C26977) * C92078) * C92212) *
               C92310 +
           (((C15061 + C15060) * C801 + (C15063 + C15062) * C92078) * C60959 +
            (C29266 * C801 + C29267 * C92078) * C92212) *
               C92067) *
              C92110 * C798 -
          ((((C28067 + C28066) * C92078 + (C28065 + C28064) * C801) * C92212 +
            ((C17349 + C17348) * C92078 + (C17347 + C17346) * C801) * C60959) *
               C92067 +
           (((C30497 + C30496) * C92078 + (C30495 + C30494) * C801) * C92212 +
            ((C15034 * C822 + C92186 * C1031 + C15033 * C813 + C92322 * C1030) *
                 C92078 +
             (C15034 * C806 + C92186 * C1023 + C15033 * C805 + C92322 * C1022) *
                 C801) *
                C60959) *
               C92310) *
              C92110 * C799 +
          ((((C15033 * C806 + C92322 * C1023 + C15034 * C4882 +
              C92186 * C5218) *
                 C801 +
             (C15033 * C822 + C92322 * C1031 + C15034 * C4886 +
              C92186 * C5222) *
                 C92078) *
                C60959 +
            ((C15033 * C5772 + C92322 * C6042 + C15034 * C8536 +
              C92186 * C8894) *
                 C801 +
             (C15033 * C5778 + C92322 * C6048 + C15034 * C8540 +
              C92186 * C8896) *
                 C92078) *
                C92212) *
               C92310 +
           (((C15033 * C807 + C92322 * C1024 + C15034 * C4881 +
              C92186 * C5217) *
                 C801 +
             (C15033 * C823 + C92322 * C1032 + C15034 * C4885 +
              C92186 * C5221) *
                 C92078) *
                C60959 +
            ((C15033 * C5771 + C92322 * C6041 + C15034 * C8537 +
              C92186 * C8895) *
                 C801 +
             (C15033 * C5777 + C92322 * C6047 + C15034 * C8541 +
              C92186 * C8897) *
                 C92078) *
                C92212) *
               C92067) *
              C92110 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15033 * C107 + C92322 * C308 + C15034 * C805 + C92186 * C1022) *
                C104 +
            (C15033 * C117 + C92322 * C314 + C15034 * C813 + C92186 * C1030) *
                C93 -
            (C15060 + C15061) * C105 - (C15062 + C15063) * C94 + C15072 * C106 +
            C15073 * C95) *
               C60959 +
           ((C26974 + C26975) * C104 + (C26976 + C26977) * C93 - C29264 * C105 -
            C29265 * C94 + (C18289 + C18290) * C106 + (C18291 + C18292) * C95) *
               C92212) *
              C92310 +
          (((C15061 + C15060) * C104 + (C15063 + C15062) * C93 -
            (C15065 + C15064) * C105 - (C15067 + C15066) * C94 +
            (C15068 + C15069) * C106 + (C15070 + C15071) * C95) *
               C60959 +
           (C29266 * C104 + C29267 * C93 - (C18290 + C18289) * C105 -
            (C18292 + C18291) * C94 +
            (C15033 * C1386 + C92322 * C1603 + C15034 * C3434 +
             C92186 * C3664) *
                C106 +
            (C15033 * C1394 + C92322 * C1611 + C15034 * C3442 +
             C92186 * C3668) *
                C95) *
               C92212) *
              C92067) *
         C92110 * C92099) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C15033 * C107 + C92322 * C308 + C15034 * C805 + C92186 * C1022) *
                 C801 +
             (C15033 * C117 + C92322 * C314 + C15034 * C813 + C92186 * C1030) *
                 C92078) *
                C60959 +
            ((C26974 + C26975) * C801 + (C26976 + C26977) * C92078) * C92212) *
               C92310 +
           (((C15061 + C15060) * C801 + (C15063 + C15062) * C92078) * C60959 +
            (C29266 * C801 + C29267 * C92078) * C92212) *
               C92067) *
              C1383 -
          ((((C26978 + C26979) * C92078 + (C26980 + C26981) * C801) * C92212 +
            (C29265 * C92078 + C29264 * C801) * C60959) *
               C92067 +
           (((C26982 + C26983) * C92078 + (C26984 + C26985) * C801) * C92212 +
            ((C26977 + C26976) * C92078 + (C26975 + C26974) * C801) * C60959) *
               C92310) *
              C1384 +
          ((((C26985 + C26984) * C801 + (C26983 + C26982) * C92078) * C60959 +
            ((C15033 * C10961 + C92322 * C11299 + C15034 * C13849 +
              C92186 * C14183) *
                 C801 +
             (C15033 * C10965 + C92322 * C11303 + C15034 * C13853 +
              C92186 * C14185) *
                 C92078) *
                C92212) *
               C92310 +
           (((C26981 + C26980) * C801 + (C26979 + C26978) * C92078) * C60959 +
            ((C15033 * C10960 + C92322 * C11298 + C15034 * C13850 +
              C92186 * C14184) *
                 C801 +
             (C15033 * C10964 + C92322 * C11302 + C15034 * C13854 +
              C92186 * C14186) *
                 C92078) *
                C92212) *
               C92067) *
              C1385) *
         C92099) /
            (p * q * std::sqrt(p + q));
    d2eeyy[52] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15033 * C107 + C92322 * C308 + C15034 * C805 + C92186 * C1022) *
                C884 +
            (C15033 * C182 + C92322 * C394 + C15034 * C890 + C92186 * C1085) *
                C798 -
            (C15034 * C806 + C92186 * C1023 + C15033 * C805 + C92322 * C1022) *
                C885 -
            (C15034 * C891 + C92186 * C1086 + C15033 * C890 + C92322 * C1085) *
                C799 +
            (C15033 * C806 + C92322 * C1023 + C15034 * C4882 + C92186 * C5218) *
                C886 +
            (C15033 * C891 + C92322 * C1086 + C15034 * C5012 + C92186 * C5299) *
                C800) *
               C60959 +
           ((C26974 + C26975) * C884 + (C27096 + C27097) * C798 -
            (C30495 + C30494) * C885 - (C30632 + C30633) * C799 +
            (C15033 * C5772 + C92322 * C6042 + C15034 * C8536 +
             C92186 * C8894) *
                C886 +
            (C15033 * C5870 + C92322 * C6128 + C15034 * C8666 +
             C92186 * C8996) *
                C800) *
               C92212) *
              C92310 +
          (((C15061 + C15060) * C884 + (C15161 + C15162) * C798 -
            (C17347 + C17346) * C885 - (C17460 + C17461) * C799 +
            (C15033 * C807 + C92322 * C1024 + C15034 * C4881 + C92186 * C5217) *
                C886 +
            (C15033 * C892 + C92322 * C1088 + C15034 * C5013 + C92186 * C5301) *
                C800) *
               C60959 +
           (C29266 * C884 + C29399 * C798 - (C28065 + C28064) * C885 -
            (C28202 + C28203) * C799 +
            (C15033 * C5771 + C92322 * C6041 + C15034 * C8537 +
             C92186 * C8895) *
                C886 +
            (C15033 * C5869 + C92322 * C6127 + C15034 * C8667 +
             C92186 * C8997) *
                C800) *
               C92212) *
              C92067) *
         C92078 * C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C15033 * C107 + C92322 * C308 + C15034 * C805 + C92186 * C1022) *
                 C181 +
             (C15033 * C182 + C92322 * C394 + C15034 * C890 + C92186 * C1085) *
                 C92099) *
                C60959 +
            ((C26974 + C26975) * C181 + (C27096 + C27097) * C92099) * C92212) *
               C92310 +
           (((C15061 + C15060) * C181 + (C15161 + C15162) * C92099) * C60959 +
            C29404 * C92212) *
               C92067) *
              C93 -
          ((((C18402 + C18401) * C92099 + (C18290 + C18289) * C181) * C92212 +
            ((C15164 + C15163) * C92099 + (C15065 + C15064) * C181) * C60959) *
               C92067 +
           (C29405 * C92212 +
            ((C15162 + C15161) * C92099 + (C15060 + C15061) * C181) * C60959) *
               C92310) *
              C94 +
          ((C15169 * C60959 +
            ((C18289 + C18290) * C181 + (C18401 + C18402) * C92099) * C92212) *
               C92310 +
           (((C15068 + C15069) * C181 + (C15166 + C15165) * C92099) * C60959 +
            ((C15033 * C1386 + C92322 * C1603 + C15034 * C3434 +
              C92186 * C3664) *
                 C181 +
             (C15033 * C1468 + C92322 * C1669 + C15034 * C3516 +
              C92186 * C3738) *
                 C92099) *
                C92212) *
               C92067) *
              C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C15033 * C107 + C92322 * C308 + C15034 * C805 + C92186 * C1022) *
                 C181 +
             (C15033 * C182 + C92322 * C394 + C15034 * C890 + C92186 * C1085) *
                 C92099) *
                C60959 +
            ((C26974 + C26975) * C181 + (C27096 + C27097) * C92099) * C92212) *
               C92310 +
           (((C15061 + C15060) * C181 + (C15161 + C15162) * C92099) * C60959 +
            C29404 * C92212) *
               C92067) *
              C92078 * C1383 -
          ((((C27098 + C27099) * C92099 + (C26980 + C26981) * C181) * C92212 +
            C29405 * C60959) *
               C92067 +
           (((C27100 + C27101) * C92099 + (C26984 + C26985) * C181) * C92212 +
            ((C27097 + C27096) * C92099 + (C26975 + C26974) * C181) * C60959) *
               C92310) *
              C92078 * C1384 +
          ((((C26985 + C26984) * C181 + (C27101 + C27100) * C92099) * C60959 +
            ((C15033 * C10961 + C92322 * C11299 + C15034 * C13849 +
              C92186 * C14183) *
                 C181 +
             (C15033 * C11093 + C92322 * C11419 + C15034 * C13967 +
              C92186 * C14305) *
                 C92099) *
                C92212) *
               C92310 +
           (((C26981 + C26980) * C181 + (C27099 + C27098) * C92099) * C60959 +
            ((C15033 * C10960 + C92322 * C11298 + C15034 * C13850 +
              C92186 * C14184) *
                 C181 +
             (C15033 * C11092 + C92322 * C11418 + C15034 * C13968 +
              C92186 * C14306) *
                 C92099) *
                C92212) *
               C92067) *
              C92078 * C1385)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[52] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C15033 * C107 + C92322 * C308 + C15034 * C805 + C92186 * C1022) *
                 C244 +
             (C15033 * C245 + C92322 * C474 + C15034 * C956 + C92186 * C1146) *
                 C92110) *
                C60959 +
            ((C26974 + C26975) * C244 + (C27213 + C27212) * C92110) * C92212) *
               C92310 +
           (((C15061 + C15060) * C244 + (C15258 + C15259) * C92110) * C60959 +
            (C29266 * C244 + C29537 * C92110) * C92212) *
               C92067) *
              C798 -
          ((((C28338 + C28339) * C92110 + (C28065 + C28064) * C244) * C92212 +
            ((C17572 + C17573) * C92110 + (C17347 + C17346) * C244) * C60959) *
               C92067 +
           (((C30769 + C30768) * C92110 + (C30495 + C30494) * C244) * C92212 +
            ((C15034 * C957 + C92186 * C1147 + C15033 * C956 + C92322 * C1146) *
                 C92110 +
             (C15034 * C806 + C92186 * C1023 + C15033 * C805 + C92322 * C1022) *
                 C244) *
                C60959) *
               C92310) *
              C799 +
          ((((C15033 * C806 + C92322 * C1023 + C15034 * C4882 +
              C92186 * C5218) *
                 C244 +
             (C15033 * C957 + C92322 * C1147 + C15034 * C5114 +
              C92186 * C5378) *
                 C92110) *
                C60959 +
            ((C15033 * C5772 + C92322 * C6042 + C15034 * C8536 +
              C92186 * C8894) *
                 C244 +
             (C15033 * C5958 + C92322 * C6207 + C15034 * C8780 +
              C92186 * C9096) *
                 C92110) *
                C92212) *
               C92310 +
           (((C15033 * C807 + C92322 * C1024 + C15034 * C4881 +
              C92186 * C5217) *
                 C244 +
             (C15033 * C958 + C92322 * C1148 + C15034 * C5113 +
              C92186 * C5377) *
                 C92110) *
                C60959 +
            ((C15033 * C5771 + C92322 * C6041 + C15034 * C8537 +
              C92186 * C8895) *
                 C244 +
             (C15033 * C5957 + C92322 * C6210 + C15034 * C8781 +
              C92186 * C9097) *
                 C92110) *
                C92212) *
               C92067) *
              C800) *
         C92078) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C15033 * C107 + C92322 * C308 + C15034 * C805 + C92186 * C1022) *
                 C244 +
             (C15033 * C245 + C92322 * C474 + C15034 * C956 + C92186 * C1146) *
                 C92110) *
                C60959 +
            ((C26974 + C26975) * C244 + (C27213 + C27212) * C92110) * C92212) *
               C92310 +
           (((C15061 + C15060) * C244 + (C15258 + C15259) * C92110) * C60959 +
            (C29266 * C244 + C29537 * C92110) * C92212) *
               C92067) *
              C92099 * C93 -
          ((((C18511 + C18512) * C92110 + (C18290 + C18289) * C244) * C92212 +
            ((C15261 + C15260) * C92110 + (C15065 + C15064) * C244) * C60959) *
               C92067 +
           ((C29536 * C92110 + C29264 * C244) * C92212 +
            ((C15259 + C15258) * C92110 + (C15060 + C15061) * C244) * C60959) *
               C92310) *
              C92099 * C94 +
          ((C15266 * C60959 +
            ((C18289 + C18290) * C244 + (C18512 + C18511) * C92110) * C92212) *
               C92310 +
           (((C15068 + C15069) * C244 + (C15263 + C15262) * C92110) * C60959 +
            ((C15033 * C1386 + C92322 * C1603 + C15034 * C3434 +
              C92186 * C3664) *
                 C244 +
             (C15033 * C1537 + C92322 * C1733 + C15034 * C3590 +
              C92186 * C3808) *
                 C92110) *
                C92212) *
               C92067) *
              C92099 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C15033 * C107 + C92322 * C308 + C15034 * C805 + C92186 * C1022) *
                C1534 +
            (C15033 * C245 + C92322 * C474 + C15034 * C956 + C92186 * C1146) *
                C1383 -
            (C26975 + C26974) * C1535 - (C27212 + C27213) * C1384 +
            (C26985 + C26984) * C1536 + (C27214 + C27215) * C1385) *
               C60959 +
           ((C26974 + C26975) * C1534 + (C27213 + C27212) * C1383 -
            (C26984 + C26985) * C1535 - (C27215 + C27214) * C1384 +
            (C15033 * C10961 + C92322 * C11299 + C15034 * C13849 +
             C92186 * C14183) *
                C1536 +
            (C15033 * C11197 + C92322 * C11518 + C15034 * C14075 +
             C92186 * C14419) *
                C1385) *
               C92212) *
              C92310 +
          (((C15061 + C15060) * C1534 + (C15258 + C15259) * C1383 -
            C29264 * C1535 - C29536 * C1384 + (C26981 + C26980) * C1536 +
            (C27216 + C27217) * C1385) *
               C60959 +
           (C29266 * C1534 + C29537 * C1383 - (C26980 + C26981) * C1535 -
            (C27217 + C27216) * C1384 +
            (C15033 * C10960 + C92322 * C11298 + C15034 * C13850 +
             C92186 * C14184) *
                C1536 +
            (C15033 * C11198 + C92322 * C11520 + C15034 * C14076 +
             C92186 * C14420) *
                C1385) *
               C92212) *
              C92067) *
         C92099 * C92078) /
            (p * q * std::sqrt(p + q));
    d2eezx[52] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C61411 * C107 + C60959 * C555 + C61412 * C1389 + C92212 * C1788) *
                 C801 +
             (C61411 * C117 + C60959 * C561 + C61412 * C1397 + C92212 * C1796) *
                 C92078) *
                C92310 +
            ((C61439 + C61438) * C801 + (C61441 + C61440) * C92078) * C92067) *
               C92322 +
           (((C67034 + C67035) * C801 + (C67036 + C67037) * C92078) * C92310 +
            ((C63750 + C63751) * C801 + (C63752 + C63753) * C92078) * C92067) *
               C92186) *
              C92110 * C798 -
          ((((C68676 + C68677) * C92078 + (C68674 + C68675) * C801) * C92067 +
            ((C67041 + C67040) * C92078 + (C67039 + C67038) * C801) * C92310) *
               C92186 +
           (((C63753 + C63752) * C92078 + (C63751 + C63750) * C801) * C92067 +
            ((C67037 + C67036) * C92078 + (C67035 + C67034) * C801) * C92310) *
               C92322) *
              C92110 * C799 +
          ((C67050 * C92310 +
            ((C68675 + C68674) * C801 + (C68677 + C68676) * C92078) * C92067) *
               C92322 +
           (((C67045 + C67044) * C801 + (C67043 + C67042) * C92078) * C92310 +
            ((C61411 * C4881 + C60959 * C5455 + C61412 * C8537 +
              C92212 * C9197) *
                 C801 +
             (C61411 * C4885 + C60959 * C5459 + C61412 * C8541 +
              C92212 * C9199) *
                 C92078) *
                C92067) *
               C92186) *
              C92110 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C61411 * C107 + C60959 * C555 + C61412 * C1389 + C92212 * C1788) *
                C104 +
            (C61411 * C117 + C60959 * C561 + C61412 * C1397 + C92212 * C1796) *
                C93 -
            (C61438 + C61439) * C105 - (C61440 + C61441) * C94 + C61450 * C106 +
            C61451 * C95) *
               C92310 +
           ((C61439 + C61438) * C104 + (C61441 + C61440) * C93 -
            (C61443 + C61442) * C105 - (C61445 + C61444) * C94 +
            (C61446 + C61447) * C106 + (C61448 + C61449) * C95) *
               C92067) *
              C92322 +
          (((C67034 + C67035) * C104 + (C67036 + C67037) * C93 -
            (C63751 + C63750) * C105 - (C63753 + C63752) * C94 +
            (C63754 + C63755) * C106 + (C63756 + C63757) * C95) *
               C92310 +
           ((C63750 + C63751) * C104 + (C63752 + C63753) * C93 -
            (C63755 + C63754) * C105 - (C63757 + C63756) * C94 +
            (C61411 * C802 + C60959 * C1201 + C61412 * C3434 + C92212 * C3878) *
                C106 +
            (C61411 * C810 + C60959 * C1209 + C61412 * C3442 + C92212 * C3882) *
                C95) *
               C92067) *
              C92186) *
         C92110 * C92099) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C61411 * C107 + C60959 * C555 + C61412 * C1389 + C92212 * C1788) *
                 C801 +
             (C61411 * C117 + C60959 * C561 + C61412 * C1397 + C92212 * C1796) *
                 C92078) *
                C92310 +
            ((C61439 + C61438) * C801 + (C61441 + C61440) * C92078) * C92067) *
               C92322 +
           (((C67034 + C67035) * C801 + (C67036 + C67037) * C92078) * C92310 +
            ((C63750 + C63751) * C801 + (C63752 + C63753) * C92078) * C92067) *
               C92186) *
              C1383 -
          ((((C61412 * C5784 + C92212 * C6296 + C61411 * C3440 +
              C60959 * C3880) *
                 C92078 +
             (C61412 * C5774 + C92212 * C6290 + C61411 * C3432 +
              C60959 * C3876) *
                 C801) *
                C92067 +
            ((C70510 + C70511) * C92078 + (C70512 + C70513) * C801) * C92310) *
               C92186 +
           (((C64719 + C64718) * C92078 + (C64717 + C64716) * C801) * C92067 +
            ((C61412 * C1406 + C92212 * C1797 + C61411 * C1397 +
              C60959 * C1796) *
                 C92078 +
             (C61412 * C1390 + C92212 * C1789 + C61411 * C1389 +
              C60959 * C1788) *
                 C801) *
                C92310) *
               C92322) *
              C1384 +
          ((((C61411 * C1390 + C60959 * C1789 + C61412 * C10961 +
              C92212 * C11609) *
                 C801 +
             (C61411 * C1406 + C60959 * C1797 + C61412 * C10965 +
              C92212 * C11613) *
                 C92078) *
                C92310 +
            ((C61411 * C1391 + C60959 * C1790 + C61412 * C10960 +
              C92212 * C11608) *
                 C801 +
             (C61411 * C1407 + C60959 * C1798 + C61412 * C10964 +
              C92212 * C11612) *
                 C92078) *
                C92067) *
               C92322 +
           (((C61411 * C5773 + C60959 * C6289 + C61412 * C13849 +
              C92212 * C14525) *
                 C801 +
             (C61411 * C5783 + C60959 * C6295 + C61412 * C13853 +
              C92212 * C14527) *
                 C92078) *
                C92310 +
            ((C61411 * C5774 + C60959 * C6290 + C61412 * C13850 +
              C92212 * C14526) *
                 C801 +
             (C61411 * C5784 + C60959 * C6296 + C61412 * C13854 +
              C92212 * C14528) *
                 C92078) *
                C92067) *
               C92186) *
              C1385) *
         C92099) /
            (p * q * std::sqrt(p + q));
    d2eezy[52] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C61411 * C107 + C60959 * C555 + C61412 * C1389 + C92212 * C1788) *
                C884 +
            (C61411 * C182 + C60959 * C641 + C61412 * C1471 + C92212 * C1854) *
                C798 -
            (C67035 + C67034) * C885 - (C67138 + C67139) * C799 +
            C67046 * C886 + C67144 * C800) *
               C92310 +
           ((C61439 + C61438) * C884 + (C61539 + C61540) * C798 -
            (C63751 + C63750) * C885 - (C63864 + C63865) * C799 +
            (C68675 + C68674) * C886 + (C68780 + C68781) * C800) *
               C92067) *
              C92322 +
          (((C67034 + C67035) * C884 + (C67139 + C67138) * C798 -
            (C67039 + C67038) * C885 - (C67141 + C67140) * C799 +
            (C67045 + C67044) * C886 + (C67142 + C67143) * C800) *
               C92310 +
           ((C63750 + C63751) * C884 + (C63865 + C63864) * C798 -
            (C68674 + C68675) * C885 - (C68781 + C68780) * C799 +
            (C61411 * C4881 + C60959 * C5455 + C61412 * C8537 +
             C92212 * C9197) *
                C886 +
            (C61411 * C5013 + C60959 * C5579 + C61412 * C8667 +
             C92212 * C9319) *
                C800) *
               C92067) *
              C92186) *
         C92078 * C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C61411 * C107 + C60959 * C555 + C61412 * C1389 + C92212 * C1788) *
                 C181 +
             (C61411 * C182 + C60959 * C641 + C61412 * C1471 + C92212 * C1854) *
                 C92099) *
                C92310 +
            ((C61439 + C61438) * C181 + (C61539 + C61540) * C92099) * C92067) *
               C92322 +
           (((C67034 + C67035) * C181 + (C67139 + C67138) * C92099) * C92310 +
            ((C63750 + C63751) * C181 + (C63865 + C63864) * C92099) * C92067) *
               C92186) *
              C93 -
          ((((C63866 + C63867) * C92099 + (C63755 + C63754) * C181) * C92067 +
            ((C63864 + C63865) * C92099 + (C63751 + C63750) * C181) * C92310) *
               C92186 +
           (((C61542 + C61541) * C92099 + (C61443 + C61442) * C181) * C92067 +
            ((C61540 + C61539) * C92099 + (C61438 + C61439) * C181) * C92310) *
               C92322) *
              C94 +
          ((C61547 * C92310 +
            ((C61446 + C61447) * C181 + (C61544 + C61543) * C92099) * C92067) *
               C92322 +
           (((C63754 + C63755) * C181 + (C63867 + C63866) * C92099) * C92310 +
            ((C61411 * C802 + C60959 * C1201 + C61412 * C3434 +
              C92212 * C3878) *
                 C181 +
             (C61411 * C887 + C60959 * C1273 + C61412 * C3516 +
              C92212 * C3952) *
                 C92099) *
                C92067) *
               C92186) *
              C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C61411 * C107 + C60959 * C555 + C61412 * C1389 + C92212 * C1788) *
                 C181 +
             (C61411 * C182 + C60959 * C641 + C61412 * C1471 + C92212 * C1854) *
                 C92099) *
                C92310 +
            ((C61439 + C61438) * C181 + (C61539 + C61540) * C92099) * C92067) *
               C92322 +
           (((C67034 + C67035) * C181 + (C67139 + C67138) * C92099) * C92310 +
            ((C63750 + C63751) * C181 + (C63865 + C63864) * C92099) * C92067) *
               C92186) *
              C92078 * C1383 -
          ((((C61412 * C5872 + C92212 * C6376 + C61411 * C3514 +
              C60959 * C3950) *
                 C92099 +
             (C61412 * C5774 + C92212 * C6290 + C61411 * C3432 +
              C60959 * C3876) *
                 C181) *
                C92067 +
            ((C70621 + C70620) * C92099 + (C70512 + C70513) * C181) * C92310) *
               C92186 +
           (((C64831 + C64830) * C92099 + (C64717 + C64716) * C181) * C92067 +
            ((C61412 * C1472 + C92212 * C1855 + C61411 * C1471 +
              C60959 * C1854) *
                 C92099 +
             (C61412 * C1390 + C92212 * C1789 + C61411 * C1389 +
              C60959 * C1788) *
                 C181) *
                C92310) *
               C92322) *
              C92078 * C1384 +
          ((((C61411 * C1390 + C60959 * C1789 + C61412 * C10961 +
              C92212 * C11609) *
                 C181 +
             (C61411 * C1472 + C60959 * C1855 + C61412 * C11093 +
              C92212 * C11691) *
                 C92099) *
                C92310 +
            ((C61411 * C1391 + C60959 * C1790 + C61412 * C10960 +
              C92212 * C11608) *
                 C181 +
             (C61411 * C1473 + C60959 * C1856 + C61412 * C11092 +
              C92212 * C11690) *
                 C92099) *
                C92067) *
               C92322 +
           (((C61411 * C5773 + C60959 * C6289 + C61412 * C13849 +
              C92212 * C14525) *
                 C181 +
             (C61411 * C5871 + C60959 * C6375 + C61412 * C13967 +
              C92212 * C14627) *
                 C92099) *
                C92310 +
            ((C61411 * C5774 + C60959 * C6290 + C61412 * C13850 +
              C92212 * C14526) *
                 C181 +
             (C61411 * C5872 + C60959 * C6376 + C61412 * C13968 +
              C92212 * C14628) *
                 C92099) *
                C92067) *
               C92186) *
              C92078 * C1385)) /
            (p * q * std::sqrt(p + q));
    d2eezz[52] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C61411 * C107 + C60959 * C555 + C61412 * C1389 + C92212 * C1788) *
                 C244 +
             (C61411 * C245 + C60959 * C719 + C61412 * C1540 + C92212 * C1909) *
                 C92110) *
                C92310 +
            ((C61439 + C61438) * C244 + (C61635 + C61636) * C92110) * C92067) *
               C92322 +
           (((C67034 + C67035) * C244 + (C67232 + C67233) * C92110) * C92310 +
            ((C63750 + C63751) * C244 + (C63977 + C63976) * C92110) * C92067) *
               C92186) *
              C798 -
          ((((C68885 + C68884) * C92110 + (C68674 + C68675) * C244) * C92067 +
            ((C67235 + C67234) * C92110 + (C67039 + C67038) * C244) * C92310) *
               C92186 +
           (((C63976 + C63977) * C92110 + (C63751 + C63750) * C244) * C92067 +
            ((C67233 + C67232) * C92110 + (C67035 + C67034) * C244) * C92310) *
               C92322) *
              C799 +
          ((C67240 * C92310 +
            ((C68675 + C68674) * C244 + (C68884 + C68885) * C92110) * C92067) *
               C92322 +
           (((C67045 + C67044) * C244 + (C67237 + C67236) * C92110) * C92310 +
            ((C61411 * C4881 + C60959 * C5455 + C61412 * C8537 +
              C92212 * C9197) *
                 C244 +
             (C61411 * C5113 + C60959 * C5668 + C61412 * C8781 +
              C92212 * C9425) *
                 C92110) *
                C92067) *
               C92186) *
              C800) *
         C92078) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C61411 * C107 + C60959 * C555 + C61412 * C1389 + C92212 * C1788) *
                 C244 +
             (C61411 * C245 + C60959 * C719 + C61412 * C1540 + C92212 * C1909) *
                 C92110) *
                C92310 +
            ((C61439 + C61438) * C244 + (C61635 + C61636) * C92110) * C92067) *
               C92322 +
           (((C67034 + C67035) * C244 + (C67232 + C67233) * C92110) * C92310 +
            ((C63750 + C63751) * C244 + (C63977 + C63976) * C92110) * C92067) *
               C92186) *
              C92099 * C93 -
          ((((C63974 + C63975) * C92110 + (C63755 + C63754) * C244) * C92067 +
            ((C63976 + C63977) * C92110 + (C63751 + C63750) * C244) * C92310) *
               C92186 +
           (((C61638 + C61637) * C92110 + (C61443 + C61442) * C244) * C92067 +
            ((C61636 + C61635) * C92110 + (C61438 + C61439) * C244) * C92310) *
               C92322) *
              C92099 * C94 +
          ((C61643 * C92310 +
            ((C61446 + C61447) * C244 + (C61640 + C61639) * C92110) * C92067) *
               C92322 +
           (((C63754 + C63755) * C244 + (C63975 + C63974) * C92110) * C92310 +
            ((C61411 * C802 + C60959 * C1201 + C61412 * C3434 +
              C92212 * C3878) *
                 C244 +
             (C61411 * C953 + C60959 * C1325 + C61412 * C3590 +
              C92212 * C4022) *
                 C92110) *
                C92067) *
               C92186) *
              C92099 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C61411 * C107 + C60959 * C555 + C61412 * C1389 + C92212 * C1788) *
                C1534 +
            (C61411 * C245 + C60959 * C719 + C61412 * C1540 + C92212 * C1909) *
                C1383 -
            (C61412 * C1390 + C92212 * C1789 + C61411 * C1389 +
             C60959 * C1788) *
                C1535 -
            (C61412 * C1541 + C92212 * C1910 + C61411 * C1540 +
             C60959 * C1909) *
                C1384 +
            (C61411 * C1390 + C60959 * C1789 + C61412 * C10961 +
             C92212 * C11609) *
                C1536 +
            (C61411 * C1541 + C60959 * C1910 + C61412 * C11197 +
             C92212 * C11768) *
                C1385) *
               C92310 +
           ((C61439 + C61438) * C1534 + (C61635 + C61636) * C1383 -
            (C64717 + C64716) * C1535 - (C64940 + C64941) * C1384 +
            (C61411 * C1391 + C60959 * C1790 + C61412 * C10960 +
             C92212 * C11608) *
                C1536 +
            (C61411 * C1542 + C60959 * C1912 + C61412 * C11198 +
             C92212 * C11770) *
                C1385) *
               C92067) *
              C92322 +
          (((C67034 + C67035) * C1534 + (C67232 + C67233) * C1383 -
            (C70512 + C70513) * C1535 - (C70730 + C70731) * C1384 +
            (C61411 * C5773 + C60959 * C6289 + C61412 * C13849 +
             C92212 * C14525) *
                C1536 +
            (C61411 * C5955 + C60959 * C6453 + C61412 * C14075 +
             C92212 * C14727) *
                C1385) *
               C92310 +
           ((C63750 + C63751) * C1534 + (C63977 + C63976) * C1383 -
            (C61412 * C5774 + C92212 * C6290 + C61411 * C3432 +
             C60959 * C3876) *
                C1535 -
            (C61412 * C5956 + C92212 * C6454 + C61411 * C3588 +
             C60959 * C4020) *
                C1384 +
            (C61411 * C5774 + C60959 * C6290 + C61412 * C13850 +
             C92212 * C14526) *
                C1536 +
            (C61411 * C5956 + C60959 * C6454 + C61412 * C14076 +
             C92212 * C14728) *
                C1385) *
               C92067) *
              C92186) *
         C92099 * C92078) /
            (p * q * std::sqrt(p + q));
    d2eexx[53] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C89875 * C107 + C92310 * C113 + C89868 * C108 + C92067 * C114) *
                 C1987 +
             (C89875 * C117 + C92310 * C125 + C89868 * C118 + C92067 * C126) *
                 C1983 -
             (C89868 * C109 + C92067 * C115 + C89875 * C108 + C92310 * C114) *
                 C1988 -
             (C89868 * C119 + C92067 * C127 + C89875 * C118 + C92310 * C126) *
                 C1984) *
                C92322 +
            ((C45573 + C45574) * C1987 + (C45575 + C45576) * C1983 -
             (C47009 + C47010) * C1988 - (C47011 + C47012) * C1984) *
                C92186) *
               C60959 +
           (((C51595 + C51596) * C1987 + (C51597 + C51598) * C1983 -
             (C53783 + C53784) * C1988 - (C53785 + C53786) * C1984) *
                C92322 +
            (C54983 * C1987 + C54984 * C1983 - (C52565 + C52566) * C1988 -
             (C52567 + C52568) * C1984) *
                C92186) *
               C92212) *
              C2709 +
          ((((C53784 + C53783) * C1988 -
             ((C51598 + C51597) * C1983 + (C51596 + C51595) * C1987) +
             (C53786 + C53785) * C1984) *
                C92322 +
            ((C52566 + C52565) * C1988 - (C54985 * C1983 + C54986 * C1987) +
             (C52568 + C52567) * C1984) *
                C92186) *
               C60959 +
           (((C89875 * C1391 + C92310 * C1403 + C89868 * C1392 +
              C92067 * C1404) *
                 C1988 -
             ((C51603 + C51604) * C1983 + (C51605 + C51606) * C1987) +
             (C89875 * C1407 + C92310 * C1415 + C89868 * C1408 +
              C92067 * C1416) *
                 C1984) *
                C92322 +
            ((C89875 * C5774 + C92310 * C5782 + C89868 * C11870 +
              C92067 * C11871) *
                 C1988 -
             ((C51599 + C51600) * C1983 + (C51601 + C51602) * C1987) +
             (C89875 * C5784 + C92310 * C5792 + C89868 * C11872 +
              C92067 * C11873) *
                 C1984) *
                C92186) *
               C92212) *
              C2710) *
         C92099) /
        (p * q * std::sqrt(p + q));
    d2eexy[53] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C89875 * C107 + C92310 * C113 + C89868 * C108 + C92067 * C114) *
                  C181 +
              (C89875 * C182 + C92310 * C188 + C89868 * C183 + C92067 * C189) *
                  C92099) *
                 C92322 +
             ((C45573 + C45574) * C181 + (C45677 + C45676) * C92099) * C92186) *
                C60959 +
            (((C51595 + C51596) * C181 + (C51717 + C51718) * C92099) * C92322 +
             (C54983 * C181 + C55124 * C92099) * C92186) *
                C92212) *
               C1983 -
           ((((C52704 + C52703) * C92099 + (C52565 + C52566) * C181) * C92186 +
             ((C53921 + C53922) * C92099 + (C53783 + C53784) * C181) * C92322) *
                C92212 +
            (((C47124 + C47123) * C92099 + (C47009 + C47010) * C181) * C92186 +
             ((C89868 * C184 + C92067 * C190 + C89875 * C183 + C92310 * C189) *
                  C92099 +
              (C89868 * C109 + C92067 * C115 + C89875 * C108 + C92310 * C114) *
                  C181) *
                 C92322) *
                C60959) *
               C1984) *
              C2709 +
          (((((C53784 + C53783) * C181 + (C53922 + C53921) * C92099) * C92322 +
             ((C52566 + C52565) * C181 + (C52703 + C52704) * C92099) * C92186) *
                C60959 +
            (((C89875 * C1391 + C92310 * C1403 + C89868 * C1392 +
               C92067 * C1404) *
                  C181 +
              (C89875 * C1473 + C92310 * C1481 + C89868 * C1474 +
               C92067 * C1482) *
                  C92099) *
                 C92322 +
             ((C89875 * C5774 + C92310 * C5782 + C89868 * C11870 +
               C92067 * C11871) *
                  C181 +
              (C89875 * C5872 + C92310 * C5878 + C89868 * C11972 +
               C92067 * C11973) *
                  C92099) *
                 C92186) *
                C92212) *
               C1984 -
           ((((C51719 + C51720) * C92099 + (C51601 + C51602) * C181) * C92186 +
             ((C51721 + C51722) * C92099 + (C51605 + C51606) * C181) * C92322) *
                C92212 +
            ((C55123 * C92099 + C54986 * C181) * C92186 +
             ((C51718 + C51717) * C92099 + (C51596 + C51595) * C181) * C92322) *
                C60959) *
               C1983) *
              C2710)) /
        (p * q * std::sqrt(p + q));
    d2eexz[53] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C89875 * C107 + C92310 * C113 + C89868 * C108 + C92067 * C114) *
                 C2849 +
             (C89875 * C245 + C92310 * C251 + C89868 * C246 + C92067 * C252) *
                 C2709 -
             (C51596 + C51595) * C2850 - (C51833 + C51834) * C2710) *
                C92322 +
            ((C45573 + C45574) * C2849 + (C45770 + C45771) * C2709 -
             C54986 * C2850 - C55255 * C2710) *
                C92186) *
               C60959 +
           (((C51595 + C51596) * C2849 + (C51834 + C51833) * C2709 -
             (C51605 + C51606) * C2850 - (C51836 + C51835) * C2710) *
                C92322 +
            (C54983 * C2849 + C55256 * C2709 - (C51601 + C51602) * C2850 -
             (C51838 + C51837) * C2710) *
                C92186) *
               C92212) *
              C92099 * C1983 +
          ((((C53784 + C53783) * C2850 -
             ((C89868 * C247 + C92067 * C253 + C89875 * C246 + C92310 * C252) *
                  C2709 +
              (C89868 * C109 + C92067 * C115 + C89875 * C108 + C92310 * C114) *
                  C2849) +
             (C54057 + C54058) * C2710) *
                C92322 +
            ((C52566 + C52565) * C2850 -
             ((C47234 + C47233) * C2709 + (C47009 + C47010) * C2849) +
             (C52839 + C52840) * C2710) *
                C92186) *
               C60959 +
           (((C89875 * C1391 + C92310 * C1403 + C89868 * C1392 +
              C92067 * C1404) *
                 C2850 -
             ((C54058 + C54057) * C2709 + (C53783 + C53784) * C2849) +
             (C89875 * C1542 + C92310 * C1550 + C89868 * C1543 +
              C92067 * C1551) *
                 C2710) *
                C92322 +
            ((C89875 * C5774 + C92310 * C5782 + C89868 * C11870 +
              C92067 * C11871) *
                 C2850 -
             ((C52840 + C52839) * C2709 + (C52565 + C52566) * C2849) +
             (C89875 * C5956 + C92310 * C5962 + C89868 * C12072 +
              C92067 * C12073) *
                 C2710) *
                C92186) *
               C92212) *
              C92099 * C1984)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[53] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C15033 * C107 + C92322 * C308 + C15034 * C805 + C92186 * C1022) *
                 C1987 +
             (C15033 * C117 + C92322 * C314 + C15034 * C813 + C92186 * C1030) *
                 C1983 -
             (C15060 + C15061) * C1988 - (C15062 + C15063) * C1984) *
                C60959 +
            ((C26974 + C26975) * C1987 + (C26976 + C26977) * C1983 -
             C29264 * C1988 - C29265 * C1984) *
                C92212) *
               C92310 +
           (((C15061 + C15060) * C1987 + (C15063 + C15062) * C1983 -
             (C15065 + C15064) * C1988 - (C15067 + C15066) * C1984) *
                C60959 +
            (C29266 * C1987 + C29267 * C1983 - (C18290 + C18289) * C1988 -
             (C18292 + C18291) * C1984) *
                C92212) *
               C92067) *
              C2709 +
          (((C29266 * C1988 -
             ((C26977 + C26976) * C1983 + (C26975 + C26974) * C1987) +
             C29267 * C1984) *
                C60959 +
            ((C26981 + C26980) * C1988 -
             ((C26982 + C26983) * C1983 + (C26984 + C26985) * C1987) +
             (C26979 + C26978) * C1984) *
                C92212) *
               C92310 +
           (((C18289 + C18290) * C1988 - (C29265 * C1983 + C29264 * C1987) +
             (C18291 + C18292) * C1984) *
                C60959 +
            ((C15033 * C1392 + C92322 * C1609 + C15034 * C11870 +
              C92186 * C12172) *
                 C1988 -
             ((C26978 + C26979) * C1983 + (C26980 + C26981) * C1987) +
             (C15033 * C1408 + C92322 * C1617 + C15034 * C11872 +
              C92186 * C12173) *
                 C1984) *
                C92212) *
               C92067) *
              C2710) *
         C92099) /
        (p * q * std::sqrt(p + q));
    d2eeyy[53] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C15033 * C107 + C92322 * C308 + C15034 * C805 + C92186 * C1022) *
                  C181 +
              (C15033 * C182 + C92322 * C394 + C15034 * C890 + C92186 * C1085) *
                  C92099) *
                 C60959 +
             ((C26974 + C26975) * C181 + (C27096 + C27097) * C92099) * C92212) *
                C92310 +
            (((C15061 + C15060) * C181 + (C15161 + C15162) * C92099) * C60959 +
             C29404 * C92212) *
                C92067) *
               C1983 -
           ((((C18402 + C18401) * C92099 + (C18290 + C18289) * C181) * C92212 +
             ((C15164 + C15163) * C92099 + (C15065 + C15064) * C181) * C60959) *
                C92067 +
            (C29405 * C92212 +
             ((C15162 + C15161) * C92099 + (C15060 + C15061) * C181) * C60959) *
                C92310) *
               C1984) *
              C2709 +
          (((C29404 * C60959 +
             ((C26981 + C26980) * C181 + (C27099 + C27098) * C92099) * C92212) *
                C92310 +
            (((C18289 + C18290) * C181 + (C18401 + C18402) * C92099) * C60959 +
             ((C15033 * C1392 + C92322 * C1609 + C15034 * C11870 +
               C92186 * C12172) *
                  C181 +
              (C15033 * C1474 + C92322 * C1675 + C15034 * C11972 +
               C92186 * C12284) *
                  C92099) *
                 C92212) *
                C92067) *
               C1984 -
           ((((C27098 + C27099) * C92099 + (C26980 + C26981) * C181) * C92212 +
             C29405 * C60959) *
                C92067 +
            (((C27100 + C27101) * C92099 + (C26984 + C26985) * C181) * C92212 +
             ((C27097 + C27096) * C92099 + (C26975 + C26974) * C181) * C60959) *
                C92310) *
               C1983) *
              C2710)) /
        (p * q * std::sqrt(p + q));
    d2eeyz[53] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C15033 * C107 + C92322 * C308 + C15034 * C805 + C92186 * C1022) *
                 C2849 +
             (C15033 * C245 + C92322 * C474 + C15034 * C956 + C92186 * C1146) *
                 C2709 -
             (C26975 + C26974) * C2850 - (C27212 + C27213) * C2710) *
                C60959 +
            ((C26974 + C26975) * C2849 + (C27213 + C27212) * C2709 -
             (C26984 + C26985) * C2850 - (C27215 + C27214) * C2710) *
                C92212) *
               C92310 +
           (((C15061 + C15060) * C2849 + (C15258 + C15259) * C2709 -
             C29264 * C2850 - C29536 * C2710) *
                C60959 +
            (C29266 * C2849 + C29537 * C2709 - (C26980 + C26981) * C2850 -
             (C27217 + C27216) * C2710) *
                C92212) *
               C92067) *
              C92099 * C1983 +
          (((C29266 * C2850 -
             ((C15259 + C15258) * C2709 + (C15060 + C15061) * C2849) +
             C29537 * C2710) *
                C60959 +
            ((C26981 + C26980) * C2850 - (C29536 * C2709 + C29264 * C2849) +
             (C27216 + C27217) * C2710) *
                C92212) *
               C92310 +
           (((C18289 + C18290) * C2850 -
             ((C15261 + C15260) * C2709 + (C15065 + C15064) * C2849) +
             (C18512 + C18511) * C2710) *
                C60959 +
            ((C15033 * C1392 + C92322 * C1609 + C15034 * C11870 +
              C92186 * C12172) *
                 C2850 -
             ((C18511 + C18512) * C2709 + (C18290 + C18289) * C2849) +
             (C15033 * C1543 + C92322 * C1732 + C15034 * C12072 +
              C92186 * C12397) *
                 C2710) *
                C92212) *
               C92067) *
              C92099 * C1984)) /
        (p * q * std::sqrt(p + q));
    d2eezx[53] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C61411 * C107 + C60959 * C555 + C61412 * C1389 + C92212 * C1788) *
                 C1987 +
             (C61411 * C117 + C60959 * C561 + C61412 * C1397 + C92212 * C1796) *
                 C1983 -
             (C61438 + C61439) * C1988 - (C61440 + C61441) * C1984) *
                C92310 +
            ((C61439 + C61438) * C1987 + (C61441 + C61440) * C1983 -
             (C61443 + C61442) * C1988 - (C61445 + C61444) * C1984) *
                C92067) *
               C92322 +
           (((C67034 + C67035) * C1987 + (C67036 + C67037) * C1983 -
             C77530 * C1988 - C77531 * C1984) *
                C92310 +
            (C77532 * C1987 + C77533 * C1983 - (C63755 + C63754) * C1988 -
             (C63757 + C63756) * C1984) *
                C92067) *
               C92186) *
              C2709 +
          ((((C64716 + C64717) * C1988 -
             ((C61412 * C1406 + C92212 * C1797 + C61411 * C1397 +
               C60959 * C1796) *
                  C1983 +
              (C61412 * C1390 + C92212 * C1789 + C61411 * C1389 +
               C60959 * C1788) *
                  C1987) +
             (C64718 + C64719) * C1984) *
                C92310 +
            ((C64720 + C64721) * C1988 -
             ((C64719 + C64718) * C1983 + (C64717 + C64716) * C1987) +
             (C64722 + C64723) * C1984) *
                C92067) *
               C92322 +
           (((C78722 + C78723) * C1988 -
             ((C70510 + C70511) * C1983 + (C70512 + C70513) * C1987) +
             (C78724 + C78725) * C1984) *
                C92310 +
            ((C61411 * C3433 + C60959 * C3877 + C61412 * C11870 +
              C92212 * C12506) *
                 C1988 -
             ((C78725 + C78724) * C1983 + (C78723 + C78722) * C1987) +
             (C61411 * C3441 + C60959 * C3881 + C61412 * C11872 +
              C92212 * C12507) *
                 C1984) *
                C92067) *
               C92186) *
              C2710) *
         C92099) /
        (p * q * std::sqrt(p + q));
    d2eezy[53] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C61411 * C107 + C60959 * C555 + C61412 * C1389 +
               C92212 * C1788) *
                  C181 +
              (C61411 * C182 + C60959 * C641 + C61412 * C1471 +
               C92212 * C1854) *
                  C92099) *
                 C92310 +
             ((C61439 + C61438) * C181 + (C61539 + C61540) * C92099) * C92067) *
                C92322 +
            (((C67034 + C67035) * C181 + (C67139 + C67138) * C92099) * C92310 +
             (C77532 * C181 + C77665 * C92099) * C92067) *
                C92186) *
               C1983 -
           ((((C63866 + C63867) * C92099 + (C63755 + C63754) * C181) * C92067 +
             (C77664 * C92099 + C77530 * C181) * C92310) *
                C92186 +
            (((C61542 + C61541) * C92099 + (C61443 + C61442) * C181) * C92067 +
             ((C61540 + C61539) * C92099 + (C61438 + C61439) * C181) * C92310) *
                C92322) *
               C1984) *
              C2709 +
          (((((C64716 + C64717) * C181 + (C64830 + C64831) * C92099) * C92310 +
             ((C64720 + C64721) * C181 + (C64832 + C64833) * C92099) * C92067) *
                C92322 +
            (((C78722 + C78723) * C181 + (C78860 + C78861) * C92099) * C92310 +
             ((C61411 * C3433 + C60959 * C3877 + C61412 * C11870 +
               C92212 * C12506) *
                  C181 +
              (C61411 * C3515 + C60959 * C3951 + C61412 * C11972 +
               C92212 * C12624) *
                  C92099) *
                 C92067) *
                C92186) *
               C1984 -
           ((((C78861 + C78860) * C92099 + (C78723 + C78722) * C181) * C92067 +
             ((C70621 + C70620) * C92099 + (C70512 + C70513) * C181) * C92310) *
                C92186 +
            (((C64831 + C64830) * C92099 + (C64717 + C64716) * C181) * C92067 +
             ((C61412 * C1472 + C92212 * C1855 + C61411 * C1471 +
               C60959 * C1854) *
                  C92099 +
              (C61412 * C1390 + C92212 * C1789 + C61411 * C1389 +
               C60959 * C1788) *
                  C181) *
                 C92310) *
                C92322) *
               C1983) *
              C2710)) /
        (p * q * std::sqrt(p + q));
    d2eezz[53] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C61411 * C107 + C60959 * C555 + C61412 * C1389 + C92212 * C1788) *
                 C2849 +
             (C61411 * C245 + C60959 * C719 + C61412 * C1540 + C92212 * C1909) *
                 C2709 -
             (C61412 * C1390 + C92212 * C1789 + C61411 * C1389 +
              C60959 * C1788) *
                 C2850 -
             (C61412 * C1541 + C92212 * C1910 + C61411 * C1540 +
              C60959 * C1909) *
                 C2710) *
                C92310 +
            ((C61439 + C61438) * C2849 + (C61635 + C61636) * C2709 -
             (C64717 + C64716) * C2850 - (C64940 + C64941) * C2710) *
                C92067) *
               C92322 +
           (((C67034 + C67035) * C2849 + (C67232 + C67233) * C2709 -
             (C70512 + C70513) * C2850 - (C70730 + C70731) * C2710) *
                C92310 +
            (C77532 * C2849 + C77797 * C2709 - (C78723 + C78722) * C2850 -
             (C78996 + C78997) * C2710) *
                C92067) *
               C92186) *
              C92099 * C1983 +
          ((((C64716 + C64717) * C2850 -
             ((C61636 + C61635) * C2709 + (C61438 + C61439) * C2849) +
             (C64941 + C64940) * C2710) *
                C92310 +
            ((C64720 + C64721) * C2850 -
             ((C61638 + C61637) * C2709 + (C61443 + C61442) * C2849) +
             (C64943 + C64942) * C2710) *
                C92067) *
               C92322 +
           (((C78722 + C78723) * C2850 - (C77798 * C2709 + C77530 * C2849) +
             (C78997 + C78996) * C2710) *
                C92310 +
            ((C61411 * C3433 + C60959 * C3877 + C61412 * C11870 +
              C92212 * C12506) *
                 C2850 -
             ((C63974 + C63975) * C2709 + (C63755 + C63754) * C2849) +
             (C61411 * C3589 + C60959 * C4021 + C61412 * C12072 +
              C92212 * C12732) *
                 C2710) *
                C92067) *
               C92186) *
              C92099 * C1984)) /
        (p * q * std::sqrt(p + q));
    d2eexx[54] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C89875 * C107 + C92310 * C113 + C89868 * C108 + C92067 * C114) *
                C104 +
            (C89875 * C117 + C92310 * C125 + C89868 * C118 + C92067 * C126) *
                C93 -
            (C89868 * C109 + C92067 * C115 + C89875 * C108 + C92310 * C114) *
                C105 -
            (C89868 * C119 + C92067 * C127 + C89875 * C118 + C92310 * C126) *
                C94 +
            (C89875 * C109 + C92310 * C115 + C89868 * C110 + C92067 * C116) *
                C106 +
            (C89875 * C119 + C92310 * C127 + C89868 * C120 + C92067 * C128) *
                C95) *
               C92322 +
           ((C45573 + C45574) * C104 + (C45575 + C45576) * C93 -
            (C47009 + C47010) * C105 - (C47011 + C47012) * C94 +
            (C89875 * C803 + C92310 * C815 + C89868 * C802 + C92067 * C814) *
                C106 +
            (C89875 * C811 + C92310 * C827 + C89868 * C810 + C92067 * C826) *
                C95) *
               C92186) *
              C60959 +
          (((C51595 + C51596) * C104 + (C51597 + C51598) * C93 -
            (C53783 + C53784) * C105 - (C53785 + C53786) * C94 +
            (C89875 * C1387 + C92310 * C1399 + C89868 * C1386 +
             C92067 * C1398) *
                C106 +
            (C89875 * C1395 + C92310 * C1411 + C89868 * C1394 +
             C92067 * C1410) *
                C95) *
               C92322 +
           (C54983 * C104 + C54984 * C93 - (C52565 + C52566) * C105 -
            (C52567 + C52568) * C94 +
            (C89875 * C3433 + C92310 * C3437 + C89868 * C3434 +
             C92067 * C3438) *
                C106 +
            (C89875 * C3441 + C92310 * C3445 + C89868 * C3442 +
             C92067 * C3446) *
                C95) *
               C92186) *
              C92212) *
         C92110 * C92099) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C89875 * C107 + C92310 * C113 + C89868 * C108 + C92067 * C114) *
                 C801 +
             (C89875 * C117 + C92310 * C125 + C89868 * C118 + C92067 * C126) *
                 C92078) *
                C92322 +
            ((C45573 + C45574) * C801 + (C45575 + C45576) * C92078) * C92186) *
               C60959 +
           (((C51595 + C51596) * C801 + (C51597 + C51598) * C92078) * C92322 +
            C54991 * C92186) *
               C92212) *
              C92110 * C798 -
          ((((C48893 + C48894) * C92078 + (C48895 + C48896) * C801) * C92186 +
            C54992 * C92322) *
               C92212 +
           (((C45580 + C45579) * C92078 + (C45578 + C45577) * C801) * C92186 +
            ((C45576 + C45575) * C92078 + (C45574 + C45573) * C801) * C92322) *
               C60959) *
              C92110 * C799 +
          ((C45589 * C92322 +
            ((C45584 + C45583) * C801 + (C45582 + C45581) * C92078) * C92186) *
               C60959 +
           (((C48896 + C48895) * C801 + (C48894 + C48893) * C92078) * C92322 +
            ((C89875 * C8536 + C92310 * C8538 + C89868 * C8537 +
              C92067 * C8539) *
                 C801 +
             (C89875 * C8540 + C92310 * C8542 + C89868 * C8541 +
              C92067 * C8543) *
                 C92078) *
                C92186) *
               C92212) *
              C92110 * C800)) /
            (p * q * std::sqrt(p + q));
    d2eexy[54] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C89875 * C107 + C92310 * C113 + C89868 * C108 + C92067 * C114) *
                 C181 +
             (C89875 * C182 + C92310 * C188 + C89868 * C183 + C92067 * C189) *
                 C92099) *
                C92322 +
            ((C45573 + C45574) * C181 + (C45677 + C45676) * C92099) * C92186) *
               C60959 +
           (((C51595 + C51596) * C181 + (C51717 + C51718) * C92099) * C92322 +
            (C54983 * C181 + C55124 * C92099) * C92186) *
               C92212) *
              C93 -
          ((((C52704 + C52703) * C92099 + (C52565 + C52566) * C181) * C92186 +
            ((C53921 + C53922) * C92099 + (C53783 + C53784) * C181) * C92322) *
               C92212 +
           (((C47124 + C47123) * C92099 + (C47009 + C47010) * C181) * C92186 +
            ((C89868 * C184 + C92067 * C190 + C89875 * C183 + C92310 * C189) *
                 C92099 +
             (C89868 * C109 + C92067 * C115 + C89875 * C108 + C92310 * C114) *
                 C181) *
                C92322) *
               C60959) *
              C94 +
          ((((C89875 * C109 + C92310 * C115 + C89868 * C110 + C92067 * C116) *
                 C181 +
             (C89875 * C184 + C92310 * C190 + C89868 * C185 + C92067 * C191) *
                 C92099) *
                C92322 +
            ((C89875 * C803 + C92310 * C815 + C89868 * C802 + C92067 * C814) *
                 C181 +
             (C89875 * C888 + C92310 * C896 + C89868 * C887 + C92067 * C895) *
                 C92099) *
                C92186) *
               C60959 +
           (((C89875 * C1387 + C92310 * C1399 + C89868 * C1386 +
              C92067 * C1398) *
                 C181 +
             (C89875 * C1469 + C92310 * C1477 + C89868 * C1468 +
              C92067 * C1476) *
                 C92099) *
                C92322 +
            ((C89875 * C3433 + C92310 * C3437 + C89868 * C3434 +
              C92067 * C3438) *
                 C181 +
             (C89875 * C3515 + C92310 * C3519 + C89868 * C3516 +
              C92067 * C3520) *
                 C92099) *
                C92186) *
               C92212) *
              C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C89875 * C107 + C92310 * C113 + C89868 * C108 + C92067 * C114) *
                C884 +
            (C89875 * C182 + C92310 * C188 + C89868 * C183 + C92067 * C189) *
                C798 -
            (C45574 + C45573) * C885 - (C45676 + C45677) * C799 +
            C45585 * C886 + C45682 * C800) *
               C92322 +
           ((C45573 + C45574) * C884 + (C45677 + C45676) * C798 -
            (C45578 + C45577) * C885 - (C45679 + C45678) * C799 +
            (C45584 + C45583) * C886 + (C45680 + C45681) * C800) *
               C92186) *
              C60959 +
          (((C51595 + C51596) * C884 + (C51717 + C51718) * C798 -
            C54986 * C885 - C55123 * C799 + (C48896 + C48895) * C886 +
            (C49009 + C49010) * C800) *
               C92322 +
           (C54983 * C884 + C55124 * C798 - (C48895 + C48896) * C885 -
            (C49010 + C49009) * C799 +
            (C89875 * C8536 + C92310 * C8538 + C89868 * C8537 +
             C92067 * C8539) *
                C886 +
            (C89875 * C8666 + C92310 * C8668 + C89868 * C8667 +
             C92067 * C8669) *
                C800) *
               C92186) *
              C92212) *
         C92078 * C92110) /
            (p * q * std::sqrt(p + q));
    d2eexz[54] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C89875 * C107 + C92310 * C113 + C89868 * C108 + C92067 * C114) *
                 C244 +
             (C89875 * C245 + C92310 * C251 + C89868 * C246 + C92067 * C252) *
                 C92110) *
                C92322 +
            ((C45573 + C45574) * C244 + (C45770 + C45771) * C92110) * C92186) *
               C60959 +
           (((C51595 + C51596) * C244 + (C51834 + C51833) * C92110) * C92322 +
            (C54983 * C244 + C55256 * C92110) * C92186) *
               C92212) *
              C92099 * C93 -
          ((((C52840 + C52839) * C92110 + (C52565 + C52566) * C244) * C92186 +
            ((C54058 + C54057) * C92110 + (C53783 + C53784) * C244) * C92322) *
               C92212 +
           (((C47234 + C47233) * C92110 + (C47009 + C47010) * C244) * C92186 +
            ((C89868 * C247 + C92067 * C253 + C89875 * C246 + C92310 * C252) *
                 C92110 +
             (C89868 * C109 + C92067 * C115 + C89875 * C108 + C92310 * C114) *
                 C244) *
                C92322) *
               C60959) *
              C92099 * C94 +
          ((((C89875 * C109 + C92310 * C115 + C89868 * C110 + C92067 * C116) *
                 C244 +
             (C89875 * C247 + C92310 * C253 + C89868 * C248 + C92067 * C254) *
                 C92110) *
                C92322 +
            ((C89875 * C803 + C92310 * C815 + C89868 * C802 + C92067 * C814) *
                 C244 +
             (C89875 * C954 + C92310 * C962 + C89868 * C953 + C92067 * C961) *
                 C92110) *
                C92186) *
               C60959 +
           (((C89875 * C1387 + C92310 * C1399 + C89868 * C1386 +
              C92067 * C1398) *
                 C244 +
             (C89875 * C1538 + C92310 * C1546 + C89868 * C1537 +
              C92067 * C1545) *
                 C92110) *
                C92322 +
            ((C89875 * C3433 + C92310 * C3437 + C89868 * C3434 +
              C92067 * C3438) *
                 C244 +
             (C89875 * C3589 + C92310 * C3593 + C89868 * C3590 +
              C92067 * C3594) *
                 C92110) *
                C92186) *
               C92212) *
              C92099 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C89875 * C107 + C92310 * C113 + C89868 * C108 + C92067 * C114) *
                 C244 +
             (C89875 * C245 + C92310 * C251 + C89868 * C246 + C92067 * C252) *
                 C92110) *
                C92322 +
            ((C45573 + C45574) * C244 + (C45770 + C45771) * C92110) * C92186) *
               C60959 +
           (((C51595 + C51596) * C244 + (C51834 + C51833) * C92110) * C92322 +
            (C54983 * C244 + C55256 * C92110) * C92186) *
               C92212) *
              C798 -
          ((((C49119 + C49120) * C92110 + (C48895 + C48896) * C244) * C92186 +
            (C55255 * C92110 + C54986 * C244) * C92322) *
               C92212 +
           (((C45773 + C45772) * C92110 + (C45578 + C45577) * C244) * C92186 +
            ((C45771 + C45770) * C92110 + (C45574 + C45573) * C244) * C92322) *
               C60959) *
              C799 +
          ((C45778 * C92322 +
            ((C45584 + C45583) * C244 + (C45775 + C45774) * C92110) * C92186) *
               C60959 +
           (((C48896 + C48895) * C244 + (C49120 + C49119) * C92110) * C92322 +
            ((C89875 * C8536 + C92310 * C8538 + C89868 * C8537 +
              C92067 * C8539) *
                 C244 +
             (C89875 * C8780 + C92310 * C8782 + C89868 * C8781 +
              C92067 * C8783) *
                 C92110) *
                C92186) *
               C92212) *
              C800) *
         C92078) /
            (p * q * std::sqrt(p + q));
    d2eeyx[54] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C15033 * C107 + C92322 * C308 + C15034 * C805 + C92186 * C1022) *
                C104 +
            (C15033 * C117 + C92322 * C314 + C15034 * C813 + C92186 * C1030) *
                C93 -
            (C15060 + C15061) * C105 - (C15062 + C15063) * C94 + C15072 * C106 +
            C15073 * C95) *
               C60959 +
           ((C26974 + C26975) * C104 + (C26976 + C26977) * C93 - C29264 * C105 -
            C29265 * C94 + (C18289 + C18290) * C106 + (C18291 + C18292) * C95) *
               C92212) *
              C92310 +
          (((C15061 + C15060) * C104 + (C15063 + C15062) * C93 -
            (C15065 + C15064) * C105 - (C15067 + C15066) * C94 +
            (C15068 + C15069) * C106 + (C15070 + C15071) * C95) *
               C60959 +
           (C29266 * C104 + C29267 * C93 - (C18290 + C18289) * C105 -
            (C18292 + C18291) * C94 +
            (C15033 * C1386 + C92322 * C1603 + C15034 * C3434 +
             C92186 * C3664) *
                C106 +
            (C15033 * C1394 + C92322 * C1611 + C15034 * C3442 +
             C92186 * C3668) *
                C95) *
               C92212) *
              C92067) *
         C92110 * C92099) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C15033 * C107 + C92322 * C308 + C15034 * C805 + C92186 * C1022) *
                 C801 +
             (C15033 * C117 + C92322 * C314 + C15034 * C813 + C92186 * C1030) *
                 C92078) *
                C60959 +
            ((C26974 + C26975) * C801 + (C26976 + C26977) * C92078) * C92212) *
               C92310 +
           (((C15061 + C15060) * C801 + (C15063 + C15062) * C92078) * C60959 +
            (C29266 * C801 + C29267 * C92078) * C92212) *
               C92067) *
              C92110 * C798 -
          ((((C28067 + C28066) * C92078 + (C28065 + C28064) * C801) * C92212 +
            ((C17349 + C17348) * C92078 + (C17347 + C17346) * C801) * C60959) *
               C92067 +
           (((C30497 + C30496) * C92078 + (C30495 + C30494) * C801) * C92212 +
            ((C15034 * C822 + C92186 * C1031 + C15033 * C813 + C92322 * C1030) *
                 C92078 +
             (C15034 * C806 + C92186 * C1023 + C15033 * C805 + C92322 * C1022) *
                 C801) *
                C60959) *
               C92310) *
              C92110 * C799 +
          ((((C15033 * C806 + C92322 * C1023 + C15034 * C4882 +
              C92186 * C5218) *
                 C801 +
             (C15033 * C822 + C92322 * C1031 + C15034 * C4886 +
              C92186 * C5222) *
                 C92078) *
                C60959 +
            ((C15033 * C5772 + C92322 * C6042 + C15034 * C8536 +
              C92186 * C8894) *
                 C801 +
             (C15033 * C5778 + C92322 * C6048 + C15034 * C8540 +
              C92186 * C8896) *
                 C92078) *
                C92212) *
               C92310 +
           (((C15033 * C807 + C92322 * C1024 + C15034 * C4881 +
              C92186 * C5217) *
                 C801 +
             (C15033 * C823 + C92322 * C1032 + C15034 * C4885 +
              C92186 * C5221) *
                 C92078) *
                C60959 +
            ((C15033 * C5771 + C92322 * C6041 + C15034 * C8537 +
              C92186 * C8895) *
                 C801 +
             (C15033 * C5777 + C92322 * C6047 + C15034 * C8541 +
              C92186 * C8897) *
                 C92078) *
                C92212) *
               C92067) *
              C92110 * C800)) /
            (p * q * std::sqrt(p + q));
    d2eeyy[54] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C15033 * C107 + C92322 * C308 + C15034 * C805 + C92186 * C1022) *
                 C181 +
             (C15033 * C182 + C92322 * C394 + C15034 * C890 + C92186 * C1085) *
                 C92099) *
                C60959 +
            ((C26974 + C26975) * C181 + (C27096 + C27097) * C92099) * C92212) *
               C92310 +
           (((C15061 + C15060) * C181 + (C15161 + C15162) * C92099) * C60959 +
            C29404 * C92212) *
               C92067) *
              C93 -
          ((((C18402 + C18401) * C92099 + (C18290 + C18289) * C181) * C92212 +
            ((C15164 + C15163) * C92099 + (C15065 + C15064) * C181) * C60959) *
               C92067 +
           (C29405 * C92212 +
            ((C15162 + C15161) * C92099 + (C15060 + C15061) * C181) * C60959) *
               C92310) *
              C94 +
          ((C15169 * C60959 +
            ((C18289 + C18290) * C181 + (C18401 + C18402) * C92099) * C92212) *
               C92310 +
           (((C15068 + C15069) * C181 + (C15166 + C15165) * C92099) * C60959 +
            ((C15033 * C1386 + C92322 * C1603 + C15034 * C3434 +
              C92186 * C3664) *
                 C181 +
             (C15033 * C1468 + C92322 * C1669 + C15034 * C3516 +
              C92186 * C3738) *
                 C92099) *
                C92212) *
               C92067) *
              C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C15033 * C107 + C92322 * C308 + C15034 * C805 + C92186 * C1022) *
                C884 +
            (C15033 * C182 + C92322 * C394 + C15034 * C890 + C92186 * C1085) *
                C798 -
            (C15034 * C806 + C92186 * C1023 + C15033 * C805 + C92322 * C1022) *
                C885 -
            (C15034 * C891 + C92186 * C1086 + C15033 * C890 + C92322 * C1085) *
                C799 +
            (C15033 * C806 + C92322 * C1023 + C15034 * C4882 + C92186 * C5218) *
                C886 +
            (C15033 * C891 + C92322 * C1086 + C15034 * C5012 + C92186 * C5299) *
                C800) *
               C60959 +
           ((C26974 + C26975) * C884 + (C27096 + C27097) * C798 -
            (C30495 + C30494) * C885 - (C30632 + C30633) * C799 +
            (C15033 * C5772 + C92322 * C6042 + C15034 * C8536 +
             C92186 * C8894) *
                C886 +
            (C15033 * C5870 + C92322 * C6128 + C15034 * C8666 +
             C92186 * C8996) *
                C800) *
               C92212) *
              C92310 +
          (((C15061 + C15060) * C884 + (C15161 + C15162) * C798 -
            (C17347 + C17346) * C885 - (C17460 + C17461) * C799 +
            (C15033 * C807 + C92322 * C1024 + C15034 * C4881 + C92186 * C5217) *
                C886 +
            (C15033 * C892 + C92322 * C1088 + C15034 * C5013 + C92186 * C5301) *
                C800) *
               C60959 +
           (C29266 * C884 + C29399 * C798 - (C28065 + C28064) * C885 -
            (C28202 + C28203) * C799 +
            (C15033 * C5771 + C92322 * C6041 + C15034 * C8537 +
             C92186 * C8895) *
                C886 +
            (C15033 * C5869 + C92322 * C6127 + C15034 * C8667 +
             C92186 * C8997) *
                C800) *
               C92212) *
              C92067) *
         C92078 * C92110) /
            (p * q * std::sqrt(p + q));
    d2eeyz[54] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C15033 * C107 + C92322 * C308 + C15034 * C805 + C92186 * C1022) *
                 C244 +
             (C15033 * C245 + C92322 * C474 + C15034 * C956 + C92186 * C1146) *
                 C92110) *
                C60959 +
            ((C26974 + C26975) * C244 + (C27213 + C27212) * C92110) * C92212) *
               C92310 +
           (((C15061 + C15060) * C244 + (C15258 + C15259) * C92110) * C60959 +
            (C29266 * C244 + C29537 * C92110) * C92212) *
               C92067) *
              C92099 * C93 -
          ((((C18511 + C18512) * C92110 + (C18290 + C18289) * C244) * C92212 +
            ((C15261 + C15260) * C92110 + (C15065 + C15064) * C244) * C60959) *
               C92067 +
           ((C29536 * C92110 + C29264 * C244) * C92212 +
            ((C15259 + C15258) * C92110 + (C15060 + C15061) * C244) * C60959) *
               C92310) *
              C92099 * C94 +
          ((C15266 * C60959 +
            ((C18289 + C18290) * C244 + (C18512 + C18511) * C92110) * C92212) *
               C92310 +
           (((C15068 + C15069) * C244 + (C15263 + C15262) * C92110) * C60959 +
            ((C15033 * C1386 + C92322 * C1603 + C15034 * C3434 +
              C92186 * C3664) *
                 C244 +
             (C15033 * C1537 + C92322 * C1733 + C15034 * C3590 +
              C92186 * C3808) *
                 C92110) *
                C92212) *
               C92067) *
              C92099 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C15033 * C107 + C92322 * C308 + C15034 * C805 + C92186 * C1022) *
                 C244 +
             (C15033 * C245 + C92322 * C474 + C15034 * C956 + C92186 * C1146) *
                 C92110) *
                C60959 +
            ((C26974 + C26975) * C244 + (C27213 + C27212) * C92110) * C92212) *
               C92310 +
           (((C15061 + C15060) * C244 + (C15258 + C15259) * C92110) * C60959 +
            (C29266 * C244 + C29537 * C92110) * C92212) *
               C92067) *
              C798 -
          ((((C28338 + C28339) * C92110 + (C28065 + C28064) * C244) * C92212 +
            ((C17572 + C17573) * C92110 + (C17347 + C17346) * C244) * C60959) *
               C92067 +
           (((C30769 + C30768) * C92110 + (C30495 + C30494) * C244) * C92212 +
            ((C15034 * C957 + C92186 * C1147 + C15033 * C956 + C92322 * C1146) *
                 C92110 +
             (C15034 * C806 + C92186 * C1023 + C15033 * C805 + C92322 * C1022) *
                 C244) *
                C60959) *
               C92310) *
              C799 +
          ((((C15033 * C806 + C92322 * C1023 + C15034 * C4882 +
              C92186 * C5218) *
                 C244 +
             (C15033 * C957 + C92322 * C1147 + C15034 * C5114 +
              C92186 * C5378) *
                 C92110) *
                C60959 +
            ((C15033 * C5772 + C92322 * C6042 + C15034 * C8536 +
              C92186 * C8894) *
                 C244 +
             (C15033 * C5958 + C92322 * C6207 + C15034 * C8780 +
              C92186 * C9096) *
                 C92110) *
                C92212) *
               C92310 +
           (((C15033 * C807 + C92322 * C1024 + C15034 * C4881 +
              C92186 * C5217) *
                 C244 +
             (C15033 * C958 + C92322 * C1148 + C15034 * C5113 +
              C92186 * C5377) *
                 C92110) *
                C60959 +
            ((C15033 * C5771 + C92322 * C6041 + C15034 * C8537 +
              C92186 * C8895) *
                 C244 +
             (C15033 * C5957 + C92322 * C6210 + C15034 * C8781 +
              C92186 * C9097) *
                 C92110) *
                C92212) *
               C92067) *
              C800) *
         C92078) /
            (p * q * std::sqrt(p + q));
    d2eezx[54] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C61411 * C107 + C60959 * C555 + C61412 * C1389 + C92212 * C1788) *
                C104 +
            (C61411 * C117 + C60959 * C561 + C61412 * C1397 + C92212 * C1796) *
                C93 -
            (C61438 + C61439) * C105 - (C61440 + C61441) * C94 + C61450 * C106 +
            C61451 * C95) *
               C92310 +
           ((C61439 + C61438) * C104 + (C61441 + C61440) * C93 -
            (C61443 + C61442) * C105 - (C61445 + C61444) * C94 +
            (C61446 + C61447) * C106 + (C61448 + C61449) * C95) *
               C92067) *
              C92322 +
          (((C67034 + C67035) * C104 + (C67036 + C67037) * C93 -
            (C63751 + C63750) * C105 - (C63753 + C63752) * C94 +
            (C63754 + C63755) * C106 + (C63756 + C63757) * C95) *
               C92310 +
           ((C63750 + C63751) * C104 + (C63752 + C63753) * C93 -
            (C63755 + C63754) * C105 - (C63757 + C63756) * C94 +
            (C61411 * C802 + C60959 * C1201 + C61412 * C3434 + C92212 * C3878) *
                C106 +
            (C61411 * C810 + C60959 * C1209 + C61412 * C3442 + C92212 * C3882) *
                C95) *
               C92067) *
              C92186) *
         C92110 * C92099) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C61411 * C107 + C60959 * C555 + C61412 * C1389 + C92212 * C1788) *
                 C801 +
             (C61411 * C117 + C60959 * C561 + C61412 * C1397 + C92212 * C1796) *
                 C92078) *
                C92310 +
            ((C61439 + C61438) * C801 + (C61441 + C61440) * C92078) * C92067) *
               C92322 +
           (((C67034 + C67035) * C801 + (C67036 + C67037) * C92078) * C92310 +
            ((C63750 + C63751) * C801 + (C63752 + C63753) * C92078) * C92067) *
               C92186) *
              C92110 * C798 -
          ((((C68676 + C68677) * C92078 + (C68674 + C68675) * C801) * C92067 +
            ((C67041 + C67040) * C92078 + (C67039 + C67038) * C801) * C92310) *
               C92186 +
           (((C63753 + C63752) * C92078 + (C63751 + C63750) * C801) * C92067 +
            ((C67037 + C67036) * C92078 + (C67035 + C67034) * C801) * C92310) *
               C92322) *
              C92110 * C799 +
          ((C67050 * C92310 +
            ((C68675 + C68674) * C801 + (C68677 + C68676) * C92078) * C92067) *
               C92322 +
           (((C67045 + C67044) * C801 + (C67043 + C67042) * C92078) * C92310 +
            ((C61411 * C4881 + C60959 * C5455 + C61412 * C8537 +
              C92212 * C9197) *
                 C801 +
             (C61411 * C4885 + C60959 * C5459 + C61412 * C8541 +
              C92212 * C9199) *
                 C92078) *
                C92067) *
               C92186) *
              C92110 * C800)) /
            (p * q * std::sqrt(p + q));
    d2eezy[54] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C61411 * C107 + C60959 * C555 + C61412 * C1389 + C92212 * C1788) *
                 C181 +
             (C61411 * C182 + C60959 * C641 + C61412 * C1471 + C92212 * C1854) *
                 C92099) *
                C92310 +
            ((C61439 + C61438) * C181 + (C61539 + C61540) * C92099) * C92067) *
               C92322 +
           (((C67034 + C67035) * C181 + (C67139 + C67138) * C92099) * C92310 +
            ((C63750 + C63751) * C181 + (C63865 + C63864) * C92099) * C92067) *
               C92186) *
              C93 -
          ((((C63866 + C63867) * C92099 + (C63755 + C63754) * C181) * C92067 +
            ((C63864 + C63865) * C92099 + (C63751 + C63750) * C181) * C92310) *
               C92186 +
           (((C61542 + C61541) * C92099 + (C61443 + C61442) * C181) * C92067 +
            ((C61540 + C61539) * C92099 + (C61438 + C61439) * C181) * C92310) *
               C92322) *
              C94 +
          ((C61547 * C92310 +
            ((C61446 + C61447) * C181 + (C61544 + C61543) * C92099) * C92067) *
               C92322 +
           (((C63754 + C63755) * C181 + (C63867 + C63866) * C92099) * C92310 +
            ((C61411 * C802 + C60959 * C1201 + C61412 * C3434 +
              C92212 * C3878) *
                 C181 +
             (C61411 * C887 + C60959 * C1273 + C61412 * C3516 +
              C92212 * C3952) *
                 C92099) *
                C92067) *
               C92186) *
              C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C61411 * C107 + C60959 * C555 + C61412 * C1389 + C92212 * C1788) *
                C884 +
            (C61411 * C182 + C60959 * C641 + C61412 * C1471 + C92212 * C1854) *
                C798 -
            (C67035 + C67034) * C885 - (C67138 + C67139) * C799 +
            C67046 * C886 + C67144 * C800) *
               C92310 +
           ((C61439 + C61438) * C884 + (C61539 + C61540) * C798 -
            (C63751 + C63750) * C885 - (C63864 + C63865) * C799 +
            (C68675 + C68674) * C886 + (C68780 + C68781) * C800) *
               C92067) *
              C92322 +
          (((C67034 + C67035) * C884 + (C67139 + C67138) * C798 -
            (C67039 + C67038) * C885 - (C67141 + C67140) * C799 +
            (C67045 + C67044) * C886 + (C67142 + C67143) * C800) *
               C92310 +
           ((C63750 + C63751) * C884 + (C63865 + C63864) * C798 -
            (C68674 + C68675) * C885 - (C68781 + C68780) * C799 +
            (C61411 * C4881 + C60959 * C5455 + C61412 * C8537 +
             C92212 * C9197) *
                C886 +
            (C61411 * C5013 + C60959 * C5579 + C61412 * C8667 +
             C92212 * C9319) *
                C800) *
               C92067) *
              C92186) *
         C92078 * C92110) /
            (p * q * std::sqrt(p + q));
    d2eezz[54] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C61411 * C107 + C60959 * C555 + C61412 * C1389 + C92212 * C1788) *
                 C244 +
             (C61411 * C245 + C60959 * C719 + C61412 * C1540 + C92212 * C1909) *
                 C92110) *
                C92310 +
            ((C61439 + C61438) * C244 + (C61635 + C61636) * C92110) * C92067) *
               C92322 +
           (((C67034 + C67035) * C244 + (C67232 + C67233) * C92110) * C92310 +
            ((C63750 + C63751) * C244 + (C63977 + C63976) * C92110) * C92067) *
               C92186) *
              C92099 * C93 -
          ((((C63974 + C63975) * C92110 + (C63755 + C63754) * C244) * C92067 +
            ((C63976 + C63977) * C92110 + (C63751 + C63750) * C244) * C92310) *
               C92186 +
           (((C61638 + C61637) * C92110 + (C61443 + C61442) * C244) * C92067 +
            ((C61636 + C61635) * C92110 + (C61438 + C61439) * C244) * C92310) *
               C92322) *
              C92099 * C94 +
          ((C61643 * C92310 +
            ((C61446 + C61447) * C244 + (C61640 + C61639) * C92110) * C92067) *
               C92322 +
           (((C63754 + C63755) * C244 + (C63975 + C63974) * C92110) * C92310 +
            ((C61411 * C802 + C60959 * C1201 + C61412 * C3434 +
              C92212 * C3878) *
                 C244 +
             (C61411 * C953 + C60959 * C1325 + C61412 * C3590 +
              C92212 * C4022) *
                 C92110) *
                C92067) *
               C92186) *
              C92099 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C61411 * C107 + C60959 * C555 + C61412 * C1389 + C92212 * C1788) *
                 C244 +
             (C61411 * C245 + C60959 * C719 + C61412 * C1540 + C92212 * C1909) *
                 C92110) *
                C92310 +
            ((C61439 + C61438) * C244 + (C61635 + C61636) * C92110) * C92067) *
               C92322 +
           (((C67034 + C67035) * C244 + (C67232 + C67233) * C92110) * C92310 +
            ((C63750 + C63751) * C244 + (C63977 + C63976) * C92110) * C92067) *
               C92186) *
              C798 -
          ((((C68885 + C68884) * C92110 + (C68674 + C68675) * C244) * C92067 +
            ((C67235 + C67234) * C92110 + (C67039 + C67038) * C244) * C92310) *
               C92186 +
           (((C63976 + C63977) * C92110 + (C63751 + C63750) * C244) * C92067 +
            ((C67233 + C67232) * C92110 + (C67035 + C67034) * C244) * C92310) *
               C92322) *
              C799 +
          ((C67240 * C92310 +
            ((C68675 + C68674) * C244 + (C68884 + C68885) * C92110) * C92067) *
               C92322 +
           (((C67045 + C67044) * C244 + (C67237 + C67236) * C92110) * C92310 +
            ((C61411 * C4881 + C60959 * C5455 + C61412 * C8537 +
              C92212 * C9197) *
                 C244 +
             (C61411 * C5113 + C60959 * C5668 + C61412 * C8781 +
              C92212 * C9425) *
                 C92110) *
                C92067) *
               C92186) *
              C800) *
         C92078) /
            (p * q * std::sqrt(p + q));
    d2eexx[55] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C36216 * C107 + C92062 * C113) * C1987 +
                       (C36216 * C117 + C92062 * C125) * C1983 -
                       (C36216 * C108 + C92062 * C114) * C1988 -
                       (C36216 * C118 + C92062 * C126) * C1984) *
                          C92322 +
                      (C37710 + C37711 - C37734 - C37735) * C92186) *
                         C92350 +
                     ((C42870 + C42871 - C42886 - C42887) * C92322 +
                      (C41952 + C41953 - C41968 - C41969) * C92186) *
                         C92351 +
                     ((C42876 + C42877 - C42888 - C42889) * C92322 +
                      (C41958 + C41959 - C41970 - C41971) * C92186) *
                         C80243) *
                        C92110 * C1985 +
                    (((C37734 - (C37711 + C37710) + C37735) * C92322 +
                      (C37736 - (C37717 + C37716) + C37737) * C92186) *
                         C92350 +
                     ((C41968 - (C41953 + C41952) + C41969) * C92322 +
                      (C58257 - (C58250 + C58249) + C58258) * C92186) *
                         C92351 +
                     ((C41970 - (C41959 + C41958) + C41971) * C92322 +
                      ((C36216 * C5776 + C92062 * C5786) * C1988 -
                       (C40322 * C1983 + C40323 * C1987) +
                       (C36216 * C5788 + C92062 * C5794) * C1984) *
                          C92186) *
                         C80243) *
                        C92110 * C1986)) /
                  (p * q * std::sqrt(p + q));
    d2eexy[55] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C36216 * C107 + C92062 * C113) * C2059 +
                       (C36216 * C182 + C92062 * C188) * C1985 -
                       C36692 * C2060 - C36770 * C1986) *
                          C92322 +
                      (C36692 * C2059 + C36770 * C1985 - C36694 * C2060 -
                       C36771 * C1986) *
                          C92186) *
                         C92350 +
                     ((C43923 + C43924 - C43925 - C43926) * C92322 +
                      (C43927 + C43928 - C43929 - C43930) * C92186) *
                         C92351 +
                     ((C43931 + C43932 - C43933 - C43934) * C92322 +
                      (C43935 + C43936 - C43937 - C43938) * C92186) *
                         C80243) *
                        C1983 +
                    (((C37728 * C2060 -
                       ((C36216 * C183 + C92062 * C189) * C1985 +
                        (C36216 * C108 + C92062 * C114) * C2059) +
                       C37812 * C1986) *
                          C92322 +
                      (C37730 * C2060 - (C37812 * C1985 + C37728 * C2059) +
                       C37813 * C1986) *
                          C92186) *
                         C92350 +
                     ((C41964 * C2060 - (C42999 * C1985 + C42882 * C2059) +
                       C42074 * C1986) *
                          C92322 +
                      (C58255 * C2060 - (C42074 * C1985 + C41964 * C2059) +
                       C58359 * C1986) *
                          C92186) *
                         C92351 +
                     ((C41966 * C2060 - (C42998 * C1985 + C42884 * C2059) +
                       C42075 * C1986) *
                          C92322 +
                      ((C36216 * C5776 + C92062 * C5786) * C2060 -
                       (C42075 * C1985 + C41966 * C2059) +
                       (C36216 * C5874 + C92062 * C5880) * C1986) *
                          C92186) *
                         C80243) *
                        C1984) *
                   C92110) /
                  (p * q * std::sqrt(p + q));
    d2eexz[55] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C36216 * C107 + C92062 * C113) * C244 +
              (C36216 * C245 + C92062 * C251) * C92110) *
                 C92322 +
             (C36826 + C36842) * C92186) *
                C92350 +
            ((C41107 * C244 + C41316 * C92110) * C92322 +
             (C40482 + C40483) * C92186) *
                C92351 +
            ((C41109 * C244 + C41317 * C92110) * C92322 +
             (C40484 + C40494) * C92186) *
                C80243) *
               C1985 -
           (((C40495 + C40489) * C92186 + (C40494 + C40484) * C92322) * C80243 +
            ((C40490 + C40491) * C92186 + (C40483 + C40482) * C92322) * C92351 +
            ((C36843 + C36829) * C92186 + (C36842 + C36826) * C92322) *
                C92350) *
               C1986) *
              C1983 +
          ((((C37881 + C37893) * C92322 + (C37884 + C37894) * C92186) * C92350 +
            ((C42174 + C42182) * C92322 + (C58458 + C58462) * C92186) * C92351 +
            ((C42177 + C42183) * C92322 +
             ((C36216 * C5776 + C92062 * C5786) * C244 +
              (C36216 * C5960 + C92062 * C5966) * C92110) *
                 C92186) *
                C80243) *
               C1986 -
           (((C42183 + C42177) * C92186 +
             (C43105 * C92110 + C42884 * C244) * C92322) *
                C80243 +
            ((C42182 + C42174) * C92186 +
             (C43104 * C92110 + C42882 * C244) * C92322) *
                C92351 +
            ((C37893 + C37881) * C92186 +
             ((C36216 * C246 + C92062 * C252) * C92110 +
              (C36216 * C108 + C92062 * C114) * C244) *
                 C92322) *
                C92350) *
               C1985) *
              C1984)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[55] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C15033 * C107 + C92322 * C308 + C15034 * C805 + C92186 * C1022) *
                C1987 +
            (C15033 * C117 + C92322 * C314 + C15034 * C813 + C92186 * C1030) *
                C1983 -
            (C15060 + C15061) * C1988 - (C15062 + C15063) * C1984) *
               C92350 +
           ((C26974 + C26975) * C1987 + (C26976 + C26977) * C1983 -
            C29264 * C1988 - C29265 * C1984) *
               C92351 +
           (C86728 * C1987 + C86729 * C1983 - (C26980 + C26981) * C1988 -
            (C26978 + C26979) * C1984) *
               C80243) *
              C92062 * C92110 * C1985 +
          (((C17346 + C17347) * C1988 -
            ((C15034 * C822 + C92186 * C1031 + C15033 * C813 + C92322 * C1030) *
                 C1983 +
             (C15034 * C806 + C92186 * C1023 + C15033 * C805 + C92322 * C1022) *
                 C1987) +
            (C17348 + C17349) * C1984) *
               C92350 +
           ((C28064 + C28065) * C1988 -
            ((C30497 + C30496) * C1983 + (C30495 + C30494) * C1987) +
            (C28066 + C28067) * C1984) *
               C92351 +
           ((C15033 * C5774 + C92322 * C6045 + C15034 * C5776 +
             C92186 * C6046) *
                C1988 -
            ((C15034 * C5787 + C92186 * C6050 + C15033 * C5783 +
              C92322 * C6049) *
                 C1983 +
             (C15034 * C5775 + C92186 * C6044 + C15033 * C5773 +
              C92322 * C6043) *
                 C1987) +
            (C15033 * C5784 + C92322 * C6051 + C15034 * C5788 +
             C92186 * C6052) *
                C1984) *
               C80243) *
              C92062 * C92110 * C1986)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[55] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C15033 * C107 + C92322 * C308 + C15034 * C805 + C92186 * C1022) *
                C2059 +
            (C15033 * C182 + C92322 * C394 + C15034 * C890 + C92186 * C1085) *
                C1985 -
            (C15034 * C806 + C92186 * C1023 + C15033 * C805 + C92322 * C1022) *
                C2060 -
            (C15034 * C891 + C92186 * C1086 + C15033 * C890 + C92322 * C1085) *
                C1986) *
               C92350 +
           ((C26974 + C26975) * C2059 + (C27096 + C27097) * C1985 -
            (C30495 + C30494) * C2060 - (C30632 + C30633) * C1986) *
               C92351 +
           (C86728 * C2059 + C86820 * C1985 -
            (C15034 * C5775 + C92186 * C6044 + C15033 * C5773 +
             C92322 * C6043) *
                C2060 -
            (C15034 * C5873 + C92186 * C6130 + C15033 * C5871 +
             C92322 * C6129) *
                C1986) *
               C80243) *
              C92062 * C1983 +
          (((C17346 + C17347) * C2060 -
            ((C15162 + C15161) * C1985 + (C15060 + C15061) * C2059) +
            (C17461 + C17460) * C1986) *
               C92350 +
           ((C28064 + C28065) * C2060 - (C29400 * C1985 + C29264 * C2059) +
            (C28203 + C28202) * C1986) *
               C92351 +
           ((C15033 * C5774 + C92322 * C6045 + C15034 * C5776 +
             C92186 * C6046) *
                C2060 -
            ((C27098 + C27099) * C1985 + (C26980 + C26981) * C2059) +
            (C15033 * C5872 + C92322 * C6131 + C15034 * C5874 +
             C92186 * C6132) *
                C1986) *
               C80243) *
              C92062 * C1984) *
         C92110) /
        (p * q * std::sqrt(p + q));
    d2eeyz[55] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C15033 * C107 + C92322 * C308 + C15034 * C805 + C92186 * C1022) *
                 C244 +
             (C15033 * C245 + C92322 * C474 + C15034 * C956 + C92186 * C1146) *
                 C92110) *
                C92350 +
            ((C26974 + C26975) * C244 + (C27213 + C27212) * C92110) * C92351 +
            (C86728 * C244 + C86903 * C92110) * C80243) *
               C92062 * C1985 -
           (((C15034 * C5959 + C92186 * C6209 + C15033 * C5955 +
              C92322 * C6208) *
                 C92110 +
             (C15034 * C5775 + C92186 * C6044 + C15033 * C5773 +
              C92322 * C6043) *
                 C244) *
                C80243 +
            ((C30769 + C30768) * C92110 + (C30495 + C30494) * C244) * C92351 +
            ((C15034 * C957 + C92186 * C1147 + C15033 * C956 + C92322 * C1146) *
                 C92110 +
             (C15034 * C806 + C92186 * C1023 + C15033 * C805 + C92322 * C1022) *
                 C244) *
                C92350) *
               C92062 * C1986) *
              C1983 +
          ((((C17346 + C17347) * C244 + (C17573 + C17572) * C92110) * C92350 +
            ((C28064 + C28065) * C244 + (C28339 + C28338) * C92110) * C92351 +
            ((C15033 * C5774 + C92322 * C6045 + C15034 * C5776 +
              C92186 * C6046) *
                 C244 +
             (C15033 * C5956 + C92322 * C6211 + C15034 * C5960 +
              C92186 * C6212) *
                 C92110) *
                C80243) *
               C92062 * C1986 -
           (((C27217 + C27216) * C92110 + (C26980 + C26981) * C244) * C80243 +
            (C29536 * C92110 + C29264 * C244) * C92351 +
            ((C15259 + C15258) * C92110 + (C15060 + C15061) * C244) * C92350) *
               C92062 * C1985) *
              C1984)) /
        (p * q * std::sqrt(p + q));
    d2eezx[55] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C80688 * C107 + C92350 * C555 + C80689 * C1389 +
                       C92351 * C1788 + C80690 * C1390 + C80243 * C1789) *
                          C1987 +
                      (C80688 * C117 + C92350 * C561 + C80689 * C1397 +
                       C92351 * C1796 + C80690 * C1406 + C80243 * C1797) *
                          C1983 -
                      (C80716 + C80717 + C80718) * C1988 -
                      (C80719 + C80720 + C80721) * C1984) *
                         C92062 * C92322 +
                     ((C86230 + C86231 + C86232) * C1987 +
                      (C86233 + C86234 + C86235) * C1983 -
                      (C82980 + C82979 + C82978) * C1988 -
                      (C82983 + C82982 + C82981) * C1984) *
                         C92062 * C92186) *
                        C92110 * C1985 +
                    (((C82978 + C82979 + C82980) * C1988 -
                      ((C86235 + C86234 + C86233) * C1983 +
                       (C86232 + C86231 + C86230) * C1987) +
                      (C82981 + C82982 + C82983) * C1984) *
                         C92062 * C92322 +
                     ((C80688 * C807 + C92350 * C1206 + C80689 * C5771 +
                       C92351 * C6287 + C80690 * C5776 + C80243 * C6292) *
                          C1988 -
                      ((C86236 + C86237 + C86238) * C1983 +
                       (C86239 + C86240 + C86241) * C1987) +
                      (C80688 * C823 + C92350 * C1214 + C80689 * C5777 +
                       C92351 * C6293 + C80690 * C5788 + C80243 * C6298) *
                          C1984) *
                         C92062 * C92186) *
                        C92110 * C1986)) /
                  (p * q * std::sqrt(p + q));
    d2eezy[55] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C80688 * C107 + C92350 * C555 + C80689 * C1389 +
                       C92351 * C1788 + C80690 * C1390 + C80243 * C1789) *
                          C2059 +
                      (C80688 * C182 + C92350 * C641 + C80689 * C1471 +
                       C92351 * C1854 + C80690 * C1472 + C80243 * C1855) *
                          C1985 -
                      (C86232 + C86231 + C86230) * C2060 -
                      (C86328 + C86329 + C86330) * C1986) *
                         C92062 * C92322 +
                     ((C86230 + C86231 + C86232) * C2059 +
                      (C86330 + C86329 + C86328) * C1985 -
                      (C86239 + C86240 + C86241) * C2060 -
                      (C86333 + C86332 + C86331) * C1986) *
                         C92062 * C92186) *
                        C1983 +
                    (((C82978 + C82979 + C82980) * C2060 -
                      ((C80816 + C80815 + C80814) * C1985 +
                       (C80716 + C80717 + C80718) * C2059) +
                      (C83090 + C83089 + C83088) * C1986) *
                         C92062 * C92322 +
                     ((C80688 * C807 + C92350 * C1206 + C80689 * C5771 +
                       C92351 * C6287 + C80690 * C5776 + C80243 * C6292) *
                          C2060 -
                      ((C83088 + C83089 + C83090) * C1985 +
                       (C82980 + C82979 + C82978) * C2059) +
                      (C80688 * C892 + C92350 * C1270 + C80689 * C5869 +
                       C92351 * C6373 + C80690 * C5874 + C80243 * C6378) *
                          C1986) *
                         C92062 * C92186) *
                        C1984) *
                   C92110) /
                  (p * q * std::sqrt(p + q));
    d2eezz[55] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C80688 * C107 + C92350 * C555 + C80689 * C1389 +
                        C92351 * C1788 + C80690 * C1390 + C80243 * C1789) *
                           C244 +
                       (C80688 * C245 + C92350 * C719 + C80689 * C1540 +
                        C92351 * C1909 + C80690 * C1541 + C80243 * C1910) *
                           C92110) *
                          C92062 * C92322 +
                      ((C86230 + C86231 + C86232) * C244 +
                       (C86420 + C86421 + C86422) * C92110) *
                          C92062 * C92186) *
                         C1985 -
                     (((C86423 + C86424 + C86425) * C92110 +
                       (C86239 + C86240 + C86241) * C244) *
                          C92062 * C92186 +
                      ((C86422 + C86421 + C86420) * C92110 +
                       (C86232 + C86231 + C86230) * C244) *
                          C92062 * C92322) *
                         C1986) *
                        C1983 +
                    ((((C82978 + C82979 + C82980) * C244 +
                       (C83197 + C83196 + C83195) * C92110) *
                          C92062 * C92322 +
                      ((C80688 * C807 + C92350 * C1206 + C80689 * C5771 +
                        C92351 * C6287 + C80690 * C5776 + C80243 * C6292) *
                           C244 +
                       (C80688 * C958 + C92350 * C1330 + C80689 * C5957 +
                        C92351 * C6457 + C80690 * C5960 + C80243 * C6458) *
                           C92110) *
                          C92062 * C92186) *
                         C1986 -
                     (((C83195 + C83196 + C83197) * C92110 +
                       (C82980 + C82979 + C82978) * C244) *
                          C92062 * C92186 +
                      ((C80908 + C80907 + C80906) * C92110 +
                       (C80716 + C80717 + C80718) * C244) *
                          C92062 * C92322) *
                         C1985) *
                        C1984)) /
                  (p * q * std::sqrt(p + q));
    d2eexx[56] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C36216 * C107 + C92062 * C113) * C801 +
              (C36216 * C117 + C92062 * C125) * C92078) *
                 C92322 +
             (C36700 + C36701) * C92186) *
                C92350 +
            ((C41116 + C41117) * C92322 + C43820 * C92186) * C92351 +
            C86502 * C80243) *
               C2709 -
           (((C41120 + C41121) * C92186 + (C41122 + C41123) * C92322) * C80243 +
            (C43821 * C92186 + (C41119 + C41118) * C92322) * C92351 +
            (C43822 * C92186 + (C41117 + C41116) * C92322) * C92350) *
               C2710) *
              C1985 +
          (((C43820 * C92322 + C56777 * C92186) * C92350 +
            (C41098 * C92322 + (C40327 + C40326) * C92186) * C92351 +
            ((C41121 + C41120) * C92322 +
             ((C36216 * C43815 + C92062 * C43816) * C801 +
              (C36216 * C43817 + C92062 * C43818) * C92078) *
                 C92186) *
                C80243) *
               C2710 -
           (((C40326 + C40327) * C92186 + C43821 * C92322) * C80243 +
            (C60033 * C92186 + C43822 * C92322) * C92351 +
            ((C36703 + C36702) * C92186 + (C36701 + C36700) * C92322) *
                C92350) *
               C2709) *
              C1986)) /
        (p * q * std::sqrt(p + q));
    d2eexy[56] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C36216 * C107 + C92062 * C113) * C2059 +
                       (C36216 * C182 + C92062 * C188) * C1985 -
                       C36692 * C2060 - C36770 * C1986) *
                          C92322 +
                      (C36692 * C2059 + C36770 * C1985 - C36694 * C2060 -
                       C36771 * C1986) *
                          C92186) *
                         C92350 +
                     ((C43923 + C43924 - C43925 - C43926) * C92322 +
                      (C43927 + C43928 - C43929 - C43930) * C92186) *
                         C92351 +
                     ((C43931 + C43932 - C43933 - C43934) * C92322 +
                      (C43935 + C43936 - C43937 - C43938) * C92186) *
                         C80243) *
                        C92078 * C2709 +
                    (((C43925 - (C43924 + C43923) + C43926) * C92322 +
                      (C43929 - (C43928 + C43927) + C43930) * C92186) *
                         C92350 +
                     ((C43933 - (C43932 + C43931) + C43934) * C92322 +
                      (C43937 - (C43936 + C43935) + C43938) * C92186) *
                         C92351 +
                     ((C73492 - (C73491 + C73490) + C73493) * C92322 +
                      ((C36216 * C43815 + C92062 * C43816) * C2060 -
                       (C41222 * C1985 + C41113 * C2059) +
                       (C36216 * C43920 + C92062 * C43921) * C1986) *
                          C92186) *
                         C80243) *
                        C92078 * C2710)) /
                  (p * q * std::sqrt(p + q));
    d2eexz[56] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C36216 * C107 + C92062 * C113) * C2849 +
                       (C36216 * C245 + C92062 * C251) * C2709 -
                       C41107 * C2850 - C41316 * C2710) *
                          C92322 +
                      (C39129 + C39130 - C39131 - C39147) * C92186) *
                         C92350 +
                     ((C41107 * C2849 + C41316 * C2709 - C41109 * C2850 -
                       C41317 * C2710) *
                          C92322 +
                      (C44039 + C44040 - C44041 - C44042) * C92186) *
                         C92351 +
                     ((C41109 * C2849 + C41317 * C2709 - C41115 * C2850 -
                       C41318 * C2710) *
                          C92322 +
                      (C44043 + C44044 - C44045 - C44046) * C92186) *
                         C80243) *
                        C1985 +
                    (((C39131 - (C39130 + C39129) + C39147) * C92322 +
                      (C39136 - (C39135 + C39134) + C39148) * C92186) *
                         C92350 +
                     ((C44041 - (C44040 + C44039) + C44042) * C92322 +
                      (C60236 - (C60235 + C60234) + C60237) * C92186) *
                         C92351 +
                     ((C44045 - (C44044 + C44043) + C44046) * C92322 +
                      ((C36216 * C43815 + C92062 * C43816) * C2850 -
                       (C40493 * C2709 + C40323 * C2849) +
                       (C36216 * C44036 + C92062 * C44037) * C2710) *
                          C92186) *
                         C80243) *
                        C1986) *
                   C92078) /
                  (p * q * std::sqrt(p + q));
    d2eeyx[56] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C15033 * C107 + C92322 * C308 + C15034 * C805 + C92186 * C1022) *
                 C801 +
             (C15033 * C117 + C92322 * C314 + C15034 * C813 + C92186 * C1030) *
                 C92078) *
                C92350 +
            ((C26974 + C26975) * C801 + (C26976 + C26977) * C92078) * C92351 +
            C86744 * C80243) *
               C92062 * C2709 -
           (((C86740 + C86741) * C92078 + (C86742 + C86743) * C801) * C80243 +
            ((C26982 + C26983) * C92078 + (C26984 + C26985) * C801) * C92351 +
            ((C26977 + C26976) * C92078 + (C26975 + C26974) * C801) * C92350) *
               C92062 * C2710) *
              C1985 +
          ((((C30494 + C30495) * C801 + (C30496 + C30497) * C92078) * C92350 +
            ((C89296 + C89297) * C801 + (C89298 + C89299) * C92078) * C92351 +
            ((C15033 * C13849 + C92322 * C14183 + C15034 * C43815 +
              C92186 * C44144) *
                 C801 +
             (C15033 * C13853 + C92322 * C14185 + C15034 * C43817 +
              C92186 * C44145) *
                 C92078) *
                C80243) *
               C92062 * C2710 -
           (((C89299 + C89298) * C92078 + (C89297 + C89296) * C801) * C80243 +
            ((C30497 + C30496) * C92078 + (C30495 + C30494) * C801) * C92351 +
            ((C15034 * C822 + C92186 * C1031 + C15033 * C813 + C92322 * C1030) *
                 C92078 +
             (C15034 * C806 + C92186 * C1023 + C15033 * C805 + C92322 * C1022) *
                 C801) *
                C92350) *
               C92062 * C2709) *
              C1986)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[56] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C15033 * C107 + C92322 * C308 + C15034 * C805 + C92186 * C1022) *
                C2059 +
            (C15033 * C182 + C92322 * C394 + C15034 * C890 + C92186 * C1085) *
                C1985 -
            (C15034 * C806 + C92186 * C1023 + C15033 * C805 + C92322 * C1022) *
                C2060 -
            (C15034 * C891 + C92186 * C1086 + C15033 * C890 + C92322 * C1085) *
                C1986) *
               C92350 +
           ((C26974 + C26975) * C2059 + (C27096 + C27097) * C1985 -
            (C30495 + C30494) * C2060 - (C30632 + C30633) * C1986) *
               C92351 +
           (C86728 * C2059 + C86820 * C1985 - (C89297 + C89296) * C2060 -
            (C89402 + C89403) * C1986) *
               C80243) *
              C92062 * C92078 * C2709 +
          (((C30494 + C30495) * C2060 -
            ((C27097 + C27096) * C1985 + (C26975 + C26974) * C2059) +
            (C30633 + C30632) * C1986) *
               C92350 +
           ((C89296 + C89297) * C2060 -
            ((C27100 + C27101) * C1985 + (C26984 + C26985) * C2059) +
            (C89403 + C89402) * C1986) *
               C92351 +
           ((C15033 * C13849 + C92322 * C14183 + C15034 * C43815 +
             C92186 * C44144) *
                C2060 -
            ((C86826 + C86827) * C1985 + (C86742 + C86743) * C2059) +
            (C15033 * C13967 + C92322 * C14305 + C15034 * C43920 +
             C92186 * C44268) *
                C1986) *
               C80243) *
              C92062 * C92078 * C2710)) /
        (p * q * std::sqrt(p + q));
    d2eeyz[56] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C15033 * C107 + C92322 * C308 + C15034 * C805 + C92186 * C1022) *
                C2849 +
            (C15033 * C245 + C92322 * C474 + C15034 * C956 + C92186 * C1146) *
                C2709 -
            (C26975 + C26974) * C2850 - (C27212 + C27213) * C2710) *
               C92350 +
           ((C26974 + C26975) * C2849 + (C27213 + C27212) * C2709 -
            (C26984 + C26985) * C2850 - (C27215 + C27214) * C2710) *
               C92351 +
           (C86728 * C2849 + C86903 * C2709 - (C86742 + C86743) * C2850 -
            (C86909 + C86908) * C2710) *
               C80243) *
              C92062 * C1985 +
          (((C30494 + C30495) * C2850 -
            ((C15034 * C957 + C92186 * C1147 + C15033 * C956 + C92322 * C1146) *
                 C2709 +
             (C15034 * C806 + C92186 * C1023 + C15033 * C805 + C92322 * C1022) *
                 C2849) +
            (C30768 + C30769) * C2710) *
               C92350 +
           ((C89296 + C89297) * C2850 -
            ((C30769 + C30768) * C2709 + (C30495 + C30494) * C2849) +
            (C89506 + C89507) * C2710) *
               C92351 +
           ((C15033 * C13849 + C92322 * C14183 + C15034 * C43815 +
             C92186 * C44144) *
                C2850 -
            ((C89507 + C89506) * C2709 + (C89297 + C89296) * C2849) +
            (C15033 * C14075 + C92322 * C14419 + C15034 * C44036 +
             C92186 * C44379) *
                C2710) *
               C80243) *
              C92062 * C1986) *
         C92078) /
        (p * q * std::sqrt(p + q));
    d2eezx[56] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C80688 * C107 + C92350 * C555 + C80689 * C1389 +
                        C92351 * C1788 + C80690 * C1390 + C80243 * C1789) *
                           C801 +
                       (C80688 * C117 + C92350 * C561 + C80689 * C1397 +
                        C92351 * C1796 + C80690 * C1406 + C80243 * C1797) *
                           C92078) *
                          C92062 * C92322 +
                      ((C86230 + C86231 + C86232) * C801 +
                       (C86233 + C86234 + C86235) * C92078) *
                          C92062 * C92186) *
                         C2709 -
                     (((C89618 + C89619 + C89620) * C92078 +
                       (C89621 + C89622 + C89623) * C801) *
                          C92062 * C92186 +
                      ((C80690 * C10965 + C80243 * C11613 + C80689 * C1406 +
                        C92351 * C1797 + C80688 * C1397 + C92350 * C1796) *
                           C92078 +
                       (C80690 * C10961 + C80243 * C11609 + C80689 * C1390 +
                        C92351 * C1789 + C80688 * C1389 + C92350 * C1788) *
                           C801) *
                          C92062 * C92322) *
                         C2710) *
                        C1985 +
                    ((((C89623 + C89622 + C89621) * C801 +
                       (C89620 + C89619 + C89618) * C92078) *
                          C92062 * C92322 +
                      ((C80688 * C5772 + C92350 * C6288 + C80689 * C5775 +
                        C92351 * C6291 + C80690 * C43815 + C80243 * C44490) *
                           C801 +
                       (C80688 * C5778 + C92350 * C6294 + C80689 * C5787 +
                        C92351 * C6297 + C80690 * C43817 + C80243 * C44491) *
                           C92078) *
                          C92062 * C92186) *
                         C2710 -
                     (((C86236 + C86237 + C86238) * C92078 +
                       (C86239 + C86240 + C86241) * C801) *
                          C92062 * C92186 +
                      ((C86235 + C86234 + C86233) * C92078 +
                       (C86232 + C86231 + C86230) * C801) *
                          C92062 * C92322) *
                         C2709) *
                        C1986)) /
                  (p * q * std::sqrt(p + q));
    d2eezy[56] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C80688 * C107 + C92350 * C555 + C80689 * C1389 +
                       C92351 * C1788 + C80690 * C1390 + C80243 * C1789) *
                          C2059 +
                      (C80688 * C182 + C92350 * C641 + C80689 * C1471 +
                       C92351 * C1854 + C80690 * C1472 + C80243 * C1855) *
                          C1985 -
                      (C86232 + C86231 + C86230) * C2060 -
                      (C86328 + C86329 + C86330) * C1986) *
                         C92062 * C92322 +
                     ((C86230 + C86231 + C86232) * C2059 +
                      (C86330 + C86329 + C86328) * C1985 -
                      (C86239 + C86240 + C86241) * C2060 -
                      (C86333 + C86332 + C86331) * C1986) *
                         C92062 * C92186) *
                        C92078 * C2709 +
                    (((C89623 + C89622 + C89621) * C2060 -
                      ((C80690 * C11093 + C80243 * C11691 + C80689 * C1472 +
                        C92351 * C1855 + C80688 * C1471 + C92350 * C1854) *
                           C1985 +
                       (C80690 * C10961 + C80243 * C11609 + C80689 * C1390 +
                        C92351 * C1789 + C80688 * C1389 + C92350 * C1788) *
                           C2059) +
                      (C89728 + C89729 + C89730) * C1986) *
                         C92062 * C92322 +
                     ((C80688 * C5772 + C92350 * C6288 + C80689 * C5775 +
                       C92351 * C6291 + C80690 * C43815 + C80243 * C44490) *
                          C2060 -
                      ((C89730 + C89729 + C89728) * C1985 +
                       (C89621 + C89622 + C89623) * C2059) +
                      (C80688 * C5870 + C92350 * C6374 + C80689 * C5873 +
                       C92351 * C6377 + C80690 * C43920 + C80243 * C44608) *
                          C1986) *
                         C92062 * C92186) *
                        C92078 * C2710)) /
                  (p * q * std::sqrt(p + q));
    d2eezz[56] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C80688 * C107 + C92350 * C555 + C80689 * C1389 +
                       C92351 * C1788 + C80690 * C1390 + C80243 * C1789) *
                          C2849 +
                      (C80688 * C245 + C92350 * C719 + C80689 * C1540 +
                       C92351 * C1909 + C80690 * C1541 + C80243 * C1910) *
                          C2709 -
                      (C80690 * C10961 + C80243 * C11609 + C80689 * C1390 +
                       C92351 * C1789 + C80688 * C1389 + C92350 * C1788) *
                          C2850 -
                      (C80690 * C11197 + C80243 * C11768 + C80689 * C1541 +
                       C92351 * C1910 + C80688 * C1540 + C92350 * C1909) *
                          C2710) *
                         C92062 * C92322 +
                     ((C86230 + C86231 + C86232) * C2849 +
                      (C86420 + C86421 + C86422) * C2709 -
                      (C89621 + C89622 + C89623) * C2850 -
                      (C89835 + C89836 + C89837) * C2710) *
                         C92062 * C92186) *
                        C1985 +
                    (((C89623 + C89622 + C89621) * C2850 -
                      ((C86422 + C86421 + C86420) * C2709 +
                       (C86232 + C86231 + C86230) * C2849) +
                      (C89837 + C89836 + C89835) * C2710) *
                         C92062 * C92322 +
                     ((C80688 * C5772 + C92350 * C6288 + C80689 * C5775 +
                       C92351 * C6291 + C80690 * C43815 + C80243 * C44490) *
                          C2850 -
                      ((C86423 + C86424 + C86425) * C2709 +
                       (C86239 + C86240 + C86241) * C2849) +
                      (C80688 * C5958 + C92350 * C6455 + C80689 * C5959 +
                       C92351 * C6456 + C80690 * C44036 + C80243 * C44716) *
                          C2710) *
                         C92062 * C92186) *
                        C1986) *
                   C92078) /
                  (p * q * std::sqrt(p + q));
    d2eexx[57] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C36216 * C107 + C92062 * C113) * C801 +
             (C36216 * C117 + C92062 * C125) * C92078) *
                C92322 +
            (C36700 + C36701) * C92186) *
               C92350 +
           ((C41116 + C41117) * C92322 + C43820 * C92186) * C92351 +
           (C41124 * C92322 + C41098 * C92186) * C80243) *
              C92110 * C798 -
          (((C40326 + C40327) * C92186 + C43821 * C92322) * C80243 +
           (C60033 * C92186 + C43822 * C92322) * C92351 +
           ((C36703 + C36702) * C92186 + (C36701 + C36700) * C92322) * C92350) *
              C92110 * C799 +
          ((C36708 * C92322 + C36709 * C92186) * C92350 +
           (C56777 * C92322 + (C38979 + C38978) * C92186) * C92351 +
           ((C40327 + C40326) * C92322 +
            ((C36216 * C37227 + C92062 * C37228) * C801 +
             (C36216 * C37229 + C92062 * C37230) * C92078) *
                C92186) *
               C80243) *
              C92110 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C36216 * C107 + C92062 * C113) * C104 +
            (C36216 * C117 + C92062 * C125) * C93 -
            (C36216 * C108 + C92062 * C114) * C105 -
            (C36216 * C118 + C92062 * C126) * C94 +
            (C36216 * C109 + C92062 * C115) * C106 +
            (C36216 * C119 + C92062 * C127) * C95) *
               C92322 +
           (C36692 * C104 + C36693 * C93 - C37728 * C105 - C37729 * C94 +
            (C36216 * C803 + C92062 * C815) * C106 +
            (C36216 * C811 + C92062 * C827) * C95) *
               C92186) *
              C92350 +
          ((C41107 * C104 + C41108 * C93 - C42882 * C105 - C42883 * C94 +
            (C36216 * C1387 + C92062 * C1399) * C106 +
            (C36216 * C1395 + C92062 * C1411) * C95) *
               C92322 +
           (C38977 * C104 + C38976 * C93 - C41964 * C105 - C41965 * C94 +
            (C36216 * C3433 + C92062 * C3437) * C106 +
            (C36216 * C3441 + C92062 * C3445) * C95) *
               C92186) *
              C92351 +
          ((C41109 * C104 + C41110 * C93 - C42884 * C105 - C42885 * C94 +
            (C36216 * C1392 + C92062 * C1404) * C106 +
            (C36216 * C1408 + C92062 * C1416) * C95) *
               C92322 +
           (C40320 * C104 + C40321 * C93 - C41966 * C105 - C41967 * C94 +
            (C36216 * C11870 + C92062 * C11871) * C106 +
            (C36216 * C11872 + C92062 * C11873) * C95) *
               C92186) *
              C80243) *
         C92110 * C92099) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C36216 * C107 + C92062 * C113) * C801 +
             (C36216 * C117 + C92062 * C125) * C92078) *
                C92322 +
            (C36700 + C36701) * C92186) *
               C92350 +
           ((C41116 + C41117) * C92322 + C43820 * C92186) * C92351 +
           C86502 * C80243) *
              C1383 -
          (((C41120 + C41121) * C92186 + (C41122 + C41123) * C92322) * C80243 +
           (C43821 * C92186 + (C41119 + C41118) * C92322) * C92351 +
           (C43822 * C92186 + (C41117 + C41116) * C92322) * C92350) *
              C1384 +
          (C86502 * C92350 +
           (C71697 * C92322 + (C41121 + C41120) * C92186) * C92351 +
           ((C71706 + C71705) * C92322 +
            ((C36216 * C41085 + C92062 * C41086) * C801 +
             (C36216 * C41087 + C92062 * C41088) * C92078) *
                C92186) *
               C80243) *
              C1385) *
         C92099) /
            (p * q * std::sqrt(p + q));
    d2eexy[57] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C36216 * C107 + C92062 * C113) * C884 +
            (C36216 * C182 + C92062 * C188) * C798 - C36692 * C885 -
            C36770 * C799 + C36694 * C886 + C36771 * C800) *
               C92322 +
           (C36692 * C884 + C36770 * C798 - C36694 * C885 - C36771 * C799 +
            C36696 * C886 + C36772 * C800) *
               C92186) *
              C92350 +
          ((C41107 * C884 + C41219 * C798 - C38977 * C885 - C39058 * C799 +
            C38975 * C886 + C39059 * C800) *
               C92322 +
           (C38977 * C884 + C39058 * C798 - C38975 * C885 - C39059 * C799 +
            C38973 * C886 + C39060 * C800) *
               C92186) *
              C92351 +
          ((C41109 * C884 + C41220 * C798 - C40320 * C885 - C40406 * C799 +
            C40323 * C886 + C40407 * C800) *
               C92322 +
           (C40320 * C884 + C40406 * C798 - C40323 * C885 - C40407 * C799 +
            (C36216 * C37227 + C92062 * C37228) * C886 +
            (C36216 * C37281 + C92062 * C37282) * C800) *
               C92186) *
              C80243) *
         C92078 * C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C36216 * C107 + C92062 * C113) * C181 +
             (C36216 * C182 + C92062 * C188) * C92099) *
                C92322 +
            (C36692 * C181 + C36770 * C92099) * C92186) *
               C92350 +
           ((C41203 + C41224) * C92322 + (C41206 + C41207) * C92186) * C92351 +
           (C41229 * C92322 + C41221 * C92186) * C80243) *
              C93 -
          (((C42988 + C42989) * C92186 + (C43000 + C42992) * C92322) * C80243 +
           ((C42993 + C42994) * C92186 + (C43001 + C42997) * C92322) * C92351 +
           ((C37812 * C92099 + C37728 * C181) * C92186 +
            ((C36216 * C183 + C92062 * C189) * C92099 +
             (C36216 * C108 + C92062 * C114) * C181) *
                C92322) *
               C92350) *
              C94 +
          ((((C36216 * C109 + C92062 * C115) * C181 +
             (C36216 * C184 + C92062 * C190) * C92099) *
                C92322 +
            ((C36216 * C803 + C92062 * C815) * C181 +
             (C36216 * C888 + C92062 * C896) * C92099) *
                C92186) *
               C92350 +
           (((C36216 * C1387 + C92062 * C1399) * C181 +
             (C36216 * C1469 + C92062 * C1477) * C92099) *
                C92322 +
            ((C36216 * C3433 + C92062 * C3437) * C181 +
             (C36216 * C3515 + C92062 * C3519) * C92099) *
                C92186) *
               C92351 +
           (((C36216 * C1392 + C92062 * C1404) * C181 +
             (C36216 * C1474 + C92062 * C1482) * C92099) *
                C92322 +
            ((C36216 * C11870 + C92062 * C11871) * C181 +
             (C36216 * C11972 + C92062 * C11973) * C92099) *
                C92186) *
               C80243) *
              C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C36216 * C107 + C92062 * C113) * C181 +
             (C36216 * C182 + C92062 * C188) * C92099) *
                C92322 +
            (C36692 * C181 + C36770 * C92099) * C92186) *
               C92350 +
           ((C41203 + C41224) * C92322 + (C41206 + C41207) * C92186) * C92351 +
           C86579 * C80243) *
              C92078 * C1383 -
          (((C41227 + C41215) * C92186 + (C41228 + C41218) * C92322) * C80243 +
           ((C41212 + C41211) * C92186 + (C41225 + C41208) * C92322) * C92351 +
           ((C41207 + C41206) * C92186 + (C41224 + C41203) * C92322) * C92350) *
              C92078 * C1384 +
          (C86579 * C92350 +
           (C71760 * C92322 + (C41215 + C41227) * C92186) * C92351 +
           ((C71763 + C71766) * C92322 +
            ((C36216 * C41085 + C92062 * C41086) * C181 +
             (C36216 * C41200 + C92062 * C41201) * C92099) *
                C92186) *
               C80243) *
              C92078 * C1385)) /
            (p * q * std::sqrt(p + q));
    d2eexz[57] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C36216 * C107 + C92062 * C113) * C244 +
             (C36216 * C245 + C92062 * C251) * C92110) *
                C92322 +
            (C36826 + C36842) * C92186) *
               C92350 +
           ((C41107 * C244 + C41316 * C92110) * C92322 +
            (C40482 + C40483) * C92186) *
               C92351 +
           ((C41109 * C244 + C41317 * C92110) * C92322 +
            (C40484 + C40494) * C92186) *
               C80243) *
              C798 -
          (((C40495 + C40489) * C92186 + (C40494 + C40484) * C92322) * C80243 +
           ((C40490 + C40491) * C92186 + (C40483 + C40482) * C92322) * C92351 +
           ((C36843 + C36829) * C92186 + (C36842 + C36826) * C92322) * C92350) *
              C799 +
          ((C36846 * C92322 + C36847 * C92186) * C92350 +
           (C56926 * C92322 + (C56928 + C56927) * C92186) * C92351 +
           ((C40489 + C40495) * C92322 +
            ((C36216 * C37227 + C92062 * C37228) * C244 +
             (C36216 * C37333 + C92062 * C37334) * C92110) *
                C92186) *
               C80243) *
              C800) *
         C92078) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C36216 * C107 + C92062 * C113) * C244 +
             (C36216 * C245 + C92062 * C251) * C92110) *
                C92322 +
            (C36826 + C36842) * C92186) *
               C92350 +
           ((C41107 * C244 + C41316 * C92110) * C92322 +
            (C40482 + C40483) * C92186) *
               C92351 +
           ((C41109 * C244 + C41317 * C92110) * C92322 +
            (C40484 + C40494) * C92186) *
               C80243) *
              C92099 * C93 -
          (((C42183 + C42177) * C92186 +
            (C43105 * C92110 + C42884 * C244) * C92322) *
               C80243 +
           ((C42182 + C42174) * C92186 +
            (C43104 * C92110 + C42882 * C244) * C92322) *
               C92351 +
           ((C37893 + C37881) * C92186 +
            ((C36216 * C246 + C92062 * C252) * C92110 +
             (C36216 * C108 + C92062 * C114) * C244) *
                C92322) *
               C92350) *
              C92099 * C94 +
          ((((C36216 * C109 + C92062 * C115) * C244 +
             (C36216 * C247 + C92062 * C253) * C92110) *
                C92322 +
            ((C36216 * C803 + C92062 * C815) * C244 +
             (C36216 * C954 + C92062 * C962) * C92110) *
                C92186) *
               C92350 +
           (((C36216 * C1387 + C92062 * C1399) * C244 +
             (C36216 * C1538 + C92062 * C1546) * C92110) *
                C92322 +
            ((C36216 * C3433 + C92062 * C3437) * C244 +
             (C36216 * C3589 + C92062 * C3593) * C92110) *
                C92186) *
               C92351 +
           (((C36216 * C1392 + C92062 * C1404) * C244 +
             (C36216 * C1543 + C92062 * C1551) * C92110) *
                C92322 +
            ((C36216 * C11870 + C92062 * C11871) * C244 +
             (C36216 * C12072 + C92062 * C12073) * C92110) *
                C92186) *
               C80243) *
              C92099 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C36216 * C107 + C92062 * C113) * C1534 +
            (C36216 * C245 + C92062 * C251) * C1383 - C41107 * C1535 -
            C41316 * C1384 + C41109 * C1536 + C41317 * C1385) *
               C92322 +
           (C36692 * C1534 + C36838 * C1383 - C38977 * C1535 - C39144 * C1384 +
            C40320 * C1536 + C40492 * C1385) *
               C92186) *
              C92350 +
          ((C41107 * C1534 + C41316 * C1383 - C41109 * C1535 - C41317 * C1384 +
            C41115 * C1536 + C41318 * C1385) *
               C92322 +
           (C38977 * C1534 + C39144 * C1383 - C40320 * C1535 - C40492 * C1384 +
            C41113 * C1536 + C41319 * C1385) *
               C92186) *
              C92351 +
          ((C41109 * C1534 + C41317 * C1383 - C41115 * C1535 - C41318 * C1384 +
            C71704 * C1536 + C71821 * C1385) *
               C92322 +
           (C40320 * C1534 + C40492 * C1383 - C41113 * C1535 - C41319 * C1384 +
            (C36216 * C41085 + C92062 * C41086) * C1536 +
            (C36216 * C41305 + C92062 * C41306) * C1385) *
               C92186) *
              C80243) *
         C92099 * C92078) /
            (p * q * std::sqrt(p + q));
    d2eeyx[57] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15033 * C107 + C92322 * C308 + C15034 * C805 + C92186 * C1022) *
                C801 +
            (C15033 * C117 + C92322 * C314 + C15034 * C813 + C92186 * C1030) *
                C92078) *
               C92350 +
           ((C26974 + C26975) * C801 + (C26976 + C26977) * C92078) * C92351 +
           ((C26985 + C26984) * C801 + (C26983 + C26982) * C92078) * C80243) *
              C92062 * C92110 * C798 -
          (((C15034 * C5787 + C92186 * C6050 + C15033 * C5783 +
             C92322 * C6049) *
                C92078 +
            (C15034 * C5775 + C92186 * C6044 + C15033 * C5773 +
             C92322 * C6043) *
                C801) *
               C80243 +
           ((C30497 + C30496) * C92078 + (C30495 + C30494) * C801) * C92351 +
           ((C15034 * C822 + C92186 * C1031 + C15033 * C813 + C92322 * C1030) *
                C92078 +
            (C15034 * C806 + C92186 * C1023 + C15033 * C805 + C92322 * C1022) *
                C801) *
               C92350) *
              C92062 * C92110 * C799 +
          (((C15033 * C806 + C92322 * C1023 + C15034 * C4882 + C92186 * C5218) *
                C801 +
            (C15033 * C822 + C92322 * C1031 + C15034 * C4886 + C92186 * C5222) *
                C92078) *
               C92350 +
           ((C15033 * C5772 + C92322 * C6042 + C15034 * C8536 +
             C92186 * C8894) *
                C801 +
            (C15033 * C5778 + C92322 * C6048 + C15034 * C8540 +
             C92186 * C8896) *
                C92078) *
               C92351 +
           ((C15033 * C5775 + C92322 * C6044 + C15034 * C37227 +
             C92186 * C37385) *
                C801 +
            (C15033 * C5787 + C92322 * C6050 + C15034 * C37229 +
             C92186 * C37386) *
                C92078) *
               C80243) *
              C92062 * C92110 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C15033 * C107 + C92322 * C308 + C15034 * C805 + C92186 * C1022) *
               C104 +
           (C15033 * C117 + C92322 * C314 + C15034 * C813 + C92186 * C1030) *
               C93 -
           (C15060 + C15061) * C105 - (C15062 + C15063) * C94 + C15072 * C106 +
           C15073 * C95) *
              C92350 +
          ((C26974 + C26975) * C104 + (C26976 + C26977) * C93 - C29264 * C105 -
           C29265 * C94 + (C18289 + C18290) * C106 + (C18291 + C18292) * C95) *
              C92351 +
          ((C26985 + C26984) * C104 + (C26983 + C26982) * C93 -
           (C26980 + C26981) * C105 - (C26978 + C26979) * C94 +
           (C15033 * C1392 + C92322 * C1609 + C15034 * C11870 +
            C92186 * C12172) *
               C106 +
           (C15033 * C1408 + C92322 * C1617 + C15034 * C11872 +
            C92186 * C12173) *
               C95) *
              C80243) *
         C92062 * C92110 * C92099) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C15033 * C107 + C92322 * C308 + C15034 * C805 + C92186 * C1022) *
                C801 +
            (C15033 * C117 + C92322 * C314 + C15034 * C813 + C92186 * C1030) *
                C92078) *
               C92350 +
           ((C26974 + C26975) * C801 + (C26976 + C26977) * C92078) * C92351 +
           C86744 * C80243) *
              C92062 * C1383 -
          (((C86740 + C86741) * C92078 + (C86742 + C86743) * C801) * C80243 +
           ((C26982 + C26983) * C92078 + (C26984 + C26985) * C801) * C92351 +
           ((C26977 + C26976) * C92078 + (C26975 + C26974) * C801) * C92350) *
              C92062 * C1384 +
          (C86744 * C92350 +
           ((C86743 + C86742) * C801 + (C86741 + C86740) * C92078) * C92351 +
           ((C15033 * C10962 + C92322 * C11300 + C15034 * C41085 +
             C92186 * C41393) *
                C801 +
            (C15033 * C10970 + C92322 * C11304 + C15034 * C41087 +
             C92186 * C41394) *
                C92078) *
               C80243) *
              C92062 * C1385) *
         C92099) /
            (p * q * std::sqrt(p + q));
    d2eeyy[57] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C15033 * C107 + C92322 * C308 + C15034 * C805 + C92186 * C1022) *
               C884 +
           (C15033 * C182 + C92322 * C394 + C15034 * C890 + C92186 * C1085) *
               C798 -
           (C15034 * C806 + C92186 * C1023 + C15033 * C805 + C92322 * C1022) *
               C885 -
           (C15034 * C891 + C92186 * C1086 + C15033 * C890 + C92322 * C1085) *
               C799 +
           (C15033 * C806 + C92322 * C1023 + C15034 * C4882 + C92186 * C5218) *
               C886 +
           (C15033 * C891 + C92322 * C1086 + C15034 * C5012 + C92186 * C5299) *
               C800) *
              C92350 +
          ((C26974 + C26975) * C884 + (C27096 + C27097) * C798 -
           (C30495 + C30494) * C885 - (C30632 + C30633) * C799 +
           (C15033 * C5772 + C92322 * C6042 + C15034 * C8536 + C92186 * C8894) *
               C886 +
           (C15033 * C5870 + C92322 * C6128 + C15034 * C8666 + C92186 * C8996) *
               C800) *
              C92351 +
          ((C26985 + C26984) * C884 + (C27101 + C27100) * C798 -
           (C15034 * C5775 + C92186 * C6044 + C15033 * C5773 + C92322 * C6043) *
               C885 -
           (C15034 * C5873 + C92186 * C6130 + C15033 * C5871 + C92322 * C6129) *
               C799 +
           (C15033 * C5775 + C92322 * C6044 + C15034 * C37227 +
            C92186 * C37385) *
               C886 +
           (C15033 * C5873 + C92322 * C6130 + C15034 * C37281 +
            C92186 * C37437) *
               C800) *
              C80243) *
         C92062 * C92078 * C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15033 * C107 + C92322 * C308 + C15034 * C805 + C92186 * C1022) *
                C181 +
            (C15033 * C182 + C92322 * C394 + C15034 * C890 + C92186 * C1085) *
                C92099) *
               C92350 +
           ((C26974 + C26975) * C181 + (C27096 + C27097) * C92099) * C92351 +
           ((C26985 + C26984) * C181 + (C27101 + C27100) * C92099) * C80243) *
              C92062 * C93 -
          (((C27098 + C27099) * C92099 + (C26980 + C26981) * C181) * C80243 +
           C29405 * C92351 +
           ((C15162 + C15161) * C92099 + (C15060 + C15061) * C181) * C92350) *
              C92062 * C94 +
          (C15169 * C92350 +
           ((C18289 + C18290) * C181 + (C18401 + C18402) * C92099) * C92351 +
           ((C15033 * C1392 + C92322 * C1609 + C15034 * C11870 +
             C92186 * C12172) *
                C181 +
            (C15033 * C1474 + C92322 * C1675 + C15034 * C11972 +
             C92186 * C12284) *
                C92099) *
               C80243) *
              C92062 * C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C15033 * C107 + C92322 * C308 + C15034 * C805 + C92186 * C1022) *
                C181 +
            (C15033 * C182 + C92322 * C394 + C15034 * C890 + C92186 * C1085) *
                C92099) *
               C92350 +
           ((C26974 + C26975) * C181 + (C27096 + C27097) * C92099) * C92351 +
           C86828 * C80243) *
              C92062 * C92078 * C1383 -
          (((C86826 + C86827) * C92099 + (C86742 + C86743) * C181) * C80243 +
           ((C27100 + C27101) * C92099 + (C26984 + C26985) * C181) * C92351 +
           ((C27097 + C27096) * C92099 + (C26975 + C26974) * C181) * C92350) *
              C92062 * C92078 * C1384 +
          (C86828 * C92350 +
           ((C86743 + C86742) * C181 + (C86827 + C86826) * C92099) * C92351 +
           ((C15033 * C10962 + C92322 * C11300 + C15034 * C41085 +
             C92186 * C41393) *
                C181 +
            (C15033 * C11094 + C92322 * C11420 + C15034 * C41200 +
             C92186 * C41510) *
                C92099) *
               C80243) *
              C92062 * C92078 * C1385)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[57] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15033 * C107 + C92322 * C308 + C15034 * C805 + C92186 * C1022) *
                C244 +
            (C15033 * C245 + C92322 * C474 + C15034 * C956 + C92186 * C1146) *
                C92110) *
               C92350 +
           ((C26974 + C26975) * C244 + (C27213 + C27212) * C92110) * C92351 +
           ((C26985 + C26984) * C244 + (C27214 + C27215) * C92110) * C80243) *
              C92062 * C798 -
          (((C15034 * C5959 + C92186 * C6209 + C15033 * C5955 +
             C92322 * C6208) *
                C92110 +
            (C15034 * C5775 + C92186 * C6044 + C15033 * C5773 +
             C92322 * C6043) *
                C244) *
               C80243 +
           ((C30769 + C30768) * C92110 + (C30495 + C30494) * C244) * C92351 +
           ((C15034 * C957 + C92186 * C1147 + C15033 * C956 + C92322 * C1146) *
                C92110 +
            (C15034 * C806 + C92186 * C1023 + C15033 * C805 + C92322 * C1022) *
                C244) *
               C92350) *
              C92062 * C799 +
          (((C15033 * C806 + C92322 * C1023 + C15034 * C4882 + C92186 * C5218) *
                C244 +
            (C15033 * C957 + C92322 * C1147 + C15034 * C5114 + C92186 * C5378) *
                C92110) *
               C92350 +
           ((C15033 * C5772 + C92322 * C6042 + C15034 * C8536 +
             C92186 * C8894) *
                C244 +
            (C15033 * C5958 + C92322 * C6207 + C15034 * C8780 +
             C92186 * C9096) *
                C92110) *
               C92351 +
           ((C15033 * C5775 + C92322 * C6044 + C15034 * C37227 +
             C92186 * C37385) *
                C244 +
            (C15033 * C5959 + C92322 * C6209 + C15034 * C37333 +
             C92186 * C37488) *
                C92110) *
               C80243) *
              C92062 * C800) *
         C92078) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15033 * C107 + C92322 * C308 + C15034 * C805 + C92186 * C1022) *
                C244 +
            (C15033 * C245 + C92322 * C474 + C15034 * C956 + C92186 * C1146) *
                C92110) *
               C92350 +
           ((C26974 + C26975) * C244 + (C27213 + C27212) * C92110) * C92351 +
           ((C26985 + C26984) * C244 + (C27214 + C27215) * C92110) * C80243) *
              C92062 * C92099 * C93 -
          (((C27217 + C27216) * C92110 + (C26980 + C26981) * C244) * C80243 +
           (C29536 * C92110 + C29264 * C244) * C92351 +
           ((C15259 + C15258) * C92110 + (C15060 + C15061) * C244) * C92350) *
              C92062 * C92099 * C94 +
          (C15266 * C92350 +
           ((C18289 + C18290) * C244 + (C18512 + C18511) * C92110) * C92351 +
           ((C15033 * C1392 + C92322 * C1609 + C15034 * C11870 +
             C92186 * C12172) *
                C244 +
            (C15033 * C1543 + C92322 * C1732 + C15034 * C12072 +
             C92186 * C12397) *
                C92110) *
               C80243) *
              C92062 * C92099 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C15033 * C107 + C92322 * C308 + C15034 * C805 + C92186 * C1022) *
               C1534 +
           (C15033 * C245 + C92322 * C474 + C15034 * C956 + C92186 * C1146) *
               C1383 -
           (C26975 + C26974) * C1535 - (C27212 + C27213) * C1384 +
           C86728 * C1536 + C86903 * C1385) *
              C92350 +
          ((C26974 + C26975) * C1534 + (C27213 + C27212) * C1383 -
           (C26984 + C26985) * C1535 - (C27215 + C27214) * C1384 +
           (C86743 + C86742) * C1536 + (C86908 + C86909) * C1385) *
              C92351 +
          (C86728 * C1534 + C86903 * C1383 - (C86742 + C86743) * C1535 -
           (C86909 + C86908) * C1384 +
           (C15033 * C10962 + C92322 * C11300 + C15034 * C41085 +
            C92186 * C41393) *
               C1536 +
           (C15033 * C11199 + C92322 * C11519 + C15034 * C41305 +
            C92186 * C41607) *
               C1385) *
              C80243) *
         C92062 * C92099 * C92078) /
            (p * q * std::sqrt(p + q));
    d2eezx[57] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C80688 * C107 + C92350 * C555 + C80689 * C1389 +
                       C92351 * C1788 + C80690 * C1390 + C80243 * C1789) *
                          C801 +
                      (C80688 * C117 + C92350 * C561 + C80689 * C1397 +
                       C92351 * C1796 + C80690 * C1406 + C80243 * C1797) *
                          C92078) *
                         C92062 * C92322 +
                     ((C86230 + C86231 + C86232) * C801 +
                      (C86233 + C86234 + C86235) * C92078) *
                         C92062 * C92186) *
                        C92110 * C798 -
                    (((C86236 + C86237 + C86238) * C92078 +
                      (C86239 + C86240 + C86241) * C801) *
                         C92062 * C92186 +
                     ((C86235 + C86234 + C86233) * C92078 +
                      (C86232 + C86231 + C86230) * C801) *
                         C92062 * C92322) *
                        C92110 * C799 +
                    (((C86241 + C86240 + C86239) * C801 +
                      (C86238 + C86237 + C86236) * C92078) *
                         C92062 * C92322 +
                     ((C80688 * C4882 + C92350 * C5456 + C80689 * C8536 +
                       C92351 * C9196 + C80690 * C37227 + C80243 * C37539) *
                          C801 +
                      (C80688 * C4886 + C92350 * C5460 + C80689 * C8540 +
                       C92351 * C9198 + C80690 * C37229 + C80243 * C37540) *
                          C92078) *
                         C92062 * C92186) *
                        C92110 * C800)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C80688 * C107 + C92350 * C555 + C80689 * C1389 +
                      C92351 * C1788 + C80690 * C1390 + C80243 * C1789) *
                         C104 +
                     (C80688 * C117 + C92350 * C561 + C80689 * C1397 +
                      C92351 * C1796 + C80690 * C1406 + C80243 * C1797) *
                         C93 -
                     (C80716 + C80717 + C80718) * C105 -
                     (C80719 + C80720 + C80721) * C94 +
                     (C80722 + C80723 + C80724) * C106 +
                     (C80725 + C80726 + C80727) * C95) *
                        C92062 * C92322 +
                    ((C80688 * C805 + C92350 * C1204 + C80689 * C3431 +
                      C92351 * C3875 + C80690 * C5773 + C80243 * C6289) *
                         C104 +
                     (C80688 * C813 + C92350 * C1212 + C80689 * C3439 +
                      C92351 * C3879 + C80690 * C5783 + C80243 * C6295) *
                         C93 -
                     (C82980 + C82979 + C82978) * C105 -
                     (C82983 + C82982 + C82981) * C94 +
                     (C80688 * C803 + C92350 * C1202 + C80689 * C3433 +
                      C92351 * C3877 + C80690 * C11870 + C80243 * C12506) *
                         C106 +
                     (C80688 * C811 + C92350 * C1210 + C80689 * C3441 +
                      C92351 * C3881 + C80690 * C11872 + C80243 * C12507) *
                         C95) *
                        C92062 * C92186) *
                   C92110 * C92099) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C80688 * C107 + C92350 * C555 + C80689 * C1389 +
                       C92351 * C1788 + C80690 * C1390 + C80243 * C1789) *
                          C801 +
                      (C80688 * C117 + C92350 * C561 + C80689 * C1397 +
                       C92351 * C1796 + C80690 * C1406 + C80243 * C1797) *
                          C92078) *
                         C92062 * C92322 +
                     ((C86230 + C86231 + C86232) * C801 +
                      (C86233 + C86234 + C86235) * C92078) *
                         C92062 * C92186) *
                        C1383 -
                    (((C80690 * C13853 + C80243 * C14527 + C80689 * C5783 +
                       C92351 * C6295 + C80688 * C3439 + C92350 * C3879) *
                          C92078 +
                      (C80690 * C13849 + C80243 * C14525 + C80689 * C5773 +
                       C92351 * C6289 + C80688 * C3431 + C92350 * C3875) *
                          C801) *
                         C92062 * C92186 +
                     ((C80690 * C10965 + C80243 * C11613 + C80689 * C1406 +
                       C92351 * C1797 + C80688 * C1397 + C92350 * C1796) *
                          C92078 +
                      (C80690 * C10961 + C80243 * C11609 + C80689 * C1390 +
                       C92351 * C1789 + C80688 * C1389 + C92350 * C1788) *
                          C801) *
                         C92062 * C92322) *
                        C1384 +
                    (((C80688 * C1390 + C92350 * C1789 + C80689 * C10961 +
                       C92351 * C11609 + C80690 * C10962 + C80243 * C11610) *
                          C801 +
                      (C80688 * C1406 + C92350 * C1797 + C80689 * C10965 +
                       C92351 * C11613 + C80690 * C10970 + C80243 * C11614) *
                          C92078) *
                         C92062 * C92322 +
                     ((C80688 * C5773 + C92350 * C6289 + C80689 * C13849 +
                       C92351 * C14525 + C80690 * C41085 + C80243 * C41701) *
                          C801 +
                      (C80688 * C5783 + C92350 * C6295 + C80689 * C13853 +
                       C92351 * C14527 + C80690 * C41087 + C80243 * C41702) *
                          C92078) *
                         C92062 * C92186) *
                        C1385) *
                   C92099) /
                      (p * q * std::sqrt(p + q));
    d2eezy[57] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C80688 * C107 + C92350 * C555 + C80689 * C1389 +
                      C92351 * C1788 + C80690 * C1390 + C80243 * C1789) *
                         C884 +
                     (C80688 * C182 + C92350 * C641 + C80689 * C1471 +
                      C92351 * C1854 + C80690 * C1472 + C80243 * C1855) *
                         C798 -
                     (C86232 + C86231 + C86230) * C885 -
                     (C86328 + C86329 + C86330) * C799 +
                     (C86241 + C86240 + C86239) * C886 +
                     (C86331 + C86332 + C86333) * C800) *
                        C92062 * C92322 +
                    ((C86230 + C86231 + C86232) * C884 +
                     (C86330 + C86329 + C86328) * C798 -
                     (C86239 + C86240 + C86241) * C885 -
                     (C86333 + C86332 + C86331) * C799 +
                     (C80688 * C4882 + C92350 * C5456 + C80689 * C8536 +
                      C92351 * C9196 + C80690 * C37227 + C80243 * C37539) *
                         C886 +
                     (C80688 * C5012 + C92350 * C5578 + C80689 * C8666 +
                      C92351 * C9318 + C80690 * C37281 + C80243 * C37591) *
                         C800) *
                        C92062 * C92186) *
                   C92078 * C92110) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C80688 * C107 + C92350 * C555 + C80689 * C1389 +
                       C92351 * C1788 + C80690 * C1390 + C80243 * C1789) *
                          C181 +
                      (C80688 * C182 + C92350 * C641 + C80689 * C1471 +
                       C92351 * C1854 + C80690 * C1472 + C80243 * C1855) *
                          C92099) *
                         C92062 * C92322 +
                     ((C80688 * C805 + C92350 * C1204 + C80689 * C3431 +
                       C92351 * C3875 + C80690 * C5773 + C80243 * C6289) *
                          C181 +
                      (C80688 * C890 + C92350 * C1267 + C80689 * C3513 +
                       C92351 * C3949 + C80690 * C5871 + C80243 * C6375) *
                          C92099) *
                         C92062 * C92186) *
                        C93 -
                    (((C83088 + C83089 + C83090) * C92099 +
                      (C82980 + C82979 + C82978) * C181) *
                         C92062 * C92186 +
                     ((C80816 + C80815 + C80814) * C92099 +
                      (C80716 + C80717 + C80718) * C181) *
                         C92062 * C92322) *
                        C94 +
                    (((C80722 + C80723 + C80724) * C181 +
                      (C80819 + C80818 + C80817) * C92099) *
                         C92062 * C92322 +
                     ((C80688 * C803 + C92350 * C1202 + C80689 * C3433 +
                       C92351 * C3877 + C80690 * C11870 + C80243 * C12506) *
                          C181 +
                      (C80688 * C888 + C92350 * C1271 + C80689 * C3515 +
                       C92351 * C3951 + C80690 * C11972 + C80243 * C12624) *
                          C92099) *
                         C92062 * C92186) *
                        C95) *
                   C92110) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C80688 * C107 + C92350 * C555 + C80689 * C1389 +
                       C92351 * C1788 + C80690 * C1390 + C80243 * C1789) *
                          C181 +
                      (C80688 * C182 + C92350 * C641 + C80689 * C1471 +
                       C92351 * C1854 + C80690 * C1472 + C80243 * C1855) *
                          C92099) *
                         C92062 * C92322 +
                     ((C86230 + C86231 + C86232) * C181 +
                      (C86330 + C86329 + C86328) * C92099) *
                         C92062 * C92186) *
                        C92078 * C1383 -
                    (((C80690 * C13967 + C80243 * C14627 + C80689 * C5871 +
                       C92351 * C6375 + C80688 * C3513 + C92350 * C3949) *
                          C92099 +
                      (C80690 * C13849 + C80243 * C14525 + C80689 * C5773 +
                       C92351 * C6289 + C80688 * C3431 + C92350 * C3875) *
                          C181) *
                         C92062 * C92186 +
                     ((C80690 * C11093 + C80243 * C11691 + C80689 * C1472 +
                       C92351 * C1855 + C80688 * C1471 + C92350 * C1854) *
                          C92099 +
                      (C80690 * C10961 + C80243 * C11609 + C80689 * C1390 +
                       C92351 * C1789 + C80688 * C1389 + C92350 * C1788) *
                          C181) *
                         C92062 * C92322) *
                        C92078 * C1384 +
                    (((C80688 * C1390 + C92350 * C1789 + C80689 * C10961 +
                       C92351 * C11609 + C80690 * C10962 + C80243 * C11610) *
                          C181 +
                      (C80688 * C1472 + C92350 * C1855 + C80689 * C11093 +
                       C92351 * C11691 + C80690 * C11094 + C80243 * C11692) *
                          C92099) *
                         C92062 * C92322 +
                     ((C80688 * C5773 + C92350 * C6289 + C80689 * C13849 +
                       C92351 * C14525 + C80690 * C41085 + C80243 * C41701) *
                          C181 +
                      (C80688 * C5871 + C92350 * C6375 + C80689 * C13967 +
                       C92351 * C14627 + C80690 * C41200 + C80243 * C41777) *
                          C92099) *
                         C92062 * C92186) *
                        C92078 * C1385)) /
                      (p * q * std::sqrt(p + q));
    d2eezz[57] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C80688 * C107 + C92350 * C555 + C80689 * C1389 +
                       C92351 * C1788 + C80690 * C1390 + C80243 * C1789) *
                          C244 +
                      (C80688 * C245 + C92350 * C719 + C80689 * C1540 +
                       C92351 * C1909 + C80690 * C1541 + C80243 * C1910) *
                          C92110) *
                         C92062 * C92322 +
                     ((C86230 + C86231 + C86232) * C244 +
                      (C86420 + C86421 + C86422) * C92110) *
                         C92062 * C92186) *
                        C798 -
                    (((C86423 + C86424 + C86425) * C92110 +
                      (C86239 + C86240 + C86241) * C244) *
                         C92062 * C92186 +
                     ((C86422 + C86421 + C86420) * C92110 +
                      (C86232 + C86231 + C86230) * C244) *
                         C92062 * C92322) *
                        C799 +
                    (((C86241 + C86240 + C86239) * C244 +
                      (C86425 + C86424 + C86423) * C92110) *
                         C92062 * C92322 +
                     ((C80688 * C4882 + C92350 * C5456 + C80689 * C8536 +
                       C92351 * C9196 + C80690 * C37227 + C80243 * C37539) *
                          C244 +
                      (C80688 * C5114 + C92350 * C5669 + C80689 * C8780 +
                       C92351 * C9424 + C80690 * C37333 + C80243 * C37642) *
                          C92110) *
                         C92062 * C92186) *
                        C800) *
                   C92078) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C80688 * C107 + C92350 * C555 + C80689 * C1389 +
                       C92351 * C1788 + C80690 * C1390 + C80243 * C1789) *
                          C244 +
                      (C80688 * C245 + C92350 * C719 + C80689 * C1540 +
                       C92351 * C1909 + C80690 * C1541 + C80243 * C1910) *
                          C92110) *
                         C92062 * C92322 +
                     ((C80688 * C805 + C92350 * C1204 + C80689 * C3431 +
                       C92351 * C3875 + C80690 * C5773 + C80243 * C6289) *
                          C244 +
                      (C80688 * C956 + C92350 * C1328 + C80689 * C3587 +
                       C92351 * C4019 + C80690 * C5955 + C80243 * C6453) *
                          C92110) *
                         C92062 * C92186) *
                        C92099 * C93 -
                    (((C83195 + C83196 + C83197) * C92110 +
                      (C82980 + C82979 + C82978) * C244) *
                         C92062 * C92186 +
                     ((C80908 + C80907 + C80906) * C92110 +
                      (C80716 + C80717 + C80718) * C244) *
                         C92062 * C92322) *
                        C92099 * C94 +
                    (((C80722 + C80723 + C80724) * C244 +
                      (C80911 + C80910 + C80909) * C92110) *
                         C92062 * C92322 +
                     ((C80688 * C803 + C92350 * C1202 + C80689 * C3433 +
                       C92351 * C3877 + C80690 * C11870 + C80243 * C12506) *
                          C244 +
                      (C80688 * C954 + C92350 * C1326 + C80689 * C3589 +
                       C92351 * C4021 + C80690 * C12072 + C80243 * C12732) *
                          C92110) *
                         C92062 * C92186) *
                        C92099 * C95)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((C80688 * C107 + C92350 * C555 + C80689 * C1389 +
                      C92351 * C1788 + C80690 * C1390 + C80243 * C1789) *
                         C1534 +
                     (C80688 * C245 + C92350 * C719 + C80689 * C1540 +
                      C92351 * C1909 + C80690 * C1541 + C80243 * C1910) *
                         C1383 -
                     (C80690 * C10961 + C80243 * C11609 + C80689 * C1390 +
                      C92351 * C1789 + C80688 * C1389 + C92350 * C1788) *
                         C1535 -
                     (C80690 * C11197 + C80243 * C11768 + C80689 * C1541 +
                      C92351 * C1910 + C80688 * C1540 + C92350 * C1909) *
                         C1384 +
                     (C80688 * C1390 + C92350 * C1789 + C80689 * C10961 +
                      C92351 * C11609 + C80690 * C10962 + C80243 * C11610) *
                         C1536 +
                     (C80688 * C1541 + C92350 * C1910 + C80689 * C11197 +
                      C92351 * C11768 + C80690 * C11199 + C80243 * C11769) *
                         C1385) *
                        C92062 * C92322 +
                    ((C86230 + C86231 + C86232) * C1534 +
                     (C86420 + C86421 + C86422) * C1383 -
                     (C80690 * C13849 + C80243 * C14525 + C80689 * C5773 +
                      C92351 * C6289 + C80688 * C3431 + C92350 * C3875) *
                         C1535 -
                     (C80690 * C14075 + C80243 * C14727 + C80689 * C5955 +
                      C92351 * C6453 + C80688 * C3587 + C92350 * C4019) *
                         C1384 +
                     (C80688 * C5773 + C92350 * C6289 + C80689 * C13849 +
                      C92351 * C14525 + C80690 * C41085 + C80243 * C41701) *
                         C1536 +
                     (C80688 * C5955 + C92350 * C6453 + C80689 * C14075 +
                      C92351 * C14727 + C80690 * C41305 + C80243 * C41852) *
                         C1385) *
                        C92062 * C92186) *
                   C92099 * C92078) /
                      (p * q * std::sqrt(p + q));
    d2eexx[58] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C36216 * C107 + C92062 * C113) * C1987 +
                       (C36216 * C117 + C92062 * C125) * C1983 -
                       (C36216 * C108 + C92062 * C114) * C1988 -
                       (C36216 * C118 + C92062 * C126) * C1984) *
                          C92322 +
                      (C37710 + C37711 - C37734 - C37735) * C92186) *
                         C92350 +
                     ((C42870 + C42871 - C42886 - C42887) * C92322 +
                      (C41952 + C41953 - C41968 - C41969) * C92186) *
                         C92351 +
                     ((C42876 + C42877 - C42888 - C42889) * C92322 +
                      (C41958 + C41959 - C41970 - C41971) * C92186) *
                         C80243) *
                        C2709 +
                    (((C42886 - (C42871 + C42870) + C42887) * C92322 +
                      (C41968 - (C41953 + C41952) + C41969) * C92186) *
                         C92350 +
                     ((C42888 - (C42877 + C42876) + C42889) * C92322 +
                      (C41970 - (C41959 + C41958) + C41971) * C92186) *
                         C92351 +
                     ((C72816 - (C72809 + C72808) + C72817) * C92322 +
                      ((C36216 * C13850 + C92062 * C13852) * C1988 -
                       (C41112 * C1983 + C41113 * C1987) +
                       (C36216 * C13854 + C92062 * C13856) * C1984) *
                          C92186) *
                         C80243) *
                        C2710) *
                   C92099) /
                  (p * q * std::sqrt(p + q));
    d2eexy[58] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C36216 * C107 + C92062 * C113) * C181 +
              (C36216 * C182 + C92062 * C188) * C92099) *
                 C92322 +
             (C36692 * C181 + C36770 * C92099) * C92186) *
                C92350 +
            ((C41203 + C41224) * C92322 + (C41206 + C41207) * C92186) * C92351 +
            C86579 * C80243) *
               C1983 -
           (((C42988 + C42989) * C92186 + (C43000 + C42992) * C92322) * C80243 +
            ((C42993 + C42994) * C92186 + (C43001 + C42997) * C92322) * C92351 +
            ((C37812 * C92099 + C37728 * C181) * C92186 +
             ((C36216 * C183 + C92062 * C189) * C92099 +
              (C36216 * C108 + C92062 * C114) * C181) *
                 C92322) *
                C92350) *
               C1984) *
              C2709 +
          ((((C42997 + C43001) * C92322 + (C42994 + C42993) * C92186) * C92350 +
            ((C42992 + C43000) * C92322 + (C42989 + C42988) * C92186) * C92351 +
            ((C72886 + C72888) * C92322 +
             ((C36216 * C13850 + C92062 * C13852) * C181 +
              (C36216 * C13968 + C92062 * C13970) * C92099) *
                 C92186) *
                C80243) *
               C1984 -
           (((C41227 + C41215) * C92186 + (C41228 + C41218) * C92322) * C80243 +
            ((C41212 + C41211) * C92186 + (C41225 + C41208) * C92322) * C92351 +
            ((C41207 + C41206) * C92186 + (C41224 + C41203) * C92322) *
                C92350) *
               C1983) *
              C2710)) /
        (p * q * std::sqrt(p + q));
    d2eexz[58] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C36216 * C107 + C92062 * C113) * C2849 +
                       (C36216 * C245 + C92062 * C251) * C2709 -
                       C41107 * C2850 - C41316 * C2710) *
                          C92322 +
                      (C39129 + C39130 - C39131 - C39147) * C92186) *
                         C92350 +
                     ((C41107 * C2849 + C41316 * C2709 - C41109 * C2850 -
                       C41317 * C2710) *
                          C92322 +
                      (C44039 + C44040 - C44041 - C44042) * C92186) *
                         C92351 +
                     ((C41109 * C2849 + C41317 * C2709 - C41115 * C2850 -
                       C41318 * C2710) *
                          C92322 +
                      (C44043 + C44044 - C44045 - C44046) * C92186) *
                         C80243) *
                        C92099 * C1983 +
                    (((C42882 * C2850 -
                       ((C36216 * C246 + C92062 * C252) * C2709 +
                        (C36216 * C108 + C92062 * C114) * C2849) +
                       C43104 * C2710) *
                          C92322 +
                      (C41964 * C2850 - (C37890 * C2709 + C37728 * C2849) +
                       C42180 * C2710) *
                          C92186) *
                         C92350 +
                     ((C42884 * C2850 - (C43104 * C2709 + C42882 * C2849) +
                       C43105 * C2710) *
                          C92322 +
                      (C41966 * C2850 - (C42180 * C2709 + C41964 * C2849) +
                       C42181 * C2710) *
                          C92186) *
                         C92351 +
                     ((C72814 * C2850 - (C43105 * C2709 + C42884 * C2849) +
                       C72957 * C2710) *
                          C92322 +
                      ((C36216 * C13850 + C92062 * C13852) * C2850 -
                       (C42181 * C2709 + C41966 * C2849) +
                       (C36216 * C14076 + C92062 * C14078) * C2710) *
                          C92186) *
                         C80243) *
                        C92099 * C1984)) /
                  (p * q * std::sqrt(p + q));
    d2eeyx[58] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C15033 * C107 + C92322 * C308 + C15034 * C805 + C92186 * C1022) *
                C1987 +
            (C15033 * C117 + C92322 * C314 + C15034 * C813 + C92186 * C1030) *
                C1983 -
            (C15060 + C15061) * C1988 - (C15062 + C15063) * C1984) *
               C92350 +
           ((C26974 + C26975) * C1987 + (C26976 + C26977) * C1983 -
            C29264 * C1988 - C29265 * C1984) *
               C92351 +
           (C86728 * C1987 + C86729 * C1983 - (C26980 + C26981) * C1988 -
            (C26978 + C26979) * C1984) *
               C80243) *
              C92062 * C2709 +
          ((C29266 * C1988 -
            ((C26977 + C26976) * C1983 + (C26975 + C26974) * C1987) +
            C29267 * C1984) *
               C92350 +
           ((C26981 + C26980) * C1988 -
            ((C26982 + C26983) * C1983 + (C26984 + C26985) * C1987) +
            (C26979 + C26978) * C1984) *
               C92351 +
           ((C15033 * C10960 + C92322 * C11298 + C15034 * C13850 +
             C92186 * C14184) *
                C1988 -
            ((C86740 + C86741) * C1983 + (C86742 + C86743) * C1987) +
            (C15033 * C10964 + C92322 * C11302 + C15034 * C13854 +
             C92186 * C14186) *
                C1984) *
               C80243) *
              C92062 * C2710) *
         C92099) /
        (p * q * std::sqrt(p + q));
    d2eeyy[58] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C15033 * C107 + C92322 * C308 + C15034 * C805 + C92186 * C1022) *
                 C181 +
             (C15033 * C182 + C92322 * C394 + C15034 * C890 + C92186 * C1085) *
                 C92099) *
                C92350 +
            ((C26974 + C26975) * C181 + (C27096 + C27097) * C92099) * C92351 +
            C86828 * C80243) *
               C92062 * C1983 -
           (((C27098 + C27099) * C92099 + (C26980 + C26981) * C181) * C80243 +
            C29405 * C92351 +
            ((C15162 + C15161) * C92099 + (C15060 + C15061) * C181) * C92350) *
               C92062 * C1984) *
              C2709 +
          ((C29404 * C92350 +
            ((C26981 + C26980) * C181 + (C27099 + C27098) * C92099) * C92351 +
            ((C15033 * C10960 + C92322 * C11298 + C15034 * C13850 +
              C92186 * C14184) *
                 C181 +
             (C15033 * C11092 + C92322 * C11418 + C15034 * C13968 +
              C92186 * C14306) *
                 C92099) *
                C80243) *
               C92062 * C1984 -
           (((C86826 + C86827) * C92099 + (C86742 + C86743) * C181) * C80243 +
            ((C27100 + C27101) * C92099 + (C26984 + C26985) * C181) * C92351 +
            ((C27097 + C27096) * C92099 + (C26975 + C26974) * C181) * C92350) *
               C92062 * C1983) *
              C2710)) /
        (p * q * std::sqrt(p + q));
    d2eeyz[58] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C15033 * C107 + C92322 * C308 + C15034 * C805 + C92186 * C1022) *
                C2849 +
            (C15033 * C245 + C92322 * C474 + C15034 * C956 + C92186 * C1146) *
                C2709 -
            (C26975 + C26974) * C2850 - (C27212 + C27213) * C2710) *
               C92350 +
           ((C26974 + C26975) * C2849 + (C27213 + C27212) * C2709 -
            (C26984 + C26985) * C2850 - (C27215 + C27214) * C2710) *
               C92351 +
           (C86728 * C2849 + C86903 * C2709 - (C86742 + C86743) * C2850 -
            (C86909 + C86908) * C2710) *
               C80243) *
              C92062 * C92099 * C1983 +
          ((C29266 * C2850 -
            ((C15259 + C15258) * C2709 + (C15060 + C15061) * C2849) +
            C29537 * C2710) *
               C92350 +
           ((C26981 + C26980) * C2850 - (C29536 * C2709 + C29264 * C2849) +
            (C27216 + C27217) * C2710) *
               C92351 +
           ((C15033 * C10960 + C92322 * C11298 + C15034 * C13850 +
             C92186 * C14184) *
                C2850 -
            ((C27217 + C27216) * C2709 + (C26980 + C26981) * C2849) +
            (C15033 * C11198 + C92322 * C11520 + C15034 * C14076 +
             C92186 * C14420) *
                C2710) *
               C80243) *
              C92062 * C92099 * C1984)) /
        (p * q * std::sqrt(p + q));
    d2eezx[58] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C80688 * C107 + C92350 * C555 + C80689 * C1389 +
                       C92351 * C1788 + C80690 * C1390 + C80243 * C1789) *
                          C1987 +
                      (C80688 * C117 + C92350 * C561 + C80689 * C1397 +
                       C92351 * C1796 + C80690 * C1406 + C80243 * C1797) *
                          C1983 -
                      (C80716 + C80717 + C80718) * C1988 -
                      (C80719 + C80720 + C80721) * C1984) *
                         C92062 * C92322 +
                     ((C86230 + C86231 + C86232) * C1987 +
                      (C86233 + C86234 + C86235) * C1983 -
                      (C82980 + C82979 + C82978) * C1988 -
                      (C82983 + C82982 + C82981) * C1984) *
                         C92062 * C92186) *
                        C2709 +
                    (((C83920 + C83921 + C83922) * C1988 -
                      ((C80690 * C10965 + C80243 * C11613 + C80689 * C1406 +
                        C92351 * C1797 + C80688 * C1397 + C92350 * C1796) *
                           C1983 +
                       (C80690 * C10961 + C80243 * C11609 + C80689 * C1390 +
                        C92351 * C1789 + C80688 * C1389 + C92350 * C1788) *
                           C1987) +
                      (C83923 + C83924 + C83925) * C1984) *
                         C92062 * C92322 +
                     ((C80688 * C3432 + C92350 * C3876 + C80689 * C5774 +
                       C92351 * C6290 + C80690 * C13850 + C80243 * C14526) *
                          C1988 -
                      ((C80690 * C13853 + C80243 * C14527 + C80689 * C5783 +
                        C92351 * C6295 + C80688 * C3439 + C92350 * C3879) *
                           C1983 +
                       (C80690 * C13849 + C80243 * C14525 + C80689 * C5773 +
                        C92351 * C6289 + C80688 * C3431 + C92350 * C3875) *
                           C1987) +
                      (C80688 * C3440 + C92350 * C3880 + C80689 * C5784 +
                       C92351 * C6296 + C80690 * C13854 + C80243 * C14528) *
                          C1984) *
                         C92062 * C92186) *
                        C2710) *
                   C92099) /
                  (p * q * std::sqrt(p + q));
    d2eezy[58] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C80688 * C107 + C92350 * C555 + C80689 * C1389 +
                        C92351 * C1788 + C80690 * C1390 + C80243 * C1789) *
                           C181 +
                       (C80688 * C182 + C92350 * C641 + C80689 * C1471 +
                        C92351 * C1854 + C80690 * C1472 + C80243 * C1855) *
                           C92099) *
                          C92062 * C92322 +
                      ((C86230 + C86231 + C86232) * C181 +
                       (C86330 + C86329 + C86328) * C92099) *
                          C92062 * C92186) *
                         C1983 -
                     (((C83088 + C83089 + C83090) * C92099 +
                       (C82980 + C82979 + C82978) * C181) *
                          C92062 * C92186 +
                      ((C80816 + C80815 + C80814) * C92099 +
                       (C80716 + C80717 + C80718) * C181) *
                          C92062 * C92322) *
                         C1984) *
                        C2709 +
                    ((((C83920 + C83921 + C83922) * C181 +
                       (C84030 + C84031 + C84032) * C92099) *
                          C92062 * C92322 +
                      ((C80688 * C3432 + C92350 * C3876 + C80689 * C5774 +
                        C92351 * C6290 + C80690 * C13850 + C80243 * C14526) *
                           C181 +
                       (C80688 * C3514 + C92350 * C3950 + C80689 * C5872 +
                        C92351 * C6376 + C80690 * C13968 + C80243 * C14628) *
                           C92099) *
                          C92062 * C92186) *
                         C1984 -
                     (((C80690 * C13967 + C80243 * C14627 + C80689 * C5871 +
                        C92351 * C6375 + C80688 * C3513 + C92350 * C3949) *
                           C92099 +
                       (C80690 * C13849 + C80243 * C14525 + C80689 * C5773 +
                        C92351 * C6289 + C80688 * C3431 + C92350 * C3875) *
                           C181) *
                          C92062 * C92186 +
                      ((C80690 * C11093 + C80243 * C11691 + C80689 * C1472 +
                        C92351 * C1855 + C80688 * C1471 + C92350 * C1854) *
                           C92099 +
                       (C80690 * C10961 + C80243 * C11609 + C80689 * C1390 +
                        C92351 * C1789 + C80688 * C1389 + C92350 * C1788) *
                           C181) *
                          C92062 * C92322) *
                         C1983) *
                        C2710)) /
                  (p * q * std::sqrt(p + q));
    d2eezz[58] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C80688 * C107 + C92350 * C555 + C80689 * C1389 +
                       C92351 * C1788 + C80690 * C1390 + C80243 * C1789) *
                          C2849 +
                      (C80688 * C245 + C92350 * C719 + C80689 * C1540 +
                       C92351 * C1909 + C80690 * C1541 + C80243 * C1910) *
                          C2709 -
                      (C80690 * C10961 + C80243 * C11609 + C80689 * C1390 +
                       C92351 * C1789 + C80688 * C1389 + C92350 * C1788) *
                          C2850 -
                      (C80690 * C11197 + C80243 * C11768 + C80689 * C1541 +
                       C92351 * C1910 + C80688 * C1540 + C92350 * C1909) *
                          C2710) *
                         C92062 * C92322 +
                     ((C86230 + C86231 + C86232) * C2849 +
                      (C86420 + C86421 + C86422) * C2709 -
                      (C80690 * C13849 + C80243 * C14525 + C80689 * C5773 +
                       C92351 * C6289 + C80688 * C3431 + C92350 * C3875) *
                          C2850 -
                      (C80690 * C14075 + C80243 * C14727 + C80689 * C5955 +
                       C92351 * C6453 + C80688 * C3587 + C92350 * C4019) *
                          C2710) *
                         C92062 * C92186) *
                        C92099 * C1983 +
                    (((C83920 + C83921 + C83922) * C2850 -
                      ((C80908 + C80907 + C80906) * C2709 +
                       (C80716 + C80717 + C80718) * C2849) +
                      (C84139 + C84138 + C84137) * C2710) *
                         C92062 * C92322 +
                     ((C80688 * C3432 + C92350 * C3876 + C80689 * C5774 +
                       C92351 * C6290 + C80690 * C13850 + C80243 * C14526) *
                          C2850 -
                      ((C83195 + C83196 + C83197) * C2709 +
                       (C82980 + C82979 + C82978) * C2849) +
                      (C80688 * C3588 + C92350 * C4020 + C80689 * C5956 +
                       C92351 * C6454 + C80690 * C14076 + C80243 * C14728) *
                          C2710) *
                         C92062 * C92186) *
                        C92099 * C1984)) /
                  (p * q * std::sqrt(p + q));
    d2eexx[59] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C36216 * C107 + C92062 * C113) * C104 +
            (C36216 * C117 + C92062 * C125) * C93 -
            (C36216 * C108 + C92062 * C114) * C105 -
            (C36216 * C118 + C92062 * C126) * C94 +
            (C36216 * C109 + C92062 * C115) * C106 +
            (C36216 * C119 + C92062 * C127) * C95) *
               C92322 +
           (C36692 * C104 + C36693 * C93 - C37728 * C105 - C37729 * C94 +
            (C36216 * C803 + C92062 * C815) * C106 +
            (C36216 * C811 + C92062 * C827) * C95) *
               C92186) *
              C92350 +
          ((C41107 * C104 + C41108 * C93 - C42882 * C105 - C42883 * C94 +
            (C36216 * C1387 + C92062 * C1399) * C106 +
            (C36216 * C1395 + C92062 * C1411) * C95) *
               C92322 +
           (C38977 * C104 + C38976 * C93 - C41964 * C105 - C41965 * C94 +
            (C36216 * C3433 + C92062 * C3437) * C106 +
            (C36216 * C3441 + C92062 * C3445) * C95) *
               C92186) *
              C92351 +
          ((C41109 * C104 + C41110 * C93 - C42884 * C105 - C42885 * C94 +
            (C36216 * C1392 + C92062 * C1404) * C106 +
            (C36216 * C1408 + C92062 * C1416) * C95) *
               C92322 +
           (C40320 * C104 + C40321 * C93 - C41966 * C105 - C41967 * C94 +
            (C36216 * C11870 + C92062 * C11871) * C106 +
            (C36216 * C11872 + C92062 * C11873) * C95) *
               C92186) *
              C80243) *
         C92110 * C92099) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C36216 * C107 + C92062 * C113) * C801 +
             (C36216 * C117 + C92062 * C125) * C92078) *
                C92322 +
            (C36700 + C36701) * C92186) *
               C92350 +
           ((C41116 + C41117) * C92322 + C43820 * C92186) * C92351 +
           (C41124 * C92322 + C41098 * C92186) * C80243) *
              C92110 * C798 -
          (((C40326 + C40327) * C92186 + C43821 * C92322) * C80243 +
           (C60033 * C92186 + C43822 * C92322) * C92351 +
           ((C36703 + C36702) * C92186 + (C36701 + C36700) * C92322) * C92350) *
              C92110 * C799 +
          ((C36708 * C92322 + C36709 * C92186) * C92350 +
           (C56777 * C92322 + (C38979 + C38978) * C92186) * C92351 +
           ((C40327 + C40326) * C92322 +
            ((C36216 * C37227 + C92062 * C37228) * C801 +
             (C36216 * C37229 + C92062 * C37230) * C92078) *
                C92186) *
               C80243) *
              C92110 * C800)) /
            (p * q * std::sqrt(p + q));
    d2eexy[59] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C36216 * C107 + C92062 * C113) * C181 +
             (C36216 * C182 + C92062 * C188) * C92099) *
                C92322 +
            (C36692 * C181 + C36770 * C92099) * C92186) *
               C92350 +
           ((C41203 + C41224) * C92322 + (C41206 + C41207) * C92186) * C92351 +
           (C41229 * C92322 + C41221 * C92186) * C80243) *
              C93 -
          (((C42988 + C42989) * C92186 + (C43000 + C42992) * C92322) * C80243 +
           ((C42993 + C42994) * C92186 + (C43001 + C42997) * C92322) * C92351 +
           ((C37812 * C92099 + C37728 * C181) * C92186 +
            ((C36216 * C183 + C92062 * C189) * C92099 +
             (C36216 * C108 + C92062 * C114) * C181) *
                C92322) *
               C92350) *
              C94 +
          ((((C36216 * C109 + C92062 * C115) * C181 +
             (C36216 * C184 + C92062 * C190) * C92099) *
                C92322 +
            ((C36216 * C803 + C92062 * C815) * C181 +
             (C36216 * C888 + C92062 * C896) * C92099) *
                C92186) *
               C92350 +
           (((C36216 * C1387 + C92062 * C1399) * C181 +
             (C36216 * C1469 + C92062 * C1477) * C92099) *
                C92322 +
            ((C36216 * C3433 + C92062 * C3437) * C181 +
             (C36216 * C3515 + C92062 * C3519) * C92099) *
                C92186) *
               C92351 +
           (((C36216 * C1392 + C92062 * C1404) * C181 +
             (C36216 * C1474 + C92062 * C1482) * C92099) *
                C92322 +
            ((C36216 * C11870 + C92062 * C11871) * C181 +
             (C36216 * C11972 + C92062 * C11973) * C92099) *
                C92186) *
               C80243) *
              C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C36216 * C107 + C92062 * C113) * C884 +
            (C36216 * C182 + C92062 * C188) * C798 - C36692 * C885 -
            C36770 * C799 + C36694 * C886 + C36771 * C800) *
               C92322 +
           (C36692 * C884 + C36770 * C798 - C36694 * C885 - C36771 * C799 +
            C36696 * C886 + C36772 * C800) *
               C92186) *
              C92350 +
          ((C41107 * C884 + C41219 * C798 - C38977 * C885 - C39058 * C799 +
            C38975 * C886 + C39059 * C800) *
               C92322 +
           (C38977 * C884 + C39058 * C798 - C38975 * C885 - C39059 * C799 +
            C38973 * C886 + C39060 * C800) *
               C92186) *
              C92351 +
          ((C41109 * C884 + C41220 * C798 - C40320 * C885 - C40406 * C799 +
            C40323 * C886 + C40407 * C800) *
               C92322 +
           (C40320 * C884 + C40406 * C798 - C40323 * C885 - C40407 * C799 +
            (C36216 * C37227 + C92062 * C37228) * C886 +
            (C36216 * C37281 + C92062 * C37282) * C800) *
               C92186) *
              C80243) *
         C92078 * C92110) /
            (p * q * std::sqrt(p + q));
    d2eexz[59] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C36216 * C107 + C92062 * C113) * C244 +
             (C36216 * C245 + C92062 * C251) * C92110) *
                C92322 +
            (C36826 + C36842) * C92186) *
               C92350 +
           ((C41107 * C244 + C41316 * C92110) * C92322 +
            (C40482 + C40483) * C92186) *
               C92351 +
           ((C41109 * C244 + C41317 * C92110) * C92322 +
            (C40484 + C40494) * C92186) *
               C80243) *
              C92099 * C93 -
          (((C42183 + C42177) * C92186 +
            (C43105 * C92110 + C42884 * C244) * C92322) *
               C80243 +
           ((C42182 + C42174) * C92186 +
            (C43104 * C92110 + C42882 * C244) * C92322) *
               C92351 +
           ((C37893 + C37881) * C92186 +
            ((C36216 * C246 + C92062 * C252) * C92110 +
             (C36216 * C108 + C92062 * C114) * C244) *
                C92322) *
               C92350) *
              C92099 * C94 +
          ((((C36216 * C109 + C92062 * C115) * C244 +
             (C36216 * C247 + C92062 * C253) * C92110) *
                C92322 +
            ((C36216 * C803 + C92062 * C815) * C244 +
             (C36216 * C954 + C92062 * C962) * C92110) *
                C92186) *
               C92350 +
           (((C36216 * C1387 + C92062 * C1399) * C244 +
             (C36216 * C1538 + C92062 * C1546) * C92110) *
                C92322 +
            ((C36216 * C3433 + C92062 * C3437) * C244 +
             (C36216 * C3589 + C92062 * C3593) * C92110) *
                C92186) *
               C92351 +
           (((C36216 * C1392 + C92062 * C1404) * C244 +
             (C36216 * C1543 + C92062 * C1551) * C92110) *
                C92322 +
            ((C36216 * C11870 + C92062 * C11871) * C244 +
             (C36216 * C12072 + C92062 * C12073) * C92110) *
                C92186) *
               C80243) *
              C92099 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C36216 * C107 + C92062 * C113) * C244 +
             (C36216 * C245 + C92062 * C251) * C92110) *
                C92322 +
            (C36826 + C36842) * C92186) *
               C92350 +
           ((C41107 * C244 + C41316 * C92110) * C92322 +
            (C40482 + C40483) * C92186) *
               C92351 +
           ((C41109 * C244 + C41317 * C92110) * C92322 +
            (C40484 + C40494) * C92186) *
               C80243) *
              C798 -
          (((C40495 + C40489) * C92186 + (C40494 + C40484) * C92322) * C80243 +
           ((C40490 + C40491) * C92186 + (C40483 + C40482) * C92322) * C92351 +
           ((C36843 + C36829) * C92186 + (C36842 + C36826) * C92322) * C92350) *
              C799 +
          ((C36846 * C92322 + C36847 * C92186) * C92350 +
           (C56926 * C92322 + (C56928 + C56927) * C92186) * C92351 +
           ((C40489 + C40495) * C92322 +
            ((C36216 * C37227 + C92062 * C37228) * C244 +
             (C36216 * C37333 + C92062 * C37334) * C92110) *
                C92186) *
               C80243) *
              C800) *
         C92078) /
            (p * q * std::sqrt(p + q));
    d2eeyx[59] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C15033 * C107 + C92322 * C308 + C15034 * C805 + C92186 * C1022) *
               C104 +
           (C15033 * C117 + C92322 * C314 + C15034 * C813 + C92186 * C1030) *
               C93 -
           (C15060 + C15061) * C105 - (C15062 + C15063) * C94 + C15072 * C106 +
           C15073 * C95) *
              C92350 +
          ((C26974 + C26975) * C104 + (C26976 + C26977) * C93 - C29264 * C105 -
           C29265 * C94 + (C18289 + C18290) * C106 + (C18291 + C18292) * C95) *
              C92351 +
          ((C26985 + C26984) * C104 + (C26983 + C26982) * C93 -
           (C26980 + C26981) * C105 - (C26978 + C26979) * C94 +
           (C15033 * C1392 + C92322 * C1609 + C15034 * C11870 +
            C92186 * C12172) *
               C106 +
           (C15033 * C1408 + C92322 * C1617 + C15034 * C11872 +
            C92186 * C12173) *
               C95) *
              C80243) *
         C92062 * C92110 * C92099) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C15033 * C107 + C92322 * C308 + C15034 * C805 + C92186 * C1022) *
                C801 +
            (C15033 * C117 + C92322 * C314 + C15034 * C813 + C92186 * C1030) *
                C92078) *
               C92350 +
           ((C26974 + C26975) * C801 + (C26976 + C26977) * C92078) * C92351 +
           ((C26985 + C26984) * C801 + (C26983 + C26982) * C92078) * C80243) *
              C92062 * C92110 * C798 -
          (((C15034 * C5787 + C92186 * C6050 + C15033 * C5783 +
             C92322 * C6049) *
                C92078 +
            (C15034 * C5775 + C92186 * C6044 + C15033 * C5773 +
             C92322 * C6043) *
                C801) *
               C80243 +
           ((C30497 + C30496) * C92078 + (C30495 + C30494) * C801) * C92351 +
           ((C15034 * C822 + C92186 * C1031 + C15033 * C813 + C92322 * C1030) *
                C92078 +
            (C15034 * C806 + C92186 * C1023 + C15033 * C805 + C92322 * C1022) *
                C801) *
               C92350) *
              C92062 * C92110 * C799 +
          (((C15033 * C806 + C92322 * C1023 + C15034 * C4882 + C92186 * C5218) *
                C801 +
            (C15033 * C822 + C92322 * C1031 + C15034 * C4886 + C92186 * C5222) *
                C92078) *
               C92350 +
           ((C15033 * C5772 + C92322 * C6042 + C15034 * C8536 +
             C92186 * C8894) *
                C801 +
            (C15033 * C5778 + C92322 * C6048 + C15034 * C8540 +
             C92186 * C8896) *
                C92078) *
               C92351 +
           ((C15033 * C5775 + C92322 * C6044 + C15034 * C37227 +
             C92186 * C37385) *
                C801 +
            (C15033 * C5787 + C92322 * C6050 + C15034 * C37229 +
             C92186 * C37386) *
                C92078) *
               C80243) *
              C92062 * C92110 * C800)) /
            (p * q * std::sqrt(p + q));
    d2eeyy[59] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C15033 * C107 + C92322 * C308 + C15034 * C805 + C92186 * C1022) *
                C181 +
            (C15033 * C182 + C92322 * C394 + C15034 * C890 + C92186 * C1085) *
                C92099) *
               C92350 +
           ((C26974 + C26975) * C181 + (C27096 + C27097) * C92099) * C92351 +
           ((C26985 + C26984) * C181 + (C27101 + C27100) * C92099) * C80243) *
              C92062 * C93 -
          (((C27098 + C27099) * C92099 + (C26980 + C26981) * C181) * C80243 +
           C29405 * C92351 +
           ((C15162 + C15161) * C92099 + (C15060 + C15061) * C181) * C92350) *
              C92062 * C94 +
          (C15169 * C92350 +
           ((C18289 + C18290) * C181 + (C18401 + C18402) * C92099) * C92351 +
           ((C15033 * C1392 + C92322 * C1609 + C15034 * C11870 +
             C92186 * C12172) *
                C181 +
            (C15033 * C1474 + C92322 * C1675 + C15034 * C11972 +
             C92186 * C12284) *
                C92099) *
               C80243) *
              C92062 * C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C15033 * C107 + C92322 * C308 + C15034 * C805 + C92186 * C1022) *
               C884 +
           (C15033 * C182 + C92322 * C394 + C15034 * C890 + C92186 * C1085) *
               C798 -
           (C15034 * C806 + C92186 * C1023 + C15033 * C805 + C92322 * C1022) *
               C885 -
           (C15034 * C891 + C92186 * C1086 + C15033 * C890 + C92322 * C1085) *
               C799 +
           (C15033 * C806 + C92322 * C1023 + C15034 * C4882 + C92186 * C5218) *
               C886 +
           (C15033 * C891 + C92322 * C1086 + C15034 * C5012 + C92186 * C5299) *
               C800) *
              C92350 +
          ((C26974 + C26975) * C884 + (C27096 + C27097) * C798 -
           (C30495 + C30494) * C885 - (C30632 + C30633) * C799 +
           (C15033 * C5772 + C92322 * C6042 + C15034 * C8536 + C92186 * C8894) *
               C886 +
           (C15033 * C5870 + C92322 * C6128 + C15034 * C8666 + C92186 * C8996) *
               C800) *
              C92351 +
          ((C26985 + C26984) * C884 + (C27101 + C27100) * C798 -
           (C15034 * C5775 + C92186 * C6044 + C15033 * C5773 + C92322 * C6043) *
               C885 -
           (C15034 * C5873 + C92186 * C6130 + C15033 * C5871 + C92322 * C6129) *
               C799 +
           (C15033 * C5775 + C92322 * C6044 + C15034 * C37227 +
            C92186 * C37385) *
               C886 +
           (C15033 * C5873 + C92322 * C6130 + C15034 * C37281 +
            C92186 * C37437) *
               C800) *
              C80243) *
         C92062 * C92078 * C92110) /
            (p * q * std::sqrt(p + q));
    d2eeyz[59] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C15033 * C107 + C92322 * C308 + C15034 * C805 + C92186 * C1022) *
                C244 +
            (C15033 * C245 + C92322 * C474 + C15034 * C956 + C92186 * C1146) *
                C92110) *
               C92350 +
           ((C26974 + C26975) * C244 + (C27213 + C27212) * C92110) * C92351 +
           ((C26985 + C26984) * C244 + (C27214 + C27215) * C92110) * C80243) *
              C92062 * C92099 * C93 -
          (((C27217 + C27216) * C92110 + (C26980 + C26981) * C244) * C80243 +
           (C29536 * C92110 + C29264 * C244) * C92351 +
           ((C15259 + C15258) * C92110 + (C15060 + C15061) * C244) * C92350) *
              C92062 * C92099 * C94 +
          (C15266 * C92350 +
           ((C18289 + C18290) * C244 + (C18512 + C18511) * C92110) * C92351 +
           ((C15033 * C1392 + C92322 * C1609 + C15034 * C11870 +
             C92186 * C12172) *
                C244 +
            (C15033 * C1543 + C92322 * C1732 + C15034 * C12072 +
             C92186 * C12397) *
                C92110) *
               C80243) *
              C92062 * C92099 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C15033 * C107 + C92322 * C308 + C15034 * C805 + C92186 * C1022) *
                C244 +
            (C15033 * C245 + C92322 * C474 + C15034 * C956 + C92186 * C1146) *
                C92110) *
               C92350 +
           ((C26974 + C26975) * C244 + (C27213 + C27212) * C92110) * C92351 +
           ((C26985 + C26984) * C244 + (C27214 + C27215) * C92110) * C80243) *
              C92062 * C798 -
          (((C15034 * C5959 + C92186 * C6209 + C15033 * C5955 +
             C92322 * C6208) *
                C92110 +
            (C15034 * C5775 + C92186 * C6044 + C15033 * C5773 +
             C92322 * C6043) *
                C244) *
               C80243 +
           ((C30769 + C30768) * C92110 + (C30495 + C30494) * C244) * C92351 +
           ((C15034 * C957 + C92186 * C1147 + C15033 * C956 + C92322 * C1146) *
                C92110 +
            (C15034 * C806 + C92186 * C1023 + C15033 * C805 + C92322 * C1022) *
                C244) *
               C92350) *
              C92062 * C799 +
          (((C15033 * C806 + C92322 * C1023 + C15034 * C4882 + C92186 * C5218) *
                C244 +
            (C15033 * C957 + C92322 * C1147 + C15034 * C5114 + C92186 * C5378) *
                C92110) *
               C92350 +
           ((C15033 * C5772 + C92322 * C6042 + C15034 * C8536 +
             C92186 * C8894) *
                C244 +
            (C15033 * C5958 + C92322 * C6207 + C15034 * C8780 +
             C92186 * C9096) *
                C92110) *
               C92351 +
           ((C15033 * C5775 + C92322 * C6044 + C15034 * C37227 +
             C92186 * C37385) *
                C244 +
            (C15033 * C5959 + C92322 * C6209 + C15034 * C37333 +
             C92186 * C37488) *
                C92110) *
               C80243) *
              C92062 * C800) *
         C92078) /
            (p * q * std::sqrt(p + q));
    d2eezx[59] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((C80688 * C107 + C92350 * C555 + C80689 * C1389 +
                      C92351 * C1788 + C80690 * C1390 + C80243 * C1789) *
                         C104 +
                     (C80688 * C117 + C92350 * C561 + C80689 * C1397 +
                      C92351 * C1796 + C80690 * C1406 + C80243 * C1797) *
                         C93 -
                     (C80716 + C80717 + C80718) * C105 -
                     (C80719 + C80720 + C80721) * C94 +
                     (C80722 + C80723 + C80724) * C106 +
                     (C80725 + C80726 + C80727) * C95) *
                        C92062 * C92322 +
                    ((C80688 * C805 + C92350 * C1204 + C80689 * C3431 +
                      C92351 * C3875 + C80690 * C5773 + C80243 * C6289) *
                         C104 +
                     (C80688 * C813 + C92350 * C1212 + C80689 * C3439 +
                      C92351 * C3879 + C80690 * C5783 + C80243 * C6295) *
                         C93 -
                     (C82980 + C82979 + C82978) * C105 -
                     (C82983 + C82982 + C82981) * C94 +
                     (C80688 * C803 + C92350 * C1202 + C80689 * C3433 +
                      C92351 * C3877 + C80690 * C11870 + C80243 * C12506) *
                         C106 +
                     (C80688 * C811 + C92350 * C1210 + C80689 * C3441 +
                      C92351 * C3881 + C80690 * C11872 + C80243 * C12507) *
                         C95) *
                        C92062 * C92186) *
                   C92110 * C92099) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C80688 * C107 + C92350 * C555 + C80689 * C1389 +
                       C92351 * C1788 + C80690 * C1390 + C80243 * C1789) *
                          C801 +
                      (C80688 * C117 + C92350 * C561 + C80689 * C1397 +
                       C92351 * C1796 + C80690 * C1406 + C80243 * C1797) *
                          C92078) *
                         C92062 * C92322 +
                     ((C86230 + C86231 + C86232) * C801 +
                      (C86233 + C86234 + C86235) * C92078) *
                         C92062 * C92186) *
                        C92110 * C798 -
                    (((C86236 + C86237 + C86238) * C92078 +
                      (C86239 + C86240 + C86241) * C801) *
                         C92062 * C92186 +
                     ((C86235 + C86234 + C86233) * C92078 +
                      (C86232 + C86231 + C86230) * C801) *
                         C92062 * C92322) *
                        C92110 * C799 +
                    (((C86241 + C86240 + C86239) * C801 +
                      (C86238 + C86237 + C86236) * C92078) *
                         C92062 * C92322 +
                     ((C80688 * C4882 + C92350 * C5456 + C80689 * C8536 +
                       C92351 * C9196 + C80690 * C37227 + C80243 * C37539) *
                          C801 +
                      (C80688 * C4886 + C92350 * C5460 + C80689 * C8540 +
                       C92351 * C9198 + C80690 * C37229 + C80243 * C37540) *
                          C92078) *
                         C92062 * C92186) *
                        C92110 * C800)) /
                      (p * q * std::sqrt(p + q));
    d2eezy[59] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C80688 * C107 + C92350 * C555 + C80689 * C1389 +
                       C92351 * C1788 + C80690 * C1390 + C80243 * C1789) *
                          C181 +
                      (C80688 * C182 + C92350 * C641 + C80689 * C1471 +
                       C92351 * C1854 + C80690 * C1472 + C80243 * C1855) *
                          C92099) *
                         C92062 * C92322 +
                     ((C80688 * C805 + C92350 * C1204 + C80689 * C3431 +
                       C92351 * C3875 + C80690 * C5773 + C80243 * C6289) *
                          C181 +
                      (C80688 * C890 + C92350 * C1267 + C80689 * C3513 +
                       C92351 * C3949 + C80690 * C5871 + C80243 * C6375) *
                          C92099) *
                         C92062 * C92186) *
                        C93 -
                    (((C83088 + C83089 + C83090) * C92099 +
                      (C82980 + C82979 + C82978) * C181) *
                         C92062 * C92186 +
                     ((C80816 + C80815 + C80814) * C92099 +
                      (C80716 + C80717 + C80718) * C181) *
                         C92062 * C92322) *
                        C94 +
                    (((C80722 + C80723 + C80724) * C181 +
                      (C80819 + C80818 + C80817) * C92099) *
                         C92062 * C92322 +
                     ((C80688 * C803 + C92350 * C1202 + C80689 * C3433 +
                       C92351 * C3877 + C80690 * C11870 + C80243 * C12506) *
                          C181 +
                      (C80688 * C888 + C92350 * C1271 + C80689 * C3515 +
                       C92351 * C3951 + C80690 * C11972 + C80243 * C12624) *
                          C92099) *
                         C92062 * C92186) *
                        C95) *
                   C92110) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((C80688 * C107 + C92350 * C555 + C80689 * C1389 +
                      C92351 * C1788 + C80690 * C1390 + C80243 * C1789) *
                         C884 +
                     (C80688 * C182 + C92350 * C641 + C80689 * C1471 +
                      C92351 * C1854 + C80690 * C1472 + C80243 * C1855) *
                         C798 -
                     (C86232 + C86231 + C86230) * C885 -
                     (C86328 + C86329 + C86330) * C799 +
                     (C86241 + C86240 + C86239) * C886 +
                     (C86331 + C86332 + C86333) * C800) *
                        C92062 * C92322 +
                    ((C86230 + C86231 + C86232) * C884 +
                     (C86330 + C86329 + C86328) * C798 -
                     (C86239 + C86240 + C86241) * C885 -
                     (C86333 + C86332 + C86331) * C799 +
                     (C80688 * C4882 + C92350 * C5456 + C80689 * C8536 +
                      C92351 * C9196 + C80690 * C37227 + C80243 * C37539) *
                         C886 +
                     (C80688 * C5012 + C92350 * C5578 + C80689 * C8666 +
                      C92351 * C9318 + C80690 * C37281 + C80243 * C37591) *
                         C800) *
                        C92062 * C92186) *
                   C92078 * C92110) /
                      (p * q * std::sqrt(p + q));
    d2eezz[59] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C80688 * C107 + C92350 * C555 + C80689 * C1389 +
                       C92351 * C1788 + C80690 * C1390 + C80243 * C1789) *
                          C244 +
                      (C80688 * C245 + C92350 * C719 + C80689 * C1540 +
                       C92351 * C1909 + C80690 * C1541 + C80243 * C1910) *
                          C92110) *
                         C92062 * C92322 +
                     ((C80688 * C805 + C92350 * C1204 + C80689 * C3431 +
                       C92351 * C3875 + C80690 * C5773 + C80243 * C6289) *
                          C244 +
                      (C80688 * C956 + C92350 * C1328 + C80689 * C3587 +
                       C92351 * C4019 + C80690 * C5955 + C80243 * C6453) *
                          C92110) *
                         C92062 * C92186) *
                        C92099 * C93 -
                    (((C83195 + C83196 + C83197) * C92110 +
                      (C82980 + C82979 + C82978) * C244) *
                         C92062 * C92186 +
                     ((C80908 + C80907 + C80906) * C92110 +
                      (C80716 + C80717 + C80718) * C244) *
                         C92062 * C92322) *
                        C92099 * C94 +
                    (((C80722 + C80723 + C80724) * C244 +
                      (C80911 + C80910 + C80909) * C92110) *
                         C92062 * C92322 +
                     ((C80688 * C803 + C92350 * C1202 + C80689 * C3433 +
                       C92351 * C3877 + C80690 * C11870 + C80243 * C12506) *
                          C244 +
                      (C80688 * C954 + C92350 * C1326 + C80689 * C3589 +
                       C92351 * C4021 + C80690 * C12072 + C80243 * C12732) *
                          C92110) *
                         C92062 * C92186) *
                        C92099 * C95)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C80688 * C107 + C92350 * C555 + C80689 * C1389 +
                       C92351 * C1788 + C80690 * C1390 + C80243 * C1789) *
                          C244 +
                      (C80688 * C245 + C92350 * C719 + C80689 * C1540 +
                       C92351 * C1909 + C80690 * C1541 + C80243 * C1910) *
                          C92110) *
                         C92062 * C92322 +
                     ((C86230 + C86231 + C86232) * C244 +
                      (C86420 + C86421 + C86422) * C92110) *
                         C92062 * C92186) *
                        C798 -
                    (((C86423 + C86424 + C86425) * C92110 +
                      (C86239 + C86240 + C86241) * C244) *
                         C92062 * C92186 +
                     ((C86422 + C86421 + C86420) * C92110 +
                      (C86232 + C86231 + C86230) * C244) *
                         C92062 * C92322) *
                        C799 +
                    (((C86241 + C86240 + C86239) * C244 +
                      (C86425 + C86424 + C86423) * C92110) *
                         C92062 * C92322 +
                     ((C80688 * C4882 + C92350 * C5456 + C80689 * C8536 +
                       C92351 * C9196 + C80690 * C37227 + C80243 * C37539) *
                          C244 +
                      (C80688 * C5114 + C92350 * C5669 + C80689 * C8780 +
                       C92351 * C9424 + C80690 * C37333 + C80243 * C37642) *
                          C92110) *
                         C92062 * C92186) *
                        C800) *
                   C92078) /
                      (p * q * std::sqrt(p + q));
    d2eexx[60] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((((C36216 * C107 + C92062 * C113) * C1987 +
                       (C36216 * C117 + C92062 * C125) * C1983 -
                       (C36216 * C108 + C92062 * C114) * C1988 -
                       (C36216 * C118 + C92062 * C126) * C1984) *
                          C4099 +
                      (C37710 + C37711 - C37734 - C37735) * C4100 +
                      (C37716 + C37717 - C37736 - C37737) * C4101) *
                         C60959 +
                     ((C42870 + C42871 - C42886 - C42887) * C4099 +
                      (C41952 + C41953 - C41968 - C41969) * C4100 +
                      (C58249 + C58250 - C58257 - C58258) * C4101) *
                         C92212) *
                        C92110 * C1985 +
                    (((C37734 - (C37711 + C37710) + C37735) * C4099 +
                      (C37736 - (C37717 + C37716) + C37737) * C4100 +
                      (C37738 - (C37723 + C37722) + C37739) * C4101) *
                         C60959 +
                     ((C41968 - (C41953 + C41952) + C41969) * C4099 +
                      (C58257 - (C58250 + C58249) + C58258) * C4100 +
                      ((C36216 * C8537 + C92062 * C8539) * C1988 -
                       (C38972 * C1983 + C38973 * C1987) +
                       (C36216 * C8541 + C92062 * C8543) * C1984) *
                          C4101) *
                         C92212) *
                        C92110 * C1986)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C31262 * C107 + C31257 * C113 + C31263 * C108 +
                       C31258 * C114 + C31264 * C109 + C31259 * C115) *
                          C1987 +
                      (C31262 * C117 + C31257 * C125 + C31263 * C118 +
                       C31258 * C126 + C31264 * C119 + C31259 * C127) *
                          C1983 -
                      (C31264 * C110 + C31259 * C116 + C31263 * C109 +
                       C31258 * C115 + C31262 * C108 + C31257 * C114) *
                          C1988 -
                      (C31264 * C120 + C31259 * C128 + C31263 * C119 +
                       C31258 * C127 + C31262 * C118 + C31257 * C126) *
                          C1984) *
                         C92137 * C60959 +
                     ((C62408 + C62409 + C62410) * C1987 +
                      (C62411 + C62412 + C62413) * C1983 -
                      (C31264 * C1386 + C31259 * C1398 + C31263 * C1387 +
                       C31258 * C1399 + C31262 * C1388 + C31257 * C1400) *
                          C1988 -
                      (C31264 * C1394 + C31259 * C1410 + C31263 * C1395 +
                       C31258 * C1411 + C31262 * C1396 + C31257 * C1412) *
                          C1984) *
                         C92137 * C92212) *
                        C92110 * C1985 +
                    (((C33460 + C33459 + C33458) * C1988 -
                      ((C32047 + C32046 + C32045) * C1983 +
                       (C32044 + C32043 + C32042) * C1987) +
                      (C33463 + C33462 + C33461) * C1984) *
                         C92137 * C60959 +
                     ((C31262 * C3432 + C31257 * C3436 + C31263 * C3433 +
                       C31258 * C3437 + C31264 * C3434 + C31259 * C3438) *
                          C1988 -
                      ((C35354 + C35355 + C35356) * C1983 +
                       (C35357 + C35358 + C35359) * C1987) +
                      (C31262 * C3440 + C31257 * C3444 + C31263 * C3441 +
                       C31258 * C3445 + C31264 * C3442 + C31259 * C3446) *
                          C1984) *
                         C92137 * C92212) *
                        C92110 * C1986)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C36216 * C107 + C92062 * C113) * C1987 +
                      (C36216 * C117 + C92062 * C125) * C1983 -
                      (C36216 * C108 + C92062 * C114) * C1988 -
                      (C36216 * C118 + C92062 * C126) * C1984) *
                         C92137 * C70783 +
                     (C42870 + C42871 - C42886 - C42887) * C92137 * C70784 +
                     (C42876 + C42877 - C42888 - C42889) * C92137 * C70785 +
                     (C41115 * C1987 + C41114 * C1983 -
                      (C36216 * C10960 + C92062 * C10966) * C1988 -
                      (C36216 * C10964 + C92062 * C10972) * C1984) *
                         C92137 * C70786) *
                        C92110 * C1985 +
                    ((C37734 - (C37711 + C37710) + C37735) * C92137 * C70783 +
                     (C41968 - (C41953 + C41952) + C41969) * C92137 * C70784 +
                     (C41970 - (C41959 + C41958) + C41971) * C92137 * C70785 +
                     ((C36216 * C13850 + C92062 * C13852) * C1988 -
                      (C41112 * C1983 + C41113 * C1987) +
                      (C36216 * C13854 + C92062 * C13856) * C1984) *
                         C92137 * C70786) *
                        C92110 * C1986)) /
                      (p * q * std::sqrt(p + q));
    d2eexy[60] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C36216 * C107 + C92062 * C113) * C2059 +
             (C36216 * C182 + C92062 * C188) * C1985 - C36692 * C2060 -
             C36770 * C1986) *
                C4099 +
            (C36692 * C2059 + C36770 * C1985 - C36694 * C2060 -
             C36771 * C1986) *
                C4100 +
            (C36694 * C2059 + C36771 * C1985 - C36696 * C2060 -
             C36772 * C1986) *
                C4101) *
               C60959 +
           ((C43923 + C43924 - C43925 - C43926) * C4099 +
            (C43927 + C43928 - C43929 - C43930) * C4100 +
            (C60132 + C60133 - C60134 - C60135) * C4101) *
               C92212) *
              C1983 +
          (((C37728 * C2060 -
             ((C36216 * C183 + C92062 * C189) * C1985 +
              (C36216 * C108 + C92062 * C114) * C2059) +
             C37812 * C1986) *
                C4099 +
            (C37730 * C2060 - (C37812 * C1985 + C37728 * C2059) +
             C37813 * C1986) *
                C4100 +
            (C37732 * C2060 - (C37813 * C1985 + C37730 * C2059) +
             C37814 * C1986) *
                C4101) *
               C60959 +
           ((C41964 * C2060 - (C42999 * C1985 + C42882 * C2059) +
             C42074 * C1986) *
                C4099 +
            (C58255 * C2060 - (C42074 * C1985 + C41964 * C2059) +
             C58359 * C1986) *
                C4100 +
            ((C36216 * C8537 + C92062 * C8539) * C2060 -
             (C58359 * C1985 + C58255 * C2059) +
             (C36216 * C8667 + C92062 * C8669) * C1986) *
                C4101) *
               C92212) *
              C1984) *
         C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31262 * C107 + C31257 * C113 + C31263 * C108 + C31258 * C114 +
             C31264 * C109 + C31259 * C115) *
                C2059 +
            (C31262 * C182 + C31257 * C188 + C31263 * C183 + C31258 * C189 +
             C31264 * C184 + C31259 * C190) *
                C1985 -
            (C32044 + C32043 + C32042) * C2060 -
            (C32140 + C32141 + C32142) * C1986) *
               C92137 * C60959 +
           ((C62408 + C62409 + C62410) * C2059 +
            (C62506 + C62507 + C62508) * C1985 -
            (C35357 + C35358 + C35359) * C2060 -
            (C35466 + C35465 + C35464) * C1986) *
               C92137 * C92212) *
              C1983 +
          (((C33460 + C33459 + C33458) * C2060 -
            ((C31264 * C185 + C31259 * C191 + C31263 * C184 + C31258 * C190 +
              C31262 * C183 + C31257 * C189) *
                 C1985 +
             (C31264 * C110 + C31259 * C116 + C31263 * C109 + C31258 * C115 +
              C31262 * C108 + C31257 * C114) *
                 C2059) +
            (C33568 + C33569 + C33570) * C1986) *
               C92137 * C60959 +
           ((C31262 * C3432 + C31257 * C3436 + C31263 * C3433 + C31258 * C3437 +
             C31264 * C3434 + C31259 * C3438) *
                C2060 -
            ((C31264 * C1468 + C31259 * C1476 + C31263 * C1469 +
              C31258 * C1477 + C31262 * C1470 + C31257 * C1478) *
                 C1985 +
             (C31264 * C1386 + C31259 * C1398 + C31263 * C1387 +
              C31258 * C1399 + C31262 * C1388 + C31257 * C1400) *
                 C2059) +
            (C31262 * C3514 + C31257 * C3518 + C31263 * C3515 + C31258 * C3519 +
             C31264 * C3516 + C31259 * C3520) *
                C1986) *
               C92137 * C92212) *
              C1984) *
         C92110) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C36216 * C107 + C92062 * C113) * C2059 +
            (C36216 * C182 + C92062 * C188) * C1985 - C36692 * C2060 -
            C36770 * C1986) *
               C92137 * C70783 +
           (C43923 + C43924 - C43925 - C43926) * C92137 * C70784 +
           (C43931 + C43932 - C43933 - C43934) * C92137 * C70785 +
           (C41115 * C2059 + C41223 * C1985 - C41113 * C2060 - C41222 * C1986) *
               C92137 * C70786) *
              C1983 +
          ((C37728 * C2060 -
            ((C36216 * C183 + C92062 * C189) * C1985 +
             (C36216 * C108 + C92062 * C114) * C2059) +
            C37812 * C1986) *
               C92137 * C70783 +
           (C41964 * C2060 - (C42999 * C1985 + C42882 * C2059) +
            C42074 * C1986) *
               C92137 * C70784 +
           (C41966 * C2060 - (C42998 * C1985 + C42884 * C2059) +
            C42075 * C1986) *
               C92137 * C70785 +
           ((C36216 * C13850 + C92062 * C13852) * C2060 -
            ((C36216 * C11092 + C92062 * C11096) * C1985 +
             (C36216 * C10960 + C92062 * C10966) * C2059) +
            (C36216 * C13968 + C92062 * C13970) * C1986) *
               C92137 * C70786) *
              C1984) *
         C92110) /
            (p * q * std::sqrt(p + q));
    d2eexz[60] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((((C36216 * C107 + C92062 * C113) * C244 +
                        (C36216 * C245 + C92062 * C251) * C92110) *
                           C4099 +
                       (C36826 + C36842) * C4100 + C36846 * C4101) *
                          C60959 +
                      ((C41107 * C244 + C41316 * C92110) * C4099 +
                       (C40482 + C40483) * C4100 + C56926 * C4101) *
                          C92212) *
                         C1985 -
                     (((C56927 + C56928) * C4101 + (C40490 + C40491) * C4100 +
                       (C40483 + C40482) * C4099) *
                          C92212 +
                      ((C36844 + C36832) * C4101 + (C36843 + C36829) * C4100 +
                       (C36842 + C36826) * C4099) *
                          C60959) *
                         C1986) *
                        C1983 +
                    ((((C37881 + C37893) * C4099 + (C37884 + C37894) * C4100 +
                       (C37887 + C37895) * C4101) *
                          C60959 +
                      ((C42174 + C42182) * C4099 + (C58458 + C58462) * C4100 +
                       ((C36216 * C8537 + C92062 * C8539) * C244 +
                        (C36216 * C8781 + C92062 * C8783) * C92110) *
                           C4101) *
                          C92212) *
                         C1986 -
                     (((C58462 + C58458) * C4101 + (C42182 + C42174) * C4100 +
                       (C43104 * C92110 + C42882 * C244) * C4099) *
                          C92212 +
                      ((C37894 + C37884) * C4101 + (C37893 + C37881) * C4100 +
                       ((C36216 * C246 + C92062 * C252) * C92110 +
                        (C36216 * C108 + C92062 * C114) * C244) *
                           C4099) *
                          C60959) *
                         C1985) *
                        C1984)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((((C31262 * C107 + C31257 * C113 + C31263 * C108 +
                        C31258 * C114 + C31264 * C109 + C31259 * C115) *
                           C244 +
                       (C31262 * C245 + C31257 * C251 + C31263 * C246 +
                        C31258 * C252 + C31264 * C247 + C31259 * C253) *
                           C92110) *
                          C92137 * C60959 +
                      ((C62408 + C62409 + C62410) * C244 +
                       (C62600 + C62599 + C62598) * C92110) *
                          C92137 * C92212) *
                         C1985 -
                     (((C35571 + C35572 + C35573) * C92110 +
                       (C35357 + C35358 + C35359) * C244) *
                          C92137 * C92212 +
                      ((C32234 + C32233 + C32232) * C92110 +
                       (C32044 + C32043 + C32042) * C244) *
                          C92137 * C60959) *
                         C1986) *
                        C1983 +
                    ((((C33460 + C33459 + C33458) * C244 +
                       (C33675 + C33676 + C33677) * C92110) *
                          C92137 * C60959 +
                      ((C31262 * C3432 + C31257 * C3436 + C31263 * C3433 +
                        C31258 * C3437 + C31264 * C3434 + C31259 * C3438) *
                           C244 +
                       (C31262 * C3588 + C31257 * C3592 + C31263 * C3589 +
                        C31258 * C3593 + C31264 * C3590 + C31259 * C3594) *
                           C92110) *
                          C92137 * C92212) *
                         C1986 -
                     (((C31264 * C1537 + C31259 * C1545 + C31263 * C1538 +
                        C31258 * C1546 + C31262 * C1539 + C31257 * C1547) *
                           C92110 +
                       (C31264 * C1386 + C31259 * C1398 + C31263 * C1387 +
                        C31258 * C1399 + C31262 * C1388 + C31257 * C1400) *
                           C244) *
                          C92137 * C92212 +
                      ((C31264 * C248 + C31259 * C254 + C31263 * C247 +
                        C31258 * C253 + C31262 * C246 + C31257 * C252) *
                           C92110 +
                       (C31264 * C110 + C31259 * C116 + C31263 * C109 +
                        C31258 * C115 + C31262 * C108 + C31257 * C114) *
                           C244) *
                          C92137 * C60959) *
                         C1985) *
                        C1984)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C36216 * C107 + C92062 * C113) * C244 +
                       (C36216 * C245 + C92062 * C251) * C92110) *
                          C92137 * C70783 +
                      (C41107 * C244 + C41316 * C92110) * C92137 * C70784 +
                      (C41109 * C244 + C41317 * C92110) * C92137 * C70785 +
                      (C41115 * C244 + C41318 * C92110) * C92137 * C70786) *
                         C1985 -
                     ((C41319 * C92110 + C41113 * C244) * C92137 * C70786 +
                      (C40494 + C40484) * C92137 * C70785 +
                      (C40483 + C40482) * C92137 * C70784 +
                      (C36842 + C36826) * C92137 * C70783) *
                         C1986) *
                        C1983 +
                    (((C37881 + C37893) * C92137 * C70783 +
                      (C42174 + C42182) * C92137 * C70784 +
                      (C42177 + C42183) * C92137 * C70785 +
                      ((C36216 * C13850 + C92062 * C13852) * C244 +
                       (C36216 * C14076 + C92062 * C14078) * C92110) *
                          C92137 * C70786) *
                         C1986 -
                     (((C36216 * C11198 + C92062 * C11202) * C92110 +
                       (C36216 * C10960 + C92062 * C10966) * C244) *
                          C92137 * C70786 +
                      (C43105 * C92110 + C42884 * C244) * C92137 * C70785 +
                      (C43104 * C92110 + C42882 * C244) * C92137 * C70784 +
                      ((C36216 * C246 + C92062 * C252) * C92110 +
                       (C36216 * C108 + C92062 * C114) * C244) *
                          C92137 * C70783) *
                         C1985) *
                        C1984)) /
                      (p * q * std::sqrt(p + q));
    d2eeyx[60] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4326 * C107 + C4099 * C308 + C4327 * C805 + C4100 * C1022 +
             C4328 * C806 + C4101 * C1023) *
                C1987 +
            (C4326 * C117 + C4099 * C314 + C4327 * C813 + C4100 * C1030 +
             C4328 * C822 + C4101 * C1031) *
                C1983 -
            (C4354 + C4355 + C4356) * C1988 - (C4357 + C4358 + C4359) * C1984) *
               C60959 +
           ((C67562 + C67563 + C67564) * C1987 +
            (C67565 + C67566 + C67567) * C1983 -
            (C7885 + C7884 + C7883) * C1988 - (C7888 + C7887 + C7886) * C1984) *
               C92212) *
              C92062 * C92110 * C1985 +
          (((C6922 + C6923 + C6924) * C1988 -
            ((C4328 * C4886 + C4101 * C5222 + C4327 * C822 + C4100 * C1031 +
              C4326 * C813 + C4099 * C1030) *
                 C1983 +
             (C4328 * C4882 + C4101 * C5218 + C4327 * C806 + C4100 * C1023 +
              C4326 * C805 + C4099 * C1022) *
                 C1987) +
            (C6925 + C6926 + C6927) * C1984) *
               C60959 +
           ((C4326 * C3432 + C4099 * C3662 + C4327 * C5771 + C4100 * C6041 +
             C4328 * C8537 + C4101 * C8895) *
                C1988 -
            ((C4328 * C8540 + C4101 * C8896 + C4327 * C5778 + C4100 * C6048 +
              C4326 * C3439 + C4099 * C3665) *
                 C1983 +
             (C4328 * C8536 + C4101 * C8894 + C4327 * C5772 + C4100 * C6042 +
              C4326 * C3431 + C4099 * C3661) *
                 C1987) +
            (C4326 * C3440 + C4099 * C3666 + C4327 * C5777 + C4100 * C6047 +
             C4328 * C8541 + C4101 * C8897) *
                C1984) *
               C92212) *
              C92062 * C92110 * C1986)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92137 * C308) * C1987 +
             (C307 * C117 + C92137 * C314) * C1983 - C337 * C1988 -
             C338 * C1984) *
                C60959 +
            (C13193 + C13194 - C13195 - C13196) * C92212) *
               C31257 +
           ((C337 * C1987 + C338 * C1983 - C339 * C1988 - C340 * C1984) *
                C60959 +
            (C13201 + C13202 - C13203 - C13204) * C92212) *
               C31258 +
           ((C339 * C1987 + C340 * C1983 - C341 * C1988 - C342 * C1984) *
                C60959 +
            (C23291 + C23292 - C23293 - C23294) * C92212) *
               C31259) *
              C92110 * C1985 +
          (((C2212 * C1988 -
             ((C307 * C813 + C92137 * C1030) * C1983 +
              (C307 * C805 + C92137 * C1022) * C1987) +
             C2213 * C1984) *
                C60959 +
            (C12183 * C1988 - (C14201 * C1983 + C14200 * C1987) +
             C12184 * C1984) *
                C92212) *
               C31257 +
           ((C2214 * C1988 - (C2213 * C1983 + C2212 * C1987) + C2215 * C1984) *
                C60959 +
            (C22311 * C1988 - (C12184 * C1983 + C12183 * C1987) +
             C22312 * C1984) *
                C92212) *
               C31258 +
           ((C2216 * C1988 - (C2215 * C1983 + C2214 * C1987) + C2217 * C1984) *
                C60959 +
            ((C307 * C3434 + C92137 * C3664) * C1988 -
             (C22312 * C1983 + C22311 * C1987) +
             (C307 * C3442 + C92137 * C3668) * C1984) *
                C92212) *
               C31259) *
              C92110 * C1986)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C307 * C107 + C92137 * C308) * C1987 +
            (C307 * C117 + C92137 * C314) * C1983 - C337 * C1988 -
            C338 * C1984) *
               C70783 +
           (C13193 + C13194 - C13195 - C13196) * C70784 +
           (C13197 + C13198 - C13199 - C13200) * C70785 +
           (C11335 * C1987 + C11334 * C1983 - C11333 * C1988 - C11332 * C1984) *
               C70786) *
              C92062 * C92110 * C1985 +
          ((C2212 * C1988 -
            ((C307 * C813 + C92137 * C1030) * C1983 +
             (C307 * C805 + C92137 * C1022) * C1987) +
            C2213 * C1984) *
               C70783 +
           (C12183 * C1988 - (C14201 * C1983 + C14200 * C1987) +
            C12184 * C1984) *
               C70784 +
           (C12185 * C1988 - (C14203 * C1983 + C14202 * C1987) +
            C12186 * C1984) *
               C70785 +
           ((C307 * C13850 + C92137 * C14184) * C1988 -
            ((C307 * C13853 + C92137 * C14185) * C1983 +
             (C307 * C13849 + C92137 * C14183) * C1987) +
            (C307 * C13854 + C92137 * C14186) * C1984) *
               C70786) *
              C92062 * C92110 * C1986)) /
            (p * q * std::sqrt(p + q));
    d2eeyy[60] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C4326 * C107 + C4099 * C308 + C4327 * C805 +
                       C4100 * C1022 + C4328 * C806 + C4101 * C1023) *
                          C2059 +
                      (C4326 * C182 + C4099 * C394 + C4327 * C890 +
                       C4100 * C1085 + C4328 * C891 + C4101 * C1086) *
                          C1985 -
                      (C4328 * C4882 + C4101 * C5218 + C4327 * C806 +
                       C4100 * C1023 + C4326 * C805 + C4099 * C1022) *
                          C2060 -
                      (C4328 * C5012 + C4101 * C5299 + C4327 * C891 +
                       C4100 * C1086 + C4326 * C890 + C4099 * C1085) *
                          C1986) *
                         C60959 +
                     ((C67562 + C67563 + C67564) * C2059 +
                      (C67660 + C67661 + C67662) * C1985 -
                      (C4328 * C8536 + C4101 * C8894 + C4327 * C5772 +
                       C4100 * C6042 + C4326 * C3431 + C4099 * C3661) *
                          C2060 -
                      (C4328 * C8666 + C4101 * C8996 + C4327 * C5870 +
                       C4100 * C6128 + C4326 * C3513 + C4099 * C3735) *
                          C1986) *
                         C92212) *
                        C92062 * C1983 +
                    (((C6922 + C6923 + C6924) * C2060 -
                      ((C4454 + C4453 + C4452) * C1985 +
                       (C4354 + C4355 + C4356) * C2059) +
                      (C7035 + C7034 + C7033) * C1986) *
                         C60959 +
                     ((C4326 * C3432 + C4099 * C3662 + C4327 * C5771 +
                       C4100 * C6041 + C4328 * C8537 + C4101 * C8895) *
                          C2060 -
                      ((C7996 + C7995 + C7994) * C1985 +
                       (C7885 + C7884 + C7883) * C2059) +
                      (C4326 * C3514 + C4099 * C3736 + C4327 * C5869 +
                       C4100 * C6127 + C4328 * C8667 + C4101 * C8997) *
                          C1986) *
                         C92212) *
                        C92062 * C1984) *
                   C92110) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((((C307 * C107 + C92137 * C308) * C2059 +
                       (C307 * C182 + C92137 * C394) * C1985 -
                       (C307 * C805 + C92137 * C1022) * C2060 -
                       (C307 * C890 + C92137 * C1085) * C1986) *
                          C60959 +
                      (C14308 + C14309 - C14310 - C14320) * C92212) *
                         C31257 +
                     ((C2285 + C2286 - C2287 - C2303) * C60959 +
                      (C12286 + C12287 - C12288 - C12298) * C92212) *
                         C31258 +
                     ((C2290 + C2291 - C2292 - C2304) * C60959 +
                      (C22411 + C22412 - C22413 - C22417) * C92212) *
                         C31259) *
                        C1983 +
                    (((C2287 - (C2286 + C2285) + C2303) * C60959 +
                      (C12288 - (C12287 + C12286) + C12298) * C92212) *
                         C31257 +
                     ((C2292 - (C2291 + C2290) + C2304) * C60959 +
                      (C22413 - (C22412 + C22411) + C22417) * C92212) *
                         C31258 +
                     ((C2297 - (C2296 + C2295) + C2305) * C60959 +
                      ((C307 * C3434 + C92137 * C3664) * C2060 -
                       (C3018 * C1985 + C2938 * C2059) +
                       (C307 * C3516 + C92137 * C3738) * C1986) *
                          C92212) *
                         C31259) *
                        C1984) *
                   C92110) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C307 * C107 + C92137 * C308) * C2059 +
                      (C307 * C182 + C92137 * C394) * C1985 -
                      (C307 * C805 + C92137 * C1022) * C2060 -
                      (C307 * C890 + C92137 * C1085) * C1986) *
                         C70783 +
                     (C14308 + C14309 - C14310 - C14320) * C70784 +
                     (C14313 + C14314 - C14315 - C14321) * C70785 +
                     (C11335 * C2059 + C11439 * C1985 -
                      (C307 * C13849 + C92137 * C14183) * C2060 -
                      (C307 * C13967 + C92137 * C14305) * C1986) *
                         C70786) *
                        C92062 * C1983 +
                    ((C2287 - (C2286 + C2285) + C2303) * C70783 +
                     (C12288 - (C12287 + C12286) + C12298) * C70784 +
                     (C12293 - (C12292 + C12291) + C12299) * C70785 +
                     ((C307 * C13850 + C92137 * C14184) * C2060 -
                      (C11438 * C1985 + C11333 * C2059) +
                      (C307 * C13968 + C92137 * C14306) * C1986) *
                         C70786) *
                        C92062 * C1984) *
                   C92110) /
                      (p * q * std::sqrt(p + q));
    d2eeyz[60] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4326 * C107 + C4099 * C308 + C4327 * C805 + C4100 * C1022 +
              C4328 * C806 + C4101 * C1023) *
                 C244 +
             (C4326 * C245 + C4099 * C474 + C4327 * C956 + C4100 * C1146 +
              C4328 * C957 + C4101 * C1147) *
                 C92110) *
                C60959 +
            ((C67562 + C67563 + C67564) * C244 +
             (C67754 + C67753 + C67752) * C92110) *
                C92212) *
               C92062 * C1985 -
           (((C4328 * C8780 + C4101 * C9096 + C4327 * C5958 + C4100 * C6207 +
              C4326 * C3587 + C4099 * C3805) *
                 C92110 +
             (C4328 * C8536 + C4101 * C8894 + C4327 * C5772 + C4100 * C6042 +
              C4326 * C3431 + C4099 * C3661) *
                 C244) *
                C92212 +
            ((C4328 * C5114 + C4101 * C5378 + C4327 * C957 + C4100 * C1147 +
              C4326 * C956 + C4099 * C1146) *
                 C92110 +
             (C4328 * C4882 + C4101 * C5218 + C4327 * C806 + C4100 * C1023 +
              C4326 * C805 + C4099 * C1022) *
                 C244) *
                C60959) *
               C92062 * C1986) *
              C1983 +
          ((((C6922 + C6923 + C6924) * C244 +
             (C7143 + C7142 + C7141) * C92110) *
                C60959 +
            ((C4326 * C3432 + C4099 * C3662 + C4327 * C5771 + C4100 * C6041 +
              C4328 * C8537 + C4101 * C8895) *
                 C244 +
             (C4326 * C3588 + C4099 * C3806 + C4327 * C5957 + C4100 * C6210 +
              C4328 * C8781 + C4101 * C9097) *
                 C92110) *
                C92212) *
               C92062 * C1986 -
           (((C8102 + C8103 + C8104) * C92110 +
             (C7885 + C7884 + C7883) * C244) *
                C92212 +
            ((C4546 + C4545 + C4544) * C92110 +
             (C4354 + C4355 + C4356) * C244) *
                C60959) *
               C92062 * C1985) *
              C1984)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C307 * C107 + C92137 * C308) * C244 +
              (C307 * C245 + C92137 * C474) * C92110) *
                 C60959 +
             (C11327 * C244 + C11531 * C92110) * C92212) *
                C31257 +
            ((C481 + C497) * C60959 + (C9910 + C9911) * C92212) * C31258 +
            C61337 * C31259) *
               C1985 -
           (((C22520 + C22518) * C92212 + (C2386 + C2378) * C60959) * C31259 +
            ((C12408 + C12404) * C92212 + (C2387 + C2381) * C60959) * C31258 +
            ((C14426 * C92110 + C14200 * C244) * C92212 +
             ((C307 * C956 + C92137 * C1146) * C92110 +
              (C307 * C805 + C92137 * C1022) * C244) *
                 C60959) *
                C31257) *
               C1986) *
              C1983 +
          ((((C2381 + C2387) * C60959 + (C12404 + C12408) * C92212) * C31257 +
            ((C2378 + C2386) * C60959 + (C22518 + C22520) * C92212) * C31258 +
            ((C2375 + C2385) * C60959 +
             ((C307 * C3434 + C92137 * C3664) * C244 +
              (C307 * C3590 + C92137 * C3808) * C92110) *
                 C92212) *
                C31259) *
               C1986 -
           (((C20197 + C20198) * C92212 + (C499 + C487) * C60959) * C31259 +
            ((C9918 + C9919) * C92212 + (C498 + C484) * C60959) * C31258 +
            ((C9911 + C9910) * C92212 + (C497 + C481) * C60959) * C31257) *
               C1985) *
              C1984)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92137 * C308) * C244 +
             (C307 * C245 + C92137 * C474) * C92110) *
                C70783 +
            (C11327 * C244 + C11531 * C92110) * C70784 +
            (C11329 * C244 + C11532 * C92110) * C70785 +
            (C11335 * C244 + C11533 * C92110) * C70786) *
               C92062 * C1985 -
           (((C307 * C14075 + C92137 * C14419) * C92110 +
             (C307 * C13849 + C92137 * C14183) * C244) *
                C70786 +
            (C14427 * C92110 + C14202 * C244) * C70785 +
            (C14426 * C92110 + C14200 * C244) * C70784 +
            ((C307 * C956 + C92137 * C1146) * C92110 +
             (C307 * C805 + C92137 * C1022) * C244) *
                C70783) *
               C92062 * C1986) *
              C1983 +
          (((C2381 + C2387) * C70783 + (C12404 + C12408) * C70784 +
            (C12401 + C12407) * C70785 +
            ((C307 * C13850 + C92137 * C14184) * C244 +
             (C307 * C14076 + C92137 * C14420) * C92110) *
                C70786) *
               C92062 * C1986 -
           ((C11534 * C92110 + C11333 * C244) * C70786 +
            (C9922 + C9912) * C70785 + (C9911 + C9910) * C70784 +
            (C497 + C481) * C70783) *
               C92062 * C1985) *
              C1984)) /
            (p * q * std::sqrt(p + q));
    d2eezx[60] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C61411 * C107 + C60959 * C555 + C61412 * C1389 + C92212 * C1788) *
                C1987 +
            (C61411 * C117 + C60959 * C561 + C61412 * C1397 + C92212 * C1796) *
                C1983 -
            (C61438 + C61439) * C1988 - (C61440 + C61441) * C1984) *
               C92062 * C4099 +
           ((C67034 + C67035) * C1987 + (C67036 + C67037) * C1983 -
            (C63751 + C63750) * C1988 - (C63753 + C63752) * C1984) *
               C92062 * C4100 +
           (C67046 * C1987 + C67047 * C1983 - (C68674 + C68675) * C1988 -
            (C68676 + C68677) * C1984) *
               C92062 * C4101) *
              C92110 * C1985 +
          (((C63750 + C63751) * C1988 -
            ((C67037 + C67036) * C1983 + (C67035 + C67034) * C1987) +
            (C63752 + C63753) * C1984) *
               C92062 * C4099 +
           ((C68675 + C68674) * C1988 -
            ((C67041 + C67040) * C1983 + (C67039 + C67038) * C1987) +
            (C68677 + C68676) * C1984) *
               C92062 * C4100 +
           ((C61411 * C4881 + C60959 * C5455 + C61412 * C8537 +
             C92212 * C9197) *
                C1988 -
            ((C67042 + C67043) * C1983 + (C67044 + C67045) * C1987) +
            (C61411 * C4885 + C60959 * C5459 + C61412 * C8541 +
             C92212 * C9199) *
                C1984) *
               C92062 * C4101) *
              C92110 * C1986)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C61411 * C107 + C60959 * C555 + C61412 * C1389 + C92212 * C1788) *
                C1987 +
            (C61411 * C117 + C60959 * C561 + C61412 * C1397 + C92212 * C1796) *
                C1983 -
            (C61438 + C61439) * C1988 - (C61440 + C61441) * C1984) *
               C31257 +
           ((C61439 + C61438) * C1987 + (C61441 + C61440) * C1983 -
            (C61443 + C61442) * C1988 - (C61445 + C61444) * C1984) *
               C31258 +
           (C61450 * C1987 + C61451 * C1983 - (C61447 + C61446) * C1988 -
            (C61449 + C61448) * C1984) *
               C31259) *
              C92137 * C92110 * C1985 +
          (((C63750 + C63751) * C1988 -
            ((C61412 * C3439 + C92212 * C3879 + C61411 * C813 +
              C60959 * C1212) *
                 C1983 +
             (C61412 * C3431 + C92212 * C3875 + C61411 * C805 +
              C60959 * C1204) *
                 C1987) +
            (C63752 + C63753) * C1984) *
               C31257 +
           ((C63754 + C63755) * C1988 -
            ((C63753 + C63752) * C1983 + (C63751 + C63750) * C1987) +
            (C63756 + C63757) * C1984) *
               C31258 +
           ((C61411 * C802 + C60959 * C1201 + C61412 * C3434 + C92212 * C3878) *
                C1988 -
            ((C63757 + C63756) * C1983 + (C63755 + C63754) * C1987) +
            (C61411 * C810 + C60959 * C1209 + C61412 * C3442 + C92212 * C3882) *
                C1984) *
               C31259) *
              C92137 * C92110 * C1986)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C71087 * C107 + C70783 * C555 + C71088 * C1389 + C70784 * C1788 +
            C71089 * C1390 + C70785 * C1789 + C71090 * C10961 +
            C70786 * C11609) *
               C1987 +
           (C71087 * C117 + C70783 * C561 + C71088 * C1397 + C70784 * C1796 +
            C71089 * C1406 + C70785 * C1797 + C71090 * C10965 +
            C70786 * C11613) *
               C1983 -
           (C71090 * C10960 + C70786 * C11608 + C71089 * C1391 +
            C70785 * C1790 + C71088 * C1388 + C70784 * C1787 + C71087 * C108 +
            C70783 * C556) *
               C1988 -
           (C71090 * C10964 + C70786 * C11612 + C71089 * C1407 +
            C70785 * C1798 + C71088 * C1396 + C70784 * C1795 + C71087 * C118 +
            C70783 * C562) *
               C1984) *
              C92062 * C92137 * C92110 * C1985 +
          ((C71087 * C804 + C70783 * C1203 + C71088 * C3432 + C70784 * C3876 +
            C71089 * C5774 + C70785 * C6290 + C71090 * C13850 +
            C70786 * C14526) *
               C1988 -
           ((C71090 * C13853 + C70786 * C14527 + C71089 * C5783 +
             C70785 * C6295 + C71088 * C3439 + C70784 * C3879 + C71087 * C813 +
             C70783 * C1212) *
                C1983 +
            (C71090 * C13849 + C70786 * C14525 + C71089 * C5773 +
             C70785 * C6289 + C71088 * C3431 + C70784 * C3875 + C71087 * C805 +
             C70783 * C1204) *
                C1987) +
           (C71087 * C812 + C70783 * C1211 + C71088 * C3440 + C70784 * C3880 +
            C71089 * C5784 + C70785 * C6296 + C71090 * C13854 +
            C70786 * C14528) *
               C1984) *
              C92062 * C92137 * C92110 * C1986)) /
            (p * q * std::sqrt(p + q));
    d2eezy[60] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C61411 * C107 + C60959 * C555 + C61412 * C1389 + C92212 * C1788) *
                C2059 +
            (C61411 * C182 + C60959 * C641 + C61412 * C1471 + C92212 * C1854) *
                C1985 -
            (C67035 + C67034) * C2060 - (C67138 + C67139) * C1986) *
               C92062 * C4099 +
           ((C67034 + C67035) * C2059 + (C67139 + C67138) * C1985 -
            (C67039 + C67038) * C2060 - (C67141 + C67140) * C1986) *
               C92062 * C4100 +
           (C67046 * C2059 + C67144 * C1985 - (C67044 + C67045) * C2060 -
            (C67143 + C67142) * C1986) *
               C92062 * C4101) *
              C1983 +
          (((C63750 + C63751) * C2060 -
            ((C61540 + C61539) * C1985 + (C61438 + C61439) * C2059) +
            (C63865 + C63864) * C1986) *
               C92062 * C4099 +
           ((C68675 + C68674) * C2060 -
            ((C63864 + C63865) * C1985 + (C63751 + C63750) * C2059) +
            (C68780 + C68781) * C1986) *
               C92062 * C4100 +
           ((C61411 * C4881 + C60959 * C5455 + C61412 * C8537 +
             C92212 * C9197) *
                C2060 -
            ((C68781 + C68780) * C1985 + (C68674 + C68675) * C2059) +
            (C61411 * C5013 + C60959 * C5579 + C61412 * C8667 +
             C92212 * C9319) *
                C1986) *
               C92062 * C4101) *
              C1984) *
         C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C61411 * C107 + C60959 * C555 + C61412 * C1389 + C92212 * C1788) *
                C2059 +
            (C61411 * C182 + C60959 * C641 + C61412 * C1471 + C92212 * C1854) *
                C1985 -
            (C61412 * C3431 + C92212 * C3875 + C61411 * C805 + C60959 * C1204) *
                C2060 -
            (C61412 * C3513 + C92212 * C3949 + C61411 * C890 + C60959 * C1267) *
                C1986) *
               C31257 +
           ((C61439 + C61438) * C2059 + (C61539 + C61540) * C1985 -
            (C63751 + C63750) * C2060 - (C63864 + C63865) * C1986) *
               C31258 +
           (C61450 * C2059 + C61545 * C1985 - (C63755 + C63754) * C2060 -
            (C63866 + C63867) * C1986) *
               C31259) *
              C92137 * C1983 +
          (((C63750 + C63751) * C2060 -
            ((C61540 + C61539) * C1985 + (C61438 + C61439) * C2059) +
            (C63865 + C63864) * C1986) *
               C31257 +
           ((C63754 + C63755) * C2060 -
            ((C61542 + C61541) * C1985 + (C61443 + C61442) * C2059) +
            (C63867 + C63866) * C1986) *
               C31258 +
           ((C61411 * C802 + C60959 * C1201 + C61412 * C3434 + C92212 * C3878) *
                C2060 -
            ((C61543 + C61544) * C1985 + (C61447 + C61446) * C2059) +
            (C61411 * C887 + C60959 * C1273 + C61412 * C3516 + C92212 * C3952) *
                C1986) *
               C31259) *
              C92137 * C1984) *
         C92110) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C71087 * C107 + C70783 * C555 + C71088 * C1389 + C70784 * C1788 +
            C71089 * C1390 + C70785 * C1789 + C71090 * C10961 +
            C70786 * C11609) *
               C2059 +
           (C71087 * C182 + C70783 * C641 + C71088 * C1471 + C70784 * C1854 +
            C71089 * C1472 + C70785 * C1855 + C71090 * C11093 +
            C70786 * C11691) *
               C1985 -
           (C71090 * C13849 + C70786 * C14525 + C71089 * C5773 +
            C70785 * C6289 + C71088 * C3431 + C70784 * C3875 + C71087 * C805 +
            C70783 * C1204) *
               C2060 -
           (C71090 * C13967 + C70786 * C14627 + C71089 * C5871 +
            C70785 * C6375 + C71088 * C3513 + C70784 * C3949 + C71087 * C890 +
            C70783 * C1267) *
               C1986) *
              C92062 * C92137 * C1983 +
          ((C71087 * C804 + C70783 * C1203 + C71088 * C3432 + C70784 * C3876 +
            C71089 * C5774 + C70785 * C6290 + C71090 * C13850 +
            C70786 * C14526) *
               C2060 -
           ((C71090 * C11092 + C70786 * C11690 + C71089 * C1473 +
             C70785 * C1856 + C71088 * C1470 + C70784 * C1853 + C71087 * C183 +
             C70783 * C642) *
                C1985 +
            (C71090 * C10960 + C70786 * C11608 + C71089 * C1391 +
             C70785 * C1790 + C71088 * C1388 + C70784 * C1787 + C71087 * C108 +
             C70783 * C556) *
                C2059) +
           (C71087 * C889 + C70783 * C1269 + C71088 * C3514 + C70784 * C3950 +
            C71089 * C5872 + C70785 * C6376 + C71090 * C13968 +
            C70786 * C14628) *
               C1986) *
              C92062 * C92137 * C1984) *
         C92110) /
            (p * q * std::sqrt(p + q));
    d2eezz[60] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C61411 * C107 + C60959 * C555 + C61412 * C1389 + C92212 * C1788) *
                 C244 +
             (C61411 * C245 + C60959 * C719 + C61412 * C1540 + C92212 * C1909) *
                 C92110) *
                C92062 * C4099 +
            ((C67034 + C67035) * C244 + (C67232 + C67233) * C92110) * C92062 *
                C4100 +
            C67241 * C4101) *
               C1985 -
           (((C67236 + C67237) * C92110 + (C67044 + C67045) * C244) * C92062 *
                C4101 +
            ((C67235 + C67234) * C92110 + (C67039 + C67038) * C244) * C92062 *
                C4100 +
            ((C67233 + C67232) * C92110 + (C67035 + C67034) * C244) * C92062 *
                C4099) *
               C1986) *
              C1983 +
          ((((C63750 + C63751) * C244 + (C63977 + C63976) * C92110) * C92062 *
                C4099 +
            ((C68675 + C68674) * C244 + (C68884 + C68885) * C92110) * C92062 *
                C4100 +
            ((C61411 * C4881 + C60959 * C5455 + C61412 * C8537 +
              C92212 * C9197) *
                 C244 +
             (C61411 * C5113 + C60959 * C5668 + C61412 * C8781 +
              C92212 * C9425) *
                 C92110) *
                C92062 * C4101) *
               C1986 -
           (((C68885 + C68884) * C92110 + (C68674 + C68675) * C244) * C92062 *
                C4101 +
            ((C63976 + C63977) * C92110 + (C63751 + C63750) * C244) * C92062 *
                C4100 +
            ((C61636 + C61635) * C92110 + (C61438 + C61439) * C244) * C92062 *
                C4099) *
               C1985) *
              C1984)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C61411 * C107 + C60959 * C555 + C61412 * C1389 + C92212 * C1788) *
                 C244 +
             (C61411 * C245 + C60959 * C719 + C61412 * C1540 + C92212 * C1909) *
                 C92110) *
                C31257 +
            ((C61439 + C61438) * C244 + (C61635 + C61636) * C92110) * C31258 +
            C61643 * C31259) *
               C92137 * C1985 -
           (((C63974 + C63975) * C92110 + (C63755 + C63754) * C244) * C31259 +
            ((C63976 + C63977) * C92110 + (C63751 + C63750) * C244) * C31258 +
            ((C61412 * C3587 + C92212 * C4019 + C61411 * C956 +
              C60959 * C1328) *
                 C92110 +
             (C61412 * C3431 + C92212 * C3875 + C61411 * C805 +
              C60959 * C1204) *
                 C244) *
                C31257) *
               C92137 * C1986) *
              C1983 +
          ((((C63750 + C63751) * C244 + (C63977 + C63976) * C92110) * C31257 +
            ((C63754 + C63755) * C244 + (C63975 + C63974) * C92110) * C31258 +
            ((C61411 * C802 + C60959 * C1201 + C61412 * C3434 +
              C92212 * C3878) *
                 C244 +
             (C61411 * C953 + C60959 * C1325 + C61412 * C3590 +
              C92212 * C4022) *
                 C92110) *
                C31259) *
               C92137 * C1986 -
           (((C61639 + C61640) * C92110 + (C61447 + C61446) * C244) * C31259 +
            ((C61638 + C61637) * C92110 + (C61443 + C61442) * C244) * C31258 +
            ((C61636 + C61635) * C92110 + (C61438 + C61439) * C244) * C31257) *
               C92137 * C1985) *
              C1984)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C71087 * C107 + C70783 * C555 + C71088 * C1389 + C70784 * C1788 +
             C71089 * C1390 + C70785 * C1789 + C71090 * C10961 +
             C70786 * C11609) *
                C244 +
            (C71087 * C245 + C70783 * C719 + C71088 * C1540 + C70784 * C1909 +
             C71089 * C1541 + C70785 * C1910 + C71090 * C11197 +
             C70786 * C11768) *
                C92110) *
               C92062 * C92137 * C1985 -
           ((C71090 * C14075 + C70786 * C14727 + C71089 * C5955 +
             C70785 * C6453 + C71088 * C3587 + C70784 * C4019 + C71087 * C956 +
             C70783 * C1328) *
                C92110 +
            (C71090 * C13849 + C70786 * C14525 + C71089 * C5773 +
             C70785 * C6289 + C71088 * C3431 + C70784 * C3875 + C71087 * C805 +
             C70783 * C1204) *
                C244) *
               C92062 * C92137 * C1986) *
              C1983 +
          (((C71087 * C804 + C70783 * C1203 + C71088 * C3432 + C70784 * C3876 +
             C71089 * C5774 + C70785 * C6290 + C71090 * C13850 +
             C70786 * C14526) *
                C244 +
            (C71087 * C955 + C70783 * C1327 + C71088 * C3588 + C70784 * C4020 +
             C71089 * C5956 + C70785 * C6454 + C71090 * C14076 +
             C70786 * C14728) *
                C92110) *
               C92062 * C92137 * C1986 -
           ((C71090 * C11198 + C70786 * C11770 + C71089 * C1542 +
             C70785 * C1912 + C71088 * C1539 + C70784 * C1911 + C71087 * C246 +
             C70783 * C720) *
                C92110 +
            (C71090 * C10960 + C70786 * C11608 + C71089 * C1391 +
             C70785 * C1790 + C71088 * C1388 + C70784 * C1787 + C71087 * C108 +
             C70783 * C556) *
                C244) *
               C92062 * C92137 * C1985) *
              C1984)) /
            (p * q * std::sqrt(p + q));
    d2eexx[61] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C36216 * C107 + C92062 * C113) * C801 +
              (C36216 * C117 + C92062 * C125) * C92078) *
                 C4099 +
             (C36700 + C36701) * C4100 + C36708 * C4101) *
                C60959 +
            ((C41116 + C41117) * C4099 + C43820 * C4100 + C56777 * C4101) *
                C92212) *
               C2709 -
           (((C40326 + C40327) * C4101 + C43821 * C4100 +
             (C41119 + C41118) * C4099) *
                C92212 +
            (C60033 * C4101 + C43822 * C4100 + (C41117 + C41116) * C4099) *
                C60959) *
               C2710) *
              C1985 +
          (((C43820 * C4099 + C56777 * C4100 + (C38979 + C38978) * C4101) *
                C60959 +
            (C41098 * C4099 + (C40327 + C40326) * C4100 +
             ((C36216 * C37227 + C92062 * C37228) * C801 +
              (C36216 * C37229 + C92062 * C37230) * C92078) *
                 C4101) *
                C92212) *
               C2710 -
           (((C38978 + C38979) * C4101 + C60033 * C4100 + C43822 * C4099) *
                C92212 +
            ((C36705 + C36704) * C4101 + (C36703 + C36702) * C4100 +
             (C36701 + C36700) * C4099) *
                C60959) *
               C2709) *
              C1986)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31262 * C107 + C31257 * C113 + C31263 * C108 + C31258 * C114 +
              C31264 * C109 + C31259 * C115) *
                 C801 +
             (C31262 * C117 + C31257 * C125 + C31263 * C118 + C31258 * C126 +
              C31264 * C119 + C31259 * C127) *
                 C92078) *
                C92137 * C60959 +
            ((C62408 + C62409 + C62410) * C801 +
             (C62411 + C62412 + C62413) * C92078) *
                C92137 * C92212) *
               C2709 -
           (((C62414 + C62415 + C62416) * C92078 +
             (C62417 + C62418 + C62419) * C801) *
                C92137 * C92212 +
            ((C62413 + C62412 + C62411) * C92078 +
             (C62410 + C62409 + C62408) * C801) *
                C92137 * C60959) *
               C2710) *
              C1985 +
          ((((C35359 + C35358 + C35357) * C801 +
             (C35356 + C35355 + C35354) * C92078) *
                C92137 * C60959 +
            ((C31262 * C5773 + C31257 * C5781 + C31263 * C5774 +
              C31258 * C5782 + C31264 * C11870 + C31259 * C11871) *
                 C801 +
             (C31262 * C5783 + C31257 * C5791 + C31263 * C5784 +
              C31258 * C5792 + C31264 * C11872 + C31259 * C11873) *
                 C92078) *
                C92137 * C92212) *
               C2710 -
           (((C35354 + C35355 + C35356) * C92078 +
             (C35357 + C35358 + C35359) * C801) *
                C92137 * C92212 +
            ((C32047 + C32046 + C32045) * C92078 +
             (C32044 + C32043 + C32042) * C801) *
                C92137 * C60959) *
               C2709) *
              C1986)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C36216 * C107 + C92062 * C113) * C801 +
             (C36216 * C117 + C92062 * C125) * C92078) *
                C92137 * C70783 +
            (C41116 + C41117) * C92137 * C70784 + C71696 * C70785 +
            C71702 * C70786) *
               C2709 -
           ((C71705 + C71706) * C92137 * C70786 +
            (C41122 + C41123) * C92137 * C70785 +
            (C41119 + C41118) * C92137 * C70784 +
            (C41117 + C41116) * C92137 * C70783) *
               C2710) *
              C1985 +
          ((C43820 * C92137 * C70783 + C41098 * C92137 * C70784 +
            (C41121 + C41120) * C92137 * C70785 +
            ((C36216 * C41085 + C92062 * C41086) * C801 +
             (C36216 * C41087 + C92062 * C41088) * C92078) *
                C92137 * C70786) *
               C2710 -
           ((C41120 + C41121) * C92137 * C70786 + C43821 * C92137 * C70785 +
            C43822 * C92137 * C70784 + (C36701 + C36700) * C92137 * C70783) *
               C2709) *
              C1986)) /
            (p * q * std::sqrt(p + q));
    d2eexy[61] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((((C36216 * C107 + C92062 * C113) * C2059 +
                       (C36216 * C182 + C92062 * C188) * C1985 -
                       C36692 * C2060 - C36770 * C1986) *
                          C4099 +
                      (C36692 * C2059 + C36770 * C1985 - C36694 * C2060 -
                       C36771 * C1986) *
                          C4100 +
                      (C36694 * C2059 + C36771 * C1985 - C36696 * C2060 -
                       C36772 * C1986) *
                          C4101) *
                         C60959 +
                     ((C43923 + C43924 - C43925 - C43926) * C4099 +
                      (C43927 + C43928 - C43929 - C43930) * C4100 +
                      (C60132 + C60133 - C60134 - C60135) * C4101) *
                         C92212) *
                        C92078 * C2709 +
                    (((C43925 - (C43924 + C43923) + C43926) * C4099 +
                      (C43929 - (C43928 + C43927) + C43930) * C4100 +
                      (C60134 - (C60133 + C60132) + C60135) * C4101) *
                         C60959 +
                     ((C43933 - (C43932 + C43931) + C43934) * C4099 +
                      (C43937 - (C43936 + C43935) + C43938) * C4100 +
                      ((C36216 * C37227 + C92062 * C37228) * C2060 -
                       (C40407 * C1985 + C40323 * C2059) +
                       (C36216 * C37281 + C92062 * C37282) * C1986) *
                          C4101) *
                         C92212) *
                        C92078 * C2710)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C31262 * C107 + C31257 * C113 + C31263 * C108 +
                       C31258 * C114 + C31264 * C109 + C31259 * C115) *
                          C2059 +
                      (C31262 * C182 + C31257 * C188 + C31263 * C183 +
                       C31258 * C189 + C31264 * C184 + C31259 * C190) *
                          C1985 -
                      (C32044 + C32043 + C32042) * C2060 -
                      (C32140 + C32141 + C32142) * C1986) *
                         C92137 * C60959 +
                     ((C62408 + C62409 + C62410) * C2059 +
                      (C62506 + C62507 + C62508) * C1985 -
                      (C35357 + C35358 + C35359) * C2060 -
                      (C35466 + C35465 + C35464) * C1986) *
                         C92137 * C92212) *
                        C92078 * C2709 +
                    (((C35359 + C35358 + C35357) * C2060 -
                      ((C62508 + C62507 + C62506) * C1985 +
                       (C62410 + C62409 + C62408) * C2059) +
                      (C35464 + C35465 + C35466) * C1986) *
                         C92137 * C60959 +
                     ((C31262 * C5773 + C31257 * C5781 + C31263 * C5774 +
                       C31258 * C5782 + C31264 * C11870 + C31259 * C11871) *
                          C2060 -
                      ((C62509 + C62510 + C62511) * C1985 +
                       (C62417 + C62418 + C62419) * C2059) +
                      (C31262 * C5871 + C31257 * C5877 + C31263 * C5872 +
                       C31258 * C5878 + C31264 * C11972 + C31259 * C11973) *
                          C1986) *
                         C92137 * C92212) *
                        C92078 * C2710)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C36216 * C107 + C92062 * C113) * C2059 +
                      (C36216 * C182 + C92062 * C188) * C1985 - C36692 * C2060 -
                      C36770 * C1986) *
                         C92137 * C70783 +
                     (C43923 + C43924 - C43925 - C43926) * C92137 * C70784 +
                     (C43931 + C43932 - C43933 - C43934) * C92137 * C70785 +
                     (C73490 + C73491 - C73492 - C73493) * C92137 * C70786) *
                        C92078 * C2709 +
                    ((C43925 - (C43924 + C43923) + C43926) * C92137 * C70783 +
                     (C43933 - (C43932 + C43931) + C43934) * C92137 * C70784 +
                     (C73492 - (C73491 + C73490) + C73493) * C92137 * C70785 +
                     ((C36216 * C41085 + C92062 * C41086) * C2060 -
                      (C71765 * C1985 + C71704 * C2059) +
                      (C36216 * C41200 + C92062 * C41201) * C1986) *
                         C92137 * C70786) *
                        C92078 * C2710)) /
                      (p * q * std::sqrt(p + q));
    d2eexz[61] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C36216 * C107 + C92062 * C113) * C2849 +
             (C36216 * C245 + C92062 * C251) * C2709 - C41107 * C2850 -
             C41316 * C2710) *
                C4099 +
            (C39129 + C39130 - C39131 - C39147) * C4100 +
            (C39134 + C39135 - C39136 - C39148) * C4101) *
               C60959 +
           ((C41107 * C2849 + C41316 * C2709 - C41109 * C2850 -
             C41317 * C2710) *
                C4099 +
            (C44039 + C44040 - C44041 - C44042) * C4100 +
            (C60234 + C60235 - C60236 - C60237) * C4101) *
               C92212) *
              C1985 +
          (((C39131 - (C39130 + C39129) + C39147) * C4099 +
            (C39136 - (C39135 + C39134) + C39148) * C4100 +
            (C39141 - (C39140 + C39139) + C39149) * C4101) *
               C60959 +
           ((C44041 - (C44040 + C44039) + C44042) * C4099 +
            (C60236 - (C60235 + C60234) + C60237) * C4100 +
            ((C36216 * C37227 + C92062 * C37228) * C2850 -
             (C39146 * C2709 + C38973 * C2849) +
             (C36216 * C37333 + C92062 * C37334) * C2710) *
                C4101) *
               C92212) *
              C1986) *
         C92078) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31262 * C107 + C31257 * C113 + C31263 * C108 + C31258 * C114 +
             C31264 * C109 + C31259 * C115) *
                C2849 +
            (C31262 * C245 + C31257 * C251 + C31263 * C246 + C31258 * C252 +
             C31264 * C247 + C31259 * C253) *
                C2709 -
            (C62410 + C62409 + C62408) * C2850 -
            (C62598 + C62599 + C62600) * C2710) *
               C92137 * C60959 +
           ((C62408 + C62409 + C62410) * C2849 +
            (C62600 + C62599 + C62598) * C2709 -
            (C62417 + C62418 + C62419) * C2850 -
            (C62603 + C62602 + C62601) * C2710) *
               C92137 * C92212) *
              C1985 +
          (((C35359 + C35358 + C35357) * C2850 -
            ((C32234 + C32233 + C32232) * C2709 +
             (C32044 + C32043 + C32042) * C2849) +
            (C35573 + C35572 + C35571) * C2710) *
               C92137 * C60959 +
           ((C31262 * C5773 + C31257 * C5781 + C31263 * C5774 + C31258 * C5782 +
             C31264 * C11870 + C31259 * C11871) *
                C2850 -
            ((C35571 + C35572 + C35573) * C2709 +
             (C35357 + C35358 + C35359) * C2849) +
            (C31262 * C5955 + C31257 * C5961 + C31263 * C5956 + C31258 * C5962 +
             C31264 * C12072 + C31259 * C12073) *
                C2710) *
               C92137 * C92212) *
              C1986) *
         C92078) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C36216 * C107 + C92062 * C113) * C2849 +
            (C36216 * C245 + C92062 * C251) * C2709 - C41107 * C2850 -
            C41316 * C2710) *
               C92137 * C70783 +
           (C41107 * C2849 + C41316 * C2709 - C41109 * C2850 - C41317 * C2710) *
               C92137 * C70784 +
           (C41109 * C2849 + C41317 * C2709 - C41115 * C2850 - C41318 * C2710) *
               C92137 * C70785 +
           (C41115 * C2849 + C41318 * C2709 - C71704 * C2850 - C71821 * C2710) *
               C92137 * C70786) *
              C1985 +
          ((C39131 - (C39130 + C39129) + C39147) * C92137 * C70783 +
           (C44041 - (C44040 + C44039) + C44042) * C92137 * C70784 +
           (C44045 - (C44044 + C44043) + C44046) * C92137 * C70785 +
           ((C36216 * C41085 + C92062 * C41086) * C2850 -
            (C41319 * C2709 + C41113 * C2849) +
            (C36216 * C41305 + C92062 * C41306) * C2710) *
               C92137 * C70786) *
              C1986) *
         C92078) /
            (p * q * std::sqrt(p + q));
    d2eeyx[61] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4326 * C107 + C4099 * C308 + C4327 * C805 + C4100 * C1022 +
              C4328 * C806 + C4101 * C1023) *
                 C801 +
             (C4326 * C117 + C4099 * C314 + C4327 * C813 + C4100 * C1030 +
              C4328 * C822 + C4101 * C1031) *
                 C92078) *
                C60959 +
            ((C67562 + C67563 + C67564) * C801 +
             (C67565 + C67566 + C67567) * C92078) *
                C92212) *
               C92062 * C2709 -
           (((C67568 + C67569 + C67570) * C92078 +
             (C67571 + C67572 + C67573) * C801) *
                C92212 +
            ((C67567 + C67566 + C67565) * C92078 +
             (C67564 + C67563 + C67562) * C801) *
                C60959) *
               C92062 * C2710) *
              C1985 +
          ((((C70172 + C70173 + C70174) * C801 +
             (C70175 + C70176 + C70177) * C92078) *
                C60959 +
            ((C4326 * C5773 + C4099 * C6043 + C4327 * C5775 + C4100 * C6044 +
              C4328 * C37227 + C4101 * C37385) *
                 C801 +
             (C4326 * C5783 + C4099 * C6049 + C4327 * C5787 + C4100 * C6050 +
              C4328 * C37229 + C4101 * C37386) *
                 C92078) *
                C92212) *
               C92062 * C2710 -
           (((C70177 + C70176 + C70175) * C92078 +
             (C70174 + C70173 + C70172) * C801) *
                C92212 +
            ((C4328 * C4886 + C4101 * C5222 + C4327 * C822 + C4100 * C1031 +
              C4326 * C813 + C4099 * C1030) *
                 C92078 +
             (C4328 * C4882 + C4101 * C5218 + C4327 * C806 + C4100 * C1023 +
              C4326 * C805 + C4099 * C1022) *
                 C801) *
                C60959) *
               C92062 * C2709) *
              C1986)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C307 * C107 + C92137 * C308) * C801 +
              (C307 * C117 + C92137 * C314) * C92078) *
                 C60959 +
             (C11336 + C11337) * C92212) *
                C31257 +
            ((C337 * C801 + C338 * C92078) * C60959 +
             (C11315 + C11316) * C92212) *
                C31258 +
            ((C339 * C801 + C340 * C92078) * C60959 +
             (C21541 + C21542) * C92212) *
                C31259) *
               C2709 -
           (((C21543 + C21544) * C92212 + (C21542 + C21541) * C60959) * C31259 +
            ((C11318 + C11317) * C92212 + (C11316 + C11315) * C60959) * C31258 +
            ((C11339 + C11338) * C92212 + (C11337 + C11336) * C60959) *
                C31257) *
               C2710) *
              C1985 +
          ((((C14204 + C14205) * C60959 + (C14206 + C14207) * C92212) * C31257 +
            ((C14196 + C14197) * C60959 + (C14198 + C14199) * C92212) * C31258 +
            ((C24230 + C24231) * C60959 +
             ((C307 * C11870 + C92137 * C12172) * C801 +
              (C307 * C11872 + C92137 * C12173) * C92078) *
                 C92212) *
                C31259) *
               C2710 -
           (((C24231 + C24230) * C92212 +
             (C2215 * C92078 + C2214 * C801) * C60959) *
                C31259 +
            ((C14197 + C14196) * C92212 +
             (C2213 * C92078 + C2212 * C801) * C60959) *
                C31258 +
            ((C14205 + C14204) * C92212 +
             ((C307 * C813 + C92137 * C1030) * C92078 +
              (C307 * C805 + C92137 * C1022) * C801) *
                 C60959) *
                C31257) *
               C2709) *
              C1986)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92137 * C308) * C801 +
             (C307 * C117 + C92137 * C314) * C92078) *
                C70783 +
            (C11336 + C11337) * C70784 + C11344 * C70785 + C71874 * C70786) *
               C92062 * C2709 -
           ((C71881 + C71882) * C70786 + (C11342 + C11343) * C70785 +
            (C11339 + C11338) * C70784 + (C11337 + C11336) * C70783) *
               C92062 * C2710) *
              C1985 +
          (((C14204 + C14205) * C70783 + (C14206 + C14207) * C70784 +
            (C73632 + C73633) * C70785 +
            ((C307 * C41085 + C92137 * C41393) * C801 +
             (C307 * C41087 + C92137 * C41394) * C92078) *
                C70786) *
               C92062 * C2710 -
           ((C73633 + C73632) * C70786 + (C14207 + C14206) * C70785 +
            (C14205 + C14204) * C70784 +
            ((C307 * C813 + C92137 * C1030) * C92078 +
             (C307 * C805 + C92137 * C1022) * C801) *
                C70783) *
               C92062 * C2709) *
              C1986)) /
            (p * q * std::sqrt(p + q));
    d2eeyy[61] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C4326 * C107 + C4099 * C308 + C4327 * C805 +
                       C4100 * C1022 + C4328 * C806 + C4101 * C1023) *
                          C2059 +
                      (C4326 * C182 + C4099 * C394 + C4327 * C890 +
                       C4100 * C1085 + C4328 * C891 + C4101 * C1086) *
                          C1985 -
                      (C4328 * C4882 + C4101 * C5218 + C4327 * C806 +
                       C4100 * C1023 + C4326 * C805 + C4099 * C1022) *
                          C2060 -
                      (C4328 * C5012 + C4101 * C5299 + C4327 * C891 +
                       C4100 * C1086 + C4326 * C890 + C4099 * C1085) *
                          C1986) *
                         C60959 +
                     ((C67562 + C67563 + C67564) * C2059 +
                      (C67660 + C67661 + C67662) * C1985 -
                      (C70174 + C70173 + C70172) * C2060 -
                      (C70282 + C70283 + C70284) * C1986) *
                         C92212) *
                        C92062 * C92078 * C2709 +
                    (((C70172 + C70173 + C70174) * C2060 -
                      ((C67662 + C67661 + C67660) * C1985 +
                       (C67564 + C67563 + C67562) * C2059) +
                      (C70284 + C70283 + C70282) * C1986) *
                         C60959 +
                     ((C4326 * C5773 + C4099 * C6043 + C4327 * C5775 +
                       C4100 * C6044 + C4328 * C37227 + C4101 * C37385) *
                          C2060 -
                      ((C67663 + C67664 + C67665) * C1985 +
                       (C67571 + C67572 + C67573) * C2059) +
                      (C4326 * C5871 + C4099 * C6129 + C4327 * C5873 +
                       C4100 * C6130 + C4328 * C37281 + C4101 * C37437) *
                          C1986) *
                         C92212) *
                        C92062 * C92078 * C2710)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((((C307 * C107 + C92137 * C308) * C2059 +
                       (C307 * C182 + C92137 * C394) * C1985 -
                       (C307 * C805 + C92137 * C1022) * C2060 -
                       (C307 * C890 + C92137 * C1085) * C1986) *
                          C60959 +
                      (C14308 + C14309 - C14310 - C14320) * C92212) *
                         C31257 +
                     ((C2285 + C2286 - C2287 - C2303) * C60959 +
                      (C12286 + C12287 - C12288 - C12298) * C92212) *
                         C31258 +
                     ((C2290 + C2291 - C2292 - C2304) * C60959 +
                      (C22411 + C22412 - C22413 - C22417) * C92212) *
                         C31259) *
                        C92078 * C2709 +
                    (((C14310 - (C14309 + C14308) + C14320) * C60959 +
                      (C14315 - (C14314 + C14313) + C14321) * C92212) *
                         C31257 +
                     ((C12288 - (C12287 + C12286) + C12298) * C60959 +
                      (C12293 - (C12292 + C12291) + C12299) * C92212) *
                         C31258 +
                     ((C22413 - (C22412 + C22411) + C22417) * C60959 +
                      ((C307 * C11870 + C92137 * C12172) * C2060 -
                       (C9833 * C1985 + C9750 * C2059) +
                       (C307 * C11972 + C92137 * C12284) * C1986) *
                          C92212) *
                         C31259) *
                        C92078 * C2710)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C307 * C107 + C92137 * C308) * C2059 +
                      (C307 * C182 + C92137 * C394) * C1985 -
                      (C307 * C805 + C92137 * C1022) * C2060 -
                      (C307 * C890 + C92137 * C1085) * C1986) *
                         C70783 +
                     (C14308 + C14309 - C14310 - C14320) * C70784 +
                     (C14313 + C14314 - C14315 - C14321) * C70785 +
                     (C73700 + C73701 - C73702 - C73706) * C70786) *
                        C92062 * C92078 * C2709 +
                    ((C14310 - (C14309 + C14308) + C14320) * C70783 +
                     (C14315 - (C14314 + C14313) + C14321) * C70784 +
                     (C73702 - (C73701 + C73700) + C73706) * C70785 +
                     ((C307 * C41085 + C92137 * C41393) * C2060 -
                      (C71938 * C1985 + C71880 * C2059) +
                      (C307 * C41200 + C92137 * C41510) * C1986) *
                         C70786) *
                        C92062 * C92078 * C2710)) /
                      (p * q * std::sqrt(p + q));
    d2eeyz[61] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4326 * C107 + C4099 * C308 + C4327 * C805 + C4100 * C1022 +
             C4328 * C806 + C4101 * C1023) *
                C2849 +
            (C4326 * C245 + C4099 * C474 + C4327 * C956 + C4100 * C1146 +
             C4328 * C957 + C4101 * C1147) *
                C2709 -
            (C67564 + C67563 + C67562) * C2850 -
            (C67752 + C67753 + C67754) * C2710) *
               C60959 +
           ((C67562 + C67563 + C67564) * C2849 +
            (C67754 + C67753 + C67752) * C2709 -
            (C67571 + C67572 + C67573) * C2850 -
            (C67757 + C67756 + C67755) * C2710) *
               C92212) *
              C92062 * C1985 +
          (((C70172 + C70173 + C70174) * C2850 -
            ((C4328 * C5114 + C4101 * C5378 + C4327 * C957 + C4100 * C1147 +
              C4326 * C956 + C4099 * C1146) *
                 C2709 +
             (C4328 * C4882 + C4101 * C5218 + C4327 * C806 + C4100 * C1023 +
              C4326 * C805 + C4099 * C1022) *
                 C2849) +
            (C70389 + C70390 + C70391) * C2710) *
               C60959 +
           ((C4326 * C5773 + C4099 * C6043 + C4327 * C5775 + C4100 * C6044 +
             C4328 * C37227 + C4101 * C37385) *
                C2850 -
            ((C70391 + C70390 + C70389) * C2709 +
             (C70174 + C70173 + C70172) * C2849) +
            (C4326 * C5955 + C4099 * C6208 + C4327 * C5959 + C4100 * C6209 +
             C4328 * C37333 + C4101 * C37488) *
                C2710) *
               C92212) *
              C92062 * C1986) *
         C92078) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92137 * C308) * C2849 +
             (C307 * C245 + C92137 * C474) * C2709 - C11327 * C2850 -
             C11531 * C2710) *
                C60959 +
            (C11327 * C2849 + C11531 * C2709 - C11329 * C2850 -
             C11532 * C2710) *
                C92212) *
               C31257 +
           ((C3089 + C3090 - C3091 - C3107) * C60959 +
            (C13410 + C13411 - C13412 - C13413) * C92212) *
               C31258 +
           ((C3094 + C3095 - C3096 - C3108) * C60959 +
            (C23492 + C23493 - C23494 - C23495) * C92212) *
               C31259) *
              C1985 +
          (((C14200 * C2850 -
             ((C307 * C956 + C92137 * C1146) * C2709 +
              (C307 * C805 + C92137 * C1022) * C2849) +
             C14426 * C2710) *
                C60959 +
            (C14202 * C2850 - (C14426 * C2709 + C14200 * C2849) +
             C14427 * C2710) *
                C92212) *
               C31257 +
           ((C12183 * C2850 - (C2384 * C2709 + C2212 * C2849) +
             C12406 * C2710) *
                C60959 +
            (C12185 * C2850 - (C12406 * C2709 + C12183 * C2849) +
             C12405 * C2710) *
                C92212) *
               C31258 +
           ((C22311 * C2850 - (C2383 * C2709 + C2214 * C2849) +
             C22519 * C2710) *
                C60959 +
            ((C307 * C11870 + C92137 * C12172) * C2850 -
             (C22519 * C2709 + C22311 * C2849) +
             (C307 * C12072 + C92137 * C12397) * C2710) *
                C92212) *
               C31259) *
              C1986) *
         C92078) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C307 * C107 + C92137 * C308) * C2849 +
            (C307 * C245 + C92137 * C474) * C2709 - C11327 * C2850 -
            C11531 * C2710) *
               C70783 +
           (C11327 * C2849 + C11531 * C2709 - C11329 * C2850 - C11532 * C2710) *
               C70784 +
           (C11329 * C2849 + C11532 * C2709 - C11335 * C2850 - C11533 * C2710) *
               C70785 +
           (C11335 * C2849 + C11533 * C2709 - C71880 * C2850 - C71993 * C2710) *
               C70786) *
              C92062 * C1985 +
          ((C14200 * C2850 -
            ((C307 * C956 + C92137 * C1146) * C2709 +
             (C307 * C805 + C92137 * C1022) * C2849) +
            C14426 * C2710) *
               C70783 +
           (C14202 * C2850 - (C14426 * C2709 + C14200 * C2849) +
            C14427 * C2710) *
               C70784 +
           (C73630 * C2850 - (C14427 * C2709 + C14202 * C2849) +
            C73775 * C2710) *
               C70785 +
           ((C307 * C41085 + C92137 * C41393) * C2850 -
            (C73775 * C2709 + C73630 * C2849) +
            (C307 * C41305 + C92137 * C41607) * C2710) *
               C70786) *
              C92062 * C1986) *
         C92078) /
            (p * q * std::sqrt(p + q));
    d2eezx[61] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C61411 * C107 + C60959 * C555 + C61412 * C1389 + C92212 * C1788) *
                 C801 +
             (C61411 * C117 + C60959 * C561 + C61412 * C1397 + C92212 * C1796) *
                 C92078) *
                C92062 * C4099 +
            ((C67034 + C67035) * C801 + (C67036 + C67037) * C92078) * C92062 *
                C4100 +
            C67051 * C4101) *
               C2709 -
           (((C70506 + C70507) * C92078 + (C70508 + C70509) * C801) * C92062 *
                C4101 +
            ((C70510 + C70511) * C92078 + (C70512 + C70513) * C801) * C92062 *
                C4100 +
            ((C61412 * C1406 + C92212 * C1797 + C61411 * C1397 +
              C60959 * C1796) *
                 C92078 +
             (C61412 * C1390 + C92212 * C1789 + C61411 * C1389 +
              C60959 * C1788) *
                 C801) *
                C92062 * C4099) *
               C2710) *
              C1985 +
          ((((C70513 + C70512) * C801 + (C70511 + C70510) * C92078) * C92062 *
                C4099 +
            ((C70509 + C70508) * C801 + (C70507 + C70506) * C92078) * C92062 *
                C4100 +
            ((C61411 * C8536 + C60959 * C9196 + C61412 * C37227 +
              C92212 * C37539) *
                 C801 +
             (C61411 * C8540 + C60959 * C9198 + C61412 * C37229 +
              C92212 * C37540) *
                 C92078) *
                C92062 * C4101) *
               C2710 -
           (((C67042 + C67043) * C92078 + (C67044 + C67045) * C801) * C92062 *
                C4101 +
            ((C67041 + C67040) * C92078 + (C67039 + C67038) * C801) * C92062 *
                C4100 +
            ((C67037 + C67036) * C92078 + (C67035 + C67034) * C801) * C92062 *
                C4099) *
               C2709) *
              C1986)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C61411 * C107 + C60959 * C555 + C61412 * C1389 + C92212 * C1788) *
                 C801 +
             (C61411 * C117 + C60959 * C561 + C61412 * C1397 + C92212 * C1796) *
                 C92078) *
                C31257 +
            ((C61439 + C61438) * C801 + (C61441 + C61440) * C92078) * C31258 +
            (C61450 * C801 + C61451 * C92078) * C31259) *
               C92137 * C2709 -
           (((C64723 + C64722) * C92078 + (C64721 + C64720) * C801) * C31259 +
            ((C64719 + C64718) * C92078 + (C64717 + C64716) * C801) * C31258 +
            ((C61412 * C1406 + C92212 * C1797 + C61411 * C1397 +
              C60959 * C1796) *
                 C92078 +
             (C61412 * C1390 + C92212 * C1789 + C61411 * C1389 +
              C60959 * C1788) *
                 C801) *
                C31257) *
               C92137 * C2710) *
              C1985 +
          ((((C61411 * C3431 + C60959 * C3875 + C61412 * C5773 +
              C92212 * C6289) *
                 C801 +
             (C61411 * C3439 + C60959 * C3879 + C61412 * C5783 +
              C92212 * C6295) *
                 C92078) *
                C31257 +
            ((C61411 * C3432 + C60959 * C3876 + C61412 * C5774 +
              C92212 * C6290) *
                 C801 +
             (C61411 * C3440 + C60959 * C3880 + C61412 * C5784 +
              C92212 * C6296) *
                 C92078) *
                C31258 +
            ((C61411 * C3433 + C60959 * C3877 + C61412 * C11870 +
              C92212 * C12506) *
                 C801 +
             (C61411 * C3441 + C60959 * C3881 + C61412 * C11872 +
              C92212 * C12507) *
                 C92078) *
                C31259) *
               C92137 * C2710 -
           (((C63757 + C63756) * C92078 + (C63755 + C63754) * C801) * C31259 +
            ((C63753 + C63752) * C92078 + (C63751 + C63750) * C801) * C31258 +
            ((C61412 * C3439 + C92212 * C3879 + C61411 * C813 +
              C60959 * C1212) *
                 C92078 +
             (C61412 * C3431 + C92212 * C3875 + C61411 * C805 +
              C60959 * C1204) *
                 C801) *
                C31257) *
               C92137 * C2709) *
              C1986)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C71087 * C107 + C70783 * C555 + C71088 * C1389 + C70784 * C1788 +
             C71089 * C1390 + C70785 * C1789 + C71090 * C10961 +
             C70786 * C11609) *
                C801 +
            (C71087 * C117 + C70783 * C561 + C71088 * C1397 + C70784 * C1796 +
             C71089 * C1406 + C70785 * C1797 + C71090 * C10965 +
             C70786 * C11613) *
                C92078) *
               C92062 * C92137 * C2709 -
           ((C71090 * C10970 + C70786 * C11614 + C71089 * C10965 +
             C70785 * C11613 + C71088 * C1406 + C70784 * C1797 +
             C71087 * C1397 + C70783 * C1796) *
                C92078 +
            (C71090 * C10962 + C70786 * C11610 + C71089 * C10961 +
             C70785 * C11609 + C71088 * C1390 + C70784 * C1789 +
             C71087 * C1389 + C70783 * C1788) *
                C801) *
               C92062 * C92137 * C2710) *
              C1985 +
          (((C71087 * C3431 + C70783 * C3875 + C71088 * C5773 + C70784 * C6289 +
             C71089 * C13849 + C70785 * C14525 + C71090 * C41085 +
             C70786 * C41701) *
                C801 +
            (C71087 * C3439 + C70783 * C3879 + C71088 * C5783 + C70784 * C6295 +
             C71089 * C13853 + C70785 * C14527 + C71090 * C41087 +
             C70786 * C41702) *
                C92078) *
               C92062 * C92137 * C2710 -
           ((C71090 * C13853 + C70786 * C14527 + C71089 * C5783 +
             C70785 * C6295 + C71088 * C3439 + C70784 * C3879 + C71087 * C813 +
             C70783 * C1212) *
                C92078 +
            (C71090 * C13849 + C70786 * C14525 + C71089 * C5773 +
             C70785 * C6289 + C71088 * C3431 + C70784 * C3875 + C71087 * C805 +
             C70783 * C1204) *
                C801) *
               C92062 * C92137 * C2709) *
              C1986)) /
            (p * q * std::sqrt(p + q));
    d2eezy[61] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C61411 * C107 + C60959 * C555 + C61412 * C1389 + C92212 * C1788) *
                C2059 +
            (C61411 * C182 + C60959 * C641 + C61412 * C1471 + C92212 * C1854) *
                C1985 -
            (C67035 + C67034) * C2060 - (C67138 + C67139) * C1986) *
               C92062 * C4099 +
           ((C67034 + C67035) * C2059 + (C67139 + C67138) * C1985 -
            (C67039 + C67038) * C2060 - (C67141 + C67140) * C1986) *
               C92062 * C4100 +
           (C67046 * C2059 + C67144 * C1985 - (C67044 + C67045) * C2060 -
            (C67143 + C67142) * C1986) *
               C92062 * C4101) *
              C92078 * C2709 +
          (((C70513 + C70512) * C2060 -
            ((C61412 * C1472 + C92212 * C1855 + C61411 * C1471 +
              C60959 * C1854) *
                 C1985 +
             (C61412 * C1390 + C92212 * C1789 + C61411 * C1389 +
              C60959 * C1788) *
                 C2059) +
            (C70620 + C70621) * C1986) *
               C92062 * C4099 +
           ((C70509 + C70508) * C2060 -
            ((C70621 + C70620) * C1985 + (C70512 + C70513) * C2059) +
            (C70622 + C70623) * C1986) *
               C92062 * C4100 +
           ((C61411 * C8536 + C60959 * C9196 + C61412 * C37227 +
             C92212 * C37539) *
                C2060 -
            ((C70623 + C70622) * C1985 + (C70508 + C70509) * C2059) +
            (C61411 * C8666 + C60959 * C9318 + C61412 * C37281 +
             C92212 * C37591) *
                C1986) *
               C92062 * C4101) *
              C92078 * C2710)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C61411 * C107 + C60959 * C555 + C61412 * C1389 + C92212 * C1788) *
                C2059 +
            (C61411 * C182 + C60959 * C641 + C61412 * C1471 + C92212 * C1854) *
                C1985 -
            (C61412 * C3431 + C92212 * C3875 + C61411 * C805 + C60959 * C1204) *
                C2060 -
            (C61412 * C3513 + C92212 * C3949 + C61411 * C890 + C60959 * C1267) *
                C1986) *
               C31257 +
           ((C61439 + C61438) * C2059 + (C61539 + C61540) * C1985 -
            (C63751 + C63750) * C2060 - (C63864 + C63865) * C1986) *
               C31258 +
           (C61450 * C2059 + C61545 * C1985 - (C63755 + C63754) * C2060 -
            (C63866 + C63867) * C1986) *
               C31259) *
              C92137 * C92078 * C2709 +
          (((C61411 * C3431 + C60959 * C3875 + C61412 * C5773 +
             C92212 * C6289) *
                C2060 -
            ((C61412 * C1472 + C92212 * C1855 + C61411 * C1471 +
              C60959 * C1854) *
                 C1985 +
             (C61412 * C1390 + C92212 * C1789 + C61411 * C1389 +
              C60959 * C1788) *
                 C2059) +
            (C61411 * C3513 + C60959 * C3949 + C61412 * C5871 +
             C92212 * C6375) *
                C1986) *
               C31257 +
           ((C61411 * C3432 + C60959 * C3876 + C61412 * C5774 +
             C92212 * C6290) *
                C2060 -
            ((C64831 + C64830) * C1985 + (C64717 + C64716) * C2059) +
            (C61411 * C3514 + C60959 * C3950 + C61412 * C5872 +
             C92212 * C6376) *
                C1986) *
               C31258 +
           ((C61411 * C3433 + C60959 * C3877 + C61412 * C11870 +
             C92212 * C12506) *
                C2060 -
            ((C64833 + C64832) * C1985 + (C64721 + C64720) * C2059) +
            (C61411 * C3515 + C60959 * C3951 + C61412 * C11972 +
             C92212 * C12624) *
                C1986) *
               C31259) *
              C92137 * C92078 * C2710)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C71087 * C107 + C70783 * C555 + C71088 * C1389 + C70784 * C1788 +
            C71089 * C1390 + C70785 * C1789 + C71090 * C10961 +
            C70786 * C11609) *
               C2059 +
           (C71087 * C182 + C70783 * C641 + C71088 * C1471 + C70784 * C1854 +
            C71089 * C1472 + C70785 * C1855 + C71090 * C11093 +
            C70786 * C11691) *
               C1985 -
           (C71090 * C13849 + C70786 * C14525 + C71089 * C5773 +
            C70785 * C6289 + C71088 * C3431 + C70784 * C3875 + C71087 * C805 +
            C70783 * C1204) *
               C2060 -
           (C71090 * C13967 + C70786 * C14627 + C71089 * C5871 +
            C70785 * C6375 + C71088 * C3513 + C70784 * C3949 + C71087 * C890 +
            C70783 * C1267) *
               C1986) *
              C92062 * C92137 * C92078 * C2709 +
          ((C71087 * C3431 + C70783 * C3875 + C71088 * C5773 + C70784 * C6289 +
            C71089 * C13849 + C70785 * C14525 + C71090 * C41085 +
            C70786 * C41701) *
               C2060 -
           ((C71090 * C11094 + C70786 * C11692 + C71089 * C11093 +
             C70785 * C11691 + C71088 * C1472 + C70784 * C1855 +
             C71087 * C1471 + C70783 * C1854) *
                C1985 +
            (C71090 * C10962 + C70786 * C11610 + C71089 * C10961 +
             C70785 * C11609 + C71088 * C1390 + C70784 * C1789 +
             C71087 * C1389 + C70783 * C1788) *
                C2059) +
           (C71087 * C3513 + C70783 * C3949 + C71088 * C5871 + C70784 * C6375 +
            C71089 * C13967 + C70785 * C14627 + C71090 * C41200 +
            C70786 * C41777) *
               C1986) *
              C92062 * C92137 * C92078 * C2710)) /
            (p * q * std::sqrt(p + q));
    d2eezz[61] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C61411 * C107 + C60959 * C555 + C61412 * C1389 + C92212 * C1788) *
                C2849 +
            (C61411 * C245 + C60959 * C719 + C61412 * C1540 + C92212 * C1909) *
                C2709 -
            (C61412 * C1390 + C92212 * C1789 + C61411 * C1389 +
             C60959 * C1788) *
                C2850 -
            (C61412 * C1541 + C92212 * C1910 + C61411 * C1540 +
             C60959 * C1909) *
                C2710) *
               C92062 * C4099 +
           ((C67034 + C67035) * C2849 + (C67232 + C67233) * C2709 -
            (C70512 + C70513) * C2850 - (C70730 + C70731) * C2710) *
               C92062 * C4100 +
           (C67046 * C2849 + C67238 * C2709 - (C70508 + C70509) * C2850 -
            (C70732 + C70733) * C2710) *
               C92062 * C4101) *
              C1985 +
          (((C70513 + C70512) * C2850 -
            ((C67233 + C67232) * C2709 + (C67035 + C67034) * C2849) +
            (C70731 + C70730) * C2710) *
               C92062 * C4099 +
           ((C70509 + C70508) * C2850 -
            ((C67235 + C67234) * C2709 + (C67039 + C67038) * C2849) +
            (C70733 + C70732) * C2710) *
               C92062 * C4100 +
           ((C61411 * C8536 + C60959 * C9196 + C61412 * C37227 +
             C92212 * C37539) *
                C2850 -
            ((C67236 + C67237) * C2709 + (C67044 + C67045) * C2849) +
            (C61411 * C8780 + C60959 * C9424 + C61412 * C37333 +
             C92212 * C37642) *
                C2710) *
               C92062 * C4101) *
              C1986) *
         C92078) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C61411 * C107 + C60959 * C555 + C61412 * C1389 + C92212 * C1788) *
                C2849 +
            (C61411 * C245 + C60959 * C719 + C61412 * C1540 + C92212 * C1909) *
                C2709 -
            (C61412 * C1390 + C92212 * C1789 + C61411 * C1389 +
             C60959 * C1788) *
                C2850 -
            (C61412 * C1541 + C92212 * C1910 + C61411 * C1540 +
             C60959 * C1909) *
                C2710) *
               C31257 +
           ((C61439 + C61438) * C2849 + (C61635 + C61636) * C2709 -
            (C64717 + C64716) * C2850 - (C64940 + C64941) * C2710) *
               C31258 +
           (C61450 * C2849 + C61641 * C2709 - (C64721 + C64720) * C2850 -
            (C64942 + C64943) * C2710) *
               C31259) *
              C92137 * C1985 +
          (((C61411 * C3431 + C60959 * C3875 + C61412 * C5773 +
             C92212 * C6289) *
                C2850 -
            ((C61412 * C3587 + C92212 * C4019 + C61411 * C956 +
              C60959 * C1328) *
                 C2709 +
             (C61412 * C3431 + C92212 * C3875 + C61411 * C805 +
              C60959 * C1204) *
                 C2849) +
            (C61411 * C3587 + C60959 * C4019 + C61412 * C5955 +
             C92212 * C6453) *
                C2710) *
               C31257 +
           ((C61411 * C3432 + C60959 * C3876 + C61412 * C5774 +
             C92212 * C6290) *
                C2850 -
            ((C63976 + C63977) * C2709 + (C63751 + C63750) * C2849) +
            (C61411 * C3588 + C60959 * C4020 + C61412 * C5956 +
             C92212 * C6454) *
                C2710) *
               C31258 +
           ((C61411 * C3433 + C60959 * C3877 + C61412 * C11870 +
             C92212 * C12506) *
                C2850 -
            ((C63974 + C63975) * C2709 + (C63755 + C63754) * C2849) +
            (C61411 * C3589 + C60959 * C4021 + C61412 * C12072 +
             C92212 * C12732) *
                C2710) *
               C31259) *
              C92137 * C1986) *
         C92078) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C71087 * C107 + C70783 * C555 + C71088 * C1389 + C70784 * C1788 +
            C71089 * C1390 + C70785 * C1789 + C71090 * C10961 +
            C70786 * C11609) *
               C2849 +
           (C71087 * C245 + C70783 * C719 + C71088 * C1540 + C70784 * C1909 +
            C71089 * C1541 + C70785 * C1910 + C71090 * C11197 +
            C70786 * C11768) *
               C2709 -
           (C71090 * C10962 + C70786 * C11610 + C71089 * C10961 +
            C70785 * C11609 + C71088 * C1390 + C70784 * C1789 + C71087 * C1389 +
            C70783 * C1788) *
               C2850 -
           (C71090 * C11199 + C70786 * C11769 + C71089 * C11197 +
            C70785 * C11768 + C71088 * C1541 + C70784 * C1910 + C71087 * C1540 +
            C70783 * C1909) *
               C2710) *
              C92062 * C92137 * C1985 +
          ((C71087 * C3431 + C70783 * C3875 + C71088 * C5773 + C70784 * C6289 +
            C71089 * C13849 + C70785 * C14525 + C71090 * C41085 +
            C70786 * C41701) *
               C2850 -
           ((C71090 * C14075 + C70786 * C14727 + C71089 * C5955 +
             C70785 * C6453 + C71088 * C3587 + C70784 * C4019 + C71087 * C956 +
             C70783 * C1328) *
                C2709 +
            (C71090 * C13849 + C70786 * C14525 + C71089 * C5773 +
             C70785 * C6289 + C71088 * C3431 + C70784 * C3875 + C71087 * C805 +
             C70783 * C1204) *
                C2849) +
           (C71087 * C3587 + C70783 * C4019 + C71088 * C5955 + C70784 * C6453 +
            C71089 * C14075 + C70785 * C14727 + C71090 * C41305 +
            C70786 * C41852) *
               C2710) *
              C92062 * C92137 * C1986) *
         C92078) /
            (p * q * std::sqrt(p + q));
    d2eexx[62] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((C31262 * C107 + C31257 * C113 + C31263 * C108 + C31258 * C114 +
                C31264 * C109 + C31259 * C115) *
                   C104 +
               (C31262 * C117 + C31257 * C125 + C31263 * C118 + C31258 * C126 +
                C31264 * C119 + C31259 * C127) *
                   C93 -
               (C31264 * C110 + C31259 * C116 + C31263 * C109 + C31258 * C115 +
                C31262 * C108 + C31257 * C114) *
                   C105 -
               (C31264 * C120 + C31259 * C128 + C31263 * C119 + C31258 * C127 +
                C31262 * C118 + C31257 * C126) *
                   C94 +
               (C31262 * C109 + C31257 * C115 + C31263 * C110 + C31258 * C116 +
                C31264 * C111 + C31259 * C121) *
                   C106 +
               (C31262 * C119 + C31257 * C127 + C31263 * C120 + C31258 * C128 +
                C31264 * C122 + C31259 * C129) *
                   C95) *
                  C92137 * C60959 +
              ((C31262 * C1389 + C31257 * C1401 + C31263 * C1388 +
                C31258 * C1400 + C31264 * C1387 + C31259 * C1399) *
                   C104 +
               (C31262 * C1397 + C31257 * C1413 + C31263 * C1396 +
                C31258 * C1412 + C31264 * C1395 + C31259 * C1411) *
                   C93 -
               (C31264 * C1386 + C31259 * C1398 + C31263 * C1387 +
                C31258 * C1399 + C31262 * C1388 + C31257 * C1400) *
                   C105 -
               (C31264 * C1394 + C31259 * C1410 + C31263 * C1395 +
                C31258 * C1411 + C31262 * C1396 + C31257 * C1412) *
                   C94 +
               (C31262 * C1387 + C31257 * C1399 + C31263 * C1386 +
                C31258 * C1398 + C31264 * C2711 + C31259 * C2712) *
                   C106 +
               (C31262 * C1395 + C31257 * C1411 + C31263 * C1394 +
                C31258 * C1410 + C31264 * C2713 + C31259 * C2714) *
                   C95) *
                  C92137 * C92212) *
             C92110 * C92099 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C31262 * C107 + C31257 * C113 + C31263 * C108 + C31258 * C114 +
                 C31264 * C109 + C31259 * C115) *
                    C801 +
                (C31262 * C117 + C31257 * C125 + C31263 * C118 + C31258 * C126 +
                 C31264 * C119 + C31259 * C127) *
                    C92078) *
                   C92137 * C60959 +
               ((C31262 * C1389 + C31257 * C1401 + C31263 * C1388 +
                 C31258 * C1400 + C31264 * C1387 + C31259 * C1399) *
                    C801 +
                (C31262 * C1397 + C31257 * C1413 + C31263 * C1396 +
                 C31258 * C1412 + C31264 * C1395 + C31259 * C1411) *
                    C92078) *
                   C92137 * C92212) *
                  C92110 * C798 -
              (((C35354 + C35355 + C35356) * C92078 +
                (C35357 + C35358 + C35359) * C801) *
                   C92137 * C92212 +
               ((C32047 + C32046 + C32045) * C92078 +
                (C32044 + C32043 + C32042) * C801) *
                   C92137 * C60959) *
                  C92110 * C799 +
              (((C32053 + C32052 + C32051) * C801 +
                (C32050 + C32049 + C32048) * C92078) *
                   C92137 * C60959 +
               ((C31262 * C5772 + C31257 * C5780 + C31263 * C5771 +
                 C31258 * C5779 + C31264 * C7566 + C31259 * C7567) *
                    C801 +
                (C31262 * C5778 + C31257 * C5790 + C31263 * C5777 +
                 C31258 * C5789 + C31264 * C7568 + C31259 * C7569) *
                    C92078) *
                   C92137 * C92212) *
                  C92110 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C31262 * C107 + C31257 * C113 + C31263 * C108 + C31258 * C114 +
             C31264 * C109 + C31259 * C115) *
                C801 +
            (C31262 * C117 + C31257 * C125 + C31263 * C118 + C31258 * C126 +
             C31264 * C119 + C31259 * C127) *
                C92078) *
               C92137 * C60959 +
           ((C62408 + C62409 + C62410) * C801 +
            (C62411 + C62412 + C62413) * C92078) *
               C92137 * C92212) *
              C1383 -
          (((C62414 + C62415 + C62416) * C92078 +
            (C62417 + C62418 + C62419) * C801) *
               C92137 * C92212 +
           ((C62413 + C62412 + C62411) * C92078 +
            (C62410 + C62409 + C62408) * C801) *
               C92137 * C60959) *
              C1384 +
          (((C62419 + C62418 + C62417) * C801 +
            (C62416 + C62415 + C62414) * C92078) *
               C92137 * C60959 +
           ((C31262 * C10961 + C31257 * C10967 + C31263 * C10960 +
             C31258 * C10966 + C31264 * C12840 + C31259 * C12841) *
                C801 +
            (C31262 * C10965 + C31257 * C10973 + C31263 * C10964 +
             C31258 * C10972 + C31264 * C12842 + C31259 * C12843) *
                C92078) *
               C92137 * C92212) *
              C1385) *
         C92099) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C36216 * C107 + C92062 * C113) * C104 +
            (C36216 * C117 + C92062 * C125) * C93 -
            (C36216 * C108 + C92062 * C114) * C105 -
            (C36216 * C118 + C92062 * C126) * C94 +
            (C36216 * C109 + C92062 * C115) * C106 +
            (C36216 * C119 + C92062 * C127) * C95) *
               C4099 +
           (C36692 * C104 + C36693 * C93 - C37728 * C105 - C37729 * C94 +
            (C36216 * C803 + C92062 * C815) * C106 +
            (C36216 * C811 + C92062 * C827) * C95) *
               C4100 +
           (C36694 * C104 + C36695 * C93 - C37730 * C105 - C37731 * C94 +
            (C36216 * C808 + C92062 * C820) * C106 +
            (C36216 * C824 + C92062 * C832) * C95) *
               C4101) *
              C60959 +
          ((C41107 * C104 + C41108 * C93 - C42882 * C105 - C42883 * C94 +
            (C36216 * C1387 + C92062 * C1399) * C106 +
            (C36216 * C1395 + C92062 * C1411) * C95) *
               C4099 +
           (C38977 * C104 + C38976 * C93 - C41964 * C105 - C41965 * C94 +
            (C36216 * C3433 + C92062 * C3437) * C106 +
            (C36216 * C3441 + C92062 * C3445) * C95) *
               C4100 +
           (C38975 * C104 + C38974 * C93 - C58255 * C105 - C58256 * C94 +
            (C36216 * C7566 + C92062 * C7567) * C106 +
            (C36216 * C7568 + C92062 * C7569) * C95) *
               C4101) *
              C92212) *
         C92110 * C92099) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C36216 * C107 + C92062 * C113) * C801 +
             (C36216 * C117 + C92062 * C125) * C92078) *
                C4099 +
            (C36700 + C36701) * C4100 + C36708 * C4101) *
               C60959 +
           ((C41116 + C41117) * C4099 + C43820 * C4100 + C56777 * C4101) *
               C92212) *
              C92110 * C798 -
          (((C38978 + C38979) * C4101 + C60033 * C4100 + C43822 * C4099) *
               C92212 +
           ((C36705 + C36704) * C4101 + (C36703 + C36702) * C4100 +
            (C36701 + C36700) * C4099) *
               C60959) *
              C92110 * C799 +
          ((C36708 * C4099 + C36709 * C4100 + (C36707 + C36706) * C4101) *
               C60959 +
           (C56777 * C4099 + (C38979 + C38978) * C4100 +
            ((C36216 * C38955 + C92062 * C38956) * C801 +
             (C36216 * C38957 + C92062 * C38958) * C92078) *
                C4101) *
               C92212) *
              C92110 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C36216 * C107 + C92062 * C113) * C801 +
             (C36216 * C117 + C92062 * C125) * C92078) *
                C4099 +
            (C36700 + C36701) * C4100 + C36708 * C4101) *
               C60959 +
           ((C41116 + C41117) * C4099 + C43820 * C4100 + C56777 * C4101) *
               C92212) *
              C1383 -
          (((C40326 + C40327) * C4101 + C43821 * C4100 +
            (C41119 + C41118) * C4099) *
               C92212 +
           (C60033 * C4101 + C43822 * C4100 + (C41117 + C41116) * C4099) *
               C60959) *
              C1384 +
          ((C41124 * C4099 + C41098 * C4100 + (C40327 + C40326) * C4101) *
               C60959 +
           ((C41123 + C41122) * C4099 + (C41121 + C41120) * C4100 +
            ((C36216 * C43815 + C92062 * C43816) * C801 +
             (C36216 * C43817 + C92062 * C43818) * C92078) *
                C4101) *
               C92212) *
              C1385) *
         C92099) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C36216 * C107 + C92062 * C113) * C104 +
           (C36216 * C117 + C92062 * C125) * C93 -
           (C36216 * C108 + C92062 * C114) * C105 -
           (C36216 * C118 + C92062 * C126) * C94 +
           (C36216 * C109 + C92062 * C115) * C106 +
           (C36216 * C119 + C92062 * C127) * C95) *
              C92137 * C70783 +
          (C41107 * C104 + C41108 * C93 - C42882 * C105 - C42883 * C94 +
           (C36216 * C1387 + C92062 * C1399) * C106 +
           (C36216 * C1395 + C92062 * C1411) * C95) *
              C92137 * C70784 +
          (C41109 * C104 + C41110 * C93 - C42884 * C105 - C42885 * C94 +
           (C36216 * C1392 + C92062 * C1404) * C106 +
           (C36216 * C1408 + C92062 * C1416) * C95) *
              C92137 * C70785 +
          (C41115 * C104 + C41114 * C93 -
           (C36216 * C10960 + C92062 * C10966) * C105 -
           (C36216 * C10964 + C92062 * C10972) * C94 +
           (C36216 * C12840 + C92062 * C12841) * C106 +
           (C36216 * C12842 + C92062 * C12843) * C95) *
              C92137 * C70786) *
         C92110 * C92099) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C36216 * C107 + C92062 * C113) * C801 +
            (C36216 * C117 + C92062 * C125) * C92078) *
               C92137 * C70783 +
           (C41116 + C41117) * C92137 * C70784 + C41124 * C92137 * C70785 +
           (C41123 + C41122) * C92137 * C70786) *
              C92110 * C798 -
          ((C41120 + C41121) * C92137 * C70786 + C43821 * C92137 * C70785 +
           C43822 * C92137 * C70784 + (C36701 + C36700) * C92137 * C70783) *
              C92110 * C799 +
          (C36708 * C92137 * C70783 + C56777 * C92137 * C70784 +
           (C40327 + C40326) * C92137 * C70785 +
           ((C36216 * C43815 + C92062 * C43816) * C801 +
            (C36216 * C43817 + C92062 * C43818) * C92078) *
               C92137 * C70786) *
              C92110 * C800)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C36216 * C107 + C92062 * C113) * C801 +
            (C36216 * C117 + C92062 * C125) * C92078) *
               C92137 * C70783 +
           (C41116 + C41117) * C92137 * C70784 + C71696 * C70785 +
           C71702 * C70786) *
              C1383 -
          ((C71705 + C71706) * C92137 * C70786 +
           (C41122 + C41123) * C92137 * C70785 +
           (C41119 + C41118) * C92137 * C70784 +
           (C41117 + C41116) * C92137 * C70783) *
              C1384 +
          (C71696 * C70783 + C71702 * C70784 +
           (C71706 + C71705) * C92137 * C70785 +
           ((C36216 * C71691 + C92062 * C71692) * C801 +
            (C36216 * C71693 + C92062 * C71694) * C92078) *
               C92137 * C70786) *
              C1385) *
         C92099) /
            (p * q * std::sqrt(p + q));
    d2eexy[62] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C31262 * C107 + C31257 * C113 + C31263 * C108 + C31258 * C114 +
                 C31264 * C109 + C31259 * C115) *
                    C181 +
                (C31262 * C182 + C31257 * C188 + C31263 * C183 + C31258 * C189 +
                 C31264 * C184 + C31259 * C190) *
                    C92099) *
                   C92137 * C60959 +
               ((C31262 * C1389 + C31257 * C1401 + C31263 * C1388 +
                 C31258 * C1400 + C31264 * C1387 + C31259 * C1399) *
                    C181 +
                (C31262 * C1471 + C31257 * C1479 + C31263 * C1470 +
                 C31258 * C1478 + C31264 * C1469 + C31259 * C1477) *
                    C92099) *
                   C92137 * C92212) *
                  C93 -
              (((C31264 * C1468 + C31259 * C1476 + C31263 * C1469 +
                 C31258 * C1477 + C31262 * C1470 + C31257 * C1478) *
                    C92099 +
                (C31264 * C1386 + C31259 * C1398 + C31263 * C1387 +
                 C31258 * C1399 + C31262 * C1388 + C31257 * C1400) *
                    C181) *
                   C92137 * C92212 +
               ((C31264 * C185 + C31259 * C191 + C31263 * C184 + C31258 * C190 +
                 C31262 * C183 + C31257 * C189) *
                    C92099 +
                (C31264 * C110 + C31259 * C116 + C31263 * C109 + C31258 * C115 +
                 C31262 * C108 + C31257 * C114) *
                    C181) *
                   C92137 * C60959) *
                  C94 +
              (((C31262 * C109 + C31257 * C115 + C31263 * C110 + C31258 * C116 +
                 C31264 * C111 + C31259 * C121) *
                    C181 +
                (C31262 * C184 + C31257 * C190 + C31263 * C185 + C31258 * C191 +
                 C31264 * C186 + C31259 * C192) *
                    C92099) *
                   C92137 * C60959 +
               ((C31262 * C1387 + C31257 * C1399 + C31263 * C1386 +
                 C31258 * C1398 + C31264 * C2711 + C31259 * C2712) *
                    C181 +
                (C31262 * C1469 + C31257 * C1477 + C31263 * C1468 +
                 C31258 * C1476 + C31264 * C2781 + C31259 * C2782) *
                    C92099) *
                   C92137 * C92212) *
                  C95) *
             C92110 +
         0.5 * std::pow(Pi, 2.5) *
             (((C31262 * C107 + C31257 * C113 + C31263 * C108 + C31258 * C114 +
                C31264 * C109 + C31259 * C115) *
                   C884 +
               (C31262 * C182 + C31257 * C188 + C31263 * C183 + C31258 * C189 +
                C31264 * C184 + C31259 * C190) *
                   C798 -
               (C32044 + C32043 + C32042) * C885 -
               (C32140 + C32141 + C32142) * C799 +
               (C32053 + C32052 + C32051) * C886 +
               (C32143 + C32144 + C32145) * C800) *
                  C92137 * C60959 +
              ((C31262 * C1389 + C31257 * C1401 + C31263 * C1388 +
                C31258 * C1400 + C31264 * C1387 + C31259 * C1399) *
                   C884 +
               (C31262 * C1471 + C31257 * C1479 + C31263 * C1470 +
                C31258 * C1478 + C31264 * C1469 + C31259 * C1477) *
                   C798 -
               (C35357 + C35358 + C35359) * C885 -
               (C35466 + C35465 + C35464) * C799 +
               (C31262 * C5772 + C31257 * C5780 + C31263 * C5771 +
                C31258 * C5779 + C31264 * C7566 + C31259 * C7567) *
                   C886 +
               (C31262 * C5870 + C31257 * C5876 + C31263 * C5869 +
                C31258 * C5875 + C31264 * C7668 + C31259 * C7669) *
                   C800) *
                  C92137 * C92212) *
             C92078 * C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C31262 * C107 + C31257 * C113 + C31263 * C108 + C31258 * C114 +
             C31264 * C109 + C31259 * C115) *
                C181 +
            (C31262 * C182 + C31257 * C188 + C31263 * C183 + C31258 * C189 +
             C31264 * C184 + C31259 * C190) *
                C92099) *
               C92137 * C60959 +
           ((C62408 + C62409 + C62410) * C181 +
            (C62506 + C62507 + C62508) * C92099) *
               C92137 * C92212) *
              C92078 * C1383 -
          (((C62509 + C62510 + C62511) * C92099 +
            (C62417 + C62418 + C62419) * C181) *
               C92137 * C92212 +
           ((C62508 + C62507 + C62506) * C92099 +
            (C62410 + C62409 + C62408) * C181) *
               C92137 * C60959) *
              C92078 * C1384 +
          (((C62419 + C62418 + C62417) * C181 +
            (C62511 + C62510 + C62509) * C92099) *
               C92137 * C60959 +
           ((C31262 * C10961 + C31257 * C10967 + C31263 * C10960 +
             C31258 * C10966 + C31264 * C12840 + C31259 * C12841) *
                C181 +
            (C31262 * C11093 + C31257 * C11097 + C31263 * C11092 +
             C31258 * C11096 + C31264 * C12966 + C31259 * C12967) *
                C92099) *
               C92137 * C92212) *
              C92078 * C1385)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C36216 * C107 + C92062 * C113) * C181 +
             (C36216 * C182 + C92062 * C188) * C92099) *
                C4099 +
            (C36692 * C181 + C36770 * C92099) * C4100 +
            (C36694 * C181 + C36771 * C92099) * C4101) *
               C60959 +
           ((C41203 + C41224) * C4099 + (C41206 + C41207) * C4100 +
            (C57557 + C57558) * C4101) *
               C92212) *
              C93 -
          (((C59247 + C59248) * C4101 + (C42993 + C42994) * C4100 +
            (C43001 + C42997) * C4099) *
               C92212 +
           ((C37813 * C92099 + C37730 * C181) * C4101 +
            (C37812 * C92099 + C37728 * C181) * C4100 +
            ((C36216 * C183 + C92062 * C189) * C92099 +
             (C36216 * C108 + C92062 * C114) * C181) *
                C4099) *
               C60959) *
              C94 +
          ((((C36216 * C109 + C92062 * C115) * C181 +
             (C36216 * C184 + C92062 * C190) * C92099) *
                C4099 +
            ((C36216 * C803 + C92062 * C815) * C181 +
             (C36216 * C888 + C92062 * C896) * C92099) *
                C4100 +
            ((C36216 * C808 + C92062 * C820) * C181 +
             (C36216 * C893 + C92062 * C901) * C92099) *
                C4101) *
               C60959 +
           (((C36216 * C1387 + C92062 * C1399) * C181 +
             (C36216 * C1469 + C92062 * C1477) * C92099) *
                C4099 +
            ((C36216 * C3433 + C92062 * C3437) * C181 +
             (C36216 * C3515 + C92062 * C3519) * C92099) *
                C4100 +
            ((C36216 * C7566 + C92062 * C7567) * C181 +
             (C36216 * C7668 + C92062 * C7669) * C92099) *
                C4101) *
               C92212) *
              C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C36216 * C107 + C92062 * C113) * C884 +
            (C36216 * C182 + C92062 * C188) * C798 - C36692 * C885 -
            C36770 * C799 + C36694 * C886 + C36771 * C800) *
               C4099 +
           (C36692 * C884 + C36770 * C798 - C36694 * C885 - C36771 * C799 +
            C36696 * C886 + C36772 * C800) *
               C4100 +
           (C36694 * C884 + C36771 * C798 - C36696 * C885 - C36772 * C799 +
            C36699 * C886 + C36773 * C800) *
               C4101) *
              C60959 +
          ((C41107 * C884 + C41219 * C798 - C38977 * C885 - C39058 * C799 +
            C38975 * C886 + C39059 * C800) *
               C4099 +
           (C38977 * C884 + C39058 * C798 - C38975 * C885 - C39059 * C799 +
            C38973 * C886 + C39060 * C800) *
               C4100 +
           (C38975 * C884 + C39059 * C798 - C38973 * C885 - C39060 * C799 +
            (C36216 * C38955 + C92062 * C38956) * C886 +
            (C36216 * C39049 + C92062 * C39050) * C800) *
               C4101) *
              C92212) *
         C92078 * C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C36216 * C107 + C92062 * C113) * C181 +
             (C36216 * C182 + C92062 * C188) * C92099) *
                C4099 +
            (C36692 * C181 + C36770 * C92099) * C4100 +
            (C36694 * C181 + C36771 * C92099) * C4101) *
               C60959 +
           ((C41203 + C41224) * C4099 + (C41206 + C41207) * C4100 +
            (C57557 + C57558) * C4101) *
               C92212) *
              C92078 * C1383 -
          (((C57559 + C57560) * C4101 + (C41212 + C41211) * C4100 +
            (C41225 + C41208) * C4099) *
               C92212 +
           ((C57558 + C57557) * C4101 + (C41207 + C41206) * C4100 +
            (C41224 + C41203) * C4099) *
               C60959) *
              C92078 * C1384 +
          ((C41229 * C4099 + C41221 * C4100 + (C57560 + C57559) * C4101) *
               C60959 +
           ((C41218 + C41228) * C4099 + (C41215 + C41227) * C4100 +
            ((C36216 * C43815 + C92062 * C43816) * C181 +
             (C36216 * C43920 + C92062 * C43921) * C92099) *
                C4101) *
               C92212) *
              C92078 * C1385)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C36216 * C107 + C92062 * C113) * C181 +
            (C36216 * C182 + C92062 * C188) * C92099) *
               C92137 * C70783 +
           (C41203 + C41224) * C92137 * C70784 + C41229 * C92137 * C70785 +
           (C41218 + C41228) * C92137 * C70786) *
              C93 -
          (((C36216 * C11092 + C92062 * C11096) * C92099 +
            (C36216 * C10960 + C92062 * C10966) * C181) *
               C92137 * C70786 +
           (C43000 + C42992) * C92137 * C70785 +
           (C43001 + C42997) * C92137 * C70784 +
           ((C36216 * C183 + C92062 * C189) * C92099 +
            (C36216 * C108 + C92062 * C114) * C181) *
               C92137 * C70783) *
              C94 +
          (((C36216 * C109 + C92062 * C115) * C181 +
            (C36216 * C184 + C92062 * C190) * C92099) *
               C92137 * C70783 +
           ((C36216 * C1387 + C92062 * C1399) * C181 +
            (C36216 * C1469 + C92062 * C1477) * C92099) *
               C92137 * C70784 +
           ((C36216 * C1392 + C92062 * C1404) * C181 +
            (C36216 * C1474 + C92062 * C1482) * C92099) *
               C92137 * C70785 +
           ((C36216 * C12840 + C92062 * C12841) * C181 +
            (C36216 * C12966 + C92062 * C12967) * C92099) *
               C92137 * C70786) *
              C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C36216 * C107 + C92062 * C113) * C884 +
           (C36216 * C182 + C92062 * C188) * C798 - C36692 * C885 -
           C36770 * C799 + C36694 * C886 + C36771 * C800) *
              C92137 * C70783 +
          (C41107 * C884 + C41219 * C798 - C38977 * C885 - C39058 * C799 +
           C38975 * C886 + C39059 * C800) *
              C92137 * C70784 +
          (C41109 * C884 + C41220 * C798 - C40320 * C885 - C40406 * C799 +
           C40323 * C886 + C40407 * C800) *
              C92137 * C70785 +
          (C41115 * C884 + C41223 * C798 - C41113 * C885 - C41222 * C799 +
           (C36216 * C43815 + C92062 * C43816) * C886 +
           (C36216 * C43920 + C92062 * C43921) * C800) *
              C92137 * C70786) *
         C92078 * C92110) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C36216 * C107 + C92062 * C113) * C181 +
            (C36216 * C182 + C92062 * C188) * C92099) *
               C92137 * C70783 +
           (C41203 + C41224) * C92137 * C70784 + C71759 * C70785 +
           C71764 * C70786) *
              C92078 * C1383 -
          ((C71766 + C71763) * C92137 * C70786 +
           (C41228 + C41218) * C92137 * C70785 +
           (C41225 + C41208) * C92137 * C70784 +
           (C41224 + C41203) * C92137 * C70783) *
              C92078 * C1384 +
          (C71759 * C70783 + C71764 * C70784 +
           (C71763 + C71766) * C92137 * C70785 +
           ((C36216 * C71691 + C92062 * C71692) * C181 +
            (C36216 * C71756 + C92062 * C71757) * C92099) *
               C92137 * C70786) *
              C92078 * C1385)) /
            (p * q * std::sqrt(p + q));
    d2eexz[62] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C31262 * C107 + C31257 * C113 + C31263 * C108 + C31258 * C114 +
                 C31264 * C109 + C31259 * C115) *
                    C244 +
                (C31262 * C245 + C31257 * C251 + C31263 * C246 + C31258 * C252 +
                 C31264 * C247 + C31259 * C253) *
                    C92110) *
                   C92137 * C60959 +
               ((C31262 * C1389 + C31257 * C1401 + C31263 * C1388 +
                 C31258 * C1400 + C31264 * C1387 + C31259 * C1399) *
                    C244 +
                (C31262 * C1540 + C31257 * C1548 + C31263 * C1539 +
                 C31258 * C1547 + C31264 * C1538 + C31259 * C1546) *
                    C92110) *
                   C92137 * C92212) *
                  C92099 * C93 -
              (((C31264 * C1537 + C31259 * C1545 + C31263 * C1538 +
                 C31258 * C1546 + C31262 * C1539 + C31257 * C1547) *
                    C92110 +
                (C31264 * C1386 + C31259 * C1398 + C31263 * C1387 +
                 C31258 * C1399 + C31262 * C1388 + C31257 * C1400) *
                    C244) *
                   C92137 * C92212 +
               ((C31264 * C248 + C31259 * C254 + C31263 * C247 + C31258 * C253 +
                 C31262 * C246 + C31257 * C252) *
                    C92110 +
                (C31264 * C110 + C31259 * C116 + C31263 * C109 + C31258 * C115 +
                 C31262 * C108 + C31257 * C114) *
                    C244) *
                   C92137 * C60959) *
                  C92099 * C94 +
              (((C31262 * C109 + C31257 * C115 + C31263 * C110 + C31258 * C116 +
                 C31264 * C111 + C31259 * C121) *
                    C244 +
                (C31262 * C247 + C31257 * C253 + C31263 * C248 + C31258 * C254 +
                 C31264 * C249 + C31259 * C255) *
                    C92110) *
                   C92137 * C60959 +
               ((C31262 * C1387 + C31257 * C1399 + C31263 * C1386 +
                 C31258 * C1398 + C31264 * C2711 + C31259 * C2712) *
                    C244 +
                (C31262 * C1538 + C31257 * C1546 + C31263 * C1537 +
                 C31258 * C1545 + C31264 * C2851 + C31259 * C2852) *
                    C92110) *
                   C92137 * C92212) *
                  C92099 * C95) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C31262 * C107 + C31257 * C113 + C31263 * C108 + C31258 * C114 +
                 C31264 * C109 + C31259 * C115) *
                    C244 +
                (C31262 * C245 + C31257 * C251 + C31263 * C246 + C31258 * C252 +
                 C31264 * C247 + C31259 * C253) *
                    C92110) *
                   C92137 * C60959 +
               ((C31262 * C1389 + C31257 * C1401 + C31263 * C1388 +
                 C31258 * C1400 + C31264 * C1387 + C31259 * C1399) *
                    C244 +
                (C31262 * C1540 + C31257 * C1548 + C31263 * C1539 +
                 C31258 * C1547 + C31264 * C1538 + C31259 * C1546) *
                    C92110) *
                   C92137 * C92212) *
                  C798 -
              (((C35571 + C35572 + C35573) * C92110 +
                (C35357 + C35358 + C35359) * C244) *
                   C92137 * C92212 +
               ((C32234 + C32233 + C32232) * C92110 +
                (C32044 + C32043 + C32042) * C244) *
                   C92137 * C60959) *
                  C799 +
              (((C32053 + C32052 + C32051) * C244 +
                (C32237 + C32236 + C32235) * C92110) *
                   C92137 * C60959 +
               ((C31262 * C5772 + C31257 * C5780 + C31263 * C5771 +
                 C31258 * C5779 + C31264 * C7566 + C31259 * C7567) *
                    C244 +
                (C31262 * C5958 + C31257 * C5964 + C31263 * C5957 +
                 C31258 * C5963 + C31264 * C7768 + C31259 * C7769) *
                    C92110) *
                   C92137 * C92212) *
                  C800) *
             C92078) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C31262 * C107 + C31257 * C113 + C31263 * C108 + C31258 * C114 +
            C31264 * C109 + C31259 * C115) *
               C1534 +
           (C31262 * C245 + C31257 * C251 + C31263 * C246 + C31258 * C252 +
            C31264 * C247 + C31259 * C253) *
               C1383 -
           (C62410 + C62409 + C62408) * C1535 -
           (C62598 + C62599 + C62600) * C1384 +
           (C62419 + C62418 + C62417) * C1536 +
           (C62601 + C62602 + C62603) * C1385) *
              C92137 * C60959 +
          ((C62408 + C62409 + C62410) * C1534 +
           (C62600 + C62599 + C62598) * C1383 -
           (C62417 + C62418 + C62419) * C1535 -
           (C62603 + C62602 + C62601) * C1384 +
           (C31262 * C10961 + C31257 * C10967 + C31263 * C10960 +
            C31258 * C10966 + C31264 * C12840 + C31259 * C12841) *
               C1536 +
           (C31262 * C11197 + C31257 * C11201 + C31263 * C11198 +
            C31258 * C11202 + C31264 * C13078 + C31259 * C13079) *
               C1385) *
              C92137 * C92212) *
         C92099 * C92078) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C36216 * C107 + C92062 * C113) * C244 +
             (C36216 * C245 + C92062 * C251) * C92110) *
                C4099 +
            (C36826 + C36842) * C4100 + C36846 * C4101) *
               C60959 +
           ((C41107 * C244 + C41316 * C92110) * C4099 +
            (C40482 + C40483) * C4100 + C56926 * C4101) *
               C92212) *
              C92099 * C93 -
          (((C58462 + C58458) * C4101 + (C42182 + C42174) * C4100 +
            (C43104 * C92110 + C42882 * C244) * C4099) *
               C92212 +
           ((C37894 + C37884) * C4101 + (C37893 + C37881) * C4100 +
            ((C36216 * C246 + C92062 * C252) * C92110 +
             (C36216 * C108 + C92062 * C114) * C244) *
                C4099) *
               C60959) *
              C92099 * C94 +
          ((((C36216 * C109 + C92062 * C115) * C244 +
             (C36216 * C247 + C92062 * C253) * C92110) *
                C4099 +
            ((C36216 * C803 + C92062 * C815) * C244 +
             (C36216 * C954 + C92062 * C962) * C92110) *
                C4100 +
            ((C36216 * C808 + C92062 * C820) * C244 +
             (C36216 * C959 + C92062 * C967) * C92110) *
                C4101) *
               C60959 +
           (((C36216 * C1387 + C92062 * C1399) * C244 +
             (C36216 * C1538 + C92062 * C1546) * C92110) *
                C4099 +
            ((C36216 * C3433 + C92062 * C3437) * C244 +
             (C36216 * C3589 + C92062 * C3593) * C92110) *
                C4100 +
            ((C36216 * C7566 + C92062 * C7567) * C244 +
             (C36216 * C7768 + C92062 * C7769) * C92110) *
                C4101) *
               C92212) *
              C92099 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C36216 * C107 + C92062 * C113) * C244 +
             (C36216 * C245 + C92062 * C251) * C92110) *
                C4099 +
            (C36826 + C36842) * C4100 + C36846 * C4101) *
               C60959 +
           ((C41107 * C244 + C41316 * C92110) * C4099 +
            (C40482 + C40483) * C4100 + C56926 * C4101) *
               C92212) *
              C798 -
          (((C56927 + C56928) * C4101 + (C40490 + C40491) * C4100 +
            (C40483 + C40482) * C4099) *
               C92212 +
           ((C36844 + C36832) * C4101 + (C36843 + C36829) * C4100 +
            (C36842 + C36826) * C4099) *
               C60959) *
              C799 +
          ((C36846 * C4099 + C36847 * C4100 + (C36837 + C36845) * C4101) *
               C60959 +
           (C56926 * C4099 + (C56928 + C56927) * C4100 +
            ((C36216 * C38955 + C92062 * C38956) * C244 +
             (C36216 * C39126 + C92062 * C39127) * C92110) *
                C4101) *
               C92212) *
              C800) *
         C92078) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C36216 * C107 + C92062 * C113) * C1534 +
            (C36216 * C245 + C92062 * C251) * C1383 - C41107 * C1535 -
            C41316 * C1384 + C41109 * C1536 + C41317 * C1385) *
               C4099 +
           (C36692 * C1534 + C36838 * C1383 - C38977 * C1535 - C39144 * C1384 +
            C40320 * C1536 + C40492 * C1385) *
               C4100 +
           (C36694 * C1534 + C36839 * C1383 - C38975 * C1535 - C39145 * C1384 +
            C40323 * C1536 + C40493 * C1385) *
               C4101) *
              C60959 +
          ((C41107 * C1534 + C41316 * C1383 - C41109 * C1535 - C41317 * C1384 +
            C41115 * C1536 + C41318 * C1385) *
               C4099 +
           (C38977 * C1534 + C39144 * C1383 - C40320 * C1535 - C40492 * C1384 +
            C41113 * C1536 + C41319 * C1385) *
               C4100 +
           (C38975 * C1534 + C39145 * C1383 - C40323 * C1535 - C40493 * C1384 +
            (C36216 * C43815 + C92062 * C43816) * C1536 +
            (C36216 * C44036 + C92062 * C44037) * C1385) *
               C4101) *
              C92212) *
         C92099 * C92078) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C36216 * C107 + C92062 * C113) * C244 +
            (C36216 * C245 + C92062 * C251) * C92110) *
               C92137 * C70783 +
           (C41107 * C244 + C41316 * C92110) * C92137 * C70784 +
           (C41109 * C244 + C41317 * C92110) * C92137 * C70785 +
           (C41115 * C244 + C41318 * C92110) * C92137 * C70786) *
              C92099 * C93 -
          (((C36216 * C11198 + C92062 * C11202) * C92110 +
            (C36216 * C10960 + C92062 * C10966) * C244) *
               C92137 * C70786 +
           (C43105 * C92110 + C42884 * C244) * C92137 * C70785 +
           (C43104 * C92110 + C42882 * C244) * C92137 * C70784 +
           ((C36216 * C246 + C92062 * C252) * C92110 +
            (C36216 * C108 + C92062 * C114) * C244) *
               C92137 * C70783) *
              C92099 * C94 +
          (((C36216 * C109 + C92062 * C115) * C244 +
            (C36216 * C247 + C92062 * C253) * C92110) *
               C92137 * C70783 +
           ((C36216 * C1387 + C92062 * C1399) * C244 +
            (C36216 * C1538 + C92062 * C1546) * C92110) *
               C92137 * C70784 +
           ((C36216 * C1392 + C92062 * C1404) * C244 +
            (C36216 * C1543 + C92062 * C1551) * C92110) *
               C92137 * C70785 +
           ((C36216 * C12840 + C92062 * C12841) * C244 +
            (C36216 * C13078 + C92062 * C13079) * C92110) *
               C92137 * C70786) *
              C92099 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C36216 * C107 + C92062 * C113) * C244 +
            (C36216 * C245 + C92062 * C251) * C92110) *
               C92137 * C70783 +
           (C41107 * C244 + C41316 * C92110) * C92137 * C70784 +
           (C41109 * C244 + C41317 * C92110) * C92137 * C70785 +
           (C41115 * C244 + C41318 * C92110) * C92137 * C70786) *
              C798 -
          ((C41319 * C92110 + C41113 * C244) * C92137 * C70786 +
           (C40494 + C40484) * C92137 * C70785 +
           (C40483 + C40482) * C92137 * C70784 +
           (C36842 + C36826) * C92137 * C70783) *
              C799 +
          (C36846 * C92137 * C70783 + C56926 * C92137 * C70784 +
           (C40489 + C40495) * C92137 * C70785 +
           ((C36216 * C43815 + C92062 * C43816) * C244 +
            (C36216 * C44036 + C92062 * C44037) * C92110) *
               C92137 * C70786) *
              C800) *
         C92078) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C36216 * C107 + C92062 * C113) * C1534 +
           (C36216 * C245 + C92062 * C251) * C1383 - C41107 * C1535 -
           C41316 * C1384 + C41109 * C1536 + C41317 * C1385) *
              C92137 * C70783 +
          (C41107 * C1534 + C41316 * C1383 - C41109 * C1535 - C41317 * C1384 +
           C41115 * C1536 + C41318 * C1385) *
              C92137 * C70784 +
          (C41109 * C1534 + C41317 * C1383 - C41115 * C1535 - C41318 * C1384 +
           C71704 * C1536 + C71821 * C1385) *
              C92137 * C70785 +
          (C41115 * C1534 + C41318 * C1383 - C71704 * C1535 - C71821 * C1384 +
           (C36216 * C71691 + C92062 * C71692) * C1536 +
           (C36216 * C71816 + C92062 * C71817) * C1385) *
              C92137 * C70786) *
         C92099 * C92078) /
            (p * q * std::sqrt(p + q));
    d2eeyx[62] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C307 * C107 + C92137 * C308) * C104 +
                (C307 * C117 + C92137 * C314) * C93 - C337 * C105 - C338 * C94 +
                C339 * C106 + C340 * C95) *
                   C60959 +
               (C11327 * C104 + C11328 * C93 - C2934 * C105 - C2935 * C94 +
                C2936 * C106 + C2937 * C95) *
                   C92212) *
                  C31257 +
              ((C337 * C104 + C338 * C93 - C339 * C105 - C340 * C94 +
                C341 * C106 + C342 * C95) *
                   C60959 +
               (C2934 * C104 + C2935 * C93 - C2936 * C105 - C2937 * C94 +
                C2938 * C106 + C2939 * C95) *
                   C92212) *
                  C31258 +
              ((C339 * C104 + C340 * C93 - C341 * C105 - C342 * C94 +
                C343 * C106 + C344 * C95) *
                   C60959 +
               (C2936 * C104 + C2937 * C93 - C2938 * C105 - C2939 * C94 +
                (C307 * C2711 + C92137 * C2919) * C106 +
                (C307 * C2713 + C92137 * C2920) * C95) *
                   C92212) *
                  C31259) *
             C92110 * C92099 +
         0.5 * std::pow(Pi, 2.5) *
             (((((C307 * C107 + C92137 * C308) * C801 +
                 (C307 * C117 + C92137 * C314) * C92078) *
                    C60959 +
                (C11336 + C11337) * C92212) *
                   C31257 +
               ((C337 * C801 + C338 * C92078) * C60959 +
                (C11315 + C11316) * C92212) *
                   C31258 +
               ((C339 * C801 + C340 * C92078) * C60959 +
                (C21541 + C21542) * C92212) *
                   C31259) *
                  C92110 * C798 -
              (((C24231 + C24230) * C92212 +
                (C2215 * C92078 + C2214 * C801) * C60959) *
                   C31259 +
               ((C14197 + C14196) * C92212 +
                (C2213 * C92078 + C2212 * C801) * C60959) *
                   C31258 +
               ((C14205 + C14204) * C92212 +
                ((C307 * C813 + C92137 * C1030) * C92078 +
                 (C307 * C805 + C92137 * C1022) * C801) *
                    C60959) *
                   C31257) *
                  C92110 * C799 +
              ((((C307 * C806 + C92137 * C1023) * C801 +
                 (C307 * C822 + C92137 * C1031) * C92078) *
                    C60959 +
                ((C307 * C5772 + C92137 * C6042) * C801 +
                 (C307 * C5778 + C92137 * C6048) * C92078) *
                    C92212) *
                   C31257 +
               (((C307 * C807 + C92137 * C1024) * C801 +
                 (C307 * C823 + C92137 * C1032) * C92078) *
                    C60959 +
                ((C307 * C5771 + C92137 * C6041) * C801 +
                 (C307 * C5777 + C92137 * C6047) * C92078) *
                    C92212) *
                   C31258 +
               (((C307 * C808 + C92137 * C1025) * C801 +
                 (C307 * C824 + C92137 * C1033) * C92078) *
                    C60959 +
                ((C307 * C7566 + C92137 * C7868) * C801 +
                 (C307 * C7568 + C92137 * C7869) * C92078) *
                    C92212) *
                   C31259) *
                  C92110 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92137 * C308) * C801 +
             (C307 * C117 + C92137 * C314) * C92078) *
                C60959 +
            (C11336 + C11337) * C92212) *
               C31257 +
           ((C337 * C801 + C338 * C92078) * C60959 +
            (C11315 + C11316) * C92212) *
               C31258 +
           ((C339 * C801 + C340 * C92078) * C60959 +
            (C21541 + C21542) * C92212) *
               C31259) *
              C1383 -
          (((C21543 + C21544) * C92212 + (C21542 + C21541) * C60959) * C31259 +
           ((C11318 + C11317) * C92212 + (C11316 + C11315) * C60959) * C31258 +
           ((C11339 + C11338) * C92212 + (C11337 + C11336) * C60959) * C31257) *
              C1384 +
          ((C11344 * C60959 + (C11343 + C11342) * C92212) * C31257 +
           (C11331 * C60959 + (C11341 + C11340) * C92212) * C31258 +
           ((C21544 + C21543) * C60959 +
            ((C307 * C12840 + C92137 * C13190) * C801 +
             (C307 * C12842 + C92137 * C13191) * C92078) *
                C92212) *
               C31259) *
              C1385) *
         C92099) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C4326 * C107 + C4099 * C308 + C4327 * C805 + C4100 * C1022 +
            C4328 * C806 + C4101 * C1023) *
               C104 +
           (C4326 * C117 + C4099 * C314 + C4327 * C813 + C4100 * C1030 +
            C4328 * C822 + C4101 * C1031) *
               C93 -
           (C4354 + C4355 + C4356) * C105 - (C4357 + C4358 + C4359) * C94 +
           (C4360 + C4361 + C4362) * C106 + (C4363 + C4364 + C4365) * C95) *
              C60959 +
          ((C4326 * C1389 + C4099 * C1606 + C4327 * C3431 + C4100 * C3661 +
            C4328 * C5772 + C4101 * C6042) *
               C104 +
           (C4326 * C1397 + C4099 * C1614 + C4327 * C3439 + C4100 * C3665 +
            C4328 * C5778 + C4101 * C6048) *
               C93 -
           (C7885 + C7884 + C7883) * C105 - (C7888 + C7887 + C7886) * C94 +
           (C4326 * C1387 + C4099 * C1604 + C4327 * C3433 + C4100 * C3663 +
            C4328 * C7566 + C4101 * C7868) *
               C106 +
           (C4326 * C1395 + C4099 * C1612 + C4327 * C3441 + C4100 * C3667 +
            C4328 * C7568 + C4101 * C7869) *
               C95) *
              C92212) *
         C92062 * C92110 * C92099) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C4326 * C107 + C4099 * C308 + C4327 * C805 + C4100 * C1022 +
             C4328 * C806 + C4101 * C1023) *
                C801 +
            (C4326 * C117 + C4099 * C314 + C4327 * C813 + C4100 * C1030 +
             C4328 * C822 + C4101 * C1031) *
                C92078) *
               C60959 +
           ((C4326 * C1389 + C4099 * C1606 + C4327 * C3431 + C4100 * C3661 +
             C4328 * C5772 + C4101 * C6042) *
                C801 +
            (C4326 * C1397 + C4099 * C1614 + C4327 * C3439 + C4100 * C3665 +
             C4328 * C5778 + C4101 * C6048) *
                C92078) *
               C92212) *
              C92062 * C92110 * C798 -
          (((C4328 * C8540 + C4101 * C8896 + C4327 * C5778 + C4100 * C6048 +
             C4326 * C3439 + C4099 * C3665) *
                C92078 +
            (C4328 * C8536 + C4101 * C8894 + C4327 * C5772 + C4100 * C6042 +
             C4326 * C3431 + C4099 * C3661) *
                C801) *
               C92212 +
           ((C4328 * C4886 + C4101 * C5222 + C4327 * C822 + C4100 * C1031 +
             C4326 * C813 + C4099 * C1030) *
                C92078 +
            (C4328 * C4882 + C4101 * C5218 + C4327 * C806 + C4100 * C1023 +
             C4326 * C805 + C4099 * C1022) *
                C801) *
               C60959) *
              C92062 * C92110 * C799 +
          (((C4326 * C806 + C4099 * C1023 + C4327 * C4882 + C4100 * C5218 +
             C4328 * C4883 + C4101 * C5219) *
                C801 +
            (C4326 * C822 + C4099 * C1031 + C4327 * C4886 + C4100 * C5222 +
             C4328 * C4891 + C4101 * C5223) *
                C92078) *
               C60959 +
           ((C4326 * C5772 + C4099 * C6042 + C4327 * C8536 + C4100 * C8894 +
             C4328 * C38955 + C4101 * C39215) *
                C801 +
            (C4326 * C5778 + C4099 * C6048 + C4327 * C8540 + C4100 * C8896 +
             C4328 * C38957 + C4101 * C39216) *
                C92078) *
               C92212) *
              C92062 * C92110 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C4326 * C107 + C4099 * C308 + C4327 * C805 + C4100 * C1022 +
             C4328 * C806 + C4101 * C1023) *
                C801 +
            (C4326 * C117 + C4099 * C314 + C4327 * C813 + C4100 * C1030 +
             C4328 * C822 + C4101 * C1031) *
                C92078) *
               C60959 +
           ((C67562 + C67563 + C67564) * C801 +
            (C67565 + C67566 + C67567) * C92078) *
               C92212) *
              C92062 * C1383 -
          (((C67568 + C67569 + C67570) * C92078 +
            (C67571 + C67572 + C67573) * C801) *
               C92212 +
           ((C67567 + C67566 + C67565) * C92078 +
            (C67564 + C67563 + C67562) * C801) *
               C60959) *
              C92062 * C1384 +
          (((C67573 + C67572 + C67571) * C801 +
            (C67570 + C67569 + C67568) * C92078) *
               C60959 +
           ((C4326 * C10961 + C4099 * C11299 + C4327 * C13849 + C4100 * C14183 +
             C4328 * C43815 + C4101 * C44144) *
                C801 +
            (C4326 * C10965 + C4099 * C11303 + C4327 * C13853 + C4100 * C14185 +
             C4328 * C43817 + C4101 * C44145) *
                C92078) *
               C92212) *
              C92062 * C1385) *
         C92099) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C307 * C107 + C92137 * C308) * C104 +
           (C307 * C117 + C92137 * C314) * C93 - C337 * C105 - C338 * C94 +
           C339 * C106 + C340 * C95) *
              C70783 +
          (C11327 * C104 + C11328 * C93 - C2934 * C105 - C2935 * C94 +
           C2936 * C106 + C2937 * C95) *
              C70784 +
          (C11329 * C104 + C11330 * C93 - C9748 * C105 - C9749 * C94 +
           C9750 * C106 + C9751 * C95) *
              C70785 +
          (C11335 * C104 + C11334 * C93 - C11333 * C105 - C11332 * C94 +
           (C307 * C12840 + C92137 * C13190) * C106 +
           (C307 * C12842 + C92137 * C13191) * C95) *
              C70786) *
         C92062 * C92110 * C92099) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C307 * C107 + C92137 * C308) * C801 +
            (C307 * C117 + C92137 * C314) * C92078) *
               C70783 +
           (C11336 + C11337) * C70784 + C11344 * C70785 +
           (C11343 + C11342) * C70786) *
              C92062 * C92110 * C798 -
          (((C307 * C13853 + C92137 * C14185) * C92078 +
            (C307 * C13849 + C92137 * C14183) * C801) *
               C70786 +
           (C14207 + C14206) * C70785 + (C14205 + C14204) * C70784 +
           ((C307 * C813 + C92137 * C1030) * C92078 +
            (C307 * C805 + C92137 * C1022) * C801) *
               C70783) *
              C92062 * C92110 * C799 +
          (((C307 * C806 + C92137 * C1023) * C801 +
            (C307 * C822 + C92137 * C1031) * C92078) *
               C70783 +
           ((C307 * C5772 + C92137 * C6042) * C801 +
            (C307 * C5778 + C92137 * C6048) * C92078) *
               C70784 +
           ((C307 * C5775 + C92137 * C6044) * C801 +
            (C307 * C5787 + C92137 * C6050) * C92078) *
               C70785 +
           ((C307 * C43815 + C92137 * C44144) * C801 +
            (C307 * C43817 + C92137 * C44145) * C92078) *
               C70786) *
              C92062 * C92110 * C800)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C307 * C107 + C92137 * C308) * C801 +
            (C307 * C117 + C92137 * C314) * C92078) *
               C70783 +
           (C11336 + C11337) * C70784 + C11344 * C70785 + C71874 * C70786) *
              C92062 * C1383 -
          ((C71881 + C71882) * C70786 + (C11342 + C11343) * C70785 +
           (C11339 + C11338) * C70784 + (C11337 + C11336) * C70783) *
              C92062 * C1384 +
          (C11344 * C70783 + C71874 * C70784 + (C71882 + C71881) * C70785 +
           ((C307 * C71691 + C92137 * C71871) * C801 +
            (C307 * C71693 + C92137 * C71872) * C92078) *
               C70786) *
              C92062 * C1385) *
         C92099) /
            (p * q * std::sqrt(p + q));
    d2eeyy[62] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((((C307 * C107 + C92137 * C308) * C181 +
                 (C307 * C182 + C92137 * C394) * C92099) *
                    C60959 +
                (C11423 + C11440) * C92212) *
                   C31257 +
               ((C401 + C417) * C60959 + C13308 * C92212) * C31258 +
               C61260 * C31259) *
                  C93 -
              (((C3021 + C3013) * C92212 + (C419 + C407) * C60959) * C31259 +
               (C23393 * C92212 + (C418 + C404) * C60959) * C31258 +
               (C13310 * C92212 + (C417 + C401) * C60959) * C31257) *
                  C94 +
              (C61260 * C31257 +
               (C422 * C60959 + (C3013 + C3021) * C92212) * C31258 +
               ((C412 + C420) * C60959 +
                ((C307 * C2711 + C92137 * C2919) * C181 +
                 (C307 * C2781 + C92137 * C3005) * C92099) *
                    C92212) *
                   C31259) *
                  C95) *
             C92110 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C307 * C107 + C92137 * C308) * C884 +
                (C307 * C182 + C92137 * C394) * C798 -
                (C307 * C805 + C92137 * C1022) * C885 -
                (C307 * C890 + C92137 * C1085) * C799 +
                (C307 * C806 + C92137 * C1023) * C886 +
                (C307 * C891 + C92137 * C1086) * C800) *
                   C60959 +
               (C11327 * C884 + C11436 * C798 - C14200 * C885 - C14318 * C799 +
                (C307 * C5772 + C92137 * C6042) * C886 +
                (C307 * C5870 + C92137 * C6128) * C800) *
                   C92212) *
                  C31257 +
              ((C337 * C884 + C413 * C798 - C2212 * C885 - C2300 * C799 +
                (C307 * C807 + C92137 * C1024) * C886 +
                (C307 * C892 + C92137 * C1088) * C800) *
                   C60959 +
               (C2934 * C884 + C3016 * C798 - C12183 * C885 - C12296 * C799 +
                (C307 * C5771 + C92137 * C6041) * C886 +
                (C307 * C5869 + C92137 * C6127) * C800) *
                   C92212) *
                  C31258 +
              ((C339 * C884 + C414 * C798 - C2214 * C885 - C2301 * C799 +
                (C307 * C808 + C92137 * C1025) * C886 +
                (C307 * C893 + C92137 * C1090) * C800) *
                   C60959 +
               (C2936 * C884 + C3017 * C798 - C22311 * C885 - C22416 * C799 +
                (C307 * C7566 + C92137 * C7868) * C886 +
                (C307 * C7668 + C92137 * C7986) * C800) *
                   C92212) *
                  C31259) *
             C92078 * C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92137 * C308) * C181 +
             (C307 * C182 + C92137 * C394) * C92099) *
                C60959 +
            (C11423 + C11440) * C92212) *
               C31257 +
           ((C401 + C417) * C60959 + C13308 * C92212) * C31258 +
           C61260 * C31259) *
              C92078 * C1383 -
          (((C9835 + C9831) * C92212 + C23393 * C60959) * C31259 +
           (C13309 * C92212 + C13310 * C60959) * C31258 +
           ((C11441 + C11426) * C92212 + (C11440 + C11423) * C60959) * C31257) *
              C92078 * C1384 +
          ((C11444 * C60959 + (C11435 + C11443) * C92212) * C31257 +
           (C11429 * C60959 + (C11432 + C11442) * C92212) * C31258 +
           ((C9831 + C9835) * C60959 +
            ((C307 * C12840 + C92137 * C13190) * C181 +
             (C307 * C12966 + C92137 * C13306) * C92099) *
                C92212) *
               C31259) *
              C92078 * C1385)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C4326 * C107 + C4099 * C308 + C4327 * C805 + C4100 * C1022 +
             C4328 * C806 + C4101 * C1023) *
                C181 +
            (C4326 * C182 + C4099 * C394 + C4327 * C890 + C4100 * C1085 +
             C4328 * C891 + C4101 * C1086) *
                C92099) *
               C60959 +
           ((C4326 * C1389 + C4099 * C1606 + C4327 * C3431 + C4100 * C3661 +
             C4328 * C5772 + C4101 * C6042) *
                C181 +
            (C4326 * C1471 + C4099 * C1672 + C4327 * C3513 + C4100 * C3735 +
             C4328 * C5870 + C4101 * C6128) *
                C92099) *
               C92212) *
              C92062 * C93 -
          (((C7996 + C7995 + C7994) * C92099 + (C7885 + C7884 + C7883) * C181) *
               C92212 +
           ((C4454 + C4453 + C4452) * C92099 + (C4354 + C4355 + C4356) * C181) *
               C60959) *
              C92062 * C94 +
          (((C4360 + C4361 + C4362) * C181 + (C4457 + C4456 + C4455) * C92099) *
               C60959 +
           ((C4326 * C1387 + C4099 * C1604 + C4327 * C3433 + C4100 * C3663 +
             C4328 * C7566 + C4101 * C7868) *
                C181 +
            (C4326 * C1469 + C4099 * C1670 + C4327 * C3515 + C4100 * C3737 +
             C4328 * C7668 + C4101 * C7986) *
                C92099) *
               C92212) *
              C92062 * C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C4326 * C107 + C4099 * C308 + C4327 * C805 + C4100 * C1022 +
            C4328 * C806 + C4101 * C1023) *
               C884 +
           (C4326 * C182 + C4099 * C394 + C4327 * C890 + C4100 * C1085 +
            C4328 * C891 + C4101 * C1086) *
               C798 -
           (C4328 * C4882 + C4101 * C5218 + C4327 * C806 + C4100 * C1023 +
            C4326 * C805 + C4099 * C1022) *
               C885 -
           (C4328 * C5012 + C4101 * C5299 + C4327 * C891 + C4100 * C1086 +
            C4326 * C890 + C4099 * C1085) *
               C799 +
           (C4326 * C806 + C4099 * C1023 + C4327 * C4882 + C4100 * C5218 +
            C4328 * C4883 + C4101 * C5219) *
               C886 +
           (C4326 * C891 + C4099 * C1086 + C4327 * C5012 + C4100 * C5299 +
            C4328 * C5014 + C4101 * C5300) *
               C800) *
              C60959 +
          ((C4326 * C1389 + C4099 * C1606 + C4327 * C3431 + C4100 * C3661 +
            C4328 * C5772 + C4101 * C6042) *
               C884 +
           (C4326 * C1471 + C4099 * C1672 + C4327 * C3513 + C4100 * C3735 +
            C4328 * C5870 + C4101 * C6128) *
               C798 -
           (C4328 * C8536 + C4101 * C8894 + C4327 * C5772 + C4100 * C6042 +
            C4326 * C3431 + C4099 * C3661) *
               C885 -
           (C4328 * C8666 + C4101 * C8996 + C4327 * C5870 + C4100 * C6128 +
            C4326 * C3513 + C4099 * C3735) *
               C799 +
           (C4326 * C5772 + C4099 * C6042 + C4327 * C8536 + C4100 * C8894 +
            C4328 * C38955 + C4101 * C39215) *
               C886 +
           (C4326 * C5870 + C4099 * C6128 + C4327 * C8666 + C4100 * C8996 +
            C4328 * C39049 + C4101 * C39283) *
               C800) *
              C92212) *
         C92062 * C92078 * C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C4326 * C107 + C4099 * C308 + C4327 * C805 + C4100 * C1022 +
             C4328 * C806 + C4101 * C1023) *
                C181 +
            (C4326 * C182 + C4099 * C394 + C4327 * C890 + C4100 * C1085 +
             C4328 * C891 + C4101 * C1086) *
                C92099) *
               C60959 +
           ((C67562 + C67563 + C67564) * C181 +
            (C67660 + C67661 + C67662) * C92099) *
               C92212) *
              C92062 * C92078 * C1383 -
          (((C67663 + C67664 + C67665) * C92099 +
            (C67571 + C67572 + C67573) * C181) *
               C92212 +
           ((C67662 + C67661 + C67660) * C92099 +
            (C67564 + C67563 + C67562) * C181) *
               C60959) *
              C92062 * C92078 * C1384 +
          (((C67573 + C67572 + C67571) * C181 +
            (C67665 + C67664 + C67663) * C92099) *
               C60959 +
           ((C4326 * C10961 + C4099 * C11299 + C4327 * C13849 + C4100 * C14183 +
             C4328 * C43815 + C4101 * C44144) *
                C181 +
            (C4326 * C11093 + C4099 * C11419 + C4327 * C13967 + C4100 * C14305 +
             C4328 * C43920 + C4101 * C44268) *
                C92099) *
               C92212) *
              C92062 * C92078 * C1385)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C307 * C107 + C92137 * C308) * C181 +
            (C307 * C182 + C92137 * C394) * C92099) *
               C70783 +
           (C11423 + C11440) * C70784 + C11444 * C70785 +
           (C11435 + C11443) * C70786) *
              C92062 * C93 -
          ((C11442 + C11432) * C70786 + C13309 * C70785 + C13310 * C70784 +
           (C417 + C401) * C70783) *
              C92062 * C94 +
          (C421 * C70783 + C20118 * C70784 + (C9831 + C9835) * C70785 +
           ((C307 * C12840 + C92137 * C13190) * C181 +
            (C307 * C12966 + C92137 * C13306) * C92099) *
               C70786) *
              C92062 * C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C307 * C107 + C92137 * C308) * C884 +
           (C307 * C182 + C92137 * C394) * C798 -
           (C307 * C805 + C92137 * C1022) * C885 -
           (C307 * C890 + C92137 * C1085) * C799 +
           (C307 * C806 + C92137 * C1023) * C886 +
           (C307 * C891 + C92137 * C1086) * C800) *
              C70783 +
          (C11327 * C884 + C11436 * C798 - C14200 * C885 - C14318 * C799 +
           (C307 * C5772 + C92137 * C6042) * C886 +
           (C307 * C5870 + C92137 * C6128) * C800) *
              C70784 +
          (C11329 * C884 + C11437 * C798 - C14202 * C885 - C14319 * C799 +
           (C307 * C5775 + C92137 * C6044) * C886 +
           (C307 * C5873 + C92137 * C6130) * C800) *
              C70785 +
          (C11335 * C884 + C11439 * C798 -
           (C307 * C13849 + C92137 * C14183) * C885 -
           (C307 * C13967 + C92137 * C14305) * C799 +
           (C307 * C43815 + C92137 * C44144) * C886 +
           (C307 * C43920 + C92137 * C44268) * C800) *
              C70786) *
         C92062 * C92078 * C92110) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C307 * C107 + C92137 * C308) * C181 +
            (C307 * C182 + C92137 * C394) * C92099) *
               C70783 +
           (C11423 + C11440) * C70784 + C11444 * C70785 + C71934 * C70786) *
              C92062 * C92078 * C1383 -
          ((C71939 + C71937) * C70786 + (C11443 + C11435) * C70785 +
           (C11441 + C11426) * C70784 + (C11440 + C11423) * C70783) *
              C92062 * C92078 * C1384 +
          (C11444 * C70783 + C71934 * C70784 + (C71937 + C71939) * C70785 +
           ((C307 * C71691 + C92137 * C71871) * C181 +
            (C307 * C71756 + C92137 * C71932) * C92099) *
               C70786) *
              C92062 * C92078 * C1385)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[62] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((((C307 * C107 + C92137 * C308) * C244 +
                 (C307 * C245 + C92137 * C474) * C92110) *
                    C60959 +
                (C11327 * C244 + C11531 * C92110) * C92212) *
                   C31257 +
               ((C481 + C497) * C60959 + (C9910 + C9911) * C92212) * C31258 +
               C61337 * C31259) *
                  C92099 * C93 -
              (((C20197 + C20198) * C92212 + (C499 + C487) * C60959) * C31259 +
               ((C9918 + C9919) * C92212 + (C498 + C484) * C60959) * C31258 +
               ((C9911 + C9910) * C92212 + (C497 + C481) * C60959) * C31257) *
                  C92099 * C94 +
              (C61337 * C31257 +
               (C502 * C60959 + (C20198 + C20197) * C92212) * C31258 +
               ((C492 + C500) * C60959 +
                ((C307 * C2711 + C92137 * C2919) * C244 +
                 (C307 * C2851 + C92137 * C3087) * C92110) *
                    C92212) *
                   C31259) *
                  C92099 * C95) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C307 * C107 + C92137 * C308) * C244 +
                 (C307 * C245 + C92137 * C474) * C92110) *
                    C60959 +
                (C11327 * C244 + C11531 * C92110) * C92212) *
                   C31257 +
               ((C481 + C497) * C60959 + (C9910 + C9911) * C92212) * C31258 +
               C61337 * C31259) *
                  C798 -
              (((C22520 + C22518) * C92212 + (C2386 + C2378) * C60959) *
                   C31259 +
               ((C12408 + C12404) * C92212 + (C2387 + C2381) * C60959) *
                   C31258 +
               ((C14426 * C92110 + C14200 * C244) * C92212 +
                ((C307 * C956 + C92137 * C1146) * C92110 +
                 (C307 * C805 + C92137 * C1022) * C244) *
                    C60959) *
                   C31257) *
                  C799 +
              ((((C307 * C806 + C92137 * C1023) * C244 +
                 (C307 * C957 + C92137 * C1147) * C92110) *
                    C60959 +
                ((C307 * C5772 + C92137 * C6042) * C244 +
                 (C307 * C5958 + C92137 * C6207) * C92110) *
                    C92212) *
                   C31257 +
               (((C307 * C807 + C92137 * C1024) * C244 +
                 (C307 * C958 + C92137 * C1148) * C92110) *
                    C60959 +
                ((C307 * C5771 + C92137 * C6041) * C244 +
                 (C307 * C5957 + C92137 * C6210) * C92110) *
                    C92212) *
                   C31258 +
               (((C307 * C808 + C92137 * C1025) * C244 +
                 (C307 * C959 + C92137 * C1149) * C92110) *
                    C60959 +
                ((C307 * C7566 + C92137 * C7868) * C244 +
                 (C307 * C7768 + C92137 * C8094) * C92110) *
                    C92212) *
                   C31259) *
                  C800) *
             C92078) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C307 * C107 + C92137 * C308) * C1534 +
            (C307 * C245 + C92137 * C474) * C1383 - C11327 * C1535 -
            C11531 * C1384 + C11329 * C1536 + C11532 * C1385) *
               C60959 +
           (C11327 * C1534 + C11531 * C1383 - C11329 * C1535 - C11532 * C1384 +
            C11335 * C1536 + C11533 * C1385) *
               C92212) *
              C31257 +
          ((C337 * C1534 + C493 * C1383 - C2934 * C1535 - C3104 * C1384 +
            C9748 * C1536 + C9920 * C1385) *
               C60959 +
           (C2934 * C1534 + C3104 * C1383 - C9748 * C1535 - C9920 * C1384 +
            C11333 * C1536 + C11534 * C1385) *
               C92212) *
              C31258 +
          ((C339 * C1534 + C494 * C1383 - C2936 * C1535 - C3105 * C1384 +
            C9750 * C1536 + C9921 * C1385) *
               C60959 +
           (C2936 * C1534 + C3105 * C1383 - C9750 * C1535 - C9921 * C1384 +
            (C307 * C12840 + C92137 * C13190) * C1536 +
            (C307 * C13078 + C92137 * C13408) * C1385) *
               C92212) *
              C31259) *
         C92099 * C92078) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C4326 * C107 + C4099 * C308 + C4327 * C805 + C4100 * C1022 +
             C4328 * C806 + C4101 * C1023) *
                C244 +
            (C4326 * C245 + C4099 * C474 + C4327 * C956 + C4100 * C1146 +
             C4328 * C957 + C4101 * C1147) *
                C92110) *
               C60959 +
           ((C4326 * C1389 + C4099 * C1606 + C4327 * C3431 + C4100 * C3661 +
             C4328 * C5772 + C4101 * C6042) *
                C244 +
            (C4326 * C1540 + C4099 * C1727 + C4327 * C3587 + C4100 * C3805 +
             C4328 * C5958 + C4101 * C6207) *
                C92110) *
               C92212) *
              C92062 * C92099 * C93 -
          (((C8102 + C8103 + C8104) * C92110 + (C7885 + C7884 + C7883) * C244) *
               C92212 +
           ((C4546 + C4545 + C4544) * C92110 + (C4354 + C4355 + C4356) * C244) *
               C60959) *
              C92062 * C92099 * C94 +
          (((C4360 + C4361 + C4362) * C244 + (C4549 + C4548 + C4547) * C92110) *
               C60959 +
           ((C4326 * C1387 + C4099 * C1604 + C4327 * C3433 + C4100 * C3663 +
             C4328 * C7566 + C4101 * C7868) *
                C244 +
            (C4326 * C1538 + C4099 * C1731 + C4327 * C3589 + C4100 * C3807 +
             C4328 * C7768 + C4101 * C8094) *
                C92110) *
               C92212) *
              C92062 * C92099 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C4326 * C107 + C4099 * C308 + C4327 * C805 + C4100 * C1022 +
             C4328 * C806 + C4101 * C1023) *
                C244 +
            (C4326 * C245 + C4099 * C474 + C4327 * C956 + C4100 * C1146 +
             C4328 * C957 + C4101 * C1147) *
                C92110) *
               C60959 +
           ((C4326 * C1389 + C4099 * C1606 + C4327 * C3431 + C4100 * C3661 +
             C4328 * C5772 + C4101 * C6042) *
                C244 +
            (C4326 * C1540 + C4099 * C1727 + C4327 * C3587 + C4100 * C3805 +
             C4328 * C5958 + C4101 * C6207) *
                C92110) *
               C92212) *
              C92062 * C798 -
          (((C4328 * C8780 + C4101 * C9096 + C4327 * C5958 + C4100 * C6207 +
             C4326 * C3587 + C4099 * C3805) *
                C92110 +
            (C4328 * C8536 + C4101 * C8894 + C4327 * C5772 + C4100 * C6042 +
             C4326 * C3431 + C4099 * C3661) *
                C244) *
               C92212 +
           ((C4328 * C5114 + C4101 * C5378 + C4327 * C957 + C4100 * C1147 +
             C4326 * C956 + C4099 * C1146) *
                C92110 +
            (C4328 * C4882 + C4101 * C5218 + C4327 * C806 + C4100 * C1023 +
             C4326 * C805 + C4099 * C1022) *
                C244) *
               C60959) *
              C92062 * C799 +
          (((C4326 * C806 + C4099 * C1023 + C4327 * C4882 + C4100 * C5218 +
             C4328 * C4883 + C4101 * C5219) *
                C244 +
            (C4326 * C957 + C4099 * C1147 + C4327 * C5114 + C4100 * C5378 +
             C4328 * C5115 + C4101 * C5379) *
                C92110) *
               C60959 +
           ((C4326 * C5772 + C4099 * C6042 + C4327 * C8536 + C4100 * C8894 +
             C4328 * C38955 + C4101 * C39215) *
                C244 +
            (C4326 * C5958 + C4099 * C6207 + C4327 * C8780 + C4100 * C9096 +
             C4328 * C39126 + C4101 * C39350) *
                C92110) *
               C92212) *
              C92062 * C800) *
         C92078) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C4326 * C107 + C4099 * C308 + C4327 * C805 + C4100 * C1022 +
            C4328 * C806 + C4101 * C1023) *
               C1534 +
           (C4326 * C245 + C4099 * C474 + C4327 * C956 + C4100 * C1146 +
            C4328 * C957 + C4101 * C1147) *
               C1383 -
           (C67564 + C67563 + C67562) * C1535 -
           (C67752 + C67753 + C67754) * C1384 +
           (C67573 + C67572 + C67571) * C1536 +
           (C67755 + C67756 + C67757) * C1385) *
              C60959 +
          ((C67562 + C67563 + C67564) * C1534 +
           (C67754 + C67753 + C67752) * C1383 -
           (C67571 + C67572 + C67573) * C1535 -
           (C67757 + C67756 + C67755) * C1384 +
           (C4326 * C10961 + C4099 * C11299 + C4327 * C13849 + C4100 * C14183 +
            C4328 * C43815 + C4101 * C44144) *
               C1536 +
           (C4326 * C11197 + C4099 * C11518 + C4327 * C14075 + C4100 * C14419 +
            C4328 * C44036 + C4101 * C44379) *
               C1385) *
              C92212) *
         C92062 * C92099 * C92078) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C307 * C107 + C92137 * C308) * C244 +
            (C307 * C245 + C92137 * C474) * C92110) *
               C70783 +
           (C11327 * C244 + C11531 * C92110) * C70784 +
           (C11329 * C244 + C11532 * C92110) * C70785 +
           (C11335 * C244 + C11533 * C92110) * C70786) *
              C92062 * C92099 * C93 -
          ((C11534 * C92110 + C11333 * C244) * C70786 +
           (C9922 + C9912) * C70785 + (C9911 + C9910) * C70784 +
           (C497 + C481) * C70783) *
              C92062 * C92099 * C94 +
          (C501 * C70783 + C20196 * C70784 + (C9917 + C9923) * C70785 +
           ((C307 * C12840 + C92137 * C13190) * C244 +
            (C307 * C13078 + C92137 * C13408) * C92110) *
               C70786) *
              C92062 * C92099 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C307 * C107 + C92137 * C308) * C244 +
            (C307 * C245 + C92137 * C474) * C92110) *
               C70783 +
           (C11327 * C244 + C11531 * C92110) * C70784 +
           (C11329 * C244 + C11532 * C92110) * C70785 +
           (C11335 * C244 + C11533 * C92110) * C70786) *
              C92062 * C798 -
          (((C307 * C14075 + C92137 * C14419) * C92110 +
            (C307 * C13849 + C92137 * C14183) * C244) *
               C70786 +
           (C14427 * C92110 + C14202 * C244) * C70785 +
           (C14426 * C92110 + C14200 * C244) * C70784 +
           ((C307 * C956 + C92137 * C1146) * C92110 +
            (C307 * C805 + C92137 * C1022) * C244) *
               C70783) *
              C92062 * C799 +
          (((C307 * C806 + C92137 * C1023) * C244 +
            (C307 * C957 + C92137 * C1147) * C92110) *
               C70783 +
           ((C307 * C5772 + C92137 * C6042) * C244 +
            (C307 * C5958 + C92137 * C6207) * C92110) *
               C70784 +
           ((C307 * C5775 + C92137 * C6044) * C244 +
            (C307 * C5959 + C92137 * C6209) * C92110) *
               C70785 +
           ((C307 * C43815 + C92137 * C44144) * C244 +
            (C307 * C44036 + C92137 * C44379) * C92110) *
               C70786) *
              C92062 * C800) *
         C92078) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C307 * C107 + C92137 * C308) * C1534 +
           (C307 * C245 + C92137 * C474) * C1383 - C11327 * C1535 -
           C11531 * C1384 + C11329 * C1536 + C11532 * C1385) *
              C70783 +
          (C11327 * C1534 + C11531 * C1383 - C11329 * C1535 - C11532 * C1384 +
           C11335 * C1536 + C11533 * C1385) *
              C70784 +
          (C11329 * C1534 + C11532 * C1383 - C11335 * C1535 - C11533 * C1384 +
           C71880 * C1536 + C71993 * C1385) *
              C70785 +
          (C11335 * C1534 + C11533 * C1383 - C71880 * C1535 - C71993 * C1384 +
           (C307 * C71691 + C92137 * C71871) * C1536 +
           (C307 * C71816 + C92137 * C71989) * C1385) *
              C70786) *
         C92062 * C92099 * C92078) /
            (p * q * std::sqrt(p + q));
    d2eezx[62] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((C61411 * C107 + C60959 * C555 + C61412 * C1389 +
                C92212 * C1788) *
                   C104 +
               (C61411 * C117 + C60959 * C561 + C61412 * C1397 +
                C92212 * C1796) *
                   C93 -
               (C61438 + C61439) * C105 - (C61440 + C61441) * C94 +
               C61450 * C106 + C61451 * C95) *
                  C31257 +
              ((C61439 + C61438) * C104 + (C61441 + C61440) * C93 -
               (C61443 + C61442) * C105 - (C61445 + C61444) * C94 +
               (C61446 + C61447) * C106 + (C61448 + C61449) * C95) *
                  C31258 +
              (C61450 * C104 + C61451 * C93 - (C61447 + C61446) * C105 -
               (C61449 + C61448) * C94 +
               (C61411 * C111 + C60959 * C559 + C61412 * C2711 +
                C92212 * C3175) *
                   C106 +
               (C61411 * C122 + C60959 * C565 + C61412 * C2713 +
                C92212 * C3176) *
                   C95) *
                  C31259) *
             C92137 * C92110 * C92099 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C61411 * C107 + C60959 * C555 + C61412 * C1389 +
                 C92212 * C1788) *
                    C801 +
                (C61411 * C117 + C60959 * C561 + C61412 * C1397 +
                 C92212 * C1796) *
                    C92078) *
                   C31257 +
               ((C61439 + C61438) * C801 + (C61441 + C61440) * C92078) *
                   C31258 +
               (C61450 * C801 + C61451 * C92078) * C31259) *
                  C92137 * C92110 * C798 -
              (((C61412 * C3441 + C92212 * C3881 + C61411 * C811 +
                 C60959 * C1210) *
                    C92078 +
                (C61412 * C3433 + C92212 * C3877 + C61411 * C803 +
                 C60959 * C1202) *
                    C801) *
                   C31259 +
               ((C61412 * C3440 + C92212 * C3880 + C61411 * C812 +
                 C60959 * C1211) *
                    C92078 +
                (C61412 * C3432 + C92212 * C3876 + C61411 * C804 +
                 C60959 * C1203) *
                    C801) *
                   C31258 +
               ((C61412 * C3439 + C92212 * C3879 + C61411 * C813 +
                 C60959 * C1212) *
                    C92078 +
                (C61412 * C3431 + C92212 * C3875 + C61411 * C805 +
                 C60959 * C1204) *
                    C801) *
                   C31257) *
                  C92137 * C92110 * C799 +
              (((C61411 * C806 + C60959 * C1205 + C61412 * C5772 +
                 C92212 * C6288) *
                    C801 +
                (C61411 * C822 + C60959 * C1213 + C61412 * C5778 +
                 C92212 * C6294) *
                    C92078) *
                   C31257 +
               ((C61411 * C807 + C60959 * C1206 + C61412 * C5771 +
                 C92212 * C6287) *
                    C801 +
                (C61411 * C823 + C60959 * C1214 + C61412 * C5777 +
                 C92212 * C6293) *
                    C92078) *
                   C31258 +
               ((C61411 * C808 + C60959 * C1207 + C61412 * C7566 +
                 C92212 * C8202) *
                    C801 +
                (C61411 * C824 + C60959 * C1215 + C61412 * C7568 +
                 C92212 * C8203) *
                    C92078) *
                   C31259) *
                  C92137 * C92110 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C61411 * C107 + C60959 * C555 + C61412 * C1389 + C92212 * C1788) *
                C801 +
            (C61411 * C117 + C60959 * C561 + C61412 * C1397 + C92212 * C1796) *
                C92078) *
               C31257 +
           ((C61439 + C61438) * C801 + (C61441 + C61440) * C92078) * C31258 +
           (C61450 * C801 + C61451 * C92078) * C31259) *
              C92137 * C1383 -
          (((C61412 * C1408 + C92212 * C1799 + C61411 * C1395 +
             C60959 * C1794) *
                C92078 +
            (C61412 * C1392 + C92212 * C1791 + C61411 * C1387 +
             C60959 * C1786) *
                C801) *
               C31259 +
           ((C61412 * C1407 + C92212 * C1798 + C61411 * C1396 +
             C60959 * C1795) *
                C92078 +
            (C61412 * C1391 + C92212 * C1790 + C61411 * C1388 +
             C60959 * C1787) *
                C801) *
               C31258 +
           ((C61412 * C1406 + C92212 * C1797 + C61411 * C1397 +
             C60959 * C1796) *
                C92078 +
            (C61412 * C1390 + C92212 * C1789 + C61411 * C1389 +
             C60959 * C1788) *
                C801) *
               C31257) *
              C92137 * C1384 +
          (((C61411 * C1390 + C60959 * C1789 + C61412 * C10961 +
             C92212 * C11609) *
                C801 +
            (C61411 * C1406 + C60959 * C1797 + C61412 * C10965 +
             C92212 * C11613) *
                C92078) *
               C31257 +
           ((C61411 * C1391 + C60959 * C1790 + C61412 * C10960 +
             C92212 * C11608) *
                C801 +
            (C61411 * C1407 + C60959 * C1798 + C61412 * C10964 +
             C92212 * C11612) *
                C92078) *
               C31258 +
           ((C61411 * C1392 + C60959 * C1791 + C61412 * C12840 +
             C92212 * C13515) *
                C801 +
            (C61411 * C1408 + C60959 * C1799 + C61412 * C12842 +
             C92212 * C13516) *
                C92078) *
               C31259) *
              C92137 * C1385) *
         C92099) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C61411 * C107 + C60959 * C555 + C61412 * C1389 + C92212 * C1788) *
               C104 +
           (C61411 * C117 + C60959 * C561 + C61412 * C1397 + C92212 * C1796) *
               C93 -
           (C61438 + C61439) * C105 - (C61440 + C61441) * C94 + C61450 * C106 +
           C61451 * C95) *
              C92062 * C4099 +
          ((C61411 * C805 + C60959 * C1204 + C61412 * C3431 + C92212 * C3875) *
               C104 +
           (C61411 * C813 + C60959 * C1212 + C61412 * C3439 + C92212 * C3879) *
               C93 -
           (C63751 + C63750) * C105 - (C63753 + C63752) * C94 +
           (C63754 + C63755) * C106 + (C63756 + C63757) * C95) *
              C92062 * C4100 +
          ((C61411 * C806 + C60959 * C1205 + C61412 * C5772 + C92212 * C6288) *
               C104 +
           (C61411 * C822 + C60959 * C1213 + C61412 * C5778 + C92212 * C6294) *
               C93 -
           (C61412 * C5771 + C92212 * C6287 + C61411 * C807 + C60959 * C1206) *
               C105 -
           (C61412 * C5777 + C92212 * C6293 + C61411 * C823 + C60959 * C1214) *
               C94 +
           (C61411 * C808 + C60959 * C1207 + C61412 * C7566 + C92212 * C8202) *
               C106 +
           (C61411 * C824 + C60959 * C1215 + C61412 * C7568 + C92212 * C8203) *
               C95) *
              C92062 * C4101) *
         C92110 * C92099) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C61411 * C107 + C60959 * C555 + C61412 * C1389 + C92212 * C1788) *
                C801 +
            (C61411 * C117 + C60959 * C561 + C61412 * C1397 + C92212 * C1796) *
                C92078) *
               C92062 * C4099 +
           ((C67034 + C67035) * C801 + (C67036 + C67037) * C92078) * C92062 *
               C4100 +
           C67051 * C4101) *
              C92110 * C798 -
          (((C67042 + C67043) * C92078 + (C67044 + C67045) * C801) * C92062 *
               C4101 +
           ((C67041 + C67040) * C92078 + (C67039 + C67038) * C801) * C92062 *
               C4100 +
           ((C67037 + C67036) * C92078 + (C67035 + C67034) * C801) * C92062 *
               C4099) *
              C92110 * C799 +
          (C67051 * C4099 +
           ((C67045 + C67044) * C801 + (C67043 + C67042) * C92078) * C92062 *
               C4100 +
           ((C61411 * C4883 + C60959 * C5457 + C61412 * C38955 +
             C92212 * C39417) *
                C801 +
            (C61411 * C4891 + C60959 * C5461 + C61412 * C38957 +
             C92212 * C39418) *
                C92078) *
               C92062 * C4101) *
              C92110 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C61411 * C107 + C60959 * C555 + C61412 * C1389 + C92212 * C1788) *
                C801 +
            (C61411 * C117 + C60959 * C561 + C61412 * C1397 + C92212 * C1796) *
                C92078) *
               C92062 * C4099 +
           ((C67034 + C67035) * C801 + (C67036 + C67037) * C92078) * C92062 *
               C4100 +
           C67051 * C4101) *
              C1383 -
          (((C61412 * C5787 + C92212 * C6297 + C61411 * C5778 +
             C60959 * C6294) *
                C92078 +
            (C61412 * C5775 + C92212 * C6291 + C61411 * C5772 +
             C60959 * C6288) *
                C801) *
               C92062 * C4101 +
           ((C61412 * C5783 + C92212 * C6295 + C61411 * C3439 +
             C60959 * C3879) *
                C92078 +
            (C61412 * C5773 + C92212 * C6289 + C61411 * C3431 +
             C60959 * C3875) *
                C801) *
               C92062 * C4100 +
           ((C61412 * C1406 + C92212 * C1797 + C61411 * C1397 +
             C60959 * C1796) *
                C92078 +
            (C61412 * C1390 + C92212 * C1789 + C61411 * C1389 +
             C60959 * C1788) *
                C801) *
               C92062 * C4099) *
              C1384 +
          (((C61411 * C1390 + C60959 * C1789 + C61412 * C10961 +
             C92212 * C11609) *
                C801 +
            (C61411 * C1406 + C60959 * C1797 + C61412 * C10965 +
             C92212 * C11613) *
                C92078) *
               C92062 * C4099 +
           ((C61411 * C5773 + C60959 * C6289 + C61412 * C13849 +
             C92212 * C14525) *
                C801 +
            (C61411 * C5783 + C60959 * C6295 + C61412 * C13853 +
             C92212 * C14527) *
                C92078) *
               C92062 * C4100 +
           ((C61411 * C5775 + C60959 * C6291 + C61412 * C43815 +
             C92212 * C44490) *
                C801 +
            (C61411 * C5787 + C60959 * C6297 + C61412 * C43817 +
             C92212 * C44491) *
                C92078) *
               C92062 * C4101) *
              C1385) *
         C92099) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((C71087 * C107 + C70783 * C555 + C71088 * C1389 + C70784 * C1788 +
           C71089 * C1390 + C70785 * C1789 + C71090 * C10961 +
           C70786 * C11609) *
              C104 +
          (C71087 * C117 + C70783 * C561 + C71088 * C1397 + C70784 * C1796 +
           C71089 * C1406 + C70785 * C1797 + C71090 * C10965 +
           C70786 * C11613) *
              C93 -
          (C71090 * C10960 + C70786 * C11608 + C71089 * C1391 + C70785 * C1790 +
           C71088 * C1388 + C70784 * C1787 + C71087 * C108 + C70783 * C556) *
              C105 -
          (C71090 * C10964 + C70786 * C11612 + C71089 * C1407 + C70785 * C1798 +
           C71088 * C1396 + C70784 * C1795 + C71087 * C118 + C70783 * C562) *
              C94 +
          (C71087 * C109 + C70783 * C557 + C71088 * C1387 + C70784 * C1786 +
           C71089 * C1392 + C70785 * C1791 + C71090 * C12840 +
           C70786 * C13515) *
              C106 +
          (C71087 * C119 + C70783 * C563 + C71088 * C1395 + C70784 * C1794 +
           C71089 * C1408 + C70785 * C1799 + C71090 * C12842 +
           C70786 * C13516) *
              C95) *
         C92062 * C92137 * C92110 * C92099) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C71087 * C107 + C70783 * C555 + C71088 * C1389 + C70784 * C1788 +
            C71089 * C1390 + C70785 * C1789 + C71090 * C10961 +
            C70786 * C11609) *
               C801 +
           (C71087 * C117 + C70783 * C561 + C71088 * C1397 + C70784 * C1796 +
            C71089 * C1406 + C70785 * C1797 + C71090 * C10965 +
            C70786 * C11613) *
               C92078) *
              C92062 * C92137 * C92110 * C798 -
          ((C71090 * C13853 + C70786 * C14527 + C71089 * C5783 +
            C70785 * C6295 + C71088 * C3439 + C70784 * C3879 + C71087 * C813 +
            C70783 * C1212) *
               C92078 +
           (C71090 * C13849 + C70786 * C14525 + C71089 * C5773 +
            C70785 * C6289 + C71088 * C3431 + C70784 * C3875 + C71087 * C805 +
            C70783 * C1204) *
               C801) *
              C92062 * C92137 * C92110 * C799 +
          ((C71087 * C806 + C70783 * C1205 + C71088 * C5772 + C70784 * C6288 +
            C71089 * C5775 + C70785 * C6291 + C71090 * C43815 +
            C70786 * C44490) *
               C801 +
           (C71087 * C822 + C70783 * C1213 + C71088 * C5778 + C70784 * C6294 +
            C71089 * C5787 + C70785 * C6297 + C71090 * C43817 +
            C70786 * C44491) *
               C92078) *
              C92062 * C92137 * C92110 * C800)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C71087 * C107 + C70783 * C555 + C71088 * C1389 + C70784 * C1788 +
            C71089 * C1390 + C70785 * C1789 + C71090 * C10961 +
            C70786 * C11609) *
               C801 +
           (C71087 * C117 + C70783 * C561 + C71088 * C1397 + C70784 * C1796 +
            C71089 * C1406 + C70785 * C1797 + C71090 * C10965 +
            C70786 * C11613) *
               C92078) *
              C92062 * C92137 * C1383 -
          ((C71090 * C10970 + C70786 * C11614 + C71089 * C10965 +
            C70785 * C11613 + C71088 * C1406 + C70784 * C1797 + C71087 * C1397 +
            C70783 * C1796) *
               C92078 +
           (C71090 * C10962 + C70786 * C11610 + C71089 * C10961 +
            C70785 * C11609 + C71088 * C1390 + C70784 * C1789 + C71087 * C1389 +
            C70783 * C1788) *
               C801) *
              C92062 * C92137 * C1384 +
          ((C71087 * C1390 + C70783 * C1789 + C71088 * C10961 +
            C70784 * C11609 + C71089 * C10962 + C70785 * C11610 +
            C71090 * C71691 + C70786 * C72043) *
               C801 +
           (C71087 * C1406 + C70783 * C1797 + C71088 * C10965 +
            C70784 * C11613 + C71089 * C10970 + C70785 * C11614 +
            C71090 * C71693 + C70786 * C72044) *
               C92078) *
              C92062 * C92137 * C1385) *
         C92099) /
            (p * q * std::sqrt(p + q));
    d2eezy[62] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C61411 * C107 + C60959 * C555 + C61412 * C1389 +
                 C92212 * C1788) *
                    C181 +
                (C61411 * C182 + C60959 * C641 + C61412 * C1471 +
                 C92212 * C1854) *
                    C92099) *
                   C31257 +
               ((C61439 + C61438) * C181 + (C61539 + C61540) * C92099) *
                   C31258 +
               C61547 * C31259) *
                  C92137 * C93 -
              (((C61543 + C61544) * C92099 + (C61447 + C61446) * C181) *
                   C31259 +
               ((C61542 + C61541) * C92099 + (C61443 + C61442) * C181) *
                   C31258 +
               ((C61540 + C61539) * C92099 + (C61438 + C61439) * C181) *
                   C31257) *
                  C92137 * C94 +
              (C61547 * C31257 +
               ((C61446 + C61447) * C181 + (C61544 + C61543) * C92099) *
                   C31258 +
               ((C61411 * C111 + C60959 * C559 + C61412 * C2711 +
                 C92212 * C3175) *
                    C181 +
                (C61411 * C186 + C60959 * C645 + C61412 * C2781 +
                 C92212 * C3261) *
                    C92099) *
                   C31259) *
                  C92137 * C95) *
             C92110 +
         0.5 * std::pow(Pi, 2.5) *
             (((C61411 * C107 + C60959 * C555 + C61412 * C1389 +
                C92212 * C1788) *
                   C884 +
               (C61411 * C182 + C60959 * C641 + C61412 * C1471 +
                C92212 * C1854) *
                   C798 -
               (C61412 * C3431 + C92212 * C3875 + C61411 * C805 +
                C60959 * C1204) *
                   C885 -
               (C61412 * C3513 + C92212 * C3949 + C61411 * C890 +
                C60959 * C1267) *
                   C799 +
               (C61411 * C806 + C60959 * C1205 + C61412 * C5772 +
                C92212 * C6288) *
                   C886 +
               (C61411 * C891 + C60959 * C1268 + C61412 * C5870 +
                C92212 * C6374) *
                   C800) *
                  C31257 +
              ((C61439 + C61438) * C884 + (C61539 + C61540) * C798 -
               (C61412 * C3432 + C92212 * C3876 + C61411 * C804 +
                C60959 * C1203) *
                   C885 -
               (C61412 * C3514 + C92212 * C3950 + C61411 * C889 +
                C60959 * C1269) *
                   C799 +
               (C61411 * C807 + C60959 * C1206 + C61412 * C5771 +
                C92212 * C6287) *
                   C886 +
               (C61411 * C892 + C60959 * C1270 + C61412 * C5869 +
                C92212 * C6373) *
                   C800) *
                  C31258 +
              (C61450 * C884 + C61545 * C798 -
               (C61412 * C3433 + C92212 * C3877 + C61411 * C803 +
                C60959 * C1202) *
                   C885 -
               (C61412 * C3515 + C92212 * C3951 + C61411 * C888 +
                C60959 * C1271) *
                   C799 +
               (C61411 * C808 + C60959 * C1207 + C61412 * C7566 +
                C92212 * C8202) *
                   C886 +
               (C61411 * C893 + C60959 * C1272 + C61412 * C7668 +
                C92212 * C8314) *
                   C800) *
                  C31259) *
             C92137 * C92078 * C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C61411 * C107 + C60959 * C555 + C61412 * C1389 + C92212 * C1788) *
                C181 +
            (C61411 * C182 + C60959 * C641 + C61412 * C1471 + C92212 * C1854) *
                C92099) *
               C31257 +
           ((C61439 + C61438) * C181 + (C61539 + C61540) * C92099) * C31258 +
           C61547 * C31259) *
              C92137 * C92078 * C1383 -
          (((C61412 * C1474 + C92212 * C1857 + C61411 * C1469 +
             C60959 * C1852) *
                C92099 +
            (C61412 * C1392 + C92212 * C1791 + C61411 * C1387 +
             C60959 * C1786) *
                C181) *
               C31259 +
           ((C61412 * C1473 + C92212 * C1856 + C61411 * C1470 +
             C60959 * C1853) *
                C92099 +
            (C61412 * C1391 + C92212 * C1790 + C61411 * C1388 +
             C60959 * C1787) *
                C181) *
               C31258 +
           ((C61412 * C1472 + C92212 * C1855 + C61411 * C1471 +
             C60959 * C1854) *
                C92099 +
            (C61412 * C1390 + C92212 * C1789 + C61411 * C1389 +
             C60959 * C1788) *
                C181) *
               C31257) *
              C92137 * C92078 * C1384 +
          (((C61411 * C1390 + C60959 * C1789 + C61412 * C10961 +
             C92212 * C11609) *
                C181 +
            (C61411 * C1472 + C60959 * C1855 + C61412 * C11093 +
             C92212 * C11691) *
                C92099) *
               C31257 +
           ((C61411 * C1391 + C60959 * C1790 + C61412 * C10960 +
             C92212 * C11608) *
                C181 +
            (C61411 * C1473 + C60959 * C1856 + C61412 * C11092 +
             C92212 * C11690) *
                C92099) *
               C31258 +
           ((C61411 * C1392 + C60959 * C1791 + C61412 * C12840 +
             C92212 * C13515) *
                C181 +
            (C61411 * C1474 + C60959 * C1857 + C61412 * C12966 +
             C92212 * C13633) *
                C92099) *
               C31259) *
              C92137 * C92078 * C1385)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C61411 * C107 + C60959 * C555 + C61412 * C1389 + C92212 * C1788) *
                C181 +
            (C61411 * C182 + C60959 * C641 + C61412 * C1471 + C92212 * C1854) *
                C92099) *
               C92062 * C4099 +
           ((C61411 * C805 + C60959 * C1204 + C61412 * C3431 + C92212 * C3875) *
                C181 +
            (C61411 * C890 + C60959 * C1267 + C61412 * C3513 + C92212 * C3949) *
                C92099) *
               C92062 * C4100 +
           ((C61411 * C806 + C60959 * C1205 + C61412 * C5772 + C92212 * C6288) *
                C181 +
            (C61411 * C891 + C60959 * C1268 + C61412 * C5870 + C92212 * C6374) *
                C92099) *
               C92062 * C4101) *
              C93 -
          (((C61412 * C5869 + C92212 * C6373 + C61411 * C892 + C60959 * C1270) *
                C92099 +
            (C61412 * C5771 + C92212 * C6287 + C61411 * C807 + C60959 * C1206) *
                C181) *
               C92062 * C4101 +
           ((C63864 + C63865) * C92099 + (C63751 + C63750) * C181) * C92062 *
               C4100 +
           ((C61540 + C61539) * C92099 + (C61438 + C61439) * C181) * C92062 *
               C4099) *
              C94 +
          (C61547 * C92062 * C4099 +
           ((C63754 + C63755) * C181 + (C63867 + C63866) * C92099) * C92062 *
               C4100 +
           ((C61411 * C808 + C60959 * C1207 + C61412 * C7566 + C92212 * C8202) *
                C181 +
            (C61411 * C893 + C60959 * C1272 + C61412 * C7668 + C92212 * C8314) *
                C92099) *
               C92062 * C4101) *
              C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C61411 * C107 + C60959 * C555 + C61412 * C1389 + C92212 * C1788) *
               C884 +
           (C61411 * C182 + C60959 * C641 + C61412 * C1471 + C92212 * C1854) *
               C798 -
           (C67035 + C67034) * C885 - (C67138 + C67139) * C799 + C67046 * C886 +
           C67144 * C800) *
              C92062 * C4099 +
          ((C67034 + C67035) * C884 + (C67139 + C67138) * C798 -
           (C67039 + C67038) * C885 - (C67141 + C67140) * C799 +
           (C67045 + C67044) * C886 + (C67142 + C67143) * C800) *
              C92062 * C4100 +
          (C67046 * C884 + C67144 * C798 - (C67044 + C67045) * C885 -
           (C67143 + C67142) * C799 +
           (C61411 * C4883 + C60959 * C5457 + C61412 * C38955 +
            C92212 * C39417) *
               C886 +
           (C61411 * C5014 + C60959 * C5580 + C61412 * C39049 +
            C92212 * C39493) *
               C800) *
              C92062 * C4101) *
         C92078 * C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C61411 * C107 + C60959 * C555 + C61412 * C1389 + C92212 * C1788) *
                C181 +
            (C61411 * C182 + C60959 * C641 + C61412 * C1471 + C92212 * C1854) *
                C92099) *
               C92062 * C4099 +
           ((C67034 + C67035) * C181 + (C67139 + C67138) * C92099) * C92062 *
               C4100 +
           (C67046 * C181 + C67144 * C92099) * C92062 * C4101) *
              C92078 * C1383 -
          (((C61412 * C5873 + C92212 * C6377 + C61411 * C5870 +
             C60959 * C6374) *
                C92099 +
            (C61412 * C5775 + C92212 * C6291 + C61411 * C5772 +
             C60959 * C6288) *
                C181) *
               C92062 * C4101 +
           ((C61412 * C5871 + C92212 * C6375 + C61411 * C3513 +
             C60959 * C3949) *
                C92099 +
            (C61412 * C5773 + C92212 * C6289 + C61411 * C3431 +
             C60959 * C3875) *
                C181) *
               C92062 * C4100 +
           ((C61412 * C1472 + C92212 * C1855 + C61411 * C1471 +
             C60959 * C1854) *
                C92099 +
            (C61412 * C1390 + C92212 * C1789 + C61411 * C1389 +
             C60959 * C1788) *
                C181) *
               C92062 * C4099) *
              C92078 * C1384 +
          (((C61411 * C1390 + C60959 * C1789 + C61412 * C10961 +
             C92212 * C11609) *
                C181 +
            (C61411 * C1472 + C60959 * C1855 + C61412 * C11093 +
             C92212 * C11691) *
                C92099) *
               C92062 * C4099 +
           ((C61411 * C5773 + C60959 * C6289 + C61412 * C13849 +
             C92212 * C14525) *
                C181 +
            (C61411 * C5871 + C60959 * C6375 + C61412 * C13967 +
             C92212 * C14627) *
                C92099) *
               C92062 * C4100 +
           ((C61411 * C5775 + C60959 * C6291 + C61412 * C43815 +
             C92212 * C44490) *
                C181 +
            (C61411 * C5873 + C60959 * C6377 + C61412 * C43920 +
             C92212 * C44608) *
                C92099) *
               C92062 * C4101) *
              C92078 * C1385)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C71087 * C107 + C70783 * C555 + C71088 * C1389 + C70784 * C1788 +
            C71089 * C1390 + C70785 * C1789 + C71090 * C10961 +
            C70786 * C11609) *
               C181 +
           (C71087 * C182 + C70783 * C641 + C71088 * C1471 + C70784 * C1854 +
            C71089 * C1472 + C70785 * C1855 + C71090 * C11093 +
            C70786 * C11691) *
               C92099) *
              C92062 * C92137 * C93 -
          ((C71090 * C11092 + C70786 * C11690 + C71089 * C1473 +
            C70785 * C1856 + C71088 * C1470 + C70784 * C1853 + C71087 * C183 +
            C70783 * C642) *
               C92099 +
           (C71090 * C10960 + C70786 * C11608 + C71089 * C1391 +
            C70785 * C1790 + C71088 * C1388 + C70784 * C1787 + C71087 * C108 +
            C70783 * C556) *
               C181) *
              C92062 * C92137 * C94 +
          ((C71087 * C109 + C70783 * C557 + C71088 * C1387 + C70784 * C1786 +
            C71089 * C1392 + C70785 * C1791 + C71090 * C12840 +
            C70786 * C13515) *
               C181 +
           (C71087 * C184 + C70783 * C643 + C71088 * C1469 + C70784 * C1852 +
            C71089 * C1474 + C70785 * C1857 + C71090 * C12966 +
            C70786 * C13633) *
               C92099) *
              C92062 * C92137 * C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((C71087 * C107 + C70783 * C555 + C71088 * C1389 + C70784 * C1788 +
           C71089 * C1390 + C70785 * C1789 + C71090 * C10961 +
           C70786 * C11609) *
              C884 +
          (C71087 * C182 + C70783 * C641 + C71088 * C1471 + C70784 * C1854 +
           C71089 * C1472 + C70785 * C1855 + C71090 * C11093 +
           C70786 * C11691) *
              C798 -
          (C71090 * C13849 + C70786 * C14525 + C71089 * C5773 + C70785 * C6289 +
           C71088 * C3431 + C70784 * C3875 + C71087 * C805 + C70783 * C1204) *
              C885 -
          (C71090 * C13967 + C70786 * C14627 + C71089 * C5871 + C70785 * C6375 +
           C71088 * C3513 + C70784 * C3949 + C71087 * C890 + C70783 * C1267) *
              C799 +
          (C71087 * C806 + C70783 * C1205 + C71088 * C5772 + C70784 * C6288 +
           C71089 * C5775 + C70785 * C6291 + C71090 * C43815 +
           C70786 * C44490) *
              C886 +
          (C71087 * C891 + C70783 * C1268 + C71088 * C5870 + C70784 * C6374 +
           C71089 * C5873 + C70785 * C6377 + C71090 * C43920 +
           C70786 * C44608) *
              C800) *
         C92062 * C92137 * C92078 * C92110) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C71087 * C107 + C70783 * C555 + C71088 * C1389 + C70784 * C1788 +
            C71089 * C1390 + C70785 * C1789 + C71090 * C10961 +
            C70786 * C11609) *
               C181 +
           (C71087 * C182 + C70783 * C641 + C71088 * C1471 + C70784 * C1854 +
            C71089 * C1472 + C70785 * C1855 + C71090 * C11093 +
            C70786 * C11691) *
               C92099) *
              C92062 * C92137 * C92078 * C1383 -
          ((C71090 * C11094 + C70786 * C11692 + C71089 * C11093 +
            C70785 * C11691 + C71088 * C1472 + C70784 * C1855 + C71087 * C1471 +
            C70783 * C1854) *
               C92099 +
           (C71090 * C10962 + C70786 * C11610 + C71089 * C10961 +
            C70785 * C11609 + C71088 * C1390 + C70784 * C1789 + C71087 * C1389 +
            C70783 * C1788) *
               C181) *
              C92062 * C92137 * C92078 * C1384 +
          ((C71087 * C1390 + C70783 * C1789 + C71088 * C10961 +
            C70784 * C11609 + C71089 * C10962 + C70785 * C11610 +
            C71090 * C71691 + C70786 * C72043) *
               C181 +
           (C71087 * C1472 + C70783 * C1855 + C71088 * C11093 +
            C70784 * C11691 + C71089 * C11094 + C70785 * C11692 +
            C71090 * C71756 + C70786 * C72095) *
               C92099) *
              C92062 * C92137 * C92078 * C1385)) /
            (p * q * std::sqrt(p + q));
    d2eezz[62] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C61411 * C107 + C60959 * C555 + C61412 * C1389 +
                 C92212 * C1788) *
                    C244 +
                (C61411 * C245 + C60959 * C719 + C61412 * C1540 +
                 C92212 * C1909) *
                    C92110) *
                   C31257 +
               ((C61439 + C61438) * C244 + (C61635 + C61636) * C92110) *
                   C31258 +
               C61643 * C31259) *
                  C92137 * C92099 * C93 -
              (((C61639 + C61640) * C92110 + (C61447 + C61446) * C244) *
                   C31259 +
               ((C61638 + C61637) * C92110 + (C61443 + C61442) * C244) *
                   C31258 +
               ((C61636 + C61635) * C92110 + (C61438 + C61439) * C244) *
                   C31257) *
                  C92137 * C92099 * C94 +
              (C61643 * C31257 +
               ((C61446 + C61447) * C244 + (C61640 + C61639) * C92110) *
                   C31258 +
               ((C61411 * C111 + C60959 * C559 + C61412 * C2711 +
                 C92212 * C3175) *
                    C244 +
                (C61411 * C249 + C60959 * C723 + C61412 * C2851 +
                 C92212 * C3343) *
                    C92110) *
                   C31259) *
                  C92137 * C92099 * C95) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C61411 * C107 + C60959 * C555 + C61412 * C1389 +
                 C92212 * C1788) *
                    C244 +
                (C61411 * C245 + C60959 * C719 + C61412 * C1540 +
                 C92212 * C1909) *
                    C92110) *
                   C31257 +
               ((C61439 + C61438) * C244 + (C61635 + C61636) * C92110) *
                   C31258 +
               C61643 * C31259) *
                  C92137 * C798 -
              (((C61412 * C3589 + C92212 * C4021 + C61411 * C954 +
                 C60959 * C1326) *
                    C92110 +
                (C61412 * C3433 + C92212 * C3877 + C61411 * C803 +
                 C60959 * C1202) *
                    C244) *
                   C31259 +
               ((C61412 * C3588 + C92212 * C4020 + C61411 * C955 +
                 C60959 * C1327) *
                    C92110 +
                (C61412 * C3432 + C92212 * C3876 + C61411 * C804 +
                 C60959 * C1203) *
                    C244) *
                   C31258 +
               ((C61412 * C3587 + C92212 * C4019 + C61411 * C956 +
                 C60959 * C1328) *
                    C92110 +
                (C61412 * C3431 + C92212 * C3875 + C61411 * C805 +
                 C60959 * C1204) *
                    C244) *
                   C31257) *
                  C92137 * C799 +
              (((C61411 * C806 + C60959 * C1205 + C61412 * C5772 +
                 C92212 * C6288) *
                    C244 +
                (C61411 * C957 + C60959 * C1329 + C61412 * C5958 +
                 C92212 * C6455) *
                    C92110) *
                   C31257 +
               ((C61411 * C807 + C60959 * C1206 + C61412 * C5771 +
                 C92212 * C6287) *
                    C244 +
                (C61411 * C958 + C60959 * C1330 + C61412 * C5957 +
                 C92212 * C6457) *
                    C92110) *
                   C31258 +
               ((C61411 * C808 + C60959 * C1207 + C61412 * C7566 +
                 C92212 * C8202) *
                    C244 +
                (C61411 * C959 + C60959 * C1331 + C61412 * C7768 +
                 C92212 * C8423) *
                    C92110) *
                   C31259) *
                  C92137 * C800) *
             C92078) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C61411 * C107 + C60959 * C555 + C61412 * C1389 + C92212 * C1788) *
               C1534 +
           (C61411 * C245 + C60959 * C719 + C61412 * C1540 + C92212 * C1909) *
               C1383 -
           (C61412 * C1390 + C92212 * C1789 + C61411 * C1389 + C60959 * C1788) *
               C1535 -
           (C61412 * C1541 + C92212 * C1910 + C61411 * C1540 + C60959 * C1909) *
               C1384 +
           (C61411 * C1390 + C60959 * C1789 + C61412 * C10961 +
            C92212 * C11609) *
               C1536 +
           (C61411 * C1541 + C60959 * C1910 + C61412 * C11197 +
            C92212 * C11768) *
               C1385) *
              C31257 +
          ((C61439 + C61438) * C1534 + (C61635 + C61636) * C1383 -
           (C61412 * C1391 + C92212 * C1790 + C61411 * C1388 + C60959 * C1787) *
               C1535 -
           (C61412 * C1542 + C92212 * C1912 + C61411 * C1539 + C60959 * C1911) *
               C1384 +
           (C61411 * C1391 + C60959 * C1790 + C61412 * C10960 +
            C92212 * C11608) *
               C1536 +
           (C61411 * C1542 + C60959 * C1912 + C61412 * C11198 +
            C92212 * C11770) *
               C1385) *
              C31258 +
          (C61450 * C1534 + C61641 * C1383 -
           (C61412 * C1392 + C92212 * C1791 + C61411 * C1387 + C60959 * C1786) *
               C1535 -
           (C61412 * C1543 + C92212 * C1914 + C61411 * C1538 + C60959 * C1913) *
               C1384 +
           (C61411 * C1392 + C60959 * C1791 + C61412 * C12840 +
            C92212 * C13515) *
               C1536 +
           (C61411 * C1543 + C60959 * C1914 + C61412 * C13078 +
            C92212 * C13741) *
               C1385) *
              C31259) *
         C92137 * C92099 * C92078) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C61411 * C107 + C60959 * C555 + C61412 * C1389 + C92212 * C1788) *
                C244 +
            (C61411 * C245 + C60959 * C719 + C61412 * C1540 + C92212 * C1909) *
                C92110) *
               C92062 * C4099 +
           ((C61411 * C805 + C60959 * C1204 + C61412 * C3431 + C92212 * C3875) *
                C244 +
            (C61411 * C956 + C60959 * C1328 + C61412 * C3587 + C92212 * C4019) *
                C92110) *
               C92062 * C4100 +
           ((C61411 * C806 + C60959 * C1205 + C61412 * C5772 + C92212 * C6288) *
                C244 +
            (C61411 * C957 + C60959 * C1329 + C61412 * C5958 + C92212 * C6455) *
                C92110) *
               C92062 * C4101) *
              C92099 * C93 -
          (((C61412 * C5957 + C92212 * C6457 + C61411 * C958 + C60959 * C1330) *
                C92110 +
            (C61412 * C5771 + C92212 * C6287 + C61411 * C807 + C60959 * C1206) *
                C244) *
               C92062 * C4101 +
           ((C63976 + C63977) * C92110 + (C63751 + C63750) * C244) * C92062 *
               C4100 +
           ((C61636 + C61635) * C92110 + (C61438 + C61439) * C244) * C92062 *
               C4099) *
              C92099 * C94 +
          (C61643 * C92062 * C4099 +
           ((C63754 + C63755) * C244 + (C63975 + C63974) * C92110) * C92062 *
               C4100 +
           ((C61411 * C808 + C60959 * C1207 + C61412 * C7566 + C92212 * C8202) *
                C244 +
            (C61411 * C959 + C60959 * C1331 + C61412 * C7768 + C92212 * C8423) *
                C92110) *
               C92062 * C4101) *
              C92099 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C61411 * C107 + C60959 * C555 + C61412 * C1389 + C92212 * C1788) *
                C244 +
            (C61411 * C245 + C60959 * C719 + C61412 * C1540 + C92212 * C1909) *
                C92110) *
               C92062 * C4099 +
           ((C67034 + C67035) * C244 + (C67232 + C67233) * C92110) * C92062 *
               C4100 +
           C67241 * C4101) *
              C798 -
          (((C67236 + C67237) * C92110 + (C67044 + C67045) * C244) * C92062 *
               C4101 +
           ((C67235 + C67234) * C92110 + (C67039 + C67038) * C244) * C92062 *
               C4100 +
           ((C67233 + C67232) * C92110 + (C67035 + C67034) * C244) * C92062 *
               C4099) *
              C799 +
          (C67241 * C4099 +
           ((C67045 + C67044) * C244 + (C67237 + C67236) * C92110) * C92062 *
               C4100 +
           ((C61411 * C4883 + C60959 * C5457 + C61412 * C38955 +
             C92212 * C39417) *
                C244 +
            (C61411 * C5115 + C60959 * C5670 + C61412 * C39126 +
             C92212 * C39563) *
                C92110) *
               C92062 * C4101) *
              C800) *
         C92078) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C61411 * C107 + C60959 * C555 + C61412 * C1389 + C92212 * C1788) *
               C1534 +
           (C61411 * C245 + C60959 * C719 + C61412 * C1540 + C92212 * C1909) *
               C1383 -
           (C61412 * C1390 + C92212 * C1789 + C61411 * C1389 + C60959 * C1788) *
               C1535 -
           (C61412 * C1541 + C92212 * C1910 + C61411 * C1540 + C60959 * C1909) *
               C1384 +
           (C61411 * C1390 + C60959 * C1789 + C61412 * C10961 +
            C92212 * C11609) *
               C1536 +
           (C61411 * C1541 + C60959 * C1910 + C61412 * C11197 +
            C92212 * C11768) *
               C1385) *
              C92062 * C4099 +
          ((C67034 + C67035) * C1534 + (C67232 + C67233) * C1383 -
           (C61412 * C5773 + C92212 * C6289 + C61411 * C3431 + C60959 * C3875) *
               C1535 -
           (C61412 * C5955 + C92212 * C6453 + C61411 * C3587 + C60959 * C4019) *
               C1384 +
           (C61411 * C5773 + C60959 * C6289 + C61412 * C13849 +
            C92212 * C14525) *
               C1536 +
           (C61411 * C5955 + C60959 * C6453 + C61412 * C14075 +
            C92212 * C14727) *
               C1385) *
              C92062 * C4100 +
          (C67046 * C1534 + C67238 * C1383 -
           (C61412 * C5775 + C92212 * C6291 + C61411 * C5772 + C60959 * C6288) *
               C1535 -
           (C61412 * C5959 + C92212 * C6456 + C61411 * C5958 + C60959 * C6455) *
               C1384 +
           (C61411 * C5775 + C60959 * C6291 + C61412 * C43815 +
            C92212 * C44490) *
               C1536 +
           (C61411 * C5959 + C60959 * C6456 + C61412 * C44036 +
            C92212 * C44716) *
               C1385) *
              C92062 * C4101) *
         C92099 * C92078) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C71087 * C107 + C70783 * C555 + C71088 * C1389 + C70784 * C1788 +
            C71089 * C1390 + C70785 * C1789 + C71090 * C10961 +
            C70786 * C11609) *
               C244 +
           (C71087 * C245 + C70783 * C719 + C71088 * C1540 + C70784 * C1909 +
            C71089 * C1541 + C70785 * C1910 + C71090 * C11197 +
            C70786 * C11768) *
               C92110) *
              C92062 * C92137 * C92099 * C93 -
          ((C71090 * C11198 + C70786 * C11770 + C71089 * C1542 +
            C70785 * C1912 + C71088 * C1539 + C70784 * C1911 + C71087 * C246 +
            C70783 * C720) *
               C92110 +
           (C71090 * C10960 + C70786 * C11608 + C71089 * C1391 +
            C70785 * C1790 + C71088 * C1388 + C70784 * C1787 + C71087 * C108 +
            C70783 * C556) *
               C244) *
              C92062 * C92137 * C92099 * C94 +
          ((C71087 * C109 + C70783 * C557 + C71088 * C1387 + C70784 * C1786 +
            C71089 * C1392 + C70785 * C1791 + C71090 * C12840 +
            C70786 * C13515) *
               C244 +
           (C71087 * C247 + C70783 * C721 + C71088 * C1538 + C70784 * C1913 +
            C71089 * C1543 + C70785 * C1914 + C71090 * C13078 +
            C70786 * C13741) *
               C92110) *
              C92062 * C92137 * C92099 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C71087 * C107 + C70783 * C555 + C71088 * C1389 + C70784 * C1788 +
            C71089 * C1390 + C70785 * C1789 + C71090 * C10961 +
            C70786 * C11609) *
               C244 +
           (C71087 * C245 + C70783 * C719 + C71088 * C1540 + C70784 * C1909 +
            C71089 * C1541 + C70785 * C1910 + C71090 * C11197 +
            C70786 * C11768) *
               C92110) *
              C92062 * C92137 * C798 -
          ((C71090 * C14075 + C70786 * C14727 + C71089 * C5955 +
            C70785 * C6453 + C71088 * C3587 + C70784 * C4019 + C71087 * C956 +
            C70783 * C1328) *
               C92110 +
           (C71090 * C13849 + C70786 * C14525 + C71089 * C5773 +
            C70785 * C6289 + C71088 * C3431 + C70784 * C3875 + C71087 * C805 +
            C70783 * C1204) *
               C244) *
              C92062 * C92137 * C799 +
          ((C71087 * C806 + C70783 * C1205 + C71088 * C5772 + C70784 * C6288 +
            C71089 * C5775 + C70785 * C6291 + C71090 * C43815 +
            C70786 * C44490) *
               C244 +
           (C71087 * C957 + C70783 * C1329 + C71088 * C5958 + C70784 * C6455 +
            C71089 * C5959 + C70785 * C6456 + C71090 * C44036 +
            C70786 * C44716) *
               C92110) *
              C92062 * C92137 * C800) *
         C92078) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((C71087 * C107 + C70783 * C555 + C71088 * C1389 + C70784 * C1788 +
           C71089 * C1390 + C70785 * C1789 + C71090 * C10961 +
           C70786 * C11609) *
              C1534 +
          (C71087 * C245 + C70783 * C719 + C71088 * C1540 + C70784 * C1909 +
           C71089 * C1541 + C70785 * C1910 + C71090 * C11197 +
           C70786 * C11768) *
              C1383 -
          (C71090 * C10962 + C70786 * C11610 + C71089 * C10961 +
           C70785 * C11609 + C71088 * C1390 + C70784 * C1789 + C71087 * C1389 +
           C70783 * C1788) *
              C1535 -
          (C71090 * C11199 + C70786 * C11769 + C71089 * C11197 +
           C70785 * C11768 + C71088 * C1541 + C70784 * C1910 + C71087 * C1540 +
           C70783 * C1909) *
              C1384 +
          (C71087 * C1390 + C70783 * C1789 + C71088 * C10961 + C70784 * C11609 +
           C71089 * C10962 + C70785 * C11610 + C71090 * C71691 +
           C70786 * C72043) *
              C1536 +
          (C71087 * C1541 + C70783 * C1910 + C71088 * C11197 + C70784 * C11768 +
           C71089 * C11199 + C70785 * C11769 + C71090 * C71816 +
           C70786 * C72146) *
              C1385) *
         C92062 * C92137 * C92099 * C92078) /
            (p * q * std::sqrt(p + q));
    d2eexx[63] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((((C36216 * C107 + C92062 * C113) * C1987 +
                       (C36216 * C117 + C92062 * C125) * C1983 -
                       (C36216 * C108 + C92062 * C114) * C1988 -
                       (C36216 * C118 + C92062 * C126) * C1984) *
                          C4099 +
                      (C37710 + C37711 - C37734 - C37735) * C4100 +
                      (C37716 + C37717 - C37736 - C37737) * C4101) *
                         C60959 +
                     ((C42870 + C42871 - C42886 - C42887) * C4099 +
                      (C41952 + C41953 - C41968 - C41969) * C4100 +
                      (C58249 + C58250 - C58257 - C58258) * C4101) *
                         C92212) *
                        C2709 +
                    (((C42886 - (C42871 + C42870) + C42887) * C4099 +
                      (C41968 - (C41953 + C41952) + C41969) * C4100 +
                      (C58257 - (C58250 + C58249) + C58258) * C4101) *
                         C60959 +
                     ((C42888 - (C42877 + C42876) + C42889) * C4099 +
                      (C41970 - (C41959 + C41958) + C41971) * C4100 +
                      ((C36216 * C5776 + C92062 * C5786) * C1988 -
                       (C40322 * C1983 + C40323 * C1987) +
                       (C36216 * C5788 + C92062 * C5794) * C1984) *
                          C4101) *
                         C92212) *
                        C2710) *
                   C92099) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C31262 * C107 + C31257 * C113 + C31263 * C108 +
                       C31258 * C114 + C31264 * C109 + C31259 * C115) *
                          C1987 +
                      (C31262 * C117 + C31257 * C125 + C31263 * C118 +
                       C31258 * C126 + C31264 * C119 + C31259 * C127) *
                          C1983 -
                      (C31264 * C110 + C31259 * C116 + C31263 * C109 +
                       C31258 * C115 + C31262 * C108 + C31257 * C114) *
                          C1988 -
                      (C31264 * C120 + C31259 * C128 + C31263 * C119 +
                       C31258 * C127 + C31262 * C118 + C31257 * C126) *
                          C1984) *
                         C92137 * C60959 +
                     ((C62408 + C62409 + C62410) * C1987 +
                      (C62411 + C62412 + C62413) * C1983 -
                      (C64088 + C64089 + C64090) * C1988 -
                      (C64091 + C64092 + C64093) * C1984) *
                         C92137 * C92212) *
                        C2709 +
                    (((C64090 + C64089 + C64088) * C1988 -
                      ((C62413 + C62412 + C62411) * C1983 +
                       (C62410 + C62409 + C62408) * C1987) +
                      (C64093 + C64092 + C64091) * C1984) *
                         C92137 * C60959 +
                     ((C31262 * C1391 + C31257 * C1403 + C31263 * C1392 +
                       C31258 * C1404 + C31264 * C1393 + C31259 * C1405) *
                          C1988 -
                      ((C62414 + C62415 + C62416) * C1983 +
                       (C62417 + C62418 + C62419) * C1987) +
                      (C31262 * C1407 + C31257 * C1415 + C31263 * C1408 +
                       C31258 * C1416 + C31264 * C1409 + C31259 * C1417) *
                          C1984) *
                         C92137 * C92212) *
                        C2710) *
                   C92099) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C36216 * C107 + C92062 * C113) * C1987 +
                      (C36216 * C117 + C92062 * C125) * C1983 -
                      (C36216 * C108 + C92062 * C114) * C1988 -
                      (C36216 * C118 + C92062 * C126) * C1984) *
                         C92137 * C70783 +
                     (C42870 + C42871 - C42886 - C42887) * C92137 * C70784 +
                     (C42876 + C42877 - C42888 - C42889) * C92137 * C70785 +
                     (C72808 + C72809 - C72816 - C72817) * C92137 * C70786) *
                        C2709 +
                    ((C42886 - (C42871 + C42870) + C42887) * C92137 * C70783 +
                     (C42888 - (C42877 + C42876) + C42889) * C92137 * C70784 +
                     (C72816 - (C72809 + C72808) + C72817) * C92137 * C70785 +
                     ((C36216 * C10963 + C92062 * C10969) * C1988 -
                      (C71703 * C1983 + C71704 * C1987) +
                      (C36216 * C10971 + C92062 * C10975) * C1984) *
                         C92137 * C70786) *
                        C2710) *
                   C92099) /
                      (p * q * std::sqrt(p + q));
    d2eexy[63] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((((C36216 * C107 + C92062 * C113) * C181 +
                        (C36216 * C182 + C92062 * C188) * C92099) *
                           C4099 +
                       (C36692 * C181 + C36770 * C92099) * C4100 +
                       (C36694 * C181 + C36771 * C92099) * C4101) *
                          C60959 +
                      ((C41203 + C41224) * C4099 + (C41206 + C41207) * C4100 +
                       (C57557 + C57558) * C4101) *
                          C92212) *
                         C1983 -
                     (((C59247 + C59248) * C4101 + (C42993 + C42994) * C4100 +
                       (C43001 + C42997) * C4099) *
                          C92212 +
                      ((C37813 * C92099 + C37730 * C181) * C4101 +
                       (C37812 * C92099 + C37728 * C181) * C4100 +
                       ((C36216 * C183 + C92062 * C189) * C92099 +
                        (C36216 * C108 + C92062 * C114) * C181) *
                           C4099) *
                          C60959) *
                         C1984) *
                        C2709 +
                    ((((C42997 + C43001) * C4099 + (C42994 + C42993) * C4100 +
                       (C59248 + C59247) * C4101) *
                          C60959 +
                      ((C42992 + C43000) * C4099 + (C42989 + C42988) * C4100 +
                       ((C36216 * C5776 + C92062 * C5786) * C181 +
                        (C36216 * C5874 + C92062 * C5880) * C92099) *
                           C4101) *
                          C92212) *
                         C1984 -
                     (((C57559 + C57560) * C4101 + (C41212 + C41211) * C4100 +
                       (C41225 + C41208) * C4099) *
                          C92212 +
                      ((C57558 + C57557) * C4101 + (C41207 + C41206) * C4100 +
                       (C41224 + C41203) * C4099) *
                          C60959) *
                         C1983) *
                        C2710)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((((C31262 * C107 + C31257 * C113 + C31263 * C108 +
                        C31258 * C114 + C31264 * C109 + C31259 * C115) *
                           C181 +
                       (C31262 * C182 + C31257 * C188 + C31263 * C183 +
                        C31258 * C189 + C31264 * C184 + C31259 * C190) *
                           C92099) *
                          C92137 * C60959 +
                      ((C62408 + C62409 + C62410) * C181 +
                       (C62506 + C62507 + C62508) * C92099) *
                          C92137 * C92212) *
                         C1983 -
                     (((C64198 + C64199 + C64200) * C92099 +
                       (C64088 + C64089 + C64090) * C181) *
                          C92137 * C92212 +
                      ((C31264 * C185 + C31259 * C191 + C31263 * C184 +
                        C31258 * C190 + C31262 * C183 + C31257 * C189) *
                           C92099 +
                       (C31264 * C110 + C31259 * C116 + C31263 * C109 +
                        C31258 * C115 + C31262 * C108 + C31257 * C114) *
                           C181) *
                          C92137 * C60959) *
                         C1984) *
                        C2709 +
                    ((((C64090 + C64089 + C64088) * C181 +
                       (C64200 + C64199 + C64198) * C92099) *
                          C92137 * C60959 +
                      ((C31262 * C1391 + C31257 * C1403 + C31263 * C1392 +
                        C31258 * C1404 + C31264 * C1393 + C31259 * C1405) *
                           C181 +
                       (C31262 * C1473 + C31257 * C1481 + C31263 * C1474 +
                        C31258 * C1482 + C31264 * C1475 + C31259 * C1483) *
                           C92099) *
                          C92137 * C92212) *
                         C1984 -
                     (((C62509 + C62510 + C62511) * C92099 +
                       (C62417 + C62418 + C62419) * C181) *
                          C92137 * C92212 +
                      ((C62508 + C62507 + C62506) * C92099 +
                       (C62410 + C62409 + C62408) * C181) *
                          C92137 * C60959) *
                         C1983) *
                        C2710)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C36216 * C107 + C92062 * C113) * C181 +
                       (C36216 * C182 + C92062 * C188) * C92099) *
                          C92137 * C70783 +
                      (C41203 + C41224) * C92137 * C70784 + C71759 * C70785 +
                      C71764 * C70786) *
                         C1983 -
                     ((C72888 + C72886) * C92137 * C70786 +
                      (C43000 + C42992) * C92137 * C70785 +
                      (C43001 + C42997) * C92137 * C70784 +
                      ((C36216 * C183 + C92062 * C189) * C92099 +
                       (C36216 * C108 + C92062 * C114) * C181) *
                          C92137 * C70783) *
                         C1984) *
                        C2709 +
                    (((C42997 + C43001) * C92137 * C70783 +
                      (C42992 + C43000) * C92137 * C70784 +
                      (C72886 + C72888) * C92137 * C70785 +
                      ((C36216 * C10963 + C92062 * C10969) * C181 +
                       (C36216 * C11095 + C92062 * C11099) * C92099) *
                          C92137 * C70786) *
                         C1984 -
                     ((C71766 + C71763) * C92137 * C70786 +
                      (C41228 + C41218) * C92137 * C70785 +
                      (C41225 + C41208) * C92137 * C70784 +
                      (C41224 + C41203) * C92137 * C70783) *
                         C1983) *
                        C2710)) /
                      (p * q * std::sqrt(p + q));
    d2eexz[63] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C36216 * C107 + C92062 * C113) * C2849 +
             (C36216 * C245 + C92062 * C251) * C2709 - C41107 * C2850 -
             C41316 * C2710) *
                C4099 +
            (C39129 + C39130 - C39131 - C39147) * C4100 +
            (C39134 + C39135 - C39136 - C39148) * C4101) *
               C60959 +
           ((C41107 * C2849 + C41316 * C2709 - C41109 * C2850 -
             C41317 * C2710) *
                C4099 +
            (C44039 + C44040 - C44041 - C44042) * C4100 +
            (C60234 + C60235 - C60236 - C60237) * C4101) *
               C92212) *
              C92099 * C1983 +
          (((C42882 * C2850 -
             ((C36216 * C246 + C92062 * C252) * C2709 +
              (C36216 * C108 + C92062 * C114) * C2849) +
             C43104 * C2710) *
                C4099 +
            (C41964 * C2850 - (C37890 * C2709 + C37728 * C2849) +
             C42180 * C2710) *
                C4100 +
            (C58255 * C2850 - (C37891 * C2709 + C37730 * C2849) +
             C58461 * C2710) *
                C4101) *
               C60959 +
           ((C42884 * C2850 - (C43104 * C2709 + C42882 * C2849) +
             C43105 * C2710) *
                C4099 +
            (C41966 * C2850 - (C42180 * C2709 + C41964 * C2849) +
             C42181 * C2710) *
                C4100 +
            ((C36216 * C5776 + C92062 * C5786) * C2850 -
             (C58461 * C2709 + C58255 * C2849) +
             (C36216 * C5960 + C92062 * C5966) * C2710) *
                C4101) *
               C92212) *
              C92099 * C1984)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31262 * C107 + C31257 * C113 + C31263 * C108 + C31258 * C114 +
             C31264 * C109 + C31259 * C115) *
                C2849 +
            (C31262 * C245 + C31257 * C251 + C31263 * C246 + C31258 * C252 +
             C31264 * C247 + C31259 * C253) *
                C2709 -
            (C62410 + C62409 + C62408) * C2850 -
            (C62598 + C62599 + C62600) * C2710) *
               C92137 * C60959 +
           ((C62408 + C62409 + C62410) * C2849 +
            (C62600 + C62599 + C62598) * C2709 -
            (C62417 + C62418 + C62419) * C2850 -
            (C62603 + C62602 + C62601) * C2710) *
               C92137 * C92212) *
              C92099 * C1983 +
          (((C64090 + C64089 + C64088) * C2850 -
            ((C31264 * C248 + C31259 * C254 + C31263 * C247 + C31258 * C253 +
              C31262 * C246 + C31257 * C252) *
                 C2709 +
             (C31264 * C110 + C31259 * C116 + C31263 * C109 + C31258 * C115 +
              C31262 * C108 + C31257 * C114) *
                 C2849) +
            (C64305 + C64306 + C64307) * C2710) *
               C92137 * C60959 +
           ((C31262 * C1391 + C31257 * C1403 + C31263 * C1392 + C31258 * C1404 +
             C31264 * C1393 + C31259 * C1405) *
                C2850 -
            ((C64307 + C64306 + C64305) * C2709 +
             (C64088 + C64089 + C64090) * C2849) +
            (C31262 * C1542 + C31257 * C1550 + C31263 * C1543 + C31258 * C1551 +
             C31264 * C1544 + C31259 * C1552) *
                C2710) *
               C92137 * C92212) *
              C92099 * C1984)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C36216 * C107 + C92062 * C113) * C2849 +
            (C36216 * C245 + C92062 * C251) * C2709 - C41107 * C2850 -
            C41316 * C2710) *
               C92137 * C70783 +
           (C41107 * C2849 + C41316 * C2709 - C41109 * C2850 - C41317 * C2710) *
               C92137 * C70784 +
           (C41109 * C2849 + C41317 * C2709 - C41115 * C2850 - C41318 * C2710) *
               C92137 * C70785 +
           (C41115 * C2849 + C41318 * C2709 - C71704 * C2850 - C71821 * C2710) *
               C92137 * C70786) *
              C92099 * C1983 +
          ((C42882 * C2850 -
            ((C36216 * C246 + C92062 * C252) * C2709 +
             (C36216 * C108 + C92062 * C114) * C2849) +
            C43104 * C2710) *
               C92137 * C70783 +
           (C42884 * C2850 - (C43104 * C2709 + C42882 * C2849) +
            C43105 * C2710) *
               C92137 * C70784 +
           (C72814 * C2850 - (C43105 * C2709 + C42884 * C2849) +
            C72957 * C2710) *
               C92137 * C70785 +
           ((C36216 * C10963 + C92062 * C10969) * C2850 -
            (C72957 * C2709 + C72814 * C2849) +
            (C36216 * C11200 + C92062 * C11204) * C2710) *
               C92137 * C70786) *
              C92099 * C1984)) /
            (p * q * std::sqrt(p + q));
    d2eeyx[63] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4326 * C107 + C4099 * C308 + C4327 * C805 + C4100 * C1022 +
             C4328 * C806 + C4101 * C1023) *
                C1987 +
            (C4326 * C117 + C4099 * C314 + C4327 * C813 + C4100 * C1030 +
             C4328 * C822 + C4101 * C1031) *
                C1983 -
            (C4354 + C4355 + C4356) * C1988 - (C4357 + C4358 + C4359) * C1984) *
               C60959 +
           ((C67562 + C67563 + C67564) * C1987 +
            (C67565 + C67566 + C67567) * C1983 -
            (C7885 + C7884 + C7883) * C1988 - (C7888 + C7887 + C7886) * C1984) *
               C92212) *
              C92062 * C2709 +
          (((C7883 + C7884 + C7885) * C1988 -
            ((C67567 + C67566 + C67565) * C1983 +
             (C67564 + C67563 + C67562) * C1987) +
            (C7886 + C7887 + C7888) * C1984) *
               C60959 +
           ((C4326 * C1391 + C4099 * C1608 + C4327 * C5774 + C4100 * C6045 +
             C4328 * C5776 + C4101 * C6046) *
                C1988 -
            ((C67568 + C67569 + C67570) * C1983 +
             (C67571 + C67572 + C67573) * C1987) +
            (C4326 * C1407 + C4099 * C1616 + C4327 * C5784 + C4100 * C6051 +
             C4328 * C5788 + C4101 * C6052) *
                C1984) *
               C92212) *
              C92062 * C2710) *
         C92099) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92137 * C308) * C1987 +
             (C307 * C117 + C92137 * C314) * C1983 - C337 * C1988 -
             C338 * C1984) *
                C60959 +
            (C13193 + C13194 - C13195 - C13196) * C92212) *
               C31257 +
           ((C337 * C1987 + C338 * C1983 - C339 * C1988 - C340 * C1984) *
                C60959 +
            (C13201 + C13202 - C13203 - C13204) * C92212) *
               C31258 +
           ((C339 * C1987 + C340 * C1983 - C341 * C1988 - C342 * C1984) *
                C60959 +
            (C23291 + C23292 - C23293 - C23294) * C92212) *
               C31259) *
              C2709 +
          (((C13195 - (C13194 + C13193) + C13196) * C60959 +
            (C13199 - (C13198 + C13197) + C13200) * C92212) *
               C31257 +
           ((C13203 - (C13202 + C13201) + C13204) * C60959 +
            (C13207 - (C13206 + C13205) + C13208) * C92212) *
               C31258 +
           ((C23293 - (C23292 + C23291) + C23294) * C60959 +
            ((C307 * C1393 + C92137 * C1610) * C1988 -
             (C9751 * C1983 + C9750 * C1987) +
             (C307 * C1409 + C92137 * C1618) * C1984) *
                C92212) *
               C31259) *
              C2710) *
         C92099) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C307 * C107 + C92137 * C308) * C1987 +
            (C307 * C117 + C92137 * C314) * C1983 - C337 * C1988 -
            C338 * C1984) *
               C70783 +
           (C13193 + C13194 - C13195 - C13196) * C70784 +
           (C13197 + C13198 - C13199 - C13200) * C70785 +
           (C73024 + C73025 - C73026 - C73027) * C70786) *
              C92062 * C2709 +
          ((C13195 - (C13194 + C13193) + C13196) * C70783 +
           (C13199 - (C13198 + C13197) + C13200) * C70784 +
           (C73026 - (C73025 + C73024) + C73027) * C70785 +
           ((C307 * C10963 + C92137 * C11301) * C1988 -
            (C71879 * C1983 + C71880 * C1987) +
            (C307 * C10971 + C92137 * C11305) * C1984) *
               C70786) *
              C92062 * C2710) *
         C92099) /
            (p * q * std::sqrt(p + q));
    d2eeyy[63] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4326 * C107 + C4099 * C308 + C4327 * C805 + C4100 * C1022 +
              C4328 * C806 + C4101 * C1023) *
                 C181 +
             (C4326 * C182 + C4099 * C394 + C4327 * C890 + C4100 * C1085 +
              C4328 * C891 + C4101 * C1086) *
                 C92099) *
                C60959 +
            ((C67562 + C67563 + C67564) * C181 +
             (C67660 + C67661 + C67662) * C92099) *
                C92212) *
               C92062 * C1983 -
           (((C7996 + C7995 + C7994) * C92099 +
             (C7885 + C7884 + C7883) * C181) *
                C92212 +
            ((C4454 + C4453 + C4452) * C92099 +
             (C4354 + C4355 + C4356) * C181) *
                C60959) *
               C92062 * C1984) *
              C2709 +
          ((((C7883 + C7884 + C7885) * C181 +
             (C7994 + C7995 + C7996) * C92099) *
                C60959 +
            ((C4326 * C1391 + C4099 * C1608 + C4327 * C5774 + C4100 * C6045 +
              C4328 * C5776 + C4101 * C6046) *
                 C181 +
             (C4326 * C1473 + C4099 * C1674 + C4327 * C5872 + C4100 * C6131 +
              C4328 * C5874 + C4101 * C6132) *
                 C92099) *
                C92212) *
               C92062 * C1984 -
           (((C67663 + C67664 + C67665) * C92099 +
             (C67571 + C67572 + C67573) * C181) *
                C92212 +
            ((C67662 + C67661 + C67660) * C92099 +
             (C67564 + C67563 + C67562) * C181) *
                C60959) *
               C92062 * C1983) *
              C2710)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C307 * C107 + C92137 * C308) * C181 +
              (C307 * C182 + C92137 * C394) * C92099) *
                 C60959 +
             (C11423 + C11440) * C92212) *
                C31257 +
            ((C401 + C417) * C60959 + C13308 * C92212) * C31258 +
            C61260 * C31259) *
               C1983 -
           (((C3021 + C3013) * C92212 + (C419 + C407) * C60959) * C31259 +
            (C23393 * C92212 + (C418 + C404) * C60959) * C31258 +
            (C13310 * C92212 + (C417 + C401) * C60959) * C31257) *
               C1984) *
              C2709 +
          (((C13308 * C60959 + C11429 * C92212) * C31257 +
            (C20118 * C60959 + (C9831 + C9835) * C92212) * C31258 +
            ((C3013 + C3021) * C60959 +
             ((C307 * C1393 + C92137 * C1610) * C181 +
              (C307 * C1475 + C92137 * C1676) * C92099) *
                 C92212) *
                C31259) *
               C1984 -
           (((C9835 + C9831) * C92212 + C23393 * C60959) * C31259 +
            (C13309 * C92212 + C13310 * C60959) * C31258 +
            ((C11441 + C11426) * C92212 + (C11440 + C11423) * C60959) *
                C31257) *
               C1983) *
              C2710)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92137 * C308) * C181 +
             (C307 * C182 + C92137 * C394) * C92099) *
                C70783 +
            (C11423 + C11440) * C70784 + C11444 * C70785 + C71934 * C70786) *
               C92062 * C1983 -
           ((C11442 + C11432) * C70786 + C13309 * C70785 + C13310 * C70784 +
            (C417 + C401) * C70783) *
               C92062 * C1984) *
              C2709 +
          ((C13308 * C70783 + C11429 * C70784 + (C11432 + C11442) * C70785 +
            ((C307 * C10963 + C92137 * C11301) * C181 +
             (C307 * C11095 + C92137 * C11421) * C92099) *
                C70786) *
               C92062 * C1984 -
           ((C71939 + C71937) * C70786 + (C11443 + C11435) * C70785 +
            (C11441 + C11426) * C70784 + (C11440 + C11423) * C70783) *
               C92062 * C1983) *
              C2710)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[63] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4326 * C107 + C4099 * C308 + C4327 * C805 + C4100 * C1022 +
             C4328 * C806 + C4101 * C1023) *
                C2849 +
            (C4326 * C245 + C4099 * C474 + C4327 * C956 + C4100 * C1146 +
             C4328 * C957 + C4101 * C1147) *
                C2709 -
            (C67564 + C67563 + C67562) * C2850 -
            (C67752 + C67753 + C67754) * C2710) *
               C60959 +
           ((C67562 + C67563 + C67564) * C2849 +
            (C67754 + C67753 + C67752) * C2709 -
            (C67571 + C67572 + C67573) * C2850 -
            (C67757 + C67756 + C67755) * C2710) *
               C92212) *
              C92062 * C92099 * C1983 +
          (((C7883 + C7884 + C7885) * C2850 -
            ((C4546 + C4545 + C4544) * C2709 +
             (C4354 + C4355 + C4356) * C2849) +
            (C8104 + C8103 + C8102) * C2710) *
               C60959 +
           ((C4326 * C1391 + C4099 * C1608 + C4327 * C5774 + C4100 * C6045 +
             C4328 * C5776 + C4101 * C6046) *
                C2850 -
            ((C8102 + C8103 + C8104) * C2709 +
             (C7885 + C7884 + C7883) * C2849) +
            (C4326 * C1542 + C4099 * C1730 + C4327 * C5956 + C4100 * C6211 +
             C4328 * C5960 + C4101 * C6212) *
                C2710) *
               C92212) *
              C92062 * C92099 * C1984)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92137 * C308) * C2849 +
             (C307 * C245 + C92137 * C474) * C2709 - C11327 * C2850 -
             C11531 * C2710) *
                C60959 +
            (C11327 * C2849 + C11531 * C2709 - C11329 * C2850 -
             C11532 * C2710) *
                C92212) *
               C31257 +
           ((C3089 + C3090 - C3091 - C3107) * C60959 +
            (C13410 + C13411 - C13412 - C13413) * C92212) *
               C31258 +
           ((C3094 + C3095 - C3096 - C3108) * C60959 +
            (C23492 + C23493 - C23494 - C23495) * C92212) *
               C31259) *
              C92099 * C1983 +
          (((C3091 - (C3090 + C3089) + C3107) * C60959 +
            (C13412 - (C13411 + C13410) + C13413) * C92212) *
               C31257 +
           ((C3096 - (C3095 + C3094) + C3108) * C60959 +
            (C23494 - (C23493 + C23492) + C23495) * C92212) *
               C31258 +
           ((C3101 - (C3100 + C3099) + C3109) * C60959 +
            ((C307 * C1393 + C92137 * C1610) * C2850 -
             (C3106 * C2709 + C2938 * C2849) +
             (C307 * C1544 + C92137 * C1734) * C2710) *
                C92212) *
               C31259) *
              C92099 * C1984)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C307 * C107 + C92137 * C308) * C2849 +
            (C307 * C245 + C92137 * C474) * C2709 - C11327 * C2850 -
            C11531 * C2710) *
               C70783 +
           (C11327 * C2849 + C11531 * C2709 - C11329 * C2850 - C11532 * C2710) *
               C70784 +
           (C11329 * C2849 + C11532 * C2709 - C11335 * C2850 - C11533 * C2710) *
               C70785 +
           (C11335 * C2849 + C11533 * C2709 - C71880 * C2850 - C71993 * C2710) *
               C70786) *
              C92062 * C92099 * C1983 +
          ((C3091 - (C3090 + C3089) + C3107) * C70783 +
           (C13412 - (C13411 + C13410) + C13413) * C70784 +
           (C13416 - (C13415 + C13414) + C13417) * C70785 +
           ((C307 * C10963 + C92137 * C11301) * C2850 -
            (C11534 * C2709 + C11333 * C2849) +
            (C307 * C11200 + C92137 * C11521) * C2710) *
               C70786) *
              C92062 * C92099 * C1984)) /
            (p * q * std::sqrt(p + q));
    d2eezx[63] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C61411 * C107 + C60959 * C555 + C61412 * C1389 + C92212 * C1788) *
                C1987 +
            (C61411 * C117 + C60959 * C561 + C61412 * C1397 + C92212 * C1796) *
                C1983 -
            (C61438 + C61439) * C1988 - (C61440 + C61441) * C1984) *
               C92062 * C4099 +
           ((C67034 + C67035) * C1987 + (C67036 + C67037) * C1983 -
            (C63751 + C63750) * C1988 - (C63753 + C63752) * C1984) *
               C92062 * C4100 +
           (C67046 * C1987 + C67047 * C1983 - (C68674 + C68675) * C1988 -
            (C68676 + C68677) * C1984) *
               C92062 * C4101) *
              C2709 +
          (((C64716 + C64717) * C1988 -
            ((C61412 * C1406 + C92212 * C1797 + C61411 * C1397 +
              C60959 * C1796) *
                 C1983 +
             (C61412 * C1390 + C92212 * C1789 + C61411 * C1389 +
              C60959 * C1788) *
                 C1987) +
            (C64718 + C64719) * C1984) *
               C92062 * C4099 +
           ((C61411 * C3432 + C60959 * C3876 + C61412 * C5774 +
             C92212 * C6290) *
                C1988 -
            ((C61412 * C5783 + C92212 * C6295 + C61411 * C3439 +
              C60959 * C3879) *
                 C1983 +
             (C61412 * C5773 + C92212 * C6289 + C61411 * C3431 +
              C60959 * C3875) *
                 C1987) +
            (C61411 * C3440 + C60959 * C3880 + C61412 * C5784 +
             C92212 * C6296) *
                C1984) *
               C92062 * C4100 +
           ((C61411 * C5771 + C60959 * C6287 + C61412 * C5776 +
             C92212 * C6292) *
                C1988 -
            ((C61412 * C5787 + C92212 * C6297 + C61411 * C5778 +
              C60959 * C6294) *
                 C1983 +
             (C61412 * C5775 + C92212 * C6291 + C61411 * C5772 +
              C60959 * C6288) *
                 C1987) +
            (C61411 * C5777 + C60959 * C6293 + C61412 * C5788 +
             C92212 * C6298) *
                C1984) *
               C92062 * C4101) *
              C2710) *
         C92099) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C61411 * C107 + C60959 * C555 + C61412 * C1389 + C92212 * C1788) *
                C1987 +
            (C61411 * C117 + C60959 * C561 + C61412 * C1397 + C92212 * C1796) *
                C1983 -
            (C61438 + C61439) * C1988 - (C61440 + C61441) * C1984) *
               C31257 +
           ((C61439 + C61438) * C1987 + (C61441 + C61440) * C1983 -
            (C61443 + C61442) * C1988 - (C61445 + C61444) * C1984) *
               C31258 +
           (C61450 * C1987 + C61451 * C1983 - (C61447 + C61446) * C1988 -
            (C61449 + C61448) * C1984) *
               C31259) *
              C92137 * C2709 +
          (((C64716 + C64717) * C1988 -
            ((C61412 * C1406 + C92212 * C1797 + C61411 * C1397 +
              C60959 * C1796) *
                 C1983 +
             (C61412 * C1390 + C92212 * C1789 + C61411 * C1389 +
              C60959 * C1788) *
                 C1987) +
            (C64718 + C64719) * C1984) *
               C31257 +
           ((C64720 + C64721) * C1988 -
            ((C64719 + C64718) * C1983 + (C64717 + C64716) * C1987) +
            (C64722 + C64723) * C1984) *
               C31258 +
           ((C61411 * C1386 + C60959 * C1785 + C61412 * C1393 +
             C92212 * C1792) *
                C1988 -
            ((C64723 + C64722) * C1983 + (C64721 + C64720) * C1987) +
            (C61411 * C1394 + C60959 * C1793 + C61412 * C1409 +
             C92212 * C1800) *
                C1984) *
               C31259) *
              C92137 * C2710) *
         C92099) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C71087 * C107 + C70783 * C555 + C71088 * C1389 + C70784 * C1788 +
            C71089 * C1390 + C70785 * C1789 + C71090 * C10961 +
            C70786 * C11609) *
               C1987 +
           (C71087 * C117 + C70783 * C561 + C71088 * C1397 + C70784 * C1796 +
            C71089 * C1406 + C70785 * C1797 + C71090 * C10965 +
            C70786 * C11613) *
               C1983 -
           (C71090 * C10960 + C70786 * C11608 + C71089 * C1391 +
            C70785 * C1790 + C71088 * C1388 + C70784 * C1787 + C71087 * C108 +
            C70783 * C556) *
               C1988 -
           (C71090 * C10964 + C70786 * C11612 + C71089 * C1407 +
            C70785 * C1798 + C71088 * C1396 + C70784 * C1795 + C71087 * C118 +
            C70783 * C562) *
               C1984) *
              C92062 * C92137 * C2709 +
          ((C71087 * C1388 + C70783 * C1787 + C71088 * C1391 + C70784 * C1790 +
            C71089 * C10960 + C70785 * C11608 + C71090 * C10963 +
            C70786 * C11611) *
               C1988 -
           ((C71090 * C10970 + C70786 * C11614 + C71089 * C10965 +
             C70785 * C11613 + C71088 * C1406 + C70784 * C1797 +
             C71087 * C1397 + C70783 * C1796) *
                C1983 +
            (C71090 * C10962 + C70786 * C11610 + C71089 * C10961 +
             C70785 * C11609 + C71088 * C1390 + C70784 * C1789 +
             C71087 * C1389 + C70783 * C1788) *
                C1987) +
           (C71087 * C1396 + C70783 * C1795 + C71088 * C1407 + C70784 * C1798 +
            C71089 * C10964 + C70785 * C11612 + C71090 * C10971 +
            C70786 * C11615) *
               C1984) *
              C92062 * C92137 * C2710) *
         C92099) /
            (p * q * std::sqrt(p + q));
    d2eezy[63] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C61411 * C107 + C60959 * C555 + C61412 * C1389 + C92212 * C1788) *
                 C181 +
             (C61411 * C182 + C60959 * C641 + C61412 * C1471 + C92212 * C1854) *
                 C92099) *
                C92062 * C4099 +
            ((C67034 + C67035) * C181 + (C67139 + C67138) * C92099) * C92062 *
                C4100 +
            (C67046 * C181 + C67144 * C92099) * C92062 * C4101) *
               C1983 -
           (((C68781 + C68780) * C92099 + (C68674 + C68675) * C181) * C92062 *
                C4101 +
            ((C63864 + C63865) * C92099 + (C63751 + C63750) * C181) * C92062 *
                C4100 +
            ((C61540 + C61539) * C92099 + (C61438 + C61439) * C181) * C92062 *
                C4099) *
               C1984) *
              C2709 +
          ((((C64716 + C64717) * C181 + (C64830 + C64831) * C92099) * C92062 *
                C4099 +
            ((C61411 * C3432 + C60959 * C3876 + C61412 * C5774 +
              C92212 * C6290) *
                 C181 +
             (C61411 * C3514 + C60959 * C3950 + C61412 * C5872 +
              C92212 * C6376) *
                 C92099) *
                C92062 * C4100 +
            ((C61411 * C5771 + C60959 * C6287 + C61412 * C5776 +
              C92212 * C6292) *
                 C181 +
             (C61411 * C5869 + C60959 * C6373 + C61412 * C5874 +
              C92212 * C6378) *
                 C92099) *
                C92062 * C4101) *
               C1984 -
           (((C61412 * C5873 + C92212 * C6377 + C61411 * C5870 +
              C60959 * C6374) *
                 C92099 +
             (C61412 * C5775 + C92212 * C6291 + C61411 * C5772 +
              C60959 * C6288) *
                 C181) *
                C92062 * C4101 +
            ((C61412 * C5871 + C92212 * C6375 + C61411 * C3513 +
              C60959 * C3949) *
                 C92099 +
             (C61412 * C5773 + C92212 * C6289 + C61411 * C3431 +
              C60959 * C3875) *
                 C181) *
                C92062 * C4100 +
            ((C61412 * C1472 + C92212 * C1855 + C61411 * C1471 +
              C60959 * C1854) *
                 C92099 +
             (C61412 * C1390 + C92212 * C1789 + C61411 * C1389 +
              C60959 * C1788) *
                 C181) *
                C92062 * C4099) *
               C1983) *
              C2710)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C61411 * C107 + C60959 * C555 + C61412 * C1389 + C92212 * C1788) *
                 C181 +
             (C61411 * C182 + C60959 * C641 + C61412 * C1471 + C92212 * C1854) *
                 C92099) *
                C31257 +
            ((C61439 + C61438) * C181 + (C61539 + C61540) * C92099) * C31258 +
            C61547 * C31259) *
               C92137 * C1983 -
           (((C61543 + C61544) * C92099 + (C61447 + C61446) * C181) * C31259 +
            ((C61542 + C61541) * C92099 + (C61443 + C61442) * C181) * C31258 +
            ((C61540 + C61539) * C92099 + (C61438 + C61439) * C181) * C31257) *
               C92137 * C1984) *
              C2709 +
          ((((C64716 + C64717) * C181 + (C64830 + C64831) * C92099) * C31257 +
            ((C64720 + C64721) * C181 + (C64832 + C64833) * C92099) * C31258 +
            ((C61411 * C1386 + C60959 * C1785 + C61412 * C1393 +
              C92212 * C1792) *
                 C181 +
             (C61411 * C1468 + C60959 * C1851 + C61412 * C1475 +
              C92212 * C1858) *
                 C92099) *
                C31259) *
               C92137 * C1984 -
           (((C64833 + C64832) * C92099 + (C64721 + C64720) * C181) * C31259 +
            ((C64831 + C64830) * C92099 + (C64717 + C64716) * C181) * C31258 +
            ((C61412 * C1472 + C92212 * C1855 + C61411 * C1471 +
              C60959 * C1854) *
                 C92099 +
             (C61412 * C1390 + C92212 * C1789 + C61411 * C1389 +
              C60959 * C1788) *
                 C181) *
                C31257) *
               C92137 * C1983) *
              C2710)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C71087 * C107 + C70783 * C555 + C71088 * C1389 + C70784 * C1788 +
             C71089 * C1390 + C70785 * C1789 + C71090 * C10961 +
             C70786 * C11609) *
                C181 +
            (C71087 * C182 + C70783 * C641 + C71088 * C1471 + C70784 * C1854 +
             C71089 * C1472 + C70785 * C1855 + C71090 * C11093 +
             C70786 * C11691) *
                C92099) *
               C92062 * C92137 * C1983 -
           ((C71090 * C11092 + C70786 * C11690 + C71089 * C1473 +
             C70785 * C1856 + C71088 * C1470 + C70784 * C1853 + C71087 * C183 +
             C70783 * C642) *
                C92099 +
            (C71090 * C10960 + C70786 * C11608 + C71089 * C1391 +
             C70785 * C1790 + C71088 * C1388 + C70784 * C1787 + C71087 * C108 +
             C70783 * C556) *
                C181) *
               C92062 * C92137 * C1984) *
              C2709 +
          (((C71087 * C1388 + C70783 * C1787 + C71088 * C1391 + C70784 * C1790 +
             C71089 * C10960 + C70785 * C11608 + C71090 * C10963 +
             C70786 * C11611) *
                C181 +
            (C71087 * C1470 + C70783 * C1853 + C71088 * C1473 + C70784 * C1856 +
             C71089 * C11092 + C70785 * C11690 + C71090 * C11095 +
             C70786 * C11693) *
                C92099) *
               C92062 * C92137 * C1984 -
           ((C71090 * C11094 + C70786 * C11692 + C71089 * C11093 +
             C70785 * C11691 + C71088 * C1472 + C70784 * C1855 +
             C71087 * C1471 + C70783 * C1854) *
                C92099 +
            (C71090 * C10962 + C70786 * C11610 + C71089 * C10961 +
             C70785 * C11609 + C71088 * C1390 + C70784 * C1789 +
             C71087 * C1389 + C70783 * C1788) *
                C181) *
               C92062 * C92137 * C1983) *
              C2710)) /
            (p * q * std::sqrt(p + q));
    d2eezz[63] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C61411 * C107 + C60959 * C555 + C61412 * C1389 + C92212 * C1788) *
                C2849 +
            (C61411 * C245 + C60959 * C719 + C61412 * C1540 + C92212 * C1909) *
                C2709 -
            (C61412 * C1390 + C92212 * C1789 + C61411 * C1389 +
             C60959 * C1788) *
                C2850 -
            (C61412 * C1541 + C92212 * C1910 + C61411 * C1540 +
             C60959 * C1909) *
                C2710) *
               C92062 * C4099 +
           ((C67034 + C67035) * C2849 + (C67232 + C67233) * C2709 -
            (C61412 * C5773 + C92212 * C6289 + C61411 * C3431 +
             C60959 * C3875) *
                C2850 -
            (C61412 * C5955 + C92212 * C6453 + C61411 * C3587 +
             C60959 * C4019) *
                C2710) *
               C92062 * C4100 +
           (C67046 * C2849 + C67238 * C2709 -
            (C61412 * C5775 + C92212 * C6291 + C61411 * C5772 +
             C60959 * C6288) *
                C2850 -
            (C61412 * C5959 + C92212 * C6456 + C61411 * C5958 +
             C60959 * C6455) *
                C2710) *
               C92062 * C4101) *
              C92099 * C1983 +
          (((C64716 + C64717) * C2850 -
            ((C61636 + C61635) * C2709 + (C61438 + C61439) * C2849) +
            (C64941 + C64940) * C2710) *
               C92062 * C4099 +
           ((C61411 * C3432 + C60959 * C3876 + C61412 * C5774 +
             C92212 * C6290) *
                C2850 -
            ((C63976 + C63977) * C2709 + (C63751 + C63750) * C2849) +
            (C61411 * C3588 + C60959 * C4020 + C61412 * C5956 +
             C92212 * C6454) *
                C2710) *
               C92062 * C4100 +
           ((C61411 * C5771 + C60959 * C6287 + C61412 * C5776 +
             C92212 * C6292) *
                C2850 -
            ((C68885 + C68884) * C2709 + (C68674 + C68675) * C2849) +
            (C61411 * C5957 + C60959 * C6457 + C61412 * C5960 +
             C92212 * C6458) *
                C2710) *
               C92062 * C4101) *
              C92099 * C1984)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C61411 * C107 + C60959 * C555 + C61412 * C1389 + C92212 * C1788) *
                C2849 +
            (C61411 * C245 + C60959 * C719 + C61412 * C1540 + C92212 * C1909) *
                C2709 -
            (C61412 * C1390 + C92212 * C1789 + C61411 * C1389 +
             C60959 * C1788) *
                C2850 -
            (C61412 * C1541 + C92212 * C1910 + C61411 * C1540 +
             C60959 * C1909) *
                C2710) *
               C31257 +
           ((C61439 + C61438) * C2849 + (C61635 + C61636) * C2709 -
            (C64717 + C64716) * C2850 - (C64940 + C64941) * C2710) *
               C31258 +
           (C61450 * C2849 + C61641 * C2709 - (C64721 + C64720) * C2850 -
            (C64942 + C64943) * C2710) *
               C31259) *
              C92137 * C92099 * C1983 +
          (((C64716 + C64717) * C2850 -
            ((C61636 + C61635) * C2709 + (C61438 + C61439) * C2849) +
            (C64941 + C64940) * C2710) *
               C31257 +
           ((C64720 + C64721) * C2850 -
            ((C61638 + C61637) * C2709 + (C61443 + C61442) * C2849) +
            (C64943 + C64942) * C2710) *
               C31258 +
           ((C61411 * C1386 + C60959 * C1785 + C61412 * C1393 +
             C92212 * C1792) *
                C2850 -
            ((C61639 + C61640) * C2709 + (C61447 + C61446) * C2849) +
            (C61411 * C1537 + C60959 * C1915 + C61412 * C1544 +
             C92212 * C1916) *
                C2710) *
               C31259) *
              C92137 * C92099 * C1984)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C71087 * C107 + C70783 * C555 + C71088 * C1389 + C70784 * C1788 +
            C71089 * C1390 + C70785 * C1789 + C71090 * C10961 +
            C70786 * C11609) *
               C2849 +
           (C71087 * C245 + C70783 * C719 + C71088 * C1540 + C70784 * C1909 +
            C71089 * C1541 + C70785 * C1910 + C71090 * C11197 +
            C70786 * C11768) *
               C2709 -
           (C71090 * C10962 + C70786 * C11610 + C71089 * C10961 +
            C70785 * C11609 + C71088 * C1390 + C70784 * C1789 + C71087 * C1389 +
            C70783 * C1788) *
               C2850 -
           (C71090 * C11199 + C70786 * C11769 + C71089 * C11197 +
            C70785 * C11768 + C71088 * C1541 + C70784 * C1910 + C71087 * C1540 +
            C70783 * C1909) *
               C2710) *
              C92062 * C92137 * C92099 * C1983 +
          ((C71087 * C1388 + C70783 * C1787 + C71088 * C1391 + C70784 * C1790 +
            C71089 * C10960 + C70785 * C11608 + C71090 * C10963 +
            C70786 * C11611) *
               C2850 -
           ((C71090 * C11198 + C70786 * C11770 + C71089 * C1542 +
             C70785 * C1912 + C71088 * C1539 + C70784 * C1911 + C71087 * C246 +
             C70783 * C720) *
                C2709 +
            (C71090 * C10960 + C70786 * C11608 + C71089 * C1391 +
             C70785 * C1790 + C71088 * C1388 + C70784 * C1787 + C71087 * C108 +
             C70783 * C556) *
                C2849) +
           (C71087 * C1539 + C70783 * C1911 + C71088 * C1542 + C70784 * C1912 +
            C71089 * C11198 + C70785 * C11770 + C71090 * C11200 +
            C70786 * C11771) *
               C2710) *
              C92062 * C92137 * C92099 * C1984)) /
            (p * q * std::sqrt(p + q));
    d2eexx[64] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31262 * C107 + C31257 * C113 + C31263 * C108 + C31258 * C114 +
             C31264 * C109 + C31259 * C115) *
                C801 +
            (C31262 * C117 + C31257 * C125 + C31263 * C118 + C31258 * C126 +
             C31264 * C119 + C31259 * C127) *
                C92078) *
               C92137 * C60959 +
           ((C31262 * C1389 + C31257 * C1401 + C31263 * C1388 + C31258 * C1400 +
             C31264 * C1387 + C31259 * C1399) *
                C801 +
            (C31262 * C1397 + C31257 * C1413 + C31263 * C1396 + C31258 * C1412 +
             C31264 * C1395 + C31259 * C1411) *
                C92078) *
               C92137 * C92212) *
              C92110 * C798 -
          (((C35354 + C35355 + C35356) * C92078 +
            (C35357 + C35358 + C35359) * C801) *
               C92137 * C92212 +
           ((C32047 + C32046 + C32045) * C92078 +
            (C32044 + C32043 + C32042) * C801) *
               C92137 * C60959) *
              C92110 * C799 +
          (((C32053 + C32052 + C32051) * C801 +
            (C32050 + C32049 + C32048) * C92078) *
               C92137 * C60959 +
           ((C31262 * C5772 + C31257 * C5780 + C31263 * C5771 + C31258 * C5779 +
             C31264 * C7566 + C31259 * C7567) *
                C801 +
            (C31262 * C5778 + C31257 * C5790 + C31263 * C5777 + C31258 * C5789 +
             C31264 * C7568 + C31259 * C7569) *
                C92078) *
               C92137 * C92212) *
              C92110 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C31262 * C107 + C31257 * C113 + C31263 * C108 + C31258 * C114 +
            C31264 * C109 + C31259 * C115) *
               C104 +
           (C31262 * C117 + C31257 * C125 + C31263 * C118 + C31258 * C126 +
            C31264 * C119 + C31259 * C127) *
               C93 -
           (C31264 * C110 + C31259 * C116 + C31263 * C109 + C31258 * C115 +
            C31262 * C108 + C31257 * C114) *
               C105 -
           (C31264 * C120 + C31259 * C128 + C31263 * C119 + C31258 * C127 +
            C31262 * C118 + C31257 * C126) *
               C94 +
           (C31262 * C109 + C31257 * C115 + C31263 * C110 + C31258 * C116 +
            C31264 * C111 + C31259 * C121) *
               C106 +
           (C31262 * C119 + C31257 * C127 + C31263 * C120 + C31258 * C128 +
            C31264 * C122 + C31259 * C129) *
               C95) *
              C92137 * C60959 +
          ((C31262 * C1389 + C31257 * C1401 + C31263 * C1388 + C31258 * C1400 +
            C31264 * C1387 + C31259 * C1399) *
               C104 +
           (C31262 * C1397 + C31257 * C1413 + C31263 * C1396 + C31258 * C1412 +
            C31264 * C1395 + C31259 * C1411) *
               C93 -
           (C31264 * C1386 + C31259 * C1398 + C31263 * C1387 + C31258 * C1399 +
            C31262 * C1388 + C31257 * C1400) *
               C105 -
           (C31264 * C1394 + C31259 * C1410 + C31263 * C1395 + C31258 * C1411 +
            C31262 * C1396 + C31257 * C1412) *
               C94 +
           (C31262 * C1387 + C31257 * C1399 + C31263 * C1386 + C31258 * C1398 +
            C31264 * C2711 + C31259 * C2712) *
               C106 +
           (C31262 * C1395 + C31257 * C1411 + C31263 * C1394 + C31258 * C1410 +
            C31264 * C2713 + C31259 * C2714) *
               C95) *
              C92137 * C92212) *
         C92110 * C92099) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C36216 * C107 + C92062 * C113) * C104 +
            (C36216 * C117 + C92062 * C125) * C93 -
            (C36216 * C108 + C92062 * C114) * C105 -
            (C36216 * C118 + C92062 * C126) * C94 +
            (C36216 * C109 + C92062 * C115) * C106 +
            (C36216 * C119 + C92062 * C127) * C95) *
               C4099 +
           (C36692 * C104 + C36693 * C93 - C37728 * C105 - C37729 * C94 +
            (C36216 * C803 + C92062 * C815) * C106 +
            (C36216 * C811 + C92062 * C827) * C95) *
               C4100 +
           (C36694 * C104 + C36695 * C93 - C37730 * C105 - C37731 * C94 +
            (C36216 * C808 + C92062 * C820) * C106 +
            (C36216 * C824 + C92062 * C832) * C95) *
               C4101) *
              C60959 +
          ((C41107 * C104 + C41108 * C93 - C42882 * C105 - C42883 * C94 +
            (C36216 * C1387 + C92062 * C1399) * C106 +
            (C36216 * C1395 + C92062 * C1411) * C95) *
               C4099 +
           (C38977 * C104 + C38976 * C93 - C41964 * C105 - C41965 * C94 +
            (C36216 * C3433 + C92062 * C3437) * C106 +
            (C36216 * C3441 + C92062 * C3445) * C95) *
               C4100 +
           (C38975 * C104 + C38974 * C93 - C58255 * C105 - C58256 * C94 +
            (C36216 * C7566 + C92062 * C7567) * C106 +
            (C36216 * C7568 + C92062 * C7569) * C95) *
               C4101) *
              C92212) *
         C92110 * C92099) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C36216 * C107 + C92062 * C113) * C801 +
             (C36216 * C117 + C92062 * C125) * C92078) *
                C4099 +
            (C36700 + C36701) * C4100 + C36708 * C4101) *
               C60959 +
           ((C41116 + C41117) * C4099 + C43820 * C4100 + C56777 * C4101) *
               C92212) *
              C92110 * C798 -
          (((C38978 + C38979) * C4101 + C60033 * C4100 + C43822 * C4099) *
               C92212 +
           ((C36705 + C36704) * C4101 + (C36703 + C36702) * C4100 +
            (C36701 + C36700) * C4099) *
               C60959) *
              C92110 * C799 +
          ((C36708 * C4099 + C36709 * C4100 + (C36707 + C36706) * C4101) *
               C60959 +
           (C56777 * C4099 + (C38979 + C38978) * C4100 +
            ((C36216 * C38955 + C92062 * C38956) * C801 +
             (C36216 * C38957 + C92062 * C38958) * C92078) *
                C4101) *
               C92212) *
              C92110 * C800)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C36216 * C107 + C92062 * C113) * C104 +
           (C36216 * C117 + C92062 * C125) * C93 -
           (C36216 * C108 + C92062 * C114) * C105 -
           (C36216 * C118 + C92062 * C126) * C94 +
           (C36216 * C109 + C92062 * C115) * C106 +
           (C36216 * C119 + C92062 * C127) * C95) *
              C92137 * C70783 +
          (C41107 * C104 + C41108 * C93 - C42882 * C105 - C42883 * C94 +
           (C36216 * C1387 + C92062 * C1399) * C106 +
           (C36216 * C1395 + C92062 * C1411) * C95) *
              C92137 * C70784 +
          (C41109 * C104 + C41110 * C93 - C42884 * C105 - C42885 * C94 +
           (C36216 * C1392 + C92062 * C1404) * C106 +
           (C36216 * C1408 + C92062 * C1416) * C95) *
              C92137 * C70785 +
          (C41115 * C104 + C41114 * C93 -
           (C36216 * C10960 + C92062 * C10966) * C105 -
           (C36216 * C10964 + C92062 * C10972) * C94 +
           (C36216 * C12840 + C92062 * C12841) * C106 +
           (C36216 * C12842 + C92062 * C12843) * C95) *
              C92137 * C70786) *
         C92110 * C92099) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C36216 * C107 + C92062 * C113) * C801 +
            (C36216 * C117 + C92062 * C125) * C92078) *
               C92137 * C70783 +
           (C41116 + C41117) * C92137 * C70784 + C41124 * C92137 * C70785 +
           (C41123 + C41122) * C92137 * C70786) *
              C92110 * C798 -
          ((C41120 + C41121) * C92137 * C70786 + C43821 * C92137 * C70785 +
           C43822 * C92137 * C70784 + (C36701 + C36700) * C92137 * C70783) *
              C92110 * C799 +
          (C36708 * C92137 * C70783 + C56777 * C92137 * C70784 +
           (C40327 + C40326) * C92137 * C70785 +
           ((C36216 * C43815 + C92062 * C43816) * C801 +
            (C36216 * C43817 + C92062 * C43818) * C92078) *
               C92137 * C70786) *
              C92110 * C800)) /
            (p * q * std::sqrt(p + q));
    d2eexy[64] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C31262 * C107 + C31257 * C113 + C31263 * C108 + C31258 * C114 +
            C31264 * C109 + C31259 * C115) *
               C884 +
           (C31262 * C182 + C31257 * C188 + C31263 * C183 + C31258 * C189 +
            C31264 * C184 + C31259 * C190) *
               C798 -
           (C32044 + C32043 + C32042) * C885 -
           (C32140 + C32141 + C32142) * C799 +
           (C32053 + C32052 + C32051) * C886 +
           (C32143 + C32144 + C32145) * C800) *
              C92137 * C60959 +
          ((C31262 * C1389 + C31257 * C1401 + C31263 * C1388 + C31258 * C1400 +
            C31264 * C1387 + C31259 * C1399) *
               C884 +
           (C31262 * C1471 + C31257 * C1479 + C31263 * C1470 + C31258 * C1478 +
            C31264 * C1469 + C31259 * C1477) *
               C798 -
           (C35357 + C35358 + C35359) * C885 -
           (C35466 + C35465 + C35464) * C799 +
           (C31262 * C5772 + C31257 * C5780 + C31263 * C5771 + C31258 * C5779 +
            C31264 * C7566 + C31259 * C7567) *
               C886 +
           (C31262 * C5870 + C31257 * C5876 + C31263 * C5869 + C31258 * C5875 +
            C31264 * C7668 + C31259 * C7669) *
               C800) *
              C92137 * C92212) *
         C92078 * C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31262 * C107 + C31257 * C113 + C31263 * C108 + C31258 * C114 +
             C31264 * C109 + C31259 * C115) *
                C181 +
            (C31262 * C182 + C31257 * C188 + C31263 * C183 + C31258 * C189 +
             C31264 * C184 + C31259 * C190) *
                C92099) *
               C92137 * C60959 +
           ((C31262 * C1389 + C31257 * C1401 + C31263 * C1388 + C31258 * C1400 +
             C31264 * C1387 + C31259 * C1399) *
                C181 +
            (C31262 * C1471 + C31257 * C1479 + C31263 * C1470 + C31258 * C1478 +
             C31264 * C1469 + C31259 * C1477) *
                C92099) *
               C92137 * C92212) *
              C93 -
          (((C31264 * C1468 + C31259 * C1476 + C31263 * C1469 + C31258 * C1477 +
             C31262 * C1470 + C31257 * C1478) *
                C92099 +
            (C31264 * C1386 + C31259 * C1398 + C31263 * C1387 + C31258 * C1399 +
             C31262 * C1388 + C31257 * C1400) *
                C181) *
               C92137 * C92212 +
           ((C31264 * C185 + C31259 * C191 + C31263 * C184 + C31258 * C190 +
             C31262 * C183 + C31257 * C189) *
                C92099 +
            (C31264 * C110 + C31259 * C116 + C31263 * C109 + C31258 * C115 +
             C31262 * C108 + C31257 * C114) *
                C181) *
               C92137 * C60959) *
              C94 +
          (((C31262 * C109 + C31257 * C115 + C31263 * C110 + C31258 * C116 +
             C31264 * C111 + C31259 * C121) *
                C181 +
            (C31262 * C184 + C31257 * C190 + C31263 * C185 + C31258 * C191 +
             C31264 * C186 + C31259 * C192) *
                C92099) *
               C92137 * C60959 +
           ((C31262 * C1387 + C31257 * C1399 + C31263 * C1386 + C31258 * C1398 +
             C31264 * C2711 + C31259 * C2712) *
                C181 +
            (C31262 * C1469 + C31257 * C1477 + C31263 * C1468 + C31258 * C1476 +
             C31264 * C2781 + C31259 * C2782) *
                C92099) *
               C92137 * C92212) *
              C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C36216 * C107 + C92062 * C113) * C181 +
             (C36216 * C182 + C92062 * C188) * C92099) *
                C4099 +
            (C36692 * C181 + C36770 * C92099) * C4100 +
            (C36694 * C181 + C36771 * C92099) * C4101) *
               C60959 +
           ((C41203 + C41224) * C4099 + (C41206 + C41207) * C4100 +
            (C57557 + C57558) * C4101) *
               C92212) *
              C93 -
          (((C59247 + C59248) * C4101 + (C42993 + C42994) * C4100 +
            (C43001 + C42997) * C4099) *
               C92212 +
           ((C37813 * C92099 + C37730 * C181) * C4101 +
            (C37812 * C92099 + C37728 * C181) * C4100 +
            ((C36216 * C183 + C92062 * C189) * C92099 +
             (C36216 * C108 + C92062 * C114) * C181) *
                C4099) *
               C60959) *
              C94 +
          ((((C36216 * C109 + C92062 * C115) * C181 +
             (C36216 * C184 + C92062 * C190) * C92099) *
                C4099 +
            ((C36216 * C803 + C92062 * C815) * C181 +
             (C36216 * C888 + C92062 * C896) * C92099) *
                C4100 +
            ((C36216 * C808 + C92062 * C820) * C181 +
             (C36216 * C893 + C92062 * C901) * C92099) *
                C4101) *
               C60959 +
           (((C36216 * C1387 + C92062 * C1399) * C181 +
             (C36216 * C1469 + C92062 * C1477) * C92099) *
                C4099 +
            ((C36216 * C3433 + C92062 * C3437) * C181 +
             (C36216 * C3515 + C92062 * C3519) * C92099) *
                C4100 +
            ((C36216 * C7566 + C92062 * C7567) * C181 +
             (C36216 * C7668 + C92062 * C7669) * C92099) *
                C4101) *
               C92212) *
              C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C36216 * C107 + C92062 * C113) * C884 +
            (C36216 * C182 + C92062 * C188) * C798 - C36692 * C885 -
            C36770 * C799 + C36694 * C886 + C36771 * C800) *
               C4099 +
           (C36692 * C884 + C36770 * C798 - C36694 * C885 - C36771 * C799 +
            C36696 * C886 + C36772 * C800) *
               C4100 +
           (C36694 * C884 + C36771 * C798 - C36696 * C885 - C36772 * C799 +
            C36699 * C886 + C36773 * C800) *
               C4101) *
              C60959 +
          ((C41107 * C884 + C41219 * C798 - C38977 * C885 - C39058 * C799 +
            C38975 * C886 + C39059 * C800) *
               C4099 +
           (C38977 * C884 + C39058 * C798 - C38975 * C885 - C39059 * C799 +
            C38973 * C886 + C39060 * C800) *
               C4100 +
           (C38975 * C884 + C39059 * C798 - C38973 * C885 - C39060 * C799 +
            (C36216 * C38955 + C92062 * C38956) * C886 +
            (C36216 * C39049 + C92062 * C39050) * C800) *
               C4101) *
              C92212) *
         C92078 * C92110) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C36216 * C107 + C92062 * C113) * C181 +
            (C36216 * C182 + C92062 * C188) * C92099) *
               C92137 * C70783 +
           (C41203 + C41224) * C92137 * C70784 + C41229 * C92137 * C70785 +
           (C41218 + C41228) * C92137 * C70786) *
              C93 -
          (((C36216 * C11092 + C92062 * C11096) * C92099 +
            (C36216 * C10960 + C92062 * C10966) * C181) *
               C92137 * C70786 +
           (C43000 + C42992) * C92137 * C70785 +
           (C43001 + C42997) * C92137 * C70784 +
           ((C36216 * C183 + C92062 * C189) * C92099 +
            (C36216 * C108 + C92062 * C114) * C181) *
               C92137 * C70783) *
              C94 +
          (((C36216 * C109 + C92062 * C115) * C181 +
            (C36216 * C184 + C92062 * C190) * C92099) *
               C92137 * C70783 +
           ((C36216 * C1387 + C92062 * C1399) * C181 +
            (C36216 * C1469 + C92062 * C1477) * C92099) *
               C92137 * C70784 +
           ((C36216 * C1392 + C92062 * C1404) * C181 +
            (C36216 * C1474 + C92062 * C1482) * C92099) *
               C92137 * C70785 +
           ((C36216 * C12840 + C92062 * C12841) * C181 +
            (C36216 * C12966 + C92062 * C12967) * C92099) *
               C92137 * C70786) *
              C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C36216 * C107 + C92062 * C113) * C884 +
           (C36216 * C182 + C92062 * C188) * C798 - C36692 * C885 -
           C36770 * C799 + C36694 * C886 + C36771 * C800) *
              C92137 * C70783 +
          (C41107 * C884 + C41219 * C798 - C38977 * C885 - C39058 * C799 +
           C38975 * C886 + C39059 * C800) *
              C92137 * C70784 +
          (C41109 * C884 + C41220 * C798 - C40320 * C885 - C40406 * C799 +
           C40323 * C886 + C40407 * C800) *
              C92137 * C70785 +
          (C41115 * C884 + C41223 * C798 - C41113 * C885 - C41222 * C799 +
           (C36216 * C43815 + C92062 * C43816) * C886 +
           (C36216 * C43920 + C92062 * C43921) * C800) *
              C92137 * C70786) *
         C92078 * C92110) /
            (p * q * std::sqrt(p + q));
    d2eexz[64] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31262 * C107 + C31257 * C113 + C31263 * C108 + C31258 * C114 +
             C31264 * C109 + C31259 * C115) *
                C244 +
            (C31262 * C245 + C31257 * C251 + C31263 * C246 + C31258 * C252 +
             C31264 * C247 + C31259 * C253) *
                C92110) *
               C92137 * C60959 +
           ((C31262 * C1389 + C31257 * C1401 + C31263 * C1388 + C31258 * C1400 +
             C31264 * C1387 + C31259 * C1399) *
                C244 +
            (C31262 * C1540 + C31257 * C1548 + C31263 * C1539 + C31258 * C1547 +
             C31264 * C1538 + C31259 * C1546) *
                C92110) *
               C92137 * C92212) *
              C798 -
          (((C35571 + C35572 + C35573) * C92110 +
            (C35357 + C35358 + C35359) * C244) *
               C92137 * C92212 +
           ((C32234 + C32233 + C32232) * C92110 +
            (C32044 + C32043 + C32042) * C244) *
               C92137 * C60959) *
              C799 +
          (((C32053 + C32052 + C32051) * C244 +
            (C32237 + C32236 + C32235) * C92110) *
               C92137 * C60959 +
           ((C31262 * C5772 + C31257 * C5780 + C31263 * C5771 + C31258 * C5779 +
             C31264 * C7566 + C31259 * C7567) *
                C244 +
            (C31262 * C5958 + C31257 * C5964 + C31263 * C5957 + C31258 * C5963 +
             C31264 * C7768 + C31259 * C7769) *
                C92110) *
               C92137 * C92212) *
              C800) *
         C92078) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31262 * C107 + C31257 * C113 + C31263 * C108 + C31258 * C114 +
             C31264 * C109 + C31259 * C115) *
                C244 +
            (C31262 * C245 + C31257 * C251 + C31263 * C246 + C31258 * C252 +
             C31264 * C247 + C31259 * C253) *
                C92110) *
               C92137 * C60959 +
           ((C31262 * C1389 + C31257 * C1401 + C31263 * C1388 + C31258 * C1400 +
             C31264 * C1387 + C31259 * C1399) *
                C244 +
            (C31262 * C1540 + C31257 * C1548 + C31263 * C1539 + C31258 * C1547 +
             C31264 * C1538 + C31259 * C1546) *
                C92110) *
               C92137 * C92212) *
              C92099 * C93 -
          (((C31264 * C1537 + C31259 * C1545 + C31263 * C1538 + C31258 * C1546 +
             C31262 * C1539 + C31257 * C1547) *
                C92110 +
            (C31264 * C1386 + C31259 * C1398 + C31263 * C1387 + C31258 * C1399 +
             C31262 * C1388 + C31257 * C1400) *
                C244) *
               C92137 * C92212 +
           ((C31264 * C248 + C31259 * C254 + C31263 * C247 + C31258 * C253 +
             C31262 * C246 + C31257 * C252) *
                C92110 +
            (C31264 * C110 + C31259 * C116 + C31263 * C109 + C31258 * C115 +
             C31262 * C108 + C31257 * C114) *
                C244) *
               C92137 * C60959) *
              C92099 * C94 +
          (((C31262 * C109 + C31257 * C115 + C31263 * C110 + C31258 * C116 +
             C31264 * C111 + C31259 * C121) *
                C244 +
            (C31262 * C247 + C31257 * C253 + C31263 * C248 + C31258 * C254 +
             C31264 * C249 + C31259 * C255) *
                C92110) *
               C92137 * C60959 +
           ((C31262 * C1387 + C31257 * C1399 + C31263 * C1386 + C31258 * C1398 +
             C31264 * C2711 + C31259 * C2712) *
                C244 +
            (C31262 * C1538 + C31257 * C1546 + C31263 * C1537 + C31258 * C1545 +
             C31264 * C2851 + C31259 * C2852) *
                C92110) *
               C92137 * C92212) *
              C92099 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C36216 * C107 + C92062 * C113) * C244 +
             (C36216 * C245 + C92062 * C251) * C92110) *
                C4099 +
            (C36826 + C36842) * C4100 + C36846 * C4101) *
               C60959 +
           ((C41107 * C244 + C41316 * C92110) * C4099 +
            (C40482 + C40483) * C4100 + C56926 * C4101) *
               C92212) *
              C92099 * C93 -
          (((C58462 + C58458) * C4101 + (C42182 + C42174) * C4100 +
            (C43104 * C92110 + C42882 * C244) * C4099) *
               C92212 +
           ((C37894 + C37884) * C4101 + (C37893 + C37881) * C4100 +
            ((C36216 * C246 + C92062 * C252) * C92110 +
             (C36216 * C108 + C92062 * C114) * C244) *
                C4099) *
               C60959) *
              C92099 * C94 +
          ((((C36216 * C109 + C92062 * C115) * C244 +
             (C36216 * C247 + C92062 * C253) * C92110) *
                C4099 +
            ((C36216 * C803 + C92062 * C815) * C244 +
             (C36216 * C954 + C92062 * C962) * C92110) *
                C4100 +
            ((C36216 * C808 + C92062 * C820) * C244 +
             (C36216 * C959 + C92062 * C967) * C92110) *
                C4101) *
               C60959 +
           (((C36216 * C1387 + C92062 * C1399) * C244 +
             (C36216 * C1538 + C92062 * C1546) * C92110) *
                C4099 +
            ((C36216 * C3433 + C92062 * C3437) * C244 +
             (C36216 * C3589 + C92062 * C3593) * C92110) *
                C4100 +
            ((C36216 * C7566 + C92062 * C7567) * C244 +
             (C36216 * C7768 + C92062 * C7769) * C92110) *
                C4101) *
               C92212) *
              C92099 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C36216 * C107 + C92062 * C113) * C244 +
             (C36216 * C245 + C92062 * C251) * C92110) *
                C4099 +
            (C36826 + C36842) * C4100 + C36846 * C4101) *
               C60959 +
           ((C41107 * C244 + C41316 * C92110) * C4099 +
            (C40482 + C40483) * C4100 + C56926 * C4101) *
               C92212) *
              C798 -
          (((C56927 + C56928) * C4101 + (C40490 + C40491) * C4100 +
            (C40483 + C40482) * C4099) *
               C92212 +
           ((C36844 + C36832) * C4101 + (C36843 + C36829) * C4100 +
            (C36842 + C36826) * C4099) *
               C60959) *
              C799 +
          ((C36846 * C4099 + C36847 * C4100 + (C36837 + C36845) * C4101) *
               C60959 +
           (C56926 * C4099 + (C56928 + C56927) * C4100 +
            ((C36216 * C38955 + C92062 * C38956) * C244 +
             (C36216 * C39126 + C92062 * C39127) * C92110) *
                C4101) *
               C92212) *
              C800) *
         C92078) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C36216 * C107 + C92062 * C113) * C244 +
            (C36216 * C245 + C92062 * C251) * C92110) *
               C92137 * C70783 +
           (C41107 * C244 + C41316 * C92110) * C92137 * C70784 +
           (C41109 * C244 + C41317 * C92110) * C92137 * C70785 +
           (C41115 * C244 + C41318 * C92110) * C92137 * C70786) *
              C92099 * C93 -
          (((C36216 * C11198 + C92062 * C11202) * C92110 +
            (C36216 * C10960 + C92062 * C10966) * C244) *
               C92137 * C70786 +
           (C43105 * C92110 + C42884 * C244) * C92137 * C70785 +
           (C43104 * C92110 + C42882 * C244) * C92137 * C70784 +
           ((C36216 * C246 + C92062 * C252) * C92110 +
            (C36216 * C108 + C92062 * C114) * C244) *
               C92137 * C70783) *
              C92099 * C94 +
          (((C36216 * C109 + C92062 * C115) * C244 +
            (C36216 * C247 + C92062 * C253) * C92110) *
               C92137 * C70783 +
           ((C36216 * C1387 + C92062 * C1399) * C244 +
            (C36216 * C1538 + C92062 * C1546) * C92110) *
               C92137 * C70784 +
           ((C36216 * C1392 + C92062 * C1404) * C244 +
            (C36216 * C1543 + C92062 * C1551) * C92110) *
               C92137 * C70785 +
           ((C36216 * C12840 + C92062 * C12841) * C244 +
            (C36216 * C13078 + C92062 * C13079) * C92110) *
               C92137 * C70786) *
              C92099 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C36216 * C107 + C92062 * C113) * C244 +
            (C36216 * C245 + C92062 * C251) * C92110) *
               C92137 * C70783 +
           (C41107 * C244 + C41316 * C92110) * C92137 * C70784 +
           (C41109 * C244 + C41317 * C92110) * C92137 * C70785 +
           (C41115 * C244 + C41318 * C92110) * C92137 * C70786) *
              C798 -
          ((C41319 * C92110 + C41113 * C244) * C92137 * C70786 +
           (C40494 + C40484) * C92137 * C70785 +
           (C40483 + C40482) * C92137 * C70784 +
           (C36842 + C36826) * C92137 * C70783) *
              C799 +
          (C36846 * C92137 * C70783 + C56926 * C92137 * C70784 +
           (C40489 + C40495) * C92137 * C70785 +
           ((C36216 * C43815 + C92062 * C43816) * C244 +
            (C36216 * C44036 + C92062 * C44037) * C92110) *
               C92137 * C70786) *
              C800) *
         C92078) /
            (p * q * std::sqrt(p + q));
    d2eeyx[64] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92137 * C308) * C801 +
             (C307 * C117 + C92137 * C314) * C92078) *
                C60959 +
            (C11336 + C11337) * C92212) *
               C31257 +
           ((C337 * C801 + C338 * C92078) * C60959 +
            (C11315 + C11316) * C92212) *
               C31258 +
           ((C339 * C801 + C340 * C92078) * C60959 +
            (C21541 + C21542) * C92212) *
               C31259) *
              C92110 * C798 -
          (((C24231 + C24230) * C92212 +
            (C2215 * C92078 + C2214 * C801) * C60959) *
               C31259 +
           ((C14197 + C14196) * C92212 +
            (C2213 * C92078 + C2212 * C801) * C60959) *
               C31258 +
           ((C14205 + C14204) * C92212 +
            ((C307 * C813 + C92137 * C1030) * C92078 +
             (C307 * C805 + C92137 * C1022) * C801) *
                C60959) *
               C31257) *
              C92110 * C799 +
          ((((C307 * C806 + C92137 * C1023) * C801 +
             (C307 * C822 + C92137 * C1031) * C92078) *
                C60959 +
            ((C307 * C5772 + C92137 * C6042) * C801 +
             (C307 * C5778 + C92137 * C6048) * C92078) *
                C92212) *
               C31257 +
           (((C307 * C807 + C92137 * C1024) * C801 +
             (C307 * C823 + C92137 * C1032) * C92078) *
                C60959 +
            ((C307 * C5771 + C92137 * C6041) * C801 +
             (C307 * C5777 + C92137 * C6047) * C92078) *
                C92212) *
               C31258 +
           (((C307 * C808 + C92137 * C1025) * C801 +
             (C307 * C824 + C92137 * C1033) * C92078) *
                C60959 +
            ((C307 * C7566 + C92137 * C7868) * C801 +
             (C307 * C7568 + C92137 * C7869) * C92078) *
                C92212) *
               C31259) *
              C92110 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C307 * C107 + C92137 * C308) * C104 +
            (C307 * C117 + C92137 * C314) * C93 - C337 * C105 - C338 * C94 +
            C339 * C106 + C340 * C95) *
               C60959 +
           (C11327 * C104 + C11328 * C93 - C2934 * C105 - C2935 * C94 +
            C2936 * C106 + C2937 * C95) *
               C92212) *
              C31257 +
          ((C337 * C104 + C338 * C93 - C339 * C105 - C340 * C94 + C341 * C106 +
            C342 * C95) *
               C60959 +
           (C2934 * C104 + C2935 * C93 - C2936 * C105 - C2937 * C94 +
            C2938 * C106 + C2939 * C95) *
               C92212) *
              C31258 +
          ((C339 * C104 + C340 * C93 - C341 * C105 - C342 * C94 + C343 * C106 +
            C344 * C95) *
               C60959 +
           (C2936 * C104 + C2937 * C93 - C2938 * C105 - C2939 * C94 +
            (C307 * C2711 + C92137 * C2919) * C106 +
            (C307 * C2713 + C92137 * C2920) * C95) *
               C92212) *
              C31259) *
         C92110 * C92099) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C4326 * C107 + C4099 * C308 + C4327 * C805 + C4100 * C1022 +
            C4328 * C806 + C4101 * C1023) *
               C104 +
           (C4326 * C117 + C4099 * C314 + C4327 * C813 + C4100 * C1030 +
            C4328 * C822 + C4101 * C1031) *
               C93 -
           (C4354 + C4355 + C4356) * C105 - (C4357 + C4358 + C4359) * C94 +
           (C4360 + C4361 + C4362) * C106 + (C4363 + C4364 + C4365) * C95) *
              C60959 +
          ((C4326 * C1389 + C4099 * C1606 + C4327 * C3431 + C4100 * C3661 +
            C4328 * C5772 + C4101 * C6042) *
               C104 +
           (C4326 * C1397 + C4099 * C1614 + C4327 * C3439 + C4100 * C3665 +
            C4328 * C5778 + C4101 * C6048) *
               C93 -
           (C7885 + C7884 + C7883) * C105 - (C7888 + C7887 + C7886) * C94 +
           (C4326 * C1387 + C4099 * C1604 + C4327 * C3433 + C4100 * C3663 +
            C4328 * C7566 + C4101 * C7868) *
               C106 +
           (C4326 * C1395 + C4099 * C1612 + C4327 * C3441 + C4100 * C3667 +
            C4328 * C7568 + C4101 * C7869) *
               C95) *
              C92212) *
         C92062 * C92110 * C92099) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4326 * C107 + C4099 * C308 + C4327 * C805 + C4100 * C1022 +
             C4328 * C806 + C4101 * C1023) *
                C801 +
            (C4326 * C117 + C4099 * C314 + C4327 * C813 + C4100 * C1030 +
             C4328 * C822 + C4101 * C1031) *
                C92078) *
               C60959 +
           ((C4326 * C1389 + C4099 * C1606 + C4327 * C3431 + C4100 * C3661 +
             C4328 * C5772 + C4101 * C6042) *
                C801 +
            (C4326 * C1397 + C4099 * C1614 + C4327 * C3439 + C4100 * C3665 +
             C4328 * C5778 + C4101 * C6048) *
                C92078) *
               C92212) *
              C92062 * C92110 * C798 -
          (((C4328 * C8540 + C4101 * C8896 + C4327 * C5778 + C4100 * C6048 +
             C4326 * C3439 + C4099 * C3665) *
                C92078 +
            (C4328 * C8536 + C4101 * C8894 + C4327 * C5772 + C4100 * C6042 +
             C4326 * C3431 + C4099 * C3661) *
                C801) *
               C92212 +
           ((C4328 * C4886 + C4101 * C5222 + C4327 * C822 + C4100 * C1031 +
             C4326 * C813 + C4099 * C1030) *
                C92078 +
            (C4328 * C4882 + C4101 * C5218 + C4327 * C806 + C4100 * C1023 +
             C4326 * C805 + C4099 * C1022) *
                C801) *
               C60959) *
              C92062 * C92110 * C799 +
          (((C4326 * C806 + C4099 * C1023 + C4327 * C4882 + C4100 * C5218 +
             C4328 * C4883 + C4101 * C5219) *
                C801 +
            (C4326 * C822 + C4099 * C1031 + C4327 * C4886 + C4100 * C5222 +
             C4328 * C4891 + C4101 * C5223) *
                C92078) *
               C60959 +
           ((C4326 * C5772 + C4099 * C6042 + C4327 * C8536 + C4100 * C8894 +
             C4328 * C38955 + C4101 * C39215) *
                C801 +
            (C4326 * C5778 + C4099 * C6048 + C4327 * C8540 + C4100 * C8896 +
             C4328 * C38957 + C4101 * C39216) *
                C92078) *
               C92212) *
              C92062 * C92110 * C800)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C307 * C107 + C92137 * C308) * C104 +
           (C307 * C117 + C92137 * C314) * C93 - C337 * C105 - C338 * C94 +
           C339 * C106 + C340 * C95) *
              C70783 +
          (C11327 * C104 + C11328 * C93 - C2934 * C105 - C2935 * C94 +
           C2936 * C106 + C2937 * C95) *
              C70784 +
          (C11329 * C104 + C11330 * C93 - C9748 * C105 - C9749 * C94 +
           C9750 * C106 + C9751 * C95) *
              C70785 +
          (C11335 * C104 + C11334 * C93 - C11333 * C105 - C11332 * C94 +
           (C307 * C12840 + C92137 * C13190) * C106 +
           (C307 * C12842 + C92137 * C13191) * C95) *
              C70786) *
         C92062 * C92110 * C92099) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C307 * C107 + C92137 * C308) * C801 +
            (C307 * C117 + C92137 * C314) * C92078) *
               C70783 +
           (C11336 + C11337) * C70784 + C11344 * C70785 +
           (C11343 + C11342) * C70786) *
              C92062 * C92110 * C798 -
          (((C307 * C13853 + C92137 * C14185) * C92078 +
            (C307 * C13849 + C92137 * C14183) * C801) *
               C70786 +
           (C14207 + C14206) * C70785 + (C14205 + C14204) * C70784 +
           ((C307 * C813 + C92137 * C1030) * C92078 +
            (C307 * C805 + C92137 * C1022) * C801) *
               C70783) *
              C92062 * C92110 * C799 +
          (((C307 * C806 + C92137 * C1023) * C801 +
            (C307 * C822 + C92137 * C1031) * C92078) *
               C70783 +
           ((C307 * C5772 + C92137 * C6042) * C801 +
            (C307 * C5778 + C92137 * C6048) * C92078) *
               C70784 +
           ((C307 * C5775 + C92137 * C6044) * C801 +
            (C307 * C5787 + C92137 * C6050) * C92078) *
               C70785 +
           ((C307 * C43815 + C92137 * C44144) * C801 +
            (C307 * C43817 + C92137 * C44145) * C92078) *
               C70786) *
              C92062 * C92110 * C800)) /
            (p * q * std::sqrt(p + q));
    d2eeyy[64] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C307 * C107 + C92137 * C308) * C884 +
            (C307 * C182 + C92137 * C394) * C798 -
            (C307 * C805 + C92137 * C1022) * C885 -
            (C307 * C890 + C92137 * C1085) * C799 +
            (C307 * C806 + C92137 * C1023) * C886 +
            (C307 * C891 + C92137 * C1086) * C800) *
               C60959 +
           (C11327 * C884 + C11436 * C798 - C14200 * C885 - C14318 * C799 +
            (C307 * C5772 + C92137 * C6042) * C886 +
            (C307 * C5870 + C92137 * C6128) * C800) *
               C92212) *
              C31257 +
          ((C337 * C884 + C413 * C798 - C2212 * C885 - C2300 * C799 +
            (C307 * C807 + C92137 * C1024) * C886 +
            (C307 * C892 + C92137 * C1088) * C800) *
               C60959 +
           (C2934 * C884 + C3016 * C798 - C12183 * C885 - C12296 * C799 +
            (C307 * C5771 + C92137 * C6041) * C886 +
            (C307 * C5869 + C92137 * C6127) * C800) *
               C92212) *
              C31258 +
          ((C339 * C884 + C414 * C798 - C2214 * C885 - C2301 * C799 +
            (C307 * C808 + C92137 * C1025) * C886 +
            (C307 * C893 + C92137 * C1090) * C800) *
               C60959 +
           (C2936 * C884 + C3017 * C798 - C22311 * C885 - C22416 * C799 +
            (C307 * C7566 + C92137 * C7868) * C886 +
            (C307 * C7668 + C92137 * C7986) * C800) *
               C92212) *
              C31259) *
         C92078 * C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92137 * C308) * C181 +
             (C307 * C182 + C92137 * C394) * C92099) *
                C60959 +
            (C11423 + C11440) * C92212) *
               C31257 +
           ((C401 + C417) * C60959 + C13308 * C92212) * C31258 +
           C61260 * C31259) *
              C93 -
          (((C3021 + C3013) * C92212 + (C419 + C407) * C60959) * C31259 +
           (C23393 * C92212 + (C418 + C404) * C60959) * C31258 +
           (C13310 * C92212 + (C417 + C401) * C60959) * C31257) *
              C94 +
          (C61260 * C31257 +
           (C422 * C60959 + (C3013 + C3021) * C92212) * C31258 +
           ((C412 + C420) * C60959 +
            ((C307 * C2711 + C92137 * C2919) * C181 +
             (C307 * C2781 + C92137 * C3005) * C92099) *
                C92212) *
               C31259) *
              C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4326 * C107 + C4099 * C308 + C4327 * C805 + C4100 * C1022 +
             C4328 * C806 + C4101 * C1023) *
                C181 +
            (C4326 * C182 + C4099 * C394 + C4327 * C890 + C4100 * C1085 +
             C4328 * C891 + C4101 * C1086) *
                C92099) *
               C60959 +
           ((C4326 * C1389 + C4099 * C1606 + C4327 * C3431 + C4100 * C3661 +
             C4328 * C5772 + C4101 * C6042) *
                C181 +
            (C4326 * C1471 + C4099 * C1672 + C4327 * C3513 + C4100 * C3735 +
             C4328 * C5870 + C4101 * C6128) *
                C92099) *
               C92212) *
              C92062 * C93 -
          (((C7996 + C7995 + C7994) * C92099 + (C7885 + C7884 + C7883) * C181) *
               C92212 +
           ((C4454 + C4453 + C4452) * C92099 + (C4354 + C4355 + C4356) * C181) *
               C60959) *
              C92062 * C94 +
          (((C4360 + C4361 + C4362) * C181 + (C4457 + C4456 + C4455) * C92099) *
               C60959 +
           ((C4326 * C1387 + C4099 * C1604 + C4327 * C3433 + C4100 * C3663 +
             C4328 * C7566 + C4101 * C7868) *
                C181 +
            (C4326 * C1469 + C4099 * C1670 + C4327 * C3515 + C4100 * C3737 +
             C4328 * C7668 + C4101 * C7986) *
                C92099) *
               C92212) *
              C92062 * C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C4326 * C107 + C4099 * C308 + C4327 * C805 + C4100 * C1022 +
            C4328 * C806 + C4101 * C1023) *
               C884 +
           (C4326 * C182 + C4099 * C394 + C4327 * C890 + C4100 * C1085 +
            C4328 * C891 + C4101 * C1086) *
               C798 -
           (C4328 * C4882 + C4101 * C5218 + C4327 * C806 + C4100 * C1023 +
            C4326 * C805 + C4099 * C1022) *
               C885 -
           (C4328 * C5012 + C4101 * C5299 + C4327 * C891 + C4100 * C1086 +
            C4326 * C890 + C4099 * C1085) *
               C799 +
           (C4326 * C806 + C4099 * C1023 + C4327 * C4882 + C4100 * C5218 +
            C4328 * C4883 + C4101 * C5219) *
               C886 +
           (C4326 * C891 + C4099 * C1086 + C4327 * C5012 + C4100 * C5299 +
            C4328 * C5014 + C4101 * C5300) *
               C800) *
              C60959 +
          ((C4326 * C1389 + C4099 * C1606 + C4327 * C3431 + C4100 * C3661 +
            C4328 * C5772 + C4101 * C6042) *
               C884 +
           (C4326 * C1471 + C4099 * C1672 + C4327 * C3513 + C4100 * C3735 +
            C4328 * C5870 + C4101 * C6128) *
               C798 -
           (C4328 * C8536 + C4101 * C8894 + C4327 * C5772 + C4100 * C6042 +
            C4326 * C3431 + C4099 * C3661) *
               C885 -
           (C4328 * C8666 + C4101 * C8996 + C4327 * C5870 + C4100 * C6128 +
            C4326 * C3513 + C4099 * C3735) *
               C799 +
           (C4326 * C5772 + C4099 * C6042 + C4327 * C8536 + C4100 * C8894 +
            C4328 * C38955 + C4101 * C39215) *
               C886 +
           (C4326 * C5870 + C4099 * C6128 + C4327 * C8666 + C4100 * C8996 +
            C4328 * C39049 + C4101 * C39283) *
               C800) *
              C92212) *
         C92062 * C92078 * C92110) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C307 * C107 + C92137 * C308) * C181 +
            (C307 * C182 + C92137 * C394) * C92099) *
               C70783 +
           (C11423 + C11440) * C70784 + C11444 * C70785 +
           (C11435 + C11443) * C70786) *
              C92062 * C93 -
          ((C11442 + C11432) * C70786 + C13309 * C70785 + C13310 * C70784 +
           (C417 + C401) * C70783) *
              C92062 * C94 +
          (C421 * C70783 + C20118 * C70784 + (C9831 + C9835) * C70785 +
           ((C307 * C12840 + C92137 * C13190) * C181 +
            (C307 * C12966 + C92137 * C13306) * C92099) *
               C70786) *
              C92062 * C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C307 * C107 + C92137 * C308) * C884 +
           (C307 * C182 + C92137 * C394) * C798 -
           (C307 * C805 + C92137 * C1022) * C885 -
           (C307 * C890 + C92137 * C1085) * C799 +
           (C307 * C806 + C92137 * C1023) * C886 +
           (C307 * C891 + C92137 * C1086) * C800) *
              C70783 +
          (C11327 * C884 + C11436 * C798 - C14200 * C885 - C14318 * C799 +
           (C307 * C5772 + C92137 * C6042) * C886 +
           (C307 * C5870 + C92137 * C6128) * C800) *
              C70784 +
          (C11329 * C884 + C11437 * C798 - C14202 * C885 - C14319 * C799 +
           (C307 * C5775 + C92137 * C6044) * C886 +
           (C307 * C5873 + C92137 * C6130) * C800) *
              C70785 +
          (C11335 * C884 + C11439 * C798 -
           (C307 * C13849 + C92137 * C14183) * C885 -
           (C307 * C13967 + C92137 * C14305) * C799 +
           (C307 * C43815 + C92137 * C44144) * C886 +
           (C307 * C43920 + C92137 * C44268) * C800) *
              C70786) *
         C92062 * C92078 * C92110) /
            (p * q * std::sqrt(p + q));
    d2eeyz[64] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92137 * C308) * C244 +
             (C307 * C245 + C92137 * C474) * C92110) *
                C60959 +
            (C11327 * C244 + C11531 * C92110) * C92212) *
               C31257 +
           ((C481 + C497) * C60959 + (C9910 + C9911) * C92212) * C31258 +
           C61337 * C31259) *
              C798 -
          (((C22520 + C22518) * C92212 + (C2386 + C2378) * C60959) * C31259 +
           ((C12408 + C12404) * C92212 + (C2387 + C2381) * C60959) * C31258 +
           ((C14426 * C92110 + C14200 * C244) * C92212 +
            ((C307 * C956 + C92137 * C1146) * C92110 +
             (C307 * C805 + C92137 * C1022) * C244) *
                C60959) *
               C31257) *
              C799 +
          ((((C307 * C806 + C92137 * C1023) * C244 +
             (C307 * C957 + C92137 * C1147) * C92110) *
                C60959 +
            ((C307 * C5772 + C92137 * C6042) * C244 +
             (C307 * C5958 + C92137 * C6207) * C92110) *
                C92212) *
               C31257 +
           (((C307 * C807 + C92137 * C1024) * C244 +
             (C307 * C958 + C92137 * C1148) * C92110) *
                C60959 +
            ((C307 * C5771 + C92137 * C6041) * C244 +
             (C307 * C5957 + C92137 * C6210) * C92110) *
                C92212) *
               C31258 +
           (((C307 * C808 + C92137 * C1025) * C244 +
             (C307 * C959 + C92137 * C1149) * C92110) *
                C60959 +
            ((C307 * C7566 + C92137 * C7868) * C244 +
             (C307 * C7768 + C92137 * C8094) * C92110) *
                C92212) *
               C31259) *
              C800) *
         C92078) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92137 * C308) * C244 +
             (C307 * C245 + C92137 * C474) * C92110) *
                C60959 +
            (C11327 * C244 + C11531 * C92110) * C92212) *
               C31257 +
           ((C481 + C497) * C60959 + (C9910 + C9911) * C92212) * C31258 +
           C61337 * C31259) *
              C92099 * C93 -
          (((C20197 + C20198) * C92212 + (C499 + C487) * C60959) * C31259 +
           ((C9918 + C9919) * C92212 + (C498 + C484) * C60959) * C31258 +
           ((C9911 + C9910) * C92212 + (C497 + C481) * C60959) * C31257) *
              C92099 * C94 +
          (C61337 * C31257 +
           (C502 * C60959 + (C20198 + C20197) * C92212) * C31258 +
           ((C492 + C500) * C60959 +
            ((C307 * C2711 + C92137 * C2919) * C244 +
             (C307 * C2851 + C92137 * C3087) * C92110) *
                C92212) *
               C31259) *
              C92099 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4326 * C107 + C4099 * C308 + C4327 * C805 + C4100 * C1022 +
             C4328 * C806 + C4101 * C1023) *
                C244 +
            (C4326 * C245 + C4099 * C474 + C4327 * C956 + C4100 * C1146 +
             C4328 * C957 + C4101 * C1147) *
                C92110) *
               C60959 +
           ((C4326 * C1389 + C4099 * C1606 + C4327 * C3431 + C4100 * C3661 +
             C4328 * C5772 + C4101 * C6042) *
                C244 +
            (C4326 * C1540 + C4099 * C1727 + C4327 * C3587 + C4100 * C3805 +
             C4328 * C5958 + C4101 * C6207) *
                C92110) *
               C92212) *
              C92062 * C92099 * C93 -
          (((C8102 + C8103 + C8104) * C92110 + (C7885 + C7884 + C7883) * C244) *
               C92212 +
           ((C4546 + C4545 + C4544) * C92110 + (C4354 + C4355 + C4356) * C244) *
               C60959) *
              C92062 * C92099 * C94 +
          (((C4360 + C4361 + C4362) * C244 + (C4549 + C4548 + C4547) * C92110) *
               C60959 +
           ((C4326 * C1387 + C4099 * C1604 + C4327 * C3433 + C4100 * C3663 +
             C4328 * C7566 + C4101 * C7868) *
                C244 +
            (C4326 * C1538 + C4099 * C1731 + C4327 * C3589 + C4100 * C3807 +
             C4328 * C7768 + C4101 * C8094) *
                C92110) *
               C92212) *
              C92062 * C92099 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4326 * C107 + C4099 * C308 + C4327 * C805 + C4100 * C1022 +
             C4328 * C806 + C4101 * C1023) *
                C244 +
            (C4326 * C245 + C4099 * C474 + C4327 * C956 + C4100 * C1146 +
             C4328 * C957 + C4101 * C1147) *
                C92110) *
               C60959 +
           ((C4326 * C1389 + C4099 * C1606 + C4327 * C3431 + C4100 * C3661 +
             C4328 * C5772 + C4101 * C6042) *
                C244 +
            (C4326 * C1540 + C4099 * C1727 + C4327 * C3587 + C4100 * C3805 +
             C4328 * C5958 + C4101 * C6207) *
                C92110) *
               C92212) *
              C92062 * C798 -
          (((C4328 * C8780 + C4101 * C9096 + C4327 * C5958 + C4100 * C6207 +
             C4326 * C3587 + C4099 * C3805) *
                C92110 +
            (C4328 * C8536 + C4101 * C8894 + C4327 * C5772 + C4100 * C6042 +
             C4326 * C3431 + C4099 * C3661) *
                C244) *
               C92212 +
           ((C4328 * C5114 + C4101 * C5378 + C4327 * C957 + C4100 * C1147 +
             C4326 * C956 + C4099 * C1146) *
                C92110 +
            (C4328 * C4882 + C4101 * C5218 + C4327 * C806 + C4100 * C1023 +
             C4326 * C805 + C4099 * C1022) *
                C244) *
               C60959) *
              C92062 * C799 +
          (((C4326 * C806 + C4099 * C1023 + C4327 * C4882 + C4100 * C5218 +
             C4328 * C4883 + C4101 * C5219) *
                C244 +
            (C4326 * C957 + C4099 * C1147 + C4327 * C5114 + C4100 * C5378 +
             C4328 * C5115 + C4101 * C5379) *
                C92110) *
               C60959 +
           ((C4326 * C5772 + C4099 * C6042 + C4327 * C8536 + C4100 * C8894 +
             C4328 * C38955 + C4101 * C39215) *
                C244 +
            (C4326 * C5958 + C4099 * C6207 + C4327 * C8780 + C4100 * C9096 +
             C4328 * C39126 + C4101 * C39350) *
                C92110) *
               C92212) *
              C92062 * C800) *
         C92078) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C307 * C107 + C92137 * C308) * C244 +
            (C307 * C245 + C92137 * C474) * C92110) *
               C70783 +
           (C11327 * C244 + C11531 * C92110) * C70784 +
           (C11329 * C244 + C11532 * C92110) * C70785 +
           (C11335 * C244 + C11533 * C92110) * C70786) *
              C92062 * C92099 * C93 -
          ((C11534 * C92110 + C11333 * C244) * C70786 +
           (C9922 + C9912) * C70785 + (C9911 + C9910) * C70784 +
           (C497 + C481) * C70783) *
              C92062 * C92099 * C94 +
          (C501 * C70783 + C20196 * C70784 + (C9917 + C9923) * C70785 +
           ((C307 * C12840 + C92137 * C13190) * C244 +
            (C307 * C13078 + C92137 * C13408) * C92110) *
               C70786) *
              C92062 * C92099 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C307 * C107 + C92137 * C308) * C244 +
            (C307 * C245 + C92137 * C474) * C92110) *
               C70783 +
           (C11327 * C244 + C11531 * C92110) * C70784 +
           (C11329 * C244 + C11532 * C92110) * C70785 +
           (C11335 * C244 + C11533 * C92110) * C70786) *
              C92062 * C798 -
          (((C307 * C14075 + C92137 * C14419) * C92110 +
            (C307 * C13849 + C92137 * C14183) * C244) *
               C70786 +
           (C14427 * C92110 + C14202 * C244) * C70785 +
           (C14426 * C92110 + C14200 * C244) * C70784 +
           ((C307 * C956 + C92137 * C1146) * C92110 +
            (C307 * C805 + C92137 * C1022) * C244) *
               C70783) *
              C92062 * C799 +
          (((C307 * C806 + C92137 * C1023) * C244 +
            (C307 * C957 + C92137 * C1147) * C92110) *
               C70783 +
           ((C307 * C5772 + C92137 * C6042) * C244 +
            (C307 * C5958 + C92137 * C6207) * C92110) *
               C70784 +
           ((C307 * C5775 + C92137 * C6044) * C244 +
            (C307 * C5959 + C92137 * C6209) * C92110) *
               C70785 +
           ((C307 * C43815 + C92137 * C44144) * C244 +
            (C307 * C44036 + C92137 * C44379) * C92110) *
               C70786) *
              C92062 * C800) *
         C92078) /
            (p * q * std::sqrt(p + q));
    d2eezx[64] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C61411 * C107 + C60959 * C555 + C61412 * C1389 + C92212 * C1788) *
                C801 +
            (C61411 * C117 + C60959 * C561 + C61412 * C1397 + C92212 * C1796) *
                C92078) *
               C31257 +
           ((C61439 + C61438) * C801 + (C61441 + C61440) * C92078) * C31258 +
           (C61450 * C801 + C61451 * C92078) * C31259) *
              C92137 * C92110 * C798 -
          (((C61412 * C3441 + C92212 * C3881 + C61411 * C811 + C60959 * C1210) *
                C92078 +
            (C61412 * C3433 + C92212 * C3877 + C61411 * C803 + C60959 * C1202) *
                C801) *
               C31259 +
           ((C61412 * C3440 + C92212 * C3880 + C61411 * C812 + C60959 * C1211) *
                C92078 +
            (C61412 * C3432 + C92212 * C3876 + C61411 * C804 + C60959 * C1203) *
                C801) *
               C31258 +
           ((C61412 * C3439 + C92212 * C3879 + C61411 * C813 + C60959 * C1212) *
                C92078 +
            (C61412 * C3431 + C92212 * C3875 + C61411 * C805 + C60959 * C1204) *
                C801) *
               C31257) *
              C92137 * C92110 * C799 +
          (((C61411 * C806 + C60959 * C1205 + C61412 * C5772 + C92212 * C6288) *
                C801 +
            (C61411 * C822 + C60959 * C1213 + C61412 * C5778 + C92212 * C6294) *
                C92078) *
               C31257 +
           ((C61411 * C807 + C60959 * C1206 + C61412 * C5771 + C92212 * C6287) *
                C801 +
            (C61411 * C823 + C60959 * C1214 + C61412 * C5777 + C92212 * C6293) *
                C92078) *
               C31258 +
           ((C61411 * C808 + C60959 * C1207 + C61412 * C7566 + C92212 * C8202) *
                C801 +
            (C61411 * C824 + C60959 * C1215 + C61412 * C7568 + C92212 * C8203) *
                C92078) *
               C31259) *
              C92137 * C92110 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C61411 * C107 + C60959 * C555 + C61412 * C1389 + C92212 * C1788) *
               C104 +
           (C61411 * C117 + C60959 * C561 + C61412 * C1397 + C92212 * C1796) *
               C93 -
           (C61438 + C61439) * C105 - (C61440 + C61441) * C94 + C61450 * C106 +
           C61451 * C95) *
              C31257 +
          ((C61439 + C61438) * C104 + (C61441 + C61440) * C93 -
           (C61443 + C61442) * C105 - (C61445 + C61444) * C94 +
           (C61446 + C61447) * C106 + (C61448 + C61449) * C95) *
              C31258 +
          (C61450 * C104 + C61451 * C93 - (C61447 + C61446) * C105 -
           (C61449 + C61448) * C94 +
           (C61411 * C111 + C60959 * C559 + C61412 * C2711 + C92212 * C3175) *
               C106 +
           (C61411 * C122 + C60959 * C565 + C61412 * C2713 + C92212 * C3176) *
               C95) *
              C31259) *
         C92137 * C92110 * C92099) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C61411 * C107 + C60959 * C555 + C61412 * C1389 + C92212 * C1788) *
               C104 +
           (C61411 * C117 + C60959 * C561 + C61412 * C1397 + C92212 * C1796) *
               C93 -
           (C61438 + C61439) * C105 - (C61440 + C61441) * C94 + C61450 * C106 +
           C61451 * C95) *
              C92062 * C4099 +
          ((C61411 * C805 + C60959 * C1204 + C61412 * C3431 + C92212 * C3875) *
               C104 +
           (C61411 * C813 + C60959 * C1212 + C61412 * C3439 + C92212 * C3879) *
               C93 -
           (C63751 + C63750) * C105 - (C63753 + C63752) * C94 +
           (C63754 + C63755) * C106 + (C63756 + C63757) * C95) *
              C92062 * C4100 +
          ((C61411 * C806 + C60959 * C1205 + C61412 * C5772 + C92212 * C6288) *
               C104 +
           (C61411 * C822 + C60959 * C1213 + C61412 * C5778 + C92212 * C6294) *
               C93 -
           (C61412 * C5771 + C92212 * C6287 + C61411 * C807 + C60959 * C1206) *
               C105 -
           (C61412 * C5777 + C92212 * C6293 + C61411 * C823 + C60959 * C1214) *
               C94 +
           (C61411 * C808 + C60959 * C1207 + C61412 * C7566 + C92212 * C8202) *
               C106 +
           (C61411 * C824 + C60959 * C1215 + C61412 * C7568 + C92212 * C8203) *
               C95) *
              C92062 * C4101) *
         C92110 * C92099) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C61411 * C107 + C60959 * C555 + C61412 * C1389 + C92212 * C1788) *
                C801 +
            (C61411 * C117 + C60959 * C561 + C61412 * C1397 + C92212 * C1796) *
                C92078) *
               C92062 * C4099 +
           ((C67034 + C67035) * C801 + (C67036 + C67037) * C92078) * C92062 *
               C4100 +
           C67051 * C4101) *
              C92110 * C798 -
          (((C67042 + C67043) * C92078 + (C67044 + C67045) * C801) * C92062 *
               C4101 +
           ((C67041 + C67040) * C92078 + (C67039 + C67038) * C801) * C92062 *
               C4100 +
           ((C67037 + C67036) * C92078 + (C67035 + C67034) * C801) * C92062 *
               C4099) *
              C92110 * C799 +
          (C67051 * C4099 +
           ((C67045 + C67044) * C801 + (C67043 + C67042) * C92078) * C92062 *
               C4100 +
           ((C61411 * C4883 + C60959 * C5457 + C61412 * C38955 +
             C92212 * C39417) *
                C801 +
            (C61411 * C4891 + C60959 * C5461 + C61412 * C38957 +
             C92212 * C39418) *
                C92078) *
               C92062 * C4101) *
              C92110 * C800)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((C71087 * C107 + C70783 * C555 + C71088 * C1389 + C70784 * C1788 +
           C71089 * C1390 + C70785 * C1789 + C71090 * C10961 +
           C70786 * C11609) *
              C104 +
          (C71087 * C117 + C70783 * C561 + C71088 * C1397 + C70784 * C1796 +
           C71089 * C1406 + C70785 * C1797 + C71090 * C10965 +
           C70786 * C11613) *
              C93 -
          (C71090 * C10960 + C70786 * C11608 + C71089 * C1391 + C70785 * C1790 +
           C71088 * C1388 + C70784 * C1787 + C71087 * C108 + C70783 * C556) *
              C105 -
          (C71090 * C10964 + C70786 * C11612 + C71089 * C1407 + C70785 * C1798 +
           C71088 * C1396 + C70784 * C1795 + C71087 * C118 + C70783 * C562) *
              C94 +
          (C71087 * C109 + C70783 * C557 + C71088 * C1387 + C70784 * C1786 +
           C71089 * C1392 + C70785 * C1791 + C71090 * C12840 +
           C70786 * C13515) *
              C106 +
          (C71087 * C119 + C70783 * C563 + C71088 * C1395 + C70784 * C1794 +
           C71089 * C1408 + C70785 * C1799 + C71090 * C12842 +
           C70786 * C13516) *
              C95) *
         C92062 * C92137 * C92110 * C92099) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C71087 * C107 + C70783 * C555 + C71088 * C1389 + C70784 * C1788 +
            C71089 * C1390 + C70785 * C1789 + C71090 * C10961 +
            C70786 * C11609) *
               C801 +
           (C71087 * C117 + C70783 * C561 + C71088 * C1397 + C70784 * C1796 +
            C71089 * C1406 + C70785 * C1797 + C71090 * C10965 +
            C70786 * C11613) *
               C92078) *
              C92062 * C92137 * C92110 * C798 -
          ((C71090 * C13853 + C70786 * C14527 + C71089 * C5783 +
            C70785 * C6295 + C71088 * C3439 + C70784 * C3879 + C71087 * C813 +
            C70783 * C1212) *
               C92078 +
           (C71090 * C13849 + C70786 * C14525 + C71089 * C5773 +
            C70785 * C6289 + C71088 * C3431 + C70784 * C3875 + C71087 * C805 +
            C70783 * C1204) *
               C801) *
              C92062 * C92137 * C92110 * C799 +
          ((C71087 * C806 + C70783 * C1205 + C71088 * C5772 + C70784 * C6288 +
            C71089 * C5775 + C70785 * C6291 + C71090 * C43815 +
            C70786 * C44490) *
               C801 +
           (C71087 * C822 + C70783 * C1213 + C71088 * C5778 + C70784 * C6294 +
            C71089 * C5787 + C70785 * C6297 + C71090 * C43817 +
            C70786 * C44491) *
               C92078) *
              C92062 * C92137 * C92110 * C800)) /
            (p * q * std::sqrt(p + q));
    d2eezy[64] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C61411 * C107 + C60959 * C555 + C61412 * C1389 + C92212 * C1788) *
               C884 +
           (C61411 * C182 + C60959 * C641 + C61412 * C1471 + C92212 * C1854) *
               C798 -
           (C61412 * C3431 + C92212 * C3875 + C61411 * C805 + C60959 * C1204) *
               C885 -
           (C61412 * C3513 + C92212 * C3949 + C61411 * C890 + C60959 * C1267) *
               C799 +
           (C61411 * C806 + C60959 * C1205 + C61412 * C5772 + C92212 * C6288) *
               C886 +
           (C61411 * C891 + C60959 * C1268 + C61412 * C5870 + C92212 * C6374) *
               C800) *
              C31257 +
          ((C61439 + C61438) * C884 + (C61539 + C61540) * C798 -
           (C61412 * C3432 + C92212 * C3876 + C61411 * C804 + C60959 * C1203) *
               C885 -
           (C61412 * C3514 + C92212 * C3950 + C61411 * C889 + C60959 * C1269) *
               C799 +
           (C61411 * C807 + C60959 * C1206 + C61412 * C5771 + C92212 * C6287) *
               C886 +
           (C61411 * C892 + C60959 * C1270 + C61412 * C5869 + C92212 * C6373) *
               C800) *
              C31258 +
          (C61450 * C884 + C61545 * C798 -
           (C61412 * C3433 + C92212 * C3877 + C61411 * C803 + C60959 * C1202) *
               C885 -
           (C61412 * C3515 + C92212 * C3951 + C61411 * C888 + C60959 * C1271) *
               C799 +
           (C61411 * C808 + C60959 * C1207 + C61412 * C7566 + C92212 * C8202) *
               C886 +
           (C61411 * C893 + C60959 * C1272 + C61412 * C7668 + C92212 * C8314) *
               C800) *
              C31259) *
         C92137 * C92078 * C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C61411 * C107 + C60959 * C555 + C61412 * C1389 + C92212 * C1788) *
                C181 +
            (C61411 * C182 + C60959 * C641 + C61412 * C1471 + C92212 * C1854) *
                C92099) *
               C31257 +
           ((C61439 + C61438) * C181 + (C61539 + C61540) * C92099) * C31258 +
           C61547 * C31259) *
              C92137 * C93 -
          (((C61543 + C61544) * C92099 + (C61447 + C61446) * C181) * C31259 +
           ((C61542 + C61541) * C92099 + (C61443 + C61442) * C181) * C31258 +
           ((C61540 + C61539) * C92099 + (C61438 + C61439) * C181) * C31257) *
              C92137 * C94 +
          (C61547 * C31257 +
           ((C61446 + C61447) * C181 + (C61544 + C61543) * C92099) * C31258 +
           ((C61411 * C111 + C60959 * C559 + C61412 * C2711 + C92212 * C3175) *
                C181 +
            (C61411 * C186 + C60959 * C645 + C61412 * C2781 + C92212 * C3261) *
                C92099) *
               C31259) *
              C92137 * C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C61411 * C107 + C60959 * C555 + C61412 * C1389 + C92212 * C1788) *
                C181 +
            (C61411 * C182 + C60959 * C641 + C61412 * C1471 + C92212 * C1854) *
                C92099) *
               C92062 * C4099 +
           ((C61411 * C805 + C60959 * C1204 + C61412 * C3431 + C92212 * C3875) *
                C181 +
            (C61411 * C890 + C60959 * C1267 + C61412 * C3513 + C92212 * C3949) *
                C92099) *
               C92062 * C4100 +
           ((C61411 * C806 + C60959 * C1205 + C61412 * C5772 + C92212 * C6288) *
                C181 +
            (C61411 * C891 + C60959 * C1268 + C61412 * C5870 + C92212 * C6374) *
                C92099) *
               C92062 * C4101) *
              C93 -
          (((C61412 * C5869 + C92212 * C6373 + C61411 * C892 + C60959 * C1270) *
                C92099 +
            (C61412 * C5771 + C92212 * C6287 + C61411 * C807 + C60959 * C1206) *
                C181) *
               C92062 * C4101 +
           ((C63864 + C63865) * C92099 + (C63751 + C63750) * C181) * C92062 *
               C4100 +
           ((C61540 + C61539) * C92099 + (C61438 + C61439) * C181) * C92062 *
               C4099) *
              C94 +
          (C61547 * C92062 * C4099 +
           ((C63754 + C63755) * C181 + (C63867 + C63866) * C92099) * C92062 *
               C4100 +
           ((C61411 * C808 + C60959 * C1207 + C61412 * C7566 + C92212 * C8202) *
                C181 +
            (C61411 * C893 + C60959 * C1272 + C61412 * C7668 + C92212 * C8314) *
                C92099) *
               C92062 * C4101) *
              C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C61411 * C107 + C60959 * C555 + C61412 * C1389 + C92212 * C1788) *
               C884 +
           (C61411 * C182 + C60959 * C641 + C61412 * C1471 + C92212 * C1854) *
               C798 -
           (C67035 + C67034) * C885 - (C67138 + C67139) * C799 + C67046 * C886 +
           C67144 * C800) *
              C92062 * C4099 +
          ((C67034 + C67035) * C884 + (C67139 + C67138) * C798 -
           (C67039 + C67038) * C885 - (C67141 + C67140) * C799 +
           (C67045 + C67044) * C886 + (C67142 + C67143) * C800) *
              C92062 * C4100 +
          (C67046 * C884 + C67144 * C798 - (C67044 + C67045) * C885 -
           (C67143 + C67142) * C799 +
           (C61411 * C4883 + C60959 * C5457 + C61412 * C38955 +
            C92212 * C39417) *
               C886 +
           (C61411 * C5014 + C60959 * C5580 + C61412 * C39049 +
            C92212 * C39493) *
               C800) *
              C92062 * C4101) *
         C92078 * C92110) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C71087 * C107 + C70783 * C555 + C71088 * C1389 + C70784 * C1788 +
            C71089 * C1390 + C70785 * C1789 + C71090 * C10961 +
            C70786 * C11609) *
               C181 +
           (C71087 * C182 + C70783 * C641 + C71088 * C1471 + C70784 * C1854 +
            C71089 * C1472 + C70785 * C1855 + C71090 * C11093 +
            C70786 * C11691) *
               C92099) *
              C92062 * C92137 * C93 -
          ((C71090 * C11092 + C70786 * C11690 + C71089 * C1473 +
            C70785 * C1856 + C71088 * C1470 + C70784 * C1853 + C71087 * C183 +
            C70783 * C642) *
               C92099 +
           (C71090 * C10960 + C70786 * C11608 + C71089 * C1391 +
            C70785 * C1790 + C71088 * C1388 + C70784 * C1787 + C71087 * C108 +
            C70783 * C556) *
               C181) *
              C92062 * C92137 * C94 +
          ((C71087 * C109 + C70783 * C557 + C71088 * C1387 + C70784 * C1786 +
            C71089 * C1392 + C70785 * C1791 + C71090 * C12840 +
            C70786 * C13515) *
               C181 +
           (C71087 * C184 + C70783 * C643 + C71088 * C1469 + C70784 * C1852 +
            C71089 * C1474 + C70785 * C1857 + C71090 * C12966 +
            C70786 * C13633) *
               C92099) *
              C92062 * C92137 * C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((C71087 * C107 + C70783 * C555 + C71088 * C1389 + C70784 * C1788 +
           C71089 * C1390 + C70785 * C1789 + C71090 * C10961 +
           C70786 * C11609) *
              C884 +
          (C71087 * C182 + C70783 * C641 + C71088 * C1471 + C70784 * C1854 +
           C71089 * C1472 + C70785 * C1855 + C71090 * C11093 +
           C70786 * C11691) *
              C798 -
          (C71090 * C13849 + C70786 * C14525 + C71089 * C5773 + C70785 * C6289 +
           C71088 * C3431 + C70784 * C3875 + C71087 * C805 + C70783 * C1204) *
              C885 -
          (C71090 * C13967 + C70786 * C14627 + C71089 * C5871 + C70785 * C6375 +
           C71088 * C3513 + C70784 * C3949 + C71087 * C890 + C70783 * C1267) *
              C799 +
          (C71087 * C806 + C70783 * C1205 + C71088 * C5772 + C70784 * C6288 +
           C71089 * C5775 + C70785 * C6291 + C71090 * C43815 +
           C70786 * C44490) *
              C886 +
          (C71087 * C891 + C70783 * C1268 + C71088 * C5870 + C70784 * C6374 +
           C71089 * C5873 + C70785 * C6377 + C71090 * C43920 +
           C70786 * C44608) *
              C800) *
         C92062 * C92137 * C92078 * C92110) /
            (p * q * std::sqrt(p + q));
    d2eezz[64] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C61411 * C107 + C60959 * C555 + C61412 * C1389 + C92212 * C1788) *
                C244 +
            (C61411 * C245 + C60959 * C719 + C61412 * C1540 + C92212 * C1909) *
                C92110) *
               C31257 +
           ((C61439 + C61438) * C244 + (C61635 + C61636) * C92110) * C31258 +
           C61643 * C31259) *
              C92137 * C798 -
          (((C61412 * C3589 + C92212 * C4021 + C61411 * C954 + C60959 * C1326) *
                C92110 +
            (C61412 * C3433 + C92212 * C3877 + C61411 * C803 + C60959 * C1202) *
                C244) *
               C31259 +
           ((C61412 * C3588 + C92212 * C4020 + C61411 * C955 + C60959 * C1327) *
                C92110 +
            (C61412 * C3432 + C92212 * C3876 + C61411 * C804 + C60959 * C1203) *
                C244) *
               C31258 +
           ((C61412 * C3587 + C92212 * C4019 + C61411 * C956 + C60959 * C1328) *
                C92110 +
            (C61412 * C3431 + C92212 * C3875 + C61411 * C805 + C60959 * C1204) *
                C244) *
               C31257) *
              C92137 * C799 +
          (((C61411 * C806 + C60959 * C1205 + C61412 * C5772 + C92212 * C6288) *
                C244 +
            (C61411 * C957 + C60959 * C1329 + C61412 * C5958 + C92212 * C6455) *
                C92110) *
               C31257 +
           ((C61411 * C807 + C60959 * C1206 + C61412 * C5771 + C92212 * C6287) *
                C244 +
            (C61411 * C958 + C60959 * C1330 + C61412 * C5957 + C92212 * C6457) *
                C92110) *
               C31258 +
           ((C61411 * C808 + C60959 * C1207 + C61412 * C7566 + C92212 * C8202) *
                C244 +
            (C61411 * C959 + C60959 * C1331 + C61412 * C7768 + C92212 * C8423) *
                C92110) *
               C31259) *
              C92137 * C800) *
         C92078) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C61411 * C107 + C60959 * C555 + C61412 * C1389 + C92212 * C1788) *
                C244 +
            (C61411 * C245 + C60959 * C719 + C61412 * C1540 + C92212 * C1909) *
                C92110) *
               C31257 +
           ((C61439 + C61438) * C244 + (C61635 + C61636) * C92110) * C31258 +
           C61643 * C31259) *
              C92137 * C92099 * C93 -
          (((C61639 + C61640) * C92110 + (C61447 + C61446) * C244) * C31259 +
           ((C61638 + C61637) * C92110 + (C61443 + C61442) * C244) * C31258 +
           ((C61636 + C61635) * C92110 + (C61438 + C61439) * C244) * C31257) *
              C92137 * C92099 * C94 +
          (C61643 * C31257 +
           ((C61446 + C61447) * C244 + (C61640 + C61639) * C92110) * C31258 +
           ((C61411 * C111 + C60959 * C559 + C61412 * C2711 + C92212 * C3175) *
                C244 +
            (C61411 * C249 + C60959 * C723 + C61412 * C2851 + C92212 * C3343) *
                C92110) *
               C31259) *
              C92137 * C92099 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C61411 * C107 + C60959 * C555 + C61412 * C1389 + C92212 * C1788) *
                C244 +
            (C61411 * C245 + C60959 * C719 + C61412 * C1540 + C92212 * C1909) *
                C92110) *
               C92062 * C4099 +
           ((C61411 * C805 + C60959 * C1204 + C61412 * C3431 + C92212 * C3875) *
                C244 +
            (C61411 * C956 + C60959 * C1328 + C61412 * C3587 + C92212 * C4019) *
                C92110) *
               C92062 * C4100 +
           ((C61411 * C806 + C60959 * C1205 + C61412 * C5772 + C92212 * C6288) *
                C244 +
            (C61411 * C957 + C60959 * C1329 + C61412 * C5958 + C92212 * C6455) *
                C92110) *
               C92062 * C4101) *
              C92099 * C93 -
          (((C61412 * C5957 + C92212 * C6457 + C61411 * C958 + C60959 * C1330) *
                C92110 +
            (C61412 * C5771 + C92212 * C6287 + C61411 * C807 + C60959 * C1206) *
                C244) *
               C92062 * C4101 +
           ((C63976 + C63977) * C92110 + (C63751 + C63750) * C244) * C92062 *
               C4100 +
           ((C61636 + C61635) * C92110 + (C61438 + C61439) * C244) * C92062 *
               C4099) *
              C92099 * C94 +
          (C61643 * C92062 * C4099 +
           ((C63754 + C63755) * C244 + (C63975 + C63974) * C92110) * C92062 *
               C4100 +
           ((C61411 * C808 + C60959 * C1207 + C61412 * C7566 + C92212 * C8202) *
                C244 +
            (C61411 * C959 + C60959 * C1331 + C61412 * C7768 + C92212 * C8423) *
                C92110) *
               C92062 * C4101) *
              C92099 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C61411 * C107 + C60959 * C555 + C61412 * C1389 + C92212 * C1788) *
                C244 +
            (C61411 * C245 + C60959 * C719 + C61412 * C1540 + C92212 * C1909) *
                C92110) *
               C92062 * C4099 +
           ((C67034 + C67035) * C244 + (C67232 + C67233) * C92110) * C92062 *
               C4100 +
           C67241 * C4101) *
              C798 -
          (((C67236 + C67237) * C92110 + (C67044 + C67045) * C244) * C92062 *
               C4101 +
           ((C67235 + C67234) * C92110 + (C67039 + C67038) * C244) * C92062 *
               C4100 +
           ((C67233 + C67232) * C92110 + (C67035 + C67034) * C244) * C92062 *
               C4099) *
              C799 +
          (C67241 * C4099 +
           ((C67045 + C67044) * C244 + (C67237 + C67236) * C92110) * C92062 *
               C4100 +
           ((C61411 * C4883 + C60959 * C5457 + C61412 * C38955 +
             C92212 * C39417) *
                C244 +
            (C61411 * C5115 + C60959 * C5670 + C61412 * C39126 +
             C92212 * C39563) *
                C92110) *
               C92062 * C4101) *
              C800) *
         C92078) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C71087 * C107 + C70783 * C555 + C71088 * C1389 + C70784 * C1788 +
            C71089 * C1390 + C70785 * C1789 + C71090 * C10961 +
            C70786 * C11609) *
               C244 +
           (C71087 * C245 + C70783 * C719 + C71088 * C1540 + C70784 * C1909 +
            C71089 * C1541 + C70785 * C1910 + C71090 * C11197 +
            C70786 * C11768) *
               C92110) *
              C92062 * C92137 * C92099 * C93 -
          ((C71090 * C11198 + C70786 * C11770 + C71089 * C1542 +
            C70785 * C1912 + C71088 * C1539 + C70784 * C1911 + C71087 * C246 +
            C70783 * C720) *
               C92110 +
           (C71090 * C10960 + C70786 * C11608 + C71089 * C1391 +
            C70785 * C1790 + C71088 * C1388 + C70784 * C1787 + C71087 * C108 +
            C70783 * C556) *
               C244) *
              C92062 * C92137 * C92099 * C94 +
          ((C71087 * C109 + C70783 * C557 + C71088 * C1387 + C70784 * C1786 +
            C71089 * C1392 + C70785 * C1791 + C71090 * C12840 +
            C70786 * C13515) *
               C244 +
           (C71087 * C247 + C70783 * C721 + C71088 * C1538 + C70784 * C1913 +
            C71089 * C1543 + C70785 * C1914 + C71090 * C13078 +
            C70786 * C13741) *
               C92110) *
              C92062 * C92137 * C92099 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C71087 * C107 + C70783 * C555 + C71088 * C1389 + C70784 * C1788 +
            C71089 * C1390 + C70785 * C1789 + C71090 * C10961 +
            C70786 * C11609) *
               C244 +
           (C71087 * C245 + C70783 * C719 + C71088 * C1540 + C70784 * C1909 +
            C71089 * C1541 + C70785 * C1910 + C71090 * C11197 +
            C70786 * C11768) *
               C92110) *
              C92062 * C92137 * C798 -
          ((C71090 * C14075 + C70786 * C14727 + C71089 * C5955 +
            C70785 * C6453 + C71088 * C3587 + C70784 * C4019 + C71087 * C956 +
            C70783 * C1328) *
               C92110 +
           (C71090 * C13849 + C70786 * C14525 + C71089 * C5773 +
            C70785 * C6289 + C71088 * C3431 + C70784 * C3875 + C71087 * C805 +
            C70783 * C1204) *
               C244) *
              C92062 * C92137 * C799 +
          ((C71087 * C806 + C70783 * C1205 + C71088 * C5772 + C70784 * C6288 +
            C71089 * C5775 + C70785 * C6291 + C71090 * C43815 +
            C70786 * C44490) *
               C244 +
           (C71087 * C957 + C70783 * C1329 + C71088 * C5958 + C70784 * C6455 +
            C71089 * C5959 + C70785 * C6456 + C71090 * C44036 +
            C70786 * C44716) *
               C92110) *
              C92062 * C92137 * C800) *
         C92078) /
            (p * q * std::sqrt(p + q));
    d2eexx[65] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C89875 * C107 + C92310 * C113 + C89868 * C108 + C92067 * C114) *
                C1987 +
            (C89875 * C117 + C92310 * C125 + C89868 * C118 + C92067 * C126) *
                C1983 -
            (C89868 * C109 + C92067 * C115 + C89875 * C108 + C92310 * C114) *
                C1988 -
            (C89868 * C119 + C92067 * C127 + C89875 * C118 + C92310 * C126) *
                C1984) *
               C92137 * C92350 +
           ((C51595 + C51596) * C1987 + (C51597 + C51598) * C1983 -
            (C53783 + C53784) * C1988 - (C53785 + C53786) * C1984) *
               C92137 * C92351 +
           (C81652 * C1987 + C81653 * C1983 -
            (C89868 * C1392 + C92067 * C1404 + C89875 * C1391 +
             C92310 * C1403) *
                C1988 -
            (C89868 * C1408 + C92067 * C1416 + C89875 * C1407 +
             C92310 * C1415) *
                C1984) *
               C92137 * C80243) *
              C92110 * C1985 +
          (((C47010 + C47009) * C1988 -
            ((C45576 + C45575) * C1983 + (C45574 + C45573) * C1987) +
            (C47012 + C47011) * C1984) *
               C92137 * C92350 +
           ((C52566 + C52565) * C1988 - (C54985 * C1983 + C54986 * C1987) +
            (C52568 + C52567) * C1984) *
               C92137 * C92351 +
           ((C89875 * C5774 + C92310 * C5782 + C89868 * C11870 +
             C92067 * C11871) *
                C1988 -
            ((C51599 + C51600) * C1983 + (C51601 + C51602) * C1987) +
            (C89875 * C5784 + C92310 * C5792 + C89868 * C11872 +
             C92067 * C11873) *
                C1984) *
               C92137 * C80243) *
              C92110 * C1986)) /
        (p * q * std::sqrt(p + q));
    d2eexy[65] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C89875 * C107 + C92310 * C113 + C89868 * C108 + C92067 * C114) *
                C2059 +
            (C89875 * C182 + C92310 * C188 + C89868 * C183 + C92067 * C189) *
                C1985 -
            (C45574 + C45573) * C2060 - (C45676 + C45677) * C1986) *
               C92137 * C92350 +
           ((C51595 + C51596) * C2059 + (C51717 + C51718) * C1985 -
            C54986 * C2060 - C55123 * C1986) *
               C92137 * C92351 +
           (C81652 * C2059 + C81745 * C1985 - (C51601 + C51602) * C2060 -
            (C51719 + C51720) * C1986) *
               C92137 * C80243) *
              C1983 +
          (((C47010 + C47009) * C2060 -
            ((C89868 * C184 + C92067 * C190 + C89875 * C183 + C92310 * C189) *
                 C1985 +
             (C89868 * C109 + C92067 * C115 + C89875 * C108 + C92310 * C114) *
                 C2059) +
            (C47123 + C47124) * C1986) *
               C92137 * C92350 +
           ((C52566 + C52565) * C2060 -
            ((C53921 + C53922) * C1985 + (C53783 + C53784) * C2059) +
            (C52703 + C52704) * C1986) *
               C92137 * C92351 +
           ((C89875 * C5774 + C92310 * C5782 + C89868 * C11870 +
             C92067 * C11871) *
                C2060 -
            ((C89868 * C1474 + C92067 * C1482 + C89875 * C1473 +
              C92310 * C1481) *
                 C1985 +
             (C89868 * C1392 + C92067 * C1404 + C89875 * C1391 +
              C92310 * C1403) *
                 C2059) +
            (C89875 * C5872 + C92310 * C5878 + C89868 * C11972 +
             C92067 * C11973) *
                C1986) *
               C92137 * C80243) *
              C1984) *
         C92110) /
        (p * q * std::sqrt(p + q));
    d2eexz[65] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C89875 * C107 + C92310 * C113 + C89868 * C108 + C92067 * C114) *
                 C244 +
             (C89875 * C245 + C92310 * C251 + C89868 * C246 + C92067 * C252) *
                 C92110) *
                C92137 * C92350 +
            ((C51595 + C51596) * C244 + (C51834 + C51833) * C92110) * C92137 *
                C92351 +
            (C81652 * C244 + C81829 * C92110) * C92137 * C80243) *
               C1985 -
           (((C51838 + C51837) * C92110 + (C51601 + C51602) * C244) * C92137 *
                C80243 +
            (C55255 * C92110 + C54986 * C244) * C92137 * C92351 +
            ((C45771 + C45770) * C92110 + (C45574 + C45573) * C244) * C92137 *
                C92350) *
               C1986) *
              C1983 +
          ((((C47010 + C47009) * C244 + (C47233 + C47234) * C92110) * C92137 *
                C92350 +
            ((C52566 + C52565) * C244 + (C52839 + C52840) * C92110) * C92137 *
                C92351 +
            ((C89875 * C5774 + C92310 * C5782 + C89868 * C11870 +
              C92067 * C11871) *
                 C244 +
             (C89875 * C5956 + C92310 * C5962 + C89868 * C12072 +
              C92067 * C12073) *
                 C92110) *
                C92137 * C80243) *
               C1986 -
           (((C89868 * C1543 + C92067 * C1551 + C89875 * C1542 +
              C92310 * C1550) *
                 C92110 +
             (C89868 * C1392 + C92067 * C1404 + C89875 * C1391 +
              C92310 * C1403) *
                 C244) *
                C92137 * C80243 +
            ((C54058 + C54057) * C92110 + (C53783 + C53784) * C244) * C92137 *
                C92351 +
            ((C89868 * C247 + C92067 * C253 + C89875 * C246 + C92310 * C252) *
                 C92110 +
             (C89868 * C109 + C92067 * C115 + C89875 * C108 + C92310 * C114) *
                 C244) *
                C92137 * C92350) *
               C1985) *
              C1984)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[65] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92137 * C308) * C1987 +
             (C307 * C117 + C92137 * C314) * C1983 - C337 * C1988 -
             C338 * C1984) *
                C92350 +
            (C13193 + C13194 - C13195 - C13196) * C92351 +
            (C13197 + C13198 - C13199 - C13200) * C80243) *
               C92310 +
           ((C337 * C1987 + C338 * C1983 - C339 * C1988 - C340 * C1984) *
                C92350 +
            (C13201 + C13202 - C13203 - C13204) * C92351 +
            (C13205 + C13206 - C13207 - C13208) * C80243) *
               C92067) *
              C92110 * C1985 +
          (((C2212 * C1988 -
             ((C307 * C813 + C92137 * C1030) * C1983 +
              (C307 * C805 + C92137 * C1022) * C1987) +
             C2213 * C1984) *
                C92350 +
            (C12183 * C1988 - (C14201 * C1983 + C14200 * C1987) +
             C12184 * C1984) *
                C92351 +
            (C12185 * C1988 - (C14203 * C1983 + C14202 * C1987) +
             C12186 * C1984) *
                C80243) *
               C92310 +
           ((C2214 * C1988 - (C2213 * C1983 + C2212 * C1987) + C2215 * C1984) *
                C92350 +
            (C22311 * C1988 - (C12184 * C1983 + C12183 * C1987) +
             C22312 * C1984) *
                C92351 +
            ((C307 * C11870 + C92137 * C12172) * C1988 -
             (C12186 * C1983 + C12185 * C1987) +
             (C307 * C11872 + C92137 * C12173) * C1984) *
                C80243) *
               C92067) *
              C92110 * C1986)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[65] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C307 * C107 + C92137 * C308) * C2059 +
                       (C307 * C182 + C92137 * C394) * C1985 -
                       (C307 * C805 + C92137 * C1022) * C2060 -
                       (C307 * C890 + C92137 * C1085) * C1986) *
                          C92350 +
                      (C14308 + C14309 - C14310 - C14320) * C92351 +
                      (C14313 + C14314 - C14315 - C14321) * C80243) *
                         C92310 +
                     ((C2285 + C2286 - C2287 - C2303) * C92350 +
                      (C12286 + C12287 - C12288 - C12298) * C92351 +
                      (C12291 + C12292 - C12293 - C12299) * C80243) *
                         C92067) *
                        C1983 +
                    (((C2287 - (C2286 + C2285) + C2303) * C92350 +
                      (C12288 - (C12287 + C12286) + C12298) * C92351 +
                      (C12293 - (C12292 + C12291) + C12299) * C80243) *
                         C92310 +
                     ((C2292 - (C2291 + C2290) + C2304) * C92350 +
                      (C22413 - (C22412 + C22411) + C22417) * C92351 +
                      ((C307 * C11870 + C92137 * C12172) * C2060 -
                       (C9833 * C1985 + C9750 * C2059) +
                       (C307 * C11972 + C92137 * C12284) * C1986) *
                          C80243) *
                         C92067) *
                        C1984) *
                   C92110) /
                  (p * q * std::sqrt(p + q));
    d2eeyz[65] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((((C307 * C107 + C92137 * C308) * C244 +
                        (C307 * C245 + C92137 * C474) * C92110) *
                           C92350 +
                       (C11327 * C244 + C11531 * C92110) * C92351 +
                       (C11329 * C244 + C11532 * C92110) * C80243) *
                          C92310 +
                      ((C481 + C497) * C92350 + (C9910 + C9911) * C92351 +
                       (C9912 + C9922) * C80243) *
                          C92067) *
                         C1985 -
                     (((C12407 + C12401) * C80243 + (C12408 + C12404) * C92351 +
                       (C2387 + C2381) * C92350) *
                          C92067 +
                      ((C14427 * C92110 + C14202 * C244) * C80243 +
                       (C14426 * C92110 + C14200 * C244) * C92351 +
                       ((C307 * C956 + C92137 * C1146) * C92110 +
                        (C307 * C805 + C92137 * C1022) * C244) *
                           C92350) *
                          C92310) *
                         C1986) *
                        C1983 +
                    ((((C2381 + C2387) * C92350 + (C12404 + C12408) * C92351 +
                       (C12401 + C12407) * C80243) *
                          C92310 +
                      ((C2378 + C2386) * C92350 + (C22518 + C22520) * C92351 +
                       ((C307 * C11870 + C92137 * C12172) * C244 +
                        (C307 * C12072 + C92137 * C12397) * C92110) *
                           C80243) *
                          C92067) *
                         C1986 -
                     (((C9923 + C9917) * C80243 + (C9918 + C9919) * C92351 +
                       (C498 + C484) * C92350) *
                          C92067 +
                      ((C9922 + C9912) * C80243 + (C9911 + C9910) * C92351 +
                       (C497 + C481) * C92350) *
                          C92310) *
                         C1985) *
                        C1984)) /
                  (p * q * std::sqrt(p + q));
    d2eezx[65] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C80688 * C107 + C92350 * C555 + C80689 * C1389 +
                       C92351 * C1788 + C80690 * C1390 + C80243 * C1789) *
                          C1987 +
                      (C80688 * C117 + C92350 * C561 + C80689 * C1397 +
                       C92351 * C1796 + C80690 * C1406 + C80243 * C1797) *
                          C1983 -
                      (C80716 + C80717 + C80718) * C1988 -
                      (C80719 + C80720 + C80721) * C1984) *
                         C92310 +
                     ((C80718 + C80717 + C80716) * C1987 +
                      (C80721 + C80720 + C80719) * C1983 -
                      (C80724 + C80723 + C80722) * C1988 -
                      (C80727 + C80726 + C80725) * C1984) *
                         C92067) *
                        C92137 * C92110 * C1985 +
                    (((C82978 + C82979 + C82980) * C1988 -
                      ((C80690 * C5783 + C80243 * C6295 + C80689 * C3439 +
                        C92351 * C3879 + C80688 * C813 + C92350 * C1212) *
                           C1983 +
                       (C80690 * C5773 + C80243 * C6289 + C80689 * C3431 +
                        C92351 * C3875 + C80688 * C805 + C92350 * C1204) *
                           C1987) +
                      (C82981 + C82982 + C82983) * C1984) *
                         C92310 +
                     ((C80688 * C803 + C92350 * C1202 + C80689 * C3433 +
                       C92351 * C3877 + C80690 * C11870 + C80243 * C12506) *
                          C1988 -
                      ((C82983 + C82982 + C82981) * C1983 +
                       (C82980 + C82979 + C82978) * C1987) +
                      (C80688 * C811 + C92350 * C1210 + C80689 * C3441 +
                       C92351 * C3881 + C80690 * C11872 + C80243 * C12507) *
                          C1984) *
                         C92067) *
                        C92137 * C92110 * C1986)) /
                  (p * q * std::sqrt(p + q));
    d2eezy[65] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C80688 * C107 + C92350 * C555 + C80689 * C1389 +
                       C92351 * C1788 + C80690 * C1390 + C80243 * C1789) *
                          C2059 +
                      (C80688 * C182 + C92350 * C641 + C80689 * C1471 +
                       C92351 * C1854 + C80690 * C1472 + C80243 * C1855) *
                          C1985 -
                      (C80690 * C5773 + C80243 * C6289 + C80689 * C3431 +
                       C92351 * C3875 + C80688 * C805 + C92350 * C1204) *
                          C2060 -
                      (C80690 * C5871 + C80243 * C6375 + C80689 * C3513 +
                       C92351 * C3949 + C80688 * C890 + C92350 * C1267) *
                          C1986) *
                         C92310 +
                     ((C80718 + C80717 + C80716) * C2059 +
                      (C80814 + C80815 + C80816) * C1985 -
                      (C82980 + C82979 + C82978) * C2060 -
                      (C83088 + C83089 + C83090) * C1986) *
                         C92067) *
                        C92137 * C1983 +
                    (((C82978 + C82979 + C82980) * C2060 -
                      ((C80816 + C80815 + C80814) * C1985 +
                       (C80716 + C80717 + C80718) * C2059) +
                      (C83090 + C83089 + C83088) * C1986) *
                         C92310 +
                     ((C80688 * C803 + C92350 * C1202 + C80689 * C3433 +
                       C92351 * C3877 + C80690 * C11870 + C80243 * C12506) *
                          C2060 -
                      ((C80817 + C80818 + C80819) * C1985 +
                       (C80724 + C80723 + C80722) * C2059) +
                      (C80688 * C888 + C92350 * C1271 + C80689 * C3515 +
                       C92351 * C3951 + C80690 * C11972 + C80243 * C12624) *
                          C1986) *
                         C92067) *
                        C92137 * C1984) *
                   C92110) /
                  (p * q * std::sqrt(p + q));
    d2eezz[65] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C80688 * C107 + C92350 * C555 + C80689 * C1389 +
                        C92351 * C1788 + C80690 * C1390 + C80243 * C1789) *
                           C244 +
                       (C80688 * C245 + C92350 * C719 + C80689 * C1540 +
                        C92351 * C1909 + C80690 * C1541 + C80243 * C1910) *
                           C92110) *
                          C92310 +
                      ((C80718 + C80717 + C80716) * C244 +
                       (C80906 + C80907 + C80908) * C92110) *
                          C92067) *
                         C92137 * C1985 -
                     (((C83195 + C83196 + C83197) * C92110 +
                       (C82980 + C82979 + C82978) * C244) *
                          C92067 +
                      ((C80690 * C5955 + C80243 * C6453 + C80689 * C3587 +
                        C92351 * C4019 + C80688 * C956 + C92350 * C1328) *
                           C92110 +
                       (C80690 * C5773 + C80243 * C6289 + C80689 * C3431 +
                        C92351 * C3875 + C80688 * C805 + C92350 * C1204) *
                           C244) *
                          C92310) *
                         C92137 * C1986) *
                        C1983 +
                    ((((C82978 + C82979 + C82980) * C244 +
                       (C83197 + C83196 + C83195) * C92110) *
                          C92310 +
                      ((C80688 * C803 + C92350 * C1202 + C80689 * C3433 +
                        C92351 * C3877 + C80690 * C11870 + C80243 * C12506) *
                           C244 +
                       (C80688 * C954 + C92350 * C1326 + C80689 * C3589 +
                        C92351 * C4021 + C80690 * C12072 + C80243 * C12732) *
                           C92110) *
                          C92067) *
                         C92137 * C1986 -
                     (((C80909 + C80910 + C80911) * C92110 +
                       (C80724 + C80723 + C80722) * C244) *
                          C92067 +
                      ((C80908 + C80907 + C80906) * C92110 +
                       (C80716 + C80717 + C80718) * C244) *
                          C92310) *
                         C92137 * C1985) *
                        C1984)) /
                  (p * q * std::sqrt(p + q));
    d2eexx[66] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C89875 * C107 + C92310 * C113 + C89868 * C108 + C92067 * C114) *
                 C801 +
             (C89875 * C117 + C92310 * C125 + C89868 * C118 + C92067 * C126) *
                 C92078) *
                C92137 * C92350 +
            ((C51595 + C51596) * C801 + (C51597 + C51598) * C92078) * C92137 *
                C92351 +
            C81669 * C80243) *
               C2709 -
           (((C81664 + C81665) * C92078 + (C81666 + C81667) * C801) * C92137 *
                C80243 +
            ((C51603 + C51604) * C92078 + (C51605 + C51606) * C801) * C92137 *
                C92351 +
            ((C51598 + C51597) * C92078 + (C51596 + C51595) * C801) * C92137 *
                C92350) *
               C2710) *
              C1985 +
          ((C54991 * C92137 * C92350 +
            ((C51602 + C51601) * C801 + (C51600 + C51599) * C92078) * C92137 *
                C92351 +
            ((C89875 * C13849 + C92310 * C13851 + C89868 * C13850 +
              C92067 * C13852) *
                 C801 +
             (C89875 * C13853 + C92310 * C13855 + C89868 * C13854 +
              C92067 * C13856) *
                 C92078) *
                C92137 * C80243) *
               C2710 -
           (((C51599 + C51600) * C92078 + (C51601 + C51602) * C801) * C92137 *
                C80243 +
            C54992 * C92137 * C92351 +
            ((C45576 + C45575) * C92078 + (C45574 + C45573) * C801) * C92137 *
                C92350) *
               C2709) *
              C1986)) /
        (p * q * std::sqrt(p + q));
    d2eexy[66] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C89875 * C107 + C92310 * C113 + C89868 * C108 + C92067 * C114) *
                C2059 +
            (C89875 * C182 + C92310 * C188 + C89868 * C183 + C92067 * C189) *
                C1985 -
            (C45574 + C45573) * C2060 - (C45676 + C45677) * C1986) *
               C92137 * C92350 +
           ((C51595 + C51596) * C2059 + (C51717 + C51718) * C1985 -
            C54986 * C2060 - C55123 * C1986) *
               C92137 * C92351 +
           (C81652 * C2059 + C81745 * C1985 - (C51601 + C51602) * C2060 -
            (C51719 + C51720) * C1986) *
               C92137 * C80243) *
              C92078 * C2709 +
          ((C54983 * C2060 -
            ((C51718 + C51717) * C1985 + (C51596 + C51595) * C2059) +
            C55124 * C1986) *
               C92137 * C92350 +
           ((C51602 + C51601) * C2060 -
            ((C51721 + C51722) * C1985 + (C51605 + C51606) * C2059) +
            (C51720 + C51719) * C1986) *
               C92137 * C92351 +
           ((C89875 * C13849 + C92310 * C13851 + C89868 * C13850 +
             C92067 * C13852) *
                C2060 -
            ((C81751 + C81752) * C1985 + (C81666 + C81667) * C2059) +
            (C89875 * C13967 + C92310 * C13969 + C89868 * C13968 +
             C92067 * C13970) *
                C1986) *
               C92137 * C80243) *
              C92078 * C2710)) /
        (p * q * std::sqrt(p + q));
    d2eexz[66] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C89875 * C107 + C92310 * C113 + C89868 * C108 + C92067 * C114) *
                C2849 +
            (C89875 * C245 + C92310 * C251 + C89868 * C246 + C92067 * C252) *
                C2709 -
            (C51596 + C51595) * C2850 - (C51833 + C51834) * C2710) *
               C92137 * C92350 +
           ((C51595 + C51596) * C2849 + (C51834 + C51833) * C2709 -
            (C51605 + C51606) * C2850 - (C51836 + C51835) * C2710) *
               C92137 * C92351 +
           (C81652 * C2849 + C81829 * C2709 - (C81666 + C81667) * C2850 -
            (C81835 + C81834) * C2710) *
               C92137 * C80243) *
              C1985 +
          ((C54983 * C2850 -
            ((C45771 + C45770) * C2709 + (C45574 + C45573) * C2849) +
            C55256 * C2710) *
               C92137 * C92350 +
           ((C51602 + C51601) * C2850 - (C55255 * C2709 + C54986 * C2849) +
            (C51837 + C51838) * C2710) *
               C92137 * C92351 +
           ((C89875 * C13849 + C92310 * C13851 + C89868 * C13850 +
             C92067 * C13852) *
                C2850 -
            ((C51838 + C51837) * C2709 + (C51601 + C51602) * C2849) +
            (C89875 * C14075 + C92310 * C14077 + C89868 * C14076 +
             C92067 * C14078) *
                C2710) *
               C92137 * C80243) *
              C1986) *
         C92078) /
        (p * q * std::sqrt(p + q));
    d2eeyx[66] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((((C307 * C107 + C92137 * C308) * C801 +
                        (C307 * C117 + C92137 * C314) * C92078) *
                           C92350 +
                       (C11336 + C11337) * C92351 + C11344 * C80243) *
                          C92310 +
                      ((C337 * C801 + C338 * C92078) * C92350 +
                       (C11315 + C11316) * C92351 + C11331 * C80243) *
                          C92067) *
                         C2709 -
                     (((C11340 + C11341) * C80243 + (C11318 + C11317) * C92351 +
                       (C11316 + C11315) * C92350) *
                          C92067 +
                      ((C11342 + C11343) * C80243 + (C11339 + C11338) * C92351 +
                       (C11337 + C11336) * C92350) *
                          C92310) *
                         C2710) *
                        C1985 +
                    ((((C14204 + C14205) * C92350 + (C14206 + C14207) * C92351 +
                       (C73632 + C73633) * C80243) *
                          C92310 +
                      ((C14196 + C14197) * C92350 + (C14198 + C14199) * C92351 +
                       ((C307 * C13850 + C92137 * C14184) * C801 +
                        (C307 * C13854 + C92137 * C14186) * C92078) *
                           C80243) *
                          C92067) *
                         C2710 -
                     (((C14199 + C14198) * C80243 + (C14197 + C14196) * C92351 +
                       (C2213 * C92078 + C2212 * C801) * C92350) *
                          C92067 +
                      ((C14207 + C14206) * C80243 + (C14205 + C14204) * C92351 +
                       ((C307 * C813 + C92137 * C1030) * C92078 +
                        (C307 * C805 + C92137 * C1022) * C801) *
                           C92350) *
                          C92310) *
                         C2709) *
                        C1986)) /
                  (p * q * std::sqrt(p + q));
    d2eeyy[66] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C307 * C107 + C92137 * C308) * C2059 +
                       (C307 * C182 + C92137 * C394) * C1985 -
                       (C307 * C805 + C92137 * C1022) * C2060 -
                       (C307 * C890 + C92137 * C1085) * C1986) *
                          C92350 +
                      (C14308 + C14309 - C14310 - C14320) * C92351 +
                      (C14313 + C14314 - C14315 - C14321) * C80243) *
                         C92310 +
                     ((C2285 + C2286 - C2287 - C2303) * C92350 +
                      (C12286 + C12287 - C12288 - C12298) * C92351 +
                      (C12291 + C12292 - C12293 - C12299) * C80243) *
                         C92067) *
                        C92078 * C2709 +
                    (((C14310 - (C14309 + C14308) + C14320) * C92350 +
                      (C14315 - (C14314 + C14313) + C14321) * C92351 +
                      (C73702 - (C73701 + C73700) + C73706) * C80243) *
                         C92310 +
                     ((C12288 - (C12287 + C12286) + C12298) * C92350 +
                      (C12293 - (C12292 + C12291) + C12299) * C92351 +
                      ((C307 * C13850 + C92137 * C14184) * C2060 -
                       (C11438 * C1985 + C11333 * C2059) +
                       (C307 * C13968 + C92137 * C14306) * C1986) *
                          C80243) *
                         C92067) *
                        C92078 * C2710)) /
                  (p * q * std::sqrt(p + q));
    d2eeyz[66] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C307 * C107 + C92137 * C308) * C2849 +
                       (C307 * C245 + C92137 * C474) * C2709 - C11327 * C2850 -
                       C11531 * C2710) *
                          C92350 +
                      (C11327 * C2849 + C11531 * C2709 - C11329 * C2850 -
                       C11532 * C2710) *
                          C92351 +
                      (C11329 * C2849 + C11532 * C2709 - C11335 * C2850 -
                       C11533 * C2710) *
                          C80243) *
                         C92310 +
                     ((C3089 + C3090 - C3091 - C3107) * C92350 +
                      (C13410 + C13411 - C13412 - C13413) * C92351 +
                      (C13414 + C13415 - C13416 - C13417) * C80243) *
                         C92067) *
                        C1985 +
                    (((C14200 * C2850 -
                       ((C307 * C956 + C92137 * C1146) * C2709 +
                        (C307 * C805 + C92137 * C1022) * C2849) +
                       C14426 * C2710) *
                          C92350 +
                      (C14202 * C2850 - (C14426 * C2709 + C14200 * C2849) +
                       C14427 * C2710) *
                          C92351 +
                      (C73630 * C2850 - (C14427 * C2709 + C14202 * C2849) +
                       C73775 * C2710) *
                          C80243) *
                         C92310 +
                     ((C12183 * C2850 - (C2384 * C2709 + C2212 * C2849) +
                       C12406 * C2710) *
                          C92350 +
                      (C12185 * C2850 - (C12406 * C2709 + C12183 * C2849) +
                       C12405 * C2710) *
                          C92351 +
                      ((C307 * C13850 + C92137 * C14184) * C2850 -
                       (C12405 * C2709 + C12185 * C2849) +
                       (C307 * C14076 + C92137 * C14420) * C2710) *
                          C80243) *
                         C92067) *
                        C1986) *
                   C92078) /
                  (p * q * std::sqrt(p + q));
    d2eezx[66] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C80688 * C107 + C92350 * C555 + C80689 * C1389 +
                        C92351 * C1788 + C80690 * C1390 + C80243 * C1789) *
                           C801 +
                       (C80688 * C117 + C92350 * C561 + C80689 * C1397 +
                        C92351 * C1796 + C80690 * C1406 + C80243 * C1797) *
                           C92078) *
                          C92310 +
                      ((C80718 + C80717 + C80716) * C801 +
                       (C80721 + C80720 + C80719) * C92078) *
                          C92067) *
                         C92137 * C2709 -
                     (((C83925 + C83924 + C83923) * C92078 +
                       (C83922 + C83921 + C83920) * C801) *
                          C92067 +
                      ((C80690 * C10965 + C80243 * C11613 + C80689 * C1406 +
                        C92351 * C1797 + C80688 * C1397 + C92350 * C1796) *
                           C92078 +
                       (C80690 * C10961 + C80243 * C11609 + C80689 * C1390 +
                        C92351 * C1789 + C80688 * C1389 + C92350 * C1788) *
                           C801) *
                          C92310) *
                         C92137 * C2710) *
                        C1985 +
                    ((((C80688 * C3431 + C92350 * C3875 + C80689 * C5773 +
                        C92351 * C6289 + C80690 * C13849 + C80243 * C14525) *
                           C801 +
                       (C80688 * C3439 + C92350 * C3879 + C80689 * C5783 +
                        C92351 * C6295 + C80690 * C13853 + C80243 * C14527) *
                           C92078) *
                          C92310 +
                      ((C80688 * C3432 + C92350 * C3876 + C80689 * C5774 +
                        C92351 * C6290 + C80690 * C13850 + C80243 * C14526) *
                           C801 +
                       (C80688 * C3440 + C92350 * C3880 + C80689 * C5784 +
                        C92351 * C6296 + C80690 * C13854 + C80243 * C14528) *
                           C92078) *
                          C92067) *
                         C92137 * C2710 -
                     (((C82983 + C82982 + C82981) * C92078 +
                       (C82980 + C82979 + C82978) * C801) *
                          C92067 +
                      ((C80690 * C5783 + C80243 * C6295 + C80689 * C3439 +
                        C92351 * C3879 + C80688 * C813 + C92350 * C1212) *
                           C92078 +
                       (C80690 * C5773 + C80243 * C6289 + C80689 * C3431 +
                        C92351 * C3875 + C80688 * C805 + C92350 * C1204) *
                           C801) *
                          C92310) *
                         C92137 * C2709) *
                        C1986)) /
                  (p * q * std::sqrt(p + q));
    d2eezy[66] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C80688 * C107 + C92350 * C555 + C80689 * C1389 +
                       C92351 * C1788 + C80690 * C1390 + C80243 * C1789) *
                          C2059 +
                      (C80688 * C182 + C92350 * C641 + C80689 * C1471 +
                       C92351 * C1854 + C80690 * C1472 + C80243 * C1855) *
                          C1985 -
                      (C80690 * C5773 + C80243 * C6289 + C80689 * C3431 +
                       C92351 * C3875 + C80688 * C805 + C92350 * C1204) *
                          C2060 -
                      (C80690 * C5871 + C80243 * C6375 + C80689 * C3513 +
                       C92351 * C3949 + C80688 * C890 + C92350 * C1267) *
                          C1986) *
                         C92310 +
                     ((C80718 + C80717 + C80716) * C2059 +
                      (C80814 + C80815 + C80816) * C1985 -
                      (C82980 + C82979 + C82978) * C2060 -
                      (C83088 + C83089 + C83090) * C1986) *
                         C92067) *
                        C92137 * C92078 * C2709 +
                    (((C80688 * C3431 + C92350 * C3875 + C80689 * C5773 +
                       C92351 * C6289 + C80690 * C13849 + C80243 * C14525) *
                          C2060 -
                      ((C80690 * C11093 + C80243 * C11691 + C80689 * C1472 +
                        C92351 * C1855 + C80688 * C1471 + C92350 * C1854) *
                           C1985 +
                       (C80690 * C10961 + C80243 * C11609 + C80689 * C1390 +
                        C92351 * C1789 + C80688 * C1389 + C92350 * C1788) *
                           C2059) +
                      (C80688 * C3513 + C92350 * C3949 + C80689 * C5871 +
                       C92351 * C6375 + C80690 * C13967 + C80243 * C14627) *
                          C1986) *
                         C92310 +
                     ((C80688 * C3432 + C92350 * C3876 + C80689 * C5774 +
                       C92351 * C6290 + C80690 * C13850 + C80243 * C14526) *
                          C2060 -
                      ((C84032 + C84031 + C84030) * C1985 +
                       (C83922 + C83921 + C83920) * C2059) +
                      (C80688 * C3514 + C92350 * C3950 + C80689 * C5872 +
                       C92351 * C6376 + C80690 * C13968 + C80243 * C14628) *
                          C1986) *
                         C92067) *
                        C92137 * C92078 * C2710)) /
                  (p * q * std::sqrt(p + q));
    d2eezz[66] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C80688 * C107 + C92350 * C555 + C80689 * C1389 +
                       C92351 * C1788 + C80690 * C1390 + C80243 * C1789) *
                          C2849 +
                      (C80688 * C245 + C92350 * C719 + C80689 * C1540 +
                       C92351 * C1909 + C80690 * C1541 + C80243 * C1910) *
                          C2709 -
                      (C80690 * C10961 + C80243 * C11609 + C80689 * C1390 +
                       C92351 * C1789 + C80688 * C1389 + C92350 * C1788) *
                          C2850 -
                      (C80690 * C11197 + C80243 * C11768 + C80689 * C1541 +
                       C92351 * C1910 + C80688 * C1540 + C92350 * C1909) *
                          C2710) *
                         C92310 +
                     ((C80718 + C80717 + C80716) * C2849 +
                      (C80906 + C80907 + C80908) * C2709 -
                      (C83922 + C83921 + C83920) * C2850 -
                      (C84137 + C84138 + C84139) * C2710) *
                         C92067) *
                        C92137 * C1985 +
                    (((C80688 * C3431 + C92350 * C3875 + C80689 * C5773 +
                       C92351 * C6289 + C80690 * C13849 + C80243 * C14525) *
                          C2850 -
                      ((C80690 * C5955 + C80243 * C6453 + C80689 * C3587 +
                        C92351 * C4019 + C80688 * C956 + C92350 * C1328) *
                           C2709 +
                       (C80690 * C5773 + C80243 * C6289 + C80689 * C3431 +
                        C92351 * C3875 + C80688 * C805 + C92350 * C1204) *
                           C2849) +
                      (C80688 * C3587 + C92350 * C4019 + C80689 * C5955 +
                       C92351 * C6453 + C80690 * C14075 + C80243 * C14727) *
                          C2710) *
                         C92310 +
                     ((C80688 * C3432 + C92350 * C3876 + C80689 * C5774 +
                       C92351 * C6290 + C80690 * C13850 + C80243 * C14526) *
                          C2850 -
                      ((C83195 + C83196 + C83197) * C2709 +
                       (C82980 + C82979 + C82978) * C2849) +
                      (C80688 * C3588 + C92350 * C4020 + C80689 * C5956 +
                       C92351 * C6454 + C80690 * C14076 + C80243 * C14728) *
                          C2710) *
                         C92067) *
                        C92137 * C1986) *
                   C92078) /
                  (p * q * std::sqrt(p + q));
    d2eexx[67] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C89875 * C107 + C92310 * C113 + C89868 * C108 + C92067 * C114) *
                C801 +
            (C89875 * C117 + C92310 * C125 + C89868 * C118 + C92067 * C126) *
                C92078) *
               C92137 * C92350 +
           ((C51595 + C51596) * C801 + (C51597 + C51598) * C92078) * C92137 *
               C92351 +
           ((C51606 + C51605) * C801 + (C51604 + C51603) * C92078) * C92137 *
               C80243) *
              C92110 * C798 -
          (((C51599 + C51600) * C92078 + (C51601 + C51602) * C801) * C92137 *
               C80243 +
           C54992 * C92137 * C92351 +
           ((C45576 + C45575) * C92078 + (C45574 + C45573) * C801) * C92137 *
               C92350) *
              C92110 * C799 +
          (C45589 * C92137 * C92350 +
           ((C48896 + C48895) * C801 + (C48894 + C48893) * C92078) * C92137 *
               C92351 +
           ((C89875 * C5775 + C92310 * C5785 + C89868 * C5776 +
             C92067 * C5786) *
                C801 +
            (C89875 * C5787 + C92310 * C5793 + C89868 * C5788 +
             C92067 * C5794) *
                C92078) *
               C92137 * C80243) *
              C92110 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C89875 * C107 + C92310 * C113 + C89868 * C108 + C92067 * C114) *
               C104 +
           (C89875 * C117 + C92310 * C125 + C89868 * C118 + C92067 * C126) *
               C93 -
           (C89868 * C109 + C92067 * C115 + C89875 * C108 + C92310 * C114) *
               C105 -
           (C89868 * C119 + C92067 * C127 + C89875 * C118 + C92310 * C126) *
               C94 +
           (C89875 * C109 + C92310 * C115 + C89868 * C110 + C92067 * C116) *
               C106 +
           (C89875 * C119 + C92310 * C127 + C89868 * C120 + C92067 * C128) *
               C95) *
              C92137 * C92350 +
          ((C51595 + C51596) * C104 + (C51597 + C51598) * C93 -
           (C53783 + C53784) * C105 - (C53785 + C53786) * C94 +
           (C89875 * C1387 + C92310 * C1399 + C89868 * C1386 + C92067 * C1398) *
               C106 +
           (C89875 * C1395 + C92310 * C1411 + C89868 * C1394 + C92067 * C1410) *
               C95) *
              C92137 * C92351 +
          ((C51606 + C51605) * C104 + (C51604 + C51603) * C93 -
           (C89868 * C1392 + C92067 * C1404 + C89875 * C1391 + C92310 * C1403) *
               C105 -
           (C89868 * C1408 + C92067 * C1416 + C89875 * C1407 + C92310 * C1415) *
               C94 +
           (C89875 * C1392 + C92310 * C1404 + C89868 * C1393 + C92067 * C1405) *
               C106 +
           (C89875 * C1408 + C92310 * C1416 + C89868 * C1409 + C92067 * C1417) *
               C95) *
              C92137 * C80243) *
         C92110 * C92099) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C89875 * C107 + C92310 * C113 + C89868 * C108 + C92067 * C114) *
                C801 +
            (C89875 * C117 + C92310 * C125 + C89868 * C118 + C92067 * C126) *
                C92078) *
               C92137 * C92350 +
           ((C51595 + C51596) * C801 + (C51597 + C51598) * C92078) * C92137 *
               C92351 +
           C81669 * C80243) *
              C1383 -
          (((C81664 + C81665) * C92078 + (C81666 + C81667) * C801) * C92137 *
               C80243 +
           ((C51603 + C51604) * C92078 + (C51605 + C51606) * C801) * C92137 *
               C92351 +
           ((C51598 + C51597) * C92078 + (C51596 + C51595) * C801) * C92137 *
               C92350) *
              C1384 +
          (C81669 * C92350 +
           ((C81667 + C81666) * C801 + (C81665 + C81664) * C92078) * C92137 *
               C92351 +
           ((C89875 * C10962 + C92310 * C10968 + C89868 * C10963 +
             C92067 * C10969) *
                C801 +
            (C89875 * C10970 + C92310 * C10974 + C89868 * C10971 +
             C92067 * C10975) *
                C92078) *
               C92137 * C80243) *
              C1385) *
         C92099) /
            (p * q * std::sqrt(p + q));
    d2eexy[67] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C89875 * C107 + C92310 * C113 + C89868 * C108 + C92067 * C114) *
               C884 +
           (C89875 * C182 + C92310 * C188 + C89868 * C183 + C92067 * C189) *
               C798 -
           (C45574 + C45573) * C885 - (C45676 + C45677) * C799 + C45585 * C886 +
           C45682 * C800) *
              C92137 * C92350 +
          ((C51595 + C51596) * C884 + (C51717 + C51718) * C798 - C54986 * C885 -
           C55123 * C799 + (C48896 + C48895) * C886 +
           (C49009 + C49010) * C800) *
              C92137 * C92351 +
          ((C51606 + C51605) * C884 + (C51722 + C51721) * C798 -
           (C51601 + C51602) * C885 - (C51719 + C51720) * C799 +
           (C89875 * C5775 + C92310 * C5785 + C89868 * C5776 + C92067 * C5786) *
               C886 +
           (C89875 * C5873 + C92310 * C5879 + C89868 * C5874 + C92067 * C5880) *
               C800) *
              C92137 * C80243) *
         C92078 * C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C89875 * C107 + C92310 * C113 + C89868 * C108 + C92067 * C114) *
                C181 +
            (C89875 * C182 + C92310 * C188 + C89868 * C183 + C92067 * C189) *
                C92099) *
               C92137 * C92350 +
           ((C51595 + C51596) * C181 + (C51717 + C51718) * C92099) * C92137 *
               C92351 +
           ((C51606 + C51605) * C181 + (C51722 + C51721) * C92099) * C92137 *
               C80243) *
              C93 -
          (((C89868 * C1474 + C92067 * C1482 + C89875 * C1473 +
             C92310 * C1481) *
                C92099 +
            (C89868 * C1392 + C92067 * C1404 + C89875 * C1391 +
             C92310 * C1403) *
                C181) *
               C92137 * C80243 +
           ((C53921 + C53922) * C92099 + (C53783 + C53784) * C181) * C92137 *
               C92351 +
           ((C89868 * C184 + C92067 * C190 + C89875 * C183 + C92310 * C189) *
                C92099 +
            (C89868 * C109 + C92067 * C115 + C89875 * C108 + C92310 * C114) *
                C181) *
               C92137 * C92350) *
              C94 +
          (((C89875 * C109 + C92310 * C115 + C89868 * C110 + C92067 * C116) *
                C181 +
            (C89875 * C184 + C92310 * C190 + C89868 * C185 + C92067 * C191) *
                C92099) *
               C92137 * C92350 +
           ((C89875 * C1387 + C92310 * C1399 + C89868 * C1386 +
             C92067 * C1398) *
                C181 +
            (C89875 * C1469 + C92310 * C1477 + C89868 * C1468 +
             C92067 * C1476) *
                C92099) *
               C92137 * C92351 +
           ((C89875 * C1392 + C92310 * C1404 + C89868 * C1393 +
             C92067 * C1405) *
                C181 +
            (C89875 * C1474 + C92310 * C1482 + C89868 * C1475 +
             C92067 * C1483) *
                C92099) *
               C92137 * C80243) *
              C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C89875 * C107 + C92310 * C113 + C89868 * C108 + C92067 * C114) *
                C181 +
            (C89875 * C182 + C92310 * C188 + C89868 * C183 + C92067 * C189) *
                C92099) *
               C92137 * C92350 +
           ((C51595 + C51596) * C181 + (C51717 + C51718) * C92099) * C92137 *
               C92351 +
           C81754 * C80243) *
              C92078 * C1383 -
          (((C81751 + C81752) * C92099 + (C81666 + C81667) * C181) * C92137 *
               C80243 +
           ((C51721 + C51722) * C92099 + (C51605 + C51606) * C181) * C92137 *
               C92351 +
           ((C51718 + C51717) * C92099 + (C51596 + C51595) * C181) * C92137 *
               C92350) *
              C92078 * C1384 +
          (C81754 * C92350 +
           ((C81667 + C81666) * C181 + (C81752 + C81751) * C92099) * C92137 *
               C92351 +
           ((C89875 * C10962 + C92310 * C10968 + C89868 * C10963 +
             C92067 * C10969) *
                C181 +
            (C89875 * C11094 + C92310 * C11098 + C89868 * C11095 +
             C92067 * C11099) *
                C92099) *
               C92137 * C80243) *
              C92078 * C1385)) /
            (p * q * std::sqrt(p + q));
    d2eexz[67] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C89875 * C107 + C92310 * C113 + C89868 * C108 + C92067 * C114) *
                C244 +
            (C89875 * C245 + C92310 * C251 + C89868 * C246 + C92067 * C252) *
                C92110) *
               C92137 * C92350 +
           ((C51595 + C51596) * C244 + (C51834 + C51833) * C92110) * C92137 *
               C92351 +
           ((C51606 + C51605) * C244 + (C51835 + C51836) * C92110) * C92137 *
               C80243) *
              C798 -
          (((C51838 + C51837) * C92110 + (C51601 + C51602) * C244) * C92137 *
               C80243 +
           (C55255 * C92110 + C54986 * C244) * C92137 * C92351 +
           ((C45771 + C45770) * C92110 + (C45574 + C45573) * C244) * C92137 *
               C92350) *
              C799 +
          (C45778 * C92137 * C92350 +
           ((C48896 + C48895) * C244 + (C49120 + C49119) * C92110) * C92137 *
               C92351 +
           ((C89875 * C5775 + C92310 * C5785 + C89868 * C5776 +
             C92067 * C5786) *
                C244 +
            (C89875 * C5959 + C92310 * C5965 + C89868 * C5960 +
             C92067 * C5966) *
                C92110) *
               C92137 * C80243) *
              C800) *
         C92078) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C89875 * C107 + C92310 * C113 + C89868 * C108 + C92067 * C114) *
                C244 +
            (C89875 * C245 + C92310 * C251 + C89868 * C246 + C92067 * C252) *
                C92110) *
               C92137 * C92350 +
           ((C51595 + C51596) * C244 + (C51834 + C51833) * C92110) * C92137 *
               C92351 +
           ((C51606 + C51605) * C244 + (C51835 + C51836) * C92110) * C92137 *
               C80243) *
              C92099 * C93 -
          (((C89868 * C1543 + C92067 * C1551 + C89875 * C1542 +
             C92310 * C1550) *
                C92110 +
            (C89868 * C1392 + C92067 * C1404 + C89875 * C1391 +
             C92310 * C1403) *
                C244) *
               C92137 * C80243 +
           ((C54058 + C54057) * C92110 + (C53783 + C53784) * C244) * C92137 *
               C92351 +
           ((C89868 * C247 + C92067 * C253 + C89875 * C246 + C92310 * C252) *
                C92110 +
            (C89868 * C109 + C92067 * C115 + C89875 * C108 + C92310 * C114) *
                C244) *
               C92137 * C92350) *
              C92099 * C94 +
          (((C89875 * C109 + C92310 * C115 + C89868 * C110 + C92067 * C116) *
                C244 +
            (C89875 * C247 + C92310 * C253 + C89868 * C248 + C92067 * C254) *
                C92110) *
               C92137 * C92350 +
           ((C89875 * C1387 + C92310 * C1399 + C89868 * C1386 +
             C92067 * C1398) *
                C244 +
            (C89875 * C1538 + C92310 * C1546 + C89868 * C1537 +
             C92067 * C1545) *
                C92110) *
               C92137 * C92351 +
           ((C89875 * C1392 + C92310 * C1404 + C89868 * C1393 +
             C92067 * C1405) *
                C244 +
            (C89875 * C1543 + C92310 * C1551 + C89868 * C1544 +
             C92067 * C1552) *
                C92110) *
               C92137 * C80243) *
              C92099 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C89875 * C107 + C92310 * C113 + C89868 * C108 + C92067 * C114) *
               C1534 +
           (C89875 * C245 + C92310 * C251 + C89868 * C246 + C92067 * C252) *
               C1383 -
           (C51596 + C51595) * C1535 - (C51833 + C51834) * C1384 +
           C81652 * C1536 + C81829 * C1385) *
              C92137 * C92350 +
          ((C51595 + C51596) * C1534 + (C51834 + C51833) * C1383 -
           (C51605 + C51606) * C1535 - (C51836 + C51835) * C1384 +
           (C81667 + C81666) * C1536 + (C81834 + C81835) * C1385) *
              C92137 * C92351 +
          (C81652 * C1534 + C81829 * C1383 - (C81666 + C81667) * C1535 -
           (C81835 + C81834) * C1384 +
           (C89875 * C10962 + C92310 * C10968 + C89868 * C10963 +
            C92067 * C10969) *
               C1536 +
           (C89875 * C11199 + C92310 * C11203 + C89868 * C11200 +
            C92067 * C11204) *
               C1385) *
              C92137 * C80243) *
         C92099 * C92078) /
            (p * q * std::sqrt(p + q));
    d2eeyx[67] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92137 * C308) * C801 +
             (C307 * C117 + C92137 * C314) * C92078) *
                C92350 +
            (C11336 + C11337) * C92351 + C11344 * C80243) *
               C92310 +
           ((C337 * C801 + C338 * C92078) * C92350 +
            (C11315 + C11316) * C92351 + C11331 * C80243) *
               C92067) *
              C92110 * C798 -
          (((C14199 + C14198) * C80243 + (C14197 + C14196) * C92351 +
            (C2213 * C92078 + C2212 * C801) * C92350) *
               C92067 +
           ((C14207 + C14206) * C80243 + (C14205 + C14204) * C92351 +
            ((C307 * C813 + C92137 * C1030) * C92078 +
             (C307 * C805 + C92137 * C1022) * C801) *
                C92350) *
               C92310) *
              C92110 * C799 +
          ((((C307 * C806 + C92137 * C1023) * C801 +
             (C307 * C822 + C92137 * C1031) * C92078) *
                C92350 +
            ((C307 * C5772 + C92137 * C6042) * C801 +
             (C307 * C5778 + C92137 * C6048) * C92078) *
                C92351 +
            ((C307 * C5775 + C92137 * C6044) * C801 +
             (C307 * C5787 + C92137 * C6050) * C92078) *
                C80243) *
               C92310 +
           (((C307 * C807 + C92137 * C1024) * C801 +
             (C307 * C823 + C92137 * C1032) * C92078) *
                C92350 +
            ((C307 * C5771 + C92137 * C6041) * C801 +
             (C307 * C5777 + C92137 * C6047) * C92078) *
                C92351 +
            ((C307 * C5776 + C92137 * C6046) * C801 +
             (C307 * C5788 + C92137 * C6052) * C92078) *
                C80243) *
               C92067) *
              C92110 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C307 * C107 + C92137 * C308) * C104 +
            (C307 * C117 + C92137 * C314) * C93 - C337 * C105 - C338 * C94 +
            C339 * C106 + C340 * C95) *
               C92350 +
           (C11327 * C104 + C11328 * C93 - C2934 * C105 - C2935 * C94 +
            C2936 * C106 + C2937 * C95) *
               C92351 +
           (C11329 * C104 + C11330 * C93 - C9748 * C105 - C9749 * C94 +
            C9750 * C106 + C9751 * C95) *
               C80243) *
              C92310 +
          ((C337 * C104 + C338 * C93 - C339 * C105 - C340 * C94 + C341 * C106 +
            C342 * C95) *
               C92350 +
           (C2934 * C104 + C2935 * C93 - C2936 * C105 - C2937 * C94 +
            C2938 * C106 + C2939 * C95) *
               C92351 +
           (C9748 * C104 + C9749 * C93 - C9750 * C105 - C9751 * C94 +
            (C307 * C1393 + C92137 * C1610) * C106 +
            (C307 * C1409 + C92137 * C1618) * C95) *
               C80243) *
              C92067) *
         C92110 * C92099) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92137 * C308) * C801 +
             (C307 * C117 + C92137 * C314) * C92078) *
                C92350 +
            (C11336 + C11337) * C92351 + C11344 * C80243) *
               C92310 +
           ((C337 * C801 + C338 * C92078) * C92350 +
            (C11315 + C11316) * C92351 + C11331 * C80243) *
               C92067) *
              C1383 -
          (((C11340 + C11341) * C80243 + (C11318 + C11317) * C92351 +
            (C11316 + C11315) * C92350) *
               C92067 +
           ((C11342 + C11343) * C80243 + (C11339 + C11338) * C92351 +
            (C11337 + C11336) * C92350) *
               C92310) *
              C1384 +
          ((C11344 * C92350 + C71874 * C92351 + (C71882 + C71881) * C80243) *
               C92310 +
           (C11331 * C92350 + (C11341 + C11340) * C92351 +
            ((C307 * C10963 + C92137 * C11301) * C801 +
             (C307 * C10971 + C92137 * C11305) * C92078) *
                C80243) *
               C92067) *
              C1385) *
         C92099) /
            (p * q * std::sqrt(p + q));
    d2eeyy[67] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C307 * C107 + C92137 * C308) * C884 +
            (C307 * C182 + C92137 * C394) * C798 -
            (C307 * C805 + C92137 * C1022) * C885 -
            (C307 * C890 + C92137 * C1085) * C799 +
            (C307 * C806 + C92137 * C1023) * C886 +
            (C307 * C891 + C92137 * C1086) * C800) *
               C92350 +
           (C11327 * C884 + C11436 * C798 - C14200 * C885 - C14318 * C799 +
            (C307 * C5772 + C92137 * C6042) * C886 +
            (C307 * C5870 + C92137 * C6128) * C800) *
               C92351 +
           (C11329 * C884 + C11437 * C798 - C14202 * C885 - C14319 * C799 +
            (C307 * C5775 + C92137 * C6044) * C886 +
            (C307 * C5873 + C92137 * C6130) * C800) *
               C80243) *
              C92310 +
          ((C337 * C884 + C413 * C798 - C2212 * C885 - C2300 * C799 +
            (C307 * C807 + C92137 * C1024) * C886 +
            (C307 * C892 + C92137 * C1088) * C800) *
               C92350 +
           (C2934 * C884 + C3016 * C798 - C12183 * C885 - C12296 * C799 +
            (C307 * C5771 + C92137 * C6041) * C886 +
            (C307 * C5869 + C92137 * C6127) * C800) *
               C92351 +
           (C9748 * C884 + C9832 * C798 - C12185 * C885 - C12297 * C799 +
            (C307 * C5776 + C92137 * C6046) * C886 +
            (C307 * C5874 + C92137 * C6132) * C800) *
               C80243) *
              C92067) *
         C92078 * C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92137 * C308) * C181 +
             (C307 * C182 + C92137 * C394) * C92099) *
                C92350 +
            (C11423 + C11440) * C92351 + C11444 * C80243) *
               C92310 +
           ((C401 + C417) * C92350 + C13308 * C92351 + C11429 * C80243) *
               C92067) *
              C93 -
          (((C9835 + C9831) * C80243 + C23393 * C92351 +
            (C418 + C404) * C92350) *
               C92067 +
           (C13309 * C80243 + C13310 * C92351 + (C417 + C401) * C92350) *
               C92310) *
              C94 +
          ((C421 * C92350 + C20118 * C92351 + (C9831 + C9835) * C80243) *
               C92310 +
           (C422 * C92350 + (C3013 + C3021) * C92351 +
            ((C307 * C1393 + C92137 * C1610) * C181 +
             (C307 * C1475 + C92137 * C1676) * C92099) *
                C80243) *
               C92067) *
              C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92137 * C308) * C181 +
             (C307 * C182 + C92137 * C394) * C92099) *
                C92350 +
            (C11423 + C11440) * C92351 + C11444 * C80243) *
               C92310 +
           ((C401 + C417) * C92350 + C13308 * C92351 + C11429 * C80243) *
               C92067) *
              C92078 * C1383 -
          (((C11442 + C11432) * C80243 + C13309 * C92351 + C13310 * C92350) *
               C92067 +
           ((C11443 + C11435) * C80243 + (C11441 + C11426) * C92351 +
            (C11440 + C11423) * C92350) *
               C92310) *
              C92078 * C1384 +
          ((C11444 * C92350 + C71934 * C92351 + (C71937 + C71939) * C80243) *
               C92310 +
           (C11429 * C92350 + (C11432 + C11442) * C92351 +
            ((C307 * C10963 + C92137 * C11301) * C181 +
             (C307 * C11095 + C92137 * C11421) * C92099) *
                C80243) *
               C92067) *
              C92078 * C1385)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[67] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92137 * C308) * C244 +
             (C307 * C245 + C92137 * C474) * C92110) *
                C92350 +
            (C11327 * C244 + C11531 * C92110) * C92351 +
            (C11329 * C244 + C11532 * C92110) * C80243) *
               C92310 +
           ((C481 + C497) * C92350 + (C9910 + C9911) * C92351 +
            (C9912 + C9922) * C80243) *
               C92067) *
              C798 -
          (((C12407 + C12401) * C80243 + (C12408 + C12404) * C92351 +
            (C2387 + C2381) * C92350) *
               C92067 +
           ((C14427 * C92110 + C14202 * C244) * C80243 +
            (C14426 * C92110 + C14200 * C244) * C92351 +
            ((C307 * C956 + C92137 * C1146) * C92110 +
             (C307 * C805 + C92137 * C1022) * C244) *
                C92350) *
               C92310) *
              C799 +
          ((((C307 * C806 + C92137 * C1023) * C244 +
             (C307 * C957 + C92137 * C1147) * C92110) *
                C92350 +
            ((C307 * C5772 + C92137 * C6042) * C244 +
             (C307 * C5958 + C92137 * C6207) * C92110) *
                C92351 +
            ((C307 * C5775 + C92137 * C6044) * C244 +
             (C307 * C5959 + C92137 * C6209) * C92110) *
                C80243) *
               C92310 +
           (((C307 * C807 + C92137 * C1024) * C244 +
             (C307 * C958 + C92137 * C1148) * C92110) *
                C92350 +
            ((C307 * C5771 + C92137 * C6041) * C244 +
             (C307 * C5957 + C92137 * C6210) * C92110) *
                C92351 +
            ((C307 * C5776 + C92137 * C6046) * C244 +
             (C307 * C5960 + C92137 * C6212) * C92110) *
                C80243) *
               C92067) *
              C800) *
         C92078) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92137 * C308) * C244 +
             (C307 * C245 + C92137 * C474) * C92110) *
                C92350 +
            (C11327 * C244 + C11531 * C92110) * C92351 +
            (C11329 * C244 + C11532 * C92110) * C80243) *
               C92310 +
           ((C481 + C497) * C92350 + (C9910 + C9911) * C92351 +
            (C9912 + C9922) * C80243) *
               C92067) *
              C92099 * C93 -
          (((C9923 + C9917) * C80243 + (C9918 + C9919) * C92351 +
            (C498 + C484) * C92350) *
               C92067 +
           ((C9922 + C9912) * C80243 + (C9911 + C9910) * C92351 +
            (C497 + C481) * C92350) *
               C92310) *
              C92099 * C94 +
          ((C501 * C92350 + C20196 * C92351 + (C9917 + C9923) * C80243) *
               C92310 +
           (C502 * C92350 + (C20198 + C20197) * C92351 +
            ((C307 * C1393 + C92137 * C1610) * C244 +
             (C307 * C1544 + C92137 * C1734) * C92110) *
                C80243) *
               C92067) *
              C92099 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C307 * C107 + C92137 * C308) * C1534 +
            (C307 * C245 + C92137 * C474) * C1383 - C11327 * C1535 -
            C11531 * C1384 + C11329 * C1536 + C11532 * C1385) *
               C92350 +
           (C11327 * C1534 + C11531 * C1383 - C11329 * C1535 - C11532 * C1384 +
            C11335 * C1536 + C11533 * C1385) *
               C92351 +
           (C11329 * C1534 + C11532 * C1383 - C11335 * C1535 - C11533 * C1384 +
            C71880 * C1536 + C71993 * C1385) *
               C80243) *
              C92310 +
          ((C337 * C1534 + C493 * C1383 - C2934 * C1535 - C3104 * C1384 +
            C9748 * C1536 + C9920 * C1385) *
               C92350 +
           (C2934 * C1534 + C3104 * C1383 - C9748 * C1535 - C9920 * C1384 +
            C11333 * C1536 + C11534 * C1385) *
               C92351 +
           (C9748 * C1534 + C9920 * C1383 - C11333 * C1535 - C11534 * C1384 +
            (C307 * C10963 + C92137 * C11301) * C1536 +
            (C307 * C11200 + C92137 * C11521) * C1385) *
               C80243) *
              C92067) *
         C92099 * C92078) /
            (p * q * std::sqrt(p + q));
    d2eezx[67] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C80688 * C107 + C92350 * C555 + C80689 * C1389 +
                       C92351 * C1788 + C80690 * C1390 + C80243 * C1789) *
                          C801 +
                      (C80688 * C117 + C92350 * C561 + C80689 * C1397 +
                       C92351 * C1796 + C80690 * C1406 + C80243 * C1797) *
                          C92078) *
                         C92310 +
                     ((C80718 + C80717 + C80716) * C801 +
                      (C80721 + C80720 + C80719) * C92078) *
                         C92067) *
                        C92137 * C92110 * C798 -
                    (((C80690 * C5784 + C80243 * C6296 + C80689 * C3440 +
                       C92351 * C3880 + C80688 * C812 + C92350 * C1211) *
                          C92078 +
                      (C80690 * C5774 + C80243 * C6290 + C80689 * C3432 +
                       C92351 * C3876 + C80688 * C804 + C92350 * C1203) *
                          C801) *
                         C92067 +
                     ((C80690 * C5783 + C80243 * C6295 + C80689 * C3439 +
                       C92351 * C3879 + C80688 * C813 + C92350 * C1212) *
                          C92078 +
                      (C80690 * C5773 + C80243 * C6289 + C80689 * C3431 +
                       C92351 * C3875 + C80688 * C805 + C92350 * C1204) *
                          C801) *
                         C92310) *
                        C92137 * C92110 * C799 +
                    (((C80688 * C806 + C92350 * C1205 + C80689 * C5772 +
                       C92351 * C6288 + C80690 * C5775 + C80243 * C6291) *
                          C801 +
                      (C80688 * C822 + C92350 * C1213 + C80689 * C5778 +
                       C92351 * C6294 + C80690 * C5787 + C80243 * C6297) *
                          C92078) *
                         C92310 +
                     ((C80688 * C807 + C92350 * C1206 + C80689 * C5771 +
                       C92351 * C6287 + C80690 * C5776 + C80243 * C6292) *
                          C801 +
                      (C80688 * C823 + C92350 * C1214 + C80689 * C5777 +
                       C92351 * C6293 + C80690 * C5788 + C80243 * C6298) *
                          C92078) *
                         C92067) *
                        C92137 * C92110 * C800)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C80688 * C107 + C92350 * C555 + C80689 * C1389 +
                      C92351 * C1788 + C80690 * C1390 + C80243 * C1789) *
                         C104 +
                     (C80688 * C117 + C92350 * C561 + C80689 * C1397 +
                      C92351 * C1796 + C80690 * C1406 + C80243 * C1797) *
                         C93 -
                     (C80716 + C80717 + C80718) * C105 -
                     (C80719 + C80720 + C80721) * C94 +
                     (C80722 + C80723 + C80724) * C106 +
                     (C80725 + C80726 + C80727) * C95) *
                        C92310 +
                    ((C80718 + C80717 + C80716) * C104 +
                     (C80721 + C80720 + C80719) * C93 -
                     (C80724 + C80723 + C80722) * C105 -
                     (C80727 + C80726 + C80725) * C94 +
                     (C80688 * C110 + C92350 * C558 + C80689 * C1386 +
                      C92351 * C1785 + C80690 * C1393 + C80243 * C1792) *
                         C106 +
                     (C80688 * C120 + C92350 * C564 + C80689 * C1394 +
                      C92351 * C1793 + C80690 * C1409 + C80243 * C1800) *
                         C95) *
                        C92067) *
                   C92137 * C92110 * C92099) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C80688 * C107 + C92350 * C555 + C80689 * C1389 +
                       C92351 * C1788 + C80690 * C1390 + C80243 * C1789) *
                          C801 +
                      (C80688 * C117 + C92350 * C561 + C80689 * C1397 +
                       C92351 * C1796 + C80690 * C1406 + C80243 * C1797) *
                          C92078) *
                         C92310 +
                     ((C80718 + C80717 + C80716) * C801 +
                      (C80721 + C80720 + C80719) * C92078) *
                         C92067) *
                        C92137 * C1383 -
                    (((C80690 * C10964 + C80243 * C11612 + C80689 * C1407 +
                       C92351 * C1798 + C80688 * C1396 + C92350 * C1795) *
                          C92078 +
                      (C80690 * C10960 + C80243 * C11608 + C80689 * C1391 +
                       C92351 * C1790 + C80688 * C1388 + C92350 * C1787) *
                          C801) *
                         C92067 +
                     ((C80690 * C10965 + C80243 * C11613 + C80689 * C1406 +
                       C92351 * C1797 + C80688 * C1397 + C92350 * C1796) *
                          C92078 +
                      (C80690 * C10961 + C80243 * C11609 + C80689 * C1390 +
                       C92351 * C1789 + C80688 * C1389 + C92350 * C1788) *
                          C801) *
                         C92310) *
                        C92137 * C1384 +
                    (((C80688 * C1390 + C92350 * C1789 + C80689 * C10961 +
                       C92351 * C11609 + C80690 * C10962 + C80243 * C11610) *
                          C801 +
                      (C80688 * C1406 + C92350 * C1797 + C80689 * C10965 +
                       C92351 * C11613 + C80690 * C10970 + C80243 * C11614) *
                          C92078) *
                         C92310 +
                     ((C80688 * C1391 + C92350 * C1790 + C80689 * C10960 +
                       C92351 * C11608 + C80690 * C10963 + C80243 * C11611) *
                          C801 +
                      (C80688 * C1407 + C92350 * C1798 + C80689 * C10964 +
                       C92351 * C11612 + C80690 * C10971 + C80243 * C11615) *
                          C92078) *
                         C92067) *
                        C92137 * C1385) *
                   C92099) /
                      (p * q * std::sqrt(p + q));
    d2eezy[67] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C80688 * C107 + C92350 * C555 + C80689 * C1389 +
                      C92351 * C1788 + C80690 * C1390 + C80243 * C1789) *
                         C884 +
                     (C80688 * C182 + C92350 * C641 + C80689 * C1471 +
                      C92351 * C1854 + C80690 * C1472 + C80243 * C1855) *
                         C798 -
                     (C80690 * C5773 + C80243 * C6289 + C80689 * C3431 +
                      C92351 * C3875 + C80688 * C805 + C92350 * C1204) *
                         C885 -
                     (C80690 * C5871 + C80243 * C6375 + C80689 * C3513 +
                      C92351 * C3949 + C80688 * C890 + C92350 * C1267) *
                         C799 +
                     (C80688 * C806 + C92350 * C1205 + C80689 * C5772 +
                      C92351 * C6288 + C80690 * C5775 + C80243 * C6291) *
                         C886 +
                     (C80688 * C891 + C92350 * C1268 + C80689 * C5870 +
                      C92351 * C6374 + C80690 * C5873 + C80243 * C6377) *
                         C800) *
                        C92310 +
                    ((C80718 + C80717 + C80716) * C884 +
                     (C80814 + C80815 + C80816) * C798 -
                     (C80690 * C5774 + C80243 * C6290 + C80689 * C3432 +
                      C92351 * C3876 + C80688 * C804 + C92350 * C1203) *
                         C885 -
                     (C80690 * C5872 + C80243 * C6376 + C80689 * C3514 +
                      C92351 * C3950 + C80688 * C889 + C92350 * C1269) *
                         C799 +
                     (C80688 * C807 + C92350 * C1206 + C80689 * C5771 +
                      C92351 * C6287 + C80690 * C5776 + C80243 * C6292) *
                         C886 +
                     (C80688 * C892 + C92350 * C1270 + C80689 * C5869 +
                      C92351 * C6373 + C80690 * C5874 + C80243 * C6378) *
                         C800) *
                        C92067) *
                   C92137 * C92078 * C92110) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C80688 * C107 + C92350 * C555 + C80689 * C1389 +
                       C92351 * C1788 + C80690 * C1390 + C80243 * C1789) *
                          C181 +
                      (C80688 * C182 + C92350 * C641 + C80689 * C1471 +
                       C92351 * C1854 + C80690 * C1472 + C80243 * C1855) *
                          C92099) *
                         C92310 +
                     ((C80718 + C80717 + C80716) * C181 +
                      (C80814 + C80815 + C80816) * C92099) *
                         C92067) *
                        C92137 * C93 -
                    (((C80817 + C80818 + C80819) * C92099 +
                      (C80724 + C80723 + C80722) * C181) *
                         C92067 +
                     ((C80816 + C80815 + C80814) * C92099 +
                      (C80716 + C80717 + C80718) * C181) *
                         C92310) *
                        C92137 * C94 +
                    (((C80722 + C80723 + C80724) * C181 +
                      (C80819 + C80818 + C80817) * C92099) *
                         C92310 +
                     ((C80688 * C110 + C92350 * C558 + C80689 * C1386 +
                       C92351 * C1785 + C80690 * C1393 + C80243 * C1792) *
                          C181 +
                      (C80688 * C185 + C92350 * C644 + C80689 * C1468 +
                       C92351 * C1851 + C80690 * C1475 + C80243 * C1858) *
                          C92099) *
                         C92067) *
                        C92137 * C95) *
                   C92110) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C80688 * C107 + C92350 * C555 + C80689 * C1389 +
                       C92351 * C1788 + C80690 * C1390 + C80243 * C1789) *
                          C181 +
                      (C80688 * C182 + C92350 * C641 + C80689 * C1471 +
                       C92351 * C1854 + C80690 * C1472 + C80243 * C1855) *
                          C92099) *
                         C92310 +
                     ((C80718 + C80717 + C80716) * C181 +
                      (C80814 + C80815 + C80816) * C92099) *
                         C92067) *
                        C92137 * C92078 * C1383 -
                    (((C80690 * C11092 + C80243 * C11690 + C80689 * C1473 +
                       C92351 * C1856 + C80688 * C1470 + C92350 * C1853) *
                          C92099 +
                      (C80690 * C10960 + C80243 * C11608 + C80689 * C1391 +
                       C92351 * C1790 + C80688 * C1388 + C92350 * C1787) *
                          C181) *
                         C92067 +
                     ((C80690 * C11093 + C80243 * C11691 + C80689 * C1472 +
                       C92351 * C1855 + C80688 * C1471 + C92350 * C1854) *
                          C92099 +
                      (C80690 * C10961 + C80243 * C11609 + C80689 * C1390 +
                       C92351 * C1789 + C80688 * C1389 + C92350 * C1788) *
                          C181) *
                         C92310) *
                        C92137 * C92078 * C1384 +
                    (((C80688 * C1390 + C92350 * C1789 + C80689 * C10961 +
                       C92351 * C11609 + C80690 * C10962 + C80243 * C11610) *
                          C181 +
                      (C80688 * C1472 + C92350 * C1855 + C80689 * C11093 +
                       C92351 * C11691 + C80690 * C11094 + C80243 * C11692) *
                          C92099) *
                         C92310 +
                     ((C80688 * C1391 + C92350 * C1790 + C80689 * C10960 +
                       C92351 * C11608 + C80690 * C10963 + C80243 * C11611) *
                          C181 +
                      (C80688 * C1473 + C92350 * C1856 + C80689 * C11092 +
                       C92351 * C11690 + C80690 * C11095 + C80243 * C11693) *
                          C92099) *
                         C92067) *
                        C92137 * C92078 * C1385)) /
                      (p * q * std::sqrt(p + q));
    d2eezz[67] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C80688 * C107 + C92350 * C555 + C80689 * C1389 +
                       C92351 * C1788 + C80690 * C1390 + C80243 * C1789) *
                          C244 +
                      (C80688 * C245 + C92350 * C719 + C80689 * C1540 +
                       C92351 * C1909 + C80690 * C1541 + C80243 * C1910) *
                          C92110) *
                         C92310 +
                     ((C80718 + C80717 + C80716) * C244 +
                      (C80906 + C80907 + C80908) * C92110) *
                         C92067) *
                        C92137 * C798 -
                    (((C80690 * C5956 + C80243 * C6454 + C80689 * C3588 +
                       C92351 * C4020 + C80688 * C955 + C92350 * C1327) *
                          C92110 +
                      (C80690 * C5774 + C80243 * C6290 + C80689 * C3432 +
                       C92351 * C3876 + C80688 * C804 + C92350 * C1203) *
                          C244) *
                         C92067 +
                     ((C80690 * C5955 + C80243 * C6453 + C80689 * C3587 +
                       C92351 * C4019 + C80688 * C956 + C92350 * C1328) *
                          C92110 +
                      (C80690 * C5773 + C80243 * C6289 + C80689 * C3431 +
                       C92351 * C3875 + C80688 * C805 + C92350 * C1204) *
                          C244) *
                         C92310) *
                        C92137 * C799 +
                    (((C80688 * C806 + C92350 * C1205 + C80689 * C5772 +
                       C92351 * C6288 + C80690 * C5775 + C80243 * C6291) *
                          C244 +
                      (C80688 * C957 + C92350 * C1329 + C80689 * C5958 +
                       C92351 * C6455 + C80690 * C5959 + C80243 * C6456) *
                          C92110) *
                         C92310 +
                     ((C80688 * C807 + C92350 * C1206 + C80689 * C5771 +
                       C92351 * C6287 + C80690 * C5776 + C80243 * C6292) *
                          C244 +
                      (C80688 * C958 + C92350 * C1330 + C80689 * C5957 +
                       C92351 * C6457 + C80690 * C5960 + C80243 * C6458) *
                          C92110) *
                         C92067) *
                        C92137 * C800) *
                   C92078) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C80688 * C107 + C92350 * C555 + C80689 * C1389 +
                       C92351 * C1788 + C80690 * C1390 + C80243 * C1789) *
                          C244 +
                      (C80688 * C245 + C92350 * C719 + C80689 * C1540 +
                       C92351 * C1909 + C80690 * C1541 + C80243 * C1910) *
                          C92110) *
                         C92310 +
                     ((C80718 + C80717 + C80716) * C244 +
                      (C80906 + C80907 + C80908) * C92110) *
                         C92067) *
                        C92137 * C92099 * C93 -
                    (((C80909 + C80910 + C80911) * C92110 +
                      (C80724 + C80723 + C80722) * C244) *
                         C92067 +
                     ((C80908 + C80907 + C80906) * C92110 +
                      (C80716 + C80717 + C80718) * C244) *
                         C92310) *
                        C92137 * C92099 * C94 +
                    (((C80722 + C80723 + C80724) * C244 +
                      (C80911 + C80910 + C80909) * C92110) *
                         C92310 +
                     ((C80688 * C110 + C92350 * C558 + C80689 * C1386 +
                       C92351 * C1785 + C80690 * C1393 + C80243 * C1792) *
                          C244 +
                      (C80688 * C248 + C92350 * C722 + C80689 * C1537 +
                       C92351 * C1915 + C80690 * C1544 + C80243 * C1916) *
                          C92110) *
                         C92067) *
                        C92137 * C92099 * C95)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((C80688 * C107 + C92350 * C555 + C80689 * C1389 +
                      C92351 * C1788 + C80690 * C1390 + C80243 * C1789) *
                         C1534 +
                     (C80688 * C245 + C92350 * C719 + C80689 * C1540 +
                      C92351 * C1909 + C80690 * C1541 + C80243 * C1910) *
                         C1383 -
                     (C80690 * C10961 + C80243 * C11609 + C80689 * C1390 +
                      C92351 * C1789 + C80688 * C1389 + C92350 * C1788) *
                         C1535 -
                     (C80690 * C11197 + C80243 * C11768 + C80689 * C1541 +
                      C92351 * C1910 + C80688 * C1540 + C92350 * C1909) *
                         C1384 +
                     (C80688 * C1390 + C92350 * C1789 + C80689 * C10961 +
                      C92351 * C11609 + C80690 * C10962 + C80243 * C11610) *
                         C1536 +
                     (C80688 * C1541 + C92350 * C1910 + C80689 * C11197 +
                      C92351 * C11768 + C80690 * C11199 + C80243 * C11769) *
                         C1385) *
                        C92310 +
                    ((C80718 + C80717 + C80716) * C1534 +
                     (C80906 + C80907 + C80908) * C1383 -
                     (C80690 * C10960 + C80243 * C11608 + C80689 * C1391 +
                      C92351 * C1790 + C80688 * C1388 + C92350 * C1787) *
                         C1535 -
                     (C80690 * C11198 + C80243 * C11770 + C80689 * C1542 +
                      C92351 * C1912 + C80688 * C1539 + C92350 * C1911) *
                         C1384 +
                     (C80688 * C1391 + C92350 * C1790 + C80689 * C10960 +
                      C92351 * C11608 + C80690 * C10963 + C80243 * C11611) *
                         C1536 +
                     (C80688 * C1542 + C92350 * C1912 + C80689 * C11198 +
                      C92351 * C11770 + C80690 * C11200 + C80243 * C11771) *
                         C1385) *
                        C92067) *
                   C92137 * C92099 * C92078) /
                      (p * q * std::sqrt(p + q));
    d2eexx[68] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C89875 * C107 + C92310 * C113 + C89868 * C108 + C92067 * C114) *
                C1987 +
            (C89875 * C117 + C92310 * C125 + C89868 * C118 + C92067 * C126) *
                C1983 -
            (C89868 * C109 + C92067 * C115 + C89875 * C108 + C92310 * C114) *
                C1988 -
            (C89868 * C119 + C92067 * C127 + C89875 * C118 + C92310 * C126) *
                C1984) *
               C92137 * C92350 +
           ((C51595 + C51596) * C1987 + (C51597 + C51598) * C1983 -
            (C53783 + C53784) * C1988 - (C53785 + C53786) * C1984) *
               C92137 * C92351 +
           (C81652 * C1987 + C81653 * C1983 - (C83304 + C83305) * C1988 -
            (C83306 + C83307) * C1984) *
               C92137 * C80243) *
              C2709 +
          (((C53784 + C53783) * C1988 -
            ((C51598 + C51597) * C1983 + (C51596 + C51595) * C1987) +
            (C53786 + C53785) * C1984) *
               C92137 * C92350 +
           ((C83305 + C83304) * C1988 -
            ((C51603 + C51604) * C1983 + (C51605 + C51606) * C1987) +
            (C83307 + C83306) * C1984) *
               C92137 * C92351 +
           ((C89875 * C10960 + C92310 * C10966 + C89868 * C12840 +
             C92067 * C12841) *
                C1988 -
            ((C81664 + C81665) * C1983 + (C81666 + C81667) * C1987) +
            (C89875 * C10964 + C92310 * C10972 + C89868 * C12842 +
             C92067 * C12843) *
                C1984) *
               C92137 * C80243) *
              C2710) *
         C92099) /
        (p * q * std::sqrt(p + q));
    d2eexy[68] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C89875 * C107 + C92310 * C113 + C89868 * C108 + C92067 * C114) *
                 C181 +
             (C89875 * C182 + C92310 * C188 + C89868 * C183 + C92067 * C189) *
                 C92099) *
                C92137 * C92350 +
            ((C51595 + C51596) * C181 + (C51717 + C51718) * C92099) * C92137 *
                C92351 +
            C81754 * C80243) *
               C1983 -
           (((C83410 + C83411) * C92099 + (C83304 + C83305) * C181) * C92137 *
                C80243 +
            ((C53921 + C53922) * C92099 + (C53783 + C53784) * C181) * C92137 *
                C92351 +
            ((C89868 * C184 + C92067 * C190 + C89875 * C183 + C92310 * C189) *
                 C92099 +
             (C89868 * C109 + C92067 * C115 + C89875 * C108 + C92310 * C114) *
                 C181) *
                C92137 * C92350) *
               C1984) *
              C2709 +
          ((((C53784 + C53783) * C181 + (C53922 + C53921) * C92099) * C92137 *
                C92350 +
            ((C83305 + C83304) * C181 + (C83411 + C83410) * C92099) * C92137 *
                C92351 +
            ((C89875 * C10960 + C92310 * C10966 + C89868 * C12840 +
              C92067 * C12841) *
                 C181 +
             (C89875 * C11092 + C92310 * C11096 + C89868 * C12966 +
              C92067 * C12967) *
                 C92099) *
                C92137 * C80243) *
               C1984 -
           (((C81751 + C81752) * C92099 + (C81666 + C81667) * C181) * C92137 *
                C80243 +
            ((C51721 + C51722) * C92099 + (C51605 + C51606) * C181) * C92137 *
                C92351 +
            ((C51718 + C51717) * C92099 + (C51596 + C51595) * C181) * C92137 *
                C92350) *
               C1983) *
              C2710)) /
        (p * q * std::sqrt(p + q));
    d2eexz[68] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C89875 * C107 + C92310 * C113 + C89868 * C108 + C92067 * C114) *
                C2849 +
            (C89875 * C245 + C92310 * C251 + C89868 * C246 + C92067 * C252) *
                C2709 -
            (C51596 + C51595) * C2850 - (C51833 + C51834) * C2710) *
               C92137 * C92350 +
           ((C51595 + C51596) * C2849 + (C51834 + C51833) * C2709 -
            (C51605 + C51606) * C2850 - (C51836 + C51835) * C2710) *
               C92137 * C92351 +
           (C81652 * C2849 + C81829 * C2709 - (C81666 + C81667) * C2850 -
            (C81835 + C81834) * C2710) *
               C92137 * C80243) *
              C92099 * C1983 +
          (((C53784 + C53783) * C2850 -
            ((C89868 * C247 + C92067 * C253 + C89875 * C246 + C92310 * C252) *
                 C2709 +
             (C89868 * C109 + C92067 * C115 + C89875 * C108 + C92310 * C114) *
                 C2849) +
            (C54057 + C54058) * C2710) *
               C92137 * C92350 +
           ((C83305 + C83304) * C2850 -
            ((C54058 + C54057) * C2709 + (C53783 + C53784) * C2849) +
            (C83514 + C83515) * C2710) *
               C92137 * C92351 +
           ((C89875 * C10960 + C92310 * C10966 + C89868 * C12840 +
             C92067 * C12841) *
                C2850 -
            ((C83515 + C83514) * C2709 + (C83304 + C83305) * C2849) +
            (C89875 * C11198 + C92310 * C11202 + C89868 * C13078 +
             C92067 * C13079) *
                C2710) *
               C92137 * C80243) *
              C92099 * C1984)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[68] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92137 * C308) * C1987 +
             (C307 * C117 + C92137 * C314) * C1983 - C337 * C1988 -
             C338 * C1984) *
                C92350 +
            (C13193 + C13194 - C13195 - C13196) * C92351 +
            (C13197 + C13198 - C13199 - C13200) * C80243) *
               C92310 +
           ((C337 * C1987 + C338 * C1983 - C339 * C1988 - C340 * C1984) *
                C92350 +
            (C13201 + C13202 - C13203 - C13204) * C92351 +
            (C13205 + C13206 - C13207 - C13208) * C80243) *
               C92067) *
              C2709 +
          (((C13195 - (C13194 + C13193) + C13196) * C92350 +
            (C13199 - (C13198 + C13197) + C13200) * C92351 +
            (C73026 - (C73025 + C73024) + C73027) * C80243) *
               C92310 +
           ((C13203 - (C13202 + C13201) + C13204) * C92350 +
            (C13207 - (C13206 + C13205) + C13208) * C92351 +
            ((C307 * C12840 + C92137 * C13190) * C1988 -
             (C11332 * C1983 + C11333 * C1987) +
             (C307 * C12842 + C92137 * C13191) * C1984) *
                C80243) *
               C92067) *
              C2710) *
         C92099) /
        (p * q * std::sqrt(p + q));
    d2eeyy[68] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C307 * C107 + C92137 * C308) * C181 +
              (C307 * C182 + C92137 * C394) * C92099) *
                 C92350 +
             (C11423 + C11440) * C92351 + C11444 * C80243) *
                C92310 +
            ((C401 + C417) * C92350 + C13308 * C92351 + C11429 * C80243) *
                C92067) *
               C1983 -
           (((C9835 + C9831) * C80243 + C23393 * C92351 +
             (C418 + C404) * C92350) *
                C92067 +
            (C13309 * C80243 + C13310 * C92351 + (C417 + C401) * C92350) *
                C92310) *
               C1984) *
              C2709 +
          (((C13308 * C92350 + C11429 * C92351 + (C11432 + C11442) * C80243) *
                C92310 +
            (C20118 * C92350 + (C9831 + C9835) * C92351 +
             ((C307 * C12840 + C92137 * C13190) * C181 +
              (C307 * C12966 + C92137 * C13306) * C92099) *
                 C80243) *
                C92067) *
               C1984 -
           (((C11442 + C11432) * C80243 + C13309 * C92351 + C13310 * C92350) *
                C92067 +
            ((C11443 + C11435) * C80243 + (C11441 + C11426) * C92351 +
             (C11440 + C11423) * C92350) *
                C92310) *
               C1983) *
              C2710)) /
        (p * q * std::sqrt(p + q));
    d2eeyz[68] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C307 * C107 + C92137 * C308) * C2849 +
                       (C307 * C245 + C92137 * C474) * C2709 - C11327 * C2850 -
                       C11531 * C2710) *
                          C92350 +
                      (C11327 * C2849 + C11531 * C2709 - C11329 * C2850 -
                       C11532 * C2710) *
                          C92351 +
                      (C11329 * C2849 + C11532 * C2709 - C11335 * C2850 -
                       C11533 * C2710) *
                          C80243) *
                         C92310 +
                     ((C3089 + C3090 - C3091 - C3107) * C92350 +
                      (C13410 + C13411 - C13412 - C13413) * C92351 +
                      (C13414 + C13415 - C13416 - C13417) * C80243) *
                         C92067) *
                        C92099 * C1983 +
                    (((C3091 - (C3090 + C3089) + C3107) * C92350 +
                      (C13412 - (C13411 + C13410) + C13413) * C92351 +
                      (C13416 - (C13415 + C13414) + C13417) * C80243) *
                         C92310 +
                     ((C3096 - (C3095 + C3094) + C3108) * C92350 +
                      (C23494 - (C23493 + C23492) + C23495) * C92351 +
                      ((C307 * C12840 + C92137 * C13190) * C2850 -
                       (C9921 * C2709 + C9750 * C2849) +
                       (C307 * C13078 + C92137 * C13408) * C2710) *
                          C80243) *
                         C92067) *
                        C92099 * C1984)) /
                  (p * q * std::sqrt(p + q));
    d2eezx[68] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C80688 * C107 + C92350 * C555 + C80689 * C1389 +
                       C92351 * C1788 + C80690 * C1390 + C80243 * C1789) *
                          C1987 +
                      (C80688 * C117 + C92350 * C561 + C80689 * C1397 +
                       C92351 * C1796 + C80690 * C1406 + C80243 * C1797) *
                          C1983 -
                      (C80716 + C80717 + C80718) * C1988 -
                      (C80719 + C80720 + C80721) * C1984) *
                         C92310 +
                     ((C80718 + C80717 + C80716) * C1987 +
                      (C80721 + C80720 + C80719) * C1983 -
                      (C80724 + C80723 + C80722) * C1988 -
                      (C80727 + C80726 + C80725) * C1984) *
                         C92067) *
                        C92137 * C2709 +
                    (((C83920 + C83921 + C83922) * C1988 -
                      ((C80690 * C10965 + C80243 * C11613 + C80689 * C1406 +
                        C92351 * C1797 + C80688 * C1397 + C92350 * C1796) *
                           C1983 +
                       (C80690 * C10961 + C80243 * C11609 + C80689 * C1390 +
                        C92351 * C1789 + C80688 * C1389 + C92350 * C1788) *
                           C1987) +
                      (C83923 + C83924 + C83925) * C1984) *
                         C92310 +
                     ((C80688 * C1387 + C92350 * C1786 + C80689 * C1392 +
                       C92351 * C1791 + C80690 * C12840 + C80243 * C13515) *
                          C1988 -
                      ((C83925 + C83924 + C83923) * C1983 +
                       (C83922 + C83921 + C83920) * C1987) +
                      (C80688 * C1395 + C92350 * C1794 + C80689 * C1408 +
                       C92351 * C1799 + C80690 * C12842 + C80243 * C13516) *
                          C1984) *
                         C92067) *
                        C92137 * C2710) *
                   C92099) /
                  (p * q * std::sqrt(p + q));
    d2eezy[68] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C80688 * C107 + C92350 * C555 + C80689 * C1389 +
                        C92351 * C1788 + C80690 * C1390 + C80243 * C1789) *
                           C181 +
                       (C80688 * C182 + C92350 * C641 + C80689 * C1471 +
                        C92351 * C1854 + C80690 * C1472 + C80243 * C1855) *
                           C92099) *
                          C92310 +
                      ((C80718 + C80717 + C80716) * C181 +
                       (C80814 + C80815 + C80816) * C92099) *
                          C92067) *
                         C92137 * C1983 -
                     (((C80817 + C80818 + C80819) * C92099 +
                       (C80724 + C80723 + C80722) * C181) *
                          C92067 +
                      ((C80816 + C80815 + C80814) * C92099 +
                       (C80716 + C80717 + C80718) * C181) *
                          C92310) *
                         C92137 * C1984) *
                        C2709 +
                    ((((C83920 + C83921 + C83922) * C181 +
                       (C84030 + C84031 + C84032) * C92099) *
                          C92310 +
                      ((C80688 * C1387 + C92350 * C1786 + C80689 * C1392 +
                        C92351 * C1791 + C80690 * C12840 + C80243 * C13515) *
                           C181 +
                       (C80688 * C1469 + C92350 * C1852 + C80689 * C1474 +
                        C92351 * C1857 + C80690 * C12966 + C80243 * C13633) *
                           C92099) *
                          C92067) *
                         C92137 * C1984 -
                     (((C84032 + C84031 + C84030) * C92099 +
                       (C83922 + C83921 + C83920) * C181) *
                          C92067 +
                      ((C80690 * C11093 + C80243 * C11691 + C80689 * C1472 +
                        C92351 * C1855 + C80688 * C1471 + C92350 * C1854) *
                           C92099 +
                       (C80690 * C10961 + C80243 * C11609 + C80689 * C1390 +
                        C92351 * C1789 + C80688 * C1389 + C92350 * C1788) *
                           C181) *
                          C92310) *
                         C92137 * C1983) *
                        C2710)) /
                  (p * q * std::sqrt(p + q));
    d2eezz[68] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C80688 * C107 + C92350 * C555 + C80689 * C1389 +
                       C92351 * C1788 + C80690 * C1390 + C80243 * C1789) *
                          C2849 +
                      (C80688 * C245 + C92350 * C719 + C80689 * C1540 +
                       C92351 * C1909 + C80690 * C1541 + C80243 * C1910) *
                          C2709 -
                      (C80690 * C10961 + C80243 * C11609 + C80689 * C1390 +
                       C92351 * C1789 + C80688 * C1389 + C92350 * C1788) *
                          C2850 -
                      (C80690 * C11197 + C80243 * C11768 + C80689 * C1541 +
                       C92351 * C1910 + C80688 * C1540 + C92350 * C1909) *
                          C2710) *
                         C92310 +
                     ((C80718 + C80717 + C80716) * C2849 +
                      (C80906 + C80907 + C80908) * C2709 -
                      (C83922 + C83921 + C83920) * C2850 -
                      (C84137 + C84138 + C84139) * C2710) *
                         C92067) *
                        C92137 * C92099 * C1983 +
                    (((C83920 + C83921 + C83922) * C2850 -
                      ((C80908 + C80907 + C80906) * C2709 +
                       (C80716 + C80717 + C80718) * C2849) +
                      (C84139 + C84138 + C84137) * C2710) *
                         C92310 +
                     ((C80688 * C1387 + C92350 * C1786 + C80689 * C1392 +
                       C92351 * C1791 + C80690 * C12840 + C80243 * C13515) *
                          C2850 -
                      ((C80909 + C80910 + C80911) * C2709 +
                       (C80724 + C80723 + C80722) * C2849) +
                      (C80688 * C1538 + C92350 * C1913 + C80689 * C1543 +
                       C92351 * C1914 + C80690 * C13078 + C80243 * C13741) *
                          C2710) *
                         C92067) *
                        C92137 * C92099 * C1984)) /
                  (p * q * std::sqrt(p + q));
    d2eexx[69] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C89875 * C107 + C92310 * C113 + C89868 * C108 + C92067 * C114) *
               C104 +
           (C89875 * C117 + C92310 * C125 + C89868 * C118 + C92067 * C126) *
               C93 -
           (C89868 * C109 + C92067 * C115 + C89875 * C108 + C92310 * C114) *
               C105 -
           (C89868 * C119 + C92067 * C127 + C89875 * C118 + C92310 * C126) *
               C94 +
           (C89875 * C109 + C92310 * C115 + C89868 * C110 + C92067 * C116) *
               C106 +
           (C89875 * C119 + C92310 * C127 + C89868 * C120 + C92067 * C128) *
               C95) *
              C92137 * C92350 +
          ((C51595 + C51596) * C104 + (C51597 + C51598) * C93 -
           (C53783 + C53784) * C105 - (C53785 + C53786) * C94 +
           (C89875 * C1387 + C92310 * C1399 + C89868 * C1386 + C92067 * C1398) *
               C106 +
           (C89875 * C1395 + C92310 * C1411 + C89868 * C1394 + C92067 * C1410) *
               C95) *
              C92137 * C92351 +
          ((C51606 + C51605) * C104 + (C51604 + C51603) * C93 -
           (C89868 * C1392 + C92067 * C1404 + C89875 * C1391 + C92310 * C1403) *
               C105 -
           (C89868 * C1408 + C92067 * C1416 + C89875 * C1407 + C92310 * C1415) *
               C94 +
           (C89875 * C1392 + C92310 * C1404 + C89868 * C1393 + C92067 * C1405) *
               C106 +
           (C89875 * C1408 + C92310 * C1416 + C89868 * C1409 + C92067 * C1417) *
               C95) *
              C92137 * C80243) *
         C92110 * C92099) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C89875 * C107 + C92310 * C113 + C89868 * C108 + C92067 * C114) *
                C801 +
            (C89875 * C117 + C92310 * C125 + C89868 * C118 + C92067 * C126) *
                C92078) *
               C92137 * C92350 +
           ((C51595 + C51596) * C801 + (C51597 + C51598) * C92078) * C92137 *
               C92351 +
           ((C51606 + C51605) * C801 + (C51604 + C51603) * C92078) * C92137 *
               C80243) *
              C92110 * C798 -
          (((C51599 + C51600) * C92078 + (C51601 + C51602) * C801) * C92137 *
               C80243 +
           C54992 * C92137 * C92351 +
           ((C45576 + C45575) * C92078 + (C45574 + C45573) * C801) * C92137 *
               C92350) *
              C92110 * C799 +
          (C45589 * C92137 * C92350 +
           ((C48896 + C48895) * C801 + (C48894 + C48893) * C92078) * C92137 *
               C92351 +
           ((C89875 * C5775 + C92310 * C5785 + C89868 * C5776 +
             C92067 * C5786) *
                C801 +
            (C89875 * C5787 + C92310 * C5793 + C89868 * C5788 +
             C92067 * C5794) *
                C92078) *
               C92137 * C80243) *
              C92110 * C800)) /
            (p * q * std::sqrt(p + q));
    d2eexy[69] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C89875 * C107 + C92310 * C113 + C89868 * C108 + C92067 * C114) *
                C181 +
            (C89875 * C182 + C92310 * C188 + C89868 * C183 + C92067 * C189) *
                C92099) *
               C92137 * C92350 +
           ((C51595 + C51596) * C181 + (C51717 + C51718) * C92099) * C92137 *
               C92351 +
           ((C51606 + C51605) * C181 + (C51722 + C51721) * C92099) * C92137 *
               C80243) *
              C93 -
          (((C89868 * C1474 + C92067 * C1482 + C89875 * C1473 +
             C92310 * C1481) *
                C92099 +
            (C89868 * C1392 + C92067 * C1404 + C89875 * C1391 +
             C92310 * C1403) *
                C181) *
               C92137 * C80243 +
           ((C53921 + C53922) * C92099 + (C53783 + C53784) * C181) * C92137 *
               C92351 +
           ((C89868 * C184 + C92067 * C190 + C89875 * C183 + C92310 * C189) *
                C92099 +
            (C89868 * C109 + C92067 * C115 + C89875 * C108 + C92310 * C114) *
                C181) *
               C92137 * C92350) *
              C94 +
          (((C89875 * C109 + C92310 * C115 + C89868 * C110 + C92067 * C116) *
                C181 +
            (C89875 * C184 + C92310 * C190 + C89868 * C185 + C92067 * C191) *
                C92099) *
               C92137 * C92350 +
           ((C89875 * C1387 + C92310 * C1399 + C89868 * C1386 +
             C92067 * C1398) *
                C181 +
            (C89875 * C1469 + C92310 * C1477 + C89868 * C1468 +
             C92067 * C1476) *
                C92099) *
               C92137 * C92351 +
           ((C89875 * C1392 + C92310 * C1404 + C89868 * C1393 +
             C92067 * C1405) *
                C181 +
            (C89875 * C1474 + C92310 * C1482 + C89868 * C1475 +
             C92067 * C1483) *
                C92099) *
               C92137 * C80243) *
              C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C89875 * C107 + C92310 * C113 + C89868 * C108 + C92067 * C114) *
               C884 +
           (C89875 * C182 + C92310 * C188 + C89868 * C183 + C92067 * C189) *
               C798 -
           (C45574 + C45573) * C885 - (C45676 + C45677) * C799 + C45585 * C886 +
           C45682 * C800) *
              C92137 * C92350 +
          ((C51595 + C51596) * C884 + (C51717 + C51718) * C798 - C54986 * C885 -
           C55123 * C799 + (C48896 + C48895) * C886 +
           (C49009 + C49010) * C800) *
              C92137 * C92351 +
          ((C51606 + C51605) * C884 + (C51722 + C51721) * C798 -
           (C51601 + C51602) * C885 - (C51719 + C51720) * C799 +
           (C89875 * C5775 + C92310 * C5785 + C89868 * C5776 + C92067 * C5786) *
               C886 +
           (C89875 * C5873 + C92310 * C5879 + C89868 * C5874 + C92067 * C5880) *
               C800) *
              C92137 * C80243) *
         C92078 * C92110) /
            (p * q * std::sqrt(p + q));
    d2eexz[69] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C89875 * C107 + C92310 * C113 + C89868 * C108 + C92067 * C114) *
                C244 +
            (C89875 * C245 + C92310 * C251 + C89868 * C246 + C92067 * C252) *
                C92110) *
               C92137 * C92350 +
           ((C51595 + C51596) * C244 + (C51834 + C51833) * C92110) * C92137 *
               C92351 +
           ((C51606 + C51605) * C244 + (C51835 + C51836) * C92110) * C92137 *
               C80243) *
              C92099 * C93 -
          (((C89868 * C1543 + C92067 * C1551 + C89875 * C1542 +
             C92310 * C1550) *
                C92110 +
            (C89868 * C1392 + C92067 * C1404 + C89875 * C1391 +
             C92310 * C1403) *
                C244) *
               C92137 * C80243 +
           ((C54058 + C54057) * C92110 + (C53783 + C53784) * C244) * C92137 *
               C92351 +
           ((C89868 * C247 + C92067 * C253 + C89875 * C246 + C92310 * C252) *
                C92110 +
            (C89868 * C109 + C92067 * C115 + C89875 * C108 + C92310 * C114) *
                C244) *
               C92137 * C92350) *
              C92099 * C94 +
          (((C89875 * C109 + C92310 * C115 + C89868 * C110 + C92067 * C116) *
                C244 +
            (C89875 * C247 + C92310 * C253 + C89868 * C248 + C92067 * C254) *
                C92110) *
               C92137 * C92350 +
           ((C89875 * C1387 + C92310 * C1399 + C89868 * C1386 +
             C92067 * C1398) *
                C244 +
            (C89875 * C1538 + C92310 * C1546 + C89868 * C1537 +
             C92067 * C1545) *
                C92110) *
               C92137 * C92351 +
           ((C89875 * C1392 + C92310 * C1404 + C89868 * C1393 +
             C92067 * C1405) *
                C244 +
            (C89875 * C1543 + C92310 * C1551 + C89868 * C1544 +
             C92067 * C1552) *
                C92110) *
               C92137 * C80243) *
              C92099 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C89875 * C107 + C92310 * C113 + C89868 * C108 + C92067 * C114) *
                C244 +
            (C89875 * C245 + C92310 * C251 + C89868 * C246 + C92067 * C252) *
                C92110) *
               C92137 * C92350 +
           ((C51595 + C51596) * C244 + (C51834 + C51833) * C92110) * C92137 *
               C92351 +
           ((C51606 + C51605) * C244 + (C51835 + C51836) * C92110) * C92137 *
               C80243) *
              C798 -
          (((C51838 + C51837) * C92110 + (C51601 + C51602) * C244) * C92137 *
               C80243 +
           (C55255 * C92110 + C54986 * C244) * C92137 * C92351 +
           ((C45771 + C45770) * C92110 + (C45574 + C45573) * C244) * C92137 *
               C92350) *
              C799 +
          (C45778 * C92137 * C92350 +
           ((C48896 + C48895) * C244 + (C49120 + C49119) * C92110) * C92137 *
               C92351 +
           ((C89875 * C5775 + C92310 * C5785 + C89868 * C5776 +
             C92067 * C5786) *
                C244 +
            (C89875 * C5959 + C92310 * C5965 + C89868 * C5960 +
             C92067 * C5966) *
                C92110) *
               C92137 * C80243) *
              C800) *
         C92078) /
            (p * q * std::sqrt(p + q));
    d2eeyx[69] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C307 * C107 + C92137 * C308) * C104 +
                      (C307 * C117 + C92137 * C314) * C93 - C337 * C105 -
                      C338 * C94 + C339 * C106 + C340 * C95) *
                         C92350 +
                     (C11327 * C104 + C11328 * C93 - C2934 * C105 -
                      C2935 * C94 + C2936 * C106 + C2937 * C95) *
                         C92351 +
                     (C11329 * C104 + C11330 * C93 - C9748 * C105 -
                      C9749 * C94 + C9750 * C106 + C9751 * C95) *
                         C80243) *
                        C92310 +
                    ((C337 * C104 + C338 * C93 - C339 * C105 - C340 * C94 +
                      C341 * C106 + C342 * C95) *
                         C92350 +
                     (C2934 * C104 + C2935 * C93 - C2936 * C105 - C2937 * C94 +
                      C2938 * C106 + C2939 * C95) *
                         C92351 +
                     (C9748 * C104 + C9749 * C93 - C9750 * C105 - C9751 * C94 +
                      (C307 * C1393 + C92137 * C1610) * C106 +
                      (C307 * C1409 + C92137 * C1618) * C95) *
                         C80243) *
                        C92067) *
                   C92110 * C92099) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((((C307 * C107 + C92137 * C308) * C801 +
                       (C307 * C117 + C92137 * C314) * C92078) *
                          C92350 +
                      (C11336 + C11337) * C92351 + C11344 * C80243) *
                         C92310 +
                     ((C337 * C801 + C338 * C92078) * C92350 +
                      (C11315 + C11316) * C92351 + C11331 * C80243) *
                         C92067) *
                        C92110 * C798 -
                    (((C14199 + C14198) * C80243 + (C14197 + C14196) * C92351 +
                      (C2213 * C92078 + C2212 * C801) * C92350) *
                         C92067 +
                     ((C14207 + C14206) * C80243 + (C14205 + C14204) * C92351 +
                      ((C307 * C813 + C92137 * C1030) * C92078 +
                       (C307 * C805 + C92137 * C1022) * C801) *
                          C92350) *
                         C92310) *
                        C92110 * C799 +
                    ((((C307 * C806 + C92137 * C1023) * C801 +
                       (C307 * C822 + C92137 * C1031) * C92078) *
                          C92350 +
                      ((C307 * C5772 + C92137 * C6042) * C801 +
                       (C307 * C5778 + C92137 * C6048) * C92078) *
                          C92351 +
                      ((C307 * C5775 + C92137 * C6044) * C801 +
                       (C307 * C5787 + C92137 * C6050) * C92078) *
                          C80243) *
                         C92310 +
                     (((C307 * C807 + C92137 * C1024) * C801 +
                       (C307 * C823 + C92137 * C1032) * C92078) *
                          C92350 +
                      ((C307 * C5771 + C92137 * C6041) * C801 +
                       (C307 * C5777 + C92137 * C6047) * C92078) *
                          C92351 +
                      ((C307 * C5776 + C92137 * C6046) * C801 +
                       (C307 * C5788 + C92137 * C6052) * C92078) *
                          C80243) *
                         C92067) *
                        C92110 * C800)) /
                      (p * q * std::sqrt(p + q));
    d2eeyy[69] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92137 * C308) * C181 +
             (C307 * C182 + C92137 * C394) * C92099) *
                C92350 +
            (C11423 + C11440) * C92351 + C11444 * C80243) *
               C92310 +
           ((C401 + C417) * C92350 + C13308 * C92351 + C11429 * C80243) *
               C92067) *
              C93 -
          (((C9835 + C9831) * C80243 + C23393 * C92351 +
            (C418 + C404) * C92350) *
               C92067 +
           (C13309 * C80243 + C13310 * C92351 + (C417 + C401) * C92350) *
               C92310) *
              C94 +
          ((C421 * C92350 + C20118 * C92351 + (C9831 + C9835) * C80243) *
               C92310 +
           (C422 * C92350 + (C3013 + C3021) * C92351 +
            ((C307 * C1393 + C92137 * C1610) * C181 +
             (C307 * C1475 + C92137 * C1676) * C92099) *
                C80243) *
               C92067) *
              C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C307 * C107 + C92137 * C308) * C884 +
            (C307 * C182 + C92137 * C394) * C798 -
            (C307 * C805 + C92137 * C1022) * C885 -
            (C307 * C890 + C92137 * C1085) * C799 +
            (C307 * C806 + C92137 * C1023) * C886 +
            (C307 * C891 + C92137 * C1086) * C800) *
               C92350 +
           (C11327 * C884 + C11436 * C798 - C14200 * C885 - C14318 * C799 +
            (C307 * C5772 + C92137 * C6042) * C886 +
            (C307 * C5870 + C92137 * C6128) * C800) *
               C92351 +
           (C11329 * C884 + C11437 * C798 - C14202 * C885 - C14319 * C799 +
            (C307 * C5775 + C92137 * C6044) * C886 +
            (C307 * C5873 + C92137 * C6130) * C800) *
               C80243) *
              C92310 +
          ((C337 * C884 + C413 * C798 - C2212 * C885 - C2300 * C799 +
            (C307 * C807 + C92137 * C1024) * C886 +
            (C307 * C892 + C92137 * C1088) * C800) *
               C92350 +
           (C2934 * C884 + C3016 * C798 - C12183 * C885 - C12296 * C799 +
            (C307 * C5771 + C92137 * C6041) * C886 +
            (C307 * C5869 + C92137 * C6127) * C800) *
               C92351 +
           (C9748 * C884 + C9832 * C798 - C12185 * C885 - C12297 * C799 +
            (C307 * C5776 + C92137 * C6046) * C886 +
            (C307 * C5874 + C92137 * C6132) * C800) *
               C80243) *
              C92067) *
         C92078 * C92110) /
            (p * q * std::sqrt(p + q));
    d2eeyz[69] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92137 * C308) * C244 +
             (C307 * C245 + C92137 * C474) * C92110) *
                C92350 +
            (C11327 * C244 + C11531 * C92110) * C92351 +
            (C11329 * C244 + C11532 * C92110) * C80243) *
               C92310 +
           ((C481 + C497) * C92350 + (C9910 + C9911) * C92351 +
            (C9912 + C9922) * C80243) *
               C92067) *
              C92099 * C93 -
          (((C9923 + C9917) * C80243 + (C9918 + C9919) * C92351 +
            (C498 + C484) * C92350) *
               C92067 +
           ((C9922 + C9912) * C80243 + (C9911 + C9910) * C92351 +
            (C497 + C481) * C92350) *
               C92310) *
              C92099 * C94 +
          ((C501 * C92350 + C20196 * C92351 + (C9917 + C9923) * C80243) *
               C92310 +
           (C502 * C92350 + (C20198 + C20197) * C92351 +
            ((C307 * C1393 + C92137 * C1610) * C244 +
             (C307 * C1544 + C92137 * C1734) * C92110) *
                C80243) *
               C92067) *
              C92099 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92137 * C308) * C244 +
             (C307 * C245 + C92137 * C474) * C92110) *
                C92350 +
            (C11327 * C244 + C11531 * C92110) * C92351 +
            (C11329 * C244 + C11532 * C92110) * C80243) *
               C92310 +
           ((C481 + C497) * C92350 + (C9910 + C9911) * C92351 +
            (C9912 + C9922) * C80243) *
               C92067) *
              C798 -
          (((C12407 + C12401) * C80243 + (C12408 + C12404) * C92351 +
            (C2387 + C2381) * C92350) *
               C92067 +
           ((C14427 * C92110 + C14202 * C244) * C80243 +
            (C14426 * C92110 + C14200 * C244) * C92351 +
            ((C307 * C956 + C92137 * C1146) * C92110 +
             (C307 * C805 + C92137 * C1022) * C244) *
                C92350) *
               C92310) *
              C799 +
          ((((C307 * C806 + C92137 * C1023) * C244 +
             (C307 * C957 + C92137 * C1147) * C92110) *
                C92350 +
            ((C307 * C5772 + C92137 * C6042) * C244 +
             (C307 * C5958 + C92137 * C6207) * C92110) *
                C92351 +
            ((C307 * C5775 + C92137 * C6044) * C244 +
             (C307 * C5959 + C92137 * C6209) * C92110) *
                C80243) *
               C92310 +
           (((C307 * C807 + C92137 * C1024) * C244 +
             (C307 * C958 + C92137 * C1148) * C92110) *
                C92350 +
            ((C307 * C5771 + C92137 * C6041) * C244 +
             (C307 * C5957 + C92137 * C6210) * C92110) *
                C92351 +
            ((C307 * C5776 + C92137 * C6046) * C244 +
             (C307 * C5960 + C92137 * C6212) * C92110) *
                C80243) *
               C92067) *
              C800) *
         C92078) /
            (p * q * std::sqrt(p + q));
    d2eezx[69] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((C80688 * C107 + C92350 * C555 + C80689 * C1389 +
                      C92351 * C1788 + C80690 * C1390 + C80243 * C1789) *
                         C104 +
                     (C80688 * C117 + C92350 * C561 + C80689 * C1397 +
                      C92351 * C1796 + C80690 * C1406 + C80243 * C1797) *
                         C93 -
                     (C80716 + C80717 + C80718) * C105 -
                     (C80719 + C80720 + C80721) * C94 +
                     (C80722 + C80723 + C80724) * C106 +
                     (C80725 + C80726 + C80727) * C95) *
                        C92310 +
                    ((C80718 + C80717 + C80716) * C104 +
                     (C80721 + C80720 + C80719) * C93 -
                     (C80724 + C80723 + C80722) * C105 -
                     (C80727 + C80726 + C80725) * C94 +
                     (C80688 * C110 + C92350 * C558 + C80689 * C1386 +
                      C92351 * C1785 + C80690 * C1393 + C80243 * C1792) *
                         C106 +
                     (C80688 * C120 + C92350 * C564 + C80689 * C1394 +
                      C92351 * C1793 + C80690 * C1409 + C80243 * C1800) *
                         C95) *
                        C92067) *
                   C92137 * C92110 * C92099) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C80688 * C107 + C92350 * C555 + C80689 * C1389 +
                       C92351 * C1788 + C80690 * C1390 + C80243 * C1789) *
                          C801 +
                      (C80688 * C117 + C92350 * C561 + C80689 * C1397 +
                       C92351 * C1796 + C80690 * C1406 + C80243 * C1797) *
                          C92078) *
                         C92310 +
                     ((C80718 + C80717 + C80716) * C801 +
                      (C80721 + C80720 + C80719) * C92078) *
                         C92067) *
                        C92137 * C92110 * C798 -
                    (((C80690 * C5784 + C80243 * C6296 + C80689 * C3440 +
                       C92351 * C3880 + C80688 * C812 + C92350 * C1211) *
                          C92078 +
                      (C80690 * C5774 + C80243 * C6290 + C80689 * C3432 +
                       C92351 * C3876 + C80688 * C804 + C92350 * C1203) *
                          C801) *
                         C92067 +
                     ((C80690 * C5783 + C80243 * C6295 + C80689 * C3439 +
                       C92351 * C3879 + C80688 * C813 + C92350 * C1212) *
                          C92078 +
                      (C80690 * C5773 + C80243 * C6289 + C80689 * C3431 +
                       C92351 * C3875 + C80688 * C805 + C92350 * C1204) *
                          C801) *
                         C92310) *
                        C92137 * C92110 * C799 +
                    (((C80688 * C806 + C92350 * C1205 + C80689 * C5772 +
                       C92351 * C6288 + C80690 * C5775 + C80243 * C6291) *
                          C801 +
                      (C80688 * C822 + C92350 * C1213 + C80689 * C5778 +
                       C92351 * C6294 + C80690 * C5787 + C80243 * C6297) *
                          C92078) *
                         C92310 +
                     ((C80688 * C807 + C92350 * C1206 + C80689 * C5771 +
                       C92351 * C6287 + C80690 * C5776 + C80243 * C6292) *
                          C801 +
                      (C80688 * C823 + C92350 * C1214 + C80689 * C5777 +
                       C92351 * C6293 + C80690 * C5788 + C80243 * C6298) *
                          C92078) *
                         C92067) *
                        C92137 * C92110 * C800)) /
                      (p * q * std::sqrt(p + q));
    d2eezy[69] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C80688 * C107 + C92350 * C555 + C80689 * C1389 +
                       C92351 * C1788 + C80690 * C1390 + C80243 * C1789) *
                          C181 +
                      (C80688 * C182 + C92350 * C641 + C80689 * C1471 +
                       C92351 * C1854 + C80690 * C1472 + C80243 * C1855) *
                          C92099) *
                         C92310 +
                     ((C80718 + C80717 + C80716) * C181 +
                      (C80814 + C80815 + C80816) * C92099) *
                         C92067) *
                        C92137 * C93 -
                    (((C80817 + C80818 + C80819) * C92099 +
                      (C80724 + C80723 + C80722) * C181) *
                         C92067 +
                     ((C80816 + C80815 + C80814) * C92099 +
                      (C80716 + C80717 + C80718) * C181) *
                         C92310) *
                        C92137 * C94 +
                    (((C80722 + C80723 + C80724) * C181 +
                      (C80819 + C80818 + C80817) * C92099) *
                         C92310 +
                     ((C80688 * C110 + C92350 * C558 + C80689 * C1386 +
                       C92351 * C1785 + C80690 * C1393 + C80243 * C1792) *
                          C181 +
                      (C80688 * C185 + C92350 * C644 + C80689 * C1468 +
                       C92351 * C1851 + C80690 * C1475 + C80243 * C1858) *
                          C92099) *
                         C92067) *
                        C92137 * C95) *
                   C92110) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((C80688 * C107 + C92350 * C555 + C80689 * C1389 +
                      C92351 * C1788 + C80690 * C1390 + C80243 * C1789) *
                         C884 +
                     (C80688 * C182 + C92350 * C641 + C80689 * C1471 +
                      C92351 * C1854 + C80690 * C1472 + C80243 * C1855) *
                         C798 -
                     (C80690 * C5773 + C80243 * C6289 + C80689 * C3431 +
                      C92351 * C3875 + C80688 * C805 + C92350 * C1204) *
                         C885 -
                     (C80690 * C5871 + C80243 * C6375 + C80689 * C3513 +
                      C92351 * C3949 + C80688 * C890 + C92350 * C1267) *
                         C799 +
                     (C80688 * C806 + C92350 * C1205 + C80689 * C5772 +
                      C92351 * C6288 + C80690 * C5775 + C80243 * C6291) *
                         C886 +
                     (C80688 * C891 + C92350 * C1268 + C80689 * C5870 +
                      C92351 * C6374 + C80690 * C5873 + C80243 * C6377) *
                         C800) *
                        C92310 +
                    ((C80718 + C80717 + C80716) * C884 +
                     (C80814 + C80815 + C80816) * C798 -
                     (C80690 * C5774 + C80243 * C6290 + C80689 * C3432 +
                      C92351 * C3876 + C80688 * C804 + C92350 * C1203) *
                         C885 -
                     (C80690 * C5872 + C80243 * C6376 + C80689 * C3514 +
                      C92351 * C3950 + C80688 * C889 + C92350 * C1269) *
                         C799 +
                     (C80688 * C807 + C92350 * C1206 + C80689 * C5771 +
                      C92351 * C6287 + C80690 * C5776 + C80243 * C6292) *
                         C886 +
                     (C80688 * C892 + C92350 * C1270 + C80689 * C5869 +
                      C92351 * C6373 + C80690 * C5874 + C80243 * C6378) *
                         C800) *
                        C92067) *
                   C92137 * C92078 * C92110) /
                      (p * q * std::sqrt(p + q));
    d2eezz[69] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C80688 * C107 + C92350 * C555 + C80689 * C1389 +
                       C92351 * C1788 + C80690 * C1390 + C80243 * C1789) *
                          C244 +
                      (C80688 * C245 + C92350 * C719 + C80689 * C1540 +
                       C92351 * C1909 + C80690 * C1541 + C80243 * C1910) *
                          C92110) *
                         C92310 +
                     ((C80718 + C80717 + C80716) * C244 +
                      (C80906 + C80907 + C80908) * C92110) *
                         C92067) *
                        C92137 * C92099 * C93 -
                    (((C80909 + C80910 + C80911) * C92110 +
                      (C80724 + C80723 + C80722) * C244) *
                         C92067 +
                     ((C80908 + C80907 + C80906) * C92110 +
                      (C80716 + C80717 + C80718) * C244) *
                         C92310) *
                        C92137 * C92099 * C94 +
                    (((C80722 + C80723 + C80724) * C244 +
                      (C80911 + C80910 + C80909) * C92110) *
                         C92310 +
                     ((C80688 * C110 + C92350 * C558 + C80689 * C1386 +
                       C92351 * C1785 + C80690 * C1393 + C80243 * C1792) *
                          C244 +
                      (C80688 * C248 + C92350 * C722 + C80689 * C1537 +
                       C92351 * C1915 + C80690 * C1544 + C80243 * C1916) *
                          C92110) *
                         C92067) *
                        C92137 * C92099 * C95)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C80688 * C107 + C92350 * C555 + C80689 * C1389 +
                       C92351 * C1788 + C80690 * C1390 + C80243 * C1789) *
                          C244 +
                      (C80688 * C245 + C92350 * C719 + C80689 * C1540 +
                       C92351 * C1909 + C80690 * C1541 + C80243 * C1910) *
                          C92110) *
                         C92310 +
                     ((C80718 + C80717 + C80716) * C244 +
                      (C80906 + C80907 + C80908) * C92110) *
                         C92067) *
                        C92137 * C798 -
                    (((C80690 * C5956 + C80243 * C6454 + C80689 * C3588 +
                       C92351 * C4020 + C80688 * C955 + C92350 * C1327) *
                          C92110 +
                      (C80690 * C5774 + C80243 * C6290 + C80689 * C3432 +
                       C92351 * C3876 + C80688 * C804 + C92350 * C1203) *
                          C244) *
                         C92067 +
                     ((C80690 * C5955 + C80243 * C6453 + C80689 * C3587 +
                       C92351 * C4019 + C80688 * C956 + C92350 * C1328) *
                          C92110 +
                      (C80690 * C5773 + C80243 * C6289 + C80689 * C3431 +
                       C92351 * C3875 + C80688 * C805 + C92350 * C1204) *
                          C244) *
                         C92310) *
                        C92137 * C799 +
                    (((C80688 * C806 + C92350 * C1205 + C80689 * C5772 +
                       C92351 * C6288 + C80690 * C5775 + C80243 * C6291) *
                          C244 +
                      (C80688 * C957 + C92350 * C1329 + C80689 * C5958 +
                       C92351 * C6455 + C80690 * C5959 + C80243 * C6456) *
                          C92110) *
                         C92310 +
                     ((C80688 * C807 + C92350 * C1206 + C80689 * C5771 +
                       C92351 * C6287 + C80690 * C5776 + C80243 * C6292) *
                          C244 +
                      (C80688 * C958 + C92350 * C1330 + C80689 * C5957 +
                       C92351 * C6457 + C80690 * C5960 + C80243 * C6458) *
                          C92110) *
                         C92067) *
                        C92137 * C800) *
                   C92078) /
                      (p * q * std::sqrt(p + q));
    d2eexx[70] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C31262 * C107 + C31257 * C113 + C31263 * C108 +
                       C31258 * C114 + C31264 * C109 + C31259 * C115) *
                          C1987 +
                      (C31262 * C117 + C31257 * C125 + C31263 * C118 +
                       C31258 * C126 + C31264 * C119 + C31259 * C127) *
                          C1983 -
                      (C31264 * C110 + C31259 * C116 + C31263 * C109 +
                       C31258 * C115 + C31262 * C108 + C31257 * C114) *
                          C1988 -
                      (C31264 * C120 + C31259 * C128 + C31263 * C119 +
                       C31258 * C127 + C31262 * C118 + C31257 * C126) *
                          C1984) *
                         C92137 * C60959 +
                     ((C62408 + C62409 + C62410) * C1987 +
                      (C62411 + C62412 + C62413) * C1983 -
                      (C31264 * C1386 + C31259 * C1398 + C31263 * C1387 +
                       C31258 * C1399 + C31262 * C1388 + C31257 * C1400) *
                          C1988 -
                      (C31264 * C1394 + C31259 * C1410 + C31263 * C1395 +
                       C31258 * C1411 + C31262 * C1396 + C31257 * C1412) *
                          C1984) *
                         C92137 * C92212) *
                        C92110 * C1985 +
                    (((C33460 + C33459 + C33458) * C1988 -
                      ((C32047 + C32046 + C32045) * C1983 +
                       (C32044 + C32043 + C32042) * C1987) +
                      (C33463 + C33462 + C33461) * C1984) *
                         C92137 * C60959 +
                     ((C31262 * C3432 + C31257 * C3436 + C31263 * C3433 +
                       C31258 * C3437 + C31264 * C3434 + C31259 * C3438) *
                          C1988 -
                      ((C35354 + C35355 + C35356) * C1983 +
                       (C35357 + C35358 + C35359) * C1987) +
                      (C31262 * C3440 + C31257 * C3444 + C31263 * C3441 +
                       C31258 * C3445 + C31264 * C3442 + C31259 * C3446) *
                          C1984) *
                         C92137 * C92212) *
                        C92110 * C1986)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((((C36216 * C107 + C92062 * C113) * C1987 +
                       (C36216 * C117 + C92062 * C125) * C1983 -
                       (C36216 * C108 + C92062 * C114) * C1988 -
                       (C36216 * C118 + C92062 * C126) * C1984) *
                          C4099 +
                      (C37710 + C37711 - C37734 - C37735) * C4100 +
                      (C37716 + C37717 - C37736 - C37737) * C4101) *
                         C60959 +
                     ((C42870 + C42871 - C42886 - C42887) * C4099 +
                      (C41952 + C41953 - C41968 - C41969) * C4100 +
                      (C58249 + C58250 - C58257 - C58258) * C4101) *
                         C92212) *
                        C92110 * C1985 +
                    (((C37734 - (C37711 + C37710) + C37735) * C4099 +
                      (C37736 - (C37717 + C37716) + C37737) * C4100 +
                      (C37738 - (C37723 + C37722) + C37739) * C4101) *
                         C60959 +
                     ((C41968 - (C41953 + C41952) + C41969) * C4099 +
                      (C58257 - (C58250 + C58249) + C58258) * C4100 +
                      ((C36216 * C8537 + C92062 * C8539) * C1988 -
                       (C38972 * C1983 + C38973 * C1987) +
                       (C36216 * C8541 + C92062 * C8543) * C1984) *
                          C4101) *
                         C92212) *
                        C92110 * C1986)) /
                      (p * q * std::sqrt(p + q));
    d2eexy[70] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C31262 * C107 + C31257 * C113 + C31263 * C108 +
                       C31258 * C114 + C31264 * C109 + C31259 * C115) *
                          C2059 +
                      (C31262 * C182 + C31257 * C188 + C31263 * C183 +
                       C31258 * C189 + C31264 * C184 + C31259 * C190) *
                          C1985 -
                      (C32044 + C32043 + C32042) * C2060 -
                      (C32140 + C32141 + C32142) * C1986) *
                         C92137 * C60959 +
                     ((C62408 + C62409 + C62410) * C2059 +
                      (C62506 + C62507 + C62508) * C1985 -
                      (C35357 + C35358 + C35359) * C2060 -
                      (C35466 + C35465 + C35464) * C1986) *
                         C92137 * C92212) *
                        C1983 +
                    (((C33460 + C33459 + C33458) * C2060 -
                      ((C31264 * C185 + C31259 * C191 + C31263 * C184 +
                        C31258 * C190 + C31262 * C183 + C31257 * C189) *
                           C1985 +
                       (C31264 * C110 + C31259 * C116 + C31263 * C109 +
                        C31258 * C115 + C31262 * C108 + C31257 * C114) *
                           C2059) +
                      (C33568 + C33569 + C33570) * C1986) *
                         C92137 * C60959 +
                     ((C31262 * C3432 + C31257 * C3436 + C31263 * C3433 +
                       C31258 * C3437 + C31264 * C3434 + C31259 * C3438) *
                          C2060 -
                      ((C31264 * C1468 + C31259 * C1476 + C31263 * C1469 +
                        C31258 * C1477 + C31262 * C1470 + C31257 * C1478) *
                           C1985 +
                       (C31264 * C1386 + C31259 * C1398 + C31263 * C1387 +
                        C31258 * C1399 + C31262 * C1388 + C31257 * C1400) *
                           C2059) +
                      (C31262 * C3514 + C31257 * C3518 + C31263 * C3515 +
                       C31258 * C3519 + C31264 * C3516 + C31259 * C3520) *
                          C1986) *
                         C92137 * C92212) *
                        C1984) *
                   C92110) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((((C36216 * C107 + C92062 * C113) * C2059 +
                       (C36216 * C182 + C92062 * C188) * C1985 -
                       C36692 * C2060 - C36770 * C1986) *
                          C4099 +
                      (C36692 * C2059 + C36770 * C1985 - C36694 * C2060 -
                       C36771 * C1986) *
                          C4100 +
                      (C36694 * C2059 + C36771 * C1985 - C36696 * C2060 -
                       C36772 * C1986) *
                          C4101) *
                         C60959 +
                     ((C43923 + C43924 - C43925 - C43926) * C4099 +
                      (C43927 + C43928 - C43929 - C43930) * C4100 +
                      (C60132 + C60133 - C60134 - C60135) * C4101) *
                         C92212) *
                        C1983 +
                    (((C37728 * C2060 -
                       ((C36216 * C183 + C92062 * C189) * C1985 +
                        (C36216 * C108 + C92062 * C114) * C2059) +
                       C37812 * C1986) *
                          C4099 +
                      (C37730 * C2060 - (C37812 * C1985 + C37728 * C2059) +
                       C37813 * C1986) *
                          C4100 +
                      (C37732 * C2060 - (C37813 * C1985 + C37730 * C2059) +
                       C37814 * C1986) *
                          C4101) *
                         C60959 +
                     ((C41964 * C2060 - (C42999 * C1985 + C42882 * C2059) +
                       C42074 * C1986) *
                          C4099 +
                      (C58255 * C2060 - (C42074 * C1985 + C41964 * C2059) +
                       C58359 * C1986) *
                          C4100 +
                      ((C36216 * C8537 + C92062 * C8539) * C2060 -
                       (C58359 * C1985 + C58255 * C2059) +
                       (C36216 * C8667 + C92062 * C8669) * C1986) *
                          C4101) *
                         C92212) *
                        C1984) *
                   C92110) /
                      (p * q * std::sqrt(p + q));
    d2eexz[70] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((((C31262 * C107 + C31257 * C113 + C31263 * C108 +
                        C31258 * C114 + C31264 * C109 + C31259 * C115) *
                           C244 +
                       (C31262 * C245 + C31257 * C251 + C31263 * C246 +
                        C31258 * C252 + C31264 * C247 + C31259 * C253) *
                           C92110) *
                          C92137 * C60959 +
                      ((C62408 + C62409 + C62410) * C244 +
                       (C62600 + C62599 + C62598) * C92110) *
                          C92137 * C92212) *
                         C1985 -
                     (((C35571 + C35572 + C35573) * C92110 +
                       (C35357 + C35358 + C35359) * C244) *
                          C92137 * C92212 +
                      ((C32234 + C32233 + C32232) * C92110 +
                       (C32044 + C32043 + C32042) * C244) *
                          C92137 * C60959) *
                         C1986) *
                        C1983 +
                    ((((C33460 + C33459 + C33458) * C244 +
                       (C33675 + C33676 + C33677) * C92110) *
                          C92137 * C60959 +
                      ((C31262 * C3432 + C31257 * C3436 + C31263 * C3433 +
                        C31258 * C3437 + C31264 * C3434 + C31259 * C3438) *
                           C244 +
                       (C31262 * C3588 + C31257 * C3592 + C31263 * C3589 +
                        C31258 * C3593 + C31264 * C3590 + C31259 * C3594) *
                           C92110) *
                          C92137 * C92212) *
                         C1986 -
                     (((C31264 * C1537 + C31259 * C1545 + C31263 * C1538 +
                        C31258 * C1546 + C31262 * C1539 + C31257 * C1547) *
                           C92110 +
                       (C31264 * C1386 + C31259 * C1398 + C31263 * C1387 +
                        C31258 * C1399 + C31262 * C1388 + C31257 * C1400) *
                           C244) *
                          C92137 * C92212 +
                      ((C31264 * C248 + C31259 * C254 + C31263 * C247 +
                        C31258 * C253 + C31262 * C246 + C31257 * C252) *
                           C92110 +
                       (C31264 * C110 + C31259 * C116 + C31263 * C109 +
                        C31258 * C115 + C31262 * C108 + C31257 * C114) *
                           C244) *
                          C92137 * C60959) *
                         C1985) *
                        C1984)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((((C36216 * C107 + C92062 * C113) * C244 +
                        (C36216 * C245 + C92062 * C251) * C92110) *
                           C4099 +
                       (C36826 + C36842) * C4100 + C36846 * C4101) *
                          C60959 +
                      ((C41107 * C244 + C41316 * C92110) * C4099 +
                       (C40482 + C40483) * C4100 + C56926 * C4101) *
                          C92212) *
                         C1985 -
                     (((C56927 + C56928) * C4101 + (C40490 + C40491) * C4100 +
                       (C40483 + C40482) * C4099) *
                          C92212 +
                      ((C36844 + C36832) * C4101 + (C36843 + C36829) * C4100 +
                       (C36842 + C36826) * C4099) *
                          C60959) *
                         C1986) *
                        C1983 +
                    ((((C37881 + C37893) * C4099 + (C37884 + C37894) * C4100 +
                       (C37887 + C37895) * C4101) *
                          C60959 +
                      ((C42174 + C42182) * C4099 + (C58458 + C58462) * C4100 +
                       ((C36216 * C8537 + C92062 * C8539) * C244 +
                        (C36216 * C8781 + C92062 * C8783) * C92110) *
                           C4101) *
                          C92212) *
                         C1986 -
                     (((C58462 + C58458) * C4101 + (C42182 + C42174) * C4100 +
                       (C43104 * C92110 + C42882 * C244) * C4099) *
                          C92212 +
                      ((C37894 + C37884) * C4101 + (C37893 + C37881) * C4100 +
                       ((C36216 * C246 + C92062 * C252) * C92110 +
                        (C36216 * C108 + C92062 * C114) * C244) *
                           C4099) *
                          C60959) *
                         C1985) *
                        C1984)) /
                      (p * q * std::sqrt(p + q));
    d2eeyx[70] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92137 * C308) * C1987 +
             (C307 * C117 + C92137 * C314) * C1983 - C337 * C1988 -
             C338 * C1984) *
                C60959 +
            (C13193 + C13194 - C13195 - C13196) * C92212) *
               C31257 +
           ((C337 * C1987 + C338 * C1983 - C339 * C1988 - C340 * C1984) *
                C60959 +
            (C13201 + C13202 - C13203 - C13204) * C92212) *
               C31258 +
           ((C339 * C1987 + C340 * C1983 - C341 * C1988 - C342 * C1984) *
                C60959 +
            (C23291 + C23292 - C23293 - C23294) * C92212) *
               C31259) *
              C92110 * C1985 +
          (((C2212 * C1988 -
             ((C307 * C813 + C92137 * C1030) * C1983 +
              (C307 * C805 + C92137 * C1022) * C1987) +
             C2213 * C1984) *
                C60959 +
            (C12183 * C1988 - (C14201 * C1983 + C14200 * C1987) +
             C12184 * C1984) *
                C92212) *
               C31257 +
           ((C2214 * C1988 - (C2213 * C1983 + C2212 * C1987) + C2215 * C1984) *
                C60959 +
            (C22311 * C1988 - (C12184 * C1983 + C12183 * C1987) +
             C22312 * C1984) *
                C92212) *
               C31258 +
           ((C2216 * C1988 - (C2215 * C1983 + C2214 * C1987) + C2217 * C1984) *
                C60959 +
            ((C307 * C3434 + C92137 * C3664) * C1988 -
             (C22312 * C1983 + C22311 * C1987) +
             (C307 * C3442 + C92137 * C3668) * C1984) *
                C92212) *
               C31259) *
              C92110 * C1986)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C4326 * C107 + C4099 * C308 + C4327 * C805 + C4100 * C1022 +
             C4328 * C806 + C4101 * C1023) *
                C1987 +
            (C4326 * C117 + C4099 * C314 + C4327 * C813 + C4100 * C1030 +
             C4328 * C822 + C4101 * C1031) *
                C1983 -
            (C4354 + C4355 + C4356) * C1988 - (C4357 + C4358 + C4359) * C1984) *
               C60959 +
           ((C67562 + C67563 + C67564) * C1987 +
            (C67565 + C67566 + C67567) * C1983 -
            (C7885 + C7884 + C7883) * C1988 - (C7888 + C7887 + C7886) * C1984) *
               C92212) *
              C92062 * C92110 * C1985 +
          (((C6922 + C6923 + C6924) * C1988 -
            ((C4328 * C4886 + C4101 * C5222 + C4327 * C822 + C4100 * C1031 +
              C4326 * C813 + C4099 * C1030) *
                 C1983 +
             (C4328 * C4882 + C4101 * C5218 + C4327 * C806 + C4100 * C1023 +
              C4326 * C805 + C4099 * C1022) *
                 C1987) +
            (C6925 + C6926 + C6927) * C1984) *
               C60959 +
           ((C4326 * C3432 + C4099 * C3662 + C4327 * C5771 + C4100 * C6041 +
             C4328 * C8537 + C4101 * C8895) *
                C1988 -
            ((C4328 * C8540 + C4101 * C8896 + C4327 * C5778 + C4100 * C6048 +
              C4326 * C3439 + C4099 * C3665) *
                 C1983 +
             (C4328 * C8536 + C4101 * C8894 + C4327 * C5772 + C4100 * C6042 +
              C4326 * C3431 + C4099 * C3661) *
                 C1987) +
            (C4326 * C3440 + C4099 * C3666 + C4327 * C5777 + C4100 * C6047 +
             C4328 * C8541 + C4101 * C8897) *
                C1984) *
               C92212) *
              C92062 * C92110 * C1986)) /
            (p * q * std::sqrt(p + q));
    d2eeyy[70] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((((C307 * C107 + C92137 * C308) * C2059 +
                       (C307 * C182 + C92137 * C394) * C1985 -
                       (C307 * C805 + C92137 * C1022) * C2060 -
                       (C307 * C890 + C92137 * C1085) * C1986) *
                          C60959 +
                      (C14308 + C14309 - C14310 - C14320) * C92212) *
                         C31257 +
                     ((C2285 + C2286 - C2287 - C2303) * C60959 +
                      (C12286 + C12287 - C12288 - C12298) * C92212) *
                         C31258 +
                     ((C2290 + C2291 - C2292 - C2304) * C60959 +
                      (C22411 + C22412 - C22413 - C22417) * C92212) *
                         C31259) *
                        C1983 +
                    (((C2287 - (C2286 + C2285) + C2303) * C60959 +
                      (C12288 - (C12287 + C12286) + C12298) * C92212) *
                         C31257 +
                     ((C2292 - (C2291 + C2290) + C2304) * C60959 +
                      (C22413 - (C22412 + C22411) + C22417) * C92212) *
                         C31258 +
                     ((C2297 - (C2296 + C2295) + C2305) * C60959 +
                      ((C307 * C3434 + C92137 * C3664) * C2060 -
                       (C3018 * C1985 + C2938 * C2059) +
                       (C307 * C3516 + C92137 * C3738) * C1986) *
                          C92212) *
                         C31259) *
                        C1984) *
                   C92110) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C4326 * C107 + C4099 * C308 + C4327 * C805 +
                       C4100 * C1022 + C4328 * C806 + C4101 * C1023) *
                          C2059 +
                      (C4326 * C182 + C4099 * C394 + C4327 * C890 +
                       C4100 * C1085 + C4328 * C891 + C4101 * C1086) *
                          C1985 -
                      (C4328 * C4882 + C4101 * C5218 + C4327 * C806 +
                       C4100 * C1023 + C4326 * C805 + C4099 * C1022) *
                          C2060 -
                      (C4328 * C5012 + C4101 * C5299 + C4327 * C891 +
                       C4100 * C1086 + C4326 * C890 + C4099 * C1085) *
                          C1986) *
                         C60959 +
                     ((C67562 + C67563 + C67564) * C2059 +
                      (C67660 + C67661 + C67662) * C1985 -
                      (C4328 * C8536 + C4101 * C8894 + C4327 * C5772 +
                       C4100 * C6042 + C4326 * C3431 + C4099 * C3661) *
                          C2060 -
                      (C4328 * C8666 + C4101 * C8996 + C4327 * C5870 +
                       C4100 * C6128 + C4326 * C3513 + C4099 * C3735) *
                          C1986) *
                         C92212) *
                        C92062 * C1983 +
                    (((C6922 + C6923 + C6924) * C2060 -
                      ((C4454 + C4453 + C4452) * C1985 +
                       (C4354 + C4355 + C4356) * C2059) +
                      (C7035 + C7034 + C7033) * C1986) *
                         C60959 +
                     ((C4326 * C3432 + C4099 * C3662 + C4327 * C5771 +
                       C4100 * C6041 + C4328 * C8537 + C4101 * C8895) *
                          C2060 -
                      ((C7996 + C7995 + C7994) * C1985 +
                       (C7885 + C7884 + C7883) * C2059) +
                      (C4326 * C3514 + C4099 * C3736 + C4327 * C5869 +
                       C4100 * C6127 + C4328 * C8667 + C4101 * C8997) *
                          C1986) *
                         C92212) *
                        C92062 * C1984) *
                   C92110) /
                      (p * q * std::sqrt(p + q));
    d2eeyz[70] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C307 * C107 + C92137 * C308) * C244 +
              (C307 * C245 + C92137 * C474) * C92110) *
                 C60959 +
             (C11327 * C244 + C11531 * C92110) * C92212) *
                C31257 +
            ((C481 + C497) * C60959 + (C9910 + C9911) * C92212) * C31258 +
            C61337 * C31259) *
               C1985 -
           (((C22520 + C22518) * C92212 + (C2386 + C2378) * C60959) * C31259 +
            ((C12408 + C12404) * C92212 + (C2387 + C2381) * C60959) * C31258 +
            ((C14426 * C92110 + C14200 * C244) * C92212 +
             ((C307 * C956 + C92137 * C1146) * C92110 +
              (C307 * C805 + C92137 * C1022) * C244) *
                 C60959) *
                C31257) *
               C1986) *
              C1983 +
          ((((C2381 + C2387) * C60959 + (C12404 + C12408) * C92212) * C31257 +
            ((C2378 + C2386) * C60959 + (C22518 + C22520) * C92212) * C31258 +
            ((C2375 + C2385) * C60959 +
             ((C307 * C3434 + C92137 * C3664) * C244 +
              (C307 * C3590 + C92137 * C3808) * C92110) *
                 C92212) *
                C31259) *
               C1986 -
           (((C20197 + C20198) * C92212 + (C499 + C487) * C60959) * C31259 +
            ((C9918 + C9919) * C92212 + (C498 + C484) * C60959) * C31258 +
            ((C9911 + C9910) * C92212 + (C497 + C481) * C60959) * C31257) *
               C1985) *
              C1984)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4326 * C107 + C4099 * C308 + C4327 * C805 + C4100 * C1022 +
              C4328 * C806 + C4101 * C1023) *
                 C244 +
             (C4326 * C245 + C4099 * C474 + C4327 * C956 + C4100 * C1146 +
              C4328 * C957 + C4101 * C1147) *
                 C92110) *
                C60959 +
            ((C67562 + C67563 + C67564) * C244 +
             (C67754 + C67753 + C67752) * C92110) *
                C92212) *
               C92062 * C1985 -
           (((C4328 * C8780 + C4101 * C9096 + C4327 * C5958 + C4100 * C6207 +
              C4326 * C3587 + C4099 * C3805) *
                 C92110 +
             (C4328 * C8536 + C4101 * C8894 + C4327 * C5772 + C4100 * C6042 +
              C4326 * C3431 + C4099 * C3661) *
                 C244) *
                C92212 +
            ((C4328 * C5114 + C4101 * C5378 + C4327 * C957 + C4100 * C1147 +
              C4326 * C956 + C4099 * C1146) *
                 C92110 +
             (C4328 * C4882 + C4101 * C5218 + C4327 * C806 + C4100 * C1023 +
              C4326 * C805 + C4099 * C1022) *
                 C244) *
                C60959) *
               C92062 * C1986) *
              C1983 +
          ((((C6922 + C6923 + C6924) * C244 +
             (C7143 + C7142 + C7141) * C92110) *
                C60959 +
            ((C4326 * C3432 + C4099 * C3662 + C4327 * C5771 + C4100 * C6041 +
              C4328 * C8537 + C4101 * C8895) *
                 C244 +
             (C4326 * C3588 + C4099 * C3806 + C4327 * C5957 + C4100 * C6210 +
              C4328 * C8781 + C4101 * C9097) *
                 C92110) *
                C92212) *
               C92062 * C1986 -
           (((C8102 + C8103 + C8104) * C92110 +
             (C7885 + C7884 + C7883) * C244) *
                C92212 +
            ((C4546 + C4545 + C4544) * C92110 +
             (C4354 + C4355 + C4356) * C244) *
                C60959) *
               C92062 * C1985) *
              C1984)) /
            (p * q * std::sqrt(p + q));
    d2eezx[70] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C61411 * C107 + C60959 * C555 + C61412 * C1389 + C92212 * C1788) *
                C1987 +
            (C61411 * C117 + C60959 * C561 + C61412 * C1397 + C92212 * C1796) *
                C1983 -
            (C61438 + C61439) * C1988 - (C61440 + C61441) * C1984) *
               C31257 +
           ((C61439 + C61438) * C1987 + (C61441 + C61440) * C1983 -
            (C61443 + C61442) * C1988 - (C61445 + C61444) * C1984) *
               C31258 +
           (C61450 * C1987 + C61451 * C1983 - (C61447 + C61446) * C1988 -
            (C61449 + C61448) * C1984) *
               C31259) *
              C92137 * C92110 * C1985 +
          (((C63750 + C63751) * C1988 -
            ((C61412 * C3439 + C92212 * C3879 + C61411 * C813 +
              C60959 * C1212) *
                 C1983 +
             (C61412 * C3431 + C92212 * C3875 + C61411 * C805 +
              C60959 * C1204) *
                 C1987) +
            (C63752 + C63753) * C1984) *
               C31257 +
           ((C63754 + C63755) * C1988 -
            ((C63753 + C63752) * C1983 + (C63751 + C63750) * C1987) +
            (C63756 + C63757) * C1984) *
               C31258 +
           ((C61411 * C802 + C60959 * C1201 + C61412 * C3434 + C92212 * C3878) *
                C1988 -
            ((C63757 + C63756) * C1983 + (C63755 + C63754) * C1987) +
            (C61411 * C810 + C60959 * C1209 + C61412 * C3442 + C92212 * C3882) *
                C1984) *
               C31259) *
              C92137 * C92110 * C1986)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C61411 * C107 + C60959 * C555 + C61412 * C1389 + C92212 * C1788) *
                C1987 +
            (C61411 * C117 + C60959 * C561 + C61412 * C1397 + C92212 * C1796) *
                C1983 -
            (C61438 + C61439) * C1988 - (C61440 + C61441) * C1984) *
               C92062 * C4099 +
           ((C67034 + C67035) * C1987 + (C67036 + C67037) * C1983 -
            (C63751 + C63750) * C1988 - (C63753 + C63752) * C1984) *
               C92062 * C4100 +
           (C67046 * C1987 + C67047 * C1983 - (C68674 + C68675) * C1988 -
            (C68676 + C68677) * C1984) *
               C92062 * C4101) *
              C92110 * C1985 +
          (((C63750 + C63751) * C1988 -
            ((C67037 + C67036) * C1983 + (C67035 + C67034) * C1987) +
            (C63752 + C63753) * C1984) *
               C92062 * C4099 +
           ((C68675 + C68674) * C1988 -
            ((C67041 + C67040) * C1983 + (C67039 + C67038) * C1987) +
            (C68677 + C68676) * C1984) *
               C92062 * C4100 +
           ((C61411 * C4881 + C60959 * C5455 + C61412 * C8537 +
             C92212 * C9197) *
                C1988 -
            ((C67042 + C67043) * C1983 + (C67044 + C67045) * C1987) +
            (C61411 * C4885 + C60959 * C5459 + C61412 * C8541 +
             C92212 * C9199) *
                C1984) *
               C92062 * C4101) *
              C92110 * C1986)) /
            (p * q * std::sqrt(p + q));
    d2eezy[70] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C61411 * C107 + C60959 * C555 + C61412 * C1389 + C92212 * C1788) *
                C2059 +
            (C61411 * C182 + C60959 * C641 + C61412 * C1471 + C92212 * C1854) *
                C1985 -
            (C61412 * C3431 + C92212 * C3875 + C61411 * C805 + C60959 * C1204) *
                C2060 -
            (C61412 * C3513 + C92212 * C3949 + C61411 * C890 + C60959 * C1267) *
                C1986) *
               C31257 +
           ((C61439 + C61438) * C2059 + (C61539 + C61540) * C1985 -
            (C63751 + C63750) * C2060 - (C63864 + C63865) * C1986) *
               C31258 +
           (C61450 * C2059 + C61545 * C1985 - (C63755 + C63754) * C2060 -
            (C63866 + C63867) * C1986) *
               C31259) *
              C92137 * C1983 +
          (((C63750 + C63751) * C2060 -
            ((C61540 + C61539) * C1985 + (C61438 + C61439) * C2059) +
            (C63865 + C63864) * C1986) *
               C31257 +
           ((C63754 + C63755) * C2060 -
            ((C61542 + C61541) * C1985 + (C61443 + C61442) * C2059) +
            (C63867 + C63866) * C1986) *
               C31258 +
           ((C61411 * C802 + C60959 * C1201 + C61412 * C3434 + C92212 * C3878) *
                C2060 -
            ((C61543 + C61544) * C1985 + (C61447 + C61446) * C2059) +
            (C61411 * C887 + C60959 * C1273 + C61412 * C3516 + C92212 * C3952) *
                C1986) *
               C31259) *
              C92137 * C1984) *
         C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C61411 * C107 + C60959 * C555 + C61412 * C1389 + C92212 * C1788) *
                C2059 +
            (C61411 * C182 + C60959 * C641 + C61412 * C1471 + C92212 * C1854) *
                C1985 -
            (C67035 + C67034) * C2060 - (C67138 + C67139) * C1986) *
               C92062 * C4099 +
           ((C67034 + C67035) * C2059 + (C67139 + C67138) * C1985 -
            (C67039 + C67038) * C2060 - (C67141 + C67140) * C1986) *
               C92062 * C4100 +
           (C67046 * C2059 + C67144 * C1985 - (C67044 + C67045) * C2060 -
            (C67143 + C67142) * C1986) *
               C92062 * C4101) *
              C1983 +
          (((C63750 + C63751) * C2060 -
            ((C61540 + C61539) * C1985 + (C61438 + C61439) * C2059) +
            (C63865 + C63864) * C1986) *
               C92062 * C4099 +
           ((C68675 + C68674) * C2060 -
            ((C63864 + C63865) * C1985 + (C63751 + C63750) * C2059) +
            (C68780 + C68781) * C1986) *
               C92062 * C4100 +
           ((C61411 * C4881 + C60959 * C5455 + C61412 * C8537 +
             C92212 * C9197) *
                C2060 -
            ((C68781 + C68780) * C1985 + (C68674 + C68675) * C2059) +
            (C61411 * C5013 + C60959 * C5579 + C61412 * C8667 +
             C92212 * C9319) *
                C1986) *
               C92062 * C4101) *
              C1984) *
         C92110) /
            (p * q * std::sqrt(p + q));
    d2eezz[70] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C61411 * C107 + C60959 * C555 + C61412 * C1389 + C92212 * C1788) *
                 C244 +
             (C61411 * C245 + C60959 * C719 + C61412 * C1540 + C92212 * C1909) *
                 C92110) *
                C31257 +
            ((C61439 + C61438) * C244 + (C61635 + C61636) * C92110) * C31258 +
            C61643 * C31259) *
               C92137 * C1985 -
           (((C63974 + C63975) * C92110 + (C63755 + C63754) * C244) * C31259 +
            ((C63976 + C63977) * C92110 + (C63751 + C63750) * C244) * C31258 +
            ((C61412 * C3587 + C92212 * C4019 + C61411 * C956 +
              C60959 * C1328) *
                 C92110 +
             (C61412 * C3431 + C92212 * C3875 + C61411 * C805 +
              C60959 * C1204) *
                 C244) *
                C31257) *
               C92137 * C1986) *
              C1983 +
          ((((C63750 + C63751) * C244 + (C63977 + C63976) * C92110) * C31257 +
            ((C63754 + C63755) * C244 + (C63975 + C63974) * C92110) * C31258 +
            ((C61411 * C802 + C60959 * C1201 + C61412 * C3434 +
              C92212 * C3878) *
                 C244 +
             (C61411 * C953 + C60959 * C1325 + C61412 * C3590 +
              C92212 * C4022) *
                 C92110) *
                C31259) *
               C92137 * C1986 -
           (((C61639 + C61640) * C92110 + (C61447 + C61446) * C244) * C31259 +
            ((C61638 + C61637) * C92110 + (C61443 + C61442) * C244) * C31258 +
            ((C61636 + C61635) * C92110 + (C61438 + C61439) * C244) * C31257) *
               C92137 * C1985) *
              C1984)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C61411 * C107 + C60959 * C555 + C61412 * C1389 + C92212 * C1788) *
                 C244 +
             (C61411 * C245 + C60959 * C719 + C61412 * C1540 + C92212 * C1909) *
                 C92110) *
                C92062 * C4099 +
            ((C67034 + C67035) * C244 + (C67232 + C67233) * C92110) * C92062 *
                C4100 +
            C67241 * C4101) *
               C1985 -
           (((C67236 + C67237) * C92110 + (C67044 + C67045) * C244) * C92062 *
                C4101 +
            ((C67235 + C67234) * C92110 + (C67039 + C67038) * C244) * C92062 *
                C4100 +
            ((C67233 + C67232) * C92110 + (C67035 + C67034) * C244) * C92062 *
                C4099) *
               C1986) *
              C1983 +
          ((((C63750 + C63751) * C244 + (C63977 + C63976) * C92110) * C92062 *
                C4099 +
            ((C68675 + C68674) * C244 + (C68884 + C68885) * C92110) * C92062 *
                C4100 +
            ((C61411 * C4881 + C60959 * C5455 + C61412 * C8537 +
              C92212 * C9197) *
                 C244 +
             (C61411 * C5113 + C60959 * C5668 + C61412 * C8781 +
              C92212 * C9425) *
                 C92110) *
                C92062 * C4101) *
               C1986 -
           (((C68885 + C68884) * C92110 + (C68674 + C68675) * C244) * C92062 *
                C4101 +
            ((C63976 + C63977) * C92110 + (C63751 + C63750) * C244) * C92062 *
                C4100 +
            ((C61636 + C61635) * C92110 + (C61438 + C61439) * C244) * C92062 *
                C4099) *
               C1985) *
              C1984)) /
            (p * q * std::sqrt(p + q));
    d2eexx[71] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31262 * C107 + C31257 * C113 + C31263 * C108 + C31258 * C114 +
              C31264 * C109 + C31259 * C115) *
                 C801 +
             (C31262 * C117 + C31257 * C125 + C31263 * C118 + C31258 * C126 +
              C31264 * C119 + C31259 * C127) *
                 C92078) *
                C92137 * C60959 +
            ((C62408 + C62409 + C62410) * C801 +
             (C62411 + C62412 + C62413) * C92078) *
                C92137 * C92212) *
               C2709 -
           (((C62414 + C62415 + C62416) * C92078 +
             (C62417 + C62418 + C62419) * C801) *
                C92137 * C92212 +
            ((C62413 + C62412 + C62411) * C92078 +
             (C62410 + C62409 + C62408) * C801) *
                C92137 * C60959) *
               C2710) *
              C1985 +
          ((((C35359 + C35358 + C35357) * C801 +
             (C35356 + C35355 + C35354) * C92078) *
                C92137 * C60959 +
            ((C31262 * C5773 + C31257 * C5781 + C31263 * C5774 +
              C31258 * C5782 + C31264 * C11870 + C31259 * C11871) *
                 C801 +
             (C31262 * C5783 + C31257 * C5791 + C31263 * C5784 +
              C31258 * C5792 + C31264 * C11872 + C31259 * C11873) *
                 C92078) *
                C92137 * C92212) *
               C2710 -
           (((C35354 + C35355 + C35356) * C92078 +
             (C35357 + C35358 + C35359) * C801) *
                C92137 * C92212 +
            ((C32047 + C32046 + C32045) * C92078 +
             (C32044 + C32043 + C32042) * C801) *
                C92137 * C60959) *
               C2709) *
              C1986)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C36216 * C107 + C92062 * C113) * C801 +
              (C36216 * C117 + C92062 * C125) * C92078) *
                 C4099 +
             (C36700 + C36701) * C4100 + C36708 * C4101) *
                C60959 +
            ((C41116 + C41117) * C4099 + C43820 * C4100 + C56777 * C4101) *
                C92212) *
               C2709 -
           (((C40326 + C40327) * C4101 + C43821 * C4100 +
             (C41119 + C41118) * C4099) *
                C92212 +
            (C60033 * C4101 + C43822 * C4100 + (C41117 + C41116) * C4099) *
                C60959) *
               C2710) *
              C1985 +
          (((C43820 * C4099 + C56777 * C4100 + (C38979 + C38978) * C4101) *
                C60959 +
            (C41098 * C4099 + (C40327 + C40326) * C4100 +
             ((C36216 * C37227 + C92062 * C37228) * C801 +
              (C36216 * C37229 + C92062 * C37230) * C92078) *
                 C4101) *
                C92212) *
               C2710 -
           (((C38978 + C38979) * C4101 + C60033 * C4100 + C43822 * C4099) *
                C92212 +
            ((C36705 + C36704) * C4101 + (C36703 + C36702) * C4100 +
             (C36701 + C36700) * C4099) *
                C60959) *
               C2709) *
              C1986)) /
            (p * q * std::sqrt(p + q));
    d2eexy[71] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C31262 * C107 + C31257 * C113 + C31263 * C108 +
                       C31258 * C114 + C31264 * C109 + C31259 * C115) *
                          C2059 +
                      (C31262 * C182 + C31257 * C188 + C31263 * C183 +
                       C31258 * C189 + C31264 * C184 + C31259 * C190) *
                          C1985 -
                      (C32044 + C32043 + C32042) * C2060 -
                      (C32140 + C32141 + C32142) * C1986) *
                         C92137 * C60959 +
                     ((C62408 + C62409 + C62410) * C2059 +
                      (C62506 + C62507 + C62508) * C1985 -
                      (C35357 + C35358 + C35359) * C2060 -
                      (C35466 + C35465 + C35464) * C1986) *
                         C92137 * C92212) *
                        C92078 * C2709 +
                    (((C35359 + C35358 + C35357) * C2060 -
                      ((C62508 + C62507 + C62506) * C1985 +
                       (C62410 + C62409 + C62408) * C2059) +
                      (C35464 + C35465 + C35466) * C1986) *
                         C92137 * C60959 +
                     ((C31262 * C5773 + C31257 * C5781 + C31263 * C5774 +
                       C31258 * C5782 + C31264 * C11870 + C31259 * C11871) *
                          C2060 -
                      ((C62509 + C62510 + C62511) * C1985 +
                       (C62417 + C62418 + C62419) * C2059) +
                      (C31262 * C5871 + C31257 * C5877 + C31263 * C5872 +
                       C31258 * C5878 + C31264 * C11972 + C31259 * C11973) *
                          C1986) *
                         C92137 * C92212) *
                        C92078 * C2710)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((((C36216 * C107 + C92062 * C113) * C2059 +
                       (C36216 * C182 + C92062 * C188) * C1985 -
                       C36692 * C2060 - C36770 * C1986) *
                          C4099 +
                      (C36692 * C2059 + C36770 * C1985 - C36694 * C2060 -
                       C36771 * C1986) *
                          C4100 +
                      (C36694 * C2059 + C36771 * C1985 - C36696 * C2060 -
                       C36772 * C1986) *
                          C4101) *
                         C60959 +
                     ((C43923 + C43924 - C43925 - C43926) * C4099 +
                      (C43927 + C43928 - C43929 - C43930) * C4100 +
                      (C60132 + C60133 - C60134 - C60135) * C4101) *
                         C92212) *
                        C92078 * C2709 +
                    (((C43925 - (C43924 + C43923) + C43926) * C4099 +
                      (C43929 - (C43928 + C43927) + C43930) * C4100 +
                      (C60134 - (C60133 + C60132) + C60135) * C4101) *
                         C60959 +
                     ((C43933 - (C43932 + C43931) + C43934) * C4099 +
                      (C43937 - (C43936 + C43935) + C43938) * C4100 +
                      ((C36216 * C37227 + C92062 * C37228) * C2060 -
                       (C40407 * C1985 + C40323 * C2059) +
                       (C36216 * C37281 + C92062 * C37282) * C1986) *
                          C4101) *
                         C92212) *
                        C92078 * C2710)) /
                      (p * q * std::sqrt(p + q));
    d2eexz[71] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C31262 * C107 + C31257 * C113 + C31263 * C108 +
                       C31258 * C114 + C31264 * C109 + C31259 * C115) *
                          C2849 +
                      (C31262 * C245 + C31257 * C251 + C31263 * C246 +
                       C31258 * C252 + C31264 * C247 + C31259 * C253) *
                          C2709 -
                      (C62410 + C62409 + C62408) * C2850 -
                      (C62598 + C62599 + C62600) * C2710) *
                         C92137 * C60959 +
                     ((C62408 + C62409 + C62410) * C2849 +
                      (C62600 + C62599 + C62598) * C2709 -
                      (C62417 + C62418 + C62419) * C2850 -
                      (C62603 + C62602 + C62601) * C2710) *
                         C92137 * C92212) *
                        C1985 +
                    (((C35359 + C35358 + C35357) * C2850 -
                      ((C32234 + C32233 + C32232) * C2709 +
                       (C32044 + C32043 + C32042) * C2849) +
                      (C35573 + C35572 + C35571) * C2710) *
                         C92137 * C60959 +
                     ((C31262 * C5773 + C31257 * C5781 + C31263 * C5774 +
                       C31258 * C5782 + C31264 * C11870 + C31259 * C11871) *
                          C2850 -
                      ((C35571 + C35572 + C35573) * C2709 +
                       (C35357 + C35358 + C35359) * C2849) +
                      (C31262 * C5955 + C31257 * C5961 + C31263 * C5956 +
                       C31258 * C5962 + C31264 * C12072 + C31259 * C12073) *
                          C2710) *
                         C92137 * C92212) *
                        C1986) *
                   C92078) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((((C36216 * C107 + C92062 * C113) * C2849 +
                       (C36216 * C245 + C92062 * C251) * C2709 -
                       C41107 * C2850 - C41316 * C2710) *
                          C4099 +
                      (C39129 + C39130 - C39131 - C39147) * C4100 +
                      (C39134 + C39135 - C39136 - C39148) * C4101) *
                         C60959 +
                     ((C41107 * C2849 + C41316 * C2709 - C41109 * C2850 -
                       C41317 * C2710) *
                          C4099 +
                      (C44039 + C44040 - C44041 - C44042) * C4100 +
                      (C60234 + C60235 - C60236 - C60237) * C4101) *
                         C92212) *
                        C1985 +
                    (((C39131 - (C39130 + C39129) + C39147) * C4099 +
                      (C39136 - (C39135 + C39134) + C39148) * C4100 +
                      (C39141 - (C39140 + C39139) + C39149) * C4101) *
                         C60959 +
                     ((C44041 - (C44040 + C44039) + C44042) * C4099 +
                      (C60236 - (C60235 + C60234) + C60237) * C4100 +
                      ((C36216 * C37227 + C92062 * C37228) * C2850 -
                       (C39146 * C2709 + C38973 * C2849) +
                       (C36216 * C37333 + C92062 * C37334) * C2710) *
                          C4101) *
                         C92212) *
                        C1986) *
                   C92078) /
                      (p * q * std::sqrt(p + q));
    d2eeyx[71] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C307 * C107 + C92137 * C308) * C801 +
              (C307 * C117 + C92137 * C314) * C92078) *
                 C60959 +
             (C11336 + C11337) * C92212) *
                C31257 +
            ((C337 * C801 + C338 * C92078) * C60959 +
             (C11315 + C11316) * C92212) *
                C31258 +
            ((C339 * C801 + C340 * C92078) * C60959 +
             (C21541 + C21542) * C92212) *
                C31259) *
               C2709 -
           (((C21543 + C21544) * C92212 + (C21542 + C21541) * C60959) * C31259 +
            ((C11318 + C11317) * C92212 + (C11316 + C11315) * C60959) * C31258 +
            ((C11339 + C11338) * C92212 + (C11337 + C11336) * C60959) *
                C31257) *
               C2710) *
              C1985 +
          ((((C14204 + C14205) * C60959 + (C14206 + C14207) * C92212) * C31257 +
            ((C14196 + C14197) * C60959 + (C14198 + C14199) * C92212) * C31258 +
            ((C24230 + C24231) * C60959 +
             ((C307 * C11870 + C92137 * C12172) * C801 +
              (C307 * C11872 + C92137 * C12173) * C92078) *
                 C92212) *
                C31259) *
               C2710 -
           (((C24231 + C24230) * C92212 +
             (C2215 * C92078 + C2214 * C801) * C60959) *
                C31259 +
            ((C14197 + C14196) * C92212 +
             (C2213 * C92078 + C2212 * C801) * C60959) *
                C31258 +
            ((C14205 + C14204) * C92212 +
             ((C307 * C813 + C92137 * C1030) * C92078 +
              (C307 * C805 + C92137 * C1022) * C801) *
                 C60959) *
                C31257) *
               C2709) *
              C1986)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4326 * C107 + C4099 * C308 + C4327 * C805 + C4100 * C1022 +
              C4328 * C806 + C4101 * C1023) *
                 C801 +
             (C4326 * C117 + C4099 * C314 + C4327 * C813 + C4100 * C1030 +
              C4328 * C822 + C4101 * C1031) *
                 C92078) *
                C60959 +
            ((C67562 + C67563 + C67564) * C801 +
             (C67565 + C67566 + C67567) * C92078) *
                C92212) *
               C92062 * C2709 -
           (((C67568 + C67569 + C67570) * C92078 +
             (C67571 + C67572 + C67573) * C801) *
                C92212 +
            ((C67567 + C67566 + C67565) * C92078 +
             (C67564 + C67563 + C67562) * C801) *
                C60959) *
               C92062 * C2710) *
              C1985 +
          ((((C70172 + C70173 + C70174) * C801 +
             (C70175 + C70176 + C70177) * C92078) *
                C60959 +
            ((C4326 * C5773 + C4099 * C6043 + C4327 * C5775 + C4100 * C6044 +
              C4328 * C37227 + C4101 * C37385) *
                 C801 +
             (C4326 * C5783 + C4099 * C6049 + C4327 * C5787 + C4100 * C6050 +
              C4328 * C37229 + C4101 * C37386) *
                 C92078) *
                C92212) *
               C92062 * C2710 -
           (((C70177 + C70176 + C70175) * C92078 +
             (C70174 + C70173 + C70172) * C801) *
                C92212 +
            ((C4328 * C4886 + C4101 * C5222 + C4327 * C822 + C4100 * C1031 +
              C4326 * C813 + C4099 * C1030) *
                 C92078 +
             (C4328 * C4882 + C4101 * C5218 + C4327 * C806 + C4100 * C1023 +
              C4326 * C805 + C4099 * C1022) *
                 C801) *
                C60959) *
               C92062 * C2709) *
              C1986)) /
            (p * q * std::sqrt(p + q));
    d2eeyy[71] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((((C307 * C107 + C92137 * C308) * C2059 +
                       (C307 * C182 + C92137 * C394) * C1985 -
                       (C307 * C805 + C92137 * C1022) * C2060 -
                       (C307 * C890 + C92137 * C1085) * C1986) *
                          C60959 +
                      (C14308 + C14309 - C14310 - C14320) * C92212) *
                         C31257 +
                     ((C2285 + C2286 - C2287 - C2303) * C60959 +
                      (C12286 + C12287 - C12288 - C12298) * C92212) *
                         C31258 +
                     ((C2290 + C2291 - C2292 - C2304) * C60959 +
                      (C22411 + C22412 - C22413 - C22417) * C92212) *
                         C31259) *
                        C92078 * C2709 +
                    (((C14310 - (C14309 + C14308) + C14320) * C60959 +
                      (C14315 - (C14314 + C14313) + C14321) * C92212) *
                         C31257 +
                     ((C12288 - (C12287 + C12286) + C12298) * C60959 +
                      (C12293 - (C12292 + C12291) + C12299) * C92212) *
                         C31258 +
                     ((C22413 - (C22412 + C22411) + C22417) * C60959 +
                      ((C307 * C11870 + C92137 * C12172) * C2060 -
                       (C9833 * C1985 + C9750 * C2059) +
                       (C307 * C11972 + C92137 * C12284) * C1986) *
                          C92212) *
                         C31259) *
                        C92078 * C2710)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C4326 * C107 + C4099 * C308 + C4327 * C805 +
                       C4100 * C1022 + C4328 * C806 + C4101 * C1023) *
                          C2059 +
                      (C4326 * C182 + C4099 * C394 + C4327 * C890 +
                       C4100 * C1085 + C4328 * C891 + C4101 * C1086) *
                          C1985 -
                      (C4328 * C4882 + C4101 * C5218 + C4327 * C806 +
                       C4100 * C1023 + C4326 * C805 + C4099 * C1022) *
                          C2060 -
                      (C4328 * C5012 + C4101 * C5299 + C4327 * C891 +
                       C4100 * C1086 + C4326 * C890 + C4099 * C1085) *
                          C1986) *
                         C60959 +
                     ((C67562 + C67563 + C67564) * C2059 +
                      (C67660 + C67661 + C67662) * C1985 -
                      (C70174 + C70173 + C70172) * C2060 -
                      (C70282 + C70283 + C70284) * C1986) *
                         C92212) *
                        C92062 * C92078 * C2709 +
                    (((C70172 + C70173 + C70174) * C2060 -
                      ((C67662 + C67661 + C67660) * C1985 +
                       (C67564 + C67563 + C67562) * C2059) +
                      (C70284 + C70283 + C70282) * C1986) *
                         C60959 +
                     ((C4326 * C5773 + C4099 * C6043 + C4327 * C5775 +
                       C4100 * C6044 + C4328 * C37227 + C4101 * C37385) *
                          C2060 -
                      ((C67663 + C67664 + C67665) * C1985 +
                       (C67571 + C67572 + C67573) * C2059) +
                      (C4326 * C5871 + C4099 * C6129 + C4327 * C5873 +
                       C4100 * C6130 + C4328 * C37281 + C4101 * C37437) *
                          C1986) *
                         C92212) *
                        C92062 * C92078 * C2710)) /
                      (p * q * std::sqrt(p + q));
    d2eeyz[71] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((((C307 * C107 + C92137 * C308) * C2849 +
                       (C307 * C245 + C92137 * C474) * C2709 - C11327 * C2850 -
                       C11531 * C2710) *
                          C60959 +
                      (C11327 * C2849 + C11531 * C2709 - C11329 * C2850 -
                       C11532 * C2710) *
                          C92212) *
                         C31257 +
                     ((C3089 + C3090 - C3091 - C3107) * C60959 +
                      (C13410 + C13411 - C13412 - C13413) * C92212) *
                         C31258 +
                     ((C3094 + C3095 - C3096 - C3108) * C60959 +
                      (C23492 + C23493 - C23494 - C23495) * C92212) *
                         C31259) *
                        C1985 +
                    (((C14200 * C2850 -
                       ((C307 * C956 + C92137 * C1146) * C2709 +
                        (C307 * C805 + C92137 * C1022) * C2849) +
                       C14426 * C2710) *
                          C60959 +
                      (C14202 * C2850 - (C14426 * C2709 + C14200 * C2849) +
                       C14427 * C2710) *
                          C92212) *
                         C31257 +
                     ((C12183 * C2850 - (C2384 * C2709 + C2212 * C2849) +
                       C12406 * C2710) *
                          C60959 +
                      (C12185 * C2850 - (C12406 * C2709 + C12183 * C2849) +
                       C12405 * C2710) *
                          C92212) *
                         C31258 +
                     ((C22311 * C2850 - (C2383 * C2709 + C2214 * C2849) +
                       C22519 * C2710) *
                          C60959 +
                      ((C307 * C11870 + C92137 * C12172) * C2850 -
                       (C22519 * C2709 + C22311 * C2849) +
                       (C307 * C12072 + C92137 * C12397) * C2710) *
                          C92212) *
                         C31259) *
                        C1986) *
                   C92078) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C4326 * C107 + C4099 * C308 + C4327 * C805 +
                       C4100 * C1022 + C4328 * C806 + C4101 * C1023) *
                          C2849 +
                      (C4326 * C245 + C4099 * C474 + C4327 * C956 +
                       C4100 * C1146 + C4328 * C957 + C4101 * C1147) *
                          C2709 -
                      (C67564 + C67563 + C67562) * C2850 -
                      (C67752 + C67753 + C67754) * C2710) *
                         C60959 +
                     ((C67562 + C67563 + C67564) * C2849 +
                      (C67754 + C67753 + C67752) * C2709 -
                      (C67571 + C67572 + C67573) * C2850 -
                      (C67757 + C67756 + C67755) * C2710) *
                         C92212) *
                        C92062 * C1985 +
                    (((C70172 + C70173 + C70174) * C2850 -
                      ((C4328 * C5114 + C4101 * C5378 + C4327 * C957 +
                        C4100 * C1147 + C4326 * C956 + C4099 * C1146) *
                           C2709 +
                       (C4328 * C4882 + C4101 * C5218 + C4327 * C806 +
                        C4100 * C1023 + C4326 * C805 + C4099 * C1022) *
                           C2849) +
                      (C70389 + C70390 + C70391) * C2710) *
                         C60959 +
                     ((C4326 * C5773 + C4099 * C6043 + C4327 * C5775 +
                       C4100 * C6044 + C4328 * C37227 + C4101 * C37385) *
                          C2850 -
                      ((C70391 + C70390 + C70389) * C2709 +
                       (C70174 + C70173 + C70172) * C2849) +
                      (C4326 * C5955 + C4099 * C6208 + C4327 * C5959 +
                       C4100 * C6209 + C4328 * C37333 + C4101 * C37488) *
                          C2710) *
                         C92212) *
                        C92062 * C1986) *
                   C92078) /
                      (p * q * std::sqrt(p + q));
    d2eezx[71] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C61411 * C107 + C60959 * C555 + C61412 * C1389 + C92212 * C1788) *
                 C801 +
             (C61411 * C117 + C60959 * C561 + C61412 * C1397 + C92212 * C1796) *
                 C92078) *
                C31257 +
            ((C61439 + C61438) * C801 + (C61441 + C61440) * C92078) * C31258 +
            (C61450 * C801 + C61451 * C92078) * C31259) *
               C92137 * C2709 -
           (((C64723 + C64722) * C92078 + (C64721 + C64720) * C801) * C31259 +
            ((C64719 + C64718) * C92078 + (C64717 + C64716) * C801) * C31258 +
            ((C61412 * C1406 + C92212 * C1797 + C61411 * C1397 +
              C60959 * C1796) *
                 C92078 +
             (C61412 * C1390 + C92212 * C1789 + C61411 * C1389 +
              C60959 * C1788) *
                 C801) *
                C31257) *
               C92137 * C2710) *
              C1985 +
          ((((C61411 * C3431 + C60959 * C3875 + C61412 * C5773 +
              C92212 * C6289) *
                 C801 +
             (C61411 * C3439 + C60959 * C3879 + C61412 * C5783 +
              C92212 * C6295) *
                 C92078) *
                C31257 +
            ((C61411 * C3432 + C60959 * C3876 + C61412 * C5774 +
              C92212 * C6290) *
                 C801 +
             (C61411 * C3440 + C60959 * C3880 + C61412 * C5784 +
              C92212 * C6296) *
                 C92078) *
                C31258 +
            ((C61411 * C3433 + C60959 * C3877 + C61412 * C11870 +
              C92212 * C12506) *
                 C801 +
             (C61411 * C3441 + C60959 * C3881 + C61412 * C11872 +
              C92212 * C12507) *
                 C92078) *
                C31259) *
               C92137 * C2710 -
           (((C63757 + C63756) * C92078 + (C63755 + C63754) * C801) * C31259 +
            ((C63753 + C63752) * C92078 + (C63751 + C63750) * C801) * C31258 +
            ((C61412 * C3439 + C92212 * C3879 + C61411 * C813 +
              C60959 * C1212) *
                 C92078 +
             (C61412 * C3431 + C92212 * C3875 + C61411 * C805 +
              C60959 * C1204) *
                 C801) *
                C31257) *
               C92137 * C2709) *
              C1986)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C61411 * C107 + C60959 * C555 + C61412 * C1389 + C92212 * C1788) *
                 C801 +
             (C61411 * C117 + C60959 * C561 + C61412 * C1397 + C92212 * C1796) *
                 C92078) *
                C92062 * C4099 +
            ((C67034 + C67035) * C801 + (C67036 + C67037) * C92078) * C92062 *
                C4100 +
            C67051 * C4101) *
               C2709 -
           (((C70506 + C70507) * C92078 + (C70508 + C70509) * C801) * C92062 *
                C4101 +
            ((C70510 + C70511) * C92078 + (C70512 + C70513) * C801) * C92062 *
                C4100 +
            ((C61412 * C1406 + C92212 * C1797 + C61411 * C1397 +
              C60959 * C1796) *
                 C92078 +
             (C61412 * C1390 + C92212 * C1789 + C61411 * C1389 +
              C60959 * C1788) *
                 C801) *
                C92062 * C4099) *
               C2710) *
              C1985 +
          ((((C70513 + C70512) * C801 + (C70511 + C70510) * C92078) * C92062 *
                C4099 +
            ((C70509 + C70508) * C801 + (C70507 + C70506) * C92078) * C92062 *
                C4100 +
            ((C61411 * C8536 + C60959 * C9196 + C61412 * C37227 +
              C92212 * C37539) *
                 C801 +
             (C61411 * C8540 + C60959 * C9198 + C61412 * C37229 +
              C92212 * C37540) *
                 C92078) *
                C92062 * C4101) *
               C2710 -
           (((C67042 + C67043) * C92078 + (C67044 + C67045) * C801) * C92062 *
                C4101 +
            ((C67041 + C67040) * C92078 + (C67039 + C67038) * C801) * C92062 *
                C4100 +
            ((C67037 + C67036) * C92078 + (C67035 + C67034) * C801) * C92062 *
                C4099) *
               C2709) *
              C1986)) /
            (p * q * std::sqrt(p + q));
    d2eezy[71] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C61411 * C107 + C60959 * C555 + C61412 * C1389 + C92212 * C1788) *
                C2059 +
            (C61411 * C182 + C60959 * C641 + C61412 * C1471 + C92212 * C1854) *
                C1985 -
            (C61412 * C3431 + C92212 * C3875 + C61411 * C805 + C60959 * C1204) *
                C2060 -
            (C61412 * C3513 + C92212 * C3949 + C61411 * C890 + C60959 * C1267) *
                C1986) *
               C31257 +
           ((C61439 + C61438) * C2059 + (C61539 + C61540) * C1985 -
            (C63751 + C63750) * C2060 - (C63864 + C63865) * C1986) *
               C31258 +
           (C61450 * C2059 + C61545 * C1985 - (C63755 + C63754) * C2060 -
            (C63866 + C63867) * C1986) *
               C31259) *
              C92137 * C92078 * C2709 +
          (((C61411 * C3431 + C60959 * C3875 + C61412 * C5773 +
             C92212 * C6289) *
                C2060 -
            ((C61412 * C1472 + C92212 * C1855 + C61411 * C1471 +
              C60959 * C1854) *
                 C1985 +
             (C61412 * C1390 + C92212 * C1789 + C61411 * C1389 +
              C60959 * C1788) *
                 C2059) +
            (C61411 * C3513 + C60959 * C3949 + C61412 * C5871 +
             C92212 * C6375) *
                C1986) *
               C31257 +
           ((C61411 * C3432 + C60959 * C3876 + C61412 * C5774 +
             C92212 * C6290) *
                C2060 -
            ((C64831 + C64830) * C1985 + (C64717 + C64716) * C2059) +
            (C61411 * C3514 + C60959 * C3950 + C61412 * C5872 +
             C92212 * C6376) *
                C1986) *
               C31258 +
           ((C61411 * C3433 + C60959 * C3877 + C61412 * C11870 +
             C92212 * C12506) *
                C2060 -
            ((C64833 + C64832) * C1985 + (C64721 + C64720) * C2059) +
            (C61411 * C3515 + C60959 * C3951 + C61412 * C11972 +
             C92212 * C12624) *
                C1986) *
               C31259) *
              C92137 * C92078 * C2710)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C61411 * C107 + C60959 * C555 + C61412 * C1389 + C92212 * C1788) *
                C2059 +
            (C61411 * C182 + C60959 * C641 + C61412 * C1471 + C92212 * C1854) *
                C1985 -
            (C67035 + C67034) * C2060 - (C67138 + C67139) * C1986) *
               C92062 * C4099 +
           ((C67034 + C67035) * C2059 + (C67139 + C67138) * C1985 -
            (C67039 + C67038) * C2060 - (C67141 + C67140) * C1986) *
               C92062 * C4100 +
           (C67046 * C2059 + C67144 * C1985 - (C67044 + C67045) * C2060 -
            (C67143 + C67142) * C1986) *
               C92062 * C4101) *
              C92078 * C2709 +
          (((C70513 + C70512) * C2060 -
            ((C61412 * C1472 + C92212 * C1855 + C61411 * C1471 +
              C60959 * C1854) *
                 C1985 +
             (C61412 * C1390 + C92212 * C1789 + C61411 * C1389 +
              C60959 * C1788) *
                 C2059) +
            (C70620 + C70621) * C1986) *
               C92062 * C4099 +
           ((C70509 + C70508) * C2060 -
            ((C70621 + C70620) * C1985 + (C70512 + C70513) * C2059) +
            (C70622 + C70623) * C1986) *
               C92062 * C4100 +
           ((C61411 * C8536 + C60959 * C9196 + C61412 * C37227 +
             C92212 * C37539) *
                C2060 -
            ((C70623 + C70622) * C1985 + (C70508 + C70509) * C2059) +
            (C61411 * C8666 + C60959 * C9318 + C61412 * C37281 +
             C92212 * C37591) *
                C1986) *
               C92062 * C4101) *
              C92078 * C2710)) /
            (p * q * std::sqrt(p + q));
    d2eezz[71] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C61411 * C107 + C60959 * C555 + C61412 * C1389 + C92212 * C1788) *
                C2849 +
            (C61411 * C245 + C60959 * C719 + C61412 * C1540 + C92212 * C1909) *
                C2709 -
            (C61412 * C1390 + C92212 * C1789 + C61411 * C1389 +
             C60959 * C1788) *
                C2850 -
            (C61412 * C1541 + C92212 * C1910 + C61411 * C1540 +
             C60959 * C1909) *
                C2710) *
               C31257 +
           ((C61439 + C61438) * C2849 + (C61635 + C61636) * C2709 -
            (C64717 + C64716) * C2850 - (C64940 + C64941) * C2710) *
               C31258 +
           (C61450 * C2849 + C61641 * C2709 - (C64721 + C64720) * C2850 -
            (C64942 + C64943) * C2710) *
               C31259) *
              C92137 * C1985 +
          (((C61411 * C3431 + C60959 * C3875 + C61412 * C5773 +
             C92212 * C6289) *
                C2850 -
            ((C61412 * C3587 + C92212 * C4019 + C61411 * C956 +
              C60959 * C1328) *
                 C2709 +
             (C61412 * C3431 + C92212 * C3875 + C61411 * C805 +
              C60959 * C1204) *
                 C2849) +
            (C61411 * C3587 + C60959 * C4019 + C61412 * C5955 +
             C92212 * C6453) *
                C2710) *
               C31257 +
           ((C61411 * C3432 + C60959 * C3876 + C61412 * C5774 +
             C92212 * C6290) *
                C2850 -
            ((C63976 + C63977) * C2709 + (C63751 + C63750) * C2849) +
            (C61411 * C3588 + C60959 * C4020 + C61412 * C5956 +
             C92212 * C6454) *
                C2710) *
               C31258 +
           ((C61411 * C3433 + C60959 * C3877 + C61412 * C11870 +
             C92212 * C12506) *
                C2850 -
            ((C63974 + C63975) * C2709 + (C63755 + C63754) * C2849) +
            (C61411 * C3589 + C60959 * C4021 + C61412 * C12072 +
             C92212 * C12732) *
                C2710) *
               C31259) *
              C92137 * C1986) *
         C92078) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C61411 * C107 + C60959 * C555 + C61412 * C1389 + C92212 * C1788) *
                C2849 +
            (C61411 * C245 + C60959 * C719 + C61412 * C1540 + C92212 * C1909) *
                C2709 -
            (C61412 * C1390 + C92212 * C1789 + C61411 * C1389 +
             C60959 * C1788) *
                C2850 -
            (C61412 * C1541 + C92212 * C1910 + C61411 * C1540 +
             C60959 * C1909) *
                C2710) *
               C92062 * C4099 +
           ((C67034 + C67035) * C2849 + (C67232 + C67233) * C2709 -
            (C70512 + C70513) * C2850 - (C70730 + C70731) * C2710) *
               C92062 * C4100 +
           (C67046 * C2849 + C67238 * C2709 - (C70508 + C70509) * C2850 -
            (C70732 + C70733) * C2710) *
               C92062 * C4101) *
              C1985 +
          (((C70513 + C70512) * C2850 -
            ((C67233 + C67232) * C2709 + (C67035 + C67034) * C2849) +
            (C70731 + C70730) * C2710) *
               C92062 * C4099 +
           ((C70509 + C70508) * C2850 -
            ((C67235 + C67234) * C2709 + (C67039 + C67038) * C2849) +
            (C70733 + C70732) * C2710) *
               C92062 * C4100 +
           ((C61411 * C8536 + C60959 * C9196 + C61412 * C37227 +
             C92212 * C37539) *
                C2850 -
            ((C67236 + C67237) * C2709 + (C67044 + C67045) * C2849) +
            (C61411 * C8780 + C60959 * C9424 + C61412 * C37333 +
             C92212 * C37642) *
                C2710) *
               C92062 * C4101) *
              C1986) *
         C92078) /
            (p * q * std::sqrt(p + q));
    d2eexx[72] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31262 * C107 + C31257 * C113 + C31263 * C108 + C31258 * C114 +
             C31264 * C109 + C31259 * C115) *
                C801 +
            (C31262 * C117 + C31257 * C125 + C31263 * C118 + C31258 * C126 +
             C31264 * C119 + C31259 * C127) *
                C92078) *
               C92137 * C60959 +
           ((C31262 * C1389 + C31257 * C1401 + C31263 * C1388 + C31258 * C1400 +
             C31264 * C1387 + C31259 * C1399) *
                C801 +
            (C31262 * C1397 + C31257 * C1413 + C31263 * C1396 + C31258 * C1412 +
             C31264 * C1395 + C31259 * C1411) *
                C92078) *
               C92137 * C92212) *
              C92110 * C798 -
          (((C35354 + C35355 + C35356) * C92078 +
            (C35357 + C35358 + C35359) * C801) *
               C92137 * C92212 +
           ((C32047 + C32046 + C32045) * C92078 +
            (C32044 + C32043 + C32042) * C801) *
               C92137 * C60959) *
              C92110 * C799 +
          (((C32053 + C32052 + C32051) * C801 +
            (C32050 + C32049 + C32048) * C92078) *
               C92137 * C60959 +
           ((C31262 * C5772 + C31257 * C5780 + C31263 * C5771 + C31258 * C5779 +
             C31264 * C7566 + C31259 * C7567) *
                C801 +
            (C31262 * C5778 + C31257 * C5790 + C31263 * C5777 + C31258 * C5789 +
             C31264 * C7568 + C31259 * C7569) *
                C92078) *
               C92137 * C92212) *
              C92110 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C31262 * C107 + C31257 * C113 + C31263 * C108 + C31258 * C114 +
            C31264 * C109 + C31259 * C115) *
               C104 +
           (C31262 * C117 + C31257 * C125 + C31263 * C118 + C31258 * C126 +
            C31264 * C119 + C31259 * C127) *
               C93 -
           (C31264 * C110 + C31259 * C116 + C31263 * C109 + C31258 * C115 +
            C31262 * C108 + C31257 * C114) *
               C105 -
           (C31264 * C120 + C31259 * C128 + C31263 * C119 + C31258 * C127 +
            C31262 * C118 + C31257 * C126) *
               C94 +
           (C31262 * C109 + C31257 * C115 + C31263 * C110 + C31258 * C116 +
            C31264 * C111 + C31259 * C121) *
               C106 +
           (C31262 * C119 + C31257 * C127 + C31263 * C120 + C31258 * C128 +
            C31264 * C122 + C31259 * C129) *
               C95) *
              C92137 * C60959 +
          ((C31262 * C1389 + C31257 * C1401 + C31263 * C1388 + C31258 * C1400 +
            C31264 * C1387 + C31259 * C1399) *
               C104 +
           (C31262 * C1397 + C31257 * C1413 + C31263 * C1396 + C31258 * C1412 +
            C31264 * C1395 + C31259 * C1411) *
               C93 -
           (C31264 * C1386 + C31259 * C1398 + C31263 * C1387 + C31258 * C1399 +
            C31262 * C1388 + C31257 * C1400) *
               C105 -
           (C31264 * C1394 + C31259 * C1410 + C31263 * C1395 + C31258 * C1411 +
            C31262 * C1396 + C31257 * C1412) *
               C94 +
           (C31262 * C1387 + C31257 * C1399 + C31263 * C1386 + C31258 * C1398 +
            C31264 * C2711 + C31259 * C2712) *
               C106 +
           (C31262 * C1395 + C31257 * C1411 + C31263 * C1394 + C31258 * C1410 +
            C31264 * C2713 + C31259 * C2714) *
               C95) *
              C92137 * C92212) *
         C92110 * C92099) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31262 * C107 + C31257 * C113 + C31263 * C108 + C31258 * C114 +
             C31264 * C109 + C31259 * C115) *
                C801 +
            (C31262 * C117 + C31257 * C125 + C31263 * C118 + C31258 * C126 +
             C31264 * C119 + C31259 * C127) *
                C92078) *
               C92137 * C60959 +
           ((C62408 + C62409 + C62410) * C801 +
            (C62411 + C62412 + C62413) * C92078) *
               C92137 * C92212) *
              C1383 -
          (((C62414 + C62415 + C62416) * C92078 +
            (C62417 + C62418 + C62419) * C801) *
               C92137 * C92212 +
           ((C62413 + C62412 + C62411) * C92078 +
            (C62410 + C62409 + C62408) * C801) *
               C92137 * C60959) *
              C1384 +
          (((C62419 + C62418 + C62417) * C801 +
            (C62416 + C62415 + C62414) * C92078) *
               C92137 * C60959 +
           ((C31262 * C10961 + C31257 * C10967 + C31263 * C10960 +
             C31258 * C10966 + C31264 * C12840 + C31259 * C12841) *
                C801 +
            (C31262 * C10965 + C31257 * C10973 + C31263 * C10964 +
             C31258 * C10972 + C31264 * C12842 + C31259 * C12843) *
                C92078) *
               C92137 * C92212) *
              C1385) *
         C92099) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C36216 * C107 + C92062 * C113) * C104 +
            (C36216 * C117 + C92062 * C125) * C93 -
            (C36216 * C108 + C92062 * C114) * C105 -
            (C36216 * C118 + C92062 * C126) * C94 +
            (C36216 * C109 + C92062 * C115) * C106 +
            (C36216 * C119 + C92062 * C127) * C95) *
               C4099 +
           (C36692 * C104 + C36693 * C93 - C37728 * C105 - C37729 * C94 +
            (C36216 * C803 + C92062 * C815) * C106 +
            (C36216 * C811 + C92062 * C827) * C95) *
               C4100 +
           (C36694 * C104 + C36695 * C93 - C37730 * C105 - C37731 * C94 +
            (C36216 * C808 + C92062 * C820) * C106 +
            (C36216 * C824 + C92062 * C832) * C95) *
               C4101) *
              C60959 +
          ((C41107 * C104 + C41108 * C93 - C42882 * C105 - C42883 * C94 +
            (C36216 * C1387 + C92062 * C1399) * C106 +
            (C36216 * C1395 + C92062 * C1411) * C95) *
               C4099 +
           (C38977 * C104 + C38976 * C93 - C41964 * C105 - C41965 * C94 +
            (C36216 * C3433 + C92062 * C3437) * C106 +
            (C36216 * C3441 + C92062 * C3445) * C95) *
               C4100 +
           (C38975 * C104 + C38974 * C93 - C58255 * C105 - C58256 * C94 +
            (C36216 * C7566 + C92062 * C7567) * C106 +
            (C36216 * C7568 + C92062 * C7569) * C95) *
               C4101) *
              C92212) *
         C92110 * C92099) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C36216 * C107 + C92062 * C113) * C801 +
             (C36216 * C117 + C92062 * C125) * C92078) *
                C4099 +
            (C36700 + C36701) * C4100 + C36708 * C4101) *
               C60959 +
           ((C41116 + C41117) * C4099 + C43820 * C4100 + C56777 * C4101) *
               C92212) *
              C92110 * C798 -
          (((C38978 + C38979) * C4101 + C60033 * C4100 + C43822 * C4099) *
               C92212 +
           ((C36705 + C36704) * C4101 + (C36703 + C36702) * C4100 +
            (C36701 + C36700) * C4099) *
               C60959) *
              C92110 * C799 +
          ((C36708 * C4099 + C36709 * C4100 + (C36707 + C36706) * C4101) *
               C60959 +
           (C56777 * C4099 + (C38979 + C38978) * C4100 +
            ((C36216 * C38955 + C92062 * C38956) * C801 +
             (C36216 * C38957 + C92062 * C38958) * C92078) *
                C4101) *
               C92212) *
              C92110 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C36216 * C107 + C92062 * C113) * C801 +
             (C36216 * C117 + C92062 * C125) * C92078) *
                C4099 +
            (C36700 + C36701) * C4100 + C36708 * C4101) *
               C60959 +
           ((C41116 + C41117) * C4099 + C43820 * C4100 + C56777 * C4101) *
               C92212) *
              C1383 -
          (((C40326 + C40327) * C4101 + C43821 * C4100 +
            (C41119 + C41118) * C4099) *
               C92212 +
           (C60033 * C4101 + C43822 * C4100 + (C41117 + C41116) * C4099) *
               C60959) *
              C1384 +
          ((C41124 * C4099 + C41098 * C4100 + (C40327 + C40326) * C4101) *
               C60959 +
           ((C41123 + C41122) * C4099 + (C41121 + C41120) * C4100 +
            ((C36216 * C43815 + C92062 * C43816) * C801 +
             (C36216 * C43817 + C92062 * C43818) * C92078) *
                C4101) *
               C92212) *
              C1385) *
         C92099) /
            (p * q * std::sqrt(p + q));
    d2eexy[72] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C31262 * C107 + C31257 * C113 + C31263 * C108 + C31258 * C114 +
            C31264 * C109 + C31259 * C115) *
               C884 +
           (C31262 * C182 + C31257 * C188 + C31263 * C183 + C31258 * C189 +
            C31264 * C184 + C31259 * C190) *
               C798 -
           (C32044 + C32043 + C32042) * C885 -
           (C32140 + C32141 + C32142) * C799 +
           (C32053 + C32052 + C32051) * C886 +
           (C32143 + C32144 + C32145) * C800) *
              C92137 * C60959 +
          ((C31262 * C1389 + C31257 * C1401 + C31263 * C1388 + C31258 * C1400 +
            C31264 * C1387 + C31259 * C1399) *
               C884 +
           (C31262 * C1471 + C31257 * C1479 + C31263 * C1470 + C31258 * C1478 +
            C31264 * C1469 + C31259 * C1477) *
               C798 -
           (C35357 + C35358 + C35359) * C885 -
           (C35466 + C35465 + C35464) * C799 +
           (C31262 * C5772 + C31257 * C5780 + C31263 * C5771 + C31258 * C5779 +
            C31264 * C7566 + C31259 * C7567) *
               C886 +
           (C31262 * C5870 + C31257 * C5876 + C31263 * C5869 + C31258 * C5875 +
            C31264 * C7668 + C31259 * C7669) *
               C800) *
              C92137 * C92212) *
         C92078 * C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31262 * C107 + C31257 * C113 + C31263 * C108 + C31258 * C114 +
             C31264 * C109 + C31259 * C115) *
                C181 +
            (C31262 * C182 + C31257 * C188 + C31263 * C183 + C31258 * C189 +
             C31264 * C184 + C31259 * C190) *
                C92099) *
               C92137 * C60959 +
           ((C31262 * C1389 + C31257 * C1401 + C31263 * C1388 + C31258 * C1400 +
             C31264 * C1387 + C31259 * C1399) *
                C181 +
            (C31262 * C1471 + C31257 * C1479 + C31263 * C1470 + C31258 * C1478 +
             C31264 * C1469 + C31259 * C1477) *
                C92099) *
               C92137 * C92212) *
              C93 -
          (((C31264 * C1468 + C31259 * C1476 + C31263 * C1469 + C31258 * C1477 +
             C31262 * C1470 + C31257 * C1478) *
                C92099 +
            (C31264 * C1386 + C31259 * C1398 + C31263 * C1387 + C31258 * C1399 +
             C31262 * C1388 + C31257 * C1400) *
                C181) *
               C92137 * C92212 +
           ((C31264 * C185 + C31259 * C191 + C31263 * C184 + C31258 * C190 +
             C31262 * C183 + C31257 * C189) *
                C92099 +
            (C31264 * C110 + C31259 * C116 + C31263 * C109 + C31258 * C115 +
             C31262 * C108 + C31257 * C114) *
                C181) *
               C92137 * C60959) *
              C94 +
          (((C31262 * C109 + C31257 * C115 + C31263 * C110 + C31258 * C116 +
             C31264 * C111 + C31259 * C121) *
                C181 +
            (C31262 * C184 + C31257 * C190 + C31263 * C185 + C31258 * C191 +
             C31264 * C186 + C31259 * C192) *
                C92099) *
               C92137 * C60959 +
           ((C31262 * C1387 + C31257 * C1399 + C31263 * C1386 + C31258 * C1398 +
             C31264 * C2711 + C31259 * C2712) *
                C181 +
            (C31262 * C1469 + C31257 * C1477 + C31263 * C1468 + C31258 * C1476 +
             C31264 * C2781 + C31259 * C2782) *
                C92099) *
               C92137 * C92212) *
              C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31262 * C107 + C31257 * C113 + C31263 * C108 + C31258 * C114 +
             C31264 * C109 + C31259 * C115) *
                C181 +
            (C31262 * C182 + C31257 * C188 + C31263 * C183 + C31258 * C189 +
             C31264 * C184 + C31259 * C190) *
                C92099) *
               C92137 * C60959 +
           ((C62408 + C62409 + C62410) * C181 +
            (C62506 + C62507 + C62508) * C92099) *
               C92137 * C92212) *
              C92078 * C1383 -
          (((C62509 + C62510 + C62511) * C92099 +
            (C62417 + C62418 + C62419) * C181) *
               C92137 * C92212 +
           ((C62508 + C62507 + C62506) * C92099 +
            (C62410 + C62409 + C62408) * C181) *
               C92137 * C60959) *
              C92078 * C1384 +
          (((C62419 + C62418 + C62417) * C181 +
            (C62511 + C62510 + C62509) * C92099) *
               C92137 * C60959 +
           ((C31262 * C10961 + C31257 * C10967 + C31263 * C10960 +
             C31258 * C10966 + C31264 * C12840 + C31259 * C12841) *
                C181 +
            (C31262 * C11093 + C31257 * C11097 + C31263 * C11092 +
             C31258 * C11096 + C31264 * C12966 + C31259 * C12967) *
                C92099) *
               C92137 * C92212) *
              C92078 * C1385)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C36216 * C107 + C92062 * C113) * C181 +
             (C36216 * C182 + C92062 * C188) * C92099) *
                C4099 +
            (C36692 * C181 + C36770 * C92099) * C4100 +
            (C36694 * C181 + C36771 * C92099) * C4101) *
               C60959 +
           ((C41203 + C41224) * C4099 + (C41206 + C41207) * C4100 +
            (C57557 + C57558) * C4101) *
               C92212) *
              C93 -
          (((C59247 + C59248) * C4101 + (C42993 + C42994) * C4100 +
            (C43001 + C42997) * C4099) *
               C92212 +
           ((C37813 * C92099 + C37730 * C181) * C4101 +
            (C37812 * C92099 + C37728 * C181) * C4100 +
            ((C36216 * C183 + C92062 * C189) * C92099 +
             (C36216 * C108 + C92062 * C114) * C181) *
                C4099) *
               C60959) *
              C94 +
          ((((C36216 * C109 + C92062 * C115) * C181 +
             (C36216 * C184 + C92062 * C190) * C92099) *
                C4099 +
            ((C36216 * C803 + C92062 * C815) * C181 +
             (C36216 * C888 + C92062 * C896) * C92099) *
                C4100 +
            ((C36216 * C808 + C92062 * C820) * C181 +
             (C36216 * C893 + C92062 * C901) * C92099) *
                C4101) *
               C60959 +
           (((C36216 * C1387 + C92062 * C1399) * C181 +
             (C36216 * C1469 + C92062 * C1477) * C92099) *
                C4099 +
            ((C36216 * C3433 + C92062 * C3437) * C181 +
             (C36216 * C3515 + C92062 * C3519) * C92099) *
                C4100 +
            ((C36216 * C7566 + C92062 * C7567) * C181 +
             (C36216 * C7668 + C92062 * C7669) * C92099) *
                C4101) *
               C92212) *
              C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C36216 * C107 + C92062 * C113) * C884 +
            (C36216 * C182 + C92062 * C188) * C798 - C36692 * C885 -
            C36770 * C799 + C36694 * C886 + C36771 * C800) *
               C4099 +
           (C36692 * C884 + C36770 * C798 - C36694 * C885 - C36771 * C799 +
            C36696 * C886 + C36772 * C800) *
               C4100 +
           (C36694 * C884 + C36771 * C798 - C36696 * C885 - C36772 * C799 +
            C36699 * C886 + C36773 * C800) *
               C4101) *
              C60959 +
          ((C41107 * C884 + C41219 * C798 - C38977 * C885 - C39058 * C799 +
            C38975 * C886 + C39059 * C800) *
               C4099 +
           (C38977 * C884 + C39058 * C798 - C38975 * C885 - C39059 * C799 +
            C38973 * C886 + C39060 * C800) *
               C4100 +
           (C38975 * C884 + C39059 * C798 - C38973 * C885 - C39060 * C799 +
            (C36216 * C38955 + C92062 * C38956) * C886 +
            (C36216 * C39049 + C92062 * C39050) * C800) *
               C4101) *
              C92212) *
         C92078 * C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C36216 * C107 + C92062 * C113) * C181 +
             (C36216 * C182 + C92062 * C188) * C92099) *
                C4099 +
            (C36692 * C181 + C36770 * C92099) * C4100 +
            (C36694 * C181 + C36771 * C92099) * C4101) *
               C60959 +
           ((C41203 + C41224) * C4099 + (C41206 + C41207) * C4100 +
            (C57557 + C57558) * C4101) *
               C92212) *
              C92078 * C1383 -
          (((C57559 + C57560) * C4101 + (C41212 + C41211) * C4100 +
            (C41225 + C41208) * C4099) *
               C92212 +
           ((C57558 + C57557) * C4101 + (C41207 + C41206) * C4100 +
            (C41224 + C41203) * C4099) *
               C60959) *
              C92078 * C1384 +
          ((C41229 * C4099 + C41221 * C4100 + (C57560 + C57559) * C4101) *
               C60959 +
           ((C41218 + C41228) * C4099 + (C41215 + C41227) * C4100 +
            ((C36216 * C43815 + C92062 * C43816) * C181 +
             (C36216 * C43920 + C92062 * C43921) * C92099) *
                C4101) *
               C92212) *
              C92078 * C1385)) /
            (p * q * std::sqrt(p + q));
    d2eexz[72] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31262 * C107 + C31257 * C113 + C31263 * C108 + C31258 * C114 +
             C31264 * C109 + C31259 * C115) *
                C244 +
            (C31262 * C245 + C31257 * C251 + C31263 * C246 + C31258 * C252 +
             C31264 * C247 + C31259 * C253) *
                C92110) *
               C92137 * C60959 +
           ((C31262 * C1389 + C31257 * C1401 + C31263 * C1388 + C31258 * C1400 +
             C31264 * C1387 + C31259 * C1399) *
                C244 +
            (C31262 * C1540 + C31257 * C1548 + C31263 * C1539 + C31258 * C1547 +
             C31264 * C1538 + C31259 * C1546) *
                C92110) *
               C92137 * C92212) *
              C798 -
          (((C35571 + C35572 + C35573) * C92110 +
            (C35357 + C35358 + C35359) * C244) *
               C92137 * C92212 +
           ((C32234 + C32233 + C32232) * C92110 +
            (C32044 + C32043 + C32042) * C244) *
               C92137 * C60959) *
              C799 +
          (((C32053 + C32052 + C32051) * C244 +
            (C32237 + C32236 + C32235) * C92110) *
               C92137 * C60959 +
           ((C31262 * C5772 + C31257 * C5780 + C31263 * C5771 + C31258 * C5779 +
             C31264 * C7566 + C31259 * C7567) *
                C244 +
            (C31262 * C5958 + C31257 * C5964 + C31263 * C5957 + C31258 * C5963 +
             C31264 * C7768 + C31259 * C7769) *
                C92110) *
               C92137 * C92212) *
              C800) *
         C92078) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31262 * C107 + C31257 * C113 + C31263 * C108 + C31258 * C114 +
             C31264 * C109 + C31259 * C115) *
                C244 +
            (C31262 * C245 + C31257 * C251 + C31263 * C246 + C31258 * C252 +
             C31264 * C247 + C31259 * C253) *
                C92110) *
               C92137 * C60959 +
           ((C31262 * C1389 + C31257 * C1401 + C31263 * C1388 + C31258 * C1400 +
             C31264 * C1387 + C31259 * C1399) *
                C244 +
            (C31262 * C1540 + C31257 * C1548 + C31263 * C1539 + C31258 * C1547 +
             C31264 * C1538 + C31259 * C1546) *
                C92110) *
               C92137 * C92212) *
              C92099 * C93 -
          (((C31264 * C1537 + C31259 * C1545 + C31263 * C1538 + C31258 * C1546 +
             C31262 * C1539 + C31257 * C1547) *
                C92110 +
            (C31264 * C1386 + C31259 * C1398 + C31263 * C1387 + C31258 * C1399 +
             C31262 * C1388 + C31257 * C1400) *
                C244) *
               C92137 * C92212 +
           ((C31264 * C248 + C31259 * C254 + C31263 * C247 + C31258 * C253 +
             C31262 * C246 + C31257 * C252) *
                C92110 +
            (C31264 * C110 + C31259 * C116 + C31263 * C109 + C31258 * C115 +
             C31262 * C108 + C31257 * C114) *
                C244) *
               C92137 * C60959) *
              C92099 * C94 +
          (((C31262 * C109 + C31257 * C115 + C31263 * C110 + C31258 * C116 +
             C31264 * C111 + C31259 * C121) *
                C244 +
            (C31262 * C247 + C31257 * C253 + C31263 * C248 + C31258 * C254 +
             C31264 * C249 + C31259 * C255) *
                C92110) *
               C92137 * C60959 +
           ((C31262 * C1387 + C31257 * C1399 + C31263 * C1386 + C31258 * C1398 +
             C31264 * C2711 + C31259 * C2712) *
                C244 +
            (C31262 * C1538 + C31257 * C1546 + C31263 * C1537 + C31258 * C1545 +
             C31264 * C2851 + C31259 * C2852) *
                C92110) *
               C92137 * C92212) *
              C92099 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C31262 * C107 + C31257 * C113 + C31263 * C108 + C31258 * C114 +
            C31264 * C109 + C31259 * C115) *
               C1534 +
           (C31262 * C245 + C31257 * C251 + C31263 * C246 + C31258 * C252 +
            C31264 * C247 + C31259 * C253) *
               C1383 -
           (C62410 + C62409 + C62408) * C1535 -
           (C62598 + C62599 + C62600) * C1384 +
           (C62419 + C62418 + C62417) * C1536 +
           (C62601 + C62602 + C62603) * C1385) *
              C92137 * C60959 +
          ((C62408 + C62409 + C62410) * C1534 +
           (C62600 + C62599 + C62598) * C1383 -
           (C62417 + C62418 + C62419) * C1535 -
           (C62603 + C62602 + C62601) * C1384 +
           (C31262 * C10961 + C31257 * C10967 + C31263 * C10960 +
            C31258 * C10966 + C31264 * C12840 + C31259 * C12841) *
               C1536 +
           (C31262 * C11197 + C31257 * C11201 + C31263 * C11198 +
            C31258 * C11202 + C31264 * C13078 + C31259 * C13079) *
               C1385) *
              C92137 * C92212) *
         C92099 * C92078) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C36216 * C107 + C92062 * C113) * C244 +
             (C36216 * C245 + C92062 * C251) * C92110) *
                C4099 +
            (C36826 + C36842) * C4100 + C36846 * C4101) *
               C60959 +
           ((C41107 * C244 + C41316 * C92110) * C4099 +
            (C40482 + C40483) * C4100 + C56926 * C4101) *
               C92212) *
              C92099 * C93 -
          (((C58462 + C58458) * C4101 + (C42182 + C42174) * C4100 +
            (C43104 * C92110 + C42882 * C244) * C4099) *
               C92212 +
           ((C37894 + C37884) * C4101 + (C37893 + C37881) * C4100 +
            ((C36216 * C246 + C92062 * C252) * C92110 +
             (C36216 * C108 + C92062 * C114) * C244) *
                C4099) *
               C60959) *
              C92099 * C94 +
          ((((C36216 * C109 + C92062 * C115) * C244 +
             (C36216 * C247 + C92062 * C253) * C92110) *
                C4099 +
            ((C36216 * C803 + C92062 * C815) * C244 +
             (C36216 * C954 + C92062 * C962) * C92110) *
                C4100 +
            ((C36216 * C808 + C92062 * C820) * C244 +
             (C36216 * C959 + C92062 * C967) * C92110) *
                C4101) *
               C60959 +
           (((C36216 * C1387 + C92062 * C1399) * C244 +
             (C36216 * C1538 + C92062 * C1546) * C92110) *
                C4099 +
            ((C36216 * C3433 + C92062 * C3437) * C244 +
             (C36216 * C3589 + C92062 * C3593) * C92110) *
                C4100 +
            ((C36216 * C7566 + C92062 * C7567) * C244 +
             (C36216 * C7768 + C92062 * C7769) * C92110) *
                C4101) *
               C92212) *
              C92099 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C36216 * C107 + C92062 * C113) * C244 +
             (C36216 * C245 + C92062 * C251) * C92110) *
                C4099 +
            (C36826 + C36842) * C4100 + C36846 * C4101) *
               C60959 +
           ((C41107 * C244 + C41316 * C92110) * C4099 +
            (C40482 + C40483) * C4100 + C56926 * C4101) *
               C92212) *
              C798 -
          (((C56927 + C56928) * C4101 + (C40490 + C40491) * C4100 +
            (C40483 + C40482) * C4099) *
               C92212 +
           ((C36844 + C36832) * C4101 + (C36843 + C36829) * C4100 +
            (C36842 + C36826) * C4099) *
               C60959) *
              C799 +
          ((C36846 * C4099 + C36847 * C4100 + (C36837 + C36845) * C4101) *
               C60959 +
           (C56926 * C4099 + (C56928 + C56927) * C4100 +
            ((C36216 * C38955 + C92062 * C38956) * C244 +
             (C36216 * C39126 + C92062 * C39127) * C92110) *
                C4101) *
               C92212) *
              C800) *
         C92078) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C36216 * C107 + C92062 * C113) * C1534 +
            (C36216 * C245 + C92062 * C251) * C1383 - C41107 * C1535 -
            C41316 * C1384 + C41109 * C1536 + C41317 * C1385) *
               C4099 +
           (C36692 * C1534 + C36838 * C1383 - C38977 * C1535 - C39144 * C1384 +
            C40320 * C1536 + C40492 * C1385) *
               C4100 +
           (C36694 * C1534 + C36839 * C1383 - C38975 * C1535 - C39145 * C1384 +
            C40323 * C1536 + C40493 * C1385) *
               C4101) *
              C60959 +
          ((C41107 * C1534 + C41316 * C1383 - C41109 * C1535 - C41317 * C1384 +
            C41115 * C1536 + C41318 * C1385) *
               C4099 +
           (C38977 * C1534 + C39144 * C1383 - C40320 * C1535 - C40492 * C1384 +
            C41113 * C1536 + C41319 * C1385) *
               C4100 +
           (C38975 * C1534 + C39145 * C1383 - C40323 * C1535 - C40493 * C1384 +
            (C36216 * C43815 + C92062 * C43816) * C1536 +
            (C36216 * C44036 + C92062 * C44037) * C1385) *
               C4101) *
              C92212) *
         C92099 * C92078) /
            (p * q * std::sqrt(p + q));
    d2eeyx[72] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92137 * C308) * C801 +
             (C307 * C117 + C92137 * C314) * C92078) *
                C60959 +
            (C11336 + C11337) * C92212) *
               C31257 +
           ((C337 * C801 + C338 * C92078) * C60959 +
            (C11315 + C11316) * C92212) *
               C31258 +
           ((C339 * C801 + C340 * C92078) * C60959 +
            (C21541 + C21542) * C92212) *
               C31259) *
              C92110 * C798 -
          (((C24231 + C24230) * C92212 +
            (C2215 * C92078 + C2214 * C801) * C60959) *
               C31259 +
           ((C14197 + C14196) * C92212 +
            (C2213 * C92078 + C2212 * C801) * C60959) *
               C31258 +
           ((C14205 + C14204) * C92212 +
            ((C307 * C813 + C92137 * C1030) * C92078 +
             (C307 * C805 + C92137 * C1022) * C801) *
                C60959) *
               C31257) *
              C92110 * C799 +
          ((((C307 * C806 + C92137 * C1023) * C801 +
             (C307 * C822 + C92137 * C1031) * C92078) *
                C60959 +
            ((C307 * C5772 + C92137 * C6042) * C801 +
             (C307 * C5778 + C92137 * C6048) * C92078) *
                C92212) *
               C31257 +
           (((C307 * C807 + C92137 * C1024) * C801 +
             (C307 * C823 + C92137 * C1032) * C92078) *
                C60959 +
            ((C307 * C5771 + C92137 * C6041) * C801 +
             (C307 * C5777 + C92137 * C6047) * C92078) *
                C92212) *
               C31258 +
           (((C307 * C808 + C92137 * C1025) * C801 +
             (C307 * C824 + C92137 * C1033) * C92078) *
                C60959 +
            ((C307 * C7566 + C92137 * C7868) * C801 +
             (C307 * C7568 + C92137 * C7869) * C92078) *
                C92212) *
               C31259) *
              C92110 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C307 * C107 + C92137 * C308) * C104 +
            (C307 * C117 + C92137 * C314) * C93 - C337 * C105 - C338 * C94 +
            C339 * C106 + C340 * C95) *
               C60959 +
           (C11327 * C104 + C11328 * C93 - C2934 * C105 - C2935 * C94 +
            C2936 * C106 + C2937 * C95) *
               C92212) *
              C31257 +
          ((C337 * C104 + C338 * C93 - C339 * C105 - C340 * C94 + C341 * C106 +
            C342 * C95) *
               C60959 +
           (C2934 * C104 + C2935 * C93 - C2936 * C105 - C2937 * C94 +
            C2938 * C106 + C2939 * C95) *
               C92212) *
              C31258 +
          ((C339 * C104 + C340 * C93 - C341 * C105 - C342 * C94 + C343 * C106 +
            C344 * C95) *
               C60959 +
           (C2936 * C104 + C2937 * C93 - C2938 * C105 - C2939 * C94 +
            (C307 * C2711 + C92137 * C2919) * C106 +
            (C307 * C2713 + C92137 * C2920) * C95) *
               C92212) *
              C31259) *
         C92110 * C92099) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92137 * C308) * C801 +
             (C307 * C117 + C92137 * C314) * C92078) *
                C60959 +
            (C11336 + C11337) * C92212) *
               C31257 +
           ((C337 * C801 + C338 * C92078) * C60959 +
            (C11315 + C11316) * C92212) *
               C31258 +
           ((C339 * C801 + C340 * C92078) * C60959 +
            (C21541 + C21542) * C92212) *
               C31259) *
              C1383 -
          (((C21543 + C21544) * C92212 + (C21542 + C21541) * C60959) * C31259 +
           ((C11318 + C11317) * C92212 + (C11316 + C11315) * C60959) * C31258 +
           ((C11339 + C11338) * C92212 + (C11337 + C11336) * C60959) * C31257) *
              C1384 +
          ((C11344 * C60959 + (C11343 + C11342) * C92212) * C31257 +
           (C11331 * C60959 + (C11341 + C11340) * C92212) * C31258 +
           ((C21544 + C21543) * C60959 +
            ((C307 * C12840 + C92137 * C13190) * C801 +
             (C307 * C12842 + C92137 * C13191) * C92078) *
                C92212) *
               C31259) *
              C1385) *
         C92099) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C4326 * C107 + C4099 * C308 + C4327 * C805 + C4100 * C1022 +
            C4328 * C806 + C4101 * C1023) *
               C104 +
           (C4326 * C117 + C4099 * C314 + C4327 * C813 + C4100 * C1030 +
            C4328 * C822 + C4101 * C1031) *
               C93 -
           (C4354 + C4355 + C4356) * C105 - (C4357 + C4358 + C4359) * C94 +
           (C4360 + C4361 + C4362) * C106 + (C4363 + C4364 + C4365) * C95) *
              C60959 +
          ((C4326 * C1389 + C4099 * C1606 + C4327 * C3431 + C4100 * C3661 +
            C4328 * C5772 + C4101 * C6042) *
               C104 +
           (C4326 * C1397 + C4099 * C1614 + C4327 * C3439 + C4100 * C3665 +
            C4328 * C5778 + C4101 * C6048) *
               C93 -
           (C7885 + C7884 + C7883) * C105 - (C7888 + C7887 + C7886) * C94 +
           (C4326 * C1387 + C4099 * C1604 + C4327 * C3433 + C4100 * C3663 +
            C4328 * C7566 + C4101 * C7868) *
               C106 +
           (C4326 * C1395 + C4099 * C1612 + C4327 * C3441 + C4100 * C3667 +
            C4328 * C7568 + C4101 * C7869) *
               C95) *
              C92212) *
         C92062 * C92110 * C92099) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4326 * C107 + C4099 * C308 + C4327 * C805 + C4100 * C1022 +
             C4328 * C806 + C4101 * C1023) *
                C801 +
            (C4326 * C117 + C4099 * C314 + C4327 * C813 + C4100 * C1030 +
             C4328 * C822 + C4101 * C1031) *
                C92078) *
               C60959 +
           ((C4326 * C1389 + C4099 * C1606 + C4327 * C3431 + C4100 * C3661 +
             C4328 * C5772 + C4101 * C6042) *
                C801 +
            (C4326 * C1397 + C4099 * C1614 + C4327 * C3439 + C4100 * C3665 +
             C4328 * C5778 + C4101 * C6048) *
                C92078) *
               C92212) *
              C92062 * C92110 * C798 -
          (((C4328 * C8540 + C4101 * C8896 + C4327 * C5778 + C4100 * C6048 +
             C4326 * C3439 + C4099 * C3665) *
                C92078 +
            (C4328 * C8536 + C4101 * C8894 + C4327 * C5772 + C4100 * C6042 +
             C4326 * C3431 + C4099 * C3661) *
                C801) *
               C92212 +
           ((C4328 * C4886 + C4101 * C5222 + C4327 * C822 + C4100 * C1031 +
             C4326 * C813 + C4099 * C1030) *
                C92078 +
            (C4328 * C4882 + C4101 * C5218 + C4327 * C806 + C4100 * C1023 +
             C4326 * C805 + C4099 * C1022) *
                C801) *
               C60959) *
              C92062 * C92110 * C799 +
          (((C4326 * C806 + C4099 * C1023 + C4327 * C4882 + C4100 * C5218 +
             C4328 * C4883 + C4101 * C5219) *
                C801 +
            (C4326 * C822 + C4099 * C1031 + C4327 * C4886 + C4100 * C5222 +
             C4328 * C4891 + C4101 * C5223) *
                C92078) *
               C60959 +
           ((C4326 * C5772 + C4099 * C6042 + C4327 * C8536 + C4100 * C8894 +
             C4328 * C38955 + C4101 * C39215) *
                C801 +
            (C4326 * C5778 + C4099 * C6048 + C4327 * C8540 + C4100 * C8896 +
             C4328 * C38957 + C4101 * C39216) *
                C92078) *
               C92212) *
              C92062 * C92110 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4326 * C107 + C4099 * C308 + C4327 * C805 + C4100 * C1022 +
             C4328 * C806 + C4101 * C1023) *
                C801 +
            (C4326 * C117 + C4099 * C314 + C4327 * C813 + C4100 * C1030 +
             C4328 * C822 + C4101 * C1031) *
                C92078) *
               C60959 +
           ((C67562 + C67563 + C67564) * C801 +
            (C67565 + C67566 + C67567) * C92078) *
               C92212) *
              C92062 * C1383 -
          (((C67568 + C67569 + C67570) * C92078 +
            (C67571 + C67572 + C67573) * C801) *
               C92212 +
           ((C67567 + C67566 + C67565) * C92078 +
            (C67564 + C67563 + C67562) * C801) *
               C60959) *
              C92062 * C1384 +
          (((C67573 + C67572 + C67571) * C801 +
            (C67570 + C67569 + C67568) * C92078) *
               C60959 +
           ((C4326 * C10961 + C4099 * C11299 + C4327 * C13849 + C4100 * C14183 +
             C4328 * C43815 + C4101 * C44144) *
                C801 +
            (C4326 * C10965 + C4099 * C11303 + C4327 * C13853 + C4100 * C14185 +
             C4328 * C43817 + C4101 * C44145) *
                C92078) *
               C92212) *
              C92062 * C1385) *
         C92099) /
            (p * q * std::sqrt(p + q));
    d2eeyy[72] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C307 * C107 + C92137 * C308) * C884 +
            (C307 * C182 + C92137 * C394) * C798 -
            (C307 * C805 + C92137 * C1022) * C885 -
            (C307 * C890 + C92137 * C1085) * C799 +
            (C307 * C806 + C92137 * C1023) * C886 +
            (C307 * C891 + C92137 * C1086) * C800) *
               C60959 +
           (C11327 * C884 + C11436 * C798 - C14200 * C885 - C14318 * C799 +
            (C307 * C5772 + C92137 * C6042) * C886 +
            (C307 * C5870 + C92137 * C6128) * C800) *
               C92212) *
              C31257 +
          ((C337 * C884 + C413 * C798 - C2212 * C885 - C2300 * C799 +
            (C307 * C807 + C92137 * C1024) * C886 +
            (C307 * C892 + C92137 * C1088) * C800) *
               C60959 +
           (C2934 * C884 + C3016 * C798 - C12183 * C885 - C12296 * C799 +
            (C307 * C5771 + C92137 * C6041) * C886 +
            (C307 * C5869 + C92137 * C6127) * C800) *
               C92212) *
              C31258 +
          ((C339 * C884 + C414 * C798 - C2214 * C885 - C2301 * C799 +
            (C307 * C808 + C92137 * C1025) * C886 +
            (C307 * C893 + C92137 * C1090) * C800) *
               C60959 +
           (C2936 * C884 + C3017 * C798 - C22311 * C885 - C22416 * C799 +
            (C307 * C7566 + C92137 * C7868) * C886 +
            (C307 * C7668 + C92137 * C7986) * C800) *
               C92212) *
              C31259) *
         C92078 * C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92137 * C308) * C181 +
             (C307 * C182 + C92137 * C394) * C92099) *
                C60959 +
            (C11423 + C11440) * C92212) *
               C31257 +
           ((C401 + C417) * C60959 + C13308 * C92212) * C31258 +
           C61260 * C31259) *
              C93 -
          (((C3021 + C3013) * C92212 + (C419 + C407) * C60959) * C31259 +
           (C23393 * C92212 + (C418 + C404) * C60959) * C31258 +
           (C13310 * C92212 + (C417 + C401) * C60959) * C31257) *
              C94 +
          (C61260 * C31257 +
           (C422 * C60959 + (C3013 + C3021) * C92212) * C31258 +
           ((C412 + C420) * C60959 +
            ((C307 * C2711 + C92137 * C2919) * C181 +
             (C307 * C2781 + C92137 * C3005) * C92099) *
                C92212) *
               C31259) *
              C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92137 * C308) * C181 +
             (C307 * C182 + C92137 * C394) * C92099) *
                C60959 +
            (C11423 + C11440) * C92212) *
               C31257 +
           ((C401 + C417) * C60959 + C13308 * C92212) * C31258 +
           C61260 * C31259) *
              C92078 * C1383 -
          (((C9835 + C9831) * C92212 + C23393 * C60959) * C31259 +
           (C13309 * C92212 + C13310 * C60959) * C31258 +
           ((C11441 + C11426) * C92212 + (C11440 + C11423) * C60959) * C31257) *
              C92078 * C1384 +
          ((C11444 * C60959 + (C11435 + C11443) * C92212) * C31257 +
           (C11429 * C60959 + (C11432 + C11442) * C92212) * C31258 +
           ((C9831 + C9835) * C60959 +
            ((C307 * C12840 + C92137 * C13190) * C181 +
             (C307 * C12966 + C92137 * C13306) * C92099) *
                C92212) *
               C31259) *
              C92078 * C1385)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4326 * C107 + C4099 * C308 + C4327 * C805 + C4100 * C1022 +
             C4328 * C806 + C4101 * C1023) *
                C181 +
            (C4326 * C182 + C4099 * C394 + C4327 * C890 + C4100 * C1085 +
             C4328 * C891 + C4101 * C1086) *
                C92099) *
               C60959 +
           ((C4326 * C1389 + C4099 * C1606 + C4327 * C3431 + C4100 * C3661 +
             C4328 * C5772 + C4101 * C6042) *
                C181 +
            (C4326 * C1471 + C4099 * C1672 + C4327 * C3513 + C4100 * C3735 +
             C4328 * C5870 + C4101 * C6128) *
                C92099) *
               C92212) *
              C92062 * C93 -
          (((C7996 + C7995 + C7994) * C92099 + (C7885 + C7884 + C7883) * C181) *
               C92212 +
           ((C4454 + C4453 + C4452) * C92099 + (C4354 + C4355 + C4356) * C181) *
               C60959) *
              C92062 * C94 +
          (((C4360 + C4361 + C4362) * C181 + (C4457 + C4456 + C4455) * C92099) *
               C60959 +
           ((C4326 * C1387 + C4099 * C1604 + C4327 * C3433 + C4100 * C3663 +
             C4328 * C7566 + C4101 * C7868) *
                C181 +
            (C4326 * C1469 + C4099 * C1670 + C4327 * C3515 + C4100 * C3737 +
             C4328 * C7668 + C4101 * C7986) *
                C92099) *
               C92212) *
              C92062 * C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C4326 * C107 + C4099 * C308 + C4327 * C805 + C4100 * C1022 +
            C4328 * C806 + C4101 * C1023) *
               C884 +
           (C4326 * C182 + C4099 * C394 + C4327 * C890 + C4100 * C1085 +
            C4328 * C891 + C4101 * C1086) *
               C798 -
           (C4328 * C4882 + C4101 * C5218 + C4327 * C806 + C4100 * C1023 +
            C4326 * C805 + C4099 * C1022) *
               C885 -
           (C4328 * C5012 + C4101 * C5299 + C4327 * C891 + C4100 * C1086 +
            C4326 * C890 + C4099 * C1085) *
               C799 +
           (C4326 * C806 + C4099 * C1023 + C4327 * C4882 + C4100 * C5218 +
            C4328 * C4883 + C4101 * C5219) *
               C886 +
           (C4326 * C891 + C4099 * C1086 + C4327 * C5012 + C4100 * C5299 +
            C4328 * C5014 + C4101 * C5300) *
               C800) *
              C60959 +
          ((C4326 * C1389 + C4099 * C1606 + C4327 * C3431 + C4100 * C3661 +
            C4328 * C5772 + C4101 * C6042) *
               C884 +
           (C4326 * C1471 + C4099 * C1672 + C4327 * C3513 + C4100 * C3735 +
            C4328 * C5870 + C4101 * C6128) *
               C798 -
           (C4328 * C8536 + C4101 * C8894 + C4327 * C5772 + C4100 * C6042 +
            C4326 * C3431 + C4099 * C3661) *
               C885 -
           (C4328 * C8666 + C4101 * C8996 + C4327 * C5870 + C4100 * C6128 +
            C4326 * C3513 + C4099 * C3735) *
               C799 +
           (C4326 * C5772 + C4099 * C6042 + C4327 * C8536 + C4100 * C8894 +
            C4328 * C38955 + C4101 * C39215) *
               C886 +
           (C4326 * C5870 + C4099 * C6128 + C4327 * C8666 + C4100 * C8996 +
            C4328 * C39049 + C4101 * C39283) *
               C800) *
              C92212) *
         C92062 * C92078 * C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4326 * C107 + C4099 * C308 + C4327 * C805 + C4100 * C1022 +
             C4328 * C806 + C4101 * C1023) *
                C181 +
            (C4326 * C182 + C4099 * C394 + C4327 * C890 + C4100 * C1085 +
             C4328 * C891 + C4101 * C1086) *
                C92099) *
               C60959 +
           ((C67562 + C67563 + C67564) * C181 +
            (C67660 + C67661 + C67662) * C92099) *
               C92212) *
              C92062 * C92078 * C1383 -
          (((C67663 + C67664 + C67665) * C92099 +
            (C67571 + C67572 + C67573) * C181) *
               C92212 +
           ((C67662 + C67661 + C67660) * C92099 +
            (C67564 + C67563 + C67562) * C181) *
               C60959) *
              C92062 * C92078 * C1384 +
          (((C67573 + C67572 + C67571) * C181 +
            (C67665 + C67664 + C67663) * C92099) *
               C60959 +
           ((C4326 * C10961 + C4099 * C11299 + C4327 * C13849 + C4100 * C14183 +
             C4328 * C43815 + C4101 * C44144) *
                C181 +
            (C4326 * C11093 + C4099 * C11419 + C4327 * C13967 + C4100 * C14305 +
             C4328 * C43920 + C4101 * C44268) *
                C92099) *
               C92212) *
              C92062 * C92078 * C1385)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[72] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92137 * C308) * C244 +
             (C307 * C245 + C92137 * C474) * C92110) *
                C60959 +
            (C11327 * C244 + C11531 * C92110) * C92212) *
               C31257 +
           ((C481 + C497) * C60959 + (C9910 + C9911) * C92212) * C31258 +
           C61337 * C31259) *
              C798 -
          (((C22520 + C22518) * C92212 + (C2386 + C2378) * C60959) * C31259 +
           ((C12408 + C12404) * C92212 + (C2387 + C2381) * C60959) * C31258 +
           ((C14426 * C92110 + C14200 * C244) * C92212 +
            ((C307 * C956 + C92137 * C1146) * C92110 +
             (C307 * C805 + C92137 * C1022) * C244) *
                C60959) *
               C31257) *
              C799 +
          ((((C307 * C806 + C92137 * C1023) * C244 +
             (C307 * C957 + C92137 * C1147) * C92110) *
                C60959 +
            ((C307 * C5772 + C92137 * C6042) * C244 +
             (C307 * C5958 + C92137 * C6207) * C92110) *
                C92212) *
               C31257 +
           (((C307 * C807 + C92137 * C1024) * C244 +
             (C307 * C958 + C92137 * C1148) * C92110) *
                C60959 +
            ((C307 * C5771 + C92137 * C6041) * C244 +
             (C307 * C5957 + C92137 * C6210) * C92110) *
                C92212) *
               C31258 +
           (((C307 * C808 + C92137 * C1025) * C244 +
             (C307 * C959 + C92137 * C1149) * C92110) *
                C60959 +
            ((C307 * C7566 + C92137 * C7868) * C244 +
             (C307 * C7768 + C92137 * C8094) * C92110) *
                C92212) *
               C31259) *
              C800) *
         C92078) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92137 * C308) * C244 +
             (C307 * C245 + C92137 * C474) * C92110) *
                C60959 +
            (C11327 * C244 + C11531 * C92110) * C92212) *
               C31257 +
           ((C481 + C497) * C60959 + (C9910 + C9911) * C92212) * C31258 +
           C61337 * C31259) *
              C92099 * C93 -
          (((C20197 + C20198) * C92212 + (C499 + C487) * C60959) * C31259 +
           ((C9918 + C9919) * C92212 + (C498 + C484) * C60959) * C31258 +
           ((C9911 + C9910) * C92212 + (C497 + C481) * C60959) * C31257) *
              C92099 * C94 +
          (C61337 * C31257 +
           (C502 * C60959 + (C20198 + C20197) * C92212) * C31258 +
           ((C492 + C500) * C60959 +
            ((C307 * C2711 + C92137 * C2919) * C244 +
             (C307 * C2851 + C92137 * C3087) * C92110) *
                C92212) *
               C31259) *
              C92099 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C307 * C107 + C92137 * C308) * C1534 +
            (C307 * C245 + C92137 * C474) * C1383 - C11327 * C1535 -
            C11531 * C1384 + C11329 * C1536 + C11532 * C1385) *
               C60959 +
           (C11327 * C1534 + C11531 * C1383 - C11329 * C1535 - C11532 * C1384 +
            C11335 * C1536 + C11533 * C1385) *
               C92212) *
              C31257 +
          ((C337 * C1534 + C493 * C1383 - C2934 * C1535 - C3104 * C1384 +
            C9748 * C1536 + C9920 * C1385) *
               C60959 +
           (C2934 * C1534 + C3104 * C1383 - C9748 * C1535 - C9920 * C1384 +
            C11333 * C1536 + C11534 * C1385) *
               C92212) *
              C31258 +
          ((C339 * C1534 + C494 * C1383 - C2936 * C1535 - C3105 * C1384 +
            C9750 * C1536 + C9921 * C1385) *
               C60959 +
           (C2936 * C1534 + C3105 * C1383 - C9750 * C1535 - C9921 * C1384 +
            (C307 * C12840 + C92137 * C13190) * C1536 +
            (C307 * C13078 + C92137 * C13408) * C1385) *
               C92212) *
              C31259) *
         C92099 * C92078) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4326 * C107 + C4099 * C308 + C4327 * C805 + C4100 * C1022 +
             C4328 * C806 + C4101 * C1023) *
                C244 +
            (C4326 * C245 + C4099 * C474 + C4327 * C956 + C4100 * C1146 +
             C4328 * C957 + C4101 * C1147) *
                C92110) *
               C60959 +
           ((C4326 * C1389 + C4099 * C1606 + C4327 * C3431 + C4100 * C3661 +
             C4328 * C5772 + C4101 * C6042) *
                C244 +
            (C4326 * C1540 + C4099 * C1727 + C4327 * C3587 + C4100 * C3805 +
             C4328 * C5958 + C4101 * C6207) *
                C92110) *
               C92212) *
              C92062 * C92099 * C93 -
          (((C8102 + C8103 + C8104) * C92110 + (C7885 + C7884 + C7883) * C244) *
               C92212 +
           ((C4546 + C4545 + C4544) * C92110 + (C4354 + C4355 + C4356) * C244) *
               C60959) *
              C92062 * C92099 * C94 +
          (((C4360 + C4361 + C4362) * C244 + (C4549 + C4548 + C4547) * C92110) *
               C60959 +
           ((C4326 * C1387 + C4099 * C1604 + C4327 * C3433 + C4100 * C3663 +
             C4328 * C7566 + C4101 * C7868) *
                C244 +
            (C4326 * C1538 + C4099 * C1731 + C4327 * C3589 + C4100 * C3807 +
             C4328 * C7768 + C4101 * C8094) *
                C92110) *
               C92212) *
              C92062 * C92099 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4326 * C107 + C4099 * C308 + C4327 * C805 + C4100 * C1022 +
             C4328 * C806 + C4101 * C1023) *
                C244 +
            (C4326 * C245 + C4099 * C474 + C4327 * C956 + C4100 * C1146 +
             C4328 * C957 + C4101 * C1147) *
                C92110) *
               C60959 +
           ((C4326 * C1389 + C4099 * C1606 + C4327 * C3431 + C4100 * C3661 +
             C4328 * C5772 + C4101 * C6042) *
                C244 +
            (C4326 * C1540 + C4099 * C1727 + C4327 * C3587 + C4100 * C3805 +
             C4328 * C5958 + C4101 * C6207) *
                C92110) *
               C92212) *
              C92062 * C798 -
          (((C4328 * C8780 + C4101 * C9096 + C4327 * C5958 + C4100 * C6207 +
             C4326 * C3587 + C4099 * C3805) *
                C92110 +
            (C4328 * C8536 + C4101 * C8894 + C4327 * C5772 + C4100 * C6042 +
             C4326 * C3431 + C4099 * C3661) *
                C244) *
               C92212 +
           ((C4328 * C5114 + C4101 * C5378 + C4327 * C957 + C4100 * C1147 +
             C4326 * C956 + C4099 * C1146) *
                C92110 +
            (C4328 * C4882 + C4101 * C5218 + C4327 * C806 + C4100 * C1023 +
             C4326 * C805 + C4099 * C1022) *
                C244) *
               C60959) *
              C92062 * C799 +
          (((C4326 * C806 + C4099 * C1023 + C4327 * C4882 + C4100 * C5218 +
             C4328 * C4883 + C4101 * C5219) *
                C244 +
            (C4326 * C957 + C4099 * C1147 + C4327 * C5114 + C4100 * C5378 +
             C4328 * C5115 + C4101 * C5379) *
                C92110) *
               C60959 +
           ((C4326 * C5772 + C4099 * C6042 + C4327 * C8536 + C4100 * C8894 +
             C4328 * C38955 + C4101 * C39215) *
                C244 +
            (C4326 * C5958 + C4099 * C6207 + C4327 * C8780 + C4100 * C9096 +
             C4328 * C39126 + C4101 * C39350) *
                C92110) *
               C92212) *
              C92062 * C800) *
         C92078) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C4326 * C107 + C4099 * C308 + C4327 * C805 + C4100 * C1022 +
            C4328 * C806 + C4101 * C1023) *
               C1534 +
           (C4326 * C245 + C4099 * C474 + C4327 * C956 + C4100 * C1146 +
            C4328 * C957 + C4101 * C1147) *
               C1383 -
           (C67564 + C67563 + C67562) * C1535 -
           (C67752 + C67753 + C67754) * C1384 +
           (C67573 + C67572 + C67571) * C1536 +
           (C67755 + C67756 + C67757) * C1385) *
              C60959 +
          ((C67562 + C67563 + C67564) * C1534 +
           (C67754 + C67753 + C67752) * C1383 -
           (C67571 + C67572 + C67573) * C1535 -
           (C67757 + C67756 + C67755) * C1384 +
           (C4326 * C10961 + C4099 * C11299 + C4327 * C13849 + C4100 * C14183 +
            C4328 * C43815 + C4101 * C44144) *
               C1536 +
           (C4326 * C11197 + C4099 * C11518 + C4327 * C14075 + C4100 * C14419 +
            C4328 * C44036 + C4101 * C44379) *
               C1385) *
              C92212) *
         C92062 * C92099 * C92078) /
            (p * q * std::sqrt(p + q));
    d2eezx[72] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C61411 * C107 + C60959 * C555 + C61412 * C1389 + C92212 * C1788) *
                C801 +
            (C61411 * C117 + C60959 * C561 + C61412 * C1397 + C92212 * C1796) *
                C92078) *
               C31257 +
           ((C61439 + C61438) * C801 + (C61441 + C61440) * C92078) * C31258 +
           (C61450 * C801 + C61451 * C92078) * C31259) *
              C92137 * C92110 * C798 -
          (((C61412 * C3441 + C92212 * C3881 + C61411 * C811 + C60959 * C1210) *
                C92078 +
            (C61412 * C3433 + C92212 * C3877 + C61411 * C803 + C60959 * C1202) *
                C801) *
               C31259 +
           ((C61412 * C3440 + C92212 * C3880 + C61411 * C812 + C60959 * C1211) *
                C92078 +
            (C61412 * C3432 + C92212 * C3876 + C61411 * C804 + C60959 * C1203) *
                C801) *
               C31258 +
           ((C61412 * C3439 + C92212 * C3879 + C61411 * C813 + C60959 * C1212) *
                C92078 +
            (C61412 * C3431 + C92212 * C3875 + C61411 * C805 + C60959 * C1204) *
                C801) *
               C31257) *
              C92137 * C92110 * C799 +
          (((C61411 * C806 + C60959 * C1205 + C61412 * C5772 + C92212 * C6288) *
                C801 +
            (C61411 * C822 + C60959 * C1213 + C61412 * C5778 + C92212 * C6294) *
                C92078) *
               C31257 +
           ((C61411 * C807 + C60959 * C1206 + C61412 * C5771 + C92212 * C6287) *
                C801 +
            (C61411 * C823 + C60959 * C1214 + C61412 * C5777 + C92212 * C6293) *
                C92078) *
               C31258 +
           ((C61411 * C808 + C60959 * C1207 + C61412 * C7566 + C92212 * C8202) *
                C801 +
            (C61411 * C824 + C60959 * C1215 + C61412 * C7568 + C92212 * C8203) *
                C92078) *
               C31259) *
              C92137 * C92110 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C61411 * C107 + C60959 * C555 + C61412 * C1389 + C92212 * C1788) *
               C104 +
           (C61411 * C117 + C60959 * C561 + C61412 * C1397 + C92212 * C1796) *
               C93 -
           (C61438 + C61439) * C105 - (C61440 + C61441) * C94 + C61450 * C106 +
           C61451 * C95) *
              C31257 +
          ((C61439 + C61438) * C104 + (C61441 + C61440) * C93 -
           (C61443 + C61442) * C105 - (C61445 + C61444) * C94 +
           (C61446 + C61447) * C106 + (C61448 + C61449) * C95) *
              C31258 +
          (C61450 * C104 + C61451 * C93 - (C61447 + C61446) * C105 -
           (C61449 + C61448) * C94 +
           (C61411 * C111 + C60959 * C559 + C61412 * C2711 + C92212 * C3175) *
               C106 +
           (C61411 * C122 + C60959 * C565 + C61412 * C2713 + C92212 * C3176) *
               C95) *
              C31259) *
         C92137 * C92110 * C92099) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C61411 * C107 + C60959 * C555 + C61412 * C1389 + C92212 * C1788) *
                C801 +
            (C61411 * C117 + C60959 * C561 + C61412 * C1397 + C92212 * C1796) *
                C92078) *
               C31257 +
           ((C61439 + C61438) * C801 + (C61441 + C61440) * C92078) * C31258 +
           (C61450 * C801 + C61451 * C92078) * C31259) *
              C92137 * C1383 -
          (((C61412 * C1408 + C92212 * C1799 + C61411 * C1395 +
             C60959 * C1794) *
                C92078 +
            (C61412 * C1392 + C92212 * C1791 + C61411 * C1387 +
             C60959 * C1786) *
                C801) *
               C31259 +
           ((C61412 * C1407 + C92212 * C1798 + C61411 * C1396 +
             C60959 * C1795) *
                C92078 +
            (C61412 * C1391 + C92212 * C1790 + C61411 * C1388 +
             C60959 * C1787) *
                C801) *
               C31258 +
           ((C61412 * C1406 + C92212 * C1797 + C61411 * C1397 +
             C60959 * C1796) *
                C92078 +
            (C61412 * C1390 + C92212 * C1789 + C61411 * C1389 +
             C60959 * C1788) *
                C801) *
               C31257) *
              C92137 * C1384 +
          (((C61411 * C1390 + C60959 * C1789 + C61412 * C10961 +
             C92212 * C11609) *
                C801 +
            (C61411 * C1406 + C60959 * C1797 + C61412 * C10965 +
             C92212 * C11613) *
                C92078) *
               C31257 +
           ((C61411 * C1391 + C60959 * C1790 + C61412 * C10960 +
             C92212 * C11608) *
                C801 +
            (C61411 * C1407 + C60959 * C1798 + C61412 * C10964 +
             C92212 * C11612) *
                C92078) *
               C31258 +
           ((C61411 * C1392 + C60959 * C1791 + C61412 * C12840 +
             C92212 * C13515) *
                C801 +
            (C61411 * C1408 + C60959 * C1799 + C61412 * C12842 +
             C92212 * C13516) *
                C92078) *
               C31259) *
              C92137 * C1385) *
         C92099) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C61411 * C107 + C60959 * C555 + C61412 * C1389 + C92212 * C1788) *
               C104 +
           (C61411 * C117 + C60959 * C561 + C61412 * C1397 + C92212 * C1796) *
               C93 -
           (C61438 + C61439) * C105 - (C61440 + C61441) * C94 + C61450 * C106 +
           C61451 * C95) *
              C92062 * C4099 +
          ((C61411 * C805 + C60959 * C1204 + C61412 * C3431 + C92212 * C3875) *
               C104 +
           (C61411 * C813 + C60959 * C1212 + C61412 * C3439 + C92212 * C3879) *
               C93 -
           (C63751 + C63750) * C105 - (C63753 + C63752) * C94 +
           (C63754 + C63755) * C106 + (C63756 + C63757) * C95) *
              C92062 * C4100 +
          ((C61411 * C806 + C60959 * C1205 + C61412 * C5772 + C92212 * C6288) *
               C104 +
           (C61411 * C822 + C60959 * C1213 + C61412 * C5778 + C92212 * C6294) *
               C93 -
           (C61412 * C5771 + C92212 * C6287 + C61411 * C807 + C60959 * C1206) *
               C105 -
           (C61412 * C5777 + C92212 * C6293 + C61411 * C823 + C60959 * C1214) *
               C94 +
           (C61411 * C808 + C60959 * C1207 + C61412 * C7566 + C92212 * C8202) *
               C106 +
           (C61411 * C824 + C60959 * C1215 + C61412 * C7568 + C92212 * C8203) *
               C95) *
              C92062 * C4101) *
         C92110 * C92099) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C61411 * C107 + C60959 * C555 + C61412 * C1389 + C92212 * C1788) *
                C801 +
            (C61411 * C117 + C60959 * C561 + C61412 * C1397 + C92212 * C1796) *
                C92078) *
               C92062 * C4099 +
           ((C67034 + C67035) * C801 + (C67036 + C67037) * C92078) * C92062 *
               C4100 +
           C67051 * C4101) *
              C92110 * C798 -
          (((C67042 + C67043) * C92078 + (C67044 + C67045) * C801) * C92062 *
               C4101 +
           ((C67041 + C67040) * C92078 + (C67039 + C67038) * C801) * C92062 *
               C4100 +
           ((C67037 + C67036) * C92078 + (C67035 + C67034) * C801) * C92062 *
               C4099) *
              C92110 * C799 +
          (C67051 * C4099 +
           ((C67045 + C67044) * C801 + (C67043 + C67042) * C92078) * C92062 *
               C4100 +
           ((C61411 * C4883 + C60959 * C5457 + C61412 * C38955 +
             C92212 * C39417) *
                C801 +
            (C61411 * C4891 + C60959 * C5461 + C61412 * C38957 +
             C92212 * C39418) *
                C92078) *
               C92062 * C4101) *
              C92110 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C61411 * C107 + C60959 * C555 + C61412 * C1389 + C92212 * C1788) *
                C801 +
            (C61411 * C117 + C60959 * C561 + C61412 * C1397 + C92212 * C1796) *
                C92078) *
               C92062 * C4099 +
           ((C67034 + C67035) * C801 + (C67036 + C67037) * C92078) * C92062 *
               C4100 +
           C67051 * C4101) *
              C1383 -
          (((C61412 * C5787 + C92212 * C6297 + C61411 * C5778 +
             C60959 * C6294) *
                C92078 +
            (C61412 * C5775 + C92212 * C6291 + C61411 * C5772 +
             C60959 * C6288) *
                C801) *
               C92062 * C4101 +
           ((C61412 * C5783 + C92212 * C6295 + C61411 * C3439 +
             C60959 * C3879) *
                C92078 +
            (C61412 * C5773 + C92212 * C6289 + C61411 * C3431 +
             C60959 * C3875) *
                C801) *
               C92062 * C4100 +
           ((C61412 * C1406 + C92212 * C1797 + C61411 * C1397 +
             C60959 * C1796) *
                C92078 +
            (C61412 * C1390 + C92212 * C1789 + C61411 * C1389 +
             C60959 * C1788) *
                C801) *
               C92062 * C4099) *
              C1384 +
          (((C61411 * C1390 + C60959 * C1789 + C61412 * C10961 +
             C92212 * C11609) *
                C801 +
            (C61411 * C1406 + C60959 * C1797 + C61412 * C10965 +
             C92212 * C11613) *
                C92078) *
               C92062 * C4099 +
           ((C61411 * C5773 + C60959 * C6289 + C61412 * C13849 +
             C92212 * C14525) *
                C801 +
            (C61411 * C5783 + C60959 * C6295 + C61412 * C13853 +
             C92212 * C14527) *
                C92078) *
               C92062 * C4100 +
           ((C61411 * C5775 + C60959 * C6291 + C61412 * C43815 +
             C92212 * C44490) *
                C801 +
            (C61411 * C5787 + C60959 * C6297 + C61412 * C43817 +
             C92212 * C44491) *
                C92078) *
               C92062 * C4101) *
              C1385) *
         C92099) /
            (p * q * std::sqrt(p + q));
    d2eezy[72] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C61411 * C107 + C60959 * C555 + C61412 * C1389 + C92212 * C1788) *
               C884 +
           (C61411 * C182 + C60959 * C641 + C61412 * C1471 + C92212 * C1854) *
               C798 -
           (C61412 * C3431 + C92212 * C3875 + C61411 * C805 + C60959 * C1204) *
               C885 -
           (C61412 * C3513 + C92212 * C3949 + C61411 * C890 + C60959 * C1267) *
               C799 +
           (C61411 * C806 + C60959 * C1205 + C61412 * C5772 + C92212 * C6288) *
               C886 +
           (C61411 * C891 + C60959 * C1268 + C61412 * C5870 + C92212 * C6374) *
               C800) *
              C31257 +
          ((C61439 + C61438) * C884 + (C61539 + C61540) * C798 -
           (C61412 * C3432 + C92212 * C3876 + C61411 * C804 + C60959 * C1203) *
               C885 -
           (C61412 * C3514 + C92212 * C3950 + C61411 * C889 + C60959 * C1269) *
               C799 +
           (C61411 * C807 + C60959 * C1206 + C61412 * C5771 + C92212 * C6287) *
               C886 +
           (C61411 * C892 + C60959 * C1270 + C61412 * C5869 + C92212 * C6373) *
               C800) *
              C31258 +
          (C61450 * C884 + C61545 * C798 -
           (C61412 * C3433 + C92212 * C3877 + C61411 * C803 + C60959 * C1202) *
               C885 -
           (C61412 * C3515 + C92212 * C3951 + C61411 * C888 + C60959 * C1271) *
               C799 +
           (C61411 * C808 + C60959 * C1207 + C61412 * C7566 + C92212 * C8202) *
               C886 +
           (C61411 * C893 + C60959 * C1272 + C61412 * C7668 + C92212 * C8314) *
               C800) *
              C31259) *
         C92137 * C92078 * C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C61411 * C107 + C60959 * C555 + C61412 * C1389 + C92212 * C1788) *
                C181 +
            (C61411 * C182 + C60959 * C641 + C61412 * C1471 + C92212 * C1854) *
                C92099) *
               C31257 +
           ((C61439 + C61438) * C181 + (C61539 + C61540) * C92099) * C31258 +
           C61547 * C31259) *
              C92137 * C93 -
          (((C61543 + C61544) * C92099 + (C61447 + C61446) * C181) * C31259 +
           ((C61542 + C61541) * C92099 + (C61443 + C61442) * C181) * C31258 +
           ((C61540 + C61539) * C92099 + (C61438 + C61439) * C181) * C31257) *
              C92137 * C94 +
          (C61547 * C31257 +
           ((C61446 + C61447) * C181 + (C61544 + C61543) * C92099) * C31258 +
           ((C61411 * C111 + C60959 * C559 + C61412 * C2711 + C92212 * C3175) *
                C181 +
            (C61411 * C186 + C60959 * C645 + C61412 * C2781 + C92212 * C3261) *
                C92099) *
               C31259) *
              C92137 * C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C61411 * C107 + C60959 * C555 + C61412 * C1389 + C92212 * C1788) *
                C181 +
            (C61411 * C182 + C60959 * C641 + C61412 * C1471 + C92212 * C1854) *
                C92099) *
               C31257 +
           ((C61439 + C61438) * C181 + (C61539 + C61540) * C92099) * C31258 +
           C61547 * C31259) *
              C92137 * C92078 * C1383 -
          (((C61412 * C1474 + C92212 * C1857 + C61411 * C1469 +
             C60959 * C1852) *
                C92099 +
            (C61412 * C1392 + C92212 * C1791 + C61411 * C1387 +
             C60959 * C1786) *
                C181) *
               C31259 +
           ((C61412 * C1473 + C92212 * C1856 + C61411 * C1470 +
             C60959 * C1853) *
                C92099 +
            (C61412 * C1391 + C92212 * C1790 + C61411 * C1388 +
             C60959 * C1787) *
                C181) *
               C31258 +
           ((C61412 * C1472 + C92212 * C1855 + C61411 * C1471 +
             C60959 * C1854) *
                C92099 +
            (C61412 * C1390 + C92212 * C1789 + C61411 * C1389 +
             C60959 * C1788) *
                C181) *
               C31257) *
              C92137 * C92078 * C1384 +
          (((C61411 * C1390 + C60959 * C1789 + C61412 * C10961 +
             C92212 * C11609) *
                C181 +
            (C61411 * C1472 + C60959 * C1855 + C61412 * C11093 +
             C92212 * C11691) *
                C92099) *
               C31257 +
           ((C61411 * C1391 + C60959 * C1790 + C61412 * C10960 +
             C92212 * C11608) *
                C181 +
            (C61411 * C1473 + C60959 * C1856 + C61412 * C11092 +
             C92212 * C11690) *
                C92099) *
               C31258 +
           ((C61411 * C1392 + C60959 * C1791 + C61412 * C12840 +
             C92212 * C13515) *
                C181 +
            (C61411 * C1474 + C60959 * C1857 + C61412 * C12966 +
             C92212 * C13633) *
                C92099) *
               C31259) *
              C92137 * C92078 * C1385)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C61411 * C107 + C60959 * C555 + C61412 * C1389 + C92212 * C1788) *
                C181 +
            (C61411 * C182 + C60959 * C641 + C61412 * C1471 + C92212 * C1854) *
                C92099) *
               C92062 * C4099 +
           ((C61411 * C805 + C60959 * C1204 + C61412 * C3431 + C92212 * C3875) *
                C181 +
            (C61411 * C890 + C60959 * C1267 + C61412 * C3513 + C92212 * C3949) *
                C92099) *
               C92062 * C4100 +
           ((C61411 * C806 + C60959 * C1205 + C61412 * C5772 + C92212 * C6288) *
                C181 +
            (C61411 * C891 + C60959 * C1268 + C61412 * C5870 + C92212 * C6374) *
                C92099) *
               C92062 * C4101) *
              C93 -
          (((C61412 * C5869 + C92212 * C6373 + C61411 * C892 + C60959 * C1270) *
                C92099 +
            (C61412 * C5771 + C92212 * C6287 + C61411 * C807 + C60959 * C1206) *
                C181) *
               C92062 * C4101 +
           ((C63864 + C63865) * C92099 + (C63751 + C63750) * C181) * C92062 *
               C4100 +
           ((C61540 + C61539) * C92099 + (C61438 + C61439) * C181) * C92062 *
               C4099) *
              C94 +
          (C61547 * C92062 * C4099 +
           ((C63754 + C63755) * C181 + (C63867 + C63866) * C92099) * C92062 *
               C4100 +
           ((C61411 * C808 + C60959 * C1207 + C61412 * C7566 + C92212 * C8202) *
                C181 +
            (C61411 * C893 + C60959 * C1272 + C61412 * C7668 + C92212 * C8314) *
                C92099) *
               C92062 * C4101) *
              C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C61411 * C107 + C60959 * C555 + C61412 * C1389 + C92212 * C1788) *
               C884 +
           (C61411 * C182 + C60959 * C641 + C61412 * C1471 + C92212 * C1854) *
               C798 -
           (C67035 + C67034) * C885 - (C67138 + C67139) * C799 + C67046 * C886 +
           C67144 * C800) *
              C92062 * C4099 +
          ((C67034 + C67035) * C884 + (C67139 + C67138) * C798 -
           (C67039 + C67038) * C885 - (C67141 + C67140) * C799 +
           (C67045 + C67044) * C886 + (C67142 + C67143) * C800) *
              C92062 * C4100 +
          (C67046 * C884 + C67144 * C798 - (C67044 + C67045) * C885 -
           (C67143 + C67142) * C799 +
           (C61411 * C4883 + C60959 * C5457 + C61412 * C38955 +
            C92212 * C39417) *
               C886 +
           (C61411 * C5014 + C60959 * C5580 + C61412 * C39049 +
            C92212 * C39493) *
               C800) *
              C92062 * C4101) *
         C92078 * C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C61411 * C107 + C60959 * C555 + C61412 * C1389 + C92212 * C1788) *
                C181 +
            (C61411 * C182 + C60959 * C641 + C61412 * C1471 + C92212 * C1854) *
                C92099) *
               C92062 * C4099 +
           ((C67034 + C67035) * C181 + (C67139 + C67138) * C92099) * C92062 *
               C4100 +
           (C67046 * C181 + C67144 * C92099) * C92062 * C4101) *
              C92078 * C1383 -
          (((C61412 * C5873 + C92212 * C6377 + C61411 * C5870 +
             C60959 * C6374) *
                C92099 +
            (C61412 * C5775 + C92212 * C6291 + C61411 * C5772 +
             C60959 * C6288) *
                C181) *
               C92062 * C4101 +
           ((C61412 * C5871 + C92212 * C6375 + C61411 * C3513 +
             C60959 * C3949) *
                C92099 +
            (C61412 * C5773 + C92212 * C6289 + C61411 * C3431 +
             C60959 * C3875) *
                C181) *
               C92062 * C4100 +
           ((C61412 * C1472 + C92212 * C1855 + C61411 * C1471 +
             C60959 * C1854) *
                C92099 +
            (C61412 * C1390 + C92212 * C1789 + C61411 * C1389 +
             C60959 * C1788) *
                C181) *
               C92062 * C4099) *
              C92078 * C1384 +
          (((C61411 * C1390 + C60959 * C1789 + C61412 * C10961 +
             C92212 * C11609) *
                C181 +
            (C61411 * C1472 + C60959 * C1855 + C61412 * C11093 +
             C92212 * C11691) *
                C92099) *
               C92062 * C4099 +
           ((C61411 * C5773 + C60959 * C6289 + C61412 * C13849 +
             C92212 * C14525) *
                C181 +
            (C61411 * C5871 + C60959 * C6375 + C61412 * C13967 +
             C92212 * C14627) *
                C92099) *
               C92062 * C4100 +
           ((C61411 * C5775 + C60959 * C6291 + C61412 * C43815 +
             C92212 * C44490) *
                C181 +
            (C61411 * C5873 + C60959 * C6377 + C61412 * C43920 +
             C92212 * C44608) *
                C92099) *
               C92062 * C4101) *
              C92078 * C1385)) /
            (p * q * std::sqrt(p + q));
    d2eezz[72] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C61411 * C107 + C60959 * C555 + C61412 * C1389 + C92212 * C1788) *
                C244 +
            (C61411 * C245 + C60959 * C719 + C61412 * C1540 + C92212 * C1909) *
                C92110) *
               C31257 +
           ((C61439 + C61438) * C244 + (C61635 + C61636) * C92110) * C31258 +
           C61643 * C31259) *
              C92137 * C798 -
          (((C61412 * C3589 + C92212 * C4021 + C61411 * C954 + C60959 * C1326) *
                C92110 +
            (C61412 * C3433 + C92212 * C3877 + C61411 * C803 + C60959 * C1202) *
                C244) *
               C31259 +
           ((C61412 * C3588 + C92212 * C4020 + C61411 * C955 + C60959 * C1327) *
                C92110 +
            (C61412 * C3432 + C92212 * C3876 + C61411 * C804 + C60959 * C1203) *
                C244) *
               C31258 +
           ((C61412 * C3587 + C92212 * C4019 + C61411 * C956 + C60959 * C1328) *
                C92110 +
            (C61412 * C3431 + C92212 * C3875 + C61411 * C805 + C60959 * C1204) *
                C244) *
               C31257) *
              C92137 * C799 +
          (((C61411 * C806 + C60959 * C1205 + C61412 * C5772 + C92212 * C6288) *
                C244 +
            (C61411 * C957 + C60959 * C1329 + C61412 * C5958 + C92212 * C6455) *
                C92110) *
               C31257 +
           ((C61411 * C807 + C60959 * C1206 + C61412 * C5771 + C92212 * C6287) *
                C244 +
            (C61411 * C958 + C60959 * C1330 + C61412 * C5957 + C92212 * C6457) *
                C92110) *
               C31258 +
           ((C61411 * C808 + C60959 * C1207 + C61412 * C7566 + C92212 * C8202) *
                C244 +
            (C61411 * C959 + C60959 * C1331 + C61412 * C7768 + C92212 * C8423) *
                C92110) *
               C31259) *
              C92137 * C800) *
         C92078) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C61411 * C107 + C60959 * C555 + C61412 * C1389 + C92212 * C1788) *
                C244 +
            (C61411 * C245 + C60959 * C719 + C61412 * C1540 + C92212 * C1909) *
                C92110) *
               C31257 +
           ((C61439 + C61438) * C244 + (C61635 + C61636) * C92110) * C31258 +
           C61643 * C31259) *
              C92137 * C92099 * C93 -
          (((C61639 + C61640) * C92110 + (C61447 + C61446) * C244) * C31259 +
           ((C61638 + C61637) * C92110 + (C61443 + C61442) * C244) * C31258 +
           ((C61636 + C61635) * C92110 + (C61438 + C61439) * C244) * C31257) *
              C92137 * C92099 * C94 +
          (C61643 * C31257 +
           ((C61446 + C61447) * C244 + (C61640 + C61639) * C92110) * C31258 +
           ((C61411 * C111 + C60959 * C559 + C61412 * C2711 + C92212 * C3175) *
                C244 +
            (C61411 * C249 + C60959 * C723 + C61412 * C2851 + C92212 * C3343) *
                C92110) *
               C31259) *
              C92137 * C92099 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C61411 * C107 + C60959 * C555 + C61412 * C1389 + C92212 * C1788) *
               C1534 +
           (C61411 * C245 + C60959 * C719 + C61412 * C1540 + C92212 * C1909) *
               C1383 -
           (C61412 * C1390 + C92212 * C1789 + C61411 * C1389 + C60959 * C1788) *
               C1535 -
           (C61412 * C1541 + C92212 * C1910 + C61411 * C1540 + C60959 * C1909) *
               C1384 +
           (C61411 * C1390 + C60959 * C1789 + C61412 * C10961 +
            C92212 * C11609) *
               C1536 +
           (C61411 * C1541 + C60959 * C1910 + C61412 * C11197 +
            C92212 * C11768) *
               C1385) *
              C31257 +
          ((C61439 + C61438) * C1534 + (C61635 + C61636) * C1383 -
           (C61412 * C1391 + C92212 * C1790 + C61411 * C1388 + C60959 * C1787) *
               C1535 -
           (C61412 * C1542 + C92212 * C1912 + C61411 * C1539 + C60959 * C1911) *
               C1384 +
           (C61411 * C1391 + C60959 * C1790 + C61412 * C10960 +
            C92212 * C11608) *
               C1536 +
           (C61411 * C1542 + C60959 * C1912 + C61412 * C11198 +
            C92212 * C11770) *
               C1385) *
              C31258 +
          (C61450 * C1534 + C61641 * C1383 -
           (C61412 * C1392 + C92212 * C1791 + C61411 * C1387 + C60959 * C1786) *
               C1535 -
           (C61412 * C1543 + C92212 * C1914 + C61411 * C1538 + C60959 * C1913) *
               C1384 +
           (C61411 * C1392 + C60959 * C1791 + C61412 * C12840 +
            C92212 * C13515) *
               C1536 +
           (C61411 * C1543 + C60959 * C1914 + C61412 * C13078 +
            C92212 * C13741) *
               C1385) *
              C31259) *
         C92137 * C92099 * C92078) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C61411 * C107 + C60959 * C555 + C61412 * C1389 + C92212 * C1788) *
                C244 +
            (C61411 * C245 + C60959 * C719 + C61412 * C1540 + C92212 * C1909) *
                C92110) *
               C92062 * C4099 +
           ((C61411 * C805 + C60959 * C1204 + C61412 * C3431 + C92212 * C3875) *
                C244 +
            (C61411 * C956 + C60959 * C1328 + C61412 * C3587 + C92212 * C4019) *
                C92110) *
               C92062 * C4100 +
           ((C61411 * C806 + C60959 * C1205 + C61412 * C5772 + C92212 * C6288) *
                C244 +
            (C61411 * C957 + C60959 * C1329 + C61412 * C5958 + C92212 * C6455) *
                C92110) *
               C92062 * C4101) *
              C92099 * C93 -
          (((C61412 * C5957 + C92212 * C6457 + C61411 * C958 + C60959 * C1330) *
                C92110 +
            (C61412 * C5771 + C92212 * C6287 + C61411 * C807 + C60959 * C1206) *
                C244) *
               C92062 * C4101 +
           ((C63976 + C63977) * C92110 + (C63751 + C63750) * C244) * C92062 *
               C4100 +
           ((C61636 + C61635) * C92110 + (C61438 + C61439) * C244) * C92062 *
               C4099) *
              C92099 * C94 +
          (C61643 * C92062 * C4099 +
           ((C63754 + C63755) * C244 + (C63975 + C63974) * C92110) * C92062 *
               C4100 +
           ((C61411 * C808 + C60959 * C1207 + C61412 * C7566 + C92212 * C8202) *
                C244 +
            (C61411 * C959 + C60959 * C1331 + C61412 * C7768 + C92212 * C8423) *
                C92110) *
               C92062 * C4101) *
              C92099 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C61411 * C107 + C60959 * C555 + C61412 * C1389 + C92212 * C1788) *
                C244 +
            (C61411 * C245 + C60959 * C719 + C61412 * C1540 + C92212 * C1909) *
                C92110) *
               C92062 * C4099 +
           ((C67034 + C67035) * C244 + (C67232 + C67233) * C92110) * C92062 *
               C4100 +
           C67241 * C4101) *
              C798 -
          (((C67236 + C67237) * C92110 + (C67044 + C67045) * C244) * C92062 *
               C4101 +
           ((C67235 + C67234) * C92110 + (C67039 + C67038) * C244) * C92062 *
               C4100 +
           ((C67233 + C67232) * C92110 + (C67035 + C67034) * C244) * C92062 *
               C4099) *
              C799 +
          (C67241 * C4099 +
           ((C67045 + C67044) * C244 + (C67237 + C67236) * C92110) * C92062 *
               C4100 +
           ((C61411 * C4883 + C60959 * C5457 + C61412 * C38955 +
             C92212 * C39417) *
                C244 +
            (C61411 * C5115 + C60959 * C5670 + C61412 * C39126 +
             C92212 * C39563) *
                C92110) *
               C92062 * C4101) *
              C800) *
         C92078) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C61411 * C107 + C60959 * C555 + C61412 * C1389 + C92212 * C1788) *
               C1534 +
           (C61411 * C245 + C60959 * C719 + C61412 * C1540 + C92212 * C1909) *
               C1383 -
           (C61412 * C1390 + C92212 * C1789 + C61411 * C1389 + C60959 * C1788) *
               C1535 -
           (C61412 * C1541 + C92212 * C1910 + C61411 * C1540 + C60959 * C1909) *
               C1384 +
           (C61411 * C1390 + C60959 * C1789 + C61412 * C10961 +
            C92212 * C11609) *
               C1536 +
           (C61411 * C1541 + C60959 * C1910 + C61412 * C11197 +
            C92212 * C11768) *
               C1385) *
              C92062 * C4099 +
          ((C67034 + C67035) * C1534 + (C67232 + C67233) * C1383 -
           (C61412 * C5773 + C92212 * C6289 + C61411 * C3431 + C60959 * C3875) *
               C1535 -
           (C61412 * C5955 + C92212 * C6453 + C61411 * C3587 + C60959 * C4019) *
               C1384 +
           (C61411 * C5773 + C60959 * C6289 + C61412 * C13849 +
            C92212 * C14525) *
               C1536 +
           (C61411 * C5955 + C60959 * C6453 + C61412 * C14075 +
            C92212 * C14727) *
               C1385) *
              C92062 * C4100 +
          (C67046 * C1534 + C67238 * C1383 -
           (C61412 * C5775 + C92212 * C6291 + C61411 * C5772 + C60959 * C6288) *
               C1535 -
           (C61412 * C5959 + C92212 * C6456 + C61411 * C5958 + C60959 * C6455) *
               C1384 +
           (C61411 * C5775 + C60959 * C6291 + C61412 * C43815 +
            C92212 * C44490) *
               C1536 +
           (C61411 * C5959 + C60959 * C6456 + C61412 * C44036 +
            C92212 * C44716) *
               C1385) *
              C92062 * C4101) *
         C92099 * C92078) /
            (p * q * std::sqrt(p + q));
    d2eexx[73] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C31262 * C107 + C31257 * C113 + C31263 * C108 +
                       C31258 * C114 + C31264 * C109 + C31259 * C115) *
                          C1987 +
                      (C31262 * C117 + C31257 * C125 + C31263 * C118 +
                       C31258 * C126 + C31264 * C119 + C31259 * C127) *
                          C1983 -
                      (C31264 * C110 + C31259 * C116 + C31263 * C109 +
                       C31258 * C115 + C31262 * C108 + C31257 * C114) *
                          C1988 -
                      (C31264 * C120 + C31259 * C128 + C31263 * C119 +
                       C31258 * C127 + C31262 * C118 + C31257 * C126) *
                          C1984) *
                         C92137 * C60959 +
                     ((C62408 + C62409 + C62410) * C1987 +
                      (C62411 + C62412 + C62413) * C1983 -
                      (C64088 + C64089 + C64090) * C1988 -
                      (C64091 + C64092 + C64093) * C1984) *
                         C92137 * C92212) *
                        C2709 +
                    (((C64090 + C64089 + C64088) * C1988 -
                      ((C62413 + C62412 + C62411) * C1983 +
                       (C62410 + C62409 + C62408) * C1987) +
                      (C64093 + C64092 + C64091) * C1984) *
                         C92137 * C60959 +
                     ((C31262 * C1391 + C31257 * C1403 + C31263 * C1392 +
                       C31258 * C1404 + C31264 * C1393 + C31259 * C1405) *
                          C1988 -
                      ((C62414 + C62415 + C62416) * C1983 +
                       (C62417 + C62418 + C62419) * C1987) +
                      (C31262 * C1407 + C31257 * C1415 + C31263 * C1408 +
                       C31258 * C1416 + C31264 * C1409 + C31259 * C1417) *
                          C1984) *
                         C92137 * C92212) *
                        C2710) *
                   C92099) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((((C36216 * C107 + C92062 * C113) * C1987 +
                       (C36216 * C117 + C92062 * C125) * C1983 -
                       (C36216 * C108 + C92062 * C114) * C1988 -
                       (C36216 * C118 + C92062 * C126) * C1984) *
                          C4099 +
                      (C37710 + C37711 - C37734 - C37735) * C4100 +
                      (C37716 + C37717 - C37736 - C37737) * C4101) *
                         C60959 +
                     ((C42870 + C42871 - C42886 - C42887) * C4099 +
                      (C41952 + C41953 - C41968 - C41969) * C4100 +
                      (C58249 + C58250 - C58257 - C58258) * C4101) *
                         C92212) *
                        C2709 +
                    (((C42886 - (C42871 + C42870) + C42887) * C4099 +
                      (C41968 - (C41953 + C41952) + C41969) * C4100 +
                      (C58257 - (C58250 + C58249) + C58258) * C4101) *
                         C60959 +
                     ((C42888 - (C42877 + C42876) + C42889) * C4099 +
                      (C41970 - (C41959 + C41958) + C41971) * C4100 +
                      ((C36216 * C5776 + C92062 * C5786) * C1988 -
                       (C40322 * C1983 + C40323 * C1987) +
                       (C36216 * C5788 + C92062 * C5794) * C1984) *
                          C4101) *
                         C92212) *
                        C2710) *
                   C92099) /
                      (p * q * std::sqrt(p + q));
    d2eexy[73] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((((C31262 * C107 + C31257 * C113 + C31263 * C108 +
                        C31258 * C114 + C31264 * C109 + C31259 * C115) *
                           C181 +
                       (C31262 * C182 + C31257 * C188 + C31263 * C183 +
                        C31258 * C189 + C31264 * C184 + C31259 * C190) *
                           C92099) *
                          C92137 * C60959 +
                      ((C62408 + C62409 + C62410) * C181 +
                       (C62506 + C62507 + C62508) * C92099) *
                          C92137 * C92212) *
                         C1983 -
                     (((C64198 + C64199 + C64200) * C92099 +
                       (C64088 + C64089 + C64090) * C181) *
                          C92137 * C92212 +
                      ((C31264 * C185 + C31259 * C191 + C31263 * C184 +
                        C31258 * C190 + C31262 * C183 + C31257 * C189) *
                           C92099 +
                       (C31264 * C110 + C31259 * C116 + C31263 * C109 +
                        C31258 * C115 + C31262 * C108 + C31257 * C114) *
                           C181) *
                          C92137 * C60959) *
                         C1984) *
                        C2709 +
                    ((((C64090 + C64089 + C64088) * C181 +
                       (C64200 + C64199 + C64198) * C92099) *
                          C92137 * C60959 +
                      ((C31262 * C1391 + C31257 * C1403 + C31263 * C1392 +
                        C31258 * C1404 + C31264 * C1393 + C31259 * C1405) *
                           C181 +
                       (C31262 * C1473 + C31257 * C1481 + C31263 * C1474 +
                        C31258 * C1482 + C31264 * C1475 + C31259 * C1483) *
                           C92099) *
                          C92137 * C92212) *
                         C1984 -
                     (((C62509 + C62510 + C62511) * C92099 +
                       (C62417 + C62418 + C62419) * C181) *
                          C92137 * C92212 +
                      ((C62508 + C62507 + C62506) * C92099 +
                       (C62410 + C62409 + C62408) * C181) *
                          C92137 * C60959) *
                         C1983) *
                        C2710)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((((C36216 * C107 + C92062 * C113) * C181 +
                        (C36216 * C182 + C92062 * C188) * C92099) *
                           C4099 +
                       (C36692 * C181 + C36770 * C92099) * C4100 +
                       (C36694 * C181 + C36771 * C92099) * C4101) *
                          C60959 +
                      ((C41203 + C41224) * C4099 + (C41206 + C41207) * C4100 +
                       (C57557 + C57558) * C4101) *
                          C92212) *
                         C1983 -
                     (((C59247 + C59248) * C4101 + (C42993 + C42994) * C4100 +
                       (C43001 + C42997) * C4099) *
                          C92212 +
                      ((C37813 * C92099 + C37730 * C181) * C4101 +
                       (C37812 * C92099 + C37728 * C181) * C4100 +
                       ((C36216 * C183 + C92062 * C189) * C92099 +
                        (C36216 * C108 + C92062 * C114) * C181) *
                           C4099) *
                          C60959) *
                         C1984) *
                        C2709 +
                    ((((C42997 + C43001) * C4099 + (C42994 + C42993) * C4100 +
                       (C59248 + C59247) * C4101) *
                          C60959 +
                      ((C42992 + C43000) * C4099 + (C42989 + C42988) * C4100 +
                       ((C36216 * C5776 + C92062 * C5786) * C181 +
                        (C36216 * C5874 + C92062 * C5880) * C92099) *
                           C4101) *
                          C92212) *
                         C1984 -
                     (((C57559 + C57560) * C4101 + (C41212 + C41211) * C4100 +
                       (C41225 + C41208) * C4099) *
                          C92212 +
                      ((C57558 + C57557) * C4101 + (C41207 + C41206) * C4100 +
                       (C41224 + C41203) * C4099) *
                          C60959) *
                         C1983) *
                        C2710)) /
                      (p * q * std::sqrt(p + q));
    d2eexz[73] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C31262 * C107 + C31257 * C113 + C31263 * C108 +
                       C31258 * C114 + C31264 * C109 + C31259 * C115) *
                          C2849 +
                      (C31262 * C245 + C31257 * C251 + C31263 * C246 +
                       C31258 * C252 + C31264 * C247 + C31259 * C253) *
                          C2709 -
                      (C62410 + C62409 + C62408) * C2850 -
                      (C62598 + C62599 + C62600) * C2710) *
                         C92137 * C60959 +
                     ((C62408 + C62409 + C62410) * C2849 +
                      (C62600 + C62599 + C62598) * C2709 -
                      (C62417 + C62418 + C62419) * C2850 -
                      (C62603 + C62602 + C62601) * C2710) *
                         C92137 * C92212) *
                        C92099 * C1983 +
                    (((C64090 + C64089 + C64088) * C2850 -
                      ((C31264 * C248 + C31259 * C254 + C31263 * C247 +
                        C31258 * C253 + C31262 * C246 + C31257 * C252) *
                           C2709 +
                       (C31264 * C110 + C31259 * C116 + C31263 * C109 +
                        C31258 * C115 + C31262 * C108 + C31257 * C114) *
                           C2849) +
                      (C64305 + C64306 + C64307) * C2710) *
                         C92137 * C60959 +
                     ((C31262 * C1391 + C31257 * C1403 + C31263 * C1392 +
                       C31258 * C1404 + C31264 * C1393 + C31259 * C1405) *
                          C2850 -
                      ((C64307 + C64306 + C64305) * C2709 +
                       (C64088 + C64089 + C64090) * C2849) +
                      (C31262 * C1542 + C31257 * C1550 + C31263 * C1543 +
                       C31258 * C1551 + C31264 * C1544 + C31259 * C1552) *
                          C2710) *
                         C92137 * C92212) *
                        C92099 * C1984)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((((C36216 * C107 + C92062 * C113) * C2849 +
                       (C36216 * C245 + C92062 * C251) * C2709 -
                       C41107 * C2850 - C41316 * C2710) *
                          C4099 +
                      (C39129 + C39130 - C39131 - C39147) * C4100 +
                      (C39134 + C39135 - C39136 - C39148) * C4101) *
                         C60959 +
                     ((C41107 * C2849 + C41316 * C2709 - C41109 * C2850 -
                       C41317 * C2710) *
                          C4099 +
                      (C44039 + C44040 - C44041 - C44042) * C4100 +
                      (C60234 + C60235 - C60236 - C60237) * C4101) *
                         C92212) *
                        C92099 * C1983 +
                    (((C42882 * C2850 -
                       ((C36216 * C246 + C92062 * C252) * C2709 +
                        (C36216 * C108 + C92062 * C114) * C2849) +
                       C43104 * C2710) *
                          C4099 +
                      (C41964 * C2850 - (C37890 * C2709 + C37728 * C2849) +
                       C42180 * C2710) *
                          C4100 +
                      (C58255 * C2850 - (C37891 * C2709 + C37730 * C2849) +
                       C58461 * C2710) *
                          C4101) *
                         C60959 +
                     ((C42884 * C2850 - (C43104 * C2709 + C42882 * C2849) +
                       C43105 * C2710) *
                          C4099 +
                      (C41966 * C2850 - (C42180 * C2709 + C41964 * C2849) +
                       C42181 * C2710) *
                          C4100 +
                      ((C36216 * C5776 + C92062 * C5786) * C2850 -
                       (C58461 * C2709 + C58255 * C2849) +
                       (C36216 * C5960 + C92062 * C5966) * C2710) *
                          C4101) *
                         C92212) *
                        C92099 * C1984)) /
                      (p * q * std::sqrt(p + q));
    d2eeyx[73] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92137 * C308) * C1987 +
             (C307 * C117 + C92137 * C314) * C1983 - C337 * C1988 -
             C338 * C1984) *
                C60959 +
            (C13193 + C13194 - C13195 - C13196) * C92212) *
               C31257 +
           ((C337 * C1987 + C338 * C1983 - C339 * C1988 - C340 * C1984) *
                C60959 +
            (C13201 + C13202 - C13203 - C13204) * C92212) *
               C31258 +
           ((C339 * C1987 + C340 * C1983 - C341 * C1988 - C342 * C1984) *
                C60959 +
            (C23291 + C23292 - C23293 - C23294) * C92212) *
               C31259) *
              C2709 +
          (((C13195 - (C13194 + C13193) + C13196) * C60959 +
            (C13199 - (C13198 + C13197) + C13200) * C92212) *
               C31257 +
           ((C13203 - (C13202 + C13201) + C13204) * C60959 +
            (C13207 - (C13206 + C13205) + C13208) * C92212) *
               C31258 +
           ((C23293 - (C23292 + C23291) + C23294) * C60959 +
            ((C307 * C1393 + C92137 * C1610) * C1988 -
             (C9751 * C1983 + C9750 * C1987) +
             (C307 * C1409 + C92137 * C1618) * C1984) *
                C92212) *
               C31259) *
              C2710) *
         C92099) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C4326 * C107 + C4099 * C308 + C4327 * C805 + C4100 * C1022 +
             C4328 * C806 + C4101 * C1023) *
                C1987 +
            (C4326 * C117 + C4099 * C314 + C4327 * C813 + C4100 * C1030 +
             C4328 * C822 + C4101 * C1031) *
                C1983 -
            (C4354 + C4355 + C4356) * C1988 - (C4357 + C4358 + C4359) * C1984) *
               C60959 +
           ((C67562 + C67563 + C67564) * C1987 +
            (C67565 + C67566 + C67567) * C1983 -
            (C7885 + C7884 + C7883) * C1988 - (C7888 + C7887 + C7886) * C1984) *
               C92212) *
              C92062 * C2709 +
          (((C7883 + C7884 + C7885) * C1988 -
            ((C67567 + C67566 + C67565) * C1983 +
             (C67564 + C67563 + C67562) * C1987) +
            (C7886 + C7887 + C7888) * C1984) *
               C60959 +
           ((C4326 * C1391 + C4099 * C1608 + C4327 * C5774 + C4100 * C6045 +
             C4328 * C5776 + C4101 * C6046) *
                C1988 -
            ((C67568 + C67569 + C67570) * C1983 +
             (C67571 + C67572 + C67573) * C1987) +
            (C4326 * C1407 + C4099 * C1616 + C4327 * C5784 + C4100 * C6051 +
             C4328 * C5788 + C4101 * C6052) *
                C1984) *
               C92212) *
              C92062 * C2710) *
         C92099) /
            (p * q * std::sqrt(p + q));
    d2eeyy[73] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C307 * C107 + C92137 * C308) * C181 +
              (C307 * C182 + C92137 * C394) * C92099) *
                 C60959 +
             (C11423 + C11440) * C92212) *
                C31257 +
            ((C401 + C417) * C60959 + C13308 * C92212) * C31258 +
            C61260 * C31259) *
               C1983 -
           (((C3021 + C3013) * C92212 + (C419 + C407) * C60959) * C31259 +
            (C23393 * C92212 + (C418 + C404) * C60959) * C31258 +
            (C13310 * C92212 + (C417 + C401) * C60959) * C31257) *
               C1984) *
              C2709 +
          (((C13308 * C60959 + C11429 * C92212) * C31257 +
            (C20118 * C60959 + (C9831 + C9835) * C92212) * C31258 +
            ((C3013 + C3021) * C60959 +
             ((C307 * C1393 + C92137 * C1610) * C181 +
              (C307 * C1475 + C92137 * C1676) * C92099) *
                 C92212) *
                C31259) *
               C1984 -
           (((C9835 + C9831) * C92212 + C23393 * C60959) * C31259 +
            (C13309 * C92212 + C13310 * C60959) * C31258 +
            ((C11441 + C11426) * C92212 + (C11440 + C11423) * C60959) *
                C31257) *
               C1983) *
              C2710)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4326 * C107 + C4099 * C308 + C4327 * C805 + C4100 * C1022 +
              C4328 * C806 + C4101 * C1023) *
                 C181 +
             (C4326 * C182 + C4099 * C394 + C4327 * C890 + C4100 * C1085 +
              C4328 * C891 + C4101 * C1086) *
                 C92099) *
                C60959 +
            ((C67562 + C67563 + C67564) * C181 +
             (C67660 + C67661 + C67662) * C92099) *
                C92212) *
               C92062 * C1983 -
           (((C7996 + C7995 + C7994) * C92099 +
             (C7885 + C7884 + C7883) * C181) *
                C92212 +
            ((C4454 + C4453 + C4452) * C92099 +
             (C4354 + C4355 + C4356) * C181) *
                C60959) *
               C92062 * C1984) *
              C2709 +
          ((((C7883 + C7884 + C7885) * C181 +
             (C7994 + C7995 + C7996) * C92099) *
                C60959 +
            ((C4326 * C1391 + C4099 * C1608 + C4327 * C5774 + C4100 * C6045 +
              C4328 * C5776 + C4101 * C6046) *
                 C181 +
             (C4326 * C1473 + C4099 * C1674 + C4327 * C5872 + C4100 * C6131 +
              C4328 * C5874 + C4101 * C6132) *
                 C92099) *
                C92212) *
               C92062 * C1984 -
           (((C67663 + C67664 + C67665) * C92099 +
             (C67571 + C67572 + C67573) * C181) *
                C92212 +
            ((C67662 + C67661 + C67660) * C92099 +
             (C67564 + C67563 + C67562) * C181) *
                C60959) *
               C92062 * C1983) *
              C2710)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[73] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((((C307 * C107 + C92137 * C308) * C2849 +
                       (C307 * C245 + C92137 * C474) * C2709 - C11327 * C2850 -
                       C11531 * C2710) *
                          C60959 +
                      (C11327 * C2849 + C11531 * C2709 - C11329 * C2850 -
                       C11532 * C2710) *
                          C92212) *
                         C31257 +
                     ((C3089 + C3090 - C3091 - C3107) * C60959 +
                      (C13410 + C13411 - C13412 - C13413) * C92212) *
                         C31258 +
                     ((C3094 + C3095 - C3096 - C3108) * C60959 +
                      (C23492 + C23493 - C23494 - C23495) * C92212) *
                         C31259) *
                        C92099 * C1983 +
                    (((C3091 - (C3090 + C3089) + C3107) * C60959 +
                      (C13412 - (C13411 + C13410) + C13413) * C92212) *
                         C31257 +
                     ((C3096 - (C3095 + C3094) + C3108) * C60959 +
                      (C23494 - (C23493 + C23492) + C23495) * C92212) *
                         C31258 +
                     ((C3101 - (C3100 + C3099) + C3109) * C60959 +
                      ((C307 * C1393 + C92137 * C1610) * C2850 -
                       (C3106 * C2709 + C2938 * C2849) +
                       (C307 * C1544 + C92137 * C1734) * C2710) *
                          C92212) *
                         C31259) *
                        C92099 * C1984)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C4326 * C107 + C4099 * C308 + C4327 * C805 +
                       C4100 * C1022 + C4328 * C806 + C4101 * C1023) *
                          C2849 +
                      (C4326 * C245 + C4099 * C474 + C4327 * C956 +
                       C4100 * C1146 + C4328 * C957 + C4101 * C1147) *
                          C2709 -
                      (C67564 + C67563 + C67562) * C2850 -
                      (C67752 + C67753 + C67754) * C2710) *
                         C60959 +
                     ((C67562 + C67563 + C67564) * C2849 +
                      (C67754 + C67753 + C67752) * C2709 -
                      (C67571 + C67572 + C67573) * C2850 -
                      (C67757 + C67756 + C67755) * C2710) *
                         C92212) *
                        C92062 * C92099 * C1983 +
                    (((C7883 + C7884 + C7885) * C2850 -
                      ((C4546 + C4545 + C4544) * C2709 +
                       (C4354 + C4355 + C4356) * C2849) +
                      (C8104 + C8103 + C8102) * C2710) *
                         C60959 +
                     ((C4326 * C1391 + C4099 * C1608 + C4327 * C5774 +
                       C4100 * C6045 + C4328 * C5776 + C4101 * C6046) *
                          C2850 -
                      ((C8102 + C8103 + C8104) * C2709 +
                       (C7885 + C7884 + C7883) * C2849) +
                      (C4326 * C1542 + C4099 * C1730 + C4327 * C5956 +
                       C4100 * C6211 + C4328 * C5960 + C4101 * C6212) *
                          C2710) *
                         C92212) *
                        C92062 * C92099 * C1984)) /
                      (p * q * std::sqrt(p + q));
    d2eezx[73] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C61411 * C107 + C60959 * C555 + C61412 * C1389 + C92212 * C1788) *
                C1987 +
            (C61411 * C117 + C60959 * C561 + C61412 * C1397 + C92212 * C1796) *
                C1983 -
            (C61438 + C61439) * C1988 - (C61440 + C61441) * C1984) *
               C31257 +
           ((C61439 + C61438) * C1987 + (C61441 + C61440) * C1983 -
            (C61443 + C61442) * C1988 - (C61445 + C61444) * C1984) *
               C31258 +
           (C61450 * C1987 + C61451 * C1983 - (C61447 + C61446) * C1988 -
            (C61449 + C61448) * C1984) *
               C31259) *
              C92137 * C2709 +
          (((C64716 + C64717) * C1988 -
            ((C61412 * C1406 + C92212 * C1797 + C61411 * C1397 +
              C60959 * C1796) *
                 C1983 +
             (C61412 * C1390 + C92212 * C1789 + C61411 * C1389 +
              C60959 * C1788) *
                 C1987) +
            (C64718 + C64719) * C1984) *
               C31257 +
           ((C64720 + C64721) * C1988 -
            ((C64719 + C64718) * C1983 + (C64717 + C64716) * C1987) +
            (C64722 + C64723) * C1984) *
               C31258 +
           ((C61411 * C1386 + C60959 * C1785 + C61412 * C1393 +
             C92212 * C1792) *
                C1988 -
            ((C64723 + C64722) * C1983 + (C64721 + C64720) * C1987) +
            (C61411 * C1394 + C60959 * C1793 + C61412 * C1409 +
             C92212 * C1800) *
                C1984) *
               C31259) *
              C92137 * C2710) *
         C92099) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C61411 * C107 + C60959 * C555 + C61412 * C1389 + C92212 * C1788) *
                C1987 +
            (C61411 * C117 + C60959 * C561 + C61412 * C1397 + C92212 * C1796) *
                C1983 -
            (C61438 + C61439) * C1988 - (C61440 + C61441) * C1984) *
               C92062 * C4099 +
           ((C67034 + C67035) * C1987 + (C67036 + C67037) * C1983 -
            (C63751 + C63750) * C1988 - (C63753 + C63752) * C1984) *
               C92062 * C4100 +
           (C67046 * C1987 + C67047 * C1983 - (C68674 + C68675) * C1988 -
            (C68676 + C68677) * C1984) *
               C92062 * C4101) *
              C2709 +
          (((C64716 + C64717) * C1988 -
            ((C61412 * C1406 + C92212 * C1797 + C61411 * C1397 +
              C60959 * C1796) *
                 C1983 +
             (C61412 * C1390 + C92212 * C1789 + C61411 * C1389 +
              C60959 * C1788) *
                 C1987) +
            (C64718 + C64719) * C1984) *
               C92062 * C4099 +
           ((C61411 * C3432 + C60959 * C3876 + C61412 * C5774 +
             C92212 * C6290) *
                C1988 -
            ((C61412 * C5783 + C92212 * C6295 + C61411 * C3439 +
              C60959 * C3879) *
                 C1983 +
             (C61412 * C5773 + C92212 * C6289 + C61411 * C3431 +
              C60959 * C3875) *
                 C1987) +
            (C61411 * C3440 + C60959 * C3880 + C61412 * C5784 +
             C92212 * C6296) *
                C1984) *
               C92062 * C4100 +
           ((C61411 * C5771 + C60959 * C6287 + C61412 * C5776 +
             C92212 * C6292) *
                C1988 -
            ((C61412 * C5787 + C92212 * C6297 + C61411 * C5778 +
              C60959 * C6294) *
                 C1983 +
             (C61412 * C5775 + C92212 * C6291 + C61411 * C5772 +
              C60959 * C6288) *
                 C1987) +
            (C61411 * C5777 + C60959 * C6293 + C61412 * C5788 +
             C92212 * C6298) *
                C1984) *
               C92062 * C4101) *
              C2710) *
         C92099) /
            (p * q * std::sqrt(p + q));
    d2eezy[73] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C61411 * C107 + C60959 * C555 + C61412 * C1389 + C92212 * C1788) *
                 C181 +
             (C61411 * C182 + C60959 * C641 + C61412 * C1471 + C92212 * C1854) *
                 C92099) *
                C31257 +
            ((C61439 + C61438) * C181 + (C61539 + C61540) * C92099) * C31258 +
            C61547 * C31259) *
               C92137 * C1983 -
           (((C61543 + C61544) * C92099 + (C61447 + C61446) * C181) * C31259 +
            ((C61542 + C61541) * C92099 + (C61443 + C61442) * C181) * C31258 +
            ((C61540 + C61539) * C92099 + (C61438 + C61439) * C181) * C31257) *
               C92137 * C1984) *
              C2709 +
          ((((C64716 + C64717) * C181 + (C64830 + C64831) * C92099) * C31257 +
            ((C64720 + C64721) * C181 + (C64832 + C64833) * C92099) * C31258 +
            ((C61411 * C1386 + C60959 * C1785 + C61412 * C1393 +
              C92212 * C1792) *
                 C181 +
             (C61411 * C1468 + C60959 * C1851 + C61412 * C1475 +
              C92212 * C1858) *
                 C92099) *
                C31259) *
               C92137 * C1984 -
           (((C64833 + C64832) * C92099 + (C64721 + C64720) * C181) * C31259 +
            ((C64831 + C64830) * C92099 + (C64717 + C64716) * C181) * C31258 +
            ((C61412 * C1472 + C92212 * C1855 + C61411 * C1471 +
              C60959 * C1854) *
                 C92099 +
             (C61412 * C1390 + C92212 * C1789 + C61411 * C1389 +
              C60959 * C1788) *
                 C181) *
                C31257) *
               C92137 * C1983) *
              C2710)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C61411 * C107 + C60959 * C555 + C61412 * C1389 + C92212 * C1788) *
                 C181 +
             (C61411 * C182 + C60959 * C641 + C61412 * C1471 + C92212 * C1854) *
                 C92099) *
                C92062 * C4099 +
            ((C67034 + C67035) * C181 + (C67139 + C67138) * C92099) * C92062 *
                C4100 +
            (C67046 * C181 + C67144 * C92099) * C92062 * C4101) *
               C1983 -
           (((C68781 + C68780) * C92099 + (C68674 + C68675) * C181) * C92062 *
                C4101 +
            ((C63864 + C63865) * C92099 + (C63751 + C63750) * C181) * C92062 *
                C4100 +
            ((C61540 + C61539) * C92099 + (C61438 + C61439) * C181) * C92062 *
                C4099) *
               C1984) *
              C2709 +
          ((((C64716 + C64717) * C181 + (C64830 + C64831) * C92099) * C92062 *
                C4099 +
            ((C61411 * C3432 + C60959 * C3876 + C61412 * C5774 +
              C92212 * C6290) *
                 C181 +
             (C61411 * C3514 + C60959 * C3950 + C61412 * C5872 +
              C92212 * C6376) *
                 C92099) *
                C92062 * C4100 +
            ((C61411 * C5771 + C60959 * C6287 + C61412 * C5776 +
              C92212 * C6292) *
                 C181 +
             (C61411 * C5869 + C60959 * C6373 + C61412 * C5874 +
              C92212 * C6378) *
                 C92099) *
                C92062 * C4101) *
               C1984 -
           (((C61412 * C5873 + C92212 * C6377 + C61411 * C5870 +
              C60959 * C6374) *
                 C92099 +
             (C61412 * C5775 + C92212 * C6291 + C61411 * C5772 +
              C60959 * C6288) *
                 C181) *
                C92062 * C4101 +
            ((C61412 * C5871 + C92212 * C6375 + C61411 * C3513 +
              C60959 * C3949) *
                 C92099 +
             (C61412 * C5773 + C92212 * C6289 + C61411 * C3431 +
              C60959 * C3875) *
                 C181) *
                C92062 * C4100 +
            ((C61412 * C1472 + C92212 * C1855 + C61411 * C1471 +
              C60959 * C1854) *
                 C92099 +
             (C61412 * C1390 + C92212 * C1789 + C61411 * C1389 +
              C60959 * C1788) *
                 C181) *
                C92062 * C4099) *
               C1983) *
              C2710)) /
            (p * q * std::sqrt(p + q));
    d2eezz[73] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C61411 * C107 + C60959 * C555 + C61412 * C1389 + C92212 * C1788) *
                C2849 +
            (C61411 * C245 + C60959 * C719 + C61412 * C1540 + C92212 * C1909) *
                C2709 -
            (C61412 * C1390 + C92212 * C1789 + C61411 * C1389 +
             C60959 * C1788) *
                C2850 -
            (C61412 * C1541 + C92212 * C1910 + C61411 * C1540 +
             C60959 * C1909) *
                C2710) *
               C31257 +
           ((C61439 + C61438) * C2849 + (C61635 + C61636) * C2709 -
            (C64717 + C64716) * C2850 - (C64940 + C64941) * C2710) *
               C31258 +
           (C61450 * C2849 + C61641 * C2709 - (C64721 + C64720) * C2850 -
            (C64942 + C64943) * C2710) *
               C31259) *
              C92137 * C92099 * C1983 +
          (((C64716 + C64717) * C2850 -
            ((C61636 + C61635) * C2709 + (C61438 + C61439) * C2849) +
            (C64941 + C64940) * C2710) *
               C31257 +
           ((C64720 + C64721) * C2850 -
            ((C61638 + C61637) * C2709 + (C61443 + C61442) * C2849) +
            (C64943 + C64942) * C2710) *
               C31258 +
           ((C61411 * C1386 + C60959 * C1785 + C61412 * C1393 +
             C92212 * C1792) *
                C2850 -
            ((C61639 + C61640) * C2709 + (C61447 + C61446) * C2849) +
            (C61411 * C1537 + C60959 * C1915 + C61412 * C1544 +
             C92212 * C1916) *
                C2710) *
               C31259) *
              C92137 * C92099 * C1984)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C61411 * C107 + C60959 * C555 + C61412 * C1389 + C92212 * C1788) *
                C2849 +
            (C61411 * C245 + C60959 * C719 + C61412 * C1540 + C92212 * C1909) *
                C2709 -
            (C61412 * C1390 + C92212 * C1789 + C61411 * C1389 +
             C60959 * C1788) *
                C2850 -
            (C61412 * C1541 + C92212 * C1910 + C61411 * C1540 +
             C60959 * C1909) *
                C2710) *
               C92062 * C4099 +
           ((C67034 + C67035) * C2849 + (C67232 + C67233) * C2709 -
            (C61412 * C5773 + C92212 * C6289 + C61411 * C3431 +
             C60959 * C3875) *
                C2850 -
            (C61412 * C5955 + C92212 * C6453 + C61411 * C3587 +
             C60959 * C4019) *
                C2710) *
               C92062 * C4100 +
           (C67046 * C2849 + C67238 * C2709 -
            (C61412 * C5775 + C92212 * C6291 + C61411 * C5772 +
             C60959 * C6288) *
                C2850 -
            (C61412 * C5959 + C92212 * C6456 + C61411 * C5958 +
             C60959 * C6455) *
                C2710) *
               C92062 * C4101) *
              C92099 * C1983 +
          (((C64716 + C64717) * C2850 -
            ((C61636 + C61635) * C2709 + (C61438 + C61439) * C2849) +
            (C64941 + C64940) * C2710) *
               C92062 * C4099 +
           ((C61411 * C3432 + C60959 * C3876 + C61412 * C5774 +
             C92212 * C6290) *
                C2850 -
            ((C63976 + C63977) * C2709 + (C63751 + C63750) * C2849) +
            (C61411 * C3588 + C60959 * C4020 + C61412 * C5956 +
             C92212 * C6454) *
                C2710) *
               C92062 * C4100 +
           ((C61411 * C5771 + C60959 * C6287 + C61412 * C5776 +
             C92212 * C6292) *
                C2850 -
            ((C68885 + C68884) * C2709 + (C68674 + C68675) * C2849) +
            (C61411 * C5957 + C60959 * C6457 + C61412 * C5960 +
             C92212 * C6458) *
                C2710) *
               C92062 * C4101) *
              C92099 * C1984)) /
            (p * q * std::sqrt(p + q));
    d2eexx[74] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C31262 * C107 + C31257 * C113 + C31263 * C108 + C31258 * C114 +
            C31264 * C109 + C31259 * C115) *
               C104 +
           (C31262 * C117 + C31257 * C125 + C31263 * C118 + C31258 * C126 +
            C31264 * C119 + C31259 * C127) *
               C93 -
           (C31264 * C110 + C31259 * C116 + C31263 * C109 + C31258 * C115 +
            C31262 * C108 + C31257 * C114) *
               C105 -
           (C31264 * C120 + C31259 * C128 + C31263 * C119 + C31258 * C127 +
            C31262 * C118 + C31257 * C126) *
               C94 +
           (C31262 * C109 + C31257 * C115 + C31263 * C110 + C31258 * C116 +
            C31264 * C111 + C31259 * C121) *
               C106 +
           (C31262 * C119 + C31257 * C127 + C31263 * C120 + C31258 * C128 +
            C31264 * C122 + C31259 * C129) *
               C95) *
              C92137 * C60959 +
          ((C31262 * C1389 + C31257 * C1401 + C31263 * C1388 + C31258 * C1400 +
            C31264 * C1387 + C31259 * C1399) *
               C104 +
           (C31262 * C1397 + C31257 * C1413 + C31263 * C1396 + C31258 * C1412 +
            C31264 * C1395 + C31259 * C1411) *
               C93 -
           (C31264 * C1386 + C31259 * C1398 + C31263 * C1387 + C31258 * C1399 +
            C31262 * C1388 + C31257 * C1400) *
               C105 -
           (C31264 * C1394 + C31259 * C1410 + C31263 * C1395 + C31258 * C1411 +
            C31262 * C1396 + C31257 * C1412) *
               C94 +
           (C31262 * C1387 + C31257 * C1399 + C31263 * C1386 + C31258 * C1398 +
            C31264 * C2711 + C31259 * C2712) *
               C106 +
           (C31262 * C1395 + C31257 * C1411 + C31263 * C1394 + C31258 * C1410 +
            C31264 * C2713 + C31259 * C2714) *
               C95) *
              C92137 * C92212) *
         C92110 * C92099) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31262 * C107 + C31257 * C113 + C31263 * C108 + C31258 * C114 +
             C31264 * C109 + C31259 * C115) *
                C801 +
            (C31262 * C117 + C31257 * C125 + C31263 * C118 + C31258 * C126 +
             C31264 * C119 + C31259 * C127) *
                C92078) *
               C92137 * C60959 +
           ((C31262 * C1389 + C31257 * C1401 + C31263 * C1388 + C31258 * C1400 +
             C31264 * C1387 + C31259 * C1399) *
                C801 +
            (C31262 * C1397 + C31257 * C1413 + C31263 * C1396 + C31258 * C1412 +
             C31264 * C1395 + C31259 * C1411) *
                C92078) *
               C92137 * C92212) *
              C92110 * C798 -
          (((C35354 + C35355 + C35356) * C92078 +
            (C35357 + C35358 + C35359) * C801) *
               C92137 * C92212 +
           ((C32047 + C32046 + C32045) * C92078 +
            (C32044 + C32043 + C32042) * C801) *
               C92137 * C60959) *
              C92110 * C799 +
          (((C32053 + C32052 + C32051) * C801 +
            (C32050 + C32049 + C32048) * C92078) *
               C92137 * C60959 +
           ((C31262 * C5772 + C31257 * C5780 + C31263 * C5771 + C31258 * C5779 +
             C31264 * C7566 + C31259 * C7567) *
                C801 +
            (C31262 * C5778 + C31257 * C5790 + C31263 * C5777 + C31258 * C5789 +
             C31264 * C7568 + C31259 * C7569) *
                C92078) *
               C92137 * C92212) *
              C92110 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C36216 * C107 + C92062 * C113) * C104 +
            (C36216 * C117 + C92062 * C125) * C93 -
            (C36216 * C108 + C92062 * C114) * C105 -
            (C36216 * C118 + C92062 * C126) * C94 +
            (C36216 * C109 + C92062 * C115) * C106 +
            (C36216 * C119 + C92062 * C127) * C95) *
               C4099 +
           (C36692 * C104 + C36693 * C93 - C37728 * C105 - C37729 * C94 +
            (C36216 * C803 + C92062 * C815) * C106 +
            (C36216 * C811 + C92062 * C827) * C95) *
               C4100 +
           (C36694 * C104 + C36695 * C93 - C37730 * C105 - C37731 * C94 +
            (C36216 * C808 + C92062 * C820) * C106 +
            (C36216 * C824 + C92062 * C832) * C95) *
               C4101) *
              C60959 +
          ((C41107 * C104 + C41108 * C93 - C42882 * C105 - C42883 * C94 +
            (C36216 * C1387 + C92062 * C1399) * C106 +
            (C36216 * C1395 + C92062 * C1411) * C95) *
               C4099 +
           (C38977 * C104 + C38976 * C93 - C41964 * C105 - C41965 * C94 +
            (C36216 * C3433 + C92062 * C3437) * C106 +
            (C36216 * C3441 + C92062 * C3445) * C95) *
               C4100 +
           (C38975 * C104 + C38974 * C93 - C58255 * C105 - C58256 * C94 +
            (C36216 * C7566 + C92062 * C7567) * C106 +
            (C36216 * C7568 + C92062 * C7569) * C95) *
               C4101) *
              C92212) *
         C92110 * C92099) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C36216 * C107 + C92062 * C113) * C801 +
             (C36216 * C117 + C92062 * C125) * C92078) *
                C4099 +
            (C36700 + C36701) * C4100 + C36708 * C4101) *
               C60959 +
           ((C41116 + C41117) * C4099 + C43820 * C4100 + C56777 * C4101) *
               C92212) *
              C92110 * C798 -
          (((C38978 + C38979) * C4101 + C60033 * C4100 + C43822 * C4099) *
               C92212 +
           ((C36705 + C36704) * C4101 + (C36703 + C36702) * C4100 +
            (C36701 + C36700) * C4099) *
               C60959) *
              C92110 * C799 +
          ((C36708 * C4099 + C36709 * C4100 + (C36707 + C36706) * C4101) *
               C60959 +
           (C56777 * C4099 + (C38979 + C38978) * C4100 +
            ((C36216 * C38955 + C92062 * C38956) * C801 +
             (C36216 * C38957 + C92062 * C38958) * C92078) *
                C4101) *
               C92212) *
              C92110 * C800)) /
            (p * q * std::sqrt(p + q));
    d2eexy[74] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31262 * C107 + C31257 * C113 + C31263 * C108 + C31258 * C114 +
             C31264 * C109 + C31259 * C115) *
                C181 +
            (C31262 * C182 + C31257 * C188 + C31263 * C183 + C31258 * C189 +
             C31264 * C184 + C31259 * C190) *
                C92099) *
               C92137 * C60959 +
           ((C31262 * C1389 + C31257 * C1401 + C31263 * C1388 + C31258 * C1400 +
             C31264 * C1387 + C31259 * C1399) *
                C181 +
            (C31262 * C1471 + C31257 * C1479 + C31263 * C1470 + C31258 * C1478 +
             C31264 * C1469 + C31259 * C1477) *
                C92099) *
               C92137 * C92212) *
              C93 -
          (((C31264 * C1468 + C31259 * C1476 + C31263 * C1469 + C31258 * C1477 +
             C31262 * C1470 + C31257 * C1478) *
                C92099 +
            (C31264 * C1386 + C31259 * C1398 + C31263 * C1387 + C31258 * C1399 +
             C31262 * C1388 + C31257 * C1400) *
                C181) *
               C92137 * C92212 +
           ((C31264 * C185 + C31259 * C191 + C31263 * C184 + C31258 * C190 +
             C31262 * C183 + C31257 * C189) *
                C92099 +
            (C31264 * C110 + C31259 * C116 + C31263 * C109 + C31258 * C115 +
             C31262 * C108 + C31257 * C114) *
                C181) *
               C92137 * C60959) *
              C94 +
          (((C31262 * C109 + C31257 * C115 + C31263 * C110 + C31258 * C116 +
             C31264 * C111 + C31259 * C121) *
                C181 +
            (C31262 * C184 + C31257 * C190 + C31263 * C185 + C31258 * C191 +
             C31264 * C186 + C31259 * C192) *
                C92099) *
               C92137 * C60959 +
           ((C31262 * C1387 + C31257 * C1399 + C31263 * C1386 + C31258 * C1398 +
             C31264 * C2711 + C31259 * C2712) *
                C181 +
            (C31262 * C1469 + C31257 * C1477 + C31263 * C1468 + C31258 * C1476 +
             C31264 * C2781 + C31259 * C2782) *
                C92099) *
               C92137 * C92212) *
              C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C31262 * C107 + C31257 * C113 + C31263 * C108 + C31258 * C114 +
            C31264 * C109 + C31259 * C115) *
               C884 +
           (C31262 * C182 + C31257 * C188 + C31263 * C183 + C31258 * C189 +
            C31264 * C184 + C31259 * C190) *
               C798 -
           (C32044 + C32043 + C32042) * C885 -
           (C32140 + C32141 + C32142) * C799 +
           (C32053 + C32052 + C32051) * C886 +
           (C32143 + C32144 + C32145) * C800) *
              C92137 * C60959 +
          ((C31262 * C1389 + C31257 * C1401 + C31263 * C1388 + C31258 * C1400 +
            C31264 * C1387 + C31259 * C1399) *
               C884 +
           (C31262 * C1471 + C31257 * C1479 + C31263 * C1470 + C31258 * C1478 +
            C31264 * C1469 + C31259 * C1477) *
               C798 -
           (C35357 + C35358 + C35359) * C885 -
           (C35466 + C35465 + C35464) * C799 +
           (C31262 * C5772 + C31257 * C5780 + C31263 * C5771 + C31258 * C5779 +
            C31264 * C7566 + C31259 * C7567) *
               C886 +
           (C31262 * C5870 + C31257 * C5876 + C31263 * C5869 + C31258 * C5875 +
            C31264 * C7668 + C31259 * C7669) *
               C800) *
              C92137 * C92212) *
         C92078 * C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C36216 * C107 + C92062 * C113) * C181 +
             (C36216 * C182 + C92062 * C188) * C92099) *
                C4099 +
            (C36692 * C181 + C36770 * C92099) * C4100 +
            (C36694 * C181 + C36771 * C92099) * C4101) *
               C60959 +
           ((C41203 + C41224) * C4099 + (C41206 + C41207) * C4100 +
            (C57557 + C57558) * C4101) *
               C92212) *
              C93 -
          (((C59247 + C59248) * C4101 + (C42993 + C42994) * C4100 +
            (C43001 + C42997) * C4099) *
               C92212 +
           ((C37813 * C92099 + C37730 * C181) * C4101 +
            (C37812 * C92099 + C37728 * C181) * C4100 +
            ((C36216 * C183 + C92062 * C189) * C92099 +
             (C36216 * C108 + C92062 * C114) * C181) *
                C4099) *
               C60959) *
              C94 +
          ((((C36216 * C109 + C92062 * C115) * C181 +
             (C36216 * C184 + C92062 * C190) * C92099) *
                C4099 +
            ((C36216 * C803 + C92062 * C815) * C181 +
             (C36216 * C888 + C92062 * C896) * C92099) *
                C4100 +
            ((C36216 * C808 + C92062 * C820) * C181 +
             (C36216 * C893 + C92062 * C901) * C92099) *
                C4101) *
               C60959 +
           (((C36216 * C1387 + C92062 * C1399) * C181 +
             (C36216 * C1469 + C92062 * C1477) * C92099) *
                C4099 +
            ((C36216 * C3433 + C92062 * C3437) * C181 +
             (C36216 * C3515 + C92062 * C3519) * C92099) *
                C4100 +
            ((C36216 * C7566 + C92062 * C7567) * C181 +
             (C36216 * C7668 + C92062 * C7669) * C92099) *
                C4101) *
               C92212) *
              C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C36216 * C107 + C92062 * C113) * C884 +
            (C36216 * C182 + C92062 * C188) * C798 - C36692 * C885 -
            C36770 * C799 + C36694 * C886 + C36771 * C800) *
               C4099 +
           (C36692 * C884 + C36770 * C798 - C36694 * C885 - C36771 * C799 +
            C36696 * C886 + C36772 * C800) *
               C4100 +
           (C36694 * C884 + C36771 * C798 - C36696 * C885 - C36772 * C799 +
            C36699 * C886 + C36773 * C800) *
               C4101) *
              C60959 +
          ((C41107 * C884 + C41219 * C798 - C38977 * C885 - C39058 * C799 +
            C38975 * C886 + C39059 * C800) *
               C4099 +
           (C38977 * C884 + C39058 * C798 - C38975 * C885 - C39059 * C799 +
            C38973 * C886 + C39060 * C800) *
               C4100 +
           (C38975 * C884 + C39059 * C798 - C38973 * C885 - C39060 * C799 +
            (C36216 * C38955 + C92062 * C38956) * C886 +
            (C36216 * C39049 + C92062 * C39050) * C800) *
               C4101) *
              C92212) *
         C92078 * C92110) /
            (p * q * std::sqrt(p + q));
    d2eexz[74] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31262 * C107 + C31257 * C113 + C31263 * C108 + C31258 * C114 +
             C31264 * C109 + C31259 * C115) *
                C244 +
            (C31262 * C245 + C31257 * C251 + C31263 * C246 + C31258 * C252 +
             C31264 * C247 + C31259 * C253) *
                C92110) *
               C92137 * C60959 +
           ((C31262 * C1389 + C31257 * C1401 + C31263 * C1388 + C31258 * C1400 +
             C31264 * C1387 + C31259 * C1399) *
                C244 +
            (C31262 * C1540 + C31257 * C1548 + C31263 * C1539 + C31258 * C1547 +
             C31264 * C1538 + C31259 * C1546) *
                C92110) *
               C92137 * C92212) *
              C92099 * C93 -
          (((C31264 * C1537 + C31259 * C1545 + C31263 * C1538 + C31258 * C1546 +
             C31262 * C1539 + C31257 * C1547) *
                C92110 +
            (C31264 * C1386 + C31259 * C1398 + C31263 * C1387 + C31258 * C1399 +
             C31262 * C1388 + C31257 * C1400) *
                C244) *
               C92137 * C92212 +
           ((C31264 * C248 + C31259 * C254 + C31263 * C247 + C31258 * C253 +
             C31262 * C246 + C31257 * C252) *
                C92110 +
            (C31264 * C110 + C31259 * C116 + C31263 * C109 + C31258 * C115 +
             C31262 * C108 + C31257 * C114) *
                C244) *
               C92137 * C60959) *
              C92099 * C94 +
          (((C31262 * C109 + C31257 * C115 + C31263 * C110 + C31258 * C116 +
             C31264 * C111 + C31259 * C121) *
                C244 +
            (C31262 * C247 + C31257 * C253 + C31263 * C248 + C31258 * C254 +
             C31264 * C249 + C31259 * C255) *
                C92110) *
               C92137 * C60959 +
           ((C31262 * C1387 + C31257 * C1399 + C31263 * C1386 + C31258 * C1398 +
             C31264 * C2711 + C31259 * C2712) *
                C244 +
            (C31262 * C1538 + C31257 * C1546 + C31263 * C1537 + C31258 * C1545 +
             C31264 * C2851 + C31259 * C2852) *
                C92110) *
               C92137 * C92212) *
              C92099 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31262 * C107 + C31257 * C113 + C31263 * C108 + C31258 * C114 +
             C31264 * C109 + C31259 * C115) *
                C244 +
            (C31262 * C245 + C31257 * C251 + C31263 * C246 + C31258 * C252 +
             C31264 * C247 + C31259 * C253) *
                C92110) *
               C92137 * C60959 +
           ((C31262 * C1389 + C31257 * C1401 + C31263 * C1388 + C31258 * C1400 +
             C31264 * C1387 + C31259 * C1399) *
                C244 +
            (C31262 * C1540 + C31257 * C1548 + C31263 * C1539 + C31258 * C1547 +
             C31264 * C1538 + C31259 * C1546) *
                C92110) *
               C92137 * C92212) *
              C798 -
          (((C35571 + C35572 + C35573) * C92110 +
            (C35357 + C35358 + C35359) * C244) *
               C92137 * C92212 +
           ((C32234 + C32233 + C32232) * C92110 +
            (C32044 + C32043 + C32042) * C244) *
               C92137 * C60959) *
              C799 +
          (((C32053 + C32052 + C32051) * C244 +
            (C32237 + C32236 + C32235) * C92110) *
               C92137 * C60959 +
           ((C31262 * C5772 + C31257 * C5780 + C31263 * C5771 + C31258 * C5779 +
             C31264 * C7566 + C31259 * C7567) *
                C244 +
            (C31262 * C5958 + C31257 * C5964 + C31263 * C5957 + C31258 * C5963 +
             C31264 * C7768 + C31259 * C7769) *
                C92110) *
               C92137 * C92212) *
              C800) *
         C92078) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C36216 * C107 + C92062 * C113) * C244 +
             (C36216 * C245 + C92062 * C251) * C92110) *
                C4099 +
            (C36826 + C36842) * C4100 + C36846 * C4101) *
               C60959 +
           ((C41107 * C244 + C41316 * C92110) * C4099 +
            (C40482 + C40483) * C4100 + C56926 * C4101) *
               C92212) *
              C92099 * C93 -
          (((C58462 + C58458) * C4101 + (C42182 + C42174) * C4100 +
            (C43104 * C92110 + C42882 * C244) * C4099) *
               C92212 +
           ((C37894 + C37884) * C4101 + (C37893 + C37881) * C4100 +
            ((C36216 * C246 + C92062 * C252) * C92110 +
             (C36216 * C108 + C92062 * C114) * C244) *
                C4099) *
               C60959) *
              C92099 * C94 +
          ((((C36216 * C109 + C92062 * C115) * C244 +
             (C36216 * C247 + C92062 * C253) * C92110) *
                C4099 +
            ((C36216 * C803 + C92062 * C815) * C244 +
             (C36216 * C954 + C92062 * C962) * C92110) *
                C4100 +
            ((C36216 * C808 + C92062 * C820) * C244 +
             (C36216 * C959 + C92062 * C967) * C92110) *
                C4101) *
               C60959 +
           (((C36216 * C1387 + C92062 * C1399) * C244 +
             (C36216 * C1538 + C92062 * C1546) * C92110) *
                C4099 +
            ((C36216 * C3433 + C92062 * C3437) * C244 +
             (C36216 * C3589 + C92062 * C3593) * C92110) *
                C4100 +
            ((C36216 * C7566 + C92062 * C7567) * C244 +
             (C36216 * C7768 + C92062 * C7769) * C92110) *
                C4101) *
               C92212) *
              C92099 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C36216 * C107 + C92062 * C113) * C244 +
             (C36216 * C245 + C92062 * C251) * C92110) *
                C4099 +
            (C36826 + C36842) * C4100 + C36846 * C4101) *
               C60959 +
           ((C41107 * C244 + C41316 * C92110) * C4099 +
            (C40482 + C40483) * C4100 + C56926 * C4101) *
               C92212) *
              C798 -
          (((C56927 + C56928) * C4101 + (C40490 + C40491) * C4100 +
            (C40483 + C40482) * C4099) *
               C92212 +
           ((C36844 + C36832) * C4101 + (C36843 + C36829) * C4100 +
            (C36842 + C36826) * C4099) *
               C60959) *
              C799 +
          ((C36846 * C4099 + C36847 * C4100 + (C36837 + C36845) * C4101) *
               C60959 +
           (C56926 * C4099 + (C56928 + C56927) * C4100 +
            ((C36216 * C38955 + C92062 * C38956) * C244 +
             (C36216 * C39126 + C92062 * C39127) * C92110) *
                C4101) *
               C92212) *
              C800) *
         C92078) /
            (p * q * std::sqrt(p + q));
    d2eeyx[74] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C307 * C107 + C92137 * C308) * C104 +
            (C307 * C117 + C92137 * C314) * C93 - C337 * C105 - C338 * C94 +
            C339 * C106 + C340 * C95) *
               C60959 +
           (C11327 * C104 + C11328 * C93 - C2934 * C105 - C2935 * C94 +
            C2936 * C106 + C2937 * C95) *
               C92212) *
              C31257 +
          ((C337 * C104 + C338 * C93 - C339 * C105 - C340 * C94 + C341 * C106 +
            C342 * C95) *
               C60959 +
           (C2934 * C104 + C2935 * C93 - C2936 * C105 - C2937 * C94 +
            C2938 * C106 + C2939 * C95) *
               C92212) *
              C31258 +
          ((C339 * C104 + C340 * C93 - C341 * C105 - C342 * C94 + C343 * C106 +
            C344 * C95) *
               C60959 +
           (C2936 * C104 + C2937 * C93 - C2938 * C105 - C2939 * C94 +
            (C307 * C2711 + C92137 * C2919) * C106 +
            (C307 * C2713 + C92137 * C2920) * C95) *
               C92212) *
              C31259) *
         C92110 * C92099) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92137 * C308) * C801 +
             (C307 * C117 + C92137 * C314) * C92078) *
                C60959 +
            (C11336 + C11337) * C92212) *
               C31257 +
           ((C337 * C801 + C338 * C92078) * C60959 +
            (C11315 + C11316) * C92212) *
               C31258 +
           ((C339 * C801 + C340 * C92078) * C60959 +
            (C21541 + C21542) * C92212) *
               C31259) *
              C92110 * C798 -
          (((C24231 + C24230) * C92212 +
            (C2215 * C92078 + C2214 * C801) * C60959) *
               C31259 +
           ((C14197 + C14196) * C92212 +
            (C2213 * C92078 + C2212 * C801) * C60959) *
               C31258 +
           ((C14205 + C14204) * C92212 +
            ((C307 * C813 + C92137 * C1030) * C92078 +
             (C307 * C805 + C92137 * C1022) * C801) *
                C60959) *
               C31257) *
              C92110 * C799 +
          ((((C307 * C806 + C92137 * C1023) * C801 +
             (C307 * C822 + C92137 * C1031) * C92078) *
                C60959 +
            ((C307 * C5772 + C92137 * C6042) * C801 +
             (C307 * C5778 + C92137 * C6048) * C92078) *
                C92212) *
               C31257 +
           (((C307 * C807 + C92137 * C1024) * C801 +
             (C307 * C823 + C92137 * C1032) * C92078) *
                C60959 +
            ((C307 * C5771 + C92137 * C6041) * C801 +
             (C307 * C5777 + C92137 * C6047) * C92078) *
                C92212) *
               C31258 +
           (((C307 * C808 + C92137 * C1025) * C801 +
             (C307 * C824 + C92137 * C1033) * C92078) *
                C60959 +
            ((C307 * C7566 + C92137 * C7868) * C801 +
             (C307 * C7568 + C92137 * C7869) * C92078) *
                C92212) *
               C31259) *
              C92110 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C4326 * C107 + C4099 * C308 + C4327 * C805 + C4100 * C1022 +
            C4328 * C806 + C4101 * C1023) *
               C104 +
           (C4326 * C117 + C4099 * C314 + C4327 * C813 + C4100 * C1030 +
            C4328 * C822 + C4101 * C1031) *
               C93 -
           (C4354 + C4355 + C4356) * C105 - (C4357 + C4358 + C4359) * C94 +
           (C4360 + C4361 + C4362) * C106 + (C4363 + C4364 + C4365) * C95) *
              C60959 +
          ((C4326 * C1389 + C4099 * C1606 + C4327 * C3431 + C4100 * C3661 +
            C4328 * C5772 + C4101 * C6042) *
               C104 +
           (C4326 * C1397 + C4099 * C1614 + C4327 * C3439 + C4100 * C3665 +
            C4328 * C5778 + C4101 * C6048) *
               C93 -
           (C7885 + C7884 + C7883) * C105 - (C7888 + C7887 + C7886) * C94 +
           (C4326 * C1387 + C4099 * C1604 + C4327 * C3433 + C4100 * C3663 +
            C4328 * C7566 + C4101 * C7868) *
               C106 +
           (C4326 * C1395 + C4099 * C1612 + C4327 * C3441 + C4100 * C3667 +
            C4328 * C7568 + C4101 * C7869) *
               C95) *
              C92212) *
         C92062 * C92110 * C92099) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C4326 * C107 + C4099 * C308 + C4327 * C805 + C4100 * C1022 +
             C4328 * C806 + C4101 * C1023) *
                C801 +
            (C4326 * C117 + C4099 * C314 + C4327 * C813 + C4100 * C1030 +
             C4328 * C822 + C4101 * C1031) *
                C92078) *
               C60959 +
           ((C4326 * C1389 + C4099 * C1606 + C4327 * C3431 + C4100 * C3661 +
             C4328 * C5772 + C4101 * C6042) *
                C801 +
            (C4326 * C1397 + C4099 * C1614 + C4327 * C3439 + C4100 * C3665 +
             C4328 * C5778 + C4101 * C6048) *
                C92078) *
               C92212) *
              C92062 * C92110 * C798 -
          (((C4328 * C8540 + C4101 * C8896 + C4327 * C5778 + C4100 * C6048 +
             C4326 * C3439 + C4099 * C3665) *
                C92078 +
            (C4328 * C8536 + C4101 * C8894 + C4327 * C5772 + C4100 * C6042 +
             C4326 * C3431 + C4099 * C3661) *
                C801) *
               C92212 +
           ((C4328 * C4886 + C4101 * C5222 + C4327 * C822 + C4100 * C1031 +
             C4326 * C813 + C4099 * C1030) *
                C92078 +
            (C4328 * C4882 + C4101 * C5218 + C4327 * C806 + C4100 * C1023 +
             C4326 * C805 + C4099 * C1022) *
                C801) *
               C60959) *
              C92062 * C92110 * C799 +
          (((C4326 * C806 + C4099 * C1023 + C4327 * C4882 + C4100 * C5218 +
             C4328 * C4883 + C4101 * C5219) *
                C801 +
            (C4326 * C822 + C4099 * C1031 + C4327 * C4886 + C4100 * C5222 +
             C4328 * C4891 + C4101 * C5223) *
                C92078) *
               C60959 +
           ((C4326 * C5772 + C4099 * C6042 + C4327 * C8536 + C4100 * C8894 +
             C4328 * C38955 + C4101 * C39215) *
                C801 +
            (C4326 * C5778 + C4099 * C6048 + C4327 * C8540 + C4100 * C8896 +
             C4328 * C38957 + C4101 * C39216) *
                C92078) *
               C92212) *
              C92062 * C92110 * C800)) /
            (p * q * std::sqrt(p + q));
    d2eeyy[74] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92137 * C308) * C181 +
             (C307 * C182 + C92137 * C394) * C92099) *
                C60959 +
            (C11423 + C11440) * C92212) *
               C31257 +
           ((C401 + C417) * C60959 + C13308 * C92212) * C31258 +
           C61260 * C31259) *
              C93 -
          (((C3021 + C3013) * C92212 + (C419 + C407) * C60959) * C31259 +
           (C23393 * C92212 + (C418 + C404) * C60959) * C31258 +
           (C13310 * C92212 + (C417 + C401) * C60959) * C31257) *
              C94 +
          (C61260 * C31257 +
           (C422 * C60959 + (C3013 + C3021) * C92212) * C31258 +
           ((C412 + C420) * C60959 +
            ((C307 * C2711 + C92137 * C2919) * C181 +
             (C307 * C2781 + C92137 * C3005) * C92099) *
                C92212) *
               C31259) *
              C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C307 * C107 + C92137 * C308) * C884 +
            (C307 * C182 + C92137 * C394) * C798 -
            (C307 * C805 + C92137 * C1022) * C885 -
            (C307 * C890 + C92137 * C1085) * C799 +
            (C307 * C806 + C92137 * C1023) * C886 +
            (C307 * C891 + C92137 * C1086) * C800) *
               C60959 +
           (C11327 * C884 + C11436 * C798 - C14200 * C885 - C14318 * C799 +
            (C307 * C5772 + C92137 * C6042) * C886 +
            (C307 * C5870 + C92137 * C6128) * C800) *
               C92212) *
              C31257 +
          ((C337 * C884 + C413 * C798 - C2212 * C885 - C2300 * C799 +
            (C307 * C807 + C92137 * C1024) * C886 +
            (C307 * C892 + C92137 * C1088) * C800) *
               C60959 +
           (C2934 * C884 + C3016 * C798 - C12183 * C885 - C12296 * C799 +
            (C307 * C5771 + C92137 * C6041) * C886 +
            (C307 * C5869 + C92137 * C6127) * C800) *
               C92212) *
              C31258 +
          ((C339 * C884 + C414 * C798 - C2214 * C885 - C2301 * C799 +
            (C307 * C808 + C92137 * C1025) * C886 +
            (C307 * C893 + C92137 * C1090) * C800) *
               C60959 +
           (C2936 * C884 + C3017 * C798 - C22311 * C885 - C22416 * C799 +
            (C307 * C7566 + C92137 * C7868) * C886 +
            (C307 * C7668 + C92137 * C7986) * C800) *
               C92212) *
              C31259) *
         C92078 * C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C4326 * C107 + C4099 * C308 + C4327 * C805 + C4100 * C1022 +
             C4328 * C806 + C4101 * C1023) *
                C181 +
            (C4326 * C182 + C4099 * C394 + C4327 * C890 + C4100 * C1085 +
             C4328 * C891 + C4101 * C1086) *
                C92099) *
               C60959 +
           ((C4326 * C1389 + C4099 * C1606 + C4327 * C3431 + C4100 * C3661 +
             C4328 * C5772 + C4101 * C6042) *
                C181 +
            (C4326 * C1471 + C4099 * C1672 + C4327 * C3513 + C4100 * C3735 +
             C4328 * C5870 + C4101 * C6128) *
                C92099) *
               C92212) *
              C92062 * C93 -
          (((C7996 + C7995 + C7994) * C92099 + (C7885 + C7884 + C7883) * C181) *
               C92212 +
           ((C4454 + C4453 + C4452) * C92099 + (C4354 + C4355 + C4356) * C181) *
               C60959) *
              C92062 * C94 +
          (((C4360 + C4361 + C4362) * C181 + (C4457 + C4456 + C4455) * C92099) *
               C60959 +
           ((C4326 * C1387 + C4099 * C1604 + C4327 * C3433 + C4100 * C3663 +
             C4328 * C7566 + C4101 * C7868) *
                C181 +
            (C4326 * C1469 + C4099 * C1670 + C4327 * C3515 + C4100 * C3737 +
             C4328 * C7668 + C4101 * C7986) *
                C92099) *
               C92212) *
              C92062 * C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C4326 * C107 + C4099 * C308 + C4327 * C805 + C4100 * C1022 +
            C4328 * C806 + C4101 * C1023) *
               C884 +
           (C4326 * C182 + C4099 * C394 + C4327 * C890 + C4100 * C1085 +
            C4328 * C891 + C4101 * C1086) *
               C798 -
           (C4328 * C4882 + C4101 * C5218 + C4327 * C806 + C4100 * C1023 +
            C4326 * C805 + C4099 * C1022) *
               C885 -
           (C4328 * C5012 + C4101 * C5299 + C4327 * C891 + C4100 * C1086 +
            C4326 * C890 + C4099 * C1085) *
               C799 +
           (C4326 * C806 + C4099 * C1023 + C4327 * C4882 + C4100 * C5218 +
            C4328 * C4883 + C4101 * C5219) *
               C886 +
           (C4326 * C891 + C4099 * C1086 + C4327 * C5012 + C4100 * C5299 +
            C4328 * C5014 + C4101 * C5300) *
               C800) *
              C60959 +
          ((C4326 * C1389 + C4099 * C1606 + C4327 * C3431 + C4100 * C3661 +
            C4328 * C5772 + C4101 * C6042) *
               C884 +
           (C4326 * C1471 + C4099 * C1672 + C4327 * C3513 + C4100 * C3735 +
            C4328 * C5870 + C4101 * C6128) *
               C798 -
           (C4328 * C8536 + C4101 * C8894 + C4327 * C5772 + C4100 * C6042 +
            C4326 * C3431 + C4099 * C3661) *
               C885 -
           (C4328 * C8666 + C4101 * C8996 + C4327 * C5870 + C4100 * C6128 +
            C4326 * C3513 + C4099 * C3735) *
               C799 +
           (C4326 * C5772 + C4099 * C6042 + C4327 * C8536 + C4100 * C8894 +
            C4328 * C38955 + C4101 * C39215) *
               C886 +
           (C4326 * C5870 + C4099 * C6128 + C4327 * C8666 + C4100 * C8996 +
            C4328 * C39049 + C4101 * C39283) *
               C800) *
              C92212) *
         C92062 * C92078 * C92110) /
            (p * q * std::sqrt(p + q));
    d2eeyz[74] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92137 * C308) * C244 +
             (C307 * C245 + C92137 * C474) * C92110) *
                C60959 +
            (C11327 * C244 + C11531 * C92110) * C92212) *
               C31257 +
           ((C481 + C497) * C60959 + (C9910 + C9911) * C92212) * C31258 +
           C61337 * C31259) *
              C92099 * C93 -
          (((C20197 + C20198) * C92212 + (C499 + C487) * C60959) * C31259 +
           ((C9918 + C9919) * C92212 + (C498 + C484) * C60959) * C31258 +
           ((C9911 + C9910) * C92212 + (C497 + C481) * C60959) * C31257) *
              C92099 * C94 +
          (C61337 * C31257 +
           (C502 * C60959 + (C20198 + C20197) * C92212) * C31258 +
           ((C492 + C500) * C60959 +
            ((C307 * C2711 + C92137 * C2919) * C244 +
             (C307 * C2851 + C92137 * C3087) * C92110) *
                C92212) *
               C31259) *
              C92099 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C307 * C107 + C92137 * C308) * C244 +
             (C307 * C245 + C92137 * C474) * C92110) *
                C60959 +
            (C11327 * C244 + C11531 * C92110) * C92212) *
               C31257 +
           ((C481 + C497) * C60959 + (C9910 + C9911) * C92212) * C31258 +
           C61337 * C31259) *
              C798 -
          (((C22520 + C22518) * C92212 + (C2386 + C2378) * C60959) * C31259 +
           ((C12408 + C12404) * C92212 + (C2387 + C2381) * C60959) * C31258 +
           ((C14426 * C92110 + C14200 * C244) * C92212 +
            ((C307 * C956 + C92137 * C1146) * C92110 +
             (C307 * C805 + C92137 * C1022) * C244) *
                C60959) *
               C31257) *
              C799 +
          ((((C307 * C806 + C92137 * C1023) * C244 +
             (C307 * C957 + C92137 * C1147) * C92110) *
                C60959 +
            ((C307 * C5772 + C92137 * C6042) * C244 +
             (C307 * C5958 + C92137 * C6207) * C92110) *
                C92212) *
               C31257 +
           (((C307 * C807 + C92137 * C1024) * C244 +
             (C307 * C958 + C92137 * C1148) * C92110) *
                C60959 +
            ((C307 * C5771 + C92137 * C6041) * C244 +
             (C307 * C5957 + C92137 * C6210) * C92110) *
                C92212) *
               C31258 +
           (((C307 * C808 + C92137 * C1025) * C244 +
             (C307 * C959 + C92137 * C1149) * C92110) *
                C60959 +
            ((C307 * C7566 + C92137 * C7868) * C244 +
             (C307 * C7768 + C92137 * C8094) * C92110) *
                C92212) *
               C31259) *
              C800) *
         C92078) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C4326 * C107 + C4099 * C308 + C4327 * C805 + C4100 * C1022 +
             C4328 * C806 + C4101 * C1023) *
                C244 +
            (C4326 * C245 + C4099 * C474 + C4327 * C956 + C4100 * C1146 +
             C4328 * C957 + C4101 * C1147) *
                C92110) *
               C60959 +
           ((C4326 * C1389 + C4099 * C1606 + C4327 * C3431 + C4100 * C3661 +
             C4328 * C5772 + C4101 * C6042) *
                C244 +
            (C4326 * C1540 + C4099 * C1727 + C4327 * C3587 + C4100 * C3805 +
             C4328 * C5958 + C4101 * C6207) *
                C92110) *
               C92212) *
              C92062 * C92099 * C93 -
          (((C8102 + C8103 + C8104) * C92110 + (C7885 + C7884 + C7883) * C244) *
               C92212 +
           ((C4546 + C4545 + C4544) * C92110 + (C4354 + C4355 + C4356) * C244) *
               C60959) *
              C92062 * C92099 * C94 +
          (((C4360 + C4361 + C4362) * C244 + (C4549 + C4548 + C4547) * C92110) *
               C60959 +
           ((C4326 * C1387 + C4099 * C1604 + C4327 * C3433 + C4100 * C3663 +
             C4328 * C7566 + C4101 * C7868) *
                C244 +
            (C4326 * C1538 + C4099 * C1731 + C4327 * C3589 + C4100 * C3807 +
             C4328 * C7768 + C4101 * C8094) *
                C92110) *
               C92212) *
              C92062 * C92099 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C4326 * C107 + C4099 * C308 + C4327 * C805 + C4100 * C1022 +
             C4328 * C806 + C4101 * C1023) *
                C244 +
            (C4326 * C245 + C4099 * C474 + C4327 * C956 + C4100 * C1146 +
             C4328 * C957 + C4101 * C1147) *
                C92110) *
               C60959 +
           ((C4326 * C1389 + C4099 * C1606 + C4327 * C3431 + C4100 * C3661 +
             C4328 * C5772 + C4101 * C6042) *
                C244 +
            (C4326 * C1540 + C4099 * C1727 + C4327 * C3587 + C4100 * C3805 +
             C4328 * C5958 + C4101 * C6207) *
                C92110) *
               C92212) *
              C92062 * C798 -
          (((C4328 * C8780 + C4101 * C9096 + C4327 * C5958 + C4100 * C6207 +
             C4326 * C3587 + C4099 * C3805) *
                C92110 +
            (C4328 * C8536 + C4101 * C8894 + C4327 * C5772 + C4100 * C6042 +
             C4326 * C3431 + C4099 * C3661) *
                C244) *
               C92212 +
           ((C4328 * C5114 + C4101 * C5378 + C4327 * C957 + C4100 * C1147 +
             C4326 * C956 + C4099 * C1146) *
                C92110 +
            (C4328 * C4882 + C4101 * C5218 + C4327 * C806 + C4100 * C1023 +
             C4326 * C805 + C4099 * C1022) *
                C244) *
               C60959) *
              C92062 * C799 +
          (((C4326 * C806 + C4099 * C1023 + C4327 * C4882 + C4100 * C5218 +
             C4328 * C4883 + C4101 * C5219) *
                C244 +
            (C4326 * C957 + C4099 * C1147 + C4327 * C5114 + C4100 * C5378 +
             C4328 * C5115 + C4101 * C5379) *
                C92110) *
               C60959 +
           ((C4326 * C5772 + C4099 * C6042 + C4327 * C8536 + C4100 * C8894 +
             C4328 * C38955 + C4101 * C39215) *
                C244 +
            (C4326 * C5958 + C4099 * C6207 + C4327 * C8780 + C4100 * C9096 +
             C4328 * C39126 + C4101 * C39350) *
                C92110) *
               C92212) *
              C92062 * C800) *
         C92078) /
            (p * q * std::sqrt(p + q));
    d2eezx[74] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C61411 * C107 + C60959 * C555 + C61412 * C1389 + C92212 * C1788) *
               C104 +
           (C61411 * C117 + C60959 * C561 + C61412 * C1397 + C92212 * C1796) *
               C93 -
           (C61438 + C61439) * C105 - (C61440 + C61441) * C94 + C61450 * C106 +
           C61451 * C95) *
              C31257 +
          ((C61439 + C61438) * C104 + (C61441 + C61440) * C93 -
           (C61443 + C61442) * C105 - (C61445 + C61444) * C94 +
           (C61446 + C61447) * C106 + (C61448 + C61449) * C95) *
              C31258 +
          (C61450 * C104 + C61451 * C93 - (C61447 + C61446) * C105 -
           (C61449 + C61448) * C94 +
           (C61411 * C111 + C60959 * C559 + C61412 * C2711 + C92212 * C3175) *
               C106 +
           (C61411 * C122 + C60959 * C565 + C61412 * C2713 + C92212 * C3176) *
               C95) *
              C31259) *
         C92137 * C92110 * C92099) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C61411 * C107 + C60959 * C555 + C61412 * C1389 + C92212 * C1788) *
                C801 +
            (C61411 * C117 + C60959 * C561 + C61412 * C1397 + C92212 * C1796) *
                C92078) *
               C31257 +
           ((C61439 + C61438) * C801 + (C61441 + C61440) * C92078) * C31258 +
           (C61450 * C801 + C61451 * C92078) * C31259) *
              C92137 * C92110 * C798 -
          (((C61412 * C3441 + C92212 * C3881 + C61411 * C811 + C60959 * C1210) *
                C92078 +
            (C61412 * C3433 + C92212 * C3877 + C61411 * C803 + C60959 * C1202) *
                C801) *
               C31259 +
           ((C61412 * C3440 + C92212 * C3880 + C61411 * C812 + C60959 * C1211) *
                C92078 +
            (C61412 * C3432 + C92212 * C3876 + C61411 * C804 + C60959 * C1203) *
                C801) *
               C31258 +
           ((C61412 * C3439 + C92212 * C3879 + C61411 * C813 + C60959 * C1212) *
                C92078 +
            (C61412 * C3431 + C92212 * C3875 + C61411 * C805 + C60959 * C1204) *
                C801) *
               C31257) *
              C92137 * C92110 * C799 +
          (((C61411 * C806 + C60959 * C1205 + C61412 * C5772 + C92212 * C6288) *
                C801 +
            (C61411 * C822 + C60959 * C1213 + C61412 * C5778 + C92212 * C6294) *
                C92078) *
               C31257 +
           ((C61411 * C807 + C60959 * C1206 + C61412 * C5771 + C92212 * C6287) *
                C801 +
            (C61411 * C823 + C60959 * C1214 + C61412 * C5777 + C92212 * C6293) *
                C92078) *
               C31258 +
           ((C61411 * C808 + C60959 * C1207 + C61412 * C7566 + C92212 * C8202) *
                C801 +
            (C61411 * C824 + C60959 * C1215 + C61412 * C7568 + C92212 * C8203) *
                C92078) *
               C31259) *
              C92137 * C92110 * C800)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C61411 * C107 + C60959 * C555 + C61412 * C1389 + C92212 * C1788) *
               C104 +
           (C61411 * C117 + C60959 * C561 + C61412 * C1397 + C92212 * C1796) *
               C93 -
           (C61438 + C61439) * C105 - (C61440 + C61441) * C94 + C61450 * C106 +
           C61451 * C95) *
              C92062 * C4099 +
          ((C61411 * C805 + C60959 * C1204 + C61412 * C3431 + C92212 * C3875) *
               C104 +
           (C61411 * C813 + C60959 * C1212 + C61412 * C3439 + C92212 * C3879) *
               C93 -
           (C63751 + C63750) * C105 - (C63753 + C63752) * C94 +
           (C63754 + C63755) * C106 + (C63756 + C63757) * C95) *
              C92062 * C4100 +
          ((C61411 * C806 + C60959 * C1205 + C61412 * C5772 + C92212 * C6288) *
               C104 +
           (C61411 * C822 + C60959 * C1213 + C61412 * C5778 + C92212 * C6294) *
               C93 -
           (C61412 * C5771 + C92212 * C6287 + C61411 * C807 + C60959 * C1206) *
               C105 -
           (C61412 * C5777 + C92212 * C6293 + C61411 * C823 + C60959 * C1214) *
               C94 +
           (C61411 * C808 + C60959 * C1207 + C61412 * C7566 + C92212 * C8202) *
               C106 +
           (C61411 * C824 + C60959 * C1215 + C61412 * C7568 + C92212 * C8203) *
               C95) *
              C92062 * C4101) *
         C92110 * C92099) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C61411 * C107 + C60959 * C555 + C61412 * C1389 + C92212 * C1788) *
                C801 +
            (C61411 * C117 + C60959 * C561 + C61412 * C1397 + C92212 * C1796) *
                C92078) *
               C92062 * C4099 +
           ((C67034 + C67035) * C801 + (C67036 + C67037) * C92078) * C92062 *
               C4100 +
           C67051 * C4101) *
              C92110 * C798 -
          (((C67042 + C67043) * C92078 + (C67044 + C67045) * C801) * C92062 *
               C4101 +
           ((C67041 + C67040) * C92078 + (C67039 + C67038) * C801) * C92062 *
               C4100 +
           ((C67037 + C67036) * C92078 + (C67035 + C67034) * C801) * C92062 *
               C4099) *
              C92110 * C799 +
          (C67051 * C4099 +
           ((C67045 + C67044) * C801 + (C67043 + C67042) * C92078) * C92062 *
               C4100 +
           ((C61411 * C4883 + C60959 * C5457 + C61412 * C38955 +
             C92212 * C39417) *
                C801 +
            (C61411 * C4891 + C60959 * C5461 + C61412 * C38957 +
             C92212 * C39418) *
                C92078) *
               C92062 * C4101) *
              C92110 * C800)) /
            (p * q * std::sqrt(p + q));
    d2eezy[74] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C61411 * C107 + C60959 * C555 + C61412 * C1389 + C92212 * C1788) *
                C181 +
            (C61411 * C182 + C60959 * C641 + C61412 * C1471 + C92212 * C1854) *
                C92099) *
               C31257 +
           ((C61439 + C61438) * C181 + (C61539 + C61540) * C92099) * C31258 +
           C61547 * C31259) *
              C92137 * C93 -
          (((C61543 + C61544) * C92099 + (C61447 + C61446) * C181) * C31259 +
           ((C61542 + C61541) * C92099 + (C61443 + C61442) * C181) * C31258 +
           ((C61540 + C61539) * C92099 + (C61438 + C61439) * C181) * C31257) *
              C92137 * C94 +
          (C61547 * C31257 +
           ((C61446 + C61447) * C181 + (C61544 + C61543) * C92099) * C31258 +
           ((C61411 * C111 + C60959 * C559 + C61412 * C2711 + C92212 * C3175) *
                C181 +
            (C61411 * C186 + C60959 * C645 + C61412 * C2781 + C92212 * C3261) *
                C92099) *
               C31259) *
              C92137 * C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C61411 * C107 + C60959 * C555 + C61412 * C1389 + C92212 * C1788) *
               C884 +
           (C61411 * C182 + C60959 * C641 + C61412 * C1471 + C92212 * C1854) *
               C798 -
           (C61412 * C3431 + C92212 * C3875 + C61411 * C805 + C60959 * C1204) *
               C885 -
           (C61412 * C3513 + C92212 * C3949 + C61411 * C890 + C60959 * C1267) *
               C799 +
           (C61411 * C806 + C60959 * C1205 + C61412 * C5772 + C92212 * C6288) *
               C886 +
           (C61411 * C891 + C60959 * C1268 + C61412 * C5870 + C92212 * C6374) *
               C800) *
              C31257 +
          ((C61439 + C61438) * C884 + (C61539 + C61540) * C798 -
           (C61412 * C3432 + C92212 * C3876 + C61411 * C804 + C60959 * C1203) *
               C885 -
           (C61412 * C3514 + C92212 * C3950 + C61411 * C889 + C60959 * C1269) *
               C799 +
           (C61411 * C807 + C60959 * C1206 + C61412 * C5771 + C92212 * C6287) *
               C886 +
           (C61411 * C892 + C60959 * C1270 + C61412 * C5869 + C92212 * C6373) *
               C800) *
              C31258 +
          (C61450 * C884 + C61545 * C798 -
           (C61412 * C3433 + C92212 * C3877 + C61411 * C803 + C60959 * C1202) *
               C885 -
           (C61412 * C3515 + C92212 * C3951 + C61411 * C888 + C60959 * C1271) *
               C799 +
           (C61411 * C808 + C60959 * C1207 + C61412 * C7566 + C92212 * C8202) *
               C886 +
           (C61411 * C893 + C60959 * C1272 + C61412 * C7668 + C92212 * C8314) *
               C800) *
              C31259) *
         C92137 * C92078 * C92110) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C61411 * C107 + C60959 * C555 + C61412 * C1389 + C92212 * C1788) *
                C181 +
            (C61411 * C182 + C60959 * C641 + C61412 * C1471 + C92212 * C1854) *
                C92099) *
               C92062 * C4099 +
           ((C61411 * C805 + C60959 * C1204 + C61412 * C3431 + C92212 * C3875) *
                C181 +
            (C61411 * C890 + C60959 * C1267 + C61412 * C3513 + C92212 * C3949) *
                C92099) *
               C92062 * C4100 +
           ((C61411 * C806 + C60959 * C1205 + C61412 * C5772 + C92212 * C6288) *
                C181 +
            (C61411 * C891 + C60959 * C1268 + C61412 * C5870 + C92212 * C6374) *
                C92099) *
               C92062 * C4101) *
              C93 -
          (((C61412 * C5869 + C92212 * C6373 + C61411 * C892 + C60959 * C1270) *
                C92099 +
            (C61412 * C5771 + C92212 * C6287 + C61411 * C807 + C60959 * C1206) *
                C181) *
               C92062 * C4101 +
           ((C63864 + C63865) * C92099 + (C63751 + C63750) * C181) * C92062 *
               C4100 +
           ((C61540 + C61539) * C92099 + (C61438 + C61439) * C181) * C92062 *
               C4099) *
              C94 +
          (C61547 * C92062 * C4099 +
           ((C63754 + C63755) * C181 + (C63867 + C63866) * C92099) * C92062 *
               C4100 +
           ((C61411 * C808 + C60959 * C1207 + C61412 * C7566 + C92212 * C8202) *
                C181 +
            (C61411 * C893 + C60959 * C1272 + C61412 * C7668 + C92212 * C8314) *
                C92099) *
               C92062 * C4101) *
              C95) *
         C92110) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C61411 * C107 + C60959 * C555 + C61412 * C1389 + C92212 * C1788) *
               C884 +
           (C61411 * C182 + C60959 * C641 + C61412 * C1471 + C92212 * C1854) *
               C798 -
           (C67035 + C67034) * C885 - (C67138 + C67139) * C799 + C67046 * C886 +
           C67144 * C800) *
              C92062 * C4099 +
          ((C67034 + C67035) * C884 + (C67139 + C67138) * C798 -
           (C67039 + C67038) * C885 - (C67141 + C67140) * C799 +
           (C67045 + C67044) * C886 + (C67142 + C67143) * C800) *
              C92062 * C4100 +
          (C67046 * C884 + C67144 * C798 - (C67044 + C67045) * C885 -
           (C67143 + C67142) * C799 +
           (C61411 * C4883 + C60959 * C5457 + C61412 * C38955 +
            C92212 * C39417) *
               C886 +
           (C61411 * C5014 + C60959 * C5580 + C61412 * C39049 +
            C92212 * C39493) *
               C800) *
              C92062 * C4101) *
         C92078 * C92110) /
            (p * q * std::sqrt(p + q));
    d2eezz[74] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C61411 * C107 + C60959 * C555 + C61412 * C1389 + C92212 * C1788) *
                C244 +
            (C61411 * C245 + C60959 * C719 + C61412 * C1540 + C92212 * C1909) *
                C92110) *
               C31257 +
           ((C61439 + C61438) * C244 + (C61635 + C61636) * C92110) * C31258 +
           C61643 * C31259) *
              C92137 * C92099 * C93 -
          (((C61639 + C61640) * C92110 + (C61447 + C61446) * C244) * C31259 +
           ((C61638 + C61637) * C92110 + (C61443 + C61442) * C244) * C31258 +
           ((C61636 + C61635) * C92110 + (C61438 + C61439) * C244) * C31257) *
              C92137 * C92099 * C94 +
          (C61643 * C31257 +
           ((C61446 + C61447) * C244 + (C61640 + C61639) * C92110) * C31258 +
           ((C61411 * C111 + C60959 * C559 + C61412 * C2711 + C92212 * C3175) *
                C244 +
            (C61411 * C249 + C60959 * C723 + C61412 * C2851 + C92212 * C3343) *
                C92110) *
               C31259) *
              C92137 * C92099 * C95)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C61411 * C107 + C60959 * C555 + C61412 * C1389 + C92212 * C1788) *
                C244 +
            (C61411 * C245 + C60959 * C719 + C61412 * C1540 + C92212 * C1909) *
                C92110) *
               C31257 +
           ((C61439 + C61438) * C244 + (C61635 + C61636) * C92110) * C31258 +
           C61643 * C31259) *
              C92137 * C798 -
          (((C61412 * C3589 + C92212 * C4021 + C61411 * C954 + C60959 * C1326) *
                C92110 +
            (C61412 * C3433 + C92212 * C3877 + C61411 * C803 + C60959 * C1202) *
                C244) *
               C31259 +
           ((C61412 * C3588 + C92212 * C4020 + C61411 * C955 + C60959 * C1327) *
                C92110 +
            (C61412 * C3432 + C92212 * C3876 + C61411 * C804 + C60959 * C1203) *
                C244) *
               C31258 +
           ((C61412 * C3587 + C92212 * C4019 + C61411 * C956 + C60959 * C1328) *
                C92110 +
            (C61412 * C3431 + C92212 * C3875 + C61411 * C805 + C60959 * C1204) *
                C244) *
               C31257) *
              C92137 * C799 +
          (((C61411 * C806 + C60959 * C1205 + C61412 * C5772 + C92212 * C6288) *
                C244 +
            (C61411 * C957 + C60959 * C1329 + C61412 * C5958 + C92212 * C6455) *
                C92110) *
               C31257 +
           ((C61411 * C807 + C60959 * C1206 + C61412 * C5771 + C92212 * C6287) *
                C244 +
            (C61411 * C958 + C60959 * C1330 + C61412 * C5957 + C92212 * C6457) *
                C92110) *
               C31258 +
           ((C61411 * C808 + C60959 * C1207 + C61412 * C7566 + C92212 * C8202) *
                C244 +
            (C61411 * C959 + C60959 * C1331 + C61412 * C7768 + C92212 * C8423) *
                C92110) *
               C31259) *
              C92137 * C800) *
         C92078) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C61411 * C107 + C60959 * C555 + C61412 * C1389 + C92212 * C1788) *
                C244 +
            (C61411 * C245 + C60959 * C719 + C61412 * C1540 + C92212 * C1909) *
                C92110) *
               C92062 * C4099 +
           ((C61411 * C805 + C60959 * C1204 + C61412 * C3431 + C92212 * C3875) *
                C244 +
            (C61411 * C956 + C60959 * C1328 + C61412 * C3587 + C92212 * C4019) *
                C92110) *
               C92062 * C4100 +
           ((C61411 * C806 + C60959 * C1205 + C61412 * C5772 + C92212 * C6288) *
                C244 +
            (C61411 * C957 + C60959 * C1329 + C61412 * C5958 + C92212 * C6455) *
                C92110) *
               C92062 * C4101) *
              C92099 * C93 -
          (((C61412 * C5957 + C92212 * C6457 + C61411 * C958 + C60959 * C1330) *
                C92110 +
            (C61412 * C5771 + C92212 * C6287 + C61411 * C807 + C60959 * C1206) *
                C244) *
               C92062 * C4101 +
           ((C63976 + C63977) * C92110 + (C63751 + C63750) * C244) * C92062 *
               C4100 +
           ((C61636 + C61635) * C92110 + (C61438 + C61439) * C244) * C92062 *
               C4099) *
              C92099 * C94 +
          (C61643 * C92062 * C4099 +
           ((C63754 + C63755) * C244 + (C63975 + C63974) * C92110) * C92062 *
               C4100 +
           ((C61411 * C808 + C60959 * C1207 + C61412 * C7566 + C92212 * C8202) *
                C244 +
            (C61411 * C959 + C60959 * C1331 + C61412 * C7768 + C92212 * C8423) *
                C92110) *
               C92062 * C4101) *
              C92099 * C95)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C61411 * C107 + C60959 * C555 + C61412 * C1389 + C92212 * C1788) *
                C244 +
            (C61411 * C245 + C60959 * C719 + C61412 * C1540 + C92212 * C1909) *
                C92110) *
               C92062 * C4099 +
           ((C67034 + C67035) * C244 + (C67232 + C67233) * C92110) * C92062 *
               C4100 +
           C67241 * C4101) *
              C798 -
          (((C67236 + C67237) * C92110 + (C67044 + C67045) * C244) * C92062 *
               C4101 +
           ((C67235 + C67234) * C92110 + (C67039 + C67038) * C244) * C92062 *
               C4100 +
           ((C67233 + C67232) * C92110 + (C67035 + C67034) * C244) * C92062 *
               C4099) *
              C799 +
          (C67241 * C4099 +
           ((C67045 + C67044) * C244 + (C67237 + C67236) * C92110) * C92062 *
               C4100 +
           ((C61411 * C4883 + C60959 * C5457 + C61412 * C38955 +
             C92212 * C39417) *
                C244 +
            (C61411 * C5115 + C60959 * C5670 + C61412 * C39126 +
             C92212 * C39563) *
                C92110) *
               C92062 * C4101) *
              C800) *
         C92078) /
            (p * q * std::sqrt(p + q));
}
