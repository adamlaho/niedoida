/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "gto_d2_kit/d2_ee_ppdd_AA_xx.hpp"
#include <cmath>
/*

*/
#pragma GCC optimize("O0")
namespace {
    const double Pi = M_PI;
}
#pragma GCC optimize("O0")

void second_derivative_ee_1122_11_11(const double ae,
                                     const double xA,
                                     const double yA,
                                     const double zA,
                                     const double be,
                                     const double xB,
                                     const double yB,
                                     const double zB,
                                     const double ce,
                                     const double xC,
                                     const double yC,
                                     const double zC,
                                     const double de,
                                     const double xD,
                                     const double yD,
                                     const double zD,
                                     const double* const bs,
                                     double* const d2ee)
{
    const double p = ae + be;
    const double q = ce + de;
    const double xP = (ae * xA + be * xB) / p;
    const double yP = (ae * yA + be * yB) / p;
    const double zP = (ae * zA + be * zB) / p;
    const double xQ = (ce * xC + de * xD) / q;
    const double yQ = (ce * yC + de * yD) / q;
    const double zQ = (ce * zC + de * zD) / q;
    const double C46774 = ae * be;
    const double C46773 = xA - xB;
    const double C46772 = ae + be;
    const double C46771 = 0 * be;
    const double C46822 = p + q;
    const double C46821 = p * q;
    const double C46827 = xP - xQ;
    const double C46826 = bs[2];
    const double C46834 = std::pow(ae, 2);
    const double C46832 = bs[3];
    const double C46845 = bs[4];
    const double C46866 = bs[5];
    const double C46899 = bs[6];
    const double C46945 = bs[7];
    const double C47000 = yP - yQ;
    const double C47059 = zP - zQ;
    const double C119 = bs[0];
    const double C47526 = ce + de;
    const double C47525 = ce * de;
    const double C47524 = xC - xD;
    const double C47558 = yC - yD;
    const double C47576 = zC - zD;
    const double C47746 = yA - yB;
    const double C47751 = zA - zB;
    const double C46777 = 2 * C46774;
    const double C46776 = C46774 * C46773;
    const double C47504 = std::pow(C46773, 2);
    const double C47802 = C46773 * be;
    const double C47801 = C46773 * ae;
    const double C46775 = std::pow(C46772, 2);
    const double C47513 = 2 * C46772;
    const double C46823 = 2 * C46821;
    const double C46835 = C46827 * ae;
    const double C46831 = std::pow(C46827, 2);
    const double C47007 = std::pow(C47000, 2);
    const double C47066 = std::pow(C47059, 2);
    const double C47530 = 2 * C47526;
    const double C47529 = std::pow(C47526, 2);
    const double C47531 = C47524 * de;
    const double C47528 = C47524 * ce;
    const double C47527 = std::pow(C47524, 2);
    const double C47559 = std::pow(C47558, 2);
    const double C47618 = C47558 * de;
    const double C47616 = C47558 * ce;
    const double C47577 = std::pow(C47576, 2);
    const double C47660 = C47576 * de;
    const double C47658 = C47576 * ce;
    const double C47766 = std::pow(C47746, 2);
    const double C47836 = C47746 * be;
    const double C47834 = C47746 * ae;
    const double C47781 = std::pow(C47751, 2);
    const double C47837 = C47751 * be;
    const double C47835 = C47751 * ae;
    const double C47505 = C47504 * C46774;
    const double C46779 = 2 * C46775;
    const double C47803 = std::pow(C47513, -1);
    const double C46825 = C46823 / C46822;
    const double C133 =
        ((std::pow(xP - xQ, 2) * bs[2] * std::pow(C46823 / C46822, 2) -
          (bs[1] * C46823) / C46822) *
         std::pow(ae, 2)) /
        C46775;
    const double C120 = -(C46827 * bs[1] * C46823) / C46822;
    const double C273 = -(C47000 * bs[1] * C46823) / C46822;
    const double C434 = -(C47059 * bs[1] * C46823) / C46822;
    const double C46837 = C46832 * C46835;
    const double C46848 = C46845 * C46835;
    const double C46871 = C46866 * C46835;
    const double C46907 = C46899 * C46835;
    const double C46956 = C46945 * C46835;
    const double C126 = (-(bs[1] * C46835 * C46823) / C46822) / C46772;
    const double C46847 = C46831 * C46845;
    const double C46870 = C46831 * C46866;
    const double C46906 = C46831 * C46899;
    const double C46955 = C46831 * C46945;
    const double C47543 = std::pow(C47530, -1);
    const double C47811 = std::pow(C47530, -2);
    const double C47544 = 2 * C47529;
    const double C47815 = C47529 * C47530;
    const double C47814 = 4 * C47529;
    const double C47804 = std::pow(C47528, 2);
    const double C47532 = C47527 * C47525;
    const double C47560 = C47559 * C47525;
    const double C47816 = std::pow(C47616, 2);
    const double C47578 = C47577 * C47525;
    const double C47818 = std::pow(C47658, 2);
    const double C47767 = C47766 * C46774;
    const double C47782 = C47781 * C46774;
    const double C47506 = C47505 / C46772;
    const double C46828 = std::pow(C46825, 2);
    const double C46833 = -C46825;
    const double C46846 = std::pow(C46825, 4);
    const double C46900 = std::pow(C46825, 6);
    const double C47849 = 4 * C47815;
    const double C47848 = C47526 * C47814;
    const double C47533 = C47532 / C47526;
    const double C47561 = C47560 / C47526;
    const double C47579 = C47578 / C47526;
    const double C47768 = C47767 / C46772;
    const double C47783 = C47782 / C46772;
    const double C47507 = -C47506;
    const double C46830 = C46826 * C46828;
    const double C134 = (2 * ae * C46828 * C46826 * C46827 * ae +
                         C46827 *
                             (C46826 * C46828 + std::pow(C46827, 2) * bs[3] *
                                                    std::pow(-C46825, 3)) *
                             std::pow(ae, 2)) /
                        C46775;
    const double C127 = (C46827 * C46828 * C46826 * C46835) / C46772 -
                        (ae * bs[1] * C46823) / (C46822 * C46772);
    const double C283 = (C47000 * C46828 * C46826 * C46835) / C46772;
    const double C444 = (C47059 * C46828 * C46826 * C46835) / C46772;
    const double C46836 = std::pow(C46833, 3);
    const double C46867 = std::pow(C46833, 5);
    const double C46946 = std::pow(C46833, 7);
    const double C46852 = C46846 * C46848;
    const double C46851 = C46847 * C46846;
    const double C46865 = C46845 * C46846;
    const double C46912 = C46900 * C46907;
    const double C46911 = C46906 * C46900;
    const double C46944 = C46899 * C46900;
    const double C47534 = -C47533;
    const double C47562 = -C47561;
    const double C47580 = -C47579;
    const double C47769 = -C47768;
    const double C47784 = -C47783;
    const double C47508 = std::exp(C47507);
    const double C46838 = C46830 * ae;
    const double C121 = C46830 * C46831 - (bs[1] * C46823) / C46822;
    const double C272 = C47000 * C46827 * C46830;
    const double C274 = C46830 * C47007 - (bs[1] * C46823) / C46822;
    const double C433 = C47059 * C46827 * C46830;
    const double C435 = C46830 * C47066 - (bs[1] * C46823) / C46822;
    const double C842 = C47059 * C47000 * C46830;
    const double C46839 = C46836 * C46837;
    const double C46844 = C46832 * C46836;
    const double C293 =
        (C47000 * (C46830 + C46831 * C46832 * C46836) * C46834) / C46775;
    const double C454 =
        (C47059 * (C46830 + C46831 * C46832 * C46836) * C46834) / C46775;
    const double C46876 = C46867 * C46871;
    const double C46875 = C46870 * C46867;
    const double C46898 = C46866 * C46867;
    const double C46962 = C46946 * C46956;
    const double C46961 = C46955 * C46946;
    const double C46855 = C46827 * C46852;
    const double C46864 = ae * C46852;
    const double C47357 = C47000 * C46852;
    const double C46874 = C46865 * C46831;
    const double C46873 = C46827 * C46865;
    const double C46872 = C46865 * ae;
    const double C47460 = C46865 * C47007;
    const double C47470 = C47000 * C46865;
    const double C47476 = C46865 * C47066;
    const double C47496 = C47059 * C46865;
    const double C46916 = C46827 * C46912;
    const double C46943 = ae * C46912;
    const double C47041 = C46912 * C47007;
    const double C47100 = C46912 * C47066;
    const double C47119 = C47000 * C46912;
    const double C47138 = C47059 * C46912;
    const double C46959 = C46944 * C46831;
    const double C46958 = C46827 * C46944;
    const double C46957 = C46944 * ae;
    const double C47535 = std::exp(C47534);
    const double C47563 = std::exp(C47562);
    const double C47581 = std::exp(C47580);
    const double C47770 = std::exp(C47769);
    const double C47785 = std::exp(C47784);
    const double C46778 = C46776 * C47508;
    const double C47839 = C47803 * C47508;
    const double C47838 = C47508 * C47801;
    const double C4617 = -(C47508 * C47802) / C46772;
    const double C46840 = C46827 * C46839;
    const double C284 = (C46828 * C46826 * C46835 + C46839 * C47007) / C46772;
    const double C445 = (C46828 * C46826 * C46835 + C46839 * C47066) / C46772;
    const double C847 = (C47059 * C47000 * C46839) / C46772;
    const double C1058 =
        (2 * C47000 * C46839 + C47000 * (C46839 + C46852 * C47007)) / C46772;
    const double C1195 = (C47000 * C46839 + C47000 * C46852 * C47066) / C46772;
    const double C1198 = (C47059 * (C46839 + C46852 * C47007)) / C46772;
    const double C1890 =
        (2 * C47059 * C46839 + C47059 * (C46839 + C46852 * C47066)) / C46772;
    const double C46850 = C46827 * C46844;
    const double C46849 = C46844 * ae;
    const double C46854 = C46844 + C46851;
    const double C47454 = C47000 * C46844;
    const double C122 =
        2 * C46827 * C46830 + C46827 * (C46830 + C46844 * C46831);
    const double C271 = C47000 * (C46830 + C46844 * C46831);
    const double C432 = C47059 * (C46830 + C46844 * C46831);
    const double C1052 =
        2 * C47000 * C46830 + C47000 * (C46830 + C46844 * C47007);
    const double C1053 =
        3 * (C46830 + C46844 * C47007) +
        C47000 * (2 * C47000 * C46844 + C47000 * (C46844 + C46865 * C47007));
    const double C1186 = C47000 * C46830 + C47000 * C46844 * C47066;
    const double C1189 = C47059 * (C46830 + C46844 * C47007);
    const double C1190 =
        C46830 + C46844 * C47007 + (C46844 + C46865 * C47007) * C47066;
    const double C1580 =
        C47059 * (2 * C47000 * C46844 + C47000 * (C46844 + C46865 * C47007));
    const double C1884 =
        2 * C47059 * C46830 + C47059 * (C46830 + C46844 * C47066);
    const double C1885 =
        3 * (C46830 + C46844 * C47066) +
        C47059 * (2 * C47059 * C46844 + C47059 * (C46844 + C46865 * C47066));
    const double C21838 = C47508 * C293;
    const double C26403 = C47508 * C454;
    const double C46880 = C46827 * C46876;
    const double C46897 = ae * C46876;
    const double C47028 = C47000 * C46876;
    const double C47087 = C47059 * C46876;
    const double C47361 = C46876 * C47007;
    const double C47373 = C46876 * C47066;
    const double C1059 =
        (3 * (C46839 + C46852 * C47007) +
         C47000 * (2 * C47000 * C46852 + C47000 * (C46852 + C46876 * C47007))) /
        C46772;
    const double C1199 =
        (C46839 + C46852 * C47007 + (C46852 + C46876 * C47007) * C47066) /
        C46772;
    const double C1583 =
        (C47059 * (2 * C47000 * C46852 + C47000 * (C46852 + C46876 * C47007))) /
        C46772;
    const double C1891 =
        (3 * (C46839 + C46852 * C47066) +
         C47059 * (2 * C47059 * C46852 + C47059 * (C46852 + C46876 * C47066))) /
        C46772;
    const double C46879 = C46865 + C46875;
    const double C46910 = C46898 * C46831;
    const double C46909 = C46827 * C46898;
    const double C46908 = C46898 * ae;
    const double C46915 = C46898 + C46911;
    const double C47483 = C46898 * C47007;
    const double C47492 = C47000 * C46898;
    const double C47497 = C46898 * C47066;
    const double C46966 = C46827 * C46962;
    const double C46965 = C46944 + C46961;
    const double C46869 = 2 * C46864;
    const double C46878 = C46844 + C46874;
    const double C46877 = C46873 * ae;
    const double C46903 = 2 * C46873;
    const double C47456 = C47000 * C46873;
    const double C47461 = C46844 + C47460;
    const double C47482 = 2 * C47470;
    const double C47477 = C46844 + C47476;
    const double C47498 = 2 * C47496;
    const double C46954 = 2 * C46943;
    const double C47046 = C46876 + C47041;
    const double C47105 = C46876 + C47100;
    const double C47126 = ae * C47119;
    const double C47167 = C47059 * C47119;
    const double C47385 = C47119 * C47066;
    const double C47145 = ae * C47138;
    const double C46964 = C46898 + C46959;
    const double C46963 = C46958 * ae;
    const double C47537 = C47535 * C47528;
    const double C47536 = C47535 / C47530;
    const double C47546 = C47543 * C47535;
    const double C47807 = C47535 * C47531;
    const double C47846 = C47811 * C47535;
    const double C47840 = C47535 * C47804;
    const double C47617 = C47563 / C47530;
    const double C47619 = C47563 * C47616;
    const double C47626 = C47543 * C47563;
    const double C47822 = C47563 * C47618;
    const double C47852 = C47811 * C47563;
    const double C47850 = C47563 * C47816;
    const double C47659 = C47581 / C47530;
    const double C47661 = C47581 * C47658;
    const double C47668 = C47543 * C47581;
    const double C47828 = C47581 * C47660;
    const double C47855 = C47811 * C47581;
    const double C47853 = C47581 * C47818;
    const double C47870 = C47803 * C47770;
    const double C47869 = C47770 * C47834;
    const double C15971 = -(C47770 * C47836) / C46772;
    const double C47872 = C47803 * C47785;
    const double C47871 = C47785 * C47835;
    const double C31666 = -(C47785 * C47837) / C46772;
    const double C46780 = 2 * C46778;
    const double C118 = ((0 * ae) / C46772 - C46778 / C46775) / (2 * C46772) -
                        (0 * be) / C46772;
    const double C15976 = (0 * ae) / C46772 - C46778 / C46775;
    const double C103 = C47839 / C47513;
    const double C101 = C47508 / C47513 - (C47838 * C47802) / C46775;
    const double C102 = C47838 / C46779 - (C47839 * C47802) / C46772;
    const double C15969 = C47838 / C46772;
    const double C4793 = C4617 * C293;
    const double C10701 = C4617 * C454;
    const double C46841 = C46840 + C46838;
    const double C46853 = C46850 * ae;
    const double C275 = C46827 * C46830 + C46850 * C47007;
    const double C436 = C46827 * C46830 + C46850 * C47066;
    const double C843 = C47059 * C47000 * C46850;
    const double C1051 =
        2 * C47000 * C46850 + C47000 * (C46850 + C46873 * C47007);
    const double C1185 = C47000 * C46850 + C47000 * C46873 * C47066;
    const double C1188 = C47059 * (C46850 + C46873 * C47007);
    const double C1883 =
        2 * C47059 * C46850 + C47059 * (C46850 + C46873 * C47066);
    const double C46857 = C46855 + C46849;
    const double C46856 = C46854 * C46834;
    const double C2264 =
        2 * C47059 * C47454 + C47059 * (C47454 + C47000 * C46865 * C47066);
    const double C6855 =
        3 * (C47454 + C47470 * C47066) +
        C47059 * (2 * C47059 * C47470 +
                  C47059 * (C47470 + C47000 * C46898 * C47066));
    const double C46883 = C46880 + C46872;
    const double C46905 = 2 * C46897;
    const double C47033 = ae * C47028;
    const double C47377 = 2 * C47028;
    const double C2267 =
        (2 * C47059 * C47357 + C47059 * (C47357 + C47028 * C47066)) / C46772;
    const double C6857 =
        (3 * (C47357 + C47028 * C47066) +
         C47059 * (2 * C47059 * C47028 + C47059 * (C47028 + C47119 * C47066))) /
        C46772;
    const double C47092 = ae * C47087;
    const double C47388 = 2 * C47087;
    const double C47362 = C46852 + C47361;
    const double C47374 = C46852 + C47373;
    const double C46882 = C46879 * C46834;
    const double C46914 = C46865 + C46910;
    const double C46913 = C46909 * ae;
    const double C46950 = 2 * C46909;
    const double C47463 = C46909 * C47007;
    const double C47472 = C47000 * C46909;
    const double C47479 = C46909 * C47066;
    const double C1054 =
        3 * (C46850 + C46873 * C47007) +
        C47000 * (2 * C47000 * C46873 + C47000 * (C46873 + C46909 * C47007));
    const double C1191 =
        C46850 + C46873 * C47007 + (C46873 + C46909 * C47007) * C47066;
    const double C1581 =
        C47059 * (2 * C47000 * C46873 + C47000 * (C46873 + C46909 * C47007));
    const double C1886 =
        3 * (C46850 + C46873 * C47066) +
        C47059 * (2 * C47059 * C46873 + C47059 * (C46873 + C46909 * C47066));
    const double C46920 = C46916 + C46908;
    const double C46919 = C46915 * C46834;
    const double C47484 = C46865 + C47483;
    const double C47493 = C47492 * C47066;
    const double C47499 = C46865 + C47497;
    const double C46970 = C46966 + C46957;
    const double C46969 = C46965 * C46834;
    const double C46881 = C46878 * ae;
    const double C123 = 3 * (C46830 + C46844 * C46831) +
                        C46827 * (2 * C46850 + C46827 * C46878);
    const double C276 = C46830 + C46844 * C46831 + C46878 * C47007;
    const double C277 = C47000 * (2 * C46850 + C46827 * C46878);
    const double C437 = C46830 + C46844 * C46831 + C46878 * C47066;
    const double C438 = C47059 * (2 * C46850 + C46827 * C46878);
    const double C844 = C47059 * C47000 * C46878;
    const double C2265 =
        2 * C47059 * C47456 + C47059 * (C47456 + C47000 * C46909 * C47066);
    const double C5767 =
        4 * (2 * C47454 + C47000 * C47461) +
        C47000 * (3 * C47461 + C47000 * (2 * C47000 * C46865 +
                                         C47000 * (C46865 + C46898 * C47007)));
    const double C5943 =
        2 * C47454 + C47000 * C47461 +
        (2 * C47000 * C46865 + C47000 * (C46865 + C46898 * C47007)) * C47066;
    const double C6463 =
        C47059 * (3 * C47461 + C47000 * (2 * C47000 * C46865 +
                                         C47000 * (C46865 + C46898 * C47007)));
    const double C7339 =
        2 * C47059 * C47461 +
        C47059 * (C47461 + (C46865 + C46898 * C47007) * C47066);
    const double C12429 =
        4 * (2 * C47059 * C46844 + C47059 * C47477) +
        C47059 * (3 * C47477 + C47059 * (2 * C47059 * C46865 +
                                         C47059 * (C46865 + C46898 * C47066)));
    const double C47051 = ae * C47046;
    const double C47378 = C47000 * C47046;
    const double C47110 = ae * C47105;
    const double C47389 = C47059 * C47105;
    const double C47132 = 2 * C47126;
    const double C47172 = ae * C47167;
    const double C47386 = C47028 + C47385;
    const double C47151 = 2 * C47145;
    const double C46968 = C46827 * C46964;
    const double C46967 = C46964 * ae;
    const double C47538 = C47537 * C47531;
    const double C47545 = C47537 / C47544;
    const double C47808 = C47543 * C47537;
    const double C47806 = C47537 / C47526;
    const double C268 = (C47535 * std::pow(C47531, 2)) / C47529 + C47536;
    const double C47547 = C47546 * C47531;
    const double C47812 = C47528 * C47546;
    const double C47810 = 2 * C47546;
    const double C47856 = C47546 / C47814;
    const double C112 = C47546 / C47849;
    const double C2745 = C47546 / C47530;
    const double C47842 = C47807 / C47526;
    const double C269 = (-2 * C47543 * C47807) / C47526;
    const double C47873 = C47840 / C47529;
    const double C976 = (C47563 * std::pow(C47618, 2)) / C47529 + C47617;
    const double C47620 = C47619 * C47618;
    const double C47625 = C47619 / C47544;
    const double C47820 = C47619 / C47526;
    const double C47817 = C47543 * C47619;
    const double C47627 = C47626 * C47618;
    const double C47826 = C47616 * C47626;
    const double C47825 = 2 * C47626;
    const double C47862 = C47626 / C47814;
    const double C1048 = C47626 / C47849;
    const double C2742 = C47626 / C47530;
    const double C47858 = C47822 / C47526;
    const double C977 = (-2 * C47543 * C47822) / C47526;
    const double C47878 = C47850 / C47529;
    const double C1702 = (C47581 * std::pow(C47660, 2)) / C47529 + C47659;
    const double C47662 = C47661 * C47660;
    const double C47667 = C47661 / C47544;
    const double C47821 = C47661 / C47526;
    const double C47819 = C47543 * C47661;
    const double C47669 = C47668 * C47660;
    const double C47832 = C47658 * C47668;
    const double C47831 = 2 * C47668;
    const double C47868 = C47668 / C47814;
    const double C1881 = C47668 / C47849;
    const double C3644 = C47668 / C47530;
    const double C47864 = C47828 / C47526;
    const double C1703 = (-2 * C47543 * C47828) / C47526;
    const double C47880 = C47853 / C47529;
    const double C21708 = C47870 / C47513;
    const double C4619 = C47869 / C46772;
    const double C21706 = C47770 / C47513 - (C47869 * C47836) / C46775;
    const double C21707 = C47869 / C46779 - (C47870 * C47836) / C46772;
    const double C42696 = C47872 / C47513;
    const double C10403 = C47871 / C46772;
    const double C42694 = C47785 / C47513 - (C47871 * C47837) / C46775;
    const double C42695 = C47871 / C46779 - (C47872 * C47837) / C46772;
    const double C46781 = C46773 * C46780;
    const double C4624 = (-C46780 / C46772) / (2 * C46772) - (0 * be) / C46772;
    const double C21710 = -C46780 / C46772;
    const double C15979 = C15976 * C127;
    const double C16145 = C15969 * C293;
    const double C31964 = C15969 * C454;
    const double C46842 = ae * C46841;
    const double C128 =
        (C46828 * C46826 * C46835 + C46827 * C46841 + C46827 * C46830 * ae) /
        C46772;
    const double C282 = (C47000 * C46841) / C46772;
    const double C443 = (C47059 * C46841) / C46772;
    const double C46859 = ae * C46857;
    const double C46858 = C46827 * C46857;
    const double C46868 = 2 * C46857;
    const double C47001 = C47000 * C46857;
    const double C47060 = C47059 * C46857;
    const double C285 = (C46841 + C46857 * C47007) / C46772;
    const double C446 = (C46841 + C46857 * C47066) / C46772;
    const double C292 =
        (2 * ae * C47000 * C46839 + C46827 * C47000 * C46856) / C46775;
    const double C294 = ((C46830 + C46831 * C46832 * C46836) * C46834 +
                         C46856 * std::pow(C47000, 2)) /
                        C46775;
    const double C453 =
        (2 * ae * C47059 * C46839 + C46827 * C47059 * C46856) / C46775;
    const double C455 = ((C46830 + C46831 * C46832 * C46836) * C46834 +
                         C46856 * std::pow(C47059, 2)) /
                        C46775;
    const double C852 = (C47059 * C47000 * C46856) / C46775;
    const double C46886 = ae * C46883;
    const double C46885 = C46827 * C46883;
    const double C46902 = 2 * C46883;
    const double C47009 = C46883 * C47007;
    const double C47015 = C47000 * C46883;
    const double C47068 = C46883 * C47066;
    const double C47074 = C47059 * C46883;
    const double C47038 = 2 * C47033;
    const double C47097 = 2 * C47092;
    const double C5769 =
        (4 * (2 * C47357 + C47000 * C47362) +
         C47000 * (3 * C47362 + C47000 * (2 * C47028 + C47000 * C47046))) /
        C46772;
    const double C5945 = (2 * C47357 + C47000 * C47362 +
                          (2 * C47028 + C47000 * C47046) * C47066) /
                         C46772;
    const double C6465 =
        (C47059 * (3 * C47362 + C47000 * (2 * C47028 + C47000 * C47046))) /
        C46772;
    const double C7341 =
        (2 * C47059 * C47362 + C47059 * (C47362 + C47046 * C47066)) / C46772;
    const double C23399 =
        (3 * (C47362 + C47046 * C47066) +
         C47059 * (2 * C47059 * C47046 +
                   C47059 * (C47046 + (C46912 + C46962 * C47007) * C47066))) /
        C46772;
    const double C12431 =
        (4 * (2 * C47059 * C46852 + C47059 * C47374) +
         C47059 * (3 * C47374 + C47059 * (2 * C47087 + C47059 * C47105))) /
        C46772;
    const double C46884 = C46827 * C46882;
    const double C47013 = C47000 * C46882;
    const double C47072 = C47059 * C46882;
    const double C295 = (2 * ae * (C46839 + C46852 * C47007) +
                         C46827 * (C46856 + C46882 * C47007)) /
                        C46775;
    const double C456 = (2 * ae * (C46839 + C46852 * C47066) +
                         C46827 * (C46856 + C46882 * C47066)) /
                        C46775;
    const double C1064 =
        (2 * C47000 * C46856 + C47000 * (C46856 + C46882 * C47007)) / C46775;
    const double C1207 = (C47059 * (C46856 + C46882 * C47007)) / C46775;
    const double C1896 =
        (2 * C47059 * C46856 + C47059 * (C46856 + C46882 * C47066)) / C46775;
    const double C46918 = C46827 * C46914;
    const double C46917 = C46914 * ae;
    const double C46951 = 3 * C46914;
    const double C47458 = C47000 * C46914;
    const double C1050 =
        2 * C47000 * C46878 + C47000 * (C46878 + C46914 * C47007);
    const double C1055 =
        3 * (C46878 + C46914 * C47007) +
        C47000 * (2 * C47000 * C46914 + C47000 * (C46914 + C46964 * C47007));
    const double C1184 = C47000 * C46878 + C47000 * C46914 * C47066;
    const double C1187 = C47059 * (C46878 + C46914 * C47007);
    const double C1192 =
        C46878 + C46914 * C47007 + (C46914 + C46964 * C47007) * C47066;
    const double C1582 =
        C47059 * (2 * C47000 * C46914 + C47000 * (C46914 + C46964 * C47007));
    const double C1882 =
        2 * C47059 * C46878 + C47059 * (C46878 + C46914 * C47066);
    const double C1887 =
        3 * (C46878 + C46914 * C47066) +
        C47059 * (2 * C47059 * C46914 + C47059 * (C46914 + C46964 * C47066));
    const double C47464 = C46873 + C47463;
    const double C6856 =
        3 * (C47456 + C47472 * C47066) +
        C47059 * (2 * C47059 * C47472 +
                  C47059 * (C47472 + C47000 * C46958 * C47066));
    const double C47480 = C46873 + C47479;
    const double C46925 = ae * C46920;
    const double C46923 = C46827 * C46920;
    const double C46949 = 2 * C46920;
    const double C47021 = C46920 * C47007;
    const double C47032 = C47000 * C46920;
    const double C47080 = C46920 * C47066;
    const double C47091 = C47059 * C46920;
    const double C46922 = C46827 * C46919;
    const double C47019 = C46919 * C47007;
    const double C47029 = C47000 * C46919;
    const double C47078 = C46919 * C47066;
    const double C47088 = C47059 * C46919;
    const double C47485 = C47000 * C47484;
    const double C23398 =
        3 * (C47461 + C47484 * C47066) +
        C47059 * (2 * C47059 * C47484 +
                  C47059 * (C47484 + (C46898 + C46944 * C47007) * C47066));
    const double C47494 = C47470 + C47493;
    const double C47500 = C47059 * C47499;
    const double C46976 = ae * C46970;
    const double C46973 = C46827 * C46970;
    const double C47045 = C46970 * C47007;
    const double C47104 = C46970 * C47066;
    const double C47124 = C47000 * C46970;
    const double C47143 = C47059 * C46970;
    const double C46972 = C46827 * C46969;
    const double C47042 = C46969 * C47007;
    const double C47101 = C46969 * C47066;
    const double C47120 = C47000 * C46969;
    const double C47139 = C47059 * C46969;
    const double C47056 = 2 * C47051;
    const double C47379 = C47377 + C47378;
    const double C47115 = 2 * C47110;
    const double C47390 = C47388 + C47389;
    const double C47177 = 2 * C47172;
    const double C28131 =
        (4 * (2 * C47059 * C47028 + C47059 * C47386) +
         C47059 * (3 * C47386 +
                   C47059 * (2 * C47167 +
                             C47059 * (C47119 + C47000 * C46962 * C47066)))) /
        C46772;
    const double C46971 = C46950 + C46968;
    const double C47539 = C47538 / C47529;
    const double C47843 = 2 * C47808;
    const double C47548 = C47547 / C47526;
    const double C47847 = C47812 / C47544;
    const double C47874 = C47806 - C47842;
    const double C2482 = -C47842;
    const double C47888 = C47873 + C47536;
    const double C47621 = C47620 / C47529;
    const double C47851 = 2 * C47817;
    const double C47628 = C47627 / C47526;
    const double C47861 = C47826 / C47544;
    const double C47882 = C47820 - C47858;
    const double C2374 = -C47858;
    const double C47891 = C47878 + C47617;
    const double C47663 = C47662 / C47529;
    const double C47854 = 2 * C47819;
    const double C47670 = C47669 / C47526;
    const double C47867 = C47832 / C47544;
    const double C47885 = C47821 - C47864;
    const double C3136 = -C47864;
    const double C47892 = C47880 + C47659;
    const double C46782 = C46781 / C46772;
    const double C4627 = C4624 * C127;
    const double C21717 = C21710 * C127;
    const double C21714 = C21710 * C284;
    const double C21713 = C21710 * C283;
    const double C21712 = C21710 * C126;
    const double C21844 = C21710 * C1059;
    const double C21842 = C21710 * C1058;
    const double C22012 = C21710 * C1199;
    const double C22011 = C21710 * C1195;
    const double C22010 = C21710 * C445;
    const double C22009 = C21710 * C444;
    const double C22008 = C21710 * C847;
    const double C22007 = C21710 * C1198;
    const double C22387 = C21710 * C1583;
    const double C23406 = C21710 * C6857;
    const double C23405 = C21710 * C1891;
    const double C23404 = C21710 * C1890;
    const double C23403 = C21710 * C2267;
    const double C135 =
        ((C46830 + C46831 * C46832 * C46836) * C46834 + C46842 + C46842 +
         C46827 *
             (2 * ae * C46839 +
              C46827 *
                  (C46832 * C46836 + C46831 * bs[4] * std::pow(C46825, 4)) *
                  C46834)) /
        C46775;
    const double C143 = C118 * C128;
    const double C4632 = C4624 * C128;
    const double C15984 = C15976 * C128;
    const double C21718 = C21710 * C128;
    const double C4629 = C4624 * C282;
    const double C15981 = C15976 * C282;
    const double C21716 = C21710 * C282;
    const double C5012 = C4624 * C443;
    const double C16364 = C15976 * C443;
    const double C22013 = C21710 * C443;
    const double C46860 = C46839 + C46858;
    const double C47002 = ae * C47001;
    const double C848 = (C47059 * C47001) / C46772;
    const double C47061 = ae * C47060;
    const double C4797 = C4624 * C285;
    const double C16149 = C15976 * C285;
    const double C21715 = C21710 * C285;
    const double C5015 = C4624 * C446;
    const double C16367 = C15976 * C446;
    const double C22018 = C21710 * C446;
    const double C4805 = C4617 * C292;
    const double C4795 = C47839 * C292;
    const double C16157 = C15969 * C292;
    const double C16147 = C47839 * C292;
    const double C21846 = C47508 * C292;
    const double C4801 = C4617 * C294;
    const double C16153 = C15969 * C294;
    const double C21840 = C47508 * C294;
    const double C10709 = C4617 * C453;
    const double C10703 = C47839 * C453;
    const double C26407 = C47508 * C453;
    const double C31972 = C15969 * C453;
    const double C31966 = C47839 * C453;
    const double C10707 = C4617 * C455;
    const double C26405 = C47508 * C455;
    const double C31970 = C15969 * C455;
    const double C5507 = C4617 * C852;
    const double C16859 = C15969 * C852;
    const double C22386 = C47508 * C852;
    const double C46896 = C46882 + C46886;
    const double C46888 = C46852 + C46885;
    const double C47010 = C46857 + C47009;
    const double C47017 = ae * C47015;
    const double C47158 = C47059 * C47015;
    const double C47180 = 2 * C47015;
    const double C1194 = (C47001 + C47015 * C47066) / C46772;
    const double C47069 = C46857 + C47068;
    const double C47076 = ae * C47074;
    const double C47234 = 2 * C47074;
    const double C22600 = C21710 * C5769;
    const double C22731 = C21710 * C5945;
    const double C22733 = C21710 * C6465;
    const double C23402 = C21710 * C7341;
    const double C23407 = C21710 * C23399;
    const double C28140 = C21710 * C12431;
    const double C46887 = C46869 + C46884;
    const double C853 =
        (2 * ae * C47059 * C47000 * C46852 + C46827 * C47059 * C47013) / C46775;
    const double C1204 = (C47000 * C46856 + C47013 * C47066) / C46775;
    const double C4810 = C4617 * C295;
    const double C4798 = C47839 * C295;
    const double C16162 = C15969 * C295;
    const double C16150 = C47839 * C295;
    const double C21848 = C47508 * C295;
    const double C10713 = C4617 * C456;
    const double C10705 = C47839 * C456;
    const double C26409 = C47508 * C456;
    const double C31976 = C15969 * C456;
    const double C31968 = C47839 * C456;
    const double C5775 = C4617 * C1064;
    const double C17121 = C15969 * C1064;
    const double C21843 = C47508 * C1064;
    const double C5955 = C4617 * C1207;
    const double C17295 = C15969 * C1207;
    const double C22384 = C47508 * C1207;
    const double C12437 = C4617 * C1896;
    const double C28135 = C47508 * C1896;
    const double C33694 = C15969 * C1896;
    const double C46921 = C46903 + C46918;
    const double C2266 =
        2 * C47059 * C47458 + C47059 * (C47458 + C47000 * C46964 * C47066);
    const double C5768 =
        4 * (2 * C47456 + C47000 * C47464) +
        C47000 * (3 * C47464 + C47000 * (2 * C47000 * C46909 +
                                         C47000 * (C46909 + C46958 * C47007)));
    const double C5944 =
        2 * C47456 + C47000 * C47464 +
        (2 * C47000 * C46909 + C47000 * (C46909 + C46958 * C47007)) * C47066;
    const double C6464 =
        C47059 * (3 * C47464 + C47000 * (2 * C47000 * C46909 +
                                         C47000 * (C46909 + C46958 * C47007)));
    const double C7340 =
        2 * C47059 * C47464 +
        C47059 * (C47464 + (C46909 + C46958 * C47007) * C47066);
    const double C12430 =
        4 * (2 * C47059 * C46873 + C47059 * C47480) +
        C47059 * (3 * C47480 + C47059 * (2 * C47059 * C46909 +
                                         C47059 * (C46909 + C46958 * C47066)));
    const double C46942 = C46919 + C46925;
    const double C46927 = C46876 + C46923;
    const double C47024 = C46883 + C47021;
    const double C47037 = ae * C47032;
    const double C47163 = C47059 * C47032;
    const double C47190 = 2 * C47032;
    const double C47197 = C47032 * C47066;
    const double C47083 = C46883 + C47080;
    const double C47096 = ae * C47091;
    const double C47244 = 2 * C47091;
    const double C46926 = C46905 + C46922;
    const double C47022 = C46882 + C47019;
    const double C47034 = C46827 * C47029;
    const double C47161 = C47059 * C47029;
    const double C47214 = 2 * C47029;
    const double C1203 = (2 * ae * (C47000 * C46852 + C47028 * C47066) +
                          C46827 * (C47013 + C47029 * C47066)) /
                         C46775;
    const double C2270 =
        (2 * C47059 * C47013 + C47059 * (C47013 + C47029 * C47066)) / C46775;
    const double C47081 = C46882 + C47078;
    const double C47093 = C46827 * C47088;
    const double C47260 = 2 * C47088;
    const double C47486 = C47482 + C47485;
    const double C28130 =
        4 * (2 * C47059 * C47470 + C47059 * C47494) +
        C47059 * (3 * C47494 +
                  C47059 * (2 * C47059 * C47492 +
                            C47059 * (C47492 + C47000 * C46944 * C47066)));
    const double C47501 = C47498 + C47500;
    const double C46978 = C46912 + C46973;
    const double C47050 = C46920 + C47045;
    const double C47109 = C46920 + C47104;
    const double C47131 = ae * C47124;
    const double C47171 = C47059 * C47124;
    const double C47253 = C47124 * C47066;
    const double C47150 = ae * C47143;
    const double C46977 = C46954 + C46972;
    const double C47047 = C46919 + C47042;
    const double C47106 = C46919 + C47101;
    const double C47127 = C46827 * C47120;
    const double C47168 = C47059 * C47120;
    const double C47251 = C47120 * C47066;
    const double C47146 = C46827 * C47139;
    const double C22594 =
        (5 * (3 * C47362 + C47000 * C47379) +
         C47000 * (4 * C47379 +
                   C47000 * (3 * C47046 +
                             C47000 * (2 * C47119 +
                                       C47000 * (C46912 + C46962 * C47007))))) /
        C46772;
    const double C22721 =
        (3 * C47362 + C47000 * C47379 +
         (3 * C47046 +
          C47000 * (2 * C47119 + C47000 * (C46912 + C46962 * C47007))) *
             C47066) /
        C46772;
    const double C23107 =
        (C47059 * (4 * C47379 +
                   C47000 * (3 * C47046 +
                             C47000 * (2 * C47119 +
                                       C47000 * (C46912 + C46962 * C47007))))) /
        C46772;
    const double C23766 =
        (2 * C47059 * C47379 +
         C47059 * (C47379 + (2 * C47119 + C47000 * (C46912 + C46962 * C47007)) *
                                C47066)) /
        C46772;
    const double C44179 =
        (5 * (3 * C47374 + C47059 * C47390) +
         C47059 * (4 * C47390 +
                   C47059 * (3 * C47105 +
                             C47059 * (2 * C47138 +
                                       C47059 * (C46912 + C46962 * C47066))))) /
        C46772;
    const double C28141 = C21710 * C28131;
    const double C46975 = C46827 * C46971;
    const double C46974 = C46971 * ae;
    const double C47540 = C47536 - C47539;
    const double C47875 = C47843 / C47526;
    const double C47549 = C47545 - C47548;
    const double C47889 = C47874 / C47530;
    const double C47622 = C47617 - C47621;
    const double C47879 = C47851 / C47526;
    const double C47629 = C47625 - C47628;
    const double C47893 = C47882 / C47530;
    const double C47664 = C47659 - C47663;
    const double C47881 = C47854 / C47526;
    const double C47671 = C47667 - C47670;
    const double C47895 = C47885 / C47530;
    const double C46783 = C47508 - C46782;
    const double C46861 = C46860 + C46853;
    const double C291 =
        (C47000 * C46856 + C47002 + C47002 +
         C46827 * (2 * ae * C47000 * C46852 + C46827 * C47000 * C46882)) /
        C46775;
    const double C5010 = C4624 * C848;
    const double C16362 = C15976 * C848;
    const double C22014 = C21710 * C848;
    const double C452 =
        (C47059 * C46856 + C47061 + C47061 +
         C46827 * (2 * ae * C47059 * C46852 + C46827 * C47059 * C46882)) /
        C46775;
    const double C46904 = C46896 + C46886;
    const double C46889 = C46888 + C46877;
    const double C47011 = ae * C47010;
    const double C1057 = (2 * C47001 + C47000 * C47010) / C46772;
    const double C1197 = (C47059 * C47010) / C46772;
    const double C47159 = ae * C47158;
    const double C5017 = C4624 * C1194;
    const double C16369 = C15976 * C1194;
    const double C22017 = C21710 * C1194;
    const double C47070 = ae * C47069;
    const double C1889 = (2 * C47060 + C47059 * C47069) / C46772;
    const double C5511 = C4617 * C853;
    const double C5505 = C47839 * C853;
    const double C16863 = C15969 * C853;
    const double C16857 = C47839 * C853;
    const double C22389 = C47508 * C853;
    const double C5951 = C4617 * C1204;
    const double C17291 = C15969 * C1204;
    const double C22725 = C47508 * C1204;
    const double C46924 = C46921 * ae;
    const double C124 = 4 * (2 * C46850 + C46827 * C46878) +
                        C46827 * (3 * C46878 + C46827 * C46921);
    const double C278 = 2 * C46850 + C46827 * C46878 + C46921 * C47007;
    const double C279 = C47000 * (3 * C46878 + C46827 * C46921);
    const double C439 = 2 * C46850 + C46827 * C46878 + C46921 * C47066;
    const double C440 = C47059 * (3 * C46878 + C46827 * C46921);
    const double C845 = C47059 * C47000 * C46921;
    const double C1324 =
        2 * C47000 * C46921 + C47000 * (C46921 + C46971 * C47007);
    const double C1476 = C47059 * (C46921 + C46971 * C47007);
    const double C2052 = C47000 * C46921 + C47000 * C46971 * C47066;
    const double C2160 =
        2 * C47059 * C46921 + C47059 * (C46921 + C46971 * C47066);
    const double C46953 = C46942 + C46925;
    const double C46929 = C46927 + C46913;
    const double C47026 = ae * C47024;
    const double C47181 = C47000 * C47024;
    const double C47189 = 3 * C47024;
    const double C47203 = C47059 * C47024;
    const double C1200 = (C47010 + C47024 * C47066) / C46772;
    const double C47118 = C47029 + C47037;
    const double C47165 = ae * C47163;
    const double C47271 = 2 * C47163;
    const double C47198 = C47015 + C47197;
    const double C47085 = ae * C47083;
    const double C47235 = C47059 * C47083;
    const double C47243 = 3 * C47083;
    const double C47137 = C47088 + C47096;
    const double C46928 = C46827 * C46926;
    const double C46941 = 2 * C46926;
    const double C1063 =
        (2 * ae * (2 * C47000 * C46852 + C47000 * (C46852 + C46876 * C47007)) +
         C46827 * (2 * C47013 + C47000 * C47022)) /
        C46775;
    const double C1065 = (3 * (C46856 + C46882 * C47007) +
                          C47000 * (2 * C47013 + C47000 * C47022)) /
                         C46775;
    const double C1206 = (2 * ae * C47059 * (C46852 + C46876 * C47007) +
                          C46827 * C47059 * C47022) /
                         C46775;
    const double C1208 = (C46856 + C46882 * C47007 + C47022 * C47066) / C46775;
    const double C1586 = (C47059 * (2 * C47013 + C47000 * C47022)) / C46775;
    const double C47039 = C47038 + C47034;
    const double C5953 = C47839 * C1203;
    const double C7067 = C4617 * C1203;
    const double C17293 = C47839 * C1203;
    const double C18395 = C15969 * C1203;
    const double C23557 = C47508 * C1203;
    const double C7349 = C4617 * C2270;
    const double C18671 = C15969 * C2270;
    const double C23772 = C47508 * C2270;
    const double C1895 =
        (2 * ae * (2 * C47059 * C46852 + C47059 * (C46852 + C46876 * C47066)) +
         C46827 * (2 * C47072 + C47059 * C47081)) /
        C46775;
    const double C1897 = (3 * (C46856 + C46882 * C47066) +
                          C47059 * (2 * C47072 + C47059 * C47081)) /
                         C46775;
    const double C47098 = C47097 + C47093;
    const double C22593 =
        5 * (3 * C47461 + C47000 * C47486) +
        C47000 * (4 * C47486 +
                  C47000 * (3 * C47484 +
                            C47000 * (2 * C47000 * C46898 +
                                      C47000 * (C46898 + C46944 * C47007))));
    const double C22720 =
        3 * C47461 + C47000 * C47486 +
        (3 * C47484 +
         C47000 * (2 * C47000 * C46898 + C47000 * (C46898 + C46944 * C47007))) *
            C47066;
    const double C23106 =
        C47059 * (4 * C47486 +
                  C47000 * (3 * C47484 +
                            C47000 * (2 * C47000 * C46898 +
                                      C47000 * (C46898 + C46944 * C47007))));
    const double C23765 =
        2 * C47059 * C47486 +
        C47059 * (C47486 +
                  (2 * C47000 * C46898 + C47000 * (C46898 + C46944 * C47007)) *
                      C47066);
    const double C44178 =
        5 * (3 * C47477 + C47059 * C47501) +
        C47059 * (4 * C47501 +
                  C47059 * (3 * C47499 +
                            C47059 * (2 * C47059 * C46898 +
                                      C47059 * (C46898 + C46944 * C47066))));
    const double C46981 = C46978 + C46963;
    const double C47055 = ae * C47050;
    const double C47191 = C47000 * C47050;
    const double C47210 = C47050 * C47066;
    const double C47225 = C47059 * C47050;
    const double C47114 = ae * C47109;
    const double C47245 = C47059 * C47109;
    const double C47176 = ae * C47171;
    const double C47256 = C47032 + C47253;
    const double C46980 = C46827 * C46977;
    const double C47052 = C46827 * C47047;
    const double C47215 = C47000 * C47047;
    const double C47223 = C47059 * C47047;
    const double C1066 =
        (2 * ae *
             (3 * (C46852 + C46876 * C47007) +
              C47000 * (2 * C47028 + C47000 * C47046)) +
         C46827 * (3 * C47022 + C47000 * (2 * C47029 + C47000 * C47047))) /
        C46775;
    const double C1209 =
        (2 * ae * (C46852 + C46876 * C47007 + C47046 * C47066) +
         C46827 * (C47022 + C47047 * C47066)) /
        C46775;
    const double C6468 =
        (2 * ae * C47059 *
             (3 * C47046 +
              C47000 * (2 * C47119 + C47000 * (C46912 + C46962 * C47007))) +
         C46827 * C47059 *
             (3 * C47047 +
              C47000 *
                  (2 * C47120 +
                   C47000 * (C46969 + (C46945 * C46946 +
                                       C46831 * bs[8] * std::pow(C46825, 8)) *
                                          C46834 * C47007)))) /
        C46775;
    const double C7343 =
        (2 * C47059 * C47022 + C47059 * (C47022 + C47047 * C47066)) / C46775;
    const double C47111 = C46827 * C47106;
    const double C47261 = C47059 * C47106;
    const double C1898 =
        (2 * ae *
             (3 * (C46852 + C46876 * C47066) +
              C47059 * (2 * C47087 + C47059 * C47105)) +
         C46827 * (3 * C47081 + C47059 * (2 * C47088 + C47059 * C47106))) /
        C46775;
    const double C47133 = C47132 + C47127;
    const double C47173 = C46827 * C47168;
    const double C47254 = C47029 + C47251;
    const double C47152 = C47151 + C47146;
    const double C22602 = C21710 * C22594;
    const double C22734 = C21710 * C22721;
    const double C23112 = C21710 * C23107;
    const double C23773 = C21710 * C23766;
    const double C44184 = C21710 * C44179;
    const double C46979 = C46951 + C46975;
    const double C47805 = C47540 * C47528;
    const double C47845 = C47810 + C47540;
    const double C47813 = C47549 / C47530;
    const double C47809 = C47549 * C47528;
    const double C580 = C47889 - (C47540 * C47531) / C47526;
    const double C47823 = C47622 * C47616;
    const double C47860 = C47825 + C47622;
    const double C47827 = C47629 / C47530;
    const double C47824 = C47629 * C47616;
    const double C1318 = C47893 - (C47622 * C47618) / C47526;
    const double C47829 = C47664 * C47658;
    const double C47866 = C47831 + C47664;
    const double C47833 = C47671 / C47530;
    const double C47830 = C47671 * C47658;
    const double C2156 = C47895 - (C47664 * C47660) / C47526;
    const double C46784 = C46783 * C46777;
    const double C114 =
        (((0 - (C46773 * C46771) / C46772) * ae) / C46772 - (0 * be) / C46779) /
            (2 * C46772) -
        ((C46773 * ((C46783 * ae) / C46772 - C46771 / C46779) + C15969) * be) /
            C46772 +
        (0 * ae) / C46772 - C46778 / C46775;
    const double C116 =
        ((C46783 * ae) / C46772 - C46771 / C46779) / (2 * C46772) -
        ((C46773 * ((0 * ae) / C46772 - C46778 / C46775) + C47839) * be) /
            C46772;
    const double C4622 =
        (-C46771 / C46772) / (2 * C46772) - (C46783 * be) / C46772;
    const double C15974 = (C46783 * ae) / C46772 - C46771 / C46779;
    const double C46862 = ae * C46861;
    const double C129 =
        (2 * C46841 + C46827 * C46861 + (C46830 + C46844 * C46831) * ae) /
        C46772;
    const double C281 = (C47000 * C46861) / C46772;
    const double C442 = (C47059 * C46861) / C46772;
    const double C4817 = C4617 * C291;
    const double C4807 = C47839 * C291;
    const double C16169 = C15969 * C291;
    const double C16159 = C47839 * C291;
    const double C21854 = C47508 * C291;
    const double C10717 = C4617 * C452;
    const double C10711 = C47839 * C452;
    const double C26411 = C47508 * C452;
    const double C31980 = C15969 * C452;
    const double C31974 = C47839 * C452;
    const double C46891 = ae * C46889;
    const double C46890 = C46827 * C46889;
    const double C46901 = 3 * C46889;
    const double C47014 = C47000 * C46889;
    const double C47073 = C47059 * C46889;
    const double C286 = (C46861 + C46889 * C47007) / C46772;
    const double C447 = (C46861 + C46889 * C47066) / C46772;
    const double C296 = (C46856 + C46882 * C47007 + C47011 + C47011 +
                         C46827 * (2 * ae * (C46852 + C46876 * C47007) +
                                   C46827 * (C46882 + C46919 * C47007))) /
                        C46775;
    const double C4803 = C4624 * C1057;
    const double C16155 = C15976 * C1057;
    const double C21850 = C21710 * C1057;
    const double C5509 = C4624 * C1197;
    const double C16861 = C15976 * C1197;
    const double C22015 = C21710 * C1197;
    const double C854 =
        (C47059 * C47013 + C47159 + C47159 +
         C46827 * (2 * ae * C47059 * C47028 + C46827 * C47059 * C47029)) /
        C46775;
    const double C457 = (C46856 + C46882 * C47066 + C47070 + C47070 +
                         C46827 * (2 * ae * (C46852 + C46876 * C47066) +
                                   C46827 * (C46882 + C46919 * C47066))) /
                        C46775;
    const double C6864 = C4624 * C1889;
    const double C18192 = C15976 * C1889;
    const double C23665 = C21710 * C1889;
    const double C46932 = ae * C46929;
    const double C46931 = C46827 * C46929;
    const double C46948 = 3 * C46929;
    const double C47020 = C46929 * C47007;
    const double C47031 = C47000 * C46929;
    const double C47079 = C46929 * C47066;
    const double C47090 = C47059 * C46929;
    const double C47182 = C47180 + C47181;
    const double C47204 = ae * C47203;
    const double C5959 = C4624 * C1200;
    const double C17299 = C15976 * C1200;
    const double C22016 = C21710 * C1200;
    const double C47125 = C47118 + C47037;
    const double C47199 = ae * C47198;
    const double C2268 = (2 * C47158 + C47059 * C47198) / C46772;
    const double C47236 = C47234 + C47235;
    const double C47144 = C47137 + C47096;
    const double C46930 = C46904 + C46928;
    const double C5777 = C47839 * C1063;
    const double C6119 = C4617 * C1063;
    const double C17123 = C47839 * C1063;
    const double C17459 = C15969 * C1063;
    const double C21851 = C47508 * C1063;
    const double C5783 = C4617 * C1065;
    const double C17129 = C15969 * C1065;
    const double C22598 = C47508 * C1065;
    const double C5957 = C47839 * C1206;
    const double C6325 = C4617 * C1206;
    const double C17297 = C47839 * C1206;
    const double C17665 = C15969 * C1206;
    const double C22391 = C47508 * C1206;
    const double C5963 = C4617 * C1208;
    const double C17303 = C15969 * C1208;
    const double C22727 = C47508 * C1208;
    const double C6473 = C4617 * C1586;
    const double C17807 = C15969 * C1586;
    const double C22729 = C47508 * C1586;
    const double C12439 = C47839 * C1895;
    const double C12785 = C4617 * C1895;
    const double C28483 = C47508 * C1895;
    const double C33696 = C47839 * C1895;
    const double C34042 = C15969 * C1895;
    const double C12443 = C4617 * C1897;
    const double C28139 = C47508 * C1897;
    const double C33700 = C15969 * C1897;
    const double C46985 = ae * C46981;
    const double C46984 = C46827 * C46981;
    const double C47044 = C46981 * C47007;
    const double C47103 = C46981 * C47066;
    const double C47123 = C47000 * C46981;
    const double C47142 = C47059 * C46981;
    const double C47192 = C47190 + C47191;
    const double C47211 = C47024 + C47210;
    const double C47227 = ae * C47225;
    const double C47246 = C47244 + C47245;
    const double C47258 = ae * C47256;
    const double C47272 = C47059 * C47256;
    const double C46983 = C46953 + C46980;
    const double C47057 = C47056 + C47052;
    const double C47219 = C47214 + C47215;
    const double C7344 =
        (2 * ae *
             (2 * C47059 * C47046 +
              C47059 * (C47046 + (C46912 + C46962 * C47007) * C47066)) +
         C46827 * (2 * C47223 +
                   C47059 * (C47047 +
                             (C46969 + (C46945 * C46946 +
                                        C46831 * bs[8] * std::pow(C46825, 8)) *
                                           C46834 * C47007) *
                                 C47066))) /
        C46775;
    const double C23400 =
        (3 * (C47022 + C47047 * C47066) +
         C47059 * (2 * C47223 +
                   C47059 * (C47047 +
                             (C46969 + (C46945 * C46946 +
                                        C46831 * bs[8] * std::pow(C46825, 8)) *
                                           C46834 * C47007) *
                                 C47066))) /
        C46775;
    const double C5780 = C47839 * C1066;
    const double C17126 = C47839 * C1066;
    const double C22850 = C47508 * C1066;
    const double C5960 = C47839 * C1209;
    const double C17300 = C47839 * C1209;
    const double C23555 = C47508 * C1209;
    const double C23770 = C47508 * C7343;
    const double C47116 = C47115 + C47111;
    const double C47265 = C47260 + C47261;
    const double C12441 = C47839 * C1898;
    const double C33698 = C47839 * C1898;
    const double C44433 = C47508 * C1898;
    const double C47134 = C46827 * C47133;
    const double C47178 = C47177 + C47173;
    const double C2271 =
        (2 * ae * (2 * C47059 * C47028 + C47059 * (C47028 + C47119 * C47066)) +
         C46827 * (2 * C47161 + C47059 * C47254)) /
        C46775;
    const double C6859 = (3 * (C47013 + C47029 * C47066) +
                          C47059 * (2 * C47161 + C47059 * C47254)) /
                         C46775;
    const double C6860 =
        (2 * ae *
             (3 * (C47028 + C47119 * C47066) +
              C47059 *
                  (2 * C47167 + C47059 * (C47119 + C47000 * C46962 * C47066))) +
         C46827 * (3 * C47254 +
                   C47059 * (2 * C47168 +
                             C47059 * (C47120 + C47000 *
                                                    (C46945 * C46946 +
                                                     C46831 * bs[8] *
                                                         std::pow(C46825, 8)) *
                                                    C46834 * C47066)))) /
        C46775;
    const double C28132 =
        (4 * (2 * C47161 + C47059 * C47254) +
         C47059 * (3 * C47254 +
                   C47059 * (2 * C47168 +
                             C47059 * (C47120 + C47000 *
                                                    (C46945 * C46946 +
                                                     C46831 * bs[8] *
                                                         std::pow(C46825, 8)) *
                                                    C46834 * C47066)))) /
        C46775;
    const double C47153 = C46827 * C47152;
    const double C46982 = C46979 * ae;
    const double C125 = 5 * (3 * C46878 + C46827 * C46921) +
                        C46827 * (4 * C46921 + C46827 * C46979);
    const double C280 = 3 * C46878 + C46827 * C46921 + C46979 * C47007;
    const double C441 = 3 * C46878 + C46827 * C46921 + C46979 * C47066;
    const double C584 = C47000 * (4 * C46921 + C46827 * C46979);
    const double C690 = C47059 * (4 * C46921 + C46827 * C46979);
    const double C846 = C47059 * C47000 * C46979;
    const double C47841 = C47805 / C47526;
    const double C47876 = C47845 / C47530;
    const double C47877 = C47847 + C47813;
    const double C582 = C47813 - C47547 / C47544;
    const double C47844 = C47809 / C47526;
    const double C47857 = C47823 / C47526;
    const double C47883 = C47860 / C47530;
    const double C47884 = C47861 + C47827;
    const double C1320 = C47827 - C47627 / C47544;
    const double C47859 = C47824 / C47526;
    const double C47863 = C47829 / C47526;
    const double C47886 = C47866 / C47530;
    const double C47887 = C47867 + C47833;
    const double C2158 = C47833 - C47669 / C47544;
    const double C47865 = C47830 / C47526;
    const double C46792 = C46773 * C46784;
    const double C113 =
        (ae * -2 * C46771) / (C46775 * 2 * C46772) -
        (((C46773 * ((-4 * C46778) / C46772 - (C46773 * C46784) / C46772) *
           ae) /
              C46772 +
          2 * ((C46783 * ae) / C46772 - C46771 / C46779)) *
         be) /
            C46772 -
        C46784 / C46779;
    const double C117 = (-C46784 / C46772) / (4 * C46775);
    const double C4623 = (-C46784 / C46772) / (2 * C46772);
    const double C15975 = (-C46784 / C46772) / (2 * C46772);
    const double C21709 = -C46784 / C46772;
    const double C147 = C114 * C128;
    const double C146 = C114 * C127;
    const double C141 = C114 * C126;
    const double C313 = C114 * C285;
    const double C308 = C114 * C282;
    const double C305 = C114 * C284;
    const double C304 = C114 * C283;
    const double C474 = C114 * C446;
    const double C469 = C114 * C443;
    const double C466 = C114 * C445;
    const double C465 = C114 * C444;
    const double C863 = C114 * C848;
    const double C858 = C114 * C847;
    const double C1072 = C114 * C1059;
    const double C1071 = C114 * C1058;
    const double C1218 = C114 * C1199;
    const double C1217 = C114 * C1198;
    const double C1214 = C114 * C1195;
    const double C1328 = C114 * C1057;
    const double C1480 = C114 * C1197;
    const double C1590 = C114 * C1583;
    const double C1904 = C114 * C1891;
    const double C1903 = C114 * C1890;
    const double C2056 = C114 * C1194;
    const double C2164 = C114 * C1889;
    const double C2274 = C114 * C2267;
    const double C145 = C116 * C128;
    const double C142 = C116 * C127;
    const double C306 = C116 * C285;
    const double C303 = C116 * C282;
    const double C467 = C116 * C446;
    const double C464 = C116 * C443;
    const double C859 = C116 * C848;
    const double C1070 = C116 * C1057;
    const double C1219 = C116 * C1200;
    const double C1216 = C116 * C1197;
    const double C1213 = C116 * C1194;
    const double C1902 = C116 * C1889;
    const double C4634 = C4622 * C128;
    const double C4633 = C4622 * C127;
    const double C4631 = C4622 * C282;
    const double C4628 = C4622 * C283;
    const double C4626 = C4622 * C126;
    const double C4815 = C4622 * C1057;
    const double C4809 = C4622 * C285;
    const double C4802 = C4622 * C1058;
    const double C4800 = C4622 * C284;
    const double C5025 = C4622 * C446;
    const double C5023 = C4622 * C1194;
    const double C5020 = C4622 * C848;
    const double C5018 = C4622 * C443;
    const double C5016 = C4622 * C1195;
    const double C5014 = C4622 * C445;
    const double C5013 = C4622 * C444;
    const double C5011 = C4622 * C847;
    const double C5515 = C4622 * C1197;
    const double C5508 = C4622 * C1198;
    const double C5784 = C4622 * C5769;
    const double C5782 = C4622 * C1059;
    const double C5966 = C4622 * C5945;
    const double C5965 = C4622 * C1583;
    const double C5962 = C4622 * C1199;
    const double C6474 = C4622 * C6465;
    const double C6868 = C4622 * C6857;
    const double C6866 = C4622 * C1891;
    const double C6865 = C4622 * C1890;
    const double C6863 = C4622 * C2267;
    const double C7068 = C4622 * C1200;
    const double C7206 = C4622 * C1889;
    const double C7350 = C4622 * C7341;
    const double C12444 = C4622 * C12431;
    const double C15986 = C15974 * C128;
    const double C15985 = C15974 * C127;
    const double C15983 = C15974 * C282;
    const double C15980 = C15974 * C283;
    const double C15978 = C15974 * C126;
    const double C16167 = C15974 * C1057;
    const double C16161 = C15974 * C285;
    const double C16154 = C15974 * C1058;
    const double C16152 = C15974 * C284;
    const double C16377 = C15974 * C446;
    const double C16375 = C15974 * C1194;
    const double C16372 = C15974 * C848;
    const double C16370 = C15974 * C443;
    const double C16368 = C15974 * C1195;
    const double C16366 = C15974 * C445;
    const double C16365 = C15974 * C444;
    const double C16363 = C15974 * C847;
    const double C16867 = C15974 * C1197;
    const double C16860 = C15974 * C1198;
    const double C17130 = C15974 * C5769;
    const double C17128 = C15974 * C1059;
    const double C17306 = C15974 * C5945;
    const double C17305 = C15974 * C1583;
    const double C17302 = C15974 * C1199;
    const double C17808 = C15974 * C6465;
    const double C18196 = C15974 * C6857;
    const double C18194 = C15974 * C1891;
    const double C18193 = C15974 * C1890;
    const double C18191 = C15974 * C2267;
    const double C18396 = C15974 * C1200;
    const double C18534 = C15974 * C1889;
    const double C18672 = C15974 * C7341;
    const double C33701 = C15974 * C12431;
    const double C136 =
        (2 * (2 * ae * C46839 + C46827 * C46856) + C46862 + C46862 +
         C46827 * (C46856 + C46859 + C46859 +
                   C46827 * (2 * ae * C46852 +
                             C46827 *
                                 (C46845 * C46846 +
                                  C46831 * bs[5] * std::pow(C46833, 5)) *
                                 C46834))) /
        C46775;
    const double C152 = C114 * C129;
    const double C148 = C116 * C129;
    const double C144 = C118 * C129;
    const double C4641 = C4622 * C129;
    const double C4635 = C4624 * C129;
    const double C15993 = C15974 * C129;
    const double C15987 = C15976 * C129;
    const double C21723 = C21710 * C129;
    const double C316 = C114 * C281;
    const double C309 = C116 * C281;
    const double C302 = C118 * C281;
    const double C4636 = C4622 * C281;
    const double C4630 = C4624 * C281;
    const double C15988 = C15974 * C281;
    const double C15982 = C15976 * C281;
    const double C21719 = C21710 * C281;
    const double C477 = C114 * C442;
    const double C470 = C116 * C442;
    const double C463 = C118 * C442;
    const double C5029 = C4622 * C442;
    const double C5019 = C4624 * C442;
    const double C16381 = C15974 * C442;
    const double C16371 = C15976 * C442;
    const double C22021 = C21710 * C442;
    const double C46892 = C46868 + C46890;
    const double C47016 = ae * C47014;
    const double C849 = (C47059 * C47014) / C46772;
    const double C47075 = ae * C47073;
    const double C317 = C114 * C286;
    const double C312 = C116 * C286;
    const double C307 = C118 * C286;
    const double C4824 = C4622 * C286;
    const double C4812 = C4624 * C286;
    const double C16176 = C15974 * C286;
    const double C16164 = C15976 * C286;
    const double C21720 = C21710 * C286;
    const double C478 = C114 * C447;
    const double C473 = C116 * C447;
    const double C468 = C118 * C447;
    const double C5030 = C4622 * C447;
    const double C5024 = C4624 * C447;
    const double C16382 = C15974 * C447;
    const double C16376 = C15976 * C447;
    const double C22022 = C21710 * C447;
    const double C4825 = C4617 * C296;
    const double C4813 = C47839 * C296;
    const double C16177 = C15969 * C296;
    const double C16165 = C47839 * C296;
    const double C21856 = C47508 * C296;
    const double C5519 = C4617 * C854;
    const double C5513 = C47839 * C854;
    const double C16871 = C15969 * C854;
    const double C16865 = C47839 * C854;
    const double C22396 = C47508 * C854;
    const double C10723 = C4617 * C457;
    const double C10715 = C47839 * C457;
    const double C26415 = C47508 * C457;
    const double C31986 = C15969 * C457;
    const double C31978 = C47839 * C457;
    const double C46952 = C46941 + C46932;
    const double C46933 = C46902 + C46931;
    const double C47023 = C46889 + C47020;
    const double C47036 = ae * C47031;
    const double C47162 = C47059 * C47031;
    const double C47216 = 2 * C47031;
    const double C1193 = (C47014 + C47031 * C47066) / C46772;
    const double C47082 = C46889 + C47079;
    const double C47095 = ae * C47090;
    const double C47262 = 2 * C47090;
    const double C47183 = ae * C47182;
    const double C1060 = (3 * C47010 + C47000 * C47182) / C46772;
    const double C1584 = (C47059 * C47182) / C46772;
    const double C1205 =
        (C47059 * C47022 + C47204 + C47204 +
         C46827 * (2 * ae * C47059 * C47046 + C46827 * C47059 * C47047)) /
        C46775;
    const double C1202 = (C47013 + C47029 * C47066 + C47199 + C47199 +
                          C46827 * (2 * ae * (C47028 + C47119 * C47066) +
                                    C46827 * (C47029 + C47120 * C47066))) /
                         C46775;
    const double C2275 = C116 * C2268;
    const double C6862 = C4624 * C2268;
    const double C7208 = C4622 * C2268;
    const double C18190 = C15976 * C2268;
    const double C18536 = C15974 * C2268;
    const double C23666 = C21710 * C2268;
    const double C47237 = ae * C47236;
    const double C1892 = (3 * C47069 + C47059 * C47236) / C46772;
    const double C46987 = C46949 + C46984;
    const double C47049 = C46929 + C47044;
    const double C47108 = C46929 + C47103;
    const double C47130 = ae * C47123;
    const double C47170 = C47059 * C47123;
    const double C47252 = C47123 * C47066;
    const double C47149 = ae * C47142;
    const double C47193 = C47000 * C47192;
    const double C47218 = ae * C47192;
    const double C47231 = C47059 * C47192;
    const double C5946 = (C47182 + C47192 * C47066) / C46772;
    const double C47212 = ae * C47211;
    const double C7342 = (2 * C47203 + C47059 * C47211) / C46772;
    const double C47247 = C47059 * C47246;
    const double C47264 = ae * C47246;
    const double C47273 = C47271 + C47272;
    const double C46986 = C46827 * C46983;
    const double C1587 = (2 * ae * C47059 * (2 * C47028 + C47000 * C47046) +
                          C46827 * C47059 * C47219) /
                         C46775;
    const double C5771 = (4 * (2 * C47013 + C47000 * C47022) +
                          C47000 * (3 * C47022 + C47000 * C47219)) /
                         C46775;
    const double C5772 =
        (2 * ae *
             (4 * (2 * C47028 + C47000 * C47046) +
              C47000 * (3 * C47046 +
                        C47000 * (2 * C47119 +
                                  C47000 * (C46912 + C46962 * C47007)))) +
         C46827 *
             (4 * C47219 +
              C47000 * (3 * C47047 +
                        C47000 * (2 * C47120 +
                                  C47000 * (C46969 + (C46945 * C46946 +
                                                      C46831 * bs[8] *
                                                          std::pow(C46825, 8)) *
                                                         C46834 * C47007))))) /
        C46775;
    const double C5947 =
        (2 * C47013 + C47000 * C47022 + C47219 * C47066) / C46775;
    const double C5948 =
        (2 * ae *
             (2 * C47028 + C47000 * C47046 +
              (2 * C47119 + C47000 * (C46912 + C46962 * C47007)) * C47066) +
         C46827 * (C47219 +
                   (2 * C47120 +
                    C47000 * (C46969 + (C46945 * C46946 +
                                        C46831 * bs[8] * std::pow(C46825, 8)) *
                                           C46834 * C47007)) *
                       C47066)) /
        C46775;
    const double C6467 = (C47059 * (3 * C47022 + C47000 * C47219)) / C46775;
    const double C22595 =
        (5 * (3 * C47022 + C47000 * C47219) +
         C47000 *
             (4 * C47219 +
              C47000 * (3 * C47047 +
                        C47000 * (2 * C47120 +
                                  C47000 * (C46969 + (C46945 * C46946 +
                                                      C46831 * bs[8] *
                                                          std::pow(C46825, 8)) *
                                                         C46834 * C47007))))) /
        C46775;
    const double C22722 =
        (3 * C47022 + C47000 * C47219 +
         (3 * C47047 +
          C47000 * (2 * C47120 +
                    C47000 * (C46969 + (C46945 * C46946 +
                                        C46831 * bs[8] * std::pow(C46825, 8)) *
                                           C46834 * C47007))) *
             C47066) /
        C46775;
    const double C23108 =
        (C47059 *
         (4 * C47219 +
          C47000 * (3 * C47047 +
                    C47000 * (2 * C47120 +
                              C47000 * (C46969 +
                                        (C46945 * C46946 +
                                         C46831 * bs[8] * std::pow(C46825, 8)) *
                                            C46834 * C47007))))) /
        C46775;
    const double C23767 =
        (2 * C47059 * C47219 +
         C47059 * (C47219 +
                   (2 * C47120 +
                    C47000 * (C46969 + (C46945 * C46946 +
                                        C46831 * bs[8] * std::pow(C46825, 8)) *
                                           C46834 * C47007)) *
                       C47066)) /
        C46775;
    const double C12433 = (4 * (2 * C47072 + C47059 * C47081) +
                           C47059 * (3 * C47081 + C47059 * C47265)) /
                          C46775;
    const double C12434 =
        (2 * ae *
             (4 * (2 * C47087 + C47059 * C47105) +
              C47059 * (3 * C47105 +
                        C47059 * (2 * C47138 +
                                  C47059 * (C46912 + C46962 * C47066)))) +
         C46827 *
             (4 * C47265 +
              C47059 * (3 * C47106 +
                        C47059 * (2 * C47139 +
                                  C47059 * (C46969 + (C46945 * C46946 +
                                                      C46831 * bs[8] *
                                                          std::pow(C46825, 8)) *
                                                         C46834 * C47066))))) /
        C46775;
    const double C44180 =
        (5 * (3 * C47081 + C47059 * C47265) +
         C47059 *
             (4 * C47265 +
              C47059 * (3 * C47106 +
                        C47059 * (2 * C47139 +
                                  C47059 * (C46969 + (C46945 * C46946 +
                                                      C46831 * bs[8] *
                                                          std::pow(C46825, 8)) *
                                                         C46834 * C47066))))) /
        C46775;
    const double C47135 = C47125 + C47134;
    const double C7347 = C47839 * C2271;
    const double C18669 = C47839 * C2271;
    const double C28346 = C47508 * C2271;
    const double C28137 = C47508 * C6859;
    const double C47154 = C47144 + C47153;
    const double C47897 = C47841 + C47889;
    const double C581 = C47876 - (C47549 * C47531) / C47526;
    const double C111 = C47877 / C47530 - C47547 / C47848;
    const double C47890 = C47844 + C47876;
    const double C47898 = C47857 + C47893;
    const double C1319 = C47883 - (C47629 * C47618) / C47526;
    const double C1047 = C47884 / C47530 - C47627 / C47848;
    const double C47894 = C47859 + C47883;
    const double C47899 = C47863 + C47895;
    const double C2157 = C47886 - (C47671 * C47660) / C47526;
    const double C1880 = C47887 / C47530 - C47669 / C47848;
    const double C47896 = C47865 + C47886;
    const double C115 =
        (((-4 * C46778) / C46772 - C46792 / C46772) * ae) / C46779 -
        ((2 * ((0 * ae) / C46772 - C46778 / C46775) - C46792 / C46779) * be) /
            C46772;
    const double C4621 =
        -(((-4 * C46778) / C46772 - C46792 / C46772) * be) / C46772;
    const double C15973 =
        (((-4 * C46778) / C46772 - C46792 / C46772) * ae) / C46772;
    const double C4820 = C4623 * C278;
    const double C4818 = C4623 * C277;
    const double C4811 = C4623 * C276;
    const double C4806 = C4623 * C271;
    const double C4796 = C4623 * C275;
    const double C4794 = C4623 * C272;
    const double C5166 = C4623 * C279;
    const double C5516 = C4623 * C845;
    const double C5512 = C4623 * C844;
    const double C5504 = C4623 * C843;
    const double C5778 = C4623 * C1054;
    const double C5776 = C4623 * C1051;
    const double C5958 = C4623 * C1191;
    const double C5956 = C4623 * C1188;
    const double C5952 = C4623 * C1185;
    const double C6116 = C4623 * C1050;
    const double C6322 = C4623 * C1187;
    const double C6470 = C4623 * C1581;
    const double C7064 = C4623 * C1184;
    const double C7346 = C4623 * C2265;
    const double C10720 = C4623 * C439;
    const double C10718 = C4623 * C438;
    const double C10714 = C4623 * C437;
    const double C10710 = C4623 * C432;
    const double C10704 = C4623 * C436;
    const double C10702 = C4623 * C433;
    const double C11024 = C4623 * C440;
    const double C12440 = C4623 * C1886;
    const double C12438 = C4623 * C1883;
    const double C12782 = C4623 * C1882;
    const double C16172 = C15975 * C278;
    const double C16170 = C15975 * C277;
    const double C16163 = C15975 * C276;
    const double C16158 = C15975 * C271;
    const double C16148 = C15975 * C275;
    const double C16146 = C15975 * C272;
    const double C16518 = C15975 * C279;
    const double C16868 = C15975 * C845;
    const double C16864 = C15975 * C844;
    const double C16856 = C15975 * C843;
    const double C17124 = C15975 * C1054;
    const double C17122 = C15975 * C1051;
    const double C17298 = C15975 * C1191;
    const double C17296 = C15975 * C1188;
    const double C17292 = C15975 * C1185;
    const double C17456 = C15975 * C1050;
    const double C17662 = C15975 * C1187;
    const double C17804 = C15975 * C1581;
    const double C18392 = C15975 * C1184;
    const double C18668 = C15975 * C2265;
    const double C31983 = C15975 * C439;
    const double C31981 = C15975 * C438;
    const double C31977 = C15975 * C437;
    const double C31973 = C15975 * C432;
    const double C31967 = C15975 * C436;
    const double C31965 = C15975 * C433;
    const double C32287 = C15975 * C440;
    const double C33697 = C15975 * C1886;
    const double C33695 = C15975 * C1883;
    const double C34039 = C15975 * C1882;
    const double C21857 = C21709 * C1050;
    const double C21855 = C21709 * C276;
    const double C21853 = C21709 * C271;
    const double C21849 = C21709 * C1051;
    const double C21847 = C21709 * C275;
    const double C21845 = C21709 * C272;
    const double C21841 = C21709 * C1052;
    const double C21839 = C21709 * C274;
    const double C21837 = C21709 * C273;
    const double C22125 = C21709 * C278;
    const double C22123 = C21709 * C277;
    const double C22395 = C21709 * C844;
    const double C22393 = C21709 * C1187;
    const double C22390 = C21709 * C1188;
    const double C22388 = C21709 * C843;
    const double C22385 = C21709 * C842;
    const double C22383 = C21709 * C1189;
    const double C22599 = C21709 * C5767;
    const double C22597 = C21709 * C1053;
    const double C22730 = C21709 * C5943;
    const double C22728 = C21709 * C1580;
    const double C22726 = C21709 * C1190;
    const double C22724 = C21709 * C1186;
    const double C22849 = C21709 * C1054;
    const double C23002 = C21709 * C1581;
    const double C23110 = C21709 * C6463;
    const double C23556 = C21709 * C1185;
    const double C23554 = C21709 * C1191;
    const double C23771 = C21709 * C2264;
    const double C23769 = C21709 * C7339;
    const double C26414 = C21709 * C437;
    const double C26412 = C21709 * C1184;
    const double C26410 = C21709 * C432;
    const double C26408 = C21709 * C436;
    const double C26406 = C21709 * C433;
    const double C26404 = C21709 * C435;
    const double C26402 = C21709 * C434;
    const double C26570 = C21709 * C845;
    const double C26706 = C21709 * C438;
    const double C28138 = C21709 * C1885;
    const double C28136 = C21709 * C6855;
    const double C28134 = C21709 * C1884;
    const double C28345 = C21709 * C2265;
    const double C28482 = C21709 * C1883;
    const double C42919 = C21709 * C1882;
    const double C43121 = C21709 * C439;
    const double C44182 = C21709 * C12429;
    const double C44432 = C21709 * C1886;
    const double C46893 = C46892 + C46881;
    const double C297 =
        (2 * (2 * ae * C47000 * C46852 + C46827 * C47013) + C47016 + C47016 +
         C46827 *
             (C47013 + C47017 + C47017 +
              C46827 * (2 * ae * C47000 * C46876 + C46827 * C47000 * C46919))) /
        C46775;
    const double C864 = C114 * C849;
    const double C862 = C116 * C849;
    const double C860 = C118 * C849;
    const double C5027 = C4622 * C849;
    const double C5021 = C4624 * C849;
    const double C16379 = C15974 * C849;
    const double C16373 = C15976 * C849;
    const double C22020 = C21710 * C849;
    const double C458 =
        (2 * (2 * ae * C47059 * C46852 + C46827 * C47072) + C47075 + C47075 +
         C46827 *
             (C47072 + C47076 + C47076 +
              C46827 * (2 * ae * C47059 * C46876 + C46827 * C47059 * C46919))) /
        C46775;
    const double C46960 = C46952 + C46932;
    const double C46934 = C46933 + C46917;
    const double C47025 = ae * C47023;
    const double C1056 = (2 * C47014 + C47000 * C47023) / C46772;
    const double C1196 = (C47059 * C47023) / C46772;
    const double C47164 = ae * C47162;
    const double C1212 = C118 * C1193;
    const double C2057 = C116 * C1193;
    const double C5032 = C4622 * C1193;
    const double C5022 = C4624 * C1193;
    const double C16384 = C15974 * C1193;
    const double C16374 = C15976 * C1193;
    const double C22023 = C21710 * C1193;
    const double C47084 = ae * C47082;
    const double C1888 = (2 * C47073 + C47059 * C47082) / C46772;
    const double C1062 = (2 * C47013 + C47000 * C47022 + C47183 + C47183 +
                          C46827 * (2 * ae * (2 * C47028 + C47000 * C47046) +
                                    C46827 * (2 * C47029 + C47000 * C47047))) /
                         C46775;
    const double C1073 = C116 * C1060;
    const double C5779 = C4624 * C1060;
    const double C6120 = C4622 * C1060;
    const double C17125 = C15976 * C1060;
    const double C17460 = C15974 * C1060;
    const double C21852 = C21710 * C1060;
    const double C1591 = C116 * C1584;
    const double C5964 = C4624 * C1584;
    const double C6326 = C4622 * C1584;
    const double C17304 = C15976 * C1584;
    const double C17666 = C15974 * C1584;
    const double C22392 = C21710 * C1584;
    const double C6323 = C47839 * C1205;
    const double C17663 = C47839 * C1205;
    const double C22394 = C47508 * C1205;
    const double C7065 = C47839 * C1202;
    const double C18393 = C47839 * C1202;
    const double C26413 = C47508 * C1202;
    const double C1894 = (2 * C47072 + C47059 * C47081 + C47237 + C47237 +
                          C46827 * (2 * ae * (2 * C47087 + C47059 * C47105) +
                                    C46827 * (2 * C47088 + C47059 * C47106))) /
                         C46775;
    const double C1905 = C116 * C1892;
    const double C6867 = C4624 * C1892;
    const double C12786 = C4622 * C1892;
    const double C18195 = C15976 * C1892;
    const double C28484 = C21710 * C1892;
    const double C34043 = C15974 * C1892;
    const double C46989 = C46987 + C46967;
    const double C47054 = ae * C47049;
    const double C47217 = C47000 * C47049;
    const double C47224 = C47059 * C47049;
    const double C1201 = (C47023 + C47049 * C47066) / C46772;
    const double C47113 = ae * C47108;
    const double C47263 = C47059 * C47108;
    const double C47175 = ae * C47170;
    const double C47255 = C47031 + C47252;
    const double C47194 = C47189 + C47193;
    const double C47232 = ae * C47231;
    const double C5967 = C4624 * C5946;
    const double C17307 = C15976 * C5946;
    const double C23558 = C21710 * C5946;
    const double C1210 =
        (C47022 + C47047 * C47066 + C47212 + C47212 +
         C46827 * (2 * ae * (C47046 + (C46912 + C46962 * C47007) * C47066) +
                   C46827 * (C47047 +
                             (C46969 + (C46945 * C46946 +
                                        C46831 * bs[8] * std::pow(C46825, 8)) *
                                           C46834 * C47007) *
                                 C47066))) /
        C46775;
    const double C7351 = C4624 * C7342;
    const double C18673 = C15976 * C7342;
    const double C23667 = C21710 * C7342;
    const double C47248 = C47243 + C47247;
    const double C47274 = ae * C47273;
    const double C6858 = (3 * C47198 + C47059 * C47273) / C46772;
    const double C6471 = C47839 * C1587;
    const double C17805 = C47839 * C1587;
    const double C23003 = C47508 * C1587;
    const double C22601 = C47508 * C5771;
    const double C22732 = C47508 * C5947;
    const double C23111 = C47508 * C6467;
    const double C44183 = C47508 * C12433;
    const double C108 =
        (C47888 + 2 * C47540) / C47530 - (C47897 * C47531) / C47526;
    const double C109 =
        (C47875 + 2 * C47549 + C47897) / C47530 - (C47890 * C47531) / C47526;
    const double C110 = (C47846 + C47546 / C47526 + C47890) / C47530 -
                        (C47877 * C47531) / C47526;
    const double C1044 =
        (C47891 + 2 * C47622) / C47530 - (C47898 * C47618) / C47526;
    const double C1045 =
        (C47879 + 2 * C47629 + C47898) / C47530 - (C47894 * C47618) / C47526;
    const double C1046 = (C47852 + C47626 / C47526 + C47894) / C47530 -
                         (C47884 * C47618) / C47526;
    const double C1877 =
        (C47892 + 2 * C47664) / C47530 - (C47899 * C47660) / C47526;
    const double C1878 =
        (C47881 + 2 * C47671 + C47899) / C47530 - (C47896 * C47660) / C47526;
    const double C1879 = (C47855 + C47668 / C47526 + C47896) / C47530 -
                         (C47887 * C47660) / C47526;
    const double C4823 = C4621 * C276;
    const double C4816 = C4621 * C271;
    const double C4808 = C4621 * C275;
    const double C4804 = C4621 * C272;
    const double C4799 = C4621 * C274;
    const double C4792 = C4621 * C273;
    const double C5164 = C4621 * C277;
    const double C5518 = C4621 * C844;
    const double C5510 = C4621 * C843;
    const double C5506 = C4621 * C842;
    const double C5781 = C4621 * C1053;
    const double C5774 = C4621 * C1052;
    const double C5961 = C4621 * C1190;
    const double C5954 = C4621 * C1189;
    const double C5950 = C4621 * C1186;
    const double C6118 = C4621 * C1051;
    const double C6324 = C4621 * C1188;
    const double C6472 = C4621 * C1580;
    const double C7066 = C4621 * C1185;
    const double C7348 = C4621 * C2264;
    const double C10722 = C4621 * C437;
    const double C10716 = C4621 * C432;
    const double C10712 = C4621 * C436;
    const double C10708 = C4621 * C433;
    const double C10706 = C4621 * C435;
    const double C10700 = C4621 * C434;
    const double C11022 = C4621 * C438;
    const double C12442 = C4621 * C1885;
    const double C12436 = C4621 * C1884;
    const double C12784 = C4621 * C1883;
    const double C16175 = C15973 * C276;
    const double C16168 = C15973 * C271;
    const double C16160 = C15973 * C275;
    const double C16156 = C15973 * C272;
    const double C16151 = C15973 * C274;
    const double C16144 = C15973 * C273;
    const double C16516 = C15973 * C277;
    const double C16870 = C15973 * C844;
    const double C16862 = C15973 * C843;
    const double C16858 = C15973 * C842;
    const double C17127 = C15973 * C1053;
    const double C17120 = C15973 * C1052;
    const double C17301 = C15973 * C1190;
    const double C17294 = C15973 * C1189;
    const double C17290 = C15973 * C1186;
    const double C17458 = C15973 * C1051;
    const double C17664 = C15973 * C1188;
    const double C17806 = C15973 * C1580;
    const double C18394 = C15973 * C1185;
    const double C18670 = C15973 * C2264;
    const double C31985 = C15973 * C437;
    const double C31979 = C15973 * C432;
    const double C31975 = C15973 * C436;
    const double C31971 = C15973 * C433;
    const double C31969 = C15973 * C435;
    const double C31963 = C15973 * C434;
    const double C32285 = C15973 * C438;
    const double C33699 = C15973 * C1885;
    const double C33693 = C15973 * C1884;
    const double C34041 = C15973 * C1883;
    const double C4835 = C4811 + C4812;
    const double C4833 = C4806 + C4630;
    const double C4830 = C4796 + C4797;
    const double C4829 = C4794 + C4629;
    const double C5522 = C5504 + C5010;
    const double C5787 = C5776 + C4803;
    const double C5972 = C5958 + C5959;
    const double C5971 = C5956 + C5509;
    const double C5969 = C5952 + C5017;
    const double C7352 = C7346 + C6862;
    const double C10733 = C10714 + C5024;
    const double C10731 = C10710 + C5019;
    const double C10728 = C10704 + C5015;
    const double C10727 = C10702 + C5012;
    const double C12447 = C12438 + C6864;
    const double C16187 = C16163 + C16164;
    const double C16185 = C16158 + C15982;
    const double C16182 = C16148 + C16149;
    const double C16181 = C16146 + C15981;
    const double C16874 = C16856 + C16362;
    const double C17133 = C17122 + C16155;
    const double C17312 = C17298 + C17299;
    const double C17311 = C17296 + C16861;
    const double C17309 = C17292 + C16369;
    const double C18674 = C18668 + C18190;
    const double C31996 = C31977 + C16376;
    const double C31994 = C31973 + C16371;
    const double C31991 = C31967 + C16367;
    const double C31990 = C31965 + C16364;
    const double C33704 = C33695 + C18192;
    const double C21868 = C21855 + C21720;
    const double C21867 = C21853 + C21719;
    const double C21866 = C21849 + C21850;
    const double C21865 = C21847 + C21715;
    const double C21864 = C21845 + C21716;
    const double C21863 = C21841 + C21842;
    const double C21862 = C21839 + C21714;
    const double C21861 = C21837 + C21713;
    const double C22401 = C22390 + C22015;
    const double C22400 = C22388 + C22014;
    const double C22399 = C22385 + C22008;
    const double C22398 = C22383 + C22007;
    const double C22604 = C22599 + C22600;
    const double C22603 = C22597 + C21844;
    const double C22738 = C22730 + C22731;
    const double C22737 = C22728 + C22387;
    const double C22736 = C22726 + C22012;
    const double C22735 = C22724 + C22011;
    const double C23113 = C23110 + C22733;
    const double C23560 = C23556 + C22017;
    const double C23559 = C23554 + C22016;
    const double C23775 = C23771 + C23403;
    const double C23774 = C23769 + C23402;
    const double C26424 = C26414 + C22022;
    const double C26422 = C26410 + C22021;
    const double C26421 = C26408 + C22018;
    const double C26420 = C26406 + C22013;
    const double C26419 = C26404 + C22010;
    const double C26418 = C26402 + C22009;
    const double C28144 = C28138 + C23405;
    const double C28143 = C28136 + C23406;
    const double C28142 = C28134 + C23404;
    const double C28348 = C28345 + C23666;
    const double C28486 = C28482 + C23665;
    const double C44185 = C44182 + C28140;
    const double C46894 = ae * C46893;
    const double C130 =
        (3 * C46861 + C46827 * C46893 + (2 * C46850 + C46827 * C46878) * ae) /
        C46772;
    const double C287 = (C47000 * C46893) / C46772;
    const double C448 = (C47059 * C46893) / C46772;
    const double C4819 = C47839 * C297;
    const double C5165 = C4617 * C297;
    const double C16171 = C47839 * C297;
    const double C16517 = C15969 * C297;
    const double C22124 = C47508 * C297;
    const double C5525 = C5512 + C5021;
    const double C16877 = C16864 + C16373;
    const double C22403 = C22395 + C22020;
    const double C10719 = C47839 * C458;
    const double C11023 = C4617 * C458;
    const double C26707 = C47508 * C458;
    const double C31982 = C47839 * C458;
    const double C32286 = C15969 * C458;
    const double C46988 = C46960 + C46986;
    const double C46936 = ae * C46934;
    const double C46935 = C46827 * C46934;
    const double C46947 = 4 * C46934;
    const double C47030 = C47000 * C46934;
    const double C47089 = C47059 * C46934;
    const double C288 = (C46893 + C46934 * C47007) / C46772;
    const double C449 = (C46893 + C46934 * C47066) / C46772;
    const double C298 =
        (2 * (2 * ae * (C46852 + C46876 * C47007) + C46827 * C47022) + C47025 +
         C47025 +
         C46827 * (C47022 + C47026 + C47026 +
                   C46827 * (2 * ae * (C46876 + C46912 * C47007) +
                             C46827 * (C46919 + C46969 * C47007)))) /
        C46775;
    const double C1069 = C118 * C1056;
    const double C1329 = C116 * C1056;
    const double C4826 = C4622 * C1056;
    const double C4814 = C4624 * C1056;
    const double C16178 = C15974 * C1056;
    const double C16166 = C15976 * C1056;
    const double C21858 = C21710 * C1056;
    const double C1215 = C118 * C1196;
    const double C1481 = C116 * C1196;
    const double C5520 = C4622 * C1196;
    const double C5514 = C4624 * C1196;
    const double C16872 = C15974 * C1196;
    const double C16866 = C15976 * C1196;
    const double C22019 = C21710 * C1196;
    const double C855 =
        (2 * (2 * ae * C47059 * C47028 + C46827 * C47161) + C47164 + C47164 +
         C46827 *
             (C47161 + C47165 + C47165 +
              C46827 * (2 * ae * C47059 * C47119 + C46827 * C47059 * C47120))) /
        C46775;
    const double C7070 = C7064 + C5022;
    const double C18398 = C18392 + C16374;
    const double C26423 = C26412 + C22023;
    const double C459 =
        (2 * (2 * ae * (C46852 + C46876 * C47066) + C46827 * C47081) + C47084 +
         C47084 +
         C46827 * (C47081 + C47085 + C47085 +
                   C46827 * (2 * ae * (C46876 + C46912 * C47066) +
                             C46827 * (C46919 + C46969 * C47066)))) /
        C46775;
    const double C1901 = C118 * C1888;
    const double C2165 = C116 * C1888;
    const double C7207 = C4624 * C1888;
    const double C10724 = C4622 * C1888;
    const double C18535 = C15976 * C1888;
    const double C26416 = C21710 * C1888;
    const double C31987 = C15974 * C1888;
    const double C6117 = C47839 * C1062;
    const double C17457 = C47839 * C1062;
    const double C21859 = C47508 * C1062;
    const double C5788 = C5778 + C5779;
    const double C17134 = C17124 + C17125;
    const double C22852 = C22849 + C21852;
    const double C6476 = C6470 + C5964;
    const double C17810 = C17804 + C17304;
    const double C23005 = C23002 + C22392;
    const double C12783 = C47839 * C1894;
    const double C34040 = C47839 * C1894;
    const double C42920 = C47508 * C1894;
    const double C12448 = C12440 + C6867;
    const double C33705 = C33697 + C18195;
    const double C44435 = C44432 + C28484;
    const double C46991 = ae * C46989;
    const double C46990 = C46827 * C46989;
    const double C47043 = C46989 * C47007;
    const double C47102 = C46989 * C47066;
    const double C47122 = C47000 * C46989;
    const double C47141 = C47059 * C46989;
    const double C47220 = C47216 + C47217;
    const double C47226 = ae * C47224;
    const double C1220 = C118 * C1201;
    const double C7069 = C4624 * C1201;
    const double C18397 = C15976 * C1201;
    const double C22024 = C21710 * C1201;
    const double C47266 = C47262 + C47263;
    const double C47257 = ae * C47255;
    const double C2269 = (2 * C47162 + C47059 * C47255) / C46772;
    const double C47195 = ae * C47194;
    const double C5770 = (4 * C47182 + C47000 * C47194) / C46772;
    const double C6466 = (C47059 * C47194) / C46772;
    const double C1588 =
        (C47059 * C47219 + C47232 + C47232 +
         C46827 *
             (2 * ae * C47059 *
                  (2 * C47119 + C47000 * (C46912 + C46962 * C47007)) +
              C46827 * C47059 *
                  (2 * C47120 +
                   C47000 * (C46969 + (C46945 * C46946 +
                                       C46831 * bs[8] * std::pow(C46825, 8)) *
                                          C46834 * C47007)))) /
        C46775;
    const double C47249 = ae * C47248;
    const double C12432 = (4 * C47236 + C47059 * C47248) / C46772;
    const double C2272 =
        (2 * C47161 + C47059 * C47254 + C47274 + C47274 +
         C46827 *
             (2 * ae *
                  (2 * C47167 + C47059 * (C47119 + C47000 * C46962 * C47066)) +
              C46827 * (2 * C47168 +
                        C47059 * (C47120 +
                                  C47000 *
                                      (C46945 * C46946 +
                                       C46831 * bs[8] * std::pow(C46825, 8)) *
                                      C46834 * C47066)))) /
        C46775;
    const double C6869 = C4624 * C6858;
    const double C18197 = C15976 * C6858;
    const double C28485 = C21710 * C6858;
    const double C4839 = C4823 + C4824;
    const double C4836 = C4816 + C4636;
    const double C4834 = C4808 + C4809;
    const double C4832 = C4804 + C4631;
    const double C4831 = C4799 + C4800;
    const double C4828 = C4792 + C4628;
    const double C5527 = C5518 + C5027;
    const double C5524 = C5510 + C5020;
    const double C5523 = C5506 + C5011;
    const double C5789 = C5781 + C5782;
    const double C5786 = C5774 + C4802;
    const double C5973 = C5961 + C5962;
    const double C5970 = C5954 + C5508;
    const double C5968 = C5950 + C5016;
    const double C6123 = C6118 + C4815;
    const double C6329 = C6324 + C5515;
    const double C6477 = C6472 + C5965;
    const double C7071 = C7066 + C5023;
    const double C7353 = C7348 + C6863;
    const double C10737 = C10722 + C5030;
    const double C10734 = C10716 + C5029;
    const double C10732 = C10712 + C5025;
    const double C10730 = C10708 + C5018;
    const double C10729 = C10706 + C5014;
    const double C10726 = C10700 + C5013;
    const double C12449 = C12442 + C6866;
    const double C12446 = C12436 + C6865;
    const double C12789 = C12784 + C7206;
    const double C16191 = C16175 + C16176;
    const double C16188 = C16168 + C15988;
    const double C16186 = C16160 + C16161;
    const double C16184 = C16156 + C15983;
    const double C16183 = C16151 + C16152;
    const double C16180 = C16144 + C15980;
    const double C16879 = C16870 + C16379;
    const double C16876 = C16862 + C16372;
    const double C16875 = C16858 + C16363;
    const double C17135 = C17127 + C17128;
    const double C17132 = C17120 + C16154;
    const double C17313 = C17301 + C17302;
    const double C17310 = C17294 + C16860;
    const double C17308 = C17290 + C16368;
    const double C17463 = C17458 + C16167;
    const double C17669 = C17664 + C16867;
    const double C17811 = C17806 + C17305;
    const double C18399 = C18394 + C16375;
    const double C18675 = C18670 + C18191;
    const double C32000 = C31985 + C16382;
    const double C31997 = C31979 + C16381;
    const double C31995 = C31975 + C16377;
    const double C31993 = C31971 + C16370;
    const double C31992 = C31969 + C16366;
    const double C31989 = C31963 + C16365;
    const double C33706 = C33699 + C18194;
    const double C33703 = C33693 + C18193;
    const double C34046 = C34041 + C18534;
    const double C4847 = C4835 + C4812;
    const double C4845 = C4833 + C4630;
    const double C4842 = C4830 + C4797;
    const double C4841 = C4829 + C4629;
    const double C5528 = C5522 + C5010;
    const double C5791 = C5787 + C4803;
    const double C5978 = C5972 + C5959;
    const double C5977 = C5971 + C5509;
    const double C5975 = C5969 + C5017;
    const double C7354 = C7352 + C6862;
    const double C10745 = C10733 + C5024;
    const double C10743 = C10731 + C5019;
    const double C10740 = C10728 + C5015;
    const double C10739 = C10727 + C5012;
    const double C12451 = C12447 + C6864;
    const double C16199 = C16187 + C16164;
    const double C16197 = C16185 + C15982;
    const double C16194 = C16182 + C16149;
    const double C16193 = C16181 + C15981;
    const double C16880 = C16874 + C16362;
    const double C17137 = C17133 + C16155;
    const double C17318 = C17312 + C17299;
    const double C17317 = C17311 + C16861;
    const double C17315 = C17309 + C16369;
    const double C18676 = C18674 + C18190;
    const double C32008 = C31996 + C16376;
    const double C32006 = C31994 + C16371;
    const double C32003 = C31991 + C16367;
    const double C32002 = C31990 + C16364;
    const double C33708 = C33704 + C18192;
    const double C21877 = C21868 + C21720;
    const double C21876 = C21867 + C21719;
    const double C21875 = C21866 + C21850;
    const double C21874 = C21865 + C21715;
    const double C21873 = C21864 + C21716;
    const double C21872 = C21863 + C21842;
    const double C21871 = C21862 + C21714;
    const double C21870 = C21861 + C21713;
    const double C22407 = C22401 + C22015;
    const double C22406 = C22400 + C22014;
    const double C22405 = C22399 + C22008;
    const double C22404 = C22398 + C22007;
    const double C22606 = C22604 + C22600;
    const double C22605 = C22603 + C21844;
    const double C22742 = C22738 + C22731;
    const double C22741 = C22737 + C22387;
    const double C22740 = C22736 + C22012;
    const double C22739 = C22735 + C22011;
    const double C23114 = C23113 + C22733;
    const double C23562 = C23560 + C22017;
    const double C23561 = C23559 + C22016;
    const double C23777 = C23775 + C23403;
    const double C23776 = C23774 + C23402;
    const double C26431 = C26424 + C22022;
    const double C26429 = C26422 + C22021;
    const double C26428 = C26421 + C22018;
    const double C26427 = C26420 + C22013;
    const double C26426 = C26419 + C22010;
    const double C26425 = C26418 + C22009;
    const double C28147 = C28144 + C23405;
    const double C28146 = C28143 + C23406;
    const double C28145 = C28142 + C23404;
    const double C28349 = C28348 + C23666;
    const double C28487 = C28486 + C23665;
    const double C44186 = C44185 + C28140;
    const double C137 =
        (3 * (C46856 + C46859 + C46859 + C46827 * C46887) + C46894 + C46894 +
         C46827 *
             (2 * C46887 + C46891 + C46891 +
              C46827 * (C46882 + C46886 + C46886 +
                        C46827 * (2 * ae * C46876 +
                                  C46827 *
                                      (C46866 * C46867 +
                                       C46831 * bs[6] * std::pow(C46825, 6)) *
                                      C46834)))) /
        C46775;
    const double C153 = C114 * C130;
    const double C151 = C116 * C130;
    const double C149 = C118 * C130;
    const double C4642 = C4622 * C130;
    const double C4640 = C4624 * C130;
    const double C15994 = C15974 * C130;
    const double C15992 = C15976 * C130;
    const double C21724 = C21710 * C130;
    const double C315 = C116 * C287;
    const double C310 = C118 * C287;
    const double C588 = C114 * C287;
    const double C4639 = C4622 * C287;
    const double C4637 = C4624 * C287;
    const double C15991 = C15974 * C287;
    const double C15989 = C15976 * C287;
    const double C21722 = C21710 * C287;
    const double C476 = C116 * C448;
    const double C471 = C118 * C448;
    const double C694 = C114 * C448;
    const double C5028 = C4624 * C448;
    const double C5306 = C4622 * C448;
    const double C16380 = C15976 * C448;
    const double C16658 = C15974 * C448;
    const double C22234 = C21710 * C448;
    const double C5531 = C5525 + C5021;
    const double C16883 = C16877 + C16373;
    const double C22409 = C22403 + C22020;
    const double C46937 = C46901 + C46935;
    const double C47035 = ae * C47030;
    const double C850 = (C47059 * C47030) / C46772;
    const double C47094 = ae * C47089;
    const double C318 = C116 * C288;
    const double C311 = C118 * C288;
    const double C4821 = C4624 * C288;
    const double C5168 = C4622 * C288;
    const double C16173 = C15976 * C288;
    const double C16520 = C15974 * C288;
    const double C21721 = C21710 * C288;
    const double C479 = C116 * C449;
    const double C472 = C118 * C449;
    const double C5031 = C4624 * C449;
    const double C11026 = C4622 * C449;
    const double C16383 = C15976 * C449;
    const double C26708 = C21710 * C449;
    const double C32289 = C15974 * C449;
    const double C4822 = C47839 * C298;
    const double C16174 = C47839 * C298;
    const double C22126 = C47508 * C298;
    const double C6122 = C6116 + C4814;
    const double C17462 = C17456 + C16166;
    const double C21869 = C21857 + C21858;
    const double C6328 = C6322 + C5514;
    const double C17668 = C17662 + C16866;
    const double C22402 = C22393 + C22019;
    const double C5517 = C47839 * C855;
    const double C16869 = C47839 * C855;
    const double C26571 = C47508 * C855;
    const double C7072 = C7070 + C5022;
    const double C18400 = C18398 + C16374;
    const double C26430 = C26423 + C22023;
    const double C10721 = C47839 * C459;
    const double C31984 = C47839 * C459;
    const double C43122 = C47508 * C459;
    const double C12788 = C12782 + C7207;
    const double C34045 = C34039 + C18535;
    const double C42922 = C42919 + C26416;
    const double C5792 = C5788 + C5779;
    const double C17138 = C17134 + C17125;
    const double C22853 = C22852 + C21852;
    const double C6478 = C6476 + C5964;
    const double C17812 = C17810 + C17304;
    const double C23006 = C23005 + C22392;
    const double C12452 = C12448 + C6867;
    const double C33709 = C33705 + C18195;
    const double C44436 = C44435 + C28484;
    const double C46992 = C46948 + C46990;
    const double C47048 = C46934 + C47043;
    const double C47107 = C46934 + C47102;
    const double C47129 = ae * C47122;
    const double C47169 = C47059 * C47122;
    const double C2053 = (C47030 + C47122 * C47066) / C46772;
    const double C47148 = ae * C47141;
    const double C47221 = ae * C47220;
    const double C1061 = (3 * C47023 + C47000 * C47220) / C46772;
    const double C1585 = (C47059 * C47220) / C46772;
    const double C1478 =
        (2 * (2 * ae * C47059 * C47046 + C46827 * C47223) + C47226 + C47226 +
         C46827 *
             (C47223 + C47227 + C47227 +
              C46827 * (2 * ae * C47059 * (C46912 + C46962 * C47007) +
                        C46827 * C47059 *
                            (C46969 + (C46945 * C46946 +
                                       C46831 * bs[8] * std::pow(C46825, 8)) *
                                          C46834 * C47007)))) /
        C46775;
    const double C47267 = ae * C47266;
    const double C1893 = (3 * C47082 + C47059 * C47266) / C46772;
    const double C2054 =
        (2 * (2 * ae * (C47028 + C47119 * C47066) + C46827 * C47254) + C47257 +
         C47257 +
         C46827 * (C47254 + C47258 + C47258 +
                   C46827 * (2 * ae * (C47119 + C47000 * C46962 * C47066) +
                             C46827 * (C47120 + C47000 *
                                                    (C46945 * C46946 +
                                                     C46831 * bs[8] *
                                                         std::pow(C46825, 8)) *
                                                    C46834 * C47066)))) /
        C46775;
    const double C2276 = C118 * C2269;
    const double C7209 = C4624 * C2269;
    const double C18537 = C15976 * C2269;
    const double C26417 = C21710 * C2269;
    const double C1067 =
        (3 * C47022 + C47000 * (2 * C47029 + C47000 * C47047) + C47195 +
         C47195 +
         C46827 *
             (2 * ae *
                  (3 * C47046 +
                   C47000 *
                       (2 * C47119 + C47000 * (C46912 + C46962 * C47007))) +
              C46827 * (3 * C47047 +
                        C47000 * (2 * C47120 +
                                  C47000 * (C46969 + (C46945 * C46946 +
                                                      C46831 * bs[8] *
                                                          std::pow(C46825, 8)) *
                                                         C46834 * C47007))))) /
        C46775;
    const double C5785 = C4624 * C5770;
    const double C17131 = C15976 * C5770;
    const double C22851 = C21710 * C5770;
    const double C6475 = C4624 * C6466;
    const double C17809 = C15976 * C6466;
    const double C23004 = C21710 * C6466;
    const double C1899 =
        (3 * C47081 + C47059 * (2 * C47088 + C47059 * C47106) + C47249 +
         C47249 +
         C46827 *
             (2 * ae *
                  (3 * C47105 +
                   C47059 *
                       (2 * C47138 + C47059 * (C46912 + C46962 * C47066))) +
              C46827 * (3 * C47106 +
                        C47059 * (2 * C47139 +
                                  C47059 * (C46969 + (C46945 * C46946 +
                                                      C46831 * bs[8] *
                                                          std::pow(C46825, 8)) *
                                                         C46834 * C47066))))) /
        C46775;
    const double C12445 = C4624 * C12432;
    const double C33702 = C15976 * C12432;
    const double C44434 = C21710 * C12432;
    const double C4851 = C4839 + C4824;
    const double C4848 = C4836 + C4636;
    const double C4846 = C4834 + C4809;
    const double C4844 = C4832 + C4631;
    const double C4843 = C4831 + C4800;
    const double C4840 = C4828 + C4628;
    const double C5533 = C5527 + C5027;
    const double C5530 = C5524 + C5020;
    const double C5529 = C5523 + C5011;
    const double C5793 = C5789 + C5782;
    const double C5790 = C5786 + C4802;
    const double C5979 = C5973 + C5962;
    const double C5976 = C5970 + C5508;
    const double C5974 = C5968 + C5016;
    const double C6125 = C6123 + C4815;
    const double C6331 = C6329 + C5515;
    const double C6479 = C6477 + C5965;
    const double C7073 = C7071 + C5023;
    const double C7355 = C7353 + C6863;
    const double C10749 = C10737 + C5030;
    const double C10746 = C10734 + C5029;
    const double C10744 = C10732 + C5025;
    const double C10742 = C10730 + C5018;
    const double C10741 = C10729 + C5014;
    const double C10738 = C10726 + C5013;
    const double C12453 = C12449 + C6866;
    const double C12450 = C12446 + C6865;
    const double C12791 = C12789 + C7206;
    const double C16203 = C16191 + C16176;
    const double C16200 = C16188 + C15988;
    const double C16198 = C16186 + C16161;
    const double C16196 = C16184 + C15983;
    const double C16195 = C16183 + C16152;
    const double C16192 = C16180 + C15980;
    const double C16885 = C16879 + C16379;
    const double C16882 = C16876 + C16372;
    const double C16881 = C16875 + C16363;
    const double C17139 = C17135 + C17128;
    const double C17136 = C17132 + C16154;
    const double C17319 = C17313 + C17302;
    const double C17316 = C17310 + C16860;
    const double C17314 = C17308 + C16368;
    const double C17465 = C17463 + C16167;
    const double C17671 = C17669 + C16867;
    const double C17813 = C17811 + C17305;
    const double C18401 = C18399 + C16375;
    const double C18677 = C18675 + C18191;
    const double C32012 = C32000 + C16382;
    const double C32009 = C31997 + C16381;
    const double C32007 = C31995 + C16377;
    const double C32005 = C31993 + C16370;
    const double C32004 = C31992 + C16366;
    const double C32001 = C31989 + C16365;
    const double C33710 = C33706 + C18194;
    const double C33707 = C33703 + C18193;
    const double C34048 = C34046 + C18534;
    const double C4859 = C4847 + C4813;
    const double C4857 = C4845 + C4807;
    const double C4854 = C4842 + C4798;
    const double C4853 = C4841 + C4795;
    const double C5534 = C5528 + C5505;
    const double C5795 = C5791 + C5777;
    const double C5984 = C5978 + C5960;
    const double C5983 = C5977 + C5957;
    const double C5981 = C5975 + C5953;
    const double C7356 = C7354 + C7347;
    const double C10757 = C10745 + C10715;
    const double C10755 = C10743 + C10711;
    const double C10752 = C10740 + C10705;
    const double C10751 = C10739 + C10703;
    const double C12455 = C12451 + C12439;
    const double C16211 = C16199 + C16165;
    const double C16209 = C16197 + C16159;
    const double C16206 = C16194 + C16150;
    const double C16205 = C16193 + C16147;
    const double C16886 = C16880 + C16857;
    const double C17141 = C17137 + C17123;
    const double C17324 = C17318 + C17300;
    const double C17323 = C17317 + C17297;
    const double C17321 = C17315 + C17293;
    const double C18678 = C18676 + C18669;
    const double C32020 = C32008 + C31978;
    const double C32018 = C32006 + C31974;
    const double C32015 = C32003 + C31968;
    const double C32014 = C32002 + C31966;
    const double C33712 = C33708 + C33696;
    const double C21886 = C21877 + C21856;
    const double C21885 = C21876 + C21854;
    const double C21884 = C21875 + C21851;
    const double C21883 = C21874 + C21848;
    const double C21882 = C21873 + C21846;
    const double C21881 = C21872 + C21843;
    const double C21880 = C21871 + C21840;
    const double C21879 = C21870 + C21838;
    const double C22413 = C22407 + C22391;
    const double C22412 = C22406 + C22389;
    const double C22411 = C22405 + C22386;
    const double C22410 = C22404 + C22384;
    const double C22608 = C22606 + C22601;
    const double C22607 = C22605 + C22598;
    const double C22746 = C22742 + C22732;
    const double C22745 = C22741 + C22729;
    const double C22744 = C22740 + C22727;
    const double C22743 = C22739 + C22725;
    const double C23115 = C23114 + C23111;
    const double C23564 = C23562 + C23557;
    const double C23563 = C23561 + C23555;
    const double C23779 = C23777 + C23772;
    const double C23778 = C23776 + C23770;
    const double C26438 = C26431 + C26415;
    const double C26436 = C26429 + C26411;
    const double C26435 = C26428 + C26409;
    const double C26434 = C26427 + C26407;
    const double C26433 = C26426 + C26405;
    const double C26432 = C26425 + C26403;
    const double C28150 = C28147 + C28139;
    const double C28149 = C28146 + C28137;
    const double C28148 = C28145 + C28135;
    const double C28350 = C28349 + C28346;
    const double C28488 = C28487 + C28483;
    const double C44187 = C44186 + C44183;
    const double C5170 = C5164 + C4639;
    const double C4837 = C4818 + C4637;
    const double C16522 = C16516 + C15991;
    const double C16189 = C16170 + C15989;
    const double C22128 = C22123 + C21722;
    const double C10735 = C10718 + C5028;
    const double C11028 = C11022 + C5306;
    const double C31998 = C31981 + C16380;
    const double C32291 = C32285 + C16658;
    const double C26710 = C26706 + C22234;
    const double C5537 = C5531 + C5513;
    const double C16889 = C16883 + C16865;
    const double C22415 = C22409 + C22396;
    const double C46938 = C46937 + C46924;
    const double C299 =
        (3 * (C47013 + C47017 + C47017 + C46827 * C47039) + C47035 + C47035 +
         C46827 * (2 * C47039 + C47036 + C47036 +
                   C46827 * (C47029 + C47037 + C47037 +
                             C46827 * (2 * ae * C47000 * C46912 +
                                       C46827 * C47000 * C46969)))) /
        C46775;
    const double C865 = C116 * C850;
    const double C861 = C118 * C850;
    const double C5026 = C4624 * C850;
    const double C5308 = C4622 * C850;
    const double C16378 = C15976 * C850;
    const double C16660 = C15974 * C850;
    const double C22235 = C21710 * C850;
    const double C460 =
        (3 * (C47072 + C47076 + C47076 + C46827 * C47098) + C47094 + C47094 +
         C46827 * (2 * C47098 + C47095 + C47095 +
                   C46827 * (C47088 + C47096 + C47096 +
                             C46827 * (2 * ae * C47059 * C46912 +
                                       C46827 * C47059 * C46969)))) /
        C46775;
    const double C4838 = C4820 + C4821;
    const double C16190 = C16172 + C16173;
    const double C22129 = C22125 + C21721;
    const double C10736 = C10720 + C5031;
    const double C31999 = C31983 + C16383;
    const double C43124 = C43121 + C26708;
    const double C6124 = C6122 + C4814;
    const double C17464 = C17462 + C16166;
    const double C21878 = C21869 + C21858;
    const double C6330 = C6328 + C5514;
    const double C17670 = C17668 + C16866;
    const double C22408 = C22402 + C22019;
    const double C7074 = C7072 + C7065;
    const double C18402 = C18400 + C18393;
    const double C26437 = C26430 + C26413;
    const double C12790 = C12788 + C7207;
    const double C34047 = C34045 + C18535;
    const double C42923 = C42922 + C26416;
    const double C5796 = C5792 + C5780;
    const double C17142 = C17138 + C17126;
    const double C22854 = C22853 + C22850;
    const double C6480 = C6478 + C6471;
    const double C17814 = C17812 + C17805;
    const double C23007 = C23006 + C23003;
    const double C12456 = C12452 + C12441;
    const double C33713 = C33709 + C33698;
    const double C44437 = C44436 + C44433;
    const double C46993 = C46992 + C46974;
    const double C47053 = ae * C47048;
    const double C1325 = (2 * C47030 + C47000 * C47048) / C46772;
    const double C1477 = (C47059 * C47048) / C46772;
    const double C47112 = ae * C47107;
    const double C2161 = (2 * C47089 + C47059 * C47107) / C46772;
    const double C47174 = ae * C47169;
    const double C2058 = C118 * C2053;
    const double C5033 = C4624 * C2053;
    const double C16385 = C15976 * C2053;
    const double C26709 = C21710 * C2053;
    const double C1326 =
        (2 * (2 * ae * (2 * C47028 + C47000 * C47046) + C46827 * C47219) +
         C47221 + C47221 +
         C46827 *
             (C47219 + C47218 + C47218 +
              C46827 *
                  (2 * ae * (2 * C47119 + C47000 * (C46912 + C46962 * C47007)) +
                   C46827 * (2 * C47120 +
                             C47000 * (C46969 +
                                       (C46945 * C46946 +
                                        C46831 * bs[8] * std::pow(C46825, 8)) *
                                           C46834 * C47007))))) /
        C46775;
    const double C1074 = C118 * C1061;
    const double C6121 = C4624 * C1061;
    const double C17461 = C15976 * C1061;
    const double C21860 = C21710 * C1061;
    const double C1592 = C118 * C1585;
    const double C6327 = C4624 * C1585;
    const double C17667 = C15976 * C1585;
    const double C22397 = C21710 * C1585;
    const double C2162 =
        (2 * (2 * ae * (2 * C47087 + C47059 * C47105) + C46827 * C47265) +
         C47267 + C47267 +
         C46827 *
             (C47265 + C47264 + C47264 +
              C46827 *
                  (2 * ae * (2 * C47138 + C47059 * (C46912 + C46962 * C47066)) +
                   C46827 * (2 * C47139 +
                             C47059 * (C46969 +
                                       (C46945 * C46946 +
                                        C46831 * bs[8] * std::pow(C46825, 8)) *
                                           C46834 * C47066))))) /
        C46775;
    const double C1906 = C118 * C1893;
    const double C12787 = C4624 * C1893;
    const double C34044 = C15976 * C1893;
    const double C42921 = C21710 * C1893;
    const double C4863 = C4851 + C4825;
    const double C4860 = C4848 + C4817;
    const double C4858 = C4846 + C4810;
    const double C4856 = C4844 + C4805;
    const double C4855 = C4843 + C4801;
    const double C4852 = C4840 + C4793;
    const double C5539 = C5533 + C5519;
    const double C5536 = C5530 + C5511;
    const double C5535 = C5529 + C5507;
    const double C5797 = C5793 + C5783;
    const double C5794 = C5790 + C5775;
    const double C5985 = C5979 + C5963;
    const double C5982 = C5976 + C5955;
    const double C5980 = C5974 + C5951;
    const double C6127 = C6125 + C6119;
    const double C6333 = C6331 + C6325;
    const double C6481 = C6479 + C6473;
    const double C7075 = C7073 + C7067;
    const double C7357 = C7355 + C7349;
    const double C10761 = C10749 + C10723;
    const double C10758 = C10746 + C10717;
    const double C10756 = C10744 + C10713;
    const double C10754 = C10742 + C10709;
    const double C10753 = C10741 + C10707;
    const double C10750 = C10738 + C10701;
    const double C12457 = C12453 + C12443;
    const double C12454 = C12450 + C12437;
    const double C12793 = C12791 + C12785;
    const double C16215 = C16203 + C16177;
    const double C16212 = C16200 + C16169;
    const double C16210 = C16198 + C16162;
    const double C16208 = C16196 + C16157;
    const double C16207 = C16195 + C16153;
    const double C16204 = C16192 + C16145;
    const double C16891 = C16885 + C16871;
    const double C16888 = C16882 + C16863;
    const double C16887 = C16881 + C16859;
    const double C17143 = C17139 + C17129;
    const double C17140 = C17136 + C17121;
    const double C17325 = C17319 + C17303;
    const double C17322 = C17316 + C17295;
    const double C17320 = C17314 + C17291;
    const double C17467 = C17465 + C17459;
    const double C17673 = C17671 + C17665;
    const double C17815 = C17813 + C17807;
    const double C18403 = C18401 + C18395;
    const double C18679 = C18677 + C18671;
    const double C32024 = C32012 + C31986;
    const double C32021 = C32009 + C31980;
    const double C32019 = C32007 + C31976;
    const double C32017 = C32005 + C31972;
    const double C32016 = C32004 + C31970;
    const double C32013 = C32001 + C31964;
    const double C33714 = C33710 + C33700;
    const double C33711 = C33707 + C33694;
    const double C34050 = C34048 + C34042;
    const double C21895 = C21886 * C47785;
    const double C26255 = C21886 * C10403;
    const double C37384 = C21886 * C31666;
    const double C21894 = C21885 * C47785;
    const double C26252 = C21885 * C10403;
    const double C37381 = C21885 * C31666;
    const double C21893 = C21884 * C47785;
    const double C27428 = C21884 * C10403;
    const double C38508 = C21884 * C31666;
    const double C21892 = C21883 * C47785;
    const double C26250 = C21883 * C10403;
    const double C37379 = C21883 * C31666;
    const double C21891 = C21882 * C47785;
    const double C26248 = C21882 * C10403;
    const double C37377 = C21882 * C31666;
    const double C21890 = C21881 * C47785;
    const double C27141 = C21881 * C10403;
    const double C38221 = C21881 * C31666;
    const double C21889 = C21880 * C47785;
    const double C26247 = C21880 * C10403;
    const double C37376 = C21880 * C31666;
    const double C21888 = C21879 * C47785;
    const double C26244 = C21879 * C10403;
    const double C37373 = C21879 * C31666;
    const double C22419 = C22413 * C47785;
    const double C26251 = C22413 * C47872;
    const double C27624 = C22413 * C10403;
    const double C37380 = C22413 * C47872;
    const double C38704 = C22413 * C31666;
    const double C22418 = C22412 * C47785;
    const double C26249 = C22412 * C47872;
    const double C26909 = C22412 * C10403;
    const double C37378 = C22412 * C47872;
    const double C37989 = C22412 * C31666;
    const double C22417 = C22411 * C47785;
    const double C26245 = C22411 * C47872;
    const double C26908 = C22411 * C10403;
    const double C37374 = C22411 * C47872;
    const double C37988 = C22411 * C31666;
    const double C22416 = C22410 * C47785;
    const double C26246 = C22410 * C47872;
    const double C27293 = C22410 * C10403;
    const double C37375 = C22410 * C47872;
    const double C38373 = C22410 * C31666;
    const double C22610 = C22608 * C47785;
    const double C22609 = C22607 * C47785;
    const double C27144 = C22607 * C10403;
    const double C38224 = C22607 * C31666;
    const double C22750 = C22746 * C47785;
    const double C27755 = C22746 * C47872;
    const double C38835 = C22746 * C47872;
    const double C22749 = C22745 * C47785;
    const double C27142 = C22745 * C47872;
    const double C27756 = C22745 * C10403;
    const double C38222 = C22745 * C47872;
    const double C38836 = C22745 * C31666;
    const double C22748 = C22744 * C47785;
    const double C27296 = C22744 * C10403;
    const double C27294 = C22744 * C47872;
    const double C38376 = C22744 * C31666;
    const double C38374 = C22744 * C47872;
    const double C22747 = C22743 * C47785;
    const double C26907 = C22743 * C47872;
    const double C27291 = C22743 * C10403;
    const double C37987 = C22743 * C47872;
    const double C38371 = C22743 * C31666;
    const double C23116 = C23115 * C47785;
    const double C27143 = C23115 * C47872;
    const double C38223 = C23115 * C47872;
    const double C23566 = C23564 * C47785;
    const double C26910 = C23564 * C47872;
    const double C28347 = C23564 * C10403;
    const double C37990 = C23564 * C47872;
    const double C39406 = C23564 * C31666;
    const double C23565 = C23563 * C47785;
    const double C27623 = C23563 * C47872;
    const double C38703 = C23563 * C47872;
    const double C23781 = C23779 * C47785;
    const double C27292 = C23779 * C47872;
    const double C28620 = C23779 * C10403;
    const double C38372 = C23779 * C47872;
    const double C39668 = C23779 * C31666;
    const double C23780 = C23778 * C47785;
    const double C27295 = C23778 * C47872;
    const double C38375 = C23778 * C47872;
    const double C28619 = C28149 * C47872;
    const double C39667 = C28149 * C47872;
    const double C28351 = C28350 * C47872;
    const double C39405 = C28350 * C47872;
    const double C5172 = C5170 + C4639;
    const double C4849 = C4837 + C4637;
    const double C16524 = C16522 + C15991;
    const double C16201 = C16189 + C15989;
    const double C22130 = C22128 + C21722;
    const double C10747 = C10735 + C5028;
    const double C11030 = C11028 + C5306;
    const double C32010 = C31998 + C16380;
    const double C32293 = C32291 + C16658;
    const double C26711 = C26710 + C22234;
    const double C22421 = C22415 * C47785;
    const double C26253 = C22415 * C47872;
    const double C26912 = C22415 * C10403;
    const double C37382 = C22415 * C47872;
    const double C37992 = C22415 * C31666;
    const double C46939 = ae * C46938;
    const double C131 =
        (4 * C46893 + C46827 * C46938 + (3 * C46878 + C46827 * C46921) * ae) /
        C46772;
    const double C289 = (C47000 * C46938) / C46772;
    const double C450 = (C47059 * C46938) / C46772;
    const double C5167 = C47839 * C299;
    const double C16519 = C47839 * C299;
    const double C5526 = C5516 + C5026;
    const double C16878 = C16868 + C16378;
    const double C26572 = C26570 + C22235;
    const double C11025 = C47839 * C460;
    const double C32288 = C47839 * C460;
    const double C4850 = C4838 + C4821;
    const double C16202 = C16190 + C16173;
    const double C22131 = C22129 + C21721;
    const double C10748 = C10736 + C5031;
    const double C32011 = C31999 + C16383;
    const double C43125 = C43124 + C26708;
    const double C6126 = C6124 + C6117;
    const double C17466 = C17464 + C17457;
    const double C21887 = C21878 + C21859;
    const double C6332 = C6330 + C6323;
    const double C17672 = C17670 + C17663;
    const double C22414 = C22408 + C22394;
    const double C26911 = C26437 * C47872;
    const double C37991 = C26437 * C47872;
    const double C12792 = C12790 + C12783;
    const double C34049 = C34047 + C34040;
    const double C42924 = C42923 + C42920;
    const double C22855 = C22854 * C47785;
    const double C23008 = C23007 * C47785;
    const double C27427 = C23007 * C47872;
    const double C38507 = C23007 * C47872;
    const double C46995 = ae * C46993;
    const double C46994 = C46827 * C46993;
    const double C47121 = C47000 * C46993;
    const double C47140 = C47059 * C46993;
    const double C290 = (C46938 + C46993 * C47007) / C46772;
    const double C451 = (C46938 + C46993 * C47066) / C46772;
    const double C300 =
        (3 * (C47022 + C47026 + C47026 + C46827 * C47057) + C47053 + C47053 +
         C46827 *
             (2 * C47057 + C47054 + C47054 +
              C46827 * (C47047 + C47055 + C47055 +
                        C46827 * (2 * ae * (C46912 + C46962 * C47007) +
                                  C46827 * (C46969 + (C46945 * C46946 +
                                                      C46831 * bs[8] *
                                                          std::pow(C46825, 8)) *
                                                         C46834 * C47007))))) /
        C46775;
    const double C1330 = C118 * C1325;
    const double C4827 = C4624 * C1325;
    const double C16179 = C15976 * C1325;
    const double C22127 = C21710 * C1325;
    const double C1482 = C118 * C1477;
    const double C5521 = C4624 * C1477;
    const double C16873 = C15976 * C1477;
    const double C22236 = C21710 * C1477;
    const double C461 =
        (3 * (C47081 + C47085 + C47085 + C46827 * C47116) + C47112 + C47112 +
         C46827 *
             (2 * C47116 + C47113 + C47113 +
              C46827 * (C47106 + C47114 + C47114 +
                        C46827 * (2 * ae * (C46912 + C46962 * C47066) +
                                  C46827 * (C46969 + (C46945 * C46946 +
                                                      C46831 * bs[8] *
                                                          std::pow(C46825, 8)) *
                                                         C46834 * C47066))))) /
        C46775;
    const double C2166 = C118 * C2161;
    const double C10725 = C4624 * C2161;
    const double C31988 = C15976 * C2161;
    const double C43123 = C21710 * C2161;
    const double C856 =
        (3 * (C47161 + C47165 + C47165 + C46827 * C47178) + C47174 + C47174 +
         C46827 *
             (2 * C47178 + C47175 + C47175 +
              C46827 * (C47168 + C47176 + C47176 +
                        C46827 * (2 * ae * C47059 * C47000 * C46962 +
                                  C46827 * C47059 * C47000 *
                                      (C46945 * C46946 +
                                       C46831 * bs[8] * std::pow(C46825, 8)) *
                                      C46834)))) /
        C46775;
    const double C5174 = C5172 + C5165;
    const double C4861 = C4849 + C4819;
    const double C16526 = C16524 + C16517;
    const double C16213 = C16201 + C16171;
    const double C22132 = C22130 + C22124;
    const double C10759 = C10747 + C10719;
    const double C11032 = C11030 + C11023;
    const double C32022 = C32010 + C31982;
    const double C32295 = C32293 + C32286;
    const double C26712 = C26711 + C26707;
    const double C138 =
        (4 * (2 * C46887 + C46891 + C46891 + C46827 * C46930) + C46939 +
         C46939 +
         C46827 * (3 * C46930 + C46936 + C46936 +
                   C46827 * (2 * C46926 + C46932 + C46932 +
                             C46827 * (C46919 + C46925 + C46925 +
                                       C46827 * (2 * ae * C46912 +
                                                 C46827 *
                                                     (C46899 * C46900 +
                                                      C46831 * bs[7] *
                                                          std::pow(C46833, 7)) *
                                                     C46834))))) /
        C46775;
    const double C154 = C116 * C131;
    const double C150 = C118 * C131;
    const double C4643 = C4624 * C131;
    const double C15995 = C15976 * C131;
    const double C314 = C118 * C289;
    const double C589 = C116 * C289;
    const double C4644 = C4622 * C289;
    const double C4638 = C4624 * C289;
    const double C15996 = C15974 * C289;
    const double C15990 = C15976 * C289;
    const double C21725 = C21710 * C289;
    const double C475 = C118 * C450;
    const double C695 = C116 * C450;
    const double C5307 = C4624 * C450;
    const double C10406 = C4622 * C450;
    const double C16659 = C15976 * C450;
    const double C26096 = C21710 * C450;
    const double C31669 = C15974 * C450;
    const double C5532 = C5526 + C5026;
    const double C16884 = C16878 + C16378;
    const double C26573 = C26572 + C22235;
    const double C4862 = C4850 + C4822;
    const double C16214 = C16202 + C16174;
    const double C22133 = C22131 + C22126;
    const double C10760 = C10748 + C10721;
    const double C32023 = C32011 + C31984;
    const double C43126 = C43125 + C43122;
    const double C21896 = C21887 * C47785;
    const double C22420 = C22414 * C47785;
    const double C26254 = C22414 * C47872;
    const double C37383 = C22414 * C47872;
    const double C46996 = C46947 + C46994;
    const double C47128 = ae * C47121;
    const double C851 = (C47059 * C47121) / C46772;
    const double C47147 = ae * C47140;
    const double C319 = C118 * C290;
    const double C5169 = C4624 * C290;
    const double C16521 = C15976 * C290;
    const double C21726 = C21710 * C290;
    const double C480 = C118 * C451;
    const double C11027 = C4624 * C451;
    const double C32290 = C15976 * C451;
    const double C42698 = C21710 * C451;
    const double C22134 = C22132 * C47785;
    const double C26569 = C22132 * C10403;
    const double C37661 = C22132 * C31666;
    const double C5171 = C5166 + C4638;
    const double C16523 = C16518 + C15990;
    const double C11029 = C11024 + C5307;
    const double C32292 = C32287 + C16659;
    const double C5538 = C5532 + C5517;
    const double C16890 = C16884 + C16869;
    const double C26574 = C26573 + C26571;
    const double C22135 = C22133 * C47785;
    const double C46997 = C46996 + C46982;
    const double C586 =
        (4 * (2 * C47039 + C47036 + C47036 + C46827 * C47135) + C47128 +
         C47128 +
         C46827 * (3 * C47135 + C47129 + C47129 +
                   C46827 * (2 * C47133 + C47130 + C47130 +
                             C46827 * (C47120 + C47131 + C47131 +
                                       C46827 * (2 * ae * C47000 * C46962 +
                                                 C46827 * C47000 *
                                                     (C46945 * C46946 +
                                                      C46831 * bs[8] *
                                                          std::pow(C46825, 8)) *
                                                     C46834))))) /
        C46775;
    const double C866 = C118 * C851;
    const double C5309 = C4624 * C851;
    const double C16661 = C15976 * C851;
    const double C26097 = C21710 * C851;
    const double C692 =
        (4 * (2 * C47098 + C47095 + C47095 + C46827 * C47154) + C47147 +
         C47147 +
         C46827 * (3 * C47154 + C47148 + C47148 +
                   C46827 * (2 * C47152 + C47149 + C47149 +
                             C46827 * (C47139 + C47150 + C47150 +
                                       C46827 * (2 * ae * C47059 * C46962 +
                                                 C46827 * C47059 *
                                                     (C46945 * C46946 +
                                                      C46831 * bs[8] *
                                                          std::pow(C46825, 8)) *
                                                     C46834))))) /
        C46775;
    const double C5173 = C5171 + C4638;
    const double C16525 = C16523 + C15990;
    const double C11031 = C11029 + C5307;
    const double C32294 = C32292 + C16659;
    const double C26575 = C26574 * C47872;
    const double C37662 = C26574 * C47872;
    const double C46998 = ae * C46997;
    const double C132 =
        (5 * C46938 + C46827 * C46997 + (4 * C46921 + C46827 * C46979) * ae) /
        C46772;
    const double C585 = (C47000 * C46997) / C46772;
    const double C691 = (C47059 * C46997) / C46772;
    const double C5175 = C5173 + C5167;
    const double C16527 = C16525 + C16519;
    const double C11033 = C11031 + C11025;
    const double C32296 = C32294 + C32288;
    const double C139 =
        (5 * (3 * C46930 + C46936 + C46936 + C46827 * C46988) + C46998 +
         C46998 +
         C46827 *
             (4 * C46988 + C46995 + C46995 +
              C46827 *
                  (3 * C46983 + C46991 + C46991 +
                   C46827 * (2 * C46977 + C46985 + C46985 +
                             C46827 * (C46969 + C46976 + C46976 +
                                       C46827 * (2 * ae * C46962 +
                                                 C46827 *
                                                     (C46945 * C46946 +
                                                      C46831 * bs[8] *
                                                          std::pow(C46825, 8)) *
                                                     C46834)))))) /
        C46775;
    const double C155 = C118 * C132;
    const double C590 = C118 * C585;
    const double C4645 = C4624 * C585;
    const double C15997 = C15976 * C585;
    const double C696 = C118 * C691;
    const double C10407 = C4624 * C691;
    const double C31670 = C15976 * C691;
    d2ee[0] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C119 + C141 + C141 + C101 * C133 + C115 * C120 + C142 +
            C142 + C102 * C134 + C117 * C121 + C143 + C143 + C103 * C135) *
               C47785 * C47770 * C47581 * C47622 -
           (C117 * C271 + C302 + C302 + C103 * C291 + C115 * C272 + C303 +
            C303 + C102 * C292 + C113 * C273 + C304 + C304 + C101 * C293) *
               C47785 * C47770 * C47581 * C47629 +
           (C113 * C274 + C305 + C305 + C101 * C294 + C115 * C275 + C306 +
            C306 + C102 * C295 + C117 * C276 + C307 + C307 + C103 * C296) *
               C47785 * C47770 * C47581 * C2742) *
              C47540 +
          ((C113 * C272 + C308 + C308 + C101 * C292 + C115 * C271 + C309 +
            C309 + C102 * C291 + C117 * C277 + C310 + C310 + C103 * C297) *
               C47785 * C47770 * C47581 * C47629 -
           (C117 * C122 + C144 + C144 + C103 * C136 + C115 * C121 + C145 +
            C145 + C102 * C135 + C113 * C120 + C146 + C146 + C101 * C134) *
               C47785 * C47770 * C47581 * C47622 -
           (C117 * C278 + C311 + C311 + C103 * C298 + C115 * C276 + C312 +
            C312 + C102 * C296 + C113 * C275 + C313 + C313 + C101 * C295) *
               C47785 * C47770 * C47581 * C2742) *
              C47549 +
          ((C113 * C121 + C147 + C147 + C101 * C135 + C115 * C122 + C148 +
            C148 + C102 * C136 + C117 * C123 + C149 + C149 + C103 * C137) *
               C47785 * C47770 * C47581 * C47622 -
           (C117 * C279 + C314 + C314 + C103 * C299 + C115 * C277 + C315 +
            C315 + C102 * C297 + C113 * C271 + C316 + C316 + C101 * C291) *
               C47785 * C47770 * C47581 * C47629 +
           (C113 * C276 + C317 + C317 + C101 * C296 + C115 * C278 + C318 +
            C318 + C102 * C298 + C117 * C280 + C319 + C319 + C103 * C300) *
               C47785 * C47770 * C47581 * C2742) *
              C2745)) /
        (p * q * std::sqrt(p + q));
    d2ee[1] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C119 + C141 + C141 + C101 * C133 + C115 * C120 + C142 +
             C142 + C102 * C134 + C117 * C121 + C143 + C143 + C103 * C135) *
                C47785 * C47770 * C47821 -
            (C117 * C432 + C463 + C463 + C103 * C452 + C115 * C433 + C464 +
             C464 + C102 * C453 + C113 * C434 + C465 + C465 + C101 * C454) *
                C47785 * C47770 * C47668) *
               C47622 +
           ((C113 * C842 + C858 + C858 + C101 * C852 + C115 * C843 + C859 +
             C859 + C102 * C853 + C117 * C844 + C860 + C860 + C103 * C854) *
                C47785 * C47770 * C47668 -
            (C117 * C271 + C302 + C302 + C103 * C291 + C115 * C272 + C303 +
             C303 + C102 * C292 + C113 * C273 + C304 + C304 + C101 * C293) *
                C47785 * C47770 * C47821) *
               C47629 +
           ((C113 * C274 + C305 + C305 + C101 * C294 + C115 * C275 + C306 +
             C306 + C102 * C295 + C117 * C276 + C307 + C307 + C103 * C296) *
                C47785 * C47770 * C47821 -
            (C117 * C1187 + C1215 + C1215 + C103 * C1205 + C115 * C1188 +
             C1216 + C1216 + C102 * C1206 + C113 * C1189 + C1217 + C1217 +
             C101 * C1207) *
                C47785 * C47770 * C47668) *
               C2742) *
              C2482 +
          (((C113 * C433 + C469 + C469 + C101 * C453 + C115 * C432 + C470 +
             C470 + C102 * C452 + C117 * C438 + C471 + C471 + C103 * C458) *
                C47785 * C47770 * C47668 -
            (C117 * C122 + C144 + C144 + C103 * C136 + C115 * C121 + C145 +
             C145 + C102 * C135 + C113 * C120 + C146 + C146 + C101 * C134) *
                C47785 * C47770 * C47821) *
               C47622 +
           ((C113 * C272 + C308 + C308 + C101 * C292 + C115 * C271 + C309 +
             C309 + C102 * C291 + C117 * C277 + C310 + C310 + C103 * C297) *
                C47785 * C47770 * C47821 -
            (C117 * C845 + C861 + C861 + C103 * C855 + C115 * C844 + C862 +
             C862 + C102 * C854 + C113 * C843 + C863 + C863 + C101 * C853) *
                C47785 * C47770 * C47668) *
               C47629 +
           ((C113 * C1188 + C1480 + C1480 + C101 * C1206 + C115 * C1187 +
             C1481 + C1481 + C102 * C1205 + C117 * C1476 + C1482 + C1482 +
             C103 * C1478) *
                C47785 * C47770 * C47668 -
            (C117 * C278 + C311 + C311 + C103 * C298 + C115 * C276 + C312 +
             C312 + C102 * C296 + C113 * C275 + C313 + C313 + C101 * C295) *
                C47785 * C47770 * C47821) *
               C2742) *
              C47546)) /
        (p * q * std::sqrt(p + q));
    d2ee[2] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C119 + C141 + C141 + C101 * C133 + C115 * C120 + C142 +
            C142 + C102 * C134 + C117 * C121 + C143 + C143 + C103 * C135) *
               C47785 * C47770 * C47581 * C47898 -
           (C117 * C271 + C302 + C302 + C103 * C291 + C115 * C272 + C303 +
            C303 + C102 * C292 + C113 * C273 + C304 + C304 + C101 * C293) *
               C47785 * C47770 * C47581 * C47894 +
           (C113 * C274 + C305 + C305 + C101 * C294 + C115 * C275 + C306 +
            C306 + C102 * C295 + C117 * C276 + C307 + C307 + C103 * C296) *
               C47785 * C47770 * C47581 * C47884 -
           (C117 * C1050 + C1069 + C1069 + C103 * C1062 + C115 * C1051 + C1070 +
            C1070 + C102 * C1063 + C113 * C1052 + C1071 + C1071 +
            C101 * C1064) *
               C47785 * C47770 * C47581 * C47862) *
              C2482 +
          ((C113 * C272 + C308 + C308 + C101 * C292 + C115 * C271 + C309 +
            C309 + C102 * C291 + C117 * C277 + C310 + C310 + C103 * C297) *
               C47785 * C47770 * C47581 * C47894 -
           (C117 * C122 + C144 + C144 + C103 * C136 + C115 * C121 + C145 +
            C145 + C102 * C135 + C113 * C120 + C146 + C146 + C101 * C134) *
               C47785 * C47770 * C47581 * C47898 -
           (C117 * C278 + C311 + C311 + C103 * C298 + C115 * C276 + C312 +
            C312 + C102 * C296 + C113 * C275 + C313 + C313 + C101 * C295) *
               C47785 * C47770 * C47581 * C47884 +
           (C113 * C1051 + C1328 + C1328 + C101 * C1063 + C115 * C1050 + C1329 +
            C1329 + C102 * C1062 + C117 * C1324 + C1330 + C1330 +
            C103 * C1326) *
               C47785 * C47770 * C47581 * C47862) *
              C47546)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C119 + C141 + C141 + C101 * C133 + C115 * C120 + C142 +
            C142 + C102 * C134 + C117 * C121 + C143 + C143 + C103 * C135) *
               C47785 * C47770 * C47581 * C2374 -
           (C117 * C271 + C302 + C302 + C103 * C291 + C115 * C272 + C303 +
            C303 + C102 * C292 + C113 * C273 + C304 + C304 + C101 * C293) *
               C47785 * C47770 * C47581 * C47626) *
              C47897 +
          ((C113 * C272 + C308 + C308 + C101 * C292 + C115 * C271 + C309 +
            C309 + C102 * C291 + C117 * C277 + C310 + C310 + C103 * C297) *
               C47785 * C47770 * C47581 * C47626 -
           (C117 * C122 + C144 + C144 + C103 * C136 + C115 * C121 + C145 +
            C145 + C102 * C135 + C113 * C120 + C146 + C146 + C101 * C134) *
               C47785 * C47770 * C47581 * C2374) *
              C47890 +
          ((C113 * C121 + C147 + C147 + C101 * C135 + C115 * C122 + C148 +
            C148 + C102 * C136 + C117 * C123 + C149 + C149 + C103 * C137) *
               C47785 * C47770 * C47581 * C2374 -
           (C117 * C279 + C314 + C314 + C103 * C299 + C115 * C277 + C315 +
            C315 + C102 * C297 + C113 * C271 + C316 + C316 + C101 * C291) *
               C47785 * C47770 * C47581 * C47626) *
              C47877 +
          ((C113 * C277 + C588 + C588 + C101 * C297 + C115 * C279 + C589 +
            C589 + C102 * C299 + C117 * C584 + C590 + C590 + C103 * C586) *
               C47785 * C47770 * C47581 * C47626 -
           (C117 * C124 + C150 + C150 + C103 * C138 + C115 * C123 + C151 +
            C151 + C102 * C137 + C113 * C122 + C152 + C152 + C101 * C136) *
               C47785 * C47770 * C47581 * C2374) *
              C47856)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C119 + C141 + C141 + C101 * C133 + C115 * C120 + C142 +
             C142 + C102 * C134 + C117 * C121 + C143 + C143 + C103 * C135) *
                C47785 * C47770 * C47892 -
            (C117 * C432 + C463 + C463 + C103 * C452 + C115 * C433 + C464 +
             C464 + C102 * C453 + C113 * C434 + C465 + C465 + C101 * C454) *
                C47785 * C47770 * C47881 +
            (C113 * C435 + C466 + C466 + C101 * C455 + C115 * C436 + C467 +
             C467 + C102 * C456 + C117 * C437 + C468 + C468 + C103 * C457) *
                C47785 * C47770 * C47855) *
               C2374 +
           ((C113 * C842 + C858 + C858 + C101 * C852 + C115 * C843 + C859 +
             C859 + C102 * C853 + C117 * C844 + C860 + C860 + C103 * C854) *
                C47785 * C47770 * C47881 -
            (C117 * C271 + C302 + C302 + C103 * C291 + C115 * C272 + C303 +
             C303 + C102 * C292 + C113 * C273 + C304 + C304 + C101 * C293) *
                C47785 * C47770 * C47892 -
            (C117 * C1184 + C1212 + C1212 + C103 * C1202 + C115 * C1185 +
             C1213 + C1213 + C102 * C1203 + C113 * C1186 + C1214 + C1214 +
             C101 * C1204) *
                C47785 * C47770 * C47855) *
               C47626) *
              C2482 +
          (((C113 * C433 + C469 + C469 + C101 * C453 + C115 * C432 + C470 +
             C470 + C102 * C452 + C117 * C438 + C471 + C471 + C103 * C458) *
                C47785 * C47770 * C47881 -
            (C117 * C122 + C144 + C144 + C103 * C136 + C115 * C121 + C145 +
             C145 + C102 * C135 + C113 * C120 + C146 + C146 + C101 * C134) *
                C47785 * C47770 * C47892 -
            (C117 * C439 + C472 + C472 + C103 * C459 + C115 * C437 + C473 +
             C473 + C102 * C457 + C113 * C436 + C474 + C474 + C101 * C456) *
                C47785 * C47770 * C47855) *
               C2374 +
           ((C113 * C272 + C308 + C308 + C101 * C292 + C115 * C271 + C309 +
             C309 + C102 * C291 + C117 * C277 + C310 + C310 + C103 * C297) *
                C47785 * C47770 * C47892 -
            (C117 * C845 + C861 + C861 + C103 * C855 + C115 * C844 + C862 +
             C862 + C102 * C854 + C113 * C843 + C863 + C863 + C101 * C853) *
                C47785 * C47770 * C47881 +
            (C113 * C1185 + C2056 + C2056 + C101 * C1203 + C115 * C1184 +
             C2057 + C2057 + C102 * C1202 + C117 * C2052 + C2058 + C2058 +
             C103 * C2054) *
                C47785 * C47770 * C47855) *
               C47626) *
              C47546)) /
            (p * q * std::sqrt(p + q));
    d2ee[3] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C119 + C141 + C141 + C101 * C133 + C115 * C120 + C142 +
             C142 + C102 * C134 + C117 * C121 + C143 + C143 + C103 * C135) *
                C47785 * C47770 * C47821 -
            (C117 * C432 + C463 + C463 + C103 * C452 + C115 * C433 + C464 +
             C464 + C102 * C453 + C113 * C434 + C465 + C465 + C101 * C454) *
                C47785 * C47770 * C47668) *
               C2374 +
           ((C113 * C842 + C858 + C858 + C101 * C852 + C115 * C843 + C859 +
             C859 + C102 * C853 + C117 * C844 + C860 + C860 + C103 * C854) *
                C47785 * C47770 * C47668 -
            (C117 * C271 + C302 + C302 + C103 * C291 + C115 * C272 + C303 +
             C303 + C102 * C292 + C113 * C273 + C304 + C304 + C101 * C293) *
                C47785 * C47770 * C47821) *
               C47626) *
              C47540 +
          (((C113 * C433 + C469 + C469 + C101 * C453 + C115 * C432 + C470 +
             C470 + C102 * C452 + C117 * C438 + C471 + C471 + C103 * C458) *
                C47785 * C47770 * C47668 -
            (C117 * C122 + C144 + C144 + C103 * C136 + C115 * C121 + C145 +
             C145 + C102 * C135 + C113 * C120 + C146 + C146 + C101 * C134) *
                C47785 * C47770 * C47821) *
               C2374 +
           ((C113 * C272 + C308 + C308 + C101 * C292 + C115 * C271 + C309 +
             C309 + C102 * C291 + C117 * C277 + C310 + C310 + C103 * C297) *
                C47785 * C47770 * C47821 -
            (C117 * C845 + C861 + C861 + C103 * C855 + C115 * C844 + C862 +
             C862 + C102 * C854 + C113 * C843 + C863 + C863 + C101 * C853) *
                C47785 * C47770 * C47668) *
               C47626) *
              C47549 +
          (((C113 * C121 + C147 + C147 + C101 * C135 + C115 * C122 + C148 +
             C148 + C102 * C136 + C117 * C123 + C149 + C149 + C103 * C137) *
                C47785 * C47770 * C47821 -
            (C117 * C440 + C475 + C475 + C103 * C460 + C115 * C438 + C476 +
             C476 + C102 * C458 + C113 * C432 + C477 + C477 + C101 * C452) *
                C47785 * C47770 * C47668) *
               C2374 +
           ((C113 * C844 + C864 + C864 + C101 * C854 + C115 * C845 + C865 +
             C865 + C102 * C855 + C117 * C846 + C866 + C866 + C103 * C856) *
                C47785 * C47770 * C47668 -
            (C117 * C279 + C314 + C314 + C103 * C299 + C115 * C277 + C315 +
             C315 + C102 * C297 + C113 * C271 + C316 + C316 + C101 * C291) *
                C47785 * C47770 * C47821) *
               C47626) *
              C2745)) /
        (p * q * std::sqrt(p + q));
    d2ee[4] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C119 + C141 + C141 + C101 * C133 + C115 * C120 + C142 +
            C142 + C102 * C134 + C117 * C121 + C143 + C143 + C103 * C135) *
               C47785 * C47770 * C47581 * C2374 -
           (C117 * C271 + C302 + C302 + C103 * C291 + C115 * C272 + C303 +
            C303 + C102 * C292 + C113 * C273 + C304 + C304 + C101 * C293) *
               C47785 * C47770 * C47581 * C47626) *
              C47897 +
          ((C113 * C272 + C308 + C308 + C101 * C292 + C115 * C271 + C309 +
            C309 + C102 * C291 + C117 * C277 + C310 + C310 + C103 * C297) *
               C47785 * C47770 * C47581 * C47626 -
           (C117 * C122 + C144 + C144 + C103 * C136 + C115 * C121 + C145 +
            C145 + C102 * C135 + C113 * C120 + C146 + C146 + C101 * C134) *
               C47785 * C47770 * C47581 * C2374) *
              C47890 +
          ((C113 * C121 + C147 + C147 + C101 * C135 + C115 * C122 + C148 +
            C148 + C102 * C136 + C117 * C123 + C149 + C149 + C103 * C137) *
               C47785 * C47770 * C47581 * C2374 -
           (C117 * C279 + C314 + C314 + C103 * C299 + C115 * C277 + C315 +
            C315 + C102 * C297 + C113 * C271 + C316 + C316 + C101 * C291) *
               C47785 * C47770 * C47581 * C47626) *
              C47877 +
          ((C113 * C277 + C588 + C588 + C101 * C297 + C115 * C279 + C589 +
            C589 + C102 * C299 + C117 * C584 + C590 + C590 + C103 * C586) *
               C47785 * C47770 * C47581 * C47626 -
           (C117 * C124 + C150 + C150 + C103 * C138 + C115 * C123 + C151 +
            C151 + C102 * C137 + C113 * C122 + C152 + C152 + C101 * C136) *
               C47785 * C47770 * C47581 * C2374) *
              C47856)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C119 + C141 + C141 + C101 * C133 + C115 * C120 + C142 +
            C142 + C102 * C134 + C117 * C121 + C143 + C143 + C103 * C135) *
               C47785 * C47770 * C47581 * C47898 -
           (C117 * C271 + C302 + C302 + C103 * C291 + C115 * C272 + C303 +
            C303 + C102 * C292 + C113 * C273 + C304 + C304 + C101 * C293) *
               C47785 * C47770 * C47581 * C47894 +
           (C113 * C274 + C305 + C305 + C101 * C294 + C115 * C275 + C306 +
            C306 + C102 * C295 + C117 * C276 + C307 + C307 + C103 * C296) *
               C47785 * C47770 * C47581 * C47884 -
           (C117 * C1050 + C1069 + C1069 + C103 * C1062 + C115 * C1051 + C1070 +
            C1070 + C102 * C1063 + C113 * C1052 + C1071 + C1071 +
            C101 * C1064) *
               C47785 * C47770 * C47581 * C47862) *
              C2482 +
          ((C113 * C272 + C308 + C308 + C101 * C292 + C115 * C271 + C309 +
            C309 + C102 * C291 + C117 * C277 + C310 + C310 + C103 * C297) *
               C47785 * C47770 * C47581 * C47894 -
           (C117 * C122 + C144 + C144 + C103 * C136 + C115 * C121 + C145 +
            C145 + C102 * C135 + C113 * C120 + C146 + C146 + C101 * C134) *
               C47785 * C47770 * C47581 * C47898 -
           (C117 * C278 + C311 + C311 + C103 * C298 + C115 * C276 + C312 +
            C312 + C102 * C296 + C113 * C275 + C313 + C313 + C101 * C295) *
               C47785 * C47770 * C47581 * C47884 +
           (C113 * C1051 + C1328 + C1328 + C101 * C1063 + C115 * C1050 + C1329 +
            C1329 + C102 * C1062 + C117 * C1324 + C1330 + C1330 +
            C103 * C1326) *
               C47785 * C47770 * C47581 * C47862) *
              C47546)) /
            (p * q * std::sqrt(p + q));
    d2ee[5] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C119 + C141 + C141 + C101 * C133 + C115 * C120 + C142 +
             C142 + C102 * C134 + C117 * C121 + C143 + C143 + C103 * C135) *
                C47785 * C47770 * C3136 -
            (C117 * C432 + C463 + C463 + C103 * C452 + C115 * C433 + C464 +
             C464 + C102 * C453 + C113 * C434 + C465 + C465 + C101 * C454) *
                C47785 * C47770 * C47668) *
               C47622 +
           ((C113 * C842 + C858 + C858 + C101 * C852 + C115 * C843 + C859 +
             C859 + C102 * C853 + C117 * C844 + C860 + C860 + C103 * C854) *
                C47785 * C47770 * C47668 -
            (C117 * C271 + C302 + C302 + C103 * C291 + C115 * C272 + C303 +
             C303 + C102 * C292 + C113 * C273 + C304 + C304 + C101 * C293) *
                C47785 * C47770 * C3136) *
               C47629 +
           ((C113 * C274 + C305 + C305 + C101 * C294 + C115 * C275 + C306 +
             C306 + C102 * C295 + C117 * C276 + C307 + C307 + C103 * C296) *
                C47785 * C47770 * C3136 -
            (C117 * C1187 + C1215 + C1215 + C103 * C1205 + C115 * C1188 +
             C1216 + C1216 + C102 * C1206 + C113 * C1189 + C1217 + C1217 +
             C101 * C1207) *
                C47785 * C47770 * C47668) *
               C2742) *
              C47806 +
          (((C113 * C433 + C469 + C469 + C101 * C453 + C115 * C432 + C470 +
             C470 + C102 * C452 + C117 * C438 + C471 + C471 + C103 * C458) *
                C47785 * C47770 * C47668 -
            (C117 * C122 + C144 + C144 + C103 * C136 + C115 * C121 + C145 +
             C145 + C102 * C135 + C113 * C120 + C146 + C146 + C101 * C134) *
                C47785 * C47770 * C3136) *
               C47622 +
           ((C113 * C272 + C308 + C308 + C101 * C292 + C115 * C271 + C309 +
             C309 + C102 * C291 + C117 * C277 + C310 + C310 + C103 * C297) *
                C47785 * C47770 * C3136 -
            (C117 * C845 + C861 + C861 + C103 * C855 + C115 * C844 + C862 +
             C862 + C102 * C854 + C113 * C843 + C863 + C863 + C101 * C853) *
                C47785 * C47770 * C47668) *
               C47629 +
           ((C113 * C1188 + C1480 + C1480 + C101 * C1206 + C115 * C1187 +
             C1481 + C1481 + C102 * C1205 + C117 * C1476 + C1482 + C1482 +
             C103 * C1478) *
                C47785 * C47770 * C47668 -
            (C117 * C278 + C311 + C311 + C103 * C298 + C115 * C276 + C312 +
             C312 + C102 * C296 + C113 * C275 + C313 + C313 + C101 * C295) *
                C47785 * C47770 * C3136) *
               C2742) *
              C47546)) /
        (p * q * std::sqrt(p + q));
    d2ee[6] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C119 + C141 + C141 + C101 * C133 + C115 * C120 + C142 +
            C142 + C102 * C134 + C117 * C121 + C143 + C143 + C103 * C135) *
               C47785 * C47770 * C47664 -
           (C117 * C432 + C463 + C463 + C103 * C452 + C115 * C433 + C464 +
            C464 + C102 * C453 + C113 * C434 + C465 + C465 + C101 * C454) *
               C47785 * C47770 * C47671 +
           (C113 * C435 + C466 + C466 + C101 * C455 + C115 * C436 + C467 +
            C467 + C102 * C456 + C117 * C437 + C468 + C468 + C103 * C457) *
               C47785 * C47770 * C3644) *
              C47622 +
          ((C113 * C842 + C858 + C858 + C101 * C852 + C115 * C843 + C859 +
            C859 + C102 * C853 + C117 * C844 + C860 + C860 + C103 * C854) *
               C47785 * C47770 * C47671 -
           (C117 * C271 + C302 + C302 + C103 * C291 + C115 * C272 + C303 +
            C303 + C102 * C292 + C113 * C273 + C304 + C304 + C101 * C293) *
               C47785 * C47770 * C47664 -
           (C117 * C1184 + C1212 + C1212 + C103 * C1202 + C115 * C1185 + C1213 +
            C1213 + C102 * C1203 + C113 * C1186 + C1214 + C1214 +
            C101 * C1204) *
               C47785 * C47770 * C3644) *
              C47629 +
          ((C113 * C274 + C305 + C305 + C101 * C294 + C115 * C275 + C306 +
            C306 + C102 * C295 + C117 * C276 + C307 + C307 + C103 * C296) *
               C47785 * C47770 * C47664 -
           (C117 * C1187 + C1215 + C1215 + C103 * C1205 + C115 * C1188 + C1216 +
            C1216 + C102 * C1206 + C113 * C1189 + C1217 + C1217 +
            C101 * C1207) *
               C47785 * C47770 * C47671 +
           (C113 * C1190 + C1218 + C1218 + C101 * C1208 + C115 * C1191 + C1219 +
            C1219 + C102 * C1209 + C117 * C1192 + C1220 + C1220 +
            C103 * C1210) *
               C47785 * C47770 * C3644) *
              C2742) *
         C47535) /
        (p * q * std::sqrt(p + q));
    d2ee[7] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C119 + C141 + C141 + C101 * C133 + C115 * C120 + C142 +
            C142 + C102 * C134 + C117 * C121 + C143 + C143 + C103 * C135) *
               C47785 * C47770 * C3136 -
           (C117 * C432 + C463 + C463 + C103 * C452 + C115 * C433 + C464 +
            C464 + C102 * C453 + C113 * C434 + C465 + C465 + C101 * C454) *
               C47785 * C47770 * C47668) *
              C47898 +
          ((C113 * C842 + C858 + C858 + C101 * C852 + C115 * C843 + C859 +
            C859 + C102 * C853 + C117 * C844 + C860 + C860 + C103 * C854) *
               C47785 * C47770 * C47668 -
           (C117 * C271 + C302 + C302 + C103 * C291 + C115 * C272 + C303 +
            C303 + C102 * C292 + C113 * C273 + C304 + C304 + C101 * C293) *
               C47785 * C47770 * C3136) *
              C47894 +
          ((C113 * C274 + C305 + C305 + C101 * C294 + C115 * C275 + C306 +
            C306 + C102 * C295 + C117 * C276 + C307 + C307 + C103 * C296) *
               C47785 * C47770 * C3136 -
           (C117 * C1187 + C1215 + C1215 + C103 * C1205 + C115 * C1188 + C1216 +
            C1216 + C102 * C1206 + C113 * C1189 + C1217 + C1217 +
            C101 * C1207) *
               C47785 * C47770 * C47668) *
              C47884 +
          ((C113 * C1580 + C1590 + C1590 + C101 * C1586 + C115 * C1581 + C1591 +
            C1591 + C102 * C1587 + C117 * C1582 + C1592 + C1592 +
            C103 * C1588) *
               C47785 * C47770 * C47668 -
           (C117 * C1050 + C1069 + C1069 + C103 * C1062 + C115 * C1051 + C1070 +
            C1070 + C102 * C1063 + C113 * C1052 + C1071 + C1071 +
            C101 * C1064) *
               C47785 * C47770 * C3136) *
              C47862) *
         C47535) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C119 + C141 + C141 + C101 * C133 + C115 * C120 + C142 +
             C142 + C102 * C134 + C117 * C121 + C143 + C143 + C103 * C135) *
                C47785 * C47770 * C3136 -
            (C117 * C432 + C463 + C463 + C103 * C452 + C115 * C433 + C464 +
             C464 + C102 * C453 + C113 * C434 + C465 + C465 + C101 * C454) *
                C47785 * C47770 * C47668) *
               C2374 +
           ((C113 * C842 + C858 + C858 + C101 * C852 + C115 * C843 + C859 +
             C859 + C102 * C853 + C117 * C844 + C860 + C860 + C103 * C854) *
                C47785 * C47770 * C47668 -
            (C117 * C271 + C302 + C302 + C103 * C291 + C115 * C272 + C303 +
             C303 + C102 * C292 + C113 * C273 + C304 + C304 + C101 * C293) *
                C47785 * C47770 * C3136) *
               C47626) *
              C47888 +
          (((C113 * C433 + C469 + C469 + C101 * C453 + C115 * C432 + C470 +
             C470 + C102 * C452 + C117 * C438 + C471 + C471 + C103 * C458) *
                C47785 * C47770 * C47668 -
            (C117 * C122 + C144 + C144 + C103 * C136 + C115 * C121 + C145 +
             C145 + C102 * C135 + C113 * C120 + C146 + C146 + C101 * C134) *
                C47785 * C47770 * C3136) *
               C2374 +
           ((C113 * C272 + C308 + C308 + C101 * C292 + C115 * C271 + C309 +
             C309 + C102 * C291 + C117 * C277 + C310 + C310 + C103 * C297) *
                C47785 * C47770 * C3136 -
            (C117 * C845 + C861 + C861 + C103 * C855 + C115 * C844 + C862 +
             C862 + C102 * C854 + C113 * C843 + C863 + C863 + C101 * C853) *
                C47785 * C47770 * C47668) *
               C47626) *
              C47875 +
          (((C113 * C121 + C147 + C147 + C101 * C135 + C115 * C122 + C148 +
             C148 + C102 * C136 + C117 * C123 + C149 + C149 + C103 * C137) *
                C47785 * C47770 * C3136 -
            (C117 * C440 + C475 + C475 + C103 * C460 + C115 * C438 + C476 +
             C476 + C102 * C458 + C113 * C432 + C477 + C477 + C101 * C452) *
                C47785 * C47770 * C47668) *
               C2374 +
           ((C113 * C844 + C864 + C864 + C101 * C854 + C115 * C845 + C865 +
             C865 + C102 * C855 + C117 * C846 + C866 + C866 + C103 * C856) *
                C47785 * C47770 * C47668 -
            (C117 * C279 + C314 + C314 + C103 * C299 + C115 * C277 + C315 +
             C315 + C102 * C297 + C113 * C271 + C316 + C316 + C101 * C291) *
                C47785 * C47770 * C3136) *
               C47626) *
              C47846)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C119 + C141 + C141 + C101 * C133 + C115 * C120 + C142 +
            C142 + C102 * C134 + C117 * C121 + C143 + C143 + C103 * C135) *
               C47785 * C47770 * C47899 -
           (C117 * C432 + C463 + C463 + C103 * C452 + C115 * C433 + C464 +
            C464 + C102 * C453 + C113 * C434 + C465 + C465 + C101 * C454) *
               C47785 * C47770 * C47896 +
           (C113 * C435 + C466 + C466 + C101 * C455 + C115 * C436 + C467 +
            C467 + C102 * C456 + C117 * C437 + C468 + C468 + C103 * C457) *
               C47785 * C47770 * C47887 -
           (C117 * C1882 + C1901 + C1901 + C103 * C1894 + C115 * C1883 + C1902 +
            C1902 + C102 * C1895 + C113 * C1884 + C1903 + C1903 +
            C101 * C1896) *
               C47785 * C47770 * C47868) *
              C2374 +
          ((C113 * C842 + C858 + C858 + C101 * C852 + C115 * C843 + C859 +
            C859 + C102 * C853 + C117 * C844 + C860 + C860 + C103 * C854) *
               C47785 * C47770 * C47896 -
           (C117 * C271 + C302 + C302 + C103 * C291 + C115 * C272 + C303 +
            C303 + C102 * C292 + C113 * C273 + C304 + C304 + C101 * C293) *
               C47785 * C47770 * C47899 -
           (C117 * C1184 + C1212 + C1212 + C103 * C1202 + C115 * C1185 + C1213 +
            C1213 + C102 * C1203 + C113 * C1186 + C1214 + C1214 +
            C101 * C1204) *
               C47785 * C47770 * C47887 +
           (C113 * C2264 + C2274 + C2274 + C101 * C2270 + C115 * C2265 + C2275 +
            C2275 + C102 * C2271 + C117 * C2266 + C2276 + C2276 +
            C103 * C2272) *
               C47785 * C47770 * C47868) *
              C47626) *
         C47535) /
            (p * q * std::sqrt(p + q));
    d2ee[8] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C119 + C141 + C141 + C101 * C133 + C115 * C120 + C142 +
             C142 + C102 * C134 + C117 * C121 + C143 + C143 + C103 * C135) *
                C47785 * C47770 * C47664 -
            (C117 * C432 + C463 + C463 + C103 * C452 + C115 * C433 + C464 +
             C464 + C102 * C453 + C113 * C434 + C465 + C465 + C101 * C454) *
                C47785 * C47770 * C47671 +
            (C113 * C435 + C466 + C466 + C101 * C455 + C115 * C436 + C467 +
             C467 + C102 * C456 + C117 * C437 + C468 + C468 + C103 * C457) *
                C47785 * C47770 * C3644) *
               C2374 +
           ((C113 * C842 + C858 + C858 + C101 * C852 + C115 * C843 + C859 +
             C859 + C102 * C853 + C117 * C844 + C860 + C860 + C103 * C854) *
                C47785 * C47770 * C47671 -
            (C117 * C271 + C302 + C302 + C103 * C291 + C115 * C272 + C303 +
             C303 + C102 * C292 + C113 * C273 + C304 + C304 + C101 * C293) *
                C47785 * C47770 * C47664 -
            (C117 * C1184 + C1212 + C1212 + C103 * C1202 + C115 * C1185 +
             C1213 + C1213 + C102 * C1203 + C113 * C1186 + C1214 + C1214 +
             C101 * C1204) *
                C47785 * C47770 * C3644) *
               C47626) *
              C47806 +
          (((C113 * C433 + C469 + C469 + C101 * C453 + C115 * C432 + C470 +
             C470 + C102 * C452 + C117 * C438 + C471 + C471 + C103 * C458) *
                C47785 * C47770 * C47671 -
            (C117 * C122 + C144 + C144 + C103 * C136 + C115 * C121 + C145 +
             C145 + C102 * C135 + C113 * C120 + C146 + C146 + C101 * C134) *
                C47785 * C47770 * C47664 -
            (C117 * C439 + C472 + C472 + C103 * C459 + C115 * C437 + C473 +
             C473 + C102 * C457 + C113 * C436 + C474 + C474 + C101 * C456) *
                C47785 * C47770 * C3644) *
               C2374 +
           ((C113 * C272 + C308 + C308 + C101 * C292 + C115 * C271 + C309 +
             C309 + C102 * C291 + C117 * C277 + C310 + C310 + C103 * C297) *
                C47785 * C47770 * C47664 -
            (C117 * C845 + C861 + C861 + C103 * C855 + C115 * C844 + C862 +
             C862 + C102 * C854 + C113 * C843 + C863 + C863 + C101 * C853) *
                C47785 * C47770 * C47671 +
            (C113 * C1185 + C2056 + C2056 + C101 * C1203 + C115 * C1184 +
             C2057 + C2057 + C102 * C1202 + C117 * C2052 + C2058 + C2058 +
             C103 * C2054) *
                C47785 * C47770 * C3644) *
               C47626) *
              C47546)) /
        (p * q * std::sqrt(p + q));
    d2ee[9] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C119 + C141 + C141 + C101 * C133 + C115 * C120 + C142 +
             C142 + C102 * C134 + C117 * C121 + C143 + C143 + C103 * C135) *
                C47785 * C47770 * C3136 -
            (C117 * C432 + C463 + C463 + C103 * C452 + C115 * C433 + C464 +
             C464 + C102 * C453 + C113 * C434 + C465 + C465 + C101 * C454) *
                C47785 * C47770 * C47668) *
               C2374 +
           ((C113 * C842 + C858 + C858 + C101 * C852 + C115 * C843 + C859 +
             C859 + C102 * C853 + C117 * C844 + C860 + C860 + C103 * C854) *
                C47785 * C47770 * C47668 -
            (C117 * C271 + C302 + C302 + C103 * C291 + C115 * C272 + C303 +
             C303 + C102 * C292 + C113 * C273 + C304 + C304 + C101 * C293) *
                C47785 * C47770 * C3136) *
               C47626) *
              C47888 +
          (((C113 * C433 + C469 + C469 + C101 * C453 + C115 * C432 + C470 +
             C470 + C102 * C452 + C117 * C438 + C471 + C471 + C103 * C458) *
                C47785 * C47770 * C47668 -
            (C117 * C122 + C144 + C144 + C103 * C136 + C115 * C121 + C145 +
             C145 + C102 * C135 + C113 * C120 + C146 + C146 + C101 * C134) *
                C47785 * C47770 * C3136) *
               C2374 +
           ((C113 * C272 + C308 + C308 + C101 * C292 + C115 * C271 + C309 +
             C309 + C102 * C291 + C117 * C277 + C310 + C310 + C103 * C297) *
                C47785 * C47770 * C3136 -
            (C117 * C845 + C861 + C861 + C103 * C855 + C115 * C844 + C862 +
             C862 + C102 * C854 + C113 * C843 + C863 + C863 + C101 * C853) *
                C47785 * C47770 * C47668) *
               C47626) *
              C47875 +
          (((C113 * C121 + C147 + C147 + C101 * C135 + C115 * C122 + C148 +
             C148 + C102 * C136 + C117 * C123 + C149 + C149 + C103 * C137) *
                C47785 * C47770 * C3136 -
            (C117 * C440 + C475 + C475 + C103 * C460 + C115 * C438 + C476 +
             C476 + C102 * C458 + C113 * C432 + C477 + C477 + C101 * C452) *
                C47785 * C47770 * C47668) *
               C2374 +
           ((C113 * C844 + C864 + C864 + C101 * C854 + C115 * C845 + C865 +
             C865 + C102 * C855 + C117 * C846 + C866 + C866 + C103 * C856) *
                C47785 * C47770 * C47668 -
            (C117 * C279 + C314 + C314 + C103 * C299 + C115 * C277 + C315 +
             C315 + C102 * C297 + C113 * C271 + C316 + C316 + C101 * C291) *
                C47785 * C47770 * C3136) *
               C47626) *
              C47846)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C119 + C141 + C141 + C101 * C133 + C115 * C120 + C142 +
            C142 + C102 * C134 + C117 * C121 + C143 + C143 + C103 * C135) *
               C47785 * C47770 * C3136 -
           (C117 * C432 + C463 + C463 + C103 * C452 + C115 * C433 + C464 +
            C464 + C102 * C453 + C113 * C434 + C465 + C465 + C101 * C454) *
               C47785 * C47770 * C47668) *
              C47898 +
          ((C113 * C842 + C858 + C858 + C101 * C852 + C115 * C843 + C859 +
            C859 + C102 * C853 + C117 * C844 + C860 + C860 + C103 * C854) *
               C47785 * C47770 * C47668 -
           (C117 * C271 + C302 + C302 + C103 * C291 + C115 * C272 + C303 +
            C303 + C102 * C292 + C113 * C273 + C304 + C304 + C101 * C293) *
               C47785 * C47770 * C3136) *
              C47894 +
          ((C113 * C274 + C305 + C305 + C101 * C294 + C115 * C275 + C306 +
            C306 + C102 * C295 + C117 * C276 + C307 + C307 + C103 * C296) *
               C47785 * C47770 * C3136 -
           (C117 * C1187 + C1215 + C1215 + C103 * C1205 + C115 * C1188 + C1216 +
            C1216 + C102 * C1206 + C113 * C1189 + C1217 + C1217 +
            C101 * C1207) *
               C47785 * C47770 * C47668) *
              C47884 +
          ((C113 * C1580 + C1590 + C1590 + C101 * C1586 + C115 * C1581 + C1591 +
            C1591 + C102 * C1587 + C117 * C1582 + C1592 + C1592 +
            C103 * C1588) *
               C47785 * C47770 * C47668 -
           (C117 * C1050 + C1069 + C1069 + C103 * C1062 + C115 * C1051 + C1070 +
            C1070 + C102 * C1063 + C113 * C1052 + C1071 + C1071 +
            C101 * C1064) *
               C47785 * C47770 * C3136) *
              C47862) *
         C47535) /
            (p * q * std::sqrt(p + q));
    d2ee[10] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C119 + C141 + C141 + C101 * C133 + C115 * C120 + C142 +
            C142 + C102 * C134 + C117 * C121 + C143 + C143 + C103 * C135) *
               C47785 * C47770 * C47581 * C1318 -
           (C117 * C271 + C302 + C302 + C103 * C291 + C115 * C272 + C303 +
            C303 + C102 * C292 + C113 * C273 + C304 + C304 + C101 * C293) *
               C47785 * C47770 * C47581 * C1319 +
           (C113 * C274 + C305 + C305 + C101 * C294 + C115 * C275 + C306 +
            C306 + C102 * C295 + C117 * C276 + C307 + C307 + C103 * C296) *
               C47785 * C47770 * C47581 * C1320 -
           (C117 * C1050 + C1069 + C1069 + C103 * C1062 + C115 * C1051 + C1070 +
            C1070 + C102 * C1063 + C113 * C1052 + C1071 + C1071 +
            C101 * C1064) *
               C47785 * C47770 * C47581 * C47862) *
              C47806 +
          ((C113 * C272 + C308 + C308 + C101 * C292 + C115 * C271 + C309 +
            C309 + C102 * C291 + C117 * C277 + C310 + C310 + C103 * C297) *
               C47785 * C47770 * C47581 * C1319 -
           (C117 * C122 + C144 + C144 + C103 * C136 + C115 * C121 + C145 +
            C145 + C102 * C135 + C113 * C120 + C146 + C146 + C101 * C134) *
               C47785 * C47770 * C47581 * C1318 -
           (C117 * C278 + C311 + C311 + C103 * C298 + C115 * C276 + C312 +
            C312 + C102 * C296 + C113 * C275 + C313 + C313 + C101 * C295) *
               C47785 * C47770 * C47581 * C1320 +
           (C113 * C1051 + C1328 + C1328 + C101 * C1063 + C115 * C1050 + C1329 +
            C1329 + C102 * C1062 + C117 * C1324 + C1330 + C1330 +
            C103 * C1326) *
               C47785 * C47770 * C47581 * C47862) *
              C47546)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C119 + C141 + C141 + C101 * C133 + C115 * C120 + C142 +
            C142 + C102 * C134 + C117 * C121 + C143 + C143 + C103 * C135) *
               C47785 * C47770 * C47581 * C47820 -
           (C117 * C271 + C302 + C302 + C103 * C291 + C115 * C272 + C303 +
            C303 + C102 * C292 + C113 * C273 + C304 + C304 + C101 * C293) *
               C47785 * C47770 * C47581 * C47626) *
              C580 +
          ((C113 * C272 + C308 + C308 + C101 * C292 + C115 * C271 + C309 +
            C309 + C102 * C291 + C117 * C277 + C310 + C310 + C103 * C297) *
               C47785 * C47770 * C47581 * C47626 -
           (C117 * C122 + C144 + C144 + C103 * C136 + C115 * C121 + C145 +
            C145 + C102 * C135 + C113 * C120 + C146 + C146 + C101 * C134) *
               C47785 * C47770 * C47581 * C47820) *
              C581 +
          ((C113 * C121 + C147 + C147 + C101 * C135 + C115 * C122 + C148 +
            C148 + C102 * C136 + C117 * C123 + C149 + C149 + C103 * C137) *
               C47785 * C47770 * C47581 * C47820 -
           (C117 * C279 + C314 + C314 + C103 * C299 + C115 * C277 + C315 +
            C315 + C102 * C297 + C113 * C271 + C316 + C316 + C101 * C291) *
               C47785 * C47770 * C47581 * C47626) *
              C582 +
          ((C113 * C277 + C588 + C588 + C101 * C297 + C115 * C279 + C589 +
            C589 + C102 * C299 + C117 * C584 + C590 + C590 + C103 * C586) *
               C47785 * C47770 * C47581 * C47626 -
           (C117 * C124 + C150 + C150 + C103 * C138 + C115 * C123 + C151 +
            C151 + C102 * C137 + C113 * C122 + C152 + C152 + C101 * C136) *
               C47785 * C47770 * C47581 * C47820) *
              C47856)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C119 + C141 + C141 + C101 * C133 + C115 * C120 + C142 +
             C142 + C102 * C134 + C117 * C121 + C143 + C143 + C103 * C135) *
                C47785 * C47770 * C1702 -
            (C117 * C432 + C463 + C463 + C103 * C452 + C115 * C433 + C464 +
             C464 + C102 * C453 + C113 * C434 + C465 + C465 + C101 * C454) *
                C47785 * C47770 * C1703 +
            (C113 * C435 + C466 + C466 + C101 * C455 + C115 * C436 + C467 +
             C467 + C102 * C456 + C117 * C437 + C468 + C468 + C103 * C457) *
                C47785 * C47770 * C47855) *
               C47820 +
           ((C113 * C842 + C858 + C858 + C101 * C852 + C115 * C843 + C859 +
             C859 + C102 * C853 + C117 * C844 + C860 + C860 + C103 * C854) *
                C47785 * C47770 * C1703 -
            (C117 * C271 + C302 + C302 + C103 * C291 + C115 * C272 + C303 +
             C303 + C102 * C292 + C113 * C273 + C304 + C304 + C101 * C293) *
                C47785 * C47770 * C1702 -
            (C117 * C1184 + C1212 + C1212 + C103 * C1202 + C115 * C1185 +
             C1213 + C1213 + C102 * C1203 + C113 * C1186 + C1214 + C1214 +
             C101 * C1204) *
                C47785 * C47770 * C47855) *
               C47626) *
              C47806 +
          (((C113 * C433 + C469 + C469 + C101 * C453 + C115 * C432 + C470 +
             C470 + C102 * C452 + C117 * C438 + C471 + C471 + C103 * C458) *
                C47785 * C47770 * C1703 -
            (C117 * C122 + C144 + C144 + C103 * C136 + C115 * C121 + C145 +
             C145 + C102 * C135 + C113 * C120 + C146 + C146 + C101 * C134) *
                C47785 * C47770 * C1702 -
            (C117 * C439 + C472 + C472 + C103 * C459 + C115 * C437 + C473 +
             C473 + C102 * C457 + C113 * C436 + C474 + C474 + C101 * C456) *
                C47785 * C47770 * C47855) *
               C47820 +
           ((C113 * C272 + C308 + C308 + C101 * C292 + C115 * C271 + C309 +
             C309 + C102 * C291 + C117 * C277 + C310 + C310 + C103 * C297) *
                C47785 * C47770 * C1702 -
            (C117 * C845 + C861 + C861 + C103 * C855 + C115 * C844 + C862 +
             C862 + C102 * C854 + C113 * C843 + C863 + C863 + C101 * C853) *
                C47785 * C47770 * C1703 +
            (C113 * C1185 + C2056 + C2056 + C101 * C1203 + C115 * C1184 +
             C2057 + C2057 + C102 * C1202 + C117 * C2052 + C2058 + C2058 +
             C103 * C2054) *
                C47785 * C47770 * C47855) *
               C47626) *
              C47546)) /
            (p * q * std::sqrt(p + q));
    d2ee[11] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C119 + C141 + C141 + C101 * C133 + C115 * C120 + C142 +
            C142 + C102 * C134 + C117 * C121 + C143 + C143 + C103 * C135) *
               C47785 * C47770 * C47821 -
           (C117 * C432 + C463 + C463 + C103 * C452 + C115 * C433 + C464 +
            C464 + C102 * C453 + C113 * C434 + C465 + C465 + C101 * C454) *
               C47785 * C47770 * C47668) *
              C1318 +
          ((C113 * C842 + C858 + C858 + C101 * C852 + C115 * C843 + C859 +
            C859 + C102 * C853 + C117 * C844 + C860 + C860 + C103 * C854) *
               C47785 * C47770 * C47668 -
           (C117 * C271 + C302 + C302 + C103 * C291 + C115 * C272 + C303 +
            C303 + C102 * C292 + C113 * C273 + C304 + C304 + C101 * C293) *
               C47785 * C47770 * C47821) *
              C1319 +
          ((C113 * C274 + C305 + C305 + C101 * C294 + C115 * C275 + C306 +
            C306 + C102 * C295 + C117 * C276 + C307 + C307 + C103 * C296) *
               C47785 * C47770 * C47821 -
           (C117 * C1187 + C1215 + C1215 + C103 * C1205 + C115 * C1188 + C1216 +
            C1216 + C102 * C1206 + C113 * C1189 + C1217 + C1217 +
            C101 * C1207) *
               C47785 * C47770 * C47668) *
              C1320 +
          ((C113 * C1580 + C1590 + C1590 + C101 * C1586 + C115 * C1581 + C1591 +
            C1591 + C102 * C1587 + C117 * C1582 + C1592 + C1592 +
            C103 * C1588) *
               C47785 * C47770 * C47668 -
           (C117 * C1050 + C1069 + C1069 + C103 * C1062 + C115 * C1051 + C1070 +
            C1070 + C102 * C1063 + C113 * C1052 + C1071 + C1071 +
            C101 * C1064) *
               C47785 * C47770 * C47821) *
              C47862) *
         C47535) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C119 + C141 + C141 + C101 * C133 + C115 * C120 + C142 +
             C142 + C102 * C134 + C117 * C121 + C143 + C143 + C103 * C135) *
                C47785 * C47770 * C47821 -
            (C117 * C432 + C463 + C463 + C103 * C452 + C115 * C433 + C464 +
             C464 + C102 * C453 + C113 * C434 + C465 + C465 + C101 * C454) *
                C47785 * C47770 * C47668) *
               C47820 +
           ((C113 * C842 + C858 + C858 + C101 * C852 + C115 * C843 + C859 +
             C859 + C102 * C853 + C117 * C844 + C860 + C860 + C103 * C854) *
                C47785 * C47770 * C47668 -
            (C117 * C271 + C302 + C302 + C103 * C291 + C115 * C272 + C303 +
             C303 + C102 * C292 + C113 * C273 + C304 + C304 + C101 * C293) *
                C47785 * C47770 * C47821) *
               C47626) *
              C268 +
          (((C113 * C433 + C469 + C469 + C101 * C453 + C115 * C432 + C470 +
             C470 + C102 * C452 + C117 * C438 + C471 + C471 + C103 * C458) *
                C47785 * C47770 * C47668 -
            (C117 * C122 + C144 + C144 + C103 * C136 + C115 * C121 + C145 +
             C145 + C102 * C135 + C113 * C120 + C146 + C146 + C101 * C134) *
                C47785 * C47770 * C47821) *
               C47820 +
           ((C113 * C272 + C308 + C308 + C101 * C292 + C115 * C271 + C309 +
             C309 + C102 * C291 + C117 * C277 + C310 + C310 + C103 * C297) *
                C47785 * C47770 * C47821 -
            (C117 * C845 + C861 + C861 + C103 * C855 + C115 * C844 + C862 +
             C862 + C102 * C854 + C113 * C843 + C863 + C863 + C101 * C853) *
                C47785 * C47770 * C47668) *
               C47626) *
              C269 +
          (((C113 * C121 + C147 + C147 + C101 * C135 + C115 * C122 + C148 +
             C148 + C102 * C136 + C117 * C123 + C149 + C149 + C103 * C137) *
                C47785 * C47770 * C47821 -
            (C117 * C440 + C475 + C475 + C103 * C460 + C115 * C438 + C476 +
             C476 + C102 * C458 + C113 * C432 + C477 + C477 + C101 * C452) *
                C47785 * C47770 * C47668) *
               C47820 +
           ((C113 * C844 + C864 + C864 + C101 * C854 + C115 * C845 + C865 +
             C865 + C102 * C855 + C117 * C846 + C866 + C866 + C103 * C856) *
                C47785 * C47770 * C47668 -
            (C117 * C279 + C314 + C314 + C103 * C299 + C115 * C277 + C315 +
             C315 + C102 * C297 + C113 * C271 + C316 + C316 + C101 * C291) *
                C47785 * C47770 * C47821) *
               C47626) *
              C47846)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C119 + C141 + C141 + C101 * C133 + C115 * C120 + C142 +
            C142 + C102 * C134 + C117 * C121 + C143 + C143 + C103 * C135) *
               C47785 * C47770 * C2156 -
           (C117 * C432 + C463 + C463 + C103 * C452 + C115 * C433 + C464 +
            C464 + C102 * C453 + C113 * C434 + C465 + C465 + C101 * C454) *
               C47785 * C47770 * C2157 +
           (C113 * C435 + C466 + C466 + C101 * C455 + C115 * C436 + C467 +
            C467 + C102 * C456 + C117 * C437 + C468 + C468 + C103 * C457) *
               C47785 * C47770 * C2158 -
           (C117 * C1882 + C1901 + C1901 + C103 * C1894 + C115 * C1883 + C1902 +
            C1902 + C102 * C1895 + C113 * C1884 + C1903 + C1903 +
            C101 * C1896) *
               C47785 * C47770 * C47868) *
              C47820 +
          ((C113 * C842 + C858 + C858 + C101 * C852 + C115 * C843 + C859 +
            C859 + C102 * C853 + C117 * C844 + C860 + C860 + C103 * C854) *
               C47785 * C47770 * C2157 -
           (C117 * C271 + C302 + C302 + C103 * C291 + C115 * C272 + C303 +
            C303 + C102 * C292 + C113 * C273 + C304 + C304 + C101 * C293) *
               C47785 * C47770 * C2156 -
           (C117 * C1184 + C1212 + C1212 + C103 * C1202 + C115 * C1185 + C1213 +
            C1213 + C102 * C1203 + C113 * C1186 + C1214 + C1214 +
            C101 * C1204) *
               C47785 * C47770 * C2158 +
           (C113 * C2264 + C2274 + C2274 + C101 * C2270 + C115 * C2265 + C2275 +
            C2275 + C102 * C2271 + C117 * C2266 + C2276 + C2276 +
            C103 * C2272) *
               C47785 * C47770 * C47868) *
              C47626) *
         C47535) /
            (p * q * std::sqrt(p + q));
    d2ee[12] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((C113 * C119 + C141 + C141 + C101 * C133 + C115 * C120 + C142 +
               C142 + C102 * C134 + C117 * C121 + C143 + C143 + C103 * C135) *
                  C47785 * C47770 * C47581 * C47563 * C108 -
              (C117 * C122 + C144 + C144 + C103 * C136 + C115 * C121 + C145 +
               C145 + C102 * C135 + C113 * C120 + C146 + C146 + C101 * C134) *
                  C47785 * C47770 * C47581 * C47563 * C109 +
              (C113 * C121 + C147 + C147 + C101 * C135 + C115 * C122 + C148 +
               C148 + C102 * C136 + C117 * C123 + C149 + C149 + C103 * C137) *
                  C47785 * C47770 * C47581 * C47563 * C110 -
              (C117 * C124 + C150 + C150 + C103 * C138 + C115 * C123 + C151 +
               C151 + C102 * C137 + C113 * C122 + C152 + C152 + C101 * C136) *
                  C47785 * C47770 * C47581 * C47563 * C111 +
              (C113 * C123 + C153 + C153 + C101 * C137 + C115 * C124 + C154 +
               C154 + C102 * C138 + C117 * C125 + C155 + C155 + C103 * C139) *
                  C47785 * C47770 * C47581 * C47563 * C112) +
         0.5 * std::pow(Pi, 2.5) *
             (((C113 * C119 + C141 + C141 + C101 * C133 + C115 * C120 + C142 +
                C142 + C102 * C134 + C117 * C121 + C143 + C143 + C103 * C135) *
                   C47785 * C47770 * C47581 * C47891 -
               (C117 * C271 + C302 + C302 + C103 * C291 + C115 * C272 + C303 +
                C303 + C102 * C292 + C113 * C273 + C304 + C304 + C101 * C293) *
                   C47785 * C47770 * C47581 * C47879 +
               (C113 * C274 + C305 + C305 + C101 * C294 + C115 * C275 + C306 +
                C306 + C102 * C295 + C117 * C276 + C307 + C307 + C103 * C296) *
                   C47785 * C47770 * C47581 * C47852) *
                  C268 +
              ((C113 * C272 + C308 + C308 + C101 * C292 + C115 * C271 + C309 +
                C309 + C102 * C291 + C117 * C277 + C310 + C310 + C103 * C297) *
                   C47785 * C47770 * C47581 * C47879 -
               (C117 * C122 + C144 + C144 + C103 * C136 + C115 * C121 + C145 +
                C145 + C102 * C135 + C113 * C120 + C146 + C146 + C101 * C134) *
                   C47785 * C47770 * C47581 * C47891 -
               (C117 * C278 + C311 + C311 + C103 * C298 + C115 * C276 + C312 +
                C312 + C102 * C296 + C113 * C275 + C313 + C313 + C101 * C295) *
                   C47785 * C47770 * C47581 * C47852) *
                  C269 +
              ((C113 * C121 + C147 + C147 + C101 * C135 + C115 * C122 + C148 +
                C148 + C102 * C136 + C117 * C123 + C149 + C149 + C103 * C137) *
                   C47785 * C47770 * C47581 * C47891 -
               (C117 * C279 + C314 + C314 + C103 * C299 + C115 * C277 + C315 +
                C315 + C102 * C297 + C113 * C271 + C316 + C316 + C101 * C291) *
                   C47785 * C47770 * C47581 * C47879 +
               (C113 * C276 + C317 + C317 + C101 * C296 + C115 * C278 + C318 +
                C318 + C102 * C298 + C117 * C280 + C319 + C319 + C103 * C300) *
                   C47785 * C47770 * C47581 * C47852) *
                  C47846)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C113 * C119 + C141 + C141 + C101 * C133 + C115 * C120 + C142 +
            C142 + C102 * C134 + C117 * C121 + C143 + C143 + C103 * C135) *
               C47785 * C47770 * C47892 -
           (C117 * C432 + C463 + C463 + C103 * C452 + C115 * C433 + C464 +
            C464 + C102 * C453 + C113 * C434 + C465 + C465 + C101 * C454) *
               C47785 * C47770 * C47881 +
           (C113 * C435 + C466 + C466 + C101 * C455 + C115 * C436 + C467 +
            C467 + C102 * C456 + C117 * C437 + C468 + C468 + C103 * C457) *
               C47785 * C47770 * C47855) *
              C47563 * C268 +
          ((C113 * C433 + C469 + C469 + C101 * C453 + C115 * C432 + C470 +
            C470 + C102 * C452 + C117 * C438 + C471 + C471 + C103 * C458) *
               C47785 * C47770 * C47881 -
           (C117 * C122 + C144 + C144 + C103 * C136 + C115 * C121 + C145 +
            C145 + C102 * C135 + C113 * C120 + C146 + C146 + C101 * C134) *
               C47785 * C47770 * C47892 -
           (C117 * C439 + C472 + C472 + C103 * C459 + C115 * C437 + C473 +
            C473 + C102 * C457 + C113 * C436 + C474 + C474 + C101 * C456) *
               C47785 * C47770 * C47855) *
              C47563 * C269 +
          ((C113 * C121 + C147 + C147 + C101 * C135 + C115 * C122 + C148 +
            C148 + C102 * C136 + C117 * C123 + C149 + C149 + C103 * C137) *
               C47785 * C47770 * C47892 -
           (C117 * C440 + C475 + C475 + C103 * C460 + C115 * C438 + C476 +
            C476 + C102 * C458 + C113 * C432 + C477 + C477 + C101 * C452) *
               C47785 * C47770 * C47881 +
           (C113 * C437 + C478 + C478 + C101 * C457 + C115 * C439 + C479 +
            C479 + C102 * C459 + C117 * C441 + C480 + C480 + C103 * C461) *
               C47785 * C47770 * C47855) *
              C47563 * C47846)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C113 * C119 + C141 + C141 + C101 * C133 + C115 * C120 + C142 +
            C142 + C102 * C134 + C117 * C121 + C143 + C143 + C103 * C135) *
               C47785 * C47770 * C47581 * C976 -
           (C117 * C271 + C302 + C302 + C103 * C291 + C115 * C272 + C303 +
            C303 + C102 * C292 + C113 * C273 + C304 + C304 + C101 * C293) *
               C47785 * C47770 * C47581 * C977 +
           (C113 * C274 + C305 + C305 + C101 * C294 + C115 * C275 + C306 +
            C306 + C102 * C295 + C117 * C276 + C307 + C307 + C103 * C296) *
               C47785 * C47770 * C47581 * C47852) *
              C47888 +
          ((C113 * C272 + C308 + C308 + C101 * C292 + C115 * C271 + C309 +
            C309 + C102 * C291 + C117 * C277 + C310 + C310 + C103 * C297) *
               C47785 * C47770 * C47581 * C977 -
           (C117 * C122 + C144 + C144 + C103 * C136 + C115 * C121 + C145 +
            C145 + C102 * C135 + C113 * C120 + C146 + C146 + C101 * C134) *
               C47785 * C47770 * C47581 * C976 -
           (C117 * C278 + C311 + C311 + C103 * C298 + C115 * C276 + C312 +
            C312 + C102 * C296 + C113 * C275 + C313 + C313 + C101 * C295) *
               C47785 * C47770 * C47581 * C47852) *
              C47875 +
          ((C113 * C121 + C147 + C147 + C101 * C135 + C115 * C122 + C148 +
            C148 + C102 * C136 + C117 * C123 + C149 + C149 + C103 * C137) *
               C47785 * C47770 * C47581 * C976 -
           (C117 * C279 + C314 + C314 + C103 * C299 + C115 * C277 + C315 +
            C315 + C102 * C297 + C113 * C271 + C316 + C316 + C101 * C291) *
               C47785 * C47770 * C47581 * C977 +
           (C113 * C276 + C317 + C317 + C101 * C296 + C115 * C278 + C318 +
            C318 + C102 * C298 + C117 * C280 + C319 + C319 + C103 * C300) *
               C47785 * C47770 * C47581 * C47852) *
              C47846)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((C113 * C119 + C141 + C141 + C101 * C133 + C115 * C120 + C142 + C142 +
           C102 * C134 + C117 * C121 + C143 + C143 + C103 * C135) *
              C47785 * C47770 * C47581 * C1044 -
          (C117 * C271 + C302 + C302 + C103 * C291 + C115 * C272 + C303 + C303 +
           C102 * C292 + C113 * C273 + C304 + C304 + C101 * C293) *
              C47785 * C47770 * C47581 * C1045 +
          (C113 * C274 + C305 + C305 + C101 * C294 + C115 * C275 + C306 + C306 +
           C102 * C295 + C117 * C276 + C307 + C307 + C103 * C296) *
              C47785 * C47770 * C47581 * C1046 -
          (C117 * C1050 + C1069 + C1069 + C103 * C1062 + C115 * C1051 + C1070 +
           C1070 + C102 * C1063 + C113 * C1052 + C1071 + C1071 + C101 * C1064) *
              C47785 * C47770 * C47581 * C1047 +
          (C113 * C1053 + C1072 + C1072 + C101 * C1065 + C115 * C1054 + C1073 +
           C1073 + C102 * C1066 + C117 * C1055 + C1074 + C1074 + C103 * C1067) *
              C47785 * C47770 * C47581 * C1048) *
         C47535) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C113 * C119 + C141 + C141 + C101 * C133 + C115 * C120 + C142 +
            C142 + C102 * C134 + C117 * C121 + C143 + C143 + C103 * C135) *
               C47785 * C47770 * C47892 -
           (C117 * C432 + C463 + C463 + C103 * C452 + C115 * C433 + C464 +
            C464 + C102 * C453 + C113 * C434 + C465 + C465 + C101 * C454) *
               C47785 * C47770 * C47881 +
           (C113 * C435 + C466 + C466 + C101 * C455 + C115 * C436 + C467 +
            C467 + C102 * C456 + C117 * C437 + C468 + C468 + C103 * C457) *
               C47785 * C47770 * C47855) *
              C976 +
          ((C113 * C842 + C858 + C858 + C101 * C852 + C115 * C843 + C859 +
            C859 + C102 * C853 + C117 * C844 + C860 + C860 + C103 * C854) *
               C47785 * C47770 * C47881 -
           (C117 * C271 + C302 + C302 + C103 * C291 + C115 * C272 + C303 +
            C303 + C102 * C292 + C113 * C273 + C304 + C304 + C101 * C293) *
               C47785 * C47770 * C47892 -
           (C117 * C1184 + C1212 + C1212 + C103 * C1202 + C115 * C1185 + C1213 +
            C1213 + C102 * C1203 + C113 * C1186 + C1214 + C1214 +
            C101 * C1204) *
               C47785 * C47770 * C47855) *
              C977 +
          ((C113 * C274 + C305 + C305 + C101 * C294 + C115 * C275 + C306 +
            C306 + C102 * C295 + C117 * C276 + C307 + C307 + C103 * C296) *
               C47785 * C47770 * C47892 -
           (C117 * C1187 + C1215 + C1215 + C103 * C1205 + C115 * C1188 + C1216 +
            C1216 + C102 * C1206 + C113 * C1189 + C1217 + C1217 +
            C101 * C1207) *
               C47785 * C47770 * C47881 +
           (C113 * C1190 + C1218 + C1218 + C101 * C1208 + C115 * C1191 + C1219 +
            C1219 + C102 * C1209 + C117 * C1192 + C1220 + C1220 +
            C103 * C1210) *
               C47785 * C47770 * C47855) *
              C47852) *
         C47535) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C113 * C119 + C141 + C141 + C101 * C133 + C115 * C120 + C142 +
            C142 + C102 * C134 + C117 * C121 + C143 + C143 + C103 * C135) *
               C47785 * C47770 * C1702 -
           (C117 * C432 + C463 + C463 + C103 * C452 + C115 * C433 + C464 +
            C464 + C102 * C453 + C113 * C434 + C465 + C465 + C101 * C454) *
               C47785 * C47770 * C1703 +
           (C113 * C435 + C466 + C466 + C101 * C455 + C115 * C436 + C467 +
            C467 + C102 * C456 + C117 * C437 + C468 + C468 + C103 * C457) *
               C47785 * C47770 * C47855) *
              C47563 * C47888 +
          ((C113 * C433 + C469 + C469 + C101 * C453 + C115 * C432 + C470 +
            C470 + C102 * C452 + C117 * C438 + C471 + C471 + C103 * C458) *
               C47785 * C47770 * C1703 -
           (C117 * C122 + C144 + C144 + C103 * C136 + C115 * C121 + C145 +
            C145 + C102 * C135 + C113 * C120 + C146 + C146 + C101 * C134) *
               C47785 * C47770 * C1702 -
           (C117 * C439 + C472 + C472 + C103 * C459 + C115 * C437 + C473 +
            C473 + C102 * C457 + C113 * C436 + C474 + C474 + C101 * C456) *
               C47785 * C47770 * C47855) *
              C47563 * C47875 +
          ((C113 * C121 + C147 + C147 + C101 * C135 + C115 * C122 + C148 +
            C148 + C102 * C136 + C117 * C123 + C149 + C149 + C103 * C137) *
               C47785 * C47770 * C1702 -
           (C117 * C440 + C475 + C475 + C103 * C460 + C115 * C438 + C476 +
            C476 + C102 * C458 + C113 * C432 + C477 + C477 + C101 * C452) *
               C47785 * C47770 * C1703 +
           (C113 * C437 + C478 + C478 + C101 * C457 + C115 * C439 + C479 +
            C479 + C102 * C459 + C117 * C441 + C480 + C480 + C103 * C461) *
               C47785 * C47770 * C47855) *
              C47563 * C47846)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C113 * C119 + C141 + C141 + C101 * C133 + C115 * C120 + C142 +
            C142 + C102 * C134 + C117 * C121 + C143 + C143 + C103 * C135) *
               C47785 * C47770 * C1702 -
           (C117 * C432 + C463 + C463 + C103 * C452 + C115 * C433 + C464 +
            C464 + C102 * C453 + C113 * C434 + C465 + C465 + C101 * C454) *
               C47785 * C47770 * C1703 +
           (C113 * C435 + C466 + C466 + C101 * C455 + C115 * C436 + C467 +
            C467 + C102 * C456 + C117 * C437 + C468 + C468 + C103 * C457) *
               C47785 * C47770 * C47855) *
              C47891 +
          ((C113 * C842 + C858 + C858 + C101 * C852 + C115 * C843 + C859 +
            C859 + C102 * C853 + C117 * C844 + C860 + C860 + C103 * C854) *
               C47785 * C47770 * C1703 -
           (C117 * C271 + C302 + C302 + C103 * C291 + C115 * C272 + C303 +
            C303 + C102 * C292 + C113 * C273 + C304 + C304 + C101 * C293) *
               C47785 * C47770 * C1702 -
           (C117 * C1184 + C1212 + C1212 + C103 * C1202 + C115 * C1185 + C1213 +
            C1213 + C102 * C1203 + C113 * C1186 + C1214 + C1214 +
            C101 * C1204) *
               C47785 * C47770 * C47855) *
              C47879 +
          ((C113 * C274 + C305 + C305 + C101 * C294 + C115 * C275 + C306 +
            C306 + C102 * C295 + C117 * C276 + C307 + C307 + C103 * C296) *
               C47785 * C47770 * C1702 -
           (C117 * C1187 + C1215 + C1215 + C103 * C1205 + C115 * C1188 + C1216 +
            C1216 + C102 * C1206 + C113 * C1189 + C1217 + C1217 +
            C101 * C1207) *
               C47785 * C47770 * C1703 +
           (C113 * C1190 + C1218 + C1218 + C101 * C1208 + C115 * C1191 + C1219 +
            C1219 + C102 * C1209 + C117 * C1192 + C1220 + C1220 +
            C103 * C1210) *
               C47785 * C47770 * C47855) *
              C47852) *
         C47535) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((C113 * C119 + C141 + C141 + C101 * C133 + C115 * C120 + C142 + C142 +
           C102 * C134 + C117 * C121 + C143 + C143 + C103 * C135) *
              C47785 * C47770 * C1877 -
          (C117 * C432 + C463 + C463 + C103 * C452 + C115 * C433 + C464 + C464 +
           C102 * C453 + C113 * C434 + C465 + C465 + C101 * C454) *
              C47785 * C47770 * C1878 +
          (C113 * C435 + C466 + C466 + C101 * C455 + C115 * C436 + C467 + C467 +
           C102 * C456 + C117 * C437 + C468 + C468 + C103 * C457) *
              C47785 * C47770 * C1879 -
          (C117 * C1882 + C1901 + C1901 + C103 * C1894 + C115 * C1883 + C1902 +
           C1902 + C102 * C1895 + C113 * C1884 + C1903 + C1903 + C101 * C1896) *
              C47785 * C47770 * C1880 +
          (C113 * C1885 + C1904 + C1904 + C101 * C1897 + C115 * C1886 + C1905 +
           C1905 + C102 * C1898 + C117 * C1887 + C1906 + C1906 + C103 * C1899) *
              C47785 * C47770 * C1881) *
         C47563 * C47535) /
            (p * q * std::sqrt(p + q));
    d2ee[13] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C119 + C141 + C141 + C101 * C133 + C115 * C120 + C142 +
             C142 + C102 * C134 + C117 * C121 + C143 + C143 + C103 * C135) *
                C47785 * C47770 * C47821 -
            (C117 * C432 + C463 + C463 + C103 * C452 + C115 * C433 + C464 +
             C464 + C102 * C453 + C113 * C434 + C465 + C465 + C101 * C454) *
                C47785 * C47770 * C47668) *
               C976 +
           ((C113 * C842 + C858 + C858 + C101 * C852 + C115 * C843 + C859 +
             C859 + C102 * C853 + C117 * C844 + C860 + C860 + C103 * C854) *
                C47785 * C47770 * C47668 -
            (C117 * C271 + C302 + C302 + C103 * C291 + C115 * C272 + C303 +
             C303 + C102 * C292 + C113 * C273 + C304 + C304 + C101 * C293) *
                C47785 * C47770 * C47821) *
               C977 +
           ((C113 * C274 + C305 + C305 + C101 * C294 + C115 * C275 + C306 +
             C306 + C102 * C295 + C117 * C276 + C307 + C307 + C103 * C296) *
                C47785 * C47770 * C47821 -
            (C117 * C1187 + C1215 + C1215 + C103 * C1205 + C115 * C1188 +
             C1216 + C1216 + C102 * C1206 + C113 * C1189 + C1217 + C1217 +
             C101 * C1207) *
                C47785 * C47770 * C47668) *
               C47852) *
              C47806 +
          (((C113 * C433 + C469 + C469 + C101 * C453 + C115 * C432 + C470 +
             C470 + C102 * C452 + C117 * C438 + C471 + C471 + C103 * C458) *
                C47785 * C47770 * C47668 -
            (C117 * C122 + C144 + C144 + C103 * C136 + C115 * C121 + C145 +
             C145 + C102 * C135 + C113 * C120 + C146 + C146 + C101 * C134) *
                C47785 * C47770 * C47821) *
               C976 +
           ((C113 * C272 + C308 + C308 + C101 * C292 + C115 * C271 + C309 +
             C309 + C102 * C291 + C117 * C277 + C310 + C310 + C103 * C297) *
                C47785 * C47770 * C47821 -
            (C117 * C845 + C861 + C861 + C103 * C855 + C115 * C844 + C862 +
             C862 + C102 * C854 + C113 * C843 + C863 + C863 + C101 * C853) *
                C47785 * C47770 * C47668) *
               C977 +
           ((C113 * C1188 + C1480 + C1480 + C101 * C1206 + C115 * C1187 +
             C1481 + C1481 + C102 * C1205 + C117 * C1476 + C1482 + C1482 +
             C103 * C1478) *
                C47785 * C47770 * C47668 -
            (C117 * C278 + C311 + C311 + C103 * C298 + C115 * C276 + C312 +
             C312 + C102 * C296 + C113 * C275 + C313 + C313 + C101 * C295) *
                C47785 * C47770 * C47821) *
               C47852) *
              C47546)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C119 + C141 + C141 + C101 * C133 + C115 * C120 + C142 +
            C142 + C102 * C134 + C117 * C121 + C143 + C143 + C103 * C135) *
               C47785 * C47770 * C47821 -
           (C117 * C432 + C463 + C463 + C103 * C452 + C115 * C433 + C464 +
            C464 + C102 * C453 + C113 * C434 + C465 + C465 + C101 * C454) *
               C47785 * C47770 * C47668) *
              C47563 * C580 +
          ((C113 * C433 + C469 + C469 + C101 * C453 + C115 * C432 + C470 +
            C470 + C102 * C452 + C117 * C438 + C471 + C471 + C103 * C458) *
               C47785 * C47770 * C47668 -
           (C117 * C122 + C144 + C144 + C103 * C136 + C115 * C121 + C145 +
            C145 + C102 * C135 + C113 * C120 + C146 + C146 + C101 * C134) *
               C47785 * C47770 * C47821) *
              C47563 * C581 +
          ((C113 * C121 + C147 + C147 + C101 * C135 + C115 * C122 + C148 +
            C148 + C102 * C136 + C117 * C123 + C149 + C149 + C103 * C137) *
               C47785 * C47770 * C47821 -
           (C117 * C440 + C475 + C475 + C103 * C460 + C115 * C438 + C476 +
            C476 + C102 * C458 + C113 * C432 + C477 + C477 + C101 * C452) *
               C47785 * C47770 * C47668) *
              C47563 * C582 +
          ((C113 * C438 + C694 + C694 + C101 * C458 + C115 * C440 + C695 +
            C695 + C102 * C460 + C117 * C690 + C696 + C696 + C103 * C692) *
               C47785 * C47770 * C47668 -
           (C117 * C124 + C150 + C150 + C103 * C138 + C115 * C123 + C151 +
            C151 + C102 * C137 + C113 * C122 + C152 + C152 + C101 * C136) *
               C47785 * C47770 * C47821) *
              C47563 * C47856)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C119 + C141 + C141 + C101 * C133 + C115 * C120 + C142 +
            C142 + C102 * C134 + C117 * C121 + C143 + C143 + C103 * C135) *
               C47785 * C47770 * C2156 -
           (C117 * C432 + C463 + C463 + C103 * C452 + C115 * C433 + C464 +
            C464 + C102 * C453 + C113 * C434 + C465 + C465 + C101 * C454) *
               C47785 * C47770 * C2157 +
           (C113 * C435 + C466 + C466 + C101 * C455 + C115 * C436 + C467 +
            C467 + C102 * C456 + C117 * C437 + C468 + C468 + C103 * C457) *
               C47785 * C47770 * C2158 -
           (C117 * C1882 + C1901 + C1901 + C103 * C1894 + C115 * C1883 + C1902 +
            C1902 + C102 * C1895 + C113 * C1884 + C1903 + C1903 +
            C101 * C1896) *
               C47785 * C47770 * C47868) *
              C47563 * C47806 +
          ((C113 * C433 + C469 + C469 + C101 * C453 + C115 * C432 + C470 +
            C470 + C102 * C452 + C117 * C438 + C471 + C471 + C103 * C458) *
               C47785 * C47770 * C2157 -
           (C117 * C122 + C144 + C144 + C103 * C136 + C115 * C121 + C145 +
            C145 + C102 * C135 + C113 * C120 + C146 + C146 + C101 * C134) *
               C47785 * C47770 * C2156 -
           (C117 * C439 + C472 + C472 + C103 * C459 + C115 * C437 + C473 +
            C473 + C102 * C457 + C113 * C436 + C474 + C474 + C101 * C456) *
               C47785 * C47770 * C2158 +
           (C113 * C1883 + C2164 + C2164 + C101 * C1895 + C115 * C1882 + C2165 +
            C2165 + C102 * C1894 + C117 * C2160 + C2166 + C2166 +
            C103 * C2162) *
               C47785 * C47770 * C47868) *
              C47563 * C47546)) /
            (p * q * std::sqrt(p + q));
    d2ee[14] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C119 + C141 + C141 + C101 * C133 + C115 * C120 + C142 +
            C142 + C102 * C134 + C117 * C121 + C143 + C143 + C103 * C135) *
               C47785 * C47770 * C47581 * C47891 -
           (C117 * C271 + C302 + C302 + C103 * C291 + C115 * C272 + C303 +
            C303 + C102 * C292 + C113 * C273 + C304 + C304 + C101 * C293) *
               C47785 * C47770 * C47581 * C47879 +
           (C113 * C274 + C305 + C305 + C101 * C294 + C115 * C275 + C306 +
            C306 + C102 * C295 + C117 * C276 + C307 + C307 + C103 * C296) *
               C47785 * C47770 * C47581 * C47852) *
              C268 +
          ((C113 * C272 + C308 + C308 + C101 * C292 + C115 * C271 + C309 +
            C309 + C102 * C291 + C117 * C277 + C310 + C310 + C103 * C297) *
               C47785 * C47770 * C47581 * C47879 -
           (C117 * C122 + C144 + C144 + C103 * C136 + C115 * C121 + C145 +
            C145 + C102 * C135 + C113 * C120 + C146 + C146 + C101 * C134) *
               C47785 * C47770 * C47581 * C47891 -
           (C117 * C278 + C311 + C311 + C103 * C298 + C115 * C276 + C312 +
            C312 + C102 * C296 + C113 * C275 + C313 + C313 + C101 * C295) *
               C47785 * C47770 * C47581 * C47852) *
              C269 +
          ((C113 * C121 + C147 + C147 + C101 * C135 + C115 * C122 + C148 +
            C148 + C102 * C136 + C117 * C123 + C149 + C149 + C103 * C137) *
               C47785 * C47770 * C47581 * C47891 -
           (C117 * C279 + C314 + C314 + C103 * C299 + C115 * C277 + C315 +
            C315 + C102 * C297 + C113 * C271 + C316 + C316 + C101 * C291) *
               C47785 * C47770 * C47581 * C47879 +
           (C113 * C276 + C317 + C317 + C101 * C296 + C115 * C278 + C318 +
            C318 + C102 * C298 + C117 * C280 + C319 + C319 + C103 * C300) *
               C47785 * C47770 * C47581 * C47852) *
              C47846)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((C113 * C119 + C141 + C141 + C101 * C133 + C115 * C120 + C142 + C142 +
           C102 * C134 + C117 * C121 + C143 + C143 + C103 * C135) *
              C47785 * C47770 * C47581 * C47563 * C108 -
          (C117 * C122 + C144 + C144 + C103 * C136 + C115 * C121 + C145 + C145 +
           C102 * C135 + C113 * C120 + C146 + C146 + C101 * C134) *
              C47785 * C47770 * C47581 * C47563 * C109 +
          (C113 * C121 + C147 + C147 + C101 * C135 + C115 * C122 + C148 + C148 +
           C102 * C136 + C117 * C123 + C149 + C149 + C103 * C137) *
              C47785 * C47770 * C47581 * C47563 * C110 -
          (C117 * C124 + C150 + C150 + C103 * C138 + C115 * C123 + C151 + C151 +
           C102 * C137 + C113 * C122 + C152 + C152 + C101 * C136) *
              C47785 * C47770 * C47581 * C47563 * C111 +
          (C113 * C123 + C153 + C153 + C101 * C137 + C115 * C124 + C154 + C154 +
           C102 * C138 + C117 * C125 + C155 + C155 + C103 * C139) *
              C47785 * C47770 * C47581 * C47563 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C119 + C141 + C141 + C101 * C133 + C115 * C120 + C142 +
            C142 + C102 * C134 + C117 * C121 + C143 + C143 + C103 * C135) *
               C47785 * C47770 * C47581 * C976 -
           (C117 * C271 + C302 + C302 + C103 * C291 + C115 * C272 + C303 +
            C303 + C102 * C292 + C113 * C273 + C304 + C304 + C101 * C293) *
               C47785 * C47770 * C47581 * C977 +
           (C113 * C274 + C305 + C305 + C101 * C294 + C115 * C275 + C306 +
            C306 + C102 * C295 + C117 * C276 + C307 + C307 + C103 * C296) *
               C47785 * C47770 * C47581 * C47852) *
              C47888 +
          ((C113 * C272 + C308 + C308 + C101 * C292 + C115 * C271 + C309 +
            C309 + C102 * C291 + C117 * C277 + C310 + C310 + C103 * C297) *
               C47785 * C47770 * C47581 * C977 -
           (C117 * C122 + C144 + C144 + C103 * C136 + C115 * C121 + C145 +
            C145 + C102 * C135 + C113 * C120 + C146 + C146 + C101 * C134) *
               C47785 * C47770 * C47581 * C976 -
           (C117 * C278 + C311 + C311 + C103 * C298 + C115 * C276 + C312 +
            C312 + C102 * C296 + C113 * C275 + C313 + C313 + C101 * C295) *
               C47785 * C47770 * C47581 * C47852) *
              C47875 +
          ((C113 * C121 + C147 + C147 + C101 * C135 + C115 * C122 + C148 +
            C148 + C102 * C136 + C117 * C123 + C149 + C149 + C103 * C137) *
               C47785 * C47770 * C47581 * C976 -
           (C117 * C279 + C314 + C314 + C103 * C299 + C115 * C277 + C315 +
            C315 + C102 * C297 + C113 * C271 + C316 + C316 + C101 * C291) *
               C47785 * C47770 * C47581 * C977 +
           (C113 * C276 + C317 + C317 + C101 * C296 + C115 * C278 + C318 +
            C318 + C102 * C298 + C117 * C280 + C319 + C319 + C103 * C300) *
               C47785 * C47770 * C47581 * C47852) *
              C47846)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((C113 * C119 + C141 + C141 + C101 * C133 + C115 * C120 + C142 + C142 +
           C102 * C134 + C117 * C121 + C143 + C143 + C103 * C135) *
              C47785 * C47770 * C47581 * C1044 -
          (C117 * C271 + C302 + C302 + C103 * C291 + C115 * C272 + C303 + C303 +
           C102 * C292 + C113 * C273 + C304 + C304 + C101 * C293) *
              C47785 * C47770 * C47581 * C1045 +
          (C113 * C274 + C305 + C305 + C101 * C294 + C115 * C275 + C306 + C306 +
           C102 * C295 + C117 * C276 + C307 + C307 + C103 * C296) *
              C47785 * C47770 * C47581 * C1046 -
          (C117 * C1050 + C1069 + C1069 + C103 * C1062 + C115 * C1051 + C1070 +
           C1070 + C102 * C1063 + C113 * C1052 + C1071 + C1071 + C101 * C1064) *
              C47785 * C47770 * C47581 * C1047 +
          (C113 * C1053 + C1072 + C1072 + C101 * C1065 + C115 * C1054 + C1073 +
           C1073 + C102 * C1066 + C117 * C1055 + C1074 + C1074 + C103 * C1067) *
              C47785 * C47770 * C47581 * C1048) *
         C47535) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C119 + C141 + C141 + C101 * C133 + C115 * C120 + C142 +
            C142 + C102 * C134 + C117 * C121 + C143 + C143 + C103 * C135) *
               C47785 * C47770 * C1702 -
           (C117 * C432 + C463 + C463 + C103 * C452 + C115 * C433 + C464 +
            C464 + C102 * C453 + C113 * C434 + C465 + C465 + C101 * C454) *
               C47785 * C47770 * C1703 +
           (C113 * C435 + C466 + C466 + C101 * C455 + C115 * C436 + C467 +
            C467 + C102 * C456 + C117 * C437 + C468 + C468 + C103 * C457) *
               C47785 * C47770 * C47855) *
              C47563 * C47888 +
          ((C113 * C433 + C469 + C469 + C101 * C453 + C115 * C432 + C470 +
            C470 + C102 * C452 + C117 * C438 + C471 + C471 + C103 * C458) *
               C47785 * C47770 * C1703 -
           (C117 * C122 + C144 + C144 + C103 * C136 + C115 * C121 + C145 +
            C145 + C102 * C135 + C113 * C120 + C146 + C146 + C101 * C134) *
               C47785 * C47770 * C1702 -
           (C117 * C439 + C472 + C472 + C103 * C459 + C115 * C437 + C473 +
            C473 + C102 * C457 + C113 * C436 + C474 + C474 + C101 * C456) *
               C47785 * C47770 * C47855) *
              C47563 * C47875 +
          ((C113 * C121 + C147 + C147 + C101 * C135 + C115 * C122 + C148 +
            C148 + C102 * C136 + C117 * C123 + C149 + C149 + C103 * C137) *
               C47785 * C47770 * C1702 -
           (C117 * C440 + C475 + C475 + C103 * C460 + C115 * C438 + C476 +
            C476 + C102 * C458 + C113 * C432 + C477 + C477 + C101 * C452) *
               C47785 * C47770 * C1703 +
           (C113 * C437 + C478 + C478 + C101 * C457 + C115 * C439 + C479 +
            C479 + C102 * C459 + C117 * C441 + C480 + C480 + C103 * C461) *
               C47785 * C47770 * C47855) *
              C47563 * C47846)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C119 + C141 + C141 + C101 * C133 + C115 * C120 + C142 +
            C142 + C102 * C134 + C117 * C121 + C143 + C143 + C103 * C135) *
               C47785 * C47770 * C1702 -
           (C117 * C432 + C463 + C463 + C103 * C452 + C115 * C433 + C464 +
            C464 + C102 * C453 + C113 * C434 + C465 + C465 + C101 * C454) *
               C47785 * C47770 * C1703 +
           (C113 * C435 + C466 + C466 + C101 * C455 + C115 * C436 + C467 +
            C467 + C102 * C456 + C117 * C437 + C468 + C468 + C103 * C457) *
               C47785 * C47770 * C47855) *
              C47891 +
          ((C113 * C842 + C858 + C858 + C101 * C852 + C115 * C843 + C859 +
            C859 + C102 * C853 + C117 * C844 + C860 + C860 + C103 * C854) *
               C47785 * C47770 * C1703 -
           (C117 * C271 + C302 + C302 + C103 * C291 + C115 * C272 + C303 +
            C303 + C102 * C292 + C113 * C273 + C304 + C304 + C101 * C293) *
               C47785 * C47770 * C1702 -
           (C117 * C1184 + C1212 + C1212 + C103 * C1202 + C115 * C1185 + C1213 +
            C1213 + C102 * C1203 + C113 * C1186 + C1214 + C1214 +
            C101 * C1204) *
               C47785 * C47770 * C47855) *
              C47879 +
          ((C113 * C274 + C305 + C305 + C101 * C294 + C115 * C275 + C306 +
            C306 + C102 * C295 + C117 * C276 + C307 + C307 + C103 * C296) *
               C47785 * C47770 * C1702 -
           (C117 * C1187 + C1215 + C1215 + C103 * C1205 + C115 * C1188 + C1216 +
            C1216 + C102 * C1206 + C113 * C1189 + C1217 + C1217 +
            C101 * C1207) *
               C47785 * C47770 * C1703 +
           (C113 * C1190 + C1218 + C1218 + C101 * C1208 + C115 * C1191 + C1219 +
            C1219 + C102 * C1209 + C117 * C1192 + C1220 + C1220 +
            C103 * C1210) *
               C47785 * C47770 * C47855) *
              C47852) *
         C47535) /
            (p * q * std::sqrt(p + q));
    d2ee[15] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C119 + C141 + C141 + C101 * C133 + C115 * C120 + C142 +
             C142 + C102 * C134 + C117 * C121 + C143 + C143 + C103 * C135) *
                C47785 * C47770 * C3136 -
            (C117 * C432 + C463 + C463 + C103 * C452 + C115 * C433 + C464 +
             C464 + C102 * C453 + C113 * C434 + C465 + C465 + C101 * C454) *
                C47785 * C47770 * C47668) *
               C47820 +
           ((C113 * C842 + C858 + C858 + C101 * C852 + C115 * C843 + C859 +
             C859 + C102 * C853 + C117 * C844 + C860 + C860 + C103 * C854) *
                C47785 * C47770 * C47668 -
            (C117 * C271 + C302 + C302 + C103 * C291 + C115 * C272 + C303 +
             C303 + C102 * C292 + C113 * C273 + C304 + C304 + C101 * C293) *
                C47785 * C47770 * C3136) *
               C47626) *
              C47540 +
          (((C113 * C433 + C469 + C469 + C101 * C453 + C115 * C432 + C470 +
             C470 + C102 * C452 + C117 * C438 + C471 + C471 + C103 * C458) *
                C47785 * C47770 * C47668 -
            (C117 * C122 + C144 + C144 + C103 * C136 + C115 * C121 + C145 +
             C145 + C102 * C135 + C113 * C120 + C146 + C146 + C101 * C134) *
                C47785 * C47770 * C3136) *
               C47820 +
           ((C113 * C272 + C308 + C308 + C101 * C292 + C115 * C271 + C309 +
             C309 + C102 * C291 + C117 * C277 + C310 + C310 + C103 * C297) *
                C47785 * C47770 * C3136 -
            (C117 * C845 + C861 + C861 + C103 * C855 + C115 * C844 + C862 +
             C862 + C102 * C854 + C113 * C843 + C863 + C863 + C101 * C853) *
                C47785 * C47770 * C47668) *
               C47626) *
              C47549 +
          (((C113 * C121 + C147 + C147 + C101 * C135 + C115 * C122 + C148 +
             C148 + C102 * C136 + C117 * C123 + C149 + C149 + C103 * C137) *
                C47785 * C47770 * C3136 -
            (C117 * C440 + C475 + C475 + C103 * C460 + C115 * C438 + C476 +
             C476 + C102 * C458 + C113 * C432 + C477 + C477 + C101 * C452) *
                C47785 * C47770 * C47668) *
               C47820 +
           ((C113 * C844 + C864 + C864 + C101 * C854 + C115 * C845 + C865 +
             C865 + C102 * C855 + C117 * C846 + C866 + C866 + C103 * C856) *
                C47785 * C47770 * C47668 -
            (C117 * C279 + C314 + C314 + C103 * C299 + C115 * C277 + C315 +
             C315 + C102 * C297 + C113 * C271 + C316 + C316 + C101 * C291) *
                C47785 * C47770 * C3136) *
               C47626) *
              C2745)) /
        (p * q * std::sqrt(p + q));
    d2ee[16] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C119 + C141 + C141 + C101 * C133 + C115 * C120 + C142 +
             C142 + C102 * C134 + C117 * C121 + C143 + C143 + C103 * C135) *
                C47785 * C47770 * C47664 -
            (C117 * C432 + C463 + C463 + C103 * C452 + C115 * C433 + C464 +
             C464 + C102 * C453 + C113 * C434 + C465 + C465 + C101 * C454) *
                C47785 * C47770 * C47671 +
            (C113 * C435 + C466 + C466 + C101 * C455 + C115 * C436 + C467 +
             C467 + C102 * C456 + C117 * C437 + C468 + C468 + C103 * C457) *
                C47785 * C47770 * C3644) *
               C47820 +
           ((C113 * C842 + C858 + C858 + C101 * C852 + C115 * C843 + C859 +
             C859 + C102 * C853 + C117 * C844 + C860 + C860 + C103 * C854) *
                C47785 * C47770 * C47671 -
            (C117 * C271 + C302 + C302 + C103 * C291 + C115 * C272 + C303 +
             C303 + C102 * C292 + C113 * C273 + C304 + C304 + C101 * C293) *
                C47785 * C47770 * C47664 -
            (C117 * C1184 + C1212 + C1212 + C103 * C1202 + C115 * C1185 +
             C1213 + C1213 + C102 * C1203 + C113 * C1186 + C1214 + C1214 +
             C101 * C1204) *
                C47785 * C47770 * C3644) *
               C47626) *
              C2482 +
          (((C113 * C433 + C469 + C469 + C101 * C453 + C115 * C432 + C470 +
             C470 + C102 * C452 + C117 * C438 + C471 + C471 + C103 * C458) *
                C47785 * C47770 * C47671 -
            (C117 * C122 + C144 + C144 + C103 * C136 + C115 * C121 + C145 +
             C145 + C102 * C135 + C113 * C120 + C146 + C146 + C101 * C134) *
                C47785 * C47770 * C47664 -
            (C117 * C439 + C472 + C472 + C103 * C459 + C115 * C437 + C473 +
             C473 + C102 * C457 + C113 * C436 + C474 + C474 + C101 * C456) *
                C47785 * C47770 * C3644) *
               C47820 +
           ((C113 * C272 + C308 + C308 + C101 * C292 + C115 * C271 + C309 +
             C309 + C102 * C291 + C117 * C277 + C310 + C310 + C103 * C297) *
                C47785 * C47770 * C47664 -
            (C117 * C845 + C861 + C861 + C103 * C855 + C115 * C844 + C862 +
             C862 + C102 * C854 + C113 * C843 + C863 + C863 + C101 * C853) *
                C47785 * C47770 * C47671 +
            (C113 * C1185 + C2056 + C2056 + C101 * C1203 + C115 * C1184 +
             C2057 + C2057 + C102 * C1202 + C117 * C2052 + C2058 + C2058 +
             C103 * C2054) *
                C47785 * C47770 * C3644) *
               C47626) *
              C47546)) /
        (p * q * std::sqrt(p + q));
    d2ee[17] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C119 + C141 + C141 + C101 * C133 + C115 * C120 + C142 +
             C142 + C102 * C134 + C117 * C121 + C143 + C143 + C103 * C135) *
                C47785 * C47770 * C3136 -
            (C117 * C432 + C463 + C463 + C103 * C452 + C115 * C433 + C464 +
             C464 + C102 * C453 + C113 * C434 + C465 + C465 + C101 * C454) *
                C47785 * C47770 * C47668) *
               C47891 +
           ((C113 * C842 + C858 + C858 + C101 * C852 + C115 * C843 + C859 +
             C859 + C102 * C853 + C117 * C844 + C860 + C860 + C103 * C854) *
                C47785 * C47770 * C47668 -
            (C117 * C271 + C302 + C302 + C103 * C291 + C115 * C272 + C303 +
             C303 + C102 * C292 + C113 * C273 + C304 + C304 + C101 * C293) *
                C47785 * C47770 * C3136) *
               C47879 +
           ((C113 * C274 + C305 + C305 + C101 * C294 + C115 * C275 + C306 +
             C306 + C102 * C295 + C117 * C276 + C307 + C307 + C103 * C296) *
                C47785 * C47770 * C3136 -
            (C117 * C1187 + C1215 + C1215 + C103 * C1205 + C115 * C1188 +
             C1216 + C1216 + C102 * C1206 + C113 * C1189 + C1217 + C1217 +
             C101 * C1207) *
                C47785 * C47770 * C47668) *
               C47852) *
              C2482 +
          (((C113 * C433 + C469 + C469 + C101 * C453 + C115 * C432 + C470 +
             C470 + C102 * C452 + C117 * C438 + C471 + C471 + C103 * C458) *
                C47785 * C47770 * C47668 -
            (C117 * C122 + C144 + C144 + C103 * C136 + C115 * C121 + C145 +
             C145 + C102 * C135 + C113 * C120 + C146 + C146 + C101 * C134) *
                C47785 * C47770 * C3136) *
               C47891 +
           ((C113 * C272 + C308 + C308 + C101 * C292 + C115 * C271 + C309 +
             C309 + C102 * C291 + C117 * C277 + C310 + C310 + C103 * C297) *
                C47785 * C47770 * C3136 -
            (C117 * C845 + C861 + C861 + C103 * C855 + C115 * C844 + C862 +
             C862 + C102 * C854 + C113 * C843 + C863 + C863 + C101 * C853) *
                C47785 * C47770 * C47668) *
               C47879 +
           ((C113 * C1188 + C1480 + C1480 + C101 * C1206 + C115 * C1187 +
             C1481 + C1481 + C102 * C1205 + C117 * C1476 + C1482 + C1482 +
             C103 * C1478) *
                C47785 * C47770 * C47668 -
            (C117 * C278 + C311 + C311 + C103 * C298 + C115 * C276 + C312 +
             C312 + C102 * C296 + C113 * C275 + C313 + C313 + C101 * C295) *
                C47785 * C47770 * C3136) *
               C47852) *
              C47546)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C119 + C141 + C141 + C101 * C133 + C115 * C120 + C142 +
            C142 + C102 * C134 + C117 * C121 + C143 + C143 + C103 * C135) *
               C47785 * C47770 * C3136 -
           (C117 * C432 + C463 + C463 + C103 * C452 + C115 * C433 + C464 +
            C464 + C102 * C453 + C113 * C434 + C465 + C465 + C101 * C454) *
               C47785 * C47770 * C47668) *
              C47563 * C47897 +
          ((C113 * C433 + C469 + C469 + C101 * C453 + C115 * C432 + C470 +
            C470 + C102 * C452 + C117 * C438 + C471 + C471 + C103 * C458) *
               C47785 * C47770 * C47668 -
           (C117 * C122 + C144 + C144 + C103 * C136 + C115 * C121 + C145 +
            C145 + C102 * C135 + C113 * C120 + C146 + C146 + C101 * C134) *
               C47785 * C47770 * C3136) *
              C47563 * C47890 +
          ((C113 * C121 + C147 + C147 + C101 * C135 + C115 * C122 + C148 +
            C148 + C102 * C136 + C117 * C123 + C149 + C149 + C103 * C137) *
               C47785 * C47770 * C3136 -
           (C117 * C440 + C475 + C475 + C103 * C460 + C115 * C438 + C476 +
            C476 + C102 * C458 + C113 * C432 + C477 + C477 + C101 * C452) *
               C47785 * C47770 * C47668) *
              C47563 * C47877 +
          ((C113 * C438 + C694 + C694 + C101 * C458 + C115 * C440 + C695 +
            C695 + C102 * C460 + C117 * C690 + C696 + C696 + C103 * C692) *
               C47785 * C47770 * C47668 -
           (C117 * C124 + C150 + C150 + C103 * C138 + C115 * C123 + C151 +
            C151 + C102 * C137 + C113 * C122 + C152 + C152 + C101 * C136) *
               C47785 * C47770 * C3136) *
              C47563 * C47856)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C119 + C141 + C141 + C101 * C133 + C115 * C120 + C142 +
            C142 + C102 * C134 + C117 * C121 + C143 + C143 + C103 * C135) *
               C47785 * C47770 * C47899 -
           (C117 * C432 + C463 + C463 + C103 * C452 + C115 * C433 + C464 +
            C464 + C102 * C453 + C113 * C434 + C465 + C465 + C101 * C454) *
               C47785 * C47770 * C47896 +
           (C113 * C435 + C466 + C466 + C101 * C455 + C115 * C436 + C467 +
            C467 + C102 * C456 + C117 * C437 + C468 + C468 + C103 * C457) *
               C47785 * C47770 * C47887 -
           (C117 * C1882 + C1901 + C1901 + C103 * C1894 + C115 * C1883 + C1902 +
            C1902 + C102 * C1895 + C113 * C1884 + C1903 + C1903 +
            C101 * C1896) *
               C47785 * C47770 * C47868) *
              C47563 * C2482 +
          ((C113 * C433 + C469 + C469 + C101 * C453 + C115 * C432 + C470 +
            C470 + C102 * C452 + C117 * C438 + C471 + C471 + C103 * C458) *
               C47785 * C47770 * C47896 -
           (C117 * C122 + C144 + C144 + C103 * C136 + C115 * C121 + C145 +
            C145 + C102 * C135 + C113 * C120 + C146 + C146 + C101 * C134) *
               C47785 * C47770 * C47899 -
           (C117 * C439 + C472 + C472 + C103 * C459 + C115 * C437 + C473 +
            C473 + C102 * C457 + C113 * C436 + C474 + C474 + C101 * C456) *
               C47785 * C47770 * C47887 +
           (C113 * C1883 + C2164 + C2164 + C101 * C1895 + C115 * C1882 + C2165 +
            C2165 + C102 * C1894 + C117 * C2160 + C2166 + C2166 +
            C103 * C2162) *
               C47785 * C47770 * C47868) *
              C47563 * C47546)) /
            (p * q * std::sqrt(p + q));
    d2ee[18] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C119 + C141 + C141 + C101 * C133 + C115 * C120 + C142 +
            C142 + C102 * C134 + C117 * C121 + C143 + C143 + C103 * C135) *
               C47785 * C47770 * C47664 -
           (C117 * C432 + C463 + C463 + C103 * C452 + C115 * C433 + C464 +
            C464 + C102 * C453 + C113 * C434 + C465 + C465 + C101 * C454) *
               C47785 * C47770 * C47671 +
           (C113 * C435 + C466 + C466 + C101 * C455 + C115 * C436 + C467 +
            C467 + C102 * C456 + C117 * C437 + C468 + C468 + C103 * C457) *
               C47785 * C47770 * C3644) *
              C47563 * C47540 +
          ((C113 * C433 + C469 + C469 + C101 * C453 + C115 * C432 + C470 +
            C470 + C102 * C452 + C117 * C438 + C471 + C471 + C103 * C458) *
               C47785 * C47770 * C47671 -
           (C117 * C122 + C144 + C144 + C103 * C136 + C115 * C121 + C145 +
            C145 + C102 * C135 + C113 * C120 + C146 + C146 + C101 * C134) *
               C47785 * C47770 * C47664 -
           (C117 * C439 + C472 + C472 + C103 * C459 + C115 * C437 + C473 +
            C473 + C102 * C457 + C113 * C436 + C474 + C474 + C101 * C456) *
               C47785 * C47770 * C3644) *
              C47563 * C47549 +
          ((C113 * C121 + C147 + C147 + C101 * C135 + C115 * C122 + C148 +
            C148 + C102 * C136 + C117 * C123 + C149 + C149 + C103 * C137) *
               C47785 * C47770 * C47664 -
           (C117 * C440 + C475 + C475 + C103 * C460 + C115 * C438 + C476 +
            C476 + C102 * C458 + C113 * C432 + C477 + C477 + C101 * C452) *
               C47785 * C47770 * C47671 +
           (C113 * C437 + C478 + C478 + C101 * C457 + C115 * C439 + C479 +
            C479 + C102 * C459 + C117 * C441 + C480 + C480 + C103 * C461) *
               C47785 * C47770 * C3644) *
              C47563 * C2745)) /
        (p * q * std::sqrt(p + q));
    d2ee[19] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C119 + C141 + C141 + C101 * C133 + C115 * C120 + C142 +
            C142 + C102 * C134 + C117 * C121 + C143 + C143 + C103 * C135) *
               C47785 * C47770 * C3136 -
           (C117 * C432 + C463 + C463 + C103 * C452 + C115 * C433 + C464 +
            C464 + C102 * C453 + C113 * C434 + C465 + C465 + C101 * C454) *
               C47785 * C47770 * C47668) *
              C47563 * C47897 +
          ((C113 * C433 + C469 + C469 + C101 * C453 + C115 * C432 + C470 +
            C470 + C102 * C452 + C117 * C438 + C471 + C471 + C103 * C458) *
               C47785 * C47770 * C47668 -
           (C117 * C122 + C144 + C144 + C103 * C136 + C115 * C121 + C145 +
            C145 + C102 * C135 + C113 * C120 + C146 + C146 + C101 * C134) *
               C47785 * C47770 * C3136) *
              C47563 * C47890 +
          ((C113 * C121 + C147 + C147 + C101 * C135 + C115 * C122 + C148 +
            C148 + C102 * C136 + C117 * C123 + C149 + C149 + C103 * C137) *
               C47785 * C47770 * C3136 -
           (C117 * C440 + C475 + C475 + C103 * C460 + C115 * C438 + C476 +
            C476 + C102 * C458 + C113 * C432 + C477 + C477 + C101 * C452) *
               C47785 * C47770 * C47668) *
              C47563 * C47877 +
          ((C113 * C438 + C694 + C694 + C101 * C458 + C115 * C440 + C695 +
            C695 + C102 * C460 + C117 * C690 + C696 + C696 + C103 * C692) *
               C47785 * C47770 * C47668 -
           (C117 * C124 + C150 + C150 + C103 * C138 + C115 * C123 + C151 +
            C151 + C102 * C137 + C113 * C122 + C152 + C152 + C101 * C136) *
               C47785 * C47770 * C3136) *
              C47563 * C47856)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C119 + C141 + C141 + C101 * C133 + C115 * C120 + C142 +
             C142 + C102 * C134 + C117 * C121 + C143 + C143 + C103 * C135) *
                C47785 * C47770 * C3136 -
            (C117 * C432 + C463 + C463 + C103 * C452 + C115 * C433 + C464 +
             C464 + C102 * C453 + C113 * C434 + C465 + C465 + C101 * C454) *
                C47785 * C47770 * C47668) *
               C47891 +
           ((C113 * C842 + C858 + C858 + C101 * C852 + C115 * C843 + C859 +
             C859 + C102 * C853 + C117 * C844 + C860 + C860 + C103 * C854) *
                C47785 * C47770 * C47668 -
            (C117 * C271 + C302 + C302 + C103 * C291 + C115 * C272 + C303 +
             C303 + C102 * C292 + C113 * C273 + C304 + C304 + C101 * C293) *
                C47785 * C47770 * C3136) *
               C47879 +
           ((C113 * C274 + C305 + C305 + C101 * C294 + C115 * C275 + C306 +
             C306 + C102 * C295 + C117 * C276 + C307 + C307 + C103 * C296) *
                C47785 * C47770 * C3136 -
            (C117 * C1187 + C1215 + C1215 + C103 * C1205 + C115 * C1188 +
             C1216 + C1216 + C102 * C1206 + C113 * C1189 + C1217 + C1217 +
             C101 * C1207) *
                C47785 * C47770 * C47668) *
               C47852) *
              C2482 +
          (((C113 * C433 + C469 + C469 + C101 * C453 + C115 * C432 + C470 +
             C470 + C102 * C452 + C117 * C438 + C471 + C471 + C103 * C458) *
                C47785 * C47770 * C47668 -
            (C117 * C122 + C144 + C144 + C103 * C136 + C115 * C121 + C145 +
             C145 + C102 * C135 + C113 * C120 + C146 + C146 + C101 * C134) *
                C47785 * C47770 * C3136) *
               C47891 +
           ((C113 * C272 + C308 + C308 + C101 * C292 + C115 * C271 + C309 +
             C309 + C102 * C291 + C117 * C277 + C310 + C310 + C103 * C297) *
                C47785 * C47770 * C3136 -
            (C117 * C845 + C861 + C861 + C103 * C855 + C115 * C844 + C862 +
             C862 + C102 * C854 + C113 * C843 + C863 + C863 + C101 * C853) *
                C47785 * C47770 * C47668) *
               C47879 +
           ((C113 * C1188 + C1480 + C1480 + C101 * C1206 + C115 * C1187 +
             C1481 + C1481 + C102 * C1205 + C117 * C1476 + C1482 + C1482 +
             C103 * C1478) *
                C47785 * C47770 * C47668 -
            (C117 * C278 + C311 + C311 + C103 * C298 + C115 * C276 + C312 +
             C312 + C102 * C296 + C113 * C275 + C313 + C313 + C101 * C295) *
                C47785 * C47770 * C3136) *
               C47852) *
              C47546)) /
            (p * q * std::sqrt(p + q));
    d2ee[20] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C119 + C141 + C141 + C101 * C133 + C115 * C120 + C142 +
            C142 + C102 * C134 + C117 * C121 + C143 + C143 + C103 * C135) *
               C47785 * C47770 * C47581 * C47820 -
           (C117 * C271 + C302 + C302 + C103 * C291 + C115 * C272 + C303 +
            C303 + C102 * C292 + C113 * C273 + C304 + C304 + C101 * C293) *
               C47785 * C47770 * C47581 * C47626) *
              C580 +
          ((C113 * C272 + C308 + C308 + C101 * C292 + C115 * C271 + C309 +
            C309 + C102 * C291 + C117 * C277 + C310 + C310 + C103 * C297) *
               C47785 * C47770 * C47581 * C47626 -
           (C117 * C122 + C144 + C144 + C103 * C136 + C115 * C121 + C145 +
            C145 + C102 * C135 + C113 * C120 + C146 + C146 + C101 * C134) *
               C47785 * C47770 * C47581 * C47820) *
              C581 +
          ((C113 * C121 + C147 + C147 + C101 * C135 + C115 * C122 + C148 +
            C148 + C102 * C136 + C117 * C123 + C149 + C149 + C103 * C137) *
               C47785 * C47770 * C47581 * C47820 -
           (C117 * C279 + C314 + C314 + C103 * C299 + C115 * C277 + C315 +
            C315 + C102 * C297 + C113 * C271 + C316 + C316 + C101 * C291) *
               C47785 * C47770 * C47581 * C47626) *
              C582 +
          ((C113 * C277 + C588 + C588 + C101 * C297 + C115 * C279 + C589 +
            C589 + C102 * C299 + C117 * C584 + C590 + C590 + C103 * C586) *
               C47785 * C47770 * C47581 * C47626 -
           (C117 * C124 + C150 + C150 + C103 * C138 + C115 * C123 + C151 +
            C151 + C102 * C137 + C113 * C122 + C152 + C152 + C101 * C136) *
               C47785 * C47770 * C47581 * C47820) *
              C47856)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C119 + C141 + C141 + C101 * C133 + C115 * C120 + C142 +
            C142 + C102 * C134 + C117 * C121 + C143 + C143 + C103 * C135) *
               C47785 * C47770 * C47581 * C1318 -
           (C117 * C271 + C302 + C302 + C103 * C291 + C115 * C272 + C303 +
            C303 + C102 * C292 + C113 * C273 + C304 + C304 + C101 * C293) *
               C47785 * C47770 * C47581 * C1319 +
           (C113 * C274 + C305 + C305 + C101 * C294 + C115 * C275 + C306 +
            C306 + C102 * C295 + C117 * C276 + C307 + C307 + C103 * C296) *
               C47785 * C47770 * C47581 * C1320 -
           (C117 * C1050 + C1069 + C1069 + C103 * C1062 + C115 * C1051 + C1070 +
            C1070 + C102 * C1063 + C113 * C1052 + C1071 + C1071 +
            C101 * C1064) *
               C47785 * C47770 * C47581 * C47862) *
              C47806 +
          ((C113 * C272 + C308 + C308 + C101 * C292 + C115 * C271 + C309 +
            C309 + C102 * C291 + C117 * C277 + C310 + C310 + C103 * C297) *
               C47785 * C47770 * C47581 * C1319 -
           (C117 * C122 + C144 + C144 + C103 * C136 + C115 * C121 + C145 +
            C145 + C102 * C135 + C113 * C120 + C146 + C146 + C101 * C134) *
               C47785 * C47770 * C47581 * C1318 -
           (C117 * C278 + C311 + C311 + C103 * C298 + C115 * C276 + C312 +
            C312 + C102 * C296 + C113 * C275 + C313 + C313 + C101 * C295) *
               C47785 * C47770 * C47581 * C1320 +
           (C113 * C1051 + C1328 + C1328 + C101 * C1063 + C115 * C1050 + C1329 +
            C1329 + C102 * C1062 + C117 * C1324 + C1330 + C1330 +
            C103 * C1326) *
               C47785 * C47770 * C47581 * C47862) *
              C47546)) /
            (p * q * std::sqrt(p + q));
    d2ee[21] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C119 + C141 + C141 + C101 * C133 + C115 * C120 + C142 +
             C142 + C102 * C134 + C117 * C121 + C143 + C143 + C103 * C135) *
                C47785 * C47770 * C47821 -
            (C117 * C432 + C463 + C463 + C103 * C452 + C115 * C433 + C464 +
             C464 + C102 * C453 + C113 * C434 + C465 + C465 + C101 * C454) *
                C47785 * C47770 * C47668) *
               C47820 +
           ((C113 * C842 + C858 + C858 + C101 * C852 + C115 * C843 + C859 +
             C859 + C102 * C853 + C117 * C844 + C860 + C860 + C103 * C854) *
                C47785 * C47770 * C47668 -
            (C117 * C271 + C302 + C302 + C103 * C291 + C115 * C272 + C303 +
             C303 + C102 * C292 + C113 * C273 + C304 + C304 + C101 * C293) *
                C47785 * C47770 * C47821) *
               C47626) *
              C268 +
          (((C113 * C433 + C469 + C469 + C101 * C453 + C115 * C432 + C470 +
             C470 + C102 * C452 + C117 * C438 + C471 + C471 + C103 * C458) *
                C47785 * C47770 * C47668 -
            (C117 * C122 + C144 + C144 + C103 * C136 + C115 * C121 + C145 +
             C145 + C102 * C135 + C113 * C120 + C146 + C146 + C101 * C134) *
                C47785 * C47770 * C47821) *
               C47820 +
           ((C113 * C272 + C308 + C308 + C101 * C292 + C115 * C271 + C309 +
             C309 + C102 * C291 + C117 * C277 + C310 + C310 + C103 * C297) *
                C47785 * C47770 * C47821 -
            (C117 * C845 + C861 + C861 + C103 * C855 + C115 * C844 + C862 +
             C862 + C102 * C854 + C113 * C843 + C863 + C863 + C101 * C853) *
                C47785 * C47770 * C47668) *
               C47626) *
              C269 +
          (((C113 * C121 + C147 + C147 + C101 * C135 + C115 * C122 + C148 +
             C148 + C102 * C136 + C117 * C123 + C149 + C149 + C103 * C137) *
                C47785 * C47770 * C47821 -
            (C117 * C440 + C475 + C475 + C103 * C460 + C115 * C438 + C476 +
             C476 + C102 * C458 + C113 * C432 + C477 + C477 + C101 * C452) *
                C47785 * C47770 * C47668) *
               C47820 +
           ((C113 * C844 + C864 + C864 + C101 * C854 + C115 * C845 + C865 +
             C865 + C102 * C855 + C117 * C846 + C866 + C866 + C103 * C856) *
                C47785 * C47770 * C47668 -
            (C117 * C279 + C314 + C314 + C103 * C299 + C115 * C277 + C315 +
             C315 + C102 * C297 + C113 * C271 + C316 + C316 + C101 * C291) *
                C47785 * C47770 * C47821) *
               C47626) *
              C47846)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C119 + C141 + C141 + C101 * C133 + C115 * C120 + C142 +
            C142 + C102 * C134 + C117 * C121 + C143 + C143 + C103 * C135) *
               C47785 * C47770 * C47821 -
           (C117 * C432 + C463 + C463 + C103 * C452 + C115 * C433 + C464 +
            C464 + C102 * C453 + C113 * C434 + C465 + C465 + C101 * C454) *
               C47785 * C47770 * C47668) *
              C1318 +
          ((C113 * C842 + C858 + C858 + C101 * C852 + C115 * C843 + C859 +
            C859 + C102 * C853 + C117 * C844 + C860 + C860 + C103 * C854) *
               C47785 * C47770 * C47668 -
           (C117 * C271 + C302 + C302 + C103 * C291 + C115 * C272 + C303 +
            C303 + C102 * C292 + C113 * C273 + C304 + C304 + C101 * C293) *
               C47785 * C47770 * C47821) *
              C1319 +
          ((C113 * C274 + C305 + C305 + C101 * C294 + C115 * C275 + C306 +
            C306 + C102 * C295 + C117 * C276 + C307 + C307 + C103 * C296) *
               C47785 * C47770 * C47821 -
           (C117 * C1187 + C1215 + C1215 + C103 * C1205 + C115 * C1188 + C1216 +
            C1216 + C102 * C1206 + C113 * C1189 + C1217 + C1217 +
            C101 * C1207) *
               C47785 * C47770 * C47668) *
              C1320 +
          ((C113 * C1580 + C1590 + C1590 + C101 * C1586 + C115 * C1581 + C1591 +
            C1591 + C102 * C1587 + C117 * C1582 + C1592 + C1592 +
            C103 * C1588) *
               C47785 * C47770 * C47668 -
           (C117 * C1050 + C1069 + C1069 + C103 * C1062 + C115 * C1051 + C1070 +
            C1070 + C102 * C1063 + C113 * C1052 + C1071 + C1071 +
            C101 * C1064) *
               C47785 * C47770 * C47821) *
              C47862) *
         C47535) /
            (p * q * std::sqrt(p + q));
    d2ee[22] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C119 + C141 + C141 + C101 * C133 + C115 * C120 + C142 +
            C142 + C102 * C134 + C117 * C121 + C143 + C143 + C103 * C135) *
               C47785 * C47770 * C47581 * C47891 -
           (C117 * C271 + C302 + C302 + C103 * C291 + C115 * C272 + C303 +
            C303 + C102 * C292 + C113 * C273 + C304 + C304 + C101 * C293) *
               C47785 * C47770 * C47581 * C47879 +
           (C113 * C274 + C305 + C305 + C101 * C294 + C115 * C275 + C306 +
            C306 + C102 * C295 + C117 * C276 + C307 + C307 + C103 * C296) *
               C47785 * C47770 * C47581 * C47852) *
              C268 +
          ((C113 * C272 + C308 + C308 + C101 * C292 + C115 * C271 + C309 +
            C309 + C102 * C291 + C117 * C277 + C310 + C310 + C103 * C297) *
               C47785 * C47770 * C47581 * C47879 -
           (C117 * C122 + C144 + C144 + C103 * C136 + C115 * C121 + C145 +
            C145 + C102 * C135 + C113 * C120 + C146 + C146 + C101 * C134) *
               C47785 * C47770 * C47581 * C47891 -
           (C117 * C278 + C311 + C311 + C103 * C298 + C115 * C276 + C312 +
            C312 + C102 * C296 + C113 * C275 + C313 + C313 + C101 * C295) *
               C47785 * C47770 * C47581 * C47852) *
              C269 +
          ((C113 * C121 + C147 + C147 + C101 * C135 + C115 * C122 + C148 +
            C148 + C102 * C136 + C117 * C123 + C149 + C149 + C103 * C137) *
               C47785 * C47770 * C47581 * C47891 -
           (C117 * C279 + C314 + C314 + C103 * C299 + C115 * C277 + C315 +
            C315 + C102 * C297 + C113 * C271 + C316 + C316 + C101 * C291) *
               C47785 * C47770 * C47581 * C47879 +
           (C113 * C276 + C317 + C317 + C101 * C296 + C115 * C278 + C318 +
            C318 + C102 * C298 + C117 * C280 + C319 + C319 + C103 * C300) *
               C47785 * C47770 * C47581 * C47852) *
              C47846)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((C113 * C119 + C141 + C141 + C101 * C133 + C115 * C120 + C142 + C142 +
           C102 * C134 + C117 * C121 + C143 + C143 + C103 * C135) *
              C47785 * C47770 * C47581 * C47563 * C108 -
          (C117 * C122 + C144 + C144 + C103 * C136 + C115 * C121 + C145 + C145 +
           C102 * C135 + C113 * C120 + C146 + C146 + C101 * C134) *
              C47785 * C47770 * C47581 * C47563 * C109 +
          (C113 * C121 + C147 + C147 + C101 * C135 + C115 * C122 + C148 + C148 +
           C102 * C136 + C117 * C123 + C149 + C149 + C103 * C137) *
              C47785 * C47770 * C47581 * C47563 * C110 -
          (C117 * C124 + C150 + C150 + C103 * C138 + C115 * C123 + C151 + C151 +
           C102 * C137 + C113 * C122 + C152 + C152 + C101 * C136) *
              C47785 * C47770 * C47581 * C47563 * C111 +
          (C113 * C123 + C153 + C153 + C101 * C137 + C115 * C124 + C154 + C154 +
           C102 * C138 + C117 * C125 + C155 + C155 + C103 * C139) *
              C47785 * C47770 * C47581 * C47563 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C119 + C141 + C141 + C101 * C133 + C115 * C120 + C142 +
            C142 + C102 * C134 + C117 * C121 + C143 + C143 + C103 * C135) *
               C47785 * C47770 * C47892 -
           (C117 * C432 + C463 + C463 + C103 * C452 + C115 * C433 + C464 +
            C464 + C102 * C453 + C113 * C434 + C465 + C465 + C101 * C454) *
               C47785 * C47770 * C47881 +
           (C113 * C435 + C466 + C466 + C101 * C455 + C115 * C436 + C467 +
            C467 + C102 * C456 + C117 * C437 + C468 + C468 + C103 * C457) *
               C47785 * C47770 * C47855) *
              C47563 * C268 +
          ((C113 * C433 + C469 + C469 + C101 * C453 + C115 * C432 + C470 +
            C470 + C102 * C452 + C117 * C438 + C471 + C471 + C103 * C458) *
               C47785 * C47770 * C47881 -
           (C117 * C122 + C144 + C144 + C103 * C136 + C115 * C121 + C145 +
            C145 + C102 * C135 + C113 * C120 + C146 + C146 + C101 * C134) *
               C47785 * C47770 * C47892 -
           (C117 * C439 + C472 + C472 + C103 * C459 + C115 * C437 + C473 +
            C473 + C102 * C457 + C113 * C436 + C474 + C474 + C101 * C456) *
               C47785 * C47770 * C47855) *
              C47563 * C269 +
          ((C113 * C121 + C147 + C147 + C101 * C135 + C115 * C122 + C148 +
            C148 + C102 * C136 + C117 * C123 + C149 + C149 + C103 * C137) *
               C47785 * C47770 * C47892 -
           (C117 * C440 + C475 + C475 + C103 * C460 + C115 * C438 + C476 +
            C476 + C102 * C458 + C113 * C432 + C477 + C477 + C101 * C452) *
               C47785 * C47770 * C47881 +
           (C113 * C437 + C478 + C478 + C101 * C457 + C115 * C439 + C479 +
            C479 + C102 * C459 + C117 * C441 + C480 + C480 + C103 * C461) *
               C47785 * C47770 * C47855) *
              C47563 * C47846)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C119 + C141 + C141 + C101 * C133 + C115 * C120 + C142 +
            C142 + C102 * C134 + C117 * C121 + C143 + C143 + C103 * C135) *
               C47785 * C47770 * C47581 * C976 -
           (C117 * C271 + C302 + C302 + C103 * C291 + C115 * C272 + C303 +
            C303 + C102 * C292 + C113 * C273 + C304 + C304 + C101 * C293) *
               C47785 * C47770 * C47581 * C977 +
           (C113 * C274 + C305 + C305 + C101 * C294 + C115 * C275 + C306 +
            C306 + C102 * C295 + C117 * C276 + C307 + C307 + C103 * C296) *
               C47785 * C47770 * C47581 * C47852) *
              C47888 +
          ((C113 * C272 + C308 + C308 + C101 * C292 + C115 * C271 + C309 +
            C309 + C102 * C291 + C117 * C277 + C310 + C310 + C103 * C297) *
               C47785 * C47770 * C47581 * C977 -
           (C117 * C122 + C144 + C144 + C103 * C136 + C115 * C121 + C145 +
            C145 + C102 * C135 + C113 * C120 + C146 + C146 + C101 * C134) *
               C47785 * C47770 * C47581 * C976 -
           (C117 * C278 + C311 + C311 + C103 * C298 + C115 * C276 + C312 +
            C312 + C102 * C296 + C113 * C275 + C313 + C313 + C101 * C295) *
               C47785 * C47770 * C47581 * C47852) *
              C47875 +
          ((C113 * C121 + C147 + C147 + C101 * C135 + C115 * C122 + C148 +
            C148 + C102 * C136 + C117 * C123 + C149 + C149 + C103 * C137) *
               C47785 * C47770 * C47581 * C976 -
           (C117 * C279 + C314 + C314 + C103 * C299 + C115 * C277 + C315 +
            C315 + C102 * C297 + C113 * C271 + C316 + C316 + C101 * C291) *
               C47785 * C47770 * C47581 * C977 +
           (C113 * C276 + C317 + C317 + C101 * C296 + C115 * C278 + C318 +
            C318 + C102 * C298 + C117 * C280 + C319 + C319 + C103 * C300) *
               C47785 * C47770 * C47581 * C47852) *
              C47846)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((C113 * C119 + C141 + C141 + C101 * C133 + C115 * C120 + C142 + C142 +
           C102 * C134 + C117 * C121 + C143 + C143 + C103 * C135) *
              C47785 * C47770 * C47581 * C1044 -
          (C117 * C271 + C302 + C302 + C103 * C291 + C115 * C272 + C303 + C303 +
           C102 * C292 + C113 * C273 + C304 + C304 + C101 * C293) *
              C47785 * C47770 * C47581 * C1045 +
          (C113 * C274 + C305 + C305 + C101 * C294 + C115 * C275 + C306 + C306 +
           C102 * C295 + C117 * C276 + C307 + C307 + C103 * C296) *
              C47785 * C47770 * C47581 * C1046 -
          (C117 * C1050 + C1069 + C1069 + C103 * C1062 + C115 * C1051 + C1070 +
           C1070 + C102 * C1063 + C113 * C1052 + C1071 + C1071 + C101 * C1064) *
              C47785 * C47770 * C47581 * C1047 +
          (C113 * C1053 + C1072 + C1072 + C101 * C1065 + C115 * C1054 + C1073 +
           C1073 + C102 * C1066 + C117 * C1055 + C1074 + C1074 + C103 * C1067) *
              C47785 * C47770 * C47581 * C1048) *
         C47535) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C119 + C141 + C141 + C101 * C133 + C115 * C120 + C142 +
            C142 + C102 * C134 + C117 * C121 + C143 + C143 + C103 * C135) *
               C47785 * C47770 * C47892 -
           (C117 * C432 + C463 + C463 + C103 * C452 + C115 * C433 + C464 +
            C464 + C102 * C453 + C113 * C434 + C465 + C465 + C101 * C454) *
               C47785 * C47770 * C47881 +
           (C113 * C435 + C466 + C466 + C101 * C455 + C115 * C436 + C467 +
            C467 + C102 * C456 + C117 * C437 + C468 + C468 + C103 * C457) *
               C47785 * C47770 * C47855) *
              C976 +
          ((C113 * C842 + C858 + C858 + C101 * C852 + C115 * C843 + C859 +
            C859 + C102 * C853 + C117 * C844 + C860 + C860 + C103 * C854) *
               C47785 * C47770 * C47881 -
           (C117 * C271 + C302 + C302 + C103 * C291 + C115 * C272 + C303 +
            C303 + C102 * C292 + C113 * C273 + C304 + C304 + C101 * C293) *
               C47785 * C47770 * C47892 -
           (C117 * C1184 + C1212 + C1212 + C103 * C1202 + C115 * C1185 + C1213 +
            C1213 + C102 * C1203 + C113 * C1186 + C1214 + C1214 +
            C101 * C1204) *
               C47785 * C47770 * C47855) *
              C977 +
          ((C113 * C274 + C305 + C305 + C101 * C294 + C115 * C275 + C306 +
            C306 + C102 * C295 + C117 * C276 + C307 + C307 + C103 * C296) *
               C47785 * C47770 * C47892 -
           (C117 * C1187 + C1215 + C1215 + C103 * C1205 + C115 * C1188 + C1216 +
            C1216 + C102 * C1206 + C113 * C1189 + C1217 + C1217 +
            C101 * C1207) *
               C47785 * C47770 * C47881 +
           (C113 * C1190 + C1218 + C1218 + C101 * C1208 + C115 * C1191 + C1219 +
            C1219 + C102 * C1209 + C117 * C1192 + C1220 + C1220 +
            C103 * C1210) *
               C47785 * C47770 * C47855) *
              C47852) *
         C47535) /
            (p * q * std::sqrt(p + q));
    d2ee[23] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C119 + C141 + C141 + C101 * C133 + C115 * C120 + C142 +
            C142 + C102 * C134 + C117 * C121 + C143 + C143 + C103 * C135) *
               C47785 * C47770 * C47821 -
           (C117 * C432 + C463 + C463 + C103 * C452 + C115 * C433 + C464 +
            C464 + C102 * C453 + C113 * C434 + C465 + C465 + C101 * C454) *
               C47785 * C47770 * C47668) *
              C47563 * C580 +
          ((C113 * C433 + C469 + C469 + C101 * C453 + C115 * C432 + C470 +
            C470 + C102 * C452 + C117 * C438 + C471 + C471 + C103 * C458) *
               C47785 * C47770 * C47668 -
           (C117 * C122 + C144 + C144 + C103 * C136 + C115 * C121 + C145 +
            C145 + C102 * C135 + C113 * C120 + C146 + C146 + C101 * C134) *
               C47785 * C47770 * C47821) *
              C47563 * C581 +
          ((C113 * C121 + C147 + C147 + C101 * C135 + C115 * C122 + C148 +
            C148 + C102 * C136 + C117 * C123 + C149 + C149 + C103 * C137) *
               C47785 * C47770 * C47821 -
           (C117 * C440 + C475 + C475 + C103 * C460 + C115 * C438 + C476 +
            C476 + C102 * C458 + C113 * C432 + C477 + C477 + C101 * C452) *
               C47785 * C47770 * C47668) *
              C47563 * C582 +
          ((C113 * C438 + C694 + C694 + C101 * C458 + C115 * C440 + C695 +
            C695 + C102 * C460 + C117 * C690 + C696 + C696 + C103 * C692) *
               C47785 * C47770 * C47668 -
           (C117 * C124 + C150 + C150 + C103 * C138 + C115 * C123 + C151 +
            C151 + C102 * C137 + C113 * C122 + C152 + C152 + C101 * C136) *
               C47785 * C47770 * C47821) *
              C47563 * C47856)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C119 + C141 + C141 + C101 * C133 + C115 * C120 + C142 +
             C142 + C102 * C134 + C117 * C121 + C143 + C143 + C103 * C135) *
                C47785 * C47770 * C47821 -
            (C117 * C432 + C463 + C463 + C103 * C452 + C115 * C433 + C464 +
             C464 + C102 * C453 + C113 * C434 + C465 + C465 + C101 * C454) *
                C47785 * C47770 * C47668) *
               C976 +
           ((C113 * C842 + C858 + C858 + C101 * C852 + C115 * C843 + C859 +
             C859 + C102 * C853 + C117 * C844 + C860 + C860 + C103 * C854) *
                C47785 * C47770 * C47668 -
            (C117 * C271 + C302 + C302 + C103 * C291 + C115 * C272 + C303 +
             C303 + C102 * C292 + C113 * C273 + C304 + C304 + C101 * C293) *
                C47785 * C47770 * C47821) *
               C977 +
           ((C113 * C274 + C305 + C305 + C101 * C294 + C115 * C275 + C306 +
             C306 + C102 * C295 + C117 * C276 + C307 + C307 + C103 * C296) *
                C47785 * C47770 * C47821 -
            (C117 * C1187 + C1215 + C1215 + C103 * C1205 + C115 * C1188 +
             C1216 + C1216 + C102 * C1206 + C113 * C1189 + C1217 + C1217 +
             C101 * C1207) *
                C47785 * C47770 * C47668) *
               C47852) *
              C47806 +
          (((C113 * C433 + C469 + C469 + C101 * C453 + C115 * C432 + C470 +
             C470 + C102 * C452 + C117 * C438 + C471 + C471 + C103 * C458) *
                C47785 * C47770 * C47668 -
            (C117 * C122 + C144 + C144 + C103 * C136 + C115 * C121 + C145 +
             C145 + C102 * C135 + C113 * C120 + C146 + C146 + C101 * C134) *
                C47785 * C47770 * C47821) *
               C976 +
           ((C113 * C272 + C308 + C308 + C101 * C292 + C115 * C271 + C309 +
             C309 + C102 * C291 + C117 * C277 + C310 + C310 + C103 * C297) *
                C47785 * C47770 * C47821 -
            (C117 * C845 + C861 + C861 + C103 * C855 + C115 * C844 + C862 +
             C862 + C102 * C854 + C113 * C843 + C863 + C863 + C101 * C853) *
                C47785 * C47770 * C47668) *
               C977 +
           ((C113 * C1188 + C1480 + C1480 + C101 * C1206 + C115 * C1187 +
             C1481 + C1481 + C102 * C1205 + C117 * C1476 + C1482 + C1482 +
             C103 * C1478) *
                C47785 * C47770 * C47668 -
            (C117 * C278 + C311 + C311 + C103 * C298 + C115 * C276 + C312 +
             C312 + C102 * C296 + C113 * C275 + C313 + C313 + C101 * C295) *
                C47785 * C47770 * C47821) *
               C47852) *
              C47546)) /
            (p * q * std::sqrt(p + q));
    d2ee[24] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((C113 * C119 + C141 + C141 + C101 * C133 + C115 * C120 + C142 + C142 +
           C102 * C134 + C117 * C121 + C143 + C143 + C103 * C135) *
              C47785 * C47770 * C47581 * C47563 * C108 -
          (C117 * C122 + C144 + C144 + C103 * C136 + C115 * C121 + C145 + C145 +
           C102 * C135 + C113 * C120 + C146 + C146 + C101 * C134) *
              C47785 * C47770 * C47581 * C47563 * C109 +
          (C113 * C121 + C147 + C147 + C101 * C135 + C115 * C122 + C148 + C148 +
           C102 * C136 + C117 * C123 + C149 + C149 + C103 * C137) *
              C47785 * C47770 * C47581 * C47563 * C110 -
          (C117 * C124 + C150 + C150 + C103 * C138 + C115 * C123 + C151 + C151 +
           C102 * C137 + C113 * C122 + C152 + C152 + C101 * C136) *
              C47785 * C47770 * C47581 * C47563 * C111 +
          (C113 * C123 + C153 + C153 + C101 * C137 + C115 * C124 + C154 + C154 +
           C102 * C138 + C117 * C125 + C155 + C155 + C103 * C139) *
              C47785 * C47770 * C47581 * C47563 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C119 + C141 + C141 + C101 * C133 + C115 * C120 + C142 +
            C142 + C102 * C134 + C117 * C121 + C143 + C143 + C103 * C135) *
               C47785 * C47770 * C47581 * C47891 -
           (C117 * C271 + C302 + C302 + C103 * C291 + C115 * C272 + C303 +
            C303 + C102 * C292 + C113 * C273 + C304 + C304 + C101 * C293) *
               C47785 * C47770 * C47581 * C47879 +
           (C113 * C274 + C305 + C305 + C101 * C294 + C115 * C275 + C306 +
            C306 + C102 * C295 + C117 * C276 + C307 + C307 + C103 * C296) *
               C47785 * C47770 * C47581 * C47852) *
              C268 +
          ((C113 * C272 + C308 + C308 + C101 * C292 + C115 * C271 + C309 +
            C309 + C102 * C291 + C117 * C277 + C310 + C310 + C103 * C297) *
               C47785 * C47770 * C47581 * C47879 -
           (C117 * C122 + C144 + C144 + C103 * C136 + C115 * C121 + C145 +
            C145 + C102 * C135 + C113 * C120 + C146 + C146 + C101 * C134) *
               C47785 * C47770 * C47581 * C47891 -
           (C117 * C278 + C311 + C311 + C103 * C298 + C115 * C276 + C312 +
            C312 + C102 * C296 + C113 * C275 + C313 + C313 + C101 * C295) *
               C47785 * C47770 * C47581 * C47852) *
              C269 +
          ((C113 * C121 + C147 + C147 + C101 * C135 + C115 * C122 + C148 +
            C148 + C102 * C136 + C117 * C123 + C149 + C149 + C103 * C137) *
               C47785 * C47770 * C47581 * C47891 -
           (C117 * C279 + C314 + C314 + C103 * C299 + C115 * C277 + C315 +
            C315 + C102 * C297 + C113 * C271 + C316 + C316 + C101 * C291) *
               C47785 * C47770 * C47581 * C47879 +
           (C113 * C276 + C317 + C317 + C101 * C296 + C115 * C278 + C318 +
            C318 + C102 * C298 + C117 * C280 + C319 + C319 + C103 * C300) *
               C47785 * C47770 * C47581 * C47852) *
              C47846)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C119 + C141 + C141 + C101 * C133 + C115 * C120 + C142 +
            C142 + C102 * C134 + C117 * C121 + C143 + C143 + C103 * C135) *
               C47785 * C47770 * C47581 * C976 -
           (C117 * C271 + C302 + C302 + C103 * C291 + C115 * C272 + C303 +
            C303 + C102 * C292 + C113 * C273 + C304 + C304 + C101 * C293) *
               C47785 * C47770 * C47581 * C977 +
           (C113 * C274 + C305 + C305 + C101 * C294 + C115 * C275 + C306 +
            C306 + C102 * C295 + C117 * C276 + C307 + C307 + C103 * C296) *
               C47785 * C47770 * C47581 * C47852) *
              C47888 +
          ((C113 * C272 + C308 + C308 + C101 * C292 + C115 * C271 + C309 +
            C309 + C102 * C291 + C117 * C277 + C310 + C310 + C103 * C297) *
               C47785 * C47770 * C47581 * C977 -
           (C117 * C122 + C144 + C144 + C103 * C136 + C115 * C121 + C145 +
            C145 + C102 * C135 + C113 * C120 + C146 + C146 + C101 * C134) *
               C47785 * C47770 * C47581 * C976 -
           (C117 * C278 + C311 + C311 + C103 * C298 + C115 * C276 + C312 +
            C312 + C102 * C296 + C113 * C275 + C313 + C313 + C101 * C295) *
               C47785 * C47770 * C47581 * C47852) *
              C47875 +
          ((C113 * C121 + C147 + C147 + C101 * C135 + C115 * C122 + C148 +
            C148 + C102 * C136 + C117 * C123 + C149 + C149 + C103 * C137) *
               C47785 * C47770 * C47581 * C976 -
           (C117 * C279 + C314 + C314 + C103 * C299 + C115 * C277 + C315 +
            C315 + C102 * C297 + C113 * C271 + C316 + C316 + C101 * C291) *
               C47785 * C47770 * C47581 * C977 +
           (C113 * C276 + C317 + C317 + C101 * C296 + C115 * C278 + C318 +
            C318 + C102 * C298 + C117 * C280 + C319 + C319 + C103 * C300) *
               C47785 * C47770 * C47581 * C47852) *
              C47846)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((C113 * C119 + C141 + C141 + C101 * C133 + C115 * C120 + C142 + C142 +
           C102 * C134 + C117 * C121 + C143 + C143 + C103 * C135) *
              C47785 * C47770 * C47581 * C1044 -
          (C117 * C271 + C302 + C302 + C103 * C291 + C115 * C272 + C303 + C303 +
           C102 * C292 + C113 * C273 + C304 + C304 + C101 * C293) *
              C47785 * C47770 * C47581 * C1045 +
          (C113 * C274 + C305 + C305 + C101 * C294 + C115 * C275 + C306 + C306 +
           C102 * C295 + C117 * C276 + C307 + C307 + C103 * C296) *
              C47785 * C47770 * C47581 * C1046 -
          (C117 * C1050 + C1069 + C1069 + C103 * C1062 + C115 * C1051 + C1070 +
           C1070 + C102 * C1063 + C113 * C1052 + C1071 + C1071 + C101 * C1064) *
              C47785 * C47770 * C47581 * C1047 +
          (C113 * C1053 + C1072 + C1072 + C101 * C1065 + C115 * C1054 + C1073 +
           C1073 + C102 * C1066 + C117 * C1055 + C1074 + C1074 + C103 * C1067) *
              C47785 * C47770 * C47581 * C1048) *
         C47535) /
            (p * q * std::sqrt(p + q));
    d2ee[25] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C4621 * C119 + C4626 + C4626 + C4617 * C133 +
                     C4623 * C120 + C4627 + C4627 + C47839 * C134) *
                        C47785 * C4619 +
                    (C4852 + C4853) * C47785 * C47870) *
                       C47581 * C47622 -
                   ((C4854 + C4855) * C47785 * C47870 +
                    (C4853 + C4852) * C47785 * C4619) *
                       C47581 * C47629 +
                   ((C4855 + C4854) * C47785 * C4619 +
                    (C5794 + C5795) * C47785 * C47870) *
                       C47581 * C2742) *
                      C47540 +
                  (((C4856 + C4857) * C47785 * C4619 +
                    (C4858 + C4859) * C47785 * C47870) *
                       C47581 * C47629 -
                   ((C4857 + C4856) * C47785 * C47870 +
                    (C4623 * C121 + C4632 + C4632 + C47839 * C135 +
                     C4621 * C120 + C4633 + C4633 + C4617 * C134) *
                        C47785 * C4619) *
                       C47581 * C47622 -
                   ((C6126 + C6127) * C47785 * C47870 +
                    (C4859 + C4858) * C47785 * C4619) *
                       C47581 * C2742) *
                      C47549 +
                  (((C4621 * C121 + C4634 + C4634 + C4617 * C135 +
                     C4623 * C122 + C4635 + C4635 + C47839 * C136) *
                        C47785 * C4619 +
                    (C4860 + C4861) * C47785 * C47870) *
                       C47581 * C47622 -
                   ((C4862 + C4863) * C47785 * C47870 +
                    (C4861 + C4860) * C47785 * C4619) *
                       C47581 * C47629 +
                   ((C4863 + C4862) * C47785 * C4619 +
                    (C4621 * C1050 + C4826 + C4826 + C4617 * C1062 +
                     C4623 * C1324 + C4827 + C4827 + C47839 * C1326) *
                        C47785 * C47870) *
                       C47581 * C2742) *
                      C2745)) /
                (p * q * std::sqrt(p + q));
    d2ee[26] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C4621 * C119 + C4626 + C4626 + C4617 * C133 +
                      C4623 * C120 + C4627 + C4627 + C47839 * C134) *
                         C47785 * C4619 +
                     (C4852 + C4853) * C47785 * C47870) *
                        C47821 -
                    ((C5534 + C5535) * C47785 * C47870 +
                     (C4623 * C433 + C5012 + C5012 + C47839 * C453 +
                      C4621 * C434 + C5013 + C5013 + C4617 * C454) *
                         C47785 * C4619) *
                        C47668) *
                       C47622 +
                   (((C5535 + C5534) * C47785 * C4619 +
                     (C5982 + C5983) * C47785 * C47870) *
                        C47668 -
                    ((C4854 + C4855) * C47785 * C47870 +
                     (C4853 + C4852) * C47785 * C4619) *
                        C47821) *
                       C47629 +
                   (((C4855 + C4854) * C47785 * C4619 +
                     (C5794 + C5795) * C47785 * C47870) *
                        C47821 -
                    ((C6480 + C6481) * C47785 * C47870 +
                     (C5983 + C5982) * C47785 * C4619) *
                        C47668) *
                       C2742) *
                      C2482 +
                  ((((C4621 * C433 + C5018 + C5018 + C4617 * C453 +
                      C4623 * C432 + C5019 + C5019 + C47839 * C452) *
                         C47785 * C4619 +
                     (C5536 + C5537) * C47785 * C47870) *
                        C47668 -
                    ((C4857 + C4856) * C47785 * C47870 +
                     (C4623 * C121 + C4632 + C4632 + C47839 * C135 +
                      C4621 * C120 + C4633 + C4633 + C4617 * C134) *
                         C47785 * C4619) *
                        C47821) *
                       C47622 +
                   (((C4856 + C4857) * C47785 * C4619 +
                     (C4858 + C4859) * C47785 * C47870) *
                        C47821 -
                    ((C6332 + C6333) * C47785 * C47870 +
                     (C5537 + C5536) * C47785 * C4619) *
                        C47668) *
                       C47629 +
                   (((C6333 + C6332) * C47785 * C4619 +
                     (C4621 * C1581 + C6326 + C6326 + C4617 * C1587 +
                      C4623 * C1582 + C6327 + C6327 + C47839 * C1588) *
                         C47785 * C47870) *
                        C47668 -
                    ((C6126 + C6127) * C47785 * C47870 +
                     (C4859 + C4858) * C47785 * C4619) *
                        C47821) *
                       C2742) *
                      C47546)) /
                (p * q * std::sqrt(p + q));
    d2ee[27] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C4621 * C119 + C4626 + C4626 + C4617 * C133 +
                     C4623 * C120 + C4627 + C4627 + C47839 * C134) *
                        C47785 * C4619 +
                    (C4852 + C4853) * C47785 * C47870) *
                       C47581 * C47898 -
                   ((C4854 + C4855) * C47785 * C47870 +
                    (C4853 + C4852) * C47785 * C4619) *
                       C47581 * C47894 +
                   ((C4855 + C4854) * C47785 * C4619 +
                    (C5794 + C5795) * C47785 * C47870) *
                       C47581 * C47884 -
                   ((C5796 + C5797) * C47785 * C47870 +
                    (C5795 + C5794) * C47785 * C4619) *
                       C47581 * C47862) *
                      C2482 +
                  (((C4856 + C4857) * C47785 * C4619 +
                    (C4858 + C4859) * C47785 * C47870) *
                       C47581 * C47894 -
                   ((C4857 + C4856) * C47785 * C47870 +
                    (C4623 * C121 + C4632 + C4632 + C47839 * C135 +
                     C4621 * C120 + C4633 + C4633 + C4617 * C134) *
                        C47785 * C4619) *
                       C47581 * C47898 -
                   ((C6126 + C6127) * C47785 * C47870 +
                    (C4859 + C4858) * C47785 * C4619) *
                       C47581 * C47884 +
                   ((C6127 + C6126) * C47785 * C4619 +
                    (C4621 * C1054 + C6120 + C6120 + C4617 * C1066 +
                     C4623 * C1055 + C6121 + C6121 + C47839 * C1067) *
                        C47785 * C47870) *
                       C47581 * C47862) *
                      C47546)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C4621 * C119 + C4626 + C4626 + C4617 * C133 +
                     C4623 * C120 + C4627 + C4627 + C47839 * C134) *
                        C47785 * C4619 +
                    (C4852 + C4853) * C47785 * C47870) *
                       C47581 * C2374 -
                   ((C4854 + C4855) * C47785 * C47870 +
                    (C4853 + C4852) * C47785 * C4619) *
                       C47581 * C47626) *
                      C47897 +
                  (((C4856 + C4857) * C47785 * C4619 +
                    (C4858 + C4859) * C47785 * C47870) *
                       C47581 * C47626 -
                   ((C4857 + C4856) * C47785 * C47870 +
                    (C4623 * C121 + C4632 + C4632 + C47839 * C135 +
                     C4621 * C120 + C4633 + C4633 + C4617 * C134) *
                        C47785 * C4619) *
                       C47581 * C2374) *
                      C47890 +
                  (((C4621 * C121 + C4634 + C4634 + C4617 * C135 +
                     C4623 * C122 + C4635 + C4635 + C47839 * C136) *
                        C47785 * C4619 +
                    (C4860 + C4861) * C47785 * C47870) *
                       C47581 * C2374 -
                   ((C4862 + C4863) * C47785 * C47870 +
                    (C4861 + C4860) * C47785 * C4619) *
                       C47581 * C47626) *
                      C47877 +
                  (((C5174 + C5175) * C47785 * C4619 +
                    (C4621 * C278 + C5168 + C5168 + C4617 * C298 +
                     C4623 * C280 + C5169 + C5169 + C47839 * C300) *
                        C47785 * C47870) *
                       C47581 * C47626 -
                   ((C5175 + C5174) * C47785 * C47870 +
                    (C4623 * C123 + C4640 + C4640 + C47839 * C137 +
                     C4621 * C122 + C4641 + C4641 + C4617 * C136) *
                        C47785 * C4619) *
                       C47581 * C2374) *
                      C47856)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 (((((C4621 * C119 + C4626 + C4626 + C4617 * C133 +
                      C4623 * C120 + C4627 + C4627 + C47839 * C134) *
                         C47785 * C4619 +
                     (C4852 + C4853) * C47785 * C47870) *
                        C47892 -
                    ((C5534 + C5535) * C47785 * C47870 +
                     (C4623 * C433 + C5012 + C5012 + C47839 * C453 +
                      C4621 * C434 + C5013 + C5013 + C4617 * C454) *
                         C47785 * C4619) *
                        C47881 +
                    ((C4621 * C435 + C5014 + C5014 + C4617 * C455 +
                      C4623 * C436 + C5015 + C5015 + C47839 * C456) *
                         C47785 * C4619 +
                     (C5980 + C5981) * C47785 * C47870) *
                        C47855) *
                       C2374 +
                   (((C5535 + C5534) * C47785 * C4619 +
                     (C5982 + C5983) * C47785 * C47870) *
                        C47881 -
                    ((C4854 + C4855) * C47785 * C47870 +
                     (C4853 + C4852) * C47785 * C4619) *
                        C47892 -
                    ((C5984 + C5985) * C47785 * C47870 +
                     (C5981 + C5980) * C47785 * C4619) *
                        C47855) *
                       C47626) *
                      C2482 +
                  ((((C4621 * C433 + C5018 + C5018 + C4617 * C453 +
                      C4623 * C432 + C5019 + C5019 + C47839 * C452) *
                         C47785 * C4619 +
                     (C5536 + C5537) * C47785 * C47870) *
                        C47881 -
                    ((C4857 + C4856) * C47785 * C47870 +
                     (C4623 * C121 + C4632 + C4632 + C47839 * C135 +
                      C4621 * C120 + C4633 + C4633 + C4617 * C134) *
                         C47785 * C4619) *
                        C47892 -
                    ((C7074 + C7075) * C47785 * C47870 +
                     (C4623 * C437 + C5024 + C5024 + C47839 * C457 +
                      C4621 * C436 + C5025 + C5025 + C4617 * C456) *
                         C47785 * C4619) *
                        C47855) *
                       C2374 +
                   (((C4856 + C4857) * C47785 * C4619 +
                     (C4858 + C4859) * C47785 * C47870) *
                        C47892 -
                    ((C6332 + C6333) * C47785 * C47870 +
                     (C5537 + C5536) * C47785 * C4619) *
                        C47881 +
                    ((C7075 + C7074) * C47785 * C4619 +
                     (C4621 * C1191 + C7068 + C7068 + C4617 * C1209 +
                      C4623 * C1192 + C7069 + C7069 + C47839 * C1210) *
                         C47785 * C47870) *
                        C47855) *
                       C47626) *
                      C47546)) /
                    (p * q * std::sqrt(p + q));
    d2ee[28] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C4621 * C119 + C4626 + C4626 + C4617 * C133 +
                      C4623 * C120 + C4627 + C4627 + C47839 * C134) *
                         C47785 * C4619 +
                     (C4852 + C4853) * C47785 * C47870) *
                        C47821 -
                    ((C5534 + C5535) * C47785 * C47870 +
                     (C4623 * C433 + C5012 + C5012 + C47839 * C453 +
                      C4621 * C434 + C5013 + C5013 + C4617 * C454) *
                         C47785 * C4619) *
                        C47668) *
                       C2374 +
                   (((C5535 + C5534) * C47785 * C4619 +
                     (C5982 + C5983) * C47785 * C47870) *
                        C47668 -
                    ((C4854 + C4855) * C47785 * C47870 +
                     (C4853 + C4852) * C47785 * C4619) *
                        C47821) *
                       C47626) *
                      C47540 +
                  ((((C4621 * C433 + C5018 + C5018 + C4617 * C453 +
                      C4623 * C432 + C5019 + C5019 + C47839 * C452) *
                         C47785 * C4619 +
                     (C5536 + C5537) * C47785 * C47870) *
                        C47668 -
                    ((C4857 + C4856) * C47785 * C47870 +
                     (C4623 * C121 + C4632 + C4632 + C47839 * C135 +
                      C4621 * C120 + C4633 + C4633 + C4617 * C134) *
                         C47785 * C4619) *
                        C47821) *
                       C2374 +
                   (((C4856 + C4857) * C47785 * C4619 +
                     (C4858 + C4859) * C47785 * C47870) *
                        C47821 -
                    ((C6332 + C6333) * C47785 * C47870 +
                     (C5537 + C5536) * C47785 * C4619) *
                        C47668) *
                       C47626) *
                      C47549 +
                  ((((C4621 * C121 + C4634 + C4634 + C4617 * C135 +
                      C4623 * C122 + C4635 + C4635 + C47839 * C136) *
                         C47785 * C4619 +
                     (C4860 + C4861) * C47785 * C47870) *
                        C47821 -
                    ((C5538 + C5539) * C47785 * C47870 +
                     (C4623 * C438 + C5028 + C5028 + C47839 * C458 +
                      C4621 * C432 + C5029 + C5029 + C4617 * C452) *
                         C47785 * C4619) *
                        C47668) *
                       C2374 +
                   (((C5539 + C5538) * C47785 * C4619 +
                     (C4621 * C1187 + C5520 + C5520 + C4617 * C1205 +
                      C4623 * C1476 + C5521 + C5521 + C47839 * C1478) *
                         C47785 * C47870) *
                        C47668 -
                    ((C4862 + C4863) * C47785 * C47870 +
                     (C4861 + C4860) * C47785 * C4619) *
                        C47821) *
                       C47626) *
                      C2745)) /
                (p * q * std::sqrt(p + q));
    d2ee[29] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C4621 * C119 + C4626 + C4626 + C4617 * C133 +
                     C4623 * C120 + C4627 + C4627 + C47839 * C134) *
                        C47785 * C4619 +
                    (C4852 + C4853) * C47785 * C47870) *
                       C47581 * C2374 -
                   ((C4854 + C4855) * C47785 * C47870 +
                    (C4853 + C4852) * C47785 * C4619) *
                       C47581 * C47626) *
                      C47897 +
                  (((C4856 + C4857) * C47785 * C4619 +
                    (C4858 + C4859) * C47785 * C47870) *
                       C47581 * C47626 -
                   ((C4857 + C4856) * C47785 * C47870 +
                    (C4623 * C121 + C4632 + C4632 + C47839 * C135 +
                     C4621 * C120 + C4633 + C4633 + C4617 * C134) *
                        C47785 * C4619) *
                       C47581 * C2374) *
                      C47890 +
                  (((C4621 * C121 + C4634 + C4634 + C4617 * C135 +
                     C4623 * C122 + C4635 + C4635 + C47839 * C136) *
                        C47785 * C4619 +
                    (C4860 + C4861) * C47785 * C47870) *
                       C47581 * C2374 -
                   ((C4862 + C4863) * C47785 * C47870 +
                    (C4861 + C4860) * C47785 * C4619) *
                       C47581 * C47626) *
                      C47877 +
                  (((C5174 + C5175) * C47785 * C4619 +
                    (C4621 * C278 + C5168 + C5168 + C4617 * C298 +
                     C4623 * C280 + C5169 + C5169 + C47839 * C300) *
                        C47785 * C47870) *
                       C47581 * C47626 -
                   ((C5175 + C5174) * C47785 * C47870 +
                    (C4623 * C123 + C4640 + C4640 + C47839 * C137 +
                     C4621 * C122 + C4641 + C4641 + C4617 * C136) *
                        C47785 * C4619) *
                       C47581 * C2374) *
                      C47856)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C4621 * C119 + C4626 + C4626 + C4617 * C133 +
                     C4623 * C120 + C4627 + C4627 + C47839 * C134) *
                        C47785 * C4619 +
                    (C4852 + C4853) * C47785 * C47870) *
                       C47581 * C47898 -
                   ((C4854 + C4855) * C47785 * C47870 +
                    (C4853 + C4852) * C47785 * C4619) *
                       C47581 * C47894 +
                   ((C4855 + C4854) * C47785 * C4619 +
                    (C5794 + C5795) * C47785 * C47870) *
                       C47581 * C47884 -
                   ((C5796 + C5797) * C47785 * C47870 +
                    (C5795 + C5794) * C47785 * C4619) *
                       C47581 * C47862) *
                      C2482 +
                  (((C4856 + C4857) * C47785 * C4619 +
                    (C4858 + C4859) * C47785 * C47870) *
                       C47581 * C47894 -
                   ((C4857 + C4856) * C47785 * C47870 +
                    (C4623 * C121 + C4632 + C4632 + C47839 * C135 +
                     C4621 * C120 + C4633 + C4633 + C4617 * C134) *
                        C47785 * C4619) *
                       C47581 * C47898 -
                   ((C6126 + C6127) * C47785 * C47870 +
                    (C4859 + C4858) * C47785 * C4619) *
                       C47581 * C47884 +
                   ((C6127 + C6126) * C47785 * C4619 +
                    (C4621 * C1054 + C6120 + C6120 + C4617 * C1066 +
                     C4623 * C1055 + C6121 + C6121 + C47839 * C1067) *
                        C47785 * C47870) *
                       C47581 * C47862) *
                      C47546)) /
                    (p * q * std::sqrt(p + q));
    d2ee[30] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C4621 * C119 + C4626 + C4626 + C4617 * C133 +
                      C4623 * C120 + C4627 + C4627 + C47839 * C134) *
                         C47785 * C4619 +
                     (C4852 + C4853) * C47785 * C47870) *
                        C3136 -
                    ((C5534 + C5535) * C47785 * C47870 +
                     (C4623 * C433 + C5012 + C5012 + C47839 * C453 +
                      C4621 * C434 + C5013 + C5013 + C4617 * C454) *
                         C47785 * C4619) *
                        C47668) *
                       C47622 +
                   (((C5535 + C5534) * C47785 * C4619 +
                     (C5982 + C5983) * C47785 * C47870) *
                        C47668 -
                    ((C4854 + C4855) * C47785 * C47870 +
                     (C4853 + C4852) * C47785 * C4619) *
                        C3136) *
                       C47629 +
                   (((C4855 + C4854) * C47785 * C4619 +
                     (C5794 + C5795) * C47785 * C47870) *
                        C3136 -
                    ((C6480 + C6481) * C47785 * C47870 +
                     (C5983 + C5982) * C47785 * C4619) *
                        C47668) *
                       C2742) *
                      C47806 +
                  ((((C4621 * C433 + C5018 + C5018 + C4617 * C453 +
                      C4623 * C432 + C5019 + C5019 + C47839 * C452) *
                         C47785 * C4619 +
                     (C5536 + C5537) * C47785 * C47870) *
                        C47668 -
                    ((C4857 + C4856) * C47785 * C47870 +
                     (C4623 * C121 + C4632 + C4632 + C47839 * C135 +
                      C4621 * C120 + C4633 + C4633 + C4617 * C134) *
                         C47785 * C4619) *
                        C3136) *
                       C47622 +
                   (((C4856 + C4857) * C47785 * C4619 +
                     (C4858 + C4859) * C47785 * C47870) *
                        C3136 -
                    ((C6332 + C6333) * C47785 * C47870 +
                     (C5537 + C5536) * C47785 * C4619) *
                        C47668) *
                       C47629 +
                   (((C6333 + C6332) * C47785 * C4619 +
                     (C4621 * C1581 + C6326 + C6326 + C4617 * C1587 +
                      C4623 * C1582 + C6327 + C6327 + C47839 * C1588) *
                         C47785 * C47870) *
                        C47668 -
                    ((C6126 + C6127) * C47785 * C47870 +
                     (C4859 + C4858) * C47785 * C4619) *
                        C3136) *
                       C2742) *
                      C47546)) /
                (p * q * std::sqrt(p + q));
    d2ee[31] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C4621 * C119 + C4626 + C4626 + C4617 * C133 +
                     C4623 * C120 + C4627 + C4627 + C47839 * C134) *
                        C47785 * C4619 +
                    (C4852 + C4853) * C47785 * C47870) *
                       C47664 -
                   ((C5534 + C5535) * C47785 * C47870 +
                    (C4623 * C433 + C5012 + C5012 + C47839 * C453 +
                     C4621 * C434 + C5013 + C5013 + C4617 * C454) *
                        C47785 * C4619) *
                       C47671 +
                   ((C4621 * C435 + C5014 + C5014 + C4617 * C455 +
                     C4623 * C436 + C5015 + C5015 + C47839 * C456) *
                        C47785 * C4619 +
                    (C5980 + C5981) * C47785 * C47870) *
                       C3644) *
                      C47622 +
                  (((C5535 + C5534) * C47785 * C4619 +
                    (C5982 + C5983) * C47785 * C47870) *
                       C47671 -
                   ((C4854 + C4855) * C47785 * C47870 +
                    (C4853 + C4852) * C47785 * C4619) *
                       C47664 -
                   ((C5984 + C5985) * C47785 * C47870 +
                    (C5981 + C5980) * C47785 * C4619) *
                       C3644) *
                      C47629 +
                  (((C4855 + C4854) * C47785 * C4619 +
                    (C5794 + C5795) * C47785 * C47870) *
                       C47664 -
                   ((C6480 + C6481) * C47785 * C47870 +
                    (C5983 + C5982) * C47785 * C4619) *
                       C47671 +
                   ((C5985 + C5984) * C47785 * C4619 +
                    (C4621 * C5943 + C5966 + C5966 + C4617 * C5947 +
                     C4623 * C5944 + C5967 + C5967 + C47839 * C5948) *
                        C47785 * C47870) *
                       C3644) *
                      C2742) *
                 C47535) /
                (p * q * std::sqrt(p + q));
    d2ee[32] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C4621 * C119 + C4626 + C4626 + C4617 * C133 +
                     C4623 * C120 + C4627 + C4627 + C47839 * C134) *
                        C47785 * C4619 +
                    (C4852 + C4853) * C47785 * C47870) *
                       C3136 -
                   ((C5534 + C5535) * C47785 * C47870 +
                    (C4623 * C433 + C5012 + C5012 + C47839 * C453 +
                     C4621 * C434 + C5013 + C5013 + C4617 * C454) *
                        C47785 * C4619) *
                       C47668) *
                      C47898 +
                  (((C5535 + C5534) * C47785 * C4619 +
                    (C5982 + C5983) * C47785 * C47870) *
                       C47668 -
                   ((C4854 + C4855) * C47785 * C47870 +
                    (C4853 + C4852) * C47785 * C4619) *
                       C3136) *
                      C47894 +
                  (((C4855 + C4854) * C47785 * C4619 +
                    (C5794 + C5795) * C47785 * C47870) *
                       C3136 -
                   ((C6480 + C6481) * C47785 * C47870 +
                    (C5983 + C5982) * C47785 * C4619) *
                       C47668) *
                      C47884 +
                  (((C6481 + C6480) * C47785 * C4619 +
                    (C4621 * C6463 + C6474 + C6474 + C4617 * C6467 +
                     C4623 * C6464 + C6475 + C6475 + C47839 * C6468) *
                        C47785 * C47870) *
                       C47668 -
                   ((C5796 + C5797) * C47785 * C47870 +
                    (C5795 + C5794) * C47785 * C4619) *
                       C3136) *
                      C47862) *
                 C47535) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C4621 * C119 + C4626 + C4626 + C4617 * C133 +
                      C4623 * C120 + C4627 + C4627 + C47839 * C134) *
                         C47785 * C4619 +
                     (C4852 + C4853) * C47785 * C47870) *
                        C3136 -
                    ((C5534 + C5535) * C47785 * C47870 +
                     (C4623 * C433 + C5012 + C5012 + C47839 * C453 +
                      C4621 * C434 + C5013 + C5013 + C4617 * C454) *
                         C47785 * C4619) *
                        C47668) *
                       C2374 +
                   (((C5535 + C5534) * C47785 * C4619 +
                     (C5982 + C5983) * C47785 * C47870) *
                        C47668 -
                    ((C4854 + C4855) * C47785 * C47870 +
                     (C4853 + C4852) * C47785 * C4619) *
                        C3136) *
                       C47626) *
                      C47888 +
                  ((((C4621 * C433 + C5018 + C5018 + C4617 * C453 +
                      C4623 * C432 + C5019 + C5019 + C47839 * C452) *
                         C47785 * C4619 +
                     (C5536 + C5537) * C47785 * C47870) *
                        C47668 -
                    ((C4857 + C4856) * C47785 * C47870 +
                     (C4623 * C121 + C4632 + C4632 + C47839 * C135 +
                      C4621 * C120 + C4633 + C4633 + C4617 * C134) *
                         C47785 * C4619) *
                        C3136) *
                       C2374 +
                   (((C4856 + C4857) * C47785 * C4619 +
                     (C4858 + C4859) * C47785 * C47870) *
                        C3136 -
                    ((C6332 + C6333) * C47785 * C47870 +
                     (C5537 + C5536) * C47785 * C4619) *
                        C47668) *
                       C47626) *
                      C47875 +
                  ((((C4621 * C121 + C4634 + C4634 + C4617 * C135 +
                      C4623 * C122 + C4635 + C4635 + C47839 * C136) *
                         C47785 * C4619 +
                     (C4860 + C4861) * C47785 * C47870) *
                        C3136 -
                    ((C5538 + C5539) * C47785 * C47870 +
                     (C4623 * C438 + C5028 + C5028 + C47839 * C458 +
                      C4621 * C432 + C5029 + C5029 + C4617 * C452) *
                         C47785 * C4619) *
                        C47668) *
                       C2374 +
                   (((C5539 + C5538) * C47785 * C4619 +
                     (C4621 * C1187 + C5520 + C5520 + C4617 * C1205 +
                      C4623 * C1476 + C5521 + C5521 + C47839 * C1478) *
                         C47785 * C47870) *
                        C47668 -
                    ((C4862 + C4863) * C47785 * C47870 +
                     (C4861 + C4860) * C47785 * C4619) *
                        C3136) *
                       C47626) *
                      C47846)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 ((((C4621 * C119 + C4626 + C4626 + C4617 * C133 +
                     C4623 * C120 + C4627 + C4627 + C47839 * C134) *
                        C47785 * C4619 +
                    (C4852 + C4853) * C47785 * C47870) *
                       C47899 -
                   ((C5534 + C5535) * C47785 * C47870 +
                    (C4623 * C433 + C5012 + C5012 + C47839 * C453 +
                     C4621 * C434 + C5013 + C5013 + C4617 * C454) *
                        C47785 * C4619) *
                       C47896 +
                   ((C4621 * C435 + C5014 + C5014 + C4617 * C455 +
                     C4623 * C436 + C5015 + C5015 + C47839 * C456) *
                        C47785 * C4619 +
                    (C5980 + C5981) * C47785 * C47870) *
                       C47887 -
                   ((C7356 + C7357) * C47785 * C47870 +
                    (C4623 * C1883 + C6864 + C6864 + C47839 * C1895 +
                     C4621 * C1884 + C6865 + C6865 + C4617 * C1896) *
                        C47785 * C4619) *
                       C47868) *
                      C2374 +
                  (((C5535 + C5534) * C47785 * C4619 +
                    (C5982 + C5983) * C47785 * C47870) *
                       C47896 -
                   ((C4854 + C4855) * C47785 * C47870 +
                    (C4853 + C4852) * C47785 * C4619) *
                       C47899 -
                   ((C5984 + C5985) * C47785 * C47870 +
                    (C5981 + C5980) * C47785 * C4619) *
                       C47887 +
                   ((C7357 + C7356) * C47785 * C4619 +
                    (C4621 * C7339 + C7350 + C7350 + C4617 * C7343 +
                     C4623 * C7340 + C7351 + C7351 + C47839 * C7344) *
                        C47785 * C47870) *
                       C47868) *
                      C47626) *
                 C47535) /
                    (p * q * std::sqrt(p + q));
    d2ee[33] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C4621 * C119 + C4626 + C4626 + C4617 * C133 +
                      C4623 * C120 + C4627 + C4627 + C47839 * C134) *
                         C47785 * C4619 +
                     (C4852 + C4853) * C47785 * C47870) *
                        C47664 -
                    ((C5534 + C5535) * C47785 * C47870 +
                     (C4623 * C433 + C5012 + C5012 + C47839 * C453 +
                      C4621 * C434 + C5013 + C5013 + C4617 * C454) *
                         C47785 * C4619) *
                        C47671 +
                    ((C4621 * C435 + C5014 + C5014 + C4617 * C455 +
                      C4623 * C436 + C5015 + C5015 + C47839 * C456) *
                         C47785 * C4619 +
                     (C5980 + C5981) * C47785 * C47870) *
                        C3644) *
                       C2374 +
                   (((C5535 + C5534) * C47785 * C4619 +
                     (C5982 + C5983) * C47785 * C47870) *
                        C47671 -
                    ((C4854 + C4855) * C47785 * C47870 +
                     (C4853 + C4852) * C47785 * C4619) *
                        C47664 -
                    ((C5984 + C5985) * C47785 * C47870 +
                     (C5981 + C5980) * C47785 * C4619) *
                        C3644) *
                       C47626) *
                      C47806 +
                  ((((C4621 * C433 + C5018 + C5018 + C4617 * C453 +
                      C4623 * C432 + C5019 + C5019 + C47839 * C452) *
                         C47785 * C4619 +
                     (C5536 + C5537) * C47785 * C47870) *
                        C47671 -
                    ((C4857 + C4856) * C47785 * C47870 +
                     (C4623 * C121 + C4632 + C4632 + C47839 * C135 +
                      C4621 * C120 + C4633 + C4633 + C4617 * C134) *
                         C47785 * C4619) *
                        C47664 -
                    ((C7074 + C7075) * C47785 * C47870 +
                     (C4623 * C437 + C5024 + C5024 + C47839 * C457 +
                      C4621 * C436 + C5025 + C5025 + C4617 * C456) *
                         C47785 * C4619) *
                        C3644) *
                       C2374 +
                   (((C4856 + C4857) * C47785 * C4619 +
                     (C4858 + C4859) * C47785 * C47870) *
                        C47664 -
                    ((C6332 + C6333) * C47785 * C47870 +
                     (C5537 + C5536) * C47785 * C4619) *
                        C47671 +
                    ((C7075 + C7074) * C47785 * C4619 +
                     (C4621 * C1191 + C7068 + C7068 + C4617 * C1209 +
                      C4623 * C1192 + C7069 + C7069 + C47839 * C1210) *
                         C47785 * C47870) *
                        C3644) *
                       C47626) *
                      C47546)) /
                (p * q * std::sqrt(p + q));
    d2ee[34] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C4621 * C119 + C4626 + C4626 + C4617 * C133 +
                      C4623 * C120 + C4627 + C4627 + C47839 * C134) *
                         C47785 * C4619 +
                     (C4852 + C4853) * C47785 * C47870) *
                        C3136 -
                    ((C5534 + C5535) * C47785 * C47870 +
                     (C4623 * C433 + C5012 + C5012 + C47839 * C453 +
                      C4621 * C434 + C5013 + C5013 + C4617 * C454) *
                         C47785 * C4619) *
                        C47668) *
                       C2374 +
                   (((C5535 + C5534) * C47785 * C4619 +
                     (C5982 + C5983) * C47785 * C47870) *
                        C47668 -
                    ((C4854 + C4855) * C47785 * C47870 +
                     (C4853 + C4852) * C47785 * C4619) *
                        C3136) *
                       C47626) *
                      C47888 +
                  ((((C4621 * C433 + C5018 + C5018 + C4617 * C453 +
                      C4623 * C432 + C5019 + C5019 + C47839 * C452) *
                         C47785 * C4619 +
                     (C5536 + C5537) * C47785 * C47870) *
                        C47668 -
                    ((C4857 + C4856) * C47785 * C47870 +
                     (C4623 * C121 + C4632 + C4632 + C47839 * C135 +
                      C4621 * C120 + C4633 + C4633 + C4617 * C134) *
                         C47785 * C4619) *
                        C3136) *
                       C2374 +
                   (((C4856 + C4857) * C47785 * C4619 +
                     (C4858 + C4859) * C47785 * C47870) *
                        C3136 -
                    ((C6332 + C6333) * C47785 * C47870 +
                     (C5537 + C5536) * C47785 * C4619) *
                        C47668) *
                       C47626) *
                      C47875 +
                  ((((C4621 * C121 + C4634 + C4634 + C4617 * C135 +
                      C4623 * C122 + C4635 + C4635 + C47839 * C136) *
                         C47785 * C4619 +
                     (C4860 + C4861) * C47785 * C47870) *
                        C3136 -
                    ((C5538 + C5539) * C47785 * C47870 +
                     (C4623 * C438 + C5028 + C5028 + C47839 * C458 +
                      C4621 * C432 + C5029 + C5029 + C4617 * C452) *
                         C47785 * C4619) *
                        C47668) *
                       C2374 +
                   (((C5539 + C5538) * C47785 * C4619 +
                     (C4621 * C1187 + C5520 + C5520 + C4617 * C1205 +
                      C4623 * C1476 + C5521 + C5521 + C47839 * C1478) *
                         C47785 * C47870) *
                        C47668 -
                    ((C4862 + C4863) * C47785 * C47870 +
                     (C4861 + C4860) * C47785 * C4619) *
                        C3136) *
                       C47626) *
                      C47846)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C4621 * C119 + C4626 + C4626 + C4617 * C133 +
                     C4623 * C120 + C4627 + C4627 + C47839 * C134) *
                        C47785 * C4619 +
                    (C4852 + C4853) * C47785 * C47870) *
                       C3136 -
                   ((C5534 + C5535) * C47785 * C47870 +
                    (C4623 * C433 + C5012 + C5012 + C47839 * C453 +
                     C4621 * C434 + C5013 + C5013 + C4617 * C454) *
                        C47785 * C4619) *
                       C47668) *
                      C47898 +
                  (((C5535 + C5534) * C47785 * C4619 +
                    (C5982 + C5983) * C47785 * C47870) *
                       C47668 -
                   ((C4854 + C4855) * C47785 * C47870 +
                    (C4853 + C4852) * C47785 * C4619) *
                       C3136) *
                      C47894 +
                  (((C4855 + C4854) * C47785 * C4619 +
                    (C5794 + C5795) * C47785 * C47870) *
                       C3136 -
                   ((C6480 + C6481) * C47785 * C47870 +
                    (C5983 + C5982) * C47785 * C4619) *
                       C47668) *
                      C47884 +
                  (((C6481 + C6480) * C47785 * C4619 +
                    (C4621 * C6463 + C6474 + C6474 + C4617 * C6467 +
                     C4623 * C6464 + C6475 + C6475 + C47839 * C6468) *
                        C47785 * C47870) *
                       C47668 -
                   ((C5796 + C5797) * C47785 * C47870 +
                    (C5795 + C5794) * C47785 * C4619) *
                       C3136) *
                      C47862) *
                 C47535) /
                    (p * q * std::sqrt(p + q));
    d2ee[35] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C4621 * C119 + C4626 + C4626 + C4617 * C133 +
                     C4623 * C120 + C4627 + C4627 + C47839 * C134) *
                        C47785 * C4619 +
                    (C4852 + C4853) * C47785 * C47870) *
                       C47581 * C1318 -
                   ((C4854 + C4855) * C47785 * C47870 +
                    (C4853 + C4852) * C47785 * C4619) *
                       C47581 * C1319 +
                   ((C4855 + C4854) * C47785 * C4619 +
                    (C5794 + C5795) * C47785 * C47870) *
                       C47581 * C1320 -
                   ((C5796 + C5797) * C47785 * C47870 +
                    (C5795 + C5794) * C47785 * C4619) *
                       C47581 * C47862) *
                      C47806 +
                  (((C4856 + C4857) * C47785 * C4619 +
                    (C4858 + C4859) * C47785 * C47870) *
                       C47581 * C1319 -
                   ((C4857 + C4856) * C47785 * C47870 +
                    (C4623 * C121 + C4632 + C4632 + C47839 * C135 +
                     C4621 * C120 + C4633 + C4633 + C4617 * C134) *
                        C47785 * C4619) *
                       C47581 * C1318 -
                   ((C6126 + C6127) * C47785 * C47870 +
                    (C4859 + C4858) * C47785 * C4619) *
                       C47581 * C1320 +
                   ((C6127 + C6126) * C47785 * C4619 +
                    (C4621 * C1054 + C6120 + C6120 + C4617 * C1066 +
                     C4623 * C1055 + C6121 + C6121 + C47839 * C1067) *
                        C47785 * C47870) *
                       C47581 * C47862) *
                      C47546)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C4621 * C119 + C4626 + C4626 + C4617 * C133 +
                     C4623 * C120 + C4627 + C4627 + C47839 * C134) *
                        C47785 * C4619 +
                    (C4852 + C4853) * C47785 * C47870) *
                       C47581 * C47820 -
                   ((C4854 + C4855) * C47785 * C47870 +
                    (C4853 + C4852) * C47785 * C4619) *
                       C47581 * C47626) *
                      C580 +
                  (((C4856 + C4857) * C47785 * C4619 +
                    (C4858 + C4859) * C47785 * C47870) *
                       C47581 * C47626 -
                   ((C4857 + C4856) * C47785 * C47870 +
                    (C4623 * C121 + C4632 + C4632 + C47839 * C135 +
                     C4621 * C120 + C4633 + C4633 + C4617 * C134) *
                        C47785 * C4619) *
                       C47581 * C47820) *
                      C581 +
                  (((C4621 * C121 + C4634 + C4634 + C4617 * C135 +
                     C4623 * C122 + C4635 + C4635 + C47839 * C136) *
                        C47785 * C4619 +
                    (C4860 + C4861) * C47785 * C47870) *
                       C47581 * C47820 -
                   ((C4862 + C4863) * C47785 * C47870 +
                    (C4861 + C4860) * C47785 * C4619) *
                       C47581 * C47626) *
                      C582 +
                  (((C5174 + C5175) * C47785 * C4619 +
                    (C4621 * C278 + C5168 + C5168 + C4617 * C298 +
                     C4623 * C280 + C5169 + C5169 + C47839 * C300) *
                        C47785 * C47870) *
                       C47581 * C47626 -
                   ((C5175 + C5174) * C47785 * C47870 +
                    (C4623 * C123 + C4640 + C4640 + C47839 * C137 +
                     C4621 * C122 + C4641 + C4641 + C4617 * C136) *
                        C47785 * C4619) *
                       C47581 * C47820) *
                      C47856)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 (((((C4621 * C119 + C4626 + C4626 + C4617 * C133 +
                      C4623 * C120 + C4627 + C4627 + C47839 * C134) *
                         C47785 * C4619 +
                     (C4852 + C4853) * C47785 * C47870) *
                        C1702 -
                    ((C5534 + C5535) * C47785 * C47870 +
                     (C4623 * C433 + C5012 + C5012 + C47839 * C453 +
                      C4621 * C434 + C5013 + C5013 + C4617 * C454) *
                         C47785 * C4619) *
                        C1703 +
                    ((C4621 * C435 + C5014 + C5014 + C4617 * C455 +
                      C4623 * C436 + C5015 + C5015 + C47839 * C456) *
                         C47785 * C4619 +
                     (C5980 + C5981) * C47785 * C47870) *
                        C47855) *
                       C47820 +
                   (((C5535 + C5534) * C47785 * C4619 +
                     (C5982 + C5983) * C47785 * C47870) *
                        C1703 -
                    ((C4854 + C4855) * C47785 * C47870 +
                     (C4853 + C4852) * C47785 * C4619) *
                        C1702 -
                    ((C5984 + C5985) * C47785 * C47870 +
                     (C5981 + C5980) * C47785 * C4619) *
                        C47855) *
                       C47626) *
                      C47806 +
                  ((((C4621 * C433 + C5018 + C5018 + C4617 * C453 +
                      C4623 * C432 + C5019 + C5019 + C47839 * C452) *
                         C47785 * C4619 +
                     (C5536 + C5537) * C47785 * C47870) *
                        C1703 -
                    ((C4857 + C4856) * C47785 * C47870 +
                     (C4623 * C121 + C4632 + C4632 + C47839 * C135 +
                      C4621 * C120 + C4633 + C4633 + C4617 * C134) *
                         C47785 * C4619) *
                        C1702 -
                    ((C7074 + C7075) * C47785 * C47870 +
                     (C4623 * C437 + C5024 + C5024 + C47839 * C457 +
                      C4621 * C436 + C5025 + C5025 + C4617 * C456) *
                         C47785 * C4619) *
                        C47855) *
                       C47820 +
                   (((C4856 + C4857) * C47785 * C4619 +
                     (C4858 + C4859) * C47785 * C47870) *
                        C1702 -
                    ((C6332 + C6333) * C47785 * C47870 +
                     (C5537 + C5536) * C47785 * C4619) *
                        C1703 +
                    ((C7075 + C7074) * C47785 * C4619 +
                     (C4621 * C1191 + C7068 + C7068 + C4617 * C1209 +
                      C4623 * C1192 + C7069 + C7069 + C47839 * C1210) *
                         C47785 * C47870) *
                        C47855) *
                       C47626) *
                      C47546)) /
                    (p * q * std::sqrt(p + q));
    d2ee[36] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C4621 * C119 + C4626 + C4626 + C4617 * C133 +
                     C4623 * C120 + C4627 + C4627 + C47839 * C134) *
                        C47785 * C4619 +
                    (C4852 + C4853) * C47785 * C47870) *
                       C47821 -
                   ((C5534 + C5535) * C47785 * C47870 +
                    (C4623 * C433 + C5012 + C5012 + C47839 * C453 +
                     C4621 * C434 + C5013 + C5013 + C4617 * C454) *
                        C47785 * C4619) *
                       C47668) *
                      C1318 +
                  (((C5535 + C5534) * C47785 * C4619 +
                    (C5982 + C5983) * C47785 * C47870) *
                       C47668 -
                   ((C4854 + C4855) * C47785 * C47870 +
                    (C4853 + C4852) * C47785 * C4619) *
                       C47821) *
                      C1319 +
                  (((C4855 + C4854) * C47785 * C4619 +
                    (C5794 + C5795) * C47785 * C47870) *
                       C47821 -
                   ((C6480 + C6481) * C47785 * C47870 +
                    (C5983 + C5982) * C47785 * C4619) *
                       C47668) *
                      C1320 +
                  (((C6481 + C6480) * C47785 * C4619 +
                    (C4621 * C6463 + C6474 + C6474 + C4617 * C6467 +
                     C4623 * C6464 + C6475 + C6475 + C47839 * C6468) *
                        C47785 * C47870) *
                       C47668 -
                   ((C5796 + C5797) * C47785 * C47870 +
                    (C5795 + C5794) * C47785 * C4619) *
                       C47821) *
                      C47862) *
                 C47535) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C4621 * C119 + C4626 + C4626 + C4617 * C133 +
                      C4623 * C120 + C4627 + C4627 + C47839 * C134) *
                         C47785 * C4619 +
                     (C4852 + C4853) * C47785 * C47870) *
                        C47821 -
                    ((C5534 + C5535) * C47785 * C47870 +
                     (C4623 * C433 + C5012 + C5012 + C47839 * C453 +
                      C4621 * C434 + C5013 + C5013 + C4617 * C454) *
                         C47785 * C4619) *
                        C47668) *
                       C47820 +
                   (((C5535 + C5534) * C47785 * C4619 +
                     (C4621 * C1189 + C5508 + C5508 + C4617 * C1207 +
                      C4623 * C1188 + C5509 + C5509 + C47839 * C1206) *
                         C47785 * C47870) *
                        C47668 -
                    ((C4854 + C4855) * C47785 * C47870 +
                     (C4853 + C4852) * C47785 * C4619) *
                        C47821) *
                       C47626) *
                      C268 +
                  ((((C4621 * C433 + C5018 + C5018 + C4617 * C453 +
                      C4623 * C432 + C5019 + C5019 + C47839 * C452) *
                         C47785 * C4619 +
                     (C5536 + C5537) * C47785 * C47870) *
                        C47668 -
                    ((C4857 + C4856) * C47785 * C47870 +
                     (C4623 * C121 + C4632 + C4632 + C47839 * C135 +
                      C4621 * C120 + C4633 + C4633 + C4617 * C134) *
                         C47785 * C4619) *
                        C47821) *
                       C47820 +
                   (((C4856 + C4857) * C47785 * C4619 +
                     (C4858 + C4859) * C47785 * C47870) *
                        C47821 -
                    ((C4623 * C1187 + C5514 + C5514 + C47839 * C1205 +
                      C4621 * C1188 + C5515 + C5515 + C4617 * C1206) *
                         C47785 * C47870 +
                     (C5537 + C5536) * C47785 * C4619) *
                        C47668) *
                       C47626) *
                      C269 +
                  ((((C4621 * C121 + C4634 + C4634 + C4617 * C135 +
                      C4623 * C122 + C4635 + C4635 + C47839 * C136) *
                         C47785 * C4619 +
                     (C4860 + C4861) * C47785 * C47870) *
                        C47821 -
                    ((C5538 + C5539) * C47785 * C47870 +
                     (C4623 * C438 + C5028 + C5028 + C47839 * C458 +
                      C4621 * C432 + C5029 + C5029 + C4617 * C452) *
                         C47785 * C4619) *
                        C47668) *
                       C47820 +
                   (((C5539 + C5538) * C47785 * C4619 +
                     (C4621 * C1187 + C5520 + C5520 + C4617 * C1205 +
                      C4623 * C1476 + C5521 + C5521 + C47839 * C1478) *
                         C47785 * C47870) *
                        C47668 -
                    ((C4862 + C4863) * C47785 * C47870 +
                     (C4861 + C4860) * C47785 * C4619) *
                        C47821) *
                       C47626) *
                      C47846)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 ((((C4621 * C119 + C4626 + C4626 + C4617 * C133 +
                     C4623 * C120 + C4627 + C4627 + C47839 * C134) *
                        C47785 * C4619 +
                    (C4852 + C4853) * C47785 * C47870) *
                       C2156 -
                   ((C5534 + C5535) * C47785 * C47870 +
                    (C4623 * C433 + C5012 + C5012 + C47839 * C453 +
                     C4621 * C434 + C5013 + C5013 + C4617 * C454) *
                        C47785 * C4619) *
                       C2157 +
                   ((C4621 * C435 + C5014 + C5014 + C4617 * C455 +
                     C4623 * C436 + C5015 + C5015 + C47839 * C456) *
                        C47785 * C4619 +
                    (C5980 + C5981) * C47785 * C47870) *
                       C2158 -
                   ((C7356 + C7357) * C47785 * C47870 +
                    (C4623 * C1883 + C6864 + C6864 + C47839 * C1895 +
                     C4621 * C1884 + C6865 + C6865 + C4617 * C1896) *
                        C47785 * C4619) *
                       C47868) *
                      C47820 +
                  (((C5535 + C5534) * C47785 * C4619 +
                    (C5982 + C5983) * C47785 * C47870) *
                       C2157 -
                   ((C4854 + C4855) * C47785 * C47870 +
                    (C4853 + C4852) * C47785 * C4619) *
                       C2156 -
                   ((C5984 + C5985) * C47785 * C47870 +
                    (C5981 + C5980) * C47785 * C4619) *
                       C2158 +
                   ((C7357 + C7356) * C47785 * C4619 +
                    (C4621 * C7339 + C7350 + C7350 + C4617 * C7343 +
                     C4623 * C7340 + C7351 + C7351 + C47839 * C7344) *
                        C47785 * C47870) *
                       C47868) *
                      C47626) *
                 C47535) /
                    (p * q * std::sqrt(p + q));
    d2ee[37] += (0.5 * std::pow(Pi, 2.5) *
                     (((C4621 * C119 + C4626 + C4626 + C4617 * C133 +
                        C4623 * C120 + C4627 + C4627 + C47839 * C134) *
                           C47785 * C4619 +
                       (C4621 * C273 + C4628 + C4628 + C4617 * C293 +
                        C4623 * C272 + C4629 + C4629 + C47839 * C292) *
                           C47785 * C47870) *
                          C47581 * C47563 * C108 -
                      ((C4623 * C271 + C4630 + C4630 + C47839 * C291 +
                        C4621 * C272 + C4631 + C4631 + C4617 * C292) *
                           C47785 * C47870 +
                       (C4623 * C121 + C4632 + C4632 + C47839 * C135 +
                        C4621 * C120 + C4633 + C4633 + C4617 * C134) *
                           C47785 * C4619) *
                          C47581 * C47563 * C109 +
                      ((C4621 * C121 + C4634 + C4634 + C4617 * C135 +
                        C4623 * C122 + C4635 + C4635 + C47839 * C136) *
                           C47785 * C4619 +
                       (C4621 * C271 + C4636 + C4636 + C4617 * C291 +
                        C4623 * C277 + C4637 + C4637 + C47839 * C297) *
                           C47785 * C47870) *
                          C47581 * C47563 * C110 -
                      ((C4623 * C279 + C4638 + C4638 + C47839 * C299 +
                        C4621 * C277 + C4639 + C4639 + C4617 * C297) *
                           C47785 * C47870 +
                       (C4623 * C123 + C4640 + C4640 + C47839 * C137 +
                        C4621 * C122 + C4641 + C4641 + C4617 * C136) *
                           C47785 * C4619) *
                          C47581 * C47563 * C111 +
                      ((C4621 * C123 + C4642 + C4642 + C4617 * C137 +
                        C4623 * C124 + C4643 + C4643 + C47839 * C138) *
                           C47785 * C4619 +
                       (C4621 * C279 + C4644 + C4644 + C4617 * C299 +
                        C4623 * C584 + C4645 + C4645 + C47839 * C586) *
                           C47785 * C47870) *
                          C47581 * C47563 * C112) +
                 0.5 * std::pow(Pi, 2.5) *
                     ((((C4621 * C119 + C4626 + C4626 + C4617 * C133 +
                         C4623 * C120 + C4627 + C4627 + C47839 * C134) *
                            C47785 * C4619 +
                        (C4852 + C4853) * C47785 * C47870) *
                           C47581 * C47891 -
                       ((C4854 + C4855) * C47785 * C47870 +
                        (C4853 + C4852) * C47785 * C4619) *
                           C47581 * C47879 +
                       ((C4855 + C4854) * C47785 * C4619 +
                        (C4621 * C1052 + C4802 + C4802 + C4617 * C1064 +
                         C4623 * C1051 + C4803 + C4803 + C47839 * C1063) *
                            C47785 * C47870) *
                           C47581 * C47852) *
                          C268 +
                      (((C4856 + C4857) * C47785 * C4619 +
                        (C4858 + C4859) * C47785 * C47870) *
                           C47581 * C47879 -
                       ((C4857 + C4856) * C47785 * C47870 +
                        (C4623 * C121 + C4632 + C4632 + C47839 * C135 +
                         C4621 * C120 + C4633 + C4633 + C4617 * C134) *
                            C47785 * C4619) *
                           C47581 * C47891 -
                       ((C4623 * C1050 + C4814 + C4814 + C47839 * C1062 +
                         C4621 * C1051 + C4815 + C4815 + C4617 * C1063) *
                            C47785 * C47870 +
                        (C4859 + C4858) * C47785 * C4619) *
                           C47581 * C47852) *
                          C269 +
                      (((C4621 * C121 + C4634 + C4634 + C4617 * C135 +
                         C4623 * C122 + C4635 + C4635 + C47839 * C136) *
                            C47785 * C4619 +
                        (C4860 + C4861) * C47785 * C47870) *
                           C47581 * C47891 -
                       ((C4862 + C4863) * C47785 * C47870 +
                        (C4861 + C4860) * C47785 * C4619) *
                           C47581 * C47879 +
                       ((C4863 + C4862) * C47785 * C4619 +
                        (C4621 * C1050 + C4826 + C4826 + C4617 * C1062 +
                         C4623 * C1324 + C4827 + C4827 + C47839 * C1326) *
                            C47785 * C47870) *
                           C47581 * C47852) *
                          C47846)) /
                    (p * q * std::sqrt(p + q)) -
                (std::pow(Pi, 2.5) *
                 ((((C4621 * C119 + C4626 + C4626 + C4617 * C133 +
                     C4623 * C120 + C4627 + C4627 + C47839 * C134) *
                        C47785 * C4619 +
                    (C4852 + C4853) * C47785 * C47870) *
                       C47892 -
                   ((C4623 * C843 + C5010 + C5010 + C47839 * C853 +
                     C4621 * C842 + C5011 + C5011 + C4617 * C852) *
                        C47785 * C47870 +
                    (C4623 * C433 + C5012 + C5012 + C47839 * C453 +
                     C4621 * C434 + C5013 + C5013 + C4617 * C454) *
                        C47785 * C4619) *
                       C47881 +
                   ((C4621 * C435 + C5014 + C5014 + C4617 * C455 +
                     C4623 * C436 + C5015 + C5015 + C47839 * C456) *
                        C47785 * C4619 +
                    (C4621 * C1186 + C5016 + C5016 + C4617 * C1204 +
                     C4623 * C1185 + C5017 + C5017 + C47839 * C1203) *
                        C47785 * C47870) *
                       C47855) *
                      C47563 * C268 +
                  (((C4621 * C433 + C5018 + C5018 + C4617 * C453 +
                     C4623 * C432 + C5019 + C5019 + C47839 * C452) *
                        C47785 * C4619 +
                    (C4621 * C843 + C5020 + C5020 + C4617 * C853 +
                     C4623 * C844 + C5021 + C5021 + C47839 * C854) *
                        C47785 * C47870) *
                       C47881 -
                   ((C4857 + C4856) * C47785 * C47870 +
                    (C4623 * C121 + C4632 + C4632 + C47839 * C135 +
                     C4621 * C120 + C4633 + C4633 + C4617 * C134) *
                        C47785 * C4619) *
                       C47892 -
                   ((C4623 * C1184 + C5022 + C5022 + C47839 * C1202 +
                     C4621 * C1185 + C5023 + C5023 + C4617 * C1203) *
                        C47785 * C47870 +
                    (C4623 * C437 + C5024 + C5024 + C47839 * C457 +
                     C4621 * C436 + C5025 + C5025 + C4617 * C456) *
                        C47785 * C4619) *
                       C47855) *
                      C47563 * C269 +
                  (((C4621 * C121 + C4634 + C4634 + C4617 * C135 +
                     C4623 * C122 + C4635 + C4635 + C47839 * C136) *
                        C47785 * C4619 +
                    (C4860 + C4861) * C47785 * C47870) *
                       C47892 -
                   ((C4623 * C845 + C5026 + C5026 + C47839 * C855 +
                     C4621 * C844 + C5027 + C5027 + C4617 * C854) *
                        C47785 * C47870 +
                    (C4623 * C438 + C5028 + C5028 + C47839 * C458 +
                     C4621 * C432 + C5029 + C5029 + C4617 * C452) *
                        C47785 * C4619) *
                       C47881 +
                   ((C4621 * C437 + C5030 + C5030 + C4617 * C457 +
                     C4623 * C439 + C5031 + C5031 + C47839 * C459) *
                        C47785 * C4619 +
                    (C4621 * C1184 + C5032 + C5032 + C4617 * C1202 +
                     C4623 * C2052 + C5033 + C5033 + C47839 * C2054) *
                        C47785 * C47870) *
                       C47855) *
                      C47563 * C47846)) /
                    (p * q * std::sqrt(p + q)) +
                (0.5 * std::pow(Pi, 2.5) *
                 ((((C4621 * C119 + C4626 + C4626 + C4617 * C133 +
                     C4623 * C120 + C4627 + C4627 + C47839 * C134) *
                        C47785 * C4619 +
                    (C4852 + C4853) * C47785 * C47870) *
                       C47581 * C976 -
                   ((C4854 + C4855) * C47785 * C47870 +
                    (C4853 + C4852) * C47785 * C4619) *
                       C47581 * C977 +
                   ((C4855 + C4854) * C47785 * C4619 +
                    (C4621 * C1052 + C4802 + C4802 + C4617 * C1064 +
                     C4623 * C1051 + C4803 + C4803 + C47839 * C1063) *
                        C47785 * C47870) *
                       C47581 * C47852) *
                      C47888 +
                  (((C4856 + C4857) * C47785 * C4619 +
                    (C4858 + C4859) * C47785 * C47870) *
                       C47581 * C977 -
                   ((C4857 + C4856) * C47785 * C47870 +
                    (C4623 * C121 + C4632 + C4632 + C47839 * C135 +
                     C4621 * C120 + C4633 + C4633 + C4617 * C134) *
                        C47785 * C4619) *
                       C47581 * C976 -
                   ((C4623 * C1050 + C4814 + C4814 + C47839 * C1062 +
                     C4621 * C1051 + C4815 + C4815 + C4617 * C1063) *
                        C47785 * C47870 +
                    (C4859 + C4858) * C47785 * C4619) *
                       C47581 * C47852) *
                      C47875 +
                  (((C4621 * C121 + C4634 + C4634 + C4617 * C135 +
                     C4623 * C122 + C4635 + C4635 + C47839 * C136) *
                        C47785 * C4619 +
                    (C4860 + C4861) * C47785 * C47870) *
                       C47581 * C976 -
                   ((C4862 + C4863) * C47785 * C47870 +
                    (C4861 + C4860) * C47785 * C4619) *
                       C47581 * C977 +
                   ((C4863 + C4862) * C47785 * C4619 +
                    (C4621 * C1050 + C4826 + C4826 + C4617 * C1062 +
                     C4623 * C1324 + C4827 + C4827 + C47839 * C1326) *
                        C47785 * C47870) *
                       C47581 * C47852) *
                      C47846)) /
                    (p * q * std::sqrt(p + q)) +
                (0.5 * std::pow(Pi, 2.5) *
                 (((C4621 * C119 + C4626 + C4626 + C4617 * C133 + C4623 * C120 +
                    C4627 + C4627 + C47839 * C134) *
                       C47785 * C4619 +
                   (C4852 + C4853) * C47785 * C47870) *
                      C47581 * C1044 -
                  ((C4854 + C4855) * C47785 * C47870 +
                   (C4853 + C4852) * C47785 * C4619) *
                      C47581 * C1045 +
                  ((C4855 + C4854) * C47785 * C4619 +
                   (C5794 + C5795) * C47785 * C47870) *
                      C47581 * C1046 -
                  ((C5796 + C5797) * C47785 * C47870 +
                   (C5795 + C5794) * C47785 * C4619) *
                      C47581 * C1047 +
                  ((C5797 + C5796) * C47785 * C4619 +
                   (C4621 * C5767 + C5784 + C5784 + C4617 * C5771 +
                    C4623 * C5768 + C5785 + C5785 + C47839 * C5772) *
                       C47785 * C47870) *
                      C47581 * C1048) *
                 C47535) /
                    (p * q * std::sqrt(p + q)) -
                (std::pow(Pi, 2.5) *
                 ((((C4621 * C119 + C4626 + C4626 + C4617 * C133 +
                     C4623 * C120 + C4627 + C4627 + C47839 * C134) *
                        C47785 * C4619 +
                    (C4852 + C4853) * C47785 * C47870) *
                       C47892 -
                   ((C5534 + C5535) * C47785 * C47870 +
                    (C4623 * C433 + C5012 + C5012 + C47839 * C453 +
                     C4621 * C434 + C5013 + C5013 + C4617 * C454) *
                        C47785 * C4619) *
                       C47881 +
                   ((C4621 * C435 + C5014 + C5014 + C4617 * C455 +
                     C4623 * C436 + C5015 + C5015 + C47839 * C456) *
                        C47785 * C4619 +
                    (C5980 + C5981) * C47785 * C47870) *
                       C47855) *
                      C976 +
                  (((C5535 + C5534) * C47785 * C4619 +
                    (C5982 + C5983) * C47785 * C47870) *
                       C47881 -
                   ((C4854 + C4855) * C47785 * C47870 +
                    (C4853 + C4852) * C47785 * C4619) *
                       C47892 -
                   ((C5984 + C5985) * C47785 * C47870 +
                    (C5981 + C5980) * C47785 * C4619) *
                       C47855) *
                      C977 +
                  (((C4855 + C4854) * C47785 * C4619 +
                    (C5794 + C5795) * C47785 * C47870) *
                       C47892 -
                   ((C4623 * C1581 + C5964 + C5964 + C47839 * C1587 +
                     C4621 * C1580 + C5965 + C5965 + C4617 * C1586) *
                        C47785 * C47870 +
                    (C5983 + C5982) * C47785 * C4619) *
                       C47881 +
                   ((C5985 + C5984) * C47785 * C4619 +
                    (C4621 * C5943 + C5966 + C5966 + C4617 * C5947 +
                     C4623 * C5944 + C5967 + C5967 + C47839 * C5948) *
                        C47785 * C47870) *
                       C47855) *
                      C47852) *
                 C47535) /
                    (p * q * std::sqrt(p + q)) -
                (std::pow(Pi, 2.5) *
                 ((((C4621 * C119 + C4626 + C4626 + C4617 * C133 +
                     C4623 * C120 + C4627 + C4627 + C47839 * C134) *
                        C47785 * C4619 +
                    (C4852 + C4853) * C47785 * C47870) *
                       C1702 -
                   ((C5534 + C5535) * C47785 * C47870 +
                    (C4623 * C433 + C5012 + C5012 + C47839 * C453 +
                     C4621 * C434 + C5013 + C5013 + C4617 * C454) *
                        C47785 * C4619) *
                       C1703 +
                   ((C4621 * C435 + C5014 + C5014 + C4617 * C455 +
                     C4623 * C436 + C5015 + C5015 + C47839 * C456) *
                        C47785 * C4619 +
                    (C5980 + C5981) * C47785 * C47870) *
                       C47855) *
                      C47563 * C47888 +
                  (((C4621 * C433 + C5018 + C5018 + C4617 * C453 +
                     C4623 * C432 + C5019 + C5019 + C47839 * C452) *
                        C47785 * C4619 +
                    (C5536 + C5537) * C47785 * C47870) *
                       C1703 -
                   ((C4857 + C4856) * C47785 * C47870 +
                    (C4623 * C121 + C4632 + C4632 + C47839 * C135 +
                     C4621 * C120 + C4633 + C4633 + C4617 * C134) *
                        C47785 * C4619) *
                       C1702 -
                   ((C4623 * C1184 + C5022 + C5022 + C47839 * C1202 +
                     C4621 * C1185 + C5023 + C5023 + C4617 * C1203) *
                        C47785 * C47870 +
                    (C4623 * C437 + C5024 + C5024 + C47839 * C457 +
                     C4621 * C436 + C5025 + C5025 + C4617 * C456) *
                        C47785 * C4619) *
                       C47855) *
                      C47563 * C47875 +
                  (((C4621 * C121 + C4634 + C4634 + C4617 * C135 +
                     C4623 * C122 + C4635 + C4635 + C47839 * C136) *
                        C47785 * C4619 +
                    (C4860 + C4861) * C47785 * C47870) *
                       C1702 -
                   ((C5538 + C5539) * C47785 * C47870 +
                    (C4623 * C438 + C5028 + C5028 + C47839 * C458 +
                     C4621 * C432 + C5029 + C5029 + C4617 * C452) *
                        C47785 * C4619) *
                       C1703 +
                   ((C4621 * C437 + C5030 + C5030 + C4617 * C457 +
                     C4623 * C439 + C5031 + C5031 + C47839 * C459) *
                        C47785 * C4619 +
                    (C4621 * C1184 + C5032 + C5032 + C4617 * C1202 +
                     C4623 * C2052 + C5033 + C5033 + C47839 * C2054) *
                        C47785 * C47870) *
                       C47855) *
                      C47563 * C47846)) /
                    (p * q * std::sqrt(p + q)) -
                (std::pow(Pi, 2.5) *
                 ((((C4621 * C119 + C4626 + C4626 + C4617 * C133 +
                     C4623 * C120 + C4627 + C4627 + C47839 * C134) *
                        C47785 * C4619 +
                    (C4852 + C4853) * C47785 * C47870) *
                       C1702 -
                   ((C5534 + C5535) * C47785 * C47870 +
                    (C4623 * C433 + C5012 + C5012 + C47839 * C453 +
                     C4621 * C434 + C5013 + C5013 + C4617 * C454) *
                        C47785 * C4619) *
                       C1703 +
                   ((C4621 * C435 + C5014 + C5014 + C4617 * C455 +
                     C4623 * C436 + C5015 + C5015 + C47839 * C456) *
                        C47785 * C4619 +
                    (C5980 + C5981) * C47785 * C47870) *
                       C47855) *
                      C47891 +
                  (((C5535 + C5534) * C47785 * C4619 +
                    (C5982 + C5983) * C47785 * C47870) *
                       C1703 -
                   ((C4854 + C4855) * C47785 * C47870 +
                    (C4853 + C4852) * C47785 * C4619) *
                       C1702 -
                   ((C5984 + C5985) * C47785 * C47870 +
                    (C5981 + C5980) * C47785 * C4619) *
                       C47855) *
                      C47879 +
                  (((C4855 + C4854) * C47785 * C4619 +
                    (C5794 + C5795) * C47785 * C47870) *
                       C1702 -
                   ((C6480 + C6481) * C47785 * C47870 +
                    (C5983 + C5982) * C47785 * C4619) *
                       C1703 +
                   ((C5985 + C5984) * C47785 * C4619 +
                    (C4621 * C5943 + C5966 + C5966 + C4617 * C5947 +
                     C4623 * C5944 + C5967 + C5967 + C47839 * C5948) *
                        C47785 * C47870) *
                       C47855) *
                      C47852) *
                 C47535) /
                    (p * q * std::sqrt(p + q)) +
                (2 * std::pow(Pi, 2.5) *
                 (((C4621 * C119 + C4626 + C4626 + C4617 * C133 + C4623 * C120 +
                    C4627 + C4627 + C47839 * C134) *
                       C47785 * C4619 +
                   (C4852 + C4853) * C47785 * C47870) *
                      C1877 -
                  ((C5534 + C5535) * C47785 * C47870 +
                   (C4623 * C433 + C5012 + C5012 + C47839 * C453 +
                    C4621 * C434 + C5013 + C5013 + C4617 * C454) *
                       C47785 * C4619) *
                      C1878 +
                  ((C4621 * C435 + C5014 + C5014 + C4617 * C455 + C4623 * C436 +
                    C5015 + C5015 + C47839 * C456) *
                       C47785 * C4619 +
                   (C5980 + C5981) * C47785 * C47870) *
                      C1879 -
                  ((C4623 * C2265 + C6862 + C6862 + C47839 * C2271 +
                    C4621 * C2264 + C6863 + C6863 + C4617 * C2270) *
                       C47785 * C47870 +
                   (C4623 * C1883 + C6864 + C6864 + C47839 * C1895 +
                    C4621 * C1884 + C6865 + C6865 + C4617 * C1896) *
                       C47785 * C4619) *
                      C1880 +
                  ((C4621 * C1885 + C6866 + C6866 + C4617 * C1897 +
                    C4623 * C1886 + C6867 + C6867 + C47839 * C1898) *
                       C47785 * C4619 +
                   (C4621 * C6855 + C6868 + C6868 + C4617 * C6859 +
                    C4623 * C6856 + C6869 + C6869 + C47839 * C6860) *
                       C47785 * C47870) *
                      C1881) *
                 C47563 * C47535) /
                    (p * q * std::sqrt(p + q));
    d2ee[38] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C4621 * C119 + C4626 + C4626 + C4617 * C133 +
                      C4623 * C120 + C4627 + C4627 + C47839 * C134) *
                         C47785 * C4619 +
                     (C4852 + C4853) * C47785 * C47870) *
                        C47821 -
                    ((C5534 + C5535) * C47785 * C47870 +
                     (C4623 * C433 + C5012 + C5012 + C47839 * C453 +
                      C4621 * C434 + C5013 + C5013 + C4617 * C454) *
                         C47785 * C4619) *
                        C47668) *
                       C976 +
                   (((C5535 + C5534) * C47785 * C4619 +
                     (C5982 + C5983) * C47785 * C47870) *
                        C47668 -
                    ((C4854 + C4855) * C47785 * C47870 +
                     (C4853 + C4852) * C47785 * C4619) *
                        C47821) *
                       C977 +
                   (((C4855 + C4854) * C47785 * C4619 +
                     (C5794 + C5795) * C47785 * C47870) *
                        C47821 -
                    ((C4623 * C1581 + C5964 + C5964 + C47839 * C1587 +
                      C4621 * C1580 + C5965 + C5965 + C4617 * C1586) *
                         C47785 * C47870 +
                     (C5983 + C5982) * C47785 * C4619) *
                        C47668) *
                       C47852) *
                      C47806 +
                  ((((C4621 * C433 + C5018 + C5018 + C4617 * C453 +
                      C4623 * C432 + C5019 + C5019 + C47839 * C452) *
                         C47785 * C4619 +
                     (C5536 + C5537) * C47785 * C47870) *
                        C47668 -
                    ((C4857 + C4856) * C47785 * C47870 +
                     (C4623 * C121 + C4632 + C4632 + C47839 * C135 +
                      C4621 * C120 + C4633 + C4633 + C4617 * C134) *
                         C47785 * C4619) *
                        C47821) *
                       C976 +
                   (((C4856 + C4857) * C47785 * C4619 +
                     (C4858 + C4859) * C47785 * C47870) *
                        C47821 -
                    ((C6332 + C6333) * C47785 * C47870 +
                     (C5537 + C5536) * C47785 * C4619) *
                        C47668) *
                       C977 +
                   (((C6333 + C6332) * C47785 * C4619 +
                     (C4621 * C1581 + C6326 + C6326 + C4617 * C1587 +
                      C4623 * C1582 + C6327 + C6327 + C47839 * C1588) *
                         C47785 * C47870) *
                        C47668 -
                    ((C6126 + C6127) * C47785 * C47870 +
                     (C4859 + C4858) * C47785 * C4619) *
                        C47821) *
                       C47852) *
                      C47546)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C4621 * C119 + C4626 + C4626 + C4617 * C133 +
                     C4623 * C120 + C4627 + C4627 + C47839 * C134) *
                        C47785 * C4619 +
                    (C4852 + C4853) * C47785 * C47870) *
                       C47821 -
                   ((C4623 * C843 + C5010 + C5010 + C47839 * C853 +
                     C4621 * C842 + C5011 + C5011 + C4617 * C852) *
                        C47785 * C47870 +
                    (C4623 * C433 + C5012 + C5012 + C47839 * C453 +
                     C4621 * C434 + C5013 + C5013 + C4617 * C454) *
                        C47785 * C4619) *
                       C47668) *
                      C47563 * C580 +
                  (((C4621 * C433 + C5018 + C5018 + C4617 * C453 +
                     C4623 * C432 + C5019 + C5019 + C47839 * C452) *
                        C47785 * C4619 +
                    (C4621 * C843 + C5020 + C5020 + C4617 * C853 +
                     C4623 * C844 + C5021 + C5021 + C47839 * C854) *
                        C47785 * C47870) *
                       C47668 -
                   ((C4857 + C4856) * C47785 * C47870 +
                    (C4623 * C121 + C4632 + C4632 + C47839 * C135 +
                     C4621 * C120 + C4633 + C4633 + C4617 * C134) *
                        C47785 * C4619) *
                       C47821) *
                      C47563 * C581 +
                  (((C4621 * C121 + C4634 + C4634 + C4617 * C135 +
                     C4623 * C122 + C4635 + C4635 + C47839 * C136) *
                        C47785 * C4619 +
                    (C4860 + C4861) * C47785 * C47870) *
                       C47821 -
                   ((C4623 * C845 + C5026 + C5026 + C47839 * C855 +
                     C4621 * C844 + C5027 + C5027 + C4617 * C854) *
                        C47785 * C47870 +
                    (C4623 * C438 + C5028 + C5028 + C47839 * C458 +
                     C4621 * C432 + C5029 + C5029 + C4617 * C452) *
                        C47785 * C4619) *
                       C47668) *
                      C47563 * C582 +
                  (((C4621 * C438 + C5306 + C5306 + C4617 * C458 +
                     C4623 * C440 + C5307 + C5307 + C47839 * C460) *
                        C47785 * C4619 +
                    (C4621 * C845 + C5308 + C5308 + C4617 * C855 +
                     C4623 * C846 + C5309 + C5309 + C47839 * C856) *
                        C47785 * C47870) *
                       C47668 -
                   ((C5175 + C5174) * C47785 * C47870 +
                    (C4623 * C123 + C4640 + C4640 + C47839 * C137 +
                     C4621 * C122 + C4641 + C4641 + C4617 * C136) *
                        C47785 * C4619) *
                       C47821) *
                      C47563 * C47856)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 ((((C4621 * C119 + C4626 + C4626 + C4617 * C133 +
                     C4623 * C120 + C4627 + C4627 + C47839 * C134) *
                        C47785 * C4619 +
                    (C4852 + C4853) * C47785 * C47870) *
                       C2156 -
                   ((C5534 + C5535) * C47785 * C47870 +
                    (C4623 * C433 + C5012 + C5012 + C47839 * C453 +
                     C4621 * C434 + C5013 + C5013 + C4617 * C454) *
                        C47785 * C4619) *
                       C2157 +
                   ((C4621 * C435 + C5014 + C5014 + C4617 * C455 +
                     C4623 * C436 + C5015 + C5015 + C47839 * C456) *
                        C47785 * C4619 +
                    (C5980 + C5981) * C47785 * C47870) *
                       C2158 -
                   ((C4623 * C2265 + C6862 + C6862 + C47839 * C2271 +
                     C4621 * C2264 + C6863 + C6863 + C4617 * C2270) *
                        C47785 * C47870 +
                    (C4623 * C1883 + C6864 + C6864 + C47839 * C1895 +
                     C4621 * C1884 + C6865 + C6865 + C4617 * C1896) *
                        C47785 * C4619) *
                       C47868) *
                      C47563 * C47806 +
                  (((C4621 * C433 + C5018 + C5018 + C4617 * C453 +
                     C4623 * C432 + C5019 + C5019 + C47839 * C452) *
                        C47785 * C4619 +
                    (C5536 + C5537) * C47785 * C47870) *
                       C2157 -
                   ((C4857 + C4856) * C47785 * C47870 +
                    (C4623 * C121 + C4632 + C4632 + C47839 * C135 +
                     C4621 * C120 + C4633 + C4633 + C4617 * C134) *
                        C47785 * C4619) *
                       C2156 -
                   ((C7074 + C7075) * C47785 * C47870 +
                    (C4623 * C437 + C5024 + C5024 + C47839 * C457 +
                     C4621 * C436 + C5025 + C5025 + C4617 * C456) *
                        C47785 * C4619) *
                       C2158 +
                   ((C4621 * C1883 + C7206 + C7206 + C4617 * C1895 +
                     C4623 * C1882 + C7207 + C7207 + C47839 * C1894) *
                        C47785 * C4619 +
                    (C4621 * C2265 + C7208 + C7208 + C4617 * C2271 +
                     C4623 * C2266 + C7209 + C7209 + C47839 * C2272) *
                        C47785 * C47870) *
                       C47868) *
                      C47563 * C47546)) /
                    (p * q * std::sqrt(p + q));
    d2ee[39] += (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                 ((((C4621 * C119 + C4626 + C4626 + C4617 * C133 +
                     C4623 * C120 + C4627 + C4627 + C47839 * C134) *
                        C47785 * C4619 +
                    (C4852 + C4853) * C47785 * C47870) *
                       C47581 * C47891 -
                   ((C4854 + C4855) * C47785 * C47870 +
                    (C4853 + C4852) * C47785 * C4619) *
                       C47581 * C47879 +
                   ((C4855 + C4854) * C47785 * C4619 +
                    (C4621 * C1052 + C4802 + C4802 + C4617 * C1064 +
                     C4623 * C1051 + C4803 + C4803 + C47839 * C1063) *
                        C47785 * C47870) *
                       C47581 * C47852) *
                      C268 +
                  (((C4856 + C4857) * C47785 * C4619 +
                    (C4858 + C4859) * C47785 * C47870) *
                       C47581 * C47879 -
                   ((C4857 + C4856) * C47785 * C47870 +
                    (C4623 * C121 + C4632 + C4632 + C47839 * C135 +
                     C4621 * C120 + C4633 + C4633 + C4617 * C134) *
                        C47785 * C4619) *
                       C47581 * C47891 -
                   ((C4623 * C1050 + C4814 + C4814 + C47839 * C1062 +
                     C4621 * C1051 + C4815 + C4815 + C4617 * C1063) *
                        C47785 * C47870 +
                    (C4859 + C4858) * C47785 * C4619) *
                       C47581 * C47852) *
                      C269 +
                  (((C4621 * C121 + C4634 + C4634 + C4617 * C135 +
                     C4623 * C122 + C4635 + C4635 + C47839 * C136) *
                        C47785 * C4619 +
                    (C4860 + C4861) * C47785 * C47870) *
                       C47581 * C47891 -
                   ((C4862 + C4863) * C47785 * C47870 +
                    (C4861 + C4860) * C47785 * C4619) *
                       C47581 * C47879 +
                   ((C4863 + C4862) * C47785 * C4619 +
                    (C4621 * C1050 + C4826 + C4826 + C4617 * C1062 +
                     C4623 * C1324 + C4827 + C4827 + C47839 * C1326) *
                        C47785 * C47870) *
                       C47581 * C47852) *
                      C47846)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                 (((C4621 * C119 + C4626 + C4626 + C4617 * C133 + C4623 * C120 +
                    C4627 + C4627 + C47839 * C134) *
                       C47785 * C4619 +
                   (C4621 * C273 + C4628 + C4628 + C4617 * C293 + C4623 * C272 +
                    C4629 + C4629 + C47839 * C292) *
                       C47785 * C47870) *
                      C47581 * C47563 * C108 -
                  ((C4623 * C271 + C4630 + C4630 + C47839 * C291 +
                    C4621 * C272 + C4631 + C4631 + C4617 * C292) *
                       C47785 * C47870 +
                   (C4623 * C121 + C4632 + C4632 + C47839 * C135 +
                    C4621 * C120 + C4633 + C4633 + C4617 * C134) *
                       C47785 * C4619) *
                      C47581 * C47563 * C109 +
                  ((C4621 * C121 + C4634 + C4634 + C4617 * C135 + C4623 * C122 +
                    C4635 + C4635 + C47839 * C136) *
                       C47785 * C4619 +
                   (C4621 * C271 + C4636 + C4636 + C4617 * C291 + C4623 * C277 +
                    C4637 + C4637 + C47839 * C297) *
                       C47785 * C47870) *
                      C47581 * C47563 * C110 -
                  ((C4623 * C279 + C4638 + C4638 + C47839 * C299 +
                    C4621 * C277 + C4639 + C4639 + C4617 * C297) *
                       C47785 * C47870 +
                   (C4623 * C123 + C4640 + C4640 + C47839 * C137 +
                    C4621 * C122 + C4641 + C4641 + C4617 * C136) *
                       C47785 * C4619) *
                      C47581 * C47563 * C111 +
                  ((C4621 * C123 + C4642 + C4642 + C4617 * C137 + C4623 * C124 +
                    C4643 + C4643 + C47839 * C138) *
                       C47785 * C4619 +
                   (C4621 * C279 + C4644 + C4644 + C4617 * C299 + C4623 * C584 +
                    C4645 + C4645 + C47839 * C586) *
                       C47785 * C47870) *
                      C47581 * C47563 * C112)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                 ((((C4621 * C119 + C4626 + C4626 + C4617 * C133 +
                     C4623 * C120 + C4627 + C4627 + C47839 * C134) *
                        C47785 * C4619 +
                    (C4852 + C4853) * C47785 * C47870) *
                       C47581 * C976 -
                   ((C4854 + C4855) * C47785 * C47870 +
                    (C4853 + C4852) * C47785 * C4619) *
                       C47581 * C977 +
                   ((C4855 + C4854) * C47785 * C4619 +
                    (C4621 * C1052 + C4802 + C4802 + C4617 * C1064 +
                     C4623 * C1051 + C4803 + C4803 + C47839 * C1063) *
                        C47785 * C47870) *
                       C47581 * C47852) *
                      C47888 +
                  (((C4856 + C4857) * C47785 * C4619 +
                    (C4858 + C4859) * C47785 * C47870) *
                       C47581 * C977 -
                   ((C4857 + C4856) * C47785 * C47870 +
                    (C4623 * C121 + C4632 + C4632 + C47839 * C135 +
                     C4621 * C120 + C4633 + C4633 + C4617 * C134) *
                        C47785 * C4619) *
                       C47581 * C976 -
                   ((C4623 * C1050 + C4814 + C4814 + C47839 * C1062 +
                     C4621 * C1051 + C4815 + C4815 + C4617 * C1063) *
                        C47785 * C47870 +
                    (C4859 + C4858) * C47785 * C4619) *
                       C47581 * C47852) *
                      C47875 +
                  (((C4621 * C121 + C4634 + C4634 + C4617 * C135 +
                     C4623 * C122 + C4635 + C4635 + C47839 * C136) *
                        C47785 * C4619 +
                    (C4860 + C4861) * C47785 * C47870) *
                       C47581 * C976 -
                   ((C4862 + C4863) * C47785 * C47870 +
                    (C4861 + C4860) * C47785 * C4619) *
                       C47581 * C977 +
                   ((C4863 + C4862) * C47785 * C4619 +
                    (C4621 * C1050 + C4826 + C4826 + C4617 * C1062 +
                     C4623 * C1324 + C4827 + C4827 + C47839 * C1326) *
                        C47785 * C47870) *
                       C47581 * C47852) *
                      C47846)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                 (((C4621 * C119 + C4626 + C4626 + C4617 * C133 + C4623 * C120 +
                    C4627 + C4627 + C47839 * C134) *
                       C47785 * C4619 +
                   (C4852 + C4853) * C47785 * C47870) *
                      C47581 * C1044 -
                  ((C4854 + C4855) * C47785 * C47870 +
                   (C4853 + C4852) * C47785 * C4619) *
                      C47581 * C1045 +
                  ((C4855 + C4854) * C47785 * C4619 +
                   (C5794 + C5795) * C47785 * C47870) *
                      C47581 * C1046 -
                  ((C5796 + C5797) * C47785 * C47870 +
                   (C5795 + C5794) * C47785 * C4619) *
                      C47581 * C1047 +
                  ((C5797 + C5796) * C47785 * C4619 +
                   (C4621 * C5767 + C5784 + C5784 + C4617 * C5771 +
                    C4623 * C5768 + C5785 + C5785 + C47839 * C5772) *
                       C47785 * C47870) *
                      C47581 * C1048) *
                 C47535) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C4621 * C119 + C4626 + C4626 + C4617 * C133 +
                     C4623 * C120 + C4627 + C4627 + C47839 * C134) *
                        C47785 * C4619 +
                    (C4852 + C4853) * C47785 * C47870) *
                       C1702 -
                   ((C5534 + C5535) * C47785 * C47870 +
                    (C4623 * C433 + C5012 + C5012 + C47839 * C453 +
                     C4621 * C434 + C5013 + C5013 + C4617 * C454) *
                        C47785 * C4619) *
                       C1703 +
                   ((C4621 * C435 + C5014 + C5014 + C4617 * C455 +
                     C4623 * C436 + C5015 + C5015 + C47839 * C456) *
                        C47785 * C4619 +
                    (C5980 + C5981) * C47785 * C47870) *
                       C47855) *
                      C47563 * C47888 +
                  (((C4621 * C433 + C5018 + C5018 + C4617 * C453 +
                     C4623 * C432 + C5019 + C5019 + C47839 * C452) *
                        C47785 * C4619 +
                    (C5536 + C5537) * C47785 * C47870) *
                       C1703 -
                   ((C4857 + C4856) * C47785 * C47870 +
                    (C4623 * C121 + C4632 + C4632 + C47839 * C135 +
                     C4621 * C120 + C4633 + C4633 + C4617 * C134) *
                        C47785 * C4619) *
                       C1702 -
                   ((C4623 * C1184 + C5022 + C5022 + C47839 * C1202 +
                     C4621 * C1185 + C5023 + C5023 + C4617 * C1203) *
                        C47785 * C47870 +
                    (C4623 * C437 + C5024 + C5024 + C47839 * C457 +
                     C4621 * C436 + C5025 + C5025 + C4617 * C456) *
                        C47785 * C4619) *
                       C47855) *
                      C47563 * C47875 +
                  (((C4621 * C121 + C4634 + C4634 + C4617 * C135 +
                     C4623 * C122 + C4635 + C4635 + C47839 * C136) *
                        C47785 * C4619 +
                    (C4860 + C4861) * C47785 * C47870) *
                       C1702 -
                   ((C5538 + C5539) * C47785 * C47870 +
                    (C4623 * C438 + C5028 + C5028 + C47839 * C458 +
                     C4621 * C432 + C5029 + C5029 + C4617 * C452) *
                        C47785 * C4619) *
                       C1703 +
                   ((C4621 * C437 + C5030 + C5030 + C4617 * C457 +
                     C4623 * C439 + C5031 + C5031 + C47839 * C459) *
                        C47785 * C4619 +
                    (C4621 * C1184 + C5032 + C5032 + C4617 * C1202 +
                     C4623 * C2052 + C5033 + C5033 + C47839 * C2054) *
                        C47785 * C47870) *
                       C47855) *
                      C47563 * C47846)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C4621 * C119 + C4626 + C4626 + C4617 * C133 +
                     C4623 * C120 + C4627 + C4627 + C47839 * C134) *
                        C47785 * C4619 +
                    (C4852 + C4853) * C47785 * C47870) *
                       C1702 -
                   ((C5534 + C5535) * C47785 * C47870 +
                    (C4623 * C433 + C5012 + C5012 + C47839 * C453 +
                     C4621 * C434 + C5013 + C5013 + C4617 * C454) *
                        C47785 * C4619) *
                       C1703 +
                   ((C4621 * C435 + C5014 + C5014 + C4617 * C455 +
                     C4623 * C436 + C5015 + C5015 + C47839 * C456) *
                        C47785 * C4619 +
                    (C5980 + C5981) * C47785 * C47870) *
                       C47855) *
                      C47891 +
                  (((C5535 + C5534) * C47785 * C4619 +
                    (C5982 + C5983) * C47785 * C47870) *
                       C1703 -
                   ((C4854 + C4855) * C47785 * C47870 +
                    (C4853 + C4852) * C47785 * C4619) *
                       C1702 -
                   ((C5984 + C5985) * C47785 * C47870 +
                    (C5981 + C5980) * C47785 * C4619) *
                       C47855) *
                      C47879 +
                  (((C4855 + C4854) * C47785 * C4619 +
                    (C5794 + C5795) * C47785 * C47870) *
                       C1702 -
                   ((C6480 + C6481) * C47785 * C47870 +
                    (C5983 + C5982) * C47785 * C4619) *
                       C1703 +
                   ((C5985 + C5984) * C47785 * C4619 +
                    (C4621 * C5943 + C5966 + C5966 + C4617 * C5947 +
                     C4623 * C5944 + C5967 + C5967 + C47839 * C5948) *
                        C47785 * C47870) *
                       C47855) *
                      C47852) *
                 C47535) /
                    (p * q * std::sqrt(p + q));
    d2ee[40] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C4621 * C119 + C4626 + C4626 + C4617 * C133 +
                      C4623 * C120 + C4627 + C4627 + C47839 * C134) *
                         C47785 * C4619 +
                     (C4852 + C4853) * C47785 * C47870) *
                        C3136 -
                    ((C5534 + C5535) * C47785 * C47870 +
                     (C4623 * C433 + C5012 + C5012 + C47839 * C453 +
                      C4621 * C434 + C5013 + C5013 + C4617 * C454) *
                         C47785 * C4619) *
                        C47668) *
                       C47820 +
                   (((C5535 + C5534) * C47785 * C4619 +
                     (C5982 + C5983) * C47785 * C47870) *
                        C47668 -
                    ((C4854 + C4855) * C47785 * C47870 +
                     (C4853 + C4852) * C47785 * C4619) *
                        C3136) *
                       C47626) *
                      C47540 +
                  ((((C4621 * C433 + C5018 + C5018 + C4617 * C453 +
                      C4623 * C432 + C5019 + C5019 + C47839 * C452) *
                         C47785 * C4619 +
                     (C5536 + C5537) * C47785 * C47870) *
                        C47668 -
                    ((C4857 + C4856) * C47785 * C47870 +
                     (C4623 * C121 + C4632 + C4632 + C47839 * C135 +
                      C4621 * C120 + C4633 + C4633 + C4617 * C134) *
                         C47785 * C4619) *
                        C3136) *
                       C47820 +
                   (((C4856 + C4857) * C47785 * C4619 +
                     (C4858 + C4859) * C47785 * C47870) *
                        C3136 -
                    ((C6332 + C6333) * C47785 * C47870 +
                     (C5537 + C5536) * C47785 * C4619) *
                        C47668) *
                       C47626) *
                      C47549 +
                  ((((C4621 * C121 + C4634 + C4634 + C4617 * C135 +
                      C4623 * C122 + C4635 + C4635 + C47839 * C136) *
                         C47785 * C4619 +
                     (C4860 + C4861) * C47785 * C47870) *
                        C3136 -
                    ((C5538 + C5539) * C47785 * C47870 +
                     (C4623 * C438 + C5028 + C5028 + C47839 * C458 +
                      C4621 * C432 + C5029 + C5029 + C4617 * C452) *
                         C47785 * C4619) *
                        C47668) *
                       C47820 +
                   (((C5539 + C5538) * C47785 * C4619 +
                     (C4621 * C1187 + C5520 + C5520 + C4617 * C1205 +
                      C4623 * C1476 + C5521 + C5521 + C47839 * C1478) *
                         C47785 * C47870) *
                        C47668 -
                    ((C4862 + C4863) * C47785 * C47870 +
                     (C4861 + C4860) * C47785 * C4619) *
                        C3136) *
                       C47626) *
                      C2745)) /
                (p * q * std::sqrt(p + q));
    d2ee[41] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C4621 * C119 + C4626 + C4626 + C4617 * C133 +
                      C4623 * C120 + C4627 + C4627 + C47839 * C134) *
                         C47785 * C4619 +
                     (C4852 + C4853) * C47785 * C47870) *
                        C47664 -
                    ((C5534 + C5535) * C47785 * C47870 +
                     (C4623 * C433 + C5012 + C5012 + C47839 * C453 +
                      C4621 * C434 + C5013 + C5013 + C4617 * C454) *
                         C47785 * C4619) *
                        C47671 +
                    ((C4621 * C435 + C5014 + C5014 + C4617 * C455 +
                      C4623 * C436 + C5015 + C5015 + C47839 * C456) *
                         C47785 * C4619 +
                     (C5980 + C5981) * C47785 * C47870) *
                        C3644) *
                       C47820 +
                   (((C5535 + C5534) * C47785 * C4619 +
                     (C5982 + C5983) * C47785 * C47870) *
                        C47671 -
                    ((C4854 + C4855) * C47785 * C47870 +
                     (C4853 + C4852) * C47785 * C4619) *
                        C47664 -
                    ((C5984 + C5985) * C47785 * C47870 +
                     (C5981 + C5980) * C47785 * C4619) *
                        C3644) *
                       C47626) *
                      C2482 +
                  ((((C4621 * C433 + C5018 + C5018 + C4617 * C453 +
                      C4623 * C432 + C5019 + C5019 + C47839 * C452) *
                         C47785 * C4619 +
                     (C5536 + C5537) * C47785 * C47870) *
                        C47671 -
                    ((C4857 + C4856) * C47785 * C47870 +
                     (C4623 * C121 + C4632 + C4632 + C47839 * C135 +
                      C4621 * C120 + C4633 + C4633 + C4617 * C134) *
                         C47785 * C4619) *
                        C47664 -
                    ((C7074 + C7075) * C47785 * C47870 +
                     (C4623 * C437 + C5024 + C5024 + C47839 * C457 +
                      C4621 * C436 + C5025 + C5025 + C4617 * C456) *
                         C47785 * C4619) *
                        C3644) *
                       C47820 +
                   (((C4856 + C4857) * C47785 * C4619 +
                     (C4858 + C4859) * C47785 * C47870) *
                        C47664 -
                    ((C6332 + C6333) * C47785 * C47870 +
                     (C5537 + C5536) * C47785 * C4619) *
                        C47671 +
                    ((C7075 + C7074) * C47785 * C4619 +
                     (C4621 * C1191 + C7068 + C7068 + C4617 * C1209 +
                      C4623 * C1192 + C7069 + C7069 + C47839 * C1210) *
                         C47785 * C47870) *
                        C3644) *
                       C47626) *
                      C47546)) /
                (p * q * std::sqrt(p + q));
    d2ee[42] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C4621 * C119 + C4626 + C4626 + C4617 * C133 +
                      C4623 * C120 + C4627 + C4627 + C47839 * C134) *
                         C47785 * C4619 +
                     (C4852 + C4853) * C47785 * C47870) *
                        C3136 -
                    ((C5534 + C5535) * C47785 * C47870 +
                     (C4623 * C433 + C5012 + C5012 + C47839 * C453 +
                      C4621 * C434 + C5013 + C5013 + C4617 * C454) *
                         C47785 * C4619) *
                        C47668) *
                       C47891 +
                   (((C5535 + C5534) * C47785 * C4619 +
                     (C5982 + C5983) * C47785 * C47870) *
                        C47668 -
                    ((C4854 + C4855) * C47785 * C47870 +
                     (C4853 + C4852) * C47785 * C4619) *
                        C3136) *
                       C47879 +
                   (((C4855 + C4854) * C47785 * C4619 +
                     (C5794 + C5795) * C47785 * C47870) *
                        C3136 -
                    ((C6480 + C6481) * C47785 * C47870 +
                     (C5983 + C5982) * C47785 * C4619) *
                        C47668) *
                       C47852) *
                      C2482 +
                  ((((C4621 * C433 + C5018 + C5018 + C4617 * C453 +
                      C4623 * C432 + C5019 + C5019 + C47839 * C452) *
                         C47785 * C4619 +
                     (C5536 + C5537) * C47785 * C47870) *
                        C47668 -
                    ((C4857 + C4856) * C47785 * C47870 +
                     (C4623 * C121 + C4632 + C4632 + C47839 * C135 +
                      C4621 * C120 + C4633 + C4633 + C4617 * C134) *
                         C47785 * C4619) *
                        C3136) *
                       C47891 +
                   (((C4856 + C4857) * C47785 * C4619 +
                     (C4858 + C4859) * C47785 * C47870) *
                        C3136 -
                    ((C6332 + C6333) * C47785 * C47870 +
                     (C5537 + C5536) * C47785 * C4619) *
                        C47668) *
                       C47879 +
                   (((C6333 + C6332) * C47785 * C4619 +
                     (C4621 * C1581 + C6326 + C6326 + C4617 * C1587 +
                      C4623 * C1582 + C6327 + C6327 + C47839 * C1588) *
                         C47785 * C47870) *
                        C47668 -
                    ((C6126 + C6127) * C47785 * C47870 +
                     (C4859 + C4858) * C47785 * C4619) *
                        C3136) *
                       C47852) *
                      C47546)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C4621 * C119 + C4626 + C4626 + C4617 * C133 +
                     C4623 * C120 + C4627 + C4627 + C47839 * C134) *
                        C47785 * C4619 +
                    (C4852 + C4853) * C47785 * C47870) *
                       C3136 -
                   ((C5534 + C5535) * C47785 * C47870 +
                    (C4623 * C433 + C5012 + C5012 + C47839 * C453 +
                     C4621 * C434 + C5013 + C5013 + C4617 * C454) *
                        C47785 * C4619) *
                       C47668) *
                      C47563 * C47897 +
                  (((C4621 * C433 + C5018 + C5018 + C4617 * C453 +
                     C4623 * C432 + C5019 + C5019 + C47839 * C452) *
                        C47785 * C4619 +
                    (C5536 + C5537) * C47785 * C47870) *
                       C47668 -
                   ((C4857 + C4856) * C47785 * C47870 +
                    (C4623 * C121 + C4632 + C4632 + C47839 * C135 +
                     C4621 * C120 + C4633 + C4633 + C4617 * C134) *
                        C47785 * C4619) *
                       C3136) *
                      C47563 * C47890 +
                  (((C4621 * C121 + C4634 + C4634 + C4617 * C135 +
                     C4623 * C122 + C4635 + C4635 + C47839 * C136) *
                        C47785 * C4619 +
                    (C4860 + C4861) * C47785 * C47870) *
                       C3136 -
                   ((C5538 + C5539) * C47785 * C47870 +
                    (C4623 * C438 + C5028 + C5028 + C47839 * C458 +
                     C4621 * C432 + C5029 + C5029 + C4617 * C452) *
                        C47785 * C4619) *
                       C47668) *
                      C47563 * C47877 +
                  (((C4621 * C438 + C5306 + C5306 + C4617 * C458 +
                     C4623 * C440 + C5307 + C5307 + C47839 * C460) *
                        C47785 * C4619 +
                    (C4621 * C845 + C5308 + C5308 + C4617 * C855 +
                     C4623 * C846 + C5309 + C5309 + C47839 * C856) *
                        C47785 * C47870) *
                       C47668 -
                   ((C5175 + C5174) * C47785 * C47870 +
                    (C4623 * C123 + C4640 + C4640 + C47839 * C137 +
                     C4621 * C122 + C4641 + C4641 + C4617 * C136) *
                        C47785 * C4619) *
                       C3136) *
                      C47563 * C47856)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 ((((C4621 * C119 + C4626 + C4626 + C4617 * C133 +
                     C4623 * C120 + C4627 + C4627 + C47839 * C134) *
                        C47785 * C4619 +
                    (C4852 + C4853) * C47785 * C47870) *
                       C47899 -
                   ((C5534 + C5535) * C47785 * C47870 +
                    (C4623 * C433 + C5012 + C5012 + C47839 * C453 +
                     C4621 * C434 + C5013 + C5013 + C4617 * C454) *
                        C47785 * C4619) *
                       C47896 +
                   ((C4621 * C435 + C5014 + C5014 + C4617 * C455 +
                     C4623 * C436 + C5015 + C5015 + C47839 * C456) *
                        C47785 * C4619 +
                    (C5980 + C5981) * C47785 * C47870) *
                       C47887 -
                   ((C7356 + C7357) * C47785 * C47870 +
                    (C4623 * C1883 + C6864 + C6864 + C47839 * C1895 +
                     C4621 * C1884 + C6865 + C6865 + C4617 * C1896) *
                        C47785 * C4619) *
                       C47868) *
                      C47563 * C2482 +
                  (((C4621 * C433 + C5018 + C5018 + C4617 * C453 +
                     C4623 * C432 + C5019 + C5019 + C47839 * C452) *
                        C47785 * C4619 +
                    (C5536 + C5537) * C47785 * C47870) *
                       C47896 -
                   ((C4857 + C4856) * C47785 * C47870 +
                    (C4623 * C121 + C4632 + C4632 + C47839 * C135 +
                     C4621 * C120 + C4633 + C4633 + C4617 * C134) *
                        C47785 * C4619) *
                       C47899 -
                   ((C7074 + C7075) * C47785 * C47870 +
                    (C4623 * C437 + C5024 + C5024 + C47839 * C457 +
                     C4621 * C436 + C5025 + C5025 + C4617 * C456) *
                        C47785 * C4619) *
                       C47887 +
                   ((C4621 * C1883 + C7206 + C7206 + C4617 * C1895 +
                     C4623 * C1882 + C7207 + C7207 + C47839 * C1894) *
                        C47785 * C4619 +
                    (C4621 * C2265 + C7208 + C7208 + C4617 * C2271 +
                     C4623 * C2266 + C7209 + C7209 + C47839 * C2272) *
                        C47785 * C47870) *
                       C47868) *
                      C47563 * C47546)) /
                    (p * q * std::sqrt(p + q));
    d2ee[43] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C4621 * C119 + C4626 + C4626 + C4617 * C133 +
                     C4623 * C120 + C4627 + C4627 + C47839 * C134) *
                        C47785 * C4619 +
                    (C4852 + C4853) * C47785 * C47870) *
                       C47664 -
                   ((C5534 + C5535) * C47785 * C47870 +
                    (C4623 * C433 + C5012 + C5012 + C47839 * C453 +
                     C4621 * C434 + C5013 + C5013 + C4617 * C454) *
                        C47785 * C4619) *
                       C47671 +
                   ((C4621 * C435 + C5014 + C5014 + C4617 * C455 +
                     C4623 * C436 + C5015 + C5015 + C47839 * C456) *
                        C47785 * C4619 +
                    (C5980 + C5981) * C47785 * C47870) *
                       C3644) *
                      C47563 * C47540 +
                  (((C4621 * C433 + C5018 + C5018 + C4617 * C453 +
                     C4623 * C432 + C5019 + C5019 + C47839 * C452) *
                        C47785 * C4619 +
                    (C5536 + C5537) * C47785 * C47870) *
                       C47671 -
                   ((C4857 + C4856) * C47785 * C47870 +
                    (C4623 * C121 + C4632 + C4632 + C47839 * C135 +
                     C4621 * C120 + C4633 + C4633 + C4617 * C134) *
                        C47785 * C4619) *
                       C47664 -
                   ((C7074 + C7075) * C47785 * C47870 +
                    (C4623 * C437 + C5024 + C5024 + C47839 * C457 +
                     C4621 * C436 + C5025 + C5025 + C4617 * C456) *
                        C47785 * C4619) *
                       C3644) *
                      C47563 * C47549 +
                  (((C4621 * C121 + C4634 + C4634 + C4617 * C135 +
                     C4623 * C122 + C4635 + C4635 + C47839 * C136) *
                        C47785 * C4619 +
                    (C4860 + C4861) * C47785 * C47870) *
                       C47664 -
                   ((C5538 + C5539) * C47785 * C47870 +
                    (C4623 * C438 + C5028 + C5028 + C47839 * C458 +
                     C4621 * C432 + C5029 + C5029 + C4617 * C452) *
                        C47785 * C4619) *
                       C47671 +
                   ((C4621 * C437 + C5030 + C5030 + C4617 * C457 +
                     C4623 * C439 + C5031 + C5031 + C47839 * C459) *
                        C47785 * C4619 +
                    (C4621 * C1184 + C5032 + C5032 + C4617 * C1202 +
                     C4623 * C2052 + C5033 + C5033 + C47839 * C2054) *
                        C47785 * C47870) *
                       C3644) *
                      C47563 * C2745)) /
                (p * q * std::sqrt(p + q));
    d2ee[44] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C4621 * C119 + C4626 + C4626 + C4617 * C133 +
                     C4623 * C120 + C4627 + C4627 + C47839 * C134) *
                        C47785 * C4619 +
                    (C4852 + C4853) * C47785 * C47870) *
                       C3136 -
                   ((C5534 + C5535) * C47785 * C47870 +
                    (C4623 * C433 + C5012 + C5012 + C47839 * C453 +
                     C4621 * C434 + C5013 + C5013 + C4617 * C454) *
                        C47785 * C4619) *
                       C47668) *
                      C47563 * C47897 +
                  (((C4621 * C433 + C5018 + C5018 + C4617 * C453 +
                     C4623 * C432 + C5019 + C5019 + C47839 * C452) *
                        C47785 * C4619 +
                    (C5536 + C5537) * C47785 * C47870) *
                       C47668 -
                   ((C4857 + C4856) * C47785 * C47870 +
                    (C4623 * C121 + C4632 + C4632 + C47839 * C135 +
                     C4621 * C120 + C4633 + C4633 + C4617 * C134) *
                        C47785 * C4619) *
                       C3136) *
                      C47563 * C47890 +
                  (((C4621 * C121 + C4634 + C4634 + C4617 * C135 +
                     C4623 * C122 + C4635 + C4635 + C47839 * C136) *
                        C47785 * C4619 +
                    (C4860 + C4861) * C47785 * C47870) *
                       C3136 -
                   ((C5538 + C5539) * C47785 * C47870 +
                    (C4623 * C438 + C5028 + C5028 + C47839 * C458 +
                     C4621 * C432 + C5029 + C5029 + C4617 * C452) *
                        C47785 * C4619) *
                       C47668) *
                      C47563 * C47877 +
                  (((C4621 * C438 + C5306 + C5306 + C4617 * C458 +
                     C4623 * C440 + C5307 + C5307 + C47839 * C460) *
                        C47785 * C4619 +
                    (C4621 * C845 + C5308 + C5308 + C4617 * C855 +
                     C4623 * C846 + C5309 + C5309 + C47839 * C856) *
                        C47785 * C47870) *
                       C47668 -
                   ((C5175 + C5174) * C47785 * C47870 +
                    (C4623 * C123 + C4640 + C4640 + C47839 * C137 +
                     C4621 * C122 + C4641 + C4641 + C4617 * C136) *
                        C47785 * C4619) *
                       C3136) *
                      C47563 * C47856)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C4621 * C119 + C4626 + C4626 + C4617 * C133 +
                      C4623 * C120 + C4627 + C4627 + C47839 * C134) *
                         C47785 * C4619 +
                     (C4852 + C4853) * C47785 * C47870) *
                        C3136 -
                    ((C5534 + C5535) * C47785 * C47870 +
                     (C4623 * C433 + C5012 + C5012 + C47839 * C453 +
                      C4621 * C434 + C5013 + C5013 + C4617 * C454) *
                         C47785 * C4619) *
                        C47668) *
                       C47891 +
                   (((C5535 + C5534) * C47785 * C4619 +
                     (C5982 + C5983) * C47785 * C47870) *
                        C47668 -
                    ((C4854 + C4855) * C47785 * C47870 +
                     (C4853 + C4852) * C47785 * C4619) *
                        C3136) *
                       C47879 +
                   (((C4855 + C4854) * C47785 * C4619 +
                     (C5794 + C5795) * C47785 * C47870) *
                        C3136 -
                    ((C6480 + C6481) * C47785 * C47870 +
                     (C5983 + C5982) * C47785 * C4619) *
                        C47668) *
                       C47852) *
                      C2482 +
                  ((((C4621 * C433 + C5018 + C5018 + C4617 * C453 +
                      C4623 * C432 + C5019 + C5019 + C47839 * C452) *
                         C47785 * C4619 +
                     (C5536 + C5537) * C47785 * C47870) *
                        C47668 -
                    ((C4857 + C4856) * C47785 * C47870 +
                     (C4623 * C121 + C4632 + C4632 + C47839 * C135 +
                      C4621 * C120 + C4633 + C4633 + C4617 * C134) *
                         C47785 * C4619) *
                        C3136) *
                       C47891 +
                   (((C4856 + C4857) * C47785 * C4619 +
                     (C4858 + C4859) * C47785 * C47870) *
                        C3136 -
                    ((C6332 + C6333) * C47785 * C47870 +
                     (C5537 + C5536) * C47785 * C4619) *
                        C47668) *
                       C47879 +
                   (((C6333 + C6332) * C47785 * C4619 +
                     (C4621 * C1581 + C6326 + C6326 + C4617 * C1587 +
                      C4623 * C1582 + C6327 + C6327 + C47839 * C1588) *
                         C47785 * C47870) *
                        C47668 -
                    ((C6126 + C6127) * C47785 * C47870 +
                     (C4859 + C4858) * C47785 * C4619) *
                        C3136) *
                       C47852) *
                      C47546)) /
                    (p * q * std::sqrt(p + q));
    d2ee[45] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C4621 * C119 + C4626 + C4626 + C4617 * C133 +
                     C4623 * C120 + C4627 + C4627 + C47839 * C134) *
                        C47785 * C4619 +
                    (C4852 + C4853) * C47785 * C47870) *
                       C47581 * C47820 -
                   ((C4854 + C4855) * C47785 * C47870 +
                    (C4853 + C4852) * C47785 * C4619) *
                       C47581 * C47626) *
                      C580 +
                  (((C4856 + C4857) * C47785 * C4619 +
                    (C4858 + C4859) * C47785 * C47870) *
                       C47581 * C47626 -
                   ((C4857 + C4856) * C47785 * C47870 +
                    (C4623 * C121 + C4632 + C4632 + C47839 * C135 +
                     C4621 * C120 + C4633 + C4633 + C4617 * C134) *
                        C47785 * C4619) *
                       C47581 * C47820) *
                      C581 +
                  (((C4621 * C121 + C4634 + C4634 + C4617 * C135 +
                     C4623 * C122 + C4635 + C4635 + C47839 * C136) *
                        C47785 * C4619 +
                    (C4860 + C4861) * C47785 * C47870) *
                       C47581 * C47820 -
                   ((C4862 + C4863) * C47785 * C47870 +
                    (C4861 + C4860) * C47785 * C4619) *
                       C47581 * C47626) *
                      C582 +
                  (((C5174 + C5175) * C47785 * C4619 +
                    (C4621 * C278 + C5168 + C5168 + C4617 * C298 +
                     C4623 * C280 + C5169 + C5169 + C47839 * C300) *
                        C47785 * C47870) *
                       C47581 * C47626 -
                   ((C5175 + C5174) * C47785 * C47870 +
                    (C4623 * C123 + C4640 + C4640 + C47839 * C137 +
                     C4621 * C122 + C4641 + C4641 + C4617 * C136) *
                        C47785 * C4619) *
                       C47581 * C47820) *
                      C47856)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C4621 * C119 + C4626 + C4626 + C4617 * C133 +
                     C4623 * C120 + C4627 + C4627 + C47839 * C134) *
                        C47785 * C4619 +
                    (C4852 + C4853) * C47785 * C47870) *
                       C47581 * C1318 -
                   ((C4854 + C4855) * C47785 * C47870 +
                    (C4853 + C4852) * C47785 * C4619) *
                       C47581 * C1319 +
                   ((C4855 + C4854) * C47785 * C4619 +
                    (C5794 + C5795) * C47785 * C47870) *
                       C47581 * C1320 -
                   ((C5796 + C5797) * C47785 * C47870 +
                    (C5795 + C5794) * C47785 * C4619) *
                       C47581 * C47862) *
                      C47806 +
                  (((C4856 + C4857) * C47785 * C4619 +
                    (C4858 + C4859) * C47785 * C47870) *
                       C47581 * C1319 -
                   ((C4857 + C4856) * C47785 * C47870 +
                    (C4623 * C121 + C4632 + C4632 + C47839 * C135 +
                     C4621 * C120 + C4633 + C4633 + C4617 * C134) *
                        C47785 * C4619) *
                       C47581 * C1318 -
                   ((C6126 + C6127) * C47785 * C47870 +
                    (C4859 + C4858) * C47785 * C4619) *
                       C47581 * C1320 +
                   ((C6127 + C6126) * C47785 * C4619 +
                    (C4621 * C1054 + C6120 + C6120 + C4617 * C1066 +
                     C4623 * C1055 + C6121 + C6121 + C47839 * C1067) *
                        C47785 * C47870) *
                       C47581 * C47862) *
                      C47546)) /
                    (p * q * std::sqrt(p + q));
    d2ee[46] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C4621 * C119 + C4626 + C4626 + C4617 * C133 +
                      C4623 * C120 + C4627 + C4627 + C47839 * C134) *
                         C47785 * C4619 +
                     (C4852 + C4853) * C47785 * C47870) *
                        C47821 -
                    ((C5534 + C5535) * C47785 * C47870 +
                     (C4623 * C433 + C5012 + C5012 + C47839 * C453 +
                      C4621 * C434 + C5013 + C5013 + C4617 * C454) *
                         C47785 * C4619) *
                        C47668) *
                       C47820 +
                   (((C5535 + C5534) * C47785 * C4619 +
                     (C4621 * C1189 + C5508 + C5508 + C4617 * C1207 +
                      C4623 * C1188 + C5509 + C5509 + C47839 * C1206) *
                         C47785 * C47870) *
                        C47668 -
                    ((C4854 + C4855) * C47785 * C47870 +
                     (C4853 + C4852) * C47785 * C4619) *
                        C47821) *
                       C47626) *
                      C268 +
                  ((((C4621 * C433 + C5018 + C5018 + C4617 * C453 +
                      C4623 * C432 + C5019 + C5019 + C47839 * C452) *
                         C47785 * C4619 +
                     (C5536 + C5537) * C47785 * C47870) *
                        C47668 -
                    ((C4857 + C4856) * C47785 * C47870 +
                     (C4623 * C121 + C4632 + C4632 + C47839 * C135 +
                      C4621 * C120 + C4633 + C4633 + C4617 * C134) *
                         C47785 * C4619) *
                        C47821) *
                       C47820 +
                   (((C4856 + C4857) * C47785 * C4619 +
                     (C4858 + C4859) * C47785 * C47870) *
                        C47821 -
                    ((C4623 * C1187 + C5514 + C5514 + C47839 * C1205 +
                      C4621 * C1188 + C5515 + C5515 + C4617 * C1206) *
                         C47785 * C47870 +
                     (C5537 + C5536) * C47785 * C4619) *
                        C47668) *
                       C47626) *
                      C269 +
                  ((((C4621 * C121 + C4634 + C4634 + C4617 * C135 +
                      C4623 * C122 + C4635 + C4635 + C47839 * C136) *
                         C47785 * C4619 +
                     (C4860 + C4861) * C47785 * C47870) *
                        C47821 -
                    ((C5538 + C5539) * C47785 * C47870 +
                     (C4623 * C438 + C5028 + C5028 + C47839 * C458 +
                      C4621 * C432 + C5029 + C5029 + C4617 * C452) *
                         C47785 * C4619) *
                        C47668) *
                       C47820 +
                   (((C5539 + C5538) * C47785 * C4619 +
                     (C4621 * C1187 + C5520 + C5520 + C4617 * C1205 +
                      C4623 * C1476 + C5521 + C5521 + C47839 * C1478) *
                         C47785 * C47870) *
                        C47668 -
                    ((C4862 + C4863) * C47785 * C47870 +
                     (C4861 + C4860) * C47785 * C4619) *
                        C47821) *
                       C47626) *
                      C47846)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C4621 * C119 + C4626 + C4626 + C4617 * C133 +
                     C4623 * C120 + C4627 + C4627 + C47839 * C134) *
                        C47785 * C4619 +
                    (C4852 + C4853) * C47785 * C47870) *
                       C47821 -
                   ((C5534 + C5535) * C47785 * C47870 +
                    (C4623 * C433 + C5012 + C5012 + C47839 * C453 +
                     C4621 * C434 + C5013 + C5013 + C4617 * C454) *
                        C47785 * C4619) *
                       C47668) *
                      C1318 +
                  (((C5535 + C5534) * C47785 * C4619 +
                    (C5982 + C5983) * C47785 * C47870) *
                       C47668 -
                   ((C4854 + C4855) * C47785 * C47870 +
                    (C4853 + C4852) * C47785 * C4619) *
                       C47821) *
                      C1319 +
                  (((C4855 + C4854) * C47785 * C4619 +
                    (C5794 + C5795) * C47785 * C47870) *
                       C47821 -
                   ((C6480 + C6481) * C47785 * C47870 +
                    (C5983 + C5982) * C47785 * C4619) *
                       C47668) *
                      C1320 +
                  (((C6481 + C6480) * C47785 * C4619 +
                    (C4621 * C6463 + C6474 + C6474 + C4617 * C6467 +
                     C4623 * C6464 + C6475 + C6475 + C47839 * C6468) *
                        C47785 * C47870) *
                       C47668 -
                   ((C5796 + C5797) * C47785 * C47870 +
                    (C5795 + C5794) * C47785 * C4619) *
                       C47821) *
                      C47862) *
                 C47535) /
                    (p * q * std::sqrt(p + q));
    d2ee[47] += (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                 ((((C4621 * C119 + C4626 + C4626 + C4617 * C133 +
                     C4623 * C120 + C4627 + C4627 + C47839 * C134) *
                        C47785 * C4619 +
                    (C4852 + C4853) * C47785 * C47870) *
                       C47581 * C47891 -
                   ((C4854 + C4855) * C47785 * C47870 +
                    (C4853 + C4852) * C47785 * C4619) *
                       C47581 * C47879 +
                   ((C4855 + C4854) * C47785 * C4619 +
                    (C4621 * C1052 + C4802 + C4802 + C4617 * C1064 +
                     C4623 * C1051 + C4803 + C4803 + C47839 * C1063) *
                        C47785 * C47870) *
                       C47581 * C47852) *
                      C268 +
                  (((C4856 + C4857) * C47785 * C4619 +
                    (C4858 + C4859) * C47785 * C47870) *
                       C47581 * C47879 -
                   ((C4857 + C4856) * C47785 * C47870 +
                    (C4623 * C121 + C4632 + C4632 + C47839 * C135 +
                     C4621 * C120 + C4633 + C4633 + C4617 * C134) *
                        C47785 * C4619) *
                       C47581 * C47891 -
                   ((C4623 * C1050 + C4814 + C4814 + C47839 * C1062 +
                     C4621 * C1051 + C4815 + C4815 + C4617 * C1063) *
                        C47785 * C47870 +
                    (C4859 + C4858) * C47785 * C4619) *
                       C47581 * C47852) *
                      C269 +
                  (((C4621 * C121 + C4634 + C4634 + C4617 * C135 +
                     C4623 * C122 + C4635 + C4635 + C47839 * C136) *
                        C47785 * C4619 +
                    (C4860 + C4861) * C47785 * C47870) *
                       C47581 * C47891 -
                   ((C4862 + C4863) * C47785 * C47870 +
                    (C4861 + C4860) * C47785 * C4619) *
                       C47581 * C47879 +
                   ((C4863 + C4862) * C47785 * C4619 +
                    (C4621 * C1050 + C4826 + C4826 + C4617 * C1062 +
                     C4623 * C1324 + C4827 + C4827 + C47839 * C1326) *
                        C47785 * C47870) *
                       C47581 * C47852) *
                      C47846)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                 (((C4621 * C119 + C4626 + C4626 + C4617 * C133 + C4623 * C120 +
                    C4627 + C4627 + C47839 * C134) *
                       C47785 * C4619 +
                   (C4621 * C273 + C4628 + C4628 + C4617 * C293 + C4623 * C272 +
                    C4629 + C4629 + C47839 * C292) *
                       C47785 * C47870) *
                      C47581 * C47563 * C108 -
                  ((C4623 * C271 + C4630 + C4630 + C47839 * C291 +
                    C4621 * C272 + C4631 + C4631 + C4617 * C292) *
                       C47785 * C47870 +
                   (C4623 * C121 + C4632 + C4632 + C47839 * C135 +
                    C4621 * C120 + C4633 + C4633 + C4617 * C134) *
                       C47785 * C4619) *
                      C47581 * C47563 * C109 +
                  ((C4621 * C121 + C4634 + C4634 + C4617 * C135 + C4623 * C122 +
                    C4635 + C4635 + C47839 * C136) *
                       C47785 * C4619 +
                   (C4621 * C271 + C4636 + C4636 + C4617 * C291 + C4623 * C277 +
                    C4637 + C4637 + C47839 * C297) *
                       C47785 * C47870) *
                      C47581 * C47563 * C110 -
                  ((C4623 * C279 + C4638 + C4638 + C47839 * C299 +
                    C4621 * C277 + C4639 + C4639 + C4617 * C297) *
                       C47785 * C47870 +
                   (C4623 * C123 + C4640 + C4640 + C47839 * C137 +
                    C4621 * C122 + C4641 + C4641 + C4617 * C136) *
                       C47785 * C4619) *
                      C47581 * C47563 * C111 +
                  ((C4621 * C123 + C4642 + C4642 + C4617 * C137 + C4623 * C124 +
                    C4643 + C4643 + C47839 * C138) *
                       C47785 * C4619 +
                   (C4621 * C279 + C4644 + C4644 + C4617 * C299 + C4623 * C584 +
                    C4645 + C4645 + C47839 * C586) *
                       C47785 * C47870) *
                      C47581 * C47563 * C112)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C4621 * C119 + C4626 + C4626 + C4617 * C133 +
                     C4623 * C120 + C4627 + C4627 + C47839 * C134) *
                        C47785 * C4619 +
                    (C4852 + C4853) * C47785 * C47870) *
                       C47892 -
                   ((C4623 * C843 + C5010 + C5010 + C47839 * C853 +
                     C4621 * C842 + C5011 + C5011 + C4617 * C852) *
                        C47785 * C47870 +
                    (C4623 * C433 + C5012 + C5012 + C47839 * C453 +
                     C4621 * C434 + C5013 + C5013 + C4617 * C454) *
                        C47785 * C4619) *
                       C47881 +
                   ((C4621 * C435 + C5014 + C5014 + C4617 * C455 +
                     C4623 * C436 + C5015 + C5015 + C47839 * C456) *
                        C47785 * C4619 +
                    (C4621 * C1186 + C5016 + C5016 + C4617 * C1204 +
                     C4623 * C1185 + C5017 + C5017 + C47839 * C1203) *
                        C47785 * C47870) *
                       C47855) *
                      C47563 * C268 +
                  (((C4621 * C433 + C5018 + C5018 + C4617 * C453 +
                     C4623 * C432 + C5019 + C5019 + C47839 * C452) *
                        C47785 * C4619 +
                    (C4621 * C843 + C5020 + C5020 + C4617 * C853 +
                     C4623 * C844 + C5021 + C5021 + C47839 * C854) *
                        C47785 * C47870) *
                       C47881 -
                   ((C4857 + C4856) * C47785 * C47870 +
                    (C4623 * C121 + C4632 + C4632 + C47839 * C135 +
                     C4621 * C120 + C4633 + C4633 + C4617 * C134) *
                        C47785 * C4619) *
                       C47892 -
                   ((C4623 * C1184 + C5022 + C5022 + C47839 * C1202 +
                     C4621 * C1185 + C5023 + C5023 + C4617 * C1203) *
                        C47785 * C47870 +
                    (C4623 * C437 + C5024 + C5024 + C47839 * C457 +
                     C4621 * C436 + C5025 + C5025 + C4617 * C456) *
                        C47785 * C4619) *
                       C47855) *
                      C47563 * C269 +
                  (((C4621 * C121 + C4634 + C4634 + C4617 * C135 +
                     C4623 * C122 + C4635 + C4635 + C47839 * C136) *
                        C47785 * C4619 +
                    (C4860 + C4861) * C47785 * C47870) *
                       C47892 -
                   ((C4623 * C845 + C5026 + C5026 + C47839 * C855 +
                     C4621 * C844 + C5027 + C5027 + C4617 * C854) *
                        C47785 * C47870 +
                    (C4623 * C438 + C5028 + C5028 + C47839 * C458 +
                     C4621 * C432 + C5029 + C5029 + C4617 * C452) *
                        C47785 * C4619) *
                       C47881 +
                   ((C4621 * C437 + C5030 + C5030 + C4617 * C457 +
                     C4623 * C439 + C5031 + C5031 + C47839 * C459) *
                        C47785 * C4619 +
                    (C4621 * C1184 + C5032 + C5032 + C4617 * C1202 +
                     C4623 * C2052 + C5033 + C5033 + C47839 * C2054) *
                        C47785 * C47870) *
                       C47855) *
                      C47563 * C47846)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                 ((((C4621 * C119 + C4626 + C4626 + C4617 * C133 +
                     C4623 * C120 + C4627 + C4627 + C47839 * C134) *
                        C47785 * C4619 +
                    (C4852 + C4853) * C47785 * C47870) *
                       C47581 * C976 -
                   ((C4854 + C4855) * C47785 * C47870 +
                    (C4853 + C4852) * C47785 * C4619) *
                       C47581 * C977 +
                   ((C4855 + C4854) * C47785 * C4619 +
                    (C4621 * C1052 + C4802 + C4802 + C4617 * C1064 +
                     C4623 * C1051 + C4803 + C4803 + C47839 * C1063) *
                        C47785 * C47870) *
                       C47581 * C47852) *
                      C47888 +
                  (((C4856 + C4857) * C47785 * C4619 +
                    (C4858 + C4859) * C47785 * C47870) *
                       C47581 * C977 -
                   ((C4857 + C4856) * C47785 * C47870 +
                    (C4623 * C121 + C4632 + C4632 + C47839 * C135 +
                     C4621 * C120 + C4633 + C4633 + C4617 * C134) *
                        C47785 * C4619) *
                       C47581 * C976 -
                   ((C4623 * C1050 + C4814 + C4814 + C47839 * C1062 +
                     C4621 * C1051 + C4815 + C4815 + C4617 * C1063) *
                        C47785 * C47870 +
                    (C4859 + C4858) * C47785 * C4619) *
                       C47581 * C47852) *
                      C47875 +
                  (((C4621 * C121 + C4634 + C4634 + C4617 * C135 +
                     C4623 * C122 + C4635 + C4635 + C47839 * C136) *
                        C47785 * C4619 +
                    (C4860 + C4861) * C47785 * C47870) *
                       C47581 * C976 -
                   ((C4862 + C4863) * C47785 * C47870 +
                    (C4861 + C4860) * C47785 * C4619) *
                       C47581 * C977 +
                   ((C4863 + C4862) * C47785 * C4619 +
                    (C4621 * C1050 + C4826 + C4826 + C4617 * C1062 +
                     C4623 * C1324 + C4827 + C4827 + C47839 * C1326) *
                        C47785 * C47870) *
                       C47581 * C47852) *
                      C47846)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                 (((C4621 * C119 + C4626 + C4626 + C4617 * C133 + C4623 * C120 +
                    C4627 + C4627 + C47839 * C134) *
                       C47785 * C4619 +
                   (C4852 + C4853) * C47785 * C47870) *
                      C47581 * C1044 -
                  ((C4854 + C4855) * C47785 * C47870 +
                   (C4853 + C4852) * C47785 * C4619) *
                      C47581 * C1045 +
                  ((C4855 + C4854) * C47785 * C4619 +
                   (C5794 + C5795) * C47785 * C47870) *
                      C47581 * C1046 -
                  ((C5796 + C5797) * C47785 * C47870 +
                   (C5795 + C5794) * C47785 * C4619) *
                      C47581 * C1047 +
                  ((C5797 + C5796) * C47785 * C4619 +
                   (C4621 * C5767 + C5784 + C5784 + C4617 * C5771 +
                    C4623 * C5768 + C5785 + C5785 + C47839 * C5772) *
                       C47785 * C47870) *
                      C47581 * C1048) *
                 C47535) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C4621 * C119 + C4626 + C4626 + C4617 * C133 +
                     C4623 * C120 + C4627 + C4627 + C47839 * C134) *
                        C47785 * C4619 +
                    (C4852 + C4853) * C47785 * C47870) *
                       C47892 -
                   ((C5534 + C5535) * C47785 * C47870 +
                    (C4623 * C433 + C5012 + C5012 + C47839 * C453 +
                     C4621 * C434 + C5013 + C5013 + C4617 * C454) *
                        C47785 * C4619) *
                       C47881 +
                   ((C4621 * C435 + C5014 + C5014 + C4617 * C455 +
                     C4623 * C436 + C5015 + C5015 + C47839 * C456) *
                        C47785 * C4619 +
                    (C5980 + C5981) * C47785 * C47870) *
                       C47855) *
                      C976 +
                  (((C5535 + C5534) * C47785 * C4619 +
                    (C5982 + C5983) * C47785 * C47870) *
                       C47881 -
                   ((C4854 + C4855) * C47785 * C47870 +
                    (C4853 + C4852) * C47785 * C4619) *
                       C47892 -
                   ((C5984 + C5985) * C47785 * C47870 +
                    (C5981 + C5980) * C47785 * C4619) *
                       C47855) *
                      C977 +
                  (((C4855 + C4854) * C47785 * C4619 +
                    (C5794 + C5795) * C47785 * C47870) *
                       C47892 -
                   ((C4623 * C1581 + C5964 + C5964 + C47839 * C1587 +
                     C4621 * C1580 + C5965 + C5965 + C4617 * C1586) *
                        C47785 * C47870 +
                    (C5983 + C5982) * C47785 * C4619) *
                       C47881 +
                   ((C5985 + C5984) * C47785 * C4619 +
                    (C4621 * C5943 + C5966 + C5966 + C4617 * C5947 +
                     C4623 * C5944 + C5967 + C5967 + C47839 * C5948) *
                        C47785 * C47870) *
                       C47855) *
                      C47852) *
                 C47535) /
                    (p * q * std::sqrt(p + q));
    d2ee[48] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C4621 * C119 + C4626 + C4626 + C4617 * C133 +
                     C4623 * C120 + C4627 + C4627 + C47839 * C134) *
                        C47785 * C4619 +
                    (C4852 + C4853) * C47785 * C47870) *
                       C47821 -
                   ((C4623 * C843 + C5010 + C5010 + C47839 * C853 +
                     C4621 * C842 + C5011 + C5011 + C4617 * C852) *
                        C47785 * C47870 +
                    (C4623 * C433 + C5012 + C5012 + C47839 * C453 +
                     C4621 * C434 + C5013 + C5013 + C4617 * C454) *
                        C47785 * C4619) *
                       C47668) *
                      C47563 * C580 +
                  (((C4621 * C433 + C5018 + C5018 + C4617 * C453 +
                     C4623 * C432 + C5019 + C5019 + C47839 * C452) *
                        C47785 * C4619 +
                    (C4621 * C843 + C5020 + C5020 + C4617 * C853 +
                     C4623 * C844 + C5021 + C5021 + C47839 * C854) *
                        C47785 * C47870) *
                       C47668 -
                   ((C4857 + C4856) * C47785 * C47870 +
                    (C4623 * C121 + C4632 + C4632 + C47839 * C135 +
                     C4621 * C120 + C4633 + C4633 + C4617 * C134) *
                        C47785 * C4619) *
                       C47821) *
                      C47563 * C581 +
                  (((C4621 * C121 + C4634 + C4634 + C4617 * C135 +
                     C4623 * C122 + C4635 + C4635 + C47839 * C136) *
                        C47785 * C4619 +
                    (C4860 + C4861) * C47785 * C47870) *
                       C47821 -
                   ((C4623 * C845 + C5026 + C5026 + C47839 * C855 +
                     C4621 * C844 + C5027 + C5027 + C4617 * C854) *
                        C47785 * C47870 +
                    (C4623 * C438 + C5028 + C5028 + C47839 * C458 +
                     C4621 * C432 + C5029 + C5029 + C4617 * C452) *
                        C47785 * C4619) *
                       C47668) *
                      C47563 * C582 +
                  (((C4621 * C438 + C5306 + C5306 + C4617 * C458 +
                     C4623 * C440 + C5307 + C5307 + C47839 * C460) *
                        C47785 * C4619 +
                    (C4621 * C845 + C5308 + C5308 + C4617 * C855 +
                     C4623 * C846 + C5309 + C5309 + C47839 * C856) *
                        C47785 * C47870) *
                       C47668 -
                   ((C5175 + C5174) * C47785 * C47870 +
                    (C4623 * C123 + C4640 + C4640 + C47839 * C137 +
                     C4621 * C122 + C4641 + C4641 + C4617 * C136) *
                        C47785 * C4619) *
                       C47821) *
                      C47563 * C47856)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C4621 * C119 + C4626 + C4626 + C4617 * C133 +
                      C4623 * C120 + C4627 + C4627 + C47839 * C134) *
                         C47785 * C4619 +
                     (C4852 + C4853) * C47785 * C47870) *
                        C47821 -
                    ((C5534 + C5535) * C47785 * C47870 +
                     (C4623 * C433 + C5012 + C5012 + C47839 * C453 +
                      C4621 * C434 + C5013 + C5013 + C4617 * C454) *
                         C47785 * C4619) *
                        C47668) *
                       C976 +
                   (((C5535 + C5534) * C47785 * C4619 +
                     (C5982 + C5983) * C47785 * C47870) *
                        C47668 -
                    ((C4854 + C4855) * C47785 * C47870 +
                     (C4853 + C4852) * C47785 * C4619) *
                        C47821) *
                       C977 +
                   (((C4855 + C4854) * C47785 * C4619 +
                     (C5794 + C5795) * C47785 * C47870) *
                        C47821 -
                    ((C4623 * C1581 + C5964 + C5964 + C47839 * C1587 +
                      C4621 * C1580 + C5965 + C5965 + C4617 * C1586) *
                         C47785 * C47870 +
                     (C5983 + C5982) * C47785 * C4619) *
                        C47668) *
                       C47852) *
                      C47806 +
                  ((((C4621 * C433 + C5018 + C5018 + C4617 * C453 +
                      C4623 * C432 + C5019 + C5019 + C47839 * C452) *
                         C47785 * C4619 +
                     (C5536 + C5537) * C47785 * C47870) *
                        C47668 -
                    ((C4857 + C4856) * C47785 * C47870 +
                     (C4623 * C121 + C4632 + C4632 + C47839 * C135 +
                      C4621 * C120 + C4633 + C4633 + C4617 * C134) *
                         C47785 * C4619) *
                        C47821) *
                       C976 +
                   (((C4856 + C4857) * C47785 * C4619 +
                     (C4858 + C4859) * C47785 * C47870) *
                        C47821 -
                    ((C6332 + C6333) * C47785 * C47870 +
                     (C5537 + C5536) * C47785 * C4619) *
                        C47668) *
                       C977 +
                   (((C6333 + C6332) * C47785 * C4619 +
                     (C4621 * C1581 + C6326 + C6326 + C4617 * C1587 +
                      C4623 * C1582 + C6327 + C6327 + C47839 * C1588) *
                         C47785 * C47870) *
                        C47668 -
                    ((C6126 + C6127) * C47785 * C47870 +
                     (C4859 + C4858) * C47785 * C4619) *
                        C47821) *
                       C47852) *
                      C47546)) /
                    (p * q * std::sqrt(p + q));
    d2ee[49] += (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 (((C4621 * C119 + C4626 + C4626 + C4617 * C133 + C4623 * C120 +
                    C4627 + C4627 + C47839 * C134) *
                       C47785 * C4619 +
                   (C4621 * C273 + C4628 + C4628 + C4617 * C293 + C4623 * C272 +
                    C4629 + C4629 + C47839 * C292) *
                       C47785 * C47870) *
                      C47581 * C47563 * C108 -
                  ((C4623 * C271 + C4630 + C4630 + C47839 * C291 +
                    C4621 * C272 + C4631 + C4631 + C4617 * C292) *
                       C47785 * C47870 +
                   (C4623 * C121 + C4632 + C4632 + C47839 * C135 +
                    C4621 * C120 + C4633 + C4633 + C4617 * C134) *
                       C47785 * C4619) *
                      C47581 * C47563 * C109 +
                  ((C4621 * C121 + C4634 + C4634 + C4617 * C135 + C4623 * C122 +
                    C4635 + C4635 + C47839 * C136) *
                       C47785 * C4619 +
                   (C4621 * C271 + C4636 + C4636 + C4617 * C291 + C4623 * C277 +
                    C4637 + C4637 + C47839 * C297) *
                       C47785 * C47870) *
                      C47581 * C47563 * C110 -
                  ((C4623 * C279 + C4638 + C4638 + C47839 * C299 +
                    C4621 * C277 + C4639 + C4639 + C4617 * C297) *
                       C47785 * C47870 +
                   (C4623 * C123 + C4640 + C4640 + C47839 * C137 +
                    C4621 * C122 + C4641 + C4641 + C4617 * C136) *
                       C47785 * C4619) *
                      C47581 * C47563 * C111 +
                  ((C4621 * C123 + C4642 + C4642 + C4617 * C137 + C4623 * C124 +
                    C4643 + C4643 + C47839 * C138) *
                       C47785 * C4619 +
                   (C4621 * C279 + C4644 + C4644 + C4617 * C299 + C4623 * C584 +
                    C4645 + C4645 + C47839 * C586) *
                       C47785 * C47870) *
                      C47581 * C47563 * C112)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 ((((C4621 * C119 + C4626 + C4626 + C4617 * C133 +
                     C4623 * C120 + C4627 + C4627 + C47839 * C134) *
                        C47785 * C4619 +
                    (C4852 + C4853) * C47785 * C47870) *
                       C47581 * C47891 -
                   ((C4854 + C4855) * C47785 * C47870 +
                    (C4853 + C4852) * C47785 * C4619) *
                       C47581 * C47879 +
                   ((C4855 + C4854) * C47785 * C4619 +
                    (C4621 * C1052 + C4802 + C4802 + C4617 * C1064 +
                     C4623 * C1051 + C4803 + C4803 + C47839 * C1063) *
                        C47785 * C47870) *
                       C47581 * C47852) *
                      C268 +
                  (((C4856 + C4857) * C47785 * C4619 +
                    (C4858 + C4859) * C47785 * C47870) *
                       C47581 * C47879 -
                   ((C4857 + C4856) * C47785 * C47870 +
                    (C4623 * C121 + C4632 + C4632 + C47839 * C135 +
                     C4621 * C120 + C4633 + C4633 + C4617 * C134) *
                        C47785 * C4619) *
                       C47581 * C47891 -
                   ((C4623 * C1050 + C4814 + C4814 + C47839 * C1062 +
                     C4621 * C1051 + C4815 + C4815 + C4617 * C1063) *
                        C47785 * C47870 +
                    (C4859 + C4858) * C47785 * C4619) *
                       C47581 * C47852) *
                      C269 +
                  (((C4621 * C121 + C4634 + C4634 + C4617 * C135 +
                     C4623 * C122 + C4635 + C4635 + C47839 * C136) *
                        C47785 * C4619 +
                    (C4860 + C4861) * C47785 * C47870) *
                       C47581 * C47891 -
                   ((C4862 + C4863) * C47785 * C47870 +
                    (C4861 + C4860) * C47785 * C4619) *
                       C47581 * C47879 +
                   ((C4863 + C4862) * C47785 * C4619 +
                    (C4621 * C1050 + C4826 + C4826 + C4617 * C1062 +
                     C4623 * C1324 + C4827 + C4827 + C47839 * C1326) *
                        C47785 * C47870) *
                       C47581 * C47852) *
                      C47846)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 ((((C4621 * C119 + C4626 + C4626 + C4617 * C133 +
                     C4623 * C120 + C4627 + C4627 + C47839 * C134) *
                        C47785 * C4619 +
                    (C4852 + C4853) * C47785 * C47870) *
                       C47581 * C976 -
                   ((C4854 + C4855) * C47785 * C47870 +
                    (C4853 + C4852) * C47785 * C4619) *
                       C47581 * C977 +
                   ((C4855 + C4854) * C47785 * C4619 +
                    (C4621 * C1052 + C4802 + C4802 + C4617 * C1064 +
                     C4623 * C1051 + C4803 + C4803 + C47839 * C1063) *
                        C47785 * C47870) *
                       C47581 * C47852) *
                      C47888 +
                  (((C4856 + C4857) * C47785 * C4619 +
                    (C4858 + C4859) * C47785 * C47870) *
                       C47581 * C977 -
                   ((C4857 + C4856) * C47785 * C47870 +
                    (C4623 * C121 + C4632 + C4632 + C47839 * C135 +
                     C4621 * C120 + C4633 + C4633 + C4617 * C134) *
                        C47785 * C4619) *
                       C47581 * C976 -
                   ((C4623 * C1050 + C4814 + C4814 + C47839 * C1062 +
                     C4621 * C1051 + C4815 + C4815 + C4617 * C1063) *
                        C47785 * C47870 +
                    (C4859 + C4858) * C47785 * C4619) *
                       C47581 * C47852) *
                      C47875 +
                  (((C4621 * C121 + C4634 + C4634 + C4617 * C135 +
                     C4623 * C122 + C4635 + C4635 + C47839 * C136) *
                        C47785 * C4619 +
                    (C4860 + C4861) * C47785 * C47870) *
                       C47581 * C976 -
                   ((C4862 + C4863) * C47785 * C47870 +
                    (C4861 + C4860) * C47785 * C4619) *
                       C47581 * C977 +
                   ((C4863 + C4862) * C47785 * C4619 +
                    (C4621 * C1050 + C4826 + C4826 + C4617 * C1062 +
                     C4623 * C1324 + C4827 + C4827 + C47839 * C1326) *
                        C47785 * C47870) *
                       C47581 * C47852) *
                      C47846)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 (((C4621 * C119 + C4626 + C4626 + C4617 * C133 + C4623 * C120 +
                    C4627 + C4627 + C47839 * C134) *
                       C47785 * C4619 +
                   (C4852 + C4853) * C47785 * C47870) *
                      C47581 * C1044 -
                  ((C4854 + C4855) * C47785 * C47870 +
                   (C4853 + C4852) * C47785 * C4619) *
                      C47581 * C1045 +
                  ((C4855 + C4854) * C47785 * C4619 +
                   (C5794 + C5795) * C47785 * C47870) *
                      C47581 * C1046 -
                  ((C5796 + C5797) * C47785 * C47870 +
                   (C5795 + C5794) * C47785 * C4619) *
                      C47581 * C1047 +
                  ((C5797 + C5796) * C47785 * C4619 +
                   (C4621 * C5767 + C5784 + C5784 + C4617 * C5771 +
                    C4623 * C5768 + C5785 + C5785 + C47839 * C5772) *
                       C47785 * C47870) *
                      C47581 * C1048) *
                 C47535) /
                    (p * q * std::sqrt(p + q));
    d2ee[50] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C4621 * C119 + C4626 + C4626 + C4617 * C133 +
                     C4623 * C120 + C4627 + C4627 + C47839 * C134) *
                        C10403 +
                    (C10750 + C10751) * C47872) *
                       C47770 * C47581 * C47622 -
                   ((C5534 + C5535) * C47872 + (C4853 + C4852) * C10403) *
                       C47770 * C47581 * C47629 +
                   ((C4855 + C4854) * C10403 + (C5982 + C5983) * C47872) *
                       C47770 * C47581 * C2742) *
                      C47540 +
                  (((C4856 + C4857) * C10403 + (C5536 + C5537) * C47872) *
                       C47770 * C47581 * C47629 -
                   ((C10755 + C10754) * C47872 +
                    (C4623 * C121 + C4632 + C4632 + C47839 * C135 +
                     C4621 * C120 + C4633 + C4633 + C4617 * C134) *
                        C10403) *
                       C47770 * C47581 * C47622 -
                   ((C6332 + C6333) * C47872 + (C4859 + C4858) * C10403) *
                       C47770 * C47581 * C2742) *
                      C47549 +
                  (((C4621 * C121 + C4634 + C4634 + C4617 * C135 +
                     C4623 * C122 + C4635 + C4635 + C47839 * C136) *
                        C10403 +
                    (C10758 + C10759) * C47872) *
                       C47770 * C47581 * C47622 -
                   ((C5538 + C5539) * C47872 + (C4861 + C4860) * C10403) *
                       C47770 * C47581 * C47629 +
                   ((C4863 + C4862) * C10403 +
                    (C4621 * C1187 + C5520 + C5520 + C4617 * C1205 +
                     C4623 * C1476 + C5521 + C5521 + C47839 * C1478) *
                        C47872) *
                       C47770 * C47581 * C2742) *
                      C2745)) /
                (p * q * std::sqrt(p + q));
    d2ee[51] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C4621 * C119 + C4626 + C4626 + C4617 * C133 +
                      C4623 * C120 + C4627 + C4627 + C47839 * C134) *
                         C10403 +
                     (C10750 + C10751) * C47872) *
                        C47770 * C47821 -
                    ((C10752 + C10753) * C47872 + (C10751 + C10750) * C10403) *
                        C47770 * C47668) *
                       C47622 +
                   (((C5535 + C5534) * C10403 + (C5980 + C5981) * C47872) *
                        C47770 * C47668 -
                    ((C5534 + C5535) * C47872 + (C4853 + C4852) * C10403) *
                        C47770 * C47821) *
                       C47629 +
                   (((C4855 + C4854) * C10403 + (C5982 + C5983) * C47872) *
                        C47770 * C47821 -
                    ((C5984 + C5985) * C47872 + (C5983 + C5982) * C10403) *
                        C47770 * C47668) *
                       C2742) *
                      C2482 +
                  ((((C10754 + C10755) * C10403 + (C10756 + C10757) * C47872) *
                        C47770 * C47668 -
                    ((C10755 + C10754) * C47872 +
                     (C4623 * C121 + C4632 + C4632 + C47839 * C135 +
                      C4621 * C120 + C4633 + C4633 + C4617 * C134) *
                         C10403) *
                        C47770 * C47821) *
                       C47622 +
                   (((C4856 + C4857) * C10403 + (C5536 + C5537) * C47872) *
                        C47770 * C47821 -
                    ((C7074 + C7075) * C47872 + (C5537 + C5536) * C10403) *
                        C47770 * C47668) *
                       C47629 +
                   (((C6333 + C6332) * C10403 +
                     (C4621 * C1191 + C7068 + C7068 + C4617 * C1209 +
                      C4623 * C1192 + C7069 + C7069 + C47839 * C1210) *
                         C47872) *
                        C47770 * C47668 -
                    ((C6332 + C6333) * C47872 + (C4859 + C4858) * C10403) *
                        C47770 * C47821) *
                       C2742) *
                      C47546)) /
                (p * q * std::sqrt(p + q));
    d2ee[52] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C4621 * C119 + C4626 + C4626 + C4617 * C133 +
                     C4623 * C120 + C4627 + C4627 + C47839 * C134) *
                        C10403 +
                    (C10750 + C10751) * C47872) *
                       C47770 * C47581 * C47898 -
                   ((C5534 + C5535) * C47872 + (C4853 + C4852) * C10403) *
                       C47770 * C47581 * C47894 +
                   ((C4855 + C4854) * C10403 + (C5982 + C5983) * C47872) *
                       C47770 * C47581 * C47884 -
                   ((C6480 + C6481) * C47872 + (C5795 + C5794) * C10403) *
                       C47770 * C47581 * C47862) *
                      C2482 +
                  (((C4856 + C4857) * C10403 + (C5536 + C5537) * C47872) *
                       C47770 * C47581 * C47894 -
                   ((C10755 + C10754) * C47872 +
                    (C4623 * C121 + C4632 + C4632 + C47839 * C135 +
                     C4621 * C120 + C4633 + C4633 + C4617 * C134) *
                        C10403) *
                       C47770 * C47581 * C47898 -
                   ((C6332 + C6333) * C47872 + (C4859 + C4858) * C10403) *
                       C47770 * C47581 * C47884 +
                   ((C6127 + C6126) * C10403 +
                    (C4621 * C1581 + C6326 + C6326 + C4617 * C1587 +
                     C4623 * C1582 + C6327 + C6327 + C47839 * C1588) *
                        C47872) *
                       C47770 * C47581 * C47862) *
                      C47546)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C4621 * C119 + C4626 + C4626 + C4617 * C133 +
                     C4623 * C120 + C4627 + C4627 + C47839 * C134) *
                        C10403 +
                    (C10750 + C10751) * C47872) *
                       C47770 * C47581 * C2374 -
                   ((C5534 + C5535) * C47872 + (C4853 + C4852) * C10403) *
                       C47770 * C47581 * C47626) *
                      C47897 +
                  (((C4856 + C4857) * C10403 + (C5536 + C5537) * C47872) *
                       C47770 * C47581 * C47626 -
                   ((C10755 + C10754) * C47872 +
                    (C4623 * C121 + C4632 + C4632 + C47839 * C135 +
                     C4621 * C120 + C4633 + C4633 + C4617 * C134) *
                        C10403) *
                       C47770 * C47581 * C2374) *
                      C47890 +
                  (((C4621 * C121 + C4634 + C4634 + C4617 * C135 +
                     C4623 * C122 + C4635 + C4635 + C47839 * C136) *
                        C10403 +
                    (C10758 + C10759) * C47872) *
                       C47770 * C47581 * C2374 -
                   ((C5538 + C5539) * C47872 + (C4861 + C4860) * C10403) *
                       C47770 * C47581 * C47626) *
                      C47877 +
                  (((C5174 + C5175) * C10403 +
                    (C4621 * C845 + C5308 + C5308 + C4617 * C855 +
                     C4623 * C846 + C5309 + C5309 + C47839 * C856) *
                        C47872) *
                       C47770 * C47581 * C47626 -
                   ((C11033 + C11032) * C47872 +
                    (C4623 * C123 + C4640 + C4640 + C47839 * C137 +
                     C4621 * C122 + C4641 + C4641 + C4617 * C136) *
                        C10403) *
                       C47770 * C47581 * C2374) *
                      C47856)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 (((((C4621 * C119 + C4626 + C4626 + C4617 * C133 +
                      C4623 * C120 + C4627 + C4627 + C47839 * C134) *
                         C10403 +
                     (C10750 + C10751) * C47872) *
                        C47770 * C47892 -
                    ((C10752 + C10753) * C47872 + (C10751 + C10750) * C10403) *
                        C47770 * C47881 +
                    ((C10753 + C10752) * C10403 + (C12454 + C12455) * C47872) *
                        C47770 * C47855) *
                       C2374 +
                   (((C5535 + C5534) * C10403 + (C5980 + C5981) * C47872) *
                        C47770 * C47881 -
                    ((C5534 + C5535) * C47872 + (C4853 + C4852) * C10403) *
                        C47770 * C47892 -
                    ((C7356 + C7357) * C47872 + (C5981 + C5980) * C10403) *
                        C47770 * C47855) *
                       C47626) *
                      C2482 +
                  ((((C10754 + C10755) * C10403 + (C10756 + C10757) * C47872) *
                        C47770 * C47881 -
                    ((C10755 + C10754) * C47872 +
                     (C4623 * C121 + C4632 + C4632 + C47839 * C135 +
                      C4621 * C120 + C4633 + C4633 + C4617 * C134) *
                         C10403) *
                        C47770 * C47892 -
                    ((C12792 + C12793) * C47872 + (C10757 + C10756) * C10403) *
                        C47770 * C47855) *
                       C2374 +
                   (((C4856 + C4857) * C10403 + (C5536 + C5537) * C47872) *
                        C47770 * C47892 -
                    ((C7074 + C7075) * C47872 + (C5537 + C5536) * C10403) *
                        C47770 * C47881 +
                    ((C7075 + C7074) * C10403 +
                     (C4621 * C2265 + C7208 + C7208 + C4617 * C2271 +
                      C4623 * C2266 + C7209 + C7209 + C47839 * C2272) *
                         C47872) *
                        C47770 * C47855) *
                       C47626) *
                      C47546)) /
                    (p * q * std::sqrt(p + q));
    d2ee[53] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C4621 * C119 + C4626 + C4626 + C4617 * C133 +
                      C4623 * C120 + C4627 + C4627 + C47839 * C134) *
                         C10403 +
                     (C10750 + C10751) * C47872) *
                        C47770 * C47821 -
                    ((C10752 + C10753) * C47872 + (C10751 + C10750) * C10403) *
                        C47770 * C47668) *
                       C2374 +
                   (((C5535 + C5534) * C10403 + (C5980 + C5981) * C47872) *
                        C47770 * C47668 -
                    ((C5534 + C5535) * C47872 + (C4853 + C4852) * C10403) *
                        C47770 * C47821) *
                       C47626) *
                      C47540 +
                  ((((C10754 + C10755) * C10403 + (C10756 + C10757) * C47872) *
                        C47770 * C47668 -
                    ((C10755 + C10754) * C47872 +
                     (C4623 * C121 + C4632 + C4632 + C47839 * C135 +
                      C4621 * C120 + C4633 + C4633 + C4617 * C134) *
                         C10403) *
                        C47770 * C47821) *
                       C2374 +
                   (((C4856 + C4857) * C10403 + (C5536 + C5537) * C47872) *
                        C47770 * C47821 -
                    ((C7074 + C7075) * C47872 + (C5537 + C5536) * C10403) *
                        C47770 * C47668) *
                       C47626) *
                      C47549 +
                  ((((C4621 * C121 + C4634 + C4634 + C4617 * C135 +
                      C4623 * C122 + C4635 + C4635 + C47839 * C136) *
                         C10403 +
                     (C10758 + C10759) * C47872) *
                        C47770 * C47821 -
                    ((C10760 + C10761) * C47872 + (C10759 + C10758) * C10403) *
                        C47770 * C47668) *
                       C2374 +
                   (((C5539 + C5538) * C10403 +
                     (C4621 * C1184 + C5032 + C5032 + C4617 * C1202 +
                      C4623 * C2052 + C5033 + C5033 + C47839 * C2054) *
                         C47872) *
                        C47770 * C47668 -
                    ((C5538 + C5539) * C47872 + (C4861 + C4860) * C10403) *
                        C47770 * C47821) *
                       C47626) *
                      C2745)) /
                (p * q * std::sqrt(p + q));
    d2ee[54] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C4621 * C119 + C4626 + C4626 + C4617 * C133 +
                     C4623 * C120 + C4627 + C4627 + C47839 * C134) *
                        C10403 +
                    (C10750 + C10751) * C47872) *
                       C47770 * C47581 * C2374 -
                   ((C5534 + C5535) * C47872 + (C4853 + C4852) * C10403) *
                       C47770 * C47581 * C47626) *
                      C47897 +
                  (((C4856 + C4857) * C10403 + (C5536 + C5537) * C47872) *
                       C47770 * C47581 * C47626 -
                   ((C10755 + C10754) * C47872 +
                    (C4623 * C121 + C4632 + C4632 + C47839 * C135 +
                     C4621 * C120 + C4633 + C4633 + C4617 * C134) *
                        C10403) *
                       C47770 * C47581 * C2374) *
                      C47890 +
                  (((C4621 * C121 + C4634 + C4634 + C4617 * C135 +
                     C4623 * C122 + C4635 + C4635 + C47839 * C136) *
                        C10403 +
                    (C10758 + C10759) * C47872) *
                       C47770 * C47581 * C2374 -
                   ((C5538 + C5539) * C47872 + (C4861 + C4860) * C10403) *
                       C47770 * C47581 * C47626) *
                      C47877 +
                  (((C5174 + C5175) * C10403 +
                    (C4621 * C845 + C5308 + C5308 + C4617 * C855 +
                     C4623 * C846 + C5309 + C5309 + C47839 * C856) *
                        C47872) *
                       C47770 * C47581 * C47626 -
                   ((C11033 + C11032) * C47872 +
                    (C4623 * C123 + C4640 + C4640 + C47839 * C137 +
                     C4621 * C122 + C4641 + C4641 + C4617 * C136) *
                        C10403) *
                       C47770 * C47581 * C2374) *
                      C47856)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C4621 * C119 + C4626 + C4626 + C4617 * C133 +
                     C4623 * C120 + C4627 + C4627 + C47839 * C134) *
                        C10403 +
                    (C10750 + C10751) * C47872) *
                       C47770 * C47581 * C47898 -
                   ((C5534 + C5535) * C47872 + (C4853 + C4852) * C10403) *
                       C47770 * C47581 * C47894 +
                   ((C4855 + C4854) * C10403 + (C5982 + C5983) * C47872) *
                       C47770 * C47581 * C47884 -
                   ((C6480 + C6481) * C47872 + (C5795 + C5794) * C10403) *
                       C47770 * C47581 * C47862) *
                      C2482 +
                  (((C4856 + C4857) * C10403 + (C5536 + C5537) * C47872) *
                       C47770 * C47581 * C47894 -
                   ((C10755 + C10754) * C47872 +
                    (C4623 * C121 + C4632 + C4632 + C47839 * C135 +
                     C4621 * C120 + C4633 + C4633 + C4617 * C134) *
                        C10403) *
                       C47770 * C47581 * C47898 -
                   ((C6332 + C6333) * C47872 + (C4859 + C4858) * C10403) *
                       C47770 * C47581 * C47884 +
                   ((C6127 + C6126) * C10403 +
                    (C4621 * C1581 + C6326 + C6326 + C4617 * C1587 +
                     C4623 * C1582 + C6327 + C6327 + C47839 * C1588) *
                        C47872) *
                       C47770 * C47581 * C47862) *
                      C47546)) /
                    (p * q * std::sqrt(p + q));
    d2ee[55] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C4621 * C119 + C4626 + C4626 + C4617 * C133 +
                      C4623 * C120 + C4627 + C4627 + C47839 * C134) *
                         C10403 +
                     (C10750 + C10751) * C47872) *
                        C47770 * C3136 -
                    ((C10752 + C10753) * C47872 + (C10751 + C10750) * C10403) *
                        C47770 * C47668) *
                       C47622 +
                   (((C5535 + C5534) * C10403 + (C5980 + C5981) * C47872) *
                        C47770 * C47668 -
                    ((C5534 + C5535) * C47872 + (C4853 + C4852) * C10403) *
                        C47770 * C3136) *
                       C47629 +
                   (((C4855 + C4854) * C10403 + (C5982 + C5983) * C47872) *
                        C47770 * C3136 -
                    ((C5984 + C5985) * C47872 + (C5983 + C5982) * C10403) *
                        C47770 * C47668) *
                       C2742) *
                      C47806 +
                  ((((C10754 + C10755) * C10403 + (C10756 + C10757) * C47872) *
                        C47770 * C47668 -
                    ((C10755 + C10754) * C47872 +
                     (C4623 * C121 + C4632 + C4632 + C47839 * C135 +
                      C4621 * C120 + C4633 + C4633 + C4617 * C134) *
                         C10403) *
                        C47770 * C3136) *
                       C47622 +
                   (((C4856 + C4857) * C10403 + (C5536 + C5537) * C47872) *
                        C47770 * C3136 -
                    ((C7074 + C7075) * C47872 + (C5537 + C5536) * C10403) *
                        C47770 * C47668) *
                       C47629 +
                   (((C6333 + C6332) * C10403 +
                     (C4621 * C1191 + C7068 + C7068 + C4617 * C1209 +
                      C4623 * C1192 + C7069 + C7069 + C47839 * C1210) *
                         C47872) *
                        C47770 * C47668 -
                    ((C6332 + C6333) * C47872 + (C4859 + C4858) * C10403) *
                        C47770 * C3136) *
                       C2742) *
                      C47546)) /
                (p * q * std::sqrt(p + q));
    d2ee[56] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C4621 * C119 + C4626 + C4626 + C4617 * C133 +
                     C4623 * C120 + C4627 + C4627 + C47839 * C134) *
                        C10403 +
                    (C10750 + C10751) * C47872) *
                       C47770 * C47664 -
                   ((C10752 + C10753) * C47872 + (C10751 + C10750) * C10403) *
                       C47770 * C47671 +
                   ((C10753 + C10752) * C10403 + (C12454 + C12455) * C47872) *
                       C47770 * C3644) *
                      C47622 +
                  (((C5535 + C5534) * C10403 + (C5980 + C5981) * C47872) *
                       C47770 * C47671 -
                   ((C5534 + C5535) * C47872 + (C4853 + C4852) * C10403) *
                       C47770 * C47664 -
                   ((C7356 + C7357) * C47872 + (C5981 + C5980) * C10403) *
                       C47770 * C3644) *
                      C47629 +
                  (((C4855 + C4854) * C10403 + (C5982 + C5983) * C47872) *
                       C47770 * C47664 -
                   ((C5984 + C5985) * C47872 + (C5983 + C5982) * C10403) *
                       C47770 * C47671 +
                   ((C5985 + C5984) * C10403 +
                    (C4621 * C7339 + C7350 + C7350 + C4617 * C7343 +
                     C4623 * C7340 + C7351 + C7351 + C47839 * C7344) *
                        C47872) *
                       C47770 * C3644) *
                      C2742) *
                 C47535) /
                (p * q * std::sqrt(p + q));
    d2ee[57] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C4621 * C119 + C4626 + C4626 + C4617 * C133 +
                     C4623 * C120 + C4627 + C4627 + C47839 * C134) *
                        C10403 +
                    (C10750 + C10751) * C47872) *
                       C47770 * C3136 -
                   ((C10752 + C10753) * C47872 + (C10751 + C10750) * C10403) *
                       C47770 * C47668) *
                      C47898 +
                  (((C5535 + C5534) * C10403 + (C5980 + C5981) * C47872) *
                       C47770 * C47668 -
                   ((C5534 + C5535) * C47872 + (C4853 + C4852) * C10403) *
                       C47770 * C3136) *
                      C47894 +
                  (((C4855 + C4854) * C10403 + (C5982 + C5983) * C47872) *
                       C47770 * C3136 -
                   ((C5984 + C5985) * C47872 + (C5983 + C5982) * C10403) *
                       C47770 * C47668) *
                      C47884 +
                  (((C6481 + C6480) * C10403 +
                    (C4621 * C5943 + C5966 + C5966 + C4617 * C5947 +
                     C4623 * C5944 + C5967 + C5967 + C47839 * C5948) *
                        C47872) *
                       C47770 * C47668 -
                   ((C6480 + C6481) * C47872 + (C5795 + C5794) * C10403) *
                       C47770 * C3136) *
                      C47862) *
                 C47535) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C4621 * C119 + C4626 + C4626 + C4617 * C133 +
                      C4623 * C120 + C4627 + C4627 + C47839 * C134) *
                         C10403 +
                     (C10750 + C10751) * C47872) *
                        C47770 * C3136 -
                    ((C10752 + C10753) * C47872 + (C10751 + C10750) * C10403) *
                        C47770 * C47668) *
                       C2374 +
                   (((C5535 + C5534) * C10403 + (C5980 + C5981) * C47872) *
                        C47770 * C47668 -
                    ((C5534 + C5535) * C47872 + (C4853 + C4852) * C10403) *
                        C47770 * C3136) *
                       C47626) *
                      C47888 +
                  ((((C10754 + C10755) * C10403 + (C10756 + C10757) * C47872) *
                        C47770 * C47668 -
                    ((C10755 + C10754) * C47872 +
                     (C4623 * C121 + C4632 + C4632 + C47839 * C135 +
                      C4621 * C120 + C4633 + C4633 + C4617 * C134) *
                         C10403) *
                        C47770 * C3136) *
                       C2374 +
                   (((C4856 + C4857) * C10403 + (C5536 + C5537) * C47872) *
                        C47770 * C3136 -
                    ((C7074 + C7075) * C47872 + (C5537 + C5536) * C10403) *
                        C47770 * C47668) *
                       C47626) *
                      C47875 +
                  ((((C4621 * C121 + C4634 + C4634 + C4617 * C135 +
                      C4623 * C122 + C4635 + C4635 + C47839 * C136) *
                         C10403 +
                     (C10758 + C10759) * C47872) *
                        C47770 * C3136 -
                    ((C10760 + C10761) * C47872 + (C10759 + C10758) * C10403) *
                        C47770 * C47668) *
                       C2374 +
                   (((C5539 + C5538) * C10403 +
                     (C4621 * C1184 + C5032 + C5032 + C4617 * C1202 +
                      C4623 * C2052 + C5033 + C5033 + C47839 * C2054) *
                         C47872) *
                        C47770 * C47668 -
                    ((C5538 + C5539) * C47872 + (C4861 + C4860) * C10403) *
                        C47770 * C3136) *
                       C47626) *
                      C47846)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 ((((C4621 * C119 + C4626 + C4626 + C4617 * C133 +
                     C4623 * C120 + C4627 + C4627 + C47839 * C134) *
                        C10403 +
                    (C10750 + C10751) * C47872) *
                       C47770 * C47899 -
                   ((C10752 + C10753) * C47872 + (C10751 + C10750) * C10403) *
                       C47770 * C47896 +
                   ((C10753 + C10752) * C10403 + (C12454 + C12455) * C47872) *
                       C47770 * C47887 -
                   ((C12456 + C12457) * C47872 + (C12455 + C12454) * C10403) *
                       C47770 * C47868) *
                      C2374 +
                  (((C5535 + C5534) * C10403 + (C5980 + C5981) * C47872) *
                       C47770 * C47896 -
                   ((C5534 + C5535) * C47872 + (C4853 + C4852) * C10403) *
                       C47770 * C47899 -
                   ((C7356 + C7357) * C47872 + (C5981 + C5980) * C10403) *
                       C47770 * C47887 +
                   ((C7357 + C7356) * C10403 +
                    (C4621 * C6855 + C6868 + C6868 + C4617 * C6859 +
                     C4623 * C6856 + C6869 + C6869 + C47839 * C6860) *
                        C47872) *
                       C47770 * C47868) *
                      C47626) *
                 C47535) /
                    (p * q * std::sqrt(p + q));
    d2ee[58] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C4621 * C119 + C4626 + C4626 + C4617 * C133 +
                      C4623 * C120 + C4627 + C4627 + C47839 * C134) *
                         C10403 +
                     (C10750 + C10751) * C47872) *
                        C47770 * C47664 -
                    ((C10752 + C10753) * C47872 + (C10751 + C10750) * C10403) *
                        C47770 * C47671 +
                    ((C10753 + C10752) * C10403 + (C12454 + C12455) * C47872) *
                        C47770 * C3644) *
                       C2374 +
                   (((C5535 + C5534) * C10403 + (C5980 + C5981) * C47872) *
                        C47770 * C47671 -
                    ((C5534 + C5535) * C47872 + (C4853 + C4852) * C10403) *
                        C47770 * C47664 -
                    ((C7356 + C7357) * C47872 + (C5981 + C5980) * C10403) *
                        C47770 * C3644) *
                       C47626) *
                      C47806 +
                  ((((C10754 + C10755) * C10403 + (C10756 + C10757) * C47872) *
                        C47770 * C47671 -
                    ((C10755 + C10754) * C47872 +
                     (C4623 * C121 + C4632 + C4632 + C47839 * C135 +
                      C4621 * C120 + C4633 + C4633 + C4617 * C134) *
                         C10403) *
                        C47770 * C47664 -
                    ((C12792 + C12793) * C47872 + (C10757 + C10756) * C10403) *
                        C47770 * C3644) *
                       C2374 +
                   (((C4856 + C4857) * C10403 + (C5536 + C5537) * C47872) *
                        C47770 * C47664 -
                    ((C7074 + C7075) * C47872 + (C5537 + C5536) * C10403) *
                        C47770 * C47671 +
                    ((C7075 + C7074) * C10403 +
                     (C4621 * C2265 + C7208 + C7208 + C4617 * C2271 +
                      C4623 * C2266 + C7209 + C7209 + C47839 * C2272) *
                         C47872) *
                        C47770 * C3644) *
                       C47626) *
                      C47546)) /
                (p * q * std::sqrt(p + q));
    d2ee[59] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C4621 * C119 + C4626 + C4626 + C4617 * C133 +
                      C4623 * C120 + C4627 + C4627 + C47839 * C134) *
                         C10403 +
                     (C10750 + C10751) * C47872) *
                        C47770 * C3136 -
                    ((C10752 + C10753) * C47872 + (C10751 + C10750) * C10403) *
                        C47770 * C47668) *
                       C2374 +
                   (((C5535 + C5534) * C10403 + (C5980 + C5981) * C47872) *
                        C47770 * C47668 -
                    ((C5534 + C5535) * C47872 + (C4853 + C4852) * C10403) *
                        C47770 * C3136) *
                       C47626) *
                      C47888 +
                  ((((C10754 + C10755) * C10403 + (C10756 + C10757) * C47872) *
                        C47770 * C47668 -
                    ((C10755 + C10754) * C47872 +
                     (C4623 * C121 + C4632 + C4632 + C47839 * C135 +
                      C4621 * C120 + C4633 + C4633 + C4617 * C134) *
                         C10403) *
                        C47770 * C3136) *
                       C2374 +
                   (((C4856 + C4857) * C10403 + (C5536 + C5537) * C47872) *
                        C47770 * C3136 -
                    ((C7074 + C7075) * C47872 + (C5537 + C5536) * C10403) *
                        C47770 * C47668) *
                       C47626) *
                      C47875 +
                  ((((C4621 * C121 + C4634 + C4634 + C4617 * C135 +
                      C4623 * C122 + C4635 + C4635 + C47839 * C136) *
                         C10403 +
                     (C10758 + C10759) * C47872) *
                        C47770 * C3136 -
                    ((C10760 + C10761) * C47872 + (C10759 + C10758) * C10403) *
                        C47770 * C47668) *
                       C2374 +
                   (((C5539 + C5538) * C10403 +
                     (C4621 * C1184 + C5032 + C5032 + C4617 * C1202 +
                      C4623 * C2052 + C5033 + C5033 + C47839 * C2054) *
                         C47872) *
                        C47770 * C47668 -
                    ((C5538 + C5539) * C47872 + (C4861 + C4860) * C10403) *
                        C47770 * C3136) *
                       C47626) *
                      C47846)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C4621 * C119 + C4626 + C4626 + C4617 * C133 +
                     C4623 * C120 + C4627 + C4627 + C47839 * C134) *
                        C10403 +
                    (C10750 + C10751) * C47872) *
                       C47770 * C3136 -
                   ((C10752 + C10753) * C47872 + (C10751 + C10750) * C10403) *
                       C47770 * C47668) *
                      C47898 +
                  (((C5535 + C5534) * C10403 + (C5980 + C5981) * C47872) *
                       C47770 * C47668 -
                   ((C5534 + C5535) * C47872 + (C4853 + C4852) * C10403) *
                       C47770 * C3136) *
                      C47894 +
                  (((C4855 + C4854) * C10403 + (C5982 + C5983) * C47872) *
                       C47770 * C3136 -
                   ((C5984 + C5985) * C47872 + (C5983 + C5982) * C10403) *
                       C47770 * C47668) *
                      C47884 +
                  (((C6481 + C6480) * C10403 +
                    (C4621 * C5943 + C5966 + C5966 + C4617 * C5947 +
                     C4623 * C5944 + C5967 + C5967 + C47839 * C5948) *
                        C47872) *
                       C47770 * C47668 -
                   ((C6480 + C6481) * C47872 + (C5795 + C5794) * C10403) *
                       C47770 * C3136) *
                      C47862) *
                 C47535) /
                    (p * q * std::sqrt(p + q));
    d2ee[60] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C4621 * C119 + C4626 + C4626 + C4617 * C133 +
                     C4623 * C120 + C4627 + C4627 + C47839 * C134) *
                        C10403 +
                    (C10750 + C10751) * C47872) *
                       C47770 * C47581 * C1318 -
                   ((C5534 + C5535) * C47872 + (C4853 + C4852) * C10403) *
                       C47770 * C47581 * C1319 +
                   ((C4855 + C4854) * C10403 + (C5982 + C5983) * C47872) *
                       C47770 * C47581 * C1320 -
                   ((C6480 + C6481) * C47872 + (C5795 + C5794) * C10403) *
                       C47770 * C47581 * C47862) *
                      C47806 +
                  (((C4856 + C4857) * C10403 + (C5536 + C5537) * C47872) *
                       C47770 * C47581 * C1319 -
                   ((C10755 + C10754) * C47872 +
                    (C4623 * C121 + C4632 + C4632 + C47839 * C135 +
                     C4621 * C120 + C4633 + C4633 + C4617 * C134) *
                        C10403) *
                       C47770 * C47581 * C1318 -
                   ((C6332 + C6333) * C47872 + (C4859 + C4858) * C10403) *
                       C47770 * C47581 * C1320 +
                   ((C6127 + C6126) * C10403 +
                    (C4621 * C1581 + C6326 + C6326 + C4617 * C1587 +
                     C4623 * C1582 + C6327 + C6327 + C47839 * C1588) *
                        C47872) *
                       C47770 * C47581 * C47862) *
                      C47546)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C4621 * C119 + C4626 + C4626 + C4617 * C133 +
                     C4623 * C120 + C4627 + C4627 + C47839 * C134) *
                        C10403 +
                    (C10750 + C10751) * C47872) *
                       C47770 * C47581 * C47820 -
                   ((C5534 + C5535) * C47872 + (C4853 + C4852) * C10403) *
                       C47770 * C47581 * C47626) *
                      C580 +
                  (((C4856 + C4857) * C10403 + (C5536 + C5537) * C47872) *
                       C47770 * C47581 * C47626 -
                   ((C10755 + C10754) * C47872 +
                    (C4623 * C121 + C4632 + C4632 + C47839 * C135 +
                     C4621 * C120 + C4633 + C4633 + C4617 * C134) *
                        C10403) *
                       C47770 * C47581 * C47820) *
                      C581 +
                  (((C4621 * C121 + C4634 + C4634 + C4617 * C135 +
                     C4623 * C122 + C4635 + C4635 + C47839 * C136) *
                        C10403 +
                    (C10758 + C10759) * C47872) *
                       C47770 * C47581 * C47820 -
                   ((C5538 + C5539) * C47872 + (C4861 + C4860) * C10403) *
                       C47770 * C47581 * C47626) *
                      C582 +
                  (((C5174 + C5175) * C10403 +
                    (C4621 * C845 + C5308 + C5308 + C4617 * C855 +
                     C4623 * C846 + C5309 + C5309 + C47839 * C856) *
                        C47872) *
                       C47770 * C47581 * C47626 -
                   ((C4623 * C440 + C5307 + C5307 + C47839 * C460 +
                     C4621 * C438 + C5306 + C5306 + C4617 * C458) *
                        C47872 +
                    (C4623 * C123 + C4640 + C4640 + C47839 * C137 +
                     C4621 * C122 + C4641 + C4641 + C4617 * C136) *
                        C10403) *
                       C47770 * C47581 * C47820) *
                      C47856)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 (((((C4621 * C119 + C4626 + C4626 + C4617 * C133 +
                      C4623 * C120 + C4627 + C4627 + C47839 * C134) *
                         C10403 +
                     (C10750 + C10751) * C47872) *
                        C47770 * C1702 -
                    ((C10752 + C10753) * C47872 + (C10751 + C10750) * C10403) *
                        C47770 * C1703 +
                    ((C10753 + C10752) * C10403 + (C12454 + C12455) * C47872) *
                        C47770 * C47855) *
                       C47820 +
                   (((C5535 + C5534) * C10403 + (C5980 + C5981) * C47872) *
                        C47770 * C1703 -
                    ((C5534 + C5535) * C47872 + (C4853 + C4852) * C10403) *
                        C47770 * C1702 -
                    ((C7356 + C7357) * C47872 + (C5981 + C5980) * C10403) *
                        C47770 * C47855) *
                       C47626) *
                      C47806 +
                  ((((C10754 + C10755) * C10403 + (C10756 + C10757) * C47872) *
                        C47770 * C1703 -
                    ((C10755 + C10754) * C47872 +
                     (C4623 * C121 + C4632 + C4632 + C47839 * C135 +
                      C4621 * C120 + C4633 + C4633 + C4617 * C134) *
                         C10403) *
                        C47770 * C1702 -
                    ((C4623 * C1882 + C7207 + C7207 + C47839 * C1894 +
                      C4621 * C1883 + C7206 + C7206 + C4617 * C1895) *
                         C47872 +
                     (C10757 + C10756) * C10403) *
                        C47770 * C47855) *
                       C47820 +
                   (((C4856 + C4857) * C10403 + (C5536 + C5537) * C47872) *
                        C47770 * C1702 -
                    ((C7074 + C7075) * C47872 + (C5537 + C5536) * C10403) *
                        C47770 * C1703 +
                    ((C7075 + C7074) * C10403 +
                     (C4621 * C2265 + C7208 + C7208 + C4617 * C2271 +
                      C4623 * C2266 + C7209 + C7209 + C47839 * C2272) *
                         C47872) *
                        C47770 * C47855) *
                       C47626) *
                      C47546)) /
                    (p * q * std::sqrt(p + q));
    d2ee[61] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C4621 * C119 + C4626 + C4626 + C4617 * C133 +
                     C4623 * C120 + C4627 + C4627 + C47839 * C134) *
                        C10403 +
                    (C10750 + C10751) * C47872) *
                       C47770 * C47821 -
                   ((C10752 + C10753) * C47872 + (C10751 + C10750) * C10403) *
                       C47770 * C47668) *
                      C1318 +
                  (((C5535 + C5534) * C10403 + (C5980 + C5981) * C47872) *
                       C47770 * C47668 -
                   ((C5534 + C5535) * C47872 + (C4853 + C4852) * C10403) *
                       C47770 * C47821) *
                      C1319 +
                  (((C4855 + C4854) * C10403 + (C5982 + C5983) * C47872) *
                       C47770 * C47821 -
                   ((C5984 + C5985) * C47872 + (C5983 + C5982) * C10403) *
                       C47770 * C47668) *
                      C1320 +
                  (((C6481 + C6480) * C10403 +
                    (C4621 * C5943 + C5966 + C5966 + C4617 * C5947 +
                     C4623 * C5944 + C5967 + C5967 + C47839 * C5948) *
                        C47872) *
                       C47770 * C47668 -
                   ((C6480 + C6481) * C47872 + (C5795 + C5794) * C10403) *
                       C47770 * C47821) *
                      C47862) *
                 C47535) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C4621 * C119 + C4626 + C4626 + C4617 * C133 +
                      C4623 * C120 + C4627 + C4627 + C47839 * C134) *
                         C10403 +
                     (C10750 + C10751) * C47872) *
                        C47770 * C47821 -
                    ((C10752 + C10753) * C47872 + (C10751 + C10750) * C10403) *
                        C47770 * C47668) *
                       C47820 +
                   (((C5535 + C5534) * C10403 + (C5980 + C5981) * C47872) *
                        C47770 * C47668 -
                    ((C5534 + C5535) * C47872 + (C4853 + C4852) * C10403) *
                        C47770 * C47821) *
                       C47626) *
                      C268 +
                  ((((C10754 + C10755) * C10403 + (C10756 + C10757) * C47872) *
                        C47770 * C47668 -
                    ((C10755 + C10754) * C47872 +
                     (C4623 * C121 + C4632 + C4632 + C47839 * C135 +
                      C4621 * C120 + C4633 + C4633 + C4617 * C134) *
                         C10403) *
                        C47770 * C47821) *
                       C47820 +
                   (((C4856 + C4857) * C10403 + (C5536 + C5537) * C47872) *
                        C47770 * C47821 -
                    ((C7074 + C7075) * C47872 + (C5537 + C5536) * C10403) *
                        C47770 * C47668) *
                       C47626) *
                      C269 +
                  ((((C4621 * C121 + C4634 + C4634 + C4617 * C135 +
                      C4623 * C122 + C4635 + C4635 + C47839 * C136) *
                         C10403 +
                     (C10758 + C10759) * C47872) *
                        C47770 * C47821 -
                    ((C10760 + C10761) * C47872 + (C10759 + C10758) * C10403) *
                        C47770 * C47668) *
                       C47820 +
                   (((C5539 + C5538) * C10403 +
                     (C4621 * C1184 + C5032 + C5032 + C4617 * C1202 +
                      C4623 * C2052 + C5033 + C5033 + C47839 * C2054) *
                         C47872) *
                        C47770 * C47668 -
                    ((C5538 + C5539) * C47872 + (C4861 + C4860) * C10403) *
                        C47770 * C47821) *
                       C47626) *
                      C47846)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 ((((C4621 * C119 + C4626 + C4626 + C4617 * C133 +
                     C4623 * C120 + C4627 + C4627 + C47839 * C134) *
                        C10403 +
                    (C10750 + C10751) * C47872) *
                       C47770 * C2156 -
                   ((C10752 + C10753) * C47872 + (C10751 + C10750) * C10403) *
                       C47770 * C2157 +
                   ((C10753 + C10752) * C10403 + (C12454 + C12455) * C47872) *
                       C47770 * C2158 -
                   ((C12456 + C12457) * C47872 + (C12455 + C12454) * C10403) *
                       C47770 * C47868) *
                      C47820 +
                  (((C5535 + C5534) * C10403 + (C5980 + C5981) * C47872) *
                       C47770 * C2157 -
                   ((C5534 + C5535) * C47872 + (C4853 + C4852) * C10403) *
                       C47770 * C2156 -
                   ((C7356 + C7357) * C47872 + (C5981 + C5980) * C10403) *
                       C47770 * C2158 +
                   ((C7357 + C7356) * C10403 +
                    (C4621 * C6855 + C6868 + C6868 + C4617 * C6859 +
                     C4623 * C6856 + C6869 + C6869 + C47839 * C6860) *
                        C47872) *
                       C47770 * C47868) *
                      C47626) *
                 C47535) /
                    (p * q * std::sqrt(p + q));
    d2ee[62] += (0.5 * std::pow(Pi, 2.5) *
                     (((C4621 * C119 + C4626 + C4626 + C4617 * C133 +
                        C4623 * C120 + C4627 + C4627 + C47839 * C134) *
                           C10403 +
                       (C4621 * C434 + C5013 + C5013 + C4617 * C454 +
                        C4623 * C433 + C5012 + C5012 + C47839 * C453) *
                           C47872) *
                          C47770 * C47581 * C47563 * C108 -
                      ((C4623 * C432 + C5019 + C5019 + C47839 * C452 +
                        C4621 * C433 + C5018 + C5018 + C4617 * C453) *
                           C47872 +
                       (C4623 * C121 + C4632 + C4632 + C47839 * C135 +
                        C4621 * C120 + C4633 + C4633 + C4617 * C134) *
                           C10403) *
                          C47770 * C47581 * C47563 * C109 +
                      ((C4621 * C121 + C4634 + C4634 + C4617 * C135 +
                        C4623 * C122 + C4635 + C4635 + C47839 * C136) *
                           C10403 +
                       (C4621 * C432 + C5029 + C5029 + C4617 * C452 +
                        C4623 * C438 + C5028 + C5028 + C47839 * C458) *
                           C47872) *
                          C47770 * C47581 * C47563 * C110 -
                      ((C4623 * C440 + C5307 + C5307 + C47839 * C460 +
                        C4621 * C438 + C5306 + C5306 + C4617 * C458) *
                           C47872 +
                       (C4623 * C123 + C4640 + C4640 + C47839 * C137 +
                        C4621 * C122 + C4641 + C4641 + C4617 * C136) *
                           C10403) *
                          C47770 * C47581 * C47563 * C111 +
                      ((C4621 * C123 + C4642 + C4642 + C4617 * C137 +
                        C4623 * C124 + C4643 + C4643 + C47839 * C138) *
                           C10403 +
                       (C4621 * C440 + C10406 + C10406 + C4617 * C460 +
                        C4623 * C690 + C10407 + C10407 + C47839 * C692) *
                           C47872) *
                          C47770 * C47581 * C47563 * C112) +
                 0.5 * std::pow(Pi, 2.5) *
                     ((((C4621 * C119 + C4626 + C4626 + C4617 * C133 +
                         C4623 * C120 + C4627 + C4627 + C47839 * C134) *
                            C10403 +
                        (C4621 * C434 + C5013 + C5013 + C4617 * C454 +
                         C4623 * C433 + C5012 + C5012 + C47839 * C453) *
                            C47872) *
                           C47770 * C47581 * C47891 -
                       ((C5534 + C5535) * C47872 + (C4853 + C4852) * C10403) *
                           C47770 * C47581 * C47879 +
                       ((C4855 + C4854) * C10403 + (C5982 + C5983) * C47872) *
                           C47770 * C47581 * C47852) *
                          C268 +
                      (((C4856 + C4857) * C10403 + (C5536 + C5537) * C47872) *
                           C47770 * C47581 * C47879 -
                       ((C4623 * C432 + C5019 + C5019 + C47839 * C452 +
                         C4621 * C433 + C5018 + C5018 + C4617 * C453) *
                            C47872 +
                        (C4623 * C121 + C4632 + C4632 + C47839 * C135 +
                         C4621 * C120 + C4633 + C4633 + C4617 * C134) *
                            C10403) *
                           C47770 * C47581 * C47891 -
                       ((C6332 + C6333) * C47872 + (C4859 + C4858) * C10403) *
                           C47770 * C47581 * C47852) *
                          C269 +
                      (((C4621 * C121 + C4634 + C4634 + C4617 * C135 +
                         C4623 * C122 + C4635 + C4635 + C47839 * C136) *
                            C10403 +
                        (C4621 * C432 + C5029 + C5029 + C4617 * C452 +
                         C4623 * C438 + C5028 + C5028 + C47839 * C458) *
                            C47872) *
                           C47770 * C47581 * C47891 -
                       ((C5538 + C5539) * C47872 + (C4861 + C4860) * C10403) *
                           C47770 * C47581 * C47879 +
                       ((C4863 + C4862) * C10403 +
                        (C4621 * C1187 + C5520 + C5520 + C4617 * C1205 +
                         C4623 * C1476 + C5521 + C5521 + C47839 * C1478) *
                            C47872) *
                           C47770 * C47581 * C47852) *
                          C47846)) /
                    (p * q * std::sqrt(p + q)) -
                (std::pow(Pi, 2.5) *
                 ((((C4621 * C119 + C4626 + C4626 + C4617 * C133 +
                     C4623 * C120 + C4627 + C4627 + C47839 * C134) *
                        C10403 +
                    (C10750 + C10751) * C47872) *
                       C47770 * C47892 -
                   ((C10752 + C10753) * C47872 + (C10751 + C10750) * C10403) *
                       C47770 * C47881 +
                   ((C10753 + C10752) * C10403 +
                    (C4621 * C1884 + C6865 + C6865 + C4617 * C1896 +
                     C4623 * C1883 + C6864 + C6864 + C47839 * C1895) *
                        C47872) *
                       C47770 * C47855) *
                      C47563 * C268 +
                  (((C10754 + C10755) * C10403 + (C10756 + C10757) * C47872) *
                       C47770 * C47881 -
                   ((C10755 + C10754) * C47872 +
                    (C4623 * C121 + C4632 + C4632 + C47839 * C135 +
                     C4621 * C120 + C4633 + C4633 + C4617 * C134) *
                        C10403) *
                       C47770 * C47892 -
                   ((C4623 * C1882 + C7207 + C7207 + C47839 * C1894 +
                     C4621 * C1883 + C7206 + C7206 + C4617 * C1895) *
                        C47872 +
                    (C10757 + C10756) * C10403) *
                       C47770 * C47855) *
                      C47563 * C269 +
                  (((C4621 * C121 + C4634 + C4634 + C4617 * C135 +
                     C4623 * C122 + C4635 + C4635 + C47839 * C136) *
                        C10403 +
                    (C10758 + C10759) * C47872) *
                       C47770 * C47892 -
                   ((C10760 + C10761) * C47872 + (C10759 + C10758) * C10403) *
                       C47770 * C47881 +
                   ((C10761 + C10760) * C10403 +
                    (C4621 * C1882 + C10724 + C10724 + C4617 * C1894 +
                     C4623 * C2160 + C10725 + C10725 + C47839 * C2162) *
                        C47872) *
                       C47770 * C47855) *
                      C47563 * C47846)) /
                    (p * q * std::sqrt(p + q)) +
                (0.5 * std::pow(Pi, 2.5) *
                 ((((C4621 * C119 + C4626 + C4626 + C4617 * C133 +
                     C4623 * C120 + C4627 + C4627 + C47839 * C134) *
                        C10403 +
                    (C10750 + C10751) * C47872) *
                       C47770 * C47581 * C976 -
                   ((C5534 + C5535) * C47872 + (C4853 + C4852) * C10403) *
                       C47770 * C47581 * C977 +
                   ((C4855 + C4854) * C10403 + (C5982 + C5983) * C47872) *
                       C47770 * C47581 * C47852) *
                      C47888 +
                  (((C4856 + C4857) * C10403 + (C5536 + C5537) * C47872) *
                       C47770 * C47581 * C977 -
                   ((C10755 + C10754) * C47872 +
                    (C4623 * C121 + C4632 + C4632 + C47839 * C135 +
                     C4621 * C120 + C4633 + C4633 + C4617 * C134) *
                        C10403) *
                       C47770 * C47581 * C976 -
                   ((C6332 + C6333) * C47872 + (C4859 + C4858) * C10403) *
                       C47770 * C47581 * C47852) *
                      C47875 +
                  (((C4621 * C121 + C4634 + C4634 + C4617 * C135 +
                     C4623 * C122 + C4635 + C4635 + C47839 * C136) *
                        C10403 +
                    (C10758 + C10759) * C47872) *
                       C47770 * C47581 * C976 -
                   ((C5538 + C5539) * C47872 + (C4861 + C4860) * C10403) *
                       C47770 * C47581 * C977 +
                   ((C4863 + C4862) * C10403 +
                    (C4621 * C1187 + C5520 + C5520 + C4617 * C1205 +
                     C4623 * C1476 + C5521 + C5521 + C47839 * C1478) *
                        C47872) *
                       C47770 * C47581 * C47852) *
                      C47846)) /
                    (p * q * std::sqrt(p + q)) +
                (0.5 * std::pow(Pi, 2.5) *
                 (((C4621 * C119 + C4626 + C4626 + C4617 * C133 + C4623 * C120 +
                    C4627 + C4627 + C47839 * C134) *
                       C10403 +
                   (C10750 + C10751) * C47872) *
                      C47770 * C47581 * C1044 -
                  ((C5534 + C5535) * C47872 + (C4853 + C4852) * C10403) *
                      C47770 * C47581 * C1045 +
                  ((C4855 + C4854) * C10403 + (C5982 + C5983) * C47872) *
                      C47770 * C47581 * C1046 -
                  ((C6480 + C6481) * C47872 + (C5795 + C5794) * C10403) *
                      C47770 * C47581 * C1047 +
                  ((C5797 + C5796) * C10403 +
                   (C4621 * C6463 + C6474 + C6474 + C4617 * C6467 +
                    C4623 * C6464 + C6475 + C6475 + C47839 * C6468) *
                       C47872) *
                      C47770 * C47581 * C1048) *
                 C47535) /
                    (p * q * std::sqrt(p + q)) -
                (std::pow(Pi, 2.5) *
                 ((((C4621 * C119 + C4626 + C4626 + C4617 * C133 +
                     C4623 * C120 + C4627 + C4627 + C47839 * C134) *
                        C10403 +
                    (C10750 + C10751) * C47872) *
                       C47770 * C47892 -
                   ((C10752 + C10753) * C47872 + (C10751 + C10750) * C10403) *
                       C47770 * C47881 +
                   ((C10753 + C10752) * C10403 +
                    (C4621 * C1884 + C6865 + C6865 + C4617 * C1896 +
                     C4623 * C1883 + C6864 + C6864 + C47839 * C1895) *
                        C47872) *
                       C47770 * C47855) *
                      C976 +
                  (((C5535 + C5534) * C10403 + (C5980 + C5981) * C47872) *
                       C47770 * C47881 -
                   ((C5534 + C5535) * C47872 + (C4853 + C4852) * C10403) *
                       C47770 * C47892 -
                   ((C7356 + C7357) * C47872 + (C5981 + C5980) * C10403) *
                       C47770 * C47855) *
                      C977 +
                  (((C4855 + C4854) * C10403 + (C5982 + C5983) * C47872) *
                       C47770 * C47892 -
                   ((C5984 + C5985) * C47872 + (C5983 + C5982) * C10403) *
                       C47770 * C47881 +
                   ((C5985 + C5984) * C10403 +
                    (C4621 * C7339 + C7350 + C7350 + C4617 * C7343 +
                     C4623 * C7340 + C7351 + C7351 + C47839 * C7344) *
                        C47872) *
                       C47770 * C47855) *
                      C47852) *
                 C47535) /
                    (p * q * std::sqrt(p + q)) -
                (std::pow(Pi, 2.5) *
                 ((((C4621 * C119 + C4626 + C4626 + C4617 * C133 +
                     C4623 * C120 + C4627 + C4627 + C47839 * C134) *
                        C10403 +
                    (C10750 + C10751) * C47872) *
                       C47770 * C1702 -
                   ((C10752 + C10753) * C47872 + (C10751 + C10750) * C10403) *
                       C47770 * C1703 +
                   ((C10753 + C10752) * C10403 +
                    (C4621 * C1884 + C6865 + C6865 + C4617 * C1896 +
                     C4623 * C1883 + C6864 + C6864 + C47839 * C1895) *
                        C47872) *
                       C47770 * C47855) *
                      C47563 * C47888 +
                  (((C10754 + C10755) * C10403 + (C10756 + C10757) * C47872) *
                       C47770 * C1703 -
                   ((C10755 + C10754) * C47872 +
                    (C4623 * C121 + C4632 + C4632 + C47839 * C135 +
                     C4621 * C120 + C4633 + C4633 + C4617 * C134) *
                        C10403) *
                       C47770 * C1702 -
                   ((C4623 * C1882 + C7207 + C7207 + C47839 * C1894 +
                     C4621 * C1883 + C7206 + C7206 + C4617 * C1895) *
                        C47872 +
                    (C10757 + C10756) * C10403) *
                       C47770 * C47855) *
                      C47563 * C47875 +
                  (((C4621 * C121 + C4634 + C4634 + C4617 * C135 +
                     C4623 * C122 + C4635 + C4635 + C47839 * C136) *
                        C10403 +
                    (C10758 + C10759) * C47872) *
                       C47770 * C1702 -
                   ((C10760 + C10761) * C47872 + (C10759 + C10758) * C10403) *
                       C47770 * C1703 +
                   ((C10761 + C10760) * C10403 +
                    (C4621 * C1882 + C10724 + C10724 + C4617 * C1894 +
                     C4623 * C2160 + C10725 + C10725 + C47839 * C2162) *
                        C47872) *
                       C47770 * C47855) *
                      C47563 * C47846)) /
                    (p * q * std::sqrt(p + q)) -
                (std::pow(Pi, 2.5) *
                 ((((C4621 * C119 + C4626 + C4626 + C4617 * C133 +
                     C4623 * C120 + C4627 + C4627 + C47839 * C134) *
                        C10403 +
                    (C10750 + C10751) * C47872) *
                       C47770 * C1702 -
                   ((C10752 + C10753) * C47872 + (C10751 + C10750) * C10403) *
                       C47770 * C1703 +
                   ((C10753 + C10752) * C10403 +
                    (C4621 * C1884 + C6865 + C6865 + C4617 * C1896 +
                     C4623 * C1883 + C6864 + C6864 + C47839 * C1895) *
                        C47872) *
                       C47770 * C47855) *
                      C47891 +
                  (((C5535 + C5534) * C10403 + (C5980 + C5981) * C47872) *
                       C47770 * C1703 -
                   ((C5534 + C5535) * C47872 + (C4853 + C4852) * C10403) *
                       C47770 * C1702 -
                   ((C7356 + C7357) * C47872 + (C5981 + C5980) * C10403) *
                       C47770 * C47855) *
                      C47879 +
                  (((C4855 + C4854) * C10403 + (C5982 + C5983) * C47872) *
                       C47770 * C1702 -
                   ((C5984 + C5985) * C47872 + (C5983 + C5982) * C10403) *
                       C47770 * C1703 +
                   ((C5985 + C5984) * C10403 +
                    (C4621 * C7339 + C7350 + C7350 + C4617 * C7343 +
                     C4623 * C7340 + C7351 + C7351 + C47839 * C7344) *
                        C47872) *
                       C47770 * C47855) *
                      C47852) *
                 C47535) /
                    (p * q * std::sqrt(p + q)) +
                (2 * std::pow(Pi, 2.5) *
                 (((C4621 * C119 + C4626 + C4626 + C4617 * C133 + C4623 * C120 +
                    C4627 + C4627 + C47839 * C134) *
                       C10403 +
                   (C10750 + C10751) * C47872) *
                      C47770 * C1877 -
                  ((C10752 + C10753) * C47872 + (C10751 + C10750) * C10403) *
                      C47770 * C1878 +
                  ((C10753 + C10752) * C10403 + (C12454 + C12455) * C47872) *
                      C47770 * C1879 -
                  ((C12456 + C12457) * C47872 + (C12455 + C12454) * C10403) *
                      C47770 * C1880 +
                  ((C12457 + C12456) * C10403 +
                   (C4621 * C12429 + C12444 + C12444 + C4617 * C12433 +
                    C4623 * C12430 + C12445 + C12445 + C47839 * C12434) *
                       C47872) *
                      C47770 * C1881) *
                 C47563 * C47535) /
                    (p * q * std::sqrt(p + q));
    d2ee[63] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C4621 * C119 + C4626 + C4626 + C4617 * C133 +
                      C4623 * C120 + C4627 + C4627 + C47839 * C134) *
                         C10403 +
                     (C10750 + C10751) * C47872) *
                        C47770 * C47821 -
                    ((C10752 + C10753) * C47872 + (C10751 + C10750) * C10403) *
                        C47770 * C47668) *
                       C976 +
                   (((C5535 + C5534) * C10403 + (C5980 + C5981) * C47872) *
                        C47770 * C47668 -
                    ((C5534 + C5535) * C47872 + (C4853 + C4852) * C10403) *
                        C47770 * C47821) *
                       C977 +
                   (((C4855 + C4854) * C10403 + (C5982 + C5983) * C47872) *
                        C47770 * C47821 -
                    ((C5984 + C5985) * C47872 + (C5983 + C5982) * C10403) *
                        C47770 * C47668) *
                       C47852) *
                      C47806 +
                  ((((C10754 + C10755) * C10403 + (C10756 + C10757) * C47872) *
                        C47770 * C47668 -
                    ((C10755 + C10754) * C47872 +
                     (C4623 * C121 + C4632 + C4632 + C47839 * C135 +
                      C4621 * C120 + C4633 + C4633 + C4617 * C134) *
                         C10403) *
                        C47770 * C47821) *
                       C976 +
                   (((C4856 + C4857) * C10403 + (C5536 + C5537) * C47872) *
                        C47770 * C47821 -
                    ((C7074 + C7075) * C47872 + (C5537 + C5536) * C10403) *
                        C47770 * C47668) *
                       C977 +
                   (((C6333 + C6332) * C10403 +
                     (C4621 * C1191 + C7068 + C7068 + C4617 * C1209 +
                      C4623 * C1192 + C7069 + C7069 + C47839 * C1210) *
                         C47872) *
                        C47770 * C47668 -
                    ((C6332 + C6333) * C47872 + (C4859 + C4858) * C10403) *
                        C47770 * C47821) *
                       C47852) *
                      C47546)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C4621 * C119 + C4626 + C4626 + C4617 * C133 +
                     C4623 * C120 + C4627 + C4627 + C47839 * C134) *
                        C10403 +
                    (C10750 + C10751) * C47872) *
                       C47770 * C47821 -
                   ((C10752 + C10753) * C47872 + (C10751 + C10750) * C10403) *
                       C47770 * C47668) *
                      C47563 * C580 +
                  (((C10754 + C10755) * C10403 + (C10756 + C10757) * C47872) *
                       C47770 * C47668 -
                   ((C10755 + C10754) * C47872 +
                    (C4623 * C121 + C4632 + C4632 + C47839 * C135 +
                     C4621 * C120 + C4633 + C4633 + C4617 * C134) *
                        C10403) *
                       C47770 * C47821) *
                      C47563 * C581 +
                  (((C4621 * C121 + C4634 + C4634 + C4617 * C135 +
                     C4623 * C122 + C4635 + C4635 + C47839 * C136) *
                        C10403 +
                    (C10758 + C10759) * C47872) *
                       C47770 * C47821 -
                   ((C10760 + C10761) * C47872 + (C10759 + C10758) * C10403) *
                       C47770 * C47668) *
                      C47563 * C582 +
                  (((C11032 + C11033) * C10403 +
                    (C4621 * C439 + C11026 + C11026 + C4617 * C459 +
                     C4623 * C441 + C11027 + C11027 + C47839 * C461) *
                        C47872) *
                       C47770 * C47668 -
                   ((C11033 + C11032) * C47872 +
                    (C4623 * C123 + C4640 + C4640 + C47839 * C137 +
                     C4621 * C122 + C4641 + C4641 + C4617 * C136) *
                        C10403) *
                       C47770 * C47821) *
                      C47563 * C47856)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 ((((C4621 * C119 + C4626 + C4626 + C4617 * C133 +
                     C4623 * C120 + C4627 + C4627 + C47839 * C134) *
                        C10403 +
                    (C10750 + C10751) * C47872) *
                       C47770 * C2156 -
                   ((C10752 + C10753) * C47872 + (C10751 + C10750) * C10403) *
                       C47770 * C2157 +
                   ((C10753 + C10752) * C10403 + (C12454 + C12455) * C47872) *
                       C47770 * C2158 -
                   ((C12456 + C12457) * C47872 + (C12455 + C12454) * C10403) *
                       C47770 * C47868) *
                      C47563 * C47806 +
                  (((C10754 + C10755) * C10403 + (C10756 + C10757) * C47872) *
                       C47770 * C2157 -
                   ((C10755 + C10754) * C47872 +
                    (C4623 * C121 + C4632 + C4632 + C47839 * C135 +
                     C4621 * C120 + C4633 + C4633 + C4617 * C134) *
                        C10403) *
                       C47770 * C2156 -
                   ((C12792 + C12793) * C47872 + (C10757 + C10756) * C10403) *
                       C47770 * C2158 +
                   ((C12793 + C12792) * C10403 +
                    (C4621 * C1886 + C12786 + C12786 + C4617 * C1898 +
                     C4623 * C1887 + C12787 + C12787 + C47839 * C1899) *
                        C47872) *
                       C47770 * C47868) *
                      C47563 * C47546)) /
                    (p * q * std::sqrt(p + q));
    d2ee[64] += (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                 ((((C4621 * C119 + C4626 + C4626 + C4617 * C133 +
                     C4623 * C120 + C4627 + C4627 + C47839 * C134) *
                        C10403 +
                    (C4621 * C434 + C5013 + C5013 + C4617 * C454 +
                     C4623 * C433 + C5012 + C5012 + C47839 * C453) *
                        C47872) *
                       C47770 * C47581 * C47891 -
                   ((C5534 + C5535) * C47872 + (C4853 + C4852) * C10403) *
                       C47770 * C47581 * C47879 +
                   ((C4855 + C4854) * C10403 + (C5982 + C5983) * C47872) *
                       C47770 * C47581 * C47852) *
                      C268 +
                  (((C4856 + C4857) * C10403 + (C5536 + C5537) * C47872) *
                       C47770 * C47581 * C47879 -
                   ((C4623 * C432 + C5019 + C5019 + C47839 * C452 +
                     C4621 * C433 + C5018 + C5018 + C4617 * C453) *
                        C47872 +
                    (C4623 * C121 + C4632 + C4632 + C47839 * C135 +
                     C4621 * C120 + C4633 + C4633 + C4617 * C134) *
                        C10403) *
                       C47770 * C47581 * C47891 -
                   ((C6332 + C6333) * C47872 + (C4859 + C4858) * C10403) *
                       C47770 * C47581 * C47852) *
                      C269 +
                  (((C4621 * C121 + C4634 + C4634 + C4617 * C135 +
                     C4623 * C122 + C4635 + C4635 + C47839 * C136) *
                        C10403 +
                    (C4621 * C432 + C5029 + C5029 + C4617 * C452 +
                     C4623 * C438 + C5028 + C5028 + C47839 * C458) *
                        C47872) *
                       C47770 * C47581 * C47891 -
                   ((C5538 + C5539) * C47872 + (C4861 + C4860) * C10403) *
                       C47770 * C47581 * C47879 +
                   ((C4863 + C4862) * C10403 +
                    (C4621 * C1187 + C5520 + C5520 + C4617 * C1205 +
                     C4623 * C1476 + C5521 + C5521 + C47839 * C1478) *
                        C47872) *
                       C47770 * C47581 * C47852) *
                      C47846)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                 (((C4621 * C119 + C4626 + C4626 + C4617 * C133 + C4623 * C120 +
                    C4627 + C4627 + C47839 * C134) *
                       C10403 +
                   (C4621 * C434 + C5013 + C5013 + C4617 * C454 + C4623 * C433 +
                    C5012 + C5012 + C47839 * C453) *
                       C47872) *
                      C47770 * C47581 * C47563 * C108 -
                  ((C4623 * C432 + C5019 + C5019 + C47839 * C452 +
                    C4621 * C433 + C5018 + C5018 + C4617 * C453) *
                       C47872 +
                   (C4623 * C121 + C4632 + C4632 + C47839 * C135 +
                    C4621 * C120 + C4633 + C4633 + C4617 * C134) *
                       C10403) *
                      C47770 * C47581 * C47563 * C109 +
                  ((C4621 * C121 + C4634 + C4634 + C4617 * C135 + C4623 * C122 +
                    C4635 + C4635 + C47839 * C136) *
                       C10403 +
                   (C4621 * C432 + C5029 + C5029 + C4617 * C452 + C4623 * C438 +
                    C5028 + C5028 + C47839 * C458) *
                       C47872) *
                      C47770 * C47581 * C47563 * C110 -
                  ((C4623 * C440 + C5307 + C5307 + C47839 * C460 +
                    C4621 * C438 + C5306 + C5306 + C4617 * C458) *
                       C47872 +
                   (C4623 * C123 + C4640 + C4640 + C47839 * C137 +
                    C4621 * C122 + C4641 + C4641 + C4617 * C136) *
                       C10403) *
                      C47770 * C47581 * C47563 * C111 +
                  ((C4621 * C123 + C4642 + C4642 + C4617 * C137 + C4623 * C124 +
                    C4643 + C4643 + C47839 * C138) *
                       C10403 +
                   (C4621 * C440 + C10406 + C10406 + C4617 * C460 +
                    C4623 * C690 + C10407 + C10407 + C47839 * C692) *
                       C47872) *
                      C47770 * C47581 * C47563 * C112)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                 ((((C4621 * C119 + C4626 + C4626 + C4617 * C133 +
                     C4623 * C120 + C4627 + C4627 + C47839 * C134) *
                        C10403 +
                    (C10750 + C10751) * C47872) *
                       C47770 * C47581 * C976 -
                   ((C5534 + C5535) * C47872 + (C4853 + C4852) * C10403) *
                       C47770 * C47581 * C977 +
                   ((C4855 + C4854) * C10403 + (C5982 + C5983) * C47872) *
                       C47770 * C47581 * C47852) *
                      C47888 +
                  (((C4856 + C4857) * C10403 + (C5536 + C5537) * C47872) *
                       C47770 * C47581 * C977 -
                   ((C10755 + C10754) * C47872 +
                    (C4623 * C121 + C4632 + C4632 + C47839 * C135 +
                     C4621 * C120 + C4633 + C4633 + C4617 * C134) *
                        C10403) *
                       C47770 * C47581 * C976 -
                   ((C6332 + C6333) * C47872 + (C4859 + C4858) * C10403) *
                       C47770 * C47581 * C47852) *
                      C47875 +
                  (((C4621 * C121 + C4634 + C4634 + C4617 * C135 +
                     C4623 * C122 + C4635 + C4635 + C47839 * C136) *
                        C10403 +
                    (C10758 + C10759) * C47872) *
                       C47770 * C47581 * C976 -
                   ((C5538 + C5539) * C47872 + (C4861 + C4860) * C10403) *
                       C47770 * C47581 * C977 +
                   ((C4863 + C4862) * C10403 +
                    (C4621 * C1187 + C5520 + C5520 + C4617 * C1205 +
                     C4623 * C1476 + C5521 + C5521 + C47839 * C1478) *
                        C47872) *
                       C47770 * C47581 * C47852) *
                      C47846)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                 (((C4621 * C119 + C4626 + C4626 + C4617 * C133 + C4623 * C120 +
                    C4627 + C4627 + C47839 * C134) *
                       C10403 +
                   (C10750 + C10751) * C47872) *
                      C47770 * C47581 * C1044 -
                  ((C5534 + C5535) * C47872 + (C4853 + C4852) * C10403) *
                      C47770 * C47581 * C1045 +
                  ((C4855 + C4854) * C10403 + (C5982 + C5983) * C47872) *
                      C47770 * C47581 * C1046 -
                  ((C6480 + C6481) * C47872 + (C5795 + C5794) * C10403) *
                      C47770 * C47581 * C1047 +
                  ((C5797 + C5796) * C10403 +
                   (C4621 * C6463 + C6474 + C6474 + C4617 * C6467 +
                    C4623 * C6464 + C6475 + C6475 + C47839 * C6468) *
                       C47872) *
                      C47770 * C47581 * C1048) *
                 C47535) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C4621 * C119 + C4626 + C4626 + C4617 * C133 +
                     C4623 * C120 + C4627 + C4627 + C47839 * C134) *
                        C10403 +
                    (C10750 + C10751) * C47872) *
                       C47770 * C1702 -
                   ((C10752 + C10753) * C47872 + (C10751 + C10750) * C10403) *
                       C47770 * C1703 +
                   ((C10753 + C10752) * C10403 +
                    (C4621 * C1884 + C6865 + C6865 + C4617 * C1896 +
                     C4623 * C1883 + C6864 + C6864 + C47839 * C1895) *
                        C47872) *
                       C47770 * C47855) *
                      C47563 * C47888 +
                  (((C10754 + C10755) * C10403 + (C10756 + C10757) * C47872) *
                       C47770 * C1703 -
                   ((C10755 + C10754) * C47872 +
                    (C4623 * C121 + C4632 + C4632 + C47839 * C135 +
                     C4621 * C120 + C4633 + C4633 + C4617 * C134) *
                        C10403) *
                       C47770 * C1702 -
                   ((C4623 * C1882 + C7207 + C7207 + C47839 * C1894 +
                     C4621 * C1883 + C7206 + C7206 + C4617 * C1895) *
                        C47872 +
                    (C10757 + C10756) * C10403) *
                       C47770 * C47855) *
                      C47563 * C47875 +
                  (((C4621 * C121 + C4634 + C4634 + C4617 * C135 +
                     C4623 * C122 + C4635 + C4635 + C47839 * C136) *
                        C10403 +
                    (C10758 + C10759) * C47872) *
                       C47770 * C1702 -
                   ((C10760 + C10761) * C47872 + (C10759 + C10758) * C10403) *
                       C47770 * C1703 +
                   ((C10761 + C10760) * C10403 +
                    (C4621 * C1882 + C10724 + C10724 + C4617 * C1894 +
                     C4623 * C2160 + C10725 + C10725 + C47839 * C2162) *
                        C47872) *
                       C47770 * C47855) *
                      C47563 * C47846)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C4621 * C119 + C4626 + C4626 + C4617 * C133 +
                     C4623 * C120 + C4627 + C4627 + C47839 * C134) *
                        C10403 +
                    (C10750 + C10751) * C47872) *
                       C47770 * C1702 -
                   ((C10752 + C10753) * C47872 + (C10751 + C10750) * C10403) *
                       C47770 * C1703 +
                   ((C10753 + C10752) * C10403 +
                    (C4621 * C1884 + C6865 + C6865 + C4617 * C1896 +
                     C4623 * C1883 + C6864 + C6864 + C47839 * C1895) *
                        C47872) *
                       C47770 * C47855) *
                      C47891 +
                  (((C5535 + C5534) * C10403 + (C5980 + C5981) * C47872) *
                       C47770 * C1703 -
                   ((C5534 + C5535) * C47872 + (C4853 + C4852) * C10403) *
                       C47770 * C1702 -
                   ((C7356 + C7357) * C47872 + (C5981 + C5980) * C10403) *
                       C47770 * C47855) *
                      C47879 +
                  (((C4855 + C4854) * C10403 + (C5982 + C5983) * C47872) *
                       C47770 * C1702 -
                   ((C5984 + C5985) * C47872 + (C5983 + C5982) * C10403) *
                       C47770 * C1703 +
                   ((C5985 + C5984) * C10403 +
                    (C4621 * C7339 + C7350 + C7350 + C4617 * C7343 +
                     C4623 * C7340 + C7351 + C7351 + C47839 * C7344) *
                        C47872) *
                       C47770 * C47855) *
                      C47852) *
                 C47535) /
                    (p * q * std::sqrt(p + q));
    d2ee[65] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C4621 * C119 + C4626 + C4626 + C4617 * C133 +
                      C4623 * C120 + C4627 + C4627 + C47839 * C134) *
                         C10403 +
                     (C10750 + C10751) * C47872) *
                        C47770 * C3136 -
                    ((C10752 + C10753) * C47872 + (C10751 + C10750) * C10403) *
                        C47770 * C47668) *
                       C47820 +
                   (((C5535 + C5534) * C10403 + (C5980 + C5981) * C47872) *
                        C47770 * C47668 -
                    ((C5534 + C5535) * C47872 + (C4853 + C4852) * C10403) *
                        C47770 * C3136) *
                       C47626) *
                      C47540 +
                  ((((C10754 + C10755) * C10403 + (C10756 + C10757) * C47872) *
                        C47770 * C47668 -
                    ((C10755 + C10754) * C47872 +
                     (C4623 * C121 + C4632 + C4632 + C47839 * C135 +
                      C4621 * C120 + C4633 + C4633 + C4617 * C134) *
                         C10403) *
                        C47770 * C3136) *
                       C47820 +
                   (((C4856 + C4857) * C10403 + (C5536 + C5537) * C47872) *
                        C47770 * C3136 -
                    ((C7074 + C7075) * C47872 + (C5537 + C5536) * C10403) *
                        C47770 * C47668) *
                       C47626) *
                      C47549 +
                  ((((C4621 * C121 + C4634 + C4634 + C4617 * C135 +
                      C4623 * C122 + C4635 + C4635 + C47839 * C136) *
                         C10403 +
                     (C10758 + C10759) * C47872) *
                        C47770 * C3136 -
                    ((C10760 + C10761) * C47872 + (C10759 + C10758) * C10403) *
                        C47770 * C47668) *
                       C47820 +
                   (((C5539 + C5538) * C10403 +
                     (C4621 * C1184 + C5032 + C5032 + C4617 * C1202 +
                      C4623 * C2052 + C5033 + C5033 + C47839 * C2054) *
                         C47872) *
                        C47770 * C47668 -
                    ((C5538 + C5539) * C47872 + (C4861 + C4860) * C10403) *
                        C47770 * C3136) *
                       C47626) *
                      C2745)) /
                (p * q * std::sqrt(p + q));
    d2ee[66] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C4621 * C119 + C4626 + C4626 + C4617 * C133 +
                      C4623 * C120 + C4627 + C4627 + C47839 * C134) *
                         C10403 +
                     (C10750 + C10751) * C47872) *
                        C47770 * C47664 -
                    ((C10752 + C10753) * C47872 + (C10751 + C10750) * C10403) *
                        C47770 * C47671 +
                    ((C10753 + C10752) * C10403 + (C12454 + C12455) * C47872) *
                        C47770 * C3644) *
                       C47820 +
                   (((C5535 + C5534) * C10403 + (C5980 + C5981) * C47872) *
                        C47770 * C47671 -
                    ((C5534 + C5535) * C47872 + (C4853 + C4852) * C10403) *
                        C47770 * C47664 -
                    ((C7356 + C7357) * C47872 + (C5981 + C5980) * C10403) *
                        C47770 * C3644) *
                       C47626) *
                      C2482 +
                  ((((C10754 + C10755) * C10403 + (C10756 + C10757) * C47872) *
                        C47770 * C47671 -
                    ((C10755 + C10754) * C47872 +
                     (C4623 * C121 + C4632 + C4632 + C47839 * C135 +
                      C4621 * C120 + C4633 + C4633 + C4617 * C134) *
                         C10403) *
                        C47770 * C47664 -
                    ((C12792 + C12793) * C47872 + (C10757 + C10756) * C10403) *
                        C47770 * C3644) *
                       C47820 +
                   (((C4856 + C4857) * C10403 + (C5536 + C5537) * C47872) *
                        C47770 * C47664 -
                    ((C7074 + C7075) * C47872 + (C5537 + C5536) * C10403) *
                        C47770 * C47671 +
                    ((C7075 + C7074) * C10403 +
                     (C4621 * C2265 + C7208 + C7208 + C4617 * C2271 +
                      C4623 * C2266 + C7209 + C7209 + C47839 * C2272) *
                         C47872) *
                        C47770 * C3644) *
                       C47626) *
                      C47546)) /
                (p * q * std::sqrt(p + q));
    d2ee[67] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C4621 * C119 + C4626 + C4626 + C4617 * C133 +
                      C4623 * C120 + C4627 + C4627 + C47839 * C134) *
                         C10403 +
                     (C10750 + C10751) * C47872) *
                        C47770 * C3136 -
                    ((C10752 + C10753) * C47872 + (C10751 + C10750) * C10403) *
                        C47770 * C47668) *
                       C47891 +
                   (((C5535 + C5534) * C10403 + (C5980 + C5981) * C47872) *
                        C47770 * C47668 -
                    ((C5534 + C5535) * C47872 + (C4853 + C4852) * C10403) *
                        C47770 * C3136) *
                       C47879 +
                   (((C4855 + C4854) * C10403 + (C5982 + C5983) * C47872) *
                        C47770 * C3136 -
                    ((C5984 + C5985) * C47872 + (C5983 + C5982) * C10403) *
                        C47770 * C47668) *
                       C47852) *
                      C2482 +
                  ((((C10754 + C10755) * C10403 + (C10756 + C10757) * C47872) *
                        C47770 * C47668 -
                    ((C10755 + C10754) * C47872 +
                     (C4623 * C121 + C4632 + C4632 + C47839 * C135 +
                      C4621 * C120 + C4633 + C4633 + C4617 * C134) *
                         C10403) *
                        C47770 * C3136) *
                       C47891 +
                   (((C4856 + C4857) * C10403 + (C5536 + C5537) * C47872) *
                        C47770 * C3136 -
                    ((C7074 + C7075) * C47872 + (C5537 + C5536) * C10403) *
                        C47770 * C47668) *
                       C47879 +
                   (((C6333 + C6332) * C10403 +
                     (C4621 * C1191 + C7068 + C7068 + C4617 * C1209 +
                      C4623 * C1192 + C7069 + C7069 + C47839 * C1210) *
                         C47872) *
                        C47770 * C47668 -
                    ((C6332 + C6333) * C47872 + (C4859 + C4858) * C10403) *
                        C47770 * C3136) *
                       C47852) *
                      C47546)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C4621 * C119 + C4626 + C4626 + C4617 * C133 +
                     C4623 * C120 + C4627 + C4627 + C47839 * C134) *
                        C10403 +
                    (C10750 + C10751) * C47872) *
                       C47770 * C3136 -
                   ((C10752 + C10753) * C47872 + (C10751 + C10750) * C10403) *
                       C47770 * C47668) *
                      C47563 * C47897 +
                  (((C10754 + C10755) * C10403 + (C10756 + C10757) * C47872) *
                       C47770 * C47668 -
                   ((C10755 + C10754) * C47872 +
                    (C4623 * C121 + C4632 + C4632 + C47839 * C135 +
                     C4621 * C120 + C4633 + C4633 + C4617 * C134) *
                        C10403) *
                       C47770 * C3136) *
                      C47563 * C47890 +
                  (((C4621 * C121 + C4634 + C4634 + C4617 * C135 +
                     C4623 * C122 + C4635 + C4635 + C47839 * C136) *
                        C10403 +
                    (C10758 + C10759) * C47872) *
                       C47770 * C3136 -
                   ((C10760 + C10761) * C47872 + (C10759 + C10758) * C10403) *
                       C47770 * C47668) *
                      C47563 * C47877 +
                  (((C11032 + C11033) * C10403 +
                    (C4621 * C439 + C11026 + C11026 + C4617 * C459 +
                     C4623 * C441 + C11027 + C11027 + C47839 * C461) *
                        C47872) *
                       C47770 * C47668 -
                   ((C11033 + C11032) * C47872 +
                    (C4623 * C123 + C4640 + C4640 + C47839 * C137 +
                     C4621 * C122 + C4641 + C4641 + C4617 * C136) *
                        C10403) *
                       C47770 * C3136) *
                      C47563 * C47856)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 ((((C4621 * C119 + C4626 + C4626 + C4617 * C133 +
                     C4623 * C120 + C4627 + C4627 + C47839 * C134) *
                        C10403 +
                    (C10750 + C10751) * C47872) *
                       C47770 * C47899 -
                   ((C10752 + C10753) * C47872 + (C10751 + C10750) * C10403) *
                       C47770 * C47896 +
                   ((C10753 + C10752) * C10403 + (C12454 + C12455) * C47872) *
                       C47770 * C47887 -
                   ((C12456 + C12457) * C47872 + (C12455 + C12454) * C10403) *
                       C47770 * C47868) *
                      C47563 * C2482 +
                  (((C10754 + C10755) * C10403 + (C10756 + C10757) * C47872) *
                       C47770 * C47896 -
                   ((C10755 + C10754) * C47872 +
                    (C4623 * C121 + C4632 + C4632 + C47839 * C135 +
                     C4621 * C120 + C4633 + C4633 + C4617 * C134) *
                        C10403) *
                       C47770 * C47899 -
                   ((C12792 + C12793) * C47872 + (C10757 + C10756) * C10403) *
                       C47770 * C47887 +
                   ((C12793 + C12792) * C10403 +
                    (C4621 * C1886 + C12786 + C12786 + C4617 * C1898 +
                     C4623 * C1887 + C12787 + C12787 + C47839 * C1899) *
                        C47872) *
                       C47770 * C47868) *
                      C47563 * C47546)) /
                    (p * q * std::sqrt(p + q));
    d2ee[68] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C4621 * C119 + C4626 + C4626 + C4617 * C133 +
                     C4623 * C120 + C4627 + C4627 + C47839 * C134) *
                        C10403 +
                    (C10750 + C10751) * C47872) *
                       C47770 * C47664 -
                   ((C10752 + C10753) * C47872 + (C10751 + C10750) * C10403) *
                       C47770 * C47671 +
                   ((C10753 + C10752) * C10403 + (C12454 + C12455) * C47872) *
                       C47770 * C3644) *
                      C47563 * C47540 +
                  (((C10754 + C10755) * C10403 + (C10756 + C10757) * C47872) *
                       C47770 * C47671 -
                   ((C10755 + C10754) * C47872 +
                    (C4623 * C121 + C4632 + C4632 + C47839 * C135 +
                     C4621 * C120 + C4633 + C4633 + C4617 * C134) *
                        C10403) *
                       C47770 * C47664 -
                   ((C12792 + C12793) * C47872 + (C10757 + C10756) * C10403) *
                       C47770 * C3644) *
                      C47563 * C47549 +
                  (((C4621 * C121 + C4634 + C4634 + C4617 * C135 +
                     C4623 * C122 + C4635 + C4635 + C47839 * C136) *
                        C10403 +
                    (C10758 + C10759) * C47872) *
                       C47770 * C47664 -
                   ((C10760 + C10761) * C47872 + (C10759 + C10758) * C10403) *
                       C47770 * C47671 +
                   ((C10761 + C10760) * C10403 +
                    (C4621 * C1882 + C10724 + C10724 + C4617 * C1894 +
                     C4623 * C2160 + C10725 + C10725 + C47839 * C2162) *
                        C47872) *
                       C47770 * C3644) *
                      C47563 * C2745)) /
                (p * q * std::sqrt(p + q));
    d2ee[69] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C4621 * C119 + C4626 + C4626 + C4617 * C133 +
                     C4623 * C120 + C4627 + C4627 + C47839 * C134) *
                        C10403 +
                    (C10750 + C10751) * C47872) *
                       C47770 * C3136 -
                   ((C10752 + C10753) * C47872 + (C10751 + C10750) * C10403) *
                       C47770 * C47668) *
                      C47563 * C47897 +
                  (((C10754 + C10755) * C10403 + (C10756 + C10757) * C47872) *
                       C47770 * C47668 -
                   ((C10755 + C10754) * C47872 +
                    (C4623 * C121 + C4632 + C4632 + C47839 * C135 +
                     C4621 * C120 + C4633 + C4633 + C4617 * C134) *
                        C10403) *
                       C47770 * C3136) *
                      C47563 * C47890 +
                  (((C4621 * C121 + C4634 + C4634 + C4617 * C135 +
                     C4623 * C122 + C4635 + C4635 + C47839 * C136) *
                        C10403 +
                    (C10758 + C10759) * C47872) *
                       C47770 * C3136 -
                   ((C10760 + C10761) * C47872 + (C10759 + C10758) * C10403) *
                       C47770 * C47668) *
                      C47563 * C47877 +
                  (((C11032 + C11033) * C10403 +
                    (C4621 * C439 + C11026 + C11026 + C4617 * C459 +
                     C4623 * C441 + C11027 + C11027 + C47839 * C461) *
                        C47872) *
                       C47770 * C47668 -
                   ((C11033 + C11032) * C47872 +
                    (C4623 * C123 + C4640 + C4640 + C47839 * C137 +
                     C4621 * C122 + C4641 + C4641 + C4617 * C136) *
                        C10403) *
                       C47770 * C3136) *
                      C47563 * C47856)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C4621 * C119 + C4626 + C4626 + C4617 * C133 +
                      C4623 * C120 + C4627 + C4627 + C47839 * C134) *
                         C10403 +
                     (C10750 + C10751) * C47872) *
                        C47770 * C3136 -
                    ((C10752 + C10753) * C47872 + (C10751 + C10750) * C10403) *
                        C47770 * C47668) *
                       C47891 +
                   (((C5535 + C5534) * C10403 + (C5980 + C5981) * C47872) *
                        C47770 * C47668 -
                    ((C5534 + C5535) * C47872 + (C4853 + C4852) * C10403) *
                        C47770 * C3136) *
                       C47879 +
                   (((C4855 + C4854) * C10403 + (C5982 + C5983) * C47872) *
                        C47770 * C3136 -
                    ((C5984 + C5985) * C47872 + (C5983 + C5982) * C10403) *
                        C47770 * C47668) *
                       C47852) *
                      C2482 +
                  ((((C10754 + C10755) * C10403 + (C10756 + C10757) * C47872) *
                        C47770 * C47668 -
                    ((C10755 + C10754) * C47872 +
                     (C4623 * C121 + C4632 + C4632 + C47839 * C135 +
                      C4621 * C120 + C4633 + C4633 + C4617 * C134) *
                         C10403) *
                        C47770 * C3136) *
                       C47891 +
                   (((C4856 + C4857) * C10403 + (C5536 + C5537) * C47872) *
                        C47770 * C3136 -
                    ((C7074 + C7075) * C47872 + (C5537 + C5536) * C10403) *
                        C47770 * C47668) *
                       C47879 +
                   (((C6333 + C6332) * C10403 +
                     (C4621 * C1191 + C7068 + C7068 + C4617 * C1209 +
                      C4623 * C1192 + C7069 + C7069 + C47839 * C1210) *
                         C47872) *
                        C47770 * C47668 -
                    ((C6332 + C6333) * C47872 + (C4859 + C4858) * C10403) *
                        C47770 * C3136) *
                       C47852) *
                      C47546)) /
                    (p * q * std::sqrt(p + q));
    d2ee[70] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C4621 * C119 + C4626 + C4626 + C4617 * C133 +
                     C4623 * C120 + C4627 + C4627 + C47839 * C134) *
                        C10403 +
                    (C10750 + C10751) * C47872) *
                       C47770 * C47581 * C47820 -
                   ((C5534 + C5535) * C47872 + (C4853 + C4852) * C10403) *
                       C47770 * C47581 * C47626) *
                      C580 +
                  (((C4856 + C4857) * C10403 + (C5536 + C5537) * C47872) *
                       C47770 * C47581 * C47626 -
                   ((C10755 + C10754) * C47872 +
                    (C4623 * C121 + C4632 + C4632 + C47839 * C135 +
                     C4621 * C120 + C4633 + C4633 + C4617 * C134) *
                        C10403) *
                       C47770 * C47581 * C47820) *
                      C581 +
                  (((C4621 * C121 + C4634 + C4634 + C4617 * C135 +
                     C4623 * C122 + C4635 + C4635 + C47839 * C136) *
                        C10403 +
                    (C10758 + C10759) * C47872) *
                       C47770 * C47581 * C47820 -
                   ((C5538 + C5539) * C47872 + (C4861 + C4860) * C10403) *
                       C47770 * C47581 * C47626) *
                      C582 +
                  (((C5174 + C5175) * C10403 +
                    (C4621 * C845 + C5308 + C5308 + C4617 * C855 +
                     C4623 * C846 + C5309 + C5309 + C47839 * C856) *
                        C47872) *
                       C47770 * C47581 * C47626 -
                   ((C4623 * C440 + C5307 + C5307 + C47839 * C460 +
                     C4621 * C438 + C5306 + C5306 + C4617 * C458) *
                        C47872 +
                    (C4623 * C123 + C4640 + C4640 + C47839 * C137 +
                     C4621 * C122 + C4641 + C4641 + C4617 * C136) *
                        C10403) *
                       C47770 * C47581 * C47820) *
                      C47856)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C4621 * C119 + C4626 + C4626 + C4617 * C133 +
                     C4623 * C120 + C4627 + C4627 + C47839 * C134) *
                        C10403 +
                    (C10750 + C10751) * C47872) *
                       C47770 * C47581 * C1318 -
                   ((C5534 + C5535) * C47872 + (C4853 + C4852) * C10403) *
                       C47770 * C47581 * C1319 +
                   ((C4855 + C4854) * C10403 + (C5982 + C5983) * C47872) *
                       C47770 * C47581 * C1320 -
                   ((C6480 + C6481) * C47872 + (C5795 + C5794) * C10403) *
                       C47770 * C47581 * C47862) *
                      C47806 +
                  (((C4856 + C4857) * C10403 + (C5536 + C5537) * C47872) *
                       C47770 * C47581 * C1319 -
                   ((C10755 + C10754) * C47872 +
                    (C4623 * C121 + C4632 + C4632 + C47839 * C135 +
                     C4621 * C120 + C4633 + C4633 + C4617 * C134) *
                        C10403) *
                       C47770 * C47581 * C1318 -
                   ((C6332 + C6333) * C47872 + (C4859 + C4858) * C10403) *
                       C47770 * C47581 * C1320 +
                   ((C6127 + C6126) * C10403 +
                    (C4621 * C1581 + C6326 + C6326 + C4617 * C1587 +
                     C4623 * C1582 + C6327 + C6327 + C47839 * C1588) *
                        C47872) *
                       C47770 * C47581 * C47862) *
                      C47546)) /
                    (p * q * std::sqrt(p + q));
    d2ee[71] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C4621 * C119 + C4626 + C4626 + C4617 * C133 +
                      C4623 * C120 + C4627 + C4627 + C47839 * C134) *
                         C10403 +
                     (C10750 + C10751) * C47872) *
                        C47770 * C47821 -
                    ((C10752 + C10753) * C47872 + (C10751 + C10750) * C10403) *
                        C47770 * C47668) *
                       C47820 +
                   (((C5535 + C5534) * C10403 + (C5980 + C5981) * C47872) *
                        C47770 * C47668 -
                    ((C5534 + C5535) * C47872 + (C4853 + C4852) * C10403) *
                        C47770 * C47821) *
                       C47626) *
                      C268 +
                  ((((C10754 + C10755) * C10403 + (C10756 + C10757) * C47872) *
                        C47770 * C47668 -
                    ((C10755 + C10754) * C47872 +
                     (C4623 * C121 + C4632 + C4632 + C47839 * C135 +
                      C4621 * C120 + C4633 + C4633 + C4617 * C134) *
                         C10403) *
                        C47770 * C47821) *
                       C47820 +
                   (((C4856 + C4857) * C10403 + (C5536 + C5537) * C47872) *
                        C47770 * C47821 -
                    ((C7074 + C7075) * C47872 + (C5537 + C5536) * C10403) *
                        C47770 * C47668) *
                       C47626) *
                      C269 +
                  ((((C4621 * C121 + C4634 + C4634 + C4617 * C135 +
                      C4623 * C122 + C4635 + C4635 + C47839 * C136) *
                         C10403 +
                     (C10758 + C10759) * C47872) *
                        C47770 * C47821 -
                    ((C10760 + C10761) * C47872 + (C10759 + C10758) * C10403) *
                        C47770 * C47668) *
                       C47820 +
                   (((C5539 + C5538) * C10403 +
                     (C4621 * C1184 + C5032 + C5032 + C4617 * C1202 +
                      C4623 * C2052 + C5033 + C5033 + C47839 * C2054) *
                         C47872) *
                        C47770 * C47668 -
                    ((C5538 + C5539) * C47872 + (C4861 + C4860) * C10403) *
                        C47770 * C47821) *
                       C47626) *
                      C47846)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C4621 * C119 + C4626 + C4626 + C4617 * C133 +
                     C4623 * C120 + C4627 + C4627 + C47839 * C134) *
                        C10403 +
                    (C10750 + C10751) * C47872) *
                       C47770 * C47821 -
                   ((C10752 + C10753) * C47872 + (C10751 + C10750) * C10403) *
                       C47770 * C47668) *
                      C1318 +
                  (((C5535 + C5534) * C10403 + (C5980 + C5981) * C47872) *
                       C47770 * C47668 -
                   ((C5534 + C5535) * C47872 + (C4853 + C4852) * C10403) *
                       C47770 * C47821) *
                      C1319 +
                  (((C4855 + C4854) * C10403 + (C5982 + C5983) * C47872) *
                       C47770 * C47821 -
                   ((C5984 + C5985) * C47872 + (C5983 + C5982) * C10403) *
                       C47770 * C47668) *
                      C1320 +
                  (((C6481 + C6480) * C10403 +
                    (C4621 * C5943 + C5966 + C5966 + C4617 * C5947 +
                     C4623 * C5944 + C5967 + C5967 + C47839 * C5948) *
                        C47872) *
                       C47770 * C47668 -
                   ((C6480 + C6481) * C47872 + (C5795 + C5794) * C10403) *
                       C47770 * C47821) *
                      C47862) *
                 C47535) /
                    (p * q * std::sqrt(p + q));
    d2ee[72] += (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                 ((((C4621 * C119 + C4626 + C4626 + C4617 * C133 +
                     C4623 * C120 + C4627 + C4627 + C47839 * C134) *
                        C10403 +
                    (C4621 * C434 + C5013 + C5013 + C4617 * C454 +
                     C4623 * C433 + C5012 + C5012 + C47839 * C453) *
                        C47872) *
                       C47770 * C47581 * C47891 -
                   ((C5534 + C5535) * C47872 + (C4853 + C4852) * C10403) *
                       C47770 * C47581 * C47879 +
                   ((C4855 + C4854) * C10403 + (C5982 + C5983) * C47872) *
                       C47770 * C47581 * C47852) *
                      C268 +
                  (((C4856 + C4857) * C10403 + (C5536 + C5537) * C47872) *
                       C47770 * C47581 * C47879 -
                   ((C4623 * C432 + C5019 + C5019 + C47839 * C452 +
                     C4621 * C433 + C5018 + C5018 + C4617 * C453) *
                        C47872 +
                    (C4623 * C121 + C4632 + C4632 + C47839 * C135 +
                     C4621 * C120 + C4633 + C4633 + C4617 * C134) *
                        C10403) *
                       C47770 * C47581 * C47891 -
                   ((C6332 + C6333) * C47872 + (C4859 + C4858) * C10403) *
                       C47770 * C47581 * C47852) *
                      C269 +
                  (((C4621 * C121 + C4634 + C4634 + C4617 * C135 +
                     C4623 * C122 + C4635 + C4635 + C47839 * C136) *
                        C10403 +
                    (C4621 * C432 + C5029 + C5029 + C4617 * C452 +
                     C4623 * C438 + C5028 + C5028 + C47839 * C458) *
                        C47872) *
                       C47770 * C47581 * C47891 -
                   ((C5538 + C5539) * C47872 + (C4861 + C4860) * C10403) *
                       C47770 * C47581 * C47879 +
                   ((C4863 + C4862) * C10403 +
                    (C4621 * C1187 + C5520 + C5520 + C4617 * C1205 +
                     C4623 * C1476 + C5521 + C5521 + C47839 * C1478) *
                        C47872) *
                       C47770 * C47581 * C47852) *
                      C47846)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                 (((C4621 * C119 + C4626 + C4626 + C4617 * C133 + C4623 * C120 +
                    C4627 + C4627 + C47839 * C134) *
                       C10403 +
                   (C4621 * C434 + C5013 + C5013 + C4617 * C454 + C4623 * C433 +
                    C5012 + C5012 + C47839 * C453) *
                       C47872) *
                      C47770 * C47581 * C47563 * C108 -
                  ((C4623 * C432 + C5019 + C5019 + C47839 * C452 +
                    C4621 * C433 + C5018 + C5018 + C4617 * C453) *
                       C47872 +
                   (C4623 * C121 + C4632 + C4632 + C47839 * C135 +
                    C4621 * C120 + C4633 + C4633 + C4617 * C134) *
                       C10403) *
                      C47770 * C47581 * C47563 * C109 +
                  ((C4621 * C121 + C4634 + C4634 + C4617 * C135 + C4623 * C122 +
                    C4635 + C4635 + C47839 * C136) *
                       C10403 +
                   (C4621 * C432 + C5029 + C5029 + C4617 * C452 + C4623 * C438 +
                    C5028 + C5028 + C47839 * C458) *
                       C47872) *
                      C47770 * C47581 * C47563 * C110 -
                  ((C4623 * C440 + C5307 + C5307 + C47839 * C460 +
                    C4621 * C438 + C5306 + C5306 + C4617 * C458) *
                       C47872 +
                   (C4623 * C123 + C4640 + C4640 + C47839 * C137 +
                    C4621 * C122 + C4641 + C4641 + C4617 * C136) *
                       C10403) *
                      C47770 * C47581 * C47563 * C111 +
                  ((C4621 * C123 + C4642 + C4642 + C4617 * C137 + C4623 * C124 +
                    C4643 + C4643 + C47839 * C138) *
                       C10403 +
                   (C4621 * C440 + C10406 + C10406 + C4617 * C460 +
                    C4623 * C690 + C10407 + C10407 + C47839 * C692) *
                       C47872) *
                      C47770 * C47581 * C47563 * C112)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C4621 * C119 + C4626 + C4626 + C4617 * C133 +
                     C4623 * C120 + C4627 + C4627 + C47839 * C134) *
                        C10403 +
                    (C10750 + C10751) * C47872) *
                       C47770 * C47892 -
                   ((C10752 + C10753) * C47872 + (C10751 + C10750) * C10403) *
                       C47770 * C47881 +
                   ((C10753 + C10752) * C10403 +
                    (C4621 * C1884 + C6865 + C6865 + C4617 * C1896 +
                     C4623 * C1883 + C6864 + C6864 + C47839 * C1895) *
                        C47872) *
                       C47770 * C47855) *
                      C47563 * C268 +
                  (((C10754 + C10755) * C10403 + (C10756 + C10757) * C47872) *
                       C47770 * C47881 -
                   ((C10755 + C10754) * C47872 +
                    (C4623 * C121 + C4632 + C4632 + C47839 * C135 +
                     C4621 * C120 + C4633 + C4633 + C4617 * C134) *
                        C10403) *
                       C47770 * C47892 -
                   ((C4623 * C1882 + C7207 + C7207 + C47839 * C1894 +
                     C4621 * C1883 + C7206 + C7206 + C4617 * C1895) *
                        C47872 +
                    (C10757 + C10756) * C10403) *
                       C47770 * C47855) *
                      C47563 * C269 +
                  (((C4621 * C121 + C4634 + C4634 + C4617 * C135 +
                     C4623 * C122 + C4635 + C4635 + C47839 * C136) *
                        C10403 +
                    (C10758 + C10759) * C47872) *
                       C47770 * C47892 -
                   ((C10760 + C10761) * C47872 + (C10759 + C10758) * C10403) *
                       C47770 * C47881 +
                   ((C10761 + C10760) * C10403 +
                    (C4621 * C1882 + C10724 + C10724 + C4617 * C1894 +
                     C4623 * C2160 + C10725 + C10725 + C47839 * C2162) *
                        C47872) *
                       C47770 * C47855) *
                      C47563 * C47846)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                 ((((C4621 * C119 + C4626 + C4626 + C4617 * C133 +
                     C4623 * C120 + C4627 + C4627 + C47839 * C134) *
                        C10403 +
                    (C10750 + C10751) * C47872) *
                       C47770 * C47581 * C976 -
                   ((C5534 + C5535) * C47872 + (C4853 + C4852) * C10403) *
                       C47770 * C47581 * C977 +
                   ((C4855 + C4854) * C10403 + (C5982 + C5983) * C47872) *
                       C47770 * C47581 * C47852) *
                      C47888 +
                  (((C4856 + C4857) * C10403 + (C5536 + C5537) * C47872) *
                       C47770 * C47581 * C977 -
                   ((C10755 + C10754) * C47872 +
                    (C4623 * C121 + C4632 + C4632 + C47839 * C135 +
                     C4621 * C120 + C4633 + C4633 + C4617 * C134) *
                        C10403) *
                       C47770 * C47581 * C976 -
                   ((C6332 + C6333) * C47872 + (C4859 + C4858) * C10403) *
                       C47770 * C47581 * C47852) *
                      C47875 +
                  (((C4621 * C121 + C4634 + C4634 + C4617 * C135 +
                     C4623 * C122 + C4635 + C4635 + C47839 * C136) *
                        C10403 +
                    (C10758 + C10759) * C47872) *
                       C47770 * C47581 * C976 -
                   ((C5538 + C5539) * C47872 + (C4861 + C4860) * C10403) *
                       C47770 * C47581 * C977 +
                   ((C4863 + C4862) * C10403 +
                    (C4621 * C1187 + C5520 + C5520 + C4617 * C1205 +
                     C4623 * C1476 + C5521 + C5521 + C47839 * C1478) *
                        C47872) *
                       C47770 * C47581 * C47852) *
                      C47846)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                 (((C4621 * C119 + C4626 + C4626 + C4617 * C133 + C4623 * C120 +
                    C4627 + C4627 + C47839 * C134) *
                       C10403 +
                   (C10750 + C10751) * C47872) *
                      C47770 * C47581 * C1044 -
                  ((C5534 + C5535) * C47872 + (C4853 + C4852) * C10403) *
                      C47770 * C47581 * C1045 +
                  ((C4855 + C4854) * C10403 + (C5982 + C5983) * C47872) *
                      C47770 * C47581 * C1046 -
                  ((C6480 + C6481) * C47872 + (C5795 + C5794) * C10403) *
                      C47770 * C47581 * C1047 +
                  ((C5797 + C5796) * C10403 +
                   (C4621 * C6463 + C6474 + C6474 + C4617 * C6467 +
                    C4623 * C6464 + C6475 + C6475 + C47839 * C6468) *
                       C47872) *
                      C47770 * C47581 * C1048) *
                 C47535) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C4621 * C119 + C4626 + C4626 + C4617 * C133 +
                     C4623 * C120 + C4627 + C4627 + C47839 * C134) *
                        C10403 +
                    (C10750 + C10751) * C47872) *
                       C47770 * C47892 -
                   ((C10752 + C10753) * C47872 + (C10751 + C10750) * C10403) *
                       C47770 * C47881 +
                   ((C10753 + C10752) * C10403 +
                    (C4621 * C1884 + C6865 + C6865 + C4617 * C1896 +
                     C4623 * C1883 + C6864 + C6864 + C47839 * C1895) *
                        C47872) *
                       C47770 * C47855) *
                      C976 +
                  (((C5535 + C5534) * C10403 + (C5980 + C5981) * C47872) *
                       C47770 * C47881 -
                   ((C5534 + C5535) * C47872 + (C4853 + C4852) * C10403) *
                       C47770 * C47892 -
                   ((C7356 + C7357) * C47872 + (C5981 + C5980) * C10403) *
                       C47770 * C47855) *
                      C977 +
                  (((C4855 + C4854) * C10403 + (C5982 + C5983) * C47872) *
                       C47770 * C47892 -
                   ((C5984 + C5985) * C47872 + (C5983 + C5982) * C10403) *
                       C47770 * C47881 +
                   ((C5985 + C5984) * C10403 +
                    (C4621 * C7339 + C7350 + C7350 + C4617 * C7343 +
                     C4623 * C7340 + C7351 + C7351 + C47839 * C7344) *
                        C47872) *
                       C47770 * C47855) *
                      C47852) *
                 C47535) /
                    (p * q * std::sqrt(p + q));
    d2ee[73] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C4621 * C119 + C4626 + C4626 + C4617 * C133 +
                     C4623 * C120 + C4627 + C4627 + C47839 * C134) *
                        C10403 +
                    (C10750 + C10751) * C47872) *
                       C47770 * C47821 -
                   ((C10752 + C10753) * C47872 + (C10751 + C10750) * C10403) *
                       C47770 * C47668) *
                      C47563 * C580 +
                  (((C10754 + C10755) * C10403 + (C10756 + C10757) * C47872) *
                       C47770 * C47668 -
                   ((C10755 + C10754) * C47872 +
                    (C4623 * C121 + C4632 + C4632 + C47839 * C135 +
                     C4621 * C120 + C4633 + C4633 + C4617 * C134) *
                        C10403) *
                       C47770 * C47821) *
                      C47563 * C581 +
                  (((C4621 * C121 + C4634 + C4634 + C4617 * C135 +
                     C4623 * C122 + C4635 + C4635 + C47839 * C136) *
                        C10403 +
                    (C10758 + C10759) * C47872) *
                       C47770 * C47821 -
                   ((C10760 + C10761) * C47872 + (C10759 + C10758) * C10403) *
                       C47770 * C47668) *
                      C47563 * C582 +
                  (((C11032 + C11033) * C10403 +
                    (C4621 * C439 + C11026 + C11026 + C4617 * C459 +
                     C4623 * C441 + C11027 + C11027 + C47839 * C461) *
                        C47872) *
                       C47770 * C47668 -
                   ((C11033 + C11032) * C47872 +
                    (C4623 * C123 + C4640 + C4640 + C47839 * C137 +
                     C4621 * C122 + C4641 + C4641 + C4617 * C136) *
                        C10403) *
                       C47770 * C47821) *
                      C47563 * C47856)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C4621 * C119 + C4626 + C4626 + C4617 * C133 +
                      C4623 * C120 + C4627 + C4627 + C47839 * C134) *
                         C10403 +
                     (C10750 + C10751) * C47872) *
                        C47770 * C47821 -
                    ((C10752 + C10753) * C47872 + (C10751 + C10750) * C10403) *
                        C47770 * C47668) *
                       C976 +
                   (((C5535 + C5534) * C10403 + (C5980 + C5981) * C47872) *
                        C47770 * C47668 -
                    ((C5534 + C5535) * C47872 + (C4853 + C4852) * C10403) *
                        C47770 * C47821) *
                       C977 +
                   (((C4855 + C4854) * C10403 + (C5982 + C5983) * C47872) *
                        C47770 * C47821 -
                    ((C5984 + C5985) * C47872 + (C5983 + C5982) * C10403) *
                        C47770 * C47668) *
                       C47852) *
                      C47806 +
                  ((((C10754 + C10755) * C10403 + (C10756 + C10757) * C47872) *
                        C47770 * C47668 -
                    ((C10755 + C10754) * C47872 +
                     (C4623 * C121 + C4632 + C4632 + C47839 * C135 +
                      C4621 * C120 + C4633 + C4633 + C4617 * C134) *
                         C10403) *
                        C47770 * C47821) *
                       C976 +
                   (((C4856 + C4857) * C10403 + (C5536 + C5537) * C47872) *
                        C47770 * C47821 -
                    ((C7074 + C7075) * C47872 + (C5537 + C5536) * C10403) *
                        C47770 * C47668) *
                       C977 +
                   (((C6333 + C6332) * C10403 +
                     (C4621 * C1191 + C7068 + C7068 + C4617 * C1209 +
                      C4623 * C1192 + C7069 + C7069 + C47839 * C1210) *
                         C47872) *
                        C47770 * C47668 -
                    ((C6332 + C6333) * C47872 + (C4859 + C4858) * C10403) *
                        C47770 * C47821) *
                       C47852) *
                      C47546)) /
                    (p * q * std::sqrt(p + q));
    d2ee[74] += (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 (((C4621 * C119 + C4626 + C4626 + C4617 * C133 + C4623 * C120 +
                    C4627 + C4627 + C47839 * C134) *
                       C10403 +
                   (C4621 * C434 + C5013 + C5013 + C4617 * C454 + C4623 * C433 +
                    C5012 + C5012 + C47839 * C453) *
                       C47872) *
                      C47770 * C47581 * C47563 * C108 -
                  ((C4623 * C432 + C5019 + C5019 + C47839 * C452 +
                    C4621 * C433 + C5018 + C5018 + C4617 * C453) *
                       C47872 +
                   (C4623 * C121 + C4632 + C4632 + C47839 * C135 +
                    C4621 * C120 + C4633 + C4633 + C4617 * C134) *
                       C10403) *
                      C47770 * C47581 * C47563 * C109 +
                  ((C4621 * C121 + C4634 + C4634 + C4617 * C135 + C4623 * C122 +
                    C4635 + C4635 + C47839 * C136) *
                       C10403 +
                   (C4621 * C432 + C5029 + C5029 + C4617 * C452 + C4623 * C438 +
                    C5028 + C5028 + C47839 * C458) *
                       C47872) *
                      C47770 * C47581 * C47563 * C110 -
                  ((C4623 * C440 + C5307 + C5307 + C47839 * C460 +
                    C4621 * C438 + C5306 + C5306 + C4617 * C458) *
                       C47872 +
                   (C4623 * C123 + C4640 + C4640 + C47839 * C137 +
                    C4621 * C122 + C4641 + C4641 + C4617 * C136) *
                       C10403) *
                      C47770 * C47581 * C47563 * C111 +
                  ((C4621 * C123 + C4642 + C4642 + C4617 * C137 + C4623 * C124 +
                    C4643 + C4643 + C47839 * C138) *
                       C10403 +
                   (C4621 * C440 + C10406 + C10406 + C4617 * C460 +
                    C4623 * C690 + C10407 + C10407 + C47839 * C692) *
                       C47872) *
                      C47770 * C47581 * C47563 * C112)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 ((((C4621 * C119 + C4626 + C4626 + C4617 * C133 +
                     C4623 * C120 + C4627 + C4627 + C47839 * C134) *
                        C10403 +
                    (C4621 * C434 + C5013 + C5013 + C4617 * C454 +
                     C4623 * C433 + C5012 + C5012 + C47839 * C453) *
                        C47872) *
                       C47770 * C47581 * C47891 -
                   ((C5534 + C5535) * C47872 + (C4853 + C4852) * C10403) *
                       C47770 * C47581 * C47879 +
                   ((C4855 + C4854) * C10403 + (C5982 + C5983) * C47872) *
                       C47770 * C47581 * C47852) *
                      C268 +
                  (((C4856 + C4857) * C10403 + (C5536 + C5537) * C47872) *
                       C47770 * C47581 * C47879 -
                   ((C4623 * C432 + C5019 + C5019 + C47839 * C452 +
                     C4621 * C433 + C5018 + C5018 + C4617 * C453) *
                        C47872 +
                    (C4623 * C121 + C4632 + C4632 + C47839 * C135 +
                     C4621 * C120 + C4633 + C4633 + C4617 * C134) *
                        C10403) *
                       C47770 * C47581 * C47891 -
                   ((C6332 + C6333) * C47872 + (C4859 + C4858) * C10403) *
                       C47770 * C47581 * C47852) *
                      C269 +
                  (((C4621 * C121 + C4634 + C4634 + C4617 * C135 +
                     C4623 * C122 + C4635 + C4635 + C47839 * C136) *
                        C10403 +
                    (C4621 * C432 + C5029 + C5029 + C4617 * C452 +
                     C4623 * C438 + C5028 + C5028 + C47839 * C458) *
                        C47872) *
                       C47770 * C47581 * C47891 -
                   ((C5538 + C5539) * C47872 + (C4861 + C4860) * C10403) *
                       C47770 * C47581 * C47879 +
                   ((C4863 + C4862) * C10403 +
                    (C4621 * C1187 + C5520 + C5520 + C4617 * C1205 +
                     C4623 * C1476 + C5521 + C5521 + C47839 * C1478) *
                        C47872) *
                       C47770 * C47581 * C47852) *
                      C47846)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 ((((C4621 * C119 + C4626 + C4626 + C4617 * C133 +
                     C4623 * C120 + C4627 + C4627 + C47839 * C134) *
                        C10403 +
                    (C10750 + C10751) * C47872) *
                       C47770 * C47581 * C976 -
                   ((C5534 + C5535) * C47872 + (C4853 + C4852) * C10403) *
                       C47770 * C47581 * C977 +
                   ((C4855 + C4854) * C10403 + (C5982 + C5983) * C47872) *
                       C47770 * C47581 * C47852) *
                      C47888 +
                  (((C4856 + C4857) * C10403 + (C5536 + C5537) * C47872) *
                       C47770 * C47581 * C977 -
                   ((C10755 + C10754) * C47872 +
                    (C4623 * C121 + C4632 + C4632 + C47839 * C135 +
                     C4621 * C120 + C4633 + C4633 + C4617 * C134) *
                        C10403) *
                       C47770 * C47581 * C976 -
                   ((C6332 + C6333) * C47872 + (C4859 + C4858) * C10403) *
                       C47770 * C47581 * C47852) *
                      C47875 +
                  (((C4621 * C121 + C4634 + C4634 + C4617 * C135 +
                     C4623 * C122 + C4635 + C4635 + C47839 * C136) *
                        C10403 +
                    (C10758 + C10759) * C47872) *
                       C47770 * C47581 * C976 -
                   ((C5538 + C5539) * C47872 + (C4861 + C4860) * C10403) *
                       C47770 * C47581 * C977 +
                   ((C4863 + C4862) * C10403 +
                    (C4621 * C1187 + C5520 + C5520 + C4617 * C1205 +
                     C4623 * C1476 + C5521 + C5521 + C47839 * C1478) *
                        C47872) *
                       C47770 * C47581 * C47852) *
                      C47846)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 (((C4621 * C119 + C4626 + C4626 + C4617 * C133 + C4623 * C120 +
                    C4627 + C4627 + C47839 * C134) *
                       C10403 +
                   (C10750 + C10751) * C47872) *
                      C47770 * C47581 * C1044 -
                  ((C5534 + C5535) * C47872 + (C4853 + C4852) * C10403) *
                      C47770 * C47581 * C1045 +
                  ((C4855 + C4854) * C10403 + (C5982 + C5983) * C47872) *
                      C47770 * C47581 * C1046 -
                  ((C6480 + C6481) * C47872 + (C5795 + C5794) * C10403) *
                      C47770 * C47581 * C1047 +
                  ((C5797 + C5796) * C10403 +
                   (C4621 * C6463 + C6474 + C6474 + C4617 * C6467 +
                    C4623 * C6464 + C6475 + C6475 + C47839 * C6468) *
                       C47872) *
                      C47770 * C47581 * C1048) *
                 C47535) /
                    (p * q * std::sqrt(p + q));
    d2ee[75] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                     C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                        C47785 * C15971 +
                    (C16204 + C16205) * C47785 * C47870) *
                       C47581 * C47622 -
                   ((C16206 + C16207) * C47785 * C47870 +
                    (C16205 + C16204) * C47785 * C15971) *
                       C47581 * C47629 +
                   ((C16207 + C16206) * C47785 * C15971 +
                    (C17140 + C17141) * C47785 * C47870) *
                       C47581 * C2742) *
                      C47540 +
                  (((C16208 + C16209) * C47785 * C15971 +
                    (C16210 + C16211) * C47785 * C47870) *
                       C47581 * C47629 -
                   ((C16209 + C16208) * C47785 * C47870 +
                    (C15975 * C121 + C15984 + C15984 + C47839 * C135 +
                     C15973 * C120 + C15985 + C15985 + C15969 * C134) *
                        C47785 * C15971) *
                       C47581 * C47622 -
                   ((C17466 + C17467) * C47785 * C47870 +
                    (C16211 + C16210) * C47785 * C15971) *
                       C47581 * C2742) *
                      C47549 +
                  (((C15973 * C121 + C15986 + C15986 + C15969 * C135 +
                     C15975 * C122 + C15987 + C15987 + C47839 * C136) *
                        C47785 * C15971 +
                    (C16212 + C16213) * C47785 * C47870) *
                       C47581 * C47622 -
                   ((C16214 + C16215) * C47785 * C47870 +
                    (C16213 + C16212) * C47785 * C15971) *
                       C47581 * C47629 +
                   ((C16215 + C16214) * C47785 * C15971 +
                    (C15973 * C1050 + C16178 + C16178 + C15969 * C1062 +
                     C15975 * C1324 + C16179 + C16179 + C47839 * C1326) *
                        C47785 * C47870) *
                       C47581 * C2742) *
                      C2745)) /
                (p * q * std::sqrt(p + q));
    d2ee[76] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                      C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                         C47785 * C15971 +
                     (C16204 + C16205) * C47785 * C47870) *
                        C47821 -
                    ((C16886 + C16887) * C47785 * C47870 +
                     (C15975 * C433 + C16364 + C16364 + C47839 * C453 +
                      C15973 * C434 + C16365 + C16365 + C15969 * C454) *
                         C47785 * C15971) *
                        C47668) *
                       C47622 +
                   (((C16887 + C16886) * C47785 * C15971 +
                     (C17322 + C17323) * C47785 * C47870) *
                        C47668 -
                    ((C16206 + C16207) * C47785 * C47870 +
                     (C16205 + C16204) * C47785 * C15971) *
                        C47821) *
                       C47629 +
                   (((C16207 + C16206) * C47785 * C15971 +
                     (C17140 + C17141) * C47785 * C47870) *
                        C47821 -
                    ((C17814 + C17815) * C47785 * C47870 +
                     (C17323 + C17322) * C47785 * C15971) *
                        C47668) *
                       C2742) *
                      C2482 +
                  ((((C15973 * C433 + C16370 + C16370 + C15969 * C453 +
                      C15975 * C432 + C16371 + C16371 + C47839 * C452) *
                         C47785 * C15971 +
                     (C16888 + C16889) * C47785 * C47870) *
                        C47668 -
                    ((C16209 + C16208) * C47785 * C47870 +
                     (C15975 * C121 + C15984 + C15984 + C47839 * C135 +
                      C15973 * C120 + C15985 + C15985 + C15969 * C134) *
                         C47785 * C15971) *
                        C47821) *
                       C47622 +
                   (((C16208 + C16209) * C47785 * C15971 +
                     (C16210 + C16211) * C47785 * C47870) *
                        C47821 -
                    ((C17672 + C17673) * C47785 * C47870 +
                     (C16889 + C16888) * C47785 * C15971) *
                        C47668) *
                       C47629 +
                   (((C17673 + C17672) * C47785 * C15971 +
                     (C15973 * C1581 + C17666 + C17666 + C15969 * C1587 +
                      C15975 * C1582 + C17667 + C17667 + C47839 * C1588) *
                         C47785 * C47870) *
                        C47668 -
                    ((C17466 + C17467) * C47785 * C47870 +
                     (C16211 + C16210) * C47785 * C15971) *
                        C47821) *
                       C2742) *
                      C47546)) /
                (p * q * std::sqrt(p + q));
    d2ee[77] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                     C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                        C47785 * C15971 +
                    (C16204 + C16205) * C47785 * C47870) *
                       C47581 * C47898 -
                   ((C16206 + C16207) * C47785 * C47870 +
                    (C16205 + C16204) * C47785 * C15971) *
                       C47581 * C47894 +
                   ((C16207 + C16206) * C47785 * C15971 +
                    (C17140 + C17141) * C47785 * C47870) *
                       C47581 * C47884 -
                   ((C17142 + C17143) * C47785 * C47870 +
                    (C17141 + C17140) * C47785 * C15971) *
                       C47581 * C47862) *
                      C2482 +
                  (((C16208 + C16209) * C47785 * C15971 +
                    (C16210 + C16211) * C47785 * C47870) *
                       C47581 * C47894 -
                   ((C16209 + C16208) * C47785 * C47870 +
                    (C15975 * C121 + C15984 + C15984 + C47839 * C135 +
                     C15973 * C120 + C15985 + C15985 + C15969 * C134) *
                        C47785 * C15971) *
                       C47581 * C47898 -
                   ((C17466 + C17467) * C47785 * C47870 +
                    (C16211 + C16210) * C47785 * C15971) *
                       C47581 * C47884 +
                   ((C17467 + C17466) * C47785 * C15971 +
                    (C15973 * C1054 + C17460 + C17460 + C15969 * C1066 +
                     C15975 * C1055 + C17461 + C17461 + C47839 * C1067) *
                        C47785 * C47870) *
                       C47581 * C47862) *
                      C47546)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                     C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                        C47785 * C15971 +
                    (C16204 + C16205) * C47785 * C47870) *
                       C47581 * C2374 -
                   ((C16206 + C16207) * C47785 * C47870 +
                    (C16205 + C16204) * C47785 * C15971) *
                       C47581 * C47626) *
                      C47897 +
                  (((C16208 + C16209) * C47785 * C15971 +
                    (C16210 + C16211) * C47785 * C47870) *
                       C47581 * C47626 -
                   ((C16209 + C16208) * C47785 * C47870 +
                    (C15975 * C121 + C15984 + C15984 + C47839 * C135 +
                     C15973 * C120 + C15985 + C15985 + C15969 * C134) *
                        C47785 * C15971) *
                       C47581 * C2374) *
                      C47890 +
                  (((C15973 * C121 + C15986 + C15986 + C15969 * C135 +
                     C15975 * C122 + C15987 + C15987 + C47839 * C136) *
                        C47785 * C15971 +
                    (C16212 + C16213) * C47785 * C47870) *
                       C47581 * C2374 -
                   ((C16214 + C16215) * C47785 * C47870 +
                    (C16213 + C16212) * C47785 * C15971) *
                       C47581 * C47626) *
                      C47877 +
                  (((C16526 + C16527) * C47785 * C15971 +
                    (C15973 * C278 + C16520 + C16520 + C15969 * C298 +
                     C15975 * C280 + C16521 + C16521 + C47839 * C300) *
                        C47785 * C47870) *
                       C47581 * C47626 -
                   ((C16527 + C16526) * C47785 * C47870 +
                    (C15975 * C123 + C15992 + C15992 + C47839 * C137 +
                     C15973 * C122 + C15993 + C15993 + C15969 * C136) *
                        C47785 * C15971) *
                       C47581 * C2374) *
                      C47856)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 (((((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                      C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                         C47785 * C15971 +
                     (C16204 + C16205) * C47785 * C47870) *
                        C47892 -
                    ((C16886 + C16887) * C47785 * C47870 +
                     (C15975 * C433 + C16364 + C16364 + C47839 * C453 +
                      C15973 * C434 + C16365 + C16365 + C15969 * C454) *
                         C47785 * C15971) *
                        C47881 +
                    ((C15973 * C435 + C16366 + C16366 + C15969 * C455 +
                      C15975 * C436 + C16367 + C16367 + C47839 * C456) *
                         C47785 * C15971 +
                     (C17320 + C17321) * C47785 * C47870) *
                        C47855) *
                       C2374 +
                   (((C16887 + C16886) * C47785 * C15971 +
                     (C17322 + C17323) * C47785 * C47870) *
                        C47881 -
                    ((C16206 + C16207) * C47785 * C47870 +
                     (C16205 + C16204) * C47785 * C15971) *
                        C47892 -
                    ((C17324 + C17325) * C47785 * C47870 +
                     (C17321 + C17320) * C47785 * C15971) *
                        C47855) *
                       C47626) *
                      C2482 +
                  ((((C15973 * C433 + C16370 + C16370 + C15969 * C453 +
                      C15975 * C432 + C16371 + C16371 + C47839 * C452) *
                         C47785 * C15971 +
                     (C16888 + C16889) * C47785 * C47870) *
                        C47881 -
                    ((C16209 + C16208) * C47785 * C47870 +
                     (C15975 * C121 + C15984 + C15984 + C47839 * C135 +
                      C15973 * C120 + C15985 + C15985 + C15969 * C134) *
                         C47785 * C15971) *
                        C47892 -
                    ((C18402 + C18403) * C47785 * C47870 +
                     (C15975 * C437 + C16376 + C16376 + C47839 * C457 +
                      C15973 * C436 + C16377 + C16377 + C15969 * C456) *
                         C47785 * C15971) *
                        C47855) *
                       C2374 +
                   (((C16208 + C16209) * C47785 * C15971 +
                     (C16210 + C16211) * C47785 * C47870) *
                        C47892 -
                    ((C17672 + C17673) * C47785 * C47870 +
                     (C16889 + C16888) * C47785 * C15971) *
                        C47881 +
                    ((C18403 + C18402) * C47785 * C15971 +
                     (C15973 * C1191 + C18396 + C18396 + C15969 * C1209 +
                      C15975 * C1192 + C18397 + C18397 + C47839 * C1210) *
                         C47785 * C47870) *
                        C47855) *
                       C47626) *
                      C47546)) /
                    (p * q * std::sqrt(p + q));
    d2ee[78] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                      C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                         C47785 * C15971 +
                     (C16204 + C16205) * C47785 * C47870) *
                        C47821 -
                    ((C16886 + C16887) * C47785 * C47870 +
                     (C15975 * C433 + C16364 + C16364 + C47839 * C453 +
                      C15973 * C434 + C16365 + C16365 + C15969 * C454) *
                         C47785 * C15971) *
                        C47668) *
                       C2374 +
                   (((C16887 + C16886) * C47785 * C15971 +
                     (C17322 + C17323) * C47785 * C47870) *
                        C47668 -
                    ((C16206 + C16207) * C47785 * C47870 +
                     (C16205 + C16204) * C47785 * C15971) *
                        C47821) *
                       C47626) *
                      C47540 +
                  ((((C15973 * C433 + C16370 + C16370 + C15969 * C453 +
                      C15975 * C432 + C16371 + C16371 + C47839 * C452) *
                         C47785 * C15971 +
                     (C16888 + C16889) * C47785 * C47870) *
                        C47668 -
                    ((C16209 + C16208) * C47785 * C47870 +
                     (C15975 * C121 + C15984 + C15984 + C47839 * C135 +
                      C15973 * C120 + C15985 + C15985 + C15969 * C134) *
                         C47785 * C15971) *
                        C47821) *
                       C2374 +
                   (((C16208 + C16209) * C47785 * C15971 +
                     (C16210 + C16211) * C47785 * C47870) *
                        C47821 -
                    ((C17672 + C17673) * C47785 * C47870 +
                     (C16889 + C16888) * C47785 * C15971) *
                        C47668) *
                       C47626) *
                      C47549 +
                  ((((C15973 * C121 + C15986 + C15986 + C15969 * C135 +
                      C15975 * C122 + C15987 + C15987 + C47839 * C136) *
                         C47785 * C15971 +
                     (C16212 + C16213) * C47785 * C47870) *
                        C47821 -
                    ((C16890 + C16891) * C47785 * C47870 +
                     (C15975 * C438 + C16380 + C16380 + C47839 * C458 +
                      C15973 * C432 + C16381 + C16381 + C15969 * C452) *
                         C47785 * C15971) *
                        C47668) *
                       C2374 +
                   (((C16891 + C16890) * C47785 * C15971 +
                     (C15973 * C1187 + C16872 + C16872 + C15969 * C1205 +
                      C15975 * C1476 + C16873 + C16873 + C47839 * C1478) *
                         C47785 * C47870) *
                        C47668 -
                    ((C16214 + C16215) * C47785 * C47870 +
                     (C16213 + C16212) * C47785 * C15971) *
                        C47821) *
                       C47626) *
                      C2745)) /
                (p * q * std::sqrt(p + q));
    d2ee[79] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                     C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                        C47785 * C15971 +
                    (C16204 + C16205) * C47785 * C47870) *
                       C47581 * C2374 -
                   ((C16206 + C16207) * C47785 * C47870 +
                    (C16205 + C16204) * C47785 * C15971) *
                       C47581 * C47626) *
                      C47897 +
                  (((C16208 + C16209) * C47785 * C15971 +
                    (C16210 + C16211) * C47785 * C47870) *
                       C47581 * C47626 -
                   ((C16209 + C16208) * C47785 * C47870 +
                    (C15975 * C121 + C15984 + C15984 + C47839 * C135 +
                     C15973 * C120 + C15985 + C15985 + C15969 * C134) *
                        C47785 * C15971) *
                       C47581 * C2374) *
                      C47890 +
                  (((C15973 * C121 + C15986 + C15986 + C15969 * C135 +
                     C15975 * C122 + C15987 + C15987 + C47839 * C136) *
                        C47785 * C15971 +
                    (C16212 + C16213) * C47785 * C47870) *
                       C47581 * C2374 -
                   ((C16214 + C16215) * C47785 * C47870 +
                    (C16213 + C16212) * C47785 * C15971) *
                       C47581 * C47626) *
                      C47877 +
                  (((C16526 + C16527) * C47785 * C15971 +
                    (C15973 * C278 + C16520 + C16520 + C15969 * C298 +
                     C15975 * C280 + C16521 + C16521 + C47839 * C300) *
                        C47785 * C47870) *
                       C47581 * C47626 -
                   ((C16527 + C16526) * C47785 * C47870 +
                    (C15975 * C123 + C15992 + C15992 + C47839 * C137 +
                     C15973 * C122 + C15993 + C15993 + C15969 * C136) *
                        C47785 * C15971) *
                       C47581 * C2374) *
                      C47856)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                     C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                        C47785 * C15971 +
                    (C16204 + C16205) * C47785 * C47870) *
                       C47581 * C47898 -
                   ((C16206 + C16207) * C47785 * C47870 +
                    (C16205 + C16204) * C47785 * C15971) *
                       C47581 * C47894 +
                   ((C16207 + C16206) * C47785 * C15971 +
                    (C17140 + C17141) * C47785 * C47870) *
                       C47581 * C47884 -
                   ((C17142 + C17143) * C47785 * C47870 +
                    (C17141 + C17140) * C47785 * C15971) *
                       C47581 * C47862) *
                      C2482 +
                  (((C16208 + C16209) * C47785 * C15971 +
                    (C16210 + C16211) * C47785 * C47870) *
                       C47581 * C47894 -
                   ((C16209 + C16208) * C47785 * C47870 +
                    (C15975 * C121 + C15984 + C15984 + C47839 * C135 +
                     C15973 * C120 + C15985 + C15985 + C15969 * C134) *
                        C47785 * C15971) *
                       C47581 * C47898 -
                   ((C17466 + C17467) * C47785 * C47870 +
                    (C16211 + C16210) * C47785 * C15971) *
                       C47581 * C47884 +
                   ((C17467 + C17466) * C47785 * C15971 +
                    (C15973 * C1054 + C17460 + C17460 + C15969 * C1066 +
                     C15975 * C1055 + C17461 + C17461 + C47839 * C1067) *
                        C47785 * C47870) *
                       C47581 * C47862) *
                      C47546)) /
                    (p * q * std::sqrt(p + q));
    d2ee[80] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                      C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                         C47785 * C15971 +
                     (C16204 + C16205) * C47785 * C47870) *
                        C3136 -
                    ((C16886 + C16887) * C47785 * C47870 +
                     (C15975 * C433 + C16364 + C16364 + C47839 * C453 +
                      C15973 * C434 + C16365 + C16365 + C15969 * C454) *
                         C47785 * C15971) *
                        C47668) *
                       C47622 +
                   (((C16887 + C16886) * C47785 * C15971 +
                     (C17322 + C17323) * C47785 * C47870) *
                        C47668 -
                    ((C16206 + C16207) * C47785 * C47870 +
                     (C16205 + C16204) * C47785 * C15971) *
                        C3136) *
                       C47629 +
                   (((C16207 + C16206) * C47785 * C15971 +
                     (C17140 + C17141) * C47785 * C47870) *
                        C3136 -
                    ((C17814 + C17815) * C47785 * C47870 +
                     (C17323 + C17322) * C47785 * C15971) *
                        C47668) *
                       C2742) *
                      C47806 +
                  ((((C15973 * C433 + C16370 + C16370 + C15969 * C453 +
                      C15975 * C432 + C16371 + C16371 + C47839 * C452) *
                         C47785 * C15971 +
                     (C16888 + C16889) * C47785 * C47870) *
                        C47668 -
                    ((C16209 + C16208) * C47785 * C47870 +
                     (C15975 * C121 + C15984 + C15984 + C47839 * C135 +
                      C15973 * C120 + C15985 + C15985 + C15969 * C134) *
                         C47785 * C15971) *
                        C3136) *
                       C47622 +
                   (((C16208 + C16209) * C47785 * C15971 +
                     (C16210 + C16211) * C47785 * C47870) *
                        C3136 -
                    ((C17672 + C17673) * C47785 * C47870 +
                     (C16889 + C16888) * C47785 * C15971) *
                        C47668) *
                       C47629 +
                   (((C17673 + C17672) * C47785 * C15971 +
                     (C15973 * C1581 + C17666 + C17666 + C15969 * C1587 +
                      C15975 * C1582 + C17667 + C17667 + C47839 * C1588) *
                         C47785 * C47870) *
                        C47668 -
                    ((C17466 + C17467) * C47785 * C47870 +
                     (C16211 + C16210) * C47785 * C15971) *
                        C3136) *
                       C2742) *
                      C47546)) /
                (p * q * std::sqrt(p + q));
    d2ee[81] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                     C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                        C47785 * C15971 +
                    (C16204 + C16205) * C47785 * C47870) *
                       C47664 -
                   ((C16886 + C16887) * C47785 * C47870 +
                    (C15975 * C433 + C16364 + C16364 + C47839 * C453 +
                     C15973 * C434 + C16365 + C16365 + C15969 * C454) *
                        C47785 * C15971) *
                       C47671 +
                   ((C15973 * C435 + C16366 + C16366 + C15969 * C455 +
                     C15975 * C436 + C16367 + C16367 + C47839 * C456) *
                        C47785 * C15971 +
                    (C17320 + C17321) * C47785 * C47870) *
                       C3644) *
                      C47622 +
                  (((C16887 + C16886) * C47785 * C15971 +
                    (C17322 + C17323) * C47785 * C47870) *
                       C47671 -
                   ((C16206 + C16207) * C47785 * C47870 +
                    (C16205 + C16204) * C47785 * C15971) *
                       C47664 -
                   ((C17324 + C17325) * C47785 * C47870 +
                    (C17321 + C17320) * C47785 * C15971) *
                       C3644) *
                      C47629 +
                  (((C16207 + C16206) * C47785 * C15971 +
                    (C17140 + C17141) * C47785 * C47870) *
                       C47664 -
                   ((C17814 + C17815) * C47785 * C47870 +
                    (C17323 + C17322) * C47785 * C15971) *
                       C47671 +
                   ((C17325 + C17324) * C47785 * C15971 +
                    (C15973 * C5943 + C17306 + C17306 + C15969 * C5947 +
                     C15975 * C5944 + C17307 + C17307 + C47839 * C5948) *
                        C47785 * C47870) *
                       C3644) *
                      C2742) *
                 C47535) /
                (p * q * std::sqrt(p + q));
    d2ee[82] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                     C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                        C47785 * C15971 +
                    (C16204 + C16205) * C47785 * C47870) *
                       C3136 -
                   ((C16886 + C16887) * C47785 * C47870 +
                    (C15975 * C433 + C16364 + C16364 + C47839 * C453 +
                     C15973 * C434 + C16365 + C16365 + C15969 * C454) *
                        C47785 * C15971) *
                       C47668) *
                      C47898 +
                  (((C16887 + C16886) * C47785 * C15971 +
                    (C17322 + C17323) * C47785 * C47870) *
                       C47668 -
                   ((C16206 + C16207) * C47785 * C47870 +
                    (C16205 + C16204) * C47785 * C15971) *
                       C3136) *
                      C47894 +
                  (((C16207 + C16206) * C47785 * C15971 +
                    (C17140 + C17141) * C47785 * C47870) *
                       C3136 -
                   ((C17814 + C17815) * C47785 * C47870 +
                    (C17323 + C17322) * C47785 * C15971) *
                       C47668) *
                      C47884 +
                  (((C17815 + C17814) * C47785 * C15971 +
                    (C15973 * C6463 + C17808 + C17808 + C15969 * C6467 +
                     C15975 * C6464 + C17809 + C17809 + C47839 * C6468) *
                        C47785 * C47870) *
                       C47668 -
                   ((C17142 + C17143) * C47785 * C47870 +
                    (C17141 + C17140) * C47785 * C15971) *
                       C3136) *
                      C47862) *
                 C47535) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                      C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                         C47785 * C15971 +
                     (C16204 + C16205) * C47785 * C47870) *
                        C3136 -
                    ((C16886 + C16887) * C47785 * C47870 +
                     (C15975 * C433 + C16364 + C16364 + C47839 * C453 +
                      C15973 * C434 + C16365 + C16365 + C15969 * C454) *
                         C47785 * C15971) *
                        C47668) *
                       C2374 +
                   (((C16887 + C16886) * C47785 * C15971 +
                     (C17322 + C17323) * C47785 * C47870) *
                        C47668 -
                    ((C16206 + C16207) * C47785 * C47870 +
                     (C16205 + C16204) * C47785 * C15971) *
                        C3136) *
                       C47626) *
                      C47888 +
                  ((((C15973 * C433 + C16370 + C16370 + C15969 * C453 +
                      C15975 * C432 + C16371 + C16371 + C47839 * C452) *
                         C47785 * C15971 +
                     (C16888 + C16889) * C47785 * C47870) *
                        C47668 -
                    ((C16209 + C16208) * C47785 * C47870 +
                     (C15975 * C121 + C15984 + C15984 + C47839 * C135 +
                      C15973 * C120 + C15985 + C15985 + C15969 * C134) *
                         C47785 * C15971) *
                        C3136) *
                       C2374 +
                   (((C16208 + C16209) * C47785 * C15971 +
                     (C16210 + C16211) * C47785 * C47870) *
                        C3136 -
                    ((C17672 + C17673) * C47785 * C47870 +
                     (C16889 + C16888) * C47785 * C15971) *
                        C47668) *
                       C47626) *
                      C47875 +
                  ((((C15973 * C121 + C15986 + C15986 + C15969 * C135 +
                      C15975 * C122 + C15987 + C15987 + C47839 * C136) *
                         C47785 * C15971 +
                     (C16212 + C16213) * C47785 * C47870) *
                        C3136 -
                    ((C16890 + C16891) * C47785 * C47870 +
                     (C15975 * C438 + C16380 + C16380 + C47839 * C458 +
                      C15973 * C432 + C16381 + C16381 + C15969 * C452) *
                         C47785 * C15971) *
                        C47668) *
                       C2374 +
                   (((C16891 + C16890) * C47785 * C15971 +
                     (C15973 * C1187 + C16872 + C16872 + C15969 * C1205 +
                      C15975 * C1476 + C16873 + C16873 + C47839 * C1478) *
                         C47785 * C47870) *
                        C47668 -
                    ((C16214 + C16215) * C47785 * C47870 +
                     (C16213 + C16212) * C47785 * C15971) *
                        C3136) *
                       C47626) *
                      C47846)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 ((((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                     C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                        C47785 * C15971 +
                    (C16204 + C16205) * C47785 * C47870) *
                       C47899 -
                   ((C16886 + C16887) * C47785 * C47870 +
                    (C15975 * C433 + C16364 + C16364 + C47839 * C453 +
                     C15973 * C434 + C16365 + C16365 + C15969 * C454) *
                        C47785 * C15971) *
                       C47896 +
                   ((C15973 * C435 + C16366 + C16366 + C15969 * C455 +
                     C15975 * C436 + C16367 + C16367 + C47839 * C456) *
                        C47785 * C15971 +
                    (C17320 + C17321) * C47785 * C47870) *
                       C47887 -
                   ((C18678 + C18679) * C47785 * C47870 +
                    (C15975 * C1883 + C18192 + C18192 + C47839 * C1895 +
                     C15973 * C1884 + C18193 + C18193 + C15969 * C1896) *
                        C47785 * C15971) *
                       C47868) *
                      C2374 +
                  (((C16887 + C16886) * C47785 * C15971 +
                    (C17322 + C17323) * C47785 * C47870) *
                       C47896 -
                   ((C16206 + C16207) * C47785 * C47870 +
                    (C16205 + C16204) * C47785 * C15971) *
                       C47899 -
                   ((C17324 + C17325) * C47785 * C47870 +
                    (C17321 + C17320) * C47785 * C15971) *
                       C47887 +
                   ((C18679 + C18678) * C47785 * C15971 +
                    (C15973 * C7339 + C18672 + C18672 + C15969 * C7343 +
                     C15975 * C7340 + C18673 + C18673 + C47839 * C7344) *
                        C47785 * C47870) *
                       C47868) *
                      C47626) *
                 C47535) /
                    (p * q * std::sqrt(p + q));
    d2ee[83] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                      C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                         C47785 * C15971 +
                     (C16204 + C16205) * C47785 * C47870) *
                        C47664 -
                    ((C16886 + C16887) * C47785 * C47870 +
                     (C15975 * C433 + C16364 + C16364 + C47839 * C453 +
                      C15973 * C434 + C16365 + C16365 + C15969 * C454) *
                         C47785 * C15971) *
                        C47671 +
                    ((C15973 * C435 + C16366 + C16366 + C15969 * C455 +
                      C15975 * C436 + C16367 + C16367 + C47839 * C456) *
                         C47785 * C15971 +
                     (C17320 + C17321) * C47785 * C47870) *
                        C3644) *
                       C2374 +
                   (((C16887 + C16886) * C47785 * C15971 +
                     (C17322 + C17323) * C47785 * C47870) *
                        C47671 -
                    ((C16206 + C16207) * C47785 * C47870 +
                     (C16205 + C16204) * C47785 * C15971) *
                        C47664 -
                    ((C17324 + C17325) * C47785 * C47870 +
                     (C17321 + C17320) * C47785 * C15971) *
                        C3644) *
                       C47626) *
                      C47806 +
                  ((((C15973 * C433 + C16370 + C16370 + C15969 * C453 +
                      C15975 * C432 + C16371 + C16371 + C47839 * C452) *
                         C47785 * C15971 +
                     (C16888 + C16889) * C47785 * C47870) *
                        C47671 -
                    ((C16209 + C16208) * C47785 * C47870 +
                     (C15975 * C121 + C15984 + C15984 + C47839 * C135 +
                      C15973 * C120 + C15985 + C15985 + C15969 * C134) *
                         C47785 * C15971) *
                        C47664 -
                    ((C18402 + C18403) * C47785 * C47870 +
                     (C15975 * C437 + C16376 + C16376 + C47839 * C457 +
                      C15973 * C436 + C16377 + C16377 + C15969 * C456) *
                         C47785 * C15971) *
                        C3644) *
                       C2374 +
                   (((C16208 + C16209) * C47785 * C15971 +
                     (C16210 + C16211) * C47785 * C47870) *
                        C47664 -
                    ((C17672 + C17673) * C47785 * C47870 +
                     (C16889 + C16888) * C47785 * C15971) *
                        C47671 +
                    ((C18403 + C18402) * C47785 * C15971 +
                     (C15973 * C1191 + C18396 + C18396 + C15969 * C1209 +
                      C15975 * C1192 + C18397 + C18397 + C47839 * C1210) *
                         C47785 * C47870) *
                        C3644) *
                       C47626) *
                      C47546)) /
                (p * q * std::sqrt(p + q));
    d2ee[84] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                      C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                         C47785 * C15971 +
                     (C16204 + C16205) * C47785 * C47870) *
                        C3136 -
                    ((C16886 + C16887) * C47785 * C47870 +
                     (C15975 * C433 + C16364 + C16364 + C47839 * C453 +
                      C15973 * C434 + C16365 + C16365 + C15969 * C454) *
                         C47785 * C15971) *
                        C47668) *
                       C2374 +
                   (((C16887 + C16886) * C47785 * C15971 +
                     (C17322 + C17323) * C47785 * C47870) *
                        C47668 -
                    ((C16206 + C16207) * C47785 * C47870 +
                     (C16205 + C16204) * C47785 * C15971) *
                        C3136) *
                       C47626) *
                      C47888 +
                  ((((C15973 * C433 + C16370 + C16370 + C15969 * C453 +
                      C15975 * C432 + C16371 + C16371 + C47839 * C452) *
                         C47785 * C15971 +
                     (C16888 + C16889) * C47785 * C47870) *
                        C47668 -
                    ((C16209 + C16208) * C47785 * C47870 +
                     (C15975 * C121 + C15984 + C15984 + C47839 * C135 +
                      C15973 * C120 + C15985 + C15985 + C15969 * C134) *
                         C47785 * C15971) *
                        C3136) *
                       C2374 +
                   (((C16208 + C16209) * C47785 * C15971 +
                     (C16210 + C16211) * C47785 * C47870) *
                        C3136 -
                    ((C17672 + C17673) * C47785 * C47870 +
                     (C16889 + C16888) * C47785 * C15971) *
                        C47668) *
                       C47626) *
                      C47875 +
                  ((((C15973 * C121 + C15986 + C15986 + C15969 * C135 +
                      C15975 * C122 + C15987 + C15987 + C47839 * C136) *
                         C47785 * C15971 +
                     (C16212 + C16213) * C47785 * C47870) *
                        C3136 -
                    ((C16890 + C16891) * C47785 * C47870 +
                     (C15975 * C438 + C16380 + C16380 + C47839 * C458 +
                      C15973 * C432 + C16381 + C16381 + C15969 * C452) *
                         C47785 * C15971) *
                        C47668) *
                       C2374 +
                   (((C16891 + C16890) * C47785 * C15971 +
                     (C15973 * C1187 + C16872 + C16872 + C15969 * C1205 +
                      C15975 * C1476 + C16873 + C16873 + C47839 * C1478) *
                         C47785 * C47870) *
                        C47668 -
                    ((C16214 + C16215) * C47785 * C47870 +
                     (C16213 + C16212) * C47785 * C15971) *
                        C3136) *
                       C47626) *
                      C47846)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                     C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                        C47785 * C15971 +
                    (C16204 + C16205) * C47785 * C47870) *
                       C3136 -
                   ((C16886 + C16887) * C47785 * C47870 +
                    (C15975 * C433 + C16364 + C16364 + C47839 * C453 +
                     C15973 * C434 + C16365 + C16365 + C15969 * C454) *
                        C47785 * C15971) *
                       C47668) *
                      C47898 +
                  (((C16887 + C16886) * C47785 * C15971 +
                    (C17322 + C17323) * C47785 * C47870) *
                       C47668 -
                   ((C16206 + C16207) * C47785 * C47870 +
                    (C16205 + C16204) * C47785 * C15971) *
                       C3136) *
                      C47894 +
                  (((C16207 + C16206) * C47785 * C15971 +
                    (C17140 + C17141) * C47785 * C47870) *
                       C3136 -
                   ((C17814 + C17815) * C47785 * C47870 +
                    (C17323 + C17322) * C47785 * C15971) *
                       C47668) *
                      C47884 +
                  (((C17815 + C17814) * C47785 * C15971 +
                    (C15973 * C6463 + C17808 + C17808 + C15969 * C6467 +
                     C15975 * C6464 + C17809 + C17809 + C47839 * C6468) *
                        C47785 * C47870) *
                       C47668 -
                   ((C17142 + C17143) * C47785 * C47870 +
                    (C17141 + C17140) * C47785 * C15971) *
                       C3136) *
                      C47862) *
                 C47535) /
                    (p * q * std::sqrt(p + q));
    d2ee[85] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                     C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                        C47785 * C15971 +
                    (C16204 + C16205) * C47785 * C47870) *
                       C47581 * C1318 -
                   ((C16206 + C16207) * C47785 * C47870 +
                    (C16205 + C16204) * C47785 * C15971) *
                       C47581 * C1319 +
                   ((C16207 + C16206) * C47785 * C15971 +
                    (C17140 + C17141) * C47785 * C47870) *
                       C47581 * C1320 -
                   ((C17142 + C17143) * C47785 * C47870 +
                    (C17141 + C17140) * C47785 * C15971) *
                       C47581 * C47862) *
                      C47806 +
                  (((C16208 + C16209) * C47785 * C15971 +
                    (C16210 + C16211) * C47785 * C47870) *
                       C47581 * C1319 -
                   ((C16209 + C16208) * C47785 * C47870 +
                    (C15975 * C121 + C15984 + C15984 + C47839 * C135 +
                     C15973 * C120 + C15985 + C15985 + C15969 * C134) *
                        C47785 * C15971) *
                       C47581 * C1318 -
                   ((C17466 + C17467) * C47785 * C47870 +
                    (C16211 + C16210) * C47785 * C15971) *
                       C47581 * C1320 +
                   ((C17467 + C17466) * C47785 * C15971 +
                    (C15973 * C1054 + C17460 + C17460 + C15969 * C1066 +
                     C15975 * C1055 + C17461 + C17461 + C47839 * C1067) *
                        C47785 * C47870) *
                       C47581 * C47862) *
                      C47546)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                     C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                        C47785 * C15971 +
                    (C16204 + C16205) * C47785 * C47870) *
                       C47581 * C47820 -
                   ((C16206 + C16207) * C47785 * C47870 +
                    (C16205 + C16204) * C47785 * C15971) *
                       C47581 * C47626) *
                      C580 +
                  (((C16208 + C16209) * C47785 * C15971 +
                    (C16210 + C16211) * C47785 * C47870) *
                       C47581 * C47626 -
                   ((C16209 + C16208) * C47785 * C47870 +
                    (C15975 * C121 + C15984 + C15984 + C47839 * C135 +
                     C15973 * C120 + C15985 + C15985 + C15969 * C134) *
                        C47785 * C15971) *
                       C47581 * C47820) *
                      C581 +
                  (((C15973 * C121 + C15986 + C15986 + C15969 * C135 +
                     C15975 * C122 + C15987 + C15987 + C47839 * C136) *
                        C47785 * C15971 +
                    (C16212 + C16213) * C47785 * C47870) *
                       C47581 * C47820 -
                   ((C16214 + C16215) * C47785 * C47870 +
                    (C16213 + C16212) * C47785 * C15971) *
                       C47581 * C47626) *
                      C582 +
                  (((C16526 + C16527) * C47785 * C15971 +
                    (C15973 * C278 + C16520 + C16520 + C15969 * C298 +
                     C15975 * C280 + C16521 + C16521 + C47839 * C300) *
                        C47785 * C47870) *
                       C47581 * C47626 -
                   ((C16527 + C16526) * C47785 * C47870 +
                    (C15975 * C123 + C15992 + C15992 + C47839 * C137 +
                     C15973 * C122 + C15993 + C15993 + C15969 * C136) *
                        C47785 * C15971) *
                       C47581 * C47820) *
                      C47856)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 (((((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                      C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                         C47785 * C15971 +
                     (C16204 + C16205) * C47785 * C47870) *
                        C1702 -
                    ((C16886 + C16887) * C47785 * C47870 +
                     (C15975 * C433 + C16364 + C16364 + C47839 * C453 +
                      C15973 * C434 + C16365 + C16365 + C15969 * C454) *
                         C47785 * C15971) *
                        C1703 +
                    ((C15973 * C435 + C16366 + C16366 + C15969 * C455 +
                      C15975 * C436 + C16367 + C16367 + C47839 * C456) *
                         C47785 * C15971 +
                     (C17320 + C17321) * C47785 * C47870) *
                        C47855) *
                       C47820 +
                   (((C16887 + C16886) * C47785 * C15971 +
                     (C17322 + C17323) * C47785 * C47870) *
                        C1703 -
                    ((C16206 + C16207) * C47785 * C47870 +
                     (C16205 + C16204) * C47785 * C15971) *
                        C1702 -
                    ((C17324 + C17325) * C47785 * C47870 +
                     (C17321 + C17320) * C47785 * C15971) *
                        C47855) *
                       C47626) *
                      C47806 +
                  ((((C15973 * C433 + C16370 + C16370 + C15969 * C453 +
                      C15975 * C432 + C16371 + C16371 + C47839 * C452) *
                         C47785 * C15971 +
                     (C16888 + C16889) * C47785 * C47870) *
                        C1703 -
                    ((C16209 + C16208) * C47785 * C47870 +
                     (C15975 * C121 + C15984 + C15984 + C47839 * C135 +
                      C15973 * C120 + C15985 + C15985 + C15969 * C134) *
                         C47785 * C15971) *
                        C1702 -
                    ((C18402 + C18403) * C47785 * C47870 +
                     (C15975 * C437 + C16376 + C16376 + C47839 * C457 +
                      C15973 * C436 + C16377 + C16377 + C15969 * C456) *
                         C47785 * C15971) *
                        C47855) *
                       C47820 +
                   (((C16208 + C16209) * C47785 * C15971 +
                     (C16210 + C16211) * C47785 * C47870) *
                        C1702 -
                    ((C17672 + C17673) * C47785 * C47870 +
                     (C16889 + C16888) * C47785 * C15971) *
                        C1703 +
                    ((C18403 + C18402) * C47785 * C15971 +
                     (C15973 * C1191 + C18396 + C18396 + C15969 * C1209 +
                      C15975 * C1192 + C18397 + C18397 + C47839 * C1210) *
                         C47785 * C47870) *
                        C47855) *
                       C47626) *
                      C47546)) /
                    (p * q * std::sqrt(p + q));
    d2ee[86] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                     C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                        C47785 * C15971 +
                    (C16204 + C16205) * C47785 * C47870) *
                       C47821 -
                   ((C16886 + C16887) * C47785 * C47870 +
                    (C15975 * C433 + C16364 + C16364 + C47839 * C453 +
                     C15973 * C434 + C16365 + C16365 + C15969 * C454) *
                        C47785 * C15971) *
                       C47668) *
                      C1318 +
                  (((C16887 + C16886) * C47785 * C15971 +
                    (C17322 + C17323) * C47785 * C47870) *
                       C47668 -
                   ((C16206 + C16207) * C47785 * C47870 +
                    (C16205 + C16204) * C47785 * C15971) *
                       C47821) *
                      C1319 +
                  (((C16207 + C16206) * C47785 * C15971 +
                    (C17140 + C17141) * C47785 * C47870) *
                       C47821 -
                   ((C17814 + C17815) * C47785 * C47870 +
                    (C17323 + C17322) * C47785 * C15971) *
                       C47668) *
                      C1320 +
                  (((C17815 + C17814) * C47785 * C15971 +
                    (C15973 * C6463 + C17808 + C17808 + C15969 * C6467 +
                     C15975 * C6464 + C17809 + C17809 + C47839 * C6468) *
                        C47785 * C47870) *
                       C47668 -
                   ((C17142 + C17143) * C47785 * C47870 +
                    (C17141 + C17140) * C47785 * C15971) *
                       C47821) *
                      C47862) *
                 C47535) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                      C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                         C47785 * C15971 +
                     (C16204 + C16205) * C47785 * C47870) *
                        C47821 -
                    ((C16886 + C16887) * C47785 * C47870 +
                     (C15975 * C433 + C16364 + C16364 + C47839 * C453 +
                      C15973 * C434 + C16365 + C16365 + C15969 * C454) *
                         C47785 * C15971) *
                        C47668) *
                       C47820 +
                   (((C16887 + C16886) * C47785 * C15971 +
                     (C15973 * C1189 + C16860 + C16860 + C15969 * C1207 +
                      C15975 * C1188 + C16861 + C16861 + C47839 * C1206) *
                         C47785 * C47870) *
                        C47668 -
                    ((C16206 + C16207) * C47785 * C47870 +
                     (C16205 + C16204) * C47785 * C15971) *
                        C47821) *
                       C47626) *
                      C268 +
                  ((((C15973 * C433 + C16370 + C16370 + C15969 * C453 +
                      C15975 * C432 + C16371 + C16371 + C47839 * C452) *
                         C47785 * C15971 +
                     (C16888 + C16889) * C47785 * C47870) *
                        C47668 -
                    ((C16209 + C16208) * C47785 * C47870 +
                     (C15975 * C121 + C15984 + C15984 + C47839 * C135 +
                      C15973 * C120 + C15985 + C15985 + C15969 * C134) *
                         C47785 * C15971) *
                        C47821) *
                       C47820 +
                   (((C16208 + C16209) * C47785 * C15971 +
                     (C16210 + C16211) * C47785 * C47870) *
                        C47821 -
                    ((C15975 * C1187 + C16866 + C16866 + C47839 * C1205 +
                      C15973 * C1188 + C16867 + C16867 + C15969 * C1206) *
                         C47785 * C47870 +
                     (C16889 + C16888) * C47785 * C15971) *
                        C47668) *
                       C47626) *
                      C269 +
                  ((((C15973 * C121 + C15986 + C15986 + C15969 * C135 +
                      C15975 * C122 + C15987 + C15987 + C47839 * C136) *
                         C47785 * C15971 +
                     (C16212 + C16213) * C47785 * C47870) *
                        C47821 -
                    ((C16890 + C16891) * C47785 * C47870 +
                     (C15975 * C438 + C16380 + C16380 + C47839 * C458 +
                      C15973 * C432 + C16381 + C16381 + C15969 * C452) *
                         C47785 * C15971) *
                        C47668) *
                       C47820 +
                   (((C16891 + C16890) * C47785 * C15971 +
                     (C15973 * C1187 + C16872 + C16872 + C15969 * C1205 +
                      C15975 * C1476 + C16873 + C16873 + C47839 * C1478) *
                         C47785 * C47870) *
                        C47668 -
                    ((C16214 + C16215) * C47785 * C47870 +
                     (C16213 + C16212) * C47785 * C15971) *
                        C47821) *
                       C47626) *
                      C47846)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 ((((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                     C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                        C47785 * C15971 +
                    (C16204 + C16205) * C47785 * C47870) *
                       C2156 -
                   ((C16886 + C16887) * C47785 * C47870 +
                    (C15975 * C433 + C16364 + C16364 + C47839 * C453 +
                     C15973 * C434 + C16365 + C16365 + C15969 * C454) *
                        C47785 * C15971) *
                       C2157 +
                   ((C15973 * C435 + C16366 + C16366 + C15969 * C455 +
                     C15975 * C436 + C16367 + C16367 + C47839 * C456) *
                        C47785 * C15971 +
                    (C17320 + C17321) * C47785 * C47870) *
                       C2158 -
                   ((C18678 + C18679) * C47785 * C47870 +
                    (C15975 * C1883 + C18192 + C18192 + C47839 * C1895 +
                     C15973 * C1884 + C18193 + C18193 + C15969 * C1896) *
                        C47785 * C15971) *
                       C47868) *
                      C47820 +
                  (((C16887 + C16886) * C47785 * C15971 +
                    (C17322 + C17323) * C47785 * C47870) *
                       C2157 -
                   ((C16206 + C16207) * C47785 * C47870 +
                    (C16205 + C16204) * C47785 * C15971) *
                       C2156 -
                   ((C17324 + C17325) * C47785 * C47870 +
                    (C17321 + C17320) * C47785 * C15971) *
                       C2158 +
                   ((C18679 + C18678) * C47785 * C15971 +
                    (C15973 * C7339 + C18672 + C18672 + C15969 * C7343 +
                     C15975 * C7340 + C18673 + C18673 + C47839 * C7344) *
                        C47785 * C47870) *
                       C47868) *
                      C47626) *
                 C47535) /
                    (p * q * std::sqrt(p + q));
    d2ee[87] += (0.5 * std::pow(Pi, 2.5) *
                     (((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                        C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                           C47785 * C15971 +
                       (C15973 * C273 + C15980 + C15980 + C15969 * C293 +
                        C15975 * C272 + C15981 + C15981 + C47839 * C292) *
                           C47785 * C47870) *
                          C47581 * C47563 * C108 -
                      ((C15975 * C271 + C15982 + C15982 + C47839 * C291 +
                        C15973 * C272 + C15983 + C15983 + C15969 * C292) *
                           C47785 * C47870 +
                       (C15975 * C121 + C15984 + C15984 + C47839 * C135 +
                        C15973 * C120 + C15985 + C15985 + C15969 * C134) *
                           C47785 * C15971) *
                          C47581 * C47563 * C109 +
                      ((C15973 * C121 + C15986 + C15986 + C15969 * C135 +
                        C15975 * C122 + C15987 + C15987 + C47839 * C136) *
                           C47785 * C15971 +
                       (C15973 * C271 + C15988 + C15988 + C15969 * C291 +
                        C15975 * C277 + C15989 + C15989 + C47839 * C297) *
                           C47785 * C47870) *
                          C47581 * C47563 * C110 -
                      ((C15975 * C279 + C15990 + C15990 + C47839 * C299 +
                        C15973 * C277 + C15991 + C15991 + C15969 * C297) *
                           C47785 * C47870 +
                       (C15975 * C123 + C15992 + C15992 + C47839 * C137 +
                        C15973 * C122 + C15993 + C15993 + C15969 * C136) *
                           C47785 * C15971) *
                          C47581 * C47563 * C111 +
                      ((C15973 * C123 + C15994 + C15994 + C15969 * C137 +
                        C15975 * C124 + C15995 + C15995 + C47839 * C138) *
                           C47785 * C15971 +
                       (C15973 * C279 + C15996 + C15996 + C15969 * C299 +
                        C15975 * C584 + C15997 + C15997 + C47839 * C586) *
                           C47785 * C47870) *
                          C47581 * C47563 * C112) +
                 0.5 * std::pow(Pi, 2.5) *
                     ((((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                         C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                            C47785 * C15971 +
                        (C16204 + C16205) * C47785 * C47870) *
                           C47581 * C47891 -
                       ((C16206 + C16207) * C47785 * C47870 +
                        (C16205 + C16204) * C47785 * C15971) *
                           C47581 * C47879 +
                       ((C16207 + C16206) * C47785 * C15971 +
                        (C15973 * C1052 + C16154 + C16154 + C15969 * C1064 +
                         C15975 * C1051 + C16155 + C16155 + C47839 * C1063) *
                            C47785 * C47870) *
                           C47581 * C47852) *
                          C268 +
                      (((C16208 + C16209) * C47785 * C15971 +
                        (C16210 + C16211) * C47785 * C47870) *
                           C47581 * C47879 -
                       ((C16209 + C16208) * C47785 * C47870 +
                        (C15975 * C121 + C15984 + C15984 + C47839 * C135 +
                         C15973 * C120 + C15985 + C15985 + C15969 * C134) *
                            C47785 * C15971) *
                           C47581 * C47891 -
                       ((C15975 * C1050 + C16166 + C16166 + C47839 * C1062 +
                         C15973 * C1051 + C16167 + C16167 + C15969 * C1063) *
                            C47785 * C47870 +
                        (C16211 + C16210) * C47785 * C15971) *
                           C47581 * C47852) *
                          C269 +
                      (((C15973 * C121 + C15986 + C15986 + C15969 * C135 +
                         C15975 * C122 + C15987 + C15987 + C47839 * C136) *
                            C47785 * C15971 +
                        (C16212 + C16213) * C47785 * C47870) *
                           C47581 * C47891 -
                       ((C16214 + C16215) * C47785 * C47870 +
                        (C16213 + C16212) * C47785 * C15971) *
                           C47581 * C47879 +
                       ((C16215 + C16214) * C47785 * C15971 +
                        (C15973 * C1050 + C16178 + C16178 + C15969 * C1062 +
                         C15975 * C1324 + C16179 + C16179 + C47839 * C1326) *
                            C47785 * C47870) *
                           C47581 * C47852) *
                          C47846)) /
                    (p * q * std::sqrt(p + q)) -
                (std::pow(Pi, 2.5) *
                 ((((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                     C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                        C47785 * C15971 +
                    (C16204 + C16205) * C47785 * C47870) *
                       C47892 -
                   ((C15975 * C843 + C16362 + C16362 + C47839 * C853 +
                     C15973 * C842 + C16363 + C16363 + C15969 * C852) *
                        C47785 * C47870 +
                    (C15975 * C433 + C16364 + C16364 + C47839 * C453 +
                     C15973 * C434 + C16365 + C16365 + C15969 * C454) *
                        C47785 * C15971) *
                       C47881 +
                   ((C15973 * C435 + C16366 + C16366 + C15969 * C455 +
                     C15975 * C436 + C16367 + C16367 + C47839 * C456) *
                        C47785 * C15971 +
                    (C15973 * C1186 + C16368 + C16368 + C15969 * C1204 +
                     C15975 * C1185 + C16369 + C16369 + C47839 * C1203) *
                        C47785 * C47870) *
                       C47855) *
                      C47563 * C268 +
                  (((C15973 * C433 + C16370 + C16370 + C15969 * C453 +
                     C15975 * C432 + C16371 + C16371 + C47839 * C452) *
                        C47785 * C15971 +
                    (C15973 * C843 + C16372 + C16372 + C15969 * C853 +
                     C15975 * C844 + C16373 + C16373 + C47839 * C854) *
                        C47785 * C47870) *
                       C47881 -
                   ((C16209 + C16208) * C47785 * C47870 +
                    (C15975 * C121 + C15984 + C15984 + C47839 * C135 +
                     C15973 * C120 + C15985 + C15985 + C15969 * C134) *
                        C47785 * C15971) *
                       C47892 -
                   ((C15975 * C1184 + C16374 + C16374 + C47839 * C1202 +
                     C15973 * C1185 + C16375 + C16375 + C15969 * C1203) *
                        C47785 * C47870 +
                    (C15975 * C437 + C16376 + C16376 + C47839 * C457 +
                     C15973 * C436 + C16377 + C16377 + C15969 * C456) *
                        C47785 * C15971) *
                       C47855) *
                      C47563 * C269 +
                  (((C15973 * C121 + C15986 + C15986 + C15969 * C135 +
                     C15975 * C122 + C15987 + C15987 + C47839 * C136) *
                        C47785 * C15971 +
                    (C16212 + C16213) * C47785 * C47870) *
                       C47892 -
                   ((C15975 * C845 + C16378 + C16378 + C47839 * C855 +
                     C15973 * C844 + C16379 + C16379 + C15969 * C854) *
                        C47785 * C47870 +
                    (C15975 * C438 + C16380 + C16380 + C47839 * C458 +
                     C15973 * C432 + C16381 + C16381 + C15969 * C452) *
                        C47785 * C15971) *
                       C47881 +
                   ((C15973 * C437 + C16382 + C16382 + C15969 * C457 +
                     C15975 * C439 + C16383 + C16383 + C47839 * C459) *
                        C47785 * C15971 +
                    (C15973 * C1184 + C16384 + C16384 + C15969 * C1202 +
                     C15975 * C2052 + C16385 + C16385 + C47839 * C2054) *
                        C47785 * C47870) *
                       C47855) *
                      C47563 * C47846)) /
                    (p * q * std::sqrt(p + q)) +
                (0.5 * std::pow(Pi, 2.5) *
                 ((((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                     C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                        C47785 * C15971 +
                    (C16204 + C16205) * C47785 * C47870) *
                       C47581 * C976 -
                   ((C16206 + C16207) * C47785 * C47870 +
                    (C16205 + C16204) * C47785 * C15971) *
                       C47581 * C977 +
                   ((C16207 + C16206) * C47785 * C15971 +
                    (C15973 * C1052 + C16154 + C16154 + C15969 * C1064 +
                     C15975 * C1051 + C16155 + C16155 + C47839 * C1063) *
                        C47785 * C47870) *
                       C47581 * C47852) *
                      C47888 +
                  (((C16208 + C16209) * C47785 * C15971 +
                    (C16210 + C16211) * C47785 * C47870) *
                       C47581 * C977 -
                   ((C16209 + C16208) * C47785 * C47870 +
                    (C15975 * C121 + C15984 + C15984 + C47839 * C135 +
                     C15973 * C120 + C15985 + C15985 + C15969 * C134) *
                        C47785 * C15971) *
                       C47581 * C976 -
                   ((C15975 * C1050 + C16166 + C16166 + C47839 * C1062 +
                     C15973 * C1051 + C16167 + C16167 + C15969 * C1063) *
                        C47785 * C47870 +
                    (C16211 + C16210) * C47785 * C15971) *
                       C47581 * C47852) *
                      C47875 +
                  (((C15973 * C121 + C15986 + C15986 + C15969 * C135 +
                     C15975 * C122 + C15987 + C15987 + C47839 * C136) *
                        C47785 * C15971 +
                    (C16212 + C16213) * C47785 * C47870) *
                       C47581 * C976 -
                   ((C16214 + C16215) * C47785 * C47870 +
                    (C16213 + C16212) * C47785 * C15971) *
                       C47581 * C977 +
                   ((C16215 + C16214) * C47785 * C15971 +
                    (C15973 * C1050 + C16178 + C16178 + C15969 * C1062 +
                     C15975 * C1324 + C16179 + C16179 + C47839 * C1326) *
                        C47785 * C47870) *
                       C47581 * C47852) *
                      C47846)) /
                    (p * q * std::sqrt(p + q)) +
                (0.5 * std::pow(Pi, 2.5) *
                 (((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                    C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                       C47785 * C15971 +
                   (C16204 + C16205) * C47785 * C47870) *
                      C47581 * C1044 -
                  ((C16206 + C16207) * C47785 * C47870 +
                   (C16205 + C16204) * C47785 * C15971) *
                      C47581 * C1045 +
                  ((C16207 + C16206) * C47785 * C15971 +
                   (C17140 + C17141) * C47785 * C47870) *
                      C47581 * C1046 -
                  ((C17142 + C17143) * C47785 * C47870 +
                   (C17141 + C17140) * C47785 * C15971) *
                      C47581 * C1047 +
                  ((C17143 + C17142) * C47785 * C15971 +
                   (C15973 * C5767 + C17130 + C17130 + C15969 * C5771 +
                    C15975 * C5768 + C17131 + C17131 + C47839 * C5772) *
                       C47785 * C47870) *
                      C47581 * C1048) *
                 C47535) /
                    (p * q * std::sqrt(p + q)) -
                (std::pow(Pi, 2.5) *
                 ((((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                     C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                        C47785 * C15971 +
                    (C16204 + C16205) * C47785 * C47870) *
                       C47892 -
                   ((C16886 + C16887) * C47785 * C47870 +
                    (C15975 * C433 + C16364 + C16364 + C47839 * C453 +
                     C15973 * C434 + C16365 + C16365 + C15969 * C454) *
                        C47785 * C15971) *
                       C47881 +
                   ((C15973 * C435 + C16366 + C16366 + C15969 * C455 +
                     C15975 * C436 + C16367 + C16367 + C47839 * C456) *
                        C47785 * C15971 +
                    (C17320 + C17321) * C47785 * C47870) *
                       C47855) *
                      C976 +
                  (((C16887 + C16886) * C47785 * C15971 +
                    (C17322 + C17323) * C47785 * C47870) *
                       C47881 -
                   ((C16206 + C16207) * C47785 * C47870 +
                    (C16205 + C16204) * C47785 * C15971) *
                       C47892 -
                   ((C17324 + C17325) * C47785 * C47870 +
                    (C17321 + C17320) * C47785 * C15971) *
                       C47855) *
                      C977 +
                  (((C16207 + C16206) * C47785 * C15971 +
                    (C17140 + C17141) * C47785 * C47870) *
                       C47892 -
                   ((C15975 * C1581 + C17304 + C17304 + C47839 * C1587 +
                     C15973 * C1580 + C17305 + C17305 + C15969 * C1586) *
                        C47785 * C47870 +
                    (C17323 + C17322) * C47785 * C15971) *
                       C47881 +
                   ((C17325 + C17324) * C47785 * C15971 +
                    (C15973 * C5943 + C17306 + C17306 + C15969 * C5947 +
                     C15975 * C5944 + C17307 + C17307 + C47839 * C5948) *
                        C47785 * C47870) *
                       C47855) *
                      C47852) *
                 C47535) /
                    (p * q * std::sqrt(p + q)) -
                (std::pow(Pi, 2.5) *
                 ((((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                     C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                        C47785 * C15971 +
                    (C16204 + C16205) * C47785 * C47870) *
                       C1702 -
                   ((C16886 + C16887) * C47785 * C47870 +
                    (C15975 * C433 + C16364 + C16364 + C47839 * C453 +
                     C15973 * C434 + C16365 + C16365 + C15969 * C454) *
                        C47785 * C15971) *
                       C1703 +
                   ((C15973 * C435 + C16366 + C16366 + C15969 * C455 +
                     C15975 * C436 + C16367 + C16367 + C47839 * C456) *
                        C47785 * C15971 +
                    (C17320 + C17321) * C47785 * C47870) *
                       C47855) *
                      C47563 * C47888 +
                  (((C15973 * C433 + C16370 + C16370 + C15969 * C453 +
                     C15975 * C432 + C16371 + C16371 + C47839 * C452) *
                        C47785 * C15971 +
                    (C16888 + C16889) * C47785 * C47870) *
                       C1703 -
                   ((C16209 + C16208) * C47785 * C47870 +
                    (C15975 * C121 + C15984 + C15984 + C47839 * C135 +
                     C15973 * C120 + C15985 + C15985 + C15969 * C134) *
                        C47785 * C15971) *
                       C1702 -
                   ((C15975 * C1184 + C16374 + C16374 + C47839 * C1202 +
                     C15973 * C1185 + C16375 + C16375 + C15969 * C1203) *
                        C47785 * C47870 +
                    (C15975 * C437 + C16376 + C16376 + C47839 * C457 +
                     C15973 * C436 + C16377 + C16377 + C15969 * C456) *
                        C47785 * C15971) *
                       C47855) *
                      C47563 * C47875 +
                  (((C15973 * C121 + C15986 + C15986 + C15969 * C135 +
                     C15975 * C122 + C15987 + C15987 + C47839 * C136) *
                        C47785 * C15971 +
                    (C16212 + C16213) * C47785 * C47870) *
                       C1702 -
                   ((C16890 + C16891) * C47785 * C47870 +
                    (C15975 * C438 + C16380 + C16380 + C47839 * C458 +
                     C15973 * C432 + C16381 + C16381 + C15969 * C452) *
                        C47785 * C15971) *
                       C1703 +
                   ((C15973 * C437 + C16382 + C16382 + C15969 * C457 +
                     C15975 * C439 + C16383 + C16383 + C47839 * C459) *
                        C47785 * C15971 +
                    (C15973 * C1184 + C16384 + C16384 + C15969 * C1202 +
                     C15975 * C2052 + C16385 + C16385 + C47839 * C2054) *
                        C47785 * C47870) *
                       C47855) *
                      C47563 * C47846)) /
                    (p * q * std::sqrt(p + q)) -
                (std::pow(Pi, 2.5) *
                 ((((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                     C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                        C47785 * C15971 +
                    (C16204 + C16205) * C47785 * C47870) *
                       C1702 -
                   ((C16886 + C16887) * C47785 * C47870 +
                    (C15975 * C433 + C16364 + C16364 + C47839 * C453 +
                     C15973 * C434 + C16365 + C16365 + C15969 * C454) *
                        C47785 * C15971) *
                       C1703 +
                   ((C15973 * C435 + C16366 + C16366 + C15969 * C455 +
                     C15975 * C436 + C16367 + C16367 + C47839 * C456) *
                        C47785 * C15971 +
                    (C17320 + C17321) * C47785 * C47870) *
                       C47855) *
                      C47891 +
                  (((C16887 + C16886) * C47785 * C15971 +
                    (C17322 + C17323) * C47785 * C47870) *
                       C1703 -
                   ((C16206 + C16207) * C47785 * C47870 +
                    (C16205 + C16204) * C47785 * C15971) *
                       C1702 -
                   ((C17324 + C17325) * C47785 * C47870 +
                    (C17321 + C17320) * C47785 * C15971) *
                       C47855) *
                      C47879 +
                  (((C16207 + C16206) * C47785 * C15971 +
                    (C17140 + C17141) * C47785 * C47870) *
                       C1702 -
                   ((C17814 + C17815) * C47785 * C47870 +
                    (C17323 + C17322) * C47785 * C15971) *
                       C1703 +
                   ((C17325 + C17324) * C47785 * C15971 +
                    (C15973 * C5943 + C17306 + C17306 + C15969 * C5947 +
                     C15975 * C5944 + C17307 + C17307 + C47839 * C5948) *
                        C47785 * C47870) *
                       C47855) *
                      C47852) *
                 C47535) /
                    (p * q * std::sqrt(p + q)) +
                (2 * std::pow(Pi, 2.5) *
                 (((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                    C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                       C47785 * C15971 +
                   (C16204 + C16205) * C47785 * C47870) *
                      C1877 -
                  ((C16886 + C16887) * C47785 * C47870 +
                   (C15975 * C433 + C16364 + C16364 + C47839 * C453 +
                    C15973 * C434 + C16365 + C16365 + C15969 * C454) *
                       C47785 * C15971) *
                      C1878 +
                  ((C15973 * C435 + C16366 + C16366 + C15969 * C455 +
                    C15975 * C436 + C16367 + C16367 + C47839 * C456) *
                       C47785 * C15971 +
                   (C17320 + C17321) * C47785 * C47870) *
                      C1879 -
                  ((C15975 * C2265 + C18190 + C18190 + C47839 * C2271 +
                    C15973 * C2264 + C18191 + C18191 + C15969 * C2270) *
                       C47785 * C47870 +
                   (C15975 * C1883 + C18192 + C18192 + C47839 * C1895 +
                    C15973 * C1884 + C18193 + C18193 + C15969 * C1896) *
                       C47785 * C15971) *
                      C1880 +
                  ((C15973 * C1885 + C18194 + C18194 + C15969 * C1897 +
                    C15975 * C1886 + C18195 + C18195 + C47839 * C1898) *
                       C47785 * C15971 +
                   (C15973 * C6855 + C18196 + C18196 + C15969 * C6859 +
                    C15975 * C6856 + C18197 + C18197 + C47839 * C6860) *
                       C47785 * C47870) *
                      C1881) *
                 C47563 * C47535) /
                    (p * q * std::sqrt(p + q));
    d2ee[88] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                      C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                         C47785 * C15971 +
                     (C16204 + C16205) * C47785 * C47870) *
                        C47821 -
                    ((C16886 + C16887) * C47785 * C47870 +
                     (C15975 * C433 + C16364 + C16364 + C47839 * C453 +
                      C15973 * C434 + C16365 + C16365 + C15969 * C454) *
                         C47785 * C15971) *
                        C47668) *
                       C976 +
                   (((C16887 + C16886) * C47785 * C15971 +
                     (C17322 + C17323) * C47785 * C47870) *
                        C47668 -
                    ((C16206 + C16207) * C47785 * C47870 +
                     (C16205 + C16204) * C47785 * C15971) *
                        C47821) *
                       C977 +
                   (((C16207 + C16206) * C47785 * C15971 +
                     (C17140 + C17141) * C47785 * C47870) *
                        C47821 -
                    ((C15975 * C1581 + C17304 + C17304 + C47839 * C1587 +
                      C15973 * C1580 + C17305 + C17305 + C15969 * C1586) *
                         C47785 * C47870 +
                     (C17323 + C17322) * C47785 * C15971) *
                        C47668) *
                       C47852) *
                      C47806 +
                  ((((C15973 * C433 + C16370 + C16370 + C15969 * C453 +
                      C15975 * C432 + C16371 + C16371 + C47839 * C452) *
                         C47785 * C15971 +
                     (C16888 + C16889) * C47785 * C47870) *
                        C47668 -
                    ((C16209 + C16208) * C47785 * C47870 +
                     (C15975 * C121 + C15984 + C15984 + C47839 * C135 +
                      C15973 * C120 + C15985 + C15985 + C15969 * C134) *
                         C47785 * C15971) *
                        C47821) *
                       C976 +
                   (((C16208 + C16209) * C47785 * C15971 +
                     (C16210 + C16211) * C47785 * C47870) *
                        C47821 -
                    ((C17672 + C17673) * C47785 * C47870 +
                     (C16889 + C16888) * C47785 * C15971) *
                        C47668) *
                       C977 +
                   (((C17673 + C17672) * C47785 * C15971 +
                     (C15973 * C1581 + C17666 + C17666 + C15969 * C1587 +
                      C15975 * C1582 + C17667 + C17667 + C47839 * C1588) *
                         C47785 * C47870) *
                        C47668 -
                    ((C17466 + C17467) * C47785 * C47870 +
                     (C16211 + C16210) * C47785 * C15971) *
                        C47821) *
                       C47852) *
                      C47546)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                     C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                        C47785 * C15971 +
                    (C16204 + C16205) * C47785 * C47870) *
                       C47821 -
                   ((C15975 * C843 + C16362 + C16362 + C47839 * C853 +
                     C15973 * C842 + C16363 + C16363 + C15969 * C852) *
                        C47785 * C47870 +
                    (C15975 * C433 + C16364 + C16364 + C47839 * C453 +
                     C15973 * C434 + C16365 + C16365 + C15969 * C454) *
                        C47785 * C15971) *
                       C47668) *
                      C47563 * C580 +
                  (((C15973 * C433 + C16370 + C16370 + C15969 * C453 +
                     C15975 * C432 + C16371 + C16371 + C47839 * C452) *
                        C47785 * C15971 +
                    (C15973 * C843 + C16372 + C16372 + C15969 * C853 +
                     C15975 * C844 + C16373 + C16373 + C47839 * C854) *
                        C47785 * C47870) *
                       C47668 -
                   ((C16209 + C16208) * C47785 * C47870 +
                    (C15975 * C121 + C15984 + C15984 + C47839 * C135 +
                     C15973 * C120 + C15985 + C15985 + C15969 * C134) *
                        C47785 * C15971) *
                       C47821) *
                      C47563 * C581 +
                  (((C15973 * C121 + C15986 + C15986 + C15969 * C135 +
                     C15975 * C122 + C15987 + C15987 + C47839 * C136) *
                        C47785 * C15971 +
                    (C16212 + C16213) * C47785 * C47870) *
                       C47821 -
                   ((C15975 * C845 + C16378 + C16378 + C47839 * C855 +
                     C15973 * C844 + C16379 + C16379 + C15969 * C854) *
                        C47785 * C47870 +
                    (C15975 * C438 + C16380 + C16380 + C47839 * C458 +
                     C15973 * C432 + C16381 + C16381 + C15969 * C452) *
                        C47785 * C15971) *
                       C47668) *
                      C47563 * C582 +
                  (((C15973 * C438 + C16658 + C16658 + C15969 * C458 +
                     C15975 * C440 + C16659 + C16659 + C47839 * C460) *
                        C47785 * C15971 +
                    (C15973 * C845 + C16660 + C16660 + C15969 * C855 +
                     C15975 * C846 + C16661 + C16661 + C47839 * C856) *
                        C47785 * C47870) *
                       C47668 -
                   ((C16527 + C16526) * C47785 * C47870 +
                    (C15975 * C123 + C15992 + C15992 + C47839 * C137 +
                     C15973 * C122 + C15993 + C15993 + C15969 * C136) *
                        C47785 * C15971) *
                       C47821) *
                      C47563 * C47856)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 ((((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                     C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                        C47785 * C15971 +
                    (C16204 + C16205) * C47785 * C47870) *
                       C2156 -
                   ((C16886 + C16887) * C47785 * C47870 +
                    (C15975 * C433 + C16364 + C16364 + C47839 * C453 +
                     C15973 * C434 + C16365 + C16365 + C15969 * C454) *
                        C47785 * C15971) *
                       C2157 +
                   ((C15973 * C435 + C16366 + C16366 + C15969 * C455 +
                     C15975 * C436 + C16367 + C16367 + C47839 * C456) *
                        C47785 * C15971 +
                    (C17320 + C17321) * C47785 * C47870) *
                       C2158 -
                   ((C15975 * C2265 + C18190 + C18190 + C47839 * C2271 +
                     C15973 * C2264 + C18191 + C18191 + C15969 * C2270) *
                        C47785 * C47870 +
                    (C15975 * C1883 + C18192 + C18192 + C47839 * C1895 +
                     C15973 * C1884 + C18193 + C18193 + C15969 * C1896) *
                        C47785 * C15971) *
                       C47868) *
                      C47563 * C47806 +
                  (((C15973 * C433 + C16370 + C16370 + C15969 * C453 +
                     C15975 * C432 + C16371 + C16371 + C47839 * C452) *
                        C47785 * C15971 +
                    (C16888 + C16889) * C47785 * C47870) *
                       C2157 -
                   ((C16209 + C16208) * C47785 * C47870 +
                    (C15975 * C121 + C15984 + C15984 + C47839 * C135 +
                     C15973 * C120 + C15985 + C15985 + C15969 * C134) *
                        C47785 * C15971) *
                       C2156 -
                   ((C18402 + C18403) * C47785 * C47870 +
                    (C15975 * C437 + C16376 + C16376 + C47839 * C457 +
                     C15973 * C436 + C16377 + C16377 + C15969 * C456) *
                        C47785 * C15971) *
                       C2158 +
                   ((C15973 * C1883 + C18534 + C18534 + C15969 * C1895 +
                     C15975 * C1882 + C18535 + C18535 + C47839 * C1894) *
                        C47785 * C15971 +
                    (C15973 * C2265 + C18536 + C18536 + C15969 * C2271 +
                     C15975 * C2266 + C18537 + C18537 + C47839 * C2272) *
                        C47785 * C47870) *
                       C47868) *
                      C47563 * C47546)) /
                    (p * q * std::sqrt(p + q));
    d2ee[89] += (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                 ((((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                     C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                        C47785 * C15971 +
                    (C16204 + C16205) * C47785 * C47870) *
                       C47581 * C47891 -
                   ((C16206 + C16207) * C47785 * C47870 +
                    (C16205 + C16204) * C47785 * C15971) *
                       C47581 * C47879 +
                   ((C16207 + C16206) * C47785 * C15971 +
                    (C15973 * C1052 + C16154 + C16154 + C15969 * C1064 +
                     C15975 * C1051 + C16155 + C16155 + C47839 * C1063) *
                        C47785 * C47870) *
                       C47581 * C47852) *
                      C268 +
                  (((C16208 + C16209) * C47785 * C15971 +
                    (C16210 + C16211) * C47785 * C47870) *
                       C47581 * C47879 -
                   ((C16209 + C16208) * C47785 * C47870 +
                    (C15975 * C121 + C15984 + C15984 + C47839 * C135 +
                     C15973 * C120 + C15985 + C15985 + C15969 * C134) *
                        C47785 * C15971) *
                       C47581 * C47891 -
                   ((C15975 * C1050 + C16166 + C16166 + C47839 * C1062 +
                     C15973 * C1051 + C16167 + C16167 + C15969 * C1063) *
                        C47785 * C47870 +
                    (C16211 + C16210) * C47785 * C15971) *
                       C47581 * C47852) *
                      C269 +
                  (((C15973 * C121 + C15986 + C15986 + C15969 * C135 +
                     C15975 * C122 + C15987 + C15987 + C47839 * C136) *
                        C47785 * C15971 +
                    (C16212 + C16213) * C47785 * C47870) *
                       C47581 * C47891 -
                   ((C16214 + C16215) * C47785 * C47870 +
                    (C16213 + C16212) * C47785 * C15971) *
                       C47581 * C47879 +
                   ((C16215 + C16214) * C47785 * C15971 +
                    (C15973 * C1050 + C16178 + C16178 + C15969 * C1062 +
                     C15975 * C1324 + C16179 + C16179 + C47839 * C1326) *
                        C47785 * C47870) *
                       C47581 * C47852) *
                      C47846)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                 (((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                    C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                       C47785 * C15971 +
                   (C15973 * C273 + C15980 + C15980 + C15969 * C293 +
                    C15975 * C272 + C15981 + C15981 + C47839 * C292) *
                       C47785 * C47870) *
                      C47581 * C47563 * C108 -
                  ((C15975 * C271 + C15982 + C15982 + C47839 * C291 +
                    C15973 * C272 + C15983 + C15983 + C15969 * C292) *
                       C47785 * C47870 +
                   (C15975 * C121 + C15984 + C15984 + C47839 * C135 +
                    C15973 * C120 + C15985 + C15985 + C15969 * C134) *
                       C47785 * C15971) *
                      C47581 * C47563 * C109 +
                  ((C15973 * C121 + C15986 + C15986 + C15969 * C135 +
                    C15975 * C122 + C15987 + C15987 + C47839 * C136) *
                       C47785 * C15971 +
                   (C15973 * C271 + C15988 + C15988 + C15969 * C291 +
                    C15975 * C277 + C15989 + C15989 + C47839 * C297) *
                       C47785 * C47870) *
                      C47581 * C47563 * C110 -
                  ((C15975 * C279 + C15990 + C15990 + C47839 * C299 +
                    C15973 * C277 + C15991 + C15991 + C15969 * C297) *
                       C47785 * C47870 +
                   (C15975 * C123 + C15992 + C15992 + C47839 * C137 +
                    C15973 * C122 + C15993 + C15993 + C15969 * C136) *
                       C47785 * C15971) *
                      C47581 * C47563 * C111 +
                  ((C15973 * C123 + C15994 + C15994 + C15969 * C137 +
                    C15975 * C124 + C15995 + C15995 + C47839 * C138) *
                       C47785 * C15971 +
                   (C15973 * C279 + C15996 + C15996 + C15969 * C299 +
                    C15975 * C584 + C15997 + C15997 + C47839 * C586) *
                       C47785 * C47870) *
                      C47581 * C47563 * C112)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                 ((((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                     C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                        C47785 * C15971 +
                    (C16204 + C16205) * C47785 * C47870) *
                       C47581 * C976 -
                   ((C16206 + C16207) * C47785 * C47870 +
                    (C16205 + C16204) * C47785 * C15971) *
                       C47581 * C977 +
                   ((C16207 + C16206) * C47785 * C15971 +
                    (C15973 * C1052 + C16154 + C16154 + C15969 * C1064 +
                     C15975 * C1051 + C16155 + C16155 + C47839 * C1063) *
                        C47785 * C47870) *
                       C47581 * C47852) *
                      C47888 +
                  (((C16208 + C16209) * C47785 * C15971 +
                    (C16210 + C16211) * C47785 * C47870) *
                       C47581 * C977 -
                   ((C16209 + C16208) * C47785 * C47870 +
                    (C15975 * C121 + C15984 + C15984 + C47839 * C135 +
                     C15973 * C120 + C15985 + C15985 + C15969 * C134) *
                        C47785 * C15971) *
                       C47581 * C976 -
                   ((C15975 * C1050 + C16166 + C16166 + C47839 * C1062 +
                     C15973 * C1051 + C16167 + C16167 + C15969 * C1063) *
                        C47785 * C47870 +
                    (C16211 + C16210) * C47785 * C15971) *
                       C47581 * C47852) *
                      C47875 +
                  (((C15973 * C121 + C15986 + C15986 + C15969 * C135 +
                     C15975 * C122 + C15987 + C15987 + C47839 * C136) *
                        C47785 * C15971 +
                    (C16212 + C16213) * C47785 * C47870) *
                       C47581 * C976 -
                   ((C16214 + C16215) * C47785 * C47870 +
                    (C16213 + C16212) * C47785 * C15971) *
                       C47581 * C977 +
                   ((C16215 + C16214) * C47785 * C15971 +
                    (C15973 * C1050 + C16178 + C16178 + C15969 * C1062 +
                     C15975 * C1324 + C16179 + C16179 + C47839 * C1326) *
                        C47785 * C47870) *
                       C47581 * C47852) *
                      C47846)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                 (((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                    C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                       C47785 * C15971 +
                   (C16204 + C16205) * C47785 * C47870) *
                      C47581 * C1044 -
                  ((C16206 + C16207) * C47785 * C47870 +
                   (C16205 + C16204) * C47785 * C15971) *
                      C47581 * C1045 +
                  ((C16207 + C16206) * C47785 * C15971 +
                   (C17140 + C17141) * C47785 * C47870) *
                      C47581 * C1046 -
                  ((C17142 + C17143) * C47785 * C47870 +
                   (C17141 + C17140) * C47785 * C15971) *
                      C47581 * C1047 +
                  ((C17143 + C17142) * C47785 * C15971 +
                   (C15973 * C5767 + C17130 + C17130 + C15969 * C5771 +
                    C15975 * C5768 + C17131 + C17131 + C47839 * C5772) *
                       C47785 * C47870) *
                      C47581 * C1048) *
                 C47535) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                     C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                        C47785 * C15971 +
                    (C16204 + C16205) * C47785 * C47870) *
                       C1702 -
                   ((C16886 + C16887) * C47785 * C47870 +
                    (C15975 * C433 + C16364 + C16364 + C47839 * C453 +
                     C15973 * C434 + C16365 + C16365 + C15969 * C454) *
                        C47785 * C15971) *
                       C1703 +
                   ((C15973 * C435 + C16366 + C16366 + C15969 * C455 +
                     C15975 * C436 + C16367 + C16367 + C47839 * C456) *
                        C47785 * C15971 +
                    (C17320 + C17321) * C47785 * C47870) *
                       C47855) *
                      C47563 * C47888 +
                  (((C15973 * C433 + C16370 + C16370 + C15969 * C453 +
                     C15975 * C432 + C16371 + C16371 + C47839 * C452) *
                        C47785 * C15971 +
                    (C16888 + C16889) * C47785 * C47870) *
                       C1703 -
                   ((C16209 + C16208) * C47785 * C47870 +
                    (C15975 * C121 + C15984 + C15984 + C47839 * C135 +
                     C15973 * C120 + C15985 + C15985 + C15969 * C134) *
                        C47785 * C15971) *
                       C1702 -
                   ((C15975 * C1184 + C16374 + C16374 + C47839 * C1202 +
                     C15973 * C1185 + C16375 + C16375 + C15969 * C1203) *
                        C47785 * C47870 +
                    (C15975 * C437 + C16376 + C16376 + C47839 * C457 +
                     C15973 * C436 + C16377 + C16377 + C15969 * C456) *
                        C47785 * C15971) *
                       C47855) *
                      C47563 * C47875 +
                  (((C15973 * C121 + C15986 + C15986 + C15969 * C135 +
                     C15975 * C122 + C15987 + C15987 + C47839 * C136) *
                        C47785 * C15971 +
                    (C16212 + C16213) * C47785 * C47870) *
                       C1702 -
                   ((C16890 + C16891) * C47785 * C47870 +
                    (C15975 * C438 + C16380 + C16380 + C47839 * C458 +
                     C15973 * C432 + C16381 + C16381 + C15969 * C452) *
                        C47785 * C15971) *
                       C1703 +
                   ((C15973 * C437 + C16382 + C16382 + C15969 * C457 +
                     C15975 * C439 + C16383 + C16383 + C47839 * C459) *
                        C47785 * C15971 +
                    (C15973 * C1184 + C16384 + C16384 + C15969 * C1202 +
                     C15975 * C2052 + C16385 + C16385 + C47839 * C2054) *
                        C47785 * C47870) *
                       C47855) *
                      C47563 * C47846)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                     C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                        C47785 * C15971 +
                    (C16204 + C16205) * C47785 * C47870) *
                       C1702 -
                   ((C16886 + C16887) * C47785 * C47870 +
                    (C15975 * C433 + C16364 + C16364 + C47839 * C453 +
                     C15973 * C434 + C16365 + C16365 + C15969 * C454) *
                        C47785 * C15971) *
                       C1703 +
                   ((C15973 * C435 + C16366 + C16366 + C15969 * C455 +
                     C15975 * C436 + C16367 + C16367 + C47839 * C456) *
                        C47785 * C15971 +
                    (C17320 + C17321) * C47785 * C47870) *
                       C47855) *
                      C47891 +
                  (((C16887 + C16886) * C47785 * C15971 +
                    (C17322 + C17323) * C47785 * C47870) *
                       C1703 -
                   ((C16206 + C16207) * C47785 * C47870 +
                    (C16205 + C16204) * C47785 * C15971) *
                       C1702 -
                   ((C17324 + C17325) * C47785 * C47870 +
                    (C17321 + C17320) * C47785 * C15971) *
                       C47855) *
                      C47879 +
                  (((C16207 + C16206) * C47785 * C15971 +
                    (C17140 + C17141) * C47785 * C47870) *
                       C1702 -
                   ((C17814 + C17815) * C47785 * C47870 +
                    (C17323 + C17322) * C47785 * C15971) *
                       C1703 +
                   ((C17325 + C17324) * C47785 * C15971 +
                    (C15973 * C5943 + C17306 + C17306 + C15969 * C5947 +
                     C15975 * C5944 + C17307 + C17307 + C47839 * C5948) *
                        C47785 * C47870) *
                       C47855) *
                      C47852) *
                 C47535) /
                    (p * q * std::sqrt(p + q));
    d2ee[90] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                      C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                         C47785 * C15971 +
                     (C16204 + C16205) * C47785 * C47870) *
                        C3136 -
                    ((C16886 + C16887) * C47785 * C47870 +
                     (C15975 * C433 + C16364 + C16364 + C47839 * C453 +
                      C15973 * C434 + C16365 + C16365 + C15969 * C454) *
                         C47785 * C15971) *
                        C47668) *
                       C47820 +
                   (((C16887 + C16886) * C47785 * C15971 +
                     (C17322 + C17323) * C47785 * C47870) *
                        C47668 -
                    ((C16206 + C16207) * C47785 * C47870 +
                     (C16205 + C16204) * C47785 * C15971) *
                        C3136) *
                       C47626) *
                      C47540 +
                  ((((C15973 * C433 + C16370 + C16370 + C15969 * C453 +
                      C15975 * C432 + C16371 + C16371 + C47839 * C452) *
                         C47785 * C15971 +
                     (C16888 + C16889) * C47785 * C47870) *
                        C47668 -
                    ((C16209 + C16208) * C47785 * C47870 +
                     (C15975 * C121 + C15984 + C15984 + C47839 * C135 +
                      C15973 * C120 + C15985 + C15985 + C15969 * C134) *
                         C47785 * C15971) *
                        C3136) *
                       C47820 +
                   (((C16208 + C16209) * C47785 * C15971 +
                     (C16210 + C16211) * C47785 * C47870) *
                        C3136 -
                    ((C17672 + C17673) * C47785 * C47870 +
                     (C16889 + C16888) * C47785 * C15971) *
                        C47668) *
                       C47626) *
                      C47549 +
                  ((((C15973 * C121 + C15986 + C15986 + C15969 * C135 +
                      C15975 * C122 + C15987 + C15987 + C47839 * C136) *
                         C47785 * C15971 +
                     (C16212 + C16213) * C47785 * C47870) *
                        C3136 -
                    ((C16890 + C16891) * C47785 * C47870 +
                     (C15975 * C438 + C16380 + C16380 + C47839 * C458 +
                      C15973 * C432 + C16381 + C16381 + C15969 * C452) *
                         C47785 * C15971) *
                        C47668) *
                       C47820 +
                   (((C16891 + C16890) * C47785 * C15971 +
                     (C15973 * C1187 + C16872 + C16872 + C15969 * C1205 +
                      C15975 * C1476 + C16873 + C16873 + C47839 * C1478) *
                         C47785 * C47870) *
                        C47668 -
                    ((C16214 + C16215) * C47785 * C47870 +
                     (C16213 + C16212) * C47785 * C15971) *
                        C3136) *
                       C47626) *
                      C2745)) /
                (p * q * std::sqrt(p + q));
    d2ee[91] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                      C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                         C47785 * C15971 +
                     (C16204 + C16205) * C47785 * C47870) *
                        C47664 -
                    ((C16886 + C16887) * C47785 * C47870 +
                     (C15975 * C433 + C16364 + C16364 + C47839 * C453 +
                      C15973 * C434 + C16365 + C16365 + C15969 * C454) *
                         C47785 * C15971) *
                        C47671 +
                    ((C15973 * C435 + C16366 + C16366 + C15969 * C455 +
                      C15975 * C436 + C16367 + C16367 + C47839 * C456) *
                         C47785 * C15971 +
                     (C17320 + C17321) * C47785 * C47870) *
                        C3644) *
                       C47820 +
                   (((C16887 + C16886) * C47785 * C15971 +
                     (C17322 + C17323) * C47785 * C47870) *
                        C47671 -
                    ((C16206 + C16207) * C47785 * C47870 +
                     (C16205 + C16204) * C47785 * C15971) *
                        C47664 -
                    ((C17324 + C17325) * C47785 * C47870 +
                     (C17321 + C17320) * C47785 * C15971) *
                        C3644) *
                       C47626) *
                      C2482 +
                  ((((C15973 * C433 + C16370 + C16370 + C15969 * C453 +
                      C15975 * C432 + C16371 + C16371 + C47839 * C452) *
                         C47785 * C15971 +
                     (C16888 + C16889) * C47785 * C47870) *
                        C47671 -
                    ((C16209 + C16208) * C47785 * C47870 +
                     (C15975 * C121 + C15984 + C15984 + C47839 * C135 +
                      C15973 * C120 + C15985 + C15985 + C15969 * C134) *
                         C47785 * C15971) *
                        C47664 -
                    ((C18402 + C18403) * C47785 * C47870 +
                     (C15975 * C437 + C16376 + C16376 + C47839 * C457 +
                      C15973 * C436 + C16377 + C16377 + C15969 * C456) *
                         C47785 * C15971) *
                        C3644) *
                       C47820 +
                   (((C16208 + C16209) * C47785 * C15971 +
                     (C16210 + C16211) * C47785 * C47870) *
                        C47664 -
                    ((C17672 + C17673) * C47785 * C47870 +
                     (C16889 + C16888) * C47785 * C15971) *
                        C47671 +
                    ((C18403 + C18402) * C47785 * C15971 +
                     (C15973 * C1191 + C18396 + C18396 + C15969 * C1209 +
                      C15975 * C1192 + C18397 + C18397 + C47839 * C1210) *
                         C47785 * C47870) *
                        C3644) *
                       C47626) *
                      C47546)) /
                (p * q * std::sqrt(p + q));
    d2ee[92] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                      C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                         C47785 * C15971 +
                     (C16204 + C16205) * C47785 * C47870) *
                        C3136 -
                    ((C16886 + C16887) * C47785 * C47870 +
                     (C15975 * C433 + C16364 + C16364 + C47839 * C453 +
                      C15973 * C434 + C16365 + C16365 + C15969 * C454) *
                         C47785 * C15971) *
                        C47668) *
                       C47891 +
                   (((C16887 + C16886) * C47785 * C15971 +
                     (C17322 + C17323) * C47785 * C47870) *
                        C47668 -
                    ((C16206 + C16207) * C47785 * C47870 +
                     (C16205 + C16204) * C47785 * C15971) *
                        C3136) *
                       C47879 +
                   (((C16207 + C16206) * C47785 * C15971 +
                     (C17140 + C17141) * C47785 * C47870) *
                        C3136 -
                    ((C17814 + C17815) * C47785 * C47870 +
                     (C17323 + C17322) * C47785 * C15971) *
                        C47668) *
                       C47852) *
                      C2482 +
                  ((((C15973 * C433 + C16370 + C16370 + C15969 * C453 +
                      C15975 * C432 + C16371 + C16371 + C47839 * C452) *
                         C47785 * C15971 +
                     (C16888 + C16889) * C47785 * C47870) *
                        C47668 -
                    ((C16209 + C16208) * C47785 * C47870 +
                     (C15975 * C121 + C15984 + C15984 + C47839 * C135 +
                      C15973 * C120 + C15985 + C15985 + C15969 * C134) *
                         C47785 * C15971) *
                        C3136) *
                       C47891 +
                   (((C16208 + C16209) * C47785 * C15971 +
                     (C16210 + C16211) * C47785 * C47870) *
                        C3136 -
                    ((C17672 + C17673) * C47785 * C47870 +
                     (C16889 + C16888) * C47785 * C15971) *
                        C47668) *
                       C47879 +
                   (((C17673 + C17672) * C47785 * C15971 +
                     (C15973 * C1581 + C17666 + C17666 + C15969 * C1587 +
                      C15975 * C1582 + C17667 + C17667 + C47839 * C1588) *
                         C47785 * C47870) *
                        C47668 -
                    ((C17466 + C17467) * C47785 * C47870 +
                     (C16211 + C16210) * C47785 * C15971) *
                        C3136) *
                       C47852) *
                      C47546)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                     C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                        C47785 * C15971 +
                    (C16204 + C16205) * C47785 * C47870) *
                       C3136 -
                   ((C16886 + C16887) * C47785 * C47870 +
                    (C15975 * C433 + C16364 + C16364 + C47839 * C453 +
                     C15973 * C434 + C16365 + C16365 + C15969 * C454) *
                        C47785 * C15971) *
                       C47668) *
                      C47563 * C47897 +
                  (((C15973 * C433 + C16370 + C16370 + C15969 * C453 +
                     C15975 * C432 + C16371 + C16371 + C47839 * C452) *
                        C47785 * C15971 +
                    (C16888 + C16889) * C47785 * C47870) *
                       C47668 -
                   ((C16209 + C16208) * C47785 * C47870 +
                    (C15975 * C121 + C15984 + C15984 + C47839 * C135 +
                     C15973 * C120 + C15985 + C15985 + C15969 * C134) *
                        C47785 * C15971) *
                       C3136) *
                      C47563 * C47890 +
                  (((C15973 * C121 + C15986 + C15986 + C15969 * C135 +
                     C15975 * C122 + C15987 + C15987 + C47839 * C136) *
                        C47785 * C15971 +
                    (C16212 + C16213) * C47785 * C47870) *
                       C3136 -
                   ((C16890 + C16891) * C47785 * C47870 +
                    (C15975 * C438 + C16380 + C16380 + C47839 * C458 +
                     C15973 * C432 + C16381 + C16381 + C15969 * C452) *
                        C47785 * C15971) *
                       C47668) *
                      C47563 * C47877 +
                  (((C15973 * C438 + C16658 + C16658 + C15969 * C458 +
                     C15975 * C440 + C16659 + C16659 + C47839 * C460) *
                        C47785 * C15971 +
                    (C15973 * C845 + C16660 + C16660 + C15969 * C855 +
                     C15975 * C846 + C16661 + C16661 + C47839 * C856) *
                        C47785 * C47870) *
                       C47668 -
                   ((C16527 + C16526) * C47785 * C47870 +
                    (C15975 * C123 + C15992 + C15992 + C47839 * C137 +
                     C15973 * C122 + C15993 + C15993 + C15969 * C136) *
                        C47785 * C15971) *
                       C3136) *
                      C47563 * C47856)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 ((((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                     C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                        C47785 * C15971 +
                    (C16204 + C16205) * C47785 * C47870) *
                       C47899 -
                   ((C16886 + C16887) * C47785 * C47870 +
                    (C15975 * C433 + C16364 + C16364 + C47839 * C453 +
                     C15973 * C434 + C16365 + C16365 + C15969 * C454) *
                        C47785 * C15971) *
                       C47896 +
                   ((C15973 * C435 + C16366 + C16366 + C15969 * C455 +
                     C15975 * C436 + C16367 + C16367 + C47839 * C456) *
                        C47785 * C15971 +
                    (C17320 + C17321) * C47785 * C47870) *
                       C47887 -
                   ((C18678 + C18679) * C47785 * C47870 +
                    (C15975 * C1883 + C18192 + C18192 + C47839 * C1895 +
                     C15973 * C1884 + C18193 + C18193 + C15969 * C1896) *
                        C47785 * C15971) *
                       C47868) *
                      C47563 * C2482 +
                  (((C15973 * C433 + C16370 + C16370 + C15969 * C453 +
                     C15975 * C432 + C16371 + C16371 + C47839 * C452) *
                        C47785 * C15971 +
                    (C16888 + C16889) * C47785 * C47870) *
                       C47896 -
                   ((C16209 + C16208) * C47785 * C47870 +
                    (C15975 * C121 + C15984 + C15984 + C47839 * C135 +
                     C15973 * C120 + C15985 + C15985 + C15969 * C134) *
                        C47785 * C15971) *
                       C47899 -
                   ((C18402 + C18403) * C47785 * C47870 +
                    (C15975 * C437 + C16376 + C16376 + C47839 * C457 +
                     C15973 * C436 + C16377 + C16377 + C15969 * C456) *
                        C47785 * C15971) *
                       C47887 +
                   ((C15973 * C1883 + C18534 + C18534 + C15969 * C1895 +
                     C15975 * C1882 + C18535 + C18535 + C47839 * C1894) *
                        C47785 * C15971 +
                    (C15973 * C2265 + C18536 + C18536 + C15969 * C2271 +
                     C15975 * C2266 + C18537 + C18537 + C47839 * C2272) *
                        C47785 * C47870) *
                       C47868) *
                      C47563 * C47546)) /
                    (p * q * std::sqrt(p + q));
    d2ee[93] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                     C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                        C47785 * C15971 +
                    (C16204 + C16205) * C47785 * C47870) *
                       C47664 -
                   ((C16886 + C16887) * C47785 * C47870 +
                    (C15975 * C433 + C16364 + C16364 + C47839 * C453 +
                     C15973 * C434 + C16365 + C16365 + C15969 * C454) *
                        C47785 * C15971) *
                       C47671 +
                   ((C15973 * C435 + C16366 + C16366 + C15969 * C455 +
                     C15975 * C436 + C16367 + C16367 + C47839 * C456) *
                        C47785 * C15971 +
                    (C17320 + C17321) * C47785 * C47870) *
                       C3644) *
                      C47563 * C47540 +
                  (((C15973 * C433 + C16370 + C16370 + C15969 * C453 +
                     C15975 * C432 + C16371 + C16371 + C47839 * C452) *
                        C47785 * C15971 +
                    (C16888 + C16889) * C47785 * C47870) *
                       C47671 -
                   ((C16209 + C16208) * C47785 * C47870 +
                    (C15975 * C121 + C15984 + C15984 + C47839 * C135 +
                     C15973 * C120 + C15985 + C15985 + C15969 * C134) *
                        C47785 * C15971) *
                       C47664 -
                   ((C18402 + C18403) * C47785 * C47870 +
                    (C15975 * C437 + C16376 + C16376 + C47839 * C457 +
                     C15973 * C436 + C16377 + C16377 + C15969 * C456) *
                        C47785 * C15971) *
                       C3644) *
                      C47563 * C47549 +
                  (((C15973 * C121 + C15986 + C15986 + C15969 * C135 +
                     C15975 * C122 + C15987 + C15987 + C47839 * C136) *
                        C47785 * C15971 +
                    (C16212 + C16213) * C47785 * C47870) *
                       C47664 -
                   ((C16890 + C16891) * C47785 * C47870 +
                    (C15975 * C438 + C16380 + C16380 + C47839 * C458 +
                     C15973 * C432 + C16381 + C16381 + C15969 * C452) *
                        C47785 * C15971) *
                       C47671 +
                   ((C15973 * C437 + C16382 + C16382 + C15969 * C457 +
                     C15975 * C439 + C16383 + C16383 + C47839 * C459) *
                        C47785 * C15971 +
                    (C15973 * C1184 + C16384 + C16384 + C15969 * C1202 +
                     C15975 * C2052 + C16385 + C16385 + C47839 * C2054) *
                        C47785 * C47870) *
                       C3644) *
                      C47563 * C2745)) /
                (p * q * std::sqrt(p + q));
    d2ee[94] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                     C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                        C47785 * C15971 +
                    (C16204 + C16205) * C47785 * C47870) *
                       C3136 -
                   ((C16886 + C16887) * C47785 * C47870 +
                    (C15975 * C433 + C16364 + C16364 + C47839 * C453 +
                     C15973 * C434 + C16365 + C16365 + C15969 * C454) *
                        C47785 * C15971) *
                       C47668) *
                      C47563 * C47897 +
                  (((C15973 * C433 + C16370 + C16370 + C15969 * C453 +
                     C15975 * C432 + C16371 + C16371 + C47839 * C452) *
                        C47785 * C15971 +
                    (C16888 + C16889) * C47785 * C47870) *
                       C47668 -
                   ((C16209 + C16208) * C47785 * C47870 +
                    (C15975 * C121 + C15984 + C15984 + C47839 * C135 +
                     C15973 * C120 + C15985 + C15985 + C15969 * C134) *
                        C47785 * C15971) *
                       C3136) *
                      C47563 * C47890 +
                  (((C15973 * C121 + C15986 + C15986 + C15969 * C135 +
                     C15975 * C122 + C15987 + C15987 + C47839 * C136) *
                        C47785 * C15971 +
                    (C16212 + C16213) * C47785 * C47870) *
                       C3136 -
                   ((C16890 + C16891) * C47785 * C47870 +
                    (C15975 * C438 + C16380 + C16380 + C47839 * C458 +
                     C15973 * C432 + C16381 + C16381 + C15969 * C452) *
                        C47785 * C15971) *
                       C47668) *
                      C47563 * C47877 +
                  (((C15973 * C438 + C16658 + C16658 + C15969 * C458 +
                     C15975 * C440 + C16659 + C16659 + C47839 * C460) *
                        C47785 * C15971 +
                    (C15973 * C845 + C16660 + C16660 + C15969 * C855 +
                     C15975 * C846 + C16661 + C16661 + C47839 * C856) *
                        C47785 * C47870) *
                       C47668 -
                   ((C16527 + C16526) * C47785 * C47870 +
                    (C15975 * C123 + C15992 + C15992 + C47839 * C137 +
                     C15973 * C122 + C15993 + C15993 + C15969 * C136) *
                        C47785 * C15971) *
                       C3136) *
                      C47563 * C47856)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                      C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                         C47785 * C15971 +
                     (C16204 + C16205) * C47785 * C47870) *
                        C3136 -
                    ((C16886 + C16887) * C47785 * C47870 +
                     (C15975 * C433 + C16364 + C16364 + C47839 * C453 +
                      C15973 * C434 + C16365 + C16365 + C15969 * C454) *
                         C47785 * C15971) *
                        C47668) *
                       C47891 +
                   (((C16887 + C16886) * C47785 * C15971 +
                     (C17322 + C17323) * C47785 * C47870) *
                        C47668 -
                    ((C16206 + C16207) * C47785 * C47870 +
                     (C16205 + C16204) * C47785 * C15971) *
                        C3136) *
                       C47879 +
                   (((C16207 + C16206) * C47785 * C15971 +
                     (C17140 + C17141) * C47785 * C47870) *
                        C3136 -
                    ((C17814 + C17815) * C47785 * C47870 +
                     (C17323 + C17322) * C47785 * C15971) *
                        C47668) *
                       C47852) *
                      C2482 +
                  ((((C15973 * C433 + C16370 + C16370 + C15969 * C453 +
                      C15975 * C432 + C16371 + C16371 + C47839 * C452) *
                         C47785 * C15971 +
                     (C16888 + C16889) * C47785 * C47870) *
                        C47668 -
                    ((C16209 + C16208) * C47785 * C47870 +
                     (C15975 * C121 + C15984 + C15984 + C47839 * C135 +
                      C15973 * C120 + C15985 + C15985 + C15969 * C134) *
                         C47785 * C15971) *
                        C3136) *
                       C47891 +
                   (((C16208 + C16209) * C47785 * C15971 +
                     (C16210 + C16211) * C47785 * C47870) *
                        C3136 -
                    ((C17672 + C17673) * C47785 * C47870 +
                     (C16889 + C16888) * C47785 * C15971) *
                        C47668) *
                       C47879 +
                   (((C17673 + C17672) * C47785 * C15971 +
                     (C15973 * C1581 + C17666 + C17666 + C15969 * C1587 +
                      C15975 * C1582 + C17667 + C17667 + C47839 * C1588) *
                         C47785 * C47870) *
                        C47668 -
                    ((C17466 + C17467) * C47785 * C47870 +
                     (C16211 + C16210) * C47785 * C15971) *
                        C3136) *
                       C47852) *
                      C47546)) /
                    (p * q * std::sqrt(p + q));
    d2ee[95] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                     C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                        C47785 * C15971 +
                    (C16204 + C16205) * C47785 * C47870) *
                       C47581 * C47820 -
                   ((C16206 + C16207) * C47785 * C47870 +
                    (C16205 + C16204) * C47785 * C15971) *
                       C47581 * C47626) *
                      C580 +
                  (((C16208 + C16209) * C47785 * C15971 +
                    (C16210 + C16211) * C47785 * C47870) *
                       C47581 * C47626 -
                   ((C16209 + C16208) * C47785 * C47870 +
                    (C15975 * C121 + C15984 + C15984 + C47839 * C135 +
                     C15973 * C120 + C15985 + C15985 + C15969 * C134) *
                        C47785 * C15971) *
                       C47581 * C47820) *
                      C581 +
                  (((C15973 * C121 + C15986 + C15986 + C15969 * C135 +
                     C15975 * C122 + C15987 + C15987 + C47839 * C136) *
                        C47785 * C15971 +
                    (C16212 + C16213) * C47785 * C47870) *
                       C47581 * C47820 -
                   ((C16214 + C16215) * C47785 * C47870 +
                    (C16213 + C16212) * C47785 * C15971) *
                       C47581 * C47626) *
                      C582 +
                  (((C16526 + C16527) * C47785 * C15971 +
                    (C15973 * C278 + C16520 + C16520 + C15969 * C298 +
                     C15975 * C280 + C16521 + C16521 + C47839 * C300) *
                        C47785 * C47870) *
                       C47581 * C47626 -
                   ((C16527 + C16526) * C47785 * C47870 +
                    (C15975 * C123 + C15992 + C15992 + C47839 * C137 +
                     C15973 * C122 + C15993 + C15993 + C15969 * C136) *
                        C47785 * C15971) *
                       C47581 * C47820) *
                      C47856)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                     C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                        C47785 * C15971 +
                    (C16204 + C16205) * C47785 * C47870) *
                       C47581 * C1318 -
                   ((C16206 + C16207) * C47785 * C47870 +
                    (C16205 + C16204) * C47785 * C15971) *
                       C47581 * C1319 +
                   ((C16207 + C16206) * C47785 * C15971 +
                    (C17140 + C17141) * C47785 * C47870) *
                       C47581 * C1320 -
                   ((C17142 + C17143) * C47785 * C47870 +
                    (C17141 + C17140) * C47785 * C15971) *
                       C47581 * C47862) *
                      C47806 +
                  (((C16208 + C16209) * C47785 * C15971 +
                    (C16210 + C16211) * C47785 * C47870) *
                       C47581 * C1319 -
                   ((C16209 + C16208) * C47785 * C47870 +
                    (C15975 * C121 + C15984 + C15984 + C47839 * C135 +
                     C15973 * C120 + C15985 + C15985 + C15969 * C134) *
                        C47785 * C15971) *
                       C47581 * C1318 -
                   ((C17466 + C17467) * C47785 * C47870 +
                    (C16211 + C16210) * C47785 * C15971) *
                       C47581 * C1320 +
                   ((C17467 + C17466) * C47785 * C15971 +
                    (C15973 * C1054 + C17460 + C17460 + C15969 * C1066 +
                     C15975 * C1055 + C17461 + C17461 + C47839 * C1067) *
                        C47785 * C47870) *
                       C47581 * C47862) *
                      C47546)) /
                    (p * q * std::sqrt(p + q));
    d2ee[96] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                      C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                         C47785 * C15971 +
                     (C16204 + C16205) * C47785 * C47870) *
                        C47821 -
                    ((C16886 + C16887) * C47785 * C47870 +
                     (C15975 * C433 + C16364 + C16364 + C47839 * C453 +
                      C15973 * C434 + C16365 + C16365 + C15969 * C454) *
                         C47785 * C15971) *
                        C47668) *
                       C47820 +
                   (((C16887 + C16886) * C47785 * C15971 +
                     (C15973 * C1189 + C16860 + C16860 + C15969 * C1207 +
                      C15975 * C1188 + C16861 + C16861 + C47839 * C1206) *
                         C47785 * C47870) *
                        C47668 -
                    ((C16206 + C16207) * C47785 * C47870 +
                     (C16205 + C16204) * C47785 * C15971) *
                        C47821) *
                       C47626) *
                      C268 +
                  ((((C15973 * C433 + C16370 + C16370 + C15969 * C453 +
                      C15975 * C432 + C16371 + C16371 + C47839 * C452) *
                         C47785 * C15971 +
                     (C16888 + C16889) * C47785 * C47870) *
                        C47668 -
                    ((C16209 + C16208) * C47785 * C47870 +
                     (C15975 * C121 + C15984 + C15984 + C47839 * C135 +
                      C15973 * C120 + C15985 + C15985 + C15969 * C134) *
                         C47785 * C15971) *
                        C47821) *
                       C47820 +
                   (((C16208 + C16209) * C47785 * C15971 +
                     (C16210 + C16211) * C47785 * C47870) *
                        C47821 -
                    ((C15975 * C1187 + C16866 + C16866 + C47839 * C1205 +
                      C15973 * C1188 + C16867 + C16867 + C15969 * C1206) *
                         C47785 * C47870 +
                     (C16889 + C16888) * C47785 * C15971) *
                        C47668) *
                       C47626) *
                      C269 +
                  ((((C15973 * C121 + C15986 + C15986 + C15969 * C135 +
                      C15975 * C122 + C15987 + C15987 + C47839 * C136) *
                         C47785 * C15971 +
                     (C16212 + C16213) * C47785 * C47870) *
                        C47821 -
                    ((C16890 + C16891) * C47785 * C47870 +
                     (C15975 * C438 + C16380 + C16380 + C47839 * C458 +
                      C15973 * C432 + C16381 + C16381 + C15969 * C452) *
                         C47785 * C15971) *
                        C47668) *
                       C47820 +
                   (((C16891 + C16890) * C47785 * C15971 +
                     (C15973 * C1187 + C16872 + C16872 + C15969 * C1205 +
                      C15975 * C1476 + C16873 + C16873 + C47839 * C1478) *
                         C47785 * C47870) *
                        C47668 -
                    ((C16214 + C16215) * C47785 * C47870 +
                     (C16213 + C16212) * C47785 * C15971) *
                        C47821) *
                       C47626) *
                      C47846)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                     C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                        C47785 * C15971 +
                    (C16204 + C16205) * C47785 * C47870) *
                       C47821 -
                   ((C16886 + C16887) * C47785 * C47870 +
                    (C15975 * C433 + C16364 + C16364 + C47839 * C453 +
                     C15973 * C434 + C16365 + C16365 + C15969 * C454) *
                        C47785 * C15971) *
                       C47668) *
                      C1318 +
                  (((C16887 + C16886) * C47785 * C15971 +
                    (C17322 + C17323) * C47785 * C47870) *
                       C47668 -
                   ((C16206 + C16207) * C47785 * C47870 +
                    (C16205 + C16204) * C47785 * C15971) *
                       C47821) *
                      C1319 +
                  (((C16207 + C16206) * C47785 * C15971 +
                    (C17140 + C17141) * C47785 * C47870) *
                       C47821 -
                   ((C17814 + C17815) * C47785 * C47870 +
                    (C17323 + C17322) * C47785 * C15971) *
                       C47668) *
                      C1320 +
                  (((C17815 + C17814) * C47785 * C15971 +
                    (C15973 * C6463 + C17808 + C17808 + C15969 * C6467 +
                     C15975 * C6464 + C17809 + C17809 + C47839 * C6468) *
                        C47785 * C47870) *
                       C47668 -
                   ((C17142 + C17143) * C47785 * C47870 +
                    (C17141 + C17140) * C47785 * C15971) *
                       C47821) *
                      C47862) *
                 C47535) /
                    (p * q * std::sqrt(p + q));
    d2ee[97] += (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                 ((((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                     C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                        C47785 * C15971 +
                    (C16204 + C16205) * C47785 * C47870) *
                       C47581 * C47891 -
                   ((C16206 + C16207) * C47785 * C47870 +
                    (C16205 + C16204) * C47785 * C15971) *
                       C47581 * C47879 +
                   ((C16207 + C16206) * C47785 * C15971 +
                    (C15973 * C1052 + C16154 + C16154 + C15969 * C1064 +
                     C15975 * C1051 + C16155 + C16155 + C47839 * C1063) *
                        C47785 * C47870) *
                       C47581 * C47852) *
                      C268 +
                  (((C16208 + C16209) * C47785 * C15971 +
                    (C16210 + C16211) * C47785 * C47870) *
                       C47581 * C47879 -
                   ((C16209 + C16208) * C47785 * C47870 +
                    (C15975 * C121 + C15984 + C15984 + C47839 * C135 +
                     C15973 * C120 + C15985 + C15985 + C15969 * C134) *
                        C47785 * C15971) *
                       C47581 * C47891 -
                   ((C15975 * C1050 + C16166 + C16166 + C47839 * C1062 +
                     C15973 * C1051 + C16167 + C16167 + C15969 * C1063) *
                        C47785 * C47870 +
                    (C16211 + C16210) * C47785 * C15971) *
                       C47581 * C47852) *
                      C269 +
                  (((C15973 * C121 + C15986 + C15986 + C15969 * C135 +
                     C15975 * C122 + C15987 + C15987 + C47839 * C136) *
                        C47785 * C15971 +
                    (C16212 + C16213) * C47785 * C47870) *
                       C47581 * C47891 -
                   ((C16214 + C16215) * C47785 * C47870 +
                    (C16213 + C16212) * C47785 * C15971) *
                       C47581 * C47879 +
                   ((C16215 + C16214) * C47785 * C15971 +
                    (C15973 * C1050 + C16178 + C16178 + C15969 * C1062 +
                     C15975 * C1324 + C16179 + C16179 + C47839 * C1326) *
                        C47785 * C47870) *
                       C47581 * C47852) *
                      C47846)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                 (((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                    C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                       C47785 * C15971 +
                   (C15973 * C273 + C15980 + C15980 + C15969 * C293 +
                    C15975 * C272 + C15981 + C15981 + C47839 * C292) *
                       C47785 * C47870) *
                      C47581 * C47563 * C108 -
                  ((C15975 * C271 + C15982 + C15982 + C47839 * C291 +
                    C15973 * C272 + C15983 + C15983 + C15969 * C292) *
                       C47785 * C47870 +
                   (C15975 * C121 + C15984 + C15984 + C47839 * C135 +
                    C15973 * C120 + C15985 + C15985 + C15969 * C134) *
                       C47785 * C15971) *
                      C47581 * C47563 * C109 +
                  ((C15973 * C121 + C15986 + C15986 + C15969 * C135 +
                    C15975 * C122 + C15987 + C15987 + C47839 * C136) *
                       C47785 * C15971 +
                   (C15973 * C271 + C15988 + C15988 + C15969 * C291 +
                    C15975 * C277 + C15989 + C15989 + C47839 * C297) *
                       C47785 * C47870) *
                      C47581 * C47563 * C110 -
                  ((C15975 * C279 + C15990 + C15990 + C47839 * C299 +
                    C15973 * C277 + C15991 + C15991 + C15969 * C297) *
                       C47785 * C47870 +
                   (C15975 * C123 + C15992 + C15992 + C47839 * C137 +
                    C15973 * C122 + C15993 + C15993 + C15969 * C136) *
                       C47785 * C15971) *
                      C47581 * C47563 * C111 +
                  ((C15973 * C123 + C15994 + C15994 + C15969 * C137 +
                    C15975 * C124 + C15995 + C15995 + C47839 * C138) *
                       C47785 * C15971 +
                   (C15973 * C279 + C15996 + C15996 + C15969 * C299 +
                    C15975 * C584 + C15997 + C15997 + C47839 * C586) *
                       C47785 * C47870) *
                      C47581 * C47563 * C112)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                     C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                        C47785 * C15971 +
                    (C16204 + C16205) * C47785 * C47870) *
                       C47892 -
                   ((C15975 * C843 + C16362 + C16362 + C47839 * C853 +
                     C15973 * C842 + C16363 + C16363 + C15969 * C852) *
                        C47785 * C47870 +
                    (C15975 * C433 + C16364 + C16364 + C47839 * C453 +
                     C15973 * C434 + C16365 + C16365 + C15969 * C454) *
                        C47785 * C15971) *
                       C47881 +
                   ((C15973 * C435 + C16366 + C16366 + C15969 * C455 +
                     C15975 * C436 + C16367 + C16367 + C47839 * C456) *
                        C47785 * C15971 +
                    (C15973 * C1186 + C16368 + C16368 + C15969 * C1204 +
                     C15975 * C1185 + C16369 + C16369 + C47839 * C1203) *
                        C47785 * C47870) *
                       C47855) *
                      C47563 * C268 +
                  (((C15973 * C433 + C16370 + C16370 + C15969 * C453 +
                     C15975 * C432 + C16371 + C16371 + C47839 * C452) *
                        C47785 * C15971 +
                    (C15973 * C843 + C16372 + C16372 + C15969 * C853 +
                     C15975 * C844 + C16373 + C16373 + C47839 * C854) *
                        C47785 * C47870) *
                       C47881 -
                   ((C16209 + C16208) * C47785 * C47870 +
                    (C15975 * C121 + C15984 + C15984 + C47839 * C135 +
                     C15973 * C120 + C15985 + C15985 + C15969 * C134) *
                        C47785 * C15971) *
                       C47892 -
                   ((C15975 * C1184 + C16374 + C16374 + C47839 * C1202 +
                     C15973 * C1185 + C16375 + C16375 + C15969 * C1203) *
                        C47785 * C47870 +
                    (C15975 * C437 + C16376 + C16376 + C47839 * C457 +
                     C15973 * C436 + C16377 + C16377 + C15969 * C456) *
                        C47785 * C15971) *
                       C47855) *
                      C47563 * C269 +
                  (((C15973 * C121 + C15986 + C15986 + C15969 * C135 +
                     C15975 * C122 + C15987 + C15987 + C47839 * C136) *
                        C47785 * C15971 +
                    (C16212 + C16213) * C47785 * C47870) *
                       C47892 -
                   ((C15975 * C845 + C16378 + C16378 + C47839 * C855 +
                     C15973 * C844 + C16379 + C16379 + C15969 * C854) *
                        C47785 * C47870 +
                    (C15975 * C438 + C16380 + C16380 + C47839 * C458 +
                     C15973 * C432 + C16381 + C16381 + C15969 * C452) *
                        C47785 * C15971) *
                       C47881 +
                   ((C15973 * C437 + C16382 + C16382 + C15969 * C457 +
                     C15975 * C439 + C16383 + C16383 + C47839 * C459) *
                        C47785 * C15971 +
                    (C15973 * C1184 + C16384 + C16384 + C15969 * C1202 +
                     C15975 * C2052 + C16385 + C16385 + C47839 * C2054) *
                        C47785 * C47870) *
                       C47855) *
                      C47563 * C47846)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                 ((((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                     C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                        C47785 * C15971 +
                    (C16204 + C16205) * C47785 * C47870) *
                       C47581 * C976 -
                   ((C16206 + C16207) * C47785 * C47870 +
                    (C16205 + C16204) * C47785 * C15971) *
                       C47581 * C977 +
                   ((C16207 + C16206) * C47785 * C15971 +
                    (C15973 * C1052 + C16154 + C16154 + C15969 * C1064 +
                     C15975 * C1051 + C16155 + C16155 + C47839 * C1063) *
                        C47785 * C47870) *
                       C47581 * C47852) *
                      C47888 +
                  (((C16208 + C16209) * C47785 * C15971 +
                    (C16210 + C16211) * C47785 * C47870) *
                       C47581 * C977 -
                   ((C16209 + C16208) * C47785 * C47870 +
                    (C15975 * C121 + C15984 + C15984 + C47839 * C135 +
                     C15973 * C120 + C15985 + C15985 + C15969 * C134) *
                        C47785 * C15971) *
                       C47581 * C976 -
                   ((C15975 * C1050 + C16166 + C16166 + C47839 * C1062 +
                     C15973 * C1051 + C16167 + C16167 + C15969 * C1063) *
                        C47785 * C47870 +
                    (C16211 + C16210) * C47785 * C15971) *
                       C47581 * C47852) *
                      C47875 +
                  (((C15973 * C121 + C15986 + C15986 + C15969 * C135 +
                     C15975 * C122 + C15987 + C15987 + C47839 * C136) *
                        C47785 * C15971 +
                    (C16212 + C16213) * C47785 * C47870) *
                       C47581 * C976 -
                   ((C16214 + C16215) * C47785 * C47870 +
                    (C16213 + C16212) * C47785 * C15971) *
                       C47581 * C977 +
                   ((C16215 + C16214) * C47785 * C15971 +
                    (C15973 * C1050 + C16178 + C16178 + C15969 * C1062 +
                     C15975 * C1324 + C16179 + C16179 + C47839 * C1326) *
                        C47785 * C47870) *
                       C47581 * C47852) *
                      C47846)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                 (((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                    C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                       C47785 * C15971 +
                   (C16204 + C16205) * C47785 * C47870) *
                      C47581 * C1044 -
                  ((C16206 + C16207) * C47785 * C47870 +
                   (C16205 + C16204) * C47785 * C15971) *
                      C47581 * C1045 +
                  ((C16207 + C16206) * C47785 * C15971 +
                   (C17140 + C17141) * C47785 * C47870) *
                      C47581 * C1046 -
                  ((C17142 + C17143) * C47785 * C47870 +
                   (C17141 + C17140) * C47785 * C15971) *
                      C47581 * C1047 +
                  ((C17143 + C17142) * C47785 * C15971 +
                   (C15973 * C5767 + C17130 + C17130 + C15969 * C5771 +
                    C15975 * C5768 + C17131 + C17131 + C47839 * C5772) *
                       C47785 * C47870) *
                      C47581 * C1048) *
                 C47535) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                     C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                        C47785 * C15971 +
                    (C16204 + C16205) * C47785 * C47870) *
                       C47892 -
                   ((C16886 + C16887) * C47785 * C47870 +
                    (C15975 * C433 + C16364 + C16364 + C47839 * C453 +
                     C15973 * C434 + C16365 + C16365 + C15969 * C454) *
                        C47785 * C15971) *
                       C47881 +
                   ((C15973 * C435 + C16366 + C16366 + C15969 * C455 +
                     C15975 * C436 + C16367 + C16367 + C47839 * C456) *
                        C47785 * C15971 +
                    (C17320 + C17321) * C47785 * C47870) *
                       C47855) *
                      C976 +
                  (((C16887 + C16886) * C47785 * C15971 +
                    (C17322 + C17323) * C47785 * C47870) *
                       C47881 -
                   ((C16206 + C16207) * C47785 * C47870 +
                    (C16205 + C16204) * C47785 * C15971) *
                       C47892 -
                   ((C17324 + C17325) * C47785 * C47870 +
                    (C17321 + C17320) * C47785 * C15971) *
                       C47855) *
                      C977 +
                  (((C16207 + C16206) * C47785 * C15971 +
                    (C17140 + C17141) * C47785 * C47870) *
                       C47892 -
                   ((C15975 * C1581 + C17304 + C17304 + C47839 * C1587 +
                     C15973 * C1580 + C17305 + C17305 + C15969 * C1586) *
                        C47785 * C47870 +
                    (C17323 + C17322) * C47785 * C15971) *
                       C47881 +
                   ((C17325 + C17324) * C47785 * C15971 +
                    (C15973 * C5943 + C17306 + C17306 + C15969 * C5947 +
                     C15975 * C5944 + C17307 + C17307 + C47839 * C5948) *
                        C47785 * C47870) *
                       C47855) *
                      C47852) *
                 C47535) /
                    (p * q * std::sqrt(p + q));
    d2ee[98] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                     C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                        C47785 * C15971 +
                    (C16204 + C16205) * C47785 * C47870) *
                       C47821 -
                   ((C15975 * C843 + C16362 + C16362 + C47839 * C853 +
                     C15973 * C842 + C16363 + C16363 + C15969 * C852) *
                        C47785 * C47870 +
                    (C15975 * C433 + C16364 + C16364 + C47839 * C453 +
                     C15973 * C434 + C16365 + C16365 + C15969 * C454) *
                        C47785 * C15971) *
                       C47668) *
                      C47563 * C580 +
                  (((C15973 * C433 + C16370 + C16370 + C15969 * C453 +
                     C15975 * C432 + C16371 + C16371 + C47839 * C452) *
                        C47785 * C15971 +
                    (C15973 * C843 + C16372 + C16372 + C15969 * C853 +
                     C15975 * C844 + C16373 + C16373 + C47839 * C854) *
                        C47785 * C47870) *
                       C47668 -
                   ((C16209 + C16208) * C47785 * C47870 +
                    (C15975 * C121 + C15984 + C15984 + C47839 * C135 +
                     C15973 * C120 + C15985 + C15985 + C15969 * C134) *
                        C47785 * C15971) *
                       C47821) *
                      C47563 * C581 +
                  (((C15973 * C121 + C15986 + C15986 + C15969 * C135 +
                     C15975 * C122 + C15987 + C15987 + C47839 * C136) *
                        C47785 * C15971 +
                    (C16212 + C16213) * C47785 * C47870) *
                       C47821 -
                   ((C15975 * C845 + C16378 + C16378 + C47839 * C855 +
                     C15973 * C844 + C16379 + C16379 + C15969 * C854) *
                        C47785 * C47870 +
                    (C15975 * C438 + C16380 + C16380 + C47839 * C458 +
                     C15973 * C432 + C16381 + C16381 + C15969 * C452) *
                        C47785 * C15971) *
                       C47668) *
                      C47563 * C582 +
                  (((C15973 * C438 + C16658 + C16658 + C15969 * C458 +
                     C15975 * C440 + C16659 + C16659 + C47839 * C460) *
                        C47785 * C15971 +
                    (C15973 * C845 + C16660 + C16660 + C15969 * C855 +
                     C15975 * C846 + C16661 + C16661 + C47839 * C856) *
                        C47785 * C47870) *
                       C47668 -
                   ((C16527 + C16526) * C47785 * C47870 +
                    (C15975 * C123 + C15992 + C15992 + C47839 * C137 +
                     C15973 * C122 + C15993 + C15993 + C15969 * C136) *
                        C47785 * C15971) *
                       C47821) *
                      C47563 * C47856)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                      C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                         C47785 * C15971 +
                     (C16204 + C16205) * C47785 * C47870) *
                        C47821 -
                    ((C16886 + C16887) * C47785 * C47870 +
                     (C15975 * C433 + C16364 + C16364 + C47839 * C453 +
                      C15973 * C434 + C16365 + C16365 + C15969 * C454) *
                         C47785 * C15971) *
                        C47668) *
                       C976 +
                   (((C16887 + C16886) * C47785 * C15971 +
                     (C17322 + C17323) * C47785 * C47870) *
                        C47668 -
                    ((C16206 + C16207) * C47785 * C47870 +
                     (C16205 + C16204) * C47785 * C15971) *
                        C47821) *
                       C977 +
                   (((C16207 + C16206) * C47785 * C15971 +
                     (C17140 + C17141) * C47785 * C47870) *
                        C47821 -
                    ((C15975 * C1581 + C17304 + C17304 + C47839 * C1587 +
                      C15973 * C1580 + C17305 + C17305 + C15969 * C1586) *
                         C47785 * C47870 +
                     (C17323 + C17322) * C47785 * C15971) *
                        C47668) *
                       C47852) *
                      C47806 +
                  ((((C15973 * C433 + C16370 + C16370 + C15969 * C453 +
                      C15975 * C432 + C16371 + C16371 + C47839 * C452) *
                         C47785 * C15971 +
                     (C16888 + C16889) * C47785 * C47870) *
                        C47668 -
                    ((C16209 + C16208) * C47785 * C47870 +
                     (C15975 * C121 + C15984 + C15984 + C47839 * C135 +
                      C15973 * C120 + C15985 + C15985 + C15969 * C134) *
                         C47785 * C15971) *
                        C47821) *
                       C976 +
                   (((C16208 + C16209) * C47785 * C15971 +
                     (C16210 + C16211) * C47785 * C47870) *
                        C47821 -
                    ((C17672 + C17673) * C47785 * C47870 +
                     (C16889 + C16888) * C47785 * C15971) *
                        C47668) *
                       C977 +
                   (((C17673 + C17672) * C47785 * C15971 +
                     (C15973 * C1581 + C17666 + C17666 + C15969 * C1587 +
                      C15975 * C1582 + C17667 + C17667 + C47839 * C1588) *
                         C47785 * C47870) *
                        C47668 -
                    ((C17466 + C17467) * C47785 * C47870 +
                     (C16211 + C16210) * C47785 * C15971) *
                        C47821) *
                       C47852) *
                      C47546)) /
                    (p * q * std::sqrt(p + q));
    d2ee[99] += (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 (((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                    C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                       C47785 * C15971 +
                   (C15973 * C273 + C15980 + C15980 + C15969 * C293 +
                    C15975 * C272 + C15981 + C15981 + C47839 * C292) *
                       C47785 * C47870) *
                      C47581 * C47563 * C108 -
                  ((C15975 * C271 + C15982 + C15982 + C47839 * C291 +
                    C15973 * C272 + C15983 + C15983 + C15969 * C292) *
                       C47785 * C47870 +
                   (C15975 * C121 + C15984 + C15984 + C47839 * C135 +
                    C15973 * C120 + C15985 + C15985 + C15969 * C134) *
                       C47785 * C15971) *
                      C47581 * C47563 * C109 +
                  ((C15973 * C121 + C15986 + C15986 + C15969 * C135 +
                    C15975 * C122 + C15987 + C15987 + C47839 * C136) *
                       C47785 * C15971 +
                   (C15973 * C271 + C15988 + C15988 + C15969 * C291 +
                    C15975 * C277 + C15989 + C15989 + C47839 * C297) *
                       C47785 * C47870) *
                      C47581 * C47563 * C110 -
                  ((C15975 * C279 + C15990 + C15990 + C47839 * C299 +
                    C15973 * C277 + C15991 + C15991 + C15969 * C297) *
                       C47785 * C47870 +
                   (C15975 * C123 + C15992 + C15992 + C47839 * C137 +
                    C15973 * C122 + C15993 + C15993 + C15969 * C136) *
                       C47785 * C15971) *
                      C47581 * C47563 * C111 +
                  ((C15973 * C123 + C15994 + C15994 + C15969 * C137 +
                    C15975 * C124 + C15995 + C15995 + C47839 * C138) *
                       C47785 * C15971 +
                   (C15973 * C279 + C15996 + C15996 + C15969 * C299 +
                    C15975 * C584 + C15997 + C15997 + C47839 * C586) *
                       C47785 * C47870) *
                      C47581 * C47563 * C112)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 ((((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                     C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                        C47785 * C15971 +
                    (C16204 + C16205) * C47785 * C47870) *
                       C47581 * C47891 -
                   ((C16206 + C16207) * C47785 * C47870 +
                    (C16205 + C16204) * C47785 * C15971) *
                       C47581 * C47879 +
                   ((C16207 + C16206) * C47785 * C15971 +
                    (C15973 * C1052 + C16154 + C16154 + C15969 * C1064 +
                     C15975 * C1051 + C16155 + C16155 + C47839 * C1063) *
                        C47785 * C47870) *
                       C47581 * C47852) *
                      C268 +
                  (((C16208 + C16209) * C47785 * C15971 +
                    (C16210 + C16211) * C47785 * C47870) *
                       C47581 * C47879 -
                   ((C16209 + C16208) * C47785 * C47870 +
                    (C15975 * C121 + C15984 + C15984 + C47839 * C135 +
                     C15973 * C120 + C15985 + C15985 + C15969 * C134) *
                        C47785 * C15971) *
                       C47581 * C47891 -
                   ((C15975 * C1050 + C16166 + C16166 + C47839 * C1062 +
                     C15973 * C1051 + C16167 + C16167 + C15969 * C1063) *
                        C47785 * C47870 +
                    (C16211 + C16210) * C47785 * C15971) *
                       C47581 * C47852) *
                      C269 +
                  (((C15973 * C121 + C15986 + C15986 + C15969 * C135 +
                     C15975 * C122 + C15987 + C15987 + C47839 * C136) *
                        C47785 * C15971 +
                    (C16212 + C16213) * C47785 * C47870) *
                       C47581 * C47891 -
                   ((C16214 + C16215) * C47785 * C47870 +
                    (C16213 + C16212) * C47785 * C15971) *
                       C47581 * C47879 +
                   ((C16215 + C16214) * C47785 * C15971 +
                    (C15973 * C1050 + C16178 + C16178 + C15969 * C1062 +
                     C15975 * C1324 + C16179 + C16179 + C47839 * C1326) *
                        C47785 * C47870) *
                       C47581 * C47852) *
                      C47846)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 ((((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                     C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                        C47785 * C15971 +
                    (C16204 + C16205) * C47785 * C47870) *
                       C47581 * C976 -
                   ((C16206 + C16207) * C47785 * C47870 +
                    (C16205 + C16204) * C47785 * C15971) *
                       C47581 * C977 +
                   ((C16207 + C16206) * C47785 * C15971 +
                    (C15973 * C1052 + C16154 + C16154 + C15969 * C1064 +
                     C15975 * C1051 + C16155 + C16155 + C47839 * C1063) *
                        C47785 * C47870) *
                       C47581 * C47852) *
                      C47888 +
                  (((C16208 + C16209) * C47785 * C15971 +
                    (C16210 + C16211) * C47785 * C47870) *
                       C47581 * C977 -
                   ((C16209 + C16208) * C47785 * C47870 +
                    (C15975 * C121 + C15984 + C15984 + C47839 * C135 +
                     C15973 * C120 + C15985 + C15985 + C15969 * C134) *
                        C47785 * C15971) *
                       C47581 * C976 -
                   ((C15975 * C1050 + C16166 + C16166 + C47839 * C1062 +
                     C15973 * C1051 + C16167 + C16167 + C15969 * C1063) *
                        C47785 * C47870 +
                    (C16211 + C16210) * C47785 * C15971) *
                       C47581 * C47852) *
                      C47875 +
                  (((C15973 * C121 + C15986 + C15986 + C15969 * C135 +
                     C15975 * C122 + C15987 + C15987 + C47839 * C136) *
                        C47785 * C15971 +
                    (C16212 + C16213) * C47785 * C47870) *
                       C47581 * C976 -
                   ((C16214 + C16215) * C47785 * C47870 +
                    (C16213 + C16212) * C47785 * C15971) *
                       C47581 * C977 +
                   ((C16215 + C16214) * C47785 * C15971 +
                    (C15973 * C1050 + C16178 + C16178 + C15969 * C1062 +
                     C15975 * C1324 + C16179 + C16179 + C47839 * C1326) *
                        C47785 * C47870) *
                       C47581 * C47852) *
                      C47846)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 (((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                    C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                       C47785 * C15971 +
                   (C16204 + C16205) * C47785 * C47870) *
                      C47581 * C1044 -
                  ((C16206 + C16207) * C47785 * C47870 +
                   (C16205 + C16204) * C47785 * C15971) *
                      C47581 * C1045 +
                  ((C16207 + C16206) * C47785 * C15971 +
                   (C17140 + C17141) * C47785 * C47870) *
                      C47581 * C1046 -
                  ((C17142 + C17143) * C47785 * C47870 +
                   (C17141 + C17140) * C47785 * C15971) *
                      C47581 * C1047 +
                  ((C17143 + C17142) * C47785 * C15971 +
                   (C15973 * C5767 + C17130 + C17130 + C15969 * C5771 +
                    C15975 * C5768 + C17131 + C17131 + C47839 * C5772) *
                       C47785 * C47870) *
                      C47581 * C1048) *
                 C47535) /
                    (p * q * std::sqrt(p + q));
    d2ee[100] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C21709 * C119 + C21712 + C21712 + C47508 * C133) *
                         C47785 * C21706 +
                     C21888 * C21707 + C21889 * C21708) *
                        C47581 * C47622 -
                    (C21890 * C21708 + C21889 * C21707 + C21888 * C21706) *
                        C47581 * C47629 +
                    (C21889 * C21706 + C21890 * C21707 + C22609 * C21708) *
                        C47581 * C2742) *
                       C47540 +
                   ((C21891 * C21706 + C21892 * C21707 + C21893 * C21708) *
                        C47581 * C47629 -
                    (C21892 * C21708 + C21891 * C21707 +
                     (C21709 * C120 + C21717 + C21717 + C47508 * C134) *
                         C47785 * C21706) *
                        C47581 * C47622 -
                    (C22855 * C21708 + C21893 * C21707 + C21892 * C21706) *
                        C47581 * C2742) *
                       C47549 +
                   (((C21709 * C121 + C21718 + C21718 + C47508 * C135) *
                         C47785 * C21706 +
                     C21894 * C21707 + C21895 * C21708) *
                        C47581 * C47622 -
                    (C21896 * C21708 + C21895 * C21707 + C21894 * C21706) *
                        C47581 * C47629 +
                    (C21895 * C21706 + C21896 * C21707 +
                     (C21709 * C1055 + C21860 + C21860 + C47508 * C1067) *
                         C47785 * C21708) *
                        C47581 * C2742) *
                       C2745)) /
                 (p * q * std::sqrt(p + q));
    d2ee[101] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C47785 *
                 C21706 +
             C21888 * C21707 + C21889 * C21708) *
                C47821 -
            (C22416 * C21708 + C22417 * C21707 +
             (C21709 * C434 + C22009 + C22009 + C47508 * C454) * C47785 *
                 C21706) *
                C47668) *
               C47622 +
           ((C22417 * C21706 + C22416 * C21707 + C22749 * C21708) * C47668 -
            (C21890 * C21708 + C21889 * C21707 + C21888 * C21706) * C47821) *
               C47629 +
           ((C21889 * C21706 + C21890 * C21707 + C22609 * C21708) * C47821 -
            (C23116 * C21708 + C22749 * C21707 + C22416 * C21706) * C47668) *
               C2742) *
              C2482 +
          ((((C21709 * C433 + C22013 + C22013 + C47508 * C453) * C47785 *
                 C21706 +
             C22418 * C21707 + C22419 * C21708) *
                C47668 -
            (C21892 * C21708 + C21891 * C21707 +
             (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C47785 *
                 C21706) *
                C47821) *
               C47622 +
           ((C21891 * C21706 + C21892 * C21707 + C21893 * C21708) * C47821 -
            (C23008 * C21708 + C22419 * C21707 + C22418 * C21706) * C47668) *
               C47629 +
           ((C22419 * C21706 + C23008 * C21707 +
             (C21709 * C6464 + C23004 + C23004 + C47508 * C6468) * C47785 *
                 C21708) *
                C47668 -
            (C22855 * C21708 + C21893 * C21707 + C21892 * C21706) * C47821) *
               C2742) *
              C47546)) /
        (p * q * std::sqrt(p + q));
    d2ee[102] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C47785 *
                C21706 +
            C21888 * C21707 + C21889 * C21708) *
               C47581 * C47898 -
           (C21890 * C21708 + C21889 * C21707 + C21888 * C21706) * C47581 *
               C47894 +
           (C21889 * C21706 + C21890 * C21707 + C22609 * C21708) * C47581 *
               C47884 -
           (C22610 * C21708 + C22609 * C21707 + C21890 * C21706) * C47581 *
               C47862) *
              C2482 +
          ((C21891 * C21706 + C21892 * C21707 + C21893 * C21708) * C47581 *
               C47894 -
           (C21892 * C21708 + C21891 * C21707 +
            (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C47785 *
                C21706) *
               C47581 * C47898 -
           (C22855 * C21708 + C21893 * C21707 + C21892 * C21706) * C47581 *
               C47884 +
           (C21893 * C21706 + C22855 * C21707 +
            (C21709 * C5768 + C22851 + C22851 + C47508 * C5772) * C47785 *
                C21708) *
               C47581 * C47862) *
              C47546)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C47785 *
                C21706 +
            C21888 * C21707 + C21889 * C21708) *
               C47581 * C2374 -
           (C21890 * C21708 + C21889 * C21707 + C21888 * C21706) * C47581 *
               C47626) *
              C47897 +
          ((C21891 * C21706 + C21892 * C21707 + C21893 * C21708) * C47581 *
               C47626 -
           (C21892 * C21708 + C21891 * C21707 +
            (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C47785 *
                C21706) *
               C47581 * C2374) *
              C47890 +
          (((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C47785 *
                C21706 +
            C21894 * C21707 + C21895 * C21708) *
               C47581 * C2374 -
           (C21896 * C21708 + C21895 * C21707 + C21894 * C21706) * C47581 *
               C47626) *
              C47877 +
          ((C22134 * C21706 + C22135 * C21707 +
            (C21709 * C1324 + C22127 + C22127 + C47508 * C1326) * C47785 *
                C21708) *
               C47581 * C47626 -
           (C22135 * C21708 + C22134 * C21707 +
            (C21709 * C122 + C21723 + C21723 + C47508 * C136) * C47785 *
                C21706) *
               C47581 * C2374) *
              C47856)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C47785 *
                 C21706 +
             C21888 * C21707 + C21889 * C21708) *
                C47892 -
            (C22416 * C21708 + C22417 * C21707 +
             (C21709 * C434 + C22009 + C22009 + C47508 * C454) * C47785 *
                 C21706) *
                C47881 +
            ((C21709 * C435 + C22010 + C22010 + C47508 * C455) * C47785 *
                 C21706 +
             C22747 * C21707 + C22748 * C21708) *
                C47855) *
               C2374 +
           ((C22417 * C21706 + C22416 * C21707 + C22749 * C21708) * C47881 -
            (C21890 * C21708 + C21889 * C21707 + C21888 * C21706) * C47892 -
            (C22750 * C21708 + C22748 * C21707 + C22747 * C21706) * C47855) *
               C47626) *
              C2482 +
          ((((C21709 * C433 + C22013 + C22013 + C47508 * C453) * C47785 *
                 C21706 +
             C22418 * C21707 + C22419 * C21708) *
                C47881 -
            (C21892 * C21708 + C21891 * C21707 +
             (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C47785 *
                 C21706) *
                C47892 -
            (C23565 * C21708 + C23566 * C21707 +
             (C21709 * C436 + C22018 + C22018 + C47508 * C456) * C47785 *
                 C21706) *
                C47855) *
               C2374 +
           ((C21891 * C21706 + C21892 * C21707 + C21893 * C21708) * C47892 -
            (C23008 * C21708 + C22419 * C21707 + C22418 * C21706) * C47881 +
            (C23566 * C21706 + C23565 * C21707 +
             (C21709 * C5944 + C23558 + C23558 + C47508 * C5948) * C47785 *
                 C21708) *
                C47855) *
               C47626) *
              C47546)) /
            (p * q * std::sqrt(p + q));
    d2ee[103] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C47785 *
                 C21706 +
             C21888 * C21707 + C21889 * C21708) *
                C47821 -
            (C22416 * C21708 + C22417 * C21707 +
             (C21709 * C434 + C22009 + C22009 + C47508 * C454) * C47785 *
                 C21706) *
                C47668) *
               C2374 +
           ((C22417 * C21706 + C22416 * C21707 + C22749 * C21708) * C47668 -
            (C21890 * C21708 + C21889 * C21707 + C21888 * C21706) * C47821) *
               C47626) *
              C47540 +
          ((((C21709 * C433 + C22013 + C22013 + C47508 * C453) * C47785 *
                 C21706 +
             C22418 * C21707 + C22419 * C21708) *
                C47668 -
            (C21892 * C21708 + C21891 * C21707 +
             (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C47785 *
                 C21706) *
                C47821) *
               C2374 +
           ((C21891 * C21706 + C21892 * C21707 + C21893 * C21708) * C47821 -
            (C23008 * C21708 + C22419 * C21707 + C22418 * C21706) * C47668) *
               C47626) *
              C47549 +
          ((((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C47785 *
                 C21706 +
             C21894 * C21707 + C21895 * C21708) *
                C47821 -
            (C22420 * C21708 + C22421 * C21707 +
             (C21709 * C432 + C22021 + C22021 + C47508 * C452) * C47785 *
                 C21706) *
                C47668) *
               C2374 +
           ((C22421 * C21706 + C22420 * C21707 +
             (C21709 * C1582 + C22397 + C22397 + C47508 * C1588) * C47785 *
                 C21708) *
                C47668 -
            (C21896 * C21708 + C21895 * C21707 + C21894 * C21706) * C47821) *
               C47626) *
              C2745)) /
        (p * q * std::sqrt(p + q));
    d2ee[104] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C21709 * C119 + C21712 + C21712 + C47508 * C133) *
                         C47785 * C21706 +
                     C21888 * C21707 + C21889 * C21708) *
                        C47581 * C2374 -
                    (C21890 * C21708 + C21889 * C21707 + C21888 * C21706) *
                        C47581 * C47626) *
                       C47897 +
                   ((C21891 * C21706 + C21892 * C21707 + C21893 * C21708) *
                        C47581 * C47626 -
                    (C21892 * C21708 + C21891 * C21707 +
                     (C21709 * C120 + C21717 + C21717 + C47508 * C134) *
                         C47785 * C21706) *
                        C47581 * C2374) *
                       C47890 +
                   (((C21709 * C121 + C21718 + C21718 + C47508 * C135) *
                         C47785 * C21706 +
                     C21894 * C21707 + C21895 * C21708) *
                        C47581 * C2374 -
                    (C21896 * C21708 + C21895 * C21707 + C21894 * C21706) *
                        C47581 * C47626) *
                       C47877 +
                   ((C22134 * C21706 + C22135 * C21707 +
                     (C21709 * C1324 + C22127 + C22127 + C47508 * C1326) *
                         C47785 * C21708) *
                        C47581 * C47626 -
                    (C22135 * C21708 + C22134 * C21707 +
                     (C21709 * C122 + C21723 + C21723 + C47508 * C136) *
                         C47785 * C21706) *
                        C47581 * C2374) *
                       C47856)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C21709 * C119 + C21712 + C21712 + C47508 * C133) *
                         C47785 * C21706 +
                     C21888 * C21707 + C21889 * C21708) *
                        C47581 * C47898 -
                    (C21890 * C21708 + C21889 * C21707 + C21888 * C21706) *
                        C47581 * C47894 +
                    (C21889 * C21706 + C21890 * C21707 + C22609 * C21708) *
                        C47581 * C47884 -
                    (C22610 * C21708 + C22609 * C21707 + C21890 * C21706) *
                        C47581 * C47862) *
                       C2482 +
                   ((C21891 * C21706 + C21892 * C21707 + C21893 * C21708) *
                        C47581 * C47894 -
                    (C21892 * C21708 + C21891 * C21707 +
                     (C21709 * C120 + C21717 + C21717 + C47508 * C134) *
                         C47785 * C21706) *
                        C47581 * C47898 -
                    (C22855 * C21708 + C21893 * C21707 + C21892 * C21706) *
                        C47581 * C47884 +
                    (C21893 * C21706 + C22855 * C21707 +
                     (C21709 * C5768 + C22851 + C22851 + C47508 * C5772) *
                         C47785 * C21708) *
                        C47581 * C47862) *
                       C47546)) /
                     (p * q * std::sqrt(p + q));
    d2ee[105] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C47785 *
                 C21706 +
             C21888 * C21707 + C21889 * C21708) *
                C3136 -
            (C22416 * C21708 + C22417 * C21707 +
             (C21709 * C434 + C22009 + C22009 + C47508 * C454) * C47785 *
                 C21706) *
                C47668) *
               C47622 +
           ((C22417 * C21706 + C22416 * C21707 + C22749 * C21708) * C47668 -
            (C21890 * C21708 + C21889 * C21707 + C21888 * C21706) * C3136) *
               C47629 +
           ((C21889 * C21706 + C21890 * C21707 + C22609 * C21708) * C3136 -
            (C23116 * C21708 + C22749 * C21707 + C22416 * C21706) * C47668) *
               C2742) *
              C47806 +
          ((((C21709 * C433 + C22013 + C22013 + C47508 * C453) * C47785 *
                 C21706 +
             C22418 * C21707 + C22419 * C21708) *
                C47668 -
            (C21892 * C21708 + C21891 * C21707 +
             (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C47785 *
                 C21706) *
                C3136) *
               C47622 +
           ((C21891 * C21706 + C21892 * C21707 + C21893 * C21708) * C3136 -
            (C23008 * C21708 + C22419 * C21707 + C22418 * C21706) * C47668) *
               C47629 +
           ((C22419 * C21706 + C23008 * C21707 +
             (C21709 * C6464 + C23004 + C23004 + C47508 * C6468) * C47785 *
                 C21708) *
                C47668 -
            (C22855 * C21708 + C21893 * C21707 + C21892 * C21706) * C3136) *
               C2742) *
              C47546)) /
        (p * q * std::sqrt(p + q));
    d2ee[106] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C47785 *
                C21706 +
            C21888 * C21707 + C21889 * C21708) *
               C47664 -
           (C22416 * C21708 + C22417 * C21707 +
            (C21709 * C434 + C22009 + C22009 + C47508 * C454) * C47785 *
                C21706) *
               C47671 +
           ((C21709 * C435 + C22010 + C22010 + C47508 * C455) * C47785 *
                C21706 +
            C22747 * C21707 + C22748 * C21708) *
               C3644) *
              C47622 +
          ((C22417 * C21706 + C22416 * C21707 + C22749 * C21708) * C47671 -
           (C21890 * C21708 + C21889 * C21707 + C21888 * C21706) * C47664 -
           (C22750 * C21708 + C22748 * C21707 + C22747 * C21706) * C3644) *
              C47629 +
          ((C21889 * C21706 + C21890 * C21707 + C22609 * C21708) * C47664 -
           (C23116 * C21708 + C22749 * C21707 + C22416 * C21706) * C47671 +
           (C22748 * C21706 + C22750 * C21707 +
            (C21709 * C22720 + C22734 + C22734 + C47508 * C22722) * C47785 *
                C21708) *
               C3644) *
              C2742) *
         C47535) /
        (p * q * std::sqrt(p + q));
    d2ee[107] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C47785 *
                C21706 +
            C21888 * C21707 + C21889 * C21708) *
               C3136 -
           (C22416 * C21708 + C22417 * C21707 +
            (C21709 * C434 + C22009 + C22009 + C47508 * C454) * C47785 *
                C21706) *
               C47668) *
              C47898 +
          ((C22417 * C21706 + C22416 * C21707 + C22749 * C21708) * C47668 -
           (C21890 * C21708 + C21889 * C21707 + C21888 * C21706) * C3136) *
              C47894 +
          ((C21889 * C21706 + C21890 * C21707 + C22609 * C21708) * C3136 -
           (C23116 * C21708 + C22749 * C21707 + C22416 * C21706) * C47668) *
              C47884 +
          ((C22749 * C21706 + C23116 * C21707 +
            (C21709 * C23106 + C23112 + C23112 + C47508 * C23108) * C47785 *
                C21708) *
               C47668 -
           (C22610 * C21708 + C22609 * C21707 + C21890 * C21706) * C3136) *
              C47862) *
         C47535) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C47785 *
                 C21706 +
             C21888 * C21707 + C21889 * C21708) *
                C3136 -
            (C22416 * C21708 + C22417 * C21707 +
             (C21709 * C434 + C22009 + C22009 + C47508 * C454) * C47785 *
                 C21706) *
                C47668) *
               C2374 +
           ((C22417 * C21706 + C22416 * C21707 + C22749 * C21708) * C47668 -
            (C21890 * C21708 + C21889 * C21707 + C21888 * C21706) * C3136) *
               C47626) *
              C47888 +
          ((((C21709 * C433 + C22013 + C22013 + C47508 * C453) * C47785 *
                 C21706 +
             C22418 * C21707 + C22419 * C21708) *
                C47668 -
            (C21892 * C21708 + C21891 * C21707 +
             (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C47785 *
                 C21706) *
                C3136) *
               C2374 +
           ((C21891 * C21706 + C21892 * C21707 + C21893 * C21708) * C3136 -
            (C23008 * C21708 + C22419 * C21707 + C22418 * C21706) * C47668) *
               C47626) *
              C47875 +
          ((((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C47785 *
                 C21706 +
             C21894 * C21707 + C21895 * C21708) *
                C3136 -
            (C22420 * C21708 + C22421 * C21707 +
             (C21709 * C432 + C22021 + C22021 + C47508 * C452) * C47785 *
                 C21706) *
                C47668) *
               C2374 +
           ((C22421 * C21706 + C22420 * C21707 +
             (C21709 * C1582 + C22397 + C22397 + C47508 * C1588) * C47785 *
                 C21708) *
                C47668 -
            (C21896 * C21708 + C21895 * C21707 + C21894 * C21706) * C3136) *
               C47626) *
              C47846)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C47785 *
                C21706 +
            C21888 * C21707 + C21889 * C21708) *
               C47899 -
           (C22416 * C21708 + C22417 * C21707 +
            (C21709 * C434 + C22009 + C22009 + C47508 * C454) * C47785 *
                C21706) *
               C47896 +
           ((C21709 * C435 + C22010 + C22010 + C47508 * C455) * C47785 *
                C21706 +
            C22747 * C21707 + C22748 * C21708) *
               C47887 -
           (C23780 * C21708 + C23781 * C21707 +
            (C21709 * C1884 + C23404 + C23404 + C47508 * C1896) * C47785 *
                C21706) *
               C47868) *
              C2374 +
          ((C22417 * C21706 + C22416 * C21707 + C22749 * C21708) * C47896 -
           (C21890 * C21708 + C21889 * C21707 + C21888 * C21706) * C47899 -
           (C22750 * C21708 + C22748 * C21707 + C22747 * C21706) * C47887 +
           (C23781 * C21706 + C23780 * C21707 +
            (C21709 * C23765 + C23773 + C23773 + C47508 * C23767) * C47785 *
                C21708) *
               C47868) *
              C47626) *
         C47535) /
            (p * q * std::sqrt(p + q));
    d2ee[108] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C47785 *
                 C21706 +
             C21888 * C21707 + C21889 * C21708) *
                C47664 -
            (C22416 * C21708 + C22417 * C21707 +
             (C21709 * C434 + C22009 + C22009 + C47508 * C454) * C47785 *
                 C21706) *
                C47671 +
            ((C21709 * C435 + C22010 + C22010 + C47508 * C455) * C47785 *
                 C21706 +
             C22747 * C21707 + C22748 * C21708) *
                C3644) *
               C2374 +
           ((C22417 * C21706 + C22416 * C21707 + C22749 * C21708) * C47671 -
            (C21890 * C21708 + C21889 * C21707 + C21888 * C21706) * C47664 -
            (C22750 * C21708 + C22748 * C21707 + C22747 * C21706) * C3644) *
               C47626) *
              C47806 +
          ((((C21709 * C433 + C22013 + C22013 + C47508 * C453) * C47785 *
                 C21706 +
             C22418 * C21707 + C22419 * C21708) *
                C47671 -
            (C21892 * C21708 + C21891 * C21707 +
             (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C47785 *
                 C21706) *
                C47664 -
            (C23565 * C21708 + C23566 * C21707 +
             (C21709 * C436 + C22018 + C22018 + C47508 * C456) * C47785 *
                 C21706) *
                C3644) *
               C2374 +
           ((C21891 * C21706 + C21892 * C21707 + C21893 * C21708) * C47664 -
            (C23008 * C21708 + C22419 * C21707 + C22418 * C21706) * C47671 +
            (C23566 * C21706 + C23565 * C21707 +
             (C21709 * C5944 + C23558 + C23558 + C47508 * C5948) * C47785 *
                 C21708) *
                C3644) *
               C47626) *
              C47546)) /
        (p * q * std::sqrt(p + q));
    d2ee[109] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C47785 *
                 C21706 +
             C21888 * C21707 + C21889 * C21708) *
                C3136 -
            (C22416 * C21708 + C22417 * C21707 +
             (C21709 * C434 + C22009 + C22009 + C47508 * C454) * C47785 *
                 C21706) *
                C47668) *
               C2374 +
           ((C22417 * C21706 + C22416 * C21707 + C22749 * C21708) * C47668 -
            (C21890 * C21708 + C21889 * C21707 + C21888 * C21706) * C3136) *
               C47626) *
              C47888 +
          ((((C21709 * C433 + C22013 + C22013 + C47508 * C453) * C47785 *
                 C21706 +
             C22418 * C21707 + C22419 * C21708) *
                C47668 -
            (C21892 * C21708 + C21891 * C21707 +
             (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C47785 *
                 C21706) *
                C3136) *
               C2374 +
           ((C21891 * C21706 + C21892 * C21707 + C21893 * C21708) * C3136 -
            (C23008 * C21708 + C22419 * C21707 + C22418 * C21706) * C47668) *
               C47626) *
              C47875 +
          ((((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C47785 *
                 C21706 +
             C21894 * C21707 + C21895 * C21708) *
                C3136 -
            (C22420 * C21708 + C22421 * C21707 +
             (C21709 * C432 + C22021 + C22021 + C47508 * C452) * C47785 *
                 C21706) *
                C47668) *
               C2374 +
           ((C22421 * C21706 + C22420 * C21707 +
             (C21709 * C1582 + C22397 + C22397 + C47508 * C1588) * C47785 *
                 C21708) *
                C47668 -
            (C21896 * C21708 + C21895 * C21707 + C21894 * C21706) * C3136) *
               C47626) *
              C47846)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C47785 *
                C21706 +
            C21888 * C21707 + C21889 * C21708) *
               C3136 -
           (C22416 * C21708 + C22417 * C21707 +
            (C21709 * C434 + C22009 + C22009 + C47508 * C454) * C47785 *
                C21706) *
               C47668) *
              C47898 +
          ((C22417 * C21706 + C22416 * C21707 + C22749 * C21708) * C47668 -
           (C21890 * C21708 + C21889 * C21707 + C21888 * C21706) * C3136) *
              C47894 +
          ((C21889 * C21706 + C21890 * C21707 + C22609 * C21708) * C3136 -
           (C23116 * C21708 + C22749 * C21707 + C22416 * C21706) * C47668) *
              C47884 +
          ((C22749 * C21706 + C23116 * C21707 +
            (C21709 * C23106 + C23112 + C23112 + C47508 * C23108) * C47785 *
                C21708) *
               C47668 -
           (C22610 * C21708 + C22609 * C21707 + C21890 * C21706) * C3136) *
              C47862) *
         C47535) /
            (p * q * std::sqrt(p + q));
    d2ee[110] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C47785 *
                C21706 +
            C21888 * C21707 + C21889 * C21708) *
               C47581 * C1318 -
           (C21890 * C21708 + C21889 * C21707 + C21888 * C21706) * C47581 *
               C1319 +
           (C21889 * C21706 + C21890 * C21707 + C22609 * C21708) * C47581 *
               C1320 -
           (C22610 * C21708 + C22609 * C21707 + C21890 * C21706) * C47581 *
               C47862) *
              C47806 +
          ((C21891 * C21706 + C21892 * C21707 + C21893 * C21708) * C47581 *
               C1319 -
           (C21892 * C21708 + C21891 * C21707 +
            (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C47785 *
                C21706) *
               C47581 * C1318 -
           (C22855 * C21708 + C21893 * C21707 + C21892 * C21706) * C47581 *
               C1320 +
           (C21893 * C21706 + C22855 * C21707 +
            (C21709 * C5768 + C22851 + C22851 + C47508 * C5772) * C47785 *
                C21708) *
               C47581 * C47862) *
              C47546)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C47785 *
                C21706 +
            C21888 * C21707 + C21889 * C21708) *
               C47581 * C47820 -
           (C21890 * C21708 + C21889 * C21707 + C21888 * C21706) * C47581 *
               C47626) *
              C580 +
          ((C21891 * C21706 + C21892 * C21707 + C21893 * C21708) * C47581 *
               C47626 -
           (C21892 * C21708 + C21891 * C21707 +
            (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C47785 *
                C21706) *
               C47581 * C47820) *
              C581 +
          (((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C47785 *
                C21706 +
            C21894 * C21707 + C21895 * C21708) *
               C47581 * C47820 -
           (C21896 * C21708 + C21895 * C21707 + C21894 * C21706) * C47581 *
               C47626) *
              C582 +
          ((C22134 * C21706 + C22135 * C21707 +
            (C21709 * C1324 + C22127 + C22127 + C47508 * C1326) * C47785 *
                C21708) *
               C47581 * C47626 -
           (C22135 * C21708 + C22134 * C21707 +
            (C21709 * C122 + C21723 + C21723 + C47508 * C136) * C47785 *
                C21706) *
               C47581 * C47820) *
              C47856)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C47785 *
                 C21706 +
             C21888 * C21707 + C21889 * C21708) *
                C1702 -
            (C22416 * C21708 + C22417 * C21707 +
             (C21709 * C434 + C22009 + C22009 + C47508 * C454) * C47785 *
                 C21706) *
                C1703 +
            ((C21709 * C435 + C22010 + C22010 + C47508 * C455) * C47785 *
                 C21706 +
             C22747 * C21707 + C22748 * C21708) *
                C47855) *
               C47820 +
           ((C22417 * C21706 + C22416 * C21707 + C22749 * C21708) * C1703 -
            (C21890 * C21708 + C21889 * C21707 + C21888 * C21706) * C1702 -
            (C22750 * C21708 + C22748 * C21707 + C22747 * C21706) * C47855) *
               C47626) *
              C47806 +
          ((((C21709 * C433 + C22013 + C22013 + C47508 * C453) * C47785 *
                 C21706 +
             C22418 * C21707 + C22419 * C21708) *
                C1703 -
            (C21892 * C21708 + C21891 * C21707 +
             (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C47785 *
                 C21706) *
                C1702 -
            (C23565 * C21708 + C23566 * C21707 +
             (C21709 * C436 + C22018 + C22018 + C47508 * C456) * C47785 *
                 C21706) *
                C47855) *
               C47820 +
           ((C21891 * C21706 + C21892 * C21707 + C21893 * C21708) * C1702 -
            (C23008 * C21708 + C22419 * C21707 + C22418 * C21706) * C1703 +
            (C23566 * C21706 + C23565 * C21707 +
             (C21709 * C5944 + C23558 + C23558 + C47508 * C5948) * C47785 *
                 C21708) *
                C47855) *
               C47626) *
              C47546)) /
            (p * q * std::sqrt(p + q));
    d2ee[111] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C47785 *
                C21706 +
            C21888 * C21707 + C21889 * C21708) *
               C47821 -
           (C22416 * C21708 + C22417 * C21707 +
            (C21709 * C434 + C22009 + C22009 + C47508 * C454) * C47785 *
                C21706) *
               C47668) *
              C1318 +
          ((C22417 * C21706 + C22416 * C21707 + C22749 * C21708) * C47668 -
           (C21890 * C21708 + C21889 * C21707 + C21888 * C21706) * C47821) *
              C1319 +
          ((C21889 * C21706 + C21890 * C21707 + C22609 * C21708) * C47821 -
           (C23116 * C21708 + C22749 * C21707 + C22416 * C21706) * C47668) *
              C1320 +
          ((C22749 * C21706 + C23116 * C21707 +
            (C21709 * C23106 + C23112 + C23112 + C47508 * C23108) * C47785 *
                C21708) *
               C47668 -
           (C22610 * C21708 + C22609 * C21707 + C21890 * C21706) * C47821) *
              C47862) *
         C47535) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C47785 *
                 C21706 +
             C21888 * C21707 + C21889 * C21708) *
                C47821 -
            (C22416 * C21708 + C22417 * C21707 +
             (C21709 * C434 + C22009 + C22009 + C47508 * C454) * C47785 *
                 C21706) *
                C47668) *
               C47820 +
           ((C22417 * C21706 + C22416 * C21707 +
             (C21709 * C1580 + C22387 + C22387 + C47508 * C1586) * C47785 *
                 C21708) *
                C47668 -
            (C21890 * C21708 + C21889 * C21707 + C21888 * C21706) * C47821) *
               C47626) *
              C268 +
          ((((C21709 * C433 + C22013 + C22013 + C47508 * C453) * C47785 *
                 C21706 +
             C22418 * C21707 + C22419 * C21708) *
                C47668 -
            (C21892 * C21708 + C21891 * C21707 +
             (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C47785 *
                 C21706) *
                C47821) *
               C47820 +
           ((C21891 * C21706 + C21892 * C21707 + C21893 * C21708) * C47821 -
            ((C21709 * C1581 + C22392 + C22392 + C47508 * C1587) * C47785 *
                 C21708 +
             C22419 * C21707 + C22418 * C21706) *
                C47668) *
               C47626) *
              C269 +
          ((((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C47785 *
                 C21706 +
             C21894 * C21707 + C21895 * C21708) *
                C47821 -
            (C22420 * C21708 + C22421 * C21707 +
             (C21709 * C432 + C22021 + C22021 + C47508 * C452) * C47785 *
                 C21706) *
                C47668) *
               C47820 +
           ((C22421 * C21706 + C22420 * C21707 +
             (C21709 * C1582 + C22397 + C22397 + C47508 * C1588) * C47785 *
                 C21708) *
                C47668 -
            (C21896 * C21708 + C21895 * C21707 + C21894 * C21706) * C47821) *
               C47626) *
              C47846)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C47785 *
                C21706 +
            C21888 * C21707 + C21889 * C21708) *
               C2156 -
           (C22416 * C21708 + C22417 * C21707 +
            (C21709 * C434 + C22009 + C22009 + C47508 * C454) * C47785 *
                C21706) *
               C2157 +
           ((C21709 * C435 + C22010 + C22010 + C47508 * C455) * C47785 *
                C21706 +
            C22747 * C21707 + C22748 * C21708) *
               C2158 -
           (C23780 * C21708 + C23781 * C21707 +
            (C21709 * C1884 + C23404 + C23404 + C47508 * C1896) * C47785 *
                C21706) *
               C47868) *
              C47820 +
          ((C22417 * C21706 + C22416 * C21707 + C22749 * C21708) * C2157 -
           (C21890 * C21708 + C21889 * C21707 + C21888 * C21706) * C2156 -
           (C22750 * C21708 + C22748 * C21707 + C22747 * C21706) * C2158 +
           (C23781 * C21706 + C23780 * C21707 +
            (C21709 * C23765 + C23773 + C23773 + C47508 * C23767) * C47785 *
                C21708) *
               C47868) *
              C47626) *
         C47535) /
            (p * q * std::sqrt(p + q));
    d2ee[112] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C47785 *
                   C21706 +
               (C21709 * C273 + C21713 + C21713 + C47508 * C293) * C47785 *
                   C21707 +
               (C21709 * C274 + C21714 + C21714 + C47508 * C294) * C47785 *
                   C21708) *
                  C47581 * C47563 * C108 -
              ((C21709 * C275 + C21715 + C21715 + C47508 * C295) * C47785 *
                   C21708 +
               (C21709 * C272 + C21716 + C21716 + C47508 * C292) * C47785 *
                   C21707 +
               (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C47785 *
                   C21706) *
                  C47581 * C47563 * C109 +
              ((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C47785 *
                   C21706 +
               (C21709 * C271 + C21719 + C21719 + C47508 * C291) * C47785 *
                   C21707 +
               (C21709 * C276 + C21720 + C21720 + C47508 * C296) * C47785 *
                   C21708) *
                  C47581 * C47563 * C110 -
              ((C21709 * C278 + C21721 + C21721 + C47508 * C298) * C47785 *
                   C21708 +
               (C21709 * C277 + C21722 + C21722 + C47508 * C297) * C47785 *
                   C21707 +
               (C21709 * C122 + C21723 + C21723 + C47508 * C136) * C47785 *
                   C21706) *
                  C47581 * C47563 * C111 +
              ((C21709 * C123 + C21724 + C21724 + C47508 * C137) * C47785 *
                   C21706 +
               (C21709 * C279 + C21725 + C21725 + C47508 * C299) * C47785 *
                   C21707 +
               (C21709 * C280 + C21726 + C21726 + C47508 * C300) * C47785 *
                   C21708) *
                  C47581 * C47563 * C112) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C47785 *
                    C21706 +
                C21888 * C21707 + C21889 * C21708) *
                   C47581 * C47891 -
               (C21890 * C21708 + C21889 * C21707 + C21888 * C21706) * C47581 *
                   C47879 +
               (C21889 * C21706 + C21890 * C21707 +
                (C21709 * C1053 + C21844 + C21844 + C47508 * C1065) * C47785 *
                    C21708) *
                   C47581 * C47852) *
                  C268 +
              ((C21891 * C21706 + C21892 * C21707 + C21893 * C21708) * C47581 *
                   C47879 -
               (C21892 * C21708 + C21891 * C21707 +
                (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C47785 *
                    C21706) *
                   C47581 * C47891 -
               ((C21709 * C1054 + C21852 + C21852 + C47508 * C1066) * C47785 *
                    C21708 +
                C21893 * C21707 + C21892 * C21706) *
                   C47581 * C47852) *
                  C269 +
              (((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C47785 *
                    C21706 +
                C21894 * C21707 + C21895 * C21708) *
                   C47581 * C47891 -
               (C21896 * C21708 + C21895 * C21707 + C21894 * C21706) * C47581 *
                   C47879 +
               (C21895 * C21706 + C21896 * C21707 +
                (C21709 * C1055 + C21860 + C21860 + C47508 * C1067) * C47785 *
                    C21708) *
                   C47581 * C47852) *
                  C47846)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C47785 *
                C21706 +
            C21888 * C21707 + C21889 * C21708) *
               C47892 -
           ((C21709 * C1189 + C22007 + C22007 + C47508 * C1207) * C47785 *
                C21708 +
            (C21709 * C842 + C22008 + C22008 + C47508 * C852) * C47785 *
                C21707 +
            (C21709 * C434 + C22009 + C22009 + C47508 * C454) * C47785 *
                C21706) *
               C47881 +
           ((C21709 * C435 + C22010 + C22010 + C47508 * C455) * C47785 *
                C21706 +
            (C21709 * C1186 + C22011 + C22011 + C47508 * C1204) * C47785 *
                C21707 +
            (C21709 * C1190 + C22012 + C22012 + C47508 * C1208) * C47785 *
                C21708) *
               C47855) *
              C47563 * C268 +
          (((C21709 * C433 + C22013 + C22013 + C47508 * C453) * C47785 *
                C21706 +
            (C21709 * C843 + C22014 + C22014 + C47508 * C853) * C47785 *
                C21707 +
            (C21709 * C1188 + C22015 + C22015 + C47508 * C1206) * C47785 *
                C21708) *
               C47881 -
           (C21892 * C21708 + C21891 * C21707 +
            (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C47785 *
                C21706) *
               C47892 -
           ((C21709 * C1191 + C22016 + C22016 + C47508 * C1209) * C47785 *
                C21708 +
            (C21709 * C1185 + C22017 + C22017 + C47508 * C1203) * C47785 *
                C21707 +
            (C21709 * C436 + C22018 + C22018 + C47508 * C456) * C47785 *
                C21706) *
               C47855) *
              C47563 * C269 +
          (((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C47785 *
                C21706 +
            C21894 * C21707 + C21895 * C21708) *
               C47892 -
           ((C21709 * C1187 + C22019 + C22019 + C47508 * C1205) * C47785 *
                C21708 +
            (C21709 * C844 + C22020 + C22020 + C47508 * C854) * C47785 *
                C21707 +
            (C21709 * C432 + C22021 + C22021 + C47508 * C452) * C47785 *
                C21706) *
               C47881 +
           ((C21709 * C437 + C22022 + C22022 + C47508 * C457) * C47785 *
                C21706 +
            (C21709 * C1184 + C22023 + C22023 + C47508 * C1202) * C47785 *
                C21707 +
            (C21709 * C1192 + C22024 + C22024 + C47508 * C1210) * C47785 *
                C21708) *
               C47855) *
              C47563 * C47846)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C47785 *
                C21706 +
            C21888 * C21707 + C21889 * C21708) *
               C47581 * C976 -
           (C21890 * C21708 + C21889 * C21707 + C21888 * C21706) * C47581 *
               C977 +
           (C21889 * C21706 + C21890 * C21707 +
            (C21709 * C1053 + C21844 + C21844 + C47508 * C1065) * C47785 *
                C21708) *
               C47581 * C47852) *
              C47888 +
          ((C21891 * C21706 + C21892 * C21707 + C21893 * C21708) * C47581 *
               C977 -
           (C21892 * C21708 + C21891 * C21707 +
            (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C47785 *
                C21706) *
               C47581 * C976 -
           ((C21709 * C1054 + C21852 + C21852 + C47508 * C1066) * C47785 *
                C21708 +
            C21893 * C21707 + C21892 * C21706) *
               C47581 * C47852) *
              C47875 +
          (((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C47785 *
                C21706 +
            C21894 * C21707 + C21895 * C21708) *
               C47581 * C976 -
           (C21896 * C21708 + C21895 * C21707 + C21894 * C21706) * C47581 *
               C977 +
           (C21895 * C21706 + C21896 * C21707 +
            (C21709 * C1055 + C21860 + C21860 + C47508 * C1067) * C47785 *
                C21708) *
               C47581 * C47852) *
              C47846)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C47785 * C21706 +
           C21888 * C21707 + C21889 * C21708) *
              C47581 * C1044 -
          (C21890 * C21708 + C21889 * C21707 + C21888 * C21706) * C47581 *
              C1045 +
          (C21889 * C21706 + C21890 * C21707 + C22609 * C21708) * C47581 *
              C1046 -
          (C22610 * C21708 + C22609 * C21707 + C21890 * C21706) * C47581 *
              C1047 +
          (C22609 * C21706 + C22610 * C21707 +
           (C21709 * C22593 + C22602 + C22602 + C47508 * C22595) * C47785 *
               C21708) *
              C47581 * C1048) *
         C47535) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C47785 *
                C21706 +
            C21888 * C21707 + C21889 * C21708) *
               C47892 -
           (C22416 * C21708 + C22417 * C21707 +
            (C21709 * C434 + C22009 + C22009 + C47508 * C454) * C47785 *
                C21706) *
               C47881 +
           ((C21709 * C435 + C22010 + C22010 + C47508 * C455) * C47785 *
                C21706 +
            C22747 * C21707 + C22748 * C21708) *
               C47855) *
              C976 +
          ((C22417 * C21706 + C22416 * C21707 + C22749 * C21708) * C47881 -
           (C21890 * C21708 + C21889 * C21707 + C21888 * C21706) * C47892 -
           (C22750 * C21708 + C22748 * C21707 + C22747 * C21706) * C47855) *
              C977 +
          ((C21889 * C21706 + C21890 * C21707 + C22609 * C21708) * C47892 -
           ((C21709 * C6463 + C22733 + C22733 + C47508 * C6467) * C47785 *
                C21708 +
            C22749 * C21707 + C22416 * C21706) *
               C47881 +
           (C22748 * C21706 + C22750 * C21707 +
            (C21709 * C22720 + C22734 + C22734 + C47508 * C22722) * C47785 *
                C21708) *
               C47855) *
              C47852) *
         C47535) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C47785 *
                C21706 +
            C21888 * C21707 + C21889 * C21708) *
               C1702 -
           (C22416 * C21708 + C22417 * C21707 +
            (C21709 * C434 + C22009 + C22009 + C47508 * C454) * C47785 *
                C21706) *
               C1703 +
           ((C21709 * C435 + C22010 + C22010 + C47508 * C455) * C47785 *
                C21706 +
            C22747 * C21707 + C22748 * C21708) *
               C47855) *
              C47563 * C47888 +
          (((C21709 * C433 + C22013 + C22013 + C47508 * C453) * C47785 *
                C21706 +
            C22418 * C21707 + C22419 * C21708) *
               C1703 -
           (C21892 * C21708 + C21891 * C21707 +
            (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C47785 *
                C21706) *
               C1702 -
           ((C21709 * C1191 + C22016 + C22016 + C47508 * C1209) * C47785 *
                C21708 +
            (C21709 * C1185 + C22017 + C22017 + C47508 * C1203) * C47785 *
                C21707 +
            (C21709 * C436 + C22018 + C22018 + C47508 * C456) * C47785 *
                C21706) *
               C47855) *
              C47563 * C47875 +
          (((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C47785 *
                C21706 +
            C21894 * C21707 + C21895 * C21708) *
               C1702 -
           (C22420 * C21708 + C22421 * C21707 +
            (C21709 * C432 + C22021 + C22021 + C47508 * C452) * C47785 *
                C21706) *
               C1703 +
           ((C21709 * C437 + C22022 + C22022 + C47508 * C457) * C47785 *
                C21706 +
            (C21709 * C1184 + C22023 + C22023 + C47508 * C1202) * C47785 *
                C21707 +
            (C21709 * C1192 + C22024 + C22024 + C47508 * C1210) * C47785 *
                C21708) *
               C47855) *
              C47563 * C47846)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C47785 *
                C21706 +
            C21888 * C21707 + C21889 * C21708) *
               C1702 -
           (C22416 * C21708 + C22417 * C21707 +
            (C21709 * C434 + C22009 + C22009 + C47508 * C454) * C47785 *
                C21706) *
               C1703 +
           ((C21709 * C435 + C22010 + C22010 + C47508 * C455) * C47785 *
                C21706 +
            C22747 * C21707 + C22748 * C21708) *
               C47855) *
              C47891 +
          ((C22417 * C21706 + C22416 * C21707 + C22749 * C21708) * C1703 -
           (C21890 * C21708 + C21889 * C21707 + C21888 * C21706) * C1702 -
           (C22750 * C21708 + C22748 * C21707 + C22747 * C21706) * C47855) *
              C47879 +
          ((C21889 * C21706 + C21890 * C21707 + C22609 * C21708) * C1702 -
           (C23116 * C21708 + C22749 * C21707 + C22416 * C21706) * C1703 +
           (C22748 * C21706 + C22750 * C21707 +
            (C21709 * C22720 + C22734 + C22734 + C47508 * C22722) * C47785 *
                C21708) *
               C47855) *
              C47852) *
         C47535) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C47785 * C21706 +
           C21888 * C21707 + C21889 * C21708) *
              C1877 -
          (C22416 * C21708 + C22417 * C21707 +
           (C21709 * C434 + C22009 + C22009 + C47508 * C454) * C47785 *
               C21706) *
              C1878 +
          ((C21709 * C435 + C22010 + C22010 + C47508 * C455) * C47785 * C21706 +
           C22747 * C21707 + C22748 * C21708) *
              C1879 -
          ((C21709 * C7339 + C23402 + C23402 + C47508 * C7343) * C47785 *
               C21708 +
           (C21709 * C2264 + C23403 + C23403 + C47508 * C2270) * C47785 *
               C21707 +
           (C21709 * C1884 + C23404 + C23404 + C47508 * C1896) * C47785 *
               C21706) *
              C1880 +
          ((C21709 * C1885 + C23405 + C23405 + C47508 * C1897) * C47785 *
               C21706 +
           (C21709 * C6855 + C23406 + C23406 + C47508 * C6859) * C47785 *
               C21707 +
           (C21709 * C23398 + C23407 + C23407 + C47508 * C23400) * C47785 *
               C21708) *
              C1881) *
         C47563 * C47535) /
            (p * q * std::sqrt(p + q));
    d2ee[113] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C47785 *
                 C21706 +
             C21888 * C21707 + C21889 * C21708) *
                C47821 -
            (C22416 * C21708 + C22417 * C21707 +
             (C21709 * C434 + C22009 + C22009 + C47508 * C454) * C47785 *
                 C21706) *
                C47668) *
               C976 +
           ((C22417 * C21706 + C22416 * C21707 + C22749 * C21708) * C47668 -
            (C21890 * C21708 + C21889 * C21707 + C21888 * C21706) * C47821) *
               C977 +
           ((C21889 * C21706 + C21890 * C21707 + C22609 * C21708) * C47821 -
            ((C21709 * C6463 + C22733 + C22733 + C47508 * C6467) * C47785 *
                 C21708 +
             C22749 * C21707 + C22416 * C21706) *
                C47668) *
               C47852) *
              C47806 +
          ((((C21709 * C433 + C22013 + C22013 + C47508 * C453) * C47785 *
                 C21706 +
             C22418 * C21707 + C22419 * C21708) *
                C47668 -
            (C21892 * C21708 + C21891 * C21707 +
             (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C47785 *
                 C21706) *
                C47821) *
               C976 +
           ((C21891 * C21706 + C21892 * C21707 + C21893 * C21708) * C47821 -
            (C23008 * C21708 + C22419 * C21707 + C22418 * C21706) * C47668) *
               C977 +
           ((C22419 * C21706 + C23008 * C21707 +
             (C21709 * C6464 + C23004 + C23004 + C47508 * C6468) * C47785 *
                 C21708) *
                C47668 -
            (C22855 * C21708 + C21893 * C21707 + C21892 * C21706) * C47821) *
               C47852) *
              C47546)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C47785 *
                C21706 +
            C21888 * C21707 + C21889 * C21708) *
               C47821 -
           ((C21709 * C1189 + C22007 + C22007 + C47508 * C1207) * C47785 *
                C21708 +
            (C21709 * C842 + C22008 + C22008 + C47508 * C852) * C47785 *
                C21707 +
            (C21709 * C434 + C22009 + C22009 + C47508 * C454) * C47785 *
                C21706) *
               C47668) *
              C47563 * C580 +
          (((C21709 * C433 + C22013 + C22013 + C47508 * C453) * C47785 *
                C21706 +
            (C21709 * C843 + C22014 + C22014 + C47508 * C853) * C47785 *
                C21707 +
            (C21709 * C1188 + C22015 + C22015 + C47508 * C1206) * C47785 *
                C21708) *
               C47668 -
           (C21892 * C21708 + C21891 * C21707 +
            (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C47785 *
                C21706) *
               C47821) *
              C47563 * C581 +
          (((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C47785 *
                C21706 +
            C21894 * C21707 + C21895 * C21708) *
               C47821 -
           ((C21709 * C1187 + C22019 + C22019 + C47508 * C1205) * C47785 *
                C21708 +
            (C21709 * C844 + C22020 + C22020 + C47508 * C854) * C47785 *
                C21707 +
            (C21709 * C432 + C22021 + C22021 + C47508 * C452) * C47785 *
                C21706) *
               C47668) *
              C47563 * C582 +
          (((C21709 * C438 + C22234 + C22234 + C47508 * C458) * C47785 *
                C21706 +
            (C21709 * C845 + C22235 + C22235 + C47508 * C855) * C47785 *
                C21707 +
            (C21709 * C1476 + C22236 + C22236 + C47508 * C1478) * C47785 *
                C21708) *
               C47668 -
           (C22135 * C21708 + C22134 * C21707 +
            (C21709 * C122 + C21723 + C21723 + C47508 * C136) * C47785 *
                C21706) *
               C47821) *
              C47563 * C47856)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C47785 *
                C21706 +
            C21888 * C21707 + C21889 * C21708) *
               C2156 -
           (C22416 * C21708 + C22417 * C21707 +
            (C21709 * C434 + C22009 + C22009 + C47508 * C454) * C47785 *
                C21706) *
               C2157 +
           ((C21709 * C435 + C22010 + C22010 + C47508 * C455) * C47785 *
                C21706 +
            C22747 * C21707 + C22748 * C21708) *
               C2158 -
           ((C21709 * C7339 + C23402 + C23402 + C47508 * C7343) * C47785 *
                C21708 +
            (C21709 * C2264 + C23403 + C23403 + C47508 * C2270) * C47785 *
                C21707 +
            (C21709 * C1884 + C23404 + C23404 + C47508 * C1896) * C47785 *
                C21706) *
               C47868) *
              C47563 * C47806 +
          (((C21709 * C433 + C22013 + C22013 + C47508 * C453) * C47785 *
                C21706 +
            C22418 * C21707 + C22419 * C21708) *
               C2157 -
           (C21892 * C21708 + C21891 * C21707 +
            (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C47785 *
                C21706) *
               C2156 -
           (C23565 * C21708 + C23566 * C21707 +
            (C21709 * C436 + C22018 + C22018 + C47508 * C456) * C47785 *
                C21706) *
               C2158 +
           ((C21709 * C1883 + C23665 + C23665 + C47508 * C1895) * C47785 *
                C21706 +
            (C21709 * C2265 + C23666 + C23666 + C47508 * C2271) * C47785 *
                C21707 +
            (C21709 * C7340 + C23667 + C23667 + C47508 * C7344) * C47785 *
                C21708) *
               C47868) *
              C47563 * C47546)) /
            (p * q * std::sqrt(p + q));
    d2ee[114] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C47785 *
                C21706 +
            C21888 * C21707 + C21889 * C21708) *
               C47581 * C47891 -
           (C21890 * C21708 + C21889 * C21707 + C21888 * C21706) * C47581 *
               C47879 +
           (C21889 * C21706 + C21890 * C21707 +
            (C21709 * C1053 + C21844 + C21844 + C47508 * C1065) * C47785 *
                C21708) *
               C47581 * C47852) *
              C268 +
          ((C21891 * C21706 + C21892 * C21707 + C21893 * C21708) * C47581 *
               C47879 -
           (C21892 * C21708 + C21891 * C21707 +
            (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C47785 *
                C21706) *
               C47581 * C47891 -
           ((C21709 * C1054 + C21852 + C21852 + C47508 * C1066) * C47785 *
                C21708 +
            C21893 * C21707 + C21892 * C21706) *
               C47581 * C47852) *
              C269 +
          (((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C47785 *
                C21706 +
            C21894 * C21707 + C21895 * C21708) *
               C47581 * C47891 -
           (C21896 * C21708 + C21895 * C21707 + C21894 * C21706) * C47581 *
               C47879 +
           (C21895 * C21706 + C21896 * C21707 +
            (C21709 * C1055 + C21860 + C21860 + C47508 * C1067) * C47785 *
                C21708) *
               C47581 * C47852) *
              C47846)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C47785 * C21706 +
           (C21709 * C273 + C21713 + C21713 + C47508 * C293) * C47785 * C21707 +
           (C21709 * C274 + C21714 + C21714 + C47508 * C294) * C47785 *
               C21708) *
              C47581 * C47563 * C108 -
          ((C21709 * C275 + C21715 + C21715 + C47508 * C295) * C47785 * C21708 +
           (C21709 * C272 + C21716 + C21716 + C47508 * C292) * C47785 * C21707 +
           (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C47785 *
               C21706) *
              C47581 * C47563 * C109 +
          ((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C47785 * C21706 +
           (C21709 * C271 + C21719 + C21719 + C47508 * C291) * C47785 * C21707 +
           (C21709 * C276 + C21720 + C21720 + C47508 * C296) * C47785 *
               C21708) *
              C47581 * C47563 * C110 -
          ((C21709 * C278 + C21721 + C21721 + C47508 * C298) * C47785 * C21708 +
           (C21709 * C277 + C21722 + C21722 + C47508 * C297) * C47785 * C21707 +
           (C21709 * C122 + C21723 + C21723 + C47508 * C136) * C47785 *
               C21706) *
              C47581 * C47563 * C111 +
          ((C21709 * C123 + C21724 + C21724 + C47508 * C137) * C47785 * C21706 +
           (C21709 * C279 + C21725 + C21725 + C47508 * C299) * C47785 * C21707 +
           (C21709 * C280 + C21726 + C21726 + C47508 * C300) * C47785 *
               C21708) *
              C47581 * C47563 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C47785 *
                C21706 +
            C21888 * C21707 + C21889 * C21708) *
               C47581 * C976 -
           (C21890 * C21708 + C21889 * C21707 + C21888 * C21706) * C47581 *
               C977 +
           (C21889 * C21706 + C21890 * C21707 +
            (C21709 * C1053 + C21844 + C21844 + C47508 * C1065) * C47785 *
                C21708) *
               C47581 * C47852) *
              C47888 +
          ((C21891 * C21706 + C21892 * C21707 + C21893 * C21708) * C47581 *
               C977 -
           (C21892 * C21708 + C21891 * C21707 +
            (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C47785 *
                C21706) *
               C47581 * C976 -
           ((C21709 * C1054 + C21852 + C21852 + C47508 * C1066) * C47785 *
                C21708 +
            C21893 * C21707 + C21892 * C21706) *
               C47581 * C47852) *
              C47875 +
          (((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C47785 *
                C21706 +
            C21894 * C21707 + C21895 * C21708) *
               C47581 * C976 -
           (C21896 * C21708 + C21895 * C21707 + C21894 * C21706) * C47581 *
               C977 +
           (C21895 * C21706 + C21896 * C21707 +
            (C21709 * C1055 + C21860 + C21860 + C47508 * C1067) * C47785 *
                C21708) *
               C47581 * C47852) *
              C47846)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C47785 * C21706 +
           C21888 * C21707 + C21889 * C21708) *
              C47581 * C1044 -
          (C21890 * C21708 + C21889 * C21707 + C21888 * C21706) * C47581 *
              C1045 +
          (C21889 * C21706 + C21890 * C21707 + C22609 * C21708) * C47581 *
              C1046 -
          (C22610 * C21708 + C22609 * C21707 + C21890 * C21706) * C47581 *
              C1047 +
          (C22609 * C21706 + C22610 * C21707 +
           (C21709 * C22593 + C22602 + C22602 + C47508 * C22595) * C47785 *
               C21708) *
              C47581 * C1048) *
         C47535) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C47785 *
                C21706 +
            C21888 * C21707 + C21889 * C21708) *
               C1702 -
           (C22416 * C21708 + C22417 * C21707 +
            (C21709 * C434 + C22009 + C22009 + C47508 * C454) * C47785 *
                C21706) *
               C1703 +
           ((C21709 * C435 + C22010 + C22010 + C47508 * C455) * C47785 *
                C21706 +
            C22747 * C21707 + C22748 * C21708) *
               C47855) *
              C47563 * C47888 +
          (((C21709 * C433 + C22013 + C22013 + C47508 * C453) * C47785 *
                C21706 +
            C22418 * C21707 + C22419 * C21708) *
               C1703 -
           (C21892 * C21708 + C21891 * C21707 +
            (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C47785 *
                C21706) *
               C1702 -
           ((C21709 * C1191 + C22016 + C22016 + C47508 * C1209) * C47785 *
                C21708 +
            (C21709 * C1185 + C22017 + C22017 + C47508 * C1203) * C47785 *
                C21707 +
            (C21709 * C436 + C22018 + C22018 + C47508 * C456) * C47785 *
                C21706) *
               C47855) *
              C47563 * C47875 +
          (((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C47785 *
                C21706 +
            C21894 * C21707 + C21895 * C21708) *
               C1702 -
           (C22420 * C21708 + C22421 * C21707 +
            (C21709 * C432 + C22021 + C22021 + C47508 * C452) * C47785 *
                C21706) *
               C1703 +
           ((C21709 * C437 + C22022 + C22022 + C47508 * C457) * C47785 *
                C21706 +
            (C21709 * C1184 + C22023 + C22023 + C47508 * C1202) * C47785 *
                C21707 +
            (C21709 * C1192 + C22024 + C22024 + C47508 * C1210) * C47785 *
                C21708) *
               C47855) *
              C47563 * C47846)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C47785 *
                C21706 +
            C21888 * C21707 + C21889 * C21708) *
               C1702 -
           (C22416 * C21708 + C22417 * C21707 +
            (C21709 * C434 + C22009 + C22009 + C47508 * C454) * C47785 *
                C21706) *
               C1703 +
           ((C21709 * C435 + C22010 + C22010 + C47508 * C455) * C47785 *
                C21706 +
            C22747 * C21707 + C22748 * C21708) *
               C47855) *
              C47891 +
          ((C22417 * C21706 + C22416 * C21707 + C22749 * C21708) * C1703 -
           (C21890 * C21708 + C21889 * C21707 + C21888 * C21706) * C1702 -
           (C22750 * C21708 + C22748 * C21707 + C22747 * C21706) * C47855) *
              C47879 +
          ((C21889 * C21706 + C21890 * C21707 + C22609 * C21708) * C1702 -
           (C23116 * C21708 + C22749 * C21707 + C22416 * C21706) * C1703 +
           (C22748 * C21706 + C22750 * C21707 +
            (C21709 * C22720 + C22734 + C22734 + C47508 * C22722) * C47785 *
                C21708) *
               C47855) *
              C47852) *
         C47535) /
            (p * q * std::sqrt(p + q));
    d2ee[115] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C47785 *
                 C21706 +
             C21888 * C21707 + C21889 * C21708) *
                C3136 -
            (C22416 * C21708 + C22417 * C21707 +
             (C21709 * C434 + C22009 + C22009 + C47508 * C454) * C47785 *
                 C21706) *
                C47668) *
               C47820 +
           ((C22417 * C21706 + C22416 * C21707 + C22749 * C21708) * C47668 -
            (C21890 * C21708 + C21889 * C21707 + C21888 * C21706) * C3136) *
               C47626) *
              C47540 +
          ((((C21709 * C433 + C22013 + C22013 + C47508 * C453) * C47785 *
                 C21706 +
             C22418 * C21707 + C22419 * C21708) *
                C47668 -
            (C21892 * C21708 + C21891 * C21707 +
             (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C47785 *
                 C21706) *
                C3136) *
               C47820 +
           ((C21891 * C21706 + C21892 * C21707 + C21893 * C21708) * C3136 -
            (C23008 * C21708 + C22419 * C21707 + C22418 * C21706) * C47668) *
               C47626) *
              C47549 +
          ((((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C47785 *
                 C21706 +
             C21894 * C21707 + C21895 * C21708) *
                C3136 -
            (C22420 * C21708 + C22421 * C21707 +
             (C21709 * C432 + C22021 + C22021 + C47508 * C452) * C47785 *
                 C21706) *
                C47668) *
               C47820 +
           ((C22421 * C21706 + C22420 * C21707 +
             (C21709 * C1582 + C22397 + C22397 + C47508 * C1588) * C47785 *
                 C21708) *
                C47668 -
            (C21896 * C21708 + C21895 * C21707 + C21894 * C21706) * C3136) *
               C47626) *
              C2745)) /
        (p * q * std::sqrt(p + q));
    d2ee[116] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C47785 *
                 C21706 +
             C21888 * C21707 + C21889 * C21708) *
                C47664 -
            (C22416 * C21708 + C22417 * C21707 +
             (C21709 * C434 + C22009 + C22009 + C47508 * C454) * C47785 *
                 C21706) *
                C47671 +
            ((C21709 * C435 + C22010 + C22010 + C47508 * C455) * C47785 *
                 C21706 +
             C22747 * C21707 + C22748 * C21708) *
                C3644) *
               C47820 +
           ((C22417 * C21706 + C22416 * C21707 + C22749 * C21708) * C47671 -
            (C21890 * C21708 + C21889 * C21707 + C21888 * C21706) * C47664 -
            (C22750 * C21708 + C22748 * C21707 + C22747 * C21706) * C3644) *
               C47626) *
              C2482 +
          ((((C21709 * C433 + C22013 + C22013 + C47508 * C453) * C47785 *
                 C21706 +
             C22418 * C21707 + C22419 * C21708) *
                C47671 -
            (C21892 * C21708 + C21891 * C21707 +
             (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C47785 *
                 C21706) *
                C47664 -
            (C23565 * C21708 + C23566 * C21707 +
             (C21709 * C436 + C22018 + C22018 + C47508 * C456) * C47785 *
                 C21706) *
                C3644) *
               C47820 +
           ((C21891 * C21706 + C21892 * C21707 + C21893 * C21708) * C47664 -
            (C23008 * C21708 + C22419 * C21707 + C22418 * C21706) * C47671 +
            (C23566 * C21706 + C23565 * C21707 +
             (C21709 * C5944 + C23558 + C23558 + C47508 * C5948) * C47785 *
                 C21708) *
                C3644) *
               C47626) *
              C47546)) /
        (p * q * std::sqrt(p + q));
    d2ee[117] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C47785 *
                 C21706 +
             C21888 * C21707 + C21889 * C21708) *
                C3136 -
            (C22416 * C21708 + C22417 * C21707 +
             (C21709 * C434 + C22009 + C22009 + C47508 * C454) * C47785 *
                 C21706) *
                C47668) *
               C47891 +
           ((C22417 * C21706 + C22416 * C21707 + C22749 * C21708) * C47668 -
            (C21890 * C21708 + C21889 * C21707 + C21888 * C21706) * C3136) *
               C47879 +
           ((C21889 * C21706 + C21890 * C21707 + C22609 * C21708) * C3136 -
            (C23116 * C21708 + C22749 * C21707 + C22416 * C21706) * C47668) *
               C47852) *
              C2482 +
          ((((C21709 * C433 + C22013 + C22013 + C47508 * C453) * C47785 *
                 C21706 +
             C22418 * C21707 + C22419 * C21708) *
                C47668 -
            (C21892 * C21708 + C21891 * C21707 +
             (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C47785 *
                 C21706) *
                C3136) *
               C47891 +
           ((C21891 * C21706 + C21892 * C21707 + C21893 * C21708) * C3136 -
            (C23008 * C21708 + C22419 * C21707 + C22418 * C21706) * C47668) *
               C47879 +
           ((C22419 * C21706 + C23008 * C21707 +
             (C21709 * C6464 + C23004 + C23004 + C47508 * C6468) * C47785 *
                 C21708) *
                C47668 -
            (C22855 * C21708 + C21893 * C21707 + C21892 * C21706) * C3136) *
               C47852) *
              C47546)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C47785 *
                C21706 +
            C21888 * C21707 + C21889 * C21708) *
               C3136 -
           (C22416 * C21708 + C22417 * C21707 +
            (C21709 * C434 + C22009 + C22009 + C47508 * C454) * C47785 *
                C21706) *
               C47668) *
              C47563 * C47897 +
          (((C21709 * C433 + C22013 + C22013 + C47508 * C453) * C47785 *
                C21706 +
            C22418 * C21707 + C22419 * C21708) *
               C47668 -
           (C21892 * C21708 + C21891 * C21707 +
            (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C47785 *
                C21706) *
               C3136) *
              C47563 * C47890 +
          (((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C47785 *
                C21706 +
            C21894 * C21707 + C21895 * C21708) *
               C3136 -
           (C22420 * C21708 + C22421 * C21707 +
            (C21709 * C432 + C22021 + C22021 + C47508 * C452) * C47785 *
                C21706) *
               C47668) *
              C47563 * C47877 +
          (((C21709 * C438 + C22234 + C22234 + C47508 * C458) * C47785 *
                C21706 +
            (C21709 * C845 + C22235 + C22235 + C47508 * C855) * C47785 *
                C21707 +
            (C21709 * C1476 + C22236 + C22236 + C47508 * C1478) * C47785 *
                C21708) *
               C47668 -
           (C22135 * C21708 + C22134 * C21707 +
            (C21709 * C122 + C21723 + C21723 + C47508 * C136) * C47785 *
                C21706) *
               C3136) *
              C47563 * C47856)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C47785 *
                C21706 +
            C21888 * C21707 + C21889 * C21708) *
               C47899 -
           (C22416 * C21708 + C22417 * C21707 +
            (C21709 * C434 + C22009 + C22009 + C47508 * C454) * C47785 *
                C21706) *
               C47896 +
           ((C21709 * C435 + C22010 + C22010 + C47508 * C455) * C47785 *
                C21706 +
            C22747 * C21707 + C22748 * C21708) *
               C47887 -
           (C23780 * C21708 + C23781 * C21707 +
            (C21709 * C1884 + C23404 + C23404 + C47508 * C1896) * C47785 *
                C21706) *
               C47868) *
              C47563 * C2482 +
          (((C21709 * C433 + C22013 + C22013 + C47508 * C453) * C47785 *
                C21706 +
            C22418 * C21707 + C22419 * C21708) *
               C47896 -
           (C21892 * C21708 + C21891 * C21707 +
            (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C47785 *
                C21706) *
               C47899 -
           (C23565 * C21708 + C23566 * C21707 +
            (C21709 * C436 + C22018 + C22018 + C47508 * C456) * C47785 *
                C21706) *
               C47887 +
           ((C21709 * C1883 + C23665 + C23665 + C47508 * C1895) * C47785 *
                C21706 +
            (C21709 * C2265 + C23666 + C23666 + C47508 * C2271) * C47785 *
                C21707 +
            (C21709 * C7340 + C23667 + C23667 + C47508 * C7344) * C47785 *
                C21708) *
               C47868) *
              C47563 * C47546)) /
            (p * q * std::sqrt(p + q));
    d2ee[118] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C21709 * C119 + C21712 + C21712 + C47508 * C133) *
                         C47785 * C21706 +
                     C21888 * C21707 + C21889 * C21708) *
                        C47664 -
                    (C22416 * C21708 + C22417 * C21707 +
                     (C21709 * C434 + C22009 + C22009 + C47508 * C454) *
                         C47785 * C21706) *
                        C47671 +
                    ((C21709 * C435 + C22010 + C22010 + C47508 * C455) *
                         C47785 * C21706 +
                     C22747 * C21707 + C22748 * C21708) *
                        C3644) *
                       C47563 * C47540 +
                   (((C21709 * C433 + C22013 + C22013 + C47508 * C453) *
                         C47785 * C21706 +
                     C22418 * C21707 + C22419 * C21708) *
                        C47671 -
                    (C21892 * C21708 + C21891 * C21707 +
                     (C21709 * C120 + C21717 + C21717 + C47508 * C134) *
                         C47785 * C21706) *
                        C47664 -
                    (C23565 * C21708 + C23566 * C21707 +
                     (C21709 * C436 + C22018 + C22018 + C47508 * C456) *
                         C47785 * C21706) *
                        C3644) *
                       C47563 * C47549 +
                   (((C21709 * C121 + C21718 + C21718 + C47508 * C135) *
                         C47785 * C21706 +
                     C21894 * C21707 + C21895 * C21708) *
                        C47664 -
                    (C22420 * C21708 + C22421 * C21707 +
                     (C21709 * C432 + C22021 + C22021 + C47508 * C452) *
                         C47785 * C21706) *
                        C47671 +
                    ((C21709 * C437 + C22022 + C22022 + C47508 * C457) *
                         C47785 * C21706 +
                     (C21709 * C1184 + C22023 + C22023 + C47508 * C1202) *
                         C47785 * C21707 +
                     (C21709 * C1192 + C22024 + C22024 + C47508 * C1210) *
                         C47785 * C21708) *
                        C3644) *
                       C47563 * C2745)) /
                 (p * q * std::sqrt(p + q));
    d2ee[119] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C47785 *
                C21706 +
            C21888 * C21707 + C21889 * C21708) *
               C3136 -
           (C22416 * C21708 + C22417 * C21707 +
            (C21709 * C434 + C22009 + C22009 + C47508 * C454) * C47785 *
                C21706) *
               C47668) *
              C47563 * C47897 +
          (((C21709 * C433 + C22013 + C22013 + C47508 * C453) * C47785 *
                C21706 +
            C22418 * C21707 + C22419 * C21708) *
               C47668 -
           (C21892 * C21708 + C21891 * C21707 +
            (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C47785 *
                C21706) *
               C3136) *
              C47563 * C47890 +
          (((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C47785 *
                C21706 +
            C21894 * C21707 + C21895 * C21708) *
               C3136 -
           (C22420 * C21708 + C22421 * C21707 +
            (C21709 * C432 + C22021 + C22021 + C47508 * C452) * C47785 *
                C21706) *
               C47668) *
              C47563 * C47877 +
          (((C21709 * C438 + C22234 + C22234 + C47508 * C458) * C47785 *
                C21706 +
            (C21709 * C845 + C22235 + C22235 + C47508 * C855) * C47785 *
                C21707 +
            (C21709 * C1476 + C22236 + C22236 + C47508 * C1478) * C47785 *
                C21708) *
               C47668 -
           (C22135 * C21708 + C22134 * C21707 +
            (C21709 * C122 + C21723 + C21723 + C47508 * C136) * C47785 *
                C21706) *
               C3136) *
              C47563 * C47856)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C47785 *
                 C21706 +
             C21888 * C21707 + C21889 * C21708) *
                C3136 -
            (C22416 * C21708 + C22417 * C21707 +
             (C21709 * C434 + C22009 + C22009 + C47508 * C454) * C47785 *
                 C21706) *
                C47668) *
               C47891 +
           ((C22417 * C21706 + C22416 * C21707 + C22749 * C21708) * C47668 -
            (C21890 * C21708 + C21889 * C21707 + C21888 * C21706) * C3136) *
               C47879 +
           ((C21889 * C21706 + C21890 * C21707 + C22609 * C21708) * C3136 -
            (C23116 * C21708 + C22749 * C21707 + C22416 * C21706) * C47668) *
               C47852) *
              C2482 +
          ((((C21709 * C433 + C22013 + C22013 + C47508 * C453) * C47785 *
                 C21706 +
             C22418 * C21707 + C22419 * C21708) *
                C47668 -
            (C21892 * C21708 + C21891 * C21707 +
             (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C47785 *
                 C21706) *
                C3136) *
               C47891 +
           ((C21891 * C21706 + C21892 * C21707 + C21893 * C21708) * C3136 -
            (C23008 * C21708 + C22419 * C21707 + C22418 * C21706) * C47668) *
               C47879 +
           ((C22419 * C21706 + C23008 * C21707 +
             (C21709 * C6464 + C23004 + C23004 + C47508 * C6468) * C47785 *
                 C21708) *
                C47668 -
            (C22855 * C21708 + C21893 * C21707 + C21892 * C21706) * C3136) *
               C47852) *
              C47546)) /
            (p * q * std::sqrt(p + q));
    d2ee[120] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C21709 * C119 + C21712 + C21712 + C47508 * C133) *
                         C47785 * C21706 +
                     C21888 * C21707 + C21889 * C21708) *
                        C47581 * C47820 -
                    (C21890 * C21708 + C21889 * C21707 + C21888 * C21706) *
                        C47581 * C47626) *
                       C580 +
                   ((C21891 * C21706 + C21892 * C21707 + C21893 * C21708) *
                        C47581 * C47626 -
                    (C21892 * C21708 + C21891 * C21707 +
                     (C21709 * C120 + C21717 + C21717 + C47508 * C134) *
                         C47785 * C21706) *
                        C47581 * C47820) *
                       C581 +
                   (((C21709 * C121 + C21718 + C21718 + C47508 * C135) *
                         C47785 * C21706 +
                     C21894 * C21707 + C21895 * C21708) *
                        C47581 * C47820 -
                    (C21896 * C21708 + C21895 * C21707 + C21894 * C21706) *
                        C47581 * C47626) *
                       C582 +
                   ((C22134 * C21706 + C22135 * C21707 +
                     (C21709 * C1324 + C22127 + C22127 + C47508 * C1326) *
                         C47785 * C21708) *
                        C47581 * C47626 -
                    (C22135 * C21708 + C22134 * C21707 +
                     (C21709 * C122 + C21723 + C21723 + C47508 * C136) *
                         C47785 * C21706) *
                        C47581 * C47820) *
                       C47856)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C21709 * C119 + C21712 + C21712 + C47508 * C133) *
                         C47785 * C21706 +
                     C21888 * C21707 + C21889 * C21708) *
                        C47581 * C1318 -
                    (C21890 * C21708 + C21889 * C21707 + C21888 * C21706) *
                        C47581 * C1319 +
                    (C21889 * C21706 + C21890 * C21707 + C22609 * C21708) *
                        C47581 * C1320 -
                    (C22610 * C21708 + C22609 * C21707 + C21890 * C21706) *
                        C47581 * C47862) *
                       C47806 +
                   ((C21891 * C21706 + C21892 * C21707 + C21893 * C21708) *
                        C47581 * C1319 -
                    (C21892 * C21708 + C21891 * C21707 +
                     (C21709 * C120 + C21717 + C21717 + C47508 * C134) *
                         C47785 * C21706) *
                        C47581 * C1318 -
                    (C22855 * C21708 + C21893 * C21707 + C21892 * C21706) *
                        C47581 * C1320 +
                    (C21893 * C21706 + C22855 * C21707 +
                     (C21709 * C5768 + C22851 + C22851 + C47508 * C5772) *
                         C47785 * C21708) *
                        C47581 * C47862) *
                       C47546)) /
                     (p * q * std::sqrt(p + q));
    d2ee[121] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C47785 *
                 C21706 +
             C21888 * C21707 + C21889 * C21708) *
                C47821 -
            (C22416 * C21708 + C22417 * C21707 +
             (C21709 * C434 + C22009 + C22009 + C47508 * C454) * C47785 *
                 C21706) *
                C47668) *
               C47820 +
           ((C22417 * C21706 + C22416 * C21707 +
             (C21709 * C1580 + C22387 + C22387 + C47508 * C1586) * C47785 *
                 C21708) *
                C47668 -
            (C21890 * C21708 + C21889 * C21707 + C21888 * C21706) * C47821) *
               C47626) *
              C268 +
          ((((C21709 * C433 + C22013 + C22013 + C47508 * C453) * C47785 *
                 C21706 +
             C22418 * C21707 + C22419 * C21708) *
                C47668 -
            (C21892 * C21708 + C21891 * C21707 +
             (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C47785 *
                 C21706) *
                C47821) *
               C47820 +
           ((C21891 * C21706 + C21892 * C21707 + C21893 * C21708) * C47821 -
            ((C21709 * C1581 + C22392 + C22392 + C47508 * C1587) * C47785 *
                 C21708 +
             C22419 * C21707 + C22418 * C21706) *
                C47668) *
               C47626) *
              C269 +
          ((((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C47785 *
                 C21706 +
             C21894 * C21707 + C21895 * C21708) *
                C47821 -
            (C22420 * C21708 + C22421 * C21707 +
             (C21709 * C432 + C22021 + C22021 + C47508 * C452) * C47785 *
                 C21706) *
                C47668) *
               C47820 +
           ((C22421 * C21706 + C22420 * C21707 +
             (C21709 * C1582 + C22397 + C22397 + C47508 * C1588) * C47785 *
                 C21708) *
                C47668 -
            (C21896 * C21708 + C21895 * C21707 + C21894 * C21706) * C47821) *
               C47626) *
              C47846)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C47785 *
                C21706 +
            C21888 * C21707 + C21889 * C21708) *
               C47821 -
           (C22416 * C21708 + C22417 * C21707 +
            (C21709 * C434 + C22009 + C22009 + C47508 * C454) * C47785 *
                C21706) *
               C47668) *
              C1318 +
          ((C22417 * C21706 + C22416 * C21707 + C22749 * C21708) * C47668 -
           (C21890 * C21708 + C21889 * C21707 + C21888 * C21706) * C47821) *
              C1319 +
          ((C21889 * C21706 + C21890 * C21707 + C22609 * C21708) * C47821 -
           (C23116 * C21708 + C22749 * C21707 + C22416 * C21706) * C47668) *
              C1320 +
          ((C22749 * C21706 + C23116 * C21707 +
            (C21709 * C23106 + C23112 + C23112 + C47508 * C23108) * C47785 *
                C21708) *
               C47668 -
           (C22610 * C21708 + C22609 * C21707 + C21890 * C21706) * C47821) *
              C47862) *
         C47535) /
            (p * q * std::sqrt(p + q));
    d2ee[122] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C47785 *
                C21706 +
            C21888 * C21707 + C21889 * C21708) *
               C47581 * C47891 -
           (C21890 * C21708 + C21889 * C21707 + C21888 * C21706) * C47581 *
               C47879 +
           (C21889 * C21706 + C21890 * C21707 +
            (C21709 * C1053 + C21844 + C21844 + C47508 * C1065) * C47785 *
                C21708) *
               C47581 * C47852) *
              C268 +
          ((C21891 * C21706 + C21892 * C21707 + C21893 * C21708) * C47581 *
               C47879 -
           (C21892 * C21708 + C21891 * C21707 +
            (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C47785 *
                C21706) *
               C47581 * C47891 -
           ((C21709 * C1054 + C21852 + C21852 + C47508 * C1066) * C47785 *
                C21708 +
            C21893 * C21707 + C21892 * C21706) *
               C47581 * C47852) *
              C269 +
          (((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C47785 *
                C21706 +
            C21894 * C21707 + C21895 * C21708) *
               C47581 * C47891 -
           (C21896 * C21708 + C21895 * C21707 + C21894 * C21706) * C47581 *
               C47879 +
           (C21895 * C21706 + C21896 * C21707 +
            (C21709 * C1055 + C21860 + C21860 + C47508 * C1067) * C47785 *
                C21708) *
               C47581 * C47852) *
              C47846)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C47785 * C21706 +
           (C21709 * C273 + C21713 + C21713 + C47508 * C293) * C47785 * C21707 +
           (C21709 * C274 + C21714 + C21714 + C47508 * C294) * C47785 *
               C21708) *
              C47581 * C47563 * C108 -
          ((C21709 * C275 + C21715 + C21715 + C47508 * C295) * C47785 * C21708 +
           (C21709 * C272 + C21716 + C21716 + C47508 * C292) * C47785 * C21707 +
           (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C47785 *
               C21706) *
              C47581 * C47563 * C109 +
          ((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C47785 * C21706 +
           (C21709 * C271 + C21719 + C21719 + C47508 * C291) * C47785 * C21707 +
           (C21709 * C276 + C21720 + C21720 + C47508 * C296) * C47785 *
               C21708) *
              C47581 * C47563 * C110 -
          ((C21709 * C278 + C21721 + C21721 + C47508 * C298) * C47785 * C21708 +
           (C21709 * C277 + C21722 + C21722 + C47508 * C297) * C47785 * C21707 +
           (C21709 * C122 + C21723 + C21723 + C47508 * C136) * C47785 *
               C21706) *
              C47581 * C47563 * C111 +
          ((C21709 * C123 + C21724 + C21724 + C47508 * C137) * C47785 * C21706 +
           (C21709 * C279 + C21725 + C21725 + C47508 * C299) * C47785 * C21707 +
           (C21709 * C280 + C21726 + C21726 + C47508 * C300) * C47785 *
               C21708) *
              C47581 * C47563 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C47785 *
                C21706 +
            C21888 * C21707 + C21889 * C21708) *
               C47892 -
           ((C21709 * C1189 + C22007 + C22007 + C47508 * C1207) * C47785 *
                C21708 +
            (C21709 * C842 + C22008 + C22008 + C47508 * C852) * C47785 *
                C21707 +
            (C21709 * C434 + C22009 + C22009 + C47508 * C454) * C47785 *
                C21706) *
               C47881 +
           ((C21709 * C435 + C22010 + C22010 + C47508 * C455) * C47785 *
                C21706 +
            (C21709 * C1186 + C22011 + C22011 + C47508 * C1204) * C47785 *
                C21707 +
            (C21709 * C1190 + C22012 + C22012 + C47508 * C1208) * C47785 *
                C21708) *
               C47855) *
              C47563 * C268 +
          (((C21709 * C433 + C22013 + C22013 + C47508 * C453) * C47785 *
                C21706 +
            (C21709 * C843 + C22014 + C22014 + C47508 * C853) * C47785 *
                C21707 +
            (C21709 * C1188 + C22015 + C22015 + C47508 * C1206) * C47785 *
                C21708) *
               C47881 -
           (C21892 * C21708 + C21891 * C21707 +
            (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C47785 *
                C21706) *
               C47892 -
           ((C21709 * C1191 + C22016 + C22016 + C47508 * C1209) * C47785 *
                C21708 +
            (C21709 * C1185 + C22017 + C22017 + C47508 * C1203) * C47785 *
                C21707 +
            (C21709 * C436 + C22018 + C22018 + C47508 * C456) * C47785 *
                C21706) *
               C47855) *
              C47563 * C269 +
          (((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C47785 *
                C21706 +
            C21894 * C21707 + C21895 * C21708) *
               C47892 -
           ((C21709 * C1187 + C22019 + C22019 + C47508 * C1205) * C47785 *
                C21708 +
            (C21709 * C844 + C22020 + C22020 + C47508 * C854) * C47785 *
                C21707 +
            (C21709 * C432 + C22021 + C22021 + C47508 * C452) * C47785 *
                C21706) *
               C47881 +
           ((C21709 * C437 + C22022 + C22022 + C47508 * C457) * C47785 *
                C21706 +
            (C21709 * C1184 + C22023 + C22023 + C47508 * C1202) * C47785 *
                C21707 +
            (C21709 * C1192 + C22024 + C22024 + C47508 * C1210) * C47785 *
                C21708) *
               C47855) *
              C47563 * C47846)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C47785 *
                C21706 +
            C21888 * C21707 + C21889 * C21708) *
               C47581 * C976 -
           (C21890 * C21708 + C21889 * C21707 + C21888 * C21706) * C47581 *
               C977 +
           (C21889 * C21706 + C21890 * C21707 +
            (C21709 * C1053 + C21844 + C21844 + C47508 * C1065) * C47785 *
                C21708) *
               C47581 * C47852) *
              C47888 +
          ((C21891 * C21706 + C21892 * C21707 + C21893 * C21708) * C47581 *
               C977 -
           (C21892 * C21708 + C21891 * C21707 +
            (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C47785 *
                C21706) *
               C47581 * C976 -
           ((C21709 * C1054 + C21852 + C21852 + C47508 * C1066) * C47785 *
                C21708 +
            C21893 * C21707 + C21892 * C21706) *
               C47581 * C47852) *
              C47875 +
          (((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C47785 *
                C21706 +
            C21894 * C21707 + C21895 * C21708) *
               C47581 * C976 -
           (C21896 * C21708 + C21895 * C21707 + C21894 * C21706) * C47581 *
               C977 +
           (C21895 * C21706 + C21896 * C21707 +
            (C21709 * C1055 + C21860 + C21860 + C47508 * C1067) * C47785 *
                C21708) *
               C47581 * C47852) *
              C47846)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C47785 * C21706 +
           C21888 * C21707 + C21889 * C21708) *
              C47581 * C1044 -
          (C21890 * C21708 + C21889 * C21707 + C21888 * C21706) * C47581 *
              C1045 +
          (C21889 * C21706 + C21890 * C21707 + C22609 * C21708) * C47581 *
              C1046 -
          (C22610 * C21708 + C22609 * C21707 + C21890 * C21706) * C47581 *
              C1047 +
          (C22609 * C21706 + C22610 * C21707 +
           (C21709 * C22593 + C22602 + C22602 + C47508 * C22595) * C47785 *
               C21708) *
              C47581 * C1048) *
         C47535) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C47785 *
                C21706 +
            C21888 * C21707 + C21889 * C21708) *
               C47892 -
           (C22416 * C21708 + C22417 * C21707 +
            (C21709 * C434 + C22009 + C22009 + C47508 * C454) * C47785 *
                C21706) *
               C47881 +
           ((C21709 * C435 + C22010 + C22010 + C47508 * C455) * C47785 *
                C21706 +
            C22747 * C21707 + C22748 * C21708) *
               C47855) *
              C976 +
          ((C22417 * C21706 + C22416 * C21707 + C22749 * C21708) * C47881 -
           (C21890 * C21708 + C21889 * C21707 + C21888 * C21706) * C47892 -
           (C22750 * C21708 + C22748 * C21707 + C22747 * C21706) * C47855) *
              C977 +
          ((C21889 * C21706 + C21890 * C21707 + C22609 * C21708) * C47892 -
           ((C21709 * C6463 + C22733 + C22733 + C47508 * C6467) * C47785 *
                C21708 +
            C22749 * C21707 + C22416 * C21706) *
               C47881 +
           (C22748 * C21706 + C22750 * C21707 +
            (C21709 * C22720 + C22734 + C22734 + C47508 * C22722) * C47785 *
                C21708) *
               C47855) *
              C47852) *
         C47535) /
            (p * q * std::sqrt(p + q));
    d2ee[123] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C47785 *
                C21706 +
            C21888 * C21707 + C21889 * C21708) *
               C47821 -
           ((C21709 * C1189 + C22007 + C22007 + C47508 * C1207) * C47785 *
                C21708 +
            (C21709 * C842 + C22008 + C22008 + C47508 * C852) * C47785 *
                C21707 +
            (C21709 * C434 + C22009 + C22009 + C47508 * C454) * C47785 *
                C21706) *
               C47668) *
              C47563 * C580 +
          (((C21709 * C433 + C22013 + C22013 + C47508 * C453) * C47785 *
                C21706 +
            (C21709 * C843 + C22014 + C22014 + C47508 * C853) * C47785 *
                C21707 +
            (C21709 * C1188 + C22015 + C22015 + C47508 * C1206) * C47785 *
                C21708) *
               C47668 -
           (C21892 * C21708 + C21891 * C21707 +
            (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C47785 *
                C21706) *
               C47821) *
              C47563 * C581 +
          (((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C47785 *
                C21706 +
            C21894 * C21707 + C21895 * C21708) *
               C47821 -
           ((C21709 * C1187 + C22019 + C22019 + C47508 * C1205) * C47785 *
                C21708 +
            (C21709 * C844 + C22020 + C22020 + C47508 * C854) * C47785 *
                C21707 +
            (C21709 * C432 + C22021 + C22021 + C47508 * C452) * C47785 *
                C21706) *
               C47668) *
              C47563 * C582 +
          (((C21709 * C438 + C22234 + C22234 + C47508 * C458) * C47785 *
                C21706 +
            (C21709 * C845 + C22235 + C22235 + C47508 * C855) * C47785 *
                C21707 +
            (C21709 * C1476 + C22236 + C22236 + C47508 * C1478) * C47785 *
                C21708) *
               C47668 -
           (C22135 * C21708 + C22134 * C21707 +
            (C21709 * C122 + C21723 + C21723 + C47508 * C136) * C47785 *
                C21706) *
               C47821) *
              C47563 * C47856)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C47785 *
                 C21706 +
             C21888 * C21707 + C21889 * C21708) *
                C47821 -
            (C22416 * C21708 + C22417 * C21707 +
             (C21709 * C434 + C22009 + C22009 + C47508 * C454) * C47785 *
                 C21706) *
                C47668) *
               C976 +
           ((C22417 * C21706 + C22416 * C21707 + C22749 * C21708) * C47668 -
            (C21890 * C21708 + C21889 * C21707 + C21888 * C21706) * C47821) *
               C977 +
           ((C21889 * C21706 + C21890 * C21707 + C22609 * C21708) * C47821 -
            ((C21709 * C6463 + C22733 + C22733 + C47508 * C6467) * C47785 *
                 C21708 +
             C22749 * C21707 + C22416 * C21706) *
                C47668) *
               C47852) *
              C47806 +
          ((((C21709 * C433 + C22013 + C22013 + C47508 * C453) * C47785 *
                 C21706 +
             C22418 * C21707 + C22419 * C21708) *
                C47668 -
            (C21892 * C21708 + C21891 * C21707 +
             (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C47785 *
                 C21706) *
                C47821) *
               C976 +
           ((C21891 * C21706 + C21892 * C21707 + C21893 * C21708) * C47821 -
            (C23008 * C21708 + C22419 * C21707 + C22418 * C21706) * C47668) *
               C977 +
           ((C22419 * C21706 + C23008 * C21707 +
             (C21709 * C6464 + C23004 + C23004 + C47508 * C6468) * C47785 *
                 C21708) *
                C47668 -
            (C22855 * C21708 + C21893 * C21707 + C21892 * C21706) * C47821) *
               C47852) *
              C47546)) /
            (p * q * std::sqrt(p + q));
    d2ee[124] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C47785 * C21706 +
           (C21709 * C273 + C21713 + C21713 + C47508 * C293) * C47785 * C21707 +
           (C21709 * C274 + C21714 + C21714 + C47508 * C294) * C47785 *
               C21708) *
              C47581 * C47563 * C108 -
          ((C21709 * C275 + C21715 + C21715 + C47508 * C295) * C47785 * C21708 +
           (C21709 * C272 + C21716 + C21716 + C47508 * C292) * C47785 * C21707 +
           (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C47785 *
               C21706) *
              C47581 * C47563 * C109 +
          ((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C47785 * C21706 +
           (C21709 * C271 + C21719 + C21719 + C47508 * C291) * C47785 * C21707 +
           (C21709 * C276 + C21720 + C21720 + C47508 * C296) * C47785 *
               C21708) *
              C47581 * C47563 * C110 -
          ((C21709 * C278 + C21721 + C21721 + C47508 * C298) * C47785 * C21708 +
           (C21709 * C277 + C21722 + C21722 + C47508 * C297) * C47785 * C21707 +
           (C21709 * C122 + C21723 + C21723 + C47508 * C136) * C47785 *
               C21706) *
              C47581 * C47563 * C111 +
          ((C21709 * C123 + C21724 + C21724 + C47508 * C137) * C47785 * C21706 +
           (C21709 * C279 + C21725 + C21725 + C47508 * C299) * C47785 * C21707 +
           (C21709 * C280 + C21726 + C21726 + C47508 * C300) * C47785 *
               C21708) *
              C47581 * C47563 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C47785 *
                C21706 +
            C21888 * C21707 + C21889 * C21708) *
               C47581 * C47891 -
           (C21890 * C21708 + C21889 * C21707 + C21888 * C21706) * C47581 *
               C47879 +
           (C21889 * C21706 + C21890 * C21707 +
            (C21709 * C1053 + C21844 + C21844 + C47508 * C1065) * C47785 *
                C21708) *
               C47581 * C47852) *
              C268 +
          ((C21891 * C21706 + C21892 * C21707 + C21893 * C21708) * C47581 *
               C47879 -
           (C21892 * C21708 + C21891 * C21707 +
            (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C47785 *
                C21706) *
               C47581 * C47891 -
           ((C21709 * C1054 + C21852 + C21852 + C47508 * C1066) * C47785 *
                C21708 +
            C21893 * C21707 + C21892 * C21706) *
               C47581 * C47852) *
              C269 +
          (((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C47785 *
                C21706 +
            C21894 * C21707 + C21895 * C21708) *
               C47581 * C47891 -
           (C21896 * C21708 + C21895 * C21707 + C21894 * C21706) * C47581 *
               C47879 +
           (C21895 * C21706 + C21896 * C21707 +
            (C21709 * C1055 + C21860 + C21860 + C47508 * C1067) * C47785 *
                C21708) *
               C47581 * C47852) *
              C47846)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C47785 *
                C21706 +
            C21888 * C21707 + C21889 * C21708) *
               C47581 * C976 -
           (C21890 * C21708 + C21889 * C21707 + C21888 * C21706) * C47581 *
               C977 +
           (C21889 * C21706 + C21890 * C21707 +
            (C21709 * C1053 + C21844 + C21844 + C47508 * C1065) * C47785 *
                C21708) *
               C47581 * C47852) *
              C47888 +
          ((C21891 * C21706 + C21892 * C21707 + C21893 * C21708) * C47581 *
               C977 -
           (C21892 * C21708 + C21891 * C21707 +
            (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C47785 *
                C21706) *
               C47581 * C976 -
           ((C21709 * C1054 + C21852 + C21852 + C47508 * C1066) * C47785 *
                C21708 +
            C21893 * C21707 + C21892 * C21706) *
               C47581 * C47852) *
              C47875 +
          (((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C47785 *
                C21706 +
            C21894 * C21707 + C21895 * C21708) *
               C47581 * C976 -
           (C21896 * C21708 + C21895 * C21707 + C21894 * C21706) * C47581 *
               C977 +
           (C21895 * C21706 + C21896 * C21707 +
            (C21709 * C1055 + C21860 + C21860 + C47508 * C1067) * C47785 *
                C21708) *
               C47581 * C47852) *
              C47846)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C47785 * C21706 +
           C21888 * C21707 + C21889 * C21708) *
              C47581 * C1044 -
          (C21890 * C21708 + C21889 * C21707 + C21888 * C21706) * C47581 *
              C1045 +
          (C21889 * C21706 + C21890 * C21707 + C22609 * C21708) * C47581 *
              C1046 -
          (C22610 * C21708 + C22609 * C21707 + C21890 * C21706) * C47581 *
              C1047 +
          (C22609 * C21706 + C22610 * C21707 +
           (C21709 * C22593 + C22602 + C22602 + C47508 * C22595) * C47785 *
               C21708) *
              C47581 * C1048) *
         C47535) /
            (p * q * std::sqrt(p + q));
    d2ee[125] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C10403 +
             C26432 * C47872) *
                C15971 +
            (C26244 + C26245) * C47870) *
               C47581 * C47622 -
           ((C26246 + C26247) * C47870 + (C26245 + C26244) * C15971) * C47581 *
               C47629 +
           ((C26247 + C26246) * C15971 + (C27141 + C27142) * C47870) * C47581 *
               C2742) *
              C47540 +
          (((C26248 + C26249) * C15971 + (C26250 + C26251) * C47870) * C47581 *
               C47629 -
           ((C26249 + C26248) * C47870 +
            (C26434 * C47872 +
             (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C10403) *
                C15971) *
               C47581 * C47622 -
           ((C27427 + C27428) * C47870 + (C26251 + C26250) * C15971) * C47581 *
               C2742) *
              C47549 +
          ((((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C10403 +
             C26436 * C47872) *
                C15971 +
            (C26252 + C26253) * C47870) *
               C47581 * C47622 -
           ((C26254 + C26255) * C47870 + (C26253 + C26252) * C15971) * C47581 *
               C47629 +
           ((C26255 + C26254) * C15971 +
            (C21887 * C10403 +
             (C21709 * C1582 + C22397 + C22397 + C47508 * C1588) * C47872) *
                C47870) *
               C47581 * C2742) *
              C2745)) /
        (p * q * std::sqrt(p + q));
    d2ee[126] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C10403 +
              C26432 * C47872) *
                 C15971 +
             (C26244 + C26245) * C47870) *
                C47821 -
            ((C26907 + C26908) * C47870 +
             (C26433 * C47872 + C26432 * C10403) * C15971) *
                C47668) *
               C47622 +
           (((C26908 + C26907) * C15971 + (C27293 + C27294) * C47870) * C47668 -
            ((C26246 + C26247) * C47870 + (C26245 + C26244) * C15971) *
                C47821) *
               C47629 +
           (((C26247 + C26246) * C15971 + (C27141 + C27142) * C47870) * C47821 -
            ((C27755 + C27756) * C47870 + (C27294 + C27293) * C15971) *
                C47668) *
               C2742) *
              C2482 +
          ((((C26434 * C10403 + C26435 * C47872) * C15971 +
             (C26909 + C26910) * C47870) *
                C47668 -
            ((C26249 + C26248) * C47870 +
             (C26434 * C47872 +
              (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C10403) *
                 C15971) *
                C47821) *
               C47622 +
           (((C26248 + C26249) * C15971 + (C26250 + C26251) * C47870) * C47821 -
            ((C27623 + C27624) * C47870 + (C26910 + C26909) * C15971) *
                C47668) *
               C47629 +
           (((C27624 + C27623) * C15971 +
             (C23007 * C10403 +
              (C21709 * C5944 + C23558 + C23558 + C47508 * C5948) * C47872) *
                 C47870) *
                C47668 -
            ((C27427 + C27428) * C47870 + (C26251 + C26250) * C15971) *
                C47821) *
               C2742) *
              C47546)) /
        (p * q * std::sqrt(p + q));
    d2ee[127] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C10403 +
             C26432 * C47872) *
                C15971 +
            (C26244 + C26245) * C47870) *
               C47581 * C47898 -
           ((C26246 + C26247) * C47870 + (C26245 + C26244) * C15971) * C47581 *
               C47894 +
           ((C26247 + C26246) * C15971 + (C27141 + C27142) * C47870) * C47581 *
               C47884 -
           ((C27143 + C27144) * C47870 + (C27142 + C27141) * C15971) * C47581 *
               C47862) *
              C2482 +
          (((C26248 + C26249) * C15971 + (C26250 + C26251) * C47870) * C47581 *
               C47894 -
           ((C26249 + C26248) * C47870 +
            (C26434 * C47872 +
             (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C10403) *
                C15971) *
               C47581 * C47898 -
           ((C27427 + C27428) * C47870 + (C26251 + C26250) * C15971) * C47581 *
               C47884 +
           ((C27428 + C27427) * C15971 +
            (C22854 * C10403 +
             (C21709 * C6464 + C23004 + C23004 + C47508 * C6468) * C47872) *
                C47870) *
               C47581 * C47862) *
              C47546)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C10403 +
             C26432 * C47872) *
                C15971 +
            (C26244 + C26245) * C47870) *
               C47581 * C2374 -
           ((C26246 + C26247) * C47870 + (C26245 + C26244) * C15971) * C47581 *
               C47626) *
              C47897 +
          (((C26248 + C26249) * C15971 + (C26250 + C26251) * C47870) * C47581 *
               C47626 -
           ((C26249 + C26248) * C47870 +
            (C26434 * C47872 +
             (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C10403) *
                C15971) *
               C47581 * C2374) *
              C47890 +
          ((((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C10403 +
             C26436 * C47872) *
                C15971 +
            (C26252 + C26253) * C47870) *
               C47581 * C2374 -
           ((C26254 + C26255) * C47870 + (C26253 + C26252) * C15971) * C47581 *
               C47626) *
              C47877 +
          (((C26569 + C26575) * C15971 +
            (C22133 * C10403 +
             (C21709 * C1476 + C22236 + C22236 + C47508 * C1478) * C47872) *
                C47870) *
               C47581 * C47626 -
           ((C26575 + C26569) * C47870 +
            (C26712 * C47872 +
             (C21709 * C122 + C21723 + C21723 + C47508 * C136) * C10403) *
                C15971) *
               C47581 * C2374) *
              C47856)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C10403 +
              C26432 * C47872) *
                 C15971 +
             (C26244 + C26245) * C47870) *
                C47892 -
            ((C26907 + C26908) * C47870 +
             (C26433 * C47872 + C26432 * C10403) * C15971) *
                C47881 +
            ((C26433 * C10403 + C28148 * C47872) * C15971 +
             (C27291 + C27292) * C47870) *
                C47855) *
               C2374 +
           (((C26908 + C26907) * C15971 + (C27293 + C27294) * C47870) * C47881 -
            ((C26246 + C26247) * C47870 + (C26245 + C26244) * C15971) * C47892 -
            ((C27295 + C27296) * C47870 + (C27292 + C27291) * C15971) *
                C47855) *
               C47626) *
              C2482 +
          ((((C26434 * C10403 + C26435 * C47872) * C15971 +
             (C26909 + C26910) * C47870) *
                C47881 -
            ((C26249 + C26248) * C47870 +
             (C26434 * C47872 +
              (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C10403) *
                 C15971) *
                C47892 -
            ((C28351 + C28347) * C47870 +
             (C28488 * C47872 + C26435 * C10403) * C15971) *
                C47855) *
               C2374 +
           (((C26248 + C26249) * C15971 + (C26250 + C26251) * C47870) * C47892 -
            ((C27623 + C27624) * C47870 + (C26910 + C26909) * C15971) * C47881 +
            ((C28347 + C28351) * C15971 +
             (C23563 * C10403 +
              (C21709 * C7340 + C23667 + C23667 + C47508 * C7344) * C47872) *
                 C47870) *
                C47855) *
               C47626) *
              C47546)) /
            (p * q * std::sqrt(p + q));
    d2ee[128] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C10403 +
              C26432 * C47872) *
                 C15971 +
             (C26244 + C26245) * C47870) *
                C47821 -
            ((C26907 + C26908) * C47870 +
             (C26433 * C47872 + C26432 * C10403) * C15971) *
                C47668) *
               C2374 +
           (((C26908 + C26907) * C15971 + (C27293 + C27294) * C47870) * C47668 -
            ((C26246 + C26247) * C47870 + (C26245 + C26244) * C15971) *
                C47821) *
               C47626) *
              C47540 +
          ((((C26434 * C10403 + C26435 * C47872) * C15971 +
             (C26909 + C26910) * C47870) *
                C47668 -
            ((C26249 + C26248) * C47870 +
             (C26434 * C47872 +
              (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C10403) *
                 C15971) *
                C47821) *
               C2374 +
           (((C26248 + C26249) * C15971 + (C26250 + C26251) * C47870) * C47821 -
            ((C27623 + C27624) * C47870 + (C26910 + C26909) * C15971) *
                C47668) *
               C47626) *
              C47549 +
          (((((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C10403 +
              C26436 * C47872) *
                 C15971 +
             (C26252 + C26253) * C47870) *
                C47821 -
            ((C26911 + C26912) * C47870 +
             (C26438 * C47872 + C26436 * C10403) * C15971) *
                C47668) *
               C2374 +
           (((C26912 + C26911) * C15971 +
             (C22414 * C10403 +
              (C21709 * C1192 + C22024 + C22024 + C47508 * C1210) * C47872) *
                 C47870) *
                C47668 -
            ((C26254 + C26255) * C47870 + (C26253 + C26252) * C15971) *
                C47821) *
               C47626) *
              C2745)) /
        (p * q * std::sqrt(p + q));
    d2ee[129] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C10403 +
             C26432 * C47872) *
                C15971 +
            (C26244 + C26245) * C47870) *
               C47581 * C2374 -
           ((C26246 + C26247) * C47870 + (C26245 + C26244) * C15971) * C47581 *
               C47626) *
              C47897 +
          (((C26248 + C26249) * C15971 + (C26250 + C26251) * C47870) * C47581 *
               C47626 -
           ((C26249 + C26248) * C47870 +
            (C26434 * C47872 +
             (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C10403) *
                C15971) *
               C47581 * C2374) *
              C47890 +
          ((((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C10403 +
             C26436 * C47872) *
                C15971 +
            (C26252 + C26253) * C47870) *
               C47581 * C2374 -
           ((C26254 + C26255) * C47870 + (C26253 + C26252) * C15971) * C47581 *
               C47626) *
              C47877 +
          (((C26569 + C26575) * C15971 +
            (C22133 * C10403 +
             (C21709 * C1476 + C22236 + C22236 + C47508 * C1478) * C47872) *
                C47870) *
               C47581 * C47626 -
           ((C26575 + C26569) * C47870 +
            (C26712 * C47872 +
             (C21709 * C122 + C21723 + C21723 + C47508 * C136) * C10403) *
                C15971) *
               C47581 * C2374) *
              C47856)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C10403 +
             C26432 * C47872) *
                C15971 +
            (C26244 + C26245) * C47870) *
               C47581 * C47898 -
           ((C26246 + C26247) * C47870 + (C26245 + C26244) * C15971) * C47581 *
               C47894 +
           ((C26247 + C26246) * C15971 + (C27141 + C27142) * C47870) * C47581 *
               C47884 -
           ((C27143 + C27144) * C47870 + (C27142 + C27141) * C15971) * C47581 *
               C47862) *
              C2482 +
          (((C26248 + C26249) * C15971 + (C26250 + C26251) * C47870) * C47581 *
               C47894 -
           ((C26249 + C26248) * C47870 +
            (C26434 * C47872 +
             (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C10403) *
                C15971) *
               C47581 * C47898 -
           ((C27427 + C27428) * C47870 + (C26251 + C26250) * C15971) * C47581 *
               C47884 +
           ((C27428 + C27427) * C15971 +
            (C22854 * C10403 +
             (C21709 * C6464 + C23004 + C23004 + C47508 * C6468) * C47872) *
                C47870) *
               C47581 * C47862) *
              C47546)) /
            (p * q * std::sqrt(p + q));
    d2ee[130] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C10403 +
              C26432 * C47872) *
                 C15971 +
             (C26244 + C26245) * C47870) *
                C3136 -
            ((C26907 + C26908) * C47870 +
             (C26433 * C47872 + C26432 * C10403) * C15971) *
                C47668) *
               C47622 +
           (((C26908 + C26907) * C15971 + (C27293 + C27294) * C47870) * C47668 -
            ((C26246 + C26247) * C47870 + (C26245 + C26244) * C15971) * C3136) *
               C47629 +
           (((C26247 + C26246) * C15971 + (C27141 + C27142) * C47870) * C3136 -
            ((C27755 + C27756) * C47870 + (C27294 + C27293) * C15971) *
                C47668) *
               C2742) *
              C47806 +
          ((((C26434 * C10403 + C26435 * C47872) * C15971 +
             (C26909 + C26910) * C47870) *
                C47668 -
            ((C26249 + C26248) * C47870 +
             (C26434 * C47872 +
              (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C10403) *
                 C15971) *
                C3136) *
               C47622 +
           (((C26248 + C26249) * C15971 + (C26250 + C26251) * C47870) * C3136 -
            ((C27623 + C27624) * C47870 + (C26910 + C26909) * C15971) *
                C47668) *
               C47629 +
           (((C27624 + C27623) * C15971 +
             (C23007 * C10403 +
              (C21709 * C5944 + C23558 + C23558 + C47508 * C5948) * C47872) *
                 C47870) *
                C47668 -
            ((C27427 + C27428) * C47870 + (C26251 + C26250) * C15971) * C3136) *
               C2742) *
              C47546)) /
        (p * q * std::sqrt(p + q));
    d2ee[131] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C10403 +
             C26432 * C47872) *
                C15971 +
            (C26244 + C26245) * C47870) *
               C47664 -
           ((C26907 + C26908) * C47870 +
            (C26433 * C47872 + C26432 * C10403) * C15971) *
               C47671 +
           ((C26433 * C10403 + C28148 * C47872) * C15971 +
            (C27291 + C27292) * C47870) *
               C3644) *
              C47622 +
          (((C26908 + C26907) * C15971 + (C27293 + C27294) * C47870) * C47671 -
           ((C26246 + C26247) * C47870 + (C26245 + C26244) * C15971) * C47664 -
           ((C27295 + C27296) * C47870 + (C27292 + C27291) * C15971) * C3644) *
              C47629 +
          (((C26247 + C26246) * C15971 + (C27141 + C27142) * C47870) * C47664 -
           ((C27755 + C27756) * C47870 + (C27294 + C27293) * C15971) * C47671 +
           ((C27296 + C27295) * C15971 +
            (C22746 * C10403 +
             (C21709 * C23765 + C23773 + C23773 + C47508 * C23767) * C47872) *
                C47870) *
               C3644) *
              C2742) *
         C47535) /
        (p * q * std::sqrt(p + q));
    d2ee[132] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C10403 +
             C26432 * C47872) *
                C15971 +
            (C26244 + C26245) * C47870) *
               C3136 -
           ((C26907 + C26908) * C47870 +
            (C26433 * C47872 + C26432 * C10403) * C15971) *
               C47668) *
              C47898 +
          (((C26908 + C26907) * C15971 + (C27293 + C27294) * C47870) * C47668 -
           ((C26246 + C26247) * C47870 + (C26245 + C26244) * C15971) * C3136) *
              C47894 +
          (((C26247 + C26246) * C15971 + (C27141 + C27142) * C47870) * C3136 -
           ((C27755 + C27756) * C47870 + (C27294 + C27293) * C15971) * C47668) *
              C47884 +
          (((C27756 + C27755) * C15971 +
            (C23115 * C10403 +
             (C21709 * C22720 + C22734 + C22734 + C47508 * C22722) * C47872) *
                C47870) *
               C47668 -
           ((C27143 + C27144) * C47870 + (C27142 + C27141) * C15971) * C3136) *
              C47862) *
         C47535) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C10403 +
              C26432 * C47872) *
                 C15971 +
             (C26244 + C26245) * C47870) *
                C3136 -
            ((C26907 + C26908) * C47870 +
             (C26433 * C47872 + C26432 * C10403) * C15971) *
                C47668) *
               C2374 +
           (((C26908 + C26907) * C15971 + (C27293 + C27294) * C47870) * C47668 -
            ((C26246 + C26247) * C47870 + (C26245 + C26244) * C15971) * C3136) *
               C47626) *
              C47888 +
          ((((C26434 * C10403 + C26435 * C47872) * C15971 +
             (C26909 + C26910) * C47870) *
                C47668 -
            ((C26249 + C26248) * C47870 +
             (C26434 * C47872 +
              (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C10403) *
                 C15971) *
                C3136) *
               C2374 +
           (((C26248 + C26249) * C15971 + (C26250 + C26251) * C47870) * C3136 -
            ((C27623 + C27624) * C47870 + (C26910 + C26909) * C15971) *
                C47668) *
               C47626) *
              C47875 +
          (((((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C10403 +
              C26436 * C47872) *
                 C15971 +
             (C26252 + C26253) * C47870) *
                C3136 -
            ((C26911 + C26912) * C47870 +
             (C26438 * C47872 + C26436 * C10403) * C15971) *
                C47668) *
               C2374 +
           (((C26912 + C26911) * C15971 +
             (C22414 * C10403 +
              (C21709 * C1192 + C22024 + C22024 + C47508 * C1210) * C47872) *
                 C47870) *
                C47668 -
            ((C26254 + C26255) * C47870 + (C26253 + C26252) * C15971) * C3136) *
               C47626) *
              C47846)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C10403 +
             C26432 * C47872) *
                C15971 +
            (C26244 + C26245) * C47870) *
               C47899 -
           ((C26907 + C26908) * C47870 +
            (C26433 * C47872 + C26432 * C10403) * C15971) *
               C47896 +
           ((C26433 * C10403 + C28148 * C47872) * C15971 +
            (C27291 + C27292) * C47870) *
               C47887 -
           ((C28619 + C28620) * C47870 +
            (C28150 * C47872 + C28148 * C10403) * C15971) *
               C47868) *
              C2374 +
          (((C26908 + C26907) * C15971 + (C27293 + C27294) * C47870) * C47896 -
           ((C26246 + C26247) * C47870 + (C26245 + C26244) * C15971) * C47899 -
           ((C27295 + C27296) * C47870 + (C27292 + C27291) * C15971) * C47887 +
           ((C28620 + C28619) * C15971 +
            (C23778 * C10403 +
             (C21709 * C23398 + C23407 + C23407 + C47508 * C23400) * C47872) *
                C47870) *
               C47868) *
              C47626) *
         C47535) /
            (p * q * std::sqrt(p + q));
    d2ee[133] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C10403 +
              C26432 * C47872) *
                 C15971 +
             (C26244 + C26245) * C47870) *
                C47664 -
            ((C26907 + C26908) * C47870 +
             (C26433 * C47872 + C26432 * C10403) * C15971) *
                C47671 +
            ((C26433 * C10403 + C28148 * C47872) * C15971 +
             (C27291 + C27292) * C47870) *
                C3644) *
               C2374 +
           (((C26908 + C26907) * C15971 + (C27293 + C27294) * C47870) * C47671 -
            ((C26246 + C26247) * C47870 + (C26245 + C26244) * C15971) * C47664 -
            ((C27295 + C27296) * C47870 + (C27292 + C27291) * C15971) * C3644) *
               C47626) *
              C47806 +
          ((((C26434 * C10403 + C26435 * C47872) * C15971 +
             (C26909 + C26910) * C47870) *
                C47671 -
            ((C26249 + C26248) * C47870 +
             (C26434 * C47872 +
              (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C10403) *
                 C15971) *
                C47664 -
            ((C28351 + C28347) * C47870 +
             (C28488 * C47872 + C26435 * C10403) * C15971) *
                C3644) *
               C2374 +
           (((C26248 + C26249) * C15971 + (C26250 + C26251) * C47870) * C47664 -
            ((C27623 + C27624) * C47870 + (C26910 + C26909) * C15971) * C47671 +
            ((C28347 + C28351) * C15971 +
             (C23563 * C10403 +
              (C21709 * C7340 + C23667 + C23667 + C47508 * C7344) * C47872) *
                 C47870) *
                C3644) *
               C47626) *
              C47546)) /
        (p * q * std::sqrt(p + q));
    d2ee[134] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C10403 +
              C26432 * C47872) *
                 C15971 +
             (C26244 + C26245) * C47870) *
                C3136 -
            ((C26907 + C26908) * C47870 +
             (C26433 * C47872 + C26432 * C10403) * C15971) *
                C47668) *
               C2374 +
           (((C26908 + C26907) * C15971 + (C27293 + C27294) * C47870) * C47668 -
            ((C26246 + C26247) * C47870 + (C26245 + C26244) * C15971) * C3136) *
               C47626) *
              C47888 +
          ((((C26434 * C10403 + C26435 * C47872) * C15971 +
             (C26909 + C26910) * C47870) *
                C47668 -
            ((C26249 + C26248) * C47870 +
             (C26434 * C47872 +
              (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C10403) *
                 C15971) *
                C3136) *
               C2374 +
           (((C26248 + C26249) * C15971 + (C26250 + C26251) * C47870) * C3136 -
            ((C27623 + C27624) * C47870 + (C26910 + C26909) * C15971) *
                C47668) *
               C47626) *
              C47875 +
          (((((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C10403 +
              C26436 * C47872) *
                 C15971 +
             (C26252 + C26253) * C47870) *
                C3136 -
            ((C26911 + C26912) * C47870 +
             (C26438 * C47872 + C26436 * C10403) * C15971) *
                C47668) *
               C2374 +
           (((C26912 + C26911) * C15971 +
             (C22414 * C10403 +
              (C21709 * C1192 + C22024 + C22024 + C47508 * C1210) * C47872) *
                 C47870) *
                C47668 -
            ((C26254 + C26255) * C47870 + (C26253 + C26252) * C15971) * C3136) *
               C47626) *
              C47846)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C10403 +
             C26432 * C47872) *
                C15971 +
            (C26244 + C26245) * C47870) *
               C3136 -
           ((C26907 + C26908) * C47870 +
            (C26433 * C47872 + C26432 * C10403) * C15971) *
               C47668) *
              C47898 +
          (((C26908 + C26907) * C15971 + (C27293 + C27294) * C47870) * C47668 -
           ((C26246 + C26247) * C47870 + (C26245 + C26244) * C15971) * C3136) *
              C47894 +
          (((C26247 + C26246) * C15971 + (C27141 + C27142) * C47870) * C3136 -
           ((C27755 + C27756) * C47870 + (C27294 + C27293) * C15971) * C47668) *
              C47884 +
          (((C27756 + C27755) * C15971 +
            (C23115 * C10403 +
             (C21709 * C22720 + C22734 + C22734 + C47508 * C22722) * C47872) *
                C47870) *
               C47668 -
           ((C27143 + C27144) * C47870 + (C27142 + C27141) * C15971) * C3136) *
              C47862) *
         C47535) /
            (p * q * std::sqrt(p + q));
    d2ee[135] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C10403 +
             C26432 * C47872) *
                C15971 +
            (C26244 + C26245) * C47870) *
               C47581 * C1318 -
           ((C26246 + C26247) * C47870 + (C26245 + C26244) * C15971) * C47581 *
               C1319 +
           ((C26247 + C26246) * C15971 + (C27141 + C27142) * C47870) * C47581 *
               C1320 -
           ((C27143 + C27144) * C47870 + (C27142 + C27141) * C15971) * C47581 *
               C47862) *
              C47806 +
          (((C26248 + C26249) * C15971 + (C26250 + C26251) * C47870) * C47581 *
               C1319 -
           ((C26249 + C26248) * C47870 +
            (C26434 * C47872 +
             (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C10403) *
                C15971) *
               C47581 * C1318 -
           ((C27427 + C27428) * C47870 + (C26251 + C26250) * C15971) * C47581 *
               C1320 +
           ((C27428 + C27427) * C15971 +
            (C22854 * C10403 +
             (C21709 * C6464 + C23004 + C23004 + C47508 * C6468) * C47872) *
                C47870) *
               C47581 * C47862) *
              C47546)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C10403 +
             C26432 * C47872) *
                C15971 +
            (C26244 + C26245) * C47870) *
               C47581 * C47820 -
           ((C26246 + C26247) * C47870 + (C26245 + C26244) * C15971) * C47581 *
               C47626) *
              C580 +
          (((C26248 + C26249) * C15971 + (C26250 + C26251) * C47870) * C47581 *
               C47626 -
           ((C26249 + C26248) * C47870 +
            (C26434 * C47872 +
             (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C10403) *
                C15971) *
               C47581 * C47820) *
              C581 +
          ((((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C10403 +
             C26436 * C47872) *
                C15971 +
            (C26252 + C26253) * C47870) *
               C47581 * C47820 -
           ((C26254 + C26255) * C47870 + (C26253 + C26252) * C15971) * C47581 *
               C47626) *
              C582 +
          (((C26569 + C26575) * C15971 +
            (C22133 * C10403 +
             (C21709 * C1476 + C22236 + C22236 + C47508 * C1478) * C47872) *
                C47870) *
               C47581 * C47626 -
           ((C26575 + C26569) * C47870 +
            ((C21709 * C438 + C22234 + C22234 + C47508 * C458) * C47872 +
             (C21709 * C122 + C21723 + C21723 + C47508 * C136) * C10403) *
                C15971) *
               C47581 * C47820) *
              C47856)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C10403 +
              C26432 * C47872) *
                 C15971 +
             (C26244 + C26245) * C47870) *
                C1702 -
            ((C26907 + C26908) * C47870 +
             (C26433 * C47872 + C26432 * C10403) * C15971) *
                C1703 +
            ((C26433 * C10403 + C28148 * C47872) * C15971 +
             (C27291 + C27292) * C47870) *
                C47855) *
               C47820 +
           (((C26908 + C26907) * C15971 + (C27293 + C27294) * C47870) * C1703 -
            ((C26246 + C26247) * C47870 + (C26245 + C26244) * C15971) * C1702 -
            ((C27295 + C27296) * C47870 + (C27292 + C27291) * C15971) *
                C47855) *
               C47626) *
              C47806 +
          ((((C26434 * C10403 + C26435 * C47872) * C15971 +
             (C26909 + C26910) * C47870) *
                C1703 -
            ((C26249 + C26248) * C47870 +
             (C26434 * C47872 +
              (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C10403) *
                 C15971) *
                C1702 -
            ((C28351 + C28347) * C47870 +
             ((C21709 * C1883 + C23665 + C23665 + C47508 * C1895) * C47872 +
              C26435 * C10403) *
                 C15971) *
                C47855) *
               C47820 +
           (((C26248 + C26249) * C15971 + (C26250 + C26251) * C47870) * C1702 -
            ((C27623 + C27624) * C47870 + (C26910 + C26909) * C15971) * C1703 +
            ((C28347 + C28351) * C15971 +
             (C23563 * C10403 +
              (C21709 * C7340 + C23667 + C23667 + C47508 * C7344) * C47872) *
                 C47870) *
                C47855) *
               C47626) *
              C47546)) /
            (p * q * std::sqrt(p + q));
    d2ee[136] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C10403 +
             C26432 * C47872) *
                C15971 +
            (C26244 + C26245) * C47870) *
               C47821 -
           ((C26907 + C26908) * C47870 +
            (C26433 * C47872 + C26432 * C10403) * C15971) *
               C47668) *
              C1318 +
          (((C26908 + C26907) * C15971 + (C27293 + C27294) * C47870) * C47668 -
           ((C26246 + C26247) * C47870 + (C26245 + C26244) * C15971) * C47821) *
              C1319 +
          (((C26247 + C26246) * C15971 + (C27141 + C27142) * C47870) * C47821 -
           ((C27755 + C27756) * C47870 + (C27294 + C27293) * C15971) * C47668) *
              C1320 +
          (((C27756 + C27755) * C15971 +
            (C23115 * C10403 +
             (C21709 * C22720 + C22734 + C22734 + C47508 * C22722) * C47872) *
                C47870) *
               C47668 -
           ((C27143 + C27144) * C47870 + (C27142 + C27141) * C15971) * C47821) *
              C47862) *
         C47535) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C10403 +
              C26432 * C47872) *
                 C15971 +
             (C26244 + C26245) * C47870) *
                C47821 -
            ((C26907 + C26908) * C47870 +
             (C26433 * C47872 + C26432 * C10403) * C15971) *
                C47668) *
               C47820 +
           (((C26908 + C26907) * C15971 +
             (C22410 * C10403 + C22744 * C47872) * C47870) *
                C47668 -
            ((C26246 + C26247) * C47870 + (C26245 + C26244) * C15971) *
                C47821) *
               C47626) *
              C268 +
          ((((C26434 * C10403 + C26435 * C47872) * C15971 +
             (C26909 + C26910) * C47870) *
                C47668 -
            ((C26249 + C26248) * C47870 +
             (C26434 * C47872 +
              (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C10403) *
                 C15971) *
                C47821) *
               C47820 +
           (((C26248 + C26249) * C15971 + (C26250 + C26251) * C47870) * C47821 -
            ((C23563 * C47872 + C22413 * C10403) * C47870 +
             (C26910 + C26909) * C15971) *
                C47668) *
               C47626) *
              C269 +
          (((((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C10403 +
              C26436 * C47872) *
                 C15971 +
             (C26252 + C26253) * C47870) *
                C47821 -
            ((C26911 + C26912) * C47870 +
             (C26438 * C47872 + C26436 * C10403) * C15971) *
                C47668) *
               C47820 +
           (((C26912 + C26911) * C15971 +
             (C22414 * C10403 +
              (C21709 * C1192 + C22024 + C22024 + C47508 * C1210) * C47872) *
                 C47870) *
                C47668 -
            ((C26254 + C26255) * C47870 + (C26253 + C26252) * C15971) *
                C47821) *
               C47626) *
              C47846)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C10403 +
             C26432 * C47872) *
                C15971 +
            (C26244 + C26245) * C47870) *
               C2156 -
           ((C26907 + C26908) * C47870 +
            (C26433 * C47872 + C26432 * C10403) * C15971) *
               C2157 +
           ((C26433 * C10403 + C28148 * C47872) * C15971 +
            (C27291 + C27292) * C47870) *
               C2158 -
           ((C28619 + C28620) * C47870 +
            (C28150 * C47872 + C28148 * C10403) * C15971) *
               C47868) *
              C47820 +
          (((C26908 + C26907) * C15971 + (C27293 + C27294) * C47870) * C2157 -
           ((C26246 + C26247) * C47870 + (C26245 + C26244) * C15971) * C2156 -
           ((C27295 + C27296) * C47870 + (C27292 + C27291) * C15971) * C2158 +
           ((C28620 + C28619) * C15971 +
            (C23778 * C10403 +
             (C21709 * C23398 + C23407 + C23407 + C47508 * C23400) * C47872) *
                C47870) *
               C47868) *
              C47626) *
         C47535) /
            (p * q * std::sqrt(p + q));
    d2ee[137] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C10403 +
                (C21709 * C434 + C22009 + C22009 + C47508 * C454) * C47872) *
                   C15971 +
               (C21879 * C10403 + C22411 * C47872) * C47870) *
                  C47581 * C47563 * C108 -
              ((C22412 * C47872 + C21882 * C10403) * C47870 +
               ((C21709 * C433 + C22013 + C22013 + C47508 * C453) * C47872 +
                (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C10403) *
                   C15971) *
                  C47581 * C47563 * C109 +
              (((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C10403 +
                (C21709 * C432 + C22021 + C22021 + C47508 * C452) * C47872) *
                   C15971 +
               (C21885 * C10403 + C22415 * C47872) * C47870) *
                  C47581 * C47563 * C110 -
              (((C21709 * C845 + C22235 + C22235 + C47508 * C855) * C47872 +
                C22132 * C10403) *
                   C47870 +
               ((C21709 * C438 + C22234 + C22234 + C47508 * C458) * C47872 +
                (C21709 * C122 + C21723 + C21723 + C47508 * C136) * C10403) *
                   C15971) *
                  C47581 * C47563 * C111 +
              (((C21709 * C123 + C21724 + C21724 + C47508 * C137) * C10403 +
                (C21709 * C440 + C26096 + C26096 + C47508 * C460) * C47872) *
                   C15971 +
               ((C21709 * C279 + C21725 + C21725 + C47508 * C299) * C10403 +
                (C21709 * C846 + C26097 + C26097 + C47508 * C856) * C47872) *
                   C47870) *
                  C47581 * C47563 * C112) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C10403 +
                 (C21709 * C434 + C22009 + C22009 + C47508 * C454) * C47872) *
                    C15971 +
                (C26244 + C26245) * C47870) *
                   C47581 * C47891 -
               ((C26246 + C26247) * C47870 + (C26245 + C26244) * C15971) *
                   C47581 * C47879 +
               ((C26247 + C26246) * C15971 +
                (C21881 * C10403 + C22745 * C47872) * C47870) *
                   C47581 * C47852) *
                  C268 +
              (((C26248 + C26249) * C15971 + (C26250 + C26251) * C47870) *
                   C47581 * C47879 -
               ((C26249 + C26248) * C47870 +
                ((C21709 * C433 + C22013 + C22013 + C47508 * C453) * C47872 +
                 (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C10403) *
                    C15971) *
                   C47581 * C47891 -
               ((C23007 * C47872 + C21884 * C10403) * C47870 +
                (C26251 + C26250) * C15971) *
                   C47581 * C47852) *
                  C269 +
              ((((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C10403 +
                 (C21709 * C432 + C22021 + C22021 + C47508 * C452) * C47872) *
                    C15971 +
                (C26252 + C26253) * C47870) *
                   C47581 * C47891 -
               ((C26254 + C26255) * C47870 + (C26253 + C26252) * C15971) *
                   C47581 * C47879 +
               ((C26255 + C26254) * C15971 +
                (C21887 * C10403 +
                 (C21709 * C1582 + C22397 + C22397 + C47508 * C1588) * C47872) *
                    C47870) *
                   C47581 * C47852) *
                  C47846)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C10403 +
             C26432 * C47872) *
                C15971 +
            (C26244 + C26245) * C47870) *
               C47892 -
           ((C22743 * C47872 + C22411 * C10403) * C47870 +
            (C26433 * C47872 + C26432 * C10403) * C15971) *
               C47881 +
           ((C26433 * C10403 +
             (C21709 * C1884 + C23404 + C23404 + C47508 * C1896) * C47872) *
                C15971 +
            (C22743 * C10403 + C23779 * C47872) * C47870) *
               C47855) *
              C47563 * C268 +
          (((C26434 * C10403 + C26435 * C47872) * C15971 +
            (C22412 * C10403 + C23564 * C47872) * C47870) *
               C47881 -
           ((C26249 + C26248) * C47870 +
            (C26434 * C47872 +
             (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C10403) *
                C15971) *
               C47892 -
           (((C21709 * C2265 + C23666 + C23666 + C47508 * C2271) * C47872 +
             C23564 * C10403) *
                C47870 +
            ((C21709 * C1883 + C23665 + C23665 + C47508 * C1895) * C47872 +
             C26435 * C10403) *
                C15971) *
               C47855) *
              C47563 * C269 +
          ((((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C10403 +
             C26436 * C47872) *
                C15971 +
            (C26252 + C26253) * C47870) *
               C47892 -
           ((C26437 * C47872 + C22415 * C10403) * C47870 +
            (C26438 * C47872 + C26436 * C10403) * C15971) *
               C47881 +
           ((C26438 * C10403 +
             (C21709 * C1882 + C26416 + C26416 + C47508 * C1894) * C47872) *
                C15971 +
            (C26437 * C10403 +
             (C21709 * C2266 + C26417 + C26417 + C47508 * C2272) * C47872) *
                C47870) *
               C47855) *
              C47563 * C47846)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C10403 +
             C26432 * C47872) *
                C15971 +
            (C26244 + C26245) * C47870) *
               C47581 * C976 -
           ((C26246 + C26247) * C47870 + (C26245 + C26244) * C15971) * C47581 *
               C977 +
           ((C26247 + C26246) * C15971 +
            (C21881 * C10403 + C22745 * C47872) * C47870) *
               C47581 * C47852) *
              C47888 +
          (((C26248 + C26249) * C15971 + (C26250 + C26251) * C47870) * C47581 *
               C977 -
           ((C26249 + C26248) * C47870 +
            (C26434 * C47872 +
             (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C10403) *
                C15971) *
               C47581 * C976 -
           ((C23007 * C47872 + C21884 * C10403) * C47870 +
            (C26251 + C26250) * C15971) *
               C47581 * C47852) *
              C47875 +
          ((((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C10403 +
             C26436 * C47872) *
                C15971 +
            (C26252 + C26253) * C47870) *
               C47581 * C976 -
           ((C26254 + C26255) * C47870 + (C26253 + C26252) * C15971) * C47581 *
               C977 +
           ((C26255 + C26254) * C15971 +
            (C21887 * C10403 +
             (C21709 * C1582 + C22397 + C22397 + C47508 * C1588) * C47872) *
                C47870) *
               C47581 * C47852) *
              C47846)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C10403 +
            C26432 * C47872) *
               C15971 +
           (C26244 + C26245) * C47870) *
              C47581 * C1044 -
          ((C26246 + C26247) * C47870 + (C26245 + C26244) * C15971) * C47581 *
              C1045 +
          ((C26247 + C26246) * C15971 + (C27141 + C27142) * C47870) * C47581 *
              C1046 -
          ((C27143 + C27144) * C47870 + (C27142 + C27141) * C15971) * C47581 *
              C1047 +
          ((C27144 + C27143) * C15971 +
           (C22608 * C10403 +
            (C21709 * C23106 + C23112 + C23112 + C47508 * C23108) * C47872) *
               C47870) *
              C47581 * C1048) *
         C47535) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C10403 +
             C26432 * C47872) *
                C15971 +
            (C26244 + C26245) * C47870) *
               C47892 -
           ((C26907 + C26908) * C47870 +
            (C26433 * C47872 + C26432 * C10403) * C15971) *
               C47881 +
           ((C26433 * C10403 +
             (C21709 * C1884 + C23404 + C23404 + C47508 * C1896) * C47872) *
                C15971 +
            (C27291 + C27292) * C47870) *
               C47855) *
              C976 +
          (((C26908 + C26907) * C15971 + (C27293 + C27294) * C47870) * C47881 -
           ((C26246 + C26247) * C47870 + (C26245 + C26244) * C15971) * C47892 -
           ((C27295 + C27296) * C47870 + (C27292 + C27291) * C15971) * C47855) *
              C977 +
          (((C26247 + C26246) * C15971 + (C27141 + C27142) * C47870) * C47892 -
           ((C22746 * C47872 + C22745 * C10403) * C47870 +
            (C27294 + C27293) * C15971) *
               C47881 +
           ((C27296 + C27295) * C15971 +
            (C22746 * C10403 +
             (C21709 * C23765 + C23773 + C23773 + C47508 * C23767) * C47872) *
                C47870) *
               C47855) *
              C47852) *
         C47535) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C10403 +
             C26432 * C47872) *
                C15971 +
            (C26244 + C26245) * C47870) *
               C1702 -
           ((C26907 + C26908) * C47870 +
            (C26433 * C47872 + C26432 * C10403) * C15971) *
               C1703 +
           ((C26433 * C10403 +
             (C21709 * C1884 + C23404 + C23404 + C47508 * C1896) * C47872) *
                C15971 +
            (C27291 + C27292) * C47870) *
               C47855) *
              C47563 * C47888 +
          (((C26434 * C10403 + C26435 * C47872) * C15971 +
            (C26909 + C26910) * C47870) *
               C1703 -
           ((C26249 + C26248) * C47870 +
            (C26434 * C47872 +
             (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C10403) *
                C15971) *
               C1702 -
           (((C21709 * C2265 + C23666 + C23666 + C47508 * C2271) * C47872 +
             C23564 * C10403) *
                C47870 +
            ((C21709 * C1883 + C23665 + C23665 + C47508 * C1895) * C47872 +
             C26435 * C10403) *
                C15971) *
               C47855) *
              C47563 * C47875 +
          ((((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C10403 +
             C26436 * C47872) *
                C15971 +
            (C26252 + C26253) * C47870) *
               C1702 -
           ((C26911 + C26912) * C47870 +
            (C26438 * C47872 + C26436 * C10403) * C15971) *
               C1703 +
           ((C26438 * C10403 +
             (C21709 * C1882 + C26416 + C26416 + C47508 * C1894) * C47872) *
                C15971 +
            (C26437 * C10403 +
             (C21709 * C2266 + C26417 + C26417 + C47508 * C2272) * C47872) *
                C47870) *
               C47855) *
              C47563 * C47846)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C10403 +
             C26432 * C47872) *
                C15971 +
            (C26244 + C26245) * C47870) *
               C1702 -
           ((C26907 + C26908) * C47870 +
            (C26433 * C47872 + C26432 * C10403) * C15971) *
               C1703 +
           ((C26433 * C10403 +
             (C21709 * C1884 + C23404 + C23404 + C47508 * C1896) * C47872) *
                C15971 +
            (C27291 + C27292) * C47870) *
               C47855) *
              C47891 +
          (((C26908 + C26907) * C15971 + (C27293 + C27294) * C47870) * C1703 -
           ((C26246 + C26247) * C47870 + (C26245 + C26244) * C15971) * C1702 -
           ((C27295 + C27296) * C47870 + (C27292 + C27291) * C15971) * C47855) *
              C47879 +
          (((C26247 + C26246) * C15971 + (C27141 + C27142) * C47870) * C1702 -
           ((C27755 + C27756) * C47870 + (C27294 + C27293) * C15971) * C1703 +
           ((C27296 + C27295) * C15971 +
            (C22746 * C10403 +
             (C21709 * C23765 + C23773 + C23773 + C47508 * C23767) * C47872) *
                C47870) *
               C47855) *
              C47852) *
         C47535) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C10403 +
            C26432 * C47872) *
               C15971 +
           (C26244 + C26245) * C47870) *
              C1877 -
          ((C26907 + C26908) * C47870 +
           (C26433 * C47872 + C26432 * C10403) * C15971) *
              C1878 +
          ((C26433 * C10403 + C28148 * C47872) * C15971 +
           (C27291 + C27292) * C47870) *
              C1879 -
          ((C28149 * C47872 + C23779 * C10403) * C47870 +
           (C28150 * C47872 + C28148 * C10403) * C15971) *
              C1880 +
          ((C28150 * C10403 +
            (C21709 * C12429 + C28140 + C28140 + C47508 * C12433) * C47872) *
               C15971 +
           (C28149 * C10403 +
            (C21709 * C28130 + C28141 + C28141 + C47508 * C28132) * C47872) *
               C47870) *
              C1881) *
         C47563 * C47535) /
            (p * q * std::sqrt(p + q));
    d2ee[138] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C10403 +
              C26432 * C47872) *
                 C15971 +
             (C26244 + C26245) * C47870) *
                C47821 -
            ((C26907 + C26908) * C47870 +
             (C26433 * C47872 + C26432 * C10403) * C15971) *
                C47668) *
               C976 +
           (((C26908 + C26907) * C15971 + (C27293 + C27294) * C47870) * C47668 -
            ((C26246 + C26247) * C47870 + (C26245 + C26244) * C15971) *
                C47821) *
               C977 +
           (((C26247 + C26246) * C15971 + (C27141 + C27142) * C47870) * C47821 -
            ((C22746 * C47872 + C22745 * C10403) * C47870 +
             (C27294 + C27293) * C15971) *
                C47668) *
               C47852) *
              C47806 +
          ((((C26434 * C10403 + C26435 * C47872) * C15971 +
             (C26909 + C26910) * C47870) *
                C47668 -
            ((C26249 + C26248) * C47870 +
             (C26434 * C47872 +
              (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C10403) *
                 C15971) *
                C47821) *
               C976 +
           (((C26248 + C26249) * C15971 + (C26250 + C26251) * C47870) * C47821 -
            ((C27623 + C27624) * C47870 + (C26910 + C26909) * C15971) *
                C47668) *
               C977 +
           (((C27624 + C27623) * C15971 +
             (C23007 * C10403 +
              (C21709 * C5944 + C23558 + C23558 + C47508 * C5948) * C47872) *
                 C47870) *
                C47668 -
            ((C27427 + C27428) * C47870 + (C26251 + C26250) * C15971) *
                C47821) *
               C47852) *
              C47546)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C10403 +
             C26432 * C47872) *
                C15971 +
            (C26244 + C26245) * C47870) *
               C47821 -
           ((C22743 * C47872 + C22411 * C10403) * C47870 +
            (C26433 * C47872 + C26432 * C10403) * C15971) *
               C47668) *
              C47563 * C580 +
          (((C26434 * C10403 + C26435 * C47872) * C15971 +
            (C22412 * C10403 + C23564 * C47872) * C47870) *
               C47668 -
           ((C26249 + C26248) * C47870 +
            (C26434 * C47872 +
             (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C10403) *
                C15971) *
               C47821) *
              C47563 * C581 +
          ((((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C10403 +
             C26436 * C47872) *
                C15971 +
            (C26252 + C26253) * C47870) *
               C47821 -
           ((C26437 * C47872 + C22415 * C10403) * C47870 +
            (C26438 * C47872 + C26436 * C10403) * C15971) *
               C47668) *
              C47563 * C582 +
          (((C26712 * C10403 +
             (C21709 * C439 + C26708 + C26708 + C47508 * C459) * C47872) *
                C15971 +
            (C26574 * C10403 +
             (C21709 * C2052 + C26709 + C26709 + C47508 * C2054) * C47872) *
                C47870) *
               C47668 -
           ((C26575 + C26569) * C47870 +
            (C26712 * C47872 +
             (C21709 * C122 + C21723 + C21723 + C47508 * C136) * C10403) *
                C15971) *
               C47821) *
              C47563 * C47856)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C10403 +
             C26432 * C47872) *
                C15971 +
            (C26244 + C26245) * C47870) *
               C2156 -
           ((C26907 + C26908) * C47870 +
            (C26433 * C47872 + C26432 * C10403) * C15971) *
               C2157 +
           ((C26433 * C10403 + C28148 * C47872) * C15971 +
            (C27291 + C27292) * C47870) *
               C2158 -
           ((C28149 * C47872 + C23779 * C10403) * C47870 +
            (C28150 * C47872 + C28148 * C10403) * C15971) *
               C47868) *
              C47563 * C47806 +
          (((C26434 * C10403 + C26435 * C47872) * C15971 +
            (C26909 + C26910) * C47870) *
               C2157 -
           ((C26249 + C26248) * C47870 +
            (C26434 * C47872 +
             (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C10403) *
                C15971) *
               C2156 -
           ((C28351 + C28347) * C47870 +
            (C28488 * C47872 + C26435 * C10403) * C15971) *
               C2158 +
           ((C28488 * C10403 +
             (C21709 * C1886 + C28484 + C28484 + C47508 * C1898) * C47872) *
                C15971 +
            (C28350 * C10403 +
             (C21709 * C6856 + C28485 + C28485 + C47508 * C6860) * C47872) *
                C47870) *
               C47868) *
              C47563 * C47546)) /
            (p * q * std::sqrt(p + q));
    d2ee[139] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C10403 +
             (C21709 * C434 + C22009 + C22009 + C47508 * C454) * C47872) *
                C15971 +
            (C26244 + C26245) * C47870) *
               C47581 * C47891 -
           ((C26246 + C26247) * C47870 + (C26245 + C26244) * C15971) * C47581 *
               C47879 +
           ((C26247 + C26246) * C15971 +
            (C21881 * C10403 + C22745 * C47872) * C47870) *
               C47581 * C47852) *
              C268 +
          (((C26248 + C26249) * C15971 + (C26250 + C26251) * C47870) * C47581 *
               C47879 -
           ((C26249 + C26248) * C47870 +
            ((C21709 * C433 + C22013 + C22013 + C47508 * C453) * C47872 +
             (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C10403) *
                C15971) *
               C47581 * C47891 -
           ((C23007 * C47872 + C21884 * C10403) * C47870 +
            (C26251 + C26250) * C15971) *
               C47581 * C47852) *
              C269 +
          ((((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C10403 +
             (C21709 * C432 + C22021 + C22021 + C47508 * C452) * C47872) *
                C15971 +
            (C26252 + C26253) * C47870) *
               C47581 * C47891 -
           ((C26254 + C26255) * C47870 + (C26253 + C26252) * C15971) * C47581 *
               C47879 +
           ((C26255 + C26254) * C15971 +
            (C21887 * C10403 +
             (C21709 * C1582 + C22397 + C22397 + C47508 * C1588) * C47872) *
                C47870) *
               C47581 * C47852) *
              C47846)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C10403 +
            (C21709 * C434 + C22009 + C22009 + C47508 * C454) * C47872) *
               C15971 +
           (C21879 * C10403 + C22411 * C47872) * C47870) *
              C47581 * C47563 * C108 -
          ((C22412 * C47872 + C21882 * C10403) * C47870 +
           ((C21709 * C433 + C22013 + C22013 + C47508 * C453) * C47872 +
            (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C10403) *
               C15971) *
              C47581 * C47563 * C109 +
          (((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C10403 +
            (C21709 * C432 + C22021 + C22021 + C47508 * C452) * C47872) *
               C15971 +
           (C21885 * C10403 + C22415 * C47872) * C47870) *
              C47581 * C47563 * C110 -
          (((C21709 * C845 + C22235 + C22235 + C47508 * C855) * C47872 +
            C22132 * C10403) *
               C47870 +
           ((C21709 * C438 + C22234 + C22234 + C47508 * C458) * C47872 +
            (C21709 * C122 + C21723 + C21723 + C47508 * C136) * C10403) *
               C15971) *
              C47581 * C47563 * C111 +
          (((C21709 * C123 + C21724 + C21724 + C47508 * C137) * C10403 +
            (C21709 * C440 + C26096 + C26096 + C47508 * C460) * C47872) *
               C15971 +
           ((C21709 * C279 + C21725 + C21725 + C47508 * C299) * C10403 +
            (C21709 * C846 + C26097 + C26097 + C47508 * C856) * C47872) *
               C47870) *
              C47581 * C47563 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C10403 +
             C26432 * C47872) *
                C15971 +
            (C26244 + C26245) * C47870) *
               C47581 * C976 -
           ((C26246 + C26247) * C47870 + (C26245 + C26244) * C15971) * C47581 *
               C977 +
           ((C26247 + C26246) * C15971 +
            (C21881 * C10403 + C22745 * C47872) * C47870) *
               C47581 * C47852) *
              C47888 +
          (((C26248 + C26249) * C15971 + (C26250 + C26251) * C47870) * C47581 *
               C977 -
           ((C26249 + C26248) * C47870 +
            (C26434 * C47872 +
             (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C10403) *
                C15971) *
               C47581 * C976 -
           ((C23007 * C47872 + C21884 * C10403) * C47870 +
            (C26251 + C26250) * C15971) *
               C47581 * C47852) *
              C47875 +
          ((((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C10403 +
             C26436 * C47872) *
                C15971 +
            (C26252 + C26253) * C47870) *
               C47581 * C976 -
           ((C26254 + C26255) * C47870 + (C26253 + C26252) * C15971) * C47581 *
               C977 +
           ((C26255 + C26254) * C15971 +
            (C21887 * C10403 +
             (C21709 * C1582 + C22397 + C22397 + C47508 * C1588) * C47872) *
                C47870) *
               C47581 * C47852) *
              C47846)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C10403 +
            C26432 * C47872) *
               C15971 +
           (C26244 + C26245) * C47870) *
              C47581 * C1044 -
          ((C26246 + C26247) * C47870 + (C26245 + C26244) * C15971) * C47581 *
              C1045 +
          ((C26247 + C26246) * C15971 + (C27141 + C27142) * C47870) * C47581 *
              C1046 -
          ((C27143 + C27144) * C47870 + (C27142 + C27141) * C15971) * C47581 *
              C1047 +
          ((C27144 + C27143) * C15971 +
           (C22608 * C10403 +
            (C21709 * C23106 + C23112 + C23112 + C47508 * C23108) * C47872) *
               C47870) *
              C47581 * C1048) *
         C47535) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C10403 +
             C26432 * C47872) *
                C15971 +
            (C26244 + C26245) * C47870) *
               C1702 -
           ((C26907 + C26908) * C47870 +
            (C26433 * C47872 + C26432 * C10403) * C15971) *
               C1703 +
           ((C26433 * C10403 +
             (C21709 * C1884 + C23404 + C23404 + C47508 * C1896) * C47872) *
                C15971 +
            (C27291 + C27292) * C47870) *
               C47855) *
              C47563 * C47888 +
          (((C26434 * C10403 + C26435 * C47872) * C15971 +
            (C26909 + C26910) * C47870) *
               C1703 -
           ((C26249 + C26248) * C47870 +
            (C26434 * C47872 +
             (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C10403) *
                C15971) *
               C1702 -
           (((C21709 * C2265 + C23666 + C23666 + C47508 * C2271) * C47872 +
             C23564 * C10403) *
                C47870 +
            ((C21709 * C1883 + C23665 + C23665 + C47508 * C1895) * C47872 +
             C26435 * C10403) *
                C15971) *
               C47855) *
              C47563 * C47875 +
          ((((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C10403 +
             C26436 * C47872) *
                C15971 +
            (C26252 + C26253) * C47870) *
               C1702 -
           ((C26911 + C26912) * C47870 +
            (C26438 * C47872 + C26436 * C10403) * C15971) *
               C1703 +
           ((C26438 * C10403 +
             (C21709 * C1882 + C26416 + C26416 + C47508 * C1894) * C47872) *
                C15971 +
            (C26437 * C10403 +
             (C21709 * C2266 + C26417 + C26417 + C47508 * C2272) * C47872) *
                C47870) *
               C47855) *
              C47563 * C47846)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C10403 +
             C26432 * C47872) *
                C15971 +
            (C26244 + C26245) * C47870) *
               C1702 -
           ((C26907 + C26908) * C47870 +
            (C26433 * C47872 + C26432 * C10403) * C15971) *
               C1703 +
           ((C26433 * C10403 +
             (C21709 * C1884 + C23404 + C23404 + C47508 * C1896) * C47872) *
                C15971 +
            (C27291 + C27292) * C47870) *
               C47855) *
              C47891 +
          (((C26908 + C26907) * C15971 + (C27293 + C27294) * C47870) * C1703 -
           ((C26246 + C26247) * C47870 + (C26245 + C26244) * C15971) * C1702 -
           ((C27295 + C27296) * C47870 + (C27292 + C27291) * C15971) * C47855) *
              C47879 +
          (((C26247 + C26246) * C15971 + (C27141 + C27142) * C47870) * C1702 -
           ((C27755 + C27756) * C47870 + (C27294 + C27293) * C15971) * C1703 +
           ((C27296 + C27295) * C15971 +
            (C22746 * C10403 +
             (C21709 * C23765 + C23773 + C23773 + C47508 * C23767) * C47872) *
                C47870) *
               C47855) *
              C47852) *
         C47535) /
            (p * q * std::sqrt(p + q));
    d2ee[140] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C10403 +
              C26432 * C47872) *
                 C15971 +
             (C26244 + C26245) * C47870) *
                C3136 -
            ((C26907 + C26908) * C47870 +
             (C26433 * C47872 + C26432 * C10403) * C15971) *
                C47668) *
               C47820 +
           (((C26908 + C26907) * C15971 + (C27293 + C27294) * C47870) * C47668 -
            ((C26246 + C26247) * C47870 + (C26245 + C26244) * C15971) * C3136) *
               C47626) *
              C47540 +
          ((((C26434 * C10403 + C26435 * C47872) * C15971 +
             (C26909 + C26910) * C47870) *
                C47668 -
            ((C26249 + C26248) * C47870 +
             (C26434 * C47872 +
              (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C10403) *
                 C15971) *
                C3136) *
               C47820 +
           (((C26248 + C26249) * C15971 + (C26250 + C26251) * C47870) * C3136 -
            ((C27623 + C27624) * C47870 + (C26910 + C26909) * C15971) *
                C47668) *
               C47626) *
              C47549 +
          (((((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C10403 +
              C26436 * C47872) *
                 C15971 +
             (C26252 + C26253) * C47870) *
                C3136 -
            ((C26911 + C26912) * C47870 +
             (C26438 * C47872 + C26436 * C10403) * C15971) *
                C47668) *
               C47820 +
           (((C26912 + C26911) * C15971 +
             (C22414 * C10403 +
              (C21709 * C1192 + C22024 + C22024 + C47508 * C1210) * C47872) *
                 C47870) *
                C47668 -
            ((C26254 + C26255) * C47870 + (C26253 + C26252) * C15971) * C3136) *
               C47626) *
              C2745)) /
        (p * q * std::sqrt(p + q));
    d2ee[141] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C10403 +
              C26432 * C47872) *
                 C15971 +
             (C26244 + C26245) * C47870) *
                C47664 -
            ((C26907 + C26908) * C47870 +
             (C26433 * C47872 + C26432 * C10403) * C15971) *
                C47671 +
            ((C26433 * C10403 + C28148 * C47872) * C15971 +
             (C27291 + C27292) * C47870) *
                C3644) *
               C47820 +
           (((C26908 + C26907) * C15971 + (C27293 + C27294) * C47870) * C47671 -
            ((C26246 + C26247) * C47870 + (C26245 + C26244) * C15971) * C47664 -
            ((C27295 + C27296) * C47870 + (C27292 + C27291) * C15971) * C3644) *
               C47626) *
              C2482 +
          ((((C26434 * C10403 + C26435 * C47872) * C15971 +
             (C26909 + C26910) * C47870) *
                C47671 -
            ((C26249 + C26248) * C47870 +
             (C26434 * C47872 +
              (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C10403) *
                 C15971) *
                C47664 -
            ((C28351 + C28347) * C47870 +
             (C28488 * C47872 + C26435 * C10403) * C15971) *
                C3644) *
               C47820 +
           (((C26248 + C26249) * C15971 + (C26250 + C26251) * C47870) * C47664 -
            ((C27623 + C27624) * C47870 + (C26910 + C26909) * C15971) * C47671 +
            ((C28347 + C28351) * C15971 +
             (C23563 * C10403 +
              (C21709 * C7340 + C23667 + C23667 + C47508 * C7344) * C47872) *
                 C47870) *
                C3644) *
               C47626) *
              C47546)) /
        (p * q * std::sqrt(p + q));
    d2ee[142] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C10403 +
              C26432 * C47872) *
                 C15971 +
             (C26244 + C26245) * C47870) *
                C3136 -
            ((C26907 + C26908) * C47870 +
             (C26433 * C47872 + C26432 * C10403) * C15971) *
                C47668) *
               C47891 +
           (((C26908 + C26907) * C15971 + (C27293 + C27294) * C47870) * C47668 -
            ((C26246 + C26247) * C47870 + (C26245 + C26244) * C15971) * C3136) *
               C47879 +
           (((C26247 + C26246) * C15971 + (C27141 + C27142) * C47870) * C3136 -
            ((C27755 + C27756) * C47870 + (C27294 + C27293) * C15971) *
                C47668) *
               C47852) *
              C2482 +
          ((((C26434 * C10403 + C26435 * C47872) * C15971 +
             (C26909 + C26910) * C47870) *
                C47668 -
            ((C26249 + C26248) * C47870 +
             (C26434 * C47872 +
              (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C10403) *
                 C15971) *
                C3136) *
               C47891 +
           (((C26248 + C26249) * C15971 + (C26250 + C26251) * C47870) * C3136 -
            ((C27623 + C27624) * C47870 + (C26910 + C26909) * C15971) *
                C47668) *
               C47879 +
           (((C27624 + C27623) * C15971 +
             (C23007 * C10403 +
              (C21709 * C5944 + C23558 + C23558 + C47508 * C5948) * C47872) *
                 C47870) *
                C47668 -
            ((C27427 + C27428) * C47870 + (C26251 + C26250) * C15971) * C3136) *
               C47852) *
              C47546)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C10403 +
             C26432 * C47872) *
                C15971 +
            (C26244 + C26245) * C47870) *
               C3136 -
           ((C26907 + C26908) * C47870 +
            (C26433 * C47872 + C26432 * C10403) * C15971) *
               C47668) *
              C47563 * C47897 +
          (((C26434 * C10403 + C26435 * C47872) * C15971 +
            (C26909 + C26910) * C47870) *
               C47668 -
           ((C26249 + C26248) * C47870 +
            (C26434 * C47872 +
             (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C10403) *
                C15971) *
               C3136) *
              C47563 * C47890 +
          ((((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C10403 +
             C26436 * C47872) *
                C15971 +
            (C26252 + C26253) * C47870) *
               C3136 -
           ((C26911 + C26912) * C47870 +
            (C26438 * C47872 + C26436 * C10403) * C15971) *
               C47668) *
              C47563 * C47877 +
          (((C26712 * C10403 +
             (C21709 * C439 + C26708 + C26708 + C47508 * C459) * C47872) *
                C15971 +
            (C26574 * C10403 +
             (C21709 * C2052 + C26709 + C26709 + C47508 * C2054) * C47872) *
                C47870) *
               C47668 -
           ((C26575 + C26569) * C47870 +
            (C26712 * C47872 +
             (C21709 * C122 + C21723 + C21723 + C47508 * C136) * C10403) *
                C15971) *
               C3136) *
              C47563 * C47856)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C10403 +
             C26432 * C47872) *
                C15971 +
            (C26244 + C26245) * C47870) *
               C47899 -
           ((C26907 + C26908) * C47870 +
            (C26433 * C47872 + C26432 * C10403) * C15971) *
               C47896 +
           ((C26433 * C10403 + C28148 * C47872) * C15971 +
            (C27291 + C27292) * C47870) *
               C47887 -
           ((C28619 + C28620) * C47870 +
            (C28150 * C47872 + C28148 * C10403) * C15971) *
               C47868) *
              C47563 * C2482 +
          (((C26434 * C10403 + C26435 * C47872) * C15971 +
            (C26909 + C26910) * C47870) *
               C47896 -
           ((C26249 + C26248) * C47870 +
            (C26434 * C47872 +
             (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C10403) *
                C15971) *
               C47899 -
           ((C28351 + C28347) * C47870 +
            (C28488 * C47872 + C26435 * C10403) * C15971) *
               C47887 +
           ((C28488 * C10403 +
             (C21709 * C1886 + C28484 + C28484 + C47508 * C1898) * C47872) *
                C15971 +
            (C28350 * C10403 +
             (C21709 * C6856 + C28485 + C28485 + C47508 * C6860) * C47872) *
                C47870) *
               C47868) *
              C47563 * C47546)) /
            (p * q * std::sqrt(p + q));
    d2ee[143] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C10403 +
             C26432 * C47872) *
                C15971 +
            (C26244 + C26245) * C47870) *
               C47664 -
           ((C26907 + C26908) * C47870 +
            (C26433 * C47872 + C26432 * C10403) * C15971) *
               C47671 +
           ((C26433 * C10403 + C28148 * C47872) * C15971 +
            (C27291 + C27292) * C47870) *
               C3644) *
              C47563 * C47540 +
          (((C26434 * C10403 + C26435 * C47872) * C15971 +
            (C26909 + C26910) * C47870) *
               C47671 -
           ((C26249 + C26248) * C47870 +
            (C26434 * C47872 +
             (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C10403) *
                C15971) *
               C47664 -
           ((C28351 + C28347) * C47870 +
            (C28488 * C47872 + C26435 * C10403) * C15971) *
               C3644) *
              C47563 * C47549 +
          ((((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C10403 +
             C26436 * C47872) *
                C15971 +
            (C26252 + C26253) * C47870) *
               C47664 -
           ((C26911 + C26912) * C47870 +
            (C26438 * C47872 + C26436 * C10403) * C15971) *
               C47671 +
           ((C26438 * C10403 +
             (C21709 * C1882 + C26416 + C26416 + C47508 * C1894) * C47872) *
                C15971 +
            (C26437 * C10403 +
             (C21709 * C2266 + C26417 + C26417 + C47508 * C2272) * C47872) *
                C47870) *
               C3644) *
              C47563 * C2745)) /
        (p * q * std::sqrt(p + q));
    d2ee[144] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C10403 +
             C26432 * C47872) *
                C15971 +
            (C26244 + C26245) * C47870) *
               C3136 -
           ((C26907 + C26908) * C47870 +
            (C26433 * C47872 + C26432 * C10403) * C15971) *
               C47668) *
              C47563 * C47897 +
          (((C26434 * C10403 + C26435 * C47872) * C15971 +
            (C26909 + C26910) * C47870) *
               C47668 -
           ((C26249 + C26248) * C47870 +
            (C26434 * C47872 +
             (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C10403) *
                C15971) *
               C3136) *
              C47563 * C47890 +
          ((((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C10403 +
             C26436 * C47872) *
                C15971 +
            (C26252 + C26253) * C47870) *
               C3136 -
           ((C26911 + C26912) * C47870 +
            (C26438 * C47872 + C26436 * C10403) * C15971) *
               C47668) *
              C47563 * C47877 +
          (((C26712 * C10403 +
             (C21709 * C439 + C26708 + C26708 + C47508 * C459) * C47872) *
                C15971 +
            (C26574 * C10403 +
             (C21709 * C2052 + C26709 + C26709 + C47508 * C2054) * C47872) *
                C47870) *
               C47668 -
           ((C26575 + C26569) * C47870 +
            (C26712 * C47872 +
             (C21709 * C122 + C21723 + C21723 + C47508 * C136) * C10403) *
                C15971) *
               C3136) *
              C47563 * C47856)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C10403 +
              C26432 * C47872) *
                 C15971 +
             (C26244 + C26245) * C47870) *
                C3136 -
            ((C26907 + C26908) * C47870 +
             (C26433 * C47872 + C26432 * C10403) * C15971) *
                C47668) *
               C47891 +
           (((C26908 + C26907) * C15971 + (C27293 + C27294) * C47870) * C47668 -
            ((C26246 + C26247) * C47870 + (C26245 + C26244) * C15971) * C3136) *
               C47879 +
           (((C26247 + C26246) * C15971 + (C27141 + C27142) * C47870) * C3136 -
            ((C27755 + C27756) * C47870 + (C27294 + C27293) * C15971) *
                C47668) *
               C47852) *
              C2482 +
          ((((C26434 * C10403 + C26435 * C47872) * C15971 +
             (C26909 + C26910) * C47870) *
                C47668 -
            ((C26249 + C26248) * C47870 +
             (C26434 * C47872 +
              (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C10403) *
                 C15971) *
                C3136) *
               C47891 +
           (((C26248 + C26249) * C15971 + (C26250 + C26251) * C47870) * C3136 -
            ((C27623 + C27624) * C47870 + (C26910 + C26909) * C15971) *
                C47668) *
               C47879 +
           (((C27624 + C27623) * C15971 +
             (C23007 * C10403 +
              (C21709 * C5944 + C23558 + C23558 + C47508 * C5948) * C47872) *
                 C47870) *
                C47668 -
            ((C27427 + C27428) * C47870 + (C26251 + C26250) * C15971) * C3136) *
               C47852) *
              C47546)) /
            (p * q * std::sqrt(p + q));
    d2ee[145] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C10403 +
             C26432 * C47872) *
                C15971 +
            (C26244 + C26245) * C47870) *
               C47581 * C47820 -
           ((C26246 + C26247) * C47870 + (C26245 + C26244) * C15971) * C47581 *
               C47626) *
              C580 +
          (((C26248 + C26249) * C15971 + (C26250 + C26251) * C47870) * C47581 *
               C47626 -
           ((C26249 + C26248) * C47870 +
            (C26434 * C47872 +
             (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C10403) *
                C15971) *
               C47581 * C47820) *
              C581 +
          ((((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C10403 +
             C26436 * C47872) *
                C15971 +
            (C26252 + C26253) * C47870) *
               C47581 * C47820 -
           ((C26254 + C26255) * C47870 + (C26253 + C26252) * C15971) * C47581 *
               C47626) *
              C582 +
          (((C26569 + C26575) * C15971 +
            (C22133 * C10403 +
             (C21709 * C1476 + C22236 + C22236 + C47508 * C1478) * C47872) *
                C47870) *
               C47581 * C47626 -
           ((C26575 + C26569) * C47870 +
            ((C21709 * C438 + C22234 + C22234 + C47508 * C458) * C47872 +
             (C21709 * C122 + C21723 + C21723 + C47508 * C136) * C10403) *
                C15971) *
               C47581 * C47820) *
              C47856)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C10403 +
             C26432 * C47872) *
                C15971 +
            (C26244 + C26245) * C47870) *
               C47581 * C1318 -
           ((C26246 + C26247) * C47870 + (C26245 + C26244) * C15971) * C47581 *
               C1319 +
           ((C26247 + C26246) * C15971 + (C27141 + C27142) * C47870) * C47581 *
               C1320 -
           ((C27143 + C27144) * C47870 + (C27142 + C27141) * C15971) * C47581 *
               C47862) *
              C47806 +
          (((C26248 + C26249) * C15971 + (C26250 + C26251) * C47870) * C47581 *
               C1319 -
           ((C26249 + C26248) * C47870 +
            (C26434 * C47872 +
             (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C10403) *
                C15971) *
               C47581 * C1318 -
           ((C27427 + C27428) * C47870 + (C26251 + C26250) * C15971) * C47581 *
               C1320 +
           ((C27428 + C27427) * C15971 +
            (C22854 * C10403 +
             (C21709 * C6464 + C23004 + C23004 + C47508 * C6468) * C47872) *
                C47870) *
               C47581 * C47862) *
              C47546)) /
            (p * q * std::sqrt(p + q));
    d2ee[146] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C10403 +
              C26432 * C47872) *
                 C15971 +
             (C26244 + C26245) * C47870) *
                C47821 -
            ((C26907 + C26908) * C47870 +
             (C26433 * C47872 + C26432 * C10403) * C15971) *
                C47668) *
               C47820 +
           (((C26908 + C26907) * C15971 +
             (C22410 * C10403 + C22744 * C47872) * C47870) *
                C47668 -
            ((C26246 + C26247) * C47870 + (C26245 + C26244) * C15971) *
                C47821) *
               C47626) *
              C268 +
          ((((C26434 * C10403 + C26435 * C47872) * C15971 +
             (C26909 + C26910) * C47870) *
                C47668 -
            ((C26249 + C26248) * C47870 +
             (C26434 * C47872 +
              (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C10403) *
                 C15971) *
                C47821) *
               C47820 +
           (((C26248 + C26249) * C15971 + (C26250 + C26251) * C47870) * C47821 -
            ((C23563 * C47872 + C22413 * C10403) * C47870 +
             (C26910 + C26909) * C15971) *
                C47668) *
               C47626) *
              C269 +
          (((((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C10403 +
              C26436 * C47872) *
                 C15971 +
             (C26252 + C26253) * C47870) *
                C47821 -
            ((C26911 + C26912) * C47870 +
             (C26438 * C47872 + C26436 * C10403) * C15971) *
                C47668) *
               C47820 +
           (((C26912 + C26911) * C15971 +
             (C22414 * C10403 +
              (C21709 * C1192 + C22024 + C22024 + C47508 * C1210) * C47872) *
                 C47870) *
                C47668 -
            ((C26254 + C26255) * C47870 + (C26253 + C26252) * C15971) *
                C47821) *
               C47626) *
              C47846)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C10403 +
             C26432 * C47872) *
                C15971 +
            (C26244 + C26245) * C47870) *
               C47821 -
           ((C26907 + C26908) * C47870 +
            (C26433 * C47872 + C26432 * C10403) * C15971) *
               C47668) *
              C1318 +
          (((C26908 + C26907) * C15971 + (C27293 + C27294) * C47870) * C47668 -
           ((C26246 + C26247) * C47870 + (C26245 + C26244) * C15971) * C47821) *
              C1319 +
          (((C26247 + C26246) * C15971 + (C27141 + C27142) * C47870) * C47821 -
           ((C27755 + C27756) * C47870 + (C27294 + C27293) * C15971) * C47668) *
              C1320 +
          (((C27756 + C27755) * C15971 +
            (C23115 * C10403 +
             (C21709 * C22720 + C22734 + C22734 + C47508 * C22722) * C47872) *
                C47870) *
               C47668 -
           ((C27143 + C27144) * C47870 + (C27142 + C27141) * C15971) * C47821) *
              C47862) *
         C47535) /
            (p * q * std::sqrt(p + q));
    d2ee[147] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C10403 +
             (C21709 * C434 + C22009 + C22009 + C47508 * C454) * C47872) *
                C15971 +
            (C26244 + C26245) * C47870) *
               C47581 * C47891 -
           ((C26246 + C26247) * C47870 + (C26245 + C26244) * C15971) * C47581 *
               C47879 +
           ((C26247 + C26246) * C15971 +
            (C21881 * C10403 + C22745 * C47872) * C47870) *
               C47581 * C47852) *
              C268 +
          (((C26248 + C26249) * C15971 + (C26250 + C26251) * C47870) * C47581 *
               C47879 -
           ((C26249 + C26248) * C47870 +
            ((C21709 * C433 + C22013 + C22013 + C47508 * C453) * C47872 +
             (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C10403) *
                C15971) *
               C47581 * C47891 -
           ((C23007 * C47872 + C21884 * C10403) * C47870 +
            (C26251 + C26250) * C15971) *
               C47581 * C47852) *
              C269 +
          ((((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C10403 +
             (C21709 * C432 + C22021 + C22021 + C47508 * C452) * C47872) *
                C15971 +
            (C26252 + C26253) * C47870) *
               C47581 * C47891 -
           ((C26254 + C26255) * C47870 + (C26253 + C26252) * C15971) * C47581 *
               C47879 +
           ((C26255 + C26254) * C15971 +
            (C21887 * C10403 +
             (C21709 * C1582 + C22397 + C22397 + C47508 * C1588) * C47872) *
                C47870) *
               C47581 * C47852) *
              C47846)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C10403 +
            (C21709 * C434 + C22009 + C22009 + C47508 * C454) * C47872) *
               C15971 +
           (C21879 * C10403 + C22411 * C47872) * C47870) *
              C47581 * C47563 * C108 -
          ((C22412 * C47872 + C21882 * C10403) * C47870 +
           ((C21709 * C433 + C22013 + C22013 + C47508 * C453) * C47872 +
            (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C10403) *
               C15971) *
              C47581 * C47563 * C109 +
          (((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C10403 +
            (C21709 * C432 + C22021 + C22021 + C47508 * C452) * C47872) *
               C15971 +
           (C21885 * C10403 + C22415 * C47872) * C47870) *
              C47581 * C47563 * C110 -
          (((C21709 * C845 + C22235 + C22235 + C47508 * C855) * C47872 +
            C22132 * C10403) *
               C47870 +
           ((C21709 * C438 + C22234 + C22234 + C47508 * C458) * C47872 +
            (C21709 * C122 + C21723 + C21723 + C47508 * C136) * C10403) *
               C15971) *
              C47581 * C47563 * C111 +
          (((C21709 * C123 + C21724 + C21724 + C47508 * C137) * C10403 +
            (C21709 * C440 + C26096 + C26096 + C47508 * C460) * C47872) *
               C15971 +
           ((C21709 * C279 + C21725 + C21725 + C47508 * C299) * C10403 +
            (C21709 * C846 + C26097 + C26097 + C47508 * C856) * C47872) *
               C47870) *
              C47581 * C47563 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C10403 +
             C26432 * C47872) *
                C15971 +
            (C26244 + C26245) * C47870) *
               C47892 -
           ((C22743 * C47872 + C22411 * C10403) * C47870 +
            (C26433 * C47872 + C26432 * C10403) * C15971) *
               C47881 +
           ((C26433 * C10403 +
             (C21709 * C1884 + C23404 + C23404 + C47508 * C1896) * C47872) *
                C15971 +
            (C22743 * C10403 + C23779 * C47872) * C47870) *
               C47855) *
              C47563 * C268 +
          (((C26434 * C10403 + C26435 * C47872) * C15971 +
            (C22412 * C10403 + C23564 * C47872) * C47870) *
               C47881 -
           ((C26249 + C26248) * C47870 +
            (C26434 * C47872 +
             (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C10403) *
                C15971) *
               C47892 -
           (((C21709 * C2265 + C23666 + C23666 + C47508 * C2271) * C47872 +
             C23564 * C10403) *
                C47870 +
            ((C21709 * C1883 + C23665 + C23665 + C47508 * C1895) * C47872 +
             C26435 * C10403) *
                C15971) *
               C47855) *
              C47563 * C269 +
          ((((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C10403 +
             C26436 * C47872) *
                C15971 +
            (C26252 + C26253) * C47870) *
               C47892 -
           ((C26437 * C47872 + C22415 * C10403) * C47870 +
            (C26438 * C47872 + C26436 * C10403) * C15971) *
               C47881 +
           ((C26438 * C10403 +
             (C21709 * C1882 + C26416 + C26416 + C47508 * C1894) * C47872) *
                C15971 +
            (C26437 * C10403 +
             (C21709 * C2266 + C26417 + C26417 + C47508 * C2272) * C47872) *
                C47870) *
               C47855) *
              C47563 * C47846)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C10403 +
             C26432 * C47872) *
                C15971 +
            (C26244 + C26245) * C47870) *
               C47581 * C976 -
           ((C26246 + C26247) * C47870 + (C26245 + C26244) * C15971) * C47581 *
               C977 +
           ((C26247 + C26246) * C15971 +
            (C21881 * C10403 + C22745 * C47872) * C47870) *
               C47581 * C47852) *
              C47888 +
          (((C26248 + C26249) * C15971 + (C26250 + C26251) * C47870) * C47581 *
               C977 -
           ((C26249 + C26248) * C47870 +
            (C26434 * C47872 +
             (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C10403) *
                C15971) *
               C47581 * C976 -
           ((C23007 * C47872 + C21884 * C10403) * C47870 +
            (C26251 + C26250) * C15971) *
               C47581 * C47852) *
              C47875 +
          ((((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C10403 +
             C26436 * C47872) *
                C15971 +
            (C26252 + C26253) * C47870) *
               C47581 * C976 -
           ((C26254 + C26255) * C47870 + (C26253 + C26252) * C15971) * C47581 *
               C977 +
           ((C26255 + C26254) * C15971 +
            (C21887 * C10403 +
             (C21709 * C1582 + C22397 + C22397 + C47508 * C1588) * C47872) *
                C47870) *
               C47581 * C47852) *
              C47846)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C10403 +
            C26432 * C47872) *
               C15971 +
           (C26244 + C26245) * C47870) *
              C47581 * C1044 -
          ((C26246 + C26247) * C47870 + (C26245 + C26244) * C15971) * C47581 *
              C1045 +
          ((C26247 + C26246) * C15971 + (C27141 + C27142) * C47870) * C47581 *
              C1046 -
          ((C27143 + C27144) * C47870 + (C27142 + C27141) * C15971) * C47581 *
              C1047 +
          ((C27144 + C27143) * C15971 +
           (C22608 * C10403 +
            (C21709 * C23106 + C23112 + C23112 + C47508 * C23108) * C47872) *
               C47870) *
              C47581 * C1048) *
         C47535) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C10403 +
             C26432 * C47872) *
                C15971 +
            (C26244 + C26245) * C47870) *
               C47892 -
           ((C26907 + C26908) * C47870 +
            (C26433 * C47872 + C26432 * C10403) * C15971) *
               C47881 +
           ((C26433 * C10403 +
             (C21709 * C1884 + C23404 + C23404 + C47508 * C1896) * C47872) *
                C15971 +
            (C27291 + C27292) * C47870) *
               C47855) *
              C976 +
          (((C26908 + C26907) * C15971 + (C27293 + C27294) * C47870) * C47881 -
           ((C26246 + C26247) * C47870 + (C26245 + C26244) * C15971) * C47892 -
           ((C27295 + C27296) * C47870 + (C27292 + C27291) * C15971) * C47855) *
              C977 +
          (((C26247 + C26246) * C15971 + (C27141 + C27142) * C47870) * C47892 -
           ((C22746 * C47872 + C22745 * C10403) * C47870 +
            (C27294 + C27293) * C15971) *
               C47881 +
           ((C27296 + C27295) * C15971 +
            (C22746 * C10403 +
             (C21709 * C23765 + C23773 + C23773 + C47508 * C23767) * C47872) *
                C47870) *
               C47855) *
              C47852) *
         C47535) /
            (p * q * std::sqrt(p + q));
    d2ee[148] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C10403 +
             C26432 * C47872) *
                C15971 +
            (C26244 + C26245) * C47870) *
               C47821 -
           ((C22743 * C47872 + C22411 * C10403) * C47870 +
            (C26433 * C47872 + C26432 * C10403) * C15971) *
               C47668) *
              C47563 * C580 +
          (((C26434 * C10403 + C26435 * C47872) * C15971 +
            (C22412 * C10403 + C23564 * C47872) * C47870) *
               C47668 -
           ((C26249 + C26248) * C47870 +
            (C26434 * C47872 +
             (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C10403) *
                C15971) *
               C47821) *
              C47563 * C581 +
          ((((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C10403 +
             C26436 * C47872) *
                C15971 +
            (C26252 + C26253) * C47870) *
               C47821 -
           ((C26437 * C47872 + C22415 * C10403) * C47870 +
            (C26438 * C47872 + C26436 * C10403) * C15971) *
               C47668) *
              C47563 * C582 +
          (((C26712 * C10403 +
             (C21709 * C439 + C26708 + C26708 + C47508 * C459) * C47872) *
                C15971 +
            (C26574 * C10403 +
             (C21709 * C2052 + C26709 + C26709 + C47508 * C2054) * C47872) *
                C47870) *
               C47668 -
           ((C26575 + C26569) * C47870 +
            (C26712 * C47872 +
             (C21709 * C122 + C21723 + C21723 + C47508 * C136) * C10403) *
                C15971) *
               C47821) *
              C47563 * C47856)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C10403 +
              C26432 * C47872) *
                 C15971 +
             (C26244 + C26245) * C47870) *
                C47821 -
            ((C26907 + C26908) * C47870 +
             (C26433 * C47872 + C26432 * C10403) * C15971) *
                C47668) *
               C976 +
           (((C26908 + C26907) * C15971 + (C27293 + C27294) * C47870) * C47668 -
            ((C26246 + C26247) * C47870 + (C26245 + C26244) * C15971) *
                C47821) *
               C977 +
           (((C26247 + C26246) * C15971 + (C27141 + C27142) * C47870) * C47821 -
            ((C22746 * C47872 + C22745 * C10403) * C47870 +
             (C27294 + C27293) * C15971) *
                C47668) *
               C47852) *
              C47806 +
          ((((C26434 * C10403 + C26435 * C47872) * C15971 +
             (C26909 + C26910) * C47870) *
                C47668 -
            ((C26249 + C26248) * C47870 +
             (C26434 * C47872 +
              (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C10403) *
                 C15971) *
                C47821) *
               C976 +
           (((C26248 + C26249) * C15971 + (C26250 + C26251) * C47870) * C47821 -
            ((C27623 + C27624) * C47870 + (C26910 + C26909) * C15971) *
                C47668) *
               C977 +
           (((C27624 + C27623) * C15971 +
             (C23007 * C10403 +
              (C21709 * C5944 + C23558 + C23558 + C47508 * C5948) * C47872) *
                 C47870) *
                C47668 -
            ((C27427 + C27428) * C47870 + (C26251 + C26250) * C15971) *
                C47821) *
               C47852) *
              C47546)) /
            (p * q * std::sqrt(p + q));
    d2ee[149] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C10403 +
            (C21709 * C434 + C22009 + C22009 + C47508 * C454) * C47872) *
               C15971 +
           (C21879 * C10403 + C22411 * C47872) * C47870) *
              C47581 * C47563 * C108 -
          ((C22412 * C47872 + C21882 * C10403) * C47870 +
           ((C21709 * C433 + C22013 + C22013 + C47508 * C453) * C47872 +
            (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C10403) *
               C15971) *
              C47581 * C47563 * C109 +
          (((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C10403 +
            (C21709 * C432 + C22021 + C22021 + C47508 * C452) * C47872) *
               C15971 +
           (C21885 * C10403 + C22415 * C47872) * C47870) *
              C47581 * C47563 * C110 -
          (((C21709 * C845 + C22235 + C22235 + C47508 * C855) * C47872 +
            C22132 * C10403) *
               C47870 +
           ((C21709 * C438 + C22234 + C22234 + C47508 * C458) * C47872 +
            (C21709 * C122 + C21723 + C21723 + C47508 * C136) * C10403) *
               C15971) *
              C47581 * C47563 * C111 +
          (((C21709 * C123 + C21724 + C21724 + C47508 * C137) * C10403 +
            (C21709 * C440 + C26096 + C26096 + C47508 * C460) * C47872) *
               C15971 +
           ((C21709 * C279 + C21725 + C21725 + C47508 * C299) * C10403 +
            (C21709 * C846 + C26097 + C26097 + C47508 * C856) * C47872) *
               C47870) *
              C47581 * C47563 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C10403 +
             (C21709 * C434 + C22009 + C22009 + C47508 * C454) * C47872) *
                C15971 +
            (C26244 + C26245) * C47870) *
               C47581 * C47891 -
           ((C26246 + C26247) * C47870 + (C26245 + C26244) * C15971) * C47581 *
               C47879 +
           ((C26247 + C26246) * C15971 +
            (C21881 * C10403 + C22745 * C47872) * C47870) *
               C47581 * C47852) *
              C268 +
          (((C26248 + C26249) * C15971 + (C26250 + C26251) * C47870) * C47581 *
               C47879 -
           ((C26249 + C26248) * C47870 +
            ((C21709 * C433 + C22013 + C22013 + C47508 * C453) * C47872 +
             (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C10403) *
                C15971) *
               C47581 * C47891 -
           ((C23007 * C47872 + C21884 * C10403) * C47870 +
            (C26251 + C26250) * C15971) *
               C47581 * C47852) *
              C269 +
          ((((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C10403 +
             (C21709 * C432 + C22021 + C22021 + C47508 * C452) * C47872) *
                C15971 +
            (C26252 + C26253) * C47870) *
               C47581 * C47891 -
           ((C26254 + C26255) * C47870 + (C26253 + C26252) * C15971) * C47581 *
               C47879 +
           ((C26255 + C26254) * C15971 +
            (C21887 * C10403 +
             (C21709 * C1582 + C22397 + C22397 + C47508 * C1588) * C47872) *
                C47870) *
               C47581 * C47852) *
              C47846)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C10403 +
             C26432 * C47872) *
                C15971 +
            (C26244 + C26245) * C47870) *
               C47581 * C976 -
           ((C26246 + C26247) * C47870 + (C26245 + C26244) * C15971) * C47581 *
               C977 +
           ((C26247 + C26246) * C15971 +
            (C21881 * C10403 + C22745 * C47872) * C47870) *
               C47581 * C47852) *
              C47888 +
          (((C26248 + C26249) * C15971 + (C26250 + C26251) * C47870) * C47581 *
               C977 -
           ((C26249 + C26248) * C47870 +
            (C26434 * C47872 +
             (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C10403) *
                C15971) *
               C47581 * C976 -
           ((C23007 * C47872 + C21884 * C10403) * C47870 +
            (C26251 + C26250) * C15971) *
               C47581 * C47852) *
              C47875 +
          ((((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C10403 +
             C26436 * C47872) *
                C15971 +
            (C26252 + C26253) * C47870) *
               C47581 * C976 -
           ((C26254 + C26255) * C47870 + (C26253 + C26252) * C15971) * C47581 *
               C977 +
           ((C26255 + C26254) * C15971 +
            (C21887 * C10403 +
             (C21709 * C1582 + C22397 + C22397 + C47508 * C1588) * C47872) *
                C47870) *
               C47581 * C47852) *
              C47846)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C10403 +
            C26432 * C47872) *
               C15971 +
           (C26244 + C26245) * C47870) *
              C47581 * C1044 -
          ((C26246 + C26247) * C47870 + (C26245 + C26244) * C15971) * C47581 *
              C1045 +
          ((C26247 + C26246) * C15971 + (C27141 + C27142) * C47870) * C47581 *
              C1046 -
          ((C27143 + C27144) * C47870 + (C27142 + C27141) * C15971) * C47581 *
              C1047 +
          ((C27144 + C27143) * C15971 +
           (C22608 * C10403 +
            (C21709 * C23106 + C23112 + C23112 + C47508 * C23108) * C47872) *
               C47870) *
              C47581 * C1048) *
         C47535) /
            (p * q * std::sqrt(p + q));
    d2ee[150] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                      C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                         C31666 +
                     (C32013 + C32014) * C47872) *
                        C47770 * C47581 * C47622 -
                    ((C16886 + C16887) * C47872 + (C16205 + C16204) * C31666) *
                        C47770 * C47581 * C47629 +
                    ((C16207 + C16206) * C31666 + (C17322 + C17323) * C47872) *
                        C47770 * C47581 * C2742) *
                       C47540 +
                   (((C16208 + C16209) * C31666 + (C16888 + C16889) * C47872) *
                        C47770 * C47581 * C47629 -
                    ((C32018 + C32017) * C47872 +
                     (C15975 * C121 + C15984 + C15984 + C47839 * C135 +
                      C15973 * C120 + C15985 + C15985 + C15969 * C134) *
                         C31666) *
                        C47770 * C47581 * C47622 -
                    ((C17672 + C17673) * C47872 + (C16211 + C16210) * C31666) *
                        C47770 * C47581 * C2742) *
                       C47549 +
                   (((C15973 * C121 + C15986 + C15986 + C15969 * C135 +
                      C15975 * C122 + C15987 + C15987 + C47839 * C136) *
                         C31666 +
                     (C32021 + C32022) * C47872) *
                        C47770 * C47581 * C47622 -
                    ((C16890 + C16891) * C47872 + (C16213 + C16212) * C31666) *
                        C47770 * C47581 * C47629 +
                    ((C16215 + C16214) * C31666 +
                     (C15973 * C1187 + C16872 + C16872 + C15969 * C1205 +
                      C15975 * C1476 + C16873 + C16873 + C47839 * C1478) *
                         C47872) *
                        C47770 * C47581 * C2742) *
                       C2745)) /
                 (p * q * std::sqrt(p + q));
    d2ee[151] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                       C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                          C31666 +
                      (C32013 + C32014) * C47872) *
                         C47770 * C47821 -
                     ((C32015 + C32016) * C47872 + (C32014 + C32013) * C31666) *
                         C47770 * C47668) *
                        C47622 +
                    (((C16887 + C16886) * C31666 + (C17320 + C17321) * C47872) *
                         C47770 * C47668 -
                     ((C16886 + C16887) * C47872 + (C16205 + C16204) * C31666) *
                         C47770 * C47821) *
                        C47629 +
                    (((C16207 + C16206) * C31666 + (C17322 + C17323) * C47872) *
                         C47770 * C47821 -
                     ((C17324 + C17325) * C47872 + (C17323 + C17322) * C31666) *
                         C47770 * C47668) *
                        C2742) *
                       C2482 +
                   ((((C32017 + C32018) * C31666 + (C32019 + C32020) * C47872) *
                         C47770 * C47668 -
                     ((C32018 + C32017) * C47872 +
                      (C15975 * C121 + C15984 + C15984 + C47839 * C135 +
                       C15973 * C120 + C15985 + C15985 + C15969 * C134) *
                          C31666) *
                         C47770 * C47821) *
                        C47622 +
                    (((C16208 + C16209) * C31666 + (C16888 + C16889) * C47872) *
                         C47770 * C47821 -
                     ((C18402 + C18403) * C47872 + (C16889 + C16888) * C31666) *
                         C47770 * C47668) *
                        C47629 +
                    (((C17673 + C17672) * C31666 +
                      (C15973 * C1191 + C18396 + C18396 + C15969 * C1209 +
                       C15975 * C1192 + C18397 + C18397 + C47839 * C1210) *
                          C47872) *
                         C47770 * C47668 -
                     ((C17672 + C17673) * C47872 + (C16211 + C16210) * C31666) *
                         C47770 * C47821) *
                        C2742) *
                       C47546)) /
                 (p * q * std::sqrt(p + q));
    d2ee[152] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                      C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                         C31666 +
                     (C32013 + C32014) * C47872) *
                        C47770 * C47581 * C47898 -
                    ((C16886 + C16887) * C47872 + (C16205 + C16204) * C31666) *
                        C47770 * C47581 * C47894 +
                    ((C16207 + C16206) * C31666 + (C17322 + C17323) * C47872) *
                        C47770 * C47581 * C47884 -
                    ((C17814 + C17815) * C47872 + (C17141 + C17140) * C31666) *
                        C47770 * C47581 * C47862) *
                       C2482 +
                   (((C16208 + C16209) * C31666 + (C16888 + C16889) * C47872) *
                        C47770 * C47581 * C47894 -
                    ((C32018 + C32017) * C47872 +
                     (C15975 * C121 + C15984 + C15984 + C47839 * C135 +
                      C15973 * C120 + C15985 + C15985 + C15969 * C134) *
                         C31666) *
                        C47770 * C47581 * C47898 -
                    ((C17672 + C17673) * C47872 + (C16211 + C16210) * C31666) *
                        C47770 * C47581 * C47884 +
                    ((C17467 + C17466) * C31666 +
                     (C15973 * C1581 + C17666 + C17666 + C15969 * C1587 +
                      C15975 * C1582 + C17667 + C17667 + C47839 * C1588) *
                         C47872) *
                        C47770 * C47581 * C47862) *
                       C47546)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                      C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                         C31666 +
                     (C32013 + C32014) * C47872) *
                        C47770 * C47581 * C2374 -
                    ((C16886 + C16887) * C47872 + (C16205 + C16204) * C31666) *
                        C47770 * C47581 * C47626) *
                       C47897 +
                   (((C16208 + C16209) * C31666 + (C16888 + C16889) * C47872) *
                        C47770 * C47581 * C47626 -
                    ((C32018 + C32017) * C47872 +
                     (C15975 * C121 + C15984 + C15984 + C47839 * C135 +
                      C15973 * C120 + C15985 + C15985 + C15969 * C134) *
                         C31666) *
                        C47770 * C47581 * C2374) *
                       C47890 +
                   (((C15973 * C121 + C15986 + C15986 + C15969 * C135 +
                      C15975 * C122 + C15987 + C15987 + C47839 * C136) *
                         C31666 +
                     (C32021 + C32022) * C47872) *
                        C47770 * C47581 * C2374 -
                    ((C16890 + C16891) * C47872 + (C16213 + C16212) * C31666) *
                        C47770 * C47581 * C47626) *
                       C47877 +
                   (((C16526 + C16527) * C31666 +
                     (C15973 * C845 + C16660 + C16660 + C15969 * C855 +
                      C15975 * C846 + C16661 + C16661 + C47839 * C856) *
                         C47872) *
                        C47770 * C47581 * C47626 -
                    ((C32296 + C32295) * C47872 +
                     (C15975 * C123 + C15992 + C15992 + C47839 * C137 +
                      C15973 * C122 + C15993 + C15993 + C15969 * C136) *
                         C31666) *
                        C47770 * C47581 * C2374) *
                       C47856)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  (((((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                       C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                          C31666 +
                      (C32013 + C32014) * C47872) *
                         C47770 * C47892 -
                     ((C32015 + C32016) * C47872 + (C32014 + C32013) * C31666) *
                         C47770 * C47881 +
                     ((C32016 + C32015) * C31666 + (C33711 + C33712) * C47872) *
                         C47770 * C47855) *
                        C2374 +
                    (((C16887 + C16886) * C31666 + (C17320 + C17321) * C47872) *
                         C47770 * C47881 -
                     ((C16886 + C16887) * C47872 + (C16205 + C16204) * C31666) *
                         C47770 * C47892 -
                     ((C18678 + C18679) * C47872 + (C17321 + C17320) * C31666) *
                         C47770 * C47855) *
                        C47626) *
                       C2482 +
                   ((((C32017 + C32018) * C31666 + (C32019 + C32020) * C47872) *
                         C47770 * C47881 -
                     ((C32018 + C32017) * C47872 +
                      (C15975 * C121 + C15984 + C15984 + C47839 * C135 +
                       C15973 * C120 + C15985 + C15985 + C15969 * C134) *
                          C31666) *
                         C47770 * C47892 -
                     ((C34049 + C34050) * C47872 + (C32020 + C32019) * C31666) *
                         C47770 * C47855) *
                        C2374 +
                    (((C16208 + C16209) * C31666 + (C16888 + C16889) * C47872) *
                         C47770 * C47892 -
                     ((C18402 + C18403) * C47872 + (C16889 + C16888) * C31666) *
                         C47770 * C47881 +
                     ((C18403 + C18402) * C31666 +
                      (C15973 * C2265 + C18536 + C18536 + C15969 * C2271 +
                       C15975 * C2266 + C18537 + C18537 + C47839 * C2272) *
                          C47872) *
                         C47770 * C47855) *
                        C47626) *
                       C47546)) /
                     (p * q * std::sqrt(p + q));
    d2ee[153] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                       C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                          C31666 +
                      (C32013 + C32014) * C47872) *
                         C47770 * C47821 -
                     ((C32015 + C32016) * C47872 + (C32014 + C32013) * C31666) *
                         C47770 * C47668) *
                        C2374 +
                    (((C16887 + C16886) * C31666 + (C17320 + C17321) * C47872) *
                         C47770 * C47668 -
                     ((C16886 + C16887) * C47872 + (C16205 + C16204) * C31666) *
                         C47770 * C47821) *
                        C47626) *
                       C47540 +
                   ((((C32017 + C32018) * C31666 + (C32019 + C32020) * C47872) *
                         C47770 * C47668 -
                     ((C32018 + C32017) * C47872 +
                      (C15975 * C121 + C15984 + C15984 + C47839 * C135 +
                       C15973 * C120 + C15985 + C15985 + C15969 * C134) *
                          C31666) *
                         C47770 * C47821) *
                        C2374 +
                    (((C16208 + C16209) * C31666 + (C16888 + C16889) * C47872) *
                         C47770 * C47821 -
                     ((C18402 + C18403) * C47872 + (C16889 + C16888) * C31666) *
                         C47770 * C47668) *
                        C47626) *
                       C47549 +
                   ((((C15973 * C121 + C15986 + C15986 + C15969 * C135 +
                       C15975 * C122 + C15987 + C15987 + C47839 * C136) *
                          C31666 +
                      (C32021 + C32022) * C47872) *
                         C47770 * C47821 -
                     ((C32023 + C32024) * C47872 + (C32022 + C32021) * C31666) *
                         C47770 * C47668) *
                        C2374 +
                    (((C16891 + C16890) * C31666 +
                      (C15973 * C1184 + C16384 + C16384 + C15969 * C1202 +
                       C15975 * C2052 + C16385 + C16385 + C47839 * C2054) *
                          C47872) *
                         C47770 * C47668 -
                     ((C16890 + C16891) * C47872 + (C16213 + C16212) * C31666) *
                         C47770 * C47821) *
                        C47626) *
                       C2745)) /
                 (p * q * std::sqrt(p + q));
    d2ee[154] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                      C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                         C31666 +
                     (C32013 + C32014) * C47872) *
                        C47770 * C47581 * C2374 -
                    ((C16886 + C16887) * C47872 + (C16205 + C16204) * C31666) *
                        C47770 * C47581 * C47626) *
                       C47897 +
                   (((C16208 + C16209) * C31666 + (C16888 + C16889) * C47872) *
                        C47770 * C47581 * C47626 -
                    ((C32018 + C32017) * C47872 +
                     (C15975 * C121 + C15984 + C15984 + C47839 * C135 +
                      C15973 * C120 + C15985 + C15985 + C15969 * C134) *
                         C31666) *
                        C47770 * C47581 * C2374) *
                       C47890 +
                   (((C15973 * C121 + C15986 + C15986 + C15969 * C135 +
                      C15975 * C122 + C15987 + C15987 + C47839 * C136) *
                         C31666 +
                     (C32021 + C32022) * C47872) *
                        C47770 * C47581 * C2374 -
                    ((C16890 + C16891) * C47872 + (C16213 + C16212) * C31666) *
                        C47770 * C47581 * C47626) *
                       C47877 +
                   (((C16526 + C16527) * C31666 +
                     (C15973 * C845 + C16660 + C16660 + C15969 * C855 +
                      C15975 * C846 + C16661 + C16661 + C47839 * C856) *
                         C47872) *
                        C47770 * C47581 * C47626 -
                    ((C32296 + C32295) * C47872 +
                     (C15975 * C123 + C15992 + C15992 + C47839 * C137 +
                      C15973 * C122 + C15993 + C15993 + C15969 * C136) *
                         C31666) *
                        C47770 * C47581 * C2374) *
                       C47856)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                      C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                         C31666 +
                     (C32013 + C32014) * C47872) *
                        C47770 * C47581 * C47898 -
                    ((C16886 + C16887) * C47872 + (C16205 + C16204) * C31666) *
                        C47770 * C47581 * C47894 +
                    ((C16207 + C16206) * C31666 + (C17322 + C17323) * C47872) *
                        C47770 * C47581 * C47884 -
                    ((C17814 + C17815) * C47872 + (C17141 + C17140) * C31666) *
                        C47770 * C47581 * C47862) *
                       C2482 +
                   (((C16208 + C16209) * C31666 + (C16888 + C16889) * C47872) *
                        C47770 * C47581 * C47894 -
                    ((C32018 + C32017) * C47872 +
                     (C15975 * C121 + C15984 + C15984 + C47839 * C135 +
                      C15973 * C120 + C15985 + C15985 + C15969 * C134) *
                         C31666) *
                        C47770 * C47581 * C47898 -
                    ((C17672 + C17673) * C47872 + (C16211 + C16210) * C31666) *
                        C47770 * C47581 * C47884 +
                    ((C17467 + C17466) * C31666 +
                     (C15973 * C1581 + C17666 + C17666 + C15969 * C1587 +
                      C15975 * C1582 + C17667 + C17667 + C47839 * C1588) *
                         C47872) *
                        C47770 * C47581 * C47862) *
                       C47546)) /
                     (p * q * std::sqrt(p + q));
    d2ee[155] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                       C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                          C31666 +
                      (C32013 + C32014) * C47872) *
                         C47770 * C3136 -
                     ((C32015 + C32016) * C47872 + (C32014 + C32013) * C31666) *
                         C47770 * C47668) *
                        C47622 +
                    (((C16887 + C16886) * C31666 + (C17320 + C17321) * C47872) *
                         C47770 * C47668 -
                     ((C16886 + C16887) * C47872 + (C16205 + C16204) * C31666) *
                         C47770 * C3136) *
                        C47629 +
                    (((C16207 + C16206) * C31666 + (C17322 + C17323) * C47872) *
                         C47770 * C3136 -
                     ((C17324 + C17325) * C47872 + (C17323 + C17322) * C31666) *
                         C47770 * C47668) *
                        C2742) *
                       C47806 +
                   ((((C32017 + C32018) * C31666 + (C32019 + C32020) * C47872) *
                         C47770 * C47668 -
                     ((C32018 + C32017) * C47872 +
                      (C15975 * C121 + C15984 + C15984 + C47839 * C135 +
                       C15973 * C120 + C15985 + C15985 + C15969 * C134) *
                          C31666) *
                         C47770 * C3136) *
                        C47622 +
                    (((C16208 + C16209) * C31666 + (C16888 + C16889) * C47872) *
                         C47770 * C3136 -
                     ((C18402 + C18403) * C47872 + (C16889 + C16888) * C31666) *
                         C47770 * C47668) *
                        C47629 +
                    (((C17673 + C17672) * C31666 +
                      (C15973 * C1191 + C18396 + C18396 + C15969 * C1209 +
                       C15975 * C1192 + C18397 + C18397 + C47839 * C1210) *
                          C47872) *
                         C47770 * C47668 -
                     ((C17672 + C17673) * C47872 + (C16211 + C16210) * C31666) *
                         C47770 * C3136) *
                        C2742) *
                       C47546)) /
                 (p * q * std::sqrt(p + q));
    d2ee[156] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                      C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                         C31666 +
                     (C32013 + C32014) * C47872) *
                        C47770 * C47664 -
                    ((C32015 + C32016) * C47872 + (C32014 + C32013) * C31666) *
                        C47770 * C47671 +
                    ((C32016 + C32015) * C31666 + (C33711 + C33712) * C47872) *
                        C47770 * C3644) *
                       C47622 +
                   (((C16887 + C16886) * C31666 + (C17320 + C17321) * C47872) *
                        C47770 * C47671 -
                    ((C16886 + C16887) * C47872 + (C16205 + C16204) * C31666) *
                        C47770 * C47664 -
                    ((C18678 + C18679) * C47872 + (C17321 + C17320) * C31666) *
                        C47770 * C3644) *
                       C47629 +
                   (((C16207 + C16206) * C31666 + (C17322 + C17323) * C47872) *
                        C47770 * C47664 -
                    ((C17324 + C17325) * C47872 + (C17323 + C17322) * C31666) *
                        C47770 * C47671 +
                    ((C17325 + C17324) * C31666 +
                     (C15973 * C7339 + C18672 + C18672 + C15969 * C7343 +
                      C15975 * C7340 + C18673 + C18673 + C47839 * C7344) *
                         C47872) *
                        C47770 * C3644) *
                       C2742) *
                  C47535) /
                 (p * q * std::sqrt(p + q));
    d2ee[157] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                      C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                         C31666 +
                     (C32013 + C32014) * C47872) *
                        C47770 * C3136 -
                    ((C32015 + C32016) * C47872 + (C32014 + C32013) * C31666) *
                        C47770 * C47668) *
                       C47898 +
                   (((C16887 + C16886) * C31666 + (C17320 + C17321) * C47872) *
                        C47770 * C47668 -
                    ((C16886 + C16887) * C47872 + (C16205 + C16204) * C31666) *
                        C47770 * C3136) *
                       C47894 +
                   (((C16207 + C16206) * C31666 + (C17322 + C17323) * C47872) *
                        C47770 * C3136 -
                    ((C17324 + C17325) * C47872 + (C17323 + C17322) * C31666) *
                        C47770 * C47668) *
                       C47884 +
                   (((C17815 + C17814) * C31666 +
                     (C15973 * C5943 + C17306 + C17306 + C15969 * C5947 +
                      C15975 * C5944 + C17307 + C17307 + C47839 * C5948) *
                         C47872) *
                        C47770 * C47668 -
                    ((C17814 + C17815) * C47872 + (C17141 + C17140) * C31666) *
                        C47770 * C3136) *
                       C47862) *
                  C47535) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                       C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                          C31666 +
                      (C32013 + C32014) * C47872) *
                         C47770 * C3136 -
                     ((C32015 + C32016) * C47872 + (C32014 + C32013) * C31666) *
                         C47770 * C47668) *
                        C2374 +
                    (((C16887 + C16886) * C31666 + (C17320 + C17321) * C47872) *
                         C47770 * C47668 -
                     ((C16886 + C16887) * C47872 + (C16205 + C16204) * C31666) *
                         C47770 * C3136) *
                        C47626) *
                       C47888 +
                   ((((C32017 + C32018) * C31666 + (C32019 + C32020) * C47872) *
                         C47770 * C47668 -
                     ((C32018 + C32017) * C47872 +
                      (C15975 * C121 + C15984 + C15984 + C47839 * C135 +
                       C15973 * C120 + C15985 + C15985 + C15969 * C134) *
                          C31666) *
                         C47770 * C3136) *
                        C2374 +
                    (((C16208 + C16209) * C31666 + (C16888 + C16889) * C47872) *
                         C47770 * C3136 -
                     ((C18402 + C18403) * C47872 + (C16889 + C16888) * C31666) *
                         C47770 * C47668) *
                        C47626) *
                       C47875 +
                   ((((C15973 * C121 + C15986 + C15986 + C15969 * C135 +
                       C15975 * C122 + C15987 + C15987 + C47839 * C136) *
                          C31666 +
                      (C32021 + C32022) * C47872) *
                         C47770 * C3136 -
                     ((C32023 + C32024) * C47872 + (C32022 + C32021) * C31666) *
                         C47770 * C47668) *
                        C2374 +
                    (((C16891 + C16890) * C31666 +
                      (C15973 * C1184 + C16384 + C16384 + C15969 * C1202 +
                       C15975 * C2052 + C16385 + C16385 + C47839 * C2054) *
                          C47872) *
                         C47770 * C47668 -
                     ((C16890 + C16891) * C47872 + (C16213 + C16212) * C31666) *
                         C47770 * C3136) *
                        C47626) *
                       C47846)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                      C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                         C31666 +
                     (C32013 + C32014) * C47872) *
                        C47770 * C47899 -
                    ((C32015 + C32016) * C47872 + (C32014 + C32013) * C31666) *
                        C47770 * C47896 +
                    ((C32016 + C32015) * C31666 + (C33711 + C33712) * C47872) *
                        C47770 * C47887 -
                    ((C33713 + C33714) * C47872 + (C33712 + C33711) * C31666) *
                        C47770 * C47868) *
                       C2374 +
                   (((C16887 + C16886) * C31666 + (C17320 + C17321) * C47872) *
                        C47770 * C47896 -
                    ((C16886 + C16887) * C47872 + (C16205 + C16204) * C31666) *
                        C47770 * C47899 -
                    ((C18678 + C18679) * C47872 + (C17321 + C17320) * C31666) *
                        C47770 * C47887 +
                    ((C18679 + C18678) * C31666 +
                     (C15973 * C6855 + C18196 + C18196 + C15969 * C6859 +
                      C15975 * C6856 + C18197 + C18197 + C47839 * C6860) *
                         C47872) *
                        C47770 * C47868) *
                       C47626) *
                  C47535) /
                     (p * q * std::sqrt(p + q));
    d2ee[158] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                       C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                          C31666 +
                      (C32013 + C32014) * C47872) *
                         C47770 * C47664 -
                     ((C32015 + C32016) * C47872 + (C32014 + C32013) * C31666) *
                         C47770 * C47671 +
                     ((C32016 + C32015) * C31666 + (C33711 + C33712) * C47872) *
                         C47770 * C3644) *
                        C2374 +
                    (((C16887 + C16886) * C31666 + (C17320 + C17321) * C47872) *
                         C47770 * C47671 -
                     ((C16886 + C16887) * C47872 + (C16205 + C16204) * C31666) *
                         C47770 * C47664 -
                     ((C18678 + C18679) * C47872 + (C17321 + C17320) * C31666) *
                         C47770 * C3644) *
                        C47626) *
                       C47806 +
                   ((((C32017 + C32018) * C31666 + (C32019 + C32020) * C47872) *
                         C47770 * C47671 -
                     ((C32018 + C32017) * C47872 +
                      (C15975 * C121 + C15984 + C15984 + C47839 * C135 +
                       C15973 * C120 + C15985 + C15985 + C15969 * C134) *
                          C31666) *
                         C47770 * C47664 -
                     ((C34049 + C34050) * C47872 + (C32020 + C32019) * C31666) *
                         C47770 * C3644) *
                        C2374 +
                    (((C16208 + C16209) * C31666 + (C16888 + C16889) * C47872) *
                         C47770 * C47664 -
                     ((C18402 + C18403) * C47872 + (C16889 + C16888) * C31666) *
                         C47770 * C47671 +
                     ((C18403 + C18402) * C31666 +
                      (C15973 * C2265 + C18536 + C18536 + C15969 * C2271 +
                       C15975 * C2266 + C18537 + C18537 + C47839 * C2272) *
                          C47872) *
                         C47770 * C3644) *
                        C47626) *
                       C47546)) /
                 (p * q * std::sqrt(p + q));
    d2ee[159] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                       C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                          C31666 +
                      (C32013 + C32014) * C47872) *
                         C47770 * C3136 -
                     ((C32015 + C32016) * C47872 + (C32014 + C32013) * C31666) *
                         C47770 * C47668) *
                        C2374 +
                    (((C16887 + C16886) * C31666 + (C17320 + C17321) * C47872) *
                         C47770 * C47668 -
                     ((C16886 + C16887) * C47872 + (C16205 + C16204) * C31666) *
                         C47770 * C3136) *
                        C47626) *
                       C47888 +
                   ((((C32017 + C32018) * C31666 + (C32019 + C32020) * C47872) *
                         C47770 * C47668 -
                     ((C32018 + C32017) * C47872 +
                      (C15975 * C121 + C15984 + C15984 + C47839 * C135 +
                       C15973 * C120 + C15985 + C15985 + C15969 * C134) *
                          C31666) *
                         C47770 * C3136) *
                        C2374 +
                    (((C16208 + C16209) * C31666 + (C16888 + C16889) * C47872) *
                         C47770 * C3136 -
                     ((C18402 + C18403) * C47872 + (C16889 + C16888) * C31666) *
                         C47770 * C47668) *
                        C47626) *
                       C47875 +
                   ((((C15973 * C121 + C15986 + C15986 + C15969 * C135 +
                       C15975 * C122 + C15987 + C15987 + C47839 * C136) *
                          C31666 +
                      (C32021 + C32022) * C47872) *
                         C47770 * C3136 -
                     ((C32023 + C32024) * C47872 + (C32022 + C32021) * C31666) *
                         C47770 * C47668) *
                        C2374 +
                    (((C16891 + C16890) * C31666 +
                      (C15973 * C1184 + C16384 + C16384 + C15969 * C1202 +
                       C15975 * C2052 + C16385 + C16385 + C47839 * C2054) *
                          C47872) *
                         C47770 * C47668 -
                     ((C16890 + C16891) * C47872 + (C16213 + C16212) * C31666) *
                         C47770 * C3136) *
                        C47626) *
                       C47846)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                      C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                         C31666 +
                     (C32013 + C32014) * C47872) *
                        C47770 * C3136 -
                    ((C32015 + C32016) * C47872 + (C32014 + C32013) * C31666) *
                        C47770 * C47668) *
                       C47898 +
                   (((C16887 + C16886) * C31666 + (C17320 + C17321) * C47872) *
                        C47770 * C47668 -
                    ((C16886 + C16887) * C47872 + (C16205 + C16204) * C31666) *
                        C47770 * C3136) *
                       C47894 +
                   (((C16207 + C16206) * C31666 + (C17322 + C17323) * C47872) *
                        C47770 * C3136 -
                    ((C17324 + C17325) * C47872 + (C17323 + C17322) * C31666) *
                        C47770 * C47668) *
                       C47884 +
                   (((C17815 + C17814) * C31666 +
                     (C15973 * C5943 + C17306 + C17306 + C15969 * C5947 +
                      C15975 * C5944 + C17307 + C17307 + C47839 * C5948) *
                         C47872) *
                        C47770 * C47668 -
                    ((C17814 + C17815) * C47872 + (C17141 + C17140) * C31666) *
                        C47770 * C3136) *
                       C47862) *
                  C47535) /
                     (p * q * std::sqrt(p + q));
    d2ee[160] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                      C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                         C31666 +
                     (C32013 + C32014) * C47872) *
                        C47770 * C47581 * C1318 -
                    ((C16886 + C16887) * C47872 + (C16205 + C16204) * C31666) *
                        C47770 * C47581 * C1319 +
                    ((C16207 + C16206) * C31666 + (C17322 + C17323) * C47872) *
                        C47770 * C47581 * C1320 -
                    ((C17814 + C17815) * C47872 + (C17141 + C17140) * C31666) *
                        C47770 * C47581 * C47862) *
                       C47806 +
                   (((C16208 + C16209) * C31666 + (C16888 + C16889) * C47872) *
                        C47770 * C47581 * C1319 -
                    ((C32018 + C32017) * C47872 +
                     (C15975 * C121 + C15984 + C15984 + C47839 * C135 +
                      C15973 * C120 + C15985 + C15985 + C15969 * C134) *
                         C31666) *
                        C47770 * C47581 * C1318 -
                    ((C17672 + C17673) * C47872 + (C16211 + C16210) * C31666) *
                        C47770 * C47581 * C1320 +
                    ((C17467 + C17466) * C31666 +
                     (C15973 * C1581 + C17666 + C17666 + C15969 * C1587 +
                      C15975 * C1582 + C17667 + C17667 + C47839 * C1588) *
                         C47872) *
                        C47770 * C47581 * C47862) *
                       C47546)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                      C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                         C31666 +
                     (C32013 + C32014) * C47872) *
                        C47770 * C47581 * C47820 -
                    ((C16886 + C16887) * C47872 + (C16205 + C16204) * C31666) *
                        C47770 * C47581 * C47626) *
                       C580 +
                   (((C16208 + C16209) * C31666 + (C16888 + C16889) * C47872) *
                        C47770 * C47581 * C47626 -
                    ((C32018 + C32017) * C47872 +
                     (C15975 * C121 + C15984 + C15984 + C47839 * C135 +
                      C15973 * C120 + C15985 + C15985 + C15969 * C134) *
                         C31666) *
                        C47770 * C47581 * C47820) *
                       C581 +
                   (((C15973 * C121 + C15986 + C15986 + C15969 * C135 +
                      C15975 * C122 + C15987 + C15987 + C47839 * C136) *
                         C31666 +
                     (C32021 + C32022) * C47872) *
                        C47770 * C47581 * C47820 -
                    ((C16890 + C16891) * C47872 + (C16213 + C16212) * C31666) *
                        C47770 * C47581 * C47626) *
                       C582 +
                   (((C16526 + C16527) * C31666 +
                     (C15973 * C845 + C16660 + C16660 + C15969 * C855 +
                      C15975 * C846 + C16661 + C16661 + C47839 * C856) *
                         C47872) *
                        C47770 * C47581 * C47626 -
                    ((C15975 * C440 + C16659 + C16659 + C47839 * C460 +
                      C15973 * C438 + C16658 + C16658 + C15969 * C458) *
                         C47872 +
                     (C15975 * C123 + C15992 + C15992 + C47839 * C137 +
                      C15973 * C122 + C15993 + C15993 + C15969 * C136) *
                         C31666) *
                        C47770 * C47581 * C47820) *
                       C47856)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  (((((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                       C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                          C31666 +
                      (C32013 + C32014) * C47872) *
                         C47770 * C1702 -
                     ((C32015 + C32016) * C47872 + (C32014 + C32013) * C31666) *
                         C47770 * C1703 +
                     ((C32016 + C32015) * C31666 + (C33711 + C33712) * C47872) *
                         C47770 * C47855) *
                        C47820 +
                    (((C16887 + C16886) * C31666 + (C17320 + C17321) * C47872) *
                         C47770 * C1703 -
                     ((C16886 + C16887) * C47872 + (C16205 + C16204) * C31666) *
                         C47770 * C1702 -
                     ((C18678 + C18679) * C47872 + (C17321 + C17320) * C31666) *
                         C47770 * C47855) *
                        C47626) *
                       C47806 +
                   ((((C32017 + C32018) * C31666 + (C32019 + C32020) * C47872) *
                         C47770 * C1703 -
                     ((C32018 + C32017) * C47872 +
                      (C15975 * C121 + C15984 + C15984 + C47839 * C135 +
                       C15973 * C120 + C15985 + C15985 + C15969 * C134) *
                          C31666) *
                         C47770 * C1702 -
                     ((C15975 * C1882 + C18535 + C18535 + C47839 * C1894 +
                       C15973 * C1883 + C18534 + C18534 + C15969 * C1895) *
                          C47872 +
                      (C32020 + C32019) * C31666) *
                         C47770 * C47855) *
                        C47820 +
                    (((C16208 + C16209) * C31666 + (C16888 + C16889) * C47872) *
                         C47770 * C1702 -
                     ((C18402 + C18403) * C47872 + (C16889 + C16888) * C31666) *
                         C47770 * C1703 +
                     ((C18403 + C18402) * C31666 +
                      (C15973 * C2265 + C18536 + C18536 + C15969 * C2271 +
                       C15975 * C2266 + C18537 + C18537 + C47839 * C2272) *
                          C47872) *
                         C47770 * C47855) *
                        C47626) *
                       C47546)) /
                     (p * q * std::sqrt(p + q));
    d2ee[161] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                      C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                         C31666 +
                     (C32013 + C32014) * C47872) *
                        C47770 * C47821 -
                    ((C32015 + C32016) * C47872 + (C32014 + C32013) * C31666) *
                        C47770 * C47668) *
                       C1318 +
                   (((C16887 + C16886) * C31666 + (C17320 + C17321) * C47872) *
                        C47770 * C47668 -
                    ((C16886 + C16887) * C47872 + (C16205 + C16204) * C31666) *
                        C47770 * C47821) *
                       C1319 +
                   (((C16207 + C16206) * C31666 + (C17322 + C17323) * C47872) *
                        C47770 * C47821 -
                    ((C17324 + C17325) * C47872 + (C17323 + C17322) * C31666) *
                        C47770 * C47668) *
                       C1320 +
                   (((C17815 + C17814) * C31666 +
                     (C15973 * C5943 + C17306 + C17306 + C15969 * C5947 +
                      C15975 * C5944 + C17307 + C17307 + C47839 * C5948) *
                         C47872) *
                        C47770 * C47668 -
                    ((C17814 + C17815) * C47872 + (C17141 + C17140) * C31666) *
                        C47770 * C47821) *
                       C47862) *
                  C47535) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                       C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                          C31666 +
                      (C32013 + C32014) * C47872) *
                         C47770 * C47821 -
                     ((C32015 + C32016) * C47872 + (C32014 + C32013) * C31666) *
                         C47770 * C47668) *
                        C47820 +
                    (((C16887 + C16886) * C31666 + (C17320 + C17321) * C47872) *
                         C47770 * C47668 -
                     ((C16886 + C16887) * C47872 + (C16205 + C16204) * C31666) *
                         C47770 * C47821) *
                        C47626) *
                       C268 +
                   ((((C32017 + C32018) * C31666 + (C32019 + C32020) * C47872) *
                         C47770 * C47668 -
                     ((C32018 + C32017) * C47872 +
                      (C15975 * C121 + C15984 + C15984 + C47839 * C135 +
                       C15973 * C120 + C15985 + C15985 + C15969 * C134) *
                          C31666) *
                         C47770 * C47821) *
                        C47820 +
                    (((C16208 + C16209) * C31666 + (C16888 + C16889) * C47872) *
                         C47770 * C47821 -
                     ((C18402 + C18403) * C47872 + (C16889 + C16888) * C31666) *
                         C47770 * C47668) *
                        C47626) *
                       C269 +
                   ((((C15973 * C121 + C15986 + C15986 + C15969 * C135 +
                       C15975 * C122 + C15987 + C15987 + C47839 * C136) *
                          C31666 +
                      (C32021 + C32022) * C47872) *
                         C47770 * C47821 -
                     ((C32023 + C32024) * C47872 + (C32022 + C32021) * C31666) *
                         C47770 * C47668) *
                        C47820 +
                    (((C16891 + C16890) * C31666 +
                      (C15973 * C1184 + C16384 + C16384 + C15969 * C1202 +
                       C15975 * C2052 + C16385 + C16385 + C47839 * C2054) *
                          C47872) *
                         C47770 * C47668 -
                     ((C16890 + C16891) * C47872 + (C16213 + C16212) * C31666) *
                         C47770 * C47821) *
                        C47626) *
                       C47846)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                      C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                         C31666 +
                     (C32013 + C32014) * C47872) *
                        C47770 * C2156 -
                    ((C32015 + C32016) * C47872 + (C32014 + C32013) * C31666) *
                        C47770 * C2157 +
                    ((C32016 + C32015) * C31666 + (C33711 + C33712) * C47872) *
                        C47770 * C2158 -
                    ((C33713 + C33714) * C47872 + (C33712 + C33711) * C31666) *
                        C47770 * C47868) *
                       C47820 +
                   (((C16887 + C16886) * C31666 + (C17320 + C17321) * C47872) *
                        C47770 * C2157 -
                    ((C16886 + C16887) * C47872 + (C16205 + C16204) * C31666) *
                        C47770 * C2156 -
                    ((C18678 + C18679) * C47872 + (C17321 + C17320) * C31666) *
                        C47770 * C2158 +
                    ((C18679 + C18678) * C31666 +
                     (C15973 * C6855 + C18196 + C18196 + C15969 * C6859 +
                      C15975 * C6856 + C18197 + C18197 + C47839 * C6860) *
                         C47872) *
                        C47770 * C47868) *
                       C47626) *
                  C47535) /
                     (p * q * std::sqrt(p + q));
    d2ee[162] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                   C31666 +
               (C15973 * C434 + C16365 + C16365 + C15969 * C454 +
                C15975 * C433 + C16364 + C16364 + C47839 * C453) *
                   C47872) *
                  C47770 * C47581 * C47563 * C108 -
              ((C15975 * C432 + C16371 + C16371 + C47839 * C452 +
                C15973 * C433 + C16370 + C16370 + C15969 * C453) *
                   C47872 +
               (C15975 * C121 + C15984 + C15984 + C47839 * C135 +
                C15973 * C120 + C15985 + C15985 + C15969 * C134) *
                   C31666) *
                  C47770 * C47581 * C47563 * C109 +
              ((C15973 * C121 + C15986 + C15986 + C15969 * C135 +
                C15975 * C122 + C15987 + C15987 + C47839 * C136) *
                   C31666 +
               (C15973 * C432 + C16381 + C16381 + C15969 * C452 +
                C15975 * C438 + C16380 + C16380 + C47839 * C458) *
                   C47872) *
                  C47770 * C47581 * C47563 * C110 -
              ((C15975 * C440 + C16659 + C16659 + C47839 * C460 +
                C15973 * C438 + C16658 + C16658 + C15969 * C458) *
                   C47872 +
               (C15975 * C123 + C15992 + C15992 + C47839 * C137 +
                C15973 * C122 + C15993 + C15993 + C15969 * C136) *
                   C31666) *
                  C47770 * C47581 * C47563 * C111 +
              ((C15973 * C123 + C15994 + C15994 + C15969 * C137 +
                C15975 * C124 + C15995 + C15995 + C47839 * C138) *
                   C31666 +
               (C15973 * C440 + C31669 + C31669 + C15969 * C460 +
                C15975 * C690 + C31670 + C31670 + C47839 * C692) *
                   C47872) *
                  C47770 * C47581 * C47563 * C112) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                 C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                    C31666 +
                (C15973 * C434 + C16365 + C16365 + C15969 * C454 +
                 C15975 * C433 + C16364 + C16364 + C47839 * C453) *
                    C47872) *
                   C47770 * C47581 * C47891 -
               ((C16886 + C16887) * C47872 + (C16205 + C16204) * C31666) *
                   C47770 * C47581 * C47879 +
               ((C16207 + C16206) * C31666 + (C17322 + C17323) * C47872) *
                   C47770 * C47581 * C47852) *
                  C268 +
              (((C16208 + C16209) * C31666 + (C16888 + C16889) * C47872) *
                   C47770 * C47581 * C47879 -
               ((C15975 * C432 + C16371 + C16371 + C47839 * C452 +
                 C15973 * C433 + C16370 + C16370 + C15969 * C453) *
                    C47872 +
                (C15975 * C121 + C15984 + C15984 + C47839 * C135 +
                 C15973 * C120 + C15985 + C15985 + C15969 * C134) *
                    C31666) *
                   C47770 * C47581 * C47891 -
               ((C17672 + C17673) * C47872 + (C16211 + C16210) * C31666) *
                   C47770 * C47581 * C47852) *
                  C269 +
              (((C15973 * C121 + C15986 + C15986 + C15969 * C135 +
                 C15975 * C122 + C15987 + C15987 + C47839 * C136) *
                    C31666 +
                (C15973 * C432 + C16381 + C16381 + C15969 * C452 +
                 C15975 * C438 + C16380 + C16380 + C47839 * C458) *
                    C47872) *
                   C47770 * C47581 * C47891 -
               ((C16890 + C16891) * C47872 + (C16213 + C16212) * C31666) *
                   C47770 * C47581 * C47879 +
               ((C16215 + C16214) * C31666 +
                (C15973 * C1187 + C16872 + C16872 + C15969 * C1205 +
                 C15975 * C1476 + C16873 + C16873 + C47839 * C1478) *
                    C47872) *
                   C47770 * C47581 * C47852) *
                  C47846)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C15973 * C119 + C15978 + C15978 + C15969 * C133 + C15975 * C120 +
             C15979 + C15979 + C47839 * C134) *
                C31666 +
            (C32013 + C32014) * C47872) *
               C47770 * C47892 -
           ((C32015 + C32016) * C47872 + (C32014 + C32013) * C31666) * C47770 *
               C47881 +
           ((C32016 + C32015) * C31666 +
            (C15973 * C1884 + C18193 + C18193 + C15969 * C1896 +
             C15975 * C1883 + C18192 + C18192 + C47839 * C1895) *
                C47872) *
               C47770 * C47855) *
              C47563 * C268 +
          (((C32017 + C32018) * C31666 + (C32019 + C32020) * C47872) * C47770 *
               C47881 -
           ((C32018 + C32017) * C47872 +
            (C15975 * C121 + C15984 + C15984 + C47839 * C135 + C15973 * C120 +
             C15985 + C15985 + C15969 * C134) *
                C31666) *
               C47770 * C47892 -
           ((C15975 * C1882 + C18535 + C18535 + C47839 * C1894 +
             C15973 * C1883 + C18534 + C18534 + C15969 * C1895) *
                C47872 +
            (C32020 + C32019) * C31666) *
               C47770 * C47855) *
              C47563 * C269 +
          (((C15973 * C121 + C15986 + C15986 + C15969 * C135 + C15975 * C122 +
             C15987 + C15987 + C47839 * C136) *
                C31666 +
            (C32021 + C32022) * C47872) *
               C47770 * C47892 -
           ((C32023 + C32024) * C47872 + (C32022 + C32021) * C31666) * C47770 *
               C47881 +
           ((C32024 + C32023) * C31666 +
            (C15973 * C1882 + C31987 + C31987 + C15969 * C1894 +
             C15975 * C2160 + C31988 + C31988 + C47839 * C2162) *
                C47872) *
               C47770 * C47855) *
              C47563 * C47846)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C15973 * C119 + C15978 + C15978 + C15969 * C133 + C15975 * C120 +
             C15979 + C15979 + C47839 * C134) *
                C31666 +
            (C32013 + C32014) * C47872) *
               C47770 * C47581 * C976 -
           ((C16886 + C16887) * C47872 + (C16205 + C16204) * C31666) * C47770 *
               C47581 * C977 +
           ((C16207 + C16206) * C31666 + (C17322 + C17323) * C47872) * C47770 *
               C47581 * C47852) *
              C47888 +
          (((C16208 + C16209) * C31666 + (C16888 + C16889) * C47872) * C47770 *
               C47581 * C977 -
           ((C32018 + C32017) * C47872 +
            (C15975 * C121 + C15984 + C15984 + C47839 * C135 + C15973 * C120 +
             C15985 + C15985 + C15969 * C134) *
                C31666) *
               C47770 * C47581 * C976 -
           ((C17672 + C17673) * C47872 + (C16211 + C16210) * C31666) * C47770 *
               C47581 * C47852) *
              C47875 +
          (((C15973 * C121 + C15986 + C15986 + C15969 * C135 + C15975 * C122 +
             C15987 + C15987 + C47839 * C136) *
                C31666 +
            (C32021 + C32022) * C47872) *
               C47770 * C47581 * C976 -
           ((C16890 + C16891) * C47872 + (C16213 + C16212) * C31666) * C47770 *
               C47581 * C977 +
           ((C16215 + C16214) * C31666 +
            (C15973 * C1187 + C16872 + C16872 + C15969 * C1205 +
             C15975 * C1476 + C16873 + C16873 + C47839 * C1478) *
                C47872) *
               C47770 * C47581 * C47852) *
              C47846)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C15973 * C119 + C15978 + C15978 + C15969 * C133 + C15975 * C120 +
            C15979 + C15979 + C47839 * C134) *
               C31666 +
           (C32013 + C32014) * C47872) *
              C47770 * C47581 * C1044 -
          ((C16886 + C16887) * C47872 + (C16205 + C16204) * C31666) * C47770 *
              C47581 * C1045 +
          ((C16207 + C16206) * C31666 + (C17322 + C17323) * C47872) * C47770 *
              C47581 * C1046 -
          ((C17814 + C17815) * C47872 + (C17141 + C17140) * C31666) * C47770 *
              C47581 * C1047 +
          ((C17143 + C17142) * C31666 +
           (C15973 * C6463 + C17808 + C17808 + C15969 * C6467 + C15975 * C6464 +
            C17809 + C17809 + C47839 * C6468) *
               C47872) *
              C47770 * C47581 * C1048) *
         C47535) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C15973 * C119 + C15978 + C15978 + C15969 * C133 + C15975 * C120 +
             C15979 + C15979 + C47839 * C134) *
                C31666 +
            (C32013 + C32014) * C47872) *
               C47770 * C47892 -
           ((C32015 + C32016) * C47872 + (C32014 + C32013) * C31666) * C47770 *
               C47881 +
           ((C32016 + C32015) * C31666 +
            (C15973 * C1884 + C18193 + C18193 + C15969 * C1896 +
             C15975 * C1883 + C18192 + C18192 + C47839 * C1895) *
                C47872) *
               C47770 * C47855) *
              C976 +
          (((C16887 + C16886) * C31666 + (C17320 + C17321) * C47872) * C47770 *
               C47881 -
           ((C16886 + C16887) * C47872 + (C16205 + C16204) * C31666) * C47770 *
               C47892 -
           ((C18678 + C18679) * C47872 + (C17321 + C17320) * C31666) * C47770 *
               C47855) *
              C977 +
          (((C16207 + C16206) * C31666 + (C17322 + C17323) * C47872) * C47770 *
               C47892 -
           ((C17324 + C17325) * C47872 + (C17323 + C17322) * C31666) * C47770 *
               C47881 +
           ((C17325 + C17324) * C31666 +
            (C15973 * C7339 + C18672 + C18672 + C15969 * C7343 +
             C15975 * C7340 + C18673 + C18673 + C47839 * C7344) *
                C47872) *
               C47770 * C47855) *
              C47852) *
         C47535) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C15973 * C119 + C15978 + C15978 + C15969 * C133 + C15975 * C120 +
             C15979 + C15979 + C47839 * C134) *
                C31666 +
            (C32013 + C32014) * C47872) *
               C47770 * C1702 -
           ((C32015 + C32016) * C47872 + (C32014 + C32013) * C31666) * C47770 *
               C1703 +
           ((C32016 + C32015) * C31666 +
            (C15973 * C1884 + C18193 + C18193 + C15969 * C1896 +
             C15975 * C1883 + C18192 + C18192 + C47839 * C1895) *
                C47872) *
               C47770 * C47855) *
              C47563 * C47888 +
          (((C32017 + C32018) * C31666 + (C32019 + C32020) * C47872) * C47770 *
               C1703 -
           ((C32018 + C32017) * C47872 +
            (C15975 * C121 + C15984 + C15984 + C47839 * C135 + C15973 * C120 +
             C15985 + C15985 + C15969 * C134) *
                C31666) *
               C47770 * C1702 -
           ((C15975 * C1882 + C18535 + C18535 + C47839 * C1894 +
             C15973 * C1883 + C18534 + C18534 + C15969 * C1895) *
                C47872 +
            (C32020 + C32019) * C31666) *
               C47770 * C47855) *
              C47563 * C47875 +
          (((C15973 * C121 + C15986 + C15986 + C15969 * C135 + C15975 * C122 +
             C15987 + C15987 + C47839 * C136) *
                C31666 +
            (C32021 + C32022) * C47872) *
               C47770 * C1702 -
           ((C32023 + C32024) * C47872 + (C32022 + C32021) * C31666) * C47770 *
               C1703 +
           ((C32024 + C32023) * C31666 +
            (C15973 * C1882 + C31987 + C31987 + C15969 * C1894 +
             C15975 * C2160 + C31988 + C31988 + C47839 * C2162) *
                C47872) *
               C47770 * C47855) *
              C47563 * C47846)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C15973 * C119 + C15978 + C15978 + C15969 * C133 + C15975 * C120 +
             C15979 + C15979 + C47839 * C134) *
                C31666 +
            (C32013 + C32014) * C47872) *
               C47770 * C1702 -
           ((C32015 + C32016) * C47872 + (C32014 + C32013) * C31666) * C47770 *
               C1703 +
           ((C32016 + C32015) * C31666 +
            (C15973 * C1884 + C18193 + C18193 + C15969 * C1896 +
             C15975 * C1883 + C18192 + C18192 + C47839 * C1895) *
                C47872) *
               C47770 * C47855) *
              C47891 +
          (((C16887 + C16886) * C31666 + (C17320 + C17321) * C47872) * C47770 *
               C1703 -
           ((C16886 + C16887) * C47872 + (C16205 + C16204) * C31666) * C47770 *
               C1702 -
           ((C18678 + C18679) * C47872 + (C17321 + C17320) * C31666) * C47770 *
               C47855) *
              C47879 +
          (((C16207 + C16206) * C31666 + (C17322 + C17323) * C47872) * C47770 *
               C1702 -
           ((C17324 + C17325) * C47872 + (C17323 + C17322) * C31666) * C47770 *
               C1703 +
           ((C17325 + C17324) * C31666 +
            (C15973 * C7339 + C18672 + C18672 + C15969 * C7343 +
             C15975 * C7340 + C18673 + C18673 + C47839 * C7344) *
                C47872) *
               C47770 * C47855) *
              C47852) *
         C47535) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C15973 * C119 + C15978 + C15978 + C15969 * C133 + C15975 * C120 +
            C15979 + C15979 + C47839 * C134) *
               C31666 +
           (C32013 + C32014) * C47872) *
              C47770 * C1877 -
          ((C32015 + C32016) * C47872 + (C32014 + C32013) * C31666) * C47770 *
              C1878 +
          ((C32016 + C32015) * C31666 + (C33711 + C33712) * C47872) * C47770 *
              C1879 -
          ((C33713 + C33714) * C47872 + (C33712 + C33711) * C31666) * C47770 *
              C1880 +
          ((C33714 + C33713) * C31666 +
           (C15973 * C12429 + C33701 + C33701 + C15969 * C12433 +
            C15975 * C12430 + C33702 + C33702 + C47839 * C12434) *
               C47872) *
              C47770 * C1881) *
         C47563 * C47535) /
            (p * q * std::sqrt(p + q));
    d2ee[163] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                       C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                          C31666 +
                      (C32013 + C32014) * C47872) *
                         C47770 * C47821 -
                     ((C32015 + C32016) * C47872 + (C32014 + C32013) * C31666) *
                         C47770 * C47668) *
                        C976 +
                    (((C16887 + C16886) * C31666 + (C17320 + C17321) * C47872) *
                         C47770 * C47668 -
                     ((C16886 + C16887) * C47872 + (C16205 + C16204) * C31666) *
                         C47770 * C47821) *
                        C977 +
                    (((C16207 + C16206) * C31666 + (C17322 + C17323) * C47872) *
                         C47770 * C47821 -
                     ((C17324 + C17325) * C47872 + (C17323 + C17322) * C31666) *
                         C47770 * C47668) *
                        C47852) *
                       C47806 +
                   ((((C32017 + C32018) * C31666 + (C32019 + C32020) * C47872) *
                         C47770 * C47668 -
                     ((C32018 + C32017) * C47872 +
                      (C15975 * C121 + C15984 + C15984 + C47839 * C135 +
                       C15973 * C120 + C15985 + C15985 + C15969 * C134) *
                          C31666) *
                         C47770 * C47821) *
                        C976 +
                    (((C16208 + C16209) * C31666 + (C16888 + C16889) * C47872) *
                         C47770 * C47821 -
                     ((C18402 + C18403) * C47872 + (C16889 + C16888) * C31666) *
                         C47770 * C47668) *
                        C977 +
                    (((C17673 + C17672) * C31666 +
                      (C15973 * C1191 + C18396 + C18396 + C15969 * C1209 +
                       C15975 * C1192 + C18397 + C18397 + C47839 * C1210) *
                          C47872) *
                         C47770 * C47668 -
                     ((C17672 + C17673) * C47872 + (C16211 + C16210) * C31666) *
                         C47770 * C47821) *
                        C47852) *
                       C47546)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                      C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                         C31666 +
                     (C32013 + C32014) * C47872) *
                        C47770 * C47821 -
                    ((C32015 + C32016) * C47872 + (C32014 + C32013) * C31666) *
                        C47770 * C47668) *
                       C47563 * C580 +
                   (((C32017 + C32018) * C31666 + (C32019 + C32020) * C47872) *
                        C47770 * C47668 -
                    ((C32018 + C32017) * C47872 +
                     (C15975 * C121 + C15984 + C15984 + C47839 * C135 +
                      C15973 * C120 + C15985 + C15985 + C15969 * C134) *
                         C31666) *
                        C47770 * C47821) *
                       C47563 * C581 +
                   (((C15973 * C121 + C15986 + C15986 + C15969 * C135 +
                      C15975 * C122 + C15987 + C15987 + C47839 * C136) *
                         C31666 +
                     (C32021 + C32022) * C47872) *
                        C47770 * C47821 -
                    ((C32023 + C32024) * C47872 + (C32022 + C32021) * C31666) *
                        C47770 * C47668) *
                       C47563 * C582 +
                   (((C32295 + C32296) * C31666 +
                     (C15973 * C439 + C32289 + C32289 + C15969 * C459 +
                      C15975 * C441 + C32290 + C32290 + C47839 * C461) *
                         C47872) *
                        C47770 * C47668 -
                    ((C32296 + C32295) * C47872 +
                     (C15975 * C123 + C15992 + C15992 + C47839 * C137 +
                      C15973 * C122 + C15993 + C15993 + C15969 * C136) *
                         C31666) *
                        C47770 * C47821) *
                       C47563 * C47856)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                      C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                         C31666 +
                     (C32013 + C32014) * C47872) *
                        C47770 * C2156 -
                    ((C32015 + C32016) * C47872 + (C32014 + C32013) * C31666) *
                        C47770 * C2157 +
                    ((C32016 + C32015) * C31666 + (C33711 + C33712) * C47872) *
                        C47770 * C2158 -
                    ((C33713 + C33714) * C47872 + (C33712 + C33711) * C31666) *
                        C47770 * C47868) *
                       C47563 * C47806 +
                   (((C32017 + C32018) * C31666 + (C32019 + C32020) * C47872) *
                        C47770 * C2157 -
                    ((C32018 + C32017) * C47872 +
                     (C15975 * C121 + C15984 + C15984 + C47839 * C135 +
                      C15973 * C120 + C15985 + C15985 + C15969 * C134) *
                         C31666) *
                        C47770 * C2156 -
                    ((C34049 + C34050) * C47872 + (C32020 + C32019) * C31666) *
                        C47770 * C2158 +
                    ((C34050 + C34049) * C31666 +
                     (C15973 * C1886 + C34043 + C34043 + C15969 * C1898 +
                      C15975 * C1887 + C34044 + C34044 + C47839 * C1899) *
                         C47872) *
                        C47770 * C47868) *
                       C47563 * C47546)) /
                     (p * q * std::sqrt(p + q));
    d2ee[164] += (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  ((((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                      C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                         C31666 +
                     (C15973 * C434 + C16365 + C16365 + C15969 * C454 +
                      C15975 * C433 + C16364 + C16364 + C47839 * C453) *
                         C47872) *
                        C47770 * C47581 * C47891 -
                    ((C16886 + C16887) * C47872 + (C16205 + C16204) * C31666) *
                        C47770 * C47581 * C47879 +
                    ((C16207 + C16206) * C31666 + (C17322 + C17323) * C47872) *
                        C47770 * C47581 * C47852) *
                       C268 +
                   (((C16208 + C16209) * C31666 + (C16888 + C16889) * C47872) *
                        C47770 * C47581 * C47879 -
                    ((C15975 * C432 + C16371 + C16371 + C47839 * C452 +
                      C15973 * C433 + C16370 + C16370 + C15969 * C453) *
                         C47872 +
                     (C15975 * C121 + C15984 + C15984 + C47839 * C135 +
                      C15973 * C120 + C15985 + C15985 + C15969 * C134) *
                         C31666) *
                        C47770 * C47581 * C47891 -
                    ((C17672 + C17673) * C47872 + (C16211 + C16210) * C31666) *
                        C47770 * C47581 * C47852) *
                       C269 +
                   (((C15973 * C121 + C15986 + C15986 + C15969 * C135 +
                      C15975 * C122 + C15987 + C15987 + C47839 * C136) *
                         C31666 +
                     (C15973 * C432 + C16381 + C16381 + C15969 * C452 +
                      C15975 * C438 + C16380 + C16380 + C47839 * C458) *
                         C47872) *
                        C47770 * C47581 * C47891 -
                    ((C16890 + C16891) * C47872 + (C16213 + C16212) * C31666) *
                        C47770 * C47581 * C47879 +
                    ((C16215 + C16214) * C31666 +
                     (C15973 * C1187 + C16872 + C16872 + C15969 * C1205 +
                      C15975 * C1476 + C16873 + C16873 + C47839 * C1478) *
                         C47872) *
                        C47770 * C47581 * C47852) *
                       C47846)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  (((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                     C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                        C31666 +
                    (C15973 * C434 + C16365 + C16365 + C15969 * C454 +
                     C15975 * C433 + C16364 + C16364 + C47839 * C453) *
                        C47872) *
                       C47770 * C47581 * C47563 * C108 -
                   ((C15975 * C432 + C16371 + C16371 + C47839 * C452 +
                     C15973 * C433 + C16370 + C16370 + C15969 * C453) *
                        C47872 +
                    (C15975 * C121 + C15984 + C15984 + C47839 * C135 +
                     C15973 * C120 + C15985 + C15985 + C15969 * C134) *
                        C31666) *
                       C47770 * C47581 * C47563 * C109 +
                   ((C15973 * C121 + C15986 + C15986 + C15969 * C135 +
                     C15975 * C122 + C15987 + C15987 + C47839 * C136) *
                        C31666 +
                    (C15973 * C432 + C16381 + C16381 + C15969 * C452 +
                     C15975 * C438 + C16380 + C16380 + C47839 * C458) *
                        C47872) *
                       C47770 * C47581 * C47563 * C110 -
                   ((C15975 * C440 + C16659 + C16659 + C47839 * C460 +
                     C15973 * C438 + C16658 + C16658 + C15969 * C458) *
                        C47872 +
                    (C15975 * C123 + C15992 + C15992 + C47839 * C137 +
                     C15973 * C122 + C15993 + C15993 + C15969 * C136) *
                        C31666) *
                       C47770 * C47581 * C47563 * C111 +
                   ((C15973 * C123 + C15994 + C15994 + C15969 * C137 +
                     C15975 * C124 + C15995 + C15995 + C47839 * C138) *
                        C31666 +
                    (C15973 * C440 + C31669 + C31669 + C15969 * C460 +
                     C15975 * C690 + C31670 + C31670 + C47839 * C692) *
                        C47872) *
                       C47770 * C47581 * C47563 * C112)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  ((((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                      C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                         C31666 +
                     (C32013 + C32014) * C47872) *
                        C47770 * C47581 * C976 -
                    ((C16886 + C16887) * C47872 + (C16205 + C16204) * C31666) *
                        C47770 * C47581 * C977 +
                    ((C16207 + C16206) * C31666 + (C17322 + C17323) * C47872) *
                        C47770 * C47581 * C47852) *
                       C47888 +
                   (((C16208 + C16209) * C31666 + (C16888 + C16889) * C47872) *
                        C47770 * C47581 * C977 -
                    ((C32018 + C32017) * C47872 +
                     (C15975 * C121 + C15984 + C15984 + C47839 * C135 +
                      C15973 * C120 + C15985 + C15985 + C15969 * C134) *
                         C31666) *
                        C47770 * C47581 * C976 -
                    ((C17672 + C17673) * C47872 + (C16211 + C16210) * C31666) *
                        C47770 * C47581 * C47852) *
                       C47875 +
                   (((C15973 * C121 + C15986 + C15986 + C15969 * C135 +
                      C15975 * C122 + C15987 + C15987 + C47839 * C136) *
                         C31666 +
                     (C32021 + C32022) * C47872) *
                        C47770 * C47581 * C976 -
                    ((C16890 + C16891) * C47872 + (C16213 + C16212) * C31666) *
                        C47770 * C47581 * C977 +
                    ((C16215 + C16214) * C31666 +
                     (C15973 * C1187 + C16872 + C16872 + C15969 * C1205 +
                      C15975 * C1476 + C16873 + C16873 + C47839 * C1478) *
                         C47872) *
                        C47770 * C47581 * C47852) *
                       C47846)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  (((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                     C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                        C31666 +
                    (C32013 + C32014) * C47872) *
                       C47770 * C47581 * C1044 -
                   ((C16886 + C16887) * C47872 + (C16205 + C16204) * C31666) *
                       C47770 * C47581 * C1045 +
                   ((C16207 + C16206) * C31666 + (C17322 + C17323) * C47872) *
                       C47770 * C47581 * C1046 -
                   ((C17814 + C17815) * C47872 + (C17141 + C17140) * C31666) *
                       C47770 * C47581 * C1047 +
                   ((C17143 + C17142) * C31666 +
                    (C15973 * C6463 + C17808 + C17808 + C15969 * C6467 +
                     C15975 * C6464 + C17809 + C17809 + C47839 * C6468) *
                        C47872) *
                       C47770 * C47581 * C1048) *
                  C47535) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                      C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                         C31666 +
                     (C32013 + C32014) * C47872) *
                        C47770 * C1702 -
                    ((C32015 + C32016) * C47872 + (C32014 + C32013) * C31666) *
                        C47770 * C1703 +
                    ((C32016 + C32015) * C31666 +
                     (C15973 * C1884 + C18193 + C18193 + C15969 * C1896 +
                      C15975 * C1883 + C18192 + C18192 + C47839 * C1895) *
                         C47872) *
                        C47770 * C47855) *
                       C47563 * C47888 +
                   (((C32017 + C32018) * C31666 + (C32019 + C32020) * C47872) *
                        C47770 * C1703 -
                    ((C32018 + C32017) * C47872 +
                     (C15975 * C121 + C15984 + C15984 + C47839 * C135 +
                      C15973 * C120 + C15985 + C15985 + C15969 * C134) *
                         C31666) *
                        C47770 * C1702 -
                    ((C15975 * C1882 + C18535 + C18535 + C47839 * C1894 +
                      C15973 * C1883 + C18534 + C18534 + C15969 * C1895) *
                         C47872 +
                     (C32020 + C32019) * C31666) *
                        C47770 * C47855) *
                       C47563 * C47875 +
                   (((C15973 * C121 + C15986 + C15986 + C15969 * C135 +
                      C15975 * C122 + C15987 + C15987 + C47839 * C136) *
                         C31666 +
                     (C32021 + C32022) * C47872) *
                        C47770 * C1702 -
                    ((C32023 + C32024) * C47872 + (C32022 + C32021) * C31666) *
                        C47770 * C1703 +
                    ((C32024 + C32023) * C31666 +
                     (C15973 * C1882 + C31987 + C31987 + C15969 * C1894 +
                      C15975 * C2160 + C31988 + C31988 + C47839 * C2162) *
                         C47872) *
                        C47770 * C47855) *
                       C47563 * C47846)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                      C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                         C31666 +
                     (C32013 + C32014) * C47872) *
                        C47770 * C1702 -
                    ((C32015 + C32016) * C47872 + (C32014 + C32013) * C31666) *
                        C47770 * C1703 +
                    ((C32016 + C32015) * C31666 +
                     (C15973 * C1884 + C18193 + C18193 + C15969 * C1896 +
                      C15975 * C1883 + C18192 + C18192 + C47839 * C1895) *
                         C47872) *
                        C47770 * C47855) *
                       C47891 +
                   (((C16887 + C16886) * C31666 + (C17320 + C17321) * C47872) *
                        C47770 * C1703 -
                    ((C16886 + C16887) * C47872 + (C16205 + C16204) * C31666) *
                        C47770 * C1702 -
                    ((C18678 + C18679) * C47872 + (C17321 + C17320) * C31666) *
                        C47770 * C47855) *
                       C47879 +
                   (((C16207 + C16206) * C31666 + (C17322 + C17323) * C47872) *
                        C47770 * C1702 -
                    ((C17324 + C17325) * C47872 + (C17323 + C17322) * C31666) *
                        C47770 * C1703 +
                    ((C17325 + C17324) * C31666 +
                     (C15973 * C7339 + C18672 + C18672 + C15969 * C7343 +
                      C15975 * C7340 + C18673 + C18673 + C47839 * C7344) *
                         C47872) *
                        C47770 * C47855) *
                       C47852) *
                  C47535) /
                     (p * q * std::sqrt(p + q));
    d2ee[165] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                       C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                          C31666 +
                      (C32013 + C32014) * C47872) *
                         C47770 * C3136 -
                     ((C32015 + C32016) * C47872 + (C32014 + C32013) * C31666) *
                         C47770 * C47668) *
                        C47820 +
                    (((C16887 + C16886) * C31666 + (C17320 + C17321) * C47872) *
                         C47770 * C47668 -
                     ((C16886 + C16887) * C47872 + (C16205 + C16204) * C31666) *
                         C47770 * C3136) *
                        C47626) *
                       C47540 +
                   ((((C32017 + C32018) * C31666 + (C32019 + C32020) * C47872) *
                         C47770 * C47668 -
                     ((C32018 + C32017) * C47872 +
                      (C15975 * C121 + C15984 + C15984 + C47839 * C135 +
                       C15973 * C120 + C15985 + C15985 + C15969 * C134) *
                          C31666) *
                         C47770 * C3136) *
                        C47820 +
                    (((C16208 + C16209) * C31666 + (C16888 + C16889) * C47872) *
                         C47770 * C3136 -
                     ((C18402 + C18403) * C47872 + (C16889 + C16888) * C31666) *
                         C47770 * C47668) *
                        C47626) *
                       C47549 +
                   ((((C15973 * C121 + C15986 + C15986 + C15969 * C135 +
                       C15975 * C122 + C15987 + C15987 + C47839 * C136) *
                          C31666 +
                      (C32021 + C32022) * C47872) *
                         C47770 * C3136 -
                     ((C32023 + C32024) * C47872 + (C32022 + C32021) * C31666) *
                         C47770 * C47668) *
                        C47820 +
                    (((C16891 + C16890) * C31666 +
                      (C15973 * C1184 + C16384 + C16384 + C15969 * C1202 +
                       C15975 * C2052 + C16385 + C16385 + C47839 * C2054) *
                          C47872) *
                         C47770 * C47668 -
                     ((C16890 + C16891) * C47872 + (C16213 + C16212) * C31666) *
                         C47770 * C3136) *
                        C47626) *
                       C2745)) /
                 (p * q * std::sqrt(p + q));
    d2ee[166] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                       C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                          C31666 +
                      (C32013 + C32014) * C47872) *
                         C47770 * C47664 -
                     ((C32015 + C32016) * C47872 + (C32014 + C32013) * C31666) *
                         C47770 * C47671 +
                     ((C32016 + C32015) * C31666 + (C33711 + C33712) * C47872) *
                         C47770 * C3644) *
                        C47820 +
                    (((C16887 + C16886) * C31666 + (C17320 + C17321) * C47872) *
                         C47770 * C47671 -
                     ((C16886 + C16887) * C47872 + (C16205 + C16204) * C31666) *
                         C47770 * C47664 -
                     ((C18678 + C18679) * C47872 + (C17321 + C17320) * C31666) *
                         C47770 * C3644) *
                        C47626) *
                       C2482 +
                   ((((C32017 + C32018) * C31666 + (C32019 + C32020) * C47872) *
                         C47770 * C47671 -
                     ((C32018 + C32017) * C47872 +
                      (C15975 * C121 + C15984 + C15984 + C47839 * C135 +
                       C15973 * C120 + C15985 + C15985 + C15969 * C134) *
                          C31666) *
                         C47770 * C47664 -
                     ((C34049 + C34050) * C47872 + (C32020 + C32019) * C31666) *
                         C47770 * C3644) *
                        C47820 +
                    (((C16208 + C16209) * C31666 + (C16888 + C16889) * C47872) *
                         C47770 * C47664 -
                     ((C18402 + C18403) * C47872 + (C16889 + C16888) * C31666) *
                         C47770 * C47671 +
                     ((C18403 + C18402) * C31666 +
                      (C15973 * C2265 + C18536 + C18536 + C15969 * C2271 +
                       C15975 * C2266 + C18537 + C18537 + C47839 * C2272) *
                          C47872) *
                         C47770 * C3644) *
                        C47626) *
                       C47546)) /
                 (p * q * std::sqrt(p + q));
    d2ee[167] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                       C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                          C31666 +
                      (C32013 + C32014) * C47872) *
                         C47770 * C3136 -
                     ((C32015 + C32016) * C47872 + (C32014 + C32013) * C31666) *
                         C47770 * C47668) *
                        C47891 +
                    (((C16887 + C16886) * C31666 + (C17320 + C17321) * C47872) *
                         C47770 * C47668 -
                     ((C16886 + C16887) * C47872 + (C16205 + C16204) * C31666) *
                         C47770 * C3136) *
                        C47879 +
                    (((C16207 + C16206) * C31666 + (C17322 + C17323) * C47872) *
                         C47770 * C3136 -
                     ((C17324 + C17325) * C47872 + (C17323 + C17322) * C31666) *
                         C47770 * C47668) *
                        C47852) *
                       C2482 +
                   ((((C32017 + C32018) * C31666 + (C32019 + C32020) * C47872) *
                         C47770 * C47668 -
                     ((C32018 + C32017) * C47872 +
                      (C15975 * C121 + C15984 + C15984 + C47839 * C135 +
                       C15973 * C120 + C15985 + C15985 + C15969 * C134) *
                          C31666) *
                         C47770 * C3136) *
                        C47891 +
                    (((C16208 + C16209) * C31666 + (C16888 + C16889) * C47872) *
                         C47770 * C3136 -
                     ((C18402 + C18403) * C47872 + (C16889 + C16888) * C31666) *
                         C47770 * C47668) *
                        C47879 +
                    (((C17673 + C17672) * C31666 +
                      (C15973 * C1191 + C18396 + C18396 + C15969 * C1209 +
                       C15975 * C1192 + C18397 + C18397 + C47839 * C1210) *
                          C47872) *
                         C47770 * C47668 -
                     ((C17672 + C17673) * C47872 + (C16211 + C16210) * C31666) *
                         C47770 * C3136) *
                        C47852) *
                       C47546)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                      C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                         C31666 +
                     (C32013 + C32014) * C47872) *
                        C47770 * C3136 -
                    ((C32015 + C32016) * C47872 + (C32014 + C32013) * C31666) *
                        C47770 * C47668) *
                       C47563 * C47897 +
                   (((C32017 + C32018) * C31666 + (C32019 + C32020) * C47872) *
                        C47770 * C47668 -
                    ((C32018 + C32017) * C47872 +
                     (C15975 * C121 + C15984 + C15984 + C47839 * C135 +
                      C15973 * C120 + C15985 + C15985 + C15969 * C134) *
                         C31666) *
                        C47770 * C3136) *
                       C47563 * C47890 +
                   (((C15973 * C121 + C15986 + C15986 + C15969 * C135 +
                      C15975 * C122 + C15987 + C15987 + C47839 * C136) *
                         C31666 +
                     (C32021 + C32022) * C47872) *
                        C47770 * C3136 -
                    ((C32023 + C32024) * C47872 + (C32022 + C32021) * C31666) *
                        C47770 * C47668) *
                       C47563 * C47877 +
                   (((C32295 + C32296) * C31666 +
                     (C15973 * C439 + C32289 + C32289 + C15969 * C459 +
                      C15975 * C441 + C32290 + C32290 + C47839 * C461) *
                         C47872) *
                        C47770 * C47668 -
                    ((C32296 + C32295) * C47872 +
                     (C15975 * C123 + C15992 + C15992 + C47839 * C137 +
                      C15973 * C122 + C15993 + C15993 + C15969 * C136) *
                         C31666) *
                        C47770 * C3136) *
                       C47563 * C47856)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                      C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                         C31666 +
                     (C32013 + C32014) * C47872) *
                        C47770 * C47899 -
                    ((C32015 + C32016) * C47872 + (C32014 + C32013) * C31666) *
                        C47770 * C47896 +
                    ((C32016 + C32015) * C31666 + (C33711 + C33712) * C47872) *
                        C47770 * C47887 -
                    ((C33713 + C33714) * C47872 + (C33712 + C33711) * C31666) *
                        C47770 * C47868) *
                       C47563 * C2482 +
                   (((C32017 + C32018) * C31666 + (C32019 + C32020) * C47872) *
                        C47770 * C47896 -
                    ((C32018 + C32017) * C47872 +
                     (C15975 * C121 + C15984 + C15984 + C47839 * C135 +
                      C15973 * C120 + C15985 + C15985 + C15969 * C134) *
                         C31666) *
                        C47770 * C47899 -
                    ((C34049 + C34050) * C47872 + (C32020 + C32019) * C31666) *
                        C47770 * C47887 +
                    ((C34050 + C34049) * C31666 +
                     (C15973 * C1886 + C34043 + C34043 + C15969 * C1898 +
                      C15975 * C1887 + C34044 + C34044 + C47839 * C1899) *
                         C47872) *
                        C47770 * C47868) *
                       C47563 * C47546)) /
                     (p * q * std::sqrt(p + q));
    d2ee[168] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                      C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                         C31666 +
                     (C32013 + C32014) * C47872) *
                        C47770 * C47664 -
                    ((C32015 + C32016) * C47872 + (C32014 + C32013) * C31666) *
                        C47770 * C47671 +
                    ((C32016 + C32015) * C31666 + (C33711 + C33712) * C47872) *
                        C47770 * C3644) *
                       C47563 * C47540 +
                   (((C32017 + C32018) * C31666 + (C32019 + C32020) * C47872) *
                        C47770 * C47671 -
                    ((C32018 + C32017) * C47872 +
                     (C15975 * C121 + C15984 + C15984 + C47839 * C135 +
                      C15973 * C120 + C15985 + C15985 + C15969 * C134) *
                         C31666) *
                        C47770 * C47664 -
                    ((C34049 + C34050) * C47872 + (C32020 + C32019) * C31666) *
                        C47770 * C3644) *
                       C47563 * C47549 +
                   (((C15973 * C121 + C15986 + C15986 + C15969 * C135 +
                      C15975 * C122 + C15987 + C15987 + C47839 * C136) *
                         C31666 +
                     (C32021 + C32022) * C47872) *
                        C47770 * C47664 -
                    ((C32023 + C32024) * C47872 + (C32022 + C32021) * C31666) *
                        C47770 * C47671 +
                    ((C32024 + C32023) * C31666 +
                     (C15973 * C1882 + C31987 + C31987 + C15969 * C1894 +
                      C15975 * C2160 + C31988 + C31988 + C47839 * C2162) *
                         C47872) *
                        C47770 * C3644) *
                       C47563 * C2745)) /
                 (p * q * std::sqrt(p + q));
    d2ee[169] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                      C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                         C31666 +
                     (C32013 + C32014) * C47872) *
                        C47770 * C3136 -
                    ((C32015 + C32016) * C47872 + (C32014 + C32013) * C31666) *
                        C47770 * C47668) *
                       C47563 * C47897 +
                   (((C32017 + C32018) * C31666 + (C32019 + C32020) * C47872) *
                        C47770 * C47668 -
                    ((C32018 + C32017) * C47872 +
                     (C15975 * C121 + C15984 + C15984 + C47839 * C135 +
                      C15973 * C120 + C15985 + C15985 + C15969 * C134) *
                         C31666) *
                        C47770 * C3136) *
                       C47563 * C47890 +
                   (((C15973 * C121 + C15986 + C15986 + C15969 * C135 +
                      C15975 * C122 + C15987 + C15987 + C47839 * C136) *
                         C31666 +
                     (C32021 + C32022) * C47872) *
                        C47770 * C3136 -
                    ((C32023 + C32024) * C47872 + (C32022 + C32021) * C31666) *
                        C47770 * C47668) *
                       C47563 * C47877 +
                   (((C32295 + C32296) * C31666 +
                     (C15973 * C439 + C32289 + C32289 + C15969 * C459 +
                      C15975 * C441 + C32290 + C32290 + C47839 * C461) *
                         C47872) *
                        C47770 * C47668 -
                    ((C32296 + C32295) * C47872 +
                     (C15975 * C123 + C15992 + C15992 + C47839 * C137 +
                      C15973 * C122 + C15993 + C15993 + C15969 * C136) *
                         C31666) *
                        C47770 * C3136) *
                       C47563 * C47856)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                       C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                          C31666 +
                      (C32013 + C32014) * C47872) *
                         C47770 * C3136 -
                     ((C32015 + C32016) * C47872 + (C32014 + C32013) * C31666) *
                         C47770 * C47668) *
                        C47891 +
                    (((C16887 + C16886) * C31666 + (C17320 + C17321) * C47872) *
                         C47770 * C47668 -
                     ((C16886 + C16887) * C47872 + (C16205 + C16204) * C31666) *
                         C47770 * C3136) *
                        C47879 +
                    (((C16207 + C16206) * C31666 + (C17322 + C17323) * C47872) *
                         C47770 * C3136 -
                     ((C17324 + C17325) * C47872 + (C17323 + C17322) * C31666) *
                         C47770 * C47668) *
                        C47852) *
                       C2482 +
                   ((((C32017 + C32018) * C31666 + (C32019 + C32020) * C47872) *
                         C47770 * C47668 -
                     ((C32018 + C32017) * C47872 +
                      (C15975 * C121 + C15984 + C15984 + C47839 * C135 +
                       C15973 * C120 + C15985 + C15985 + C15969 * C134) *
                          C31666) *
                         C47770 * C3136) *
                        C47891 +
                    (((C16208 + C16209) * C31666 + (C16888 + C16889) * C47872) *
                         C47770 * C3136 -
                     ((C18402 + C18403) * C47872 + (C16889 + C16888) * C31666) *
                         C47770 * C47668) *
                        C47879 +
                    (((C17673 + C17672) * C31666 +
                      (C15973 * C1191 + C18396 + C18396 + C15969 * C1209 +
                       C15975 * C1192 + C18397 + C18397 + C47839 * C1210) *
                          C47872) *
                         C47770 * C47668 -
                     ((C17672 + C17673) * C47872 + (C16211 + C16210) * C31666) *
                         C47770 * C3136) *
                        C47852) *
                       C47546)) /
                     (p * q * std::sqrt(p + q));
    d2ee[170] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                      C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                         C31666 +
                     (C32013 + C32014) * C47872) *
                        C47770 * C47581 * C47820 -
                    ((C16886 + C16887) * C47872 + (C16205 + C16204) * C31666) *
                        C47770 * C47581 * C47626) *
                       C580 +
                   (((C16208 + C16209) * C31666 + (C16888 + C16889) * C47872) *
                        C47770 * C47581 * C47626 -
                    ((C32018 + C32017) * C47872 +
                     (C15975 * C121 + C15984 + C15984 + C47839 * C135 +
                      C15973 * C120 + C15985 + C15985 + C15969 * C134) *
                         C31666) *
                        C47770 * C47581 * C47820) *
                       C581 +
                   (((C15973 * C121 + C15986 + C15986 + C15969 * C135 +
                      C15975 * C122 + C15987 + C15987 + C47839 * C136) *
                         C31666 +
                     (C32021 + C32022) * C47872) *
                        C47770 * C47581 * C47820 -
                    ((C16890 + C16891) * C47872 + (C16213 + C16212) * C31666) *
                        C47770 * C47581 * C47626) *
                       C582 +
                   (((C16526 + C16527) * C31666 +
                     (C15973 * C845 + C16660 + C16660 + C15969 * C855 +
                      C15975 * C846 + C16661 + C16661 + C47839 * C856) *
                         C47872) *
                        C47770 * C47581 * C47626 -
                    ((C15975 * C440 + C16659 + C16659 + C47839 * C460 +
                      C15973 * C438 + C16658 + C16658 + C15969 * C458) *
                         C47872 +
                     (C15975 * C123 + C15992 + C15992 + C47839 * C137 +
                      C15973 * C122 + C15993 + C15993 + C15969 * C136) *
                         C31666) *
                        C47770 * C47581 * C47820) *
                       C47856)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                      C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                         C31666 +
                     (C32013 + C32014) * C47872) *
                        C47770 * C47581 * C1318 -
                    ((C16886 + C16887) * C47872 + (C16205 + C16204) * C31666) *
                        C47770 * C47581 * C1319 +
                    ((C16207 + C16206) * C31666 + (C17322 + C17323) * C47872) *
                        C47770 * C47581 * C1320 -
                    ((C17814 + C17815) * C47872 + (C17141 + C17140) * C31666) *
                        C47770 * C47581 * C47862) *
                       C47806 +
                   (((C16208 + C16209) * C31666 + (C16888 + C16889) * C47872) *
                        C47770 * C47581 * C1319 -
                    ((C32018 + C32017) * C47872 +
                     (C15975 * C121 + C15984 + C15984 + C47839 * C135 +
                      C15973 * C120 + C15985 + C15985 + C15969 * C134) *
                         C31666) *
                        C47770 * C47581 * C1318 -
                    ((C17672 + C17673) * C47872 + (C16211 + C16210) * C31666) *
                        C47770 * C47581 * C1320 +
                    ((C17467 + C17466) * C31666 +
                     (C15973 * C1581 + C17666 + C17666 + C15969 * C1587 +
                      C15975 * C1582 + C17667 + C17667 + C47839 * C1588) *
                         C47872) *
                        C47770 * C47581 * C47862) *
                       C47546)) /
                     (p * q * std::sqrt(p + q));
    d2ee[171] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                       C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                          C31666 +
                      (C32013 + C32014) * C47872) *
                         C47770 * C47821 -
                     ((C32015 + C32016) * C47872 + (C32014 + C32013) * C31666) *
                         C47770 * C47668) *
                        C47820 +
                    (((C16887 + C16886) * C31666 + (C17320 + C17321) * C47872) *
                         C47770 * C47668 -
                     ((C16886 + C16887) * C47872 + (C16205 + C16204) * C31666) *
                         C47770 * C47821) *
                        C47626) *
                       C268 +
                   ((((C32017 + C32018) * C31666 + (C32019 + C32020) * C47872) *
                         C47770 * C47668 -
                     ((C32018 + C32017) * C47872 +
                      (C15975 * C121 + C15984 + C15984 + C47839 * C135 +
                       C15973 * C120 + C15985 + C15985 + C15969 * C134) *
                          C31666) *
                         C47770 * C47821) *
                        C47820 +
                    (((C16208 + C16209) * C31666 + (C16888 + C16889) * C47872) *
                         C47770 * C47821 -
                     ((C18402 + C18403) * C47872 + (C16889 + C16888) * C31666) *
                         C47770 * C47668) *
                        C47626) *
                       C269 +
                   ((((C15973 * C121 + C15986 + C15986 + C15969 * C135 +
                       C15975 * C122 + C15987 + C15987 + C47839 * C136) *
                          C31666 +
                      (C32021 + C32022) * C47872) *
                         C47770 * C47821 -
                     ((C32023 + C32024) * C47872 + (C32022 + C32021) * C31666) *
                         C47770 * C47668) *
                        C47820 +
                    (((C16891 + C16890) * C31666 +
                      (C15973 * C1184 + C16384 + C16384 + C15969 * C1202 +
                       C15975 * C2052 + C16385 + C16385 + C47839 * C2054) *
                          C47872) *
                         C47770 * C47668 -
                     ((C16890 + C16891) * C47872 + (C16213 + C16212) * C31666) *
                         C47770 * C47821) *
                        C47626) *
                       C47846)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                      C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                         C31666 +
                     (C32013 + C32014) * C47872) *
                        C47770 * C47821 -
                    ((C32015 + C32016) * C47872 + (C32014 + C32013) * C31666) *
                        C47770 * C47668) *
                       C1318 +
                   (((C16887 + C16886) * C31666 + (C17320 + C17321) * C47872) *
                        C47770 * C47668 -
                    ((C16886 + C16887) * C47872 + (C16205 + C16204) * C31666) *
                        C47770 * C47821) *
                       C1319 +
                   (((C16207 + C16206) * C31666 + (C17322 + C17323) * C47872) *
                        C47770 * C47821 -
                    ((C17324 + C17325) * C47872 + (C17323 + C17322) * C31666) *
                        C47770 * C47668) *
                       C1320 +
                   (((C17815 + C17814) * C31666 +
                     (C15973 * C5943 + C17306 + C17306 + C15969 * C5947 +
                      C15975 * C5944 + C17307 + C17307 + C47839 * C5948) *
                         C47872) *
                        C47770 * C47668 -
                    ((C17814 + C17815) * C47872 + (C17141 + C17140) * C31666) *
                        C47770 * C47821) *
                       C47862) *
                  C47535) /
                     (p * q * std::sqrt(p + q));
    d2ee[172] += (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  ((((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                      C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                         C31666 +
                     (C15973 * C434 + C16365 + C16365 + C15969 * C454 +
                      C15975 * C433 + C16364 + C16364 + C47839 * C453) *
                         C47872) *
                        C47770 * C47581 * C47891 -
                    ((C16886 + C16887) * C47872 + (C16205 + C16204) * C31666) *
                        C47770 * C47581 * C47879 +
                    ((C16207 + C16206) * C31666 + (C17322 + C17323) * C47872) *
                        C47770 * C47581 * C47852) *
                       C268 +
                   (((C16208 + C16209) * C31666 + (C16888 + C16889) * C47872) *
                        C47770 * C47581 * C47879 -
                    ((C15975 * C432 + C16371 + C16371 + C47839 * C452 +
                      C15973 * C433 + C16370 + C16370 + C15969 * C453) *
                         C47872 +
                     (C15975 * C121 + C15984 + C15984 + C47839 * C135 +
                      C15973 * C120 + C15985 + C15985 + C15969 * C134) *
                         C31666) *
                        C47770 * C47581 * C47891 -
                    ((C17672 + C17673) * C47872 + (C16211 + C16210) * C31666) *
                        C47770 * C47581 * C47852) *
                       C269 +
                   (((C15973 * C121 + C15986 + C15986 + C15969 * C135 +
                      C15975 * C122 + C15987 + C15987 + C47839 * C136) *
                         C31666 +
                     (C15973 * C432 + C16381 + C16381 + C15969 * C452 +
                      C15975 * C438 + C16380 + C16380 + C47839 * C458) *
                         C47872) *
                        C47770 * C47581 * C47891 -
                    ((C16890 + C16891) * C47872 + (C16213 + C16212) * C31666) *
                        C47770 * C47581 * C47879 +
                    ((C16215 + C16214) * C31666 +
                     (C15973 * C1187 + C16872 + C16872 + C15969 * C1205 +
                      C15975 * C1476 + C16873 + C16873 + C47839 * C1478) *
                         C47872) *
                        C47770 * C47581 * C47852) *
                       C47846)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  (((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                     C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                        C31666 +
                    (C15973 * C434 + C16365 + C16365 + C15969 * C454 +
                     C15975 * C433 + C16364 + C16364 + C47839 * C453) *
                        C47872) *
                       C47770 * C47581 * C47563 * C108 -
                   ((C15975 * C432 + C16371 + C16371 + C47839 * C452 +
                     C15973 * C433 + C16370 + C16370 + C15969 * C453) *
                        C47872 +
                    (C15975 * C121 + C15984 + C15984 + C47839 * C135 +
                     C15973 * C120 + C15985 + C15985 + C15969 * C134) *
                        C31666) *
                       C47770 * C47581 * C47563 * C109 +
                   ((C15973 * C121 + C15986 + C15986 + C15969 * C135 +
                     C15975 * C122 + C15987 + C15987 + C47839 * C136) *
                        C31666 +
                    (C15973 * C432 + C16381 + C16381 + C15969 * C452 +
                     C15975 * C438 + C16380 + C16380 + C47839 * C458) *
                        C47872) *
                       C47770 * C47581 * C47563 * C110 -
                   ((C15975 * C440 + C16659 + C16659 + C47839 * C460 +
                     C15973 * C438 + C16658 + C16658 + C15969 * C458) *
                        C47872 +
                    (C15975 * C123 + C15992 + C15992 + C47839 * C137 +
                     C15973 * C122 + C15993 + C15993 + C15969 * C136) *
                        C31666) *
                       C47770 * C47581 * C47563 * C111 +
                   ((C15973 * C123 + C15994 + C15994 + C15969 * C137 +
                     C15975 * C124 + C15995 + C15995 + C47839 * C138) *
                        C31666 +
                    (C15973 * C440 + C31669 + C31669 + C15969 * C460 +
                     C15975 * C690 + C31670 + C31670 + C47839 * C692) *
                        C47872) *
                       C47770 * C47581 * C47563 * C112)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                      C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                         C31666 +
                     (C32013 + C32014) * C47872) *
                        C47770 * C47892 -
                    ((C32015 + C32016) * C47872 + (C32014 + C32013) * C31666) *
                        C47770 * C47881 +
                    ((C32016 + C32015) * C31666 +
                     (C15973 * C1884 + C18193 + C18193 + C15969 * C1896 +
                      C15975 * C1883 + C18192 + C18192 + C47839 * C1895) *
                         C47872) *
                        C47770 * C47855) *
                       C47563 * C268 +
                   (((C32017 + C32018) * C31666 + (C32019 + C32020) * C47872) *
                        C47770 * C47881 -
                    ((C32018 + C32017) * C47872 +
                     (C15975 * C121 + C15984 + C15984 + C47839 * C135 +
                      C15973 * C120 + C15985 + C15985 + C15969 * C134) *
                         C31666) *
                        C47770 * C47892 -
                    ((C15975 * C1882 + C18535 + C18535 + C47839 * C1894 +
                      C15973 * C1883 + C18534 + C18534 + C15969 * C1895) *
                         C47872 +
                     (C32020 + C32019) * C31666) *
                        C47770 * C47855) *
                       C47563 * C269 +
                   (((C15973 * C121 + C15986 + C15986 + C15969 * C135 +
                      C15975 * C122 + C15987 + C15987 + C47839 * C136) *
                         C31666 +
                     (C32021 + C32022) * C47872) *
                        C47770 * C47892 -
                    ((C32023 + C32024) * C47872 + (C32022 + C32021) * C31666) *
                        C47770 * C47881 +
                    ((C32024 + C32023) * C31666 +
                     (C15973 * C1882 + C31987 + C31987 + C15969 * C1894 +
                      C15975 * C2160 + C31988 + C31988 + C47839 * C2162) *
                         C47872) *
                        C47770 * C47855) *
                       C47563 * C47846)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  ((((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                      C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                         C31666 +
                     (C32013 + C32014) * C47872) *
                        C47770 * C47581 * C976 -
                    ((C16886 + C16887) * C47872 + (C16205 + C16204) * C31666) *
                        C47770 * C47581 * C977 +
                    ((C16207 + C16206) * C31666 + (C17322 + C17323) * C47872) *
                        C47770 * C47581 * C47852) *
                       C47888 +
                   (((C16208 + C16209) * C31666 + (C16888 + C16889) * C47872) *
                        C47770 * C47581 * C977 -
                    ((C32018 + C32017) * C47872 +
                     (C15975 * C121 + C15984 + C15984 + C47839 * C135 +
                      C15973 * C120 + C15985 + C15985 + C15969 * C134) *
                         C31666) *
                        C47770 * C47581 * C976 -
                    ((C17672 + C17673) * C47872 + (C16211 + C16210) * C31666) *
                        C47770 * C47581 * C47852) *
                       C47875 +
                   (((C15973 * C121 + C15986 + C15986 + C15969 * C135 +
                      C15975 * C122 + C15987 + C15987 + C47839 * C136) *
                         C31666 +
                     (C32021 + C32022) * C47872) *
                        C47770 * C47581 * C976 -
                    ((C16890 + C16891) * C47872 + (C16213 + C16212) * C31666) *
                        C47770 * C47581 * C977 +
                    ((C16215 + C16214) * C31666 +
                     (C15973 * C1187 + C16872 + C16872 + C15969 * C1205 +
                      C15975 * C1476 + C16873 + C16873 + C47839 * C1478) *
                         C47872) *
                        C47770 * C47581 * C47852) *
                       C47846)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  (((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                     C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                        C31666 +
                    (C32013 + C32014) * C47872) *
                       C47770 * C47581 * C1044 -
                   ((C16886 + C16887) * C47872 + (C16205 + C16204) * C31666) *
                       C47770 * C47581 * C1045 +
                   ((C16207 + C16206) * C31666 + (C17322 + C17323) * C47872) *
                       C47770 * C47581 * C1046 -
                   ((C17814 + C17815) * C47872 + (C17141 + C17140) * C31666) *
                       C47770 * C47581 * C1047 +
                   ((C17143 + C17142) * C31666 +
                    (C15973 * C6463 + C17808 + C17808 + C15969 * C6467 +
                     C15975 * C6464 + C17809 + C17809 + C47839 * C6468) *
                        C47872) *
                       C47770 * C47581 * C1048) *
                  C47535) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                      C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                         C31666 +
                     (C32013 + C32014) * C47872) *
                        C47770 * C47892 -
                    ((C32015 + C32016) * C47872 + (C32014 + C32013) * C31666) *
                        C47770 * C47881 +
                    ((C32016 + C32015) * C31666 +
                     (C15973 * C1884 + C18193 + C18193 + C15969 * C1896 +
                      C15975 * C1883 + C18192 + C18192 + C47839 * C1895) *
                         C47872) *
                        C47770 * C47855) *
                       C976 +
                   (((C16887 + C16886) * C31666 + (C17320 + C17321) * C47872) *
                        C47770 * C47881 -
                    ((C16886 + C16887) * C47872 + (C16205 + C16204) * C31666) *
                        C47770 * C47892 -
                    ((C18678 + C18679) * C47872 + (C17321 + C17320) * C31666) *
                        C47770 * C47855) *
                       C977 +
                   (((C16207 + C16206) * C31666 + (C17322 + C17323) * C47872) *
                        C47770 * C47892 -
                    ((C17324 + C17325) * C47872 + (C17323 + C17322) * C31666) *
                        C47770 * C47881 +
                    ((C17325 + C17324) * C31666 +
                     (C15973 * C7339 + C18672 + C18672 + C15969 * C7343 +
                      C15975 * C7340 + C18673 + C18673 + C47839 * C7344) *
                         C47872) *
                        C47770 * C47855) *
                       C47852) *
                  C47535) /
                     (p * q * std::sqrt(p + q));
    d2ee[173] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                      C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                         C31666 +
                     (C32013 + C32014) * C47872) *
                        C47770 * C47821 -
                    ((C32015 + C32016) * C47872 + (C32014 + C32013) * C31666) *
                        C47770 * C47668) *
                       C47563 * C580 +
                   (((C32017 + C32018) * C31666 + (C32019 + C32020) * C47872) *
                        C47770 * C47668 -
                    ((C32018 + C32017) * C47872 +
                     (C15975 * C121 + C15984 + C15984 + C47839 * C135 +
                      C15973 * C120 + C15985 + C15985 + C15969 * C134) *
                         C31666) *
                        C47770 * C47821) *
                       C47563 * C581 +
                   (((C15973 * C121 + C15986 + C15986 + C15969 * C135 +
                      C15975 * C122 + C15987 + C15987 + C47839 * C136) *
                         C31666 +
                     (C32021 + C32022) * C47872) *
                        C47770 * C47821 -
                    ((C32023 + C32024) * C47872 + (C32022 + C32021) * C31666) *
                        C47770 * C47668) *
                       C47563 * C582 +
                   (((C32295 + C32296) * C31666 +
                     (C15973 * C439 + C32289 + C32289 + C15969 * C459 +
                      C15975 * C441 + C32290 + C32290 + C47839 * C461) *
                         C47872) *
                        C47770 * C47668 -
                    ((C32296 + C32295) * C47872 +
                     (C15975 * C123 + C15992 + C15992 + C47839 * C137 +
                      C15973 * C122 + C15993 + C15993 + C15969 * C136) *
                         C31666) *
                        C47770 * C47821) *
                       C47563 * C47856)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                       C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                          C31666 +
                      (C32013 + C32014) * C47872) *
                         C47770 * C47821 -
                     ((C32015 + C32016) * C47872 + (C32014 + C32013) * C31666) *
                         C47770 * C47668) *
                        C976 +
                    (((C16887 + C16886) * C31666 + (C17320 + C17321) * C47872) *
                         C47770 * C47668 -
                     ((C16886 + C16887) * C47872 + (C16205 + C16204) * C31666) *
                         C47770 * C47821) *
                        C977 +
                    (((C16207 + C16206) * C31666 + (C17322 + C17323) * C47872) *
                         C47770 * C47821 -
                     ((C17324 + C17325) * C47872 + (C17323 + C17322) * C31666) *
                         C47770 * C47668) *
                        C47852) *
                       C47806 +
                   ((((C32017 + C32018) * C31666 + (C32019 + C32020) * C47872) *
                         C47770 * C47668 -
                     ((C32018 + C32017) * C47872 +
                      (C15975 * C121 + C15984 + C15984 + C47839 * C135 +
                       C15973 * C120 + C15985 + C15985 + C15969 * C134) *
                          C31666) *
                         C47770 * C47821) *
                        C976 +
                    (((C16208 + C16209) * C31666 + (C16888 + C16889) * C47872) *
                         C47770 * C47821 -
                     ((C18402 + C18403) * C47872 + (C16889 + C16888) * C31666) *
                         C47770 * C47668) *
                        C977 +
                    (((C17673 + C17672) * C31666 +
                      (C15973 * C1191 + C18396 + C18396 + C15969 * C1209 +
                       C15975 * C1192 + C18397 + C18397 + C47839 * C1210) *
                          C47872) *
                         C47770 * C47668 -
                     ((C17672 + C17673) * C47872 + (C16211 + C16210) * C31666) *
                         C47770 * C47821) *
                        C47852) *
                       C47546)) /
                     (p * q * std::sqrt(p + q));
    d2ee[174] += (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  (((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                     C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                        C31666 +
                    (C15973 * C434 + C16365 + C16365 + C15969 * C454 +
                     C15975 * C433 + C16364 + C16364 + C47839 * C453) *
                        C47872) *
                       C47770 * C47581 * C47563 * C108 -
                   ((C15975 * C432 + C16371 + C16371 + C47839 * C452 +
                     C15973 * C433 + C16370 + C16370 + C15969 * C453) *
                        C47872 +
                    (C15975 * C121 + C15984 + C15984 + C47839 * C135 +
                     C15973 * C120 + C15985 + C15985 + C15969 * C134) *
                        C31666) *
                       C47770 * C47581 * C47563 * C109 +
                   ((C15973 * C121 + C15986 + C15986 + C15969 * C135 +
                     C15975 * C122 + C15987 + C15987 + C47839 * C136) *
                        C31666 +
                    (C15973 * C432 + C16381 + C16381 + C15969 * C452 +
                     C15975 * C438 + C16380 + C16380 + C47839 * C458) *
                        C47872) *
                       C47770 * C47581 * C47563 * C110 -
                   ((C15975 * C440 + C16659 + C16659 + C47839 * C460 +
                     C15973 * C438 + C16658 + C16658 + C15969 * C458) *
                        C47872 +
                    (C15975 * C123 + C15992 + C15992 + C47839 * C137 +
                     C15973 * C122 + C15993 + C15993 + C15969 * C136) *
                        C31666) *
                       C47770 * C47581 * C47563 * C111 +
                   ((C15973 * C123 + C15994 + C15994 + C15969 * C137 +
                     C15975 * C124 + C15995 + C15995 + C47839 * C138) *
                        C31666 +
                    (C15973 * C440 + C31669 + C31669 + C15969 * C460 +
                     C15975 * C690 + C31670 + C31670 + C47839 * C692) *
                        C47872) *
                       C47770 * C47581 * C47563 * C112)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                      C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                         C31666 +
                     (C15973 * C434 + C16365 + C16365 + C15969 * C454 +
                      C15975 * C433 + C16364 + C16364 + C47839 * C453) *
                         C47872) *
                        C47770 * C47581 * C47891 -
                    ((C16886 + C16887) * C47872 + (C16205 + C16204) * C31666) *
                        C47770 * C47581 * C47879 +
                    ((C16207 + C16206) * C31666 + (C17322 + C17323) * C47872) *
                        C47770 * C47581 * C47852) *
                       C268 +
                   (((C16208 + C16209) * C31666 + (C16888 + C16889) * C47872) *
                        C47770 * C47581 * C47879 -
                    ((C15975 * C432 + C16371 + C16371 + C47839 * C452 +
                      C15973 * C433 + C16370 + C16370 + C15969 * C453) *
                         C47872 +
                     (C15975 * C121 + C15984 + C15984 + C47839 * C135 +
                      C15973 * C120 + C15985 + C15985 + C15969 * C134) *
                         C31666) *
                        C47770 * C47581 * C47891 -
                    ((C17672 + C17673) * C47872 + (C16211 + C16210) * C31666) *
                        C47770 * C47581 * C47852) *
                       C269 +
                   (((C15973 * C121 + C15986 + C15986 + C15969 * C135 +
                      C15975 * C122 + C15987 + C15987 + C47839 * C136) *
                         C31666 +
                     (C15973 * C432 + C16381 + C16381 + C15969 * C452 +
                      C15975 * C438 + C16380 + C16380 + C47839 * C458) *
                         C47872) *
                        C47770 * C47581 * C47891 -
                    ((C16890 + C16891) * C47872 + (C16213 + C16212) * C31666) *
                        C47770 * C47581 * C47879 +
                    ((C16215 + C16214) * C31666 +
                     (C15973 * C1187 + C16872 + C16872 + C15969 * C1205 +
                      C15975 * C1476 + C16873 + C16873 + C47839 * C1478) *
                         C47872) *
                        C47770 * C47581 * C47852) *
                       C47846)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                      C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                         C31666 +
                     (C32013 + C32014) * C47872) *
                        C47770 * C47581 * C976 -
                    ((C16886 + C16887) * C47872 + (C16205 + C16204) * C31666) *
                        C47770 * C47581 * C977 +
                    ((C16207 + C16206) * C31666 + (C17322 + C17323) * C47872) *
                        C47770 * C47581 * C47852) *
                       C47888 +
                   (((C16208 + C16209) * C31666 + (C16888 + C16889) * C47872) *
                        C47770 * C47581 * C977 -
                    ((C32018 + C32017) * C47872 +
                     (C15975 * C121 + C15984 + C15984 + C47839 * C135 +
                      C15973 * C120 + C15985 + C15985 + C15969 * C134) *
                         C31666) *
                        C47770 * C47581 * C976 -
                    ((C17672 + C17673) * C47872 + (C16211 + C16210) * C31666) *
                        C47770 * C47581 * C47852) *
                       C47875 +
                   (((C15973 * C121 + C15986 + C15986 + C15969 * C135 +
                      C15975 * C122 + C15987 + C15987 + C47839 * C136) *
                         C31666 +
                     (C32021 + C32022) * C47872) *
                        C47770 * C47581 * C976 -
                    ((C16890 + C16891) * C47872 + (C16213 + C16212) * C31666) *
                        C47770 * C47581 * C977 +
                    ((C16215 + C16214) * C31666 +
                     (C15973 * C1187 + C16872 + C16872 + C15969 * C1205 +
                      C15975 * C1476 + C16873 + C16873 + C47839 * C1478) *
                         C47872) *
                        C47770 * C47581 * C47852) *
                       C47846)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  (((C15973 * C119 + C15978 + C15978 + C15969 * C133 +
                     C15975 * C120 + C15979 + C15979 + C47839 * C134) *
                        C31666 +
                    (C32013 + C32014) * C47872) *
                       C47770 * C47581 * C1044 -
                   ((C16886 + C16887) * C47872 + (C16205 + C16204) * C31666) *
                       C47770 * C47581 * C1045 +
                   ((C16207 + C16206) * C31666 + (C17322 + C17323) * C47872) *
                       C47770 * C47581 * C1046 -
                   ((C17814 + C17815) * C47872 + (C17141 + C17140) * C31666) *
                       C47770 * C47581 * C1047 +
                   ((C17143 + C17142) * C31666 +
                    (C15973 * C6463 + C17808 + C17808 + C15969 * C6467 +
                     C15975 * C6464 + C17809 + C17809 + C47839 * C6468) *
                        C47872) *
                       C47770 * C47581 * C1048) *
                  C47535) /
                     (p * q * std::sqrt(p + q));
    d2ee[175] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C31666 +
             C26432 * C47872) *
                C4619 +
            (C37373 + C37374) * C47870) *
               C47581 * C47622 -
           ((C37375 + C37376) * C47870 + (C37374 + C37373) * C4619) * C47581 *
               C47629 +
           ((C37376 + C37375) * C4619 + (C38221 + C38222) * C47870) * C47581 *
               C2742) *
              C47540 +
          (((C37377 + C37378) * C4619 + (C37379 + C37380) * C47870) * C47581 *
               C47629 -
           ((C37378 + C37377) * C47870 +
            (C26434 * C47872 +
             (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C31666) *
                C4619) *
               C47581 * C47622 -
           ((C38507 + C38508) * C47870 + (C37380 + C37379) * C4619) * C47581 *
               C2742) *
              C47549 +
          ((((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C31666 +
             C26436 * C47872) *
                C4619 +
            (C37381 + C37382) * C47870) *
               C47581 * C47622 -
           ((C37383 + C37384) * C47870 + (C37382 + C37381) * C4619) * C47581 *
               C47629 +
           ((C37384 + C37383) * C4619 +
            (C21887 * C31666 +
             (C21709 * C1582 + C22397 + C22397 + C47508 * C1588) * C47872) *
                C47870) *
               C47581 * C2742) *
              C2745)) /
        (p * q * std::sqrt(p + q));
    d2ee[176] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C31666 +
              C26432 * C47872) *
                 C4619 +
             (C37373 + C37374) * C47870) *
                C47821 -
            ((C37987 + C37988) * C47870 +
             (C26433 * C47872 + C26432 * C31666) * C4619) *
                C47668) *
               C47622 +
           (((C37988 + C37987) * C4619 + (C38373 + C38374) * C47870) * C47668 -
            ((C37375 + C37376) * C47870 + (C37374 + C37373) * C4619) * C47821) *
               C47629 +
           (((C37376 + C37375) * C4619 + (C38221 + C38222) * C47870) * C47821 -
            ((C38835 + C38836) * C47870 + (C38374 + C38373) * C4619) * C47668) *
               C2742) *
              C2482 +
          ((((C26434 * C31666 + C26435 * C47872) * C4619 +
             (C37989 + C37990) * C47870) *
                C47668 -
            ((C37378 + C37377) * C47870 +
             (C26434 * C47872 +
              (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C31666) *
                 C4619) *
                C47821) *
               C47622 +
           (((C37377 + C37378) * C4619 + (C37379 + C37380) * C47870) * C47821 -
            ((C38703 + C38704) * C47870 + (C37990 + C37989) * C4619) * C47668) *
               C47629 +
           (((C38704 + C38703) * C4619 +
             (C23007 * C31666 +
              (C21709 * C5944 + C23558 + C23558 + C47508 * C5948) * C47872) *
                 C47870) *
                C47668 -
            ((C38507 + C38508) * C47870 + (C37380 + C37379) * C4619) * C47821) *
               C2742) *
              C47546)) /
        (p * q * std::sqrt(p + q));
    d2ee[177] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C31666 +
             C26432 * C47872) *
                C4619 +
            (C37373 + C37374) * C47870) *
               C47581 * C47898 -
           ((C37375 + C37376) * C47870 + (C37374 + C37373) * C4619) * C47581 *
               C47894 +
           ((C37376 + C37375) * C4619 + (C38221 + C38222) * C47870) * C47581 *
               C47884 -
           ((C38223 + C38224) * C47870 + (C38222 + C38221) * C4619) * C47581 *
               C47862) *
              C2482 +
          (((C37377 + C37378) * C4619 + (C37379 + C37380) * C47870) * C47581 *
               C47894 -
           ((C37378 + C37377) * C47870 +
            (C26434 * C47872 +
             (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C31666) *
                C4619) *
               C47581 * C47898 -
           ((C38507 + C38508) * C47870 + (C37380 + C37379) * C4619) * C47581 *
               C47884 +
           ((C38508 + C38507) * C4619 +
            (C22854 * C31666 +
             (C21709 * C6464 + C23004 + C23004 + C47508 * C6468) * C47872) *
                C47870) *
               C47581 * C47862) *
              C47546)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C31666 +
             C26432 * C47872) *
                C4619 +
            (C37373 + C37374) * C47870) *
               C47581 * C2374 -
           ((C37375 + C37376) * C47870 + (C37374 + C37373) * C4619) * C47581 *
               C47626) *
              C47897 +
          (((C37377 + C37378) * C4619 + (C37379 + C37380) * C47870) * C47581 *
               C47626 -
           ((C37378 + C37377) * C47870 +
            (C26434 * C47872 +
             (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C31666) *
                C4619) *
               C47581 * C2374) *
              C47890 +
          ((((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C31666 +
             C26436 * C47872) *
                C4619 +
            (C37381 + C37382) * C47870) *
               C47581 * C2374 -
           ((C37383 + C37384) * C47870 + (C37382 + C37381) * C4619) * C47581 *
               C47626) *
              C47877 +
          (((C37661 + C37662) * C4619 +
            (C22133 * C31666 +
             (C21709 * C1476 + C22236 + C22236 + C47508 * C1478) * C47872) *
                C47870) *
               C47581 * C47626 -
           ((C37662 + C37661) * C47870 +
            (C26712 * C47872 +
             (C21709 * C122 + C21723 + C21723 + C47508 * C136) * C31666) *
                C4619) *
               C47581 * C2374) *
              C47856)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C31666 +
              C26432 * C47872) *
                 C4619 +
             (C37373 + C37374) * C47870) *
                C47892 -
            ((C37987 + C37988) * C47870 +
             (C26433 * C47872 + C26432 * C31666) * C4619) *
                C47881 +
            ((C26433 * C31666 + C28148 * C47872) * C4619 +
             (C38371 + C38372) * C47870) *
                C47855) *
               C2374 +
           (((C37988 + C37987) * C4619 + (C38373 + C38374) * C47870) * C47881 -
            ((C37375 + C37376) * C47870 + (C37374 + C37373) * C4619) * C47892 -
            ((C38375 + C38376) * C47870 + (C38372 + C38371) * C4619) * C47855) *
               C47626) *
              C2482 +
          ((((C26434 * C31666 + C26435 * C47872) * C4619 +
             (C37989 + C37990) * C47870) *
                C47881 -
            ((C37378 + C37377) * C47870 +
             (C26434 * C47872 +
              (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C31666) *
                 C4619) *
                C47892 -
            ((C39405 + C39406) * C47870 +
             (C28488 * C47872 + C26435 * C31666) * C4619) *
                C47855) *
               C2374 +
           (((C37377 + C37378) * C4619 + (C37379 + C37380) * C47870) * C47892 -
            ((C38703 + C38704) * C47870 + (C37990 + C37989) * C4619) * C47881 +
            ((C39406 + C39405) * C4619 +
             (C23563 * C31666 +
              (C21709 * C7340 + C23667 + C23667 + C47508 * C7344) * C47872) *
                 C47870) *
                C47855) *
               C47626) *
              C47546)) /
            (p * q * std::sqrt(p + q));
    d2ee[178] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C31666 +
              C26432 * C47872) *
                 C4619 +
             (C37373 + C37374) * C47870) *
                C47821 -
            ((C37987 + C37988) * C47870 +
             (C26433 * C47872 + C26432 * C31666) * C4619) *
                C47668) *
               C2374 +
           (((C37988 + C37987) * C4619 + (C38373 + C38374) * C47870) * C47668 -
            ((C37375 + C37376) * C47870 + (C37374 + C37373) * C4619) * C47821) *
               C47626) *
              C47540 +
          ((((C26434 * C31666 + C26435 * C47872) * C4619 +
             (C37989 + C37990) * C47870) *
                C47668 -
            ((C37378 + C37377) * C47870 +
             (C26434 * C47872 +
              (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C31666) *
                 C4619) *
                C47821) *
               C2374 +
           (((C37377 + C37378) * C4619 + (C37379 + C37380) * C47870) * C47821 -
            ((C38703 + C38704) * C47870 + (C37990 + C37989) * C4619) * C47668) *
               C47626) *
              C47549 +
          (((((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C31666 +
              C26436 * C47872) *
                 C4619 +
             (C37381 + C37382) * C47870) *
                C47821 -
            ((C37991 + C37992) * C47870 +
             (C26438 * C47872 + C26436 * C31666) * C4619) *
                C47668) *
               C2374 +
           (((C37992 + C37991) * C4619 +
             (C22414 * C31666 +
              (C21709 * C1192 + C22024 + C22024 + C47508 * C1210) * C47872) *
                 C47870) *
                C47668 -
            ((C37383 + C37384) * C47870 + (C37382 + C37381) * C4619) * C47821) *
               C47626) *
              C2745)) /
        (p * q * std::sqrt(p + q));
    d2ee[179] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C31666 +
             C26432 * C47872) *
                C4619 +
            (C37373 + C37374) * C47870) *
               C47581 * C2374 -
           ((C37375 + C37376) * C47870 + (C37374 + C37373) * C4619) * C47581 *
               C47626) *
              C47897 +
          (((C37377 + C37378) * C4619 + (C37379 + C37380) * C47870) * C47581 *
               C47626 -
           ((C37378 + C37377) * C47870 +
            (C26434 * C47872 +
             (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C31666) *
                C4619) *
               C47581 * C2374) *
              C47890 +
          ((((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C31666 +
             C26436 * C47872) *
                C4619 +
            (C37381 + C37382) * C47870) *
               C47581 * C2374 -
           ((C37383 + C37384) * C47870 + (C37382 + C37381) * C4619) * C47581 *
               C47626) *
              C47877 +
          (((C37661 + C37662) * C4619 +
            (C22133 * C31666 +
             (C21709 * C1476 + C22236 + C22236 + C47508 * C1478) * C47872) *
                C47870) *
               C47581 * C47626 -
           ((C37662 + C37661) * C47870 +
            (C26712 * C47872 +
             (C21709 * C122 + C21723 + C21723 + C47508 * C136) * C31666) *
                C4619) *
               C47581 * C2374) *
              C47856)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C31666 +
             C26432 * C47872) *
                C4619 +
            (C37373 + C37374) * C47870) *
               C47581 * C47898 -
           ((C37375 + C37376) * C47870 + (C37374 + C37373) * C4619) * C47581 *
               C47894 +
           ((C37376 + C37375) * C4619 + (C38221 + C38222) * C47870) * C47581 *
               C47884 -
           ((C38223 + C38224) * C47870 + (C38222 + C38221) * C4619) * C47581 *
               C47862) *
              C2482 +
          (((C37377 + C37378) * C4619 + (C37379 + C37380) * C47870) * C47581 *
               C47894 -
           ((C37378 + C37377) * C47870 +
            (C26434 * C47872 +
             (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C31666) *
                C4619) *
               C47581 * C47898 -
           ((C38507 + C38508) * C47870 + (C37380 + C37379) * C4619) * C47581 *
               C47884 +
           ((C38508 + C38507) * C4619 +
            (C22854 * C31666 +
             (C21709 * C6464 + C23004 + C23004 + C47508 * C6468) * C47872) *
                C47870) *
               C47581 * C47862) *
              C47546)) /
            (p * q * std::sqrt(p + q));
    d2ee[180] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C31666 +
              C26432 * C47872) *
                 C4619 +
             (C37373 + C37374) * C47870) *
                C3136 -
            ((C37987 + C37988) * C47870 +
             (C26433 * C47872 + C26432 * C31666) * C4619) *
                C47668) *
               C47622 +
           (((C37988 + C37987) * C4619 + (C38373 + C38374) * C47870) * C47668 -
            ((C37375 + C37376) * C47870 + (C37374 + C37373) * C4619) * C3136) *
               C47629 +
           (((C37376 + C37375) * C4619 + (C38221 + C38222) * C47870) * C3136 -
            ((C38835 + C38836) * C47870 + (C38374 + C38373) * C4619) * C47668) *
               C2742) *
              C47806 +
          ((((C26434 * C31666 + C26435 * C47872) * C4619 +
             (C37989 + C37990) * C47870) *
                C47668 -
            ((C37378 + C37377) * C47870 +
             (C26434 * C47872 +
              (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C31666) *
                 C4619) *
                C3136) *
               C47622 +
           (((C37377 + C37378) * C4619 + (C37379 + C37380) * C47870) * C3136 -
            ((C38703 + C38704) * C47870 + (C37990 + C37989) * C4619) * C47668) *
               C47629 +
           (((C38704 + C38703) * C4619 +
             (C23007 * C31666 +
              (C21709 * C5944 + C23558 + C23558 + C47508 * C5948) * C47872) *
                 C47870) *
                C47668 -
            ((C38507 + C38508) * C47870 + (C37380 + C37379) * C4619) * C3136) *
               C2742) *
              C47546)) /
        (p * q * std::sqrt(p + q));
    d2ee[181] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C31666 +
             C26432 * C47872) *
                C4619 +
            (C37373 + C37374) * C47870) *
               C47664 -
           ((C37987 + C37988) * C47870 +
            (C26433 * C47872 + C26432 * C31666) * C4619) *
               C47671 +
           ((C26433 * C31666 + C28148 * C47872) * C4619 +
            (C38371 + C38372) * C47870) *
               C3644) *
              C47622 +
          (((C37988 + C37987) * C4619 + (C38373 + C38374) * C47870) * C47671 -
           ((C37375 + C37376) * C47870 + (C37374 + C37373) * C4619) * C47664 -
           ((C38375 + C38376) * C47870 + (C38372 + C38371) * C4619) * C3644) *
              C47629 +
          (((C37376 + C37375) * C4619 + (C38221 + C38222) * C47870) * C47664 -
           ((C38835 + C38836) * C47870 + (C38374 + C38373) * C4619) * C47671 +
           ((C38376 + C38375) * C4619 +
            (C22746 * C31666 +
             (C21709 * C23765 + C23773 + C23773 + C47508 * C23767) * C47872) *
                C47870) *
               C3644) *
              C2742) *
         C47535) /
        (p * q * std::sqrt(p + q));
    d2ee[182] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C31666 +
             C26432 * C47872) *
                C4619 +
            (C37373 + C37374) * C47870) *
               C3136 -
           ((C37987 + C37988) * C47870 +
            (C26433 * C47872 + C26432 * C31666) * C4619) *
               C47668) *
              C47898 +
          (((C37988 + C37987) * C4619 + (C38373 + C38374) * C47870) * C47668 -
           ((C37375 + C37376) * C47870 + (C37374 + C37373) * C4619) * C3136) *
              C47894 +
          (((C37376 + C37375) * C4619 + (C38221 + C38222) * C47870) * C3136 -
           ((C38835 + C38836) * C47870 + (C38374 + C38373) * C4619) * C47668) *
              C47884 +
          (((C38836 + C38835) * C4619 +
            (C23115 * C31666 +
             (C21709 * C22720 + C22734 + C22734 + C47508 * C22722) * C47872) *
                C47870) *
               C47668 -
           ((C38223 + C38224) * C47870 + (C38222 + C38221) * C4619) * C3136) *
              C47862) *
         C47535) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C31666 +
              C26432 * C47872) *
                 C4619 +
             (C37373 + C37374) * C47870) *
                C3136 -
            ((C37987 + C37988) * C47870 +
             (C26433 * C47872 + C26432 * C31666) * C4619) *
                C47668) *
               C2374 +
           (((C37988 + C37987) * C4619 + (C38373 + C38374) * C47870) * C47668 -
            ((C37375 + C37376) * C47870 + (C37374 + C37373) * C4619) * C3136) *
               C47626) *
              C47888 +
          ((((C26434 * C31666 + C26435 * C47872) * C4619 +
             (C37989 + C37990) * C47870) *
                C47668 -
            ((C37378 + C37377) * C47870 +
             (C26434 * C47872 +
              (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C31666) *
                 C4619) *
                C3136) *
               C2374 +
           (((C37377 + C37378) * C4619 + (C37379 + C37380) * C47870) * C3136 -
            ((C38703 + C38704) * C47870 + (C37990 + C37989) * C4619) * C47668) *
               C47626) *
              C47875 +
          (((((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C31666 +
              C26436 * C47872) *
                 C4619 +
             (C37381 + C37382) * C47870) *
                C3136 -
            ((C37991 + C37992) * C47870 +
             (C26438 * C47872 + C26436 * C31666) * C4619) *
                C47668) *
               C2374 +
           (((C37992 + C37991) * C4619 +
             (C22414 * C31666 +
              (C21709 * C1192 + C22024 + C22024 + C47508 * C1210) * C47872) *
                 C47870) *
                C47668 -
            ((C37383 + C37384) * C47870 + (C37382 + C37381) * C4619) * C3136) *
               C47626) *
              C47846)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C31666 +
             C26432 * C47872) *
                C4619 +
            (C37373 + C37374) * C47870) *
               C47899 -
           ((C37987 + C37988) * C47870 +
            (C26433 * C47872 + C26432 * C31666) * C4619) *
               C47896 +
           ((C26433 * C31666 + C28148 * C47872) * C4619 +
            (C38371 + C38372) * C47870) *
               C47887 -
           ((C39667 + C39668) * C47870 +
            (C28150 * C47872 + C28148 * C31666) * C4619) *
               C47868) *
              C2374 +
          (((C37988 + C37987) * C4619 + (C38373 + C38374) * C47870) * C47896 -
           ((C37375 + C37376) * C47870 + (C37374 + C37373) * C4619) * C47899 -
           ((C38375 + C38376) * C47870 + (C38372 + C38371) * C4619) * C47887 +
           ((C39668 + C39667) * C4619 +
            (C23778 * C31666 +
             (C21709 * C23398 + C23407 + C23407 + C47508 * C23400) * C47872) *
                C47870) *
               C47868) *
              C47626) *
         C47535) /
            (p * q * std::sqrt(p + q));
    d2ee[183] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C31666 +
              C26432 * C47872) *
                 C4619 +
             (C37373 + C37374) * C47870) *
                C47664 -
            ((C37987 + C37988) * C47870 +
             (C26433 * C47872 + C26432 * C31666) * C4619) *
                C47671 +
            ((C26433 * C31666 + C28148 * C47872) * C4619 +
             (C38371 + C38372) * C47870) *
                C3644) *
               C2374 +
           (((C37988 + C37987) * C4619 + (C38373 + C38374) * C47870) * C47671 -
            ((C37375 + C37376) * C47870 + (C37374 + C37373) * C4619) * C47664 -
            ((C38375 + C38376) * C47870 + (C38372 + C38371) * C4619) * C3644) *
               C47626) *
              C47806 +
          ((((C26434 * C31666 + C26435 * C47872) * C4619 +
             (C37989 + C37990) * C47870) *
                C47671 -
            ((C37378 + C37377) * C47870 +
             (C26434 * C47872 +
              (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C31666) *
                 C4619) *
                C47664 -
            ((C39405 + C39406) * C47870 +
             (C28488 * C47872 + C26435 * C31666) * C4619) *
                C3644) *
               C2374 +
           (((C37377 + C37378) * C4619 + (C37379 + C37380) * C47870) * C47664 -
            ((C38703 + C38704) * C47870 + (C37990 + C37989) * C4619) * C47671 +
            ((C39406 + C39405) * C4619 +
             (C23563 * C31666 +
              (C21709 * C7340 + C23667 + C23667 + C47508 * C7344) * C47872) *
                 C47870) *
                C3644) *
               C47626) *
              C47546)) /
        (p * q * std::sqrt(p + q));
    d2ee[184] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C31666 +
              C26432 * C47872) *
                 C4619 +
             (C37373 + C37374) * C47870) *
                C3136 -
            ((C37987 + C37988) * C47870 +
             (C26433 * C47872 + C26432 * C31666) * C4619) *
                C47668) *
               C2374 +
           (((C37988 + C37987) * C4619 + (C38373 + C38374) * C47870) * C47668 -
            ((C37375 + C37376) * C47870 + (C37374 + C37373) * C4619) * C3136) *
               C47626) *
              C47888 +
          ((((C26434 * C31666 + C26435 * C47872) * C4619 +
             (C37989 + C37990) * C47870) *
                C47668 -
            ((C37378 + C37377) * C47870 +
             (C26434 * C47872 +
              (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C31666) *
                 C4619) *
                C3136) *
               C2374 +
           (((C37377 + C37378) * C4619 + (C37379 + C37380) * C47870) * C3136 -
            ((C38703 + C38704) * C47870 + (C37990 + C37989) * C4619) * C47668) *
               C47626) *
              C47875 +
          (((((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C31666 +
              C26436 * C47872) *
                 C4619 +
             (C37381 + C37382) * C47870) *
                C3136 -
            ((C37991 + C37992) * C47870 +
             (C26438 * C47872 + C26436 * C31666) * C4619) *
                C47668) *
               C2374 +
           (((C37992 + C37991) * C4619 +
             (C22414 * C31666 +
              (C21709 * C1192 + C22024 + C22024 + C47508 * C1210) * C47872) *
                 C47870) *
                C47668 -
            ((C37383 + C37384) * C47870 + (C37382 + C37381) * C4619) * C3136) *
               C47626) *
              C47846)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C31666 +
             C26432 * C47872) *
                C4619 +
            (C37373 + C37374) * C47870) *
               C3136 -
           ((C37987 + C37988) * C47870 +
            (C26433 * C47872 + C26432 * C31666) * C4619) *
               C47668) *
              C47898 +
          (((C37988 + C37987) * C4619 + (C38373 + C38374) * C47870) * C47668 -
           ((C37375 + C37376) * C47870 + (C37374 + C37373) * C4619) * C3136) *
              C47894 +
          (((C37376 + C37375) * C4619 + (C38221 + C38222) * C47870) * C3136 -
           ((C38835 + C38836) * C47870 + (C38374 + C38373) * C4619) * C47668) *
              C47884 +
          (((C38836 + C38835) * C4619 +
            (C23115 * C31666 +
             (C21709 * C22720 + C22734 + C22734 + C47508 * C22722) * C47872) *
                C47870) *
               C47668 -
           ((C38223 + C38224) * C47870 + (C38222 + C38221) * C4619) * C3136) *
              C47862) *
         C47535) /
            (p * q * std::sqrt(p + q));
    d2ee[185] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C31666 +
             C26432 * C47872) *
                C4619 +
            (C37373 + C37374) * C47870) *
               C47581 * C1318 -
           ((C37375 + C37376) * C47870 + (C37374 + C37373) * C4619) * C47581 *
               C1319 +
           ((C37376 + C37375) * C4619 + (C38221 + C38222) * C47870) * C47581 *
               C1320 -
           ((C38223 + C38224) * C47870 + (C38222 + C38221) * C4619) * C47581 *
               C47862) *
              C47806 +
          (((C37377 + C37378) * C4619 + (C37379 + C37380) * C47870) * C47581 *
               C1319 -
           ((C37378 + C37377) * C47870 +
            (C26434 * C47872 +
             (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C31666) *
                C4619) *
               C47581 * C1318 -
           ((C38507 + C38508) * C47870 + (C37380 + C37379) * C4619) * C47581 *
               C1320 +
           ((C38508 + C38507) * C4619 +
            (C22854 * C31666 +
             (C21709 * C6464 + C23004 + C23004 + C47508 * C6468) * C47872) *
                C47870) *
               C47581 * C47862) *
              C47546)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C31666 +
             C26432 * C47872) *
                C4619 +
            (C37373 + C37374) * C47870) *
               C47581 * C47820 -
           ((C37375 + C37376) * C47870 + (C37374 + C37373) * C4619) * C47581 *
               C47626) *
              C580 +
          (((C37377 + C37378) * C4619 + (C37379 + C37380) * C47870) * C47581 *
               C47626 -
           ((C37378 + C37377) * C47870 +
            (C26434 * C47872 +
             (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C31666) *
                C4619) *
               C47581 * C47820) *
              C581 +
          ((((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C31666 +
             C26436 * C47872) *
                C4619 +
            (C37381 + C37382) * C47870) *
               C47581 * C47820 -
           ((C37383 + C37384) * C47870 + (C37382 + C37381) * C4619) * C47581 *
               C47626) *
              C582 +
          (((C37661 + C37662) * C4619 +
            (C22133 * C31666 +
             (C21709 * C1476 + C22236 + C22236 + C47508 * C1478) * C47872) *
                C47870) *
               C47581 * C47626 -
           ((C37662 + C37661) * C47870 +
            (C26712 * C47872 +
             (C21709 * C122 + C21723 + C21723 + C47508 * C136) * C31666) *
                C4619) *
               C47581 * C47820) *
              C47856)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C31666 +
              C26432 * C47872) *
                 C4619 +
             (C37373 + C37374) * C47870) *
                C1702 -
            ((C37987 + C37988) * C47870 +
             (C26433 * C47872 + C26432 * C31666) * C4619) *
                C1703 +
            ((C26433 * C31666 + C28148 * C47872) * C4619 +
             (C38371 + C38372) * C47870) *
                C47855) *
               C47820 +
           (((C37988 + C37987) * C4619 + (C38373 + C38374) * C47870) * C1703 -
            ((C37375 + C37376) * C47870 + (C37374 + C37373) * C4619) * C1702 -
            ((C38375 + C38376) * C47870 + (C38372 + C38371) * C4619) * C47855) *
               C47626) *
              C47806 +
          ((((C26434 * C31666 + C26435 * C47872) * C4619 +
             (C37989 + C37990) * C47870) *
                C1703 -
            ((C37378 + C37377) * C47870 +
             (C26434 * C47872 +
              (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C31666) *
                 C4619) *
                C1702 -
            ((C39405 + C39406) * C47870 +
             (C28488 * C47872 + C26435 * C31666) * C4619) *
                C47855) *
               C47820 +
           (((C37377 + C37378) * C4619 + (C37379 + C37380) * C47870) * C1702 -
            ((C38703 + C38704) * C47870 + (C37990 + C37989) * C4619) * C1703 +
            ((C39406 + C39405) * C4619 +
             (C23563 * C31666 +
              (C21709 * C7340 + C23667 + C23667 + C47508 * C7344) * C47872) *
                 C47870) *
                C47855) *
               C47626) *
              C47546)) /
            (p * q * std::sqrt(p + q));
    d2ee[186] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C31666 +
             C26432 * C47872) *
                C4619 +
            (C37373 + C37374) * C47870) *
               C47821 -
           ((C37987 + C37988) * C47870 +
            (C26433 * C47872 + C26432 * C31666) * C4619) *
               C47668) *
              C1318 +
          (((C37988 + C37987) * C4619 + (C38373 + C38374) * C47870) * C47668 -
           ((C37375 + C37376) * C47870 + (C37374 + C37373) * C4619) * C47821) *
              C1319 +
          (((C37376 + C37375) * C4619 + (C38221 + C38222) * C47870) * C47821 -
           ((C38835 + C38836) * C47870 + (C38374 + C38373) * C4619) * C47668) *
              C1320 +
          (((C38836 + C38835) * C4619 +
            (C23115 * C31666 +
             (C21709 * C22720 + C22734 + C22734 + C47508 * C22722) * C47872) *
                C47870) *
               C47668 -
           ((C38223 + C38224) * C47870 + (C38222 + C38221) * C4619) * C47821) *
              C47862) *
         C47535) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C31666 +
              C26432 * C47872) *
                 C4619 +
             (C37373 + C37374) * C47870) *
                C47821 -
            ((C37987 + C37988) * C47870 +
             (C26433 * C47872 + C26432 * C31666) * C4619) *
                C47668) *
               C47820 +
           (((C37988 + C37987) * C4619 +
             (C22410 * C31666 + C22744 * C47872) * C47870) *
                C47668 -
            ((C37375 + C37376) * C47870 + (C37374 + C37373) * C4619) * C47821) *
               C47626) *
              C268 +
          ((((C26434 * C31666 + C26435 * C47872) * C4619 +
             (C37989 + C37990) * C47870) *
                C47668 -
            ((C37378 + C37377) * C47870 +
             (C26434 * C47872 +
              (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C31666) *
                 C4619) *
                C47821) *
               C47820 +
           (((C37377 + C37378) * C4619 + (C37379 + C37380) * C47870) * C47821 -
            ((C23563 * C47872 + C22413 * C31666) * C47870 +
             (C37990 + C37989) * C4619) *
                C47668) *
               C47626) *
              C269 +
          (((((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C31666 +
              C26436 * C47872) *
                 C4619 +
             (C37381 + C37382) * C47870) *
                C47821 -
            ((C37991 + C37992) * C47870 +
             (C26438 * C47872 + C26436 * C31666) * C4619) *
                C47668) *
               C47820 +
           (((C37992 + C37991) * C4619 +
             (C22414 * C31666 +
              (C21709 * C1192 + C22024 + C22024 + C47508 * C1210) * C47872) *
                 C47870) *
                C47668 -
            ((C37383 + C37384) * C47870 + (C37382 + C37381) * C4619) * C47821) *
               C47626) *
              C47846)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C31666 +
             C26432 * C47872) *
                C4619 +
            (C37373 + C37374) * C47870) *
               C2156 -
           ((C37987 + C37988) * C47870 +
            (C26433 * C47872 + C26432 * C31666) * C4619) *
               C2157 +
           ((C26433 * C31666 + C28148 * C47872) * C4619 +
            (C38371 + C38372) * C47870) *
               C2158 -
           ((C39667 + C39668) * C47870 +
            (C28150 * C47872 + C28148 * C31666) * C4619) *
               C47868) *
              C47820 +
          (((C37988 + C37987) * C4619 + (C38373 + C38374) * C47870) * C2157 -
           ((C37375 + C37376) * C47870 + (C37374 + C37373) * C4619) * C2156 -
           ((C38375 + C38376) * C47870 + (C38372 + C38371) * C4619) * C2158 +
           ((C39668 + C39667) * C4619 +
            (C23778 * C31666 +
             (C21709 * C23398 + C23407 + C23407 + C47508 * C23400) * C47872) *
                C47870) *
               C47868) *
              C47626) *
         C47535) /
            (p * q * std::sqrt(p + q));
    d2ee[187] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C31666 +
                C26432 * C47872) *
                   C4619 +
               (C21879 * C31666 + C22411 * C47872) * C47870) *
                  C47581 * C47563 * C108 -
              ((C22412 * C47872 + C21882 * C31666) * C47870 +
               (C26434 * C47872 +
                (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C31666) *
                   C4619) *
                  C47581 * C47563 * C109 +
              (((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C31666 +
                C26436 * C47872) *
                   C4619 +
               (C21885 * C31666 + C22415 * C47872) * C47870) *
                  C47581 * C47563 * C110 -
              ((C26574 * C47872 + C22132 * C31666) * C47870 +
               (C26712 * C47872 +
                (C21709 * C122 + C21723 + C21723 + C47508 * C136) * C31666) *
                   C4619) *
                  C47581 * C47563 * C111 +
              (((C21709 * C123 + C21724 + C21724 + C47508 * C137) * C31666 +
                (C21709 * C440 + C26096 + C26096 + C47508 * C460) * C47872) *
                   C4619 +
               ((C21709 * C279 + C21725 + C21725 + C47508 * C299) * C31666 +
                (C21709 * C846 + C26097 + C26097 + C47508 * C856) * C47872) *
                   C47870) *
                  C47581 * C47563 * C112) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C31666 +
                 C26432 * C47872) *
                    C4619 +
                (C37373 + C37374) * C47870) *
                   C47581 * C47891 -
               ((C37375 + C37376) * C47870 + (C37374 + C37373) * C4619) *
                   C47581 * C47879 +
               ((C37376 + C37375) * C4619 +
                (C21881 * C31666 + C22745 * C47872) * C47870) *
                   C47581 * C47852) *
                  C268 +
              (((C37377 + C37378) * C4619 + (C37379 + C37380) * C47870) *
                   C47581 * C47879 -
               ((C37378 + C37377) * C47870 +
                (C26434 * C47872 +
                 (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C31666) *
                    C4619) *
                   C47581 * C47891 -
               ((C23007 * C47872 + C21884 * C31666) * C47870 +
                (C37380 + C37379) * C4619) *
                   C47581 * C47852) *
                  C269 +
              ((((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C31666 +
                 C26436 * C47872) *
                    C4619 +
                (C37381 + C37382) * C47870) *
                   C47581 * C47891 -
               ((C37383 + C37384) * C47870 + (C37382 + C37381) * C4619) *
                   C47581 * C47879 +
               ((C37384 + C37383) * C4619 +
                (C21887 * C31666 +
                 (C21709 * C1582 + C22397 + C22397 + C47508 * C1588) * C47872) *
                    C47870) *
                   C47581 * C47852) *
                  C47846)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C31666 +
             C26432 * C47872) *
                C4619 +
            (C37373 + C37374) * C47870) *
               C47892 -
           ((C22743 * C47872 + C22411 * C31666) * C47870 +
            (C26433 * C47872 + C26432 * C31666) * C4619) *
               C47881 +
           ((C26433 * C31666 + C28148 * C47872) * C4619 +
            (C22743 * C31666 + C23779 * C47872) * C47870) *
               C47855) *
              C47563 * C268 +
          (((C26434 * C31666 + C26435 * C47872) * C4619 +
            (C22412 * C31666 + C23564 * C47872) * C47870) *
               C47881 -
           ((C37378 + C37377) * C47870 +
            (C26434 * C47872 +
             (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C31666) *
                C4619) *
               C47892 -
           ((C28350 * C47872 + C23564 * C31666) * C47870 +
            (C28488 * C47872 + C26435 * C31666) * C4619) *
               C47855) *
              C47563 * C269 +
          ((((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C31666 +
             C26436 * C47872) *
                C4619 +
            (C37381 + C37382) * C47870) *
               C47892 -
           ((C26437 * C47872 + C22415 * C31666) * C47870 +
            (C26438 * C47872 + C26436 * C31666) * C4619) *
               C47881 +
           ((C26438 * C31666 +
             (C21709 * C1882 + C26416 + C26416 + C47508 * C1894) * C47872) *
                C4619 +
            (C26437 * C31666 +
             (C21709 * C2266 + C26417 + C26417 + C47508 * C2272) * C47872) *
                C47870) *
               C47855) *
              C47563 * C47846)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C31666 +
             C26432 * C47872) *
                C4619 +
            (C37373 + C37374) * C47870) *
               C47581 * C976 -
           ((C37375 + C37376) * C47870 + (C37374 + C37373) * C4619) * C47581 *
               C977 +
           ((C37376 + C37375) * C4619 +
            (C21881 * C31666 + C22745 * C47872) * C47870) *
               C47581 * C47852) *
              C47888 +
          (((C37377 + C37378) * C4619 + (C37379 + C37380) * C47870) * C47581 *
               C977 -
           ((C37378 + C37377) * C47870 +
            (C26434 * C47872 +
             (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C31666) *
                C4619) *
               C47581 * C976 -
           ((C23007 * C47872 + C21884 * C31666) * C47870 +
            (C37380 + C37379) * C4619) *
               C47581 * C47852) *
              C47875 +
          ((((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C31666 +
             C26436 * C47872) *
                C4619 +
            (C37381 + C37382) * C47870) *
               C47581 * C976 -
           ((C37383 + C37384) * C47870 + (C37382 + C37381) * C4619) * C47581 *
               C977 +
           ((C37384 + C37383) * C4619 +
            (C21887 * C31666 +
             (C21709 * C1582 + C22397 + C22397 + C47508 * C1588) * C47872) *
                C47870) *
               C47581 * C47852) *
              C47846)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C31666 +
            C26432 * C47872) *
               C4619 +
           (C37373 + C37374) * C47870) *
              C47581 * C1044 -
          ((C37375 + C37376) * C47870 + (C37374 + C37373) * C4619) * C47581 *
              C1045 +
          ((C37376 + C37375) * C4619 + (C38221 + C38222) * C47870) * C47581 *
              C1046 -
          ((C38223 + C38224) * C47870 + (C38222 + C38221) * C4619) * C47581 *
              C1047 +
          ((C38224 + C38223) * C4619 +
           (C22608 * C31666 +
            (C21709 * C23106 + C23112 + C23112 + C47508 * C23108) * C47872) *
               C47870) *
              C47581 * C1048) *
         C47535) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C31666 +
             C26432 * C47872) *
                C4619 +
            (C37373 + C37374) * C47870) *
               C47892 -
           ((C37987 + C37988) * C47870 +
            (C26433 * C47872 + C26432 * C31666) * C4619) *
               C47881 +
           ((C26433 * C31666 + C28148 * C47872) * C4619 +
            (C38371 + C38372) * C47870) *
               C47855) *
              C976 +
          (((C37988 + C37987) * C4619 + (C38373 + C38374) * C47870) * C47881 -
           ((C37375 + C37376) * C47870 + (C37374 + C37373) * C4619) * C47892 -
           ((C38375 + C38376) * C47870 + (C38372 + C38371) * C4619) * C47855) *
              C977 +
          (((C37376 + C37375) * C4619 + (C38221 + C38222) * C47870) * C47892 -
           ((C22746 * C47872 + C22745 * C31666) * C47870 +
            (C38374 + C38373) * C4619) *
               C47881 +
           ((C38376 + C38375) * C4619 +
            (C22746 * C31666 +
             (C21709 * C23765 + C23773 + C23773 + C47508 * C23767) * C47872) *
                C47870) *
               C47855) *
              C47852) *
         C47535) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C31666 +
             C26432 * C47872) *
                C4619 +
            (C37373 + C37374) * C47870) *
               C1702 -
           ((C37987 + C37988) * C47870 +
            (C26433 * C47872 + C26432 * C31666) * C4619) *
               C1703 +
           ((C26433 * C31666 + C28148 * C47872) * C4619 +
            (C38371 + C38372) * C47870) *
               C47855) *
              C47563 * C47888 +
          (((C26434 * C31666 + C26435 * C47872) * C4619 +
            (C37989 + C37990) * C47870) *
               C1703 -
           ((C37378 + C37377) * C47870 +
            (C26434 * C47872 +
             (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C31666) *
                C4619) *
               C1702 -
           ((C28350 * C47872 + C23564 * C31666) * C47870 +
            (C28488 * C47872 + C26435 * C31666) * C4619) *
               C47855) *
              C47563 * C47875 +
          ((((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C31666 +
             C26436 * C47872) *
                C4619 +
            (C37381 + C37382) * C47870) *
               C1702 -
           ((C37991 + C37992) * C47870 +
            (C26438 * C47872 + C26436 * C31666) * C4619) *
               C1703 +
           ((C26438 * C31666 +
             (C21709 * C1882 + C26416 + C26416 + C47508 * C1894) * C47872) *
                C4619 +
            (C26437 * C31666 +
             (C21709 * C2266 + C26417 + C26417 + C47508 * C2272) * C47872) *
                C47870) *
               C47855) *
              C47563 * C47846)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C31666 +
             C26432 * C47872) *
                C4619 +
            (C37373 + C37374) * C47870) *
               C1702 -
           ((C37987 + C37988) * C47870 +
            (C26433 * C47872 + C26432 * C31666) * C4619) *
               C1703 +
           ((C26433 * C31666 + C28148 * C47872) * C4619 +
            (C38371 + C38372) * C47870) *
               C47855) *
              C47891 +
          (((C37988 + C37987) * C4619 + (C38373 + C38374) * C47870) * C1703 -
           ((C37375 + C37376) * C47870 + (C37374 + C37373) * C4619) * C1702 -
           ((C38375 + C38376) * C47870 + (C38372 + C38371) * C4619) * C47855) *
              C47879 +
          (((C37376 + C37375) * C4619 + (C38221 + C38222) * C47870) * C1702 -
           ((C38835 + C38836) * C47870 + (C38374 + C38373) * C4619) * C1703 +
           ((C38376 + C38375) * C4619 +
            (C22746 * C31666 +
             (C21709 * C23765 + C23773 + C23773 + C47508 * C23767) * C47872) *
                C47870) *
               C47855) *
              C47852) *
         C47535) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C31666 +
            C26432 * C47872) *
               C4619 +
           (C37373 + C37374) * C47870) *
              C1877 -
          ((C37987 + C37988) * C47870 +
           (C26433 * C47872 + C26432 * C31666) * C4619) *
              C1878 +
          ((C26433 * C31666 + C28148 * C47872) * C4619 +
           (C38371 + C38372) * C47870) *
              C1879 -
          ((C28149 * C47872 + C23779 * C31666) * C47870 +
           (C28150 * C47872 + C28148 * C31666) * C4619) *
              C1880 +
          ((C28150 * C31666 +
            (C21709 * C12429 + C28140 + C28140 + C47508 * C12433) * C47872) *
               C4619 +
           (C28149 * C31666 +
            (C21709 * C28130 + C28141 + C28141 + C47508 * C28132) * C47872) *
               C47870) *
              C1881) *
         C47563 * C47535) /
            (p * q * std::sqrt(p + q));
    d2ee[188] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C31666 +
              C26432 * C47872) *
                 C4619 +
             (C37373 + C37374) * C47870) *
                C47821 -
            ((C37987 + C37988) * C47870 +
             (C26433 * C47872 + C26432 * C31666) * C4619) *
                C47668) *
               C976 +
           (((C37988 + C37987) * C4619 + (C38373 + C38374) * C47870) * C47668 -
            ((C37375 + C37376) * C47870 + (C37374 + C37373) * C4619) * C47821) *
               C977 +
           (((C37376 + C37375) * C4619 + (C38221 + C38222) * C47870) * C47821 -
            ((C22746 * C47872 + C22745 * C31666) * C47870 +
             (C38374 + C38373) * C4619) *
                C47668) *
               C47852) *
              C47806 +
          ((((C26434 * C31666 + C26435 * C47872) * C4619 +
             (C37989 + C37990) * C47870) *
                C47668 -
            ((C37378 + C37377) * C47870 +
             (C26434 * C47872 +
              (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C31666) *
                 C4619) *
                C47821) *
               C976 +
           (((C37377 + C37378) * C4619 + (C37379 + C37380) * C47870) * C47821 -
            ((C38703 + C38704) * C47870 + (C37990 + C37989) * C4619) * C47668) *
               C977 +
           (((C38704 + C38703) * C4619 +
             (C23007 * C31666 +
              (C21709 * C5944 + C23558 + C23558 + C47508 * C5948) * C47872) *
                 C47870) *
                C47668 -
            ((C38507 + C38508) * C47870 + (C37380 + C37379) * C4619) * C47821) *
               C47852) *
              C47546)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C31666 +
             C26432 * C47872) *
                C4619 +
            (C37373 + C37374) * C47870) *
               C47821 -
           ((C22743 * C47872 + C22411 * C31666) * C47870 +
            (C26433 * C47872 + C26432 * C31666) * C4619) *
               C47668) *
              C47563 * C580 +
          (((C26434 * C31666 + C26435 * C47872) * C4619 +
            (C22412 * C31666 + C23564 * C47872) * C47870) *
               C47668 -
           ((C37378 + C37377) * C47870 +
            (C26434 * C47872 +
             (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C31666) *
                C4619) *
               C47821) *
              C47563 * C581 +
          ((((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C31666 +
             C26436 * C47872) *
                C4619 +
            (C37381 + C37382) * C47870) *
               C47821 -
           ((C26437 * C47872 + C22415 * C31666) * C47870 +
            (C26438 * C47872 + C26436 * C31666) * C4619) *
               C47668) *
              C47563 * C582 +
          (((C26712 * C31666 +
             (C21709 * C439 + C26708 + C26708 + C47508 * C459) * C47872) *
                C4619 +
            (C26574 * C31666 +
             (C21709 * C2052 + C26709 + C26709 + C47508 * C2054) * C47872) *
                C47870) *
               C47668 -
           ((C37662 + C37661) * C47870 +
            (C26712 * C47872 +
             (C21709 * C122 + C21723 + C21723 + C47508 * C136) * C31666) *
                C4619) *
               C47821) *
              C47563 * C47856)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C31666 +
             C26432 * C47872) *
                C4619 +
            (C37373 + C37374) * C47870) *
               C2156 -
           ((C37987 + C37988) * C47870 +
            (C26433 * C47872 + C26432 * C31666) * C4619) *
               C2157 +
           ((C26433 * C31666 + C28148 * C47872) * C4619 +
            (C38371 + C38372) * C47870) *
               C2158 -
           ((C28149 * C47872 + C23779 * C31666) * C47870 +
            (C28150 * C47872 + C28148 * C31666) * C4619) *
               C47868) *
              C47563 * C47806 +
          (((C26434 * C31666 + C26435 * C47872) * C4619 +
            (C37989 + C37990) * C47870) *
               C2157 -
           ((C37378 + C37377) * C47870 +
            (C26434 * C47872 +
             (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C31666) *
                C4619) *
               C2156 -
           ((C39405 + C39406) * C47870 +
            (C28488 * C47872 + C26435 * C31666) * C4619) *
               C2158 +
           ((C28488 * C31666 +
             (C21709 * C1886 + C28484 + C28484 + C47508 * C1898) * C47872) *
                C4619 +
            (C28350 * C31666 +
             (C21709 * C6856 + C28485 + C28485 + C47508 * C6860) * C47872) *
                C47870) *
               C47868) *
              C47563 * C47546)) /
            (p * q * std::sqrt(p + q));
    d2ee[189] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C31666 +
             C26432 * C47872) *
                C4619 +
            (C37373 + C37374) * C47870) *
               C47581 * C47891 -
           ((C37375 + C37376) * C47870 + (C37374 + C37373) * C4619) * C47581 *
               C47879 +
           ((C37376 + C37375) * C4619 +
            (C21881 * C31666 + C22745 * C47872) * C47870) *
               C47581 * C47852) *
              C268 +
          (((C37377 + C37378) * C4619 + (C37379 + C37380) * C47870) * C47581 *
               C47879 -
           ((C37378 + C37377) * C47870 +
            (C26434 * C47872 +
             (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C31666) *
                C4619) *
               C47581 * C47891 -
           ((C23007 * C47872 + C21884 * C31666) * C47870 +
            (C37380 + C37379) * C4619) *
               C47581 * C47852) *
              C269 +
          ((((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C31666 +
             C26436 * C47872) *
                C4619 +
            (C37381 + C37382) * C47870) *
               C47581 * C47891 -
           ((C37383 + C37384) * C47870 + (C37382 + C37381) * C4619) * C47581 *
               C47879 +
           ((C37384 + C37383) * C4619 +
            (C21887 * C31666 +
             (C21709 * C1582 + C22397 + C22397 + C47508 * C1588) * C47872) *
                C47870) *
               C47581 * C47852) *
              C47846)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C31666 +
            C26432 * C47872) *
               C4619 +
           (C21879 * C31666 + C22411 * C47872) * C47870) *
              C47581 * C47563 * C108 -
          ((C22412 * C47872 + C21882 * C31666) * C47870 +
           (C26434 * C47872 +
            (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C31666) *
               C4619) *
              C47581 * C47563 * C109 +
          (((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C31666 +
            C26436 * C47872) *
               C4619 +
           (C21885 * C31666 + C22415 * C47872) * C47870) *
              C47581 * C47563 * C110 -
          ((C26574 * C47872 + C22132 * C31666) * C47870 +
           (C26712 * C47872 +
            (C21709 * C122 + C21723 + C21723 + C47508 * C136) * C31666) *
               C4619) *
              C47581 * C47563 * C111 +
          (((C21709 * C123 + C21724 + C21724 + C47508 * C137) * C31666 +
            (C21709 * C440 + C26096 + C26096 + C47508 * C460) * C47872) *
               C4619 +
           ((C21709 * C279 + C21725 + C21725 + C47508 * C299) * C31666 +
            (C21709 * C846 + C26097 + C26097 + C47508 * C856) * C47872) *
               C47870) *
              C47581 * C47563 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C31666 +
             C26432 * C47872) *
                C4619 +
            (C37373 + C37374) * C47870) *
               C47581 * C976 -
           ((C37375 + C37376) * C47870 + (C37374 + C37373) * C4619) * C47581 *
               C977 +
           ((C37376 + C37375) * C4619 +
            (C21881 * C31666 + C22745 * C47872) * C47870) *
               C47581 * C47852) *
              C47888 +
          (((C37377 + C37378) * C4619 + (C37379 + C37380) * C47870) * C47581 *
               C977 -
           ((C37378 + C37377) * C47870 +
            (C26434 * C47872 +
             (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C31666) *
                C4619) *
               C47581 * C976 -
           ((C23007 * C47872 + C21884 * C31666) * C47870 +
            (C37380 + C37379) * C4619) *
               C47581 * C47852) *
              C47875 +
          ((((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C31666 +
             C26436 * C47872) *
                C4619 +
            (C37381 + C37382) * C47870) *
               C47581 * C976 -
           ((C37383 + C37384) * C47870 + (C37382 + C37381) * C4619) * C47581 *
               C977 +
           ((C37384 + C37383) * C4619 +
            (C21887 * C31666 +
             (C21709 * C1582 + C22397 + C22397 + C47508 * C1588) * C47872) *
                C47870) *
               C47581 * C47852) *
              C47846)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C31666 +
            C26432 * C47872) *
               C4619 +
           (C37373 + C37374) * C47870) *
              C47581 * C1044 -
          ((C37375 + C37376) * C47870 + (C37374 + C37373) * C4619) * C47581 *
              C1045 +
          ((C37376 + C37375) * C4619 + (C38221 + C38222) * C47870) * C47581 *
              C1046 -
          ((C38223 + C38224) * C47870 + (C38222 + C38221) * C4619) * C47581 *
              C1047 +
          ((C38224 + C38223) * C4619 +
           (C22608 * C31666 +
            (C21709 * C23106 + C23112 + C23112 + C47508 * C23108) * C47872) *
               C47870) *
              C47581 * C1048) *
         C47535) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C31666 +
             C26432 * C47872) *
                C4619 +
            (C37373 + C37374) * C47870) *
               C1702 -
           ((C37987 + C37988) * C47870 +
            (C26433 * C47872 + C26432 * C31666) * C4619) *
               C1703 +
           ((C26433 * C31666 + C28148 * C47872) * C4619 +
            (C38371 + C38372) * C47870) *
               C47855) *
              C47563 * C47888 +
          (((C26434 * C31666 + C26435 * C47872) * C4619 +
            (C37989 + C37990) * C47870) *
               C1703 -
           ((C37378 + C37377) * C47870 +
            (C26434 * C47872 +
             (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C31666) *
                C4619) *
               C1702 -
           ((C28350 * C47872 + C23564 * C31666) * C47870 +
            (C28488 * C47872 + C26435 * C31666) * C4619) *
               C47855) *
              C47563 * C47875 +
          ((((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C31666 +
             C26436 * C47872) *
                C4619 +
            (C37381 + C37382) * C47870) *
               C1702 -
           ((C37991 + C37992) * C47870 +
            (C26438 * C47872 + C26436 * C31666) * C4619) *
               C1703 +
           ((C26438 * C31666 +
             (C21709 * C1882 + C26416 + C26416 + C47508 * C1894) * C47872) *
                C4619 +
            (C26437 * C31666 +
             (C21709 * C2266 + C26417 + C26417 + C47508 * C2272) * C47872) *
                C47870) *
               C47855) *
              C47563 * C47846)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C31666 +
             C26432 * C47872) *
                C4619 +
            (C37373 + C37374) * C47870) *
               C1702 -
           ((C37987 + C37988) * C47870 +
            (C26433 * C47872 + C26432 * C31666) * C4619) *
               C1703 +
           ((C26433 * C31666 + C28148 * C47872) * C4619 +
            (C38371 + C38372) * C47870) *
               C47855) *
              C47891 +
          (((C37988 + C37987) * C4619 + (C38373 + C38374) * C47870) * C1703 -
           ((C37375 + C37376) * C47870 + (C37374 + C37373) * C4619) * C1702 -
           ((C38375 + C38376) * C47870 + (C38372 + C38371) * C4619) * C47855) *
              C47879 +
          (((C37376 + C37375) * C4619 + (C38221 + C38222) * C47870) * C1702 -
           ((C38835 + C38836) * C47870 + (C38374 + C38373) * C4619) * C1703 +
           ((C38376 + C38375) * C4619 +
            (C22746 * C31666 +
             (C21709 * C23765 + C23773 + C23773 + C47508 * C23767) * C47872) *
                C47870) *
               C47855) *
              C47852) *
         C47535) /
            (p * q * std::sqrt(p + q));
    d2ee[190] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C31666 +
              C26432 * C47872) *
                 C4619 +
             (C37373 + C37374) * C47870) *
                C3136 -
            ((C37987 + C37988) * C47870 +
             (C26433 * C47872 + C26432 * C31666) * C4619) *
                C47668) *
               C47820 +
           (((C37988 + C37987) * C4619 + (C38373 + C38374) * C47870) * C47668 -
            ((C37375 + C37376) * C47870 + (C37374 + C37373) * C4619) * C3136) *
               C47626) *
              C47540 +
          ((((C26434 * C31666 + C26435 * C47872) * C4619 +
             (C37989 + C37990) * C47870) *
                C47668 -
            ((C37378 + C37377) * C47870 +
             (C26434 * C47872 +
              (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C31666) *
                 C4619) *
                C3136) *
               C47820 +
           (((C37377 + C37378) * C4619 + (C37379 + C37380) * C47870) * C3136 -
            ((C38703 + C38704) * C47870 + (C37990 + C37989) * C4619) * C47668) *
               C47626) *
              C47549 +
          (((((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C31666 +
              C26436 * C47872) *
                 C4619 +
             (C37381 + C37382) * C47870) *
                C3136 -
            ((C37991 + C37992) * C47870 +
             (C26438 * C47872 + C26436 * C31666) * C4619) *
                C47668) *
               C47820 +
           (((C37992 + C37991) * C4619 +
             (C22414 * C31666 +
              (C21709 * C1192 + C22024 + C22024 + C47508 * C1210) * C47872) *
                 C47870) *
                C47668 -
            ((C37383 + C37384) * C47870 + (C37382 + C37381) * C4619) * C3136) *
               C47626) *
              C2745)) /
        (p * q * std::sqrt(p + q));
    d2ee[191] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C31666 +
              C26432 * C47872) *
                 C4619 +
             (C37373 + C37374) * C47870) *
                C47664 -
            ((C37987 + C37988) * C47870 +
             (C26433 * C47872 + C26432 * C31666) * C4619) *
                C47671 +
            ((C26433 * C31666 + C28148 * C47872) * C4619 +
             (C38371 + C38372) * C47870) *
                C3644) *
               C47820 +
           (((C37988 + C37987) * C4619 + (C38373 + C38374) * C47870) * C47671 -
            ((C37375 + C37376) * C47870 + (C37374 + C37373) * C4619) * C47664 -
            ((C38375 + C38376) * C47870 + (C38372 + C38371) * C4619) * C3644) *
               C47626) *
              C2482 +
          ((((C26434 * C31666 + C26435 * C47872) * C4619 +
             (C37989 + C37990) * C47870) *
                C47671 -
            ((C37378 + C37377) * C47870 +
             (C26434 * C47872 +
              (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C31666) *
                 C4619) *
                C47664 -
            ((C39405 + C39406) * C47870 +
             (C28488 * C47872 + C26435 * C31666) * C4619) *
                C3644) *
               C47820 +
           (((C37377 + C37378) * C4619 + (C37379 + C37380) * C47870) * C47664 -
            ((C38703 + C38704) * C47870 + (C37990 + C37989) * C4619) * C47671 +
            ((C39406 + C39405) * C4619 +
             (C23563 * C31666 +
              (C21709 * C7340 + C23667 + C23667 + C47508 * C7344) * C47872) *
                 C47870) *
                C3644) *
               C47626) *
              C47546)) /
        (p * q * std::sqrt(p + q));
    d2ee[192] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C31666 +
              C26432 * C47872) *
                 C4619 +
             (C37373 + C37374) * C47870) *
                C3136 -
            ((C37987 + C37988) * C47870 +
             (C26433 * C47872 + C26432 * C31666) * C4619) *
                C47668) *
               C47891 +
           (((C37988 + C37987) * C4619 + (C38373 + C38374) * C47870) * C47668 -
            ((C37375 + C37376) * C47870 + (C37374 + C37373) * C4619) * C3136) *
               C47879 +
           (((C37376 + C37375) * C4619 + (C38221 + C38222) * C47870) * C3136 -
            ((C38835 + C38836) * C47870 + (C38374 + C38373) * C4619) * C47668) *
               C47852) *
              C2482 +
          ((((C26434 * C31666 + C26435 * C47872) * C4619 +
             (C37989 + C37990) * C47870) *
                C47668 -
            ((C37378 + C37377) * C47870 +
             (C26434 * C47872 +
              (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C31666) *
                 C4619) *
                C3136) *
               C47891 +
           (((C37377 + C37378) * C4619 + (C37379 + C37380) * C47870) * C3136 -
            ((C38703 + C38704) * C47870 + (C37990 + C37989) * C4619) * C47668) *
               C47879 +
           (((C38704 + C38703) * C4619 +
             (C23007 * C31666 +
              (C21709 * C5944 + C23558 + C23558 + C47508 * C5948) * C47872) *
                 C47870) *
                C47668 -
            ((C38507 + C38508) * C47870 + (C37380 + C37379) * C4619) * C3136) *
               C47852) *
              C47546)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C31666 +
             C26432 * C47872) *
                C4619 +
            (C37373 + C37374) * C47870) *
               C3136 -
           ((C37987 + C37988) * C47870 +
            (C26433 * C47872 + C26432 * C31666) * C4619) *
               C47668) *
              C47563 * C47897 +
          (((C26434 * C31666 + C26435 * C47872) * C4619 +
            (C37989 + C37990) * C47870) *
               C47668 -
           ((C37378 + C37377) * C47870 +
            (C26434 * C47872 +
             (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C31666) *
                C4619) *
               C3136) *
              C47563 * C47890 +
          ((((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C31666 +
             C26436 * C47872) *
                C4619 +
            (C37381 + C37382) * C47870) *
               C3136 -
           ((C37991 + C37992) * C47870 +
            (C26438 * C47872 + C26436 * C31666) * C4619) *
               C47668) *
              C47563 * C47877 +
          (((C26712 * C31666 +
             (C21709 * C439 + C26708 + C26708 + C47508 * C459) * C47872) *
                C4619 +
            (C26574 * C31666 +
             (C21709 * C2052 + C26709 + C26709 + C47508 * C2054) * C47872) *
                C47870) *
               C47668 -
           ((C37662 + C37661) * C47870 +
            (C26712 * C47872 +
             (C21709 * C122 + C21723 + C21723 + C47508 * C136) * C31666) *
                C4619) *
               C3136) *
              C47563 * C47856)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C31666 +
             C26432 * C47872) *
                C4619 +
            (C37373 + C37374) * C47870) *
               C47899 -
           ((C37987 + C37988) * C47870 +
            (C26433 * C47872 + C26432 * C31666) * C4619) *
               C47896 +
           ((C26433 * C31666 + C28148 * C47872) * C4619 +
            (C38371 + C38372) * C47870) *
               C47887 -
           ((C39667 + C39668) * C47870 +
            (C28150 * C47872 + C28148 * C31666) * C4619) *
               C47868) *
              C47563 * C2482 +
          (((C26434 * C31666 + C26435 * C47872) * C4619 +
            (C37989 + C37990) * C47870) *
               C47896 -
           ((C37378 + C37377) * C47870 +
            (C26434 * C47872 +
             (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C31666) *
                C4619) *
               C47899 -
           ((C39405 + C39406) * C47870 +
            (C28488 * C47872 + C26435 * C31666) * C4619) *
               C47887 +
           ((C28488 * C31666 +
             (C21709 * C1886 + C28484 + C28484 + C47508 * C1898) * C47872) *
                C4619 +
            (C28350 * C31666 +
             (C21709 * C6856 + C28485 + C28485 + C47508 * C6860) * C47872) *
                C47870) *
               C47868) *
              C47563 * C47546)) /
            (p * q * std::sqrt(p + q));
    d2ee[193] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C31666 +
             C26432 * C47872) *
                C4619 +
            (C37373 + C37374) * C47870) *
               C47664 -
           ((C37987 + C37988) * C47870 +
            (C26433 * C47872 + C26432 * C31666) * C4619) *
               C47671 +
           ((C26433 * C31666 + C28148 * C47872) * C4619 +
            (C38371 + C38372) * C47870) *
               C3644) *
              C47563 * C47540 +
          (((C26434 * C31666 + C26435 * C47872) * C4619 +
            (C37989 + C37990) * C47870) *
               C47671 -
           ((C37378 + C37377) * C47870 +
            (C26434 * C47872 +
             (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C31666) *
                C4619) *
               C47664 -
           ((C39405 + C39406) * C47870 +
            (C28488 * C47872 + C26435 * C31666) * C4619) *
               C3644) *
              C47563 * C47549 +
          ((((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C31666 +
             C26436 * C47872) *
                C4619 +
            (C37381 + C37382) * C47870) *
               C47664 -
           ((C37991 + C37992) * C47870 +
            (C26438 * C47872 + C26436 * C31666) * C4619) *
               C47671 +
           ((C26438 * C31666 +
             (C21709 * C1882 + C26416 + C26416 + C47508 * C1894) * C47872) *
                C4619 +
            (C26437 * C31666 +
             (C21709 * C2266 + C26417 + C26417 + C47508 * C2272) * C47872) *
                C47870) *
               C3644) *
              C47563 * C2745)) /
        (p * q * std::sqrt(p + q));
    d2ee[194] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C31666 +
             C26432 * C47872) *
                C4619 +
            (C37373 + C37374) * C47870) *
               C3136 -
           ((C37987 + C37988) * C47870 +
            (C26433 * C47872 + C26432 * C31666) * C4619) *
               C47668) *
              C47563 * C47897 +
          (((C26434 * C31666 + C26435 * C47872) * C4619 +
            (C37989 + C37990) * C47870) *
               C47668 -
           ((C37378 + C37377) * C47870 +
            (C26434 * C47872 +
             (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C31666) *
                C4619) *
               C3136) *
              C47563 * C47890 +
          ((((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C31666 +
             C26436 * C47872) *
                C4619 +
            (C37381 + C37382) * C47870) *
               C3136 -
           ((C37991 + C37992) * C47870 +
            (C26438 * C47872 + C26436 * C31666) * C4619) *
               C47668) *
              C47563 * C47877 +
          (((C26712 * C31666 +
             (C21709 * C439 + C26708 + C26708 + C47508 * C459) * C47872) *
                C4619 +
            (C26574 * C31666 +
             (C21709 * C2052 + C26709 + C26709 + C47508 * C2054) * C47872) *
                C47870) *
               C47668 -
           ((C37662 + C37661) * C47870 +
            (C26712 * C47872 +
             (C21709 * C122 + C21723 + C21723 + C47508 * C136) * C31666) *
                C4619) *
               C3136) *
              C47563 * C47856)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C31666 +
              C26432 * C47872) *
                 C4619 +
             (C37373 + C37374) * C47870) *
                C3136 -
            ((C37987 + C37988) * C47870 +
             (C26433 * C47872 + C26432 * C31666) * C4619) *
                C47668) *
               C47891 +
           (((C37988 + C37987) * C4619 + (C38373 + C38374) * C47870) * C47668 -
            ((C37375 + C37376) * C47870 + (C37374 + C37373) * C4619) * C3136) *
               C47879 +
           (((C37376 + C37375) * C4619 + (C38221 + C38222) * C47870) * C3136 -
            ((C38835 + C38836) * C47870 + (C38374 + C38373) * C4619) * C47668) *
               C47852) *
              C2482 +
          ((((C26434 * C31666 + C26435 * C47872) * C4619 +
             (C37989 + C37990) * C47870) *
                C47668 -
            ((C37378 + C37377) * C47870 +
             (C26434 * C47872 +
              (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C31666) *
                 C4619) *
                C3136) *
               C47891 +
           (((C37377 + C37378) * C4619 + (C37379 + C37380) * C47870) * C3136 -
            ((C38703 + C38704) * C47870 + (C37990 + C37989) * C4619) * C47668) *
               C47879 +
           (((C38704 + C38703) * C4619 +
             (C23007 * C31666 +
              (C21709 * C5944 + C23558 + C23558 + C47508 * C5948) * C47872) *
                 C47870) *
                C47668 -
            ((C38507 + C38508) * C47870 + (C37380 + C37379) * C4619) * C3136) *
               C47852) *
              C47546)) /
            (p * q * std::sqrt(p + q));
    d2ee[195] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C31666 +
             C26432 * C47872) *
                C4619 +
            (C37373 + C37374) * C47870) *
               C47581 * C47820 -
           ((C37375 + C37376) * C47870 + (C37374 + C37373) * C4619) * C47581 *
               C47626) *
              C580 +
          (((C37377 + C37378) * C4619 + (C37379 + C37380) * C47870) * C47581 *
               C47626 -
           ((C37378 + C37377) * C47870 +
            (C26434 * C47872 +
             (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C31666) *
                C4619) *
               C47581 * C47820) *
              C581 +
          ((((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C31666 +
             C26436 * C47872) *
                C4619 +
            (C37381 + C37382) * C47870) *
               C47581 * C47820 -
           ((C37383 + C37384) * C47870 + (C37382 + C37381) * C4619) * C47581 *
               C47626) *
              C582 +
          (((C37661 + C37662) * C4619 +
            (C22133 * C31666 +
             (C21709 * C1476 + C22236 + C22236 + C47508 * C1478) * C47872) *
                C47870) *
               C47581 * C47626 -
           ((C37662 + C37661) * C47870 +
            (C26712 * C47872 +
             (C21709 * C122 + C21723 + C21723 + C47508 * C136) * C31666) *
                C4619) *
               C47581 * C47820) *
              C47856)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C31666 +
             C26432 * C47872) *
                C4619 +
            (C37373 + C37374) * C47870) *
               C47581 * C1318 -
           ((C37375 + C37376) * C47870 + (C37374 + C37373) * C4619) * C47581 *
               C1319 +
           ((C37376 + C37375) * C4619 + (C38221 + C38222) * C47870) * C47581 *
               C1320 -
           ((C38223 + C38224) * C47870 + (C38222 + C38221) * C4619) * C47581 *
               C47862) *
              C47806 +
          (((C37377 + C37378) * C4619 + (C37379 + C37380) * C47870) * C47581 *
               C1319 -
           ((C37378 + C37377) * C47870 +
            (C26434 * C47872 +
             (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C31666) *
                C4619) *
               C47581 * C1318 -
           ((C38507 + C38508) * C47870 + (C37380 + C37379) * C4619) * C47581 *
               C1320 +
           ((C38508 + C38507) * C4619 +
            (C22854 * C31666 +
             (C21709 * C6464 + C23004 + C23004 + C47508 * C6468) * C47872) *
                C47870) *
               C47581 * C47862) *
              C47546)) /
            (p * q * std::sqrt(p + q));
    d2ee[196] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C31666 +
              C26432 * C47872) *
                 C4619 +
             (C37373 + C37374) * C47870) *
                C47821 -
            ((C37987 + C37988) * C47870 +
             (C26433 * C47872 + C26432 * C31666) * C4619) *
                C47668) *
               C47820 +
           (((C37988 + C37987) * C4619 +
             (C22410 * C31666 + C22744 * C47872) * C47870) *
                C47668 -
            ((C37375 + C37376) * C47870 + (C37374 + C37373) * C4619) * C47821) *
               C47626) *
              C268 +
          ((((C26434 * C31666 + C26435 * C47872) * C4619 +
             (C37989 + C37990) * C47870) *
                C47668 -
            ((C37378 + C37377) * C47870 +
             (C26434 * C47872 +
              (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C31666) *
                 C4619) *
                C47821) *
               C47820 +
           (((C37377 + C37378) * C4619 + (C37379 + C37380) * C47870) * C47821 -
            ((C23563 * C47872 + C22413 * C31666) * C47870 +
             (C37990 + C37989) * C4619) *
                C47668) *
               C47626) *
              C269 +
          (((((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C31666 +
              C26436 * C47872) *
                 C4619 +
             (C37381 + C37382) * C47870) *
                C47821 -
            ((C37991 + C37992) * C47870 +
             (C26438 * C47872 + C26436 * C31666) * C4619) *
                C47668) *
               C47820 +
           (((C37992 + C37991) * C4619 +
             (C22414 * C31666 +
              (C21709 * C1192 + C22024 + C22024 + C47508 * C1210) * C47872) *
                 C47870) *
                C47668 -
            ((C37383 + C37384) * C47870 + (C37382 + C37381) * C4619) * C47821) *
               C47626) *
              C47846)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C31666 +
             C26432 * C47872) *
                C4619 +
            (C37373 + C37374) * C47870) *
               C47821 -
           ((C37987 + C37988) * C47870 +
            (C26433 * C47872 + C26432 * C31666) * C4619) *
               C47668) *
              C1318 +
          (((C37988 + C37987) * C4619 + (C38373 + C38374) * C47870) * C47668 -
           ((C37375 + C37376) * C47870 + (C37374 + C37373) * C4619) * C47821) *
              C1319 +
          (((C37376 + C37375) * C4619 + (C38221 + C38222) * C47870) * C47821 -
           ((C38835 + C38836) * C47870 + (C38374 + C38373) * C4619) * C47668) *
              C1320 +
          (((C38836 + C38835) * C4619 +
            (C23115 * C31666 +
             (C21709 * C22720 + C22734 + C22734 + C47508 * C22722) * C47872) *
                C47870) *
               C47668 -
           ((C38223 + C38224) * C47870 + (C38222 + C38221) * C4619) * C47821) *
              C47862) *
         C47535) /
            (p * q * std::sqrt(p + q));
    d2ee[197] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C31666 +
             C26432 * C47872) *
                C4619 +
            (C37373 + C37374) * C47870) *
               C47581 * C47891 -
           ((C37375 + C37376) * C47870 + (C37374 + C37373) * C4619) * C47581 *
               C47879 +
           ((C37376 + C37375) * C4619 +
            (C21881 * C31666 + C22745 * C47872) * C47870) *
               C47581 * C47852) *
              C268 +
          (((C37377 + C37378) * C4619 + (C37379 + C37380) * C47870) * C47581 *
               C47879 -
           ((C37378 + C37377) * C47870 +
            (C26434 * C47872 +
             (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C31666) *
                C4619) *
               C47581 * C47891 -
           ((C23007 * C47872 + C21884 * C31666) * C47870 +
            (C37380 + C37379) * C4619) *
               C47581 * C47852) *
              C269 +
          ((((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C31666 +
             C26436 * C47872) *
                C4619 +
            (C37381 + C37382) * C47870) *
               C47581 * C47891 -
           ((C37383 + C37384) * C47870 + (C37382 + C37381) * C4619) * C47581 *
               C47879 +
           ((C37384 + C37383) * C4619 +
            (C21887 * C31666 +
             (C21709 * C1582 + C22397 + C22397 + C47508 * C1588) * C47872) *
                C47870) *
               C47581 * C47852) *
              C47846)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C31666 +
            C26432 * C47872) *
               C4619 +
           (C21879 * C31666 + C22411 * C47872) * C47870) *
              C47581 * C47563 * C108 -
          ((C22412 * C47872 + C21882 * C31666) * C47870 +
           (C26434 * C47872 +
            (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C31666) *
               C4619) *
              C47581 * C47563 * C109 +
          (((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C31666 +
            C26436 * C47872) *
               C4619 +
           (C21885 * C31666 + C22415 * C47872) * C47870) *
              C47581 * C47563 * C110 -
          ((C26574 * C47872 + C22132 * C31666) * C47870 +
           (C26712 * C47872 +
            (C21709 * C122 + C21723 + C21723 + C47508 * C136) * C31666) *
               C4619) *
              C47581 * C47563 * C111 +
          (((C21709 * C123 + C21724 + C21724 + C47508 * C137) * C31666 +
            (C21709 * C440 + C26096 + C26096 + C47508 * C460) * C47872) *
               C4619 +
           ((C21709 * C279 + C21725 + C21725 + C47508 * C299) * C31666 +
            (C21709 * C846 + C26097 + C26097 + C47508 * C856) * C47872) *
               C47870) *
              C47581 * C47563 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C31666 +
             C26432 * C47872) *
                C4619 +
            (C37373 + C37374) * C47870) *
               C47892 -
           ((C22743 * C47872 + C22411 * C31666) * C47870 +
            (C26433 * C47872 + C26432 * C31666) * C4619) *
               C47881 +
           ((C26433 * C31666 + C28148 * C47872) * C4619 +
            (C22743 * C31666 + C23779 * C47872) * C47870) *
               C47855) *
              C47563 * C268 +
          (((C26434 * C31666 + C26435 * C47872) * C4619 +
            (C22412 * C31666 + C23564 * C47872) * C47870) *
               C47881 -
           ((C37378 + C37377) * C47870 +
            (C26434 * C47872 +
             (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C31666) *
                C4619) *
               C47892 -
           ((C28350 * C47872 + C23564 * C31666) * C47870 +
            (C28488 * C47872 + C26435 * C31666) * C4619) *
               C47855) *
              C47563 * C269 +
          ((((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C31666 +
             C26436 * C47872) *
                C4619 +
            (C37381 + C37382) * C47870) *
               C47892 -
           ((C26437 * C47872 + C22415 * C31666) * C47870 +
            (C26438 * C47872 + C26436 * C31666) * C4619) *
               C47881 +
           ((C26438 * C31666 +
             (C21709 * C1882 + C26416 + C26416 + C47508 * C1894) * C47872) *
                C4619 +
            (C26437 * C31666 +
             (C21709 * C2266 + C26417 + C26417 + C47508 * C2272) * C47872) *
                C47870) *
               C47855) *
              C47563 * C47846)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C31666 +
             C26432 * C47872) *
                C4619 +
            (C37373 + C37374) * C47870) *
               C47581 * C976 -
           ((C37375 + C37376) * C47870 + (C37374 + C37373) * C4619) * C47581 *
               C977 +
           ((C37376 + C37375) * C4619 +
            (C21881 * C31666 + C22745 * C47872) * C47870) *
               C47581 * C47852) *
              C47888 +
          (((C37377 + C37378) * C4619 + (C37379 + C37380) * C47870) * C47581 *
               C977 -
           ((C37378 + C37377) * C47870 +
            (C26434 * C47872 +
             (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C31666) *
                C4619) *
               C47581 * C976 -
           ((C23007 * C47872 + C21884 * C31666) * C47870 +
            (C37380 + C37379) * C4619) *
               C47581 * C47852) *
              C47875 +
          ((((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C31666 +
             C26436 * C47872) *
                C4619 +
            (C37381 + C37382) * C47870) *
               C47581 * C976 -
           ((C37383 + C37384) * C47870 + (C37382 + C37381) * C4619) * C47581 *
               C977 +
           ((C37384 + C37383) * C4619 +
            (C21887 * C31666 +
             (C21709 * C1582 + C22397 + C22397 + C47508 * C1588) * C47872) *
                C47870) *
               C47581 * C47852) *
              C47846)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C31666 +
            C26432 * C47872) *
               C4619 +
           (C37373 + C37374) * C47870) *
              C47581 * C1044 -
          ((C37375 + C37376) * C47870 + (C37374 + C37373) * C4619) * C47581 *
              C1045 +
          ((C37376 + C37375) * C4619 + (C38221 + C38222) * C47870) * C47581 *
              C1046 -
          ((C38223 + C38224) * C47870 + (C38222 + C38221) * C4619) * C47581 *
              C1047 +
          ((C38224 + C38223) * C4619 +
           (C22608 * C31666 +
            (C21709 * C23106 + C23112 + C23112 + C47508 * C23108) * C47872) *
               C47870) *
              C47581 * C1048) *
         C47535) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C31666 +
             C26432 * C47872) *
                C4619 +
            (C37373 + C37374) * C47870) *
               C47892 -
           ((C37987 + C37988) * C47870 +
            (C26433 * C47872 + C26432 * C31666) * C4619) *
               C47881 +
           ((C26433 * C31666 + C28148 * C47872) * C4619 +
            (C38371 + C38372) * C47870) *
               C47855) *
              C976 +
          (((C37988 + C37987) * C4619 + (C38373 + C38374) * C47870) * C47881 -
           ((C37375 + C37376) * C47870 + (C37374 + C37373) * C4619) * C47892 -
           ((C38375 + C38376) * C47870 + (C38372 + C38371) * C4619) * C47855) *
              C977 +
          (((C37376 + C37375) * C4619 + (C38221 + C38222) * C47870) * C47892 -
           ((C22746 * C47872 + C22745 * C31666) * C47870 +
            (C38374 + C38373) * C4619) *
               C47881 +
           ((C38376 + C38375) * C4619 +
            (C22746 * C31666 +
             (C21709 * C23765 + C23773 + C23773 + C47508 * C23767) * C47872) *
                C47870) *
               C47855) *
              C47852) *
         C47535) /
            (p * q * std::sqrt(p + q));
    d2ee[198] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C31666 +
             C26432 * C47872) *
                C4619 +
            (C37373 + C37374) * C47870) *
               C47821 -
           ((C22743 * C47872 + C22411 * C31666) * C47870 +
            (C26433 * C47872 + C26432 * C31666) * C4619) *
               C47668) *
              C47563 * C580 +
          (((C26434 * C31666 + C26435 * C47872) * C4619 +
            (C22412 * C31666 + C23564 * C47872) * C47870) *
               C47668 -
           ((C37378 + C37377) * C47870 +
            (C26434 * C47872 +
             (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C31666) *
                C4619) *
               C47821) *
              C47563 * C581 +
          ((((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C31666 +
             C26436 * C47872) *
                C4619 +
            (C37381 + C37382) * C47870) *
               C47821 -
           ((C26437 * C47872 + C22415 * C31666) * C47870 +
            (C26438 * C47872 + C26436 * C31666) * C4619) *
               C47668) *
              C47563 * C582 +
          (((C26712 * C31666 +
             (C21709 * C439 + C26708 + C26708 + C47508 * C459) * C47872) *
                C4619 +
            (C26574 * C31666 +
             (C21709 * C2052 + C26709 + C26709 + C47508 * C2054) * C47872) *
                C47870) *
               C47668 -
           ((C37662 + C37661) * C47870 +
            (C26712 * C47872 +
             (C21709 * C122 + C21723 + C21723 + C47508 * C136) * C31666) *
                C4619) *
               C47821) *
              C47563 * C47856)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C31666 +
              C26432 * C47872) *
                 C4619 +
             (C37373 + C37374) * C47870) *
                C47821 -
            ((C37987 + C37988) * C47870 +
             (C26433 * C47872 + C26432 * C31666) * C4619) *
                C47668) *
               C976 +
           (((C37988 + C37987) * C4619 + (C38373 + C38374) * C47870) * C47668 -
            ((C37375 + C37376) * C47870 + (C37374 + C37373) * C4619) * C47821) *
               C977 +
           (((C37376 + C37375) * C4619 + (C38221 + C38222) * C47870) * C47821 -
            ((C22746 * C47872 + C22745 * C31666) * C47870 +
             (C38374 + C38373) * C4619) *
                C47668) *
               C47852) *
              C47806 +
          ((((C26434 * C31666 + C26435 * C47872) * C4619 +
             (C37989 + C37990) * C47870) *
                C47668 -
            ((C37378 + C37377) * C47870 +
             (C26434 * C47872 +
              (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C31666) *
                 C4619) *
                C47821) *
               C976 +
           (((C37377 + C37378) * C4619 + (C37379 + C37380) * C47870) * C47821 -
            ((C38703 + C38704) * C47870 + (C37990 + C37989) * C4619) * C47668) *
               C977 +
           (((C38704 + C38703) * C4619 +
             (C23007 * C31666 +
              (C21709 * C5944 + C23558 + C23558 + C47508 * C5948) * C47872) *
                 C47870) *
                C47668 -
            ((C38507 + C38508) * C47870 + (C37380 + C37379) * C4619) * C47821) *
               C47852) *
              C47546)) /
            (p * q * std::sqrt(p + q));
    d2ee[199] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C31666 +
            C26432 * C47872) *
               C4619 +
           (C21879 * C31666 + C22411 * C47872) * C47870) *
              C47581 * C47563 * C108 -
          ((C22412 * C47872 + C21882 * C31666) * C47870 +
           (C26434 * C47872 +
            (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C31666) *
               C4619) *
              C47581 * C47563 * C109 +
          (((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C31666 +
            C26436 * C47872) *
               C4619 +
           (C21885 * C31666 + C22415 * C47872) * C47870) *
              C47581 * C47563 * C110 -
          ((C26574 * C47872 + C22132 * C31666) * C47870 +
           (C26712 * C47872 +
            (C21709 * C122 + C21723 + C21723 + C47508 * C136) * C31666) *
               C4619) *
              C47581 * C47563 * C111 +
          (((C21709 * C123 + C21724 + C21724 + C47508 * C137) * C31666 +
            (C21709 * C440 + C26096 + C26096 + C47508 * C460) * C47872) *
               C4619 +
           ((C21709 * C279 + C21725 + C21725 + C47508 * C299) * C31666 +
            (C21709 * C846 + C26097 + C26097 + C47508 * C856) * C47872) *
               C47870) *
              C47581 * C47563 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C31666 +
             C26432 * C47872) *
                C4619 +
            (C37373 + C37374) * C47870) *
               C47581 * C47891 -
           ((C37375 + C37376) * C47870 + (C37374 + C37373) * C4619) * C47581 *
               C47879 +
           ((C37376 + C37375) * C4619 +
            (C21881 * C31666 + C22745 * C47872) * C47870) *
               C47581 * C47852) *
              C268 +
          (((C37377 + C37378) * C4619 + (C37379 + C37380) * C47870) * C47581 *
               C47879 -
           ((C37378 + C37377) * C47870 +
            (C26434 * C47872 +
             (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C31666) *
                C4619) *
               C47581 * C47891 -
           ((C23007 * C47872 + C21884 * C31666) * C47870 +
            (C37380 + C37379) * C4619) *
               C47581 * C47852) *
              C269 +
          ((((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C31666 +
             C26436 * C47872) *
                C4619 +
            (C37381 + C37382) * C47870) *
               C47581 * C47891 -
           ((C37383 + C37384) * C47870 + (C37382 + C37381) * C4619) * C47581 *
               C47879 +
           ((C37384 + C37383) * C4619 +
            (C21887 * C31666 +
             (C21709 * C1582 + C22397 + C22397 + C47508 * C1588) * C47872) *
                C47870) *
               C47581 * C47852) *
              C47846)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C31666 +
             C26432 * C47872) *
                C4619 +
            (C37373 + C37374) * C47870) *
               C47581 * C976 -
           ((C37375 + C37376) * C47870 + (C37374 + C37373) * C4619) * C47581 *
               C977 +
           ((C37376 + C37375) * C4619 +
            (C21881 * C31666 + C22745 * C47872) * C47870) *
               C47581 * C47852) *
              C47888 +
          (((C37377 + C37378) * C4619 + (C37379 + C37380) * C47870) * C47581 *
               C977 -
           ((C37378 + C37377) * C47870 +
            (C26434 * C47872 +
             (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C31666) *
                C4619) *
               C47581 * C976 -
           ((C23007 * C47872 + C21884 * C31666) * C47870 +
            (C37380 + C37379) * C4619) *
               C47581 * C47852) *
              C47875 +
          ((((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C31666 +
             C26436 * C47872) *
                C4619 +
            (C37381 + C37382) * C47870) *
               C47581 * C976 -
           ((C37383 + C37384) * C47870 + (C37382 + C37381) * C4619) * C47581 *
               C977 +
           ((C37384 + C37383) * C4619 +
            (C21887 * C31666 +
             (C21709 * C1582 + C22397 + C22397 + C47508 * C1588) * C47872) *
                C47870) *
               C47581 * C47852) *
              C47846)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C31666 +
            C26432 * C47872) *
               C4619 +
           (C37373 + C37374) * C47870) *
              C47581 * C1044 -
          ((C37375 + C37376) * C47870 + (C37374 + C37373) * C4619) * C47581 *
              C1045 +
          ((C37376 + C37375) * C4619 + (C38221 + C38222) * C47870) * C47581 *
              C1046 -
          ((C38223 + C38224) * C47870 + (C38222 + C38221) * C4619) * C47581 *
              C1047 +
          ((C38224 + C38223) * C4619 +
           (C22608 * C31666 +
            (C21709 * C23106 + C23112 + C23112 + C47508 * C23108) * C47872) *
               C47870) *
              C47581 * C1048) *
         C47535) /
            (p * q * std::sqrt(p + q));
    d2ee[200] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C42694 +
            C26432 * C42695 + C26433 * C42696) *
               C47770 * C47581 * C47622 -
           (C22743 * C42696 + C22411 * C42695 + C21879 * C42694) * C47770 *
               C47581 * C47629 +
           (C21880 * C42694 + C22410 * C42695 + C22744 * C42696) * C47770 *
               C47581 * C2742) *
              C47540 +
          ((C21882 * C42694 + C22412 * C42695 + C23564 * C42696) * C47770 *
               C47581 * C47629 -
           (C26435 * C42696 + C26434 * C42695 +
            (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C42694) *
               C47770 * C47581 * C47622 -
           (C23563 * C42696 + C22413 * C42695 + C21883 * C42694) * C47770 *
               C47581 * C2742) *
              C47549 +
          (((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C42694 +
            C26436 * C42695 + C26438 * C42696) *
               C47770 * C47581 * C47622 -
           (C26437 * C42696 + C22415 * C42695 + C21885 * C42694) * C47770 *
               C47581 * C47629 +
           (C21886 * C42694 + C22414 * C42695 +
            (C21709 * C1192 + C22024 + C22024 + C47508 * C1210) * C42696) *
               C47770 * C47581 * C2742) *
              C2745)) /
        (p * q * std::sqrt(p + q));
    d2ee[201] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C42694 +
             C26432 * C42695 + C26433 * C42696) *
                C47770 * C47821 -
            (C28148 * C42696 + C26433 * C42695 + C26432 * C42694) * C47770 *
                C47668) *
               C47622 +
           ((C22411 * C42694 + C22743 * C42695 + C23779 * C42696) * C47770 *
                C47668 -
            (C22743 * C42696 + C22411 * C42695 + C21879 * C42694) * C47770 *
                C47821) *
               C47629 +
           ((C21880 * C42694 + C22410 * C42695 + C22744 * C42696) * C47770 *
                C47821 -
            (C23778 * C42696 + C22744 * C42695 + C22410 * C42694) * C47770 *
                C47668) *
               C2742) *
              C2482 +
          (((C26434 * C42694 + C26435 * C42695 + C28488 * C42696) * C47770 *
                C47668 -
            (C26435 * C42696 + C26434 * C42695 +
             (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C42694) *
                C47770 * C47821) *
               C47622 +
           ((C21882 * C42694 + C22412 * C42695 + C23564 * C42696) * C47770 *
                C47821 -
            (C28350 * C42696 + C23564 * C42695 + C22412 * C42694) * C47770 *
                C47668) *
               C47629 +
           ((C22413 * C42694 + C23563 * C42695 +
             (C21709 * C7340 + C23667 + C23667 + C47508 * C7344) * C42696) *
                C47770 * C47668 -
            (C23563 * C42696 + C22413 * C42695 + C21883 * C42694) * C47770 *
                C47821) *
               C2742) *
              C47546)) /
        (p * q * std::sqrt(p + q));
    d2ee[202] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C42694 +
            C26432 * C42695 + C26433 * C42696) *
               C47770 * C47581 * C47898 -
           (C22743 * C42696 + C22411 * C42695 + C21879 * C42694) * C47770 *
               C47581 * C47894 +
           (C21880 * C42694 + C22410 * C42695 + C22744 * C42696) * C47770 *
               C47581 * C47884 -
           (C22746 * C42696 + C22745 * C42695 + C21881 * C42694) * C47770 *
               C47581 * C47862) *
              C2482 +
          ((C21882 * C42694 + C22412 * C42695 + C23564 * C42696) * C47770 *
               C47581 * C47894 -
           (C26435 * C42696 + C26434 * C42695 +
            (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C42694) *
               C47770 * C47581 * C47898 -
           (C23563 * C42696 + C22413 * C42695 + C21883 * C42694) * C47770 *
               C47581 * C47884 +
           (C21884 * C42694 + C23007 * C42695 +
            (C21709 * C5944 + C23558 + C23558 + C47508 * C5948) * C42696) *
               C47770 * C47581 * C47862) *
              C47546)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C42694 +
            C26432 * C42695 + C26433 * C42696) *
               C47770 * C47581 * C2374 -
           (C22743 * C42696 + C22411 * C42695 + C21879 * C42694) * C47770 *
               C47581 * C47626) *
              C47897 +
          ((C21882 * C42694 + C22412 * C42695 + C23564 * C42696) * C47770 *
               C47581 * C47626 -
           (C26435 * C42696 + C26434 * C42695 +
            (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C42694) *
               C47770 * C47581 * C2374) *
              C47890 +
          (((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C42694 +
            C26436 * C42695 + C26438 * C42696) *
               C47770 * C47581 * C2374 -
           (C26437 * C42696 + C22415 * C42695 + C21885 * C42694) * C47770 *
               C47581 * C47626) *
              C47877 +
          ((C22132 * C42694 + C26574 * C42695 +
            (C21709 * C2052 + C26709 + C26709 + C47508 * C2054) * C42696) *
               C47770 * C47581 * C47626 -
           (C43126 * C42696 + C26712 * C42695 +
            (C21709 * C122 + C21723 + C21723 + C47508 * C136) * C42694) *
               C47770 * C47581 * C2374) *
              C47856)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C42694 +
             C26432 * C42695 + C26433 * C42696) *
                C47770 * C47892 -
            (C28148 * C42696 + C26433 * C42695 + C26432 * C42694) * C47770 *
                C47881 +
            (C26433 * C42694 + C28148 * C42695 + C28150 * C42696) * C47770 *
                C47855) *
               C2374 +
           ((C22411 * C42694 + C22743 * C42695 + C23779 * C42696) * C47770 *
                C47881 -
            (C22743 * C42696 + C22411 * C42695 + C21879 * C42694) * C47770 *
                C47892 -
            (C28149 * C42696 + C23779 * C42695 + C22743 * C42694) * C47770 *
                C47855) *
               C47626) *
              C2482 +
          (((C26434 * C42694 + C26435 * C42695 + C28488 * C42696) * C47770 *
                C47881 -
            (C26435 * C42696 + C26434 * C42695 +
             (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C42694) *
                C47770 * C47892 -
            (C44437 * C42696 + C28488 * C42695 + C26435 * C42694) * C47770 *
                C47855) *
               C2374 +
           ((C21882 * C42694 + C22412 * C42695 + C23564 * C42696) * C47770 *
                C47892 -
            (C28350 * C42696 + C23564 * C42695 + C22412 * C42694) * C47770 *
                C47881 +
            (C23564 * C42694 + C28350 * C42695 +
             (C21709 * C6856 + C28485 + C28485 + C47508 * C6860) * C42696) *
                C47770 * C47855) *
               C47626) *
              C47546)) /
            (p * q * std::sqrt(p + q));
    d2ee[203] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C42694 +
             C26432 * C42695 + C26433 * C42696) *
                C47770 * C47821 -
            (C28148 * C42696 + C26433 * C42695 + C26432 * C42694) * C47770 *
                C47668) *
               C2374 +
           ((C22411 * C42694 + C22743 * C42695 + C23779 * C42696) * C47770 *
                C47668 -
            (C22743 * C42696 + C22411 * C42695 + C21879 * C42694) * C47770 *
                C47821) *
               C47626) *
              C47540 +
          (((C26434 * C42694 + C26435 * C42695 + C28488 * C42696) * C47770 *
                C47668 -
            (C26435 * C42696 + C26434 * C42695 +
             (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C42694) *
                C47770 * C47821) *
               C2374 +
           ((C21882 * C42694 + C22412 * C42695 + C23564 * C42696) * C47770 *
                C47821 -
            (C28350 * C42696 + C23564 * C42695 + C22412 * C42694) * C47770 *
                C47668) *
               C47626) *
              C47549 +
          ((((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C42694 +
             C26436 * C42695 + C26438 * C42696) *
                C47770 * C47821 -
            (C42924 * C42696 + C26438 * C42695 + C26436 * C42694) * C47770 *
                C47668) *
               C2374 +
           ((C22415 * C42694 + C26437 * C42695 +
             (C21709 * C2266 + C26417 + C26417 + C47508 * C2272) * C42696) *
                C47770 * C47668 -
            (C26437 * C42696 + C22415 * C42695 + C21885 * C42694) * C47770 *
                C47821) *
               C47626) *
              C2745)) /
        (p * q * std::sqrt(p + q));
    d2ee[204] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C42694 +
            C26432 * C42695 + C26433 * C42696) *
               C47770 * C47581 * C2374 -
           (C22743 * C42696 + C22411 * C42695 + C21879 * C42694) * C47770 *
               C47581 * C47626) *
              C47897 +
          ((C21882 * C42694 + C22412 * C42695 + C23564 * C42696) * C47770 *
               C47581 * C47626 -
           (C26435 * C42696 + C26434 * C42695 +
            (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C42694) *
               C47770 * C47581 * C2374) *
              C47890 +
          (((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C42694 +
            C26436 * C42695 + C26438 * C42696) *
               C47770 * C47581 * C2374 -
           (C26437 * C42696 + C22415 * C42695 + C21885 * C42694) * C47770 *
               C47581 * C47626) *
              C47877 +
          ((C22132 * C42694 + C26574 * C42695 +
            (C21709 * C2052 + C26709 + C26709 + C47508 * C2054) * C42696) *
               C47770 * C47581 * C47626 -
           (C43126 * C42696 + C26712 * C42695 +
            (C21709 * C122 + C21723 + C21723 + C47508 * C136) * C42694) *
               C47770 * C47581 * C2374) *
              C47856)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C42694 +
            C26432 * C42695 + C26433 * C42696) *
               C47770 * C47581 * C47898 -
           (C22743 * C42696 + C22411 * C42695 + C21879 * C42694) * C47770 *
               C47581 * C47894 +
           (C21880 * C42694 + C22410 * C42695 + C22744 * C42696) * C47770 *
               C47581 * C47884 -
           (C22746 * C42696 + C22745 * C42695 + C21881 * C42694) * C47770 *
               C47581 * C47862) *
              C2482 +
          ((C21882 * C42694 + C22412 * C42695 + C23564 * C42696) * C47770 *
               C47581 * C47894 -
           (C26435 * C42696 + C26434 * C42695 +
            (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C42694) *
               C47770 * C47581 * C47898 -
           (C23563 * C42696 + C22413 * C42695 + C21883 * C42694) * C47770 *
               C47581 * C47884 +
           (C21884 * C42694 + C23007 * C42695 +
            (C21709 * C5944 + C23558 + C23558 + C47508 * C5948) * C42696) *
               C47770 * C47581 * C47862) *
              C47546)) /
            (p * q * std::sqrt(p + q));
    d2ee[205] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C42694 +
             C26432 * C42695 + C26433 * C42696) *
                C47770 * C3136 -
            (C28148 * C42696 + C26433 * C42695 + C26432 * C42694) * C47770 *
                C47668) *
               C47622 +
           ((C22411 * C42694 + C22743 * C42695 + C23779 * C42696) * C47770 *
                C47668 -
            (C22743 * C42696 + C22411 * C42695 + C21879 * C42694) * C47770 *
                C3136) *
               C47629 +
           ((C21880 * C42694 + C22410 * C42695 + C22744 * C42696) * C47770 *
                C3136 -
            (C23778 * C42696 + C22744 * C42695 + C22410 * C42694) * C47770 *
                C47668) *
               C2742) *
              C47806 +
          (((C26434 * C42694 + C26435 * C42695 + C28488 * C42696) * C47770 *
                C47668 -
            (C26435 * C42696 + C26434 * C42695 +
             (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C42694) *
                C47770 * C3136) *
               C47622 +
           ((C21882 * C42694 + C22412 * C42695 + C23564 * C42696) * C47770 *
                C3136 -
            (C28350 * C42696 + C23564 * C42695 + C22412 * C42694) * C47770 *
                C47668) *
               C47629 +
           ((C22413 * C42694 + C23563 * C42695 +
             (C21709 * C7340 + C23667 + C23667 + C47508 * C7344) * C42696) *
                C47770 * C47668 -
            (C23563 * C42696 + C22413 * C42695 + C21883 * C42694) * C47770 *
                C3136) *
               C2742) *
              C47546)) /
        (p * q * std::sqrt(p + q));
    d2ee[206] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C42694 +
            C26432 * C42695 + C26433 * C42696) *
               C47770 * C47664 -
           (C28148 * C42696 + C26433 * C42695 + C26432 * C42694) * C47770 *
               C47671 +
           (C26433 * C42694 + C28148 * C42695 + C28150 * C42696) * C47770 *
               C3644) *
              C47622 +
          ((C22411 * C42694 + C22743 * C42695 + C23779 * C42696) * C47770 *
               C47671 -
           (C22743 * C42696 + C22411 * C42695 + C21879 * C42694) * C47770 *
               C47664 -
           (C28149 * C42696 + C23779 * C42695 + C22743 * C42694) * C47770 *
               C3644) *
              C47629 +
          ((C21880 * C42694 + C22410 * C42695 + C22744 * C42696) * C47770 *
               C47664 -
           (C23778 * C42696 + C22744 * C42695 + C22410 * C42694) * C47770 *
               C47671 +
           (C22744 * C42694 + C23778 * C42695 +
            (C21709 * C23398 + C23407 + C23407 + C47508 * C23400) * C42696) *
               C47770 * C3644) *
              C2742) *
         C47535) /
        (p * q * std::sqrt(p + q));
    d2ee[207] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C42694 +
            C26432 * C42695 + C26433 * C42696) *
               C47770 * C3136 -
           (C28148 * C42696 + C26433 * C42695 + C26432 * C42694) * C47770 *
               C47668) *
              C47898 +
          ((C22411 * C42694 + C22743 * C42695 + C23779 * C42696) * C47770 *
               C47668 -
           (C22743 * C42696 + C22411 * C42695 + C21879 * C42694) * C47770 *
               C3136) *
              C47894 +
          ((C21880 * C42694 + C22410 * C42695 + C22744 * C42696) * C47770 *
               C3136 -
           (C23778 * C42696 + C22744 * C42695 + C22410 * C42694) * C47770 *
               C47668) *
              C47884 +
          ((C22745 * C42694 + C22746 * C42695 +
            (C21709 * C23765 + C23773 + C23773 + C47508 * C23767) * C42696) *
               C47770 * C47668 -
           (C22746 * C42696 + C22745 * C42695 + C21881 * C42694) * C47770 *
               C3136) *
              C47862) *
         C47535) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C42694 +
             C26432 * C42695 + C26433 * C42696) *
                C47770 * C3136 -
            (C28148 * C42696 + C26433 * C42695 + C26432 * C42694) * C47770 *
                C47668) *
               C2374 +
           ((C22411 * C42694 + C22743 * C42695 + C23779 * C42696) * C47770 *
                C47668 -
            (C22743 * C42696 + C22411 * C42695 + C21879 * C42694) * C47770 *
                C3136) *
               C47626) *
              C47888 +
          (((C26434 * C42694 + C26435 * C42695 + C28488 * C42696) * C47770 *
                C47668 -
            (C26435 * C42696 + C26434 * C42695 +
             (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C42694) *
                C47770 * C3136) *
               C2374 +
           ((C21882 * C42694 + C22412 * C42695 + C23564 * C42696) * C47770 *
                C3136 -
            (C28350 * C42696 + C23564 * C42695 + C22412 * C42694) * C47770 *
                C47668) *
               C47626) *
              C47875 +
          ((((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C42694 +
             C26436 * C42695 + C26438 * C42696) *
                C47770 * C3136 -
            (C42924 * C42696 + C26438 * C42695 + C26436 * C42694) * C47770 *
                C47668) *
               C2374 +
           ((C22415 * C42694 + C26437 * C42695 +
             (C21709 * C2266 + C26417 + C26417 + C47508 * C2272) * C42696) *
                C47770 * C47668 -
            (C26437 * C42696 + C22415 * C42695 + C21885 * C42694) * C47770 *
                C3136) *
               C47626) *
              C47846)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C42694 +
            C26432 * C42695 + C26433 * C42696) *
               C47770 * C47899 -
           (C28148 * C42696 + C26433 * C42695 + C26432 * C42694) * C47770 *
               C47896 +
           (C26433 * C42694 + C28148 * C42695 + C28150 * C42696) * C47770 *
               C47887 -
           (C44187 * C42696 + C28150 * C42695 + C28148 * C42694) * C47770 *
               C47868) *
              C2374 +
          ((C22411 * C42694 + C22743 * C42695 + C23779 * C42696) * C47770 *
               C47896 -
           (C22743 * C42696 + C22411 * C42695 + C21879 * C42694) * C47770 *
               C47899 -
           (C28149 * C42696 + C23779 * C42695 + C22743 * C42694) * C47770 *
               C47887 +
           (C23779 * C42694 + C28149 * C42695 +
            (C21709 * C28130 + C28141 + C28141 + C47508 * C28132) * C42696) *
               C47770 * C47868) *
              C47626) *
         C47535) /
            (p * q * std::sqrt(p + q));
    d2ee[208] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C42694 +
             C26432 * C42695 + C26433 * C42696) *
                C47770 * C47664 -
            (C28148 * C42696 + C26433 * C42695 + C26432 * C42694) * C47770 *
                C47671 +
            (C26433 * C42694 + C28148 * C42695 + C28150 * C42696) * C47770 *
                C3644) *
               C2374 +
           ((C22411 * C42694 + C22743 * C42695 + C23779 * C42696) * C47770 *
                C47671 -
            (C22743 * C42696 + C22411 * C42695 + C21879 * C42694) * C47770 *
                C47664 -
            (C28149 * C42696 + C23779 * C42695 + C22743 * C42694) * C47770 *
                C3644) *
               C47626) *
              C47806 +
          (((C26434 * C42694 + C26435 * C42695 + C28488 * C42696) * C47770 *
                C47671 -
            (C26435 * C42696 + C26434 * C42695 +
             (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C42694) *
                C47770 * C47664 -
            (C44437 * C42696 + C28488 * C42695 + C26435 * C42694) * C47770 *
                C3644) *
               C2374 +
           ((C21882 * C42694 + C22412 * C42695 + C23564 * C42696) * C47770 *
                C47664 -
            (C28350 * C42696 + C23564 * C42695 + C22412 * C42694) * C47770 *
                C47671 +
            (C23564 * C42694 + C28350 * C42695 +
             (C21709 * C6856 + C28485 + C28485 + C47508 * C6860) * C42696) *
                C47770 * C3644) *
               C47626) *
              C47546)) /
        (p * q * std::sqrt(p + q));
    d2ee[209] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C42694 +
             C26432 * C42695 + C26433 * C42696) *
                C47770 * C3136 -
            (C28148 * C42696 + C26433 * C42695 + C26432 * C42694) * C47770 *
                C47668) *
               C2374 +
           ((C22411 * C42694 + C22743 * C42695 + C23779 * C42696) * C47770 *
                C47668 -
            (C22743 * C42696 + C22411 * C42695 + C21879 * C42694) * C47770 *
                C3136) *
               C47626) *
              C47888 +
          (((C26434 * C42694 + C26435 * C42695 + C28488 * C42696) * C47770 *
                C47668 -
            (C26435 * C42696 + C26434 * C42695 +
             (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C42694) *
                C47770 * C3136) *
               C2374 +
           ((C21882 * C42694 + C22412 * C42695 + C23564 * C42696) * C47770 *
                C3136 -
            (C28350 * C42696 + C23564 * C42695 + C22412 * C42694) * C47770 *
                C47668) *
               C47626) *
              C47875 +
          ((((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C42694 +
             C26436 * C42695 + C26438 * C42696) *
                C47770 * C3136 -
            (C42924 * C42696 + C26438 * C42695 + C26436 * C42694) * C47770 *
                C47668) *
               C2374 +
           ((C22415 * C42694 + C26437 * C42695 +
             (C21709 * C2266 + C26417 + C26417 + C47508 * C2272) * C42696) *
                C47770 * C47668 -
            (C26437 * C42696 + C22415 * C42695 + C21885 * C42694) * C47770 *
                C3136) *
               C47626) *
              C47846)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C42694 +
            C26432 * C42695 + C26433 * C42696) *
               C47770 * C3136 -
           (C28148 * C42696 + C26433 * C42695 + C26432 * C42694) * C47770 *
               C47668) *
              C47898 +
          ((C22411 * C42694 + C22743 * C42695 + C23779 * C42696) * C47770 *
               C47668 -
           (C22743 * C42696 + C22411 * C42695 + C21879 * C42694) * C47770 *
               C3136) *
              C47894 +
          ((C21880 * C42694 + C22410 * C42695 + C22744 * C42696) * C47770 *
               C3136 -
           (C23778 * C42696 + C22744 * C42695 + C22410 * C42694) * C47770 *
               C47668) *
              C47884 +
          ((C22745 * C42694 + C22746 * C42695 +
            (C21709 * C23765 + C23773 + C23773 + C47508 * C23767) * C42696) *
               C47770 * C47668 -
           (C22746 * C42696 + C22745 * C42695 + C21881 * C42694) * C47770 *
               C3136) *
              C47862) *
         C47535) /
            (p * q * std::sqrt(p + q));
    d2ee[210] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C42694 +
            C26432 * C42695 + C26433 * C42696) *
               C47770 * C47581 * C1318 -
           (C22743 * C42696 + C22411 * C42695 + C21879 * C42694) * C47770 *
               C47581 * C1319 +
           (C21880 * C42694 + C22410 * C42695 + C22744 * C42696) * C47770 *
               C47581 * C1320 -
           (C22746 * C42696 + C22745 * C42695 + C21881 * C42694) * C47770 *
               C47581 * C47862) *
              C47806 +
          ((C21882 * C42694 + C22412 * C42695 + C23564 * C42696) * C47770 *
               C47581 * C1319 -
           (C26435 * C42696 + C26434 * C42695 +
            (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C42694) *
               C47770 * C47581 * C1318 -
           (C23563 * C42696 + C22413 * C42695 + C21883 * C42694) * C47770 *
               C47581 * C1320 +
           (C21884 * C42694 + C23007 * C42695 +
            (C21709 * C5944 + C23558 + C23558 + C47508 * C5948) * C42696) *
               C47770 * C47581 * C47862) *
              C47546)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C42694 +
            C26432 * C42695 + C26433 * C42696) *
               C47770 * C47581 * C47820 -
           (C22743 * C42696 + C22411 * C42695 + C21879 * C42694) * C47770 *
               C47581 * C47626) *
              C580 +
          ((C21882 * C42694 + C22412 * C42695 + C23564 * C42696) * C47770 *
               C47581 * C47626 -
           (C26435 * C42696 + C26434 * C42695 +
            (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C42694) *
               C47770 * C47581 * C47820) *
              C581 +
          (((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C42694 +
            C26436 * C42695 + C26438 * C42696) *
               C47770 * C47581 * C47820 -
           (C26437 * C42696 + C22415 * C42695 + C21885 * C42694) * C47770 *
               C47581 * C47626) *
              C582 +
          ((C22132 * C42694 + C26574 * C42695 +
            (C21709 * C2052 + C26709 + C26709 + C47508 * C2054) * C42696) *
               C47770 * C47581 * C47626 -
           ((C21709 * C439 + C26708 + C26708 + C47508 * C459) * C42696 +
            C26712 * C42695 +
            (C21709 * C122 + C21723 + C21723 + C47508 * C136) * C42694) *
               C47770 * C47581 * C47820) *
              C47856)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C42694 +
             C26432 * C42695 + C26433 * C42696) *
                C47770 * C1702 -
            (C28148 * C42696 + C26433 * C42695 + C26432 * C42694) * C47770 *
                C1703 +
            (C26433 * C42694 + C28148 * C42695 + C28150 * C42696) * C47770 *
                C47855) *
               C47820 +
           ((C22411 * C42694 + C22743 * C42695 + C23779 * C42696) * C47770 *
                C1703 -
            (C22743 * C42696 + C22411 * C42695 + C21879 * C42694) * C47770 *
                C1702 -
            (C28149 * C42696 + C23779 * C42695 + C22743 * C42694) * C47770 *
                C47855) *
               C47626) *
              C47806 +
          (((C26434 * C42694 + C26435 * C42695 + C28488 * C42696) * C47770 *
                C1703 -
            (C26435 * C42696 + C26434 * C42695 +
             (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C42694) *
                C47770 * C1702 -
            ((C21709 * C1886 + C28484 + C28484 + C47508 * C1898) * C42696 +
             C28488 * C42695 + C26435 * C42694) *
                C47770 * C47855) *
               C47820 +
           ((C21882 * C42694 + C22412 * C42695 + C23564 * C42696) * C47770 *
                C1702 -
            (C28350 * C42696 + C23564 * C42695 + C22412 * C42694) * C47770 *
                C1703 +
            (C23564 * C42694 + C28350 * C42695 +
             (C21709 * C6856 + C28485 + C28485 + C47508 * C6860) * C42696) *
                C47770 * C47855) *
               C47626) *
              C47546)) /
            (p * q * std::sqrt(p + q));
    d2ee[211] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C42694 +
            C26432 * C42695 + C26433 * C42696) *
               C47770 * C47821 -
           (C28148 * C42696 + C26433 * C42695 + C26432 * C42694) * C47770 *
               C47668) *
              C1318 +
          ((C22411 * C42694 + C22743 * C42695 + C23779 * C42696) * C47770 *
               C47668 -
           (C22743 * C42696 + C22411 * C42695 + C21879 * C42694) * C47770 *
               C47821) *
              C1319 +
          ((C21880 * C42694 + C22410 * C42695 + C22744 * C42696) * C47770 *
               C47821 -
           (C23778 * C42696 + C22744 * C42695 + C22410 * C42694) * C47770 *
               C47668) *
              C1320 +
          ((C22745 * C42694 + C22746 * C42695 +
            (C21709 * C23765 + C23773 + C23773 + C47508 * C23767) * C42696) *
               C47770 * C47668 -
           (C22746 * C42696 + C22745 * C42695 + C21881 * C42694) * C47770 *
               C47821) *
              C47862) *
         C47535) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C42694 +
             C26432 * C42695 + C26433 * C42696) *
                C47770 * C47821 -
            (C28148 * C42696 + C26433 * C42695 + C26432 * C42694) * C47770 *
                C47668) *
               C47820 +
           ((C22411 * C42694 + C22743 * C42695 + C23779 * C42696) * C47770 *
                C47668 -
            (C22743 * C42696 + C22411 * C42695 + C21879 * C42694) * C47770 *
                C47821) *
               C47626) *
              C268 +
          (((C26434 * C42694 + C26435 * C42695 + C28488 * C42696) * C47770 *
                C47668 -
            (C26435 * C42696 + C26434 * C42695 +
             (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C42694) *
                C47770 * C47821) *
               C47820 +
           ((C21882 * C42694 + C22412 * C42695 + C23564 * C42696) * C47770 *
                C47821 -
            (C28350 * C42696 + C23564 * C42695 + C22412 * C42694) * C47770 *
                C47668) *
               C47626) *
              C269 +
          ((((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C42694 +
             C26436 * C42695 + C26438 * C42696) *
                C47770 * C47821 -
            (C42924 * C42696 + C26438 * C42695 + C26436 * C42694) * C47770 *
                C47668) *
               C47820 +
           ((C22415 * C42694 + C26437 * C42695 +
             (C21709 * C2266 + C26417 + C26417 + C47508 * C2272) * C42696) *
                C47770 * C47668 -
            (C26437 * C42696 + C22415 * C42695 + C21885 * C42694) * C47770 *
                C47821) *
               C47626) *
              C47846)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C42694 +
            C26432 * C42695 + C26433 * C42696) *
               C47770 * C2156 -
           (C28148 * C42696 + C26433 * C42695 + C26432 * C42694) * C47770 *
               C2157 +
           (C26433 * C42694 + C28148 * C42695 + C28150 * C42696) * C47770 *
               C2158 -
           (C44187 * C42696 + C28150 * C42695 + C28148 * C42694) * C47770 *
               C47868) *
              C47820 +
          ((C22411 * C42694 + C22743 * C42695 + C23779 * C42696) * C47770 *
               C2157 -
           (C22743 * C42696 + C22411 * C42695 + C21879 * C42694) * C47770 *
               C2156 -
           (C28149 * C42696 + C23779 * C42695 + C22743 * C42694) * C47770 *
               C2158 +
           (C23779 * C42694 + C28149 * C42695 +
            (C21709 * C28130 + C28141 + C28141 + C47508 * C28132) * C42696) *
               C47770 * C47868) *
              C47626) *
         C47535) /
            (p * q * std::sqrt(p + q));
    d2ee[212] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C42694 +
               C26432 * C42695 + C26433 * C42696) *
                  C47770 * C47581 * C47563 * C108 -
              (C26435 * C42696 + C26434 * C42695 +
               (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C42694) *
                  C47770 * C47581 * C47563 * C109 +
              ((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C42694 +
               C26436 * C42695 + C26438 * C42696) *
                  C47770 * C47581 * C47563 * C110 -
              ((C21709 * C439 + C26708 + C26708 + C47508 * C459) * C42696 +
               C26712 * C42695 +
               (C21709 * C122 + C21723 + C21723 + C47508 * C136) * C42694) *
                  C47770 * C47581 * C47563 * C111 +
              ((C21709 * C123 + C21724 + C21724 + C47508 * C137) * C42694 +
               (C21709 * C440 + C26096 + C26096 + C47508 * C460) * C42695 +
               (C21709 * C441 + C42698 + C42698 + C47508 * C461) * C42696) *
                  C47770 * C47581 * C47563 * C112) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C42694 +
                C26432 * C42695 + C26433 * C42696) *
                   C47770 * C47581 * C47891 -
               (C22743 * C42696 + C22411 * C42695 + C21879 * C42694) * C47770 *
                   C47581 * C47879 +
               (C21880 * C42694 + C22410 * C42695 + C22744 * C42696) * C47770 *
                   C47581 * C47852) *
                  C268 +
              ((C21882 * C42694 + C22412 * C42695 + C23564 * C42696) * C47770 *
                   C47581 * C47879 -
               (C26435 * C42696 + C26434 * C42695 +
                (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C42694) *
                   C47770 * C47581 * C47891 -
               (C23563 * C42696 + C22413 * C42695 + C21883 * C42694) * C47770 *
                   C47581 * C47852) *
                  C269 +
              (((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C42694 +
                C26436 * C42695 + C26438 * C42696) *
                   C47770 * C47581 * C47891 -
               (C26437 * C42696 + C22415 * C42695 + C21885 * C42694) * C47770 *
                   C47581 * C47879 +
               (C21886 * C42694 + C22414 * C42695 +
                (C21709 * C1192 + C22024 + C22024 + C47508 * C1210) * C42696) *
                   C47770 * C47581 * C47852) *
                  C47846)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C42694 +
            C26432 * C42695 + C26433 * C42696) *
               C47770 * C47892 -
           (C28148 * C42696 + C26433 * C42695 + C26432 * C42694) * C47770 *
               C47881 +
           (C26433 * C42694 + C28148 * C42695 + C28150 * C42696) * C47770 *
               C47855) *
              C47563 * C268 +
          ((C26434 * C42694 + C26435 * C42695 + C28488 * C42696) * C47770 *
               C47881 -
           (C26435 * C42696 + C26434 * C42695 +
            (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C42694) *
               C47770 * C47892 -
           ((C21709 * C1886 + C28484 + C28484 + C47508 * C1898) * C42696 +
            C28488 * C42695 + C26435 * C42694) *
               C47770 * C47855) *
              C47563 * C269 +
          (((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C42694 +
            C26436 * C42695 + C26438 * C42696) *
               C47770 * C47892 -
           (C42924 * C42696 + C26438 * C42695 + C26436 * C42694) * C47770 *
               C47881 +
           (C26438 * C42694 + C42924 * C42695 +
            (C21709 * C1887 + C42921 + C42921 + C47508 * C1899) * C42696) *
               C47770 * C47855) *
              C47563 * C47846)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C42694 +
            C26432 * C42695 + C26433 * C42696) *
               C47770 * C47581 * C976 -
           (C22743 * C42696 + C22411 * C42695 + C21879 * C42694) * C47770 *
               C47581 * C977 +
           (C21880 * C42694 + C22410 * C42695 + C22744 * C42696) * C47770 *
               C47581 * C47852) *
              C47888 +
          ((C21882 * C42694 + C22412 * C42695 + C23564 * C42696) * C47770 *
               C47581 * C977 -
           (C26435 * C42696 + C26434 * C42695 +
            (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C42694) *
               C47770 * C47581 * C976 -
           (C23563 * C42696 + C22413 * C42695 + C21883 * C42694) * C47770 *
               C47581 * C47852) *
              C47875 +
          (((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C42694 +
            C26436 * C42695 + C26438 * C42696) *
               C47770 * C47581 * C976 -
           (C26437 * C42696 + C22415 * C42695 + C21885 * C42694) * C47770 *
               C47581 * C977 +
           (C21886 * C42694 + C22414 * C42695 +
            (C21709 * C1192 + C22024 + C22024 + C47508 * C1210) * C42696) *
               C47770 * C47581 * C47852) *
              C47846)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C42694 +
           C26432 * C42695 + C26433 * C42696) *
              C47770 * C47581 * C1044 -
          (C22743 * C42696 + C22411 * C42695 + C21879 * C42694) * C47770 *
              C47581 * C1045 +
          (C21880 * C42694 + C22410 * C42695 + C22744 * C42696) * C47770 *
              C47581 * C1046 -
          (C22746 * C42696 + C22745 * C42695 + C21881 * C42694) * C47770 *
              C47581 * C1047 +
          (C22607 * C42694 + C23115 * C42695 +
           (C21709 * C22720 + C22734 + C22734 + C47508 * C22722) * C42696) *
              C47770 * C47581 * C1048) *
         C47535) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C42694 +
            C26432 * C42695 + C26433 * C42696) *
               C47770 * C47892 -
           (C28148 * C42696 + C26433 * C42695 + C26432 * C42694) * C47770 *
               C47881 +
           (C26433 * C42694 + C28148 * C42695 + C28150 * C42696) * C47770 *
               C47855) *
              C976 +
          ((C22411 * C42694 + C22743 * C42695 + C23779 * C42696) * C47770 *
               C47881 -
           (C22743 * C42696 + C22411 * C42695 + C21879 * C42694) * C47770 *
               C47892 -
           (C28149 * C42696 + C23779 * C42695 + C22743 * C42694) * C47770 *
               C47855) *
              C977 +
          ((C21880 * C42694 + C22410 * C42695 + C22744 * C42696) * C47770 *
               C47892 -
           (C23778 * C42696 + C22744 * C42695 + C22410 * C42694) * C47770 *
               C47881 +
           (C22744 * C42694 + C23778 * C42695 +
            (C21709 * C23398 + C23407 + C23407 + C47508 * C23400) * C42696) *
               C47770 * C47855) *
              C47852) *
         C47535) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C42694 +
            C26432 * C42695 + C26433 * C42696) *
               C47770 * C1702 -
           (C28148 * C42696 + C26433 * C42695 + C26432 * C42694) * C47770 *
               C1703 +
           (C26433 * C42694 + C28148 * C42695 + C28150 * C42696) * C47770 *
               C47855) *
              C47563 * C47888 +
          ((C26434 * C42694 + C26435 * C42695 + C28488 * C42696) * C47770 *
               C1703 -
           (C26435 * C42696 + C26434 * C42695 +
            (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C42694) *
               C47770 * C1702 -
           ((C21709 * C1886 + C28484 + C28484 + C47508 * C1898) * C42696 +
            C28488 * C42695 + C26435 * C42694) *
               C47770 * C47855) *
              C47563 * C47875 +
          (((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C42694 +
            C26436 * C42695 + C26438 * C42696) *
               C47770 * C1702 -
           (C42924 * C42696 + C26438 * C42695 + C26436 * C42694) * C47770 *
               C1703 +
           (C26438 * C42694 + C42924 * C42695 +
            (C21709 * C1887 + C42921 + C42921 + C47508 * C1899) * C42696) *
               C47770 * C47855) *
              C47563 * C47846)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C42694 +
            C26432 * C42695 + C26433 * C42696) *
               C47770 * C1702 -
           (C28148 * C42696 + C26433 * C42695 + C26432 * C42694) * C47770 *
               C1703 +
           (C26433 * C42694 + C28148 * C42695 + C28150 * C42696) * C47770 *
               C47855) *
              C47891 +
          ((C22411 * C42694 + C22743 * C42695 + C23779 * C42696) * C47770 *
               C1703 -
           (C22743 * C42696 + C22411 * C42695 + C21879 * C42694) * C47770 *
               C1702 -
           (C28149 * C42696 + C23779 * C42695 + C22743 * C42694) * C47770 *
               C47855) *
              C47879 +
          ((C21880 * C42694 + C22410 * C42695 + C22744 * C42696) * C47770 *
               C1702 -
           (C23778 * C42696 + C22744 * C42695 + C22410 * C42694) * C47770 *
               C1703 +
           (C22744 * C42694 + C23778 * C42695 +
            (C21709 * C23398 + C23407 + C23407 + C47508 * C23400) * C42696) *
               C47770 * C47855) *
              C47852) *
         C47535) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C42694 +
           C26432 * C42695 + C26433 * C42696) *
              C47770 * C1877 -
          (C28148 * C42696 + C26433 * C42695 + C26432 * C42694) * C47770 *
              C1878 +
          (C26433 * C42694 + C28148 * C42695 + C28150 * C42696) * C47770 *
              C1879 -
          (C44187 * C42696 + C28150 * C42695 + C28148 * C42694) * C47770 *
              C1880 +
          (C28150 * C42694 + C44187 * C42695 +
           (C21709 * C44178 + C44184 + C44184 + C47508 * C44180) * C42696) *
              C47770 * C1881) *
         C47563 * C47535) /
            (p * q * std::sqrt(p + q));
    d2ee[213] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C42694 +
             C26432 * C42695 + C26433 * C42696) *
                C47770 * C47821 -
            (C28148 * C42696 + C26433 * C42695 + C26432 * C42694) * C47770 *
                C47668) *
               C976 +
           ((C22411 * C42694 + C22743 * C42695 + C23779 * C42696) * C47770 *
                C47668 -
            (C22743 * C42696 + C22411 * C42695 + C21879 * C42694) * C47770 *
                C47821) *
               C977 +
           ((C21880 * C42694 + C22410 * C42695 + C22744 * C42696) * C47770 *
                C47821 -
            (C23778 * C42696 + C22744 * C42695 + C22410 * C42694) * C47770 *
                C47668) *
               C47852) *
              C47806 +
          (((C26434 * C42694 + C26435 * C42695 + C28488 * C42696) * C47770 *
                C47668 -
            (C26435 * C42696 + C26434 * C42695 +
             (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C42694) *
                C47770 * C47821) *
               C976 +
           ((C21882 * C42694 + C22412 * C42695 + C23564 * C42696) * C47770 *
                C47821 -
            (C28350 * C42696 + C23564 * C42695 + C22412 * C42694) * C47770 *
                C47668) *
               C977 +
           ((C22413 * C42694 + C23563 * C42695 +
             (C21709 * C7340 + C23667 + C23667 + C47508 * C7344) * C42696) *
                C47770 * C47668 -
            (C23563 * C42696 + C22413 * C42695 + C21883 * C42694) * C47770 *
                C47821) *
               C47852) *
              C47546)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C42694 +
            C26432 * C42695 + C26433 * C42696) *
               C47770 * C47821 -
           (C28148 * C42696 + C26433 * C42695 + C26432 * C42694) * C47770 *
               C47668) *
              C47563 * C580 +
          ((C26434 * C42694 + C26435 * C42695 + C28488 * C42696) * C47770 *
               C47668 -
           (C26435 * C42696 + C26434 * C42695 +
            (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C42694) *
               C47770 * C47821) *
              C47563 * C581 +
          (((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C42694 +
            C26436 * C42695 + C26438 * C42696) *
               C47770 * C47821 -
           (C42924 * C42696 + C26438 * C42695 + C26436 * C42694) * C47770 *
               C47668) *
              C47563 * C582 +
          ((C26712 * C42694 + C43126 * C42695 +
            (C21709 * C2160 + C43123 + C43123 + C47508 * C2162) * C42696) *
               C47770 * C47668 -
           (C43126 * C42696 + C26712 * C42695 +
            (C21709 * C122 + C21723 + C21723 + C47508 * C136) * C42694) *
               C47770 * C47821) *
              C47563 * C47856)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C42694 +
            C26432 * C42695 + C26433 * C42696) *
               C47770 * C2156 -
           (C28148 * C42696 + C26433 * C42695 + C26432 * C42694) * C47770 *
               C2157 +
           (C26433 * C42694 + C28148 * C42695 + C28150 * C42696) * C47770 *
               C2158 -
           (C44187 * C42696 + C28150 * C42695 + C28148 * C42694) * C47770 *
               C47868) *
              C47563 * C47806 +
          ((C26434 * C42694 + C26435 * C42695 + C28488 * C42696) * C47770 *
               C2157 -
           (C26435 * C42696 + C26434 * C42695 +
            (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C42694) *
               C47770 * C2156 -
           (C44437 * C42696 + C28488 * C42695 + C26435 * C42694) * C47770 *
               C2158 +
           (C28488 * C42694 + C44437 * C42695 +
            (C21709 * C12430 + C44434 + C44434 + C47508 * C12434) * C42696) *
               C47770 * C47868) *
              C47563 * C47546)) /
            (p * q * std::sqrt(p + q));
    d2ee[214] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C42694 +
            C26432 * C42695 + C26433 * C42696) *
               C47770 * C47581 * C47891 -
           (C22743 * C42696 + C22411 * C42695 + C21879 * C42694) * C47770 *
               C47581 * C47879 +
           (C21880 * C42694 + C22410 * C42695 + C22744 * C42696) * C47770 *
               C47581 * C47852) *
              C268 +
          ((C21882 * C42694 + C22412 * C42695 + C23564 * C42696) * C47770 *
               C47581 * C47879 -
           (C26435 * C42696 + C26434 * C42695 +
            (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C42694) *
               C47770 * C47581 * C47891 -
           (C23563 * C42696 + C22413 * C42695 + C21883 * C42694) * C47770 *
               C47581 * C47852) *
              C269 +
          (((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C42694 +
            C26436 * C42695 + C26438 * C42696) *
               C47770 * C47581 * C47891 -
           (C26437 * C42696 + C22415 * C42695 + C21885 * C42694) * C47770 *
               C47581 * C47879 +
           (C21886 * C42694 + C22414 * C42695 +
            (C21709 * C1192 + C22024 + C22024 + C47508 * C1210) * C42696) *
               C47770 * C47581 * C47852) *
              C47846)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C42694 +
           C26432 * C42695 + C26433 * C42696) *
              C47770 * C47581 * C47563 * C108 -
          (C26435 * C42696 + C26434 * C42695 +
           (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C42694) *
              C47770 * C47581 * C47563 * C109 +
          ((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C42694 +
           C26436 * C42695 + C26438 * C42696) *
              C47770 * C47581 * C47563 * C110 -
          ((C21709 * C439 + C26708 + C26708 + C47508 * C459) * C42696 +
           C26712 * C42695 +
           (C21709 * C122 + C21723 + C21723 + C47508 * C136) * C42694) *
              C47770 * C47581 * C47563 * C111 +
          ((C21709 * C123 + C21724 + C21724 + C47508 * C137) * C42694 +
           (C21709 * C440 + C26096 + C26096 + C47508 * C460) * C42695 +
           (C21709 * C441 + C42698 + C42698 + C47508 * C461) * C42696) *
              C47770 * C47581 * C47563 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C42694 +
            C26432 * C42695 + C26433 * C42696) *
               C47770 * C47581 * C976 -
           (C22743 * C42696 + C22411 * C42695 + C21879 * C42694) * C47770 *
               C47581 * C977 +
           (C21880 * C42694 + C22410 * C42695 + C22744 * C42696) * C47770 *
               C47581 * C47852) *
              C47888 +
          ((C21882 * C42694 + C22412 * C42695 + C23564 * C42696) * C47770 *
               C47581 * C977 -
           (C26435 * C42696 + C26434 * C42695 +
            (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C42694) *
               C47770 * C47581 * C976 -
           (C23563 * C42696 + C22413 * C42695 + C21883 * C42694) * C47770 *
               C47581 * C47852) *
              C47875 +
          (((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C42694 +
            C26436 * C42695 + C26438 * C42696) *
               C47770 * C47581 * C976 -
           (C26437 * C42696 + C22415 * C42695 + C21885 * C42694) * C47770 *
               C47581 * C977 +
           (C21886 * C42694 + C22414 * C42695 +
            (C21709 * C1192 + C22024 + C22024 + C47508 * C1210) * C42696) *
               C47770 * C47581 * C47852) *
              C47846)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C42694 +
           C26432 * C42695 + C26433 * C42696) *
              C47770 * C47581 * C1044 -
          (C22743 * C42696 + C22411 * C42695 + C21879 * C42694) * C47770 *
              C47581 * C1045 +
          (C21880 * C42694 + C22410 * C42695 + C22744 * C42696) * C47770 *
              C47581 * C1046 -
          (C22746 * C42696 + C22745 * C42695 + C21881 * C42694) * C47770 *
              C47581 * C1047 +
          (C22607 * C42694 + C23115 * C42695 +
           (C21709 * C22720 + C22734 + C22734 + C47508 * C22722) * C42696) *
              C47770 * C47581 * C1048) *
         C47535) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C42694 +
            C26432 * C42695 + C26433 * C42696) *
               C47770 * C1702 -
           (C28148 * C42696 + C26433 * C42695 + C26432 * C42694) * C47770 *
               C1703 +
           (C26433 * C42694 + C28148 * C42695 + C28150 * C42696) * C47770 *
               C47855) *
              C47563 * C47888 +
          ((C26434 * C42694 + C26435 * C42695 + C28488 * C42696) * C47770 *
               C1703 -
           (C26435 * C42696 + C26434 * C42695 +
            (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C42694) *
               C47770 * C1702 -
           ((C21709 * C1886 + C28484 + C28484 + C47508 * C1898) * C42696 +
            C28488 * C42695 + C26435 * C42694) *
               C47770 * C47855) *
              C47563 * C47875 +
          (((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C42694 +
            C26436 * C42695 + C26438 * C42696) *
               C47770 * C1702 -
           (C42924 * C42696 + C26438 * C42695 + C26436 * C42694) * C47770 *
               C1703 +
           (C26438 * C42694 + C42924 * C42695 +
            (C21709 * C1887 + C42921 + C42921 + C47508 * C1899) * C42696) *
               C47770 * C47855) *
              C47563 * C47846)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C42694 +
            C26432 * C42695 + C26433 * C42696) *
               C47770 * C1702 -
           (C28148 * C42696 + C26433 * C42695 + C26432 * C42694) * C47770 *
               C1703 +
           (C26433 * C42694 + C28148 * C42695 + C28150 * C42696) * C47770 *
               C47855) *
              C47891 +
          ((C22411 * C42694 + C22743 * C42695 + C23779 * C42696) * C47770 *
               C1703 -
           (C22743 * C42696 + C22411 * C42695 + C21879 * C42694) * C47770 *
               C1702 -
           (C28149 * C42696 + C23779 * C42695 + C22743 * C42694) * C47770 *
               C47855) *
              C47879 +
          ((C21880 * C42694 + C22410 * C42695 + C22744 * C42696) * C47770 *
               C1702 -
           (C23778 * C42696 + C22744 * C42695 + C22410 * C42694) * C47770 *
               C1703 +
           (C22744 * C42694 + C23778 * C42695 +
            (C21709 * C23398 + C23407 + C23407 + C47508 * C23400) * C42696) *
               C47770 * C47855) *
              C47852) *
         C47535) /
            (p * q * std::sqrt(p + q));
    d2ee[215] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C42694 +
             C26432 * C42695 + C26433 * C42696) *
                C47770 * C3136 -
            (C28148 * C42696 + C26433 * C42695 + C26432 * C42694) * C47770 *
                C47668) *
               C47820 +
           ((C22411 * C42694 + C22743 * C42695 + C23779 * C42696) * C47770 *
                C47668 -
            (C22743 * C42696 + C22411 * C42695 + C21879 * C42694) * C47770 *
                C3136) *
               C47626) *
              C47540 +
          (((C26434 * C42694 + C26435 * C42695 + C28488 * C42696) * C47770 *
                C47668 -
            (C26435 * C42696 + C26434 * C42695 +
             (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C42694) *
                C47770 * C3136) *
               C47820 +
           ((C21882 * C42694 + C22412 * C42695 + C23564 * C42696) * C47770 *
                C3136 -
            (C28350 * C42696 + C23564 * C42695 + C22412 * C42694) * C47770 *
                C47668) *
               C47626) *
              C47549 +
          ((((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C42694 +
             C26436 * C42695 + C26438 * C42696) *
                C47770 * C3136 -
            (C42924 * C42696 + C26438 * C42695 + C26436 * C42694) * C47770 *
                C47668) *
               C47820 +
           ((C22415 * C42694 + C26437 * C42695 +
             (C21709 * C2266 + C26417 + C26417 + C47508 * C2272) * C42696) *
                C47770 * C47668 -
            (C26437 * C42696 + C22415 * C42695 + C21885 * C42694) * C47770 *
                C3136) *
               C47626) *
              C2745)) /
        (p * q * std::sqrt(p + q));
    d2ee[216] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C42694 +
             C26432 * C42695 + C26433 * C42696) *
                C47770 * C47664 -
            (C28148 * C42696 + C26433 * C42695 + C26432 * C42694) * C47770 *
                C47671 +
            (C26433 * C42694 + C28148 * C42695 + C28150 * C42696) * C47770 *
                C3644) *
               C47820 +
           ((C22411 * C42694 + C22743 * C42695 + C23779 * C42696) * C47770 *
                C47671 -
            (C22743 * C42696 + C22411 * C42695 + C21879 * C42694) * C47770 *
                C47664 -
            (C28149 * C42696 + C23779 * C42695 + C22743 * C42694) * C47770 *
                C3644) *
               C47626) *
              C2482 +
          (((C26434 * C42694 + C26435 * C42695 + C28488 * C42696) * C47770 *
                C47671 -
            (C26435 * C42696 + C26434 * C42695 +
             (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C42694) *
                C47770 * C47664 -
            (C44437 * C42696 + C28488 * C42695 + C26435 * C42694) * C47770 *
                C3644) *
               C47820 +
           ((C21882 * C42694 + C22412 * C42695 + C23564 * C42696) * C47770 *
                C47664 -
            (C28350 * C42696 + C23564 * C42695 + C22412 * C42694) * C47770 *
                C47671 +
            (C23564 * C42694 + C28350 * C42695 +
             (C21709 * C6856 + C28485 + C28485 + C47508 * C6860) * C42696) *
                C47770 * C3644) *
               C47626) *
              C47546)) /
        (p * q * std::sqrt(p + q));
    d2ee[217] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C42694 +
             C26432 * C42695 + C26433 * C42696) *
                C47770 * C3136 -
            (C28148 * C42696 + C26433 * C42695 + C26432 * C42694) * C47770 *
                C47668) *
               C47891 +
           ((C22411 * C42694 + C22743 * C42695 + C23779 * C42696) * C47770 *
                C47668 -
            (C22743 * C42696 + C22411 * C42695 + C21879 * C42694) * C47770 *
                C3136) *
               C47879 +
           ((C21880 * C42694 + C22410 * C42695 + C22744 * C42696) * C47770 *
                C3136 -
            (C23778 * C42696 + C22744 * C42695 + C22410 * C42694) * C47770 *
                C47668) *
               C47852) *
              C2482 +
          (((C26434 * C42694 + C26435 * C42695 + C28488 * C42696) * C47770 *
                C47668 -
            (C26435 * C42696 + C26434 * C42695 +
             (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C42694) *
                C47770 * C3136) *
               C47891 +
           ((C21882 * C42694 + C22412 * C42695 + C23564 * C42696) * C47770 *
                C3136 -
            (C28350 * C42696 + C23564 * C42695 + C22412 * C42694) * C47770 *
                C47668) *
               C47879 +
           ((C22413 * C42694 + C23563 * C42695 +
             (C21709 * C7340 + C23667 + C23667 + C47508 * C7344) * C42696) *
                C47770 * C47668 -
            (C23563 * C42696 + C22413 * C42695 + C21883 * C42694) * C47770 *
                C3136) *
               C47852) *
              C47546)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C42694 +
            C26432 * C42695 + C26433 * C42696) *
               C47770 * C3136 -
           (C28148 * C42696 + C26433 * C42695 + C26432 * C42694) * C47770 *
               C47668) *
              C47563 * C47897 +
          ((C26434 * C42694 + C26435 * C42695 + C28488 * C42696) * C47770 *
               C47668 -
           (C26435 * C42696 + C26434 * C42695 +
            (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C42694) *
               C47770 * C3136) *
              C47563 * C47890 +
          (((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C42694 +
            C26436 * C42695 + C26438 * C42696) *
               C47770 * C3136 -
           (C42924 * C42696 + C26438 * C42695 + C26436 * C42694) * C47770 *
               C47668) *
              C47563 * C47877 +
          ((C26712 * C42694 + C43126 * C42695 +
            (C21709 * C2160 + C43123 + C43123 + C47508 * C2162) * C42696) *
               C47770 * C47668 -
           (C43126 * C42696 + C26712 * C42695 +
            (C21709 * C122 + C21723 + C21723 + C47508 * C136) * C42694) *
               C47770 * C3136) *
              C47563 * C47856)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C42694 +
            C26432 * C42695 + C26433 * C42696) *
               C47770 * C47899 -
           (C28148 * C42696 + C26433 * C42695 + C26432 * C42694) * C47770 *
               C47896 +
           (C26433 * C42694 + C28148 * C42695 + C28150 * C42696) * C47770 *
               C47887 -
           (C44187 * C42696 + C28150 * C42695 + C28148 * C42694) * C47770 *
               C47868) *
              C47563 * C2482 +
          ((C26434 * C42694 + C26435 * C42695 + C28488 * C42696) * C47770 *
               C47896 -
           (C26435 * C42696 + C26434 * C42695 +
            (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C42694) *
               C47770 * C47899 -
           (C44437 * C42696 + C28488 * C42695 + C26435 * C42694) * C47770 *
               C47887 +
           (C28488 * C42694 + C44437 * C42695 +
            (C21709 * C12430 + C44434 + C44434 + C47508 * C12434) * C42696) *
               C47770 * C47868) *
              C47563 * C47546)) /
            (p * q * std::sqrt(p + q));
    d2ee[218] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C42694 +
            C26432 * C42695 + C26433 * C42696) *
               C47770 * C47664 -
           (C28148 * C42696 + C26433 * C42695 + C26432 * C42694) * C47770 *
               C47671 +
           (C26433 * C42694 + C28148 * C42695 + C28150 * C42696) * C47770 *
               C3644) *
              C47563 * C47540 +
          ((C26434 * C42694 + C26435 * C42695 + C28488 * C42696) * C47770 *
               C47671 -
           (C26435 * C42696 + C26434 * C42695 +
            (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C42694) *
               C47770 * C47664 -
           (C44437 * C42696 + C28488 * C42695 + C26435 * C42694) * C47770 *
               C3644) *
              C47563 * C47549 +
          (((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C42694 +
            C26436 * C42695 + C26438 * C42696) *
               C47770 * C47664 -
           (C42924 * C42696 + C26438 * C42695 + C26436 * C42694) * C47770 *
               C47671 +
           (C26438 * C42694 + C42924 * C42695 +
            (C21709 * C1887 + C42921 + C42921 + C47508 * C1899) * C42696) *
               C47770 * C3644) *
              C47563 * C2745)) /
        (p * q * std::sqrt(p + q));
    d2ee[219] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C42694 +
            C26432 * C42695 + C26433 * C42696) *
               C47770 * C3136 -
           (C28148 * C42696 + C26433 * C42695 + C26432 * C42694) * C47770 *
               C47668) *
              C47563 * C47897 +
          ((C26434 * C42694 + C26435 * C42695 + C28488 * C42696) * C47770 *
               C47668 -
           (C26435 * C42696 + C26434 * C42695 +
            (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C42694) *
               C47770 * C3136) *
              C47563 * C47890 +
          (((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C42694 +
            C26436 * C42695 + C26438 * C42696) *
               C47770 * C3136 -
           (C42924 * C42696 + C26438 * C42695 + C26436 * C42694) * C47770 *
               C47668) *
              C47563 * C47877 +
          ((C26712 * C42694 + C43126 * C42695 +
            (C21709 * C2160 + C43123 + C43123 + C47508 * C2162) * C42696) *
               C47770 * C47668 -
           (C43126 * C42696 + C26712 * C42695 +
            (C21709 * C122 + C21723 + C21723 + C47508 * C136) * C42694) *
               C47770 * C3136) *
              C47563 * C47856)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C42694 +
             C26432 * C42695 + C26433 * C42696) *
                C47770 * C3136 -
            (C28148 * C42696 + C26433 * C42695 + C26432 * C42694) * C47770 *
                C47668) *
               C47891 +
           ((C22411 * C42694 + C22743 * C42695 + C23779 * C42696) * C47770 *
                C47668 -
            (C22743 * C42696 + C22411 * C42695 + C21879 * C42694) * C47770 *
                C3136) *
               C47879 +
           ((C21880 * C42694 + C22410 * C42695 + C22744 * C42696) * C47770 *
                C3136 -
            (C23778 * C42696 + C22744 * C42695 + C22410 * C42694) * C47770 *
                C47668) *
               C47852) *
              C2482 +
          (((C26434 * C42694 + C26435 * C42695 + C28488 * C42696) * C47770 *
                C47668 -
            (C26435 * C42696 + C26434 * C42695 +
             (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C42694) *
                C47770 * C3136) *
               C47891 +
           ((C21882 * C42694 + C22412 * C42695 + C23564 * C42696) * C47770 *
                C3136 -
            (C28350 * C42696 + C23564 * C42695 + C22412 * C42694) * C47770 *
                C47668) *
               C47879 +
           ((C22413 * C42694 + C23563 * C42695 +
             (C21709 * C7340 + C23667 + C23667 + C47508 * C7344) * C42696) *
                C47770 * C47668 -
            (C23563 * C42696 + C22413 * C42695 + C21883 * C42694) * C47770 *
                C3136) *
               C47852) *
              C47546)) /
            (p * q * std::sqrt(p + q));
    d2ee[220] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C42694 +
            C26432 * C42695 + C26433 * C42696) *
               C47770 * C47581 * C47820 -
           (C22743 * C42696 + C22411 * C42695 + C21879 * C42694) * C47770 *
               C47581 * C47626) *
              C580 +
          ((C21882 * C42694 + C22412 * C42695 + C23564 * C42696) * C47770 *
               C47581 * C47626 -
           (C26435 * C42696 + C26434 * C42695 +
            (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C42694) *
               C47770 * C47581 * C47820) *
              C581 +
          (((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C42694 +
            C26436 * C42695 + C26438 * C42696) *
               C47770 * C47581 * C47820 -
           (C26437 * C42696 + C22415 * C42695 + C21885 * C42694) * C47770 *
               C47581 * C47626) *
              C582 +
          ((C22132 * C42694 + C26574 * C42695 +
            (C21709 * C2052 + C26709 + C26709 + C47508 * C2054) * C42696) *
               C47770 * C47581 * C47626 -
           ((C21709 * C439 + C26708 + C26708 + C47508 * C459) * C42696 +
            C26712 * C42695 +
            (C21709 * C122 + C21723 + C21723 + C47508 * C136) * C42694) *
               C47770 * C47581 * C47820) *
              C47856)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C42694 +
            C26432 * C42695 + C26433 * C42696) *
               C47770 * C47581 * C1318 -
           (C22743 * C42696 + C22411 * C42695 + C21879 * C42694) * C47770 *
               C47581 * C1319 +
           (C21880 * C42694 + C22410 * C42695 + C22744 * C42696) * C47770 *
               C47581 * C1320 -
           (C22746 * C42696 + C22745 * C42695 + C21881 * C42694) * C47770 *
               C47581 * C47862) *
              C47806 +
          ((C21882 * C42694 + C22412 * C42695 + C23564 * C42696) * C47770 *
               C47581 * C1319 -
           (C26435 * C42696 + C26434 * C42695 +
            (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C42694) *
               C47770 * C47581 * C1318 -
           (C23563 * C42696 + C22413 * C42695 + C21883 * C42694) * C47770 *
               C47581 * C1320 +
           (C21884 * C42694 + C23007 * C42695 +
            (C21709 * C5944 + C23558 + C23558 + C47508 * C5948) * C42696) *
               C47770 * C47581 * C47862) *
              C47546)) /
            (p * q * std::sqrt(p + q));
    d2ee[221] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C42694 +
             C26432 * C42695 + C26433 * C42696) *
                C47770 * C47821 -
            (C28148 * C42696 + C26433 * C42695 + C26432 * C42694) * C47770 *
                C47668) *
               C47820 +
           ((C22411 * C42694 + C22743 * C42695 + C23779 * C42696) * C47770 *
                C47668 -
            (C22743 * C42696 + C22411 * C42695 + C21879 * C42694) * C47770 *
                C47821) *
               C47626) *
              C268 +
          (((C26434 * C42694 + C26435 * C42695 + C28488 * C42696) * C47770 *
                C47668 -
            (C26435 * C42696 + C26434 * C42695 +
             (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C42694) *
                C47770 * C47821) *
               C47820 +
           ((C21882 * C42694 + C22412 * C42695 + C23564 * C42696) * C47770 *
                C47821 -
            (C28350 * C42696 + C23564 * C42695 + C22412 * C42694) * C47770 *
                C47668) *
               C47626) *
              C269 +
          ((((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C42694 +
             C26436 * C42695 + C26438 * C42696) *
                C47770 * C47821 -
            (C42924 * C42696 + C26438 * C42695 + C26436 * C42694) * C47770 *
                C47668) *
               C47820 +
           ((C22415 * C42694 + C26437 * C42695 +
             (C21709 * C2266 + C26417 + C26417 + C47508 * C2272) * C42696) *
                C47770 * C47668 -
            (C26437 * C42696 + C22415 * C42695 + C21885 * C42694) * C47770 *
                C47821) *
               C47626) *
              C47846)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C42694 +
            C26432 * C42695 + C26433 * C42696) *
               C47770 * C47821 -
           (C28148 * C42696 + C26433 * C42695 + C26432 * C42694) * C47770 *
               C47668) *
              C1318 +
          ((C22411 * C42694 + C22743 * C42695 + C23779 * C42696) * C47770 *
               C47668 -
           (C22743 * C42696 + C22411 * C42695 + C21879 * C42694) * C47770 *
               C47821) *
              C1319 +
          ((C21880 * C42694 + C22410 * C42695 + C22744 * C42696) * C47770 *
               C47821 -
           (C23778 * C42696 + C22744 * C42695 + C22410 * C42694) * C47770 *
               C47668) *
              C1320 +
          ((C22745 * C42694 + C22746 * C42695 +
            (C21709 * C23765 + C23773 + C23773 + C47508 * C23767) * C42696) *
               C47770 * C47668 -
           (C22746 * C42696 + C22745 * C42695 + C21881 * C42694) * C47770 *
               C47821) *
              C47862) *
         C47535) /
            (p * q * std::sqrt(p + q));
    d2ee[222] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C42694 +
            C26432 * C42695 + C26433 * C42696) *
               C47770 * C47581 * C47891 -
           (C22743 * C42696 + C22411 * C42695 + C21879 * C42694) * C47770 *
               C47581 * C47879 +
           (C21880 * C42694 + C22410 * C42695 + C22744 * C42696) * C47770 *
               C47581 * C47852) *
              C268 +
          ((C21882 * C42694 + C22412 * C42695 + C23564 * C42696) * C47770 *
               C47581 * C47879 -
           (C26435 * C42696 + C26434 * C42695 +
            (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C42694) *
               C47770 * C47581 * C47891 -
           (C23563 * C42696 + C22413 * C42695 + C21883 * C42694) * C47770 *
               C47581 * C47852) *
              C269 +
          (((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C42694 +
            C26436 * C42695 + C26438 * C42696) *
               C47770 * C47581 * C47891 -
           (C26437 * C42696 + C22415 * C42695 + C21885 * C42694) * C47770 *
               C47581 * C47879 +
           (C21886 * C42694 + C22414 * C42695 +
            (C21709 * C1192 + C22024 + C22024 + C47508 * C1210) * C42696) *
               C47770 * C47581 * C47852) *
              C47846)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C42694 +
           C26432 * C42695 + C26433 * C42696) *
              C47770 * C47581 * C47563 * C108 -
          (C26435 * C42696 + C26434 * C42695 +
           (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C42694) *
              C47770 * C47581 * C47563 * C109 +
          ((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C42694 +
           C26436 * C42695 + C26438 * C42696) *
              C47770 * C47581 * C47563 * C110 -
          ((C21709 * C439 + C26708 + C26708 + C47508 * C459) * C42696 +
           C26712 * C42695 +
           (C21709 * C122 + C21723 + C21723 + C47508 * C136) * C42694) *
              C47770 * C47581 * C47563 * C111 +
          ((C21709 * C123 + C21724 + C21724 + C47508 * C137) * C42694 +
           (C21709 * C440 + C26096 + C26096 + C47508 * C460) * C42695 +
           (C21709 * C441 + C42698 + C42698 + C47508 * C461) * C42696) *
              C47770 * C47581 * C47563 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C42694 +
            C26432 * C42695 + C26433 * C42696) *
               C47770 * C47892 -
           (C28148 * C42696 + C26433 * C42695 + C26432 * C42694) * C47770 *
               C47881 +
           (C26433 * C42694 + C28148 * C42695 + C28150 * C42696) * C47770 *
               C47855) *
              C47563 * C268 +
          ((C26434 * C42694 + C26435 * C42695 + C28488 * C42696) * C47770 *
               C47881 -
           (C26435 * C42696 + C26434 * C42695 +
            (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C42694) *
               C47770 * C47892 -
           ((C21709 * C1886 + C28484 + C28484 + C47508 * C1898) * C42696 +
            C28488 * C42695 + C26435 * C42694) *
               C47770 * C47855) *
              C47563 * C269 +
          (((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C42694 +
            C26436 * C42695 + C26438 * C42696) *
               C47770 * C47892 -
           (C42924 * C42696 + C26438 * C42695 + C26436 * C42694) * C47770 *
               C47881 +
           (C26438 * C42694 + C42924 * C42695 +
            (C21709 * C1887 + C42921 + C42921 + C47508 * C1899) * C42696) *
               C47770 * C47855) *
              C47563 * C47846)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C42694 +
            C26432 * C42695 + C26433 * C42696) *
               C47770 * C47581 * C976 -
           (C22743 * C42696 + C22411 * C42695 + C21879 * C42694) * C47770 *
               C47581 * C977 +
           (C21880 * C42694 + C22410 * C42695 + C22744 * C42696) * C47770 *
               C47581 * C47852) *
              C47888 +
          ((C21882 * C42694 + C22412 * C42695 + C23564 * C42696) * C47770 *
               C47581 * C977 -
           (C26435 * C42696 + C26434 * C42695 +
            (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C42694) *
               C47770 * C47581 * C976 -
           (C23563 * C42696 + C22413 * C42695 + C21883 * C42694) * C47770 *
               C47581 * C47852) *
              C47875 +
          (((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C42694 +
            C26436 * C42695 + C26438 * C42696) *
               C47770 * C47581 * C976 -
           (C26437 * C42696 + C22415 * C42695 + C21885 * C42694) * C47770 *
               C47581 * C977 +
           (C21886 * C42694 + C22414 * C42695 +
            (C21709 * C1192 + C22024 + C22024 + C47508 * C1210) * C42696) *
               C47770 * C47581 * C47852) *
              C47846)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C42694 +
           C26432 * C42695 + C26433 * C42696) *
              C47770 * C47581 * C1044 -
          (C22743 * C42696 + C22411 * C42695 + C21879 * C42694) * C47770 *
              C47581 * C1045 +
          (C21880 * C42694 + C22410 * C42695 + C22744 * C42696) * C47770 *
              C47581 * C1046 -
          (C22746 * C42696 + C22745 * C42695 + C21881 * C42694) * C47770 *
              C47581 * C1047 +
          (C22607 * C42694 + C23115 * C42695 +
           (C21709 * C22720 + C22734 + C22734 + C47508 * C22722) * C42696) *
              C47770 * C47581 * C1048) *
         C47535) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C42694 +
            C26432 * C42695 + C26433 * C42696) *
               C47770 * C47892 -
           (C28148 * C42696 + C26433 * C42695 + C26432 * C42694) * C47770 *
               C47881 +
           (C26433 * C42694 + C28148 * C42695 + C28150 * C42696) * C47770 *
               C47855) *
              C976 +
          ((C22411 * C42694 + C22743 * C42695 + C23779 * C42696) * C47770 *
               C47881 -
           (C22743 * C42696 + C22411 * C42695 + C21879 * C42694) * C47770 *
               C47892 -
           (C28149 * C42696 + C23779 * C42695 + C22743 * C42694) * C47770 *
               C47855) *
              C977 +
          ((C21880 * C42694 + C22410 * C42695 + C22744 * C42696) * C47770 *
               C47892 -
           (C23778 * C42696 + C22744 * C42695 + C22410 * C42694) * C47770 *
               C47881 +
           (C22744 * C42694 + C23778 * C42695 +
            (C21709 * C23398 + C23407 + C23407 + C47508 * C23400) * C42696) *
               C47770 * C47855) *
              C47852) *
         C47535) /
            (p * q * std::sqrt(p + q));
    d2ee[223] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C42694 +
            C26432 * C42695 + C26433 * C42696) *
               C47770 * C47821 -
           (C28148 * C42696 + C26433 * C42695 + C26432 * C42694) * C47770 *
               C47668) *
              C47563 * C580 +
          ((C26434 * C42694 + C26435 * C42695 + C28488 * C42696) * C47770 *
               C47668 -
           (C26435 * C42696 + C26434 * C42695 +
            (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C42694) *
               C47770 * C47821) *
              C47563 * C581 +
          (((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C42694 +
            C26436 * C42695 + C26438 * C42696) *
               C47770 * C47821 -
           (C42924 * C42696 + C26438 * C42695 + C26436 * C42694) * C47770 *
               C47668) *
              C47563 * C582 +
          ((C26712 * C42694 + C43126 * C42695 +
            (C21709 * C2160 + C43123 + C43123 + C47508 * C2162) * C42696) *
               C47770 * C47668 -
           (C43126 * C42696 + C26712 * C42695 +
            (C21709 * C122 + C21723 + C21723 + C47508 * C136) * C42694) *
               C47770 * C47821) *
              C47563 * C47856)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C42694 +
             C26432 * C42695 + C26433 * C42696) *
                C47770 * C47821 -
            (C28148 * C42696 + C26433 * C42695 + C26432 * C42694) * C47770 *
                C47668) *
               C976 +
           ((C22411 * C42694 + C22743 * C42695 + C23779 * C42696) * C47770 *
                C47668 -
            (C22743 * C42696 + C22411 * C42695 + C21879 * C42694) * C47770 *
                C47821) *
               C977 +
           ((C21880 * C42694 + C22410 * C42695 + C22744 * C42696) * C47770 *
                C47821 -
            (C23778 * C42696 + C22744 * C42695 + C22410 * C42694) * C47770 *
                C47668) *
               C47852) *
              C47806 +
          (((C26434 * C42694 + C26435 * C42695 + C28488 * C42696) * C47770 *
                C47668 -
            (C26435 * C42696 + C26434 * C42695 +
             (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C42694) *
                C47770 * C47821) *
               C976 +
           ((C21882 * C42694 + C22412 * C42695 + C23564 * C42696) * C47770 *
                C47821 -
            (C28350 * C42696 + C23564 * C42695 + C22412 * C42694) * C47770 *
                C47668) *
               C977 +
           ((C22413 * C42694 + C23563 * C42695 +
             (C21709 * C7340 + C23667 + C23667 + C47508 * C7344) * C42696) *
                C47770 * C47668 -
            (C23563 * C42696 + C22413 * C42695 + C21883 * C42694) * C47770 *
                C47821) *
               C47852) *
              C47546)) /
            (p * q * std::sqrt(p + q));
    d2ee[224] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C42694 +
           C26432 * C42695 + C26433 * C42696) *
              C47770 * C47581 * C47563 * C108 -
          (C26435 * C42696 + C26434 * C42695 +
           (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C42694) *
              C47770 * C47581 * C47563 * C109 +
          ((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C42694 +
           C26436 * C42695 + C26438 * C42696) *
              C47770 * C47581 * C47563 * C110 -
          ((C21709 * C439 + C26708 + C26708 + C47508 * C459) * C42696 +
           C26712 * C42695 +
           (C21709 * C122 + C21723 + C21723 + C47508 * C136) * C42694) *
              C47770 * C47581 * C47563 * C111 +
          ((C21709 * C123 + C21724 + C21724 + C47508 * C137) * C42694 +
           (C21709 * C440 + C26096 + C26096 + C47508 * C460) * C42695 +
           (C21709 * C441 + C42698 + C42698 + C47508 * C461) * C42696) *
              C47770 * C47581 * C47563 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C42694 +
            C26432 * C42695 + C26433 * C42696) *
               C47770 * C47581 * C47891 -
           (C22743 * C42696 + C22411 * C42695 + C21879 * C42694) * C47770 *
               C47581 * C47879 +
           (C21880 * C42694 + C22410 * C42695 + C22744 * C42696) * C47770 *
               C47581 * C47852) *
              C268 +
          ((C21882 * C42694 + C22412 * C42695 + C23564 * C42696) * C47770 *
               C47581 * C47879 -
           (C26435 * C42696 + C26434 * C42695 +
            (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C42694) *
               C47770 * C47581 * C47891 -
           (C23563 * C42696 + C22413 * C42695 + C21883 * C42694) * C47770 *
               C47581 * C47852) *
              C269 +
          (((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C42694 +
            C26436 * C42695 + C26438 * C42696) *
               C47770 * C47581 * C47891 -
           (C26437 * C42696 + C22415 * C42695 + C21885 * C42694) * C47770 *
               C47581 * C47879 +
           (C21886 * C42694 + C22414 * C42695 +
            (C21709 * C1192 + C22024 + C22024 + C47508 * C1210) * C42696) *
               C47770 * C47581 * C47852) *
              C47846)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C42694 +
            C26432 * C42695 + C26433 * C42696) *
               C47770 * C47581 * C976 -
           (C22743 * C42696 + C22411 * C42695 + C21879 * C42694) * C47770 *
               C47581 * C977 +
           (C21880 * C42694 + C22410 * C42695 + C22744 * C42696) * C47770 *
               C47581 * C47852) *
              C47888 +
          ((C21882 * C42694 + C22412 * C42695 + C23564 * C42696) * C47770 *
               C47581 * C977 -
           (C26435 * C42696 + C26434 * C42695 +
            (C21709 * C120 + C21717 + C21717 + C47508 * C134) * C42694) *
               C47770 * C47581 * C976 -
           (C23563 * C42696 + C22413 * C42695 + C21883 * C42694) * C47770 *
               C47581 * C47852) *
              C47875 +
          (((C21709 * C121 + C21718 + C21718 + C47508 * C135) * C42694 +
            C26436 * C42695 + C26438 * C42696) *
               C47770 * C47581 * C976 -
           (C26437 * C42696 + C22415 * C42695 + C21885 * C42694) * C47770 *
               C47581 * C977 +
           (C21886 * C42694 + C22414 * C42695 +
            (C21709 * C1192 + C22024 + C22024 + C47508 * C1210) * C42696) *
               C47770 * C47581 * C47852) *
              C47846)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C21709 * C119 + C21712 + C21712 + C47508 * C133) * C42694 +
           C26432 * C42695 + C26433 * C42696) *
              C47770 * C47581 * C1044 -
          (C22743 * C42696 + C22411 * C42695 + C21879 * C42694) * C47770 *
              C47581 * C1045 +
          (C21880 * C42694 + C22410 * C42695 + C22744 * C42696) * C47770 *
              C47581 * C1046 -
          (C22746 * C42696 + C22745 * C42695 + C21881 * C42694) * C47770 *
              C47581 * C1047 +
          (C22607 * C42694 + C23115 * C42695 +
           (C21709 * C22720 + C22734 + C22734 + C47508 * C22722) * C42696) *
              C47770 * C47581 * C1048) *
         C47535) /
            (p * q * std::sqrt(p + q));
}
