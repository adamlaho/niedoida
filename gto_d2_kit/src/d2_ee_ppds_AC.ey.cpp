/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "gto_d2_kit/d2_ee_ppds_AC.hpp"
#include <cmath>
/*

*/
#pragma GCC optimize("O0")
namespace {
    const double Pi = M_PI;
}
//
void second_derivative_ee_1120_13(const double ae,
                                  const double xA,
                                  const double yA,
                                  const double zA,
                                  const double be,
                                  const double xB,
                                  const double yB,
                                  const double zB,
                                  const double ce,
                                  const double xC,
                                  const double yC,
                                  const double zC,
                                  const double de,
                                  const double xD,
                                  const double yD,
                                  const double zD,
                                  const double* const bs,
                                  double* const d2eexx,
                                  double* const d2eexy,
                                  double* const d2eexz,
                                  double* const d2eeyx,
                                  double* const d2eeyy,
                                  double* const d2eeyz,
                                  double* const d2eezx,
                                  double* const d2eezy,
                                  double* const d2eezz)
{
    const double p = ae + be;
    const double q = ce + de;
    const double xP = (ae * xA + be * xB) / p;
    const double yP = (ae * yA + be * yB) / p;
    const double zP = (ae * zA + be * zB) / p;
    const double xQ = (ce * xC + de * xD) / q;
    const double yQ = (ce * yC + de * yD) / q;
    const double zQ = (ce * zC + de * zD) / q;
    const double C28431 = ae * be;
    const double C28430 = ae + be;
    const double C28429 = 0 * be;
    const double C28428 = xA - xB;
    const double C28450 = ce * de;
    const double C28449 = 0 * de;
    const double C28448 = xC - xD;
    const double C28447 = ce + de;
    const double C28477 = 0 * de;
    const double C28476 = yC - yD;
    const double C28493 = 0 * de;
    const double C28492 = zC - zD;
    const double C28521 = yA - yB;
    const double C28528 = zA - zB;
    const double C28546 = 0 * be;
    const double C28562 = 0 * be;
    const double C28572 = p + q;
    const double C28571 = p * q;
    const double C28577 = xP - xQ;
    const double C28576 = bs[2];
    const double C28586 = ae * ce;
    const double C28582 = bs[3];
    const double C28595 = bs[4];
    const double C28616 = bs[5];
    const double C28653 = yP - yQ;
    const double C28683 = zP - zQ;
    const double C93 = bs[0];
    const double C28432 = std::pow(C28430, 2);
    const double C29504 = 2 * C28430;
    const double C28433 = C28431 * C28428;
    const double C29495 = std::pow(C28428, 2);
    const double C29670 = C28428 * be;
    const double C29669 = C28428 * ae;
    const double C28452 = C28450 * C28448;
    const double C29507 = std::pow(C28448, 2);
    const double C29672 = C28448 * de;
    const double C28451 = 2 * C28447;
    const double C28578 = C28447 * C28430;
    const double C29673 = std::pow(C28447, 2);
    const double C28478 = C28450 * C28476;
    const double C29528 = std::pow(C28476, 2);
    const double C29676 = C28476 * de;
    const double C28494 = C28450 * C28492;
    const double C29539 = std::pow(C28492, 2);
    const double C29677 = C28492 * de;
    const double C28547 = C28431 * C28521;
    const double C29584 = std::pow(C28521, 2);
    const double C29680 = C28521 * be;
    const double C29678 = C28521 * ae;
    const double C28563 = C28431 * C28528;
    const double C29599 = std::pow(C28528, 2);
    const double C29681 = C28528 * be;
    const double C29679 = C28528 * ae;
    const double C28573 = 2 * C28571;
    const double C28587 = C28577 * ae;
    const double C28585 = std::pow(C28577, 2);
    const double C28583 = C28577 * ce;
    const double C28656 = C28577 * C28653;
    const double C28655 = C28653 * ce;
    const double C28715 = C28653 * C28577;
    const double C28714 = C28653 * ae;
    const double C28743 = std::pow(C28653, 2);
    const double C28686 = C28577 * C28683;
    const double C28685 = C28683 * ce;
    const double C28757 = C28653 * C28683;
    const double C28770 = C28683 * C28577;
    const double C28769 = C28683 * ae;
    const double C28798 = C28683 * C28653;
    const double C28810 = std::pow(C28683, 2);
    const double C28434 = 2 * C28432;
    const double C29671 = std::pow(C29504, -1);
    const double C29496 = C29495 * C28431;
    const double C29508 = C29507 * C28450;
    const double C29675 = std::pow(C28451, -2);
    const double C29674 = std::pow(C28451, -1);
    const double C29529 = C29528 * C28450;
    const double C29540 = C29539 * C28450;
    const double C29585 = C29584 * C28431;
    const double C29600 = C29599 * C28431;
    const double C28575 = C28573 / C28572;
    const double C108 =
        (-((std::pow(xP - xQ, 2) * bs[2] * std::pow(C28573 / C28572, 2) -
            (bs[1] * C28573) / C28572) *
           ae * ce) /
         C28447) /
        C28430;
    const double C94 = -(C28577 * bs[1] * C28573) / C28572;
    const double C628 = -(C28653 * bs[1] * C28573) / C28572;
    const double C1072 = -(C28683 * bs[1] * C28573) / C28572;
    const double C28590 = C28582 * C28587;
    const double C28601 = C28595 * C28587;
    const double C28625 = C28616 * C28587;
    const double C98 = (-(bs[1] * C28587 * C28573) / C28572) / C28430;
    const double C28597 = C28585 * C28595;
    const double C28620 = C28585 * C28616;
    const double C28589 = C28582 * C28583;
    const double C28598 = C28595 * C28583;
    const double C28621 = C28616 * C28583;
    const double C101 = (bs[1] * C28583 * C28573) / (C28572 * C28447);
    const double C28658 = C28656 * ae;
    const double C28657 = C28582 * C28655;
    const double C28663 = C28595 * C28655;
    const double C28670 = C28616 * C28655;
    const double C152 = (bs[1] * C28655 * C28573) / (C28572 * C28447);
    const double C28717 = C28715 * ae;
    const double C28716 = C28582 * C28714;
    const double C28722 = C28595 * C28714;
    const double C28729 = C28616 * C28714;
    const double C250 = (-(bs[1] * C28714 * C28573) / C28572) / C28430;
    const double C28745 = C28743 * C28595;
    const double C28750 = C28743 * C28616;
    const double C28688 = C28686 * ae;
    const double C28687 = C28582 * C28685;
    const double C28693 = C28595 * C28685;
    const double C28700 = C28616 * C28685;
    const double C201 = (bs[1] * C28685 * C28573) / (C28572 * C28447);
    const double C28758 = C28757 * ae;
    const double C28772 = C28770 * ae;
    const double C28771 = C28582 * C28769;
    const double C28777 = C28595 * C28769;
    const double C28784 = C28616 * C28769;
    const double C437 = (-(bs[1] * C28769 * C28573) / C28572) / C28430;
    const double C28799 = C28798 * ae;
    const double C28812 = C28810 * C28595;
    const double C28817 = C28810 * C28616;
    const double C29497 = C29496 / C28430;
    const double C29509 = C29508 / C28447;
    const double C29530 = C29529 / C28447;
    const double C29541 = C29540 / C28447;
    const double C29586 = C29585 / C28430;
    const double C29601 = C29600 / C28430;
    const double C28579 = std::pow(C28575, 2);
    const double C28581 = -C28575;
    const double C28596 = std::pow(C28575, 4);
    const double C28660 = C28658 * ce;
    const double C28719 = C28717 * ce;
    const double C28690 = C28688 * ce;
    const double C28759 = C28758 * ce;
    const double C28774 = C28772 * ce;
    const double C28800 = C28799 * ce;
    const double C29498 = -C29497;
    const double C29510 = -C29509;
    const double C29531 = -C29530;
    const double C29542 = -C29541;
    const double C29587 = -C29586;
    const double C29602 = -C29601;
    const double C28584 = C28576 * C28579;
    const double C109 =
        (-(C28579 * C28576 * C28577 * ae * ce) / C28447) / C28430 -
        (ae * C28579 * C28576 * C28577 * ce) / C28578 -
        (C28577 *
         (C28576 * C28579 +
          std::pow(C28577, 2) * bs[3] * std::pow(-C28575, 3)) *
         ae * ce) /
            C28578;
    const double C157 =
        (-(C28579 * C28576 * C28577 * (yP - yQ) * ae * ce) / C28447) / C28430;
    const double C206 =
        (-(C28579 * C28576 * C28577 * (zP - zQ) * ae * ce) / C28447) / C28430;
    const double C255 =
        (-(C28579 * C28576 * C28653 * C28577 * ae * ce) / C28447) / C28430;
    const double C316 =
        (-((std::pow(C28653, 2) * C28576 * C28579 - (bs[1] * C28573) / C28572) *
           C28586) /
         C28447) /
        C28430;
    const double C376 =
        (-(C28579 * C28576 * C28653 * C28683 * ae * ce) / C28447) / C28430;
    const double C442 =
        (-(C28579 * C28576 * C28683 * C28577 * ae * ce) / C28447) / C28430;
    const double C503 =
        (-(C28579 * C28576 * C28683 * C28653 * ae * ce) / C28447) / C28430;
    const double C562 =
        (-((std::pow(C28683, 2) * C28576 * C28579 - (bs[1] * C28573) / C28572) *
           C28586) /
         C28447) /
        C28430;
    const double C99 = (C28577 * C28579 * C28576 * C28587) / C28430 -
                       (ae * bs[1] * C28573) / (C28572 * C28430);
    const double C102 = (ce * bs[1] * C28573) / (C28572 * C28447) -
                        (C28577 * C28579 * C28576 * C28583) / C28447;
    const double C153 = -(C28577 * C28579 * C28576 * C28655) / C28447;
    const double C202 = -(C28577 * C28579 * C28576 * C28685) / C28447;
    const double C251 = (C28577 * C28579 * C28576 * C28714) / C28430;
    const double C438 = (C28577 * C28579 * C28576 * C28769) / C28430;
    const double C634 = -(C28653 * C28579 * C28576 * C28583) / C28447;
    const double C637 = (C28653 * C28579 * C28576 * C28587) / C28430;
    const double C693 = (ce * bs[1] * C28573) / (C28572 * C28447) -
                        (C28653 * C28579 * C28576 * C28655) / C28447;
    const double C743 = -(C28653 * C28579 * C28576 * C28685) / C28447;
    const double C793 = (C28653 * C28579 * C28576 * C28714) / C28430 -
                        (ae * bs[1] * C28573) / (C28572 * C28430);
    const double C931 = (C28653 * C28579 * C28576 * C28769) / C28430;
    const double C1078 = -(C28683 * C28579 * C28576 * C28583) / C28447;
    const double C1081 = (C28683 * C28579 * C28576 * C28587) / C28430;
    const double C1134 = -(C28683 * C28579 * C28576 * C28655) / C28447;
    const double C1187 = (ce * bs[1] * C28573) / (C28572 * C28447) -
                         (C28683 * C28579 * C28576 * C28685) / C28447;
    const double C1237 = (C28683 * C28579 * C28576 * C28714) / C28430;
    const double C1375 = (C28683 * C28579 * C28576 * C28769) / C28430 -
                         (ae * bs[1] * C28573) / (C28572 * C28430);
    const double C28588 = std::pow(C28581, 3);
    const double C28617 = std::pow(C28581, 5);
    const double C28605 = C28596 * C28601;
    const double C28604 = C28596 * C28598;
    const double C28603 = C28597 * C28596;
    const double C28615 = C28595 * C28596;
    const double C28665 = C28596 * C28663;
    const double C28695 = C28596 * C28693;
    const double C28724 = C28596 * C28722;
    const double C28746 = C28745 * C28596;
    const double C28779 = C28596 * C28777;
    const double C28813 = C28812 * C28596;
    const double C28662 = C28595 * C28660;
    const double C28668 = C28616 * C28660;
    const double C28721 = C28595 * C28719;
    const double C28727 = C28616 * C28719;
    const double C28692 = C28595 * C28690;
    const double C28698 = C28616 * C28690;
    const double C28761 = C28595 * C28759;
    const double C28764 = C28616 * C28759;
    const double C28776 = C28595 * C28774;
    const double C28782 = C28616 * C28774;
    const double C28802 = C28595 * C28800;
    const double C28805 = C28616 * C28800;
    const double C29499 = std::exp(C29498);
    const double C29511 = std::exp(C29510);
    const double C29532 = std::exp(C29531);
    const double C29543 = std::exp(C29542);
    const double C29588 = std::exp(C29587);
    const double C29603 = std::exp(C29602);
    const double C95 = C28584 * C28585 - (bs[1] * C28573) / C28572;
    const double C627 = C28653 * C28577 * C28584;
    const double C629 = C28584 * C28743 - (bs[1] * C28573) / C28572;
    const double C1071 = C28683 * C28577 * C28584;
    const double C1073 = C28584 * C28810 - (bs[1] * C28573) / C28572;
    const double C2611 = C28683 * C28653 * C28584;
    const double C28592 = C28588 * C28590;
    const double C28591 = C28588 * C28589;
    const double C28594 = C28582 * C28588;
    const double C28659 = C28588 * C28657;
    const double C28689 = C28588 * C28687;
    const double C28718 = C28588 * C28716;
    const double C28773 = C28588 * C28771;
    const double C158 =
        (-(C28577 * C28588 * C28582 * C28577 * C28653 * ae * ce) / C28447) /
            C28430 -
        (ae * C28579 * C28576 * C28653 * ce) / C28578;
    const double C207 =
        (-(C28577 * C28588 * C28582 * C28577 * C28683 * ae * ce) / C28447) /
            C28430 -
        (ae * C28579 * C28576 * C28683 * ce) / C28578;
    const double C256 =
        (-(C28577 * C28588 * C28582 * C28653 * C28577 * ae * ce) / C28447) /
            C28430 -
        (C28579 * C28576 * C28653 * ae * ce) / C28578;
    const double C317 =
        (-(C28577 * (C28584 + std::pow(C28653, 2) * C28582 * C28588) * C28586) /
         C28447) /
        C28430;
    const double C377 =
        (-(C28577 * C28588 * C28582 * C28653 * C28683 * ae * ce) / C28447) /
        C28430;
    const double C378 =
        (-(C28596 * C28595 * C28759 * C28585) / C28447) / C28430 -
        (C28588 * C28582 * C28759) / C28578;
    const double C443 =
        (-(C28577 * C28588 * C28582 * C28683 * C28577 * ae * ce) / C28447) /
            C28430 -
        (C28579 * C28576 * C28683 * ae * ce) / C28578;
    const double C504 =
        (-(C28577 * C28588 * C28582 * C28683 * C28653 * ae * ce) / C28447) /
        C28430;
    const double C505 =
        (-(C28596 * C28595 * C28800 * C28585) / C28447) / C28430 -
        (C28588 * C28582 * C28800) / C28578;
    const double C563 =
        (-(C28577 * (C28584 + std::pow(C28683, 2) * C28582 * C28588) * C28586) /
         C28447) /
        C28430;
    const double C646 =
        (-(C28653 * (C28584 + C28585 * C28582 * C28588) * C28586) / C28447) /
        C28430;
    const double C699 =
        (-(C28653 * C28588 * C28582 * C28660) / C28447) / C28430 -
        (C28579 * C28576 * C28587 * ce) / C28578;
    const double C749 =
        (-(C28653 * C28588 * C28582 * C28690) / C28447) / C28430;
    const double C799 =
        (-(C28653 * C28588 * C28582 * C28719) / C28447) / C28430 -
        (ae * C28579 * C28576 * C28583) / C28578;
    const double C841 =
        (-(C28579 * C28576 * C28714 * ce) / C28447) / C28430 -
        (ae * C28579 * C28576 * C28655) / C28578 -
        (C28653 * (C28584 + C28743 * C28582 * C28588) * C28586) / C28578;
    const double C887 =
        (-(C28653 * C28588 * C28582 * C28759) / C28447) / C28430 -
        (ae * C28579 * C28576 * C28685) / C28578;
    const double C937 =
        (-(C28653 * C28588 * C28582 * C28774) / C28447) / C28430;
    const double C979 =
        (-(C28653 * C28588 * C28582 * C28800) / C28447) / C28430 -
        (C28579 * C28576 * C28769 * ce) / C28578;
    const double C1025 =
        (-(C28653 * (C28584 + C28810 * C28582 * C28588) * C28586) / C28447) /
        C28430;
    const double C1090 =
        (-(C28683 * (C28584 + C28585 * C28582 * C28588) * C28586) / C28447) /
        C28430;
    const double C1140 =
        (-(C28683 * C28588 * C28582 * C28660) / C28447) / C28430;
    const double C1193 =
        (-(C28683 * C28588 * C28582 * C28690) / C28447) / C28430 -
        (C28579 * C28576 * C28587 * ce) / C28578;
    const double C1243 =
        (-(C28683 * C28588 * C28582 * C28719) / C28447) / C28430;
    const double C1287 =
        (-(C28683 * (C28584 + C28743 * C28582 * C28588) * C28586) / C28447) /
        C28430;
    const double C1329 =
        (-(C28683 * C28588 * C28582 * C28759) / C28447) / C28430 -
        (C28579 * C28576 * C28714 * ce) / C28578;
    const double C1381 =
        (-(C28683 * C28588 * C28582 * C28774) / C28447) / C28430 -
        (ae * C28579 * C28576 * C28583) / C28578;
    const double C1425 =
        (-(C28683 * C28588 * C28582 * C28800) / C28447) / C28430 -
        (ae * C28579 * C28576 * C28655) / C28578;
    const double C1467 =
        (-(C28579 * C28576 * C28769 * ce) / C28447) / C28430 -
        (ae * C28579 * C28576 * C28685) / C28578 -
        (C28683 * (C28584 + C28810 * C28582 * C28588) * C28586) / C28578;
    const double C28632 = C28617 * C28625;
    const double C28629 = C28617 * C28621;
    const double C28628 = C28620 * C28617;
    const double C28673 = C28617 * C28670;
    const double C28703 = C28617 * C28700;
    const double C28732 = C28617 * C28729;
    const double C28751 = C28750 * C28617;
    const double C28787 = C28617 * C28784;
    const double C28818 = C28817 * C28617;
    const double C28608 = C28577 * C28605;
    const double C28613 = C28605 * ce;
    const double C29017 = C28653 * C28605;
    const double C29193 = C28683 * C28605;
    const double C28607 = C28577 * C28604;
    const double C28614 = ae * C28604;
    const double C29027 = C28653 * C28604;
    const double C29208 = C28683 * C28604;
    const double C28626 = C28615 * ae;
    const double C28624 = C28615 * C28585;
    const double C28623 = C28577 * C28615;
    const double C28622 = C28615 * ce;
    const double C29108 = C28615 * C28743;
    const double C29107 = C28653 * C28615;
    const double C29230 = C28615 * C28810;
    const double C29229 = C28683 * C28615;
    const double C28669 = ae * C28665;
    const double C28667 = C28577 * C28665;
    const double C28985 = C28653 * C28665;
    const double C29217 = C28683 * C28665;
    const double C28699 = ae * C28695;
    const double C28697 = C28577 * C28695;
    const double C29033 = C28653 * C28695;
    const double C29073 = C28683 * C28695;
    const double C28728 = C28724 * ce;
    const double C28726 = C28577 * C28724;
    const double C28987 = C28653 * C28724;
    const double C29204 = C28683 * C28724;
    const double C28783 = C28779 * ce;
    const double C28781 = C28577 * C28779;
    const double C29034 = C28653 * C28779;
    const double C29075 = C28683 * C28779;
    const double C28664 = C28596 * C28662;
    const double C28671 = C28617 * C28668;
    const double C28723 = C28596 * C28721;
    const double C28730 = C28617 * C28727;
    const double C28694 = C28596 * C28692;
    const double C28701 = C28617 * C28698;
    const double C28762 = C28596 * C28761;
    const double C28765 = C28617 * C28764;
    const double C28778 = C28596 * C28776;
    const double C28785 = C28617 * C28782;
    const double C28803 = C28596 * C28802;
    const double C28806 = C28617 * C28805;
    const double C13761 = C29499 * C637;
    const double C16971 = C29499 * C1081;
    const double C28435 = C28433 * C29499;
    const double C29683 = C29671 * C29499;
    const double C29682 = C29499 * C29669;
    const double C3109 = -(C29499 * C29670) / C28430;
    const double C28453 = C28452 * C29511;
    const double C29684 = C29511 * C29672;
    const double C80 =
        (C29511 * std::pow(C29672, 2)) / C29673 + C29511 / C28451;
    const double C82 = C29675 * C29511;
    const double C1524 = C29674 * C29511;
    const double C28479 = C28478 * C29532;
    const double C151 = -(2 * C28450 * (yC - yD) * C29532) / C28447;
    const double C29685 = C29532 * C29676;
    const double C622 =
        (C29532 * std::pow(C29676, 2)) / C29673 + C29532 / C28451;
    const double C624 = C29675 * C29532;
    const double C1526 = C29674 * C29532;
    const double C28495 = C28494 * C29543;
    const double C200 = -(2 * C28450 * (zC - zD) * C29543) / C28447;
    const double C29686 = C29543 * C29677;
    const double C1067 =
        (C29543 * std::pow(C29677, 2)) / C29673 + C29543 / C28451;
    const double C1069 = C29675 * C29543;
    const double C2070 = C29674 * C29543;
    const double C262 = C29588 * C251;
    const double C7819 = C29588 * C1237;
    const double C28548 = C28547 * C29588;
    const double C249 = -(2 * C28431 * (yA - yB) * C29588) / C28430;
    const double C3265 =
        ((C29588 - (C28521 * 2 * C28431 * C28521 * C29588) / C28430) * ae) /
            C28430 -
        (0 * be) / C28434;
    const double C3266 =
        (0 * ae) / C28430 - (C28431 * C28521 * C29588) / C28432;
    const double C10241 =
        (-(0 * be) / C28430) / (2 * C28430) -
        ((C29588 - (C28521 * 2 * C28431 * C28521 * C29588) / C28430) * be) /
            C28430;
    const double C10242 =
        (-(2 * C28431 * C28521 * C29588) / C28430) / (2 * C28430) -
        (0 * be) / C28430;
    const double C29688 = C29671 * C29588;
    const double C29687 = C29588 * C29678;
    const double C10087 = -(C29588 * C29680) / C28430;
    const double C449 = C29603 * C438;
    const double C3997 = C29603 * C931;
    const double C28564 = C28563 * C29603;
    const double C436 = -(2 * C28431 * (zA - zB) * C29603) / C28430;
    const double C6949 =
        ((C29603 - (C28528 * 2 * C28431 * C28528 * C29603) / C28430) * ae) /
            C28430 -
        (0 * be) / C28434;
    const double C6950 =
        (0 * ae) / C28430 - (C28431 * C28528 * C29603) / C28432;
    const double C19713 =
        (-(0 * be) / C28430) / (2 * C28430) -
        ((C29603 - (C28528 * 2 * C28431 * C28528 * C29603) / C28430) * be) /
            C28430;
    const double C19714 =
        (-(2 * C28431 * C28528 * C29603) / C28430) / (2 * C28430) -
        (0 * be) / C28430;
    const double C29690 = C29671 * C29603;
    const double C29689 = C29603 * C29679;
    const double C19411 = -(C29603 * C29681) / C28430;
    const double C100 =
        (C28579 * C28576 * C28587 + C28577 * (C28577 * C28592 + C28584 * ae) +
         C28577 * C28584 * ae) /
        C28430;
    const double C636 = (C28653 * (C28577 * C28592 + C28584 * ae)) / C28430;
    const double C638 = (C28579 * C28576 * C28587 + C28592 * C28743) / C28430;
    const double C1080 = (C28683 * (C28577 * C28592 + C28584 * ae)) / C28430;
    const double C1082 = (C28579 * C28576 * C28587 + C28592 * C28810) / C28430;
    const double C2614 = (C28683 * C28653 * C28592) / C28430;
    const double C3621 =
        (2 * C28653 * C28592 + C28653 * (C28592 + C28605 * C28743)) / C28430;
    const double C5991 = (C28683 * (C28592 + C28605 * C28743)) / C28430;
    const double C7601 =
        (2 * C28683 * C28592 + C28683 * (C28592 + C28605 * C28810)) / C28430;
    const double C110 =
        (-(ae * (C28577 * C28591 + C28584 * ce)) / C28447) / C28430 -
        ((C28584 + C28585 * C28582 * C28588) * C28586) / C28578 -
        ((C28577 * C28592 + C28584 * ae) * ce) / C28578 +
        C28577 * ((-(C28592 * ce) / C28447) / C28430 - (ae * C28591) / C28578 -
                  (C28577 *
                   (C28582 * C28588 + C28585 * bs[4] * std::pow(C28575, 4)) *
                   C28586) /
                      C28578);
    const double C103 = -(C28577 * (C28577 * C28591 + C28584 * ce) +
                          C28579 * C28576 * C28583 + C28577 * C28584 * ce) /
                        C28447;
    const double C633 = -(C28653 * (C28577 * C28591 + C28584 * ce)) / C28447;
    const double C641 = -(C28591 * C28743 + C28579 * C28576 * C28583) / C28447;
    const double C1077 = -(C28683 * (C28577 * C28591 + C28584 * ce)) / C28447;
    const double C1085 = -(C28591 * C28810 + C28579 * C28576 * C28583) / C28447;
    const double C2617 = -(C28683 * C28653 * C28591) / C28447;
    const double C3623 = (-2 * C28653 * C28591) / C28447 -
                         (C28653 * (C28604 * C28743 + C28591)) / C28447;
    const double C5993 = -(C28683 * (C28604 * C28743 + C28591)) / C28447;
    const double C7603 = (-2 * C28683 * C28591) / C28447 -
                         (C28683 * (C28604 * C28810 + C28591)) / C28447;
    const double C28602 = C28594 * ae;
    const double C28600 = C28577 * C28594;
    const double C28599 = C28594 * ce;
    const double C28606 = C28594 + C28603;
    const double C28747 = C28594 + C28746;
    const double C28814 = C28594 + C28813;
    const double C28986 = C28653 * C28594;
    const double C29074 = C28683 * C28594;
    const double C318 =
        (-((C28594 + C28743 * C28595 * C28596) * C28586 * C28585) / C28447) /
            C28430 -
        ((C28584 + C28743 * C28582 * C28588) * C28586) / C28578;
    const double C564 =
        (-((C28594 + C28810 * C28595 * C28596) * C28586 * C28585) / C28447) /
            C28430 -
        ((C28584 + C28810 * C28582 * C28588) * C28586) / C28578;
    const double C96 =
        2 * C28577 * C28584 + C28577 * (C28584 + C28594 * C28585);
    const double C626 = C28653 * (C28584 + C28594 * C28585);
    const double C1070 = C28683 * (C28584 + C28594 * C28585);
    const double C3619 =
        2 * C28653 * C28584 + C28653 * (C28584 + C28594 * C28743);
    const double C5989 = C28683 * (C28584 + C28594 * C28743);
    const double C7599 =
        2 * C28683 * C28584 + C28683 * (C28584 + C28594 * C28810);
    const double C159 =
        (-(ae * C28577 * C28659) / C28447) / C28430 -
        (C28588 * C28582 * C28660) / C28578 +
        C28577 * ((-(C28577 * C28596 * C28595 * C28660) / C28447) / C28430 -
                  (ae * C28659) / C28578);
    const double C154 = -(C28659 * C28585 + C28579 * C28576 * C28655) / C28447;
    const double C155 = (-2 * C28577 * C28659) / C28447 -
                        (C28577 * (C28665 * C28585 + C28659)) / C28447;
    const double C691 = -(C28653 * (C28665 * C28585 + C28659) +
                          (C28584 + C28594 * C28585) * ce) /
                        C28447;
    const double C692 =
        -(C28653 * C28577 * C28659 + C28577 * C28584 * ce) / C28447;
    const double C694 = -(C28653 * (C28653 * C28659 + C28584 * ce) +
                          C28579 * C28576 * C28655 + C28653 * C28584 * ce) /
                        C28447;
    const double C1132 = -(C28683 * (C28665 * C28585 + C28659)) / C28447;
    const double C1133 = -(C28683 * C28577 * C28659) / C28447;
    const double C1135 = -(C28659 * C28810 + C28579 * C28576 * C28655) / C28447;
    const double C2673 = -(C28683 * (C28653 * C28659 + C28584 * ce)) / C28447;
    const double C7681 = (-2 * C28683 * C28659) / C28447 -
                         (C28683 * (C28665 * C28810 + C28659)) / C28447;
    const double C208 =
        (-(ae * C28577 * C28689) / C28447) / C28430 -
        (C28588 * C28582 * C28690) / C28578 +
        C28577 * ((-(C28577 * C28596 * C28595 * C28690) / C28447) / C28430 -
                  (ae * C28689) / C28578);
    const double C203 = -(C28689 * C28585 + C28579 * C28576 * C28685) / C28447;
    const double C204 = (-2 * C28577 * C28689) / C28447 -
                        (C28577 * (C28695 * C28585 + C28689)) / C28447;
    const double C741 = -(C28653 * (C28695 * C28585 + C28689)) / C28447;
    const double C742 = -(C28653 * C28577 * C28689) / C28447;
    const double C744 = -(C28689 * C28743 + C28579 * C28576 * C28685) / C28447;
    const double C1185 = -(C28683 * (C28695 * C28585 + C28689) +
                           (C28584 + C28594 * C28585) * ce) /
                         C28447;
    const double C1186 =
        -(C28683 * C28577 * C28689 + C28577 * C28584 * ce) / C28447;
    const double C1188 = -(C28683 * (C28683 * C28689 + C28584 * ce) +
                           C28579 * C28576 * C28685 + C28683 * C28584 * ce) /
                         C28447;
    const double C2729 =
        -(C28683 * C28653 * C28689 + C28653 * C28584 * ce) / C28447;
    const double C3767 = (-2 * C28653 * C28689) / C28447 -
                         (C28653 * (C28695 * C28743 + C28689)) / C28447;
    const double C6151 = -(C28683 * (C28695 * C28743 + C28689) +
                           (C28584 + C28594 * C28743) * ce) /
                         C28447;
    const double C257 =
        (-(C28577 * C28718 * ce) / C28447) / C28430 -
        (C28588 * C28582 * C28719) / C28578 +
        C28577 * ((-(C28577 * C28596 * C28595 * C28719) / C28447) / C28430 -
                  (C28718 * ce) / C28578);
    const double C252 = (C28579 * C28576 * C28714 + C28718 * C28585) / C28430;
    const double C253 =
        (2 * C28577 * C28718 + C28577 * (C28718 + C28724 * C28585)) / C28430;
    const double C791 = (C28653 * (C28718 + C28724 * C28585) +
                         (C28584 + C28594 * C28585) * ae) /
                        C28430;
    const double C792 =
        (C28653 * C28577 * C28718 + C28577 * C28584 * ae) / C28430;
    const double C794 =
        (C28579 * C28576 * C28714 + C28653 * (C28653 * C28718 + C28584 * ae) +
         C28653 * C28584 * ae) /
        C28430;
    const double C1235 = (C28683 * (C28718 + C28724 * C28585)) / C28430;
    const double C1236 = (C28683 * C28577 * C28718) / C28430;
    const double C1238 = (C28579 * C28576 * C28714 + C28718 * C28810) / C28430;
    const double C2785 = (C28683 * (C28653 * C28718 + C28584 * ae)) / C28430;
    const double C7813 =
        (2 * C28683 * C28718 + C28683 * (C28718 + C28724 * C28810)) / C28430;
    const double C444 =
        (-(C28577 * C28773 * ce) / C28447) / C28430 -
        (C28588 * C28582 * C28774) / C28578 +
        C28577 * ((-(C28577 * C28596 * C28595 * C28774) / C28447) / C28430 -
                  (C28773 * ce) / C28578);
    const double C439 = (C28579 * C28576 * C28769 + C28773 * C28585) / C28430;
    const double C440 =
        (2 * C28577 * C28773 + C28577 * (C28773 + C28779 * C28585)) / C28430;
    const double C929 = (C28653 * (C28773 + C28779 * C28585)) / C28430;
    const double C930 = (C28653 * C28577 * C28773) / C28430;
    const double C932 = (C28579 * C28576 * C28769 + C28773 * C28743) / C28430;
    const double C1373 = (C28683 * (C28773 + C28779 * C28585) +
                          (C28584 + C28594 * C28585) * ae) /
                         C28430;
    const double C1374 =
        (C28683 * C28577 * C28773 + C28577 * C28584 * ae) / C28430;
    const double C1376 =
        (C28579 * C28576 * C28769 + C28683 * (C28683 * C28773 + C28584 * ae) +
         C28683 * C28584 * ae) /
        C28430;
    const double C2947 =
        (C28683 * C28653 * C28773 + C28653 * C28584 * ae) / C28430;
    const double C3991 =
        (2 * C28653 * C28773 + C28653 * (C28773 + C28779 * C28743)) / C28430;
    const double C6433 = (C28683 * (C28773 + C28779 * C28743) +
                          (C28584 + C28594 * C28743) * ae) /
                         C28430;
    const double C264 = C29588 * C256;
    const double C324 = C29588 * C317;
    const double C384 = C29588 * C377;
    const double C387 = C29588 * C378;
    const double C451 = C29603 * C443;
    const double C511 = C29603 * C504;
    const double C514 = C29603 * C505;
    const double C570 = C29603 * C563;
    const double C13763 = C29499 * C646;
    const double C13826 = C29499 * C699;
    const double C13876 = C29499 * C749;
    const double C3999 = C29603 * C937;
    const double C4075 = C29603 * C979;
    const double C4137 = C29603 * C1025;
    const double C16973 = C29499 * C1090;
    const double C17048 = C29499 * C1140;
    const double C17116 = C29499 * C1193;
    const double C7821 = C29588 * C1243;
    const double C7898 = C29588 * C1287;
    const double C7964 = C29588 * C1329;
    const double C28637 = C28577 * C28632;
    const double C29088 = C28632 * C28743;
    const double C29173 = C28653 * C28632;
    const double C29195 = C28632 * C28810;
    const double C28636 = C28577 * C28629;
    const double C29097 = C28629 * C28743;
    const double C29179 = C28653 * C28629;
    const double C29210 = C28629 * C28810;
    const double C28635 = C28615 + C28628;
    const double C28675 = C28673 * C28585;
    const double C28992 = C28577 * C28673;
    const double C29106 = C28653 * C28673;
    const double C29219 = C28673 * C28810;
    const double C28705 = C28703 * C28585;
    const double C29002 = C28577 * C28703;
    const double C29128 = C28703 * C28743;
    const double C29183 = C28653 * C28703;
    const double C29228 = C28683 * C28703;
    const double C28734 = C28732 * C28585;
    const double C28994 = C28577 * C28732;
    const double C29109 = C28653 * C28732;
    const double C29205 = C28732 * C28810;
    const double C28752 = C28615 + C28751;
    const double C28789 = C28787 * C28585;
    const double C29008 = C28577 * C28787;
    const double C29137 = C28787 * C28743;
    const double C29185 = C28653 * C28787;
    const double C29231 = C28683 * C28787;
    const double C28819 = C28615 + C28818;
    const double C28618 = C28613 / C28447;
    const double C29087 = C28613 / C28578;
    const double C4201 = (C28653 * C28592 + C29017 * C28810) / C28430;
    const double C28619 = C28614 / C28578;
    const double C4203 = -(C29027 * C28810 + C28653 * C28591) / C28447;
    const double C28631 = C28594 + C28624;
    const double C28633 = C28623 * ae;
    const double C28630 = C28623 * ce;
    const double C28993 = C28653 * C28623;
    const double C29080 = C28683 * C28623;
    const double C29114 = C28594 + C29108;
    const double C29116 = C29107 * ae;
    const double C29113 = C29107 * ce;
    const double C29184 = C28683 * C29107;
    const double C29236 = C28594 + C29230;
    const double C29238 = C29229 * ae;
    const double C29235 = C29229 * ce;
    const double C28672 = C28669 / C28578;
    const double C1136 = -(C28667 * C28810 + C28577 * C28659) / C28447;
    const double C28702 = C28699 / C28578;
    const double C745 = -(C28697 * C28743 + C28577 * C28689) / C28447;
    const double C28731 = C28728 / C28578;
    const double C29104 = C28728 / C28447;
    const double C1239 = (C28577 * C28718 + C28726 * C28810) / C28430;
    const double C28786 = C28783 / C28578;
    const double C29226 = C28783 / C28447;
    const double C933 = (C28577 * C28773 + C28781 * C28743) / C28430;
    const double C160 =
        2 * ((-(C28577 * C28664) / C28447) / C28430 - (ae * C28659) / C28578) -
        (ae * (C28665 * C28585 + C28659)) / C28578 +
        C28577 *
            ((-(ae * C28577 * C28665) / C28447) / C28430 - C28664 / C28578 +
             C28577 *
                 ((-(C28577 * C28617 * C28616 * C28660) / C28447) / C28430 -
                  (ae * C28665) / C28578));
    const double C698 = C28653 * ((-(C28577 * C28664) / C28447) / C28430 -
                                  (ae * C28659) / C28578) -
                        ((C28577 * C28592 + C28584 * ae) * ce) / C28578;
    const double C700 = (-(C28653 * C28592 * ce) / C28447) / C28430 -
                        (C28588 * C28582 * C28660) / C28578 +
                        C28653 * ((-(C28653 * C28664) / C28447) / C28430 -
                                  (C28592 * ce) / C28578);
    const double C1139 = C28683 * ((-(C28577 * C28664) / C28447) / C28430 -
                                   (ae * C28659) / C28578);
    const double C1141 = (-(C28664 * C28810) / C28447) / C28430 -
                         (C28588 * C28582 * C28660) / C28578;
    const double C2676 = C28683 * ((-(C28653 * C28664) / C28447) / C28430 -
                                   (C28592 * ce) / C28578);
    const double C28674 = C28577 * C28671;
    const double C29086 = C28653 * C28671;
    const double C3703 =
        2 * ((-(C28653 * C28664) / C28447) / C28430 - (C28592 * ce) / C28578) -
        ((C28592 + C28605 * C28743) * ce) / C28578 +
        C28653 *
            ((-(C28653 * C28605 * ce) / C28447) / C28430 - C28664 / C28578 +
             C28653 *
                 ((-(C28653 * C28671) / C28447) / C28430 - C28613 / C28578));
    const double C4259 =
        (-(C28653 * C28664) / C28447) / C28430 - (C28592 * ce) / C28578 +
        ((-(C28653 * C28671) / C28447) / C28430 - C28613 / C28578) * C28810;
    const double C6077 =
        C28683 *
        ((-(C29017 * ce) / C28447) / C28430 - C28664 / C28578 +
         C28653 * ((-(C28653 * C28671) / C28447) / C28430 - C28613 / C28578));
    const double C7683 =
        (-2 * C28683 * C28664) / C28578 +
        C28683 * ((-(C28671 * C28810) / C28447) / C28430 - C28664 / C28578);
    const double C26722 =
        3 * ((-(C28671 * C28810) / C28447) / C28430 - C28664 / C28578) +
        C28683 * ((-2 * C28683 * C28671) / C28578 +
                  C28683 * ((-(std::pow(C28575, 6) * bs[6] * C28660 * C28810) /
                             C28447) /
                                C28430 -
                            C28671 / C28578));
    const double C258 =
        2 * ((-(C28577 * C28723) / C28447) / C28430 - (C28718 * ce) / C28578) -
        ((C28718 + C28724 * C28585) * ce) / C28578 +
        C28577 *
            ((-(C28577 * C28724 * ce) / C28447) / C28430 - C28723 / C28578 +
             C28577 *
                 ((-(C28577 * C28617 * C28616 * C28719) / C28447) / C28430 -
                  (C28724 * ce) / C28578));
    const double C798 = C28653 * ((-(C28577 * C28723) / C28447) / C28430 -
                                  (C28718 * ce) / C28578) -
                        (ae * (C28577 * C28591 + C28584 * ce)) / C28578;
    const double C800 = (-(ae * C28653 * C28591) / C28447) / C28430 -
                        (C28588 * C28582 * C28719) / C28578 +
                        C28653 * ((-(C28653 * C28723) / C28447) / C28430 -
                                  (ae * C28591) / C28578);
    const double C1242 = C28683 * ((-(C28577 * C28723) / C28447) / C28430 -
                                   (C28718 * ce) / C28578);
    const double C1244 = (-(C28723 * C28810) / C28447) / C28430 -
                         (C28588 * C28582 * C28719) / C28578;
    const double C2788 = (-(C28653 * C28683 * C28723) / C28447) / C28430 -
                         (ae * C28683 * C28591) / C28578;
    const double C28733 = C28577 * C28730;
    const double C29096 = C28653 * C28730;
    const double C29157 = C28683 * C28730;
    const double C4367 =
        C28653 * ((-(C28730 * C28810) / C28447) / C28430 - C28723 / C28578) -
        (ae * (C28604 * C28810 + C28591)) / C28578;
    const double C6229 =
        (-(ae * C28683 * C29027) / C28447) / C28430 -
        (C28683 * C28723) / C28578 +
        C28653 * ((-(C28653 * C28683 * C28730) / C28447) / C28430 -
                  (ae * C28683 * C28604) / C28578);
    const double C7815 =
        (-2 * C28683 * C28723) / C28578 +
        C28683 * ((-(C28730 * C28810) / C28447) / C28430 - C28723 / C28578);
    const double C14306 =
        (-(C28730 * C28810) / C28447) / C28430 - C28723 / C28578 -
        (ae * (C28653 * C28629 * C28810 + C29027)) / C28578 +
        C28653 * (C28653 * ((-(std::pow(C28575, 6) * bs[6] * C28719 * C28810) /
                             C28447) /
                                C28430 -
                            C28730 / C28578) -
                  (ae * (C28629 * C28810 + C28604)) / C28578);
    const double C209 =
        2 * ((-(C28577 * C28694) / C28447) / C28430 - (ae * C28689) / C28578) -
        (ae * (C28695 * C28585 + C28689)) / C28578 +
        C28577 *
            ((-(ae * C28577 * C28695) / C28447) / C28430 - C28694 / C28578 +
             C28577 *
                 ((-(C28577 * C28617 * C28616 * C28690) / C28447) / C28430 -
                  (ae * C28695) / C28578));
    const double C748 = C28653 * ((-(C28577 * C28694) / C28447) / C28430 -
                                  (ae * C28689) / C28578);
    const double C750 = (-(C28694 * C28743) / C28447) / C28430 -
                        (C28588 * C28582 * C28690) / C28578;
    const double C1192 = C28683 * ((-(C28577 * C28694) / C28447) / C28430 -
                                   (ae * C28689) / C28578) -
                         ((C28577 * C28592 + C28584 * ae) * ce) / C28578;
    const double C1194 = (-(C28683 * C28592 * ce) / C28447) / C28430 -
                         (C28588 * C28582 * C28690) / C28578 +
                         C28683 * ((-(C28683 * C28694) / C28447) / C28430 -
                                   (C28592 * ce) / C28578);
    const double C2732 = (-(C28683 * C28653 * C28694) / C28447) / C28430 -
                         (C28653 * C28592 * ce) / C28578;
    const double C28704 = C28577 * C28701;
    const double C29172 = C28653 * C28701;
    const double C29194 = C28683 * C28701;
    const double C3769 =
        (-2 * C28653 * C28694) / C28578 +
        C28653 * ((-(C28701 * C28743) / C28447) / C28430 - C28694 / C28578);
    const double C4313 =
        (-(C28683 * C29017 * ce) / C28447) / C28430 -
        (C28653 * C28694) / C28578 +
        C28683 * ((-(C28683 * C28653 * C28701) / C28447) / C28430 -
                  (C29017 * ce) / C28578);
    const double C6153 =
        C28683 * ((-(C28701 * C28743) / C28447) / C28430 - C28694 / C28578) -
        ((C28592 + C28605 * C28743) * ce) / C28578;
    const double C7749 =
        2 * ((-(C28683 * C28694) / C28447) / C28430 - (C28592 * ce) / C28578) -
        ((C28592 + C28605 * C28810) * ce) / C28578 +
        C28683 *
            ((-(C28683 * C28605 * ce) / C28447) / C28430 - C28694 / C28578 +
             C28683 *
                 ((-(C28683 * C28701) / C28447) / C28430 - C28613 / C28578));
    const double C13872 =
        3 * ((-(C28701 * C28743) / C28447) / C28430 - C28694 / C28578) +
        C28653 * ((-2 * C28653 * C28701) / C28578 +
                  C28653 * ((-(std::pow(C28575, 6) * bs[6] * C28690 * C28743) /
                             C28447) /
                                C28430 -
                            C28701 / C28578));
    const double C379 =
        (-2 * C28577 * C28762) / C28578 +
        C28577 * ((-(C28617 * C28616 * C28759 * C28585) / C28447) / C28430 -
                  C28762 / C28578);
    const double C886 = (-(C28653 * C28577 * C28762) / C28447) / C28430 -
                        (ae * C28577 * C28689) / C28578;
    const double C888 = (-(ae * C28653 * C28689) / C28447) / C28430 -
                        (C28588 * C28582 * C28759) / C28578 +
                        C28653 * ((-(C28653 * C28762) / C28447) / C28430 -
                                  (ae * C28689) / C28578);
    const double C1330 = (-(C28683 * C28718 * ce) / C28447) / C28430 -
                         (C28588 * C28582 * C28759) / C28578 +
                         C28683 * ((-(C28683 * C28762) / C28447) / C28430 -
                                   (C28718 * ce) / C28578);
    const double C1331 = (-(C28683 * C28577 * C28762) / C28447) / C28430 -
                         (C28577 * C28718 * ce) / C28578;
    const double C2894 = C28653 * ((-(C28683 * C28762) / C28447) / C28430 -
                                   (C28718 * ce) / C28578) -
                         (ae * (C28683 * C28689 + C28584 * ce)) / C28578;
    const double C29001 = C28577 * C28765;
    const double C29127 = C28653 * C28765;
    const double C29161 = C28683 * C28765;
    const double C380 =
        3 * ((-(C28765 * C28585) / C28447) / C28430 - C28762 / C28578) +
        C28577 * ((-2 * C28577 * C28765) / C28578 +
                  C28577 * ((-(std::pow(C28575, 6) * bs[6] * C28759 * C28585) /
                             C28447) /
                                C28430 -
                            C28765 / C28578));
    const double C885 =
        C28653 * ((-(C28765 * C28585) / C28447) / C28430 - C28762 / C28578) -
        (ae * (C28695 * C28585 + C28689)) / C28578;
    const double C889 =
        (-(ae * C28653 * C28697) / C28447) / C28430 -
        (C28577 * C28762) / C28578 +
        C28653 * ((-(C28653 * C28577 * C28765) / C28447) / C28430 -
                  (ae * C28697) / C28578);
    const double C1332 =
        (-(C28683 * C28726 * ce) / C28447) / C28430 -
        (C28577 * C28762) / C28578 +
        C28683 * ((-(C28683 * C28577 * C28765) / C28447) / C28430 -
                  (C28726 * ce) / C28578);
    const double C1333 =
        C28683 * ((-(C28765 * C28585) / C28447) / C28430 - C28762 / C28578) -
        ((C28718 + C28724 * C28585) * ce) / C28578;
    const double C445 =
        2 * ((-(C28577 * C28778) / C28447) / C28430 - (C28773 * ce) / C28578) -
        ((C28773 + C28779 * C28585) * ce) / C28578 +
        C28577 *
            ((-(C28577 * C28779 * ce) / C28447) / C28430 - C28778 / C28578 +
             C28577 *
                 ((-(C28577 * C28617 * C28616 * C28774) / C28447) / C28430 -
                  (C28779 * ce) / C28578));
    const double C936 = C28653 * ((-(C28577 * C28778) / C28447) / C28430 -
                                  (C28773 * ce) / C28578);
    const double C938 = (-(C28778 * C28743) / C28447) / C28430 -
                        (C28588 * C28582 * C28774) / C28578;
    const double C1380 = C28683 * ((-(C28577 * C28778) / C28447) / C28430 -
                                   (C28773 * ce) / C28578) -
                         (ae * (C28577 * C28591 + C28584 * ce)) / C28578;
    const double C1382 = (-(ae * C28683 * C28591) / C28447) / C28430 -
                         (C28588 * C28582 * C28774) / C28578 +
                         C28683 * ((-(C28683 * C28778) / C28447) / C28430 -
                                   (ae * C28591) / C28578);
    const double C2950 = (-(C28683 * C28653 * C28778) / C28447) / C28430 -
                         (ae * C28653 * C28591) / C28578;
    const double C28788 = C28577 * C28785;
    const double C29178 = C28653 * C28785;
    const double C29209 = C28683 * C28785;
    const double C3993 =
        (-2 * C28653 * C28778) / C28578 +
        C28653 * ((-(C28785 * C28743) / C28447) / C28430 - C28778 / C28578);
    const double C4525 =
        (-(ae * C28683 * C29027) / C28447) / C28430 -
        (C28653 * C28778) / C28578 +
        C28683 * ((-(C28683 * C28653 * C28785) / C28447) / C28430 -
                  (ae * C29027) / C28578);
    const double C6435 =
        C28683 * ((-(C28785 * C28743) / C28447) / C28430 - C28778 / C28578) -
        (ae * (C28604 * C28743 + C28591)) / C28578;
    const double C14046 =
        3 * ((-(C28785 * C28743) / C28447) / C28430 - C28778 / C28578) +
        C28653 * ((-2 * C28653 * C28785) / C28578 +
                  C28653 * ((-(std::pow(C28575, 6) * bs[6] * C28774 * C28743) /
                             C28447) /
                                C28430 -
                            C28785 / C28578));
    const double C506 =
        (-2 * C28577 * C28803) / C28578 +
        C28577 * ((-(C28617 * C28616 * C28800 * C28585) / C28447) / C28430 -
                  C28803 / C28578);
    const double C980 = (-(C28653 * C28773 * ce) / C28447) / C28430 -
                        (C28588 * C28582 * C28800) / C28578 +
                        C28653 * ((-(C28653 * C28803) / C28447) / C28430 -
                                  (C28773 * ce) / C28578);
    const double C981 = (-(C28653 * C28577 * C28803) / C28447) / C28430 -
                        (C28577 * C28773 * ce) / C28578;
    const double C1424 = (-(C28683 * C28577 * C28803) / C28447) / C28430 -
                         (ae * C28577 * C28659) / C28578;
    const double C1426 = (-(ae * C28683 * C28659) / C28447) / C28430 -
                         (C28588 * C28582 * C28800) / C28578 +
                         C28683 * ((-(C28683 * C28803) / C28447) / C28430 -
                                   (ae * C28659) / C28578);
    const double C3003 = C28683 * ((-(C28653 * C28803) / C28447) / C28430 -
                                   (C28773 * ce) / C28578) -
                         (ae * (C28653 * C28659 + C28584 * ce)) / C28578;
    const double C29007 = C28577 * C28806;
    const double C29136 = C28653 * C28806;
    const double C29218 = C28683 * C28806;
    const double C507 =
        3 * ((-(C28806 * C28585) / C28447) / C28430 - C28803 / C28578) +
        C28577 * ((-2 * C28577 * C28806) / C28578 +
                  C28577 * ((-(std::pow(C28575, 6) * bs[6] * C28800 * C28585) /
                             C28447) /
                                C28430 -
                            C28806 / C28578));
    const double C982 =
        (-(C28653 * C28781 * ce) / C28447) / C28430 -
        (C28577 * C28803) / C28578 +
        C28653 * ((-(C28653 * C28577 * C28806) / C28447) / C28430 -
                  (C28781 * ce) / C28578);
    const double C983 =
        C28653 * ((-(C28806 * C28585) / C28447) / C28430 - C28803 / C28578) -
        ((C28773 + C28779 * C28585) * ce) / C28578;
    const double C1423 =
        C28683 * ((-(C28806 * C28585) / C28447) / C28430 - C28803 / C28578) -
        (ae * (C28665 * C28585 + C28659)) / C28578;
    const double C1427 =
        (-(ae * C28683 * C28667) / C28447) / C28430 -
        (C28577 * C28803) / C28578 +
        C28683 * ((-(C28683 * C28577 * C28806) / C28447) / C28430 -
                  (ae * C28667) / C28578);
    const double C89 = ((0 * ae) / C28430 - C28435 / C28432) / (2 * C28430) -
                       (0 * be) / C28430;
    const double C3113 =
        (-C28429 / C28430) / (2 * C28430) -
        ((C29499 - (C28428 * 2 * C28435) / C28430) * be) / C28430;
    const double C3114 =
        (-(2 * C28435) / C28430) / (2 * C28430) - (0 * be) / C28430;
    const double C10089 =
        ((C29499 - (C28428 * 2 * C28435) / C28430) * ae) / C28430 -
        C28429 / C28434;
    const double C10090 = (0 * ae) / C28430 - C28435 / C28432;
    const double C13409 = -(2 * C28435) / C28430;
    const double C88 =
        (((C29499 - (C28428 * 2 * C28435) / C28430) * ae) / C28430 -
         C28429 / C28434) /
            (2 * C28430) -
        ((C28428 * ((0 * ae) / C28430 - C28435 / C28432) + C29683) * be) /
            C28430;
    const double C79 = C29683 / C29504;
    const double C77 = C29499 / C29504 - (C29682 * C29670) / C28432;
    const double C78 = C29682 / C28434 - (C29683 * C29670) / C28430;
    const double C10085 = C29682 / C28430;
    const double C3633 = C3109 * C646;
    const double C3629 = C3109 * C637;
    const double C3709 = C3109 * C699;
    const double C3773 = C3109 * C749;
    const double C7613 = C3109 * C1090;
    const double C7609 = C3109 * C1081;
    const double C7687 = C3109 * C1140;
    const double C7755 = C3109 * C1193;
    const double C28454 = 2 * C28453;
    const double C81 = (-2 * C29674 * C29684) / C28447;
    const double C1523 = -C29684 / C28447;
    const double C28480 = 2 * C28479;
    const double C623 = (-2 * C29674 * C29685) / C28447;
    const double C1525 = -C29685 / C28447;
    const double C28496 = 2 * C28495;
    const double C1068 = (-2 * C29674 * C29686) / C28447;
    const double C2069 = -C29686 / C28447;
    const double C13526 = ((0 * ae) / C28430 - C28548 / C28432) / (2 * C28430) -
                          (0 * be) / C28430;
    const double C265 = C249 * C95;
    const double C263 = C249 * C102;
    const double C261 = C249 * C94;
    const double C323 = C249 * C153;
    const double C383 = C249 * C202;
    const double C1692 = C249 * C627;
    const double C2234 = C249 * C1071;
    const double C7830 = C249 * C1073;
    const double C7820 = C249 * C1078;
    const double C7818 = C249 * C1072;
    const double C7897 = C249 * C1134;
    const double C7963 = C249 * C1187;
    const double C9686 = C249 * C2611;
    const double C3276 = C3265 * C95;
    const double C3274 = C3265 * C102;
    const double C3270 = C3265 * C94;
    const double C3342 = C3265 * C153;
    const double C3404 = C3265 * C202;
    const double C4920 = C3265 * C627;
    const double C5552 = C3265 * C1071;
    const double C23828 = C3265 * C1073;
    const double C23818 = C3265 * C1078;
    const double C23814 = C3265 * C1072;
    const double C23888 = C3265 * C1134;
    const double C23952 = C3265 * C1187;
    const double C25564 = C3265 * C2611;
    const double C3268 = C3266 * C627;
    const double C23816 = C3266 * C2611;
    const double C10252 = C10241 * C95;
    const double C10250 = C10241 * C102;
    const double C10246 = C10241 * C94;
    const double C10318 = C10241 * C153;
    const double C10380 = C10241 * C202;
    const double C11778 = C10241 * C627;
    const double C12396 = C10241 * C1071;
    const double C17190 = C10241 * C1073;
    const double C17180 = C10241 * C1078;
    const double C17176 = C10241 * C1072;
    const double C17251 = C10241 * C1134;
    const double C17316 = C10241 * C1187;
    const double C18984 = C10241 * C2611;
    const double C10244 = C10242 * C627;
    const double C17178 = C10242 * C2611;
    const double C13525 =
        (((C29588 - (C28521 * 2 * C28548) / C28430) * ae) / C28430 -
         C28546 / C28434) /
            (2 * C28430) -
        ((C28521 * ((0 * ae) / C28430 - C28548 / C28432) + C29688) * be) /
            C28430;
    const double C13408 = C29688 / C29504;
    const double C3111 = C29687 / C28430;
    const double C13406 = C29588 / C29504 - (C29687 * C29680) / C28432;
    const double C13407 = C29687 / C28434 - (C29688 * C29680) / C28430;
    const double C10251 = C10087 * C256;
    const double C10247 = C10087 * C251;
    const double C10319 = C10087 * C317;
    const double C10387 = C10087 * C378;
    const double C10381 = C10087 * C377;
    const double C17181 = C10087 * C1243;
    const double C17177 = C10087 * C1237;
    const double C17252 = C10087 * C1287;
    const double C17317 = C10087 * C1329;
    const double C26212 = ((0 * ae) / C28430 - C28564 / C28432) / (2 * C28430) -
                          (0 * be) / C28430;
    const double C452 = C436 * C95;
    const double C450 = C436 * C102;
    const double C448 = C436 * C94;
    const double C510 = C436 * C153;
    const double C569 = C436 * C202;
    const double C1882 = C436 * C627;
    const double C2424 = C436 * C1071;
    const double C4008 = C436 * C629;
    const double C3998 = C436 * C634;
    const double C3996 = C436 * C628;
    const double C4074 = C436 * C693;
    const double C4136 = C436 * C743;
    const double C6442 = C436 * C2611;
    const double C6960 = C6949 * C95;
    const double C6958 = C6949 * C102;
    const double C6954 = C6949 * C94;
    const double C7026 = C6949 * C153;
    const double C7088 = C6949 * C202;
    const double C8610 = C6949 * C627;
    const double C9266 = C6949 * C1071;
    const double C16782 = C6949 * C629;
    const double C16772 = C6949 * C634;
    const double C16768 = C6949 * C628;
    const double C16844 = C6949 * C693;
    const double C16904 = C6949 * C743;
    const double C19212 = C6949 * C2611;
    const double C6952 = C6950 * C1071;
    const double C16770 = C6950 * C2611;
    const double C19724 = C19713 * C95;
    const double C19722 = C19713 * C102;
    const double C19718 = C19713 * C94;
    const double C19790 = C19713 * C153;
    const double C19852 = C19713 * C202;
    const double C21274 = C19713 * C627;
    const double C21916 = C19713 * C1071;
    const double C23480 = C19713 * C629;
    const double C23470 = C19713 * C634;
    const double C23466 = C19713 * C628;
    const double C23542 = C19713 * C693;
    const double C23602 = C19713 * C743;
    const double C25792 = C19713 * C2611;
    const double C19716 = C19714 * C1071;
    const double C23468 = C19714 * C2611;
    const double C26211 =
        (((C29603 - (C28528 * 2 * C28564) / C28430) * ae) / C28430 -
         C28562 / C28434) /
            (2 * C28430) -
        ((C28528 * ((0 * ae) / C28430 - C28564 / C28432) + C29690) * be) /
            C28430;
    const double C25981 = C29690 / C29504;
    const double C6643 = C29689 / C28430;
    const double C25979 = C29603 / C29504 - (C29689 * C29681) / C28432;
    const double C25980 = C29689 / C28434 - (C29690 * C29681) / C28430;
    const double C19723 = C19411 * C443;
    const double C19719 = C19411 * C438;
    const double C19797 = C19411 * C505;
    const double C19791 = C19411 * C504;
    const double C19853 = C19411 * C563;
    const double C23471 = C19411 * C937;
    const double C23467 = C19411 * C931;
    const double C23543 = C19411 * C979;
    const double C23603 = C19411 * C1025;
    const double C3631 = C29683 * C636;
    const double C4701 = C3109 * C636;
    const double C10595 = C29683 * C636;
    const double C14557 = C29499 * C636;
    const double C3643 = C3109 * C638;
    const double C13765 = C29499 * C638;
    const double C7611 = C29683 * C1080;
    const double C8835 = C3109 * C1080;
    const double C18161 = C29499 * C1080;
    const double C20367 = C29683 * C1080;
    const double C7623 = C3109 * C1082;
    const double C16981 = C29499 * C1082;
    const double C6005 = C3109 * C2614;
    const double C15505 = C29499 * C2614;
    const double C13771 = C29499 * C3621;
    const double C15501 = C29499 * C5991;
    const double C26678 = C29499 * C7601;
    const double C267 = C249 * C103;
    const double C454 = C436 * C103;
    const double C3280 = C3265 * C103;
    const double C6964 = C6949 * C103;
    const double C10256 = C10241 * C103;
    const double C19728 = C19713 * C103;
    const double C1694 = C249 * C633;
    const double C1884 = C436 * C633;
    const double C3272 = C3266 * C633;
    const double C4924 = C3265 * C633;
    const double C8614 = C6949 * C633;
    const double C10248 = C10242 * C633;
    const double C11782 = C10241 * C633;
    const double C21278 = C19713 * C633;
    const double C4006 = C436 * C641;
    const double C16778 = C6949 * C641;
    const double C23476 = C19713 * C641;
    const double C2236 = C249 * C1077;
    const double C2426 = C436 * C1077;
    const double C5556 = C3265 * C1077;
    const double C6956 = C6950 * C1077;
    const double C9270 = C6949 * C1077;
    const double C12400 = C10241 * C1077;
    const double C19720 = C19714 * C1077;
    const double C21920 = C19713 * C1077;
    const double C7828 = C249 * C1085;
    const double C17186 = C10241 * C1085;
    const double C23824 = C3265 * C1085;
    const double C6440 = C436 * C2617;
    const double C9688 = C249 * C2617;
    const double C16774 = C6950 * C2617;
    const double C17182 = C10242 * C2617;
    const double C18988 = C10241 * C2617;
    const double C19208 = C6949 * C2617;
    const double C23472 = C19714 * C2617;
    const double C23820 = C3266 * C2617;
    const double C25568 = C3265 * C2617;
    const double C25788 = C19713 * C2617;
    const double C14049 = C436 * C3623;
    const double C15844 = C436 * C5993;
    const double C16776 = C6950 * C5993;
    const double C18990 = C10242 * C5993;
    const double C23474 = C19714 * C5993;
    const double C25570 = C3266 * C5993;
    const double C26815 = C249 * C7603;
    const double C28611 = C28608 + C28602;
    const double C28989 = C28987 + C28602;
    const double C29077 = C29075 + C28602;
    const double C2895 =
        C28653 * ((-(C28683 * C28577 * C28765) / C28447) / C28430 -
                  (C28726 * ce) / C28578) -
        (ae * (C28683 * C28697 + C28600 * ce)) / C28578;
    const double C3004 =
        C28683 * ((-(C28653 * C28577 * C28806) / C28447) / C28430 -
                  (C28781 * ce) / C28578) -
        (ae * (C28653 * C28667 + C28600 * ce)) / C28578;
    const double C695 = -(C28653 * (C28653 * C28667 + C28600 * ce) +
                          C28577 * C28659 + C28653 * C28600 * ce) /
                        C28447;
    const double C795 =
        (C28577 * C28718 + C28653 * (C28653 * C28726 + C28600 * ae) +
         C28653 * C28600 * ae) /
        C28430;
    const double C1189 = -(C28683 * (C28683 * C28697 + C28600 * ce) +
                           C28577 * C28689 + C28683 * C28600 * ce) /
                         C28447;
    const double C1377 =
        (C28577 * C28773 + C28683 * (C28683 * C28781 + C28600 * ae) +
         C28683 * C28600 * ae) /
        C28430;
    const double C2674 = -(C28683 * (C28653 * C28667 + C28600 * ce)) / C28447;
    const double C2730 =
        -(C28683 * C28653 * C28697 + C28653 * C28600 * ce) / C28447;
    const double C2786 = (C28683 * (C28653 * C28726 + C28600 * ae)) / C28430;
    const double C2948 =
        (C28683 * C28653 * C28781 + C28653 * C28600 * ae) / C28430;
    const double C630 = C28577 * C28584 + C28600 * C28743;
    const double C1074 = C28577 * C28584 + C28600 * C28810;
    const double C2612 = C28683 * C28653 * C28600;
    const double C3620 =
        2 * C28653 * C28600 + C28653 * (C28600 + C28623 * C28743);
    const double C5990 = C28683 * (C28600 + C28623 * C28743);
    const double C7600 =
        2 * C28683 * C28600 + C28683 * (C28600 + C28623 * C28810);
    const double C28610 = C28607 + C28599;
    const double C28988 = C28985 + C28599;
    const double C29076 = C29073 + C28599;
    const double C28609 = C28606 * C28586;
    const double C28748 = C28747 * C28586;
    const double C28815 = C28814 * C28586;
    const double C4311 = -(C28683 * (C28683 * C29033 + C28986 * ce) +
                           C28653 * C28689 + C28683 * C28986 * ce) /
                         C28447;
    const double C4523 =
        (C28653 * C28773 + C28683 * (C28683 * C29034 + C28986 * ae) +
         C28683 * C28986 * ae) /
        C28430;
    const double C4199 = C28653 * C28584 + C28986 * C28810;
    const double C16965 =
        2 * C28683 * C28986 + C28683 * (C28986 + C29107 * C28810);
    const double C327 = C29588 * C318;
    const double C10325 = C10087 * C318;
    const double C573 = C29603 * C564;
    const double C19859 = C19411 * C564;
    const double C269 = C249 * C96;
    const double C456 = C436 * C96;
    const double C1696 = C249 * C626;
    const double C1886 = C436 * C626;
    const double C3278 = C3266 * C626;
    const double C10254 = C10242 * C626;
    const double C2238 = C249 * C1070;
    const double C2428 = C436 * C1070;
    const double C6962 = C6950 * C1070;
    const double C19726 = C19714 * C1070;
    const double C14051 = C436 * C3619;
    const double C15846 = C436 * C5989;
    const double C16780 = C6950 * C5989;
    const double C18986 = C10242 * C5989;
    const double C23478 = C19714 * C5989;
    const double C25566 = C3266 * C5989;
    const double C26817 = C249 * C7599;
    const double C326 = C249 * C154;
    const double C513 = C436 * C154;
    const double C3348 = C3265 * C154;
    const double C7032 = C6949 * C154;
    const double C10324 = C10241 * C154;
    const double C19796 = C19713 * C154;
    const double C328 = C249 * C155;
    const double C515 = C436 * C155;
    const double C1763 = C249 * C691;
    const double C1953 = C436 * C691;
    const double C3346 = C3266 * C691;
    const double C10322 = C10242 * C691;
    const double C1758 = C249 * C692;
    const double C1948 = C436 * C692;
    const double C3344 = C3266 * C692;
    const double C5000 = C3265 * C692;
    const double C8690 = C6949 * C692;
    const double C10320 = C10242 * C692;
    const double C11858 = C10241 * C692;
    const double C21354 = C19713 * C692;
    const double C4076 = C436 * C694;
    const double C16846 = C6949 * C694;
    const double C23544 = C19713 * C694;
    const double C2301 = C249 * C1132;
    const double C2491 = C436 * C1132;
    const double C7030 = C6950 * C1132;
    const double C19794 = C19714 * C1132;
    const double C2298 = C249 * C1133;
    const double C2488 = C436 * C1133;
    const double C5630 = C3265 * C1133;
    const double C7028 = C6950 * C1133;
    const double C9344 = C6949 * C1133;
    const double C12474 = C10241 * C1133;
    const double C19792 = C19714 * C1133;
    const double C21994 = C19713 * C1133;
    const double C7902 = C249 * C1135;
    const double C17257 = C10241 * C1135;
    const double C23894 = C3265 * C1135;
    const double C6516 = C436 * C2673;
    const double C9765 = C249 * C2673;
    const double C16842 = C6950 * C2673;
    const double C17253 = C10242 * C2673;
    const double C19064 = C10241 * C2673;
    const double C19284 = C6949 * C2673;
    const double C23540 = C19714 * C2673;
    const double C23890 = C3266 * C2673;
    const double C25644 = C3265 * C2673;
    const double C25864 = C19713 * C2673;
    const double C26863 = C249 * C7681;
    const double C386 = C249 * C203;
    const double C572 = C436 * C203;
    const double C3410 = C3265 * C203;
    const double C7094 = C6949 * C203;
    const double C10386 = C10241 * C203;
    const double C19858 = C19713 * C203;
    const double C388 = C249 * C204;
    const double C574 = C436 * C204;
    const double C1820 = C249 * C741;
    const double C2010 = C436 * C741;
    const double C3408 = C3266 * C741;
    const double C10384 = C10242 * C741;
    const double C1823 = C249 * C742;
    const double C2013 = C436 * C742;
    const double C3406 = C3266 * C742;
    const double C5072 = C3265 * C742;
    const double C8762 = C6949 * C742;
    const double C10382 = C10242 * C742;
    const double C11930 = C10241 * C742;
    const double C21426 = C19713 * C742;
    const double C4141 = C436 * C744;
    const double C16910 = C6949 * C744;
    const double C23608 = C19713 * C744;
    const double C2366 = C249 * C1185;
    const double C2556 = C436 * C1185;
    const double C7092 = C6950 * C1185;
    const double C19856 = C19714 * C1185;
    const double C2361 = C249 * C1186;
    const double C2551 = C436 * C1186;
    const double C5704 = C3265 * C1186;
    const double C7090 = C6950 * C1186;
    const double C9418 = C6949 * C1186;
    const double C12548 = C10241 * C1186;
    const double C19854 = C19714 * C1186;
    const double C22068 = C19713 * C1186;
    const double C7965 = C249 * C1188;
    const double C17318 = C10241 * C1188;
    const double C23954 = C3265 * C1188;
    const double C6590 = C436 * C2729;
    const double C9835 = C249 * C2729;
    const double C16906 = C6950 * C2729;
    const double C17314 = C10242 * C2729;
    const double C19134 = C10241 * C2729;
    const double C19358 = C6949 * C2729;
    const double C23604 = C19714 * C2729;
    const double C23950 = C3266 * C2729;
    const double C25714 = C3265 * C2729;
    const double C25938 = C19713 * C2729;
    const double C14140 = C436 * C3767;
    const double C15960 = C436 * C6151;
    const double C16908 = C6950 * C6151;
    const double C19136 = C10242 * C6151;
    const double C23606 = C19714 * C6151;
    const double C25716 = C3266 * C6151;
    const double C268 = C29588 * C257;
    const double C10257 = C10087 * C257;
    const double C266 = C29588 * C252;
    const double C10253 = C10087 * C252;
    const double C270 = C29588 * C253;
    const double C1697 = C29588 * C791;
    const double C3279 = C29688 * C791;
    const double C10255 = C29688 * C791;
    const double C1693 = C29588 * C792;
    const double C3269 = C29688 * C792;
    const double C10245 = C29688 * C792;
    const double C11779 = C10087 * C792;
    const double C2239 = C29588 * C1235;
    const double C2235 = C29588 * C1236;
    const double C12397 = C10087 * C1236;
    const double C7831 = C29588 * C1238;
    const double C17191 = C10087 * C1238;
    const double C9687 = C29588 * C2785;
    const double C17179 = C29688 * C2785;
    const double C18985 = C10087 * C2785;
    const double C23817 = C29688 * C2785;
    const double C26818 = C29588 * C7813;
    const double C455 = C29603 * C444;
    const double C19729 = C19411 * C444;
    const double C453 = C29603 * C439;
    const double C19725 = C19411 * C439;
    const double C457 = C29603 * C440;
    const double C1887 = C29603 * C929;
    const double C1883 = C29603 * C930;
    const double C21275 = C19411 * C930;
    const double C4009 = C29603 * C932;
    const double C23481 = C19411 * C932;
    const double C2429 = C29603 * C1373;
    const double C6963 = C29690 * C1373;
    const double C19727 = C29690 * C1373;
    const double C2425 = C29603 * C1374;
    const double C6953 = C29690 * C1374;
    const double C19717 = C29690 * C1374;
    const double C21917 = C19411 * C1374;
    const double C6443 = C29603 * C2947;
    const double C16771 = C29690 * C2947;
    const double C23469 = C29690 * C2947;
    const double C25793 = C19411 * C2947;
    const double C14052 = C29603 * C3991;
    const double C15847 = C29603 * C6433;
    const double C16781 = C29690 * C6433;
    const double C23479 = C29690 * C6433;
    const double C28641 = C28637 + C28626;
    const double C29090 = C28605 + C29088;
    const double C16966 =
        (2 * C28683 * C29017 + C28683 * (C29017 + C29173 * C28810)) / C28430;
    const double C29197 = C28605 + C29195;
    const double C28640 = C28636 + C28622;
    const double C29099 = C29097 + C28604;
    const double C16967 = (-2 * C28683 * C29027) / C28447 -
                          (C28683 * (C29179 * C28810 + C29027)) / C28447;
    const double C29212 = C29210 + C28604;
    const double C28639 = C28635 * C28586;
    const double C28677 = C28675 + C28665;
    const double C28995 = C28653 * C28992;
    const double C7682 = (-2 * C28683 * C28667) / C28447 -
                         (C28683 * (C28992 * C28810 + C28667)) / C28447;
    const double C29112 = C29106 + C28622;
    const double C29221 = C29219 + C28665;
    const double C28707 = C28705 + C28695;
    const double C29036 = C28653 * C29002;
    const double C29079 = C28683 * C29002;
    const double C3768 = (-2 * C28653 * C28697) / C28447 -
                         (C28653 * (C29002 * C28743 + C28697)) / C28447;
    const double C6152 = -(C28683 * (C29002 * C28743 + C28697) +
                           (C28600 + C28623 * C28743) * ce) /
                         C28447;
    const double C29130 = C29128 + C28695;
    const double C29186 = C28683 * C29183;
    const double C29234 = C29228 + C28622;
    const double C28736 = C28724 + C28734;
    const double C28996 = C28653 * C28994;
    const double C7814 =
        (2 * C28683 * C28726 + C28683 * (C28726 + C28994 * C28810)) / C28430;
    const double C29115 = C29109 + C28626;
    const double C29206 = C28724 + C29205;
    const double C28753 = C28752 * C28586;
    const double C28791 = C28779 + C28789;
    const double C29037 = C28653 * C29008;
    const double C29081 = C28683 * C29008;
    const double C3992 =
        (2 * C28653 * C28781 + C28653 * (C28781 + C29008 * C28743)) / C28430;
    const double C6434 = (C28683 * (C28781 + C29008 * C28743) +
                          (C28600 + C28623 * C28743) * ae) /
                         C28430;
    const double C29139 = C28779 + C29137;
    const double C29187 = C28683 * C29185;
    const double C29237 = C29231 + C28626;
    const double C28820 = C28819 * C28586;
    const double C28627 = -C28618;
    const double C16977 = C29499 * C4201;
    const double C3835 =
        2 * ((-(C28653 * C28723) / C28447) / C28430 - (ae * C28591) / C28578) -
        (ae * (C28604 * C28743 + C28591)) / C28578 +
        C28653 *
            ((-(ae * C28653 * C28604) / C28447) / C28430 - C28723 / C28578 +
             C28653 * ((-(C28653 * C28730) / C28447) / C28430 - C28619));
    const double C8023 =
        2 * ((-(C28683 * C28778) / C28447) / C28430 - (ae * C28591) / C28578) -
        (ae * (C28604 * C28810 + C28591)) / C28578 +
        C28683 *
            ((-(ae * C28683 * C28604) / C28447) / C28430 - C28778 / C28578 +
             C28683 * ((-(C28683 * C28785) / C28447) / C28430 - C28619));
    const double C17184 = C10242 * C4203;
    const double C19206 = C6950 * C4203;
    const double C23822 = C3266 * C4203;
    const double C25786 = C19714 * C4203;
    const double C28156 = C249 * C4203;
    const double C97 = 3 * (C28584 + C28594 * C28585) +
                       C28577 * (2 * C28600 + C28577 * C28631);
    const double C631 = C28584 + C28594 * C28585 + C28631 * C28743;
    const double C1075 = C28584 + C28594 * C28585 + C28631 * C28810;
    const double C1529 = C28653 * (2 * C28600 + C28577 * C28631);
    const double C2071 = C28683 * (2 * C28600 + C28577 * C28631);
    const double C2613 = C28683 * C28653 * C28631;
    const double C4200 = C28653 * C28600 + C28993 * C28810;
    const double C13755 = 3 * (C28584 + C28594 * C28743) +
                          C28653 * (2 * C28986 + C28653 * C29114);
    const double C14183 = C28584 + C28594 * C28743 + C29114 * C28810;
    const double C15493 = C28683 * (2 * C28986 + C28653 * C29114);
    const double C26669 = 3 * (C28584 + C28594 * C28810) +
                          C28683 * (2 * C29074 + C28683 * C29236);
    const double C8075 =
        2 * ((-(C28683 * C28803) / C28447) / C28430 - (ae * C28659) / C28578) -
        (ae * (C28665 * C28810 + C28659)) / C28578 +
        C28683 *
            ((-(ae * C28683 * C28665) / C28447) / C28430 - C28803 / C28578 +
             C28683 * ((-(C28683 * C28806) / C28447) / C28430 - C28672));
    const double C7899 = C249 * C1136;
    const double C9346 = C6950 * C1136;
    const double C21996 = C19714 * C1136;
    const double C3939 =
        2 * ((-(C28653 * C28762) / C28447) / C28430 - (ae * C28689) / C28578) -
        (ae * (C28695 * C28743 + C28689)) / C28578 +
        C28653 *
            ((-(ae * C28653 * C28695) / C28447) / C28430 - C28762 / C28578 +
             C28653 * ((-(C28653 * C28765) / C28447) / C28430 - C28702));
    const double C4138 = C436 * C745;
    const double C5070 = C3266 * C745;
    const double C11928 = C10242 * C745;
    const double C4471 =
        C28653 *
            ((-(C28683 * C28724 * ce) / C28447) / C28430 - C28762 / C28578 +
             C28683 * ((-(C28683 * C28765) / C28447) / C28430 - C28731)) -
        (ae * (C28683 * (C28683 * C28695 + C28599) + C28689 +
               C28683 * C28594 * ce)) /
            C28578;
    const double C6365 =
        (-(C28683 * C28762) / C28447) / C28430 - (C28718 * ce) / C28578 -
        (ae * (C28683 * C29033 + C28986 * ce)) / C28578 +
        C28653 * (C28653 * ((-(C28683 * C28765) / C28447) / C28430 - C28731) -
                  (ae * (C28683 * C28695 + C28599)) / C28578);
    const double C7960 =
        2 * ((-(C28683 * C28762) / C28447) / C28430 - (C28718 * ce) / C28578) -
        ((C28718 + C28724 * C28810) * ce) / C28578 +
        C28683 *
            ((-(C28683 * C28724 * ce) / C28447) / C28430 - C28762 / C28578 +
             C28683 * ((-(C28683 * C28765) / C28447) / C28430 - C28731));
    const double C14384 =
        (-(C28683 * C28724 * ce) / C28447) / C28430 - C28762 / C28578 +
        C28683 * ((-(C28683 * C28765) / C28447) / C28430 - C28731) -
        (ae * (C28683 * (C28683 * C28653 * C28703 + C29113) + C29033 +
               C28683 * C29107 * ce)) /
            C28578 +
        C28653 *
            (C28653 *
                 ((-(C28683 * C28732 * ce) / C28447) / C28430 -
                  C28765 / C28578 +
                  C28683 * ((-(C28683 * std::pow(C28575, 6) * bs[6] * C28759) /
                             C28447) /
                                C28430 -
                            (C28732 * ce) / C28578)) -
             (ae * (C28683 * (C28683 * C28703 + C28622) + C28695 +
                    C28683 * C28615 * ce)) /
                 C28578);
    const double C29110 = -C29104;
    const double C7827 = C29588 * C1239;
    const double C4071 =
        2 * ((-(C28653 * C28803) / C28447) / C28430 - (C28773 * ce) / C28578) -
        ((C28773 + C28779 * C28743) * ce) / C28578 +
        C28653 *
            ((-(C28653 * C28779 * ce) / C28447) / C28430 - C28803 / C28578 +
             C28653 * ((-(C28653 * C28806) / C28447) / C28430 - C28786));
    const double C29232 = -C29226;
    const double C4005 = C29603 * C933;
    const double C3707 = C29683 * C698;
    const double C4777 = C3109 * C698;
    const double C10667 = C29683 * C698;
    const double C14625 = C29499 * C698;
    const double C3711 = C3109 * C700;
    const double C13828 = C29499 * C700;
    const double C7689 = C29683 * C1139;
    const double C8913 = C3109 * C1139;
    const double C18237 = C29499 * C1139;
    const double C20441 = C29683 * C1139;
    const double C7693 = C3109 * C1141;
    const double C17055 = C29499 * C1141;
    const double C6081 = C3109 * C2676;
    const double C15567 = C29499 * C2676;
    const double C28676 = C28674 / C28447;
    const double C29089 = C29086 / C28447;
    const double C13830 = C29499 * C3703;
    const double C17052 = C29499 * C4259;
    const double C15569 = C29499 * C6077;
    const double C26726 = C29499 * C7683;
    const double C272 = C29588 * C258;
    const double C1695 = C29588 * C798;
    const double C3273 = C29688 * C798;
    const double C10249 = C29688 * C798;
    const double C11783 = C10087 * C798;
    const double C2237 = C29588 * C1242;
    const double C12401 = C10087 * C1242;
    const double C7829 = C29588 * C1244;
    const double C17187 = C10087 * C1244;
    const double C9689 = C29588 * C2788;
    const double C17183 = C29688 * C2788;
    const double C18989 = C10087 * C2788;
    const double C23821 = C29688 * C2788;
    const double C28735 = C28733 / C28447;
    const double C29098 = C29096 / C28447;
    const double C17174 =
        (((-2 * C28683 * C28604) / C28447 -
          (C28683 * (C28629 * C28810 + C28604)) / C28447) *
         ae) /
            C28430 +
        C28653 * ((-2 * C29157) / C28578 +
                  C28683 * ((-(std::pow(C28575, 6) * bs[6] * C28719 * C28810) /
                             C28447) /
                                C28430 -
                            C28730 / C28578));
    const double C26812 =
        3 * ((-(C28730 * C28810) / C28447) / C28430 - C28723 / C28578) +
        C28683 * ((-2 * C29157) / C28578 +
                  C28683 * ((-(std::pow(C28575, 6) * bs[6] * C28719 * C28810) /
                             C28447) /
                                C28430 -
                            C28730 / C28578));
    const double C17185 = C29688 * C4367;
    const double C23823 = C29688 * C4367;
    const double C28157 = C29588 * C4367;
    const double C18991 = C29688 * C6229;
    const double C25571 = C29688 * C6229;
    const double C26816 = C29588 * C7815;
    const double C3775 = C29683 * C748;
    const double C4849 = C3109 * C748;
    const double C10731 = C29683 * C748;
    const double C14682 = C29499 * C748;
    const double C3779 = C3109 * C750;
    const double C13879 = C29499 * C750;
    const double C7753 = C29683 * C1192;
    const double C8983 = C3109 * C1192;
    const double C18308 = C29499 * C1192;
    const double C20501 = C29683 * C1192;
    const double C7757 = C3109 * C1194;
    const double C17118 = C29499 * C1194;
    const double C6159 = C3109 * C2732;
    const double C15628 = C29499 * C2732;
    const double C28706 = C28704 / C28447;
    const double C17113 =
        2 * ((-(C28683 * C29172) / C28447) / C28430 - (C29017 * ce) / C28578) -
        ((C29017 + C29173 * C28810) * ce) / C28578 +
        C28683 *
            ((-(C28683 * C29173 * ce) / C28447) / C28430 - C29172 / C28578 +
             C28683 *
                 ((-(C28683 * C28653 * std::pow(C28575, 6) * bs[6] * C28690) /
                   C28447) /
                      C28430 -
                  (C29173 * ce) / C28578));
    const double C29196 = C29194 / C28447;
    const double C13881 = C29499 * C3769;
    const double C17120 = C29499 * C4313;
    const double C15633 = C29499 * C6153;
    const double C26772 = C29499 * C7749;
    const double C389 = C29588 * C379;
    const double C1824 = C29588 * C886;
    const double C3407 = C29688 * C886;
    const double C10383 = C29688 * C886;
    const double C11931 = C10087 * C886;
    const double C7966 = C29588 * C1330;
    const double C17319 = C10087 * C1330;
    const double C2362 = C29588 * C1331;
    const double C12549 = C10087 * C1331;
    const double C9836 = C29588 * C2894;
    const double C17315 = C29688 * C2894;
    const double C19135 = C10087 * C2894;
    const double C23951 = C29688 * C2894;
    const double C3940 =
        2 * ((-(C28653 * C29001) / C28447) / C28430 - (ae * C28697) / C28578) -
        (ae * (C29002 * C28743 + C28697)) / C28578 +
        C28653 *
            ((-(ae * C28653 * C29002) / C28447) / C28430 - C29001 / C28578 +
             C28653 *
                 ((-(C28653 * C28577 * std::pow(C28575, 6) * bs[6] * C28759) /
                   C28447) /
                      C28430 -
                  (ae * C29002) / C28578));
    const double C4472 =
        C28653 *
            ((-(C28683 * C28994 * ce) / C28447) / C28430 - C29001 / C28578 +
             C28683 *
                 ((-(C28683 * C28577 * std::pow(C28575, 6) * bs[6] * C28759) /
                   C28447) /
                      C28430 -
                  (C28994 * ce) / C28578)) -
        (ae * (C28683 * (C28683 * C29002 + C28630) + C28697 +
               C28683 * C28623 * ce)) /
            C28578;
    const double C7961 =
        2 * ((-(C28683 * C29001) / C28447) / C28430 - (C28726 * ce) / C28578) -
        ((C28726 + C28994 * C28810) * ce) / C28578 +
        C28683 *
            ((-(C28683 * C28994 * ce) / C28447) / C28430 - C29001 / C28578 +
             C28683 *
                 ((-(C28683 * C28577 * std::pow(C28575, 6) * bs[6] * C28759) /
                   C28447) /
                      C28430 -
                  (C28994 * ce) / C28578));
    const double C29129 = C29127 / C28447;
    const double C29162 = C29161 / C28447;
    const double C1821 = C29588 * C885;
    const double C3409 = C29688 * C885;
    const double C10385 = C29688 * C885;
    const double C5071 = C29688 * C889;
    const double C11929 = C29688 * C889;
    const double C7968 = C29588 * C1332;
    const double C2367 = C29588 * C1333;
    const double C459 = C29603 * C445;
    const double C1885 = C29603 * C936;
    const double C21279 = C19411 * C936;
    const double C4007 = C29603 * C938;
    const double C23477 = C19411 * C938;
    const double C2427 = C29603 * C1380;
    const double C6957 = C29690 * C1380;
    const double C19721 = C29690 * C1380;
    const double C21921 = C19411 * C1380;
    const double C6441 = C29603 * C2950;
    const double C16775 = C29690 * C2950;
    const double C23473 = C29690 * C2950;
    const double C25789 = C19411 * C2950;
    const double C28790 = C28788 / C28447;
    const double C17376 =
        2 * ((-(C28683 * C29178) / C28447) / C28430 - (ae * C29027) / C28578) -
        (ae * (C29179 * C28810 + C29027)) / C28578 +
        C28683 *
            ((-(ae * C28683 * C29179) / C28447) / C28430 - C29178 / C28578 +
             C28683 *
                 ((-(C28683 * C28653 * std::pow(C28575, 6) * bs[6] * C28774) /
                   C28447) /
                      C28430 -
                  (ae * C29179) / C28578));
    const double C29211 = C29209 / C28447;
    const double C14050 = C29603 * C3993;
    const double C19207 = C29690 * C4525;
    const double C25787 = C29690 * C4525;
    const double C15845 = C29603 * C6435;
    const double C16777 = C29690 * C6435;
    const double C23475 = C29690 * C6435;
    const double C516 = C29603 * C506;
    const double C4077 = C29603 * C980;
    const double C23545 = C19411 * C980;
    const double C1949 = C29603 * C981;
    const double C21355 = C19411 * C981;
    const double C2489 = C29603 * C1424;
    const double C7029 = C29690 * C1424;
    const double C19793 = C29690 * C1424;
    const double C21995 = C19411 * C1424;
    const double C6517 = C29603 * C3003;
    const double C16843 = C29690 * C3003;
    const double C23541 = C29690 * C3003;
    const double C25865 = C19411 * C3003;
    const double C4072 =
        2 * ((-(C28653 * C29007) / C28447) / C28430 - (C28781 * ce) / C28578) -
        ((C28781 + C29008 * C28743) * ce) / C28578 +
        C28653 *
            ((-(C28653 * C29008 * ce) / C28447) / C28430 - C29007 / C28578 +
             C28653 *
                 ((-(C28653 * C28577 * std::pow(C28575, 6) * bs[6] * C28800) /
                   C28447) /
                      C28430 -
                  (C29008 * ce) / C28578));
    const double C8076 =
        2 * ((-(C28683 * C29007) / C28447) / C28430 - (ae * C28667) / C28578) -
        (ae * (C28992 * C28810 + C28667)) / C28578 +
        C28683 *
            ((-(ae * C28683 * C28992) / C28447) / C28430 - C29007 / C28578 +
             C28683 *
                 ((-(C28683 * C28577 * std::pow(C28575, 6) * bs[6] * C28800) /
                   C28447) /
                      C28430 -
                  (ae * C28992) / C28578));
    const double C29138 = C29136 / C28447;
    const double C29220 = C29218 / C28447;
    const double C4079 = C29603 * C982;
    const double C1954 = C29603 * C983;
    const double C2492 = C29603 * C1423;
    const double C7031 = C29690 * C1423;
    const double C19795 = C29690 * C1423;
    const double C9347 = C29690 * C1427;
    const double C21997 = C29690 * C1427;
    const double C3642 = C3113 * C629;
    const double C3638 = C3113 * C641;
    const double C3632 = C3113 * C634;
    const double C3628 = C3113 * C628;
    const double C3710 = C3113 * C694;
    const double C3708 = C3113 * C693;
    const double C3778 = C3113 * C744;
    const double C3772 = C3113 * C743;
    const double C4704 = C3113 * C633;
    const double C4700 = C3113 * C627;
    const double C4776 = C3113 * C692;
    const double C4848 = C3113 * C742;
    const double C6004 = C3113 * C2611;
    const double C6000 = C3113 * C2617;
    const double C6080 = C3113 * C2673;
    const double C6158 = C3113 * C2729;
    const double C7622 = C3113 * C1073;
    const double C7618 = C3113 * C1085;
    const double C7612 = C3113 * C1078;
    const double C7608 = C3113 * C1072;
    const double C7692 = C3113 * C1135;
    const double C7686 = C3113 * C1134;
    const double C7756 = C3113 * C1188;
    const double C7754 = C3113 * C1187;
    const double C8838 = C3113 * C1077;
    const double C8834 = C3113 * C1071;
    const double C8912 = C3113 * C1133;
    const double C8982 = C3113 * C1186;
    const double C3634 = C3114 * C633;
    const double C3630 = C3114 * C627;
    const double C3706 = C3114 * C692;
    const double C3776 = C3114 * C745;
    const double C3774 = C3114 * C742;
    const double C4698 = C3114 * C626;
    const double C4778 = C3114 * C691;
    const double C4850 = C3114 * C741;
    const double C7614 = C3114 * C1077;
    const double C7610 = C3114 * C1071;
    const double C7690 = C3114 * C1136;
    const double C7688 = C3114 * C1133;
    const double C7752 = C3114 * C1186;
    const double C8832 = C3114 * C1070;
    const double C8910 = C3114 * C1132;
    const double C8984 = C3114 * C1185;
    const double C10606 = C10089 * C629;
    const double C10602 = C10089 * C641;
    const double C10596 = C10089 * C634;
    const double C10592 = C10089 * C628;
    const double C10670 = C10089 * C694;
    const double C10668 = C10089 * C693;
    const double C10734 = C10089 * C744;
    const double C10728 = C10089 * C743;
    const double C11562 = C10089 * C633;
    const double C11558 = C10089 * C627;
    const double C11634 = C10089 * C692;
    const double C11706 = C10089 * C742;
    const double C12822 = C10089 * C2611;
    const double C12818 = C10089 * C2617;
    const double C12894 = C10089 * C2673;
    const double C12968 = C10089 * C2729;
    const double C20378 = C10089 * C1073;
    const double C20374 = C10089 * C1085;
    const double C20368 = C10089 * C1078;
    const double C20364 = C10089 * C1072;
    const double C20444 = C10089 * C1135;
    const double C20438 = C10089 * C1134;
    const double C20504 = C10089 * C1188;
    const double C20502 = C10089 * C1187;
    const double C21502 = C10089 * C1077;
    const double C21498 = C10089 * C1071;
    const double C21576 = C10089 * C1133;
    const double C21646 = C10089 * C1186;
    const double C10598 = C10090 * C633;
    const double C10594 = C10090 * C627;
    const double C10666 = C10090 * C692;
    const double C10732 = C10090 * C745;
    const double C10730 = C10090 * C742;
    const double C11556 = C10090 * C626;
    const double C11636 = C10090 * C691;
    const double C11708 = C10090 * C741;
    const double C20370 = C10090 * C1077;
    const double C20366 = C10090 * C1071;
    const double C20442 = C10090 * C1136;
    const double C20440 = C10090 * C1133;
    const double C20500 = C10090 * C1186;
    const double C21496 = C10090 * C1070;
    const double C21574 = C10090 * C1132;
    const double C21648 = C10090 * C1185;
    const double C13770 = C13409 * C3619;
    const double C13768 = C13409 * C3623;
    const double C13766 = C13409 * C641;
    const double C13764 = C13409 * C629;
    const double C13762 = C13409 * C634;
    const double C13760 = C13409 * C628;
    const double C13827 = C13409 * C694;
    const double C13825 = C13409 * C693;
    const double C13880 = C13409 * C3767;
    const double C13878 = C13409 * C744;
    const double C13875 = C13409 * C743;
    const double C14558 = C13409 * C633;
    const double C14556 = C13409 * C627;
    const double C14624 = C13409 * C692;
    const double C14684 = C13409 * C745;
    const double C14681 = C13409 * C742;
    const double C15504 = C13409 * C2611;
    const double C15502 = C13409 * C2617;
    const double C15500 = C13409 * C5989;
    const double C15498 = C13409 * C5993;
    const double C15566 = C13409 * C2673;
    const double C15632 = C13409 * C6151;
    const double C15627 = C13409 * C2729;
    const double C16980 = C13409 * C1073;
    const double C16978 = C13409 * C1085;
    const double C16974 = C13409 * C4203;
    const double C16972 = C13409 * C1078;
    const double C16970 = C13409 * C1072;
    const double C17054 = C13409 * C1135;
    const double C17047 = C13409 * C1134;
    const double C17117 = C13409 * C1188;
    const double C17115 = C13409 * C1187;
    const double C18162 = C13409 * C1077;
    const double C18160 = C13409 * C1071;
    const double C18236 = C13409 * C1133;
    const double C18307 = C13409 * C1186;
    const double C26677 = C13409 * C7599;
    const double C26675 = C13409 * C7603;
    const double C26725 = C13409 * C7681;
    const double C27588 = C13409 * C1136;
    const double C10607 = C10085 * C638;
    const double C10597 = C10085 * C646;
    const double C10593 = C10085 * C637;
    const double C10671 = C10085 * C700;
    const double C10669 = C10085 * C699;
    const double C10735 = C10085 * C750;
    const double C10729 = C10085 * C749;
    const double C11559 = C10085 * C636;
    const double C11635 = C10085 * C698;
    const double C11707 = C10085 * C748;
    const double C12823 = C10085 * C2614;
    const double C12895 = C10085 * C2676;
    const double C12969 = C10085 * C2732;
    const double C20379 = C10085 * C1082;
    const double C20369 = C10085 * C1090;
    const double C20365 = C10085 * C1081;
    const double C20445 = C10085 * C1141;
    const double C20439 = C10085 * C1140;
    const double C20505 = C10085 * C1194;
    const double C20503 = C10085 * C1193;
    const double C21499 = C10085 * C1080;
    const double C21577 = C10085 * C1139;
    const double C21647 = C10085 * C1192;
    const double C87 =
        (((0 - (C28428 * C28429) / C28430) * ae) / C28430 - (0 * be) / C28434) /
            (2 * C28430) -
        ((C28428 * (((C29499 - (C28428 * 2 * C28435) / C28430) * ae) / C28430 -
                    C28429 / C28434) +
          C10085) *
         be) /
            C28430 +
        (0 * ae) / C28430 - C28435 / C28432;
    const double C91 =
        ((-C28449 / C28447) / C28451 -
         ((C29511 - (C28448 * C28454) / C28447) * de) / C28447) /
            C28451 -
        ((C28448 * ((-C28454 / C28447) / C28451 - (0 * de) / C28447) + C1524) *
         de) /
            C28447;
    const double C92 =
        ((-C28454 / C28447) / C28451 - (0 * de) / C28447) / C28451 -
        (0 * de) / C28447;
    const double C625 = -C28454 / C28447;
    const double C1527 = (-C28449 / C28447) / C28451 -
                         ((C29511 - (C28448 * C28454) / C28447) * de) / C28447;
    const double C1528 = (-C28454 / C28447) / C28451 - (0 * de) / C28447;
    const double C90 =
        ((-(0 * de) / C28447) / C28451 -
         ((0 - (C28448 * C28449) / C28447) * de) / C28447) /
            C28451 -
        ((C28448 * ((-C28449 / C28447) / C28451 -
                    ((C29511 - (C28448 * C28454) / C28447) * de) / C28447) +
          C1523) *
         de) /
            C28447 +
        (-C28454 / C28447) / C28451 - (0 * de) / C28447;
    const double C689 =
        ((-C28477 / C28447) / C28451 -
         ((C29532 - (C28476 * C28480) / C28447) * de) / C28447) /
            C28451 -
        ((C28476 * ((-C28480 / C28447) / C28451 - (0 * de) / C28447) + C1526) *
         de) /
            C28447;
    const double C690 =
        ((-C28480 / C28447) / C28451 - (0 * de) / C28447) / C28451 -
        (0 * de) / C28447;
    const double C1583 = (-C28477 / C28447) / C28451 -
                         ((C29532 - (C28476 * C28480) / C28447) * de) / C28447;
    const double C1584 = (-C28480 / C28447) / C28451 - (0 * de) / C28447;
    const double C688 =
        ((-(0 * de) / C28447) / C28451 -
         ((0 - (C28476 * C28477) / C28447) * de) / C28447) /
            C28451 -
        ((C28476 * ((-C28477 / C28447) / C28451 -
                    ((C29532 - (C28476 * C28480) / C28447) * de) / C28447) +
          C1525) *
         de) /
            C28447 +
        (-C28480 / C28447) / C28451 - (0 * de) / C28447;
    const double C1183 =
        ((-C28493 / C28447) / C28451 -
         ((C29543 - (C28492 * C28496) / C28447) * de) / C28447) /
            C28451 -
        ((C28492 * ((-C28496 / C28447) / C28451 - (0 * de) / C28447) + C2070) *
         de) /
            C28447;
    const double C1184 =
        ((-C28496 / C28447) / C28451 - (0 * de) / C28447) / C28451 -
        (0 * de) / C28447;
    const double C2177 = (-C28493 / C28447) / C28451 -
                         ((C29543 - (C28492 * C28496) / C28447) * de) / C28447;
    const double C2178 = (-C28496 / C28447) / C28451 - (0 * de) / C28447;
    const double C1182 =
        ((-(0 * de) / C28447) / C28451 -
         ((0 - (C28492 * C28493) / C28447) * de) / C28447) /
            C28451 -
        ((C28492 * ((-C28493 / C28447) / C28451 -
                    ((C29543 - (C28492 * C28496) / C28447) * de) / C28447) +
          C2069) *
         de) /
            C28447 +
        (-C28496 / C28447) / C28451 - (0 * de) / C28447;
    const double C274 = C263 + C264;
    const double C273 = C261 + C262;
    const double C331 = C323 + C324;
    const double C391 = C383 + C384;
    const double C7833 = C7820 + C7821;
    const double C7832 = C7818 + C7819;
    const double C7905 = C7897 + C7898;
    const double C7969 = C7963 + C7964;
    const double C3281 = C3111 * C257;
    const double C3277 = C3111 * C252;
    const double C3275 = C3111 * C256;
    const double C3271 = C3111 * C251;
    const double C3349 = C3111 * C318;
    const double C3343 = C3111 * C317;
    const double C3411 = C3111 * C378;
    const double C3405 = C3111 * C377;
    const double C4925 = C3111 * C798;
    const double C4921 = C3111 * C792;
    const double C5073 = C3111 * C886;
    const double C5557 = C3111 * C1242;
    const double C5553 = C3111 * C1236;
    const double C5705 = C3111 * C1331;
    const double C23829 = C3111 * C1238;
    const double C23825 = C3111 * C1244;
    const double C23819 = C3111 * C1243;
    const double C23815 = C3111 * C1237;
    const double C23889 = C3111 * C1287;
    const double C23955 = C3111 * C1330;
    const double C23953 = C3111 * C1329;
    const double C25569 = C3111 * C2788;
    const double C25565 = C3111 * C2785;
    const double C25715 = C3111 * C2894;
    const double C13524 =
        (((0 - (C28521 * C28546) / C28430) * ae) / C28430 - (0 * be) / C28434) /
            (2 * C28430) -
        ((C28521 * (((C29588 - (C28521 * 2 * C28548) / C28430) * ae) / C28430 -
                    C28546 / C28434) +
          C3111) *
         be) /
            C28430 +
        (0 * ae) / C28430 - C28548 / C28432;
    const double C10263 = C10250 + C10251;
    const double C10261 = C10246 + C10247;
    const double C10326 = C10318 + C10319;
    const double C10388 = C10380 + C10381;
    const double C17194 = C17180 + C17181;
    const double C17192 = C17176 + C17177;
    const double C17259 = C17251 + C17252;
    const double C17323 = C17316 + C17317;
    const double C461 = C450 + C451;
    const double C460 = C448 + C449;
    const double C518 = C510 + C511;
    const double C577 = C569 + C570;
    const double C4011 = C3998 + C3999;
    const double C4010 = C3996 + C3997;
    const double C4080 = C4074 + C4075;
    const double C4144 = C4136 + C4137;
    const double C6965 = C6643 * C444;
    const double C6961 = C6643 * C439;
    const double C6959 = C6643 * C443;
    const double C6955 = C6643 * C438;
    const double C7033 = C6643 * C505;
    const double C7027 = C6643 * C504;
    const double C7095 = C6643 * C564;
    const double C7089 = C6643 * C563;
    const double C8615 = C6643 * C936;
    const double C8611 = C6643 * C930;
    const double C8691 = C6643 * C981;
    const double C9271 = C6643 * C1380;
    const double C9267 = C6643 * C1374;
    const double C9345 = C6643 * C1424;
    const double C16783 = C6643 * C932;
    const double C16779 = C6643 * C938;
    const double C16773 = C6643 * C937;
    const double C16769 = C6643 * C931;
    const double C16847 = C6643 * C980;
    const double C16845 = C6643 * C979;
    const double C16905 = C6643 * C1025;
    const double C19213 = C6643 * C2947;
    const double C19209 = C6643 * C2950;
    const double C19285 = C6643 * C3003;
    const double C26210 =
        (((0 - (C28528 * C28562) / C28430) * ae) / C28430 - (0 * be) / C28434) /
            (2 * C28430) -
        ((C28528 * (((C29603 - (C28528 * 2 * C28564) / C28430) * ae) / C28430 -
                    C28562 / C28434) +
          C6643) *
         be) /
            C28430 +
        (0 * ae) / C28430 - C28564 / C28432;
    const double C19735 = C19722 + C19723;
    const double C19733 = C19718 + C19719;
    const double C19798 = C19790 + C19791;
    const double C19860 = C19852 + C19853;
    const double C23484 = C23470 + C23471;
    const double C23482 = C23466 + C23467;
    const double C23549 = C23542 + C23543;
    const double C23610 = C23602 + C23603;
    const double C104 = (2 * (C28577 * C28592 + C28584 * ae) +
                         C28577 * (C28592 + C28577 * C28611 + C28600 * ae) +
                         (C28584 + C28594 * C28585) * ae) /
                        C28430;
    const double C635 =
        (C28653 * (C28592 + C28577 * C28611 + C28600 * ae)) / C28430;
    const double C639 =
        (C28577 * C28592 + C28584 * ae + C28611 * C28743) / C28430;
    const double C1079 =
        (C28683 * (C28592 + C28577 * C28611 + C28600 * ae)) / C28430;
    const double C1083 =
        (C28577 * C28592 + C28584 * ae + C28611 * C28810) / C28430;
    const double C2615 = (C28683 * C28653 * C28611) / C28430;
    const double C3833 = (2 * (C28653 * C28718 + C28584 * ae) +
                          C28653 * (C28718 + C28653 * C28989 + C28986 * ae) +
                          (C28584 + C28594 * C28743) * ae) /
                         C28430;
    const double C4365 =
        (C28653 * C28718 + C28584 * ae + C28989 * C28810) / C28430;
    const double C6227 =
        (C28683 * (C28718 + C28653 * C28989 + C28986 * ae)) / C28430;
    const double C8021 = (2 * (C28683 * C28773 + C28584 * ae) +
                          C28683 * (C28773 + C28683 * C29077 + C29074 * ae) +
                          (C28584 + C28594 * C28810) * ae) /
                         C28430;
    const double C5703 = C29688 * C2895;
    const double C8540 = C29588 * C2895;
    const double C12547 = C29688 * C2895;
    const double C5848 = C29603 * C3004;
    const double C8689 = C29690 * C3004;
    const double C21353 = C29690 * C3004;
    const double C3712 = C3114 * C695;
    const double C4078 = C436 * C695;
    const double C4998 = C3266 * C695;
    const double C10672 = C10090 * C695;
    const double C11856 = C10242 * C695;
    const double C14626 = C13409 * C695;
    const double C4923 = C29688 * C795;
    const double C11781 = C29688 * C795;
    const double C7758 = C3114 * C1189;
    const double C7967 = C249 * C1189;
    const double C9416 = C6950 * C1189;
    const double C20506 = C10090 * C1189;
    const double C22066 = C19714 * C1189;
    const double C27643 = C13409 * C1189;
    const double C9269 = C29690 * C1377;
    const double C21919 = C29690 * C1377;
    const double C5632 = C3266 * C2674;
    const double C5847 = C436 * C2674;
    const double C6082 = C3114 * C2674;
    const double C8469 = C249 * C2674;
    const double C8688 = C6950 * C2674;
    const double C12476 = C10242 * C2674;
    const double C12896 = C10090 * C2674;
    const double C17622 = C13409 * C2674;
    const double C21352 = C19714 * C2674;
    const double C5702 = C3266 * C2730;
    const double C5920 = C436 * C2730;
    const double C6156 = C3114 * C2730;
    const double C8539 = C249 * C2730;
    const double C8760 = C6950 * C2730;
    const double C12546 = C10242 * C2730;
    const double C12966 = C10090 * C2730;
    const double C17692 = C13409 * C2730;
    const double C21424 = C19714 * C2730;
    const double C5555 = C29688 * C2786;
    const double C8395 = C29588 * C2786;
    const double C12399 = C29688 * C2786;
    const double C5775 = C29603 * C2948;
    const double C8613 = C29690 * C2948;
    const double C21277 = C29690 * C2948;
    const double C3640 = C3114 * C630;
    const double C4004 = C436 * C630;
    const double C4922 = C3266 * C630;
    const double C10604 = C10090 * C630;
    const double C11780 = C10242 * C630;
    const double C14562 = C13409 * C630;
    const double C7620 = C3114 * C1074;
    const double C7826 = C249 * C1074;
    const double C9268 = C6950 * C1074;
    const double C20376 = C10090 * C1074;
    const double C21918 = C19714 * C1074;
    const double C27530 = C13409 * C1074;
    const double C5554 = C3266 * C2612;
    const double C5774 = C436 * C2612;
    const double C6002 = C3114 * C2612;
    const double C8394 = C249 * C2612;
    const double C8612 = C6950 * C2612;
    const double C12398 = C10242 * C2612;
    const double C12820 = C10090 * C2612;
    const double C17548 = C13409 * C2612;
    const double C21276 = C19714 * C2612;
    const double C105 =
        (-2 * (C28577 * C28591 + C28584 * ce)) / C28447 -
        (C28577 * (C28577 * C28610 + C28591 + C28600 * ce)) / C28447 -
        ((C28584 + C28594 * C28585) * ce) / C28447;
    const double C632 =
        -(C28653 * (C28577 * C28610 + C28591 + C28600 * ce)) / C28447;
    const double C642 =
        -(C28610 * C28743 + C28577 * C28591 + C28584 * ce) / C28447;
    const double C1076 =
        -(C28683 * (C28577 * C28610 + C28591 + C28600 * ce)) / C28447;
    const double C1086 =
        -(C28610 * C28810 + C28577 * C28591 + C28584 * ce) / C28447;
    const double C2618 = -(C28683 * C28653 * C28610) / C28447;
    const double C4577 =
        (-(C28653 * C28803) / C28447) / C28430 - (C28773 * ce) / C28578 -
        (ae * C28683 * C28988) / C28578 +
        C28683 * (C28683 * ((-(C28653 * C28806) / C28447) / C28430 - C28786) -
                  (ae * C28988) / C28578);
    const double C6513 =
        C28683 * ((-(C29034 * ce) / C28447) / C28430 - C28803 / C28578 +
                  C28653 * ((-(C28653 * C28806) / C28447) / C28430 - C28786)) -
        (ae * (C28653 * C28988 + C28659 + C28986 * ce)) / C28578;
    const double C3701 =
        (-2 * (C28653 * C28659 + C28584 * ce)) / C28447 -
        (C28653 * (C28653 * C28988 + C28659 + C28986 * ce)) / C28447 -
        ((C28584 + C28594 * C28743) * ce) / C28447;
    const double C4257 =
        -(C28988 * C28810 + C28653 * C28659 + C28584 * ce) / C28447;
    const double C6075 =
        -(C28683 * (C28653 * C28988 + C28659 + C28986 * ce)) / C28447;
    const double C7747 =
        (-2 * (C28683 * C28689 + C28584 * ce)) / C28447 -
        (C28683 * (C28683 * C29076 + C28689 + C29074 * ce)) / C28447 -
        ((C28584 + C28594 * C28810) * ce) / C28447;
    const double C111 =
        2 * ((-(C28592 * ce) / C28447) / C28430 - (ae * C28591) / C28578 -
             (C28577 * C28609) / C28578) -
        (ae * (C28577 * C28610 + C28591 + C28600 * ce)) / C28578 -
        ((C28592 + C28577 * C28611 + C28600 * ae) * ce) / C28578 +
        C28577 *
            ((-(ae * C28610) / C28447) / C28430 - C28609 / C28578 -
             (C28611 * ce) / C28578 +
             C28577 *
                 ((-(C28605 * ce) / C28447) / C28430 - (ae * C28604) / C28578 -
                  (C28577 *
                   (C28595 * C28596 + C28585 * bs[5] * std::pow(C28581, 5)) *
                   C28586) /
                      C28578));
    const double C645 = (-(C28653 * C28592 * ce) / C28447) / C28430 -
                        (ae * C28653 * C28591) / C28578 -
                        (C28577 * C28653 * C28609) / C28578;
    const double C647 = (-(C28609 * C28743) / C28447) / C28430 -
                        ((C28584 + C28585 * C28582 * C28588) * C28586) / C28578;
    const double C1089 = (-(C28683 * C28592 * ce) / C28447) / C28430 -
                         (ae * C28683 * C28591) / C28578 -
                         (C28577 * C28683 * C28609) / C28578;
    const double C1091 =
        (-(C28609 * C28810) / C28447) / C28430 -
        ((C28584 + C28585 * C28582 * C28588) * C28586) / C28578;
    const double C2620 = (-(C28683 * C28653 * C28609) / C28447) / C28430;
    const double C319 =
        (-2 * C28577 * C28748) / C28578 +
        C28577 * ((-((C28615 + C28743 * C28616 * C28617) * C28586 * C28585) /
                   C28447) /
                      C28430 -
                  C28748 / C28578);
    const double C842 =
        (-(ae * (C28653 * C28659 + C28584 * ce)) / C28447) / C28430 -
        ((C28584 + C28743 * C28582 * C28588) * C28586) / C28578 -
        ((C28653 * C28718 + C28584 * ae) * ce) / C28578 +
        C28653 * ((-(C28718 * ce) / C28447) / C28430 - (ae * C28659) / C28578 -
                  (C28653 * C28748) / C28578);
    const double C843 = (-(C28577 * C28718 * ce) / C28447) / C28430 -
                        (ae * C28577 * C28659) / C28578 -
                        (C28653 * C28577 * C28748) / C28578;
    const double C1286 = (-(C28683 * C28577 * C28748) / C28447) / C28430;
    const double C1288 =
        (-(C28748 * C28810) / C28447) / C28430 -
        ((C28584 + C28743 * C28582 * C28588) * C28586) / C28578;
    const double C2841 = (-(C28683 * C28718 * ce) / C28447) / C28430 -
                         (ae * C28683 * C28659) / C28578 -
                         (C28653 * C28683 * C28748) / C28578;
    const double C565 =
        (-2 * C28577 * C28815) / C28578 +
        C28577 * ((-((C28615 + C28810 * C28616 * C28617) * C28586 * C28585) /
                   C28447) /
                      C28430 -
                  C28815 / C28578);
    const double C1024 = (-(C28653 * C28577 * C28815) / C28447) / C28430;
    const double C1026 =
        (-(C28815 * C28743) / C28447) / C28430 -
        ((C28584 + C28810 * C28582 * C28588) * C28586) / C28578;
    const double C1468 =
        (-(ae * (C28683 * C28689 + C28584 * ce)) / C28447) / C28430 -
        ((C28584 + C28810 * C28582 * C28588) * C28586) / C28578 -
        ((C28683 * C28773 + C28584 * ae) * ce) / C28578 +
        C28683 * ((-(C28773 * ce) / C28447) / C28430 - (ae * C28689) / C28578 -
                  (C28683 * C28815) / C28578);
    const double C1469 = (-(C28577 * C28773 * ce) / C28447) / C28430 -
                         (ae * C28577 * C28689) / C28578 -
                         (C28683 * C28577 * C28815) / C28578;
    const double C3056 = (-(C28653 * C28773 * ce) / C28447) / C28430 -
                         (ae * C28653 * C28689) / C28578 -
                         (C28683 * C28653 * C28815) / C28578;
    const double C17119 = C13409 * C4311;
    const double C17320 = C10242 * C4311;
    const double C19356 = C6950 * C4311;
    const double C23956 = C3266 * C4311;
    const double C25936 = C19714 * C4311;
    const double C28269 = C249 * C4311;
    const double C19211 = C29690 * C4523;
    const double C25791 = C29690 * C4523;
    const double C16976 = C13409 * C4199;
    const double C17188 = C10242 * C4199;
    const double C19210 = C6950 * C4199;
    const double C23826 = C3266 * C4199;
    const double C25790 = C19714 * C4199;
    const double C28154 = C249 * C4199;
    const double C332 = C326 + C327;
    const double C519 = C513 + C514;
    const double C10329 = C10324 + C10325;
    const double C19801 = C19796 + C19797;
    const double C392 = C386 + C387;
    const double C578 = C572 + C573;
    const double C10391 = C10386 + C10387;
    const double C19863 = C19858 + C19859;
    const double C276 = C267 + C268;
    const double C10266 = C10256 + C10257;
    const double C275 = C265 + C266;
    const double C10264 = C10252 + C10253;
    const double C277 = C269 + C270;
    const double C1702 = C1696 + C1697;
    const double C3289 = C3278 + C3279;
    const double C10265 = C10254 + C10255;
    const double C1700 = C1692 + C1693;
    const double C3284 = C3268 + C3269;
    const double C10260 = C10244 + C10245;
    const double C11786 = C11778 + C11779;
    const double C2244 = C2238 + C2239;
    const double C2242 = C2234 + C2235;
    const double C12404 = C12396 + C12397;
    const double C7837 = C7830 + C7831;
    const double C17199 = C17190 + C17191;
    const double C9692 = C9686 + C9687;
    const double C17193 = C17178 + C17179;
    const double C18992 = C18984 + C18985;
    const double C23831 = C23816 + C23817;
    const double C26820 = C26817 + C26818;
    const double C463 = C454 + C455;
    const double C19738 = C19728 + C19729;
    const double C462 = C452 + C453;
    const double C19736 = C19724 + C19725;
    const double C464 = C456 + C457;
    const double C1892 = C1886 + C1887;
    const double C1890 = C1882 + C1883;
    const double C21282 = C21274 + C21275;
    const double C4015 = C4008 + C4009;
    const double C23489 = C23480 + C23481;
    const double C2434 = C2428 + C2429;
    const double C6973 = C6962 + C6963;
    const double C19737 = C19726 + C19727;
    const double C2432 = C2424 + C2425;
    const double C6968 = C6952 + C6953;
    const double C19732 = C19716 + C19717;
    const double C21924 = C21916 + C21917;
    const double C6445 = C6442 + C6443;
    const double C16785 = C16770 + C16771;
    const double C23483 = C23468 + C23469;
    const double C25797 = C25792 + C25793;
    const double C14055 = C14051 + C14052;
    const double C15849 = C15846 + C15847;
    const double C16790 = C16780 + C16781;
    const double C23488 = C23478 + C23479;
    const double C28644 = C28577 * C28641;
    const double C29019 = C28653 * C28641;
    const double C3622 =
        (2 * C28653 * C28611 + C28653 * (C28611 + C28641 * C28743)) / C28430;
    const double C5992 = (C28683 * (C28611 + C28641 * C28743)) / C28430;
    const double C7602 =
        (2 * C28683 * C28611 + C28683 * (C28611 + C28641 * C28810)) / C28430;
    const double C14266 =
        (-(C28701 * C28743) / C28447) / C28430 - C28694 / C28578 -
        (C28683 * C29090 * ce) / C28578 +
        C28683 * (C28683 * ((-(std::pow(C28575, 6) * bs[6] * C28690 * C28743) /
                             C28447) /
                                C28430 -
                            C28701 / C28578) -
                  (C29090 * ce) / C28578);
    const double C15622 =
        C28683 * ((-2 * C28653 * C28701) / C28578 +
                  C28653 * ((-(std::pow(C28575, 6) * bs[6] * C28690 * C28743) /
                             C28447) /
                                C28430 -
                            C28701 / C28578)) -
        ((2 * C29017 + C28653 * C29090) * ce) / C28578;
    const double C13756 = (3 * (C28592 + C28605 * C28743) +
                           C28653 * (2 * C29017 + C28653 * C29090)) /
                          C28430;
    const double C14184 = (C28592 + C28605 * C28743 + C29090 * C28810) / C28430;
    const double C15494 = (C28683 * (2 * C29017 + C28653 * C29090)) / C28430;
    const double C26670 = (3 * (C28592 + C28605 * C28810) +
                           C28683 * (2 * C29193 + C28683 * C29197)) /
                          C28430;
    const double C28643 = C28577 * C28640;
    const double C29029 = C28653 * C28640;
    const double C3624 = (-2 * C28653 * C28610) / C28447 -
                         (C28653 * (C28640 * C28743 + C28610)) / C28447;
    const double C5994 = -(C28683 * (C28640 * C28743 + C28610)) / C28447;
    const double C7604 = (-2 * C28683 * C28610) / C28447 -
                         (C28683 * (C28640 * C28810 + C28610)) / C28447;
    const double C14424 =
        (-(C28785 * C28743) / C28447) / C28430 - C28778 / C28578 -
        (ae * C28683 * C29099) / C28578 +
        C28683 * (C28683 * ((-(std::pow(C28575, 6) * bs[6] * C28774 * C28743) /
                             C28447) /
                                C28430 -
                            C28785 / C28578) -
                  (ae * C29099) / C28578);
    const double C15688 =
        2 * ((-(C28653 * C29157) / C28447) / C28430 -
             (ae * C28683 * C28604) / C28578) -
        (ae * C28683 * C29099) / C28578 +
        C28653 *
            ((-(ae * C28683 * C28653 * C28629) / C28447) / C28430 -
             C29157 / C28578 +
             C28653 *
                 ((-(C28653 * C28683 * std::pow(C28575, 6) * bs[6] * C28719) /
                   C28447) /
                      C28430 -
                  (ae * C28683 * C28629) / C28578));
    const double C15842 =
        (((-2 * C29027) / C28447 - (C28653 * C29099) / C28447) * ae) / C28430 +
        C28683 * ((-2 * C28653 * C28785) / C28578 +
                  C28653 * ((-(std::pow(C28575, 6) * bs[6] * C28774 * C28743) /
                             C28447) /
                                C28430 -
                            C28785 / C28578));
    const double C13757 =
        (-3 * (C28604 * C28743 + C28591)) / C28447 +
        C28653 * ((-2 * C29027) / C28447 - (C28653 * C29099) / C28447);
    const double C14185 =
        -(C29099 * C28810 + C28604 * C28743 + C28591) / C28447;
    const double C15495 =
        C28683 * ((-2 * C29027) / C28447 - (C28653 * C29099) / C28447);
    const double C26671 =
        (-3 * (C28604 * C28810 + C28591)) / C28447 +
        C28683 * ((-2 * C29208) / C28447 - (C28683 * C29212) / C28447);
    const double C28642 = C28577 * C28639;
    const double C28930 = C28653 * C28639;
    const double C28940 = C28683 * C28639;
    const double C644 = (-(ae * C28653 * C28610) / C28447) / C28430 -
                        (C28653 * C28609) / C28578 -
                        (C28653 * C28611 * ce) / C28578 +
                        C28577 * ((-(C28653 * C28605 * ce) / C28447) / C28430 -
                                  (ae * C28653 * C28604) / C28578 -
                                  (C28577 * C28653 * C28639) / C28578);
    const double C648 =
        (-((C28592 + C28605 * C28743) * ce) / C28447) / C28430 -
        (ae * (C28604 * C28743 + C28591)) / C28578 +
        C28577 * ((-(C28639 * C28743) / C28447) / C28430 - C28609 / C28578);
    const double C649 =
        (-(C28639 * C28743) / C28447) / C28430 - C28609 / C28578 -
        (ae * (C28640 * C28743 + C28610)) / C28578 -
        ((C28611 + C28641 * C28743) * ce) / C28578 +
        C28577 *
            ((-((C28605 + C28632 * C28743) * ce) / C28447) / C28430 -
             (ae * (C28629 * C28743 + C28604)) / C28578 +
             C28577 *
                 ((-((C28616 * C28617 + C28585 * bs[6] * std::pow(C28575, 6)) *
                     C28586 * C28743) /
                   C28447) /
                      C28430 -
                  C28639 / C28578));
    const double C1088 = (-(ae * C28683 * C28610) / C28447) / C28430 -
                         (C28683 * C28609) / C28578 -
                         (C28683 * C28611 * ce) / C28578 +
                         C28577 * ((-(C28683 * C28605 * ce) / C28447) / C28430 -
                                   (ae * C28683 * C28604) / C28578 -
                                   (C28577 * C28683 * C28639) / C28578);
    const double C1092 =
        (-((C28592 + C28605 * C28810) * ce) / C28447) / C28430 -
        (ae * (C28604 * C28810 + C28591)) / C28578 +
        C28577 * ((-(C28639 * C28810) / C28447) / C28430 - C28609 / C28578);
    const double C1093 =
        (-(C28639 * C28810) / C28447) / C28430 - C28609 / C28578 -
        (ae * (C28640 * C28810 + C28610)) / C28578 -
        ((C28611 + C28641 * C28810) * ce) / C28578 +
        C28577 *
            ((-((C28605 + C28632 * C28810) * ce) / C28447) / C28430 -
             (ae * (C28629 * C28810 + C28604)) / C28578 +
             C28577 *
                 ((-((C28616 * C28617 + C28585 * bs[6] * std::pow(C28575, 6)) *
                     C28586 * C28810) /
                   C28447) /
                      C28430 -
                  C28639 / C28578));
    const double C3625 =
        (-2 * C28653 * C28609) / C28578 +
        C28653 * ((-(C28639 * C28743) / C28447) / C28430 - C28609 / C28578);
    const double C5995 =
        C28683 * ((-(C28639 * C28743) / C28447) / C28430 - C28609 / C28578);
    const double C5996 =
        (-(C28683 * (C28605 + C28632 * C28743) * ce) / C28447) / C28430 -
        (ae * C28683 * (C28629 * C28743 + C28604)) / C28578 +
        C28577 * C28683 *
            ((-((C28616 * C28617 + C28585 * bs[6] * std::pow(C28575, 6)) *
                C28586 * C28743) /
              C28447) /
                 C28430 -
             C28639 / C28578);
    const double C7605 =
        (-2 * C28683 * C28609) / C28578 +
        C28683 * ((-(C28639 * C28810) / C28447) / C28430 - C28609 / C28578);
    const double C14186 =
        (-(C28639 * C28743) / C28447) / C28430 - C28609 / C28578 +
        ((-((C28616 * C28617 + C28585 * bs[6] * std::pow(C28575, 6)) * C28586 *
            C28743) /
          C28447) /
             C28430 -
         C28639 / C28578) *
            C28810;
    const double C1428 =
        (-(C28806 * C28585) / C28447) / C28430 - C28803 / C28578 -
        (ae * C28683 * C28677) / C28578 +
        C28683 * (C28683 * ((-(std::pow(C28575, 6) * bs[6] * C28800 * C28585) /
                             C28447) /
                                C28430 -
                            C28806 / C28578) -
                  (ae * C28677) / C28578);
    const double C2485 =
        (((-2 * C28667) / C28447 - (C28577 * C28677) / C28447) * ae) / C28430 +
        C28683 * ((-2 * C28577 * C28806) / C28578 +
                  C28577 * ((-(std::pow(C28575, 6) * bs[6] * C28800 * C28585) /
                             C28447) /
                                C28430 -
                            C28806 / C28578));
    const double C156 =
        (-3 * (C28665 * C28585 + C28659)) / C28447 +
        C28577 * ((-2 * C28667) / C28447 - (C28577 * C28677) / C28447);
    const double C696 = -(C28653 * (C28653 * C28677 + C28631 * ce) +
                          C28665 * C28585 + C28659 + C28653 * C28631 * ce) /
                        C28447;
    const double C1137 = -(C28677 * C28810 + C28665 * C28585 + C28659) / C28447;
    const double C1585 =
        C28653 * ((-2 * C28667) / C28447 - (C28577 * C28677) / C28447) -
        ((2 * C28600 + C28577 * C28631) * ce) / C28447;
    const double C2125 =
        C28683 * ((-2 * C28667) / C28447 - (C28577 * C28677) / C28447);
    const double C2675 = -(C28683 * (C28653 * C28677 + C28631 * ce)) / C28447;
    const double C28997 = C28995 + C28630;
    const double C29118 = C28653 * C29112;
    const double C17043 = (-2 * C28683 * C28988) / C28447 -
                          (C28683 * (C29112 * C28810 + C28988)) / C28447;
    const double C26721 =
        (-3 * (C28665 * C28810 + C28659)) / C28447 +
        C28683 * ((-2 * C29217) / C28447 - (C28683 * C29221) / C28447);
    const double C890 =
        (-(C28765 * C28585) / C28447) / C28430 - C28762 / C28578 -
        (ae * C28653 * C28707) / C28578 +
        C28653 * (C28653 * ((-(std::pow(C28575, 6) * bs[6] * C28759 * C28585) /
                             C28447) /
                                C28430 -
                            C28765 / C28578) -
                  (ae * C28707) / C28578);
    const double C1818 =
        (((-2 * C28697) / C28447 - (C28577 * C28707) / C28447) * ae) / C28430 +
        C28653 * ((-2 * C28577 * C28765) / C28578 +
                  C28577 * ((-(std::pow(C28575, 6) * bs[6] * C28759 * C28585) /
                             C28447) /
                                C28430 -
                            C28765 / C28578));
    const double C205 =
        (-3 * (C28695 * C28585 + C28689)) / C28447 +
        C28577 * ((-2 * C28697) / C28447 - (C28577 * C28707) / C28447);
    const double C746 = -(C28707 * C28743 + C28695 * C28585 + C28689) / C28447;
    const double C1190 = -(C28683 * (C28683 * C28707 + C28631 * ce) +
                           C28695 * C28585 + C28689 + C28683 * C28631 * ce) /
                         C28447;
    const double C1637 =
        C28653 * ((-2 * C28697) / C28447 - (C28577 * C28707) / C28447);
    const double C2179 =
        C28683 * ((-2 * C28697) / C28447 - (C28577 * C28707) / C28447) -
        ((2 * C28600 + C28577 * C28631) * ce) / C28447;
    const double C2731 =
        -(C28683 * C28653 * C28707 + C28653 * C28631 * ce) / C28447;
    const double C6366 =
        (-(C28683 * C29001) / C28447) / C28430 - (C28726 * ce) / C28578 -
        (ae * (C28683 * C29036 + C28993 * ce)) / C28578 +
        C28653 *
            (C28653 *
                 ((-(C28683 * C28577 * std::pow(C28575, 6) * bs[6] * C28759) /
                   C28447) /
                      C28430 -
                  (C28994 * ce) / C28578) -
             (ae * (C28683 * C29002 + C28630)) / C28578);
    const double C4312 = -(C28683 * (C28683 * C29036 + C28993 * ce) +
                           C28653 * C28697 + C28683 * C28993 * ce) /
                         C28447;
    const double C29082 = C29079 + C28630;
    const double C13871 =
        (-3 * (C28695 * C28743 + C28689)) / C28447 +
        C28653 * ((-2 * C29033) / C28447 - (C28653 * C29130) / C28447);
    const double C14265 = -(C28683 * (C28683 * C29130 + C29114 * ce) +
                            C28695 * C28743 + C28689 + C28683 * C29114 * ce) /
                          C28447;
    const double C15621 =
        C28683 * ((-2 * C29033) / C28447 - (C28653 * C29130) / C28447) -
        ((2 * C28986 + C28653 * C29114) * ce) / C28447;
    const double C29188 = C29186 + C29113;
    const double C29240 = C28683 * C29234;
    const double C1334 =
        (-(C28765 * C28585) / C28447) / C28430 - C28762 / C28578 -
        (C28683 * C28736 * ce) / C28578 +
        C28683 * (C28683 * ((-(std::pow(C28575, 6) * bs[6] * C28759 * C28585) /
                             C28447) /
                                C28430 -
                            C28765 / C28578) -
                  (C28736 * ce) / C28578);
    const double C2356 =
        C28683 * ((-2 * C28577 * C28765) / C28578 +
                  C28577 * ((-(std::pow(C28575, 6) * bs[6] * C28759 * C28585) /
                             C28447) /
                                C28430 -
                            C28765 / C28578)) -
        ((2 * C28726 + C28577 * C28736) * ce) / C28578;
    const double C2896 =
        C28653 * (C28683 * ((-(std::pow(C28575, 6) * bs[6] * C28759 * C28585) /
                             C28447) /
                                C28430 -
                            C28765 / C28578) -
                  (C28736 * ce) / C28578) -
        (ae * (C28683 * C28707 + C28631 * ce)) / C28578;
    const double C254 = (3 * (C28718 + C28724 * C28585) +
                         C28577 * (2 * C28726 + C28577 * C28736)) /
                        C28430;
    const double C796 =
        (C28718 + C28724 * C28585 + C28653 * (C28653 * C28736 + C28631 * ae) +
         C28653 * C28631 * ae) /
        C28430;
    const double C1240 = (C28718 + C28724 * C28585 + C28736 * C28810) / C28430;
    const double C1689 = (C28653 * (2 * C28726 + C28577 * C28736) +
                          (2 * C28600 + C28577 * C28631) * ae) /
                         C28430;
    const double C2231 = (C28683 * (2 * C28726 + C28577 * C28736)) / C28430;
    const double C2787 = (C28683 * (C28653 * C28736 + C28631 * ae)) / C28430;
    const double C28998 = C28996 + C28633;
    const double C29119 = C28653 * C29115;
    const double C17173 =
        (2 * C28683 * C28989 + C28683 * (C28989 + C29115 * C28810)) / C28430;
    const double C26811 = (3 * (C28718 + C28724 * C28810) +
                           C28683 * (2 * C29204 + C28683 * C29206)) /
                          C28430;
    const double C28991 = C28577 * C28753;
    const double C29105 = C28653 * C28753;
    const double C29159 = C28683 * C28753;
    const double C320 =
        3 * ((-(C28753 * C28585) / C28447) / C28430 - C28748 / C28578) +
        C28577 *
            ((-2 * C28577 * C28753) / C28578 +
             C28577 *
                 ((-((C28616 * C28617 + C28743 * bs[6] * std::pow(C28575, 6)) *
                     C28586 * C28585) /
                   C28447) /
                      C28430 -
                  C28753 / C28578));
    const double C844 =
        (-(ae * (C28653 * C28667 + C28600 * ce)) / C28447) / C28430 -
        (C28577 * C28748) / C28578 -
        ((C28653 * C28726 + C28600 * ae) * ce) / C28578 +
        C28653 * ((-(C28726 * ce) / C28447) / C28430 - (ae * C28667) / C28578 -
                  (C28653 * C28577 * C28753) / C28578);
    const double C845 =
        (-((C28718 + C28724 * C28585) * ce) / C28447) / C28430 -
        (ae * (C28665 * C28585 + C28659)) / C28578 +
        C28653 * ((-(C28753 * C28585) / C28447) / C28430 - C28748 / C28578);
    const double C846 =
        (-(C28753 * C28585) / C28447) / C28430 - C28748 / C28578 -
        (ae * (C28653 * C28677 + C28631 * ce)) / C28578 -
        ((C28653 * C28736 + C28631 * ae) * ce) / C28578 +
        C28653 *
            ((-(C28736 * ce) / C28447) / C28430 - (ae * C28677) / C28578 +
             C28653 *
                 ((-((C28616 * C28617 + C28743 * bs[6] * std::pow(C28575, 6)) *
                     C28586 * C28585) /
                   C28447) /
                      C28430 -
                  C28753 / C28578));
    const double C1285 =
        C28683 * ((-(C28753 * C28585) / C28447) / C28430 - C28748 / C28578);
    const double C1289 = (-(C28577 * C28753 * C28810) / C28447) / C28430 -
                         (C28577 * C28748) / C28578;
    const double C1290 =
        (-(C28753 * C28585) / C28447) / C28430 - C28748 / C28578 +
        ((-((C28616 * C28617 + C28743 * bs[6] * std::pow(C28575, 6)) * C28586 *
            C28585) /
          C28447) /
             C28430 -
         C28753 / C28578) *
            C28810;
    const double C1753 =
        (((-2 * C28667) / C28447 - (C28577 * C28677) / C28447) * ae) / C28430 -
        ((2 * C28726 + C28577 * C28736) * ce) / C28578 +
        C28653 *
            ((-2 * C28577 * C28753) / C28578 +
             C28577 *
                 ((-((C28616 * C28617 + C28743 * bs[6] * std::pow(C28575, 6)) *
                     C28586 * C28585) /
                   C28447) /
                      C28430 -
                  C28753 / C28578));
    const double C2295 =
        C28683 *
        ((-2 * C28577 * C28753) / C28578 +
         C28577 * ((-((C28616 * C28617 + C28743 * bs[6] * std::pow(C28575, 6)) *
                      C28586 * C28585) /
                    C28447) /
                       C28430 -
                   C28753 / C28578));
    const double C2842 = (-(C28683 * C28726 * ce) / C28447) / C28430 -
                         (ae * C28683 * C28667) / C28578 -
                         (C28653 * C28683 * C28577 * C28753) / C28578;
    const double C2843 =
        (-(C28683 * C28736 * ce) / C28447) / C28430 -
        (ae * C28683 * C28677) / C28578 +
        C28653 * C28683 *
            ((-((C28616 * C28617 + C28743 * bs[6] * std::pow(C28575, 6)) *
                C28586 * C28585) /
              C28447) /
                 C28430 -
             C28753 / C28578);
    const double C3887 =
        2 * ((-(C28718 * ce) / C28447) / C28430 - (ae * C28659) / C28578 -
             (C28653 * C28748) / C28578) -
        (ae * (C28653 * C28988 + C28659 + C28986 * ce)) / C28578 -
        ((C28718 + C28653 * C28989 + C28986 * ae) * ce) / C28578 +
        C28653 * ((-(ae * C28988) / C28447) / C28430 - C28748 / C28578 -
                  (C28989 * ce) / C28578 +
                  C28653 * ((-C28728 / C28447) / C28430 - C28672 -
                            (C28653 * C28753) / C28578));
    const double C4419 =
        (-((C28718 + C28724 * C28810) * ce) / C28447) / C28430 -
        (ae * (C28665 * C28810 + C28659)) / C28578 +
        C28653 * ((-(C28753 * C28810) / C28447) / C28430 - C28748 / C28578);
    const double C6297 = (-(ae * C28683 * C28988) / C28447) / C28430 -
                         (C28683 * C28748) / C28578 -
                         (C28683 * C28989 * ce) / C28578 +
                         C28653 * ((-(C28683 * C28724 * ce) / C28447) / C28430 -
                                   (ae * C28683 * C28665) / C28578 -
                                   (C28653 * C28683 * C28753) / C28578);
    const double C7893 =
        (-2 * C28683 * C28748) / C28578 +
        C28683 * ((-(C28753 * C28810) / C28447) / C28430 - C28748 / C28578);
    const double C14345 =
        (-(C28753 * C28810) / C28447) / C28430 - C28748 / C28578 -
        (ae * (C29112 * C28810 + C28988)) / C28578 -
        ((C28989 + C29115 * C28810) * ce) / C28578 +
        C28653 *
            ((-((C28724 + C28732 * C28810) * ce) / C28447) / C28430 -
             (ae * (C28673 * C28810 + C28665)) / C28578 +
             C28653 *
                 ((-((C28616 * C28617 + C28743 * bs[6] * std::pow(C28575, 6)) *
                     C28586 * C28810) /
                   C28447) /
                      C28430 -
                  C28753 / C28578));
    const double C984 =
        (-(C28806 * C28585) / C28447) / C28430 - C28803 / C28578 -
        (C28653 * C28791 * ce) / C28578 +
        C28653 * (C28653 * ((-(std::pow(C28575, 6) * bs[6] * C28800 * C28585) /
                             C28447) /
                                C28430 -
                            C28806 / C28578) -
                  (C28791 * ce) / C28578);
    const double C1943 =
        C28653 * ((-2 * C28577 * C28806) / C28578 +
                  C28577 * ((-(std::pow(C28575, 6) * bs[6] * C28800 * C28585) /
                             C28447) /
                                C28430 -
                            C28806 / C28578)) -
        ((2 * C28781 + C28577 * C28791) * ce) / C28578;
    const double C3005 =
        C28683 * (C28653 * ((-(std::pow(C28575, 6) * bs[6] * C28800 * C28585) /
                             C28447) /
                                C28430 -
                            C28806 / C28578) -
                  (C28791 * ce) / C28578) -
        (ae * (C28653 * C28677 + C28631 * ce)) / C28578;
    const double C441 = (3 * (C28773 + C28779 * C28585) +
                         C28577 * (2 * C28781 + C28577 * C28791)) /
                        C28430;
    const double C934 = (C28773 + C28779 * C28585 + C28791 * C28743) / C28430;
    const double C1378 =
        (C28773 + C28779 * C28585 + C28683 * (C28683 * C28791 + C28631 * ae) +
         C28683 * C28631 * ae) /
        C28430;
    const double C1879 = (C28653 * (2 * C28781 + C28577 * C28791)) / C28430;
    const double C2421 = (C28683 * (2 * C28781 + C28577 * C28791) +
                          (2 * C28600 + C28577 * C28631) * ae) /
                         C28430;
    const double C2949 =
        (C28683 * C28653 * C28791 + C28653 * C28631 * ae) / C28430;
    const double C4524 =
        (C28653 * C28781 + C28683 * (C28683 * C29037 + C28993 * ae) +
         C28683 * C28993 * ae) /
        C28430;
    const double C29083 = C29081 + C28633;
    const double C14045 = (3 * (C28773 + C28779 * C28743) +
                           C28653 * (2 * C29034 + C28653 * C29139)) /
                          C28430;
    const double C14423 =
        (C28773 + C28779 * C28743 + C28683 * (C28683 * C29139 + C29114 * ae) +
         C28683 * C29114 * ae) /
        C28430;
    const double C15841 = (C28683 * (2 * C29034 + C28653 * C29139) +
                           (2 * C28986 + C28653 * C29114) * ae) /
                          C28430;
    const double C29189 = C29187 + C29116;
    const double C29241 = C28683 * C29237;
    const double C29011 = C28577 * C28820;
    const double C29182 = C28653 * C28820;
    const double C29227 = C28683 * C28820;
    const double C566 =
        3 * ((-(C28820 * C28585) / C28447) / C28430 - C28815 / C28578) +
        C28577 *
            ((-2 * C28577 * C28820) / C28578 +
             C28577 *
                 ((-((C28616 * C28617 + C28810 * bs[6] * std::pow(C28575, 6)) *
                     C28586 * C28585) /
                   C28447) /
                      C28430 -
                  C28820 / C28578));
    const double C1023 =
        C28653 * ((-(C28820 * C28585) / C28447) / C28430 - C28815 / C28578);
    const double C1027 = (-(C28577 * C28820 * C28743) / C28447) / C28430 -
                         (C28577 * C28815) / C28578;
    const double C1028 =
        (-(C28820 * C28585) / C28447) / C28430 - C28815 / C28578 +
        ((-((C28616 * C28617 + C28810 * bs[6] * std::pow(C28575, 6)) * C28586 *
            C28585) /
          C28447) /
             C28430 -
         C28820 / C28578) *
            C28743;
    const double C1470 =
        (-(ae * (C28683 * C28697 + C28600 * ce)) / C28447) / C28430 -
        (C28577 * C28815) / C28578 -
        ((C28683 * C28781 + C28600 * ae) * ce) / C28578 +
        C28683 * ((-(C28781 * ce) / C28447) / C28430 - (ae * C28697) / C28578 -
                  (C28683 * C28577 * C28820) / C28578);
    const double C1471 =
        (-((C28773 + C28779 * C28585) * ce) / C28447) / C28430 -
        (ae * (C28695 * C28585 + C28689)) / C28578 +
        C28683 * ((-(C28820 * C28585) / C28447) / C28430 - C28815 / C28578);
    const double C1472 =
        (-(C28820 * C28585) / C28447) / C28430 - C28815 / C28578 -
        (ae * (C28683 * C28707 + C28631 * ce)) / C28578 -
        ((C28683 * C28791 + C28631 * ae) * ce) / C28578 +
        C28683 *
            ((-(C28791 * ce) / C28447) / C28430 - (ae * C28707) / C28578 +
             C28683 *
                 ((-((C28616 * C28617 + C28810 * bs[6] * std::pow(C28575, 6)) *
                     C28586 * C28585) /
                   C28447) /
                      C28430 -
                  C28820 / C28578));
    const double C2008 =
        C28653 *
        ((-2 * C28577 * C28820) / C28578 +
         C28577 * ((-((C28616 * C28617 + C28810 * bs[6] * std::pow(C28575, 6)) *
                      C28586 * C28585) /
                    C28447) /
                       C28430 -
                   C28820 / C28578));
    const double C2546 =
        (((-2 * C28697) / C28447 - (C28577 * C28707) / C28447) * ae) / C28430 -
        ((2 * C28781 + C28577 * C28791) * ce) / C28578 +
        C28683 *
            ((-2 * C28577 * C28820) / C28578 +
             C28577 *
                 ((-((C28616 * C28617 + C28810 * bs[6] * std::pow(C28575, 6)) *
                     C28586 * C28585) /
                   C28447) /
                      C28430 -
                  C28820 / C28578));
    const double C3057 = (-(C28653 * C28781 * ce) / C28447) / C28430 -
                         (ae * C28653 * C28697) / C28578 -
                         (C28683 * C28653 * C28577 * C28820) / C28578;
    const double C3058 =
        (-(C28653 * C28791 * ce) / C28447) / C28430 -
        (ae * C28653 * C28707) / C28578 +
        C28683 * C28653 *
            ((-((C28616 * C28617 + C28810 * bs[6] * std::pow(C28575, 6)) *
                C28586 * C28585) /
              C28447) /
                 C28430 -
             C28820 / C28578);
    const double C4132 =
        (-2 * C28653 * C28815) / C28578 +
        C28653 * ((-(C28820 * C28743) / C28447) / C28430 - C28815 / C28578);
    const double C4629 =
        (-(ae * (C28683 * C29033 + C28986 * ce)) / C28447) / C28430 -
        (C28653 * C28815) / C28578 -
        ((C28683 * C29034 + C28986 * ae) * ce) / C28578 +
        C28683 * ((-(C29034 * ce) / C28447) / C28430 - (ae * C29033) / C28578 -
                  (C28683 * C28653 * C28820) / C28578);
    const double C6584 =
        (-((C28773 + C28779 * C28743) * ce) / C28447) / C28430 -
        (ae * (C28695 * C28743 + C28689)) / C28578 +
        C28683 * ((-(C28820 * C28743) / C28447) / C28430 - C28815 / C28578);
    const double C8127 =
        2 * ((-(C28773 * ce) / C28447) / C28430 - (ae * C28689) / C28578 -
             (C28683 * C28815) / C28578) -
        (ae * (C28683 * C29076 + C28689 + C29074 * ce)) / C28578 -
        ((C28773 + C28683 * C29077 + C29074 * ae) * ce) / C28578 +
        C28683 * ((-(ae * C29076) / C28447) / C28430 - C28815 / C28578 -
                  (C29077 * ce) / C28578 +
                  C28683 * ((-C28783 / C28447) / C28430 - C28702 -
                            (C28683 * C28820) / C28578));
    const double C14137 =
        3 * ((-(C28820 * C28743) / C28447) / C28430 - C28815 / C28578) +
        C28653 *
            ((-2 * C28653 * C28820) / C28578 +
             C28653 *
                 ((-((C28616 * C28617 + C28810 * bs[6] * std::pow(C28575, 6)) *
                     C28586 * C28743) /
                   C28447) /
                      C28430 -
                  C28820 / C28578));
    const double C14502 =
        (-(C28820 * C28743) / C28447) / C28430 - C28815 / C28578 -
        (ae * (C28683 * C29130 + C29114 * ce)) / C28578 -
        ((C28683 * C29139 + C29114 * ae) * ce) / C28578 +
        C28683 *
            ((-(C29139 * ce) / C28447) / C28430 - (ae * C29130) / C28578 +
             C28683 *
                 ((-((C28616 * C28617 + C28810 * bs[6] * std::pow(C28575, 6)) *
                     C28586 * C28743) /
                   C28447) /
                      C28430 -
                  C28820 / C28578));
    const double C15955 =
        (((-2 * C29033) / C28447 - (C28653 * C29130) / C28447) * ae) / C28430 -
        ((2 * C29034 + C28653 * C29139) * ce) / C28578 +
        C28683 *
            ((-2 * C28653 * C28820) / C28578 +
             C28653 *
                 ((-((C28616 * C28617 + C28810 * bs[6] * std::pow(C28575, 6)) *
                     C28586 * C28743) /
                   C28447) /
                      C28430 -
                  C28820 / C28578));
    const double C28634 = C28627 / C28430;
    const double C17321 = C29688 * C4471;
    const double C23957 = C29688 * C4471;
    const double C28270 = C29588 * C4471;
    const double C19137 = C29688 * C6365;
    const double C25717 = C29688 * C6365;
    const double C26908 = C29588 * C7960;
    const double C29117 = C29110 / C28430;
    const double C14098 = C29603 * C4071;
    const double C29239 = C29232 / C28430;
    const double C28678 = -C28676;
    const double C29091 = -C29089;
    const double C1701 = C1694 + C1695;
    const double C3286 = C3272 + C3273;
    const double C10262 = C10248 + C10249;
    const double C11788 = C11782 + C11783;
    const double C2243 = C2236 + C2237;
    const double C12406 = C12400 + C12401;
    const double C7836 = C7828 + C7829;
    const double C17197 = C17186 + C17187;
    const double C9693 = C9688 + C9689;
    const double C17195 = C17182 + C17183;
    const double C18994 = C18988 + C18989;
    const double C23833 = C23820 + C23821;
    const double C28737 = -C28735;
    const double C29100 = -C29098;
    const double C17196 = C17184 + C17185;
    const double C23834 = C23822 + C23823;
    const double C28159 = C28156 + C28157;
    const double C18995 = C18990 + C18991;
    const double C25575 = C25570 + C25571;
    const double C26819 = C26815 + C26816;
    const double C28708 = -C28706;
    const double C29198 = -C29196;
    const double C393 = C388 + C389;
    const double C1827 = C1823 + C1824;
    const double C3413 = C3406 + C3407;
    const double C10389 = C10382 + C10383;
    const double C11933 = C11930 + C11931;
    const double C7970 = C7965 + C7966;
    const double C17324 = C17318 + C17319;
    const double C2368 = C2361 + C2362;
    const double C12551 = C12548 + C12549;
    const double C9837 = C9835 + C9836;
    const double C17322 = C17314 + C17315;
    const double C19138 = C19134 + C19135;
    const double C23958 = C23950 + C23951;
    const double C29131 = -C29129;
    const double C29163 = -C29162;
    const double C1826 = C1820 + C1821;
    const double C3414 = C3408 + C3409;
    const double C10390 = C10384 + C10385;
    const double C5074 = C5070 + C5071;
    const double C11932 = C11928 + C11929;
    const double C2369 = C2366 + C2367;
    const double C1891 = C1884 + C1885;
    const double C21284 = C21278 + C21279;
    const double C4014 = C4006 + C4007;
    const double C23487 = C23476 + C23477;
    const double C2433 = C2426 + C2427;
    const double C6970 = C6956 + C6957;
    const double C19734 = C19720 + C19721;
    const double C21926 = C21920 + C21921;
    const double C6444 = C6440 + C6441;
    const double C16787 = C16774 + C16775;
    const double C23485 = C23472 + C23473;
    const double C25795 = C25788 + C25789;
    const double C28792 = -C28790;
    const double C29213 = -C29211;
    const double C14054 = C14049 + C14050;
    const double C19214 = C19206 + C19207;
    const double C25794 = C25786 + C25787;
    const double C15848 = C15844 + C15845;
    const double C16788 = C16776 + C16777;
    const double C23486 = C23474 + C23475;
    const double C520 = C515 + C516;
    const double C4081 = C4076 + C4077;
    const double C23550 = C23544 + C23545;
    const double C1955 = C1948 + C1949;
    const double C21357 = C21354 + C21355;
    const double C2493 = C2488 + C2489;
    const double C7035 = C7028 + C7029;
    const double C19799 = C19792 + C19793;
    const double C21998 = C21994 + C21995;
    const double C6518 = C6516 + C6517;
    const double C16850 = C16842 + C16843;
    const double C23548 = C23540 + C23541;
    const double C25868 = C25864 + C25865;
    const double C29140 = -C29138;
    const double C29222 = -C29220;
    const double C1956 = C1953 + C1954;
    const double C2494 = C2491 + C2492;
    const double C7036 = C7030 + C7031;
    const double C19800 = C19794 + C19795;
    const double C9349 = C9346 + C9347;
    const double C21999 = C21996 + C21997;
    const double C3651 = C3642 + C3643;
    const double C3646 = C3632 + C3633;
    const double C3644 = C3628 + C3629;
    const double C3716 = C3710 + C3711;
    const double C3715 = C3708 + C3709;
    const double C3783 = C3778 + C3779;
    const double C3780 = C3772 + C3773;
    const double C4707 = C4700 + C4701;
    const double C4780 = C4776 + C4777;
    const double C4852 = C4848 + C4849;
    const double C6009 = C6004 + C6005;
    const double C6084 = C6080 + C6081;
    const double C6161 = C6158 + C6159;
    const double C7631 = C7622 + C7623;
    const double C7626 = C7612 + C7613;
    const double C7624 = C7608 + C7609;
    const double C7697 = C7692 + C7693;
    const double C7694 = C7686 + C7687;
    const double C7762 = C7756 + C7757;
    const double C7761 = C7754 + C7755;
    const double C8841 = C8834 + C8835;
    const double C8915 = C8912 + C8913;
    const double C8986 = C8982 + C8983;
    const double C3645 = C3630 + C3631;
    const double C3714 = C3706 + C3707;
    const double C3781 = C3774 + C3775;
    const double C7625 = C7610 + C7611;
    const double C7695 = C7688 + C7689;
    const double C7760 = C7752 + C7753;
    const double C10609 = C10594 + C10595;
    const double C10674 = C10666 + C10667;
    const double C10737 = C10730 + C10731;
    const double C20381 = C20366 + C20367;
    const double C20447 = C20440 + C20441;
    const double C20508 = C20500 + C20501;
    const double C13777 = C13770 + C13771;
    const double C13774 = C13764 + C13765;
    const double C13773 = C13762 + C13763;
    const double C13772 = C13760 + C13761;
    const double C13832 = C13827 + C13828;
    const double C13831 = C13825 + C13826;
    const double C13885 = C13880 + C13881;
    const double C13884 = C13878 + C13879;
    const double C13883 = C13875 + C13876;
    const double C14566 = C14556 + C14557;
    const double C14628 = C14624 + C14625;
    const double C14686 = C14681 + C14682;
    const double C15509 = C15504 + C15505;
    const double C15507 = C15500 + C15501;
    const double C15570 = C15566 + C15567;
    const double C15635 = C15632 + C15633;
    const double C15634 = C15627 + C15628;
    const double C16987 = C16980 + C16981;
    const double C16983 = C16972 + C16973;
    const double C16982 = C16970 + C16971;
    const double C17059 = C17054 + C17055;
    const double C17057 = C17047 + C17048;
    const double C17122 = C17117 + C17118;
    const double C17121 = C17115 + C17116;
    const double C18164 = C18160 + C18161;
    const double C18239 = C18236 + C18237;
    const double C18309 = C18307 + C18308;
    const double C26681 = C26677 + C26678;
    const double C26729 = C26725 + C26726;
    const double C10615 = C10606 + C10607;
    const double C10610 = C10596 + C10597;
    const double C10608 = C10592 + C10593;
    const double C10676 = C10670 + C10671;
    const double C10675 = C10668 + C10669;
    const double C10739 = C10734 + C10735;
    const double C10736 = C10728 + C10729;
    const double C11565 = C11558 + C11559;
    const double C11638 = C11634 + C11635;
    const double C11710 = C11706 + C11707;
    const double C12827 = C12822 + C12823;
    const double C12898 = C12894 + C12895;
    const double C12971 = C12968 + C12969;
    const double C20387 = C20378 + C20379;
    const double C20382 = C20368 + C20369;
    const double C20380 = C20364 + C20365;
    const double C20449 = C20444 + C20445;
    const double C20446 = C20438 + C20439;
    const double C20510 = C20504 + C20505;
    const double C20509 = C20502 + C20503;
    const double C21505 = C21498 + C21499;
    const double C21579 = C21576 + C21577;
    const double C21650 = C21646 + C21647;
    const double C322 = C273 * C151;
    const double C382 = C273 * C200;
    const double C1755 = C273 * C1583;
    const double C2358 = C273 * C2177;
    const double C334 = C331 * C29532;
    const double C1756 = C331 * C1525;
    const double C394 = C391 * C29543;
    const double C2359 = C391 * C2069;
    const double C7839 = C7833 * C29511;
    const double C9055 = C7833 * C1523;
    const double C7838 = C7832 * C625;
    const double C7896 = C7832 * C151;
    const double C9054 = C7832 * C1527;
    const double C9762 = C7832 * C1583;
    const double C7908 = C7905 * C29532;
    const double C9763 = C7905 * C1525;
    const double C3290 = C3280 + C3281;
    const double C3288 = C3276 + C3277;
    const double C3287 = C3274 + C3275;
    const double C3285 = C3270 + C3271;
    const double C3353 = C3348 + C3349;
    const double C3350 = C3342 + C3343;
    const double C3415 = C3410 + C3411;
    const double C3412 = C3404 + C3405;
    const double C4930 = C4924 + C4925;
    const double C4928 = C4920 + C4921;
    const double C5075 = C5072 + C5073;
    const double C5562 = C5556 + C5557;
    const double C5560 = C5552 + C5553;
    const double C5707 = C5704 + C5705;
    const double C23837 = C23828 + C23829;
    const double C23835 = C23824 + C23825;
    const double C23832 = C23818 + C23819;
    const double C23830 = C23814 + C23815;
    const double C23896 = C23888 + C23889;
    const double C23960 = C23954 + C23955;
    const double C23959 = C23952 + C23953;
    const double C25574 = C25568 + C25569;
    const double C25572 = C25564 + C25565;
    const double C25718 = C25714 + C25715;
    const double C509 = C460 * C151;
    const double C568 = C460 * C200;
    const double C1945 = C460 * C1583;
    const double C2548 = C460 * C2177;
    const double C521 = C518 * C29532;
    const double C1946 = C518 * C1525;
    const double C580 = C577 * C29543;
    const double C2549 = C577 * C2069;
    const double C4017 = C4011 * C29511;
    const double C5143 = C4011 * C1523;
    const double C4016 = C4010 * C625;
    const double C4135 = C4010 * C200;
    const double C5142 = C4010 * C1527;
    const double C6587 = C4010 * C2177;
    const double C4147 = C4144 * C29543;
    const double C6588 = C4144 * C2069;
    const double C6974 = C6964 + C6965;
    const double C6972 = C6960 + C6961;
    const double C6971 = C6958 + C6959;
    const double C6969 = C6954 + C6955;
    const double C7037 = C7032 + C7033;
    const double C7034 = C7026 + C7027;
    const double C7099 = C7094 + C7095;
    const double C7096 = C7088 + C7089;
    const double C8620 = C8614 + C8615;
    const double C8618 = C8610 + C8611;
    const double C8693 = C8690 + C8691;
    const double C9276 = C9270 + C9271;
    const double C9274 = C9266 + C9267;
    const double C9348 = C9344 + C9345;
    const double C16791 = C16782 + C16783;
    const double C16789 = C16778 + C16779;
    const double C16786 = C16772 + C16773;
    const double C16784 = C16768 + C16769;
    const double C16852 = C16846 + C16847;
    const double C16851 = C16844 + C16845;
    const double C16912 = C16904 + C16905;
    const double C19217 = C19212 + C19213;
    const double C19215 = C19208 + C19209;
    const double C19288 = C19284 + C19285;
    const double C4699 = C29683 * C635;
    const double C11557 = C29683 * C635;
    const double C3641 = C29683 * C639;
    const double C10605 = C29683 * C639;
    const double C14563 = C29499 * C639;
    const double C8833 = C29683 * C1079;
    const double C21497 = C29683 * C1079;
    const double C7621 = C29683 * C1083;
    const double C20377 = C29683 * C1083;
    const double C27531 = C29499 * C1083;
    const double C6003 = C29683 * C2615;
    const double C12821 = C29683 * C2615;
    const double C17549 = C29499 * C2615;
    const double C17189 = C29688 * C4365;
    const double C23827 = C29688 * C4365;
    const double C28155 = C29588 * C4365;
    const double C18987 = C29688 * C6227;
    const double C25567 = C29688 * C6227;
    const double C4082 = C4078 + C4079;
    const double C7971 = C7967 + C7968;
    const double C5849 = C5847 + C5848;
    const double C8692 = C8688 + C8689;
    const double C21356 = C21352 + C21353;
    const double C5706 = C5702 + C5703;
    const double C8542 = C8539 + C8540;
    const double C12550 = C12546 + C12547;
    const double C4013 = C4004 + C4005;
    const double C4929 = C4922 + C4923;
    const double C11787 = C11780 + C11781;
    const double C7835 = C7826 + C7827;
    const double C9275 = C9268 + C9269;
    const double C21925 = C21918 + C21919;
    const double C5561 = C5554 + C5555;
    const double C5778 = C5774 + C5775;
    const double C8398 = C8394 + C8395;
    const double C8619 = C8612 + C8613;
    const double C12405 = C12398 + C12399;
    const double C21283 = C21276 + C21277;
    const double C271 = C249 * C105;
    const double C458 = C436 * C105;
    const double C1698 = C249 * C632;
    const double C1888 = C436 * C632;
    const double C3282 = C3266 * C632;
    const double C4702 = C3114 * C632;
    const double C10258 = C10242 * C632;
    const double C11560 = C10090 * C632;
    const double C3636 = C3114 * C642;
    const double C4002 = C436 * C642;
    const double C4926 = C3266 * C642;
    const double C10600 = C10090 * C642;
    const double C11784 = C10242 * C642;
    const double C14564 = C13409 * C642;
    const double C2240 = C249 * C1076;
    const double C2430 = C436 * C1076;
    const double C6966 = C6950 * C1076;
    const double C8836 = C3114 * C1076;
    const double C19730 = C19714 * C1076;
    const double C21500 = C10090 * C1076;
    const double C7616 = C3114 * C1086;
    const double C7824 = C249 * C1086;
    const double C9272 = C6950 * C1086;
    const double C20372 = C10090 * C1086;
    const double C21922 = C19714 * C1086;
    const double C27532 = C13409 * C1086;
    const double C5558 = C3266 * C2618;
    const double C5776 = C436 * C2618;
    const double C5998 = C3114 * C2618;
    const double C8396 = C249 * C2618;
    const double C8616 = C6950 * C2618;
    const double C12402 = C10242 * C2618;
    const double C12816 = C10090 * C2618;
    const double C17550 = C13409 * C2618;
    const double C21280 = C19714 * C2618;
    const double C19287 = C29690 * C4577;
    const double C25867 = C29690 * C4577;
    const double C15904 = C29603 * C6513;
    const double C16849 = C29690 * C6513;
    const double C23547 = C29690 * C6513;
    const double C13829 = C13409 * C3701;
    const double C14097 = C436 * C3701;
    const double C17051 = C13409 * C4257;
    const double C17255 = C10242 * C4257;
    const double C19286 = C6950 * C4257;
    const double C23892 = C3266 * C4257;
    const double C25866 = C19714 * C4257;
    const double C28215 = C249 * C4257;
    const double C15568 = C13409 * C6075;
    const double C15903 = C436 * C6075;
    const double C16848 = C6950 * C6075;
    const double C19062 = C10242 * C6075;
    const double C23546 = C19714 * C6075;
    const double C25642 = C3266 * C6075;
    const double C26771 = C13409 * C7747;
    const double C26907 = C249 * C7747;
    const double C3635 = C29683 * C645;
    const double C4705 = C3109 * C645;
    const double C10599 = C29683 * C645;
    const double C11563 = C10085 * C645;
    const double C14559 = C29499 * C645;
    const double C3639 = C3109 * C647;
    const double C10603 = C10085 * C647;
    const double C13767 = C29499 * C647;
    const double C7615 = C29683 * C1089;
    const double C8839 = C3109 * C1089;
    const double C18163 = C29499 * C1089;
    const double C20371 = C29683 * C1089;
    const double C21503 = C10085 * C1089;
    const double C7619 = C3109 * C1091;
    const double C16979 = C29499 * C1091;
    const double C20375 = C10085 * C1091;
    const double C6001 = C3109 * C2620;
    const double C12819 = C10085 * C2620;
    const double C15503 = C29499 * C2620;
    const double C329 = C29588 * C319;
    const double C1759 = C29588 * C843;
    const double C3345 = C29688 * C843;
    const double C5001 = C3111 * C843;
    const double C10321 = C29688 * C843;
    const double C11859 = C10087 * C843;
    const double C2299 = C29588 * C1286;
    const double C5631 = C3111 * C1286;
    const double C12475 = C10087 * C1286;
    const double C7903 = C29588 * C1288;
    const double C17258 = C10087 * C1288;
    const double C23895 = C3111 * C1288;
    const double C9766 = C29588 * C2841;
    const double C17254 = C29688 * C2841;
    const double C19065 = C10087 * C2841;
    const double C23891 = C29688 * C2841;
    const double C25645 = C3111 * C2841;
    const double C575 = C29603 * C565;
    const double C2014 = C29603 * C1024;
    const double C8763 = C6643 * C1024;
    const double C21427 = C19411 * C1024;
    const double C4142 = C29603 * C1026;
    const double C16911 = C6643 * C1026;
    const double C23609 = C19411 * C1026;
    const double C2552 = C29603 * C1469;
    const double C7091 = C29690 * C1469;
    const double C9419 = C6643 * C1469;
    const double C19855 = C29690 * C1469;
    const double C22069 = C19411 * C1469;
    const double C6591 = C29603 * C3056;
    const double C16907 = C29690 * C3056;
    const double C19359 = C6643 * C3056;
    const double C23605 = C29690 * C3056;
    const double C25939 = C19411 * C3056;
    const double C17123 = C17119 + C17120;
    const double C16985 = C16976 + C16977;
    const double C19216 = C19210 + C19211;
    const double C25796 = C25790 + C25791;
    const double C335 = C332 * C29532;
    const double C1761 = C332 * C1525;
    const double C522 = C519 * C29532;
    const double C1951 = C519 * C1525;
    const double C395 = C392 * C29543;
    const double C2364 = C392 * C2069;
    const double C581 = C578 * C29543;
    const double C2554 = C578 * C2069;
    const double C325 = C275 * C151;
    const double C385 = C275 * C200;
    const double C1760 = C275 * C1583;
    const double C2363 = C275 * C2177;
    const double C330 = C277 * C151;
    const double C390 = C277 * C200;
    const double C1762 = C1702 * C1584;
    const double C1822 = C1702 * C200;
    const double C1757 = C1700 * C1584;
    const double C1825 = C1700 * C200;
    const double C2300 = C2244 * C151;
    const double C2365 = C2244 * C2178;
    const double C6899 = C2244 * C200;
    const double C9060 = C2244 * C1528;
    const double C2297 = C2242 * C151;
    const double C2360 = C2242 * C2178;
    const double C6896 = C2242 * C200;
    const double C7822 = C2242 * C625;
    const double C8466 = C2242 * C1583;
    const double C9058 = C2242 * C1527;
    const double C9056 = C2242 * C1528;
    const double C9196 = C2242 * C2177;
    const double C7843 = C7837 * C625;
    const double C7904 = C7837 * C151;
    const double C27696 = C7837 * C1527;
    const double C28212 = C7837 * C1583;
    const double C9694 = C9692 * C625;
    const double C9764 = C9692 * C1584;
    const double C26822 = C26820 * C625;
    const double C26865 = C26820 * C151;
    const double C512 = C462 * C151;
    const double C571 = C462 * C200;
    const double C1950 = C462 * C1583;
    const double C2553 = C462 * C2177;
    const double C517 = C464 * C151;
    const double C576 = C464 * C200;
    const double C1952 = C1892 * C1584;
    const double C2012 = C1892 * C200;
    const double C3519 = C1892 * C151;
    const double C5148 = C1892 * C1528;
    const double C1947 = C1890 * C1584;
    const double C2015 = C1890 * C200;
    const double C3516 = C1890 * C151;
    const double C4000 = C1890 * C625;
    const double C5146 = C1890 * C1527;
    const double C5144 = C1890 * C1528;
    const double C5216 = C1890 * C1583;
    const double C5917 = C1890 * C2177;
    const double C4021 = C4015 * C625;
    const double C4143 = C4015 * C200;
    const double C14890 = C4015 * C1527;
    const double C15957 = C4015 * C2177;
    const double C2490 = C2434 * C151;
    const double C2555 = C2434 * C2178;
    const double C2487 = C2432 * C151;
    const double C2550 = C2432 * C2178;
    const double C6447 = C6445 * C625;
    const double C6589 = C6445 * C2178;
    const double C14057 = C14055 * C625;
    const double C14142 = C14055 * C200;
    const double C15851 = C15849 * C625;
    const double C15959 = C15849 * C2178;
    const double C28647 = C28605 + C28644;
    const double C4202 = (C28653 * C28611 + C29019 * C28810) / C28430;
    const double C28646 = C28643 + C28604;
    const double C4204 = -(C29029 * C28810 + C28653 * C28610) / C28447;
    const double C28645 = C28642 / C28578;
    const double C2621 = (-(C28683 * C28653 * C28605 * ce) / C28447) / C28430 -
                         (ae * C28683 * C28653 * C28604) / C28578 -
                         (C28577 * C28683 * C28930) / C28578;
    const double C2622 =
        (-(ae * C28683 * C28653 * C28640) / C28447) / C28430 -
        (C28683 * C28930) / C28578 - (C28683 * C28653 * C28641 * ce) / C28578 +
        C28577 * ((-(C28683 * C28653 * C28632 * ce) / C28447) / C28430 -
                  (ae * C28683 * C28653 * C28629) / C28578 -
                  (C28577 * C28683 * C28653 *
                   (C28616 * C28617 + C28585 * bs[6] * std::pow(C28575, 6)) *
                   C28586) /
                      C28578);
    const double C3626 =
        (((-2 * C28653 * C28604) / C28447 -
          (C28653 * (C28629 * C28743 + C28604)) / C28447) *
         ae) /
            C28430 -
        ((2 * C28653 * C28605 + C28653 * (C28605 + C28632 * C28743)) * ce) /
            C28578 +
        C28577 *
            ((-2 * C28930) / C28578 +
             C28653 *
                 ((-((C28616 * C28617 + C28585 * bs[6] * std::pow(C28575, 6)) *
                     C28586 * C28743) /
                   C28447) /
                      C28430 -
                  C28639 / C28578));
    const double C4205 =
        (-(C28930 * C28810) / C28447) / C28430 - (C28653 * C28609) / C28578;
    const double C4206 =
        (-((C28653 * C28605 + C28653 * C28632 * C28810) * ce) / C28447) /
            C28430 -
        (ae * (C28653 * C28629 * C28810 + C28653 * C28604)) / C28578 +
        C28577 * ((-(C28653 *
                     (C28616 * C28617 + C28585 * bs[6] * std::pow(C28575, 6)) *
                     C28586 * C28810) /
                   C28447) /
                      C28430 -
                  C28930 / C28578);
    const double C13758 =
        3 * ((-(C28639 * C28743) / C28447) / C28430 - C28609 / C28578) +
        C28653 *
            ((-2 * C28930) / C28578 +
             C28653 *
                 ((-((C28616 * C28617 + C28585 * bs[6] * std::pow(C28575, 6)) *
                     C28586 * C28743) /
                   C28447) /
                      C28430 -
                  C28639 / C28578));
    const double C15496 =
        C28683 *
        ((-2 * C28930) / C28578 +
         C28653 * ((-((C28616 * C28617 + C28585 * bs[6] * std::pow(C28575, 6)) *
                      C28586 * C28743) /
                    C28447) /
                       C28430 -
                   C28639 / C28578));
    const double C16968 =
        (-2 * C28683 * C28930) / C28578 +
        C28683 * ((-(C28653 *
                     (C28616 * C28617 + C28585 * bs[6] * std::pow(C28575, 6)) *
                     C28586 * C28810) /
                   C28447) /
                      C28430 -
                  C28930 / C28578);
    const double C7606 =
        (((-2 * C28683 * C28604) / C28447 -
          (C28683 * (C28629 * C28810 + C28604)) / C28447) *
         ae) /
            C28430 -
        ((2 * C28683 * C28605 + C28683 * (C28605 + C28632 * C28810)) * ce) /
            C28578 +
        C28577 *
            ((-2 * C28940) / C28578 +
             C28683 *
                 ((-((C28616 * C28617 + C28585 * bs[6] * std::pow(C28575, 6)) *
                     C28586 * C28810) /
                   C28447) /
                      C28430 -
                  C28639 / C28578));
    const double C26672 =
        3 * ((-(C28639 * C28810) / C28447) / C28430 - C28609 / C28578) +
        C28683 *
            ((-2 * C28940) / C28578 +
             C28683 *
                 ((-((C28616 * C28617 + C28585 * bs[6] * std::pow(C28575, 6)) *
                     C28586 * C28810) /
                   C28447) /
                      C28430 -
                  C28639 / C28578));
    const double C4703 = C29683 * C644;
    const double C11561 = C29683 * C644;
    const double C3637 = C29683 * C648;
    const double C10601 = C29683 * C648;
    const double C14565 = C29499 * C648;
    const double C8837 = C29683 * C1088;
    const double C21501 = C29683 * C1088;
    const double C7617 = C29683 * C1092;
    const double C20373 = C29683 * C1092;
    const double C27533 = C29499 * C1092;
    const double C13769 = C29499 * C3625;
    const double C15499 = C29499 * C5995;
    const double C26676 = C29499 * C7605;
    const double C4578 =
        (-(C28653 * C29007) / C28447) / C28430 - (C28781 * ce) / C28578 -
        (ae * C28683 * C28997) / C28578 +
        C28683 *
            (C28683 *
                 ((-(C28653 * C28577 * std::pow(C28575, 6) * bs[6] * C28800) /
                   C28447) /
                      C28430 -
                  (C29008 * ce) / C28578) -
             (ae * C28997) / C28578);
    const double C6514 =
        C28683 *
            ((-(C29037 * ce) / C28447) / C28430 - C29007 / C28578 +
             C28653 *
                 ((-(C28653 * C28577 * std::pow(C28575, 6) * bs[6] * C28800) /
                   C28447) /
                      C28430 -
                  (C29008 * ce) / C28578)) -
        (ae * (C28653 * C28997 + C28667 + C28993 * ce)) / C28578;
    const double C3702 =
        (-2 * (C28653 * C28667 + C28600 * ce)) / C28447 -
        (C28653 * (C28653 * C28997 + C28667 + C28993 * ce)) / C28447 -
        ((C28600 + C28623 * C28743) * ce) / C28447;
    const double C4258 =
        -(C28997 * C28810 + C28653 * C28667 + C28600 * ce) / C28447;
    const double C6076 =
        -(C28683 * (C28653 * C28997 + C28667 + C28993 * ce)) / C28447;
    const double C29121 = C29118 + C28665;
    const double C7748 =
        (-2 * (C28683 * C28697 + C28600 * ce)) / C28447 -
        (C28683 * (C28683 * C29082 + C28697 + C29080 * ce)) / C28447 -
        ((C28600 + C28623 * C28810) * ce) / C28447;
    const double C17112 =
        (-2 * (C28683 * C29033 + C28986 * ce)) / C28447 -
        (C28683 * (C28683 * C29188 + C29033 + C29184 * ce)) / C28447 -
        ((C28986 + C29107 * C28810) * ce) / C28447;
    const double C29243 = C29240 + C28695;
    const double C3834 = (2 * (C28653 * C28726 + C28600 * ae) +
                          C28653 * (C28726 + C28653 * C28998 + C28993 * ae) +
                          (C28600 + C28623 * C28743) * ae) /
                         C28430;
    const double C4366 =
        (C28653 * C28726 + C28600 * ae + C28998 * C28810) / C28430;
    const double C6228 =
        (C28683 * (C28726 + C28653 * C28998 + C28993 * ae)) / C28430;
    const double C29122 = C28724 + C29119;
    const double C3888 =
        2 * ((-(C28726 * ce) / C28447) / C28430 - (ae * C28667) / C28578 -
             (C28653 * C28991) / C28578) -
        (ae * (C28653 * C28997 + C28667 + C28993 * ce)) / C28578 -
        ((C28726 + C28653 * C28998 + C28993 * ae) * ce) / C28578 +
        C28653 *
            ((-(ae * C28997) / C28447) / C28430 - C28991 / C28578 -
             (C28998 * ce) / C28578 +
             C28653 *
                 ((-(C28994 * ce) / C28447) / C28430 - (ae * C28992) / C28578 -
                  (C28653 * C28577 *
                   (C28616 * C28617 + C28743 * bs[6] * std::pow(C28575, 6)) *
                   C28586) /
                      C28578));
    const double C4420 =
        (-((C28726 + C28994 * C28810) * ce) / C28447) / C28430 -
        (ae * (C28992 * C28810 + C28667)) / C28578 +
        C28653 * ((-(C28577 *
                     (C28616 * C28617 + C28743 * bs[6] * std::pow(C28575, 6)) *
                     C28586 * C28810) /
                   C28447) /
                      C28430 -
                  C28991 / C28578);
    const double C6298 =
        (-(ae * C28683 * C28997) / C28447) / C28430 -
        (C28683 * C28991) / C28578 - (C28683 * C28998 * ce) / C28578 +
        C28653 * ((-(C28683 * C28994 * ce) / C28447) / C28430 -
                  (ae * C28683 * C28992) / C28578 -
                  (C28653 * C28683 * C28577 *
                   (C28616 * C28617 + C28743 * bs[6] * std::pow(C28575, 6)) *
                   C28586) /
                      C28578);
    const double C7894 =
        (-2 * C28683 * C28991) / C28578 +
        C28683 * ((-(C28577 *
                     (C28616 * C28617 + C28743 * bs[6] * std::pow(C28575, 6)) *
                     C28586 * C28810) /
                   C28447) /
                      C28430 -
                  C28991 / C28578);
    const double C29111 = C29105 / C28578;
    const double C17249 =
        (((-2 * C28683 * C28665) / C28447 -
          (C28683 * (C28673 * C28810 + C28665)) / C28447) *
         ae) /
            C28430 -
        ((2 * C28683 * C28724 + C28683 * (C28724 + C28732 * C28810)) * ce) /
            C28578 +
        C28653 *
            ((-2 * C29159) / C28578 +
             C28683 *
                 ((-((C28616 * C28617 + C28743 * bs[6] * std::pow(C28575, 6)) *
                     C28586 * C28810) /
                   C28447) /
                      C28430 -
                  C28753 / C28578));
    const double C26860 =
        3 * ((-(C28753 * C28810) / C28447) / C28430 - C28748 / C28578) +
        C28683 *
            ((-2 * C29159) / C28578 +
             C28683 *
                 ((-((C28616 * C28617 + C28743 * bs[6] * std::pow(C28575, 6)) *
                     C28586 * C28810) /
                   C28447) /
                      C28430 -
                  C28753 / C28578));
    const double C4999 = C29688 * C844;
    const double C11857 = C29688 * C844;
    const double C1764 = C29588 * C845;
    const double C3347 = C29688 * C845;
    const double C10323 = C29688 * C845;
    const double C2302 = C29588 * C1285;
    const double C7900 = C29588 * C1289;
    const double C5633 = C29688 * C2842;
    const double C8470 = C29588 * C2842;
    const double C12477 = C29688 * C2842;
    const double C17256 = C29688 * C4419;
    const double C23893 = C29688 * C4419;
    const double C28216 = C29588 * C4419;
    const double C19063 = C29688 * C6297;
    const double C25643 = C29688 * C6297;
    const double C26864 = C29588 * C7893;
    const double C8022 = (2 * (C28683 * C28781 + C28600 * ae) +
                          C28683 * (C28781 + C28683 * C29083 + C29080 * ae) +
                          (C28600 + C28623 * C28810) * ae) /
                         C28430;
    const double C17375 = (2 * (C28683 * C29034 + C28986 * ae) +
                           C28683 * (C29034 + C28683 * C29189 + C29184 * ae) +
                           (C28986 + C29107 * C28810) * ae) /
                          C28430;
    const double C29244 = C28779 + C29241;
    const double C4133 =
        (-2 * C28653 * C29011) / C28578 +
        C28653 * ((-(C28577 *
                     (C28616 * C28617 + C28810 * bs[6] * std::pow(C28575, 6)) *
                     C28586 * C28743) /
                   C28447) /
                      C28430 -
                  C29011 / C28578);
    const double C4630 =
        (-(ae * (C28683 * C29036 + C28993 * ce)) / C28447) / C28430 -
        (C28653 * C29011) / C28578 -
        ((C28683 * C29037 + C28993 * ae) * ce) / C28578 +
        C28683 * ((-(C29037 * ce) / C28447) / C28430 - (ae * C29036) / C28578 -
                  (C28683 * C28653 * C28577 *
                   (C28616 * C28617 + C28810 * bs[6] * std::pow(C28575, 6)) *
                   C28586) /
                      C28578);
    const double C6585 =
        (-((C28781 + C29008 * C28743) * ce) / C28447) / C28430 -
        (ae * (C29002 * C28743 + C28697)) / C28578 +
        C28683 * ((-(C28577 *
                     (C28616 * C28617 + C28810 * bs[6] * std::pow(C28575, 6)) *
                     C28586 * C28743) /
                   C28447) /
                      C28430 -
                  C29011 / C28578);
    const double C8128 =
        2 * ((-(C28781 * ce) / C28447) / C28430 - (ae * C28697) / C28578 -
             (C28683 * C29011) / C28578) -
        (ae * (C28683 * C29082 + C28697 + C29080 * ce)) / C28578 -
        ((C28781 + C28683 * C29083 + C29080 * ae) * ce) / C28578 +
        C28683 *
            ((-(ae * C29082) / C28447) / C28430 - C29011 / C28578 -
             (C29083 * ce) / C28578 +
             C28683 *
                 ((-(C29008 * ce) / C28447) / C28430 - (ae * C29002) / C28578 -
                  (C28683 * C28577 *
                   (C28616 * C28617 + C28810 * bs[6] * std::pow(C28575, 6)) *
                   C28586) /
                      C28578));
    const double C17478 =
        2 * ((-(C29034 * ce) / C28447) / C28430 - (ae * C29033) / C28578 -
             (C28683 * C29182) / C28578) -
        (ae * (C28683 * C29188 + C29033 + C29184 * ce)) / C28578 -
        ((C29034 + C28683 * C29189 + C29184 * ae) * ce) / C28578 +
        C28683 *
            ((-(ae * C29188) / C28447) / C28430 - C29182 / C28578 -
             (C29189 * ce) / C28578 +
             C28683 *
                 ((-(C29185 * ce) / C28447) / C28430 - (ae * C29183) / C28578 -
                  (C28683 * C28653 *
                   (C28616 * C28617 + C28810 * bs[6] * std::pow(C28575, 6)) *
                   C28586) /
                      C28578));
    const double C29233 = C29227 / C28578;
    const double C2011 = C29603 * C1023;
    const double C4139 = C29603 * C1027;
    const double C9417 = C29690 * C1470;
    const double C22067 = C29690 * C1470;
    const double C2557 = C29603 * C1471;
    const double C7093 = C29690 * C1471;
    const double C19857 = C29690 * C1471;
    const double C5921 = C29603 * C3057;
    const double C8761 = C29690 * C3057;
    const double C21425 = C29690 * C3057;
    const double C14141 = C29603 * C4132;
    const double C19357 = C29690 * C4629;
    const double C25937 = C29690 * C4629;
    const double C15961 = C29603 * C6584;
    const double C16909 = C29690 * C6584;
    const double C23607 = C29690 * C6584;
    const double C28638 = C28634 - C28619;
    const double C17325 = C17320 + C17321;
    const double C23961 = C23956 + C23957;
    const double C28271 = C28269 + C28270;
    const double C19139 = C19136 + C19137;
    const double C25719 = C25716 + C25717;
    const double C29120 = C29117 - C28672;
    const double C29242 = C29239 - C28702;
    const double C28679 = C28678 / C28430;
    const double C29092 = C29091 / C28430;
    const double C7823 = C2243 * C29511;
    const double C9059 = C2243 * C1523;
    const double C9057 = C2243 * C1524;
    const double C7842 = C7836 * C29511;
    const double C27697 = C7836 * C1523;
    const double C9695 = C9693 * C29511;
    const double C28738 = C28737 / C28430;
    const double C29101 = C29100 / C28430;
    const double C28161 = C28159 * C29511;
    const double C26821 = C26819 * C29511;
    const double C28709 = C28708 / C28430;
    const double C29199 = C29198 / C28430;
    const double C396 = C393 * C29543;
    const double C1829 = C1827 * C29543;
    const double C2370 = C2368 * C2070;
    const double C6897 = C2368 * C29543;
    const double C9197 = C2368 * C2069;
    const double C29132 = C29131 / C28430;
    const double C29164 = C29163 / C28430;
    const double C1828 = C1826 * C29543;
    const double C2371 = C2369 * C2070;
    const double C6898 = C2369 * C29543;
    const double C4001 = C1891 * C29511;
    const double C5147 = C1891 * C1523;
    const double C5145 = C1891 * C1524;
    const double C4020 = C4014 * C29511;
    const double C14891 = C4014 * C1523;
    const double C6446 = C6444 * C29511;
    const double C28793 = C28792 / C28430;
    const double C29214 = C29213 / C28430;
    const double C14056 = C14054 * C29511;
    const double C15850 = C15848 * C29511;
    const double C523 = C520 * C29532;
    const double C1957 = C1955 * C1526;
    const double C3517 = C1955 * C29532;
    const double C5217 = C1955 * C1525;
    const double C2495 = C2493 * C29532;
    const double C29141 = C29140 / C28430;
    const double C29223 = C29222 / C28430;
    const double C1958 = C1956 * C1526;
    const double C3518 = C1956 * C29532;
    const double C2496 = C2494 * C29532;
    const double C13783 = C13777 * C625;
    const double C13882 = C13777 * C200;
    const double C13780 = C13774 * C625;
    const double C13877 = C13774 * C200;
    const double C14560 = C13774 * C1527;
    const double C15629 = C13774 * C2177;
    const double C13779 = C13773 * C29511;
    const double C14555 = C13773 * C1523;
    const double C13778 = C13772 * C625;
    const double C13874 = C13772 * C200;
    const double C14554 = C13772 * C1527;
    const double C15624 = C13772 * C2177;
    const double C13888 = C13885 * C29543;
    const double C13887 = C13884 * C29543;
    const double C15630 = C13884 * C2069;
    const double C13886 = C13883 * C29543;
    const double C15625 = C13883 * C2069;
    const double C14570 = C14566 * C1528;
    const double C14680 = C14566 * C200;
    const double C14688 = C14686 * C29543;
    const double C15513 = C15509 * C625;
    const double C15626 = C15509 * C2178;
    const double C16564 = C15509 * C200;
    const double C17049 = C15509 * C151;
    const double C17546 = C15509 * C1527;
    const double C18844 = C15509 * C1583;
    const double C18842 = C15509 * C1584;
    const double C18914 = C15509 * C2177;
    const double C15511 = C15507 * C625;
    const double C15631 = C15507 * C2178;
    const double C16567 = C15507 * C200;
    const double C18846 = C15507 * C1584;
    const double C17050 = C15570 * C29532;
    const double C18845 = C15570 * C1525;
    const double C18843 = C15570 * C1526;
    const double C15637 = C15635 * C2070;
    const double C16566 = C15635 * C29543;
    const double C15636 = C15634 * C2070;
    const double C16565 = C15634 * C29543;
    const double C18915 = C15634 * C2069;
    const double C16993 = C16987 * C625;
    const double C17056 = C16987 * C151;
    const double C27528 = C16987 * C1527;
    const double C28050 = C16987 * C1583;
    const double C16989 = C16983 * C29511;
    const double C18159 = C16983 * C1523;
    const double C16988 = C16982 * C625;
    const double C17046 = C16982 * C151;
    const double C18158 = C16982 * C1527;
    const double C18840 = C16982 * C1583;
    const double C17062 = C17059 * C29532;
    const double C28051 = C17059 * C1525;
    const double C17060 = C17057 * C29532;
    const double C18841 = C17057 * C1525;
    const double C18166 = C18164 * C1528;
    const double C18238 = C18164 * C151;
    const double C18240 = C18239 * C29532;
    const double C26683 = C26681 * C625;
    const double C26727 = C26681 * C151;
    const double C26730 = C26729 * C29532;
    const double C4706 = C4698 + C4699;
    const double C11564 = C11556 + C11557;
    const double C3650 = C3640 + C3641;
    const double C10614 = C10604 + C10605;
    const double C14568 = C14562 + C14563;
    const double C8840 = C8832 + C8833;
    const double C21504 = C21496 + C21497;
    const double C7630 = C7620 + C7621;
    const double C20386 = C20376 + C20377;
    const double C27534 = C27530 + C27531;
    const double C6008 = C6002 + C6003;
    const double C12826 = C12820 + C12821;
    const double C17552 = C17548 + C17549;
    const double C17198 = C17188 + C17189;
    const double C23836 = C23826 + C23827;
    const double C28158 = C28154 + C28155;
    const double C18993 = C18986 + C18987;
    const double C25573 = C25566 + C25567;
    const double C5219 = C4082 * C1526;
    const double C9199 = C7971 * C2070;
    const double C5850 = C5849 * C29532;
    const double C8543 = C8542 * C29543;
    const double C4019 = C4013 * C625;
    const double C4140 = C4013 * C200;
    const double C5218 = C4013 * C1584;
    const double C14892 = C4013 * C1528;
    const double C7841 = C7835 * C625;
    const double C7901 = C7835 * C151;
    const double C9198 = C7835 * C2178;
    const double C27698 = C7835 * C1528;
    const double C5846 = C5778 * C151;
    const double C5919 = C5778 * C2178;
    const double C6439 = C5778 * C625;
    const double C8468 = C8398 * C1584;
    const double C8541 = C8398 * C200;
    const double C9690 = C8398 * C625;
    const double C278 = C271 + C272;
    const double C465 = C458 + C459;
    const double C13833 = C13829 + C13830;
    const double C14099 = C14097 + C14098;
    const double C17058 = C17051 + C17052;
    const double C19289 = C19286 + C19287;
    const double C25869 = C25866 + C25867;
    const double C15571 = C15568 + C15569;
    const double C15905 = C15903 + C15904;
    const double C16853 = C16848 + C16849;
    const double C23551 = C23546 + C23547;
    const double C26773 = C26771 + C26772;
    const double C26909 = C26907 + C26908;
    const double C3647 = C3634 + C3635;
    const double C4709 = C4704 + C4705;
    const double C10611 = C10598 + C10599;
    const double C11567 = C11562 + C11563;
    const double C14567 = C14558 + C14559;
    const double C3649 = C3638 + C3639;
    const double C10613 = C10602 + C10603;
    const double C13775 = C13766 + C13767;
    const double C7627 = C7614 + C7615;
    const double C8843 = C8838 + C8839;
    const double C18165 = C18162 + C18163;
    const double C20383 = C20370 + C20371;
    const double C21507 = C21502 + C21503;
    const double C7629 = C7618 + C7619;
    const double C16986 = C16978 + C16979;
    const double C20385 = C20374 + C20375;
    const double C6007 = C6000 + C6001;
    const double C12825 = C12818 + C12819;
    const double C15508 = C15502 + C15503;
    const double C333 = C328 + C329;
    const double C1765 = C1758 + C1759;
    const double C3351 = C3344 + C3345;
    const double C5003 = C5000 + C5001;
    const double C10327 = C10320 + C10321;
    const double C11861 = C11858 + C11859;
    const double C2303 = C2298 + C2299;
    const double C5634 = C5630 + C5631;
    const double C12478 = C12474 + C12475;
    const double C7907 = C7902 + C7903;
    const double C17262 = C17257 + C17258;
    const double C23899 = C23894 + C23895;
    const double C9767 = C9765 + C9766;
    const double C17260 = C17253 + C17254;
    const double C19067 = C19064 + C19065;
    const double C23897 = C23890 + C23891;
    const double C25647 = C25644 + C25645;
    const double C579 = C574 + C575;
    const double C2017 = C2013 + C2014;
    const double C8765 = C8762 + C8763;
    const double C21429 = C21426 + C21427;
    const double C4146 = C4141 + C4142;
    const double C16915 = C16910 + C16911;
    const double C23613 = C23608 + C23609;
    const double C2558 = C2551 + C2552;
    const double C7097 = C7090 + C7091;
    const double C9421 = C9418 + C9419;
    const double C19861 = C19854 + C19855;
    const double C22071 = C22068 + C22069;
    const double C6592 = C6590 + C6591;
    const double C16913 = C16906 + C16907;
    const double C19361 = C19358 + C19359;
    const double C23611 = C23604 + C23605;
    const double C25941 = C25938 + C25939;
    const double C18917 = C17123 * C2070;
    const double C16991 = C16985 * C625;
    const double C17053 = C16985 * C151;
    const double C18916 = C16985 * C2178;
    const double C28052 = C16985 * C1584;
    const double C337 = C325 + C335;
    const double C397 = C385 + C395;
    const double C524 = C512 + C522;
    const double C583 = C571 + C581;
    const double C28650 = C28647 + C28633;
    const double C28649 = C28646 + C28630;
    const double C5999 = C29683 * C2621;
    const double C12817 = C29683 * C2621;
    const double C17551 = C29499 * C2621;
    const double C16975 = C29499 * C4205;
    const double C4708 = C4702 + C4703;
    const double C11566 = C11560 + C11561;
    const double C3648 = C3636 + C3637;
    const double C10612 = C10600 + C10601;
    const double C14569 = C14564 + C14565;
    const double C8842 = C8836 + C8837;
    const double C21506 = C21500 + C21501;
    const double C7628 = C7616 + C7617;
    const double C20384 = C20372 + C20373;
    const double C27535 = C27532 + C27533;
    const double C13776 = C13768 + C13769;
    const double C15506 = C15498 + C15499;
    const double C26680 = C26675 + C26676;
    const double C29124 = C29121 + C29113;
    const double C29246 = C29243 + C29235;
    const double C29125 = C29122 + C29116;
    const double C5002 = C4998 + C4999;
    const double C11860 = C11856 + C11857;
    const double C1766 = C1763 + C1764;
    const double C3352 = C3346 + C3347;
    const double C10328 = C10322 + C10323;
    const double C2304 = C2301 + C2302;
    const double C7906 = C7899 + C7900;
    const double C5635 = C5632 + C5633;
    const double C8471 = C8469 + C8470;
    const double C12479 = C12476 + C12477;
    const double C17261 = C17255 + C17256;
    const double C23898 = C23892 + C23893;
    const double C28217 = C28215 + C28216;
    const double C19066 = C19062 + C19063;
    const double C25646 = C25642 + C25643;
    const double C26866 = C26863 + C26864;
    const double C29247 = C29244 + C29238;
    const double C2016 = C2010 + C2011;
    const double C4145 = C4138 + C4139;
    const double C9420 = C9416 + C9417;
    const double C22070 = C22066 + C22067;
    const double C2559 = C2556 + C2557;
    const double C7098 = C7092 + C7093;
    const double C19862 = C19856 + C19857;
    const double C5922 = C5920 + C5921;
    const double C8764 = C8760 + C8761;
    const double C21428 = C21424 + C21425;
    const double C14144 = C14140 + C14141;
    const double C19360 = C19356 + C19357;
    const double C25940 = C25936 + C25937;
    const double C15962 = C15960 + C15961;
    const double C16914 = C16908 + C16909;
    const double C23612 = C23606 + C23607;
    const double C28648 = C28638 - C28645;
    const double C29123 = C29120 - C29111;
    const double C29245 = C29242 - C29233;
    const double C28680 = C28679 - C28672;
    const double C29093 = C29092 - C29087;
    const double C26814 = C7843 + C7842;
    const double C28739 = C28738 - C28731;
    const double C29102 = C29101 - C28619;
    const double C28710 = C28709 - C28702;
    const double C29200 = C29199 - C29087;
    const double C29133 = C29132 - C28702;
    const double C29165 = C29164 - C28731;
    const double C14048 = C4021 + C4020;
    const double C28794 = C28793 - C28786;
    const double C29215 = C29214 - C28619;
    const double C29142 = C29141 - C28786;
    const double C29224 = C29223 - C28672;
    const double C13889 = C13877 + C13887;
    const double C26724 = C17056 + C17062;
    const double C14572 = C14568 * C1528;
    const double C14683 = C14568 * C200;
    const double C27536 = C27534 * C1528;
    const double C27590 = C27534 * C151;
    const double C17554 = C17552 * C1528;
    const double C17691 = C17552 * C200;
    const double C18235 = C17552 * C151;
    const double C28160 = C28158 * C625;
    const double C28214 = C28158 * C1584;
    const double C17061 = C17058 * C29532;
    const double C28053 = C17058 * C1526;
    const double C18847 = C15571 * C1526;
    const double C14571 = C14567 * C1524;
    const double C13781 = C13775 * C29511;
    const double C14561 = C13775 * C1523;
    const double C18167 = C18165 * C1524;
    const double C16992 = C16986 * C29511;
    const double C27529 = C16986 * C1523;
    const double C15512 = C15508 * C29511;
    const double C17547 = C15508 * C1523;
    const double C336 = C333 * C29532;
    const double C1767 = C1765 * C1526;
    const double C2305 = C2303 * C29532;
    const double C8467 = C2303 * C1525;
    const double C7910 = C7907 * C29532;
    const double C28213 = C7907 * C1525;
    const double C9768 = C9767 * C1526;
    const double C582 = C579 * C29543;
    const double C2019 = C2017 * C29543;
    const double C5918 = C2017 * C2069;
    const double C4149 = C4146 * C29543;
    const double C15958 = C4146 * C2069;
    const double C2560 = C2558 * C2070;
    const double C6593 = C6592 * C2070;
    const double C338 = C337 * C29603;
    const double C398 = C397 * C29603;
    const double C2678 =
        C28683 *
        (C28653 *
             ((-(ae * C28577 * C28673) / C28447) / C28430 - C28671 / C28578 +
              C28577 *
                  ((-(C28577 * std::pow(C28575, 6) * bs[6] * C28660) / C28447) /
                       C28430 -
                   (ae * C28673) / C28578)) -
         (C28650 * ce) / C28578);
    const double C2734 =
        C28683 * C28653 *
            ((-(ae * C28577 * C28703) / C28447) / C28430 - C28701 / C28578 +
             C28577 *
                 ((-(C28577 * std::pow(C28575, 6) * bs[6] * C28690) / C28447) /
                      C28430 -
                  (ae * C28703) / C28578)) -
        (C28653 * C28650 * ce) / C28578;
    const double C106 = (3 * (C28592 + C28577 * C28611 + C28600 * ae) +
                         C28577 * (2 * C28611 + C28577 * C28650 + C28631 * ae) +
                         (2 * C28600 + C28577 * C28631) * ae) /
                        C28430;
    const double C640 =
        (C28592 + C28577 * C28611 + C28600 * ae + C28650 * C28743) / C28430;
    const double C1084 =
        (C28592 + C28577 * C28611 + C28600 * ae + C28650 * C28810) / C28430;
    const double C1530 =
        (C28653 * (2 * C28611 + C28577 * C28650 + C28631 * ae)) / C28430;
    const double C2072 =
        (C28683 * (2 * C28611 + C28577 * C28650 + C28631 * ae)) / C28430;
    const double C2616 = (C28683 * C28653 * C28650) / C28430;
    const double C1532 =
        2 * ((-(C28653 * C28605 * ce) / C28447) / C28430 -
             (ae * C28653 * C28604) / C28578 - (C28577 * C28930) / C28578) -
        (ae * C28653 * C28649) / C28578 - (C28653 * C28650 * ce) / C28578 +
        C28577 *
            ((-(ae * C28653 * C28640) / C28447) / C28430 - C28930 / C28578 -
             (C28653 * C28641 * ce) / C28578 +
             C28577 *
                 ((-(C28653 * C28632 * ce) / C28447) / C28430 -
                  (ae * C28653 * C28629) / C28578 -
                  (C28577 * C28653 *
                   (C28616 * C28617 + C28585 * bs[6] * std::pow(C28575, 6)) *
                   C28586) /
                      C28578));
    const double C2074 =
        2 * ((-(C28683 * C28605 * ce) / C28447) / C28430 -
             (ae * C28683 * C28604) / C28578 - (C28577 * C28940) / C28578) -
        (ae * C28683 * C28649) / C28578 - (C28683 * C28650 * ce) / C28578 +
        C28577 *
            ((-(ae * C28683 * C28640) / C28447) / C28430 - C28940 / C28578 -
             (C28683 * C28641 * ce) / C28578 +
             C28577 *
                 ((-(C28683 * C28632 * ce) / C28447) / C28430 -
                  (ae * C28683 * C28629) / C28578 -
                  (C28577 * C28683 *
                   (C28616 * C28617 + C28585 * bs[6] * std::pow(C28575, 6)) *
                   C28586) /
                      C28578));
    const double C2790 =
        C28653 * C28683 *
            ((-(C28577 * C28732 * ce) / C28447) / C28430 - C28730 / C28578 +
             C28577 *
                 ((-(C28577 * std::pow(C28575, 6) * bs[6] * C28719) / C28447) /
                      C28430 -
                  (C28732 * ce) / C28578)) -
        (ae * C28683 * C28649) / C28578;
    const double C2952 =
        C28683 * C28653 *
            ((-(C28577 * C28787 * ce) / C28447) / C28430 - C28785 / C28578 +
             C28577 *
                 ((-(C28577 * std::pow(C28575, 6) * bs[6] * C28774) / C28447) /
                      C28430 -
                  (C28787 * ce) / C28578)) -
        (ae * C28653 * C28649) / C28578;
    const double C107 =
        (-3 * (C28577 * C28610 + C28591 + C28600 * ce)) / C28447 +
        C28577 * ((-2 * C28610) / C28447 - (C28577 * C28649) / C28447 -
                  (C28631 * ce) / C28447) -
        ((2 * C28600 + C28577 * C28631) * ce) / C28447;
    const double C643 =
        -(C28649 * C28743 + C28577 * C28610 + C28591 + C28600 * ce) / C28447;
    const double C1087 =
        -(C28649 * C28810 + C28577 * C28610 + C28591 + C28600 * ce) / C28447;
    const double C1531 =
        C28653 * ((-2 * C28610) / C28447 - (C28577 * C28649) / C28447 -
                  (C28631 * ce) / C28447);
    const double C2073 =
        C28683 * ((-2 * C28610) / C28447 - (C28577 * C28649) / C28447 -
                  (C28631 * ce) / C28447);
    const double C2619 = -(C28683 * C28653 * C28649) / C28447;
    const double C6006 = C5998 + C5999;
    const double C12824 = C12816 + C12817;
    const double C17553 = C17550 + C17551;
    const double C16984 = C16974 + C16975;
    const double C14573 = C14569 * C1524;
    const double C27537 = C27535 * C1524;
    const double C13782 = C13776 * C29511;
    const double C15510 = C15506 * C29511;
    const double C26682 = C26680 * C29511;
    const double C13822 =
        (-3 * (C28653 * C28988 + C28659 + C28986 * ce)) / C28447 +
        C28653 * ((-2 * C28988) / C28447 - (C28653 * C29124) / C28447 -
                  (C29114 * ce) / C28447) -
        ((2 * C28986 + C28653 * C29114) * ce) / C28447;
    const double C14225 =
        -(C29124 * C28810 + C28653 * C28988 + C28659 + C28986 * ce) / C28447;
    const double C15563 =
        C28683 * ((-2 * C28988) / C28447 - (C28653 * C29124) / C28447 -
                  (C29114 * ce) / C28447);
    const double C26768 =
        (-3 * (C28683 * C29076 + C28689 + C29074 * ce)) / C28447 +
        C28683 * ((-2 * C29076) / C28447 - (C28683 * C29246) / C28447 -
                  (C29236 * ce) / C28447) -
        ((2 * C29074 + C28683 * C29236) * ce) / C28447;
    const double C15739 =
        2 * ((-(C28683 * C28724 * ce) / C28447) / C28430 -
             (ae * C28683 * C28665) / C28578 - (C28653 * C29159) / C28578) -
        (ae * C28683 * C29124) / C28578 - (C28683 * C29125 * ce) / C28578 +
        C28653 *
            ((-(ae * C28683 * C29112) / C28447) / C28430 - C29159 / C28578 -
             (C28683 * C29115 * ce) / C28578 +
             C28653 *
                 ((-(C28683 * C28732 * ce) / C28447) / C28430 -
                  (ae * C28683 * C28673) / C28578 -
                  (C28653 * C28683 *
                   (C28616 * C28617 + C28743 * bs[6] * std::pow(C28575, 6)) *
                   C28586) /
                      C28578));
    const double C13927 =
        (3 * (C28718 + C28653 * C28989 + C28986 * ae) +
         C28653 * (2 * C28989 + C28653 * C29125 + C29114 * ae) +
         (2 * C28986 + C28653 * C29114) * ae) /
        C28430;
    const double C14305 =
        (C28718 + C28653 * C28989 + C28986 * ae + C29125 * C28810) / C28430;
    const double C15687 =
        (C28683 * (2 * C28989 + C28653 * C29125 + C29114 * ae)) / C28430;
    const double C1768 = C1766 * C1526;
    const double C2306 = C2304 * C29532;
    const double C7909 = C7906 * C29532;
    const double C8472 = C8471 * C1526;
    const double C28218 = C28217 * C1526;
    const double C26867 = C26866 * C29532;
    const double C26947 =
        (3 * (C28773 + C28683 * C29077 + C29074 * ae) +
         C28683 * (2 * C29077 + C28683 * C29247 + C29236 * ae) +
         (2 * C29074 + C28683 * C29236) * ae) /
        C28430;
    const double C2018 = C2016 * C29543;
    const double C4148 = C4145 * C29543;
    const double C2561 = C2559 * C2070;
    const double C5923 = C5922 * C2070;
    const double C14145 = C14144 * C29543;
    const double C15963 = C15962 * C2070;
    const double C112 =
        3 * ((-(ae * C28610) / C28447) / C28430 - C28609 / C28578 -
             (C28611 * ce) / C28578 + C28577 * C28648) +
        (((-2 * C28610) / C28447 - (C28577 * C28649) / C28447 -
          (C28631 * ce) / C28447) *
         ae) /
            C28430 -
        ((2 * C28611 + C28577 * C28650 + C28631 * ae) * ce) / C28578 +
        C28577 * (2 * C28648 - (ae * C28649) / C28578 - (C28650 * ce) / C28578 +
                  C28577 * ((-(ae * C28640) / C28447) / C28430 -
                            C28639 / C28578 - (C28641 * ce) / C28578 +
                            C28577 * ((-(C28632 * ce) / C28447) / C28430 -
                                      (ae * C28629) / C28578 -
                                      (C28577 *
                                       (C28616 * C28617 +
                                        C28585 * bs[6] * std::pow(C28575, 6)) *
                                       C28586) /
                                          C28578)));
    const double C13967 =
        3 * ((-(ae * C28988) / C28447) / C28430 - C28748 / C28578 -
             (C28989 * ce) / C28578 + C28653 * C29123) +
        (((-2 * C28988) / C28447 - (C28653 * C29124) / C28447 -
          (C29114 * ce) / C28447) *
         ae) /
            C28430 -
        ((2 * C28989 + C28653 * C29125 + C29114 * ae) * ce) / C28578 +
        C28653 * (2 * C29123 - (ae * C29124) / C28578 - (C29125 * ce) / C28578 +
                  C28653 * ((-(ae * C29112) / C28447) / C28430 -
                            C28753 / C28578 - (C29115 * ce) / C28578 +
                            C28653 * ((-(C28732 * ce) / C28447) / C28430 -
                                      (ae * C28673) / C28578 -
                                      (C28653 *
                                       (C28616 * C28617 +
                                        C28743 * bs[6] * std::pow(C28575, 6)) *
                                       C28586) /
                                          C28578)));
    const double C27026 =
        3 * ((-(ae * C29076) / C28447) / C28430 - C28815 / C28578 -
             (C29077 * ce) / C28578 + C28683 * C29245) +
        (((-2 * C29076) / C28447 - (C28683 * C29246) / C28447 -
          (C29236 * ce) / C28447) *
         ae) /
            C28430 -
        ((2 * C29077 + C28683 * C29247 + C29236 * ae) * ce) / C28578 +
        C28683 * (2 * C29245 - (ae * C29246) / C28578 - (C29247 * ce) / C28578 +
                  C28683 * ((-(ae * C29234) / C28447) / C28430 -
                            C28820 / C28578 - (C29237 * ce) / C28578 +
                            C28683 * ((-(C28787 * ce) / C28447) / C28430 -
                                      (ae * C28703) / C28578 -
                                      (C28683 *
                                       (C28616 * C28617 +
                                        C28810 * bs[6] * std::pow(C28575, 6)) *
                                       C28586) /
                                          C28578)));
    const double C161 =
        3 * ((-(ae * C28667) / C28447) / C28430 - C28664 / C28578 +
             C28577 * C28680) +
        (((-2 * C28667) / C28447 - (C28577 * C28677) / C28447) * ae) / C28430 +
        C28577 *
            (2 * C28680 - (ae * C28677) / C28578 +
             C28577 *
                 ((-(ae * C28577 * C28673) / C28447) / C28430 -
                  C28671 / C28578 +
                  C28577 * ((-(C28577 * std::pow(C28575, 6) * bs[6] * C28660) /
                             C28447) /
                                C28430 -
                            (ae * C28673) / C28578)));
    const double C697 =
        C28653 * ((-(ae * C28667) / C28447) / C28430 - C28664 / C28578 +
                  C28577 * C28680) -
        ((C28592 + C28577 * C28611 + C28600 * ae) * ce) / C28578;
    const double C701 = (-(C28577 * C28664) / C28447) / C28430 -
                        (ae * C28659) / C28578 -
                        (C28653 * C28611 * ce) / C28578 +
                        C28653 * (C28653 * C28680 - (C28611 * ce) / C28578);
    const double C702 =
        (-(ae * C28667) / C28447) / C28430 - C28664 / C28578 + C28577 * C28680 -
        (C28653 * C28650 * ce) / C28578 +
        C28653 *
            (C28653 *
                 ((-(ae * C28577 * C28673) / C28447) / C28430 -
                  C28671 / C28578 +
                  C28577 * ((-(C28577 * std::pow(C28575, 6) * bs[6] * C28660) /
                             C28447) /
                                C28430 -
                            (ae * C28673) / C28578)) -
             (C28650 * ce) / C28578);
    const double C1138 = C28683 * ((-(ae * C28667) / C28447) / C28430 -
                                   C28664 / C28578 + C28577 * C28680);
    const double C1142 = (-(C28577 * C28664) / C28447) / C28430 -
                         (ae * C28659) / C28578 + C28680 * C28810;
    const double C1143 =
        (-(ae * C28667) / C28447) / C28430 - C28664 / C28578 + C28577 * C28680 +
        ((-(ae * C28577 * C28673) / C28447) / C28430 - C28671 / C28578 +
         C28577 * ((-(C28577 * std::pow(C28575, 6) * bs[6] * C28660) / C28447) /
                       C28430 -
                   (ae * C28673) / C28578)) *
            C28810;
    const double C1586 =
        C28653 *
            (2 * C28680 - (ae * C28677) / C28578 +
             C28577 *
                 ((-(ae * C28577 * C28673) / C28447) / C28430 -
                  C28671 / C28578 +
                  C28577 * ((-(C28577 * std::pow(C28575, 6) * bs[6] * C28660) /
                             C28447) /
                                C28430 -
                            (ae * C28673) / C28578))) -
        ((2 * C28611 + C28577 * C28650 + C28631 * ae) * ce) / C28578;
    const double C2126 =
        C28683 *
        (2 * C28680 - (ae * C28677) / C28578 +
         C28577 *
             ((-(ae * C28577 * C28673) / C28447) / C28430 - C28671 / C28578 +
              C28577 *
                  ((-(C28577 * std::pow(C28575, 6) * bs[6] * C28660) / C28447) /
                       C28430 -
                   (ae * C28673) / C28578)));
    const double C2677 = C28683 * (C28653 * C28680 - (C28611 * ce) / C28578);
    const double C3704 =
        2 * (C28653 * C28680 - (C28611 * ce) / C28578) -
        ((C28611 + C28641 * C28743) * ce) / C28578 +
        C28653 *
            (C28680 - (C28653 * C28641 * ce) / C28578 +
             C28653 *
                 (C28653 * ((-(C28577 * std::pow(C28575, 6) * bs[6] * C28660) /
                             C28447) /
                                C28430 -
                            (ae * C28673) / C28578) -
                  (C28641 * ce) / C28578));
    const double C4260 =
        C28653 * C28680 - (C28611 * ce) / C28578 +
        (C28653 * ((-(C28577 * std::pow(C28575, 6) * bs[6] * C28660) / C28447) /
                       C28430 -
                   (ae * C28673) / C28578) -
         (C28641 * ce) / C28578) *
            C28810;
    const double C6078 =
        C28683 *
        (C28680 - (C29019 * ce) / C28578 +
         C28653 * (C28653 * ((-(C28577 * std::pow(C28575, 6) * bs[6] * C28660) /
                              C28447) /
                                 C28430 -
                             (ae * C28673) / C28578) -
                   (C28641 * ce) / C28578));
    const double C7684 =
        2 * C28683 * C28680 +
        C28683 * (C28680 +
                  ((-(C28577 * std::pow(C28575, 6) * bs[6] * C28660) / C28447) /
                       C28430 -
                   (ae * C28673) / C28578) *
                      C28810);
    const double C13823 =
        3 * ((-(C29017 * ce) / C28447) / C28430 - C28664 / C28578 +
             C28653 * C29093) -
        ((2 * C29017 + C28653 * C29090) * ce) / C28578 +
        C28653 *
            (2 * C29093 - (C29090 * ce) / C28578 +
             C28653 *
                 ((-(C28653 * C28632 * ce) / C28447) / C28430 -
                  C28671 / C28578 +
                  C28653 * ((-(C28653 * std::pow(C28575, 6) * bs[6] * C28660) /
                             C28447) /
                                C28430 -
                            (C28632 * ce) / C28578)));
    const double C14226 =
        (-(C29017 * ce) / C28447) / C28430 - C28664 / C28578 + C28653 * C29093 +
        ((-(C28653 * C28632 * ce) / C28447) / C28430 - C28671 / C28578 +
         C28653 * ((-(C28653 * std::pow(C28575, 6) * bs[6] * C28660) / C28447) /
                       C28430 -
                   (C28632 * ce) / C28578)) *
            C28810;
    const double C15564 =
        C28683 *
        (2 * C29093 - (C29090 * ce) / C28578 +
         C28653 *
             ((-(C28653 * C28632 * ce) / C28447) / C28430 - C28671 / C28578 +
              C28653 *
                  ((-(C28653 * std::pow(C28575, 6) * bs[6] * C28660) / C28447) /
                       C28430 -
                   (C28632 * ce) / C28578)));
    const double C17044 =
        2 * C28683 * C29093 +
        C28683 * (C29093 +
                  ((-(C28653 * std::pow(C28575, 6) * bs[6] * C28660) / C28447) /
                       C28430 -
                   (C28632 * ce) / C28578) *
                      C28810);
    const double C259 =
        3 * ((-(C28726 * ce) / C28447) / C28430 - C28723 / C28578 +
             C28577 * C28739) -
        ((2 * C28726 + C28577 * C28736) * ce) / C28578 +
        C28577 *
            (2 * C28739 - (C28736 * ce) / C28578 +
             C28577 *
                 ((-(C28577 * C28732 * ce) / C28447) / C28430 -
                  C28730 / C28578 +
                  C28577 * ((-(C28577 * std::pow(C28575, 6) * bs[6] * C28719) /
                             C28447) /
                                C28430 -
                            (C28732 * ce) / C28578)));
    const double C797 =
        C28653 * ((-(C28726 * ce) / C28447) / C28430 - C28723 / C28578 +
                  C28577 * C28739) -
        (ae * (C28577 * C28610 + C28591 + C28600 * ce)) / C28578;
    const double C801 = (-(C28577 * C28723) / C28447) / C28430 -
                        (C28718 * ce) / C28578 -
                        (ae * C28653 * C28610) / C28578 +
                        C28653 * (C28653 * C28739 - (ae * C28610) / C28578);
    const double C802 =
        (-(C28726 * ce) / C28447) / C28430 - C28723 / C28578 + C28577 * C28739 -
        (ae * C28653 * C28649) / C28578 +
        C28653 *
            (C28653 *
                 ((-(C28577 * C28732 * ce) / C28447) / C28430 -
                  C28730 / C28578 +
                  C28577 * ((-(C28577 * std::pow(C28575, 6) * bs[6] * C28719) /
                             C28447) /
                                C28430 -
                            (C28732 * ce) / C28578)) -
             (ae * C28649) / C28578);
    const double C1241 = C28683 * ((-(C28726 * ce) / C28447) / C28430 -
                                   C28723 / C28578 + C28577 * C28739);
    const double C1245 = (-(C28577 * C28723) / C28447) / C28430 -
                         (C28718 * ce) / C28578 + C28739 * C28810;
    const double C1246 =
        (-(C28726 * ce) / C28447) / C28430 - C28723 / C28578 + C28577 * C28739 +
        ((-(C28577 * C28732 * ce) / C28447) / C28430 - C28730 / C28578 +
         C28577 * ((-(C28577 * std::pow(C28575, 6) * bs[6] * C28719) / C28447) /
                       C28430 -
                   (C28732 * ce) / C28578)) *
            C28810;
    const double C1690 =
        (((-2 * C28610) / C28447 - (C28577 * C28649) / C28447 -
          (C28631 * ce) / C28447) *
         ae) /
            C28430 +
        C28653 *
            (2 * C28739 - (C28736 * ce) / C28578 +
             C28577 *
                 ((-(C28577 * C28732 * ce) / C28447) / C28430 -
                  C28730 / C28578 +
                  C28577 * ((-(C28577 * std::pow(C28575, 6) * bs[6] * C28719) /
                             C28447) /
                                C28430 -
                            (C28732 * ce) / C28578)));
    const double C2232 =
        C28683 *
        (2 * C28739 - (C28736 * ce) / C28578 +
         C28577 *
             ((-(C28577 * C28732 * ce) / C28447) / C28430 - C28730 / C28578 +
              C28577 *
                  ((-(C28577 * std::pow(C28575, 6) * bs[6] * C28719) / C28447) /
                       C28430 -
                   (C28732 * ce) / C28578)));
    const double C2789 =
        C28653 * C28683 * C28739 - (ae * C28683 * C28610) / C28578;
    const double C3836 =
        2 * (C28653 * C28739 - (ae * C28610) / C28578) -
        (ae * (C28640 * C28743 + C28610)) / C28578 +
        C28653 *
            (C28739 - (ae * C28653 * C28640) / C28578 +
             C28653 *
                 (C28653 * ((-(C28577 * std::pow(C28575, 6) * bs[6] * C28719) /
                             C28447) /
                                C28430 -
                            (C28732 * ce) / C28578) -
                  (ae * C28640) / C28578));
    const double C4368 =
        C28653 * (C28739 +
                  ((-(C28577 * std::pow(C28575, 6) * bs[6] * C28719) / C28447) /
                       C28430 -
                   (C28732 * ce) / C28578) *
                      C28810) -
        (ae * (C28640 * C28810 + C28610)) / C28578;
    const double C6230 =
        C28683 * C28739 - (ae * C28683 * C29029) / C28578 +
        C28653 *
            (C28653 * C28683 *
                 ((-(C28577 * std::pow(C28575, 6) * bs[6] * C28719) / C28447) /
                      C28430 -
                  (C28732 * ce) / C28578) -
             (ae * C28683 * C28640) / C28578);
    const double C7816 =
        2 * C28683 * C28739 +
        C28683 * (C28739 +
                  ((-(C28577 * std::pow(C28575, 6) * bs[6] * C28719) / C28447) /
                       C28430 -
                   (C28732 * ce) / C28578) *
                      C28810);
    const double C13928 =
        3 * ((-(ae * C29027) / C28447) / C28430 - C28723 / C28578 +
             C28653 * C29102) +
        (((-2 * C29027) / C28447 - (C28653 * C29099) / C28447) * ae) / C28430 +
        C28653 *
            (2 * C29102 - (ae * C29099) / C28578 +
             C28653 *
                 ((-(ae * C28653 * C28629) / C28447) / C28430 -
                  C28730 / C28578 +
                  C28653 * ((-(C28653 * std::pow(C28575, 6) * bs[6] * C28719) /
                             C28447) /
                                C28430 -
                            (ae * C28629) / C28578)));
    const double C210 =
        3 * ((-(ae * C28697) / C28447) / C28430 - C28694 / C28578 +
             C28577 * C28710) +
        (((-2 * C28697) / C28447 - (C28577 * C28707) / C28447) * ae) / C28430 +
        C28577 *
            (2 * C28710 - (ae * C28707) / C28578 +
             C28577 *
                 ((-(ae * C28577 * C28703) / C28447) / C28430 -
                  C28701 / C28578 +
                  C28577 * ((-(C28577 * std::pow(C28575, 6) * bs[6] * C28690) /
                             C28447) /
                                C28430 -
                            (ae * C28703) / C28578)));
    const double C747 = C28653 * ((-(ae * C28697) / C28447) / C28430 -
                                  C28694 / C28578 + C28577 * C28710);
    const double C751 = (-(C28577 * C28694) / C28447) / C28430 -
                        (ae * C28689) / C28578 + C28710 * C28743;
    const double C752 =
        (-(ae * C28697) / C28447) / C28430 - C28694 / C28578 + C28577 * C28710 +
        ((-(ae * C28577 * C28703) / C28447) / C28430 - C28701 / C28578 +
         C28577 * ((-(C28577 * std::pow(C28575, 6) * bs[6] * C28690) / C28447) /
                       C28430 -
                   (ae * C28703) / C28578)) *
            C28743;
    const double C1191 =
        C28683 * ((-(ae * C28697) / C28447) / C28430 - C28694 / C28578 +
                  C28577 * C28710) -
        ((C28592 + C28577 * C28611 + C28600 * ae) * ce) / C28578;
    const double C1195 = (-(C28577 * C28694) / C28447) / C28430 -
                         (ae * C28689) / C28578 -
                         (C28683 * C28611 * ce) / C28578 +
                         C28683 * (C28683 * C28710 - (C28611 * ce) / C28578);
    const double C1196 =
        (-(ae * C28697) / C28447) / C28430 - C28694 / C28578 + C28577 * C28710 -
        (C28683 * C28650 * ce) / C28578 +
        C28683 *
            (C28683 *
                 ((-(ae * C28577 * C28703) / C28447) / C28430 -
                  C28701 / C28578 +
                  C28577 * ((-(C28577 * std::pow(C28575, 6) * bs[6] * C28690) /
                             C28447) /
                                C28430 -
                            (ae * C28703) / C28578)) -
             (C28650 * ce) / C28578);
    const double C1638 =
        C28653 *
        (2 * C28710 - (ae * C28707) / C28578 +
         C28577 *
             ((-(ae * C28577 * C28703) / C28447) / C28430 - C28701 / C28578 +
              C28577 *
                  ((-(C28577 * std::pow(C28575, 6) * bs[6] * C28690) / C28447) /
                       C28430 -
                   (ae * C28703) / C28578)));
    const double C2180 =
        C28683 *
            (2 * C28710 - (ae * C28707) / C28578 +
             C28577 *
                 ((-(ae * C28577 * C28703) / C28447) / C28430 -
                  C28701 / C28578 +
                  C28577 * ((-(C28577 * std::pow(C28575, 6) * bs[6] * C28690) /
                             C28447) /
                                C28430 -
                            (ae * C28703) / C28578))) -
        ((2 * C28611 + C28577 * C28650 + C28631 * ae) * ce) / C28578;
    const double C2733 =
        C28683 * C28653 * C28710 - (C28653 * C28611 * ce) / C28578;
    const double C3770 =
        2 * C28653 * C28710 +
        C28653 * (C28710 +
                  ((-(C28577 * std::pow(C28575, 6) * bs[6] * C28690) / C28447) /
                       C28430 -
                   (ae * C28703) / C28578) *
                      C28743);
    const double C4314 =
        C28653 * C28710 - (C28683 * C29019 * ce) / C28578 +
        C28683 *
            (C28683 * C28653 *
                 ((-(C28577 * std::pow(C28575, 6) * bs[6] * C28690) / C28447) /
                      C28430 -
                  (ae * C28703) / C28578) -
             (C29019 * ce) / C28578);
    const double C6154 =
        C28683 * (C28710 +
                  ((-(C28577 * std::pow(C28575, 6) * bs[6] * C28690) / C28447) /
                       C28430 -
                   (ae * C28703) / C28578) *
                      C28743) -
        ((C28611 + C28641 * C28743) * ce) / C28578;
    const double C7750 =
        2 * (C28683 * C28710 - (C28611 * ce) / C28578) -
        ((C28611 + C28641 * C28810) * ce) / C28578 +
        C28683 *
            (C28710 - (C28683 * C28641 * ce) / C28578 +
             C28683 *
                 (C28683 * ((-(C28577 * std::pow(C28575, 6) * bs[6] * C28690) /
                             C28447) /
                                C28430 -
                            (ae * C28703) / C28578) -
                  (C28641 * ce) / C28578));
    const double C26769 =
        3 * ((-(C29193 * ce) / C28447) / C28430 - C28694 / C28578 +
             C28683 * C29200) -
        ((2 * C29193 + C28683 * C29197) * ce) / C28578 +
        C28683 *
            (2 * C29200 - (C29197 * ce) / C28578 +
             C28683 *
                 ((-(C28683 * C28632 * ce) / C28447) / C28430 -
                  C28701 / C28578 +
                  C28683 * ((-(C28683 * std::pow(C28575, 6) * bs[6] * C28690) /
                             C28447) /
                                C28430 -
                            (C28632 * ce) / C28578)));
    const double C14006 =
        3 * ((-(ae * C29033) / C28447) / C28430 - C28762 / C28578 +
             C28653 * C29133) +
        (((-2 * C29033) / C28447 - (C28653 * C29130) / C28447) * ae) / C28430 +
        C28653 *
            (2 * C29133 - (ae * C29130) / C28578 +
             C28653 *
                 ((-(ae * C28653 * C28703) / C28447) / C28430 -
                  C28765 / C28578 +
                  C28653 * ((-(C28653 * std::pow(C28575, 6) * bs[6] * C28759) /
                             C28447) /
                                C28430 -
                            (ae * C28703) / C28578)));
    const double C15790 =
        2 * (C28653 * C29165 - (ae * C29076) / C28578) -
        (ae * (C28683 * C29130 + C29114 * ce)) / C28578 +
        C28653 *
            (C29165 - (ae * (C28683 * C28653 * C28703 + C29113)) / C28578 +
             C28653 *
                 (C28653 * ((-(C28683 * std::pow(C28575, 6) * bs[6] * C28759) /
                             C28447) /
                                C28430 -
                            (C28732 * ce) / C28578) -
                  (ae * (C28683 * C28703 + C28622)) / C28578));
    const double C17312 =
        (((-2 * C29076) / C28447 -
          (C28683 * (C28683 * (C28683 * C28703 + C28622) + C28695 +
                     C28683 * C28615 * ce)) /
              C28447 -
          ((C28594 + C28615 * C28810) * ce) / C28447) *
         ae) /
            C28430 +
        C28653 *
            (2 * C29165 - ((C28724 + C28732 * C28810) * ce) / C28578 +
             C28683 *
                 ((-(C28683 * C28732 * ce) / C28447) / C28430 -
                  C28765 / C28578 +
                  C28683 * ((-(C28683 * std::pow(C28575, 6) * bs[6] * C28759) /
                             C28447) /
                                C28430 -
                            (C28732 * ce) / C28578)));
    const double C26905 =
        3 * ((-(C29204 * ce) / C28447) / C28430 - C28762 / C28578 +
             C28683 * C29165) -
        ((2 * C29204 + C28683 * C29206) * ce) / C28578 +
        C28683 *
            (2 * C29165 - (C29206 * ce) / C28578 +
             C28683 *
                 ((-(C28683 * C28732 * ce) / C28447) / C28430 -
                  C28765 / C28578 +
                  C28683 * ((-(C28683 * std::pow(C28575, 6) * bs[6] * C28759) /
                             C28447) /
                                C28430 -
                            (C28732 * ce) / C28578)));
    const double C14053 = C14048 * C29499;
    const double C446 =
        3 * ((-(C28781 * ce) / C28447) / C28430 - C28778 / C28578 +
             C28577 * C28794) -
        ((2 * C28781 + C28577 * C28791) * ce) / C28578 +
        C28577 *
            (2 * C28794 - (C28791 * ce) / C28578 +
             C28577 *
                 ((-(C28577 * C28787 * ce) / C28447) / C28430 -
                  C28785 / C28578 +
                  C28577 * ((-(C28577 * std::pow(C28575, 6) * bs[6] * C28774) /
                             C28447) /
                                C28430 -
                            (C28787 * ce) / C28578)));
    const double C935 = C28653 * ((-(C28781 * ce) / C28447) / C28430 -
                                  C28778 / C28578 + C28577 * C28794);
    const double C939 = (-(C28577 * C28778) / C28447) / C28430 -
                        (C28773 * ce) / C28578 + C28794 * C28743;
    const double C940 =
        (-(C28781 * ce) / C28447) / C28430 - C28778 / C28578 + C28577 * C28794 +
        ((-(C28577 * C28787 * ce) / C28447) / C28430 - C28785 / C28578 +
         C28577 * ((-(C28577 * std::pow(C28575, 6) * bs[6] * C28774) / C28447) /
                       C28430 -
                   (C28787 * ce) / C28578)) *
            C28743;
    const double C1379 =
        C28683 * ((-(C28781 * ce) / C28447) / C28430 - C28778 / C28578 +
                  C28577 * C28794) -
        (ae * (C28577 * C28610 + C28591 + C28600 * ce)) / C28578;
    const double C1383 = (-(C28577 * C28778) / C28447) / C28430 -
                         (C28773 * ce) / C28578 -
                         (ae * C28683 * C28610) / C28578 +
                         C28683 * (C28683 * C28794 - (ae * C28610) / C28578);
    const double C1384 =
        (-(C28781 * ce) / C28447) / C28430 - C28778 / C28578 + C28577 * C28794 -
        (ae * C28683 * C28649) / C28578 +
        C28683 *
            (C28683 *
                 ((-(C28577 * C28787 * ce) / C28447) / C28430 -
                  C28785 / C28578 +
                  C28577 * ((-(C28577 * std::pow(C28575, 6) * bs[6] * C28774) /
                             C28447) /
                                C28430 -
                            (C28787 * ce) / C28578)) -
             (ae * C28649) / C28578);
    const double C1880 =
        C28653 *
        (2 * C28794 - (C28791 * ce) / C28578 +
         C28577 *
             ((-(C28577 * C28787 * ce) / C28447) / C28430 - C28785 / C28578 +
              C28577 *
                  ((-(C28577 * std::pow(C28575, 6) * bs[6] * C28774) / C28447) /
                       C28430 -
                   (C28787 * ce) / C28578)));
    const double C2422 =
        (((-2 * C28610) / C28447 - (C28577 * C28649) / C28447 -
          (C28631 * ce) / C28447) *
         ae) /
            C28430 +
        C28683 *
            (2 * C28794 - (C28791 * ce) / C28578 +
             C28577 *
                 ((-(C28577 * C28787 * ce) / C28447) / C28430 -
                  C28785 / C28578 +
                  C28577 * ((-(C28577 * std::pow(C28575, 6) * bs[6] * C28774) /
                             C28447) /
                                C28430 -
                            (C28787 * ce) / C28578)));
    const double C2951 =
        C28683 * C28653 * C28794 - (ae * C28653 * C28610) / C28578;
    const double C3994 =
        2 * C28653 * C28794 +
        C28653 * (C28794 +
                  ((-(C28577 * std::pow(C28575, 6) * bs[6] * C28774) / C28447) /
                       C28430 -
                   (C28787 * ce) / C28578) *
                      C28743);
    const double C4526 =
        C28653 * C28794 - (ae * C28683 * C29029) / C28578 +
        C28683 *
            (C28683 * C28653 *
                 ((-(C28577 * std::pow(C28575, 6) * bs[6] * C28774) / C28447) /
                      C28430 -
                  (C28787 * ce) / C28578) -
             (ae * C29029) / C28578);
    const double C6436 =
        C28683 * (C28794 +
                  ((-(C28577 * std::pow(C28575, 6) * bs[6] * C28774) / C28447) /
                       C28430 -
                   (C28787 * ce) / C28578) *
                      C28743) -
        (ae * (C28640 * C28743 + C28610)) / C28578;
    const double C8024 =
        2 * (C28683 * C28794 - (ae * C28610) / C28578) -
        (ae * (C28640 * C28810 + C28610)) / C28578 +
        C28683 *
            (C28794 - (ae * C28683 * C28640) / C28578 +
             C28683 *
                 (C28683 * ((-(C28577 * std::pow(C28575, 6) * bs[6] * C28774) /
                             C28447) /
                                C28430 -
                            (C28787 * ce) / C28578) -
                  (ae * C28640) / C28578));
    const double C26948 =
        3 * ((-(ae * C29208) / C28447) / C28430 - C28778 / C28578 +
             C28683 * C29215) +
        (((-2 * C29208) / C28447 - (C28683 * C29212) / C28447) * ae) / C28430 +
        C28683 *
            (2 * C29215 - (ae * C29212) / C28578 +
             C28683 *
                 ((-(ae * C28683 * C28629) / C28447) / C28430 -
                  C28785 / C28578 +
                  C28683 * ((-(C28683 * std::pow(C28575, 6) * bs[6] * C28774) /
                             C28447) /
                                C28430 -
                            (ae * C28629) / C28578)));
    const double C14095 =
        3 * ((-(C29034 * ce) / C28447) / C28430 - C28803 / C28578 +
             C28653 * C29142) -
        ((2 * C29034 + C28653 * C29139) * ce) / C28578 +
        C28653 *
            (2 * C29142 - (C29139 * ce) / C28578 +
             C28653 *
                 ((-(C28653 * C28787 * ce) / C28447) / C28430 -
                  C28806 / C28578 +
                  C28653 * ((-(C28653 * std::pow(C28575, 6) * bs[6] * C28800) /
                             C28447) /
                                C28430 -
                            (C28787 * ce) / C28578)));
    const double C14463 =
        (-(C29034 * ce) / C28447) / C28430 - C28803 / C28578 + C28653 * C29142 -
        (ae * C28683 * C29124) / C28578 +
        C28683 *
            (C28683 *
                 ((-(C28653 * C28787 * ce) / C28447) / C28430 -
                  C28806 / C28578 +
                  C28653 * ((-(C28653 * std::pow(C28575, 6) * bs[6] * C28800) /
                             C28447) /
                                C28430 -
                            (C28787 * ce) / C28578)) -
             (ae * C29124) / C28578);
    const double C15901 =
        (((-2 * C28988) / C28447 - (C28653 * C29124) / C28447 -
          (C29114 * ce) / C28447) *
         ae) /
            C28430 +
        C28683 *
            (2 * C29142 - (C29139 * ce) / C28578 +
             C28653 *
                 ((-(C28653 * C28787 * ce) / C28447) / C28430 -
                  C28806 / C28578 +
                  C28653 * ((-(C28653 * std::pow(C28575, 6) * bs[6] * C28800) /
                             C28447) /
                                C28430 -
                            (C28787 * ce) / C28578)));
    const double C17427 =
        2 * (C28683 * C29142 - (ae * C28988) / C28578) -
        (ae * (C29112 * C28810 + C28988)) / C28578 +
        C28683 *
            (C29142 - (ae * C28683 * C29112) / C28578 +
             C28683 *
                 (C28683 * ((-(C28653 * std::pow(C28575, 6) * bs[6] * C28800) /
                             C28447) /
                                C28430 -
                            (C28787 * ce) / C28578) -
                  (ae * C29112) / C28578));
    const double C26987 =
        3 * ((-(ae * C29217) / C28447) / C28430 - C28803 / C28578 +
             C28683 * C29224) +
        (((-2 * C29217) / C28447 - (C28683 * C29221) / C28447) * ae) / C28430 +
        C28683 *
            (2 * C29224 - (ae * C29221) / C28578 +
             C28683 *
                 ((-(ae * C28683 * C28673) / C28447) / C28430 -
                  C28806 / C28578 +
                  C28683 * ((-(C28683 * std::pow(C28575, 6) * bs[6] * C28800) /
                             C28447) /
                                C28430 -
                            (ae * C28673) / C28578)));
    const double C26728 = C26724 * C29588;
    const double C13784 = C13780 + C13781;
    const double C26674 = C16993 + C16992;
    const double C18773 = C15512 + C15513;
    const double C18772 = C15513 + C15512;
    const double C9129 = C2305 + C2297;
    const double C9128 = C2297 + C2305;
    const double C26862 = C7904 + C7910;
    const double C5287 = C2019 + C2015;
    const double C5286 = C2015 + C2019;
    const double C14139 = C4143 + C4149;
    const double C17555 = C17553 * C1524;
    const double C16990 = C16984 * C29511;
    const double C4779 = C29683 * C697;
    const double C11637 = C29683 * C697;
    const double C3713 = C29683 * C701;
    const double C10673 = C29683 * C701;
    const double C14627 = C29499 * C701;
    const double C8911 = C29683 * C1138;
    const double C21575 = C29683 * C1138;
    const double C7691 = C29683 * C1142;
    const double C20443 = C29683 * C1142;
    const double C27589 = C29499 * C1142;
    const double C6083 = C29683 * C2677;
    const double C12897 = C29683 * C2677;
    const double C17623 = C29499 * C2677;
    const double C1699 = C29588 * C797;
    const double C3283 = C29688 * C797;
    const double C10259 = C29688 * C797;
    const double C4927 = C29688 * C801;
    const double C11785 = C29688 * C801;
    const double C2241 = C29588 * C1241;
    const double C7825 = C29588 * C1245;
    const double C5559 = C29688 * C2789;
    const double C8397 = C29588 * C2789;
    const double C12403 = C29688 * C2789;
    const double C4851 = C29683 * C747;
    const double C11709 = C29683 * C747;
    const double C3777 = C29683 * C751;
    const double C10733 = C29683 * C751;
    const double C14685 = C29499 * C751;
    const double C8985 = C29683 * C1191;
    const double C21649 = C29683 * C1191;
    const double C7759 = C29683 * C1195;
    const double C20507 = C29683 * C1195;
    const double C27644 = C29499 * C1195;
    const double C6157 = C29683 * C2733;
    const double C12967 = C29683 * C2733;
    const double C17693 = C29499 * C2733;
    const double C1889 = C29603 * C935;
    const double C4003 = C29603 * C939;
    const double C2431 = C29603 * C1379;
    const double C6967 = C29690 * C1379;
    const double C19731 = C29690 * C1379;
    const double C9273 = C29690 * C1383;
    const double C21923 = C29690 * C1383;
    const double C5777 = C29603 * C2951;
    const double C8617 = C29690 * C2951;
    const double C21281 = C29690 * C2951;
    const double C26679 = C26674 * C29588;
    const double C14143 = C14139 * C29499;
    const double C4781 = C4778 + C4779;
    const double C11639 = C11636 + C11637;
    const double C3717 = C3712 + C3713;
    const double C10677 = C10672 + C10673;
    const double C14629 = C14626 + C14627;
    const double C8914 = C8910 + C8911;
    const double C21578 = C21574 + C21575;
    const double C7696 = C7690 + C7691;
    const double C20448 = C20442 + C20443;
    const double C27591 = C27588 + C27589;
    const double C6085 = C6082 + C6083;
    const double C12899 = C12896 + C12897;
    const double C17624 = C17622 + C17623;
    const double C1703 = C1698 + C1699;
    const double C3291 = C3282 + C3283;
    const double C10267 = C10258 + C10259;
    const double C4931 = C4926 + C4927;
    const double C11789 = C11784 + C11785;
    const double C2245 = C2240 + C2241;
    const double C7834 = C7824 + C7825;
    const double C5563 = C5558 + C5559;
    const double C8399 = C8396 + C8397;
    const double C12407 = C12402 + C12403;
    const double C4853 = C4850 + C4851;
    const double C11711 = C11708 + C11709;
    const double C3782 = C3776 + C3777;
    const double C10738 = C10732 + C10733;
    const double C14687 = C14684 + C14685;
    const double C8987 = C8984 + C8985;
    const double C21651 = C21648 + C21649;
    const double C7763 = C7758 + C7759;
    const double C20511 = C20506 + C20507;
    const double C27645 = C27643 + C27644;
    const double C6160 = C6156 + C6157;
    const double C12970 = C12966 + C12967;
    const double C17694 = C17692 + C17693;
    const double C1893 = C1888 + C1889;
    const double C4012 = C4002 + C4003;
    const double C2435 = C2430 + C2431;
    const double C6975 = C6966 + C6967;
    const double C19739 = C19730 + C19731;
    const double C9277 = C9272 + C9273;
    const double C21927 = C21922 + C21923;
    const double C5779 = C5776 + C5777;
    const double C8621 = C8616 + C8617;
    const double C21285 = C21280 + C21281;
    const double C27592 = C27591 * C29532;
    const double C18234 = C17624 * C29532;
    const double C9061 = C2245 * C1524;
    const double C7840 = C7834 * C29511;
    const double C27699 = C7834 * C1524;
    const double C9691 = C8399 * C29511;
    const double C14689 = C14687 * C29543;
    const double C17695 = C17694 * C29543;
    const double C5149 = C1893 * C1524;
    const double C4018 = C4012 * C29511;
    const double C14893 = C4012 * C1524;
    const double C6438 = C5779 * C29511;
    d2eexx[0] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  (((C87 * C93 + C77 * C98 + C88 * C94 + C78 * C99 + C89 * C95 +
                     C79 * C100) *
                        C1527 +
                    (C87 * C101 + C77 * C108 + C88 * C102 + C78 * C109 +
                     C89 * C103 + C79 * C110) *
                        C1523 -
                    (C89 * C96 + C79 * C104 + C88 * C95 + C78 * C100 +
                     C87 * C94 + C77 * C99) *
                        C1528 -
                    (C89 * C105 + C79 * C111 + C88 * C103 + C78 * C110 +
                     C87 * C102 + C77 * C109) *
                        C1524) *
                       C29588 * C29603 * C29543 * C1525 +
                   ((C87 * C627 + C77 * C636 + C88 * C626 + C78 * C635 +
                     C89 * C1529 + C79 * C1530) *
                        C1528 -
                    ((C89 * C632 + C79 * C644 + C88 * C633 + C78 * C645 +
                      C87 * C634 + C77 * C646) *
                         C1523 +
                     (C89 * C626 + C79 * C635 + C88 * C627 + C78 * C636 +
                      C87 * C628 + C77 * C637) *
                         C1527) +
                    (C87 * C633 + C77 * C645 + C88 * C632 + C78 * C644 +
                     C89 * C1531 + C79 * C1532) *
                        C1524) *
                       C29588 * C29603 * C29543 * C1526)) /
                 (p * q * std::sqrt(p + q));
    d2eexy[0] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  (((C87 * C93 + C77 * C98 + C88 * C94 + C78 * C99 + C89 * C95 +
                     C79 * C100) *
                        C1583 +
                    (C87 * C152 + C77 * C157 + C88 * C153 + C78 * C158 +
                     C89 * C154 + C79 * C159) *
                        C1525 -
                    (C89 * C626 + C79 * C635 + C88 * C627 + C78 * C636 +
                     C87 * C628 + C77 * C637) *
                        C1584 -
                    (C89 * C691 + C79 * C697 + C88 * C692 + C78 * C698 +
                     C87 * C693 + C77 * C699) *
                        C1526) *
                       C29588 * C29603 * C1523 +
                   ((C87 * C627 + C77 * C636 + C88 * C626 + C78 * C635 +
                     C89 * C1529 + C79 * C1530) *
                        C1584 -
                    ((C89 * C155 + C79 * C160 + C88 * C154 + C78 * C159 +
                      C87 * C153 + C77 * C158) *
                         C1525 +
                     (C89 * C96 + C79 * C104 + C88 * C95 + C78 * C100 +
                      C87 * C94 + C77 * C99) *
                         C1583) +
                    (C87 * C692 + C77 * C698 + C88 * C691 + C78 * C697 +
                     C89 * C1585 + C79 * C1586) *
                        C1526) *
                       C29588 * C29603 * C1524) *
                  C29543) /
                 (p * q * std::sqrt(p + q));
    d2eexz[0] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((C87 * C93 + C77 * C98 + C88 * C94 + C78 * C99 +
                      C89 * C95 + C79 * C100) *
                         C200 +
                     (C87 * C201 + C77 * C206 + C88 * C202 + C78 * C207 +
                      C89 * C203 + C79 * C208) *
                         C29543) *
                        C29588 * C29603 * C1525 -
                    ((C89 * C741 + C79 * C747 + C88 * C742 + C78 * C748 +
                      C87 * C743 + C77 * C749) *
                         C29543 +
                     (C89 * C626 + C79 * C635 + C88 * C627 + C78 * C636 +
                      C87 * C628 + C77 * C637) *
                         C200) *
                        C29588 * C29603 * C1526) *
                       C1523 +
                   (((C87 * C627 + C77 * C636 + C88 * C626 + C78 * C635 +
                      C89 * C1529 + C79 * C1530) *
                         C200 +
                     (C87 * C742 + C77 * C748 + C88 * C741 + C78 * C747 +
                      C89 * C1637 + C79 * C1638) *
                         C29543) *
                        C29588 * C29603 * C1526 -
                    ((C89 * C204 + C79 * C209 + C88 * C203 + C78 * C208 +
                      C87 * C202 + C77 * C207) *
                         C29543 +
                     (C89 * C96 + C79 * C104 + C88 * C95 + C78 * C100 +
                      C87 * C94 + C77 * C99) *
                         C200) *
                        C29588 * C29603 * C1525) *
                       C1524)) /
                 (p * q * std::sqrt(p + q));
    d2eeyx[0] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C249 * C93 + C29588 * C250) * C1527 +
            (C249 * C101 + C29588 * C255) * C1523 - C273 * C1528 -
            C274 * C1524) *
               C29603 * C77 +
           (C273 * C1527 + C274 * C1523 - C275 * C1528 - C276 * C1524) *
               C29603 * C78 +
           (C275 * C1527 + C276 * C1523 - C277 * C1528 - C278 * C1524) *
               C29603 * C79) *
              C29543 * C1525 +
          ((C1700 * C1528 -
            ((C249 * C634 + C29588 * C799) * C1523 +
             (C249 * C628 + C29588 * C793) * C1527) +
            C1701 * C1524) *
               C29603 * C77 +
           (C1702 * C1528 - (C1701 * C1523 + C1700 * C1527) + C1703 * C1524) *
               C29603 * C78 +
           ((C249 * C1529 + C29588 * C1689) * C1528 -
            (C1703 * C1523 + C1702 * C1527) +
            (C249 * C1531 + C29588 * C1690) * C1524) *
               C29603 * C79) *
              C29543 * C1526)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[0] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((C249 * C93 + C29588 * C250) * C1583 +
                     (C249 * C152 + C29588 * C316) * C1525 -
                     (C249 * C628 + C29588 * C793) * C1584 -
                     (C249 * C693 + C29588 * C841) * C1526) *
                        C29603 * C77 +
                    (C1755 + C1756 - C1757 - C1767) * C29603 * C78 +
                    (C1760 + C1761 - C1762 - C1768) * C29603 * C79) *
                       C1523 +
                   ((C1757 - (C1756 + C1755) + C1767) * C29603 * C77 +
                    (C1762 - (C1761 + C1760) + C1768) * C29603 * C78 +
                    ((C249 * C1529 + C29588 * C1689) * C1584 -
                     (C333 * C1525 + C277 * C1583) +
                     (C249 * C1585 + C29588 * C1753) * C1526) *
                        C29603 * C79) *
                       C1524) *
                  C29543) /
                 (p * q * std::sqrt(p + q));
    d2eeyz[0] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C249 * C93 + C29588 * C250) * C200 +
             (C249 * C201 + C29588 * C376) * C29543) *
                C29603 * C77 +
            (C382 + C394) * C29603 * C78 + C398 * C79) *
               C1525 -
           ((C1828 + C1822) * C29603 * C79 + (C1829 + C1825) * C29603 * C78 +
            ((C249 * C743 + C29588 * C887) * C29543 +
             (C249 * C628 + C29588 * C793) * C200) *
                C29603 * C77) *
               C1526) *
              C1523 +
          (((C1825 + C1829) * C29603 * C77 + (C1822 + C1828) * C29603 * C78 +
            ((C249 * C1529 + C29588 * C1689) * C200 +
             (C249 * C1637 + C29588 * C1818) * C29543) *
                C29603 * C79) *
               C1526 -
           ((C396 + C390) * C29603 * C79 + (C395 + C385) * C29603 * C78 +
            (C394 + C382) * C29603 * C77) *
               C1525) *
              C1524)) /
        (p * q * std::sqrt(p + q));
    d2eezx[0] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C436 * C93 + C29603 * C437) * C1527 +
            (C436 * C101 + C29603 * C442) * C1523 - C460 * C1528 -
            C461 * C1524) *
               C77 +
           (C460 * C1527 + C461 * C1523 - C462 * C1528 - C463 * C1524) * C78 +
           (C462 * C1527 + C463 * C1523 - C464 * C1528 - C465 * C1524) * C79) *
              C29588 * C29543 * C1525 +
          ((C1890 * C1528 -
            ((C436 * C634 + C29603 * C937) * C1523 +
             (C436 * C628 + C29603 * C931) * C1527) +
            C1891 * C1524) *
               C77 +
           (C1892 * C1528 - (C1891 * C1523 + C1890 * C1527) + C1893 * C1524) *
               C78 +
           ((C436 * C1529 + C29603 * C1879) * C1528 -
            (C1893 * C1523 + C1892 * C1527) +
            (C436 * C1531 + C29603 * C1880) * C1524) *
               C79) *
              C29588 * C29543 * C1526)) /
        (p * q * std::sqrt(p + q));
    d2eezy[0] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((C436 * C93 + C29603 * C437) * C1583 +
                     (C436 * C152 + C29603 * C503) * C1525 -
                     (C436 * C628 + C29603 * C931) * C1584 -
                     (C436 * C693 + C29603 * C979) * C1526) *
                        C77 +
                    (C1945 + C1946 - C1947 - C1957) * C78 +
                    (C1950 + C1951 - C1952 - C1958) * C79) *
                       C29588 * C1523 +
                   ((C1947 - (C1946 + C1945) + C1957) * C77 +
                    (C1952 - (C1951 + C1950) + C1958) * C78 +
                    ((C436 * C1529 + C29603 * C1879) * C1584 -
                     (C520 * C1525 + C464 * C1583) +
                     (C436 * C1585 + C29603 * C1943) * C1526) *
                        C79) *
                       C29588 * C1524) *
                  C29543) /
                 (p * q * std::sqrt(p + q));
    d2eezz[0] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C436 * C93 + C29603 * C437) * C200 +
             (C436 * C201 + C29603 * C562) * C29543) *
                C77 +
            (C568 + C580) * C78 + C583 * C79) *
               C29588 * C1525 -
           ((C2018 + C2012) * C79 + (C2019 + C2015) * C78 +
            ((C436 * C743 + C29603 * C1025) * C29543 +
             (C436 * C628 + C29603 * C931) * C200) *
                C77) *
               C29588 * C1526) *
              C1523 +
          (((C2015 + C2019) * C77 + (C2012 + C2018) * C78 +
            ((C436 * C1529 + C29603 * C1879) * C200 +
             (C436 * C1637 + C29603 * C2008) * C29543) *
                C79) *
               C29588 * C1526 -
           ((C582 + C576) * C79 + (C581 + C571) * C78 + (C580 + C568) * C77) *
               C29588 * C1525) *
              C1524)) /
        (p * q * std::sqrt(p + q));
    d2eexx[1] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((C87 * C93 + C77 * C98 + C88 * C94 + C78 * C99 +
                      C89 * C95 + C79 * C100) *
                         C625 +
                     (C87 * C101 + C77 * C108 + C88 * C102 + C78 * C109 +
                      C89 * C103 + C79 * C110) *
                         C29511) *
                        C29588 * C29603 * C2069 -
                    ((C89 * C1076 + C79 * C1088 + C88 * C1077 + C78 * C1089 +
                      C87 * C1078 + C77 * C1090) *
                         C29511 +
                     (C89 * C1070 + C79 * C1079 + C88 * C1071 + C78 * C1080 +
                      C87 * C1072 + C77 * C1081) *
                         C625) *
                        C29588 * C29603 * C2070) *
                       C1525 +
                   (((C87 * C2611 + C77 * C2614 + C88 * C2612 + C78 * C2615 +
                      C89 * C2613 + C79 * C2616) *
                         C625 +
                     (C87 * C2617 + C77 * C2620 + C88 * C2618 + C78 * C2621 +
                      C89 * C2619 + C79 * C2622) *
                         C29511) *
                        C29588 * C29603 * C2070 -
                    ((C89 * C632 + C79 * C644 + C88 * C633 + C78 * C645 +
                      C87 * C634 + C77 * C646) *
                         C29511 +
                     (C89 * C626 + C79 * C635 + C88 * C627 + C78 * C636 +
                      C87 * C628 + C77 * C637) *
                         C625) *
                        C29588 * C29603 * C2069) *
                       C1526)) /
                 (p * q * std::sqrt(p + q));
    d2eexy[1] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  (((C87 * C93 + C77 * C98 + C88 * C94 + C78 * C99 + C89 * C95 +
                     C79 * C100) *
                        C1583 +
                    (C87 * C152 + C77 * C157 + C88 * C153 + C78 * C158 +
                     C89 * C154 + C79 * C159) *
                        C1525 -
                    (C89 * C626 + C79 * C635 + C88 * C627 + C78 * C636 +
                     C87 * C628 + C77 * C637) *
                        C1584 -
                    (C89 * C691 + C79 * C697 + C88 * C692 + C78 * C698 +
                     C87 * C693 + C77 * C699) *
                        C1526) *
                       C29588 * C29603 * C29511 * C2069 +
                   ((C87 * C2611 + C77 * C2614 + C88 * C2612 + C78 * C2615 +
                     C89 * C2613 + C79 * C2616) *
                        C1584 -
                    ((C89 * C1132 + C79 * C1138 + C88 * C1133 + C78 * C1139 +
                      C87 * C1134 + C77 * C1140) *
                         C1525 +
                     (C89 * C1070 + C79 * C1079 + C88 * C1071 + C78 * C1080 +
                      C87 * C1072 + C77 * C1081) *
                         C1583) +
                    (C87 * C2673 + C77 * C2676 + C88 * C2674 + C78 * C2677 +
                     C89 * C2675 + C79 * C2678) *
                        C1526) *
                       C29588 * C29603 * C29511 * C2070)) /
                 (p * q * std::sqrt(p + q));
    d2eexz[1] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  (((C87 * C93 + C77 * C98 + C88 * C94 + C78 * C99 + C89 * C95 +
                     C79 * C100) *
                        C2177 +
                    (C87 * C201 + C77 * C206 + C88 * C202 + C78 * C207 +
                     C89 * C203 + C79 * C208) *
                        C2069 -
                    (C89 * C1070 + C79 * C1079 + C88 * C1071 + C78 * C1080 +
                     C87 * C1072 + C77 * C1081) *
                        C2178 -
                    (C89 * C1185 + C79 * C1191 + C88 * C1186 + C78 * C1192 +
                     C87 * C1187 + C77 * C1193) *
                        C2070) *
                       C29588 * C29603 * C1525 +
                   ((C87 * C2611 + C77 * C2614 + C88 * C2612 + C78 * C2615 +
                     C89 * C2613 + C79 * C2616) *
                        C2178 -
                    ((C89 * C741 + C79 * C747 + C88 * C742 + C78 * C748 +
                      C87 * C743 + C77 * C749) *
                         C2069 +
                     (C89 * C626 + C79 * C635 + C88 * C627 + C78 * C636 +
                      C87 * C628 + C77 * C637) *
                         C2177) +
                    (C87 * C2729 + C77 * C2732 + C88 * C2730 + C78 * C2733 +
                     C89 * C2731 + C79 * C2734) *
                        C2070) *
                       C29588 * C29603 * C1526) *
                  C29511) /
                 (p * q * std::sqrt(p + q));
    d2eeyx[1] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  (((((C249 * C93 + C29588 * C250) * C625 +
                      (C249 * C101 + C29588 * C255) * C29511) *
                         C29603 * C77 +
                     (C273 * C625 + C274 * C29511) * C29603 * C78 +
                     (C275 * C625 + C276 * C29511) * C29603 * C79) *
                        C2069 -
                    ((C2245 * C29511 + C2244 * C625) * C29603 * C79 +
                     (C2243 * C29511 + C2242 * C625) * C29603 * C78 +
                     ((C249 * C1078 + C29588 * C1243) * C29511 +
                      (C249 * C1072 + C29588 * C1237) * C625) *
                         C29603 * C77) *
                        C2070) *
                       C1525 +
                   ((((C249 * C2611 + C29588 * C2785) * C625 +
                      (C249 * C2617 + C29588 * C2788) * C29511) *
                         C29603 * C77 +
                     ((C249 * C2612 + C29588 * C2786) * C625 +
                      (C249 * C2618 + C29588 * C2789) * C29511) *
                         C29603 * C78 +
                     ((C249 * C2613 + C29588 * C2787) * C625 +
                      (C249 * C2619 + C29588 * C2790) * C29511) *
                         C29603 * C79) *
                        C2070 -
                    ((C1703 * C29511 + C1702 * C625) * C29603 * C79 +
                     (C1701 * C29511 + C1700 * C625) * C29603 * C78 +
                     ((C249 * C634 + C29588 * C799) * C29511 +
                      (C249 * C628 + C29588 * C793) * C625) *
                         C29603 * C77) *
                        C2069) *
                       C1526)) /
                 (p * q * std::sqrt(p + q));
    d2eeyy[1] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((C249 * C93 + C29588 * C250) * C1583 +
                     (C249 * C152 + C29588 * C316) * C1525 -
                     (C249 * C628 + C29588 * C793) * C1584 -
                     (C249 * C693 + C29588 * C841) * C1526) *
                        C29603 * C77 +
                    (C1755 + C1756 - C1757 - C1767) * C29603 * C78 +
                    (C1760 + C1761 - C1762 - C1768) * C29603 * C79) *
                       C29511 * C2069 +
                   (((C249 * C2611 + C29588 * C2785) * C1584 -
                     ((C249 * C1134 + C29588 * C1287) * C1525 +
                      (C249 * C1072 + C29588 * C1237) * C1583) +
                     (C249 * C2673 + C29588 * C2841) * C1526) *
                        C29603 * C77 +
                    ((C249 * C2612 + C29588 * C2786) * C1584 -
                     (C2303 * C1525 + C2242 * C1583) +
                     (C249 * C2674 + C29588 * C2842) * C1526) *
                        C29603 * C78 +
                    ((C249 * C2613 + C29588 * C2787) * C1584 -
                     (C2304 * C1525 + C2244 * C1583) +
                     (C249 * C2675 + C29588 * C2843) * C1526) *
                        C29603 * C79) *
                       C29511 * C2070)) /
                 (p * q * std::sqrt(p + q));
    d2eeyz[1] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((C249 * C93 + C29588 * C250) * C2177 +
                     (C249 * C201 + C29588 * C376) * C2069 -
                     (C249 * C1072 + C29588 * C1237) * C2178 -
                     (C249 * C1187 + C29588 * C1329) * C2070) *
                        C29603 * C77 +
                    (C2358 + C2359 - C2360 - C2370) * C29603 * C78 +
                    (C2363 + C2364 - C2365 - C2371) * C29603 * C79) *
                       C1525 +
                   (((C249 * C2611 + C29588 * C2785) * C2178 -
                     ((C249 * C743 + C29588 * C887) * C2069 +
                      (C249 * C628 + C29588 * C793) * C2177) +
                     (C249 * C2729 + C29588 * C2894) * C2070) *
                        C29603 * C77 +
                    ((C249 * C2612 + C29588 * C2786) * C2178 -
                     (C1827 * C2069 + C1700 * C2177) +
                     (C249 * C2730 + C29588 * C2895) * C2070) *
                        C29603 * C78 +
                    ((C249 * C2613 + C29588 * C2787) * C2178 -
                     (C1826 * C2069 + C1702 * C2177) +
                     (C249 * C2731 + C29588 * C2896) * C2070) *
                        C29603 * C79) *
                       C1526) *
                  C29511) /
                 (p * q * std::sqrt(p + q));
    d2eezx[1] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  (((((C436 * C93 + C29603 * C437) * C625 +
                      (C436 * C101 + C29603 * C442) * C29511) *
                         C77 +
                     (C460 * C625 + C461 * C29511) * C78 +
                     (C462 * C625 + C463 * C29511) * C79) *
                        C29588 * C2069 -
                    ((C2435 * C29511 + C2434 * C625) * C79 +
                     (C2433 * C29511 + C2432 * C625) * C78 +
                     ((C436 * C1078 + C29603 * C1381) * C29511 +
                      (C436 * C1072 + C29603 * C1375) * C625) *
                         C77) *
                        C29588 * C2070) *
                       C1525 +
                   ((((C436 * C2611 + C29603 * C2947) * C625 +
                      (C436 * C2617 + C29603 * C2950) * C29511) *
                         C77 +
                     ((C436 * C2612 + C29603 * C2948) * C625 +
                      (C436 * C2618 + C29603 * C2951) * C29511) *
                         C78 +
                     ((C436 * C2613 + C29603 * C2949) * C625 +
                      (C436 * C2619 + C29603 * C2952) * C29511) *
                         C79) *
                        C29588 * C2070 -
                    ((C1893 * C29511 + C1892 * C625) * C79 +
                     (C1891 * C29511 + C1890 * C625) * C78 +
                     ((C436 * C634 + C29603 * C937) * C29511 +
                      (C436 * C628 + C29603 * C931) * C625) *
                         C77) *
                        C29588 * C2069) *
                       C1526)) /
                 (p * q * std::sqrt(p + q));
    d2eezy[1] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((C436 * C93 + C29603 * C437) * C1583 +
                     (C436 * C152 + C29603 * C503) * C1525 -
                     (C436 * C628 + C29603 * C931) * C1584 -
                     (C436 * C693 + C29603 * C979) * C1526) *
                        C77 +
                    (C1945 + C1946 - C1947 - C1957) * C78 +
                    (C1950 + C1951 - C1952 - C1958) * C79) *
                       C29588 * C29511 * C2069 +
                   (((C436 * C2611 + C29603 * C2947) * C1584 -
                     ((C436 * C1134 + C29603 * C1425) * C1525 +
                      (C436 * C1072 + C29603 * C1375) * C1583) +
                     (C436 * C2673 + C29603 * C3003) * C1526) *
                        C77 +
                    ((C436 * C2612 + C29603 * C2948) * C1584 -
                     (C2493 * C1525 + C2432 * C1583) +
                     (C436 * C2674 + C29603 * C3004) * C1526) *
                        C78 +
                    ((C436 * C2613 + C29603 * C2949) * C1584 -
                     (C2494 * C1525 + C2434 * C1583) +
                     (C436 * C2675 + C29603 * C3005) * C1526) *
                        C79) *
                       C29588 * C29511 * C2070)) /
                 (p * q * std::sqrt(p + q));
    d2eezz[1] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((C436 * C93 + C29603 * C437) * C2177 +
                     (C436 * C201 + C29603 * C562) * C2069 -
                     (C436 * C1072 + C29603 * C1375) * C2178 -
                     (C436 * C1187 + C29603 * C1467) * C2070) *
                        C77 +
                    (C2548 + C2549 - C2550 - C2560) * C78 +
                    (C2553 + C2554 - C2555 - C2561) * C79) *
                       C29588 * C1525 +
                   (((C436 * C2611 + C29603 * C2947) * C2178 -
                     ((C436 * C743 + C29603 * C1025) * C2069 +
                      (C436 * C628 + C29603 * C931) * C2177) +
                     (C436 * C2729 + C29603 * C3056) * C2070) *
                        C77 +
                    ((C436 * C2612 + C29603 * C2948) * C2178 -
                     (C2017 * C2069 + C1890 * C2177) +
                     (C436 * C2730 + C29603 * C3057) * C2070) *
                        C78 +
                    ((C436 * C2613 + C29603 * C2949) * C2178 -
                     (C2016 * C2069 + C1892 * C2177) +
                     (C436 * C2731 + C29603 * C3058) * C2070) *
                        C79) *
                       C29588 * C1526) *
                  C29511) /
                 (p * q * std::sqrt(p + q));
    d2eexx[2] +=
        (-std::pow(Pi, 2.5) * (((C87 * C93 + C77 * C98 + C88 * C94 + C78 * C99 +
                                 C89 * C95 + C79 * C100) *
                                    C625 +
                                (C87 * C101 + C77 * C108 + C88 * C102 +
                                 C78 * C109 + C89 * C103 + C79 * C110) *
                                    C29511) *
                                   C29588 * C29603 * C29543 * C622 -
                               ((C89 * C632 + C79 * C644 + C88 * C633 +
                                 C78 * C645 + C87 * C634 + C77 * C646) *
                                    C29511 +
                                (C89 * C626 + C79 * C635 + C88 * C627 +
                                 C78 * C636 + C87 * C628 + C77 * C637) *
                                    C625) *
                                   C29588 * C29603 * C29543 * C623 +
                               ((C87 * C629 + C77 * C638 + C88 * C630 +
                                 C78 * C639 + C89 * C631 + C79 * C640) *
                                    C625 +
                                (C87 * C641 + C77 * C647 + C88 * C642 +
                                 C78 * C648 + C89 * C643 + C79 * C649) *
                                    C29511) *
                                   C29588 * C29603 * C29543 * C624)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((C87 * C93 + C77 * C98 + C88 * C94 + C78 * C99 + C89 * C95 +
           C79 * C100) *
              C90 +
          (C87 * C101 + C77 * C108 + C88 * C102 + C78 * C109 + C89 * C103 +
           C79 * C110) *
              C80 -
          (C89 * C96 + C79 * C104 + C88 * C95 + C78 * C100 + C87 * C94 +
           C77 * C99) *
              C91 -
          (C89 * C105 + C79 * C111 + C88 * C103 + C78 * C110 + C87 * C102 +
           C77 * C109) *
              C81 +
          (C87 * C95 + C77 * C100 + C88 * C96 + C78 * C104 + C89 * C97 +
           C79 * C106) *
              C92 +
          (C87 * C103 + C77 * C110 + C88 * C105 + C78 * C111 + C89 * C107 +
           C79 * C112) *
              C82) *
         C29588 * C29603 * C29543 * C29532) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C87 * C93 + C77 * C98 + C88 * C94 + C78 * C99 + C89 * C95 +
            C79 * C100) *
               C625 +
           (C87 * C101 + C77 * C108 + C88 * C102 + C78 * C109 + C89 * C103 +
            C79 * C110) *
               C29511) *
              C29588 * C29603 * C1067 -
          ((C89 * C1076 + C79 * C1088 + C88 * C1077 + C78 * C1089 +
            C87 * C1078 + C77 * C1090) *
               C29511 +
           (C89 * C1070 + C79 * C1079 + C88 * C1071 + C78 * C1080 +
            C87 * C1072 + C77 * C1081) *
               C625) *
              C29588 * C29603 * C1068 +
          ((C87 * C1073 + C77 * C1082 + C88 * C1074 + C78 * C1083 +
            C89 * C1075 + C79 * C1084) *
               C625 +
           (C87 * C1085 + C77 * C1091 + C88 * C1086 + C78 * C1092 +
            C89 * C1087 + C79 * C1093) *
               C29511) *
              C29588 * C29603 * C1069) *
         C29532) /
            (p * q * std::sqrt(p + q));
    d2eexy[2] += (-std::pow(Pi, 2.5) *
                  ((C87 * C93 + C77 * C98 + C88 * C94 + C78 * C99 + C89 * C95 +
                    C79 * C100) *
                       C688 +
                   (C87 * C152 + C77 * C157 + C88 * C153 + C78 * C158 +
                    C89 * C154 + C79 * C159) *
                       C622 -
                   (C89 * C626 + C79 * C635 + C88 * C627 + C78 * C636 +
                    C87 * C628 + C77 * C637) *
                       C689 -
                   (C89 * C691 + C79 * C697 + C88 * C692 + C78 * C698 +
                    C87 * C693 + C77 * C699) *
                       C623 +
                   (C87 * C629 + C77 * C638 + C88 * C630 + C78 * C639 +
                    C89 * C631 + C79 * C640) *
                       C690 +
                   (C87 * C694 + C77 * C700 + C88 * C695 + C78 * C701 +
                    C89 * C696 + C79 * C702) *
                       C624) *
                  C29588 * C29603 * C29511 * C29543) /
                     (p * q * std::sqrt(p + q)) -
                 (std::pow(Pi, 2.5) *
                  (((C87 * C93 + C77 * C98 + C88 * C94 + C78 * C99 + C89 * C95 +
                     C79 * C100) *
                        C151 +
                    (C87 * C152 + C77 * C157 + C88 * C153 + C78 * C158 +
                     C89 * C154 + C79 * C159) *
                        C29532) *
                       C29588 * C29603 * C80 -
                   ((C89 * C155 + C79 * C160 + C88 * C154 + C78 * C159 +
                     C87 * C153 + C77 * C158) *
                        C29532 +
                    (C89 * C96 + C79 * C104 + C88 * C95 + C78 * C100 +
                     C87 * C94 + C77 * C99) *
                        C151) *
                       C29588 * C29603 * C81 +
                   ((C87 * C95 + C77 * C100 + C88 * C96 + C78 * C104 +
                     C89 * C97 + C79 * C106) *
                        C151 +
                    (C87 * C154 + C77 * C159 + C88 * C155 + C78 * C160 +
                     C89 * C156 + C79 * C161) *
                        C29532) *
                       C29588 * C29603 * C82) *
                  C29543) /
                     (p * q * std::sqrt(p + q)) +
                 (2 * std::pow(Pi, 2.5) *
                  (((C87 * C93 + C77 * C98 + C88 * C94 + C78 * C99 + C89 * C95 +
                     C79 * C100) *
                        C151 +
                    (C87 * C152 + C77 * C157 + C88 * C153 + C78 * C158 +
                     C89 * C154 + C79 * C159) *
                        C29532) *
                       C29588 * C29603 * C29511 * C1067 -
                   ((C89 * C1132 + C79 * C1138 + C88 * C1133 + C78 * C1139 +
                     C87 * C1134 + C77 * C1140) *
                        C29532 +
                    (C89 * C1070 + C79 * C1079 + C88 * C1071 + C78 * C1080 +
                     C87 * C1072 + C77 * C1081) *
                        C151) *
                       C29588 * C29603 * C29511 * C1068 +
                   ((C87 * C1073 + C77 * C1082 + C88 * C1074 + C78 * C1083 +
                     C89 * C1075 + C79 * C1084) *
                        C151 +
                    (C87 * C1135 + C77 * C1141 + C88 * C1136 + C78 * C1142 +
                     C89 * C1137 + C79 * C1143) *
                        C29532) *
                       C29588 * C29603 * C29511 * C1069)) /
                     (p * q * std::sqrt(p + q));
    d2eexz[2] += (-std::pow(Pi, 2.5) *
                  (((C87 * C93 + C77 * C98 + C88 * C94 + C78 * C99 + C89 * C95 +
                     C79 * C100) *
                        C200 +
                    (C87 * C201 + C77 * C206 + C88 * C202 + C78 * C207 +
                     C89 * C203 + C79 * C208) *
                        C29543) *
                       C29588 * C29603 * C622 -
                   ((C89 * C741 + C79 * C747 + C88 * C742 + C78 * C748 +
                     C87 * C743 + C77 * C749) *
                        C29543 +
                    (C89 * C626 + C79 * C635 + C88 * C627 + C78 * C636 +
                     C87 * C628 + C77 * C637) *
                        C200) *
                       C29588 * C29603 * C623 +
                   ((C87 * C629 + C77 * C638 + C88 * C630 + C78 * C639 +
                     C89 * C631 + C79 * C640) *
                        C200 +
                    (C87 * C744 + C77 * C750 + C88 * C745 + C78 * C751 +
                     C89 * C746 + C79 * C752) *
                        C29543) *
                       C29588 * C29603 * C624) *
                  C29511) /
                     (p * q * std::sqrt(p + q)) -
                 (std::pow(Pi, 2.5) * (((C87 * C93 + C77 * C98 + C88 * C94 +
                                         C78 * C99 + C89 * C95 + C79 * C100) *
                                            C200 +
                                        (C87 * C201 + C77 * C206 + C88 * C202 +
                                         C78 * C207 + C89 * C203 + C79 * C208) *
                                            C29543) *
                                           C29588 * C29603 * C29532 * C80 -
                                       ((C89 * C204 + C79 * C209 + C88 * C203 +
                                         C78 * C208 + C87 * C202 + C77 * C207) *
                                            C29543 +
                                        (C89 * C96 + C79 * C104 + C88 * C95 +
                                         C78 * C100 + C87 * C94 + C77 * C99) *
                                            C200) *
                                           C29588 * C29603 * C29532 * C81 +
                                       ((C87 * C95 + C77 * C100 + C88 * C96 +
                                         C78 * C104 + C89 * C97 + C79 * C106) *
                                            C200 +
                                        (C87 * C203 + C77 * C208 + C88 * C204 +
                                         C78 * C209 + C89 * C205 + C79 * C210) *
                                            C29543) *
                                           C29588 * C29603 * C29532 * C82)) /
                     (p * q * std::sqrt(p + q)) +
                 (2 * std::pow(Pi, 2.5) *
                  ((C87 * C93 + C77 * C98 + C88 * C94 + C78 * C99 + C89 * C95 +
                    C79 * C100) *
                       C1182 +
                   (C87 * C201 + C77 * C206 + C88 * C202 + C78 * C207 +
                    C89 * C203 + C79 * C208) *
                       C1067 -
                   (C89 * C1070 + C79 * C1079 + C88 * C1071 + C78 * C1080 +
                    C87 * C1072 + C77 * C1081) *
                       C1183 -
                   (C89 * C1185 + C79 * C1191 + C88 * C1186 + C78 * C1192 +
                    C87 * C1187 + C77 * C1193) *
                       C1068 +
                   (C87 * C1073 + C77 * C1082 + C88 * C1074 + C78 * C1083 +
                    C89 * C1075 + C79 * C1084) *
                       C1184 +
                   (C87 * C1188 + C77 * C1194 + C88 * C1189 + C78 * C1195 +
                    C89 * C1190 + C79 * C1196) *
                       C1069) *
                  C29588 * C29603 * C29532 * C29511) /
                     (p * q * std::sqrt(p + q));
    d2eeyx[2] +=
        (-std::pow(Pi, 2.5) * ((((C249 * C93 + C29588 * C250) * C625 +
                                 (C249 * C101 + C29588 * C255) * C29511) *
                                    C29603 * C77 +
                                (C273 * C625 + C274 * C29511) * C29603 * C78 +
                                (C275 * C625 + C276 * C29511) * C29603 * C79) *
                                   C29543 * C622 -
                               (((C249 * C632 + C29588 * C797) * C29511 +
                                 (C249 * C626 + C29588 * C791) * C625) *
                                    C29603 * C79 +
                                ((C249 * C633 + C29588 * C798) * C29511 +
                                 (C249 * C627 + C29588 * C792) * C625) *
                                    C29603 * C78 +
                                ((C249 * C634 + C29588 * C799) * C29511 +
                                 (C249 * C628 + C29588 * C793) * C625) *
                                    C29603 * C77) *
                                   C29543 * C623 +
                               (((C249 * C629 + C29588 * C794) * C625 +
                                 (C249 * C641 + C29588 * C800) * C29511) *
                                    C29603 * C77 +
                                ((C249 * C630 + C29588 * C795) * C625 +
                                 (C249 * C642 + C29588 * C801) * C29511) *
                                    C29603 * C78 +
                                ((C249 * C631 + C29588 * C796) * C625 +
                                 (C249 * C643 + C29588 * C802) * C29511) *
                                    C29603 * C79) *
                                   C29543 * C624)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C249 * C93 + C29588 * C250) * C90 +
           (C249 * C101 + C29588 * C255) * C80 - C273 * C91 - C274 * C81 +
           C275 * C92 + C276 * C82) *
              C29603 * C77 +
          (C273 * C90 + C274 * C80 - C275 * C91 - C276 * C81 + C277 * C92 +
           C278 * C82) *
              C29603 * C78 +
          (C275 * C90 + C276 * C80 - C277 * C91 - C278 * C81 +
           (C249 * C97 + C29588 * C254) * C92 +
           (C249 * C107 + C29588 * C259) * C82) *
              C29603 * C79) *
         C29543 * C29532) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C249 * C93 + C29588 * C250) * C625 +
            (C249 * C101 + C29588 * C255) * C29511) *
               C29603 * C77 +
           (C273 * C625 + C274 * C29511) * C29603 * C78 +
           (C275 * C625 + C276 * C29511) * C29603 * C79) *
              C1067 -
          (((C249 * C1076 + C29588 * C1241) * C29511 +
            (C249 * C1070 + C29588 * C1235) * C625) *
               C29603 * C79 +
           ((C249 * C1077 + C29588 * C1242) * C29511 +
            (C249 * C1071 + C29588 * C1236) * C625) *
               C29603 * C78 +
           ((C249 * C1078 + C29588 * C1243) * C29511 +
            (C249 * C1072 + C29588 * C1237) * C625) *
               C29603 * C77) *
              C1068 +
          (((C249 * C1073 + C29588 * C1238) * C625 +
            (C249 * C1085 + C29588 * C1244) * C29511) *
               C29603 * C77 +
           ((C249 * C1074 + C29588 * C1239) * C625 +
            (C249 * C1086 + C29588 * C1245) * C29511) *
               C29603 * C78 +
           ((C249 * C1075 + C29588 * C1240) * C625 +
            (C249 * C1087 + C29588 * C1246) * C29511) *
               C29603 * C79) *
              C1069) *
         C29532) /
            (p * q * std::sqrt(p + q));
    d2eeyy[2] +=
        (-std::pow(Pi, 2.5) *
         (((C249 * C93 + C29588 * C250) * C688 +
           (C249 * C152 + C29588 * C316) * C622 -
           (C249 * C628 + C29588 * C793) * C689 -
           (C249 * C693 + C29588 * C841) * C623 +
           (C249 * C629 + C29588 * C794) * C690 +
           (C249 * C694 + C29588 * C842) * C624) *
              C29603 * C77 +
          (C273 * C688 + C331 * C622 - (C249 * C627 + C29588 * C792) * C689 -
           (C249 * C692 + C29588 * C843) * C623 +
           (C249 * C630 + C29588 * C795) * C690 +
           (C249 * C695 + C29588 * C844) * C624) *
              C29603 * C78 +
          (C275 * C688 + C332 * C622 - (C249 * C626 + C29588 * C791) * C689 -
           (C249 * C691 + C29588 * C845) * C623 +
           (C249 * C631 + C29588 * C796) * C690 +
           (C249 * C696 + C29588 * C846) * C624) *
              C29603 * C79) *
         C29511 * C29543) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C249 * C93 + C29588 * C250) * C151 +
            (C249 * C152 + C29588 * C316) * C29532) *
               C29603 * C77 +
           (C322 + C334) * C29603 * C78 + C338 * C79) *
              C80 -
          ((C336 + C330) * C29603 * C79 + (C335 + C325) * C29603 * C78 +
           (C334 + C322) * C29603 * C77) *
              C81 +
          (C338 * C77 + (C330 + C336) * C29603 * C78 +
           ((C249 * C97 + C29588 * C254) * C151 +
            (C249 * C156 + C29588 * C320) * C29532) *
               C29603 * C79) *
              C82) *
         C29543) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C249 * C93 + C29588 * C250) * C151 +
            (C249 * C152 + C29588 * C316) * C29532) *
               C29603 * C77 +
           (C322 + C334) * C29603 * C78 + C338 * C79) *
              C29511 * C1067 -
          (((C249 * C1132 + C29588 * C1285) * C29532 +
            (C249 * C1070 + C29588 * C1235) * C151) *
               C29603 * C79 +
           ((C249 * C1133 + C29588 * C1286) * C29532 +
            (C249 * C1071 + C29588 * C1236) * C151) *
               C29603 * C78 +
           ((C249 * C1134 + C29588 * C1287) * C29532 +
            (C249 * C1072 + C29588 * C1237) * C151) *
               C29603 * C77) *
              C29511 * C1068 +
          (((C249 * C1073 + C29588 * C1238) * C151 +
            (C249 * C1135 + C29588 * C1288) * C29532) *
               C29603 * C77 +
           ((C249 * C1074 + C29588 * C1239) * C151 +
            (C249 * C1136 + C29588 * C1289) * C29532) *
               C29603 * C78 +
           ((C249 * C1075 + C29588 * C1240) * C151 +
            (C249 * C1137 + C29588 * C1290) * C29532) *
               C29603 * C79) *
              C29511 * C1069)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[2] +=
        (-std::pow(Pi, 2.5) *
         ((((C249 * C93 + C29588 * C250) * C200 +
            (C249 * C201 + C29588 * C376) * C29543) *
               C29603 * C77 +
           (C382 + C394) * C29603 * C78 + C398 * C79) *
              C622 -
          (((C249 * C741 + C29588 * C885) * C29543 +
            (C249 * C626 + C29588 * C791) * C200) *
               C29603 * C79 +
           ((C249 * C742 + C29588 * C886) * C29543 +
            (C249 * C627 + C29588 * C792) * C200) *
               C29603 * C78 +
           ((C249 * C743 + C29588 * C887) * C29543 +
            (C249 * C628 + C29588 * C793) * C200) *
               C29603 * C77) *
              C623 +
          (((C249 * C629 + C29588 * C794) * C200 +
            (C249 * C744 + C29588 * C888) * C29543) *
               C29603 * C77 +
           ((C249 * C630 + C29588 * C795) * C200 +
            (C249 * C745 + C29588 * C889) * C29543) *
               C29603 * C78 +
           ((C249 * C631 + C29588 * C796) * C200 +
            (C249 * C746 + C29588 * C890) * C29543) *
               C29603 * C79) *
              C624) *
         C29511) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C249 * C93 + C29588 * C250) * C200 +
            (C249 * C201 + C29588 * C376) * C29543) *
               C29603 * C77 +
           (C382 + C394) * C29603 * C78 + C398 * C79) *
              C29532 * C80 -
          ((C396 + C390) * C29603 * C79 + (C395 + C385) * C29603 * C78 +
           (C394 + C382) * C29603 * C77) *
              C29532 * C81 +
          (C398 * C77 + (C390 + C396) * C29603 * C78 +
           ((C249 * C97 + C29588 * C254) * C200 +
            (C249 * C205 + C29588 * C380) * C29543) *
               C29603 * C79) *
              C29532 * C82)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C249 * C93 + C29588 * C250) * C1182 +
           (C249 * C201 + C29588 * C376) * C1067 -
           (C249 * C1072 + C29588 * C1237) * C1183 -
           (C249 * C1187 + C29588 * C1329) * C1068 +
           (C249 * C1073 + C29588 * C1238) * C1184 +
           (C249 * C1188 + C29588 * C1330) * C1069) *
              C29603 * C77 +
          (C273 * C1182 + C391 * C1067 -
           (C249 * C1071 + C29588 * C1236) * C1183 -
           (C249 * C1186 + C29588 * C1331) * C1068 +
           (C249 * C1074 + C29588 * C1239) * C1184 +
           (C249 * C1189 + C29588 * C1332) * C1069) *
              C29603 * C78 +
          (C275 * C1182 + C392 * C1067 -
           (C249 * C1070 + C29588 * C1235) * C1183 -
           (C249 * C1185 + C29588 * C1333) * C1068 +
           (C249 * C1075 + C29588 * C1240) * C1184 +
           (C249 * C1190 + C29588 * C1334) * C1069) *
              C29603 * C79) *
         C29532 * C29511) /
            (p * q * std::sqrt(p + q));
    d2eezx[2] +=
        (-std::pow(Pi, 2.5) * ((((C436 * C93 + C29603 * C437) * C625 +
                                 (C436 * C101 + C29603 * C442) * C29511) *
                                    C77 +
                                (C460 * C625 + C461 * C29511) * C78 +
                                (C462 * C625 + C463 * C29511) * C79) *
                                   C29588 * C29543 * C622 -
                               (((C436 * C632 + C29603 * C935) * C29511 +
                                 (C436 * C626 + C29603 * C929) * C625) *
                                    C79 +
                                ((C436 * C633 + C29603 * C936) * C29511 +
                                 (C436 * C627 + C29603 * C930) * C625) *
                                    C78 +
                                ((C436 * C634 + C29603 * C937) * C29511 +
                                 (C436 * C628 + C29603 * C931) * C625) *
                                    C77) *
                                   C29588 * C29543 * C623 +
                               (((C436 * C629 + C29603 * C932) * C625 +
                                 (C436 * C641 + C29603 * C938) * C29511) *
                                    C77 +
                                ((C436 * C630 + C29603 * C933) * C625 +
                                 (C436 * C642 + C29603 * C939) * C29511) *
                                    C78 +
                                ((C436 * C631 + C29603 * C934) * C625 +
                                 (C436 * C643 + C29603 * C940) * C29511) *
                                    C79) *
                                   C29588 * C29543 * C624)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C436 * C93 + C29603 * C437) * C90 +
           (C436 * C101 + C29603 * C442) * C80 - C460 * C91 - C461 * C81 +
           C462 * C92 + C463 * C82) *
              C77 +
          (C460 * C90 + C461 * C80 - C462 * C91 - C463 * C81 + C464 * C92 +
           C465 * C82) *
              C78 +
          (C462 * C90 + C463 * C80 - C464 * C91 - C465 * C81 +
           (C436 * C97 + C29603 * C441) * C92 +
           (C436 * C107 + C29603 * C446) * C82) *
              C79) *
         C29588 * C29543 * C29532) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C436 * C93 + C29603 * C437) * C625 +
            (C436 * C101 + C29603 * C442) * C29511) *
               C77 +
           (C460 * C625 + C461 * C29511) * C78 +
           (C462 * C625 + C463 * C29511) * C79) *
              C29588 * C1067 -
          (((C436 * C1076 + C29603 * C1379) * C29511 +
            (C436 * C1070 + C29603 * C1373) * C625) *
               C79 +
           ((C436 * C1077 + C29603 * C1380) * C29511 +
            (C436 * C1071 + C29603 * C1374) * C625) *
               C78 +
           ((C436 * C1078 + C29603 * C1381) * C29511 +
            (C436 * C1072 + C29603 * C1375) * C625) *
               C77) *
              C29588 * C1068 +
          (((C436 * C1073 + C29603 * C1376) * C625 +
            (C436 * C1085 + C29603 * C1382) * C29511) *
               C77 +
           ((C436 * C1074 + C29603 * C1377) * C625 +
            (C436 * C1086 + C29603 * C1383) * C29511) *
               C78 +
           ((C436 * C1075 + C29603 * C1378) * C625 +
            (C436 * C1087 + C29603 * C1384) * C29511) *
               C79) *
              C29588 * C1069) *
         C29532) /
            (p * q * std::sqrt(p + q));
    d2eezy[2] +=
        (-std::pow(Pi, 2.5) *
         (((C436 * C93 + C29603 * C437) * C688 +
           (C436 * C152 + C29603 * C503) * C622 -
           (C436 * C628 + C29603 * C931) * C689 -
           (C436 * C693 + C29603 * C979) * C623 +
           (C436 * C629 + C29603 * C932) * C690 +
           (C436 * C694 + C29603 * C980) * C624) *
              C77 +
          (C460 * C688 + C518 * C622 - (C436 * C627 + C29603 * C930) * C689 -
           (C436 * C692 + C29603 * C981) * C623 +
           (C436 * C630 + C29603 * C933) * C690 +
           (C436 * C695 + C29603 * C982) * C624) *
              C78 +
          (C462 * C688 + C519 * C622 - (C436 * C626 + C29603 * C929) * C689 -
           (C436 * C691 + C29603 * C983) * C623 +
           (C436 * C631 + C29603 * C934) * C690 +
           (C436 * C696 + C29603 * C984) * C624) *
              C79) *
         C29588 * C29511 * C29543) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C436 * C93 + C29603 * C437) * C151 +
            (C436 * C152 + C29603 * C503) * C29532) *
               C77 +
           (C509 + C521) * C78 + C524 * C79) *
              C29588 * C80 -
          ((C523 + C517) * C79 + (C522 + C512) * C78 + (C521 + C509) * C77) *
              C29588 * C81 +
          (C524 * C77 + (C517 + C523) * C78 +
           ((C436 * C97 + C29603 * C441) * C151 +
            (C436 * C156 + C29603 * C507) * C29532) *
               C79) *
              C29588 * C82) *
         C29543) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C436 * C93 + C29603 * C437) * C151 +
            (C436 * C152 + C29603 * C503) * C29532) *
               C77 +
           (C509 + C521) * C78 + C524 * C79) *
              C29588 * C29511 * C1067 -
          (((C436 * C1132 + C29603 * C1423) * C29532 +
            (C436 * C1070 + C29603 * C1373) * C151) *
               C79 +
           ((C436 * C1133 + C29603 * C1424) * C29532 +
            (C436 * C1071 + C29603 * C1374) * C151) *
               C78 +
           ((C436 * C1134 + C29603 * C1425) * C29532 +
            (C436 * C1072 + C29603 * C1375) * C151) *
               C77) *
              C29588 * C29511 * C1068 +
          (((C436 * C1073 + C29603 * C1376) * C151 +
            (C436 * C1135 + C29603 * C1426) * C29532) *
               C77 +
           ((C436 * C1074 + C29603 * C1377) * C151 +
            (C436 * C1136 + C29603 * C1427) * C29532) *
               C78 +
           ((C436 * C1075 + C29603 * C1378) * C151 +
            (C436 * C1137 + C29603 * C1428) * C29532) *
               C79) *
              C29588 * C29511 * C1069)) /
            (p * q * std::sqrt(p + q));
    d2eezz[2] +=
        (-std::pow(Pi, 2.5) *
         ((((C436 * C93 + C29603 * C437) * C200 +
            (C436 * C201 + C29603 * C562) * C29543) *
               C77 +
           (C568 + C580) * C78 + C583 * C79) *
              C29588 * C622 -
          (((C436 * C741 + C29603 * C1023) * C29543 +
            (C436 * C626 + C29603 * C929) * C200) *
               C79 +
           ((C436 * C742 + C29603 * C1024) * C29543 +
            (C436 * C627 + C29603 * C930) * C200) *
               C78 +
           ((C436 * C743 + C29603 * C1025) * C29543 +
            (C436 * C628 + C29603 * C931) * C200) *
               C77) *
              C29588 * C623 +
          (((C436 * C629 + C29603 * C932) * C200 +
            (C436 * C744 + C29603 * C1026) * C29543) *
               C77 +
           ((C436 * C630 + C29603 * C933) * C200 +
            (C436 * C745 + C29603 * C1027) * C29543) *
               C78 +
           ((C436 * C631 + C29603 * C934) * C200 +
            (C436 * C746 + C29603 * C1028) * C29543) *
               C79) *
              C29588 * C624) *
         C29511) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C436 * C93 + C29603 * C437) * C200 +
            (C436 * C201 + C29603 * C562) * C29543) *
               C77 +
           (C568 + C580) * C78 + C583 * C79) *
              C29588 * C29532 * C80 -
          ((C582 + C576) * C79 + (C581 + C571) * C78 + (C580 + C568) * C77) *
              C29588 * C29532 * C81 +
          (C583 * C77 + (C576 + C582) * C78 +
           ((C436 * C97 + C29603 * C441) * C200 +
            (C436 * C205 + C29603 * C566) * C29543) *
               C79) *
              C29588 * C29532 * C82)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C436 * C93 + C29603 * C437) * C1182 +
           (C436 * C201 + C29603 * C562) * C1067 -
           (C436 * C1072 + C29603 * C1375) * C1183 -
           (C436 * C1187 + C29603 * C1467) * C1068 +
           (C436 * C1073 + C29603 * C1376) * C1184 +
           (C436 * C1188 + C29603 * C1468) * C1069) *
              C77 +
          (C460 * C1182 + C577 * C1067 -
           (C436 * C1071 + C29603 * C1374) * C1183 -
           (C436 * C1186 + C29603 * C1469) * C1068 +
           (C436 * C1074 + C29603 * C1377) * C1184 +
           (C436 * C1189 + C29603 * C1470) * C1069) *
              C78 +
          (C462 * C1182 + C578 * C1067 -
           (C436 * C1070 + C29603 * C1373) * C1183 -
           (C436 * C1185 + C29603 * C1471) * C1068 +
           (C436 * C1075 + C29603 * C1378) * C1184 +
           (C436 * C1190 + C29603 * C1472) * C1069) *
              C79) *
         C29588 * C29532 * C29511) /
            (p * q * std::sqrt(p + q));
    d2eexx[3] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  (((C87 * C93 + C77 * C98 + C88 * C94 + C78 * C99 + C89 * C95 +
                     C79 * C100) *
                        C1527 +
                    (C87 * C101 + C77 * C108 + C88 * C102 + C78 * C109 +
                     C89 * C103 + C79 * C110) *
                        C1523 -
                    (C89 * C96 + C79 * C104 + C88 * C95 + C78 * C100 +
                     C87 * C94 + C77 * C99) *
                        C1528 -
                    (C89 * C105 + C79 * C111 + C88 * C103 + C78 * C110 +
                     C87 * C102 + C77 * C109) *
                        C1524) *
                       C29588 * C29603 * C2069 +
                   ((C87 * C1071 + C77 * C1080 + C88 * C1070 + C78 * C1079 +
                     C89 * C2071 + C79 * C2072) *
                        C1528 -
                    ((C89 * C1076 + C79 * C1088 + C88 * C1077 + C78 * C1089 +
                      C87 * C1078 + C77 * C1090) *
                         C1523 +
                     (C89 * C1070 + C79 * C1079 + C88 * C1071 + C78 * C1080 +
                      C87 * C1072 + C77 * C1081) *
                         C1527) +
                    (C87 * C1077 + C77 * C1089 + C88 * C1076 + C78 * C1088 +
                     C89 * C2073 + C79 * C2074) *
                        C1524) *
                       C29588 * C29603 * C2070) *
                  C29532) /
                 (p * q * std::sqrt(p + q));
    d2eexy[3] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((C87 * C93 + C77 * C98 + C88 * C94 + C78 * C99 +
                      C89 * C95 + C79 * C100) *
                         C151 +
                     (C87 * C152 + C77 * C157 + C88 * C153 + C78 * C158 +
                      C89 * C154 + C79 * C159) *
                         C29532) *
                        C29588 * C29603 * C1523 -
                    ((C89 * C155 + C79 * C160 + C88 * C154 + C78 * C159 +
                      C87 * C153 + C77 * C158) *
                         C29532 +
                     (C89 * C96 + C79 * C104 + C88 * C95 + C78 * C100 +
                      C87 * C94 + C77 * C99) *
                         C151) *
                        C29588 * C29603 * C1524) *
                       C2069 +
                   (((C87 * C1071 + C77 * C1080 + C88 * C1070 + C78 * C1079 +
                      C89 * C2071 + C79 * C2072) *
                         C151 +
                     (C87 * C1133 + C77 * C1139 + C88 * C1132 + C78 * C1138 +
                      C89 * C2125 + C79 * C2126) *
                         C29532) *
                        C29588 * C29603 * C1524 -
                    ((C89 * C1132 + C79 * C1138 + C88 * C1133 + C78 * C1139 +
                      C87 * C1134 + C77 * C1140) *
                         C29532 +
                     (C89 * C1070 + C79 * C1079 + C88 * C1071 + C78 * C1080 +
                      C87 * C1072 + C77 * C1081) *
                         C151) *
                        C29588 * C29603 * C1523) *
                       C2070)) /
                 (p * q * std::sqrt(p + q));
    d2eexz[3] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  (((C87 * C93 + C77 * C98 + C88 * C94 + C78 * C99 + C89 * C95 +
                     C79 * C100) *
                        C2177 +
                    (C87 * C201 + C77 * C206 + C88 * C202 + C78 * C207 +
                     C89 * C203 + C79 * C208) *
                        C2069 -
                    (C89 * C1070 + C79 * C1079 + C88 * C1071 + C78 * C1080 +
                     C87 * C1072 + C77 * C1081) *
                        C2178 -
                    (C89 * C1185 + C79 * C1191 + C88 * C1186 + C78 * C1192 +
                     C87 * C1187 + C77 * C1193) *
                        C2070) *
                       C29588 * C29603 * C29532 * C1523 +
                   ((C87 * C1071 + C77 * C1080 + C88 * C1070 + C78 * C1079 +
                     C89 * C2071 + C79 * C2072) *
                        C2178 -
                    ((C89 * C204 + C79 * C209 + C88 * C203 + C78 * C208 +
                      C87 * C202 + C77 * C207) *
                         C2069 +
                     (C89 * C96 + C79 * C104 + C88 * C95 + C78 * C100 +
                      C87 * C94 + C77 * C99) *
                         C2177) +
                    (C87 * C1186 + C77 * C1192 + C88 * C1185 + C78 * C1191 +
                     C89 * C2179 + C79 * C2180) *
                        C2070) *
                       C29588 * C29603 * C29532 * C1524)) /
                 (p * q * std::sqrt(p + q));
    d2eeyx[3] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C249 * C93 + C29588 * C250) * C1527 +
            (C249 * C101 + C29588 * C255) * C1523 - C273 * C1528 -
            C274 * C1524) *
               C29603 * C77 +
           (C273 * C1527 + C274 * C1523 - C275 * C1528 - C276 * C1524) *
               C29603 * C78 +
           (C275 * C1527 + C276 * C1523 - C277 * C1528 - C278 * C1524) *
               C29603 * C79) *
              C2069 +
          ((C2242 * C1528 -
            ((C249 * C1078 + C29588 * C1243) * C1523 +
             (C249 * C1072 + C29588 * C1237) * C1527) +
            C2243 * C1524) *
               C29603 * C77 +
           (C2244 * C1528 - (C2243 * C1523 + C2242 * C1527) + C2245 * C1524) *
               C29603 * C78 +
           ((C249 * C2071 + C29588 * C2231) * C1528 -
            (C2245 * C1523 + C2244 * C1527) +
            (C249 * C2073 + C29588 * C2232) * C1524) *
               C29603 * C79) *
              C2070) *
         C29532) /
        (p * q * std::sqrt(p + q));
    d2eeyy[3] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C249 * C93 + C29588 * C250) * C151 +
             (C249 * C152 + C29588 * C316) * C29532) *
                C29603 * C77 +
            (C322 + C334) * C29603 * C78 + C338 * C79) *
               C1523 -
           ((C336 + C330) * C29603 * C79 + (C335 + C325) * C29603 * C78 +
            (C334 + C322) * C29603 * C77) *
               C1524) *
              C2069 +
          (((C2297 + C2305) * C29603 * C77 + (C2300 + C2306) * C29603 * C78 +
            ((C249 * C2071 + C29588 * C2231) * C151 +
             (C249 * C2125 + C29588 * C2295) * C29532) *
                C29603 * C79) *
               C1524 -
           ((C2306 + C2300) * C29603 * C79 + (C2305 + C2297) * C29603 * C78 +
            ((C249 * C1134 + C29588 * C1287) * C29532 +
             (C249 * C1072 + C29588 * C1237) * C151) *
                C29603 * C77) *
               C1523) *
              C2070)) /
        (p * q * std::sqrt(p + q));
    d2eeyz[3] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((C249 * C93 + C29588 * C250) * C2177 +
                     (C249 * C201 + C29588 * C376) * C2069 -
                     (C249 * C1072 + C29588 * C1237) * C2178 -
                     (C249 * C1187 + C29588 * C1329) * C2070) *
                        C29603 * C77 +
                    (C2358 + C2359 - C2360 - C2370) * C29603 * C78 +
                    (C2363 + C2364 - C2365 - C2371) * C29603 * C79) *
                       C29532 * C1523 +
                   ((C2360 - (C2359 + C2358) + C2370) * C29603 * C77 +
                    (C2365 - (C2364 + C2363) + C2371) * C29603 * C78 +
                    ((C249 * C2071 + C29588 * C2231) * C2178 -
                     (C393 * C2069 + C277 * C2177) +
                     (C249 * C2179 + C29588 * C2356) * C2070) *
                        C29603 * C79) *
                       C29532 * C1524)) /
                 (p * q * std::sqrt(p + q));
    d2eezx[3] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C436 * C93 + C29603 * C437) * C1527 +
            (C436 * C101 + C29603 * C442) * C1523 - C460 * C1528 -
            C461 * C1524) *
               C77 +
           (C460 * C1527 + C461 * C1523 - C462 * C1528 - C463 * C1524) * C78 +
           (C462 * C1527 + C463 * C1523 - C464 * C1528 - C465 * C1524) * C79) *
              C29588 * C2069 +
          ((C2432 * C1528 -
            ((C436 * C1078 + C29603 * C1381) * C1523 +
             (C436 * C1072 + C29603 * C1375) * C1527) +
            C2433 * C1524) *
               C77 +
           (C2434 * C1528 - (C2433 * C1523 + C2432 * C1527) + C2435 * C1524) *
               C78 +
           ((C436 * C2071 + C29603 * C2421) * C1528 -
            (C2435 * C1523 + C2434 * C1527) +
            (C436 * C2073 + C29603 * C2422) * C1524) *
               C79) *
              C29588 * C2070) *
         C29532) /
        (p * q * std::sqrt(p + q));
    d2eezy[3] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C436 * C93 + C29603 * C437) * C151 +
             (C436 * C152 + C29603 * C503) * C29532) *
                C77 +
            (C509 + C521) * C78 + C524 * C79) *
               C29588 * C1523 -
           ((C523 + C517) * C79 + (C522 + C512) * C78 + (C521 + C509) * C77) *
               C29588 * C1524) *
              C2069 +
          (((C2487 + C2495) * C77 + (C2490 + C2496) * C78 +
            ((C436 * C2071 + C29603 * C2421) * C151 +
             (C436 * C2125 + C29603 * C2485) * C29532) *
                C79) *
               C29588 * C1524 -
           ((C2496 + C2490) * C79 + (C2495 + C2487) * C78 +
            ((C436 * C1134 + C29603 * C1425) * C29532 +
             (C436 * C1072 + C29603 * C1375) * C151) *
                C77) *
               C29588 * C1523) *
              C2070)) /
        (p * q * std::sqrt(p + q));
    d2eezz[3] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((C436 * C93 + C29603 * C437) * C2177 +
                     (C436 * C201 + C29603 * C562) * C2069 -
                     (C436 * C1072 + C29603 * C1375) * C2178 -
                     (C436 * C1187 + C29603 * C1467) * C2070) *
                        C77 +
                    (C2548 + C2549 - C2550 - C2560) * C78 +
                    (C2553 + C2554 - C2555 - C2561) * C79) *
                       C29588 * C29532 * C1523 +
                   ((C2550 - (C2549 + C2548) + C2560) * C77 +
                    (C2555 - (C2554 + C2553) + C2561) * C78 +
                    ((C436 * C2071 + C29603 * C2421) * C2178 -
                     (C579 * C2069 + C464 * C2177) +
                     (C436 * C2179 + C29603 * C2546) * C2070) *
                        C79) *
                       C29588 * C29532 * C1524)) /
                 (p * q * std::sqrt(p + q));
    d2eexx[4] += (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((C87 * C93 + C77 * C98 + C88 * C94 + C78 * C99 + C89 * C95 +
                    C79 * C100) *
                       C90 +
                   (C87 * C101 + C77 * C108 + C88 * C102 + C78 * C109 +
                    C89 * C103 + C79 * C110) *
                       C80 -
                   (C89 * C96 + C79 * C104 + C88 * C95 + C78 * C100 +
                    C87 * C94 + C77 * C99) *
                       C91 -
                   (C89 * C105 + C79 * C111 + C88 * C103 + C78 * C110 +
                    C87 * C102 + C77 * C109) *
                       C81 +
                   (C87 * C95 + C77 * C100 + C88 * C96 + C78 * C104 +
                    C89 * C97 + C79 * C106) *
                       C92 +
                   (C87 * C103 + C77 * C110 + C88 * C105 + C78 * C111 +
                    C89 * C107 + C79 * C112) *
                       C82) *
                  C29588 * C29603 * C29543 * C29532) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((C87 * C93 + C77 * C98 + C88 * C94 + C78 * C99 + C89 * C95 +
                     C79 * C100) *
                        C625 +
                    (C87 * C101 + C77 * C108 + C88 * C102 + C78 * C109 +
                     C89 * C103 + C79 * C110) *
                        C29511) *
                       C29588 * C29603 * C29543 * C622 -
                   ((C89 * C632 + C79 * C644 + C88 * C633 + C78 * C645 +
                     C87 * C634 + C77 * C646) *
                        C29511 +
                    (C89 * C626 + C79 * C635 + C88 * C627 + C78 * C636 +
                     C87 * C628 + C77 * C637) *
                        C625) *
                       C29588 * C29603 * C29543 * C623 +
                   ((C87 * C629 + C77 * C638 + C88 * C630 + C78 * C639 +
                     C89 * C631 + C79 * C640) *
                        C625 +
                    (C87 * C641 + C77 * C647 + C88 * C642 + C78 * C648 +
                     C89 * C643 + C79 * C649) *
                        C29511) *
                       C29588 * C29603 * C29543 * C624)) /
                     (p * q * std::sqrt(p + q));
    d2eexy[4] += (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((C87 * C93 + C77 * C98 + C88 * C94 + C78 * C99 + C89 * C95 +
                     C79 * C100) *
                        C151 +
                    (C87 * C152 + C77 * C157 + C88 * C153 + C78 * C158 +
                     C89 * C154 + C79 * C159) *
                        C29532) *
                       C29588 * C29603 * C80 -
                   ((C89 * C155 + C79 * C160 + C88 * C154 + C78 * C159 +
                     C87 * C153 + C77 * C158) *
                        C29532 +
                    (C89 * C96 + C79 * C104 + C88 * C95 + C78 * C100 +
                     C87 * C94 + C77 * C99) *
                        C151) *
                       C29588 * C29603 * C81 +
                   ((C87 * C95 + C77 * C100 + C88 * C96 + C78 * C104 +
                     C89 * C97 + C79 * C106) *
                        C151 +
                    (C87 * C154 + C77 * C159 + C88 * C155 + C78 * C160 +
                     C89 * C156 + C79 * C161) *
                        C29532) *
                       C29588 * C29603 * C82) *
                  C29543) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((C87 * C93 + C77 * C98 + C88 * C94 + C78 * C99 + C89 * C95 +
                    C79 * C100) *
                       C688 +
                   (C87 * C152 + C77 * C157 + C88 * C153 + C78 * C158 +
                    C89 * C154 + C79 * C159) *
                       C622 -
                   (C89 * C626 + C79 * C635 + C88 * C627 + C78 * C636 +
                    C87 * C628 + C77 * C637) *
                       C689 -
                   (C89 * C691 + C79 * C697 + C88 * C692 + C78 * C698 +
                    C87 * C693 + C77 * C699) *
                       C623 +
                   (C87 * C629 + C77 * C638 + C88 * C630 + C78 * C639 +
                    C89 * C631 + C79 * C640) *
                       C690 +
                   (C87 * C694 + C77 * C700 + C88 * C695 + C78 * C701 +
                    C89 * C696 + C79 * C702) *
                       C624) *
                  C29588 * C29603 * C29511 * C29543) /
                     (p * q * std::sqrt(p + q));
    d2eexz[4] += (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((C87 * C93 + C77 * C98 + C88 * C94 + C78 * C99 + C89 * C95 +
                     C79 * C100) *
                        C200 +
                    (C87 * C201 + C77 * C206 + C88 * C202 + C78 * C207 +
                     C89 * C203 + C79 * C208) *
                        C29543) *
                       C29588 * C29603 * C29532 * C80 -
                   ((C89 * C204 + C79 * C209 + C88 * C203 + C78 * C208 +
                     C87 * C202 + C77 * C207) *
                        C29543 +
                    (C89 * C96 + C79 * C104 + C88 * C95 + C78 * C100 +
                     C87 * C94 + C77 * C99) *
                        C200) *
                       C29588 * C29603 * C29532 * C81 +
                   ((C87 * C95 + C77 * C100 + C88 * C96 + C78 * C104 +
                     C89 * C97 + C79 * C106) *
                        C200 +
                    (C87 * C203 + C77 * C208 + C88 * C204 + C78 * C209 +
                     C89 * C205 + C79 * C210) *
                        C29543) *
                       C29588 * C29603 * C29532 * C82)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((C87 * C93 + C77 * C98 + C88 * C94 + C78 * C99 + C89 * C95 +
                     C79 * C100) *
                        C200 +
                    (C87 * C201 + C77 * C206 + C88 * C202 + C78 * C207 +
                     C89 * C203 + C79 * C208) *
                        C29543) *
                       C29588 * C29603 * C622 -
                   ((C89 * C741 + C79 * C747 + C88 * C742 + C78 * C748 +
                     C87 * C743 + C77 * C749) *
                        C29543 +
                    (C89 * C626 + C79 * C635 + C88 * C627 + C78 * C636 +
                     C87 * C628 + C77 * C637) *
                        C200) *
                       C29588 * C29603 * C623 +
                   ((C87 * C629 + C77 * C638 + C88 * C630 + C78 * C639 +
                     C89 * C631 + C79 * C640) *
                        C200 +
                    (C87 * C744 + C77 * C750 + C88 * C745 + C78 * C751 +
                     C89 * C746 + C79 * C752) *
                        C29543) *
                       C29588 * C29603 * C624) *
                  C29511) /
                     (p * q * std::sqrt(p + q));
    d2eeyx[4] += (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((C249 * C93 + C29588 * C250) * C90 +
                    (C249 * C101 + C29588 * C255) * C80 - C273 * C91 -
                    C274 * C81 + C275 * C92 + C276 * C82) *
                       C29603 * C77 +
                   (C273 * C90 + C274 * C80 - C275 * C91 - C276 * C81 +
                    C277 * C92 + C278 * C82) *
                       C29603 * C78 +
                   (C275 * C90 + C276 * C80 - C277 * C91 - C278 * C81 +
                    (C249 * C97 + C29588 * C254) * C92 +
                    (C249 * C107 + C29588 * C259) * C82) *
                       C29603 * C79) *
                  C29543 * C29532) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C249 * C93 + C29588 * C250) * C625 +
                     (C249 * C101 + C29588 * C255) * C29511) *
                        C29603 * C77 +
                    (C273 * C625 + C274 * C29511) * C29603 * C78 +
                    (C275 * C625 + C276 * C29511) * C29603 * C79) *
                       C29543 * C622 -
                   (((C249 * C632 + C29588 * C797) * C29511 +
                     (C249 * C626 + C29588 * C791) * C625) *
                        C29603 * C79 +
                    ((C249 * C633 + C29588 * C798) * C29511 +
                     (C249 * C627 + C29588 * C792) * C625) *
                        C29603 * C78 +
                    ((C249 * C634 + C29588 * C799) * C29511 +
                     (C249 * C628 + C29588 * C793) * C625) *
                        C29603 * C77) *
                       C29543 * C623 +
                   (((C249 * C629 + C29588 * C794) * C625 +
                     (C249 * C641 + C29588 * C800) * C29511) *
                        C29603 * C77 +
                    ((C249 * C630 + C29588 * C795) * C625 +
                     (C249 * C642 + C29588 * C801) * C29511) *
                        C29603 * C78 +
                    ((C249 * C631 + C29588 * C796) * C625 +
                     (C249 * C643 + C29588 * C802) * C29511) *
                        C29603 * C79) *
                       C29543 * C624)) /
                     (p * q * std::sqrt(p + q));
    d2eeyy[4] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C249 * C93 + C29588 * C250) * C151 +
            (C249 * C152 + C29588 * C316) * C29532) *
               C29603 * C77 +
           (C322 + C334) * C29603 * C78 + C338 * C79) *
              C80 -
          ((C336 + C330) * C29603 * C79 + (C335 + C325) * C29603 * C78 +
           (C334 + C322) * C29603 * C77) *
              C81 +
          (C338 * C77 + (C330 + C336) * C29603 * C78 +
           ((C249 * C97 + C29588 * C254) * C151 +
            (C249 * C156 + C29588 * C320) * C29532) *
               C29603 * C79) *
              C82) *
         C29543) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C249 * C93 + C29588 * C250) * C688 +
           (C249 * C152 + C29588 * C316) * C622 -
           (C249 * C628 + C29588 * C793) * C689 -
           (C249 * C693 + C29588 * C841) * C623 +
           (C249 * C629 + C29588 * C794) * C690 +
           (C249 * C694 + C29588 * C842) * C624) *
              C29603 * C77 +
          (C273 * C688 + C331 * C622 - (C249 * C627 + C29588 * C792) * C689 -
           (C249 * C692 + C29588 * C843) * C623 +
           (C249 * C630 + C29588 * C795) * C690 +
           (C249 * C695 + C29588 * C844) * C624) *
              C29603 * C78 +
          (C275 * C688 + C332 * C622 - (C249 * C626 + C29588 * C791) * C689 -
           (C249 * C691 + C29588 * C845) * C623 +
           (C249 * C631 + C29588 * C796) * C690 +
           (C249 * C696 + C29588 * C846) * C624) *
              C29603 * C79) *
         C29511 * C29543) /
            (p * q * std::sqrt(p + q));
    d2eeyz[4] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C249 * C93 + C29588 * C250) * C200 +
            (C249 * C201 + C29588 * C376) * C29543) *
               C29603 * C77 +
           (C382 + C394) * C29603 * C78 + C398 * C79) *
              C29532 * C80 -
          ((C396 + C390) * C29603 * C79 + (C395 + C385) * C29603 * C78 +
           (C394 + C382) * C29603 * C77) *
              C29532 * C81 +
          (C398 * C77 + (C390 + C396) * C29603 * C78 +
           ((C249 * C97 + C29588 * C254) * C200 +
            (C249 * C205 + C29588 * C380) * C29543) *
               C29603 * C79) *
              C29532 * C82)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C249 * C93 + C29588 * C250) * C200 +
            (C249 * C201 + C29588 * C376) * C29543) *
               C29603 * C77 +
           (C382 + C394) * C29603 * C78 + C398 * C79) *
              C622 -
          (((C249 * C741 + C29588 * C885) * C29543 +
            (C249 * C626 + C29588 * C791) * C200) *
               C29603 * C79 +
           ((C249 * C742 + C29588 * C886) * C29543 +
            (C249 * C627 + C29588 * C792) * C200) *
               C29603 * C78 +
           ((C249 * C743 + C29588 * C887) * C29543 +
            (C249 * C628 + C29588 * C793) * C200) *
               C29603 * C77) *
              C623 +
          (((C249 * C629 + C29588 * C794) * C200 +
            (C249 * C744 + C29588 * C888) * C29543) *
               C29603 * C77 +
           ((C249 * C630 + C29588 * C795) * C200 +
            (C249 * C745 + C29588 * C889) * C29543) *
               C29603 * C78 +
           ((C249 * C631 + C29588 * C796) * C200 +
            (C249 * C746 + C29588 * C890) * C29543) *
               C29603 * C79) *
              C624) *
         C29511) /
            (p * q * std::sqrt(p + q));
    d2eezx[4] += (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((C436 * C93 + C29603 * C437) * C90 +
                    (C436 * C101 + C29603 * C442) * C80 - C460 * C91 -
                    C461 * C81 + C462 * C92 + C463 * C82) *
                       C77 +
                   (C460 * C90 + C461 * C80 - C462 * C91 - C463 * C81 +
                    C464 * C92 + C465 * C82) *
                       C78 +
                   (C462 * C90 + C463 * C80 - C464 * C91 - C465 * C81 +
                    (C436 * C97 + C29603 * C441) * C92 +
                    (C436 * C107 + C29603 * C446) * C82) *
                       C79) *
                  C29588 * C29543 * C29532) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C436 * C93 + C29603 * C437) * C625 +
                     (C436 * C101 + C29603 * C442) * C29511) *
                        C77 +
                    (C460 * C625 + C461 * C29511) * C78 +
                    (C462 * C625 + C463 * C29511) * C79) *
                       C29588 * C29543 * C622 -
                   (((C436 * C632 + C29603 * C935) * C29511 +
                     (C436 * C626 + C29603 * C929) * C625) *
                        C79 +
                    ((C436 * C633 + C29603 * C936) * C29511 +
                     (C436 * C627 + C29603 * C930) * C625) *
                        C78 +
                    ((C436 * C634 + C29603 * C937) * C29511 +
                     (C436 * C628 + C29603 * C931) * C625) *
                        C77) *
                       C29588 * C29543 * C623 +
                   (((C436 * C629 + C29603 * C932) * C625 +
                     (C436 * C641 + C29603 * C938) * C29511) *
                        C77 +
                    ((C436 * C630 + C29603 * C933) * C625 +
                     (C436 * C642 + C29603 * C939) * C29511) *
                        C78 +
                    ((C436 * C631 + C29603 * C934) * C625 +
                     (C436 * C643 + C29603 * C940) * C29511) *
                        C79) *
                       C29588 * C29543 * C624)) /
                     (p * q * std::sqrt(p + q));
    d2eezy[4] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C436 * C93 + C29603 * C437) * C151 +
            (C436 * C152 + C29603 * C503) * C29532) *
               C77 +
           (C509 + C521) * C78 + C524 * C79) *
              C29588 * C80 -
          ((C523 + C517) * C79 + (C522 + C512) * C78 + (C521 + C509) * C77) *
              C29588 * C81 +
          (C524 * C77 + (C517 + C523) * C78 +
           ((C436 * C97 + C29603 * C441) * C151 +
            (C436 * C156 + C29603 * C507) * C29532) *
               C79) *
              C29588 * C82) *
         C29543) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C436 * C93 + C29603 * C437) * C688 +
           (C436 * C152 + C29603 * C503) * C622 -
           (C436 * C628 + C29603 * C931) * C689 -
           (C436 * C693 + C29603 * C979) * C623 +
           (C436 * C629 + C29603 * C932) * C690 +
           (C436 * C694 + C29603 * C980) * C624) *
              C77 +
          (C460 * C688 + C518 * C622 - (C436 * C627 + C29603 * C930) * C689 -
           (C436 * C692 + C29603 * C981) * C623 +
           (C436 * C630 + C29603 * C933) * C690 +
           (C436 * C695 + C29603 * C982) * C624) *
              C78 +
          (C462 * C688 + C519 * C622 - (C436 * C626 + C29603 * C929) * C689 -
           (C436 * C691 + C29603 * C983) * C623 +
           (C436 * C631 + C29603 * C934) * C690 +
           (C436 * C696 + C29603 * C984) * C624) *
              C79) *
         C29588 * C29511 * C29543) /
            (p * q * std::sqrt(p + q));
    d2eezz[4] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C436 * C93 + C29603 * C437) * C200 +
            (C436 * C201 + C29603 * C562) * C29543) *
               C77 +
           (C568 + C580) * C78 + C583 * C79) *
              C29588 * C29532 * C80 -
          ((C582 + C576) * C79 + (C581 + C571) * C78 + (C580 + C568) * C77) *
              C29588 * C29532 * C81 +
          (C583 * C77 + (C576 + C582) * C78 +
           ((C436 * C97 + C29603 * C441) * C200 +
            (C436 * C205 + C29603 * C566) * C29543) *
               C79) *
              C29588 * C29532 * C82)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C436 * C93 + C29603 * C437) * C200 +
            (C436 * C201 + C29603 * C562) * C29543) *
               C77 +
           (C568 + C580) * C78 + C583 * C79) *
              C29588 * C622 -
          (((C436 * C741 + C29603 * C1023) * C29543 +
            (C436 * C626 + C29603 * C929) * C200) *
               C79 +
           ((C436 * C742 + C29603 * C1024) * C29543 +
            (C436 * C627 + C29603 * C930) * C200) *
               C78 +
           ((C436 * C743 + C29603 * C1025) * C29543 +
            (C436 * C628 + C29603 * C931) * C200) *
               C77) *
              C29588 * C623 +
          (((C436 * C629 + C29603 * C932) * C200 +
            (C436 * C744 + C29603 * C1026) * C29543) *
               C77 +
           ((C436 * C630 + C29603 * C933) * C200 +
            (C436 * C745 + C29603 * C1027) * C29543) *
               C78 +
           ((C436 * C631 + C29603 * C934) * C200 +
            (C436 * C746 + C29603 * C1028) * C29543) *
               C79) *
              C29588 * C624) *
         C29511) /
            (p * q * std::sqrt(p + q));
    d2eexx[5] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C3113 * C93 + C3109 * C98 + C3114 * C94 + C29683 * C99) * C1527 +
            (C3113 * C101 + C3109 * C108 + C3114 * C102 + C29683 * C109) *
                C1523 -
            (C3114 * C95 + C29683 * C100 + C3113 * C94 + C3109 * C99) * C1528 -
            (C3114 * C103 + C29683 * C110 + C3113 * C102 + C3109 * C109) *
                C1524) *
               C3111 +
           ((C3644 + C3645) * C1527 + (C3646 + C3647) * C1523 -
            (C4706 + C4707) * C1528 - (C4708 + C4709) * C1524) *
               C29688) *
              C29603 * C29543 * C1525 +
          (((C4707 + C4706) * C1528 -
            ((C3647 + C3646) * C1523 + (C3645 + C3644) * C1527) +
            (C4709 + C4708) * C1524) *
               C3111 +
           ((C3113 * C630 + C3109 * C639 + C3114 * C631 + C29683 * C640) *
                C1528 -
            ((C3648 + C3649) * C1523 + (C3650 + C3651) * C1527) +
            (C3113 * C642 + C3109 * C648 + C3114 * C643 + C29683 * C649) *
                C1524) *
               C29688) *
              C29603 * C29543 * C1526)) /
        (p * q * std::sqrt(p + q));
    d2eexy[5] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C3113 * C93 + C3109 * C98 + C3114 * C94 + C29683 * C99) * C1583 +
            (C3113 * C152 + C3109 * C157 + C3114 * C153 + C29683 * C158) *
                C1525 -
            (C3645 + C3644) * C1584 - (C3714 + C3715) * C1526) *
               C3111 +
           ((C3644 + C3645) * C1583 + (C3715 + C3714) * C1525 -
            (C3650 + C3651) * C1584 - (C3717 + C3716) * C1526) *
               C29688) *
              C29603 * C1523 +
          (((C4707 + C4706) * C1584 -
            ((C3114 * C154 + C29683 * C159 + C3113 * C153 + C3109 * C158) *
                 C1525 +
             (C3114 * C95 + C29683 * C100 + C3113 * C94 + C3109 * C99) *
                 C1583) +
            (C4780 + C4781) * C1526) *
               C3111 +
           ((C3113 * C630 + C3109 * C639 + C3114 * C631 + C29683 * C640) *
                C1584 -
            ((C4781 + C4780) * C1525 + (C4706 + C4707) * C1583) +
            (C3113 * C695 + C3109 * C701 + C3114 * C696 + C29683 * C702) *
                C1526) *
               C29688) *
              C29603 * C1524) *
         C29543) /
        (p * q * std::sqrt(p + q));
    d2eexz[5] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C3113 * C93 + C3109 * C98 + C3114 * C94 + C29683 * C99) * C200 +
             (C3113 * C201 + C3109 * C206 + C3114 * C202 + C29683 * C207) *
                 C29543) *
                C3111 +
            ((C3644 + C3645) * C200 + (C3780 + C3781) * C29543) * C29688) *
               C29603 * C1525 -
           (((C3782 + C3783) * C29543 + (C3650 + C3651) * C200) * C29688 +
            ((C3781 + C3780) * C29543 + (C3645 + C3644) * C200) * C3111) *
               C29603 * C1526) *
              C1523 +
          ((((C4707 + C4706) * C200 + (C4852 + C4853) * C29543) * C3111 +
            ((C3113 * C630 + C3109 * C639 + C3114 * C631 + C29683 * C640) *
                 C200 +
             (C3113 * C745 + C3109 * C751 + C3114 * C746 + C29683 * C752) *
                 C29543) *
                C29688) *
               C29603 * C1526 -
           (((C4853 + C4852) * C29543 + (C4706 + C4707) * C200) * C29688 +
            ((C3114 * C203 + C29683 * C208 + C3113 * C202 + C3109 * C207) *
                 C29543 +
             (C3114 * C95 + C29683 * C100 + C3113 * C94 + C3109 * C99) * C200) *
                C3111) *
               C29603 * C1525) *
              C1524)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[5] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C3265 * C93 + C3111 * C250 + C3266 * C628 + C29688 * C793) *
                C1527 +
            (C3265 * C101 + C3111 * C255 + C3266 * C634 + C29688 * C799) *
                C1523 -
            (C3284 + C3285) * C1528 - (C3286 + C3287) * C1524) *
               C29603 * C3109 +
           ((C3285 + C3284) * C1527 + (C3287 + C3286) * C1523 -
            (C3289 + C3288) * C1528 - (C3291 + C3290) * C1524) *
               C29603 * C29683) *
              C29543 * C1525 +
          (((C4928 + C4929) * C1528 -
            ((C3266 * C641 + C29688 * C800 + C3265 * C634 + C3111 * C799) *
                 C1523 +
             (C3266 * C629 + C29688 * C794 + C3265 * C628 + C3111 * C793) *
                 C1527) +
            (C4930 + C4931) * C1524) *
               C29603 * C3109 +
           ((C3265 * C626 + C3111 * C791 + C3266 * C631 + C29688 * C796) *
                C1528 -
            ((C4931 + C4930) * C1523 + (C4929 + C4928) * C1527) +
            (C3265 * C632 + C3111 * C797 + C3266 * C643 + C29688 * C802) *
                C1524) *
               C29603 * C29683) *
              C29543 * C1526)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[5] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C3265 * C93 + C3111 * C250 + C3266 * C628 + C29688 * C793) *
                C1583 +
            (C3265 * C152 + C3111 * C316 + C3266 * C693 + C29688 * C841) *
                C1525 -
            (C3266 * C629 + C29688 * C794 + C3265 * C628 + C3111 * C793) *
                C1584 -
            (C3266 * C694 + C29688 * C842 + C3265 * C693 + C3111 * C841) *
                C1526) *
               C29603 * C3109 +
           ((C3285 + C3284) * C1583 + (C3350 + C3351) * C1525 -
            (C4929 + C4928) * C1584 - (C5002 + C5003) * C1526) *
               C29603 * C29683) *
              C1523 +
          (((C4928 + C4929) * C1584 -
            ((C3351 + C3350) * C1525 + (C3284 + C3285) * C1583) +
            (C5003 + C5002) * C1526) *
               C29603 * C3109 +
           ((C3265 * C626 + C3111 * C791 + C3266 * C631 + C29688 * C796) *
                C1584 -
            ((C3352 + C3353) * C1525 + (C3289 + C3288) * C1583) +
            (C3265 * C691 + C3111 * C845 + C3266 * C696 + C29688 * C846) *
                C1526) *
               C29603 * C29683) *
              C1524) *
         C29543) /
        (p * q * std::sqrt(p + q));
    d2eeyz[5] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C3265 * C93 + C3111 * C250 + C3266 * C628 + C29688 * C793) *
                 C200 +
             (C3265 * C201 + C3111 * C376 + C3266 * C743 + C29688 * C887) *
                 C29543) *
                C29603 * C3109 +
            ((C3285 + C3284) * C200 + (C3412 + C3413) * C29543) * C29603 *
                C29683) *
               C1525 -
           (((C5074 + C5075) * C29543 + (C4929 + C4928) * C200) * C29603 *
                C29683 +
            ((C3266 * C744 + C29688 * C888 + C3265 * C743 + C3111 * C887) *
                 C29543 +
             (C3266 * C629 + C29688 * C794 + C3265 * C628 + C3111 * C793) *
                 C200) *
                C29603 * C3109) *
               C1526) *
              C1523 +
          ((((C4928 + C4929) * C200 + (C5075 + C5074) * C29543) * C29603 *
                C3109 +
            ((C3265 * C626 + C3111 * C791 + C3266 * C631 + C29688 * C796) *
                 C200 +
             (C3265 * C741 + C3111 * C885 + C3266 * C746 + C29688 * C890) *
                 C29543) *
                C29603 * C29683) *
               C1526 -
           (((C3414 + C3415) * C29543 + (C3289 + C3288) * C200) * C29603 *
                C29683 +
            ((C3413 + C3412) * C29543 + (C3284 + C3285) * C200) * C29603 *
                C3109) *
               C1525) *
              C1524)) /
        (p * q * std::sqrt(p + q));
    d2eezx[5] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C436 * C93 + C29603 * C437) * C1527 +
             (C436 * C101 + C29603 * C442) * C1523 - C460 * C1528 -
             C461 * C1524) *
                C3109 +
            (C460 * C1527 + C461 * C1523 - C462 * C1528 - C463 * C1524) *
                C29683) *
               C3111 +
           ((C5142 + C5143 - C5144 - C5145) * C3109 +
            (C5146 + C5147 - C5148 - C5149) * C29683) *
               C29688) *
              C29543 * C1525 +
          (((C5144 - (C5143 + C5142) + C5145) * C3109 +
            (C5148 - (C5147 + C5146) + C5149) * C29683) *
               C3111 +
           ((C4013 * C1528 - (C4014 * C1523 + C4015 * C1527) + C4012 * C1524) *
                C3109 +
            ((C436 * C631 + C29603 * C934) * C1528 -
             (C4012 * C1523 + C4013 * C1527) +
             (C436 * C643 + C29603 * C940) * C1524) *
                C29683) *
               C29688) *
              C29543 * C1526)) /
        (p * q * std::sqrt(p + q));
    d2eezy[5] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C436 * C93 + C29603 * C437) * C1583 +
             (C436 * C152 + C29603 * C503) * C1525 - C4010 * C1584 -
             C4080 * C1526) *
                C3109 +
            (C1945 + C1946 - C1947 - C1957) * C29683) *
               C3111 +
           ((C4010 * C1583 + C4080 * C1525 - C4015 * C1584 - C4081 * C1526) *
                C3109 +
            (C5216 + C5217 - C5218 - C5219) * C29683) *
               C29688) *
              C1523 +
          (((C1947 - (C1946 + C1945) + C1957) * C3109 +
            (C1952 - (C1951 + C1950) + C1958) * C29683) *
               C3111 +
           ((C5218 - (C5217 + C5216) + C5219) * C3109 +
            ((C436 * C631 + C29603 * C934) * C1584 -
             (C1956 * C1525 + C1892 * C1583) +
             (C436 * C696 + C29603 * C984) * C1526) *
                C29683) *
               C29688) *
              C1524) *
         C29543) /
        (p * q * std::sqrt(p + q));
    d2eezz[5] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C436 * C93 + C29603 * C437) * C200 +
              (C436 * C201 + C29603 * C562) * C29543) *
                 C3109 +
             (C568 + C580) * C29683) *
                C3111 +
            ((C4135 + C4147) * C3109 + C5286 * C29683) * C29688) *
               C1525 -
           (((C4148 + C4140) * C29683 + (C4149 + C4143) * C3109) * C29688 +
            (C5287 * C29683 + (C4147 + C4135) * C3109) * C3111) *
               C1526) *
              C1523 +
          (((C5286 * C3109 + (C2012 + C2018) * C29683) * C3111 +
            ((C4140 + C4148) * C3109 +
             ((C436 * C631 + C29603 * C934) * C200 +
              (C436 * C746 + C29603 * C1028) * C29543) *
                 C29683) *
                C29688) *
               C1526 -
           (((C2018 + C2012) * C29683 + C5287 * C3109) * C29688 +
            ((C581 + C571) * C29683 + (C580 + C568) * C3109) * C3111) *
               C1525) *
              C1524)) /
        (p * q * std::sqrt(p + q));
    d2eexx[6] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C3113 * C93 + C3109 * C98 + C3114 * C94 + C29683 * C99) * C625 +
             (C3113 * C101 + C3109 * C108 + C3114 * C102 + C29683 * C109) *
                 C29511) *
                C3111 +
            ((C3644 + C3645) * C625 + (C3646 + C3647) * C29511) * C29688) *
               C29603 * C2069 -
           (((C6006 + C6007) * C29511 + (C6008 + C6009) * C625) * C29688 +
            ((C3114 * C1077 + C29683 * C1089 + C3113 * C1078 + C3109 * C1090) *
                 C29511 +
             (C3114 * C1071 + C29683 * C1080 + C3113 * C1072 + C3109 * C1081) *
                 C625) *
                C3111) *
               C29603 * C2070) *
              C1525 +
          ((((C6009 + C6008) * C625 + (C6007 + C6006) * C29511) * C3111 +
            ((C3113 * C5989 + C3109 * C5991 + C3114 * C5990 + C29683 * C5992) *
                 C625 +
             (C3113 * C5993 + C3109 * C5995 + C3114 * C5994 + C29683 * C5996) *
                 C29511) *
                C29688) *
               C29603 * C2070 -
           (((C3648 + C3649) * C29511 + (C3650 + C3651) * C625) * C29688 +
            ((C3647 + C3646) * C29511 + (C3645 + C3644) * C625) * C3111) *
               C29603 * C2069) *
              C1526)) /
        (p * q * std::sqrt(p + q));
    d2eexy[6] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C3113 * C93 + C3109 * C98 + C3114 * C94 + C29683 * C99) * C1583 +
            (C3113 * C152 + C3109 * C157 + C3114 * C153 + C29683 * C158) *
                C1525 -
            (C3645 + C3644) * C1584 - (C3714 + C3715) * C1526) *
               C3111 +
           ((C3644 + C3645) * C1583 + (C3715 + C3714) * C1525 -
            (C3650 + C3651) * C1584 - (C3717 + C3716) * C1526) *
               C29688) *
              C29603 * C29511 * C2069 +
          (((C6009 + C6008) * C1584 -
            ((C3114 * C1133 + C29683 * C1139 + C3113 * C1134 + C3109 * C1140) *
                 C1525 +
             (C3114 * C1071 + C29683 * C1080 + C3113 * C1072 + C3109 * C1081) *
                 C1583) +
            (C6084 + C6085) * C1526) *
               C3111 +
           ((C3113 * C5989 + C3109 * C5991 + C3114 * C5990 + C29683 * C5992) *
                C1584 -
            ((C6085 + C6084) * C1525 + (C6008 + C6009) * C1583) +
            (C3113 * C6075 + C3109 * C6077 + C3114 * C6076 + C29683 * C6078) *
                C1526) *
               C29688) *
              C29603 * C29511 * C2070)) /
        (p * q * std::sqrt(p + q));
    d2eexz[6] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C3113 * C93 + C3109 * C98 + C3114 * C94 + C29683 * C99) * C2177 +
            (C3113 * C201 + C3109 * C206 + C3114 * C202 + C29683 * C207) *
                C2069 -
            (C3114 * C1071 + C29683 * C1080 + C3113 * C1072 + C3109 * C1081) *
                C2178 -
            (C3114 * C1186 + C29683 * C1192 + C3113 * C1187 + C3109 * C1193) *
                C2070) *
               C3111 +
           ((C3644 + C3645) * C2177 + (C3780 + C3781) * C2069 -
            (C6008 + C6009) * C2178 - (C6160 + C6161) * C2070) *
               C29688) *
              C29603 * C1525 +
          (((C6009 + C6008) * C2178 -
            ((C3781 + C3780) * C2069 + (C3645 + C3644) * C2177) +
            (C6161 + C6160) * C2070) *
               C3111 +
           ((C3113 * C5989 + C3109 * C5991 + C3114 * C5990 + C29683 * C5992) *
                C2178 -
            ((C3782 + C3783) * C2069 + (C3650 + C3651) * C2177) +
            (C3113 * C6151 + C3109 * C6153 + C3114 * C6152 + C29683 * C6154) *
                C2070) *
               C29688) *
              C29603 * C1526) *
         C29511) /
        (p * q * std::sqrt(p + q));
    d2eeyx[6] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C3265 * C93 + C3111 * C250 + C3266 * C628 + C29688 * C793) *
                 C625 +
             (C3265 * C101 + C3111 * C255 + C3266 * C634 + C29688 * C799) *
                 C29511) *
                C29603 * C3109 +
            ((C3285 + C3284) * C625 + (C3287 + C3286) * C29511) * C29603 *
                C29683) *
               C2069 -
           (((C5563 + C5562) * C29511 + (C5561 + C5560) * C625) * C29603 *
                C29683 +
            ((C3266 * C2617 + C29688 * C2788 + C3265 * C1078 + C3111 * C1243) *
                 C29511 +
             (C3266 * C2611 + C29688 * C2785 + C3265 * C1072 + C3111 * C1237) *
                 C625) *
                C29603 * C3109) *
               C2070) *
              C1525 +
          ((((C3265 * C2611 + C3111 * C2785 + C3266 * C5989 + C29688 * C6227) *
                 C625 +
             (C3265 * C2617 + C3111 * C2788 + C3266 * C5993 + C29688 * C6229) *
                 C29511) *
                C29603 * C3109 +
            ((C3265 * C2612 + C3111 * C2786 + C3266 * C5990 + C29688 * C6228) *
                 C625 +
             (C3265 * C2618 + C3111 * C2789 + C3266 * C5994 + C29688 * C6230) *
                 C29511) *
                C29603 * C29683) *
               C2070 -
           (((C4931 + C4930) * C29511 + (C4929 + C4928) * C625) * C29603 *
                C29683 +
            ((C3266 * C641 + C29688 * C800 + C3265 * C634 + C3111 * C799) *
                 C29511 +
             (C3266 * C629 + C29688 * C794 + C3265 * C628 + C3111 * C793) *
                 C625) *
                C29603 * C3109) *
               C2069) *
              C1526)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[6] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C3265 * C93 + C3111 * C250 + C3266 * C628 + C29688 * C793) *
                C1583 +
            (C3265 * C152 + C3111 * C316 + C3266 * C693 + C29688 * C841) *
                C1525 -
            (C3266 * C629 + C29688 * C794 + C3265 * C628 + C3111 * C793) *
                C1584 -
            (C3266 * C694 + C29688 * C842 + C3265 * C693 + C3111 * C841) *
                C1526) *
               C29603 * C3109 +
           ((C3285 + C3284) * C1583 + (C3350 + C3351) * C1525 -
            (C4929 + C4928) * C1584 - (C5002 + C5003) * C1526) *
               C29603 * C29683) *
              C29511 * C2069 +
          (((C3265 * C2611 + C3111 * C2785 + C3266 * C5989 + C29688 * C6227) *
                C1584 -
            ((C3266 * C2673 + C29688 * C2841 + C3265 * C1134 + C3111 * C1287) *
                 C1525 +
             (C3266 * C2611 + C29688 * C2785 + C3265 * C1072 + C3111 * C1237) *
                 C1583) +
            (C3265 * C2673 + C3111 * C2841 + C3266 * C6075 + C29688 * C6297) *
                C1526) *
               C29603 * C3109 +
           ((C3265 * C2612 + C3111 * C2786 + C3266 * C5990 + C29688 * C6228) *
                C1584 -
            ((C5635 + C5634) * C1525 + (C5561 + C5560) * C1583) +
            (C3265 * C2674 + C3111 * C2842 + C3266 * C6076 + C29688 * C6298) *
                C1526) *
               C29603 * C29683) *
              C29511 * C2070)) /
        (p * q * std::sqrt(p + q));
    d2eeyz[6] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C3265 * C93 + C3111 * C250 + C3266 * C628 + C29688 * C793) *
                C2177 +
            (C3265 * C201 + C3111 * C376 + C3266 * C743 + C29688 * C887) *
                C2069 -
            (C3266 * C2611 + C29688 * C2785 + C3265 * C1072 + C3111 * C1237) *
                C2178 -
            (C3266 * C2729 + C29688 * C2894 + C3265 * C1187 + C3111 * C1329) *
                C2070) *
               C29603 * C3109 +
           ((C3285 + C3284) * C2177 + (C3412 + C3413) * C2069 -
            (C5561 + C5560) * C2178 - (C5706 + C5707) * C2070) *
               C29603 * C29683) *
              C1525 +
          (((C3265 * C2611 + C3111 * C2785 + C3266 * C5989 + C29688 * C6227) *
                C2178 -
            ((C3266 * C744 + C29688 * C888 + C3265 * C743 + C3111 * C887) *
                 C2069 +
             (C3266 * C629 + C29688 * C794 + C3265 * C628 + C3111 * C793) *
                 C2177) +
            (C3265 * C2729 + C3111 * C2894 + C3266 * C6151 + C29688 * C6365) *
                C2070) *
               C29603 * C3109 +
           ((C3265 * C2612 + C3111 * C2786 + C3266 * C5990 + C29688 * C6228) *
                C2178 -
            ((C5074 + C5075) * C2069 + (C4929 + C4928) * C2177) +
            (C3265 * C2730 + C3111 * C2895 + C3266 * C6152 + C29688 * C6366) *
                C2070) *
               C29603 * C29683) *
              C1526) *
         C29511) /
        (p * q * std::sqrt(p + q));
    d2eezx[6] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C436 * C93 + C29603 * C437) * C625 +
              (C436 * C101 + C29603 * C442) * C29511) *
                 C3109 +
             (C460 * C625 + C461 * C29511) * C29683) *
                C3111 +
            ((C4016 + C4017) * C3109 + (C4000 + C4001) * C29683) * C29688) *
               C2069 -
           (((C6438 + C6439) * C29683 + (C6446 + C6447) * C3109) * C29688 +
            ((C2433 * C29511 + C2432 * C625) * C29683 +
             ((C436 * C1078 + C29603 * C1381) * C29511 +
              (C436 * C1072 + C29603 * C1375) * C625) *
                 C3109) *
                C3111) *
               C2070) *
              C1525 +
          ((((C6447 + C6446) * C3109 + (C6439 + C6438) * C29683) * C3111 +
            (((C436 * C5989 + C29603 * C6433) * C625 +
              (C436 * C5993 + C29603 * C6435) * C29511) *
                 C3109 +
             ((C436 * C5990 + C29603 * C6434) * C625 +
              (C436 * C5994 + C29603 * C6436) * C29511) *
                 C29683) *
                C29688) *
               C2070 -
           (((C4018 + C4019) * C29683 + (C4020 + C4021) * C3109) * C29688 +
            ((C4001 + C4000) * C29683 + (C4017 + C4016) * C3109) * C3111) *
               C2069) *
              C1526)) /
        (p * q * std::sqrt(p + q));
    d2eezy[6] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C436 * C93 + C29603 * C437) * C1583 +
             (C436 * C152 + C29603 * C503) * C1525 - C4010 * C1584 -
             C4080 * C1526) *
                C3109 +
            (C1945 + C1946 - C1947 - C1957) * C29683) *
               C3111 +
           ((C4010 * C1583 + C4080 * C1525 - C4015 * C1584 - C4081 * C1526) *
                C3109 +
            (C5216 + C5217 - C5218 - C5219) * C29683) *
               C29688) *
              C29511 * C2069 +
          (((C6445 * C1584 -
             ((C436 * C1134 + C29603 * C1425) * C1525 +
              (C436 * C1072 + C29603 * C1375) * C1583) +
             C6518 * C1526) *
                C3109 +
            (C5778 * C1584 - (C2493 * C1525 + C2432 * C1583) + C5849 * C1526) *
                C29683) *
               C3111 +
           (((C436 * C5989 + C29603 * C6433) * C1584 -
             (C6518 * C1525 + C6445 * C1583) +
             (C436 * C6075 + C29603 * C6513) * C1526) *
                C3109 +
            ((C436 * C5990 + C29603 * C6434) * C1584 -
             (C5849 * C1525 + C5778 * C1583) +
             (C436 * C6076 + C29603 * C6514) * C1526) *
                C29683) *
               C29688) *
              C29511 * C2070)) /
        (p * q * std::sqrt(p + q));
    d2eezz[6] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  (((((C436 * C93 + C29603 * C437) * C2177 +
                      (C436 * C201 + C29603 * C562) * C2069 -
                      (C436 * C1072 + C29603 * C1375) * C2178 -
                      (C436 * C1187 + C29603 * C1467) * C2070) *
                         C3109 +
                     (C2548 + C2549 - C2550 - C2560) * C29683) *
                        C3111 +
                    ((C6587 + C6588 - C6589 - C6593) * C3109 +
                     (C5917 + C5918 - C5919 - C5923) * C29683) *
                        C29688) *
                       C1525 +
                   (((C6589 - (C6588 + C6587) + C6593) * C3109 +
                     (C5919 - (C5918 + C5917) + C5923) * C29683) *
                        C3111 +
                    (((C436 * C5989 + C29603 * C6433) * C2178 -
                      (C4146 * C2069 + C4015 * C2177) +
                      (C436 * C6151 + C29603 * C6584) * C2070) *
                         C3109 +
                     ((C436 * C5990 + C29603 * C6434) * C2178 -
                      (C4145 * C2069 + C4013 * C2177) +
                      (C436 * C6152 + C29603 * C6585) * C2070) *
                         C29683) *
                        C29688) *
                       C1526) *
                  C29511) /
                 (p * q * std::sqrt(p + q));
    d2eexx[7] +=
        (-std::pow(Pi, 2.5) *
         ((((C3113 * C93 + C3109 * C98 + C3114 * C94 + C29683 * C99) * C625 +
            (C3113 * C101 + C3109 * C108 + C3114 * C102 + C29683 * C109) *
                C29511) *
               C3111 +
           ((C3644 + C3645) * C625 + (C3646 + C3647) * C29511) * C29688) *
              C29603 * C29543 * C622 -
          (((C3648 + C3649) * C29511 + (C3650 + C3651) * C625) * C29688 +
           ((C3647 + C3646) * C29511 + (C3645 + C3644) * C625) * C3111) *
              C29603 * C29543 * C623 +
          (((C3651 + C3650) * C625 + (C3649 + C3648) * C29511) * C3111 +
           ((C3113 * C3619 + C3109 * C3621 + C3114 * C3620 + C29683 * C3622) *
                C625 +
            (C3113 * C3623 + C3109 * C3625 + C3114 * C3624 + C29683 * C3626) *
                C29511) *
               C29688) *
              C29603 * C29543 * C624)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C3113 * C93 + C3109 * C98 + C3114 * C94 + C29683 * C99) * C90 +
           (C3113 * C101 + C3109 * C108 + C3114 * C102 + C29683 * C109) * C80 -
           (C3114 * C95 + C29683 * C100 + C3113 * C94 + C3109 * C99) * C91 -
           (C3114 * C103 + C29683 * C110 + C3113 * C102 + C3109 * C109) * C81 +
           (C3113 * C95 + C3109 * C100 + C3114 * C96 + C29683 * C104) * C92 +
           (C3113 * C103 + C3109 * C110 + C3114 * C105 + C29683 * C111) * C82) *
              C3111 +
          ((C3113 * C628 + C3109 * C637 + C3114 * C627 + C29683 * C636) * C90 +
           (C3113 * C634 + C3109 * C646 + C3114 * C633 + C29683 * C645) * C80 -
           (C3114 * C626 + C29683 * C635 + C3113 * C627 + C3109 * C636) * C91 -
           (C3114 * C632 + C29683 * C644 + C3113 * C633 + C3109 * C645) * C81 +
           (C3113 * C626 + C3109 * C635 + C3114 * C1529 + C29683 * C1530) *
               C92 +
           (C3113 * C632 + C3109 * C644 + C3114 * C1531 + C29683 * C1532) *
               C82) *
              C29688) *
         C29603 * C29543 * C29532) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C3113 * C93 + C3109 * C98 + C3114 * C94 + C29683 * C99) * C625 +
            (C3113 * C101 + C3109 * C108 + C3114 * C102 + C29683 * C109) *
                C29511) *
               C3111 +
           ((C3644 + C3645) * C625 + (C3646 + C3647) * C29511) * C29688) *
              C29603 * C1067 -
          (((C3114 * C2618 + C29683 * C2621 + C3113 * C2617 + C3109 * C2620) *
                C29511 +
            (C3114 * C2612 + C29683 * C2615 + C3113 * C2611 + C3109 * C2614) *
                C625) *
               C29688 +
           ((C3114 * C1077 + C29683 * C1089 + C3113 * C1078 + C3109 * C1090) *
                C29511 +
            (C3114 * C1071 + C29683 * C1080 + C3113 * C1072 + C3109 * C1081) *
                C625) *
               C3111) *
              C29603 * C1068 +
          (((C3113 * C1073 + C3109 * C1082 + C3114 * C1074 + C29683 * C1083) *
                C625 +
            (C3113 * C1085 + C3109 * C1091 + C3114 * C1086 + C29683 * C1092) *
                C29511) *
               C3111 +
           ((C3113 * C4199 + C3109 * C4201 + C3114 * C4200 + C29683 * C4202) *
                C625 +
            (C3113 * C4203 + C3109 * C4205 + C3114 * C4204 + C29683 * C4206) *
                C29511) *
               C29688) *
              C29603 * C1069) *
         C29532) /
            (p * q * std::sqrt(p + q));
    d2eexy[7] +=
        (-std::pow(Pi, 2.5) *
         (((C3113 * C93 + C3109 * C98 + C3114 * C94 + C29683 * C99) * C688 +
           (C3113 * C152 + C3109 * C157 + C3114 * C153 + C29683 * C158) * C622 -
           (C3645 + C3644) * C689 - (C3714 + C3715) * C623 +
           (C3651 + C3650) * C690 + (C3716 + C3717) * C624) *
              C3111 +
          ((C3644 + C3645) * C688 + (C3715 + C3714) * C622 -
           (C3650 + C3651) * C689 - (C3717 + C3716) * C623 +
           (C3113 * C3619 + C3109 * C3621 + C3114 * C3620 + C29683 * C3622) *
               C690 +
           (C3113 * C3701 + C3109 * C3703 + C3114 * C3702 + C29683 * C3704) *
               C624) *
              C29688) *
         C29603 * C29511 * C29543) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C3113 * C93 + C3109 * C98 + C3114 * C94 + C29683 * C99) * C151 +
            (C3113 * C152 + C3109 * C157 + C3114 * C153 + C29683 * C158) *
                C29532) *
               C3111 +
           ((C3113 * C628 + C3109 * C637 + C3114 * C627 + C29683 * C636) *
                C151 +
            (C3113 * C693 + C3109 * C699 + C3114 * C692 + C29683 * C698) *
                C29532) *
               C29688) *
              C29603 * C80 -
          (((C3114 * C691 + C29683 * C697 + C3113 * C692 + C3109 * C698) *
                C29532 +
            (C3114 * C626 + C29683 * C635 + C3113 * C627 + C3109 * C636) *
                C151) *
               C29688 +
           ((C3114 * C154 + C29683 * C159 + C3113 * C153 + C3109 * C158) *
                C29532 +
            (C3114 * C95 + C29683 * C100 + C3113 * C94 + C3109 * C99) * C151) *
               C3111) *
              C29603 * C81 +
          (((C3113 * C95 + C3109 * C100 + C3114 * C96 + C29683 * C104) * C151 +
            (C3113 * C154 + C3109 * C159 + C3114 * C155 + C29683 * C160) *
                C29532) *
               C3111 +
           ((C3113 * C626 + C3109 * C635 + C3114 * C1529 + C29683 * C1530) *
                C151 +
            (C3113 * C691 + C3109 * C697 + C3114 * C1585 + C29683 * C1586) *
                C29532) *
               C29688) *
              C29603 * C82) *
         C29543) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C3113 * C93 + C3109 * C98 + C3114 * C94 + C29683 * C99) * C151 +
            (C3113 * C152 + C3109 * C157 + C3114 * C153 + C29683 * C158) *
                C29532) *
               C3111 +
           ((C3644 + C3645) * C151 + (C3715 + C3714) * C29532) * C29688) *
              C29603 * C29511 * C1067 -
          (((C3114 * C2674 + C29683 * C2677 + C3113 * C2673 + C3109 * C2676) *
                C29532 +
            (C3114 * C2612 + C29683 * C2615 + C3113 * C2611 + C3109 * C2614) *
                C151) *
               C29688 +
           ((C3114 * C1133 + C29683 * C1139 + C3113 * C1134 + C3109 * C1140) *
                C29532 +
            (C3114 * C1071 + C29683 * C1080 + C3113 * C1072 + C3109 * C1081) *
                C151) *
               C3111) *
              C29603 * C29511 * C1068 +
          (((C3113 * C1073 + C3109 * C1082 + C3114 * C1074 + C29683 * C1083) *
                C151 +
            (C3113 * C1135 + C3109 * C1141 + C3114 * C1136 + C29683 * C1142) *
                C29532) *
               C3111 +
           ((C3113 * C4199 + C3109 * C4201 + C3114 * C4200 + C29683 * C4202) *
                C151 +
            (C3113 * C4257 + C3109 * C4259 + C3114 * C4258 + C29683 * C4260) *
                C29532) *
               C29688) *
              C29603 * C29511 * C1069)) /
            (p * q * std::sqrt(p + q));
    d2eexz[7] +=
        (-std::pow(Pi, 2.5) *
         ((((C3113 * C93 + C3109 * C98 + C3114 * C94 + C29683 * C99) * C200 +
            (C3113 * C201 + C3109 * C206 + C3114 * C202 + C29683 * C207) *
                C29543) *
               C3111 +
           ((C3644 + C3645) * C200 + (C3780 + C3781) * C29543) * C29688) *
              C29603 * C622 -
          (((C3782 + C3783) * C29543 + (C3650 + C3651) * C200) * C29688 +
           ((C3781 + C3780) * C29543 + (C3645 + C3644) * C200) * C3111) *
              C29603 * C623 +
          (((C3651 + C3650) * C200 + (C3783 + C3782) * C29543) * C3111 +
           ((C3113 * C3619 + C3109 * C3621 + C3114 * C3620 + C29683 * C3622) *
                C200 +
            (C3113 * C3767 + C3109 * C3769 + C3114 * C3768 + C29683 * C3770) *
                C29543) *
               C29688) *
              C29603 * C624) *
         C29511) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C3113 * C93 + C3109 * C98 + C3114 * C94 + C29683 * C99) * C200 +
            (C3113 * C201 + C3109 * C206 + C3114 * C202 + C29683 * C207) *
                C29543) *
               C3111 +
           ((C3113 * C628 + C3109 * C637 + C3114 * C627 + C29683 * C636) *
                C200 +
            (C3113 * C743 + C3109 * C749 + C3114 * C742 + C29683 * C748) *
                C29543) *
               C29688) *
              C29603 * C29532 * C80 -
          (((C3114 * C741 + C29683 * C747 + C3113 * C742 + C3109 * C748) *
                C29543 +
            (C3114 * C626 + C29683 * C635 + C3113 * C627 + C3109 * C636) *
                C200) *
               C29688 +
           ((C3114 * C203 + C29683 * C208 + C3113 * C202 + C3109 * C207) *
                C29543 +
            (C3114 * C95 + C29683 * C100 + C3113 * C94 + C3109 * C99) * C200) *
               C3111) *
              C29603 * C29532 * C81 +
          (((C3113 * C95 + C3109 * C100 + C3114 * C96 + C29683 * C104) * C200 +
            (C3113 * C203 + C3109 * C208 + C3114 * C204 + C29683 * C209) *
                C29543) *
               C3111 +
           ((C3113 * C626 + C3109 * C635 + C3114 * C1529 + C29683 * C1530) *
                C200 +
            (C3113 * C741 + C3109 * C747 + C3114 * C1637 + C29683 * C1638) *
                C29543) *
               C29688) *
              C29603 * C29532 * C82)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C3113 * C93 + C3109 * C98 + C3114 * C94 + C29683 * C99) * C1182 +
           (C3113 * C201 + C3109 * C206 + C3114 * C202 + C29683 * C207) *
               C1067 -
           (C3114 * C1071 + C29683 * C1080 + C3113 * C1072 + C3109 * C1081) *
               C1183 -
           (C3114 * C1186 + C29683 * C1192 + C3113 * C1187 + C3109 * C1193) *
               C1068 +
           (C3113 * C1073 + C3109 * C1082 + C3114 * C1074 + C29683 * C1083) *
               C1184 +
           (C3113 * C1188 + C3109 * C1194 + C3114 * C1189 + C29683 * C1195) *
               C1069) *
              C3111 +
          ((C3644 + C3645) * C1182 + (C3780 + C3781) * C1067 -
           (C3114 * C2612 + C29683 * C2615 + C3113 * C2611 + C3109 * C2614) *
               C1183 -
           (C3114 * C2730 + C29683 * C2733 + C3113 * C2729 + C3109 * C2732) *
               C1068 +
           (C3113 * C4199 + C3109 * C4201 + C3114 * C4200 + C29683 * C4202) *
               C1184 +
           (C3113 * C4311 + C3109 * C4313 + C3114 * C4312 + C29683 * C4314) *
               C1069) *
              C29688) *
         C29603 * C29532 * C29511) /
            (p * q * std::sqrt(p + q));
    d2eeyx[7] +=
        (-std::pow(Pi, 2.5) *
         ((((C3265 * C93 + C3111 * C250 + C3266 * C628 + C29688 * C793) * C625 +
            (C3265 * C101 + C3111 * C255 + C3266 * C634 + C29688 * C799) *
                C29511) *
               C29603 * C3109 +
           ((C3285 + C3284) * C625 + (C3287 + C3286) * C29511) * C29603 *
               C29683) *
              C29543 * C622 -
          (((C3266 * C642 + C29688 * C801 + C3265 * C633 + C3111 * C798) *
                C29511 +
            (C3266 * C630 + C29688 * C795 + C3265 * C627 + C3111 * C792) *
                C625) *
               C29603 * C29683 +
           ((C3266 * C641 + C29688 * C800 + C3265 * C634 + C3111 * C799) *
                C29511 +
            (C3266 * C629 + C29688 * C794 + C3265 * C628 + C3111 * C793) *
                C625) *
               C29603 * C3109) *
              C29543 * C623 +
          (((C3265 * C629 + C3111 * C794 + C3266 * C3619 + C29688 * C3833) *
                C625 +
            (C3265 * C641 + C3111 * C800 + C3266 * C3623 + C29688 * C3835) *
                C29511) *
               C29603 * C3109 +
           ((C3265 * C630 + C3111 * C795 + C3266 * C3620 + C29688 * C3834) *
                C625 +
            (C3265 * C642 + C3111 * C801 + C3266 * C3624 + C29688 * C3836) *
                C29511) *
               C29603 * C29683) *
              C29543 * C624)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C3265 * C93 + C3111 * C250 + C3266 * C628 + C29688 * C793) * C90 +
           (C3265 * C101 + C3111 * C255 + C3266 * C634 + C29688 * C799) * C80 -
           (C3284 + C3285) * C91 - (C3286 + C3287) * C81 +
           (C3288 + C3289) * C92 + (C3290 + C3291) * C82) *
              C29603 * C3109 +
          ((C3285 + C3284) * C90 + (C3287 + C3286) * C80 -
           (C3289 + C3288) * C91 - (C3291 + C3290) * C81 +
           (C3265 * C96 + C3111 * C253 + C3266 * C1529 + C29688 * C1689) * C92 +
           (C3265 * C105 + C3111 * C258 + C3266 * C1531 + C29688 * C1690) *
               C82) *
              C29603 * C29683) *
         C29543 * C29532) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C3265 * C93 + C3111 * C250 + C3266 * C628 + C29688 * C793) * C625 +
            (C3265 * C101 + C3111 * C255 + C3266 * C634 + C29688 * C799) *
                C29511) *
               C29603 * C3109 +
           ((C3285 + C3284) * C625 + (C3287 + C3286) * C29511) * C29603 *
               C29683) *
              C1067 -
          (((C3266 * C2618 + C29688 * C2789 + C3265 * C1077 + C3111 * C1242) *
                C29511 +
            (C3266 * C2612 + C29688 * C2786 + C3265 * C1071 + C3111 * C1236) *
                C625) *
               C29603 * C29683 +
           ((C3266 * C2617 + C29688 * C2788 + C3265 * C1078 + C3111 * C1243) *
                C29511 +
            (C3266 * C2611 + C29688 * C2785 + C3265 * C1072 + C3111 * C1237) *
                C625) *
               C29603 * C3109) *
              C1068 +
          (((C3265 * C1073 + C3111 * C1238 + C3266 * C4199 + C29688 * C4365) *
                C625 +
            (C3265 * C1085 + C3111 * C1244 + C3266 * C4203 + C29688 * C4367) *
                C29511) *
               C29603 * C3109 +
           ((C3265 * C1074 + C3111 * C1239 + C3266 * C4200 + C29688 * C4366) *
                C625 +
            (C3265 * C1086 + C3111 * C1245 + C3266 * C4204 + C29688 * C4368) *
                C29511) *
               C29603 * C29683) *
              C1069) *
         C29532) /
            (p * q * std::sqrt(p + q));
    d2eeyy[7] +=
        (-std::pow(Pi, 2.5) *
         (((C3265 * C93 + C3111 * C250 + C3266 * C628 + C29688 * C793) * C688 +
           (C3265 * C152 + C3111 * C316 + C3266 * C693 + C29688 * C841) * C622 -
           (C3266 * C629 + C29688 * C794 + C3265 * C628 + C3111 * C793) * C689 -
           (C3266 * C694 + C29688 * C842 + C3265 * C693 + C3111 * C841) * C623 +
           (C3265 * C629 + C3111 * C794 + C3266 * C3619 + C29688 * C3833) *
               C690 +
           (C3265 * C694 + C3111 * C842 + C3266 * C3701 + C29688 * C3887) *
               C624) *
              C29603 * C3109 +
          ((C3285 + C3284) * C688 + (C3350 + C3351) * C622 -
           (C3266 * C630 + C29688 * C795 + C3265 * C627 + C3111 * C792) * C689 -
           (C3266 * C695 + C29688 * C844 + C3265 * C692 + C3111 * C843) * C623 +
           (C3265 * C630 + C3111 * C795 + C3266 * C3620 + C29688 * C3834) *
               C690 +
           (C3265 * C695 + C3111 * C844 + C3266 * C3702 + C29688 * C3888) *
               C624) *
              C29603 * C29683) *
         C29511 * C29543) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C3265 * C93 + C3111 * C250 + C3266 * C628 + C29688 * C793) * C151 +
            (C3265 * C152 + C3111 * C316 + C3266 * C693 + C29688 * C841) *
                C29532) *
               C29603 * C3109 +
           ((C3285 + C3284) * C151 + (C3350 + C3351) * C29532) * C29603 *
               C29683) *
              C80 -
          (((C3352 + C3353) * C29532 + (C3289 + C3288) * C151) * C29603 *
               C29683 +
           ((C3351 + C3350) * C29532 + (C3284 + C3285) * C151) * C29603 *
               C3109) *
              C81 +
          (((C3288 + C3289) * C151 + (C3353 + C3352) * C29532) * C29603 *
               C3109 +
           ((C3265 * C96 + C3111 * C253 + C3266 * C1529 + C29688 * C1689) *
                C151 +
            (C3265 * C155 + C3111 * C319 + C3266 * C1585 + C29688 * C1753) *
                C29532) *
               C29603 * C29683) *
              C82) *
         C29543) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C3265 * C93 + C3111 * C250 + C3266 * C628 + C29688 * C793) * C151 +
            (C3265 * C152 + C3111 * C316 + C3266 * C693 + C29688 * C841) *
                C29532) *
               C29603 * C3109 +
           ((C3285 + C3284) * C151 + (C3350 + C3351) * C29532) * C29603 *
               C29683) *
              C29511 * C1067 -
          (((C3266 * C2674 + C29688 * C2842 + C3265 * C1133 + C3111 * C1286) *
                C29532 +
            (C3266 * C2612 + C29688 * C2786 + C3265 * C1071 + C3111 * C1236) *
                C151) *
               C29603 * C29683 +
           ((C3266 * C2673 + C29688 * C2841 + C3265 * C1134 + C3111 * C1287) *
                C29532 +
            (C3266 * C2611 + C29688 * C2785 + C3265 * C1072 + C3111 * C1237) *
                C151) *
               C29603 * C3109) *
              C29511 * C1068 +
          (((C3265 * C1073 + C3111 * C1238 + C3266 * C4199 + C29688 * C4365) *
                C151 +
            (C3265 * C1135 + C3111 * C1288 + C3266 * C4257 + C29688 * C4419) *
                C29532) *
               C29603 * C3109 +
           ((C3265 * C1074 + C3111 * C1239 + C3266 * C4200 + C29688 * C4366) *
                C151 +
            (C3265 * C1136 + C3111 * C1289 + C3266 * C4258 + C29688 * C4420) *
                C29532) *
               C29603 * C29683) *
              C29511 * C1069)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[7] +=
        (-std::pow(Pi, 2.5) *
         ((((C3265 * C93 + C3111 * C250 + C3266 * C628 + C29688 * C793) * C200 +
            (C3265 * C201 + C3111 * C376 + C3266 * C743 + C29688 * C887) *
                C29543) *
               C29603 * C3109 +
           ((C3285 + C3284) * C200 + (C3412 + C3413) * C29543) * C29603 *
               C29683) *
              C622 -
          (((C3266 * C745 + C29688 * C889 + C3265 * C742 + C3111 * C886) *
                C29543 +
            (C3266 * C630 + C29688 * C795 + C3265 * C627 + C3111 * C792) *
                C200) *
               C29603 * C29683 +
           ((C3266 * C744 + C29688 * C888 + C3265 * C743 + C3111 * C887) *
                C29543 +
            (C3266 * C629 + C29688 * C794 + C3265 * C628 + C3111 * C793) *
                C200) *
               C29603 * C3109) *
              C623 +
          (((C3265 * C629 + C3111 * C794 + C3266 * C3619 + C29688 * C3833) *
                C200 +
            (C3265 * C744 + C3111 * C888 + C3266 * C3767 + C29688 * C3939) *
                C29543) *
               C29603 * C3109 +
           ((C3265 * C630 + C3111 * C795 + C3266 * C3620 + C29688 * C3834) *
                C200 +
            (C3265 * C745 + C3111 * C889 + C3266 * C3768 + C29688 * C3940) *
                C29543) *
               C29603 * C29683) *
              C624) *
         C29511) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C3265 * C93 + C3111 * C250 + C3266 * C628 + C29688 * C793) * C200 +
            (C3265 * C201 + C3111 * C376 + C3266 * C743 + C29688 * C887) *
                C29543) *
               C29603 * C3109 +
           ((C3285 + C3284) * C200 + (C3412 + C3413) * C29543) * C29603 *
               C29683) *
              C29532 * C80 -
          (((C3414 + C3415) * C29543 + (C3289 + C3288) * C200) * C29603 *
               C29683 +
           ((C3413 + C3412) * C29543 + (C3284 + C3285) * C200) * C29603 *
               C3109) *
              C29532 * C81 +
          (((C3288 + C3289) * C200 + (C3415 + C3414) * C29543) * C29603 *
               C3109 +
           ((C3265 * C96 + C3111 * C253 + C3266 * C1529 + C29688 * C1689) *
                C200 +
            (C3265 * C204 + C3111 * C379 + C3266 * C1637 + C29688 * C1818) *
                C29543) *
               C29603 * C29683) *
              C29532 * C82)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C3265 * C93 + C3111 * C250 + C3266 * C628 + C29688 * C793) * C1182 +
           (C3265 * C201 + C3111 * C376 + C3266 * C743 + C29688 * C887) *
               C1067 -
           (C3266 * C2611 + C29688 * C2785 + C3265 * C1072 + C3111 * C1237) *
               C1183 -
           (C3266 * C2729 + C29688 * C2894 + C3265 * C1187 + C3111 * C1329) *
               C1068 +
           (C3265 * C1073 + C3111 * C1238 + C3266 * C4199 + C29688 * C4365) *
               C1184 +
           (C3265 * C1188 + C3111 * C1330 + C3266 * C4311 + C29688 * C4471) *
               C1069) *
              C29603 * C3109 +
          ((C3285 + C3284) * C1182 + (C3412 + C3413) * C1067 -
           (C3266 * C2612 + C29688 * C2786 + C3265 * C1071 + C3111 * C1236) *
               C1183 -
           (C3266 * C2730 + C29688 * C2895 + C3265 * C1186 + C3111 * C1331) *
               C1068 +
           (C3265 * C1074 + C3111 * C1239 + C3266 * C4200 + C29688 * C4366) *
               C1184 +
           (C3265 * C1189 + C3111 * C1332 + C3266 * C4312 + C29688 * C4472) *
               C1069) *
              C29603 * C29683) *
         C29532 * C29511) /
            (p * q * std::sqrt(p + q));
    d2eezx[7] +=
        (-std::pow(Pi, 2.5) *
         (((((C436 * C93 + C29603 * C437) * C625 +
             (C436 * C101 + C29603 * C442) * C29511) *
                C3109 +
            (C460 * C625 + C461 * C29511) * C29683) *
               C3111 +
           ((C4016 + C4017) * C3109 + (C4000 + C4001) * C29683) * C29688) *
              C29543 * C622 -
          (((C4018 + C4019) * C29683 + (C4020 + C4021) * C3109) * C29688 +
           ((C4001 + C4000) * C29683 + (C4017 + C4016) * C3109) * C3111) *
              C29543 * C623 +
          (((C4021 + C4020) * C3109 + (C4019 + C4018) * C29683) * C3111 +
           (((C436 * C3619 + C29603 * C3991) * C625 +
             (C436 * C3623 + C29603 * C3993) * C29511) *
                C3109 +
            ((C436 * C3620 + C29603 * C3992) * C625 +
             (C436 * C3624 + C29603 * C3994) * C29511) *
                C29683) *
               C29688) *
              C29543 * C624)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C436 * C93 + C29603 * C437) * C90 +
            (C436 * C101 + C29603 * C442) * C80 - C460 * C91 - C461 * C81 +
            C462 * C92 + C463 * C82) *
               C3109 +
           (C460 * C90 + C461 * C80 - C462 * C91 - C463 * C81 + C464 * C92 +
            C465 * C82) *
               C29683) *
              C3111 +
          (((C436 * C628 + C29603 * C931) * C90 +
            (C436 * C634 + C29603 * C937) * C80 - C1890 * C91 - C1891 * C81 +
            C1892 * C92 + C1893 * C82) *
               C3109 +
           (C1890 * C90 + C1891 * C80 - C1892 * C91 - C1893 * C81 +
            (C436 * C1529 + C29603 * C1879) * C92 +
            (C436 * C1531 + C29603 * C1880) * C82) *
               C29683) *
              C29688) *
         C29543 * C29532) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C436 * C93 + C29603 * C437) * C625 +
             (C436 * C101 + C29603 * C442) * C29511) *
                C3109 +
            (C460 * C625 + C461 * C29511) * C29683) *
               C3111 +
           ((C4016 + C4017) * C3109 + (C4000 + C4001) * C29683) * C29688) *
              C1067 -
          ((((C436 * C2618 + C29603 * C2951) * C29511 +
             (C436 * C2612 + C29603 * C2948) * C625) *
                C29683 +
            ((C436 * C2617 + C29603 * C2950) * C29511 +
             (C436 * C2611 + C29603 * C2947) * C625) *
                C3109) *
               C29688 +
           ((C2433 * C29511 + C2432 * C625) * C29683 +
            ((C436 * C1078 + C29603 * C1381) * C29511 +
             (C436 * C1072 + C29603 * C1375) * C625) *
                C3109) *
               C3111) *
              C1068 +
          ((((C436 * C1073 + C29603 * C1376) * C625 +
             (C436 * C1085 + C29603 * C1382) * C29511) *
                C3109 +
            ((C436 * C1074 + C29603 * C1377) * C625 +
             (C436 * C1086 + C29603 * C1383) * C29511) *
                C29683) *
               C3111 +
           (((C436 * C4199 + C29603 * C4523) * C625 +
             (C436 * C4203 + C29603 * C4525) * C29511) *
                C3109 +
            ((C436 * C4200 + C29603 * C4524) * C625 +
             (C436 * C4204 + C29603 * C4526) * C29511) *
                C29683) *
               C29688) *
              C1069) *
         C29532) /
            (p * q * std::sqrt(p + q));
    d2eezy[7] +=
        (-std::pow(Pi, 2.5) *
         ((((C436 * C93 + C29603 * C437) * C688 +
            (C436 * C152 + C29603 * C503) * C622 - C4010 * C689 - C4080 * C623 +
            C4015 * C690 + C4081 * C624) *
               C3109 +
           (C460 * C688 + C518 * C622 - C1890 * C689 - C1955 * C623 +
            C4013 * C690 + C4082 * C624) *
               C29683) *
              C3111 +
          ((C4010 * C688 + C4080 * C622 - C4015 * C689 - C4081 * C623 +
            (C436 * C3619 + C29603 * C3991) * C690 +
            (C436 * C3701 + C29603 * C4071) * C624) *
               C3109 +
           (C1890 * C688 + C1955 * C622 - C4013 * C689 - C4082 * C623 +
            (C436 * C3620 + C29603 * C3992) * C690 +
            (C436 * C3702 + C29603 * C4072) * C624) *
               C29683) *
              C29688) *
         C29511 * C29543) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C436 * C93 + C29603 * C437) * C151 +
             (C436 * C152 + C29603 * C503) * C29532) *
                C3109 +
            (C509 + C521) * C29683) *
               C3111 +
           (((C436 * C628 + C29603 * C931) * C151 +
             (C436 * C693 + C29603 * C979) * C29532) *
                C3109 +
            (C3516 + C3517) * C29683) *
               C29688) *
              C80 -
          (((C3518 + C3519) * C29683 + (C3517 + C3516) * C3109) * C29688 +
           ((C522 + C512) * C29683 + (C521 + C509) * C3109) * C3111) *
              C81 +
          ((C524 * C3109 + (C517 + C523) * C29683) * C3111 +
           ((C3519 + C3518) * C3109 +
            ((C436 * C1529 + C29603 * C1879) * C151 +
             (C436 * C1585 + C29603 * C1943) * C29532) *
                C29683) *
               C29688) *
              C82) *
         C29543) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C436 * C93 + C29603 * C437) * C151 +
             (C436 * C152 + C29603 * C503) * C29532) *
                C3109 +
            (C509 + C521) * C29683) *
               C3111 +
           ((C4010 * C151 + C4080 * C29532) * C3109 +
            (C3516 + C3517) * C29683) *
               C29688) *
              C29511 * C1067 -
          ((((C436 * C2674 + C29603 * C3004) * C29532 +
             (C436 * C2612 + C29603 * C2948) * C151) *
                C29683 +
            ((C436 * C2673 + C29603 * C3003) * C29532 +
             (C436 * C2611 + C29603 * C2947) * C151) *
                C3109) *
               C29688 +
           ((C2495 + C2487) * C29683 +
            ((C436 * C1134 + C29603 * C1425) * C29532 +
             (C436 * C1072 + C29603 * C1375) * C151) *
                C3109) *
               C3111) *
              C29511 * C1068 +
          ((((C436 * C1073 + C29603 * C1376) * C151 +
             (C436 * C1135 + C29603 * C1426) * C29532) *
                C3109 +
            ((C436 * C1074 + C29603 * C1377) * C151 +
             (C436 * C1136 + C29603 * C1427) * C29532) *
                C29683) *
               C3111 +
           (((C436 * C4199 + C29603 * C4523) * C151 +
             (C436 * C4257 + C29603 * C4577) * C29532) *
                C3109 +
            ((C436 * C4200 + C29603 * C4524) * C151 +
             (C436 * C4258 + C29603 * C4578) * C29532) *
                C29683) *
               C29688) *
              C29511 * C1069)) /
            (p * q * std::sqrt(p + q));
    d2eezz[7] +=
        (-std::pow(Pi, 2.5) *
         (((((C436 * C93 + C29603 * C437) * C200 +
             (C436 * C201 + C29603 * C562) * C29543) *
                C3109 +
            (C568 + C580) * C29683) *
               C3111 +
           ((C4135 + C4147) * C3109 + (C2015 + C2019) * C29683) * C29688) *
              C622 -
          (((C4148 + C4140) * C29683 + (C4149 + C4143) * C3109) * C29688 +
           ((C2019 + C2015) * C29683 + (C4147 + C4135) * C3109) * C3111) *
              C623 +
          (((C4143 + C4149) * C3109 + (C4140 + C4148) * C29683) * C3111 +
           (((C436 * C3619 + C29603 * C3991) * C200 +
             (C436 * C3767 + C29603 * C4132) * C29543) *
                C3109 +
            ((C436 * C3620 + C29603 * C3992) * C200 +
             (C436 * C3768 + C29603 * C4133) * C29543) *
                C29683) *
               C29688) *
              C624) *
         C29511) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C436 * C93 + C29603 * C437) * C200 +
             (C436 * C201 + C29603 * C562) * C29543) *
                C3109 +
            (C568 + C580) * C29683) *
               C3111 +
           (((C436 * C628 + C29603 * C931) * C200 +
             (C436 * C743 + C29603 * C1025) * C29543) *
                C3109 +
            (C2015 + C2019) * C29683) *
               C29688) *
              C29532 * C80 -
          (((C2018 + C2012) * C29683 + (C2019 + C2015) * C3109) * C29688 +
           ((C581 + C571) * C29683 + (C580 + C568) * C3109) * C3111) *
              C29532 * C81 +
          ((C583 * C3109 + (C576 + C582) * C29683) * C3111 +
           ((C2012 + C2018) * C3109 +
            ((C436 * C1529 + C29603 * C1879) * C200 +
             (C436 * C1637 + C29603 * C2008) * C29543) *
                C29683) *
               C29688) *
              C29532 * C82)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C436 * C93 + C29603 * C437) * C1182 +
            (C436 * C201 + C29603 * C562) * C1067 -
            (C436 * C1072 + C29603 * C1375) * C1183 -
            (C436 * C1187 + C29603 * C1467) * C1068 +
            (C436 * C1073 + C29603 * C1376) * C1184 +
            (C436 * C1188 + C29603 * C1468) * C1069) *
               C3109 +
           (C460 * C1182 + C577 * C1067 - C2432 * C1183 - C2558 * C1068 +
            (C436 * C1074 + C29603 * C1377) * C1184 +
            (C436 * C1189 + C29603 * C1470) * C1069) *
               C29683) *
              C3111 +
          ((C4010 * C1182 + C4144 * C1067 -
            (C436 * C2611 + C29603 * C2947) * C1183 -
            (C436 * C2729 + C29603 * C3056) * C1068 +
            (C436 * C4199 + C29603 * C4523) * C1184 +
            (C436 * C4311 + C29603 * C4629) * C1069) *
               C3109 +
           (C1890 * C1182 + C2017 * C1067 -
            (C436 * C2612 + C29603 * C2948) * C1183 -
            (C436 * C2730 + C29603 * C3057) * C1068 +
            (C436 * C4200 + C29603 * C4524) * C1184 +
            (C436 * C4312 + C29603 * C4630) * C1069) *
               C29683) *
              C29688) *
         C29532 * C29511) /
            (p * q * std::sqrt(p + q));
    d2eexx[8] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C3113 * C93 + C3109 * C98 + C3114 * C94 + C29683 * C99) * C1527 +
            (C3113 * C101 + C3109 * C108 + C3114 * C102 + C29683 * C109) *
                C1523 -
            (C3114 * C95 + C29683 * C100 + C3113 * C94 + C3109 * C99) * C1528 -
            (C3114 * C103 + C29683 * C110 + C3113 * C102 + C3109 * C109) *
                C1524) *
               C3111 +
           ((C3644 + C3645) * C1527 + (C3646 + C3647) * C1523 -
            (C4706 + C4707) * C1528 - (C4708 + C4709) * C1524) *
               C29688) *
              C29603 * C2069 +
          (((C3113 * C1071 + C3109 * C1080 + C3114 * C1070 + C29683 * C1079) *
                C1528 -
            ((C3114 * C1077 + C29683 * C1089 + C3113 * C1078 + C3109 * C1090) *
                 C1523 +
             (C3114 * C1071 + C29683 * C1080 + C3113 * C1072 + C3109 * C1081) *
                 C1527) +
            (C3113 * C1077 + C3109 * C1089 + C3114 * C1076 + C29683 * C1088) *
                C1524) *
               C3111 +
           ((C3113 * C2612 + C3109 * C2615 + C3114 * C2613 + C29683 * C2616) *
                C1528 -
            ((C3114 * C2618 + C29683 * C2621 + C3113 * C2617 + C3109 * C2620) *
                 C1523 +
             (C3114 * C2612 + C29683 * C2615 + C3113 * C2611 + C3109 * C2614) *
                 C1527) +
            (C3113 * C2618 + C3109 * C2621 + C3114 * C2619 + C29683 * C2622) *
                C1524) *
               C29688) *
              C29603 * C2070) *
         C29532) /
        (p * q * std::sqrt(p + q));
    d2eexy[8] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C3113 * C93 + C3109 * C98 + C3114 * C94 + C29683 * C99) * C151 +
             (C3113 * C152 + C3109 * C157 + C3114 * C153 + C29683 * C158) *
                 C29532) *
                C3111 +
            ((C3644 + C3645) * C151 + (C3715 + C3714) * C29532) * C29688) *
               C29603 * C1523 -
           (((C4781 + C4780) * C29532 + (C4706 + C4707) * C151) * C29688 +
            ((C3114 * C154 + C29683 * C159 + C3113 * C153 + C3109 * C158) *
                 C29532 +
             (C3114 * C95 + C29683 * C100 + C3113 * C94 + C3109 * C99) * C151) *
                C3111) *
               C29603 * C1524) *
              C2069 +
          ((((C3113 * C1071 + C3109 * C1080 + C3114 * C1070 + C29683 * C1079) *
                 C151 +
             (C3113 * C1133 + C3109 * C1139 + C3114 * C1132 + C29683 * C1138) *
                 C29532) *
                C3111 +
            ((C3113 * C2612 + C3109 * C2615 + C3114 * C2613 + C29683 * C2616) *
                 C151 +
             (C3113 * C2674 + C3109 * C2677 + C3114 * C2675 + C29683 * C2678) *
                 C29532) *
                C29688) *
               C29603 * C1524 -
           (((C3114 * C2674 + C29683 * C2677 + C3113 * C2673 + C3109 * C2676) *
                 C29532 +
             (C3114 * C2612 + C29683 * C2615 + C3113 * C2611 + C3109 * C2614) *
                 C151) *
                C29688 +
            ((C3114 * C1133 + C29683 * C1139 + C3113 * C1134 + C3109 * C1140) *
                 C29532 +
             (C3114 * C1071 + C29683 * C1080 + C3113 * C1072 + C3109 * C1081) *
                 C151) *
                C3111) *
               C29603 * C1523) *
              C2070)) /
        (p * q * std::sqrt(p + q));
    d2eexz[8] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C3113 * C93 + C3109 * C98 + C3114 * C94 + C29683 * C99) * C2177 +
            (C3113 * C201 + C3109 * C206 + C3114 * C202 + C29683 * C207) *
                C2069 -
            (C3114 * C1071 + C29683 * C1080 + C3113 * C1072 + C3109 * C1081) *
                C2178 -
            (C3114 * C1186 + C29683 * C1192 + C3113 * C1187 + C3109 * C1193) *
                C2070) *
               C3111 +
           ((C3644 + C3645) * C2177 + (C3780 + C3781) * C2069 -
            (C3114 * C2612 + C29683 * C2615 + C3113 * C2611 + C3109 * C2614) *
                C2178 -
            (C3114 * C2730 + C29683 * C2733 + C3113 * C2729 + C3109 * C2732) *
                C2070) *
               C29688) *
              C29603 * C29532 * C1523 +
          (((C3113 * C1071 + C3109 * C1080 + C3114 * C1070 + C29683 * C1079) *
                C2178 -
            ((C3114 * C203 + C29683 * C208 + C3113 * C202 + C3109 * C207) *
                 C2069 +
             (C3114 * C95 + C29683 * C100 + C3113 * C94 + C3109 * C99) *
                 C2177) +
            (C3113 * C1186 + C3109 * C1192 + C3114 * C1185 + C29683 * C1191) *
                C2070) *
               C3111 +
           ((C3113 * C2612 + C3109 * C2615 + C3114 * C2613 + C29683 * C2616) *
                C2178 -
            ((C4853 + C4852) * C2069 + (C4706 + C4707) * C2177) +
            (C3113 * C2730 + C3109 * C2733 + C3114 * C2731 + C29683 * C2734) *
                C2070) *
               C29688) *
              C29603 * C29532 * C1524)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[8] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C3265 * C93 + C3111 * C250 + C3266 * C628 + C29688 * C793) *
                C1527 +
            (C3265 * C101 + C3111 * C255 + C3266 * C634 + C29688 * C799) *
                C1523 -
            (C3284 + C3285) * C1528 - (C3286 + C3287) * C1524) *
               C29603 * C3109 +
           ((C3285 + C3284) * C1527 + (C3287 + C3286) * C1523 -
            (C3289 + C3288) * C1528 - (C3291 + C3290) * C1524) *
               C29603 * C29683) *
              C2069 +
          (((C5560 + C5561) * C1528 -
            ((C3266 * C2617 + C29688 * C2788 + C3265 * C1078 + C3111 * C1243) *
                 C1523 +
             (C3266 * C2611 + C29688 * C2785 + C3265 * C1072 + C3111 * C1237) *
                 C1527) +
            (C5562 + C5563) * C1524) *
               C29603 * C3109 +
           ((C3265 * C1070 + C3111 * C1235 + C3266 * C2613 + C29688 * C2787) *
                C1528 -
            ((C5563 + C5562) * C1523 + (C5561 + C5560) * C1527) +
            (C3265 * C1076 + C3111 * C1241 + C3266 * C2619 + C29688 * C2790) *
                C1524) *
               C29603 * C29683) *
              C2070) *
         C29532) /
        (p * q * std::sqrt(p + q));
    d2eeyy[8] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C3265 * C93 + C3111 * C250 + C3266 * C628 + C29688 * C793) *
                 C151 +
             (C3265 * C152 + C3111 * C316 + C3266 * C693 + C29688 * C841) *
                 C29532) *
                C29603 * C3109 +
            ((C3285 + C3284) * C151 + (C3350 + C3351) * C29532) * C29603 *
                C29683) *
               C1523 -
           (((C3352 + C3353) * C29532 + (C3289 + C3288) * C151) * C29603 *
                C29683 +
            ((C3351 + C3350) * C29532 + (C3284 + C3285) * C151) * C29603 *
                C3109) *
               C1524) *
              C2069 +
          ((((C5560 + C5561) * C151 + (C5634 + C5635) * C29532) * C29603 *
                C3109 +
            ((C3265 * C1070 + C3111 * C1235 + C3266 * C2613 + C29688 * C2787) *
                 C151 +
             (C3265 * C1132 + C3111 * C1285 + C3266 * C2675 + C29688 * C2843) *
                 C29532) *
                C29603 * C29683) *
               C1524 -
           (((C5635 + C5634) * C29532 + (C5561 + C5560) * C151) * C29603 *
                C29683 +
            ((C3266 * C2673 + C29688 * C2841 + C3265 * C1134 + C3111 * C1287) *
                 C29532 +
             (C3266 * C2611 + C29688 * C2785 + C3265 * C1072 + C3111 * C1237) *
                 C151) *
                C29603 * C3109) *
               C1523) *
              C2070)) /
        (p * q * std::sqrt(p + q));
    d2eeyz[8] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C3265 * C93 + C3111 * C250 + C3266 * C628 + C29688 * C793) *
                C2177 +
            (C3265 * C201 + C3111 * C376 + C3266 * C743 + C29688 * C887) *
                C2069 -
            (C3266 * C2611 + C29688 * C2785 + C3265 * C1072 + C3111 * C1237) *
                C2178 -
            (C3266 * C2729 + C29688 * C2894 + C3265 * C1187 + C3111 * C1329) *
                C2070) *
               C29603 * C3109 +
           ((C3285 + C3284) * C2177 + (C3412 + C3413) * C2069 -
            (C5561 + C5560) * C2178 - (C5706 + C5707) * C2070) *
               C29603 * C29683) *
              C29532 * C1523 +
          (((C5560 + C5561) * C2178 -
            ((C3413 + C3412) * C2069 + (C3284 + C3285) * C2177) +
            (C5707 + C5706) * C2070) *
               C29603 * C3109 +
           ((C3265 * C1070 + C3111 * C1235 + C3266 * C2613 + C29688 * C2787) *
                C2178 -
            ((C3414 + C3415) * C2069 + (C3289 + C3288) * C2177) +
            (C3265 * C1185 + C3111 * C1333 + C3266 * C2731 + C29688 * C2896) *
                C2070) *
               C29603 * C29683) *
              C29532 * C1524)) /
        (p * q * std::sqrt(p + q));
    d2eezx[8] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C436 * C93 + C29603 * C437) * C1527 +
             (C436 * C101 + C29603 * C442) * C1523 - C460 * C1528 -
             C461 * C1524) *
                C3109 +
            (C460 * C1527 + C461 * C1523 - C462 * C1528 - C463 * C1524) *
                C29683) *
               C3111 +
           ((C5142 + C5143 - C5144 - C5145) * C3109 +
            (C5146 + C5147 - C5148 - C5149) * C29683) *
               C29688) *
              C2069 +
          (((C2432 * C1528 -
             ((C436 * C1078 + C29603 * C1381) * C1523 +
              (C436 * C1072 + C29603 * C1375) * C1527) +
             C2433 * C1524) *
                C3109 +
            (C2434 * C1528 - (C2433 * C1523 + C2432 * C1527) + C2435 * C1524) *
                C29683) *
               C3111 +
           ((C5778 * C1528 -
             ((C436 * C2617 + C29603 * C2950) * C1523 +
              (C436 * C2611 + C29603 * C2947) * C1527) +
             C5779 * C1524) *
                C3109 +
            ((C436 * C2613 + C29603 * C2949) * C1528 -
             (C5779 * C1523 + C5778 * C1527) +
             (C436 * C2619 + C29603 * C2952) * C1524) *
                C29683) *
               C29688) *
              C2070) *
         C29532) /
        (p * q * std::sqrt(p + q));
    d2eezy[8] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C436 * C93 + C29603 * C437) * C151 +
              (C436 * C152 + C29603 * C503) * C29532) *
                 C3109 +
             (C509 + C521) * C29683) *
                C3111 +
            ((C4010 * C151 + C4080 * C29532) * C3109 +
             (C3516 + C3517) * C29683) *
                C29688) *
               C1523 -
           (((C3518 + C3519) * C29683 + (C3517 + C3516) * C3109) * C29688 +
            ((C522 + C512) * C29683 + (C521 + C509) * C3109) * C3111) *
               C1524) *
              C2069 +
          ((((C2487 + C2495) * C3109 + (C2490 + C2496) * C29683) * C3111 +
            ((C5846 + C5850) * C3109 +
             ((C436 * C2613 + C29603 * C2949) * C151 +
              (C436 * C2675 + C29603 * C3005) * C29532) *
                 C29683) *
                C29688) *
               C1524 -
           (((C5850 + C5846) * C29683 +
             ((C436 * C2673 + C29603 * C3003) * C29532 +
              (C436 * C2611 + C29603 * C2947) * C151) *
                 C3109) *
                C29688 +
            ((C2495 + C2487) * C29683 +
             ((C436 * C1134 + C29603 * C1425) * C29532 +
              (C436 * C1072 + C29603 * C1375) * C151) *
                 C3109) *
                C3111) *
               C1523) *
              C2070)) /
        (p * q * std::sqrt(p + q));
    d2eezz[8] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  (((((C436 * C93 + C29603 * C437) * C2177 +
                      (C436 * C201 + C29603 * C562) * C2069 -
                      (C436 * C1072 + C29603 * C1375) * C2178 -
                      (C436 * C1187 + C29603 * C1467) * C2070) *
                         C3109 +
                     (C2548 + C2549 - C2550 - C2560) * C29683) *
                        C3111 +
                    ((C4010 * C2177 + C4144 * C2069 -
                      (C436 * C2611 + C29603 * C2947) * C2178 -
                      (C436 * C2729 + C29603 * C3056) * C2070) *
                         C3109 +
                     (C5917 + C5918 - C5919 - C5923) * C29683) *
                        C29688) *
                       C29532 * C1523 +
                   (((C2550 - (C2549 + C2548) + C2560) * C3109 +
                     (C2555 - (C2554 + C2553) + C2561) * C29683) *
                        C3111 +
                    ((C5919 - (C5918 + C5917) + C5923) * C3109 +
                     ((C436 * C2613 + C29603 * C2949) * C2178 -
                      (C2016 * C2069 + C1892 * C2177) +
                      (C436 * C2731 + C29603 * C3058) * C2070) *
                         C29683) *
                        C29688) *
                       C29532 * C1524)) /
                 (p * q * std::sqrt(p + q));
    d2eexx[9] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C3113 * C93 + C3109 * C98 + C3114 * C94 + C29683 * C99) * C90 +
           (C3113 * C101 + C3109 * C108 + C3114 * C102 + C29683 * C109) * C80 -
           (C3114 * C95 + C29683 * C100 + C3113 * C94 + C3109 * C99) * C91 -
           (C3114 * C103 + C29683 * C110 + C3113 * C102 + C3109 * C109) * C81 +
           (C3113 * C95 + C3109 * C100 + C3114 * C96 + C29683 * C104) * C92 +
           (C3113 * C103 + C3109 * C110 + C3114 * C105 + C29683 * C111) * C82) *
              C3111 +
          ((C3113 * C628 + C3109 * C637 + C3114 * C627 + C29683 * C636) * C90 +
           (C3113 * C634 + C3109 * C646 + C3114 * C633 + C29683 * C645) * C80 -
           (C3114 * C626 + C29683 * C635 + C3113 * C627 + C3109 * C636) * C91 -
           (C3114 * C632 + C29683 * C644 + C3113 * C633 + C3109 * C645) * C81 +
           (C3113 * C626 + C3109 * C635 + C3114 * C1529 + C29683 * C1530) *
               C92 +
           (C3113 * C632 + C3109 * C644 + C3114 * C1531 + C29683 * C1532) *
               C82) *
              C29688) *
         C29603 * C29543 * C29532) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C3113 * C93 + C3109 * C98 + C3114 * C94 + C29683 * C99) * C625 +
            (C3113 * C101 + C3109 * C108 + C3114 * C102 + C29683 * C109) *
                C29511) *
               C3111 +
           ((C3644 + C3645) * C625 + (C3646 + C3647) * C29511) * C29688) *
              C29603 * C29543 * C622 -
          (((C3648 + C3649) * C29511 + (C3650 + C3651) * C625) * C29688 +
           ((C3647 + C3646) * C29511 + (C3645 + C3644) * C625) * C3111) *
              C29603 * C29543 * C623 +
          (((C3651 + C3650) * C625 + (C3649 + C3648) * C29511) * C3111 +
           ((C3113 * C3619 + C3109 * C3621 + C3114 * C3620 + C29683 * C3622) *
                C625 +
            (C3113 * C3623 + C3109 * C3625 + C3114 * C3624 + C29683 * C3626) *
                C29511) *
               C29688) *
              C29603 * C29543 * C624)) /
            (p * q * std::sqrt(p + q));
    d2eexy[9] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C3113 * C93 + C3109 * C98 + C3114 * C94 + C29683 * C99) * C151 +
            (C3113 * C152 + C3109 * C157 + C3114 * C153 + C29683 * C158) *
                C29532) *
               C3111 +
           ((C3113 * C628 + C3109 * C637 + C3114 * C627 + C29683 * C636) *
                C151 +
            (C3113 * C693 + C3109 * C699 + C3114 * C692 + C29683 * C698) *
                C29532) *
               C29688) *
              C29603 * C80 -
          (((C3114 * C691 + C29683 * C697 + C3113 * C692 + C3109 * C698) *
                C29532 +
            (C3114 * C626 + C29683 * C635 + C3113 * C627 + C3109 * C636) *
                C151) *
               C29688 +
           ((C3114 * C154 + C29683 * C159 + C3113 * C153 + C3109 * C158) *
                C29532 +
            (C3114 * C95 + C29683 * C100 + C3113 * C94 + C3109 * C99) * C151) *
               C3111) *
              C29603 * C81 +
          (((C3113 * C95 + C3109 * C100 + C3114 * C96 + C29683 * C104) * C151 +
            (C3113 * C154 + C3109 * C159 + C3114 * C155 + C29683 * C160) *
                C29532) *
               C3111 +
           ((C3113 * C626 + C3109 * C635 + C3114 * C1529 + C29683 * C1530) *
                C151 +
            (C3113 * C691 + C3109 * C697 + C3114 * C1585 + C29683 * C1586) *
                C29532) *
               C29688) *
              C29603 * C82) *
         C29543) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C3113 * C93 + C3109 * C98 + C3114 * C94 + C29683 * C99) * C688 +
           (C3113 * C152 + C3109 * C157 + C3114 * C153 + C29683 * C158) * C622 -
           (C3645 + C3644) * C689 - (C3714 + C3715) * C623 +
           (C3651 + C3650) * C690 + (C3716 + C3717) * C624) *
              C3111 +
          ((C3644 + C3645) * C688 + (C3715 + C3714) * C622 -
           (C3650 + C3651) * C689 - (C3717 + C3716) * C623 +
           (C3113 * C3619 + C3109 * C3621 + C3114 * C3620 + C29683 * C3622) *
               C690 +
           (C3113 * C3701 + C3109 * C3703 + C3114 * C3702 + C29683 * C3704) *
               C624) *
              C29688) *
         C29603 * C29511 * C29543) /
            (p * q * std::sqrt(p + q));
    d2eexz[9] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C3113 * C93 + C3109 * C98 + C3114 * C94 + C29683 * C99) * C200 +
            (C3113 * C201 + C3109 * C206 + C3114 * C202 + C29683 * C207) *
                C29543) *
               C3111 +
           ((C3113 * C628 + C3109 * C637 + C3114 * C627 + C29683 * C636) *
                C200 +
            (C3113 * C743 + C3109 * C749 + C3114 * C742 + C29683 * C748) *
                C29543) *
               C29688) *
              C29603 * C29532 * C80 -
          (((C3114 * C741 + C29683 * C747 + C3113 * C742 + C3109 * C748) *
                C29543 +
            (C3114 * C626 + C29683 * C635 + C3113 * C627 + C3109 * C636) *
                C200) *
               C29688 +
           ((C3114 * C203 + C29683 * C208 + C3113 * C202 + C3109 * C207) *
                C29543 +
            (C3114 * C95 + C29683 * C100 + C3113 * C94 + C3109 * C99) * C200) *
               C3111) *
              C29603 * C29532 * C81 +
          (((C3113 * C95 + C3109 * C100 + C3114 * C96 + C29683 * C104) * C200 +
            (C3113 * C203 + C3109 * C208 + C3114 * C204 + C29683 * C209) *
                C29543) *
               C3111 +
           ((C3113 * C626 + C3109 * C635 + C3114 * C1529 + C29683 * C1530) *
                C200 +
            (C3113 * C741 + C3109 * C747 + C3114 * C1637 + C29683 * C1638) *
                C29543) *
               C29688) *
              C29603 * C29532 * C82)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C3113 * C93 + C3109 * C98 + C3114 * C94 + C29683 * C99) * C200 +
            (C3113 * C201 + C3109 * C206 + C3114 * C202 + C29683 * C207) *
                C29543) *
               C3111 +
           ((C3644 + C3645) * C200 + (C3780 + C3781) * C29543) * C29688) *
              C29603 * C622 -
          (((C3782 + C3783) * C29543 + (C3650 + C3651) * C200) * C29688 +
           ((C3781 + C3780) * C29543 + (C3645 + C3644) * C200) * C3111) *
              C29603 * C623 +
          (((C3651 + C3650) * C200 + (C3783 + C3782) * C29543) * C3111 +
           ((C3113 * C3619 + C3109 * C3621 + C3114 * C3620 + C29683 * C3622) *
                C200 +
            (C3113 * C3767 + C3109 * C3769 + C3114 * C3768 + C29683 * C3770) *
                C29543) *
               C29688) *
              C29603 * C624) *
         C29511) /
            (p * q * std::sqrt(p + q));
    d2eeyx[9] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C3265 * C93 + C3111 * C250 + C3266 * C628 + C29688 * C793) * C90 +
           (C3265 * C101 + C3111 * C255 + C3266 * C634 + C29688 * C799) * C80 -
           (C3284 + C3285) * C91 - (C3286 + C3287) * C81 +
           (C3288 + C3289) * C92 + (C3290 + C3291) * C82) *
              C29603 * C3109 +
          ((C3285 + C3284) * C90 + (C3287 + C3286) * C80 -
           (C3289 + C3288) * C91 - (C3291 + C3290) * C81 +
           (C3265 * C96 + C3111 * C253 + C3266 * C1529 + C29688 * C1689) * C92 +
           (C3265 * C105 + C3111 * C258 + C3266 * C1531 + C29688 * C1690) *
               C82) *
              C29603 * C29683) *
         C29543 * C29532) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C3265 * C93 + C3111 * C250 + C3266 * C628 + C29688 * C793) * C625 +
            (C3265 * C101 + C3111 * C255 + C3266 * C634 + C29688 * C799) *
                C29511) *
               C29603 * C3109 +
           ((C3285 + C3284) * C625 + (C3287 + C3286) * C29511) * C29603 *
               C29683) *
              C29543 * C622 -
          (((C3266 * C642 + C29688 * C801 + C3265 * C633 + C3111 * C798) *
                C29511 +
            (C3266 * C630 + C29688 * C795 + C3265 * C627 + C3111 * C792) *
                C625) *
               C29603 * C29683 +
           ((C3266 * C641 + C29688 * C800 + C3265 * C634 + C3111 * C799) *
                C29511 +
            (C3266 * C629 + C29688 * C794 + C3265 * C628 + C3111 * C793) *
                C625) *
               C29603 * C3109) *
              C29543 * C623 +
          (((C3265 * C629 + C3111 * C794 + C3266 * C3619 + C29688 * C3833) *
                C625 +
            (C3265 * C641 + C3111 * C800 + C3266 * C3623 + C29688 * C3835) *
                C29511) *
               C29603 * C3109 +
           ((C3265 * C630 + C3111 * C795 + C3266 * C3620 + C29688 * C3834) *
                C625 +
            (C3265 * C642 + C3111 * C801 + C3266 * C3624 + C29688 * C3836) *
                C29511) *
               C29603 * C29683) *
              C29543 * C624)) /
            (p * q * std::sqrt(p + q));
    d2eeyy[9] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C3265 * C93 + C3111 * C250 + C3266 * C628 + C29688 * C793) * C151 +
            (C3265 * C152 + C3111 * C316 + C3266 * C693 + C29688 * C841) *
                C29532) *
               C29603 * C3109 +
           ((C3285 + C3284) * C151 + (C3350 + C3351) * C29532) * C29603 *
               C29683) *
              C80 -
          (((C3352 + C3353) * C29532 + (C3289 + C3288) * C151) * C29603 *
               C29683 +
           ((C3351 + C3350) * C29532 + (C3284 + C3285) * C151) * C29603 *
               C3109) *
              C81 +
          (((C3288 + C3289) * C151 + (C3353 + C3352) * C29532) * C29603 *
               C3109 +
           ((C3265 * C96 + C3111 * C253 + C3266 * C1529 + C29688 * C1689) *
                C151 +
            (C3265 * C155 + C3111 * C319 + C3266 * C1585 + C29688 * C1753) *
                C29532) *
               C29603 * C29683) *
              C82) *
         C29543) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C3265 * C93 + C3111 * C250 + C3266 * C628 + C29688 * C793) * C688 +
           (C3265 * C152 + C3111 * C316 + C3266 * C693 + C29688 * C841) * C622 -
           (C3266 * C629 + C29688 * C794 + C3265 * C628 + C3111 * C793) * C689 -
           (C3266 * C694 + C29688 * C842 + C3265 * C693 + C3111 * C841) * C623 +
           (C3265 * C629 + C3111 * C794 + C3266 * C3619 + C29688 * C3833) *
               C690 +
           (C3265 * C694 + C3111 * C842 + C3266 * C3701 + C29688 * C3887) *
               C624) *
              C29603 * C3109 +
          ((C3285 + C3284) * C688 + (C3350 + C3351) * C622 -
           (C3266 * C630 + C29688 * C795 + C3265 * C627 + C3111 * C792) * C689 -
           (C3266 * C695 + C29688 * C844 + C3265 * C692 + C3111 * C843) * C623 +
           (C3265 * C630 + C3111 * C795 + C3266 * C3620 + C29688 * C3834) *
               C690 +
           (C3265 * C695 + C3111 * C844 + C3266 * C3702 + C29688 * C3888) *
               C624) *
              C29603 * C29683) *
         C29511 * C29543) /
            (p * q * std::sqrt(p + q));
    d2eeyz[9] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C3265 * C93 + C3111 * C250 + C3266 * C628 + C29688 * C793) * C200 +
            (C3265 * C201 + C3111 * C376 + C3266 * C743 + C29688 * C887) *
                C29543) *
               C29603 * C3109 +
           ((C3285 + C3284) * C200 + (C3412 + C3413) * C29543) * C29603 *
               C29683) *
              C29532 * C80 -
          (((C3414 + C3415) * C29543 + (C3289 + C3288) * C200) * C29603 *
               C29683 +
           ((C3413 + C3412) * C29543 + (C3284 + C3285) * C200) * C29603 *
               C3109) *
              C29532 * C81 +
          (((C3288 + C3289) * C200 + (C3415 + C3414) * C29543) * C29603 *
               C3109 +
           ((C3265 * C96 + C3111 * C253 + C3266 * C1529 + C29688 * C1689) *
                C200 +
            (C3265 * C204 + C3111 * C379 + C3266 * C1637 + C29688 * C1818) *
                C29543) *
               C29603 * C29683) *
              C29532 * C82)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C3265 * C93 + C3111 * C250 + C3266 * C628 + C29688 * C793) * C200 +
            (C3265 * C201 + C3111 * C376 + C3266 * C743 + C29688 * C887) *
                C29543) *
               C29603 * C3109 +
           ((C3285 + C3284) * C200 + (C3412 + C3413) * C29543) * C29603 *
               C29683) *
              C622 -
          (((C3266 * C745 + C29688 * C889 + C3265 * C742 + C3111 * C886) *
                C29543 +
            (C3266 * C630 + C29688 * C795 + C3265 * C627 + C3111 * C792) *
                C200) *
               C29603 * C29683 +
           ((C3266 * C744 + C29688 * C888 + C3265 * C743 + C3111 * C887) *
                C29543 +
            (C3266 * C629 + C29688 * C794 + C3265 * C628 + C3111 * C793) *
                C200) *
               C29603 * C3109) *
              C623 +
          (((C3265 * C629 + C3111 * C794 + C3266 * C3619 + C29688 * C3833) *
                C200 +
            (C3265 * C744 + C3111 * C888 + C3266 * C3767 + C29688 * C3939) *
                C29543) *
               C29603 * C3109 +
           ((C3265 * C630 + C3111 * C795 + C3266 * C3620 + C29688 * C3834) *
                C200 +
            (C3265 * C745 + C3111 * C889 + C3266 * C3768 + C29688 * C3940) *
                C29543) *
               C29603 * C29683) *
              C624) *
         C29511) /
            (p * q * std::sqrt(p + q));
    d2eezx[9] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C436 * C93 + C29603 * C437) * C90 +
            (C436 * C101 + C29603 * C442) * C80 - C460 * C91 - C461 * C81 +
            C462 * C92 + C463 * C82) *
               C3109 +
           (C460 * C90 + C461 * C80 - C462 * C91 - C463 * C81 + C464 * C92 +
            C465 * C82) *
               C29683) *
              C3111 +
          (((C436 * C628 + C29603 * C931) * C90 +
            (C436 * C634 + C29603 * C937) * C80 - C1890 * C91 - C1891 * C81 +
            C1892 * C92 + C1893 * C82) *
               C3109 +
           (C1890 * C90 + C1891 * C80 - C1892 * C91 - C1893 * C81 +
            (C436 * C1529 + C29603 * C1879) * C92 +
            (C436 * C1531 + C29603 * C1880) * C82) *
               C29683) *
              C29688) *
         C29543 * C29532) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C436 * C93 + C29603 * C437) * C625 +
             (C436 * C101 + C29603 * C442) * C29511) *
                C3109 +
            (C460 * C625 + C461 * C29511) * C29683) *
               C3111 +
           ((C4016 + C4017) * C3109 + (C4000 + C4001) * C29683) * C29688) *
              C29543 * C622 -
          (((C4018 + C4019) * C29683 + (C4020 + C4021) * C3109) * C29688 +
           ((C4001 + C4000) * C29683 + (C4017 + C4016) * C3109) * C3111) *
              C29543 * C623 +
          (((C4021 + C4020) * C3109 + (C4019 + C4018) * C29683) * C3111 +
           (((C436 * C3619 + C29603 * C3991) * C625 +
             (C436 * C3623 + C29603 * C3993) * C29511) *
                C3109 +
            ((C436 * C3620 + C29603 * C3992) * C625 +
             (C436 * C3624 + C29603 * C3994) * C29511) *
                C29683) *
               C29688) *
              C29543 * C624)) /
            (p * q * std::sqrt(p + q));
    d2eezy[9] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C436 * C93 + C29603 * C437) * C151 +
             (C436 * C152 + C29603 * C503) * C29532) *
                C3109 +
            (C509 + C521) * C29683) *
               C3111 +
           (((C436 * C628 + C29603 * C931) * C151 +
             (C436 * C693 + C29603 * C979) * C29532) *
                C3109 +
            (C3516 + C3517) * C29683) *
               C29688) *
              C80 -
          (((C3518 + C3519) * C29683 + (C3517 + C3516) * C3109) * C29688 +
           ((C522 + C512) * C29683 + (C521 + C509) * C3109) * C3111) *
              C81 +
          ((C524 * C3109 + (C517 + C523) * C29683) * C3111 +
           ((C3519 + C3518) * C3109 +
            ((C436 * C1529 + C29603 * C1879) * C151 +
             (C436 * C1585 + C29603 * C1943) * C29532) *
                C29683) *
               C29688) *
              C82) *
         C29543) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C436 * C93 + C29603 * C437) * C688 +
            (C436 * C152 + C29603 * C503) * C622 - C4010 * C689 - C4080 * C623 +
            C4015 * C690 + C4081 * C624) *
               C3109 +
           (C460 * C688 + C518 * C622 - C1890 * C689 - C1955 * C623 +
            C4013 * C690 + C4082 * C624) *
               C29683) *
              C3111 +
          ((C4010 * C688 + C4080 * C622 - C4015 * C689 - C4081 * C623 +
            (C436 * C3619 + C29603 * C3991) * C690 +
            (C436 * C3701 + C29603 * C4071) * C624) *
               C3109 +
           (C1890 * C688 + C1955 * C622 - C4013 * C689 - C4082 * C623 +
            (C436 * C3620 + C29603 * C3992) * C690 +
            (C436 * C3702 + C29603 * C4072) * C624) *
               C29683) *
              C29688) *
         C29511 * C29543) /
            (p * q * std::sqrt(p + q));
    d2eezz[9] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C436 * C93 + C29603 * C437) * C200 +
             (C436 * C201 + C29603 * C562) * C29543) *
                C3109 +
            (C568 + C580) * C29683) *
               C3111 +
           (((C436 * C628 + C29603 * C931) * C200 +
             (C436 * C743 + C29603 * C1025) * C29543) *
                C3109 +
            (C2015 + C2019) * C29683) *
               C29688) *
              C29532 * C80 -
          (((C2018 + C2012) * C29683 + (C2019 + C2015) * C3109) * C29688 +
           ((C581 + C571) * C29683 + (C580 + C568) * C3109) * C3111) *
              C29532 * C81 +
          ((C583 * C3109 + (C576 + C582) * C29683) * C3111 +
           ((C2012 + C2018) * C3109 +
            ((C436 * C1529 + C29603 * C1879) * C200 +
             (C436 * C1637 + C29603 * C2008) * C29543) *
                C29683) *
               C29688) *
              C29532 * C82)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C436 * C93 + C29603 * C437) * C200 +
             (C436 * C201 + C29603 * C562) * C29543) *
                C3109 +
            (C568 + C580) * C29683) *
               C3111 +
           ((C4135 + C4147) * C3109 + (C2015 + C2019) * C29683) * C29688) *
              C622 -
          (((C4148 + C4140) * C29683 + (C4149 + C4143) * C3109) * C29688 +
           ((C2019 + C2015) * C29683 + (C4147 + C4135) * C3109) * C3111) *
              C623 +
          (((C4143 + C4149) * C3109 + (C4140 + C4148) * C29683) * C3111 +
           (((C436 * C3619 + C29603 * C3991) * C200 +
             (C436 * C3767 + C29603 * C4132) * C29543) *
                C3109 +
            ((C436 * C3620 + C29603 * C3992) * C200 +
             (C436 * C3768 + C29603 * C4133) * C29543) *
                C29683) *
               C29688) *
              C624) *
         C29511) /
            (p * q * std::sqrt(p + q));
    d2eexx[10] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C3113 * C93 + C3109 * C98 + C3114 * C94 + C29683 * C99) * C1527 +
            (C3113 * C101 + C3109 * C108 + C3114 * C102 + C29683 * C109) *
                C1523 -
            (C3114 * C95 + C29683 * C100 + C3113 * C94 + C3109 * C99) * C1528 -
            (C3114 * C103 + C29683 * C110 + C3113 * C102 + C3109 * C109) *
                C1524) *
               C29588 * C6643 +
           ((C7624 + C7625) * C1527 + (C7626 + C7627) * C1523 -
            (C3114 * C1070 + C29683 * C1079 + C3113 * C1071 + C3109 * C1080) *
                C1528 -
            (C3114 * C1076 + C29683 * C1088 + C3113 * C1077 + C3109 * C1089) *
                C1524) *
               C29588 * C29690) *
              C29543 * C1525 +
          (((C4707 + C4706) * C1528 -
            ((C3647 + C3646) * C1523 + (C3645 + C3644) * C1527) +
            (C4709 + C4708) * C1524) *
               C29588 * C6643 +
           ((C3113 * C2612 + C3109 * C2615 + C3114 * C2613 + C29683 * C2616) *
                C1528 -
            ((C6006 + C6007) * C1523 + (C6008 + C6009) * C1527) +
            (C3113 * C2618 + C3109 * C2621 + C3114 * C2619 + C29683 * C2622) *
                C1524) *
               C29588 * C29690) *
              C29543 * C1526)) /
        (p * q * std::sqrt(p + q));
    d2eexy[10] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C3113 * C93 + C3109 * C98 + C3114 * C94 + C29683 * C99) * C1583 +
            (C3113 * C152 + C3109 * C157 + C3114 * C153 + C29683 * C158) *
                C1525 -
            (C3645 + C3644) * C1584 - (C3714 + C3715) * C1526) *
               C29588 * C6643 +
           ((C7624 + C7625) * C1583 + (C7694 + C7695) * C1525 -
            (C6008 + C6009) * C1584 - (C6085 + C6084) * C1526) *
               C29588 * C29690) *
              C1523 +
          (((C4707 + C4706) * C1584 -
            ((C3114 * C154 + C29683 * C159 + C3113 * C153 + C3109 * C158) *
                 C1525 +
             (C3114 * C95 + C29683 * C100 + C3113 * C94 + C3109 * C99) *
                 C1583) +
            (C4780 + C4781) * C1526) *
               C29588 * C6643 +
           ((C3113 * C2612 + C3109 * C2615 + C3114 * C2613 + C29683 * C2616) *
                C1584 -
            ((C3114 * C1132 + C29683 * C1138 + C3113 * C1133 + C3109 * C1139) *
                 C1525 +
             (C3114 * C1070 + C29683 * C1079 + C3113 * C1071 + C3109 * C1080) *
                 C1583) +
            (C3113 * C2674 + C3109 * C2677 + C3114 * C2675 + C29683 * C2678) *
                C1526) *
               C29588 * C29690) *
              C1524) *
         C29543) /
        (p * q * std::sqrt(p + q));
    d2eexz[10] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C3113 * C93 + C3109 * C98 + C3114 * C94 + C29683 * C99) * C200 +
             (C3113 * C201 + C3109 * C206 + C3114 * C202 + C29683 * C207) *
                 C29543) *
                C29588 * C6643 +
            ((C7624 + C7625) * C200 + (C7761 + C7760) * C29543) * C29588 *
                C29690) *
               C1525 -
           (((C6160 + C6161) * C29543 + (C6008 + C6009) * C200) * C29588 *
                C29690 +
            ((C3781 + C3780) * C29543 + (C3645 + C3644) * C200) * C29588 *
                C6643) *
               C1526) *
              C1523 +
          ((((C4707 + C4706) * C200 + (C4852 + C4853) * C29543) * C29588 *
                C6643 +
            ((C3113 * C2612 + C3109 * C2615 + C3114 * C2613 + C29683 * C2616) *
                 C200 +
             (C3113 * C2730 + C3109 * C2733 + C3114 * C2731 + C29683 * C2734) *
                 C29543) *
                C29588 * C29690) *
               C1526 -
           (((C3114 * C1185 + C29683 * C1191 + C3113 * C1186 + C3109 * C1192) *
                 C29543 +
             (C3114 * C1070 + C29683 * C1079 + C3113 * C1071 + C3109 * C1080) *
                 C200) *
                C29588 * C29690 +
            ((C3114 * C203 + C29683 * C208 + C3113 * C202 + C3109 * C207) *
                 C29543 +
             (C3114 * C95 + C29683 * C100 + C3113 * C94 + C3109 * C99) * C200) *
                C29588 * C6643) *
               C1525) *
              C1524)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[10] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C249 * C93 + C29588 * C250) * C1527 +
             (C249 * C101 + C29588 * C255) * C1523 - C273 * C1528 -
             C274 * C1524) *
                C6643 +
            (C7832 * C1527 + C7833 * C1523 - C2242 * C1528 - C2243 * C1524) *
                C29690) *
               C3109 +
           ((C273 * C1527 + C274 * C1523 - C275 * C1528 - C276 * C1524) *
                C6643 +
            (C2242 * C1527 + C2243 * C1523 - C2244 * C1528 - C2245 * C1524) *
                C29690) *
               C29683) *
              C29543 * C1525 +
          (((C1700 * C1528 -
             ((C249 * C634 + C29588 * C799) * C1523 +
              (C249 * C628 + C29588 * C793) * C1527) +
             C1701 * C1524) *
                C6643 +
            (C8398 * C1528 -
             ((C249 * C2617 + C29588 * C2788) * C1523 +
              (C249 * C2611 + C29588 * C2785) * C1527) +
             C8399 * C1524) *
                C29690) *
               C3109 +
           ((C1702 * C1528 - (C1701 * C1523 + C1700 * C1527) + C1703 * C1524) *
                C6643 +
            ((C249 * C2613 + C29588 * C2787) * C1528 -
             (C8399 * C1523 + C8398 * C1527) +
             (C249 * C2619 + C29588 * C2790) * C1524) *
                C29690) *
               C29683) *
              C29543 * C1526)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[10] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C249 * C93 + C29588 * C250) * C1583 +
                       (C249 * C152 + C29588 * C316) * C1525 -
                       (C249 * C628 + C29588 * C793) * C1584 -
                       (C249 * C693 + C29588 * C841) * C1526) *
                          C6643 +
                      (C7832 * C1583 + C7905 * C1525 -
                       (C249 * C2611 + C29588 * C2785) * C1584 -
                       (C249 * C2673 + C29588 * C2841) * C1526) *
                          C29690) *
                         C3109 +
                     ((C1755 + C1756 - C1757 - C1767) * C6643 +
                      (C8466 + C8467 - C8468 - C8472) * C29690) *
                         C29683) *
                        C1523 +
                    (((C1757 - (C1756 + C1755) + C1767) * C6643 +
                      (C8468 - (C8467 + C8466) + C8472) * C29690) *
                         C3109 +
                     ((C1762 - (C1761 + C1760) + C1768) * C6643 +
                      ((C249 * C2613 + C29588 * C2787) * C1584 -
                       (C2304 * C1525 + C2244 * C1583) +
                       (C249 * C2675 + C29588 * C2843) * C1526) *
                          C29690) *
                         C29683) *
                        C1524) *
                   C29543) /
                  (p * q * std::sqrt(p + q));
    d2eeyz[10] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C249 * C93 + C29588 * C250) * C200 +
              (C249 * C201 + C29588 * C376) * C29543) *
                 C6643 +
             (C7832 * C200 + C7969 * C29543) * C29690) *
                C3109 +
            ((C382 + C394) * C6643 + (C6896 + C6897) * C29690) * C29683) *
               C1525 -
           (((C8543 + C8541) * C29690 + (C1829 + C1825) * C6643) * C29683 +
            (((C249 * C2729 + C29588 * C2894) * C29543 +
              (C249 * C2611 + C29588 * C2785) * C200) *
                 C29690 +
             ((C249 * C743 + C29588 * C887) * C29543 +
              (C249 * C628 + C29588 * C793) * C200) *
                 C6643) *
                C3109) *
               C1526) *
              C1523 +
          ((((C1825 + C1829) * C6643 + (C8541 + C8543) * C29690) * C3109 +
            ((C1822 + C1828) * C6643 +
             ((C249 * C2613 + C29588 * C2787) * C200 +
              (C249 * C2731 + C29588 * C2896) * C29543) *
                 C29690) *
                C29683) *
               C1526 -
           (((C6898 + C6899) * C29690 + (C395 + C385) * C6643) * C29683 +
            ((C6897 + C6896) * C29690 + (C394 + C382) * C6643) * C3109) *
               C1525) *
              C1524)) /
        (p * q * std::sqrt(p + q));
    d2eezx[10] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C6949 * C93 + C6643 * C437 + C6950 * C1072 + C29690 * C1375) *
                C1527 +
            (C6949 * C101 + C6643 * C442 + C6950 * C1078 + C29690 * C1381) *
                C1523 -
            (C6968 + C6969) * C1528 - (C6970 + C6971) * C1524) *
               C3109 +
           ((C6969 + C6968) * C1527 + (C6971 + C6970) * C1523 -
            (C6973 + C6972) * C1528 - (C6975 + C6974) * C1524) *
               C29683) *
              C29588 * C29543 * C1525 +
          (((C8618 + C8619) * C1528 -
            ((C6950 * C2617 + C29690 * C2950 + C6949 * C634 + C6643 * C937) *
                 C1523 +
             (C6950 * C2611 + C29690 * C2947 + C6949 * C628 + C6643 * C931) *
                 C1527) +
            (C8620 + C8621) * C1524) *
               C3109 +
           ((C6949 * C626 + C6643 * C929 + C6950 * C2613 + C29690 * C2949) *
                C1528 -
            ((C8621 + C8620) * C1523 + (C8619 + C8618) * C1527) +
            (C6949 * C632 + C6643 * C935 + C6950 * C2619 + C29690 * C2952) *
                C1524) *
               C29683) *
              C29588 * C29543 * C1526)) /
        (p * q * std::sqrt(p + q));
    d2eezy[10] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C6949 * C93 + C6643 * C437 + C6950 * C1072 + C29690 * C1375) *
                C1583 +
            (C6949 * C152 + C6643 * C503 + C6950 * C1134 + C29690 * C1425) *
                C1525 -
            (C6950 * C2611 + C29690 * C2947 + C6949 * C628 + C6643 * C931) *
                C1584 -
            (C6950 * C2673 + C29690 * C3003 + C6949 * C693 + C6643 * C979) *
                C1526) *
               C3109 +
           ((C6969 + C6968) * C1583 + (C7034 + C7035) * C1525 -
            (C8619 + C8618) * C1584 - (C8692 + C8693) * C1526) *
               C29683) *
              C29588 * C1523 +
          (((C8618 + C8619) * C1584 -
            ((C7035 + C7034) * C1525 + (C6968 + C6969) * C1583) +
            (C8693 + C8692) * C1526) *
               C3109 +
           ((C6949 * C626 + C6643 * C929 + C6950 * C2613 + C29690 * C2949) *
                C1584 -
            ((C7036 + C7037) * C1525 + (C6973 + C6972) * C1583) +
            (C6949 * C691 + C6643 * C983 + C6950 * C2675 + C29690 * C3005) *
                C1526) *
               C29683) *
              C29588 * C1524) *
         C29543) /
        (p * q * std::sqrt(p + q));
    d2eezz[10] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C6949 * C93 + C6643 * C437 + C6950 * C1072 + C29690 * C1375) *
                 C200 +
             (C6949 * C201 + C6643 * C562 + C6950 * C1187 + C29690 * C1467) *
                 C29543) *
                C3109 +
            ((C6969 + C6968) * C200 + (C7096 + C7097) * C29543) * C29683) *
               C29588 * C1525 -
           (((C8764 + C8765) * C29543 + (C8619 + C8618) * C200) * C29683 +
            ((C6950 * C2729 + C29690 * C3056 + C6949 * C743 + C6643 * C1025) *
                 C29543 +
             (C6950 * C2611 + C29690 * C2947 + C6949 * C628 + C6643 * C931) *
                 C200) *
                C3109) *
               C29588 * C1526) *
              C1523 +
          ((((C8618 + C8619) * C200 + (C8765 + C8764) * C29543) * C3109 +
            ((C6949 * C626 + C6643 * C929 + C6950 * C2613 + C29690 * C2949) *
                 C200 +
             (C6949 * C741 + C6643 * C1023 + C6950 * C2731 + C29690 * C3058) *
                 C29543) *
                C29683) *
               C29588 * C1526 -
           (((C7098 + C7099) * C29543 + (C6973 + C6972) * C200) * C29683 +
            ((C7097 + C7096) * C29543 + (C6968 + C6969) * C200) * C3109) *
               C29588 * C1525) *
              C1524)) /
        (p * q * std::sqrt(p + q));
    d2eexx[11] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C3113 * C93 + C3109 * C98 + C3114 * C94 + C29683 * C99) * C625 +
             (C3113 * C101 + C3109 * C108 + C3114 * C102 + C29683 * C109) *
                 C29511) *
                C29588 * C6643 +
            ((C7624 + C7625) * C625 + (C7626 + C7627) * C29511) * C29588 *
                C29690) *
               C2069 -
           (((C7628 + C7629) * C29511 + (C7630 + C7631) * C625) * C29588 *
                C29690 +
            ((C7627 + C7626) * C29511 + (C7625 + C7624) * C625) * C29588 *
                C6643) *
               C2070) *
              C1525 +
          ((((C6009 + C6008) * C625 + (C6007 + C6006) * C29511) * C29588 *
                C6643 +
            ((C3113 * C4199 + C3109 * C4201 + C3114 * C4200 + C29683 * C4202) *
                 C625 +
             (C3113 * C4203 + C3109 * C4205 + C3114 * C4204 + C29683 * C4206) *
                 C29511) *
                C29588 * C29690) *
               C2070 -
           (((C6006 + C6007) * C29511 + (C6008 + C6009) * C625) * C29588 *
                C29690 +
            ((C3647 + C3646) * C29511 + (C3645 + C3644) * C625) * C29588 *
                C6643) *
               C2069) *
              C1526)) /
        (p * q * std::sqrt(p + q));
    d2eexy[11] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C3113 * C93 + C3109 * C98 + C3114 * C94 + C29683 * C99) * C1583 +
            (C3113 * C152 + C3109 * C157 + C3114 * C153 + C29683 * C158) *
                C1525 -
            (C3645 + C3644) * C1584 - (C3714 + C3715) * C1526) *
               C29588 * C6643 +
           ((C7624 + C7625) * C1583 + (C7694 + C7695) * C1525 -
            (C6008 + C6009) * C1584 - (C6085 + C6084) * C1526) *
               C29588 * C29690) *
              C29511 * C2069 +
          (((C6009 + C6008) * C1584 -
            ((C7695 + C7694) * C1525 + (C7625 + C7624) * C1583) +
            (C6084 + C6085) * C1526) *
               C29588 * C6643 +
           ((C3113 * C4199 + C3109 * C4201 + C3114 * C4200 + C29683 * C4202) *
                C1584 -
            ((C7696 + C7697) * C1525 + (C7630 + C7631) * C1583) +
            (C3113 * C4257 + C3109 * C4259 + C3114 * C4258 + C29683 * C4260) *
                C1526) *
               C29588 * C29690) *
              C29511 * C2070)) /
        (p * q * std::sqrt(p + q));
    d2eexz[11] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C3113 * C93 + C3109 * C98 + C3114 * C94 + C29683 * C99) * C2177 +
            (C3113 * C201 + C3109 * C206 + C3114 * C202 + C29683 * C207) *
                C2069 -
            (C7625 + C7624) * C2178 - (C7760 + C7761) * C2070) *
               C29588 * C6643 +
           ((C7624 + C7625) * C2177 + (C7761 + C7760) * C2069 -
            (C7630 + C7631) * C2178 - (C7763 + C7762) * C2070) *
               C29588 * C29690) *
              C1525 +
          (((C6009 + C6008) * C2178 -
            ((C3781 + C3780) * C2069 + (C3645 + C3644) * C2177) +
            (C6161 + C6160) * C2070) *
               C29588 * C6643 +
           ((C3113 * C4199 + C3109 * C4201 + C3114 * C4200 + C29683 * C4202) *
                C2178 -
            ((C6160 + C6161) * C2069 + (C6008 + C6009) * C2177) +
            (C3113 * C4311 + C3109 * C4313 + C3114 * C4312 + C29683 * C4314) *
                C2070) *
               C29588 * C29690) *
              C1526) *
         C29511) /
        (p * q * std::sqrt(p + q));
    d2eeyx[11] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C249 * C93 + C29588 * C250) * C625 +
              (C249 * C101 + C29588 * C255) * C29511) *
                 C6643 +
             (C7838 + C7839) * C29690) *
                C3109 +
            ((C273 * C625 + C274 * C29511) * C6643 + (C7822 + C7823) * C29690) *
                C29683) *
               C2069 -
           (((C7840 + C7841) * C29690 + (C7823 + C7822) * C6643) * C29683 +
            ((C7842 + C7843) * C29690 + (C7839 + C7838) * C6643) * C3109) *
               C2070) *
              C1525 +
          ((((C9694 + C9695) * C6643 +
             ((C249 * C4199 + C29588 * C4365) * C625 +
              (C249 * C4203 + C29588 * C4367) * C29511) *
                 C29690) *
                C3109 +
            ((C9690 + C9691) * C6643 +
             ((C249 * C4200 + C29588 * C4366) * C625 +
              (C249 * C4204 + C29588 * C4368) * C29511) *
                 C29690) *
                C29683) *
               C2070 -
           (((C9691 + C9690) * C29690 +
             (C1701 * C29511 + C1700 * C625) * C6643) *
                C29683 +
            ((C9695 + C9694) * C29690 +
             ((C249 * C634 + C29588 * C799) * C29511 +
              (C249 * C628 + C29588 * C793) * C625) *
                 C6643) *
                C3109) *
               C2069) *
              C1526)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[11] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C249 * C93 + C29588 * C250) * C1583 +
                       (C249 * C152 + C29588 * C316) * C1525 -
                       (C249 * C628 + C29588 * C793) * C1584 -
                       (C249 * C693 + C29588 * C841) * C1526) *
                          C6643 +
                      (C9762 + C9763 - C9764 - C9768) * C29690) *
                         C3109 +
                     ((C1755 + C1756 - C1757 - C1767) * C6643 +
                      (C8466 + C8467 - C8468 - C8472) * C29690) *
                         C29683) *
                        C29511 * C2069 +
                    (((C9764 - (C9763 + C9762) + C9768) * C6643 +
                      ((C249 * C4199 + C29588 * C4365) * C1584 -
                       (C7907 * C1525 + C7837 * C1583) +
                       (C249 * C4257 + C29588 * C4419) * C1526) *
                          C29690) *
                         C3109 +
                     ((C8468 - (C8467 + C8466) + C8472) * C6643 +
                      ((C249 * C4200 + C29588 * C4366) * C1584 -
                       (C7906 * C1525 + C7835 * C1583) +
                       (C249 * C4258 + C29588 * C4420) * C1526) *
                          C29690) *
                         C29683) *
                        C29511 * C2070)) /
                  (p * q * std::sqrt(p + q));
    d2eeyz[11] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C249 * C93 + C29588 * C250) * C2177 +
             (C249 * C201 + C29588 * C376) * C2069 - C7832 * C2178 -
             C7969 * C2070) *
                C6643 +
            (C7832 * C2177 + C7969 * C2069 - C7837 * C2178 - C7970 * C2070) *
                C29690) *
               C3109 +
           ((C2358 + C2359 - C2360 - C2370) * C6643 +
            (C9196 + C9197 - C9198 - C9199) * C29690) *
               C29683) *
              C1525 +
          (((C9692 * C2178 -
             ((C249 * C743 + C29588 * C887) * C2069 +
              (C249 * C628 + C29588 * C793) * C2177) +
             C9837 * C2070) *
                C6643 +
            ((C249 * C4199 + C29588 * C4365) * C2178 -
             (C9837 * C2069 + C9692 * C2177) +
             (C249 * C4311 + C29588 * C4471) * C2070) *
                C29690) *
               C3109 +
           ((C8398 * C2178 - (C1827 * C2069 + C1700 * C2177) + C8542 * C2070) *
                C6643 +
            ((C249 * C4200 + C29588 * C4366) * C2178 -
             (C8542 * C2069 + C8398 * C2177) +
             (C249 * C4312 + C29588 * C4472) * C2070) *
                C29690) *
               C29683) *
              C1526) *
         C29511) /
        (p * q * std::sqrt(p + q));
    d2eezx[11] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C6949 * C93 + C6643 * C437 + C6950 * C1072 + C29690 * C1375) *
                 C625 +
             (C6949 * C101 + C6643 * C442 + C6950 * C1078 + C29690 * C1381) *
                 C29511) *
                C3109 +
            ((C6969 + C6968) * C625 + (C6971 + C6970) * C29511) * C29683) *
               C29588 * C2069 -
           (((C9277 + C9276) * C29511 + (C9275 + C9274) * C625) * C29683 +
            ((C6950 * C1085 + C29690 * C1382 + C6949 * C1078 + C6643 * C1381) *
                 C29511 +
             (C6950 * C1073 + C29690 * C1376 + C6949 * C1072 + C6643 * C1375) *
                 C625) *
                C3109) *
               C29588 * C2070) *
              C1525 +
          ((((C6949 * C2611 + C6643 * C2947 + C6950 * C4199 + C29690 * C4523) *
                 C625 +
             (C6949 * C2617 + C6643 * C2950 + C6950 * C4203 + C29690 * C4525) *
                 C29511) *
                C3109 +
            ((C6949 * C2612 + C6643 * C2948 + C6950 * C4200 + C29690 * C4524) *
                 C625 +
             (C6949 * C2618 + C6643 * C2951 + C6950 * C4204 + C29690 * C4526) *
                 C29511) *
                C29683) *
               C29588 * C2070 -
           (((C8621 + C8620) * C29511 + (C8619 + C8618) * C625) * C29683 +
            ((C6950 * C2617 + C29690 * C2950 + C6949 * C634 + C6643 * C937) *
                 C29511 +
             (C6950 * C2611 + C29690 * C2947 + C6949 * C628 + C6643 * C931) *
                 C625) *
                C3109) *
               C29588 * C2069) *
              C1526)) /
        (p * q * std::sqrt(p + q));
    d2eezy[11] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C6949 * C93 + C6643 * C437 + C6950 * C1072 + C29690 * C1375) *
                C1583 +
            (C6949 * C152 + C6643 * C503 + C6950 * C1134 + C29690 * C1425) *
                C1525 -
            (C6950 * C2611 + C29690 * C2947 + C6949 * C628 + C6643 * C931) *
                C1584 -
            (C6950 * C2673 + C29690 * C3003 + C6949 * C693 + C6643 * C979) *
                C1526) *
               C3109 +
           ((C6969 + C6968) * C1583 + (C7034 + C7035) * C1525 -
            (C8619 + C8618) * C1584 - (C8692 + C8693) * C1526) *
               C29683) *
              C29588 * C29511 * C2069 +
          (((C6949 * C2611 + C6643 * C2947 + C6950 * C4199 + C29690 * C4523) *
                C1584 -
            ((C6950 * C1135 + C29690 * C1426 + C6949 * C1134 + C6643 * C1425) *
                 C1525 +
             (C6950 * C1073 + C29690 * C1376 + C6949 * C1072 + C6643 * C1375) *
                 C1583) +
            (C6949 * C2673 + C6643 * C3003 + C6950 * C4257 + C29690 * C4577) *
                C1526) *
               C3109 +
           ((C6949 * C2612 + C6643 * C2948 + C6950 * C4200 + C29690 * C4524) *
                C1584 -
            ((C9349 + C9348) * C1525 + (C9275 + C9274) * C1583) +
            (C6949 * C2674 + C6643 * C3004 + C6950 * C4258 + C29690 * C4578) *
                C1526) *
               C29683) *
              C29588 * C29511 * C2070)) /
        (p * q * std::sqrt(p + q));
    d2eezz[11] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C6949 * C93 + C6643 * C437 + C6950 * C1072 + C29690 * C1375) *
                C2177 +
            (C6949 * C201 + C6643 * C562 + C6950 * C1187 + C29690 * C1467) *
                C2069 -
            (C6950 * C1073 + C29690 * C1376 + C6949 * C1072 + C6643 * C1375) *
                C2178 -
            (C6950 * C1188 + C29690 * C1468 + C6949 * C1187 + C6643 * C1467) *
                C2070) *
               C3109 +
           ((C6969 + C6968) * C2177 + (C7096 + C7097) * C2069 -
            (C9275 + C9274) * C2178 - (C9420 + C9421) * C2070) *
               C29683) *
              C29588 * C1525 +
          (((C6949 * C2611 + C6643 * C2947 + C6950 * C4199 + C29690 * C4523) *
                C2178 -
            ((C6950 * C2729 + C29690 * C3056 + C6949 * C743 + C6643 * C1025) *
                 C2069 +
             (C6950 * C2611 + C29690 * C2947 + C6949 * C628 + C6643 * C931) *
                 C2177) +
            (C6949 * C2729 + C6643 * C3056 + C6950 * C4311 + C29690 * C4629) *
                C2070) *
               C3109 +
           ((C6949 * C2612 + C6643 * C2948 + C6950 * C4200 + C29690 * C4524) *
                C2178 -
            ((C8764 + C8765) * C2069 + (C8619 + C8618) * C2177) +
            (C6949 * C2730 + C6643 * C3057 + C6950 * C4312 + C29690 * C4630) *
                C2070) *
               C29683) *
              C29588 * C1526) *
         C29511) /
        (p * q * std::sqrt(p + q));
    d2eexx[12] +=
        (-std::pow(Pi, 2.5) *
         ((((C3113 * C93 + C3109 * C98 + C3114 * C94 + C29683 * C99) * C625 +
            (C3113 * C101 + C3109 * C108 + C3114 * C102 + C29683 * C109) *
                C29511) *
               C29588 * C6643 +
           ((C3113 * C1072 + C3109 * C1081 + C3114 * C1071 + C29683 * C1080) *
                C625 +
            (C3113 * C1078 + C3109 * C1090 + C3114 * C1077 + C29683 * C1089) *
                C29511) *
               C29588 * C29690) *
              C29543 * C622 -
          (((C6006 + C6007) * C29511 + (C6008 + C6009) * C625) * C29588 *
               C29690 +
           ((C3647 + C3646) * C29511 + (C3645 + C3644) * C625) * C29588 *
               C6643) *
              C29543 * C623 +
          (((C3651 + C3650) * C625 + (C3649 + C3648) * C29511) * C29588 *
               C6643 +
           ((C3113 * C5989 + C3109 * C5991 + C3114 * C5990 + C29683 * C5992) *
                C625 +
            (C3113 * C5993 + C3109 * C5995 + C3114 * C5994 + C29683 * C5996) *
                C29511) *
               C29588 * C29690) *
              C29543 * C624)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C3113 * C93 + C3109 * C98 + C3114 * C94 + C29683 * C99) * C90 +
           (C3113 * C101 + C3109 * C108 + C3114 * C102 + C29683 * C109) * C80 -
           (C3114 * C95 + C29683 * C100 + C3113 * C94 + C3109 * C99) * C91 -
           (C3114 * C103 + C29683 * C110 + C3113 * C102 + C3109 * C109) * C81 +
           (C3113 * C95 + C3109 * C100 + C3114 * C96 + C29683 * C104) * C92 +
           (C3113 * C103 + C3109 * C110 + C3114 * C105 + C29683 * C111) * C82) *
              C29588 * C6643 +
          ((C3113 * C1072 + C3109 * C1081 + C3114 * C1071 + C29683 * C1080) *
               C90 +
           (C3113 * C1078 + C3109 * C1090 + C3114 * C1077 + C29683 * C1089) *
               C80 -
           (C3114 * C1070 + C29683 * C1079 + C3113 * C1071 + C3109 * C1080) *
               C91 -
           (C3114 * C1076 + C29683 * C1088 + C3113 * C1077 + C3109 * C1089) *
               C81 +
           (C3113 * C1070 + C3109 * C1079 + C3114 * C2071 + C29683 * C2072) *
               C92 +
           (C3113 * C1076 + C3109 * C1088 + C3114 * C2073 + C29683 * C2074) *
               C82) *
              C29588 * C29690) *
         C29543 * C29532) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C3113 * C93 + C3109 * C98 + C3114 * C94 + C29683 * C99) * C625 +
            (C3113 * C101 + C3109 * C108 + C3114 * C102 + C29683 * C109) *
                C29511) *
               C29588 * C6643 +
           ((C7624 + C7625) * C625 + (C7626 + C7627) * C29511) * C29588 *
               C29690) *
              C1067 -
          (((C7628 + C7629) * C29511 + (C7630 + C7631) * C625) * C29588 *
               C29690 +
           ((C7627 + C7626) * C29511 + (C7625 + C7624) * C625) * C29588 *
               C6643) *
              C1068 +
          (((C7631 + C7630) * C625 + (C7629 + C7628) * C29511) * C29588 *
               C6643 +
           ((C3113 * C7599 + C3109 * C7601 + C3114 * C7600 + C29683 * C7602) *
                C625 +
            (C3113 * C7603 + C3109 * C7605 + C3114 * C7604 + C29683 * C7606) *
                C29511) *
               C29588 * C29690) *
              C1069) *
         C29532) /
            (p * q * std::sqrt(p + q));
    d2eexy[12] +=
        (-std::pow(Pi, 2.5) *
         (((C3113 * C93 + C3109 * C98 + C3114 * C94 + C29683 * C99) * C688 +
           (C3113 * C152 + C3109 * C157 + C3114 * C153 + C29683 * C158) * C622 -
           (C3645 + C3644) * C689 - (C3714 + C3715) * C623 +
           (C3651 + C3650) * C690 + (C3716 + C3717) * C624) *
              C29588 * C6643 +
          ((C3113 * C1072 + C3109 * C1081 + C3114 * C1071 + C29683 * C1080) *
               C688 +
           (C3113 * C1134 + C3109 * C1140 + C3114 * C1133 + C29683 * C1139) *
               C622 -
           (C6008 + C6009) * C689 - (C6085 + C6084) * C623 +
           (C3113 * C5989 + C3109 * C5991 + C3114 * C5990 + C29683 * C5992) *
               C690 +
           (C3113 * C6075 + C3109 * C6077 + C3114 * C6076 + C29683 * C6078) *
               C624) *
              C29588 * C29690) *
         C29511 * C29543) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C3113 * C93 + C3109 * C98 + C3114 * C94 + C29683 * C99) * C151 +
            (C3113 * C152 + C3109 * C157 + C3114 * C153 + C29683 * C158) *
                C29532) *
               C29588 * C6643 +
           ((C3113 * C1072 + C3109 * C1081 + C3114 * C1071 + C29683 * C1080) *
                C151 +
            (C3113 * C1134 + C3109 * C1140 + C3114 * C1133 + C29683 * C1139) *
                C29532) *
               C29588 * C29690) *
              C80 -
          (((C3114 * C1132 + C29683 * C1138 + C3113 * C1133 + C3109 * C1139) *
                C29532 +
            (C3114 * C1070 + C29683 * C1079 + C3113 * C1071 + C3109 * C1080) *
                C151) *
               C29588 * C29690 +
           ((C3114 * C154 + C29683 * C159 + C3113 * C153 + C3109 * C158) *
                C29532 +
            (C3114 * C95 + C29683 * C100 + C3113 * C94 + C3109 * C99) * C151) *
               C29588 * C6643) *
              C81 +
          (((C3113 * C95 + C3109 * C100 + C3114 * C96 + C29683 * C104) * C151 +
            (C3113 * C154 + C3109 * C159 + C3114 * C155 + C29683 * C160) *
                C29532) *
               C29588 * C6643 +
           ((C3113 * C1070 + C3109 * C1079 + C3114 * C2071 + C29683 * C2072) *
                C151 +
            (C3113 * C1132 + C3109 * C1138 + C3114 * C2125 + C29683 * C2126) *
                C29532) *
               C29588 * C29690) *
              C82) *
         C29543) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C3113 * C93 + C3109 * C98 + C3114 * C94 + C29683 * C99) * C151 +
            (C3113 * C152 + C3109 * C157 + C3114 * C153 + C29683 * C158) *
                C29532) *
               C29588 * C6643 +
           ((C7624 + C7625) * C151 + (C7694 + C7695) * C29532) * C29588 *
               C29690) *
              C29511 * C1067 -
          (((C7696 + C7697) * C29532 + (C7630 + C7631) * C151) * C29588 *
               C29690 +
           ((C7695 + C7694) * C29532 + (C7625 + C7624) * C151) * C29588 *
               C6643) *
              C29511 * C1068 +
          (((C7631 + C7630) * C151 + (C7697 + C7696) * C29532) * C29588 *
               C6643 +
           ((C3113 * C7599 + C3109 * C7601 + C3114 * C7600 + C29683 * C7602) *
                C151 +
            (C3113 * C7681 + C3109 * C7683 + C3114 * C7682 + C29683 * C7684) *
                C29532) *
               C29588 * C29690) *
              C29511 * C1069)) /
            (p * q * std::sqrt(p + q));
    d2eexz[12] +=
        (-std::pow(Pi, 2.5) *
         ((((C3113 * C93 + C3109 * C98 + C3114 * C94 + C29683 * C99) * C200 +
            (C3113 * C201 + C3109 * C206 + C3114 * C202 + C29683 * C207) *
                C29543) *
               C29588 * C6643 +
           ((C3113 * C1072 + C3109 * C1081 + C3114 * C1071 + C29683 * C1080) *
                C200 +
            (C3113 * C1187 + C3109 * C1193 + C3114 * C1186 + C29683 * C1192) *
                C29543) *
               C29588 * C29690) *
              C622 -
          (((C6160 + C6161) * C29543 + (C6008 + C6009) * C200) * C29588 *
               C29690 +
           ((C3781 + C3780) * C29543 + (C3645 + C3644) * C200) * C29588 *
               C6643) *
              C623 +
          (((C3651 + C3650) * C200 + (C3783 + C3782) * C29543) * C29588 *
               C6643 +
           ((C3113 * C5989 + C3109 * C5991 + C3114 * C5990 + C29683 * C5992) *
                C200 +
            (C3113 * C6151 + C3109 * C6153 + C3114 * C6152 + C29683 * C6154) *
                C29543) *
               C29588 * C29690) *
              C624) *
         C29511) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C3113 * C93 + C3109 * C98 + C3114 * C94 + C29683 * C99) * C200 +
            (C3113 * C201 + C3109 * C206 + C3114 * C202 + C29683 * C207) *
                C29543) *
               C29588 * C6643 +
           ((C3113 * C1072 + C3109 * C1081 + C3114 * C1071 + C29683 * C1080) *
                C200 +
            (C3113 * C1187 + C3109 * C1193 + C3114 * C1186 + C29683 * C1192) *
                C29543) *
               C29588 * C29690) *
              C29532 * C80 -
          (((C3114 * C1185 + C29683 * C1191 + C3113 * C1186 + C3109 * C1192) *
                C29543 +
            (C3114 * C1070 + C29683 * C1079 + C3113 * C1071 + C3109 * C1080) *
                C200) *
               C29588 * C29690 +
           ((C3114 * C203 + C29683 * C208 + C3113 * C202 + C3109 * C207) *
                C29543 +
            (C3114 * C95 + C29683 * C100 + C3113 * C94 + C3109 * C99) * C200) *
               C29588 * C6643) *
              C29532 * C81 +
          (((C3113 * C95 + C3109 * C100 + C3114 * C96 + C29683 * C104) * C200 +
            (C3113 * C203 + C3109 * C208 + C3114 * C204 + C29683 * C209) *
                C29543) *
               C29588 * C6643 +
           ((C3113 * C1070 + C3109 * C1079 + C3114 * C2071 + C29683 * C2072) *
                C200 +
            (C3113 * C1185 + C3109 * C1191 + C3114 * C2179 + C29683 * C2180) *
                C29543) *
               C29588 * C29690) *
              C29532 * C82)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C3113 * C93 + C3109 * C98 + C3114 * C94 + C29683 * C99) * C1182 +
           (C3113 * C201 + C3109 * C206 + C3114 * C202 + C29683 * C207) *
               C1067 -
           (C7625 + C7624) * C1183 - (C7760 + C7761) * C1068 +
           (C7631 + C7630) * C1184 + (C7762 + C7763) * C1069) *
              C29588 * C6643 +
          ((C7624 + C7625) * C1182 + (C7761 + C7760) * C1067 -
           (C7630 + C7631) * C1183 - (C7763 + C7762) * C1068 +
           (C3113 * C7599 + C3109 * C7601 + C3114 * C7600 + C29683 * C7602) *
               C1184 +
           (C3113 * C7747 + C3109 * C7749 + C3114 * C7748 + C29683 * C7750) *
               C1069) *
              C29588 * C29690) *
         C29532 * C29511) /
            (p * q * std::sqrt(p + q));
    d2eeyx[12] +=
        (-std::pow(Pi, 2.5) * (((((C249 * C93 + C29588 * C250) * C625 +
                                  (C249 * C101 + C29588 * C255) * C29511) *
                                     C6643 +
                                 ((C249 * C1072 + C29588 * C1237) * C625 +
                                  (C249 * C1078 + C29588 * C1243) * C29511) *
                                     C29690) *
                                    C3109 +
                                ((C273 * C625 + C274 * C29511) * C6643 +
                                 (C2242 * C625 + C2243 * C29511) * C29690) *
                                    C29683) *
                                   C29543 * C622 -
                               ((((C249 * C2618 + C29588 * C2789) * C29511 +
                                  (C249 * C2612 + C29588 * C2786) * C625) *
                                     C29690 +
                                 (C1701 * C29511 + C1700 * C625) * C6643) *
                                    C29683 +
                                (((C249 * C2617 + C29588 * C2788) * C29511 +
                                  (C249 * C2611 + C29588 * C2785) * C625) *
                                     C29690 +
                                 ((C249 * C634 + C29588 * C799) * C29511 +
                                  (C249 * C628 + C29588 * C793) * C625) *
                                     C6643) *
                                    C3109) *
                                   C29543 * C623 +
                               ((((C249 * C629 + C29588 * C794) * C625 +
                                  (C249 * C641 + C29588 * C800) * C29511) *
                                     C6643 +
                                 ((C249 * C5989 + C29588 * C6227) * C625 +
                                  (C249 * C5993 + C29588 * C6229) * C29511) *
                                     C29690) *
                                    C3109 +
                                (((C249 * C630 + C29588 * C795) * C625 +
                                  (C249 * C642 + C29588 * C801) * C29511) *
                                     C6643 +
                                 ((C249 * C5990 + C29588 * C6228) * C625 +
                                  (C249 * C5994 + C29588 * C6230) * C29511) *
                                     C29690) *
                                    C29683) *
                                   C29543 * C624)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C249 * C93 + C29588 * C250) * C90 +
            (C249 * C101 + C29588 * C255) * C80 - C273 * C91 - C274 * C81 +
            C275 * C92 + C276 * C82) *
               C6643 +
           ((C249 * C1072 + C29588 * C1237) * C90 +
            (C249 * C1078 + C29588 * C1243) * C80 - C2242 * C91 - C2243 * C81 +
            C2244 * C92 + C2245 * C82) *
               C29690) *
              C3109 +
          ((C273 * C90 + C274 * C80 - C275 * C91 - C276 * C81 + C277 * C92 +
            C278 * C82) *
               C6643 +
           (C2242 * C90 + C2243 * C80 - C2244 * C91 - C2245 * C81 +
            (C249 * C2071 + C29588 * C2231) * C92 +
            (C249 * C2073 + C29588 * C2232) * C82) *
               C29690) *
              C29683) *
         C29543 * C29532) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C249 * C93 + C29588 * C250) * C625 +
             (C249 * C101 + C29588 * C255) * C29511) *
                C6643 +
            (C7838 + C7839) * C29690) *
               C3109 +
           ((C273 * C625 + C274 * C29511) * C6643 + (C7822 + C7823) * C29690) *
               C29683) *
              C1067 -
          (((C7840 + C7841) * C29690 + (C7823 + C7822) * C6643) * C29683 +
           ((C7842 + C7843) * C29690 + (C7839 + C7838) * C6643) * C3109) *
              C1068 +
          (((C7843 + C7842) * C6643 +
            ((C249 * C7599 + C29588 * C7813) * C625 +
             (C249 * C7603 + C29588 * C7815) * C29511) *
                C29690) *
               C3109 +
           ((C7841 + C7840) * C6643 +
            ((C249 * C7600 + C29588 * C7814) * C625 +
             (C249 * C7604 + C29588 * C7816) * C29511) *
                C29690) *
               C29683) *
              C1069) *
         C29532) /
            (p * q * std::sqrt(p + q));
    d2eeyy[12] +=
        (-std::pow(Pi, 2.5) *
         ((((C249 * C93 + C29588 * C250) * C688 +
            (C249 * C152 + C29588 * C316) * C622 -
            (C249 * C628 + C29588 * C793) * C689 -
            (C249 * C693 + C29588 * C841) * C623 +
            (C249 * C629 + C29588 * C794) * C690 +
            (C249 * C694 + C29588 * C842) * C624) *
               C6643 +
           ((C249 * C1072 + C29588 * C1237) * C688 +
            (C249 * C1134 + C29588 * C1287) * C622 -
            (C249 * C2611 + C29588 * C2785) * C689 -
            (C249 * C2673 + C29588 * C2841) * C623 +
            (C249 * C5989 + C29588 * C6227) * C690 +
            (C249 * C6075 + C29588 * C6297) * C624) *
               C29690) *
              C3109 +
          ((C273 * C688 + C331 * C622 - C1700 * C689 - C1765 * C623 +
            (C249 * C630 + C29588 * C795) * C690 +
            (C249 * C695 + C29588 * C844) * C624) *
               C6643 +
           (C2242 * C688 + C2303 * C622 -
            (C249 * C2612 + C29588 * C2786) * C689 -
            (C249 * C2674 + C29588 * C2842) * C623 +
            (C249 * C5990 + C29588 * C6228) * C690 +
            (C249 * C6076 + C29588 * C6298) * C624) *
               C29690) *
              C29683) *
         C29511 * C29543) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C249 * C93 + C29588 * C250) * C151 +
             (C249 * C152 + C29588 * C316) * C29532) *
                C6643 +
            ((C249 * C1072 + C29588 * C1237) * C151 +
             (C249 * C1134 + C29588 * C1287) * C29532) *
                C29690) *
               C3109 +
           ((C322 + C334) * C6643 + (C2297 + C2305) * C29690) * C29683) *
              C80 -
          (((C2306 + C2300) * C29690 + (C335 + C325) * C6643) * C29683 +
           ((C2305 + C2297) * C29690 + (C334 + C322) * C6643) * C3109) *
              C81 +
          ((C337 * C6643 + (C2300 + C2306) * C29690) * C3109 +
           ((C330 + C336) * C6643 + ((C249 * C2071 + C29588 * C2231) * C151 +
                                     (C249 * C2125 + C29588 * C2295) * C29532) *
                                        C29690) *
               C29683) *
              C82) *
         C29543) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C249 * C93 + C29588 * C250) * C151 +
             (C249 * C152 + C29588 * C316) * C29532) *
                C6643 +
            (C7896 + C7908) * C29690) *
               C3109 +
           ((C322 + C334) * C6643 + (C2297 + C2305) * C29690) * C29683) *
              C29511 * C1067 -
          (((C7909 + C7901) * C29690 + (C2305 + C2297) * C6643) * C29683 +
           ((C7910 + C7904) * C29690 + (C7908 + C7896) * C6643) * C3109) *
              C29511 * C1068 +
          (((C7904 + C7910) * C6643 +
            ((C249 * C7599 + C29588 * C7813) * C151 +
             (C249 * C7681 + C29588 * C7893) * C29532) *
                C29690) *
               C3109 +
           ((C7901 + C7909) * C6643 +
            ((C249 * C7600 + C29588 * C7814) * C151 +
             (C249 * C7682 + C29588 * C7894) * C29532) *
                C29690) *
               C29683) *
              C29511 * C1069)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[12] +=
        (-std::pow(Pi, 2.5) *
         (((((C249 * C93 + C29588 * C250) * C200 +
             (C249 * C201 + C29588 * C376) * C29543) *
                C6643 +
            ((C249 * C1072 + C29588 * C1237) * C200 +
             (C249 * C1187 + C29588 * C1329) * C29543) *
                C29690) *
               C3109 +
           ((C382 + C394) * C6643 + (C6896 + C6897) * C29690) * C29683) *
              C622 -
          ((((C249 * C2730 + C29588 * C2895) * C29543 +
             (C249 * C2612 + C29588 * C2786) * C200) *
                C29690 +
            (C1829 + C1825) * C6643) *
               C29683 +
           (((C249 * C2729 + C29588 * C2894) * C29543 +
             (C249 * C2611 + C29588 * C2785) * C200) *
                C29690 +
            ((C249 * C743 + C29588 * C887) * C29543 +
             (C249 * C628 + C29588 * C793) * C200) *
                C6643) *
               C3109) *
              C623 +
          ((((C249 * C629 + C29588 * C794) * C200 +
             (C249 * C744 + C29588 * C888) * C29543) *
                C6643 +
            ((C249 * C5989 + C29588 * C6227) * C200 +
             (C249 * C6151 + C29588 * C6365) * C29543) *
                C29690) *
               C3109 +
           (((C249 * C630 + C29588 * C795) * C200 +
             (C249 * C745 + C29588 * C889) * C29543) *
                C6643 +
            ((C249 * C5990 + C29588 * C6228) * C200 +
             (C249 * C6152 + C29588 * C6366) * C29543) *
                C29690) *
               C29683) *
              C624) *
         C29511) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C249 * C93 + C29588 * C250) * C200 +
             (C249 * C201 + C29588 * C376) * C29543) *
                C6643 +
            ((C249 * C1072 + C29588 * C1237) * C200 +
             (C249 * C1187 + C29588 * C1329) * C29543) *
                C29690) *
               C3109 +
           ((C382 + C394) * C6643 + (C6896 + C6897) * C29690) * C29683) *
              C29532 * C80 -
          (((C6898 + C6899) * C29690 + (C395 + C385) * C6643) * C29683 +
           ((C6897 + C6896) * C29690 + (C394 + C382) * C6643) * C3109) *
              C29532 * C81 +
          ((C397 * C6643 + (C6899 + C6898) * C29690) * C3109 +
           ((C390 + C396) * C6643 + ((C249 * C2071 + C29588 * C2231) * C200 +
                                     (C249 * C2179 + C29588 * C2356) * C29543) *
                                        C29690) *
               C29683) *
              C29532 * C82)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C249 * C93 + C29588 * C250) * C1182 +
            (C249 * C201 + C29588 * C376) * C1067 - C7832 * C1183 -
            C7969 * C1068 + C7837 * C1184 + C7970 * C1069) *
               C6643 +
           (C7832 * C1182 + C7969 * C1067 - C7837 * C1183 - C7970 * C1068 +
            (C249 * C7599 + C29588 * C7813) * C1184 +
            (C249 * C7747 + C29588 * C7960) * C1069) *
               C29690) *
              C3109 +
          ((C273 * C1182 + C391 * C1067 - C2242 * C1183 - C2368 * C1068 +
            C7835 * C1184 + C7971 * C1069) *
               C6643 +
           (C2242 * C1182 + C2368 * C1067 - C7835 * C1183 - C7971 * C1068 +
            (C249 * C7600 + C29588 * C7814) * C1184 +
            (C249 * C7748 + C29588 * C7961) * C1069) *
               C29690) *
              C29683) *
         C29532 * C29511) /
            (p * q * std::sqrt(p + q));
    d2eezx[12] +=
        (-std::pow(Pi, 2.5) *
         ((((C6949 * C93 + C6643 * C437 + C6950 * C1072 + C29690 * C1375) *
                C625 +
            (C6949 * C101 + C6643 * C442 + C6950 * C1078 + C29690 * C1381) *
                C29511) *
               C3109 +
           ((C6969 + C6968) * C625 + (C6971 + C6970) * C29511) * C29683) *
              C29588 * C29543 * C622 -
          (((C6950 * C2618 + C29690 * C2951 + C6949 * C633 + C6643 * C936) *
                C29511 +
            (C6950 * C2612 + C29690 * C2948 + C6949 * C627 + C6643 * C930) *
                C625) *
               C29683 +
           ((C6950 * C2617 + C29690 * C2950 + C6949 * C634 + C6643 * C937) *
                C29511 +
            (C6950 * C2611 + C29690 * C2947 + C6949 * C628 + C6643 * C931) *
                C625) *
               C3109) *
              C29588 * C29543 * C623 +
          (((C6949 * C629 + C6643 * C932 + C6950 * C5989 + C29690 * C6433) *
                C625 +
            (C6949 * C641 + C6643 * C938 + C6950 * C5993 + C29690 * C6435) *
                C29511) *
               C3109 +
           ((C6949 * C630 + C6643 * C933 + C6950 * C5990 + C29690 * C6434) *
                C625 +
            (C6949 * C642 + C6643 * C939 + C6950 * C5994 + C29690 * C6436) *
                C29511) *
               C29683) *
              C29588 * C29543 * C624)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C6949 * C93 + C6643 * C437 + C6950 * C1072 + C29690 * C1375) * C90 +
           (C6949 * C101 + C6643 * C442 + C6950 * C1078 + C29690 * C1381) *
               C80 -
           (C6968 + C6969) * C91 - (C6970 + C6971) * C81 +
           (C6972 + C6973) * C92 + (C6974 + C6975) * C82) *
              C3109 +
          ((C6969 + C6968) * C90 + (C6971 + C6970) * C80 -
           (C6973 + C6972) * C91 - (C6975 + C6974) * C81 +
           (C6949 * C96 + C6643 * C440 + C6950 * C2071 + C29690 * C2421) * C92 +
           (C6949 * C105 + C6643 * C445 + C6950 * C2073 + C29690 * C2422) *
               C82) *
              C29683) *
         C29588 * C29543 * C29532) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C6949 * C93 + C6643 * C437 + C6950 * C1072 + C29690 * C1375) *
                C625 +
            (C6949 * C101 + C6643 * C442 + C6950 * C1078 + C29690 * C1381) *
                C29511) *
               C3109 +
           ((C6969 + C6968) * C625 + (C6971 + C6970) * C29511) * C29683) *
              C29588 * C1067 -
          (((C6950 * C1086 + C29690 * C1383 + C6949 * C1077 + C6643 * C1380) *
                C29511 +
            (C6950 * C1074 + C29690 * C1377 + C6949 * C1071 + C6643 * C1374) *
                C625) *
               C29683 +
           ((C6950 * C1085 + C29690 * C1382 + C6949 * C1078 + C6643 * C1381) *
                C29511 +
            (C6950 * C1073 + C29690 * C1376 + C6949 * C1072 + C6643 * C1375) *
                C625) *
               C3109) *
              C29588 * C1068 +
          (((C6949 * C1073 + C6643 * C1376 + C6950 * C7599 + C29690 * C8021) *
                C625 +
            (C6949 * C1085 + C6643 * C1382 + C6950 * C7603 + C29690 * C8023) *
                C29511) *
               C3109 +
           ((C6949 * C1074 + C6643 * C1377 + C6950 * C7600 + C29690 * C8022) *
                C625 +
            (C6949 * C1086 + C6643 * C1383 + C6950 * C7604 + C29690 * C8024) *
                C29511) *
               C29683) *
              C29588 * C1069) *
         C29532) /
            (p * q * std::sqrt(p + q));
    d2eezy[12] +=
        (-std::pow(Pi, 2.5) *
         (((C6949 * C93 + C6643 * C437 + C6950 * C1072 + C29690 * C1375) *
               C688 +
           (C6949 * C152 + C6643 * C503 + C6950 * C1134 + C29690 * C1425) *
               C622 -
           (C6950 * C2611 + C29690 * C2947 + C6949 * C628 + C6643 * C931) *
               C689 -
           (C6950 * C2673 + C29690 * C3003 + C6949 * C693 + C6643 * C979) *
               C623 +
           (C6949 * C629 + C6643 * C932 + C6950 * C5989 + C29690 * C6433) *
               C690 +
           (C6949 * C694 + C6643 * C980 + C6950 * C6075 + C29690 * C6513) *
               C624) *
              C3109 +
          ((C6969 + C6968) * C688 + (C7034 + C7035) * C622 -
           (C6950 * C2612 + C29690 * C2948 + C6949 * C627 + C6643 * C930) *
               C689 -
           (C6950 * C2674 + C29690 * C3004 + C6949 * C692 + C6643 * C981) *
               C623 +
           (C6949 * C630 + C6643 * C933 + C6950 * C5990 + C29690 * C6434) *
               C690 +
           (C6949 * C695 + C6643 * C982 + C6950 * C6076 + C29690 * C6514) *
               C624) *
              C29683) *
         C29588 * C29511 * C29543) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C6949 * C93 + C6643 * C437 + C6950 * C1072 + C29690 * C1375) *
                C151 +
            (C6949 * C152 + C6643 * C503 + C6950 * C1134 + C29690 * C1425) *
                C29532) *
               C3109 +
           ((C6969 + C6968) * C151 + (C7034 + C7035) * C29532) * C29683) *
              C29588 * C80 -
          (((C7036 + C7037) * C29532 + (C6973 + C6972) * C151) * C29683 +
           ((C7035 + C7034) * C29532 + (C6968 + C6969) * C151) * C3109) *
              C29588 * C81 +
          (((C6972 + C6973) * C151 + (C7037 + C7036) * C29532) * C3109 +
           ((C6949 * C96 + C6643 * C440 + C6950 * C2071 + C29690 * C2421) *
                C151 +
            (C6949 * C155 + C6643 * C506 + C6950 * C2125 + C29690 * C2485) *
                C29532) *
               C29683) *
              C29588 * C82) *
         C29543) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C6949 * C93 + C6643 * C437 + C6950 * C1072 + C29690 * C1375) *
                C151 +
            (C6949 * C152 + C6643 * C503 + C6950 * C1134 + C29690 * C1425) *
                C29532) *
               C3109 +
           ((C6969 + C6968) * C151 + (C7034 + C7035) * C29532) * C29683) *
              C29588 * C29511 * C1067 -
          (((C6950 * C1136 + C29690 * C1427 + C6949 * C1133 + C6643 * C1424) *
                C29532 +
            (C6950 * C1074 + C29690 * C1377 + C6949 * C1071 + C6643 * C1374) *
                C151) *
               C29683 +
           ((C6950 * C1135 + C29690 * C1426 + C6949 * C1134 + C6643 * C1425) *
                C29532 +
            (C6950 * C1073 + C29690 * C1376 + C6949 * C1072 + C6643 * C1375) *
                C151) *
               C3109) *
              C29588 * C29511 * C1068 +
          (((C6949 * C1073 + C6643 * C1376 + C6950 * C7599 + C29690 * C8021) *
                C151 +
            (C6949 * C1135 + C6643 * C1426 + C6950 * C7681 + C29690 * C8075) *
                C29532) *
               C3109 +
           ((C6949 * C1074 + C6643 * C1377 + C6950 * C7600 + C29690 * C8022) *
                C151 +
            (C6949 * C1136 + C6643 * C1427 + C6950 * C7682 + C29690 * C8076) *
                C29532) *
               C29683) *
              C29588 * C29511 * C1069)) /
            (p * q * std::sqrt(p + q));
    d2eezz[12] +=
        (-std::pow(Pi, 2.5) *
         ((((C6949 * C93 + C6643 * C437 + C6950 * C1072 + C29690 * C1375) *
                C200 +
            (C6949 * C201 + C6643 * C562 + C6950 * C1187 + C29690 * C1467) *
                C29543) *
               C3109 +
           ((C6969 + C6968) * C200 + (C7096 + C7097) * C29543) * C29683) *
              C29588 * C622 -
          (((C6950 * C2730 + C29690 * C3057 + C6949 * C742 + C6643 * C1024) *
                C29543 +
            (C6950 * C2612 + C29690 * C2948 + C6949 * C627 + C6643 * C930) *
                C200) *
               C29683 +
           ((C6950 * C2729 + C29690 * C3056 + C6949 * C743 + C6643 * C1025) *
                C29543 +
            (C6950 * C2611 + C29690 * C2947 + C6949 * C628 + C6643 * C931) *
                C200) *
               C3109) *
              C29588 * C623 +
          (((C6949 * C629 + C6643 * C932 + C6950 * C5989 + C29690 * C6433) *
                C200 +
            (C6949 * C744 + C6643 * C1026 + C6950 * C6151 + C29690 * C6584) *
                C29543) *
               C3109 +
           ((C6949 * C630 + C6643 * C933 + C6950 * C5990 + C29690 * C6434) *
                C200 +
            (C6949 * C745 + C6643 * C1027 + C6950 * C6152 + C29690 * C6585) *
                C29543) *
               C29683) *
              C29588 * C624) *
         C29511) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C6949 * C93 + C6643 * C437 + C6950 * C1072 + C29690 * C1375) *
                C200 +
            (C6949 * C201 + C6643 * C562 + C6950 * C1187 + C29690 * C1467) *
                C29543) *
               C3109 +
           ((C6969 + C6968) * C200 + (C7096 + C7097) * C29543) * C29683) *
              C29588 * C29532 * C80 -
          (((C7098 + C7099) * C29543 + (C6973 + C6972) * C200) * C29683 +
           ((C7097 + C7096) * C29543 + (C6968 + C6969) * C200) * C3109) *
              C29588 * C29532 * C81 +
          (((C6972 + C6973) * C200 + (C7099 + C7098) * C29543) * C3109 +
           ((C6949 * C96 + C6643 * C440 + C6950 * C2071 + C29690 * C2421) *
                C200 +
            (C6949 * C204 + C6643 * C565 + C6950 * C2179 + C29690 * C2546) *
                C29543) *
               C29683) *
              C29588 * C29532 * C82)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C6949 * C93 + C6643 * C437 + C6950 * C1072 + C29690 * C1375) *
               C1182 +
           (C6949 * C201 + C6643 * C562 + C6950 * C1187 + C29690 * C1467) *
               C1067 -
           (C6950 * C1073 + C29690 * C1376 + C6949 * C1072 + C6643 * C1375) *
               C1183 -
           (C6950 * C1188 + C29690 * C1468 + C6949 * C1187 + C6643 * C1467) *
               C1068 +
           (C6949 * C1073 + C6643 * C1376 + C6950 * C7599 + C29690 * C8021) *
               C1184 +
           (C6949 * C1188 + C6643 * C1468 + C6950 * C7747 + C29690 * C8127) *
               C1069) *
              C3109 +
          ((C6969 + C6968) * C1182 + (C7096 + C7097) * C1067 -
           (C6950 * C1074 + C29690 * C1377 + C6949 * C1071 + C6643 * C1374) *
               C1183 -
           (C6950 * C1189 + C29690 * C1470 + C6949 * C1186 + C6643 * C1469) *
               C1068 +
           (C6949 * C1074 + C6643 * C1377 + C6950 * C7600 + C29690 * C8022) *
               C1184 +
           (C6949 * C1189 + C6643 * C1470 + C6950 * C7748 + C29690 * C8128) *
               C1069) *
              C29683) *
         C29588 * C29532 * C29511) /
            (p * q * std::sqrt(p + q));
    d2eexx[13] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C3113 * C93 + C3109 * C98 + C3114 * C94 + C29683 * C99) * C1527 +
            (C3113 * C101 + C3109 * C108 + C3114 * C102 + C29683 * C109) *
                C1523 -
            (C3114 * C95 + C29683 * C100 + C3113 * C94 + C3109 * C99) * C1528 -
            (C3114 * C103 + C29683 * C110 + C3113 * C102 + C3109 * C109) *
                C1524) *
               C29588 * C6643 +
           ((C7624 + C7625) * C1527 + (C7626 + C7627) * C1523 -
            (C8840 + C8841) * C1528 - (C8842 + C8843) * C1524) *
               C29588 * C29690) *
              C2069 +
          (((C8841 + C8840) * C1528 -
            ((C7627 + C7626) * C1523 + (C7625 + C7624) * C1527) +
            (C8843 + C8842) * C1524) *
               C29588 * C6643 +
           ((C3113 * C1074 + C3109 * C1083 + C3114 * C1075 + C29683 * C1084) *
                C1528 -
            ((C7628 + C7629) * C1523 + (C7630 + C7631) * C1527) +
            (C3113 * C1086 + C3109 * C1092 + C3114 * C1087 + C29683 * C1093) *
                C1524) *
               C29588 * C29690) *
              C2070) *
         C29532) /
        (p * q * std::sqrt(p + q));
    d2eexy[13] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C3113 * C93 + C3109 * C98 + C3114 * C94 + C29683 * C99) * C151 +
             (C3113 * C152 + C3109 * C157 + C3114 * C153 + C29683 * C158) *
                 C29532) *
                C29588 * C6643 +
            ((C7624 + C7625) * C151 + (C7694 + C7695) * C29532) * C29588 *
                C29690) *
               C1523 -
           (((C8914 + C8915) * C29532 + (C8840 + C8841) * C151) * C29588 *
                C29690 +
            ((C3114 * C154 + C29683 * C159 + C3113 * C153 + C3109 * C158) *
                 C29532 +
             (C3114 * C95 + C29683 * C100 + C3113 * C94 + C3109 * C99) * C151) *
                C29588 * C6643) *
               C1524) *
              C2069 +
          ((((C8841 + C8840) * C151 + (C8915 + C8914) * C29532) * C29588 *
                C6643 +
            ((C3113 * C1074 + C3109 * C1083 + C3114 * C1075 + C29683 * C1084) *
                 C151 +
             (C3113 * C1136 + C3109 * C1142 + C3114 * C1137 + C29683 * C1143) *
                 C29532) *
                C29588 * C29690) *
               C1524 -
           (((C7696 + C7697) * C29532 + (C7630 + C7631) * C151) * C29588 *
                C29690 +
            ((C7695 + C7694) * C29532 + (C7625 + C7624) * C151) * C29588 *
                C6643) *
               C1523) *
              C2070)) /
        (p * q * std::sqrt(p + q));
    d2eexz[13] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C3113 * C93 + C3109 * C98 + C3114 * C94 + C29683 * C99) * C2177 +
            (C3113 * C201 + C3109 * C206 + C3114 * C202 + C29683 * C207) *
                C2069 -
            (C7625 + C7624) * C2178 - (C7760 + C7761) * C2070) *
               C29588 * C6643 +
           ((C7624 + C7625) * C2177 + (C7761 + C7760) * C2069 -
            (C7630 + C7631) * C2178 - (C7763 + C7762) * C2070) *
               C29588 * C29690) *
              C29532 * C1523 +
          (((C8841 + C8840) * C2178 -
            ((C3114 * C203 + C29683 * C208 + C3113 * C202 + C3109 * C207) *
                 C2069 +
             (C3114 * C95 + C29683 * C100 + C3113 * C94 + C3109 * C99) *
                 C2177) +
            (C8986 + C8987) * C2070) *
               C29588 * C6643 +
           ((C3113 * C1074 + C3109 * C1083 + C3114 * C1075 + C29683 * C1084) *
                C2178 -
            ((C8987 + C8986) * C2069 + (C8840 + C8841) * C2177) +
            (C3113 * C1189 + C3109 * C1195 + C3114 * C1190 + C29683 * C1196) *
                C2070) *
               C29588 * C29690) *
              C29532 * C1524)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[13] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C249 * C93 + C29588 * C250) * C1527 +
             (C249 * C101 + C29588 * C255) * C1523 - C273 * C1528 -
             C274 * C1524) *
                C6643 +
            (C9054 + C9055 - C9056 - C9057) * C29690) *
               C3109 +
           ((C273 * C1527 + C274 * C1523 - C275 * C1528 - C276 * C1524) *
                C6643 +
            (C9058 + C9059 - C9060 - C9061) * C29690) *
               C29683) *
              C2069 +
          (((C9056 - (C9055 + C9054) + C9057) * C6643 +
            (C7835 * C1528 - (C7836 * C1523 + C7837 * C1527) + C7834 * C1524) *
                C29690) *
               C3109 +
           ((C9060 - (C9059 + C9058) + C9061) * C6643 +
            ((C249 * C1075 + C29588 * C1240) * C1528 -
             (C7834 * C1523 + C7835 * C1527) +
             (C249 * C1087 + C29588 * C1246) * C1524) *
                C29690) *
               C29683) *
              C2070) *
         C29532) /
        (p * q * std::sqrt(p + q));
    d2eeyy[13] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C249 * C93 + C29588 * C250) * C151 +
              (C249 * C152 + C29588 * C316) * C29532) *
                 C6643 +
             (C7896 + C7908) * C29690) *
                C3109 +
            ((C322 + C334) * C6643 + C9128 * C29690) * C29683) *
               C1523 -
           (((C2306 + C2300) * C29690 + (C335 + C325) * C6643) * C29683 +
            (C9129 * C29690 + (C334 + C322) * C6643) * C3109) *
               C1524) *
              C2069 +
          (((C9128 * C6643 + (C7901 + C7909) * C29690) * C3109 +
            ((C2300 + C2306) * C6643 +
             ((C249 * C1075 + C29588 * C1240) * C151 +
              (C249 * C1137 + C29588 * C1290) * C29532) *
                 C29690) *
                C29683) *
               C1524 -
           (((C7909 + C7901) * C29690 + C9129 * C6643) * C29683 +
            ((C7910 + C7904) * C29690 + (C7908 + C7896) * C6643) * C3109) *
               C1523) *
              C2070)) /
        (p * q * std::sqrt(p + q));
    d2eeyz[13] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C249 * C93 + C29588 * C250) * C2177 +
             (C249 * C201 + C29588 * C376) * C2069 - C7832 * C2178 -
             C7969 * C2070) *
                C6643 +
            (C7832 * C2177 + C7969 * C2069 - C7837 * C2178 - C7970 * C2070) *
                C29690) *
               C3109 +
           ((C2358 + C2359 - C2360 - C2370) * C6643 +
            (C9196 + C9197 - C9198 - C9199) * C29690) *
               C29683) *
              C29532 * C1523 +
          (((C2360 - (C2359 + C2358) + C2370) * C6643 +
            (C9198 - (C9197 + C9196) + C9199) * C29690) *
               C3109 +
           ((C2365 - (C2364 + C2363) + C2371) * C6643 +
            ((C249 * C1075 + C29588 * C1240) * C2178 -
             (C2369 * C2069 + C2244 * C2177) +
             (C249 * C1190 + C29588 * C1334) * C2070) *
                C29690) *
               C29683) *
              C29532 * C1524)) /
        (p * q * std::sqrt(p + q));
    d2eezx[13] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C6949 * C93 + C6643 * C437 + C6950 * C1072 + C29690 * C1375) *
                C1527 +
            (C6949 * C101 + C6643 * C442 + C6950 * C1078 + C29690 * C1381) *
                C1523 -
            (C6968 + C6969) * C1528 - (C6970 + C6971) * C1524) *
               C3109 +
           ((C6969 + C6968) * C1527 + (C6971 + C6970) * C1523 -
            (C6973 + C6972) * C1528 - (C6975 + C6974) * C1524) *
               C29683) *
              C29588 * C2069 +
          (((C9274 + C9275) * C1528 -
            ((C6950 * C1085 + C29690 * C1382 + C6949 * C1078 + C6643 * C1381) *
                 C1523 +
             (C6950 * C1073 + C29690 * C1376 + C6949 * C1072 + C6643 * C1375) *
                 C1527) +
            (C9276 + C9277) * C1524) *
               C3109 +
           ((C6949 * C1070 + C6643 * C1373 + C6950 * C1075 + C29690 * C1378) *
                C1528 -
            ((C9277 + C9276) * C1523 + (C9275 + C9274) * C1527) +
            (C6949 * C1076 + C6643 * C1379 + C6950 * C1087 + C29690 * C1384) *
                C1524) *
               C29683) *
              C29588 * C2070) *
         C29532) /
        (p * q * std::sqrt(p + q));
    d2eezy[13] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C6949 * C93 + C6643 * C437 + C6950 * C1072 + C29690 * C1375) *
                 C151 +
             (C6949 * C152 + C6643 * C503 + C6950 * C1134 + C29690 * C1425) *
                 C29532) *
                C3109 +
            ((C6969 + C6968) * C151 + (C7034 + C7035) * C29532) * C29683) *
               C29588 * C1523 -
           (((C7036 + C7037) * C29532 + (C6973 + C6972) * C151) * C29683 +
            ((C7035 + C7034) * C29532 + (C6968 + C6969) * C151) * C3109) *
               C29588 * C1524) *
              C2069 +
          ((((C9274 + C9275) * C151 + (C9348 + C9349) * C29532) * C3109 +
            ((C6949 * C1070 + C6643 * C1373 + C6950 * C1075 + C29690 * C1378) *
                 C151 +
             (C6949 * C1132 + C6643 * C1423 + C6950 * C1137 + C29690 * C1428) *
                 C29532) *
                C29683) *
               C29588 * C1524 -
           (((C9349 + C9348) * C29532 + (C9275 + C9274) * C151) * C29683 +
            ((C6950 * C1135 + C29690 * C1426 + C6949 * C1134 + C6643 * C1425) *
                 C29532 +
             (C6950 * C1073 + C29690 * C1376 + C6949 * C1072 + C6643 * C1375) *
                 C151) *
                C3109) *
               C29588 * C1523) *
              C2070)) /
        (p * q * std::sqrt(p + q));
    d2eezz[13] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C6949 * C93 + C6643 * C437 + C6950 * C1072 + C29690 * C1375) *
                C2177 +
            (C6949 * C201 + C6643 * C562 + C6950 * C1187 + C29690 * C1467) *
                C2069 -
            (C6950 * C1073 + C29690 * C1376 + C6949 * C1072 + C6643 * C1375) *
                C2178 -
            (C6950 * C1188 + C29690 * C1468 + C6949 * C1187 + C6643 * C1467) *
                C2070) *
               C3109 +
           ((C6969 + C6968) * C2177 + (C7096 + C7097) * C2069 -
            (C9275 + C9274) * C2178 - (C9420 + C9421) * C2070) *
               C29683) *
              C29588 * C29532 * C1523 +
          (((C9274 + C9275) * C2178 -
            ((C7097 + C7096) * C2069 + (C6968 + C6969) * C2177) +
            (C9421 + C9420) * C2070) *
               C3109 +
           ((C6949 * C1070 + C6643 * C1373 + C6950 * C1075 + C29690 * C1378) *
                C2178 -
            ((C7098 + C7099) * C2069 + (C6973 + C6972) * C2177) +
            (C6949 * C1185 + C6643 * C1471 + C6950 * C1190 + C29690 * C1472) *
                C2070) *
               C29683) *
              C29588 * C29532 * C1524)) /
        (p * q * std::sqrt(p + q));
    d2eexx[14] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C3113 * C93 + C3109 * C98 + C3114 * C94 + C29683 * C99) * C90 +
           (C3113 * C101 + C3109 * C108 + C3114 * C102 + C29683 * C109) * C80 -
           (C3114 * C95 + C29683 * C100 + C3113 * C94 + C3109 * C99) * C91 -
           (C3114 * C103 + C29683 * C110 + C3113 * C102 + C3109 * C109) * C81 +
           (C3113 * C95 + C3109 * C100 + C3114 * C96 + C29683 * C104) * C92 +
           (C3113 * C103 + C3109 * C110 + C3114 * C105 + C29683 * C111) * C82) *
              C29588 * C6643 +
          ((C3113 * C1072 + C3109 * C1081 + C3114 * C1071 + C29683 * C1080) *
               C90 +
           (C3113 * C1078 + C3109 * C1090 + C3114 * C1077 + C29683 * C1089) *
               C80 -
           (C3114 * C1070 + C29683 * C1079 + C3113 * C1071 + C3109 * C1080) *
               C91 -
           (C3114 * C1076 + C29683 * C1088 + C3113 * C1077 + C3109 * C1089) *
               C81 +
           (C3113 * C1070 + C3109 * C1079 + C3114 * C2071 + C29683 * C2072) *
               C92 +
           (C3113 * C1076 + C3109 * C1088 + C3114 * C2073 + C29683 * C2074) *
               C82) *
              C29588 * C29690) *
         C29543 * C29532) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C3113 * C93 + C3109 * C98 + C3114 * C94 + C29683 * C99) * C625 +
            (C3113 * C101 + C3109 * C108 + C3114 * C102 + C29683 * C109) *
                C29511) *
               C29588 * C6643 +
           ((C3113 * C1072 + C3109 * C1081 + C3114 * C1071 + C29683 * C1080) *
                C625 +
            (C3113 * C1078 + C3109 * C1090 + C3114 * C1077 + C29683 * C1089) *
                C29511) *
               C29588 * C29690) *
              C29543 * C622 -
          (((C6006 + C6007) * C29511 + (C6008 + C6009) * C625) * C29588 *
               C29690 +
           ((C3647 + C3646) * C29511 + (C3645 + C3644) * C625) * C29588 *
               C6643) *
              C29543 * C623 +
          (((C3651 + C3650) * C625 + (C3649 + C3648) * C29511) * C29588 *
               C6643 +
           ((C3113 * C5989 + C3109 * C5991 + C3114 * C5990 + C29683 * C5992) *
                C625 +
            (C3113 * C5993 + C3109 * C5995 + C3114 * C5994 + C29683 * C5996) *
                C29511) *
               C29588 * C29690) *
              C29543 * C624)) /
            (p * q * std::sqrt(p + q));
    d2eexy[14] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C3113 * C93 + C3109 * C98 + C3114 * C94 + C29683 * C99) * C151 +
            (C3113 * C152 + C3109 * C157 + C3114 * C153 + C29683 * C158) *
                C29532) *
               C29588 * C6643 +
           ((C3113 * C1072 + C3109 * C1081 + C3114 * C1071 + C29683 * C1080) *
                C151 +
            (C3113 * C1134 + C3109 * C1140 + C3114 * C1133 + C29683 * C1139) *
                C29532) *
               C29588 * C29690) *
              C80 -
          (((C3114 * C1132 + C29683 * C1138 + C3113 * C1133 + C3109 * C1139) *
                C29532 +
            (C3114 * C1070 + C29683 * C1079 + C3113 * C1071 + C3109 * C1080) *
                C151) *
               C29588 * C29690 +
           ((C3114 * C154 + C29683 * C159 + C3113 * C153 + C3109 * C158) *
                C29532 +
            (C3114 * C95 + C29683 * C100 + C3113 * C94 + C3109 * C99) * C151) *
               C29588 * C6643) *
              C81 +
          (((C3113 * C95 + C3109 * C100 + C3114 * C96 + C29683 * C104) * C151 +
            (C3113 * C154 + C3109 * C159 + C3114 * C155 + C29683 * C160) *
                C29532) *
               C29588 * C6643 +
           ((C3113 * C1070 + C3109 * C1079 + C3114 * C2071 + C29683 * C2072) *
                C151 +
            (C3113 * C1132 + C3109 * C1138 + C3114 * C2125 + C29683 * C2126) *
                C29532) *
               C29588 * C29690) *
              C82) *
         C29543) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C3113 * C93 + C3109 * C98 + C3114 * C94 + C29683 * C99) * C688 +
           (C3113 * C152 + C3109 * C157 + C3114 * C153 + C29683 * C158) * C622 -
           (C3645 + C3644) * C689 - (C3714 + C3715) * C623 +
           (C3651 + C3650) * C690 + (C3716 + C3717) * C624) *
              C29588 * C6643 +
          ((C3113 * C1072 + C3109 * C1081 + C3114 * C1071 + C29683 * C1080) *
               C688 +
           (C3113 * C1134 + C3109 * C1140 + C3114 * C1133 + C29683 * C1139) *
               C622 -
           (C6008 + C6009) * C689 - (C6085 + C6084) * C623 +
           (C3113 * C5989 + C3109 * C5991 + C3114 * C5990 + C29683 * C5992) *
               C690 +
           (C3113 * C6075 + C3109 * C6077 + C3114 * C6076 + C29683 * C6078) *
               C624) *
              C29588 * C29690) *
         C29511 * C29543) /
            (p * q * std::sqrt(p + q));
    d2eexz[14] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C3113 * C93 + C3109 * C98 + C3114 * C94 + C29683 * C99) * C200 +
            (C3113 * C201 + C3109 * C206 + C3114 * C202 + C29683 * C207) *
                C29543) *
               C29588 * C6643 +
           ((C3113 * C1072 + C3109 * C1081 + C3114 * C1071 + C29683 * C1080) *
                C200 +
            (C3113 * C1187 + C3109 * C1193 + C3114 * C1186 + C29683 * C1192) *
                C29543) *
               C29588 * C29690) *
              C29532 * C80 -
          (((C3114 * C1185 + C29683 * C1191 + C3113 * C1186 + C3109 * C1192) *
                C29543 +
            (C3114 * C1070 + C29683 * C1079 + C3113 * C1071 + C3109 * C1080) *
                C200) *
               C29588 * C29690 +
           ((C3114 * C203 + C29683 * C208 + C3113 * C202 + C3109 * C207) *
                C29543 +
            (C3114 * C95 + C29683 * C100 + C3113 * C94 + C3109 * C99) * C200) *
               C29588 * C6643) *
              C29532 * C81 +
          (((C3113 * C95 + C3109 * C100 + C3114 * C96 + C29683 * C104) * C200 +
            (C3113 * C203 + C3109 * C208 + C3114 * C204 + C29683 * C209) *
                C29543) *
               C29588 * C6643 +
           ((C3113 * C1070 + C3109 * C1079 + C3114 * C2071 + C29683 * C2072) *
                C200 +
            (C3113 * C1185 + C3109 * C1191 + C3114 * C2179 + C29683 * C2180) *
                C29543) *
               C29588 * C29690) *
              C29532 * C82)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C3113 * C93 + C3109 * C98 + C3114 * C94 + C29683 * C99) * C200 +
            (C3113 * C201 + C3109 * C206 + C3114 * C202 + C29683 * C207) *
                C29543) *
               C29588 * C6643 +
           ((C3113 * C1072 + C3109 * C1081 + C3114 * C1071 + C29683 * C1080) *
                C200 +
            (C3113 * C1187 + C3109 * C1193 + C3114 * C1186 + C29683 * C1192) *
                C29543) *
               C29588 * C29690) *
              C622 -
          (((C6160 + C6161) * C29543 + (C6008 + C6009) * C200) * C29588 *
               C29690 +
           ((C3781 + C3780) * C29543 + (C3645 + C3644) * C200) * C29588 *
               C6643) *
              C623 +
          (((C3651 + C3650) * C200 + (C3783 + C3782) * C29543) * C29588 *
               C6643 +
           ((C3113 * C5989 + C3109 * C5991 + C3114 * C5990 + C29683 * C5992) *
                C200 +
            (C3113 * C6151 + C3109 * C6153 + C3114 * C6152 + C29683 * C6154) *
                C29543) *
               C29588 * C29690) *
              C624) *
         C29511) /
            (p * q * std::sqrt(p + q));
    d2eeyx[14] += (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C249 * C93 + C29588 * C250) * C90 +
                      (C249 * C101 + C29588 * C255) * C80 - C273 * C91 -
                      C274 * C81 + C275 * C92 + C276 * C82) *
                         C6643 +
                     ((C249 * C1072 + C29588 * C1237) * C90 +
                      (C249 * C1078 + C29588 * C1243) * C80 - C2242 * C91 -
                      C2243 * C81 + C2244 * C92 + C2245 * C82) *
                         C29690) *
                        C3109 +
                    ((C273 * C90 + C274 * C80 - C275 * C91 - C276 * C81 +
                      C277 * C92 + C278 * C82) *
                         C6643 +
                     (C2242 * C90 + C2243 * C80 - C2244 * C91 - C2245 * C81 +
                      (C249 * C2071 + C29588 * C2231) * C92 +
                      (C249 * C2073 + C29588 * C2232) * C82) *
                         C29690) *
                        C29683) *
                   C29543 * C29532) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((((C249 * C93 + C29588 * C250) * C625 +
                       (C249 * C101 + C29588 * C255) * C29511) *
                          C6643 +
                      ((C249 * C1072 + C29588 * C1237) * C625 +
                       (C249 * C1078 + C29588 * C1243) * C29511) *
                          C29690) *
                         C3109 +
                     ((C273 * C625 + C274 * C29511) * C6643 +
                      (C2242 * C625 + C2243 * C29511) * C29690) *
                         C29683) *
                        C29543 * C622 -
                    ((((C249 * C2618 + C29588 * C2789) * C29511 +
                       (C249 * C2612 + C29588 * C2786) * C625) *
                          C29690 +
                      (C1701 * C29511 + C1700 * C625) * C6643) *
                         C29683 +
                     (((C249 * C2617 + C29588 * C2788) * C29511 +
                       (C249 * C2611 + C29588 * C2785) * C625) *
                          C29690 +
                      ((C249 * C634 + C29588 * C799) * C29511 +
                       (C249 * C628 + C29588 * C793) * C625) *
                          C6643) *
                         C3109) *
                        C29543 * C623 +
                    ((((C249 * C629 + C29588 * C794) * C625 +
                       (C249 * C641 + C29588 * C800) * C29511) *
                          C6643 +
                      ((C249 * C5989 + C29588 * C6227) * C625 +
                       (C249 * C5993 + C29588 * C6229) * C29511) *
                          C29690) *
                         C3109 +
                     (((C249 * C630 + C29588 * C795) * C625 +
                       (C249 * C642 + C29588 * C801) * C29511) *
                          C6643 +
                      ((C249 * C5990 + C29588 * C6228) * C625 +
                       (C249 * C5994 + C29588 * C6230) * C29511) *
                          C29690) *
                         C29683) *
                        C29543 * C624)) /
                      (p * q * std::sqrt(p + q));
    d2eeyy[14] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C249 * C93 + C29588 * C250) * C151 +
             (C249 * C152 + C29588 * C316) * C29532) *
                C6643 +
            ((C249 * C1072 + C29588 * C1237) * C151 +
             (C249 * C1134 + C29588 * C1287) * C29532) *
                C29690) *
               C3109 +
           ((C322 + C334) * C6643 + (C2297 + C2305) * C29690) * C29683) *
              C80 -
          (((C2306 + C2300) * C29690 + (C335 + C325) * C6643) * C29683 +
           ((C2305 + C2297) * C29690 + (C334 + C322) * C6643) * C3109) *
              C81 +
          ((C337 * C6643 + (C2300 + C2306) * C29690) * C3109 +
           ((C330 + C336) * C6643 + ((C249 * C2071 + C29588 * C2231) * C151 +
                                     (C249 * C2125 + C29588 * C2295) * C29532) *
                                        C29690) *
               C29683) *
              C82) *
         C29543) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C249 * C93 + C29588 * C250) * C688 +
            (C249 * C152 + C29588 * C316) * C622 -
            (C249 * C628 + C29588 * C793) * C689 -
            (C249 * C693 + C29588 * C841) * C623 +
            (C249 * C629 + C29588 * C794) * C690 +
            (C249 * C694 + C29588 * C842) * C624) *
               C6643 +
           ((C249 * C1072 + C29588 * C1237) * C688 +
            (C249 * C1134 + C29588 * C1287) * C622 -
            (C249 * C2611 + C29588 * C2785) * C689 -
            (C249 * C2673 + C29588 * C2841) * C623 +
            (C249 * C5989 + C29588 * C6227) * C690 +
            (C249 * C6075 + C29588 * C6297) * C624) *
               C29690) *
              C3109 +
          ((C273 * C688 + C331 * C622 - C1700 * C689 - C1765 * C623 +
            (C249 * C630 + C29588 * C795) * C690 +
            (C249 * C695 + C29588 * C844) * C624) *
               C6643 +
           (C2242 * C688 + C2303 * C622 -
            (C249 * C2612 + C29588 * C2786) * C689 -
            (C249 * C2674 + C29588 * C2842) * C623 +
            (C249 * C5990 + C29588 * C6228) * C690 +
            (C249 * C6076 + C29588 * C6298) * C624) *
               C29690) *
              C29683) *
         C29511 * C29543) /
            (p * q * std::sqrt(p + q));
    d2eeyz[14] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C249 * C93 + C29588 * C250) * C200 +
             (C249 * C201 + C29588 * C376) * C29543) *
                C6643 +
            ((C249 * C1072 + C29588 * C1237) * C200 +
             (C249 * C1187 + C29588 * C1329) * C29543) *
                C29690) *
               C3109 +
           ((C382 + C394) * C6643 + (C6896 + C6897) * C29690) * C29683) *
              C29532 * C80 -
          (((C6898 + C6899) * C29690 + (C395 + C385) * C6643) * C29683 +
           ((C6897 + C6896) * C29690 + (C394 + C382) * C6643) * C3109) *
              C29532 * C81 +
          ((C397 * C6643 + (C6899 + C6898) * C29690) * C3109 +
           ((C390 + C396) * C6643 + ((C249 * C2071 + C29588 * C2231) * C200 +
                                     (C249 * C2179 + C29588 * C2356) * C29543) *
                                        C29690) *
               C29683) *
              C29532 * C82)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C249 * C93 + C29588 * C250) * C200 +
             (C249 * C201 + C29588 * C376) * C29543) *
                C6643 +
            ((C249 * C1072 + C29588 * C1237) * C200 +
             (C249 * C1187 + C29588 * C1329) * C29543) *
                C29690) *
               C3109 +
           ((C382 + C394) * C6643 + (C6896 + C6897) * C29690) * C29683) *
              C622 -
          ((((C249 * C2730 + C29588 * C2895) * C29543 +
             (C249 * C2612 + C29588 * C2786) * C200) *
                C29690 +
            (C1829 + C1825) * C6643) *
               C29683 +
           (((C249 * C2729 + C29588 * C2894) * C29543 +
             (C249 * C2611 + C29588 * C2785) * C200) *
                C29690 +
            ((C249 * C743 + C29588 * C887) * C29543 +
             (C249 * C628 + C29588 * C793) * C200) *
                C6643) *
               C3109) *
              C623 +
          ((((C249 * C629 + C29588 * C794) * C200 +
             (C249 * C744 + C29588 * C888) * C29543) *
                C6643 +
            ((C249 * C5989 + C29588 * C6227) * C200 +
             (C249 * C6151 + C29588 * C6365) * C29543) *
                C29690) *
               C3109 +
           (((C249 * C630 + C29588 * C795) * C200 +
             (C249 * C745 + C29588 * C889) * C29543) *
                C6643 +
            ((C249 * C5990 + C29588 * C6228) * C200 +
             (C249 * C6152 + C29588 * C6366) * C29543) *
                C29690) *
               C29683) *
              C624) *
         C29511) /
            (p * q * std::sqrt(p + q));
    d2eezx[14] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C6949 * C93 + C6643 * C437 + C6950 * C1072 + C29690 * C1375) * C90 +
           (C6949 * C101 + C6643 * C442 + C6950 * C1078 + C29690 * C1381) *
               C80 -
           (C6968 + C6969) * C91 - (C6970 + C6971) * C81 +
           (C6972 + C6973) * C92 + (C6974 + C6975) * C82) *
              C3109 +
          ((C6969 + C6968) * C90 + (C6971 + C6970) * C80 -
           (C6973 + C6972) * C91 - (C6975 + C6974) * C81 +
           (C6949 * C96 + C6643 * C440 + C6950 * C2071 + C29690 * C2421) * C92 +
           (C6949 * C105 + C6643 * C445 + C6950 * C2073 + C29690 * C2422) *
               C82) *
              C29683) *
         C29588 * C29543 * C29532) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6949 * C93 + C6643 * C437 + C6950 * C1072 + C29690 * C1375) *
                C625 +
            (C6949 * C101 + C6643 * C442 + C6950 * C1078 + C29690 * C1381) *
                C29511) *
               C3109 +
           ((C6969 + C6968) * C625 + (C6971 + C6970) * C29511) * C29683) *
              C29588 * C29543 * C622 -
          (((C6950 * C2618 + C29690 * C2951 + C6949 * C633 + C6643 * C936) *
                C29511 +
            (C6950 * C2612 + C29690 * C2948 + C6949 * C627 + C6643 * C930) *
                C625) *
               C29683 +
           ((C6950 * C2617 + C29690 * C2950 + C6949 * C634 + C6643 * C937) *
                C29511 +
            (C6950 * C2611 + C29690 * C2947 + C6949 * C628 + C6643 * C931) *
                C625) *
               C3109) *
              C29588 * C29543 * C623 +
          (((C6949 * C629 + C6643 * C932 + C6950 * C5989 + C29690 * C6433) *
                C625 +
            (C6949 * C641 + C6643 * C938 + C6950 * C5993 + C29690 * C6435) *
                C29511) *
               C3109 +
           ((C6949 * C630 + C6643 * C933 + C6950 * C5990 + C29690 * C6434) *
                C625 +
            (C6949 * C642 + C6643 * C939 + C6950 * C5994 + C29690 * C6436) *
                C29511) *
               C29683) *
              C29588 * C29543 * C624)) /
            (p * q * std::sqrt(p + q));
    d2eezy[14] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6949 * C93 + C6643 * C437 + C6950 * C1072 + C29690 * C1375) *
                C151 +
            (C6949 * C152 + C6643 * C503 + C6950 * C1134 + C29690 * C1425) *
                C29532) *
               C3109 +
           ((C6969 + C6968) * C151 + (C7034 + C7035) * C29532) * C29683) *
              C29588 * C80 -
          (((C7036 + C7037) * C29532 + (C6973 + C6972) * C151) * C29683 +
           ((C7035 + C7034) * C29532 + (C6968 + C6969) * C151) * C3109) *
              C29588 * C81 +
          (((C6972 + C6973) * C151 + (C7037 + C7036) * C29532) * C3109 +
           ((C6949 * C96 + C6643 * C440 + C6950 * C2071 + C29690 * C2421) *
                C151 +
            (C6949 * C155 + C6643 * C506 + C6950 * C2125 + C29690 * C2485) *
                C29532) *
               C29683) *
              C29588 * C82) *
         C29543) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C6949 * C93 + C6643 * C437 + C6950 * C1072 + C29690 * C1375) *
               C688 +
           (C6949 * C152 + C6643 * C503 + C6950 * C1134 + C29690 * C1425) *
               C622 -
           (C6950 * C2611 + C29690 * C2947 + C6949 * C628 + C6643 * C931) *
               C689 -
           (C6950 * C2673 + C29690 * C3003 + C6949 * C693 + C6643 * C979) *
               C623 +
           (C6949 * C629 + C6643 * C932 + C6950 * C5989 + C29690 * C6433) *
               C690 +
           (C6949 * C694 + C6643 * C980 + C6950 * C6075 + C29690 * C6513) *
               C624) *
              C3109 +
          ((C6969 + C6968) * C688 + (C7034 + C7035) * C622 -
           (C6950 * C2612 + C29690 * C2948 + C6949 * C627 + C6643 * C930) *
               C689 -
           (C6950 * C2674 + C29690 * C3004 + C6949 * C692 + C6643 * C981) *
               C623 +
           (C6949 * C630 + C6643 * C933 + C6950 * C5990 + C29690 * C6434) *
               C690 +
           (C6949 * C695 + C6643 * C982 + C6950 * C6076 + C29690 * C6514) *
               C624) *
              C29683) *
         C29588 * C29511 * C29543) /
            (p * q * std::sqrt(p + q));
    d2eezz[14] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6949 * C93 + C6643 * C437 + C6950 * C1072 + C29690 * C1375) *
                C200 +
            (C6949 * C201 + C6643 * C562 + C6950 * C1187 + C29690 * C1467) *
                C29543) *
               C3109 +
           ((C6969 + C6968) * C200 + (C7096 + C7097) * C29543) * C29683) *
              C29588 * C29532 * C80 -
          (((C7098 + C7099) * C29543 + (C6973 + C6972) * C200) * C29683 +
           ((C7097 + C7096) * C29543 + (C6968 + C6969) * C200) * C3109) *
              C29588 * C29532 * C81 +
          (((C6972 + C6973) * C200 + (C7099 + C7098) * C29543) * C3109 +
           ((C6949 * C96 + C6643 * C440 + C6950 * C2071 + C29690 * C2421) *
                C200 +
            (C6949 * C204 + C6643 * C565 + C6950 * C2179 + C29690 * C2546) *
                C29543) *
               C29683) *
              C29588 * C29532 * C82)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6949 * C93 + C6643 * C437 + C6950 * C1072 + C29690 * C1375) *
                C200 +
            (C6949 * C201 + C6643 * C562 + C6950 * C1187 + C29690 * C1467) *
                C29543) *
               C3109 +
           ((C6969 + C6968) * C200 + (C7096 + C7097) * C29543) * C29683) *
              C29588 * C622 -
          (((C6950 * C2730 + C29690 * C3057 + C6949 * C742 + C6643 * C1024) *
                C29543 +
            (C6950 * C2612 + C29690 * C2948 + C6949 * C627 + C6643 * C930) *
                C200) *
               C29683 +
           ((C6950 * C2729 + C29690 * C3056 + C6949 * C743 + C6643 * C1025) *
                C29543 +
            (C6950 * C2611 + C29690 * C2947 + C6949 * C628 + C6643 * C931) *
                C200) *
               C3109) *
              C29588 * C623 +
          (((C6949 * C629 + C6643 * C932 + C6950 * C5989 + C29690 * C6433) *
                C200 +
            (C6949 * C744 + C6643 * C1026 + C6950 * C6151 + C29690 * C6584) *
                C29543) *
               C3109 +
           ((C6949 * C630 + C6643 * C933 + C6950 * C5990 + C29690 * C6434) *
                C200 +
            (C6949 * C745 + C6643 * C1027 + C6950 * C6152 + C29690 * C6585) *
                C29543) *
               C29683) *
              C29588 * C624) *
         C29511) /
            (p * q * std::sqrt(p + q));
    d2eexx[15] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C10089 * C93 + C10085 * C98 + C10090 * C94 + C29683 * C99) *
                C1527 +
            (C10089 * C101 + C10085 * C108 + C10090 * C102 + C29683 * C109) *
                C1523 -
            (C10090 * C95 + C29683 * C100 + C10089 * C94 + C10085 * C99) *
                C1528 -
            (C10090 * C103 + C29683 * C110 + C10089 * C102 + C10085 * C109) *
                C1524) *
               C10087 +
           ((C10608 + C10609) * C1527 + (C10610 + C10611) * C1523 -
            (C11564 + C11565) * C1528 - (C11566 + C11567) * C1524) *
               C29688) *
              C29603 * C29543 * C1525 +
          (((C11565 + C11564) * C1528 -
            ((C10611 + C10610) * C1523 + (C10609 + C10608) * C1527) +
            (C11567 + C11566) * C1524) *
               C10087 +
           ((C10089 * C630 + C10085 * C639 + C10090 * C631 + C29683 * C640) *
                C1528 -
            ((C10612 + C10613) * C1523 + (C10614 + C10615) * C1527) +
            (C10089 * C642 + C10085 * C648 + C10090 * C643 + C29683 * C649) *
                C1524) *
               C29688) *
              C29603 * C29543 * C1526)) /
        (p * q * std::sqrt(p + q));
    d2eexy[15] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C10089 * C93 + C10085 * C98 + C10090 * C94 + C29683 * C99) *
                C1583 +
            (C10089 * C152 + C10085 * C157 + C10090 * C153 + C29683 * C158) *
                C1525 -
            (C10609 + C10608) * C1584 - (C10674 + C10675) * C1526) *
               C10087 +
           ((C10608 + C10609) * C1583 + (C10675 + C10674) * C1525 -
            (C10614 + C10615) * C1584 - (C10677 + C10676) * C1526) *
               C29688) *
              C29603 * C1523 +
          (((C11565 + C11564) * C1584 -
            ((C10090 * C154 + C29683 * C159 + C10089 * C153 + C10085 * C158) *
                 C1525 +
             (C10090 * C95 + C29683 * C100 + C10089 * C94 + C10085 * C99) *
                 C1583) +
            (C11638 + C11639) * C1526) *
               C10087 +
           ((C10089 * C630 + C10085 * C639 + C10090 * C631 + C29683 * C640) *
                C1584 -
            ((C11639 + C11638) * C1525 + (C11564 + C11565) * C1583) +
            (C10089 * C695 + C10085 * C701 + C10090 * C696 + C29683 * C702) *
                C1526) *
               C29688) *
              C29603 * C1524) *
         C29543) /
        (p * q * std::sqrt(p + q));
    d2eexz[15] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C10089 * C93 + C10085 * C98 + C10090 * C94 + C29683 * C99) *
                 C200 +
             (C10089 * C201 + C10085 * C206 + C10090 * C202 + C29683 * C207) *
                 C29543) *
                C10087 +
            ((C10608 + C10609) * C200 + (C10736 + C10737) * C29543) * C29688) *
               C29603 * C1525 -
           (((C10738 + C10739) * C29543 + (C10614 + C10615) * C200) * C29688 +
            ((C10737 + C10736) * C29543 + (C10609 + C10608) * C200) * C10087) *
               C29603 * C1526) *
              C1523 +
          ((((C11565 + C11564) * C200 + (C11710 + C11711) * C29543) * C10087 +
            ((C10089 * C630 + C10085 * C639 + C10090 * C631 + C29683 * C640) *
                 C200 +
             (C10089 * C745 + C10085 * C751 + C10090 * C746 + C29683 * C752) *
                 C29543) *
                C29688) *
               C29603 * C1526 -
           (((C11711 + C11710) * C29543 + (C11564 + C11565) * C200) * C29688 +
            ((C10090 * C203 + C29683 * C208 + C10089 * C202 + C10085 * C207) *
                 C29543 +
             (C10090 * C95 + C29683 * C100 + C10089 * C94 + C10085 * C99) *
                 C200) *
                C10087) *
               C29603 * C1525) *
              C1524)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[15] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C10241 * C93 + C10087 * C250 + C10242 * C628 + C29688 * C793) *
                C1527 +
            (C10241 * C101 + C10087 * C255 + C10242 * C634 + C29688 * C799) *
                C1523 -
            (C10260 + C10261) * C1528 - (C10262 + C10263) * C1524) *
               C29603 * C10085 +
           ((C10261 + C10260) * C1527 + (C10263 + C10262) * C1523 -
            (C10265 + C10264) * C1528 - (C10267 + C10266) * C1524) *
               C29603 * C29683) *
              C29543 * C1525 +
          (((C11786 + C11787) * C1528 -
            ((C10242 * C641 + C29688 * C800 + C10241 * C634 + C10087 * C799) *
                 C1523 +
             (C10242 * C629 + C29688 * C794 + C10241 * C628 + C10087 * C793) *
                 C1527) +
            (C11788 + C11789) * C1524) *
               C29603 * C10085 +
           ((C10241 * C626 + C10087 * C791 + C10242 * C631 + C29688 * C796) *
                C1528 -
            ((C11789 + C11788) * C1523 + (C11787 + C11786) * C1527) +
            (C10241 * C632 + C10087 * C797 + C10242 * C643 + C29688 * C802) *
                C1524) *
               C29603 * C29683) *
              C29543 * C1526)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[15] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C10241 * C93 + C10087 * C250 + C10242 * C628 + C29688 * C793) *
                C1583 +
            (C10241 * C152 + C10087 * C316 + C10242 * C693 + C29688 * C841) *
                C1525 -
            (C10242 * C629 + C29688 * C794 + C10241 * C628 + C10087 * C793) *
                C1584 -
            (C10242 * C694 + C29688 * C842 + C10241 * C693 + C10087 * C841) *
                C1526) *
               C29603 * C10085 +
           ((C10261 + C10260) * C1583 + (C10326 + C10327) * C1525 -
            (C11787 + C11786) * C1584 - (C11860 + C11861) * C1526) *
               C29603 * C29683) *
              C1523 +
          (((C11786 + C11787) * C1584 -
            ((C10327 + C10326) * C1525 + (C10260 + C10261) * C1583) +
            (C11861 + C11860) * C1526) *
               C29603 * C10085 +
           ((C10241 * C626 + C10087 * C791 + C10242 * C631 + C29688 * C796) *
                C1584 -
            ((C10328 + C10329) * C1525 + (C10265 + C10264) * C1583) +
            (C10241 * C691 + C10087 * C845 + C10242 * C696 + C29688 * C846) *
                C1526) *
               C29603 * C29683) *
              C1524) *
         C29543) /
        (p * q * std::sqrt(p + q));
    d2eeyz[15] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C10241 * C93 + C10087 * C250 + C10242 * C628 + C29688 * C793) *
                 C200 +
             (C10241 * C201 + C10087 * C376 + C10242 * C743 + C29688 * C887) *
                 C29543) *
                C29603 * C10085 +
            ((C10261 + C10260) * C200 + (C10388 + C10389) * C29543) * C29603 *
                C29683) *
               C1525 -
           (((C11932 + C11933) * C29543 + (C11787 + C11786) * C200) * C29603 *
                C29683 +
            ((C10242 * C744 + C29688 * C888 + C10241 * C743 + C10087 * C887) *
                 C29543 +
             (C10242 * C629 + C29688 * C794 + C10241 * C628 + C10087 * C793) *
                 C200) *
                C29603 * C10085) *
               C1526) *
              C1523 +
          ((((C11786 + C11787) * C200 + (C11933 + C11932) * C29543) * C29603 *
                C10085 +
            ((C10241 * C626 + C10087 * C791 + C10242 * C631 + C29688 * C796) *
                 C200 +
             (C10241 * C741 + C10087 * C885 + C10242 * C746 + C29688 * C890) *
                 C29543) *
                C29603 * C29683) *
               C1526 -
           (((C10390 + C10391) * C29543 + (C10265 + C10264) * C200) * C29603 *
                C29683 +
            ((C10389 + C10388) * C29543 + (C10260 + C10261) * C200) * C29603 *
                C10085) *
               C1525) *
              C1524)) /
        (p * q * std::sqrt(p + q));
    d2eezx[15] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C436 * C93 + C29603 * C437) * C1527 +
             (C436 * C101 + C29603 * C442) * C1523 - C460 * C1528 -
             C461 * C1524) *
                C10085 +
            (C460 * C1527 + C461 * C1523 - C462 * C1528 - C463 * C1524) *
                C29683) *
               C10087 +
           ((C5142 + C5143 - C5144 - C5145) * C10085 +
            (C5146 + C5147 - C5148 - C5149) * C29683) *
               C29688) *
              C29543 * C1525 +
          (((C5144 - (C5143 + C5142) + C5145) * C10085 +
            (C5148 - (C5147 + C5146) + C5149) * C29683) *
               C10087 +
           ((C4013 * C1528 - (C4014 * C1523 + C4015 * C1527) + C4012 * C1524) *
                C10085 +
            ((C436 * C631 + C29603 * C934) * C1528 -
             (C4012 * C1523 + C4013 * C1527) +
             (C436 * C643 + C29603 * C940) * C1524) *
                C29683) *
               C29688) *
              C29543 * C1526)) /
        (p * q * std::sqrt(p + q));
    d2eezy[15] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C436 * C93 + C29603 * C437) * C1583 +
             (C436 * C152 + C29603 * C503) * C1525 - C4010 * C1584 -
             C4080 * C1526) *
                C10085 +
            (C1945 + C1946 - C1947 - C1957) * C29683) *
               C10087 +
           ((C4010 * C1583 + C4080 * C1525 - C4015 * C1584 - C4081 * C1526) *
                C10085 +
            (C5216 + C5217 - C5218 - C5219) * C29683) *
               C29688) *
              C1523 +
          (((C1947 - (C1946 + C1945) + C1957) * C10085 +
            (C1952 - (C1951 + C1950) + C1958) * C29683) *
               C10087 +
           ((C5218 - (C5217 + C5216) + C5219) * C10085 +
            ((C436 * C631 + C29603 * C934) * C1584 -
             (C1956 * C1525 + C1892 * C1583) +
             (C436 * C696 + C29603 * C984) * C1526) *
                C29683) *
               C29688) *
              C1524) *
         C29543) /
        (p * q * std::sqrt(p + q));
    d2eezz[15] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C436 * C93 + C29603 * C437) * C200 +
              (C436 * C201 + C29603 * C562) * C29543) *
                 C10085 +
             (C568 + C580) * C29683) *
                C10087 +
            ((C4135 + C4147) * C10085 + C5286 * C29683) * C29688) *
               C1525 -
           (((C4148 + C4140) * C29683 + (C4149 + C4143) * C10085) * C29688 +
            (C5287 * C29683 + (C4147 + C4135) * C10085) * C10087) *
               C1526) *
              C1523 +
          (((C5286 * C10085 + (C2012 + C2018) * C29683) * C10087 +
            ((C4140 + C4148) * C10085 +
             ((C436 * C631 + C29603 * C934) * C200 +
              (C436 * C746 + C29603 * C1028) * C29543) *
                 C29683) *
                C29688) *
               C1526 -
           (((C2018 + C2012) * C29683 + C5287 * C10085) * C29688 +
            ((C581 + C571) * C29683 + (C580 + C568) * C10085) * C10087) *
               C1525) *
              C1524)) /
        (p * q * std::sqrt(p + q));
    d2eexx[16] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C10089 * C93 + C10085 * C98 + C10090 * C94 + C29683 * C99) *
                 C625 +
             (C10089 * C101 + C10085 * C108 + C10090 * C102 + C29683 * C109) *
                 C29511) *
                C10087 +
            ((C10608 + C10609) * C625 + (C10610 + C10611) * C29511) * C29688) *
               C29603 * C2069 -
           (((C12824 + C12825) * C29511 + (C12826 + C12827) * C625) * C29688 +
            ((C10090 * C1077 + C29683 * C1089 + C10089 * C1078 +
              C10085 * C1090) *
                 C29511 +
             (C10090 * C1071 + C29683 * C1080 + C10089 * C1072 +
              C10085 * C1081) *
                 C625) *
                C10087) *
               C29603 * C2070) *
              C1525 +
          ((((C12827 + C12826) * C625 + (C12825 + C12824) * C29511) * C10087 +
            ((C10089 * C5989 + C10085 * C5991 + C10090 * C5990 +
              C29683 * C5992) *
                 C625 +
             (C10089 * C5993 + C10085 * C5995 + C10090 * C5994 +
              C29683 * C5996) *
                 C29511) *
                C29688) *
               C29603 * C2070 -
           (((C10612 + C10613) * C29511 + (C10614 + C10615) * C625) * C29688 +
            ((C10611 + C10610) * C29511 + (C10609 + C10608) * C625) * C10087) *
               C29603 * C2069) *
              C1526)) /
        (p * q * std::sqrt(p + q));
    d2eexy[16] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C10089 * C93 + C10085 * C98 + C10090 * C94 + C29683 * C99) *
                C1583 +
            (C10089 * C152 + C10085 * C157 + C10090 * C153 + C29683 * C158) *
                C1525 -
            (C10609 + C10608) * C1584 - (C10674 + C10675) * C1526) *
               C10087 +
           ((C10608 + C10609) * C1583 + (C10675 + C10674) * C1525 -
            (C10614 + C10615) * C1584 - (C10677 + C10676) * C1526) *
               C29688) *
              C29603 * C29511 * C2069 +
          (((C12827 + C12826) * C1584 -
            ((C10090 * C1133 + C29683 * C1139 + C10089 * C1134 +
              C10085 * C1140) *
                 C1525 +
             (C10090 * C1071 + C29683 * C1080 + C10089 * C1072 +
              C10085 * C1081) *
                 C1583) +
            (C12898 + C12899) * C1526) *
               C10087 +
           ((C10089 * C5989 + C10085 * C5991 + C10090 * C5990 +
             C29683 * C5992) *
                C1584 -
            ((C12899 + C12898) * C1525 + (C12826 + C12827) * C1583) +
            (C10089 * C6075 + C10085 * C6077 + C10090 * C6076 +
             C29683 * C6078) *
                C1526) *
               C29688) *
              C29603 * C29511 * C2070)) /
        (p * q * std::sqrt(p + q));
    d2eexz[16] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C10089 * C93 + C10085 * C98 + C10090 * C94 + C29683 * C99) *
                C2177 +
            (C10089 * C201 + C10085 * C206 + C10090 * C202 + C29683 * C207) *
                C2069 -
            (C10090 * C1071 + C29683 * C1080 + C10089 * C1072 +
             C10085 * C1081) *
                C2178 -
            (C10090 * C1186 + C29683 * C1192 + C10089 * C1187 +
             C10085 * C1193) *
                C2070) *
               C10087 +
           ((C10608 + C10609) * C2177 + (C10736 + C10737) * C2069 -
            (C12826 + C12827) * C2178 - (C12970 + C12971) * C2070) *
               C29688) *
              C29603 * C1525 +
          (((C12827 + C12826) * C2178 -
            ((C10737 + C10736) * C2069 + (C10609 + C10608) * C2177) +
            (C12971 + C12970) * C2070) *
               C10087 +
           ((C10089 * C5989 + C10085 * C5991 + C10090 * C5990 +
             C29683 * C5992) *
                C2178 -
            ((C10738 + C10739) * C2069 + (C10614 + C10615) * C2177) +
            (C10089 * C6151 + C10085 * C6153 + C10090 * C6152 +
             C29683 * C6154) *
                C2070) *
               C29688) *
              C29603 * C1526) *
         C29511) /
        (p * q * std::sqrt(p + q));
    d2eeyx[16] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C10241 * C93 + C10087 * C250 + C10242 * C628 + C29688 * C793) *
                 C625 +
             (C10241 * C101 + C10087 * C255 + C10242 * C634 + C29688 * C799) *
                 C29511) *
                C29603 * C10085 +
            ((C10261 + C10260) * C625 + (C10263 + C10262) * C29511) * C29603 *
                C29683) *
               C2069 -
           (((C12407 + C12406) * C29511 + (C12405 + C12404) * C625) * C29603 *
                C29683 +
            ((C10242 * C2617 + C29688 * C2788 + C10241 * C1078 +
              C10087 * C1243) *
                 C29511 +
             (C10242 * C2611 + C29688 * C2785 + C10241 * C1072 +
              C10087 * C1237) *
                 C625) *
                C29603 * C10085) *
               C2070) *
              C1525 +
          ((((C10241 * C2611 + C10087 * C2785 + C10242 * C5989 +
              C29688 * C6227) *
                 C625 +
             (C10241 * C2617 + C10087 * C2788 + C10242 * C5993 +
              C29688 * C6229) *
                 C29511) *
                C29603 * C10085 +
            ((C10241 * C2612 + C10087 * C2786 + C10242 * C5990 +
              C29688 * C6228) *
                 C625 +
             (C10241 * C2618 + C10087 * C2789 + C10242 * C5994 +
              C29688 * C6230) *
                 C29511) *
                C29603 * C29683) *
               C2070 -
           (((C11789 + C11788) * C29511 + (C11787 + C11786) * C625) * C29603 *
                C29683 +
            ((C10242 * C641 + C29688 * C800 + C10241 * C634 + C10087 * C799) *
                 C29511 +
             (C10242 * C629 + C29688 * C794 + C10241 * C628 + C10087 * C793) *
                 C625) *
                C29603 * C10085) *
               C2069) *
              C1526)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[16] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C10241 * C93 + C10087 * C250 + C10242 * C628 + C29688 * C793) *
                C1583 +
            (C10241 * C152 + C10087 * C316 + C10242 * C693 + C29688 * C841) *
                C1525 -
            (C10242 * C629 + C29688 * C794 + C10241 * C628 + C10087 * C793) *
                C1584 -
            (C10242 * C694 + C29688 * C842 + C10241 * C693 + C10087 * C841) *
                C1526) *
               C29603 * C10085 +
           ((C10261 + C10260) * C1583 + (C10326 + C10327) * C1525 -
            (C11787 + C11786) * C1584 - (C11860 + C11861) * C1526) *
               C29603 * C29683) *
              C29511 * C2069 +
          (((C10241 * C2611 + C10087 * C2785 + C10242 * C5989 +
             C29688 * C6227) *
                C1584 -
            ((C10242 * C2673 + C29688 * C2841 + C10241 * C1134 +
              C10087 * C1287) *
                 C1525 +
             (C10242 * C2611 + C29688 * C2785 + C10241 * C1072 +
              C10087 * C1237) *
                 C1583) +
            (C10241 * C2673 + C10087 * C2841 + C10242 * C6075 +
             C29688 * C6297) *
                C1526) *
               C29603 * C10085 +
           ((C10241 * C2612 + C10087 * C2786 + C10242 * C5990 +
             C29688 * C6228) *
                C1584 -
            ((C12479 + C12478) * C1525 + (C12405 + C12404) * C1583) +
            (C10241 * C2674 + C10087 * C2842 + C10242 * C6076 +
             C29688 * C6298) *
                C1526) *
               C29603 * C29683) *
              C29511 * C2070)) /
        (p * q * std::sqrt(p + q));
    d2eeyz[16] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C10241 * C93 + C10087 * C250 + C10242 * C628 + C29688 * C793) *
                C2177 +
            (C10241 * C201 + C10087 * C376 + C10242 * C743 + C29688 * C887) *
                C2069 -
            (C10242 * C2611 + C29688 * C2785 + C10241 * C1072 +
             C10087 * C1237) *
                C2178 -
            (C10242 * C2729 + C29688 * C2894 + C10241 * C1187 +
             C10087 * C1329) *
                C2070) *
               C29603 * C10085 +
           ((C10261 + C10260) * C2177 + (C10388 + C10389) * C2069 -
            (C12405 + C12404) * C2178 - (C12550 + C12551) * C2070) *
               C29603 * C29683) *
              C1525 +
          (((C10241 * C2611 + C10087 * C2785 + C10242 * C5989 +
             C29688 * C6227) *
                C2178 -
            ((C10242 * C744 + C29688 * C888 + C10241 * C743 + C10087 * C887) *
                 C2069 +
             (C10242 * C629 + C29688 * C794 + C10241 * C628 + C10087 * C793) *
                 C2177) +
            (C10241 * C2729 + C10087 * C2894 + C10242 * C6151 +
             C29688 * C6365) *
                C2070) *
               C29603 * C10085 +
           ((C10241 * C2612 + C10087 * C2786 + C10242 * C5990 +
             C29688 * C6228) *
                C2178 -
            ((C11932 + C11933) * C2069 + (C11787 + C11786) * C2177) +
            (C10241 * C2730 + C10087 * C2895 + C10242 * C6152 +
             C29688 * C6366) *
                C2070) *
               C29603 * C29683) *
              C1526) *
         C29511) /
        (p * q * std::sqrt(p + q));
    d2eezx[16] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C436 * C93 + C29603 * C437) * C625 +
              (C436 * C101 + C29603 * C442) * C29511) *
                 C10085 +
             (C460 * C625 + C461 * C29511) * C29683) *
                C10087 +
            ((C4016 + C4017) * C10085 + (C4000 + C4001) * C29683) * C29688) *
               C2069 -
           (((C6438 + C6439) * C29683 + (C6446 + C6447) * C10085) * C29688 +
            ((C2433 * C29511 + C2432 * C625) * C29683 +
             ((C436 * C1078 + C29603 * C1381) * C29511 +
              (C436 * C1072 + C29603 * C1375) * C625) *
                 C10085) *
                C10087) *
               C2070) *
              C1525 +
          ((((C6447 + C6446) * C10085 + (C6439 + C6438) * C29683) * C10087 +
            (((C436 * C5989 + C29603 * C6433) * C625 +
              (C436 * C5993 + C29603 * C6435) * C29511) *
                 C10085 +
             ((C436 * C5990 + C29603 * C6434) * C625 +
              (C436 * C5994 + C29603 * C6436) * C29511) *
                 C29683) *
                C29688) *
               C2070 -
           (((C4018 + C4019) * C29683 + (C4020 + C4021) * C10085) * C29688 +
            ((C4001 + C4000) * C29683 + (C4017 + C4016) * C10085) * C10087) *
               C2069) *
              C1526)) /
        (p * q * std::sqrt(p + q));
    d2eezy[16] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C436 * C93 + C29603 * C437) * C1583 +
             (C436 * C152 + C29603 * C503) * C1525 - C4010 * C1584 -
             C4080 * C1526) *
                C10085 +
            (C1945 + C1946 - C1947 - C1957) * C29683) *
               C10087 +
           ((C4010 * C1583 + C4080 * C1525 - C4015 * C1584 - C4081 * C1526) *
                C10085 +
            (C5216 + C5217 - C5218 - C5219) * C29683) *
               C29688) *
              C29511 * C2069 +
          (((C6445 * C1584 -
             ((C436 * C1134 + C29603 * C1425) * C1525 +
              (C436 * C1072 + C29603 * C1375) * C1583) +
             C6518 * C1526) *
                C10085 +
            (C5778 * C1584 - (C2493 * C1525 + C2432 * C1583) + C5849 * C1526) *
                C29683) *
               C10087 +
           (((C436 * C5989 + C29603 * C6433) * C1584 -
             (C6518 * C1525 + C6445 * C1583) +
             (C436 * C6075 + C29603 * C6513) * C1526) *
                C10085 +
            ((C436 * C5990 + C29603 * C6434) * C1584 -
             (C5849 * C1525 + C5778 * C1583) +
             (C436 * C6076 + C29603 * C6514) * C1526) *
                C29683) *
               C29688) *
              C29511 * C2070)) /
        (p * q * std::sqrt(p + q));
    d2eezz[16] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C436 * C93 + C29603 * C437) * C2177 +
                       (C436 * C201 + C29603 * C562) * C2069 -
                       (C436 * C1072 + C29603 * C1375) * C2178 -
                       (C436 * C1187 + C29603 * C1467) * C2070) *
                          C10085 +
                      (C2548 + C2549 - C2550 - C2560) * C29683) *
                         C10087 +
                     ((C6587 + C6588 - C6589 - C6593) * C10085 +
                      (C5917 + C5918 - C5919 - C5923) * C29683) *
                         C29688) *
                        C1525 +
                    (((C6589 - (C6588 + C6587) + C6593) * C10085 +
                      (C5919 - (C5918 + C5917) + C5923) * C29683) *
                         C10087 +
                     (((C436 * C5989 + C29603 * C6433) * C2178 -
                       (C4146 * C2069 + C4015 * C2177) +
                       (C436 * C6151 + C29603 * C6584) * C2070) *
                          C10085 +
                      ((C436 * C5990 + C29603 * C6434) * C2178 -
                       (C4145 * C2069 + C4013 * C2177) +
                       (C436 * C6152 + C29603 * C6585) * C2070) *
                          C29683) *
                         C29688) *
                        C1526) *
                   C29511) /
                  (p * q * std::sqrt(p + q));
    d2eexx[17] +=
        (-std::pow(Pi, 2.5) *
         ((((C10089 * C93 + C10085 * C98 + C10090 * C94 + C29683 * C99) * C625 +
            (C10089 * C101 + C10085 * C108 + C10090 * C102 + C29683 * C109) *
                C29511) *
               C10087 +
           ((C10608 + C10609) * C625 + (C10610 + C10611) * C29511) * C29688) *
              C29603 * C29543 * C622 -
          (((C10612 + C10613) * C29511 + (C10614 + C10615) * C625) * C29688 +
           ((C10611 + C10610) * C29511 + (C10609 + C10608) * C625) * C10087) *
              C29603 * C29543 * C623 +
          (((C10615 + C10614) * C625 + (C10613 + C10612) * C29511) * C10087 +
           ((C10089 * C3619 + C10085 * C3621 + C10090 * C3620 +
             C29683 * C3622) *
                C625 +
            (C10089 * C3623 + C10085 * C3625 + C10090 * C3624 +
             C29683 * C3626) *
                C29511) *
               C29688) *
              C29603 * C29543 * C624)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C10089 * C93 + C10085 * C98 + C10090 * C94 + C29683 * C99) * C90 +
           (C10089 * C101 + C10085 * C108 + C10090 * C102 + C29683 * C109) *
               C80 -
           (C10090 * C95 + C29683 * C100 + C10089 * C94 + C10085 * C99) * C91 -
           (C10090 * C103 + C29683 * C110 + C10089 * C102 + C10085 * C109) *
               C81 +
           (C10089 * C95 + C10085 * C100 + C10090 * C96 + C29683 * C104) * C92 +
           (C10089 * C103 + C10085 * C110 + C10090 * C105 + C29683 * C111) *
               C82) *
              C10087 +
          ((C10089 * C628 + C10085 * C637 + C10090 * C627 + C29683 * C636) *
               C90 +
           (C10089 * C634 + C10085 * C646 + C10090 * C633 + C29683 * C645) *
               C80 -
           (C10090 * C626 + C29683 * C635 + C10089 * C627 + C10085 * C636) *
               C91 -
           (C10090 * C632 + C29683 * C644 + C10089 * C633 + C10085 * C645) *
               C81 +
           (C10089 * C626 + C10085 * C635 + C10090 * C1529 + C29683 * C1530) *
               C92 +
           (C10089 * C632 + C10085 * C644 + C10090 * C1531 + C29683 * C1532) *
               C82) *
              C29688) *
         C29603 * C29543 * C29532) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C10089 * C93 + C10085 * C98 + C10090 * C94 + C29683 * C99) * C625 +
            (C10089 * C101 + C10085 * C108 + C10090 * C102 + C29683 * C109) *
                C29511) *
               C10087 +
           ((C10608 + C10609) * C625 + (C10610 + C10611) * C29511) * C29688) *
              C29603 * C1067 -
          (((C10090 * C2618 + C29683 * C2621 + C10089 * C2617 +
             C10085 * C2620) *
                C29511 +
            (C10090 * C2612 + C29683 * C2615 + C10089 * C2611 +
             C10085 * C2614) *
                C625) *
               C29688 +
           ((C10090 * C1077 + C29683 * C1089 + C10089 * C1078 +
             C10085 * C1090) *
                C29511 +
            (C10090 * C1071 + C29683 * C1080 + C10089 * C1072 +
             C10085 * C1081) *
                C625) *
               C10087) *
              C29603 * C1068 +
          (((C10089 * C1073 + C10085 * C1082 + C10090 * C1074 +
             C29683 * C1083) *
                C625 +
            (C10089 * C1085 + C10085 * C1091 + C10090 * C1086 +
             C29683 * C1092) *
                C29511) *
               C10087 +
           ((C10089 * C4199 + C10085 * C4201 + C10090 * C4200 +
             C29683 * C4202) *
                C625 +
            (C10089 * C4203 + C10085 * C4205 + C10090 * C4204 +
             C29683 * C4206) *
                C29511) *
               C29688) *
              C29603 * C1069) *
         C29532) /
            (p * q * std::sqrt(p + q));
    d2eexy[17] +=
        (-std::pow(Pi, 2.5) *
         (((C10089 * C93 + C10085 * C98 + C10090 * C94 + C29683 * C99) * C688 +
           (C10089 * C152 + C10085 * C157 + C10090 * C153 + C29683 * C158) *
               C622 -
           (C10609 + C10608) * C689 - (C10674 + C10675) * C623 +
           (C10615 + C10614) * C690 + (C10676 + C10677) * C624) *
              C10087 +
          ((C10608 + C10609) * C688 + (C10675 + C10674) * C622 -
           (C10614 + C10615) * C689 - (C10677 + C10676) * C623 +
           (C10089 * C3619 + C10085 * C3621 + C10090 * C3620 + C29683 * C3622) *
               C690 +
           (C10089 * C3701 + C10085 * C3703 + C10090 * C3702 + C29683 * C3704) *
               C624) *
              C29688) *
         C29603 * C29511 * C29543) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C10089 * C93 + C10085 * C98 + C10090 * C94 + C29683 * C99) * C151 +
            (C10089 * C152 + C10085 * C157 + C10090 * C153 + C29683 * C158) *
                C29532) *
               C10087 +
           ((C10089 * C628 + C10085 * C637 + C10090 * C627 + C29683 * C636) *
                C151 +
            (C10089 * C693 + C10085 * C699 + C10090 * C692 + C29683 * C698) *
                C29532) *
               C29688) *
              C29603 * C80 -
          (((C10090 * C691 + C29683 * C697 + C10089 * C692 + C10085 * C698) *
                C29532 +
            (C10090 * C626 + C29683 * C635 + C10089 * C627 + C10085 * C636) *
                C151) *
               C29688 +
           ((C10090 * C154 + C29683 * C159 + C10089 * C153 + C10085 * C158) *
                C29532 +
            (C10090 * C95 + C29683 * C100 + C10089 * C94 + C10085 * C99) *
                C151) *
               C10087) *
              C29603 * C81 +
          (((C10089 * C95 + C10085 * C100 + C10090 * C96 + C29683 * C104) *
                C151 +
            (C10089 * C154 + C10085 * C159 + C10090 * C155 + C29683 * C160) *
                C29532) *
               C10087 +
           ((C10089 * C626 + C10085 * C635 + C10090 * C1529 + C29683 * C1530) *
                C151 +
            (C10089 * C691 + C10085 * C697 + C10090 * C1585 + C29683 * C1586) *
                C29532) *
               C29688) *
              C29603 * C82) *
         C29543) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C10089 * C93 + C10085 * C98 + C10090 * C94 + C29683 * C99) * C151 +
            (C10089 * C152 + C10085 * C157 + C10090 * C153 + C29683 * C158) *
                C29532) *
               C10087 +
           ((C10608 + C10609) * C151 + (C10675 + C10674) * C29532) * C29688) *
              C29603 * C29511 * C1067 -
          (((C10090 * C2674 + C29683 * C2677 + C10089 * C2673 +
             C10085 * C2676) *
                C29532 +
            (C10090 * C2612 + C29683 * C2615 + C10089 * C2611 +
             C10085 * C2614) *
                C151) *
               C29688 +
           ((C10090 * C1133 + C29683 * C1139 + C10089 * C1134 +
             C10085 * C1140) *
                C29532 +
            (C10090 * C1071 + C29683 * C1080 + C10089 * C1072 +
             C10085 * C1081) *
                C151) *
               C10087) *
              C29603 * C29511 * C1068 +
          (((C10089 * C1073 + C10085 * C1082 + C10090 * C1074 +
             C29683 * C1083) *
                C151 +
            (C10089 * C1135 + C10085 * C1141 + C10090 * C1136 +
             C29683 * C1142) *
                C29532) *
               C10087 +
           ((C10089 * C4199 + C10085 * C4201 + C10090 * C4200 +
             C29683 * C4202) *
                C151 +
            (C10089 * C4257 + C10085 * C4259 + C10090 * C4258 +
             C29683 * C4260) *
                C29532) *
               C29688) *
              C29603 * C29511 * C1069)) /
            (p * q * std::sqrt(p + q));
    d2eexz[17] +=
        (-std::pow(Pi, 2.5) *
         ((((C10089 * C93 + C10085 * C98 + C10090 * C94 + C29683 * C99) * C200 +
            (C10089 * C201 + C10085 * C206 + C10090 * C202 + C29683 * C207) *
                C29543) *
               C10087 +
           ((C10608 + C10609) * C200 + (C10736 + C10737) * C29543) * C29688) *
              C29603 * C622 -
          (((C10738 + C10739) * C29543 + (C10614 + C10615) * C200) * C29688 +
           ((C10737 + C10736) * C29543 + (C10609 + C10608) * C200) * C10087) *
              C29603 * C623 +
          (((C10615 + C10614) * C200 + (C10739 + C10738) * C29543) * C10087 +
           ((C10089 * C3619 + C10085 * C3621 + C10090 * C3620 +
             C29683 * C3622) *
                C200 +
            (C10089 * C3767 + C10085 * C3769 + C10090 * C3768 +
             C29683 * C3770) *
                C29543) *
               C29688) *
              C29603 * C624) *
         C29511) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C10089 * C93 + C10085 * C98 + C10090 * C94 + C29683 * C99) * C200 +
            (C10089 * C201 + C10085 * C206 + C10090 * C202 + C29683 * C207) *
                C29543) *
               C10087 +
           ((C10089 * C628 + C10085 * C637 + C10090 * C627 + C29683 * C636) *
                C200 +
            (C10089 * C743 + C10085 * C749 + C10090 * C742 + C29683 * C748) *
                C29543) *
               C29688) *
              C29603 * C29532 * C80 -
          (((C10090 * C741 + C29683 * C747 + C10089 * C742 + C10085 * C748) *
                C29543 +
            (C10090 * C626 + C29683 * C635 + C10089 * C627 + C10085 * C636) *
                C200) *
               C29688 +
           ((C10090 * C203 + C29683 * C208 + C10089 * C202 + C10085 * C207) *
                C29543 +
            (C10090 * C95 + C29683 * C100 + C10089 * C94 + C10085 * C99) *
                C200) *
               C10087) *
              C29603 * C29532 * C81 +
          (((C10089 * C95 + C10085 * C100 + C10090 * C96 + C29683 * C104) *
                C200 +
            (C10089 * C203 + C10085 * C208 + C10090 * C204 + C29683 * C209) *
                C29543) *
               C10087 +
           ((C10089 * C626 + C10085 * C635 + C10090 * C1529 + C29683 * C1530) *
                C200 +
            (C10089 * C741 + C10085 * C747 + C10090 * C1637 + C29683 * C1638) *
                C29543) *
               C29688) *
              C29603 * C29532 * C82)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C10089 * C93 + C10085 * C98 + C10090 * C94 + C29683 * C99) * C1182 +
           (C10089 * C201 + C10085 * C206 + C10090 * C202 + C29683 * C207) *
               C1067 -
           (C10090 * C1071 + C29683 * C1080 + C10089 * C1072 + C10085 * C1081) *
               C1183 -
           (C10090 * C1186 + C29683 * C1192 + C10089 * C1187 + C10085 * C1193) *
               C1068 +
           (C10089 * C1073 + C10085 * C1082 + C10090 * C1074 + C29683 * C1083) *
               C1184 +
           (C10089 * C1188 + C10085 * C1194 + C10090 * C1189 + C29683 * C1195) *
               C1069) *
              C10087 +
          ((C10608 + C10609) * C1182 + (C10736 + C10737) * C1067 -
           (C10090 * C2612 + C29683 * C2615 + C10089 * C2611 + C10085 * C2614) *
               C1183 -
           (C10090 * C2730 + C29683 * C2733 + C10089 * C2729 + C10085 * C2732) *
               C1068 +
           (C10089 * C4199 + C10085 * C4201 + C10090 * C4200 + C29683 * C4202) *
               C1184 +
           (C10089 * C4311 + C10085 * C4313 + C10090 * C4312 + C29683 * C4314) *
               C1069) *
              C29688) *
         C29603 * C29532 * C29511) /
            (p * q * std::sqrt(p + q));
    d2eeyx[17] +=
        (-std::pow(Pi, 2.5) *
         ((((C10241 * C93 + C10087 * C250 + C10242 * C628 + C29688 * C793) *
                C625 +
            (C10241 * C101 + C10087 * C255 + C10242 * C634 + C29688 * C799) *
                C29511) *
               C29603 * C10085 +
           ((C10261 + C10260) * C625 + (C10263 + C10262) * C29511) * C29603 *
               C29683) *
              C29543 * C622 -
          (((C10242 * C642 + C29688 * C801 + C10241 * C633 + C10087 * C798) *
                C29511 +
            (C10242 * C630 + C29688 * C795 + C10241 * C627 + C10087 * C792) *
                C625) *
               C29603 * C29683 +
           ((C10242 * C641 + C29688 * C800 + C10241 * C634 + C10087 * C799) *
                C29511 +
            (C10242 * C629 + C29688 * C794 + C10241 * C628 + C10087 * C793) *
                C625) *
               C29603 * C10085) *
              C29543 * C623 +
          (((C10241 * C629 + C10087 * C794 + C10242 * C3619 + C29688 * C3833) *
                C625 +
            (C10241 * C641 + C10087 * C800 + C10242 * C3623 + C29688 * C3835) *
                C29511) *
               C29603 * C10085 +
           ((C10241 * C630 + C10087 * C795 + C10242 * C3620 + C29688 * C3834) *
                C625 +
            (C10241 * C642 + C10087 * C801 + C10242 * C3624 + C29688 * C3836) *
                C29511) *
               C29603 * C29683) *
              C29543 * C624)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C10241 * C93 + C10087 * C250 + C10242 * C628 + C29688 * C793) *
               C90 +
           (C10241 * C101 + C10087 * C255 + C10242 * C634 + C29688 * C799) *
               C80 -
           (C10260 + C10261) * C91 - (C10262 + C10263) * C81 +
           (C10264 + C10265) * C92 + (C10266 + C10267) * C82) *
              C29603 * C10085 +
          ((C10261 + C10260) * C90 + (C10263 + C10262) * C80 -
           (C10265 + C10264) * C91 - (C10267 + C10266) * C81 +
           (C10241 * C96 + C10087 * C253 + C10242 * C1529 + C29688 * C1689) *
               C92 +
           (C10241 * C105 + C10087 * C258 + C10242 * C1531 + C29688 * C1690) *
               C82) *
              C29603 * C29683) *
         C29543 * C29532) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C10241 * C93 + C10087 * C250 + C10242 * C628 + C29688 * C793) *
                C625 +
            (C10241 * C101 + C10087 * C255 + C10242 * C634 + C29688 * C799) *
                C29511) *
               C29603 * C10085 +
           ((C10261 + C10260) * C625 + (C10263 + C10262) * C29511) * C29603 *
               C29683) *
              C1067 -
          (((C10242 * C2618 + C29688 * C2789 + C10241 * C1077 +
             C10087 * C1242) *
                C29511 +
            (C10242 * C2612 + C29688 * C2786 + C10241 * C1071 +
             C10087 * C1236) *
                C625) *
               C29603 * C29683 +
           ((C10242 * C2617 + C29688 * C2788 + C10241 * C1078 +
             C10087 * C1243) *
                C29511 +
            (C10242 * C2611 + C29688 * C2785 + C10241 * C1072 +
             C10087 * C1237) *
                C625) *
               C29603 * C10085) *
              C1068 +
          (((C10241 * C1073 + C10087 * C1238 + C10242 * C4199 +
             C29688 * C4365) *
                C625 +
            (C10241 * C1085 + C10087 * C1244 + C10242 * C4203 +
             C29688 * C4367) *
                C29511) *
               C29603 * C10085 +
           ((C10241 * C1074 + C10087 * C1239 + C10242 * C4200 +
             C29688 * C4366) *
                C625 +
            (C10241 * C1086 + C10087 * C1245 + C10242 * C4204 +
             C29688 * C4368) *
                C29511) *
               C29603 * C29683) *
              C1069) *
         C29532) /
            (p * q * std::sqrt(p + q));
    d2eeyy[17] +=
        (-std::pow(Pi, 2.5) *
         (((C10241 * C93 + C10087 * C250 + C10242 * C628 + C29688 * C793) *
               C688 +
           (C10241 * C152 + C10087 * C316 + C10242 * C693 + C29688 * C841) *
               C622 -
           (C10242 * C629 + C29688 * C794 + C10241 * C628 + C10087 * C793) *
               C689 -
           (C10242 * C694 + C29688 * C842 + C10241 * C693 + C10087 * C841) *
               C623 +
           (C10241 * C629 + C10087 * C794 + C10242 * C3619 + C29688 * C3833) *
               C690 +
           (C10241 * C694 + C10087 * C842 + C10242 * C3701 + C29688 * C3887) *
               C624) *
              C29603 * C10085 +
          ((C10261 + C10260) * C688 + (C10326 + C10327) * C622 -
           (C10242 * C630 + C29688 * C795 + C10241 * C627 + C10087 * C792) *
               C689 -
           (C10242 * C695 + C29688 * C844 + C10241 * C692 + C10087 * C843) *
               C623 +
           (C10241 * C630 + C10087 * C795 + C10242 * C3620 + C29688 * C3834) *
               C690 +
           (C10241 * C695 + C10087 * C844 + C10242 * C3702 + C29688 * C3888) *
               C624) *
              C29603 * C29683) *
         C29511 * C29543) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C10241 * C93 + C10087 * C250 + C10242 * C628 + C29688 * C793) *
                C151 +
            (C10241 * C152 + C10087 * C316 + C10242 * C693 + C29688 * C841) *
                C29532) *
               C29603 * C10085 +
           ((C10261 + C10260) * C151 + (C10326 + C10327) * C29532) * C29603 *
               C29683) *
              C80 -
          (((C10328 + C10329) * C29532 + (C10265 + C10264) * C151) * C29603 *
               C29683 +
           ((C10327 + C10326) * C29532 + (C10260 + C10261) * C151) * C29603 *
               C10085) *
              C81 +
          (((C10264 + C10265) * C151 + (C10329 + C10328) * C29532) * C29603 *
               C10085 +
           ((C10241 * C96 + C10087 * C253 + C10242 * C1529 + C29688 * C1689) *
                C151 +
            (C10241 * C155 + C10087 * C319 + C10242 * C1585 + C29688 * C1753) *
                C29532) *
               C29603 * C29683) *
              C82) *
         C29543) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C10241 * C93 + C10087 * C250 + C10242 * C628 + C29688 * C793) *
                C151 +
            (C10241 * C152 + C10087 * C316 + C10242 * C693 + C29688 * C841) *
                C29532) *
               C29603 * C10085 +
           ((C10261 + C10260) * C151 + (C10326 + C10327) * C29532) * C29603 *
               C29683) *
              C29511 * C1067 -
          (((C10242 * C2674 + C29688 * C2842 + C10241 * C1133 +
             C10087 * C1286) *
                C29532 +
            (C10242 * C2612 + C29688 * C2786 + C10241 * C1071 +
             C10087 * C1236) *
                C151) *
               C29603 * C29683 +
           ((C10242 * C2673 + C29688 * C2841 + C10241 * C1134 +
             C10087 * C1287) *
                C29532 +
            (C10242 * C2611 + C29688 * C2785 + C10241 * C1072 +
             C10087 * C1237) *
                C151) *
               C29603 * C10085) *
              C29511 * C1068 +
          (((C10241 * C1073 + C10087 * C1238 + C10242 * C4199 +
             C29688 * C4365) *
                C151 +
            (C10241 * C1135 + C10087 * C1288 + C10242 * C4257 +
             C29688 * C4419) *
                C29532) *
               C29603 * C10085 +
           ((C10241 * C1074 + C10087 * C1239 + C10242 * C4200 +
             C29688 * C4366) *
                C151 +
            (C10241 * C1136 + C10087 * C1289 + C10242 * C4258 +
             C29688 * C4420) *
                C29532) *
               C29603 * C29683) *
              C29511 * C1069)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[17] +=
        (-std::pow(Pi, 2.5) *
         ((((C10241 * C93 + C10087 * C250 + C10242 * C628 + C29688 * C793) *
                C200 +
            (C10241 * C201 + C10087 * C376 + C10242 * C743 + C29688 * C887) *
                C29543) *
               C29603 * C10085 +
           ((C10261 + C10260) * C200 + (C10388 + C10389) * C29543) * C29603 *
               C29683) *
              C622 -
          (((C10242 * C745 + C29688 * C889 + C10241 * C742 + C10087 * C886) *
                C29543 +
            (C10242 * C630 + C29688 * C795 + C10241 * C627 + C10087 * C792) *
                C200) *
               C29603 * C29683 +
           ((C10242 * C744 + C29688 * C888 + C10241 * C743 + C10087 * C887) *
                C29543 +
            (C10242 * C629 + C29688 * C794 + C10241 * C628 + C10087 * C793) *
                C200) *
               C29603 * C10085) *
              C623 +
          (((C10241 * C629 + C10087 * C794 + C10242 * C3619 + C29688 * C3833) *
                C200 +
            (C10241 * C744 + C10087 * C888 + C10242 * C3767 + C29688 * C3939) *
                C29543) *
               C29603 * C10085 +
           ((C10241 * C630 + C10087 * C795 + C10242 * C3620 + C29688 * C3834) *
                C200 +
            (C10241 * C745 + C10087 * C889 + C10242 * C3768 + C29688 * C3940) *
                C29543) *
               C29603 * C29683) *
              C624) *
         C29511) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C10241 * C93 + C10087 * C250 + C10242 * C628 + C29688 * C793) *
                C200 +
            (C10241 * C201 + C10087 * C376 + C10242 * C743 + C29688 * C887) *
                C29543) *
               C29603 * C10085 +
           ((C10261 + C10260) * C200 + (C10388 + C10389) * C29543) * C29603 *
               C29683) *
              C29532 * C80 -
          (((C10390 + C10391) * C29543 + (C10265 + C10264) * C200) * C29603 *
               C29683 +
           ((C10389 + C10388) * C29543 + (C10260 + C10261) * C200) * C29603 *
               C10085) *
              C29532 * C81 +
          (((C10264 + C10265) * C200 + (C10391 + C10390) * C29543) * C29603 *
               C10085 +
           ((C10241 * C96 + C10087 * C253 + C10242 * C1529 + C29688 * C1689) *
                C200 +
            (C10241 * C204 + C10087 * C379 + C10242 * C1637 + C29688 * C1818) *
                C29543) *
               C29603 * C29683) *
              C29532 * C82)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C10241 * C93 + C10087 * C250 + C10242 * C628 + C29688 * C793) *
               C1182 +
           (C10241 * C201 + C10087 * C376 + C10242 * C743 + C29688 * C887) *
               C1067 -
           (C10242 * C2611 + C29688 * C2785 + C10241 * C1072 + C10087 * C1237) *
               C1183 -
           (C10242 * C2729 + C29688 * C2894 + C10241 * C1187 + C10087 * C1329) *
               C1068 +
           (C10241 * C1073 + C10087 * C1238 + C10242 * C4199 + C29688 * C4365) *
               C1184 +
           (C10241 * C1188 + C10087 * C1330 + C10242 * C4311 + C29688 * C4471) *
               C1069) *
              C29603 * C10085 +
          ((C10261 + C10260) * C1182 + (C10388 + C10389) * C1067 -
           (C10242 * C2612 + C29688 * C2786 + C10241 * C1071 + C10087 * C1236) *
               C1183 -
           (C10242 * C2730 + C29688 * C2895 + C10241 * C1186 + C10087 * C1331) *
               C1068 +
           (C10241 * C1074 + C10087 * C1239 + C10242 * C4200 + C29688 * C4366) *
               C1184 +
           (C10241 * C1189 + C10087 * C1332 + C10242 * C4312 + C29688 * C4472) *
               C1069) *
              C29603 * C29683) *
         C29532 * C29511) /
            (p * q * std::sqrt(p + q));
    d2eezx[17] +=
        (-std::pow(Pi, 2.5) *
         (((((C436 * C93 + C29603 * C437) * C625 +
             (C436 * C101 + C29603 * C442) * C29511) *
                C10085 +
            (C460 * C625 + C461 * C29511) * C29683) *
               C10087 +
           ((C4016 + C4017) * C10085 + (C4000 + C4001) * C29683) * C29688) *
              C29543 * C622 -
          (((C4018 + C4019) * C29683 + (C4020 + C4021) * C10085) * C29688 +
           ((C4001 + C4000) * C29683 + (C4017 + C4016) * C10085) * C10087) *
              C29543 * C623 +
          (((C4021 + C4020) * C10085 + (C4019 + C4018) * C29683) * C10087 +
           (((C436 * C3619 + C29603 * C3991) * C625 +
             (C436 * C3623 + C29603 * C3993) * C29511) *
                C10085 +
            ((C436 * C3620 + C29603 * C3992) * C625 +
             (C436 * C3624 + C29603 * C3994) * C29511) *
                C29683) *
               C29688) *
              C29543 * C624)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C436 * C93 + C29603 * C437) * C90 +
            (C436 * C101 + C29603 * C442) * C80 - C460 * C91 - C461 * C81 +
            C462 * C92 + C463 * C82) *
               C10085 +
           (C460 * C90 + C461 * C80 - C462 * C91 - C463 * C81 + C464 * C92 +
            C465 * C82) *
               C29683) *
              C10087 +
          ((C4010 * C90 + C4011 * C80 - C1890 * C91 - C1891 * C81 +
            C1892 * C92 + C1893 * C82) *
               C10085 +
           (C1890 * C90 + C1891 * C80 - C1892 * C91 - C1893 * C81 +
            (C436 * C1529 + C29603 * C1879) * C92 +
            (C436 * C1531 + C29603 * C1880) * C82) *
               C29683) *
              C29688) *
         C29543 * C29532) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C436 * C93 + C29603 * C437) * C625 +
             (C436 * C101 + C29603 * C442) * C29511) *
                C10085 +
            (C460 * C625 + C461 * C29511) * C29683) *
               C10087 +
           ((C4016 + C4017) * C10085 + (C4000 + C4001) * C29683) * C29688) *
              C1067 -
          (((C6438 + C6439) * C29683 + (C6446 + C6447) * C10085) * C29688 +
           ((C2433 * C29511 + C2432 * C625) * C29683 +
            ((C436 * C1078 + C29603 * C1381) * C29511 +
             (C436 * C1072 + C29603 * C1375) * C625) *
                C10085) *
               C10087) *
              C1068 +
          ((((C436 * C1073 + C29603 * C1376) * C625 +
             (C436 * C1085 + C29603 * C1382) * C29511) *
                C10085 +
            ((C436 * C1074 + C29603 * C1377) * C625 +
             (C436 * C1086 + C29603 * C1383) * C29511) *
                C29683) *
               C10087 +
           (((C436 * C4199 + C29603 * C4523) * C625 +
             (C436 * C4203 + C29603 * C4525) * C29511) *
                C10085 +
            ((C436 * C4200 + C29603 * C4524) * C625 +
             (C436 * C4204 + C29603 * C4526) * C29511) *
                C29683) *
               C29688) *
              C1069) *
         C29532) /
            (p * q * std::sqrt(p + q));
    d2eezy[17] +=
        (-std::pow(Pi, 2.5) *
         ((((C436 * C93 + C29603 * C437) * C688 +
            (C436 * C152 + C29603 * C503) * C622 - C4010 * C689 - C4080 * C623 +
            C4015 * C690 + C4081 * C624) *
               C10085 +
           (C460 * C688 + C518 * C622 - C1890 * C689 - C1955 * C623 +
            C4013 * C690 + C4082 * C624) *
               C29683) *
              C10087 +
          ((C4010 * C688 + C4080 * C622 - C4015 * C689 - C4081 * C623 +
            (C436 * C3619 + C29603 * C3991) * C690 +
            (C436 * C3701 + C29603 * C4071) * C624) *
               C10085 +
           (C1890 * C688 + C1955 * C622 - C4013 * C689 - C4082 * C623 +
            (C436 * C3620 + C29603 * C3992) * C690 +
            (C436 * C3702 + C29603 * C4072) * C624) *
               C29683) *
              C29688) *
         C29511 * C29543) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C436 * C93 + C29603 * C437) * C151 +
             (C436 * C152 + C29603 * C503) * C29532) *
                C10085 +
            (C509 + C521) * C29683) *
               C10087 +
           ((C4010 * C151 + C4080 * C29532) * C10085 +
            (C3516 + C3517) * C29683) *
               C29688) *
              C80 -
          (((C3518 + C3519) * C29683 + (C3517 + C3516) * C10085) * C29688 +
           ((C522 + C512) * C29683 + (C521 + C509) * C10085) * C10087) *
              C81 +
          ((C524 * C10085 + (C517 + C523) * C29683) * C10087 +
           ((C3519 + C3518) * C10085 +
            ((C436 * C1529 + C29603 * C1879) * C151 +
             (C436 * C1585 + C29603 * C1943) * C29532) *
                C29683) *
               C29688) *
              C82) *
         C29543) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C436 * C93 + C29603 * C437) * C151 +
             (C436 * C152 + C29603 * C503) * C29532) *
                C10085 +
            (C509 + C521) * C29683) *
               C10087 +
           ((C4010 * C151 + C4080 * C29532) * C10085 +
            (C3516 + C3517) * C29683) *
               C29688) *
              C29511 * C1067 -
          (((C5850 + C5846) * C29683 +
            (C6518 * C29532 + C6445 * C151) * C10085) *
               C29688 +
           ((C2495 + C2487) * C29683 +
            ((C436 * C1134 + C29603 * C1425) * C29532 +
             (C436 * C1072 + C29603 * C1375) * C151) *
                C10085) *
               C10087) *
              C29511 * C1068 +
          ((((C436 * C1073 + C29603 * C1376) * C151 +
             (C436 * C1135 + C29603 * C1426) * C29532) *
                C10085 +
            ((C436 * C1074 + C29603 * C1377) * C151 +
             (C436 * C1136 + C29603 * C1427) * C29532) *
                C29683) *
               C10087 +
           (((C436 * C4199 + C29603 * C4523) * C151 +
             (C436 * C4257 + C29603 * C4577) * C29532) *
                C10085 +
            ((C436 * C4200 + C29603 * C4524) * C151 +
             (C436 * C4258 + C29603 * C4578) * C29532) *
                C29683) *
               C29688) *
              C29511 * C1069)) /
            (p * q * std::sqrt(p + q));
    d2eezz[17] +=
        (-std::pow(Pi, 2.5) *
         (((((C436 * C93 + C29603 * C437) * C200 +
             (C436 * C201 + C29603 * C562) * C29543) *
                C10085 +
            (C568 + C580) * C29683) *
               C10087 +
           ((C4135 + C4147) * C10085 + C5286 * C29683) * C29688) *
              C622 -
          (((C4148 + C4140) * C29683 + (C4149 + C4143) * C10085) * C29688 +
           (C5287 * C29683 + (C4147 + C4135) * C10085) * C10087) *
              C623 +
          (((C4143 + C4149) * C10085 + (C4140 + C4148) * C29683) * C10087 +
           (((C436 * C3619 + C29603 * C3991) * C200 +
             (C436 * C3767 + C29603 * C4132) * C29543) *
                C10085 +
            ((C436 * C3620 + C29603 * C3992) * C200 +
             (C436 * C3768 + C29603 * C4133) * C29543) *
                C29683) *
               C29688) *
              C624) *
         C29511) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C436 * C93 + C29603 * C437) * C200 +
             (C436 * C201 + C29603 * C562) * C29543) *
                C10085 +
            (C568 + C580) * C29683) *
               C10087 +
           ((C4135 + C4147) * C10085 + C5286 * C29683) * C29688) *
              C29532 * C80 -
          (((C2018 + C2012) * C29683 + C5287 * C10085) * C29688 +
           ((C581 + C571) * C29683 + (C580 + C568) * C10085) * C10087) *
              C29532 * C81 +
          ((C583 * C10085 + (C576 + C582) * C29683) * C10087 +
           ((C2012 + C2018) * C10085 +
            ((C436 * C1529 + C29603 * C1879) * C200 +
             (C436 * C1637 + C29603 * C2008) * C29543) *
                C29683) *
               C29688) *
              C29532 * C82)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C436 * C93 + C29603 * C437) * C1182 +
            (C436 * C201 + C29603 * C562) * C1067 -
            (C436 * C1072 + C29603 * C1375) * C1183 -
            (C436 * C1187 + C29603 * C1467) * C1068 +
            (C436 * C1073 + C29603 * C1376) * C1184 +
            (C436 * C1188 + C29603 * C1468) * C1069) *
               C10085 +
           (C460 * C1182 + C577 * C1067 - C2432 * C1183 - C2558 * C1068 +
            (C436 * C1074 + C29603 * C1377) * C1184 +
            (C436 * C1189 + C29603 * C1470) * C1069) *
               C29683) *
              C10087 +
          ((C4010 * C1182 + C4144 * C1067 - C6445 * C1183 - C6592 * C1068 +
            (C436 * C4199 + C29603 * C4523) * C1184 +
            (C436 * C4311 + C29603 * C4629) * C1069) *
               C10085 +
           (C1890 * C1182 + C2017 * C1067 - C5778 * C1183 - C5922 * C1068 +
            (C436 * C4200 + C29603 * C4524) * C1184 +
            (C436 * C4312 + C29603 * C4630) * C1069) *
               C29683) *
              C29688) *
         C29532 * C29511) /
            (p * q * std::sqrt(p + q));
    d2eexx[18] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C10089 * C93 + C10085 * C98 + C10090 * C94 + C29683 * C99) *
                C1527 +
            (C10089 * C101 + C10085 * C108 + C10090 * C102 + C29683 * C109) *
                C1523 -
            (C10090 * C95 + C29683 * C100 + C10089 * C94 + C10085 * C99) *
                C1528 -
            (C10090 * C103 + C29683 * C110 + C10089 * C102 + C10085 * C109) *
                C1524) *
               C10087 +
           ((C10608 + C10609) * C1527 + (C10610 + C10611) * C1523 -
            (C11564 + C11565) * C1528 - (C11566 + C11567) * C1524) *
               C29688) *
              C29603 * C2069 +
          (((C10089 * C1071 + C10085 * C1080 + C10090 * C1070 +
             C29683 * C1079) *
                C1528 -
            ((C10090 * C1077 + C29683 * C1089 + C10089 * C1078 +
              C10085 * C1090) *
                 C1523 +
             (C10090 * C1071 + C29683 * C1080 + C10089 * C1072 +
              C10085 * C1081) *
                 C1527) +
            (C10089 * C1077 + C10085 * C1089 + C10090 * C1076 +
             C29683 * C1088) *
                C1524) *
               C10087 +
           ((C10089 * C2612 + C10085 * C2615 + C10090 * C2613 +
             C29683 * C2616) *
                C1528 -
            ((C10090 * C2618 + C29683 * C2621 + C10089 * C2617 +
              C10085 * C2620) *
                 C1523 +
             (C10090 * C2612 + C29683 * C2615 + C10089 * C2611 +
              C10085 * C2614) *
                 C1527) +
            (C10089 * C2618 + C10085 * C2621 + C10090 * C2619 +
             C29683 * C2622) *
                C1524) *
               C29688) *
              C29603 * C2070) *
         C29532) /
        (p * q * std::sqrt(p + q));
    d2eexy[18] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C10089 * C93 + C10085 * C98 + C10090 * C94 + C29683 * C99) *
                 C151 +
             (C10089 * C152 + C10085 * C157 + C10090 * C153 + C29683 * C158) *
                 C29532) *
                C10087 +
            ((C10608 + C10609) * C151 + (C10675 + C10674) * C29532) * C29688) *
               C29603 * C1523 -
           (((C11639 + C11638) * C29532 + (C11564 + C11565) * C151) * C29688 +
            ((C10090 * C154 + C29683 * C159 + C10089 * C153 + C10085 * C158) *
                 C29532 +
             (C10090 * C95 + C29683 * C100 + C10089 * C94 + C10085 * C99) *
                 C151) *
                C10087) *
               C29603 * C1524) *
              C2069 +
          ((((C10089 * C1071 + C10085 * C1080 + C10090 * C1070 +
              C29683 * C1079) *
                 C151 +
             (C10089 * C1133 + C10085 * C1139 + C10090 * C1132 +
              C29683 * C1138) *
                 C29532) *
                C10087 +
            ((C10089 * C2612 + C10085 * C2615 + C10090 * C2613 +
              C29683 * C2616) *
                 C151 +
             (C10089 * C2674 + C10085 * C2677 + C10090 * C2675 +
              C29683 * C2678) *
                 C29532) *
                C29688) *
               C29603 * C1524 -
           (((C10090 * C2674 + C29683 * C2677 + C10089 * C2673 +
              C10085 * C2676) *
                 C29532 +
             (C10090 * C2612 + C29683 * C2615 + C10089 * C2611 +
              C10085 * C2614) *
                 C151) *
                C29688 +
            ((C10090 * C1133 + C29683 * C1139 + C10089 * C1134 +
              C10085 * C1140) *
                 C29532 +
             (C10090 * C1071 + C29683 * C1080 + C10089 * C1072 +
              C10085 * C1081) *
                 C151) *
                C10087) *
               C29603 * C1523) *
              C2070)) /
        (p * q * std::sqrt(p + q));
    d2eexz[18] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C10089 * C93 + C10085 * C98 + C10090 * C94 + C29683 * C99) *
                C2177 +
            (C10089 * C201 + C10085 * C206 + C10090 * C202 + C29683 * C207) *
                C2069 -
            (C10090 * C1071 + C29683 * C1080 + C10089 * C1072 +
             C10085 * C1081) *
                C2178 -
            (C10090 * C1186 + C29683 * C1192 + C10089 * C1187 +
             C10085 * C1193) *
                C2070) *
               C10087 +
           ((C10608 + C10609) * C2177 + (C10736 + C10737) * C2069 -
            (C10090 * C2612 + C29683 * C2615 + C10089 * C2611 +
             C10085 * C2614) *
                C2178 -
            (C10090 * C2730 + C29683 * C2733 + C10089 * C2729 +
             C10085 * C2732) *
                C2070) *
               C29688) *
              C29603 * C29532 * C1523 +
          (((C10089 * C1071 + C10085 * C1080 + C10090 * C1070 +
             C29683 * C1079) *
                C2178 -
            ((C10090 * C203 + C29683 * C208 + C10089 * C202 + C10085 * C207) *
                 C2069 +
             (C10090 * C95 + C29683 * C100 + C10089 * C94 + C10085 * C99) *
                 C2177) +
            (C10089 * C1186 + C10085 * C1192 + C10090 * C1185 +
             C29683 * C1191) *
                C2070) *
               C10087 +
           ((C10089 * C2612 + C10085 * C2615 + C10090 * C2613 +
             C29683 * C2616) *
                C2178 -
            ((C11711 + C11710) * C2069 + (C11564 + C11565) * C2177) +
            (C10089 * C2730 + C10085 * C2733 + C10090 * C2731 +
             C29683 * C2734) *
                C2070) *
               C29688) *
              C29603 * C29532 * C1524)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[18] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C10241 * C93 + C10087 * C250 + C10242 * C628 + C29688 * C793) *
                C1527 +
            (C10241 * C101 + C10087 * C255 + C10242 * C634 + C29688 * C799) *
                C1523 -
            (C10260 + C10261) * C1528 - (C10262 + C10263) * C1524) *
               C29603 * C10085 +
           ((C10261 + C10260) * C1527 + (C10263 + C10262) * C1523 -
            (C10265 + C10264) * C1528 - (C10267 + C10266) * C1524) *
               C29603 * C29683) *
              C2069 +
          (((C12404 + C12405) * C1528 -
            ((C10242 * C2617 + C29688 * C2788 + C10241 * C1078 +
              C10087 * C1243) *
                 C1523 +
             (C10242 * C2611 + C29688 * C2785 + C10241 * C1072 +
              C10087 * C1237) *
                 C1527) +
            (C12406 + C12407) * C1524) *
               C29603 * C10085 +
           ((C10241 * C1070 + C10087 * C1235 + C10242 * C2613 +
             C29688 * C2787) *
                C1528 -
            ((C12407 + C12406) * C1523 + (C12405 + C12404) * C1527) +
            (C10241 * C1076 + C10087 * C1241 + C10242 * C2619 +
             C29688 * C2790) *
                C1524) *
               C29603 * C29683) *
              C2070) *
         C29532) /
        (p * q * std::sqrt(p + q));
    d2eeyy[18] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C10241 * C93 + C10087 * C250 + C10242 * C628 + C29688 * C793) *
                 C151 +
             (C10241 * C152 + C10087 * C316 + C10242 * C693 + C29688 * C841) *
                 C29532) *
                C29603 * C10085 +
            ((C10261 + C10260) * C151 + (C10326 + C10327) * C29532) * C29603 *
                C29683) *
               C1523 -
           (((C10328 + C10329) * C29532 + (C10265 + C10264) * C151) * C29603 *
                C29683 +
            ((C10327 + C10326) * C29532 + (C10260 + C10261) * C151) * C29603 *
                C10085) *
               C1524) *
              C2069 +
          ((((C12404 + C12405) * C151 + (C12478 + C12479) * C29532) * C29603 *
                C10085 +
            ((C10241 * C1070 + C10087 * C1235 + C10242 * C2613 +
              C29688 * C2787) *
                 C151 +
             (C10241 * C1132 + C10087 * C1285 + C10242 * C2675 +
              C29688 * C2843) *
                 C29532) *
                C29603 * C29683) *
               C1524 -
           (((C12479 + C12478) * C29532 + (C12405 + C12404) * C151) * C29603 *
                C29683 +
            ((C10242 * C2673 + C29688 * C2841 + C10241 * C1134 +
              C10087 * C1287) *
                 C29532 +
             (C10242 * C2611 + C29688 * C2785 + C10241 * C1072 +
              C10087 * C1237) *
                 C151) *
                C29603 * C10085) *
               C1523) *
              C2070)) /
        (p * q * std::sqrt(p + q));
    d2eeyz[18] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C10241 * C93 + C10087 * C250 + C10242 * C628 + C29688 * C793) *
                C2177 +
            (C10241 * C201 + C10087 * C376 + C10242 * C743 + C29688 * C887) *
                C2069 -
            (C10242 * C2611 + C29688 * C2785 + C10241 * C1072 +
             C10087 * C1237) *
                C2178 -
            (C10242 * C2729 + C29688 * C2894 + C10241 * C1187 +
             C10087 * C1329) *
                C2070) *
               C29603 * C10085 +
           ((C10261 + C10260) * C2177 + (C10388 + C10389) * C2069 -
            (C12405 + C12404) * C2178 - (C12550 + C12551) * C2070) *
               C29603 * C29683) *
              C29532 * C1523 +
          (((C12404 + C12405) * C2178 -
            ((C10389 + C10388) * C2069 + (C10260 + C10261) * C2177) +
            (C12551 + C12550) * C2070) *
               C29603 * C10085 +
           ((C10241 * C1070 + C10087 * C1235 + C10242 * C2613 +
             C29688 * C2787) *
                C2178 -
            ((C10390 + C10391) * C2069 + (C10265 + C10264) * C2177) +
            (C10241 * C1185 + C10087 * C1333 + C10242 * C2731 +
             C29688 * C2896) *
                C2070) *
               C29603 * C29683) *
              C29532 * C1524)) /
        (p * q * std::sqrt(p + q));
    d2eezx[18] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C436 * C93 + C29603 * C437) * C1527 +
             (C436 * C101 + C29603 * C442) * C1523 - C460 * C1528 -
             C461 * C1524) *
                C10085 +
            (C460 * C1527 + C461 * C1523 - C462 * C1528 - C463 * C1524) *
                C29683) *
               C10087 +
           ((C5142 + C5143 - C5144 - C5145) * C10085 +
            (C5146 + C5147 - C5148 - C5149) * C29683) *
               C29688) *
              C2069 +
          (((C2432 * C1528 -
             ((C436 * C1078 + C29603 * C1381) * C1523 +
              (C436 * C1072 + C29603 * C1375) * C1527) +
             C2433 * C1524) *
                C10085 +
            (C2434 * C1528 - (C2433 * C1523 + C2432 * C1527) + C2435 * C1524) *
                C29683) *
               C10087 +
           ((C5778 * C1528 - (C6444 * C1523 + C6445 * C1527) + C5779 * C1524) *
                C10085 +
            ((C436 * C2613 + C29603 * C2949) * C1528 -
             (C5779 * C1523 + C5778 * C1527) +
             (C436 * C2619 + C29603 * C2952) * C1524) *
                C29683) *
               C29688) *
              C2070) *
         C29532) /
        (p * q * std::sqrt(p + q));
    d2eezy[18] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C436 * C93 + C29603 * C437) * C151 +
              (C436 * C152 + C29603 * C503) * C29532) *
                 C10085 +
             (C509 + C521) * C29683) *
                C10087 +
            ((C4010 * C151 + C4080 * C29532) * C10085 +
             (C3516 + C3517) * C29683) *
                C29688) *
               C1523 -
           (((C3518 + C3519) * C29683 + (C3517 + C3516) * C10085) * C29688 +
            ((C522 + C512) * C29683 + (C521 + C509) * C10085) * C10087) *
               C1524) *
              C2069 +
          ((((C2487 + C2495) * C10085 + (C2490 + C2496) * C29683) * C10087 +
            ((C5846 + C5850) * C10085 +
             ((C436 * C2613 + C29603 * C2949) * C151 +
              (C436 * C2675 + C29603 * C3005) * C29532) *
                 C29683) *
                C29688) *
               C1524 -
           (((C5850 + C5846) * C29683 +
             (C6518 * C29532 + C6445 * C151) * C10085) *
                C29688 +
            ((C2495 + C2487) * C29683 +
             ((C436 * C1134 + C29603 * C1425) * C29532 +
              (C436 * C1072 + C29603 * C1375) * C151) *
                 C10085) *
                C10087) *
               C1523) *
              C2070)) /
        (p * q * std::sqrt(p + q));
    d2eezz[18] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C436 * C93 + C29603 * C437) * C2177 +
                       (C436 * C201 + C29603 * C562) * C2069 -
                       (C436 * C1072 + C29603 * C1375) * C2178 -
                       (C436 * C1187 + C29603 * C1467) * C2070) *
                          C10085 +
                      (C2548 + C2549 - C2550 - C2560) * C29683) *
                         C10087 +
                     ((C6587 + C6588 - C6589 - C6593) * C10085 +
                      (C5917 + C5918 - C5919 - C5923) * C29683) *
                         C29688) *
                        C29532 * C1523 +
                    (((C2550 - (C2549 + C2548) + C2560) * C10085 +
                      (C2555 - (C2554 + C2553) + C2561) * C29683) *
                         C10087 +
                     ((C5919 - (C5918 + C5917) + C5923) * C10085 +
                      ((C436 * C2613 + C29603 * C2949) * C2178 -
                       (C2016 * C2069 + C1892 * C2177) +
                       (C436 * C2731 + C29603 * C3058) * C2070) *
                          C29683) *
                         C29688) *
                        C29532 * C1524)) /
                  (p * q * std::sqrt(p + q));
    d2eexx[19] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C10089 * C93 + C10085 * C98 + C10090 * C94 + C29683 * C99) * C90 +
           (C10089 * C101 + C10085 * C108 + C10090 * C102 + C29683 * C109) *
               C80 -
           (C10090 * C95 + C29683 * C100 + C10089 * C94 + C10085 * C99) * C91 -
           (C10090 * C103 + C29683 * C110 + C10089 * C102 + C10085 * C109) *
               C81 +
           (C10089 * C95 + C10085 * C100 + C10090 * C96 + C29683 * C104) * C92 +
           (C10089 * C103 + C10085 * C110 + C10090 * C105 + C29683 * C111) *
               C82) *
              C10087 +
          ((C10089 * C628 + C10085 * C637 + C10090 * C627 + C29683 * C636) *
               C90 +
           (C10089 * C634 + C10085 * C646 + C10090 * C633 + C29683 * C645) *
               C80 -
           (C10090 * C626 + C29683 * C635 + C10089 * C627 + C10085 * C636) *
               C91 -
           (C10090 * C632 + C29683 * C644 + C10089 * C633 + C10085 * C645) *
               C81 +
           (C10089 * C626 + C10085 * C635 + C10090 * C1529 + C29683 * C1530) *
               C92 +
           (C10089 * C632 + C10085 * C644 + C10090 * C1531 + C29683 * C1532) *
               C82) *
              C29688) *
         C29603 * C29543 * C29532) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10089 * C93 + C10085 * C98 + C10090 * C94 + C29683 * C99) * C625 +
            (C10089 * C101 + C10085 * C108 + C10090 * C102 + C29683 * C109) *
                C29511) *
               C10087 +
           ((C10608 + C10609) * C625 + (C10610 + C10611) * C29511) * C29688) *
              C29603 * C29543 * C622 -
          (((C10612 + C10613) * C29511 + (C10614 + C10615) * C625) * C29688 +
           ((C10611 + C10610) * C29511 + (C10609 + C10608) * C625) * C10087) *
              C29603 * C29543 * C623 +
          (((C10615 + C10614) * C625 + (C10613 + C10612) * C29511) * C10087 +
           ((C10089 * C3619 + C10085 * C3621 + C10090 * C3620 +
             C29683 * C3622) *
                C625 +
            (C10089 * C3623 + C10085 * C3625 + C10090 * C3624 +
             C29683 * C3626) *
                C29511) *
               C29688) *
              C29603 * C29543 * C624)) /
            (p * q * std::sqrt(p + q));
    d2eexy[19] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10089 * C93 + C10085 * C98 + C10090 * C94 + C29683 * C99) * C151 +
            (C10089 * C152 + C10085 * C157 + C10090 * C153 + C29683 * C158) *
                C29532) *
               C10087 +
           ((C10089 * C628 + C10085 * C637 + C10090 * C627 + C29683 * C636) *
                C151 +
            (C10089 * C693 + C10085 * C699 + C10090 * C692 + C29683 * C698) *
                C29532) *
               C29688) *
              C29603 * C80 -
          (((C10090 * C691 + C29683 * C697 + C10089 * C692 + C10085 * C698) *
                C29532 +
            (C10090 * C626 + C29683 * C635 + C10089 * C627 + C10085 * C636) *
                C151) *
               C29688 +
           ((C10090 * C154 + C29683 * C159 + C10089 * C153 + C10085 * C158) *
                C29532 +
            (C10090 * C95 + C29683 * C100 + C10089 * C94 + C10085 * C99) *
                C151) *
               C10087) *
              C29603 * C81 +
          (((C10089 * C95 + C10085 * C100 + C10090 * C96 + C29683 * C104) *
                C151 +
            (C10089 * C154 + C10085 * C159 + C10090 * C155 + C29683 * C160) *
                C29532) *
               C10087 +
           ((C10089 * C626 + C10085 * C635 + C10090 * C1529 + C29683 * C1530) *
                C151 +
            (C10089 * C691 + C10085 * C697 + C10090 * C1585 + C29683 * C1586) *
                C29532) *
               C29688) *
              C29603 * C82) *
         C29543) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C10089 * C93 + C10085 * C98 + C10090 * C94 + C29683 * C99) * C688 +
           (C10089 * C152 + C10085 * C157 + C10090 * C153 + C29683 * C158) *
               C622 -
           (C10609 + C10608) * C689 - (C10674 + C10675) * C623 +
           (C10615 + C10614) * C690 + (C10676 + C10677) * C624) *
              C10087 +
          ((C10608 + C10609) * C688 + (C10675 + C10674) * C622 -
           (C10614 + C10615) * C689 - (C10677 + C10676) * C623 +
           (C10089 * C3619 + C10085 * C3621 + C10090 * C3620 + C29683 * C3622) *
               C690 +
           (C10089 * C3701 + C10085 * C3703 + C10090 * C3702 + C29683 * C3704) *
               C624) *
              C29688) *
         C29603 * C29511 * C29543) /
            (p * q * std::sqrt(p + q));
    d2eexz[19] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10089 * C93 + C10085 * C98 + C10090 * C94 + C29683 * C99) * C200 +
            (C10089 * C201 + C10085 * C206 + C10090 * C202 + C29683 * C207) *
                C29543) *
               C10087 +
           ((C10089 * C628 + C10085 * C637 + C10090 * C627 + C29683 * C636) *
                C200 +
            (C10089 * C743 + C10085 * C749 + C10090 * C742 + C29683 * C748) *
                C29543) *
               C29688) *
              C29603 * C29532 * C80 -
          (((C10090 * C741 + C29683 * C747 + C10089 * C742 + C10085 * C748) *
                C29543 +
            (C10090 * C626 + C29683 * C635 + C10089 * C627 + C10085 * C636) *
                C200) *
               C29688 +
           ((C10090 * C203 + C29683 * C208 + C10089 * C202 + C10085 * C207) *
                C29543 +
            (C10090 * C95 + C29683 * C100 + C10089 * C94 + C10085 * C99) *
                C200) *
               C10087) *
              C29603 * C29532 * C81 +
          (((C10089 * C95 + C10085 * C100 + C10090 * C96 + C29683 * C104) *
                C200 +
            (C10089 * C203 + C10085 * C208 + C10090 * C204 + C29683 * C209) *
                C29543) *
               C10087 +
           ((C10089 * C626 + C10085 * C635 + C10090 * C1529 + C29683 * C1530) *
                C200 +
            (C10089 * C741 + C10085 * C747 + C10090 * C1637 + C29683 * C1638) *
                C29543) *
               C29688) *
              C29603 * C29532 * C82)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10089 * C93 + C10085 * C98 + C10090 * C94 + C29683 * C99) * C200 +
            (C10089 * C201 + C10085 * C206 + C10090 * C202 + C29683 * C207) *
                C29543) *
               C10087 +
           ((C10608 + C10609) * C200 + (C10736 + C10737) * C29543) * C29688) *
              C29603 * C622 -
          (((C10738 + C10739) * C29543 + (C10614 + C10615) * C200) * C29688 +
           ((C10737 + C10736) * C29543 + (C10609 + C10608) * C200) * C10087) *
              C29603 * C623 +
          (((C10615 + C10614) * C200 + (C10739 + C10738) * C29543) * C10087 +
           ((C10089 * C3619 + C10085 * C3621 + C10090 * C3620 +
             C29683 * C3622) *
                C200 +
            (C10089 * C3767 + C10085 * C3769 + C10090 * C3768 +
             C29683 * C3770) *
                C29543) *
               C29688) *
              C29603 * C624) *
         C29511) /
            (p * q * std::sqrt(p + q));
    d2eeyx[19] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C10241 * C93 + C10087 * C250 + C10242 * C628 + C29688 * C793) *
               C90 +
           (C10241 * C101 + C10087 * C255 + C10242 * C634 + C29688 * C799) *
               C80 -
           (C10260 + C10261) * C91 - (C10262 + C10263) * C81 +
           (C10264 + C10265) * C92 + (C10266 + C10267) * C82) *
              C29603 * C10085 +
          ((C10261 + C10260) * C90 + (C10263 + C10262) * C80 -
           (C10265 + C10264) * C91 - (C10267 + C10266) * C81 +
           (C10241 * C96 + C10087 * C253 + C10242 * C1529 + C29688 * C1689) *
               C92 +
           (C10241 * C105 + C10087 * C258 + C10242 * C1531 + C29688 * C1690) *
               C82) *
              C29603 * C29683) *
         C29543 * C29532) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10241 * C93 + C10087 * C250 + C10242 * C628 + C29688 * C793) *
                C625 +
            (C10241 * C101 + C10087 * C255 + C10242 * C634 + C29688 * C799) *
                C29511) *
               C29603 * C10085 +
           ((C10261 + C10260) * C625 + (C10263 + C10262) * C29511) * C29603 *
               C29683) *
              C29543 * C622 -
          (((C10242 * C642 + C29688 * C801 + C10241 * C633 + C10087 * C798) *
                C29511 +
            (C10242 * C630 + C29688 * C795 + C10241 * C627 + C10087 * C792) *
                C625) *
               C29603 * C29683 +
           ((C10242 * C641 + C29688 * C800 + C10241 * C634 + C10087 * C799) *
                C29511 +
            (C10242 * C629 + C29688 * C794 + C10241 * C628 + C10087 * C793) *
                C625) *
               C29603 * C10085) *
              C29543 * C623 +
          (((C10241 * C629 + C10087 * C794 + C10242 * C3619 + C29688 * C3833) *
                C625 +
            (C10241 * C641 + C10087 * C800 + C10242 * C3623 + C29688 * C3835) *
                C29511) *
               C29603 * C10085 +
           ((C10241 * C630 + C10087 * C795 + C10242 * C3620 + C29688 * C3834) *
                C625 +
            (C10241 * C642 + C10087 * C801 + C10242 * C3624 + C29688 * C3836) *
                C29511) *
               C29603 * C29683) *
              C29543 * C624)) /
            (p * q * std::sqrt(p + q));
    d2eeyy[19] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10241 * C93 + C10087 * C250 + C10242 * C628 + C29688 * C793) *
                C151 +
            (C10241 * C152 + C10087 * C316 + C10242 * C693 + C29688 * C841) *
                C29532) *
               C29603 * C10085 +
           ((C10261 + C10260) * C151 + (C10326 + C10327) * C29532) * C29603 *
               C29683) *
              C80 -
          (((C10328 + C10329) * C29532 + (C10265 + C10264) * C151) * C29603 *
               C29683 +
           ((C10327 + C10326) * C29532 + (C10260 + C10261) * C151) * C29603 *
               C10085) *
              C81 +
          (((C10264 + C10265) * C151 + (C10329 + C10328) * C29532) * C29603 *
               C10085 +
           ((C10241 * C96 + C10087 * C253 + C10242 * C1529 + C29688 * C1689) *
                C151 +
            (C10241 * C155 + C10087 * C319 + C10242 * C1585 + C29688 * C1753) *
                C29532) *
               C29603 * C29683) *
              C82) *
         C29543) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C10241 * C93 + C10087 * C250 + C10242 * C628 + C29688 * C793) *
               C688 +
           (C10241 * C152 + C10087 * C316 + C10242 * C693 + C29688 * C841) *
               C622 -
           (C10242 * C629 + C29688 * C794 + C10241 * C628 + C10087 * C793) *
               C689 -
           (C10242 * C694 + C29688 * C842 + C10241 * C693 + C10087 * C841) *
               C623 +
           (C10241 * C629 + C10087 * C794 + C10242 * C3619 + C29688 * C3833) *
               C690 +
           (C10241 * C694 + C10087 * C842 + C10242 * C3701 + C29688 * C3887) *
               C624) *
              C29603 * C10085 +
          ((C10261 + C10260) * C688 + (C10326 + C10327) * C622 -
           (C10242 * C630 + C29688 * C795 + C10241 * C627 + C10087 * C792) *
               C689 -
           (C10242 * C695 + C29688 * C844 + C10241 * C692 + C10087 * C843) *
               C623 +
           (C10241 * C630 + C10087 * C795 + C10242 * C3620 + C29688 * C3834) *
               C690 +
           (C10241 * C695 + C10087 * C844 + C10242 * C3702 + C29688 * C3888) *
               C624) *
              C29603 * C29683) *
         C29511 * C29543) /
            (p * q * std::sqrt(p + q));
    d2eeyz[19] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10241 * C93 + C10087 * C250 + C10242 * C628 + C29688 * C793) *
                C200 +
            (C10241 * C201 + C10087 * C376 + C10242 * C743 + C29688 * C887) *
                C29543) *
               C29603 * C10085 +
           ((C10261 + C10260) * C200 + (C10388 + C10389) * C29543) * C29603 *
               C29683) *
              C29532 * C80 -
          (((C10390 + C10391) * C29543 + (C10265 + C10264) * C200) * C29603 *
               C29683 +
           ((C10389 + C10388) * C29543 + (C10260 + C10261) * C200) * C29603 *
               C10085) *
              C29532 * C81 +
          (((C10264 + C10265) * C200 + (C10391 + C10390) * C29543) * C29603 *
               C10085 +
           ((C10241 * C96 + C10087 * C253 + C10242 * C1529 + C29688 * C1689) *
                C200 +
            (C10241 * C204 + C10087 * C379 + C10242 * C1637 + C29688 * C1818) *
                C29543) *
               C29603 * C29683) *
              C29532 * C82)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10241 * C93 + C10087 * C250 + C10242 * C628 + C29688 * C793) *
                C200 +
            (C10241 * C201 + C10087 * C376 + C10242 * C743 + C29688 * C887) *
                C29543) *
               C29603 * C10085 +
           ((C10261 + C10260) * C200 + (C10388 + C10389) * C29543) * C29603 *
               C29683) *
              C622 -
          (((C10242 * C745 + C29688 * C889 + C10241 * C742 + C10087 * C886) *
                C29543 +
            (C10242 * C630 + C29688 * C795 + C10241 * C627 + C10087 * C792) *
                C200) *
               C29603 * C29683 +
           ((C10242 * C744 + C29688 * C888 + C10241 * C743 + C10087 * C887) *
                C29543 +
            (C10242 * C629 + C29688 * C794 + C10241 * C628 + C10087 * C793) *
                C200) *
               C29603 * C10085) *
              C623 +
          (((C10241 * C629 + C10087 * C794 + C10242 * C3619 + C29688 * C3833) *
                C200 +
            (C10241 * C744 + C10087 * C888 + C10242 * C3767 + C29688 * C3939) *
                C29543) *
               C29603 * C10085 +
           ((C10241 * C630 + C10087 * C795 + C10242 * C3620 + C29688 * C3834) *
                C200 +
            (C10241 * C745 + C10087 * C889 + C10242 * C3768 + C29688 * C3940) *
                C29543) *
               C29603 * C29683) *
              C624) *
         C29511) /
            (p * q * std::sqrt(p + q));
    d2eezx[19] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C436 * C93 + C29603 * C437) * C90 +
            (C436 * C101 + C29603 * C442) * C80 - C460 * C91 - C461 * C81 +
            C462 * C92 + C463 * C82) *
               C10085 +
           (C460 * C90 + C461 * C80 - C462 * C91 - C463 * C81 + C464 * C92 +
            C465 * C82) *
               C29683) *
              C10087 +
          ((C4010 * C90 + C4011 * C80 - C1890 * C91 - C1891 * C81 +
            C1892 * C92 + C1893 * C82) *
               C10085 +
           (C1890 * C90 + C1891 * C80 - C1892 * C91 - C1893 * C81 +
            (C436 * C1529 + C29603 * C1879) * C92 +
            (C436 * C1531 + C29603 * C1880) * C82) *
               C29683) *
              C29688) *
         C29543 * C29532) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C436 * C93 + C29603 * C437) * C625 +
             (C436 * C101 + C29603 * C442) * C29511) *
                C10085 +
            (C460 * C625 + C461 * C29511) * C29683) *
               C10087 +
           ((C4016 + C4017) * C10085 + (C4000 + C4001) * C29683) * C29688) *
              C29543 * C622 -
          (((C4018 + C4019) * C29683 + (C4020 + C4021) * C10085) * C29688 +
           ((C4001 + C4000) * C29683 + (C4017 + C4016) * C10085) * C10087) *
              C29543 * C623 +
          (((C4021 + C4020) * C10085 + (C4019 + C4018) * C29683) * C10087 +
           (((C436 * C3619 + C29603 * C3991) * C625 +
             (C436 * C3623 + C29603 * C3993) * C29511) *
                C10085 +
            ((C436 * C3620 + C29603 * C3992) * C625 +
             (C436 * C3624 + C29603 * C3994) * C29511) *
                C29683) *
               C29688) *
              C29543 * C624)) /
            (p * q * std::sqrt(p + q));
    d2eezy[19] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C436 * C93 + C29603 * C437) * C151 +
             (C436 * C152 + C29603 * C503) * C29532) *
                C10085 +
            (C509 + C521) * C29683) *
               C10087 +
           ((C4010 * C151 + C4080 * C29532) * C10085 +
            (C3516 + C3517) * C29683) *
               C29688) *
              C80 -
          (((C3518 + C3519) * C29683 + (C3517 + C3516) * C10085) * C29688 +
           ((C522 + C512) * C29683 + (C521 + C509) * C10085) * C10087) *
              C81 +
          ((C524 * C10085 + (C517 + C523) * C29683) * C10087 +
           ((C3519 + C3518) * C10085 +
            ((C436 * C1529 + C29603 * C1879) * C151 +
             (C436 * C1585 + C29603 * C1943) * C29532) *
                C29683) *
               C29688) *
              C82) *
         C29543) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C436 * C93 + C29603 * C437) * C688 +
            (C436 * C152 + C29603 * C503) * C622 - C4010 * C689 - C4080 * C623 +
            C4015 * C690 + C4081 * C624) *
               C10085 +
           (C460 * C688 + C518 * C622 - C1890 * C689 - C1955 * C623 +
            C4013 * C690 + C4082 * C624) *
               C29683) *
              C10087 +
          ((C4010 * C688 + C4080 * C622 - C4015 * C689 - C4081 * C623 +
            (C436 * C3619 + C29603 * C3991) * C690 +
            (C436 * C3701 + C29603 * C4071) * C624) *
               C10085 +
           (C1890 * C688 + C1955 * C622 - C4013 * C689 - C4082 * C623 +
            (C436 * C3620 + C29603 * C3992) * C690 +
            (C436 * C3702 + C29603 * C4072) * C624) *
               C29683) *
              C29688) *
         C29511 * C29543) /
            (p * q * std::sqrt(p + q));
    d2eezz[19] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C436 * C93 + C29603 * C437) * C200 +
             (C436 * C201 + C29603 * C562) * C29543) *
                C10085 +
            (C568 + C580) * C29683) *
               C10087 +
           ((C4135 + C4147) * C10085 + C5286 * C29683) * C29688) *
              C29532 * C80 -
          (((C2018 + C2012) * C29683 + C5287 * C10085) * C29688 +
           ((C581 + C571) * C29683 + (C580 + C568) * C10085) * C10087) *
              C29532 * C81 +
          ((C583 * C10085 + (C576 + C582) * C29683) * C10087 +
           ((C2012 + C2018) * C10085 +
            ((C436 * C1529 + C29603 * C1879) * C200 +
             (C436 * C1637 + C29603 * C2008) * C29543) *
                C29683) *
               C29688) *
              C29532 * C82)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C436 * C93 + C29603 * C437) * C200 +
             (C436 * C201 + C29603 * C562) * C29543) *
                C10085 +
            (C568 + C580) * C29683) *
               C10087 +
           ((C4135 + C4147) * C10085 + C5286 * C29683) * C29688) *
              C622 -
          (((C4148 + C4140) * C29683 + (C4149 + C4143) * C10085) * C29688 +
           (C5287 * C29683 + (C4147 + C4135) * C10085) * C10087) *
              C623 +
          (((C4143 + C4149) * C10085 + (C4140 + C4148) * C29683) * C10087 +
           (((C436 * C3619 + C29603 * C3991) * C200 +
             (C436 * C3767 + C29603 * C4132) * C29543) *
                C10085 +
            ((C436 * C3620 + C29603 * C3992) * C200 +
             (C436 * C3768 + C29603 * C4133) * C29543) *
                C29683) *
               C29688) *
              C624) *
         C29511) /
            (p * q * std::sqrt(p + q));
    d2eexx[20] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C13409 * C93 + C29499 * C98) * C1527 +
                      (C13409 * C101 + C29499 * C108) * C1523 -
                      (C13409 * C94 + C29499 * C99) * C1528 -
                      (C13409 * C102 + C29499 * C109) * C1524) *
                         C13406 +
                     (C14554 + C14555 - C14570 - C14571) * C13407 +
                     (C14560 + C14561 - C14572 - C14573) * C13408) *
                        C29603 * C29543 * C1525 +
                    ((C14570 - (C14555 + C14554) + C14571) * C13406 +
                     (C14572 - (C14561 + C14560) + C14573) * C13407 +
                     ((C13409 * C3620 + C29499 * C3622) * C1528 -
                      (C13776 * C1523 + C13777 * C1527) +
                      (C13409 * C3624 + C29499 * C3626) * C1524) *
                         C13408) *
                        C29603 * C29543 * C1526)) /
                  (p * q * std::sqrt(p + q));
    d2eexy[20] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C13409 * C93 + C29499 * C98) * C1583 +
            (C13409 * C152 + C29499 * C157) * C1525 - C13772 * C1584 -
            C13831 * C1526) *
               C13406 +
           (C13772 * C1583 + C13831 * C1525 - C13774 * C1584 - C13832 * C1526) *
               C13407 +
           (C13774 * C1583 + C13832 * C1525 - C13777 * C1584 - C13833 * C1526) *
               C13408) *
              C29603 * C1523 +
          ((C14566 * C1584 -
            ((C13409 * C153 + C29499 * C158) * C1525 +
             (C13409 * C94 + C29499 * C99) * C1583) +
            C14628 * C1526) *
               C13406 +
           (C14568 * C1584 - (C14628 * C1525 + C14566 * C1583) +
            C14629 * C1526) *
               C13407 +
           ((C13409 * C3620 + C29499 * C3622) * C1584 -
            (C14629 * C1525 + C14568 * C1583) +
            (C13409 * C3702 + C29499 * C3704) * C1526) *
               C13408) *
              C29603 * C1524) *
         C29543) /
        (p * q * std::sqrt(p + q));
    d2eexz[20] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C13409 * C93 + C29499 * C98) * C200 +
                       (C13409 * C201 + C29499 * C206) * C29543) *
                          C13406 +
                      (C13874 + C13886) * C13407 + C13889 * C13408) *
                         C29603 * C1525 -
                     ((C13888 + C13882) * C13408 + (C13887 + C13877) * C13407 +
                      (C13886 + C13874) * C13406) *
                         C29603 * C1526) *
                        C1523 +
                    (((C14680 + C14688) * C13406 + (C14683 + C14689) * C13407 +
                      ((C13409 * C3620 + C29499 * C3622) * C200 +
                       (C13409 * C3768 + C29499 * C3770) * C29543) *
                          C13408) *
                         C29603 * C1526 -
                     ((C14689 + C14683) * C13408 + (C14688 + C14680) * C13407 +
                      ((C13409 * C202 + C29499 * C207) * C29543 +
                       (C13409 * C94 + C29499 * C99) * C200) *
                          C13406) *
                         C29603 * C1525) *
                        C1524)) /
                  (p * q * std::sqrt(p + q));
    d2eeyx[20] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((C13524 * C93 + C13406 * C250 + C13525 * C628 +
                      C13407 * C793 + C13526 * C629 + C13408 * C794) *
                         C1527 +
                     (C13524 * C101 + C13406 * C255 + C13525 * C634 +
                      C13407 * C799 + C13526 * C641 + C13408 * C800) *
                         C1523 -
                     (C13526 * C630 + C13408 * C795 + C13525 * C627 +
                      C13407 * C792 + C13524 * C94 + C13406 * C251) *
                         C1528 -
                     (C13526 * C642 + C13408 * C801 + C13525 * C633 +
                      C13407 * C798 + C13524 * C102 + C13406 * C256) *
                         C1524) *
                        C29603 * C29499 * C29543 * C1525 +
                    ((C13524 * C627 + C13406 * C792 + C13525 * C630 +
                      C13407 * C795 + C13526 * C3620 + C13408 * C3834) *
                         C1528 -
                     ((C13526 * C3623 + C13408 * C3835 + C13525 * C641 +
                       C13407 * C800 + C13524 * C634 + C13406 * C799) *
                          C1523 +
                      (C13526 * C3619 + C13408 * C3833 + C13525 * C629 +
                       C13407 * C794 + C13524 * C628 + C13406 * C793) *
                          C1527) +
                     (C13524 * C633 + C13406 * C798 + C13525 * C642 +
                      C13407 * C801 + C13526 * C3624 + C13408 * C3836) *
                         C1524) *
                        C29603 * C29499 * C29543 * C1526)) /
                  (p * q * std::sqrt(p + q));
    d2eeyy[20] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((C13524 * C93 + C13406 * C250 + C13525 * C628 +
                      C13407 * C793 + C13526 * C629 + C13408 * C794) *
                         C1583 +
                     (C13524 * C152 + C13406 * C316 + C13525 * C693 +
                      C13407 * C841 + C13526 * C694 + C13408 * C842) *
                         C1525 -
                     (C13526 * C3619 + C13408 * C3833 + C13525 * C629 +
                      C13407 * C794 + C13524 * C628 + C13406 * C793) *
                         C1584 -
                     (C13526 * C3701 + C13408 * C3887 + C13525 * C694 +
                      C13407 * C842 + C13524 * C693 + C13406 * C841) *
                         C1526) *
                        C29603 * C29499 * C1523 +
                    ((C13524 * C627 + C13406 * C792 + C13525 * C630 +
                      C13407 * C795 + C13526 * C3620 + C13408 * C3834) *
                         C1584 -
                     ((C13526 * C695 + C13408 * C844 + C13525 * C692 +
                       C13407 * C843 + C13524 * C153 + C13406 * C317) *
                          C1525 +
                      (C13526 * C630 + C13408 * C795 + C13525 * C627 +
                       C13407 * C792 + C13524 * C94 + C13406 * C251) *
                          C1583) +
                     (C13524 * C692 + C13406 * C843 + C13525 * C695 +
                      C13407 * C844 + C13526 * C3702 + C13408 * C3888) *
                         C1526) *
                        C29603 * C29499 * C1524) *
                   C29543) /
                  (p * q * std::sqrt(p + q));
    d2eeyz[20] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C13524 * C93 + C13406 * C250 + C13525 * C628 +
                       C13407 * C793 + C13526 * C629 + C13408 * C794) *
                          C200 +
                      (C13524 * C201 + C13406 * C376 + C13525 * C743 +
                       C13407 * C887 + C13526 * C744 + C13408 * C888) *
                          C29543) *
                         C29603 * C29499 * C1525 -
                     ((C13526 * C3767 + C13408 * C3939 + C13525 * C744 +
                       C13407 * C888 + C13524 * C743 + C13406 * C887) *
                          C29543 +
                      (C13526 * C3619 + C13408 * C3833 + C13525 * C629 +
                       C13407 * C794 + C13524 * C628 + C13406 * C793) *
                          C200) *
                         C29603 * C29499 * C1526) *
                        C1523 +
                    (((C13524 * C627 + C13406 * C792 + C13525 * C630 +
                       C13407 * C795 + C13526 * C3620 + C13408 * C3834) *
                          C200 +
                      (C13524 * C742 + C13406 * C886 + C13525 * C745 +
                       C13407 * C889 + C13526 * C3768 + C13408 * C3940) *
                          C29543) *
                         C29603 * C29499 * C1526 -
                     ((C13526 * C745 + C13408 * C889 + C13525 * C742 +
                       C13407 * C886 + C13524 * C202 + C13406 * C377) *
                          C29543 +
                      (C13526 * C630 + C13408 * C795 + C13525 * C627 +
                       C13407 * C792 + C13524 * C94 + C13406 * C251) *
                          C200) *
                         C29603 * C29499 * C1525) *
                        C1524)) /
                  (p * q * std::sqrt(p + q));
    d2eezx[20] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C436 * C93 + C29603 * C437) * C1527 +
                      (C436 * C101 + C29603 * C442) * C1523 - C460 * C1528 -
                      C461 * C1524) *
                         C29499 * C13406 +
                     (C5142 + C5143 - C5144 - C5145) * C29499 * C13407 +
                     (C14890 + C14891 - C14892 - C14893) * C29499 * C13408) *
                        C29543 * C1525 +
                    ((C5144 - (C5143 + C5142) + C5145) * C29499 * C13406 +
                     (C14892 - (C14891 + C14890) + C14893) * C29499 * C13407 +
                     ((C436 * C3620 + C29603 * C3992) * C1528 -
                      (C14054 * C1523 + C14055 * C1527) +
                      (C436 * C3624 + C29603 * C3994) * C1524) *
                         C29499 * C13408) *
                        C29543 * C1526)) /
                  (p * q * std::sqrt(p + q));
    d2eezy[20] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C436 * C93 + C29603 * C437) * C1583 +
            (C436 * C152 + C29603 * C503) * C1525 - C4010 * C1584 -
            C4080 * C1526) *
               C29499 * C13406 +
           (C4010 * C1583 + C4080 * C1525 - C4015 * C1584 - C4081 * C1526) *
               C29499 * C13407 +
           (C4015 * C1583 + C4081 * C1525 - C14055 * C1584 - C14099 * C1526) *
               C29499 * C13408) *
              C1523 +
          ((C1947 - (C1946 + C1945) + C1957) * C29499 * C13406 +
           (C5218 - (C5217 + C5216) + C5219) * C29499 * C13407 +
           ((C436 * C3620 + C29603 * C3992) * C1584 -
            (C4082 * C1525 + C4013 * C1583) +
            (C436 * C3702 + C29603 * C4072) * C1526) *
               C29499 * C13408) *
              C1524) *
         C29543) /
        (p * q * std::sqrt(p + q));
    d2eezz[20] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C436 * C93 + C29603 * C437) * C200 +
             (C436 * C201 + C29603 * C562) * C29543) *
                C29499 * C13406 +
            (C4135 + C4147) * C29499 * C13407 + C14143 * C13408) *
               C1525 -
           ((C14145 + C14142) * C29499 * C13408 +
            (C4149 + C4143) * C29499 * C13407 +
            (C4147 + C4135) * C29499 * C13406) *
               C1526) *
              C1523 +
          ((C5286 * C29499 * C13406 + (C4140 + C4148) * C29499 * C13407 +
            ((C436 * C3620 + C29603 * C3992) * C200 +
             (C436 * C3768 + C29603 * C4133) * C29543) *
                C29499 * C13408) *
               C1526 -
           ((C4148 + C4140) * C29499 * C13408 + C5287 * C29499 * C13407 +
            (C580 + C568) * C29499 * C13406) *
               C1525) *
              C1524)) /
        (p * q * std::sqrt(p + q));
    d2eexx[21] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C13409 * C93 + C29499 * C98) * C625 +
                       (C13409 * C101 + C29499 * C108) * C29511) *
                          C13406 +
                      (C13778 + C13779) * C13407 + C13784 * C13408) *
                         C29603 * C2069 -
                     ((C15510 + C15511) * C13408 + (C15512 + C15513) * C13407 +
                      ((C13409 * C1078 + C29499 * C1090) * C29511 +
                       (C13409 * C1072 + C29499 * C1081) * C625) *
                          C13406) *
                         C29603 * C2070) *
                        C1525 +
                    (((C15513 + C15512) * C13406 + (C15511 + C15510) * C13407 +
                      ((C13409 * C15493 + C29499 * C15494) * C625 +
                       (C13409 * C15495 + C29499 * C15496) * C29511) *
                          C13408) *
                         C29603 * C2070 -
                     ((C13782 + C13783) * C13408 + (C13781 + C13780) * C13407 +
                      (C13779 + C13778) * C13406) *
                         C29603 * C2069) *
                        C1526)) /
                  (p * q * std::sqrt(p + q));
    d2eexy[21] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C13409 * C93 + C29499 * C98) * C1583 +
            (C13409 * C152 + C29499 * C157) * C1525 - C13772 * C1584 -
            C13831 * C1526) *
               C13406 +
           (C13772 * C1583 + C13831 * C1525 - C13774 * C1584 - C13832 * C1526) *
               C13407 +
           (C13774 * C1583 + C13832 * C1525 - C13777 * C1584 - C13833 * C1526) *
               C13408) *
              C29603 * C29511 * C2069 +
          ((C15509 * C1584 -
            ((C13409 * C1134 + C29499 * C1140) * C1525 +
             (C13409 * C1072 + C29499 * C1081) * C1583) +
            C15570 * C1526) *
               C13406 +
           (C15507 * C1584 - (C15570 * C1525 + C15509 * C1583) +
            C15571 * C1526) *
               C13407 +
           ((C13409 * C15493 + C29499 * C15494) * C1584 -
            (C15571 * C1525 + C15507 * C1583) +
            (C13409 * C15563 + C29499 * C15564) * C1526) *
               C13408) *
              C29603 * C29511 * C2070)) /
        (p * q * std::sqrt(p + q));
    d2eexz[21] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C13409 * C93 + C29499 * C98) * C2177 +
                      (C13409 * C201 + C29499 * C206) * C2069 -
                      (C13409 * C1072 + C29499 * C1081) * C2178 -
                      (C13409 * C1187 + C29499 * C1193) * C2070) *
                         C13406 +
                     (C15624 + C15625 - C15626 - C15636) * C13407 +
                     (C15629 + C15630 - C15631 - C15637) * C13408) *
                        C29603 * C1525 +
                    ((C15626 - (C15625 + C15624) + C15636) * C13406 +
                     (C15631 - (C15630 + C15629) + C15637) * C13407 +
                     ((C13409 * C15493 + C29499 * C15494) * C2178 -
                      (C13885 * C2069 + C13777 * C2177) +
                      (C13409 * C15621 + C29499 * C15622) * C2070) *
                         C13408) *
                        C29603 * C1526) *
                   C29511) /
                  (p * q * std::sqrt(p + q));
    d2eeyx[21] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C13524 * C93 + C13406 * C250 + C13525 * C628 +
                       C13407 * C793 + C13526 * C629 + C13408 * C794) *
                          C625 +
                      (C13524 * C101 + C13406 * C255 + C13525 * C634 +
                       C13407 * C799 + C13526 * C641 + C13408 * C800) *
                          C29511) *
                         C29603 * C29499 * C2069 -
                     ((C13526 * C5993 + C13408 * C6229 + C13525 * C2617 +
                       C13407 * C2788 + C13524 * C1078 + C13406 * C1243) *
                          C29511 +
                      (C13526 * C5989 + C13408 * C6227 + C13525 * C2611 +
                       C13407 * C2785 + C13524 * C1072 + C13406 * C1237) *
                          C625) *
                         C29603 * C29499 * C2070) *
                        C1525 +
                    (((C13524 * C2611 + C13406 * C2785 + C13525 * C5989 +
                       C13407 * C6227 + C13526 * C15493 + C13408 * C15687) *
                          C625 +
                      (C13524 * C2617 + C13406 * C2788 + C13525 * C5993 +
                       C13407 * C6229 + C13526 * C15495 + C13408 * C15688) *
                          C29511) *
                         C29603 * C29499 * C2070 -
                     ((C13526 * C3623 + C13408 * C3835 + C13525 * C641 +
                       C13407 * C800 + C13524 * C634 + C13406 * C799) *
                          C29511 +
                      (C13526 * C3619 + C13408 * C3833 + C13525 * C629 +
                       C13407 * C794 + C13524 * C628 + C13406 * C793) *
                          C625) *
                         C29603 * C29499 * C2069) *
                        C1526)) /
                  (p * q * std::sqrt(p + q));
    d2eeyy[21] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((C13524 * C93 + C13406 * C250 + C13525 * C628 +
                      C13407 * C793 + C13526 * C629 + C13408 * C794) *
                         C1583 +
                     (C13524 * C152 + C13406 * C316 + C13525 * C693 +
                      C13407 * C841 + C13526 * C694 + C13408 * C842) *
                         C1525 -
                     (C13526 * C3619 + C13408 * C3833 + C13525 * C629 +
                      C13407 * C794 + C13524 * C628 + C13406 * C793) *
                         C1584 -
                     (C13526 * C3701 + C13408 * C3887 + C13525 * C694 +
                      C13407 * C842 + C13524 * C693 + C13406 * C841) *
                         C1526) *
                        C29603 * C29499 * C29511 * C2069 +
                    ((C13524 * C2611 + C13406 * C2785 + C13525 * C5989 +
                      C13407 * C6227 + C13526 * C15493 + C13408 * C15687) *
                         C1584 -
                     ((C13526 * C6075 + C13408 * C6297 + C13525 * C2673 +
                       C13407 * C2841 + C13524 * C1134 + C13406 * C1287) *
                          C1525 +
                      (C13526 * C5989 + C13408 * C6227 + C13525 * C2611 +
                       C13407 * C2785 + C13524 * C1072 + C13406 * C1237) *
                          C1583) +
                     (C13524 * C2673 + C13406 * C2841 + C13525 * C6075 +
                      C13407 * C6297 + C13526 * C15563 + C13408 * C15739) *
                         C1526) *
                        C29603 * C29499 * C29511 * C2070)) /
                  (p * q * std::sqrt(p + q));
    d2eeyz[21] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((C13524 * C93 + C13406 * C250 + C13525 * C628 +
                      C13407 * C793 + C13526 * C629 + C13408 * C794) *
                         C2177 +
                     (C13524 * C201 + C13406 * C376 + C13525 * C743 +
                      C13407 * C887 + C13526 * C744 + C13408 * C888) *
                         C2069 -
                     (C13526 * C5989 + C13408 * C6227 + C13525 * C2611 +
                      C13407 * C2785 + C13524 * C1072 + C13406 * C1237) *
                         C2178 -
                     (C13526 * C6151 + C13408 * C6365 + C13525 * C2729 +
                      C13407 * C2894 + C13524 * C1187 + C13406 * C1329) *
                         C2070) *
                        C29603 * C29499 * C1525 +
                    ((C13524 * C2611 + C13406 * C2785 + C13525 * C5989 +
                      C13407 * C6227 + C13526 * C15493 + C13408 * C15687) *
                         C2178 -
                     ((C13526 * C3767 + C13408 * C3939 + C13525 * C744 +
                       C13407 * C888 + C13524 * C743 + C13406 * C887) *
                          C2069 +
                      (C13526 * C3619 + C13408 * C3833 + C13525 * C629 +
                       C13407 * C794 + C13524 * C628 + C13406 * C793) *
                          C2177) +
                     (C13524 * C2729 + C13406 * C2894 + C13525 * C6151 +
                      C13407 * C6365 + C13526 * C15621 + C13408 * C15790) *
                         C2070) *
                        C29603 * C29499 * C1526) *
                   C29511) /
                  (p * q * std::sqrt(p + q));
    d2eezx[21] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C436 * C93 + C29603 * C437) * C625 +
                       (C436 * C101 + C29603 * C442) * C29511) *
                          C29499 * C13406 +
                      (C4016 + C4017) * C29499 * C13407 + C14053 * C13408) *
                         C2069 -
                     ((C15850 + C15851) * C29499 * C13408 +
                      (C6446 + C6447) * C29499 * C13407 +
                      ((C436 * C1078 + C29603 * C1381) * C29511 +
                       (C436 * C1072 + C29603 * C1375) * C625) *
                          C29499 * C13406) *
                         C2070) *
                        C1525 +
                    (((C6447 + C6446) * C29499 * C13406 +
                      (C15851 + C15850) * C29499 * C13407 +
                      ((C436 * C15493 + C29603 * C15841) * C625 +
                       (C436 * C15495 + C29603 * C15842) * C29511) *
                          C29499 * C13408) *
                         C2070 -
                     ((C14056 + C14057) * C29499 * C13408 +
                      (C4020 + C4021) * C29499 * C13407 +
                      (C4017 + C4016) * C29499 * C13406) *
                         C2069) *
                        C1526)) /
                  (p * q * std::sqrt(p + q));
    d2eezy[21] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C436 * C93 + C29603 * C437) * C1583 +
            (C436 * C152 + C29603 * C503) * C1525 - C4010 * C1584 -
            C4080 * C1526) *
               C29499 * C13406 +
           (C4010 * C1583 + C4080 * C1525 - C4015 * C1584 - C4081 * C1526) *
               C29499 * C13407 +
           (C4015 * C1583 + C4081 * C1525 - C14055 * C1584 - C14099 * C1526) *
               C29499 * C13408) *
              C29511 * C2069 +
          ((C6445 * C1584 -
            ((C436 * C1134 + C29603 * C1425) * C1525 +
             (C436 * C1072 + C29603 * C1375) * C1583) +
            C6518 * C1526) *
               C29499 * C13406 +
           (C15849 * C1584 - (C6518 * C1525 + C6445 * C1583) + C15905 * C1526) *
               C29499 * C13407 +
           ((C436 * C15493 + C29603 * C15841) * C1584 -
            (C15905 * C1525 + C15849 * C1583) +
            (C436 * C15563 + C29603 * C15901) * C1526) *
               C29499 * C13408) *
              C29511 * C2070)) /
        (p * q * std::sqrt(p + q));
    d2eezz[21] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C436 * C93 + C29603 * C437) * C2177 +
                      (C436 * C201 + C29603 * C562) * C2069 -
                      (C436 * C1072 + C29603 * C1375) * C2178 -
                      (C436 * C1187 + C29603 * C1467) * C2070) *
                         C29499 * C13406 +
                     (C6587 + C6588 - C6589 - C6593) * C29499 * C13407 +
                     (C15957 + C15958 - C15959 - C15963) * C29499 * C13408) *
                        C1525 +
                    ((C6589 - (C6588 + C6587) + C6593) * C29499 * C13406 +
                     (C15959 - (C15958 + C15957) + C15963) * C29499 * C13407 +
                     ((C436 * C15493 + C29603 * C15841) * C2178 -
                      (C14144 * C2069 + C14055 * C2177) +
                      (C436 * C15621 + C29603 * C15955) * C2070) *
                         C29499 * C13408) *
                        C1526) *
                   C29511) /
                  (p * q * std::sqrt(p + q));
    d2eexx[22] += (-std::pow(Pi, 2.5) *
                   ((((C13409 * C93 + C29499 * C98) * C625 +
                      (C13409 * C101 + C29499 * C108) * C29511) *
                         C13406 +
                     (C13778 + C13779) * C13407 + C13784 * C13408) *
                        C29603 * C29543 * C622 -
                    ((C13782 + C13783) * C13408 + (C13781 + C13780) * C13407 +
                     (C13779 + C13778) * C13406) *
                        C29603 * C29543 * C623 +
                    (C13784 * C13406 + (C13783 + C13782) * C13407 +
                     ((C13409 * C13755 + C29499 * C13756) * C625 +
                      (C13409 * C13757 + C29499 * C13758) * C29511) *
                         C13408) *
                        C29603 * C29543 * C624)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::pow(Pi, 2.5) *
                   (((C13409 * C93 + C29499 * C98) * C90 +
                     (C13409 * C101 + C29499 * C108) * C80 -
                     (C13409 * C94 + C29499 * C99) * C91 -
                     (C13409 * C102 + C29499 * C109) * C81 +
                     (C13409 * C95 + C29499 * C100) * C92 +
                     (C13409 * C103 + C29499 * C110) * C82) *
                        C13406 +
                    ((C13409 * C628 + C29499 * C637) * C90 +
                     (C13409 * C634 + C29499 * C646) * C80 -
                     (C13409 * C627 + C29499 * C636) * C91 -
                     (C13409 * C633 + C29499 * C645) * C81 +
                     (C13409 * C626 + C29499 * C635) * C92 +
                     (C13409 * C632 + C29499 * C644) * C82) *
                        C13407 +
                    ((C13409 * C629 + C29499 * C638) * C90 +
                     (C13409 * C641 + C29499 * C647) * C80 -
                     (C13409 * C630 + C29499 * C639) * C91 -
                     (C13409 * C642 + C29499 * C648) * C81 +
                     (C13409 * C631 + C29499 * C640) * C92 +
                     (C13409 * C643 + C29499 * C649) * C82) *
                        C13408) *
                   C29603 * C29543 * C29532) /
                      (p * q * std::sqrt(p + q)) +
                  (2 * std::pow(Pi, 2.5) *
                   ((((C13409 * C93 + C29499 * C98) * C625 +
                      (C13409 * C101 + C29499 * C108) * C29511) *
                         C13406 +
                     (C13778 + C13779) * C13407 + C13784 * C13408) *
                        C29603 * C1067 -
                    (((C13409 * C5993 + C29499 * C5995) * C29511 +
                      (C13409 * C5989 + C29499 * C5991) * C625) *
                         C13408 +
                     ((C13409 * C2617 + C29499 * C2620) * C29511 +
                      (C13409 * C2611 + C29499 * C2614) * C625) *
                         C13407 +
                     ((C13409 * C1078 + C29499 * C1090) * C29511 +
                      (C13409 * C1072 + C29499 * C1081) * C625) *
                         C13406) *
                        C29603 * C1068 +
                    (((C13409 * C1073 + C29499 * C1082) * C625 +
                      (C13409 * C1085 + C29499 * C1091) * C29511) *
                         C13406 +
                     ((C13409 * C4199 + C29499 * C4201) * C625 +
                      (C13409 * C4203 + C29499 * C4205) * C29511) *
                         C13407 +
                     ((C13409 * C14183 + C29499 * C14184) * C625 +
                      (C13409 * C14185 + C29499 * C14186) * C29511) *
                         C13408) *
                        C29603 * C1069) *
                   C29532) /
                      (p * q * std::sqrt(p + q));
    d2eexy[22] +=
        (-std::pow(Pi, 2.5) *
         (((C13409 * C93 + C29499 * C98) * C688 +
           (C13409 * C152 + C29499 * C157) * C622 - C13772 * C689 -
           C13831 * C623 + C13774 * C690 + C13832 * C624) *
              C13406 +
          (C13772 * C688 + C13831 * C622 - C13774 * C689 - C13832 * C623 +
           C13777 * C690 + C13833 * C624) *
              C13407 +
          (C13774 * C688 + C13832 * C622 - C13777 * C689 - C13833 * C623 +
           (C13409 * C13755 + C29499 * C13756) * C690 +
           (C13409 * C13822 + C29499 * C13823) * C624) *
              C13408) *
         C29603 * C29511 * C29543) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C13409 * C93 + C29499 * C98) * C151 +
            (C13409 * C152 + C29499 * C157) * C29532) *
               C13406 +
           ((C13409 * C628 + C29499 * C637) * C151 +
            (C13409 * C693 + C29499 * C699) * C29532) *
               C13407 +
           ((C13409 * C629 + C29499 * C638) * C151 +
            (C13409 * C694 + C29499 * C700) * C29532) *
               C13408) *
              C29603 * C80 -
          (((C13409 * C695 + C29499 * C701) * C29532 +
            (C13409 * C630 + C29499 * C639) * C151) *
               C13408 +
           ((C13409 * C692 + C29499 * C698) * C29532 +
            (C13409 * C627 + C29499 * C636) * C151) *
               C13407 +
           ((C13409 * C153 + C29499 * C158) * C29532 +
            (C13409 * C94 + C29499 * C99) * C151) *
               C13406) *
              C29603 * C81 +
          (((C13409 * C95 + C29499 * C100) * C151 +
            (C13409 * C154 + C29499 * C159) * C29532) *
               C13406 +
           ((C13409 * C626 + C29499 * C635) * C151 +
            (C13409 * C691 + C29499 * C697) * C29532) *
               C13407 +
           ((C13409 * C631 + C29499 * C640) * C151 +
            (C13409 * C696 + C29499 * C702) * C29532) *
               C13408) *
              C29603 * C82) *
         C29543) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C13409 * C93 + C29499 * C98) * C151 +
            (C13409 * C152 + C29499 * C157) * C29532) *
               C13406 +
           (C13772 * C151 + C13831 * C29532) * C13407 +
           (C13774 * C151 + C13832 * C29532) * C13408) *
              C29603 * C29511 * C1067 -
          (((C13409 * C6075 + C29499 * C6077) * C29532 +
            (C13409 * C5989 + C29499 * C5991) * C151) *
               C13408 +
           ((C13409 * C2673 + C29499 * C2676) * C29532 +
            (C13409 * C2611 + C29499 * C2614) * C151) *
               C13407 +
           ((C13409 * C1134 + C29499 * C1140) * C29532 +
            (C13409 * C1072 + C29499 * C1081) * C151) *
               C13406) *
              C29603 * C29511 * C1068 +
          (((C13409 * C1073 + C29499 * C1082) * C151 +
            (C13409 * C1135 + C29499 * C1141) * C29532) *
               C13406 +
           ((C13409 * C4199 + C29499 * C4201) * C151 +
            (C13409 * C4257 + C29499 * C4259) * C29532) *
               C13407 +
           ((C13409 * C14183 + C29499 * C14184) * C151 +
            (C13409 * C14225 + C29499 * C14226) * C29532) *
               C13408) *
              C29603 * C29511 * C1069)) /
            (p * q * std::sqrt(p + q));
    d2eexz[22] +=
        (-std::pow(Pi, 2.5) *
         ((((C13409 * C93 + C29499 * C98) * C200 +
            (C13409 * C201 + C29499 * C206) * C29543) *
               C13406 +
           (C13874 + C13886) * C13407 + C13889 * C13408) *
              C29603 * C622 -
          ((C13888 + C13882) * C13408 + (C13887 + C13877) * C13407 +
           (C13886 + C13874) * C13406) *
              C29603 * C623 +
          (C13889 * C13406 + (C13882 + C13888) * C13407 +
           ((C13409 * C13755 + C29499 * C13756) * C200 +
            (C13409 * C13871 + C29499 * C13872) * C29543) *
               C13408) *
              C29603 * C624) *
         C29511) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) * ((((C13409 * C93 + C29499 * C98) * C200 +
                                (C13409 * C201 + C29499 * C206) * C29543) *
                                   C13406 +
                               ((C13409 * C628 + C29499 * C637) * C200 +
                                (C13409 * C743 + C29499 * C749) * C29543) *
                                   C13407 +
                               ((C13409 * C629 + C29499 * C638) * C200 +
                                (C13409 * C744 + C29499 * C750) * C29543) *
                                   C13408) *
                                  C29603 * C29532 * C80 -
                              (((C13409 * C745 + C29499 * C751) * C29543 +
                                (C13409 * C630 + C29499 * C639) * C200) *
                                   C13408 +
                               ((C13409 * C742 + C29499 * C748) * C29543 +
                                (C13409 * C627 + C29499 * C636) * C200) *
                                   C13407 +
                               ((C13409 * C202 + C29499 * C207) * C29543 +
                                (C13409 * C94 + C29499 * C99) * C200) *
                                   C13406) *
                                  C29603 * C29532 * C81 +
                              (((C13409 * C95 + C29499 * C100) * C200 +
                                (C13409 * C203 + C29499 * C208) * C29543) *
                                   C13406 +
                               ((C13409 * C626 + C29499 * C635) * C200 +
                                (C13409 * C741 + C29499 * C747) * C29543) *
                                   C13407 +
                               ((C13409 * C631 + C29499 * C640) * C200 +
                                (C13409 * C746 + C29499 * C752) * C29543) *
                                   C13408) *
                                  C29603 * C29532 * C82)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C13409 * C93 + C29499 * C98) * C1182 +
           (C13409 * C201 + C29499 * C206) * C1067 -
           (C13409 * C1072 + C29499 * C1081) * C1183 -
           (C13409 * C1187 + C29499 * C1193) * C1068 +
           (C13409 * C1073 + C29499 * C1082) * C1184 +
           (C13409 * C1188 + C29499 * C1194) * C1069) *
              C13406 +
          (C13772 * C1182 + C13883 * C1067 -
           (C13409 * C2611 + C29499 * C2614) * C1183 -
           (C13409 * C2729 + C29499 * C2732) * C1068 +
           (C13409 * C4199 + C29499 * C4201) * C1184 +
           (C13409 * C4311 + C29499 * C4313) * C1069) *
              C13407 +
          (C13774 * C1182 + C13884 * C1067 -
           (C13409 * C5989 + C29499 * C5991) * C1183 -
           (C13409 * C6151 + C29499 * C6153) * C1068 +
           (C13409 * C14183 + C29499 * C14184) * C1184 +
           (C13409 * C14265 + C29499 * C14266) * C1069) *
              C13408) *
         C29603 * C29532 * C29511) /
            (p * q * std::sqrt(p + q));
    d2eeyx[22] += (-std::pow(Pi, 2.5) *
                   (((C13524 * C93 + C13406 * C250 + C13525 * C628 +
                      C13407 * C793 + C13526 * C629 + C13408 * C794) *
                         C625 +
                     (C13524 * C101 + C13406 * C255 + C13525 * C634 +
                      C13407 * C799 + C13526 * C641 + C13408 * C800) *
                         C29511) *
                        C29603 * C29499 * C29543 * C622 -
                    ((C13526 * C3623 + C13408 * C3835 + C13525 * C641 +
                      C13407 * C800 + C13524 * C634 + C13406 * C799) *
                         C29511 +
                     (C13526 * C3619 + C13408 * C3833 + C13525 * C629 +
                      C13407 * C794 + C13524 * C628 + C13406 * C793) *
                         C625) *
                        C29603 * C29499 * C29543 * C623 +
                    ((C13524 * C629 + C13406 * C794 + C13525 * C3619 +
                      C13407 * C3833 + C13526 * C13755 + C13408 * C13927) *
                         C625 +
                     (C13524 * C641 + C13406 * C800 + C13525 * C3623 +
                      C13407 * C3835 + C13526 * C13757 + C13408 * C13928) *
                         C29511) *
                        C29603 * C29499 * C29543 * C624)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::pow(Pi, 2.5) *
                   ((C13524 * C93 + C13406 * C250 + C13525 * C628 +
                     C13407 * C793 + C13526 * C629 + C13408 * C794) *
                        C90 +
                    (C13524 * C101 + C13406 * C255 + C13525 * C634 +
                     C13407 * C799 + C13526 * C641 + C13408 * C800) *
                        C80 -
                    (C13526 * C630 + C13408 * C795 + C13525 * C627 +
                     C13407 * C792 + C13524 * C94 + C13406 * C251) *
                        C91 -
                    (C13526 * C642 + C13408 * C801 + C13525 * C633 +
                     C13407 * C798 + C13524 * C102 + C13406 * C256) *
                        C81 +
                    (C13524 * C95 + C13406 * C252 + C13525 * C626 +
                     C13407 * C791 + C13526 * C631 + C13408 * C796) *
                        C92 +
                    (C13524 * C103 + C13406 * C257 + C13525 * C632 +
                     C13407 * C797 + C13526 * C643 + C13408 * C802) *
                        C82) *
                   C29603 * C29499 * C29543 * C29532) /
                      (p * q * std::sqrt(p + q)) +
                  (2 * std::pow(Pi, 2.5) *
                   (((C13524 * C93 + C13406 * C250 + C13525 * C628 +
                      C13407 * C793 + C13526 * C629 + C13408 * C794) *
                         C625 +
                     (C13524 * C101 + C13406 * C255 + C13525 * C634 +
                      C13407 * C799 + C13526 * C641 + C13408 * C800) *
                         C29511) *
                        C29603 * C29499 * C1067 -
                    ((C13526 * C5993 + C13408 * C6229 + C13525 * C2617 +
                      C13407 * C2788 + C13524 * C1078 + C13406 * C1243) *
                         C29511 +
                     (C13526 * C5989 + C13408 * C6227 + C13525 * C2611 +
                      C13407 * C2785 + C13524 * C1072 + C13406 * C1237) *
                         C625) *
                        C29603 * C29499 * C1068 +
                    ((C13524 * C1073 + C13406 * C1238 + C13525 * C4199 +
                      C13407 * C4365 + C13526 * C14183 + C13408 * C14305) *
                         C625 +
                     (C13524 * C1085 + C13406 * C1244 + C13525 * C4203 +
                      C13407 * C4367 + C13526 * C14185 + C13408 * C14306) *
                         C29511) *
                        C29603 * C29499 * C1069) *
                   C29532) /
                      (p * q * std::sqrt(p + q));
    d2eeyy[22] += (-std::pow(Pi, 2.5) *
                   ((C13524 * C93 + C13406 * C250 + C13525 * C628 +
                     C13407 * C793 + C13526 * C629 + C13408 * C794) *
                        C688 +
                    (C13524 * C152 + C13406 * C316 + C13525 * C693 +
                     C13407 * C841 + C13526 * C694 + C13408 * C842) *
                        C622 -
                    (C13526 * C3619 + C13408 * C3833 + C13525 * C629 +
                     C13407 * C794 + C13524 * C628 + C13406 * C793) *
                        C689 -
                    (C13526 * C3701 + C13408 * C3887 + C13525 * C694 +
                     C13407 * C842 + C13524 * C693 + C13406 * C841) *
                        C623 +
                    (C13524 * C629 + C13406 * C794 + C13525 * C3619 +
                     C13407 * C3833 + C13526 * C13755 + C13408 * C13927) *
                        C690 +
                    (C13524 * C694 + C13406 * C842 + C13525 * C3701 +
                     C13407 * C3887 + C13526 * C13822 + C13408 * C13967) *
                        C624) *
                   C29603 * C29499 * C29511 * C29543) /
                      (p * q * std::sqrt(p + q)) -
                  (std::pow(Pi, 2.5) *
                   (((C13524 * C93 + C13406 * C250 + C13525 * C628 +
                      C13407 * C793 + C13526 * C629 + C13408 * C794) *
                         C151 +
                     (C13524 * C152 + C13406 * C316 + C13525 * C693 +
                      C13407 * C841 + C13526 * C694 + C13408 * C842) *
                         C29532) *
                        C29603 * C29499 * C80 -
                    ((C13526 * C695 + C13408 * C844 + C13525 * C692 +
                      C13407 * C843 + C13524 * C153 + C13406 * C317) *
                         C29532 +
                     (C13526 * C630 + C13408 * C795 + C13525 * C627 +
                      C13407 * C792 + C13524 * C94 + C13406 * C251) *
                         C151) *
                        C29603 * C29499 * C81 +
                    ((C13524 * C95 + C13406 * C252 + C13525 * C626 +
                      C13407 * C791 + C13526 * C631 + C13408 * C796) *
                         C151 +
                     (C13524 * C154 + C13406 * C318 + C13525 * C691 +
                      C13407 * C845 + C13526 * C696 + C13408 * C846) *
                         C29532) *
                        C29603 * C29499 * C82) *
                   C29543) /
                      (p * q * std::sqrt(p + q)) +
                  (2 * std::pow(Pi, 2.5) *
                   (((C13524 * C93 + C13406 * C250 + C13525 * C628 +
                      C13407 * C793 + C13526 * C629 + C13408 * C794) *
                         C151 +
                     (C13524 * C152 + C13406 * C316 + C13525 * C693 +
                      C13407 * C841 + C13526 * C694 + C13408 * C842) *
                         C29532) *
                        C29603 * C29499 * C29511 * C1067 -
                    ((C13526 * C6075 + C13408 * C6297 + C13525 * C2673 +
                      C13407 * C2841 + C13524 * C1134 + C13406 * C1287) *
                         C29532 +
                     (C13526 * C5989 + C13408 * C6227 + C13525 * C2611 +
                      C13407 * C2785 + C13524 * C1072 + C13406 * C1237) *
                         C151) *
                        C29603 * C29499 * C29511 * C1068 +
                    ((C13524 * C1073 + C13406 * C1238 + C13525 * C4199 +
                      C13407 * C4365 + C13526 * C14183 + C13408 * C14305) *
                         C151 +
                     (C13524 * C1135 + C13406 * C1288 + C13525 * C4257 +
                      C13407 * C4419 + C13526 * C14225 + C13408 * C14345) *
                         C29532) *
                        C29603 * C29499 * C29511 * C1069)) /
                      (p * q * std::sqrt(p + q));
    d2eeyz[22] +=
        (-std::pow(Pi, 2.5) *
         (((C13524 * C93 + C13406 * C250 + C13525 * C628 + C13407 * C793 +
            C13526 * C629 + C13408 * C794) *
               C200 +
           (C13524 * C201 + C13406 * C376 + C13525 * C743 + C13407 * C887 +
            C13526 * C744 + C13408 * C888) *
               C29543) *
              C29603 * C29499 * C622 -
          ((C13526 * C3767 + C13408 * C3939 + C13525 * C744 + C13407 * C888 +
            C13524 * C743 + C13406 * C887) *
               C29543 +
           (C13526 * C3619 + C13408 * C3833 + C13525 * C629 + C13407 * C794 +
            C13524 * C628 + C13406 * C793) *
               C200) *
              C29603 * C29499 * C623 +
          ((C13524 * C629 + C13406 * C794 + C13525 * C3619 + C13407 * C3833 +
            C13526 * C13755 + C13408 * C13927) *
               C200 +
           (C13524 * C744 + C13406 * C888 + C13525 * C3767 + C13407 * C3939 +
            C13526 * C13871 + C13408 * C14006) *
               C29543) *
              C29603 * C29499 * C624) *
         C29511) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) * (((C13524 * C93 + C13406 * C250 + C13525 * C628 +
                                C13407 * C793 + C13526 * C629 + C13408 * C794) *
                                   C200 +
                               (C13524 * C201 + C13406 * C376 + C13525 * C743 +
                                C13407 * C887 + C13526 * C744 + C13408 * C888) *
                                   C29543) *
                                  C29603 * C29499 * C29532 * C80 -
                              ((C13526 * C745 + C13408 * C889 + C13525 * C742 +
                                C13407 * C886 + C13524 * C202 + C13406 * C377) *
                                   C29543 +
                               (C13526 * C630 + C13408 * C795 + C13525 * C627 +
                                C13407 * C792 + C13524 * C94 + C13406 * C251) *
                                   C200) *
                                  C29603 * C29499 * C29532 * C81 +
                              ((C13524 * C95 + C13406 * C252 + C13525 * C626 +
                                C13407 * C791 + C13526 * C631 + C13408 * C796) *
                                   C200 +
                               (C13524 * C203 + C13406 * C378 + C13525 * C741 +
                                C13407 * C885 + C13526 * C746 + C13408 * C890) *
                                   C29543) *
                                  C29603 * C29499 * C29532 * C82)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((C13524 * C93 + C13406 * C250 + C13525 * C628 + C13407 * C793 +
           C13526 * C629 + C13408 * C794) *
              C1182 +
          (C13524 * C201 + C13406 * C376 + C13525 * C743 + C13407 * C887 +
           C13526 * C744 + C13408 * C888) *
              C1067 -
          (C13526 * C5989 + C13408 * C6227 + C13525 * C2611 + C13407 * C2785 +
           C13524 * C1072 + C13406 * C1237) *
              C1183 -
          (C13526 * C6151 + C13408 * C6365 + C13525 * C2729 + C13407 * C2894 +
           C13524 * C1187 + C13406 * C1329) *
              C1068 +
          (C13524 * C1073 + C13406 * C1238 + C13525 * C4199 + C13407 * C4365 +
           C13526 * C14183 + C13408 * C14305) *
              C1184 +
          (C13524 * C1188 + C13406 * C1330 + C13525 * C4311 + C13407 * C4471 +
           C13526 * C14265 + C13408 * C14384) *
              C1069) *
         C29603 * C29499 * C29532 * C29511) /
            (p * q * std::sqrt(p + q));
    d2eezx[22] += (-std::pow(Pi, 2.5) *
                   ((((C436 * C93 + C29603 * C437) * C625 +
                      (C436 * C101 + C29603 * C442) * C29511) *
                         C29499 * C13406 +
                     (C4016 + C4017) * C29499 * C13407 + C14053 * C13408) *
                        C29543 * C622 -
                    ((C14056 + C14057) * C29499 * C13408 +
                     (C4020 + C4021) * C29499 * C13407 +
                     (C4017 + C4016) * C29499 * C13406) *
                        C29543 * C623 +
                    (C14053 * C13406 + (C14057 + C14056) * C29499 * C13407 +
                     ((C436 * C13755 + C29603 * C14045) * C625 +
                      (C436 * C13757 + C29603 * C14046) * C29511) *
                         C29499 * C13408) *
                        C29543 * C624)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::pow(Pi, 2.5) *
                   (((C436 * C93 + C29603 * C437) * C90 +
                     (C436 * C101 + C29603 * C442) * C80 - C460 * C91 -
                     C461 * C81 + C462 * C92 + C463 * C82) *
                        C29499 * C13406 +
                    (C4010 * C90 + C4011 * C80 - C1890 * C91 - C1891 * C81 +
                     C1892 * C92 + C1893 * C82) *
                        C29499 * C13407 +
                    (C4015 * C90 + C4014 * C80 - C4013 * C91 - C4012 * C81 +
                     (C436 * C631 + C29603 * C934) * C92 +
                     (C436 * C643 + C29603 * C940) * C82) *
                        C29499 * C13408) *
                   C29543 * C29532) /
                      (p * q * std::sqrt(p + q)) +
                  (2 * std::pow(Pi, 2.5) *
                   ((((C436 * C93 + C29603 * C437) * C625 +
                      (C436 * C101 + C29603 * C442) * C29511) *
                         C29499 * C13406 +
                     (C4016 + C4017) * C29499 * C13407 + C14053 * C13408) *
                        C1067 -
                    (((C436 * C5993 + C29603 * C6435) * C29511 +
                      (C436 * C5989 + C29603 * C6433) * C625) *
                         C29499 * C13408 +
                     (C6446 + C6447) * C29499 * C13407 +
                     ((C436 * C1078 + C29603 * C1381) * C29511 +
                      (C436 * C1072 + C29603 * C1375) * C625) *
                         C29499 * C13406) *
                        C1068 +
                    (((C436 * C1073 + C29603 * C1376) * C625 +
                      (C436 * C1085 + C29603 * C1382) * C29511) *
                         C29499 * C13406 +
                     ((C436 * C4199 + C29603 * C4523) * C625 +
                      (C436 * C4203 + C29603 * C4525) * C29511) *
                         C29499 * C13407 +
                     ((C436 * C14183 + C29603 * C14423) * C625 +
                      (C436 * C14185 + C29603 * C14424) * C29511) *
                         C29499 * C13408) *
                        C1069) *
                   C29532) /
                      (p * q * std::sqrt(p + q));
    d2eezy[22] +=
        (-std::pow(Pi, 2.5) *
         (((C436 * C93 + C29603 * C437) * C688 +
           (C436 * C152 + C29603 * C503) * C622 - C4010 * C689 - C4080 * C623 +
           C4015 * C690 + C4081 * C624) *
              C29499 * C13406 +
          (C4010 * C688 + C4080 * C622 - C4015 * C689 - C4081 * C623 +
           C14055 * C690 + C14099 * C624) *
              C29499 * C13407 +
          (C4015 * C688 + C4081 * C622 - C14055 * C689 - C14099 * C623 +
           (C436 * C13755 + C29603 * C14045) * C690 +
           (C436 * C13822 + C29603 * C14095) * C624) *
              C29499 * C13408) *
         C29511 * C29543) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C436 * C93 + C29603 * C437) * C151 +
            (C436 * C152 + C29603 * C503) * C29532) *
               C29499 * C13406 +
           (C4010 * C151 + C4080 * C29532) * C29499 * C13407 +
           (C4015 * C151 + C4081 * C29532) * C29499 * C13408) *
              C80 -
          ((C4082 * C29532 + C4013 * C151) * C29499 * C13408 +
           (C3517 + C3516) * C29499 * C13407 +
           (C521 + C509) * C29499 * C13406) *
              C81 +
          (C524 * C29499 * C13406 + (C3519 + C3518) * C29499 * C13407 +
           ((C436 * C631 + C29603 * C934) * C151 +
            (C436 * C696 + C29603 * C984) * C29532) *
               C29499 * C13408) *
              C82) *
         C29543) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C436 * C93 + C29603 * C437) * C151 +
            (C436 * C152 + C29603 * C503) * C29532) *
               C29499 * C13406 +
           (C4010 * C151 + C4080 * C29532) * C29499 * C13407 +
           (C4015 * C151 + C4081 * C29532) * C29499 * C13408) *
              C29511 * C1067 -
          (((C436 * C6075 + C29603 * C6513) * C29532 +
            (C436 * C5989 + C29603 * C6433) * C151) *
               C29499 * C13408 +
           (C6518 * C29532 + C6445 * C151) * C29499 * C13407 +
           ((C436 * C1134 + C29603 * C1425) * C29532 +
            (C436 * C1072 + C29603 * C1375) * C151) *
               C29499 * C13406) *
              C29511 * C1068 +
          (((C436 * C1073 + C29603 * C1376) * C151 +
            (C436 * C1135 + C29603 * C1426) * C29532) *
               C29499 * C13406 +
           ((C436 * C4199 + C29603 * C4523) * C151 +
            (C436 * C4257 + C29603 * C4577) * C29532) *
               C29499 * C13407 +
           ((C436 * C14183 + C29603 * C14423) * C151 +
            (C436 * C14225 + C29603 * C14463) * C29532) *
               C29499 * C13408) *
              C29511 * C1069)) /
            (p * q * std::sqrt(p + q));
    d2eezz[22] +=
        (-std::pow(Pi, 2.5) *
         ((((C436 * C93 + C29603 * C437) * C200 +
            (C436 * C201 + C29603 * C562) * C29543) *
               C29499 * C13406 +
           (C4135 + C4147) * C29499 * C13407 + C14143 * C13408) *
              C622 -
          ((C14145 + C14142) * C29499 * C13408 +
           (C4149 + C4143) * C29499 * C13407 +
           (C4147 + C4135) * C29499 * C13406) *
              C623 +
          (C14143 * C13406 + (C14142 + C14145) * C29499 * C13407 +
           ((C436 * C13755 + C29603 * C14045) * C200 +
            (C436 * C13871 + C29603 * C14137) * C29543) *
               C29499 * C13408) *
              C624) *
         C29511) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C436 * C93 + C29603 * C437) * C200 +
            (C436 * C201 + C29603 * C562) * C29543) *
               C29499 * C13406 +
           (C4135 + C4147) * C29499 * C13407 +
           (C4143 + C4149) * C29499 * C13408) *
              C29532 * C80 -
          ((C4148 + C4140) * C29499 * C13408 + C5287 * C29499 * C13407 +
           (C580 + C568) * C29499 * C13406) *
              C29532 * C81 +
          (C583 * C29499 * C13406 + (C2012 + C2018) * C29499 * C13407 +
           ((C436 * C631 + C29603 * C934) * C200 +
            (C436 * C746 + C29603 * C1028) * C29543) *
               C29499 * C13408) *
              C29532 * C82)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C436 * C93 + C29603 * C437) * C1182 +
           (C436 * C201 + C29603 * C562) * C1067 -
           (C436 * C1072 + C29603 * C1375) * C1183 -
           (C436 * C1187 + C29603 * C1467) * C1068 +
           (C436 * C1073 + C29603 * C1376) * C1184 +
           (C436 * C1188 + C29603 * C1468) * C1069) *
              C29499 * C13406 +
          (C4010 * C1182 + C4144 * C1067 - C6445 * C1183 - C6592 * C1068 +
           (C436 * C4199 + C29603 * C4523) * C1184 +
           (C436 * C4311 + C29603 * C4629) * C1069) *
              C29499 * C13407 +
          (C4015 * C1182 + C4146 * C1067 -
           (C436 * C5989 + C29603 * C6433) * C1183 -
           (C436 * C6151 + C29603 * C6584) * C1068 +
           (C436 * C14183 + C29603 * C14423) * C1184 +
           (C436 * C14265 + C29603 * C14502) * C1069) *
              C29499 * C13408) *
         C29532 * C29511) /
            (p * q * std::sqrt(p + q));
    d2eexx[23] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C13409 * C93 + C29499 * C98) * C1527 +
                      (C13409 * C101 + C29499 * C108) * C1523 -
                      (C13409 * C94 + C29499 * C99) * C1528 -
                      (C13409 * C102 + C29499 * C109) * C1524) *
                         C13406 +
                     (C14554 + C14555 - C14570 - C14571) * C13407 +
                     (C14560 + C14561 - C14572 - C14573) * C13408) *
                        C29603 * C2069 +
                    (((C13409 * C1071 + C29499 * C1080) * C1528 -
                      ((C13409 * C1078 + C29499 * C1090) * C1523 +
                       (C13409 * C1072 + C29499 * C1081) * C1527) +
                      (C13409 * C1077 + C29499 * C1089) * C1524) *
                         C13406 +
                     ((C13409 * C2612 + C29499 * C2615) * C1528 -
                      ((C13409 * C2617 + C29499 * C2620) * C1523 +
                       (C13409 * C2611 + C29499 * C2614) * C1527) +
                      (C13409 * C2618 + C29499 * C2621) * C1524) *
                         C13407 +
                     ((C13409 * C5990 + C29499 * C5992) * C1528 -
                      ((C13409 * C5993 + C29499 * C5995) * C1523 +
                       (C13409 * C5989 + C29499 * C5991) * C1527) +
                      (C13409 * C5994 + C29499 * C5996) * C1524) *
                         C13408) *
                        C29603 * C2070) *
                   C29532) /
                  (p * q * std::sqrt(p + q));
    d2eexy[23] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C13409 * C93 + C29499 * C98) * C151 +
                       (C13409 * C152 + C29499 * C157) * C29532) *
                          C13406 +
                      (C13772 * C151 + C13831 * C29532) * C13407 +
                      (C13774 * C151 + C13832 * C29532) * C13408) *
                         C29603 * C1523 -
                     ((C14629 * C29532 + C14568 * C151) * C13408 +
                      (C14628 * C29532 + C14566 * C151) * C13407 +
                      ((C13409 * C153 + C29499 * C158) * C29532 +
                       (C13409 * C94 + C29499 * C99) * C151) *
                          C13406) *
                         C29603 * C1524) *
                        C2069 +
                    ((((C13409 * C1071 + C29499 * C1080) * C151 +
                       (C13409 * C1133 + C29499 * C1139) * C29532) *
                          C13406 +
                      ((C13409 * C2612 + C29499 * C2615) * C151 +
                       (C13409 * C2674 + C29499 * C2677) * C29532) *
                          C13407 +
                      ((C13409 * C5990 + C29499 * C5992) * C151 +
                       (C13409 * C6076 + C29499 * C6078) * C29532) *
                          C13408) *
                         C29603 * C1524 -
                     (((C13409 * C6075 + C29499 * C6077) * C29532 +
                       (C13409 * C5989 + C29499 * C5991) * C151) *
                          C13408 +
                      ((C13409 * C2673 + C29499 * C2676) * C29532 +
                       (C13409 * C2611 + C29499 * C2614) * C151) *
                          C13407 +
                      ((C13409 * C1134 + C29499 * C1140) * C29532 +
                       (C13409 * C1072 + C29499 * C1081) * C151) *
                          C13406) *
                         C29603 * C1523) *
                        C2070)) /
                  (p * q * std::sqrt(p + q));
    d2eexz[23] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C13409 * C93 + C29499 * C98) * C2177 +
                      (C13409 * C201 + C29499 * C206) * C2069 -
                      (C13409 * C1072 + C29499 * C1081) * C2178 -
                      (C13409 * C1187 + C29499 * C1193) * C2070) *
                         C13406 +
                     (C13772 * C2177 + C13883 * C2069 -
                      (C13409 * C2611 + C29499 * C2614) * C2178 -
                      (C13409 * C2729 + C29499 * C2732) * C2070) *
                         C13407 +
                     (C13774 * C2177 + C13884 * C2069 -
                      (C13409 * C5989 + C29499 * C5991) * C2178 -
                      (C13409 * C6151 + C29499 * C6153) * C2070) *
                         C13408) *
                        C29603 * C29532 * C1523 +
                    (((C13409 * C1071 + C29499 * C1080) * C2178 -
                      ((C13409 * C202 + C29499 * C207) * C2069 +
                       (C13409 * C94 + C29499 * C99) * C2177) +
                      (C13409 * C1186 + C29499 * C1192) * C2070) *
                         C13406 +
                     ((C13409 * C2612 + C29499 * C2615) * C2178 -
                      (C14686 * C2069 + C14566 * C2177) +
                      (C13409 * C2730 + C29499 * C2733) * C2070) *
                         C13407 +
                     ((C13409 * C5990 + C29499 * C5992) * C2178 -
                      (C14687 * C2069 + C14568 * C2177) +
                      (C13409 * C6152 + C29499 * C6154) * C2070) *
                         C13408) *
                        C29603 * C29532 * C1524)) /
                  (p * q * std::sqrt(p + q));
    d2eeyx[23] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((C13524 * C93 + C13406 * C250 + C13525 * C628 +
                      C13407 * C793 + C13526 * C629 + C13408 * C794) *
                         C1527 +
                     (C13524 * C101 + C13406 * C255 + C13525 * C634 +
                      C13407 * C799 + C13526 * C641 + C13408 * C800) *
                         C1523 -
                     (C13526 * C630 + C13408 * C795 + C13525 * C627 +
                      C13407 * C792 + C13524 * C94 + C13406 * C251) *
                         C1528 -
                     (C13526 * C642 + C13408 * C801 + C13525 * C633 +
                      C13407 * C798 + C13524 * C102 + C13406 * C256) *
                         C1524) *
                        C29603 * C29499 * C2069 +
                    ((C13524 * C1071 + C13406 * C1236 + C13525 * C2612 +
                      C13407 * C2786 + C13526 * C5990 + C13408 * C6228) *
                         C1528 -
                     ((C13526 * C5993 + C13408 * C6229 + C13525 * C2617 +
                       C13407 * C2788 + C13524 * C1078 + C13406 * C1243) *
                          C1523 +
                      (C13526 * C5989 + C13408 * C6227 + C13525 * C2611 +
                       C13407 * C2785 + C13524 * C1072 + C13406 * C1237) *
                          C1527) +
                     (C13524 * C1077 + C13406 * C1242 + C13525 * C2618 +
                      C13407 * C2789 + C13526 * C5994 + C13408 * C6230) *
                         C1524) *
                        C29603 * C29499 * C2070) *
                   C29532) /
                  (p * q * std::sqrt(p + q));
    d2eeyy[23] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C13524 * C93 + C13406 * C250 + C13525 * C628 +
                       C13407 * C793 + C13526 * C629 + C13408 * C794) *
                          C151 +
                      (C13524 * C152 + C13406 * C316 + C13525 * C693 +
                       C13407 * C841 + C13526 * C694 + C13408 * C842) *
                          C29532) *
                         C29603 * C29499 * C1523 -
                     ((C13526 * C695 + C13408 * C844 + C13525 * C692 +
                       C13407 * C843 + C13524 * C153 + C13406 * C317) *
                          C29532 +
                      (C13526 * C630 + C13408 * C795 + C13525 * C627 +
                       C13407 * C792 + C13524 * C94 + C13406 * C251) *
                          C151) *
                         C29603 * C29499 * C1524) *
                        C2069 +
                    (((C13524 * C1071 + C13406 * C1236 + C13525 * C2612 +
                       C13407 * C2786 + C13526 * C5990 + C13408 * C6228) *
                          C151 +
                      (C13524 * C1133 + C13406 * C1286 + C13525 * C2674 +
                       C13407 * C2842 + C13526 * C6076 + C13408 * C6298) *
                          C29532) *
                         C29603 * C29499 * C1524 -
                     ((C13526 * C6075 + C13408 * C6297 + C13525 * C2673 +
                       C13407 * C2841 + C13524 * C1134 + C13406 * C1287) *
                          C29532 +
                      (C13526 * C5989 + C13408 * C6227 + C13525 * C2611 +
                       C13407 * C2785 + C13524 * C1072 + C13406 * C1237) *
                          C151) *
                         C29603 * C29499 * C1523) *
                        C2070)) /
                  (p * q * std::sqrt(p + q));
    d2eeyz[23] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((C13524 * C93 + C13406 * C250 + C13525 * C628 +
                      C13407 * C793 + C13526 * C629 + C13408 * C794) *
                         C2177 +
                     (C13524 * C201 + C13406 * C376 + C13525 * C743 +
                      C13407 * C887 + C13526 * C744 + C13408 * C888) *
                         C2069 -
                     (C13526 * C5989 + C13408 * C6227 + C13525 * C2611 +
                      C13407 * C2785 + C13524 * C1072 + C13406 * C1237) *
                         C2178 -
                     (C13526 * C6151 + C13408 * C6365 + C13525 * C2729 +
                      C13407 * C2894 + C13524 * C1187 + C13406 * C1329) *
                         C2070) *
                        C29603 * C29499 * C29532 * C1523 +
                    ((C13524 * C1071 + C13406 * C1236 + C13525 * C2612 +
                      C13407 * C2786 + C13526 * C5990 + C13408 * C6228) *
                         C2178 -
                     ((C13526 * C745 + C13408 * C889 + C13525 * C742 +
                       C13407 * C886 + C13524 * C202 + C13406 * C377) *
                          C2069 +
                      (C13526 * C630 + C13408 * C795 + C13525 * C627 +
                       C13407 * C792 + C13524 * C94 + C13406 * C251) *
                          C2177) +
                     (C13524 * C1186 + C13406 * C1331 + C13525 * C2730 +
                      C13407 * C2895 + C13526 * C6152 + C13408 * C6366) *
                         C2070) *
                        C29603 * C29499 * C29532 * C1524)) /
                  (p * q * std::sqrt(p + q));
    d2eezx[23] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C436 * C93 + C29603 * C437) * C1527 +
            (C436 * C101 + C29603 * C442) * C1523 - C460 * C1528 -
            C461 * C1524) *
               C29499 * C13406 +
           (C5142 + C5143 - C5144 - C5145) * C29499 * C13407 +
           (C14890 + C14891 - C14892 - C14893) * C29499 * C13408) *
              C2069 +
          ((C2432 * C1528 -
            ((C436 * C1078 + C29603 * C1381) * C1523 +
             (C436 * C1072 + C29603 * C1375) * C1527) +
            C2433 * C1524) *
               C29499 * C13406 +
           (C5778 * C1528 - (C6444 * C1523 + C6445 * C1527) + C5779 * C1524) *
               C29499 * C13407 +
           ((C436 * C5990 + C29603 * C6434) * C1528 -
            ((C436 * C5993 + C29603 * C6435) * C1523 +
             (C436 * C5989 + C29603 * C6433) * C1527) +
            (C436 * C5994 + C29603 * C6436) * C1524) *
               C29499 * C13408) *
              C2070) *
         C29532) /
        (p * q * std::sqrt(p + q));
    d2eezy[23] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C436 * C93 + C29603 * C437) * C151 +
                       (C436 * C152 + C29603 * C503) * C29532) *
                          C29499 * C13406 +
                      (C4010 * C151 + C4080 * C29532) * C29499 * C13407 +
                      (C4015 * C151 + C4081 * C29532) * C29499 * C13408) *
                         C1523 -
                     ((C4082 * C29532 + C4013 * C151) * C29499 * C13408 +
                      (C3517 + C3516) * C29499 * C13407 +
                      (C521 + C509) * C29499 * C13406) *
                         C1524) *
                        C2069 +
                    (((C2487 + C2495) * C29499 * C13406 +
                      (C5846 + C5850) * C29499 * C13407 +
                      ((C436 * C5990 + C29603 * C6434) * C151 +
                       (C436 * C6076 + C29603 * C6514) * C29532) *
                          C29499 * C13408) *
                         C1524 -
                     (((C436 * C6075 + C29603 * C6513) * C29532 +
                       (C436 * C5989 + C29603 * C6433) * C151) *
                          C29499 * C13408 +
                      (C6518 * C29532 + C6445 * C151) * C29499 * C13407 +
                      ((C436 * C1134 + C29603 * C1425) * C29532 +
                       (C436 * C1072 + C29603 * C1375) * C151) *
                          C29499 * C13406) *
                         C1523) *
                        C2070)) /
                  (p * q * std::sqrt(p + q));
    d2eezz[23] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C436 * C93 + C29603 * C437) * C2177 +
                      (C436 * C201 + C29603 * C562) * C2069 -
                      (C436 * C1072 + C29603 * C1375) * C2178 -
                      (C436 * C1187 + C29603 * C1467) * C2070) *
                         C29499 * C13406 +
                     (C6587 + C6588 - C6589 - C6593) * C29499 * C13407 +
                     (C4015 * C2177 + C4146 * C2069 -
                      (C436 * C5989 + C29603 * C6433) * C2178 -
                      (C436 * C6151 + C29603 * C6584) * C2070) *
                         C29499 * C13408) *
                        C29532 * C1523 +
                    ((C2550 - (C2549 + C2548) + C2560) * C29499 * C13406 +
                     (C5919 - (C5918 + C5917) + C5923) * C29499 * C13407 +
                     ((C436 * C5990 + C29603 * C6434) * C2178 -
                      (C4145 * C2069 + C4013 * C2177) +
                      (C436 * C6152 + C29603 * C6585) * C2070) *
                         C29499 * C13408) *
                        C29532 * C1524)) /
                  (p * q * std::sqrt(p + q));
    d2eexx[24] += (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C13409 * C93 + C29499 * C98) * C90 +
                     (C13409 * C101 + C29499 * C108) * C80 -
                     (C13409 * C94 + C29499 * C99) * C91 -
                     (C13409 * C102 + C29499 * C109) * C81 +
                     (C13409 * C95 + C29499 * C100) * C92 +
                     (C13409 * C103 + C29499 * C110) * C82) *
                        C13406 +
                    ((C13409 * C628 + C29499 * C637) * C90 +
                     (C13409 * C634 + C29499 * C646) * C80 -
                     (C13409 * C627 + C29499 * C636) * C91 -
                     (C13409 * C633 + C29499 * C645) * C81 +
                     (C13409 * C626 + C29499 * C635) * C92 +
                     (C13409 * C632 + C29499 * C644) * C82) *
                        C13407 +
                    ((C13409 * C629 + C29499 * C638) * C90 +
                     (C13409 * C641 + C29499 * C647) * C80 -
                     (C13409 * C630 + C29499 * C639) * C91 -
                     (C13409 * C642 + C29499 * C648) * C81 +
                     (C13409 * C631 + C29499 * C640) * C92 +
                     (C13409 * C643 + C29499 * C649) * C82) *
                        C13408) *
                   C29603 * C29543 * C29532) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C13409 * C93 + C29499 * C98) * C625 +
                      (C13409 * C101 + C29499 * C108) * C29511) *
                         C13406 +
                     (C13778 + C13779) * C13407 + C13784 * C13408) *
                        C29603 * C29543 * C622 -
                    ((C13782 + C13783) * C13408 + (C13781 + C13780) * C13407 +
                     (C13779 + C13778) * C13406) *
                        C29603 * C29543 * C623 +
                    (C13784 * C13406 + (C13783 + C13782) * C13407 +
                     ((C13409 * C13755 + C29499 * C13756) * C625 +
                      (C13409 * C13757 + C29499 * C13758) * C29511) *
                         C13408) *
                        C29603 * C29543 * C624)) /
                      (p * q * std::sqrt(p + q));
    d2eexy[24] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13409 * C93 + C29499 * C98) * C151 +
            (C13409 * C152 + C29499 * C157) * C29532) *
               C13406 +
           ((C13409 * C628 + C29499 * C637) * C151 +
            (C13409 * C693 + C29499 * C699) * C29532) *
               C13407 +
           ((C13409 * C629 + C29499 * C638) * C151 +
            (C13409 * C694 + C29499 * C700) * C29532) *
               C13408) *
              C29603 * C80 -
          (((C13409 * C695 + C29499 * C701) * C29532 +
            (C13409 * C630 + C29499 * C639) * C151) *
               C13408 +
           ((C13409 * C692 + C29499 * C698) * C29532 +
            (C13409 * C627 + C29499 * C636) * C151) *
               C13407 +
           ((C13409 * C153 + C29499 * C158) * C29532 +
            (C13409 * C94 + C29499 * C99) * C151) *
               C13406) *
              C29603 * C81 +
          (((C13409 * C95 + C29499 * C100) * C151 +
            (C13409 * C154 + C29499 * C159) * C29532) *
               C13406 +
           ((C13409 * C626 + C29499 * C635) * C151 +
            (C13409 * C691 + C29499 * C697) * C29532) *
               C13407 +
           ((C13409 * C631 + C29499 * C640) * C151 +
            (C13409 * C696 + C29499 * C702) * C29532) *
               C13408) *
              C29603 * C82) *
         C29543) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C13409 * C93 + C29499 * C98) * C688 +
           (C13409 * C152 + C29499 * C157) * C622 - C13772 * C689 -
           C13831 * C623 + C13774 * C690 + C13832 * C624) *
              C13406 +
          (C13772 * C688 + C13831 * C622 - C13774 * C689 - C13832 * C623 +
           C13777 * C690 + C13833 * C624) *
              C13407 +
          (C13774 * C688 + C13832 * C622 - C13777 * C689 - C13833 * C623 +
           (C13409 * C13755 + C29499 * C13756) * C690 +
           (C13409 * C13822 + C29499 * C13823) * C624) *
              C13408) *
         C29603 * C29511 * C29543) /
            (p * q * std::sqrt(p + q));
    d2eexz[24] += (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C13409 * C93 + C29499 * C98) * C200 +
                      (C13409 * C201 + C29499 * C206) * C29543) *
                         C13406 +
                     ((C13409 * C628 + C29499 * C637) * C200 +
                      (C13409 * C743 + C29499 * C749) * C29543) *
                         C13407 +
                     ((C13409 * C629 + C29499 * C638) * C200 +
                      (C13409 * C744 + C29499 * C750) * C29543) *
                         C13408) *
                        C29603 * C29532 * C80 -
                    (((C13409 * C745 + C29499 * C751) * C29543 +
                      (C13409 * C630 + C29499 * C639) * C200) *
                         C13408 +
                     ((C13409 * C742 + C29499 * C748) * C29543 +
                      (C13409 * C627 + C29499 * C636) * C200) *
                         C13407 +
                     ((C13409 * C202 + C29499 * C207) * C29543 +
                      (C13409 * C94 + C29499 * C99) * C200) *
                         C13406) *
                        C29603 * C29532 * C81 +
                    (((C13409 * C95 + C29499 * C100) * C200 +
                      (C13409 * C203 + C29499 * C208) * C29543) *
                         C13406 +
                     ((C13409 * C626 + C29499 * C635) * C200 +
                      (C13409 * C741 + C29499 * C747) * C29543) *
                         C13407 +
                     ((C13409 * C631 + C29499 * C640) * C200 +
                      (C13409 * C746 + C29499 * C752) * C29543) *
                         C13408) *
                        C29603 * C29532 * C82)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C13409 * C93 + C29499 * C98) * C200 +
                      (C13409 * C201 + C29499 * C206) * C29543) *
                         C13406 +
                     (C13874 + C13886) * C13407 + C13889 * C13408) *
                        C29603 * C622 -
                    ((C13888 + C13882) * C13408 + (C13887 + C13877) * C13407 +
                     (C13886 + C13874) * C13406) *
                        C29603 * C623 +
                    (C13889 * C13406 + (C13882 + C13888) * C13407 +
                     ((C13409 * C13755 + C29499 * C13756) * C200 +
                      (C13409 * C13871 + C29499 * C13872) * C29543) *
                         C13408) *
                        C29603 * C624) *
                   C29511) /
                      (p * q * std::sqrt(p + q));
    d2eeyx[24] += (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((C13524 * C93 + C13406 * C250 + C13525 * C628 +
                     C13407 * C793 + C13526 * C629 + C13408 * C794) *
                        C90 +
                    (C13524 * C101 + C13406 * C255 + C13525 * C634 +
                     C13407 * C799 + C13526 * C641 + C13408 * C800) *
                        C80 -
                    (C13526 * C630 + C13408 * C795 + C13525 * C627 +
                     C13407 * C792 + C13524 * C94 + C13406 * C251) *
                        C91 -
                    (C13526 * C642 + C13408 * C801 + C13525 * C633 +
                     C13407 * C798 + C13524 * C102 + C13406 * C256) *
                        C81 +
                    (C13524 * C95 + C13406 * C252 + C13525 * C626 +
                     C13407 * C791 + C13526 * C631 + C13408 * C796) *
                        C92 +
                    (C13524 * C103 + C13406 * C257 + C13525 * C632 +
                     C13407 * C797 + C13526 * C643 + C13408 * C802) *
                        C82) *
                   C29603 * C29499 * C29543 * C29532) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C13524 * C93 + C13406 * C250 + C13525 * C628 +
                      C13407 * C793 + C13526 * C629 + C13408 * C794) *
                         C625 +
                     (C13524 * C101 + C13406 * C255 + C13525 * C634 +
                      C13407 * C799 + C13526 * C641 + C13408 * C800) *
                         C29511) *
                        C29603 * C29499 * C29543 * C622 -
                    ((C13526 * C3623 + C13408 * C3835 + C13525 * C641 +
                      C13407 * C800 + C13524 * C634 + C13406 * C799) *
                         C29511 +
                     (C13526 * C3619 + C13408 * C3833 + C13525 * C629 +
                      C13407 * C794 + C13524 * C628 + C13406 * C793) *
                         C625) *
                        C29603 * C29499 * C29543 * C623 +
                    ((C13524 * C629 + C13406 * C794 + C13525 * C3619 +
                      C13407 * C3833 + C13526 * C13755 + C13408 * C13927) *
                         C625 +
                     (C13524 * C641 + C13406 * C800 + C13525 * C3623 +
                      C13407 * C3835 + C13526 * C13757 + C13408 * C13928) *
                         C29511) *
                        C29603 * C29499 * C29543 * C624)) /
                      (p * q * std::sqrt(p + q));
    d2eeyy[24] += (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C13524 * C93 + C13406 * C250 + C13525 * C628 +
                      C13407 * C793 + C13526 * C629 + C13408 * C794) *
                         C151 +
                     (C13524 * C152 + C13406 * C316 + C13525 * C693 +
                      C13407 * C841 + C13526 * C694 + C13408 * C842) *
                         C29532) *
                        C29603 * C29499 * C80 -
                    ((C13526 * C695 + C13408 * C844 + C13525 * C692 +
                      C13407 * C843 + C13524 * C153 + C13406 * C317) *
                         C29532 +
                     (C13526 * C630 + C13408 * C795 + C13525 * C627 +
                      C13407 * C792 + C13524 * C94 + C13406 * C251) *
                         C151) *
                        C29603 * C29499 * C81 +
                    ((C13524 * C95 + C13406 * C252 + C13525 * C626 +
                      C13407 * C791 + C13526 * C631 + C13408 * C796) *
                         C151 +
                     (C13524 * C154 + C13406 * C318 + C13525 * C691 +
                      C13407 * C845 + C13526 * C696 + C13408 * C846) *
                         C29532) *
                        C29603 * C29499 * C82) *
                   C29543) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((C13524 * C93 + C13406 * C250 + C13525 * C628 +
                     C13407 * C793 + C13526 * C629 + C13408 * C794) *
                        C688 +
                    (C13524 * C152 + C13406 * C316 + C13525 * C693 +
                     C13407 * C841 + C13526 * C694 + C13408 * C842) *
                        C622 -
                    (C13526 * C3619 + C13408 * C3833 + C13525 * C629 +
                     C13407 * C794 + C13524 * C628 + C13406 * C793) *
                        C689 -
                    (C13526 * C3701 + C13408 * C3887 + C13525 * C694 +
                     C13407 * C842 + C13524 * C693 + C13406 * C841) *
                        C623 +
                    (C13524 * C629 + C13406 * C794 + C13525 * C3619 +
                     C13407 * C3833 + C13526 * C13755 + C13408 * C13927) *
                        C690 +
                    (C13524 * C694 + C13406 * C842 + C13525 * C3701 +
                     C13407 * C3887 + C13526 * C13822 + C13408 * C13967) *
                        C624) *
                   C29603 * C29499 * C29511 * C29543) /
                      (p * q * std::sqrt(p + q));
    d2eeyz[24] += (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C13524 * C93 + C13406 * C250 + C13525 * C628 +
                      C13407 * C793 + C13526 * C629 + C13408 * C794) *
                         C200 +
                     (C13524 * C201 + C13406 * C376 + C13525 * C743 +
                      C13407 * C887 + C13526 * C744 + C13408 * C888) *
                         C29543) *
                        C29603 * C29499 * C29532 * C80 -
                    ((C13526 * C745 + C13408 * C889 + C13525 * C742 +
                      C13407 * C886 + C13524 * C202 + C13406 * C377) *
                         C29543 +
                     (C13526 * C630 + C13408 * C795 + C13525 * C627 +
                      C13407 * C792 + C13524 * C94 + C13406 * C251) *
                         C200) *
                        C29603 * C29499 * C29532 * C81 +
                    ((C13524 * C95 + C13406 * C252 + C13525 * C626 +
                      C13407 * C791 + C13526 * C631 + C13408 * C796) *
                         C200 +
                     (C13524 * C203 + C13406 * C378 + C13525 * C741 +
                      C13407 * C885 + C13526 * C746 + C13408 * C890) *
                         C29543) *
                        C29603 * C29499 * C29532 * C82)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C13524 * C93 + C13406 * C250 + C13525 * C628 +
                      C13407 * C793 + C13526 * C629 + C13408 * C794) *
                         C200 +
                     (C13524 * C201 + C13406 * C376 + C13525 * C743 +
                      C13407 * C887 + C13526 * C744 + C13408 * C888) *
                         C29543) *
                        C29603 * C29499 * C622 -
                    ((C13526 * C3767 + C13408 * C3939 + C13525 * C744 +
                      C13407 * C888 + C13524 * C743 + C13406 * C887) *
                         C29543 +
                     (C13526 * C3619 + C13408 * C3833 + C13525 * C629 +
                      C13407 * C794 + C13524 * C628 + C13406 * C793) *
                         C200) *
                        C29603 * C29499 * C623 +
                    ((C13524 * C629 + C13406 * C794 + C13525 * C3619 +
                      C13407 * C3833 + C13526 * C13755 + C13408 * C13927) *
                         C200 +
                     (C13524 * C744 + C13406 * C888 + C13525 * C3767 +
                      C13407 * C3939 + C13526 * C13871 + C13408 * C14006) *
                         C29543) *
                        C29603 * C29499 * C624) *
                   C29511) /
                      (p * q * std::sqrt(p + q));
    d2eezx[24] += (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C436 * C93 + C29603 * C437) * C90 +
                     (C436 * C101 + C29603 * C442) * C80 - C460 * C91 -
                     C461 * C81 + C462 * C92 + C463 * C82) *
                        C29499 * C13406 +
                    (C4010 * C90 + C4011 * C80 - C1890 * C91 - C1891 * C81 +
                     C1892 * C92 + C1893 * C82) *
                        C29499 * C13407 +
                    (C4015 * C90 + C4014 * C80 - C4013 * C91 - C4012 * C81 +
                     (C436 * C631 + C29603 * C934) * C92 +
                     (C436 * C643 + C29603 * C940) * C82) *
                        C29499 * C13408) *
                   C29543 * C29532) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C436 * C93 + C29603 * C437) * C625 +
                      (C436 * C101 + C29603 * C442) * C29511) *
                         C29499 * C13406 +
                     (C4016 + C4017) * C29499 * C13407 + C14053 * C13408) *
                        C29543 * C622 -
                    ((C14056 + C14057) * C29499 * C13408 +
                     (C4020 + C4021) * C29499 * C13407 +
                     (C4017 + C4016) * C29499 * C13406) *
                        C29543 * C623 +
                    (C14053 * C13406 + (C14057 + C14056) * C29499 * C13407 +
                     ((C436 * C13755 + C29603 * C14045) * C625 +
                      (C436 * C13757 + C29603 * C14046) * C29511) *
                         C29499 * C13408) *
                        C29543 * C624)) /
                      (p * q * std::sqrt(p + q));
    d2eezy[24] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C436 * C93 + C29603 * C437) * C151 +
            (C436 * C152 + C29603 * C503) * C29532) *
               C29499 * C13406 +
           (C4010 * C151 + C4080 * C29532) * C29499 * C13407 +
           (C4015 * C151 + C4081 * C29532) * C29499 * C13408) *
              C80 -
          ((C4082 * C29532 + C4013 * C151) * C29499 * C13408 +
           (C3517 + C3516) * C29499 * C13407 +
           (C521 + C509) * C29499 * C13406) *
              C81 +
          (C524 * C29499 * C13406 + (C3519 + C3518) * C29499 * C13407 +
           ((C436 * C631 + C29603 * C934) * C151 +
            (C436 * C696 + C29603 * C984) * C29532) *
               C29499 * C13408) *
              C82) *
         C29543) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C436 * C93 + C29603 * C437) * C688 +
           (C436 * C152 + C29603 * C503) * C622 - C4010 * C689 - C4080 * C623 +
           C4015 * C690 + C4081 * C624) *
              C29499 * C13406 +
          (C4010 * C688 + C4080 * C622 - C4015 * C689 - C4081 * C623 +
           C14055 * C690 + C14099 * C624) *
              C29499 * C13407 +
          (C4015 * C688 + C4081 * C622 - C14055 * C689 - C14099 * C623 +
           (C436 * C13755 + C29603 * C14045) * C690 +
           (C436 * C13822 + C29603 * C14095) * C624) *
              C29499 * C13408) *
         C29511 * C29543) /
            (p * q * std::sqrt(p + q));
    d2eezz[24] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C436 * C93 + C29603 * C437) * C200 +
            (C436 * C201 + C29603 * C562) * C29543) *
               C29499 * C13406 +
           (C4135 + C4147) * C29499 * C13407 +
           (C4143 + C4149) * C29499 * C13408) *
              C29532 * C80 -
          ((C4148 + C4140) * C29499 * C13408 + C5287 * C29499 * C13407 +
           (C580 + C568) * C29499 * C13406) *
              C29532 * C81 +
          (C583 * C29499 * C13406 + (C2012 + C2018) * C29499 * C13407 +
           ((C436 * C631 + C29603 * C934) * C200 +
            (C436 * C746 + C29603 * C1028) * C29543) *
               C29499 * C13408) *
              C29532 * C82)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C436 * C93 + C29603 * C437) * C200 +
            (C436 * C201 + C29603 * C562) * C29543) *
               C29499 * C13406 +
           (C4135 + C4147) * C29499 * C13407 + C14143 * C13408) *
              C622 -
          ((C14145 + C14142) * C29499 * C13408 +
           (C4149 + C4143) * C29499 * C13407 +
           (C4147 + C4135) * C29499 * C13406) *
              C623 +
          (C14143 * C13406 + (C14142 + C14145) * C29499 * C13407 +
           ((C436 * C13755 + C29603 * C14045) * C200 +
            (C436 * C13871 + C29603 * C14137) * C29543) *
               C29499 * C13408) *
              C624) *
         C29511) /
            (p * q * std::sqrt(p + q));
    d2eexx[25] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C13409 * C93 + C29499 * C98) * C1527 +
                       (C13409 * C101 + C29499 * C108) * C1523 -
                       (C13409 * C94 + C29499 * C99) * C1528 -
                       (C13409 * C102 + C29499 * C109) * C1524) *
                          C10087 +
                      (C14554 + C14555 - C14570 - C14571) * C29688) *
                         C6643 +
                     ((C16982 * C1527 + C16983 * C1523 -
                       (C13409 * C1071 + C29499 * C1080) * C1528 -
                       (C13409 * C1077 + C29499 * C1089) * C1524) *
                          C10087 +
                      (C17546 + C17547 - C17554 - C17555) * C29688) *
                         C29690) *
                        C29543 * C1525 +
                    (((C14570 - (C14555 + C14554) + C14571) * C10087 +
                      (C14572 - (C14561 + C14560) + C14573) * C29688) *
                         C6643 +
                     ((C17554 - (C17547 + C17546) + C17555) * C10087 +
                      ((C13409 * C5990 + C29499 * C5992) * C1528 -
                       (C15506 * C1523 + C15507 * C1527) +
                       (C13409 * C5994 + C29499 * C5996) * C1524) *
                          C29688) *
                         C29690) *
                        C29543 * C1526)) /
                  (p * q * std::sqrt(p + q));
    d2eexy[25] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C13409 * C93 + C29499 * C98) * C1583 +
                       (C13409 * C152 + C29499 * C157) * C1525 -
                       C13772 * C1584 - C13831 * C1526) *
                          C10087 +
                      (C13772 * C1583 + C13831 * C1525 - C13774 * C1584 -
                       C13832 * C1526) *
                          C29688) *
                         C6643 +
                     ((C16982 * C1583 + C17057 * C1525 - C15509 * C1584 -
                       C15570 * C1526) *
                          C10087 +
                      (C15509 * C1583 + C15570 * C1525 - C15507 * C1584 -
                       C15571 * C1526) *
                          C29688) *
                         C29690) *
                        C1523 +
                    (((C14566 * C1584 -
                       ((C13409 * C153 + C29499 * C158) * C1525 +
                        (C13409 * C94 + C29499 * C99) * C1583) +
                       C14628 * C1526) *
                          C10087 +
                      (C14568 * C1584 - (C14628 * C1525 + C14566 * C1583) +
                       C14629 * C1526) *
                          C29688) *
                         C6643 +
                     ((C17552 * C1584 -
                       ((C13409 * C1133 + C29499 * C1139) * C1525 +
                        (C13409 * C1071 + C29499 * C1080) * C1583) +
                       C17624 * C1526) *
                          C10087 +
                      ((C13409 * C5990 + C29499 * C5992) * C1584 -
                       (C17624 * C1525 + C17552 * C1583) +
                       (C13409 * C6076 + C29499 * C6078) * C1526) *
                          C29688) *
                         C29690) *
                        C1524) *
                   C29543) /
                  (p * q * std::sqrt(p + q));
    d2eexz[25] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C13409 * C93 + C29499 * C98) * C200 +
              (C13409 * C201 + C29499 * C206) * C29543) *
                 C10087 +
             (C13874 + C13886) * C29688) *
                C6643 +
            ((C16982 * C200 + C17121 * C29543) * C10087 +
             (C16564 + C16565) * C29688) *
                C29690) *
               C1525 -
           (((C16566 + C16567) * C29688 + (C16565 + C16564) * C10087) * C29690 +
            ((C13887 + C13877) * C29688 + (C13886 + C13874) * C10087) * C6643) *
               C1526) *
              C1523 +
          ((((C14680 + C14688) * C10087 + (C14683 + C14689) * C29688) * C6643 +
            ((C17691 + C17695) * C10087 +
             ((C13409 * C5990 + C29499 * C5992) * C200 +
              (C13409 * C6152 + C29499 * C6154) * C29543) *
                 C29688) *
                C29690) *
               C1526 -
           (((C17695 + C17691) * C29688 +
             ((C13409 * C1186 + C29499 * C1192) * C29543 +
              (C13409 * C1071 + C29499 * C1080) * C200) *
                 C10087) *
                C29690 +
            ((C14688 + C14680) * C29688 +
             ((C13409 * C202 + C29499 * C207) * C29543 +
              (C13409 * C94 + C29499 * C99) * C200) *
                 C10087) *
                C6643) *
               C1525) *
              C1524)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[25] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C10241 * C93 + C10087 * C250 + C10242 * C628 + C29688 * C793) *
                C1527 +
            (C10241 * C101 + C10087 * C255 + C10242 * C634 + C29688 * C799) *
                C1523 -
            (C10260 + C10261) * C1528 - (C10262 + C10263) * C1524) *
               C6643 +
           ((C17192 + C17193) * C1527 + (C17194 + C17195) * C1523 -
            (C12405 + C12404) * C1528 - (C12407 + C12406) * C1524) *
               C29690) *
              C29499 * C29543 * C1525 +
          (((C11786 + C11787) * C1528 -
            ((C10242 * C641 + C29688 * C800 + C10241 * C634 + C10087 * C799) *
                 C1523 +
             (C10242 * C629 + C29688 * C794 + C10241 * C628 + C10087 * C793) *
                 C1527) +
            (C11788 + C11789) * C1524) *
               C6643 +
           ((C10241 * C2612 + C10087 * C2786 + C10242 * C5990 +
             C29688 * C6228) *
                C1528 -
            ((C10242 * C5993 + C29688 * C6229 + C10241 * C2617 +
              C10087 * C2788) *
                 C1523 +
             (C10242 * C5989 + C29688 * C6227 + C10241 * C2611 +
              C10087 * C2785) *
                 C1527) +
            (C10241 * C2618 + C10087 * C2789 + C10242 * C5994 +
             C29688 * C6230) *
                C1524) *
               C29690) *
              C29499 * C29543 * C1526)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[25] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C10241 * C93 + C10087 * C250 + C10242 * C628 + C29688 * C793) *
                C1583 +
            (C10241 * C152 + C10087 * C316 + C10242 * C693 + C29688 * C841) *
                C1525 -
            (C10242 * C629 + C29688 * C794 + C10241 * C628 + C10087 * C793) *
                C1584 -
            (C10242 * C694 + C29688 * C842 + C10241 * C693 + C10087 * C841) *
                C1526) *
               C6643 +
           ((C17192 + C17193) * C1583 + (C17259 + C17260) * C1525 -
            (C10242 * C5989 + C29688 * C6227 + C10241 * C2611 +
             C10087 * C2785) *
                C1584 -
            (C10242 * C6075 + C29688 * C6297 + C10241 * C2673 +
             C10087 * C2841) *
                C1526) *
               C29690) *
              C29499 * C1523 +
          (((C11786 + C11787) * C1584 -
            ((C10327 + C10326) * C1525 + (C10260 + C10261) * C1583) +
            (C11861 + C11860) * C1526) *
               C6643 +
           ((C10241 * C2612 + C10087 * C2786 + C10242 * C5990 +
             C29688 * C6228) *
                C1584 -
            ((C12479 + C12478) * C1525 + (C12405 + C12404) * C1583) +
            (C10241 * C2674 + C10087 * C2842 + C10242 * C6076 +
             C29688 * C6298) *
                C1526) *
               C29690) *
              C29499 * C1524) *
         C29543) /
        (p * q * std::sqrt(p + q));
    d2eeyz[25] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C10241 * C93 + C10087 * C250 + C10242 * C628 + C29688 * C793) *
                 C200 +
             (C10241 * C201 + C10087 * C376 + C10242 * C743 + C29688 * C887) *
                 C29543) *
                C6643 +
            ((C17192 + C17193) * C200 + (C17323 + C17322) * C29543) * C29690) *
               C29499 * C1525 -
           (((C10242 * C6151 + C29688 * C6365 + C10241 * C2729 +
              C10087 * C2894) *
                 C29543 +
             (C10242 * C5989 + C29688 * C6227 + C10241 * C2611 +
              C10087 * C2785) *
                 C200) *
                C29690 +
            ((C10242 * C744 + C29688 * C888 + C10241 * C743 + C10087 * C887) *
                 C29543 +
             (C10242 * C629 + C29688 * C794 + C10241 * C628 + C10087 * C793) *
                 C200) *
                C6643) *
               C29499 * C1526) *
              C1523 +
          ((((C11786 + C11787) * C200 + (C11933 + C11932) * C29543) * C6643 +
            ((C10241 * C2612 + C10087 * C2786 + C10242 * C5990 +
              C29688 * C6228) *
                 C200 +
             (C10241 * C2730 + C10087 * C2895 + C10242 * C6152 +
              C29688 * C6366) *
                 C29543) *
                C29690) *
               C29499 * C1526 -
           (((C12550 + C12551) * C29543 + (C12405 + C12404) * C200) * C29690 +
            ((C10389 + C10388) * C29543 + (C10260 + C10261) * C200) * C6643) *
               C29499 * C1525) *
              C1524)) /
        (p * q * std::sqrt(p + q));
    d2eezx[25] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C6949 * C93 + C6643 * C437 + C6950 * C1072 + C29690 * C1375) *
                C1527 +
            (C6949 * C101 + C6643 * C442 + C6950 * C1078 + C29690 * C1381) *
                C1523 -
            (C6968 + C6969) * C1528 - (C6970 + C6971) * C1524) *
               C29499 * C10087 +
           ((C16784 + C16785) * C1527 + (C16786 + C16787) * C1523 -
            (C8619 + C8618) * C1528 - (C8621 + C8620) * C1524) *
               C29499 * C29688) *
              C29543 * C1525 +
          (((C8618 + C8619) * C1528 -
            ((C16787 + C16786) * C1523 + (C16785 + C16784) * C1527) +
            (C8620 + C8621) * C1524) *
               C29499 * C10087 +
           ((C6949 * C630 + C6643 * C933 + C6950 * C5990 + C29690 * C6434) *
                C1528 -
            ((C16788 + C16789) * C1523 + (C16790 + C16791) * C1527) +
            (C6949 * C642 + C6643 * C939 + C6950 * C5994 + C29690 * C6436) *
                C1524) *
               C29499 * C29688) *
              C29543 * C1526)) /
        (p * q * std::sqrt(p + q));
    d2eezy[25] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C6949 * C93 + C6643 * C437 + C6950 * C1072 + C29690 * C1375) *
                C1583 +
            (C6949 * C152 + C6643 * C503 + C6950 * C1134 + C29690 * C1425) *
                C1525 -
            (C16785 + C16784) * C1584 - (C16850 + C16851) * C1526) *
               C29499 * C10087 +
           ((C16784 + C16785) * C1583 + (C16851 + C16850) * C1525 -
            (C16790 + C16791) * C1584 - (C16853 + C16852) * C1526) *
               C29499 * C29688) *
              C1523 +
          (((C8618 + C8619) * C1584 -
            ((C7035 + C7034) * C1525 + (C6968 + C6969) * C1583) +
            (C8693 + C8692) * C1526) *
               C29499 * C10087 +
           ((C6949 * C630 + C6643 * C933 + C6950 * C5990 + C29690 * C6434) *
                C1584 -
            ((C8692 + C8693) * C1525 + (C8619 + C8618) * C1583) +
            (C6949 * C695 + C6643 * C982 + C6950 * C6076 + C29690 * C6514) *
                C1526) *
               C29499 * C29688) *
              C1524) *
         C29543) /
        (p * q * std::sqrt(p + q));
    d2eezz[25] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C6949 * C93 + C6643 * C437 + C6950 * C1072 + C29690 * C1375) *
                 C200 +
             (C6949 * C201 + C6643 * C562 + C6950 * C1187 + C29690 * C1467) *
                 C29543) *
                C29499 * C10087 +
            ((C16784 + C16785) * C200 + (C16912 + C16913) * C29543) * C29499 *
                C29688) *
               C1525 -
           (((C16914 + C16915) * C29543 + (C16790 + C16791) * C200) * C29499 *
                C29688 +
            ((C16913 + C16912) * C29543 + (C16785 + C16784) * C200) * C29499 *
                C10087) *
               C1526) *
              C1523 +
          ((((C8618 + C8619) * C200 + (C8765 + C8764) * C29543) * C29499 *
                C10087 +
            ((C6949 * C630 + C6643 * C933 + C6950 * C5990 + C29690 * C6434) *
                 C200 +
             (C6949 * C745 + C6643 * C1027 + C6950 * C6152 + C29690 * C6585) *
                 C29543) *
                C29499 * C29688) *
               C1526 -
           (((C8764 + C8765) * C29543 + (C8619 + C8618) * C200) * C29499 *
                C29688 +
            ((C7097 + C7096) * C29543 + (C6968 + C6969) * C200) * C29499 *
                C10087) *
               C1525) *
              C1524)) /
        (p * q * std::sqrt(p + q));
    d2eexx[26] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C13409 * C93 + C29499 * C98) * C625 +
              (C13409 * C101 + C29499 * C108) * C29511) *
                 C10087 +
             (C13778 + C13779) * C29688) *
                C6643 +
            ((C16988 + C16989) * C10087 + C18772 * C29688) * C29690) *
               C2069 -
           (((C16990 + C16991) * C29688 + (C16992 + C16993) * C10087) * C29690 +
            (C18773 * C29688 + (C16989 + C16988) * C10087) * C6643) *
               C2070) *
              C1525 +
          (((C18772 * C10087 + (C15511 + C15510) * C29688) * C6643 +
            ((C16991 + C16990) * C10087 +
             ((C13409 * C14183 + C29499 * C14184) * C625 +
              (C13409 * C14185 + C29499 * C14186) * C29511) *
                 C29688) *
                C29690) *
               C2070 -
           (((C15510 + C15511) * C29688 + C18773 * C10087) * C29690 +
            ((C13781 + C13780) * C29688 + (C13779 + C13778) * C10087) * C6643) *
               C2069) *
              C1526)) /
        (p * q * std::sqrt(p + q));
    d2eexy[26] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C13409 * C93 + C29499 * C98) * C1583 +
                       (C13409 * C152 + C29499 * C157) * C1525 -
                       C13772 * C1584 - C13831 * C1526) *
                          C10087 +
                      (C13772 * C1583 + C13831 * C1525 - C13774 * C1584 -
                       C13832 * C1526) *
                          C29688) *
                         C6643 +
                     ((C18840 + C18841 - C18842 - C18843) * C10087 +
                      (C18844 + C18845 - C18846 - C18847) * C29688) *
                         C29690) *
                        C29511 * C2069 +
                    (((C18842 - (C18841 + C18840) + C18843) * C10087 +
                      (C18846 - (C18845 + C18844) + C18847) * C29688) *
                         C6643 +
                     ((C16985 * C1584 - (C17059 * C1525 + C16987 * C1583) +
                       C17058 * C1526) *
                          C10087 +
                      ((C13409 * C14183 + C29499 * C14184) * C1584 -
                       (C17058 * C1525 + C16985 * C1583) +
                       (C13409 * C14225 + C29499 * C14226) * C1526) *
                          C29688) *
                         C29690) *
                        C29511 * C2070)) /
                  (p * q * std::sqrt(p + q));
    d2eexz[26] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C13409 * C93 + C29499 * C98) * C2177 +
                       (C13409 * C201 + C29499 * C206) * C2069 -
                       C16982 * C2178 - C17121 * C2070) *
                          C10087 +
                      (C15624 + C15625 - C15626 - C15636) * C29688) *
                         C6643 +
                     ((C16982 * C2177 + C17121 * C2069 - C16987 * C2178 -
                       C17122 * C2070) *
                          C10087 +
                      (C18914 + C18915 - C18916 - C18917) * C29688) *
                         C29690) *
                        C1525 +
                    (((C15626 - (C15625 + C15624) + C15636) * C10087 +
                      (C15631 - (C15630 + C15629) + C15637) * C29688) *
                         C6643 +
                     ((C18916 - (C18915 + C18914) + C18917) * C10087 +
                      ((C13409 * C14183 + C29499 * C14184) * C2178 -
                       (C15635 * C2069 + C15507 * C2177) +
                       (C13409 * C14265 + C29499 * C14266) * C2070) *
                          C29688) *
                         C29690) *
                        C1526) *
                   C29511) /
                  (p * q * std::sqrt(p + q));
    d2eeyx[26] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C10241 * C93 + C10087 * C250 + C10242 * C628 + C29688 * C793) *
                 C625 +
             (C10241 * C101 + C10087 * C255 + C10242 * C634 + C29688 * C799) *
                 C29511) *
                C6643 +
            ((C17192 + C17193) * C625 + (C17194 + C17195) * C29511) * C29690) *
               C29499 * C2069 -
           (((C17196 + C17197) * C29511 + (C17198 + C17199) * C625) * C29690 +
            ((C17195 + C17194) * C29511 + (C17193 + C17192) * C625) * C6643) *
               C29499 * C2070) *
              C1525 +
          ((((C18992 + C18993) * C625 + (C18994 + C18995) * C29511) * C6643 +
            ((C10241 * C4199 + C10087 * C4365 + C10242 * C14183 +
              C29688 * C14305) *
                 C625 +
             (C10241 * C4203 + C10087 * C4367 + C10242 * C14185 +
              C29688 * C14306) *
                 C29511) *
                C29690) *
               C29499 * C2070 -
           (((C18995 + C18994) * C29511 + (C18993 + C18992) * C625) * C29690 +
            ((C10242 * C641 + C29688 * C800 + C10241 * C634 + C10087 * C799) *
                 C29511 +
             (C10242 * C629 + C29688 * C794 + C10241 * C628 + C10087 * C793) *
                 C625) *
                C6643) *
               C29499 * C2069) *
              C1526)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[26] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C10241 * C93 + C10087 * C250 + C10242 * C628 + C29688 * C793) *
                C1583 +
            (C10241 * C152 + C10087 * C316 + C10242 * C693 + C29688 * C841) *
                C1525 -
            (C10242 * C629 + C29688 * C794 + C10241 * C628 + C10087 * C793) *
                C1584 -
            (C10242 * C694 + C29688 * C842 + C10241 * C693 + C10087 * C841) *
                C1526) *
               C6643 +
           ((C17192 + C17193) * C1583 + (C17259 + C17260) * C1525 -
            (C18993 + C18992) * C1584 - (C19066 + C19067) * C1526) *
               C29690) *
              C29499 * C29511 * C2069 +
          (((C18992 + C18993) * C1584 -
            ((C17260 + C17259) * C1525 + (C17193 + C17192) * C1583) +
            (C19067 + C19066) * C1526) *
               C6643 +
           ((C10241 * C4199 + C10087 * C4365 + C10242 * C14183 +
             C29688 * C14305) *
                C1584 -
            ((C17261 + C17262) * C1525 + (C17198 + C17199) * C1583) +
            (C10241 * C4257 + C10087 * C4419 + C10242 * C14225 +
             C29688 * C14345) *
                C1526) *
               C29690) *
              C29499 * C29511 * C2070)) /
        (p * q * std::sqrt(p + q));
    d2eeyz[26] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C10241 * C93 + C10087 * C250 + C10242 * C628 + C29688 * C793) *
                C2177 +
            (C10241 * C201 + C10087 * C376 + C10242 * C743 + C29688 * C887) *
                C2069 -
            (C17193 + C17192) * C2178 - (C17322 + C17323) * C2070) *
               C6643 +
           ((C17192 + C17193) * C2177 + (C17323 + C17322) * C2069 -
            (C17198 + C17199) * C2178 - (C17325 + C17324) * C2070) *
               C29690) *
              C29499 * C1525 +
          (((C18992 + C18993) * C2178 -
            ((C10242 * C744 + C29688 * C888 + C10241 * C743 + C10087 * C887) *
                 C2069 +
             (C10242 * C629 + C29688 * C794 + C10241 * C628 + C10087 * C793) *
                 C2177) +
            (C19138 + C19139) * C2070) *
               C6643 +
           ((C10241 * C4199 + C10087 * C4365 + C10242 * C14183 +
             C29688 * C14305) *
                C2178 -
            ((C19139 + C19138) * C2069 + (C18993 + C18992) * C2177) +
            (C10241 * C4311 + C10087 * C4471 + C10242 * C14265 +
             C29688 * C14384) *
                C2070) *
               C29690) *
              C29499 * C1526) *
         C29511) /
        (p * q * std::sqrt(p + q));
    d2eezx[26] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C6949 * C93 + C6643 * C437 + C6950 * C1072 + C29690 * C1375) *
                 C625 +
             (C6949 * C101 + C6643 * C442 + C6950 * C1078 + C29690 * C1381) *
                 C29511) *
                C29499 * C10087 +
            ((C16784 + C16785) * C625 + (C16786 + C16787) * C29511) * C29499 *
                C29688) *
               C2069 -
           (((C19214 + C19215) * C29511 + (C19216 + C19217) * C625) * C29499 *
                C29688 +
            ((C6950 * C1085 + C29690 * C1382 + C6949 * C1078 + C6643 * C1381) *
                 C29511 +
             (C6950 * C1073 + C29690 * C1376 + C6949 * C1072 + C6643 * C1375) *
                 C625) *
                C29499 * C10087) *
               C2070) *
              C1525 +
          ((((C19217 + C19216) * C625 + (C19215 + C19214) * C29511) * C29499 *
                C10087 +
            ((C6949 * C5989 + C6643 * C6433 + C6950 * C14183 +
              C29690 * C14423) *
                 C625 +
             (C6949 * C5993 + C6643 * C6435 + C6950 * C14185 +
              C29690 * C14424) *
                 C29511) *
                C29499 * C29688) *
               C2070 -
           (((C16788 + C16789) * C29511 + (C16790 + C16791) * C625) * C29499 *
                C29688 +
            ((C16787 + C16786) * C29511 + (C16785 + C16784) * C625) * C29499 *
                C10087) *
               C2069) *
              C1526)) /
        (p * q * std::sqrt(p + q));
    d2eezy[26] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C6949 * C93 + C6643 * C437 + C6950 * C1072 + C29690 * C1375) *
                C1583 +
            (C6949 * C152 + C6643 * C503 + C6950 * C1134 + C29690 * C1425) *
                C1525 -
            (C16785 + C16784) * C1584 - (C16850 + C16851) * C1526) *
               C29499 * C10087 +
           ((C16784 + C16785) * C1583 + (C16851 + C16850) * C1525 -
            (C16790 + C16791) * C1584 - (C16853 + C16852) * C1526) *
               C29499 * C29688) *
              C29511 * C2069 +
          (((C19217 + C19216) * C1584 -
            ((C6950 * C1135 + C29690 * C1426 + C6949 * C1134 + C6643 * C1425) *
                 C1525 +
             (C6950 * C1073 + C29690 * C1376 + C6949 * C1072 + C6643 * C1375) *
                 C1583) +
            (C19288 + C19289) * C1526) *
               C29499 * C10087 +
           ((C6949 * C5989 + C6643 * C6433 + C6950 * C14183 + C29690 * C14423) *
                C1584 -
            ((C19289 + C19288) * C1525 + (C19216 + C19217) * C1583) +
            (C6949 * C6075 + C6643 * C6513 + C6950 * C14225 + C29690 * C14463) *
                C1526) *
               C29499 * C29688) *
              C29511 * C2070)) /
        (p * q * std::sqrt(p + q));
    d2eezz[26] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C6949 * C93 + C6643 * C437 + C6950 * C1072 + C29690 * C1375) *
                C2177 +
            (C6949 * C201 + C6643 * C562 + C6950 * C1187 + C29690 * C1467) *
                C2069 -
            (C6950 * C1073 + C29690 * C1376 + C6949 * C1072 + C6643 * C1375) *
                C2178 -
            (C6950 * C1188 + C29690 * C1468 + C6949 * C1187 + C6643 * C1467) *
                C2070) *
               C29499 * C10087 +
           ((C16784 + C16785) * C2177 + (C16912 + C16913) * C2069 -
            (C19216 + C19217) * C2178 - (C19360 + C19361) * C2070) *
               C29499 * C29688) *
              C1525 +
          (((C19217 + C19216) * C2178 -
            ((C16913 + C16912) * C2069 + (C16785 + C16784) * C2177) +
            (C19361 + C19360) * C2070) *
               C29499 * C10087 +
           ((C6949 * C5989 + C6643 * C6433 + C6950 * C14183 + C29690 * C14423) *
                C2178 -
            ((C16914 + C16915) * C2069 + (C16790 + C16791) * C2177) +
            (C6949 * C6151 + C6643 * C6584 + C6950 * C14265 + C29690 * C14502) *
                C2070) *
               C29499 * C29688) *
              C1526) *
         C29511) /
        (p * q * std::sqrt(p + q));
    d2eexx[27] +=
        (-std::pow(Pi, 2.5) *
         (((((C13409 * C93 + C29499 * C98) * C625 +
             (C13409 * C101 + C29499 * C108) * C29511) *
                C10087 +
            (C13778 + C13779) * C29688) *
               C6643 +
           (((C13409 * C1072 + C29499 * C1081) * C625 +
             (C13409 * C1078 + C29499 * C1090) * C29511) *
                C10087 +
            (C15513 + C15512) * C29688) *
               C29690) *
              C29543 * C622 -
          (((C15510 + C15511) * C29688 + (C15512 + C15513) * C10087) * C29690 +
           ((C13781 + C13780) * C29688 + (C13779 + C13778) * C10087) * C6643) *
              C29543 * C623 +
          ((C13784 * C10087 + (C13783 + C13782) * C29688) * C6643 +
           ((C15511 + C15510) * C10087 +
            ((C13409 * C15493 + C29499 * C15494) * C625 +
             (C13409 * C15495 + C29499 * C15496) * C29511) *
                C29688) *
               C29690) *
              C29543 * C624)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C13409 * C93 + C29499 * C98) * C90 +
            (C13409 * C101 + C29499 * C108) * C80 -
            (C13409 * C94 + C29499 * C99) * C91 -
            (C13409 * C102 + C29499 * C109) * C81 +
            (C13409 * C95 + C29499 * C100) * C92 +
            (C13409 * C103 + C29499 * C110) * C82) *
               C10087 +
           (C13772 * C90 + C13773 * C80 - C14566 * C91 - C14567 * C81 +
            (C13409 * C626 + C29499 * C635) * C92 +
            (C13409 * C632 + C29499 * C644) * C82) *
               C29688) *
              C6643 +
          (((C13409 * C1072 + C29499 * C1081) * C90 +
            (C13409 * C1078 + C29499 * C1090) * C80 -
            (C13409 * C1071 + C29499 * C1080) * C91 -
            (C13409 * C1077 + C29499 * C1089) * C81 +
            (C13409 * C1070 + C29499 * C1079) * C92 +
            (C13409 * C1076 + C29499 * C1088) * C82) *
               C10087 +
           (C15509 * C90 + C15508 * C80 -
            (C13409 * C2612 + C29499 * C2615) * C91 -
            (C13409 * C2618 + C29499 * C2621) * C81 +
            (C13409 * C2613 + C29499 * C2616) * C92 +
            (C13409 * C2619 + C29499 * C2622) * C82) *
               C29688) *
              C29690) *
         C29543 * C29532) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C13409 * C93 + C29499 * C98) * C625 +
             (C13409 * C101 + C29499 * C108) * C29511) *
                C10087 +
            (C13778 + C13779) * C29688) *
               C6643 +
           ((C16988 + C16989) * C10087 + (C15513 + C15512) * C29688) * C29690) *
              C1067 -
          (((C16990 + C16991) * C29688 + (C16992 + C16993) * C10087) * C29690 +
           ((C15512 + C15513) * C29688 + (C16989 + C16988) * C10087) * C6643) *
              C1068 +
          (((C16993 + C16992) * C10087 + (C16991 + C16990) * C29688) * C6643 +
           (((C13409 * C7599 + C29499 * C7601) * C625 +
             (C13409 * C7603 + C29499 * C7605) * C29511) *
                C10087 +
            ((C13409 * C16965 + C29499 * C16966) * C625 +
             (C13409 * C16967 + C29499 * C16968) * C29511) *
                C29688) *
               C29690) *
              C1069) *
         C29532) /
            (p * q * std::sqrt(p + q));
    d2eexy[27] +=
        (-std::pow(Pi, 2.5) *
         ((((C13409 * C93 + C29499 * C98) * C688 +
            (C13409 * C152 + C29499 * C157) * C622 - C13772 * C689 -
            C13831 * C623 + C13774 * C690 + C13832 * C624) *
               C10087 +
           (C13772 * C688 + C13831 * C622 - C13774 * C689 - C13832 * C623 +
            C13777 * C690 + C13833 * C624) *
               C29688) *
              C6643 +
          (((C13409 * C1072 + C29499 * C1081) * C688 +
            (C13409 * C1134 + C29499 * C1140) * C622 - C15509 * C689 -
            C15570 * C623 + C15507 * C690 + C15571 * C624) *
               C10087 +
           (C15509 * C688 + C15570 * C622 - C15507 * C689 - C15571 * C623 +
            (C13409 * C15493 + C29499 * C15494) * C690 +
            (C13409 * C15563 + C29499 * C15564) * C624) *
               C29688) *
              C29690) *
         C29511 * C29543) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C13409 * C93 + C29499 * C98) * C151 +
             (C13409 * C152 + C29499 * C157) * C29532) *
                C10087 +
            (C13772 * C151 + C13831 * C29532) * C29688) *
               C6643 +
           (((C13409 * C1072 + C29499 * C1081) * C151 +
             (C13409 * C1134 + C29499 * C1140) * C29532) *
                C10087 +
            (C15509 * C151 + C15570 * C29532) * C29688) *
               C29690) *
              C80 -
          ((((C13409 * C2674 + C29499 * C2677) * C29532 +
             (C13409 * C2612 + C29499 * C2615) * C151) *
                C29688 +
            ((C13409 * C1133 + C29499 * C1139) * C29532 +
             (C13409 * C1071 + C29499 * C1080) * C151) *
                C10087) *
               C29690 +
           ((C14628 * C29532 + C14566 * C151) * C29688 +
            ((C13409 * C153 + C29499 * C158) * C29532 +
             (C13409 * C94 + C29499 * C99) * C151) *
                C10087) *
               C6643) *
              C81 +
          ((((C13409 * C95 + C29499 * C100) * C151 +
             (C13409 * C154 + C29499 * C159) * C29532) *
                C10087 +
            ((C13409 * C626 + C29499 * C635) * C151 +
             (C13409 * C691 + C29499 * C697) * C29532) *
                C29688) *
               C6643 +
           (((C13409 * C1070 + C29499 * C1079) * C151 +
             (C13409 * C1132 + C29499 * C1138) * C29532) *
                C10087 +
            ((C13409 * C2613 + C29499 * C2616) * C151 +
             (C13409 * C2675 + C29499 * C2678) * C29532) *
                C29688) *
               C29690) *
              C82) *
         C29543) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C13409 * C93 + C29499 * C98) * C151 +
             (C13409 * C152 + C29499 * C157) * C29532) *
                C10087 +
            (C13772 * C151 + C13831 * C29532) * C29688) *
               C6643 +
           ((C17046 + C17060) * C10087 + (C17049 + C17050) * C29688) * C29690) *
              C29511 * C1067 -
          (((C17061 + C17053) * C29688 + (C17062 + C17056) * C10087) * C29690 +
           ((C17050 + C17049) * C29688 + (C17060 + C17046) * C10087) * C6643) *
              C29511 * C1068 +
          (((C17056 + C17062) * C10087 + (C17053 + C17061) * C29688) * C6643 +
           (((C13409 * C7599 + C29499 * C7601) * C151 +
             (C13409 * C7681 + C29499 * C7683) * C29532) *
                C10087 +
            ((C13409 * C16965 + C29499 * C16966) * C151 +
             (C13409 * C17043 + C29499 * C17044) * C29532) *
                C29688) *
               C29690) *
              C29511 * C1069)) /
            (p * q * std::sqrt(p + q));
    d2eexz[27] +=
        (-std::pow(Pi, 2.5) *
         (((((C13409 * C93 + C29499 * C98) * C200 +
             (C13409 * C201 + C29499 * C206) * C29543) *
                C10087 +
            (C13874 + C13886) * C29688) *
               C6643 +
           (((C13409 * C1072 + C29499 * C1081) * C200 +
             (C13409 * C1187 + C29499 * C1193) * C29543) *
                C10087 +
            (C16564 + C16565) * C29688) *
               C29690) *
              C622 -
          (((C16566 + C16567) * C29688 + (C16565 + C16564) * C10087) * C29690 +
           ((C13887 + C13877) * C29688 + (C13886 + C13874) * C10087) * C6643) *
              C623 +
          ((C13889 * C10087 + (C13882 + C13888) * C29688) * C6643 +
           ((C16567 + C16566) * C10087 +
            ((C13409 * C15493 + C29499 * C15494) * C200 +
             (C13409 * C15621 + C29499 * C15622) * C29543) *
                C29688) *
               C29690) *
              C624) *
         C29511) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) * (((((C13409 * C93 + C29499 * C98) * C200 +
                                 (C13409 * C201 + C29499 * C206) * C29543) *
                                    C10087 +
                                (C13874 + C13886) * C29688) *
                                   C6643 +
                               (((C13409 * C1072 + C29499 * C1081) * C200 +
                                 (C13409 * C1187 + C29499 * C1193) * C29543) *
                                    C10087 +
                                (C15509 * C200 + C15634 * C29543) * C29688) *
                                   C29690) *
                                  C29532 * C80 -
                              ((((C13409 * C2730 + C29499 * C2733) * C29543 +
                                 (C13409 * C2612 + C29499 * C2615) * C200) *
                                    C29688 +
                                ((C13409 * C1186 + C29499 * C1192) * C29543 +
                                 (C13409 * C1071 + C29499 * C1080) * C200) *
                                    C10087) *
                                   C29690 +
                               ((C14688 + C14680) * C29688 +
                                ((C13409 * C202 + C29499 * C207) * C29543 +
                                 (C13409 * C94 + C29499 * C99) * C200) *
                                    C10087) *
                                   C6643) *
                                  C29532 * C81 +
                              ((((C13409 * C95 + C29499 * C100) * C200 +
                                 (C13409 * C203 + C29499 * C208) * C29543) *
                                    C10087 +
                                ((C13409 * C626 + C29499 * C635) * C200 +
                                 (C13409 * C741 + C29499 * C747) * C29543) *
                                    C29688) *
                                   C6643 +
                               (((C13409 * C1070 + C29499 * C1079) * C200 +
                                 (C13409 * C1185 + C29499 * C1191) * C29543) *
                                    C10087 +
                                ((C13409 * C2613 + C29499 * C2616) * C200 +
                                 (C13409 * C2731 + C29499 * C2734) * C29543) *
                                    C29688) *
                                   C29690) *
                                  C29532 * C82)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C13409 * C93 + C29499 * C98) * C1182 +
            (C13409 * C201 + C29499 * C206) * C1067 - C16982 * C1183 -
            C17121 * C1068 + C16987 * C1184 + C17122 * C1069) *
               C10087 +
           (C13772 * C1182 + C13883 * C1067 - C15509 * C1183 - C15634 * C1068 +
            C16985 * C1184 + C17123 * C1069) *
               C29688) *
              C6643 +
          ((C16982 * C1182 + C17121 * C1067 - C16987 * C1183 - C17122 * C1068 +
            (C13409 * C7599 + C29499 * C7601) * C1184 +
            (C13409 * C7747 + C29499 * C7749) * C1069) *
               C10087 +
           (C15509 * C1182 + C15634 * C1067 - C16985 * C1183 - C17123 * C1068 +
            (C13409 * C16965 + C29499 * C16966) * C1184 +
            (C13409 * C17112 + C29499 * C17113) * C1069) *
               C29688) *
              C29690) *
         C29532 * C29511) /
            (p * q * std::sqrt(p + q));
    d2eeyx[27] +=
        (-std::pow(Pi, 2.5) *
         ((((C10241 * C93 + C10087 * C250 + C10242 * C628 + C29688 * C793) *
                C625 +
            (C10241 * C101 + C10087 * C255 + C10242 * C634 + C29688 * C799) *
                C29511) *
               C6643 +
           ((C10241 * C1072 + C10087 * C1237 + C10242 * C2611 +
             C29688 * C2785) *
                C625 +
            (C10241 * C1078 + C10087 * C1243 + C10242 * C2617 +
             C29688 * C2788) *
                C29511) *
               C29690) *
              C29499 * C29543 * C622 -
          (((C10242 * C5993 + C29688 * C6229 + C10241 * C2617 +
             C10087 * C2788) *
                C29511 +
            (C10242 * C5989 + C29688 * C6227 + C10241 * C2611 +
             C10087 * C2785) *
                C625) *
               C29690 +
           ((C10242 * C641 + C29688 * C800 + C10241 * C634 + C10087 * C799) *
                C29511 +
            (C10242 * C629 + C29688 * C794 + C10241 * C628 + C10087 * C793) *
                C625) *
               C6643) *
              C29499 * C29543 * C623 +
          (((C10241 * C629 + C10087 * C794 + C10242 * C3619 + C29688 * C3833) *
                C625 +
            (C10241 * C641 + C10087 * C800 + C10242 * C3623 + C29688 * C3835) *
                C29511) *
               C6643 +
           ((C10241 * C5989 + C10087 * C6227 + C10242 * C15493 +
             C29688 * C15687) *
                C625 +
            (C10241 * C5993 + C10087 * C6229 + C10242 * C15495 +
             C29688 * C15688) *
                C29511) *
               C29690) *
              C29499 * C29543 * C624)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C10241 * C93 + C10087 * C250 + C10242 * C628 + C29688 * C793) *
               C90 +
           (C10241 * C101 + C10087 * C255 + C10242 * C634 + C29688 * C799) *
               C80 -
           (C10260 + C10261) * C91 - (C10262 + C10263) * C81 +
           (C10264 + C10265) * C92 + (C10266 + C10267) * C82) *
              C6643 +
          ((C10241 * C1072 + C10087 * C1237 + C10242 * C2611 + C29688 * C2785) *
               C90 +
           (C10241 * C1078 + C10087 * C1243 + C10242 * C2617 + C29688 * C2788) *
               C80 -
           (C12405 + C12404) * C91 - (C12407 + C12406) * C81 +
           (C10241 * C1070 + C10087 * C1235 + C10242 * C2613 + C29688 * C2787) *
               C92 +
           (C10241 * C1076 + C10087 * C1241 + C10242 * C2619 + C29688 * C2790) *
               C82) *
              C29690) *
         C29499 * C29543 * C29532) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C10241 * C93 + C10087 * C250 + C10242 * C628 + C29688 * C793) *
                C625 +
            (C10241 * C101 + C10087 * C255 + C10242 * C634 + C29688 * C799) *
                C29511) *
               C6643 +
           ((C17192 + C17193) * C625 + (C17194 + C17195) * C29511) * C29690) *
              C29499 * C1067 -
          (((C17196 + C17197) * C29511 + (C17198 + C17199) * C625) * C29690 +
           ((C17195 + C17194) * C29511 + (C17193 + C17192) * C625) * C6643) *
              C29499 * C1068 +
          (((C17199 + C17198) * C625 + (C17197 + C17196) * C29511) * C6643 +
           ((C10241 * C7599 + C10087 * C7813 + C10242 * C16965 +
             C29688 * C17173) *
                C625 +
            (C10241 * C7603 + C10087 * C7815 + C10242 * C16967 +
             C29688 * C17174) *
                C29511) *
               C29690) *
              C29499 * C1069) *
         C29532) /
            (p * q * std::sqrt(p + q));
    d2eeyy[27] +=
        (-std::pow(Pi, 2.5) *
         (((C10241 * C93 + C10087 * C250 + C10242 * C628 + C29688 * C793) *
               C688 +
           (C10241 * C152 + C10087 * C316 + C10242 * C693 + C29688 * C841) *
               C622 -
           (C10242 * C629 + C29688 * C794 + C10241 * C628 + C10087 * C793) *
               C689 -
           (C10242 * C694 + C29688 * C842 + C10241 * C693 + C10087 * C841) *
               C623 +
           (C10241 * C629 + C10087 * C794 + C10242 * C3619 + C29688 * C3833) *
               C690 +
           (C10241 * C694 + C10087 * C842 + C10242 * C3701 + C29688 * C3887) *
               C624) *
              C6643 +
          ((C10241 * C1072 + C10087 * C1237 + C10242 * C2611 + C29688 * C2785) *
               C688 +
           (C10241 * C1134 + C10087 * C1287 + C10242 * C2673 + C29688 * C2841) *
               C622 -
           (C10242 * C5989 + C29688 * C6227 + C10241 * C2611 + C10087 * C2785) *
               C689 -
           (C10242 * C6075 + C29688 * C6297 + C10241 * C2673 + C10087 * C2841) *
               C623 +
           (C10241 * C5989 + C10087 * C6227 + C10242 * C15493 +
            C29688 * C15687) *
               C690 +
           (C10241 * C6075 + C10087 * C6297 + C10242 * C15563 +
            C29688 * C15739) *
               C624) *
              C29690) *
         C29499 * C29511 * C29543) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C10241 * C93 + C10087 * C250 + C10242 * C628 + C29688 * C793) *
                C151 +
            (C10241 * C152 + C10087 * C316 + C10242 * C693 + C29688 * C841) *
                C29532) *
               C6643 +
           ((C10241 * C1072 + C10087 * C1237 + C10242 * C2611 +
             C29688 * C2785) *
                C151 +
            (C10241 * C1134 + C10087 * C1287 + C10242 * C2673 +
             C29688 * C2841) *
                C29532) *
               C29690) *
              C29499 * C80 -
          (((C12479 + C12478) * C29532 + (C12405 + C12404) * C151) * C29690 +
           ((C10327 + C10326) * C29532 + (C10260 + C10261) * C151) * C6643) *
              C29499 * C81 +
          (((C10264 + C10265) * C151 + (C10329 + C10328) * C29532) * C6643 +
           ((C10241 * C1070 + C10087 * C1235 + C10242 * C2613 +
             C29688 * C2787) *
                C151 +
            (C10241 * C1132 + C10087 * C1285 + C10242 * C2675 +
             C29688 * C2843) *
                C29532) *
               C29690) *
              C29499 * C82) *
         C29543) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C10241 * C93 + C10087 * C250 + C10242 * C628 + C29688 * C793) *
                C151 +
            (C10241 * C152 + C10087 * C316 + C10242 * C693 + C29688 * C841) *
                C29532) *
               C6643 +
           ((C17192 + C17193) * C151 + (C17259 + C17260) * C29532) * C29690) *
              C29499 * C29511 * C1067 -
          (((C17261 + C17262) * C29532 + (C17198 + C17199) * C151) * C29690 +
           ((C17260 + C17259) * C29532 + (C17193 + C17192) * C151) * C6643) *
              C29499 * C29511 * C1068 +
          (((C17199 + C17198) * C151 + (C17262 + C17261) * C29532) * C6643 +
           ((C10241 * C7599 + C10087 * C7813 + C10242 * C16965 +
             C29688 * C17173) *
                C151 +
            (C10241 * C7681 + C10087 * C7893 + C10242 * C17043 +
             C29688 * C17249) *
                C29532) *
               C29690) *
              C29499 * C29511 * C1069)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[27] +=
        (-std::pow(Pi, 2.5) *
         ((((C10241 * C93 + C10087 * C250 + C10242 * C628 + C29688 * C793) *
                C200 +
            (C10241 * C201 + C10087 * C376 + C10242 * C743 + C29688 * C887) *
                C29543) *
               C6643 +
           ((C10241 * C1072 + C10087 * C1237 + C10242 * C2611 +
             C29688 * C2785) *
                C200 +
            (C10241 * C1187 + C10087 * C1329 + C10242 * C2729 +
             C29688 * C2894) *
                C29543) *
               C29690) *
              C29499 * C622 -
          (((C10242 * C6151 + C29688 * C6365 + C10241 * C2729 +
             C10087 * C2894) *
                C29543 +
            (C10242 * C5989 + C29688 * C6227 + C10241 * C2611 +
             C10087 * C2785) *
                C200) *
               C29690 +
           ((C10242 * C744 + C29688 * C888 + C10241 * C743 + C10087 * C887) *
                C29543 +
            (C10242 * C629 + C29688 * C794 + C10241 * C628 + C10087 * C793) *
                C200) *
               C6643) *
              C29499 * C623 +
          (((C10241 * C629 + C10087 * C794 + C10242 * C3619 + C29688 * C3833) *
                C200 +
            (C10241 * C744 + C10087 * C888 + C10242 * C3767 + C29688 * C3939) *
                C29543) *
               C6643 +
           ((C10241 * C5989 + C10087 * C6227 + C10242 * C15493 +
             C29688 * C15687) *
                C200 +
            (C10241 * C6151 + C10087 * C6365 + C10242 * C15621 +
             C29688 * C15790) *
                C29543) *
               C29690) *
              C29499 * C624) *
         C29511) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C10241 * C93 + C10087 * C250 + C10242 * C628 + C29688 * C793) *
                C200 +
            (C10241 * C201 + C10087 * C376 + C10242 * C743 + C29688 * C887) *
                C29543) *
               C6643 +
           ((C10241 * C1072 + C10087 * C1237 + C10242 * C2611 +
             C29688 * C2785) *
                C200 +
            (C10241 * C1187 + C10087 * C1329 + C10242 * C2729 +
             C29688 * C2894) *
                C29543) *
               C29690) *
              C29499 * C29532 * C80 -
          (((C12550 + C12551) * C29543 + (C12405 + C12404) * C200) * C29690 +
           ((C10389 + C10388) * C29543 + (C10260 + C10261) * C200) * C6643) *
              C29499 * C29532 * C81 +
          (((C10264 + C10265) * C200 + (C10391 + C10390) * C29543) * C6643 +
           ((C10241 * C1070 + C10087 * C1235 + C10242 * C2613 +
             C29688 * C2787) *
                C200 +
            (C10241 * C1185 + C10087 * C1333 + C10242 * C2731 +
             C29688 * C2896) *
                C29543) *
               C29690) *
              C29499 * C29532 * C82)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C10241 * C93 + C10087 * C250 + C10242 * C628 + C29688 * C793) *
               C1182 +
           (C10241 * C201 + C10087 * C376 + C10242 * C743 + C29688 * C887) *
               C1067 -
           (C17193 + C17192) * C1183 - (C17322 + C17323) * C1068 +
           (C17199 + C17198) * C1184 + (C17324 + C17325) * C1069) *
              C6643 +
          ((C17192 + C17193) * C1182 + (C17323 + C17322) * C1067 -
           (C17198 + C17199) * C1183 - (C17325 + C17324) * C1068 +
           (C10241 * C7599 + C10087 * C7813 + C10242 * C16965 +
            C29688 * C17173) *
               C1184 +
           (C10241 * C7747 + C10087 * C7960 + C10242 * C17112 +
            C29688 * C17312) *
               C1069) *
              C29690) *
         C29499 * C29532 * C29511) /
            (p * q * std::sqrt(p + q));
    d2eezx[27] +=
        (-std::pow(Pi, 2.5) *
         ((((C6949 * C93 + C6643 * C437 + C6950 * C1072 + C29690 * C1375) *
                C625 +
            (C6949 * C101 + C6643 * C442 + C6950 * C1078 + C29690 * C1381) *
                C29511) *
               C29499 * C10087 +
           ((C16784 + C16785) * C625 + (C16786 + C16787) * C29511) * C29499 *
               C29688) *
              C29543 * C622 -
          (((C16788 + C16789) * C29511 + (C16790 + C16791) * C625) * C29499 *
               C29688 +
           ((C16787 + C16786) * C29511 + (C16785 + C16784) * C625) * C29499 *
               C10087) *
              C29543 * C623 +
          (((C16791 + C16790) * C625 + (C16789 + C16788) * C29511) * C29499 *
               C10087 +
           ((C6949 * C3619 + C6643 * C3991 + C6950 * C15493 + C29690 * C15841) *
                C625 +
            (C6949 * C3623 + C6643 * C3993 + C6950 * C15495 + C29690 * C15842) *
                C29511) *
               C29499 * C29688) *
              C29543 * C624)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C6949 * C93 + C6643 * C437 + C6950 * C1072 + C29690 * C1375) * C90 +
           (C6949 * C101 + C6643 * C442 + C6950 * C1078 + C29690 * C1381) *
               C80 -
           (C6968 + C6969) * C91 - (C6970 + C6971) * C81 +
           (C6972 + C6973) * C92 + (C6974 + C6975) * C82) *
              C29499 * C10087 +
          ((C6949 * C628 + C6643 * C931 + C6950 * C2611 + C29690 * C2947) *
               C90 +
           (C6949 * C634 + C6643 * C937 + C6950 * C2617 + C29690 * C2950) *
               C80 -
           (C8619 + C8618) * C91 - (C8621 + C8620) * C81 +
           (C6949 * C626 + C6643 * C929 + C6950 * C2613 + C29690 * C2949) *
               C92 +
           (C6949 * C632 + C6643 * C935 + C6950 * C2619 + C29690 * C2952) *
               C82) *
              C29499 * C29688) *
         C29543 * C29532) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C6949 * C93 + C6643 * C437 + C6950 * C1072 + C29690 * C1375) *
                C625 +
            (C6949 * C101 + C6643 * C442 + C6950 * C1078 + C29690 * C1381) *
                C29511) *
               C29499 * C10087 +
           ((C16784 + C16785) * C625 + (C16786 + C16787) * C29511) * C29499 *
               C29688) *
              C1067 -
          (((C6950 * C4203 + C29690 * C4525 + C6949 * C2617 + C6643 * C2950) *
                C29511 +
            (C6950 * C4199 + C29690 * C4523 + C6949 * C2611 + C6643 * C2947) *
                C625) *
               C29499 * C29688 +
           ((C6950 * C1085 + C29690 * C1382 + C6949 * C1078 + C6643 * C1381) *
                C29511 +
            (C6950 * C1073 + C29690 * C1376 + C6949 * C1072 + C6643 * C1375) *
                C625) *
               C29499 * C10087) *
              C1068 +
          (((C6949 * C1073 + C6643 * C1376 + C6950 * C7599 + C29690 * C8021) *
                C625 +
            (C6949 * C1085 + C6643 * C1382 + C6950 * C7603 + C29690 * C8023) *
                C29511) *
               C29499 * C10087 +
           ((C6949 * C4199 + C6643 * C4523 + C6950 * C16965 + C29690 * C17375) *
                C625 +
            (C6949 * C4203 + C6643 * C4525 + C6950 * C16967 + C29690 * C17376) *
                C29511) *
               C29499 * C29688) *
              C1069) *
         C29532) /
            (p * q * std::sqrt(p + q));
    d2eezy[27] +=
        (-std::pow(Pi, 2.5) *
         (((C6949 * C93 + C6643 * C437 + C6950 * C1072 + C29690 * C1375) *
               C688 +
           (C6949 * C152 + C6643 * C503 + C6950 * C1134 + C29690 * C1425) *
               C622 -
           (C16785 + C16784) * C689 - (C16850 + C16851) * C623 +
           (C16791 + C16790) * C690 + (C16852 + C16853) * C624) *
              C29499 * C10087 +
          ((C16784 + C16785) * C688 + (C16851 + C16850) * C622 -
           (C16790 + C16791) * C689 - (C16853 + C16852) * C623 +
           (C6949 * C3619 + C6643 * C3991 + C6950 * C15493 + C29690 * C15841) *
               C690 +
           (C6949 * C3701 + C6643 * C4071 + C6950 * C15563 + C29690 * C15901) *
               C624) *
              C29499 * C29688) *
         C29511 * C29543) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C6949 * C93 + C6643 * C437 + C6950 * C1072 + C29690 * C1375) *
                C151 +
            (C6949 * C152 + C6643 * C503 + C6950 * C1134 + C29690 * C1425) *
                C29532) *
               C29499 * C10087 +
           ((C6949 * C628 + C6643 * C931 + C6950 * C2611 + C29690 * C2947) *
                C151 +
            (C6949 * C693 + C6643 * C979 + C6950 * C2673 + C29690 * C3003) *
                C29532) *
               C29499 * C29688) *
              C80 -
          (((C8692 + C8693) * C29532 + (C8619 + C8618) * C151) * C29499 *
               C29688 +
           ((C7035 + C7034) * C29532 + (C6968 + C6969) * C151) * C29499 *
               C10087) *
              C81 +
          (((C6972 + C6973) * C151 + (C7037 + C7036) * C29532) * C29499 *
               C10087 +
           ((C6949 * C626 + C6643 * C929 + C6950 * C2613 + C29690 * C2949) *
                C151 +
            (C6949 * C691 + C6643 * C983 + C6950 * C2675 + C29690 * C3005) *
                C29532) *
               C29499 * C29688) *
              C82) *
         C29543) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C6949 * C93 + C6643 * C437 + C6950 * C1072 + C29690 * C1375) *
                C151 +
            (C6949 * C152 + C6643 * C503 + C6950 * C1134 + C29690 * C1425) *
                C29532) *
               C29499 * C10087 +
           ((C16784 + C16785) * C151 + (C16851 + C16850) * C29532) * C29499 *
               C29688) *
              C29511 * C1067 -
          (((C6950 * C4257 + C29690 * C4577 + C6949 * C2673 + C6643 * C3003) *
                C29532 +
            (C6950 * C4199 + C29690 * C4523 + C6949 * C2611 + C6643 * C2947) *
                C151) *
               C29499 * C29688 +
           ((C6950 * C1135 + C29690 * C1426 + C6949 * C1134 + C6643 * C1425) *
                C29532 +
            (C6950 * C1073 + C29690 * C1376 + C6949 * C1072 + C6643 * C1375) *
                C151) *
               C29499 * C10087) *
              C29511 * C1068 +
          (((C6949 * C1073 + C6643 * C1376 + C6950 * C7599 + C29690 * C8021) *
                C151 +
            (C6949 * C1135 + C6643 * C1426 + C6950 * C7681 + C29690 * C8075) *
                C29532) *
               C29499 * C10087 +
           ((C6949 * C4199 + C6643 * C4523 + C6950 * C16965 + C29690 * C17375) *
                C151 +
            (C6949 * C4257 + C6643 * C4577 + C6950 * C17043 + C29690 * C17427) *
                C29532) *
               C29499 * C29688) *
              C29511 * C1069)) /
            (p * q * std::sqrt(p + q));
    d2eezz[27] +=
        (-std::pow(Pi, 2.5) *
         ((((C6949 * C93 + C6643 * C437 + C6950 * C1072 + C29690 * C1375) *
                C200 +
            (C6949 * C201 + C6643 * C562 + C6950 * C1187 + C29690 * C1467) *
                C29543) *
               C29499 * C10087 +
           ((C16784 + C16785) * C200 + (C16912 + C16913) * C29543) * C29499 *
               C29688) *
              C622 -
          (((C16914 + C16915) * C29543 + (C16790 + C16791) * C200) * C29499 *
               C29688 +
           ((C16913 + C16912) * C29543 + (C16785 + C16784) * C200) * C29499 *
               C10087) *
              C623 +
          (((C16791 + C16790) * C200 + (C16915 + C16914) * C29543) * C29499 *
               C10087 +
           ((C6949 * C3619 + C6643 * C3991 + C6950 * C15493 + C29690 * C15841) *
                C200 +
            (C6949 * C3767 + C6643 * C4132 + C6950 * C15621 + C29690 * C15955) *
                C29543) *
               C29499 * C29688) *
              C624) *
         C29511) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C6949 * C93 + C6643 * C437 + C6950 * C1072 + C29690 * C1375) *
                C200 +
            (C6949 * C201 + C6643 * C562 + C6950 * C1187 + C29690 * C1467) *
                C29543) *
               C29499 * C10087 +
           ((C6949 * C628 + C6643 * C931 + C6950 * C2611 + C29690 * C2947) *
                C200 +
            (C6949 * C743 + C6643 * C1025 + C6950 * C2729 + C29690 * C3056) *
                C29543) *
               C29499 * C29688) *
              C29532 * C80 -
          (((C8764 + C8765) * C29543 + (C8619 + C8618) * C200) * C29499 *
               C29688 +
           ((C7097 + C7096) * C29543 + (C6968 + C6969) * C200) * C29499 *
               C10087) *
              C29532 * C81 +
          (((C6972 + C6973) * C200 + (C7099 + C7098) * C29543) * C29499 *
               C10087 +
           ((C6949 * C626 + C6643 * C929 + C6950 * C2613 + C29690 * C2949) *
                C200 +
            (C6949 * C741 + C6643 * C1023 + C6950 * C2731 + C29690 * C3058) *
                C29543) *
               C29499 * C29688) *
              C29532 * C82)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C6949 * C93 + C6643 * C437 + C6950 * C1072 + C29690 * C1375) *
               C1182 +
           (C6949 * C201 + C6643 * C562 + C6950 * C1187 + C29690 * C1467) *
               C1067 -
           (C6950 * C1073 + C29690 * C1376 + C6949 * C1072 + C6643 * C1375) *
               C1183 -
           (C6950 * C1188 + C29690 * C1468 + C6949 * C1187 + C6643 * C1467) *
               C1068 +
           (C6949 * C1073 + C6643 * C1376 + C6950 * C7599 + C29690 * C8021) *
               C1184 +
           (C6949 * C1188 + C6643 * C1468 + C6950 * C7747 + C29690 * C8127) *
               C1069) *
              C29499 * C10087 +
          ((C16784 + C16785) * C1182 + (C16912 + C16913) * C1067 -
           (C6950 * C4199 + C29690 * C4523 + C6949 * C2611 + C6643 * C2947) *
               C1183 -
           (C6950 * C4311 + C29690 * C4629 + C6949 * C2729 + C6643 * C3056) *
               C1068 +
           (C6949 * C4199 + C6643 * C4523 + C6950 * C16965 + C29690 * C17375) *
               C1184 +
           (C6949 * C4311 + C6643 * C4629 + C6950 * C17112 + C29690 * C17478) *
               C1069) *
              C29499 * C29688) *
         C29532 * C29511) /
            (p * q * std::sqrt(p + q));
    d2eexx[28] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C13409 * C93 + C29499 * C98) * C1527 +
                       (C13409 * C101 + C29499 * C108) * C1523 -
                       (C13409 * C94 + C29499 * C99) * C1528 -
                       (C13409 * C102 + C29499 * C109) * C1524) *
                          C10087 +
                      (C14554 + C14555 - C14570 - C14571) * C29688) *
                         C6643 +
                     ((C18158 + C18159 - C18166 - C18167) * C10087 +
                      (C17546 + C17547 - C17554 - C17555) * C29688) *
                         C29690) *
                        C2069 +
                    (((C18166 - (C18159 + C18158) + C18167) * C10087 +
                      (C17554 - (C17547 + C17546) + C17555) * C29688) *
                         C6643 +
                     (((C13409 * C1074 + C29499 * C1083) * C1528 -
                       (C16986 * C1523 + C16987 * C1527) +
                       (C13409 * C1086 + C29499 * C1092) * C1524) *
                          C10087 +
                      ((C13409 * C4200 + C29499 * C4202) * C1528 -
                       (C16984 * C1523 + C16985 * C1527) +
                       (C13409 * C4204 + C29499 * C4206) * C1524) *
                          C29688) *
                         C29690) *
                        C2070) *
                   C29532) /
                  (p * q * std::sqrt(p + q));
    d2eexy[28] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C13409 * C93 + C29499 * C98) * C151 +
              (C13409 * C152 + C29499 * C157) * C29532) *
                 C10087 +
             (C13772 * C151 + C13831 * C29532) * C29688) *
                C6643 +
            ((C17046 + C17060) * C10087 + (C17049 + C17050) * C29688) *
                C29690) *
               C1523 -
           (((C18234 + C18235) * C29688 + (C18240 + C18238) * C10087) * C29690 +
            ((C14628 * C29532 + C14566 * C151) * C29688 +
             ((C13409 * C153 + C29499 * C158) * C29532 +
              (C13409 * C94 + C29499 * C99) * C151) *
                 C10087) *
                C6643) *
               C1524) *
              C2069 +
          ((((C18238 + C18240) * C10087 + (C18235 + C18234) * C29688) * C6643 +
            (((C13409 * C1074 + C29499 * C1083) * C151 +
              (C13409 * C1136 + C29499 * C1142) * C29532) *
                 C10087 +
             ((C13409 * C4200 + C29499 * C4202) * C151 +
              (C13409 * C4258 + C29499 * C4260) * C29532) *
                 C29688) *
                C29690) *
               C1524 -
           (((C17061 + C17053) * C29688 + (C17062 + C17056) * C10087) * C29690 +
            ((C17050 + C17049) * C29688 + (C17060 + C17046) * C10087) * C6643) *
               C1523) *
              C2070)) /
        (p * q * std::sqrt(p + q));
    d2eexz[28] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C13409 * C93 + C29499 * C98) * C2177 +
                       (C13409 * C201 + C29499 * C206) * C2069 -
                       C16982 * C2178 - C17121 * C2070) *
                          C10087 +
                      (C15624 + C15625 - C15626 - C15636) * C29688) *
                         C6643 +
                     ((C16982 * C2177 + C17121 * C2069 - C16987 * C2178 -
                       C17122 * C2070) *
                          C10087 +
                      (C15509 * C2177 + C15634 * C2069 - C16985 * C2178 -
                       C17123 * C2070) *
                          C29688) *
                         C29690) *
                        C29532 * C1523 +
                    (((C18164 * C2178 -
                       ((C13409 * C202 + C29499 * C207) * C2069 +
                        (C13409 * C94 + C29499 * C99) * C2177) +
                       C18309 * C2070) *
                          C10087 +
                      (C17552 * C2178 - (C14686 * C2069 + C14566 * C2177) +
                       C17694 * C2070) *
                          C29688) *
                         C6643 +
                     (((C13409 * C1074 + C29499 * C1083) * C2178 -
                       (C18309 * C2069 + C18164 * C2177) +
                       (C13409 * C1189 + C29499 * C1195) * C2070) *
                          C10087 +
                      ((C13409 * C4200 + C29499 * C4202) * C2178 -
                       (C17694 * C2069 + C17552 * C2177) +
                       (C13409 * C4312 + C29499 * C4314) * C2070) *
                          C29688) *
                         C29690) *
                        C29532 * C1524)) /
                  (p * q * std::sqrt(p + q));
    d2eeyx[28] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C10241 * C93 + C10087 * C250 + C10242 * C628 + C29688 * C793) *
                C1527 +
            (C10241 * C101 + C10087 * C255 + C10242 * C634 + C29688 * C799) *
                C1523 -
            (C10260 + C10261) * C1528 - (C10262 + C10263) * C1524) *
               C6643 +
           ((C17192 + C17193) * C1527 + (C17194 + C17195) * C1523 -
            (C12405 + C12404) * C1528 - (C12407 + C12406) * C1524) *
               C29690) *
              C29499 * C2069 +
          (((C12404 + C12405) * C1528 -
            ((C17195 + C17194) * C1523 + (C17193 + C17192) * C1527) +
            (C12406 + C12407) * C1524) *
               C6643 +
           ((C10241 * C1074 + C10087 * C1239 + C10242 * C4200 +
             C29688 * C4366) *
                C1528 -
            ((C17196 + C17197) * C1523 + (C17198 + C17199) * C1527) +
            (C10241 * C1086 + C10087 * C1245 + C10242 * C4204 +
             C29688 * C4368) *
                C1524) *
               C29690) *
              C29499 * C2070) *
         C29532) /
        (p * q * std::sqrt(p + q));
    d2eeyy[28] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C10241 * C93 + C10087 * C250 + C10242 * C628 + C29688 * C793) *
                 C151 +
             (C10241 * C152 + C10087 * C316 + C10242 * C693 + C29688 * C841) *
                 C29532) *
                C6643 +
            ((C17192 + C17193) * C151 + (C17259 + C17260) * C29532) * C29690) *
               C29499 * C1523 -
           (((C12479 + C12478) * C29532 + (C12405 + C12404) * C151) * C29690 +
            ((C10327 + C10326) * C29532 + (C10260 + C10261) * C151) * C6643) *
               C29499 * C1524) *
              C2069 +
          ((((C12404 + C12405) * C151 + (C12478 + C12479) * C29532) * C6643 +
            ((C10241 * C1074 + C10087 * C1239 + C10242 * C4200 +
              C29688 * C4366) *
                 C151 +
             (C10241 * C1136 + C10087 * C1289 + C10242 * C4258 +
              C29688 * C4420) *
                 C29532) *
                C29690) *
               C29499 * C1524 -
           (((C17261 + C17262) * C29532 + (C17198 + C17199) * C151) * C29690 +
            ((C17260 + C17259) * C29532 + (C17193 + C17192) * C151) * C6643) *
               C29499 * C1523) *
              C2070)) /
        (p * q * std::sqrt(p + q));
    d2eeyz[28] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C10241 * C93 + C10087 * C250 + C10242 * C628 + C29688 * C793) *
                C2177 +
            (C10241 * C201 + C10087 * C376 + C10242 * C743 + C29688 * C887) *
                C2069 -
            (C17193 + C17192) * C2178 - (C17322 + C17323) * C2070) *
               C6643 +
           ((C17192 + C17193) * C2177 + (C17323 + C17322) * C2069 -
            (C17198 + C17199) * C2178 - (C17325 + C17324) * C2070) *
               C29690) *
              C29499 * C29532 * C1523 +
          (((C12404 + C12405) * C2178 -
            ((C10389 + C10388) * C2069 + (C10260 + C10261) * C2177) +
            (C12551 + C12550) * C2070) *
               C6643 +
           ((C10241 * C1074 + C10087 * C1239 + C10242 * C4200 +
             C29688 * C4366) *
                C2178 -
            ((C12550 + C12551) * C2069 + (C12405 + C12404) * C2177) +
            (C10241 * C1189 + C10087 * C1332 + C10242 * C4312 +
             C29688 * C4472) *
                C2070) *
               C29690) *
              C29499 * C29532 * C1524)) /
        (p * q * std::sqrt(p + q));
    d2eezx[28] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C6949 * C93 + C6643 * C437 + C6950 * C1072 + C29690 * C1375) *
                C1527 +
            (C6949 * C101 + C6643 * C442 + C6950 * C1078 + C29690 * C1381) *
                C1523 -
            (C6968 + C6969) * C1528 - (C6970 + C6971) * C1524) *
               C29499 * C10087 +
           ((C16784 + C16785) * C1527 + (C16786 + C16787) * C1523 -
            (C8619 + C8618) * C1528 - (C8621 + C8620) * C1524) *
               C29499 * C29688) *
              C2069 +
          (((C9274 + C9275) * C1528 -
            ((C6950 * C1085 + C29690 * C1382 + C6949 * C1078 + C6643 * C1381) *
                 C1523 +
             (C6950 * C1073 + C29690 * C1376 + C6949 * C1072 + C6643 * C1375) *
                 C1527) +
            (C9276 + C9277) * C1524) *
               C29499 * C10087 +
           ((C6949 * C2612 + C6643 * C2948 + C6950 * C4200 + C29690 * C4524) *
                C1528 -
            ((C6950 * C4203 + C29690 * C4525 + C6949 * C2617 + C6643 * C2950) *
                 C1523 +
             (C6950 * C4199 + C29690 * C4523 + C6949 * C2611 + C6643 * C2947) *
                 C1527) +
            (C6949 * C2618 + C6643 * C2951 + C6950 * C4204 + C29690 * C4526) *
                C1524) *
               C29499 * C29688) *
              C2070) *
         C29532) /
        (p * q * std::sqrt(p + q));
    d2eezy[28] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C6949 * C93 + C6643 * C437 + C6950 * C1072 + C29690 * C1375) *
                 C151 +
             (C6949 * C152 + C6643 * C503 + C6950 * C1134 + C29690 * C1425) *
                 C29532) *
                C29499 * C10087 +
            ((C16784 + C16785) * C151 + (C16851 + C16850) * C29532) * C29499 *
                C29688) *
               C1523 -
           (((C8692 + C8693) * C29532 + (C8619 + C8618) * C151) * C29499 *
                C29688 +
            ((C7035 + C7034) * C29532 + (C6968 + C6969) * C151) * C29499 *
                C10087) *
               C1524) *
              C2069 +
          ((((C9274 + C9275) * C151 + (C9348 + C9349) * C29532) * C29499 *
                C10087 +
            ((C6949 * C2612 + C6643 * C2948 + C6950 * C4200 + C29690 * C4524) *
                 C151 +
             (C6949 * C2674 + C6643 * C3004 + C6950 * C4258 + C29690 * C4578) *
                 C29532) *
                C29499 * C29688) *
               C1524 -
           (((C6950 * C4257 + C29690 * C4577 + C6949 * C2673 + C6643 * C3003) *
                 C29532 +
             (C6950 * C4199 + C29690 * C4523 + C6949 * C2611 + C6643 * C2947) *
                 C151) *
                C29499 * C29688 +
            ((C6950 * C1135 + C29690 * C1426 + C6949 * C1134 + C6643 * C1425) *
                 C29532 +
             (C6950 * C1073 + C29690 * C1376 + C6949 * C1072 + C6643 * C1375) *
                 C151) *
                C29499 * C10087) *
               C1523) *
              C2070)) /
        (p * q * std::sqrt(p + q));
    d2eezz[28] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C6949 * C93 + C6643 * C437 + C6950 * C1072 + C29690 * C1375) *
                C2177 +
            (C6949 * C201 + C6643 * C562 + C6950 * C1187 + C29690 * C1467) *
                C2069 -
            (C6950 * C1073 + C29690 * C1376 + C6949 * C1072 + C6643 * C1375) *
                C2178 -
            (C6950 * C1188 + C29690 * C1468 + C6949 * C1187 + C6643 * C1467) *
                C2070) *
               C29499 * C10087 +
           ((C16784 + C16785) * C2177 + (C16912 + C16913) * C2069 -
            (C6950 * C4199 + C29690 * C4523 + C6949 * C2611 + C6643 * C2947) *
                C2178 -
            (C6950 * C4311 + C29690 * C4629 + C6949 * C2729 + C6643 * C3056) *
                C2070) *
               C29499 * C29688) *
              C29532 * C1523 +
          (((C9274 + C9275) * C2178 -
            ((C7097 + C7096) * C2069 + (C6968 + C6969) * C2177) +
            (C9421 + C9420) * C2070) *
               C29499 * C10087 +
           ((C6949 * C2612 + C6643 * C2948 + C6950 * C4200 + C29690 * C4524) *
                C2178 -
            ((C8764 + C8765) * C2069 + (C8619 + C8618) * C2177) +
            (C6949 * C2730 + C6643 * C3057 + C6950 * C4312 + C29690 * C4630) *
                C2070) *
               C29499 * C29688) *
              C29532 * C1524)) /
        (p * q * std::sqrt(p + q));
    d2eexx[29] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13409 * C93 + C29499 * C98) * C90 +
            (C13409 * C101 + C29499 * C108) * C80 -
            (C13409 * C94 + C29499 * C99) * C91 -
            (C13409 * C102 + C29499 * C109) * C81 +
            (C13409 * C95 + C29499 * C100) * C92 +
            (C13409 * C103 + C29499 * C110) * C82) *
               C10087 +
           (C13772 * C90 + C13773 * C80 - C14566 * C91 - C14567 * C81 +
            (C13409 * C626 + C29499 * C635) * C92 +
            (C13409 * C632 + C29499 * C644) * C82) *
               C29688) *
              C6643 +
          (((C13409 * C1072 + C29499 * C1081) * C90 +
            (C13409 * C1078 + C29499 * C1090) * C80 -
            (C13409 * C1071 + C29499 * C1080) * C91 -
            (C13409 * C1077 + C29499 * C1089) * C81 +
            (C13409 * C1070 + C29499 * C1079) * C92 +
            (C13409 * C1076 + C29499 * C1088) * C82) *
               C10087 +
           (C15509 * C90 + C15508 * C80 -
            (C13409 * C2612 + C29499 * C2615) * C91 -
            (C13409 * C2618 + C29499 * C2621) * C81 +
            (C13409 * C2613 + C29499 * C2616) * C92 +
            (C13409 * C2619 + C29499 * C2622) * C82) *
               C29688) *
              C29690) *
         C29543 * C29532) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13409 * C93 + C29499 * C98) * C625 +
             (C13409 * C101 + C29499 * C108) * C29511) *
                C10087 +
            (C13778 + C13779) * C29688) *
               C6643 +
           (((C13409 * C1072 + C29499 * C1081) * C625 +
             (C13409 * C1078 + C29499 * C1090) * C29511) *
                C10087 +
            (C15513 + C15512) * C29688) *
               C29690) *
              C29543 * C622 -
          (((C15510 + C15511) * C29688 + (C15512 + C15513) * C10087) * C29690 +
           ((C13781 + C13780) * C29688 + (C13779 + C13778) * C10087) * C6643) *
              C29543 * C623 +
          ((C13784 * C10087 + (C13783 + C13782) * C29688) * C6643 +
           ((C15511 + C15510) * C10087 +
            ((C13409 * C15493 + C29499 * C15494) * C625 +
             (C13409 * C15495 + C29499 * C15496) * C29511) *
                C29688) *
               C29690) *
              C29543 * C624)) /
            (p * q * std::sqrt(p + q));
    d2eexy[29] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13409 * C93 + C29499 * C98) * C151 +
             (C13409 * C152 + C29499 * C157) * C29532) *
                C10087 +
            (C13772 * C151 + C13831 * C29532) * C29688) *
               C6643 +
           (((C13409 * C1072 + C29499 * C1081) * C151 +
             (C13409 * C1134 + C29499 * C1140) * C29532) *
                C10087 +
            (C15509 * C151 + C15570 * C29532) * C29688) *
               C29690) *
              C80 -
          ((((C13409 * C2674 + C29499 * C2677) * C29532 +
             (C13409 * C2612 + C29499 * C2615) * C151) *
                C29688 +
            ((C13409 * C1133 + C29499 * C1139) * C29532 +
             (C13409 * C1071 + C29499 * C1080) * C151) *
                C10087) *
               C29690 +
           ((C14628 * C29532 + C14566 * C151) * C29688 +
            ((C13409 * C153 + C29499 * C158) * C29532 +
             (C13409 * C94 + C29499 * C99) * C151) *
                C10087) *
               C6643) *
              C81 +
          ((((C13409 * C95 + C29499 * C100) * C151 +
             (C13409 * C154 + C29499 * C159) * C29532) *
                C10087 +
            ((C13409 * C626 + C29499 * C635) * C151 +
             (C13409 * C691 + C29499 * C697) * C29532) *
                C29688) *
               C6643 +
           (((C13409 * C1070 + C29499 * C1079) * C151 +
             (C13409 * C1132 + C29499 * C1138) * C29532) *
                C10087 +
            ((C13409 * C2613 + C29499 * C2616) * C151 +
             (C13409 * C2675 + C29499 * C2678) * C29532) *
                C29688) *
               C29690) *
              C82) *
         C29543) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13409 * C93 + C29499 * C98) * C688 +
            (C13409 * C152 + C29499 * C157) * C622 - C13772 * C689 -
            C13831 * C623 + C13774 * C690 + C13832 * C624) *
               C10087 +
           (C13772 * C688 + C13831 * C622 - C13774 * C689 - C13832 * C623 +
            C13777 * C690 + C13833 * C624) *
               C29688) *
              C6643 +
          (((C13409 * C1072 + C29499 * C1081) * C688 +
            (C13409 * C1134 + C29499 * C1140) * C622 - C15509 * C689 -
            C15570 * C623 + C15507 * C690 + C15571 * C624) *
               C10087 +
           (C15509 * C688 + C15570 * C622 - C15507 * C689 - C15571 * C623 +
            (C13409 * C15493 + C29499 * C15494) * C690 +
            (C13409 * C15563 + C29499 * C15564) * C624) *
               C29688) *
              C29690) *
         C29511 * C29543) /
            (p * q * std::sqrt(p + q));
    d2eexz[29] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13409 * C93 + C29499 * C98) * C200 +
             (C13409 * C201 + C29499 * C206) * C29543) *
                C10087 +
            (C13874 + C13886) * C29688) *
               C6643 +
           (((C13409 * C1072 + C29499 * C1081) * C200 +
             (C13409 * C1187 + C29499 * C1193) * C29543) *
                C10087 +
            (C15509 * C200 + C15634 * C29543) * C29688) *
               C29690) *
              C29532 * C80 -
          ((((C13409 * C2730 + C29499 * C2733) * C29543 +
             (C13409 * C2612 + C29499 * C2615) * C200) *
                C29688 +
            ((C13409 * C1186 + C29499 * C1192) * C29543 +
             (C13409 * C1071 + C29499 * C1080) * C200) *
                C10087) *
               C29690 +
           ((C14688 + C14680) * C29688 +
            ((C13409 * C202 + C29499 * C207) * C29543 +
             (C13409 * C94 + C29499 * C99) * C200) *
                C10087) *
               C6643) *
              C29532 * C81 +
          ((((C13409 * C95 + C29499 * C100) * C200 +
             (C13409 * C203 + C29499 * C208) * C29543) *
                C10087 +
            ((C13409 * C626 + C29499 * C635) * C200 +
             (C13409 * C741 + C29499 * C747) * C29543) *
                C29688) *
               C6643 +
           (((C13409 * C1070 + C29499 * C1079) * C200 +
             (C13409 * C1185 + C29499 * C1191) * C29543) *
                C10087 +
            ((C13409 * C2613 + C29499 * C2616) * C200 +
             (C13409 * C2731 + C29499 * C2734) * C29543) *
                C29688) *
               C29690) *
              C29532 * C82)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13409 * C93 + C29499 * C98) * C200 +
             (C13409 * C201 + C29499 * C206) * C29543) *
                C10087 +
            (C13874 + C13886) * C29688) *
               C6643 +
           (((C13409 * C1072 + C29499 * C1081) * C200 +
             (C13409 * C1187 + C29499 * C1193) * C29543) *
                C10087 +
            (C16564 + C16565) * C29688) *
               C29690) *
              C622 -
          (((C16566 + C16567) * C29688 + (C16565 + C16564) * C10087) * C29690 +
           ((C13887 + C13877) * C29688 + (C13886 + C13874) * C10087) * C6643) *
              C623 +
          ((C13889 * C10087 + (C13882 + C13888) * C29688) * C6643 +
           ((C16567 + C16566) * C10087 +
            ((C13409 * C15493 + C29499 * C15494) * C200 +
             (C13409 * C15621 + C29499 * C15622) * C29543) *
                C29688) *
               C29690) *
              C624) *
         C29511) /
            (p * q * std::sqrt(p + q));
    d2eeyx[29] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C10241 * C93 + C10087 * C250 + C10242 * C628 + C29688 * C793) *
               C90 +
           (C10241 * C101 + C10087 * C255 + C10242 * C634 + C29688 * C799) *
               C80 -
           (C10260 + C10261) * C91 - (C10262 + C10263) * C81 +
           (C10264 + C10265) * C92 + (C10266 + C10267) * C82) *
              C6643 +
          ((C10241 * C1072 + C10087 * C1237 + C10242 * C2611 + C29688 * C2785) *
               C90 +
           (C10241 * C1078 + C10087 * C1243 + C10242 * C2617 + C29688 * C2788) *
               C80 -
           (C12405 + C12404) * C91 - (C12407 + C12406) * C81 +
           (C10241 * C1070 + C10087 * C1235 + C10242 * C2613 + C29688 * C2787) *
               C92 +
           (C10241 * C1076 + C10087 * C1241 + C10242 * C2619 + C29688 * C2790) *
               C82) *
              C29690) *
         C29499 * C29543 * C29532) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10241 * C93 + C10087 * C250 + C10242 * C628 + C29688 * C793) *
                C625 +
            (C10241 * C101 + C10087 * C255 + C10242 * C634 + C29688 * C799) *
                C29511) *
               C6643 +
           ((C10241 * C1072 + C10087 * C1237 + C10242 * C2611 +
             C29688 * C2785) *
                C625 +
            (C10241 * C1078 + C10087 * C1243 + C10242 * C2617 +
             C29688 * C2788) *
                C29511) *
               C29690) *
              C29499 * C29543 * C622 -
          (((C10242 * C5993 + C29688 * C6229 + C10241 * C2617 +
             C10087 * C2788) *
                C29511 +
            (C10242 * C5989 + C29688 * C6227 + C10241 * C2611 +
             C10087 * C2785) *
                C625) *
               C29690 +
           ((C10242 * C641 + C29688 * C800 + C10241 * C634 + C10087 * C799) *
                C29511 +
            (C10242 * C629 + C29688 * C794 + C10241 * C628 + C10087 * C793) *
                C625) *
               C6643) *
              C29499 * C29543 * C623 +
          (((C10241 * C629 + C10087 * C794 + C10242 * C3619 + C29688 * C3833) *
                C625 +
            (C10241 * C641 + C10087 * C800 + C10242 * C3623 + C29688 * C3835) *
                C29511) *
               C6643 +
           ((C10241 * C5989 + C10087 * C6227 + C10242 * C15493 +
             C29688 * C15687) *
                C625 +
            (C10241 * C5993 + C10087 * C6229 + C10242 * C15495 +
             C29688 * C15688) *
                C29511) *
               C29690) *
              C29499 * C29543 * C624)) /
            (p * q * std::sqrt(p + q));
    d2eeyy[29] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10241 * C93 + C10087 * C250 + C10242 * C628 + C29688 * C793) *
                C151 +
            (C10241 * C152 + C10087 * C316 + C10242 * C693 + C29688 * C841) *
                C29532) *
               C6643 +
           ((C10241 * C1072 + C10087 * C1237 + C10242 * C2611 +
             C29688 * C2785) *
                C151 +
            (C10241 * C1134 + C10087 * C1287 + C10242 * C2673 +
             C29688 * C2841) *
                C29532) *
               C29690) *
              C29499 * C80 -
          (((C12479 + C12478) * C29532 + (C12405 + C12404) * C151) * C29690 +
           ((C10327 + C10326) * C29532 + (C10260 + C10261) * C151) * C6643) *
              C29499 * C81 +
          (((C10264 + C10265) * C151 + (C10329 + C10328) * C29532) * C6643 +
           ((C10241 * C1070 + C10087 * C1235 + C10242 * C2613 +
             C29688 * C2787) *
                C151 +
            (C10241 * C1132 + C10087 * C1285 + C10242 * C2675 +
             C29688 * C2843) *
                C29532) *
               C29690) *
              C29499 * C82) *
         C29543) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C10241 * C93 + C10087 * C250 + C10242 * C628 + C29688 * C793) *
               C688 +
           (C10241 * C152 + C10087 * C316 + C10242 * C693 + C29688 * C841) *
               C622 -
           (C10242 * C629 + C29688 * C794 + C10241 * C628 + C10087 * C793) *
               C689 -
           (C10242 * C694 + C29688 * C842 + C10241 * C693 + C10087 * C841) *
               C623 +
           (C10241 * C629 + C10087 * C794 + C10242 * C3619 + C29688 * C3833) *
               C690 +
           (C10241 * C694 + C10087 * C842 + C10242 * C3701 + C29688 * C3887) *
               C624) *
              C6643 +
          ((C10241 * C1072 + C10087 * C1237 + C10242 * C2611 + C29688 * C2785) *
               C688 +
           (C10241 * C1134 + C10087 * C1287 + C10242 * C2673 + C29688 * C2841) *
               C622 -
           (C10242 * C5989 + C29688 * C6227 + C10241 * C2611 + C10087 * C2785) *
               C689 -
           (C10242 * C6075 + C29688 * C6297 + C10241 * C2673 + C10087 * C2841) *
               C623 +
           (C10241 * C5989 + C10087 * C6227 + C10242 * C15493 +
            C29688 * C15687) *
               C690 +
           (C10241 * C6075 + C10087 * C6297 + C10242 * C15563 +
            C29688 * C15739) *
               C624) *
              C29690) *
         C29499 * C29511 * C29543) /
            (p * q * std::sqrt(p + q));
    d2eeyz[29] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10241 * C93 + C10087 * C250 + C10242 * C628 + C29688 * C793) *
                C200 +
            (C10241 * C201 + C10087 * C376 + C10242 * C743 + C29688 * C887) *
                C29543) *
               C6643 +
           ((C10241 * C1072 + C10087 * C1237 + C10242 * C2611 +
             C29688 * C2785) *
                C200 +
            (C10241 * C1187 + C10087 * C1329 + C10242 * C2729 +
             C29688 * C2894) *
                C29543) *
               C29690) *
              C29499 * C29532 * C80 -
          (((C12550 + C12551) * C29543 + (C12405 + C12404) * C200) * C29690 +
           ((C10389 + C10388) * C29543 + (C10260 + C10261) * C200) * C6643) *
              C29499 * C29532 * C81 +
          (((C10264 + C10265) * C200 + (C10391 + C10390) * C29543) * C6643 +
           ((C10241 * C1070 + C10087 * C1235 + C10242 * C2613 +
             C29688 * C2787) *
                C200 +
            (C10241 * C1185 + C10087 * C1333 + C10242 * C2731 +
             C29688 * C2896) *
                C29543) *
               C29690) *
              C29499 * C29532 * C82)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10241 * C93 + C10087 * C250 + C10242 * C628 + C29688 * C793) *
                C200 +
            (C10241 * C201 + C10087 * C376 + C10242 * C743 + C29688 * C887) *
                C29543) *
               C6643 +
           ((C10241 * C1072 + C10087 * C1237 + C10242 * C2611 +
             C29688 * C2785) *
                C200 +
            (C10241 * C1187 + C10087 * C1329 + C10242 * C2729 +
             C29688 * C2894) *
                C29543) *
               C29690) *
              C29499 * C622 -
          (((C10242 * C6151 + C29688 * C6365 + C10241 * C2729 +
             C10087 * C2894) *
                C29543 +
            (C10242 * C5989 + C29688 * C6227 + C10241 * C2611 +
             C10087 * C2785) *
                C200) *
               C29690 +
           ((C10242 * C744 + C29688 * C888 + C10241 * C743 + C10087 * C887) *
                C29543 +
            (C10242 * C629 + C29688 * C794 + C10241 * C628 + C10087 * C793) *
                C200) *
               C6643) *
              C29499 * C623 +
          (((C10241 * C629 + C10087 * C794 + C10242 * C3619 + C29688 * C3833) *
                C200 +
            (C10241 * C744 + C10087 * C888 + C10242 * C3767 + C29688 * C3939) *
                C29543) *
               C6643 +
           ((C10241 * C5989 + C10087 * C6227 + C10242 * C15493 +
             C29688 * C15687) *
                C200 +
            (C10241 * C6151 + C10087 * C6365 + C10242 * C15621 +
             C29688 * C15790) *
                C29543) *
               C29690) *
              C29499 * C624) *
         C29511) /
            (p * q * std::sqrt(p + q));
    d2eezx[29] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C6949 * C93 + C6643 * C437 + C6950 * C1072 + C29690 * C1375) * C90 +
           (C6949 * C101 + C6643 * C442 + C6950 * C1078 + C29690 * C1381) *
               C80 -
           (C6968 + C6969) * C91 - (C6970 + C6971) * C81 +
           (C6972 + C6973) * C92 + (C6974 + C6975) * C82) *
              C29499 * C10087 +
          ((C6949 * C628 + C6643 * C931 + C6950 * C2611 + C29690 * C2947) *
               C90 +
           (C6949 * C634 + C6643 * C937 + C6950 * C2617 + C29690 * C2950) *
               C80 -
           (C8619 + C8618) * C91 - (C8621 + C8620) * C81 +
           (C6949 * C626 + C6643 * C929 + C6950 * C2613 + C29690 * C2949) *
               C92 +
           (C6949 * C632 + C6643 * C935 + C6950 * C2619 + C29690 * C2952) *
               C82) *
              C29499 * C29688) *
         C29543 * C29532) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6949 * C93 + C6643 * C437 + C6950 * C1072 + C29690 * C1375) *
                C625 +
            (C6949 * C101 + C6643 * C442 + C6950 * C1078 + C29690 * C1381) *
                C29511) *
               C29499 * C10087 +
           ((C16784 + C16785) * C625 + (C16786 + C16787) * C29511) * C29499 *
               C29688) *
              C29543 * C622 -
          (((C16788 + C16789) * C29511 + (C16790 + C16791) * C625) * C29499 *
               C29688 +
           ((C16787 + C16786) * C29511 + (C16785 + C16784) * C625) * C29499 *
               C10087) *
              C29543 * C623 +
          (((C16791 + C16790) * C625 + (C16789 + C16788) * C29511) * C29499 *
               C10087 +
           ((C6949 * C3619 + C6643 * C3991 + C6950 * C15493 + C29690 * C15841) *
                C625 +
            (C6949 * C3623 + C6643 * C3993 + C6950 * C15495 + C29690 * C15842) *
                C29511) *
               C29499 * C29688) *
              C29543 * C624)) /
            (p * q * std::sqrt(p + q));
    d2eezy[29] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6949 * C93 + C6643 * C437 + C6950 * C1072 + C29690 * C1375) *
                C151 +
            (C6949 * C152 + C6643 * C503 + C6950 * C1134 + C29690 * C1425) *
                C29532) *
               C29499 * C10087 +
           ((C6949 * C628 + C6643 * C931 + C6950 * C2611 + C29690 * C2947) *
                C151 +
            (C6949 * C693 + C6643 * C979 + C6950 * C2673 + C29690 * C3003) *
                C29532) *
               C29499 * C29688) *
              C80 -
          (((C8692 + C8693) * C29532 + (C8619 + C8618) * C151) * C29499 *
               C29688 +
           ((C7035 + C7034) * C29532 + (C6968 + C6969) * C151) * C29499 *
               C10087) *
              C81 +
          (((C6972 + C6973) * C151 + (C7037 + C7036) * C29532) * C29499 *
               C10087 +
           ((C6949 * C626 + C6643 * C929 + C6950 * C2613 + C29690 * C2949) *
                C151 +
            (C6949 * C691 + C6643 * C983 + C6950 * C2675 + C29690 * C3005) *
                C29532) *
               C29499 * C29688) *
              C82) *
         C29543) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C6949 * C93 + C6643 * C437 + C6950 * C1072 + C29690 * C1375) *
               C688 +
           (C6949 * C152 + C6643 * C503 + C6950 * C1134 + C29690 * C1425) *
               C622 -
           (C16785 + C16784) * C689 - (C16850 + C16851) * C623 +
           (C16791 + C16790) * C690 + (C16852 + C16853) * C624) *
              C29499 * C10087 +
          ((C16784 + C16785) * C688 + (C16851 + C16850) * C622 -
           (C16790 + C16791) * C689 - (C16853 + C16852) * C623 +
           (C6949 * C3619 + C6643 * C3991 + C6950 * C15493 + C29690 * C15841) *
               C690 +
           (C6949 * C3701 + C6643 * C4071 + C6950 * C15563 + C29690 * C15901) *
               C624) *
              C29499 * C29688) *
         C29511 * C29543) /
            (p * q * std::sqrt(p + q));
    d2eezz[29] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6949 * C93 + C6643 * C437 + C6950 * C1072 + C29690 * C1375) *
                C200 +
            (C6949 * C201 + C6643 * C562 + C6950 * C1187 + C29690 * C1467) *
                C29543) *
               C29499 * C10087 +
           ((C6949 * C628 + C6643 * C931 + C6950 * C2611 + C29690 * C2947) *
                C200 +
            (C6949 * C743 + C6643 * C1025 + C6950 * C2729 + C29690 * C3056) *
                C29543) *
               C29499 * C29688) *
              C29532 * C80 -
          (((C8764 + C8765) * C29543 + (C8619 + C8618) * C200) * C29499 *
               C29688 +
           ((C7097 + C7096) * C29543 + (C6968 + C6969) * C200) * C29499 *
               C10087) *
              C29532 * C81 +
          (((C6972 + C6973) * C200 + (C7099 + C7098) * C29543) * C29499 *
               C10087 +
           ((C6949 * C626 + C6643 * C929 + C6950 * C2613 + C29690 * C2949) *
                C200 +
            (C6949 * C741 + C6643 * C1023 + C6950 * C2731 + C29690 * C3058) *
                C29543) *
               C29499 * C29688) *
              C29532 * C82)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6949 * C93 + C6643 * C437 + C6950 * C1072 + C29690 * C1375) *
                C200 +
            (C6949 * C201 + C6643 * C562 + C6950 * C1187 + C29690 * C1467) *
                C29543) *
               C29499 * C10087 +
           ((C16784 + C16785) * C200 + (C16912 + C16913) * C29543) * C29499 *
               C29688) *
              C622 -
          (((C16914 + C16915) * C29543 + (C16790 + C16791) * C200) * C29499 *
               C29688 +
           ((C16913 + C16912) * C29543 + (C16785 + C16784) * C200) * C29499 *
               C10087) *
              C623 +
          (((C16791 + C16790) * C200 + (C16915 + C16914) * C29543) * C29499 *
               C10087 +
           ((C6949 * C3619 + C6643 * C3991 + C6950 * C15493 + C29690 * C15841) *
                C200 +
            (C6949 * C3767 + C6643 * C4132 + C6950 * C15621 + C29690 * C15955) *
                C29543) *
               C29499 * C29688) *
              C624) *
         C29511) /
            (p * q * std::sqrt(p + q));
    d2eexx[30] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C10089 * C93 + C10085 * C98 + C10090 * C94 + C29683 * C99) *
                C1527 +
            (C10089 * C101 + C10085 * C108 + C10090 * C102 + C29683 * C109) *
                C1523 -
            (C10090 * C95 + C29683 * C100 + C10089 * C94 + C10085 * C99) *
                C1528 -
            (C10090 * C103 + C29683 * C110 + C10089 * C102 + C10085 * C109) *
                C1524) *
               C29588 * C19411 +
           ((C20380 + C20381) * C1527 + (C20382 + C20383) * C1523 -
            (C10090 * C1070 + C29683 * C1079 + C10089 * C1071 +
             C10085 * C1080) *
                C1528 -
            (C10090 * C1076 + C29683 * C1088 + C10089 * C1077 +
             C10085 * C1089) *
                C1524) *
               C29588 * C29690) *
              C29543 * C1525 +
          (((C11565 + C11564) * C1528 -
            ((C10611 + C10610) * C1523 + (C10609 + C10608) * C1527) +
            (C11567 + C11566) * C1524) *
               C29588 * C19411 +
           ((C10089 * C2612 + C10085 * C2615 + C10090 * C2613 +
             C29683 * C2616) *
                C1528 -
            ((C12824 + C12825) * C1523 + (C12826 + C12827) * C1527) +
            (C10089 * C2618 + C10085 * C2621 + C10090 * C2619 +
             C29683 * C2622) *
                C1524) *
               C29588 * C29690) *
              C29543 * C1526)) /
        (p * q * std::sqrt(p + q));
    d2eexy[30] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C10089 * C93 + C10085 * C98 + C10090 * C94 + C29683 * C99) *
                C1583 +
            (C10089 * C152 + C10085 * C157 + C10090 * C153 + C29683 * C158) *
                C1525 -
            (C10609 + C10608) * C1584 - (C10674 + C10675) * C1526) *
               C29588 * C19411 +
           ((C20380 + C20381) * C1583 + (C20446 + C20447) * C1525 -
            (C12826 + C12827) * C1584 - (C12899 + C12898) * C1526) *
               C29588 * C29690) *
              C1523 +
          (((C11565 + C11564) * C1584 -
            ((C10090 * C154 + C29683 * C159 + C10089 * C153 + C10085 * C158) *
                 C1525 +
             (C10090 * C95 + C29683 * C100 + C10089 * C94 + C10085 * C99) *
                 C1583) +
            (C11638 + C11639) * C1526) *
               C29588 * C19411 +
           ((C10089 * C2612 + C10085 * C2615 + C10090 * C2613 +
             C29683 * C2616) *
                C1584 -
            ((C10090 * C1132 + C29683 * C1138 + C10089 * C1133 +
              C10085 * C1139) *
                 C1525 +
             (C10090 * C1070 + C29683 * C1079 + C10089 * C1071 +
              C10085 * C1080) *
                 C1583) +
            (C10089 * C2674 + C10085 * C2677 + C10090 * C2675 +
             C29683 * C2678) *
                C1526) *
               C29588 * C29690) *
              C1524) *
         C29543) /
        (p * q * std::sqrt(p + q));
    d2eexz[30] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C10089 * C93 + C10085 * C98 + C10090 * C94 + C29683 * C99) *
                 C200 +
             (C10089 * C201 + C10085 * C206 + C10090 * C202 + C29683 * C207) *
                 C29543) *
                C29588 * C19411 +
            ((C20380 + C20381) * C200 + (C20509 + C20508) * C29543) * C29588 *
                C29690) *
               C1525 -
           (((C12970 + C12971) * C29543 + (C12826 + C12827) * C200) * C29588 *
                C29690 +
            ((C10737 + C10736) * C29543 + (C10609 + C10608) * C200) * C29588 *
                C19411) *
               C1526) *
              C1523 +
          ((((C11565 + C11564) * C200 + (C11710 + C11711) * C29543) * C29588 *
                C19411 +
            ((C10089 * C2612 + C10085 * C2615 + C10090 * C2613 +
              C29683 * C2616) *
                 C200 +
             (C10089 * C2730 + C10085 * C2733 + C10090 * C2731 +
              C29683 * C2734) *
                 C29543) *
                C29588 * C29690) *
               C1526 -
           (((C10090 * C1185 + C29683 * C1191 + C10089 * C1186 +
              C10085 * C1192) *
                 C29543 +
             (C10090 * C1070 + C29683 * C1079 + C10089 * C1071 +
              C10085 * C1080) *
                 C200) *
                C29588 * C29690 +
            ((C10090 * C203 + C29683 * C208 + C10089 * C202 + C10085 * C207) *
                 C29543 +
             (C10090 * C95 + C29683 * C100 + C10089 * C94 + C10085 * C99) *
                 C200) *
                C29588 * C19411) *
               C1525) *
              C1524)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[30] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C249 * C93 + C29588 * C250) * C1527 +
             (C249 * C101 + C29588 * C255) * C1523 - C273 * C1528 -
             C274 * C1524) *
                C19411 +
            (C9054 + C9055 - C9056 - C9057) * C29690) *
               C10085 +
           ((C273 * C1527 + C274 * C1523 - C275 * C1528 - C276 * C1524) *
                C19411 +
            (C9058 + C9059 - C9060 - C9061) * C29690) *
               C29683) *
              C29543 * C1525 +
          (((C1700 * C1528 -
             ((C249 * C634 + C29588 * C799) * C1523 +
              (C249 * C628 + C29588 * C793) * C1527) +
             C1701 * C1524) *
                C19411 +
            (C8398 * C1528 - (C9693 * C1523 + C9692 * C1527) + C8399 * C1524) *
                C29690) *
               C10085 +
           ((C1702 * C1528 - (C1701 * C1523 + C1700 * C1527) + C1703 * C1524) *
                C19411 +
            ((C249 * C2613 + C29588 * C2787) * C1528 -
             (C8399 * C1523 + C8398 * C1527) +
             (C249 * C2619 + C29588 * C2790) * C1524) *
                C29690) *
               C29683) *
              C29543 * C1526)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[30] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C249 * C93 + C29588 * C250) * C1583 +
                       (C249 * C152 + C29588 * C316) * C1525 -
                       (C249 * C628 + C29588 * C793) * C1584 -
                       (C249 * C693 + C29588 * C841) * C1526) *
                          C19411 +
                      (C9762 + C9763 - C9764 - C9768) * C29690) *
                         C10085 +
                     ((C1755 + C1756 - C1757 - C1767) * C19411 +
                      (C8466 + C8467 - C8468 - C8472) * C29690) *
                         C29683) *
                        C1523 +
                    (((C1757 - (C1756 + C1755) + C1767) * C19411 +
                      (C8468 - (C8467 + C8466) + C8472) * C29690) *
                         C10085 +
                     ((C1762 - (C1761 + C1760) + C1768) * C19411 +
                      ((C249 * C2613 + C29588 * C2787) * C1584 -
                       (C2304 * C1525 + C2244 * C1583) +
                       (C249 * C2675 + C29588 * C2843) * C1526) *
                          C29690) *
                         C29683) *
                        C1524) *
                   C29543) /
                  (p * q * std::sqrt(p + q));
    d2eeyz[30] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C249 * C93 + C29588 * C250) * C200 +
              (C249 * C201 + C29588 * C376) * C29543) *
                 C19411 +
             (C7832 * C200 + C7969 * C29543) * C29690) *
                C10085 +
            ((C382 + C394) * C19411 + (C6896 + C6897) * C29690) * C29683) *
               C1525 -
           (((C8543 + C8541) * C29690 + (C1829 + C1825) * C19411) * C29683 +
            ((C9837 * C29543 + C9692 * C200) * C29690 +
             ((C249 * C743 + C29588 * C887) * C29543 +
              (C249 * C628 + C29588 * C793) * C200) *
                 C19411) *
                C10085) *
               C1526) *
              C1523 +
          ((((C1825 + C1829) * C19411 + (C8541 + C8543) * C29690) * C10085 +
            ((C1822 + C1828) * C19411 +
             ((C249 * C2613 + C29588 * C2787) * C200 +
              (C249 * C2731 + C29588 * C2896) * C29543) *
                 C29690) *
                C29683) *
               C1526 -
           (((C6898 + C6899) * C29690 + (C395 + C385) * C19411) * C29683 +
            ((C6897 + C6896) * C29690 + (C394 + C382) * C19411) * C10085) *
               C1525) *
              C1524)) /
        (p * q * std::sqrt(p + q));
    d2eezx[30] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C19713 * C93 + C19411 * C437 + C19714 * C1072 + C29690 * C1375) *
                C1527 +
            (C19713 * C101 + C19411 * C442 + C19714 * C1078 + C29690 * C1381) *
                C1523 -
            (C19732 + C19733) * C1528 - (C19734 + C19735) * C1524) *
               C10085 +
           ((C19733 + C19732) * C1527 + (C19735 + C19734) * C1523 -
            (C19737 + C19736) * C1528 - (C19739 + C19738) * C1524) *
               C29683) *
              C29588 * C29543 * C1525 +
          (((C21282 + C21283) * C1528 -
            ((C19714 * C2617 + C29690 * C2950 + C19713 * C634 + C19411 * C937) *
                 C1523 +
             (C19714 * C2611 + C29690 * C2947 + C19713 * C628 + C19411 * C931) *
                 C1527) +
            (C21284 + C21285) * C1524) *
               C10085 +
           ((C19713 * C626 + C19411 * C929 + C19714 * C2613 + C29690 * C2949) *
                C1528 -
            ((C21285 + C21284) * C1523 + (C21283 + C21282) * C1527) +
            (C19713 * C632 + C19411 * C935 + C19714 * C2619 + C29690 * C2952) *
                C1524) *
               C29683) *
              C29588 * C29543 * C1526)) /
        (p * q * std::sqrt(p + q));
    d2eezy[30] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C19713 * C93 + C19411 * C437 + C19714 * C1072 + C29690 * C1375) *
                C1583 +
            (C19713 * C152 + C19411 * C503 + C19714 * C1134 + C29690 * C1425) *
                C1525 -
            (C19714 * C2611 + C29690 * C2947 + C19713 * C628 + C19411 * C931) *
                C1584 -
            (C19714 * C2673 + C29690 * C3003 + C19713 * C693 + C19411 * C979) *
                C1526) *
               C10085 +
           ((C19733 + C19732) * C1583 + (C19798 + C19799) * C1525 -
            (C21283 + C21282) * C1584 - (C21356 + C21357) * C1526) *
               C29683) *
              C29588 * C1523 +
          (((C21282 + C21283) * C1584 -
            ((C19799 + C19798) * C1525 + (C19732 + C19733) * C1583) +
            (C21357 + C21356) * C1526) *
               C10085 +
           ((C19713 * C626 + C19411 * C929 + C19714 * C2613 + C29690 * C2949) *
                C1584 -
            ((C19800 + C19801) * C1525 + (C19737 + C19736) * C1583) +
            (C19713 * C691 + C19411 * C983 + C19714 * C2675 + C29690 * C3005) *
                C1526) *
               C29683) *
              C29588 * C1524) *
         C29543) /
        (p * q * std::sqrt(p + q));
    d2eezz[30] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C19713 * C93 + C19411 * C437 + C19714 * C1072 + C29690 * C1375) *
                 C200 +
             (C19713 * C201 + C19411 * C562 + C19714 * C1187 + C29690 * C1467) *
                 C29543) *
                C10085 +
            ((C19733 + C19732) * C200 + (C19860 + C19861) * C29543) * C29683) *
               C29588 * C1525 -
           (((C21428 + C21429) * C29543 + (C21283 + C21282) * C200) * C29683 +
            ((C19714 * C2729 + C29690 * C3056 + C19713 * C743 +
              C19411 * C1025) *
                 C29543 +
             (C19714 * C2611 + C29690 * C2947 + C19713 * C628 + C19411 * C931) *
                 C200) *
                C10085) *
               C29588 * C1526) *
              C1523 +
          ((((C21282 + C21283) * C200 + (C21429 + C21428) * C29543) * C10085 +
            ((C19713 * C626 + C19411 * C929 + C19714 * C2613 + C29690 * C2949) *
                 C200 +
             (C19713 * C741 + C19411 * C1023 + C19714 * C2731 +
              C29690 * C3058) *
                 C29543) *
                C29683) *
               C29588 * C1526 -
           (((C19862 + C19863) * C29543 + (C19737 + C19736) * C200) * C29683 +
            ((C19861 + C19860) * C29543 + (C19732 + C19733) * C200) * C10085) *
               C29588 * C1525) *
              C1524)) /
        (p * q * std::sqrt(p + q));
    d2eexx[31] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C10089 * C93 + C10085 * C98 + C10090 * C94 + C29683 * C99) *
                 C625 +
             (C10089 * C101 + C10085 * C108 + C10090 * C102 + C29683 * C109) *
                 C29511) *
                C29588 * C19411 +
            ((C20380 + C20381) * C625 + (C20382 + C20383) * C29511) * C29588 *
                C29690) *
               C2069 -
           (((C20384 + C20385) * C29511 + (C20386 + C20387) * C625) * C29588 *
                C29690 +
            ((C20383 + C20382) * C29511 + (C20381 + C20380) * C625) * C29588 *
                C19411) *
               C2070) *
              C1525 +
          ((((C12827 + C12826) * C625 + (C12825 + C12824) * C29511) * C29588 *
                C19411 +
            ((C10089 * C4199 + C10085 * C4201 + C10090 * C4200 +
              C29683 * C4202) *
                 C625 +
             (C10089 * C4203 + C10085 * C4205 + C10090 * C4204 +
              C29683 * C4206) *
                 C29511) *
                C29588 * C29690) *
               C2070 -
           (((C12824 + C12825) * C29511 + (C12826 + C12827) * C625) * C29588 *
                C29690 +
            ((C10611 + C10610) * C29511 + (C10609 + C10608) * C625) * C29588 *
                C19411) *
               C2069) *
              C1526)) /
        (p * q * std::sqrt(p + q));
    d2eexy[31] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C10089 * C93 + C10085 * C98 + C10090 * C94 + C29683 * C99) *
                C1583 +
            (C10089 * C152 + C10085 * C157 + C10090 * C153 + C29683 * C158) *
                C1525 -
            (C10609 + C10608) * C1584 - (C10674 + C10675) * C1526) *
               C29588 * C19411 +
           ((C20380 + C20381) * C1583 + (C20446 + C20447) * C1525 -
            (C12826 + C12827) * C1584 - (C12899 + C12898) * C1526) *
               C29588 * C29690) *
              C29511 * C2069 +
          (((C12827 + C12826) * C1584 -
            ((C20447 + C20446) * C1525 + (C20381 + C20380) * C1583) +
            (C12898 + C12899) * C1526) *
               C29588 * C19411 +
           ((C10089 * C4199 + C10085 * C4201 + C10090 * C4200 +
             C29683 * C4202) *
                C1584 -
            ((C20448 + C20449) * C1525 + (C20386 + C20387) * C1583) +
            (C10089 * C4257 + C10085 * C4259 + C10090 * C4258 +
             C29683 * C4260) *
                C1526) *
               C29588 * C29690) *
              C29511 * C2070)) /
        (p * q * std::sqrt(p + q));
    d2eexz[31] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C10089 * C93 + C10085 * C98 + C10090 * C94 + C29683 * C99) *
                C2177 +
            (C10089 * C201 + C10085 * C206 + C10090 * C202 + C29683 * C207) *
                C2069 -
            (C20381 + C20380) * C2178 - (C20508 + C20509) * C2070) *
               C29588 * C19411 +
           ((C20380 + C20381) * C2177 + (C20509 + C20508) * C2069 -
            (C20386 + C20387) * C2178 - (C20511 + C20510) * C2070) *
               C29588 * C29690) *
              C1525 +
          (((C12827 + C12826) * C2178 -
            ((C10737 + C10736) * C2069 + (C10609 + C10608) * C2177) +
            (C12971 + C12970) * C2070) *
               C29588 * C19411 +
           ((C10089 * C4199 + C10085 * C4201 + C10090 * C4200 +
             C29683 * C4202) *
                C2178 -
            ((C12970 + C12971) * C2069 + (C12826 + C12827) * C2177) +
            (C10089 * C4311 + C10085 * C4313 + C10090 * C4312 +
             C29683 * C4314) *
                C2070) *
               C29588 * C29690) *
              C1526) *
         C29511) /
        (p * q * std::sqrt(p + q));
    d2eeyx[31] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C249 * C93 + C29588 * C250) * C625 +
              (C249 * C101 + C29588 * C255) * C29511) *
                 C19411 +
             (C7838 + C7839) * C29690) *
                C10085 +
            ((C273 * C625 + C274 * C29511) * C19411 +
             (C7822 + C7823) * C29690) *
                C29683) *
               C2069 -
           (((C7840 + C7841) * C29690 + (C7823 + C7822) * C19411) * C29683 +
            ((C7842 + C7843) * C29690 + (C7839 + C7838) * C19411) * C10085) *
               C2070) *
              C1525 +
          ((((C9694 + C9695) * C19411 +
             ((C249 * C4199 + C29588 * C4365) * C625 +
              (C249 * C4203 + C29588 * C4367) * C29511) *
                 C29690) *
                C10085 +
            ((C9690 + C9691) * C19411 +
             ((C249 * C4200 + C29588 * C4366) * C625 +
              (C249 * C4204 + C29588 * C4368) * C29511) *
                 C29690) *
                C29683) *
               C2070 -
           (((C9691 + C9690) * C29690 +
             (C1701 * C29511 + C1700 * C625) * C19411) *
                C29683 +
            ((C9695 + C9694) * C29690 +
             ((C249 * C634 + C29588 * C799) * C29511 +
              (C249 * C628 + C29588 * C793) * C625) *
                 C19411) *
                C10085) *
               C2069) *
              C1526)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[31] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C249 * C93 + C29588 * C250) * C1583 +
                       (C249 * C152 + C29588 * C316) * C1525 -
                       (C249 * C628 + C29588 * C793) * C1584 -
                       (C249 * C693 + C29588 * C841) * C1526) *
                          C19411 +
                      (C9762 + C9763 - C9764 - C9768) * C29690) *
                         C10085 +
                     ((C1755 + C1756 - C1757 - C1767) * C19411 +
                      (C8466 + C8467 - C8468 - C8472) * C29690) *
                         C29683) *
                        C29511 * C2069 +
                    (((C9764 - (C9763 + C9762) + C9768) * C19411 +
                      ((C249 * C4199 + C29588 * C4365) * C1584 -
                       (C7907 * C1525 + C7837 * C1583) +
                       (C249 * C4257 + C29588 * C4419) * C1526) *
                          C29690) *
                         C10085 +
                     ((C8468 - (C8467 + C8466) + C8472) * C19411 +
                      ((C249 * C4200 + C29588 * C4366) * C1584 -
                       (C7906 * C1525 + C7835 * C1583) +
                       (C249 * C4258 + C29588 * C4420) * C1526) *
                          C29690) *
                         C29683) *
                        C29511 * C2070)) /
                  (p * q * std::sqrt(p + q));
    d2eeyz[31] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C249 * C93 + C29588 * C250) * C2177 +
             (C249 * C201 + C29588 * C376) * C2069 - C7832 * C2178 -
             C7969 * C2070) *
                C19411 +
            (C7832 * C2177 + C7969 * C2069 - C7837 * C2178 - C7970 * C2070) *
                C29690) *
               C10085 +
           ((C2358 + C2359 - C2360 - C2370) * C19411 +
            (C9196 + C9197 - C9198 - C9199) * C29690) *
               C29683) *
              C1525 +
          (((C9692 * C2178 -
             ((C249 * C743 + C29588 * C887) * C2069 +
              (C249 * C628 + C29588 * C793) * C2177) +
             C9837 * C2070) *
                C19411 +
            ((C249 * C4199 + C29588 * C4365) * C2178 -
             (C9837 * C2069 + C9692 * C2177) +
             (C249 * C4311 + C29588 * C4471) * C2070) *
                C29690) *
               C10085 +
           ((C8398 * C2178 - (C1827 * C2069 + C1700 * C2177) + C8542 * C2070) *
                C19411 +
            ((C249 * C4200 + C29588 * C4366) * C2178 -
             (C8542 * C2069 + C8398 * C2177) +
             (C249 * C4312 + C29588 * C4472) * C2070) *
                C29690) *
               C29683) *
              C1526) *
         C29511) /
        (p * q * std::sqrt(p + q));
    d2eezx[31] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C19713 * C93 + C19411 * C437 + C19714 * C1072 + C29690 * C1375) *
                 C625 +
             (C19713 * C101 + C19411 * C442 + C19714 * C1078 + C29690 * C1381) *
                 C29511) *
                C10085 +
            ((C19733 + C19732) * C625 + (C19735 + C19734) * C29511) * C29683) *
               C29588 * C2069 -
           (((C21927 + C21926) * C29511 + (C21925 + C21924) * C625) * C29683 +
            ((C19714 * C1085 + C29690 * C1382 + C19713 * C1078 +
              C19411 * C1381) *
                 C29511 +
             (C19714 * C1073 + C29690 * C1376 + C19713 * C1072 +
              C19411 * C1375) *
                 C625) *
                C10085) *
               C29588 * C2070) *
              C1525 +
          ((((C19713 * C2611 + C19411 * C2947 + C19714 * C4199 +
              C29690 * C4523) *
                 C625 +
             (C19713 * C2617 + C19411 * C2950 + C19714 * C4203 +
              C29690 * C4525) *
                 C29511) *
                C10085 +
            ((C19713 * C2612 + C19411 * C2948 + C19714 * C4200 +
              C29690 * C4524) *
                 C625 +
             (C19713 * C2618 + C19411 * C2951 + C19714 * C4204 +
              C29690 * C4526) *
                 C29511) *
                C29683) *
               C29588 * C2070 -
           (((C21285 + C21284) * C29511 + (C21283 + C21282) * C625) * C29683 +
            ((C19714 * C2617 + C29690 * C2950 + C19713 * C634 + C19411 * C937) *
                 C29511 +
             (C19714 * C2611 + C29690 * C2947 + C19713 * C628 + C19411 * C931) *
                 C625) *
                C10085) *
               C29588 * C2069) *
              C1526)) /
        (p * q * std::sqrt(p + q));
    d2eezy[31] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C19713 * C93 + C19411 * C437 + C19714 * C1072 + C29690 * C1375) *
                C1583 +
            (C19713 * C152 + C19411 * C503 + C19714 * C1134 + C29690 * C1425) *
                C1525 -
            (C19714 * C2611 + C29690 * C2947 + C19713 * C628 + C19411 * C931) *
                C1584 -
            (C19714 * C2673 + C29690 * C3003 + C19713 * C693 + C19411 * C979) *
                C1526) *
               C10085 +
           ((C19733 + C19732) * C1583 + (C19798 + C19799) * C1525 -
            (C21283 + C21282) * C1584 - (C21356 + C21357) * C1526) *
               C29683) *
              C29588 * C29511 * C2069 +
          (((C19713 * C2611 + C19411 * C2947 + C19714 * C4199 +
             C29690 * C4523) *
                C1584 -
            ((C19714 * C1135 + C29690 * C1426 + C19713 * C1134 +
              C19411 * C1425) *
                 C1525 +
             (C19714 * C1073 + C29690 * C1376 + C19713 * C1072 +
              C19411 * C1375) *
                 C1583) +
            (C19713 * C2673 + C19411 * C3003 + C19714 * C4257 +
             C29690 * C4577) *
                C1526) *
               C10085 +
           ((C19713 * C2612 + C19411 * C2948 + C19714 * C4200 +
             C29690 * C4524) *
                C1584 -
            ((C21999 + C21998) * C1525 + (C21925 + C21924) * C1583) +
            (C19713 * C2674 + C19411 * C3004 + C19714 * C4258 +
             C29690 * C4578) *
                C1526) *
               C29683) *
              C29588 * C29511 * C2070)) /
        (p * q * std::sqrt(p + q));
    d2eezz[31] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C19713 * C93 + C19411 * C437 + C19714 * C1072 + C29690 * C1375) *
                C2177 +
            (C19713 * C201 + C19411 * C562 + C19714 * C1187 + C29690 * C1467) *
                C2069 -
            (C19714 * C1073 + C29690 * C1376 + C19713 * C1072 +
             C19411 * C1375) *
                C2178 -
            (C19714 * C1188 + C29690 * C1468 + C19713 * C1187 +
             C19411 * C1467) *
                C2070) *
               C10085 +
           ((C19733 + C19732) * C2177 + (C19860 + C19861) * C2069 -
            (C21925 + C21924) * C2178 - (C22070 + C22071) * C2070) *
               C29683) *
              C29588 * C1525 +
          (((C19713 * C2611 + C19411 * C2947 + C19714 * C4199 +
             C29690 * C4523) *
                C2178 -
            ((C19714 * C2729 + C29690 * C3056 + C19713 * C743 +
              C19411 * C1025) *
                 C2069 +
             (C19714 * C2611 + C29690 * C2947 + C19713 * C628 + C19411 * C931) *
                 C2177) +
            (C19713 * C2729 + C19411 * C3056 + C19714 * C4311 +
             C29690 * C4629) *
                C2070) *
               C10085 +
           ((C19713 * C2612 + C19411 * C2948 + C19714 * C4200 +
             C29690 * C4524) *
                C2178 -
            ((C21428 + C21429) * C2069 + (C21283 + C21282) * C2177) +
            (C19713 * C2730 + C19411 * C3057 + C19714 * C4312 +
             C29690 * C4630) *
                C2070) *
               C29683) *
              C29588 * C1526) *
         C29511) /
        (p * q * std::sqrt(p + q));
    d2eexx[32] +=
        (-std::pow(Pi, 2.5) *
         ((((C10089 * C93 + C10085 * C98 + C10090 * C94 + C29683 * C99) * C625 +
            (C10089 * C101 + C10085 * C108 + C10090 * C102 + C29683 * C109) *
                C29511) *
               C29588 * C19411 +
           ((C10089 * C1072 + C10085 * C1081 + C10090 * C1071 +
             C29683 * C1080) *
                C625 +
            (C10089 * C1078 + C10085 * C1090 + C10090 * C1077 +
             C29683 * C1089) *
                C29511) *
               C29588 * C29690) *
              C29543 * C622 -
          (((C12824 + C12825) * C29511 + (C12826 + C12827) * C625) * C29588 *
               C29690 +
           ((C10611 + C10610) * C29511 + (C10609 + C10608) * C625) * C29588 *
               C19411) *
              C29543 * C623 +
          (((C10615 + C10614) * C625 + (C10613 + C10612) * C29511) * C29588 *
               C19411 +
           ((C10089 * C5989 + C10085 * C5991 + C10090 * C5990 +
             C29683 * C5992) *
                C625 +
            (C10089 * C5993 + C10085 * C5995 + C10090 * C5994 +
             C29683 * C5996) *
                C29511) *
               C29588 * C29690) *
              C29543 * C624)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C10089 * C93 + C10085 * C98 + C10090 * C94 + C29683 * C99) * C90 +
           (C10089 * C101 + C10085 * C108 + C10090 * C102 + C29683 * C109) *
               C80 -
           (C10090 * C95 + C29683 * C100 + C10089 * C94 + C10085 * C99) * C91 -
           (C10090 * C103 + C29683 * C110 + C10089 * C102 + C10085 * C109) *
               C81 +
           (C10089 * C95 + C10085 * C100 + C10090 * C96 + C29683 * C104) * C92 +
           (C10089 * C103 + C10085 * C110 + C10090 * C105 + C29683 * C111) *
               C82) *
              C29588 * C19411 +
          ((C10089 * C1072 + C10085 * C1081 + C10090 * C1071 + C29683 * C1080) *
               C90 +
           (C10089 * C1078 + C10085 * C1090 + C10090 * C1077 + C29683 * C1089) *
               C80 -
           (C10090 * C1070 + C29683 * C1079 + C10089 * C1071 + C10085 * C1080) *
               C91 -
           (C10090 * C1076 + C29683 * C1088 + C10089 * C1077 + C10085 * C1089) *
               C81 +
           (C10089 * C1070 + C10085 * C1079 + C10090 * C2071 + C29683 * C2072) *
               C92 +
           (C10089 * C1076 + C10085 * C1088 + C10090 * C2073 + C29683 * C2074) *
               C82) *
              C29588 * C29690) *
         C29543 * C29532) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C10089 * C93 + C10085 * C98 + C10090 * C94 + C29683 * C99) * C625 +
            (C10089 * C101 + C10085 * C108 + C10090 * C102 + C29683 * C109) *
                C29511) *
               C29588 * C19411 +
           ((C20380 + C20381) * C625 + (C20382 + C20383) * C29511) * C29588 *
               C29690) *
              C1067 -
          (((C20384 + C20385) * C29511 + (C20386 + C20387) * C625) * C29588 *
               C29690 +
           ((C20383 + C20382) * C29511 + (C20381 + C20380) * C625) * C29588 *
               C19411) *
              C1068 +
          (((C20387 + C20386) * C625 + (C20385 + C20384) * C29511) * C29588 *
               C19411 +
           ((C10089 * C7599 + C10085 * C7601 + C10090 * C7600 +
             C29683 * C7602) *
                C625 +
            (C10089 * C7603 + C10085 * C7605 + C10090 * C7604 +
             C29683 * C7606) *
                C29511) *
               C29588 * C29690) *
              C1069) *
         C29532) /
            (p * q * std::sqrt(p + q));
    d2eexy[32] +=
        (-std::pow(Pi, 2.5) *
         (((C10089 * C93 + C10085 * C98 + C10090 * C94 + C29683 * C99) * C688 +
           (C10089 * C152 + C10085 * C157 + C10090 * C153 + C29683 * C158) *
               C622 -
           (C10609 + C10608) * C689 - (C10674 + C10675) * C623 +
           (C10615 + C10614) * C690 + (C10676 + C10677) * C624) *
              C29588 * C19411 +
          ((C10089 * C1072 + C10085 * C1081 + C10090 * C1071 + C29683 * C1080) *
               C688 +
           (C10089 * C1134 + C10085 * C1140 + C10090 * C1133 + C29683 * C1139) *
               C622 -
           (C12826 + C12827) * C689 - (C12899 + C12898) * C623 +
           (C10089 * C5989 + C10085 * C5991 + C10090 * C5990 + C29683 * C5992) *
               C690 +
           (C10089 * C6075 + C10085 * C6077 + C10090 * C6076 + C29683 * C6078) *
               C624) *
              C29588 * C29690) *
         C29511 * C29543) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C10089 * C93 + C10085 * C98 + C10090 * C94 + C29683 * C99) * C151 +
            (C10089 * C152 + C10085 * C157 + C10090 * C153 + C29683 * C158) *
                C29532) *
               C29588 * C19411 +
           ((C10089 * C1072 + C10085 * C1081 + C10090 * C1071 +
             C29683 * C1080) *
                C151 +
            (C10089 * C1134 + C10085 * C1140 + C10090 * C1133 +
             C29683 * C1139) *
                C29532) *
               C29588 * C29690) *
              C80 -
          (((C10090 * C1132 + C29683 * C1138 + C10089 * C1133 +
             C10085 * C1139) *
                C29532 +
            (C10090 * C1070 + C29683 * C1079 + C10089 * C1071 +
             C10085 * C1080) *
                C151) *
               C29588 * C29690 +
           ((C10090 * C154 + C29683 * C159 + C10089 * C153 + C10085 * C158) *
                C29532 +
            (C10090 * C95 + C29683 * C100 + C10089 * C94 + C10085 * C99) *
                C151) *
               C29588 * C19411) *
              C81 +
          (((C10089 * C95 + C10085 * C100 + C10090 * C96 + C29683 * C104) *
                C151 +
            (C10089 * C154 + C10085 * C159 + C10090 * C155 + C29683 * C160) *
                C29532) *
               C29588 * C19411 +
           ((C10089 * C1070 + C10085 * C1079 + C10090 * C2071 +
             C29683 * C2072) *
                C151 +
            (C10089 * C1132 + C10085 * C1138 + C10090 * C2125 +
             C29683 * C2126) *
                C29532) *
               C29588 * C29690) *
              C82) *
         C29543) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C10089 * C93 + C10085 * C98 + C10090 * C94 + C29683 * C99) * C151 +
            (C10089 * C152 + C10085 * C157 + C10090 * C153 + C29683 * C158) *
                C29532) *
               C29588 * C19411 +
           ((C20380 + C20381) * C151 + (C20446 + C20447) * C29532) * C29588 *
               C29690) *
              C29511 * C1067 -
          (((C20448 + C20449) * C29532 + (C20386 + C20387) * C151) * C29588 *
               C29690 +
           ((C20447 + C20446) * C29532 + (C20381 + C20380) * C151) * C29588 *
               C19411) *
              C29511 * C1068 +
          (((C20387 + C20386) * C151 + (C20449 + C20448) * C29532) * C29588 *
               C19411 +
           ((C10089 * C7599 + C10085 * C7601 + C10090 * C7600 +
             C29683 * C7602) *
                C151 +
            (C10089 * C7681 + C10085 * C7683 + C10090 * C7682 +
             C29683 * C7684) *
                C29532) *
               C29588 * C29690) *
              C29511 * C1069)) /
            (p * q * std::sqrt(p + q));
    d2eexz[32] +=
        (-std::pow(Pi, 2.5) *
         ((((C10089 * C93 + C10085 * C98 + C10090 * C94 + C29683 * C99) * C200 +
            (C10089 * C201 + C10085 * C206 + C10090 * C202 + C29683 * C207) *
                C29543) *
               C29588 * C19411 +
           ((C10089 * C1072 + C10085 * C1081 + C10090 * C1071 +
             C29683 * C1080) *
                C200 +
            (C10089 * C1187 + C10085 * C1193 + C10090 * C1186 +
             C29683 * C1192) *
                C29543) *
               C29588 * C29690) *
              C622 -
          (((C12970 + C12971) * C29543 + (C12826 + C12827) * C200) * C29588 *
               C29690 +
           ((C10737 + C10736) * C29543 + (C10609 + C10608) * C200) * C29588 *
               C19411) *
              C623 +
          (((C10615 + C10614) * C200 + (C10739 + C10738) * C29543) * C29588 *
               C19411 +
           ((C10089 * C5989 + C10085 * C5991 + C10090 * C5990 +
             C29683 * C5992) *
                C200 +
            (C10089 * C6151 + C10085 * C6153 + C10090 * C6152 +
             C29683 * C6154) *
                C29543) *
               C29588 * C29690) *
              C624) *
         C29511) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C10089 * C93 + C10085 * C98 + C10090 * C94 + C29683 * C99) * C200 +
            (C10089 * C201 + C10085 * C206 + C10090 * C202 + C29683 * C207) *
                C29543) *
               C29588 * C19411 +
           ((C10089 * C1072 + C10085 * C1081 + C10090 * C1071 +
             C29683 * C1080) *
                C200 +
            (C10089 * C1187 + C10085 * C1193 + C10090 * C1186 +
             C29683 * C1192) *
                C29543) *
               C29588 * C29690) *
              C29532 * C80 -
          (((C10090 * C1185 + C29683 * C1191 + C10089 * C1186 +
             C10085 * C1192) *
                C29543 +
            (C10090 * C1070 + C29683 * C1079 + C10089 * C1071 +
             C10085 * C1080) *
                C200) *
               C29588 * C29690 +
           ((C10090 * C203 + C29683 * C208 + C10089 * C202 + C10085 * C207) *
                C29543 +
            (C10090 * C95 + C29683 * C100 + C10089 * C94 + C10085 * C99) *
                C200) *
               C29588 * C19411) *
              C29532 * C81 +
          (((C10089 * C95 + C10085 * C100 + C10090 * C96 + C29683 * C104) *
                C200 +
            (C10089 * C203 + C10085 * C208 + C10090 * C204 + C29683 * C209) *
                C29543) *
               C29588 * C19411 +
           ((C10089 * C1070 + C10085 * C1079 + C10090 * C2071 +
             C29683 * C2072) *
                C200 +
            (C10089 * C1185 + C10085 * C1191 + C10090 * C2179 +
             C29683 * C2180) *
                C29543) *
               C29588 * C29690) *
              C29532 * C82)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C10089 * C93 + C10085 * C98 + C10090 * C94 + C29683 * C99) * C1182 +
           (C10089 * C201 + C10085 * C206 + C10090 * C202 + C29683 * C207) *
               C1067 -
           (C20381 + C20380) * C1183 - (C20508 + C20509) * C1068 +
           (C20387 + C20386) * C1184 + (C20510 + C20511) * C1069) *
              C29588 * C19411 +
          ((C20380 + C20381) * C1182 + (C20509 + C20508) * C1067 -
           (C20386 + C20387) * C1183 - (C20511 + C20510) * C1068 +
           (C10089 * C7599 + C10085 * C7601 + C10090 * C7600 + C29683 * C7602) *
               C1184 +
           (C10089 * C7747 + C10085 * C7749 + C10090 * C7748 + C29683 * C7750) *
               C1069) *
              C29588 * C29690) *
         C29532 * C29511) /
            (p * q * std::sqrt(p + q));
    d2eeyx[32] +=
        (-std::pow(Pi, 2.5) *
         (((((C249 * C93 + C29588 * C250) * C625 +
             (C249 * C101 + C29588 * C255) * C29511) *
                C19411 +
            (C7838 + C7839) * C29690) *
               C10085 +
           ((C273 * C625 + C274 * C29511) * C19411 + (C7822 + C7823) * C29690) *
               C29683) *
              C29543 * C622 -
          (((C9691 + C9690) * C29690 +
            (C1701 * C29511 + C1700 * C625) * C19411) *
               C29683 +
           ((C9695 + C9694) * C29690 + ((C249 * C634 + C29588 * C799) * C29511 +
                                        (C249 * C628 + C29588 * C793) * C625) *
                                           C19411) *
               C10085) *
              C29543 * C623 +
          ((((C249 * C629 + C29588 * C794) * C625 +
             (C249 * C641 + C29588 * C800) * C29511) *
                C19411 +
            ((C249 * C5989 + C29588 * C6227) * C625 +
             (C249 * C5993 + C29588 * C6229) * C29511) *
                C29690) *
               C10085 +
           (((C249 * C630 + C29588 * C795) * C625 +
             (C249 * C642 + C29588 * C801) * C29511) *
                C19411 +
            ((C249 * C5990 + C29588 * C6228) * C625 +
             (C249 * C5994 + C29588 * C6230) * C29511) *
                C29690) *
               C29683) *
              C29543 * C624)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C249 * C93 + C29588 * C250) * C90 +
            (C249 * C101 + C29588 * C255) * C80 - C273 * C91 - C274 * C81 +
            C275 * C92 + C276 * C82) *
               C19411 +
           (C7832 * C90 + C7833 * C80 - C2242 * C91 - C2243 * C81 +
            C2244 * C92 + C2245 * C82) *
               C29690) *
              C10085 +
          ((C273 * C90 + C274 * C80 - C275 * C91 - C276 * C81 + C277 * C92 +
            C278 * C82) *
               C19411 +
           (C2242 * C90 + C2243 * C80 - C2244 * C91 - C2245 * C81 +
            (C249 * C2071 + C29588 * C2231) * C92 +
            (C249 * C2073 + C29588 * C2232) * C82) *
               C29690) *
              C29683) *
         C29543 * C29532) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C249 * C93 + C29588 * C250) * C625 +
             (C249 * C101 + C29588 * C255) * C29511) *
                C19411 +
            (C7838 + C7839) * C29690) *
               C10085 +
           ((C273 * C625 + C274 * C29511) * C19411 + (C7822 + C7823) * C29690) *
               C29683) *
              C1067 -
          (((C7840 + C7841) * C29690 + (C7823 + C7822) * C19411) * C29683 +
           ((C7842 + C7843) * C29690 + (C7839 + C7838) * C19411) * C10085) *
              C1068 +
          (((C7843 + C7842) * C19411 +
            ((C249 * C7599 + C29588 * C7813) * C625 +
             (C249 * C7603 + C29588 * C7815) * C29511) *
                C29690) *
               C10085 +
           ((C7841 + C7840) * C19411 +
            ((C249 * C7600 + C29588 * C7814) * C625 +
             (C249 * C7604 + C29588 * C7816) * C29511) *
                C29690) *
               C29683) *
              C1069) *
         C29532) /
            (p * q * std::sqrt(p + q));
    d2eeyy[32] +=
        (-std::pow(Pi, 2.5) *
         ((((C249 * C93 + C29588 * C250) * C688 +
            (C249 * C152 + C29588 * C316) * C622 -
            (C249 * C628 + C29588 * C793) * C689 -
            (C249 * C693 + C29588 * C841) * C623 +
            (C249 * C629 + C29588 * C794) * C690 +
            (C249 * C694 + C29588 * C842) * C624) *
               C19411 +
           (C7832 * C688 + C7905 * C622 - C9692 * C689 - C9767 * C623 +
            (C249 * C5989 + C29588 * C6227) * C690 +
            (C249 * C6075 + C29588 * C6297) * C624) *
               C29690) *
              C10085 +
          ((C273 * C688 + C331 * C622 - C1700 * C689 - C1765 * C623 +
            (C249 * C630 + C29588 * C795) * C690 +
            (C249 * C695 + C29588 * C844) * C624) *
               C19411 +
           (C2242 * C688 + C2303 * C622 - C8398 * C689 - C8471 * C623 +
            (C249 * C5990 + C29588 * C6228) * C690 +
            (C249 * C6076 + C29588 * C6298) * C624) *
               C29690) *
              C29683) *
         C29511 * C29543) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C249 * C93 + C29588 * C250) * C151 +
             (C249 * C152 + C29588 * C316) * C29532) *
                C19411 +
            (C7896 + C7908) * C29690) *
               C10085 +
           ((C322 + C334) * C19411 + C9128 * C29690) * C29683) *
              C80 -
          (((C2306 + C2300) * C29690 + (C335 + C325) * C19411) * C29683 +
           (C9129 * C29690 + (C334 + C322) * C19411) * C10085) *
              C81 +
          ((C337 * C19411 + (C2300 + C2306) * C29690) * C10085 +
           ((C330 + C336) * C19411 +
            ((C249 * C2071 + C29588 * C2231) * C151 +
             (C249 * C2125 + C29588 * C2295) * C29532) *
                C29690) *
               C29683) *
              C82) *
         C29543) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C249 * C93 + C29588 * C250) * C151 +
             (C249 * C152 + C29588 * C316) * C29532) *
                C19411 +
            (C7896 + C7908) * C29690) *
               C10085 +
           ((C322 + C334) * C19411 + C9128 * C29690) * C29683) *
              C29511 * C1067 -
          (((C7909 + C7901) * C29690 + C9129 * C19411) * C29683 +
           ((C7910 + C7904) * C29690 + (C7908 + C7896) * C19411) * C10085) *
              C29511 * C1068 +
          (((C7904 + C7910) * C19411 +
            ((C249 * C7599 + C29588 * C7813) * C151 +
             (C249 * C7681 + C29588 * C7893) * C29532) *
                C29690) *
               C10085 +
           ((C7901 + C7909) * C19411 +
            ((C249 * C7600 + C29588 * C7814) * C151 +
             (C249 * C7682 + C29588 * C7894) * C29532) *
                C29690) *
               C29683) *
              C29511 * C1069)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[32] +=
        (-std::pow(Pi, 2.5) *
         (((((C249 * C93 + C29588 * C250) * C200 +
             (C249 * C201 + C29588 * C376) * C29543) *
                C19411 +
            (C7832 * C200 + C7969 * C29543) * C29690) *
               C10085 +
           ((C382 + C394) * C19411 + (C6896 + C6897) * C29690) * C29683) *
              C622 -
          (((C8543 + C8541) * C29690 + (C1829 + C1825) * C19411) * C29683 +
           ((C9837 * C29543 + C9692 * C200) * C29690 +
            ((C249 * C743 + C29588 * C887) * C29543 +
             (C249 * C628 + C29588 * C793) * C200) *
                C19411) *
               C10085) *
              C623 +
          ((((C249 * C629 + C29588 * C794) * C200 +
             (C249 * C744 + C29588 * C888) * C29543) *
                C19411 +
            ((C249 * C5989 + C29588 * C6227) * C200 +
             (C249 * C6151 + C29588 * C6365) * C29543) *
                C29690) *
               C10085 +
           (((C249 * C630 + C29588 * C795) * C200 +
             (C249 * C745 + C29588 * C889) * C29543) *
                C19411 +
            ((C249 * C5990 + C29588 * C6228) * C200 +
             (C249 * C6152 + C29588 * C6366) * C29543) *
                C29690) *
               C29683) *
              C624) *
         C29511) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C249 * C93 + C29588 * C250) * C200 +
             (C249 * C201 + C29588 * C376) * C29543) *
                C19411 +
            (C7832 * C200 + C7969 * C29543) * C29690) *
               C10085 +
           ((C382 + C394) * C19411 + (C6896 + C6897) * C29690) * C29683) *
              C29532 * C80 -
          (((C6898 + C6899) * C29690 + (C395 + C385) * C19411) * C29683 +
           ((C6897 + C6896) * C29690 + (C394 + C382) * C19411) * C10085) *
              C29532 * C81 +
          ((C397 * C19411 + (C6899 + C6898) * C29690) * C10085 +
           ((C390 + C396) * C19411 +
            ((C249 * C2071 + C29588 * C2231) * C200 +
             (C249 * C2179 + C29588 * C2356) * C29543) *
                C29690) *
               C29683) *
              C29532 * C82)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C249 * C93 + C29588 * C250) * C1182 +
            (C249 * C201 + C29588 * C376) * C1067 - C7832 * C1183 -
            C7969 * C1068 + C7837 * C1184 + C7970 * C1069) *
               C19411 +
           (C7832 * C1182 + C7969 * C1067 - C7837 * C1183 - C7970 * C1068 +
            (C249 * C7599 + C29588 * C7813) * C1184 +
            (C249 * C7747 + C29588 * C7960) * C1069) *
               C29690) *
              C10085 +
          ((C273 * C1182 + C391 * C1067 - C2242 * C1183 - C2368 * C1068 +
            C7835 * C1184 + C7971 * C1069) *
               C19411 +
           (C2242 * C1182 + C2368 * C1067 - C7835 * C1183 - C7971 * C1068 +
            (C249 * C7600 + C29588 * C7814) * C1184 +
            (C249 * C7748 + C29588 * C7961) * C1069) *
               C29690) *
              C29683) *
         C29532 * C29511) /
            (p * q * std::sqrt(p + q));
    d2eezx[32] +=
        (-std::pow(Pi, 2.5) *
         ((((C19713 * C93 + C19411 * C437 + C19714 * C1072 + C29690 * C1375) *
                C625 +
            (C19713 * C101 + C19411 * C442 + C19714 * C1078 + C29690 * C1381) *
                C29511) *
               C10085 +
           ((C19733 + C19732) * C625 + (C19735 + C19734) * C29511) * C29683) *
              C29588 * C29543 * C622 -
          (((C19714 * C2618 + C29690 * C2951 + C19713 * C633 + C19411 * C936) *
                C29511 +
            (C19714 * C2612 + C29690 * C2948 + C19713 * C627 + C19411 * C930) *
                C625) *
               C29683 +
           ((C19714 * C2617 + C29690 * C2950 + C19713 * C634 + C19411 * C937) *
                C29511 +
            (C19714 * C2611 + C29690 * C2947 + C19713 * C628 + C19411 * C931) *
                C625) *
               C10085) *
              C29588 * C29543 * C623 +
          (((C19713 * C629 + C19411 * C932 + C19714 * C5989 + C29690 * C6433) *
                C625 +
            (C19713 * C641 + C19411 * C938 + C19714 * C5993 + C29690 * C6435) *
                C29511) *
               C10085 +
           ((C19713 * C630 + C19411 * C933 + C19714 * C5990 + C29690 * C6434) *
                C625 +
            (C19713 * C642 + C19411 * C939 + C19714 * C5994 + C29690 * C6436) *
                C29511) *
               C29683) *
              C29588 * C29543 * C624)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C19713 * C93 + C19411 * C437 + C19714 * C1072 + C29690 * C1375) *
               C90 +
           (C19713 * C101 + C19411 * C442 + C19714 * C1078 + C29690 * C1381) *
               C80 -
           (C19732 + C19733) * C91 - (C19734 + C19735) * C81 +
           (C19736 + C19737) * C92 + (C19738 + C19739) * C82) *
              C10085 +
          ((C19733 + C19732) * C90 + (C19735 + C19734) * C80 -
           (C19737 + C19736) * C91 - (C19739 + C19738) * C81 +
           (C19713 * C96 + C19411 * C440 + C19714 * C2071 + C29690 * C2421) *
               C92 +
           (C19713 * C105 + C19411 * C445 + C19714 * C2073 + C29690 * C2422) *
               C82) *
              C29683) *
         C29588 * C29543 * C29532) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C19713 * C93 + C19411 * C437 + C19714 * C1072 + C29690 * C1375) *
                C625 +
            (C19713 * C101 + C19411 * C442 + C19714 * C1078 + C29690 * C1381) *
                C29511) *
               C10085 +
           ((C19733 + C19732) * C625 + (C19735 + C19734) * C29511) * C29683) *
              C29588 * C1067 -
          (((C19714 * C1086 + C29690 * C1383 + C19713 * C1077 +
             C19411 * C1380) *
                C29511 +
            (C19714 * C1074 + C29690 * C1377 + C19713 * C1071 +
             C19411 * C1374) *
                C625) *
               C29683 +
           ((C19714 * C1085 + C29690 * C1382 + C19713 * C1078 +
             C19411 * C1381) *
                C29511 +
            (C19714 * C1073 + C29690 * C1376 + C19713 * C1072 +
             C19411 * C1375) *
                C625) *
               C10085) *
              C29588 * C1068 +
          (((C19713 * C1073 + C19411 * C1376 + C19714 * C7599 +
             C29690 * C8021) *
                C625 +
            (C19713 * C1085 + C19411 * C1382 + C19714 * C7603 +
             C29690 * C8023) *
                C29511) *
               C10085 +
           ((C19713 * C1074 + C19411 * C1377 + C19714 * C7600 +
             C29690 * C8022) *
                C625 +
            (C19713 * C1086 + C19411 * C1383 + C19714 * C7604 +
             C29690 * C8024) *
                C29511) *
               C29683) *
              C29588 * C1069) *
         C29532) /
            (p * q * std::sqrt(p + q));
    d2eezy[32] +=
        (-std::pow(Pi, 2.5) *
         (((C19713 * C93 + C19411 * C437 + C19714 * C1072 + C29690 * C1375) *
               C688 +
           (C19713 * C152 + C19411 * C503 + C19714 * C1134 + C29690 * C1425) *
               C622 -
           (C19714 * C2611 + C29690 * C2947 + C19713 * C628 + C19411 * C931) *
               C689 -
           (C19714 * C2673 + C29690 * C3003 + C19713 * C693 + C19411 * C979) *
               C623 +
           (C19713 * C629 + C19411 * C932 + C19714 * C5989 + C29690 * C6433) *
               C690 +
           (C19713 * C694 + C19411 * C980 + C19714 * C6075 + C29690 * C6513) *
               C624) *
              C10085 +
          ((C19733 + C19732) * C688 + (C19798 + C19799) * C622 -
           (C19714 * C2612 + C29690 * C2948 + C19713 * C627 + C19411 * C930) *
               C689 -
           (C19714 * C2674 + C29690 * C3004 + C19713 * C692 + C19411 * C981) *
               C623 +
           (C19713 * C630 + C19411 * C933 + C19714 * C5990 + C29690 * C6434) *
               C690 +
           (C19713 * C695 + C19411 * C982 + C19714 * C6076 + C29690 * C6514) *
               C624) *
              C29683) *
         C29588 * C29511 * C29543) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C19713 * C93 + C19411 * C437 + C19714 * C1072 + C29690 * C1375) *
                C151 +
            (C19713 * C152 + C19411 * C503 + C19714 * C1134 + C29690 * C1425) *
                C29532) *
               C10085 +
           ((C19733 + C19732) * C151 + (C19798 + C19799) * C29532) * C29683) *
              C29588 * C80 -
          (((C19800 + C19801) * C29532 + (C19737 + C19736) * C151) * C29683 +
           ((C19799 + C19798) * C29532 + (C19732 + C19733) * C151) * C10085) *
              C29588 * C81 +
          (((C19736 + C19737) * C151 + (C19801 + C19800) * C29532) * C10085 +
           ((C19713 * C96 + C19411 * C440 + C19714 * C2071 + C29690 * C2421) *
                C151 +
            (C19713 * C155 + C19411 * C506 + C19714 * C2125 + C29690 * C2485) *
                C29532) *
               C29683) *
              C29588 * C82) *
         C29543) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C19713 * C93 + C19411 * C437 + C19714 * C1072 + C29690 * C1375) *
                C151 +
            (C19713 * C152 + C19411 * C503 + C19714 * C1134 + C29690 * C1425) *
                C29532) *
               C10085 +
           ((C19733 + C19732) * C151 + (C19798 + C19799) * C29532) * C29683) *
              C29588 * C29511 * C1067 -
          (((C19714 * C1136 + C29690 * C1427 + C19713 * C1133 +
             C19411 * C1424) *
                C29532 +
            (C19714 * C1074 + C29690 * C1377 + C19713 * C1071 +
             C19411 * C1374) *
                C151) *
               C29683 +
           ((C19714 * C1135 + C29690 * C1426 + C19713 * C1134 +
             C19411 * C1425) *
                C29532 +
            (C19714 * C1073 + C29690 * C1376 + C19713 * C1072 +
             C19411 * C1375) *
                C151) *
               C10085) *
              C29588 * C29511 * C1068 +
          (((C19713 * C1073 + C19411 * C1376 + C19714 * C7599 +
             C29690 * C8021) *
                C151 +
            (C19713 * C1135 + C19411 * C1426 + C19714 * C7681 +
             C29690 * C8075) *
                C29532) *
               C10085 +
           ((C19713 * C1074 + C19411 * C1377 + C19714 * C7600 +
             C29690 * C8022) *
                C151 +
            (C19713 * C1136 + C19411 * C1427 + C19714 * C7682 +
             C29690 * C8076) *
                C29532) *
               C29683) *
              C29588 * C29511 * C1069)) /
            (p * q * std::sqrt(p + q));
    d2eezz[32] +=
        (-std::pow(Pi, 2.5) *
         ((((C19713 * C93 + C19411 * C437 + C19714 * C1072 + C29690 * C1375) *
                C200 +
            (C19713 * C201 + C19411 * C562 + C19714 * C1187 + C29690 * C1467) *
                C29543) *
               C10085 +
           ((C19733 + C19732) * C200 + (C19860 + C19861) * C29543) * C29683) *
              C29588 * C622 -
          (((C19714 * C2730 + C29690 * C3057 + C19713 * C742 + C19411 * C1024) *
                C29543 +
            (C19714 * C2612 + C29690 * C2948 + C19713 * C627 + C19411 * C930) *
                C200) *
               C29683 +
           ((C19714 * C2729 + C29690 * C3056 + C19713 * C743 + C19411 * C1025) *
                C29543 +
            (C19714 * C2611 + C29690 * C2947 + C19713 * C628 + C19411 * C931) *
                C200) *
               C10085) *
              C29588 * C623 +
          (((C19713 * C629 + C19411 * C932 + C19714 * C5989 + C29690 * C6433) *
                C200 +
            (C19713 * C744 + C19411 * C1026 + C19714 * C6151 + C29690 * C6584) *
                C29543) *
               C10085 +
           ((C19713 * C630 + C19411 * C933 + C19714 * C5990 + C29690 * C6434) *
                C200 +
            (C19713 * C745 + C19411 * C1027 + C19714 * C6152 + C29690 * C6585) *
                C29543) *
               C29683) *
              C29588 * C624) *
         C29511) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C19713 * C93 + C19411 * C437 + C19714 * C1072 + C29690 * C1375) *
                C200 +
            (C19713 * C201 + C19411 * C562 + C19714 * C1187 + C29690 * C1467) *
                C29543) *
               C10085 +
           ((C19733 + C19732) * C200 + (C19860 + C19861) * C29543) * C29683) *
              C29588 * C29532 * C80 -
          (((C19862 + C19863) * C29543 + (C19737 + C19736) * C200) * C29683 +
           ((C19861 + C19860) * C29543 + (C19732 + C19733) * C200) * C10085) *
              C29588 * C29532 * C81 +
          (((C19736 + C19737) * C200 + (C19863 + C19862) * C29543) * C10085 +
           ((C19713 * C96 + C19411 * C440 + C19714 * C2071 + C29690 * C2421) *
                C200 +
            (C19713 * C204 + C19411 * C565 + C19714 * C2179 + C29690 * C2546) *
                C29543) *
               C29683) *
              C29588 * C29532 * C82)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C19713 * C93 + C19411 * C437 + C19714 * C1072 + C29690 * C1375) *
               C1182 +
           (C19713 * C201 + C19411 * C562 + C19714 * C1187 + C29690 * C1467) *
               C1067 -
           (C19714 * C1073 + C29690 * C1376 + C19713 * C1072 + C19411 * C1375) *
               C1183 -
           (C19714 * C1188 + C29690 * C1468 + C19713 * C1187 + C19411 * C1467) *
               C1068 +
           (C19713 * C1073 + C19411 * C1376 + C19714 * C7599 + C29690 * C8021) *
               C1184 +
           (C19713 * C1188 + C19411 * C1468 + C19714 * C7747 + C29690 * C8127) *
               C1069) *
              C10085 +
          ((C19733 + C19732) * C1182 + (C19860 + C19861) * C1067 -
           (C19714 * C1074 + C29690 * C1377 + C19713 * C1071 + C19411 * C1374) *
               C1183 -
           (C19714 * C1189 + C29690 * C1470 + C19713 * C1186 + C19411 * C1469) *
               C1068 +
           (C19713 * C1074 + C19411 * C1377 + C19714 * C7600 + C29690 * C8022) *
               C1184 +
           (C19713 * C1189 + C19411 * C1470 + C19714 * C7748 + C29690 * C8128) *
               C1069) *
              C29683) *
         C29588 * C29532 * C29511) /
            (p * q * std::sqrt(p + q));
    d2eexx[33] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C10089 * C93 + C10085 * C98 + C10090 * C94 + C29683 * C99) *
                C1527 +
            (C10089 * C101 + C10085 * C108 + C10090 * C102 + C29683 * C109) *
                C1523 -
            (C10090 * C95 + C29683 * C100 + C10089 * C94 + C10085 * C99) *
                C1528 -
            (C10090 * C103 + C29683 * C110 + C10089 * C102 + C10085 * C109) *
                C1524) *
               C29588 * C19411 +
           ((C20380 + C20381) * C1527 + (C20382 + C20383) * C1523 -
            (C21504 + C21505) * C1528 - (C21506 + C21507) * C1524) *
               C29588 * C29690) *
              C2069 +
          (((C21505 + C21504) * C1528 -
            ((C20383 + C20382) * C1523 + (C20381 + C20380) * C1527) +
            (C21507 + C21506) * C1524) *
               C29588 * C19411 +
           ((C10089 * C1074 + C10085 * C1083 + C10090 * C1075 +
             C29683 * C1084) *
                C1528 -
            ((C20384 + C20385) * C1523 + (C20386 + C20387) * C1527) +
            (C10089 * C1086 + C10085 * C1092 + C10090 * C1087 +
             C29683 * C1093) *
                C1524) *
               C29588 * C29690) *
              C2070) *
         C29532) /
        (p * q * std::sqrt(p + q));
    d2eexy[33] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C10089 * C93 + C10085 * C98 + C10090 * C94 + C29683 * C99) *
                 C151 +
             (C10089 * C152 + C10085 * C157 + C10090 * C153 + C29683 * C158) *
                 C29532) *
                C29588 * C19411 +
            ((C20380 + C20381) * C151 + (C20446 + C20447) * C29532) * C29588 *
                C29690) *
               C1523 -
           (((C21578 + C21579) * C29532 + (C21504 + C21505) * C151) * C29588 *
                C29690 +
            ((C10090 * C154 + C29683 * C159 + C10089 * C153 + C10085 * C158) *
                 C29532 +
             (C10090 * C95 + C29683 * C100 + C10089 * C94 + C10085 * C99) *
                 C151) *
                C29588 * C19411) *
               C1524) *
              C2069 +
          ((((C21505 + C21504) * C151 + (C21579 + C21578) * C29532) * C29588 *
                C19411 +
            ((C10089 * C1074 + C10085 * C1083 + C10090 * C1075 +
              C29683 * C1084) *
                 C151 +
             (C10089 * C1136 + C10085 * C1142 + C10090 * C1137 +
              C29683 * C1143) *
                 C29532) *
                C29588 * C29690) *
               C1524 -
           (((C20448 + C20449) * C29532 + (C20386 + C20387) * C151) * C29588 *
                C29690 +
            ((C20447 + C20446) * C29532 + (C20381 + C20380) * C151) * C29588 *
                C19411) *
               C1523) *
              C2070)) /
        (p * q * std::sqrt(p + q));
    d2eexz[33] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C10089 * C93 + C10085 * C98 + C10090 * C94 + C29683 * C99) *
                C2177 +
            (C10089 * C201 + C10085 * C206 + C10090 * C202 + C29683 * C207) *
                C2069 -
            (C20381 + C20380) * C2178 - (C20508 + C20509) * C2070) *
               C29588 * C19411 +
           ((C20380 + C20381) * C2177 + (C20509 + C20508) * C2069 -
            (C20386 + C20387) * C2178 - (C20511 + C20510) * C2070) *
               C29588 * C29690) *
              C29532 * C1523 +
          (((C21505 + C21504) * C2178 -
            ((C10090 * C203 + C29683 * C208 + C10089 * C202 + C10085 * C207) *
                 C2069 +
             (C10090 * C95 + C29683 * C100 + C10089 * C94 + C10085 * C99) *
                 C2177) +
            (C21650 + C21651) * C2070) *
               C29588 * C19411 +
           ((C10089 * C1074 + C10085 * C1083 + C10090 * C1075 +
             C29683 * C1084) *
                C2178 -
            ((C21651 + C21650) * C2069 + (C21504 + C21505) * C2177) +
            (C10089 * C1189 + C10085 * C1195 + C10090 * C1190 +
             C29683 * C1196) *
                C2070) *
               C29588 * C29690) *
              C29532 * C1524)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[33] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C249 * C93 + C29588 * C250) * C1527 +
             (C249 * C101 + C29588 * C255) * C1523 - C273 * C1528 -
             C274 * C1524) *
                C19411 +
            (C9054 + C9055 - C9056 - C9057) * C29690) *
               C10085 +
           ((C273 * C1527 + C274 * C1523 - C275 * C1528 - C276 * C1524) *
                C19411 +
            (C9058 + C9059 - C9060 - C9061) * C29690) *
               C29683) *
              C2069 +
          (((C9056 - (C9055 + C9054) + C9057) * C19411 +
            (C7835 * C1528 - (C7836 * C1523 + C7837 * C1527) + C7834 * C1524) *
                C29690) *
               C10085 +
           ((C9060 - (C9059 + C9058) + C9061) * C19411 +
            ((C249 * C1075 + C29588 * C1240) * C1528 -
             (C7834 * C1523 + C7835 * C1527) +
             (C249 * C1087 + C29588 * C1246) * C1524) *
                C29690) *
               C29683) *
              C2070) *
         C29532) /
        (p * q * std::sqrt(p + q));
    d2eeyy[33] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C249 * C93 + C29588 * C250) * C151 +
              (C249 * C152 + C29588 * C316) * C29532) *
                 C19411 +
             (C7896 + C7908) * C29690) *
                C10085 +
            ((C322 + C334) * C19411 + C9128 * C29690) * C29683) *
               C1523 -
           (((C2306 + C2300) * C29690 + (C335 + C325) * C19411) * C29683 +
            (C9129 * C29690 + (C334 + C322) * C19411) * C10085) *
               C1524) *
              C2069 +
          (((C9128 * C19411 + (C7901 + C7909) * C29690) * C10085 +
            ((C2300 + C2306) * C19411 +
             ((C249 * C1075 + C29588 * C1240) * C151 +
              (C249 * C1137 + C29588 * C1290) * C29532) *
                 C29690) *
                C29683) *
               C1524 -
           (((C7909 + C7901) * C29690 + C9129 * C19411) * C29683 +
            ((C7910 + C7904) * C29690 + (C7908 + C7896) * C19411) * C10085) *
               C1523) *
              C2070)) /
        (p * q * std::sqrt(p + q));
    d2eeyz[33] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C249 * C93 + C29588 * C250) * C2177 +
             (C249 * C201 + C29588 * C376) * C2069 - C7832 * C2178 -
             C7969 * C2070) *
                C19411 +
            (C7832 * C2177 + C7969 * C2069 - C7837 * C2178 - C7970 * C2070) *
                C29690) *
               C10085 +
           ((C2358 + C2359 - C2360 - C2370) * C19411 +
            (C9196 + C9197 - C9198 - C9199) * C29690) *
               C29683) *
              C29532 * C1523 +
          (((C2360 - (C2359 + C2358) + C2370) * C19411 +
            (C9198 - (C9197 + C9196) + C9199) * C29690) *
               C10085 +
           ((C2365 - (C2364 + C2363) + C2371) * C19411 +
            ((C249 * C1075 + C29588 * C1240) * C2178 -
             (C2369 * C2069 + C2244 * C2177) +
             (C249 * C1190 + C29588 * C1334) * C2070) *
                C29690) *
               C29683) *
              C29532 * C1524)) /
        (p * q * std::sqrt(p + q));
    d2eezx[33] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C19713 * C93 + C19411 * C437 + C19714 * C1072 + C29690 * C1375) *
                C1527 +
            (C19713 * C101 + C19411 * C442 + C19714 * C1078 + C29690 * C1381) *
                C1523 -
            (C19732 + C19733) * C1528 - (C19734 + C19735) * C1524) *
               C10085 +
           ((C19733 + C19732) * C1527 + (C19735 + C19734) * C1523 -
            (C19737 + C19736) * C1528 - (C19739 + C19738) * C1524) *
               C29683) *
              C29588 * C2069 +
          (((C21924 + C21925) * C1528 -
            ((C19714 * C1085 + C29690 * C1382 + C19713 * C1078 +
              C19411 * C1381) *
                 C1523 +
             (C19714 * C1073 + C29690 * C1376 + C19713 * C1072 +
              C19411 * C1375) *
                 C1527) +
            (C21926 + C21927) * C1524) *
               C10085 +
           ((C19713 * C1070 + C19411 * C1373 + C19714 * C1075 +
             C29690 * C1378) *
                C1528 -
            ((C21927 + C21926) * C1523 + (C21925 + C21924) * C1527) +
            (C19713 * C1076 + C19411 * C1379 + C19714 * C1087 +
             C29690 * C1384) *
                C1524) *
               C29683) *
              C29588 * C2070) *
         C29532) /
        (p * q * std::sqrt(p + q));
    d2eezy[33] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C19713 * C93 + C19411 * C437 + C19714 * C1072 + C29690 * C1375) *
                 C151 +
             (C19713 * C152 + C19411 * C503 + C19714 * C1134 + C29690 * C1425) *
                 C29532) *
                C10085 +
            ((C19733 + C19732) * C151 + (C19798 + C19799) * C29532) * C29683) *
               C29588 * C1523 -
           (((C19800 + C19801) * C29532 + (C19737 + C19736) * C151) * C29683 +
            ((C19799 + C19798) * C29532 + (C19732 + C19733) * C151) * C10085) *
               C29588 * C1524) *
              C2069 +
          ((((C21924 + C21925) * C151 + (C21998 + C21999) * C29532) * C10085 +
            ((C19713 * C1070 + C19411 * C1373 + C19714 * C1075 +
              C29690 * C1378) *
                 C151 +
             (C19713 * C1132 + C19411 * C1423 + C19714 * C1137 +
              C29690 * C1428) *
                 C29532) *
                C29683) *
               C29588 * C1524 -
           (((C21999 + C21998) * C29532 + (C21925 + C21924) * C151) * C29683 +
            ((C19714 * C1135 + C29690 * C1426 + C19713 * C1134 +
              C19411 * C1425) *
                 C29532 +
             (C19714 * C1073 + C29690 * C1376 + C19713 * C1072 +
              C19411 * C1375) *
                 C151) *
                C10085) *
               C29588 * C1523) *
              C2070)) /
        (p * q * std::sqrt(p + q));
    d2eezz[33] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C19713 * C93 + C19411 * C437 + C19714 * C1072 + C29690 * C1375) *
                C2177 +
            (C19713 * C201 + C19411 * C562 + C19714 * C1187 + C29690 * C1467) *
                C2069 -
            (C19714 * C1073 + C29690 * C1376 + C19713 * C1072 +
             C19411 * C1375) *
                C2178 -
            (C19714 * C1188 + C29690 * C1468 + C19713 * C1187 +
             C19411 * C1467) *
                C2070) *
               C10085 +
           ((C19733 + C19732) * C2177 + (C19860 + C19861) * C2069 -
            (C21925 + C21924) * C2178 - (C22070 + C22071) * C2070) *
               C29683) *
              C29588 * C29532 * C1523 +
          (((C21924 + C21925) * C2178 -
            ((C19861 + C19860) * C2069 + (C19732 + C19733) * C2177) +
            (C22071 + C22070) * C2070) *
               C10085 +
           ((C19713 * C1070 + C19411 * C1373 + C19714 * C1075 +
             C29690 * C1378) *
                C2178 -
            ((C19862 + C19863) * C2069 + (C19737 + C19736) * C2177) +
            (C19713 * C1185 + C19411 * C1471 + C19714 * C1190 +
             C29690 * C1472) *
                C2070) *
               C29683) *
              C29588 * C29532 * C1524)) /
        (p * q * std::sqrt(p + q));
    d2eexx[34] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C10089 * C93 + C10085 * C98 + C10090 * C94 + C29683 * C99) * C90 +
           (C10089 * C101 + C10085 * C108 + C10090 * C102 + C29683 * C109) *
               C80 -
           (C10090 * C95 + C29683 * C100 + C10089 * C94 + C10085 * C99) * C91 -
           (C10090 * C103 + C29683 * C110 + C10089 * C102 + C10085 * C109) *
               C81 +
           (C10089 * C95 + C10085 * C100 + C10090 * C96 + C29683 * C104) * C92 +
           (C10089 * C103 + C10085 * C110 + C10090 * C105 + C29683 * C111) *
               C82) *
              C29588 * C19411 +
          ((C10089 * C1072 + C10085 * C1081 + C10090 * C1071 + C29683 * C1080) *
               C90 +
           (C10089 * C1078 + C10085 * C1090 + C10090 * C1077 + C29683 * C1089) *
               C80 -
           (C10090 * C1070 + C29683 * C1079 + C10089 * C1071 + C10085 * C1080) *
               C91 -
           (C10090 * C1076 + C29683 * C1088 + C10089 * C1077 + C10085 * C1089) *
               C81 +
           (C10089 * C1070 + C10085 * C1079 + C10090 * C2071 + C29683 * C2072) *
               C92 +
           (C10089 * C1076 + C10085 * C1088 + C10090 * C2073 + C29683 * C2074) *
               C82) *
              C29588 * C29690) *
         C29543 * C29532) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10089 * C93 + C10085 * C98 + C10090 * C94 + C29683 * C99) * C625 +
            (C10089 * C101 + C10085 * C108 + C10090 * C102 + C29683 * C109) *
                C29511) *
               C29588 * C19411 +
           ((C10089 * C1072 + C10085 * C1081 + C10090 * C1071 +
             C29683 * C1080) *
                C625 +
            (C10089 * C1078 + C10085 * C1090 + C10090 * C1077 +
             C29683 * C1089) *
                C29511) *
               C29588 * C29690) *
              C29543 * C622 -
          (((C12824 + C12825) * C29511 + (C12826 + C12827) * C625) * C29588 *
               C29690 +
           ((C10611 + C10610) * C29511 + (C10609 + C10608) * C625) * C29588 *
               C19411) *
              C29543 * C623 +
          (((C10615 + C10614) * C625 + (C10613 + C10612) * C29511) * C29588 *
               C19411 +
           ((C10089 * C5989 + C10085 * C5991 + C10090 * C5990 +
             C29683 * C5992) *
                C625 +
            (C10089 * C5993 + C10085 * C5995 + C10090 * C5994 +
             C29683 * C5996) *
                C29511) *
               C29588 * C29690) *
              C29543 * C624)) /
            (p * q * std::sqrt(p + q));
    d2eexy[34] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10089 * C93 + C10085 * C98 + C10090 * C94 + C29683 * C99) * C151 +
            (C10089 * C152 + C10085 * C157 + C10090 * C153 + C29683 * C158) *
                C29532) *
               C29588 * C19411 +
           ((C10089 * C1072 + C10085 * C1081 + C10090 * C1071 +
             C29683 * C1080) *
                C151 +
            (C10089 * C1134 + C10085 * C1140 + C10090 * C1133 +
             C29683 * C1139) *
                C29532) *
               C29588 * C29690) *
              C80 -
          (((C10090 * C1132 + C29683 * C1138 + C10089 * C1133 +
             C10085 * C1139) *
                C29532 +
            (C10090 * C1070 + C29683 * C1079 + C10089 * C1071 +
             C10085 * C1080) *
                C151) *
               C29588 * C29690 +
           ((C10090 * C154 + C29683 * C159 + C10089 * C153 + C10085 * C158) *
                C29532 +
            (C10090 * C95 + C29683 * C100 + C10089 * C94 + C10085 * C99) *
                C151) *
               C29588 * C19411) *
              C81 +
          (((C10089 * C95 + C10085 * C100 + C10090 * C96 + C29683 * C104) *
                C151 +
            (C10089 * C154 + C10085 * C159 + C10090 * C155 + C29683 * C160) *
                C29532) *
               C29588 * C19411 +
           ((C10089 * C1070 + C10085 * C1079 + C10090 * C2071 +
             C29683 * C2072) *
                C151 +
            (C10089 * C1132 + C10085 * C1138 + C10090 * C2125 +
             C29683 * C2126) *
                C29532) *
               C29588 * C29690) *
              C82) *
         C29543) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C10089 * C93 + C10085 * C98 + C10090 * C94 + C29683 * C99) * C688 +
           (C10089 * C152 + C10085 * C157 + C10090 * C153 + C29683 * C158) *
               C622 -
           (C10609 + C10608) * C689 - (C10674 + C10675) * C623 +
           (C10615 + C10614) * C690 + (C10676 + C10677) * C624) *
              C29588 * C19411 +
          ((C10089 * C1072 + C10085 * C1081 + C10090 * C1071 + C29683 * C1080) *
               C688 +
           (C10089 * C1134 + C10085 * C1140 + C10090 * C1133 + C29683 * C1139) *
               C622 -
           (C12826 + C12827) * C689 - (C12899 + C12898) * C623 +
           (C10089 * C5989 + C10085 * C5991 + C10090 * C5990 + C29683 * C5992) *
               C690 +
           (C10089 * C6075 + C10085 * C6077 + C10090 * C6076 + C29683 * C6078) *
               C624) *
              C29588 * C29690) *
         C29511 * C29543) /
            (p * q * std::sqrt(p + q));
    d2eexz[34] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10089 * C93 + C10085 * C98 + C10090 * C94 + C29683 * C99) * C200 +
            (C10089 * C201 + C10085 * C206 + C10090 * C202 + C29683 * C207) *
                C29543) *
               C29588 * C19411 +
           ((C10089 * C1072 + C10085 * C1081 + C10090 * C1071 +
             C29683 * C1080) *
                C200 +
            (C10089 * C1187 + C10085 * C1193 + C10090 * C1186 +
             C29683 * C1192) *
                C29543) *
               C29588 * C29690) *
              C29532 * C80 -
          (((C10090 * C1185 + C29683 * C1191 + C10089 * C1186 +
             C10085 * C1192) *
                C29543 +
            (C10090 * C1070 + C29683 * C1079 + C10089 * C1071 +
             C10085 * C1080) *
                C200) *
               C29588 * C29690 +
           ((C10090 * C203 + C29683 * C208 + C10089 * C202 + C10085 * C207) *
                C29543 +
            (C10090 * C95 + C29683 * C100 + C10089 * C94 + C10085 * C99) *
                C200) *
               C29588 * C19411) *
              C29532 * C81 +
          (((C10089 * C95 + C10085 * C100 + C10090 * C96 + C29683 * C104) *
                C200 +
            (C10089 * C203 + C10085 * C208 + C10090 * C204 + C29683 * C209) *
                C29543) *
               C29588 * C19411 +
           ((C10089 * C1070 + C10085 * C1079 + C10090 * C2071 +
             C29683 * C2072) *
                C200 +
            (C10089 * C1185 + C10085 * C1191 + C10090 * C2179 +
             C29683 * C2180) *
                C29543) *
               C29588 * C29690) *
              C29532 * C82)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10089 * C93 + C10085 * C98 + C10090 * C94 + C29683 * C99) * C200 +
            (C10089 * C201 + C10085 * C206 + C10090 * C202 + C29683 * C207) *
                C29543) *
               C29588 * C19411 +
           ((C10089 * C1072 + C10085 * C1081 + C10090 * C1071 +
             C29683 * C1080) *
                C200 +
            (C10089 * C1187 + C10085 * C1193 + C10090 * C1186 +
             C29683 * C1192) *
                C29543) *
               C29588 * C29690) *
              C622 -
          (((C12970 + C12971) * C29543 + (C12826 + C12827) * C200) * C29588 *
               C29690 +
           ((C10737 + C10736) * C29543 + (C10609 + C10608) * C200) * C29588 *
               C19411) *
              C623 +
          (((C10615 + C10614) * C200 + (C10739 + C10738) * C29543) * C29588 *
               C19411 +
           ((C10089 * C5989 + C10085 * C5991 + C10090 * C5990 +
             C29683 * C5992) *
                C200 +
            (C10089 * C6151 + C10085 * C6153 + C10090 * C6152 +
             C29683 * C6154) *
                C29543) *
               C29588 * C29690) *
              C624) *
         C29511) /
            (p * q * std::sqrt(p + q));
    d2eeyx[34] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C249 * C93 + C29588 * C250) * C90 +
            (C249 * C101 + C29588 * C255) * C80 - C273 * C91 - C274 * C81 +
            C275 * C92 + C276 * C82) *
               C19411 +
           (C7832 * C90 + C7833 * C80 - C2242 * C91 - C2243 * C81 +
            C2244 * C92 + C2245 * C82) *
               C29690) *
              C10085 +
          ((C273 * C90 + C274 * C80 - C275 * C91 - C276 * C81 + C277 * C92 +
            C278 * C82) *
               C19411 +
           (C2242 * C90 + C2243 * C80 - C2244 * C91 - C2245 * C81 +
            (C249 * C2071 + C29588 * C2231) * C92 +
            (C249 * C2073 + C29588 * C2232) * C82) *
               C29690) *
              C29683) *
         C29543 * C29532) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C249 * C93 + C29588 * C250) * C625 +
             (C249 * C101 + C29588 * C255) * C29511) *
                C19411 +
            (C7838 + C7839) * C29690) *
               C10085 +
           ((C273 * C625 + C274 * C29511) * C19411 + (C7822 + C7823) * C29690) *
               C29683) *
              C29543 * C622 -
          (((C9691 + C9690) * C29690 +
            (C1701 * C29511 + C1700 * C625) * C19411) *
               C29683 +
           ((C9695 + C9694) * C29690 + ((C249 * C634 + C29588 * C799) * C29511 +
                                        (C249 * C628 + C29588 * C793) * C625) *
                                           C19411) *
               C10085) *
              C29543 * C623 +
          ((((C249 * C629 + C29588 * C794) * C625 +
             (C249 * C641 + C29588 * C800) * C29511) *
                C19411 +
            ((C249 * C5989 + C29588 * C6227) * C625 +
             (C249 * C5993 + C29588 * C6229) * C29511) *
                C29690) *
               C10085 +
           (((C249 * C630 + C29588 * C795) * C625 +
             (C249 * C642 + C29588 * C801) * C29511) *
                C19411 +
            ((C249 * C5990 + C29588 * C6228) * C625 +
             (C249 * C5994 + C29588 * C6230) * C29511) *
                C29690) *
               C29683) *
              C29543 * C624)) /
            (p * q * std::sqrt(p + q));
    d2eeyy[34] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C249 * C93 + C29588 * C250) * C151 +
             (C249 * C152 + C29588 * C316) * C29532) *
                C19411 +
            (C7896 + C7908) * C29690) *
               C10085 +
           ((C322 + C334) * C19411 + C9128 * C29690) * C29683) *
              C80 -
          (((C2306 + C2300) * C29690 + (C335 + C325) * C19411) * C29683 +
           (C9129 * C29690 + (C334 + C322) * C19411) * C10085) *
              C81 +
          ((C337 * C19411 + (C2300 + C2306) * C29690) * C10085 +
           ((C330 + C336) * C19411 +
            ((C249 * C2071 + C29588 * C2231) * C151 +
             (C249 * C2125 + C29588 * C2295) * C29532) *
                C29690) *
               C29683) *
              C82) *
         C29543) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C249 * C93 + C29588 * C250) * C688 +
            (C249 * C152 + C29588 * C316) * C622 -
            (C249 * C628 + C29588 * C793) * C689 -
            (C249 * C693 + C29588 * C841) * C623 +
            (C249 * C629 + C29588 * C794) * C690 +
            (C249 * C694 + C29588 * C842) * C624) *
               C19411 +
           (C7832 * C688 + C7905 * C622 - C9692 * C689 - C9767 * C623 +
            (C249 * C5989 + C29588 * C6227) * C690 +
            (C249 * C6075 + C29588 * C6297) * C624) *
               C29690) *
              C10085 +
          ((C273 * C688 + C331 * C622 - C1700 * C689 - C1765 * C623 +
            (C249 * C630 + C29588 * C795) * C690 +
            (C249 * C695 + C29588 * C844) * C624) *
               C19411 +
           (C2242 * C688 + C2303 * C622 - C8398 * C689 - C8471 * C623 +
            (C249 * C5990 + C29588 * C6228) * C690 +
            (C249 * C6076 + C29588 * C6298) * C624) *
               C29690) *
              C29683) *
         C29511 * C29543) /
            (p * q * std::sqrt(p + q));
    d2eeyz[34] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C249 * C93 + C29588 * C250) * C200 +
             (C249 * C201 + C29588 * C376) * C29543) *
                C19411 +
            (C7832 * C200 + C7969 * C29543) * C29690) *
               C10085 +
           ((C382 + C394) * C19411 + (C6896 + C6897) * C29690) * C29683) *
              C29532 * C80 -
          (((C6898 + C6899) * C29690 + (C395 + C385) * C19411) * C29683 +
           ((C6897 + C6896) * C29690 + (C394 + C382) * C19411) * C10085) *
              C29532 * C81 +
          ((C397 * C19411 + (C6899 + C6898) * C29690) * C10085 +
           ((C390 + C396) * C19411 +
            ((C249 * C2071 + C29588 * C2231) * C200 +
             (C249 * C2179 + C29588 * C2356) * C29543) *
                C29690) *
               C29683) *
              C29532 * C82)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C249 * C93 + C29588 * C250) * C200 +
             (C249 * C201 + C29588 * C376) * C29543) *
                C19411 +
            (C7832 * C200 + C7969 * C29543) * C29690) *
               C10085 +
           ((C382 + C394) * C19411 + (C6896 + C6897) * C29690) * C29683) *
              C622 -
          (((C8543 + C8541) * C29690 + (C1829 + C1825) * C19411) * C29683 +
           ((C9837 * C29543 + C9692 * C200) * C29690 +
            ((C249 * C743 + C29588 * C887) * C29543 +
             (C249 * C628 + C29588 * C793) * C200) *
                C19411) *
               C10085) *
              C623 +
          ((((C249 * C629 + C29588 * C794) * C200 +
             (C249 * C744 + C29588 * C888) * C29543) *
                C19411 +
            ((C249 * C5989 + C29588 * C6227) * C200 +
             (C249 * C6151 + C29588 * C6365) * C29543) *
                C29690) *
               C10085 +
           (((C249 * C630 + C29588 * C795) * C200 +
             (C249 * C745 + C29588 * C889) * C29543) *
                C19411 +
            ((C249 * C5990 + C29588 * C6228) * C200 +
             (C249 * C6152 + C29588 * C6366) * C29543) *
                C29690) *
               C29683) *
              C624) *
         C29511) /
            (p * q * std::sqrt(p + q));
    d2eezx[34] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C19713 * C93 + C19411 * C437 + C19714 * C1072 + C29690 * C1375) *
               C90 +
           (C19713 * C101 + C19411 * C442 + C19714 * C1078 + C29690 * C1381) *
               C80 -
           (C19732 + C19733) * C91 - (C19734 + C19735) * C81 +
           (C19736 + C19737) * C92 + (C19738 + C19739) * C82) *
              C10085 +
          ((C19733 + C19732) * C90 + (C19735 + C19734) * C80 -
           (C19737 + C19736) * C91 - (C19739 + C19738) * C81 +
           (C19713 * C96 + C19411 * C440 + C19714 * C2071 + C29690 * C2421) *
               C92 +
           (C19713 * C105 + C19411 * C445 + C19714 * C2073 + C29690 * C2422) *
               C82) *
              C29683) *
         C29588 * C29543 * C29532) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19713 * C93 + C19411 * C437 + C19714 * C1072 + C29690 * C1375) *
                C625 +
            (C19713 * C101 + C19411 * C442 + C19714 * C1078 + C29690 * C1381) *
                C29511) *
               C10085 +
           ((C19733 + C19732) * C625 + (C19735 + C19734) * C29511) * C29683) *
              C29588 * C29543 * C622 -
          (((C19714 * C2618 + C29690 * C2951 + C19713 * C633 + C19411 * C936) *
                C29511 +
            (C19714 * C2612 + C29690 * C2948 + C19713 * C627 + C19411 * C930) *
                C625) *
               C29683 +
           ((C19714 * C2617 + C29690 * C2950 + C19713 * C634 + C19411 * C937) *
                C29511 +
            (C19714 * C2611 + C29690 * C2947 + C19713 * C628 + C19411 * C931) *
                C625) *
               C10085) *
              C29588 * C29543 * C623 +
          (((C19713 * C629 + C19411 * C932 + C19714 * C5989 + C29690 * C6433) *
                C625 +
            (C19713 * C641 + C19411 * C938 + C19714 * C5993 + C29690 * C6435) *
                C29511) *
               C10085 +
           ((C19713 * C630 + C19411 * C933 + C19714 * C5990 + C29690 * C6434) *
                C625 +
            (C19713 * C642 + C19411 * C939 + C19714 * C5994 + C29690 * C6436) *
                C29511) *
               C29683) *
              C29588 * C29543 * C624)) /
            (p * q * std::sqrt(p + q));
    d2eezy[34] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19713 * C93 + C19411 * C437 + C19714 * C1072 + C29690 * C1375) *
                C151 +
            (C19713 * C152 + C19411 * C503 + C19714 * C1134 + C29690 * C1425) *
                C29532) *
               C10085 +
           ((C19733 + C19732) * C151 + (C19798 + C19799) * C29532) * C29683) *
              C29588 * C80 -
          (((C19800 + C19801) * C29532 + (C19737 + C19736) * C151) * C29683 +
           ((C19799 + C19798) * C29532 + (C19732 + C19733) * C151) * C10085) *
              C29588 * C81 +
          (((C19736 + C19737) * C151 + (C19801 + C19800) * C29532) * C10085 +
           ((C19713 * C96 + C19411 * C440 + C19714 * C2071 + C29690 * C2421) *
                C151 +
            (C19713 * C155 + C19411 * C506 + C19714 * C2125 + C29690 * C2485) *
                C29532) *
               C29683) *
              C29588 * C82) *
         C29543) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C19713 * C93 + C19411 * C437 + C19714 * C1072 + C29690 * C1375) *
               C688 +
           (C19713 * C152 + C19411 * C503 + C19714 * C1134 + C29690 * C1425) *
               C622 -
           (C19714 * C2611 + C29690 * C2947 + C19713 * C628 + C19411 * C931) *
               C689 -
           (C19714 * C2673 + C29690 * C3003 + C19713 * C693 + C19411 * C979) *
               C623 +
           (C19713 * C629 + C19411 * C932 + C19714 * C5989 + C29690 * C6433) *
               C690 +
           (C19713 * C694 + C19411 * C980 + C19714 * C6075 + C29690 * C6513) *
               C624) *
              C10085 +
          ((C19733 + C19732) * C688 + (C19798 + C19799) * C622 -
           (C19714 * C2612 + C29690 * C2948 + C19713 * C627 + C19411 * C930) *
               C689 -
           (C19714 * C2674 + C29690 * C3004 + C19713 * C692 + C19411 * C981) *
               C623 +
           (C19713 * C630 + C19411 * C933 + C19714 * C5990 + C29690 * C6434) *
               C690 +
           (C19713 * C695 + C19411 * C982 + C19714 * C6076 + C29690 * C6514) *
               C624) *
              C29683) *
         C29588 * C29511 * C29543) /
            (p * q * std::sqrt(p + q));
    d2eezz[34] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19713 * C93 + C19411 * C437 + C19714 * C1072 + C29690 * C1375) *
                C200 +
            (C19713 * C201 + C19411 * C562 + C19714 * C1187 + C29690 * C1467) *
                C29543) *
               C10085 +
           ((C19733 + C19732) * C200 + (C19860 + C19861) * C29543) * C29683) *
              C29588 * C29532 * C80 -
          (((C19862 + C19863) * C29543 + (C19737 + C19736) * C200) * C29683 +
           ((C19861 + C19860) * C29543 + (C19732 + C19733) * C200) * C10085) *
              C29588 * C29532 * C81 +
          (((C19736 + C19737) * C200 + (C19863 + C19862) * C29543) * C10085 +
           ((C19713 * C96 + C19411 * C440 + C19714 * C2071 + C29690 * C2421) *
                C200 +
            (C19713 * C204 + C19411 * C565 + C19714 * C2179 + C29690 * C2546) *
                C29543) *
               C29683) *
              C29588 * C29532 * C82)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19713 * C93 + C19411 * C437 + C19714 * C1072 + C29690 * C1375) *
                C200 +
            (C19713 * C201 + C19411 * C562 + C19714 * C1187 + C29690 * C1467) *
                C29543) *
               C10085 +
           ((C19733 + C19732) * C200 + (C19860 + C19861) * C29543) * C29683) *
              C29588 * C622 -
          (((C19714 * C2730 + C29690 * C3057 + C19713 * C742 + C19411 * C1024) *
                C29543 +
            (C19714 * C2612 + C29690 * C2948 + C19713 * C627 + C19411 * C930) *
                C200) *
               C29683 +
           ((C19714 * C2729 + C29690 * C3056 + C19713 * C743 + C19411 * C1025) *
                C29543 +
            (C19714 * C2611 + C29690 * C2947 + C19713 * C628 + C19411 * C931) *
                C200) *
               C10085) *
              C29588 * C623 +
          (((C19713 * C629 + C19411 * C932 + C19714 * C5989 + C29690 * C6433) *
                C200 +
            (C19713 * C744 + C19411 * C1026 + C19714 * C6151 + C29690 * C6584) *
                C29543) *
               C10085 +
           ((C19713 * C630 + C19411 * C933 + C19714 * C5990 + C29690 * C6434) *
                C200 +
            (C19713 * C745 + C19411 * C1027 + C19714 * C6152 + C29690 * C6585) *
                C29543) *
               C29683) *
              C29588 * C624) *
         C29511) /
            (p * q * std::sqrt(p + q));
    d2eexx[35] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C13409 * C93 + C29499 * C98) * C1527 +
                       (C13409 * C101 + C29499 * C108) * C1523 -
                       (C13409 * C94 + C29499 * C99) * C1528 -
                       (C13409 * C102 + C29499 * C109) * C1524) *
                          C3111 +
                      (C14554 + C14555 - C14570 - C14571) * C29688) *
                         C19411 +
                     ((C18158 + C18159 - C18166 - C18167) * C3111 +
                      (C17546 + C17547 - C17554 - C17555) * C29688) *
                         C29690) *
                        C29543 * C1525 +
                    (((C14570 - (C14555 + C14554) + C14571) * C3111 +
                      (C14572 - (C14561 + C14560) + C14573) * C29688) *
                         C19411 +
                     ((C17554 - (C17547 + C17546) + C17555) * C3111 +
                      ((C13409 * C5990 + C29499 * C5992) * C1528 -
                       (C15506 * C1523 + C15507 * C1527) +
                       (C13409 * C5994 + C29499 * C5996) * C1524) *
                          C29688) *
                         C29690) *
                        C29543 * C1526)) /
                  (p * q * std::sqrt(p + q));
    d2eexy[35] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C13409 * C93 + C29499 * C98) * C1583 +
                       (C13409 * C152 + C29499 * C157) * C1525 -
                       C13772 * C1584 - C13831 * C1526) *
                          C3111 +
                      (C13772 * C1583 + C13831 * C1525 - C13774 * C1584 -
                       C13832 * C1526) *
                          C29688) *
                         C19411 +
                     ((C18840 + C18841 - C18842 - C18843) * C3111 +
                      (C18844 + C18845 - C18846 - C18847) * C29688) *
                         C29690) *
                        C1523 +
                    (((C14566 * C1584 -
                       ((C13409 * C153 + C29499 * C158) * C1525 +
                        (C13409 * C94 + C29499 * C99) * C1583) +
                       C14628 * C1526) *
                          C3111 +
                      (C14568 * C1584 - (C14628 * C1525 + C14566 * C1583) +
                       C14629 * C1526) *
                          C29688) *
                         C19411 +
                     ((C17552 * C1584 - (C18239 * C1525 + C18164 * C1583) +
                       C17624 * C1526) *
                          C3111 +
                      ((C13409 * C5990 + C29499 * C5992) * C1584 -
                       (C17624 * C1525 + C17552 * C1583) +
                       (C13409 * C6076 + C29499 * C6078) * C1526) *
                          C29688) *
                         C29690) *
                        C1524) *
                   C29543) /
                  (p * q * std::sqrt(p + q));
    d2eexz[35] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C13409 * C93 + C29499 * C98) * C200 +
              (C13409 * C201 + C29499 * C206) * C29543) *
                 C3111 +
             (C13874 + C13886) * C29688) *
                C19411 +
            ((C16982 * C200 + C17121 * C29543) * C3111 +
             (C16564 + C16565) * C29688) *
                C29690) *
               C1525 -
           (((C16566 + C16567) * C29688 + (C16565 + C16564) * C3111) * C29690 +
            ((C13887 + C13877) * C29688 + (C13886 + C13874) * C3111) * C19411) *
               C1526) *
              C1523 +
          ((((C14680 + C14688) * C3111 + (C14683 + C14689) * C29688) * C19411 +
            ((C17691 + C17695) * C3111 +
             ((C13409 * C5990 + C29499 * C5992) * C200 +
              (C13409 * C6152 + C29499 * C6154) * C29543) *
                 C29688) *
                C29690) *
               C1526 -
           (((C17695 + C17691) * C29688 +
             (C18309 * C29543 + C18164 * C200) * C3111) *
                C29690 +
            ((C14688 + C14680) * C29688 +
             ((C13409 * C202 + C29499 * C207) * C29543 +
              (C13409 * C94 + C29499 * C99) * C200) *
                 C3111) *
                C19411) *
               C1525) *
              C1524)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[35] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C3265 * C93 + C3111 * C250 + C3266 * C628 + C29688 * C793) *
                C1527 +
            (C3265 * C101 + C3111 * C255 + C3266 * C634 + C29688 * C799) *
                C1523 -
            (C3284 + C3285) * C1528 - (C3286 + C3287) * C1524) *
               C19411 +
           ((C23830 + C23831) * C1527 + (C23832 + C23833) * C1523 -
            (C5561 + C5560) * C1528 - (C5563 + C5562) * C1524) *
               C29690) *
              C29499 * C29543 * C1525 +
          (((C4928 + C4929) * C1528 -
            ((C3266 * C641 + C29688 * C800 + C3265 * C634 + C3111 * C799) *
                 C1523 +
             (C3266 * C629 + C29688 * C794 + C3265 * C628 + C3111 * C793) *
                 C1527) +
            (C4930 + C4931) * C1524) *
               C19411 +
           ((C3265 * C2612 + C3111 * C2786 + C3266 * C5990 + C29688 * C6228) *
                C1528 -
            ((C3266 * C5993 + C29688 * C6229 + C3265 * C2617 + C3111 * C2788) *
                 C1523 +
             (C3266 * C5989 + C29688 * C6227 + C3265 * C2611 + C3111 * C2785) *
                 C1527) +
            (C3265 * C2618 + C3111 * C2789 + C3266 * C5994 + C29688 * C6230) *
                C1524) *
               C29690) *
              C29499 * C29543 * C1526)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[35] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C3265 * C93 + C3111 * C250 + C3266 * C628 + C29688 * C793) *
                C1583 +
            (C3265 * C152 + C3111 * C316 + C3266 * C693 + C29688 * C841) *
                C1525 -
            (C3266 * C629 + C29688 * C794 + C3265 * C628 + C3111 * C793) *
                C1584 -
            (C3266 * C694 + C29688 * C842 + C3265 * C693 + C3111 * C841) *
                C1526) *
               C19411 +
           ((C23830 + C23831) * C1583 + (C23896 + C23897) * C1525 -
            (C3266 * C5989 + C29688 * C6227 + C3265 * C2611 + C3111 * C2785) *
                C1584 -
            (C3266 * C6075 + C29688 * C6297 + C3265 * C2673 + C3111 * C2841) *
                C1526) *
               C29690) *
              C29499 * C1523 +
          (((C4928 + C4929) * C1584 -
            ((C3351 + C3350) * C1525 + (C3284 + C3285) * C1583) +
            (C5003 + C5002) * C1526) *
               C19411 +
           ((C3265 * C2612 + C3111 * C2786 + C3266 * C5990 + C29688 * C6228) *
                C1584 -
            ((C5635 + C5634) * C1525 + (C5561 + C5560) * C1583) +
            (C3265 * C2674 + C3111 * C2842 + C3266 * C6076 + C29688 * C6298) *
                C1526) *
               C29690) *
              C29499 * C1524) *
         C29543) /
        (p * q * std::sqrt(p + q));
    d2eeyz[35] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C3265 * C93 + C3111 * C250 + C3266 * C628 + C29688 * C793) *
                 C200 +
             (C3265 * C201 + C3111 * C376 + C3266 * C743 + C29688 * C887) *
                 C29543) *
                C19411 +
            ((C23830 + C23831) * C200 + (C23959 + C23958) * C29543) * C29690) *
               C29499 * C1525 -
           (((C3266 * C6151 + C29688 * C6365 + C3265 * C2729 + C3111 * C2894) *
                 C29543 +
             (C3266 * C5989 + C29688 * C6227 + C3265 * C2611 + C3111 * C2785) *
                 C200) *
                C29690 +
            ((C3266 * C744 + C29688 * C888 + C3265 * C743 + C3111 * C887) *
                 C29543 +
             (C3266 * C629 + C29688 * C794 + C3265 * C628 + C3111 * C793) *
                 C200) *
                C19411) *
               C29499 * C1526) *
              C1523 +
          ((((C4928 + C4929) * C200 + (C5075 + C5074) * C29543) * C19411 +
            ((C3265 * C2612 + C3111 * C2786 + C3266 * C5990 + C29688 * C6228) *
                 C200 +
             (C3265 * C2730 + C3111 * C2895 + C3266 * C6152 + C29688 * C6366) *
                 C29543) *
                C29690) *
               C29499 * C1526 -
           (((C5706 + C5707) * C29543 + (C5561 + C5560) * C200) * C29690 +
            ((C3413 + C3412) * C29543 + (C3284 + C3285) * C200) * C19411) *
               C29499 * C1525) *
              C1524)) /
        (p * q * std::sqrt(p + q));
    d2eezx[35] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C19713 * C93 + C19411 * C437 + C19714 * C1072 + C29690 * C1375) *
                C1527 +
            (C19713 * C101 + C19411 * C442 + C19714 * C1078 + C29690 * C1381) *
                C1523 -
            (C19732 + C19733) * C1528 - (C19734 + C19735) * C1524) *
               C29499 * C3111 +
           ((C23482 + C23483) * C1527 + (C23484 + C23485) * C1523 -
            (C21283 + C21282) * C1528 - (C21285 + C21284) * C1524) *
               C29499 * C29688) *
              C29543 * C1525 +
          (((C21282 + C21283) * C1528 -
            ((C23485 + C23484) * C1523 + (C23483 + C23482) * C1527) +
            (C21284 + C21285) * C1524) *
               C29499 * C3111 +
           ((C19713 * C630 + C19411 * C933 + C19714 * C5990 + C29690 * C6434) *
                C1528 -
            ((C23486 + C23487) * C1523 + (C23488 + C23489) * C1527) +
            (C19713 * C642 + C19411 * C939 + C19714 * C5994 + C29690 * C6436) *
                C1524) *
               C29499 * C29688) *
              C29543 * C1526)) /
        (p * q * std::sqrt(p + q));
    d2eezy[35] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C19713 * C93 + C19411 * C437 + C19714 * C1072 + C29690 * C1375) *
                C1583 +
            (C19713 * C152 + C19411 * C503 + C19714 * C1134 + C29690 * C1425) *
                C1525 -
            (C23483 + C23482) * C1584 - (C23548 + C23549) * C1526) *
               C29499 * C3111 +
           ((C23482 + C23483) * C1583 + (C23549 + C23548) * C1525 -
            (C23488 + C23489) * C1584 - (C23551 + C23550) * C1526) *
               C29499 * C29688) *
              C1523 +
          (((C21282 + C21283) * C1584 -
            ((C19799 + C19798) * C1525 + (C19732 + C19733) * C1583) +
            (C21357 + C21356) * C1526) *
               C29499 * C3111 +
           ((C19713 * C630 + C19411 * C933 + C19714 * C5990 + C29690 * C6434) *
                C1584 -
            ((C21356 + C21357) * C1525 + (C21283 + C21282) * C1583) +
            (C19713 * C695 + C19411 * C982 + C19714 * C6076 + C29690 * C6514) *
                C1526) *
               C29499 * C29688) *
              C1524) *
         C29543) /
        (p * q * std::sqrt(p + q));
    d2eezz[35] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C19713 * C93 + C19411 * C437 + C19714 * C1072 + C29690 * C1375) *
                 C200 +
             (C19713 * C201 + C19411 * C562 + C19714 * C1187 + C29690 * C1467) *
                 C29543) *
                C29499 * C3111 +
            ((C23482 + C23483) * C200 + (C23610 + C23611) * C29543) * C29499 *
                C29688) *
               C1525 -
           (((C23612 + C23613) * C29543 + (C23488 + C23489) * C200) * C29499 *
                C29688 +
            ((C23611 + C23610) * C29543 + (C23483 + C23482) * C200) * C29499 *
                C3111) *
               C1526) *
              C1523 +
          ((((C21282 + C21283) * C200 + (C21429 + C21428) * C29543) * C29499 *
                C3111 +
            ((C19713 * C630 + C19411 * C933 + C19714 * C5990 + C29690 * C6434) *
                 C200 +
             (C19713 * C745 + C19411 * C1027 + C19714 * C6152 +
              C29690 * C6585) *
                 C29543) *
                C29499 * C29688) *
               C1526 -
           (((C21428 + C21429) * C29543 + (C21283 + C21282) * C200) * C29499 *
                C29688 +
            ((C19861 + C19860) * C29543 + (C19732 + C19733) * C200) * C29499 *
                C3111) *
               C1525) *
              C1524)) /
        (p * q * std::sqrt(p + q));
    d2eexx[36] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C13409 * C93 + C29499 * C98) * C625 +
              (C13409 * C101 + C29499 * C108) * C29511) *
                 C3111 +
             (C13778 + C13779) * C29688) *
                C19411 +
            ((C16988 + C16989) * C3111 + C18772 * C29688) * C29690) *
               C2069 -
           (((C16990 + C16991) * C29688 + (C16992 + C16993) * C3111) * C29690 +
            (C18773 * C29688 + (C16989 + C16988) * C3111) * C19411) *
               C2070) *
              C1525 +
          (((C18772 * C3111 + (C15511 + C15510) * C29688) * C19411 +
            ((C16991 + C16990) * C3111 +
             ((C13409 * C14183 + C29499 * C14184) * C625 +
              (C13409 * C14185 + C29499 * C14186) * C29511) *
                 C29688) *
                C29690) *
               C2070 -
           (((C15510 + C15511) * C29688 + C18773 * C3111) * C29690 +
            ((C13781 + C13780) * C29688 + (C13779 + C13778) * C3111) * C19411) *
               C2069) *
              C1526)) /
        (p * q * std::sqrt(p + q));
    d2eexy[36] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C13409 * C93 + C29499 * C98) * C1583 +
                       (C13409 * C152 + C29499 * C157) * C1525 -
                       C13772 * C1584 - C13831 * C1526) *
                          C3111 +
                      (C13772 * C1583 + C13831 * C1525 - C13774 * C1584 -
                       C13832 * C1526) *
                          C29688) *
                         C19411 +
                     ((C18840 + C18841 - C18842 - C18843) * C3111 +
                      (C18844 + C18845 - C18846 - C18847) * C29688) *
                         C29690) *
                        C29511 * C2069 +
                    (((C18842 - (C18841 + C18840) + C18843) * C3111 +
                      (C18846 - (C18845 + C18844) + C18847) * C29688) *
                         C19411 +
                     ((C16985 * C1584 - (C17059 * C1525 + C16987 * C1583) +
                       C17058 * C1526) *
                          C3111 +
                      ((C13409 * C14183 + C29499 * C14184) * C1584 -
                       (C17058 * C1525 + C16985 * C1583) +
                       (C13409 * C14225 + C29499 * C14226) * C1526) *
                          C29688) *
                         C29690) *
                        C29511 * C2070)) /
                  (p * q * std::sqrt(p + q));
    d2eexz[36] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C13409 * C93 + C29499 * C98) * C2177 +
                       (C13409 * C201 + C29499 * C206) * C2069 -
                       C16982 * C2178 - C17121 * C2070) *
                          C3111 +
                      (C15624 + C15625 - C15626 - C15636) * C29688) *
                         C19411 +
                     ((C16982 * C2177 + C17121 * C2069 - C16987 * C2178 -
                       C17122 * C2070) *
                          C3111 +
                      (C18914 + C18915 - C18916 - C18917) * C29688) *
                         C29690) *
                        C1525 +
                    (((C15626 - (C15625 + C15624) + C15636) * C3111 +
                      (C15631 - (C15630 + C15629) + C15637) * C29688) *
                         C19411 +
                     ((C18916 - (C18915 + C18914) + C18917) * C3111 +
                      ((C13409 * C14183 + C29499 * C14184) * C2178 -
                       (C15635 * C2069 + C15507 * C2177) +
                       (C13409 * C14265 + C29499 * C14266) * C2070) *
                          C29688) *
                         C29690) *
                        C1526) *
                   C29511) /
                  (p * q * std::sqrt(p + q));
    d2eeyx[36] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C3265 * C93 + C3111 * C250 + C3266 * C628 + C29688 * C793) *
                 C625 +
             (C3265 * C101 + C3111 * C255 + C3266 * C634 + C29688 * C799) *
                 C29511) *
                C19411 +
            ((C23830 + C23831) * C625 + (C23832 + C23833) * C29511) * C29690) *
               C29499 * C2069 -
           (((C23834 + C23835) * C29511 + (C23836 + C23837) * C625) * C29690 +
            ((C23833 + C23832) * C29511 + (C23831 + C23830) * C625) * C19411) *
               C29499 * C2070) *
              C1525 +
          ((((C25572 + C25573) * C625 + (C25574 + C25575) * C29511) * C19411 +
            ((C3265 * C4199 + C3111 * C4365 + C3266 * C14183 +
              C29688 * C14305) *
                 C625 +
             (C3265 * C4203 + C3111 * C4367 + C3266 * C14185 +
              C29688 * C14306) *
                 C29511) *
                C29690) *
               C29499 * C2070 -
           (((C25575 + C25574) * C29511 + (C25573 + C25572) * C625) * C29690 +
            ((C3266 * C641 + C29688 * C800 + C3265 * C634 + C3111 * C799) *
                 C29511 +
             (C3266 * C629 + C29688 * C794 + C3265 * C628 + C3111 * C793) *
                 C625) *
                C19411) *
               C29499 * C2069) *
              C1526)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[36] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C3265 * C93 + C3111 * C250 + C3266 * C628 + C29688 * C793) *
                C1583 +
            (C3265 * C152 + C3111 * C316 + C3266 * C693 + C29688 * C841) *
                C1525 -
            (C3266 * C629 + C29688 * C794 + C3265 * C628 + C3111 * C793) *
                C1584 -
            (C3266 * C694 + C29688 * C842 + C3265 * C693 + C3111 * C841) *
                C1526) *
               C19411 +
           ((C23830 + C23831) * C1583 + (C23896 + C23897) * C1525 -
            (C25573 + C25572) * C1584 - (C25646 + C25647) * C1526) *
               C29690) *
              C29499 * C29511 * C2069 +
          (((C25572 + C25573) * C1584 -
            ((C23897 + C23896) * C1525 + (C23831 + C23830) * C1583) +
            (C25647 + C25646) * C1526) *
               C19411 +
           ((C3265 * C4199 + C3111 * C4365 + C3266 * C14183 + C29688 * C14305) *
                C1584 -
            ((C23898 + C23899) * C1525 + (C23836 + C23837) * C1583) +
            (C3265 * C4257 + C3111 * C4419 + C3266 * C14225 + C29688 * C14345) *
                C1526) *
               C29690) *
              C29499 * C29511 * C2070)) /
        (p * q * std::sqrt(p + q));
    d2eeyz[36] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C3265 * C93 + C3111 * C250 + C3266 * C628 + C29688 * C793) *
                C2177 +
            (C3265 * C201 + C3111 * C376 + C3266 * C743 + C29688 * C887) *
                C2069 -
            (C23831 + C23830) * C2178 - (C23958 + C23959) * C2070) *
               C19411 +
           ((C23830 + C23831) * C2177 + (C23959 + C23958) * C2069 -
            (C23836 + C23837) * C2178 - (C23961 + C23960) * C2070) *
               C29690) *
              C29499 * C1525 +
          (((C25572 + C25573) * C2178 -
            ((C3266 * C744 + C29688 * C888 + C3265 * C743 + C3111 * C887) *
                 C2069 +
             (C3266 * C629 + C29688 * C794 + C3265 * C628 + C3111 * C793) *
                 C2177) +
            (C25718 + C25719) * C2070) *
               C19411 +
           ((C3265 * C4199 + C3111 * C4365 + C3266 * C14183 + C29688 * C14305) *
                C2178 -
            ((C25719 + C25718) * C2069 + (C25573 + C25572) * C2177) +
            (C3265 * C4311 + C3111 * C4471 + C3266 * C14265 + C29688 * C14384) *
                C2070) *
               C29690) *
              C29499 * C1526) *
         C29511) /
        (p * q * std::sqrt(p + q));
    d2eezx[36] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C19713 * C93 + C19411 * C437 + C19714 * C1072 + C29690 * C1375) *
                 C625 +
             (C19713 * C101 + C19411 * C442 + C19714 * C1078 + C29690 * C1381) *
                 C29511) *
                C29499 * C3111 +
            ((C23482 + C23483) * C625 + (C23484 + C23485) * C29511) * C29499 *
                C29688) *
               C2069 -
           (((C25794 + C25795) * C29511 + (C25796 + C25797) * C625) * C29499 *
                C29688 +
            ((C19714 * C1085 + C29690 * C1382 + C19713 * C1078 +
              C19411 * C1381) *
                 C29511 +
             (C19714 * C1073 + C29690 * C1376 + C19713 * C1072 +
              C19411 * C1375) *
                 C625) *
                C29499 * C3111) *
               C2070) *
              C1525 +
          ((((C25797 + C25796) * C625 + (C25795 + C25794) * C29511) * C29499 *
                C3111 +
            ((C19713 * C5989 + C19411 * C6433 + C19714 * C14183 +
              C29690 * C14423) *
                 C625 +
             (C19713 * C5993 + C19411 * C6435 + C19714 * C14185 +
              C29690 * C14424) *
                 C29511) *
                C29499 * C29688) *
               C2070 -
           (((C23486 + C23487) * C29511 + (C23488 + C23489) * C625) * C29499 *
                C29688 +
            ((C23485 + C23484) * C29511 + (C23483 + C23482) * C625) * C29499 *
                C3111) *
               C2069) *
              C1526)) /
        (p * q * std::sqrt(p + q));
    d2eezy[36] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C19713 * C93 + C19411 * C437 + C19714 * C1072 + C29690 * C1375) *
                C1583 +
            (C19713 * C152 + C19411 * C503 + C19714 * C1134 + C29690 * C1425) *
                C1525 -
            (C23483 + C23482) * C1584 - (C23548 + C23549) * C1526) *
               C29499 * C3111 +
           ((C23482 + C23483) * C1583 + (C23549 + C23548) * C1525 -
            (C23488 + C23489) * C1584 - (C23551 + C23550) * C1526) *
               C29499 * C29688) *
              C29511 * C2069 +
          (((C25797 + C25796) * C1584 -
            ((C19714 * C1135 + C29690 * C1426 + C19713 * C1134 +
              C19411 * C1425) *
                 C1525 +
             (C19714 * C1073 + C29690 * C1376 + C19713 * C1072 +
              C19411 * C1375) *
                 C1583) +
            (C25868 + C25869) * C1526) *
               C29499 * C3111 +
           ((C19713 * C5989 + C19411 * C6433 + C19714 * C14183 +
             C29690 * C14423) *
                C1584 -
            ((C25869 + C25868) * C1525 + (C25796 + C25797) * C1583) +
            (C19713 * C6075 + C19411 * C6513 + C19714 * C14225 +
             C29690 * C14463) *
                C1526) *
               C29499 * C29688) *
              C29511 * C2070)) /
        (p * q * std::sqrt(p + q));
    d2eezz[36] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C19713 * C93 + C19411 * C437 + C19714 * C1072 + C29690 * C1375) *
                C2177 +
            (C19713 * C201 + C19411 * C562 + C19714 * C1187 + C29690 * C1467) *
                C2069 -
            (C19714 * C1073 + C29690 * C1376 + C19713 * C1072 +
             C19411 * C1375) *
                C2178 -
            (C19714 * C1188 + C29690 * C1468 + C19713 * C1187 +
             C19411 * C1467) *
                C2070) *
               C29499 * C3111 +
           ((C23482 + C23483) * C2177 + (C23610 + C23611) * C2069 -
            (C25796 + C25797) * C2178 - (C25940 + C25941) * C2070) *
               C29499 * C29688) *
              C1525 +
          (((C25797 + C25796) * C2178 -
            ((C23611 + C23610) * C2069 + (C23483 + C23482) * C2177) +
            (C25941 + C25940) * C2070) *
               C29499 * C3111 +
           ((C19713 * C5989 + C19411 * C6433 + C19714 * C14183 +
             C29690 * C14423) *
                C2178 -
            ((C23612 + C23613) * C2069 + (C23488 + C23489) * C2177) +
            (C19713 * C6151 + C19411 * C6584 + C19714 * C14265 +
             C29690 * C14502) *
                C2070) *
               C29499 * C29688) *
              C1526) *
         C29511) /
        (p * q * std::sqrt(p + q));
    d2eexx[37] +=
        (-std::pow(Pi, 2.5) *
         (((((C13409 * C93 + C29499 * C98) * C625 +
             (C13409 * C101 + C29499 * C108) * C29511) *
                C3111 +
            (C13778 + C13779) * C29688) *
               C19411 +
           ((C16988 + C16989) * C3111 + C18772 * C29688) * C29690) *
              C29543 * C622 -
          (((C15510 + C15511) * C29688 + C18773 * C3111) * C29690 +
           ((C13781 + C13780) * C29688 + (C13779 + C13778) * C3111) * C19411) *
              C29543 * C623 +
          ((C13784 * C3111 + (C13783 + C13782) * C29688) * C19411 +
           ((C15511 + C15510) * C3111 +
            ((C13409 * C15493 + C29499 * C15494) * C625 +
             (C13409 * C15495 + C29499 * C15496) * C29511) *
                C29688) *
               C29690) *
              C29543 * C624)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C13409 * C93 + C29499 * C98) * C90 +
            (C13409 * C101 + C29499 * C108) * C80 -
            (C13409 * C94 + C29499 * C99) * C91 -
            (C13409 * C102 + C29499 * C109) * C81 +
            (C13409 * C95 + C29499 * C100) * C92 +
            (C13409 * C103 + C29499 * C110) * C82) *
               C3111 +
           (C13772 * C90 + C13773 * C80 - C14566 * C91 - C14567 * C81 +
            (C13409 * C626 + C29499 * C635) * C92 +
            (C13409 * C632 + C29499 * C644) * C82) *
               C29688) *
              C19411 +
          ((C16982 * C90 + C16983 * C80 - C18164 * C91 - C18165 * C81 +
            (C13409 * C1070 + C29499 * C1079) * C92 +
            (C13409 * C1076 + C29499 * C1088) * C82) *
               C3111 +
           (C15509 * C90 + C15508 * C80 - C17552 * C91 - C17553 * C81 +
            (C13409 * C2613 + C29499 * C2616) * C92 +
            (C13409 * C2619 + C29499 * C2622) * C82) *
               C29688) *
              C29690) *
         C29543 * C29532) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C13409 * C93 + C29499 * C98) * C625 +
             (C13409 * C101 + C29499 * C108) * C29511) *
                C3111 +
            (C13778 + C13779) * C29688) *
               C19411 +
           ((C16988 + C16989) * C3111 + C18772 * C29688) * C29690) *
              C1067 -
          (((C16990 + C16991) * C29688 + (C16992 + C16993) * C3111) * C29690 +
           (C18773 * C29688 + (C16989 + C16988) * C3111) * C19411) *
              C1068 +
          (((C16993 + C16992) * C3111 + (C16991 + C16990) * C29688) * C19411 +
           (((C13409 * C7599 + C29499 * C7601) * C625 +
             (C13409 * C7603 + C29499 * C7605) * C29511) *
                C3111 +
            ((C13409 * C16965 + C29499 * C16966) * C625 +
             (C13409 * C16967 + C29499 * C16968) * C29511) *
                C29688) *
               C29690) *
              C1069) *
         C29532) /
            (p * q * std::sqrt(p + q));
    d2eexy[37] +=
        (-std::pow(Pi, 2.5) *
         ((((C13409 * C93 + C29499 * C98) * C688 +
            (C13409 * C152 + C29499 * C157) * C622 - C13772 * C689 -
            C13831 * C623 + C13774 * C690 + C13832 * C624) *
               C3111 +
           (C13772 * C688 + C13831 * C622 - C13774 * C689 - C13832 * C623 +
            C13777 * C690 + C13833 * C624) *
               C29688) *
              C19411 +
          ((C16982 * C688 + C17057 * C622 - C15509 * C689 - C15570 * C623 +
            C15507 * C690 + C15571 * C624) *
               C3111 +
           (C15509 * C688 + C15570 * C622 - C15507 * C689 - C15571 * C623 +
            (C13409 * C15493 + C29499 * C15494) * C690 +
            (C13409 * C15563 + C29499 * C15564) * C624) *
               C29688) *
              C29690) *
         C29511 * C29543) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C13409 * C93 + C29499 * C98) * C151 +
             (C13409 * C152 + C29499 * C157) * C29532) *
                C3111 +
            (C13772 * C151 + C13831 * C29532) * C29688) *
               C19411 +
           ((C17046 + C17060) * C3111 + (C17049 + C17050) * C29688) * C29690) *
              C80 -
          (((C18234 + C18235) * C29688 + (C18240 + C18238) * C3111) * C29690 +
           ((C14628 * C29532 + C14566 * C151) * C29688 +
            ((C13409 * C153 + C29499 * C158) * C29532 +
             (C13409 * C94 + C29499 * C99) * C151) *
                C3111) *
               C19411) *
              C81 +
          ((((C13409 * C95 + C29499 * C100) * C151 +
             (C13409 * C154 + C29499 * C159) * C29532) *
                C3111 +
            ((C13409 * C626 + C29499 * C635) * C151 +
             (C13409 * C691 + C29499 * C697) * C29532) *
                C29688) *
               C19411 +
           (((C13409 * C1070 + C29499 * C1079) * C151 +
             (C13409 * C1132 + C29499 * C1138) * C29532) *
                C3111 +
            ((C13409 * C2613 + C29499 * C2616) * C151 +
             (C13409 * C2675 + C29499 * C2678) * C29532) *
                C29688) *
               C29690) *
              C82) *
         C29543) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C13409 * C93 + C29499 * C98) * C151 +
             (C13409 * C152 + C29499 * C157) * C29532) *
                C3111 +
            (C13772 * C151 + C13831 * C29532) * C29688) *
               C19411 +
           ((C17046 + C17060) * C3111 + (C17049 + C17050) * C29688) * C29690) *
              C29511 * C1067 -
          (((C17061 + C17053) * C29688 + (C17062 + C17056) * C3111) * C29690 +
           ((C17050 + C17049) * C29688 + (C17060 + C17046) * C3111) * C19411) *
              C29511 * C1068 +
          (((C17056 + C17062) * C3111 + (C17053 + C17061) * C29688) * C19411 +
           (((C13409 * C7599 + C29499 * C7601) * C151 +
             (C13409 * C7681 + C29499 * C7683) * C29532) *
                C3111 +
            ((C13409 * C16965 + C29499 * C16966) * C151 +
             (C13409 * C17043 + C29499 * C17044) * C29532) *
                C29688) *
               C29690) *
              C29511 * C1069)) /
            (p * q * std::sqrt(p + q));
    d2eexz[37] +=
        (-std::pow(Pi, 2.5) *
         (((((C13409 * C93 + C29499 * C98) * C200 +
             (C13409 * C201 + C29499 * C206) * C29543) *
                C3111 +
            (C13874 + C13886) * C29688) *
               C19411 +
           ((C16982 * C200 + C17121 * C29543) * C3111 +
            (C16564 + C16565) * C29688) *
               C29690) *
              C622 -
          (((C16566 + C16567) * C29688 + (C16565 + C16564) * C3111) * C29690 +
           ((C13887 + C13877) * C29688 + (C13886 + C13874) * C3111) * C19411) *
              C623 +
          ((C13889 * C3111 + (C13882 + C13888) * C29688) * C19411 +
           ((C16567 + C16566) * C3111 +
            ((C13409 * C15493 + C29499 * C15494) * C200 +
             (C13409 * C15621 + C29499 * C15622) * C29543) *
                C29688) *
               C29690) *
              C624) *
         C29511) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) * (((((C13409 * C93 + C29499 * C98) * C200 +
                                 (C13409 * C201 + C29499 * C206) * C29543) *
                                    C3111 +
                                (C13874 + C13886) * C29688) *
                                   C19411 +
                               ((C16982 * C200 + C17121 * C29543) * C3111 +
                                (C16564 + C16565) * C29688) *
                                   C29690) *
                                  C29532 * C80 -
                              (((C17695 + C17691) * C29688 +
                                (C18309 * C29543 + C18164 * C200) * C3111) *
                                   C29690 +
                               ((C14688 + C14680) * C29688 +
                                ((C13409 * C202 + C29499 * C207) * C29543 +
                                 (C13409 * C94 + C29499 * C99) * C200) *
                                    C3111) *
                                   C19411) *
                                  C29532 * C81 +
                              ((((C13409 * C95 + C29499 * C100) * C200 +
                                 (C13409 * C203 + C29499 * C208) * C29543) *
                                    C3111 +
                                ((C13409 * C626 + C29499 * C635) * C200 +
                                 (C13409 * C741 + C29499 * C747) * C29543) *
                                    C29688) *
                                   C19411 +
                               (((C13409 * C1070 + C29499 * C1079) * C200 +
                                 (C13409 * C1185 + C29499 * C1191) * C29543) *
                                    C3111 +
                                ((C13409 * C2613 + C29499 * C2616) * C200 +
                                 (C13409 * C2731 + C29499 * C2734) * C29543) *
                                    C29688) *
                                   C29690) *
                                  C29532 * C82)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C13409 * C93 + C29499 * C98) * C1182 +
            (C13409 * C201 + C29499 * C206) * C1067 - C16982 * C1183 -
            C17121 * C1068 + C16987 * C1184 + C17122 * C1069) *
               C3111 +
           (C13772 * C1182 + C13883 * C1067 - C15509 * C1183 - C15634 * C1068 +
            C16985 * C1184 + C17123 * C1069) *
               C29688) *
              C19411 +
          ((C16982 * C1182 + C17121 * C1067 - C16987 * C1183 - C17122 * C1068 +
            (C13409 * C7599 + C29499 * C7601) * C1184 +
            (C13409 * C7747 + C29499 * C7749) * C1069) *
               C3111 +
           (C15509 * C1182 + C15634 * C1067 - C16985 * C1183 - C17123 * C1068 +
            (C13409 * C16965 + C29499 * C16966) * C1184 +
            (C13409 * C17112 + C29499 * C17113) * C1069) *
               C29688) *
              C29690) *
         C29532 * C29511) /
            (p * q * std::sqrt(p + q));
    d2eeyx[37] +=
        (-std::pow(Pi, 2.5) *
         ((((C3265 * C93 + C3111 * C250 + C3266 * C628 + C29688 * C793) * C625 +
            (C3265 * C101 + C3111 * C255 + C3266 * C634 + C29688 * C799) *
                C29511) *
               C19411 +
           ((C3265 * C1072 + C3111 * C1237 + C3266 * C2611 + C29688 * C2785) *
                C625 +
            (C3265 * C1078 + C3111 * C1243 + C3266 * C2617 + C29688 * C2788) *
                C29511) *
               C29690) *
              C29499 * C29543 * C622 -
          (((C3266 * C5993 + C29688 * C6229 + C3265 * C2617 + C3111 * C2788) *
                C29511 +
            (C3266 * C5989 + C29688 * C6227 + C3265 * C2611 + C3111 * C2785) *
                C625) *
               C29690 +
           ((C3266 * C641 + C29688 * C800 + C3265 * C634 + C3111 * C799) *
                C29511 +
            (C3266 * C629 + C29688 * C794 + C3265 * C628 + C3111 * C793) *
                C625) *
               C19411) *
              C29499 * C29543 * C623 +
          (((C3265 * C629 + C3111 * C794 + C3266 * C3619 + C29688 * C3833) *
                C625 +
            (C3265 * C641 + C3111 * C800 + C3266 * C3623 + C29688 * C3835) *
                C29511) *
               C19411 +
           ((C3265 * C5989 + C3111 * C6227 + C3266 * C15493 + C29688 * C15687) *
                C625 +
            (C3265 * C5993 + C3111 * C6229 + C3266 * C15495 + C29688 * C15688) *
                C29511) *
               C29690) *
              C29499 * C29543 * C624)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C3265 * C93 + C3111 * C250 + C3266 * C628 + C29688 * C793) * C90 +
           (C3265 * C101 + C3111 * C255 + C3266 * C634 + C29688 * C799) * C80 -
           (C3284 + C3285) * C91 - (C3286 + C3287) * C81 +
           (C3288 + C3289) * C92 + (C3290 + C3291) * C82) *
              C19411 +
          ((C3265 * C1072 + C3111 * C1237 + C3266 * C2611 + C29688 * C2785) *
               C90 +
           (C3265 * C1078 + C3111 * C1243 + C3266 * C2617 + C29688 * C2788) *
               C80 -
           (C5561 + C5560) * C91 - (C5563 + C5562) * C81 +
           (C3265 * C1070 + C3111 * C1235 + C3266 * C2613 + C29688 * C2787) *
               C92 +
           (C3265 * C1076 + C3111 * C1241 + C3266 * C2619 + C29688 * C2790) *
               C82) *
              C29690) *
         C29499 * C29543 * C29532) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C3265 * C93 + C3111 * C250 + C3266 * C628 + C29688 * C793) * C625 +
            (C3265 * C101 + C3111 * C255 + C3266 * C634 + C29688 * C799) *
                C29511) *
               C19411 +
           ((C23830 + C23831) * C625 + (C23832 + C23833) * C29511) * C29690) *
              C29499 * C1067 -
          (((C23834 + C23835) * C29511 + (C23836 + C23837) * C625) * C29690 +
           ((C23833 + C23832) * C29511 + (C23831 + C23830) * C625) * C19411) *
              C29499 * C1068 +
          (((C23837 + C23836) * C625 + (C23835 + C23834) * C29511) * C19411 +
           ((C3265 * C7599 + C3111 * C7813 + C3266 * C16965 + C29688 * C17173) *
                C625 +
            (C3265 * C7603 + C3111 * C7815 + C3266 * C16967 + C29688 * C17174) *
                C29511) *
               C29690) *
              C29499 * C1069) *
         C29532) /
            (p * q * std::sqrt(p + q));
    d2eeyy[37] +=
        (-std::pow(Pi, 2.5) *
         (((C3265 * C93 + C3111 * C250 + C3266 * C628 + C29688 * C793) * C688 +
           (C3265 * C152 + C3111 * C316 + C3266 * C693 + C29688 * C841) * C622 -
           (C3266 * C629 + C29688 * C794 + C3265 * C628 + C3111 * C793) * C689 -
           (C3266 * C694 + C29688 * C842 + C3265 * C693 + C3111 * C841) * C623 +
           (C3265 * C629 + C3111 * C794 + C3266 * C3619 + C29688 * C3833) *
               C690 +
           (C3265 * C694 + C3111 * C842 + C3266 * C3701 + C29688 * C3887) *
               C624) *
              C19411 +
          ((C3265 * C1072 + C3111 * C1237 + C3266 * C2611 + C29688 * C2785) *
               C688 +
           (C3265 * C1134 + C3111 * C1287 + C3266 * C2673 + C29688 * C2841) *
               C622 -
           (C3266 * C5989 + C29688 * C6227 + C3265 * C2611 + C3111 * C2785) *
               C689 -
           (C3266 * C6075 + C29688 * C6297 + C3265 * C2673 + C3111 * C2841) *
               C623 +
           (C3265 * C5989 + C3111 * C6227 + C3266 * C15493 + C29688 * C15687) *
               C690 +
           (C3265 * C6075 + C3111 * C6297 + C3266 * C15563 + C29688 * C15739) *
               C624) *
              C29690) *
         C29499 * C29511 * C29543) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C3265 * C93 + C3111 * C250 + C3266 * C628 + C29688 * C793) * C151 +
            (C3265 * C152 + C3111 * C316 + C3266 * C693 + C29688 * C841) *
                C29532) *
               C19411 +
           ((C3265 * C1072 + C3111 * C1237 + C3266 * C2611 + C29688 * C2785) *
                C151 +
            (C3265 * C1134 + C3111 * C1287 + C3266 * C2673 + C29688 * C2841) *
                C29532) *
               C29690) *
              C29499 * C80 -
          (((C5635 + C5634) * C29532 + (C5561 + C5560) * C151) * C29690 +
           ((C3351 + C3350) * C29532 + (C3284 + C3285) * C151) * C19411) *
              C29499 * C81 +
          (((C3288 + C3289) * C151 + (C3353 + C3352) * C29532) * C19411 +
           ((C3265 * C1070 + C3111 * C1235 + C3266 * C2613 + C29688 * C2787) *
                C151 +
            (C3265 * C1132 + C3111 * C1285 + C3266 * C2675 + C29688 * C2843) *
                C29532) *
               C29690) *
              C29499 * C82) *
         C29543) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C3265 * C93 + C3111 * C250 + C3266 * C628 + C29688 * C793) * C151 +
            (C3265 * C152 + C3111 * C316 + C3266 * C693 + C29688 * C841) *
                C29532) *
               C19411 +
           ((C23830 + C23831) * C151 + (C23896 + C23897) * C29532) * C29690) *
              C29499 * C29511 * C1067 -
          (((C23898 + C23899) * C29532 + (C23836 + C23837) * C151) * C29690 +
           ((C23897 + C23896) * C29532 + (C23831 + C23830) * C151) * C19411) *
              C29499 * C29511 * C1068 +
          (((C23837 + C23836) * C151 + (C23899 + C23898) * C29532) * C19411 +
           ((C3265 * C7599 + C3111 * C7813 + C3266 * C16965 + C29688 * C17173) *
                C151 +
            (C3265 * C7681 + C3111 * C7893 + C3266 * C17043 + C29688 * C17249) *
                C29532) *
               C29690) *
              C29499 * C29511 * C1069)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[37] +=
        (-std::pow(Pi, 2.5) *
         ((((C3265 * C93 + C3111 * C250 + C3266 * C628 + C29688 * C793) * C200 +
            (C3265 * C201 + C3111 * C376 + C3266 * C743 + C29688 * C887) *
                C29543) *
               C19411 +
           ((C3265 * C1072 + C3111 * C1237 + C3266 * C2611 + C29688 * C2785) *
                C200 +
            (C3265 * C1187 + C3111 * C1329 + C3266 * C2729 + C29688 * C2894) *
                C29543) *
               C29690) *
              C29499 * C622 -
          (((C3266 * C6151 + C29688 * C6365 + C3265 * C2729 + C3111 * C2894) *
                C29543 +
            (C3266 * C5989 + C29688 * C6227 + C3265 * C2611 + C3111 * C2785) *
                C200) *
               C29690 +
           ((C3266 * C744 + C29688 * C888 + C3265 * C743 + C3111 * C887) *
                C29543 +
            (C3266 * C629 + C29688 * C794 + C3265 * C628 + C3111 * C793) *
                C200) *
               C19411) *
              C29499 * C623 +
          (((C3265 * C629 + C3111 * C794 + C3266 * C3619 + C29688 * C3833) *
                C200 +
            (C3265 * C744 + C3111 * C888 + C3266 * C3767 + C29688 * C3939) *
                C29543) *
               C19411 +
           ((C3265 * C5989 + C3111 * C6227 + C3266 * C15493 + C29688 * C15687) *
                C200 +
            (C3265 * C6151 + C3111 * C6365 + C3266 * C15621 + C29688 * C15790) *
                C29543) *
               C29690) *
              C29499 * C624) *
         C29511) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C3265 * C93 + C3111 * C250 + C3266 * C628 + C29688 * C793) * C200 +
            (C3265 * C201 + C3111 * C376 + C3266 * C743 + C29688 * C887) *
                C29543) *
               C19411 +
           ((C3265 * C1072 + C3111 * C1237 + C3266 * C2611 + C29688 * C2785) *
                C200 +
            (C3265 * C1187 + C3111 * C1329 + C3266 * C2729 + C29688 * C2894) *
                C29543) *
               C29690) *
              C29499 * C29532 * C80 -
          (((C5706 + C5707) * C29543 + (C5561 + C5560) * C200) * C29690 +
           ((C3413 + C3412) * C29543 + (C3284 + C3285) * C200) * C19411) *
              C29499 * C29532 * C81 +
          (((C3288 + C3289) * C200 + (C3415 + C3414) * C29543) * C19411 +
           ((C3265 * C1070 + C3111 * C1235 + C3266 * C2613 + C29688 * C2787) *
                C200 +
            (C3265 * C1185 + C3111 * C1333 + C3266 * C2731 + C29688 * C2896) *
                C29543) *
               C29690) *
              C29499 * C29532 * C82)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C3265 * C93 + C3111 * C250 + C3266 * C628 + C29688 * C793) * C1182 +
           (C3265 * C201 + C3111 * C376 + C3266 * C743 + C29688 * C887) *
               C1067 -
           (C23831 + C23830) * C1183 - (C23958 + C23959) * C1068 +
           (C23837 + C23836) * C1184 + (C23960 + C23961) * C1069) *
              C19411 +
          ((C23830 + C23831) * C1182 + (C23959 + C23958) * C1067 -
           (C23836 + C23837) * C1183 - (C23961 + C23960) * C1068 +
           (C3265 * C7599 + C3111 * C7813 + C3266 * C16965 + C29688 * C17173) *
               C1184 +
           (C3265 * C7747 + C3111 * C7960 + C3266 * C17112 + C29688 * C17312) *
               C1069) *
              C29690) *
         C29499 * C29532 * C29511) /
            (p * q * std::sqrt(p + q));
    d2eezx[37] +=
        (-std::pow(Pi, 2.5) *
         ((((C19713 * C93 + C19411 * C437 + C19714 * C1072 + C29690 * C1375) *
                C625 +
            (C19713 * C101 + C19411 * C442 + C19714 * C1078 + C29690 * C1381) *
                C29511) *
               C29499 * C3111 +
           ((C23482 + C23483) * C625 + (C23484 + C23485) * C29511) * C29499 *
               C29688) *
              C29543 * C622 -
          (((C23486 + C23487) * C29511 + (C23488 + C23489) * C625) * C29499 *
               C29688 +
           ((C23485 + C23484) * C29511 + (C23483 + C23482) * C625) * C29499 *
               C3111) *
              C29543 * C623 +
          (((C23489 + C23488) * C625 + (C23487 + C23486) * C29511) * C29499 *
               C3111 +
           ((C19713 * C3619 + C19411 * C3991 + C19714 * C15493 +
             C29690 * C15841) *
                C625 +
            (C19713 * C3623 + C19411 * C3993 + C19714 * C15495 +
             C29690 * C15842) *
                C29511) *
               C29499 * C29688) *
              C29543 * C624)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C19713 * C93 + C19411 * C437 + C19714 * C1072 + C29690 * C1375) *
               C90 +
           (C19713 * C101 + C19411 * C442 + C19714 * C1078 + C29690 * C1381) *
               C80 -
           (C19732 + C19733) * C91 - (C19734 + C19735) * C81 +
           (C19736 + C19737) * C92 + (C19738 + C19739) * C82) *
              C29499 * C3111 +
          ((C19713 * C628 + C19411 * C931 + C19714 * C2611 + C29690 * C2947) *
               C90 +
           (C19713 * C634 + C19411 * C937 + C19714 * C2617 + C29690 * C2950) *
               C80 -
           (C21283 + C21282) * C91 - (C21285 + C21284) * C81 +
           (C19713 * C626 + C19411 * C929 + C19714 * C2613 + C29690 * C2949) *
               C92 +
           (C19713 * C632 + C19411 * C935 + C19714 * C2619 + C29690 * C2952) *
               C82) *
              C29499 * C29688) *
         C29543 * C29532) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C19713 * C93 + C19411 * C437 + C19714 * C1072 + C29690 * C1375) *
                C625 +
            (C19713 * C101 + C19411 * C442 + C19714 * C1078 + C29690 * C1381) *
                C29511) *
               C29499 * C3111 +
           ((C23482 + C23483) * C625 + (C23484 + C23485) * C29511) * C29499 *
               C29688) *
              C1067 -
          (((C19714 * C4203 + C29690 * C4525 + C19713 * C2617 +
             C19411 * C2950) *
                C29511 +
            (C19714 * C4199 + C29690 * C4523 + C19713 * C2611 +
             C19411 * C2947) *
                C625) *
               C29499 * C29688 +
           ((C19714 * C1085 + C29690 * C1382 + C19713 * C1078 +
             C19411 * C1381) *
                C29511 +
            (C19714 * C1073 + C29690 * C1376 + C19713 * C1072 +
             C19411 * C1375) *
                C625) *
               C29499 * C3111) *
              C1068 +
          (((C19713 * C1073 + C19411 * C1376 + C19714 * C7599 +
             C29690 * C8021) *
                C625 +
            (C19713 * C1085 + C19411 * C1382 + C19714 * C7603 +
             C29690 * C8023) *
                C29511) *
               C29499 * C3111 +
           ((C19713 * C4199 + C19411 * C4523 + C19714 * C16965 +
             C29690 * C17375) *
                C625 +
            (C19713 * C4203 + C19411 * C4525 + C19714 * C16967 +
             C29690 * C17376) *
                C29511) *
               C29499 * C29688) *
              C1069) *
         C29532) /
            (p * q * std::sqrt(p + q));
    d2eezy[37] +=
        (-std::pow(Pi, 2.5) *
         (((C19713 * C93 + C19411 * C437 + C19714 * C1072 + C29690 * C1375) *
               C688 +
           (C19713 * C152 + C19411 * C503 + C19714 * C1134 + C29690 * C1425) *
               C622 -
           (C23483 + C23482) * C689 - (C23548 + C23549) * C623 +
           (C23489 + C23488) * C690 + (C23550 + C23551) * C624) *
              C29499 * C3111 +
          ((C23482 + C23483) * C688 + (C23549 + C23548) * C622 -
           (C23488 + C23489) * C689 - (C23551 + C23550) * C623 +
           (C19713 * C3619 + C19411 * C3991 + C19714 * C15493 +
            C29690 * C15841) *
               C690 +
           (C19713 * C3701 + C19411 * C4071 + C19714 * C15563 +
            C29690 * C15901) *
               C624) *
              C29499 * C29688) *
         C29511 * C29543) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C19713 * C93 + C19411 * C437 + C19714 * C1072 + C29690 * C1375) *
                C151 +
            (C19713 * C152 + C19411 * C503 + C19714 * C1134 + C29690 * C1425) *
                C29532) *
               C29499 * C3111 +
           ((C19713 * C628 + C19411 * C931 + C19714 * C2611 + C29690 * C2947) *
                C151 +
            (C19713 * C693 + C19411 * C979 + C19714 * C2673 + C29690 * C3003) *
                C29532) *
               C29499 * C29688) *
              C80 -
          (((C21356 + C21357) * C29532 + (C21283 + C21282) * C151) * C29499 *
               C29688 +
           ((C19799 + C19798) * C29532 + (C19732 + C19733) * C151) * C29499 *
               C3111) *
              C81 +
          (((C19736 + C19737) * C151 + (C19801 + C19800) * C29532) * C29499 *
               C3111 +
           ((C19713 * C626 + C19411 * C929 + C19714 * C2613 + C29690 * C2949) *
                C151 +
            (C19713 * C691 + C19411 * C983 + C19714 * C2675 + C29690 * C3005) *
                C29532) *
               C29499 * C29688) *
              C82) *
         C29543) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C19713 * C93 + C19411 * C437 + C19714 * C1072 + C29690 * C1375) *
                C151 +
            (C19713 * C152 + C19411 * C503 + C19714 * C1134 + C29690 * C1425) *
                C29532) *
               C29499 * C3111 +
           ((C23482 + C23483) * C151 + (C23549 + C23548) * C29532) * C29499 *
               C29688) *
              C29511 * C1067 -
          (((C19714 * C4257 + C29690 * C4577 + C19713 * C2673 +
             C19411 * C3003) *
                C29532 +
            (C19714 * C4199 + C29690 * C4523 + C19713 * C2611 +
             C19411 * C2947) *
                C151) *
               C29499 * C29688 +
           ((C19714 * C1135 + C29690 * C1426 + C19713 * C1134 +
             C19411 * C1425) *
                C29532 +
            (C19714 * C1073 + C29690 * C1376 + C19713 * C1072 +
             C19411 * C1375) *
                C151) *
               C29499 * C3111) *
              C29511 * C1068 +
          (((C19713 * C1073 + C19411 * C1376 + C19714 * C7599 +
             C29690 * C8021) *
                C151 +
            (C19713 * C1135 + C19411 * C1426 + C19714 * C7681 +
             C29690 * C8075) *
                C29532) *
               C29499 * C3111 +
           ((C19713 * C4199 + C19411 * C4523 + C19714 * C16965 +
             C29690 * C17375) *
                C151 +
            (C19713 * C4257 + C19411 * C4577 + C19714 * C17043 +
             C29690 * C17427) *
                C29532) *
               C29499 * C29688) *
              C29511 * C1069)) /
            (p * q * std::sqrt(p + q));
    d2eezz[37] +=
        (-std::pow(Pi, 2.5) *
         ((((C19713 * C93 + C19411 * C437 + C19714 * C1072 + C29690 * C1375) *
                C200 +
            (C19713 * C201 + C19411 * C562 + C19714 * C1187 + C29690 * C1467) *
                C29543) *
               C29499 * C3111 +
           ((C23482 + C23483) * C200 + (C23610 + C23611) * C29543) * C29499 *
               C29688) *
              C622 -
          (((C23612 + C23613) * C29543 + (C23488 + C23489) * C200) * C29499 *
               C29688 +
           ((C23611 + C23610) * C29543 + (C23483 + C23482) * C200) * C29499 *
               C3111) *
              C623 +
          (((C23489 + C23488) * C200 + (C23613 + C23612) * C29543) * C29499 *
               C3111 +
           ((C19713 * C3619 + C19411 * C3991 + C19714 * C15493 +
             C29690 * C15841) *
                C200 +
            (C19713 * C3767 + C19411 * C4132 + C19714 * C15621 +
             C29690 * C15955) *
                C29543) *
               C29499 * C29688) *
              C624) *
         C29511) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C19713 * C93 + C19411 * C437 + C19714 * C1072 + C29690 * C1375) *
                C200 +
            (C19713 * C201 + C19411 * C562 + C19714 * C1187 + C29690 * C1467) *
                C29543) *
               C29499 * C3111 +
           ((C19713 * C628 + C19411 * C931 + C19714 * C2611 + C29690 * C2947) *
                C200 +
            (C19713 * C743 + C19411 * C1025 + C19714 * C2729 + C29690 * C3056) *
                C29543) *
               C29499 * C29688) *
              C29532 * C80 -
          (((C21428 + C21429) * C29543 + (C21283 + C21282) * C200) * C29499 *
               C29688 +
           ((C19861 + C19860) * C29543 + (C19732 + C19733) * C200) * C29499 *
               C3111) *
              C29532 * C81 +
          (((C19736 + C19737) * C200 + (C19863 + C19862) * C29543) * C29499 *
               C3111 +
           ((C19713 * C626 + C19411 * C929 + C19714 * C2613 + C29690 * C2949) *
                C200 +
            (C19713 * C741 + C19411 * C1023 + C19714 * C2731 + C29690 * C3058) *
                C29543) *
               C29499 * C29688) *
              C29532 * C82)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C19713 * C93 + C19411 * C437 + C19714 * C1072 + C29690 * C1375) *
               C1182 +
           (C19713 * C201 + C19411 * C562 + C19714 * C1187 + C29690 * C1467) *
               C1067 -
           (C19714 * C1073 + C29690 * C1376 + C19713 * C1072 + C19411 * C1375) *
               C1183 -
           (C19714 * C1188 + C29690 * C1468 + C19713 * C1187 + C19411 * C1467) *
               C1068 +
           (C19713 * C1073 + C19411 * C1376 + C19714 * C7599 + C29690 * C8021) *
               C1184 +
           (C19713 * C1188 + C19411 * C1468 + C19714 * C7747 + C29690 * C8127) *
               C1069) *
              C29499 * C3111 +
          ((C23482 + C23483) * C1182 + (C23610 + C23611) * C1067 -
           (C19714 * C4199 + C29690 * C4523 + C19713 * C2611 + C19411 * C2947) *
               C1183 -
           (C19714 * C4311 + C29690 * C4629 + C19713 * C2729 + C19411 * C3056) *
               C1068 +
           (C19713 * C4199 + C19411 * C4523 + C19714 * C16965 +
            C29690 * C17375) *
               C1184 +
           (C19713 * C4311 + C19411 * C4629 + C19714 * C17112 +
            C29690 * C17478) *
               C1069) *
              C29499 * C29688) *
         C29532 * C29511) /
            (p * q * std::sqrt(p + q));
    d2eexx[38] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C13409 * C93 + C29499 * C98) * C1527 +
                       (C13409 * C101 + C29499 * C108) * C1523 -
                       (C13409 * C94 + C29499 * C99) * C1528 -
                       (C13409 * C102 + C29499 * C109) * C1524) *
                          C3111 +
                      (C14554 + C14555 - C14570 - C14571) * C29688) *
                         C19411 +
                     ((C18158 + C18159 - C18166 - C18167) * C3111 +
                      (C17546 + C17547 - C17554 - C17555) * C29688) *
                         C29690) *
                        C2069 +
                    (((C18166 - (C18159 + C18158) + C18167) * C3111 +
                      (C17554 - (C17547 + C17546) + C17555) * C29688) *
                         C19411 +
                     (((C13409 * C1074 + C29499 * C1083) * C1528 -
                       (C16986 * C1523 + C16987 * C1527) +
                       (C13409 * C1086 + C29499 * C1092) * C1524) *
                          C3111 +
                      ((C13409 * C4200 + C29499 * C4202) * C1528 -
                       (C16984 * C1523 + C16985 * C1527) +
                       (C13409 * C4204 + C29499 * C4206) * C1524) *
                          C29688) *
                         C29690) *
                        C2070) *
                   C29532) /
                  (p * q * std::sqrt(p + q));
    d2eexy[38] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C13409 * C93 + C29499 * C98) * C151 +
              (C13409 * C152 + C29499 * C157) * C29532) *
                 C3111 +
             (C13772 * C151 + C13831 * C29532) * C29688) *
                C19411 +
            ((C17046 + C17060) * C3111 + (C17049 + C17050) * C29688) * C29690) *
               C1523 -
           (((C18234 + C18235) * C29688 + (C18240 + C18238) * C3111) * C29690 +
            ((C14628 * C29532 + C14566 * C151) * C29688 +
             ((C13409 * C153 + C29499 * C158) * C29532 +
              (C13409 * C94 + C29499 * C99) * C151) *
                 C3111) *
                C19411) *
               C1524) *
              C2069 +
          ((((C18238 + C18240) * C3111 + (C18235 + C18234) * C29688) * C19411 +
            (((C13409 * C1074 + C29499 * C1083) * C151 +
              (C13409 * C1136 + C29499 * C1142) * C29532) *
                 C3111 +
             ((C13409 * C4200 + C29499 * C4202) * C151 +
              (C13409 * C4258 + C29499 * C4260) * C29532) *
                 C29688) *
                C29690) *
               C1524 -
           (((C17061 + C17053) * C29688 + (C17062 + C17056) * C3111) * C29690 +
            ((C17050 + C17049) * C29688 + (C17060 + C17046) * C3111) * C19411) *
               C1523) *
              C2070)) /
        (p * q * std::sqrt(p + q));
    d2eexz[38] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C13409 * C93 + C29499 * C98) * C2177 +
                       (C13409 * C201 + C29499 * C206) * C2069 -
                       C16982 * C2178 - C17121 * C2070) *
                          C3111 +
                      (C15624 + C15625 - C15626 - C15636) * C29688) *
                         C19411 +
                     ((C16982 * C2177 + C17121 * C2069 - C16987 * C2178 -
                       C17122 * C2070) *
                          C3111 +
                      (C18914 + C18915 - C18916 - C18917) * C29688) *
                         C29690) *
                        C29532 * C1523 +
                    (((C18164 * C2178 -
                       ((C13409 * C202 + C29499 * C207) * C2069 +
                        (C13409 * C94 + C29499 * C99) * C2177) +
                       C18309 * C2070) *
                          C3111 +
                      (C17552 * C2178 - (C14686 * C2069 + C14566 * C2177) +
                       C17694 * C2070) *
                          C29688) *
                         C19411 +
                     (((C13409 * C1074 + C29499 * C1083) * C2178 -
                       (C18309 * C2069 + C18164 * C2177) +
                       (C13409 * C1189 + C29499 * C1195) * C2070) *
                          C3111 +
                      ((C13409 * C4200 + C29499 * C4202) * C2178 -
                       (C17694 * C2069 + C17552 * C2177) +
                       (C13409 * C4312 + C29499 * C4314) * C2070) *
                          C29688) *
                         C29690) *
                        C29532 * C1524)) /
                  (p * q * std::sqrt(p + q));
    d2eeyx[38] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C3265 * C93 + C3111 * C250 + C3266 * C628 + C29688 * C793) *
                C1527 +
            (C3265 * C101 + C3111 * C255 + C3266 * C634 + C29688 * C799) *
                C1523 -
            (C3284 + C3285) * C1528 - (C3286 + C3287) * C1524) *
               C19411 +
           ((C23830 + C23831) * C1527 + (C23832 + C23833) * C1523 -
            (C5561 + C5560) * C1528 - (C5563 + C5562) * C1524) *
               C29690) *
              C29499 * C2069 +
          (((C5560 + C5561) * C1528 -
            ((C23833 + C23832) * C1523 + (C23831 + C23830) * C1527) +
            (C5562 + C5563) * C1524) *
               C19411 +
           ((C3265 * C1074 + C3111 * C1239 + C3266 * C4200 + C29688 * C4366) *
                C1528 -
            ((C23834 + C23835) * C1523 + (C23836 + C23837) * C1527) +
            (C3265 * C1086 + C3111 * C1245 + C3266 * C4204 + C29688 * C4368) *
                C1524) *
               C29690) *
              C29499 * C2070) *
         C29532) /
        (p * q * std::sqrt(p + q));
    d2eeyy[38] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C3265 * C93 + C3111 * C250 + C3266 * C628 + C29688 * C793) *
                 C151 +
             (C3265 * C152 + C3111 * C316 + C3266 * C693 + C29688 * C841) *
                 C29532) *
                C19411 +
            ((C23830 + C23831) * C151 + (C23896 + C23897) * C29532) * C29690) *
               C29499 * C1523 -
           (((C5635 + C5634) * C29532 + (C5561 + C5560) * C151) * C29690 +
            ((C3351 + C3350) * C29532 + (C3284 + C3285) * C151) * C19411) *
               C29499 * C1524) *
              C2069 +
          ((((C5560 + C5561) * C151 + (C5634 + C5635) * C29532) * C19411 +
            ((C3265 * C1074 + C3111 * C1239 + C3266 * C4200 + C29688 * C4366) *
                 C151 +
             (C3265 * C1136 + C3111 * C1289 + C3266 * C4258 + C29688 * C4420) *
                 C29532) *
                C29690) *
               C29499 * C1524 -
           (((C23898 + C23899) * C29532 + (C23836 + C23837) * C151) * C29690 +
            ((C23897 + C23896) * C29532 + (C23831 + C23830) * C151) * C19411) *
               C29499 * C1523) *
              C2070)) /
        (p * q * std::sqrt(p + q));
    d2eeyz[38] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C3265 * C93 + C3111 * C250 + C3266 * C628 + C29688 * C793) *
                C2177 +
            (C3265 * C201 + C3111 * C376 + C3266 * C743 + C29688 * C887) *
                C2069 -
            (C23831 + C23830) * C2178 - (C23958 + C23959) * C2070) *
               C19411 +
           ((C23830 + C23831) * C2177 + (C23959 + C23958) * C2069 -
            (C23836 + C23837) * C2178 - (C23961 + C23960) * C2070) *
               C29690) *
              C29499 * C29532 * C1523 +
          (((C5560 + C5561) * C2178 -
            ((C3413 + C3412) * C2069 + (C3284 + C3285) * C2177) +
            (C5707 + C5706) * C2070) *
               C19411 +
           ((C3265 * C1074 + C3111 * C1239 + C3266 * C4200 + C29688 * C4366) *
                C2178 -
            ((C5706 + C5707) * C2069 + (C5561 + C5560) * C2177) +
            (C3265 * C1189 + C3111 * C1332 + C3266 * C4312 + C29688 * C4472) *
                C2070) *
               C29690) *
              C29499 * C29532 * C1524)) /
        (p * q * std::sqrt(p + q));
    d2eezx[38] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C19713 * C93 + C19411 * C437 + C19714 * C1072 + C29690 * C1375) *
                C1527 +
            (C19713 * C101 + C19411 * C442 + C19714 * C1078 + C29690 * C1381) *
                C1523 -
            (C19732 + C19733) * C1528 - (C19734 + C19735) * C1524) *
               C29499 * C3111 +
           ((C23482 + C23483) * C1527 + (C23484 + C23485) * C1523 -
            (C21283 + C21282) * C1528 - (C21285 + C21284) * C1524) *
               C29499 * C29688) *
              C2069 +
          (((C21924 + C21925) * C1528 -
            ((C19714 * C1085 + C29690 * C1382 + C19713 * C1078 +
              C19411 * C1381) *
                 C1523 +
             (C19714 * C1073 + C29690 * C1376 + C19713 * C1072 +
              C19411 * C1375) *
                 C1527) +
            (C21926 + C21927) * C1524) *
               C29499 * C3111 +
           ((C19713 * C2612 + C19411 * C2948 + C19714 * C4200 +
             C29690 * C4524) *
                C1528 -
            ((C19714 * C4203 + C29690 * C4525 + C19713 * C2617 +
              C19411 * C2950) *
                 C1523 +
             (C19714 * C4199 + C29690 * C4523 + C19713 * C2611 +
              C19411 * C2947) *
                 C1527) +
            (C19713 * C2618 + C19411 * C2951 + C19714 * C4204 +
             C29690 * C4526) *
                C1524) *
               C29499 * C29688) *
              C2070) *
         C29532) /
        (p * q * std::sqrt(p + q));
    d2eezy[38] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C19713 * C93 + C19411 * C437 + C19714 * C1072 + C29690 * C1375) *
                 C151 +
             (C19713 * C152 + C19411 * C503 + C19714 * C1134 + C29690 * C1425) *
                 C29532) *
                C29499 * C3111 +
            ((C23482 + C23483) * C151 + (C23549 + C23548) * C29532) * C29499 *
                C29688) *
               C1523 -
           (((C21356 + C21357) * C29532 + (C21283 + C21282) * C151) * C29499 *
                C29688 +
            ((C19799 + C19798) * C29532 + (C19732 + C19733) * C151) * C29499 *
                C3111) *
               C1524) *
              C2069 +
          ((((C21924 + C21925) * C151 + (C21998 + C21999) * C29532) * C29499 *
                C3111 +
            ((C19713 * C2612 + C19411 * C2948 + C19714 * C4200 +
              C29690 * C4524) *
                 C151 +
             (C19713 * C2674 + C19411 * C3004 + C19714 * C4258 +
              C29690 * C4578) *
                 C29532) *
                C29499 * C29688) *
               C1524 -
           (((C19714 * C4257 + C29690 * C4577 + C19713 * C2673 +
              C19411 * C3003) *
                 C29532 +
             (C19714 * C4199 + C29690 * C4523 + C19713 * C2611 +
              C19411 * C2947) *
                 C151) *
                C29499 * C29688 +
            ((C19714 * C1135 + C29690 * C1426 + C19713 * C1134 +
              C19411 * C1425) *
                 C29532 +
             (C19714 * C1073 + C29690 * C1376 + C19713 * C1072 +
              C19411 * C1375) *
                 C151) *
                C29499 * C3111) *
               C1523) *
              C2070)) /
        (p * q * std::sqrt(p + q));
    d2eezz[38] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C19713 * C93 + C19411 * C437 + C19714 * C1072 + C29690 * C1375) *
                C2177 +
            (C19713 * C201 + C19411 * C562 + C19714 * C1187 + C29690 * C1467) *
                C2069 -
            (C19714 * C1073 + C29690 * C1376 + C19713 * C1072 +
             C19411 * C1375) *
                C2178 -
            (C19714 * C1188 + C29690 * C1468 + C19713 * C1187 +
             C19411 * C1467) *
                C2070) *
               C29499 * C3111 +
           ((C23482 + C23483) * C2177 + (C23610 + C23611) * C2069 -
            (C19714 * C4199 + C29690 * C4523 + C19713 * C2611 +
             C19411 * C2947) *
                C2178 -
            (C19714 * C4311 + C29690 * C4629 + C19713 * C2729 +
             C19411 * C3056) *
                C2070) *
               C29499 * C29688) *
              C29532 * C1523 +
          (((C21924 + C21925) * C2178 -
            ((C19861 + C19860) * C2069 + (C19732 + C19733) * C2177) +
            (C22071 + C22070) * C2070) *
               C29499 * C3111 +
           ((C19713 * C2612 + C19411 * C2948 + C19714 * C4200 +
             C29690 * C4524) *
                C2178 -
            ((C21428 + C21429) * C2069 + (C21283 + C21282) * C2177) +
            (C19713 * C2730 + C19411 * C3057 + C19714 * C4312 +
             C29690 * C4630) *
                C2070) *
               C29499 * C29688) *
              C29532 * C1524)) /
        (p * q * std::sqrt(p + q));
    d2eexx[39] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13409 * C93 + C29499 * C98) * C90 +
            (C13409 * C101 + C29499 * C108) * C80 -
            (C13409 * C94 + C29499 * C99) * C91 -
            (C13409 * C102 + C29499 * C109) * C81 +
            (C13409 * C95 + C29499 * C100) * C92 +
            (C13409 * C103 + C29499 * C110) * C82) *
               C3111 +
           (C13772 * C90 + C13773 * C80 - C14566 * C91 - C14567 * C81 +
            (C13409 * C626 + C29499 * C635) * C92 +
            (C13409 * C632 + C29499 * C644) * C82) *
               C29688) *
              C19411 +
          ((C16982 * C90 + C16983 * C80 - C18164 * C91 - C18165 * C81 +
            (C13409 * C1070 + C29499 * C1079) * C92 +
            (C13409 * C1076 + C29499 * C1088) * C82) *
               C3111 +
           (C15509 * C90 + C15508 * C80 - C17552 * C91 - C17553 * C81 +
            (C13409 * C2613 + C29499 * C2616) * C92 +
            (C13409 * C2619 + C29499 * C2622) * C82) *
               C29688) *
              C29690) *
         C29543 * C29532) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13409 * C93 + C29499 * C98) * C625 +
             (C13409 * C101 + C29499 * C108) * C29511) *
                C3111 +
            (C13778 + C13779) * C29688) *
               C19411 +
           ((C16988 + C16989) * C3111 + C18772 * C29688) * C29690) *
              C29543 * C622 -
          (((C15510 + C15511) * C29688 + C18773 * C3111) * C29690 +
           ((C13781 + C13780) * C29688 + (C13779 + C13778) * C3111) * C19411) *
              C29543 * C623 +
          ((C13784 * C3111 + (C13783 + C13782) * C29688) * C19411 +
           ((C15511 + C15510) * C3111 +
            ((C13409 * C15493 + C29499 * C15494) * C625 +
             (C13409 * C15495 + C29499 * C15496) * C29511) *
                C29688) *
               C29690) *
              C29543 * C624)) /
            (p * q * std::sqrt(p + q));
    d2eexy[39] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13409 * C93 + C29499 * C98) * C151 +
             (C13409 * C152 + C29499 * C157) * C29532) *
                C3111 +
            (C13772 * C151 + C13831 * C29532) * C29688) *
               C19411 +
           ((C17046 + C17060) * C3111 + (C17049 + C17050) * C29688) * C29690) *
              C80 -
          (((C18234 + C18235) * C29688 + (C18240 + C18238) * C3111) * C29690 +
           ((C14628 * C29532 + C14566 * C151) * C29688 +
            ((C13409 * C153 + C29499 * C158) * C29532 +
             (C13409 * C94 + C29499 * C99) * C151) *
                C3111) *
               C19411) *
              C81 +
          ((((C13409 * C95 + C29499 * C100) * C151 +
             (C13409 * C154 + C29499 * C159) * C29532) *
                C3111 +
            ((C13409 * C626 + C29499 * C635) * C151 +
             (C13409 * C691 + C29499 * C697) * C29532) *
                C29688) *
               C19411 +
           (((C13409 * C1070 + C29499 * C1079) * C151 +
             (C13409 * C1132 + C29499 * C1138) * C29532) *
                C3111 +
            ((C13409 * C2613 + C29499 * C2616) * C151 +
             (C13409 * C2675 + C29499 * C2678) * C29532) *
                C29688) *
               C29690) *
              C82) *
         C29543) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13409 * C93 + C29499 * C98) * C688 +
            (C13409 * C152 + C29499 * C157) * C622 - C13772 * C689 -
            C13831 * C623 + C13774 * C690 + C13832 * C624) *
               C3111 +
           (C13772 * C688 + C13831 * C622 - C13774 * C689 - C13832 * C623 +
            C13777 * C690 + C13833 * C624) *
               C29688) *
              C19411 +
          ((C16982 * C688 + C17057 * C622 - C15509 * C689 - C15570 * C623 +
            C15507 * C690 + C15571 * C624) *
               C3111 +
           (C15509 * C688 + C15570 * C622 - C15507 * C689 - C15571 * C623 +
            (C13409 * C15493 + C29499 * C15494) * C690 +
            (C13409 * C15563 + C29499 * C15564) * C624) *
               C29688) *
              C29690) *
         C29511 * C29543) /
            (p * q * std::sqrt(p + q));
    d2eexz[39] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13409 * C93 + C29499 * C98) * C200 +
             (C13409 * C201 + C29499 * C206) * C29543) *
                C3111 +
            (C13874 + C13886) * C29688) *
               C19411 +
           ((C16982 * C200 + C17121 * C29543) * C3111 +
            (C16564 + C16565) * C29688) *
               C29690) *
              C29532 * C80 -
          (((C17695 + C17691) * C29688 +
            (C18309 * C29543 + C18164 * C200) * C3111) *
               C29690 +
           ((C14688 + C14680) * C29688 +
            ((C13409 * C202 + C29499 * C207) * C29543 +
             (C13409 * C94 + C29499 * C99) * C200) *
                C3111) *
               C19411) *
              C29532 * C81 +
          ((((C13409 * C95 + C29499 * C100) * C200 +
             (C13409 * C203 + C29499 * C208) * C29543) *
                C3111 +
            ((C13409 * C626 + C29499 * C635) * C200 +
             (C13409 * C741 + C29499 * C747) * C29543) *
                C29688) *
               C19411 +
           (((C13409 * C1070 + C29499 * C1079) * C200 +
             (C13409 * C1185 + C29499 * C1191) * C29543) *
                C3111 +
            ((C13409 * C2613 + C29499 * C2616) * C200 +
             (C13409 * C2731 + C29499 * C2734) * C29543) *
                C29688) *
               C29690) *
              C29532 * C82)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13409 * C93 + C29499 * C98) * C200 +
             (C13409 * C201 + C29499 * C206) * C29543) *
                C3111 +
            (C13874 + C13886) * C29688) *
               C19411 +
           ((C16982 * C200 + C17121 * C29543) * C3111 +
            (C16564 + C16565) * C29688) *
               C29690) *
              C622 -
          (((C16566 + C16567) * C29688 + (C16565 + C16564) * C3111) * C29690 +
           ((C13887 + C13877) * C29688 + (C13886 + C13874) * C3111) * C19411) *
              C623 +
          ((C13889 * C3111 + (C13882 + C13888) * C29688) * C19411 +
           ((C16567 + C16566) * C3111 +
            ((C13409 * C15493 + C29499 * C15494) * C200 +
             (C13409 * C15621 + C29499 * C15622) * C29543) *
                C29688) *
               C29690) *
              C624) *
         C29511) /
            (p * q * std::sqrt(p + q));
    d2eeyx[39] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C3265 * C93 + C3111 * C250 + C3266 * C628 + C29688 * C793) * C90 +
           (C3265 * C101 + C3111 * C255 + C3266 * C634 + C29688 * C799) * C80 -
           (C3284 + C3285) * C91 - (C3286 + C3287) * C81 +
           (C3288 + C3289) * C92 + (C3290 + C3291) * C82) *
              C19411 +
          ((C3265 * C1072 + C3111 * C1237 + C3266 * C2611 + C29688 * C2785) *
               C90 +
           (C3265 * C1078 + C3111 * C1243 + C3266 * C2617 + C29688 * C2788) *
               C80 -
           (C5561 + C5560) * C91 - (C5563 + C5562) * C81 +
           (C3265 * C1070 + C3111 * C1235 + C3266 * C2613 + C29688 * C2787) *
               C92 +
           (C3265 * C1076 + C3111 * C1241 + C3266 * C2619 + C29688 * C2790) *
               C82) *
              C29690) *
         C29499 * C29543 * C29532) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C3265 * C93 + C3111 * C250 + C3266 * C628 + C29688 * C793) * C625 +
            (C3265 * C101 + C3111 * C255 + C3266 * C634 + C29688 * C799) *
                C29511) *
               C19411 +
           ((C3265 * C1072 + C3111 * C1237 + C3266 * C2611 + C29688 * C2785) *
                C625 +
            (C3265 * C1078 + C3111 * C1243 + C3266 * C2617 + C29688 * C2788) *
                C29511) *
               C29690) *
              C29499 * C29543 * C622 -
          (((C3266 * C5993 + C29688 * C6229 + C3265 * C2617 + C3111 * C2788) *
                C29511 +
            (C3266 * C5989 + C29688 * C6227 + C3265 * C2611 + C3111 * C2785) *
                C625) *
               C29690 +
           ((C3266 * C641 + C29688 * C800 + C3265 * C634 + C3111 * C799) *
                C29511 +
            (C3266 * C629 + C29688 * C794 + C3265 * C628 + C3111 * C793) *
                C625) *
               C19411) *
              C29499 * C29543 * C623 +
          (((C3265 * C629 + C3111 * C794 + C3266 * C3619 + C29688 * C3833) *
                C625 +
            (C3265 * C641 + C3111 * C800 + C3266 * C3623 + C29688 * C3835) *
                C29511) *
               C19411 +
           ((C3265 * C5989 + C3111 * C6227 + C3266 * C15493 + C29688 * C15687) *
                C625 +
            (C3265 * C5993 + C3111 * C6229 + C3266 * C15495 + C29688 * C15688) *
                C29511) *
               C29690) *
              C29499 * C29543 * C624)) /
            (p * q * std::sqrt(p + q));
    d2eeyy[39] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C3265 * C93 + C3111 * C250 + C3266 * C628 + C29688 * C793) * C151 +
            (C3265 * C152 + C3111 * C316 + C3266 * C693 + C29688 * C841) *
                C29532) *
               C19411 +
           ((C3265 * C1072 + C3111 * C1237 + C3266 * C2611 + C29688 * C2785) *
                C151 +
            (C3265 * C1134 + C3111 * C1287 + C3266 * C2673 + C29688 * C2841) *
                C29532) *
               C29690) *
              C29499 * C80 -
          (((C5635 + C5634) * C29532 + (C5561 + C5560) * C151) * C29690 +
           ((C3351 + C3350) * C29532 + (C3284 + C3285) * C151) * C19411) *
              C29499 * C81 +
          (((C3288 + C3289) * C151 + (C3353 + C3352) * C29532) * C19411 +
           ((C3265 * C1070 + C3111 * C1235 + C3266 * C2613 + C29688 * C2787) *
                C151 +
            (C3265 * C1132 + C3111 * C1285 + C3266 * C2675 + C29688 * C2843) *
                C29532) *
               C29690) *
              C29499 * C82) *
         C29543) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C3265 * C93 + C3111 * C250 + C3266 * C628 + C29688 * C793) * C688 +
           (C3265 * C152 + C3111 * C316 + C3266 * C693 + C29688 * C841) * C622 -
           (C3266 * C629 + C29688 * C794 + C3265 * C628 + C3111 * C793) * C689 -
           (C3266 * C694 + C29688 * C842 + C3265 * C693 + C3111 * C841) * C623 +
           (C3265 * C629 + C3111 * C794 + C3266 * C3619 + C29688 * C3833) *
               C690 +
           (C3265 * C694 + C3111 * C842 + C3266 * C3701 + C29688 * C3887) *
               C624) *
              C19411 +
          ((C3265 * C1072 + C3111 * C1237 + C3266 * C2611 + C29688 * C2785) *
               C688 +
           (C3265 * C1134 + C3111 * C1287 + C3266 * C2673 + C29688 * C2841) *
               C622 -
           (C3266 * C5989 + C29688 * C6227 + C3265 * C2611 + C3111 * C2785) *
               C689 -
           (C3266 * C6075 + C29688 * C6297 + C3265 * C2673 + C3111 * C2841) *
               C623 +
           (C3265 * C5989 + C3111 * C6227 + C3266 * C15493 + C29688 * C15687) *
               C690 +
           (C3265 * C6075 + C3111 * C6297 + C3266 * C15563 + C29688 * C15739) *
               C624) *
              C29690) *
         C29499 * C29511 * C29543) /
            (p * q * std::sqrt(p + q));
    d2eeyz[39] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C3265 * C93 + C3111 * C250 + C3266 * C628 + C29688 * C793) * C200 +
            (C3265 * C201 + C3111 * C376 + C3266 * C743 + C29688 * C887) *
                C29543) *
               C19411 +
           ((C3265 * C1072 + C3111 * C1237 + C3266 * C2611 + C29688 * C2785) *
                C200 +
            (C3265 * C1187 + C3111 * C1329 + C3266 * C2729 + C29688 * C2894) *
                C29543) *
               C29690) *
              C29499 * C29532 * C80 -
          (((C5706 + C5707) * C29543 + (C5561 + C5560) * C200) * C29690 +
           ((C3413 + C3412) * C29543 + (C3284 + C3285) * C200) * C19411) *
              C29499 * C29532 * C81 +
          (((C3288 + C3289) * C200 + (C3415 + C3414) * C29543) * C19411 +
           ((C3265 * C1070 + C3111 * C1235 + C3266 * C2613 + C29688 * C2787) *
                C200 +
            (C3265 * C1185 + C3111 * C1333 + C3266 * C2731 + C29688 * C2896) *
                C29543) *
               C29690) *
              C29499 * C29532 * C82)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C3265 * C93 + C3111 * C250 + C3266 * C628 + C29688 * C793) * C200 +
            (C3265 * C201 + C3111 * C376 + C3266 * C743 + C29688 * C887) *
                C29543) *
               C19411 +
           ((C3265 * C1072 + C3111 * C1237 + C3266 * C2611 + C29688 * C2785) *
                C200 +
            (C3265 * C1187 + C3111 * C1329 + C3266 * C2729 + C29688 * C2894) *
                C29543) *
               C29690) *
              C29499 * C622 -
          (((C3266 * C6151 + C29688 * C6365 + C3265 * C2729 + C3111 * C2894) *
                C29543 +
            (C3266 * C5989 + C29688 * C6227 + C3265 * C2611 + C3111 * C2785) *
                C200) *
               C29690 +
           ((C3266 * C744 + C29688 * C888 + C3265 * C743 + C3111 * C887) *
                C29543 +
            (C3266 * C629 + C29688 * C794 + C3265 * C628 + C3111 * C793) *
                C200) *
               C19411) *
              C29499 * C623 +
          (((C3265 * C629 + C3111 * C794 + C3266 * C3619 + C29688 * C3833) *
                C200 +
            (C3265 * C744 + C3111 * C888 + C3266 * C3767 + C29688 * C3939) *
                C29543) *
               C19411 +
           ((C3265 * C5989 + C3111 * C6227 + C3266 * C15493 + C29688 * C15687) *
                C200 +
            (C3265 * C6151 + C3111 * C6365 + C3266 * C15621 + C29688 * C15790) *
                C29543) *
               C29690) *
              C29499 * C624) *
         C29511) /
            (p * q * std::sqrt(p + q));
    d2eezx[39] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C19713 * C93 + C19411 * C437 + C19714 * C1072 + C29690 * C1375) *
               C90 +
           (C19713 * C101 + C19411 * C442 + C19714 * C1078 + C29690 * C1381) *
               C80 -
           (C19732 + C19733) * C91 - (C19734 + C19735) * C81 +
           (C19736 + C19737) * C92 + (C19738 + C19739) * C82) *
              C29499 * C3111 +
          ((C19713 * C628 + C19411 * C931 + C19714 * C2611 + C29690 * C2947) *
               C90 +
           (C19713 * C634 + C19411 * C937 + C19714 * C2617 + C29690 * C2950) *
               C80 -
           (C21283 + C21282) * C91 - (C21285 + C21284) * C81 +
           (C19713 * C626 + C19411 * C929 + C19714 * C2613 + C29690 * C2949) *
               C92 +
           (C19713 * C632 + C19411 * C935 + C19714 * C2619 + C29690 * C2952) *
               C82) *
              C29499 * C29688) *
         C29543 * C29532) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19713 * C93 + C19411 * C437 + C19714 * C1072 + C29690 * C1375) *
                C625 +
            (C19713 * C101 + C19411 * C442 + C19714 * C1078 + C29690 * C1381) *
                C29511) *
               C29499 * C3111 +
           ((C23482 + C23483) * C625 + (C23484 + C23485) * C29511) * C29499 *
               C29688) *
              C29543 * C622 -
          (((C23486 + C23487) * C29511 + (C23488 + C23489) * C625) * C29499 *
               C29688 +
           ((C23485 + C23484) * C29511 + (C23483 + C23482) * C625) * C29499 *
               C3111) *
              C29543 * C623 +
          (((C23489 + C23488) * C625 + (C23487 + C23486) * C29511) * C29499 *
               C3111 +
           ((C19713 * C3619 + C19411 * C3991 + C19714 * C15493 +
             C29690 * C15841) *
                C625 +
            (C19713 * C3623 + C19411 * C3993 + C19714 * C15495 +
             C29690 * C15842) *
                C29511) *
               C29499 * C29688) *
              C29543 * C624)) /
            (p * q * std::sqrt(p + q));
    d2eezy[39] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19713 * C93 + C19411 * C437 + C19714 * C1072 + C29690 * C1375) *
                C151 +
            (C19713 * C152 + C19411 * C503 + C19714 * C1134 + C29690 * C1425) *
                C29532) *
               C29499 * C3111 +
           ((C19713 * C628 + C19411 * C931 + C19714 * C2611 + C29690 * C2947) *
                C151 +
            (C19713 * C693 + C19411 * C979 + C19714 * C2673 + C29690 * C3003) *
                C29532) *
               C29499 * C29688) *
              C80 -
          (((C21356 + C21357) * C29532 + (C21283 + C21282) * C151) * C29499 *
               C29688 +
           ((C19799 + C19798) * C29532 + (C19732 + C19733) * C151) * C29499 *
               C3111) *
              C81 +
          (((C19736 + C19737) * C151 + (C19801 + C19800) * C29532) * C29499 *
               C3111 +
           ((C19713 * C626 + C19411 * C929 + C19714 * C2613 + C29690 * C2949) *
                C151 +
            (C19713 * C691 + C19411 * C983 + C19714 * C2675 + C29690 * C3005) *
                C29532) *
               C29499 * C29688) *
              C82) *
         C29543) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C19713 * C93 + C19411 * C437 + C19714 * C1072 + C29690 * C1375) *
               C688 +
           (C19713 * C152 + C19411 * C503 + C19714 * C1134 + C29690 * C1425) *
               C622 -
           (C23483 + C23482) * C689 - (C23548 + C23549) * C623 +
           (C23489 + C23488) * C690 + (C23550 + C23551) * C624) *
              C29499 * C3111 +
          ((C23482 + C23483) * C688 + (C23549 + C23548) * C622 -
           (C23488 + C23489) * C689 - (C23551 + C23550) * C623 +
           (C19713 * C3619 + C19411 * C3991 + C19714 * C15493 +
            C29690 * C15841) *
               C690 +
           (C19713 * C3701 + C19411 * C4071 + C19714 * C15563 +
            C29690 * C15901) *
               C624) *
              C29499 * C29688) *
         C29511 * C29543) /
            (p * q * std::sqrt(p + q));
    d2eezz[39] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19713 * C93 + C19411 * C437 + C19714 * C1072 + C29690 * C1375) *
                C200 +
            (C19713 * C201 + C19411 * C562 + C19714 * C1187 + C29690 * C1467) *
                C29543) *
               C29499 * C3111 +
           ((C19713 * C628 + C19411 * C931 + C19714 * C2611 + C29690 * C2947) *
                C200 +
            (C19713 * C743 + C19411 * C1025 + C19714 * C2729 + C29690 * C3056) *
                C29543) *
               C29499 * C29688) *
              C29532 * C80 -
          (((C21428 + C21429) * C29543 + (C21283 + C21282) * C200) * C29499 *
               C29688 +
           ((C19861 + C19860) * C29543 + (C19732 + C19733) * C200) * C29499 *
               C3111) *
              C29532 * C81 +
          (((C19736 + C19737) * C200 + (C19863 + C19862) * C29543) * C29499 *
               C3111 +
           ((C19713 * C626 + C19411 * C929 + C19714 * C2613 + C29690 * C2949) *
                C200 +
            (C19713 * C741 + C19411 * C1023 + C19714 * C2731 + C29690 * C3058) *
                C29543) *
               C29499 * C29688) *
              C29532 * C82)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19713 * C93 + C19411 * C437 + C19714 * C1072 + C29690 * C1375) *
                C200 +
            (C19713 * C201 + C19411 * C562 + C19714 * C1187 + C29690 * C1467) *
                C29543) *
               C29499 * C3111 +
           ((C23482 + C23483) * C200 + (C23610 + C23611) * C29543) * C29499 *
               C29688) *
              C622 -
          (((C23612 + C23613) * C29543 + (C23488 + C23489) * C200) * C29499 *
               C29688 +
           ((C23611 + C23610) * C29543 + (C23483 + C23482) * C200) * C29499 *
               C3111) *
              C623 +
          (((C23489 + C23488) * C200 + (C23613 + C23612) * C29543) * C29499 *
               C3111 +
           ((C19713 * C3619 + C19411 * C3991 + C19714 * C15493 +
             C29690 * C15841) *
                C200 +
            (C19713 * C3767 + C19411 * C4132 + C19714 * C15621 +
             C29690 * C15955) *
                C29543) *
               C29499 * C29688) *
              C624) *
         C29511) /
            (p * q * std::sqrt(p + q));
    d2eexx[40] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C13409 * C93 + C29499 * C98) * C1527 +
                      (C13409 * C101 + C29499 * C108) * C1523 -
                      (C13409 * C94 + C29499 * C99) * C1528 -
                      (C13409 * C102 + C29499 * C109) * C1524) *
                         C29588 * C25979 +
                     (C18158 + C18159 - C18166 - C18167) * C29588 * C25980 +
                     (C16987 * C1527 + C16986 * C1523 -
                      (C13409 * C1074 + C29499 * C1083) * C1528 -
                      (C13409 * C1086 + C29499 * C1092) * C1524) *
                         C29588 * C25981) *
                        C29543 * C1525 +
                    ((C14570 - (C14555 + C14554) + C14571) * C29588 * C25979 +
                     (C17554 - (C17547 + C17546) + C17555) * C29588 * C25980 +
                     ((C13409 * C4200 + C29499 * C4202) * C1528 -
                      (C16984 * C1523 + C16985 * C1527) +
                      (C13409 * C4204 + C29499 * C4206) * C1524) *
                         C29588 * C25981) *
                        C29543 * C1526)) /
                  (p * q * std::sqrt(p + q));
    d2eexy[40] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C13409 * C93 + C29499 * C98) * C1583 +
            (C13409 * C152 + C29499 * C157) * C1525 - C13772 * C1584 -
            C13831 * C1526) *
               C29588 * C25979 +
           (C18840 + C18841 - C18842 - C18843) * C29588 * C25980 +
           (C16987 * C1583 + C17059 * C1525 - C16985 * C1584 - C17058 * C1526) *
               C29588 * C25981) *
              C1523 +
          ((C14566 * C1584 -
            ((C13409 * C153 + C29499 * C158) * C1525 +
             (C13409 * C94 + C29499 * C99) * C1583) +
            C14628 * C1526) *
               C29588 * C25979 +
           (C17552 * C1584 - (C18239 * C1525 + C18164 * C1583) +
            C17624 * C1526) *
               C29588 * C25980 +
           ((C13409 * C4200 + C29499 * C4202) * C1584 -
            ((C13409 * C1136 + C29499 * C1142) * C1525 +
             (C13409 * C1074 + C29499 * C1083) * C1583) +
            (C13409 * C4258 + C29499 * C4260) * C1526) *
               C29588 * C25981) *
              C1524) *
         C29543) /
        (p * q * std::sqrt(p + q));
    d2eexz[40] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C13409 * C93 + C29499 * C98) * C200 +
                       (C13409 * C201 + C29499 * C206) * C29543) *
                          C29588 * C25979 +
                      (C16982 * C200 + C17121 * C29543) * C29588 * C25980 +
                      (C16987 * C200 + C17122 * C29543) * C29588 * C25981) *
                         C1525 -
                     ((C17123 * C29543 + C16985 * C200) * C29588 * C25981 +
                      (C16565 + C16564) * C29588 * C25980 +
                      (C13886 + C13874) * C29588 * C25979) *
                         C1526) *
                        C1523 +
                    (((C14680 + C14688) * C29588 * C25979 +
                      (C17691 + C17695) * C29588 * C25980 +
                      ((C13409 * C4200 + C29499 * C4202) * C200 +
                       (C13409 * C4312 + C29499 * C4314) * C29543) *
                          C29588 * C25981) *
                         C1526 -
                     (((C13409 * C1189 + C29499 * C1195) * C29543 +
                       (C13409 * C1074 + C29499 * C1083) * C200) *
                          C29588 * C25981 +
                      (C18309 * C29543 + C18164 * C200) * C29588 * C25980 +
                      ((C13409 * C202 + C29499 * C207) * C29543 +
                       (C13409 * C94 + C29499 * C99) * C200) *
                          C29588 * C25979) *
                         C1525) *
                        C1524)) /
                  (p * q * std::sqrt(p + q));
    d2eeyx[40] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C249 * C93 + C29588 * C250) * C1527 +
            (C249 * C101 + C29588 * C255) * C1523 - C273 * C1528 -
            C274 * C1524) *
               C25979 +
           (C9054 + C9055 - C9056 - C9057) * C25980 +
           (C7837 * C1527 + C7836 * C1523 - C7835 * C1528 - C7834 * C1524) *
               C25981) *
              C29499 * C29543 * C1525 +
          ((C1700 * C1528 -
            ((C249 * C634 + C29588 * C799) * C1523 +
             (C249 * C628 + C29588 * C793) * C1527) +
            C1701 * C1524) *
               C25979 +
           (C8398 * C1528 - (C9693 * C1523 + C9692 * C1527) + C8399 * C1524) *
               C25980 +
           ((C249 * C4200 + C29588 * C4366) * C1528 -
            ((C249 * C4203 + C29588 * C4367) * C1523 +
             (C249 * C4199 + C29588 * C4365) * C1527) +
            (C249 * C4204 + C29588 * C4368) * C1524) *
               C25981) *
              C29499 * C29543 * C1526)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[40] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C249 * C93 + C29588 * C250) * C1583 +
                      (C249 * C152 + C29588 * C316) * C1525 -
                      (C249 * C628 + C29588 * C793) * C1584 -
                      (C249 * C693 + C29588 * C841) * C1526) *
                         C25979 +
                     (C9762 + C9763 - C9764 - C9768) * C25980 +
                     (C7837 * C1583 + C7907 * C1525 -
                      (C249 * C4199 + C29588 * C4365) * C1584 -
                      (C249 * C4257 + C29588 * C4419) * C1526) *
                         C25981) *
                        C29499 * C1523 +
                    ((C1757 - (C1756 + C1755) + C1767) * C25979 +
                     (C8468 - (C8467 + C8466) + C8472) * C25980 +
                     ((C249 * C4200 + C29588 * C4366) * C1584 -
                      (C7906 * C1525 + C7835 * C1583) +
                      (C249 * C4258 + C29588 * C4420) * C1526) *
                         C25981) *
                        C29499 * C1524) *
                   C29543) /
                  (p * q * std::sqrt(p + q));
    d2eeyz[40] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C249 * C93 + C29588 * C250) * C200 +
                       (C249 * C201 + C29588 * C376) * C29543) *
                          C25979 +
                      (C7832 * C200 + C7969 * C29543) * C25980 +
                      (C7837 * C200 + C7970 * C29543) * C25981) *
                         C29499 * C1525 -
                     (((C249 * C4311 + C29588 * C4471) * C29543 +
                       (C249 * C4199 + C29588 * C4365) * C200) *
                          C25981 +
                      (C9837 * C29543 + C9692 * C200) * C25980 +
                      ((C249 * C743 + C29588 * C887) * C29543 +
                       (C249 * C628 + C29588 * C793) * C200) *
                          C25979) *
                         C29499 * C1526) *
                        C1523 +
                    (((C1825 + C1829) * C25979 + (C8541 + C8543) * C25980 +
                      ((C249 * C4200 + C29588 * C4366) * C200 +
                       (C249 * C4312 + C29588 * C4472) * C29543) *
                          C25981) *
                         C29499 * C1526 -
                     ((C7971 * C29543 + C7835 * C200) * C25981 +
                      (C6897 + C6896) * C25980 + (C394 + C382) * C25979) *
                         C29499 * C1525) *
                        C1524)) /
                  (p * q * std::sqrt(p + q));
    d2eezx[40] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((C26210 * C93 + C25979 * C437 + C26211 * C1072 +
                      C25980 * C1375 + C26212 * C1073 + C25981 * C1376) *
                         C1527 +
                     (C26210 * C101 + C25979 * C442 + C26211 * C1078 +
                      C25980 * C1381 + C26212 * C1085 + C25981 * C1382) *
                         C1523 -
                     (C26212 * C1074 + C25981 * C1377 + C26211 * C1071 +
                      C25980 * C1374 + C26210 * C94 + C25979 * C438) *
                         C1528 -
                     (C26212 * C1086 + C25981 * C1383 + C26211 * C1077 +
                      C25980 * C1380 + C26210 * C102 + C25979 * C443) *
                         C1524) *
                        C29499 * C29588 * C29543 * C1525 +
                    ((C26210 * C627 + C25979 * C930 + C26211 * C2612 +
                      C25980 * C2948 + C26212 * C4200 + C25981 * C4524) *
                         C1528 -
                     ((C26212 * C4203 + C25981 * C4525 + C26211 * C2617 +
                       C25980 * C2950 + C26210 * C634 + C25979 * C937) *
                          C1523 +
                      (C26212 * C4199 + C25981 * C4523 + C26211 * C2611 +
                       C25980 * C2947 + C26210 * C628 + C25979 * C931) *
                          C1527) +
                     (C26210 * C633 + C25979 * C936 + C26211 * C2618 +
                      C25980 * C2951 + C26212 * C4204 + C25981 * C4526) *
                         C1524) *
                        C29499 * C29588 * C29543 * C1526)) /
                  (p * q * std::sqrt(p + q));
    d2eezy[40] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((C26210 * C93 + C25979 * C437 + C26211 * C1072 +
                      C25980 * C1375 + C26212 * C1073 + C25981 * C1376) *
                         C1583 +
                     (C26210 * C152 + C25979 * C503 + C26211 * C1134 +
                      C25980 * C1425 + C26212 * C1135 + C25981 * C1426) *
                         C1525 -
                     (C26212 * C4199 + C25981 * C4523 + C26211 * C2611 +
                      C25980 * C2947 + C26210 * C628 + C25979 * C931) *
                         C1584 -
                     (C26212 * C4257 + C25981 * C4577 + C26211 * C2673 +
                      C25980 * C3003 + C26210 * C693 + C25979 * C979) *
                         C1526) *
                        C29499 * C29588 * C1523 +
                    ((C26210 * C627 + C25979 * C930 + C26211 * C2612 +
                      C25980 * C2948 + C26212 * C4200 + C25981 * C4524) *
                         C1584 -
                     ((C26212 * C1136 + C25981 * C1427 + C26211 * C1133 +
                       C25980 * C1424 + C26210 * C153 + C25979 * C504) *
                          C1525 +
                      (C26212 * C1074 + C25981 * C1377 + C26211 * C1071 +
                       C25980 * C1374 + C26210 * C94 + C25979 * C438) *
                          C1583) +
                     (C26210 * C692 + C25979 * C981 + C26211 * C2674 +
                      C25980 * C3004 + C26212 * C4258 + C25981 * C4578) *
                         C1526) *
                        C29499 * C29588 * C1524) *
                   C29543) /
                  (p * q * std::sqrt(p + q));
    d2eezz[40] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C26210 * C93 + C25979 * C437 + C26211 * C1072 +
                       C25980 * C1375 + C26212 * C1073 + C25981 * C1376) *
                          C200 +
                      (C26210 * C201 + C25979 * C562 + C26211 * C1187 +
                       C25980 * C1467 + C26212 * C1188 + C25981 * C1468) *
                          C29543) *
                         C29499 * C29588 * C1525 -
                     ((C26212 * C4311 + C25981 * C4629 + C26211 * C2729 +
                       C25980 * C3056 + C26210 * C743 + C25979 * C1025) *
                          C29543 +
                      (C26212 * C4199 + C25981 * C4523 + C26211 * C2611 +
                       C25980 * C2947 + C26210 * C628 + C25979 * C931) *
                          C200) *
                         C29499 * C29588 * C1526) *
                        C1523 +
                    (((C26210 * C627 + C25979 * C930 + C26211 * C2612 +
                       C25980 * C2948 + C26212 * C4200 + C25981 * C4524) *
                          C200 +
                      (C26210 * C742 + C25979 * C1024 + C26211 * C2730 +
                       C25980 * C3057 + C26212 * C4312 + C25981 * C4630) *
                          C29543) *
                         C29499 * C29588 * C1526 -
                     ((C26212 * C1189 + C25981 * C1470 + C26211 * C1186 +
                       C25980 * C1469 + C26210 * C202 + C25979 * C563) *
                          C29543 +
                      (C26212 * C1074 + C25981 * C1377 + C26211 * C1071 +
                       C25980 * C1374 + C26210 * C94 + C25979 * C438) *
                          C200) *
                         C29499 * C29588 * C1525) *
                        C1524)) /
                  (p * q * std::sqrt(p + q));
    d2eexx[41] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C13409 * C93 + C29499 * C98) * C625 +
             (C13409 * C101 + C29499 * C108) * C29511) *
                C29588 * C25979 +
            (C16988 + C16989) * C29588 * C25980 + C26679 * C25981) *
               C2069 -
           ((C26682 + C26683) * C29588 * C25981 +
            (C16992 + C16993) * C29588 * C25980 +
            (C16989 + C16988) * C29588 * C25979) *
               C2070) *
              C1525 +
          ((C18772 * C29588 * C25979 + (C16991 + C16990) * C29588 * C25980 +
            ((C13409 * C16965 + C29499 * C16966) * C625 +
             (C13409 * C16967 + C29499 * C16968) * C29511) *
                C29588 * C25981) *
               C2070 -
           ((C16990 + C16991) * C29588 * C25981 + C18773 * C29588 * C25980 +
            (C13779 + C13778) * C29588 * C25979) *
               C2069) *
              C1526)) /
        (p * q * std::sqrt(p + q));
    d2eexy[41] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C13409 * C93 + C29499 * C98) * C1583 +
                      (C13409 * C152 + C29499 * C157) * C1525 - C13772 * C1584 -
                      C13831 * C1526) *
                         C29588 * C25979 +
                     (C18840 + C18841 - C18842 - C18843) * C29588 * C25980 +
                     (C28050 + C28051 - C28052 - C28053) * C29588 * C25981) *
                        C29511 * C2069 +
                    ((C18842 - (C18841 + C18840) + C18843) * C29588 * C25979 +
                     (C28052 - (C28051 + C28050) + C28053) * C29588 * C25980 +
                     ((C13409 * C16965 + C29499 * C16966) * C1584 -
                      (C26729 * C1525 + C26681 * C1583) +
                      (C13409 * C17043 + C29499 * C17044) * C1526) *
                         C29588 * C25981) *
                        C29511 * C2070)) /
                  (p * q * std::sqrt(p + q));
    d2eexz[41] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C13409 * C93 + C29499 * C98) * C2177 +
            (C13409 * C201 + C29499 * C206) * C2069 - C16982 * C2178 -
            C17121 * C2070) *
               C29588 * C25979 +
           (C16982 * C2177 + C17121 * C2069 - C16987 * C2178 - C17122 * C2070) *
               C29588 * C25980 +
           (C16987 * C2177 + C17122 * C2069 - C26681 * C2178 - C26773 * C2070) *
               C29588 * C25981) *
              C1525 +
          ((C15626 - (C15625 + C15624) + C15636) * C29588 * C25979 +
           (C18916 - (C18915 + C18914) + C18917) * C29588 * C25980 +
           ((C13409 * C16965 + C29499 * C16966) * C2178 -
            (C17123 * C2069 + C16985 * C2177) +
            (C13409 * C17112 + C29499 * C17113) * C2070) *
               C29588 * C25981) *
              C1526) *
         C29511) /
        (p * q * std::sqrt(p + q));
    d2eeyx[41] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C249 * C93 + C29588 * C250) * C625 +
                       (C249 * C101 + C29588 * C255) * C29511) *
                          C25979 +
                      (C7838 + C7839) * C25980 + C26814 * C25981) *
                         C29499 * C2069 -
                     ((C26821 + C26822) * C25981 + (C7842 + C7843) * C25980 +
                      (C7839 + C7838) * C25979) *
                         C29499 * C2070) *
                        C1525 +
                    (((C9694 + C9695) * C25979 + (C28160 + C28161) * C25980 +
                      ((C249 * C16965 + C29588 * C17173) * C625 +
                       (C249 * C16967 + C29588 * C17174) * C29511) *
                          C25981) *
                         C29499 * C2070 -
                     ((C28161 + C28160) * C25981 + (C9695 + C9694) * C25980 +
                      ((C249 * C634 + C29588 * C799) * C29511 +
                       (C249 * C628 + C29588 * C793) * C625) *
                          C25979) *
                         C29499 * C2069) *
                        C1526)) /
                  (p * q * std::sqrt(p + q));
    d2eeyy[41] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C249 * C93 + C29588 * C250) * C1583 +
                      (C249 * C152 + C29588 * C316) * C1525 -
                      (C249 * C628 + C29588 * C793) * C1584 -
                      (C249 * C693 + C29588 * C841) * C1526) *
                         C25979 +
                     (C9762 + C9763 - C9764 - C9768) * C25980 +
                     (C28212 + C28213 - C28214 - C28218) * C25981) *
                        C29499 * C29511 * C2069 +
                    ((C9764 - (C9763 + C9762) + C9768) * C25979 +
                     (C28214 - (C28213 + C28212) + C28218) * C25980 +
                     ((C249 * C16965 + C29588 * C17173) * C1584 -
                      (C26866 * C1525 + C26820 * C1583) +
                      (C249 * C17043 + C29588 * C17249) * C1526) *
                         C25981) *
                        C29499 * C29511 * C2070)) /
                  (p * q * std::sqrt(p + q));
    d2eeyz[41] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C249 * C93 + C29588 * C250) * C2177 +
            (C249 * C201 + C29588 * C376) * C2069 - C7832 * C2178 -
            C7969 * C2070) *
               C25979 +
           (C7832 * C2177 + C7969 * C2069 - C7837 * C2178 - C7970 * C2070) *
               C25980 +
           (C7837 * C2177 + C7970 * C2069 - C26820 * C2178 - C26909 * C2070) *
               C25981) *
              C29499 * C1525 +
          ((C9692 * C2178 -
            ((C249 * C743 + C29588 * C887) * C2069 +
             (C249 * C628 + C29588 * C793) * C2177) +
            C9837 * C2070) *
               C25979 +
           (C28158 * C2178 - (C9837 * C2069 + C9692 * C2177) + C28271 * C2070) *
               C25980 +
           ((C249 * C16965 + C29588 * C17173) * C2178 -
            (C28271 * C2069 + C28158 * C2177) +
            (C249 * C17112 + C29588 * C17312) * C2070) *
               C25981) *
              C29499 * C1526) *
         C29511) /
        (p * q * std::sqrt(p + q));
    d2eezx[41] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C26210 * C93 + C25979 * C437 + C26211 * C1072 +
                       C25980 * C1375 + C26212 * C1073 + C25981 * C1376) *
                          C625 +
                      (C26210 * C101 + C25979 * C442 + C26211 * C1078 +
                       C25980 * C1381 + C26212 * C1085 + C25981 * C1382) *
                          C29511) *
                         C29499 * C29588 * C2069 -
                     ((C26212 * C7603 + C25981 * C8023 + C26211 * C1085 +
                       C25980 * C1382 + C26210 * C1078 + C25979 * C1381) *
                          C29511 +
                      (C26212 * C7599 + C25981 * C8021 + C26211 * C1073 +
                       C25980 * C1376 + C26210 * C1072 + C25979 * C1375) *
                          C625) *
                         C29499 * C29588 * C2070) *
                        C1525 +
                    (((C26210 * C2611 + C25979 * C2947 + C26211 * C4199 +
                       C25980 * C4523 + C26212 * C16965 + C25981 * C17375) *
                          C625 +
                      (C26210 * C2617 + C25979 * C2950 + C26211 * C4203 +
                       C25980 * C4525 + C26212 * C16967 + C25981 * C17376) *
                          C29511) *
                         C29499 * C29588 * C2070 -
                     ((C26212 * C4203 + C25981 * C4525 + C26211 * C2617 +
                       C25980 * C2950 + C26210 * C634 + C25979 * C937) *
                          C29511 +
                      (C26212 * C4199 + C25981 * C4523 + C26211 * C2611 +
                       C25980 * C2947 + C26210 * C628 + C25979 * C931) *
                          C625) *
                         C29499 * C29588 * C2069) *
                        C1526)) /
                  (p * q * std::sqrt(p + q));
    d2eezy[41] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((C26210 * C93 + C25979 * C437 + C26211 * C1072 +
                      C25980 * C1375 + C26212 * C1073 + C25981 * C1376) *
                         C1583 +
                     (C26210 * C152 + C25979 * C503 + C26211 * C1134 +
                      C25980 * C1425 + C26212 * C1135 + C25981 * C1426) *
                         C1525 -
                     (C26212 * C4199 + C25981 * C4523 + C26211 * C2611 +
                      C25980 * C2947 + C26210 * C628 + C25979 * C931) *
                         C1584 -
                     (C26212 * C4257 + C25981 * C4577 + C26211 * C2673 +
                      C25980 * C3003 + C26210 * C693 + C25979 * C979) *
                         C1526) *
                        C29499 * C29588 * C29511 * C2069 +
                    ((C26210 * C2611 + C25979 * C2947 + C26211 * C4199 +
                      C25980 * C4523 + C26212 * C16965 + C25981 * C17375) *
                         C1584 -
                     ((C26212 * C7681 + C25981 * C8075 + C26211 * C1135 +
                       C25980 * C1426 + C26210 * C1134 + C25979 * C1425) *
                          C1525 +
                      (C26212 * C7599 + C25981 * C8021 + C26211 * C1073 +
                       C25980 * C1376 + C26210 * C1072 + C25979 * C1375) *
                          C1583) +
                     (C26210 * C2673 + C25979 * C3003 + C26211 * C4257 +
                      C25980 * C4577 + C26212 * C17043 + C25981 * C17427) *
                         C1526) *
                        C29499 * C29588 * C29511 * C2070)) /
                  (p * q * std::sqrt(p + q));
    d2eezz[41] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((C26210 * C93 + C25979 * C437 + C26211 * C1072 +
                      C25980 * C1375 + C26212 * C1073 + C25981 * C1376) *
                         C2177 +
                     (C26210 * C201 + C25979 * C562 + C26211 * C1187 +
                      C25980 * C1467 + C26212 * C1188 + C25981 * C1468) *
                         C2069 -
                     (C26212 * C7599 + C25981 * C8021 + C26211 * C1073 +
                      C25980 * C1376 + C26210 * C1072 + C25979 * C1375) *
                         C2178 -
                     (C26212 * C7747 + C25981 * C8127 + C26211 * C1188 +
                      C25980 * C1468 + C26210 * C1187 + C25979 * C1467) *
                         C2070) *
                        C29499 * C29588 * C1525 +
                    ((C26210 * C2611 + C25979 * C2947 + C26211 * C4199 +
                      C25980 * C4523 + C26212 * C16965 + C25981 * C17375) *
                         C2178 -
                     ((C26212 * C4311 + C25981 * C4629 + C26211 * C2729 +
                       C25980 * C3056 + C26210 * C743 + C25979 * C1025) *
                          C2069 +
                      (C26212 * C4199 + C25981 * C4523 + C26211 * C2611 +
                       C25980 * C2947 + C26210 * C628 + C25979 * C931) *
                          C2177) +
                     (C26210 * C2729 + C25979 * C3056 + C26211 * C4311 +
                      C25980 * C4629 + C26212 * C17112 + C25981 * C17478) *
                         C2070) *
                        C29499 * C29588 * C1526) *
                   C29511) /
                  (p * q * std::sqrt(p + q));
    d2eexx[42] +=
        (-std::pow(Pi, 2.5) *
         ((((C13409 * C93 + C29499 * C98) * C625 +
            (C13409 * C101 + C29499 * C108) * C29511) *
               C29588 * C25979 +
           (C16988 + C16989) * C29588 * C25980 +
           (C16993 + C16992) * C29588 * C25981) *
              C29543 * C622 -
          ((C16990 + C16991) * C29588 * C25981 + C18773 * C29588 * C25980 +
           (C13779 + C13778) * C29588 * C25979) *
              C29543 * C623 +
          (C13784 * C29588 * C25979 + (C15511 + C15510) * C29588 * C25980 +
           ((C13409 * C14183 + C29499 * C14184) * C625 +
            (C13409 * C14185 + C29499 * C14186) * C29511) *
               C29588 * C25981) *
              C29543 * C624)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C13409 * C93 + C29499 * C98) * C90 +
           (C13409 * C101 + C29499 * C108) * C80 -
           (C13409 * C94 + C29499 * C99) * C91 -
           (C13409 * C102 + C29499 * C109) * C81 +
           (C13409 * C95 + C29499 * C100) * C92 +
           (C13409 * C103 + C29499 * C110) * C82) *
              C29588 * C25979 +
          (C16982 * C90 + C16983 * C80 - C18164 * C91 - C18165 * C81 +
           (C13409 * C1070 + C29499 * C1079) * C92 +
           (C13409 * C1076 + C29499 * C1088) * C82) *
              C29588 * C25980 +
          (C16987 * C90 + C16986 * C80 -
           (C13409 * C1074 + C29499 * C1083) * C91 -
           (C13409 * C1086 + C29499 * C1092) * C81 +
           (C13409 * C1075 + C29499 * C1084) * C92 +
           (C13409 * C1087 + C29499 * C1093) * C82) *
              C29588 * C25981) *
         C29543 * C29532) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C13409 * C93 + C29499 * C98) * C625 +
            (C13409 * C101 + C29499 * C108) * C29511) *
               C29588 * C25979 +
           (C16988 + C16989) * C29588 * C25980 + C26679 * C25981) *
              C1067 -
          ((C26682 + C26683) * C29588 * C25981 +
           (C16992 + C16993) * C29588 * C25980 +
           (C16989 + C16988) * C29588 * C25979) *
              C1068 +
          (C26679 * C25979 + (C26683 + C26682) * C29588 * C25980 +
           ((C13409 * C26669 + C29499 * C26670) * C625 +
            (C13409 * C26671 + C29499 * C26672) * C29511) *
               C29588 * C25981) *
              C1069) *
         C29532) /
            (p * q * std::sqrt(p + q));
    d2eexy[42] +=
        (-std::pow(Pi, 2.5) *
         (((C13409 * C93 + C29499 * C98) * C688 +
           (C13409 * C152 + C29499 * C157) * C622 - C13772 * C689 -
           C13831 * C623 + C13774 * C690 + C13832 * C624) *
              C29588 * C25979 +
          (C16982 * C688 + C17057 * C622 - C15509 * C689 - C15570 * C623 +
           C15507 * C690 + C15571 * C624) *
              C29588 * C25980 +
          (C16987 * C688 + C17059 * C622 - C16985 * C689 - C17058 * C623 +
           (C13409 * C14183 + C29499 * C14184) * C690 +
           (C13409 * C14225 + C29499 * C14226) * C624) *
              C29588 * C25981) *
         C29511 * C29543) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C13409 * C93 + C29499 * C98) * C151 +
            (C13409 * C152 + C29499 * C157) * C29532) *
               C29588 * C25979 +
           (C17046 + C17060) * C29588 * C25980 +
           (C17056 + C17062) * C29588 * C25981) *
              C80 -
          (((C13409 * C1136 + C29499 * C1142) * C29532 +
            (C13409 * C1074 + C29499 * C1083) * C151) *
               C29588 * C25981 +
           (C18240 + C18238) * C29588 * C25980 +
           ((C13409 * C153 + C29499 * C158) * C29532 +
            (C13409 * C94 + C29499 * C99) * C151) *
               C29588 * C25979) *
              C81 +
          (((C13409 * C95 + C29499 * C100) * C151 +
            (C13409 * C154 + C29499 * C159) * C29532) *
               C29588 * C25979 +
           ((C13409 * C1070 + C29499 * C1079) * C151 +
            (C13409 * C1132 + C29499 * C1138) * C29532) *
               C29588 * C25980 +
           ((C13409 * C1075 + C29499 * C1084) * C151 +
            (C13409 * C1137 + C29499 * C1143) * C29532) *
               C29588 * C25981) *
              C82) *
         C29543) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C13409 * C93 + C29499 * C98) * C151 +
            (C13409 * C152 + C29499 * C157) * C29532) *
               C29588 * C25979 +
           (C17046 + C17060) * C29588 * C25980 + C26728 * C25981) *
              C29511 * C1067 -
          ((C26730 + C26727) * C29588 * C25981 +
           (C17062 + C17056) * C29588 * C25980 +
           (C17060 + C17046) * C29588 * C25979) *
              C29511 * C1068 +
          (C26728 * C25979 + (C26727 + C26730) * C29588 * C25980 +
           ((C13409 * C26669 + C29499 * C26670) * C151 +
            (C13409 * C26721 + C29499 * C26722) * C29532) *
               C29588 * C25981) *
              C29511 * C1069)) /
            (p * q * std::sqrt(p + q));
    d2eexz[42] +=
        (-std::pow(Pi, 2.5) *
         ((((C13409 * C93 + C29499 * C98) * C200 +
            (C13409 * C201 + C29499 * C206) * C29543) *
               C29588 * C25979 +
           (C16982 * C200 + C17121 * C29543) * C29588 * C25980 +
           (C16987 * C200 + C17122 * C29543) * C29588 * C25981) *
              C622 -
          ((C17123 * C29543 + C16985 * C200) * C29588 * C25981 +
           (C16565 + C16564) * C29588 * C25980 +
           (C13886 + C13874) * C29588 * C25979) *
              C623 +
          (C13889 * C29588 * C25979 + (C16567 + C16566) * C29588 * C25980 +
           ((C13409 * C14183 + C29499 * C14184) * C200 +
            (C13409 * C14265 + C29499 * C14266) * C29543) *
               C29588 * C25981) *
              C624) *
         C29511) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C13409 * C93 + C29499 * C98) * C200 +
            (C13409 * C201 + C29499 * C206) * C29543) *
               C29588 * C25979 +
           (C16982 * C200 + C17121 * C29543) * C29588 * C25980 +
           (C16987 * C200 + C17122 * C29543) * C29588 * C25981) *
              C29532 * C80 -
          (((C13409 * C1189 + C29499 * C1195) * C29543 +
            (C13409 * C1074 + C29499 * C1083) * C200) *
               C29588 * C25981 +
           (C18309 * C29543 + C18164 * C200) * C29588 * C25980 +
           ((C13409 * C202 + C29499 * C207) * C29543 +
            (C13409 * C94 + C29499 * C99) * C200) *
               C29588 * C25979) *
              C29532 * C81 +
          (((C13409 * C95 + C29499 * C100) * C200 +
            (C13409 * C203 + C29499 * C208) * C29543) *
               C29588 * C25979 +
           ((C13409 * C1070 + C29499 * C1079) * C200 +
            (C13409 * C1185 + C29499 * C1191) * C29543) *
               C29588 * C25980 +
           ((C13409 * C1075 + C29499 * C1084) * C200 +
            (C13409 * C1190 + C29499 * C1196) * C29543) *
               C29588 * C25981) *
              C29532 * C82)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C13409 * C93 + C29499 * C98) * C1182 +
           (C13409 * C201 + C29499 * C206) * C1067 - C16982 * C1183 -
           C17121 * C1068 + C16987 * C1184 + C17122 * C1069) *
              C29588 * C25979 +
          (C16982 * C1182 + C17121 * C1067 - C16987 * C1183 - C17122 * C1068 +
           C26681 * C1184 + C26773 * C1069) *
              C29588 * C25980 +
          (C16987 * C1182 + C17122 * C1067 - C26681 * C1183 - C26773 * C1068 +
           (C13409 * C26669 + C29499 * C26670) * C1184 +
           (C13409 * C26768 + C29499 * C26769) * C1069) *
              C29588 * C25981) *
         C29532 * C29511) /
            (p * q * std::sqrt(p + q));
    d2eeyx[42] += (-std::pow(Pi, 2.5) *
                   ((((C249 * C93 + C29588 * C250) * C625 +
                      (C249 * C101 + C29588 * C255) * C29511) *
                         C25979 +
                     (C7838 + C7839) * C25980 + (C7843 + C7842) * C25981) *
                        C29499 * C29543 * C622 -
                    (((C249 * C4203 + C29588 * C4367) * C29511 +
                      (C249 * C4199 + C29588 * C4365) * C625) *
                         C25981 +
                     (C9695 + C9694) * C25980 +
                     ((C249 * C634 + C29588 * C799) * C29511 +
                      (C249 * C628 + C29588 * C793) * C625) *
                         C25979) *
                        C29499 * C29543 * C623 +
                    (((C249 * C629 + C29588 * C794) * C625 +
                      (C249 * C641 + C29588 * C800) * C29511) *
                         C25979 +
                     ((C249 * C5989 + C29588 * C6227) * C625 +
                      (C249 * C5993 + C29588 * C6229) * C29511) *
                         C25980 +
                     ((C249 * C14183 + C29588 * C14305) * C625 +
                      (C249 * C14185 + C29588 * C14306) * C29511) *
                         C25981) *
                        C29499 * C29543 * C624)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::pow(Pi, 2.5) *
                   (((C249 * C93 + C29588 * C250) * C90 +
                     (C249 * C101 + C29588 * C255) * C80 - C273 * C91 -
                     C274 * C81 + C275 * C92 + C276 * C82) *
                        C25979 +
                    (C7832 * C90 + C7833 * C80 - C2242 * C91 - C2243 * C81 +
                     C2244 * C92 + C2245 * C82) *
                        C25980 +
                    (C7837 * C90 + C7836 * C80 - C7835 * C91 - C7834 * C81 +
                     (C249 * C1075 + C29588 * C1240) * C92 +
                     (C249 * C1087 + C29588 * C1246) * C82) *
                        C25981) *
                   C29499 * C29543 * C29532) /
                      (p * q * std::sqrt(p + q)) +
                  (2 * std::pow(Pi, 2.5) *
                   ((((C249 * C93 + C29588 * C250) * C625 +
                      (C249 * C101 + C29588 * C255) * C29511) *
                         C25979 +
                     (C7838 + C7839) * C25980 + C26814 * C25981) *
                        C29499 * C1067 -
                    ((C26821 + C26822) * C25981 + (C7842 + C7843) * C25980 +
                     (C7839 + C7838) * C25979) *
                        C29499 * C1068 +
                    (C26814 * C25979 + (C26822 + C26821) * C25980 +
                     ((C249 * C26669 + C29588 * C26811) * C625 +
                      (C249 * C26671 + C29588 * C26812) * C29511) *
                         C25981) *
                        C29499 * C1069) *
                   C29532) /
                      (p * q * std::sqrt(p + q));
    d2eeyy[42] +=
        (-std::pow(Pi, 2.5) *
         (((C249 * C93 + C29588 * C250) * C688 +
           (C249 * C152 + C29588 * C316) * C622 -
           (C249 * C628 + C29588 * C793) * C689 -
           (C249 * C693 + C29588 * C841) * C623 +
           (C249 * C629 + C29588 * C794) * C690 +
           (C249 * C694 + C29588 * C842) * C624) *
              C25979 +
          (C7832 * C688 + C7905 * C622 - C9692 * C689 - C9767 * C623 +
           (C249 * C5989 + C29588 * C6227) * C690 +
           (C249 * C6075 + C29588 * C6297) * C624) *
              C25980 +
          (C7837 * C688 + C7907 * C622 -
           (C249 * C4199 + C29588 * C4365) * C689 -
           (C249 * C4257 + C29588 * C4419) * C623 +
           (C249 * C14183 + C29588 * C14305) * C690 +
           (C249 * C14225 + C29588 * C14345) * C624) *
              C25981) *
         C29499 * C29511 * C29543) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C249 * C93 + C29588 * C250) * C151 +
            (C249 * C152 + C29588 * C316) * C29532) *
               C25979 +
           (C7896 + C7908) * C25980 + (C7904 + C7910) * C25981) *
              C29499 * C80 -
          ((C7909 + C7901) * C25981 + C9129 * C25980 + (C334 + C322) * C25979) *
              C29499 * C81 +
          (C337 * C25979 + (C2300 + C2306) * C25980 +
           ((C249 * C1075 + C29588 * C1240) * C151 +
            (C249 * C1137 + C29588 * C1290) * C29532) *
               C25981) *
              C29499 * C82) *
         C29543) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C249 * C93 + C29588 * C250) * C151 +
            (C249 * C152 + C29588 * C316) * C29532) *
               C25979 +
           (C7896 + C7908) * C25980 + C26862 * C25981) *
              C29499 * C29511 * C1067 -
          ((C26867 + C26865) * C25981 + (C7910 + C7904) * C25980 +
           (C7908 + C7896) * C25979) *
              C29499 * C29511 * C1068 +
          (C26862 * C25979 + (C26865 + C26867) * C25980 +
           ((C249 * C26669 + C29588 * C26811) * C151 +
            (C249 * C26721 + C29588 * C26860) * C29532) *
               C25981) *
              C29499 * C29511 * C1069)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[42] +=
        (-std::pow(Pi, 2.5) *
         ((((C249 * C93 + C29588 * C250) * C200 +
            (C249 * C201 + C29588 * C376) * C29543) *
               C25979 +
           (C7832 * C200 + C7969 * C29543) * C25980 +
           (C7837 * C200 + C7970 * C29543) * C25981) *
              C29499 * C622 -
          (((C249 * C4311 + C29588 * C4471) * C29543 +
            (C249 * C4199 + C29588 * C4365) * C200) *
               C25981 +
           (C9837 * C29543 + C9692 * C200) * C25980 +
           ((C249 * C743 + C29588 * C887) * C29543 +
            (C249 * C628 + C29588 * C793) * C200) *
               C25979) *
              C29499 * C623 +
          (((C249 * C629 + C29588 * C794) * C200 +
            (C249 * C744 + C29588 * C888) * C29543) *
               C25979 +
           ((C249 * C5989 + C29588 * C6227) * C200 +
            (C249 * C6151 + C29588 * C6365) * C29543) *
               C25980 +
           ((C249 * C14183 + C29588 * C14305) * C200 +
            (C249 * C14265 + C29588 * C14384) * C29543) *
               C25981) *
              C29499 * C624) *
         C29511) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C249 * C93 + C29588 * C250) * C200 +
            (C249 * C201 + C29588 * C376) * C29543) *
               C25979 +
           (C7832 * C200 + C7969 * C29543) * C25980 +
           (C7837 * C200 + C7970 * C29543) * C25981) *
              C29499 * C29532 * C80 -
          ((C7971 * C29543 + C7835 * C200) * C25981 + (C6897 + C6896) * C25980 +
           (C394 + C382) * C25979) *
              C29499 * C29532 * C81 +
          (C397 * C25979 + (C6899 + C6898) * C25980 +
           ((C249 * C1075 + C29588 * C1240) * C200 +
            (C249 * C1190 + C29588 * C1334) * C29543) *
               C25981) *
              C29499 * C29532 * C82)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C249 * C93 + C29588 * C250) * C1182 +
           (C249 * C201 + C29588 * C376) * C1067 - C7832 * C1183 -
           C7969 * C1068 + C7837 * C1184 + C7970 * C1069) *
              C25979 +
          (C7832 * C1182 + C7969 * C1067 - C7837 * C1183 - C7970 * C1068 +
           C26820 * C1184 + C26909 * C1069) *
              C25980 +
          (C7837 * C1182 + C7970 * C1067 - C26820 * C1183 - C26909 * C1068 +
           (C249 * C26669 + C29588 * C26811) * C1184 +
           (C249 * C26768 + C29588 * C26905) * C1069) *
              C25981) *
         C29499 * C29532 * C29511) /
            (p * q * std::sqrt(p + q));
    d2eezx[42] += (-std::pow(Pi, 2.5) *
                   (((C26210 * C93 + C25979 * C437 + C26211 * C1072 +
                      C25980 * C1375 + C26212 * C1073 + C25981 * C1376) *
                         C625 +
                     (C26210 * C101 + C25979 * C442 + C26211 * C1078 +
                      C25980 * C1381 + C26212 * C1085 + C25981 * C1382) *
                         C29511) *
                        C29499 * C29588 * C29543 * C622 -
                    ((C26212 * C4203 + C25981 * C4525 + C26211 * C2617 +
                      C25980 * C2950 + C26210 * C634 + C25979 * C937) *
                         C29511 +
                     (C26212 * C4199 + C25981 * C4523 + C26211 * C2611 +
                      C25980 * C2947 + C26210 * C628 + C25979 * C931) *
                         C625) *
                        C29499 * C29588 * C29543 * C623 +
                    ((C26210 * C629 + C25979 * C932 + C26211 * C5989 +
                      C25980 * C6433 + C26212 * C14183 + C25981 * C14423) *
                         C625 +
                     (C26210 * C641 + C25979 * C938 + C26211 * C5993 +
                      C25980 * C6435 + C26212 * C14185 + C25981 * C14424) *
                         C29511) *
                        C29499 * C29588 * C29543 * C624)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::pow(Pi, 2.5) *
                   ((C26210 * C93 + C25979 * C437 + C26211 * C1072 +
                     C25980 * C1375 + C26212 * C1073 + C25981 * C1376) *
                        C90 +
                    (C26210 * C101 + C25979 * C442 + C26211 * C1078 +
                     C25980 * C1381 + C26212 * C1085 + C25981 * C1382) *
                        C80 -
                    (C26212 * C1074 + C25981 * C1377 + C26211 * C1071 +
                     C25980 * C1374 + C26210 * C94 + C25979 * C438) *
                        C91 -
                    (C26212 * C1086 + C25981 * C1383 + C26211 * C1077 +
                     C25980 * C1380 + C26210 * C102 + C25979 * C443) *
                        C81 +
                    (C26210 * C95 + C25979 * C439 + C26211 * C1070 +
                     C25980 * C1373 + C26212 * C1075 + C25981 * C1378) *
                        C92 +
                    (C26210 * C103 + C25979 * C444 + C26211 * C1076 +
                     C25980 * C1379 + C26212 * C1087 + C25981 * C1384) *
                        C82) *
                   C29499 * C29588 * C29543 * C29532) /
                      (p * q * std::sqrt(p + q)) +
                  (2 * std::pow(Pi, 2.5) *
                   (((C26210 * C93 + C25979 * C437 + C26211 * C1072 +
                      C25980 * C1375 + C26212 * C1073 + C25981 * C1376) *
                         C625 +
                     (C26210 * C101 + C25979 * C442 + C26211 * C1078 +
                      C25980 * C1381 + C26212 * C1085 + C25981 * C1382) *
                         C29511) *
                        C29499 * C29588 * C1067 -
                    ((C26212 * C7603 + C25981 * C8023 + C26211 * C1085 +
                      C25980 * C1382 + C26210 * C1078 + C25979 * C1381) *
                         C29511 +
                     (C26212 * C7599 + C25981 * C8021 + C26211 * C1073 +
                      C25980 * C1376 + C26210 * C1072 + C25979 * C1375) *
                         C625) *
                        C29499 * C29588 * C1068 +
                    ((C26210 * C1073 + C25979 * C1376 + C26211 * C7599 +
                      C25980 * C8021 + C26212 * C26669 + C25981 * C26947) *
                         C625 +
                     (C26210 * C1085 + C25979 * C1382 + C26211 * C7603 +
                      C25980 * C8023 + C26212 * C26671 + C25981 * C26948) *
                         C29511) *
                        C29499 * C29588 * C1069) *
                   C29532) /
                      (p * q * std::sqrt(p + q));
    d2eezy[42] += (-std::pow(Pi, 2.5) *
                   ((C26210 * C93 + C25979 * C437 + C26211 * C1072 +
                     C25980 * C1375 + C26212 * C1073 + C25981 * C1376) *
                        C688 +
                    (C26210 * C152 + C25979 * C503 + C26211 * C1134 +
                     C25980 * C1425 + C26212 * C1135 + C25981 * C1426) *
                        C622 -
                    (C26212 * C4199 + C25981 * C4523 + C26211 * C2611 +
                     C25980 * C2947 + C26210 * C628 + C25979 * C931) *
                        C689 -
                    (C26212 * C4257 + C25981 * C4577 + C26211 * C2673 +
                     C25980 * C3003 + C26210 * C693 + C25979 * C979) *
                        C623 +
                    (C26210 * C629 + C25979 * C932 + C26211 * C5989 +
                     C25980 * C6433 + C26212 * C14183 + C25981 * C14423) *
                        C690 +
                    (C26210 * C694 + C25979 * C980 + C26211 * C6075 +
                     C25980 * C6513 + C26212 * C14225 + C25981 * C14463) *
                        C624) *
                   C29499 * C29588 * C29511 * C29543) /
                      (p * q * std::sqrt(p + q)) -
                  (std::pow(Pi, 2.5) *
                   (((C26210 * C93 + C25979 * C437 + C26211 * C1072 +
                      C25980 * C1375 + C26212 * C1073 + C25981 * C1376) *
                         C151 +
                     (C26210 * C152 + C25979 * C503 + C26211 * C1134 +
                      C25980 * C1425 + C26212 * C1135 + C25981 * C1426) *
                         C29532) *
                        C29499 * C29588 * C80 -
                    ((C26212 * C1136 + C25981 * C1427 + C26211 * C1133 +
                      C25980 * C1424 + C26210 * C153 + C25979 * C504) *
                         C29532 +
                     (C26212 * C1074 + C25981 * C1377 + C26211 * C1071 +
                      C25980 * C1374 + C26210 * C94 + C25979 * C438) *
                         C151) *
                        C29499 * C29588 * C81 +
                    ((C26210 * C95 + C25979 * C439 + C26211 * C1070 +
                      C25980 * C1373 + C26212 * C1075 + C25981 * C1378) *
                         C151 +
                     (C26210 * C154 + C25979 * C505 + C26211 * C1132 +
                      C25980 * C1423 + C26212 * C1137 + C25981 * C1428) *
                         C29532) *
                        C29499 * C29588 * C82) *
                   C29543) /
                      (p * q * std::sqrt(p + q)) +
                  (2 * std::pow(Pi, 2.5) *
                   (((C26210 * C93 + C25979 * C437 + C26211 * C1072 +
                      C25980 * C1375 + C26212 * C1073 + C25981 * C1376) *
                         C151 +
                     (C26210 * C152 + C25979 * C503 + C26211 * C1134 +
                      C25980 * C1425 + C26212 * C1135 + C25981 * C1426) *
                         C29532) *
                        C29499 * C29588 * C29511 * C1067 -
                    ((C26212 * C7681 + C25981 * C8075 + C26211 * C1135 +
                      C25980 * C1426 + C26210 * C1134 + C25979 * C1425) *
                         C29532 +
                     (C26212 * C7599 + C25981 * C8021 + C26211 * C1073 +
                      C25980 * C1376 + C26210 * C1072 + C25979 * C1375) *
                         C151) *
                        C29499 * C29588 * C29511 * C1068 +
                    ((C26210 * C1073 + C25979 * C1376 + C26211 * C7599 +
                      C25980 * C8021 + C26212 * C26669 + C25981 * C26947) *
                         C151 +
                     (C26210 * C1135 + C25979 * C1426 + C26211 * C7681 +
                      C25980 * C8075 + C26212 * C26721 + C25981 * C26987) *
                         C29532) *
                        C29499 * C29588 * C29511 * C1069)) /
                      (p * q * std::sqrt(p + q));
    d2eezz[42] += (-std::pow(Pi, 2.5) *
                   (((C26210 * C93 + C25979 * C437 + C26211 * C1072 +
                      C25980 * C1375 + C26212 * C1073 + C25981 * C1376) *
                         C200 +
                     (C26210 * C201 + C25979 * C562 + C26211 * C1187 +
                      C25980 * C1467 + C26212 * C1188 + C25981 * C1468) *
                         C29543) *
                        C29499 * C29588 * C622 -
                    ((C26212 * C4311 + C25981 * C4629 + C26211 * C2729 +
                      C25980 * C3056 + C26210 * C743 + C25979 * C1025) *
                         C29543 +
                     (C26212 * C4199 + C25981 * C4523 + C26211 * C2611 +
                      C25980 * C2947 + C26210 * C628 + C25979 * C931) *
                         C200) *
                        C29499 * C29588 * C623 +
                    ((C26210 * C629 + C25979 * C932 + C26211 * C5989 +
                      C25980 * C6433 + C26212 * C14183 + C25981 * C14423) *
                         C200 +
                     (C26210 * C744 + C25979 * C1026 + C26211 * C6151 +
                      C25980 * C6584 + C26212 * C14265 + C25981 * C14502) *
                         C29543) *
                        C29499 * C29588 * C624) *
                   C29511) /
                      (p * q * std::sqrt(p + q)) -
                  (std::pow(Pi, 2.5) *
                   (((C26210 * C93 + C25979 * C437 + C26211 * C1072 +
                      C25980 * C1375 + C26212 * C1073 + C25981 * C1376) *
                         C200 +
                     (C26210 * C201 + C25979 * C562 + C26211 * C1187 +
                      C25980 * C1467 + C26212 * C1188 + C25981 * C1468) *
                         C29543) *
                        C29499 * C29588 * C29532 * C80 -
                    ((C26212 * C1189 + C25981 * C1470 + C26211 * C1186 +
                      C25980 * C1469 + C26210 * C202 + C25979 * C563) *
                         C29543 +
                     (C26212 * C1074 + C25981 * C1377 + C26211 * C1071 +
                      C25980 * C1374 + C26210 * C94 + C25979 * C438) *
                         C200) *
                        C29499 * C29588 * C29532 * C81 +
                    ((C26210 * C95 + C25979 * C439 + C26211 * C1070 +
                      C25980 * C1373 + C26212 * C1075 + C25981 * C1378) *
                         C200 +
                     (C26210 * C203 + C25979 * C564 + C26211 * C1185 +
                      C25980 * C1471 + C26212 * C1190 + C25981 * C1472) *
                         C29543) *
                        C29499 * C29588 * C29532 * C82)) /
                      (p * q * std::sqrt(p + q)) +
                  (2 * std::pow(Pi, 2.5) *
                   ((C26210 * C93 + C25979 * C437 + C26211 * C1072 +
                     C25980 * C1375 + C26212 * C1073 + C25981 * C1376) *
                        C1182 +
                    (C26210 * C201 + C25979 * C562 + C26211 * C1187 +
                     C25980 * C1467 + C26212 * C1188 + C25981 * C1468) *
                        C1067 -
                    (C26212 * C7599 + C25981 * C8021 + C26211 * C1073 +
                     C25980 * C1376 + C26210 * C1072 + C25979 * C1375) *
                        C1183 -
                    (C26212 * C7747 + C25981 * C8127 + C26211 * C1188 +
                     C25980 * C1468 + C26210 * C1187 + C25979 * C1467) *
                        C1068 +
                    (C26210 * C1073 + C25979 * C1376 + C26211 * C7599 +
                     C25980 * C8021 + C26212 * C26669 + C25981 * C26947) *
                        C1184 +
                    (C26210 * C1188 + C25979 * C1468 + C26211 * C7747 +
                     C25980 * C8127 + C26212 * C26768 + C25981 * C27026) *
                        C1069) *
                   C29499 * C29588 * C29532 * C29511) /
                      (p * q * std::sqrt(p + q));
    d2eexx[43] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C13409 * C93 + C29499 * C98) * C1527 +
                      (C13409 * C101 + C29499 * C108) * C1523 -
                      (C13409 * C94 + C29499 * C99) * C1528 -
                      (C13409 * C102 + C29499 * C109) * C1524) *
                         C29588 * C25979 +
                     (C18158 + C18159 - C18166 - C18167) * C29588 * C25980 +
                     (C27528 + C27529 - C27536 - C27537) * C29588 * C25981) *
                        C2069 +
                    ((C18166 - (C18159 + C18158) + C18167) * C29588 * C25979 +
                     (C27536 - (C27529 + C27528) + C27537) * C29588 * C25980 +
                     ((C13409 * C7600 + C29499 * C7602) * C1528 -
                      (C26680 * C1523 + C26681 * C1527) +
                      (C13409 * C7604 + C29499 * C7606) * C1524) *
                         C29588 * C25981) *
                        C2070) *
                   C29532) /
                  (p * q * std::sqrt(p + q));
    d2eexy[43] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C13409 * C93 + C29499 * C98) * C151 +
                       (C13409 * C152 + C29499 * C157) * C29532) *
                          C29588 * C25979 +
                      (C17046 + C17060) * C29588 * C25980 + C26728 * C25981) *
                         C1523 -
                     ((C27592 + C27590) * C29588 * C25981 +
                      (C18240 + C18238) * C29588 * C25980 +
                      ((C13409 * C153 + C29499 * C158) * C29532 +
                       (C13409 * C94 + C29499 * C99) * C151) *
                          C29588 * C25979) *
                         C1524) *
                        C2069 +
                    (((C18238 + C18240) * C29588 * C25979 +
                      (C27590 + C27592) * C29588 * C25980 +
                      ((C13409 * C7600 + C29499 * C7602) * C151 +
                       (C13409 * C7682 + C29499 * C7684) * C29532) *
                          C29588 * C25981) *
                         C1524 -
                     ((C26730 + C26727) * C29588 * C25981 +
                      (C17062 + C17056) * C29588 * C25980 +
                      (C17060 + C17046) * C29588 * C25979) *
                         C1523) *
                        C2070)) /
                  (p * q * std::sqrt(p + q));
    d2eexz[43] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C13409 * C93 + C29499 * C98) * C2177 +
            (C13409 * C201 + C29499 * C206) * C2069 - C16982 * C2178 -
            C17121 * C2070) *
               C29588 * C25979 +
           (C16982 * C2177 + C17121 * C2069 - C16987 * C2178 - C17122 * C2070) *
               C29588 * C25980 +
           (C16987 * C2177 + C17122 * C2069 - C26681 * C2178 - C26773 * C2070) *
               C29588 * C25981) *
              C29532 * C1523 +
          ((C18164 * C2178 -
            ((C13409 * C202 + C29499 * C207) * C2069 +
             (C13409 * C94 + C29499 * C99) * C2177) +
            C18309 * C2070) *
               C29588 * C25979 +
           (C27534 * C2178 - (C18309 * C2069 + C18164 * C2177) +
            C27645 * C2070) *
               C29588 * C25980 +
           ((C13409 * C7600 + C29499 * C7602) * C2178 -
            (C27645 * C2069 + C27534 * C2177) +
            (C13409 * C7748 + C29499 * C7750) * C2070) *
               C29588 * C25981) *
              C29532 * C1524)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[43] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C249 * C93 + C29588 * C250) * C1527 +
                      (C249 * C101 + C29588 * C255) * C1523 - C273 * C1528 -
                      C274 * C1524) *
                         C25979 +
                     (C9054 + C9055 - C9056 - C9057) * C25980 +
                     (C27696 + C27697 - C27698 - C27699) * C25981) *
                        C29499 * C2069 +
                    ((C9056 - (C9055 + C9054) + C9057) * C25979 +
                     (C27698 - (C27697 + C27696) + C27699) * C25980 +
                     ((C249 * C7600 + C29588 * C7814) * C1528 -
                      (C26819 * C1523 + C26820 * C1527) +
                      (C249 * C7604 + C29588 * C7816) * C1524) *
                         C25981) *
                        C29499 * C2070) *
                   C29532) /
                  (p * q * std::sqrt(p + q));
    d2eeyy[43] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C249 * C93 + C29588 * C250) * C151 +
                       (C249 * C152 + C29588 * C316) * C29532) *
                          C25979 +
                      (C7896 + C7908) * C25980 + C26862 * C25981) *
                         C29499 * C1523 -
                     ((C7909 + C7901) * C25981 + C9129 * C25980 +
                      (C334 + C322) * C25979) *
                         C29499 * C1524) *
                        C2069 +
                    ((C9128 * C25979 + (C7901 + C7909) * C25980 +
                      ((C249 * C7600 + C29588 * C7814) * C151 +
                       (C249 * C7682 + C29588 * C7894) * C29532) *
                          C25981) *
                         C29499 * C1524 -
                     ((C26867 + C26865) * C25981 + (C7910 + C7904) * C25980 +
                      (C7908 + C7896) * C25979) *
                         C29499 * C1523) *
                        C2070)) /
                  (p * q * std::sqrt(p + q));
    d2eeyz[43] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C249 * C93 + C29588 * C250) * C2177 +
            (C249 * C201 + C29588 * C376) * C2069 - C7832 * C2178 -
            C7969 * C2070) *
               C25979 +
           (C7832 * C2177 + C7969 * C2069 - C7837 * C2178 - C7970 * C2070) *
               C25980 +
           (C7837 * C2177 + C7970 * C2069 - C26820 * C2178 - C26909 * C2070) *
               C25981) *
              C29499 * C29532 * C1523 +
          ((C2360 - (C2359 + C2358) + C2370) * C25979 +
           (C9198 - (C9197 + C9196) + C9199) * C25980 +
           ((C249 * C7600 + C29588 * C7814) * C2178 -
            (C7971 * C2069 + C7835 * C2177) +
            (C249 * C7748 + C29588 * C7961) * C2070) *
               C25981) *
              C29499 * C29532 * C1524)) /
        (p * q * std::sqrt(p + q));
    d2eezx[43] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((C26210 * C93 + C25979 * C437 + C26211 * C1072 +
                      C25980 * C1375 + C26212 * C1073 + C25981 * C1376) *
                         C1527 +
                     (C26210 * C101 + C25979 * C442 + C26211 * C1078 +
                      C25980 * C1381 + C26212 * C1085 + C25981 * C1382) *
                         C1523 -
                     (C26212 * C1074 + C25981 * C1377 + C26211 * C1071 +
                      C25980 * C1374 + C26210 * C94 + C25979 * C438) *
                         C1528 -
                     (C26212 * C1086 + C25981 * C1383 + C26211 * C1077 +
                      C25980 * C1380 + C26210 * C102 + C25979 * C443) *
                         C1524) *
                        C29499 * C29588 * C2069 +
                    ((C26210 * C1071 + C25979 * C1374 + C26211 * C1074 +
                      C25980 * C1377 + C26212 * C7600 + C25981 * C8022) *
                         C1528 -
                     ((C26212 * C7603 + C25981 * C8023 + C26211 * C1085 +
                       C25980 * C1382 + C26210 * C1078 + C25979 * C1381) *
                          C1523 +
                      (C26212 * C7599 + C25981 * C8021 + C26211 * C1073 +
                       C25980 * C1376 + C26210 * C1072 + C25979 * C1375) *
                          C1527) +
                     (C26210 * C1077 + C25979 * C1380 + C26211 * C1086 +
                      C25980 * C1383 + C26212 * C7604 + C25981 * C8024) *
                         C1524) *
                        C29499 * C29588 * C2070) *
                   C29532) /
                  (p * q * std::sqrt(p + q));
    d2eezy[43] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C26210 * C93 + C25979 * C437 + C26211 * C1072 +
                       C25980 * C1375 + C26212 * C1073 + C25981 * C1376) *
                          C151 +
                      (C26210 * C152 + C25979 * C503 + C26211 * C1134 +
                       C25980 * C1425 + C26212 * C1135 + C25981 * C1426) *
                          C29532) *
                         C29499 * C29588 * C1523 -
                     ((C26212 * C1136 + C25981 * C1427 + C26211 * C1133 +
                       C25980 * C1424 + C26210 * C153 + C25979 * C504) *
                          C29532 +
                      (C26212 * C1074 + C25981 * C1377 + C26211 * C1071 +
                       C25980 * C1374 + C26210 * C94 + C25979 * C438) *
                          C151) *
                         C29499 * C29588 * C1524) *
                        C2069 +
                    (((C26210 * C1071 + C25979 * C1374 + C26211 * C1074 +
                       C25980 * C1377 + C26212 * C7600 + C25981 * C8022) *
                          C151 +
                      (C26210 * C1133 + C25979 * C1424 + C26211 * C1136 +
                       C25980 * C1427 + C26212 * C7682 + C25981 * C8076) *
                          C29532) *
                         C29499 * C29588 * C1524 -
                     ((C26212 * C7681 + C25981 * C8075 + C26211 * C1135 +
                       C25980 * C1426 + C26210 * C1134 + C25979 * C1425) *
                          C29532 +
                      (C26212 * C7599 + C25981 * C8021 + C26211 * C1073 +
                       C25980 * C1376 + C26210 * C1072 + C25979 * C1375) *
                          C151) *
                         C29499 * C29588 * C1523) *
                        C2070)) /
                  (p * q * std::sqrt(p + q));
    d2eezz[43] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((C26210 * C93 + C25979 * C437 + C26211 * C1072 +
                      C25980 * C1375 + C26212 * C1073 + C25981 * C1376) *
                         C2177 +
                     (C26210 * C201 + C25979 * C562 + C26211 * C1187 +
                      C25980 * C1467 + C26212 * C1188 + C25981 * C1468) *
                         C2069 -
                     (C26212 * C7599 + C25981 * C8021 + C26211 * C1073 +
                      C25980 * C1376 + C26210 * C1072 + C25979 * C1375) *
                         C2178 -
                     (C26212 * C7747 + C25981 * C8127 + C26211 * C1188 +
                      C25980 * C1468 + C26210 * C1187 + C25979 * C1467) *
                         C2070) *
                        C29499 * C29588 * C29532 * C1523 +
                    ((C26210 * C1071 + C25979 * C1374 + C26211 * C1074 +
                      C25980 * C1377 + C26212 * C7600 + C25981 * C8022) *
                         C2178 -
                     ((C26212 * C1189 + C25981 * C1470 + C26211 * C1186 +
                       C25980 * C1469 + C26210 * C202 + C25979 * C563) *
                          C2069 +
                      (C26212 * C1074 + C25981 * C1377 + C26211 * C1071 +
                       C25980 * C1374 + C26210 * C94 + C25979 * C438) *
                          C2177) +
                     (C26210 * C1186 + C25979 * C1469 + C26211 * C1189 +
                      C25980 * C1470 + C26212 * C7748 + C25981 * C8128) *
                         C2070) *
                        C29499 * C29588 * C29532 * C1524)) /
                  (p * q * std::sqrt(p + q));
    d2eexx[44] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C13409 * C93 + C29499 * C98) * C90 +
           (C13409 * C101 + C29499 * C108) * C80 -
           (C13409 * C94 + C29499 * C99) * C91 -
           (C13409 * C102 + C29499 * C109) * C81 +
           (C13409 * C95 + C29499 * C100) * C92 +
           (C13409 * C103 + C29499 * C110) * C82) *
              C29588 * C25979 +
          (C16982 * C90 + C16983 * C80 - C18164 * C91 - C18165 * C81 +
           (C13409 * C1070 + C29499 * C1079) * C92 +
           (C13409 * C1076 + C29499 * C1088) * C82) *
              C29588 * C25980 +
          (C16987 * C90 + C16986 * C80 -
           (C13409 * C1074 + C29499 * C1083) * C91 -
           (C13409 * C1086 + C29499 * C1092) * C81 +
           (C13409 * C1075 + C29499 * C1084) * C92 +
           (C13409 * C1087 + C29499 * C1093) * C82) *
              C29588 * C25981) *
         C29543 * C29532) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13409 * C93 + C29499 * C98) * C625 +
            (C13409 * C101 + C29499 * C108) * C29511) *
               C29588 * C25979 +
           (C16988 + C16989) * C29588 * C25980 +
           (C16993 + C16992) * C29588 * C25981) *
              C29543 * C622 -
          ((C16990 + C16991) * C29588 * C25981 + C18773 * C29588 * C25980 +
           (C13779 + C13778) * C29588 * C25979) *
              C29543 * C623 +
          (C13784 * C29588 * C25979 + (C15511 + C15510) * C29588 * C25980 +
           ((C13409 * C14183 + C29499 * C14184) * C625 +
            (C13409 * C14185 + C29499 * C14186) * C29511) *
               C29588 * C25981) *
              C29543 * C624)) /
            (p * q * std::sqrt(p + q));
    d2eexy[44] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13409 * C93 + C29499 * C98) * C151 +
            (C13409 * C152 + C29499 * C157) * C29532) *
               C29588 * C25979 +
           (C17046 + C17060) * C29588 * C25980 +
           (C17056 + C17062) * C29588 * C25981) *
              C80 -
          (((C13409 * C1136 + C29499 * C1142) * C29532 +
            (C13409 * C1074 + C29499 * C1083) * C151) *
               C29588 * C25981 +
           (C18240 + C18238) * C29588 * C25980 +
           ((C13409 * C153 + C29499 * C158) * C29532 +
            (C13409 * C94 + C29499 * C99) * C151) *
               C29588 * C25979) *
              C81 +
          (((C13409 * C95 + C29499 * C100) * C151 +
            (C13409 * C154 + C29499 * C159) * C29532) *
               C29588 * C25979 +
           ((C13409 * C1070 + C29499 * C1079) * C151 +
            (C13409 * C1132 + C29499 * C1138) * C29532) *
               C29588 * C25980 +
           ((C13409 * C1075 + C29499 * C1084) * C151 +
            (C13409 * C1137 + C29499 * C1143) * C29532) *
               C29588 * C25981) *
              C82) *
         C29543) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C13409 * C93 + C29499 * C98) * C688 +
           (C13409 * C152 + C29499 * C157) * C622 - C13772 * C689 -
           C13831 * C623 + C13774 * C690 + C13832 * C624) *
              C29588 * C25979 +
          (C16982 * C688 + C17057 * C622 - C15509 * C689 - C15570 * C623 +
           C15507 * C690 + C15571 * C624) *
              C29588 * C25980 +
          (C16987 * C688 + C17059 * C622 - C16985 * C689 - C17058 * C623 +
           (C13409 * C14183 + C29499 * C14184) * C690 +
           (C13409 * C14225 + C29499 * C14226) * C624) *
              C29588 * C25981) *
         C29511 * C29543) /
            (p * q * std::sqrt(p + q));
    d2eexz[44] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13409 * C93 + C29499 * C98) * C200 +
            (C13409 * C201 + C29499 * C206) * C29543) *
               C29588 * C25979 +
           (C16982 * C200 + C17121 * C29543) * C29588 * C25980 +
           (C16987 * C200 + C17122 * C29543) * C29588 * C25981) *
              C29532 * C80 -
          (((C13409 * C1189 + C29499 * C1195) * C29543 +
            (C13409 * C1074 + C29499 * C1083) * C200) *
               C29588 * C25981 +
           (C18309 * C29543 + C18164 * C200) * C29588 * C25980 +
           ((C13409 * C202 + C29499 * C207) * C29543 +
            (C13409 * C94 + C29499 * C99) * C200) *
               C29588 * C25979) *
              C29532 * C81 +
          (((C13409 * C95 + C29499 * C100) * C200 +
            (C13409 * C203 + C29499 * C208) * C29543) *
               C29588 * C25979 +
           ((C13409 * C1070 + C29499 * C1079) * C200 +
            (C13409 * C1185 + C29499 * C1191) * C29543) *
               C29588 * C25980 +
           ((C13409 * C1075 + C29499 * C1084) * C200 +
            (C13409 * C1190 + C29499 * C1196) * C29543) *
               C29588 * C25981) *
              C29532 * C82)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13409 * C93 + C29499 * C98) * C200 +
            (C13409 * C201 + C29499 * C206) * C29543) *
               C29588 * C25979 +
           (C16982 * C200 + C17121 * C29543) * C29588 * C25980 +
           (C16987 * C200 + C17122 * C29543) * C29588 * C25981) *
              C622 -
          ((C17123 * C29543 + C16985 * C200) * C29588 * C25981 +
           (C16565 + C16564) * C29588 * C25980 +
           (C13886 + C13874) * C29588 * C25979) *
              C623 +
          (C13889 * C29588 * C25979 + (C16567 + C16566) * C29588 * C25980 +
           ((C13409 * C14183 + C29499 * C14184) * C200 +
            (C13409 * C14265 + C29499 * C14266) * C29543) *
               C29588 * C25981) *
              C624) *
         C29511) /
            (p * q * std::sqrt(p + q));
    d2eeyx[44] += (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C249 * C93 + C29588 * C250) * C90 +
                     (C249 * C101 + C29588 * C255) * C80 - C273 * C91 -
                     C274 * C81 + C275 * C92 + C276 * C82) *
                        C25979 +
                    (C7832 * C90 + C7833 * C80 - C2242 * C91 - C2243 * C81 +
                     C2244 * C92 + C2245 * C82) *
                        C25980 +
                    (C7837 * C90 + C7836 * C80 - C7835 * C91 - C7834 * C81 +
                     (C249 * C1075 + C29588 * C1240) * C92 +
                     (C249 * C1087 + C29588 * C1246) * C82) *
                        C25981) *
                   C29499 * C29543 * C29532) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C249 * C93 + C29588 * C250) * C625 +
                      (C249 * C101 + C29588 * C255) * C29511) *
                         C25979 +
                     (C7838 + C7839) * C25980 + (C7843 + C7842) * C25981) *
                        C29499 * C29543 * C622 -
                    (((C249 * C4203 + C29588 * C4367) * C29511 +
                      (C249 * C4199 + C29588 * C4365) * C625) *
                         C25981 +
                     (C9695 + C9694) * C25980 +
                     ((C249 * C634 + C29588 * C799) * C29511 +
                      (C249 * C628 + C29588 * C793) * C625) *
                         C25979) *
                        C29499 * C29543 * C623 +
                    (((C249 * C629 + C29588 * C794) * C625 +
                      (C249 * C641 + C29588 * C800) * C29511) *
                         C25979 +
                     ((C249 * C5989 + C29588 * C6227) * C625 +
                      (C249 * C5993 + C29588 * C6229) * C29511) *
                         C25980 +
                     ((C249 * C14183 + C29588 * C14305) * C625 +
                      (C249 * C14185 + C29588 * C14306) * C29511) *
                         C25981) *
                        C29499 * C29543 * C624)) /
                      (p * q * std::sqrt(p + q));
    d2eeyy[44] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C249 * C93 + C29588 * C250) * C151 +
            (C249 * C152 + C29588 * C316) * C29532) *
               C25979 +
           (C7896 + C7908) * C25980 + (C7904 + C7910) * C25981) *
              C29499 * C80 -
          ((C7909 + C7901) * C25981 + C9129 * C25980 + (C334 + C322) * C25979) *
              C29499 * C81 +
          (C337 * C25979 + (C2300 + C2306) * C25980 +
           ((C249 * C1075 + C29588 * C1240) * C151 +
            (C249 * C1137 + C29588 * C1290) * C29532) *
               C25981) *
              C29499 * C82) *
         C29543) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C249 * C93 + C29588 * C250) * C688 +
           (C249 * C152 + C29588 * C316) * C622 -
           (C249 * C628 + C29588 * C793) * C689 -
           (C249 * C693 + C29588 * C841) * C623 +
           (C249 * C629 + C29588 * C794) * C690 +
           (C249 * C694 + C29588 * C842) * C624) *
              C25979 +
          (C7832 * C688 + C7905 * C622 - C9692 * C689 - C9767 * C623 +
           (C249 * C5989 + C29588 * C6227) * C690 +
           (C249 * C6075 + C29588 * C6297) * C624) *
              C25980 +
          (C7837 * C688 + C7907 * C622 -
           (C249 * C4199 + C29588 * C4365) * C689 -
           (C249 * C4257 + C29588 * C4419) * C623 +
           (C249 * C14183 + C29588 * C14305) * C690 +
           (C249 * C14225 + C29588 * C14345) * C624) *
              C25981) *
         C29499 * C29511 * C29543) /
            (p * q * std::sqrt(p + q));
    d2eeyz[44] += (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C249 * C93 + C29588 * C250) * C200 +
                      (C249 * C201 + C29588 * C376) * C29543) *
                         C25979 +
                     (C7832 * C200 + C7969 * C29543) * C25980 +
                     (C7837 * C200 + C7970 * C29543) * C25981) *
                        C29499 * C29532 * C80 -
                    ((C7971 * C29543 + C7835 * C200) * C25981 +
                     (C6897 + C6896) * C25980 + (C394 + C382) * C25979) *
                        C29499 * C29532 * C81 +
                    (C397 * C25979 + (C6899 + C6898) * C25980 +
                     ((C249 * C1075 + C29588 * C1240) * C200 +
                      (C249 * C1190 + C29588 * C1334) * C29543) *
                         C25981) *
                        C29499 * C29532 * C82)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C249 * C93 + C29588 * C250) * C200 +
                      (C249 * C201 + C29588 * C376) * C29543) *
                         C25979 +
                     (C7832 * C200 + C7969 * C29543) * C25980 +
                     (C7837 * C200 + C7970 * C29543) * C25981) *
                        C29499 * C622 -
                    (((C249 * C4311 + C29588 * C4471) * C29543 +
                      (C249 * C4199 + C29588 * C4365) * C200) *
                         C25981 +
                     (C9837 * C29543 + C9692 * C200) * C25980 +
                     ((C249 * C743 + C29588 * C887) * C29543 +
                      (C249 * C628 + C29588 * C793) * C200) *
                         C25979) *
                        C29499 * C623 +
                    (((C249 * C629 + C29588 * C794) * C200 +
                      (C249 * C744 + C29588 * C888) * C29543) *
                         C25979 +
                     ((C249 * C5989 + C29588 * C6227) * C200 +
                      (C249 * C6151 + C29588 * C6365) * C29543) *
                         C25980 +
                     ((C249 * C14183 + C29588 * C14305) * C200 +
                      (C249 * C14265 + C29588 * C14384) * C29543) *
                         C25981) *
                        C29499 * C624) *
                   C29511) /
                      (p * q * std::sqrt(p + q));
    d2eezx[44] += (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((C26210 * C93 + C25979 * C437 + C26211 * C1072 +
                     C25980 * C1375 + C26212 * C1073 + C25981 * C1376) *
                        C90 +
                    (C26210 * C101 + C25979 * C442 + C26211 * C1078 +
                     C25980 * C1381 + C26212 * C1085 + C25981 * C1382) *
                        C80 -
                    (C26212 * C1074 + C25981 * C1377 + C26211 * C1071 +
                     C25980 * C1374 + C26210 * C94 + C25979 * C438) *
                        C91 -
                    (C26212 * C1086 + C25981 * C1383 + C26211 * C1077 +
                     C25980 * C1380 + C26210 * C102 + C25979 * C443) *
                        C81 +
                    (C26210 * C95 + C25979 * C439 + C26211 * C1070 +
                     C25980 * C1373 + C26212 * C1075 + C25981 * C1378) *
                        C92 +
                    (C26210 * C103 + C25979 * C444 + C26211 * C1076 +
                     C25980 * C1379 + C26212 * C1087 + C25981 * C1384) *
                        C82) *
                   C29499 * C29588 * C29543 * C29532) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C26210 * C93 + C25979 * C437 + C26211 * C1072 +
                      C25980 * C1375 + C26212 * C1073 + C25981 * C1376) *
                         C625 +
                     (C26210 * C101 + C25979 * C442 + C26211 * C1078 +
                      C25980 * C1381 + C26212 * C1085 + C25981 * C1382) *
                         C29511) *
                        C29499 * C29588 * C29543 * C622 -
                    ((C26212 * C4203 + C25981 * C4525 + C26211 * C2617 +
                      C25980 * C2950 + C26210 * C634 + C25979 * C937) *
                         C29511 +
                     (C26212 * C4199 + C25981 * C4523 + C26211 * C2611 +
                      C25980 * C2947 + C26210 * C628 + C25979 * C931) *
                         C625) *
                        C29499 * C29588 * C29543 * C623 +
                    ((C26210 * C629 + C25979 * C932 + C26211 * C5989 +
                      C25980 * C6433 + C26212 * C14183 + C25981 * C14423) *
                         C625 +
                     (C26210 * C641 + C25979 * C938 + C26211 * C5993 +
                      C25980 * C6435 + C26212 * C14185 + C25981 * C14424) *
                         C29511) *
                        C29499 * C29588 * C29543 * C624)) /
                      (p * q * std::sqrt(p + q));
    d2eezy[44] += (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C26210 * C93 + C25979 * C437 + C26211 * C1072 +
                      C25980 * C1375 + C26212 * C1073 + C25981 * C1376) *
                         C151 +
                     (C26210 * C152 + C25979 * C503 + C26211 * C1134 +
                      C25980 * C1425 + C26212 * C1135 + C25981 * C1426) *
                         C29532) *
                        C29499 * C29588 * C80 -
                    ((C26212 * C1136 + C25981 * C1427 + C26211 * C1133 +
                      C25980 * C1424 + C26210 * C153 + C25979 * C504) *
                         C29532 +
                     (C26212 * C1074 + C25981 * C1377 + C26211 * C1071 +
                      C25980 * C1374 + C26210 * C94 + C25979 * C438) *
                         C151) *
                        C29499 * C29588 * C81 +
                    ((C26210 * C95 + C25979 * C439 + C26211 * C1070 +
                      C25980 * C1373 + C26212 * C1075 + C25981 * C1378) *
                         C151 +
                     (C26210 * C154 + C25979 * C505 + C26211 * C1132 +
                      C25980 * C1423 + C26212 * C1137 + C25981 * C1428) *
                         C29532) *
                        C29499 * C29588 * C82) *
                   C29543) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((C26210 * C93 + C25979 * C437 + C26211 * C1072 +
                     C25980 * C1375 + C26212 * C1073 + C25981 * C1376) *
                        C688 +
                    (C26210 * C152 + C25979 * C503 + C26211 * C1134 +
                     C25980 * C1425 + C26212 * C1135 + C25981 * C1426) *
                        C622 -
                    (C26212 * C4199 + C25981 * C4523 + C26211 * C2611 +
                     C25980 * C2947 + C26210 * C628 + C25979 * C931) *
                        C689 -
                    (C26212 * C4257 + C25981 * C4577 + C26211 * C2673 +
                     C25980 * C3003 + C26210 * C693 + C25979 * C979) *
                        C623 +
                    (C26210 * C629 + C25979 * C932 + C26211 * C5989 +
                     C25980 * C6433 + C26212 * C14183 + C25981 * C14423) *
                        C690 +
                    (C26210 * C694 + C25979 * C980 + C26211 * C6075 +
                     C25980 * C6513 + C26212 * C14225 + C25981 * C14463) *
                        C624) *
                   C29499 * C29588 * C29511 * C29543) /
                      (p * q * std::sqrt(p + q));
    d2eezz[44] += (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C26210 * C93 + C25979 * C437 + C26211 * C1072 +
                      C25980 * C1375 + C26212 * C1073 + C25981 * C1376) *
                         C200 +
                     (C26210 * C201 + C25979 * C562 + C26211 * C1187 +
                      C25980 * C1467 + C26212 * C1188 + C25981 * C1468) *
                         C29543) *
                        C29499 * C29588 * C29532 * C80 -
                    ((C26212 * C1189 + C25981 * C1470 + C26211 * C1186 +
                      C25980 * C1469 + C26210 * C202 + C25979 * C563) *
                         C29543 +
                     (C26212 * C1074 + C25981 * C1377 + C26211 * C1071 +
                      C25980 * C1374 + C26210 * C94 + C25979 * C438) *
                         C200) *
                        C29499 * C29588 * C29532 * C81 +
                    ((C26210 * C95 + C25979 * C439 + C26211 * C1070 +
                      C25980 * C1373 + C26212 * C1075 + C25981 * C1378) *
                         C200 +
                     (C26210 * C203 + C25979 * C564 + C26211 * C1185 +
                      C25980 * C1471 + C26212 * C1190 + C25981 * C1472) *
                         C29543) *
                        C29499 * C29588 * C29532 * C82)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C26210 * C93 + C25979 * C437 + C26211 * C1072 +
                      C25980 * C1375 + C26212 * C1073 + C25981 * C1376) *
                         C200 +
                     (C26210 * C201 + C25979 * C562 + C26211 * C1187 +
                      C25980 * C1467 + C26212 * C1188 + C25981 * C1468) *
                         C29543) *
                        C29499 * C29588 * C622 -
                    ((C26212 * C4311 + C25981 * C4629 + C26211 * C2729 +
                      C25980 * C3056 + C26210 * C743 + C25979 * C1025) *
                         C29543 +
                     (C26212 * C4199 + C25981 * C4523 + C26211 * C2611 +
                      C25980 * C2947 + C26210 * C628 + C25979 * C931) *
                         C200) *
                        C29499 * C29588 * C623 +
                    ((C26210 * C629 + C25979 * C932 + C26211 * C5989 +
                      C25980 * C6433 + C26212 * C14183 + C25981 * C14423) *
                         C200 +
                     (C26210 * C744 + C25979 * C1026 + C26211 * C6151 +
                      C25980 * C6584 + C26212 * C14265 + C25981 * C14502) *
                         C29543) *
                        C29499 * C29588 * C624) *
                   C29511) /
                      (p * q * std::sqrt(p + q));
}
