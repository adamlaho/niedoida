/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "gto_d2_kit/d2_ee_ppsd_AB.hpp"
#include <cmath>
/*

*/
#pragma GCC optimize("O0")
namespace {
    const double Pi = M_PI;
}
//
void second_derivative_ee_1102_12(const double ae,
                                  const double xA,
                                  const double yA,
                                  const double zA,
                                  const double be,
                                  const double xB,
                                  const double yB,
                                  const double zB,
                                  const double ce,
                                  const double xC,
                                  const double yC,
                                  const double zC,
                                  const double de,
                                  const double xD,
                                  const double yD,
                                  const double zD,
                                  const double* const bs,
                                  double* const d2eexx,
                                  double* const d2eexy,
                                  double* const d2eexz,
                                  double* const d2eeyx,
                                  double* const d2eeyy,
                                  double* const d2eeyz,
                                  double* const d2eezx,
                                  double* const d2eezy,
                                  double* const d2eezz)
{
    const double p = ae + be;
    const double q = ce + de;
    const double xP = (ae * xA + be * xB) / p;
    const double yP = (ae * yA + be * yB) / p;
    const double zP = (ae * zA + be * zB) / p;
    const double xQ = (ce * xC + de * xD) / q;
    const double yQ = (ce * yC + de * yD) / q;
    const double zQ = (ce * zC + de * zD) / q;
    const double C28380 = ae * be;
    const double C28379 = ae + be;
    const double C28378 = 0 * be;
    const double C28377 = xA - xB;
    const double C28409 = yA - yB;
    const double C28412 = zA - zB;
    const double C28469 = 0 * be;
    const double C28499 = 0 * be;
    const double C28519 = p + q;
    const double C28518 = p * q;
    const double C28524 = xP - xQ;
    const double C28523 = bs[2];
    const double C28529 = bs[3];
    const double C28540 = bs[4];
    const double C28561 = bs[5];
    const double C28593 = yP - yQ;
    const double C28619 = zP - zQ;
    const double C93 = bs[0];
    const double C29408 = ce + de;
    const double C29407 = ce * de;
    const double C29406 = xC - xD;
    const double C29420 = yC - yD;
    const double C29434 = zC - zD;
    const double C28388 = 2 * C28380;
    const double C28381 = std::pow(C28379, 2);
    const double C29395 = 2 * C28379;
    const double C28382 = C28380 * C28377;
    const double C29386 = std::pow(C28377, 2);
    const double C29536 = C28377 * be;
    const double C29535 = C28377 * ae;
    const double C28429 = C28380 * C28409;
    const double C29480 = std::pow(C28409, 2);
    const double C29545 = C28409 * be;
    const double C29543 = C28409 * ae;
    const double C28441 = C28380 * C28412;
    const double C29495 = std::pow(C28412, 2);
    const double C29546 = C28412 * be;
    const double C29544 = C28412 * ae;
    const double C28520 = 2 * C28518;
    const double C28532 = C28524 * ae;
    const double C28531 = C28524 * be;
    const double C28528 = std::pow(C28524, 2);
    const double C28596 = C28593 * be;
    const double C28595 = C28524 * C28593;
    const double C28647 = C28593 * ae;
    const double C28646 = C28593 * C28524;
    const double C28671 = std::pow(C28593, 2);
    const double C28622 = C28619 * be;
    const double C28621 = C28524 * C28619;
    const double C28685 = C28593 * C28619;
    const double C28698 = C28619 * ae;
    const double C28697 = C28619 * C28524;
    const double C28722 = C28619 * C28593;
    const double C28734 = std::pow(C28619, 2);
    const double C29540 = 2 * C29408;
    const double C29539 = std::pow(C29408, 2);
    const double C29409 = std::pow(C29406, 2);
    const double C29538 = C29406 * ce;
    const double C29421 = std::pow(C29420, 2);
    const double C29541 = C29420 * ce;
    const double C29435 = std::pow(C29434, 2);
    const double C29542 = C29434 * ce;
    const double C28383 = 2 * C28381;
    const double C29537 = std::pow(C29395, -1);
    const double C29387 = C29386 * C28380;
    const double C29481 = C29480 * C28380;
    const double C29496 = C29495 * C28380;
    const double C28522 = C28520 / C28519;
    const double C108 =
        ((std::pow(xP - xQ, 2) * bs[2] * std::pow(C28520 / C28519, 2) -
          (bs[1] * C28520) / C28519) *
         C28380) /
        C28381;
    const double C94 = -(C28524 * bs[1] * C28520) / C28519;
    const double C618 = -(C28593 * bs[1] * C28520) / C28519;
    const double C1059 = -(C28619 * bs[1] * C28520) / C28519;
    const double C28535 = C28529 * C28532;
    const double C28546 = C28540 * C28532;
    const double C28569 = C28561 * C28532;
    const double C99 = (-(bs[1] * C28532 * C28520) / C28519) / C28379;
    const double C28534 = C28529 * C28531;
    const double C28543 = C28540 * C28531;
    const double C28565 = C28561 * C28531;
    const double C98 = (-(bs[1] * C28531 * C28520) / C28519) / C28379;
    const double C28542 = C28528 * C28540;
    const double C28564 = C28528 * C28561;
    const double C28598 = C28529 * C28596;
    const double C28603 = C28540 * C28596;
    const double C28610 = C28561 * C28596;
    const double C152 = (-(bs[1] * C28596 * C28520) / C28519) / C28379;
    const double C28597 = C28595 * ae;
    const double C28649 = C28529 * C28647;
    const double C28654 = C28540 * C28647;
    const double C28661 = C28561 * C28647;
    const double C277 = (-(bs[1] * C28647 * C28520) / C28519) / C28379;
    const double C28648 = C28646 * ae;
    const double C28673 = C28671 * C28540;
    const double C28678 = C28671 * C28561;
    const double C28624 = C28529 * C28622;
    const double C28629 = C28540 * C28622;
    const double C28636 = C28561 * C28622;
    const double C215 = (-(bs[1] * C28622 * C28520) / C28519) / C28379;
    const double C28623 = C28621 * ae;
    const double C28686 = C28685 * ae;
    const double C28700 = C28529 * C28698;
    const double C28705 = C28540 * C28698;
    const double C28712 = C28561 * C28698;
    const double C443 = (-(bs[1] * C28698 * C28520) / C28519) / C28379;
    const double C28699 = C28697 * ae;
    const double C28723 = C28722 * ae;
    const double C28736 = C28734 * C28540;
    const double C28741 = C28734 * C28561;
    const double C29551 = std::pow(C29540, -2);
    const double C29549 = std::pow(C29540, -1);
    const double C29410 = C29409 * C29407;
    const double C29422 = C29421 * C29407;
    const double C29436 = C29435 * C29407;
    const double C29388 = C29387 / C28379;
    const double C29482 = C29481 / C28379;
    const double C29497 = C29496 / C28379;
    const double C28525 = std::pow(C28522, 2);
    const double C28530 = -C28522;
    const double C28541 = std::pow(C28522, 4);
    const double C28599 = C28597 * be;
    const double C28650 = C28648 * be;
    const double C28625 = C28623 * be;
    const double C28687 = C28686 * be;
    const double C28701 = C28699 * be;
    const double C28724 = C28723 * be;
    const double C29411 = C29410 / C29408;
    const double C29423 = C29422 / C29408;
    const double C29437 = C29436 / C29408;
    const double C29389 = -C29388;
    const double C29483 = -C29482;
    const double C29498 = -C29497;
    const double C28527 = C28523 * C28525;
    const double C109 = (ae * C28525 * C28523 * C28524 * be +
                         be * C28525 * C28523 * C28524 * ae +
                         C28524 *
                             (C28523 * C28525 + std::pow(C28524, 2) * bs[3] *
                                                    std::pow(-C28522, 3)) *
                             C28380) /
                        C28381;
    const double C157 =
        (C28525 * C28523 * C28524 * (yP - yQ) * ae * be) / C28381;
    const double C220 =
        (C28525 * C28523 * C28524 * (zP - zQ) * ae * be) / C28381;
    const double C282 = (C28525 * C28523 * C28593 * C28524 * ae * be) / C28381;
    const double C326 =
        ((std::pow(C28593, 2) * C28523 * C28525 - (bs[1] * C28520) / C28519) *
         C28380) /
        C28381;
    const double C390 = (C28525 * C28523 * C28593 * C28619 * ae * be) / C28381;
    const double C448 = (C28525 * C28523 * C28619 * C28524 * ae * be) / C28381;
    const double C491 = (C28525 * C28523 * C28619 * C28593 * ae * be) / C28381;
    const double C545 =
        ((std::pow(C28619, 2) * C28523 * C28525 - (bs[1] * C28520) / C28519) *
         C28380) /
        C28381;
    const double C100 = (C28524 * C28525 * C28523 * C28531) / C28379 -
                        (be * bs[1] * C28520) / (C28519 * C28379);
    const double C101 = (C28524 * C28525 * C28523 * C28532) / C28379 -
                        (ae * bs[1] * C28520) / (C28519 * C28379);
    const double C153 = (C28524 * C28525 * C28523 * C28596) / C28379;
    const double C216 = (C28524 * C28525 * C28523 * C28622) / C28379;
    const double C278 = (C28524 * C28525 * C28523 * C28647) / C28379;
    const double C444 = (C28524 * C28525 * C28523 * C28698) / C28379;
    const double C626 = (C28593 * C28525 * C28523 * C28531) / C28379;
    const double C627 = (C28593 * C28525 * C28523 * C28532) / C28379;
    const double C678 = (C28593 * C28525 * C28523 * C28596) / C28379 -
                        (be * bs[1] * C28520) / (C28519 * C28379);
    const double C728 = (C28593 * C28525 * C28523 * C28622) / C28379;
    const double C778 = (C28593 * C28525 * C28523 * C28647) / C28379 -
                        (ae * bs[1] * C28520) / (C28519 * C28379);
    const double C916 = (C28593 * C28525 * C28523 * C28698) / C28379;
    const double C1067 = (C28619 * C28525 * C28523 * C28531) / C28379;
    const double C1068 = (C28619 * C28525 * C28523 * C28532) / C28379;
    const double C1119 = (C28619 * C28525 * C28523 * C28596) / C28379;
    const double C1169 = (C28619 * C28525 * C28523 * C28622) / C28379 -
                         (be * bs[1] * C28520) / (C28519 * C28379);
    const double C1219 = (C28619 * C28525 * C28523 * C28647) / C28379;
    const double C1357 = (C28619 * C28525 * C28523 * C28698) / C28379 -
                         (ae * bs[1] * C28520) / (C28519 * C28379);
    const double C28533 = std::pow(C28530, 3);
    const double C28562 = std::pow(C28530, 5);
    const double C28550 = C28541 * C28546;
    const double C28549 = C28541 * C28543;
    const double C28548 = C28542 * C28541;
    const double C28560 = C28540 * C28541;
    const double C28605 = C28541 * C28603;
    const double C28631 = C28541 * C28629;
    const double C28656 = C28541 * C28654;
    const double C28674 = C28673 * C28541;
    const double C28707 = C28541 * C28705;
    const double C28737 = C28736 * C28541;
    const double C28602 = C28540 * C28599;
    const double C28609 = C28561 * C28599;
    const double C28653 = C28540 * C28650;
    const double C28660 = C28561 * C28650;
    const double C28628 = C28540 * C28625;
    const double C28635 = C28561 * C28625;
    const double C28689 = C28540 * C28687;
    const double C28692 = C28561 * C28687;
    const double C28704 = C28540 * C28701;
    const double C28711 = C28561 * C28701;
    const double C28726 = C28540 * C28724;
    const double C28729 = C28561 * C28724;
    const double C29412 = -C29411;
    const double C29424 = -C29423;
    const double C29438 = -C29437;
    const double C29390 = std::exp(C29389);
    const double C29484 = std::exp(C29483);
    const double C29499 = std::exp(C29498);
    const double C95 = C28527 * C28528 - (bs[1] * C28520) / C28519;
    const double C617 = C28593 * C28524 * C28527;
    const double C619 = C28527 * C28671 - (bs[1] * C28520) / C28519;
    const double C1058 = C28619 * C28524 * C28527;
    const double C1060 = C28527 * C28734 - (bs[1] * C28520) / C28519;
    const double C2553 = C28619 * C28593 * C28527;
    const double C28537 = C28533 * C28535;
    const double C28536 = C28533 * C28534;
    const double C28539 = C28529 * C28533;
    const double C28600 = C28533 * C28598;
    const double C28626 = C28533 * C28624;
    const double C28651 = C28533 * C28649;
    const double C28702 = C28533 * C28700;
    const double C158 = (ae * C28525 * C28523 * C28593 * be +
                         C28524 * C28533 * C28529 * C28524 * C28593 * ae * be) /
                        C28381;
    const double C221 = (ae * C28525 * C28523 * C28619 * be +
                         C28524 * C28533 * C28529 * C28524 * C28619 * ae * be) /
                        C28381;
    const double C283 = (be * C28525 * C28523 * C28593 * ae +
                         C28524 * C28533 * C28529 * C28593 * C28524 * ae * be) /
                        C28381;
    const double C327 =
        (C28524 * (C28527 + std::pow(C28593, 2) * C28529 * C28533) * C28380) /
        C28381;
    const double C391 =
        (C28524 * C28533 * C28529 * C28593 * C28619 * ae * be) / C28381;
    const double C392 =
        (C28533 * C28529 * C28687 + C28541 * C28540 * C28687 * C28528) / C28381;
    const double C449 = (be * C28525 * C28523 * C28619 * ae +
                         C28524 * C28533 * C28529 * C28619 * C28524 * ae * be) /
                        C28381;
    const double C492 =
        (C28524 * C28533 * C28529 * C28619 * C28593 * ae * be) / C28381;
    const double C493 =
        (C28533 * C28529 * C28724 + C28541 * C28540 * C28724 * C28528) / C28381;
    const double C546 =
        (C28524 * (C28527 + std::pow(C28619, 2) * C28529 * C28533) * C28380) /
        C28381;
    const double C636 =
        (C28593 * (C28527 + C28528 * C28529 * C28533) * C28380) / C28381;
    const double C684 =
        (be * C28525 * C28523 * C28532 + C28593 * C28533 * C28529 * C28599) /
        C28381;
    const double C734 = (C28593 * C28533 * C28529 * C28625) / C28381;
    const double C784 =
        (ae * C28525 * C28523 * C28531 + C28593 * C28533 * C28529 * C28650) /
        C28381;
    const double C830 =
        (ae * C28525 * C28523 * C28596 + be * C28525 * C28523 * C28647 +
         C28593 * (C28527 + C28671 * C28529 * C28533) * C28380) /
        C28381;
    const double C872 =
        (ae * C28525 * C28523 * C28622 + C28593 * C28533 * C28529 * C28687) /
        C28381;
    const double C922 = (C28593 * C28533 * C28529 * C28701) / C28381;
    const double C966 =
        (be * C28525 * C28523 * C28698 + C28593 * C28533 * C28529 * C28724) /
        C28381;
    const double C1012 =
        (C28593 * (C28527 + C28734 * C28529 * C28533) * C28380) / C28381;
    const double C1077 =
        (C28619 * (C28527 + C28528 * C28529 * C28533) * C28380) / C28381;
    const double C1125 = (C28619 * C28533 * C28529 * C28599) / C28381;
    const double C1175 =
        (be * C28525 * C28523 * C28532 + C28619 * C28533 * C28529 * C28625) /
        C28381;
    const double C1225 = (C28619 * C28533 * C28529 * C28650) / C28381;
    const double C1271 =
        (C28619 * (C28527 + C28671 * C28529 * C28533) * C28380) / C28381;
    const double C1313 =
        (be * C28525 * C28523 * C28647 + C28619 * C28533 * C28529 * C28687) /
        C28381;
    const double C1363 =
        (ae * C28525 * C28523 * C28531 + C28619 * C28533 * C28529 * C28701) /
        C28381;
    const double C1407 =
        (ae * C28525 * C28523 * C28596 + C28619 * C28533 * C28529 * C28724) /
        C28381;
    const double C1453 =
        (ae * C28525 * C28523 * C28622 + be * C28525 * C28523 * C28698 +
         C28619 * (C28527 + C28734 * C28529 * C28533) * C28380) /
        C28381;
    const double C28575 = C28562 * C28569;
    const double C28572 = C28562 * C28565;
    const double C28571 = C28564 * C28562;
    const double C28612 = C28562 * C28610;
    const double C28638 = C28562 * C28636;
    const double C28663 = C28562 * C28661;
    const double C28679 = C28678 * C28562;
    const double C28714 = C28562 * C28712;
    const double C28742 = C28741 * C28562;
    const double C28553 = C28524 * C28550;
    const double C28559 = be * C28550;
    const double C28941 = C28593 * C28550;
    const double C29097 = C28619 * C28550;
    const double C28552 = C28524 * C28549;
    const double C28558 = ae * C28549;
    const double C28951 = C28593 * C28549;
    const double C29109 = C28619 * C28549;
    const double C28570 = C28560 * ae;
    const double C28568 = C28560 * C28528;
    const double C28567 = C28524 * C28560;
    const double C28566 = C28560 * be;
    const double C29025 = C28560 * C28671;
    const double C29024 = C28593 * C28560;
    const double C29125 = C28560 * C28734;
    const double C29124 = C28619 * C28560;
    const double C28608 = ae * C28605;
    const double C28607 = C28524 * C28605;
    const double C28909 = C28593 * C28605;
    const double C29115 = C28619 * C28605;
    const double C28634 = ae * C28631;
    const double C28633 = C28524 * C28631;
    const double C28957 = C28593 * C28631;
    const double C28997 = C28619 * C28631;
    const double C28659 = be * C28656;
    const double C28658 = C28524 * C28656;
    const double C28911 = C28593 * C28656;
    const double C29105 = C28619 * C28656;
    const double C28710 = be * C28707;
    const double C28709 = C28524 * C28707;
    const double C28958 = C28593 * C28707;
    const double C28999 = C28619 * C28707;
    const double C28604 = C28541 * C28602;
    const double C28611 = C28562 * C28609;
    const double C28655 = C28541 * C28653;
    const double C28662 = C28562 * C28660;
    const double C28630 = C28541 * C28628;
    const double C28637 = C28562 * C28635;
    const double C28690 = C28541 * C28689;
    const double C28693 = C28562 * C28692;
    const double C28706 = C28541 * C28704;
    const double C28713 = C28562 * C28711;
    const double C28727 = C28541 * C28726;
    const double C28730 = C28562 * C28729;
    const double C29413 = std::exp(C29412);
    const double C29425 = std::exp(C29424);
    const double C29439 = std::exp(C29438);
    const double C13869 = C29390 * C626;
    const double C17095 = C29390 * C1067;
    const double C28384 = C28382 * C29390;
    const double C29548 = C29537 * C29390;
    const double C29547 = C29390 * C29535;
    const double C3051 = -(C29390 * C29536) / C28379;
    const double C163 = C29484 * C153;
    const double C7627 = C29484 * C1119;
    const double C28430 = C28429 * C29484;
    const double C151 = -(2 * C28380 * (yA - yB) * C29484) / C28379;
    const double C325 =
        -((C29484 - (C28409 * 2 * C28380 * C28409 * C29484) / C28379) *
          C28388) /
        C28379;
    const double C3109 =
        ((C29484 - (C28409 * 2 * C28380 * C28409 * C29484) / C28379) * ae) /
            C28379 -
        (0 * be) / C28383;
    const double C3110 =
        (0 * ae) / C28379 - (C28380 * C28409 * C29484) / C28381;
    const double C29555 = C29537 * C29484;
    const double C29554 = C29484 * C29543;
    const double C10011 = -(C29484 * C29545) / C28379;
    const double C226 = C29499 * C216;
    const double C3714 = C29499 * C728;
    const double C28442 = C28441 * C29499;
    const double C214 = -(2 * C28380 * (zA - zB) * C29499) / C28379;
    const double C544 =
        -((C29499 - (C28412 * 2 * C28380 * C28412 * C29499) / C28379) *
          C28388) /
        C28379;
    const double C6680 =
        ((C29499 - (C28412 * 2 * C28380 * C28412 * C29499) / C28379) * ae) /
            C28379 -
        (0 * be) / C28383;
    const double C6681 =
        (0 * ae) / C28379 - (C28380 * C28412 * C29499) / C28381;
    const double C29557 = C29537 * C29499;
    const double C29556 = C29499 * C29544;
    const double C19324 = -(C29499 * C29546) / C28379;
    const double C103 =
        (C28525 * C28523 * C28532 + C28524 * (C28524 * C28537 + C28527 * ae) +
         C28524 * C28527 * ae) /
        C28379;
    const double C625 = (C28593 * (C28524 * C28537 + C28527 * ae)) / C28379;
    const double C629 = (C28525 * C28523 * C28532 + C28537 * C28671) / C28379;
    const double C1066 = (C28619 * (C28524 * C28537 + C28527 * ae)) / C28379;
    const double C1070 = (C28525 * C28523 * C28532 + C28537 * C28734) / C28379;
    const double C2557 = (C28619 * C28593 * C28537) / C28379;
    const double C3572 =
        (2 * C28593 * C28537 + C28593 * (C28537 + C28550 * C28671)) / C28379;
    const double C5932 = (C28619 * (C28537 + C28550 * C28671)) / C28379;
    const double C7539 =
        (2 * C28619 * C28537 + C28619 * (C28537 + C28550 * C28734)) / C28379;
    const double C110 =
        ((C28527 + C28528 * C28529 * C28533) * C28380 +
         ae * (C28524 * C28536 + C28527 * be) +
         be * (C28524 * C28537 + C28527 * ae) +
         C28524 *
             (ae * C28536 + be * C28537 +
              C28524 *
                  (C28529 * C28533 + C28528 * bs[4] * std::pow(C28522, 4)) *
                  C28380)) /
        C28381;
    const double C102 =
        (C28525 * C28523 * C28531 + C28524 * (C28524 * C28536 + C28527 * be) +
         C28524 * C28527 * be) /
        C28379;
    const double C624 = (C28593 * (C28524 * C28536 + C28527 * be)) / C28379;
    const double C628 = (C28525 * C28523 * C28531 + C28536 * C28671) / C28379;
    const double C1065 = (C28619 * (C28524 * C28536 + C28527 * be)) / C28379;
    const double C1069 = (C28525 * C28523 * C28531 + C28536 * C28734) / C28379;
    const double C2556 = (C28619 * C28593 * C28536) / C28379;
    const double C3571 =
        (2 * C28593 * C28536 + C28593 * (C28536 + C28549 * C28671)) / C28379;
    const double C5931 = (C28619 * (C28536 + C28549 * C28671)) / C28379;
    const double C7538 =
        (2 * C28619 * C28536 + C28619 * (C28536 + C28549 * C28734)) / C28379;
    const double C28547 = C28539 * ae;
    const double C28545 = C28524 * C28539;
    const double C28544 = C28539 * be;
    const double C28551 = C28539 + C28548;
    const double C28675 = C28539 + C28674;
    const double C28738 = C28539 + C28737;
    const double C28910 = C28593 * C28539;
    const double C28998 = C28619 * C28539;
    const double C328 =
        ((C28527 + C28671 * C28529 * C28533) * C28380 +
         (C28539 + C28671 * C28540 * C28541) * C28380 * C28528) /
        C28381;
    const double C547 =
        ((C28527 + C28734 * C28529 * C28533) * C28380 +
         (C28539 + C28734 * C28540 * C28541) * C28380 * C28528) /
        C28381;
    const double C96 =
        2 * C28524 * C28527 + C28524 * (C28527 + C28539 * C28528);
    const double C616 = C28593 * (C28527 + C28539 * C28528);
    const double C1057 = C28619 * (C28527 + C28539 * C28528);
    const double C3569 =
        2 * C28593 * C28527 + C28593 * (C28527 + C28539 * C28671);
    const double C5929 = C28619 * (C28527 + C28539 * C28671);
    const double C7536 =
        2 * C28619 * C28527 + C28619 * (C28527 + C28539 * C28734);
    const double C159 =
        (C28533 * C28529 * C28599 + ae * C28524 * C28600 +
         C28524 * (ae * C28600 + C28524 * C28541 * C28540 * C28599)) /
        C28381;
    const double C154 = (C28525 * C28523 * C28596 + C28600 * C28528) / C28379;
    const double C155 =
        (2 * C28524 * C28600 + C28524 * (C28600 + C28605 * C28528)) / C28379;
    const double C679 =
        (C28593 * C28524 * C28600 + C28524 * C28527 * be) / C28379;
    const double C680 = (C28593 * (C28600 + C28605 * C28528) +
                         (C28527 + C28539 * C28528) * be) /
                        C28379;
    const double C681 =
        (C28525 * C28523 * C28596 + C28593 * (C28593 * C28600 + C28527 * be) +
         C28593 * C28527 * be) /
        C28379;
    const double C1120 = (C28619 * C28524 * C28600) / C28379;
    const double C1121 = (C28619 * (C28600 + C28605 * C28528)) / C28379;
    const double C1122 = (C28525 * C28523 * C28596 + C28600 * C28734) / C28379;
    const double C2615 = (C28619 * (C28593 * C28600 + C28527 * be)) / C28379;
    const double C7622 =
        (2 * C28619 * C28600 + C28619 * (C28600 + C28605 * C28734)) / C28379;
    const double C222 =
        (C28533 * C28529 * C28625 + ae * C28524 * C28626 +
         C28524 * (ae * C28626 + C28524 * C28541 * C28540 * C28625)) /
        C28381;
    const double C217 = (C28525 * C28523 * C28622 + C28626 * C28528) / C28379;
    const double C218 =
        (2 * C28524 * C28626 + C28524 * (C28626 + C28631 * C28528)) / C28379;
    const double C729 = (C28593 * C28524 * C28626) / C28379;
    const double C730 = (C28593 * (C28626 + C28631 * C28528)) / C28379;
    const double C731 = (C28525 * C28523 * C28622 + C28626 * C28671) / C28379;
    const double C1170 =
        (C28619 * C28524 * C28626 + C28524 * C28527 * be) / C28379;
    const double C1171 = (C28619 * (C28626 + C28631 * C28528) +
                          (C28527 + C28539 * C28528) * be) /
                         C28379;
    const double C1172 =
        (C28525 * C28523 * C28622 + C28619 * (C28619 * C28626 + C28527 * be) +
         C28619 * C28527 * be) /
        C28379;
    const double C2671 =
        (C28619 * C28593 * C28626 + C28593 * C28527 * be) / C28379;
    const double C3709 =
        (2 * C28593 * C28626 + C28593 * (C28626 + C28631 * C28671)) / C28379;
    const double C6087 = (C28619 * (C28626 + C28631 * C28671) +
                          (C28527 + C28539 * C28671) * be) /
                         C28379;
    const double C284 =
        (C28533 * C28529 * C28650 + be * C28524 * C28651 +
         C28524 * (be * C28651 + C28524 * C28541 * C28540 * C28650)) /
        C28381;
    const double C279 = (C28525 * C28523 * C28647 + C28651 * C28528) / C28379;
    const double C280 =
        (2 * C28524 * C28651 + C28524 * (C28651 + C28656 * C28528)) / C28379;
    const double C779 =
        (C28593 * C28524 * C28651 + C28524 * C28527 * ae) / C28379;
    const double C780 = (C28593 * (C28651 + C28656 * C28528) +
                         (C28527 + C28539 * C28528) * ae) /
                        C28379;
    const double C781 =
        (C28525 * C28523 * C28647 + C28593 * (C28593 * C28651 + C28527 * ae) +
         C28593 * C28527 * ae) /
        C28379;
    const double C1220 = (C28619 * C28524 * C28651) / C28379;
    const double C1221 = (C28619 * (C28651 + C28656 * C28528)) / C28379;
    const double C1222 = (C28525 * C28523 * C28647 + C28651 * C28734) / C28379;
    const double C2727 = (C28619 * (C28593 * C28651 + C28527 * ae)) / C28379;
    const double C7742 =
        (2 * C28619 * C28651 + C28619 * (C28651 + C28656 * C28734)) / C28379;
    const double C450 =
        (C28533 * C28529 * C28701 + be * C28524 * C28702 +
         C28524 * (be * C28702 + C28524 * C28541 * C28540 * C28701)) /
        C28381;
    const double C445 = (C28525 * C28523 * C28698 + C28702 * C28528) / C28379;
    const double C446 =
        (2 * C28524 * C28702 + C28524 * (C28702 + C28707 * C28528)) / C28379;
    const double C917 = (C28593 * C28524 * C28702) / C28379;
    const double C918 = (C28593 * (C28702 + C28707 * C28528)) / C28379;
    const double C919 = (C28525 * C28523 * C28698 + C28702 * C28671) / C28379;
    const double C1358 =
        (C28619 * C28524 * C28702 + C28524 * C28527 * ae) / C28379;
    const double C1359 = (C28619 * (C28702 + C28707 * C28528) +
                          (C28527 + C28539 * C28528) * ae) /
                         C28379;
    const double C1360 =
        (C28525 * C28523 * C28698 + C28619 * (C28619 * C28702 + C28527 * ae) +
         C28619 * C28527 * ae) /
        C28379;
    const double C2889 =
        (C28619 * C28593 * C28702 + C28593 * C28527 * ae) / C28379;
    const double C3955 =
        (2 * C28593 * C28702 + C28593 * (C28702 + C28707 * C28671)) / C28379;
    const double C6377 = (C28619 * (C28702 + C28707 * C28671) +
                          (C28527 + C28539 * C28671) * ae) /
                         C28379;
    const double C165 = C29484 * C158;
    const double C228 = C29499 * C221;
    const double C335 = C29484 * C327;
    const double C396 = C29499 * C391;
    const double C399 = C29499 * C392;
    const double C497 = C29484 * C492;
    const double C500 = C29484 * C493;
    const double C554 = C29499 * C546;
    const double C13719 = C29390 * C636;
    const double C3716 = C29499 * C734;
    const double C13871 = C29390 * C784;
    const double C3900 = C29499 * C872;
    const double C14004 = C29390 * C922;
    const double C4075 = C29499 * C1012;
    const double C16905 = C29390 * C1077;
    const double C7629 = C29484 * C1125;
    const double C17097 = C29390 * C1225;
    const double C7818 = C29484 * C1271;
    const double C17289 = C29390 * C1363;
    const double C8006 = C29484 * C1407;
    const double C28579 = C28524 * C28575;
    const double C29011 = C28575 * C28671;
    const double C29077 = C28593 * C28575;
    const double C29099 = C28575 * C28734;
    const double C28578 = C28524 * C28572;
    const double C29017 = C28572 * C28671;
    const double C29083 = C28593 * C28572;
    const double C29111 = C28572 * C28734;
    const double C28577 = C28560 + C28571;
    const double C28614 = C28612 * C28528;
    const double C28916 = C28524 * C28612;
    const double C29023 = C28593 * C28612;
    const double C29117 = C28612 * C28734;
    const double C28640 = C28638 * C28528;
    const double C28926 = C28524 * C28638;
    const double C29041 = C28638 * C28671;
    const double C29087 = C28593 * C28638;
    const double C29123 = C28619 * C28638;
    const double C28665 = C28663 * C28528;
    const double C28918 = C28524 * C28663;
    const double C29026 = C28593 * C28663;
    const double C29106 = C28663 * C28734;
    const double C28680 = C28560 + C28679;
    const double C28716 = C28714 * C28528;
    const double C28932 = C28524 * C28714;
    const double C29047 = C28714 * C28671;
    const double C29089 = C28593 * C28714;
    const double C29126 = C28619 * C28714;
    const double C28743 = C28560 + C28742;
    const double C4145 = (C28593 * C28537 + C28941 * C28734) / C28379;
    const double C28563 = C28558 + C28559;
    const double C4144 = (C28593 * C28536 + C28951 * C28734) / C28379;
    const double C28574 = C28539 + C28568;
    const double C28576 = C28567 * ae;
    const double C28573 = C28567 * be;
    const double C28917 = C28593 * C28567;
    const double C29004 = C28619 * C28567;
    const double C29030 = C28539 + C29025;
    const double C29032 = C29024 * ae;
    const double C29029 = C29024 * be;
    const double C29088 = C28619 * C29024;
    const double C29130 = C28539 + C29125;
    const double C29132 = C29124 * ae;
    const double C29129 = C29124 * be;
    const double C1123 = (C28524 * C28600 + C28607 * C28734) / C28379;
    const double C732 = (C28524 * C28626 + C28633 * C28671) / C28379;
    const double C29021 = C28608 + C28659;
    const double C1223 = (C28524 * C28651 + C28658 * C28734) / C28379;
    const double C29121 = C28634 + C28710;
    const double C920 = (C28524 * C28702 + C28709 * C28671) / C28379;
    const double C160 =
        (2 * (ae * C28600 + C28524 * C28604) + ae * (C28600 + C28605 * C28528) +
         C28524 *
             (C28604 + ae * C28524 * C28605 +
              C28524 * (ae * C28605 + C28524 * C28562 * C28561 * C28599))) /
        C28381;
    const double C685 = (be * (C28524 * C28537 + C28527 * ae) +
                         C28593 * (ae * C28600 + C28524 * C28604)) /
                        C28381;
    const double C687 = (C28533 * C28529 * C28599 + be * C28593 * C28537 +
                         C28593 * (be * C28537 + C28593 * C28604)) /
                        C28381;
    const double C1126 = (C28619 * (ae * C28600 + C28524 * C28604)) / C28381;
    const double C1128 = (C28533 * C28529 * C28599 + C28604 * C28734) / C28381;
    const double C2618 = (C28619 * (be * C28537 + C28593 * C28604)) / C28381;
    const double C28613 = C28524 * C28611;
    const double C29010 = C28593 * C28611;
    const double C3657 =
        (2 * (be * C28537 + C28593 * C28604) + be * (C28537 + C28550 * C28671) +
         C28593 * (C28604 + be * C28593 * C28550 +
                   C28593 * (C28559 + C28593 * C28611))) /
        C28381;
    const double C4202 =
        (be * C28537 + C28593 * C28604 + (C28559 + C28593 * C28611) * C28734) /
        C28381;
    const double C6019 = (C28619 * (C28604 + be * C28941 +
                                    C28593 * (C28559 + C28593 * C28611))) /
                         C28381;
    const double C7624 =
        (2 * C28619 * C28604 + C28619 * (C28604 + C28611 * C28734)) / C28381;
    const double C26679 =
        (3 * (C28604 + C28611 * C28734) +
         C28619 * (2 * C28619 * C28611 +
                   C28619 * (C28611 +
                             std::pow(C28522, 6) * bs[6] * C28599 * C28734))) /
        C28381;
    const double C285 =
        (2 * (be * C28651 + C28524 * C28655) + be * (C28651 + C28656 * C28528) +
         C28524 *
             (C28655 + be * C28524 * C28656 +
              C28524 * (be * C28656 + C28524 * C28562 * C28561 * C28650))) /
        C28381;
    const double C785 = (ae * (C28524 * C28536 + C28527 * be) +
                         C28593 * (be * C28651 + C28524 * C28655)) /
                        C28381;
    const double C787 = (C28533 * C28529 * C28650 + ae * C28593 * C28536 +
                         C28593 * (ae * C28536 + C28593 * C28655)) /
                        C28381;
    const double C1226 = (C28619 * (be * C28651 + C28524 * C28655)) / C28381;
    const double C1228 = (C28533 * C28529 * C28650 + C28655 * C28734) / C28381;
    const double C2730 =
        (ae * C28619 * C28536 + C28593 * C28619 * C28655) / C28381;
    const double C28664 = C28524 * C28662;
    const double C29016 = C28593 * C28662;
    const double C29064 = C28619 * C28662;
    const double C3777 =
        (2 * (ae * C28536 + C28593 * C28655) + ae * (C28536 + C28549 * C28671) +
         C28593 * (C28655 + ae * C28593 * C28549 +
                   C28593 * (C28558 + C28593 * C28662))) /
        C28381;
    const double C4310 = (ae * (C28536 + C28549 * C28734) +
                          C28593 * (C28655 + C28662 * C28734)) /
                         C28381;
    const double C6163 =
        (C28619 * C28655 + ae * C28619 * C28951 +
         C28593 * (ae * C28619 * C28549 + C28593 * C28619 * C28662)) /
        C28381;
    const double C7744 =
        (2 * C28619 * C28655 + C28619 * (C28655 + C28662 * C28734)) / C28381;
    const double C14259 =
        (C28655 + C28662 * C28734 + ae * (C28951 + C28593 * C28572 * C28734) +
         C28593 * (ae * (C28549 + C28572 * C28734) +
                   C28593 * (C28662 +
                             std::pow(C28522, 6) * bs[6] * C28650 * C28734))) /
        C28381;
    const double C223 =
        (2 * (ae * C28626 + C28524 * C28630) + ae * (C28626 + C28631 * C28528) +
         C28524 *
             (C28630 + ae * C28524 * C28631 +
              C28524 * (ae * C28631 + C28524 * C28562 * C28561 * C28625))) /
        C28381;
    const double C735 = (C28593 * (ae * C28626 + C28524 * C28630)) / C28381;
    const double C737 = (C28533 * C28529 * C28625 + C28630 * C28671) / C28381;
    const double C1176 = (be * (C28524 * C28537 + C28527 * ae) +
                          C28619 * (ae * C28626 + C28524 * C28630)) /
                         C28381;
    const double C1178 = (C28533 * C28529 * C28625 + be * C28619 * C28537 +
                          C28619 * (be * C28537 + C28619 * C28630)) /
                         C28381;
    const double C2674 =
        (be * C28593 * C28537 + C28619 * C28593 * C28630) / C28381;
    const double C28639 = C28524 * C28637;
    const double C29076 = C28593 * C28637;
    const double C29098 = C28619 * C28637;
    const double C3711 =
        (2 * C28593 * C28630 + C28593 * (C28630 + C28637 * C28671)) / C28381;
    const double C4256 = (C28593 * C28630 + be * C28619 * C28941 +
                          C28619 * (be * C28941 + C28619 * C28593 * C28637)) /
                         C28381;
    const double C6089 = (be * (C28537 + C28550 * C28671) +
                          C28619 * (C28630 + C28637 * C28671)) /
                         C28381;
    const double C7690 =
        (2 * (be * C28537 + C28619 * C28630) + be * (C28537 + C28550 * C28734) +
         C28619 * (C28630 + be * C28619 * C28550 +
                   C28619 * (C28559 + C28619 * C28637))) /
        C28381;
    const double C13818 =
        (3 * (C28630 + C28637 * C28671) +
         C28593 * (2 * C28593 * C28637 +
                   C28593 * (C28637 +
                             std::pow(C28522, 6) * bs[6] * C28625 * C28671))) /
        C28381;
    const double C393 =
        (2 * C28524 * C28690 +
         C28524 * (C28690 + C28562 * C28561 * C28687 * C28528)) /
        C28381;
    const double C873 =
        (ae * C28524 * C28626 + C28593 * C28524 * C28690) / C28381;
    const double C875 = (C28533 * C28529 * C28687 + ae * C28593 * C28626 +
                         C28593 * (ae * C28626 + C28593 * C28690)) /
                        C28381;
    const double C1314 =
        (be * C28524 * C28651 + C28619 * C28524 * C28690) / C28381;
    const double C1316 = (C28533 * C28529 * C28687 + be * C28619 * C28651 +
                          C28619 * (be * C28651 + C28619 * C28690)) /
                         C28381;
    const double C2836 = (ae * (C28619 * C28626 + C28527 * be) +
                          C28593 * (be * C28651 + C28619 * C28690)) /
                         C28381;
    const double C28925 = C28524 * C28693;
    const double C29040 = C28593 * C28693;
    const double C29068 = C28619 * C28693;
    const double C394 =
        (3 * (C28690 + C28693 * C28528) +
         C28524 * (2 * C28524 * C28693 +
                   C28524 * (C28693 +
                             std::pow(C28522, 6) * bs[6] * C28687 * C28528))) /
        C28381;
    const double C874 = (ae * (C28626 + C28631 * C28528) +
                         C28593 * (C28690 + C28693 * C28528)) /
                        C28381;
    const double C876 = (C28524 * C28690 + ae * C28593 * C28633 +
                         C28593 * (ae * C28633 + C28593 * C28524 * C28693)) /
                        C28381;
    const double C1315 = (be * (C28651 + C28656 * C28528) +
                          C28619 * (C28690 + C28693 * C28528)) /
                         C28381;
    const double C1317 = (C28524 * C28690 + be * C28619 * C28658 +
                          C28619 * (be * C28658 + C28619 * C28524 * C28693)) /
                         C28381;
    const double C3897 =
        (2 * (ae * C28626 + C28593 * C28690) + ae * (C28626 + C28631 * C28671) +
         C28593 * (C28690 + ae * C28593 * C28631 +
                   C28593 * (C28634 + C28593 * C28693))) /
        C28381;
    const double C7889 =
        (2 * (be * C28651 + C28619 * C28690) + be * (C28651 + C28656 * C28734) +
         C28619 * (C28690 + be * C28619 * C28656 +
                   C28619 * (C28659 + C28619 * C28693))) /
        C28381;
    const double C451 =
        (2 * (be * C28702 + C28524 * C28706) + be * (C28702 + C28707 * C28528) +
         C28524 *
             (C28706 + be * C28524 * C28707 +
              C28524 * (be * C28707 + C28524 * C28562 * C28561 * C28701))) /
        C28381;
    const double C923 = (C28593 * (be * C28702 + C28524 * C28706)) / C28381;
    const double C925 = (C28533 * C28529 * C28701 + C28706 * C28671) / C28381;
    const double C1364 = (ae * (C28524 * C28536 + C28527 * be) +
                          C28619 * (be * C28702 + C28524 * C28706)) /
                         C28381;
    const double C1366 = (C28533 * C28529 * C28701 + ae * C28619 * C28536 +
                          C28619 * (ae * C28536 + C28619 * C28706)) /
                         C28381;
    const double C2892 =
        (ae * C28593 * C28536 + C28619 * C28593 * C28706) / C28381;
    const double C28715 = C28524 * C28713;
    const double C29082 = C28593 * C28713;
    const double C29110 = C28619 * C28713;
    const double C3957 =
        (2 * C28593 * C28706 + C28593 * (C28706 + C28713 * C28671)) / C28381;
    const double C4468 = (C28593 * C28706 + ae * C28619 * C28951 +
                          C28619 * (ae * C28951 + C28619 * C28593 * C28713)) /
                         C28381;
    const double C6379 = (ae * (C28536 + C28549 * C28671) +
                          C28619 * (C28706 + C28713 * C28671)) /
                         C28381;
    const double C7943 =
        (2 * (ae * C28536 + C28619 * C28706) + ae * (C28536 + C28549 * C28734) +
         C28619 * (C28706 + ae * C28619 * C28549 +
                   C28619 * (C28558 + C28619 * C28713))) /
        C28381;
    const double C14002 =
        (3 * (C28706 + C28713 * C28671) +
         C28593 * (2 * C28593 * C28713 +
                   C28593 * (C28713 +
                             std::pow(C28522, 6) * bs[6] * C28701 * C28671))) /
        C28381;
    const double C494 =
        (2 * C28524 * C28727 +
         C28524 * (C28727 + C28562 * C28561 * C28724 * C28528)) /
        C28381;
    const double C967 =
        (be * C28524 * C28702 + C28593 * C28524 * C28727) / C28381;
    const double C969 = (C28533 * C28529 * C28724 + be * C28593 * C28702 +
                         C28593 * (be * C28702 + C28593 * C28727)) /
                        C28381;
    const double C1408 =
        (ae * C28524 * C28600 + C28619 * C28524 * C28727) / C28381;
    const double C1410 = (C28533 * C28529 * C28724 + ae * C28619 * C28600 +
                          C28619 * (ae * C28600 + C28619 * C28727)) /
                         C28381;
    const double C2945 = (ae * (C28593 * C28600 + C28527 * be) +
                          C28619 * (be * C28702 + C28593 * C28727)) /
                         C28381;
    const double C28931 = C28524 * C28730;
    const double C29046 = C28593 * C28730;
    const double C29116 = C28619 * C28730;
    const double C495 =
        (3 * (C28727 + C28730 * C28528) +
         C28524 * (2 * C28524 * C28730 +
                   C28524 * (C28730 +
                             std::pow(C28522, 6) * bs[6] * C28724 * C28528))) /
        C28381;
    const double C968 = (be * (C28702 + C28707 * C28528) +
                         C28593 * (C28727 + C28730 * C28528)) /
                        C28381;
    const double C970 = (C28524 * C28727 + be * C28593 * C28709 +
                         C28593 * (be * C28709 + C28593 * C28524 * C28730)) /
                        C28381;
    const double C1409 = (ae * (C28600 + C28605 * C28528) +
                          C28619 * (C28727 + C28730 * C28528)) /
                         C28381;
    const double C1411 = (C28524 * C28727 + ae * C28619 * C28607 +
                          C28619 * (ae * C28607 + C28619 * C28524 * C28730)) /
                         C28381;
    const double C4017 =
        (2 * (be * C28702 + C28593 * C28727) + be * (C28702 + C28707 * C28671) +
         C28593 * (C28727 + be * C28593 * C28707 +
                   C28593 * (C28710 + C28593 * C28730))) /
        C28381;
    const double C8003 =
        (2 * (ae * C28600 + C28619 * C28727) + ae * (C28600 + C28605 * C28734) +
         C28619 * (C28727 + ae * C28619 * C28605 +
                   C28619 * (C28608 + C28619 * C28730))) /
        C28381;
    const double C29550 = C29413 * C29538;
    const double C84 =
        (C29413 * std::pow(C29538, 2)) / C29539 + C29413 / C29540;
    const double C86 = C29551 * C29413;
    const double C1510 = C29549 * C29413;
    const double C29552 = C29425 * C29541;
    const double C612 =
        (C29425 * std::pow(C29541, 2)) / C29539 + C29425 / C29540;
    const double C614 = C29551 * C29425;
    const double C1508 = C29549 * C29425;
    const double C29553 = C29439 * C29542;
    const double C1054 =
        (C29439 * std::pow(C29542, 2)) / C29539 + C29439 / C29540;
    const double C1056 = C29551 * C29439;
    const double C2032 = C29549 * C29439;
    const double C28387 = 2 * C28384;
    const double C91 = ((0 * ae) / C28379 - C28384 / C28381) / (2 * C28379) -
                       (0 * be) / C28379;
    const double C10015 = (0 * ae) / C28379 - C28384 / C28381;
    const double C79 = C29548 / C29395;
    const double C77 = C29390 / C29395 - (C29547 * C29536) / C28381;
    const double C78 = C29547 / C28383 - (C29548 * C29536) / C28379;
    const double C10009 = C29547 / C28379;
    const double C3581 = C3051 * C636;
    const double C3784 = C3051 * C784;
    const double C3780 = C3051 * C626;
    const double C3960 = C3051 * C922;
    const double C7548 = C3051 * C1077;
    const double C7751 = C3051 * C1225;
    const double C7747 = C3051 * C1067;
    const double C7946 = C3051 * C1363;
    const double C28477 = 2 * C28430;
    const double C3277 =
        (((-4 * C28430) / C28379 -
          (C28409 * (C29484 - (C28409 * 2 * C28430) / C28379) * C28388) /
              C28379) *
         ae) /
        C28379;
    const double C3278 =
        (-((C29484 - (C28409 * 2 * C28430) / C28379) * C28388) / C28379) /
        (2 * C28379);
    const double C10067 =
        (-(0 * be) / C28379) / (2 * C28379) -
        ((C29484 - (C28409 * 2 * C28430) / C28379) * be) / C28379;
    const double C10068 =
        (-(2 * C28430) / C28379) / (2 * C28379) - (0 * be) / C28379;
    const double C10235 =
        -(((-4 * C28430) / C28379 -
           (C28409 * (C29484 - (C28409 * 2 * C28430) / C28379) * C28388) /
               C28379) *
          be) /
        C28379;
    const double C10236 =
        (-((C29484 - (C28409 * 2 * C28430) / C28379) * C28388) / C28379) /
        (2 * C28379);
    const double C13403 = ((0 * ae) / C28379 - C28430 / C28381) / (2 * C28379) -
                          (0 * be) / C28379;
    const double C168 = C151 * C95;
    const double C166 = C151 * C101;
    const double C164 = C151 * C94;
    const double C334 = C151 * C278;
    const double C332 = C151 * C153;
    const double C498 = C151 * C444;
    const double C1568 = C151 * C617;
    const double C2090 = C151 * C1058;
    const double C7631 = C151 * C1060;
    const double C7630 = C151 * C1068;
    const double C7628 = C151 * C1059;
    const double C7817 = C151 * C1219;
    const double C7815 = C151 * C1119;
    const double C8007 = C151 * C1357;
    const double C9483 = C151 * C2553;
    const double C337 = C325 * C95;
    const double C333 = C325 * C94;
    const double C1744 = C325 * C617;
    const double C2266 = C325 * C1058;
    const double C7825 = C325 * C1060;
    const double C7816 = C325 * C1059;
    const double C9686 = C325 * C2553;
    const double C3120 = C3109 * C95;
    const double C3117 = C3109 * C101;
    const double C3113 = C3109 * C94;
    const double C3282 = C3109 * C278;
    const double C3280 = C3109 * C153;
    const double C3459 = C3109 * C444;
    const double C4721 = C3109 * C617;
    const double C5361 = C3109 * C1058;
    const double C23667 = C3109 * C1060;
    const double C23664 = C3109 * C1068;
    const double C23660 = C3109 * C1059;
    const double C23827 = C3109 * C1219;
    const double C23825 = C3109 * C1119;
    const double C24004 = C3109 * C1357;
    const double C25385 = C3109 * C2553;
    const double C3115 = C3110 * C617;
    const double C23662 = C3110 * C2553;
    const double C13402 =
        (((C29484 - (C28409 * 2 * C28430) / C28379) * ae) / C28379 -
         C28469 / C28383) /
            (2 * C28379) -
        ((C28409 * ((0 * ae) / C28379 - C28430 / C28381) + C29555) * be) /
            C28379;
    const double C13360 = C29555 / C29395;
    const double C3053 = C29554 / C28379;
    const double C13358 = C29484 / C29395 - (C29554 * C29545) / C28381;
    const double C13359 = C29554 / C28383 - (C29555 * C29545) / C28379;
    const double C10074 = C10011 * C158;
    const double C10070 = C10011 * C153;
    const double C10241 = C10011 * C327;
    const double C10421 = C10011 * C493;
    const double C10416 = C10011 * C492;
    const double C16979 = C10011 * C1125;
    const double C16975 = C10011 * C1119;
    const double C17161 = C10011 * C1271;
    const double C17346 = C10011 * C1407;
    const double C28507 = 2 * C28442;
    const double C7006 =
        (((-4 * C28442) / C28379 -
          (C28412 * (C29499 - (C28412 * 2 * C28442) / C28379) * C28388) /
              C28379) *
         ae) /
        C28379;
    const double C7007 =
        (-((C29499 - (C28412 * 2 * C28442) / C28379) * C28388) / C28379) /
        (2 * C28379);
    const double C19426 =
        (-(0 * be) / C28379) / (2 * C28379) -
        ((C29499 - (C28412 * 2 * C28442) / C28379) * be) / C28379;
    const double C19427 =
        (-(2 * C28442) / C28379) / (2 * C28379) - (0 * be) / C28379;
    const double C19752 =
        -(((-4 * C28442) / C28379 -
           (C28412 * (C29499 - (C28412 * 2 * C28442) / C28379) * C28388) /
               C28379) *
          be) /
        C28379;
    const double C19753 =
        (-((C29499 - (C28412 * 2 * C28442) / C28379) * C28388) / C28379) /
        (2 * C28379);
    const double C26017 = ((0 * ae) / C28379 - C28442 / C28381) / (2 * C28379) -
                          (0 * be) / C28379;
    const double C231 = C214 * C95;
    const double C229 = C214 * C101;
    const double C227 = C214 * C94;
    const double C397 = C214 * C278;
    const double C553 = C214 * C444;
    const double C551 = C214 * C216;
    const double C1628 = C214 * C617;
    const double C2150 = C214 * C1058;
    const double C3718 = C214 * C619;
    const double C3717 = C214 * C627;
    const double C3715 = C214 * C618;
    const double C3901 = C214 * C778;
    const double C4074 = C214 * C916;
    const double C4072 = C214 * C728;
    const double C6092 = C214 * C2553;
    const double C556 = C544 * C95;
    const double C552 = C544 * C94;
    const double C1971 = C544 * C617;
    const double C2493 = C544 * C1058;
    const double C4081 = C544 * C619;
    const double C4073 = C544 * C618;
    const double C6523 = C544 * C2553;
    const double C6691 = C6680 * C95;
    const double C6688 = C6680 * C101;
    const double C6684 = C6680 * C94;
    const double C6850 = C6680 * C278;
    const double C7011 = C6680 * C444;
    const double C7009 = C6680 * C216;
    const double C8266 = C6680 * C617;
    const double C8913 = C6680 * C1058;
    const double C16504 = C6680 * C619;
    const double C16501 = C6680 * C627;
    const double C16497 = C6680 * C618;
    const double C16663 = C6680 * C778;
    const double C16822 = C6680 * C916;
    const double C16820 = C6680 * C728;
    const double C18829 = C6680 * C2553;
    const double C6686 = C6681 * C1058;
    const double C16499 = C6681 * C2553;
    const double C26016 =
        (((C29499 - (C28412 * 2 * C28442) / C28379) * ae) / C28379 -
         C28499 / C28383) /
            (2 * C28379) -
        ((C28412 * ((0 * ae) / C28379 - C28442 / C28381) + C29557) * be) /
            C28379;
    const double C25938 = C29557 / C29395;
    const double C6578 = C29556 / C28379;
    const double C25936 = C29499 / C29395 - (C29556 * C29546) / C28381;
    const double C25937 = C29556 / C28383 - (C29557 * C29546) / C28379;
    const double C19433 = C19324 * C221;
    const double C19429 = C19324 * C216;
    const double C19600 = C19324 * C392;
    const double C19595 = C19324 * C391;
    const double C19758 = C19324 * C546;
    const double C23211 = C19324 * C734;
    const double C23207 = C19324 * C728;
    const double C23373 = C19324 * C872;
    const double C23534 = C19324 * C1012;
    const double C170 = C151 * C103;
    const double C233 = C214 * C103;
    const double C3124 = C3109 * C103;
    const double C6695 = C6680 * C103;
    const double C1570 = C151 * C625;
    const double C1630 = C214 * C625;
    const double C3119 = C3110 * C625;
    const double C4725 = C3109 * C625;
    const double C8270 = C6680 * C625;
    const double C3720 = C214 * C629;
    const double C16508 = C6680 * C629;
    const double C2092 = C151 * C1066;
    const double C2152 = C214 * C1066;
    const double C5365 = C3109 * C1066;
    const double C6690 = C6681 * C1066;
    const double C8917 = C6680 * C1066;
    const double C7633 = C151 * C1070;
    const double C23671 = C3109 * C1070;
    const double C6094 = C214 * C2557;
    const double C9485 = C151 * C2557;
    const double C16503 = C6681 * C2557;
    const double C18833 = C6680 * C2557;
    const double C23666 = C3110 * C2557;
    const double C25389 = C3109 * C2557;
    const double C13824 = C214 * C3572;
    const double C15561 = C214 * C5932;
    const double C16510 = C6681 * C5932;
    const double C25391 = C3110 * C5932;
    const double C26685 = C151 * C7539;
    const double C3782 = C29548 * C624;
    const double C4866 = C3051 * C624;
    const double C10708 = C29548 * C624;
    const double C14674 = C29390 * C624;
    const double C3789 = C3051 * C628;
    const double C13873 = C29390 * C628;
    const double C7749 = C29548 * C1065;
    const double C8988 = C3051 * C1065;
    const double C18286 = C29390 * C1065;
    const double C20463 = C29548 * C1065;
    const double C7756 = C3051 * C1069;
    const double C17100 = C29390 * C1069;
    const double C6167 = C3051 * C2556;
    const double C15616 = C29390 * C2556;
    const double C13878 = C29390 * C3571;
    const double C15620 = C29390 * C5931;
    const double C26773 = C29390 * C7538;
    const double C28556 = C28553 + C28547;
    const double C28913 = C28911 + C28547;
    const double C29001 = C28999 + C28547;
    const double C2837 = (ae * (C28619 * C28633 + C28545 * be) +
                          C28593 * (be * C28658 + C28619 * C28524 * C28693)) /
                         C28381;
    const double C2946 = (ae * (C28593 * C28607 + C28545 * be) +
                          C28619 * (be * C28709 + C28593 * C28524 * C28730)) /
                         C28381;
    const double C682 =
        (C28524 * C28600 + C28593 * (C28593 * C28607 + C28545 * be) +
         C28593 * C28545 * be) /
        C28379;
    const double C782 =
        (C28524 * C28651 + C28593 * (C28593 * C28658 + C28545 * ae) +
         C28593 * C28545 * ae) /
        C28379;
    const double C1173 =
        (C28524 * C28626 + C28619 * (C28619 * C28633 + C28545 * be) +
         C28619 * C28545 * be) /
        C28379;
    const double C1361 =
        (C28524 * C28702 + C28619 * (C28619 * C28709 + C28545 * ae) +
         C28619 * C28545 * ae) /
        C28379;
    const double C2616 = (C28619 * (C28593 * C28607 + C28545 * be)) / C28379;
    const double C2672 =
        (C28619 * C28593 * C28633 + C28593 * C28545 * be) / C28379;
    const double C2728 = (C28619 * (C28593 * C28658 + C28545 * ae)) / C28379;
    const double C2890 =
        (C28619 * C28593 * C28709 + C28593 * C28545 * ae) / C28379;
    const double C620 = C28524 * C28527 + C28545 * C28671;
    const double C1061 = C28524 * C28527 + C28545 * C28734;
    const double C2554 = C28619 * C28593 * C28545;
    const double C3570 =
        2 * C28593 * C28545 + C28593 * (C28545 + C28567 * C28671);
    const double C5930 = C28619 * (C28545 + C28567 * C28671);
    const double C7537 =
        2 * C28619 * C28545 + C28619 * (C28545 + C28567 * C28734);
    const double C28555 = C28552 + C28544;
    const double C28912 = C28909 + C28544;
    const double C29000 = C28997 + C28544;
    const double C4414 = (ae * (C28626 + C28619 * (C28619 * C28631 + C28544) +
                                C28619 * C28539 * be) +
                          C28593 * (C28690 + be * C28619 * C28656 +
                                    C28619 * (C28659 + C28619 * C28693))) /
                         C28381;
    const double C28554 = C28551 * C28380;
    const double C28676 = C28675 * C28380;
    const double C28739 = C28738 * C28380;
    const double C6307 =
        (be * C28651 + C28619 * C28690 + ae * (C28619 * C28957 + C28910 * be) +
         C28593 * (ae * (C28619 * C28631 + C28544) +
                   C28593 * (C28659 + C28619 * C28693))) /
        C28381;
    const double C4254 =
        (C28593 * C28626 + C28619 * (C28619 * C28957 + C28910 * be) +
         C28619 * C28910 * be) /
        C28379;
    const double C4466 =
        (C28593 * C28702 + C28619 * (C28619 * C28958 + C28910 * ae) +
         C28619 * C28910 * ae) /
        C28379;
    const double C4142 = C28593 * C28527 + C28910 * C28734;
    const double C16897 =
        2 * C28619 * C28910 + C28619 * (C28910 + C29024 * C28734);
    const double C339 = C29484 * C328;
    const double C10253 = C10011 * C328;
    const double C558 = C29499 * C547;
    const double C19770 = C19324 * C547;
    const double C171 = C151 * C96;
    const double C234 = C214 * C96;
    const double C341 = C325 * C96;
    const double C560 = C544 * C96;
    const double C1572 = C151 * C616;
    const double C1632 = C214 * C616;
    const double C1740 = C325 * C616;
    const double C1967 = C544 * C616;
    const double C3122 = C3110 * C616;
    const double C2094 = C151 * C1057;
    const double C2154 = C214 * C1057;
    const double C2262 = C325 * C1057;
    const double C2489 = C544 * C1057;
    const double C6693 = C6681 * C1057;
    const double C13822 = C214 * C3569;
    const double C14093 = C544 * C3569;
    const double C15559 = C214 * C5929;
    const double C15886 = C544 * C5929;
    const double C16506 = C6681 * C5929;
    const double C25387 = C3110 * C5929;
    const double C26683 = C151 * C7536;
    const double C26821 = C325 * C7536;
    const double C169 = C29484 * C159;
    const double C10083 = C10011 * C159;
    const double C167 = C29484 * C154;
    const double C336 = C151 * C154;
    const double C3292 = C3109 * C154;
    const double C10079 = C10011 * C154;
    const double C172 = C29484 * C155;
    const double C340 = C151 * C155;
    const double C1569 = C29484 * C679;
    const double C1743 = C151 * C679;
    const double C3114 = C29555 * C679;
    const double C3284 = C3110 * C679;
    const double C4943 = C3109 * C679;
    const double C10072 = C29555 * C679;
    const double C11577 = C10011 * C679;
    const double C1573 = C29484 * C680;
    const double C1739 = C151 * C680;
    const double C3123 = C29555 * C680;
    const double C3288 = C3110 * C680;
    const double C10081 = C29555 * C680;
    const double C2091 = C29484 * C1120;
    const double C2265 = C151 * C1120;
    const double C5575 = C3109 * C1120;
    const double C12211 = C10011 * C1120;
    const double C2095 = C29484 * C1121;
    const double C2261 = C151 * C1121;
    const double C7632 = C29484 * C1122;
    const double C7824 = C151 * C1122;
    const double C16984 = C10011 * C1122;
    const double C23837 = C3109 * C1122;
    const double C9484 = C29484 * C2615;
    const double C9685 = C151 * C2615;
    const double C16977 = C29555 * C2615;
    const double C18756 = C10011 * C2615;
    const double C23661 = C29555 * C2615;
    const double C23829 = C3110 * C2615;
    const double C25599 = C3109 * C2615;
    const double C26684 = C29484 * C7622;
    const double C26820 = C151 * C7622;
    const double C232 = C29499 * C222;
    const double C19442 = C19324 * C222;
    const double C230 = C29499 * C217;
    const double C555 = C214 * C217;
    const double C7021 = C6680 * C217;
    const double C19438 = C19324 * C217;
    const double C235 = C29499 * C218;
    const double C559 = C214 * C218;
    const double C1629 = C29499 * C729;
    const double C1970 = C214 * C729;
    const double C8687 = C6680 * C729;
    const double C20938 = C19324 * C729;
    const double C1633 = C29499 * C730;
    const double C1966 = C214 * C730;
    const double C3719 = C29499 * C731;
    const double C4080 = C214 * C731;
    const double C16832 = C6680 * C731;
    const double C23216 = C19324 * C731;
    const double C2151 = C29499 * C1170;
    const double C2492 = C214 * C1170;
    const double C6685 = C29557 * C1170;
    const double C7013 = C6681 * C1170;
    const double C9341 = C6680 * C1170;
    const double C19431 = C29557 * C1170;
    const double C21572 = C19324 * C1170;
    const double C2155 = C29499 * C1171;
    const double C2488 = C214 * C1171;
    const double C6694 = C29557 * C1171;
    const double C7017 = C6681 * C1171;
    const double C19440 = C29557 * C1171;
    const double C6093 = C29499 * C2671;
    const double C6522 = C214 * C2671;
    const double C16498 = C29557 * C2671;
    const double C16824 = C6681 * C2671;
    const double C19265 = C6680 * C2671;
    const double C23209 = C29557 * C2671;
    const double C25460 = C19324 * C2671;
    const double C13823 = C29499 * C3709;
    const double C14092 = C214 * C3709;
    const double C15560 = C29499 * C6087;
    const double C15885 = C214 * C6087;
    const double C16507 = C29557 * C6087;
    const double C16828 = C6681 * C6087;
    const double C23218 = C29557 * C6087;
    const double C338 = C151 * C279;
    const double C400 = C214 * C279;
    const double C3294 = C3109 * C279;
    const double C6853 = C6680 * C279;
    const double C342 = C151 * C280;
    const double C401 = C214 * C280;
    const double C1745 = C151 * C779;
    const double C1804 = C214 * C779;
    const double C3286 = C3110 * C779;
    const double C4945 = C3109 * C779;
    const double C8479 = C6680 * C779;
    const double C1741 = C151 * C780;
    const double C1806 = C214 * C780;
    const double C3290 = C3110 * C780;
    const double C3902 = C214 * C781;
    const double C16666 = C6680 * C781;
    const double C2267 = C151 * C1220;
    const double C2326 = C214 * C1220;
    const double C5577 = C3109 * C1220;
    const double C6852 = C6681 * C1220;
    const double C9129 = C6680 * C1220;
    const double C2263 = C151 * C1221;
    const double C2328 = C214 * C1221;
    const double C6855 = C6681 * C1221;
    const double C7826 = C151 * C1222;
    const double C23839 = C3109 * C1222;
    const double C6310 = C214 * C2727;
    const double C9687 = C151 * C2727;
    const double C16665 = C6681 * C2727;
    const double C19053 = C6680 * C2727;
    const double C23831 = C3110 * C2727;
    const double C25601 = C3109 * C2727;
    const double C26822 = C151 * C7742;
    const double C501 = C151 * C445;
    const double C557 = C214 * C445;
    const double C3462 = C3109 * C445;
    const double C7023 = C6680 * C445;
    const double C502 = C151 * C446;
    const double C561 = C214 * C446;
    const double C1911 = C151 * C917;
    const double C1972 = C214 * C917;
    const double C3461 = C3110 * C917;
    const double C5157 = C3109 * C917;
    const double C8689 = C6680 * C917;
    const double C1913 = C151 * C918;
    const double C1968 = C214 * C918;
    const double C3464 = C3110 * C918;
    const double C4082 = C214 * C919;
    const double C16834 = C6680 * C919;
    const double C2433 = C151 * C1358;
    const double C2494 = C214 * C1358;
    const double C5785 = C3109 * C1358;
    const double C7015 = C6681 * C1358;
    const double C9343 = C6680 * C1358;
    const double C2435 = C151 * C1359;
    const double C2490 = C214 * C1359;
    const double C7019 = C6681 * C1359;
    const double C8008 = C151 * C1360;
    const double C24007 = C3109 * C1360;
    const double C6524 = C214 * C2889;
    const double C9892 = C151 * C2889;
    const double C16826 = C6681 * C2889;
    const double C19267 = C6680 * C2889;
    const double C24006 = C3110 * C2889;
    const double C25815 = C3109 * C2889;
    const double C14094 = C214 * C3955;
    const double C15887 = C214 * C6377;
    const double C16830 = C6681 * C6377;
    const double C25817 = C3110 * C6377;
    const double C28582 = C28579 + C28570;
    const double C29013 = C28550 + C29011;
    const double C16899 =
        (2 * C28619 * C28941 + C28619 * (C28941 + C29077 * C28734)) / C28379;
    const double C29101 = C28550 + C29099;
    const double C28581 = C28578 + C28566;
    const double C29019 = C28549 + C29017;
    const double C16898 =
        (2 * C28619 * C28951 + C28619 * (C28951 + C29083 * C28734)) / C28379;
    const double C29113 = C28549 + C29111;
    const double C28580 = C28577 * C28380;
    const double C28616 = C28605 + C28614;
    const double C28919 = C28593 * C28916;
    const double C7623 =
        (2 * C28619 * C28607 + C28619 * (C28607 + C28916 * C28734)) / C28379;
    const double C29028 = C29023 + C28566;
    const double C29119 = C28605 + C29117;
    const double C28642 = C28631 + C28640;
    const double C28960 = C28593 * C28926;
    const double C29003 = C28619 * C28926;
    const double C3710 =
        (2 * C28593 * C28633 + C28593 * (C28633 + C28926 * C28671)) / C28379;
    const double C6088 = (C28619 * (C28633 + C28926 * C28671) +
                          (C28545 + C28567 * C28671) * be) /
                         C28379;
    const double C29043 = C28631 + C29041;
    const double C29090 = C28619 * C29087;
    const double C29128 = C29123 + C28566;
    const double C28667 = C28656 + C28665;
    const double C28920 = C28593 * C28918;
    const double C7743 =
        (2 * C28619 * C28658 + C28619 * (C28658 + C28918 * C28734)) / C28379;
    const double C29031 = C29026 + C28570;
    const double C29107 = C28656 + C29106;
    const double C28681 = C28680 * C28380;
    const double C28718 = C28707 + C28716;
    const double C28961 = C28593 * C28932;
    const double C29005 = C28619 * C28932;
    const double C3956 =
        (2 * C28593 * C28709 + C28593 * (C28709 + C28932 * C28671)) / C28379;
    const double C6378 = (C28619 * (C28709 + C28932 * C28671) +
                          (C28545 + C28567 * C28671) * ae) /
                         C28379;
    const double C29049 = C28707 + C29047;
    const double C29091 = C28619 * C29089;
    const double C29131 = C29126 + C28570;
    const double C28744 = C28743 * C28380;
    const double C18835 = C6681 * C4145;
    const double C23673 = C3110 * C4145;
    const double C28008 = C151 * C4145;
    const double C17104 = C29390 * C4144;
    const double C97 = 3 * (C28527 + C28539 * C28528) +
                       C28524 * (2 * C28545 + C28524 * C28574);
    const double C621 = C28527 + C28539 * C28528 + C28574 * C28671;
    const double C1062 = C28527 + C28539 * C28528 + C28574 * C28734;
    const double C1511 = C28593 * (2 * C28545 + C28524 * C28574);
    const double C2033 = C28619 * (2 * C28545 + C28524 * C28574);
    const double C2555 = C28619 * C28593 * C28574;
    const double C4143 = C28593 * C28545 + C28917 * C28734;
    const double C13711 = 3 * (C28527 + C28539 * C28671) +
                          C28593 * (2 * C28910 + C28593 * C29030);
    const double C14136 = C28527 + C28539 * C28671 + C29030 * C28734;
    const double C15434 = C28619 * (2 * C28910 + C28593 * C29030);
    const double C14337 =
        (C28690 + be * C28619 * C28656 + C28619 * (C28659 + C28619 * C28693) +
         ae * (C28957 + C28619 * (C28619 * C28593 * C28638 + C29029) +
               C28619 * C29024 * be) +
         C28593 *
             (ae * (C28631 + C28619 * (C28619 * C28638 + C28566) +
                    C28619 * C28560 * be) +
              C28593 * (C28693 + be * C28619 * C28663 +
                        C28619 * (be * C28663 + C28619 * std::pow(C28522, 6) *
                                                    bs[6] * C28687)))) /
        C28381;
    const double C26629 = 3 * (C28527 + C28539 * C28734) +
                          C28619 * (2 * C28998 + C28619 * C29130);
    const double C7636 = C29484 * C1123;
    const double C7820 = C151 * C1123;
    const double C3723 = C29499 * C732;
    const double C4076 = C214 * C732;
    const double C7822 = C151 * C1223;
    const double C9131 = C6681 * C1223;
    const double C4078 = C214 * C920;
    const double C5159 = C3110 * C920;
    const double C174 = C29484 * C160;
    const double C1571 = C29484 * C685;
    const double C3118 = C29555 * C685;
    const double C10076 = C29555 * C685;
    const double C11581 = C10011 * C685;
    const double C2093 = C29484 * C1126;
    const double C12215 = C10011 * C1126;
    const double C7634 = C29484 * C1128;
    const double C16988 = C10011 * C1128;
    const double C9486 = C29484 * C2618;
    const double C16981 = C29555 * C2618;
    const double C18760 = C10011 * C2618;
    const double C23665 = C29555 * C2618;
    const double C28615 = C28608 + C28613;
    const double C29012 = C28559 + C29010;
    const double C16990 = C29555 * C4202;
    const double C23674 = C29555 * C4202;
    const double C28009 = C29484 * C4202;
    const double C18762 = C29555 * C6019;
    const double C25392 = C29555 * C6019;
    const double C26686 = C29484 * C7624;
    const double C3786 = C29548 * C785;
    const double C4870 = C3051 * C785;
    const double C10712 = C29548 * C785;
    const double C14676 = C29390 * C785;
    const double C3793 = C3051 * C787;
    const double C13875 = C29390 * C787;
    const double C7753 = C29548 * C1226;
    const double C8992 = C3051 * C1226;
    const double C18288 = C29390 * C1226;
    const double C20467 = C29548 * C1226;
    const double C7760 = C3051 * C1228;
    const double C17102 = C29390 * C1228;
    const double C6171 = C3051 * C2730;
    const double C15618 = C29390 * C2730;
    const double C28666 = C28659 + C28664;
    const double C29018 = C28558 + C29016;
    const double C17093 =
        (ae * (2 * C28619 * C28549 + C28619 * (C28549 + C28572 * C28734)) +
         C28593 * (2 * C29064 + C28619 * (C28662 + std::pow(C28522, 6) * bs[6] *
                                                       C28650 * C28734))) /
        C28381;
    const double C26768 =
        (3 * (C28655 + C28662 * C28734) +
         C28619 * (2 * C29064 + C28619 * (C28662 + std::pow(C28522, 6) * bs[6] *
                                                       C28650 * C28734))) /
        C28381;
    const double C13880 = C29390 * C3777;
    const double C17106 = C29390 * C4310;
    const double C15622 = C29390 * C6163;
    const double C26775 = C29390 * C7744;
    const double C237 = C29499 * C223;
    const double C1631 = C29499 * C735;
    const double C20942 = C19324 * C735;
    const double C3721 = C29499 * C737;
    const double C23220 = C19324 * C737;
    const double C2153 = C29499 * C1176;
    const double C6689 = C29557 * C1176;
    const double C19435 = C29557 * C1176;
    const double C21576 = C19324 * C1176;
    const double C6095 = C29499 * C2674;
    const double C16502 = C29557 * C2674;
    const double C23213 = C29557 * C2674;
    const double C25464 = C19324 * C2674;
    const double C28641 = C28634 + C28639;
    const double C17041 =
        (2 * (be * C28941 + C28619 * C29076) + be * (C28941 + C29077 * C28734) +
         C28619 *
             (C29076 + be * C28619 * C29077 +
              C28619 * (be * C29077 + C28619 * C28593 * std::pow(C28522, 6) *
                                          bs[6] * C28625))) /
        C28381;
    const double C29100 = C28559 + C29098;
    const double C13825 = C29499 * C3711;
    const double C18836 = C29557 * C4256;
    const double C25466 = C29557 * C4256;
    const double C15562 = C29499 * C6089;
    const double C16511 = C29557 * C6089;
    const double C23222 = C29557 * C6089;
    const double C402 = C29499 * C393;
    const double C1805 = C29499 * C873;
    const double C21144 = C19324 * C873;
    const double C3903 = C29499 * C875;
    const double C23378 = C19324 * C875;
    const double C2327 = C29499 * C1314;
    const double C6851 = C29557 * C1314;
    const double C19597 = C29557 * C1314;
    const double C21788 = C19324 * C1314;
    const double C6311 = C29499 * C2836;
    const double C16664 = C29557 * C2836;
    const double C23375 = C29557 * C2836;
    const double C25680 = C19324 * C2836;
    const double C3898 =
        (2 * (ae * C28633 + C28593 * C28925) + ae * (C28633 + C28926 * C28671) +
         C28593 *
             (C28925 + ae * C28593 * C28926 +
              C28593 * (ae * C28926 + C28593 * C28524 * std::pow(C28522, 6) *
                                          bs[6] * C28687))) /
        C28381;
    const double C4415 =
        (ae * (C28633 + C28619 * (C28619 * C28926 + C28573) +
               C28619 * C28567 * be) +
         C28593 *
             (C28925 + be * C28619 * C28918 +
              C28619 * (be * C28918 + C28619 * C28524 * std::pow(C28522, 6) *
                                          bs[6] * C28687))) /
        C28381;
    const double C7890 =
        (2 * (be * C28658 + C28619 * C28925) + be * (C28658 + C28918 * C28734) +
         C28619 *
             (C28925 + be * C28619 * C28918 +
              C28619 * (be * C28918 + C28619 * C28524 * std::pow(C28522, 6) *
                                          bs[6] * C28687))) /
        C28381;
    const double C29042 = C28634 + C29040;
    const double C29069 = C28659 + C29068;
    const double C1807 = C29499 * C874;
    const double C3905 = C29499 * C876;
    const double C2329 = C29499 * C1315;
    const double C6856 = C29557 * C1315;
    const double C19602 = C29557 * C1315;
    const double C9132 = C29557 * C1317;
    const double C21790 = C29557 * C1317;
    const double C13963 = C29499 * C3897;
    const double C3962 = C29548 * C923;
    const double C5088 = C3051 * C923;
    const double C10874 = C29548 * C923;
    const double C14832 = C29390 * C923;
    const double C3965 = C3051 * C925;
    const double C14007 = C29390 * C925;
    const double C7948 = C29548 * C1364;
    const double C9200 = C3051 * C1364;
    const double C18488 = C29390 * C1364;
    const double C20633 = C29548 * C1364;
    const double C7951 = C3051 * C1366;
    const double C17292 = C29390 * C1366;
    const double C6383 = C3051 * C2892;
    const double C15780 = C29390 * C2892;
    const double C28717 = C28710 + C28715;
    const double C17287 =
        (2 * (ae * C28951 + C28619 * C29082) + ae * (C28951 + C29083 * C28734) +
         C28619 *
             (C29082 + ae * C28619 * C29083 +
              C28619 * (ae * C29083 + C28619 * C28593 * std::pow(C28522, 6) *
                                          bs[6] * C28701))) /
        C28381;
    const double C29112 = C28558 + C29110;
    const double C14010 = C29390 * C3957;
    const double C17294 = C29390 * C4468;
    const double C15782 = C29390 * C6379;
    const double C26909 = C29390 * C7943;
    const double C503 = C29484 * C494;
    const double C1912 = C29484 * C967;
    const double C3460 = C29555 * C967;
    const double C10418 = C29555 * C967;
    const double C12007 = C10011 * C967;
    const double C2434 = C29484 * C1408;
    const double C12629 = C10011 * C1408;
    const double C8009 = C29484 * C1410;
    const double C17351 = C10011 * C1410;
    const double C9893 = C29484 * C2945;
    const double C17348 = C29555 * C2945;
    const double C19192 = C10011 * C2945;
    const double C24005 = C29555 * C2945;
    const double C4018 =
        (2 * (be * C28709 + C28593 * C28931) + be * (C28709 + C28932 * C28671) +
         C28593 *
             (C28931 + be * C28593 * C28932 +
              C28593 * (be * C28932 + C28593 * C28524 * std::pow(C28522, 6) *
                                          bs[6] * C28724))) /
        C28381;
    const double C8004 =
        (2 * (ae * C28607 + C28619 * C28931) + ae * (C28607 + C28916 * C28734) +
         C28619 *
             (C28931 + ae * C28619 * C28916 +
              C28619 * (ae * C28916 + C28619 * C28524 * std::pow(C28522, 6) *
                                          bs[6] * C28724))) /
        C28381;
    const double C29048 = C28710 + C29046;
    const double C29118 = C28608 + C29116;
    const double C1914 = C29484 * C968;
    const double C3465 = C29555 * C968;
    const double C10423 = C29555 * C968;
    const double C5160 = C29555 * C970;
    const double C12009 = C29555 * C970;
    const double C2436 = C29484 * C1409;
    const double C8011 = C29484 * C1411;
    const double C26951 = C29484 * C8003;
    const double C85 = (2 * C29549 * C29550) / C29408;
    const double C1509 = C29550 / C29408;
    const double C613 = (2 * C29549 * C29552) / C29408;
    const double C1507 = C29552 / C29408;
    const double C1055 = (2 * C29549 * C29553) / C29408;
    const double C2031 = C29553 / C29408;
    const double C28389 = C28377 * C28387;
    const double C3057 = (-C28387 / C28379) / (2 * C28379) - (0 * be) / C28379;
    const double C13361 = -C28387 / C28379;
    const double C10534 = C10015 * C625;
    const double C10532 = C10015 * C624;
    const double C10713 = C10015 * C779;
    const double C10709 = C10015 * C617;
    const double C10878 = C10015 * C920;
    const double C10875 = C10015 * C917;
    const double C11722 = C10015 * C780;
    const double C11718 = C10015 * C616;
    const double C11938 = C10015 * C918;
    const double C20289 = C10015 * C1066;
    const double C20287 = C10015 * C1065;
    const double C20475 = C10015 * C1223;
    const double C20468 = C10015 * C1220;
    const double C20464 = C10015 * C1058;
    const double C20634 = C10015 * C1358;
    const double C21651 = C10015 * C1221;
    const double C21647 = C10015 * C1057;
    const double C21859 = C10015 * C1359;
    const double C10531 = C10009 * C636;
    const double C10719 = C10009 * C787;
    const double C10715 = C10009 * C628;
    const double C10710 = C10009 * C784;
    const double C10706 = C10009 * C626;
    const double C10877 = C10009 * C925;
    const double C10872 = C10009 * C922;
    const double C11721 = C10009 * C785;
    const double C11717 = C10009 * C624;
    const double C11937 = C10009 * C923;
    const double C12983 = C10009 * C2730;
    const double C12979 = C10009 * C2556;
    const double C13185 = C10009 * C2892;
    const double C20286 = C10009 * C1077;
    const double C20474 = C10009 * C1228;
    const double C20470 = C10009 * C1069;
    const double C20465 = C10009 * C1225;
    const double C20461 = C10009 * C1067;
    const double C20636 = C10009 * C1366;
    const double C20631 = C10009 * C1363;
    const double C21650 = C10009 * C1226;
    const double C21646 = C10009 * C1065;
    const double C21858 = C10009 * C1364;
    const double C87 =
        (((0 - (C28377 * C28378) / C28379) * ae) / C28379 - (0 * be) / C28383) /
            (2 * C28379) -
        ((C28377 * (((C29390 - (C28377 * 2 * C28384) / C28379) * ae) / C28379 -
                    C28378 / C28383) +
          C10009) *
         be) /
            C28379 +
        (0 * ae) / C28379 - C28384 / C28381;
    const double C28478 = C28409 * C28477;
    const double C3293 = C3277 * C95;
    const double C3281 = C3277 * C94;
    const double C4944 = C3277 * C617;
    const double C5576 = C3277 * C1058;
    const double C23838 = C3277 * C1060;
    const double C23826 = C3277 * C1059;
    const double C25600 = C3277 * C2553;
    const double C3289 = C3278 * C616;
    const double C3285 = C3278 * C617;
    const double C23830 = C3278 * C2553;
    const double C25604 = C3278 * C5929;
    const double C10082 = C10067 * C103;
    const double C10078 = C10067 * C95;
    const double C10075 = C10067 * C101;
    const double C10071 = C10067 * C94;
    const double C10252 = C10067 * C279;
    const double C10250 = C10067 * C154;
    const double C10240 = C10067 * C278;
    const double C10238 = C10067 * C153;
    const double C10420 = C10067 * C445;
    const double C10417 = C10067 * C444;
    const double C11580 = C10067 * C625;
    const double C11576 = C10067 * C617;
    const double C11796 = C10067 * C779;
    const double C11794 = C10067 * C679;
    const double C12006 = C10067 * C917;
    const double C12214 = C10067 * C1066;
    const double C12210 = C10067 * C1058;
    const double C12422 = C10067 * C1220;
    const double C12420 = C10067 * C1120;
    const double C12628 = C10067 * C1358;
    const double C16987 = C10067 * C1070;
    const double C16983 = C10067 * C1060;
    const double C16980 = C10067 * C1068;
    const double C16976 = C10067 * C1059;
    const double C17172 = C10067 * C1222;
    const double C17170 = C10067 * C1122;
    const double C17160 = C10067 * C1219;
    const double C17158 = C10067 * C1119;
    const double C17350 = C10067 * C1360;
    const double C17347 = C10067 * C1357;
    const double C18759 = C10067 * C2557;
    const double C18755 = C10067 * C2553;
    const double C18975 = C10067 * C2727;
    const double C18973 = C10067 * C2615;
    const double C19191 = C10067 * C2889;
    const double C10080 = C10068 * C616;
    const double C10077 = C10068 * C625;
    const double C10073 = C10068 * C617;
    const double C10248 = C10068 * C780;
    const double C10246 = C10068 * C680;
    const double C10244 = C10068 * C779;
    const double C10242 = C10068 * C679;
    const double C10422 = C10068 * C918;
    const double C10419 = C10068 * C917;
    const double C12008 = C10068 * C920;
    const double C16989 = C10068 * C4145;
    const double C16982 = C10068 * C2557;
    const double C16978 = C10068 * C2553;
    const double C17164 = C10068 * C2727;
    const double C17162 = C10068 * C2615;
    const double C17349 = C10068 * C2889;
    const double C18761 = C10068 * C5932;
    const double C18757 = C10068 * C5929;
    const double C19193 = C10068 * C6377;
    const double C10251 = C10235 * C95;
    const double C10239 = C10235 * C94;
    const double C11795 = C10235 * C617;
    const double C12421 = C10235 * C1058;
    const double C17171 = C10235 * C1060;
    const double C17159 = C10235 * C1059;
    const double C18974 = C10235 * C2553;
    const double C10247 = C10236 * C616;
    const double C10243 = C10236 * C617;
    const double C17163 = C10236 * C2553;
    const double C18978 = C10236 * C5929;
    const double C344 = C332 - C333;
    const double C7828 = C7815 - C7816;
    const double C3125 = C3053 * C159;
    const double C3121 = C3053 * C154;
    const double C3116 = C3053 * C158;
    const double C3112 = C3053 * C153;
    const double C3295 = C3053 * C328;
    const double C3283 = C3053 * C327;
    const double C3463 = C3053 * C493;
    const double C3458 = C3053 * C492;
    const double C4726 = C3053 * C685;
    const double C4722 = C3053 * C679;
    const double C5158 = C3053 * C967;
    const double C5366 = C3053 * C1126;
    const double C5362 = C3053 * C1120;
    const double C5786 = C3053 * C1408;
    const double C23672 = C3053 * C1128;
    const double C23668 = C3053 * C1122;
    const double C23663 = C3053 * C1125;
    const double C23659 = C3053 * C1119;
    const double C23828 = C3053 * C1271;
    const double C24008 = C3053 * C1410;
    const double C24003 = C3053 * C1407;
    const double C25390 = C3053 * C2618;
    const double C25386 = C3053 * C2615;
    const double C25816 = C3053 * C2945;
    const double C13401 =
        (((0 - (C28409 * C28469) / C28379) * ae) / C28379 - (0 * be) / C28383) /
            (2 * C28379) -
        ((C28409 * (((C29484 - (C28409 * 2 * C28430) / C28379) * ae) / C28379 -
                    C28469 / C28383) +
          C3053) *
         be) /
            C28379 +
        (0 * ae) / C28379 - C28430 / C28381;
    const double C28508 = C28412 * C28507;
    const double C7022 = C7006 * C95;
    const double C7010 = C7006 * C94;
    const double C8688 = C7006 * C617;
    const double C9342 = C7006 * C1058;
    const double C16833 = C7006 * C619;
    const double C16821 = C7006 * C618;
    const double C19266 = C7006 * C2553;
    const double C7018 = C7007 * C1057;
    const double C7014 = C7007 * C1058;
    const double C16829 = C7007 * C5929;
    const double C16825 = C7007 * C2553;
    const double C19441 = C19426 * C103;
    const double C19437 = C19426 * C95;
    const double C19434 = C19426 * C101;
    const double C19430 = C19426 * C94;
    const double C19599 = C19426 * C279;
    const double C19596 = C19426 * C278;
    const double C19769 = C19426 * C445;
    const double C19767 = C19426 * C217;
    const double C19757 = C19426 * C444;
    const double C19755 = C19426 * C216;
    const double C20941 = C19426 * C625;
    const double C20937 = C19426 * C617;
    const double C21143 = C19426 * C779;
    const double C21351 = C19426 * C917;
    const double C21349 = C19426 * C729;
    const double C21575 = C19426 * C1066;
    const double C21571 = C19426 * C1058;
    const double C21787 = C19426 * C1220;
    const double C21999 = C19426 * C1358;
    const double C21997 = C19426 * C1170;
    const double C23219 = C19426 * C629;
    const double C23215 = C19426 * C619;
    const double C23212 = C19426 * C627;
    const double C23208 = C19426 * C618;
    const double C23377 = C19426 * C781;
    const double C23374 = C19426 * C778;
    const double C23545 = C19426 * C919;
    const double C23543 = C19426 * C731;
    const double C23533 = C19426 * C916;
    const double C23531 = C19426 * C728;
    const double C25463 = C19426 * C2557;
    const double C25459 = C19426 * C2553;
    const double C25679 = C19426 * C2727;
    const double C25891 = C19426 * C2889;
    const double C25889 = C19426 * C2671;
    const double C19439 = C19427 * C1057;
    const double C19436 = C19427 * C1066;
    const double C19432 = C19427 * C1058;
    const double C19601 = C19427 * C1221;
    const double C19598 = C19427 * C1220;
    const double C19765 = C19427 * C1359;
    const double C19763 = C19427 * C1171;
    const double C19761 = C19427 * C1358;
    const double C19759 = C19427 * C1170;
    const double C21789 = C19427 * C1223;
    const double C23221 = C19427 * C5932;
    const double C23217 = C19427 * C5929;
    const double C23214 = C19427 * C2557;
    const double C23210 = C19427 * C2553;
    const double C23376 = C19427 * C2727;
    const double C23541 = C19427 * C6377;
    const double C23539 = C19427 * C6087;
    const double C23537 = C19427 * C2889;
    const double C23535 = C19427 * C2671;
    const double C25465 = C19427 * C4145;
    const double C19768 = C19752 * C95;
    const double C19756 = C19752 * C94;
    const double C21350 = C19752 * C617;
    const double C21998 = C19752 * C1058;
    const double C23544 = C19752 * C619;
    const double C23532 = C19752 * C618;
    const double C25890 = C19752 * C2553;
    const double C19764 = C19753 * C1057;
    const double C19760 = C19753 * C1058;
    const double C23540 = C19753 * C5929;
    const double C23536 = C19753 * C2553;
    const double C563 = C551 - C552;
    const double C4084 = C4072 - C4073;
    const double C6696 = C6578 * C222;
    const double C6692 = C6578 * C217;
    const double C6687 = C6578 * C221;
    const double C6683 = C6578 * C216;
    const double C6854 = C6578 * C392;
    const double C6849 = C6578 * C391;
    const double C7024 = C6578 * C547;
    const double C7012 = C6578 * C546;
    const double C8271 = C6578 * C735;
    const double C8267 = C6578 * C729;
    const double C8480 = C6578 * C873;
    const double C8918 = C6578 * C1176;
    const double C8914 = C6578 * C1170;
    const double C9130 = C6578 * C1314;
    const double C16509 = C6578 * C737;
    const double C16505 = C6578 * C731;
    const double C16500 = C6578 * C734;
    const double C16496 = C6578 * C728;
    const double C16667 = C6578 * C875;
    const double C16662 = C6578 * C872;
    const double C16823 = C6578 * C1012;
    const double C18834 = C6578 * C2674;
    const double C18830 = C6578 * C2671;
    const double C19054 = C6578 * C2836;
    const double C26015 =
        (((0 - (C28412 * C28499) / C28379) * ae) / C28379 - (0 * be) / C28383) /
            (2 * C28379) -
        ((C28412 * (((C29499 - (C28412 * 2 * C28442) / C28379) * ae) / C28379 -
                    C28499 / C28383) +
          C6578) *
         be) /
            C28379 +
        (0 * ae) / C28379 - C28442 / C28381;
    const double C105 = (2 * (C28524 * C28537 + C28527 * ae) +
                         C28524 * (C28537 + C28524 * C28556 + C28545 * ae) +
                         (C28527 + C28539 * C28528) * ae) /
                        C28379;
    const double C623 =
        (C28593 * (C28537 + C28524 * C28556 + C28545 * ae)) / C28379;
    const double C631 =
        (C28524 * C28537 + C28527 * ae + C28556 * C28671) / C28379;
    const double C1064 =
        (C28619 * (C28537 + C28524 * C28556 + C28545 * ae)) / C28379;
    const double C1072 =
        (C28524 * C28537 + C28527 * ae + C28556 * C28734) / C28379;
    const double C2559 = (C28619 * C28593 * C28556) / C28379;
    const double C3775 = (2 * (C28593 * C28651 + C28527 * ae) +
                          C28593 * (C28651 + C28593 * C28913 + C28910 * ae) +
                          (C28527 + C28539 * C28671) * ae) /
                         C28379;
    const double C4308 =
        (C28593 * C28651 + C28527 * ae + C28913 * C28734) / C28379;
    const double C6161 =
        (C28619 * (C28651 + C28593 * C28913 + C28910 * ae)) / C28379;
    const double C7941 = (2 * (C28619 * C28702 + C28527 * ae) +
                          C28619 * (C28702 + C28619 * C29001 + C28998 * ae) +
                          (C28527 + C28539 * C28734) * ae) /
                         C28379;
    const double C5652 = C29499 * C2837;
    const double C8482 = C29557 * C2837;
    const double C21146 = C29557 * C2837;
    const double C5788 = C29555 * C2946;
    const double C8616 = C29484 * C2946;
    const double C12631 = C29555 * C2946;
    const double C4724 = C29555 * C682;
    const double C4939 = C3110 * C682;
    const double C11579 = C29555 * C682;
    const double C11790 = C10068 * C682;
    const double C3904 = C214 * C782;
    const double C4941 = C3110 * C782;
    const double C10720 = C10015 * C782;
    const double C11792 = C10068 * C782;
    const double C8916 = C29557 * C1173;
    const double C9337 = C6681 * C1173;
    const double C21574 = C29557 * C1173;
    const double C21993 = C19427 * C1173;
    const double C8010 = C151 * C1361;
    const double C9339 = C6681 * C1361;
    const double C20637 = C10015 * C1361;
    const double C21995 = C19427 * C1361;
    const double C5364 = C29555 * C2616;
    const double C5571 = C3110 * C2616;
    const double C8197 = C29484 * C2616;
    const double C8406 = C151 * C2616;
    const double C12213 = C29555 * C2616;
    const double C12416 = C10068 * C2616;
    const double C5436 = C29499 * C2672;
    const double C5855 = C214 * C2672;
    const double C8269 = C29557 * C2672;
    const double C8683 = C6681 * C2672;
    const double C20940 = C29557 * C2672;
    const double C21345 = C19427 * C2672;
    const double C5573 = C3110 * C2728;
    const double C5651 = C214 * C2728;
    const double C8408 = C151 * C2728;
    const double C8481 = C6681 * C2728;
    const double C12418 = C10068 * C2728;
    const double C12984 = C10015 * C2728;
    const double C21145 = C19427 * C2728;
    const double C5787 = C3110 * C2890;
    const double C5857 = C214 * C2890;
    const double C8615 = C151 * C2890;
    const double C8685 = C6681 * C2890;
    const double C12630 = C10068 * C2890;
    const double C13186 = C10015 * C2890;
    const double C21347 = C19427 * C2890;
    const double C3722 = C214 * C620;
    const double C4077 = C544 * C620;
    const double C4723 = C3110 * C620;
    const double C4940 = C3278 * C620;
    const double C10716 = C10015 * C620;
    const double C11578 = C10068 * C620;
    const double C11791 = C10236 * C620;
    const double C7635 = C151 * C1061;
    const double C7821 = C325 * C1061;
    const double C8915 = C6681 * C1061;
    const double C9338 = C7007 * C1061;
    const double C20471 = C10015 * C1061;
    const double C21573 = C19427 * C1061;
    const double C21994 = C19753 * C1061;
    const double C5363 = C3110 * C2554;
    const double C5435 = C214 * C2554;
    const double C5572 = C3278 * C2554;
    const double C5856 = C544 * C2554;
    const double C8196 = C151 * C2554;
    const double C8268 = C6681 * C2554;
    const double C8407 = C325 * C2554;
    const double C8684 = C7007 * C2554;
    const double C12212 = C10068 * C2554;
    const double C12417 = C10236 * C2554;
    const double C12980 = C10015 * C2554;
    const double C20939 = C19427 * C2554;
    const double C21346 = C19753 * C2554;
    const double C104 = (2 * (C28524 * C28536 + C28527 * be) +
                         C28524 * (C28536 + C28524 * C28555 + C28545 * be) +
                         (C28527 + C28539 * C28528) * be) /
                        C28379;
    const double C622 =
        (C28593 * (C28536 + C28524 * C28555 + C28545 * be)) / C28379;
    const double C630 =
        (C28524 * C28536 + C28527 * be + C28555 * C28671) / C28379;
    const double C1063 =
        (C28619 * (C28536 + C28524 * C28555 + C28545 * be)) / C28379;
    const double C1071 =
        (C28524 * C28536 + C28527 * be + C28555 * C28734) / C28379;
    const double C2558 = (C28619 * C28593 * C28555) / C28379;
    const double C4520 =
        (be * C28702 + C28593 * C28727 + ae * C28619 * C28912 +
         C28619 * (ae * C28912 + C28619 * (C28710 + C28593 * C28730))) /
        C28381;
    const double C6451 = (ae * (C28600 + C28593 * C28912 + C28910 * be) +
                          C28619 * (C28727 + be * C28958 +
                                    C28593 * (C28710 + C28593 * C28730))) /
                         C28381;
    const double C3655 = (2 * (C28593 * C28600 + C28527 * be) +
                          C28593 * (C28600 + C28593 * C28912 + C28910 * be) +
                          (C28527 + C28539 * C28671) * be) /
                         C28379;
    const double C4200 =
        (C28593 * C28600 + C28527 * be + C28912 * C28734) / C28379;
    const double C6017 =
        (C28619 * (C28600 + C28593 * C28912 + C28910 * be)) / C28379;
    const double C7688 = (2 * (C28619 * C28626 + C28527 * be) +
                          C28619 * (C28626 + C28619 * C29000 + C28998 * be) +
                          (C28527 + C28539 * C28734) * be) /
                         C28379;
    const double C19056 = C29557 * C4414;
    const double C25682 = C29557 * C4414;
    const double C111 =
        (2 * (ae * C28536 + be * C28537 + C28524 * C28554) +
         ae * (C28536 + C28524 * C28555 + C28545 * be) +
         be * (C28537 + C28524 * C28556 + C28545 * ae) +
         C28524 * (C28554 + ae * C28555 + be * C28556 +
                   C28524 * (ae * C28549 + be * C28550 +
                             C28524 *
                                 (C28540 * C28541 +
                                  C28528 * bs[5] * std::pow(C28530, 5)) *
                                 C28380))) /
        C28381;
    const double C635 = (ae * C28593 * C28536 + be * C28593 * C28537 +
                         C28524 * C28593 * C28554) /
                        C28381;
    const double C637 =
        ((C28527 + C28528 * C28529 * C28533) * C28380 + C28554 * C28671) /
        C28381;
    const double C1076 = (ae * C28619 * C28536 + be * C28619 * C28537 +
                          C28524 * C28619 * C28554) /
                         C28381;
    const double C1078 =
        ((C28527 + C28528 * C28529 * C28533) * C28380 + C28554 * C28734) /
        C28381;
    const double C2562 = (C28619 * C28593 * C28554) / C28381;
    const double C329 =
        (2 * C28524 * C28676 +
         C28524 *
             (C28676 + (C28560 + C28671 * C28561 * C28562) * C28380 * C28528)) /
        C28381;
    const double C829 = (ae * C28524 * C28600 + be * C28524 * C28651 +
                         C28593 * C28524 * C28676) /
                        C28381;
    const double C831 =
        ((C28527 + C28671 * C28529 * C28533) * C28380 +
         ae * (C28593 * C28600 + C28527 * be) +
         be * (C28593 * C28651 + C28527 * ae) +
         C28593 * (ae * C28600 + be * C28651 + C28593 * C28676)) /
        C28381;
    const double C1270 = (C28619 * C28524 * C28676) / C28381;
    const double C1272 =
        ((C28527 + C28671 * C28529 * C28533) * C28380 + C28676 * C28734) /
        C28381;
    const double C2783 = (ae * C28619 * C28600 + be * C28619 * C28651 +
                          C28593 * C28619 * C28676) /
                         C28381;
    const double C548 =
        (2 * C28524 * C28739 +
         C28524 *
             (C28739 + (C28560 + C28734 * C28561 * C28562) * C28380 * C28528)) /
        C28381;
    const double C1011 = (C28593 * C28524 * C28739) / C28381;
    const double C1013 =
        ((C28527 + C28734 * C28529 * C28533) * C28380 + C28739 * C28671) /
        C28381;
    const double C1452 = (ae * C28524 * C28626 + be * C28524 * C28702 +
                          C28619 * C28524 * C28739) /
                         C28381;
    const double C1454 =
        ((C28527 + C28734 * C28529 * C28533) * C28380 +
         ae * (C28619 * C28626 + C28527 * be) +
         be * (C28619 * C28702 + C28527 * ae) +
         C28619 * (ae * C28626 + be * C28702 + C28619 * C28739)) /
        C28381;
    const double C2998 = (ae * C28593 * C28626 + be * C28593 * C28702 +
                          C28619 * C28593 * C28739) /
                         C28381;
    const double C15726 = C29499 * C6307;
    const double C16669 = C29557 * C6307;
    const double C23380 = C29557 * C6307;
    const double C18832 = C29557 * C4254;
    const double C19261 = C6681 * C4254;
    const double C25462 = C29557 * C4254;
    const double C25885 = C19427 * C4254;
    const double C17352 = C10068 * C4466;
    const double C19263 = C6681 * C4466;
    const double C24009 = C3110 * C4466;
    const double C25887 = C19427 * C4466;
    const double C28319 = C151 * C4466;
    const double C16985 = C10068 * C4142;
    const double C17167 = C10236 * C4142;
    const double C18831 = C6681 * C4142;
    const double C19262 = C7007 * C4142;
    const double C23669 = C3110 * C4142;
    const double C23834 = C3278 * C4142;
    const double C25461 = C19427 * C4142;
    const double C25886 = C19753 * C4142;
    const double C28006 = C151 * C4142;
    const double C28162 = C325 * C4142;
    const double C176 = C169 - C170;
    const double C175 = C167 - C168;
    const double C345 = C336 - C337;
    const double C346 = C340 - C341;
    const double C1748 = C1743 - C1744;
    const double C1747 = C1739 - C1740;
    const double C8845 = C2090 - C2091;
    const double C8843 = C2091 - C2090;
    const double C2270 = C2265 - C2266;
    const double C2269 = C2261 - C2262;
    const double C26681 = C7632 - C7631;
    const double C7830 = C7824 - C7825;
    const double C9690 = C9685 - C9686;
    const double C26824 = C26820 - C26821;
    const double C239 = C232 - C233;
    const double C238 = C230 - C231;
    const double C564 = C555 - C556;
    const double C565 = C559 - C560;
    const double C4797 = C1628 - C1629;
    const double C4795 = C1629 - C1628;
    const double C1975 = C1970 - C1971;
    const double C1974 = C1966 - C1967;
    const double C13820 = C3719 - C3718;
    const double C4086 = C4080 - C4081;
    const double C2497 = C2492 - C2493;
    const double C2496 = C2488 - C2489;
    const double C6526 = C6522 - C6523;
    const double C14096 = C14092 - C14093;
    const double C15889 = C15885 - C15886;
    const double C403 = C399 - C400;
    const double C504 = C500 - C501;
    const double C28585 = C28524 * C28582;
    const double C28943 = C28593 * C28582;
    const double C3574 =
        (2 * C28593 * C28556 + C28593 * (C28556 + C28582 * C28671)) / C28379;
    const double C5934 = (C28619 * (C28556 + C28582 * C28671)) / C28379;
    const double C7541 =
        (2 * C28619 * C28556 + C28619 * (C28556 + C28582 * C28734)) / C28379;
    const double C14219 =
        (C28630 + C28637 * C28671 + be * C28619 * C29013 +
         C28619 *
             (be * C29013 + C28619 * (C28637 + std::pow(C28522, 6) * bs[6] *
                                                   C28625 * C28671))) /
        C28381;
    const double C15557 =
        (be * (2 * C28941 + C28593 * C29013) +
         C28619 * (2 * C28593 * C28637 +
                   C28593 * (C28637 +
                             std::pow(C28522, 6) * bs[6] * C28625 * C28671))) /
        C28381;
    const double C13713 = (3 * (C28537 + C28550 * C28671) +
                           C28593 * (2 * C28941 + C28593 * C29013)) /
                          C28379;
    const double C14138 = (C28537 + C28550 * C28671 + C29013 * C28734) / C28379;
    const double C15436 = (C28619 * (2 * C28941 + C28593 * C29013)) / C28379;
    const double C26631 = (3 * (C28537 + C28550 * C28734) +
                           C28619 * (2 * C29097 + C28619 * C29101)) /
                          C28379;
    const double C28584 = C28524 * C28581;
    const double C28953 = C28593 * C28581;
    const double C3573 =
        (2 * C28593 * C28555 + C28593 * (C28555 + C28581 * C28671)) / C28379;
    const double C5933 = (C28619 * (C28555 + C28581 * C28671)) / C28379;
    const double C7540 =
        (2 * C28619 * C28555 + C28619 * (C28555 + C28581 * C28734)) / C28379;
    const double C14377 =
        (C28706 + C28713 * C28671 + ae * C28619 * C29019 +
         C28619 *
             (ae * C29019 + C28619 * (C28713 + std::pow(C28522, 6) * bs[6] *
                                                   C28701 * C28671))) /
        C28381;
    const double C15613 =
        (2 * (ae * C28619 * C28549 + C28593 * C29064) + ae * C28619 * C29019 +
         C28593 * (C29064 + ae * C28619 * C28593 * C28572 +
                   C28593 * (ae * C28619 * C28572 + C28593 * C28619 *
                                                        std::pow(C28522, 6) *
                                                        bs[6] * C28650))) /
        C28381;
    const double C15777 =
        (ae * (2 * C28951 + C28593 * C29019) +
         C28619 * (2 * C28593 * C28713 +
                   C28593 * (C28713 +
                             std::pow(C28522, 6) * bs[6] * C28701 * C28671))) /
        C28381;
    const double C13712 = (3 * (C28536 + C28549 * C28671) +
                           C28593 * (2 * C28951 + C28593 * C29019)) /
                          C28379;
    const double C14137 = (C28536 + C28549 * C28671 + C29019 * C28734) / C28379;
    const double C15435 = (C28619 * (2 * C28951 + C28593 * C29019)) / C28379;
    const double C26630 = (3 * (C28536 + C28549 * C28734) +
                           C28619 * (2 * C29109 + C28619 * C29113)) /
                          C28379;
    const double C28583 = C28524 * C28580;
    const double C28854 = C28593 * C28580;
    const double C28864 = C28619 * C28580;
    const double C634 =
        (C28593 * C28554 + ae * C28593 * C28555 + be * C28593 * C28556 +
         C28524 * (ae * C28593 * C28549 + be * C28593 * C28550 +
                   C28524 * C28593 * C28580)) /
        C28381;
    const double C638 =
        (ae * (C28536 + C28549 * C28671) + be * (C28537 + C28550 * C28671) +
         C28524 * (C28554 + C28580 * C28671)) /
        C28381;
    const double C639 =
        (C28554 + C28580 * C28671 + ae * (C28555 + C28581 * C28671) +
         be * (C28556 + C28582 * C28671) +
         C28524 * (ae * (C28549 + C28572 * C28671) +
                   be * (C28550 + C28575 * C28671) +
                   C28524 * (C28580 + (C28561 * C28562 +
                                       C28528 * bs[6] * std::pow(C28522, 6)) *
                                          C28380 * C28671))) /
        C28381;
    const double C1075 =
        (C28619 * C28554 + ae * C28619 * C28555 + be * C28619 * C28556 +
         C28524 * (ae * C28619 * C28549 + be * C28619 * C28550 +
                   C28524 * C28619 * C28580)) /
        C28381;
    const double C1079 =
        (ae * (C28536 + C28549 * C28734) + be * (C28537 + C28550 * C28734) +
         C28524 * (C28554 + C28580 * C28734)) /
        C28381;
    const double C1080 =
        (C28554 + C28580 * C28734 + ae * (C28555 + C28581 * C28734) +
         be * (C28556 + C28582 * C28734) +
         C28524 * (ae * (C28549 + C28572 * C28734) +
                   be * (C28550 + C28575 * C28734) +
                   C28524 * (C28580 + (C28561 * C28562 +
                                       C28528 * bs[6] * std::pow(C28522, 6)) *
                                          C28380 * C28734))) /
        C28381;
    const double C3575 =
        (2 * C28593 * C28554 + C28593 * (C28554 + C28580 * C28671)) / C28381;
    const double C5935 = (C28619 * (C28554 + C28580 * C28671)) / C28381;
    const double C5936 = (ae * C28619 * (C28549 + C28572 * C28671) +
                          be * C28619 * (C28550 + C28575 * C28671) +
                          C28524 * C28619 *
                              (C28580 + (C28561 * C28562 +
                                         C28528 * bs[6] * std::pow(C28522, 6)) *
                                            C28380 * C28671)) /
                         C28381;
    const double C7542 =
        (2 * C28619 * C28554 + C28619 * (C28554 + C28580 * C28734)) / C28381;
    const double C14139 =
        (C28554 + C28580 * C28671 +
         (C28580 + (C28561 * C28562 + C28528 * bs[6] * std::pow(C28522, 6)) *
                       C28380 * C28671) *
             C28734) /
        C28381;
    const double C1412 =
        (C28727 + C28730 * C28528 + ae * C28619 * C28616 +
         C28619 *
             (ae * C28616 + C28619 * (C28730 + std::pow(C28522, 6) * bs[6] *
                                                   C28724 * C28528))) /
        C28381;
    const double C2431 =
        (ae * (2 * C28607 + C28524 * C28616) +
         C28619 * (2 * C28524 * C28730 +
                   C28524 * (C28730 +
                             std::pow(C28522, 6) * bs[6] * C28724 * C28528))) /
        C28381;
    const double C156 = (3 * (C28600 + C28605 * C28528) +
                         C28524 * (2 * C28607 + C28524 * C28616)) /
                        C28379;
    const double C683 =
        (C28600 + C28605 * C28528 + C28593 * (C28593 * C28616 + C28574 * be) +
         C28593 * C28574 * be) /
        C28379;
    const double C1124 = (C28600 + C28605 * C28528 + C28616 * C28734) / C28379;
    const double C1565 = (C28593 * (2 * C28607 + C28524 * C28616) +
                          (2 * C28545 + C28524 * C28574) * be) /
                         C28379;
    const double C2087 = (C28619 * (2 * C28607 + C28524 * C28616)) / C28379;
    const double C2617 = (C28619 * (C28593 * C28616 + C28574 * be)) / C28379;
    const double C28921 = C28919 + C28573;
    const double C29033 = C28593 * C29028;
    const double C16972 =
        (2 * C28619 * C28912 + C28619 * (C28912 + C29028 * C28734)) / C28379;
    const double C26678 = (3 * (C28600 + C28605 * C28734) +
                           C28619 * (2 * C29115 + C28619 * C29119)) /
                          C28379;
    const double C877 =
        (C28690 + C28693 * C28528 + ae * C28593 * C28642 +
         C28593 *
             (ae * C28642 + C28593 * (C28693 + std::pow(C28522, 6) * bs[6] *
                                                   C28687 * C28528))) /
        C28381;
    const double C1802 =
        (ae * (2 * C28633 + C28524 * C28642) +
         C28593 * (2 * C28524 * C28693 +
                   C28524 * (C28693 +
                             std::pow(C28522, 6) * bs[6] * C28687 * C28528))) /
        C28381;
    const double C219 = (3 * (C28626 + C28631 * C28528) +
                         C28524 * (2 * C28633 + C28524 * C28642)) /
                        C28379;
    const double C733 = (C28626 + C28631 * C28528 + C28642 * C28671) / C28379;
    const double C1174 =
        (C28626 + C28631 * C28528 + C28619 * (C28619 * C28642 + C28574 * be) +
         C28619 * C28574 * be) /
        C28379;
    const double C1625 = (C28593 * (2 * C28633 + C28524 * C28642)) / C28379;
    const double C2147 = (C28619 * (2 * C28633 + C28524 * C28642) +
                          (2 * C28545 + C28524 * C28574) * be) /
                         C28379;
    const double C2673 =
        (C28619 * C28593 * C28642 + C28593 * C28574 * be) / C28379;
    const double C6308 =
        (be * C28658 + C28619 * C28925 + ae * (C28619 * C28960 + C28917 * be) +
         C28593 *
             (ae * (C28619 * C28926 + C28573) +
              C28593 * (be * C28918 + C28619 * C28524 * std::pow(C28522, 6) *
                                          bs[6] * C28687))) /
        C28381;
    const double C4255 =
        (C28593 * C28633 + C28619 * (C28619 * C28960 + C28917 * be) +
         C28619 * C28917 * be) /
        C28379;
    const double C29006 = C29003 + C28573;
    const double C13817 = (3 * (C28626 + C28631 * C28671) +
                           C28593 * (2 * C28957 + C28593 * C29043)) /
                          C28379;
    const double C14218 =
        (C28626 + C28631 * C28671 + C28619 * (C28619 * C29043 + C29030 * be) +
         C28619 * C29030 * be) /
        C28379;
    const double C15556 = (C28619 * (2 * C28957 + C28593 * C29043) +
                           (2 * C28910 + C28593 * C29030) * be) /
                          C28379;
    const double C29092 = C29090 + C29029;
    const double C29133 = C28619 * C29128;
    const double C1318 =
        (C28690 + C28693 * C28528 + be * C28619 * C28667 +
         C28619 *
             (be * C28667 + C28619 * (C28693 + std::pow(C28522, 6) * bs[6] *
                                                   C28687 * C28528))) /
        C28381;
    const double C2324 =
        (be * (2 * C28658 + C28524 * C28667) +
         C28619 * (2 * C28524 * C28693 +
                   C28524 * (C28693 +
                             std::pow(C28522, 6) * bs[6] * C28687 * C28528))) /
        C28381;
    const double C2838 =
        (ae * (C28619 * C28642 + C28574 * be) +
         C28593 *
             (be * C28667 + C28619 * (C28693 + std::pow(C28522, 6) * bs[6] *
                                                   C28687 * C28528))) /
        C28381;
    const double C281 = (3 * (C28651 + C28656 * C28528) +
                         C28524 * (2 * C28658 + C28524 * C28667)) /
                        C28379;
    const double C783 =
        (C28651 + C28656 * C28528 + C28593 * (C28593 * C28667 + C28574 * ae) +
         C28593 * C28574 * ae) /
        C28379;
    const double C1224 = (C28651 + C28656 * C28528 + C28667 * C28734) / C28379;
    const double C1685 = (C28593 * (2 * C28658 + C28524 * C28667) +
                          (2 * C28545 + C28524 * C28574) * ae) /
                         C28379;
    const double C2207 = (C28619 * (2 * C28658 + C28524 * C28667)) / C28379;
    const double C2729 = (C28619 * (C28593 * C28667 + C28574 * ae)) / C28379;
    const double C28922 = C28920 + C28576;
    const double C29034 = C28593 * C29031;
    const double C17092 =
        (2 * C28619 * C28913 + C28619 * (C28913 + C29031 * C28734)) / C28379;
    const double C26767 = (3 * (C28651 + C28656 * C28734) +
                           C28619 * (2 * C29105 + C28619 * C29107)) /
                          C28379;
    const double C28915 = C28524 * C28681;
    const double C29022 = C28593 * C28681;
    const double C29066 = C28619 * C28681;
    const double C330 =
        (3 * (C28676 + C28681 * C28528) +
         C28524 * (2 * C28524 * C28681 +
                   C28524 * (C28681 + (C28561 * C28562 +
                                       C28671 * bs[6] * std::pow(C28522, 6)) *
                                          C28380 * C28528))) /
        C28381;
    const double C828 =
        (ae * (C28600 + C28605 * C28528) + be * (C28651 + C28656 * C28528) +
         C28593 * (C28676 + C28681 * C28528)) /
        C28381;
    const double C832 =
        (C28524 * C28676 + ae * (C28593 * C28607 + C28545 * be) +
         be * (C28593 * C28658 + C28545 * ae) +
         C28593 * (ae * C28607 + be * C28658 + C28593 * C28524 * C28681)) /
        C28381;
    const double C833 =
        (C28676 + C28681 * C28528 + ae * (C28593 * C28616 + C28574 * be) +
         be * (C28593 * C28667 + C28574 * ae) +
         C28593 * (ae * C28616 + be * C28667 +
                   C28593 * (C28681 + (C28561 * C28562 +
                                       C28671 * bs[6] * std::pow(C28522, 6)) *
                                          C28380 * C28528))) /
        C28381;
    const double C1269 = (C28619 * (C28676 + C28681 * C28528)) / C28381;
    const double C1273 = (C28524 * C28676 + C28524 * C28681 * C28734) / C28381;
    const double C1274 =
        (C28676 + C28681 * C28528 +
         (C28681 + (C28561 * C28562 + C28671 * bs[6] * std::pow(C28522, 6)) *
                       C28380 * C28528) *
             C28734) /
        C28381;
    const double C1737 =
        (ae * (2 * C28607 + C28524 * C28616) +
         be * (2 * C28658 + C28524 * C28667) +
         C28593 * (2 * C28524 * C28681 +
                   C28524 * (C28681 + (C28561 * C28562 +
                                       C28671 * bs[6] * std::pow(C28522, 6)) *
                                          C28380 * C28528))) /
        C28381;
    const double C2259 =
        (C28619 * (2 * C28524 * C28681 +
                   C28524 * (C28681 + (C28561 * C28562 +
                                       C28671 * bs[6] * std::pow(C28522, 6)) *
                                          C28380 * C28528))) /
        C28381;
    const double C2784 = (ae * C28619 * C28607 + be * C28619 * C28658 +
                          C28593 * C28619 * C28524 * C28681) /
                         C28381;
    const double C2785 = (ae * C28619 * C28616 + be * C28619 * C28667 +
                          C28593 * C28619 *
                              (C28681 + (C28561 * C28562 +
                                         C28671 * bs[6] * std::pow(C28522, 6)) *
                                            C28380 * C28528)) /
                         C28381;
    const double C3845 =
        (2 * (ae * C28600 + be * C28651 + C28593 * C28676) +
         ae * (C28600 + C28593 * C28912 + C28910 * be) +
         be * (C28651 + C28593 * C28913 + C28910 * ae) +
         C28593 * (C28676 + ae * C28912 + be * C28913 +
                   C28593 * (C28608 + C28659 + C28593 * C28681))) /
        C28381;
    const double C4362 =
        (ae * (C28600 + C28605 * C28734) + be * (C28651 + C28656 * C28734) +
         C28593 * (C28676 + C28681 * C28734)) /
        C28381;
    const double C6239 =
        (C28619 * C28676 + ae * C28619 * C28912 + be * C28619 * C28913 +
         C28593 * (ae * C28619 * C28605 + be * C28619 * C28656 +
                   C28593 * C28619 * C28681)) /
        C28381;
    const double C7812 =
        (2 * C28619 * C28676 + C28619 * (C28676 + C28681 * C28734)) / C28381;
    const double C14298 =
        (C28676 + C28681 * C28734 + ae * (C28912 + C29028 * C28734) +
         be * (C28913 + C29031 * C28734) +
         C28593 * (ae * (C28605 + C28612 * C28734) +
                   be * (C28656 + C28663 * C28734) +
                   C28593 * (C28681 + (C28561 * C28562 +
                                       C28671 * bs[6] * std::pow(C28522, 6)) *
                                          C28380 * C28734))) /
        C28381;
    const double C971 =
        (C28727 + C28730 * C28528 + be * C28593 * C28718 +
         C28593 *
             (be * C28718 + C28593 * (C28730 + std::pow(C28522, 6) * bs[6] *
                                                   C28724 * C28528))) /
        C28381;
    const double C1909 =
        (be * (2 * C28709 + C28524 * C28718) +
         C28593 * (2 * C28524 * C28730 +
                   C28524 * (C28730 +
                             std::pow(C28522, 6) * bs[6] * C28724 * C28528))) /
        C28381;
    const double C2947 =
        (ae * (C28593 * C28616 + C28574 * be) +
         C28619 *
             (be * C28718 + C28593 * (C28730 + std::pow(C28522, 6) * bs[6] *
                                                   C28724 * C28528))) /
        C28381;
    const double C447 = (3 * (C28702 + C28707 * C28528) +
                         C28524 * (2 * C28709 + C28524 * C28718)) /
                        C28379;
    const double C921 = (C28702 + C28707 * C28528 + C28718 * C28671) / C28379;
    const double C1362 =
        (C28702 + C28707 * C28528 + C28619 * (C28619 * C28718 + C28574 * ae) +
         C28619 * C28574 * ae) /
        C28379;
    const double C1857 = (C28593 * (2 * C28709 + C28524 * C28718)) / C28379;
    const double C2379 = (C28619 * (2 * C28709 + C28524 * C28718) +
                          (2 * C28545 + C28524 * C28574) * ae) /
                         C28379;
    const double C2891 =
        (C28619 * C28593 * C28718 + C28593 * C28574 * ae) / C28379;
    const double C4467 =
        (C28593 * C28709 + C28619 * (C28619 * C28961 + C28917 * ae) +
         C28619 * C28917 * ae) /
        C28379;
    const double C29007 = C29005 + C28576;
    const double C14001 = (3 * (C28702 + C28707 * C28671) +
                           C28593 * (2 * C28958 + C28593 * C29049)) /
                          C28379;
    const double C14376 =
        (C28702 + C28707 * C28671 + C28619 * (C28619 * C29049 + C29030 * ae) +
         C28619 * C29030 * ae) /
        C28379;
    const double C15776 = (C28619 * (2 * C28958 + C28593 * C29049) +
                           (2 * C28910 + C28593 * C29030) * ae) /
                          C28379;
    const double C29093 = C29091 + C29032;
    const double C29134 = C28619 * C29131;
    const double C28935 = C28524 * C28744;
    const double C29086 = C28593 * C28744;
    const double C29122 = C28619 * C28744;
    const double C549 =
        (3 * (C28739 + C28744 * C28528) +
         C28524 * (2 * C28524 * C28744 +
                   C28524 * (C28744 + (C28561 * C28562 +
                                       C28734 * bs[6] * std::pow(C28522, 6)) *
                                          C28380 * C28528))) /
        C28381;
    const double C1010 = (C28593 * (C28739 + C28744 * C28528)) / C28381;
    const double C1014 = (C28524 * C28739 + C28524 * C28744 * C28671) / C28381;
    const double C1015 =
        (C28739 + C28744 * C28528 +
         (C28744 + (C28561 * C28562 + C28734 * bs[6] * std::pow(C28522, 6)) *
                       C28380 * C28528) *
             C28671) /
        C28381;
    const double C1451 =
        (ae * (C28626 + C28631 * C28528) + be * (C28702 + C28707 * C28528) +
         C28619 * (C28739 + C28744 * C28528)) /
        C28381;
    const double C1455 =
        (C28524 * C28739 + ae * (C28619 * C28633 + C28545 * be) +
         be * (C28619 * C28709 + C28545 * ae) +
         C28619 * (ae * C28633 + be * C28709 + C28619 * C28524 * C28744)) /
        C28381;
    const double C1456 =
        (C28739 + C28744 * C28528 + ae * (C28619 * C28642 + C28574 * be) +
         be * (C28619 * C28718 + C28574 * ae) +
         C28619 * (ae * C28642 + be * C28718 +
                   C28619 * (C28744 + (C28561 * C28562 +
                                       C28734 * bs[6] * std::pow(C28522, 6)) *
                                          C28380 * C28528))) /
        C28381;
    const double C1964 =
        (C28593 * (2 * C28524 * C28744 +
                   C28524 * (C28744 + (C28561 * C28562 +
                                       C28734 * bs[6] * std::pow(C28522, 6)) *
                                          C28380 * C28528))) /
        C28381;
    const double C2486 =
        (ae * (2 * C28633 + C28524 * C28642) +
         be * (2 * C28709 + C28524 * C28718) +
         C28619 * (2 * C28524 * C28744 +
                   C28524 * (C28744 + (C28561 * C28562 +
                                       C28734 * bs[6] * std::pow(C28522, 6)) *
                                          C28380 * C28528))) /
        C28381;
    const double C2999 = (ae * C28593 * C28633 + be * C28593 * C28709 +
                          C28619 * C28593 * C28524 * C28744) /
                         C28381;
    const double C3000 = (ae * C28593 * C28642 + be * C28593 * C28718 +
                          C28619 * C28593 *
                              (C28744 + (C28561 * C28562 +
                                         C28734 * bs[6] * std::pow(C28522, 6)) *
                                            C28380 * C28528)) /
                         C28381;
    const double C4069 =
        (2 * C28593 * C28739 + C28593 * (C28739 + C28744 * C28671)) / C28381;
    const double C4572 =
        (C28593 * C28739 + ae * (C28619 * C28957 + C28910 * be) +
         be * (C28619 * C28958 + C28910 * ae) +
         C28619 * (ae * C28957 + be * C28958 + C28619 * C28593 * C28744)) /
        C28381;
    const double C6519 =
        (ae * (C28626 + C28631 * C28671) + be * (C28702 + C28707 * C28671) +
         C28619 * (C28739 + C28744 * C28671)) /
        C28381;
    const double C8061 =
        (2 * (ae * C28626 + be * C28702 + C28619 * C28739) +
         ae * (C28626 + C28619 * C29000 + C28998 * be) +
         be * (C28702 + C28619 * C29001 + C28998 * ae) +
         C28619 * (C28739 + ae * C29000 + be * C29001 +
                   C28619 * (C28634 + C28710 + C28619 * C28744))) /
        C28381;
    const double C14090 =
        (3 * (C28739 + C28744 * C28671) +
         C28593 * (2 * C28593 * C28744 +
                   C28593 * (C28744 + (C28561 * C28562 +
                                       C28734 * bs[6] * std::pow(C28522, 6)) *
                                          C28380 * C28671))) /
        C28381;
    const double C14455 =
        (C28739 + C28744 * C28671 + ae * (C28619 * C29043 + C29030 * be) +
         be * (C28619 * C29049 + C29030 * ae) +
         C28619 * (ae * C29043 + be * C29049 +
                   C28619 * (C28744 + (C28561 * C28562 +
                                       C28734 * bs[6] * std::pow(C28522, 6)) *
                                          C28380 * C28671))) /
        C28381;
    const double C15883 =
        (ae * (2 * C28957 + C28593 * C29043) +
         be * (2 * C28958 + C28593 * C29049) +
         C28619 * (2 * C28593 * C28744 +
                   C28593 * (C28744 + (C28561 * C28562 +
                                       C28734 * bs[6] * std::pow(C28522, 6)) *
                                          C28380 * C28671))) /
        C28381;
    const double C8846 = C2092 - C2093;
    const double C8844 = C2093 - C2092;
    const double C26682 = C7634 - C7633;
    const double C161 =
        (3 * (C28604 + ae * C28607 + C28524 * C28615) +
         ae * (2 * C28607 + C28524 * C28616) +
         C28524 *
             (2 * C28615 + ae * C28616 +
              C28524 * (C28611 + ae * C28524 * C28612 +
                        C28524 * (ae * C28612 + C28524 * std::pow(C28522, 6) *
                                                    bs[6] * C28599)))) /
        C28381;
    const double C686 = (be * (C28537 + C28524 * C28556 + C28545 * ae) +
                         C28593 * (C28604 + ae * C28607 + C28524 * C28615)) /
                        C28381;
    const double C688 = (ae * C28600 + C28524 * C28604 + be * C28593 * C28556 +
                         C28593 * (be * C28556 + C28593 * C28615)) /
                        C28381;
    const double C1127 =
        (C28619 * (C28604 + ae * C28607 + C28524 * C28615)) / C28381;
    const double C1129 =
        (ae * C28600 + C28524 * C28604 + C28615 * C28734) / C28381;
    const double C1130 =
        (C28604 + ae * C28607 + C28524 * C28615 +
         (C28611 + ae * C28524 * C28612 +
          C28524 *
              (ae * C28612 + C28524 * std::pow(C28522, 6) * bs[6] * C28599)) *
             C28734) /
        C28381;
    const double C2088 =
        (C28619 *
         (2 * C28615 + ae * C28616 +
          C28524 * (C28611 + ae * C28524 * C28612 +
                    C28524 * (ae * C28612 + C28524 * std::pow(C28522, 6) *
                                                bs[6] * C28599)))) /
        C28381;
    const double C2619 = (C28619 * (be * C28556 + C28593 * C28615)) / C28381;
    const double C3658 =
        (2 * (be * C28556 + C28593 * C28615) + be * (C28556 + C28582 * C28671) +
         C28593 *
             (C28615 + be * C28593 * C28582 +
              C28593 * (be * C28582 +
                        C28593 * (ae * C28612 + C28524 * std::pow(C28522, 6) *
                                                    bs[6] * C28599)))) /
        C28381;
    const double C4203 =
        (be * C28556 + C28593 * C28615 +
         (be * C28582 + C28593 * (ae * C28612 + C28524 * std::pow(C28522, 6) *
                                                    bs[6] * C28599)) *
             C28734) /
        C28381;
    const double C7625 =
        (2 * C28619 * C28615 +
         C28619 * (C28615 + (ae * C28612 +
                             C28524 * std::pow(C28522, 6) * bs[6] * C28599) *
                                C28734)) /
        C28381;
    const double C13778 =
        (3 * (C28604 + be * C28941 + C28593 * C29012) +
         be * (2 * C28941 + C28593 * C29013) +
         C28593 *
             (2 * C29012 + be * C29013 +
              C28593 * (C28611 + be * C28593 * C28575 +
                        C28593 * (be * C28575 + C28593 * std::pow(C28522, 6) *
                                                    bs[6] * C28599)))) /
        C28381;
    const double C14179 =
        (C28604 + be * C28941 + C28593 * C29012 +
         (C28611 + be * C28593 * C28575 +
          C28593 *
              (be * C28575 + C28593 * std::pow(C28522, 6) * bs[6] * C28599)) *
             C28734) /
        C28381;
    const double C15505 =
        (C28619 *
         (2 * C29012 + be * C29013 +
          C28593 * (C28611 + be * C28593 * C28575 +
                    C28593 * (be * C28575 + C28593 * std::pow(C28522, 6) *
                                                bs[6] * C28599)))) /
        C28381;
    const double C16973 =
        (2 * C28619 * C29012 +
         C28619 * (C29012 + (be * C28575 +
                             C28593 * std::pow(C28522, 6) * bs[6] * C28599) *
                                C28734)) /
        C28381;
    const double C286 =
        (3 * (C28655 + be * C28658 + C28524 * C28666) +
         be * (2 * C28658 + C28524 * C28667) +
         C28524 *
             (2 * C28666 + be * C28667 +
              C28524 * (C28662 + be * C28524 * C28663 +
                        C28524 * (be * C28663 + C28524 * std::pow(C28522, 6) *
                                                    bs[6] * C28650)))) /
        C28381;
    const double C786 = (ae * (C28536 + C28524 * C28555 + C28545 * be) +
                         C28593 * (C28655 + be * C28658 + C28524 * C28666)) /
                        C28381;
    const double C788 = (be * C28651 + C28524 * C28655 + ae * C28593 * C28555 +
                         C28593 * (ae * C28555 + C28593 * C28666)) /
                        C28381;
    const double C1227 =
        (C28619 * (C28655 + be * C28658 + C28524 * C28666)) / C28381;
    const double C1229 =
        (be * C28651 + C28524 * C28655 + C28666 * C28734) / C28381;
    const double C1230 =
        (C28655 + be * C28658 + C28524 * C28666 +
         (C28662 + be * C28524 * C28663 +
          C28524 *
              (be * C28663 + C28524 * std::pow(C28522, 6) * bs[6] * C28650)) *
             C28734) /
        C28381;
    const double C2208 =
        (C28619 *
         (2 * C28666 + be * C28667 +
          C28524 * (C28662 + be * C28524 * C28663 +
                    C28524 * (be * C28663 + C28524 * std::pow(C28522, 6) *
                                                bs[6] * C28650)))) /
        C28381;
    const double C2731 =
        (ae * C28619 * C28555 + C28593 * C28619 * C28666) / C28381;
    const double C3778 =
        (2 * (ae * C28555 + C28593 * C28666) + ae * (C28555 + C28581 * C28671) +
         C28593 *
             (C28666 + ae * C28593 * C28581 +
              C28593 * (ae * C28581 +
                        C28593 * (be * C28663 + C28524 * std::pow(C28522, 6) *
                                                    bs[6] * C28650)))) /
        C28381;
    const double C4311 =
        (ae * (C28555 + C28581 * C28734) +
         C28593 * (C28666 + (be * C28663 +
                             C28524 * std::pow(C28522, 6) * bs[6] * C28650) *
                                C28734)) /
        C28381;
    const double C7745 =
        (2 * C28619 * C28666 +
         C28619 * (C28666 + (be * C28663 +
                             C28524 * std::pow(C28522, 6) * bs[6] * C28650) *
                                C28734)) /
        C28381;
    const double C13867 =
        (3 * (C28655 + ae * C28951 + C28593 * C29018) +
         ae * (2 * C28951 + C28593 * C29019) +
         C28593 *
             (2 * C29018 + ae * C29019 +
              C28593 * (C28662 + ae * C28593 * C28572 +
                        C28593 * (ae * C28572 + C28593 * std::pow(C28522, 6) *
                                                    bs[6] * C28650)))) /
        C28381;
    const double C4798 = C1630 - C1631;
    const double C4796 = C1631 - C1630;
    const double C13821 = C3721 - C3720;
    const double C224 =
        (3 * (C28630 + ae * C28633 + C28524 * C28641) +
         ae * (2 * C28633 + C28524 * C28642) +
         C28524 *
             (2 * C28641 + ae * C28642 +
              C28524 * (C28637 + ae * C28524 * C28638 +
                        C28524 * (ae * C28638 + C28524 * std::pow(C28522, 6) *
                                                    bs[6] * C28625)))) /
        C28381;
    const double C736 =
        (C28593 * (C28630 + ae * C28633 + C28524 * C28641)) / C28381;
    const double C738 =
        (ae * C28626 + C28524 * C28630 + C28641 * C28671) / C28381;
    const double C739 = (C28630 + ae * C28633 + C28524 * C28641 +
                         (C28637 + ae * C28524 * C28638 +
                          C28524 * (ae * C28638 + C28524 * std::pow(C28522, 6) *
                                                      bs[6] * C28625)) *
                             C28671) /
                        C28381;
    const double C1177 = (be * (C28537 + C28524 * C28556 + C28545 * ae) +
                          C28619 * (C28630 + ae * C28633 + C28524 * C28641)) /
                         C28381;
    const double C1179 = (ae * C28626 + C28524 * C28630 + be * C28619 * C28556 +
                          C28619 * (be * C28556 + C28619 * C28641)) /
                         C28381;
    const double C1626 =
        (C28593 *
         (2 * C28641 + ae * C28642 +
          C28524 * (C28637 + ae * C28524 * C28638 +
                    C28524 * (ae * C28638 + C28524 * std::pow(C28522, 6) *
                                                bs[6] * C28625)))) /
        C28381;
    const double C2675 =
        (be * C28593 * C28556 + C28619 * C28593 * C28641) / C28381;
    const double C3712 =
        (2 * C28593 * C28641 +
         C28593 * (C28641 + (ae * C28638 +
                             C28524 * std::pow(C28522, 6) * bs[6] * C28625) *
                                C28671)) /
        C28381;
    const double C6090 =
        (be * (C28556 + C28582 * C28671) +
         C28619 * (C28641 + (ae * C28638 +
                             C28524 * std::pow(C28522, 6) * bs[6] * C28625) *
                                C28671)) /
        C28381;
    const double C7691 =
        (2 * (be * C28556 + C28619 * C28641) + be * (C28556 + C28582 * C28734) +
         C28619 *
             (C28641 + be * C28619 * C28582 +
              C28619 * (be * C28582 +
                        C28619 * (ae * C28638 + C28524 * std::pow(C28522, 6) *
                                                    bs[6] * C28625)))) /
        C28381;
    const double C26728 =
        (3 * (C28630 + be * C29097 + C28619 * C29100) +
         be * (2 * C29097 + C28619 * C29101) +
         C28619 *
             (2 * C29100 + be * C29101 +
              C28619 * (C28637 + be * C28619 * C28575 +
                        C28619 * (be * C28575 + C28619 * std::pow(C28522, 6) *
                                                    bs[6] * C28625)))) /
        C28381;
    const double C5020 = C1804 - C1805;
    const double C5019 = C1805 - C1804;
    const double C13961 = C3903 - C3902;
    const double C13959 =
        (3 * (C28690 + ae * C28957 + C28593 * C29042) +
         ae * (2 * C28957 + C28593 * C29043) +
         C28593 *
             (2 * C29042 + ae * C29043 +
              C28593 * (C28693 + ae * C28593 * C28638 +
                        C28593 * (ae * C28638 + C28593 * std::pow(C28522, 6) *
                                                    bs[6] * C28687)))) /
        C28381;
    const double C15723 =
        (2 * (ae * C29000 + C28593 * C29069) +
         ae * (C28619 * C29043 + C29030 * be) +
         C28593 *
             (C29069 + ae * (C28619 * C28593 * C28638 + C29029) +
              C28593 * (ae * (C28619 * C28638 + C28566) +
                        C28593 * (be * C28663 + C28619 * std::pow(C28522, 6) *
                                                    bs[6] * C28687)))) /
        C28381;
    const double C17235 =
        (ae * (2 * C29000 +
               C28619 * (C28631 + C28619 * (C28619 * C28638 + C28566) +
                         C28619 * C28560 * be) +
               (C28539 + C28560 * C28734) * be) +
         C28593 *
             (2 * C29069 + be * (C28656 + C28663 * C28734) +
              C28619 * (C28693 + be * C28619 * C28663 +
                        C28619 * (be * C28663 + C28619 * std::pow(C28522, 6) *
                                                    bs[6] * C28687)))) /
        C28381;
    const double C26865 =
        (3 * (C28690 + be * C29105 + C28619 * C29069) +
         be * (2 * C29105 + C28619 * C29107) +
         C28619 *
             (2 * C29069 + be * C29107 +
              C28619 * (C28693 + be * C28619 * C28663 +
                        C28619 * (be * C28663 + C28619 * std::pow(C28522, 6) *
                                                    bs[6] * C28687)))) /
        C28381;
    const double C452 =
        (3 * (C28706 + be * C28709 + C28524 * C28717) +
         be * (2 * C28709 + C28524 * C28718) +
         C28524 *
             (2 * C28717 + be * C28718 +
              C28524 * (C28713 + be * C28524 * C28714 +
                        C28524 * (be * C28714 + C28524 * std::pow(C28522, 6) *
                                                    bs[6] * C28701)))) /
        C28381;
    const double C924 =
        (C28593 * (C28706 + be * C28709 + C28524 * C28717)) / C28381;
    const double C926 =
        (be * C28702 + C28524 * C28706 + C28717 * C28671) / C28381;
    const double C927 = (C28706 + be * C28709 + C28524 * C28717 +
                         (C28713 + be * C28524 * C28714 +
                          C28524 * (be * C28714 + C28524 * std::pow(C28522, 6) *
                                                      bs[6] * C28701)) *
                             C28671) /
                        C28381;
    const double C1365 = (ae * (C28536 + C28524 * C28555 + C28545 * be) +
                          C28619 * (C28706 + be * C28709 + C28524 * C28717)) /
                         C28381;
    const double C1367 = (be * C28702 + C28524 * C28706 + ae * C28619 * C28555 +
                          C28619 * (ae * C28555 + C28619 * C28717)) /
                         C28381;
    const double C1858 =
        (C28593 *
         (2 * C28717 + be * C28718 +
          C28524 * (C28713 + be * C28524 * C28714 +
                    C28524 * (be * C28714 + C28524 * std::pow(C28522, 6) *
                                                bs[6] * C28701)))) /
        C28381;
    const double C2893 =
        (ae * C28593 * C28555 + C28619 * C28593 * C28717) / C28381;
    const double C3958 =
        (2 * C28593 * C28717 +
         C28593 * (C28717 + (be * C28714 +
                             C28524 * std::pow(C28522, 6) * bs[6] * C28701) *
                                C28671)) /
        C28381;
    const double C6380 =
        (ae * (C28555 + C28581 * C28671) +
         C28619 * (C28717 + (be * C28714 +
                             C28524 * std::pow(C28522, 6) * bs[6] * C28701) *
                                C28671)) /
        C28381;
    const double C7944 =
        (2 * (ae * C28555 + C28619 * C28717) + ae * (C28555 + C28581 * C28734) +
         C28619 *
             (C28717 + ae * C28619 * C28581 +
              C28619 * (ae * C28581 +
                        C28619 * (be * C28714 + C28524 * std::pow(C28522, 6) *
                                                    bs[6] * C28701)))) /
        C28381;
    const double C26905 =
        (3 * (C28706 + ae * C29109 + C28619 * C29112) +
         ae * (2 * C29109 + C28619 * C29113) +
         C28619 *
             (2 * C29112 + ae * C29113 +
              C28619 * (C28713 + ae * C28619 * C28572 +
                        C28619 * (ae * C28572 + C28619 * std::pow(C28522, 6) *
                                                    bs[6] * C28701)))) /
        C28381;
    const double C9270 = C2433 - C2434;
    const double C9269 = C2434 - C2433;
    const double C26949 = C8009 - C8008;
    const double C14051 =
        (3 * (C28727 + be * C28958 + C28593 * C29048) +
         be * (2 * C28958 + C28593 * C29049) +
         C28593 *
             (2 * C29048 + be * C29049 +
              C28593 * (C28730 + be * C28593 * C28714 +
                        C28593 * (be * C28714 + C28593 * std::pow(C28522, 6) *
                                                    bs[6] * C28724)))) /
        C28381;
    const double C17344 =
        (2 * (ae * C28912 + C28619 * C29048) + ae * (C28912 + C29028 * C28734) +
         C28619 *
             (C29048 + ae * C28619 * C29028 +
              C28619 * (ae * C29028 +
                        C28619 * (be * C28714 + C28593 * std::pow(C28522, 6) *
                                                    bs[6] * C28724)))) /
        C28381;
    const double C26947 =
        (3 * (C28727 + ae * C29115 + C28619 * C29118) +
         ae * (2 * C29115 + C28619 * C29119) +
         C28619 *
             (2 * C29118 + ae * C29119 +
              C28619 * (C28730 + ae * C28619 * C28612 +
                        C28619 * (ae * C28612 + C28619 * std::pow(C28522, 6) *
                                                    bs[6] * C28724)))) /
        C28381;
    const double C28390 = C28389 / C28379;
    const double C3584 = C3057 * C625;
    const double C3582 = C3057 * C624;
    const double C3794 = C3057 * C782;
    const double C3790 = C3057 * C620;
    const double C3787 = C3057 * C779;
    const double C3783 = C3057 * C617;
    const double C3966 = C3057 * C920;
    const double C3963 = C3057 * C917;
    const double C4871 = C3057 * C780;
    const double C4867 = C3057 * C616;
    const double C5089 = C3057 * C918;
    const double C6172 = C3057 * C2728;
    const double C6168 = C3057 * C2554;
    const double C6384 = C3057 * C2890;
    const double C7551 = C3057 * C1066;
    const double C7549 = C3057 * C1065;
    const double C7761 = C3057 * C1223;
    const double C7757 = C3057 * C1061;
    const double C7754 = C3057 * C1220;
    const double C7750 = C3057 * C1058;
    const double C7952 = C3057 * C1361;
    const double C7949 = C3057 * C1358;
    const double C8993 = C3057 * C1221;
    const double C8989 = C3057 * C1057;
    const double C9201 = C3057 * C1359;
    const double C13726 = C13361 * C3572;
    const double C13724 = C13361 * C3571;
    const double C13722 = C13361 * C629;
    const double C13720 = C13361 * C628;
    const double C13718 = C13361 * C627;
    const double C13716 = C13361 * C626;
    const double C13877 = C13361 * C3569;
    const double C13876 = C13361 * C781;
    const double C13874 = C13361 * C619;
    const double C13872 = C13361 * C778;
    const double C13870 = C13361 * C618;
    const double C14009 = C13361 * C3955;
    const double C14008 = C13361 * C919;
    const double C14005 = C13361 * C916;
    const double C14509 = C13361 * C625;
    const double C14507 = C13361 * C624;
    const double C14679 = C13361 * C782;
    const double C14677 = C13361 * C620;
    const double C14675 = C13361 * C779;
    const double C14673 = C13361 * C617;
    const double C14833 = C13361 * C920;
    const double C14831 = C13361 * C917;
    const double C15445 = C13361 * C2557;
    const double C15443 = C13361 * C2556;
    const double C15441 = C13361 * C5932;
    const double C15439 = C13361 * C5931;
    const double C15619 = C13361 * C5929;
    const double C15617 = C13361 * C2727;
    const double C15615 = C13361 * C2553;
    const double C15781 = C13361 * C6377;
    const double C15779 = C13361 * C2889;
    const double C16912 = C13361 * C1070;
    const double C16910 = C13361 * C1069;
    const double C16908 = C13361 * C4145;
    const double C16906 = C13361 * C4144;
    const double C16904 = C13361 * C1068;
    const double C16902 = C13361 * C1067;
    const double C17103 = C13361 * C4142;
    const double C17101 = C13361 * C1222;
    const double C17099 = C13361 * C1060;
    const double C17098 = C13361 * C1219;
    const double C17096 = C13361 * C1059;
    const double C17293 = C13361 * C4466;
    const double C17291 = C13361 * C1360;
    const double C17290 = C13361 * C1357;
    const double C17680 = C13361 * C2728;
    const double C17678 = C13361 * C2554;
    const double C17880 = C13361 * C2890;
    const double C18082 = C13361 * C1066;
    const double C18080 = C13361 * C1065;
    const double C18287 = C13361 * C1220;
    const double C18285 = C13361 * C1058;
    const double C18487 = C13361 * C1358;
    const double C26636 = C13361 * C7539;
    const double C26634 = C13361 * C7538;
    const double C26774 = C13361 * C7742;
    const double C26772 = C13361 * C7536;
    const double C27650 = C13361 * C1223;
    const double C27648 = C13361 * C1061;
    const double C27804 = C13361 * C1361;
    const double C28479 = C28478 / C28379;
    const double C3299 = C3292 - C3293;
    const double C3296 = C3280 - C3281;
    const double C4948 = C4943 - C4944;
    const double C5580 = C5575 - C5576;
    const double C23844 = C23837 - C23838;
    const double C23841 = C23825 - C23826;
    const double C25607 = C25599 - C25600;
    const double C3298 = C3288 - C3289;
    const double C3297 = C3284 - C3285;
    const double C23842 = C23829 - C23830;
    const double C10257 = C10250 - C10251;
    const double C10254 = C10238 - C10239;
    const double C11799 = C11794 - C11795;
    const double C12425 = C12420 - C12421;
    const double C17177 = C17170 - C17171;
    const double C17174 = C17158 - C17159;
    const double C18981 = C18973 - C18974;
    const double C10256 = C10246 - C10247;
    const double C10255 = C10242 - C10243;
    const double C17175 = C17162 - C17163;
    const double C347 = C344 - C334;
    const double C7831 = C7828 - C7817;
    const double C28509 = C28508 / C28379;
    const double C7028 = C7021 - C7022;
    const double C7025 = C7009 - C7010;
    const double C8692 = C8687 - C8688;
    const double C9346 = C9341 - C9342;
    const double C16839 = C16832 - C16833;
    const double C16836 = C16820 - C16821;
    const double C19270 = C19265 - C19266;
    const double C7027 = C7017 - C7018;
    const double C7026 = C7013 - C7014;
    const double C16838 = C16828 - C16829;
    const double C16837 = C16824 - C16825;
    const double C19774 = C19767 - C19768;
    const double C19771 = C19755 - C19756;
    const double C21354 = C21349 - C21350;
    const double C22002 = C21997 - C21998;
    const double C23550 = C23543 - C23544;
    const double C23547 = C23531 - C23532;
    const double C25894 = C25889 - C25890;
    const double C19773 = C19763 - C19764;
    const double C19772 = C19759 - C19760;
    const double C23549 = C23539 - C23540;
    const double C23548 = C23535 - C23536;
    const double C566 = C563 - C553;
    const double C4087 = C4084 - C4074;
    const double C173 = C151 * C105;
    const double C236 = C214 * C105;
    const double C1574 = C151 * C623;
    const double C1634 = C214 * C623;
    const double C3126 = C3110 * C623;
    const double C4647 = C3057 * C623;
    const double C10084 = C10068 * C623;
    const double C11502 = C10015 * C623;
    const double C3588 = C3057 * C631;
    const double C3724 = C214 * C631;
    const double C4727 = C3110 * C631;
    const double C10538 = C10015 * C631;
    const double C11582 = C10068 * C631;
    const double C14513 = C13361 * C631;
    const double C2096 = C151 * C1064;
    const double C2156 = C214 * C1064;
    const double C6697 = C6681 * C1064;
    const double C8769 = C3057 * C1064;
    const double C19443 = C19427 * C1064;
    const double C21431 = C10015 * C1064;
    const double C7555 = C3057 * C1072;
    const double C7637 = C151 * C1072;
    const double C8919 = C6681 * C1072;
    const double C20293 = C10015 * C1072;
    const double C21577 = C19427 * C1072;
    const double C27493 = C13361 * C1072;
    const double C5367 = C3110 * C2559;
    const double C5437 = C214 * C2559;
    const double C5940 = C3057 * C2559;
    const double C8198 = C151 * C2559;
    const double C8272 = C6681 * C2559;
    const double C12216 = C10068 * C2559;
    const double C12768 = C10015 * C2559;
    const double C17474 = C13361 * C2559;
    const double C20943 = C19427 * C2559;
    const double C13879 = C13361 * C3775;
    const double C13962 = C214 * C3775;
    const double C17105 = C13361 * C4308;
    const double C17168 = C10068 * C4308;
    const double C19055 = C6681 * C4308;
    const double C23835 = C3110 * C4308;
    const double C25681 = C19427 * C4308;
    const double C28163 = C151 * C4308;
    const double C15621 = C13361 * C6161;
    const double C15725 = C214 * C6161;
    const double C16668 = C6681 * C6161;
    const double C18979 = C10068 * C6161;
    const double C23379 = C19427 * C6161;
    const double C25605 = C3110 * C6161;
    const double C26908 = C13361 * C7941;
    const double C26950 = C151 * C7941;
    const double C4085 = C4076 - C4077;
    const double C4947 = C4939 - C4940;
    const double C11798 = C11790 - C11791;
    const double C7829 = C7820 - C7821;
    const double C9345 = C9337 - C9338;
    const double C22001 = C21993 - C21994;
    const double C5579 = C5571 - C5572;
    const double C5860 = C5855 - C5856;
    const double C8410 = C8406 - C8407;
    const double C8691 = C8683 - C8684;
    const double C12424 = C12416 - C12417;
    const double C21353 = C21345 - C21346;
    const double C4645 = C3057 * C622;
    const double C4868 = C29548 * C622;
    const double C11500 = C10015 * C622;
    const double C11719 = C29548 * C622;
    const double C3586 = C3057 * C630;
    const double C3791 = C29548 * C630;
    const double C10536 = C10015 * C630;
    const double C10717 = C29548 * C630;
    const double C14511 = C13361 * C630;
    const double C14678 = C29390 * C630;
    const double C8767 = C3057 * C1063;
    const double C8990 = C29548 * C1063;
    const double C21429 = C10015 * C1063;
    const double C21648 = C29548 * C1063;
    const double C7553 = C3057 * C1071;
    const double C7758 = C29548 * C1071;
    const double C20291 = C10015 * C1071;
    const double C20472 = C29548 * C1071;
    const double C27491 = C13361 * C1071;
    const double C27649 = C29390 * C1071;
    const double C5938 = C3057 * C2558;
    const double C6169 = C29548 * C2558;
    const double C12766 = C10015 * C2558;
    const double C12981 = C29548 * C2558;
    const double C17472 = C13361 * C2558;
    const double C17679 = C29390 * C2558;
    const double C17353 = C29555 * C4520;
    const double C24010 = C29555 * C4520;
    const double C28320 = C29484 * C4520;
    const double C19194 = C29555 * C6451;
    const double C25818 = C29555 * C6451;
    const double C16986 = C29555 * C4200;
    const double C17166 = C10068 * C4200;
    const double C23670 = C29555 * C4200;
    const double C23833 = C3110 * C4200;
    const double C28007 = C29484 * C4200;
    const double C28161 = C151 * C4200;
    const double C18758 = C29555 * C6017;
    const double C18977 = C10068 * C6017;
    const double C25388 = C29555 * C6017;
    const double C25603 = C3110 * C6017;
    const double C3585 = C29548 * C635;
    const double C4644 = C3051 * C635;
    const double C10535 = C29548 * C635;
    const double C11499 = C10009 * C635;
    const double C14510 = C29390 * C635;
    const double C3593 = C3051 * C637;
    const double C10543 = C10009 * C637;
    const double C13723 = C29390 * C637;
    const double C7552 = C29548 * C1076;
    const double C8766 = C3051 * C1076;
    const double C18083 = C29390 * C1076;
    const double C20290 = C29548 * C1076;
    const double C21428 = C10009 * C1076;
    const double C7560 = C3051 * C1078;
    const double C16913 = C29390 * C1078;
    const double C20298 = C10009 * C1078;
    const double C5945 = C3051 * C2562;
    const double C12773 = C10009 * C2562;
    const double C15446 = C29390 * C2562;
    const double C343 = C29484 * C329;
    const double C1746 = C29484 * C829;
    const double C3287 = C29555 * C829;
    const double C4946 = C3053 * C829;
    const double C10245 = C29555 * C829;
    const double C11797 = C10011 * C829;
    const double C2268 = C29484 * C1270;
    const double C5578 = C3053 * C1270;
    const double C12423 = C10011 * C1270;
    const double C7827 = C29484 * C1272;
    const double C17173 = C10011 * C1272;
    const double C23840 = C3053 * C1272;
    const double C9688 = C29484 * C2783;
    const double C17165 = C29555 * C2783;
    const double C18976 = C10011 * C2783;
    const double C23832 = C29555 * C2783;
    const double C25602 = C3053 * C2783;
    const double C562 = C29499 * C548;
    const double C1973 = C29499 * C1011;
    const double C8690 = C6578 * C1011;
    const double C21352 = C19324 * C1011;
    const double C4083 = C29499 * C1013;
    const double C16835 = C6578 * C1013;
    const double C23546 = C19324 * C1013;
    const double C2495 = C29499 * C1452;
    const double C7016 = C29557 * C1452;
    const double C9344 = C6578 * C1452;
    const double C19762 = C29557 * C1452;
    const double C22000 = C19324 * C1452;
    const double C6525 = C29499 * C2998;
    const double C16827 = C29557 * C2998;
    const double C19268 = C6578 * C2998;
    const double C23538 = C29557 * C2998;
    const double C25892 = C19324 * C2998;
    const double C19269 = C19261 - C19262;
    const double C25893 = C25885 - C25886;
    const double C499 = C175 * C214;
    const double C348 = C345 - C338;
    const double C349 = C346 - C342;
    const double C1750 = C1748 - C1745;
    const double C1749 = C1747 - C1741;
    const double C2272 = C2270 - C2267;
    const double C2271 = C2269 - C2263;
    const double C26687 = C26681 * C13361;
    const double C7833 = C7830 - C7826;
    const double C9691 = C9690 - C9687;
    const double C26825 = C26824 - C26822;
    const double C398 = C238 * C151;
    const double C567 = C564 - C557;
    const double C568 = C565 - C561;
    const double C1977 = C1975 - C1972;
    const double C1976 = C1974 - C1968;
    const double C13826 = C13820 * C13361;
    const double C4089 = C4086 - C4082;
    const double C2499 = C2497 - C2494;
    const double C2498 = C2496 - C2490;
    const double C6527 = C6526 - C6524;
    const double C14097 = C14096 - C14094;
    const double C15890 = C15889 - C15887;
    const double C404 = C403 * C29484;
    const double C505 = C504 * C29499;
    const double C28588 = C28550 + C28585;
    const double C4257 =
        (C28593 * C28641 + be * C28619 * C28943 +
         C28619 *
             (be * C28943 + C28619 * C28593 *
                                (ae * C28638 + C28524 * std::pow(C28522, 6) *
                                                   bs[6] * C28625))) /
        C28381;
    const double C6020 =
        (C28619 *
         (C28615 + be * C28943 +
          C28593 * (be * C28582 +
                    C28593 * (ae * C28612 + C28524 * std::pow(C28522, 6) *
                                                bs[6] * C28599)))) /
        C28381;
    const double C4147 = (C28593 * C28556 + C28943 * C28734) / C28379;
    const double C28587 = C28549 + C28584;
    const double C4469 =
        (C28593 * C28717 + ae * C28619 * C28953 +
         C28619 *
             (ae * C28953 + C28619 * C28593 *
                                (be * C28714 + C28524 * std::pow(C28522, 6) *
                                                   bs[6] * C28701))) /
        C28381;
    const double C6164 =
        (C28619 * C28666 + ae * C28619 * C28953 +
         C28593 * (ae * C28619 * C28581 +
                   C28593 * C28619 *
                       (be * C28663 +
                        C28524 * std::pow(C28522, 6) * bs[6] * C28650))) /
        C28381;
    const double C4146 = (C28593 * C28555 + C28953 * C28734) / C28379;
    const double C28586 = C28563 + C28583;
    const double C2563 =
        (ae * C28619 * C28593 * C28549 + be * C28619 * C28593 * C28550 +
         C28524 * C28619 * C28854) /
        C28381;
    const double C2564 =
        (C28619 * C28854 + ae * C28619 * C28593 * C28581 +
         be * C28619 * C28593 * C28582 +
         C28524 *
             (ae * C28619 * C28593 * C28572 + be * C28619 * C28593 * C28575 +
              C28524 * C28619 * C28593 *
                  (C28561 * C28562 + C28528 * bs[6] * std::pow(C28522, 6)) *
                  C28380)) /
        C28381;
    const double C3576 =
        (ae * (2 * C28593 * C28549 + C28593 * (C28549 + C28572 * C28671)) +
         be * (2 * C28593 * C28550 + C28593 * (C28550 + C28575 * C28671)) +
         C28524 * (2 * C28854 +
                   C28593 * (C28580 + (C28561 * C28562 +
                                       C28528 * bs[6] * std::pow(C28522, 6)) *
                                          C28380 * C28671))) /
        C28381;
    const double C4148 = (C28593 * C28554 + C28854 * C28734) / C28381;
    const double C4149 =
        (ae * (C28593 * C28549 + C28593 * C28572 * C28734) +
         be * (C28593 * C28550 + C28593 * C28575 * C28734) +
         C28524 * (C28854 + C28593 *
                                (C28561 * C28562 +
                                 C28528 * bs[6] * std::pow(C28522, 6)) *
                                C28380 * C28734)) /
        C28381;
    const double C13714 =
        (3 * (C28554 + C28580 * C28671) +
         C28593 * (2 * C28854 +
                   C28593 * (C28580 + (C28561 * C28562 +
                                       C28528 * bs[6] * std::pow(C28522, 6)) *
                                          C28380 * C28671))) /
        C28381;
    const double C15437 =
        (C28619 * (2 * C28854 +
                   C28593 * (C28580 + (C28561 * C28562 +
                                       C28528 * bs[6] * std::pow(C28522, 6)) *
                                          C28380 * C28671))) /
        C28381;
    const double C16900 =
        (2 * C28619 * C28854 +
         C28619 * (C28854 + C28593 *
                                (C28561 * C28562 +
                                 C28528 * bs[6] * std::pow(C28522, 6)) *
                                C28380 * C28734)) /
        C28381;
    const double C7543 =
        (ae * (2 * C28619 * C28549 + C28619 * (C28549 + C28572 * C28734)) +
         be * (2 * C28619 * C28550 + C28619 * (C28550 + C28575 * C28734)) +
         C28524 * (2 * C28864 +
                   C28619 * (C28580 + (C28561 * C28562 +
                                       C28528 * bs[6] * std::pow(C28522, 6)) *
                                          C28380 * C28734))) /
        C28381;
    const double C26632 =
        (3 * (C28554 + C28580 * C28734) +
         C28619 * (2 * C28864 +
                   C28619 * (C28580 + (C28561 * C28562 +
                                       C28528 * bs[6] * std::pow(C28522, 6)) *
                                          C28380 * C28734))) /
        C28381;
    const double C4648 = C29548 * C634;
    const double C11503 = C29548 * C634;
    const double C3589 = C29548 * C638;
    const double C10539 = C29548 * C638;
    const double C14514 = C29390 * C638;
    const double C8770 = C29548 * C1075;
    const double C21432 = C29548 * C1075;
    const double C7556 = C29548 * C1079;
    const double C20294 = C29548 * C1079;
    const double C27494 = C29390 * C1079;
    const double C13727 = C29390 * C3575;
    const double C15442 = C29390 * C5935;
    const double C26637 = C29390 * C7542;
    const double C4521 =
        (be * C28709 + C28593 * C28931 + ae * C28619 * C28921 +
         C28619 *
             (ae * C28921 +
              C28619 * (be * C28932 + C28593 * C28524 * std::pow(C28522, 6) *
                                          bs[6] * C28724))) /
        C28381;
    const double C6452 =
        (ae * (C28607 + C28593 * C28921 + C28917 * be) +
         C28619 *
             (C28931 + be * C28961 +
              C28593 * (be * C28932 + C28593 * C28524 * std::pow(C28522, 6) *
                                          bs[6] * C28724))) /
        C28381;
    const double C3656 = (2 * (C28593 * C28607 + C28545 * be) +
                          C28593 * (C28607 + C28593 * C28921 + C28917 * be) +
                          (C28545 + C28567 * C28671) * be) /
                         C28379;
    const double C4201 =
        (C28593 * C28607 + C28545 * be + C28921 * C28734) / C28379;
    const double C6018 =
        (C28619 * (C28607 + C28593 * C28921 + C28917 * be)) / C28379;
    const double C29035 = C28605 + C29033;
    const double C7689 = (2 * (C28619 * C28633 + C28545 * be) +
                          C28619 * (C28633 + C28619 * C29006 + C29004 * be) +
                          (C28545 + C28567 * C28734) * be) /
                         C28379;
    const double C17040 = (2 * (C28619 * C28957 + C28910 * be) +
                           C28619 * (C28957 + C28619 * C29092 + C29088 * be) +
                           (C28910 + C29024 * C28734) * be) /
                          C28379;
    const double C29135 = C28631 + C29133;
    const double C3776 = (2 * (C28593 * C28658 + C28545 * ae) +
                          C28593 * (C28658 + C28593 * C28922 + C28917 * ae) +
                          (C28545 + C28567 * C28671) * ae) /
                         C28379;
    const double C4309 =
        (C28593 * C28658 + C28545 * ae + C28922 * C28734) / C28379;
    const double C6162 =
        (C28619 * (C28658 + C28593 * C28922 + C28917 * ae)) / C28379;
    const double C29036 = C28656 + C29034;
    const double C3846 =
        (2 * (ae * C28607 + be * C28658 + C28593 * C28915) +
         ae * (C28607 + C28593 * C28921 + C28917 * be) +
         be * (C28658 + C28593 * C28922 + C28917 * ae) +
         C28593 * (C28915 + ae * C28921 + be * C28922 +
                   C28593 * (ae * C28916 + be * C28918 +
                             C28593 * C28524 *
                                 (C28561 * C28562 +
                                  C28671 * bs[6] * std::pow(C28522, 6)) *
                                 C28380))) /
        C28381;
    const double C4363 =
        (ae * (C28607 + C28916 * C28734) + be * (C28658 + C28918 * C28734) +
         C28593 * (C28915 + C28524 *
                                (C28561 * C28562 +
                                 C28671 * bs[6] * std::pow(C28522, 6)) *
                                C28380 * C28734)) /
        C28381;
    const double C6240 =
        (C28619 * C28915 + ae * C28619 * C28921 + be * C28619 * C28922 +
         C28593 *
             (ae * C28619 * C28916 + be * C28619 * C28918 +
              C28593 * C28619 * C28524 *
                  (C28561 * C28562 + C28671 * bs[6] * std::pow(C28522, 6)) *
                  C28380)) /
        C28381;
    const double C7813 =
        (2 * C28619 * C28915 +
         C28619 * (C28915 + C28524 *
                                (C28561 * C28562 +
                                 C28671 * bs[6] * std::pow(C28522, 6)) *
                                C28380 * C28734)) /
        C28381;
    const double C29027 = C29021 + C29022;
    const double C17156 =
        (ae * (2 * C28619 * C28605 + C28619 * (C28605 + C28612 * C28734)) +
         be * (2 * C28619 * C28656 + C28619 * (C28656 + C28663 * C28734)) +
         C28593 * (2 * C29066 +
                   C28619 * (C28681 + (C28561 * C28562 +
                                       C28671 * bs[6] * std::pow(C28522, 6)) *
                                          C28380 * C28734))) /
        C28381;
    const double C26816 =
        (3 * (C28676 + C28681 * C28734) +
         C28619 * (2 * C29066 +
                   C28619 * (C28681 + (C28561 * C28562 +
                                       C28671 * bs[6] * std::pow(C28522, 6)) *
                                          C28380 * C28734))) /
        C28381;
    const double C1742 = C29484 * C828;
    const double C3291 = C29555 * C828;
    const double C10249 = C29555 * C828;
    const double C4942 = C29555 * C832;
    const double C11793 = C29555 * C832;
    const double C2264 = C29484 * C1269;
    const double C7823 = C29484 * C1273;
    const double C5574 = C29555 * C2784;
    const double C8409 = C29484 * C2784;
    const double C12419 = C29555 * C2784;
    const double C17169 = C29555 * C4362;
    const double C23836 = C29555 * C4362;
    const double C28164 = C29484 * C4362;
    const double C18980 = C29555 * C6239;
    const double C25606 = C29555 * C6239;
    const double C26823 = C29484 * C7812;
    const double C7942 = (2 * (C28619 * C28709 + C28545 * ae) +
                          C28619 * (C28709 + C28619 * C29007 + C29004 * ae) +
                          (C28545 + C28567 * C28734) * ae) /
                         C28379;
    const double C17286 = (2 * (C28619 * C28958 + C28910 * ae) +
                           C28619 * (C28958 + C28619 * C29093 + C29088 * ae) +
                           (C28910 + C29024 * C28734) * ae) /
                          C28379;
    const double C29136 = C28707 + C29134;
    const double C4070 =
        (2 * C28593 * C28935 +
         C28593 * (C28935 + C28524 *
                                (C28561 * C28562 +
                                 C28734 * bs[6] * std::pow(C28522, 6)) *
                                C28380 * C28671)) /
        C28381;
    const double C4573 =
        (C28593 * C28935 + ae * (C28619 * C28960 + C28917 * be) +
         be * (C28619 * C28961 + C28917 * ae) +
         C28619 *
             (ae * C28960 + be * C28961 +
              C28619 * C28593 * C28524 *
                  (C28561 * C28562 + C28734 * bs[6] * std::pow(C28522, 6)) *
                  C28380)) /
        C28381;
    const double C6520 =
        (ae * (C28633 + C28926 * C28671) + be * (C28709 + C28932 * C28671) +
         C28619 * (C28935 + C28524 *
                                (C28561 * C28562 +
                                 C28734 * bs[6] * std::pow(C28522, 6)) *
                                C28380 * C28671)) /
        C28381;
    const double C8062 =
        (2 * (ae * C28633 + be * C28709 + C28619 * C28935) +
         ae * (C28633 + C28619 * C29006 + C29004 * be) +
         be * (C28709 + C28619 * C29007 + C29004 * ae) +
         C28619 * (C28935 + ae * C29006 + be * C29007 +
                   C28619 * (ae * C28926 + be * C28932 +
                             C28619 * C28524 *
                                 (C28561 * C28562 +
                                  C28734 * bs[6] * std::pow(C28522, 6)) *
                                 C28380))) /
        C28381;
    const double C17403 =
        (2 * (ae * C28957 + be * C28958 + C28619 * C29086) +
         ae * (C28957 + C28619 * C29092 + C29088 * be) +
         be * (C28958 + C28619 * C29093 + C29088 * ae) +
         C28619 * (C29086 + ae * C29092 + be * C29093 +
                   C28619 * (ae * C29087 + be * C29089 +
                             C28619 * C28593 *
                                 (C28561 * C28562 +
                                  C28734 * bs[6] * std::pow(C28522, 6)) *
                                 C28380))) /
        C28381;
    const double C29127 = C29121 + C29122;
    const double C1969 = C29499 * C1010;
    const double C4079 = C29499 * C1014;
    const double C2491 = C29499 * C1451;
    const double C7020 = C29557 * C1451;
    const double C19766 = C29557 * C1451;
    const double C9340 = C29557 * C1455;
    const double C21996 = C29557 * C1455;
    const double C5858 = C29499 * C2999;
    const double C8686 = C29557 * C2999;
    const double C21348 = C29557 * C2999;
    const double C14095 = C29499 * C4069;
    const double C19264 = C29557 * C4572;
    const double C25888 = C29557 * C4572;
    const double C15888 = C29499 * C6519;
    const double C16831 = C29557 * C6519;
    const double C23542 = C29557 * C6519;
    const double C26688 = C26682 * C29390;
    const double C1575 = C29484 * C686;
    const double C3127 = C29555 * C686;
    const double C10085 = C29555 * C686;
    const double C4728 = C29555 * C688;
    const double C11583 = C29555 * C688;
    const double C2097 = C29484 * C1127;
    const double C7638 = C29484 * C1129;
    const double C5368 = C29555 * C2619;
    const double C8199 = C29484 * C2619;
    const double C12217 = C29555 * C2619;
    const double C4872 = C29548 * C786;
    const double C11723 = C29548 * C786;
    const double C3795 = C29548 * C788;
    const double C10721 = C29548 * C788;
    const double C14680 = C29390 * C788;
    const double C8994 = C29548 * C1227;
    const double C21652 = C29548 * C1227;
    const double C7762 = C29548 * C1229;
    const double C20476 = C29548 * C1229;
    const double C27651 = C29390 * C1229;
    const double C6173 = C29548 * C2731;
    const double C12985 = C29548 * C2731;
    const double C17681 = C29390 * C2731;
    const double C13827 = C13821 * C29390;
    const double C1635 = C29499 * C736;
    const double C3725 = C29499 * C738;
    const double C2157 = C29499 * C1177;
    const double C6698 = C29557 * C1177;
    const double C19444 = C29557 * C1177;
    const double C8920 = C29557 * C1179;
    const double C21578 = C29557 * C1179;
    const double C5438 = C29499 * C2675;
    const double C8273 = C29557 * C2675;
    const double C20944 = C29557 * C2675;
    const double C5090 = C29548 * C924;
    const double C11939 = C29548 * C924;
    const double C3967 = C29548 * C926;
    const double C10879 = C29548 * C926;
    const double C14834 = C29390 * C926;
    const double C9202 = C29548 * C1365;
    const double C21860 = C29548 * C1365;
    const double C7953 = C29548 * C1367;
    const double C20638 = C29548 * C1367;
    const double C27805 = C29390 * C1367;
    const double C6385 = C29548 * C2893;
    const double C13187 = C29548 * C2893;
    const double C17881 = C29390 * C2893;
    const double C28391 = C29390 - C28390;
    const double C13882 = C13875 - C13876;
    const double C13881 = C13873 - C13874;
    const double C14011 = C14007 - C14008;
    const double C18906 = C15617 - C15618;
    const double C18904 = C15618 - C15617;
    const double C18905 = C15615 - C15616;
    const double C18903 = C15616 - C15615;
    const double C19124 = C15779 - C15780;
    const double C19123 = C15780 - C15779;
    const double C26771 = C17102 - C17101;
    const double C26770 = C17100 - C17099;
    const double C26907 = C17292 - C17291;
    const double C28480 = C29484 - C28479;
    const double C3303 = C3299 - C3294;
    const double C3300 = C3296 - C3282;
    const double C4950 = C4948 - C4945;
    const double C5582 = C5580 - C5577;
    const double C23848 = C23844 - C23839;
    const double C23845 = C23841 - C23827;
    const double C25609 = C25607 - C25601;
    const double C3302 = C3298 - C3290;
    const double C3301 = C3297 - C3286;
    const double C23846 = C23842 - C23831;
    const double C10261 = C10257 - C10252;
    const double C10258 = C10254 - C10240;
    const double C11801 = C11799 - C11796;
    const double C12427 = C12425 - C12422;
    const double C17181 = C17177 - C17172;
    const double C17178 = C17174 - C17160;
    const double C18983 = C18981 - C18975;
    const double C10260 = C10256 - C10248;
    const double C10259 = C10255 - C10244;
    const double C17179 = C17175 - C17164;
    const double C350 = C347 + C335;
    const double C7834 = C7831 + C7818;
    const double C28510 = C29499 - C28509;
    const double C7032 = C7028 - C7023;
    const double C7029 = C7025 - C7011;
    const double C8694 = C8692 - C8689;
    const double C9348 = C9346 - C9343;
    const double C16843 = C16839 - C16834;
    const double C16840 = C16836 - C16822;
    const double C19272 = C19270 - C19267;
    const double C7031 = C7027 - C7019;
    const double C7030 = C7026 - C7015;
    const double C16842 = C16838 - C16830;
    const double C16841 = C16837 - C16826;
    const double C19778 = C19774 - C19769;
    const double C19775 = C19771 - C19757;
    const double C21356 = C21354 - C21351;
    const double C22004 = C22002 - C21999;
    const double C23554 = C23550 - C23545;
    const double C23551 = C23547 - C23533;
    const double C25896 = C25894 - C25891;
    const double C19777 = C19773 - C19765;
    const double C19776 = C19772 - C19761;
    const double C23553 = C23549 - C23541;
    const double C23552 = C23548 - C23537;
    const double C569 = C566 + C554;
    const double C4090 = C4087 + C4075;
    const double C4088 = C4085 - C4078;
    const double C4949 = C4947 - C4941;
    const double C11800 = C11798 - C11792;
    const double C7832 = C7829 - C7822;
    const double C9347 = C9345 - C9339;
    const double C22003 = C22001 - C21995;
    const double C5581 = C5579 - C5573;
    const double C5861 = C5860 - C5857;
    const double C8411 = C8410 - C8408;
    const double C8693 = C8691 - C8685;
    const double C12426 = C12424 - C12418;
    const double C21355 = C21353 - C21347;
    const double C17176 = C17166 - C17167;
    const double C23843 = C23833 - C23834;
    const double C28165 = C28161 - C28162;
    const double C18982 = C18977 - C18978;
    const double C25608 = C25603 - C25604;
    const double C19271 = C19269 - C19263;
    const double C25895 = C25893 - C25887;
    const double C351 = C348 + C339;
    const double C352 = C349 + C343;
    const double C1752 = C1750 + C1746;
    const double C2274 = C2272 + C2268;
    const double C7836 = C7833 + C7827;
    const double C9692 = C9691 + C9688;
    const double C570 = C567 + C558;
    const double C571 = C568 + C562;
    const double C1979 = C1977 + C1973;
    const double C4092 = C4089 + C4083;
    const double C2501 = C2499 + C2495;
    const double C6528 = C6527 + C6525;
    const double C405 = C398 + C404;
    const double C506 = C499 + C505;
    const double C28590 = C28588 + C28576;
    const double C28589 = C28587 + C28573;
    const double C5941 = C29548 * C2563;
    const double C12769 = C29548 * C2563;
    const double C17475 = C29390 * C2563;
    const double C16909 = C29390 * C4148;
    const double C29037 = C29035 + C29029;
    const double C29137 = C29135 + C29129;
    const double C29038 = C29036 + C29032;
    const double C1751 = C1749 + C1742;
    const double C2273 = C2271 + C2264;
    const double C26826 = C26825 + C26823;
    const double C29138 = C29136 + C29132;
    const double C1978 = C1976 + C1969;
    const double C2500 = C2498 + C2491;
    const double C14098 = C14097 + C14095;
    const double C15891 = C15890 + C15888;
    const double C26689 = C26687 + C26688;
    const double C13828 = C13826 + C13827;
    const double C28392 = C28391 * C28388;
    const double C89 =
        ((C28391 * ae) / C28379 - C28378 / C28383) / (2 * C28379) -
        ((C28377 * ((0 * ae) / C28379 - C28384 / C28381) + C29548) * be) /
            C28379;
    const double C3055 =
        (-C28378 / C28379) / (2 * C28379) - (C28391 * be) / C28379;
    const double C10013 = (C28391 * ae) / C28379 - C28378 / C28383;
    const double C14006 = C13881 * C214;
    const double C14012 = C14011 * C29499;
    const double C26777 = C26771 * C29484;
    const double C26776 = C26770 * C151;
    const double C28481 = C28480 * C28388;
    const double C3307 = C3303 + C3295;
    const double C3304 = C3300 + C3283;
    const double C4952 = C4950 + C4946;
    const double C5584 = C5582 + C5578;
    const double C23852 = C23848 + C23840;
    const double C23849 = C23845 + C23828;
    const double C25611 = C25609 + C25602;
    const double C3306 = C3302 + C3291;
    const double C3305 = C3301 + C3287;
    const double C23850 = C23846 + C23832;
    const double C10265 = C10261 + C10253;
    const double C10262 = C10258 + C10241;
    const double C11803 = C11801 + C11797;
    const double C12429 = C12427 + C12423;
    const double C17185 = C17181 + C17173;
    const double C17182 = C17178 + C17161;
    const double C18985 = C18983 + C18976;
    const double C10264 = C10260 + C10249;
    const double C10263 = C10259 + C10245;
    const double C17183 = C17179 + C17165;
    const double C7837 = C7834 * C3051;
    const double C20527 = C7834 * C10009;
    const double C26818 = C7834 * C29390;
    const double C28511 = C28510 * C28388;
    const double C7036 = C7032 + C7024;
    const double C7033 = C7029 + C7012;
    const double C8696 = C8694 + C8690;
    const double C9350 = C9348 + C9344;
    const double C16847 = C16843 + C16835;
    const double C16844 = C16840 + C16823;
    const double C19274 = C19272 + C19268;
    const double C7035 = C7031 + C7020;
    const double C7034 = C7030 + C7016;
    const double C16846 = C16842 + C16831;
    const double C16845 = C16841 + C16827;
    const double C19782 = C19778 + C19770;
    const double C19779 = C19775 + C19758;
    const double C21358 = C21356 + C21352;
    const double C22006 = C22004 + C22000;
    const double C23558 = C23554 + C23546;
    const double C23555 = C23551 + C23534;
    const double C25898 = C25896 + C25892;
    const double C19781 = C19777 + C19766;
    const double C19780 = C19776 + C19762;
    const double C23557 = C23553 + C23542;
    const double C23556 = C23552 + C23538;
    const double C572 = C569 * C29484;
    const double C3516 = C569 * C3053;
    const double C10474 = C569 * C10011;
    const double C4091 = C4088 + C4079;
    const double C4951 = C4949 + C4942;
    const double C11802 = C11800 + C11793;
    const double C7835 = C7832 + C7823;
    const double C9349 = C9347 + C9340;
    const double C22005 = C22003 + C21996;
    const double C5583 = C5581 + C5574;
    const double C5862 = C5861 + C5858;
    const double C8412 = C8411 + C8409;
    const double C8695 = C8693 + C8686;
    const double C12428 = C12426 + C12419;
    const double C21357 = C21355 + C21348;
    const double C17180 = C17176 - C17168;
    const double C23847 = C23843 - C23835;
    const double C28166 = C28165 - C28163;
    const double C18984 = C18982 - C18979;
    const double C25610 = C25608 - C25605;
    const double C19273 = C19271 + C19264;
    const double C25897 = C25895 + C25888;
    const double C7819 = C2274 * C29548;
    const double C9061 = C2274 * C3051;
    const double C20528 = C2274 * C29548;
    const double C21719 = C2274 * C10009;
    const double C27702 = C2274 * C29390;
    const double C7839 = C7836 * C3051;
    const double C20530 = C7836 * C10009;
    const double C26819 = C7836 * C29390;
    const double C9693 = C9692 * C3051;
    const double C22337 = C9692 * C10009;
    const double C28160 = C9692 * C29390;
    const double C573 = C570 * C29484;
    const double C3519 = C570 * C3053;
    const double C10477 = C570 * C10011;
    const double C574 = C571 * C29484;
    const double C1981 = C1979 * C29484;
    const double C3517 = C1979 * C29555;
    const double C5228 = C1979 * C3053;
    const double C10475 = C1979 * C29555;
    const double C12077 = C1979 * C10011;
    const double C2503 = C2501 * C29484;
    const double C5859 = C2501 * C3053;
    const double C12699 = C2501 * C10011;
    const double C689 =
        (C28604 + ae * C28607 + C28524 * C28615 + be * C28593 * C28590 +
         C28593 *
             (be * C28590 +
              C28593 * (C28611 + ae * C28524 * C28612 +
                        C28524 * (ae * C28612 + C28524 * std::pow(C28522, 6) *
                                                    bs[6] * C28599)))) /
        C28381;
    const double C1180 =
        (C28630 + ae * C28633 + C28524 * C28641 + be * C28619 * C28590 +
         C28619 *
             (be * C28590 +
              C28619 * (C28637 + ae * C28524 * C28638 +
                        C28524 * (ae * C28638 + C28524 * std::pow(C28522, 6) *
                                                    bs[6] * C28625)))) /
        C28381;
    const double C1566 =
        (be * (2 * C28556 + C28524 * C28590 + C28574 * ae) +
         C28593 *
             (2 * C28615 + ae * C28616 +
              C28524 * (C28611 + ae * C28524 * C28612 +
                        C28524 * (ae * C28612 + C28524 * std::pow(C28522, 6) *
                                                    bs[6] * C28599)))) /
        C28381;
    const double C2148 =
        (be * (2 * C28556 + C28524 * C28590 + C28574 * ae) +
         C28619 *
             (2 * C28641 + ae * C28642 +
              C28524 * (C28637 + ae * C28524 * C28638 +
                        C28524 * (ae * C28638 + C28524 * std::pow(C28522, 6) *
                                                    bs[6] * C28625)))) /
        C28381;
    const double C2620 =
        (C28619 *
         (be * C28590 +
          C28593 * (C28611 + ae * C28524 * C28612 +
                    C28524 * (ae * C28612 + C28524 * std::pow(C28522, 6) *
                                                bs[6] * C28599)))) /
        C28381;
    const double C2676 =
        (be * C28593 * C28590 +
         C28619 * C28593 *
             (C28637 + ae * C28524 * C28638 +
              C28524 * (ae * C28638 +
                        C28524 * std::pow(C28522, 6) * bs[6] * C28625))) /
        C28381;
    const double C107 = (3 * (C28537 + C28524 * C28556 + C28545 * ae) +
                         C28524 * (2 * C28556 + C28524 * C28590 + C28574 * ae) +
                         (2 * C28545 + C28524 * C28574) * ae) /
                        C28379;
    const double C633 =
        (C28537 + C28524 * C28556 + C28545 * ae + C28590 * C28671) / C28379;
    const double C1074 =
        (C28537 + C28524 * C28556 + C28545 * ae + C28590 * C28734) / C28379;
    const double C1513 =
        (C28593 * (2 * C28556 + C28524 * C28590 + C28574 * ae)) / C28379;
    const double C2035 =
        (C28619 * (2 * C28556 + C28524 * C28590 + C28574 * ae)) / C28379;
    const double C2561 = (C28619 * C28593 * C28590) / C28379;
    const double C112 =
        (3 * (C28554 + ae * C28555 + be * C28556 + C28524 * C28586) +
         ae * (2 * C28555 + C28524 * C28589 + C28574 * be) +
         be * (2 * C28556 + C28524 * C28590 + C28574 * ae) +
         C28524 *
             (2 * C28586 + ae * C28589 + be * C28590 +
              C28524 * (C28580 + ae * C28581 + be * C28582 +
                        C28524 * (ae * C28572 + be * C28575 +
                                  C28524 *
                                      (C28561 * C28562 +
                                       C28528 * bs[6] * std::pow(C28522, 6)) *
                                      C28380)))) /
        C28381;
    const double C789 =
        (C28655 + be * C28658 + C28524 * C28666 + ae * C28593 * C28589 +
         C28593 *
             (ae * C28589 +
              C28593 * (C28662 + be * C28524 * C28663 +
                        C28524 * (be * C28663 + C28524 * std::pow(C28522, 6) *
                                                    bs[6] * C28650)))) /
        C28381;
    const double C1368 =
        (C28706 + be * C28709 + C28524 * C28717 + ae * C28619 * C28589 +
         C28619 *
             (ae * C28589 +
              C28619 * (C28713 + be * C28524 * C28714 +
                        C28524 * (be * C28714 + C28524 * std::pow(C28522, 6) *
                                                    bs[6] * C28701)))) /
        C28381;
    const double C1514 =
        (2 * (ae * C28593 * C28549 + be * C28593 * C28550 + C28524 * C28854) +
         ae * C28593 * C28589 + be * C28593 * C28590 +
         C28524 * (C28854 + ae * C28593 * C28581 + be * C28593 * C28582 +
                   C28524 * (ae * C28593 * C28572 + be * C28593 * C28575 +
                             C28524 * C28593 *
                                 (C28561 * C28562 +
                                  C28528 * bs[6] * std::pow(C28522, 6)) *
                                 C28380))) /
        C28381;
    const double C1686 =
        (ae * (2 * C28555 + C28524 * C28589 + C28574 * be) +
         C28593 *
             (2 * C28666 + be * C28667 +
              C28524 * (C28662 + be * C28524 * C28663 +
                        C28524 * (be * C28663 + C28524 * std::pow(C28522, 6) *
                                                    bs[6] * C28650)))) /
        C28381;
    const double C2036 =
        (2 * (ae * C28619 * C28549 + be * C28619 * C28550 + C28524 * C28864) +
         ae * C28619 * C28589 + be * C28619 * C28590 +
         C28524 * (C28864 + ae * C28619 * C28581 + be * C28619 * C28582 +
                   C28524 * (ae * C28619 * C28572 + be * C28619 * C28575 +
                             C28524 * C28619 *
                                 (C28561 * C28562 +
                                  C28528 * bs[6] * std::pow(C28522, 6)) *
                                 C28380))) /
        C28381;
    const double C2380 =
        (ae * (2 * C28555 + C28524 * C28589 + C28574 * be) +
         C28619 *
             (2 * C28717 + be * C28718 +
              C28524 * (C28713 + be * C28524 * C28714 +
                        C28524 * (be * C28714 + C28524 * std::pow(C28522, 6) *
                                                    bs[6] * C28701)))) /
        C28381;
    const double C2732 =
        (ae * C28619 * C28589 +
         C28593 * C28619 *
             (C28662 + be * C28524 * C28663 +
              C28524 * (be * C28663 +
                        C28524 * std::pow(C28522, 6) * bs[6] * C28650))) /
        C28381;
    const double C2894 =
        (ae * C28593 * C28589 +
         C28619 * C28593 *
             (C28713 + be * C28524 * C28714 +
              C28524 * (be * C28714 +
                        C28524 * std::pow(C28522, 6) * bs[6] * C28701))) /
        C28381;
    const double C106 = (3 * (C28536 + C28524 * C28555 + C28545 * be) +
                         C28524 * (2 * C28555 + C28524 * C28589 + C28574 * be) +
                         (2 * C28545 + C28524 * C28574) * be) /
                        C28379;
    const double C632 =
        (C28536 + C28524 * C28555 + C28545 * be + C28589 * C28671) / C28379;
    const double C1073 =
        (C28536 + C28524 * C28555 + C28545 * be + C28589 * C28734) / C28379;
    const double C1512 =
        (C28593 * (2 * C28555 + C28524 * C28589 + C28574 * be)) / C28379;
    const double C2034 =
        (C28619 * (2 * C28555 + C28524 * C28589 + C28574 * be)) / C28379;
    const double C2560 = (C28619 * C28593 * C28589) / C28379;
    const double C14416 =
        (C28727 + be * C28958 + C28593 * C29048 + ae * C28619 * C29037 +
         C28619 *
             (ae * C29037 +
              C28619 * (C28730 + be * C28593 * C28714 +
                        C28593 * (be * C28714 + C28593 * std::pow(C28522, 6) *
                                                    bs[6] * C28724)))) /
        C28381;
    const double C15832 =
        (ae * (2 * C28912 + C28593 * C29037 + C29030 * be) +
         C28619 *
             (2 * C29048 + be * C29049 +
              C28593 * (C28730 + be * C28593 * C28714 +
                        C28593 * (be * C28714 + C28593 * std::pow(C28522, 6) *
                                                    bs[6] * C28724)))) /
        C28381;
    const double C13777 =
        (3 * (C28600 + C28593 * C28912 + C28910 * be) +
         C28593 * (2 * C28912 + C28593 * C29037 + C29030 * be) +
         (2 * C28910 + C28593 * C29030) * be) /
        C28379;
    const double C14178 =
        (C28600 + C28593 * C28912 + C28910 * be + C29037 * C28734) / C28379;
    const double C15504 =
        (C28619 * (2 * C28912 + C28593 * C29037 + C29030 * be)) / C28379;
    const double C26727 =
        (3 * (C28626 + C28619 * C29000 + C28998 * be) +
         C28619 * (2 * C29000 + C28619 * C29137 + C29130 * be) +
         (2 * C28998 + C28619 * C29130) * be) /
        C28379;
    const double C13920 =
        (3 * (C28676 + ae * C28912 + be * C28913 + C28593 * C29027) +
         ae * (2 * C28912 + C28593 * C29037 + C29030 * be) +
         be * (2 * C28913 + C28593 * C29038 + C29030 * ae) +
         C28593 *
             (2 * C29027 + ae * C29037 + be * C29038 +
              C28593 * (C28681 + ae * C29028 + be * C29031 +
                        C28593 * (ae * C28612 + be * C28663 +
                                  C28593 *
                                      (C28561 * C28562 +
                                       C28671 * bs[6] * std::pow(C28522, 6)) *
                                      C28380)))) /
        C28381;
    const double C15672 =
        (2 * (ae * C28619 * C28605 + be * C28619 * C28656 + C28593 * C29066) +
         ae * C28619 * C29037 + be * C28619 * C29038 +
         C28593 * (C29066 + ae * C28619 * C29028 + be * C28619 * C29031 +
                   C28593 * (ae * C28619 * C28612 + be * C28619 * C28663 +
                             C28593 * C28619 *
                                 (C28561 * C28562 +
                                  C28671 * bs[6] * std::pow(C28522, 6)) *
                                 C28380))) /
        C28381;
    const double C13866 =
        (3 * (C28651 + C28593 * C28913 + C28910 * ae) +
         C28593 * (2 * C28913 + C28593 * C29038 + C29030 * ae) +
         (2 * C28910 + C28593 * C29030) * ae) /
        C28379;
    const double C14258 =
        (C28651 + C28593 * C28913 + C28910 * ae + C29038 * C28734) / C28379;
    const double C15612 =
        (C28619 * (2 * C28913 + C28593 * C29038 + C29030 * ae)) / C28379;
    const double C9062 = C2273 * C29548;
    const double C21720 = C2273 * C29548;
    const double C26827 = C26826 * C29390;
    const double C26989 =
        (3 * (C28739 + ae * C29000 + be * C29001 + C28619 * C29127) +
         ae * (2 * C29000 + C28619 * C29137 + C29130 * be) +
         be * (2 * C29001 + C28619 * C29138 + C29130 * ae) +
         C28619 *
             (2 * C29127 + ae * C29137 + be * C29138 +
              C28619 * (C28744 + ae * C29128 + be * C29131 +
                        C28619 * (ae * C28638 + be * C28714 +
                                  C28619 *
                                      (C28561 * C28562 +
                                       C28734 * bs[6] * std::pow(C28522, 6)) *
                                      C28380)))) /
        C28381;
    const double C26904 =
        (3 * (C28702 + C28619 * C29001 + C28998 * ae) +
         C28619 * (2 * C29001 + C28619 * C29138 + C29130 * ae) +
         (2 * C28998 + C28619 * C29130) * ae) /
        C28379;
    const double C1980 = C1978 * C29484;
    const double C3518 = C1978 * C29555;
    const double C10476 = C1978 * C29555;
    const double C2502 = C2500 * C29484;
    const double C28397 = C28377 * C28392;
    const double C88 =
        (ae * -2 * C28378) / (C28381 * 2 * C28379) -
        (((C28377 * ((-4 * C28384) / C28379 - (C28377 * C28392) / C28379) *
           ae) /
              C28379 +
          2 * ((C28391 * ae) / C28379 - C28378 / C28383)) *
         be) /
            C28379 -
        C28392 / C28383;
    const double C92 = (-C28392 / C28379) / (4 * C28381);
    const double C3058 = (-C28392 / C28379) / (2 * C28379);
    const double C10016 = (-C28392 / C28379) / (2 * C28379);
    const double C13362 = -C28392 / C28379;
    const double C3592 = C3055 * C629;
    const double C3590 = C3055 * C628;
    const double C3580 = C3055 * C627;
    const double C3578 = C3055 * C626;
    const double C3792 = C3055 * C781;
    const double C3788 = C3055 * C619;
    const double C3785 = C3055 * C778;
    const double C3781 = C3055 * C618;
    const double C3964 = C3055 * C919;
    const double C3961 = C3055 * C916;
    const double C4643 = C3055 * C625;
    const double C4641 = C3055 * C624;
    const double C4869 = C3055 * C779;
    const double C4865 = C3055 * C617;
    const double C5087 = C3055 * C917;
    const double C5944 = C3055 * C2557;
    const double C5942 = C3055 * C2556;
    const double C6170 = C3055 * C2727;
    const double C6166 = C3055 * C2553;
    const double C6382 = C3055 * C2889;
    const double C7559 = C3055 * C1070;
    const double C7557 = C3055 * C1069;
    const double C7547 = C3055 * C1068;
    const double C7545 = C3055 * C1067;
    const double C7759 = C3055 * C1222;
    const double C7755 = C3055 * C1060;
    const double C7752 = C3055 * C1219;
    const double C7748 = C3055 * C1059;
    const double C7950 = C3055 * C1360;
    const double C7947 = C3055 * C1357;
    const double C8765 = C3055 * C1066;
    const double C8763 = C3055 * C1065;
    const double C8991 = C3055 * C1220;
    const double C8987 = C3055 * C1058;
    const double C9199 = C3055 * C1358;
    const double C10542 = C10013 * C629;
    const double C10540 = C10013 * C628;
    const double C10530 = C10013 * C627;
    const double C10528 = C10013 * C626;
    const double C10718 = C10013 * C781;
    const double C10714 = C10013 * C619;
    const double C10711 = C10013 * C778;
    const double C10707 = C10013 * C618;
    const double C10876 = C10013 * C919;
    const double C10873 = C10013 * C916;
    const double C11498 = C10013 * C625;
    const double C11496 = C10013 * C624;
    const double C11720 = C10013 * C779;
    const double C11716 = C10013 * C617;
    const double C11936 = C10013 * C917;
    const double C12772 = C10013 * C2557;
    const double C12770 = C10013 * C2556;
    const double C12982 = C10013 * C2727;
    const double C12978 = C10013 * C2553;
    const double C13184 = C10013 * C2889;
    const double C20297 = C10013 * C1070;
    const double C20295 = C10013 * C1069;
    const double C20285 = C10013 * C1068;
    const double C20283 = C10013 * C1067;
    const double C20473 = C10013 * C1222;
    const double C20469 = C10013 * C1060;
    const double C20466 = C10013 * C1219;
    const double C20462 = C10013 * C1059;
    const double C20635 = C10013 * C1360;
    const double C20632 = C10013 * C1357;
    const double C21427 = C10013 * C1066;
    const double C21425 = C10013 * C1065;
    const double C21649 = C10013 * C1220;
    const double C21645 = C10013 * C1058;
    const double C21857 = C10013 * C1358;
    const double C14013 = C14006 + C14012;
    const double C26778 = C26776 + C26777;
    const double C28484 = C28409 * C28481;
    const double C13518 =
        (ae * -2 * C28469) / (C28381 * 2 * C28379) -
        (((C28409 * ((-4 * C28430) / C28379 - (C28409 * C28481) / C28379) *
           ae) /
              C28379 +
          2 * ((C28480 * ae) / C28379 - C28469 / C28383)) *
         be) /
            C28379 -
        C28481 / C28383;
    const double C13520 = (-C28481 / C28379) / (4 * C28381);
    const double C28514 = C28412 * C28511;
    const double C26246 =
        (ae * -2 * C28499) / (C28381 * 2 * C28379) -
        (((C28412 * ((-4 * C28442) / C28379 - (C28412 * C28511) / C28379) *
           ae) /
              C28379 +
          2 * ((C28510 * ae) / C28379 - C28499 / C28383)) *
         be) /
            C28379 -
        C28511 / C28383;
    const double C26248 = (-C28511 / C28379) / (4 * C28381);
    const double C5227 = C4091 * C29555;
    const double C12076 = C4091 * C29555;
    const double C7838 = C7835 * C29548;
    const double C20529 = C7835 * C29548;
    const double C27703 = C7835 * C29390;
    const double C5863 = C5862 * C29555;
    const double C12698 = C5862 * C29555;
    const double C9689 = C8412 * C29548;
    const double C22338 = C8412 * C29548;
    const double C17184 = C17180 + C17169;
    const double C23851 = C23847 + C23836;
    const double C28167 = C28166 + C28164;
    const double C18986 = C18984 + C18980;
    const double C25612 = C25610 + C25606;
    const double C90 =
        (((-4 * C28384) / C28379 - C28397 / C28379) * ae) / C28383 -
        ((2 * ((0 * ae) / C28379 - C28384 / C28381) - C28397 / C28383) * be) /
            C28379;
    const double C3056 =
        -(((-4 * C28384) / C28379 - C28397 / C28379) * be) / C28379;
    const double C10014 =
        (((-4 * C28384) / C28379 - C28397 / C28379) * ae) / C28379;
    const double C3587 = C3058 * C620;
    const double C3583 = C3058 * C617;
    const double C4646 = C3058 * C616;
    const double C5939 = C3058 * C2554;
    const double C7554 = C3058 * C1061;
    const double C7550 = C3058 * C1058;
    const double C8768 = C3058 * C1057;
    const double C10537 = C10016 * C620;
    const double C10533 = C10016 * C617;
    const double C11501 = C10016 * C616;
    const double C12767 = C10016 * C2554;
    const double C20292 = C10016 * C1061;
    const double C20288 = C10016 * C1058;
    const double C21430 = C10016 * C1057;
    const double C13725 = C13362 * C3569;
    const double C13721 = C13362 * C619;
    const double C13717 = C13362 * C618;
    const double C14512 = C13362 * C620;
    const double C14508 = C13362 * C617;
    const double C15444 = C13362 * C2553;
    const double C15440 = C13362 * C5929;
    const double C16911 = C13362 * C1060;
    const double C16907 = C13362 * C4142;
    const double C16903 = C13362 * C1059;
    const double C17473 = C13362 * C2554;
    const double C18081 = C13362 * C1058;
    const double C26635 = C13362 * C7536;
    const double C27492 = C13362 * C1061;
    const double C13519 =
        (((-4 * C28430) / C28379 - C28484 / C28379) * ae) / C28383 -
        ((2 * ((0 * ae) / C28379 - C28430 / C28381) - C28484 / C28383) * be) /
            C28379;
    const double C26247 =
        (((-4 * C28442) / C28379 - C28514 / C28379) * ae) / C28383 -
        ((2 * ((0 * ae) / C28379 - C28442 / C28381) - C28514 / C28383) * be) /
            C28379;
    const double C28168 = C28167 * C29390;
    const double C3591 = C3056 * C619;
    const double C3579 = C3056 * C618;
    const double C4642 = C3056 * C617;
    const double C5943 = C3056 * C2553;
    const double C7558 = C3056 * C1060;
    const double C7546 = C3056 * C1059;
    const double C8764 = C3056 * C1058;
    const double C10541 = C10014 * C619;
    const double C10529 = C10014 * C618;
    const double C11497 = C10014 * C617;
    const double C12771 = C10014 * C2553;
    const double C20296 = C10014 * C1060;
    const double C20284 = C10014 * C1059;
    const double C21426 = C10014 * C1058;
    const double C3596 = C3586 - C3587;
    const double C3595 = C3582 - C3583;
    const double C4650 = C4645 - C4646;
    const double C5946 = C5938 - C5939;
    const double C7563 = C7553 - C7554;
    const double C7562 = C7549 - C7550;
    const double C8772 = C8767 - C8768;
    const double C10546 = C10536 - C10537;
    const double C10545 = C10532 - C10533;
    const double C11505 = C11500 - C11501;
    const double C12774 = C12766 - C12767;
    const double C20301 = C20291 - C20292;
    const double C20300 = C20287 - C20288;
    const double C21434 = C21429 - C21430;
    const double C13730 = C13724 - C13725;
    const double C13729 = C13720 - C13721;
    const double C13728 = C13716 - C13717;
    const double C14516 = C14511 - C14512;
    const double C14515 = C14507 - C14508;
    const double C15448 = C15443 - C15444;
    const double C15447 = C15439 - C15440;
    const double C16916 = C16910 - C16911;
    const double C16915 = C16906 - C16907;
    const double C16914 = C16902 - C16903;
    const double C17476 = C17472 - C17473;
    const double C18084 = C18080 - C18081;
    const double C26638 = C26634 - C26635;
    const double C27495 = C27491 - C27492;
    const double C3597 = C3590 - C3591;
    const double C3594 = C3578 - C3579;
    const double C4649 = C4641 - C4642;
    const double C5947 = C5942 - C5943;
    const double C7564 = C7557 - C7558;
    const double C7561 = C7545 - C7546;
    const double C8771 = C8763 - C8764;
    const double C10547 = C10540 - C10541;
    const double C10544 = C10528 - C10529;
    const double C11504 = C11496 - C11497;
    const double C12775 = C12770 - C12771;
    const double C20302 = C20295 - C20296;
    const double C20299 = C20283 - C20284;
    const double C21433 = C21425 - C21426;
    const double C3600 = C3596 - C3588;
    const double C3599 = C3595 - C3584;
    const double C4652 = C4650 - C4647;
    const double C5948 = C5946 - C5940;
    const double C7567 = C7563 - C7555;
    const double C7566 = C7562 - C7551;
    const double C8774 = C8772 - C8769;
    const double C10550 = C10546 - C10538;
    const double C10549 = C10545 - C10534;
    const double C11507 = C11505 - C11502;
    const double C12776 = C12774 - C12768;
    const double C20305 = C20301 - C20293;
    const double C20304 = C20300 - C20289;
    const double C21436 = C21434 - C21431;
    const double C13733 = C13730 - C13726;
    const double C13732 = C13729 - C13722;
    const double C13731 = C13728 - C13718;
    const double C14518 = C14516 - C14513;
    const double C14517 = C14515 - C14509;
    const double C15450 = C15448 - C15445;
    const double C15449 = C15447 - C15441;
    const double C16919 = C16916 - C16912;
    const double C16918 = C16915 - C16908;
    const double C16917 = C16914 - C16904;
    const double C17477 = C17476 - C17474;
    const double C18085 = C18084 - C18082;
    const double C26639 = C26638 - C26636;
    const double C27496 = C27495 - C27493;
    const double C3601 = C3597 - C3592;
    const double C3598 = C3594 - C3580;
    const double C4651 = C4649 - C4643;
    const double C5949 = C5947 - C5944;
    const double C7568 = C7564 - C7559;
    const double C7565 = C7561 - C7547;
    const double C8773 = C8771 - C8765;
    const double C10551 = C10547 - C10542;
    const double C10548 = C10544 - C10530;
    const double C11506 = C11504 - C11498;
    const double C12777 = C12775 - C12772;
    const double C20306 = C20302 - C20297;
    const double C20303 = C20299 - C20285;
    const double C21435 = C21433 - C21427;
    const double C3604 = C3600 + C3589;
    const double C3603 = C3599 + C3585;
    const double C4654 = C4652 + C4648;
    const double C5950 = C5948 + C5941;
    const double C7571 = C7567 + C7556;
    const double C7570 = C7566 + C7552;
    const double C8776 = C8774 + C8770;
    const double C10554 = C10550 + C10539;
    const double C10553 = C10549 + C10535;
    const double C11509 = C11507 + C11503;
    const double C12778 = C12776 + C12769;
    const double C20309 = C20305 + C20294;
    const double C20308 = C20304 + C20290;
    const double C21438 = C21436 + C21432;
    const double C13736 = C13733 + C13727;
    const double C13735 = C13732 + C13723;
    const double C13734 = C13731 + C13719;
    const double C14520 = C14518 + C14514;
    const double C14519 = C14517 + C14510;
    const double C15452 = C15450 + C15446;
    const double C15451 = C15449 + C15442;
    const double C16922 = C16919 + C16913;
    const double C16921 = C16918 + C16909;
    const double C16920 = C16917 + C16905;
    const double C17478 = C17477 + C17475;
    const double C18086 = C18085 + C18083;
    const double C26640 = C26639 + C26637;
    const double C27497 = C27496 + C27494;
    const double C3605 = C3601 + C3593;
    const double C3602 = C3598 + C3581;
    const double C4653 = C4651 + C4644;
    const double C5951 = C5949 + C5945;
    const double C7572 = C7568 + C7560;
    const double C7569 = C7565 + C7548;
    const double C8775 = C8773 + C8766;
    const double C10555 = C10551 + C10543;
    const double C10552 = C10548 + C10531;
    const double C11508 = C11506 + C11499;
    const double C12779 = C12777 + C12773;
    const double C20310 = C20306 + C20298;
    const double C20307 = C20303 + C20286;
    const double C21437 = C21435 + C21428;
    const double C13739 = C13736 * C29499;
    const double C13738 = C13735 * C29499;
    const double C16395 = C13735 * C6578;
    const double C23106 = C13735 * C19324;
    const double C13737 = C13734 * C29499;
    const double C16392 = C13734 * C6578;
    const double C23103 = C13734 * C19324;
    const double C14522 = C14520 * C29499;
    const double C14521 = C14519 * C29499;
    const double C17471 = C14519 * C6578;
    const double C24127 = C14519 * C19324;
    const double C15454 = C15452 * C29499;
    const double C16393 = C15452 * C29557;
    const double C18688 = C15452 * C6578;
    const double C23104 = C15452 * C29557;
    const double C25318 = C15452 * C19324;
    const double C15453 = C15451 * C29499;
    const double C16394 = C15451 * C29557;
    const double C23105 = C15451 * C29557;
    const double C18687 = C16921 * C29557;
    const double C25317 = C16921 * C29557;
    const double C17479 = C17478 * C29557;
    const double C24128 = C17478 * C29557;
    d2eexx[0] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  (((C87 * C98 - C88 * C93 - C87 * C99 + C77 * C108 +
                     C89 * C100 - C90 * C94 - C89 * C101 + C78 * C109 +
                     C91 * C102 - C92 * C95 - C91 * C103 + C79 * C110) *
                        C29499 * C29484 * C29439 * C1507 -
                    (C91 * C622 - C92 * C616 - C91 * C623 + C79 * C634 +
                     C89 * C624 - C90 * C617 - C89 * C625 + C78 * C635 +
                     C87 * C626 - C88 * C618 - C87 * C627 + C77 * C636) *
                        C29499 * C29484 * C29439 * C1508) *
                       C1509 +
                   ((C87 * C624 - C88 * C617 - C87 * C625 + C77 * C635 +
                     C89 * C622 - C90 * C616 - C89 * C623 + C78 * C634 +
                     C91 * C1512 - C92 * C1511 - C91 * C1513 + C79 * C1514) *
                        C29499 * C29484 * C29439 * C1508 -
                    (C91 * C104 - C92 * C96 - C91 * C105 + C79 * C111 +
                     C89 * C102 - C90 * C95 - C89 * C103 + C78 * C110 +
                     C87 * C100 - C88 * C94 - C87 * C101 + C77 * C109) *
                        C29499 * C29484 * C29439 * C1507) *
                       C1510)) /
                 (p * q * std::sqrt(p + q));
    d2eexy[0] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C29484 * C152 - C151 * C93) * C87 +
            (C29484 * C157 - C151 * C99) * C77 + (C163 - C164) * C89 +
            (C165 - C166) * C78 + C175 * C91 + C176 * C79) *
               C29499 * C29439 * C1507 +
           ((C151 * C618 - C29484 * C678) * C87 +
            (C151 * C627 - C29484 * C684) * C77 + (C1568 - C1569) * C89 +
            (C1570 - C1571) * C78 + (C1572 - C1573) * C91 +
            (C1574 - C1575) * C79) *
               C29499 * C29439 * C1508) *
              C1509 +
          (((C164 - C163) * C87 + (C166 - C165) * C77 + (C168 - C167) * C89 +
            (C170 - C169) * C78 + (C171 - C172) * C91 + (C173 - C174) * C79) *
               C29499 * C29439 * C1507 +
           ((C1569 - C1568) * C87 + (C1571 - C1570) * C77 +
            (C1573 - C1572) * C89 + (C1575 - C1574) * C78 +
            (C29484 * C1565 - C151 * C1511) * C91 +
            (C29484 * C1566 - C151 * C1513) * C79) *
               C29499 * C29439 * C1508) *
              C1510)) /
        (p * q * std::sqrt(p + q));
    d2eexz[0] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C29499 * C215 - C214 * C93) * C87 +
            (C29499 * C220 - C214 * C99) * C77 + (C226 - C227) * C89 +
            (C228 - C229) * C78 + C238 * C91 + C239 * C79) *
               C29484 * C29439 * C1507 +
           ((C214 * C618 - C29499 * C728) * C87 +
            (C214 * C627 - C29499 * C734) * C77 + (C1628 - C1629) * C89 +
            (C1630 - C1631) * C78 + (C1632 - C1633) * C91 +
            (C1634 - C1635) * C79) *
               C29484 * C29439 * C1508) *
              C1509 +
          (((C227 - C226) * C87 + (C229 - C228) * C77 + (C231 - C230) * C89 +
            (C233 - C232) * C78 + (C234 - C235) * C91 + (C236 - C237) * C79) *
               C29484 * C29439 * C1507 +
           ((C1629 - C1628) * C87 + (C1631 - C1630) * C77 +
            (C1633 - C1632) * C89 + (C1635 - C1634) * C78 +
            (C29499 * C1625 - C214 * C1511) * C91 +
            (C29499 * C1626 - C214 * C1513) * C79) *
               C29484 * C29439 * C1508) *
              C1510)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[0] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((C77 * C98 - C87 * C93 + C78 * C100 - C89 * C94 +
                      C79 * C102 - C91 * C95) *
                         C151 +
                     (C77 * C282 - C87 * C277 + C78 * C283 - C89 * C278 +
                      C79 * C284 - C91 * C279) *
                         C29484) *
                        C29499 * C29439 * C1507 +
                    ((C87 * C618 - C77 * C626 + C89 * C617 - C78 * C624 +
                      C91 * C616 - C79 * C622) *
                         C151 +
                     (C87 * C778 - C77 * C784 + C89 * C779 - C78 * C785 +
                      C91 * C780 - C79 * C786) *
                         C29484) *
                        C29499 * C29439 * C1508) *
                       C1509 +
                   (((C87 * C94 - C77 * C100 + C89 * C95 - C78 * C102 +
                      C91 * C96 - C79 * C104) *
                         C151 +
                     (C87 * C278 - C77 * C283 + C89 * C279 - C78 * C284 +
                      C91 * C280 - C79 * C285) *
                         C29484) *
                        C29499 * C29439 * C1507 +
                    ((C77 * C624 - C87 * C617 + C78 * C622 - C89 * C616 +
                      C79 * C1512 - C91 * C1511) *
                         C151 +
                     (C77 * C785 - C87 * C779 + C78 * C786 - C89 * C780 +
                      C79 * C1686 - C91 * C1685) *
                         C29484) *
                        C29499 * C29439 * C1508) *
                       C1510)) /
                 (p * q * std::sqrt(p + q));
    d2eeyy[0] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C151 * C152 - C325 * C93 - C151 * C277 + C29484 * C326) * C77 +
            C350 * C78 + C351 * C79) *
               C29499 * C29439 * C1507 -
           (C1751 * C79 + C1752 * C78 +
            (C151 * C678 - C325 * C618 - C151 * C778 + C29484 * C830) * C77) *
               C29499 * C29439 * C1508) *
              C1509 +
          ((C1752 * C77 + C1751 * C78 +
            (C151 * C1565 - C325 * C1511 - C151 * C1685 + C29484 * C1737) *
                C79) *
               C29499 * C29439 * C1508 -
           (C352 * C79 + C351 * C78 + C350 * C77) * C29499 * C29439 * C1507) *
              C1510)) /
        (p * q * std::sqrt(p + q));
    d2eeyz[0] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C29499 * C215 - C214 * C93) * C151 +
             (C29499 * C390 - C214 * C277) * C29484) *
                C77 +
            ((C226 - C227) * C151 + (C396 - C397) * C29484) * C78 +
            C405 * C79) *
               C29439 * C1507 +
           (((C214 * C618 - C29499 * C728) * C151 +
             (C214 * C778 - C29499 * C872) * C29484) *
                C77 +
            ((C1628 - C1629) * C151 + (C1804 - C1805) * C29484) * C78 +
            ((C1632 - C1633) * C151 + (C1806 - C1807) * C29484) * C79) *
               C29439 * C1508) *
              C1509 +
          ((((C227 - C226) * C151 + (C397 - C396) * C29484) * C77 +
            ((C231 - C230) * C151 + (C400 - C399) * C29484) * C78 +
            ((C234 - C235) * C151 + (C401 - C402) * C29484) * C79) *
               C29439 * C1507 +
           (((C1629 - C1628) * C151 + (C1805 - C1804) * C29484) * C77 +
            ((C1633 - C1632) * C151 + (C1807 - C1806) * C29484) * C78 +
            ((C29499 * C1625 - C214 * C1511) * C151 +
             (C29499 * C1802 - C214 * C1685) * C29484) *
                C79) *
               C29439 * C1508) *
              C1510)) /
        (p * q * std::sqrt(p + q));
    d2eezx[0] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((C77 * C98 - C87 * C93 + C78 * C100 - C89 * C94 +
                      C79 * C102 - C91 * C95) *
                         C214 +
                     (C77 * C448 - C87 * C443 + C78 * C449 - C89 * C444 +
                      C79 * C450 - C91 * C445) *
                         C29499) *
                        C29484 * C29439 * C1507 +
                    ((C87 * C618 - C77 * C626 + C89 * C617 - C78 * C624 +
                      C91 * C616 - C79 * C622) *
                         C214 +
                     (C87 * C916 - C77 * C922 + C89 * C917 - C78 * C923 +
                      C91 * C918 - C79 * C924) *
                         C29499) *
                        C29484 * C29439 * C1508) *
                       C1509 +
                   (((C87 * C94 - C77 * C100 + C89 * C95 - C78 * C102 +
                      C91 * C96 - C79 * C104) *
                         C214 +
                     (C87 * C444 - C77 * C449 + C89 * C445 - C78 * C450 +
                      C91 * C446 - C79 * C451) *
                         C29499) *
                        C29484 * C29439 * C1507 +
                    ((C77 * C624 - C87 * C617 + C78 * C622 - C89 * C616 +
                      C79 * C1512 - C91 * C1511) *
                         C214 +
                     (C77 * C923 - C87 * C917 + C78 * C924 - C89 * C918 +
                      C79 * C1858 - C91 * C1857) *
                         C29499) *
                        C29484 * C29439 * C1508) *
                       C1510)) /
                 (p * q * std::sqrt(p + q));
    d2eezy[0] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C29484 * C152 - C151 * C93) * C214 +
             (C29484 * C491 - C151 * C443) * C29499) *
                C77 +
            ((C163 - C164) * C214 + (C497 - C498) * C29499) * C78 +
            C506 * C79) *
               C29439 * C1507 +
           (((C151 * C618 - C29484 * C678) * C214 +
             (C151 * C916 - C29484 * C966) * C29499) *
                C77 +
            ((C1568 - C1569) * C214 + (C1911 - C1912) * C29499) * C78 +
            ((C1572 - C1573) * C214 + (C1913 - C1914) * C29499) * C79) *
               C29439 * C1508) *
              C1509 +
          ((((C164 - C163) * C214 + (C498 - C497) * C29499) * C77 +
            ((C168 - C167) * C214 + (C501 - C500) * C29499) * C78 +
            ((C171 - C172) * C214 + (C502 - C503) * C29499) * C79) *
               C29439 * C1507 +
           (((C1569 - C1568) * C214 + (C1912 - C1911) * C29499) * C77 +
            ((C1573 - C1572) * C214 + (C1914 - C1913) * C29499) * C78 +
            ((C29484 * C1565 - C151 * C1511) * C214 +
             (C29484 * C1909 - C151 * C1857) * C29499) *
                C79) *
               C29439 * C1508) *
              C1510)) /
        (p * q * std::sqrt(p + q));
    d2eezz[0] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C214 * C215 - C544 * C93 - C214 * C443 + C29499 * C545) * C29484 *
                C77 +
            C572 * C78 + C573 * C79) *
               C29439 * C1507 -
           (C1980 * C79 + C1981 * C78 +
            (C214 * C728 - C544 * C618 - C214 * C916 + C29499 * C1012) *
                C29484 * C77) *
               C29439 * C1508) *
              C1509 +
          ((C1981 * C77 + C1980 * C78 +
            (C214 * C1625 - C544 * C1511 - C214 * C1857 + C29499 * C1964) *
                C29484 * C79) *
               C29439 * C1508 -
           (C574 * C79 + C573 * C78 + C572 * C77) * C29439 * C1507) *
              C1510)) /
        (p * q * std::sqrt(p + q));
    d2eexx[1] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  (((C87 * C98 - C88 * C93 - C87 * C99 + C77 * C108 +
                     C89 * C100 - C90 * C94 - C89 * C101 + C78 * C109 +
                     C91 * C102 - C92 * C95 - C91 * C103 + C79 * C110) *
                        C29499 * C29484 * C2031 -
                    (C91 * C1063 - C92 * C1057 - C91 * C1064 + C79 * C1075 +
                     C89 * C1065 - C90 * C1058 - C89 * C1066 + C78 * C1076 +
                     C87 * C1067 - C88 * C1059 - C87 * C1068 + C77 * C1077) *
                        C29499 * C29484 * C2032) *
                       C1507 +
                   ((C87 * C2556 - C88 * C2553 - C87 * C2557 + C77 * C2562 +
                     C89 * C2558 - C90 * C2554 - C89 * C2559 + C78 * C2563 +
                     C91 * C2560 - C92 * C2555 - C91 * C2561 + C79 * C2564) *
                        C29499 * C29484 * C2032 -
                    (C91 * C622 - C92 * C616 - C91 * C623 + C79 * C634 +
                     C89 * C624 - C90 * C617 - C89 * C625 + C78 * C635 +
                     C87 * C626 - C88 * C618 - C87 * C627 + C77 * C636) *
                        C29499 * C29484 * C2031) *
                       C1508) *
                  C29413) /
                 (p * q * std::sqrt(p + q));
    d2eexy[1] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((C29484 * C152 - C151 * C93) * C87 +
                     (C29484 * C157 - C151 * C99) * C77 + (C163 - C164) * C89 +
                     (C165 - C166) * C78 + C175 * C91 + C176 * C79) *
                        C29499 * C2031 +
                    ((C151 * C1059 - C29484 * C1119) * C87 +
                     (C151 * C1068 - C29484 * C1125) * C77 +
                     (C2090 - C2091) * C89 + (C2092 - C2093) * C78 +
                     (C2094 - C2095) * C91 + (C2096 - C2097) * C79) *
                        C29499 * C2032) *
                       C1507 +
                   (((C151 * C618 - C29484 * C678) * C87 +
                     (C151 * C627 - C29484 * C684) * C77 +
                     (C1568 - C1569) * C89 + (C1570 - C1571) * C78 +
                     (C1572 - C1573) * C91 + (C1574 - C1575) * C79) *
                        C29499 * C2031 +
                    ((C29484 * C2615 - C151 * C2553) * C87 +
                     (C29484 * C2618 - C151 * C2557) * C77 +
                     (C29484 * C2616 - C151 * C2554) * C89 +
                     (C29484 * C2619 - C151 * C2559) * C78 +
                     (C29484 * C2617 - C151 * C2555) * C91 +
                     (C29484 * C2620 - C151 * C2561) * C79) *
                        C29499 * C2032) *
                       C1508) *
                  C29413) /
                 (p * q * std::sqrt(p + q));
    d2eexz[1] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((C29499 * C215 - C214 * C93) * C87 +
                     (C29499 * C220 - C214 * C99) * C77 + (C226 - C227) * C89 +
                     (C228 - C229) * C78 + C238 * C91 + C239 * C79) *
                        C29484 * C2031 +
                    ((C214 * C1059 - C29499 * C1169) * C87 +
                     (C214 * C1068 - C29499 * C1175) * C77 +
                     (C2150 - C2151) * C89 + (C2152 - C2153) * C78 +
                     (C2154 - C2155) * C91 + (C2156 - C2157) * C79) *
                        C29484 * C2032) *
                       C1507 +
                   (((C214 * C618 - C29499 * C728) * C87 +
                     (C214 * C627 - C29499 * C734) * C77 +
                     (C1628 - C1629) * C89 + (C1630 - C1631) * C78 +
                     (C1632 - C1633) * C91 + (C1634 - C1635) * C79) *
                        C29484 * C2031 +
                    ((C29499 * C2671 - C214 * C2553) * C87 +
                     (C29499 * C2674 - C214 * C2557) * C77 +
                     (C29499 * C2672 - C214 * C2554) * C89 +
                     (C29499 * C2675 - C214 * C2559) * C78 +
                     (C29499 * C2673 - C214 * C2555) * C91 +
                     (C29499 * C2676 - C214 * C2561) * C79) *
                        C29484 * C2032) *
                       C1508) *
                  C29413) /
                 (p * q * std::sqrt(p + q));
    d2eeyx[1] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((C77 * C98 - C87 * C93 + C78 * C100 - C89 * C94 +
                      C79 * C102 - C91 * C95) *
                         C151 +
                     (C77 * C282 - C87 * C277 + C78 * C283 - C89 * C278 +
                      C79 * C284 - C91 * C279) *
                         C29484) *
                        C29499 * C2031 +
                    ((C87 * C1059 - C77 * C1067 + C89 * C1058 - C78 * C1065 +
                      C91 * C1057 - C79 * C1063) *
                         C151 +
                     (C87 * C1219 - C77 * C1225 + C89 * C1220 - C78 * C1226 +
                      C91 * C1221 - C79 * C1227) *
                         C29484) *
                        C29499 * C2032) *
                       C1507 +
                   (((C87 * C618 - C77 * C626 + C89 * C617 - C78 * C624 +
                      C91 * C616 - C79 * C622) *
                         C151 +
                     (C87 * C778 - C77 * C784 + C89 * C779 - C78 * C785 +
                      C91 * C780 - C79 * C786) *
                         C29484) *
                        C29499 * C2031 +
                    ((C77 * C2556 - C87 * C2553 + C78 * C2558 - C89 * C2554 +
                      C79 * C2560 - C91 * C2555) *
                         C151 +
                     (C77 * C2730 - C87 * C2727 + C78 * C2731 - C89 * C2728 +
                      C79 * C2732 - C91 * C2729) *
                         C29484) *
                        C29499 * C2032) *
                       C1508) *
                  C29413) /
                 (p * q * std::sqrt(p + q));
    d2eeyy[1] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C151 * C152 - C325 * C93 - C151 * C277 + C29484 * C326) * C77 +
            C350 * C78 + C351 * C79) *
               C29499 * C2031 -
           (C2273 * C79 + C2274 * C78 +
            (C151 * C1119 - C325 * C1059 - C151 * C1219 + C29484 * C1271) *
                C77) *
               C29499 * C2032) *
              C1507 +
          (((C151 * C2615 - C325 * C2553 - C151 * C2727 + C29484 * C2783) *
                C77 +
            (C151 * C2616 - C325 * C2554 - C151 * C2728 + C29484 * C2784) *
                C78 +
            (C151 * C2617 - C325 * C2555 - C151 * C2729 + C29484 * C2785) *
                C79) *
               C29499 * C2032 -
           (C1751 * C79 + C1752 * C78 +
            (C151 * C678 - C325 * C618 - C151 * C778 + C29484 * C830) * C77) *
               C29499 * C2031) *
              C1508) *
         C29413) /
        (p * q * std::sqrt(p + q));
    d2eeyz[1] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C29499 * C215 - C214 * C93) * C151 +
             (C29499 * C390 - C214 * C277) * C29484) *
                C77 +
            ((C226 - C227) * C151 + (C396 - C397) * C29484) * C78 +
            C405 * C79) *
               C2031 +
           (((C214 * C1059 - C29499 * C1169) * C151 +
             (C214 * C1219 - C29499 * C1313) * C29484) *
                C77 +
            ((C2150 - C2151) * C151 + (C2326 - C2327) * C29484) * C78 +
            ((C2154 - C2155) * C151 + (C2328 - C2329) * C29484) * C79) *
               C2032) *
              C1507 +
          ((((C214 * C618 - C29499 * C728) * C151 +
             (C214 * C778 - C29499 * C872) * C29484) *
                C77 +
            ((C1628 - C1629) * C151 + (C1804 - C1805) * C29484) * C78 +
            ((C1632 - C1633) * C151 + (C1806 - C1807) * C29484) * C79) *
               C2031 +
           (((C29499 * C2671 - C214 * C2553) * C151 +
             (C29499 * C2836 - C214 * C2727) * C29484) *
                C77 +
            ((C29499 * C2672 - C214 * C2554) * C151 +
             (C29499 * C2837 - C214 * C2728) * C29484) *
                C78 +
            ((C29499 * C2673 - C214 * C2555) * C151 +
             (C29499 * C2838 - C214 * C2729) * C29484) *
                C79) *
               C2032) *
              C1508) *
         C29413) /
        (p * q * std::sqrt(p + q));
    d2eezx[1] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((C77 * C98 - C87 * C93 + C78 * C100 - C89 * C94 +
                      C79 * C102 - C91 * C95) *
                         C214 +
                     (C77 * C448 - C87 * C443 + C78 * C449 - C89 * C444 +
                      C79 * C450 - C91 * C445) *
                         C29499) *
                        C29484 * C2031 +
                    ((C87 * C1059 - C77 * C1067 + C89 * C1058 - C78 * C1065 +
                      C91 * C1057 - C79 * C1063) *
                         C214 +
                     (C87 * C1357 - C77 * C1363 + C89 * C1358 - C78 * C1364 +
                      C91 * C1359 - C79 * C1365) *
                         C29499) *
                        C29484 * C2032) *
                       C1507 +
                   (((C87 * C618 - C77 * C626 + C89 * C617 - C78 * C624 +
                      C91 * C616 - C79 * C622) *
                         C214 +
                     (C87 * C916 - C77 * C922 + C89 * C917 - C78 * C923 +
                      C91 * C918 - C79 * C924) *
                         C29499) *
                        C29484 * C2031 +
                    ((C77 * C2556 - C87 * C2553 + C78 * C2558 - C89 * C2554 +
                      C79 * C2560 - C91 * C2555) *
                         C214 +
                     (C77 * C2892 - C87 * C2889 + C78 * C2893 - C89 * C2890 +
                      C79 * C2894 - C91 * C2891) *
                         C29499) *
                        C29484 * C2032) *
                       C1508) *
                  C29413) /
                 (p * q * std::sqrt(p + q));
    d2eezy[1] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C29484 * C152 - C151 * C93) * C214 +
             (C29484 * C491 - C151 * C443) * C29499) *
                C77 +
            ((C163 - C164) * C214 + (C497 - C498) * C29499) * C78 +
            C506 * C79) *
               C2031 +
           (((C151 * C1059 - C29484 * C1119) * C214 +
             (C151 * C1357 - C29484 * C1407) * C29499) *
                C77 +
            ((C2090 - C2091) * C214 + (C2433 - C2434) * C29499) * C78 +
            ((C2094 - C2095) * C214 + (C2435 - C2436) * C29499) * C79) *
               C2032) *
              C1507 +
          ((((C151 * C618 - C29484 * C678) * C214 +
             (C151 * C916 - C29484 * C966) * C29499) *
                C77 +
            ((C1568 - C1569) * C214 + (C1911 - C1912) * C29499) * C78 +
            ((C1572 - C1573) * C214 + (C1913 - C1914) * C29499) * C79) *
               C2031 +
           (((C29484 * C2615 - C151 * C2553) * C214 +
             (C29484 * C2945 - C151 * C2889) * C29499) *
                C77 +
            ((C29484 * C2616 - C151 * C2554) * C214 +
             (C29484 * C2946 - C151 * C2890) * C29499) *
                C78 +
            ((C29484 * C2617 - C151 * C2555) * C214 +
             (C29484 * C2947 - C151 * C2891) * C29499) *
                C79) *
               C2032) *
              C1508) *
         C29413) /
        (p * q * std::sqrt(p + q));
    d2eezz[1] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C214 * C215 - C544 * C93 - C214 * C443 + C29499 * C545) * C29484 *
                C77 +
            C572 * C78 + C573 * C79) *
               C2031 -
           (C2502 * C79 + C2503 * C78 +
            (C214 * C1169 - C544 * C1059 - C214 * C1357 + C29499 * C1453) *
                C29484 * C77) *
               C2032) *
              C1507 +
          (((C214 * C2671 - C544 * C2553 - C214 * C2889 + C29499 * C2998) *
                C29484 * C77 +
            (C214 * C2672 - C544 * C2554 - C214 * C2890 + C29499 * C2999) *
                C29484 * C78 +
            (C214 * C2673 - C544 * C2555 - C214 * C2891 + C29499 * C3000) *
                C29484 * C79) *
               C2032 -
           (C1980 * C79 + C1981 * C78 +
            (C214 * C728 - C544 * C618 - C214 * C916 + C29499 * C1012) *
                C29484 * C77) *
               C2031) *
              C1508) *
         C29413) /
        (p * q * std::sqrt(p + q));
    d2eexx[2] += (-std::pow(Pi, 2.5) *
                  ((C87 * C98 - C88 * C93 - C87 * C99 + C77 * C108 +
                    C89 * C100 - C90 * C94 - C89 * C101 + C78 * C109 +
                    C91 * C102 - C92 * C95 - C91 * C103 + C79 * C110) *
                       C29499 * C29484 * C29439 * C612 -
                   (C91 * C622 - C92 * C616 - C91 * C623 + C79 * C634 +
                    C89 * C624 - C90 * C617 - C89 * C625 + C78 * C635 +
                    C87 * C626 - C88 * C618 - C87 * C627 + C77 * C636) *
                       C29499 * C29484 * C29439 * C613 +
                   (C87 * C628 - C88 * C619 - C87 * C629 + C77 * C637 +
                    C89 * C630 - C90 * C620 - C89 * C631 + C78 * C638 +
                    C91 * C632 - C92 * C621 - C91 * C633 + C79 * C639) *
                       C29499 * C29484 * C29439 * C614) *
                  C29413) /
                     (p * q * std::sqrt(p + q)) -
                 (std::pow(Pi, 2.5) *
                  ((C87 * C98 - C88 * C93 - C87 * C99 + C77 * C108 +
                    C89 * C100 - C90 * C94 - C89 * C101 + C78 * C109 +
                    C91 * C102 - C92 * C95 - C91 * C103 + C79 * C110) *
                       C29499 * C29484 * C29439 * C29425 * C84 -
                   (C91 * C104 - C92 * C96 - C91 * C105 + C79 * C111 +
                    C89 * C102 - C90 * C95 - C89 * C103 + C78 * C110 +
                    C87 * C100 - C88 * C94 - C87 * C101 + C77 * C109) *
                       C29499 * C29484 * C29439 * C29425 * C85 +
                   (C87 * C102 - C88 * C95 - C87 * C103 + C77 * C110 +
                    C89 * C104 - C90 * C96 - C89 * C105 + C78 * C111 +
                    C91 * C106 - C92 * C97 - C91 * C107 + C79 * C112) *
                       C29499 * C29484 * C29439 * C29425 * C86)) /
                     (p * q * std::sqrt(p + q)) +
                 (2 * std::pow(Pi, 2.5) *
                  ((C87 * C98 - C88 * C93 - C87 * C99 + C77 * C108 +
                    C89 * C100 - C90 * C94 - C89 * C101 + C78 * C109 +
                    C91 * C102 - C92 * C95 - C91 * C103 + C79 * C110) *
                       C29499 * C29484 * C1054 -
                   (C91 * C1063 - C92 * C1057 - C91 * C1064 + C79 * C1075 +
                    C89 * C1065 - C90 * C1058 - C89 * C1066 + C78 * C1076 +
                    C87 * C1067 - C88 * C1059 - C87 * C1068 + C77 * C1077) *
                       C29499 * C29484 * C1055 +
                   (C87 * C1069 - C88 * C1060 - C87 * C1070 + C77 * C1078 +
                    C89 * C1071 - C90 * C1061 - C89 * C1072 + C78 * C1079 +
                    C91 * C1073 - C92 * C1062 - C91 * C1074 + C79 * C1080) *
                       C29499 * C29484 * C1056) *
                  C29425 * C29413) /
                     (p * q * std::sqrt(p + q));
    d2eexy[2] +=
        (-std::pow(Pi, 2.5) *
         (((C29484 * C152 - C151 * C93) * C87 +
           (C29484 * C157 - C151 * C99) * C77 + (C163 - C164) * C89 +
           (C165 - C166) * C78 + C175 * C91 + C176 * C79) *
              C29499 * C29439 * C612 +
          ((C151 * C618 - C29484 * C678) * C87 +
           (C151 * C627 - C29484 * C684) * C77 +
           (C151 * C617 - C29484 * C679) * C89 +
           (C151 * C625 - C29484 * C685) * C78 +
           (C151 * C616 - C29484 * C680) * C91 +
           (C151 * C623 - C29484 * C686) * C79) *
              C29499 * C29439 * C613 +
          ((C29484 * C681 - C151 * C619) * C87 +
           (C29484 * C687 - C151 * C629) * C77 +
           (C29484 * C682 - C151 * C620) * C89 +
           (C29484 * C688 - C151 * C631) * C78 +
           (C29484 * C683 - C151 * C621) * C91 +
           (C29484 * C689 - C151 * C633) * C79) *
              C29499 * C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C29484 * C152 - C151 * C93) * C87 +
           (C29484 * C157 - C151 * C99) * C77 + (C163 - C164) * C89 +
           (C165 - C166) * C78 + C175 * C91 + C176 * C79) *
              C29499 * C29439 * C29425 * C84 +
          ((C164 - C163) * C87 + (C166 - C165) * C77 + (C168 - C167) * C89 +
           (C170 - C169) * C78 + (C171 - C172) * C91 + (C173 - C174) * C79) *
              C29499 * C29439 * C29425 * C85 +
          (C175 * C87 + C176 * C77 + (C172 - C171) * C89 + (C174 - C173) * C78 +
           (C29484 * C156 - C151 * C97) * C91 +
           (C29484 * C161 - C151 * C107) * C79) *
              C29499 * C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C29484 * C152 - C151 * C93) * C87 +
           (C29484 * C157 - C151 * C99) * C77 + (C163 - C164) * C89 +
           (C165 - C166) * C78 + C175 * C91 + C176 * C79) *
              C29499 * C1054 +
          ((C151 * C1059 - C29484 * C1119) * C87 +
           (C151 * C1068 - C29484 * C1125) * C77 +
           (C151 * C1058 - C29484 * C1120) * C89 +
           (C151 * C1066 - C29484 * C1126) * C78 +
           (C151 * C1057 - C29484 * C1121) * C91 +
           (C151 * C1064 - C29484 * C1127) * C79) *
              C29499 * C1055 +
          ((C29484 * C1122 - C151 * C1060) * C87 +
           (C29484 * C1128 - C151 * C1070) * C77 +
           (C29484 * C1123 - C151 * C1061) * C89 +
           (C29484 * C1129 - C151 * C1072) * C78 +
           (C29484 * C1124 - C151 * C1062) * C91 +
           (C29484 * C1130 - C151 * C1074) * C79) *
              C29499 * C1056) *
         C29425 * C29413) /
            (p * q * std::sqrt(p + q));
    d2eexz[2] +=
        (-std::pow(Pi, 2.5) *
         (((C29499 * C215 - C214 * C93) * C87 +
           (C29499 * C220 - C214 * C99) * C77 + (C226 - C227) * C89 +
           (C228 - C229) * C78 + C238 * C91 + C239 * C79) *
              C29484 * C29439 * C612 +
          ((C214 * C618 - C29499 * C728) * C87 +
           (C214 * C627 - C29499 * C734) * C77 +
           (C214 * C617 - C29499 * C729) * C89 +
           (C214 * C625 - C29499 * C735) * C78 +
           (C214 * C616 - C29499 * C730) * C91 +
           (C214 * C623 - C29499 * C736) * C79) *
              C29484 * C29439 * C613 +
          ((C29499 * C731 - C214 * C619) * C87 +
           (C29499 * C737 - C214 * C629) * C77 +
           (C29499 * C732 - C214 * C620) * C89 +
           (C29499 * C738 - C214 * C631) * C78 +
           (C29499 * C733 - C214 * C621) * C91 +
           (C29499 * C739 - C214 * C633) * C79) *
              C29484 * C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C29499 * C215 - C214 * C93) * C87 +
           (C29499 * C220 - C214 * C99) * C77 + (C226 - C227) * C89 +
           (C228 - C229) * C78 + C238 * C91 + C239 * C79) *
              C29484 * C29439 * C29425 * C84 +
          ((C227 - C226) * C87 + (C229 - C228) * C77 + (C231 - C230) * C89 +
           (C233 - C232) * C78 + (C234 - C235) * C91 + (C236 - C237) * C79) *
              C29484 * C29439 * C29425 * C85 +
          (C238 * C87 + C239 * C77 + (C235 - C234) * C89 + (C237 - C236) * C78 +
           (C29499 * C219 - C214 * C97) * C91 +
           (C29499 * C224 - C214 * C107) * C79) *
              C29484 * C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C29499 * C215 - C214 * C93) * C87 +
           (C29499 * C220 - C214 * C99) * C77 + (C226 - C227) * C89 +
           (C228 - C229) * C78 + C238 * C91 + C239 * C79) *
              C29484 * C1054 +
          ((C214 * C1059 - C29499 * C1169) * C87 +
           (C214 * C1068 - C29499 * C1175) * C77 +
           (C214 * C1058 - C29499 * C1170) * C89 +
           (C214 * C1066 - C29499 * C1176) * C78 +
           (C214 * C1057 - C29499 * C1171) * C91 +
           (C214 * C1064 - C29499 * C1177) * C79) *
              C29484 * C1055 +
          ((C29499 * C1172 - C214 * C1060) * C87 +
           (C29499 * C1178 - C214 * C1070) * C77 +
           (C29499 * C1173 - C214 * C1061) * C89 +
           (C29499 * C1179 - C214 * C1072) * C78 +
           (C29499 * C1174 - C214 * C1062) * C91 +
           (C29499 * C1180 - C214 * C1074) * C79) *
              C29484 * C1056) *
         C29425 * C29413) /
            (p * q * std::sqrt(p + q));
    d2eeyx[2] += (-std::pow(Pi, 2.5) *
                  (((C77 * C98 - C87 * C93 + C78 * C100 - C89 * C94 +
                     C79 * C102 - C91 * C95) *
                        C151 +
                    (C77 * C282 - C87 * C277 + C78 * C283 - C89 * C278 +
                     C79 * C284 - C91 * C279) *
                        C29484) *
                       C29499 * C29439 * C612 +
                   ((C87 * C618 - C77 * C626 + C89 * C617 - C78 * C624 +
                     C91 * C616 - C79 * C622) *
                        C151 +
                    (C87 * C778 - C77 * C784 + C89 * C779 - C78 * C785 +
                     C91 * C780 - C79 * C786) *
                        C29484) *
                       C29499 * C29439 * C613 +
                   ((C77 * C628 - C87 * C619 + C78 * C630 - C89 * C620 +
                     C79 * C632 - C91 * C621) *
                        C151 +
                    (C77 * C787 - C87 * C781 + C78 * C788 - C89 * C782 +
                     C79 * C789 - C91 * C783) *
                        C29484) *
                       C29499 * C29439 * C614) *
                  C29413) /
                     (p * q * std::sqrt(p + q)) -
                 (std::pow(Pi, 2.5) * (((C77 * C98 - C87 * C93 + C78 * C100 -
                                         C89 * C94 + C79 * C102 - C91 * C95) *
                                            C151 +
                                        (C77 * C282 - C87 * C277 + C78 * C283 -
                                         C89 * C278 + C79 * C284 - C91 * C279) *
                                            C29484) *
                                           C29499 * C29439 * C29425 * C84 +
                                       ((C87 * C94 - C77 * C100 + C89 * C95 -
                                         C78 * C102 + C91 * C96 - C79 * C104) *
                                            C151 +
                                        (C87 * C278 - C77 * C283 + C89 * C279 -
                                         C78 * C284 + C91 * C280 - C79 * C285) *
                                            C29484) *
                                           C29499 * C29439 * C29425 * C85 +
                                       ((C77 * C102 - C87 * C95 + C78 * C104 -
                                         C89 * C96 + C79 * C106 - C91 * C97) *
                                            C151 +
                                        (C77 * C284 - C87 * C279 + C78 * C285 -
                                         C89 * C280 + C79 * C286 - C91 * C281) *
                                            C29484) *
                                           C29499 * C29439 * C29425 * C86)) /
                     (p * q * std::sqrt(p + q)) +
                 (2 * std::pow(Pi, 2.5) *
                  (((C77 * C98 - C87 * C93 + C78 * C100 - C89 * C94 +
                     C79 * C102 - C91 * C95) *
                        C151 +
                    (C77 * C282 - C87 * C277 + C78 * C283 - C89 * C278 +
                     C79 * C284 - C91 * C279) *
                        C29484) *
                       C29499 * C1054 +
                   ((C87 * C1059 - C77 * C1067 + C89 * C1058 - C78 * C1065 +
                     C91 * C1057 - C79 * C1063) *
                        C151 +
                    (C87 * C1219 - C77 * C1225 + C89 * C1220 - C78 * C1226 +
                     C91 * C1221 - C79 * C1227) *
                        C29484) *
                       C29499 * C1055 +
                   ((C77 * C1069 - C87 * C1060 + C78 * C1071 - C89 * C1061 +
                     C79 * C1073 - C91 * C1062) *
                        C151 +
                    (C77 * C1228 - C87 * C1222 + C78 * C1229 - C89 * C1223 +
                     C79 * C1230 - C91 * C1224) *
                        C29484) *
                       C29499 * C1056) *
                  C29425 * C29413) /
                     (p * q * std::sqrt(p + q));
    d2eeyy[2] +=
        (-std::pow(Pi, 2.5) *
         (((C151 * C152 - C325 * C93 - C151 * C277 + C29484 * C326) * C77 +
           C350 * C78 + C351 * C79) *
              C29499 * C29439 * C612 -
          ((C151 * C680 - C325 * C616 - C151 * C780 + C29484 * C828) * C79 +
           (C151 * C679 - C325 * C617 - C151 * C779 + C29484 * C829) * C78 +
           (C151 * C678 - C325 * C618 - C151 * C778 + C29484 * C830) * C77) *
              C29499 * C29439 * C613 +
          ((C151 * C681 - C325 * C619 - C151 * C781 + C29484 * C831) * C77 +
           (C151 * C682 - C325 * C620 - C151 * C782 + C29484 * C832) * C78 +
           (C151 * C683 - C325 * C621 - C151 * C783 + C29484 * C833) * C79) *
              C29499 * C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C151 * C152 - C325 * C93 - C151 * C277 + C29484 * C326) * C77 +
           C350 * C78 + C351 * C79) *
              C29499 * C29439 * C29425 * C84 -
          (C352 * C79 + C351 * C78 + C350 * C77) * C29499 * C29439 * C29425 *
              C85 +
          (C351 * C77 + C352 * C78 +
           (C151 * C156 - C325 * C97 - C151 * C281 + C29484 * C330) * C79) *
              C29499 * C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C151 * C152 - C325 * C93 - C151 * C277 + C29484 * C326) * C77 +
           C350 * C78 + C351 * C79) *
              C29499 * C1054 -
          ((C151 * C1121 - C325 * C1057 - C151 * C1221 + C29484 * C1269) * C79 +
           (C151 * C1120 - C325 * C1058 - C151 * C1220 + C29484 * C1270) * C78 +
           (C151 * C1119 - C325 * C1059 - C151 * C1219 + C29484 * C1271) *
               C77) *
              C29499 * C1055 +
          ((C151 * C1122 - C325 * C1060 - C151 * C1222 + C29484 * C1272) * C77 +
           (C151 * C1123 - C325 * C1061 - C151 * C1223 + C29484 * C1273) * C78 +
           (C151 * C1124 - C325 * C1062 - C151 * C1224 + C29484 * C1274) *
               C79) *
              C29499 * C1056) *
         C29425 * C29413) /
            (p * q * std::sqrt(p + q));
    d2eeyz[2] +=
        (-std::pow(Pi, 2.5) *
         ((((C29499 * C215 - C214 * C93) * C151 +
            (C29499 * C390 - C214 * C277) * C29484) *
               C77 +
           ((C226 - C227) * C151 + (C396 - C397) * C29484) * C78 + C405 * C79) *
              C29439 * C612 +
          (((C214 * C618 - C29499 * C728) * C151 +
            (C214 * C778 - C29499 * C872) * C29484) *
               C77 +
           ((C214 * C617 - C29499 * C729) * C151 +
            (C214 * C779 - C29499 * C873) * C29484) *
               C78 +
           ((C214 * C616 - C29499 * C730) * C151 +
            (C214 * C780 - C29499 * C874) * C29484) *
               C79) *
              C29439 * C613 +
          (((C29499 * C731 - C214 * C619) * C151 +
            (C29499 * C875 - C214 * C781) * C29484) *
               C77 +
           ((C29499 * C732 - C214 * C620) * C151 +
            (C29499 * C876 - C214 * C782) * C29484) *
               C78 +
           ((C29499 * C733 - C214 * C621) * C151 +
            (C29499 * C877 - C214 * C783) * C29484) *
               C79) *
              C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C29499 * C215 - C214 * C93) * C151 +
            (C29499 * C390 - C214 * C277) * C29484) *
               C77 +
           ((C226 - C227) * C151 + (C396 - C397) * C29484) * C78 + C405 * C79) *
              C29439 * C29425 * C84 +
          (((C227 - C226) * C151 + (C397 - C396) * C29484) * C77 +
           ((C231 - C230) * C151 + (C400 - C399) * C29484) * C78 +
           ((C234 - C235) * C151 + (C401 - C402) * C29484) * C79) *
              C29439 * C29425 * C85 +
          (C405 * C77 + ((C235 - C234) * C151 + (C402 - C401) * C29484) * C78 +
           ((C29499 * C219 - C214 * C97) * C151 +
            (C29499 * C394 - C214 * C281) * C29484) *
               C79) *
              C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C29499 * C215 - C214 * C93) * C151 +
            (C29499 * C390 - C214 * C277) * C29484) *
               C77 +
           ((C226 - C227) * C151 + (C396 - C397) * C29484) * C78 + C405 * C79) *
              C1054 +
          (((C214 * C1059 - C29499 * C1169) * C151 +
            (C214 * C1219 - C29499 * C1313) * C29484) *
               C77 +
           ((C214 * C1058 - C29499 * C1170) * C151 +
            (C214 * C1220 - C29499 * C1314) * C29484) *
               C78 +
           ((C214 * C1057 - C29499 * C1171) * C151 +
            (C214 * C1221 - C29499 * C1315) * C29484) *
               C79) *
              C1055 +
          (((C29499 * C1172 - C214 * C1060) * C151 +
            (C29499 * C1316 - C214 * C1222) * C29484) *
               C77 +
           ((C29499 * C1173 - C214 * C1061) * C151 +
            (C29499 * C1317 - C214 * C1223) * C29484) *
               C78 +
           ((C29499 * C1174 - C214 * C1062) * C151 +
            (C29499 * C1318 - C214 * C1224) * C29484) *
               C79) *
              C1056) *
         C29425 * C29413) /
            (p * q * std::sqrt(p + q));
    d2eezx[2] += (-std::pow(Pi, 2.5) *
                  (((C77 * C98 - C87 * C93 + C78 * C100 - C89 * C94 +
                     C79 * C102 - C91 * C95) *
                        C214 +
                    (C77 * C448 - C87 * C443 + C78 * C449 - C89 * C444 +
                     C79 * C450 - C91 * C445) *
                        C29499) *
                       C29484 * C29439 * C612 +
                   ((C87 * C618 - C77 * C626 + C89 * C617 - C78 * C624 +
                     C91 * C616 - C79 * C622) *
                        C214 +
                    (C87 * C916 - C77 * C922 + C89 * C917 - C78 * C923 +
                     C91 * C918 - C79 * C924) *
                        C29499) *
                       C29484 * C29439 * C613 +
                   ((C77 * C628 - C87 * C619 + C78 * C630 - C89 * C620 +
                     C79 * C632 - C91 * C621) *
                        C214 +
                    (C77 * C925 - C87 * C919 + C78 * C926 - C89 * C920 +
                     C79 * C927 - C91 * C921) *
                        C29499) *
                       C29484 * C29439 * C614) *
                  C29413) /
                     (p * q * std::sqrt(p + q)) -
                 (std::pow(Pi, 2.5) * (((C77 * C98 - C87 * C93 + C78 * C100 -
                                         C89 * C94 + C79 * C102 - C91 * C95) *
                                            C214 +
                                        (C77 * C448 - C87 * C443 + C78 * C449 -
                                         C89 * C444 + C79 * C450 - C91 * C445) *
                                            C29499) *
                                           C29484 * C29439 * C29425 * C84 +
                                       ((C87 * C94 - C77 * C100 + C89 * C95 -
                                         C78 * C102 + C91 * C96 - C79 * C104) *
                                            C214 +
                                        (C87 * C444 - C77 * C449 + C89 * C445 -
                                         C78 * C450 + C91 * C446 - C79 * C451) *
                                            C29499) *
                                           C29484 * C29439 * C29425 * C85 +
                                       ((C77 * C102 - C87 * C95 + C78 * C104 -
                                         C89 * C96 + C79 * C106 - C91 * C97) *
                                            C214 +
                                        (C77 * C450 - C87 * C445 + C78 * C451 -
                                         C89 * C446 + C79 * C452 - C91 * C447) *
                                            C29499) *
                                           C29484 * C29439 * C29425 * C86)) /
                     (p * q * std::sqrt(p + q)) +
                 (2 * std::pow(Pi, 2.5) *
                  (((C77 * C98 - C87 * C93 + C78 * C100 - C89 * C94 +
                     C79 * C102 - C91 * C95) *
                        C214 +
                    (C77 * C448 - C87 * C443 + C78 * C449 - C89 * C444 +
                     C79 * C450 - C91 * C445) *
                        C29499) *
                       C29484 * C1054 +
                   ((C87 * C1059 - C77 * C1067 + C89 * C1058 - C78 * C1065 +
                     C91 * C1057 - C79 * C1063) *
                        C214 +
                    (C87 * C1357 - C77 * C1363 + C89 * C1358 - C78 * C1364 +
                     C91 * C1359 - C79 * C1365) *
                        C29499) *
                       C29484 * C1055 +
                   ((C77 * C1069 - C87 * C1060 + C78 * C1071 - C89 * C1061 +
                     C79 * C1073 - C91 * C1062) *
                        C214 +
                    (C77 * C1366 - C87 * C1360 + C78 * C1367 - C89 * C1361 +
                     C79 * C1368 - C91 * C1362) *
                        C29499) *
                       C29484 * C1056) *
                  C29425 * C29413) /
                     (p * q * std::sqrt(p + q));
    d2eezy[2] +=
        (-std::pow(Pi, 2.5) *
         ((((C29484 * C152 - C151 * C93) * C214 +
            (C29484 * C491 - C151 * C443) * C29499) *
               C77 +
           ((C163 - C164) * C214 + (C497 - C498) * C29499) * C78 + C506 * C79) *
              C29439 * C612 +
          (((C151 * C618 - C29484 * C678) * C214 +
            (C151 * C916 - C29484 * C966) * C29499) *
               C77 +
           ((C151 * C617 - C29484 * C679) * C214 +
            (C151 * C917 - C29484 * C967) * C29499) *
               C78 +
           ((C151 * C616 - C29484 * C680) * C214 +
            (C151 * C918 - C29484 * C968) * C29499) *
               C79) *
              C29439 * C613 +
          (((C29484 * C681 - C151 * C619) * C214 +
            (C29484 * C969 - C151 * C919) * C29499) *
               C77 +
           ((C29484 * C682 - C151 * C620) * C214 +
            (C29484 * C970 - C151 * C920) * C29499) *
               C78 +
           ((C29484 * C683 - C151 * C621) * C214 +
            (C29484 * C971 - C151 * C921) * C29499) *
               C79) *
              C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C29484 * C152 - C151 * C93) * C214 +
            (C29484 * C491 - C151 * C443) * C29499) *
               C77 +
           ((C163 - C164) * C214 + (C497 - C498) * C29499) * C78 + C506 * C79) *
              C29439 * C29425 * C84 +
          (((C164 - C163) * C214 + (C498 - C497) * C29499) * C77 +
           ((C168 - C167) * C214 + (C501 - C500) * C29499) * C78 +
           ((C171 - C172) * C214 + (C502 - C503) * C29499) * C79) *
              C29439 * C29425 * C85 +
          (C506 * C77 + ((C172 - C171) * C214 + (C503 - C502) * C29499) * C78 +
           ((C29484 * C156 - C151 * C97) * C214 +
            (C29484 * C495 - C151 * C447) * C29499) *
               C79) *
              C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C29484 * C152 - C151 * C93) * C214 +
            (C29484 * C491 - C151 * C443) * C29499) *
               C77 +
           ((C163 - C164) * C214 + (C497 - C498) * C29499) * C78 + C506 * C79) *
              C1054 +
          (((C151 * C1059 - C29484 * C1119) * C214 +
            (C151 * C1357 - C29484 * C1407) * C29499) *
               C77 +
           ((C151 * C1058 - C29484 * C1120) * C214 +
            (C151 * C1358 - C29484 * C1408) * C29499) *
               C78 +
           ((C151 * C1057 - C29484 * C1121) * C214 +
            (C151 * C1359 - C29484 * C1409) * C29499) *
               C79) *
              C1055 +
          (((C29484 * C1122 - C151 * C1060) * C214 +
            (C29484 * C1410 - C151 * C1360) * C29499) *
               C77 +
           ((C29484 * C1123 - C151 * C1061) * C214 +
            (C29484 * C1411 - C151 * C1361) * C29499) *
               C78 +
           ((C29484 * C1124 - C151 * C1062) * C214 +
            (C29484 * C1412 - C151 * C1362) * C29499) *
               C79) *
              C1056) *
         C29425 * C29413) /
            (p * q * std::sqrt(p + q));
    d2eezz[2] +=
        (-std::pow(Pi, 2.5) *
         (((C214 * C215 - C544 * C93 - C214 * C443 + C29499 * C545) * C29484 *
               C77 +
           C572 * C78 + C573 * C79) *
              C29439 * C612 -
          ((C214 * C730 - C544 * C616 - C214 * C918 + C29499 * C1010) * C29484 *
               C79 +
           (C214 * C729 - C544 * C617 - C214 * C917 + C29499 * C1011) * C29484 *
               C78 +
           (C214 * C728 - C544 * C618 - C214 * C916 + C29499 * C1012) * C29484 *
               C77) *
              C29439 * C613 +
          ((C214 * C731 - C544 * C619 - C214 * C919 + C29499 * C1013) * C29484 *
               C77 +
           (C214 * C732 - C544 * C620 - C214 * C920 + C29499 * C1014) * C29484 *
               C78 +
           (C214 * C733 - C544 * C621 - C214 * C921 + C29499 * C1015) * C29484 *
               C79) *
              C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C214 * C215 - C544 * C93 - C214 * C443 + C29499 * C545) * C29484 *
               C77 +
           C572 * C78 + C573 * C79) *
              C29439 * C29425 * C84 -
          (C574 * C79 + C573 * C78 + C572 * C77) * C29439 * C29425 * C85 +
          (C573 * C77 + C574 * C78 +
           (C214 * C219 - C544 * C97 - C214 * C447 + C29499 * C549) * C29484 *
               C79) *
              C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C214 * C215 - C544 * C93 - C214 * C443 + C29499 * C545) * C29484 *
               C77 +
           C572 * C78 + C573 * C79) *
              C1054 -
          ((C214 * C1171 - C544 * C1057 - C214 * C1359 + C29499 * C1451) *
               C29484 * C79 +
           (C214 * C1170 - C544 * C1058 - C214 * C1358 + C29499 * C1452) *
               C29484 * C78 +
           (C214 * C1169 - C544 * C1059 - C214 * C1357 + C29499 * C1453) *
               C29484 * C77) *
              C1055 +
          ((C214 * C1172 - C544 * C1060 - C214 * C1360 + C29499 * C1454) *
               C29484 * C77 +
           (C214 * C1173 - C544 * C1061 - C214 * C1361 + C29499 * C1455) *
               C29484 * C78 +
           (C214 * C1174 - C544 * C1062 - C214 * C1362 + C29499 * C1456) *
               C29484 * C79) *
              C1056) *
         C29425 * C29413) /
            (p * q * std::sqrt(p + q));
    d2eexx[3] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  (((C87 * C98 - C88 * C93 - C87 * C99 + C77 * C108 +
                     C89 * C100 - C90 * C94 - C89 * C101 + C78 * C109 +
                     C91 * C102 - C92 * C95 - C91 * C103 + C79 * C110) *
                        C29499 * C29484 * C2031 -
                    (C91 * C1063 - C92 * C1057 - C91 * C1064 + C79 * C1075 +
                     C89 * C1065 - C90 * C1058 - C89 * C1066 + C78 * C1076 +
                     C87 * C1067 - C88 * C1059 - C87 * C1068 + C77 * C1077) *
                        C29499 * C29484 * C2032) *
                       C29425 * C1509 +
                   ((C87 * C1065 - C88 * C1058 - C87 * C1066 + C77 * C1076 +
                     C89 * C1063 - C90 * C1057 - C89 * C1064 + C78 * C1075 +
                     C91 * C2034 - C92 * C2033 - C91 * C2035 + C79 * C2036) *
                        C29499 * C29484 * C2032 -
                    (C91 * C104 - C92 * C96 - C91 * C105 + C79 * C111 +
                     C89 * C102 - C90 * C95 - C89 * C103 + C78 * C110 +
                     C87 * C100 - C88 * C94 - C87 * C101 + C77 * C109) *
                        C29499 * C29484 * C2031) *
                       C29425 * C1510)) /
                 (p * q * std::sqrt(p + q));
    d2eexy[3] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C29484 * C152 - C151 * C93) * C87 +
            (C29484 * C157 - C151 * C99) * C77 + (C163 - C164) * C89 +
            (C165 - C166) * C78 + C175 * C91 + C176 * C79) *
               C29499 * C2031 +
           ((C151 * C1059 - C29484 * C1119) * C87 +
            (C151 * C1068 - C29484 * C1125) * C77 + (C2090 - C2091) * C89 +
            (C2092 - C2093) * C78 + (C2094 - C2095) * C91 +
            (C2096 - C2097) * C79) *
               C29499 * C2032) *
              C29425 * C1509 +
          (((C164 - C163) * C87 + (C166 - C165) * C77 + (C168 - C167) * C89 +
            (C170 - C169) * C78 + (C171 - C172) * C91 + (C173 - C174) * C79) *
               C29499 * C2031 +
           ((C2091 - C2090) * C87 + (C2093 - C2092) * C77 +
            (C2095 - C2094) * C89 + (C2097 - C2096) * C78 +
            (C29484 * C2087 - C151 * C2033) * C91 +
            (C29484 * C2088 - C151 * C2035) * C79) *
               C29499 * C2032) *
              C29425 * C1510)) /
        (p * q * std::sqrt(p + q));
    d2eexz[3] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C29499 * C215 - C214 * C93) * C87 +
            (C29499 * C220 - C214 * C99) * C77 + (C226 - C227) * C89 +
            (C228 - C229) * C78 + C238 * C91 + C239 * C79) *
               C29484 * C2031 +
           ((C214 * C1059 - C29499 * C1169) * C87 +
            (C214 * C1068 - C29499 * C1175) * C77 + (C2150 - C2151) * C89 +
            (C2152 - C2153) * C78 + (C2154 - C2155) * C91 +
            (C2156 - C2157) * C79) *
               C29484 * C2032) *
              C29425 * C1509 +
          (((C227 - C226) * C87 + (C229 - C228) * C77 + (C231 - C230) * C89 +
            (C233 - C232) * C78 + (C234 - C235) * C91 + (C236 - C237) * C79) *
               C29484 * C2031 +
           ((C2151 - C2150) * C87 + (C2153 - C2152) * C77 +
            (C2155 - C2154) * C89 + (C2157 - C2156) * C78 +
            (C29499 * C2147 - C214 * C2033) * C91 +
            (C29499 * C2148 - C214 * C2035) * C79) *
               C29484 * C2032) *
              C29425 * C1510)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[3] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((C77 * C98 - C87 * C93 + C78 * C100 - C89 * C94 +
                      C79 * C102 - C91 * C95) *
                         C151 +
                     (C77 * C282 - C87 * C277 + C78 * C283 - C89 * C278 +
                      C79 * C284 - C91 * C279) *
                         C29484) *
                        C29499 * C2031 +
                    ((C87 * C1059 - C77 * C1067 + C89 * C1058 - C78 * C1065 +
                      C91 * C1057 - C79 * C1063) *
                         C151 +
                     (C87 * C1219 - C77 * C1225 + C89 * C1220 - C78 * C1226 +
                      C91 * C1221 - C79 * C1227) *
                         C29484) *
                        C29499 * C2032) *
                       C29425 * C1509 +
                   (((C87 * C94 - C77 * C100 + C89 * C95 - C78 * C102 +
                      C91 * C96 - C79 * C104) *
                         C151 +
                     (C87 * C278 - C77 * C283 + C89 * C279 - C78 * C284 +
                      C91 * C280 - C79 * C285) *
                         C29484) *
                        C29499 * C2031 +
                    ((C77 * C1065 - C87 * C1058 + C78 * C1063 - C89 * C1057 +
                      C79 * C2034 - C91 * C2033) *
                         C151 +
                     (C77 * C1226 - C87 * C1220 + C78 * C1227 - C89 * C1221 +
                      C79 * C2208 - C91 * C2207) *
                         C29484) *
                        C29499 * C2032) *
                       C29425 * C1510)) /
                 (p * q * std::sqrt(p + q));
    d2eeyy[3] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C151 * C152 - C325 * C93 - C151 * C277 + C29484 * C326) * C77 +
            C350 * C78 + C351 * C79) *
               C29499 * C2031 -
           (C2273 * C79 + C2274 * C78 +
            (C151 * C1119 - C325 * C1059 - C151 * C1219 + C29484 * C1271) *
                C77) *
               C29499 * C2032) *
              C29425 * C1509 +
          ((C2274 * C77 + C2273 * C78 +
            (C151 * C2087 - C325 * C2033 - C151 * C2207 + C29484 * C2259) *
                C79) *
               C29499 * C2032 -
           (C352 * C79 + C351 * C78 + C350 * C77) * C29499 * C2031) *
              C29425 * C1510)) /
        (p * q * std::sqrt(p + q));
    d2eeyz[3] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C29499 * C215 - C214 * C93) * C151 +
             (C29499 * C390 - C214 * C277) * C29484) *
                C77 +
            ((C226 - C227) * C151 + (C396 - C397) * C29484) * C78 +
            C405 * C79) *
               C2031 +
           (((C214 * C1059 - C29499 * C1169) * C151 +
             (C214 * C1219 - C29499 * C1313) * C29484) *
                C77 +
            ((C2150 - C2151) * C151 + (C2326 - C2327) * C29484) * C78 +
            ((C2154 - C2155) * C151 + (C2328 - C2329) * C29484) * C79) *
               C2032) *
              C29425 * C1509 +
          ((((C227 - C226) * C151 + (C397 - C396) * C29484) * C77 +
            ((C231 - C230) * C151 + (C400 - C399) * C29484) * C78 +
            ((C234 - C235) * C151 + (C401 - C402) * C29484) * C79) *
               C2031 +
           (((C2151 - C2150) * C151 + (C2327 - C2326) * C29484) * C77 +
            ((C2155 - C2154) * C151 + (C2329 - C2328) * C29484) * C78 +
            ((C29499 * C2147 - C214 * C2033) * C151 +
             (C29499 * C2324 - C214 * C2207) * C29484) *
                C79) *
               C2032) *
              C29425 * C1510)) /
        (p * q * std::sqrt(p + q));
    d2eezx[3] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((C77 * C98 - C87 * C93 + C78 * C100 - C89 * C94 +
                      C79 * C102 - C91 * C95) *
                         C214 +
                     (C77 * C448 - C87 * C443 + C78 * C449 - C89 * C444 +
                      C79 * C450 - C91 * C445) *
                         C29499) *
                        C29484 * C2031 +
                    ((C87 * C1059 - C77 * C1067 + C89 * C1058 - C78 * C1065 +
                      C91 * C1057 - C79 * C1063) *
                         C214 +
                     (C87 * C1357 - C77 * C1363 + C89 * C1358 - C78 * C1364 +
                      C91 * C1359 - C79 * C1365) *
                         C29499) *
                        C29484 * C2032) *
                       C29425 * C1509 +
                   (((C87 * C94 - C77 * C100 + C89 * C95 - C78 * C102 +
                      C91 * C96 - C79 * C104) *
                         C214 +
                     (C87 * C444 - C77 * C449 + C89 * C445 - C78 * C450 +
                      C91 * C446 - C79 * C451) *
                         C29499) *
                        C29484 * C2031 +
                    ((C77 * C1065 - C87 * C1058 + C78 * C1063 - C89 * C1057 +
                      C79 * C2034 - C91 * C2033) *
                         C214 +
                     (C77 * C1364 - C87 * C1358 + C78 * C1365 - C89 * C1359 +
                      C79 * C2380 - C91 * C2379) *
                         C29499) *
                        C29484 * C2032) *
                       C29425 * C1510)) /
                 (p * q * std::sqrt(p + q));
    d2eezy[3] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C29484 * C152 - C151 * C93) * C214 +
             (C29484 * C491 - C151 * C443) * C29499) *
                C77 +
            ((C163 - C164) * C214 + (C497 - C498) * C29499) * C78 +
            C506 * C79) *
               C2031 +
           (((C151 * C1059 - C29484 * C1119) * C214 +
             (C151 * C1357 - C29484 * C1407) * C29499) *
                C77 +
            ((C2090 - C2091) * C214 + (C2433 - C2434) * C29499) * C78 +
            ((C2094 - C2095) * C214 + (C2435 - C2436) * C29499) * C79) *
               C2032) *
              C29425 * C1509 +
          ((((C164 - C163) * C214 + (C498 - C497) * C29499) * C77 +
            ((C168 - C167) * C214 + (C501 - C500) * C29499) * C78 +
            ((C171 - C172) * C214 + (C502 - C503) * C29499) * C79) *
               C2031 +
           (((C2091 - C2090) * C214 + (C2434 - C2433) * C29499) * C77 +
            ((C2095 - C2094) * C214 + (C2436 - C2435) * C29499) * C78 +
            ((C29484 * C2087 - C151 * C2033) * C214 +
             (C29484 * C2431 - C151 * C2379) * C29499) *
                C79) *
               C2032) *
              C29425 * C1510)) /
        (p * q * std::sqrt(p + q));
    d2eezz[3] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C214 * C215 - C544 * C93 - C214 * C443 + C29499 * C545) * C29484 *
                C77 +
            C572 * C78 + C573 * C79) *
               C2031 -
           (C2502 * C79 + C2503 * C78 +
            (C214 * C1169 - C544 * C1059 - C214 * C1357 + C29499 * C1453) *
                C29484 * C77) *
               C2032) *
              C29425 * C1509 +
          ((C2503 * C77 + C2502 * C78 +
            (C214 * C2147 - C544 * C2033 - C214 * C2379 + C29499 * C2486) *
                C29484 * C79) *
               C2032 -
           (C574 * C79 + C573 * C78 + C572 * C77) * C2031) *
              C29425 * C1510)) /
        (p * q * std::sqrt(p + q));
    d2eexx[4] += (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((C87 * C98 - C88 * C93 - C87 * C99 + C77 * C108 +
                    C89 * C100 - C90 * C94 - C89 * C101 + C78 * C109 +
                    C91 * C102 - C92 * C95 - C91 * C103 + C79 * C110) *
                       C29499 * C29484 * C29439 * C29425 * C84 -
                   (C91 * C104 - C92 * C96 - C91 * C105 + C79 * C111 +
                    C89 * C102 - C90 * C95 - C89 * C103 + C78 * C110 +
                    C87 * C100 - C88 * C94 - C87 * C101 + C77 * C109) *
                       C29499 * C29484 * C29439 * C29425 * C85 +
                   (C87 * C102 - C88 * C95 - C87 * C103 + C77 * C110 +
                    C89 * C104 - C90 * C96 - C89 * C105 + C78 * C111 +
                    C91 * C106 - C92 * C97 - C91 * C107 + C79 * C112) *
                       C29499 * C29484 * C29439 * C29425 * C86)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((C87 * C98 - C88 * C93 - C87 * C99 + C77 * C108 +
                    C89 * C100 - C90 * C94 - C89 * C101 + C78 * C109 +
                    C91 * C102 - C92 * C95 - C91 * C103 + C79 * C110) *
                       C29499 * C29484 * C29439 * C612 -
                   (C91 * C622 - C92 * C616 - C91 * C623 + C79 * C634 +
                    C89 * C624 - C90 * C617 - C89 * C625 + C78 * C635 +
                    C87 * C626 - C88 * C618 - C87 * C627 + C77 * C636) *
                       C29499 * C29484 * C29439 * C613 +
                   (C87 * C628 - C88 * C619 - C87 * C629 + C77 * C637 +
                    C89 * C630 - C90 * C620 - C89 * C631 + C78 * C638 +
                    C91 * C632 - C92 * C621 - C91 * C633 + C79 * C639) *
                       C29499 * C29484 * C29439 * C614) *
                  C29413) /
                     (p * q * std::sqrt(p + q));
    d2eexy[4] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C29484 * C152 - C151 * C93) * C87 +
           (C29484 * C157 - C151 * C99) * C77 + (C163 - C164) * C89 +
           (C165 - C166) * C78 + C175 * C91 + C176 * C79) *
              C29499 * C29439 * C29425 * C84 +
          ((C164 - C163) * C87 + (C166 - C165) * C77 + (C168 - C167) * C89 +
           (C170 - C169) * C78 + (C171 - C172) * C91 + (C173 - C174) * C79) *
              C29499 * C29439 * C29425 * C85 +
          (C175 * C87 + C176 * C77 + (C172 - C171) * C89 + (C174 - C173) * C78 +
           (C29484 * C156 - C151 * C97) * C91 +
           (C29484 * C161 - C151 * C107) * C79) *
              C29499 * C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C29484 * C152 - C151 * C93) * C87 +
           (C29484 * C157 - C151 * C99) * C77 + (C163 - C164) * C89 +
           (C165 - C166) * C78 + C175 * C91 + C176 * C79) *
              C29499 * C29439 * C612 +
          ((C151 * C618 - C29484 * C678) * C87 +
           (C151 * C627 - C29484 * C684) * C77 +
           (C151 * C617 - C29484 * C679) * C89 +
           (C151 * C625 - C29484 * C685) * C78 +
           (C151 * C616 - C29484 * C680) * C91 +
           (C151 * C623 - C29484 * C686) * C79) *
              C29499 * C29439 * C613 +
          ((C29484 * C681 - C151 * C619) * C87 +
           (C29484 * C687 - C151 * C629) * C77 +
           (C29484 * C682 - C151 * C620) * C89 +
           (C29484 * C688 - C151 * C631) * C78 +
           (C29484 * C683 - C151 * C621) * C91 +
           (C29484 * C689 - C151 * C633) * C79) *
              C29499 * C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q));
    d2eexz[4] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C29499 * C215 - C214 * C93) * C87 +
           (C29499 * C220 - C214 * C99) * C77 + (C226 - C227) * C89 +
           (C228 - C229) * C78 + C238 * C91 + C239 * C79) *
              C29484 * C29439 * C29425 * C84 +
          ((C227 - C226) * C87 + (C229 - C228) * C77 + (C231 - C230) * C89 +
           (C233 - C232) * C78 + (C234 - C235) * C91 + (C236 - C237) * C79) *
              C29484 * C29439 * C29425 * C85 +
          (C238 * C87 + C239 * C77 + (C235 - C234) * C89 + (C237 - C236) * C78 +
           (C29499 * C219 - C214 * C97) * C91 +
           (C29499 * C224 - C214 * C107) * C79) *
              C29484 * C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C29499 * C215 - C214 * C93) * C87 +
           (C29499 * C220 - C214 * C99) * C77 + (C226 - C227) * C89 +
           (C228 - C229) * C78 + C238 * C91 + C239 * C79) *
              C29484 * C29439 * C612 +
          ((C214 * C618 - C29499 * C728) * C87 +
           (C214 * C627 - C29499 * C734) * C77 +
           (C214 * C617 - C29499 * C729) * C89 +
           (C214 * C625 - C29499 * C735) * C78 +
           (C214 * C616 - C29499 * C730) * C91 +
           (C214 * C623 - C29499 * C736) * C79) *
              C29484 * C29439 * C613 +
          ((C29499 * C731 - C214 * C619) * C87 +
           (C29499 * C737 - C214 * C629) * C77 +
           (C29499 * C732 - C214 * C620) * C89 +
           (C29499 * C738 - C214 * C631) * C78 +
           (C29499 * C733 - C214 * C621) * C91 +
           (C29499 * C739 - C214 * C633) * C79) *
              C29484 * C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q));
    d2eeyx[4] += (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((C77 * C98 - C87 * C93 + C78 * C100 - C89 * C94 +
                     C79 * C102 - C91 * C95) *
                        C151 +
                    (C77 * C282 - C87 * C277 + C78 * C283 - C89 * C278 +
                     C79 * C284 - C91 * C279) *
                        C29484) *
                       C29499 * C29439 * C29425 * C84 +
                   ((C87 * C94 - C77 * C100 + C89 * C95 - C78 * C102 +
                     C91 * C96 - C79 * C104) *
                        C151 +
                    (C87 * C278 - C77 * C283 + C89 * C279 - C78 * C284 +
                     C91 * C280 - C79 * C285) *
                        C29484) *
                       C29499 * C29439 * C29425 * C85 +
                   ((C77 * C102 - C87 * C95 + C78 * C104 - C89 * C96 +
                     C79 * C106 - C91 * C97) *
                        C151 +
                    (C77 * C284 - C87 * C279 + C78 * C285 - C89 * C280 +
                     C79 * C286 - C91 * C281) *
                        C29484) *
                       C29499 * C29439 * C29425 * C86)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((C77 * C98 - C87 * C93 + C78 * C100 - C89 * C94 +
                     C79 * C102 - C91 * C95) *
                        C151 +
                    (C77 * C282 - C87 * C277 + C78 * C283 - C89 * C278 +
                     C79 * C284 - C91 * C279) *
                        C29484) *
                       C29499 * C29439 * C612 +
                   ((C87 * C618 - C77 * C626 + C89 * C617 - C78 * C624 +
                     C91 * C616 - C79 * C622) *
                        C151 +
                    (C87 * C778 - C77 * C784 + C89 * C779 - C78 * C785 +
                     C91 * C780 - C79 * C786) *
                        C29484) *
                       C29499 * C29439 * C613 +
                   ((C77 * C628 - C87 * C619 + C78 * C630 - C89 * C620 +
                     C79 * C632 - C91 * C621) *
                        C151 +
                    (C77 * C787 - C87 * C781 + C78 * C788 - C89 * C782 +
                     C79 * C789 - C91 * C783) *
                        C29484) *
                       C29499 * C29439 * C614) *
                  C29413) /
                     (p * q * std::sqrt(p + q));
    d2eeyy[4] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C151 * C152 - C325 * C93 - C151 * C277 + C29484 * C326) * C77 +
           C350 * C78 + C351 * C79) *
              C29499 * C29439 * C29425 * C84 -
          (C352 * C79 + C351 * C78 + C350 * C77) * C29499 * C29439 * C29425 *
              C85 +
          (C351 * C77 + C352 * C78 +
           (C151 * C156 - C325 * C97 - C151 * C281 + C29484 * C330) * C79) *
              C29499 * C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C151 * C152 - C325 * C93 - C151 * C277 + C29484 * C326) * C77 +
           C350 * C78 + C351 * C79) *
              C29499 * C29439 * C612 -
          ((C151 * C680 - C325 * C616 - C151 * C780 + C29484 * C828) * C79 +
           (C151 * C679 - C325 * C617 - C151 * C779 + C29484 * C829) * C78 +
           (C151 * C678 - C325 * C618 - C151 * C778 + C29484 * C830) * C77) *
              C29499 * C29439 * C613 +
          ((C151 * C681 - C325 * C619 - C151 * C781 + C29484 * C831) * C77 +
           (C151 * C682 - C325 * C620 - C151 * C782 + C29484 * C832) * C78 +
           (C151 * C683 - C325 * C621 - C151 * C783 + C29484 * C833) * C79) *
              C29499 * C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q));
    d2eeyz[4] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C29499 * C215 - C214 * C93) * C151 +
            (C29499 * C390 - C214 * C277) * C29484) *
               C77 +
           ((C226 - C227) * C151 + (C396 - C397) * C29484) * C78 + C405 * C79) *
              C29439 * C29425 * C84 +
          (((C227 - C226) * C151 + (C397 - C396) * C29484) * C77 +
           ((C231 - C230) * C151 + (C400 - C399) * C29484) * C78 +
           ((C234 - C235) * C151 + (C401 - C402) * C29484) * C79) *
              C29439 * C29425 * C85 +
          (C405 * C77 + ((C235 - C234) * C151 + (C402 - C401) * C29484) * C78 +
           ((C29499 * C219 - C214 * C97) * C151 +
            (C29499 * C394 - C214 * C281) * C29484) *
               C79) *
              C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C29499 * C215 - C214 * C93) * C151 +
            (C29499 * C390 - C214 * C277) * C29484) *
               C77 +
           ((C226 - C227) * C151 + (C396 - C397) * C29484) * C78 + C405 * C79) *
              C29439 * C612 +
          (((C214 * C618 - C29499 * C728) * C151 +
            (C214 * C778 - C29499 * C872) * C29484) *
               C77 +
           ((C214 * C617 - C29499 * C729) * C151 +
            (C214 * C779 - C29499 * C873) * C29484) *
               C78 +
           ((C214 * C616 - C29499 * C730) * C151 +
            (C214 * C780 - C29499 * C874) * C29484) *
               C79) *
              C29439 * C613 +
          (((C29499 * C731 - C214 * C619) * C151 +
            (C29499 * C875 - C214 * C781) * C29484) *
               C77 +
           ((C29499 * C732 - C214 * C620) * C151 +
            (C29499 * C876 - C214 * C782) * C29484) *
               C78 +
           ((C29499 * C733 - C214 * C621) * C151 +
            (C29499 * C877 - C214 * C783) * C29484) *
               C79) *
              C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q));
    d2eezx[4] += (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((C77 * C98 - C87 * C93 + C78 * C100 - C89 * C94 +
                     C79 * C102 - C91 * C95) *
                        C214 +
                    (C77 * C448 - C87 * C443 + C78 * C449 - C89 * C444 +
                     C79 * C450 - C91 * C445) *
                        C29499) *
                       C29484 * C29439 * C29425 * C84 +
                   ((C87 * C94 - C77 * C100 + C89 * C95 - C78 * C102 +
                     C91 * C96 - C79 * C104) *
                        C214 +
                    (C87 * C444 - C77 * C449 + C89 * C445 - C78 * C450 +
                     C91 * C446 - C79 * C451) *
                        C29499) *
                       C29484 * C29439 * C29425 * C85 +
                   ((C77 * C102 - C87 * C95 + C78 * C104 - C89 * C96 +
                     C79 * C106 - C91 * C97) *
                        C214 +
                    (C77 * C450 - C87 * C445 + C78 * C451 - C89 * C446 +
                     C79 * C452 - C91 * C447) *
                        C29499) *
                       C29484 * C29439 * C29425 * C86)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((C77 * C98 - C87 * C93 + C78 * C100 - C89 * C94 +
                     C79 * C102 - C91 * C95) *
                        C214 +
                    (C77 * C448 - C87 * C443 + C78 * C449 - C89 * C444 +
                     C79 * C450 - C91 * C445) *
                        C29499) *
                       C29484 * C29439 * C612 +
                   ((C87 * C618 - C77 * C626 + C89 * C617 - C78 * C624 +
                     C91 * C616 - C79 * C622) *
                        C214 +
                    (C87 * C916 - C77 * C922 + C89 * C917 - C78 * C923 +
                     C91 * C918 - C79 * C924) *
                        C29499) *
                       C29484 * C29439 * C613 +
                   ((C77 * C628 - C87 * C619 + C78 * C630 - C89 * C620 +
                     C79 * C632 - C91 * C621) *
                        C214 +
                    (C77 * C925 - C87 * C919 + C78 * C926 - C89 * C920 +
                     C79 * C927 - C91 * C921) *
                        C29499) *
                       C29484 * C29439 * C614) *
                  C29413) /
                     (p * q * std::sqrt(p + q));
    d2eezy[4] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C29484 * C152 - C151 * C93) * C214 +
            (C29484 * C491 - C151 * C443) * C29499) *
               C77 +
           ((C163 - C164) * C214 + (C497 - C498) * C29499) * C78 + C506 * C79) *
              C29439 * C29425 * C84 +
          (((C164 - C163) * C214 + (C498 - C497) * C29499) * C77 +
           ((C168 - C167) * C214 + (C501 - C500) * C29499) * C78 +
           ((C171 - C172) * C214 + (C502 - C503) * C29499) * C79) *
              C29439 * C29425 * C85 +
          (C506 * C77 + ((C172 - C171) * C214 + (C503 - C502) * C29499) * C78 +
           ((C29484 * C156 - C151 * C97) * C214 +
            (C29484 * C495 - C151 * C447) * C29499) *
               C79) *
              C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C29484 * C152 - C151 * C93) * C214 +
            (C29484 * C491 - C151 * C443) * C29499) *
               C77 +
           ((C163 - C164) * C214 + (C497 - C498) * C29499) * C78 + C506 * C79) *
              C29439 * C612 +
          (((C151 * C618 - C29484 * C678) * C214 +
            (C151 * C916 - C29484 * C966) * C29499) *
               C77 +
           ((C151 * C617 - C29484 * C679) * C214 +
            (C151 * C917 - C29484 * C967) * C29499) *
               C78 +
           ((C151 * C616 - C29484 * C680) * C214 +
            (C151 * C918 - C29484 * C968) * C29499) *
               C79) *
              C29439 * C613 +
          (((C29484 * C681 - C151 * C619) * C214 +
            (C29484 * C969 - C151 * C919) * C29499) *
               C77 +
           ((C29484 * C682 - C151 * C620) * C214 +
            (C29484 * C970 - C151 * C920) * C29499) *
               C78 +
           ((C29484 * C683 - C151 * C621) * C214 +
            (C29484 * C971 - C151 * C921) * C29499) *
               C79) *
              C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q));
    d2eezz[4] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C214 * C215 - C544 * C93 - C214 * C443 + C29499 * C545) * C29484 *
               C77 +
           C572 * C78 + C573 * C79) *
              C29439 * C29425 * C84 -
          (C574 * C79 + C573 * C78 + C572 * C77) * C29439 * C29425 * C85 +
          (C573 * C77 + C574 * C78 +
           (C214 * C219 - C544 * C97 - C214 * C447 + C29499 * C549) * C29484 *
               C79) *
              C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C214 * C215 - C544 * C93 - C214 * C443 + C29499 * C545) * C29484 *
               C77 +
           C572 * C78 + C573 * C79) *
              C29439 * C612 -
          ((C214 * C730 - C544 * C616 - C214 * C918 + C29499 * C1010) * C29484 *
               C79 +
           (C214 * C729 - C544 * C617 - C214 * C917 + C29499 * C1011) * C29484 *
               C78 +
           (C214 * C728 - C544 * C618 - C214 * C916 + C29499 * C1012) * C29484 *
               C77) *
              C29439 * C613 +
          ((C214 * C731 - C544 * C619 - C214 * C919 + C29499 * C1013) * C29484 *
               C77 +
           (C214 * C732 - C544 * C620 - C214 * C920 + C29499 * C1014) * C29484 *
               C78 +
           (C214 * C733 - C544 * C621 - C214 * C921 + C29499 * C1015) * C29484 *
               C79) *
              C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q));
    d2eexx[5] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C3055 * C98 - C3056 * C93 - C3055 * C99 + C3051 * C108 +
             C3057 * C100 - C3058 * C94 - C3057 * C101 + C29548 * C109) *
                C29499 * C3053 +
            (C3602 + C3603) * C29499 * C29555) *
               C29439 * C1507 -
           ((C3604 + C3605) * C29499 * C29555 +
            (C3603 + C3602) * C29499 * C3053) *
               C29439 * C1508) *
              C1509 +
          (((C4653 + C4654) * C29499 * C3053 +
            (C3055 * C630 - C3056 * C620 - C3055 * C631 + C3051 * C638 +
             C3057 * C632 - C3058 * C621 - C3057 * C633 + C29548 * C639) *
                C29499 * C29555) *
               C29439 * C1508 -
           ((C4654 + C4653) * C29499 * C29555 +
            (C3057 * C102 - C3058 * C95 - C3057 * C103 + C29548 * C110 +
             C3055 * C100 - C3056 * C94 - C3055 * C101 + C3051 * C109) *
                C29499 * C3053) *
               C29439 * C1507) *
              C1510)) /
        (p * q * std::sqrt(p + q));
    d2eexy[5] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C3053 * C152 - C3109 * C93 + C29555 * C678 - C3110 * C618) *
                C3055 +
            (C3053 * C157 - C3109 * C99 + C29555 * C684 - C3110 * C627) *
                C3051 +
            (C3112 - C3113 + C3114 - C3115) * C3057 +
            (C3116 - C3117 + C3118 - C3119) * C29548) *
               C29499 * C29439 * C1507 +
           ((C3109 * C618 - C3053 * C678 + C3110 * C619 - C29555 * C681) *
                C3055 +
            (C3109 * C627 - C3053 * C684 + C3110 * C629 - C29555 * C687) *
                C3051 +
            (C4721 - C4722 + C4723 - C4724) * C3057 +
            (C4725 - C4726 + C4727 - C4728) * C29548) *
               C29499 * C29439 * C1508) *
              C1509 +
          (((C3113 - C3112 + C3115 - C3114) * C3055 +
            (C3117 - C3116 + C3119 - C3118) * C3051 +
            (C3120 - C3121 + C3122 - C3123) * C3057 +
            (C3124 - C3125 + C3126 - C3127) * C29548) *
               C29499 * C29439 * C1507 +
           ((C4722 - C4721 + C4724 - C4723) * C3055 +
            (C4726 - C4725 + C4728 - C4727) * C3051 +
            (C3053 * C680 - C3109 * C616 + C29555 * C683 - C3110 * C621) *
                C3057 +
            (C3053 * C686 - C3109 * C623 + C29555 * C689 - C3110 * C633) *
                C29548) *
               C29499 * C29439 * C1508) *
              C1510)) /
        (p * q * std::sqrt(p + q));
    d2eexz[5] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  (((((C29499 * C215 - C214 * C93) * C3055 +
                      (C29499 * C220 - C214 * C99) * C3051 +
                      (C226 - C227) * C3057 + (C228 - C229) * C29548) *
                         C3053 +
                     ((C3714 - C3715) * C3055 + (C3716 - C3717) * C3051 +
                      C4795 * C3057 + C4796 * C29548) *
                         C29555) *
                        C29439 * C1507 +
                    (((C3715 - C3714) * C3055 + (C3717 - C3716) * C3051 +
                      C4797 * C3057 + C4798 * C29548) *
                         C3053 +
                     ((C3718 - C3719) * C3055 + (C3720 - C3721) * C3051 +
                      (C3722 - C3723) * C3057 + (C3724 - C3725) * C29548) *
                         C29555) *
                        C29439 * C1508) *
                       C1509 +
                   ((((C227 - C226) * C3055 + (C229 - C228) * C3051 +
                      (C231 - C230) * C3057 + (C233 - C232) * C29548) *
                         C3053 +
                     (C4797 * C3055 + C4798 * C3051 + (C1632 - C1633) * C3057 +
                      (C1634 - C1635) * C29548) *
                         C29555) *
                        C29439 * C1507 +
                    ((C4795 * C3055 + C4796 * C3051 + (C1633 - C1632) * C3057 +
                      (C1635 - C1634) * C29548) *
                         C3053 +
                     ((C3723 - C3722) * C3055 + (C3725 - C3724) * C3051 +
                      (C29499 * C733 - C214 * C621) * C3057 +
                      (C29499 * C739 - C214 * C633) * C29548) *
                         C29555) *
                        C29439 * C1508) *
                       C1510)) /
                 (p * q * std::sqrt(p + q));
    d2eeyx[5] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C3051 * C98 - C3055 * C93 + C29548 * C100 - C3057 * C94) * C3109 +
            (C3051 * C282 - C3055 * C277 + C29548 * C283 - C3057 * C278) *
                C3053 +
            (C3780 - C3781 + C3782 - C3783) * C3110 +
            (C3784 - C3785 + C3786 - C3787) * C29555) *
               C29499 * C29439 * C1507 +
           ((C3781 - C3780 + C3783 - C3782) * C3109 +
            (C3785 - C3784 + C3787 - C3786) * C3053 +
            (C3788 - C3789 + C3790 - C3791) * C3110 +
            (C3792 - C3793 + C3794 - C3795) * C29555) *
               C29499 * C29439 * C1508) *
              C1509 +
          (((C3055 * C94 - C3051 * C100 + C3057 * C95 - C29548 * C102) * C3109 +
            (C3055 * C278 - C3051 * C283 + C3057 * C279 - C29548 * C284) *
                C3053 +
            (C4865 - C4866 + C4867 - C4868) * C3110 +
            (C4869 - C4870 + C4871 - C4872) * C29555) *
               C29499 * C29439 * C1507 +
           ((C4866 - C4865 + C4868 - C4867) * C3109 +
            (C4870 - C4869 + C4872 - C4871) * C3053 +
            (C3051 * C630 - C3055 * C620 + C29548 * C632 - C3057 * C621) *
                C3110 +
            (C3051 * C788 - C3055 * C782 + C29548 * C789 - C3057 * C783) *
                C29555) *
               C29499 * C29439 * C1508) *
              C1510)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[5] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C3109 * C152 - C3277 * C93 - C3109 * C277 + C3053 * C326 +
             C3110 * C678 - C3278 * C618 - C3110 * C778 + C29555 * C830) *
                C3051 +
            (C3304 + C3305) * C29548) *
               C29499 * C29439 * C1507 -
           ((C4951 + C4952) * C29548 +
            (C3110 * C681 - C3278 * C619 - C3110 * C781 + C29555 * C831 +
             C3109 * C678 - C3277 * C618 - C3109 * C778 + C3053 * C830) *
                C3051) *
               C29499 * C29439 * C1508) *
              C1509 +
          (((C4952 + C4951) * C3051 +
            (C3109 * C680 - C3277 * C616 - C3109 * C780 + C3053 * C828 +
             C3110 * C683 - C3278 * C621 - C3110 * C783 + C29555 * C833) *
                C29548) *
               C29499 * C29439 * C1508 -
           ((C3306 + C3307) * C29548 + (C3305 + C3304) * C3051) * C29499 *
               C29439 * C1507) *
              C1510)) /
        (p * q * std::sqrt(p + q));
    d2eeyz[5] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  (((((C29499 * C215 - C214 * C93) * C3109 +
                      (C29499 * C390 - C214 * C277) * C3053 +
                      (C3714 - C3715) * C3110 + (C3900 - C3901) * C29555) *
                         C3051 +
                     ((C226 - C227) * C3109 + (C396 - C397) * C3053 +
                      C4795 * C3110 + C5019 * C29555) *
                         C29548) *
                        C29439 * C1507 +
                    (((C3715 - C3714) * C3109 + (C3901 - C3900) * C3053 +
                      (C3718 - C3719) * C3110 + (C3902 - C3903) * C29555) *
                         C3051 +
                     (C4797 * C3109 + C5020 * C3053 + (C3722 - C3723) * C3110 +
                      (C3904 - C3905) * C29555) *
                         C29548) *
                        C29439 * C1508) *
                       C1509 +
                   ((((C227 - C226) * C3109 + (C397 - C396) * C3053 +
                      C4797 * C3110 + C5020 * C29555) *
                         C3051 +
                     ((C231 - C230) * C3109 + (C400 - C399) * C3053 +
                      (C1632 - C1633) * C3110 + (C1806 - C1807) * C29555) *
                         C29548) *
                        C29439 * C1507 +
                    ((C4795 * C3109 + C5019 * C3053 + (C3723 - C3722) * C3110 +
                      (C3905 - C3904) * C29555) *
                         C3051 +
                     ((C1633 - C1632) * C3109 + (C1807 - C1806) * C3053 +
                      (C29499 * C733 - C214 * C621) * C3110 +
                      (C29499 * C877 - C214 * C783) * C29555) *
                         C29548) *
                        C29439 * C1508) *
                       C1510)) /
                 (p * q * std::sqrt(p + q));
    d2eezx[5] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C3051 * C98 - C3055 * C93 + C29548 * C100 - C3057 * C94) * C214 +
             (C3051 * C448 - C3055 * C443 + C29548 * C449 - C3057 * C444) *
                 C29499) *
                C3053 +
            ((C3780 - C3781 + C3782 - C3783) * C214 +
             (C3960 - C3961 + C3962 - C3963) * C29499) *
                C29555) *
               C29439 * C1507 +
           (((C3781 - C3780 + C3783 - C3782) * C214 +
             (C3961 - C3960 + C3963 - C3962) * C29499) *
                C3053 +
            ((C3788 - C3789 + C3790 - C3791) * C214 +
             (C3964 - C3965 + C3966 - C3967) * C29499) *
                C29555) *
               C29439 * C1508) *
              C1509 +
          ((((C3055 * C94 - C3051 * C100 + C3057 * C95 - C29548 * C102) * C214 +
             (C3055 * C444 - C3051 * C449 + C3057 * C445 - C29548 * C450) *
                 C29499) *
                C3053 +
            ((C4865 - C4866 + C4867 - C4868) * C214 +
             (C5087 - C5088 + C5089 - C5090) * C29499) *
                C29555) *
               C29439 * C1507 +
           (((C4866 - C4865 + C4868 - C4867) * C214 +
             (C5088 - C5087 + C5090 - C5089) * C29499) *
                C3053 +
            ((C3051 * C630 - C3055 * C620 + C29548 * C632 - C3057 * C621) *
                 C214 +
             (C3051 * C926 - C3055 * C920 + C29548 * C927 - C3057 * C921) *
                 C29499) *
                C29555) *
               C29439 * C1508) *
              C1510)) /
        (p * q * std::sqrt(p + q));
    d2eezy[5] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C3053 * C152 - C3109 * C93 + C29555 * C678 - C3110 * C618) *
                 C214 +
             (C3053 * C491 - C3109 * C443 + C29555 * C966 - C3110 * C916) *
                 C29499) *
                C3051 +
            ((C3112 - C3113 + C3114 - C3115) * C214 +
             (C3458 - C3459 + C3460 - C3461) * C29499) *
                C29548) *
               C29439 * C1507 +
           (((C3109 * C618 - C3053 * C678 + C3110 * C619 - C29555 * C681) *
                 C214 +
             (C3109 * C916 - C3053 * C966 + C3110 * C919 - C29555 * C969) *
                 C29499) *
                C3051 +
            ((C4721 - C4722 + C4723 - C4724) * C214 +
             (C5157 - C5158 + C5159 - C5160) * C29499) *
                C29548) *
               C29439 * C1508) *
              C1509 +
          ((((C3113 - C3112 + C3115 - C3114) * C214 +
             (C3459 - C3458 + C3461 - C3460) * C29499) *
                C3051 +
            ((C3120 - C3121 + C3122 - C3123) * C214 +
             (C3462 - C3463 + C3464 - C3465) * C29499) *
                C29548) *
               C29439 * C1507 +
           (((C4722 - C4721 + C4724 - C4723) * C214 +
             (C5158 - C5157 + C5160 - C5159) * C29499) *
                C3051 +
            ((C3053 * C680 - C3109 * C616 + C29555 * C683 - C3110 * C621) *
                 C214 +
             (C3053 * C968 - C3109 * C918 + C29555 * C971 - C3110 * C921) *
                 C29499) *
                C29548) *
               C29439 * C1508) *
              C1510)) /
        (p * q * std::sqrt(p + q));
    d2eezz[5] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C214 * C215 - C544 * C93 - C214 * C443 + C29499 * C545) * C3053 +
             C4090 * C29555) *
                C3051 +
            (C3516 + C3517) * C29548) *
               C29439 * C1507 -
           ((C5227 + C5228) * C29548 +
            (C4092 * C29555 + C4090 * C3053) * C3051) *
               C29439 * C1508) *
              C1509 +
          (((C5228 + C5227) * C3051 +
            (C1978 * C3053 +
             (C214 * C733 - C544 * C621 - C214 * C921 + C29499 * C1015) *
                 C29555) *
                C29548) *
               C29439 * C1508 -
           ((C3518 + C3519) * C29548 + (C3517 + C3516) * C3051) * C29439 *
               C1507) *
              C1510)) /
        (p * q * std::sqrt(p + q));
    d2eexx[6] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C3055 * C98 - C3056 * C93 - C3055 * C99 + C3051 * C108 +
             C3057 * C100 - C3058 * C94 - C3057 * C101 + C29548 * C109) *
                C29499 * C3053 +
            (C3602 + C3603) * C29499 * C29555) *
               C2031 -
           ((C5950 + C5951) * C29499 * C29555 +
            (C3057 * C1065 - C3058 * C1058 - C3057 * C1066 + C29548 * C1076 +
             C3055 * C1067 - C3056 * C1059 - C3055 * C1068 + C3051 * C1077) *
                C29499 * C3053) *
               C2032) *
              C1507 +
          (((C5951 + C5950) * C29499 * C3053 +
            (C3055 * C5931 - C3056 * C5929 - C3055 * C5932 + C3051 * C5935 +
             C3057 * C5933 - C3058 * C5930 - C3057 * C5934 + C29548 * C5936) *
                C29499 * C29555) *
               C2032 -
           ((C3604 + C3605) * C29499 * C29555 +
            (C3603 + C3602) * C29499 * C3053) *
               C2031) *
              C1508) *
         C29413) /
        (p * q * std::sqrt(p + q));
    d2eexy[6] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C3053 * C152 - C3109 * C93 + C29555 * C678 - C3110 * C618) *
                C3055 +
            (C3053 * C157 - C3109 * C99 + C29555 * C684 - C3110 * C627) *
                C3051 +
            (C3112 - C3113 + C3114 - C3115) * C3057 +
            (C3116 - C3117 + C3118 - C3119) * C29548) *
               C29499 * C2031 +
           ((C3109 * C1059 - C3053 * C1119 + C3110 * C2553 - C29555 * C2615) *
                C3055 +
            (C3109 * C1068 - C3053 * C1125 + C3110 * C2557 - C29555 * C2618) *
                C3051 +
            (C5361 - C5362 + C5363 - C5364) * C3057 +
            (C5365 - C5366 + C5367 - C5368) * C29548) *
               C29499 * C2032) *
              C1507 +
          (((C3109 * C618 - C3053 * C678 + C3110 * C619 - C29555 * C681) *
                C3055 +
            (C3109 * C627 - C3053 * C684 + C3110 * C629 - C29555 * C687) *
                C3051 +
            (C4721 - C4722 + C4723 - C4724) * C3057 +
            (C4725 - C4726 + C4727 - C4728) * C29548) *
               C29499 * C2031 +
           ((C3053 * C2615 - C3109 * C2553 + C29555 * C6017 - C3110 * C5929) *
                C3055 +
            (C3053 * C2618 - C3109 * C2557 + C29555 * C6019 - C3110 * C5932) *
                C3051 +
            (C3053 * C2616 - C3109 * C2554 + C29555 * C6018 - C3110 * C5930) *
                C3057 +
            (C3053 * C2619 - C3109 * C2559 + C29555 * C6020 - C3110 * C5934) *
                C29548) *
               C29499 * C2032) *
              C1508) *
         C29413) /
        (p * q * std::sqrt(p + q));
    d2eexz[6] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  (((((C29499 * C215 - C214 * C93) * C3055 +
                      (C29499 * C220 - C214 * C99) * C3051 +
                      (C226 - C227) * C3057 + (C228 - C229) * C29548) *
                         C3053 +
                     ((C3714 - C3715) * C3055 + (C3716 - C3717) * C3051 +
                      C4795 * C3057 + C4796 * C29548) *
                         C29555) *
                        C2031 +
                    (((C214 * C1059 - C29499 * C1169) * C3055 +
                      (C214 * C1068 - C29499 * C1175) * C3051 +
                      (C2150 - C2151) * C3057 + (C2152 - C2153) * C29548) *
                         C3053 +
                     ((C6092 - C6093) * C3055 + (C6094 - C6095) * C3051 +
                      (C5435 - C5436) * C3057 + (C5437 - C5438) * C29548) *
                         C29555) *
                        C2032) *
                       C1507 +
                   ((((C3715 - C3714) * C3055 + (C3717 - C3716) * C3051 +
                      C4797 * C3057 + C4798 * C29548) *
                         C3053 +
                     ((C3718 - C3719) * C3055 + (C3720 - C3721) * C3051 +
                      (C3722 - C3723) * C3057 + (C3724 - C3725) * C29548) *
                         C29555) *
                        C2031 +
                    (((C6093 - C6092) * C3055 + (C6095 - C6094) * C3051 +
                      (C5436 - C5435) * C3057 + (C5438 - C5437) * C29548) *
                         C3053 +
                     ((C29499 * C6087 - C214 * C5929) * C3055 +
                      (C29499 * C6089 - C214 * C5932) * C3051 +
                      (C29499 * C6088 - C214 * C5930) * C3057 +
                      (C29499 * C6090 - C214 * C5934) * C29548) *
                         C29555) *
                        C2032) *
                       C1508) *
                  C29413) /
                 (p * q * std::sqrt(p + q));
    d2eeyx[6] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C3051 * C98 - C3055 * C93 + C29548 * C100 - C3057 * C94) * C3109 +
            (C3051 * C282 - C3055 * C277 + C29548 * C283 - C3057 * C278) *
                C3053 +
            (C3780 - C3781 + C3782 - C3783) * C3110 +
            (C3784 - C3785 + C3786 - C3787) * C29555) *
               C29499 * C2031 +
           ((C3055 * C1059 - C3051 * C1067 + C3057 * C1058 - C29548 * C1065) *
                C3109 +
            (C3055 * C1219 - C3051 * C1225 + C3057 * C1220 - C29548 * C1226) *
                C3053 +
            (C6166 - C6167 + C6168 - C6169) * C3110 +
            (C6170 - C6171 + C6172 - C6173) * C29555) *
               C29499 * C2032) *
              C1507 +
          (((C3781 - C3780 + C3783 - C3782) * C3109 +
            (C3785 - C3784 + C3787 - C3786) * C3053 +
            (C3788 - C3789 + C3790 - C3791) * C3110 +
            (C3792 - C3793 + C3794 - C3795) * C29555) *
               C29499 * C2031 +
           ((C6167 - C6166 + C6169 - C6168) * C3109 +
            (C6171 - C6170 + C6173 - C6172) * C3053 +
            (C3051 * C5931 - C3055 * C5929 + C29548 * C5933 - C3057 * C5930) *
                C3110 +
            (C3051 * C6163 - C3055 * C6161 + C29548 * C6164 - C3057 * C6162) *
                C29555) *
               C29499 * C2032) *
              C1508) *
         C29413) /
        (p * q * std::sqrt(p + q));
    d2eeyy[6] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C3109 * C152 - C3277 * C93 - C3109 * C277 + C3053 * C326 +
             C3110 * C678 - C3278 * C618 - C3110 * C778 + C29555 * C830) *
                C3051 +
            (C3304 + C3305) * C29548) *
               C29499 * C2031 -
           ((C5583 + C5584) * C29548 +
            (C3110 * C2615 - C3278 * C2553 - C3110 * C2727 + C29555 * C2783 +
             C3109 * C1119 - C3277 * C1059 - C3109 * C1219 + C3053 * C1271) *
                C3051) *
               C29499 * C2032) *
              C1507 +
          (((C3109 * C2615 - C3277 * C2553 - C3109 * C2727 + C3053 * C2783 +
             C3110 * C6017 - C3278 * C5929 - C3110 * C6161 + C29555 * C6239) *
                C3051 +
            (C3109 * C2616 - C3277 * C2554 - C3109 * C2728 + C3053 * C2784 +
             C3110 * C6018 - C3278 * C5930 - C3110 * C6162 + C29555 * C6240) *
                C29548) *
               C29499 * C2032 -
           ((C4951 + C4952) * C29548 +
            (C3110 * C681 - C3278 * C619 - C3110 * C781 + C29555 * C831 +
             C3109 * C678 - C3277 * C618 - C3109 * C778 + C3053 * C830) *
                C3051) *
               C29499 * C2031) *
              C1508) *
         C29413) /
        (p * q * std::sqrt(p + q));
    d2eeyz[6] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  (((((C29499 * C215 - C214 * C93) * C3109 +
                      (C29499 * C390 - C214 * C277) * C3053 +
                      (C3714 - C3715) * C3110 + (C3900 - C3901) * C29555) *
                         C3051 +
                     ((C226 - C227) * C3109 + (C396 - C397) * C3053 +
                      C4795 * C3110 + C5019 * C29555) *
                         C29548) *
                        C2031 +
                    (((C214 * C1059 - C29499 * C1169) * C3109 +
                      (C214 * C1219 - C29499 * C1313) * C3053 +
                      (C6092 - C6093) * C3110 + (C6310 - C6311) * C29555) *
                         C3051 +
                     ((C2150 - C2151) * C3109 + (C2326 - C2327) * C3053 +
                      (C5435 - C5436) * C3110 + (C5651 - C5652) * C29555) *
                         C29548) *
                        C2032) *
                       C1507 +
                   ((((C3715 - C3714) * C3109 + (C3901 - C3900) * C3053 +
                      (C3718 - C3719) * C3110 + (C3902 - C3903) * C29555) *
                         C3051 +
                     (C4797 * C3109 + C5020 * C3053 + (C3722 - C3723) * C3110 +
                      (C3904 - C3905) * C29555) *
                         C29548) *
                        C2031 +
                    (((C6093 - C6092) * C3109 + (C6311 - C6310) * C3053 +
                      (C29499 * C6087 - C214 * C5929) * C3110 +
                      (C29499 * C6307 - C214 * C6161) * C29555) *
                         C3051 +
                     ((C5436 - C5435) * C3109 + (C5652 - C5651) * C3053 +
                      (C29499 * C6088 - C214 * C5930) * C3110 +
                      (C29499 * C6308 - C214 * C6162) * C29555) *
                         C29548) *
                        C2032) *
                       C1508) *
                  C29413) /
                 (p * q * std::sqrt(p + q));
    d2eezx[6] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C3051 * C98 - C3055 * C93 + C29548 * C100 - C3057 * C94) * C214 +
             (C3051 * C448 - C3055 * C443 + C29548 * C449 - C3057 * C444) *
                 C29499) *
                C3053 +
            ((C3780 - C3781 + C3782 - C3783) * C214 +
             (C3960 - C3961 + C3962 - C3963) * C29499) *
                C29555) *
               C2031 +
           (((C3055 * C1059 - C3051 * C1067 + C3057 * C1058 - C29548 * C1065) *
                 C214 +
             (C3055 * C1357 - C3051 * C1363 + C3057 * C1358 - C29548 * C1364) *
                 C29499) *
                C3053 +
            ((C6166 - C6167 + C6168 - C6169) * C214 +
             (C6382 - C6383 + C6384 - C6385) * C29499) *
                C29555) *
               C2032) *
              C1507 +
          ((((C3781 - C3780 + C3783 - C3782) * C214 +
             (C3961 - C3960 + C3963 - C3962) * C29499) *
                C3053 +
            ((C3788 - C3789 + C3790 - C3791) * C214 +
             (C3964 - C3965 + C3966 - C3967) * C29499) *
                C29555) *
               C2031 +
           (((C6167 - C6166 + C6169 - C6168) * C214 +
             (C6383 - C6382 + C6385 - C6384) * C29499) *
                C3053 +
            ((C3051 * C5931 - C3055 * C5929 + C29548 * C5933 - C3057 * C5930) *
                 C214 +
             (C3051 * C6379 - C3055 * C6377 + C29548 * C6380 - C3057 * C6378) *
                 C29499) *
                C29555) *
               C2032) *
              C1508) *
         C29413) /
        (p * q * std::sqrt(p + q));
    d2eezy[6] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C3053 * C152 - C3109 * C93 + C29555 * C678 - C3110 * C618) *
                 C214 +
             (C3053 * C491 - C3109 * C443 + C29555 * C966 - C3110 * C916) *
                 C29499) *
                C3051 +
            ((C3112 - C3113 + C3114 - C3115) * C214 +
             (C3458 - C3459 + C3460 - C3461) * C29499) *
                C29548) *
               C2031 +
           (((C3109 * C1059 - C3053 * C1119 + C3110 * C2553 - C29555 * C2615) *
                 C214 +
             (C3109 * C1357 - C3053 * C1407 + C3110 * C2889 - C29555 * C2945) *
                 C29499) *
                C3051 +
            ((C5361 - C5362 + C5363 - C5364) * C214 +
             (C5785 - C5786 + C5787 - C5788) * C29499) *
                C29548) *
               C2032) *
              C1507 +
          ((((C3109 * C618 - C3053 * C678 + C3110 * C619 - C29555 * C681) *
                 C214 +
             (C3109 * C916 - C3053 * C966 + C3110 * C919 - C29555 * C969) *
                 C29499) *
                C3051 +
            ((C4721 - C4722 + C4723 - C4724) * C214 +
             (C5157 - C5158 + C5159 - C5160) * C29499) *
                C29548) *
               C2031 +
           (((C3053 * C2615 - C3109 * C2553 + C29555 * C6017 - C3110 * C5929) *
                 C214 +
             (C3053 * C2945 - C3109 * C2889 + C29555 * C6451 - C3110 * C6377) *
                 C29499) *
                C3051 +
            ((C3053 * C2616 - C3109 * C2554 + C29555 * C6018 - C3110 * C5930) *
                 C214 +
             (C3053 * C2946 - C3109 * C2890 + C29555 * C6452 - C3110 * C6378) *
                 C29499) *
                C29548) *
               C2032) *
              C1508) *
         C29413) /
        (p * q * std::sqrt(p + q));
    d2eezz[6] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C214 * C215 - C544 * C93 - C214 * C443 + C29499 * C545) * C3053 +
             C4090 * C29555) *
                C3051 +
            (C3516 + C3517) * C29548) *
               C2031 -
           ((C5863 + C5859) * C29548 +
            (C6528 * C29555 +
             (C214 * C1169 - C544 * C1059 - C214 * C1357 + C29499 * C1453) *
                 C3053) *
                C3051) *
               C2032) *
              C1507 +
          (((C6528 * C3053 +
             (C214 * C6087 - C544 * C5929 - C214 * C6377 + C29499 * C6519) *
                 C29555) *
                C3051 +
            (C5862 * C3053 +
             (C214 * C6088 - C544 * C5930 - C214 * C6378 + C29499 * C6520) *
                 C29555) *
                C29548) *
               C2032 -
           ((C5227 + C5228) * C29548 +
            (C4092 * C29555 + C4090 * C3053) * C3051) *
               C2031) *
              C1508) *
         C29413) /
        (p * q * std::sqrt(p + q));
    d2eexx[7] +=
        (-std::pow(Pi, 2.5) *
         (((C3055 * C98 - C3056 * C93 - C3055 * C99 + C3051 * C108 +
            C3057 * C100 - C3058 * C94 - C3057 * C101 + C29548 * C109) *
               C29499 * C3053 +
           (C3602 + C3603) * C29499 * C29555) *
              C29439 * C612 -
          ((C3604 + C3605) * C29499 * C29555 +
           (C3603 + C3602) * C29499 * C3053) *
              C29439 * C613 +
          ((C3605 + C3604) * C29499 * C3053 +
           (C3055 * C3571 - C3056 * C3569 - C3055 * C3572 + C3051 * C3575 +
            C3057 * C3573 - C3058 * C3570 - C3057 * C3574 + C29548 * C3576) *
               C29499 * C29555) *
              C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C3055 * C98 - C3056 * C93 - C3055 * C99 + C3051 * C108 +
            C3057 * C100 - C3058 * C94 - C3057 * C101 + C29548 * C109) *
               C29499 * C3053 +
           (C3055 * C626 - C3056 * C618 - C3055 * C627 + C3051 * C636 +
            C3057 * C624 - C3058 * C617 - C3057 * C625 + C29548 * C635) *
               C29499 * C29555) *
              C29439 * C29425 * C84 -
          ((C3057 * C622 - C3058 * C616 - C3057 * C623 + C29548 * C634 +
            C3055 * C624 - C3056 * C617 - C3055 * C625 + C3051 * C635) *
               C29499 * C29555 +
           (C3057 * C102 - C3058 * C95 - C3057 * C103 + C29548 * C110 +
            C3055 * C100 - C3056 * C94 - C3055 * C101 + C3051 * C109) *
               C29499 * C3053) *
              C29439 * C29425 * C85 +
          ((C3055 * C102 - C3056 * C95 - C3055 * C103 + C3051 * C110 +
            C3057 * C104 - C3058 * C96 - C3057 * C105 + C29548 * C111) *
               C29499 * C3053 +
           (C3055 * C622 - C3056 * C616 - C3055 * C623 + C3051 * C634 +
            C3057 * C1512 - C3058 * C1511 - C3057 * C1513 + C29548 * C1514) *
               C29499 * C29555) *
              C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C3055 * C98 - C3056 * C93 - C3055 * C99 + C3051 * C108 +
            C3057 * C100 - C3058 * C94 - C3057 * C101 + C29548 * C109) *
               C29499 * C3053 +
           (C3602 + C3603) * C29499 * C29555) *
              C1054 -
          ((C3057 * C2558 - C3058 * C2554 - C3057 * C2559 + C29548 * C2563 +
            C3055 * C2556 - C3056 * C2553 - C3055 * C2557 + C3051 * C2562) *
               C29499 * C29555 +
           (C3057 * C1065 - C3058 * C1058 - C3057 * C1066 + C29548 * C1076 +
            C3055 * C1067 - C3056 * C1059 - C3055 * C1068 + C3051 * C1077) *
               C29499 * C3053) *
              C1055 +
          ((C3055 * C1069 - C3056 * C1060 - C3055 * C1070 + C3051 * C1078 +
            C3057 * C1071 - C3058 * C1061 - C3057 * C1072 + C29548 * C1079) *
               C29499 * C3053 +
           (C3055 * C4144 - C3056 * C4142 - C3055 * C4145 + C3051 * C4148 +
            C3057 * C4146 - C3058 * C4143 - C3057 * C4147 + C29548 * C4149) *
               C29499 * C29555) *
              C1056) *
         C29425 * C29413) /
            (p * q * std::sqrt(p + q));
    d2eexy[7] +=
        (-std::pow(Pi, 2.5) *
         (((C3053 * C152 - C3109 * C93 + C29555 * C678 - C3110 * C618) * C3055 +
           (C3053 * C157 - C3109 * C99 + C29555 * C684 - C3110 * C627) * C3051 +
           (C3112 - C3113 + C3114 - C3115) * C3057 +
           (C3116 - C3117 + C3118 - C3119) * C29548) *
              C29499 * C29439 * C612 +
          ((C3109 * C618 - C3053 * C678 + C3110 * C619 - C29555 * C681) *
               C3055 +
           (C3109 * C627 - C3053 * C684 + C3110 * C629 - C29555 * C687) *
               C3051 +
           (C3109 * C617 - C3053 * C679 + C3110 * C620 - C29555 * C682) *
               C3057 +
           (C3109 * C625 - C3053 * C685 + C3110 * C631 - C29555 * C688) *
               C29548) *
              C29499 * C29439 * C613 +
          ((C3053 * C681 - C3109 * C619 + C29555 * C3655 - C3110 * C3569) *
               C3055 +
           (C3053 * C687 - C3109 * C629 + C29555 * C3657 - C3110 * C3572) *
               C3051 +
           (C3053 * C682 - C3109 * C620 + C29555 * C3656 - C3110 * C3570) *
               C3057 +
           (C3053 * C688 - C3109 * C631 + C29555 * C3658 - C3110 * C3574) *
               C29548) *
              C29499 * C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C3053 * C152 - C3109 * C93 + C29555 * C678 - C3110 * C618) * C3055 +
           (C3053 * C157 - C3109 * C99 + C29555 * C684 - C3110 * C627) * C3051 +
           (C3112 - C3113 + C3114 - C3115) * C3057 +
           (C3116 - C3117 + C3118 - C3119) * C29548) *
              C29499 * C29439 * C29425 * C84 +
          ((C3113 - C3112 + C3115 - C3114) * C3055 +
           (C3117 - C3116 + C3119 - C3118) * C3051 +
           (C3120 - C3121 + C3122 - C3123) * C3057 +
           (C3124 - C3125 + C3126 - C3127) * C29548) *
              C29499 * C29439 * C29425 * C85 +
          ((C3121 - C3120 + C3123 - C3122) * C3055 +
           (C3125 - C3124 + C3127 - C3126) * C3051 +
           (C3053 * C155 - C3109 * C96 + C29555 * C1565 - C3110 * C1511) *
               C3057 +
           (C3053 * C160 - C3109 * C105 + C29555 * C1566 - C3110 * C1513) *
               C29548) *
              C29499 * C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C3053 * C152 - C3109 * C93 + C29555 * C678 - C3110 * C618) * C3055 +
           (C3053 * C157 - C3109 * C99 + C29555 * C684 - C3110 * C627) * C3051 +
           (C3112 - C3113 + C3114 - C3115) * C3057 +
           (C3116 - C3117 + C3118 - C3119) * C29548) *
              C29499 * C1054 +
          ((C3109 * C1059 - C3053 * C1119 + C3110 * C2553 - C29555 * C2615) *
               C3055 +
           (C3109 * C1068 - C3053 * C1125 + C3110 * C2557 - C29555 * C2618) *
               C3051 +
           (C3109 * C1058 - C3053 * C1120 + C3110 * C2554 - C29555 * C2616) *
               C3057 +
           (C3109 * C1066 - C3053 * C1126 + C3110 * C2559 - C29555 * C2619) *
               C29548) *
              C29499 * C1055 +
          ((C3053 * C1122 - C3109 * C1060 + C29555 * C4200 - C3110 * C4142) *
               C3055 +
           (C3053 * C1128 - C3109 * C1070 + C29555 * C4202 - C3110 * C4145) *
               C3051 +
           (C3053 * C1123 - C3109 * C1061 + C29555 * C4201 - C3110 * C4143) *
               C3057 +
           (C3053 * C1129 - C3109 * C1072 + C29555 * C4203 - C3110 * C4147) *
               C29548) *
              C29499 * C1056) *
         C29425 * C29413) /
            (p * q * std::sqrt(p + q));
    d2eexz[7] += (-std::pow(Pi, 2.5) *
                  ((((C29499 * C215 - C214 * C93) * C3055 +
                     (C29499 * C220 - C214 * C99) * C3051 +
                     (C226 - C227) * C3057 + (C228 - C229) * C29548) *
                        C3053 +
                    ((C3714 - C3715) * C3055 + (C3716 - C3717) * C3051 +
                     (C1629 - C1628) * C3057 + (C1631 - C1630) * C29548) *
                        C29555) *
                       C29439 * C612 +
                   (((C3715 - C3714) * C3055 + (C3717 - C3716) * C3051 +
                     (C1628 - C1629) * C3057 + (C1630 - C1631) * C29548) *
                        C3053 +
                    ((C3718 - C3719) * C3055 + (C3720 - C3721) * C3051 +
                     (C3722 - C3723) * C3057 + (C3724 - C3725) * C29548) *
                        C29555) *
                       C29439 * C613 +
                   (((C3719 - C3718) * C3055 + (C3721 - C3720) * C3051 +
                     (C3723 - C3722) * C3057 + (C3725 - C3724) * C29548) *
                        C3053 +
                    ((C29499 * C3709 - C214 * C3569) * C3055 +
                     (C29499 * C3711 - C214 * C3572) * C3051 +
                     (C29499 * C3710 - C214 * C3570) * C3057 +
                     (C29499 * C3712 - C214 * C3574) * C29548) *
                        C29555) *
                       C29439 * C614) *
                  C29413) /
                     (p * q * std::sqrt(p + q)) -
                 (std::pow(Pi, 2.5) *
                  ((((C29499 * C215 - C214 * C93) * C3055 +
                     (C29499 * C220 - C214 * C99) * C3051 +
                     (C226 - C227) * C3057 + (C228 - C229) * C29548) *
                        C3053 +
                    ((C29499 * C728 - C214 * C618) * C3055 +
                     (C29499 * C734 - C214 * C627) * C3051 +
                     (C1629 - C1628) * C3057 + (C1631 - C1630) * C29548) *
                        C29555) *
                       C29439 * C29425 * C84 +
                   (((C227 - C226) * C3055 + (C229 - C228) * C3051 +
                     (C231 - C230) * C3057 + (C233 - C232) * C29548) *
                        C3053 +
                    ((C1628 - C1629) * C3055 + (C1630 - C1631) * C3051 +
                     (C1632 - C1633) * C3057 + (C1634 - C1635) * C29548) *
                        C29555) *
                       C29439 * C29425 * C85 +
                   ((C238 * C3055 + C239 * C3051 + (C235 - C234) * C3057 +
                     (C237 - C236) * C29548) *
                        C3053 +
                    ((C1633 - C1632) * C3055 + (C1635 - C1634) * C3051 +
                     (C29499 * C1625 - C214 * C1511) * C3057 +
                     (C29499 * C1626 - C214 * C1513) * C29548) *
                        C29555) *
                       C29439 * C29425 * C86)) /
                     (p * q * std::sqrt(p + q)) +
                 (2 * std::pow(Pi, 2.5) *
                  ((((C29499 * C215 - C214 * C93) * C3055 +
                     (C29499 * C220 - C214 * C99) * C3051 +
                     (C226 - C227) * C3057 + (C228 - C229) * C29548) *
                        C3053 +
                    ((C3714 - C3715) * C3055 + (C3716 - C3717) * C3051 +
                     (C1629 - C1628) * C3057 + (C1631 - C1630) * C29548) *
                        C29555) *
                       C1054 +
                   (((C214 * C1059 - C29499 * C1169) * C3055 +
                     (C214 * C1068 - C29499 * C1175) * C3051 +
                     (C2150 - C2151) * C3057 + (C2152 - C2153) * C29548) *
                        C3053 +
                    ((C214 * C2553 - C29499 * C2671) * C3055 +
                     (C214 * C2557 - C29499 * C2674) * C3051 +
                     (C214 * C2554 - C29499 * C2672) * C3057 +
                     (C214 * C2559 - C29499 * C2675) * C29548) *
                        C29555) *
                       C1055 +
                   (((C29499 * C1172 - C214 * C1060) * C3055 +
                     (C29499 * C1178 - C214 * C1070) * C3051 +
                     (C29499 * C1173 - C214 * C1061) * C3057 +
                     (C29499 * C1179 - C214 * C1072) * C29548) *
                        C3053 +
                    ((C29499 * C4254 - C214 * C4142) * C3055 +
                     (C29499 * C4256 - C214 * C4145) * C3051 +
                     (C29499 * C4255 - C214 * C4143) * C3057 +
                     (C29499 * C4257 - C214 * C4147) * C29548) *
                        C29555) *
                       C1056) *
                  C29425 * C29413) /
                     (p * q * std::sqrt(p + q));
    d2eeyx[7] +=
        (-std::pow(Pi, 2.5) *
         (((C3051 * C98 - C3055 * C93 + C29548 * C100 - C3057 * C94) * C3109 +
           (C3051 * C282 - C3055 * C277 + C29548 * C283 - C3057 * C278) *
               C3053 +
           (C3780 - C3781 + C3782 - C3783) * C3110 +
           (C3784 - C3785 + C3786 - C3787) * C29555) *
              C29499 * C29439 * C612 +
          ((C3781 - C3780 + C3783 - C3782) * C3109 +
           (C3785 - C3784 + C3787 - C3786) * C3053 +
           (C3788 - C3789 + C3790 - C3791) * C3110 +
           (C3792 - C3793 + C3794 - C3795) * C29555) *
              C29499 * C29439 * C613 +
          ((C3789 - C3788 + C3791 - C3790) * C3109 +
           (C3793 - C3792 + C3795 - C3794) * C3053 +
           (C3051 * C3571 - C3055 * C3569 + C29548 * C3573 - C3057 * C3570) *
               C3110 +
           (C3051 * C3777 - C3055 * C3775 + C29548 * C3778 - C3057 * C3776) *
               C29555) *
              C29499 * C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C3051 * C98 - C3055 * C93 + C29548 * C100 - C3057 * C94) * C3109 +
           (C3051 * C282 - C3055 * C277 + C29548 * C283 - C3057 * C278) *
               C3053 +
           (C3051 * C626 - C3055 * C618 + C29548 * C624 - C3057 * C617) *
               C3110 +
           (C3051 * C784 - C3055 * C778 + C29548 * C785 - C3057 * C779) *
               C29555) *
              C29499 * C29439 * C29425 * C84 +
          ((C3055 * C94 - C3051 * C100 + C3057 * C95 - C29548 * C102) * C3109 +
           (C3055 * C278 - C3051 * C283 + C3057 * C279 - C29548 * C284) *
               C3053 +
           (C3055 * C617 - C3051 * C624 + C3057 * C616 - C29548 * C622) *
               C3110 +
           (C3055 * C779 - C3051 * C785 + C3057 * C780 - C29548 * C786) *
               C29555) *
              C29499 * C29439 * C29425 * C85 +
          ((C3051 * C102 - C3055 * C95 + C29548 * C104 - C3057 * C96) * C3109 +
           (C3051 * C284 - C3055 * C279 + C29548 * C285 - C3057 * C280) *
               C3053 +
           (C3051 * C622 - C3055 * C616 + C29548 * C1512 - C3057 * C1511) *
               C3110 +
           (C3051 * C786 - C3055 * C780 + C29548 * C1686 - C3057 * C1685) *
               C29555) *
              C29499 * C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C3051 * C98 - C3055 * C93 + C29548 * C100 - C3057 * C94) * C3109 +
           (C3051 * C282 - C3055 * C277 + C29548 * C283 - C3057 * C278) *
               C3053 +
           (C3780 - C3781 + C3782 - C3783) * C3110 +
           (C3784 - C3785 + C3786 - C3787) * C29555) *
              C29499 * C1054 +
          ((C3055 * C1059 - C3051 * C1067 + C3057 * C1058 - C29548 * C1065) *
               C3109 +
           (C3055 * C1219 - C3051 * C1225 + C3057 * C1220 - C29548 * C1226) *
               C3053 +
           (C3055 * C2553 - C3051 * C2556 + C3057 * C2554 - C29548 * C2558) *
               C3110 +
           (C3055 * C2727 - C3051 * C2730 + C3057 * C2728 - C29548 * C2731) *
               C29555) *
              C29499 * C1055 +
          ((C3051 * C1069 - C3055 * C1060 + C29548 * C1071 - C3057 * C1061) *
               C3109 +
           (C3051 * C1228 - C3055 * C1222 + C29548 * C1229 - C3057 * C1223) *
               C3053 +
           (C3051 * C4144 - C3055 * C4142 + C29548 * C4146 - C3057 * C4143) *
               C3110 +
           (C3051 * C4310 - C3055 * C4308 + C29548 * C4311 - C3057 * C4309) *
               C29555) *
              C29499 * C1056) *
         C29425 * C29413) /
            (p * q * std::sqrt(p + q));
    d2eeyy[7] +=
        (-std::pow(Pi, 2.5) *
         (((C3109 * C152 - C3277 * C93 - C3109 * C277 + C3053 * C326 +
            C3110 * C678 - C3278 * C618 - C3110 * C778 + C29555 * C830) *
               C3051 +
           (C3304 + C3305) * C29548) *
              C29499 * C29439 * C612 -
          ((C3110 * C682 - C3278 * C620 - C3110 * C782 + C29555 * C832 +
            C3109 * C679 - C3277 * C617 - C3109 * C779 + C3053 * C829) *
               C29548 +
           (C3110 * C681 - C3278 * C619 - C3110 * C781 + C29555 * C831 +
            C3109 * C678 - C3277 * C618 - C3109 * C778 + C3053 * C830) *
               C3051) *
              C29499 * C29439 * C613 +
          ((C3109 * C681 - C3277 * C619 - C3109 * C781 + C3053 * C831 +
            C3110 * C3655 - C3278 * C3569 - C3110 * C3775 + C29555 * C3845) *
               C3051 +
           (C3109 * C682 - C3277 * C620 - C3109 * C782 + C3053 * C832 +
            C3110 * C3656 - C3278 * C3570 - C3110 * C3776 + C29555 * C3846) *
               C29548) *
              C29499 * C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C3109 * C152 - C3277 * C93 - C3109 * C277 + C3053 * C326 +
            C3110 * C678 - C3278 * C618 - C3110 * C778 + C29555 * C830) *
               C3051 +
           (C3304 + C3305) * C29548) *
              C29499 * C29439 * C29425 * C84 -
          ((C3306 + C3307) * C29548 + (C3305 + C3304) * C3051) * C29499 *
              C29439 * C29425 * C85 +
          ((C3307 + C3306) * C3051 +
           (C3109 * C155 - C3277 * C96 - C3109 * C280 + C3053 * C329 +
            C3110 * C1565 - C3278 * C1511 - C3110 * C1685 + C29555 * C1737) *
               C29548) *
              C29499 * C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C3109 * C152 - C3277 * C93 - C3109 * C277 + C3053 * C326 +
            C3110 * C678 - C3278 * C618 - C3110 * C778 + C29555 * C830) *
               C3051 +
           (C3304 + C3305) * C29548) *
              C29499 * C1054 -
          ((C3110 * C2616 - C3278 * C2554 - C3110 * C2728 + C29555 * C2784 +
            C3109 * C1120 - C3277 * C1058 - C3109 * C1220 + C3053 * C1270) *
               C29548 +
           (C3110 * C2615 - C3278 * C2553 - C3110 * C2727 + C29555 * C2783 +
            C3109 * C1119 - C3277 * C1059 - C3109 * C1219 + C3053 * C1271) *
               C3051) *
              C29499 * C1055 +
          ((C3109 * C1122 - C3277 * C1060 - C3109 * C1222 + C3053 * C1272 +
            C3110 * C4200 - C3278 * C4142 - C3110 * C4308 + C29555 * C4362) *
               C3051 +
           (C3109 * C1123 - C3277 * C1061 - C3109 * C1223 + C3053 * C1273 +
            C3110 * C4201 - C3278 * C4143 - C3110 * C4309 + C29555 * C4363) *
               C29548) *
              C29499 * C1056) *
         C29425 * C29413) /
            (p * q * std::sqrt(p + q));
    d2eeyz[7] += (-std::pow(Pi, 2.5) *
                  ((((C29499 * C215 - C214 * C93) * C3109 +
                     (C29499 * C390 - C214 * C277) * C3053 +
                     (C3714 - C3715) * C3110 + (C3900 - C3901) * C29555) *
                        C3051 +
                    ((C226 - C227) * C3109 + (C396 - C397) * C3053 +
                     (C1629 - C1628) * C3110 + (C1805 - C1804) * C29555) *
                        C29548) *
                       C29439 * C612 +
                   (((C3715 - C3714) * C3109 + (C3901 - C3900) * C3053 +
                     (C3718 - C3719) * C3110 + (C3902 - C3903) * C29555) *
                        C3051 +
                    ((C1628 - C1629) * C3109 + (C1804 - C1805) * C3053 +
                     (C3722 - C3723) * C3110 + (C3904 - C3905) * C29555) *
                        C29548) *
                       C29439 * C613 +
                   (((C3719 - C3718) * C3109 + (C3903 - C3902) * C3053 +
                     (C29499 * C3709 - C214 * C3569) * C3110 +
                     (C29499 * C3897 - C214 * C3775) * C29555) *
                        C3051 +
                    ((C3723 - C3722) * C3109 + (C3905 - C3904) * C3053 +
                     (C29499 * C3710 - C214 * C3570) * C3110 +
                     (C29499 * C3898 - C214 * C3776) * C29555) *
                        C29548) *
                       C29439 * C614) *
                  C29413) /
                     (p * q * std::sqrt(p + q)) -
                 (std::pow(Pi, 2.5) *
                  ((((C29499 * C215 - C214 * C93) * C3109 +
                     (C29499 * C390 - C214 * C277) * C3053 +
                     (C29499 * C728 - C214 * C618) * C3110 +
                     (C29499 * C872 - C214 * C778) * C29555) *
                        C3051 +
                    ((C226 - C227) * C3109 + (C396 - C397) * C3053 +
                     (C1629 - C1628) * C3110 + (C1805 - C1804) * C29555) *
                        C29548) *
                       C29439 * C29425 * C84 +
                   (((C227 - C226) * C3109 + (C397 - C396) * C3053 +
                     (C1628 - C1629) * C3110 + (C1804 - C1805) * C29555) *
                        C3051 +
                    ((C231 - C230) * C3109 + (C400 - C399) * C3053 +
                     (C1632 - C1633) * C3110 + (C1806 - C1807) * C29555) *
                        C29548) *
                       C29439 * C29425 * C85 +
                   ((C238 * C3109 + C403 * C3053 + (C1633 - C1632) * C3110 +
                     (C1807 - C1806) * C29555) *
                        C3051 +
                    ((C235 - C234) * C3109 + (C402 - C401) * C3053 +
                     (C29499 * C1625 - C214 * C1511) * C3110 +
                     (C29499 * C1802 - C214 * C1685) * C29555) *
                        C29548) *
                       C29439 * C29425 * C86)) /
                     (p * q * std::sqrt(p + q)) +
                 (2 * std::pow(Pi, 2.5) *
                  ((((C29499 * C215 - C214 * C93) * C3109 +
                     (C29499 * C390 - C214 * C277) * C3053 +
                     (C3714 - C3715) * C3110 + (C3900 - C3901) * C29555) *
                        C3051 +
                    ((C226 - C227) * C3109 + (C396 - C397) * C3053 +
                     (C1629 - C1628) * C3110 + (C1805 - C1804) * C29555) *
                        C29548) *
                       C1054 +
                   (((C214 * C1059 - C29499 * C1169) * C3109 +
                     (C214 * C1219 - C29499 * C1313) * C3053 +
                     (C214 * C2553 - C29499 * C2671) * C3110 +
                     (C214 * C2727 - C29499 * C2836) * C29555) *
                        C3051 +
                    ((C2150 - C2151) * C3109 + (C2326 - C2327) * C3053 +
                     (C214 * C2554 - C29499 * C2672) * C3110 +
                     (C214 * C2728 - C29499 * C2837) * C29555) *
                        C29548) *
                       C1055 +
                   (((C29499 * C1172 - C214 * C1060) * C3109 +
                     (C29499 * C1316 - C214 * C1222) * C3053 +
                     (C29499 * C4254 - C214 * C4142) * C3110 +
                     (C29499 * C4414 - C214 * C4308) * C29555) *
                        C3051 +
                    ((C29499 * C1173 - C214 * C1061) * C3109 +
                     (C29499 * C1317 - C214 * C1223) * C3053 +
                     (C29499 * C4255 - C214 * C4143) * C3110 +
                     (C29499 * C4415 - C214 * C4309) * C29555) *
                        C29548) *
                       C1056) *
                  C29425 * C29413) /
                     (p * q * std::sqrt(p + q));
    d2eezx[7] +=
        (-std::pow(Pi, 2.5) *
         ((((C3051 * C98 - C3055 * C93 + C29548 * C100 - C3057 * C94) * C214 +
            (C3051 * C448 - C3055 * C443 + C29548 * C449 - C3057 * C444) *
                C29499) *
               C3053 +
           ((C3780 - C3781 + C3782 - C3783) * C214 +
            (C3960 - C3961 + C3962 - C3963) * C29499) *
               C29555) *
              C29439 * C612 +
          (((C3781 - C3780 + C3783 - C3782) * C214 +
            (C3961 - C3960 + C3963 - C3962) * C29499) *
               C3053 +
           ((C3788 - C3789 + C3790 - C3791) * C214 +
            (C3964 - C3965 + C3966 - C3967) * C29499) *
               C29555) *
              C29439 * C613 +
          (((C3789 - C3788 + C3791 - C3790) * C214 +
            (C3965 - C3964 + C3967 - C3966) * C29499) *
               C3053 +
           ((C3051 * C3571 - C3055 * C3569 + C29548 * C3573 - C3057 * C3570) *
                C214 +
            (C3051 * C3957 - C3055 * C3955 + C29548 * C3958 - C3057 * C3956) *
                C29499) *
               C29555) *
              C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C3051 * C98 - C3055 * C93 + C29548 * C100 - C3057 * C94) * C214 +
            (C3051 * C448 - C3055 * C443 + C29548 * C449 - C3057 * C444) *
                C29499) *
               C3053 +
           ((C3051 * C626 - C3055 * C618 + C29548 * C624 - C3057 * C617) *
                C214 +
            (C3051 * C922 - C3055 * C916 + C29548 * C923 - C3057 * C917) *
                C29499) *
               C29555) *
              C29439 * C29425 * C84 +
          (((C3055 * C94 - C3051 * C100 + C3057 * C95 - C29548 * C102) * C214 +
            (C3055 * C444 - C3051 * C449 + C3057 * C445 - C29548 * C450) *
                C29499) *
               C3053 +
           ((C3055 * C617 - C3051 * C624 + C3057 * C616 - C29548 * C622) *
                C214 +
            (C3055 * C917 - C3051 * C923 + C3057 * C918 - C29548 * C924) *
                C29499) *
               C29555) *
              C29439 * C29425 * C85 +
          (((C3051 * C102 - C3055 * C95 + C29548 * C104 - C3057 * C96) * C214 +
            (C3051 * C450 - C3055 * C445 + C29548 * C451 - C3057 * C446) *
                C29499) *
               C3053 +
           ((C3051 * C622 - C3055 * C616 + C29548 * C1512 - C3057 * C1511) *
                C214 +
            (C3051 * C924 - C3055 * C918 + C29548 * C1858 - C3057 * C1857) *
                C29499) *
               C29555) *
              C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C3051 * C98 - C3055 * C93 + C29548 * C100 - C3057 * C94) * C214 +
            (C3051 * C448 - C3055 * C443 + C29548 * C449 - C3057 * C444) *
                C29499) *
               C3053 +
           ((C3780 - C3781 + C3782 - C3783) * C214 +
            (C3960 - C3961 + C3962 - C3963) * C29499) *
               C29555) *
              C1054 +
          (((C3055 * C1059 - C3051 * C1067 + C3057 * C1058 - C29548 * C1065) *
                C214 +
            (C3055 * C1357 - C3051 * C1363 + C3057 * C1358 - C29548 * C1364) *
                C29499) *
               C3053 +
           ((C3055 * C2553 - C3051 * C2556 + C3057 * C2554 - C29548 * C2558) *
                C214 +
            (C3055 * C2889 - C3051 * C2892 + C3057 * C2890 - C29548 * C2893) *
                C29499) *
               C29555) *
              C1055 +
          (((C3051 * C1069 - C3055 * C1060 + C29548 * C1071 - C3057 * C1061) *
                C214 +
            (C3051 * C1366 - C3055 * C1360 + C29548 * C1367 - C3057 * C1361) *
                C29499) *
               C3053 +
           ((C3051 * C4144 - C3055 * C4142 + C29548 * C4146 - C3057 * C4143) *
                C214 +
            (C3051 * C4468 - C3055 * C4466 + C29548 * C4469 - C3057 * C4467) *
                C29499) *
               C29555) *
              C1056) *
         C29425 * C29413) /
            (p * q * std::sqrt(p + q));
    d2eezy[7] +=
        (-std::pow(Pi, 2.5) *
         ((((C3053 * C152 - C3109 * C93 + C29555 * C678 - C3110 * C618) * C214 +
            (C3053 * C491 - C3109 * C443 + C29555 * C966 - C3110 * C916) *
                C29499) *
               C3051 +
           ((C3112 - C3113 + C3114 - C3115) * C214 +
            (C3458 - C3459 + C3460 - C3461) * C29499) *
               C29548) *
              C29439 * C612 +
          (((C3109 * C618 - C3053 * C678 + C3110 * C619 - C29555 * C681) *
                C214 +
            (C3109 * C916 - C3053 * C966 + C3110 * C919 - C29555 * C969) *
                C29499) *
               C3051 +
           ((C3109 * C617 - C3053 * C679 + C3110 * C620 - C29555 * C682) *
                C214 +
            (C3109 * C917 - C3053 * C967 + C3110 * C920 - C29555 * C970) *
                C29499) *
               C29548) *
              C29439 * C613 +
          (((C3053 * C681 - C3109 * C619 + C29555 * C3655 - C3110 * C3569) *
                C214 +
            (C3053 * C969 - C3109 * C919 + C29555 * C4017 - C3110 * C3955) *
                C29499) *
               C3051 +
           ((C3053 * C682 - C3109 * C620 + C29555 * C3656 - C3110 * C3570) *
                C214 +
            (C3053 * C970 - C3109 * C920 + C29555 * C4018 - C3110 * C3956) *
                C29499) *
               C29548) *
              C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C3053 * C152 - C3109 * C93 + C29555 * C678 - C3110 * C618) * C214 +
            (C3053 * C491 - C3109 * C443 + C29555 * C966 - C3110 * C916) *
                C29499) *
               C3051 +
           ((C3112 - C3113 + C3114 - C3115) * C214 +
            (C3458 - C3459 + C3460 - C3461) * C29499) *
               C29548) *
              C29439 * C29425 * C84 +
          (((C3113 - C3112 + C3115 - C3114) * C214 +
            (C3459 - C3458 + C3461 - C3460) * C29499) *
               C3051 +
           ((C3120 - C3121 + C3122 - C3123) * C214 +
            (C3462 - C3463 + C3464 - C3465) * C29499) *
               C29548) *
              C29439 * C29425 * C85 +
          (((C3121 - C3120 + C3123 - C3122) * C214 +
            (C3463 - C3462 + C3465 - C3464) * C29499) *
               C3051 +
           ((C3053 * C155 - C3109 * C96 + C29555 * C1565 - C3110 * C1511) *
                C214 +
            (C3053 * C494 - C3109 * C446 + C29555 * C1909 - C3110 * C1857) *
                C29499) *
               C29548) *
              C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C3053 * C152 - C3109 * C93 + C29555 * C678 - C3110 * C618) * C214 +
            (C3053 * C491 - C3109 * C443 + C29555 * C966 - C3110 * C916) *
                C29499) *
               C3051 +
           ((C3112 - C3113 + C3114 - C3115) * C214 +
            (C3458 - C3459 + C3460 - C3461) * C29499) *
               C29548) *
              C1054 +
          (((C3109 * C1059 - C3053 * C1119 + C3110 * C2553 - C29555 * C2615) *
                C214 +
            (C3109 * C1357 - C3053 * C1407 + C3110 * C2889 - C29555 * C2945) *
                C29499) *
               C3051 +
           ((C3109 * C1058 - C3053 * C1120 + C3110 * C2554 - C29555 * C2616) *
                C214 +
            (C3109 * C1358 - C3053 * C1408 + C3110 * C2890 - C29555 * C2946) *
                C29499) *
               C29548) *
              C1055 +
          (((C3053 * C1122 - C3109 * C1060 + C29555 * C4200 - C3110 * C4142) *
                C214 +
            (C3053 * C1410 - C3109 * C1360 + C29555 * C4520 - C3110 * C4466) *
                C29499) *
               C3051 +
           ((C3053 * C1123 - C3109 * C1061 + C29555 * C4201 - C3110 * C4143) *
                C214 +
            (C3053 * C1411 - C3109 * C1361 + C29555 * C4521 - C3110 * C4467) *
                C29499) *
               C29548) *
              C1056) *
         C29425 * C29413) /
            (p * q * std::sqrt(p + q));
    d2eezz[7] +=
        (-std::pow(Pi, 2.5) *
         ((((C214 * C215 - C544 * C93 - C214 * C443 + C29499 * C545) * C3053 +
            C4090 * C29555) *
               C3051 +
           (C3516 + C3517) * C29548) *
              C29439 * C612 -
          ((C4091 * C29555 + C1979 * C3053) * C29548 +
           (C4092 * C29555 + C4090 * C3053) * C3051) *
              C29439 * C613 +
          ((C4092 * C3053 +
            (C214 * C3709 - C544 * C3569 - C214 * C3955 + C29499 * C4069) *
                C29555) *
               C3051 +
           (C4091 * C3053 +
            (C214 * C3710 - C544 * C3570 - C214 * C3956 + C29499 * C4070) *
                C29555) *
               C29548) *
              C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C214 * C215 - C544 * C93 - C214 * C443 + C29499 * C545) * C3053 +
            (C214 * C728 - C544 * C618 - C214 * C916 + C29499 * C1012) *
                C29555) *
               C3051 +
           (C3516 + C3517) * C29548) *
              C29439 * C29425 * C84 -
          ((C3518 + C3519) * C29548 + (C3517 + C3516) * C3051) * C29439 *
              C29425 * C85 +
          ((C3519 + C3518) * C3051 +
           (C571 * C3053 +
            (C214 * C1625 - C544 * C1511 - C214 * C1857 + C29499 * C1964) *
                C29555) *
               C29548) *
              C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C214 * C215 - C544 * C93 - C214 * C443 + C29499 * C545) * C3053 +
            C4090 * C29555) *
               C3051 +
           (C3516 + C3517) * C29548) *
              C1054 -
          (((C214 * C2672 - C544 * C2554 - C214 * C2890 + C29499 * C2999) *
                C29555 +
            C2501 * C3053) *
               C29548 +
           ((C214 * C2671 - C544 * C2553 - C214 * C2889 + C29499 * C2998) *
                C29555 +
            (C214 * C1169 - C544 * C1059 - C214 * C1357 + C29499 * C1453) *
                C3053) *
               C3051) *
              C1055 +
          (((C214 * C1172 - C544 * C1060 - C214 * C1360 + C29499 * C1454) *
                C3053 +
            (C214 * C4254 - C544 * C4142 - C214 * C4466 + C29499 * C4572) *
                C29555) *
               C3051 +
           ((C214 * C1173 - C544 * C1061 - C214 * C1361 + C29499 * C1455) *
                C3053 +
            (C214 * C4255 - C544 * C4143 - C214 * C4467 + C29499 * C4573) *
                C29555) *
               C29548) *
              C1056) *
         C29425 * C29413) /
            (p * q * std::sqrt(p + q));
    d2eexx[8] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C3055 * C98 - C3056 * C93 - C3055 * C99 + C3051 * C108 +
             C3057 * C100 - C3058 * C94 - C3057 * C101 + C29548 * C109) *
                C29499 * C3053 +
            (C3602 + C3603) * C29499 * C29555) *
               C2031 -
           ((C3057 * C2558 - C3058 * C2554 - C3057 * C2559 + C29548 * C2563 +
             C3055 * C2556 - C3056 * C2553 - C3055 * C2557 + C3051 * C2562) *
                C29499 * C29555 +
            (C3057 * C1065 - C3058 * C1058 - C3057 * C1066 + C29548 * C1076 +
             C3055 * C1067 - C3056 * C1059 - C3055 * C1068 + C3051 * C1077) *
                C29499 * C3053) *
               C2032) *
              C29425 * C1509 +
          (((C3055 * C1065 - C3056 * C1058 - C3055 * C1066 + C3051 * C1076 +
             C3057 * C1063 - C3058 * C1057 - C3057 * C1064 + C29548 * C1075) *
                C29499 * C3053 +
            (C3055 * C2558 - C3056 * C2554 - C3055 * C2559 + C3051 * C2563 +
             C3057 * C2560 - C3058 * C2555 - C3057 * C2561 + C29548 * C2564) *
                C29499 * C29555) *
               C2032 -
           ((C4654 + C4653) * C29499 * C29555 +
            (C3057 * C102 - C3058 * C95 - C3057 * C103 + C29548 * C110 +
             C3055 * C100 - C3056 * C94 - C3055 * C101 + C3051 * C109) *
                C29499 * C3053) *
               C2031) *
              C29425 * C1510)) /
        (p * q * std::sqrt(p + q));
    d2eexy[8] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C3053 * C152 - C3109 * C93 + C29555 * C678 - C3110 * C618) *
                C3055 +
            (C3053 * C157 - C3109 * C99 + C29555 * C684 - C3110 * C627) *
                C3051 +
            (C3112 - C3113 + C3114 - C3115) * C3057 +
            (C3116 - C3117 + C3118 - C3119) * C29548) *
               C29499 * C2031 +
           ((C3109 * C1059 - C3053 * C1119 + C3110 * C2553 - C29555 * C2615) *
                C3055 +
            (C3109 * C1068 - C3053 * C1125 + C3110 * C2557 - C29555 * C2618) *
                C3051 +
            (C5361 - C5362 + C5363 - C5364) * C3057 +
            (C5365 - C5366 + C5367 - C5368) * C29548) *
               C29499 * C2032) *
              C29425 * C1509 +
          (((C3113 - C3112 + C3115 - C3114) * C3055 +
            (C3117 - C3116 + C3119 - C3118) * C3051 +
            (C3120 - C3121 + C3122 - C3123) * C3057 +
            (C3124 - C3125 + C3126 - C3127) * C29548) *
               C29499 * C2031 +
           ((C5362 - C5361 + C5364 - C5363) * C3055 +
            (C5366 - C5365 + C5368 - C5367) * C3051 +
            (C3053 * C1121 - C3109 * C1057 + C29555 * C2617 - C3110 * C2555) *
                C3057 +
            (C3053 * C1127 - C3109 * C1064 + C29555 * C2620 - C3110 * C2561) *
                C29548) *
               C29499 * C2032) *
              C29425 * C1510)) /
        (p * q * std::sqrt(p + q));
    d2eexz[8] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  (((((C29499 * C215 - C214 * C93) * C3055 +
                      (C29499 * C220 - C214 * C99) * C3051 +
                      (C226 - C227) * C3057 + (C228 - C229) * C29548) *
                         C3053 +
                     ((C3714 - C3715) * C3055 + (C3716 - C3717) * C3051 +
                      C4795 * C3057 + C4796 * C29548) *
                         C29555) *
                        C2031 +
                    (((C214 * C1059 - C29499 * C1169) * C3055 +
                      (C214 * C1068 - C29499 * C1175) * C3051 +
                      (C2150 - C2151) * C3057 + (C2152 - C2153) * C29548) *
                         C3053 +
                     ((C214 * C2553 - C29499 * C2671) * C3055 +
                      (C214 * C2557 - C29499 * C2674) * C3051 +
                      (C5435 - C5436) * C3057 + (C5437 - C5438) * C29548) *
                         C29555) *
                        C2032) *
                       C29425 * C1509 +
                   ((((C227 - C226) * C3055 + (C229 - C228) * C3051 +
                      (C231 - C230) * C3057 + (C233 - C232) * C29548) *
                         C3053 +
                     (C4797 * C3055 + C4798 * C3051 + (C1632 - C1633) * C3057 +
                      (C1634 - C1635) * C29548) *
                         C29555) *
                        C2031 +
                    (((C2151 - C2150) * C3055 + (C2153 - C2152) * C3051 +
                      (C2155 - C2154) * C3057 + (C2157 - C2156) * C29548) *
                         C3053 +
                     ((C5436 - C5435) * C3055 + (C5438 - C5437) * C3051 +
                      (C29499 * C2673 - C214 * C2555) * C3057 +
                      (C29499 * C2676 - C214 * C2561) * C29548) *
                         C29555) *
                        C2032) *
                       C29425 * C1510)) /
                 (p * q * std::sqrt(p + q));
    d2eeyx[8] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C3051 * C98 - C3055 * C93 + C29548 * C100 - C3057 * C94) * C3109 +
            (C3051 * C282 - C3055 * C277 + C29548 * C283 - C3057 * C278) *
                C3053 +
            (C3780 - C3781 + C3782 - C3783) * C3110 +
            (C3784 - C3785 + C3786 - C3787) * C29555) *
               C29499 * C2031 +
           ((C3055 * C1059 - C3051 * C1067 + C3057 * C1058 - C29548 * C1065) *
                C3109 +
            (C3055 * C1219 - C3051 * C1225 + C3057 * C1220 - C29548 * C1226) *
                C3053 +
            (C3055 * C2553 - C3051 * C2556 + C3057 * C2554 - C29548 * C2558) *
                C3110 +
            (C3055 * C2727 - C3051 * C2730 + C3057 * C2728 - C29548 * C2731) *
                C29555) *
               C29499 * C2032) *
              C29425 * C1509 +
          (((C3055 * C94 - C3051 * C100 + C3057 * C95 - C29548 * C102) * C3109 +
            (C3055 * C278 - C3051 * C283 + C3057 * C279 - C29548 * C284) *
                C3053 +
            (C4865 - C4866 + C4867 - C4868) * C3110 +
            (C4869 - C4870 + C4871 - C4872) * C29555) *
               C29499 * C2031 +
           ((C3051 * C1065 - C3055 * C1058 + C29548 * C1063 - C3057 * C1057) *
                C3109 +
            (C3051 * C1226 - C3055 * C1220 + C29548 * C1227 - C3057 * C1221) *
                C3053 +
            (C3051 * C2558 - C3055 * C2554 + C29548 * C2560 - C3057 * C2555) *
                C3110 +
            (C3051 * C2731 - C3055 * C2728 + C29548 * C2732 - C3057 * C2729) *
                C29555) *
               C29499 * C2032) *
              C29425 * C1510)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[8] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C3109 * C152 - C3277 * C93 - C3109 * C277 + C3053 * C326 +
             C3110 * C678 - C3278 * C618 - C3110 * C778 + C29555 * C830) *
                C3051 +
            (C3304 + C3305) * C29548) *
               C29499 * C2031 -
           ((C5583 + C5584) * C29548 +
            (C3110 * C2615 - C3278 * C2553 - C3110 * C2727 + C29555 * C2783 +
             C3109 * C1119 - C3277 * C1059 - C3109 * C1219 + C3053 * C1271) *
                C3051) *
               C29499 * C2032) *
              C29425 * C1509 +
          (((C5584 + C5583) * C3051 +
            (C3109 * C1121 - C3277 * C1057 - C3109 * C1221 + C3053 * C1269 +
             C3110 * C2617 - C3278 * C2555 - C3110 * C2729 + C29555 * C2785) *
                C29548) *
               C29499 * C2032 -
           ((C3306 + C3307) * C29548 + (C3305 + C3304) * C3051) * C29499 *
               C2031) *
              C29425 * C1510)) /
        (p * q * std::sqrt(p + q));
    d2eeyz[8] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  (((((C29499 * C215 - C214 * C93) * C3109 +
                      (C29499 * C390 - C214 * C277) * C3053 +
                      (C3714 - C3715) * C3110 + (C3900 - C3901) * C29555) *
                         C3051 +
                     ((C226 - C227) * C3109 + (C396 - C397) * C3053 +
                      C4795 * C3110 + C5019 * C29555) *
                         C29548) *
                        C2031 +
                    (((C214 * C1059 - C29499 * C1169) * C3109 +
                      (C214 * C1219 - C29499 * C1313) * C3053 +
                      (C214 * C2553 - C29499 * C2671) * C3110 +
                      (C214 * C2727 - C29499 * C2836) * C29555) *
                         C3051 +
                     ((C2150 - C2151) * C3109 + (C2326 - C2327) * C3053 +
                      (C5435 - C5436) * C3110 + (C5651 - C5652) * C29555) *
                         C29548) *
                        C2032) *
                       C29425 * C1509 +
                   ((((C227 - C226) * C3109 + (C397 - C396) * C3053 +
                      C4797 * C3110 + C5020 * C29555) *
                         C3051 +
                     ((C231 - C230) * C3109 + (C400 - C399) * C3053 +
                      (C1632 - C1633) * C3110 + (C1806 - C1807) * C29555) *
                         C29548) *
                        C2031 +
                    (((C2151 - C2150) * C3109 + (C2327 - C2326) * C3053 +
                      (C5436 - C5435) * C3110 + (C5652 - C5651) * C29555) *
                         C3051 +
                     ((C2155 - C2154) * C3109 + (C2329 - C2328) * C3053 +
                      (C29499 * C2673 - C214 * C2555) * C3110 +
                      (C29499 * C2838 - C214 * C2729) * C29555) *
                         C29548) *
                        C2032) *
                       C29425 * C1510)) /
                 (p * q * std::sqrt(p + q));
    d2eezx[8] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C3051 * C98 - C3055 * C93 + C29548 * C100 - C3057 * C94) * C214 +
             (C3051 * C448 - C3055 * C443 + C29548 * C449 - C3057 * C444) *
                 C29499) *
                C3053 +
            ((C3780 - C3781 + C3782 - C3783) * C214 +
             (C3960 - C3961 + C3962 - C3963) * C29499) *
                C29555) *
               C2031 +
           (((C3055 * C1059 - C3051 * C1067 + C3057 * C1058 - C29548 * C1065) *
                 C214 +
             (C3055 * C1357 - C3051 * C1363 + C3057 * C1358 - C29548 * C1364) *
                 C29499) *
                C3053 +
            ((C3055 * C2553 - C3051 * C2556 + C3057 * C2554 - C29548 * C2558) *
                 C214 +
             (C3055 * C2889 - C3051 * C2892 + C3057 * C2890 - C29548 * C2893) *
                 C29499) *
                C29555) *
               C2032) *
              C29425 * C1509 +
          ((((C3055 * C94 - C3051 * C100 + C3057 * C95 - C29548 * C102) * C214 +
             (C3055 * C444 - C3051 * C449 + C3057 * C445 - C29548 * C450) *
                 C29499) *
                C3053 +
            ((C4865 - C4866 + C4867 - C4868) * C214 +
             (C5087 - C5088 + C5089 - C5090) * C29499) *
                C29555) *
               C2031 +
           (((C3051 * C1065 - C3055 * C1058 + C29548 * C1063 - C3057 * C1057) *
                 C214 +
             (C3051 * C1364 - C3055 * C1358 + C29548 * C1365 - C3057 * C1359) *
                 C29499) *
                C3053 +
            ((C3051 * C2558 - C3055 * C2554 + C29548 * C2560 - C3057 * C2555) *
                 C214 +
             (C3051 * C2893 - C3055 * C2890 + C29548 * C2894 - C3057 * C2891) *
                 C29499) *
                C29555) *
               C2032) *
              C29425 * C1510)) /
        (p * q * std::sqrt(p + q));
    d2eezy[8] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C3053 * C152 - C3109 * C93 + C29555 * C678 - C3110 * C618) *
                 C214 +
             (C3053 * C491 - C3109 * C443 + C29555 * C966 - C3110 * C916) *
                 C29499) *
                C3051 +
            ((C3112 - C3113 + C3114 - C3115) * C214 +
             (C3458 - C3459 + C3460 - C3461) * C29499) *
                C29548) *
               C2031 +
           (((C3109 * C1059 - C3053 * C1119 + C3110 * C2553 - C29555 * C2615) *
                 C214 +
             (C3109 * C1357 - C3053 * C1407 + C3110 * C2889 - C29555 * C2945) *
                 C29499) *
                C3051 +
            ((C5361 - C5362 + C5363 - C5364) * C214 +
             (C5785 - C5786 + C5787 - C5788) * C29499) *
                C29548) *
               C2032) *
              C29425 * C1509 +
          ((((C3113 - C3112 + C3115 - C3114) * C214 +
             (C3459 - C3458 + C3461 - C3460) * C29499) *
                C3051 +
            ((C3120 - C3121 + C3122 - C3123) * C214 +
             (C3462 - C3463 + C3464 - C3465) * C29499) *
                C29548) *
               C2031 +
           (((C5362 - C5361 + C5364 - C5363) * C214 +
             (C5786 - C5785 + C5788 - C5787) * C29499) *
                C3051 +
            ((C3053 * C1121 - C3109 * C1057 + C29555 * C2617 - C3110 * C2555) *
                 C214 +
             (C3053 * C1409 - C3109 * C1359 + C29555 * C2947 - C3110 * C2891) *
                 C29499) *
                C29548) *
               C2032) *
              C29425 * C1510)) /
        (p * q * std::sqrt(p + q));
    d2eezz[8] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C214 * C215 - C544 * C93 - C214 * C443 + C29499 * C545) * C3053 +
             C4090 * C29555) *
                C3051 +
            (C3516 + C3517) * C29548) *
               C2031 -
           ((C5863 + C5859) * C29548 +
            ((C214 * C2671 - C544 * C2553 - C214 * C2889 + C29499 * C2998) *
                 C29555 +
             (C214 * C1169 - C544 * C1059 - C214 * C1357 + C29499 * C1453) *
                 C3053) *
                C3051) *
               C2032) *
              C29425 * C1509 +
          (((C5859 + C5863) * C3051 +
            (C2500 * C3053 +
             (C214 * C2673 - C544 * C2555 - C214 * C2891 + C29499 * C3000) *
                 C29555) *
                C29548) *
               C2032 -
           ((C3518 + C3519) * C29548 + (C3517 + C3516) * C3051) * C2031) *
              C29425 * C1510)) /
        (p * q * std::sqrt(p + q));
    d2eexx[9] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C3055 * C98 - C3056 * C93 - C3055 * C99 + C3051 * C108 +
            C3057 * C100 - C3058 * C94 - C3057 * C101 + C29548 * C109) *
               C29499 * C3053 +
           (C3055 * C626 - C3056 * C618 - C3055 * C627 + C3051 * C636 +
            C3057 * C624 - C3058 * C617 - C3057 * C625 + C29548 * C635) *
               C29499 * C29555) *
              C29439 * C29425 * C84 -
          ((C3057 * C622 - C3058 * C616 - C3057 * C623 + C29548 * C634 +
            C3055 * C624 - C3056 * C617 - C3055 * C625 + C3051 * C635) *
               C29499 * C29555 +
           (C3057 * C102 - C3058 * C95 - C3057 * C103 + C29548 * C110 +
            C3055 * C100 - C3056 * C94 - C3055 * C101 + C3051 * C109) *
               C29499 * C3053) *
              C29439 * C29425 * C85 +
          ((C3055 * C102 - C3056 * C95 - C3055 * C103 + C3051 * C110 +
            C3057 * C104 - C3058 * C96 - C3057 * C105 + C29548 * C111) *
               C29499 * C3053 +
           (C3055 * C622 - C3056 * C616 - C3055 * C623 + C3051 * C634 +
            C3057 * C1512 - C3058 * C1511 - C3057 * C1513 + C29548 * C1514) *
               C29499 * C29555) *
              C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C3055 * C98 - C3056 * C93 - C3055 * C99 + C3051 * C108 +
            C3057 * C100 - C3058 * C94 - C3057 * C101 + C29548 * C109) *
               C29499 * C3053 +
           (C3602 + C3603) * C29499 * C29555) *
              C29439 * C612 -
          ((C3604 + C3605) * C29499 * C29555 +
           (C3603 + C3602) * C29499 * C3053) *
              C29439 * C613 +
          ((C3605 + C3604) * C29499 * C3053 +
           (C3055 * C3571 - C3056 * C3569 - C3055 * C3572 + C3051 * C3575 +
            C3057 * C3573 - C3058 * C3570 - C3057 * C3574 + C29548 * C3576) *
               C29499 * C29555) *
              C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q));
    d2eexy[9] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C3053 * C152 - C3109 * C93 + C29555 * C678 - C3110 * C618) * C3055 +
           (C3053 * C157 - C3109 * C99 + C29555 * C684 - C3110 * C627) * C3051 +
           (C3112 - C3113 + C3114 - C3115) * C3057 +
           (C3116 - C3117 + C3118 - C3119) * C29548) *
              C29499 * C29439 * C29425 * C84 +
          ((C3113 - C3112 + C3115 - C3114) * C3055 +
           (C3117 - C3116 + C3119 - C3118) * C3051 +
           (C3120 - C3121 + C3122 - C3123) * C3057 +
           (C3124 - C3125 + C3126 - C3127) * C29548) *
              C29499 * C29439 * C29425 * C85 +
          ((C3121 - C3120 + C3123 - C3122) * C3055 +
           (C3125 - C3124 + C3127 - C3126) * C3051 +
           (C3053 * C155 - C3109 * C96 + C29555 * C1565 - C3110 * C1511) *
               C3057 +
           (C3053 * C160 - C3109 * C105 + C29555 * C1566 - C3110 * C1513) *
               C29548) *
              C29499 * C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C3053 * C152 - C3109 * C93 + C29555 * C678 - C3110 * C618) * C3055 +
           (C3053 * C157 - C3109 * C99 + C29555 * C684 - C3110 * C627) * C3051 +
           (C3112 - C3113 + C3114 - C3115) * C3057 +
           (C3116 - C3117 + C3118 - C3119) * C29548) *
              C29499 * C29439 * C612 +
          ((C3109 * C618 - C3053 * C678 + C3110 * C619 - C29555 * C681) *
               C3055 +
           (C3109 * C627 - C3053 * C684 + C3110 * C629 - C29555 * C687) *
               C3051 +
           (C3109 * C617 - C3053 * C679 + C3110 * C620 - C29555 * C682) *
               C3057 +
           (C3109 * C625 - C3053 * C685 + C3110 * C631 - C29555 * C688) *
               C29548) *
              C29499 * C29439 * C613 +
          ((C3053 * C681 - C3109 * C619 + C29555 * C3655 - C3110 * C3569) *
               C3055 +
           (C3053 * C687 - C3109 * C629 + C29555 * C3657 - C3110 * C3572) *
               C3051 +
           (C3053 * C682 - C3109 * C620 + C29555 * C3656 - C3110 * C3570) *
               C3057 +
           (C3053 * C688 - C3109 * C631 + C29555 * C3658 - C3110 * C3574) *
               C29548) *
              C29499 * C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q));
    d2eexz[9] += (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C29499 * C215 - C214 * C93) * C3055 +
                     (C29499 * C220 - C214 * C99) * C3051 +
                     (C226 - C227) * C3057 + (C228 - C229) * C29548) *
                        C3053 +
                    ((C29499 * C728 - C214 * C618) * C3055 +
                     (C29499 * C734 - C214 * C627) * C3051 +
                     (C1629 - C1628) * C3057 + (C1631 - C1630) * C29548) *
                        C29555) *
                       C29439 * C29425 * C84 +
                   (((C227 - C226) * C3055 + (C229 - C228) * C3051 +
                     (C231 - C230) * C3057 + (C233 - C232) * C29548) *
                        C3053 +
                    ((C1628 - C1629) * C3055 + (C1630 - C1631) * C3051 +
                     (C1632 - C1633) * C3057 + (C1634 - C1635) * C29548) *
                        C29555) *
                       C29439 * C29425 * C85 +
                   ((C238 * C3055 + C239 * C3051 + (C235 - C234) * C3057 +
                     (C237 - C236) * C29548) *
                        C3053 +
                    ((C1633 - C1632) * C3055 + (C1635 - C1634) * C3051 +
                     (C29499 * C1625 - C214 * C1511) * C3057 +
                     (C29499 * C1626 - C214 * C1513) * C29548) *
                        C29555) *
                       C29439 * C29425 * C86)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C29499 * C215 - C214 * C93) * C3055 +
                     (C29499 * C220 - C214 * C99) * C3051 +
                     (C226 - C227) * C3057 + (C228 - C229) * C29548) *
                        C3053 +
                    ((C3714 - C3715) * C3055 + (C3716 - C3717) * C3051 +
                     (C1629 - C1628) * C3057 + (C1631 - C1630) * C29548) *
                        C29555) *
                       C29439 * C612 +
                   (((C3715 - C3714) * C3055 + (C3717 - C3716) * C3051 +
                     (C1628 - C1629) * C3057 + (C1630 - C1631) * C29548) *
                        C3053 +
                    ((C3718 - C3719) * C3055 + (C3720 - C3721) * C3051 +
                     (C3722 - C3723) * C3057 + (C3724 - C3725) * C29548) *
                        C29555) *
                       C29439 * C613 +
                   (((C3719 - C3718) * C3055 + (C3721 - C3720) * C3051 +
                     (C3723 - C3722) * C3057 + (C3725 - C3724) * C29548) *
                        C3053 +
                    ((C29499 * C3709 - C214 * C3569) * C3055 +
                     (C29499 * C3711 - C214 * C3572) * C3051 +
                     (C29499 * C3710 - C214 * C3570) * C3057 +
                     (C29499 * C3712 - C214 * C3574) * C29548) *
                        C29555) *
                       C29439 * C614) *
                  C29413) /
                     (p * q * std::sqrt(p + q));
    d2eeyx[9] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C3051 * C98 - C3055 * C93 + C29548 * C100 - C3057 * C94) * C3109 +
           (C3051 * C282 - C3055 * C277 + C29548 * C283 - C3057 * C278) *
               C3053 +
           (C3051 * C626 - C3055 * C618 + C29548 * C624 - C3057 * C617) *
               C3110 +
           (C3051 * C784 - C3055 * C778 + C29548 * C785 - C3057 * C779) *
               C29555) *
              C29499 * C29439 * C29425 * C84 +
          ((C3055 * C94 - C3051 * C100 + C3057 * C95 - C29548 * C102) * C3109 +
           (C3055 * C278 - C3051 * C283 + C3057 * C279 - C29548 * C284) *
               C3053 +
           (C3055 * C617 - C3051 * C624 + C3057 * C616 - C29548 * C622) *
               C3110 +
           (C3055 * C779 - C3051 * C785 + C3057 * C780 - C29548 * C786) *
               C29555) *
              C29499 * C29439 * C29425 * C85 +
          ((C3051 * C102 - C3055 * C95 + C29548 * C104 - C3057 * C96) * C3109 +
           (C3051 * C284 - C3055 * C279 + C29548 * C285 - C3057 * C280) *
               C3053 +
           (C3051 * C622 - C3055 * C616 + C29548 * C1512 - C3057 * C1511) *
               C3110 +
           (C3051 * C786 - C3055 * C780 + C29548 * C1686 - C3057 * C1685) *
               C29555) *
              C29499 * C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C3051 * C98 - C3055 * C93 + C29548 * C100 - C3057 * C94) * C3109 +
           (C3051 * C282 - C3055 * C277 + C29548 * C283 - C3057 * C278) *
               C3053 +
           (C3780 - C3781 + C3782 - C3783) * C3110 +
           (C3784 - C3785 + C3786 - C3787) * C29555) *
              C29499 * C29439 * C612 +
          ((C3781 - C3780 + C3783 - C3782) * C3109 +
           (C3785 - C3784 + C3787 - C3786) * C3053 +
           (C3788 - C3789 + C3790 - C3791) * C3110 +
           (C3792 - C3793 + C3794 - C3795) * C29555) *
              C29499 * C29439 * C613 +
          ((C3789 - C3788 + C3791 - C3790) * C3109 +
           (C3793 - C3792 + C3795 - C3794) * C3053 +
           (C3051 * C3571 - C3055 * C3569 + C29548 * C3573 - C3057 * C3570) *
               C3110 +
           (C3051 * C3777 - C3055 * C3775 + C29548 * C3778 - C3057 * C3776) *
               C29555) *
              C29499 * C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q));
    d2eeyy[9] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C3109 * C152 - C3277 * C93 - C3109 * C277 + C3053 * C326 +
            C3110 * C678 - C3278 * C618 - C3110 * C778 + C29555 * C830) *
               C3051 +
           (C3304 + C3305) * C29548) *
              C29499 * C29439 * C29425 * C84 -
          ((C3306 + C3307) * C29548 + (C3305 + C3304) * C3051) * C29499 *
              C29439 * C29425 * C85 +
          ((C3307 + C3306) * C3051 +
           (C3109 * C155 - C3277 * C96 - C3109 * C280 + C3053 * C329 +
            C3110 * C1565 - C3278 * C1511 - C3110 * C1685 + C29555 * C1737) *
               C29548) *
              C29499 * C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C3109 * C152 - C3277 * C93 - C3109 * C277 + C3053 * C326 +
            C3110 * C678 - C3278 * C618 - C3110 * C778 + C29555 * C830) *
               C3051 +
           (C3304 + C3305) * C29548) *
              C29499 * C29439 * C612 -
          ((C3110 * C682 - C3278 * C620 - C3110 * C782 + C29555 * C832 +
            C3109 * C679 - C3277 * C617 - C3109 * C779 + C3053 * C829) *
               C29548 +
           (C3110 * C681 - C3278 * C619 - C3110 * C781 + C29555 * C831 +
            C3109 * C678 - C3277 * C618 - C3109 * C778 + C3053 * C830) *
               C3051) *
              C29499 * C29439 * C613 +
          ((C3109 * C681 - C3277 * C619 - C3109 * C781 + C3053 * C831 +
            C3110 * C3655 - C3278 * C3569 - C3110 * C3775 + C29555 * C3845) *
               C3051 +
           (C3109 * C682 - C3277 * C620 - C3109 * C782 + C3053 * C832 +
            C3110 * C3656 - C3278 * C3570 - C3110 * C3776 + C29555 * C3846) *
               C29548) *
              C29499 * C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q));
    d2eeyz[9] += (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C29499 * C215 - C214 * C93) * C3109 +
                     (C29499 * C390 - C214 * C277) * C3053 +
                     (C29499 * C728 - C214 * C618) * C3110 +
                     (C29499 * C872 - C214 * C778) * C29555) *
                        C3051 +
                    ((C226 - C227) * C3109 + (C396 - C397) * C3053 +
                     (C1629 - C1628) * C3110 + (C1805 - C1804) * C29555) *
                        C29548) *
                       C29439 * C29425 * C84 +
                   (((C227 - C226) * C3109 + (C397 - C396) * C3053 +
                     (C1628 - C1629) * C3110 + (C1804 - C1805) * C29555) *
                        C3051 +
                    ((C231 - C230) * C3109 + (C400 - C399) * C3053 +
                     (C1632 - C1633) * C3110 + (C1806 - C1807) * C29555) *
                        C29548) *
                       C29439 * C29425 * C85 +
                   ((C238 * C3109 + C403 * C3053 + (C1633 - C1632) * C3110 +
                     (C1807 - C1806) * C29555) *
                        C3051 +
                    ((C235 - C234) * C3109 + (C402 - C401) * C3053 +
                     (C29499 * C1625 - C214 * C1511) * C3110 +
                     (C29499 * C1802 - C214 * C1685) * C29555) *
                        C29548) *
                       C29439 * C29425 * C86)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C29499 * C215 - C214 * C93) * C3109 +
                     (C29499 * C390 - C214 * C277) * C3053 +
                     (C3714 - C3715) * C3110 + (C3900 - C3901) * C29555) *
                        C3051 +
                    ((C226 - C227) * C3109 + (C396 - C397) * C3053 +
                     (C1629 - C1628) * C3110 + (C1805 - C1804) * C29555) *
                        C29548) *
                       C29439 * C612 +
                   (((C3715 - C3714) * C3109 + (C3901 - C3900) * C3053 +
                     (C3718 - C3719) * C3110 + (C3902 - C3903) * C29555) *
                        C3051 +
                    ((C1628 - C1629) * C3109 + (C1804 - C1805) * C3053 +
                     (C3722 - C3723) * C3110 + (C3904 - C3905) * C29555) *
                        C29548) *
                       C29439 * C613 +
                   (((C3719 - C3718) * C3109 + (C3903 - C3902) * C3053 +
                     (C29499 * C3709 - C214 * C3569) * C3110 +
                     (C29499 * C3897 - C214 * C3775) * C29555) *
                        C3051 +
                    ((C3723 - C3722) * C3109 + (C3905 - C3904) * C3053 +
                     (C29499 * C3710 - C214 * C3570) * C3110 +
                     (C29499 * C3898 - C214 * C3776) * C29555) *
                        C29548) *
                       C29439 * C614) *
                  C29413) /
                     (p * q * std::sqrt(p + q));
    d2eezx[9] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C3051 * C98 - C3055 * C93 + C29548 * C100 - C3057 * C94) * C214 +
            (C3051 * C448 - C3055 * C443 + C29548 * C449 - C3057 * C444) *
                C29499) *
               C3053 +
           ((C3051 * C626 - C3055 * C618 + C29548 * C624 - C3057 * C617) *
                C214 +
            (C3051 * C922 - C3055 * C916 + C29548 * C923 - C3057 * C917) *
                C29499) *
               C29555) *
              C29439 * C29425 * C84 +
          (((C3055 * C94 - C3051 * C100 + C3057 * C95 - C29548 * C102) * C214 +
            (C3055 * C444 - C3051 * C449 + C3057 * C445 - C29548 * C450) *
                C29499) *
               C3053 +
           ((C3055 * C617 - C3051 * C624 + C3057 * C616 - C29548 * C622) *
                C214 +
            (C3055 * C917 - C3051 * C923 + C3057 * C918 - C29548 * C924) *
                C29499) *
               C29555) *
              C29439 * C29425 * C85 +
          (((C3051 * C102 - C3055 * C95 + C29548 * C104 - C3057 * C96) * C214 +
            (C3051 * C450 - C3055 * C445 + C29548 * C451 - C3057 * C446) *
                C29499) *
               C3053 +
           ((C3051 * C622 - C3055 * C616 + C29548 * C1512 - C3057 * C1511) *
                C214 +
            (C3051 * C924 - C3055 * C918 + C29548 * C1858 - C3057 * C1857) *
                C29499) *
               C29555) *
              C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C3051 * C98 - C3055 * C93 + C29548 * C100 - C3057 * C94) * C214 +
            (C3051 * C448 - C3055 * C443 + C29548 * C449 - C3057 * C444) *
                C29499) *
               C3053 +
           ((C3780 - C3781 + C3782 - C3783) * C214 +
            (C3960 - C3961 + C3962 - C3963) * C29499) *
               C29555) *
              C29439 * C612 +
          (((C3781 - C3780 + C3783 - C3782) * C214 +
            (C3961 - C3960 + C3963 - C3962) * C29499) *
               C3053 +
           ((C3788 - C3789 + C3790 - C3791) * C214 +
            (C3964 - C3965 + C3966 - C3967) * C29499) *
               C29555) *
              C29439 * C613 +
          (((C3789 - C3788 + C3791 - C3790) * C214 +
            (C3965 - C3964 + C3967 - C3966) * C29499) *
               C3053 +
           ((C3051 * C3571 - C3055 * C3569 + C29548 * C3573 - C3057 * C3570) *
                C214 +
            (C3051 * C3957 - C3055 * C3955 + C29548 * C3958 - C3057 * C3956) *
                C29499) *
               C29555) *
              C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q));
    d2eezy[9] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C3053 * C152 - C3109 * C93 + C29555 * C678 - C3110 * C618) * C214 +
            (C3053 * C491 - C3109 * C443 + C29555 * C966 - C3110 * C916) *
                C29499) *
               C3051 +
           ((C3112 - C3113 + C3114 - C3115) * C214 +
            (C3458 - C3459 + C3460 - C3461) * C29499) *
               C29548) *
              C29439 * C29425 * C84 +
          (((C3113 - C3112 + C3115 - C3114) * C214 +
            (C3459 - C3458 + C3461 - C3460) * C29499) *
               C3051 +
           ((C3120 - C3121 + C3122 - C3123) * C214 +
            (C3462 - C3463 + C3464 - C3465) * C29499) *
               C29548) *
              C29439 * C29425 * C85 +
          (((C3121 - C3120 + C3123 - C3122) * C214 +
            (C3463 - C3462 + C3465 - C3464) * C29499) *
               C3051 +
           ((C3053 * C155 - C3109 * C96 + C29555 * C1565 - C3110 * C1511) *
                C214 +
            (C3053 * C494 - C3109 * C446 + C29555 * C1909 - C3110 * C1857) *
                C29499) *
               C29548) *
              C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C3053 * C152 - C3109 * C93 + C29555 * C678 - C3110 * C618) * C214 +
            (C3053 * C491 - C3109 * C443 + C29555 * C966 - C3110 * C916) *
                C29499) *
               C3051 +
           ((C3112 - C3113 + C3114 - C3115) * C214 +
            (C3458 - C3459 + C3460 - C3461) * C29499) *
               C29548) *
              C29439 * C612 +
          (((C3109 * C618 - C3053 * C678 + C3110 * C619 - C29555 * C681) *
                C214 +
            (C3109 * C916 - C3053 * C966 + C3110 * C919 - C29555 * C969) *
                C29499) *
               C3051 +
           ((C3109 * C617 - C3053 * C679 + C3110 * C620 - C29555 * C682) *
                C214 +
            (C3109 * C917 - C3053 * C967 + C3110 * C920 - C29555 * C970) *
                C29499) *
               C29548) *
              C29439 * C613 +
          (((C3053 * C681 - C3109 * C619 + C29555 * C3655 - C3110 * C3569) *
                C214 +
            (C3053 * C969 - C3109 * C919 + C29555 * C4017 - C3110 * C3955) *
                C29499) *
               C3051 +
           ((C3053 * C682 - C3109 * C620 + C29555 * C3656 - C3110 * C3570) *
                C214 +
            (C3053 * C970 - C3109 * C920 + C29555 * C4018 - C3110 * C3956) *
                C29499) *
               C29548) *
              C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q));
    d2eezz[9] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C214 * C215 - C544 * C93 - C214 * C443 + C29499 * C545) * C3053 +
            (C214 * C728 - C544 * C618 - C214 * C916 + C29499 * C1012) *
                C29555) *
               C3051 +
           (C3516 + C3517) * C29548) *
              C29439 * C29425 * C84 -
          ((C3518 + C3519) * C29548 + (C3517 + C3516) * C3051) * C29439 *
              C29425 * C85 +
          ((C3519 + C3518) * C3051 +
           (C571 * C3053 +
            (C214 * C1625 - C544 * C1511 - C214 * C1857 + C29499 * C1964) *
                C29555) *
               C29548) *
              C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C214 * C215 - C544 * C93 - C214 * C443 + C29499 * C545) * C3053 +
            C4090 * C29555) *
               C3051 +
           (C3516 + C3517) * C29548) *
              C29439 * C612 -
          ((C4091 * C29555 + C1979 * C3053) * C29548 +
           (C4092 * C29555 + C4090 * C3053) * C3051) *
              C29439 * C613 +
          ((C4092 * C3053 +
            (C214 * C3709 - C544 * C3569 - C214 * C3955 + C29499 * C4069) *
                C29555) *
               C3051 +
           (C4091 * C3053 +
            (C214 * C3710 - C544 * C3570 - C214 * C3956 + C29499 * C4070) *
                C29555) *
               C29548) *
              C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q));
    d2eexx[10] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C3055 * C98 - C3056 * C93 - C3055 * C99 + C3051 * C108 +
             C3057 * C100 - C3058 * C94 - C3057 * C101 + C29548 * C109) *
                C6578 +
            (C7569 + C7570) * C29557) *
               C29484 * C29439 * C1507 -
           ((C5950 + C5951) * C29557 + (C3603 + C3602) * C6578) * C29484 *
               C29439 * C1508) *
              C1509 +
          (((C4653 + C4654) * C6578 +
            (C3055 * C2558 - C3056 * C2554 - C3055 * C2559 + C3051 * C2563 +
             C3057 * C2560 - C3058 * C2555 - C3057 * C2561 + C29548 * C2564) *
                C29557) *
               C29484 * C29439 * C1508 -
           ((C3057 * C1063 - C3058 * C1057 - C3057 * C1064 + C29548 * C1075 +
             C3055 * C1065 - C3056 * C1058 - C3055 * C1066 + C3051 * C1076) *
                C29557 +
            (C3057 * C102 - C3058 * C95 - C3057 * C103 + C29548 * C110 +
             C3055 * C100 - C3056 * C94 - C3055 * C101 + C3051 * C109) *
                C6578) *
               C29484 * C29439 * C1507) *
              C1510)) /
        (p * q * std::sqrt(p + q));
    d2eexy[10] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C29484 * C152 - C151 * C93) * C3055 +
                       (C29484 * C157 - C151 * C99) * C3051 +
                       (C163 - C164) * C3057 + (C165 - C166) * C29548) *
                          C6578 +
                      ((C7627 - C7628) * C3055 + (C7629 - C7630) * C3051 +
                       (C2091 - C2090) * C3057 + (C2093 - C2092) * C29548) *
                          C29557) *
                         C29439 * C1507 +
                     (((C151 * C618 - C29484 * C678) * C3055 +
                       (C151 * C627 - C29484 * C684) * C3051 +
                       (C1568 - C1569) * C3057 + (C1570 - C1571) * C29548) *
                          C6578 +
                      ((C151 * C2553 - C29484 * C2615) * C3055 +
                       (C151 * C2557 - C29484 * C2618) * C3051 +
                       (C8196 - C8197) * C3057 + (C8198 - C8199) * C29548) *
                          C29557) *
                         C29439 * C1508) *
                        C1509 +
                    ((((C164 - C163) * C3055 + (C166 - C165) * C3051 +
                       (C168 - C167) * C3057 + (C170 - C169) * C29548) *
                          C6578 +
                      ((C2090 - C2091) * C3055 + (C2092 - C2093) * C3051 +
                       (C2094 - C2095) * C3057 + (C2096 - C2097) * C29548) *
                          C29557) *
                         C29439 * C1507 +
                     (((C1569 - C1568) * C3055 + (C1571 - C1570) * C3051 +
                       (C1573 - C1572) * C3057 + (C1575 - C1574) * C29548) *
                          C6578 +
                      ((C8197 - C8196) * C3055 + (C8199 - C8198) * C3051 +
                       (C29484 * C2617 - C151 * C2555) * C3057 +
                       (C29484 * C2620 - C151 * C2561) * C29548) *
                          C29557) *
                         C29439 * C1508) *
                        C1510)) /
                  (p * q * std::sqrt(p + q));
    d2eexz[10] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C6578 * C215 - C6680 * C93 + C29557 * C1169 - C6681 * C1059) *
                C3055 +
            (C6578 * C220 - C6680 * C99 + C29557 * C1175 - C6681 * C1068) *
                C3051 +
            (C6683 - C6684 + C6685 - C6686) * C3057 +
            (C6687 - C6688 + C6689 - C6690) * C29548) *
               C29484 * C29439 * C1507 +
           ((C6680 * C618 - C6578 * C728 + C6681 * C2553 - C29557 * C2671) *
                C3055 +
            (C6680 * C627 - C6578 * C734 + C6681 * C2557 - C29557 * C2674) *
                C3051 +
            (C8266 - C8267 + C8268 - C8269) * C3057 +
            (C8270 - C8271 + C8272 - C8273) * C29548) *
               C29484 * C29439 * C1508) *
              C1509 +
          (((C6684 - C6683 + C6686 - C6685) * C3055 +
            (C6688 - C6687 + C6690 - C6689) * C3051 +
            (C6691 - C6692 + C6693 - C6694) * C3057 +
            (C6695 - C6696 + C6697 - C6698) * C29548) *
               C29484 * C29439 * C1507 +
           ((C8267 - C8266 + C8269 - C8268) * C3055 +
            (C8271 - C8270 + C8273 - C8272) * C3051 +
            (C6578 * C730 - C6680 * C616 + C29557 * C2673 - C6681 * C2555) *
                C3057 +
            (C6578 * C736 - C6680 * C623 + C29557 * C2676 - C6681 * C2561) *
                C29548) *
               C29484 * C29439 * C1508) *
              C1510)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[10] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C3051 * C98 - C3055 * C93 + C29548 * C100 - C3057 * C94) * C151 +
             (C3051 * C282 - C3055 * C277 + C29548 * C283 - C3057 * C278) *
                 C29484) *
                C6578 +
            ((C7747 - C7748 + C7749 - C7750) * C151 +
             (C7751 - C7752 + C7753 - C7754) * C29484) *
                C29557) *
               C29439 * C1507 +
           (((C3781 - C3780 + C3783 - C3782) * C151 +
             (C3785 - C3784 + C3787 - C3786) * C29484) *
                C6578 +
            ((C6166 - C6167 + C6168 - C6169) * C151 +
             (C6170 - C6171 + C6172 - C6173) * C29484) *
                C29557) *
               C29439 * C1508) *
              C1509 +
          ((((C3055 * C94 - C3051 * C100 + C3057 * C95 - C29548 * C102) * C151 +
             (C3055 * C278 - C3051 * C283 + C3057 * C279 - C29548 * C284) *
                 C29484) *
                C6578 +
            ((C3055 * C1058 - C3051 * C1065 + C3057 * C1057 - C29548 * C1063) *
                 C151 +
             (C3055 * C1220 - C3051 * C1226 + C3057 * C1221 - C29548 * C1227) *
                 C29484) *
                C29557) *
               C29439 * C1507 +
           (((C4866 - C4865 + C4868 - C4867) * C151 +
             (C4870 - C4869 + C4872 - C4871) * C29484) *
                C6578 +
            ((C3051 * C2558 - C3055 * C2554 + C29548 * C2560 - C3057 * C2555) *
                 C151 +
             (C3051 * C2731 - C3055 * C2728 + C29548 * C2732 - C3057 * C2729) *
                 C29484) *
                C29557) *
               C29439 * C1508) *
              C1510)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[10] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C151 * C152 - C325 * C93 - C151 * C277 + C29484 * C326) * C3051 +
             C350 * C29548) *
                C6578 +
            (C7837 + C7819) * C29557) *
               C29439 * C1507 -
           ((C8412 * C29548 +
             (C151 * C2615 - C325 * C2553 - C151 * C2727 + C29484 * C2783) *
                 C3051) *
                C29557 +
            (C1752 * C29548 +
             (C151 * C678 - C325 * C618 - C151 * C778 + C29484 * C830) *
                 C3051) *
                C6578) *
               C29439 * C1508) *
              C1509 +
          (((C1752 * C3051 + C1751 * C29548) * C6578 +
            (C8412 * C3051 +
             (C151 * C2617 - C325 * C2555 - C151 * C2729 + C29484 * C2785) *
                 C29548) *
                C29557) *
               C29439 * C1508 -
           ((C2273 * C29548 + C2274 * C3051) * C29557 +
            (C351 * C29548 + C350 * C3051) * C6578) *
               C29439 * C1507) *
              C1510)) /
        (p * q * std::sqrt(p + q));
    d2eeyz[10] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C6578 * C215 - C6680 * C93 + C29557 * C1169 - C6681 * C1059) *
                 C151 +
             (C6578 * C390 - C6680 * C277 + C29557 * C1313 - C6681 * C1219) *
                 C29484) *
                C3051 +
            ((C6683 - C6684 + C6685 - C6686) * C151 +
             (C6849 - C6850 + C6851 - C6852) * C29484) *
                C29548) *
               C29439 * C1507 +
           (((C6680 * C618 - C6578 * C728 + C6681 * C2553 - C29557 * C2671) *
                 C151 +
             (C6680 * C778 - C6578 * C872 + C6681 * C2727 - C29557 * C2836) *
                 C29484) *
                C3051 +
            ((C8266 - C8267 + C8268 - C8269) * C151 +
             (C8479 - C8480 + C8481 - C8482) * C29484) *
                C29548) *
               C29439 * C1508) *
              C1509 +
          ((((C6684 - C6683 + C6686 - C6685) * C151 +
             (C6850 - C6849 + C6852 - C6851) * C29484) *
                C3051 +
            ((C6691 - C6692 + C6693 - C6694) * C151 +
             (C6853 - C6854 + C6855 - C6856) * C29484) *
                C29548) *
               C29439 * C1507 +
           (((C8267 - C8266 + C8269 - C8268) * C151 +
             (C8480 - C8479 + C8482 - C8481) * C29484) *
                C3051 +
            ((C6578 * C730 - C6680 * C616 + C29557 * C2673 - C6681 * C2555) *
                 C151 +
             (C6578 * C874 - C6680 * C780 + C29557 * C2838 - C6681 * C2729) *
                 C29484) *
                C29548) *
               C29439 * C1508) *
              C1510)) /
        (p * q * std::sqrt(p + q));
    d2eezx[10] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C3051 * C98 - C3055 * C93 + C29548 * C100 - C3057 * C94) * C6680 +
            (C3051 * C448 - C3055 * C443 + C29548 * C449 - C3057 * C444) *
                C6578 +
            (C7747 - C7748 + C7749 - C7750) * C6681 +
            (C7946 - C7947 + C7948 - C7949) * C29557) *
               C29484 * C29439 * C1507 +
           ((C3781 - C3780 + C3783 - C3782) * C6680 +
            (C3961 - C3960 + C3963 - C3962) * C6578 +
            (C6166 - C6167 + C6168 - C6169) * C6681 +
            (C6382 - C6383 + C6384 - C6385) * C29557) *
               C29484 * C29439 * C1508) *
              C1509 +
          (((C3055 * C94 - C3051 * C100 + C3057 * C95 - C29548 * C102) * C6680 +
            (C3055 * C444 - C3051 * C449 + C3057 * C445 - C29548 * C450) *
                C6578 +
            (C3055 * C1058 - C3051 * C1065 + C3057 * C1057 - C29548 * C1063) *
                C6681 +
            (C3055 * C1358 - C3051 * C1364 + C3057 * C1359 - C29548 * C1365) *
                C29557) *
               C29484 * C29439 * C1507 +
           ((C4866 - C4865 + C4868 - C4867) * C6680 +
            (C5088 - C5087 + C5090 - C5089) * C6578 +
            (C3051 * C2558 - C3055 * C2554 + C29548 * C2560 - C3057 * C2555) *
                C6681 +
            (C3051 * C2893 - C3055 * C2890 + C29548 * C2894 - C3057 * C2891) *
                C29557) *
               C29484 * C29439 * C1508) *
              C1510)) /
        (p * q * std::sqrt(p + q));
    d2eezy[10] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C29484 * C152 - C151 * C93) * C6680 +
                       (C29484 * C491 - C151 * C443) * C6578 +
                       (C7627 - C7628) * C6681 + (C8006 - C8007) * C29557) *
                          C3051 +
                      ((C163 - C164) * C6680 + (C497 - C498) * C6578 +
                       (C2091 - C2090) * C6681 + (C2434 - C2433) * C29557) *
                          C29548) *
                         C29439 * C1507 +
                     (((C151 * C618 - C29484 * C678) * C6680 +
                       (C151 * C916 - C29484 * C966) * C6578 +
                       (C151 * C2553 - C29484 * C2615) * C6681 +
                       (C151 * C2889 - C29484 * C2945) * C29557) *
                          C3051 +
                      ((C1568 - C1569) * C6680 + (C1911 - C1912) * C6578 +
                       (C8196 - C8197) * C6681 + (C8615 - C8616) * C29557) *
                          C29548) *
                         C29439 * C1508) *
                        C1509 +
                    ((((C164 - C163) * C6680 + (C498 - C497) * C6578 +
                       (C2090 - C2091) * C6681 + (C2433 - C2434) * C29557) *
                          C3051 +
                      ((C168 - C167) * C6680 + (C501 - C500) * C6578 +
                       (C2094 - C2095) * C6681 + (C2435 - C2436) * C29557) *
                          C29548) *
                         C29439 * C1507 +
                     (((C1569 - C1568) * C6680 + (C1912 - C1911) * C6578 +
                       (C8197 - C8196) * C6681 + (C8616 - C8615) * C29557) *
                          C3051 +
                      ((C1573 - C1572) * C6680 + (C1914 - C1913) * C6578 +
                       (C29484 * C2617 - C151 * C2555) * C6681 +
                       (C29484 * C2947 - C151 * C2891) * C29557) *
                          C29548) *
                         C29439 * C1508) *
                        C1510)) /
                  (p * q * std::sqrt(p + q));
    d2eezz[10] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C6680 * C215 - C7006 * C93 - C6680 * C443 + C6578 * C545 +
             C6681 * C1169 - C7007 * C1059 - C6681 * C1357 + C29557 * C1453) *
                C29484 * C3051 +
            (C7033 + C7034) * C29484 * C29548) *
               C29439 * C1507 -
           ((C8695 + C8696) * C29484 * C29548 +
            (C6681 * C2671 - C7007 * C2553 - C6681 * C2889 + C29557 * C2998 +
             C6680 * C728 - C7006 * C618 - C6680 * C916 + C6578 * C1012) *
                C29484 * C3051) *
               C29439 * C1508) *
              C1509 +
          (((C8696 + C8695) * C29484 * C3051 +
            (C6680 * C730 - C7006 * C616 - C6680 * C918 + C6578 * C1010 +
             C6681 * C2673 - C7007 * C2555 - C6681 * C2891 + C29557 * C3000) *
                C29484 * C29548) *
               C29439 * C1508 -
           ((C7035 + C7036) * C29484 * C29548 +
            (C7034 + C7033) * C29484 * C3051) *
               C29439 * C1507) *
              C1510)) /
        (p * q * std::sqrt(p + q));
    d2eexx[11] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C3055 * C98 - C3056 * C93 - C3055 * C99 + C3051 * C108 +
             C3057 * C100 - C3058 * C94 - C3057 * C101 + C29548 * C109) *
                C6578 +
            (C7569 + C7570) * C29557) *
               C29484 * C2031 -
           ((C7571 + C7572) * C29557 + (C7570 + C7569) * C6578) * C29484 *
               C2032) *
              C1507 +
          (((C5951 + C5950) * C6578 +
            (C3055 * C4144 - C3056 * C4142 - C3055 * C4145 + C3051 * C4148 +
             C3057 * C4146 - C3058 * C4143 - C3057 * C4147 + C29548 * C4149) *
                C29557) *
               C29484 * C2032 -
           ((C5950 + C5951) * C29557 + (C3603 + C3602) * C6578) * C29484 *
               C2031) *
              C1508) *
         C29413) /
        (p * q * std::sqrt(p + q));
    d2eexy[11] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C29484 * C152 - C151 * C93) * C3055 +
                       (C29484 * C157 - C151 * C99) * C3051 +
                       (C163 - C164) * C3057 + (C165 - C166) * C29548) *
                          C6578 +
                      ((C7627 - C7628) * C3055 + (C7629 - C7630) * C3051 +
                       C8843 * C3057 + C8844 * C29548) *
                          C29557) *
                         C2031 +
                     (((C7628 - C7627) * C3055 + (C7630 - C7629) * C3051 +
                       C8845 * C3057 + C8846 * C29548) *
                          C6578 +
                      ((C7631 - C7632) * C3055 + (C7633 - C7634) * C3051 +
                       (C7635 - C7636) * C3057 + (C7637 - C7638) * C29548) *
                          C29557) *
                         C2032) *
                        C1507 +
                    ((((C151 * C618 - C29484 * C678) * C3055 +
                       (C151 * C627 - C29484 * C684) * C3051 +
                       (C1568 - C1569) * C3057 + (C1570 - C1571) * C29548) *
                          C6578 +
                      ((C9483 - C9484) * C3055 + (C9485 - C9486) * C3051 +
                       (C8196 - C8197) * C3057 + (C8198 - C8199) * C29548) *
                          C29557) *
                         C2031 +
                     (((C9484 - C9483) * C3055 + (C9486 - C9485) * C3051 +
                       (C8197 - C8196) * C3057 + (C8199 - C8198) * C29548) *
                          C6578 +
                      ((C29484 * C4200 - C151 * C4142) * C3055 +
                       (C29484 * C4202 - C151 * C4145) * C3051 +
                       (C29484 * C4201 - C151 * C4143) * C3057 +
                       (C29484 * C4203 - C151 * C4147) * C29548) *
                          C29557) *
                         C2032) *
                        C1508) *
                   C29413) /
                  (p * q * std::sqrt(p + q));
    d2eexz[11] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C6578 * C215 - C6680 * C93 + C29557 * C1169 - C6681 * C1059) *
                C3055 +
            (C6578 * C220 - C6680 * C99 + C29557 * C1175 - C6681 * C1068) *
                C3051 +
            (C6683 - C6684 + C6685 - C6686) * C3057 +
            (C6687 - C6688 + C6689 - C6690) * C29548) *
               C29484 * C2031 +
           ((C6680 * C1059 - C6578 * C1169 + C6681 * C1060 - C29557 * C1172) *
                C3055 +
            (C6680 * C1068 - C6578 * C1175 + C6681 * C1070 - C29557 * C1178) *
                C3051 +
            (C8913 - C8914 + C8915 - C8916) * C3057 +
            (C8917 - C8918 + C8919 - C8920) * C29548) *
               C29484 * C2032) *
              C1507 +
          (((C6680 * C618 - C6578 * C728 + C6681 * C2553 - C29557 * C2671) *
                C3055 +
            (C6680 * C627 - C6578 * C734 + C6681 * C2557 - C29557 * C2674) *
                C3051 +
            (C8266 - C8267 + C8268 - C8269) * C3057 +
            (C8270 - C8271 + C8272 - C8273) * C29548) *
               C29484 * C2031 +
           ((C6578 * C2671 - C6680 * C2553 + C29557 * C4254 - C6681 * C4142) *
                C3055 +
            (C6578 * C2674 - C6680 * C2557 + C29557 * C4256 - C6681 * C4145) *
                C3051 +
            (C6578 * C2672 - C6680 * C2554 + C29557 * C4255 - C6681 * C4143) *
                C3057 +
            (C6578 * C2675 - C6680 * C2559 + C29557 * C4257 - C6681 * C4147) *
                C29548) *
               C29484 * C2032) *
              C1508) *
         C29413) /
        (p * q * std::sqrt(p + q));
    d2eeyx[11] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C3051 * C98 - C3055 * C93 + C29548 * C100 - C3057 * C94) * C151 +
             (C3051 * C282 - C3055 * C277 + C29548 * C283 - C3057 * C278) *
                 C29484) *
                C6578 +
            ((C7747 - C7748 + C7749 - C7750) * C151 +
             (C7751 - C7752 + C7753 - C7754) * C29484) *
                C29557) *
               C2031 +
           (((C7748 - C7747 + C7750 - C7749) * C151 +
             (C7752 - C7751 + C7754 - C7753) * C29484) *
                C6578 +
            ((C7755 - C7756 + C7757 - C7758) * C151 +
             (C7759 - C7760 + C7761 - C7762) * C29484) *
                C29557) *
               C2032) *
              C1507 +
          ((((C3781 - C3780 + C3783 - C3782) * C151 +
             (C3785 - C3784 + C3787 - C3786) * C29484) *
                C6578 +
            ((C6166 - C6167 + C6168 - C6169) * C151 +
             (C6170 - C6171 + C6172 - C6173) * C29484) *
                C29557) *
               C2031 +
           (((C6167 - C6166 + C6169 - C6168) * C151 +
             (C6171 - C6170 + C6173 - C6172) * C29484) *
                C6578 +
            ((C3051 * C4144 - C3055 * C4142 + C29548 * C4146 - C3057 * C4143) *
                 C151 +
             (C3051 * C4310 - C3055 * C4308 + C29548 * C4311 - C3057 * C4309) *
                 C29484) *
                C29557) *
               C2032) *
              C1508) *
         C29413) /
        (p * q * std::sqrt(p + q));
    d2eeyy[11] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C151 * C152 - C325 * C93 - C151 * C277 + C29484 * C326) * C3051 +
             C350 * C29548) *
                C6578 +
            (C7837 + C7819) * C29557) *
               C2031 -
           ((C7838 + C7839) * C29557 + (C7819 + C7837) * C6578) * C2032) *
              C1507 +
          (((C9693 + C9689) * C6578 +
            ((C151 * C4200 - C325 * C4142 - C151 * C4308 + C29484 * C4362) *
                 C3051 +
             (C151 * C4201 - C325 * C4143 - C151 * C4309 + C29484 * C4363) *
                 C29548) *
                C29557) *
               C2032 -
           ((C9689 + C9693) * C29557 +
            (C1752 * C29548 +
             (C151 * C678 - C325 * C618 - C151 * C778 + C29484 * C830) *
                 C3051) *
                C6578) *
               C2031) *
              C1508) *
         C29413) /
        (p * q * std::sqrt(p + q));
    d2eeyz[11] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C6578 * C215 - C6680 * C93 + C29557 * C1169 - C6681 * C1059) *
                 C151 +
             (C6578 * C390 - C6680 * C277 + C29557 * C1313 - C6681 * C1219) *
                 C29484) *
                C3051 +
            ((C6683 - C6684 + C6685 - C6686) * C151 +
             (C6849 - C6850 + C6851 - C6852) * C29484) *
                C29548) *
               C2031 +
           (((C6680 * C1059 - C6578 * C1169 + C6681 * C1060 - C29557 * C1172) *
                 C151 +
             (C6680 * C1219 - C6578 * C1313 + C6681 * C1222 - C29557 * C1316) *
                 C29484) *
                C3051 +
            ((C8913 - C8914 + C8915 - C8916) * C151 +
             (C9129 - C9130 + C9131 - C9132) * C29484) *
                C29548) *
               C2032) *
              C1507 +
          ((((C6680 * C618 - C6578 * C728 + C6681 * C2553 - C29557 * C2671) *
                 C151 +
             (C6680 * C778 - C6578 * C872 + C6681 * C2727 - C29557 * C2836) *
                 C29484) *
                C3051 +
            ((C8266 - C8267 + C8268 - C8269) * C151 +
             (C8479 - C8480 + C8481 - C8482) * C29484) *
                C29548) *
               C2031 +
           (((C6578 * C2671 - C6680 * C2553 + C29557 * C4254 - C6681 * C4142) *
                 C151 +
             (C6578 * C2836 - C6680 * C2727 + C29557 * C4414 - C6681 * C4308) *
                 C29484) *
                C3051 +
            ((C6578 * C2672 - C6680 * C2554 + C29557 * C4255 - C6681 * C4143) *
                 C151 +
             (C6578 * C2837 - C6680 * C2728 + C29557 * C4415 - C6681 * C4309) *
                 C29484) *
                C29548) *
               C2032) *
              C1508) *
         C29413) /
        (p * q * std::sqrt(p + q));
    d2eezx[11] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C3051 * C98 - C3055 * C93 + C29548 * C100 - C3057 * C94) * C6680 +
            (C3051 * C448 - C3055 * C443 + C29548 * C449 - C3057 * C444) *
                C6578 +
            (C7747 - C7748 + C7749 - C7750) * C6681 +
            (C7946 - C7947 + C7948 - C7949) * C29557) *
               C29484 * C2031 +
           ((C7748 - C7747 + C7750 - C7749) * C6680 +
            (C7947 - C7946 + C7949 - C7948) * C6578 +
            (C7755 - C7756 + C7757 - C7758) * C6681 +
            (C7950 - C7951 + C7952 - C7953) * C29557) *
               C29484 * C2032) *
              C1507 +
          (((C3781 - C3780 + C3783 - C3782) * C6680 +
            (C3961 - C3960 + C3963 - C3962) * C6578 +
            (C6166 - C6167 + C6168 - C6169) * C6681 +
            (C6382 - C6383 + C6384 - C6385) * C29557) *
               C29484 * C2031 +
           ((C6167 - C6166 + C6169 - C6168) * C6680 +
            (C6383 - C6382 + C6385 - C6384) * C6578 +
            (C3051 * C4144 - C3055 * C4142 + C29548 * C4146 - C3057 * C4143) *
                C6681 +
            (C3051 * C4468 - C3055 * C4466 + C29548 * C4469 - C3057 * C4467) *
                C29557) *
               C29484 * C2032) *
              C1508) *
         C29413) /
        (p * q * std::sqrt(p + q));
    d2eezy[11] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C29484 * C152 - C151 * C93) * C6680 +
                       (C29484 * C491 - C151 * C443) * C6578 +
                       (C7627 - C7628) * C6681 + (C8006 - C8007) * C29557) *
                          C3051 +
                      ((C163 - C164) * C6680 + (C497 - C498) * C6578 +
                       C8843 * C6681 + C9269 * C29557) *
                          C29548) *
                         C2031 +
                     (((C7628 - C7627) * C6680 + (C8007 - C8006) * C6578 +
                       (C7631 - C7632) * C6681 + (C8008 - C8009) * C29557) *
                          C3051 +
                      (C8845 * C6680 + C9270 * C6578 + (C7635 - C7636) * C6681 +
                       (C8010 - C8011) * C29557) *
                          C29548) *
                         C2032) *
                        C1507 +
                    ((((C151 * C618 - C29484 * C678) * C6680 +
                       (C151 * C916 - C29484 * C966) * C6578 +
                       (C9483 - C9484) * C6681 + (C9892 - C9893) * C29557) *
                          C3051 +
                      ((C1568 - C1569) * C6680 + (C1911 - C1912) * C6578 +
                       (C8196 - C8197) * C6681 + (C8615 - C8616) * C29557) *
                          C29548) *
                         C2031 +
                     (((C9484 - C9483) * C6680 + (C9893 - C9892) * C6578 +
                       (C29484 * C4200 - C151 * C4142) * C6681 +
                       (C29484 * C4520 - C151 * C4466) * C29557) *
                          C3051 +
                      ((C8197 - C8196) * C6680 + (C8616 - C8615) * C6578 +
                       (C29484 * C4201 - C151 * C4143) * C6681 +
                       (C29484 * C4521 - C151 * C4467) * C29557) *
                          C29548) *
                         C2032) *
                        C1508) *
                   C29413) /
                  (p * q * std::sqrt(p + q));
    d2eezz[11] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C6680 * C215 - C7006 * C93 - C6680 * C443 + C6578 * C545 +
             C6681 * C1169 - C7007 * C1059 - C6681 * C1357 + C29557 * C1453) *
                C29484 * C3051 +
            (C7033 + C7034) * C29484 * C29548) *
               C2031 -
           ((C9349 + C9350) * C29484 * C29548 +
            (C6681 * C1172 - C7007 * C1060 - C6681 * C1360 + C29557 * C1454 +
             C6680 * C1169 - C7006 * C1059 - C6680 * C1357 + C6578 * C1453) *
                C29484 * C3051) *
               C2032) *
              C1507 +
          (((C6680 * C2671 - C7006 * C2553 - C6680 * C2889 + C6578 * C2998 +
             C6681 * C4254 - C7007 * C4142 - C6681 * C4466 + C29557 * C4572) *
                C29484 * C3051 +
            (C6680 * C2672 - C7006 * C2554 - C6680 * C2890 + C6578 * C2999 +
             C6681 * C4255 - C7007 * C4143 - C6681 * C4467 + C29557 * C4573) *
                C29484 * C29548) *
               C2032 -
           ((C8695 + C8696) * C29484 * C29548 +
            (C6681 * C2671 - C7007 * C2553 - C6681 * C2889 + C29557 * C2998 +
             C6680 * C728 - C7006 * C618 - C6680 * C916 + C6578 * C1012) *
                C29484 * C3051) *
               C2031) *
              C1508) *
         C29413) /
        (p * q * std::sqrt(p + q));
    d2eexx[12] +=
        (-std::pow(Pi, 2.5) *
         (((C3055 * C98 - C3056 * C93 - C3055 * C99 + C3051 * C108 +
            C3057 * C100 - C3058 * C94 - C3057 * C101 + C29548 * C109) *
               C6578 +
           (C3055 * C1067 - C3056 * C1059 - C3055 * C1068 + C3051 * C1077 +
            C3057 * C1065 - C3058 * C1058 - C3057 * C1066 + C29548 * C1076) *
               C29557) *
              C29484 * C29439 * C612 -
          ((C5950 + C5951) * C29557 + (C3603 + C3602) * C6578) * C29484 *
              C29439 * C613 +
          ((C3605 + C3604) * C6578 +
           (C3055 * C5931 - C3056 * C5929 - C3055 * C5932 + C3051 * C5935 +
            C3057 * C5933 - C3058 * C5930 - C3057 * C5934 + C29548 * C5936) *
               C29557) *
              C29484 * C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C3055 * C98 - C3056 * C93 - C3055 * C99 + C3051 * C108 +
            C3057 * C100 - C3058 * C94 - C3057 * C101 + C29548 * C109) *
               C6578 +
           (C3055 * C1067 - C3056 * C1059 - C3055 * C1068 + C3051 * C1077 +
            C3057 * C1065 - C3058 * C1058 - C3057 * C1066 + C29548 * C1076) *
               C29557) *
              C29484 * C29439 * C29425 * C84 -
          ((C3057 * C1063 - C3058 * C1057 - C3057 * C1064 + C29548 * C1075 +
            C3055 * C1065 - C3056 * C1058 - C3055 * C1066 + C3051 * C1076) *
               C29557 +
           (C3057 * C102 - C3058 * C95 - C3057 * C103 + C29548 * C110 +
            C3055 * C100 - C3056 * C94 - C3055 * C101 + C3051 * C109) *
               C6578) *
              C29484 * C29439 * C29425 * C85 +
          ((C3055 * C102 - C3056 * C95 - C3055 * C103 + C3051 * C110 +
            C3057 * C104 - C3058 * C96 - C3057 * C105 + C29548 * C111) *
               C6578 +
           (C3055 * C1063 - C3056 * C1057 - C3055 * C1064 + C3051 * C1075 +
            C3057 * C2034 - C3058 * C2033 - C3057 * C2035 + C29548 * C2036) *
               C29557) *
              C29484 * C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C3055 * C98 - C3056 * C93 - C3055 * C99 + C3051 * C108 +
            C3057 * C100 - C3058 * C94 - C3057 * C101 + C29548 * C109) *
               C6578 +
           (C7569 + C7570) * C29557) *
              C29484 * C1054 -
          ((C7571 + C7572) * C29557 + (C7570 + C7569) * C6578) * C29484 *
              C1055 +
          ((C7572 + C7571) * C6578 +
           (C3055 * C7538 - C3056 * C7536 - C3055 * C7539 + C3051 * C7542 +
            C3057 * C7540 - C3058 * C7537 - C3057 * C7541 + C29548 * C7543) *
               C29557) *
              C29484 * C1056) *
         C29425 * C29413) /
            (p * q * std::sqrt(p + q));
    d2eexy[12] += (-std::pow(Pi, 2.5) *
                   ((((C29484 * C152 - C151 * C93) * C3055 +
                      (C29484 * C157 - C151 * C99) * C3051 +
                      (C163 - C164) * C3057 + (C165 - C166) * C29548) *
                         C6578 +
                     ((C29484 * C1119 - C151 * C1059) * C3055 +
                      (C29484 * C1125 - C151 * C1068) * C3051 +
                      (C2091 - C2090) * C3057 + (C2093 - C2092) * C29548) *
                         C29557) *
                        C29439 * C612 +
                    (((C151 * C618 - C29484 * C678) * C3055 +
                      (C151 * C627 - C29484 * C684) * C3051 +
                      (C1568 - C1569) * C3057 + (C1570 - C1571) * C29548) *
                         C6578 +
                     ((C151 * C2553 - C29484 * C2615) * C3055 +
                      (C151 * C2557 - C29484 * C2618) * C3051 +
                      (C151 * C2554 - C29484 * C2616) * C3057 +
                      (C151 * C2559 - C29484 * C2619) * C29548) *
                         C29557) *
                        C29439 * C613 +
                    (((C29484 * C681 - C151 * C619) * C3055 +
                      (C29484 * C687 - C151 * C629) * C3051 +
                      (C29484 * C682 - C151 * C620) * C3057 +
                      (C29484 * C688 - C151 * C631) * C29548) *
                         C6578 +
                     ((C29484 * C6017 - C151 * C5929) * C3055 +
                      (C29484 * C6019 - C151 * C5932) * C3051 +
                      (C29484 * C6018 - C151 * C5930) * C3057 +
                      (C29484 * C6020 - C151 * C5934) * C29548) *
                         C29557) *
                        C29439 * C614) *
                   C29413) /
                      (p * q * std::sqrt(p + q)) -
                  (std::pow(Pi, 2.5) *
                   ((((C29484 * C152 - C151 * C93) * C3055 +
                      (C29484 * C157 - C151 * C99) * C3051 +
                      (C163 - C164) * C3057 + (C165 - C166) * C29548) *
                         C6578 +
                     ((C29484 * C1119 - C151 * C1059) * C3055 +
                      (C29484 * C1125 - C151 * C1068) * C3051 +
                      (C2091 - C2090) * C3057 + (C2093 - C2092) * C29548) *
                         C29557) *
                        C29439 * C29425 * C84 +
                    (((C164 - C163) * C3055 + (C166 - C165) * C3051 +
                      (C168 - C167) * C3057 + (C170 - C169) * C29548) *
                         C6578 +
                     ((C2090 - C2091) * C3055 + (C2092 - C2093) * C3051 +
                      (C2094 - C2095) * C3057 + (C2096 - C2097) * C29548) *
                         C29557) *
                        C29439 * C29425 * C85 +
                    ((C175 * C3055 + C176 * C3051 + (C172 - C171) * C3057 +
                      (C174 - C173) * C29548) *
                         C6578 +
                     ((C2095 - C2094) * C3055 + (C2097 - C2096) * C3051 +
                      (C29484 * C2087 - C151 * C2033) * C3057 +
                      (C29484 * C2088 - C151 * C2035) * C29548) *
                         C29557) *
                        C29439 * C29425 * C86)) /
                      (p * q * std::sqrt(p + q)) +
                  (2 * std::pow(Pi, 2.5) *
                   ((((C29484 * C152 - C151 * C93) * C3055 +
                      (C29484 * C157 - C151 * C99) * C3051 +
                      (C163 - C164) * C3057 + (C165 - C166) * C29548) *
                         C6578 +
                     ((C7627 - C7628) * C3055 + (C7629 - C7630) * C3051 +
                      (C2091 - C2090) * C3057 + (C2093 - C2092) * C29548) *
                         C29557) *
                        C1054 +
                    (((C7628 - C7627) * C3055 + (C7630 - C7629) * C3051 +
                      (C2090 - C2091) * C3057 + (C2092 - C2093) * C29548) *
                         C6578 +
                     ((C7631 - C7632) * C3055 + (C7633 - C7634) * C3051 +
                      (C7635 - C7636) * C3057 + (C7637 - C7638) * C29548) *
                         C29557) *
                        C1055 +
                    (((C7632 - C7631) * C3055 + (C7634 - C7633) * C3051 +
                      (C7636 - C7635) * C3057 + (C7638 - C7637) * C29548) *
                         C6578 +
                     ((C29484 * C7622 - C151 * C7536) * C3055 +
                      (C29484 * C7624 - C151 * C7539) * C3051 +
                      (C29484 * C7623 - C151 * C7537) * C3057 +
                      (C29484 * C7625 - C151 * C7541) * C29548) *
                         C29557) *
                        C1056) *
                   C29425 * C29413) /
                      (p * q * std::sqrt(p + q));
    d2eexz[12] +=
        (-std::pow(Pi, 2.5) *
         (((C6578 * C215 - C6680 * C93 + C29557 * C1169 - C6681 * C1059) *
               C3055 +
           (C6578 * C220 - C6680 * C99 + C29557 * C1175 - C6681 * C1068) *
               C3051 +
           (C6683 - C6684 + C6685 - C6686) * C3057 +
           (C6687 - C6688 + C6689 - C6690) * C29548) *
              C29484 * C29439 * C612 +
          ((C6680 * C618 - C6578 * C728 + C6681 * C2553 - C29557 * C2671) *
               C3055 +
           (C6680 * C627 - C6578 * C734 + C6681 * C2557 - C29557 * C2674) *
               C3051 +
           (C6680 * C617 - C6578 * C729 + C6681 * C2554 - C29557 * C2672) *
               C3057 +
           (C6680 * C625 - C6578 * C735 + C6681 * C2559 - C29557 * C2675) *
               C29548) *
              C29484 * C29439 * C613 +
          ((C6578 * C731 - C6680 * C619 + C29557 * C6087 - C6681 * C5929) *
               C3055 +
           (C6578 * C737 - C6680 * C629 + C29557 * C6089 - C6681 * C5932) *
               C3051 +
           (C6578 * C732 - C6680 * C620 + C29557 * C6088 - C6681 * C5930) *
               C3057 +
           (C6578 * C738 - C6680 * C631 + C29557 * C6090 - C6681 * C5934) *
               C29548) *
              C29484 * C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C6578 * C215 - C6680 * C93 + C29557 * C1169 - C6681 * C1059) *
               C3055 +
           (C6578 * C220 - C6680 * C99 + C29557 * C1175 - C6681 * C1068) *
               C3051 +
           (C6683 - C6684 + C6685 - C6686) * C3057 +
           (C6687 - C6688 + C6689 - C6690) * C29548) *
              C29484 * C29439 * C29425 * C84 +
          ((C6684 - C6683 + C6686 - C6685) * C3055 +
           (C6688 - C6687 + C6690 - C6689) * C3051 +
           (C6691 - C6692 + C6693 - C6694) * C3057 +
           (C6695 - C6696 + C6697 - C6698) * C29548) *
              C29484 * C29439 * C29425 * C85 +
          ((C6692 - C6691 + C6694 - C6693) * C3055 +
           (C6696 - C6695 + C6698 - C6697) * C3051 +
           (C6578 * C218 - C6680 * C96 + C29557 * C2147 - C6681 * C2033) *
               C3057 +
           (C6578 * C223 - C6680 * C105 + C29557 * C2148 - C6681 * C2035) *
               C29548) *
              C29484 * C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C6578 * C215 - C6680 * C93 + C29557 * C1169 - C6681 * C1059) *
               C3055 +
           (C6578 * C220 - C6680 * C99 + C29557 * C1175 - C6681 * C1068) *
               C3051 +
           (C6683 - C6684 + C6685 - C6686) * C3057 +
           (C6687 - C6688 + C6689 - C6690) * C29548) *
              C29484 * C1054 +
          ((C6680 * C1059 - C6578 * C1169 + C6681 * C1060 - C29557 * C1172) *
               C3055 +
           (C6680 * C1068 - C6578 * C1175 + C6681 * C1070 - C29557 * C1178) *
               C3051 +
           (C6680 * C1058 - C6578 * C1170 + C6681 * C1061 - C29557 * C1173) *
               C3057 +
           (C6680 * C1066 - C6578 * C1176 + C6681 * C1072 - C29557 * C1179) *
               C29548) *
              C29484 * C1055 +
          ((C6578 * C1172 - C6680 * C1060 + C29557 * C7688 - C6681 * C7536) *
               C3055 +
           (C6578 * C1178 - C6680 * C1070 + C29557 * C7690 - C6681 * C7539) *
               C3051 +
           (C6578 * C1173 - C6680 * C1061 + C29557 * C7689 - C6681 * C7537) *
               C3057 +
           (C6578 * C1179 - C6680 * C1072 + C29557 * C7691 - C6681 * C7541) *
               C29548) *
              C29484 * C1056) *
         C29425 * C29413) /
            (p * q * std::sqrt(p + q));
    d2eeyx[12] +=
        (-std::pow(Pi, 2.5) *
         ((((C3051 * C98 - C3055 * C93 + C29548 * C100 - C3057 * C94) * C151 +
            (C3051 * C282 - C3055 * C277 + C29548 * C283 - C3057 * C278) *
                C29484) *
               C6578 +
           ((C3051 * C1067 - C3055 * C1059 + C29548 * C1065 - C3057 * C1058) *
                C151 +
            (C3051 * C1225 - C3055 * C1219 + C29548 * C1226 - C3057 * C1220) *
                C29484) *
               C29557) *
              C29439 * C612 +
          (((C3781 - C3780 + C3783 - C3782) * C151 +
            (C3785 - C3784 + C3787 - C3786) * C29484) *
               C6578 +
           ((C6166 - C6167 + C6168 - C6169) * C151 +
            (C6170 - C6171 + C6172 - C6173) * C29484) *
               C29557) *
              C29439 * C613 +
          (((C3789 - C3788 + C3791 - C3790) * C151 +
            (C3793 - C3792 + C3795 - C3794) * C29484) *
               C6578 +
           ((C3051 * C5931 - C3055 * C5929 + C29548 * C5933 - C3057 * C5930) *
                C151 +
            (C3051 * C6163 - C3055 * C6161 + C29548 * C6164 - C3057 * C6162) *
                C29484) *
               C29557) *
              C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C3051 * C98 - C3055 * C93 + C29548 * C100 - C3057 * C94) * C151 +
            (C3051 * C282 - C3055 * C277 + C29548 * C283 - C3057 * C278) *
                C29484) *
               C6578 +
           ((C3051 * C1067 - C3055 * C1059 + C29548 * C1065 - C3057 * C1058) *
                C151 +
            (C3051 * C1225 - C3055 * C1219 + C29548 * C1226 - C3057 * C1220) *
                C29484) *
               C29557) *
              C29439 * C29425 * C84 +
          (((C3055 * C94 - C3051 * C100 + C3057 * C95 - C29548 * C102) * C151 +
            (C3055 * C278 - C3051 * C283 + C3057 * C279 - C29548 * C284) *
                C29484) *
               C6578 +
           ((C3055 * C1058 - C3051 * C1065 + C3057 * C1057 - C29548 * C1063) *
                C151 +
            (C3055 * C1220 - C3051 * C1226 + C3057 * C1221 - C29548 * C1227) *
                C29484) *
               C29557) *
              C29439 * C29425 * C85 +
          (((C3051 * C102 - C3055 * C95 + C29548 * C104 - C3057 * C96) * C151 +
            (C3051 * C284 - C3055 * C279 + C29548 * C285 - C3057 * C280) *
                C29484) *
               C6578 +
           ((C3051 * C1063 - C3055 * C1057 + C29548 * C2034 - C3057 * C2033) *
                C151 +
            (C3051 * C1227 - C3055 * C1221 + C29548 * C2208 - C3057 * C2207) *
                C29484) *
               C29557) *
              C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C3051 * C98 - C3055 * C93 + C29548 * C100 - C3057 * C94) * C151 +
            (C3051 * C282 - C3055 * C277 + C29548 * C283 - C3057 * C278) *
                C29484) *
               C6578 +
           ((C7747 - C7748 + C7749 - C7750) * C151 +
            (C7751 - C7752 + C7753 - C7754) * C29484) *
               C29557) *
              C1054 +
          (((C7748 - C7747 + C7750 - C7749) * C151 +
            (C7752 - C7751 + C7754 - C7753) * C29484) *
               C6578 +
           ((C7755 - C7756 + C7757 - C7758) * C151 +
            (C7759 - C7760 + C7761 - C7762) * C29484) *
               C29557) *
              C1055 +
          (((C7756 - C7755 + C7758 - C7757) * C151 +
            (C7760 - C7759 + C7762 - C7761) * C29484) *
               C6578 +
           ((C3051 * C7538 - C3055 * C7536 + C29548 * C7540 - C3057 * C7537) *
                C151 +
            (C3051 * C7744 - C3055 * C7742 + C29548 * C7745 - C3057 * C7743) *
                C29484) *
               C29557) *
              C1056) *
         C29425 * C29413) /
            (p * q * std::sqrt(p + q));
    d2eeyy[12] +=
        (-std::pow(Pi, 2.5) *
         ((((C151 * C152 - C325 * C93 - C151 * C277 + C29484 * C326) * C3051 +
            C350 * C29548) *
               C6578 +
           ((C151 * C1119 - C325 * C1059 - C151 * C1219 + C29484 * C1271) *
                C3051 +
            C2274 * C29548) *
               C29557) *
              C29439 * C612 -
          (((C151 * C2616 - C325 * C2554 - C151 * C2728 + C29484 * C2784) *
                C29548 +
            (C151 * C2615 - C325 * C2553 - C151 * C2727 + C29484 * C2783) *
                C3051) *
               C29557 +
           (C1752 * C29548 +
            (C151 * C678 - C325 * C618 - C151 * C778 + C29484 * C830) * C3051) *
               C6578) *
              C29439 * C613 +
          (((C151 * C681 - C325 * C619 - C151 * C781 + C29484 * C831) * C3051 +
            (C151 * C682 - C325 * C620 - C151 * C782 + C29484 * C832) *
                C29548) *
               C6578 +
           ((C151 * C6017 - C325 * C5929 - C151 * C6161 + C29484 * C6239) *
                C3051 +
            (C151 * C6018 - C325 * C5930 - C151 * C6162 + C29484 * C6240) *
                C29548) *
               C29557) *
              C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C151 * C152 - C325 * C93 - C151 * C277 + C29484 * C326) * C3051 +
            C350 * C29548) *
               C6578 +
           ((C151 * C1119 - C325 * C1059 - C151 * C1219 + C29484 * C1271) *
                C3051 +
            C2274 * C29548) *
               C29557) *
              C29439 * C29425 * C84 -
          ((C2273 * C29548 + C2274 * C3051) * C29557 +
           (C351 * C29548 + C350 * C3051) * C6578) *
              C29439 * C29425 * C85 +
          ((C351 * C3051 + C352 * C29548) * C6578 +
           (C2273 * C3051 +
            (C151 * C2087 - C325 * C2033 - C151 * C2207 + C29484 * C2259) *
                C29548) *
               C29557) *
              C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C151 * C152 - C325 * C93 - C151 * C277 + C29484 * C326) * C3051 +
            C350 * C29548) *
               C6578 +
           (C7837 + C7819) * C29557) *
              C1054 -
          ((C7838 + C7839) * C29557 + (C7819 + C7837) * C6578) * C1055 +
          ((C7839 + C7838) * C6578 +
           ((C151 * C7622 - C325 * C7536 - C151 * C7742 + C29484 * C7812) *
                C3051 +
            (C151 * C7623 - C325 * C7537 - C151 * C7743 + C29484 * C7813) *
                C29548) *
               C29557) *
              C1056) *
         C29425 * C29413) /
            (p * q * std::sqrt(p + q));
    d2eeyz[12] +=
        (-std::pow(Pi, 2.5) *
         ((((C6578 * C215 - C6680 * C93 + C29557 * C1169 - C6681 * C1059) *
                C151 +
            (C6578 * C390 - C6680 * C277 + C29557 * C1313 - C6681 * C1219) *
                C29484) *
               C3051 +
           ((C6683 - C6684 + C6685 - C6686) * C151 +
            (C6849 - C6850 + C6851 - C6852) * C29484) *
               C29548) *
              C29439 * C612 +
          (((C6680 * C618 - C6578 * C728 + C6681 * C2553 - C29557 * C2671) *
                C151 +
            (C6680 * C778 - C6578 * C872 + C6681 * C2727 - C29557 * C2836) *
                C29484) *
               C3051 +
           ((C6680 * C617 - C6578 * C729 + C6681 * C2554 - C29557 * C2672) *
                C151 +
            (C6680 * C779 - C6578 * C873 + C6681 * C2728 - C29557 * C2837) *
                C29484) *
               C29548) *
              C29439 * C613 +
          (((C6578 * C731 - C6680 * C619 + C29557 * C6087 - C6681 * C5929) *
                C151 +
            (C6578 * C875 - C6680 * C781 + C29557 * C6307 - C6681 * C6161) *
                C29484) *
               C3051 +
           ((C6578 * C732 - C6680 * C620 + C29557 * C6088 - C6681 * C5930) *
                C151 +
            (C6578 * C876 - C6680 * C782 + C29557 * C6308 - C6681 * C6162) *
                C29484) *
               C29548) *
              C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C6578 * C215 - C6680 * C93 + C29557 * C1169 - C6681 * C1059) *
                C151 +
            (C6578 * C390 - C6680 * C277 + C29557 * C1313 - C6681 * C1219) *
                C29484) *
               C3051 +
           ((C6683 - C6684 + C6685 - C6686) * C151 +
            (C6849 - C6850 + C6851 - C6852) * C29484) *
               C29548) *
              C29439 * C29425 * C84 +
          (((C6684 - C6683 + C6686 - C6685) * C151 +
            (C6850 - C6849 + C6852 - C6851) * C29484) *
               C3051 +
           ((C6691 - C6692 + C6693 - C6694) * C151 +
            (C6853 - C6854 + C6855 - C6856) * C29484) *
               C29548) *
              C29439 * C29425 * C85 +
          (((C6692 - C6691 + C6694 - C6693) * C151 +
            (C6854 - C6853 + C6856 - C6855) * C29484) *
               C3051 +
           ((C6578 * C218 - C6680 * C96 + C29557 * C2147 - C6681 * C2033) *
                C151 +
            (C6578 * C393 - C6680 * C280 + C29557 * C2324 - C6681 * C2207) *
                C29484) *
               C29548) *
              C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C6578 * C215 - C6680 * C93 + C29557 * C1169 - C6681 * C1059) *
                C151 +
            (C6578 * C390 - C6680 * C277 + C29557 * C1313 - C6681 * C1219) *
                C29484) *
               C3051 +
           ((C6683 - C6684 + C6685 - C6686) * C151 +
            (C6849 - C6850 + C6851 - C6852) * C29484) *
               C29548) *
              C1054 +
          (((C6680 * C1059 - C6578 * C1169 + C6681 * C1060 - C29557 * C1172) *
                C151 +
            (C6680 * C1219 - C6578 * C1313 + C6681 * C1222 - C29557 * C1316) *
                C29484) *
               C3051 +
           ((C6680 * C1058 - C6578 * C1170 + C6681 * C1061 - C29557 * C1173) *
                C151 +
            (C6680 * C1220 - C6578 * C1314 + C6681 * C1223 - C29557 * C1317) *
                C29484) *
               C29548) *
              C1055 +
          (((C6578 * C1172 - C6680 * C1060 + C29557 * C7688 - C6681 * C7536) *
                C151 +
            (C6578 * C1316 - C6680 * C1222 + C29557 * C7889 - C6681 * C7742) *
                C29484) *
               C3051 +
           ((C6578 * C1173 - C6680 * C1061 + C29557 * C7689 - C6681 * C7537) *
                C151 +
            (C6578 * C1317 - C6680 * C1223 + C29557 * C7890 - C6681 * C7743) *
                C29484) *
               C29548) *
              C1056) *
         C29425 * C29413) /
            (p * q * std::sqrt(p + q));
    d2eezx[12] +=
        (-std::pow(Pi, 2.5) *
         (((C3051 * C98 - C3055 * C93 + C29548 * C100 - C3057 * C94) * C6680 +
           (C3051 * C448 - C3055 * C443 + C29548 * C449 - C3057 * C444) *
               C6578 +
           (C3051 * C1067 - C3055 * C1059 + C29548 * C1065 - C3057 * C1058) *
               C6681 +
           (C3051 * C1363 - C3055 * C1357 + C29548 * C1364 - C3057 * C1358) *
               C29557) *
              C29484 * C29439 * C612 +
          ((C3781 - C3780 + C3783 - C3782) * C6680 +
           (C3961 - C3960 + C3963 - C3962) * C6578 +
           (C6166 - C6167 + C6168 - C6169) * C6681 +
           (C6382 - C6383 + C6384 - C6385) * C29557) *
              C29484 * C29439 * C613 +
          ((C3789 - C3788 + C3791 - C3790) * C6680 +
           (C3965 - C3964 + C3967 - C3966) * C6578 +
           (C3051 * C5931 - C3055 * C5929 + C29548 * C5933 - C3057 * C5930) *
               C6681 +
           (C3051 * C6379 - C3055 * C6377 + C29548 * C6380 - C3057 * C6378) *
               C29557) *
              C29484 * C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C3051 * C98 - C3055 * C93 + C29548 * C100 - C3057 * C94) * C6680 +
           (C3051 * C448 - C3055 * C443 + C29548 * C449 - C3057 * C444) *
               C6578 +
           (C3051 * C1067 - C3055 * C1059 + C29548 * C1065 - C3057 * C1058) *
               C6681 +
           (C3051 * C1363 - C3055 * C1357 + C29548 * C1364 - C3057 * C1358) *
               C29557) *
              C29484 * C29439 * C29425 * C84 +
          ((C3055 * C94 - C3051 * C100 + C3057 * C95 - C29548 * C102) * C6680 +
           (C3055 * C444 - C3051 * C449 + C3057 * C445 - C29548 * C450) *
               C6578 +
           (C3055 * C1058 - C3051 * C1065 + C3057 * C1057 - C29548 * C1063) *
               C6681 +
           (C3055 * C1358 - C3051 * C1364 + C3057 * C1359 - C29548 * C1365) *
               C29557) *
              C29484 * C29439 * C29425 * C85 +
          ((C3051 * C102 - C3055 * C95 + C29548 * C104 - C3057 * C96) * C6680 +
           (C3051 * C450 - C3055 * C445 + C29548 * C451 - C3057 * C446) *
               C6578 +
           (C3051 * C1063 - C3055 * C1057 + C29548 * C2034 - C3057 * C2033) *
               C6681 +
           (C3051 * C1365 - C3055 * C1359 + C29548 * C2380 - C3057 * C2379) *
               C29557) *
              C29484 * C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C3051 * C98 - C3055 * C93 + C29548 * C100 - C3057 * C94) * C6680 +
           (C3051 * C448 - C3055 * C443 + C29548 * C449 - C3057 * C444) *
               C6578 +
           (C7747 - C7748 + C7749 - C7750) * C6681 +
           (C7946 - C7947 + C7948 - C7949) * C29557) *
              C29484 * C1054 +
          ((C7748 - C7747 + C7750 - C7749) * C6680 +
           (C7947 - C7946 + C7949 - C7948) * C6578 +
           (C7755 - C7756 + C7757 - C7758) * C6681 +
           (C7950 - C7951 + C7952 - C7953) * C29557) *
              C29484 * C1055 +
          ((C7756 - C7755 + C7758 - C7757) * C6680 +
           (C7951 - C7950 + C7953 - C7952) * C6578 +
           (C3051 * C7538 - C3055 * C7536 + C29548 * C7540 - C3057 * C7537) *
               C6681 +
           (C3051 * C7943 - C3055 * C7941 + C29548 * C7944 - C3057 * C7942) *
               C29557) *
              C29484 * C1056) *
         C29425 * C29413) /
            (p * q * std::sqrt(p + q));
    d2eezy[12] += (-std::pow(Pi, 2.5) *
                   ((((C29484 * C152 - C151 * C93) * C6680 +
                      (C29484 * C491 - C151 * C443) * C6578 +
                      (C29484 * C1119 - C151 * C1059) * C6681 +
                      (C29484 * C1407 - C151 * C1357) * C29557) *
                         C3051 +
                     ((C163 - C164) * C6680 + (C497 - C498) * C6578 +
                      (C2091 - C2090) * C6681 + (C2434 - C2433) * C29557) *
                         C29548) *
                        C29439 * C612 +
                    (((C151 * C618 - C29484 * C678) * C6680 +
                      (C151 * C916 - C29484 * C966) * C6578 +
                      (C151 * C2553 - C29484 * C2615) * C6681 +
                      (C151 * C2889 - C29484 * C2945) * C29557) *
                         C3051 +
                     ((C1568 - C1569) * C6680 + (C1911 - C1912) * C6578 +
                      (C151 * C2554 - C29484 * C2616) * C6681 +
                      (C151 * C2890 - C29484 * C2946) * C29557) *
                         C29548) *
                        C29439 * C613 +
                    (((C29484 * C681 - C151 * C619) * C6680 +
                      (C29484 * C969 - C151 * C919) * C6578 +
                      (C29484 * C6017 - C151 * C5929) * C6681 +
                      (C29484 * C6451 - C151 * C6377) * C29557) *
                         C3051 +
                     ((C29484 * C682 - C151 * C620) * C6680 +
                      (C29484 * C970 - C151 * C920) * C6578 +
                      (C29484 * C6018 - C151 * C5930) * C6681 +
                      (C29484 * C6452 - C151 * C6378) * C29557) *
                         C29548) *
                        C29439 * C614) *
                   C29413) /
                      (p * q * std::sqrt(p + q)) -
                  (std::pow(Pi, 2.5) *
                   ((((C29484 * C152 - C151 * C93) * C6680 +
                      (C29484 * C491 - C151 * C443) * C6578 +
                      (C29484 * C1119 - C151 * C1059) * C6681 +
                      (C29484 * C1407 - C151 * C1357) * C29557) *
                         C3051 +
                     ((C163 - C164) * C6680 + (C497 - C498) * C6578 +
                      (C2091 - C2090) * C6681 + (C2434 - C2433) * C29557) *
                         C29548) *
                        C29439 * C29425 * C84 +
                    (((C164 - C163) * C6680 + (C498 - C497) * C6578 +
                      (C2090 - C2091) * C6681 + (C2433 - C2434) * C29557) *
                         C3051 +
                     ((C168 - C167) * C6680 + (C501 - C500) * C6578 +
                      (C2094 - C2095) * C6681 + (C2435 - C2436) * C29557) *
                         C29548) *
                        C29439 * C29425 * C85 +
                    ((C175 * C6680 + C504 * C6578 + (C2095 - C2094) * C6681 +
                      (C2436 - C2435) * C29557) *
                         C3051 +
                     ((C172 - C171) * C6680 + (C503 - C502) * C6578 +
                      (C29484 * C2087 - C151 * C2033) * C6681 +
                      (C29484 * C2431 - C151 * C2379) * C29557) *
                         C29548) *
                        C29439 * C29425 * C86)) /
                      (p * q * std::sqrt(p + q)) +
                  (2 * std::pow(Pi, 2.5) *
                   ((((C29484 * C152 - C151 * C93) * C6680 +
                      (C29484 * C491 - C151 * C443) * C6578 +
                      (C7627 - C7628) * C6681 + (C8006 - C8007) * C29557) *
                         C3051 +
                     ((C163 - C164) * C6680 + (C497 - C498) * C6578 +
                      (C2091 - C2090) * C6681 + (C2434 - C2433) * C29557) *
                         C29548) *
                        C1054 +
                    (((C7628 - C7627) * C6680 + (C8007 - C8006) * C6578 +
                      (C7631 - C7632) * C6681 + (C8008 - C8009) * C29557) *
                         C3051 +
                     ((C2090 - C2091) * C6680 + (C2433 - C2434) * C6578 +
                      (C7635 - C7636) * C6681 + (C8010 - C8011) * C29557) *
                         C29548) *
                        C1055 +
                    (((C7632 - C7631) * C6680 + (C8009 - C8008) * C6578 +
                      (C29484 * C7622 - C151 * C7536) * C6681 +
                      (C29484 * C8003 - C151 * C7941) * C29557) *
                         C3051 +
                     ((C7636 - C7635) * C6680 + (C8011 - C8010) * C6578 +
                      (C29484 * C7623 - C151 * C7537) * C6681 +
                      (C29484 * C8004 - C151 * C7942) * C29557) *
                         C29548) *
                        C1056) *
                   C29425 * C29413) /
                      (p * q * std::sqrt(p + q));
    d2eezz[12] +=
        (-std::pow(Pi, 2.5) *
         (((C6680 * C215 - C7006 * C93 - C6680 * C443 + C6578 * C545 +
            C6681 * C1169 - C7007 * C1059 - C6681 * C1357 + C29557 * C1453) *
               C29484 * C3051 +
           (C7033 + C7034) * C29484 * C29548) *
              C29439 * C612 -
          ((C6681 * C2672 - C7007 * C2554 - C6681 * C2890 + C29557 * C2999 +
            C6680 * C729 - C7006 * C617 - C6680 * C917 + C6578 * C1011) *
               C29484 * C29548 +
           (C6681 * C2671 - C7007 * C2553 - C6681 * C2889 + C29557 * C2998 +
            C6680 * C728 - C7006 * C618 - C6680 * C916 + C6578 * C1012) *
               C29484 * C3051) *
              C29439 * C613 +
          ((C6680 * C731 - C7006 * C619 - C6680 * C919 + C6578 * C1013 +
            C6681 * C6087 - C7007 * C5929 - C6681 * C6377 + C29557 * C6519) *
               C29484 * C3051 +
           (C6680 * C732 - C7006 * C620 - C6680 * C920 + C6578 * C1014 +
            C6681 * C6088 - C7007 * C5930 - C6681 * C6378 + C29557 * C6520) *
               C29484 * C29548) *
              C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C6680 * C215 - C7006 * C93 - C6680 * C443 + C6578 * C545 +
            C6681 * C1169 - C7007 * C1059 - C6681 * C1357 + C29557 * C1453) *
               C29484 * C3051 +
           (C7033 + C7034) * C29484 * C29548) *
              C29439 * C29425 * C84 -
          ((C7035 + C7036) * C29484 * C29548 +
           (C7034 + C7033) * C29484 * C3051) *
              C29439 * C29425 * C85 +
          ((C7036 + C7035) * C29484 * C3051 +
           (C6680 * C218 - C7006 * C96 - C6680 * C446 + C6578 * C548 +
            C6681 * C2147 - C7007 * C2033 - C6681 * C2379 + C29557 * C2486) *
               C29484 * C29548) *
              C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C6680 * C215 - C7006 * C93 - C6680 * C443 + C6578 * C545 +
            C6681 * C1169 - C7007 * C1059 - C6681 * C1357 + C29557 * C1453) *
               C29484 * C3051 +
           (C7033 + C7034) * C29484 * C29548) *
              C1054 -
          ((C6681 * C1173 - C7007 * C1061 - C6681 * C1361 + C29557 * C1455 +
            C6680 * C1170 - C7006 * C1058 - C6680 * C1358 + C6578 * C1452) *
               C29484 * C29548 +
           (C6681 * C1172 - C7007 * C1060 - C6681 * C1360 + C29557 * C1454 +
            C6680 * C1169 - C7006 * C1059 - C6680 * C1357 + C6578 * C1453) *
               C29484 * C3051) *
              C1055 +
          ((C6680 * C1172 - C7006 * C1060 - C6680 * C1360 + C6578 * C1454 +
            C6681 * C7688 - C7007 * C7536 - C6681 * C7941 + C29557 * C8061) *
               C29484 * C3051 +
           (C6680 * C1173 - C7006 * C1061 - C6680 * C1361 + C6578 * C1455 +
            C6681 * C7689 - C7007 * C7537 - C6681 * C7942 + C29557 * C8062) *
               C29484 * C29548) *
              C1056) *
         C29425 * C29413) /
            (p * q * std::sqrt(p + q));
    d2eexx[13] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C3055 * C98 - C3056 * C93 - C3055 * C99 + C3051 * C108 +
             C3057 * C100 - C3058 * C94 - C3057 * C101 + C29548 * C109) *
                C6578 +
            (C7569 + C7570) * C29557) *
               C29484 * C2031 -
           ((C7571 + C7572) * C29557 + (C7570 + C7569) * C6578) * C29484 *
               C2032) *
              C29425 * C1509 +
          (((C8775 + C8776) * C6578 +
            (C3055 * C1071 - C3056 * C1061 - C3055 * C1072 + C3051 * C1079 +
             C3057 * C1073 - C3058 * C1062 - C3057 * C1074 + C29548 * C1080) *
                C29557) *
               C29484 * C2032 -
           ((C8776 + C8775) * C29557 +
            (C3057 * C102 - C3058 * C95 - C3057 * C103 + C29548 * C110 +
             C3055 * C100 - C3056 * C94 - C3055 * C101 + C3051 * C109) *
                C6578) *
               C29484 * C2031) *
              C29425 * C1510)) /
        (p * q * std::sqrt(p + q));
    d2eexy[13] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C29484 * C152 - C151 * C93) * C3055 +
                       (C29484 * C157 - C151 * C99) * C3051 +
                       (C163 - C164) * C3057 + (C165 - C166) * C29548) *
                          C6578 +
                      ((C7627 - C7628) * C3055 + (C7629 - C7630) * C3051 +
                       C8843 * C3057 + C8844 * C29548) *
                          C29557) *
                         C2031 +
                     (((C7628 - C7627) * C3055 + (C7630 - C7629) * C3051 +
                       C8845 * C3057 + C8846 * C29548) *
                          C6578 +
                      ((C7631 - C7632) * C3055 + (C7633 - C7634) * C3051 +
                       (C7635 - C7636) * C3057 + (C7637 - C7638) * C29548) *
                          C29557) *
                         C2032) *
                        C29425 * C1509 +
                    ((((C164 - C163) * C3055 + (C166 - C165) * C3051 +
                       (C168 - C167) * C3057 + (C170 - C169) * C29548) *
                          C6578 +
                      (C8845 * C3055 + C8846 * C3051 + (C2094 - C2095) * C3057 +
                       (C2096 - C2097) * C29548) *
                          C29557) *
                         C2031 +
                     ((C8843 * C3055 + C8844 * C3051 + (C2095 - C2094) * C3057 +
                       (C2097 - C2096) * C29548) *
                          C6578 +
                      ((C7636 - C7635) * C3055 + (C7638 - C7637) * C3051 +
                       (C29484 * C1124 - C151 * C1062) * C3057 +
                       (C29484 * C1130 - C151 * C1074) * C29548) *
                          C29557) *
                         C2032) *
                        C29425 * C1510)) /
                  (p * q * std::sqrt(p + q));
    d2eexz[13] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C6578 * C215 - C6680 * C93 + C29557 * C1169 - C6681 * C1059) *
                C3055 +
            (C6578 * C220 - C6680 * C99 + C29557 * C1175 - C6681 * C1068) *
                C3051 +
            (C6683 - C6684 + C6685 - C6686) * C3057 +
            (C6687 - C6688 + C6689 - C6690) * C29548) *
               C29484 * C2031 +
           ((C6680 * C1059 - C6578 * C1169 + C6681 * C1060 - C29557 * C1172) *
                C3055 +
            (C6680 * C1068 - C6578 * C1175 + C6681 * C1070 - C29557 * C1178) *
                C3051 +
            (C8913 - C8914 + C8915 - C8916) * C3057 +
            (C8917 - C8918 + C8919 - C8920) * C29548) *
               C29484 * C2032) *
              C29425 * C1509 +
          (((C6684 - C6683 + C6686 - C6685) * C3055 +
            (C6688 - C6687 + C6690 - C6689) * C3051 +
            (C6691 - C6692 + C6693 - C6694) * C3057 +
            (C6695 - C6696 + C6697 - C6698) * C29548) *
               C29484 * C2031 +
           ((C8914 - C8913 + C8916 - C8915) * C3055 +
            (C8918 - C8917 + C8920 - C8919) * C3051 +
            (C6578 * C1171 - C6680 * C1057 + C29557 * C1174 - C6681 * C1062) *
                C3057 +
            (C6578 * C1177 - C6680 * C1064 + C29557 * C1180 - C6681 * C1074) *
                C29548) *
               C29484 * C2032) *
              C29425 * C1510)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[13] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C3051 * C98 - C3055 * C93 + C29548 * C100 - C3057 * C94) * C151 +
             (C3051 * C282 - C3055 * C277 + C29548 * C283 - C3057 * C278) *
                 C29484) *
                C6578 +
            ((C7747 - C7748 + C7749 - C7750) * C151 +
             (C7751 - C7752 + C7753 - C7754) * C29484) *
                C29557) *
               C2031 +
           (((C7748 - C7747 + C7750 - C7749) * C151 +
             (C7752 - C7751 + C7754 - C7753) * C29484) *
                C6578 +
            ((C7755 - C7756 + C7757 - C7758) * C151 +
             (C7759 - C7760 + C7761 - C7762) * C29484) *
                C29557) *
               C2032) *
              C29425 * C1509 +
          ((((C3055 * C94 - C3051 * C100 + C3057 * C95 - C29548 * C102) * C151 +
             (C3055 * C278 - C3051 * C283 + C3057 * C279 - C29548 * C284) *
                 C29484) *
                C6578 +
            ((C8987 - C8988 + C8989 - C8990) * C151 +
             (C8991 - C8992 + C8993 - C8994) * C29484) *
                C29557) *
               C2031 +
           (((C8988 - C8987 + C8990 - C8989) * C151 +
             (C8992 - C8991 + C8994 - C8993) * C29484) *
                C6578 +
            ((C3051 * C1071 - C3055 * C1061 + C29548 * C1073 - C3057 * C1062) *
                 C151 +
             (C3051 * C1229 - C3055 * C1223 + C29548 * C1230 - C3057 * C1224) *
                 C29484) *
                C29557) *
               C2032) *
              C29425 * C1510)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[13] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C151 * C152 - C325 * C93 - C151 * C277 + C29484 * C326) * C3051 +
             C350 * C29548) *
                C6578 +
            (C7837 + C7819) * C29557) *
               C2031 -
           ((C7838 + C7839) * C29557 + (C7819 + C7837) * C6578) * C2032) *
              C29425 * C1509 +
          (((C9061 + C9062) * C6578 +
            (C7835 * C3051 +
             (C151 * C1124 - C325 * C1062 - C151 * C1224 + C29484 * C1274) *
                 C29548) *
                C29557) *
               C2032 -
           ((C9062 + C9061) * C29557 + (C351 * C29548 + C350 * C3051) * C6578) *
               C2031) *
              C29425 * C1510)) /
        (p * q * std::sqrt(p + q));
    d2eeyz[13] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C6578 * C215 - C6680 * C93 + C29557 * C1169 - C6681 * C1059) *
                 C151 +
             (C6578 * C390 - C6680 * C277 + C29557 * C1313 - C6681 * C1219) *
                 C29484) *
                C3051 +
            ((C6683 - C6684 + C6685 - C6686) * C151 +
             (C6849 - C6850 + C6851 - C6852) * C29484) *
                C29548) *
               C2031 +
           (((C6680 * C1059 - C6578 * C1169 + C6681 * C1060 - C29557 * C1172) *
                 C151 +
             (C6680 * C1219 - C6578 * C1313 + C6681 * C1222 - C29557 * C1316) *
                 C29484) *
                C3051 +
            ((C8913 - C8914 + C8915 - C8916) * C151 +
             (C9129 - C9130 + C9131 - C9132) * C29484) *
                C29548) *
               C2032) *
              C29425 * C1509 +
          ((((C6684 - C6683 + C6686 - C6685) * C151 +
             (C6850 - C6849 + C6852 - C6851) * C29484) *
                C3051 +
            ((C6691 - C6692 + C6693 - C6694) * C151 +
             (C6853 - C6854 + C6855 - C6856) * C29484) *
                C29548) *
               C2031 +
           (((C8914 - C8913 + C8916 - C8915) * C151 +
             (C9130 - C9129 + C9132 - C9131) * C29484) *
                C3051 +
            ((C6578 * C1171 - C6680 * C1057 + C29557 * C1174 - C6681 * C1062) *
                 C151 +
             (C6578 * C1315 - C6680 * C1221 + C29557 * C1318 - C6681 * C1224) *
                 C29484) *
                C29548) *
               C2032) *
              C29425 * C1510)) /
        (p * q * std::sqrt(p + q));
    d2eezx[13] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C3051 * C98 - C3055 * C93 + C29548 * C100 - C3057 * C94) * C6680 +
            (C3051 * C448 - C3055 * C443 + C29548 * C449 - C3057 * C444) *
                C6578 +
            (C7747 - C7748 + C7749 - C7750) * C6681 +
            (C7946 - C7947 + C7948 - C7949) * C29557) *
               C29484 * C2031 +
           ((C7748 - C7747 + C7750 - C7749) * C6680 +
            (C7947 - C7946 + C7949 - C7948) * C6578 +
            (C7755 - C7756 + C7757 - C7758) * C6681 +
            (C7950 - C7951 + C7952 - C7953) * C29557) *
               C29484 * C2032) *
              C29425 * C1509 +
          (((C3055 * C94 - C3051 * C100 + C3057 * C95 - C29548 * C102) * C6680 +
            (C3055 * C444 - C3051 * C449 + C3057 * C445 - C29548 * C450) *
                C6578 +
            (C8987 - C8988 + C8989 - C8990) * C6681 +
            (C9199 - C9200 + C9201 - C9202) * C29557) *
               C29484 * C2031 +
           ((C8988 - C8987 + C8990 - C8989) * C6680 +
            (C9200 - C9199 + C9202 - C9201) * C6578 +
            (C3051 * C1071 - C3055 * C1061 + C29548 * C1073 - C3057 * C1062) *
                C6681 +
            (C3051 * C1367 - C3055 * C1361 + C29548 * C1368 - C3057 * C1362) *
                C29557) *
               C29484 * C2032) *
              C29425 * C1510)) /
        (p * q * std::sqrt(p + q));
    d2eezy[13] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C29484 * C152 - C151 * C93) * C6680 +
                       (C29484 * C491 - C151 * C443) * C6578 +
                       (C7627 - C7628) * C6681 + (C8006 - C8007) * C29557) *
                          C3051 +
                      ((C163 - C164) * C6680 + (C497 - C498) * C6578 +
                       C8843 * C6681 + C9269 * C29557) *
                          C29548) *
                         C2031 +
                     (((C7628 - C7627) * C6680 + (C8007 - C8006) * C6578 +
                       (C7631 - C7632) * C6681 + (C8008 - C8009) * C29557) *
                          C3051 +
                      (C8845 * C6680 + C9270 * C6578 + (C7635 - C7636) * C6681 +
                       (C8010 - C8011) * C29557) *
                          C29548) *
                         C2032) *
                        C29425 * C1509 +
                    ((((C164 - C163) * C6680 + (C498 - C497) * C6578 +
                       C8845 * C6681 + C9270 * C29557) *
                          C3051 +
                      ((C168 - C167) * C6680 + (C501 - C500) * C6578 +
                       (C2094 - C2095) * C6681 + (C2435 - C2436) * C29557) *
                          C29548) *
                         C2031 +
                     ((C8843 * C6680 + C9269 * C6578 + (C7636 - C7635) * C6681 +
                       (C8011 - C8010) * C29557) *
                          C3051 +
                      ((C2095 - C2094) * C6680 + (C2436 - C2435) * C6578 +
                       (C29484 * C1124 - C151 * C1062) * C6681 +
                       (C29484 * C1412 - C151 * C1362) * C29557) *
                          C29548) *
                         C2032) *
                        C29425 * C1510)) /
                  (p * q * std::sqrt(p + q));
    d2eezz[13] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C6680 * C215 - C7006 * C93 - C6680 * C443 + C6578 * C545 +
             C6681 * C1169 - C7007 * C1059 - C6681 * C1357 + C29557 * C1453) *
                C29484 * C3051 +
            (C7033 + C7034) * C29484 * C29548) *
               C2031 -
           ((C9349 + C9350) * C29484 * C29548 +
            (C6681 * C1172 - C7007 * C1060 - C6681 * C1360 + C29557 * C1454 +
             C6680 * C1169 - C7006 * C1059 - C6680 * C1357 + C6578 * C1453) *
                C29484 * C3051) *
               C2032) *
              C29425 * C1509 +
          (((C9350 + C9349) * C29484 * C3051 +
            (C6680 * C1171 - C7006 * C1057 - C6680 * C1359 + C6578 * C1451 +
             C6681 * C1174 - C7007 * C1062 - C6681 * C1362 + C29557 * C1456) *
                C29484 * C29548) *
               C2032 -
           ((C7035 + C7036) * C29484 * C29548 +
            (C7034 + C7033) * C29484 * C3051) *
               C2031) *
              C29425 * C1510)) /
        (p * q * std::sqrt(p + q));
    d2eexx[14] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C3055 * C98 - C3056 * C93 - C3055 * C99 + C3051 * C108 +
            C3057 * C100 - C3058 * C94 - C3057 * C101 + C29548 * C109) *
               C6578 +
           (C3055 * C1067 - C3056 * C1059 - C3055 * C1068 + C3051 * C1077 +
            C3057 * C1065 - C3058 * C1058 - C3057 * C1066 + C29548 * C1076) *
               C29557) *
              C29484 * C29439 * C29425 * C84 -
          ((C3057 * C1063 - C3058 * C1057 - C3057 * C1064 + C29548 * C1075 +
            C3055 * C1065 - C3056 * C1058 - C3055 * C1066 + C3051 * C1076) *
               C29557 +
           (C3057 * C102 - C3058 * C95 - C3057 * C103 + C29548 * C110 +
            C3055 * C100 - C3056 * C94 - C3055 * C101 + C3051 * C109) *
               C6578) *
              C29484 * C29439 * C29425 * C85 +
          ((C3055 * C102 - C3056 * C95 - C3055 * C103 + C3051 * C110 +
            C3057 * C104 - C3058 * C96 - C3057 * C105 + C29548 * C111) *
               C6578 +
           (C3055 * C1063 - C3056 * C1057 - C3055 * C1064 + C3051 * C1075 +
            C3057 * C2034 - C3058 * C2033 - C3057 * C2035 + C29548 * C2036) *
               C29557) *
              C29484 * C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C3055 * C98 - C3056 * C93 - C3055 * C99 + C3051 * C108 +
            C3057 * C100 - C3058 * C94 - C3057 * C101 + C29548 * C109) *
               C6578 +
           (C3055 * C1067 - C3056 * C1059 - C3055 * C1068 + C3051 * C1077 +
            C3057 * C1065 - C3058 * C1058 - C3057 * C1066 + C29548 * C1076) *
               C29557) *
              C29484 * C29439 * C612 -
          ((C5950 + C5951) * C29557 + (C3603 + C3602) * C6578) * C29484 *
              C29439 * C613 +
          ((C3605 + C3604) * C6578 +
           (C3055 * C5931 - C3056 * C5929 - C3055 * C5932 + C3051 * C5935 +
            C3057 * C5933 - C3058 * C5930 - C3057 * C5934 + C29548 * C5936) *
               C29557) *
              C29484 * C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q));
    d2eexy[14] += (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C29484 * C152 - C151 * C93) * C3055 +
                      (C29484 * C157 - C151 * C99) * C3051 +
                      (C163 - C164) * C3057 + (C165 - C166) * C29548) *
                         C6578 +
                     ((C29484 * C1119 - C151 * C1059) * C3055 +
                      (C29484 * C1125 - C151 * C1068) * C3051 +
                      (C2091 - C2090) * C3057 + (C2093 - C2092) * C29548) *
                         C29557) *
                        C29439 * C29425 * C84 +
                    (((C164 - C163) * C3055 + (C166 - C165) * C3051 +
                      (C168 - C167) * C3057 + (C170 - C169) * C29548) *
                         C6578 +
                     ((C2090 - C2091) * C3055 + (C2092 - C2093) * C3051 +
                      (C2094 - C2095) * C3057 + (C2096 - C2097) * C29548) *
                         C29557) *
                        C29439 * C29425 * C85 +
                    ((C175 * C3055 + C176 * C3051 + (C172 - C171) * C3057 +
                      (C174 - C173) * C29548) *
                         C6578 +
                     ((C2095 - C2094) * C3055 + (C2097 - C2096) * C3051 +
                      (C29484 * C2087 - C151 * C2033) * C3057 +
                      (C29484 * C2088 - C151 * C2035) * C29548) *
                         C29557) *
                        C29439 * C29425 * C86)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C29484 * C152 - C151 * C93) * C3055 +
                      (C29484 * C157 - C151 * C99) * C3051 +
                      (C163 - C164) * C3057 + (C165 - C166) * C29548) *
                         C6578 +
                     ((C29484 * C1119 - C151 * C1059) * C3055 +
                      (C29484 * C1125 - C151 * C1068) * C3051 +
                      (C2091 - C2090) * C3057 + (C2093 - C2092) * C29548) *
                         C29557) *
                        C29439 * C612 +
                    (((C151 * C618 - C29484 * C678) * C3055 +
                      (C151 * C627 - C29484 * C684) * C3051 +
                      (C1568 - C1569) * C3057 + (C1570 - C1571) * C29548) *
                         C6578 +
                     ((C151 * C2553 - C29484 * C2615) * C3055 +
                      (C151 * C2557 - C29484 * C2618) * C3051 +
                      (C151 * C2554 - C29484 * C2616) * C3057 +
                      (C151 * C2559 - C29484 * C2619) * C29548) *
                         C29557) *
                        C29439 * C613 +
                    (((C29484 * C681 - C151 * C619) * C3055 +
                      (C29484 * C687 - C151 * C629) * C3051 +
                      (C29484 * C682 - C151 * C620) * C3057 +
                      (C29484 * C688 - C151 * C631) * C29548) *
                         C6578 +
                     ((C29484 * C6017 - C151 * C5929) * C3055 +
                      (C29484 * C6019 - C151 * C5932) * C3051 +
                      (C29484 * C6018 - C151 * C5930) * C3057 +
                      (C29484 * C6020 - C151 * C5934) * C29548) *
                         C29557) *
                        C29439 * C614) *
                   C29413) /
                      (p * q * std::sqrt(p + q));
    d2eexz[14] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C6578 * C215 - C6680 * C93 + C29557 * C1169 - C6681 * C1059) *
               C3055 +
           (C6578 * C220 - C6680 * C99 + C29557 * C1175 - C6681 * C1068) *
               C3051 +
           (C6683 - C6684 + C6685 - C6686) * C3057 +
           (C6687 - C6688 + C6689 - C6690) * C29548) *
              C29484 * C29439 * C29425 * C84 +
          ((C6684 - C6683 + C6686 - C6685) * C3055 +
           (C6688 - C6687 + C6690 - C6689) * C3051 +
           (C6691 - C6692 + C6693 - C6694) * C3057 +
           (C6695 - C6696 + C6697 - C6698) * C29548) *
              C29484 * C29439 * C29425 * C85 +
          ((C6692 - C6691 + C6694 - C6693) * C3055 +
           (C6696 - C6695 + C6698 - C6697) * C3051 +
           (C6578 * C218 - C6680 * C96 + C29557 * C2147 - C6681 * C2033) *
               C3057 +
           (C6578 * C223 - C6680 * C105 + C29557 * C2148 - C6681 * C2035) *
               C29548) *
              C29484 * C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C6578 * C215 - C6680 * C93 + C29557 * C1169 - C6681 * C1059) *
               C3055 +
           (C6578 * C220 - C6680 * C99 + C29557 * C1175 - C6681 * C1068) *
               C3051 +
           (C6683 - C6684 + C6685 - C6686) * C3057 +
           (C6687 - C6688 + C6689 - C6690) * C29548) *
              C29484 * C29439 * C612 +
          ((C6680 * C618 - C6578 * C728 + C6681 * C2553 - C29557 * C2671) *
               C3055 +
           (C6680 * C627 - C6578 * C734 + C6681 * C2557 - C29557 * C2674) *
               C3051 +
           (C6680 * C617 - C6578 * C729 + C6681 * C2554 - C29557 * C2672) *
               C3057 +
           (C6680 * C625 - C6578 * C735 + C6681 * C2559 - C29557 * C2675) *
               C29548) *
              C29484 * C29439 * C613 +
          ((C6578 * C731 - C6680 * C619 + C29557 * C6087 - C6681 * C5929) *
               C3055 +
           (C6578 * C737 - C6680 * C629 + C29557 * C6089 - C6681 * C5932) *
               C3051 +
           (C6578 * C732 - C6680 * C620 + C29557 * C6088 - C6681 * C5930) *
               C3057 +
           (C6578 * C738 - C6680 * C631 + C29557 * C6090 - C6681 * C5934) *
               C29548) *
              C29484 * C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q));
    d2eeyx[14] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C3051 * C98 - C3055 * C93 + C29548 * C100 - C3057 * C94) * C151 +
            (C3051 * C282 - C3055 * C277 + C29548 * C283 - C3057 * C278) *
                C29484) *
               C6578 +
           ((C3051 * C1067 - C3055 * C1059 + C29548 * C1065 - C3057 * C1058) *
                C151 +
            (C3051 * C1225 - C3055 * C1219 + C29548 * C1226 - C3057 * C1220) *
                C29484) *
               C29557) *
              C29439 * C29425 * C84 +
          (((C3055 * C94 - C3051 * C100 + C3057 * C95 - C29548 * C102) * C151 +
            (C3055 * C278 - C3051 * C283 + C3057 * C279 - C29548 * C284) *
                C29484) *
               C6578 +
           ((C3055 * C1058 - C3051 * C1065 + C3057 * C1057 - C29548 * C1063) *
                C151 +
            (C3055 * C1220 - C3051 * C1226 + C3057 * C1221 - C29548 * C1227) *
                C29484) *
               C29557) *
              C29439 * C29425 * C85 +
          (((C3051 * C102 - C3055 * C95 + C29548 * C104 - C3057 * C96) * C151 +
            (C3051 * C284 - C3055 * C279 + C29548 * C285 - C3057 * C280) *
                C29484) *
               C6578 +
           ((C3051 * C1063 - C3055 * C1057 + C29548 * C2034 - C3057 * C2033) *
                C151 +
            (C3051 * C1227 - C3055 * C1221 + C29548 * C2208 - C3057 * C2207) *
                C29484) *
               C29557) *
              C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C3051 * C98 - C3055 * C93 + C29548 * C100 - C3057 * C94) * C151 +
            (C3051 * C282 - C3055 * C277 + C29548 * C283 - C3057 * C278) *
                C29484) *
               C6578 +
           ((C3051 * C1067 - C3055 * C1059 + C29548 * C1065 - C3057 * C1058) *
                C151 +
            (C3051 * C1225 - C3055 * C1219 + C29548 * C1226 - C3057 * C1220) *
                C29484) *
               C29557) *
              C29439 * C612 +
          (((C3781 - C3780 + C3783 - C3782) * C151 +
            (C3785 - C3784 + C3787 - C3786) * C29484) *
               C6578 +
           ((C6166 - C6167 + C6168 - C6169) * C151 +
            (C6170 - C6171 + C6172 - C6173) * C29484) *
               C29557) *
              C29439 * C613 +
          (((C3789 - C3788 + C3791 - C3790) * C151 +
            (C3793 - C3792 + C3795 - C3794) * C29484) *
               C6578 +
           ((C3051 * C5931 - C3055 * C5929 + C29548 * C5933 - C3057 * C5930) *
                C151 +
            (C3051 * C6163 - C3055 * C6161 + C29548 * C6164 - C3057 * C6162) *
                C29484) *
               C29557) *
              C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q));
    d2eeyy[14] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C151 * C152 - C325 * C93 - C151 * C277 + C29484 * C326) * C3051 +
            C350 * C29548) *
               C6578 +
           ((C151 * C1119 - C325 * C1059 - C151 * C1219 + C29484 * C1271) *
                C3051 +
            C2274 * C29548) *
               C29557) *
              C29439 * C29425 * C84 -
          ((C2273 * C29548 + C2274 * C3051) * C29557 +
           (C351 * C29548 + C350 * C3051) * C6578) *
              C29439 * C29425 * C85 +
          ((C351 * C3051 + C352 * C29548) * C6578 +
           (C2273 * C3051 +
            (C151 * C2087 - C325 * C2033 - C151 * C2207 + C29484 * C2259) *
                C29548) *
               C29557) *
              C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C151 * C152 - C325 * C93 - C151 * C277 + C29484 * C326) * C3051 +
            C350 * C29548) *
               C6578 +
           ((C151 * C1119 - C325 * C1059 - C151 * C1219 + C29484 * C1271) *
                C3051 +
            C2274 * C29548) *
               C29557) *
              C29439 * C612 -
          (((C151 * C2616 - C325 * C2554 - C151 * C2728 + C29484 * C2784) *
                C29548 +
            (C151 * C2615 - C325 * C2553 - C151 * C2727 + C29484 * C2783) *
                C3051) *
               C29557 +
           (C1752 * C29548 +
            (C151 * C678 - C325 * C618 - C151 * C778 + C29484 * C830) * C3051) *
               C6578) *
              C29439 * C613 +
          (((C151 * C681 - C325 * C619 - C151 * C781 + C29484 * C831) * C3051 +
            (C151 * C682 - C325 * C620 - C151 * C782 + C29484 * C832) *
                C29548) *
               C6578 +
           ((C151 * C6017 - C325 * C5929 - C151 * C6161 + C29484 * C6239) *
                C3051 +
            (C151 * C6018 - C325 * C5930 - C151 * C6162 + C29484 * C6240) *
                C29548) *
               C29557) *
              C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q));
    d2eeyz[14] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6578 * C215 - C6680 * C93 + C29557 * C1169 - C6681 * C1059) *
                C151 +
            (C6578 * C390 - C6680 * C277 + C29557 * C1313 - C6681 * C1219) *
                C29484) *
               C3051 +
           ((C6683 - C6684 + C6685 - C6686) * C151 +
            (C6849 - C6850 + C6851 - C6852) * C29484) *
               C29548) *
              C29439 * C29425 * C84 +
          (((C6684 - C6683 + C6686 - C6685) * C151 +
            (C6850 - C6849 + C6852 - C6851) * C29484) *
               C3051 +
           ((C6691 - C6692 + C6693 - C6694) * C151 +
            (C6853 - C6854 + C6855 - C6856) * C29484) *
               C29548) *
              C29439 * C29425 * C85 +
          (((C6692 - C6691 + C6694 - C6693) * C151 +
            (C6854 - C6853 + C6856 - C6855) * C29484) *
               C3051 +
           ((C6578 * C218 - C6680 * C96 + C29557 * C2147 - C6681 * C2033) *
                C151 +
            (C6578 * C393 - C6680 * C280 + C29557 * C2324 - C6681 * C2207) *
                C29484) *
               C29548) *
              C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6578 * C215 - C6680 * C93 + C29557 * C1169 - C6681 * C1059) *
                C151 +
            (C6578 * C390 - C6680 * C277 + C29557 * C1313 - C6681 * C1219) *
                C29484) *
               C3051 +
           ((C6683 - C6684 + C6685 - C6686) * C151 +
            (C6849 - C6850 + C6851 - C6852) * C29484) *
               C29548) *
              C29439 * C612 +
          (((C6680 * C618 - C6578 * C728 + C6681 * C2553 - C29557 * C2671) *
                C151 +
            (C6680 * C778 - C6578 * C872 + C6681 * C2727 - C29557 * C2836) *
                C29484) *
               C3051 +
           ((C6680 * C617 - C6578 * C729 + C6681 * C2554 - C29557 * C2672) *
                C151 +
            (C6680 * C779 - C6578 * C873 + C6681 * C2728 - C29557 * C2837) *
                C29484) *
               C29548) *
              C29439 * C613 +
          (((C6578 * C731 - C6680 * C619 + C29557 * C6087 - C6681 * C5929) *
                C151 +
            (C6578 * C875 - C6680 * C781 + C29557 * C6307 - C6681 * C6161) *
                C29484) *
               C3051 +
           ((C6578 * C732 - C6680 * C620 + C29557 * C6088 - C6681 * C5930) *
                C151 +
            (C6578 * C876 - C6680 * C782 + C29557 * C6308 - C6681 * C6162) *
                C29484) *
               C29548) *
              C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q));
    d2eezx[14] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C3051 * C98 - C3055 * C93 + C29548 * C100 - C3057 * C94) * C6680 +
           (C3051 * C448 - C3055 * C443 + C29548 * C449 - C3057 * C444) *
               C6578 +
           (C3051 * C1067 - C3055 * C1059 + C29548 * C1065 - C3057 * C1058) *
               C6681 +
           (C3051 * C1363 - C3055 * C1357 + C29548 * C1364 - C3057 * C1358) *
               C29557) *
              C29484 * C29439 * C29425 * C84 +
          ((C3055 * C94 - C3051 * C100 + C3057 * C95 - C29548 * C102) * C6680 +
           (C3055 * C444 - C3051 * C449 + C3057 * C445 - C29548 * C450) *
               C6578 +
           (C3055 * C1058 - C3051 * C1065 + C3057 * C1057 - C29548 * C1063) *
               C6681 +
           (C3055 * C1358 - C3051 * C1364 + C3057 * C1359 - C29548 * C1365) *
               C29557) *
              C29484 * C29439 * C29425 * C85 +
          ((C3051 * C102 - C3055 * C95 + C29548 * C104 - C3057 * C96) * C6680 +
           (C3051 * C450 - C3055 * C445 + C29548 * C451 - C3057 * C446) *
               C6578 +
           (C3051 * C1063 - C3055 * C1057 + C29548 * C2034 - C3057 * C2033) *
               C6681 +
           (C3051 * C1365 - C3055 * C1359 + C29548 * C2380 - C3057 * C2379) *
               C29557) *
              C29484 * C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C3051 * C98 - C3055 * C93 + C29548 * C100 - C3057 * C94) * C6680 +
           (C3051 * C448 - C3055 * C443 + C29548 * C449 - C3057 * C444) *
               C6578 +
           (C3051 * C1067 - C3055 * C1059 + C29548 * C1065 - C3057 * C1058) *
               C6681 +
           (C3051 * C1363 - C3055 * C1357 + C29548 * C1364 - C3057 * C1358) *
               C29557) *
              C29484 * C29439 * C612 +
          ((C3781 - C3780 + C3783 - C3782) * C6680 +
           (C3961 - C3960 + C3963 - C3962) * C6578 +
           (C6166 - C6167 + C6168 - C6169) * C6681 +
           (C6382 - C6383 + C6384 - C6385) * C29557) *
              C29484 * C29439 * C613 +
          ((C3789 - C3788 + C3791 - C3790) * C6680 +
           (C3965 - C3964 + C3967 - C3966) * C6578 +
           (C3051 * C5931 - C3055 * C5929 + C29548 * C5933 - C3057 * C5930) *
               C6681 +
           (C3051 * C6379 - C3055 * C6377 + C29548 * C6380 - C3057 * C6378) *
               C29557) *
              C29484 * C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q));
    d2eezy[14] += (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C29484 * C152 - C151 * C93) * C6680 +
                      (C29484 * C491 - C151 * C443) * C6578 +
                      (C29484 * C1119 - C151 * C1059) * C6681 +
                      (C29484 * C1407 - C151 * C1357) * C29557) *
                         C3051 +
                     ((C163 - C164) * C6680 + (C497 - C498) * C6578 +
                      (C2091 - C2090) * C6681 + (C2434 - C2433) * C29557) *
                         C29548) *
                        C29439 * C29425 * C84 +
                    (((C164 - C163) * C6680 + (C498 - C497) * C6578 +
                      (C2090 - C2091) * C6681 + (C2433 - C2434) * C29557) *
                         C3051 +
                     ((C168 - C167) * C6680 + (C501 - C500) * C6578 +
                      (C2094 - C2095) * C6681 + (C2435 - C2436) * C29557) *
                         C29548) *
                        C29439 * C29425 * C85 +
                    ((C175 * C6680 + C504 * C6578 + (C2095 - C2094) * C6681 +
                      (C2436 - C2435) * C29557) *
                         C3051 +
                     ((C172 - C171) * C6680 + (C503 - C502) * C6578 +
                      (C29484 * C2087 - C151 * C2033) * C6681 +
                      (C29484 * C2431 - C151 * C2379) * C29557) *
                         C29548) *
                        C29439 * C29425 * C86)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C29484 * C152 - C151 * C93) * C6680 +
                      (C29484 * C491 - C151 * C443) * C6578 +
                      (C29484 * C1119 - C151 * C1059) * C6681 +
                      (C29484 * C1407 - C151 * C1357) * C29557) *
                         C3051 +
                     ((C163 - C164) * C6680 + (C497 - C498) * C6578 +
                      (C2091 - C2090) * C6681 + (C2434 - C2433) * C29557) *
                         C29548) *
                        C29439 * C612 +
                    (((C151 * C618 - C29484 * C678) * C6680 +
                      (C151 * C916 - C29484 * C966) * C6578 +
                      (C151 * C2553 - C29484 * C2615) * C6681 +
                      (C151 * C2889 - C29484 * C2945) * C29557) *
                         C3051 +
                     ((C1568 - C1569) * C6680 + (C1911 - C1912) * C6578 +
                      (C151 * C2554 - C29484 * C2616) * C6681 +
                      (C151 * C2890 - C29484 * C2946) * C29557) *
                         C29548) *
                        C29439 * C613 +
                    (((C29484 * C681 - C151 * C619) * C6680 +
                      (C29484 * C969 - C151 * C919) * C6578 +
                      (C29484 * C6017 - C151 * C5929) * C6681 +
                      (C29484 * C6451 - C151 * C6377) * C29557) *
                         C3051 +
                     ((C29484 * C682 - C151 * C620) * C6680 +
                      (C29484 * C970 - C151 * C920) * C6578 +
                      (C29484 * C6018 - C151 * C5930) * C6681 +
                      (C29484 * C6452 - C151 * C6378) * C29557) *
                         C29548) *
                        C29439 * C614) *
                   C29413) /
                      (p * q * std::sqrt(p + q));
    d2eezz[14] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C6680 * C215 - C7006 * C93 - C6680 * C443 + C6578 * C545 +
            C6681 * C1169 - C7007 * C1059 - C6681 * C1357 + C29557 * C1453) *
               C29484 * C3051 +
           (C7033 + C7034) * C29484 * C29548) *
              C29439 * C29425 * C84 -
          ((C7035 + C7036) * C29484 * C29548 +
           (C7034 + C7033) * C29484 * C3051) *
              C29439 * C29425 * C85 +
          ((C7036 + C7035) * C29484 * C3051 +
           (C6680 * C218 - C7006 * C96 - C6680 * C446 + C6578 * C548 +
            C6681 * C2147 - C7007 * C2033 - C6681 * C2379 + C29557 * C2486) *
               C29484 * C29548) *
              C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C6680 * C215 - C7006 * C93 - C6680 * C443 + C6578 * C545 +
            C6681 * C1169 - C7007 * C1059 - C6681 * C1357 + C29557 * C1453) *
               C29484 * C3051 +
           (C7033 + C7034) * C29484 * C29548) *
              C29439 * C612 -
          ((C6681 * C2672 - C7007 * C2554 - C6681 * C2890 + C29557 * C2999 +
            C6680 * C729 - C7006 * C617 - C6680 * C917 + C6578 * C1011) *
               C29484 * C29548 +
           (C6681 * C2671 - C7007 * C2553 - C6681 * C2889 + C29557 * C2998 +
            C6680 * C728 - C7006 * C618 - C6680 * C916 + C6578 * C1012) *
               C29484 * C3051) *
              C29439 * C613 +
          ((C6680 * C731 - C7006 * C619 - C6680 * C919 + C6578 * C1013 +
            C6681 * C6087 - C7007 * C5929 - C6681 * C6377 + C29557 * C6519) *
               C29484 * C3051 +
           (C6680 * C732 - C7006 * C620 - C6680 * C920 + C6578 * C1014 +
            C6681 * C6088 - C7007 * C5930 - C6681 * C6378 + C29557 * C6520) *
               C29484 * C29548) *
              C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q));
    d2eexx[15] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C10013 * C98 - C10014 * C93 - C10013 * C99 + C10009 * C108 +
             C10015 * C100 - C10016 * C94 - C10015 * C101 + C29548 * C109) *
                C29499 * C10011 +
            (C10552 + C10553) * C29499 * C29555) *
               C29439 * C1507 -
           ((C10554 + C10555) * C29499 * C29555 +
            (C10553 + C10552) * C29499 * C10011) *
               C29439 * C1508) *
              C1509 +
          (((C11508 + C11509) * C29499 * C10011 +
            (C10013 * C630 - C10014 * C620 - C10013 * C631 + C10009 * C638 +
             C10015 * C632 - C10016 * C621 - C10015 * C633 + C29548 * C639) *
                C29499 * C29555) *
               C29439 * C1508 -
           ((C11509 + C11508) * C29499 * C29555 +
            (C10015 * C102 - C10016 * C95 - C10015 * C103 + C29548 * C110 +
             C10013 * C100 - C10014 * C94 - C10013 * C101 + C10009 * C109) *
                C29499 * C10011) *
               C29439 * C1507) *
              C1510)) /
        (p * q * std::sqrt(p + q));
    d2eexy[15] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C10011 * C152 - C10067 * C93 + C29555 * C678 - C10068 * C618) *
                C10013 +
            (C10011 * C157 - C10067 * C99 + C29555 * C684 - C10068 * C627) *
                C10009 +
            (C10070 - C10071 + C10072 - C10073) * C10015 +
            (C10074 - C10075 + C10076 - C10077) * C29548) *
               C29499 * C29439 * C1507 +
           ((C10067 * C618 - C10011 * C678 + C10068 * C619 - C29555 * C681) *
                C10013 +
            (C10067 * C627 - C10011 * C684 + C10068 * C629 - C29555 * C687) *
                C10009 +
            (C11576 - C11577 + C11578 - C11579) * C10015 +
            (C11580 - C11581 + C11582 - C11583) * C29548) *
               C29499 * C29439 * C1508) *
              C1509 +
          (((C10071 - C10070 + C10073 - C10072) * C10013 +
            (C10075 - C10074 + C10077 - C10076) * C10009 +
            (C10078 - C10079 + C10080 - C10081) * C10015 +
            (C10082 - C10083 + C10084 - C10085) * C29548) *
               C29499 * C29439 * C1507 +
           ((C11577 - C11576 + C11579 - C11578) * C10013 +
            (C11581 - C11580 + C11583 - C11582) * C10009 +
            (C10011 * C680 - C10067 * C616 + C29555 * C683 - C10068 * C621) *
                C10015 +
            (C10011 * C686 - C10067 * C623 + C29555 * C689 - C10068 * C633) *
                C29548) *
               C29499 * C29439 * C1508) *
              C1510)) /
        (p * q * std::sqrt(p + q));
    d2eexz[15] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C29499 * C215 - C214 * C93) * C10013 +
                       (C29499 * C220 - C214 * C99) * C10009 +
                       (C226 - C227) * C10015 + (C228 - C229) * C29548) *
                          C10011 +
                      ((C3714 - C3715) * C10013 + (C3716 - C3717) * C10009 +
                       C4795 * C10015 + C4796 * C29548) *
                          C29555) *
                         C29439 * C1507 +
                     (((C3715 - C3714) * C10013 + (C3717 - C3716) * C10009 +
                       C4797 * C10015 + C4798 * C29548) *
                          C10011 +
                      ((C3718 - C3719) * C10013 + (C3720 - C3721) * C10009 +
                       (C3722 - C3723) * C10015 + (C3724 - C3725) * C29548) *
                          C29555) *
                         C29439 * C1508) *
                        C1509 +
                    ((((C227 - C226) * C10013 + (C229 - C228) * C10009 +
                       (C231 - C230) * C10015 + (C233 - C232) * C29548) *
                          C10011 +
                      (C4797 * C10013 + C4798 * C10009 +
                       (C1632 - C1633) * C10015 + (C1634 - C1635) * C29548) *
                          C29555) *
                         C29439 * C1507 +
                     ((C4795 * C10013 + C4796 * C10009 +
                       (C1633 - C1632) * C10015 + (C1635 - C1634) * C29548) *
                          C10011 +
                      ((C3723 - C3722) * C10013 + (C3725 - C3724) * C10009 +
                       (C29499 * C733 - C214 * C621) * C10015 +
                       (C29499 * C739 - C214 * C633) * C29548) *
                          C29555) *
                         C29439 * C1508) *
                        C1510)) /
                  (p * q * std::sqrt(p + q));
    d2eeyx[15] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C10009 * C98 - C10013 * C93 + C29548 * C100 - C10015 * C94) *
                C10067 +
            (C10009 * C282 - C10013 * C277 + C29548 * C283 - C10015 * C278) *
                C10011 +
            (C10706 - C10707 + C10708 - C10709) * C10068 +
            (C10710 - C10711 + C10712 - C10713) * C29555) *
               C29499 * C29439 * C1507 +
           ((C10707 - C10706 + C10709 - C10708) * C10067 +
            (C10711 - C10710 + C10713 - C10712) * C10011 +
            (C10714 - C10715 + C10716 - C10717) * C10068 +
            (C10718 - C10719 + C10720 - C10721) * C29555) *
               C29499 * C29439 * C1508) *
              C1509 +
          (((C10013 * C94 - C10009 * C100 + C10015 * C95 - C29548 * C102) *
                C10067 +
            (C10013 * C278 - C10009 * C283 + C10015 * C279 - C29548 * C284) *
                C10011 +
            (C11716 - C11717 + C11718 - C11719) * C10068 +
            (C11720 - C11721 + C11722 - C11723) * C29555) *
               C29499 * C29439 * C1507 +
           ((C11717 - C11716 + C11719 - C11718) * C10067 +
            (C11721 - C11720 + C11723 - C11722) * C10011 +
            (C10009 * C630 - C10013 * C620 + C29548 * C632 - C10015 * C621) *
                C10068 +
            (C10009 * C788 - C10013 * C782 + C29548 * C789 - C10015 * C783) *
                C29555) *
               C29499 * C29439 * C1508) *
              C1510)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[15] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C10067 * C152 - C10235 * C93 - C10067 * C277 + C10011 * C326 +
             C10068 * C678 - C10236 * C618 - C10068 * C778 + C29555 * C830) *
                C10009 +
            (C10262 + C10263) * C29548) *
               C29499 * C29439 * C1507 -
           ((C11802 + C11803) * C29548 +
            (C10068 * C681 - C10236 * C619 - C10068 * C781 + C29555 * C831 +
             C10067 * C678 - C10235 * C618 - C10067 * C778 + C10011 * C830) *
                C10009) *
               C29499 * C29439 * C1508) *
              C1509 +
          (((C11803 + C11802) * C10009 +
            (C10067 * C680 - C10235 * C616 - C10067 * C780 + C10011 * C828 +
             C10068 * C683 - C10236 * C621 - C10068 * C783 + C29555 * C833) *
                C29548) *
               C29499 * C29439 * C1508 -
           ((C10264 + C10265) * C29548 + (C10263 + C10262) * C10009) * C29499 *
               C29439 * C1507) *
              C1510)) /
        (p * q * std::sqrt(p + q));
    d2eeyz[15] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C29499 * C215 - C214 * C93) * C10067 +
                       (C29499 * C390 - C214 * C277) * C10011 +
                       (C3714 - C3715) * C10068 + (C3900 - C3901) * C29555) *
                          C10009 +
                      ((C226 - C227) * C10067 + (C396 - C397) * C10011 +
                       C4795 * C10068 + C5019 * C29555) *
                          C29548) *
                         C29439 * C1507 +
                     (((C3715 - C3714) * C10067 + (C3901 - C3900) * C10011 +
                       (C3718 - C3719) * C10068 + (C3902 - C3903) * C29555) *
                          C10009 +
                      (C4797 * C10067 + C5020 * C10011 +
                       (C3722 - C3723) * C10068 + (C3904 - C3905) * C29555) *
                          C29548) *
                         C29439 * C1508) *
                        C1509 +
                    ((((C227 - C226) * C10067 + (C397 - C396) * C10011 +
                       C4797 * C10068 + C5020 * C29555) *
                          C10009 +
                      ((C231 - C230) * C10067 + (C400 - C399) * C10011 +
                       (C1632 - C1633) * C10068 + (C1806 - C1807) * C29555) *
                          C29548) *
                         C29439 * C1507 +
                     ((C4795 * C10067 + C5019 * C10011 +
                       (C3723 - C3722) * C10068 + (C3905 - C3904) * C29555) *
                          C10009 +
                      ((C1633 - C1632) * C10067 + (C1807 - C1806) * C10011 +
                       (C29499 * C733 - C214 * C621) * C10068 +
                       (C29499 * C877 - C214 * C783) * C29555) *
                          C29548) *
                         C29439 * C1508) *
                        C1510)) /
                  (p * q * std::sqrt(p + q));
    d2eezx[15] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C10009 * C98 - C10013 * C93 + C29548 * C100 - C10015 * C94) *
                 C214 +
             (C10009 * C448 - C10013 * C443 + C29548 * C449 - C10015 * C444) *
                 C29499) *
                C10011 +
            ((C10706 - C10707 + C10708 - C10709) * C214 +
             (C10872 - C10873 + C10874 - C10875) * C29499) *
                C29555) *
               C29439 * C1507 +
           (((C10707 - C10706 + C10709 - C10708) * C214 +
             (C10873 - C10872 + C10875 - C10874) * C29499) *
                C10011 +
            ((C10714 - C10715 + C10716 - C10717) * C214 +
             (C10876 - C10877 + C10878 - C10879) * C29499) *
                C29555) *
               C29439 * C1508) *
              C1509 +
          ((((C10013 * C94 - C10009 * C100 + C10015 * C95 - C29548 * C102) *
                 C214 +
             (C10013 * C444 - C10009 * C449 + C10015 * C445 - C29548 * C450) *
                 C29499) *
                C10011 +
            ((C11716 - C11717 + C11718 - C11719) * C214 +
             (C11936 - C11937 + C11938 - C11939) * C29499) *
                C29555) *
               C29439 * C1507 +
           (((C11717 - C11716 + C11719 - C11718) * C214 +
             (C11937 - C11936 + C11939 - C11938) * C29499) *
                C10011 +
            ((C10009 * C630 - C10013 * C620 + C29548 * C632 - C10015 * C621) *
                 C214 +
             (C10009 * C926 - C10013 * C920 + C29548 * C927 - C10015 * C921) *
                 C29499) *
                C29555) *
               C29439 * C1508) *
              C1510)) /
        (p * q * std::sqrt(p + q));
    d2eezy[15] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C10011 * C152 - C10067 * C93 + C29555 * C678 - C10068 * C618) *
                 C214 +
             (C10011 * C491 - C10067 * C443 + C29555 * C966 - C10068 * C916) *
                 C29499) *
                C10009 +
            ((C10070 - C10071 + C10072 - C10073) * C214 +
             (C10416 - C10417 + C10418 - C10419) * C29499) *
                C29548) *
               C29439 * C1507 +
           (((C10067 * C618 - C10011 * C678 + C10068 * C619 - C29555 * C681) *
                 C214 +
             (C10067 * C916 - C10011 * C966 + C10068 * C919 - C29555 * C969) *
                 C29499) *
                C10009 +
            ((C11576 - C11577 + C11578 - C11579) * C214 +
             (C12006 - C12007 + C12008 - C12009) * C29499) *
                C29548) *
               C29439 * C1508) *
              C1509 +
          ((((C10071 - C10070 + C10073 - C10072) * C214 +
             (C10417 - C10416 + C10419 - C10418) * C29499) *
                C10009 +
            ((C10078 - C10079 + C10080 - C10081) * C214 +
             (C10420 - C10421 + C10422 - C10423) * C29499) *
                C29548) *
               C29439 * C1507 +
           (((C11577 - C11576 + C11579 - C11578) * C214 +
             (C12007 - C12006 + C12009 - C12008) * C29499) *
                C10009 +
            ((C10011 * C680 - C10067 * C616 + C29555 * C683 - C10068 * C621) *
                 C214 +
             (C10011 * C968 - C10067 * C918 + C29555 * C971 - C10068 * C921) *
                 C29499) *
                C29548) *
               C29439 * C1508) *
              C1510)) /
        (p * q * std::sqrt(p + q));
    d2eezz[15] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C214 * C215 - C544 * C93 - C214 * C443 + C29499 * C545) * C10011 +
             C4090 * C29555) *
                C10009 +
            (C10474 + C10475) * C29548) *
               C29439 * C1507 -
           ((C12076 + C12077) * C29548 +
            (C4092 * C29555 + C4090 * C10011) * C10009) *
               C29439 * C1508) *
              C1509 +
          (((C12077 + C12076) * C10009 +
            (C1978 * C10011 +
             (C214 * C733 - C544 * C621 - C214 * C921 + C29499 * C1015) *
                 C29555) *
                C29548) *
               C29439 * C1508 -
           ((C10476 + C10477) * C29548 + (C10475 + C10474) * C10009) * C29439 *
               C1507) *
              C1510)) /
        (p * q * std::sqrt(p + q));
    d2eexx[16] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C10013 * C98 - C10014 * C93 - C10013 * C99 + C10009 * C108 +
             C10015 * C100 - C10016 * C94 - C10015 * C101 + C29548 * C109) *
                C29499 * C10011 +
            (C10552 + C10553) * C29499 * C29555) *
               C2031 -
           ((C12778 + C12779) * C29499 * C29555 +
            (C10015 * C1065 - C10016 * C1058 - C10015 * C1066 + C29548 * C1076 +
             C10013 * C1067 - C10014 * C1059 - C10013 * C1068 +
             C10009 * C1077) *
                C29499 * C10011) *
               C2032) *
              C1507 +
          (((C12779 + C12778) * C29499 * C10011 +
            (C10013 * C5931 - C10014 * C5929 - C10013 * C5932 + C10009 * C5935 +
             C10015 * C5933 - C10016 * C5930 - C10015 * C5934 +
             C29548 * C5936) *
                C29499 * C29555) *
               C2032 -
           ((C10554 + C10555) * C29499 * C29555 +
            (C10553 + C10552) * C29499 * C10011) *
               C2031) *
              C1508) *
         C29413) /
        (p * q * std::sqrt(p + q));
    d2eexy[16] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C10011 * C152 - C10067 * C93 + C29555 * C678 - C10068 * C618) *
                C10013 +
            (C10011 * C157 - C10067 * C99 + C29555 * C684 - C10068 * C627) *
                C10009 +
            (C10070 - C10071 + C10072 - C10073) * C10015 +
            (C10074 - C10075 + C10076 - C10077) * C29548) *
               C29499 * C2031 +
           ((C10067 * C1059 - C10011 * C1119 + C10068 * C2553 -
             C29555 * C2615) *
                C10013 +
            (C10067 * C1068 - C10011 * C1125 + C10068 * C2557 -
             C29555 * C2618) *
                C10009 +
            (C12210 - C12211 + C12212 - C12213) * C10015 +
            (C12214 - C12215 + C12216 - C12217) * C29548) *
               C29499 * C2032) *
              C1507 +
          (((C10067 * C618 - C10011 * C678 + C10068 * C619 - C29555 * C681) *
                C10013 +
            (C10067 * C627 - C10011 * C684 + C10068 * C629 - C29555 * C687) *
                C10009 +
            (C11576 - C11577 + C11578 - C11579) * C10015 +
            (C11580 - C11581 + C11582 - C11583) * C29548) *
               C29499 * C2031 +
           ((C10011 * C2615 - C10067 * C2553 + C29555 * C6017 -
             C10068 * C5929) *
                C10013 +
            (C10011 * C2618 - C10067 * C2557 + C29555 * C6019 -
             C10068 * C5932) *
                C10009 +
            (C10011 * C2616 - C10067 * C2554 + C29555 * C6018 -
             C10068 * C5930) *
                C10015 +
            (C10011 * C2619 - C10067 * C2559 + C29555 * C6020 -
             C10068 * C5934) *
                C29548) *
               C29499 * C2032) *
              C1508) *
         C29413) /
        (p * q * std::sqrt(p + q));
    d2eexz[16] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C29499 * C215 - C214 * C93) * C10013 +
                       (C29499 * C220 - C214 * C99) * C10009 +
                       (C226 - C227) * C10015 + (C228 - C229) * C29548) *
                          C10011 +
                      ((C3714 - C3715) * C10013 + (C3716 - C3717) * C10009 +
                       C4795 * C10015 + C4796 * C29548) *
                          C29555) *
                         C2031 +
                     (((C214 * C1059 - C29499 * C1169) * C10013 +
                       (C214 * C1068 - C29499 * C1175) * C10009 +
                       (C2150 - C2151) * C10015 + (C2152 - C2153) * C29548) *
                          C10011 +
                      ((C6092 - C6093) * C10013 + (C6094 - C6095) * C10009 +
                       (C5435 - C5436) * C10015 + (C5437 - C5438) * C29548) *
                          C29555) *
                         C2032) *
                        C1507 +
                    ((((C3715 - C3714) * C10013 + (C3717 - C3716) * C10009 +
                       C4797 * C10015 + C4798 * C29548) *
                          C10011 +
                      ((C3718 - C3719) * C10013 + (C3720 - C3721) * C10009 +
                       (C3722 - C3723) * C10015 + (C3724 - C3725) * C29548) *
                          C29555) *
                         C2031 +
                     (((C6093 - C6092) * C10013 + (C6095 - C6094) * C10009 +
                       (C5436 - C5435) * C10015 + (C5438 - C5437) * C29548) *
                          C10011 +
                      ((C29499 * C6087 - C214 * C5929) * C10013 +
                       (C29499 * C6089 - C214 * C5932) * C10009 +
                       (C29499 * C6088 - C214 * C5930) * C10015 +
                       (C29499 * C6090 - C214 * C5934) * C29548) *
                          C29555) *
                         C2032) *
                        C1508) *
                   C29413) /
                  (p * q * std::sqrt(p + q));
    d2eeyx[16] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C10009 * C98 - C10013 * C93 + C29548 * C100 - C10015 * C94) *
                C10067 +
            (C10009 * C282 - C10013 * C277 + C29548 * C283 - C10015 * C278) *
                C10011 +
            (C10706 - C10707 + C10708 - C10709) * C10068 +
            (C10710 - C10711 + C10712 - C10713) * C29555) *
               C29499 * C2031 +
           ((C10013 * C1059 - C10009 * C1067 + C10015 * C1058 -
             C29548 * C1065) *
                C10067 +
            (C10013 * C1219 - C10009 * C1225 + C10015 * C1220 -
             C29548 * C1226) *
                C10011 +
            (C12978 - C12979 + C12980 - C12981) * C10068 +
            (C12982 - C12983 + C12984 - C12985) * C29555) *
               C29499 * C2032) *
              C1507 +
          (((C10707 - C10706 + C10709 - C10708) * C10067 +
            (C10711 - C10710 + C10713 - C10712) * C10011 +
            (C10714 - C10715 + C10716 - C10717) * C10068 +
            (C10718 - C10719 + C10720 - C10721) * C29555) *
               C29499 * C2031 +
           ((C12979 - C12978 + C12981 - C12980) * C10067 +
            (C12983 - C12982 + C12985 - C12984) * C10011 +
            (C10009 * C5931 - C10013 * C5929 + C29548 * C5933 -
             C10015 * C5930) *
                C10068 +
            (C10009 * C6163 - C10013 * C6161 + C29548 * C6164 -
             C10015 * C6162) *
                C29555) *
               C29499 * C2032) *
              C1508) *
         C29413) /
        (p * q * std::sqrt(p + q));
    d2eeyy[16] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C10067 * C152 - C10235 * C93 - C10067 * C277 + C10011 * C326 +
             C10068 * C678 - C10236 * C618 - C10068 * C778 + C29555 * C830) *
                C10009 +
            (C10262 + C10263) * C29548) *
               C29499 * C2031 -
           ((C12428 + C12429) * C29548 +
            (C10068 * C2615 - C10236 * C2553 - C10068 * C2727 + C29555 * C2783 +
             C10067 * C1119 - C10235 * C1059 - C10067 * C1219 +
             C10011 * C1271) *
                C10009) *
               C29499 * C2032) *
              C1507 +
          (((C10067 * C2615 - C10235 * C2553 - C10067 * C2727 + C10011 * C2783 +
             C10068 * C6017 - C10236 * C5929 - C10068 * C6161 +
             C29555 * C6239) *
                C10009 +
            (C10067 * C2616 - C10235 * C2554 - C10067 * C2728 + C10011 * C2784 +
             C10068 * C6018 - C10236 * C5930 - C10068 * C6162 +
             C29555 * C6240) *
                C29548) *
               C29499 * C2032 -
           ((C11802 + C11803) * C29548 +
            (C10068 * C681 - C10236 * C619 - C10068 * C781 + C29555 * C831 +
             C10067 * C678 - C10235 * C618 - C10067 * C778 + C10011 * C830) *
                C10009) *
               C29499 * C2031) *
              C1508) *
         C29413) /
        (p * q * std::sqrt(p + q));
    d2eeyz[16] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C29499 * C215 - C214 * C93) * C10067 +
                       (C29499 * C390 - C214 * C277) * C10011 +
                       (C3714 - C3715) * C10068 + (C3900 - C3901) * C29555) *
                          C10009 +
                      ((C226 - C227) * C10067 + (C396 - C397) * C10011 +
                       C4795 * C10068 + C5019 * C29555) *
                          C29548) *
                         C2031 +
                     (((C214 * C1059 - C29499 * C1169) * C10067 +
                       (C214 * C1219 - C29499 * C1313) * C10011 +
                       (C6092 - C6093) * C10068 + (C6310 - C6311) * C29555) *
                          C10009 +
                      ((C2150 - C2151) * C10067 + (C2326 - C2327) * C10011 +
                       (C5435 - C5436) * C10068 + (C5651 - C5652) * C29555) *
                          C29548) *
                         C2032) *
                        C1507 +
                    ((((C3715 - C3714) * C10067 + (C3901 - C3900) * C10011 +
                       (C3718 - C3719) * C10068 + (C3902 - C3903) * C29555) *
                          C10009 +
                      (C4797 * C10067 + C5020 * C10011 +
                       (C3722 - C3723) * C10068 + (C3904 - C3905) * C29555) *
                          C29548) *
                         C2031 +
                     (((C6093 - C6092) * C10067 + (C6311 - C6310) * C10011 +
                       (C29499 * C6087 - C214 * C5929) * C10068 +
                       (C29499 * C6307 - C214 * C6161) * C29555) *
                          C10009 +
                      ((C5436 - C5435) * C10067 + (C5652 - C5651) * C10011 +
                       (C29499 * C6088 - C214 * C5930) * C10068 +
                       (C29499 * C6308 - C214 * C6162) * C29555) *
                          C29548) *
                         C2032) *
                        C1508) *
                   C29413) /
                  (p * q * std::sqrt(p + q));
    d2eezx[16] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C10009 * C98 - C10013 * C93 + C29548 * C100 - C10015 * C94) *
                 C214 +
             (C10009 * C448 - C10013 * C443 + C29548 * C449 - C10015 * C444) *
                 C29499) *
                C10011 +
            ((C10706 - C10707 + C10708 - C10709) * C214 +
             (C10872 - C10873 + C10874 - C10875) * C29499) *
                C29555) *
               C2031 +
           (((C10013 * C1059 - C10009 * C1067 + C10015 * C1058 -
              C29548 * C1065) *
                 C214 +
             (C10013 * C1357 - C10009 * C1363 + C10015 * C1358 -
              C29548 * C1364) *
                 C29499) *
                C10011 +
            ((C12978 - C12979 + C12980 - C12981) * C214 +
             (C13184 - C13185 + C13186 - C13187) * C29499) *
                C29555) *
               C2032) *
              C1507 +
          ((((C10707 - C10706 + C10709 - C10708) * C214 +
             (C10873 - C10872 + C10875 - C10874) * C29499) *
                C10011 +
            ((C10714 - C10715 + C10716 - C10717) * C214 +
             (C10876 - C10877 + C10878 - C10879) * C29499) *
                C29555) *
               C2031 +
           (((C12979 - C12978 + C12981 - C12980) * C214 +
             (C13185 - C13184 + C13187 - C13186) * C29499) *
                C10011 +
            ((C10009 * C5931 - C10013 * C5929 + C29548 * C5933 -
              C10015 * C5930) *
                 C214 +
             (C10009 * C6379 - C10013 * C6377 + C29548 * C6380 -
              C10015 * C6378) *
                 C29499) *
                C29555) *
               C2032) *
              C1508) *
         C29413) /
        (p * q * std::sqrt(p + q));
    d2eezy[16] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C10011 * C152 - C10067 * C93 + C29555 * C678 - C10068 * C618) *
                 C214 +
             (C10011 * C491 - C10067 * C443 + C29555 * C966 - C10068 * C916) *
                 C29499) *
                C10009 +
            ((C10070 - C10071 + C10072 - C10073) * C214 +
             (C10416 - C10417 + C10418 - C10419) * C29499) *
                C29548) *
               C2031 +
           (((C10067 * C1059 - C10011 * C1119 + C10068 * C2553 -
              C29555 * C2615) *
                 C214 +
             (C10067 * C1357 - C10011 * C1407 + C10068 * C2889 -
              C29555 * C2945) *
                 C29499) *
                C10009 +
            ((C12210 - C12211 + C12212 - C12213) * C214 +
             (C12628 - C12629 + C12630 - C12631) * C29499) *
                C29548) *
               C2032) *
              C1507 +
          ((((C10067 * C618 - C10011 * C678 + C10068 * C619 - C29555 * C681) *
                 C214 +
             (C10067 * C916 - C10011 * C966 + C10068 * C919 - C29555 * C969) *
                 C29499) *
                C10009 +
            ((C11576 - C11577 + C11578 - C11579) * C214 +
             (C12006 - C12007 + C12008 - C12009) * C29499) *
                C29548) *
               C2031 +
           (((C10011 * C2615 - C10067 * C2553 + C29555 * C6017 -
              C10068 * C5929) *
                 C214 +
             (C10011 * C2945 - C10067 * C2889 + C29555 * C6451 -
              C10068 * C6377) *
                 C29499) *
                C10009 +
            ((C10011 * C2616 - C10067 * C2554 + C29555 * C6018 -
              C10068 * C5930) *
                 C214 +
             (C10011 * C2946 - C10067 * C2890 + C29555 * C6452 -
              C10068 * C6378) *
                 C29499) *
                C29548) *
               C2032) *
              C1508) *
         C29413) /
        (p * q * std::sqrt(p + q));
    d2eezz[16] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C214 * C215 - C544 * C93 - C214 * C443 + C29499 * C545) * C10011 +
             C4090 * C29555) *
                C10009 +
            (C10474 + C10475) * C29548) *
               C2031 -
           ((C12698 + C12699) * C29548 +
            (C6528 * C29555 +
             (C214 * C1169 - C544 * C1059 - C214 * C1357 + C29499 * C1453) *
                 C10011) *
                C10009) *
               C2032) *
              C1507 +
          (((C6528 * C10011 +
             (C214 * C6087 - C544 * C5929 - C214 * C6377 + C29499 * C6519) *
                 C29555) *
                C10009 +
            (C5862 * C10011 +
             (C214 * C6088 - C544 * C5930 - C214 * C6378 + C29499 * C6520) *
                 C29555) *
                C29548) *
               C2032 -
           ((C12076 + C12077) * C29548 +
            (C4092 * C29555 + C4090 * C10011) * C10009) *
               C2031) *
              C1508) *
         C29413) /
        (p * q * std::sqrt(p + q));
    d2eexx[17] +=
        (-std::pow(Pi, 2.5) *
         (((C10013 * C98 - C10014 * C93 - C10013 * C99 + C10009 * C108 +
            C10015 * C100 - C10016 * C94 - C10015 * C101 + C29548 * C109) *
               C29499 * C10011 +
           (C10552 + C10553) * C29499 * C29555) *
              C29439 * C612 -
          ((C10554 + C10555) * C29499 * C29555 +
           (C10553 + C10552) * C29499 * C10011) *
              C29439 * C613 +
          ((C10555 + C10554) * C29499 * C10011 +
           (C10013 * C3571 - C10014 * C3569 - C10013 * C3572 + C10009 * C3575 +
            C10015 * C3573 - C10016 * C3570 - C10015 * C3574 + C29548 * C3576) *
               C29499 * C29555) *
              C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C10013 * C98 - C10014 * C93 - C10013 * C99 + C10009 * C108 +
            C10015 * C100 - C10016 * C94 - C10015 * C101 + C29548 * C109) *
               C29499 * C10011 +
           (C10013 * C626 - C10014 * C618 - C10013 * C627 + C10009 * C636 +
            C10015 * C624 - C10016 * C617 - C10015 * C625 + C29548 * C635) *
               C29499 * C29555) *
              C29439 * C29425 * C84 -
          ((C10015 * C622 - C10016 * C616 - C10015 * C623 + C29548 * C634 +
            C10013 * C624 - C10014 * C617 - C10013 * C625 + C10009 * C635) *
               C29499 * C29555 +
           (C10015 * C102 - C10016 * C95 - C10015 * C103 + C29548 * C110 +
            C10013 * C100 - C10014 * C94 - C10013 * C101 + C10009 * C109) *
               C29499 * C10011) *
              C29439 * C29425 * C85 +
          ((C10013 * C102 - C10014 * C95 - C10013 * C103 + C10009 * C110 +
            C10015 * C104 - C10016 * C96 - C10015 * C105 + C29548 * C111) *
               C29499 * C10011 +
           (C10013 * C622 - C10014 * C616 - C10013 * C623 + C10009 * C634 +
            C10015 * C1512 - C10016 * C1511 - C10015 * C1513 + C29548 * C1514) *
               C29499 * C29555) *
              C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C10013 * C98 - C10014 * C93 - C10013 * C99 + C10009 * C108 +
            C10015 * C100 - C10016 * C94 - C10015 * C101 + C29548 * C109) *
               C29499 * C10011 +
           (C10552 + C10553) * C29499 * C29555) *
              C1054 -
          ((C10015 * C2558 - C10016 * C2554 - C10015 * C2559 + C29548 * C2563 +
            C10013 * C2556 - C10014 * C2553 - C10013 * C2557 + C10009 * C2562) *
               C29499 * C29555 +
           (C10015 * C1065 - C10016 * C1058 - C10015 * C1066 + C29548 * C1076 +
            C10013 * C1067 - C10014 * C1059 - C10013 * C1068 + C10009 * C1077) *
               C29499 * C10011) *
              C1055 +
          ((C10013 * C1069 - C10014 * C1060 - C10013 * C1070 + C10009 * C1078 +
            C10015 * C1071 - C10016 * C1061 - C10015 * C1072 + C29548 * C1079) *
               C29499 * C10011 +
           (C10013 * C4144 - C10014 * C4142 - C10013 * C4145 + C10009 * C4148 +
            C10015 * C4146 - C10016 * C4143 - C10015 * C4147 + C29548 * C4149) *
               C29499 * C29555) *
              C1056) *
         C29425 * C29413) /
            (p * q * std::sqrt(p + q));
    d2eexy[17] +=
        (-std::pow(Pi, 2.5) *
         (((C10011 * C152 - C10067 * C93 + C29555 * C678 - C10068 * C618) *
               C10013 +
           (C10011 * C157 - C10067 * C99 + C29555 * C684 - C10068 * C627) *
               C10009 +
           (C10070 - C10071 + C10072 - C10073) * C10015 +
           (C10074 - C10075 + C10076 - C10077) * C29548) *
              C29499 * C29439 * C612 +
          ((C10067 * C618 - C10011 * C678 + C10068 * C619 - C29555 * C681) *
               C10013 +
           (C10067 * C627 - C10011 * C684 + C10068 * C629 - C29555 * C687) *
               C10009 +
           (C10067 * C617 - C10011 * C679 + C10068 * C620 - C29555 * C682) *
               C10015 +
           (C10067 * C625 - C10011 * C685 + C10068 * C631 - C29555 * C688) *
               C29548) *
              C29499 * C29439 * C613 +
          ((C10011 * C681 - C10067 * C619 + C29555 * C3655 - C10068 * C3569) *
               C10013 +
           (C10011 * C687 - C10067 * C629 + C29555 * C3657 - C10068 * C3572) *
               C10009 +
           (C10011 * C682 - C10067 * C620 + C29555 * C3656 - C10068 * C3570) *
               C10015 +
           (C10011 * C688 - C10067 * C631 + C29555 * C3658 - C10068 * C3574) *
               C29548) *
              C29499 * C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C10011 * C152 - C10067 * C93 + C29555 * C678 - C10068 * C618) *
               C10013 +
           (C10011 * C157 - C10067 * C99 + C29555 * C684 - C10068 * C627) *
               C10009 +
           (C10070 - C10071 + C10072 - C10073) * C10015 +
           (C10074 - C10075 + C10076 - C10077) * C29548) *
              C29499 * C29439 * C29425 * C84 +
          ((C10071 - C10070 + C10073 - C10072) * C10013 +
           (C10075 - C10074 + C10077 - C10076) * C10009 +
           (C10078 - C10079 + C10080 - C10081) * C10015 +
           (C10082 - C10083 + C10084 - C10085) * C29548) *
              C29499 * C29439 * C29425 * C85 +
          ((C10079 - C10078 + C10081 - C10080) * C10013 +
           (C10083 - C10082 + C10085 - C10084) * C10009 +
           (C10011 * C155 - C10067 * C96 + C29555 * C1565 - C10068 * C1511) *
               C10015 +
           (C10011 * C160 - C10067 * C105 + C29555 * C1566 - C10068 * C1513) *
               C29548) *
              C29499 * C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C10011 * C152 - C10067 * C93 + C29555 * C678 - C10068 * C618) *
               C10013 +
           (C10011 * C157 - C10067 * C99 + C29555 * C684 - C10068 * C627) *
               C10009 +
           (C10070 - C10071 + C10072 - C10073) * C10015 +
           (C10074 - C10075 + C10076 - C10077) * C29548) *
              C29499 * C1054 +
          ((C10067 * C1059 - C10011 * C1119 + C10068 * C2553 - C29555 * C2615) *
               C10013 +
           (C10067 * C1068 - C10011 * C1125 + C10068 * C2557 - C29555 * C2618) *
               C10009 +
           (C10067 * C1058 - C10011 * C1120 + C10068 * C2554 - C29555 * C2616) *
               C10015 +
           (C10067 * C1066 - C10011 * C1126 + C10068 * C2559 - C29555 * C2619) *
               C29548) *
              C29499 * C1055 +
          ((C10011 * C1122 - C10067 * C1060 + C29555 * C4200 - C10068 * C4142) *
               C10013 +
           (C10011 * C1128 - C10067 * C1070 + C29555 * C4202 - C10068 * C4145) *
               C10009 +
           (C10011 * C1123 - C10067 * C1061 + C29555 * C4201 - C10068 * C4143) *
               C10015 +
           (C10011 * C1129 - C10067 * C1072 + C29555 * C4203 - C10068 * C4147) *
               C29548) *
              C29499 * C1056) *
         C29425 * C29413) /
            (p * q * std::sqrt(p + q));
    d2eexz[17] += (-std::pow(Pi, 2.5) *
                   ((((C29499 * C215 - C214 * C93) * C10013 +
                      (C29499 * C220 - C214 * C99) * C10009 +
                      (C226 - C227) * C10015 + (C228 - C229) * C29548) *
                         C10011 +
                     ((C3714 - C3715) * C10013 + (C3716 - C3717) * C10009 +
                      C4795 * C10015 + C4796 * C29548) *
                         C29555) *
                        C29439 * C612 +
                    (((C3715 - C3714) * C10013 + (C3717 - C3716) * C10009 +
                      C4797 * C10015 + C4798 * C29548) *
                         C10011 +
                     ((C3718 - C3719) * C10013 + (C3720 - C3721) * C10009 +
                      (C3722 - C3723) * C10015 + (C3724 - C3725) * C29548) *
                         C29555) *
                        C29439 * C613 +
                    (((C3719 - C3718) * C10013 + (C3721 - C3720) * C10009 +
                      (C3723 - C3722) * C10015 + (C3725 - C3724) * C29548) *
                         C10011 +
                     ((C29499 * C3709 - C214 * C3569) * C10013 +
                      (C29499 * C3711 - C214 * C3572) * C10009 +
                      (C29499 * C3710 - C214 * C3570) * C10015 +
                      (C29499 * C3712 - C214 * C3574) * C29548) *
                         C29555) *
                        C29439 * C614) *
                   C29413) /
                      (p * q * std::sqrt(p + q)) -
                  (std::pow(Pi, 2.5) *
                   ((((C29499 * C215 - C214 * C93) * C10013 +
                      (C29499 * C220 - C214 * C99) * C10009 +
                      (C226 - C227) * C10015 + (C228 - C229) * C29548) *
                         C10011 +
                     ((C3714 - C3715) * C10013 + (C3716 - C3717) * C10009 +
                      C4795 * C10015 + C4796 * C29548) *
                         C29555) *
                        C29439 * C29425 * C84 +
                    (((C227 - C226) * C10013 + (C229 - C228) * C10009 +
                      (C231 - C230) * C10015 + (C233 - C232) * C29548) *
                         C10011 +
                     (C4797 * C10013 + C4798 * C10009 +
                      (C1632 - C1633) * C10015 + (C1634 - C1635) * C29548) *
                         C29555) *
                        C29439 * C29425 * C85 +
                    ((C238 * C10013 + C239 * C10009 + (C235 - C234) * C10015 +
                      (C237 - C236) * C29548) *
                         C10011 +
                     ((C1633 - C1632) * C10013 + (C1635 - C1634) * C10009 +
                      (C29499 * C1625 - C214 * C1511) * C10015 +
                      (C29499 * C1626 - C214 * C1513) * C29548) *
                         C29555) *
                        C29439 * C29425 * C86)) /
                      (p * q * std::sqrt(p + q)) +
                  (2 * std::pow(Pi, 2.5) *
                   ((((C29499 * C215 - C214 * C93) * C10013 +
                      (C29499 * C220 - C214 * C99) * C10009 +
                      (C226 - C227) * C10015 + (C228 - C229) * C29548) *
                         C10011 +
                     ((C3714 - C3715) * C10013 + (C3716 - C3717) * C10009 +
                      C4795 * C10015 + C4796 * C29548) *
                         C29555) *
                        C1054 +
                    (((C214 * C1059 - C29499 * C1169) * C10013 +
                      (C214 * C1068 - C29499 * C1175) * C10009 +
                      (C2150 - C2151) * C10015 + (C2152 - C2153) * C29548) *
                         C10011 +
                     ((C6092 - C6093) * C10013 + (C6094 - C6095) * C10009 +
                      (C5435 - C5436) * C10015 + (C5437 - C5438) * C29548) *
                         C29555) *
                        C1055 +
                    (((C29499 * C1172 - C214 * C1060) * C10013 +
                      (C29499 * C1178 - C214 * C1070) * C10009 +
                      (C29499 * C1173 - C214 * C1061) * C10015 +
                      (C29499 * C1179 - C214 * C1072) * C29548) *
                         C10011 +
                     ((C29499 * C4254 - C214 * C4142) * C10013 +
                      (C29499 * C4256 - C214 * C4145) * C10009 +
                      (C29499 * C4255 - C214 * C4143) * C10015 +
                      (C29499 * C4257 - C214 * C4147) * C29548) *
                         C29555) *
                        C1056) *
                   C29425 * C29413) /
                      (p * q * std::sqrt(p + q));
    d2eeyx[17] +=
        (-std::pow(Pi, 2.5) *
         (((C10009 * C98 - C10013 * C93 + C29548 * C100 - C10015 * C94) *
               C10067 +
           (C10009 * C282 - C10013 * C277 + C29548 * C283 - C10015 * C278) *
               C10011 +
           (C10706 - C10707 + C10708 - C10709) * C10068 +
           (C10710 - C10711 + C10712 - C10713) * C29555) *
              C29499 * C29439 * C612 +
          ((C10707 - C10706 + C10709 - C10708) * C10067 +
           (C10711 - C10710 + C10713 - C10712) * C10011 +
           (C10714 - C10715 + C10716 - C10717) * C10068 +
           (C10718 - C10719 + C10720 - C10721) * C29555) *
              C29499 * C29439 * C613 +
          ((C10715 - C10714 + C10717 - C10716) * C10067 +
           (C10719 - C10718 + C10721 - C10720) * C10011 +
           (C10009 * C3571 - C10013 * C3569 + C29548 * C3573 - C10015 * C3570) *
               C10068 +
           (C10009 * C3777 - C10013 * C3775 + C29548 * C3778 - C10015 * C3776) *
               C29555) *
              C29499 * C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C10009 * C98 - C10013 * C93 + C29548 * C100 - C10015 * C94) *
               C10067 +
           (C10009 * C282 - C10013 * C277 + C29548 * C283 - C10015 * C278) *
               C10011 +
           (C10009 * C626 - C10013 * C618 + C29548 * C624 - C10015 * C617) *
               C10068 +
           (C10009 * C784 - C10013 * C778 + C29548 * C785 - C10015 * C779) *
               C29555) *
              C29499 * C29439 * C29425 * C84 +
          ((C10013 * C94 - C10009 * C100 + C10015 * C95 - C29548 * C102) *
               C10067 +
           (C10013 * C278 - C10009 * C283 + C10015 * C279 - C29548 * C284) *
               C10011 +
           (C10013 * C617 - C10009 * C624 + C10015 * C616 - C29548 * C622) *
               C10068 +
           (C10013 * C779 - C10009 * C785 + C10015 * C780 - C29548 * C786) *
               C29555) *
              C29499 * C29439 * C29425 * C85 +
          ((C10009 * C102 - C10013 * C95 + C29548 * C104 - C10015 * C96) *
               C10067 +
           (C10009 * C284 - C10013 * C279 + C29548 * C285 - C10015 * C280) *
               C10011 +
           (C10009 * C622 - C10013 * C616 + C29548 * C1512 - C10015 * C1511) *
               C10068 +
           (C10009 * C786 - C10013 * C780 + C29548 * C1686 - C10015 * C1685) *
               C29555) *
              C29499 * C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C10009 * C98 - C10013 * C93 + C29548 * C100 - C10015 * C94) *
               C10067 +
           (C10009 * C282 - C10013 * C277 + C29548 * C283 - C10015 * C278) *
               C10011 +
           (C10706 - C10707 + C10708 - C10709) * C10068 +
           (C10710 - C10711 + C10712 - C10713) * C29555) *
              C29499 * C1054 +
          ((C10013 * C1059 - C10009 * C1067 + C10015 * C1058 - C29548 * C1065) *
               C10067 +
           (C10013 * C1219 - C10009 * C1225 + C10015 * C1220 - C29548 * C1226) *
               C10011 +
           (C10013 * C2553 - C10009 * C2556 + C10015 * C2554 - C29548 * C2558) *
               C10068 +
           (C10013 * C2727 - C10009 * C2730 + C10015 * C2728 - C29548 * C2731) *
               C29555) *
              C29499 * C1055 +
          ((C10009 * C1069 - C10013 * C1060 + C29548 * C1071 - C10015 * C1061) *
               C10067 +
           (C10009 * C1228 - C10013 * C1222 + C29548 * C1229 - C10015 * C1223) *
               C10011 +
           (C10009 * C4144 - C10013 * C4142 + C29548 * C4146 - C10015 * C4143) *
               C10068 +
           (C10009 * C4310 - C10013 * C4308 + C29548 * C4311 - C10015 * C4309) *
               C29555) *
              C29499 * C1056) *
         C29425 * C29413) /
            (p * q * std::sqrt(p + q));
    d2eeyy[17] +=
        (-std::pow(Pi, 2.5) *
         (((C10067 * C152 - C10235 * C93 - C10067 * C277 + C10011 * C326 +
            C10068 * C678 - C10236 * C618 - C10068 * C778 + C29555 * C830) *
               C10009 +
           (C10262 + C10263) * C29548) *
              C29499 * C29439 * C612 -
          ((C10068 * C682 - C10236 * C620 - C10068 * C782 + C29555 * C832 +
            C10067 * C679 - C10235 * C617 - C10067 * C779 + C10011 * C829) *
               C29548 +
           (C10068 * C681 - C10236 * C619 - C10068 * C781 + C29555 * C831 +
            C10067 * C678 - C10235 * C618 - C10067 * C778 + C10011 * C830) *
               C10009) *
              C29499 * C29439 * C613 +
          ((C10067 * C681 - C10235 * C619 - C10067 * C781 + C10011 * C831 +
            C10068 * C3655 - C10236 * C3569 - C10068 * C3775 + C29555 * C3845) *
               C10009 +
           (C10067 * C682 - C10235 * C620 - C10067 * C782 + C10011 * C832 +
            C10068 * C3656 - C10236 * C3570 - C10068 * C3776 + C29555 * C3846) *
               C29548) *
              C29499 * C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C10067 * C152 - C10235 * C93 - C10067 * C277 + C10011 * C326 +
            C10068 * C678 - C10236 * C618 - C10068 * C778 + C29555 * C830) *
               C10009 +
           (C10262 + C10263) * C29548) *
              C29499 * C29439 * C29425 * C84 -
          ((C10264 + C10265) * C29548 + (C10263 + C10262) * C10009) * C29499 *
              C29439 * C29425 * C85 +
          ((C10265 + C10264) * C10009 +
           (C10067 * C155 - C10235 * C96 - C10067 * C280 + C10011 * C329 +
            C10068 * C1565 - C10236 * C1511 - C10068 * C1685 + C29555 * C1737) *
               C29548) *
              C29499 * C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C10067 * C152 - C10235 * C93 - C10067 * C277 + C10011 * C326 +
            C10068 * C678 - C10236 * C618 - C10068 * C778 + C29555 * C830) *
               C10009 +
           (C10262 + C10263) * C29548) *
              C29499 * C1054 -
          ((C10068 * C2616 - C10236 * C2554 - C10068 * C2728 + C29555 * C2784 +
            C10067 * C1120 - C10235 * C1058 - C10067 * C1220 + C10011 * C1270) *
               C29548 +
           (C10068 * C2615 - C10236 * C2553 - C10068 * C2727 + C29555 * C2783 +
            C10067 * C1119 - C10235 * C1059 - C10067 * C1219 + C10011 * C1271) *
               C10009) *
              C29499 * C1055 +
          ((C10067 * C1122 - C10235 * C1060 - C10067 * C1222 + C10011 * C1272 +
            C10068 * C4200 - C10236 * C4142 - C10068 * C4308 + C29555 * C4362) *
               C10009 +
           (C10067 * C1123 - C10235 * C1061 - C10067 * C1223 + C10011 * C1273 +
            C10068 * C4201 - C10236 * C4143 - C10068 * C4309 + C29555 * C4363) *
               C29548) *
              C29499 * C1056) *
         C29425 * C29413) /
            (p * q * std::sqrt(p + q));
    d2eeyz[17] += (-std::pow(Pi, 2.5) *
                   ((((C29499 * C215 - C214 * C93) * C10067 +
                      (C29499 * C390 - C214 * C277) * C10011 +
                      (C3714 - C3715) * C10068 + (C3900 - C3901) * C29555) *
                         C10009 +
                     ((C226 - C227) * C10067 + (C396 - C397) * C10011 +
                      C4795 * C10068 + C5019 * C29555) *
                         C29548) *
                        C29439 * C612 +
                    (((C3715 - C3714) * C10067 + (C3901 - C3900) * C10011 +
                      (C3718 - C3719) * C10068 + (C3902 - C3903) * C29555) *
                         C10009 +
                     (C4797 * C10067 + C5020 * C10011 +
                      (C3722 - C3723) * C10068 + (C3904 - C3905) * C29555) *
                         C29548) *
                        C29439 * C613 +
                    (((C3719 - C3718) * C10067 + (C3903 - C3902) * C10011 +
                      (C29499 * C3709 - C214 * C3569) * C10068 +
                      (C29499 * C3897 - C214 * C3775) * C29555) *
                         C10009 +
                     ((C3723 - C3722) * C10067 + (C3905 - C3904) * C10011 +
                      (C29499 * C3710 - C214 * C3570) * C10068 +
                      (C29499 * C3898 - C214 * C3776) * C29555) *
                         C29548) *
                        C29439 * C614) *
                   C29413) /
                      (p * q * std::sqrt(p + q)) -
                  (std::pow(Pi, 2.5) *
                   ((((C29499 * C215 - C214 * C93) * C10067 +
                      (C29499 * C390 - C214 * C277) * C10011 +
                      (C3714 - C3715) * C10068 + (C3900 - C3901) * C29555) *
                         C10009 +
                     ((C226 - C227) * C10067 + (C396 - C397) * C10011 +
                      C4795 * C10068 + C5019 * C29555) *
                         C29548) *
                        C29439 * C29425 * C84 +
                    (((C227 - C226) * C10067 + (C397 - C396) * C10011 +
                      C4797 * C10068 + C5020 * C29555) *
                         C10009 +
                     ((C231 - C230) * C10067 + (C400 - C399) * C10011 +
                      (C1632 - C1633) * C10068 + (C1806 - C1807) * C29555) *
                         C29548) *
                        C29439 * C29425 * C85 +
                    ((C238 * C10067 + C403 * C10011 + (C1633 - C1632) * C10068 +
                      (C1807 - C1806) * C29555) *
                         C10009 +
                     ((C235 - C234) * C10067 + (C402 - C401) * C10011 +
                      (C29499 * C1625 - C214 * C1511) * C10068 +
                      (C29499 * C1802 - C214 * C1685) * C29555) *
                         C29548) *
                        C29439 * C29425 * C86)) /
                      (p * q * std::sqrt(p + q)) +
                  (2 * std::pow(Pi, 2.5) *
                   ((((C29499 * C215 - C214 * C93) * C10067 +
                      (C29499 * C390 - C214 * C277) * C10011 +
                      (C3714 - C3715) * C10068 + (C3900 - C3901) * C29555) *
                         C10009 +
                     ((C226 - C227) * C10067 + (C396 - C397) * C10011 +
                      C4795 * C10068 + C5019 * C29555) *
                         C29548) *
                        C1054 +
                    (((C214 * C1059 - C29499 * C1169) * C10067 +
                      (C214 * C1219 - C29499 * C1313) * C10011 +
                      (C6092 - C6093) * C10068 + (C6310 - C6311) * C29555) *
                         C10009 +
                     ((C2150 - C2151) * C10067 + (C2326 - C2327) * C10011 +
                      (C5435 - C5436) * C10068 + (C5651 - C5652) * C29555) *
                         C29548) *
                        C1055 +
                    (((C29499 * C1172 - C214 * C1060) * C10067 +
                      (C29499 * C1316 - C214 * C1222) * C10011 +
                      (C29499 * C4254 - C214 * C4142) * C10068 +
                      (C29499 * C4414 - C214 * C4308) * C29555) *
                         C10009 +
                     ((C29499 * C1173 - C214 * C1061) * C10067 +
                      (C29499 * C1317 - C214 * C1223) * C10011 +
                      (C29499 * C4255 - C214 * C4143) * C10068 +
                      (C29499 * C4415 - C214 * C4309) * C29555) *
                         C29548) *
                        C1056) *
                   C29425 * C29413) /
                      (p * q * std::sqrt(p + q));
    d2eezx[17] +=
        (-std::pow(Pi, 2.5) *
         ((((C10009 * C98 - C10013 * C93 + C29548 * C100 - C10015 * C94) *
                C214 +
            (C10009 * C448 - C10013 * C443 + C29548 * C449 - C10015 * C444) *
                C29499) *
               C10011 +
           ((C10706 - C10707 + C10708 - C10709) * C214 +
            (C10872 - C10873 + C10874 - C10875) * C29499) *
               C29555) *
              C29439 * C612 +
          (((C10707 - C10706 + C10709 - C10708) * C214 +
            (C10873 - C10872 + C10875 - C10874) * C29499) *
               C10011 +
           ((C10714 - C10715 + C10716 - C10717) * C214 +
            (C10876 - C10877 + C10878 - C10879) * C29499) *
               C29555) *
              C29439 * C613 +
          (((C10715 - C10714 + C10717 - C10716) * C214 +
            (C10877 - C10876 + C10879 - C10878) * C29499) *
               C10011 +
           ((C10009 * C3571 - C10013 * C3569 + C29548 * C3573 -
             C10015 * C3570) *
                C214 +
            (C10009 * C3957 - C10013 * C3955 + C29548 * C3958 -
             C10015 * C3956) *
                C29499) *
               C29555) *
              C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C10009 * C98 - C10013 * C93 + C29548 * C100 - C10015 * C94) *
                C214 +
            (C10009 * C448 - C10013 * C443 + C29548 * C449 - C10015 * C444) *
                C29499) *
               C10011 +
           ((C10009 * C626 - C10013 * C618 + C29548 * C624 - C10015 * C617) *
                C214 +
            (C10009 * C922 - C10013 * C916 + C29548 * C923 - C10015 * C917) *
                C29499) *
               C29555) *
              C29439 * C29425 * C84 +
          (((C10013 * C94 - C10009 * C100 + C10015 * C95 - C29548 * C102) *
                C214 +
            (C10013 * C444 - C10009 * C449 + C10015 * C445 - C29548 * C450) *
                C29499) *
               C10011 +
           ((C10013 * C617 - C10009 * C624 + C10015 * C616 - C29548 * C622) *
                C214 +
            (C10013 * C917 - C10009 * C923 + C10015 * C918 - C29548 * C924) *
                C29499) *
               C29555) *
              C29439 * C29425 * C85 +
          (((C10009 * C102 - C10013 * C95 + C29548 * C104 - C10015 * C96) *
                C214 +
            (C10009 * C450 - C10013 * C445 + C29548 * C451 - C10015 * C446) *
                C29499) *
               C10011 +
           ((C10009 * C622 - C10013 * C616 + C29548 * C1512 - C10015 * C1511) *
                C214 +
            (C10009 * C924 - C10013 * C918 + C29548 * C1858 - C10015 * C1857) *
                C29499) *
               C29555) *
              C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C10009 * C98 - C10013 * C93 + C29548 * C100 - C10015 * C94) *
                C214 +
            (C10009 * C448 - C10013 * C443 + C29548 * C449 - C10015 * C444) *
                C29499) *
               C10011 +
           ((C10706 - C10707 + C10708 - C10709) * C214 +
            (C10872 - C10873 + C10874 - C10875) * C29499) *
               C29555) *
              C1054 +
          (((C10013 * C1059 - C10009 * C1067 + C10015 * C1058 -
             C29548 * C1065) *
                C214 +
            (C10013 * C1357 - C10009 * C1363 + C10015 * C1358 -
             C29548 * C1364) *
                C29499) *
               C10011 +
           ((C10013 * C2553 - C10009 * C2556 + C10015 * C2554 -
             C29548 * C2558) *
                C214 +
            (C10013 * C2889 - C10009 * C2892 + C10015 * C2890 -
             C29548 * C2893) *
                C29499) *
               C29555) *
              C1055 +
          (((C10009 * C1069 - C10013 * C1060 + C29548 * C1071 -
             C10015 * C1061) *
                C214 +
            (C10009 * C1366 - C10013 * C1360 + C29548 * C1367 -
             C10015 * C1361) *
                C29499) *
               C10011 +
           ((C10009 * C4144 - C10013 * C4142 + C29548 * C4146 -
             C10015 * C4143) *
                C214 +
            (C10009 * C4468 - C10013 * C4466 + C29548 * C4469 -
             C10015 * C4467) *
                C29499) *
               C29555) *
              C1056) *
         C29425 * C29413) /
            (p * q * std::sqrt(p + q));
    d2eezy[17] +=
        (-std::pow(Pi, 2.5) *
         ((((C10011 * C152 - C10067 * C93 + C29555 * C678 - C10068 * C618) *
                C214 +
            (C10011 * C491 - C10067 * C443 + C29555 * C966 - C10068 * C916) *
                C29499) *
               C10009 +
           ((C10070 - C10071 + C10072 - C10073) * C214 +
            (C10416 - C10417 + C10418 - C10419) * C29499) *
               C29548) *
              C29439 * C612 +
          (((C10067 * C618 - C10011 * C678 + C10068 * C619 - C29555 * C681) *
                C214 +
            (C10067 * C916 - C10011 * C966 + C10068 * C919 - C29555 * C969) *
                C29499) *
               C10009 +
           ((C10067 * C617 - C10011 * C679 + C10068 * C620 - C29555 * C682) *
                C214 +
            (C10067 * C917 - C10011 * C967 + C10068 * C920 - C29555 * C970) *
                C29499) *
               C29548) *
              C29439 * C613 +
          (((C10011 * C681 - C10067 * C619 + C29555 * C3655 - C10068 * C3569) *
                C214 +
            (C10011 * C969 - C10067 * C919 + C29555 * C4017 - C10068 * C3955) *
                C29499) *
               C10009 +
           ((C10011 * C682 - C10067 * C620 + C29555 * C3656 - C10068 * C3570) *
                C214 +
            (C10011 * C970 - C10067 * C920 + C29555 * C4018 - C10068 * C3956) *
                C29499) *
               C29548) *
              C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C10011 * C152 - C10067 * C93 + C29555 * C678 - C10068 * C618) *
                C214 +
            (C10011 * C491 - C10067 * C443 + C29555 * C966 - C10068 * C916) *
                C29499) *
               C10009 +
           ((C10070 - C10071 + C10072 - C10073) * C214 +
            (C10416 - C10417 + C10418 - C10419) * C29499) *
               C29548) *
              C29439 * C29425 * C84 +
          (((C10071 - C10070 + C10073 - C10072) * C214 +
            (C10417 - C10416 + C10419 - C10418) * C29499) *
               C10009 +
           ((C10078 - C10079 + C10080 - C10081) * C214 +
            (C10420 - C10421 + C10422 - C10423) * C29499) *
               C29548) *
              C29439 * C29425 * C85 +
          (((C10079 - C10078 + C10081 - C10080) * C214 +
            (C10421 - C10420 + C10423 - C10422) * C29499) *
               C10009 +
           ((C10011 * C155 - C10067 * C96 + C29555 * C1565 - C10068 * C1511) *
                C214 +
            (C10011 * C494 - C10067 * C446 + C29555 * C1909 - C10068 * C1857) *
                C29499) *
               C29548) *
              C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C10011 * C152 - C10067 * C93 + C29555 * C678 - C10068 * C618) *
                C214 +
            (C10011 * C491 - C10067 * C443 + C29555 * C966 - C10068 * C916) *
                C29499) *
               C10009 +
           ((C10070 - C10071 + C10072 - C10073) * C214 +
            (C10416 - C10417 + C10418 - C10419) * C29499) *
               C29548) *
              C1054 +
          (((C10067 * C1059 - C10011 * C1119 + C10068 * C2553 -
             C29555 * C2615) *
                C214 +
            (C10067 * C1357 - C10011 * C1407 + C10068 * C2889 -
             C29555 * C2945) *
                C29499) *
               C10009 +
           ((C10067 * C1058 - C10011 * C1120 + C10068 * C2554 -
             C29555 * C2616) *
                C214 +
            (C10067 * C1358 - C10011 * C1408 + C10068 * C2890 -
             C29555 * C2946) *
                C29499) *
               C29548) *
              C1055 +
          (((C10011 * C1122 - C10067 * C1060 + C29555 * C4200 -
             C10068 * C4142) *
                C214 +
            (C10011 * C1410 - C10067 * C1360 + C29555 * C4520 -
             C10068 * C4466) *
                C29499) *
               C10009 +
           ((C10011 * C1123 - C10067 * C1061 + C29555 * C4201 -
             C10068 * C4143) *
                C214 +
            (C10011 * C1411 - C10067 * C1361 + C29555 * C4521 -
             C10068 * C4467) *
                C29499) *
               C29548) *
              C1056) *
         C29425 * C29413) /
            (p * q * std::sqrt(p + q));
    d2eezz[17] +=
        (-std::pow(Pi, 2.5) *
         ((((C214 * C215 - C544 * C93 - C214 * C443 + C29499 * C545) * C10011 +
            C4090 * C29555) *
               C10009 +
           (C10474 + C10475) * C29548) *
              C29439 * C612 -
          ((C4091 * C29555 + C1979 * C10011) * C29548 +
           (C4092 * C29555 + C4090 * C10011) * C10009) *
              C29439 * C613 +
          ((C4092 * C10011 +
            (C214 * C3709 - C544 * C3569 - C214 * C3955 + C29499 * C4069) *
                C29555) *
               C10009 +
           (C4091 * C10011 +
            (C214 * C3710 - C544 * C3570 - C214 * C3956 + C29499 * C4070) *
                C29555) *
               C29548) *
              C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C214 * C215 - C544 * C93 - C214 * C443 + C29499 * C545) * C10011 +
            C4090 * C29555) *
               C10009 +
           (C10474 + C10475) * C29548) *
              C29439 * C29425 * C84 -
          ((C10476 + C10477) * C29548 + (C10475 + C10474) * C10009) * C29439 *
              C29425 * C85 +
          ((C10477 + C10476) * C10009 +
           (C571 * C10011 +
            (C214 * C1625 - C544 * C1511 - C214 * C1857 + C29499 * C1964) *
                C29555) *
               C29548) *
              C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C214 * C215 - C544 * C93 - C214 * C443 + C29499 * C545) * C10011 +
            C4090 * C29555) *
               C10009 +
           (C10474 + C10475) * C29548) *
              C1054 -
          ((C5862 * C29555 + C2501 * C10011) * C29548 +
           (C6528 * C29555 +
            (C214 * C1169 - C544 * C1059 - C214 * C1357 + C29499 * C1453) *
                C10011) *
               C10009) *
              C1055 +
          (((C214 * C1172 - C544 * C1060 - C214 * C1360 + C29499 * C1454) *
                C10011 +
            (C214 * C4254 - C544 * C4142 - C214 * C4466 + C29499 * C4572) *
                C29555) *
               C10009 +
           ((C214 * C1173 - C544 * C1061 - C214 * C1361 + C29499 * C1455) *
                C10011 +
            (C214 * C4255 - C544 * C4143 - C214 * C4467 + C29499 * C4573) *
                C29555) *
               C29548) *
              C1056) *
         C29425 * C29413) /
            (p * q * std::sqrt(p + q));
    d2eexx[18] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C10013 * C98 - C10014 * C93 - C10013 * C99 + C10009 * C108 +
             C10015 * C100 - C10016 * C94 - C10015 * C101 + C29548 * C109) *
                C29499 * C10011 +
            (C10552 + C10553) * C29499 * C29555) *
               C2031 -
           ((C10015 * C2558 - C10016 * C2554 - C10015 * C2559 + C29548 * C2563 +
             C10013 * C2556 - C10014 * C2553 - C10013 * C2557 +
             C10009 * C2562) *
                C29499 * C29555 +
            (C10015 * C1065 - C10016 * C1058 - C10015 * C1066 + C29548 * C1076 +
             C10013 * C1067 - C10014 * C1059 - C10013 * C1068 +
             C10009 * C1077) *
                C29499 * C10011) *
               C2032) *
              C29425 * C1509 +
          (((C10013 * C1065 - C10014 * C1058 - C10013 * C1066 + C10009 * C1076 +
             C10015 * C1063 - C10016 * C1057 - C10015 * C1064 +
             C29548 * C1075) *
                C29499 * C10011 +
            (C10013 * C2558 - C10014 * C2554 - C10013 * C2559 + C10009 * C2563 +
             C10015 * C2560 - C10016 * C2555 - C10015 * C2561 +
             C29548 * C2564) *
                C29499 * C29555) *
               C2032 -
           ((C11509 + C11508) * C29499 * C29555 +
            (C10015 * C102 - C10016 * C95 - C10015 * C103 + C29548 * C110 +
             C10013 * C100 - C10014 * C94 - C10013 * C101 + C10009 * C109) *
                C29499 * C10011) *
               C2031) *
              C29425 * C1510)) /
        (p * q * std::sqrt(p + q));
    d2eexy[18] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C10011 * C152 - C10067 * C93 + C29555 * C678 - C10068 * C618) *
                C10013 +
            (C10011 * C157 - C10067 * C99 + C29555 * C684 - C10068 * C627) *
                C10009 +
            (C10070 - C10071 + C10072 - C10073) * C10015 +
            (C10074 - C10075 + C10076 - C10077) * C29548) *
               C29499 * C2031 +
           ((C10067 * C1059 - C10011 * C1119 + C10068 * C2553 -
             C29555 * C2615) *
                C10013 +
            (C10067 * C1068 - C10011 * C1125 + C10068 * C2557 -
             C29555 * C2618) *
                C10009 +
            (C12210 - C12211 + C12212 - C12213) * C10015 +
            (C12214 - C12215 + C12216 - C12217) * C29548) *
               C29499 * C2032) *
              C29425 * C1509 +
          (((C10071 - C10070 + C10073 - C10072) * C10013 +
            (C10075 - C10074 + C10077 - C10076) * C10009 +
            (C10078 - C10079 + C10080 - C10081) * C10015 +
            (C10082 - C10083 + C10084 - C10085) * C29548) *
               C29499 * C2031 +
           ((C12211 - C12210 + C12213 - C12212) * C10013 +
            (C12215 - C12214 + C12217 - C12216) * C10009 +
            (C10011 * C1121 - C10067 * C1057 + C29555 * C2617 -
             C10068 * C2555) *
                C10015 +
            (C10011 * C1127 - C10067 * C1064 + C29555 * C2620 -
             C10068 * C2561) *
                C29548) *
               C29499 * C2032) *
              C29425 * C1510)) /
        (p * q * std::sqrt(p + q));
    d2eexz[18] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C29499 * C215 - C214 * C93) * C10013 +
                       (C29499 * C220 - C214 * C99) * C10009 +
                       (C226 - C227) * C10015 + (C228 - C229) * C29548) *
                          C10011 +
                      ((C3714 - C3715) * C10013 + (C3716 - C3717) * C10009 +
                       C4795 * C10015 + C4796 * C29548) *
                          C29555) *
                         C2031 +
                     (((C214 * C1059 - C29499 * C1169) * C10013 +
                       (C214 * C1068 - C29499 * C1175) * C10009 +
                       (C2150 - C2151) * C10015 + (C2152 - C2153) * C29548) *
                          C10011 +
                      ((C6092 - C6093) * C10013 + (C6094 - C6095) * C10009 +
                       (C5435 - C5436) * C10015 + (C5437 - C5438) * C29548) *
                          C29555) *
                         C2032) *
                        C29425 * C1509 +
                    ((((C227 - C226) * C10013 + (C229 - C228) * C10009 +
                       (C231 - C230) * C10015 + (C233 - C232) * C29548) *
                          C10011 +
                      (C4797 * C10013 + C4798 * C10009 +
                       (C1632 - C1633) * C10015 + (C1634 - C1635) * C29548) *
                          C29555) *
                         C2031 +
                     (((C2151 - C2150) * C10013 + (C2153 - C2152) * C10009 +
                       (C2155 - C2154) * C10015 + (C2157 - C2156) * C29548) *
                          C10011 +
                      ((C5436 - C5435) * C10013 + (C5438 - C5437) * C10009 +
                       (C29499 * C2673 - C214 * C2555) * C10015 +
                       (C29499 * C2676 - C214 * C2561) * C29548) *
                          C29555) *
                         C2032) *
                        C29425 * C1510)) /
                  (p * q * std::sqrt(p + q));
    d2eeyx[18] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C10009 * C98 - C10013 * C93 + C29548 * C100 - C10015 * C94) *
                C10067 +
            (C10009 * C282 - C10013 * C277 + C29548 * C283 - C10015 * C278) *
                C10011 +
            (C10706 - C10707 + C10708 - C10709) * C10068 +
            (C10710 - C10711 + C10712 - C10713) * C29555) *
               C29499 * C2031 +
           ((C10013 * C1059 - C10009 * C1067 + C10015 * C1058 -
             C29548 * C1065) *
                C10067 +
            (C10013 * C1219 - C10009 * C1225 + C10015 * C1220 -
             C29548 * C1226) *
                C10011 +
            (C10013 * C2553 - C10009 * C2556 + C10015 * C2554 -
             C29548 * C2558) *
                C10068 +
            (C10013 * C2727 - C10009 * C2730 + C10015 * C2728 -
             C29548 * C2731) *
                C29555) *
               C29499 * C2032) *
              C29425 * C1509 +
          (((C10013 * C94 - C10009 * C100 + C10015 * C95 - C29548 * C102) *
                C10067 +
            (C10013 * C278 - C10009 * C283 + C10015 * C279 - C29548 * C284) *
                C10011 +
            (C11716 - C11717 + C11718 - C11719) * C10068 +
            (C11720 - C11721 + C11722 - C11723) * C29555) *
               C29499 * C2031 +
           ((C10009 * C1065 - C10013 * C1058 + C29548 * C1063 -
             C10015 * C1057) *
                C10067 +
            (C10009 * C1226 - C10013 * C1220 + C29548 * C1227 -
             C10015 * C1221) *
                C10011 +
            (C10009 * C2558 - C10013 * C2554 + C29548 * C2560 -
             C10015 * C2555) *
                C10068 +
            (C10009 * C2731 - C10013 * C2728 + C29548 * C2732 -
             C10015 * C2729) *
                C29555) *
               C29499 * C2032) *
              C29425 * C1510)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[18] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C10067 * C152 - C10235 * C93 - C10067 * C277 + C10011 * C326 +
             C10068 * C678 - C10236 * C618 - C10068 * C778 + C29555 * C830) *
                C10009 +
            (C10262 + C10263) * C29548) *
               C29499 * C2031 -
           ((C12428 + C12429) * C29548 +
            (C10068 * C2615 - C10236 * C2553 - C10068 * C2727 + C29555 * C2783 +
             C10067 * C1119 - C10235 * C1059 - C10067 * C1219 +
             C10011 * C1271) *
                C10009) *
               C29499 * C2032) *
              C29425 * C1509 +
          (((C12429 + C12428) * C10009 +
            (C10067 * C1121 - C10235 * C1057 - C10067 * C1221 + C10011 * C1269 +
             C10068 * C2617 - C10236 * C2555 - C10068 * C2729 +
             C29555 * C2785) *
                C29548) *
               C29499 * C2032 -
           ((C10264 + C10265) * C29548 + (C10263 + C10262) * C10009) * C29499 *
               C2031) *
              C29425 * C1510)) /
        (p * q * std::sqrt(p + q));
    d2eeyz[18] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C29499 * C215 - C214 * C93) * C10067 +
                       (C29499 * C390 - C214 * C277) * C10011 +
                       (C3714 - C3715) * C10068 + (C3900 - C3901) * C29555) *
                          C10009 +
                      ((C226 - C227) * C10067 + (C396 - C397) * C10011 +
                       C4795 * C10068 + C5019 * C29555) *
                          C29548) *
                         C2031 +
                     (((C214 * C1059 - C29499 * C1169) * C10067 +
                       (C214 * C1219 - C29499 * C1313) * C10011 +
                       (C6092 - C6093) * C10068 + (C6310 - C6311) * C29555) *
                          C10009 +
                      ((C2150 - C2151) * C10067 + (C2326 - C2327) * C10011 +
                       (C5435 - C5436) * C10068 + (C5651 - C5652) * C29555) *
                          C29548) *
                         C2032) *
                        C29425 * C1509 +
                    ((((C227 - C226) * C10067 + (C397 - C396) * C10011 +
                       C4797 * C10068 + C5020 * C29555) *
                          C10009 +
                      ((C231 - C230) * C10067 + (C400 - C399) * C10011 +
                       (C1632 - C1633) * C10068 + (C1806 - C1807) * C29555) *
                          C29548) *
                         C2031 +
                     (((C2151 - C2150) * C10067 + (C2327 - C2326) * C10011 +
                       (C5436 - C5435) * C10068 + (C5652 - C5651) * C29555) *
                          C10009 +
                      ((C2155 - C2154) * C10067 + (C2329 - C2328) * C10011 +
                       (C29499 * C2673 - C214 * C2555) * C10068 +
                       (C29499 * C2838 - C214 * C2729) * C29555) *
                          C29548) *
                         C2032) *
                        C29425 * C1510)) /
                  (p * q * std::sqrt(p + q));
    d2eezx[18] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C10009 * C98 - C10013 * C93 + C29548 * C100 - C10015 * C94) *
                 C214 +
             (C10009 * C448 - C10013 * C443 + C29548 * C449 - C10015 * C444) *
                 C29499) *
                C10011 +
            ((C10706 - C10707 + C10708 - C10709) * C214 +
             (C10872 - C10873 + C10874 - C10875) * C29499) *
                C29555) *
               C2031 +
           (((C10013 * C1059 - C10009 * C1067 + C10015 * C1058 -
              C29548 * C1065) *
                 C214 +
             (C10013 * C1357 - C10009 * C1363 + C10015 * C1358 -
              C29548 * C1364) *
                 C29499) *
                C10011 +
            ((C10013 * C2553 - C10009 * C2556 + C10015 * C2554 -
              C29548 * C2558) *
                 C214 +
             (C10013 * C2889 - C10009 * C2892 + C10015 * C2890 -
              C29548 * C2893) *
                 C29499) *
                C29555) *
               C2032) *
              C29425 * C1509 +
          ((((C10013 * C94 - C10009 * C100 + C10015 * C95 - C29548 * C102) *
                 C214 +
             (C10013 * C444 - C10009 * C449 + C10015 * C445 - C29548 * C450) *
                 C29499) *
                C10011 +
            ((C11716 - C11717 + C11718 - C11719) * C214 +
             (C11936 - C11937 + C11938 - C11939) * C29499) *
                C29555) *
               C2031 +
           (((C10009 * C1065 - C10013 * C1058 + C29548 * C1063 -
              C10015 * C1057) *
                 C214 +
             (C10009 * C1364 - C10013 * C1358 + C29548 * C1365 -
              C10015 * C1359) *
                 C29499) *
                C10011 +
            ((C10009 * C2558 - C10013 * C2554 + C29548 * C2560 -
              C10015 * C2555) *
                 C214 +
             (C10009 * C2893 - C10013 * C2890 + C29548 * C2894 -
              C10015 * C2891) *
                 C29499) *
                C29555) *
               C2032) *
              C29425 * C1510)) /
        (p * q * std::sqrt(p + q));
    d2eezy[18] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C10011 * C152 - C10067 * C93 + C29555 * C678 - C10068 * C618) *
                 C214 +
             (C10011 * C491 - C10067 * C443 + C29555 * C966 - C10068 * C916) *
                 C29499) *
                C10009 +
            ((C10070 - C10071 + C10072 - C10073) * C214 +
             (C10416 - C10417 + C10418 - C10419) * C29499) *
                C29548) *
               C2031 +
           (((C10067 * C1059 - C10011 * C1119 + C10068 * C2553 -
              C29555 * C2615) *
                 C214 +
             (C10067 * C1357 - C10011 * C1407 + C10068 * C2889 -
              C29555 * C2945) *
                 C29499) *
                C10009 +
            ((C12210 - C12211 + C12212 - C12213) * C214 +
             (C12628 - C12629 + C12630 - C12631) * C29499) *
                C29548) *
               C2032) *
              C29425 * C1509 +
          ((((C10071 - C10070 + C10073 - C10072) * C214 +
             (C10417 - C10416 + C10419 - C10418) * C29499) *
                C10009 +
            ((C10078 - C10079 + C10080 - C10081) * C214 +
             (C10420 - C10421 + C10422 - C10423) * C29499) *
                C29548) *
               C2031 +
           (((C12211 - C12210 + C12213 - C12212) * C214 +
             (C12629 - C12628 + C12631 - C12630) * C29499) *
                C10009 +
            ((C10011 * C1121 - C10067 * C1057 + C29555 * C2617 -
              C10068 * C2555) *
                 C214 +
             (C10011 * C1409 - C10067 * C1359 + C29555 * C2947 -
              C10068 * C2891) *
                 C29499) *
                C29548) *
               C2032) *
              C29425 * C1510)) /
        (p * q * std::sqrt(p + q));
    d2eezz[18] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C214 * C215 - C544 * C93 - C214 * C443 + C29499 * C545) * C10011 +
             C4090 * C29555) *
                C10009 +
            (C10474 + C10475) * C29548) *
               C2031 -
           ((C12698 + C12699) * C29548 +
            (C6528 * C29555 +
             (C214 * C1169 - C544 * C1059 - C214 * C1357 + C29499 * C1453) *
                 C10011) *
                C10009) *
               C2032) *
              C29425 * C1509 +
          (((C12699 + C12698) * C10009 +
            (C2500 * C10011 +
             (C214 * C2673 - C544 * C2555 - C214 * C2891 + C29499 * C3000) *
                 C29555) *
                C29548) *
               C2032 -
           ((C10476 + C10477) * C29548 + (C10475 + C10474) * C10009) * C2031) *
              C29425 * C1510)) /
        (p * q * std::sqrt(p + q));
    d2eexx[19] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C10013 * C98 - C10014 * C93 - C10013 * C99 + C10009 * C108 +
            C10015 * C100 - C10016 * C94 - C10015 * C101 + C29548 * C109) *
               C29499 * C10011 +
           (C10013 * C626 - C10014 * C618 - C10013 * C627 + C10009 * C636 +
            C10015 * C624 - C10016 * C617 - C10015 * C625 + C29548 * C635) *
               C29499 * C29555) *
              C29439 * C29425 * C84 -
          ((C10015 * C622 - C10016 * C616 - C10015 * C623 + C29548 * C634 +
            C10013 * C624 - C10014 * C617 - C10013 * C625 + C10009 * C635) *
               C29499 * C29555 +
           (C10015 * C102 - C10016 * C95 - C10015 * C103 + C29548 * C110 +
            C10013 * C100 - C10014 * C94 - C10013 * C101 + C10009 * C109) *
               C29499 * C10011) *
              C29439 * C29425 * C85 +
          ((C10013 * C102 - C10014 * C95 - C10013 * C103 + C10009 * C110 +
            C10015 * C104 - C10016 * C96 - C10015 * C105 + C29548 * C111) *
               C29499 * C10011 +
           (C10013 * C622 - C10014 * C616 - C10013 * C623 + C10009 * C634 +
            C10015 * C1512 - C10016 * C1511 - C10015 * C1513 + C29548 * C1514) *
               C29499 * C29555) *
              C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C10013 * C98 - C10014 * C93 - C10013 * C99 + C10009 * C108 +
            C10015 * C100 - C10016 * C94 - C10015 * C101 + C29548 * C109) *
               C29499 * C10011 +
           (C10552 + C10553) * C29499 * C29555) *
              C29439 * C612 -
          ((C10554 + C10555) * C29499 * C29555 +
           (C10553 + C10552) * C29499 * C10011) *
              C29439 * C613 +
          ((C10555 + C10554) * C29499 * C10011 +
           (C10013 * C3571 - C10014 * C3569 - C10013 * C3572 + C10009 * C3575 +
            C10015 * C3573 - C10016 * C3570 - C10015 * C3574 + C29548 * C3576) *
               C29499 * C29555) *
              C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q));
    d2eexy[19] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C10011 * C152 - C10067 * C93 + C29555 * C678 - C10068 * C618) *
               C10013 +
           (C10011 * C157 - C10067 * C99 + C29555 * C684 - C10068 * C627) *
               C10009 +
           (C10070 - C10071 + C10072 - C10073) * C10015 +
           (C10074 - C10075 + C10076 - C10077) * C29548) *
              C29499 * C29439 * C29425 * C84 +
          ((C10071 - C10070 + C10073 - C10072) * C10013 +
           (C10075 - C10074 + C10077 - C10076) * C10009 +
           (C10078 - C10079 + C10080 - C10081) * C10015 +
           (C10082 - C10083 + C10084 - C10085) * C29548) *
              C29499 * C29439 * C29425 * C85 +
          ((C10079 - C10078 + C10081 - C10080) * C10013 +
           (C10083 - C10082 + C10085 - C10084) * C10009 +
           (C10011 * C155 - C10067 * C96 + C29555 * C1565 - C10068 * C1511) *
               C10015 +
           (C10011 * C160 - C10067 * C105 + C29555 * C1566 - C10068 * C1513) *
               C29548) *
              C29499 * C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C10011 * C152 - C10067 * C93 + C29555 * C678 - C10068 * C618) *
               C10013 +
           (C10011 * C157 - C10067 * C99 + C29555 * C684 - C10068 * C627) *
               C10009 +
           (C10070 - C10071 + C10072 - C10073) * C10015 +
           (C10074 - C10075 + C10076 - C10077) * C29548) *
              C29499 * C29439 * C612 +
          ((C10067 * C618 - C10011 * C678 + C10068 * C619 - C29555 * C681) *
               C10013 +
           (C10067 * C627 - C10011 * C684 + C10068 * C629 - C29555 * C687) *
               C10009 +
           (C10067 * C617 - C10011 * C679 + C10068 * C620 - C29555 * C682) *
               C10015 +
           (C10067 * C625 - C10011 * C685 + C10068 * C631 - C29555 * C688) *
               C29548) *
              C29499 * C29439 * C613 +
          ((C10011 * C681 - C10067 * C619 + C29555 * C3655 - C10068 * C3569) *
               C10013 +
           (C10011 * C687 - C10067 * C629 + C29555 * C3657 - C10068 * C3572) *
               C10009 +
           (C10011 * C682 - C10067 * C620 + C29555 * C3656 - C10068 * C3570) *
               C10015 +
           (C10011 * C688 - C10067 * C631 + C29555 * C3658 - C10068 * C3574) *
               C29548) *
              C29499 * C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q));
    d2eexz[19] += (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C29499 * C215 - C214 * C93) * C10013 +
                      (C29499 * C220 - C214 * C99) * C10009 +
                      (C226 - C227) * C10015 + (C228 - C229) * C29548) *
                         C10011 +
                     ((C3714 - C3715) * C10013 + (C3716 - C3717) * C10009 +
                      C4795 * C10015 + C4796 * C29548) *
                         C29555) *
                        C29439 * C29425 * C84 +
                    (((C227 - C226) * C10013 + (C229 - C228) * C10009 +
                      (C231 - C230) * C10015 + (C233 - C232) * C29548) *
                         C10011 +
                     (C4797 * C10013 + C4798 * C10009 +
                      (C1632 - C1633) * C10015 + (C1634 - C1635) * C29548) *
                         C29555) *
                        C29439 * C29425 * C85 +
                    ((C238 * C10013 + C239 * C10009 + (C235 - C234) * C10015 +
                      (C237 - C236) * C29548) *
                         C10011 +
                     ((C1633 - C1632) * C10013 + (C1635 - C1634) * C10009 +
                      (C29499 * C1625 - C214 * C1511) * C10015 +
                      (C29499 * C1626 - C214 * C1513) * C29548) *
                         C29555) *
                        C29439 * C29425 * C86)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C29499 * C215 - C214 * C93) * C10013 +
                      (C29499 * C220 - C214 * C99) * C10009 +
                      (C226 - C227) * C10015 + (C228 - C229) * C29548) *
                         C10011 +
                     ((C3714 - C3715) * C10013 + (C3716 - C3717) * C10009 +
                      C4795 * C10015 + C4796 * C29548) *
                         C29555) *
                        C29439 * C612 +
                    (((C3715 - C3714) * C10013 + (C3717 - C3716) * C10009 +
                      C4797 * C10015 + C4798 * C29548) *
                         C10011 +
                     ((C3718 - C3719) * C10013 + (C3720 - C3721) * C10009 +
                      (C3722 - C3723) * C10015 + (C3724 - C3725) * C29548) *
                         C29555) *
                        C29439 * C613 +
                    (((C3719 - C3718) * C10013 + (C3721 - C3720) * C10009 +
                      (C3723 - C3722) * C10015 + (C3725 - C3724) * C29548) *
                         C10011 +
                     ((C29499 * C3709 - C214 * C3569) * C10013 +
                      (C29499 * C3711 - C214 * C3572) * C10009 +
                      (C29499 * C3710 - C214 * C3570) * C10015 +
                      (C29499 * C3712 - C214 * C3574) * C29548) *
                         C29555) *
                        C29439 * C614) *
                   C29413) /
                      (p * q * std::sqrt(p + q));
    d2eeyx[19] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C10009 * C98 - C10013 * C93 + C29548 * C100 - C10015 * C94) *
               C10067 +
           (C10009 * C282 - C10013 * C277 + C29548 * C283 - C10015 * C278) *
               C10011 +
           (C10009 * C626 - C10013 * C618 + C29548 * C624 - C10015 * C617) *
               C10068 +
           (C10009 * C784 - C10013 * C778 + C29548 * C785 - C10015 * C779) *
               C29555) *
              C29499 * C29439 * C29425 * C84 +
          ((C10013 * C94 - C10009 * C100 + C10015 * C95 - C29548 * C102) *
               C10067 +
           (C10013 * C278 - C10009 * C283 + C10015 * C279 - C29548 * C284) *
               C10011 +
           (C10013 * C617 - C10009 * C624 + C10015 * C616 - C29548 * C622) *
               C10068 +
           (C10013 * C779 - C10009 * C785 + C10015 * C780 - C29548 * C786) *
               C29555) *
              C29499 * C29439 * C29425 * C85 +
          ((C10009 * C102 - C10013 * C95 + C29548 * C104 - C10015 * C96) *
               C10067 +
           (C10009 * C284 - C10013 * C279 + C29548 * C285 - C10015 * C280) *
               C10011 +
           (C10009 * C622 - C10013 * C616 + C29548 * C1512 - C10015 * C1511) *
               C10068 +
           (C10009 * C786 - C10013 * C780 + C29548 * C1686 - C10015 * C1685) *
               C29555) *
              C29499 * C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C10009 * C98 - C10013 * C93 + C29548 * C100 - C10015 * C94) *
               C10067 +
           (C10009 * C282 - C10013 * C277 + C29548 * C283 - C10015 * C278) *
               C10011 +
           (C10706 - C10707 + C10708 - C10709) * C10068 +
           (C10710 - C10711 + C10712 - C10713) * C29555) *
              C29499 * C29439 * C612 +
          ((C10707 - C10706 + C10709 - C10708) * C10067 +
           (C10711 - C10710 + C10713 - C10712) * C10011 +
           (C10714 - C10715 + C10716 - C10717) * C10068 +
           (C10718 - C10719 + C10720 - C10721) * C29555) *
              C29499 * C29439 * C613 +
          ((C10715 - C10714 + C10717 - C10716) * C10067 +
           (C10719 - C10718 + C10721 - C10720) * C10011 +
           (C10009 * C3571 - C10013 * C3569 + C29548 * C3573 - C10015 * C3570) *
               C10068 +
           (C10009 * C3777 - C10013 * C3775 + C29548 * C3778 - C10015 * C3776) *
               C29555) *
              C29499 * C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q));
    d2eeyy[19] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C10067 * C152 - C10235 * C93 - C10067 * C277 + C10011 * C326 +
            C10068 * C678 - C10236 * C618 - C10068 * C778 + C29555 * C830) *
               C10009 +
           (C10262 + C10263) * C29548) *
              C29499 * C29439 * C29425 * C84 -
          ((C10264 + C10265) * C29548 + (C10263 + C10262) * C10009) * C29499 *
              C29439 * C29425 * C85 +
          ((C10265 + C10264) * C10009 +
           (C10067 * C155 - C10235 * C96 - C10067 * C280 + C10011 * C329 +
            C10068 * C1565 - C10236 * C1511 - C10068 * C1685 + C29555 * C1737) *
               C29548) *
              C29499 * C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C10067 * C152 - C10235 * C93 - C10067 * C277 + C10011 * C326 +
            C10068 * C678 - C10236 * C618 - C10068 * C778 + C29555 * C830) *
               C10009 +
           (C10262 + C10263) * C29548) *
              C29499 * C29439 * C612 -
          ((C10068 * C682 - C10236 * C620 - C10068 * C782 + C29555 * C832 +
            C10067 * C679 - C10235 * C617 - C10067 * C779 + C10011 * C829) *
               C29548 +
           (C10068 * C681 - C10236 * C619 - C10068 * C781 + C29555 * C831 +
            C10067 * C678 - C10235 * C618 - C10067 * C778 + C10011 * C830) *
               C10009) *
              C29499 * C29439 * C613 +
          ((C10067 * C681 - C10235 * C619 - C10067 * C781 + C10011 * C831 +
            C10068 * C3655 - C10236 * C3569 - C10068 * C3775 + C29555 * C3845) *
               C10009 +
           (C10067 * C682 - C10235 * C620 - C10067 * C782 + C10011 * C832 +
            C10068 * C3656 - C10236 * C3570 - C10068 * C3776 + C29555 * C3846) *
               C29548) *
              C29499 * C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q));
    d2eeyz[19] += (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C29499 * C215 - C214 * C93) * C10067 +
                      (C29499 * C390 - C214 * C277) * C10011 +
                      (C3714 - C3715) * C10068 + (C3900 - C3901) * C29555) *
                         C10009 +
                     ((C226 - C227) * C10067 + (C396 - C397) * C10011 +
                      C4795 * C10068 + C5019 * C29555) *
                         C29548) *
                        C29439 * C29425 * C84 +
                    (((C227 - C226) * C10067 + (C397 - C396) * C10011 +
                      C4797 * C10068 + C5020 * C29555) *
                         C10009 +
                     ((C231 - C230) * C10067 + (C400 - C399) * C10011 +
                      (C1632 - C1633) * C10068 + (C1806 - C1807) * C29555) *
                         C29548) *
                        C29439 * C29425 * C85 +
                    ((C238 * C10067 + C403 * C10011 + (C1633 - C1632) * C10068 +
                      (C1807 - C1806) * C29555) *
                         C10009 +
                     ((C235 - C234) * C10067 + (C402 - C401) * C10011 +
                      (C29499 * C1625 - C214 * C1511) * C10068 +
                      (C29499 * C1802 - C214 * C1685) * C29555) *
                         C29548) *
                        C29439 * C29425 * C86)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C29499 * C215 - C214 * C93) * C10067 +
                      (C29499 * C390 - C214 * C277) * C10011 +
                      (C3714 - C3715) * C10068 + (C3900 - C3901) * C29555) *
                         C10009 +
                     ((C226 - C227) * C10067 + (C396 - C397) * C10011 +
                      C4795 * C10068 + C5019 * C29555) *
                         C29548) *
                        C29439 * C612 +
                    (((C3715 - C3714) * C10067 + (C3901 - C3900) * C10011 +
                      (C3718 - C3719) * C10068 + (C3902 - C3903) * C29555) *
                         C10009 +
                     (C4797 * C10067 + C5020 * C10011 +
                      (C3722 - C3723) * C10068 + (C3904 - C3905) * C29555) *
                         C29548) *
                        C29439 * C613 +
                    (((C3719 - C3718) * C10067 + (C3903 - C3902) * C10011 +
                      (C29499 * C3709 - C214 * C3569) * C10068 +
                      (C29499 * C3897 - C214 * C3775) * C29555) *
                         C10009 +
                     ((C3723 - C3722) * C10067 + (C3905 - C3904) * C10011 +
                      (C29499 * C3710 - C214 * C3570) * C10068 +
                      (C29499 * C3898 - C214 * C3776) * C29555) *
                         C29548) *
                        C29439 * C614) *
                   C29413) /
                      (p * q * std::sqrt(p + q));
    d2eezx[19] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10009 * C98 - C10013 * C93 + C29548 * C100 - C10015 * C94) *
                C214 +
            (C10009 * C448 - C10013 * C443 + C29548 * C449 - C10015 * C444) *
                C29499) *
               C10011 +
           ((C10009 * C626 - C10013 * C618 + C29548 * C624 - C10015 * C617) *
                C214 +
            (C10009 * C922 - C10013 * C916 + C29548 * C923 - C10015 * C917) *
                C29499) *
               C29555) *
              C29439 * C29425 * C84 +
          (((C10013 * C94 - C10009 * C100 + C10015 * C95 - C29548 * C102) *
                C214 +
            (C10013 * C444 - C10009 * C449 + C10015 * C445 - C29548 * C450) *
                C29499) *
               C10011 +
           ((C10013 * C617 - C10009 * C624 + C10015 * C616 - C29548 * C622) *
                C214 +
            (C10013 * C917 - C10009 * C923 + C10015 * C918 - C29548 * C924) *
                C29499) *
               C29555) *
              C29439 * C29425 * C85 +
          (((C10009 * C102 - C10013 * C95 + C29548 * C104 - C10015 * C96) *
                C214 +
            (C10009 * C450 - C10013 * C445 + C29548 * C451 - C10015 * C446) *
                C29499) *
               C10011 +
           ((C10009 * C622 - C10013 * C616 + C29548 * C1512 - C10015 * C1511) *
                C214 +
            (C10009 * C924 - C10013 * C918 + C29548 * C1858 - C10015 * C1857) *
                C29499) *
               C29555) *
              C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10009 * C98 - C10013 * C93 + C29548 * C100 - C10015 * C94) *
                C214 +
            (C10009 * C448 - C10013 * C443 + C29548 * C449 - C10015 * C444) *
                C29499) *
               C10011 +
           ((C10706 - C10707 + C10708 - C10709) * C214 +
            (C10872 - C10873 + C10874 - C10875) * C29499) *
               C29555) *
              C29439 * C612 +
          (((C10707 - C10706 + C10709 - C10708) * C214 +
            (C10873 - C10872 + C10875 - C10874) * C29499) *
               C10011 +
           ((C10714 - C10715 + C10716 - C10717) * C214 +
            (C10876 - C10877 + C10878 - C10879) * C29499) *
               C29555) *
              C29439 * C613 +
          (((C10715 - C10714 + C10717 - C10716) * C214 +
            (C10877 - C10876 + C10879 - C10878) * C29499) *
               C10011 +
           ((C10009 * C3571 - C10013 * C3569 + C29548 * C3573 -
             C10015 * C3570) *
                C214 +
            (C10009 * C3957 - C10013 * C3955 + C29548 * C3958 -
             C10015 * C3956) *
                C29499) *
               C29555) *
              C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q));
    d2eezy[19] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10011 * C152 - C10067 * C93 + C29555 * C678 - C10068 * C618) *
                C214 +
            (C10011 * C491 - C10067 * C443 + C29555 * C966 - C10068 * C916) *
                C29499) *
               C10009 +
           ((C10070 - C10071 + C10072 - C10073) * C214 +
            (C10416 - C10417 + C10418 - C10419) * C29499) *
               C29548) *
              C29439 * C29425 * C84 +
          (((C10071 - C10070 + C10073 - C10072) * C214 +
            (C10417 - C10416 + C10419 - C10418) * C29499) *
               C10009 +
           ((C10078 - C10079 + C10080 - C10081) * C214 +
            (C10420 - C10421 + C10422 - C10423) * C29499) *
               C29548) *
              C29439 * C29425 * C85 +
          (((C10079 - C10078 + C10081 - C10080) * C214 +
            (C10421 - C10420 + C10423 - C10422) * C29499) *
               C10009 +
           ((C10011 * C155 - C10067 * C96 + C29555 * C1565 - C10068 * C1511) *
                C214 +
            (C10011 * C494 - C10067 * C446 + C29555 * C1909 - C10068 * C1857) *
                C29499) *
               C29548) *
              C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10011 * C152 - C10067 * C93 + C29555 * C678 - C10068 * C618) *
                C214 +
            (C10011 * C491 - C10067 * C443 + C29555 * C966 - C10068 * C916) *
                C29499) *
               C10009 +
           ((C10070 - C10071 + C10072 - C10073) * C214 +
            (C10416 - C10417 + C10418 - C10419) * C29499) *
               C29548) *
              C29439 * C612 +
          (((C10067 * C618 - C10011 * C678 + C10068 * C619 - C29555 * C681) *
                C214 +
            (C10067 * C916 - C10011 * C966 + C10068 * C919 - C29555 * C969) *
                C29499) *
               C10009 +
           ((C10067 * C617 - C10011 * C679 + C10068 * C620 - C29555 * C682) *
                C214 +
            (C10067 * C917 - C10011 * C967 + C10068 * C920 - C29555 * C970) *
                C29499) *
               C29548) *
              C29439 * C613 +
          (((C10011 * C681 - C10067 * C619 + C29555 * C3655 - C10068 * C3569) *
                C214 +
            (C10011 * C969 - C10067 * C919 + C29555 * C4017 - C10068 * C3955) *
                C29499) *
               C10009 +
           ((C10011 * C682 - C10067 * C620 + C29555 * C3656 - C10068 * C3570) *
                C214 +
            (C10011 * C970 - C10067 * C920 + C29555 * C4018 - C10068 * C3956) *
                C29499) *
               C29548) *
              C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q));
    d2eezz[19] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C214 * C215 - C544 * C93 - C214 * C443 + C29499 * C545) * C10011 +
            C4090 * C29555) *
               C10009 +
           (C10474 + C10475) * C29548) *
              C29439 * C29425 * C84 -
          ((C10476 + C10477) * C29548 + (C10475 + C10474) * C10009) * C29439 *
              C29425 * C85 +
          ((C10477 + C10476) * C10009 +
           (C571 * C10011 +
            (C214 * C1625 - C544 * C1511 - C214 * C1857 + C29499 * C1964) *
                C29555) *
               C29548) *
              C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C214 * C215 - C544 * C93 - C214 * C443 + C29499 * C545) * C10011 +
            C4090 * C29555) *
               C10009 +
           (C10474 + C10475) * C29548) *
              C29439 * C612 -
          ((C4091 * C29555 + C1979 * C10011) * C29548 +
           (C4092 * C29555 + C4090 * C10011) * C10009) *
              C29439 * C613 +
          ((C4092 * C10011 +
            (C214 * C3709 - C544 * C3569 - C214 * C3955 + C29499 * C4069) *
                C29555) *
               C10009 +
           (C4091 * C10011 +
            (C214 * C3710 - C544 * C3570 - C214 * C3956 + C29499 * C4070) *
                C29555) *
               C29548) *
              C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q));
    d2eexx[20] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C13361 * C98 - C13362 * C93 - C13361 * C99 + C29390 * C108) *
                C29499 * C13358 +
            C13737 * C13359 + C13738 * C13360) *
               C29439 * C1507 -
           (C13739 * C13360 + C13738 * C13359 + C13737 * C13358) * C29439 *
               C1508) *
              C1509 +
          ((C14521 * C13358 + C14522 * C13359 +
            (C13361 * C3573 - C13362 * C3570 - C13361 * C3574 +
             C29390 * C3576) *
                C29499 * C13360) *
               C29439 * C1508 -
           (C14522 * C13360 + C14521 * C13359 +
            (C13361 * C100 - C13362 * C94 - C13361 * C101 + C29390 * C109) *
                C29499 * C13358) *
               C29439 * C1507) *
              C1510)) /
        (p * q * std::sqrt(p + q));
    d2eexy[20] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C13358 * C152 - C13401 * C93 + C13359 * C678 -
                       C13402 * C618 + C13360 * C681 - C13403 * C619) *
                          C13361 +
                      (C13358 * C157 - C13401 * C99 + C13359 * C684 -
                       C13402 * C627 + C13360 * C687 - C13403 * C629) *
                          C29390) *
                         C29499 * C29439 * C1507 +
                     ((C13401 * C618 - C13358 * C678 + C13402 * C619 -
                       C13359 * C681 + C13403 * C3569 - C13360 * C3655) *
                          C13361 +
                      (C13401 * C627 - C13358 * C684 + C13402 * C629 -
                       C13359 * C687 + C13403 * C3572 - C13360 * C3657) *
                          C29390) *
                         C29499 * C29439 * C1508) *
                        C1509 +
                    (((C13401 * C94 - C13358 * C153 + C13402 * C617 -
                       C13359 * C679 + C13403 * C620 - C13360 * C682) *
                          C13361 +
                      (C13401 * C101 - C13358 * C158 + C13402 * C625 -
                       C13359 * C685 + C13403 * C631 - C13360 * C688) *
                          C29390) *
                         C29499 * C29439 * C1507 +
                     ((C13358 * C679 - C13401 * C617 + C13359 * C682 -
                       C13402 * C620 + C13360 * C3656 - C13403 * C3570) *
                          C13361 +
                      (C13358 * C685 - C13401 * C625 + C13359 * C688 -
                       C13402 * C631 + C13360 * C3658 - C13403 * C3574) *
                          C29390) *
                         C29499 * C29439 * C1508) *
                        C1510)) /
                  (p * q * std::sqrt(p + q));
    d2eexz[20] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C29499 * C215 - C214 * C93) * C13361 +
             (C29499 * C220 - C214 * C99) * C29390) *
                C13358 +
            ((C3714 - C3715) * C13361 + (C3716 - C3717) * C29390) * C13359 +
            C13828 * C13360) *
               C29439 * C1507 +
           (((C3715 - C3714) * C13361 + (C3717 - C3716) * C29390) * C13358 +
            ((C3718 - C3719) * C13361 + (C3720 - C3721) * C29390) * C13359 +
            ((C13822 - C13823) * C13361 + (C13824 - C13825) * C29390) *
                C13360) *
               C29439 * C1508) *
              C1509 +
          ((((C227 - C226) * C13361 + (C229 - C228) * C29390) * C13358 +
            (C4797 * C13361 + C4798 * C29390) * C13359 +
            ((C3722 - C3723) * C13361 + (C3724 - C3725) * C29390) * C13360) *
               C29439 * C1507 +
           ((C4795 * C13361 + C4796 * C29390) * C13358 +
            ((C3723 - C3722) * C13361 + (C3725 - C3724) * C29390) * C13359 +
            ((C29499 * C3710 - C214 * C3570) * C13361 +
             (C29499 * C3712 - C214 * C3574) * C29390) *
                C13360) *
               C29439 * C1508) *
              C1510)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[20] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C29390 * C98 - C13361 * C93) * C13401 +
                      (C29390 * C282 - C13361 * C277) * C13358 +
                      (C13869 - C13870) * C13402 + (C13871 - C13872) * C13359 +
                      C13881 * C13403 + C13882 * C13360) *
                         C29499 * C29439 * C1507 +
                     ((C13870 - C13869) * C13401 + (C13872 - C13871) * C13358 +
                      (C13874 - C13873) * C13402 + (C13876 - C13875) * C13359 +
                      (C13877 - C13878) * C13403 + (C13879 - C13880) * C13360) *
                         C29499 * C29439 * C1508) *
                        C1509 +
                    (((C13361 * C94 - C29390 * C100) * C13401 +
                      (C13361 * C278 - C29390 * C283) * C13358 +
                      (C14673 - C14674) * C13402 + (C14675 - C14676) * C13359 +
                      (C14677 - C14678) * C13403 + (C14679 - C14680) * C13360) *
                         C29499 * C29439 * C1507 +
                     ((C14674 - C14673) * C13401 + (C14676 - C14675) * C13358 +
                      (C14678 - C14677) * C13402 + (C14680 - C14679) * C13359 +
                      (C29390 * C3573 - C13361 * C3570) * C13403 +
                      (C29390 * C3778 - C13361 * C3776) * C13360) *
                         C29499 * C29439 * C1508) *
                        C1510)) /
                  (p * q * std::sqrt(p + q));
    d2eeyy[20] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C13401 * C152 - C13518 * C93 - C13401 * C277 + C13358 * C326 +
            C13402 * C678 - C13519 * C618 - C13402 * C778 + C13359 * C830 +
            C13403 * C681 - C13520 * C619 - C13403 * C781 + C13360 * C831) *
               C29390 * C29499 * C29439 * C1507 -
           (C13403 * C3655 - C13520 * C3569 - C13403 * C3775 + C13360 * C3845 +
            C13402 * C681 - C13519 * C619 - C13402 * C781 + C13359 * C831 +
            C13401 * C678 - C13518 * C618 - C13401 * C778 + C13358 * C830) *
               C29390 * C29499 * C29439 * C1508) *
              C1509 +
          ((C13401 * C679 - C13518 * C617 - C13401 * C779 + C13358 * C829 +
            C13402 * C682 - C13519 * C620 - C13402 * C782 + C13359 * C832 +
            C13403 * C3656 - C13520 * C3570 - C13403 * C3776 + C13360 * C3846) *
               C29390 * C29499 * C29439 * C1508 -
           (C13403 * C682 - C13520 * C620 - C13403 * C782 + C13360 * C832 +
            C13402 * C679 - C13519 * C617 - C13402 * C779 + C13359 * C829 +
            C13401 * C153 - C13518 * C94 - C13401 * C278 + C13358 * C327) *
               C29390 * C29499 * C29439 * C1507) *
              C1510)) /
        (p * q * std::sqrt(p + q));
    d2eeyz[20] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C29499 * C215 - C214 * C93) * C13401 +
            (C29499 * C390 - C214 * C277) * C13358 + (C3714 - C3715) * C13402 +
            (C3900 - C3901) * C13359 + C13820 * C13403 + C13961 * C13360) *
               C29390 * C29439 * C1507 +
           ((C3715 - C3714) * C13401 + (C3901 - C3900) * C13358 +
            (C3718 - C3719) * C13402 + (C3902 - C3903) * C13359 +
            (C13822 - C13823) * C13403 + (C13962 - C13963) * C13360) *
               C29390 * C29439 * C1508) *
              C1509 +
          (((C227 - C226) * C13401 + (C397 - C396) * C13358 + C4797 * C13402 +
            C5020 * C13359 + (C3722 - C3723) * C13403 +
            (C3904 - C3905) * C13360) *
               C29390 * C29439 * C1507 +
           (C4795 * C13401 + C5019 * C13358 + (C3723 - C3722) * C13402 +
            (C3905 - C3904) * C13359 +
            (C29499 * C3710 - C214 * C3570) * C13403 +
            (C29499 * C3898 - C214 * C3776) * C13360) *
               C29390 * C29439 * C1508) *
              C1510)) /
        (p * q * std::sqrt(p + q));
    d2eezx[20] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C29390 * C98 - C13361 * C93) * C214 +
             (C29390 * C448 - C13361 * C443) * C29499) *
                C13358 +
            ((C13869 - C13870) * C214 + (C14004 - C14005) * C29499) * C13359 +
            C14013 * C13360) *
               C29439 * C1507 +
           (((C13870 - C13869) * C214 + (C14005 - C14004) * C29499) * C13358 +
            ((C13874 - C13873) * C214 + (C14008 - C14007) * C29499) * C13359 +
            ((C13877 - C13878) * C214 + (C14009 - C14010) * C29499) * C13360) *
               C29439 * C1508) *
              C1509 +
          ((((C13361 * C94 - C29390 * C100) * C214 +
             (C13361 * C444 - C29390 * C449) * C29499) *
                C13358 +
            ((C14673 - C14674) * C214 + (C14831 - C14832) * C29499) * C13359 +
            ((C14677 - C14678) * C214 + (C14833 - C14834) * C29499) * C13360) *
               C29439 * C1507 +
           (((C14674 - C14673) * C214 + (C14832 - C14831) * C29499) * C13358 +
            ((C14678 - C14677) * C214 + (C14834 - C14833) * C29499) * C13359 +
            ((C29390 * C3573 - C13361 * C3570) * C214 +
             (C29390 * C3958 - C13361 * C3956) * C29499) *
                C13360) *
               C29439 * C1508) *
              C1510)) /
        (p * q * std::sqrt(p + q));
    d2eezy[20] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C13358 * C152 - C13401 * C93 + C13359 * C678 -
                       C13402 * C618 + C13360 * C681 - C13403 * C619) *
                          C214 +
                      (C13358 * C491 - C13401 * C443 + C13359 * C966 -
                       C13402 * C916 + C13360 * C969 - C13403 * C919) *
                          C29499) *
                         C29390 * C29439 * C1507 +
                     ((C13401 * C618 - C13358 * C678 + C13402 * C619 -
                       C13359 * C681 + C13403 * C3569 - C13360 * C3655) *
                          C214 +
                      (C13401 * C916 - C13358 * C966 + C13402 * C919 -
                       C13359 * C969 + C13403 * C3955 - C13360 * C4017) *
                          C29499) *
                         C29390 * C29439 * C1508) *
                        C1509 +
                    (((C13401 * C94 - C13358 * C153 + C13402 * C617 -
                       C13359 * C679 + C13403 * C620 - C13360 * C682) *
                          C214 +
                      (C13401 * C444 - C13358 * C492 + C13402 * C917 -
                       C13359 * C967 + C13403 * C920 - C13360 * C970) *
                          C29499) *
                         C29390 * C29439 * C1507 +
                     ((C13358 * C679 - C13401 * C617 + C13359 * C682 -
                       C13402 * C620 + C13360 * C3656 - C13403 * C3570) *
                          C214 +
                      (C13358 * C967 - C13401 * C917 + C13359 * C970 -
                       C13402 * C920 + C13360 * C4018 - C13403 * C3956) *
                          C29499) *
                         C29390 * C29439 * C1508) *
                        C1510)) /
                  (p * q * std::sqrt(p + q));
    d2eezz[20] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C214 * C215 - C544 * C93 - C214 * C443 + C29499 * C545) * C13358 +
            C4090 * C13359 + C4092 * C13360) *
               C29390 * C29439 * C1507 -
           (C14098 * C13360 + C4092 * C13359 + C4090 * C13358) * C29390 *
               C29439 * C1508) *
              C1509 +
          ((C1979 * C13358 + C4091 * C13359 +
            (C214 * C3710 - C544 * C3570 - C214 * C3956 + C29499 * C4070) *
                C13360) *
               C29390 * C29439 * C1508 -
           (C4091 * C13360 + C1979 * C13359 + C569 * C13358) * C29390 * C29439 *
               C1507) *
              C1510)) /
        (p * q * std::sqrt(p + q));
    d2eexx[21] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C13361 * C98 - C13362 * C93 - C13361 * C99 + C29390 * C108) *
                C29499 * C13358 +
            C13737 * C13359 + C13738 * C13360) *
               C2031 -
           (C15453 * C13360 + C15454 * C13359 +
            (C13361 * C1067 - C13362 * C1059 - C13361 * C1068 +
             C29390 * C1077) *
                C29499 * C13358) *
               C2032) *
              C1507 +
          ((C15454 * C13358 + C15453 * C13359 +
            (C13361 * C15435 - C13362 * C15434 - C13361 * C15436 +
             C29390 * C15437) *
                C29499 * C13360) *
               C2032 -
           (C13739 * C13360 + C13738 * C13359 + C13737 * C13358) * C2031) *
              C1508) *
         C29413) /
        (p * q * std::sqrt(p + q));
    d2eexy[21] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C13358 * C152 - C13401 * C93 + C13359 * C678 -
                       C13402 * C618 + C13360 * C681 - C13403 * C619) *
                          C13361 +
                      (C13358 * C157 - C13401 * C99 + C13359 * C684 -
                       C13402 * C627 + C13360 * C687 - C13403 * C629) *
                          C29390) *
                         C29499 * C2031 +
                     ((C13401 * C1059 - C13358 * C1119 + C13402 * C2553 -
                       C13359 * C2615 + C13403 * C5929 - C13360 * C6017) *
                          C13361 +
                      (C13401 * C1068 - C13358 * C1125 + C13402 * C2557 -
                       C13359 * C2618 + C13403 * C5932 - C13360 * C6019) *
                          C29390) *
                         C29499 * C2032) *
                        C1507 +
                    (((C13401 * C618 - C13358 * C678 + C13402 * C619 -
                       C13359 * C681 + C13403 * C3569 - C13360 * C3655) *
                          C13361 +
                      (C13401 * C627 - C13358 * C684 + C13402 * C629 -
                       C13359 * C687 + C13403 * C3572 - C13360 * C3657) *
                          C29390) *
                         C29499 * C2031 +
                     ((C13358 * C2615 - C13401 * C2553 + C13359 * C6017 -
                       C13402 * C5929 + C13360 * C15504 - C13403 * C15434) *
                          C13361 +
                      (C13358 * C2618 - C13401 * C2557 + C13359 * C6019 -
                       C13402 * C5932 + C13360 * C15505 - C13403 * C15436) *
                          C29390) *
                         C29499 * C2032) *
                        C1508) *
                   C29413) /
                  (p * q * std::sqrt(p + q));
    d2eexz[21] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C29499 * C215 - C214 * C93) * C13361 +
             (C29499 * C220 - C214 * C99) * C29390) *
                C13358 +
            ((C3714 - C3715) * C13361 + (C3716 - C3717) * C29390) * C13359 +
            C13828 * C13360) *
               C2031 +
           (((C214 * C1059 - C29499 * C1169) * C13361 +
             (C214 * C1068 - C29499 * C1175) * C29390) *
                C13358 +
            ((C6092 - C6093) * C13361 + (C6094 - C6095) * C29390) * C13359 +
            ((C15559 - C15560) * C13361 + (C15561 - C15562) * C29390) *
                C13360) *
               C2032) *
              C1507 +
          ((((C3715 - C3714) * C13361 + (C3717 - C3716) * C29390) * C13358 +
            ((C3718 - C3719) * C13361 + (C3720 - C3721) * C29390) * C13359 +
            ((C13822 - C13823) * C13361 + (C13824 - C13825) * C29390) *
                C13360) *
               C2031 +
           (((C6093 - C6092) * C13361 + (C6095 - C6094) * C29390) * C13358 +
            ((C15560 - C15559) * C13361 + (C15562 - C15561) * C29390) * C13359 +
            ((C29499 * C15556 - C214 * C15434) * C13361 +
             (C29499 * C15557 - C214 * C15436) * C29390) *
                C13360) *
               C2032) *
              C1508) *
         C29413) /
        (p * q * std::sqrt(p + q));
    d2eeyx[21] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C29390 * C98 - C13361 * C93) * C13401 +
                      (C29390 * C282 - C13361 * C277) * C13358 +
                      (C13869 - C13870) * C13402 + (C13871 - C13872) * C13359 +
                      C13881 * C13403 + C13882 * C13360) *
                         C29499 * C2031 +
                     ((C13361 * C1059 - C29390 * C1067) * C13401 +
                      (C13361 * C1219 - C29390 * C1225) * C13358 +
                      (C15615 - C15616) * C13402 + (C15617 - C15618) * C13359 +
                      (C15619 - C15620) * C13403 + (C15621 - C15622) * C13360) *
                         C29499 * C2032) *
                        C1507 +
                    (((C13870 - C13869) * C13401 + (C13872 - C13871) * C13358 +
                      (C13874 - C13873) * C13402 + (C13876 - C13875) * C13359 +
                      (C13877 - C13878) * C13403 + (C13879 - C13880) * C13360) *
                         C29499 * C2031 +
                     ((C15616 - C15615) * C13401 + (C15618 - C15617) * C13358 +
                      (C15620 - C15619) * C13402 + (C15622 - C15621) * C13359 +
                      (C29390 * C15435 - C13361 * C15434) * C13403 +
                      (C29390 * C15613 - C13361 * C15612) * C13360) *
                         C29499 * C2032) *
                        C1508) *
                   C29413) /
                  (p * q * std::sqrt(p + q));
    d2eeyy[21] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C13401 * C152 - C13518 * C93 - C13401 * C277 + C13358 * C326 +
            C13402 * C678 - C13519 * C618 - C13402 * C778 + C13359 * C830 +
            C13403 * C681 - C13520 * C619 - C13403 * C781 + C13360 * C831) *
               C29390 * C29499 * C2031 -
           (C13403 * C6017 - C13520 * C5929 - C13403 * C6161 + C13360 * C6239 +
            C13402 * C2615 - C13519 * C2553 - C13402 * C2727 + C13359 * C2783 +
            C13401 * C1119 - C13518 * C1059 - C13401 * C1219 + C13358 * C1271) *
               C29390 * C29499 * C2032) *
              C1507 +
          ((C13401 * C2615 - C13518 * C2553 - C13401 * C2727 + C13358 * C2783 +
            C13402 * C6017 - C13519 * C5929 - C13402 * C6161 + C13359 * C6239 +
            C13403 * C15504 - C13520 * C15434 - C13403 * C15612 +
            C13360 * C15672) *
               C29390 * C29499 * C2032 -
           (C13403 * C3655 - C13520 * C3569 - C13403 * C3775 + C13360 * C3845 +
            C13402 * C681 - C13519 * C619 - C13402 * C781 + C13359 * C831 +
            C13401 * C678 - C13518 * C618 - C13401 * C778 + C13358 * C830) *
               C29390 * C29499 * C2031) *
              C1508) *
         C29413) /
        (p * q * std::sqrt(p + q));
    d2eeyz[21] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C29499 * C215 - C214 * C93) * C13401 +
            (C29499 * C390 - C214 * C277) * C13358 + (C3714 - C3715) * C13402 +
            (C3900 - C3901) * C13359 + C13820 * C13403 + C13961 * C13360) *
               C29390 * C2031 +
           ((C214 * C1059 - C29499 * C1169) * C13401 +
            (C214 * C1219 - C29499 * C1313) * C13358 +
            (C6092 - C6093) * C13402 + (C6310 - C6311) * C13359 +
            (C15559 - C15560) * C13403 + (C15725 - C15726) * C13360) *
               C29390 * C2032) *
              C1507 +
          (((C3715 - C3714) * C13401 + (C3901 - C3900) * C13358 +
            (C3718 - C3719) * C13402 + (C3902 - C3903) * C13359 +
            (C13822 - C13823) * C13403 + (C13962 - C13963) * C13360) *
               C29390 * C2031 +
           ((C6093 - C6092) * C13401 + (C6311 - C6310) * C13358 +
            (C15560 - C15559) * C13402 + (C15726 - C15725) * C13359 +
            (C29499 * C15556 - C214 * C15434) * C13403 +
            (C29499 * C15723 - C214 * C15612) * C13360) *
               C29390 * C2032) *
              C1508) *
         C29413) /
        (p * q * std::sqrt(p + q));
    d2eezx[21] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C29390 * C98 - C13361 * C93) * C214 +
             (C29390 * C448 - C13361 * C443) * C29499) *
                C13358 +
            ((C13869 - C13870) * C214 + (C14004 - C14005) * C29499) * C13359 +
            C14013 * C13360) *
               C2031 +
           (((C13361 * C1059 - C29390 * C1067) * C214 +
             (C13361 * C1357 - C29390 * C1363) * C29499) *
                C13358 +
            ((C15615 - C15616) * C214 + (C15779 - C15780) * C29499) * C13359 +
            ((C15619 - C15620) * C214 + (C15781 - C15782) * C29499) * C13360) *
               C2032) *
              C1507 +
          ((((C13870 - C13869) * C214 + (C14005 - C14004) * C29499) * C13358 +
            ((C13874 - C13873) * C214 + (C14008 - C14007) * C29499) * C13359 +
            ((C13877 - C13878) * C214 + (C14009 - C14010) * C29499) * C13360) *
               C2031 +
           (((C15616 - C15615) * C214 + (C15780 - C15779) * C29499) * C13358 +
            ((C15620 - C15619) * C214 + (C15782 - C15781) * C29499) * C13359 +
            ((C29390 * C15435 - C13361 * C15434) * C214 +
             (C29390 * C15777 - C13361 * C15776) * C29499) *
                C13360) *
               C2032) *
              C1508) *
         C29413) /
        (p * q * std::sqrt(p + q));
    d2eezy[21] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C13358 * C152 - C13401 * C93 + C13359 * C678 -
                       C13402 * C618 + C13360 * C681 - C13403 * C619) *
                          C214 +
                      (C13358 * C491 - C13401 * C443 + C13359 * C966 -
                       C13402 * C916 + C13360 * C969 - C13403 * C919) *
                          C29499) *
                         C29390 * C2031 +
                     ((C13401 * C1059 - C13358 * C1119 + C13402 * C2553 -
                       C13359 * C2615 + C13403 * C5929 - C13360 * C6017) *
                          C214 +
                      (C13401 * C1357 - C13358 * C1407 + C13402 * C2889 -
                       C13359 * C2945 + C13403 * C6377 - C13360 * C6451) *
                          C29499) *
                         C29390 * C2032) *
                        C1507 +
                    (((C13401 * C618 - C13358 * C678 + C13402 * C619 -
                       C13359 * C681 + C13403 * C3569 - C13360 * C3655) *
                          C214 +
                      (C13401 * C916 - C13358 * C966 + C13402 * C919 -
                       C13359 * C969 + C13403 * C3955 - C13360 * C4017) *
                          C29499) *
                         C29390 * C2031 +
                     ((C13358 * C2615 - C13401 * C2553 + C13359 * C6017 -
                       C13402 * C5929 + C13360 * C15504 - C13403 * C15434) *
                          C214 +
                      (C13358 * C2945 - C13401 * C2889 + C13359 * C6451 -
                       C13402 * C6377 + C13360 * C15832 - C13403 * C15776) *
                          C29499) *
                         C29390 * C2032) *
                        C1508) *
                   C29413) /
                  (p * q * std::sqrt(p + q));
    d2eezz[21] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C214 * C215 - C544 * C93 - C214 * C443 + C29499 * C545) * C13358 +
            C4090 * C13359 + C4092 * C13360) *
               C29390 * C2031 -
           (C15891 * C13360 + C6528 * C13359 +
            (C214 * C1169 - C544 * C1059 - C214 * C1357 + C29499 * C1453) *
                C13358) *
               C29390 * C2032) *
              C1507 +
          ((C6528 * C13358 + C15891 * C13359 +
            (C214 * C15556 - C544 * C15434 - C214 * C15776 + C29499 * C15883) *
                C13360) *
               C29390 * C2032 -
           (C14098 * C13360 + C4092 * C13359 + C4090 * C13358) * C29390 *
               C2031) *
              C1508) *
         C29413) /
        (p * q * std::sqrt(p + q));
    d2eexx[22] +=
        (-std::pow(Pi, 2.5) *
         (((C13361 * C98 - C13362 * C93 - C13361 * C99 + C29390 * C108) *
               C29499 * C13358 +
           C13737 * C13359 + C13738 * C13360) *
              C29439 * C612 -
          (C13739 * C13360 + C13738 * C13359 + C13737 * C13358) * C29439 *
              C613 +
          (C13738 * C13358 + C13739 * C13359 +
           (C13361 * C13712 - C13362 * C13711 - C13361 * C13713 +
            C29390 * C13714) *
               C29499 * C13360) *
              C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C13361 * C98 - C13362 * C93 - C13361 * C99 + C29390 * C108) *
               C29499 * C13358 +
           (C13361 * C626 - C13362 * C618 - C13361 * C627 + C29390 * C636) *
               C29499 * C13359 +
           (C13361 * C628 - C13362 * C619 - C13361 * C629 + C29390 * C637) *
               C29499 * C13360) *
              C29439 * C29425 * C84 -
          ((C13361 * C630 - C13362 * C620 - C13361 * C631 + C29390 * C638) *
               C29499 * C13360 +
           (C13361 * C624 - C13362 * C617 - C13361 * C625 + C29390 * C635) *
               C29499 * C13359 +
           (C13361 * C100 - C13362 * C94 - C13361 * C101 + C29390 * C109) *
               C29499 * C13358) *
              C29439 * C29425 * C85 +
          ((C13361 * C102 - C13362 * C95 - C13361 * C103 + C29390 * C110) *
               C29499 * C13358 +
           (C13361 * C622 - C13362 * C616 - C13361 * C623 + C29390 * C634) *
               C29499 * C13359 +
           (C13361 * C632 - C13362 * C621 - C13361 * C633 + C29390 * C639) *
               C29499 * C13360) *
              C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C13361 * C98 - C13362 * C93 - C13361 * C99 + C29390 * C108) *
               C29499 * C13358 +
           C13737 * C13359 + C13738 * C13360) *
              C1054 -
          ((C13361 * C5931 - C13362 * C5929 - C13361 * C5932 + C29390 * C5935) *
               C29499 * C13360 +
           (C13361 * C2556 - C13362 * C2553 - C13361 * C2557 + C29390 * C2562) *
               C29499 * C13359 +
           (C13361 * C1067 - C13362 * C1059 - C13361 * C1068 + C29390 * C1077) *
               C29499 * C13358) *
              C1055 +
          ((C13361 * C1069 - C13362 * C1060 - C13361 * C1070 + C29390 * C1078) *
               C29499 * C13358 +
           (C13361 * C4144 - C13362 * C4142 - C13361 * C4145 + C29390 * C4148) *
               C29499 * C13359 +
           (C13361 * C14137 - C13362 * C14136 - C13361 * C14138 +
            C29390 * C14139) *
               C29499 * C13360) *
              C1056) *
         C29425 * C29413) /
            (p * q * std::sqrt(p + q));
    d2eexy[22] +=
        (-std::pow(Pi, 2.5) *
         (((C13358 * C152 - C13401 * C93 + C13359 * C678 - C13402 * C618 +
            C13360 * C681 - C13403 * C619) *
               C13361 +
           (C13358 * C157 - C13401 * C99 + C13359 * C684 - C13402 * C627 +
            C13360 * C687 - C13403 * C629) *
               C29390) *
              C29499 * C29439 * C612 +
          ((C13401 * C618 - C13358 * C678 + C13402 * C619 - C13359 * C681 +
            C13403 * C3569 - C13360 * C3655) *
               C13361 +
           (C13401 * C627 - C13358 * C684 + C13402 * C629 - C13359 * C687 +
            C13403 * C3572 - C13360 * C3657) *
               C29390) *
              C29499 * C29439 * C613 +
          ((C13358 * C681 - C13401 * C619 + C13359 * C3655 - C13402 * C3569 +
            C13360 * C13777 - C13403 * C13711) *
               C13361 +
           (C13358 * C687 - C13401 * C629 + C13359 * C3657 - C13402 * C3572 +
            C13360 * C13778 - C13403 * C13713) *
               C29390) *
              C29499 * C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) * (((C13358 * C152 - C13401 * C93 + C13359 * C678 -
                                C13402 * C618 + C13360 * C681 - C13403 * C619) *
                                   C13361 +
                               (C13358 * C157 - C13401 * C99 + C13359 * C684 -
                                C13402 * C627 + C13360 * C687 - C13403 * C629) *
                                   C29390) *
                                  C29499 * C29439 * C29425 * C84 +
                              ((C13401 * C94 - C13358 * C153 + C13402 * C617 -
                                C13359 * C679 + C13403 * C620 - C13360 * C682) *
                                   C13361 +
                               (C13401 * C101 - C13358 * C158 + C13402 * C625 -
                                C13359 * C685 + C13403 * C631 - C13360 * C688) *
                                   C29390) *
                                  C29499 * C29439 * C29425 * C85 +
                              ((C13358 * C154 - C13401 * C95 + C13359 * C680 -
                                C13402 * C616 + C13360 * C683 - C13403 * C621) *
                                   C13361 +
                               (C13358 * C159 - C13401 * C103 + C13359 * C686 -
                                C13402 * C623 + C13360 * C689 - C13403 * C633) *
                                   C29390) *
                                  C29499 * C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C13358 * C152 - C13401 * C93 + C13359 * C678 - C13402 * C618 +
            C13360 * C681 - C13403 * C619) *
               C13361 +
           (C13358 * C157 - C13401 * C99 + C13359 * C684 - C13402 * C627 +
            C13360 * C687 - C13403 * C629) *
               C29390) *
              C29499 * C1054 +
          ((C13401 * C1059 - C13358 * C1119 + C13402 * C2553 - C13359 * C2615 +
            C13403 * C5929 - C13360 * C6017) *
               C13361 +
           (C13401 * C1068 - C13358 * C1125 + C13402 * C2557 - C13359 * C2618 +
            C13403 * C5932 - C13360 * C6019) *
               C29390) *
              C29499 * C1055 +
          ((C13358 * C1122 - C13401 * C1060 + C13359 * C4200 - C13402 * C4142 +
            C13360 * C14178 - C13403 * C14136) *
               C13361 +
           (C13358 * C1128 - C13401 * C1070 + C13359 * C4202 - C13402 * C4145 +
            C13360 * C14179 - C13403 * C14138) *
               C29390) *
              C29499 * C1056) *
         C29425 * C29413) /
            (p * q * std::sqrt(p + q));
    d2eexz[22] +=
        (-std::pow(Pi, 2.5) *
         ((((C29499 * C215 - C214 * C93) * C13361 +
            (C29499 * C220 - C214 * C99) * C29390) *
               C13358 +
           ((C3714 - C3715) * C13361 + (C3716 - C3717) * C29390) * C13359 +
           C13828 * C13360) *
              C29439 * C612 +
          (((C3715 - C3714) * C13361 + (C3717 - C3716) * C29390) * C13358 +
           ((C3718 - C3719) * C13361 + (C3720 - C3721) * C29390) * C13359 +
           ((C13822 - C13823) * C13361 + (C13824 - C13825) * C29390) * C13360) *
              C29439 * C613 +
          (C13828 * C13358 +
           ((C13823 - C13822) * C13361 + (C13825 - C13824) * C29390) * C13359 +
           ((C29499 * C13817 - C214 * C13711) * C13361 +
            (C29499 * C13818 - C214 * C13713) * C29390) *
               C13360) *
              C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C29499 * C215 - C214 * C93) * C13361 +
            (C29499 * C220 - C214 * C99) * C29390) *
               C13358 +
           ((C3714 - C3715) * C13361 + (C3716 - C3717) * C29390) * C13359 +
           ((C3719 - C3718) * C13361 + (C3721 - C3720) * C29390) * C13360) *
              C29439 * C29425 * C84 +
          (((C227 - C226) * C13361 + (C229 - C228) * C29390) * C13358 +
           (C4797 * C13361 + C4798 * C29390) * C13359 +
           ((C3722 - C3723) * C13361 + (C3724 - C3725) * C29390) * C13360) *
              C29439 * C29425 * C85 +
          ((C238 * C13361 + C239 * C29390) * C13358 +
           ((C1633 - C1632) * C13361 + (C1635 - C1634) * C29390) * C13359 +
           ((C29499 * C733 - C214 * C621) * C13361 +
            (C29499 * C739 - C214 * C633) * C29390) *
               C13360) *
              C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C29499 * C215 - C214 * C93) * C13361 +
            (C29499 * C220 - C214 * C99) * C29390) *
               C13358 +
           ((C3714 - C3715) * C13361 + (C3716 - C3717) * C29390) * C13359 +
           C13828 * C13360) *
              C1054 +
          (((C214 * C1059 - C29499 * C1169) * C13361 +
            (C214 * C1068 - C29499 * C1175) * C29390) *
               C13358 +
           ((C6092 - C6093) * C13361 + (C6094 - C6095) * C29390) * C13359 +
           ((C214 * C5929 - C29499 * C6087) * C13361 +
            (C214 * C5932 - C29499 * C6089) * C29390) *
               C13360) *
              C1055 +
          (((C29499 * C1172 - C214 * C1060) * C13361 +
            (C29499 * C1178 - C214 * C1070) * C29390) *
               C13358 +
           ((C29499 * C4254 - C214 * C4142) * C13361 +
            (C29499 * C4256 - C214 * C4145) * C29390) *
               C13359 +
           ((C29499 * C14218 - C214 * C14136) * C13361 +
            (C29499 * C14219 - C214 * C14138) * C29390) *
               C13360) *
              C1056) *
         C29425 * C29413) /
            (p * q * std::sqrt(p + q));
    d2eeyx[22] +=
        (-std::pow(Pi, 2.5) *
         (((C29390 * C98 - C13361 * C93) * C13401 +
           (C29390 * C282 - C13361 * C277) * C13358 +
           (C13869 - C13870) * C13402 + (C13871 - C13872) * C13359 +
           C13881 * C13403 + C13882 * C13360) *
              C29499 * C29439 * C612 +
          ((C13870 - C13869) * C13401 + (C13872 - C13871) * C13358 +
           (C13874 - C13873) * C13402 + (C13876 - C13875) * C13359 +
           (C13877 - C13878) * C13403 + (C13879 - C13880) * C13360) *
              C29499 * C29439 * C613 +
          (C13881 * C13401 + C13882 * C13358 + (C13878 - C13877) * C13402 +
           (C13880 - C13879) * C13359 +
           (C29390 * C13712 - C13361 * C13711) * C13403 +
           (C29390 * C13867 - C13361 * C13866) * C13360) *
              C29499 * C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) * (((C29390 * C98 - C13361 * C93) * C13401 +
                               (C29390 * C282 - C13361 * C277) * C13358 +
                               (C29390 * C626 - C13361 * C618) * C13402 +
                               (C29390 * C784 - C13361 * C778) * C13359 +
                               (C29390 * C628 - C13361 * C619) * C13403 +
                               (C29390 * C787 - C13361 * C781) * C13360) *
                                  C29499 * C29439 * C29425 * C84 +
                              ((C13361 * C94 - C29390 * C100) * C13401 +
                               (C13361 * C278 - C29390 * C283) * C13358 +
                               (C13361 * C617 - C29390 * C624) * C13402 +
                               (C13361 * C779 - C29390 * C785) * C13359 +
                               (C13361 * C620 - C29390 * C630) * C13403 +
                               (C13361 * C782 - C29390 * C788) * C13360) *
                                  C29499 * C29439 * C29425 * C85 +
                              ((C29390 * C102 - C13361 * C95) * C13401 +
                               (C29390 * C284 - C13361 * C279) * C13358 +
                               (C29390 * C622 - C13361 * C616) * C13402 +
                               (C29390 * C786 - C13361 * C780) * C13359 +
                               (C29390 * C632 - C13361 * C621) * C13403 +
                               (C29390 * C789 - C13361 * C783) * C13360) *
                                  C29499 * C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C29390 * C98 - C13361 * C93) * C13401 +
           (C29390 * C282 - C13361 * C277) * C13358 +
           (C13869 - C13870) * C13402 + (C13871 - C13872) * C13359 +
           C13881 * C13403 + C13882 * C13360) *
              C29499 * C1054 +
          ((C13361 * C1059 - C29390 * C1067) * C13401 +
           (C13361 * C1219 - C29390 * C1225) * C13358 +
           (C13361 * C2553 - C29390 * C2556) * C13402 +
           (C13361 * C2727 - C29390 * C2730) * C13359 +
           (C13361 * C5929 - C29390 * C5931) * C13403 +
           (C13361 * C6161 - C29390 * C6163) * C13360) *
              C29499 * C1055 +
          ((C29390 * C1069 - C13361 * C1060) * C13401 +
           (C29390 * C1228 - C13361 * C1222) * C13358 +
           (C29390 * C4144 - C13361 * C4142) * C13402 +
           (C29390 * C4310 - C13361 * C4308) * C13359 +
           (C29390 * C14137 - C13361 * C14136) * C13403 +
           (C29390 * C14259 - C13361 * C14258) * C13360) *
              C29499 * C1056) *
         C29425 * C29413) /
            (p * q * std::sqrt(p + q));
    d2eeyy[22] +=
        (-std::pow(Pi, 2.5) *
         ((C13401 * C152 - C13518 * C93 - C13401 * C277 + C13358 * C326 +
           C13402 * C678 - C13519 * C618 - C13402 * C778 + C13359 * C830 +
           C13403 * C681 - C13520 * C619 - C13403 * C781 + C13360 * C831) *
              C29390 * C29499 * C29439 * C612 -
          (C13403 * C3655 - C13520 * C3569 - C13403 * C3775 + C13360 * C3845 +
           C13402 * C681 - C13519 * C619 - C13402 * C781 + C13359 * C831 +
           C13401 * C678 - C13518 * C618 - C13401 * C778 + C13358 * C830) *
              C29390 * C29499 * C29439 * C613 +
          (C13401 * C681 - C13518 * C619 - C13401 * C781 + C13358 * C831 +
           C13402 * C3655 - C13519 * C3569 - C13402 * C3775 + C13359 * C3845 +
           C13403 * C13777 - C13520 * C13711 - C13403 * C13866 +
           C13360 * C13920) *
              C29390 * C29499 * C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((C13401 * C152 - C13518 * C93 - C13401 * C277 + C13358 * C326 +
           C13402 * C678 - C13519 * C618 - C13402 * C778 + C13359 * C830 +
           C13403 * C681 - C13520 * C619 - C13403 * C781 + C13360 * C831) *
              C29390 * C29499 * C29439 * C29425 * C84 -
          (C13403 * C682 - C13520 * C620 - C13403 * C782 + C13360 * C832 +
           C13402 * C679 - C13519 * C617 - C13402 * C779 + C13359 * C829 +
           C13401 * C153 - C13518 * C94 - C13401 * C278 + C13358 * C327) *
              C29390 * C29499 * C29439 * C29425 * C85 +
          (C13401 * C154 - C13518 * C95 - C13401 * C279 + C13358 * C328 +
           C13402 * C680 - C13519 * C616 - C13402 * C780 + C13359 * C828 +
           C13403 * C683 - C13520 * C621 - C13403 * C783 + C13360 * C833) *
              C29390 * C29499 * C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((C13401 * C152 - C13518 * C93 - C13401 * C277 + C13358 * C326 +
           C13402 * C678 - C13519 * C618 - C13402 * C778 + C13359 * C830 +
           C13403 * C681 - C13520 * C619 - C13403 * C781 + C13360 * C831) *
              C29390 * C29499 * C1054 -
          (C13403 * C6017 - C13520 * C5929 - C13403 * C6161 + C13360 * C6239 +
           C13402 * C2615 - C13519 * C2553 - C13402 * C2727 + C13359 * C2783 +
           C13401 * C1119 - C13518 * C1059 - C13401 * C1219 + C13358 * C1271) *
              C29390 * C29499 * C1055 +
          (C13401 * C1122 - C13518 * C1060 - C13401 * C1222 + C13358 * C1272 +
           C13402 * C4200 - C13519 * C4142 - C13402 * C4308 + C13359 * C4362 +
           C13403 * C14178 - C13520 * C14136 - C13403 * C14258 +
           C13360 * C14298) *
              C29390 * C29499 * C1056) *
         C29425 * C29413) /
            (p * q * std::sqrt(p + q));
    d2eeyz[22] +=
        (-std::pow(Pi, 2.5) *
         (((C29499 * C215 - C214 * C93) * C13401 +
           (C29499 * C390 - C214 * C277) * C13358 + (C3714 - C3715) * C13402 +
           (C3900 - C3901) * C13359 + C13820 * C13403 + C13961 * C13360) *
              C29390 * C29439 * C612 +
          ((C3715 - C3714) * C13401 + (C3901 - C3900) * C13358 +
           (C3718 - C3719) * C13402 + (C3902 - C3903) * C13359 +
           (C13822 - C13823) * C13403 + (C13962 - C13963) * C13360) *
              C29390 * C29439 * C613 +
          (C13820 * C13401 + C13961 * C13358 + (C13823 - C13822) * C13402 +
           (C13963 - C13962) * C13359 +
           (C29499 * C13817 - C214 * C13711) * C13403 +
           (C29499 * C13959 - C214 * C13866) * C13360) *
              C29390 * C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C29499 * C215 - C214 * C93) * C13401 +
           (C29499 * C390 - C214 * C277) * C13358 + (C3714 - C3715) * C13402 +
           (C3900 - C3901) * C13359 + (C3719 - C3718) * C13403 +
           (C3903 - C3902) * C13360) *
              C29390 * C29439 * C29425 * C84 +
          ((C227 - C226) * C13401 + (C397 - C396) * C13358 + C4797 * C13402 +
           C5020 * C13359 + (C3722 - C3723) * C13403 +
           (C3904 - C3905) * C13360) *
              C29390 * C29439 * C29425 * C85 +
          (C238 * C13401 + C403 * C13358 + (C1633 - C1632) * C13402 +
           (C1807 - C1806) * C13359 + (C29499 * C733 - C214 * C621) * C13403 +
           (C29499 * C877 - C214 * C783) * C13360) *
              C29390 * C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C29499 * C215 - C214 * C93) * C13401 +
           (C29499 * C390 - C214 * C277) * C13358 + (C3714 - C3715) * C13402 +
           (C3900 - C3901) * C13359 + C13820 * C13403 + C13961 * C13360) *
              C29390 * C1054 +
          ((C214 * C1059 - C29499 * C1169) * C13401 +
           (C214 * C1219 - C29499 * C1313) * C13358 + (C6092 - C6093) * C13402 +
           (C6310 - C6311) * C13359 + (C214 * C5929 - C29499 * C6087) * C13403 +
           (C214 * C6161 - C29499 * C6307) * C13360) *
              C29390 * C1055 +
          ((C29499 * C1172 - C214 * C1060) * C13401 +
           (C29499 * C1316 - C214 * C1222) * C13358 +
           (C29499 * C4254 - C214 * C4142) * C13402 +
           (C29499 * C4414 - C214 * C4308) * C13359 +
           (C29499 * C14218 - C214 * C14136) * C13403 +
           (C29499 * C14337 - C214 * C14258) * C13360) *
              C29390 * C1056) *
         C29425 * C29413) /
            (p * q * std::sqrt(p + q));
    d2eezx[22] +=
        (-std::pow(Pi, 2.5) *
         ((((C29390 * C98 - C13361 * C93) * C214 +
            (C29390 * C448 - C13361 * C443) * C29499) *
               C13358 +
           ((C13869 - C13870) * C214 + (C14004 - C14005) * C29499) * C13359 +
           C14013 * C13360) *
              C29439 * C612 +
          (((C13870 - C13869) * C214 + (C14005 - C14004) * C29499) * C13358 +
           ((C13874 - C13873) * C214 + (C14008 - C14007) * C29499) * C13359 +
           ((C13877 - C13878) * C214 + (C14009 - C14010) * C29499) * C13360) *
              C29439 * C613 +
          (C14013 * C13358 +
           ((C13878 - C13877) * C214 + (C14010 - C14009) * C29499) * C13359 +
           ((C29390 * C13712 - C13361 * C13711) * C214 +
            (C29390 * C14002 - C13361 * C14001) * C29499) *
               C13360) *
              C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) * ((((C29390 * C98 - C13361 * C93) * C214 +
                                (C29390 * C448 - C13361 * C443) * C29499) *
                                   C13358 +
                               ((C29390 * C626 - C13361 * C618) * C214 +
                                (C29390 * C922 - C13361 * C916) * C29499) *
                                   C13359 +
                               ((C29390 * C628 - C13361 * C619) * C214 +
                                (C29390 * C925 - C13361 * C919) * C29499) *
                                   C13360) *
                                  C29439 * C29425 * C84 +
                              (((C13361 * C94 - C29390 * C100) * C214 +
                                (C13361 * C444 - C29390 * C449) * C29499) *
                                   C13358 +
                               ((C13361 * C617 - C29390 * C624) * C214 +
                                (C13361 * C917 - C29390 * C923) * C29499) *
                                   C13359 +
                               ((C13361 * C620 - C29390 * C630) * C214 +
                                (C13361 * C920 - C29390 * C926) * C29499) *
                                   C13360) *
                                  C29439 * C29425 * C85 +
                              (((C29390 * C102 - C13361 * C95) * C214 +
                                (C29390 * C450 - C13361 * C445) * C29499) *
                                   C13358 +
                               ((C29390 * C622 - C13361 * C616) * C214 +
                                (C29390 * C924 - C13361 * C918) * C29499) *
                                   C13359 +
                               ((C29390 * C632 - C13361 * C621) * C214 +
                                (C29390 * C927 - C13361 * C921) * C29499) *
                                   C13360) *
                                  C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C29390 * C98 - C13361 * C93) * C214 +
            (C29390 * C448 - C13361 * C443) * C29499) *
               C13358 +
           ((C13869 - C13870) * C214 + (C14004 - C14005) * C29499) * C13359 +
           C14013 * C13360) *
              C1054 +
          (((C13361 * C1059 - C29390 * C1067) * C214 +
            (C13361 * C1357 - C29390 * C1363) * C29499) *
               C13358 +
           ((C13361 * C2553 - C29390 * C2556) * C214 +
            (C13361 * C2889 - C29390 * C2892) * C29499) *
               C13359 +
           ((C13361 * C5929 - C29390 * C5931) * C214 +
            (C13361 * C6377 - C29390 * C6379) * C29499) *
               C13360) *
              C1055 +
          (((C29390 * C1069 - C13361 * C1060) * C214 +
            (C29390 * C1366 - C13361 * C1360) * C29499) *
               C13358 +
           ((C29390 * C4144 - C13361 * C4142) * C214 +
            (C29390 * C4468 - C13361 * C4466) * C29499) *
               C13359 +
           ((C29390 * C14137 - C13361 * C14136) * C214 +
            (C29390 * C14377 - C13361 * C14376) * C29499) *
               C13360) *
              C1056) *
         C29425 * C29413) /
            (p * q * std::sqrt(p + q));
    d2eezy[22] +=
        (-std::pow(Pi, 2.5) *
         (((C13358 * C152 - C13401 * C93 + C13359 * C678 - C13402 * C618 +
            C13360 * C681 - C13403 * C619) *
               C214 +
           (C13358 * C491 - C13401 * C443 + C13359 * C966 - C13402 * C916 +
            C13360 * C969 - C13403 * C919) *
               C29499) *
              C29390 * C29439 * C612 +
          ((C13401 * C618 - C13358 * C678 + C13402 * C619 - C13359 * C681 +
            C13403 * C3569 - C13360 * C3655) *
               C214 +
           (C13401 * C916 - C13358 * C966 + C13402 * C919 - C13359 * C969 +
            C13403 * C3955 - C13360 * C4017) *
               C29499) *
              C29390 * C29439 * C613 +
          ((C13358 * C681 - C13401 * C619 + C13359 * C3655 - C13402 * C3569 +
            C13360 * C13777 - C13403 * C13711) *
               C214 +
           (C13358 * C969 - C13401 * C919 + C13359 * C4017 - C13402 * C3955 +
            C13360 * C14051 - C13403 * C14001) *
               C29499) *
              C29390 * C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) * (((C13358 * C152 - C13401 * C93 + C13359 * C678 -
                                C13402 * C618 + C13360 * C681 - C13403 * C619) *
                                   C214 +
                               (C13358 * C491 - C13401 * C443 + C13359 * C966 -
                                C13402 * C916 + C13360 * C969 - C13403 * C919) *
                                   C29499) *
                                  C29390 * C29439 * C29425 * C84 +
                              ((C13401 * C94 - C13358 * C153 + C13402 * C617 -
                                C13359 * C679 + C13403 * C620 - C13360 * C682) *
                                   C214 +
                               (C13401 * C444 - C13358 * C492 + C13402 * C917 -
                                C13359 * C967 + C13403 * C920 - C13360 * C970) *
                                   C29499) *
                                  C29390 * C29439 * C29425 * C85 +
                              ((C13358 * C154 - C13401 * C95 + C13359 * C680 -
                                C13402 * C616 + C13360 * C683 - C13403 * C621) *
                                   C214 +
                               (C13358 * C493 - C13401 * C445 + C13359 * C968 -
                                C13402 * C918 + C13360 * C971 - C13403 * C921) *
                                   C29499) *
                                  C29390 * C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C13358 * C152 - C13401 * C93 + C13359 * C678 - C13402 * C618 +
            C13360 * C681 - C13403 * C619) *
               C214 +
           (C13358 * C491 - C13401 * C443 + C13359 * C966 - C13402 * C916 +
            C13360 * C969 - C13403 * C919) *
               C29499) *
              C29390 * C1054 +
          ((C13401 * C1059 - C13358 * C1119 + C13402 * C2553 - C13359 * C2615 +
            C13403 * C5929 - C13360 * C6017) *
               C214 +
           (C13401 * C1357 - C13358 * C1407 + C13402 * C2889 - C13359 * C2945 +
            C13403 * C6377 - C13360 * C6451) *
               C29499) *
              C29390 * C1055 +
          ((C13358 * C1122 - C13401 * C1060 + C13359 * C4200 - C13402 * C4142 +
            C13360 * C14178 - C13403 * C14136) *
               C214 +
           (C13358 * C1410 - C13401 * C1360 + C13359 * C4520 - C13402 * C4466 +
            C13360 * C14416 - C13403 * C14376) *
               C29499) *
              C29390 * C1056) *
         C29425 * C29413) /
            (p * q * std::sqrt(p + q));
    d2eezz[22] +=
        (-std::pow(Pi, 2.5) *
         (((C214 * C215 - C544 * C93 - C214 * C443 + C29499 * C545) * C13358 +
           C4090 * C13359 + C4092 * C13360) *
              C29390 * C29439 * C612 -
          (C14098 * C13360 + C4092 * C13359 + C4090 * C13358) * C29390 *
              C29439 * C613 +
          (C4092 * C13358 + C14098 * C13359 +
           (C214 * C13817 - C544 * C13711 - C214 * C14001 + C29499 * C14090) *
               C13360) *
              C29390 * C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C214 * C215 - C544 * C93 - C214 * C443 + C29499 * C545) * C13358 +
           C4090 * C13359 + C4092 * C13360) *
              C29390 * C29439 * C29425 * C84 -
          (C4091 * C13360 + C1979 * C13359 + C569 * C13358) * C29390 * C29439 *
              C29425 * C85 +
          (C570 * C13358 + C1978 * C13359 +
           (C214 * C733 - C544 * C621 - C214 * C921 + C29499 * C1015) *
               C13360) *
              C29390 * C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C214 * C215 - C544 * C93 - C214 * C443 + C29499 * C545) * C13358 +
           C4090 * C13359 + C4092 * C13360) *
              C29390 * C1054 -
          ((C214 * C6087 - C544 * C5929 - C214 * C6377 + C29499 * C6519) *
               C13360 +
           C6528 * C13359 +
           (C214 * C1169 - C544 * C1059 - C214 * C1357 + C29499 * C1453) *
               C13358) *
              C29390 * C1055 +
          ((C214 * C1172 - C544 * C1060 - C214 * C1360 + C29499 * C1454) *
               C13358 +
           (C214 * C4254 - C544 * C4142 - C214 * C4466 + C29499 * C4572) *
               C13359 +
           (C214 * C14218 - C544 * C14136 - C214 * C14376 + C29499 * C14455) *
               C13360) *
              C29390 * C1056) *
         C29425 * C29413) /
            (p * q * std::sqrt(p + q));
    d2eexx[23] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C13361 * C98 - C13362 * C93 - C13361 * C99 + C29390 * C108) *
                C29499 * C13358 +
            C13737 * C13359 + C13738 * C13360) *
               C2031 -
           ((C13361 * C5931 - C13362 * C5929 - C13361 * C5932 +
             C29390 * C5935) *
                C29499 * C13360 +
            (C13361 * C2556 - C13362 * C2553 - C13361 * C2557 +
             C29390 * C2562) *
                C29499 * C13359 +
            (C13361 * C1067 - C13362 * C1059 - C13361 * C1068 +
             C29390 * C1077) *
                C29499 * C13358) *
               C2032) *
              C29425 * C1509 +
          (((C13361 * C1065 - C13362 * C1058 - C13361 * C1066 +
             C29390 * C1076) *
                C29499 * C13358 +
            (C13361 * C2558 - C13362 * C2554 - C13361 * C2559 +
             C29390 * C2563) *
                C29499 * C13359 +
            (C13361 * C5933 - C13362 * C5930 - C13361 * C5934 +
             C29390 * C5936) *
                C29499 * C13360) *
               C2032 -
           (C14522 * C13360 + C14521 * C13359 +
            (C13361 * C100 - C13362 * C94 - C13361 * C101 + C29390 * C109) *
                C29499 * C13358) *
               C2031) *
              C29425 * C1510)) /
        (p * q * std::sqrt(p + q));
    d2eexy[23] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C13358 * C152 - C13401 * C93 + C13359 * C678 -
                       C13402 * C618 + C13360 * C681 - C13403 * C619) *
                          C13361 +
                      (C13358 * C157 - C13401 * C99 + C13359 * C684 -
                       C13402 * C627 + C13360 * C687 - C13403 * C629) *
                          C29390) *
                         C29499 * C2031 +
                     ((C13401 * C1059 - C13358 * C1119 + C13402 * C2553 -
                       C13359 * C2615 + C13403 * C5929 - C13360 * C6017) *
                          C13361 +
                      (C13401 * C1068 - C13358 * C1125 + C13402 * C2557 -
                       C13359 * C2618 + C13403 * C5932 - C13360 * C6019) *
                          C29390) *
                         C29499 * C2032) *
                        C29425 * C1509 +
                    (((C13401 * C94 - C13358 * C153 + C13402 * C617 -
                       C13359 * C679 + C13403 * C620 - C13360 * C682) *
                          C13361 +
                      (C13401 * C101 - C13358 * C158 + C13402 * C625 -
                       C13359 * C685 + C13403 * C631 - C13360 * C688) *
                          C29390) *
                         C29499 * C2031 +
                     ((C13358 * C1120 - C13401 * C1058 + C13359 * C2616 -
                       C13402 * C2554 + C13360 * C6018 - C13403 * C5930) *
                          C13361 +
                      (C13358 * C1126 - C13401 * C1066 + C13359 * C2619 -
                       C13402 * C2559 + C13360 * C6020 - C13403 * C5934) *
                          C29390) *
                         C29499 * C2032) *
                        C29425 * C1510)) /
                  (p * q * std::sqrt(p + q));
    d2eexz[23] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C29499 * C215 - C214 * C93) * C13361 +
             (C29499 * C220 - C214 * C99) * C29390) *
                C13358 +
            ((C3714 - C3715) * C13361 + (C3716 - C3717) * C29390) * C13359 +
            C13828 * C13360) *
               C2031 +
           (((C214 * C1059 - C29499 * C1169) * C13361 +
             (C214 * C1068 - C29499 * C1175) * C29390) *
                C13358 +
            ((C6092 - C6093) * C13361 + (C6094 - C6095) * C29390) * C13359 +
            ((C214 * C5929 - C29499 * C6087) * C13361 +
             (C214 * C5932 - C29499 * C6089) * C29390) *
                C13360) *
               C2032) *
              C29425 * C1509 +
          ((((C227 - C226) * C13361 + (C229 - C228) * C29390) * C13358 +
            (C4797 * C13361 + C4798 * C29390) * C13359 +
            ((C3722 - C3723) * C13361 + (C3724 - C3725) * C29390) * C13360) *
               C2031 +
           (((C2151 - C2150) * C13361 + (C2153 - C2152) * C29390) * C13358 +
            ((C5436 - C5435) * C13361 + (C5438 - C5437) * C29390) * C13359 +
            ((C29499 * C6088 - C214 * C5930) * C13361 +
             (C29499 * C6090 - C214 * C5934) * C29390) *
                C13360) *
               C2032) *
              C29425 * C1510)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[23] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C29390 * C98 - C13361 * C93) * C13401 +
                      (C29390 * C282 - C13361 * C277) * C13358 +
                      (C13869 - C13870) * C13402 + (C13871 - C13872) * C13359 +
                      C13881 * C13403 + C13882 * C13360) *
                         C29499 * C2031 +
                     ((C13361 * C1059 - C29390 * C1067) * C13401 +
                      (C13361 * C1219 - C29390 * C1225) * C13358 +
                      (C13361 * C2553 - C29390 * C2556) * C13402 +
                      (C13361 * C2727 - C29390 * C2730) * C13359 +
                      (C13361 * C5929 - C29390 * C5931) * C13403 +
                      (C13361 * C6161 - C29390 * C6163) * C13360) *
                         C29499 * C2032) *
                        C29425 * C1509 +
                    (((C13361 * C94 - C29390 * C100) * C13401 +
                      (C13361 * C278 - C29390 * C283) * C13358 +
                      (C14673 - C14674) * C13402 + (C14675 - C14676) * C13359 +
                      (C14677 - C14678) * C13403 + (C14679 - C14680) * C13360) *
                         C29499 * C2031 +
                     ((C29390 * C1065 - C13361 * C1058) * C13401 +
                      (C29390 * C1226 - C13361 * C1220) * C13358 +
                      (C29390 * C2558 - C13361 * C2554) * C13402 +
                      (C29390 * C2731 - C13361 * C2728) * C13359 +
                      (C29390 * C5933 - C13361 * C5930) * C13403 +
                      (C29390 * C6164 - C13361 * C6162) * C13360) *
                         C29499 * C2032) *
                        C29425 * C1510)) /
                  (p * q * std::sqrt(p + q));
    d2eeyy[23] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C13401 * C152 - C13518 * C93 - C13401 * C277 + C13358 * C326 +
            C13402 * C678 - C13519 * C618 - C13402 * C778 + C13359 * C830 +
            C13403 * C681 - C13520 * C619 - C13403 * C781 + C13360 * C831) *
               C29390 * C29499 * C2031 -
           (C13403 * C6017 - C13520 * C5929 - C13403 * C6161 + C13360 * C6239 +
            C13402 * C2615 - C13519 * C2553 - C13402 * C2727 + C13359 * C2783 +
            C13401 * C1119 - C13518 * C1059 - C13401 * C1219 + C13358 * C1271) *
               C29390 * C29499 * C2032) *
              C29425 * C1509 +
          ((C13401 * C1120 - C13518 * C1058 - C13401 * C1220 + C13358 * C1270 +
            C13402 * C2616 - C13519 * C2554 - C13402 * C2728 + C13359 * C2784 +
            C13403 * C6018 - C13520 * C5930 - C13403 * C6162 + C13360 * C6240) *
               C29390 * C29499 * C2032 -
           (C13403 * C682 - C13520 * C620 - C13403 * C782 + C13360 * C832 +
            C13402 * C679 - C13519 * C617 - C13402 * C779 + C13359 * C829 +
            C13401 * C153 - C13518 * C94 - C13401 * C278 + C13358 * C327) *
               C29390 * C29499 * C2031) *
              C29425 * C1510)) /
        (p * q * std::sqrt(p + q));
    d2eeyz[23] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C29499 * C215 - C214 * C93) * C13401 +
            (C29499 * C390 - C214 * C277) * C13358 + (C3714 - C3715) * C13402 +
            (C3900 - C3901) * C13359 + C13820 * C13403 + C13961 * C13360) *
               C29390 * C2031 +
           ((C214 * C1059 - C29499 * C1169) * C13401 +
            (C214 * C1219 - C29499 * C1313) * C13358 +
            (C6092 - C6093) * C13402 + (C6310 - C6311) * C13359 +
            (C214 * C5929 - C29499 * C6087) * C13403 +
            (C214 * C6161 - C29499 * C6307) * C13360) *
               C29390 * C2032) *
              C29425 * C1509 +
          (((C227 - C226) * C13401 + (C397 - C396) * C13358 + C4797 * C13402 +
            C5020 * C13359 + (C3722 - C3723) * C13403 +
            (C3904 - C3905) * C13360) *
               C29390 * C2031 +
           ((C2151 - C2150) * C13401 + (C2327 - C2326) * C13358 +
            (C5436 - C5435) * C13402 + (C5652 - C5651) * C13359 +
            (C29499 * C6088 - C214 * C5930) * C13403 +
            (C29499 * C6308 - C214 * C6162) * C13360) *
               C29390 * C2032) *
              C29425 * C1510)) /
        (p * q * std::sqrt(p + q));
    d2eezx[23] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C29390 * C98 - C13361 * C93) * C214 +
             (C29390 * C448 - C13361 * C443) * C29499) *
                C13358 +
            ((C13869 - C13870) * C214 + (C14004 - C14005) * C29499) * C13359 +
            C14013 * C13360) *
               C2031 +
           (((C13361 * C1059 - C29390 * C1067) * C214 +
             (C13361 * C1357 - C29390 * C1363) * C29499) *
                C13358 +
            ((C13361 * C2553 - C29390 * C2556) * C214 +
             (C13361 * C2889 - C29390 * C2892) * C29499) *
                C13359 +
            ((C13361 * C5929 - C29390 * C5931) * C214 +
             (C13361 * C6377 - C29390 * C6379) * C29499) *
                C13360) *
               C2032) *
              C29425 * C1509 +
          ((((C13361 * C94 - C29390 * C100) * C214 +
             (C13361 * C444 - C29390 * C449) * C29499) *
                C13358 +
            ((C14673 - C14674) * C214 + (C14831 - C14832) * C29499) * C13359 +
            ((C14677 - C14678) * C214 + (C14833 - C14834) * C29499) * C13360) *
               C2031 +
           (((C29390 * C1065 - C13361 * C1058) * C214 +
             (C29390 * C1364 - C13361 * C1358) * C29499) *
                C13358 +
            ((C29390 * C2558 - C13361 * C2554) * C214 +
             (C29390 * C2893 - C13361 * C2890) * C29499) *
                C13359 +
            ((C29390 * C5933 - C13361 * C5930) * C214 +
             (C29390 * C6380 - C13361 * C6378) * C29499) *
                C13360) *
               C2032) *
              C29425 * C1510)) /
        (p * q * std::sqrt(p + q));
    d2eezy[23] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C13358 * C152 - C13401 * C93 + C13359 * C678 -
                       C13402 * C618 + C13360 * C681 - C13403 * C619) *
                          C214 +
                      (C13358 * C491 - C13401 * C443 + C13359 * C966 -
                       C13402 * C916 + C13360 * C969 - C13403 * C919) *
                          C29499) *
                         C29390 * C2031 +
                     ((C13401 * C1059 - C13358 * C1119 + C13402 * C2553 -
                       C13359 * C2615 + C13403 * C5929 - C13360 * C6017) *
                          C214 +
                      (C13401 * C1357 - C13358 * C1407 + C13402 * C2889 -
                       C13359 * C2945 + C13403 * C6377 - C13360 * C6451) *
                          C29499) *
                         C29390 * C2032) *
                        C29425 * C1509 +
                    (((C13401 * C94 - C13358 * C153 + C13402 * C617 -
                       C13359 * C679 + C13403 * C620 - C13360 * C682) *
                          C214 +
                      (C13401 * C444 - C13358 * C492 + C13402 * C917 -
                       C13359 * C967 + C13403 * C920 - C13360 * C970) *
                          C29499) *
                         C29390 * C2031 +
                     ((C13358 * C1120 - C13401 * C1058 + C13359 * C2616 -
                       C13402 * C2554 + C13360 * C6018 - C13403 * C5930) *
                          C214 +
                      (C13358 * C1408 - C13401 * C1358 + C13359 * C2946 -
                       C13402 * C2890 + C13360 * C6452 - C13403 * C6378) *
                          C29499) *
                         C29390 * C2032) *
                        C29425 * C1510)) /
                  (p * q * std::sqrt(p + q));
    d2eezz[23] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C214 * C215 - C544 * C93 - C214 * C443 + C29499 * C545) * C13358 +
            C4090 * C13359 + C4092 * C13360) *
               C29390 * C2031 -
           ((C214 * C6087 - C544 * C5929 - C214 * C6377 + C29499 * C6519) *
                C13360 +
            C6528 * C13359 +
            (C214 * C1169 - C544 * C1059 - C214 * C1357 + C29499 * C1453) *
                C13358) *
               C29390 * C2032) *
              C29425 * C1509 +
          ((C2501 * C13358 + C5862 * C13359 +
            (C214 * C6088 - C544 * C5930 - C214 * C6378 + C29499 * C6520) *
                C13360) *
               C29390 * C2032 -
           (C4091 * C13360 + C1979 * C13359 + C569 * C13358) * C29390 * C2031) *
              C29425 * C1510)) /
        (p * q * std::sqrt(p + q));
    d2eexx[24] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C13361 * C98 - C13362 * C93 - C13361 * C99 + C29390 * C108) *
               C29499 * C13358 +
           (C13361 * C626 - C13362 * C618 - C13361 * C627 + C29390 * C636) *
               C29499 * C13359 +
           (C13361 * C628 - C13362 * C619 - C13361 * C629 + C29390 * C637) *
               C29499 * C13360) *
              C29439 * C29425 * C84 -
          ((C13361 * C630 - C13362 * C620 - C13361 * C631 + C29390 * C638) *
               C29499 * C13360 +
           (C13361 * C624 - C13362 * C617 - C13361 * C625 + C29390 * C635) *
               C29499 * C13359 +
           (C13361 * C100 - C13362 * C94 - C13361 * C101 + C29390 * C109) *
               C29499 * C13358) *
              C29439 * C29425 * C85 +
          ((C13361 * C102 - C13362 * C95 - C13361 * C103 + C29390 * C110) *
               C29499 * C13358 +
           (C13361 * C622 - C13362 * C616 - C13361 * C623 + C29390 * C634) *
               C29499 * C13359 +
           (C13361 * C632 - C13362 * C621 - C13361 * C633 + C29390 * C639) *
               C29499 * C13360) *
              C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C13361 * C98 - C13362 * C93 - C13361 * C99 + C29390 * C108) *
               C29499 * C13358 +
           C13737 * C13359 + C13738 * C13360) *
              C29439 * C612 -
          (C13739 * C13360 + C13738 * C13359 + C13737 * C13358) * C29439 *
              C613 +
          (C13738 * C13358 + C13739 * C13359 +
           (C13361 * C13712 - C13362 * C13711 - C13361 * C13713 +
            C29390 * C13714) *
               C29499 * C13360) *
              C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q));
    d2eexy[24] += (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C13358 * C152 - C13401 * C93 + C13359 * C678 -
                      C13402 * C618 + C13360 * C681 - C13403 * C619) *
                         C13361 +
                     (C13358 * C157 - C13401 * C99 + C13359 * C684 -
                      C13402 * C627 + C13360 * C687 - C13403 * C629) *
                         C29390) *
                        C29499 * C29439 * C29425 * C84 +
                    ((C13401 * C94 - C13358 * C153 + C13402 * C617 -
                      C13359 * C679 + C13403 * C620 - C13360 * C682) *
                         C13361 +
                     (C13401 * C101 - C13358 * C158 + C13402 * C625 -
                      C13359 * C685 + C13403 * C631 - C13360 * C688) *
                         C29390) *
                        C29499 * C29439 * C29425 * C85 +
                    ((C13358 * C154 - C13401 * C95 + C13359 * C680 -
                      C13402 * C616 + C13360 * C683 - C13403 * C621) *
                         C13361 +
                     (C13358 * C159 - C13401 * C103 + C13359 * C686 -
                      C13402 * C623 + C13360 * C689 - C13403 * C633) *
                         C29390) *
                        C29499 * C29439 * C29425 * C86)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C13358 * C152 - C13401 * C93 + C13359 * C678 -
                      C13402 * C618 + C13360 * C681 - C13403 * C619) *
                         C13361 +
                     (C13358 * C157 - C13401 * C99 + C13359 * C684 -
                      C13402 * C627 + C13360 * C687 - C13403 * C629) *
                         C29390) *
                        C29499 * C29439 * C612 +
                    ((C13401 * C618 - C13358 * C678 + C13402 * C619 -
                      C13359 * C681 + C13403 * C3569 - C13360 * C3655) *
                         C13361 +
                     (C13401 * C627 - C13358 * C684 + C13402 * C629 -
                      C13359 * C687 + C13403 * C3572 - C13360 * C3657) *
                         C29390) *
                        C29499 * C29439 * C613 +
                    ((C13358 * C681 - C13401 * C619 + C13359 * C3655 -
                      C13402 * C3569 + C13360 * C13777 - C13403 * C13711) *
                         C13361 +
                     (C13358 * C687 - C13401 * C629 + C13359 * C3657 -
                      C13402 * C3572 + C13360 * C13778 - C13403 * C13713) *
                         C29390) *
                        C29499 * C29439 * C614) *
                   C29413) /
                      (p * q * std::sqrt(p + q));
    d2eexz[24] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C29499 * C215 - C214 * C93) * C13361 +
            (C29499 * C220 - C214 * C99) * C29390) *
               C13358 +
           ((C3714 - C3715) * C13361 + (C3716 - C3717) * C29390) * C13359 +
           ((C3719 - C3718) * C13361 + (C3721 - C3720) * C29390) * C13360) *
              C29439 * C29425 * C84 +
          (((C227 - C226) * C13361 + (C229 - C228) * C29390) * C13358 +
           (C4797 * C13361 + C4798 * C29390) * C13359 +
           ((C3722 - C3723) * C13361 + (C3724 - C3725) * C29390) * C13360) *
              C29439 * C29425 * C85 +
          ((C238 * C13361 + C239 * C29390) * C13358 +
           ((C1633 - C1632) * C13361 + (C1635 - C1634) * C29390) * C13359 +
           ((C29499 * C733 - C214 * C621) * C13361 +
            (C29499 * C739 - C214 * C633) * C29390) *
               C13360) *
              C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C29499 * C215 - C214 * C93) * C13361 +
            (C29499 * C220 - C214 * C99) * C29390) *
               C13358 +
           ((C3714 - C3715) * C13361 + (C3716 - C3717) * C29390) * C13359 +
           C13828 * C13360) *
              C29439 * C612 +
          (((C3715 - C3714) * C13361 + (C3717 - C3716) * C29390) * C13358 +
           ((C3718 - C3719) * C13361 + (C3720 - C3721) * C29390) * C13359 +
           ((C13822 - C13823) * C13361 + (C13824 - C13825) * C29390) * C13360) *
              C29439 * C613 +
          (C13828 * C13358 +
           ((C13823 - C13822) * C13361 + (C13825 - C13824) * C29390) * C13359 +
           ((C29499 * C13817 - C214 * C13711) * C13361 +
            (C29499 * C13818 - C214 * C13713) * C29390) *
               C13360) *
              C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q));
    d2eeyx[24] += (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C29390 * C98 - C13361 * C93) * C13401 +
                     (C29390 * C282 - C13361 * C277) * C13358 +
                     (C29390 * C626 - C13361 * C618) * C13402 +
                     (C29390 * C784 - C13361 * C778) * C13359 +
                     (C29390 * C628 - C13361 * C619) * C13403 +
                     (C29390 * C787 - C13361 * C781) * C13360) *
                        C29499 * C29439 * C29425 * C84 +
                    ((C13361 * C94 - C29390 * C100) * C13401 +
                     (C13361 * C278 - C29390 * C283) * C13358 +
                     (C13361 * C617 - C29390 * C624) * C13402 +
                     (C13361 * C779 - C29390 * C785) * C13359 +
                     (C13361 * C620 - C29390 * C630) * C13403 +
                     (C13361 * C782 - C29390 * C788) * C13360) *
                        C29499 * C29439 * C29425 * C85 +
                    ((C29390 * C102 - C13361 * C95) * C13401 +
                     (C29390 * C284 - C13361 * C279) * C13358 +
                     (C29390 * C622 - C13361 * C616) * C13402 +
                     (C29390 * C786 - C13361 * C780) * C13359 +
                     (C29390 * C632 - C13361 * C621) * C13403 +
                     (C29390 * C789 - C13361 * C783) * C13360) *
                        C29499 * C29439 * C29425 * C86)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C29390 * C98 - C13361 * C93) * C13401 +
                     (C29390 * C282 - C13361 * C277) * C13358 +
                     (C13869 - C13870) * C13402 + (C13871 - C13872) * C13359 +
                     C13881 * C13403 + C13882 * C13360) *
                        C29499 * C29439 * C612 +
                    ((C13870 - C13869) * C13401 + (C13872 - C13871) * C13358 +
                     (C13874 - C13873) * C13402 + (C13876 - C13875) * C13359 +
                     (C13877 - C13878) * C13403 + (C13879 - C13880) * C13360) *
                        C29499 * C29439 * C613 +
                    (C13881 * C13401 + C13882 * C13358 +
                     (C13878 - C13877) * C13402 + (C13880 - C13879) * C13359 +
                     (C29390 * C13712 - C13361 * C13711) * C13403 +
                     (C29390 * C13867 - C13361 * C13866) * C13360) *
                        C29499 * C29439 * C614) *
                   C29413) /
                      (p * q * std::sqrt(p + q));
    d2eeyy[24] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((C13401 * C152 - C13518 * C93 - C13401 * C277 + C13358 * C326 +
           C13402 * C678 - C13519 * C618 - C13402 * C778 + C13359 * C830 +
           C13403 * C681 - C13520 * C619 - C13403 * C781 + C13360 * C831) *
              C29390 * C29499 * C29439 * C29425 * C84 -
          (C13403 * C682 - C13520 * C620 - C13403 * C782 + C13360 * C832 +
           C13402 * C679 - C13519 * C617 - C13402 * C779 + C13359 * C829 +
           C13401 * C153 - C13518 * C94 - C13401 * C278 + C13358 * C327) *
              C29390 * C29499 * C29439 * C29425 * C85 +
          (C13401 * C154 - C13518 * C95 - C13401 * C279 + C13358 * C328 +
           C13402 * C680 - C13519 * C616 - C13402 * C780 + C13359 * C828 +
           C13403 * C683 - C13520 * C621 - C13403 * C783 + C13360 * C833) *
              C29390 * C29499 * C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((C13401 * C152 - C13518 * C93 - C13401 * C277 + C13358 * C326 +
           C13402 * C678 - C13519 * C618 - C13402 * C778 + C13359 * C830 +
           C13403 * C681 - C13520 * C619 - C13403 * C781 + C13360 * C831) *
              C29390 * C29499 * C29439 * C612 -
          (C13403 * C3655 - C13520 * C3569 - C13403 * C3775 + C13360 * C3845 +
           C13402 * C681 - C13519 * C619 - C13402 * C781 + C13359 * C831 +
           C13401 * C678 - C13518 * C618 - C13401 * C778 + C13358 * C830) *
              C29390 * C29499 * C29439 * C613 +
          (C13401 * C681 - C13518 * C619 - C13401 * C781 + C13358 * C831 +
           C13402 * C3655 - C13519 * C3569 - C13402 * C3775 + C13359 * C3845 +
           C13403 * C13777 - C13520 * C13711 - C13403 * C13866 +
           C13360 * C13920) *
              C29390 * C29499 * C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q));
    d2eeyz[24] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C29499 * C215 - C214 * C93) * C13401 +
           (C29499 * C390 - C214 * C277) * C13358 + (C3714 - C3715) * C13402 +
           (C3900 - C3901) * C13359 + (C3719 - C3718) * C13403 +
           (C3903 - C3902) * C13360) *
              C29390 * C29439 * C29425 * C84 +
          ((C227 - C226) * C13401 + (C397 - C396) * C13358 + C4797 * C13402 +
           C5020 * C13359 + (C3722 - C3723) * C13403 +
           (C3904 - C3905) * C13360) *
              C29390 * C29439 * C29425 * C85 +
          (C238 * C13401 + C403 * C13358 + (C1633 - C1632) * C13402 +
           (C1807 - C1806) * C13359 + (C29499 * C733 - C214 * C621) * C13403 +
           (C29499 * C877 - C214 * C783) * C13360) *
              C29390 * C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C29499 * C215 - C214 * C93) * C13401 +
           (C29499 * C390 - C214 * C277) * C13358 + (C3714 - C3715) * C13402 +
           (C3900 - C3901) * C13359 + C13820 * C13403 + C13961 * C13360) *
              C29390 * C29439 * C612 +
          ((C3715 - C3714) * C13401 + (C3901 - C3900) * C13358 +
           (C3718 - C3719) * C13402 + (C3902 - C3903) * C13359 +
           (C13822 - C13823) * C13403 + (C13962 - C13963) * C13360) *
              C29390 * C29439 * C613 +
          (C13820 * C13401 + C13961 * C13358 + (C13823 - C13822) * C13402 +
           (C13963 - C13962) * C13359 +
           (C29499 * C13817 - C214 * C13711) * C13403 +
           (C29499 * C13959 - C214 * C13866) * C13360) *
              C29390 * C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q));
    d2eezx[24] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C29390 * C98 - C13361 * C93) * C214 +
            (C29390 * C448 - C13361 * C443) * C29499) *
               C13358 +
           ((C29390 * C626 - C13361 * C618) * C214 +
            (C29390 * C922 - C13361 * C916) * C29499) *
               C13359 +
           ((C29390 * C628 - C13361 * C619) * C214 +
            (C29390 * C925 - C13361 * C919) * C29499) *
               C13360) *
              C29439 * C29425 * C84 +
          (((C13361 * C94 - C29390 * C100) * C214 +
            (C13361 * C444 - C29390 * C449) * C29499) *
               C13358 +
           ((C13361 * C617 - C29390 * C624) * C214 +
            (C13361 * C917 - C29390 * C923) * C29499) *
               C13359 +
           ((C13361 * C620 - C29390 * C630) * C214 +
            (C13361 * C920 - C29390 * C926) * C29499) *
               C13360) *
              C29439 * C29425 * C85 +
          (((C29390 * C102 - C13361 * C95) * C214 +
            (C29390 * C450 - C13361 * C445) * C29499) *
               C13358 +
           ((C29390 * C622 - C13361 * C616) * C214 +
            (C29390 * C924 - C13361 * C918) * C29499) *
               C13359 +
           ((C29390 * C632 - C13361 * C621) * C214 +
            (C29390 * C927 - C13361 * C921) * C29499) *
               C13360) *
              C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C29390 * C98 - C13361 * C93) * C214 +
            (C29390 * C448 - C13361 * C443) * C29499) *
               C13358 +
           ((C13869 - C13870) * C214 + (C14004 - C14005) * C29499) * C13359 +
           C14013 * C13360) *
              C29439 * C612 +
          (((C13870 - C13869) * C214 + (C14005 - C14004) * C29499) * C13358 +
           ((C13874 - C13873) * C214 + (C14008 - C14007) * C29499) * C13359 +
           ((C13877 - C13878) * C214 + (C14009 - C14010) * C29499) * C13360) *
              C29439 * C613 +
          (C14013 * C13358 +
           ((C13878 - C13877) * C214 + (C14010 - C14009) * C29499) * C13359 +
           ((C29390 * C13712 - C13361 * C13711) * C214 +
            (C29390 * C14002 - C13361 * C14001) * C29499) *
               C13360) *
              C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q));
    d2eezy[24] += (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C13358 * C152 - C13401 * C93 + C13359 * C678 -
                      C13402 * C618 + C13360 * C681 - C13403 * C619) *
                         C214 +
                     (C13358 * C491 - C13401 * C443 + C13359 * C966 -
                      C13402 * C916 + C13360 * C969 - C13403 * C919) *
                         C29499) *
                        C29390 * C29439 * C29425 * C84 +
                    ((C13401 * C94 - C13358 * C153 + C13402 * C617 -
                      C13359 * C679 + C13403 * C620 - C13360 * C682) *
                         C214 +
                     (C13401 * C444 - C13358 * C492 + C13402 * C917 -
                      C13359 * C967 + C13403 * C920 - C13360 * C970) *
                         C29499) *
                        C29390 * C29439 * C29425 * C85 +
                    ((C13358 * C154 - C13401 * C95 + C13359 * C680 -
                      C13402 * C616 + C13360 * C683 - C13403 * C621) *
                         C214 +
                     (C13358 * C493 - C13401 * C445 + C13359 * C968 -
                      C13402 * C918 + C13360 * C971 - C13403 * C921) *
                         C29499) *
                        C29390 * C29439 * C29425 * C86)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C13358 * C152 - C13401 * C93 + C13359 * C678 -
                      C13402 * C618 + C13360 * C681 - C13403 * C619) *
                         C214 +
                     (C13358 * C491 - C13401 * C443 + C13359 * C966 -
                      C13402 * C916 + C13360 * C969 - C13403 * C919) *
                         C29499) *
                        C29390 * C29439 * C612 +
                    ((C13401 * C618 - C13358 * C678 + C13402 * C619 -
                      C13359 * C681 + C13403 * C3569 - C13360 * C3655) *
                         C214 +
                     (C13401 * C916 - C13358 * C966 + C13402 * C919 -
                      C13359 * C969 + C13403 * C3955 - C13360 * C4017) *
                         C29499) *
                        C29390 * C29439 * C613 +
                    ((C13358 * C681 - C13401 * C619 + C13359 * C3655 -
                      C13402 * C3569 + C13360 * C13777 - C13403 * C13711) *
                         C214 +
                     (C13358 * C969 - C13401 * C919 + C13359 * C4017 -
                      C13402 * C3955 + C13360 * C14051 - C13403 * C14001) *
                         C29499) *
                        C29390 * C29439 * C614) *
                   C29413) /
                      (p * q * std::sqrt(p + q));
    d2eezz[24] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C214 * C215 - C544 * C93 - C214 * C443 + C29499 * C545) * C13358 +
           C4090 * C13359 + C4092 * C13360) *
              C29390 * C29439 * C29425 * C84 -
          (C4091 * C13360 + C1979 * C13359 + C569 * C13358) * C29390 * C29439 *
              C29425 * C85 +
          (C570 * C13358 + C1978 * C13359 +
           (C214 * C733 - C544 * C621 - C214 * C921 + C29499 * C1015) *
               C13360) *
              C29390 * C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C214 * C215 - C544 * C93 - C214 * C443 + C29499 * C545) * C13358 +
           C4090 * C13359 + C4092 * C13360) *
              C29390 * C29439 * C612 -
          (C14098 * C13360 + C4092 * C13359 + C4090 * C13358) * C29390 *
              C29439 * C613 +
          (C4092 * C13358 + C14098 * C13359 +
           (C214 * C13817 - C544 * C13711 - C214 * C14001 + C29499 * C14090) *
               C13360) *
              C29390 * C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q));
    d2eexx[25] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C13361 * C98 - C13362 * C93 - C13361 * C99 + C29390 * C108) *
                 C6578 +
             C16920 * C29557) *
                C10011 +
            (C16392 + C16393) * C29555) *
               C29439 * C1507 -
           ((C16394 + C16395) * C29555 + (C16393 + C16392) * C10011) * C29439 *
               C1508) *
              C1509 +
          (((C17471 + C17479) * C10011 +
            (C14520 * C6578 + (C13361 * C5933 - C13362 * C5930 -
                               C13361 * C5934 + C29390 * C5936) *
                                  C29557) *
                C29555) *
               C29439 * C1508 -
           ((C17479 + C17471) * C29555 +
            ((C13361 * C1065 - C13362 * C1058 - C13361 * C1066 +
              C29390 * C1076) *
                 C29557 +
             (C13361 * C100 - C13362 * C94 - C13361 * C101 + C29390 * C109) *
                 C6578) *
                C10011) *
               C29439 * C1507) *
              C1510)) /
        (p * q * std::sqrt(p + q));
    d2eexy[25] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C10011 * C152 - C10067 * C93 + C29555 * C678 - C10068 * C618) *
                 C13361 +
             (C10011 * C157 - C10067 * C99 + C29555 * C684 - C10068 * C627) *
                 C29390) *
                C6578 +
            ((C16975 - C16976 + C16977 - C16978) * C13361 +
             (C16979 - C16980 + C16981 - C16982) * C29390) *
                C29557) *
               C29439 * C1507 +
           (((C10067 * C618 - C10011 * C678 + C10068 * C619 - C29555 * C681) *
                 C13361 +
             (C10067 * C627 - C10011 * C684 + C10068 * C629 - C29555 * C687) *
                 C29390) *
                C6578 +
            ((C10067 * C2553 - C10011 * C2615 + C10068 * C5929 -
              C29555 * C6017) *
                 C13361 +
             (C10067 * C2557 - C10011 * C2618 + C10068 * C5932 -
              C29555 * C6019) *
                 C29390) *
                C29557) *
               C29439 * C1508) *
              C1509 +
          ((((C10071 - C10070 + C10073 - C10072) * C13361 +
             (C10075 - C10074 + C10077 - C10076) * C29390) *
                C6578 +
            ((C12210 - C12211 + C12212 - C12213) * C13361 +
             (C12214 - C12215 + C12216 - C12217) * C29390) *
                C29557) *
               C29439 * C1507 +
           (((C11577 - C11576 + C11579 - C11578) * C13361 +
             (C11581 - C11580 + C11583 - C11582) * C29390) *
                C6578 +
            ((C10011 * C2616 - C10067 * C2554 + C29555 * C6018 -
              C10068 * C5930) *
                 C13361 +
             (C10011 * C2619 - C10067 * C2559 + C29555 * C6020 -
              C10068 * C5934) *
                 C29390) *
                C29557) *
               C29439 * C1508) *
              C1510)) /
        (p * q * std::sqrt(p + q));
    d2eexz[25] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C6578 * C215 - C6680 * C93 + C29557 * C1169 - C6681 * C1059) *
                 C13361 +
             (C6578 * C220 - C6680 * C99 + C29557 * C1175 - C6681 * C1068) *
                 C29390) *
                C10011 +
            ((C16496 - C16497 + C16498 - C16499) * C13361 +
             (C16500 - C16501 + C16502 - C16503) * C29390) *
                C29555) *
               C29439 * C1507 +
           (((C16497 - C16496 + C16499 - C16498) * C13361 +
             (C16501 - C16500 + C16503 - C16502) * C29390) *
                C10011 +
            ((C16504 - C16505 + C16506 - C16507) * C13361 +
             (C16508 - C16509 + C16510 - C16511) * C29390) *
                C29555) *
               C29439 * C1508) *
              C1509 +
          ((((C6684 - C6683 + C6686 - C6685) * C13361 +
             (C6688 - C6687 + C6690 - C6689) * C29390) *
                C10011 +
            ((C8266 - C8267 + C8268 - C8269) * C13361 +
             (C8270 - C8271 + C8272 - C8273) * C29390) *
                C29555) *
               C29439 * C1507 +
           (((C8267 - C8266 + C8269 - C8268) * C13361 +
             (C8271 - C8270 + C8273 - C8272) * C29390) *
                C10011 +
            ((C6578 * C732 - C6680 * C620 + C29557 * C6088 - C6681 * C5930) *
                 C13361 +
             (C6578 * C738 - C6680 * C631 + C29557 * C6090 - C6681 * C5934) *
                 C29390) *
                C29555) *
               C29439 * C1508) *
              C1510)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[25] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C29390 * C98 - C13361 * C93) * C10067 +
             (C29390 * C282 - C13361 * C277) * C10011 +
             (C13869 - C13870) * C10068 + (C13871 - C13872) * C29555) *
                C6578 +
            ((C17095 - C17096) * C10067 + (C17097 - C17098) * C10011 +
             (C15616 - C15615) * C10068 + (C15618 - C15617) * C29555) *
                C29557) *
               C29439 * C1507 +
           (((C13870 - C13869) * C10067 + (C13872 - C13871) * C10011 +
             (C13874 - C13873) * C10068 + (C13876 - C13875) * C29555) *
                C6578 +
            ((C15615 - C15616) * C10067 + (C15617 - C15618) * C10011 +
             (C15619 - C15620) * C10068 + (C15621 - C15622) * C29555) *
                C29557) *
               C29439 * C1508) *
              C1509 +
          ((((C13361 * C94 - C29390 * C100) * C10067 +
             (C13361 * C278 - C29390 * C283) * C10011 +
             (C14673 - C14674) * C10068 + (C14675 - C14676) * C29555) *
                C6578 +
            ((C13361 * C1058 - C29390 * C1065) * C10067 +
             (C13361 * C1220 - C29390 * C1226) * C10011 +
             (C17678 - C17679) * C10068 + (C17680 - C17681) * C29555) *
                C29557) *
               C29439 * C1507 +
           (((C14674 - C14673) * C10067 + (C14676 - C14675) * C10011 +
             (C14678 - C14677) * C10068 + (C14680 - C14679) * C29555) *
                C6578 +
            ((C17679 - C17678) * C10067 + (C17681 - C17680) * C10011 +
             (C29390 * C5933 - C13361 * C5930) * C10068 +
             (C29390 * C6164 - C13361 * C6162) * C29555) *
                C29557) *
               C29439 * C1508) *
              C1510)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[25] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C10067 * C152 - C10235 * C93 - C10067 * C277 + C10011 * C326 +
             C10068 * C678 - C10236 * C618 - C10068 * C778 + C29555 * C830) *
                C29390 * C6578 +
            (C17182 + C17183) * C29390 * C29557) *
               C29439 * C1507 -
           ((C10068 * C6017 - C10236 * C5929 - C10068 * C6161 + C29555 * C6239 +
             C10067 * C2615 - C10235 * C2553 - C10067 * C2727 +
             C10011 * C2783) *
                C29390 * C29557 +
            (C10068 * C681 - C10236 * C619 - C10068 * C781 + C29555 * C831 +
             C10067 * C678 - C10235 * C618 - C10067 * C778 + C10011 * C830) *
                C29390 * C6578) *
               C29439 * C1508) *
              C1509 +
          (((C11803 + C11802) * C29390 * C6578 +
            (C10067 * C2616 - C10235 * C2554 - C10067 * C2728 + C10011 * C2784 +
             C10068 * C6018 - C10236 * C5930 - C10068 * C6162 +
             C29555 * C6240) *
                C29390 * C29557) *
               C29439 * C1508 -
           ((C12428 + C12429) * C29390 * C29557 +
            (C10263 + C10262) * C29390 * C6578) *
               C29439 * C1507) *
              C1510)) /
        (p * q * std::sqrt(p + q));
    d2eeyz[25] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C6578 * C215 - C6680 * C93 + C29557 * C1169 - C6681 * C1059) *
                C10067 +
            (C6578 * C390 - C6680 * C277 + C29557 * C1313 - C6681 * C1219) *
                C10011 +
            (C16496 - C16497 + C16498 - C16499) * C10068 +
            (C16662 - C16663 + C16664 - C16665) * C29555) *
               C29390 * C29439 * C1507 +
           ((C16497 - C16496 + C16499 - C16498) * C10067 +
            (C16663 - C16662 + C16665 - C16664) * C10011 +
            (C16504 - C16505 + C16506 - C16507) * C10068 +
            (C16666 - C16667 + C16668 - C16669) * C29555) *
               C29390 * C29439 * C1508) *
              C1509 +
          (((C6684 - C6683 + C6686 - C6685) * C10067 +
            (C6850 - C6849 + C6852 - C6851) * C10011 +
            (C8266 - C8267 + C8268 - C8269) * C10068 +
            (C8479 - C8480 + C8481 - C8482) * C29555) *
               C29390 * C29439 * C1507 +
           ((C8267 - C8266 + C8269 - C8268) * C10067 +
            (C8480 - C8479 + C8482 - C8481) * C10011 +
            (C6578 * C732 - C6680 * C620 + C29557 * C6088 - C6681 * C5930) *
                C10068 +
            (C6578 * C876 - C6680 * C782 + C29557 * C6308 - C6681 * C6162) *
                C29555) *
               C29390 * C29439 * C1508) *
              C1510)) /
        (p * q * std::sqrt(p + q));
    d2eezx[25] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C29390 * C98 - C13361 * C93) * C6680 +
                       (C29390 * C448 - C13361 * C443) * C6578 +
                       (C17095 - C17096) * C6681 + (C17289 - C17290) * C29557) *
                          C10011 +
                      ((C13869 - C13870) * C6680 + (C14004 - C14005) * C6578 +
                       (C15616 - C15615) * C6681 + (C15780 - C15779) * C29557) *
                          C29555) *
                         C29439 * C1507 +
                     (((C13870 - C13869) * C6680 + (C14005 - C14004) * C6578 +
                       (C15615 - C15616) * C6681 + (C15779 - C15780) * C29557) *
                          C10011 +
                      ((C13874 - C13873) * C6680 + (C14008 - C14007) * C6578 +
                       (C15619 - C15620) * C6681 + (C15781 - C15782) * C29557) *
                          C29555) *
                         C29439 * C1508) *
                        C1509 +
                    ((((C13361 * C94 - C29390 * C100) * C6680 +
                       (C13361 * C444 - C29390 * C449) * C6578 +
                       (C13361 * C1058 - C29390 * C1065) * C6681 +
                       (C13361 * C1358 - C29390 * C1364) * C29557) *
                          C10011 +
                      ((C14673 - C14674) * C6680 + (C14831 - C14832) * C6578 +
                       (C17678 - C17679) * C6681 + (C17880 - C17881) * C29557) *
                          C29555) *
                         C29439 * C1507 +
                     (((C14674 - C14673) * C6680 + (C14832 - C14831) * C6578 +
                       (C17679 - C17678) * C6681 + (C17881 - C17880) * C29557) *
                          C10011 +
                      ((C14678 - C14677) * C6680 + (C14834 - C14833) * C6578 +
                       (C29390 * C5933 - C13361 * C5930) * C6681 +
                       (C29390 * C6380 - C13361 * C6378) * C29557) *
                          C29555) *
                         C29439 * C1508) *
                        C1510)) /
                  (p * q * std::sqrt(p + q));
    d2eezy[25] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C10011 * C152 - C10067 * C93 + C29555 * C678 - C10068 * C618) *
                C6680 +
            (C10011 * C491 - C10067 * C443 + C29555 * C966 - C10068 * C916) *
                C6578 +
            (C16975 - C16976 + C16977 - C16978) * C6681 +
            (C17346 - C17347 + C17348 - C17349) * C29557) *
               C29390 * C29439 * C1507 +
           ((C10067 * C618 - C10011 * C678 + C10068 * C619 - C29555 * C681) *
                C6680 +
            (C10067 * C916 - C10011 * C966 + C10068 * C919 - C29555 * C969) *
                C6578 +
            (C10067 * C2553 - C10011 * C2615 + C10068 * C5929 -
             C29555 * C6017) *
                C6681 +
            (C10067 * C2889 - C10011 * C2945 + C10068 * C6377 -
             C29555 * C6451) *
                C29557) *
               C29390 * C29439 * C1508) *
              C1509 +
          (((C10071 - C10070 + C10073 - C10072) * C6680 +
            (C10417 - C10416 + C10419 - C10418) * C6578 +
            (C12210 - C12211 + C12212 - C12213) * C6681 +
            (C12628 - C12629 + C12630 - C12631) * C29557) *
               C29390 * C29439 * C1507 +
           ((C11577 - C11576 + C11579 - C11578) * C6680 +
            (C12007 - C12006 + C12009 - C12008) * C6578 +
            (C10011 * C2616 - C10067 * C2554 + C29555 * C6018 -
             C10068 * C5930) *
                C6681 +
            (C10011 * C2946 - C10067 * C2890 + C29555 * C6452 -
             C10068 * C6378) *
                C29557) *
               C29390 * C29439 * C1508) *
              C1510)) /
        (p * q * std::sqrt(p + q));
    d2eezz[25] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C6680 * C215 - C7006 * C93 - C6680 * C443 + C6578 * C545 +
             C6681 * C1169 - C7007 * C1059 - C6681 * C1357 + C29557 * C1453) *
                C10011 +
            (C16844 + C16845) * C29555) *
               C29390 * C29439 * C1507 -
           ((C16846 + C16847) * C29555 + (C16845 + C16844) * C10011) * C29390 *
               C29439 * C1508) *
              C1509 +
          (((C8696 + C8695) * C10011 +
            (C6680 * C732 - C7006 * C620 - C6680 * C920 + C6578 * C1014 +
             C6681 * C6088 - C7007 * C5930 - C6681 * C6378 + C29557 * C6520) *
                C29555) *
               C29390 * C29439 * C1508 -
           ((C8695 + C8696) * C29555 + (C7034 + C7033) * C10011) * C29390 *
               C29439 * C1507) *
              C1510)) /
        (p * q * std::sqrt(p + q));
    d2eexx[26] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C13361 * C98 - C13362 * C93 - C13361 * C99 + C29390 * C108) *
                 C6578 +
             C16920 * C29557) *
                C10011 +
            (C16392 + C16393) * C29555) *
               C2031 -
           ((C18687 + C18688) * C29555 +
            (C16922 * C29557 + C16920 * C6578) * C10011) *
               C2032) *
              C1507 +
          (((C18688 + C18687) * C10011 +
            (C15451 * C6578 + (C13361 * C14137 - C13362 * C14136 -
                               C13361 * C14138 + C29390 * C14139) *
                                  C29557) *
                C29555) *
               C2032 -
           ((C16394 + C16395) * C29555 + (C16393 + C16392) * C10011) * C2031) *
              C1508) *
         C29413) /
        (p * q * std::sqrt(p + q));
    d2eexy[26] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C10011 * C152 - C10067 * C93 + C29555 * C678 - C10068 * C618) *
                 C13361 +
             (C10011 * C157 - C10067 * C99 + C29555 * C684 - C10068 * C627) *
                 C29390) *
                C6578 +
            ((C16975 - C16976 + C16977 - C16978) * C13361 +
             (C16979 - C16980 + C16981 - C16982) * C29390) *
                C29557) *
               C2031 +
           (((C16976 - C16975 + C16978 - C16977) * C13361 +
             (C16980 - C16979 + C16982 - C16981) * C29390) *
                C6578 +
            ((C16983 - C16984 + C16985 - C16986) * C13361 +
             (C16987 - C16988 + C16989 - C16990) * C29390) *
                C29557) *
               C2032) *
              C1507 +
          ((((C10067 * C618 - C10011 * C678 + C10068 * C619 - C29555 * C681) *
                 C13361 +
             (C10067 * C627 - C10011 * C684 + C10068 * C629 - C29555 * C687) *
                 C29390) *
                C6578 +
            ((C18755 - C18756 + C18757 - C18758) * C13361 +
             (C18759 - C18760 + C18761 - C18762) * C29390) *
                C29557) *
               C2031 +
           (((C18756 - C18755 + C18758 - C18757) * C13361 +
             (C18760 - C18759 + C18762 - C18761) * C29390) *
                C6578 +
            ((C10011 * C4200 - C10067 * C4142 + C29555 * C14178 -
              C10068 * C14136) *
                 C13361 +
             (C10011 * C4202 - C10067 * C4145 + C29555 * C14179 -
              C10068 * C14138) *
                 C29390) *
                C29557) *
               C2032) *
              C1508) *
         C29413) /
        (p * q * std::sqrt(p + q));
    d2eexz[26] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C6578 * C215 - C6680 * C93 + C29557 * C1169 - C6681 * C1059) *
                 C13361 +
             (C6578 * C220 - C6680 * C99 + C29557 * C1175 - C6681 * C1068) *
                 C29390) *
                C10011 +
            ((C16496 - C16497 + C16498 - C16499) * C13361 +
             (C16500 - C16501 + C16502 - C16503) * C29390) *
                C29555) *
               C2031 +
           (((C6680 * C1059 - C6578 * C1169 + C6681 * C1060 - C29557 * C1172) *
                 C13361 +
             (C6680 * C1068 - C6578 * C1175 + C6681 * C1070 - C29557 * C1178) *
                 C29390) *
                C10011 +
            ((C18829 - C18830 + C18831 - C18832) * C13361 +
             (C18833 - C18834 + C18835 - C18836) * C29390) *
                C29555) *
               C2032) *
              C1507 +
          ((((C16497 - C16496 + C16499 - C16498) * C13361 +
             (C16501 - C16500 + C16503 - C16502) * C29390) *
                C10011 +
            ((C16504 - C16505 + C16506 - C16507) * C13361 +
             (C16508 - C16509 + C16510 - C16511) * C29390) *
                C29555) *
               C2031 +
           (((C18830 - C18829 + C18832 - C18831) * C13361 +
             (C18834 - C18833 + C18836 - C18835) * C29390) *
                C10011 +
            ((C6578 * C6087 - C6680 * C5929 + C29557 * C14218 -
              C6681 * C14136) *
                 C13361 +
             (C6578 * C6089 - C6680 * C5932 + C29557 * C14219 -
              C6681 * C14138) *
                 C29390) *
                C29555) *
               C2032) *
              C1508) *
         C29413) /
        (p * q * std::sqrt(p + q));
    d2eeyx[26] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C29390 * C98 - C13361 * C93) * C10067 +
             (C29390 * C282 - C13361 * C277) * C10011 +
             (C13869 - C13870) * C10068 + (C13871 - C13872) * C29555) *
                C6578 +
            ((C17095 - C17096) * C10067 + (C17097 - C17098) * C10011 +
             C18903 * C10068 + C18904 * C29555) *
                C29557) *
               C2031 +
           (((C17096 - C17095) * C10067 + (C17098 - C17097) * C10011 +
             C18905 * C10068 + C18906 * C29555) *
                C6578 +
            ((C17099 - C17100) * C10067 + (C17101 - C17102) * C10011 +
             (C17103 - C17104) * C10068 + (C17105 - C17106) * C29555) *
                C29557) *
               C2032) *
              C1507 +
          ((((C13870 - C13869) * C10067 + (C13872 - C13871) * C10011 +
             (C13874 - C13873) * C10068 + (C13876 - C13875) * C29555) *
                C6578 +
            (C18905 * C10067 + C18906 * C10011 + (C15619 - C15620) * C10068 +
             (C15621 - C15622) * C29555) *
                C29557) *
               C2031 +
           ((C18903 * C10067 + C18904 * C10011 + (C15620 - C15619) * C10068 +
             (C15622 - C15621) * C29555) *
                C6578 +
            ((C17104 - C17103) * C10067 + (C17106 - C17105) * C10011 +
             (C29390 * C14137 - C13361 * C14136) * C10068 +
             (C29390 * C14259 - C13361 * C14258) * C29555) *
                C29557) *
               C2032) *
              C1508) *
         C29413) /
        (p * q * std::sqrt(p + q));
    d2eeyy[26] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C10067 * C152 - C10235 * C93 - C10067 * C277 + C10011 * C326 +
             C10068 * C678 - C10236 * C618 - C10068 * C778 + C29555 * C830) *
                C29390 * C6578 +
            (C17182 + C17183) * C29390 * C29557) *
               C2031 -
           ((C17184 + C17185) * C29390 * C29557 +
            (C17183 + C17182) * C29390 * C6578) *
               C2032) *
              C1507 +
          (((C18985 + C18986) * C29390 * C6578 +
            (C10067 * C4200 - C10235 * C4142 - C10067 * C4308 + C10011 * C4362 +
             C10068 * C14178 - C10236 * C14136 - C10068 * C14258 +
             C29555 * C14298) *
                C29390 * C29557) *
               C2032 -
           ((C18986 + C18985) * C29390 * C29557 +
            (C10068 * C681 - C10236 * C619 - C10068 * C781 + C29555 * C831 +
             C10067 * C678 - C10235 * C618 - C10067 * C778 + C10011 * C830) *
                C29390 * C6578) *
               C2031) *
              C1508) *
         C29413) /
        (p * q * std::sqrt(p + q));
    d2eeyz[26] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C6578 * C215 - C6680 * C93 + C29557 * C1169 - C6681 * C1059) *
                C10067 +
            (C6578 * C390 - C6680 * C277 + C29557 * C1313 - C6681 * C1219) *
                C10011 +
            (C16496 - C16497 + C16498 - C16499) * C10068 +
            (C16662 - C16663 + C16664 - C16665) * C29555) *
               C29390 * C2031 +
           ((C6680 * C1059 - C6578 * C1169 + C6681 * C1060 - C29557 * C1172) *
                C10067 +
            (C6680 * C1219 - C6578 * C1313 + C6681 * C1222 - C29557 * C1316) *
                C10011 +
            (C18829 - C18830 + C18831 - C18832) * C10068 +
            (C19053 - C19054 + C19055 - C19056) * C29555) *
               C29390 * C2032) *
              C1507 +
          (((C16497 - C16496 + C16499 - C16498) * C10067 +
            (C16663 - C16662 + C16665 - C16664) * C10011 +
            (C16504 - C16505 + C16506 - C16507) * C10068 +
            (C16666 - C16667 + C16668 - C16669) * C29555) *
               C29390 * C2031 +
           ((C18830 - C18829 + C18832 - C18831) * C10067 +
            (C19054 - C19053 + C19056 - C19055) * C10011 +
            (C6578 * C6087 - C6680 * C5929 + C29557 * C14218 - C6681 * C14136) *
                C10068 +
            (C6578 * C6307 - C6680 * C6161 + C29557 * C14337 - C6681 * C14258) *
                C29555) *
               C29390 * C2032) *
              C1508) *
         C29413) /
        (p * q * std::sqrt(p + q));
    d2eezx[26] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C29390 * C98 - C13361 * C93) * C6680 +
                       (C29390 * C448 - C13361 * C443) * C6578 +
                       (C17095 - C17096) * C6681 + (C17289 - C17290) * C29557) *
                          C10011 +
                      ((C13869 - C13870) * C6680 + (C14004 - C14005) * C6578 +
                       C18903 * C6681 + C19123 * C29557) *
                          C29555) *
                         C2031 +
                     (((C17096 - C17095) * C6680 + (C17290 - C17289) * C6578 +
                       (C17099 - C17100) * C6681 + (C17291 - C17292) * C29557) *
                          C10011 +
                      (C18905 * C6680 + C19124 * C6578 +
                       (C17103 - C17104) * C6681 + (C17293 - C17294) * C29557) *
                          C29555) *
                         C2032) *
                        C1507 +
                    ((((C13870 - C13869) * C6680 + (C14005 - C14004) * C6578 +
                       C18905 * C6681 + C19124 * C29557) *
                          C10011 +
                      ((C13874 - C13873) * C6680 + (C14008 - C14007) * C6578 +
                       (C15619 - C15620) * C6681 + (C15781 - C15782) * C29557) *
                          C29555) *
                         C2031 +
                     ((C18903 * C6680 + C19123 * C6578 +
                       (C17104 - C17103) * C6681 + (C17294 - C17293) * C29557) *
                          C10011 +
                      ((C15620 - C15619) * C6680 + (C15782 - C15781) * C6578 +
                       (C29390 * C14137 - C13361 * C14136) * C6681 +
                       (C29390 * C14377 - C13361 * C14376) * C29557) *
                          C29555) *
                         C2032) *
                        C1508) *
                   C29413) /
                  (p * q * std::sqrt(p + q));
    d2eezy[26] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C10011 * C152 - C10067 * C93 + C29555 * C678 - C10068 * C618) *
                C6680 +
            (C10011 * C491 - C10067 * C443 + C29555 * C966 - C10068 * C916) *
                C6578 +
            (C16975 - C16976 + C16977 - C16978) * C6681 +
            (C17346 - C17347 + C17348 - C17349) * C29557) *
               C29390 * C2031 +
           ((C16976 - C16975 + C16978 - C16977) * C6680 +
            (C17347 - C17346 + C17349 - C17348) * C6578 +
            (C16983 - C16984 + C16985 - C16986) * C6681 +
            (C17350 - C17351 + C17352 - C17353) * C29557) *
               C29390 * C2032) *
              C1507 +
          (((C10067 * C618 - C10011 * C678 + C10068 * C619 - C29555 * C681) *
                C6680 +
            (C10067 * C916 - C10011 * C966 + C10068 * C919 - C29555 * C969) *
                C6578 +
            (C18755 - C18756 + C18757 - C18758) * C6681 +
            (C19191 - C19192 + C19193 - C19194) * C29557) *
               C29390 * C2031 +
           ((C18756 - C18755 + C18758 - C18757) * C6680 +
            (C19192 - C19191 + C19194 - C19193) * C6578 +
            (C10011 * C4200 - C10067 * C4142 + C29555 * C14178 -
             C10068 * C14136) *
                C6681 +
            (C10011 * C4520 - C10067 * C4466 + C29555 * C14416 -
             C10068 * C14376) *
                C29557) *
               C29390 * C2032) *
              C1508) *
         C29413) /
        (p * q * std::sqrt(p + q));
    d2eezz[26] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C6680 * C215 - C7006 * C93 - C6680 * C443 + C6578 * C545 +
             C6681 * C1169 - C7007 * C1059 - C6681 * C1357 + C29557 * C1453) *
                C10011 +
            (C16844 + C16845) * C29555) *
               C29390 * C2031 -
           ((C19273 + C19274) * C29555 +
            (C6681 * C1172 - C7007 * C1060 - C6681 * C1360 + C29557 * C1454 +
             C6680 * C1169 - C7006 * C1059 - C6680 * C1357 + C6578 * C1453) *
                C10011) *
               C29390 * C2032) *
              C1507 +
          (((C19274 + C19273) * C10011 +
            (C6680 * C6087 - C7006 * C5929 - C6680 * C6377 + C6578 * C6519 +
             C6681 * C14218 - C7007 * C14136 - C6681 * C14376 +
             C29557 * C14455) *
                C29555) *
               C29390 * C2032 -
           ((C16846 + C16847) * C29555 + (C16845 + C16844) * C10011) * C29390 *
               C2031) *
              C1508) *
         C29413) /
        (p * q * std::sqrt(p + q));
    d2eexx[27] +=
        (-std::pow(Pi, 2.5) *
         ((((C13361 * C98 - C13362 * C93 - C13361 * C99 + C29390 * C108) *
                C6578 +
            (C13361 * C1067 - C13362 * C1059 - C13361 * C1068 +
             C29390 * C1077) *
                C29557) *
               C10011 +
           (C16392 + C16393) * C29555) *
              C29439 * C612 -
          ((C16394 + C16395) * C29555 + (C16393 + C16392) * C10011) * C29439 *
              C613 +
          ((C16395 + C16394) * C10011 +
           (C13736 * C6578 + (C13361 * C15435 - C13362 * C15434 -
                              C13361 * C15436 + C29390 * C15437) *
                                 C29557) *
               C29555) *
              C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C13361 * C98 - C13362 * C93 - C13361 * C99 + C29390 * C108) *
                C6578 +
            (C13361 * C1067 - C13362 * C1059 - C13361 * C1068 +
             C29390 * C1077) *
                C29557) *
               C10011 +
           (C13734 * C6578 + C15452 * C29557) * C29555) *
              C29439 * C29425 * C84 -
          (((C13361 * C2558 - C13362 * C2554 - C13361 * C2559 +
             C29390 * C2563) *
                C29557 +
            C14519 * C6578) *
               C29555 +
           ((C13361 * C1065 - C13362 * C1058 - C13361 * C1066 +
             C29390 * C1076) *
                C29557 +
            (C13361 * C100 - C13362 * C94 - C13361 * C101 + C29390 * C109) *
                C6578) *
               C10011) *
              C29439 * C29425 * C85 +
          (((C13361 * C102 - C13362 * C95 - C13361 * C103 + C29390 * C110) *
                C6578 +
            (C13361 * C1063 - C13362 * C1057 - C13361 * C1064 +
             C29390 * C1075) *
                C29557) *
               C10011 +
           ((C13361 * C622 - C13362 * C616 - C13361 * C623 + C29390 * C634) *
                C6578 +
            (C13361 * C2560 - C13362 * C2555 - C13361 * C2561 +
             C29390 * C2564) *
                C29557) *
               C29555) *
              C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C13361 * C98 - C13362 * C93 - C13361 * C99 + C29390 * C108) *
                C6578 +
            C16920 * C29557) *
               C10011 +
           (C16392 + C16393) * C29555) *
              C1054 -
          ((C16921 * C29557 + C15452 * C6578) * C29555 +
           (C16922 * C29557 + C16920 * C6578) * C10011) *
              C1055 +
          ((C16922 * C6578 + (C13361 * C7538 - C13362 * C7536 - C13361 * C7539 +
                              C29390 * C7542) *
                                 C29557) *
               C10011 +
           (C16921 * C6578 + (C13361 * C16898 - C13362 * C16897 -
                              C13361 * C16899 + C29390 * C16900) *
                                 C29557) *
               C29555) *
              C1056) *
         C29425 * C29413) /
            (p * q * std::sqrt(p + q));
    d2eexy[27] +=
        (-std::pow(Pi, 2.5) *
         ((((C10011 * C152 - C10067 * C93 + C29555 * C678 - C10068 * C618) *
                C13361 +
            (C10011 * C157 - C10067 * C99 + C29555 * C684 - C10068 * C627) *
                C29390) *
               C6578 +
           ((C10011 * C1119 - C10067 * C1059 + C29555 * C2615 -
             C10068 * C2553) *
                C13361 +
            (C10011 * C1125 - C10067 * C1068 + C29555 * C2618 -
             C10068 * C2557) *
                C29390) *
               C29557) *
              C29439 * C612 +
          (((C10067 * C618 - C10011 * C678 + C10068 * C619 - C29555 * C681) *
                C13361 +
            (C10067 * C627 - C10011 * C684 + C10068 * C629 - C29555 * C687) *
                C29390) *
               C6578 +
           ((C10067 * C2553 - C10011 * C2615 + C10068 * C5929 -
             C29555 * C6017) *
                C13361 +
            (C10067 * C2557 - C10011 * C2618 + C10068 * C5932 -
             C29555 * C6019) *
                C29390) *
               C29557) *
              C29439 * C613 +
          (((C10011 * C681 - C10067 * C619 + C29555 * C3655 - C10068 * C3569) *
                C13361 +
            (C10011 * C687 - C10067 * C629 + C29555 * C3657 - C10068 * C3572) *
                C29390) *
               C6578 +
           ((C10011 * C6017 - C10067 * C5929 + C29555 * C15504 -
             C10068 * C15434) *
                C13361 +
            (C10011 * C6019 - C10067 * C5932 + C29555 * C15505 -
             C10068 * C15436) *
                C29390) *
               C29557) *
              C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C10011 * C152 - C10067 * C93 + C29555 * C678 - C10068 * C618) *
                C13361 +
            (C10011 * C157 - C10067 * C99 + C29555 * C684 - C10068 * C627) *
                C29390) *
               C6578 +
           ((C10011 * C1119 - C10067 * C1059 + C29555 * C2615 -
             C10068 * C2553) *
                C13361 +
            (C10011 * C1125 - C10067 * C1068 + C29555 * C2618 -
             C10068 * C2557) *
                C29390) *
               C29557) *
              C29439 * C29425 * C84 +
          (((C10071 - C10070 + C10073 - C10072) * C13361 +
            (C10075 - C10074 + C10077 - C10076) * C29390) *
               C6578 +
           ((C12210 - C12211 + C12212 - C12213) * C13361 +
            (C12214 - C12215 + C12216 - C12217) * C29390) *
               C29557) *
              C29439 * C29425 * C85 +
          (((C10079 - C10078 + C10081 - C10080) * C13361 +
            (C10083 - C10082 + C10085 - C10084) * C29390) *
               C6578 +
           ((C10011 * C1121 - C10067 * C1057 + C29555 * C2617 -
             C10068 * C2555) *
                C13361 +
            (C10011 * C1127 - C10067 * C1064 + C29555 * C2620 -
             C10068 * C2561) *
                C29390) *
               C29557) *
              C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C10011 * C152 - C10067 * C93 + C29555 * C678 - C10068 * C618) *
                C13361 +
            (C10011 * C157 - C10067 * C99 + C29555 * C684 - C10068 * C627) *
                C29390) *
               C6578 +
           ((C16975 - C16976 + C16977 - C16978) * C13361 +
            (C16979 - C16980 + C16981 - C16982) * C29390) *
               C29557) *
              C1054 +
          (((C16976 - C16975 + C16978 - C16977) * C13361 +
            (C16980 - C16979 + C16982 - C16981) * C29390) *
               C6578 +
           ((C16983 - C16984 + C16985 - C16986) * C13361 +
            (C16987 - C16988 + C16989 - C16990) * C29390) *
               C29557) *
              C1055 +
          (((C16984 - C16983 + C16986 - C16985) * C13361 +
            (C16988 - C16987 + C16990 - C16989) * C29390) *
               C6578 +
           ((C10011 * C7622 - C10067 * C7536 + C29555 * C16972 -
             C10068 * C16897) *
                C13361 +
            (C10011 * C7624 - C10067 * C7539 + C29555 * C16973 -
             C10068 * C16899) *
                C29390) *
               C29557) *
              C1056) *
         C29425 * C29413) /
            (p * q * std::sqrt(p + q));
    d2eexz[27] +=
        (-std::pow(Pi, 2.5) *
         ((((C6578 * C215 - C6680 * C93 + C29557 * C1169 - C6681 * C1059) *
                C13361 +
            (C6578 * C220 - C6680 * C99 + C29557 * C1175 - C6681 * C1068) *
                C29390) *
               C10011 +
           ((C16496 - C16497 + C16498 - C16499) * C13361 +
            (C16500 - C16501 + C16502 - C16503) * C29390) *
               C29555) *
              C29439 * C612 +
          (((C16497 - C16496 + C16499 - C16498) * C13361 +
            (C16501 - C16500 + C16503 - C16502) * C29390) *
               C10011 +
           ((C16504 - C16505 + C16506 - C16507) * C13361 +
            (C16508 - C16509 + C16510 - C16511) * C29390) *
               C29555) *
              C29439 * C613 +
          (((C16505 - C16504 + C16507 - C16506) * C13361 +
            (C16509 - C16508 + C16511 - C16510) * C29390) *
               C10011 +
           ((C6578 * C3709 - C6680 * C3569 + C29557 * C15556 - C6681 * C15434) *
                C13361 +
            (C6578 * C3711 - C6680 * C3572 + C29557 * C15557 - C6681 * C15436) *
                C29390) *
               C29555) *
              C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C6578 * C215 - C6680 * C93 + C29557 * C1169 - C6681 * C1059) *
                C13361 +
            (C6578 * C220 - C6680 * C99 + C29557 * C1175 - C6681 * C1068) *
                C29390) *
               C10011 +
           ((C6578 * C728 - C6680 * C618 + C29557 * C2671 - C6681 * C2553) *
                C13361 +
            (C6578 * C734 - C6680 * C627 + C29557 * C2674 - C6681 * C2557) *
                C29390) *
               C29555) *
              C29439 * C29425 * C84 +
          (((C6684 - C6683 + C6686 - C6685) * C13361 +
            (C6688 - C6687 + C6690 - C6689) * C29390) *
               C10011 +
           ((C8266 - C8267 + C8268 - C8269) * C13361 +
            (C8270 - C8271 + C8272 - C8273) * C29390) *
               C29555) *
              C29439 * C29425 * C85 +
          (((C6692 - C6691 + C6694 - C6693) * C13361 +
            (C6696 - C6695 + C6698 - C6697) * C29390) *
               C10011 +
           ((C6578 * C730 - C6680 * C616 + C29557 * C2673 - C6681 * C2555) *
                C13361 +
            (C6578 * C736 - C6680 * C623 + C29557 * C2676 - C6681 * C2561) *
                C29390) *
               C29555) *
              C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C6578 * C215 - C6680 * C93 + C29557 * C1169 - C6681 * C1059) *
                C13361 +
            (C6578 * C220 - C6680 * C99 + C29557 * C1175 - C6681 * C1068) *
                C29390) *
               C10011 +
           ((C16496 - C16497 + C16498 - C16499) * C13361 +
            (C16500 - C16501 + C16502 - C16503) * C29390) *
               C29555) *
              C1054 +
          (((C6680 * C1059 - C6578 * C1169 + C6681 * C1060 - C29557 * C1172) *
                C13361 +
            (C6680 * C1068 - C6578 * C1175 + C6681 * C1070 - C29557 * C1178) *
                C29390) *
               C10011 +
           ((C6680 * C2553 - C6578 * C2671 + C6681 * C4142 - C29557 * C4254) *
                C13361 +
            (C6680 * C2557 - C6578 * C2674 + C6681 * C4145 - C29557 * C4256) *
                C29390) *
               C29555) *
              C1055 +
          (((C6578 * C1172 - C6680 * C1060 + C29557 * C7688 - C6681 * C7536) *
                C13361 +
            (C6578 * C1178 - C6680 * C1070 + C29557 * C7690 - C6681 * C7539) *
                C29390) *
               C10011 +
           ((C6578 * C4254 - C6680 * C4142 + C29557 * C17040 - C6681 * C16897) *
                C13361 +
            (C6578 * C4256 - C6680 * C4145 + C29557 * C17041 - C6681 * C16899) *
                C29390) *
               C29555) *
              C1056) *
         C29425 * C29413) /
            (p * q * std::sqrt(p + q));
    d2eeyx[27] += (-std::pow(Pi, 2.5) *
                   ((((C29390 * C98 - C13361 * C93) * C10067 +
                      (C29390 * C282 - C13361 * C277) * C10011 +
                      (C13869 - C13870) * C10068 + (C13871 - C13872) * C29555) *
                         C6578 +
                     ((C29390 * C1067 - C13361 * C1059) * C10067 +
                      (C29390 * C1225 - C13361 * C1219) * C10011 +
                      (C15616 - C15615) * C10068 + (C15618 - C15617) * C29555) *
                         C29557) *
                        C29439 * C612 +
                    (((C13870 - C13869) * C10067 + (C13872 - C13871) * C10011 +
                      (C13874 - C13873) * C10068 + (C13876 - C13875) * C29555) *
                         C6578 +
                     ((C15615 - C15616) * C10067 + (C15617 - C15618) * C10011 +
                      (C15619 - C15620) * C10068 + (C15621 - C15622) * C29555) *
                         C29557) *
                        C29439 * C613 +
                    ((C13881 * C10067 + C13882 * C10011 +
                      (C13878 - C13877) * C10068 + (C13880 - C13879) * C29555) *
                         C6578 +
                     ((C15620 - C15619) * C10067 + (C15622 - C15621) * C10011 +
                      (C29390 * C15435 - C13361 * C15434) * C10068 +
                      (C29390 * C15613 - C13361 * C15612) * C29555) *
                         C29557) *
                        C29439 * C614) *
                   C29413) /
                      (p * q * std::sqrt(p + q)) -
                  (std::pow(Pi, 2.5) *
                   ((((C29390 * C98 - C13361 * C93) * C10067 +
                      (C29390 * C282 - C13361 * C277) * C10011 +
                      (C13869 - C13870) * C10068 + (C13871 - C13872) * C29555) *
                         C6578 +
                     ((C29390 * C1067 - C13361 * C1059) * C10067 +
                      (C29390 * C1225 - C13361 * C1219) * C10011 +
                      (C15616 - C15615) * C10068 + (C15618 - C15617) * C29555) *
                         C29557) *
                        C29439 * C29425 * C84 +
                    (((C13361 * C94 - C29390 * C100) * C10067 +
                      (C13361 * C278 - C29390 * C283) * C10011 +
                      (C14673 - C14674) * C10068 + (C14675 - C14676) * C29555) *
                         C6578 +
                     ((C13361 * C1058 - C29390 * C1065) * C10067 +
                      (C13361 * C1220 - C29390 * C1226) * C10011 +
                      (C13361 * C2554 - C29390 * C2558) * C10068 +
                      (C13361 * C2728 - C29390 * C2731) * C29555) *
                         C29557) *
                        C29439 * C29425 * C85 +
                    (((C29390 * C102 - C13361 * C95) * C10067 +
                      (C29390 * C284 - C13361 * C279) * C10011 +
                      (C29390 * C622 - C13361 * C616) * C10068 +
                      (C29390 * C786 - C13361 * C780) * C29555) *
                         C6578 +
                     ((C29390 * C1063 - C13361 * C1057) * C10067 +
                      (C29390 * C1227 - C13361 * C1221) * C10011 +
                      (C29390 * C2560 - C13361 * C2555) * C10068 +
                      (C29390 * C2732 - C13361 * C2729) * C29555) *
                         C29557) *
                        C29439 * C29425 * C86)) /
                      (p * q * std::sqrt(p + q)) +
                  (2 * std::pow(Pi, 2.5) *
                   ((((C29390 * C98 - C13361 * C93) * C10067 +
                      (C29390 * C282 - C13361 * C277) * C10011 +
                      (C13869 - C13870) * C10068 + (C13871 - C13872) * C29555) *
                         C6578 +
                     ((C17095 - C17096) * C10067 + (C17097 - C17098) * C10011 +
                      (C15616 - C15615) * C10068 + (C15618 - C15617) * C29555) *
                         C29557) *
                        C1054 +
                    (((C17096 - C17095) * C10067 + (C17098 - C17097) * C10011 +
                      (C15615 - C15616) * C10068 + (C15617 - C15618) * C29555) *
                         C6578 +
                     ((C17099 - C17100) * C10067 + (C17101 - C17102) * C10011 +
                      (C17103 - C17104) * C10068 + (C17105 - C17106) * C29555) *
                         C29557) *
                        C1055 +
                    (((C17100 - C17099) * C10067 + (C17102 - C17101) * C10011 +
                      (C17104 - C17103) * C10068 + (C17106 - C17105) * C29555) *
                         C6578 +
                     ((C29390 * C7538 - C13361 * C7536) * C10067 +
                      (C29390 * C7744 - C13361 * C7742) * C10011 +
                      (C29390 * C16898 - C13361 * C16897) * C10068 +
                      (C29390 * C17093 - C13361 * C17092) * C29555) *
                         C29557) *
                        C1056) *
                   C29425 * C29413) /
                      (p * q * std::sqrt(p + q));
    d2eeyy[27] +=
        (-std::pow(Pi, 2.5) *
         (((C10067 * C152 - C10235 * C93 - C10067 * C277 + C10011 * C326 +
            C10068 * C678 - C10236 * C618 - C10068 * C778 + C29555 * C830) *
               C29390 * C6578 +
           (C10067 * C1119 - C10235 * C1059 - C10067 * C1219 + C10011 * C1271 +
            C10068 * C2615 - C10236 * C2553 - C10068 * C2727 + C29555 * C2783) *
               C29390 * C29557) *
              C29439 * C612 -
          ((C10068 * C6017 - C10236 * C5929 - C10068 * C6161 + C29555 * C6239 +
            C10067 * C2615 - C10235 * C2553 - C10067 * C2727 + C10011 * C2783) *
               C29390 * C29557 +
           (C10068 * C681 - C10236 * C619 - C10068 * C781 + C29555 * C831 +
            C10067 * C678 - C10235 * C618 - C10067 * C778 + C10011 * C830) *
               C29390 * C6578) *
              C29439 * C613 +
          ((C10067 * C681 - C10235 * C619 - C10067 * C781 + C10011 * C831 +
            C10068 * C3655 - C10236 * C3569 - C10068 * C3775 + C29555 * C3845) *
               C29390 * C6578 +
           (C10067 * C6017 - C10235 * C5929 - C10067 * C6161 + C10011 * C6239 +
            C10068 * C15504 - C10236 * C15434 - C10068 * C15612 +
            C29555 * C15672) *
               C29390 * C29557) *
              C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C10067 * C152 - C10235 * C93 - C10067 * C277 + C10011 * C326 +
            C10068 * C678 - C10236 * C618 - C10068 * C778 + C29555 * C830) *
               C29390 * C6578 +
           (C10067 * C1119 - C10235 * C1059 - C10067 * C1219 + C10011 * C1271 +
            C10068 * C2615 - C10236 * C2553 - C10068 * C2727 + C29555 * C2783) *
               C29390 * C29557) *
              C29439 * C29425 * C84 -
          ((C12428 + C12429) * C29390 * C29557 +
           (C10263 + C10262) * C29390 * C6578) *
              C29439 * C29425 * C85 +
          ((C10265 + C10264) * C29390 * C6578 +
           (C10067 * C1121 - C10235 * C1057 - C10067 * C1221 + C10011 * C1269 +
            C10068 * C2617 - C10236 * C2555 - C10068 * C2729 + C29555 * C2785) *
               C29390 * C29557) *
              C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C10067 * C152 - C10235 * C93 - C10067 * C277 + C10011 * C326 +
            C10068 * C678 - C10236 * C618 - C10068 * C778 + C29555 * C830) *
               C29390 * C6578 +
           (C17182 + C17183) * C29390 * C29557) *
              C1054 -
          ((C17184 + C17185) * C29390 * C29557 +
           (C17183 + C17182) * C29390 * C6578) *
              C1055 +
          ((C17185 + C17184) * C29390 * C6578 +
           (C10067 * C7622 - C10235 * C7536 - C10067 * C7742 + C10011 * C7812 +
            C10068 * C16972 - C10236 * C16897 - C10068 * C17092 +
            C29555 * C17156) *
               C29390 * C29557) *
              C1056) *
         C29425 * C29413) /
            (p * q * std::sqrt(p + q));
    d2eeyz[27] +=
        (-std::pow(Pi, 2.5) *
         (((C6578 * C215 - C6680 * C93 + C29557 * C1169 - C6681 * C1059) *
               C10067 +
           (C6578 * C390 - C6680 * C277 + C29557 * C1313 - C6681 * C1219) *
               C10011 +
           (C16496 - C16497 + C16498 - C16499) * C10068 +
           (C16662 - C16663 + C16664 - C16665) * C29555) *
              C29390 * C29439 * C612 +
          ((C16497 - C16496 + C16499 - C16498) * C10067 +
           (C16663 - C16662 + C16665 - C16664) * C10011 +
           (C16504 - C16505 + C16506 - C16507) * C10068 +
           (C16666 - C16667 + C16668 - C16669) * C29555) *
              C29390 * C29439 * C613 +
          ((C16505 - C16504 + C16507 - C16506) * C10067 +
           (C16667 - C16666 + C16669 - C16668) * C10011 +
           (C6578 * C3709 - C6680 * C3569 + C29557 * C15556 - C6681 * C15434) *
               C10068 +
           (C6578 * C3897 - C6680 * C3775 + C29557 * C15723 - C6681 * C15612) *
               C29555) *
              C29390 * C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C6578 * C215 - C6680 * C93 + C29557 * C1169 - C6681 * C1059) *
               C10067 +
           (C6578 * C390 - C6680 * C277 + C29557 * C1313 - C6681 * C1219) *
               C10011 +
           (C6578 * C728 - C6680 * C618 + C29557 * C2671 - C6681 * C2553) *
               C10068 +
           (C6578 * C872 - C6680 * C778 + C29557 * C2836 - C6681 * C2727) *
               C29555) *
              C29390 * C29439 * C29425 * C84 +
          ((C6684 - C6683 + C6686 - C6685) * C10067 +
           (C6850 - C6849 + C6852 - C6851) * C10011 +
           (C8266 - C8267 + C8268 - C8269) * C10068 +
           (C8479 - C8480 + C8481 - C8482) * C29555) *
              C29390 * C29439 * C29425 * C85 +
          ((C6692 - C6691 + C6694 - C6693) * C10067 +
           (C6854 - C6853 + C6856 - C6855) * C10011 +
           (C6578 * C730 - C6680 * C616 + C29557 * C2673 - C6681 * C2555) *
               C10068 +
           (C6578 * C874 - C6680 * C780 + C29557 * C2838 - C6681 * C2729) *
               C29555) *
              C29390 * C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C6578 * C215 - C6680 * C93 + C29557 * C1169 - C6681 * C1059) *
               C10067 +
           (C6578 * C390 - C6680 * C277 + C29557 * C1313 - C6681 * C1219) *
               C10011 +
           (C16496 - C16497 + C16498 - C16499) * C10068 +
           (C16662 - C16663 + C16664 - C16665) * C29555) *
              C29390 * C1054 +
          ((C6680 * C1059 - C6578 * C1169 + C6681 * C1060 - C29557 * C1172) *
               C10067 +
           (C6680 * C1219 - C6578 * C1313 + C6681 * C1222 - C29557 * C1316) *
               C10011 +
           (C6680 * C2553 - C6578 * C2671 + C6681 * C4142 - C29557 * C4254) *
               C10068 +
           (C6680 * C2727 - C6578 * C2836 + C6681 * C4308 - C29557 * C4414) *
               C29555) *
              C29390 * C1055 +
          ((C6578 * C1172 - C6680 * C1060 + C29557 * C7688 - C6681 * C7536) *
               C10067 +
           (C6578 * C1316 - C6680 * C1222 + C29557 * C7889 - C6681 * C7742) *
               C10011 +
           (C6578 * C4254 - C6680 * C4142 + C29557 * C17040 - C6681 * C16897) *
               C10068 +
           (C6578 * C4414 - C6680 * C4308 + C29557 * C17235 - C6681 * C17092) *
               C29555) *
              C29390 * C1056) *
         C29425 * C29413) /
            (p * q * std::sqrt(p + q));
    d2eezx[27] += (-std::pow(Pi, 2.5) *
                   ((((C29390 * C98 - C13361 * C93) * C6680 +
                      (C29390 * C448 - C13361 * C443) * C6578 +
                      (C29390 * C1067 - C13361 * C1059) * C6681 +
                      (C29390 * C1363 - C13361 * C1357) * C29557) *
                         C10011 +
                     ((C13869 - C13870) * C6680 + (C14004 - C14005) * C6578 +
                      (C15616 - C15615) * C6681 + (C15780 - C15779) * C29557) *
                         C29555) *
                        C29439 * C612 +
                    (((C13870 - C13869) * C6680 + (C14005 - C14004) * C6578 +
                      (C15615 - C15616) * C6681 + (C15779 - C15780) * C29557) *
                         C10011 +
                     ((C13874 - C13873) * C6680 + (C14008 - C14007) * C6578 +
                      (C15619 - C15620) * C6681 + (C15781 - C15782) * C29557) *
                         C29555) *
                        C29439 * C613 +
                    ((C13881 * C6680 + C14011 * C6578 +
                      (C15620 - C15619) * C6681 + (C15782 - C15781) * C29557) *
                         C10011 +
                     ((C13878 - C13877) * C6680 + (C14010 - C14009) * C6578 +
                      (C29390 * C15435 - C13361 * C15434) * C6681 +
                      (C29390 * C15777 - C13361 * C15776) * C29557) *
                         C29555) *
                        C29439 * C614) *
                   C29413) /
                      (p * q * std::sqrt(p + q)) -
                  (std::pow(Pi, 2.5) *
                   ((((C29390 * C98 - C13361 * C93) * C6680 +
                      (C29390 * C448 - C13361 * C443) * C6578 +
                      (C29390 * C1067 - C13361 * C1059) * C6681 +
                      (C29390 * C1363 - C13361 * C1357) * C29557) *
                         C10011 +
                     ((C13869 - C13870) * C6680 + (C14004 - C14005) * C6578 +
                      (C15616 - C15615) * C6681 + (C15780 - C15779) * C29557) *
                         C29555) *
                        C29439 * C29425 * C84 +
                    (((C13361 * C94 - C29390 * C100) * C6680 +
                      (C13361 * C444 - C29390 * C449) * C6578 +
                      (C13361 * C1058 - C29390 * C1065) * C6681 +
                      (C13361 * C1358 - C29390 * C1364) * C29557) *
                         C10011 +
                     ((C14673 - C14674) * C6680 + (C14831 - C14832) * C6578 +
                      (C13361 * C2554 - C29390 * C2558) * C6681 +
                      (C13361 * C2890 - C29390 * C2893) * C29557) *
                         C29555) *
                        C29439 * C29425 * C85 +
                    (((C29390 * C102 - C13361 * C95) * C6680 +
                      (C29390 * C450 - C13361 * C445) * C6578 +
                      (C29390 * C1063 - C13361 * C1057) * C6681 +
                      (C29390 * C1365 - C13361 * C1359) * C29557) *
                         C10011 +
                     ((C29390 * C622 - C13361 * C616) * C6680 +
                      (C29390 * C924 - C13361 * C918) * C6578 +
                      (C29390 * C2560 - C13361 * C2555) * C6681 +
                      (C29390 * C2894 - C13361 * C2891) * C29557) *
                         C29555) *
                        C29439 * C29425 * C86)) /
                      (p * q * std::sqrt(p + q)) +
                  (2 * std::pow(Pi, 2.5) *
                   ((((C29390 * C98 - C13361 * C93) * C6680 +
                      (C29390 * C448 - C13361 * C443) * C6578 +
                      (C17095 - C17096) * C6681 + (C17289 - C17290) * C29557) *
                         C10011 +
                     ((C13869 - C13870) * C6680 + (C14004 - C14005) * C6578 +
                      (C15616 - C15615) * C6681 + (C15780 - C15779) * C29557) *
                         C29555) *
                        C1054 +
                    (((C17096 - C17095) * C6680 + (C17290 - C17289) * C6578 +
                      (C17099 - C17100) * C6681 + (C17291 - C17292) * C29557) *
                         C10011 +
                     ((C15615 - C15616) * C6680 + (C15779 - C15780) * C6578 +
                      (C17103 - C17104) * C6681 + (C17293 - C17294) * C29557) *
                         C29555) *
                        C1055 +
                    (((C17100 - C17099) * C6680 + (C17292 - C17291) * C6578 +
                      (C29390 * C7538 - C13361 * C7536) * C6681 +
                      (C29390 * C7943 - C13361 * C7941) * C29557) *
                         C10011 +
                     ((C17104 - C17103) * C6680 + (C17294 - C17293) * C6578 +
                      (C29390 * C16898 - C13361 * C16897) * C6681 +
                      (C29390 * C17287 - C13361 * C17286) * C29557) *
                         C29555) *
                        C1056) *
                   C29425 * C29413) /
                      (p * q * std::sqrt(p + q));
    d2eezy[27] +=
        (-std::pow(Pi, 2.5) *
         (((C10011 * C152 - C10067 * C93 + C29555 * C678 - C10068 * C618) *
               C6680 +
           (C10011 * C491 - C10067 * C443 + C29555 * C966 - C10068 * C916) *
               C6578 +
           (C10011 * C1119 - C10067 * C1059 + C29555 * C2615 - C10068 * C2553) *
               C6681 +
           (C10011 * C1407 - C10067 * C1357 + C29555 * C2945 - C10068 * C2889) *
               C29557) *
              C29390 * C29439 * C612 +
          ((C10067 * C618 - C10011 * C678 + C10068 * C619 - C29555 * C681) *
               C6680 +
           (C10067 * C916 - C10011 * C966 + C10068 * C919 - C29555 * C969) *
               C6578 +
           (C10067 * C2553 - C10011 * C2615 + C10068 * C5929 - C29555 * C6017) *
               C6681 +
           (C10067 * C2889 - C10011 * C2945 + C10068 * C6377 - C29555 * C6451) *
               C29557) *
              C29390 * C29439 * C613 +
          ((C10011 * C681 - C10067 * C619 + C29555 * C3655 - C10068 * C3569) *
               C6680 +
           (C10011 * C969 - C10067 * C919 + C29555 * C4017 - C10068 * C3955) *
               C6578 +
           (C10011 * C6017 - C10067 * C5929 + C29555 * C15504 -
            C10068 * C15434) *
               C6681 +
           (C10011 * C6451 - C10067 * C6377 + C29555 * C15832 -
            C10068 * C15776) *
               C29557) *
              C29390 * C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C10011 * C152 - C10067 * C93 + C29555 * C678 - C10068 * C618) *
               C6680 +
           (C10011 * C491 - C10067 * C443 + C29555 * C966 - C10068 * C916) *
               C6578 +
           (C10011 * C1119 - C10067 * C1059 + C29555 * C2615 - C10068 * C2553) *
               C6681 +
           (C10011 * C1407 - C10067 * C1357 + C29555 * C2945 - C10068 * C2889) *
               C29557) *
              C29390 * C29439 * C29425 * C84 +
          ((C10071 - C10070 + C10073 - C10072) * C6680 +
           (C10417 - C10416 + C10419 - C10418) * C6578 +
           (C12210 - C12211 + C12212 - C12213) * C6681 +
           (C12628 - C12629 + C12630 - C12631) * C29557) *
              C29390 * C29439 * C29425 * C85 +
          ((C10079 - C10078 + C10081 - C10080) * C6680 +
           (C10421 - C10420 + C10423 - C10422) * C6578 +
           (C10011 * C1121 - C10067 * C1057 + C29555 * C2617 - C10068 * C2555) *
               C6681 +
           (C10011 * C1409 - C10067 * C1359 + C29555 * C2947 - C10068 * C2891) *
               C29557) *
              C29390 * C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C10011 * C152 - C10067 * C93 + C29555 * C678 - C10068 * C618) *
               C6680 +
           (C10011 * C491 - C10067 * C443 + C29555 * C966 - C10068 * C916) *
               C6578 +
           (C16975 - C16976 + C16977 - C16978) * C6681 +
           (C17346 - C17347 + C17348 - C17349) * C29557) *
              C29390 * C1054 +
          ((C16976 - C16975 + C16978 - C16977) * C6680 +
           (C17347 - C17346 + C17349 - C17348) * C6578 +
           (C16983 - C16984 + C16985 - C16986) * C6681 +
           (C17350 - C17351 + C17352 - C17353) * C29557) *
              C29390 * C1055 +
          ((C16984 - C16983 + C16986 - C16985) * C6680 +
           (C17351 - C17350 + C17353 - C17352) * C6578 +
           (C10011 * C7622 - C10067 * C7536 + C29555 * C16972 -
            C10068 * C16897) *
               C6681 +
           (C10011 * C8003 - C10067 * C7941 + C29555 * C17344 -
            C10068 * C17286) *
               C29557) *
              C29390 * C1056) *
         C29425 * C29413) /
            (p * q * std::sqrt(p + q));
    d2eezz[27] +=
        (-std::pow(Pi, 2.5) *
         (((C6680 * C215 - C7006 * C93 - C6680 * C443 + C6578 * C545 +
            C6681 * C1169 - C7007 * C1059 - C6681 * C1357 + C29557 * C1453) *
               C10011 +
           (C16844 + C16845) * C29555) *
              C29390 * C29439 * C612 -
          ((C16846 + C16847) * C29555 + (C16845 + C16844) * C10011) * C29390 *
              C29439 * C613 +
          ((C16847 + C16846) * C10011 +
           (C6680 * C3709 - C7006 * C3569 - C6680 * C3955 + C6578 * C4069 +
            C6681 * C15556 - C7007 * C15434 - C6681 * C15776 +
            C29557 * C15883) *
               C29555) *
              C29390 * C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C6680 * C215 - C7006 * C93 - C6680 * C443 + C6578 * C545 +
            C6681 * C1169 - C7007 * C1059 - C6681 * C1357 + C29557 * C1453) *
               C10011 +
           (C6680 * C728 - C7006 * C618 - C6680 * C916 + C6578 * C1012 +
            C6681 * C2671 - C7007 * C2553 - C6681 * C2889 + C29557 * C2998) *
               C29555) *
              C29390 * C29439 * C29425 * C84 -
          ((C8695 + C8696) * C29555 + (C7034 + C7033) * C10011) * C29390 *
              C29439 * C29425 * C85 +
          ((C7036 + C7035) * C10011 +
           (C6680 * C730 - C7006 * C616 - C6680 * C918 + C6578 * C1010 +
            C6681 * C2673 - C7007 * C2555 - C6681 * C2891 + C29557 * C3000) *
               C29555) *
              C29390 * C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C6680 * C215 - C7006 * C93 - C6680 * C443 + C6578 * C545 +
            C6681 * C1169 - C7007 * C1059 - C6681 * C1357 + C29557 * C1453) *
               C10011 +
           (C16844 + C16845) * C29555) *
              C29390 * C1054 -
          ((C6681 * C4254 - C7007 * C4142 - C6681 * C4466 + C29557 * C4572 +
            C6680 * C2671 - C7006 * C2553 - C6680 * C2889 + C6578 * C2998) *
               C29555 +
           (C6681 * C1172 - C7007 * C1060 - C6681 * C1360 + C29557 * C1454 +
            C6680 * C1169 - C7006 * C1059 - C6680 * C1357 + C6578 * C1453) *
               C10011) *
              C29390 * C1055 +
          ((C6680 * C1172 - C7006 * C1060 - C6680 * C1360 + C6578 * C1454 +
            C6681 * C7688 - C7007 * C7536 - C6681 * C7941 + C29557 * C8061) *
               C10011 +
           (C6680 * C4254 - C7006 * C4142 - C6680 * C4466 + C6578 * C4572 +
            C6681 * C17040 - C7007 * C16897 - C6681 * C17286 +
            C29557 * C17403) *
               C29555) *
              C29390 * C1056) *
         C29425 * C29413) /
            (p * q * std::sqrt(p + q));
    d2eexx[28] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C13361 * C98 - C13362 * C93 - C13361 * C99 + C29390 * C108) *
                 C6578 +
             C16920 * C29557) *
                C10011 +
            (C16392 + C16393) * C29555) *
               C2031 -
           ((C16921 * C29557 + C15452 * C6578) * C29555 +
            (C16922 * C29557 + C16920 * C6578) * C10011) *
               C2032) *
              C29425 * C1509 +
          (((C18086 * C6578 + (C13361 * C1071 - C13362 * C1061 -
                               C13361 * C1072 + C29390 * C1079) *
                                  C29557) *
                C10011 +
            (C17478 * C6578 + (C13361 * C4146 - C13362 * C4143 -
                               C13361 * C4147 + C29390 * C4149) *
                                  C29557) *
                C29555) *
               C2032 -
           ((C17479 + C17471) * C29555 +
            (C18086 * C29557 +
             (C13361 * C100 - C13362 * C94 - C13361 * C101 + C29390 * C109) *
                 C6578) *
                C10011) *
               C2031) *
              C29425 * C1510)) /
        (p * q * std::sqrt(p + q));
    d2eexy[28] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C10011 * C152 - C10067 * C93 + C29555 * C678 - C10068 * C618) *
                 C13361 +
             (C10011 * C157 - C10067 * C99 + C29555 * C684 - C10068 * C627) *
                 C29390) *
                C6578 +
            ((C16975 - C16976 + C16977 - C16978) * C13361 +
             (C16979 - C16980 + C16981 - C16982) * C29390) *
                C29557) *
               C2031 +
           (((C16976 - C16975 + C16978 - C16977) * C13361 +
             (C16980 - C16979 + C16982 - C16981) * C29390) *
                C6578 +
            ((C16983 - C16984 + C16985 - C16986) * C13361 +
             (C16987 - C16988 + C16989 - C16990) * C29390) *
                C29557) *
               C2032) *
              C29425 * C1509 +
          ((((C10071 - C10070 + C10073 - C10072) * C13361 +
             (C10075 - C10074 + C10077 - C10076) * C29390) *
                C6578 +
            ((C12210 - C12211 + C12212 - C12213) * C13361 +
             (C12214 - C12215 + C12216 - C12217) * C29390) *
                C29557) *
               C2031 +
           (((C12211 - C12210 + C12213 - C12212) * C13361 +
             (C12215 - C12214 + C12217 - C12216) * C29390) *
                C6578 +
            ((C10011 * C1123 - C10067 * C1061 + C29555 * C4201 -
              C10068 * C4143) *
                 C13361 +
             (C10011 * C1129 - C10067 * C1072 + C29555 * C4203 -
              C10068 * C4147) *
                 C29390) *
                C29557) *
               C2032) *
              C29425 * C1510)) /
        (p * q * std::sqrt(p + q));
    d2eexz[28] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C6578 * C215 - C6680 * C93 + C29557 * C1169 - C6681 * C1059) *
                 C13361 +
             (C6578 * C220 - C6680 * C99 + C29557 * C1175 - C6681 * C1068) *
                 C29390) *
                C10011 +
            ((C16496 - C16497 + C16498 - C16499) * C13361 +
             (C16500 - C16501 + C16502 - C16503) * C29390) *
                C29555) *
               C2031 +
           (((C6680 * C1059 - C6578 * C1169 + C6681 * C1060 - C29557 * C1172) *
                 C13361 +
             (C6680 * C1068 - C6578 * C1175 + C6681 * C1070 - C29557 * C1178) *
                 C29390) *
                C10011 +
            ((C6680 * C2553 - C6578 * C2671 + C6681 * C4142 - C29557 * C4254) *
                 C13361 +
             (C6680 * C2557 - C6578 * C2674 + C6681 * C4145 - C29557 * C4256) *
                 C29390) *
                C29555) *
               C2032) *
              C29425 * C1509 +
          ((((C6684 - C6683 + C6686 - C6685) * C13361 +
             (C6688 - C6687 + C6690 - C6689) * C29390) *
                C10011 +
            ((C8266 - C8267 + C8268 - C8269) * C13361 +
             (C8270 - C8271 + C8272 - C8273) * C29390) *
                C29555) *
               C2031 +
           (((C8914 - C8913 + C8916 - C8915) * C13361 +
             (C8918 - C8917 + C8920 - C8919) * C29390) *
                C10011 +
            ((C6578 * C2672 - C6680 * C2554 + C29557 * C4255 - C6681 * C4143) *
                 C13361 +
             (C6578 * C2675 - C6680 * C2559 + C29557 * C4257 - C6681 * C4147) *
                 C29390) *
                C29555) *
               C2032) *
              C29425 * C1510)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[28] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C29390 * C98 - C13361 * C93) * C10067 +
             (C29390 * C282 - C13361 * C277) * C10011 +
             (C13869 - C13870) * C10068 + (C13871 - C13872) * C29555) *
                C6578 +
            ((C17095 - C17096) * C10067 + (C17097 - C17098) * C10011 +
             (C15616 - C15615) * C10068 + (C15618 - C15617) * C29555) *
                C29557) *
               C2031 +
           (((C17096 - C17095) * C10067 + (C17098 - C17097) * C10011 +
             (C15615 - C15616) * C10068 + (C15617 - C15618) * C29555) *
                C6578 +
            ((C17099 - C17100) * C10067 + (C17101 - C17102) * C10011 +
             (C17103 - C17104) * C10068 + (C17105 - C17106) * C29555) *
                C29557) *
               C2032) *
              C29425 * C1509 +
          ((((C13361 * C94 - C29390 * C100) * C10067 +
             (C13361 * C278 - C29390 * C283) * C10011 +
             (C14673 - C14674) * C10068 + (C14675 - C14676) * C29555) *
                C6578 +
            ((C18285 - C18286) * C10067 + (C18287 - C18288) * C10011 +
             (C17678 - C17679) * C10068 + (C17680 - C17681) * C29555) *
                C29557) *
               C2031 +
           (((C18286 - C18285) * C10067 + (C18288 - C18287) * C10011 +
             (C17679 - C17678) * C10068 + (C17681 - C17680) * C29555) *
                C6578 +
            ((C29390 * C1071 - C13361 * C1061) * C10067 +
             (C29390 * C1229 - C13361 * C1223) * C10011 +
             (C29390 * C4146 - C13361 * C4143) * C10068 +
             (C29390 * C4311 - C13361 * C4309) * C29555) *
                C29557) *
               C2032) *
              C29425 * C1510)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[28] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C10067 * C152 - C10235 * C93 - C10067 * C277 + C10011 * C326 +
             C10068 * C678 - C10236 * C618 - C10068 * C778 + C29555 * C830) *
                C29390 * C6578 +
            (C17182 + C17183) * C29390 * C29557) *
               C2031 -
           ((C17184 + C17185) * C29390 * C29557 +
            (C17183 + C17182) * C29390 * C6578) *
               C2032) *
              C29425 * C1509 +
          (((C12429 + C12428) * C29390 * C6578 +
            (C10067 * C1123 - C10235 * C1061 - C10067 * C1223 + C10011 * C1273 +
             C10068 * C4201 - C10236 * C4143 - C10068 * C4309 +
             C29555 * C4363) *
                C29390 * C29557) *
               C2032 -
           ((C12428 + C12429) * C29390 * C29557 +
            (C10263 + C10262) * C29390 * C6578) *
               C2031) *
              C29425 * C1510)) /
        (p * q * std::sqrt(p + q));
    d2eeyz[28] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C6578 * C215 - C6680 * C93 + C29557 * C1169 - C6681 * C1059) *
                C10067 +
            (C6578 * C390 - C6680 * C277 + C29557 * C1313 - C6681 * C1219) *
                C10011 +
            (C16496 - C16497 + C16498 - C16499) * C10068 +
            (C16662 - C16663 + C16664 - C16665) * C29555) *
               C29390 * C2031 +
           ((C6680 * C1059 - C6578 * C1169 + C6681 * C1060 - C29557 * C1172) *
                C10067 +
            (C6680 * C1219 - C6578 * C1313 + C6681 * C1222 - C29557 * C1316) *
                C10011 +
            (C6680 * C2553 - C6578 * C2671 + C6681 * C4142 - C29557 * C4254) *
                C10068 +
            (C6680 * C2727 - C6578 * C2836 + C6681 * C4308 - C29557 * C4414) *
                C29555) *
               C29390 * C2032) *
              C29425 * C1509 +
          (((C6684 - C6683 + C6686 - C6685) * C10067 +
            (C6850 - C6849 + C6852 - C6851) * C10011 +
            (C8266 - C8267 + C8268 - C8269) * C10068 +
            (C8479 - C8480 + C8481 - C8482) * C29555) *
               C29390 * C2031 +
           ((C8914 - C8913 + C8916 - C8915) * C10067 +
            (C9130 - C9129 + C9132 - C9131) * C10011 +
            (C6578 * C2672 - C6680 * C2554 + C29557 * C4255 - C6681 * C4143) *
                C10068 +
            (C6578 * C2837 - C6680 * C2728 + C29557 * C4415 - C6681 * C4309) *
                C29555) *
               C29390 * C2032) *
              C29425 * C1510)) /
        (p * q * std::sqrt(p + q));
    d2eezx[28] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C29390 * C98 - C13361 * C93) * C6680 +
                       (C29390 * C448 - C13361 * C443) * C6578 +
                       (C17095 - C17096) * C6681 + (C17289 - C17290) * C29557) *
                          C10011 +
                      ((C13869 - C13870) * C6680 + (C14004 - C14005) * C6578 +
                       (C15616 - C15615) * C6681 + (C15780 - C15779) * C29557) *
                          C29555) *
                         C2031 +
                     (((C17096 - C17095) * C6680 + (C17290 - C17289) * C6578 +
                       (C17099 - C17100) * C6681 + (C17291 - C17292) * C29557) *
                          C10011 +
                      ((C15615 - C15616) * C6680 + (C15779 - C15780) * C6578 +
                       (C17103 - C17104) * C6681 + (C17293 - C17294) * C29557) *
                          C29555) *
                         C2032) *
                        C29425 * C1509 +
                    ((((C13361 * C94 - C29390 * C100) * C6680 +
                       (C13361 * C444 - C29390 * C449) * C6578 +
                       (C18285 - C18286) * C6681 + (C18487 - C18488) * C29557) *
                          C10011 +
                      ((C14673 - C14674) * C6680 + (C14831 - C14832) * C6578 +
                       (C17678 - C17679) * C6681 + (C17880 - C17881) * C29557) *
                          C29555) *
                         C2031 +
                     (((C18286 - C18285) * C6680 + (C18488 - C18487) * C6578 +
                       (C29390 * C1071 - C13361 * C1061) * C6681 +
                       (C29390 * C1367 - C13361 * C1361) * C29557) *
                          C10011 +
                      ((C17679 - C17678) * C6680 + (C17881 - C17880) * C6578 +
                       (C29390 * C4146 - C13361 * C4143) * C6681 +
                       (C29390 * C4469 - C13361 * C4467) * C29557) *
                          C29555) *
                         C2032) *
                        C29425 * C1510)) /
                  (p * q * std::sqrt(p + q));
    d2eezy[28] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C10011 * C152 - C10067 * C93 + C29555 * C678 - C10068 * C618) *
                C6680 +
            (C10011 * C491 - C10067 * C443 + C29555 * C966 - C10068 * C916) *
                C6578 +
            (C16975 - C16976 + C16977 - C16978) * C6681 +
            (C17346 - C17347 + C17348 - C17349) * C29557) *
               C29390 * C2031 +
           ((C16976 - C16975 + C16978 - C16977) * C6680 +
            (C17347 - C17346 + C17349 - C17348) * C6578 +
            (C16983 - C16984 + C16985 - C16986) * C6681 +
            (C17350 - C17351 + C17352 - C17353) * C29557) *
               C29390 * C2032) *
              C29425 * C1509 +
          (((C10071 - C10070 + C10073 - C10072) * C6680 +
            (C10417 - C10416 + C10419 - C10418) * C6578 +
            (C12210 - C12211 + C12212 - C12213) * C6681 +
            (C12628 - C12629 + C12630 - C12631) * C29557) *
               C29390 * C2031 +
           ((C12211 - C12210 + C12213 - C12212) * C6680 +
            (C12629 - C12628 + C12631 - C12630) * C6578 +
            (C10011 * C1123 - C10067 * C1061 + C29555 * C4201 -
             C10068 * C4143) *
                C6681 +
            (C10011 * C1411 - C10067 * C1361 + C29555 * C4521 -
             C10068 * C4467) *
                C29557) *
               C29390 * C2032) *
              C29425 * C1510)) /
        (p * q * std::sqrt(p + q));
    d2eezz[28] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C6680 * C215 - C7006 * C93 - C6680 * C443 + C6578 * C545 +
             C6681 * C1169 - C7007 * C1059 - C6681 * C1357 + C29557 * C1453) *
                C10011 +
            (C16844 + C16845) * C29555) *
               C29390 * C2031 -
           ((C6681 * C4254 - C7007 * C4142 - C6681 * C4466 + C29557 * C4572 +
             C6680 * C2671 - C7006 * C2553 - C6680 * C2889 + C6578 * C2998) *
                C29555 +
            (C6681 * C1172 - C7007 * C1060 - C6681 * C1360 + C29557 * C1454 +
             C6680 * C1169 - C7006 * C1059 - C6680 * C1357 + C6578 * C1453) *
                C10011) *
               C29390 * C2032) *
              C29425 * C1509 +
          (((C9350 + C9349) * C10011 +
            (C6680 * C2672 - C7006 * C2554 - C6680 * C2890 + C6578 * C2999 +
             C6681 * C4255 - C7007 * C4143 - C6681 * C4467 + C29557 * C4573) *
                C29555) *
               C29390 * C2032 -
           ((C8695 + C8696) * C29555 + (C7034 + C7033) * C10011) * C29390 *
               C2031) *
              C29425 * C1510)) /
        (p * q * std::sqrt(p + q));
    d2eexx[29] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13361 * C98 - C13362 * C93 - C13361 * C99 + C29390 * C108) *
                C6578 +
            (C13361 * C1067 - C13362 * C1059 - C13361 * C1068 +
             C29390 * C1077) *
                C29557) *
               C10011 +
           (C13734 * C6578 + C15452 * C29557) * C29555) *
              C29439 * C29425 * C84 -
          (((C13361 * C2558 - C13362 * C2554 - C13361 * C2559 +
             C29390 * C2563) *
                C29557 +
            C14519 * C6578) *
               C29555 +
           ((C13361 * C1065 - C13362 * C1058 - C13361 * C1066 +
             C29390 * C1076) *
                C29557 +
            (C13361 * C100 - C13362 * C94 - C13361 * C101 + C29390 * C109) *
                C6578) *
               C10011) *
              C29439 * C29425 * C85 +
          (((C13361 * C102 - C13362 * C95 - C13361 * C103 + C29390 * C110) *
                C6578 +
            (C13361 * C1063 - C13362 * C1057 - C13361 * C1064 +
             C29390 * C1075) *
                C29557) *
               C10011 +
           ((C13361 * C622 - C13362 * C616 - C13361 * C623 + C29390 * C634) *
                C6578 +
            (C13361 * C2560 - C13362 * C2555 - C13361 * C2561 +
             C29390 * C2564) *
                C29557) *
               C29555) *
              C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13361 * C98 - C13362 * C93 - C13361 * C99 + C29390 * C108) *
                C6578 +
            (C13361 * C1067 - C13362 * C1059 - C13361 * C1068 +
             C29390 * C1077) *
                C29557) *
               C10011 +
           (C16392 + C16393) * C29555) *
              C29439 * C612 -
          ((C16394 + C16395) * C29555 + (C16393 + C16392) * C10011) * C29439 *
              C613 +
          ((C16395 + C16394) * C10011 +
           (C13736 * C6578 + (C13361 * C15435 - C13362 * C15434 -
                              C13361 * C15436 + C29390 * C15437) *
                                 C29557) *
               C29555) *
              C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q));
    d2eexy[29] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10011 * C152 - C10067 * C93 + C29555 * C678 - C10068 * C618) *
                C13361 +
            (C10011 * C157 - C10067 * C99 + C29555 * C684 - C10068 * C627) *
                C29390) *
               C6578 +
           ((C10011 * C1119 - C10067 * C1059 + C29555 * C2615 -
             C10068 * C2553) *
                C13361 +
            (C10011 * C1125 - C10067 * C1068 + C29555 * C2618 -
             C10068 * C2557) *
                C29390) *
               C29557) *
              C29439 * C29425 * C84 +
          (((C10071 - C10070 + C10073 - C10072) * C13361 +
            (C10075 - C10074 + C10077 - C10076) * C29390) *
               C6578 +
           ((C12210 - C12211 + C12212 - C12213) * C13361 +
            (C12214 - C12215 + C12216 - C12217) * C29390) *
               C29557) *
              C29439 * C29425 * C85 +
          (((C10079 - C10078 + C10081 - C10080) * C13361 +
            (C10083 - C10082 + C10085 - C10084) * C29390) *
               C6578 +
           ((C10011 * C1121 - C10067 * C1057 + C29555 * C2617 -
             C10068 * C2555) *
                C13361 +
            (C10011 * C1127 - C10067 * C1064 + C29555 * C2620 -
             C10068 * C2561) *
                C29390) *
               C29557) *
              C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10011 * C152 - C10067 * C93 + C29555 * C678 - C10068 * C618) *
                C13361 +
            (C10011 * C157 - C10067 * C99 + C29555 * C684 - C10068 * C627) *
                C29390) *
               C6578 +
           ((C10011 * C1119 - C10067 * C1059 + C29555 * C2615 -
             C10068 * C2553) *
                C13361 +
            (C10011 * C1125 - C10067 * C1068 + C29555 * C2618 -
             C10068 * C2557) *
                C29390) *
               C29557) *
              C29439 * C612 +
          (((C10067 * C618 - C10011 * C678 + C10068 * C619 - C29555 * C681) *
                C13361 +
            (C10067 * C627 - C10011 * C684 + C10068 * C629 - C29555 * C687) *
                C29390) *
               C6578 +
           ((C10067 * C2553 - C10011 * C2615 + C10068 * C5929 -
             C29555 * C6017) *
                C13361 +
            (C10067 * C2557 - C10011 * C2618 + C10068 * C5932 -
             C29555 * C6019) *
                C29390) *
               C29557) *
              C29439 * C613 +
          (((C10011 * C681 - C10067 * C619 + C29555 * C3655 - C10068 * C3569) *
                C13361 +
            (C10011 * C687 - C10067 * C629 + C29555 * C3657 - C10068 * C3572) *
                C29390) *
               C6578 +
           ((C10011 * C6017 - C10067 * C5929 + C29555 * C15504 -
             C10068 * C15434) *
                C13361 +
            (C10011 * C6019 - C10067 * C5932 + C29555 * C15505 -
             C10068 * C15436) *
                C29390) *
               C29557) *
              C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q));
    d2eexz[29] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6578 * C215 - C6680 * C93 + C29557 * C1169 - C6681 * C1059) *
                C13361 +
            (C6578 * C220 - C6680 * C99 + C29557 * C1175 - C6681 * C1068) *
                C29390) *
               C10011 +
           ((C6578 * C728 - C6680 * C618 + C29557 * C2671 - C6681 * C2553) *
                C13361 +
            (C6578 * C734 - C6680 * C627 + C29557 * C2674 - C6681 * C2557) *
                C29390) *
               C29555) *
              C29439 * C29425 * C84 +
          (((C6684 - C6683 + C6686 - C6685) * C13361 +
            (C6688 - C6687 + C6690 - C6689) * C29390) *
               C10011 +
           ((C8266 - C8267 + C8268 - C8269) * C13361 +
            (C8270 - C8271 + C8272 - C8273) * C29390) *
               C29555) *
              C29439 * C29425 * C85 +
          (((C6692 - C6691 + C6694 - C6693) * C13361 +
            (C6696 - C6695 + C6698 - C6697) * C29390) *
               C10011 +
           ((C6578 * C730 - C6680 * C616 + C29557 * C2673 - C6681 * C2555) *
                C13361 +
            (C6578 * C736 - C6680 * C623 + C29557 * C2676 - C6681 * C2561) *
                C29390) *
               C29555) *
              C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6578 * C215 - C6680 * C93 + C29557 * C1169 - C6681 * C1059) *
                C13361 +
            (C6578 * C220 - C6680 * C99 + C29557 * C1175 - C6681 * C1068) *
                C29390) *
               C10011 +
           ((C16496 - C16497 + C16498 - C16499) * C13361 +
            (C16500 - C16501 + C16502 - C16503) * C29390) *
               C29555) *
              C29439 * C612 +
          (((C16497 - C16496 + C16499 - C16498) * C13361 +
            (C16501 - C16500 + C16503 - C16502) * C29390) *
               C10011 +
           ((C16504 - C16505 + C16506 - C16507) * C13361 +
            (C16508 - C16509 + C16510 - C16511) * C29390) *
               C29555) *
              C29439 * C613 +
          (((C16505 - C16504 + C16507 - C16506) * C13361 +
            (C16509 - C16508 + C16511 - C16510) * C29390) *
               C10011 +
           ((C6578 * C3709 - C6680 * C3569 + C29557 * C15556 - C6681 * C15434) *
                C13361 +
            (C6578 * C3711 - C6680 * C3572 + C29557 * C15557 - C6681 * C15436) *
                C29390) *
               C29555) *
              C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q));
    d2eeyx[29] += (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C29390 * C98 - C13361 * C93) * C10067 +
                      (C29390 * C282 - C13361 * C277) * C10011 +
                      (C13869 - C13870) * C10068 + (C13871 - C13872) * C29555) *
                         C6578 +
                     ((C29390 * C1067 - C13361 * C1059) * C10067 +
                      (C29390 * C1225 - C13361 * C1219) * C10011 +
                      (C15616 - C15615) * C10068 + (C15618 - C15617) * C29555) *
                         C29557) *
                        C29439 * C29425 * C84 +
                    (((C13361 * C94 - C29390 * C100) * C10067 +
                      (C13361 * C278 - C29390 * C283) * C10011 +
                      (C14673 - C14674) * C10068 + (C14675 - C14676) * C29555) *
                         C6578 +
                     ((C13361 * C1058 - C29390 * C1065) * C10067 +
                      (C13361 * C1220 - C29390 * C1226) * C10011 +
                      (C13361 * C2554 - C29390 * C2558) * C10068 +
                      (C13361 * C2728 - C29390 * C2731) * C29555) *
                         C29557) *
                        C29439 * C29425 * C85 +
                    (((C29390 * C102 - C13361 * C95) * C10067 +
                      (C29390 * C284 - C13361 * C279) * C10011 +
                      (C29390 * C622 - C13361 * C616) * C10068 +
                      (C29390 * C786 - C13361 * C780) * C29555) *
                         C6578 +
                     ((C29390 * C1063 - C13361 * C1057) * C10067 +
                      (C29390 * C1227 - C13361 * C1221) * C10011 +
                      (C29390 * C2560 - C13361 * C2555) * C10068 +
                      (C29390 * C2732 - C13361 * C2729) * C29555) *
                         C29557) *
                        C29439 * C29425 * C86)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C29390 * C98 - C13361 * C93) * C10067 +
                      (C29390 * C282 - C13361 * C277) * C10011 +
                      (C13869 - C13870) * C10068 + (C13871 - C13872) * C29555) *
                         C6578 +
                     ((C29390 * C1067 - C13361 * C1059) * C10067 +
                      (C29390 * C1225 - C13361 * C1219) * C10011 +
                      (C15616 - C15615) * C10068 + (C15618 - C15617) * C29555) *
                         C29557) *
                        C29439 * C612 +
                    (((C13870 - C13869) * C10067 + (C13872 - C13871) * C10011 +
                      (C13874 - C13873) * C10068 + (C13876 - C13875) * C29555) *
                         C6578 +
                     ((C15615 - C15616) * C10067 + (C15617 - C15618) * C10011 +
                      (C15619 - C15620) * C10068 + (C15621 - C15622) * C29555) *
                         C29557) *
                        C29439 * C613 +
                    ((C13881 * C10067 + C13882 * C10011 +
                      (C13878 - C13877) * C10068 + (C13880 - C13879) * C29555) *
                         C6578 +
                     ((C15620 - C15619) * C10067 + (C15622 - C15621) * C10011 +
                      (C29390 * C15435 - C13361 * C15434) * C10068 +
                      (C29390 * C15613 - C13361 * C15612) * C29555) *
                         C29557) *
                        C29439 * C614) *
                   C29413) /
                      (p * q * std::sqrt(p + q));
    d2eeyy[29] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C10067 * C152 - C10235 * C93 - C10067 * C277 + C10011 * C326 +
            C10068 * C678 - C10236 * C618 - C10068 * C778 + C29555 * C830) *
               C29390 * C6578 +
           (C10067 * C1119 - C10235 * C1059 - C10067 * C1219 + C10011 * C1271 +
            C10068 * C2615 - C10236 * C2553 - C10068 * C2727 + C29555 * C2783) *
               C29390 * C29557) *
              C29439 * C29425 * C84 -
          ((C12428 + C12429) * C29390 * C29557 +
           (C10263 + C10262) * C29390 * C6578) *
              C29439 * C29425 * C85 +
          ((C10265 + C10264) * C29390 * C6578 +
           (C10067 * C1121 - C10235 * C1057 - C10067 * C1221 + C10011 * C1269 +
            C10068 * C2617 - C10236 * C2555 - C10068 * C2729 + C29555 * C2785) *
               C29390 * C29557) *
              C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C10067 * C152 - C10235 * C93 - C10067 * C277 + C10011 * C326 +
            C10068 * C678 - C10236 * C618 - C10068 * C778 + C29555 * C830) *
               C29390 * C6578 +
           (C10067 * C1119 - C10235 * C1059 - C10067 * C1219 + C10011 * C1271 +
            C10068 * C2615 - C10236 * C2553 - C10068 * C2727 + C29555 * C2783) *
               C29390 * C29557) *
              C29439 * C612 -
          ((C10068 * C6017 - C10236 * C5929 - C10068 * C6161 + C29555 * C6239 +
            C10067 * C2615 - C10235 * C2553 - C10067 * C2727 + C10011 * C2783) *
               C29390 * C29557 +
           (C10068 * C681 - C10236 * C619 - C10068 * C781 + C29555 * C831 +
            C10067 * C678 - C10235 * C618 - C10067 * C778 + C10011 * C830) *
               C29390 * C6578) *
              C29439 * C613 +
          ((C10067 * C681 - C10235 * C619 - C10067 * C781 + C10011 * C831 +
            C10068 * C3655 - C10236 * C3569 - C10068 * C3775 + C29555 * C3845) *
               C29390 * C6578 +
           (C10067 * C6017 - C10235 * C5929 - C10067 * C6161 + C10011 * C6239 +
            C10068 * C15504 - C10236 * C15434 - C10068 * C15612 +
            C29555 * C15672) *
               C29390 * C29557) *
              C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q));
    d2eeyz[29] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C6578 * C215 - C6680 * C93 + C29557 * C1169 - C6681 * C1059) *
               C10067 +
           (C6578 * C390 - C6680 * C277 + C29557 * C1313 - C6681 * C1219) *
               C10011 +
           (C6578 * C728 - C6680 * C618 + C29557 * C2671 - C6681 * C2553) *
               C10068 +
           (C6578 * C872 - C6680 * C778 + C29557 * C2836 - C6681 * C2727) *
               C29555) *
              C29390 * C29439 * C29425 * C84 +
          ((C6684 - C6683 + C6686 - C6685) * C10067 +
           (C6850 - C6849 + C6852 - C6851) * C10011 +
           (C8266 - C8267 + C8268 - C8269) * C10068 +
           (C8479 - C8480 + C8481 - C8482) * C29555) *
              C29390 * C29439 * C29425 * C85 +
          ((C6692 - C6691 + C6694 - C6693) * C10067 +
           (C6854 - C6853 + C6856 - C6855) * C10011 +
           (C6578 * C730 - C6680 * C616 + C29557 * C2673 - C6681 * C2555) *
               C10068 +
           (C6578 * C874 - C6680 * C780 + C29557 * C2838 - C6681 * C2729) *
               C29555) *
              C29390 * C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C6578 * C215 - C6680 * C93 + C29557 * C1169 - C6681 * C1059) *
               C10067 +
           (C6578 * C390 - C6680 * C277 + C29557 * C1313 - C6681 * C1219) *
               C10011 +
           (C16496 - C16497 + C16498 - C16499) * C10068 +
           (C16662 - C16663 + C16664 - C16665) * C29555) *
              C29390 * C29439 * C612 +
          ((C16497 - C16496 + C16499 - C16498) * C10067 +
           (C16663 - C16662 + C16665 - C16664) * C10011 +
           (C16504 - C16505 + C16506 - C16507) * C10068 +
           (C16666 - C16667 + C16668 - C16669) * C29555) *
              C29390 * C29439 * C613 +
          ((C16505 - C16504 + C16507 - C16506) * C10067 +
           (C16667 - C16666 + C16669 - C16668) * C10011 +
           (C6578 * C3709 - C6680 * C3569 + C29557 * C15556 - C6681 * C15434) *
               C10068 +
           (C6578 * C3897 - C6680 * C3775 + C29557 * C15723 - C6681 * C15612) *
               C29555) *
              C29390 * C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q));
    d2eezx[29] += (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C29390 * C98 - C13361 * C93) * C6680 +
                      (C29390 * C448 - C13361 * C443) * C6578 +
                      (C29390 * C1067 - C13361 * C1059) * C6681 +
                      (C29390 * C1363 - C13361 * C1357) * C29557) *
                         C10011 +
                     ((C13869 - C13870) * C6680 + (C14004 - C14005) * C6578 +
                      (C15616 - C15615) * C6681 + (C15780 - C15779) * C29557) *
                         C29555) *
                        C29439 * C29425 * C84 +
                    (((C13361 * C94 - C29390 * C100) * C6680 +
                      (C13361 * C444 - C29390 * C449) * C6578 +
                      (C13361 * C1058 - C29390 * C1065) * C6681 +
                      (C13361 * C1358 - C29390 * C1364) * C29557) *
                         C10011 +
                     ((C14673 - C14674) * C6680 + (C14831 - C14832) * C6578 +
                      (C13361 * C2554 - C29390 * C2558) * C6681 +
                      (C13361 * C2890 - C29390 * C2893) * C29557) *
                         C29555) *
                        C29439 * C29425 * C85 +
                    (((C29390 * C102 - C13361 * C95) * C6680 +
                      (C29390 * C450 - C13361 * C445) * C6578 +
                      (C29390 * C1063 - C13361 * C1057) * C6681 +
                      (C29390 * C1365 - C13361 * C1359) * C29557) *
                         C10011 +
                     ((C29390 * C622 - C13361 * C616) * C6680 +
                      (C29390 * C924 - C13361 * C918) * C6578 +
                      (C29390 * C2560 - C13361 * C2555) * C6681 +
                      (C29390 * C2894 - C13361 * C2891) * C29557) *
                         C29555) *
                        C29439 * C29425 * C86)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C29390 * C98 - C13361 * C93) * C6680 +
                      (C29390 * C448 - C13361 * C443) * C6578 +
                      (C29390 * C1067 - C13361 * C1059) * C6681 +
                      (C29390 * C1363 - C13361 * C1357) * C29557) *
                         C10011 +
                     ((C13869 - C13870) * C6680 + (C14004 - C14005) * C6578 +
                      (C15616 - C15615) * C6681 + (C15780 - C15779) * C29557) *
                         C29555) *
                        C29439 * C612 +
                    (((C13870 - C13869) * C6680 + (C14005 - C14004) * C6578 +
                      (C15615 - C15616) * C6681 + (C15779 - C15780) * C29557) *
                         C10011 +
                     ((C13874 - C13873) * C6680 + (C14008 - C14007) * C6578 +
                      (C15619 - C15620) * C6681 + (C15781 - C15782) * C29557) *
                         C29555) *
                        C29439 * C613 +
                    ((C13881 * C6680 + C14011 * C6578 +
                      (C15620 - C15619) * C6681 + (C15782 - C15781) * C29557) *
                         C10011 +
                     ((C13878 - C13877) * C6680 + (C14010 - C14009) * C6578 +
                      (C29390 * C15435 - C13361 * C15434) * C6681 +
                      (C29390 * C15777 - C13361 * C15776) * C29557) *
                         C29555) *
                        C29439 * C614) *
                   C29413) /
                      (p * q * std::sqrt(p + q));
    d2eezy[29] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C10011 * C152 - C10067 * C93 + C29555 * C678 - C10068 * C618) *
               C6680 +
           (C10011 * C491 - C10067 * C443 + C29555 * C966 - C10068 * C916) *
               C6578 +
           (C10011 * C1119 - C10067 * C1059 + C29555 * C2615 - C10068 * C2553) *
               C6681 +
           (C10011 * C1407 - C10067 * C1357 + C29555 * C2945 - C10068 * C2889) *
               C29557) *
              C29390 * C29439 * C29425 * C84 +
          ((C10071 - C10070 + C10073 - C10072) * C6680 +
           (C10417 - C10416 + C10419 - C10418) * C6578 +
           (C12210 - C12211 + C12212 - C12213) * C6681 +
           (C12628 - C12629 + C12630 - C12631) * C29557) *
              C29390 * C29439 * C29425 * C85 +
          ((C10079 - C10078 + C10081 - C10080) * C6680 +
           (C10421 - C10420 + C10423 - C10422) * C6578 +
           (C10011 * C1121 - C10067 * C1057 + C29555 * C2617 - C10068 * C2555) *
               C6681 +
           (C10011 * C1409 - C10067 * C1359 + C29555 * C2947 - C10068 * C2891) *
               C29557) *
              C29390 * C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C10011 * C152 - C10067 * C93 + C29555 * C678 - C10068 * C618) *
               C6680 +
           (C10011 * C491 - C10067 * C443 + C29555 * C966 - C10068 * C916) *
               C6578 +
           (C10011 * C1119 - C10067 * C1059 + C29555 * C2615 - C10068 * C2553) *
               C6681 +
           (C10011 * C1407 - C10067 * C1357 + C29555 * C2945 - C10068 * C2889) *
               C29557) *
              C29390 * C29439 * C612 +
          ((C10067 * C618 - C10011 * C678 + C10068 * C619 - C29555 * C681) *
               C6680 +
           (C10067 * C916 - C10011 * C966 + C10068 * C919 - C29555 * C969) *
               C6578 +
           (C10067 * C2553 - C10011 * C2615 + C10068 * C5929 - C29555 * C6017) *
               C6681 +
           (C10067 * C2889 - C10011 * C2945 + C10068 * C6377 - C29555 * C6451) *
               C29557) *
              C29390 * C29439 * C613 +
          ((C10011 * C681 - C10067 * C619 + C29555 * C3655 - C10068 * C3569) *
               C6680 +
           (C10011 * C969 - C10067 * C919 + C29555 * C4017 - C10068 * C3955) *
               C6578 +
           (C10011 * C6017 - C10067 * C5929 + C29555 * C15504 -
            C10068 * C15434) *
               C6681 +
           (C10011 * C6451 - C10067 * C6377 + C29555 * C15832 -
            C10068 * C15776) *
               C29557) *
              C29390 * C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q));
    d2eezz[29] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C6680 * C215 - C7006 * C93 - C6680 * C443 + C6578 * C545 +
            C6681 * C1169 - C7007 * C1059 - C6681 * C1357 + C29557 * C1453) *
               C10011 +
           (C6680 * C728 - C7006 * C618 - C6680 * C916 + C6578 * C1012 +
            C6681 * C2671 - C7007 * C2553 - C6681 * C2889 + C29557 * C2998) *
               C29555) *
              C29390 * C29439 * C29425 * C84 -
          ((C8695 + C8696) * C29555 + (C7034 + C7033) * C10011) * C29390 *
              C29439 * C29425 * C85 +
          ((C7036 + C7035) * C10011 +
           (C6680 * C730 - C7006 * C616 - C6680 * C918 + C6578 * C1010 +
            C6681 * C2673 - C7007 * C2555 - C6681 * C2891 + C29557 * C3000) *
               C29555) *
              C29390 * C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C6680 * C215 - C7006 * C93 - C6680 * C443 + C6578 * C545 +
            C6681 * C1169 - C7007 * C1059 - C6681 * C1357 + C29557 * C1453) *
               C10011 +
           (C16844 + C16845) * C29555) *
              C29390 * C29439 * C612 -
          ((C16846 + C16847) * C29555 + (C16845 + C16844) * C10011) * C29390 *
              C29439 * C613 +
          ((C16847 + C16846) * C10011 +
           (C6680 * C3709 - C7006 * C3569 - C6680 * C3955 + C6578 * C4069 +
            C6681 * C15556 - C7007 * C15434 - C6681 * C15776 +
            C29557 * C15883) *
               C29555) *
              C29390 * C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q));
    d2eexx[30] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C10013 * C98 - C10014 * C93 - C10013 * C99 + C10009 * C108 +
             C10015 * C100 - C10016 * C94 - C10015 * C101 + C29548 * C109) *
                C19324 +
            (C20307 + C20308) * C29557) *
               C29484 * C29439 * C1507 -
           ((C12778 + C12779) * C29557 + (C10553 + C10552) * C19324) * C29484 *
               C29439 * C1508) *
              C1509 +
          (((C11508 + C11509) * C19324 +
            (C10013 * C2558 - C10014 * C2554 - C10013 * C2559 + C10009 * C2563 +
             C10015 * C2560 - C10016 * C2555 - C10015 * C2561 +
             C29548 * C2564) *
                C29557) *
               C29484 * C29439 * C1508 -
           ((C10015 * C1063 - C10016 * C1057 - C10015 * C1064 + C29548 * C1075 +
             C10013 * C1065 - C10014 * C1058 - C10013 * C1066 +
             C10009 * C1076) *
                C29557 +
            (C10015 * C102 - C10016 * C95 - C10015 * C103 + C29548 * C110 +
             C10013 * C100 - C10014 * C94 - C10013 * C101 + C10009 * C109) *
                C19324) *
               C29484 * C29439 * C1507) *
              C1510)) /
        (p * q * std::sqrt(p + q));
    d2eexy[30] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C29484 * C152 - C151 * C93) * C10013 +
                       (C29484 * C157 - C151 * C99) * C10009 +
                       (C163 - C164) * C10015 + (C165 - C166) * C29548) *
                          C19324 +
                      ((C7627 - C7628) * C10013 + (C7629 - C7630) * C10009 +
                       C8843 * C10015 + C8844 * C29548) *
                          C29557) *
                         C29439 * C1507 +
                     (((C151 * C618 - C29484 * C678) * C10013 +
                       (C151 * C627 - C29484 * C684) * C10009 +
                       (C1568 - C1569) * C10015 + (C1570 - C1571) * C29548) *
                          C19324 +
                      ((C9483 - C9484) * C10013 + (C9485 - C9486) * C10009 +
                       (C8196 - C8197) * C10015 + (C8198 - C8199) * C29548) *
                          C29557) *
                         C29439 * C1508) *
                        C1509 +
                    ((((C164 - C163) * C10013 + (C166 - C165) * C10009 +
                       (C168 - C167) * C10015 + (C170 - C169) * C29548) *
                          C19324 +
                      (C8845 * C10013 + C8846 * C10009 +
                       (C2094 - C2095) * C10015 + (C2096 - C2097) * C29548) *
                          C29557) *
                         C29439 * C1507 +
                     (((C1569 - C1568) * C10013 + (C1571 - C1570) * C10009 +
                       (C1573 - C1572) * C10015 + (C1575 - C1574) * C29548) *
                          C19324 +
                      ((C8197 - C8196) * C10013 + (C8199 - C8198) * C10009 +
                       (C29484 * C2617 - C151 * C2555) * C10015 +
                       (C29484 * C2620 - C151 * C2561) * C29548) *
                          C29557) *
                         C29439 * C1508) *
                        C1510)) /
                  (p * q * std::sqrt(p + q));
    d2eexz[30] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C19324 * C215 - C19426 * C93 + C29557 * C1169 - C19427 * C1059) *
                C10013 +
            (C19324 * C220 - C19426 * C99 + C29557 * C1175 - C19427 * C1068) *
                C10009 +
            (C19429 - C19430 + C19431 - C19432) * C10015 +
            (C19433 - C19434 + C19435 - C19436) * C29548) *
               C29484 * C29439 * C1507 +
           ((C19426 * C618 - C19324 * C728 + C19427 * C2553 - C29557 * C2671) *
                C10013 +
            (C19426 * C627 - C19324 * C734 + C19427 * C2557 - C29557 * C2674) *
                C10009 +
            (C20937 - C20938 + C20939 - C20940) * C10015 +
            (C20941 - C20942 + C20943 - C20944) * C29548) *
               C29484 * C29439 * C1508) *
              C1509 +
          (((C19430 - C19429 + C19432 - C19431) * C10013 +
            (C19434 - C19433 + C19436 - C19435) * C10009 +
            (C19437 - C19438 + C19439 - C19440) * C10015 +
            (C19441 - C19442 + C19443 - C19444) * C29548) *
               C29484 * C29439 * C1507 +
           ((C20938 - C20937 + C20940 - C20939) * C10013 +
            (C20942 - C20941 + C20944 - C20943) * C10009 +
            (C19324 * C730 - C19426 * C616 + C29557 * C2673 - C19427 * C2555) *
                C10015 +
            (C19324 * C736 - C19426 * C623 + C29557 * C2676 - C19427 * C2561) *
                C29548) *
               C29484 * C29439 * C1508) *
              C1510)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[30] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C10009 * C98 - C10013 * C93 + C29548 * C100 - C10015 * C94) *
                 C151 +
             (C10009 * C282 - C10013 * C277 + C29548 * C283 - C10015 * C278) *
                 C29484) *
                C19324 +
            ((C20461 - C20462 + C20463 - C20464) * C151 +
             (C20465 - C20466 + C20467 - C20468) * C29484) *
                C29557) *
               C29439 * C1507 +
           (((C10707 - C10706 + C10709 - C10708) * C151 +
             (C10711 - C10710 + C10713 - C10712) * C29484) *
                C19324 +
            ((C12978 - C12979 + C12980 - C12981) * C151 +
             (C12982 - C12983 + C12984 - C12985) * C29484) *
                C29557) *
               C29439 * C1508) *
              C1509 +
          ((((C10013 * C94 - C10009 * C100 + C10015 * C95 - C29548 * C102) *
                 C151 +
             (C10013 * C278 - C10009 * C283 + C10015 * C279 - C29548 * C284) *
                 C29484) *
                C19324 +
            ((C10013 * C1058 - C10009 * C1065 + C10015 * C1057 -
              C29548 * C1063) *
                 C151 +
             (C10013 * C1220 - C10009 * C1226 + C10015 * C1221 -
              C29548 * C1227) *
                 C29484) *
                C29557) *
               C29439 * C1507 +
           (((C11717 - C11716 + C11719 - C11718) * C151 +
             (C11721 - C11720 + C11723 - C11722) * C29484) *
                C19324 +
            ((C10009 * C2558 - C10013 * C2554 + C29548 * C2560 -
              C10015 * C2555) *
                 C151 +
             (C10009 * C2731 - C10013 * C2728 + C29548 * C2732 -
              C10015 * C2729) *
                 C29484) *
                C29557) *
               C29439 * C1508) *
              C1510)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[30] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C151 * C152 - C325 * C93 - C151 * C277 + C29484 * C326) * C10009 +
             C350 * C29548) *
                C19324 +
            (C20527 + C20528) * C29557) *
               C29439 * C1507 -
           ((C8412 * C29548 + C9692 * C10009) * C29557 +
            (C1752 * C29548 +
             (C151 * C678 - C325 * C618 - C151 * C778 + C29484 * C830) *
                 C10009) *
                C19324) *
               C29439 * C1508) *
              C1509 +
          (((C1752 * C10009 + C1751 * C29548) * C19324 +
            (C8412 * C10009 +
             (C151 * C2617 - C325 * C2555 - C151 * C2729 + C29484 * C2785) *
                 C29548) *
                C29557) *
               C29439 * C1508 -
           ((C2273 * C29548 + C2274 * C10009) * C29557 +
            (C351 * C29548 + C350 * C10009) * C19324) *
               C29439 * C1507) *
              C1510)) /
        (p * q * std::sqrt(p + q));
    d2eeyz[30] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C19324 * C215 - C19426 * C93 + C29557 * C1169 - C19427 * C1059) *
                 C151 +
             (C19324 * C390 - C19426 * C277 + C29557 * C1313 - C19427 * C1219) *
                 C29484) *
                C10009 +
            ((C19429 - C19430 + C19431 - C19432) * C151 +
             (C19595 - C19596 + C19597 - C19598) * C29484) *
                C29548) *
               C29439 * C1507 +
           (((C19426 * C618 - C19324 * C728 + C19427 * C2553 - C29557 * C2671) *
                 C151 +
             (C19426 * C778 - C19324 * C872 + C19427 * C2727 - C29557 * C2836) *
                 C29484) *
                C10009 +
            ((C20937 - C20938 + C20939 - C20940) * C151 +
             (C21143 - C21144 + C21145 - C21146) * C29484) *
                C29548) *
               C29439 * C1508) *
              C1509 +
          ((((C19430 - C19429 + C19432 - C19431) * C151 +
             (C19596 - C19595 + C19598 - C19597) * C29484) *
                C10009 +
            ((C19437 - C19438 + C19439 - C19440) * C151 +
             (C19599 - C19600 + C19601 - C19602) * C29484) *
                C29548) *
               C29439 * C1507 +
           (((C20938 - C20937 + C20940 - C20939) * C151 +
             (C21144 - C21143 + C21146 - C21145) * C29484) *
                C10009 +
            ((C19324 * C730 - C19426 * C616 + C29557 * C2673 - C19427 * C2555) *
                 C151 +
             (C19324 * C874 - C19426 * C780 + C29557 * C2838 - C19427 * C2729) *
                 C29484) *
                C29548) *
               C29439 * C1508) *
              C1510)) /
        (p * q * std::sqrt(p + q));
    d2eezx[30] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C10009 * C98 - C10013 * C93 + C29548 * C100 - C10015 * C94) *
                C19426 +
            (C10009 * C448 - C10013 * C443 + C29548 * C449 - C10015 * C444) *
                C19324 +
            (C20461 - C20462 + C20463 - C20464) * C19427 +
            (C20631 - C20632 + C20633 - C20634) * C29557) *
               C29484 * C29439 * C1507 +
           ((C10707 - C10706 + C10709 - C10708) * C19426 +
            (C10873 - C10872 + C10875 - C10874) * C19324 +
            (C12978 - C12979 + C12980 - C12981) * C19427 +
            (C13184 - C13185 + C13186 - C13187) * C29557) *
               C29484 * C29439 * C1508) *
              C1509 +
          (((C10013 * C94 - C10009 * C100 + C10015 * C95 - C29548 * C102) *
                C19426 +
            (C10013 * C444 - C10009 * C449 + C10015 * C445 - C29548 * C450) *
                C19324 +
            (C10013 * C1058 - C10009 * C1065 + C10015 * C1057 -
             C29548 * C1063) *
                C19427 +
            (C10013 * C1358 - C10009 * C1364 + C10015 * C1359 -
             C29548 * C1365) *
                C29557) *
               C29484 * C29439 * C1507 +
           ((C11717 - C11716 + C11719 - C11718) * C19426 +
            (C11937 - C11936 + C11939 - C11938) * C19324 +
            (C10009 * C2558 - C10013 * C2554 + C29548 * C2560 -
             C10015 * C2555) *
                C19427 +
            (C10009 * C2893 - C10013 * C2890 + C29548 * C2894 -
             C10015 * C2891) *
                C29557) *
               C29484 * C29439 * C1508) *
              C1510)) /
        (p * q * std::sqrt(p + q));
    d2eezy[30] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C29484 * C152 - C151 * C93) * C19426 +
                       (C29484 * C491 - C151 * C443) * C19324 +
                       (C7627 - C7628) * C19427 + (C8006 - C8007) * C29557) *
                          C10009 +
                      ((C163 - C164) * C19426 + (C497 - C498) * C19324 +
                       C8843 * C19427 + C9269 * C29557) *
                          C29548) *
                         C29439 * C1507 +
                     (((C151 * C618 - C29484 * C678) * C19426 +
                       (C151 * C916 - C29484 * C966) * C19324 +
                       (C9483 - C9484) * C19427 + (C9892 - C9893) * C29557) *
                          C10009 +
                      ((C1568 - C1569) * C19426 + (C1911 - C1912) * C19324 +
                       (C8196 - C8197) * C19427 + (C8615 - C8616) * C29557) *
                          C29548) *
                         C29439 * C1508) *
                        C1509 +
                    ((((C164 - C163) * C19426 + (C498 - C497) * C19324 +
                       C8845 * C19427 + C9270 * C29557) *
                          C10009 +
                      ((C168 - C167) * C19426 + (C501 - C500) * C19324 +
                       (C2094 - C2095) * C19427 + (C2435 - C2436) * C29557) *
                          C29548) *
                         C29439 * C1507 +
                     (((C1569 - C1568) * C19426 + (C1912 - C1911) * C19324 +
                       (C8197 - C8196) * C19427 + (C8616 - C8615) * C29557) *
                          C10009 +
                      ((C1573 - C1572) * C19426 + (C1914 - C1913) * C19324 +
                       (C29484 * C2617 - C151 * C2555) * C19427 +
                       (C29484 * C2947 - C151 * C2891) * C29557) *
                          C29548) *
                         C29439 * C1508) *
                        C1510)) /
                  (p * q * std::sqrt(p + q));
    d2eezz[30] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C19426 * C215 - C19752 * C93 - C19426 * C443 + C19324 * C545 +
             C19427 * C1169 - C19753 * C1059 - C19427 * C1357 +
             C29557 * C1453) *
                C29484 * C10009 +
            (C19779 + C19780) * C29484 * C29548) *
               C29439 * C1507 -
           ((C21357 + C21358) * C29484 * C29548 +
            (C19427 * C2671 - C19753 * C2553 - C19427 * C2889 + C29557 * C2998 +
             C19426 * C728 - C19752 * C618 - C19426 * C916 + C19324 * C1012) *
                C29484 * C10009) *
               C29439 * C1508) *
              C1509 +
          (((C21358 + C21357) * C29484 * C10009 +
            (C19426 * C730 - C19752 * C616 - C19426 * C918 + C19324 * C1010 +
             C19427 * C2673 - C19753 * C2555 - C19427 * C2891 +
             C29557 * C3000) *
                C29484 * C29548) *
               C29439 * C1508 -
           ((C19781 + C19782) * C29484 * C29548 +
            (C19780 + C19779) * C29484 * C10009) *
               C29439 * C1507) *
              C1510)) /
        (p * q * std::sqrt(p + q));
    d2eexx[31] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C10013 * C98 - C10014 * C93 - C10013 * C99 + C10009 * C108 +
             C10015 * C100 - C10016 * C94 - C10015 * C101 + C29548 * C109) *
                C19324 +
            (C20307 + C20308) * C29557) *
               C29484 * C2031 -
           ((C20309 + C20310) * C29557 + (C20308 + C20307) * C19324) * C29484 *
               C2032) *
              C1507 +
          (((C12779 + C12778) * C19324 +
            (C10013 * C4144 - C10014 * C4142 - C10013 * C4145 + C10009 * C4148 +
             C10015 * C4146 - C10016 * C4143 - C10015 * C4147 +
             C29548 * C4149) *
                C29557) *
               C29484 * C2032 -
           ((C12778 + C12779) * C29557 + (C10553 + C10552) * C19324) * C29484 *
               C2031) *
              C1508) *
         C29413) /
        (p * q * std::sqrt(p + q));
    d2eexy[31] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C29484 * C152 - C151 * C93) * C10013 +
                       (C29484 * C157 - C151 * C99) * C10009 +
                       (C163 - C164) * C10015 + (C165 - C166) * C29548) *
                          C19324 +
                      ((C7627 - C7628) * C10013 + (C7629 - C7630) * C10009 +
                       C8843 * C10015 + C8844 * C29548) *
                          C29557) *
                         C2031 +
                     (((C7628 - C7627) * C10013 + (C7630 - C7629) * C10009 +
                       C8845 * C10015 + C8846 * C29548) *
                          C19324 +
                      ((C7631 - C7632) * C10013 + (C7633 - C7634) * C10009 +
                       (C7635 - C7636) * C10015 + (C7637 - C7638) * C29548) *
                          C29557) *
                         C2032) *
                        C1507 +
                    ((((C151 * C618 - C29484 * C678) * C10013 +
                       (C151 * C627 - C29484 * C684) * C10009 +
                       (C1568 - C1569) * C10015 + (C1570 - C1571) * C29548) *
                          C19324 +
                      ((C9483 - C9484) * C10013 + (C9485 - C9486) * C10009 +
                       (C8196 - C8197) * C10015 + (C8198 - C8199) * C29548) *
                          C29557) *
                         C2031 +
                     (((C9484 - C9483) * C10013 + (C9486 - C9485) * C10009 +
                       (C8197 - C8196) * C10015 + (C8199 - C8198) * C29548) *
                          C19324 +
                      ((C29484 * C4200 - C151 * C4142) * C10013 +
                       (C29484 * C4202 - C151 * C4145) * C10009 +
                       (C29484 * C4201 - C151 * C4143) * C10015 +
                       (C29484 * C4203 - C151 * C4147) * C29548) *
                          C29557) *
                         C2032) *
                        C1508) *
                   C29413) /
                  (p * q * std::sqrt(p + q));
    d2eexz[31] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C19324 * C215 - C19426 * C93 + C29557 * C1169 - C19427 * C1059) *
                C10013 +
            (C19324 * C220 - C19426 * C99 + C29557 * C1175 - C19427 * C1068) *
                C10009 +
            (C19429 - C19430 + C19431 - C19432) * C10015 +
            (C19433 - C19434 + C19435 - C19436) * C29548) *
               C29484 * C2031 +
           ((C19426 * C1059 - C19324 * C1169 + C19427 * C1060 -
             C29557 * C1172) *
                C10013 +
            (C19426 * C1068 - C19324 * C1175 + C19427 * C1070 -
             C29557 * C1178) *
                C10009 +
            (C21571 - C21572 + C21573 - C21574) * C10015 +
            (C21575 - C21576 + C21577 - C21578) * C29548) *
               C29484 * C2032) *
              C1507 +
          (((C19426 * C618 - C19324 * C728 + C19427 * C2553 - C29557 * C2671) *
                C10013 +
            (C19426 * C627 - C19324 * C734 + C19427 * C2557 - C29557 * C2674) *
                C10009 +
            (C20937 - C20938 + C20939 - C20940) * C10015 +
            (C20941 - C20942 + C20943 - C20944) * C29548) *
               C29484 * C2031 +
           ((C19324 * C2671 - C19426 * C2553 + C29557 * C4254 -
             C19427 * C4142) *
                C10013 +
            (C19324 * C2674 - C19426 * C2557 + C29557 * C4256 -
             C19427 * C4145) *
                C10009 +
            (C19324 * C2672 - C19426 * C2554 + C29557 * C4255 -
             C19427 * C4143) *
                C10015 +
            (C19324 * C2675 - C19426 * C2559 + C29557 * C4257 -
             C19427 * C4147) *
                C29548) *
               C29484 * C2032) *
              C1508) *
         C29413) /
        (p * q * std::sqrt(p + q));
    d2eeyx[31] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C10009 * C98 - C10013 * C93 + C29548 * C100 - C10015 * C94) *
                 C151 +
             (C10009 * C282 - C10013 * C277 + C29548 * C283 - C10015 * C278) *
                 C29484) *
                C19324 +
            ((C20461 - C20462 + C20463 - C20464) * C151 +
             (C20465 - C20466 + C20467 - C20468) * C29484) *
                C29557) *
               C2031 +
           (((C20462 - C20461 + C20464 - C20463) * C151 +
             (C20466 - C20465 + C20468 - C20467) * C29484) *
                C19324 +
            ((C20469 - C20470 + C20471 - C20472) * C151 +
             (C20473 - C20474 + C20475 - C20476) * C29484) *
                C29557) *
               C2032) *
              C1507 +
          ((((C10707 - C10706 + C10709 - C10708) * C151 +
             (C10711 - C10710 + C10713 - C10712) * C29484) *
                C19324 +
            ((C12978 - C12979 + C12980 - C12981) * C151 +
             (C12982 - C12983 + C12984 - C12985) * C29484) *
                C29557) *
               C2031 +
           (((C12979 - C12978 + C12981 - C12980) * C151 +
             (C12983 - C12982 + C12985 - C12984) * C29484) *
                C19324 +
            ((C10009 * C4144 - C10013 * C4142 + C29548 * C4146 -
              C10015 * C4143) *
                 C151 +
             (C10009 * C4310 - C10013 * C4308 + C29548 * C4311 -
              C10015 * C4309) *
                 C29484) *
                C29557) *
               C2032) *
              C1508) *
         C29413) /
        (p * q * std::sqrt(p + q));
    d2eeyy[31] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C151 * C152 - C325 * C93 - C151 * C277 + C29484 * C326) * C10009 +
             C350 * C29548) *
                C19324 +
            (C20527 + C20528) * C29557) *
               C2031 -
           ((C20529 + C20530) * C29557 + (C20528 + C20527) * C19324) * C2032) *
              C1507 +
          (((C22337 + C22338) * C19324 +
            ((C151 * C4200 - C325 * C4142 - C151 * C4308 + C29484 * C4362) *
                 C10009 +
             (C151 * C4201 - C325 * C4143 - C151 * C4309 + C29484 * C4363) *
                 C29548) *
                C29557) *
               C2032 -
           ((C22338 + C22337) * C29557 +
            (C1752 * C29548 +
             (C151 * C678 - C325 * C618 - C151 * C778 + C29484 * C830) *
                 C10009) *
                C19324) *
               C2031) *
              C1508) *
         C29413) /
        (p * q * std::sqrt(p + q));
    d2eeyz[31] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C19324 * C215 - C19426 * C93 + C29557 * C1169 - C19427 * C1059) *
                 C151 +
             (C19324 * C390 - C19426 * C277 + C29557 * C1313 - C19427 * C1219) *
                 C29484) *
                C10009 +
            ((C19429 - C19430 + C19431 - C19432) * C151 +
             (C19595 - C19596 + C19597 - C19598) * C29484) *
                C29548) *
               C2031 +
           (((C19426 * C1059 - C19324 * C1169 + C19427 * C1060 -
              C29557 * C1172) *
                 C151 +
             (C19426 * C1219 - C19324 * C1313 + C19427 * C1222 -
              C29557 * C1316) *
                 C29484) *
                C10009 +
            ((C21571 - C21572 + C21573 - C21574) * C151 +
             (C21787 - C21788 + C21789 - C21790) * C29484) *
                C29548) *
               C2032) *
              C1507 +
          ((((C19426 * C618 - C19324 * C728 + C19427 * C2553 - C29557 * C2671) *
                 C151 +
             (C19426 * C778 - C19324 * C872 + C19427 * C2727 - C29557 * C2836) *
                 C29484) *
                C10009 +
            ((C20937 - C20938 + C20939 - C20940) * C151 +
             (C21143 - C21144 + C21145 - C21146) * C29484) *
                C29548) *
               C2031 +
           (((C19324 * C2671 - C19426 * C2553 + C29557 * C4254 -
              C19427 * C4142) *
                 C151 +
             (C19324 * C2836 - C19426 * C2727 + C29557 * C4414 -
              C19427 * C4308) *
                 C29484) *
                C10009 +
            ((C19324 * C2672 - C19426 * C2554 + C29557 * C4255 -
              C19427 * C4143) *
                 C151 +
             (C19324 * C2837 - C19426 * C2728 + C29557 * C4415 -
              C19427 * C4309) *
                 C29484) *
                C29548) *
               C2032) *
              C1508) *
         C29413) /
        (p * q * std::sqrt(p + q));
    d2eezx[31] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C10009 * C98 - C10013 * C93 + C29548 * C100 - C10015 * C94) *
                C19426 +
            (C10009 * C448 - C10013 * C443 + C29548 * C449 - C10015 * C444) *
                C19324 +
            (C20461 - C20462 + C20463 - C20464) * C19427 +
            (C20631 - C20632 + C20633 - C20634) * C29557) *
               C29484 * C2031 +
           ((C20462 - C20461 + C20464 - C20463) * C19426 +
            (C20632 - C20631 + C20634 - C20633) * C19324 +
            (C20469 - C20470 + C20471 - C20472) * C19427 +
            (C20635 - C20636 + C20637 - C20638) * C29557) *
               C29484 * C2032) *
              C1507 +
          (((C10707 - C10706 + C10709 - C10708) * C19426 +
            (C10873 - C10872 + C10875 - C10874) * C19324 +
            (C12978 - C12979 + C12980 - C12981) * C19427 +
            (C13184 - C13185 + C13186 - C13187) * C29557) *
               C29484 * C2031 +
           ((C12979 - C12978 + C12981 - C12980) * C19426 +
            (C13185 - C13184 + C13187 - C13186) * C19324 +
            (C10009 * C4144 - C10013 * C4142 + C29548 * C4146 -
             C10015 * C4143) *
                C19427 +
            (C10009 * C4468 - C10013 * C4466 + C29548 * C4469 -
             C10015 * C4467) *
                C29557) *
               C29484 * C2032) *
              C1508) *
         C29413) /
        (p * q * std::sqrt(p + q));
    d2eezy[31] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C29484 * C152 - C151 * C93) * C19426 +
                       (C29484 * C491 - C151 * C443) * C19324 +
                       (C7627 - C7628) * C19427 + (C8006 - C8007) * C29557) *
                          C10009 +
                      ((C163 - C164) * C19426 + (C497 - C498) * C19324 +
                       C8843 * C19427 + C9269 * C29557) *
                          C29548) *
                         C2031 +
                     (((C7628 - C7627) * C19426 + (C8007 - C8006) * C19324 +
                       (C7631 - C7632) * C19427 + (C8008 - C8009) * C29557) *
                          C10009 +
                      (C8845 * C19426 + C9270 * C19324 +
                       (C7635 - C7636) * C19427 + (C8010 - C8011) * C29557) *
                          C29548) *
                         C2032) *
                        C1507 +
                    ((((C151 * C618 - C29484 * C678) * C19426 +
                       (C151 * C916 - C29484 * C966) * C19324 +
                       (C9483 - C9484) * C19427 + (C9892 - C9893) * C29557) *
                          C10009 +
                      ((C1568 - C1569) * C19426 + (C1911 - C1912) * C19324 +
                       (C8196 - C8197) * C19427 + (C8615 - C8616) * C29557) *
                          C29548) *
                         C2031 +
                     (((C9484 - C9483) * C19426 + (C9893 - C9892) * C19324 +
                       (C29484 * C4200 - C151 * C4142) * C19427 +
                       (C29484 * C4520 - C151 * C4466) * C29557) *
                          C10009 +
                      ((C8197 - C8196) * C19426 + (C8616 - C8615) * C19324 +
                       (C29484 * C4201 - C151 * C4143) * C19427 +
                       (C29484 * C4521 - C151 * C4467) * C29557) *
                          C29548) *
                         C2032) *
                        C1508) *
                   C29413) /
                  (p * q * std::sqrt(p + q));
    d2eezz[31] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C19426 * C215 - C19752 * C93 - C19426 * C443 + C19324 * C545 +
             C19427 * C1169 - C19753 * C1059 - C19427 * C1357 +
             C29557 * C1453) *
                C29484 * C10009 +
            (C19779 + C19780) * C29484 * C29548) *
               C2031 -
           ((C22005 + C22006) * C29484 * C29548 +
            (C19427 * C1172 - C19753 * C1060 - C19427 * C1360 + C29557 * C1454 +
             C19426 * C1169 - C19752 * C1059 - C19426 * C1357 +
             C19324 * C1453) *
                C29484 * C10009) *
               C2032) *
              C1507 +
          (((C19426 * C2671 - C19752 * C2553 - C19426 * C2889 + C19324 * C2998 +
             C19427 * C4254 - C19753 * C4142 - C19427 * C4466 +
             C29557 * C4572) *
                C29484 * C10009 +
            (C19426 * C2672 - C19752 * C2554 - C19426 * C2890 + C19324 * C2999 +
             C19427 * C4255 - C19753 * C4143 - C19427 * C4467 +
             C29557 * C4573) *
                C29484 * C29548) *
               C2032 -
           ((C21357 + C21358) * C29484 * C29548 +
            (C19427 * C2671 - C19753 * C2553 - C19427 * C2889 + C29557 * C2998 +
             C19426 * C728 - C19752 * C618 - C19426 * C916 + C19324 * C1012) *
                C29484 * C10009) *
               C2031) *
              C1508) *
         C29413) /
        (p * q * std::sqrt(p + q));
    d2eexx[32] +=
        (-std::pow(Pi, 2.5) *
         (((C10013 * C98 - C10014 * C93 - C10013 * C99 + C10009 * C108 +
            C10015 * C100 - C10016 * C94 - C10015 * C101 + C29548 * C109) *
               C19324 +
           (C10013 * C1067 - C10014 * C1059 - C10013 * C1068 + C10009 * C1077 +
            C10015 * C1065 - C10016 * C1058 - C10015 * C1066 + C29548 * C1076) *
               C29557) *
              C29484 * C29439 * C612 -
          ((C12778 + C12779) * C29557 + (C10553 + C10552) * C19324) * C29484 *
              C29439 * C613 +
          ((C10555 + C10554) * C19324 +
           (C10013 * C5931 - C10014 * C5929 - C10013 * C5932 + C10009 * C5935 +
            C10015 * C5933 - C10016 * C5930 - C10015 * C5934 + C29548 * C5936) *
               C29557) *
              C29484 * C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C10013 * C98 - C10014 * C93 - C10013 * C99 + C10009 * C108 +
            C10015 * C100 - C10016 * C94 - C10015 * C101 + C29548 * C109) *
               C19324 +
           (C10013 * C1067 - C10014 * C1059 - C10013 * C1068 + C10009 * C1077 +
            C10015 * C1065 - C10016 * C1058 - C10015 * C1066 + C29548 * C1076) *
               C29557) *
              C29484 * C29439 * C29425 * C84 -
          ((C10015 * C1063 - C10016 * C1057 - C10015 * C1064 + C29548 * C1075 +
            C10013 * C1065 - C10014 * C1058 - C10013 * C1066 + C10009 * C1076) *
               C29557 +
           (C10015 * C102 - C10016 * C95 - C10015 * C103 + C29548 * C110 +
            C10013 * C100 - C10014 * C94 - C10013 * C101 + C10009 * C109) *
               C19324) *
              C29484 * C29439 * C29425 * C85 +
          ((C10013 * C102 - C10014 * C95 - C10013 * C103 + C10009 * C110 +
            C10015 * C104 - C10016 * C96 - C10015 * C105 + C29548 * C111) *
               C19324 +
           (C10013 * C1063 - C10014 * C1057 - C10013 * C1064 + C10009 * C1075 +
            C10015 * C2034 - C10016 * C2033 - C10015 * C2035 + C29548 * C2036) *
               C29557) *
              C29484 * C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C10013 * C98 - C10014 * C93 - C10013 * C99 + C10009 * C108 +
            C10015 * C100 - C10016 * C94 - C10015 * C101 + C29548 * C109) *
               C19324 +
           (C20307 + C20308) * C29557) *
              C29484 * C1054 -
          ((C20309 + C20310) * C29557 + (C20308 + C20307) * C19324) * C29484 *
              C1055 +
          ((C20310 + C20309) * C19324 +
           (C10013 * C7538 - C10014 * C7536 - C10013 * C7539 + C10009 * C7542 +
            C10015 * C7540 - C10016 * C7537 - C10015 * C7541 + C29548 * C7543) *
               C29557) *
              C29484 * C1056) *
         C29425 * C29413) /
            (p * q * std::sqrt(p + q));
    d2eexy[32] += (-std::pow(Pi, 2.5) *
                   ((((C29484 * C152 - C151 * C93) * C10013 +
                      (C29484 * C157 - C151 * C99) * C10009 +
                      (C163 - C164) * C10015 + (C165 - C166) * C29548) *
                         C19324 +
                     ((C7627 - C7628) * C10013 + (C7629 - C7630) * C10009 +
                      C8843 * C10015 + C8844 * C29548) *
                         C29557) *
                        C29439 * C612 +
                    (((C151 * C618 - C29484 * C678) * C10013 +
                      (C151 * C627 - C29484 * C684) * C10009 +
                      (C1568 - C1569) * C10015 + (C1570 - C1571) * C29548) *
                         C19324 +
                     ((C9483 - C9484) * C10013 + (C9485 - C9486) * C10009 +
                      (C8196 - C8197) * C10015 + (C8198 - C8199) * C29548) *
                         C29557) *
                        C29439 * C613 +
                    (((C29484 * C681 - C151 * C619) * C10013 +
                      (C29484 * C687 - C151 * C629) * C10009 +
                      (C29484 * C682 - C151 * C620) * C10015 +
                      (C29484 * C688 - C151 * C631) * C29548) *
                         C19324 +
                     ((C29484 * C6017 - C151 * C5929) * C10013 +
                      (C29484 * C6019 - C151 * C5932) * C10009 +
                      (C29484 * C6018 - C151 * C5930) * C10015 +
                      (C29484 * C6020 - C151 * C5934) * C29548) *
                         C29557) *
                        C29439 * C614) *
                   C29413) /
                      (p * q * std::sqrt(p + q)) -
                  (std::pow(Pi, 2.5) *
                   ((((C29484 * C152 - C151 * C93) * C10013 +
                      (C29484 * C157 - C151 * C99) * C10009 +
                      (C163 - C164) * C10015 + (C165 - C166) * C29548) *
                         C19324 +
                     ((C7627 - C7628) * C10013 + (C7629 - C7630) * C10009 +
                      C8843 * C10015 + C8844 * C29548) *
                         C29557) *
                        C29439 * C29425 * C84 +
                    (((C164 - C163) * C10013 + (C166 - C165) * C10009 +
                      (C168 - C167) * C10015 + (C170 - C169) * C29548) *
                         C19324 +
                     (C8845 * C10013 + C8846 * C10009 +
                      (C2094 - C2095) * C10015 + (C2096 - C2097) * C29548) *
                         C29557) *
                        C29439 * C29425 * C85 +
                    ((C175 * C10013 + C176 * C10009 + (C172 - C171) * C10015 +
                      (C174 - C173) * C29548) *
                         C19324 +
                     ((C2095 - C2094) * C10013 + (C2097 - C2096) * C10009 +
                      (C29484 * C2087 - C151 * C2033) * C10015 +
                      (C29484 * C2088 - C151 * C2035) * C29548) *
                         C29557) *
                        C29439 * C29425 * C86)) /
                      (p * q * std::sqrt(p + q)) +
                  (2 * std::pow(Pi, 2.5) *
                   ((((C29484 * C152 - C151 * C93) * C10013 +
                      (C29484 * C157 - C151 * C99) * C10009 +
                      (C163 - C164) * C10015 + (C165 - C166) * C29548) *
                         C19324 +
                     ((C7627 - C7628) * C10013 + (C7629 - C7630) * C10009 +
                      C8843 * C10015 + C8844 * C29548) *
                         C29557) *
                        C1054 +
                    (((C7628 - C7627) * C10013 + (C7630 - C7629) * C10009 +
                      C8845 * C10015 + C8846 * C29548) *
                         C19324 +
                     ((C7631 - C7632) * C10013 + (C7633 - C7634) * C10009 +
                      (C7635 - C7636) * C10015 + (C7637 - C7638) * C29548) *
                         C29557) *
                        C1055 +
                    (((C7632 - C7631) * C10013 + (C7634 - C7633) * C10009 +
                      (C7636 - C7635) * C10015 + (C7638 - C7637) * C29548) *
                         C19324 +
                     ((C29484 * C7622 - C151 * C7536) * C10013 +
                      (C29484 * C7624 - C151 * C7539) * C10009 +
                      (C29484 * C7623 - C151 * C7537) * C10015 +
                      (C29484 * C7625 - C151 * C7541) * C29548) *
                         C29557) *
                        C1056) *
                   C29425 * C29413) /
                      (p * q * std::sqrt(p + q));
    d2eexz[32] +=
        (-std::pow(Pi, 2.5) *
         (((C19324 * C215 - C19426 * C93 + C29557 * C1169 - C19427 * C1059) *
               C10013 +
           (C19324 * C220 - C19426 * C99 + C29557 * C1175 - C19427 * C1068) *
               C10009 +
           (C19429 - C19430 + C19431 - C19432) * C10015 +
           (C19433 - C19434 + C19435 - C19436) * C29548) *
              C29484 * C29439 * C612 +
          ((C19426 * C618 - C19324 * C728 + C19427 * C2553 - C29557 * C2671) *
               C10013 +
           (C19426 * C627 - C19324 * C734 + C19427 * C2557 - C29557 * C2674) *
               C10009 +
           (C19426 * C617 - C19324 * C729 + C19427 * C2554 - C29557 * C2672) *
               C10015 +
           (C19426 * C625 - C19324 * C735 + C19427 * C2559 - C29557 * C2675) *
               C29548) *
              C29484 * C29439 * C613 +
          ((C19324 * C731 - C19426 * C619 + C29557 * C6087 - C19427 * C5929) *
               C10013 +
           (C19324 * C737 - C19426 * C629 + C29557 * C6089 - C19427 * C5932) *
               C10009 +
           (C19324 * C732 - C19426 * C620 + C29557 * C6088 - C19427 * C5930) *
               C10015 +
           (C19324 * C738 - C19426 * C631 + C29557 * C6090 - C19427 * C5934) *
               C29548) *
              C29484 * C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C19324 * C215 - C19426 * C93 + C29557 * C1169 - C19427 * C1059) *
               C10013 +
           (C19324 * C220 - C19426 * C99 + C29557 * C1175 - C19427 * C1068) *
               C10009 +
           (C19429 - C19430 + C19431 - C19432) * C10015 +
           (C19433 - C19434 + C19435 - C19436) * C29548) *
              C29484 * C29439 * C29425 * C84 +
          ((C19430 - C19429 + C19432 - C19431) * C10013 +
           (C19434 - C19433 + C19436 - C19435) * C10009 +
           (C19437 - C19438 + C19439 - C19440) * C10015 +
           (C19441 - C19442 + C19443 - C19444) * C29548) *
              C29484 * C29439 * C29425 * C85 +
          ((C19438 - C19437 + C19440 - C19439) * C10013 +
           (C19442 - C19441 + C19444 - C19443) * C10009 +
           (C19324 * C218 - C19426 * C96 + C29557 * C2147 - C19427 * C2033) *
               C10015 +
           (C19324 * C223 - C19426 * C105 + C29557 * C2148 - C19427 * C2035) *
               C29548) *
              C29484 * C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C19324 * C215 - C19426 * C93 + C29557 * C1169 - C19427 * C1059) *
               C10013 +
           (C19324 * C220 - C19426 * C99 + C29557 * C1175 - C19427 * C1068) *
               C10009 +
           (C19429 - C19430 + C19431 - C19432) * C10015 +
           (C19433 - C19434 + C19435 - C19436) * C29548) *
              C29484 * C1054 +
          ((C19426 * C1059 - C19324 * C1169 + C19427 * C1060 - C29557 * C1172) *
               C10013 +
           (C19426 * C1068 - C19324 * C1175 + C19427 * C1070 - C29557 * C1178) *
               C10009 +
           (C19426 * C1058 - C19324 * C1170 + C19427 * C1061 - C29557 * C1173) *
               C10015 +
           (C19426 * C1066 - C19324 * C1176 + C19427 * C1072 - C29557 * C1179) *
               C29548) *
              C29484 * C1055 +
          ((C19324 * C1172 - C19426 * C1060 + C29557 * C7688 - C19427 * C7536) *
               C10013 +
           (C19324 * C1178 - C19426 * C1070 + C29557 * C7690 - C19427 * C7539) *
               C10009 +
           (C19324 * C1173 - C19426 * C1061 + C29557 * C7689 - C19427 * C7537) *
               C10015 +
           (C19324 * C1179 - C19426 * C1072 + C29557 * C7691 - C19427 * C7541) *
               C29548) *
              C29484 * C1056) *
         C29425 * C29413) /
            (p * q * std::sqrt(p + q));
    d2eeyx[32] +=
        (-std::pow(Pi, 2.5) *
         ((((C10009 * C98 - C10013 * C93 + C29548 * C100 - C10015 * C94) *
                C151 +
            (C10009 * C282 - C10013 * C277 + C29548 * C283 - C10015 * C278) *
                C29484) *
               C19324 +
           ((C10009 * C1067 - C10013 * C1059 + C29548 * C1065 -
             C10015 * C1058) *
                C151 +
            (C10009 * C1225 - C10013 * C1219 + C29548 * C1226 -
             C10015 * C1220) *
                C29484) *
               C29557) *
              C29439 * C612 +
          (((C10707 - C10706 + C10709 - C10708) * C151 +
            (C10711 - C10710 + C10713 - C10712) * C29484) *
               C19324 +
           ((C12978 - C12979 + C12980 - C12981) * C151 +
            (C12982 - C12983 + C12984 - C12985) * C29484) *
               C29557) *
              C29439 * C613 +
          (((C10715 - C10714 + C10717 - C10716) * C151 +
            (C10719 - C10718 + C10721 - C10720) * C29484) *
               C19324 +
           ((C10009 * C5931 - C10013 * C5929 + C29548 * C5933 -
             C10015 * C5930) *
                C151 +
            (C10009 * C6163 - C10013 * C6161 + C29548 * C6164 -
             C10015 * C6162) *
                C29484) *
               C29557) *
              C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C10009 * C98 - C10013 * C93 + C29548 * C100 - C10015 * C94) *
                C151 +
            (C10009 * C282 - C10013 * C277 + C29548 * C283 - C10015 * C278) *
                C29484) *
               C19324 +
           ((C10009 * C1067 - C10013 * C1059 + C29548 * C1065 -
             C10015 * C1058) *
                C151 +
            (C10009 * C1225 - C10013 * C1219 + C29548 * C1226 -
             C10015 * C1220) *
                C29484) *
               C29557) *
              C29439 * C29425 * C84 +
          (((C10013 * C94 - C10009 * C100 + C10015 * C95 - C29548 * C102) *
                C151 +
            (C10013 * C278 - C10009 * C283 + C10015 * C279 - C29548 * C284) *
                C29484) *
               C19324 +
           ((C10013 * C1058 - C10009 * C1065 + C10015 * C1057 -
             C29548 * C1063) *
                C151 +
            (C10013 * C1220 - C10009 * C1226 + C10015 * C1221 -
             C29548 * C1227) *
                C29484) *
               C29557) *
              C29439 * C29425 * C85 +
          (((C10009 * C102 - C10013 * C95 + C29548 * C104 - C10015 * C96) *
                C151 +
            (C10009 * C284 - C10013 * C279 + C29548 * C285 - C10015 * C280) *
                C29484) *
               C19324 +
           ((C10009 * C1063 - C10013 * C1057 + C29548 * C2034 -
             C10015 * C2033) *
                C151 +
            (C10009 * C1227 - C10013 * C1221 + C29548 * C2208 -
             C10015 * C2207) *
                C29484) *
               C29557) *
              C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C10009 * C98 - C10013 * C93 + C29548 * C100 - C10015 * C94) *
                C151 +
            (C10009 * C282 - C10013 * C277 + C29548 * C283 - C10015 * C278) *
                C29484) *
               C19324 +
           ((C20461 - C20462 + C20463 - C20464) * C151 +
            (C20465 - C20466 + C20467 - C20468) * C29484) *
               C29557) *
              C1054 +
          (((C20462 - C20461 + C20464 - C20463) * C151 +
            (C20466 - C20465 + C20468 - C20467) * C29484) *
               C19324 +
           ((C20469 - C20470 + C20471 - C20472) * C151 +
            (C20473 - C20474 + C20475 - C20476) * C29484) *
               C29557) *
              C1055 +
          (((C20470 - C20469 + C20472 - C20471) * C151 +
            (C20474 - C20473 + C20476 - C20475) * C29484) *
               C19324 +
           ((C10009 * C7538 - C10013 * C7536 + C29548 * C7540 -
             C10015 * C7537) *
                C151 +
            (C10009 * C7744 - C10013 * C7742 + C29548 * C7745 -
             C10015 * C7743) *
                C29484) *
               C29557) *
              C1056) *
         C29425 * C29413) /
            (p * q * std::sqrt(p + q));
    d2eeyy[32] +=
        (-std::pow(Pi, 2.5) *
         ((((C151 * C152 - C325 * C93 - C151 * C277 + C29484 * C326) * C10009 +
            C350 * C29548) *
               C19324 +
           (C7834 * C10009 + C2274 * C29548) * C29557) *
              C29439 * C612 -
          ((C8412 * C29548 + C9692 * C10009) * C29557 +
           (C1752 * C29548 +
            (C151 * C678 - C325 * C618 - C151 * C778 + C29484 * C830) *
                C10009) *
               C19324) *
              C29439 * C613 +
          (((C151 * C681 - C325 * C619 - C151 * C781 + C29484 * C831) * C10009 +
            (C151 * C682 - C325 * C620 - C151 * C782 + C29484 * C832) *
                C29548) *
               C19324 +
           ((C151 * C6017 - C325 * C5929 - C151 * C6161 + C29484 * C6239) *
                C10009 +
            (C151 * C6018 - C325 * C5930 - C151 * C6162 + C29484 * C6240) *
                C29548) *
               C29557) *
              C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C151 * C152 - C325 * C93 - C151 * C277 + C29484 * C326) * C10009 +
            C350 * C29548) *
               C19324 +
           (C7834 * C10009 + C2274 * C29548) * C29557) *
              C29439 * C29425 * C84 -
          ((C2273 * C29548 + C2274 * C10009) * C29557 +
           (C351 * C29548 + C350 * C10009) * C19324) *
              C29439 * C29425 * C85 +
          ((C351 * C10009 + C352 * C29548) * C19324 +
           (C2273 * C10009 +
            (C151 * C2087 - C325 * C2033 - C151 * C2207 + C29484 * C2259) *
                C29548) *
               C29557) *
              C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C151 * C152 - C325 * C93 - C151 * C277 + C29484 * C326) * C10009 +
            C350 * C29548) *
               C19324 +
           (C20527 + C20528) * C29557) *
              C1054 -
          ((C20529 + C20530) * C29557 + (C20528 + C20527) * C19324) * C1055 +
          ((C20530 + C20529) * C19324 +
           ((C151 * C7622 - C325 * C7536 - C151 * C7742 + C29484 * C7812) *
                C10009 +
            (C151 * C7623 - C325 * C7537 - C151 * C7743 + C29484 * C7813) *
                C29548) *
               C29557) *
              C1056) *
         C29425 * C29413) /
            (p * q * std::sqrt(p + q));
    d2eeyz[32] +=
        (-std::pow(Pi, 2.5) *
         ((((C19324 * C215 - C19426 * C93 + C29557 * C1169 - C19427 * C1059) *
                C151 +
            (C19324 * C390 - C19426 * C277 + C29557 * C1313 - C19427 * C1219) *
                C29484) *
               C10009 +
           ((C19429 - C19430 + C19431 - C19432) * C151 +
            (C19595 - C19596 + C19597 - C19598) * C29484) *
               C29548) *
              C29439 * C612 +
          (((C19426 * C618 - C19324 * C728 + C19427 * C2553 - C29557 * C2671) *
                C151 +
            (C19426 * C778 - C19324 * C872 + C19427 * C2727 - C29557 * C2836) *
                C29484) *
               C10009 +
           ((C19426 * C617 - C19324 * C729 + C19427 * C2554 - C29557 * C2672) *
                C151 +
            (C19426 * C779 - C19324 * C873 + C19427 * C2728 - C29557 * C2837) *
                C29484) *
               C29548) *
              C29439 * C613 +
          (((C19324 * C731 - C19426 * C619 + C29557 * C6087 - C19427 * C5929) *
                C151 +
            (C19324 * C875 - C19426 * C781 + C29557 * C6307 - C19427 * C6161) *
                C29484) *
               C10009 +
           ((C19324 * C732 - C19426 * C620 + C29557 * C6088 - C19427 * C5930) *
                C151 +
            (C19324 * C876 - C19426 * C782 + C29557 * C6308 - C19427 * C6162) *
                C29484) *
               C29548) *
              C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C19324 * C215 - C19426 * C93 + C29557 * C1169 - C19427 * C1059) *
                C151 +
            (C19324 * C390 - C19426 * C277 + C29557 * C1313 - C19427 * C1219) *
                C29484) *
               C10009 +
           ((C19429 - C19430 + C19431 - C19432) * C151 +
            (C19595 - C19596 + C19597 - C19598) * C29484) *
               C29548) *
              C29439 * C29425 * C84 +
          (((C19430 - C19429 + C19432 - C19431) * C151 +
            (C19596 - C19595 + C19598 - C19597) * C29484) *
               C10009 +
           ((C19437 - C19438 + C19439 - C19440) * C151 +
            (C19599 - C19600 + C19601 - C19602) * C29484) *
               C29548) *
              C29439 * C29425 * C85 +
          (((C19438 - C19437 + C19440 - C19439) * C151 +
            (C19600 - C19599 + C19602 - C19601) * C29484) *
               C10009 +
           ((C19324 * C218 - C19426 * C96 + C29557 * C2147 - C19427 * C2033) *
                C151 +
            (C19324 * C393 - C19426 * C280 + C29557 * C2324 - C19427 * C2207) *
                C29484) *
               C29548) *
              C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C19324 * C215 - C19426 * C93 + C29557 * C1169 - C19427 * C1059) *
                C151 +
            (C19324 * C390 - C19426 * C277 + C29557 * C1313 - C19427 * C1219) *
                C29484) *
               C10009 +
           ((C19429 - C19430 + C19431 - C19432) * C151 +
            (C19595 - C19596 + C19597 - C19598) * C29484) *
               C29548) *
              C1054 +
          (((C19426 * C1059 - C19324 * C1169 + C19427 * C1060 -
             C29557 * C1172) *
                C151 +
            (C19426 * C1219 - C19324 * C1313 + C19427 * C1222 -
             C29557 * C1316) *
                C29484) *
               C10009 +
           ((C19426 * C1058 - C19324 * C1170 + C19427 * C1061 -
             C29557 * C1173) *
                C151 +
            (C19426 * C1220 - C19324 * C1314 + C19427 * C1223 -
             C29557 * C1317) *
                C29484) *
               C29548) *
              C1055 +
          (((C19324 * C1172 - C19426 * C1060 + C29557 * C7688 -
             C19427 * C7536) *
                C151 +
            (C19324 * C1316 - C19426 * C1222 + C29557 * C7889 -
             C19427 * C7742) *
                C29484) *
               C10009 +
           ((C19324 * C1173 - C19426 * C1061 + C29557 * C7689 -
             C19427 * C7537) *
                C151 +
            (C19324 * C1317 - C19426 * C1223 + C29557 * C7890 -
             C19427 * C7743) *
                C29484) *
               C29548) *
              C1056) *
         C29425 * C29413) /
            (p * q * std::sqrt(p + q));
    d2eezx[32] +=
        (-std::pow(Pi, 2.5) *
         (((C10009 * C98 - C10013 * C93 + C29548 * C100 - C10015 * C94) *
               C19426 +
           (C10009 * C448 - C10013 * C443 + C29548 * C449 - C10015 * C444) *
               C19324 +
           (C10009 * C1067 - C10013 * C1059 + C29548 * C1065 - C10015 * C1058) *
               C19427 +
           (C10009 * C1363 - C10013 * C1357 + C29548 * C1364 - C10015 * C1358) *
               C29557) *
              C29484 * C29439 * C612 +
          ((C10707 - C10706 + C10709 - C10708) * C19426 +
           (C10873 - C10872 + C10875 - C10874) * C19324 +
           (C12978 - C12979 + C12980 - C12981) * C19427 +
           (C13184 - C13185 + C13186 - C13187) * C29557) *
              C29484 * C29439 * C613 +
          ((C10715 - C10714 + C10717 - C10716) * C19426 +
           (C10877 - C10876 + C10879 - C10878) * C19324 +
           (C10009 * C5931 - C10013 * C5929 + C29548 * C5933 - C10015 * C5930) *
               C19427 +
           (C10009 * C6379 - C10013 * C6377 + C29548 * C6380 - C10015 * C6378) *
               C29557) *
              C29484 * C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C10009 * C98 - C10013 * C93 + C29548 * C100 - C10015 * C94) *
               C19426 +
           (C10009 * C448 - C10013 * C443 + C29548 * C449 - C10015 * C444) *
               C19324 +
           (C10009 * C1067 - C10013 * C1059 + C29548 * C1065 - C10015 * C1058) *
               C19427 +
           (C10009 * C1363 - C10013 * C1357 + C29548 * C1364 - C10015 * C1358) *
               C29557) *
              C29484 * C29439 * C29425 * C84 +
          ((C10013 * C94 - C10009 * C100 + C10015 * C95 - C29548 * C102) *
               C19426 +
           (C10013 * C444 - C10009 * C449 + C10015 * C445 - C29548 * C450) *
               C19324 +
           (C10013 * C1058 - C10009 * C1065 + C10015 * C1057 - C29548 * C1063) *
               C19427 +
           (C10013 * C1358 - C10009 * C1364 + C10015 * C1359 - C29548 * C1365) *
               C29557) *
              C29484 * C29439 * C29425 * C85 +
          ((C10009 * C102 - C10013 * C95 + C29548 * C104 - C10015 * C96) *
               C19426 +
           (C10009 * C450 - C10013 * C445 + C29548 * C451 - C10015 * C446) *
               C19324 +
           (C10009 * C1063 - C10013 * C1057 + C29548 * C2034 - C10015 * C2033) *
               C19427 +
           (C10009 * C1365 - C10013 * C1359 + C29548 * C2380 - C10015 * C2379) *
               C29557) *
              C29484 * C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C10009 * C98 - C10013 * C93 + C29548 * C100 - C10015 * C94) *
               C19426 +
           (C10009 * C448 - C10013 * C443 + C29548 * C449 - C10015 * C444) *
               C19324 +
           (C20461 - C20462 + C20463 - C20464) * C19427 +
           (C20631 - C20632 + C20633 - C20634) * C29557) *
              C29484 * C1054 +
          ((C20462 - C20461 + C20464 - C20463) * C19426 +
           (C20632 - C20631 + C20634 - C20633) * C19324 +
           (C20469 - C20470 + C20471 - C20472) * C19427 +
           (C20635 - C20636 + C20637 - C20638) * C29557) *
              C29484 * C1055 +
          ((C20470 - C20469 + C20472 - C20471) * C19426 +
           (C20636 - C20635 + C20638 - C20637) * C19324 +
           (C10009 * C7538 - C10013 * C7536 + C29548 * C7540 - C10015 * C7537) *
               C19427 +
           (C10009 * C7943 - C10013 * C7941 + C29548 * C7944 - C10015 * C7942) *
               C29557) *
              C29484 * C1056) *
         C29425 * C29413) /
            (p * q * std::sqrt(p + q));
    d2eezy[32] += (-std::pow(Pi, 2.5) *
                   ((((C29484 * C152 - C151 * C93) * C19426 +
                      (C29484 * C491 - C151 * C443) * C19324 +
                      (C7627 - C7628) * C19427 + (C8006 - C8007) * C29557) *
                         C10009 +
                     ((C163 - C164) * C19426 + (C497 - C498) * C19324 +
                      C8843 * C19427 + C9269 * C29557) *
                         C29548) *
                        C29439 * C612 +
                    (((C151 * C618 - C29484 * C678) * C19426 +
                      (C151 * C916 - C29484 * C966) * C19324 +
                      (C9483 - C9484) * C19427 + (C9892 - C9893) * C29557) *
                         C10009 +
                     ((C1568 - C1569) * C19426 + (C1911 - C1912) * C19324 +
                      (C8196 - C8197) * C19427 + (C8615 - C8616) * C29557) *
                         C29548) *
                        C29439 * C613 +
                    (((C29484 * C681 - C151 * C619) * C19426 +
                      (C29484 * C969 - C151 * C919) * C19324 +
                      (C29484 * C6017 - C151 * C5929) * C19427 +
                      (C29484 * C6451 - C151 * C6377) * C29557) *
                         C10009 +
                     ((C29484 * C682 - C151 * C620) * C19426 +
                      (C29484 * C970 - C151 * C920) * C19324 +
                      (C29484 * C6018 - C151 * C5930) * C19427 +
                      (C29484 * C6452 - C151 * C6378) * C29557) *
                         C29548) *
                        C29439 * C614) *
                   C29413) /
                      (p * q * std::sqrt(p + q)) -
                  (std::pow(Pi, 2.5) *
                   ((((C29484 * C152 - C151 * C93) * C19426 +
                      (C29484 * C491 - C151 * C443) * C19324 +
                      (C7627 - C7628) * C19427 + (C8006 - C8007) * C29557) *
                         C10009 +
                     ((C163 - C164) * C19426 + (C497 - C498) * C19324 +
                      C8843 * C19427 + C9269 * C29557) *
                         C29548) *
                        C29439 * C29425 * C84 +
                    (((C164 - C163) * C19426 + (C498 - C497) * C19324 +
                      C8845 * C19427 + C9270 * C29557) *
                         C10009 +
                     ((C168 - C167) * C19426 + (C501 - C500) * C19324 +
                      (C2094 - C2095) * C19427 + (C2435 - C2436) * C29557) *
                         C29548) *
                        C29439 * C29425 * C85 +
                    ((C175 * C19426 + C504 * C19324 + (C2095 - C2094) * C19427 +
                      (C2436 - C2435) * C29557) *
                         C10009 +
                     ((C172 - C171) * C19426 + (C503 - C502) * C19324 +
                      (C29484 * C2087 - C151 * C2033) * C19427 +
                      (C29484 * C2431 - C151 * C2379) * C29557) *
                         C29548) *
                        C29439 * C29425 * C86)) /
                      (p * q * std::sqrt(p + q)) +
                  (2 * std::pow(Pi, 2.5) *
                   ((((C29484 * C152 - C151 * C93) * C19426 +
                      (C29484 * C491 - C151 * C443) * C19324 +
                      (C7627 - C7628) * C19427 + (C8006 - C8007) * C29557) *
                         C10009 +
                     ((C163 - C164) * C19426 + (C497 - C498) * C19324 +
                      C8843 * C19427 + C9269 * C29557) *
                         C29548) *
                        C1054 +
                    (((C7628 - C7627) * C19426 + (C8007 - C8006) * C19324 +
                      (C7631 - C7632) * C19427 + (C8008 - C8009) * C29557) *
                         C10009 +
                     (C8845 * C19426 + C9270 * C19324 +
                      (C7635 - C7636) * C19427 + (C8010 - C8011) * C29557) *
                         C29548) *
                        C1055 +
                    (((C7632 - C7631) * C19426 + (C8009 - C8008) * C19324 +
                      (C29484 * C7622 - C151 * C7536) * C19427 +
                      (C29484 * C8003 - C151 * C7941) * C29557) *
                         C10009 +
                     ((C7636 - C7635) * C19426 + (C8011 - C8010) * C19324 +
                      (C29484 * C7623 - C151 * C7537) * C19427 +
                      (C29484 * C8004 - C151 * C7942) * C29557) *
                         C29548) *
                        C1056) *
                   C29425 * C29413) /
                      (p * q * std::sqrt(p + q));
    d2eezz[32] +=
        (-std::pow(Pi, 2.5) *
         (((C19426 * C215 - C19752 * C93 - C19426 * C443 + C19324 * C545 +
            C19427 * C1169 - C19753 * C1059 - C19427 * C1357 + C29557 * C1453) *
               C29484 * C10009 +
           (C19779 + C19780) * C29484 * C29548) *
              C29439 * C612 -
          ((C19427 * C2672 - C19753 * C2554 - C19427 * C2890 + C29557 * C2999 +
            C19426 * C729 - C19752 * C617 - C19426 * C917 + C19324 * C1011) *
               C29484 * C29548 +
           (C19427 * C2671 - C19753 * C2553 - C19427 * C2889 + C29557 * C2998 +
            C19426 * C728 - C19752 * C618 - C19426 * C916 + C19324 * C1012) *
               C29484 * C10009) *
              C29439 * C613 +
          ((C19426 * C731 - C19752 * C619 - C19426 * C919 + C19324 * C1013 +
            C19427 * C6087 - C19753 * C5929 - C19427 * C6377 + C29557 * C6519) *
               C29484 * C10009 +
           (C19426 * C732 - C19752 * C620 - C19426 * C920 + C19324 * C1014 +
            C19427 * C6088 - C19753 * C5930 - C19427 * C6378 + C29557 * C6520) *
               C29484 * C29548) *
              C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C19426 * C215 - C19752 * C93 - C19426 * C443 + C19324 * C545 +
            C19427 * C1169 - C19753 * C1059 - C19427 * C1357 + C29557 * C1453) *
               C29484 * C10009 +
           (C19779 + C19780) * C29484 * C29548) *
              C29439 * C29425 * C84 -
          ((C19781 + C19782) * C29484 * C29548 +
           (C19780 + C19779) * C29484 * C10009) *
              C29439 * C29425 * C85 +
          ((C19782 + C19781) * C29484 * C10009 +
           (C19426 * C218 - C19752 * C96 - C19426 * C446 + C19324 * C548 +
            C19427 * C2147 - C19753 * C2033 - C19427 * C2379 + C29557 * C2486) *
               C29484 * C29548) *
              C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C19426 * C215 - C19752 * C93 - C19426 * C443 + C19324 * C545 +
            C19427 * C1169 - C19753 * C1059 - C19427 * C1357 + C29557 * C1453) *
               C29484 * C10009 +
           (C19779 + C19780) * C29484 * C29548) *
              C1054 -
          ((C19427 * C1173 - C19753 * C1061 - C19427 * C1361 + C29557 * C1455 +
            C19426 * C1170 - C19752 * C1058 - C19426 * C1358 + C19324 * C1452) *
               C29484 * C29548 +
           (C19427 * C1172 - C19753 * C1060 - C19427 * C1360 + C29557 * C1454 +
            C19426 * C1169 - C19752 * C1059 - C19426 * C1357 + C19324 * C1453) *
               C29484 * C10009) *
              C1055 +
          ((C19426 * C1172 - C19752 * C1060 - C19426 * C1360 + C19324 * C1454 +
            C19427 * C7688 - C19753 * C7536 - C19427 * C7941 + C29557 * C8061) *
               C29484 * C10009 +
           (C19426 * C1173 - C19752 * C1061 - C19426 * C1361 + C19324 * C1455 +
            C19427 * C7689 - C19753 * C7537 - C19427 * C7942 + C29557 * C8062) *
               C29484 * C29548) *
              C1056) *
         C29425 * C29413) /
            (p * q * std::sqrt(p + q));
    d2eexx[33] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C10013 * C98 - C10014 * C93 - C10013 * C99 + C10009 * C108 +
             C10015 * C100 - C10016 * C94 - C10015 * C101 + C29548 * C109) *
                C19324 +
            (C20307 + C20308) * C29557) *
               C29484 * C2031 -
           ((C20309 + C20310) * C29557 + (C20308 + C20307) * C19324) * C29484 *
               C2032) *
              C29425 * C1509 +
          (((C21437 + C21438) * C19324 +
            (C10013 * C1071 - C10014 * C1061 - C10013 * C1072 + C10009 * C1079 +
             C10015 * C1073 - C10016 * C1062 - C10015 * C1074 +
             C29548 * C1080) *
                C29557) *
               C29484 * C2032 -
           ((C21438 + C21437) * C29557 +
            (C10015 * C102 - C10016 * C95 - C10015 * C103 + C29548 * C110 +
             C10013 * C100 - C10014 * C94 - C10013 * C101 + C10009 * C109) *
                C19324) *
               C29484 * C2031) *
              C29425 * C1510)) /
        (p * q * std::sqrt(p + q));
    d2eexy[33] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C29484 * C152 - C151 * C93) * C10013 +
                       (C29484 * C157 - C151 * C99) * C10009 +
                       (C163 - C164) * C10015 + (C165 - C166) * C29548) *
                          C19324 +
                      ((C7627 - C7628) * C10013 + (C7629 - C7630) * C10009 +
                       C8843 * C10015 + C8844 * C29548) *
                          C29557) *
                         C2031 +
                     (((C7628 - C7627) * C10013 + (C7630 - C7629) * C10009 +
                       C8845 * C10015 + C8846 * C29548) *
                          C19324 +
                      ((C7631 - C7632) * C10013 + (C7633 - C7634) * C10009 +
                       (C7635 - C7636) * C10015 + (C7637 - C7638) * C29548) *
                          C29557) *
                         C2032) *
                        C29425 * C1509 +
                    ((((C164 - C163) * C10013 + (C166 - C165) * C10009 +
                       (C168 - C167) * C10015 + (C170 - C169) * C29548) *
                          C19324 +
                      (C8845 * C10013 + C8846 * C10009 +
                       (C2094 - C2095) * C10015 + (C2096 - C2097) * C29548) *
                          C29557) *
                         C2031 +
                     ((C8843 * C10013 + C8844 * C10009 +
                       (C2095 - C2094) * C10015 + (C2097 - C2096) * C29548) *
                          C19324 +
                      ((C7636 - C7635) * C10013 + (C7638 - C7637) * C10009 +
                       (C29484 * C1124 - C151 * C1062) * C10015 +
                       (C29484 * C1130 - C151 * C1074) * C29548) *
                          C29557) *
                         C2032) *
                        C29425 * C1510)) /
                  (p * q * std::sqrt(p + q));
    d2eexz[33] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C19324 * C215 - C19426 * C93 + C29557 * C1169 - C19427 * C1059) *
                C10013 +
            (C19324 * C220 - C19426 * C99 + C29557 * C1175 - C19427 * C1068) *
                C10009 +
            (C19429 - C19430 + C19431 - C19432) * C10015 +
            (C19433 - C19434 + C19435 - C19436) * C29548) *
               C29484 * C2031 +
           ((C19426 * C1059 - C19324 * C1169 + C19427 * C1060 -
             C29557 * C1172) *
                C10013 +
            (C19426 * C1068 - C19324 * C1175 + C19427 * C1070 -
             C29557 * C1178) *
                C10009 +
            (C21571 - C21572 + C21573 - C21574) * C10015 +
            (C21575 - C21576 + C21577 - C21578) * C29548) *
               C29484 * C2032) *
              C29425 * C1509 +
          (((C19430 - C19429 + C19432 - C19431) * C10013 +
            (C19434 - C19433 + C19436 - C19435) * C10009 +
            (C19437 - C19438 + C19439 - C19440) * C10015 +
            (C19441 - C19442 + C19443 - C19444) * C29548) *
               C29484 * C2031 +
           ((C21572 - C21571 + C21574 - C21573) * C10013 +
            (C21576 - C21575 + C21578 - C21577) * C10009 +
            (C19324 * C1171 - C19426 * C1057 + C29557 * C1174 -
             C19427 * C1062) *
                C10015 +
            (C19324 * C1177 - C19426 * C1064 + C29557 * C1180 -
             C19427 * C1074) *
                C29548) *
               C29484 * C2032) *
              C29425 * C1510)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[33] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C10009 * C98 - C10013 * C93 + C29548 * C100 - C10015 * C94) *
                 C151 +
             (C10009 * C282 - C10013 * C277 + C29548 * C283 - C10015 * C278) *
                 C29484) *
                C19324 +
            ((C20461 - C20462 + C20463 - C20464) * C151 +
             (C20465 - C20466 + C20467 - C20468) * C29484) *
                C29557) *
               C2031 +
           (((C20462 - C20461 + C20464 - C20463) * C151 +
             (C20466 - C20465 + C20468 - C20467) * C29484) *
                C19324 +
            ((C20469 - C20470 + C20471 - C20472) * C151 +
             (C20473 - C20474 + C20475 - C20476) * C29484) *
                C29557) *
               C2032) *
              C29425 * C1509 +
          ((((C10013 * C94 - C10009 * C100 + C10015 * C95 - C29548 * C102) *
                 C151 +
             (C10013 * C278 - C10009 * C283 + C10015 * C279 - C29548 * C284) *
                 C29484) *
                C19324 +
            ((C21645 - C21646 + C21647 - C21648) * C151 +
             (C21649 - C21650 + C21651 - C21652) * C29484) *
                C29557) *
               C2031 +
           (((C21646 - C21645 + C21648 - C21647) * C151 +
             (C21650 - C21649 + C21652 - C21651) * C29484) *
                C19324 +
            ((C10009 * C1071 - C10013 * C1061 + C29548 * C1073 -
              C10015 * C1062) *
                 C151 +
             (C10009 * C1229 - C10013 * C1223 + C29548 * C1230 -
              C10015 * C1224) *
                 C29484) *
                C29557) *
               C2032) *
              C29425 * C1510)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[33] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C151 * C152 - C325 * C93 - C151 * C277 + C29484 * C326) * C10009 +
             C350 * C29548) *
                C19324 +
            (C20527 + C20528) * C29557) *
               C2031 -
           ((C20529 + C20530) * C29557 + (C20528 + C20527) * C19324) * C2032) *
              C29425 * C1509 +
          (((C21719 + C21720) * C19324 +
            (C7835 * C10009 +
             (C151 * C1124 - C325 * C1062 - C151 * C1224 + C29484 * C1274) *
                 C29548) *
                C29557) *
               C2032 -
           ((C21720 + C21719) * C29557 +
            (C351 * C29548 + C350 * C10009) * C19324) *
               C2031) *
              C29425 * C1510)) /
        (p * q * std::sqrt(p + q));
    d2eeyz[33] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C19324 * C215 - C19426 * C93 + C29557 * C1169 - C19427 * C1059) *
                 C151 +
             (C19324 * C390 - C19426 * C277 + C29557 * C1313 - C19427 * C1219) *
                 C29484) *
                C10009 +
            ((C19429 - C19430 + C19431 - C19432) * C151 +
             (C19595 - C19596 + C19597 - C19598) * C29484) *
                C29548) *
               C2031 +
           (((C19426 * C1059 - C19324 * C1169 + C19427 * C1060 -
              C29557 * C1172) *
                 C151 +
             (C19426 * C1219 - C19324 * C1313 + C19427 * C1222 -
              C29557 * C1316) *
                 C29484) *
                C10009 +
            ((C21571 - C21572 + C21573 - C21574) * C151 +
             (C21787 - C21788 + C21789 - C21790) * C29484) *
                C29548) *
               C2032) *
              C29425 * C1509 +
          ((((C19430 - C19429 + C19432 - C19431) * C151 +
             (C19596 - C19595 + C19598 - C19597) * C29484) *
                C10009 +
            ((C19437 - C19438 + C19439 - C19440) * C151 +
             (C19599 - C19600 + C19601 - C19602) * C29484) *
                C29548) *
               C2031 +
           (((C21572 - C21571 + C21574 - C21573) * C151 +
             (C21788 - C21787 + C21790 - C21789) * C29484) *
                C10009 +
            ((C19324 * C1171 - C19426 * C1057 + C29557 * C1174 -
              C19427 * C1062) *
                 C151 +
             (C19324 * C1315 - C19426 * C1221 + C29557 * C1318 -
              C19427 * C1224) *
                 C29484) *
                C29548) *
               C2032) *
              C29425 * C1510)) /
        (p * q * std::sqrt(p + q));
    d2eezx[33] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C10009 * C98 - C10013 * C93 + C29548 * C100 - C10015 * C94) *
                C19426 +
            (C10009 * C448 - C10013 * C443 + C29548 * C449 - C10015 * C444) *
                C19324 +
            (C20461 - C20462 + C20463 - C20464) * C19427 +
            (C20631 - C20632 + C20633 - C20634) * C29557) *
               C29484 * C2031 +
           ((C20462 - C20461 + C20464 - C20463) * C19426 +
            (C20632 - C20631 + C20634 - C20633) * C19324 +
            (C20469 - C20470 + C20471 - C20472) * C19427 +
            (C20635 - C20636 + C20637 - C20638) * C29557) *
               C29484 * C2032) *
              C29425 * C1509 +
          (((C10013 * C94 - C10009 * C100 + C10015 * C95 - C29548 * C102) *
                C19426 +
            (C10013 * C444 - C10009 * C449 + C10015 * C445 - C29548 * C450) *
                C19324 +
            (C21645 - C21646 + C21647 - C21648) * C19427 +
            (C21857 - C21858 + C21859 - C21860) * C29557) *
               C29484 * C2031 +
           ((C21646 - C21645 + C21648 - C21647) * C19426 +
            (C21858 - C21857 + C21860 - C21859) * C19324 +
            (C10009 * C1071 - C10013 * C1061 + C29548 * C1073 -
             C10015 * C1062) *
                C19427 +
            (C10009 * C1367 - C10013 * C1361 + C29548 * C1368 -
             C10015 * C1362) *
                C29557) *
               C29484 * C2032) *
              C29425 * C1510)) /
        (p * q * std::sqrt(p + q));
    d2eezy[33] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C29484 * C152 - C151 * C93) * C19426 +
                       (C29484 * C491 - C151 * C443) * C19324 +
                       (C7627 - C7628) * C19427 + (C8006 - C8007) * C29557) *
                          C10009 +
                      ((C163 - C164) * C19426 + (C497 - C498) * C19324 +
                       C8843 * C19427 + C9269 * C29557) *
                          C29548) *
                         C2031 +
                     (((C7628 - C7627) * C19426 + (C8007 - C8006) * C19324 +
                       (C7631 - C7632) * C19427 + (C8008 - C8009) * C29557) *
                          C10009 +
                      (C8845 * C19426 + C9270 * C19324 +
                       (C7635 - C7636) * C19427 + (C8010 - C8011) * C29557) *
                          C29548) *
                         C2032) *
                        C29425 * C1509 +
                    ((((C164 - C163) * C19426 + (C498 - C497) * C19324 +
                       C8845 * C19427 + C9270 * C29557) *
                          C10009 +
                      ((C168 - C167) * C19426 + (C501 - C500) * C19324 +
                       (C2094 - C2095) * C19427 + (C2435 - C2436) * C29557) *
                          C29548) *
                         C2031 +
                     ((C8843 * C19426 + C9269 * C19324 +
                       (C7636 - C7635) * C19427 + (C8011 - C8010) * C29557) *
                          C10009 +
                      ((C2095 - C2094) * C19426 + (C2436 - C2435) * C19324 +
                       (C29484 * C1124 - C151 * C1062) * C19427 +
                       (C29484 * C1412 - C151 * C1362) * C29557) *
                          C29548) *
                         C2032) *
                        C29425 * C1510)) /
                  (p * q * std::sqrt(p + q));
    d2eezz[33] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C19426 * C215 - C19752 * C93 - C19426 * C443 +
                       C19324 * C545 + C19427 * C1169 - C19753 * C1059 -
                       C19427 * C1357 + C29557 * C1453) *
                          C29484 * C10009 +
                      (C19779 + C19780) * C29484 * C29548) *
                         C2031 -
                     ((C22005 + C22006) * C29484 * C29548 +
                      (C19427 * C1172 - C19753 * C1060 - C19427 * C1360 +
                       C29557 * C1454 + C19426 * C1169 - C19752 * C1059 -
                       C19426 * C1357 + C19324 * C1453) *
                          C29484 * C10009) *
                         C2032) *
                        C29425 * C1509 +
                    (((C22006 + C22005) * C29484 * C10009 +
                      (C19426 * C1171 - C19752 * C1057 - C19426 * C1359 +
                       C19324 * C1451 + C19427 * C1174 - C19753 * C1062 -
                       C19427 * C1362 + C29557 * C1456) *
                          C29484 * C29548) *
                         C2032 -
                     ((C19781 + C19782) * C29484 * C29548 +
                      (C19780 + C19779) * C29484 * C10009) *
                         C2031) *
                        C29425 * C1510)) /
                  (p * q * std::sqrt(p + q));
    d2eexx[34] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C10013 * C98 - C10014 * C93 - C10013 * C99 + C10009 * C108 +
            C10015 * C100 - C10016 * C94 - C10015 * C101 + C29548 * C109) *
               C19324 +
           (C10013 * C1067 - C10014 * C1059 - C10013 * C1068 + C10009 * C1077 +
            C10015 * C1065 - C10016 * C1058 - C10015 * C1066 + C29548 * C1076) *
               C29557) *
              C29484 * C29439 * C29425 * C84 -
          ((C10015 * C1063 - C10016 * C1057 - C10015 * C1064 + C29548 * C1075 +
            C10013 * C1065 - C10014 * C1058 - C10013 * C1066 + C10009 * C1076) *
               C29557 +
           (C10015 * C102 - C10016 * C95 - C10015 * C103 + C29548 * C110 +
            C10013 * C100 - C10014 * C94 - C10013 * C101 + C10009 * C109) *
               C19324) *
              C29484 * C29439 * C29425 * C85 +
          ((C10013 * C102 - C10014 * C95 - C10013 * C103 + C10009 * C110 +
            C10015 * C104 - C10016 * C96 - C10015 * C105 + C29548 * C111) *
               C19324 +
           (C10013 * C1063 - C10014 * C1057 - C10013 * C1064 + C10009 * C1075 +
            C10015 * C2034 - C10016 * C2033 - C10015 * C2035 + C29548 * C2036) *
               C29557) *
              C29484 * C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C10013 * C98 - C10014 * C93 - C10013 * C99 + C10009 * C108 +
            C10015 * C100 - C10016 * C94 - C10015 * C101 + C29548 * C109) *
               C19324 +
           (C10013 * C1067 - C10014 * C1059 - C10013 * C1068 + C10009 * C1077 +
            C10015 * C1065 - C10016 * C1058 - C10015 * C1066 + C29548 * C1076) *
               C29557) *
              C29484 * C29439 * C612 -
          ((C12778 + C12779) * C29557 + (C10553 + C10552) * C19324) * C29484 *
              C29439 * C613 +
          ((C10555 + C10554) * C19324 +
           (C10013 * C5931 - C10014 * C5929 - C10013 * C5932 + C10009 * C5935 +
            C10015 * C5933 - C10016 * C5930 - C10015 * C5934 + C29548 * C5936) *
               C29557) *
              C29484 * C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q));
    d2eexy[34] += (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C29484 * C152 - C151 * C93) * C10013 +
                      (C29484 * C157 - C151 * C99) * C10009 +
                      (C163 - C164) * C10015 + (C165 - C166) * C29548) *
                         C19324 +
                     ((C7627 - C7628) * C10013 + (C7629 - C7630) * C10009 +
                      C8843 * C10015 + C8844 * C29548) *
                         C29557) *
                        C29439 * C29425 * C84 +
                    (((C164 - C163) * C10013 + (C166 - C165) * C10009 +
                      (C168 - C167) * C10015 + (C170 - C169) * C29548) *
                         C19324 +
                     (C8845 * C10013 + C8846 * C10009 +
                      (C2094 - C2095) * C10015 + (C2096 - C2097) * C29548) *
                         C29557) *
                        C29439 * C29425 * C85 +
                    ((C175 * C10013 + C176 * C10009 + (C172 - C171) * C10015 +
                      (C174 - C173) * C29548) *
                         C19324 +
                     ((C2095 - C2094) * C10013 + (C2097 - C2096) * C10009 +
                      (C29484 * C2087 - C151 * C2033) * C10015 +
                      (C29484 * C2088 - C151 * C2035) * C29548) *
                         C29557) *
                        C29439 * C29425 * C86)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C29484 * C152 - C151 * C93) * C10013 +
                      (C29484 * C157 - C151 * C99) * C10009 +
                      (C163 - C164) * C10015 + (C165 - C166) * C29548) *
                         C19324 +
                     ((C7627 - C7628) * C10013 + (C7629 - C7630) * C10009 +
                      C8843 * C10015 + C8844 * C29548) *
                         C29557) *
                        C29439 * C612 +
                    (((C151 * C618 - C29484 * C678) * C10013 +
                      (C151 * C627 - C29484 * C684) * C10009 +
                      (C1568 - C1569) * C10015 + (C1570 - C1571) * C29548) *
                         C19324 +
                     ((C9483 - C9484) * C10013 + (C9485 - C9486) * C10009 +
                      (C8196 - C8197) * C10015 + (C8198 - C8199) * C29548) *
                         C29557) *
                        C29439 * C613 +
                    (((C29484 * C681 - C151 * C619) * C10013 +
                      (C29484 * C687 - C151 * C629) * C10009 +
                      (C29484 * C682 - C151 * C620) * C10015 +
                      (C29484 * C688 - C151 * C631) * C29548) *
                         C19324 +
                     ((C29484 * C6017 - C151 * C5929) * C10013 +
                      (C29484 * C6019 - C151 * C5932) * C10009 +
                      (C29484 * C6018 - C151 * C5930) * C10015 +
                      (C29484 * C6020 - C151 * C5934) * C29548) *
                         C29557) *
                        C29439 * C614) *
                   C29413) /
                      (p * q * std::sqrt(p + q));
    d2eexz[34] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C19324 * C215 - C19426 * C93 + C29557 * C1169 - C19427 * C1059) *
               C10013 +
           (C19324 * C220 - C19426 * C99 + C29557 * C1175 - C19427 * C1068) *
               C10009 +
           (C19429 - C19430 + C19431 - C19432) * C10015 +
           (C19433 - C19434 + C19435 - C19436) * C29548) *
              C29484 * C29439 * C29425 * C84 +
          ((C19430 - C19429 + C19432 - C19431) * C10013 +
           (C19434 - C19433 + C19436 - C19435) * C10009 +
           (C19437 - C19438 + C19439 - C19440) * C10015 +
           (C19441 - C19442 + C19443 - C19444) * C29548) *
              C29484 * C29439 * C29425 * C85 +
          ((C19438 - C19437 + C19440 - C19439) * C10013 +
           (C19442 - C19441 + C19444 - C19443) * C10009 +
           (C19324 * C218 - C19426 * C96 + C29557 * C2147 - C19427 * C2033) *
               C10015 +
           (C19324 * C223 - C19426 * C105 + C29557 * C2148 - C19427 * C2035) *
               C29548) *
              C29484 * C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C19324 * C215 - C19426 * C93 + C29557 * C1169 - C19427 * C1059) *
               C10013 +
           (C19324 * C220 - C19426 * C99 + C29557 * C1175 - C19427 * C1068) *
               C10009 +
           (C19429 - C19430 + C19431 - C19432) * C10015 +
           (C19433 - C19434 + C19435 - C19436) * C29548) *
              C29484 * C29439 * C612 +
          ((C19426 * C618 - C19324 * C728 + C19427 * C2553 - C29557 * C2671) *
               C10013 +
           (C19426 * C627 - C19324 * C734 + C19427 * C2557 - C29557 * C2674) *
               C10009 +
           (C19426 * C617 - C19324 * C729 + C19427 * C2554 - C29557 * C2672) *
               C10015 +
           (C19426 * C625 - C19324 * C735 + C19427 * C2559 - C29557 * C2675) *
               C29548) *
              C29484 * C29439 * C613 +
          ((C19324 * C731 - C19426 * C619 + C29557 * C6087 - C19427 * C5929) *
               C10013 +
           (C19324 * C737 - C19426 * C629 + C29557 * C6089 - C19427 * C5932) *
               C10009 +
           (C19324 * C732 - C19426 * C620 + C29557 * C6088 - C19427 * C5930) *
               C10015 +
           (C19324 * C738 - C19426 * C631 + C29557 * C6090 - C19427 * C5934) *
               C29548) *
              C29484 * C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q));
    d2eeyx[34] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10009 * C98 - C10013 * C93 + C29548 * C100 - C10015 * C94) *
                C151 +
            (C10009 * C282 - C10013 * C277 + C29548 * C283 - C10015 * C278) *
                C29484) *
               C19324 +
           ((C10009 * C1067 - C10013 * C1059 + C29548 * C1065 -
             C10015 * C1058) *
                C151 +
            (C10009 * C1225 - C10013 * C1219 + C29548 * C1226 -
             C10015 * C1220) *
                C29484) *
               C29557) *
              C29439 * C29425 * C84 +
          (((C10013 * C94 - C10009 * C100 + C10015 * C95 - C29548 * C102) *
                C151 +
            (C10013 * C278 - C10009 * C283 + C10015 * C279 - C29548 * C284) *
                C29484) *
               C19324 +
           ((C10013 * C1058 - C10009 * C1065 + C10015 * C1057 -
             C29548 * C1063) *
                C151 +
            (C10013 * C1220 - C10009 * C1226 + C10015 * C1221 -
             C29548 * C1227) *
                C29484) *
               C29557) *
              C29439 * C29425 * C85 +
          (((C10009 * C102 - C10013 * C95 + C29548 * C104 - C10015 * C96) *
                C151 +
            (C10009 * C284 - C10013 * C279 + C29548 * C285 - C10015 * C280) *
                C29484) *
               C19324 +
           ((C10009 * C1063 - C10013 * C1057 + C29548 * C2034 -
             C10015 * C2033) *
                C151 +
            (C10009 * C1227 - C10013 * C1221 + C29548 * C2208 -
             C10015 * C2207) *
                C29484) *
               C29557) *
              C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10009 * C98 - C10013 * C93 + C29548 * C100 - C10015 * C94) *
                C151 +
            (C10009 * C282 - C10013 * C277 + C29548 * C283 - C10015 * C278) *
                C29484) *
               C19324 +
           ((C10009 * C1067 - C10013 * C1059 + C29548 * C1065 -
             C10015 * C1058) *
                C151 +
            (C10009 * C1225 - C10013 * C1219 + C29548 * C1226 -
             C10015 * C1220) *
                C29484) *
               C29557) *
              C29439 * C612 +
          (((C10707 - C10706 + C10709 - C10708) * C151 +
            (C10711 - C10710 + C10713 - C10712) * C29484) *
               C19324 +
           ((C12978 - C12979 + C12980 - C12981) * C151 +
            (C12982 - C12983 + C12984 - C12985) * C29484) *
               C29557) *
              C29439 * C613 +
          (((C10715 - C10714 + C10717 - C10716) * C151 +
            (C10719 - C10718 + C10721 - C10720) * C29484) *
               C19324 +
           ((C10009 * C5931 - C10013 * C5929 + C29548 * C5933 -
             C10015 * C5930) *
                C151 +
            (C10009 * C6163 - C10013 * C6161 + C29548 * C6164 -
             C10015 * C6162) *
                C29484) *
               C29557) *
              C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q));
    d2eeyy[34] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C151 * C152 - C325 * C93 - C151 * C277 + C29484 * C326) * C10009 +
            C350 * C29548) *
               C19324 +
           (C7834 * C10009 + C2274 * C29548) * C29557) *
              C29439 * C29425 * C84 -
          ((C2273 * C29548 + C2274 * C10009) * C29557 +
           (C351 * C29548 + C350 * C10009) * C19324) *
              C29439 * C29425 * C85 +
          ((C351 * C10009 + C352 * C29548) * C19324 +
           (C2273 * C10009 +
            (C151 * C2087 - C325 * C2033 - C151 * C2207 + C29484 * C2259) *
                C29548) *
               C29557) *
              C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C151 * C152 - C325 * C93 - C151 * C277 + C29484 * C326) * C10009 +
            C350 * C29548) *
               C19324 +
           (C7834 * C10009 + C2274 * C29548) * C29557) *
              C29439 * C612 -
          ((C8412 * C29548 + C9692 * C10009) * C29557 +
           (C1752 * C29548 +
            (C151 * C678 - C325 * C618 - C151 * C778 + C29484 * C830) *
                C10009) *
               C19324) *
              C29439 * C613 +
          (((C151 * C681 - C325 * C619 - C151 * C781 + C29484 * C831) * C10009 +
            (C151 * C682 - C325 * C620 - C151 * C782 + C29484 * C832) *
                C29548) *
               C19324 +
           ((C151 * C6017 - C325 * C5929 - C151 * C6161 + C29484 * C6239) *
                C10009 +
            (C151 * C6018 - C325 * C5930 - C151 * C6162 + C29484 * C6240) *
                C29548) *
               C29557) *
              C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q));
    d2eeyz[34] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19324 * C215 - C19426 * C93 + C29557 * C1169 - C19427 * C1059) *
                C151 +
            (C19324 * C390 - C19426 * C277 + C29557 * C1313 - C19427 * C1219) *
                C29484) *
               C10009 +
           ((C19429 - C19430 + C19431 - C19432) * C151 +
            (C19595 - C19596 + C19597 - C19598) * C29484) *
               C29548) *
              C29439 * C29425 * C84 +
          (((C19430 - C19429 + C19432 - C19431) * C151 +
            (C19596 - C19595 + C19598 - C19597) * C29484) *
               C10009 +
           ((C19437 - C19438 + C19439 - C19440) * C151 +
            (C19599 - C19600 + C19601 - C19602) * C29484) *
               C29548) *
              C29439 * C29425 * C85 +
          (((C19438 - C19437 + C19440 - C19439) * C151 +
            (C19600 - C19599 + C19602 - C19601) * C29484) *
               C10009 +
           ((C19324 * C218 - C19426 * C96 + C29557 * C2147 - C19427 * C2033) *
                C151 +
            (C19324 * C393 - C19426 * C280 + C29557 * C2324 - C19427 * C2207) *
                C29484) *
               C29548) *
              C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19324 * C215 - C19426 * C93 + C29557 * C1169 - C19427 * C1059) *
                C151 +
            (C19324 * C390 - C19426 * C277 + C29557 * C1313 - C19427 * C1219) *
                C29484) *
               C10009 +
           ((C19429 - C19430 + C19431 - C19432) * C151 +
            (C19595 - C19596 + C19597 - C19598) * C29484) *
               C29548) *
              C29439 * C612 +
          (((C19426 * C618 - C19324 * C728 + C19427 * C2553 - C29557 * C2671) *
                C151 +
            (C19426 * C778 - C19324 * C872 + C19427 * C2727 - C29557 * C2836) *
                C29484) *
               C10009 +
           ((C19426 * C617 - C19324 * C729 + C19427 * C2554 - C29557 * C2672) *
                C151 +
            (C19426 * C779 - C19324 * C873 + C19427 * C2728 - C29557 * C2837) *
                C29484) *
               C29548) *
              C29439 * C613 +
          (((C19324 * C731 - C19426 * C619 + C29557 * C6087 - C19427 * C5929) *
                C151 +
            (C19324 * C875 - C19426 * C781 + C29557 * C6307 - C19427 * C6161) *
                C29484) *
               C10009 +
           ((C19324 * C732 - C19426 * C620 + C29557 * C6088 - C19427 * C5930) *
                C151 +
            (C19324 * C876 - C19426 * C782 + C29557 * C6308 - C19427 * C6162) *
                C29484) *
               C29548) *
              C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q));
    d2eezx[34] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C10009 * C98 - C10013 * C93 + C29548 * C100 - C10015 * C94) *
               C19426 +
           (C10009 * C448 - C10013 * C443 + C29548 * C449 - C10015 * C444) *
               C19324 +
           (C10009 * C1067 - C10013 * C1059 + C29548 * C1065 - C10015 * C1058) *
               C19427 +
           (C10009 * C1363 - C10013 * C1357 + C29548 * C1364 - C10015 * C1358) *
               C29557) *
              C29484 * C29439 * C29425 * C84 +
          ((C10013 * C94 - C10009 * C100 + C10015 * C95 - C29548 * C102) *
               C19426 +
           (C10013 * C444 - C10009 * C449 + C10015 * C445 - C29548 * C450) *
               C19324 +
           (C10013 * C1058 - C10009 * C1065 + C10015 * C1057 - C29548 * C1063) *
               C19427 +
           (C10013 * C1358 - C10009 * C1364 + C10015 * C1359 - C29548 * C1365) *
               C29557) *
              C29484 * C29439 * C29425 * C85 +
          ((C10009 * C102 - C10013 * C95 + C29548 * C104 - C10015 * C96) *
               C19426 +
           (C10009 * C450 - C10013 * C445 + C29548 * C451 - C10015 * C446) *
               C19324 +
           (C10009 * C1063 - C10013 * C1057 + C29548 * C2034 - C10015 * C2033) *
               C19427 +
           (C10009 * C1365 - C10013 * C1359 + C29548 * C2380 - C10015 * C2379) *
               C29557) *
              C29484 * C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C10009 * C98 - C10013 * C93 + C29548 * C100 - C10015 * C94) *
               C19426 +
           (C10009 * C448 - C10013 * C443 + C29548 * C449 - C10015 * C444) *
               C19324 +
           (C10009 * C1067 - C10013 * C1059 + C29548 * C1065 - C10015 * C1058) *
               C19427 +
           (C10009 * C1363 - C10013 * C1357 + C29548 * C1364 - C10015 * C1358) *
               C29557) *
              C29484 * C29439 * C612 +
          ((C10707 - C10706 + C10709 - C10708) * C19426 +
           (C10873 - C10872 + C10875 - C10874) * C19324 +
           (C12978 - C12979 + C12980 - C12981) * C19427 +
           (C13184 - C13185 + C13186 - C13187) * C29557) *
              C29484 * C29439 * C613 +
          ((C10715 - C10714 + C10717 - C10716) * C19426 +
           (C10877 - C10876 + C10879 - C10878) * C19324 +
           (C10009 * C5931 - C10013 * C5929 + C29548 * C5933 - C10015 * C5930) *
               C19427 +
           (C10009 * C6379 - C10013 * C6377 + C29548 * C6380 - C10015 * C6378) *
               C29557) *
              C29484 * C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q));
    d2eezy[34] += (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C29484 * C152 - C151 * C93) * C19426 +
                      (C29484 * C491 - C151 * C443) * C19324 +
                      (C7627 - C7628) * C19427 + (C8006 - C8007) * C29557) *
                         C10009 +
                     ((C163 - C164) * C19426 + (C497 - C498) * C19324 +
                      C8843 * C19427 + C9269 * C29557) *
                         C29548) *
                        C29439 * C29425 * C84 +
                    (((C164 - C163) * C19426 + (C498 - C497) * C19324 +
                      C8845 * C19427 + C9270 * C29557) *
                         C10009 +
                     ((C168 - C167) * C19426 + (C501 - C500) * C19324 +
                      (C2094 - C2095) * C19427 + (C2435 - C2436) * C29557) *
                         C29548) *
                        C29439 * C29425 * C85 +
                    ((C175 * C19426 + C504 * C19324 + (C2095 - C2094) * C19427 +
                      (C2436 - C2435) * C29557) *
                         C10009 +
                     ((C172 - C171) * C19426 + (C503 - C502) * C19324 +
                      (C29484 * C2087 - C151 * C2033) * C19427 +
                      (C29484 * C2431 - C151 * C2379) * C29557) *
                         C29548) *
                        C29439 * C29425 * C86)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C29484 * C152 - C151 * C93) * C19426 +
                      (C29484 * C491 - C151 * C443) * C19324 +
                      (C7627 - C7628) * C19427 + (C8006 - C8007) * C29557) *
                         C10009 +
                     ((C163 - C164) * C19426 + (C497 - C498) * C19324 +
                      C8843 * C19427 + C9269 * C29557) *
                         C29548) *
                        C29439 * C612 +
                    (((C151 * C618 - C29484 * C678) * C19426 +
                      (C151 * C916 - C29484 * C966) * C19324 +
                      (C9483 - C9484) * C19427 + (C9892 - C9893) * C29557) *
                         C10009 +
                     ((C1568 - C1569) * C19426 + (C1911 - C1912) * C19324 +
                      (C8196 - C8197) * C19427 + (C8615 - C8616) * C29557) *
                         C29548) *
                        C29439 * C613 +
                    (((C29484 * C681 - C151 * C619) * C19426 +
                      (C29484 * C969 - C151 * C919) * C19324 +
                      (C29484 * C6017 - C151 * C5929) * C19427 +
                      (C29484 * C6451 - C151 * C6377) * C29557) *
                         C10009 +
                     ((C29484 * C682 - C151 * C620) * C19426 +
                      (C29484 * C970 - C151 * C920) * C19324 +
                      (C29484 * C6018 - C151 * C5930) * C19427 +
                      (C29484 * C6452 - C151 * C6378) * C29557) *
                         C29548) *
                        C29439 * C614) *
                   C29413) /
                      (p * q * std::sqrt(p + q));
    d2eezz[34] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C19426 * C215 - C19752 * C93 - C19426 * C443 + C19324 * C545 +
            C19427 * C1169 - C19753 * C1059 - C19427 * C1357 + C29557 * C1453) *
               C29484 * C10009 +
           (C19779 + C19780) * C29484 * C29548) *
              C29439 * C29425 * C84 -
          ((C19781 + C19782) * C29484 * C29548 +
           (C19780 + C19779) * C29484 * C10009) *
              C29439 * C29425 * C85 +
          ((C19782 + C19781) * C29484 * C10009 +
           (C19426 * C218 - C19752 * C96 - C19426 * C446 + C19324 * C548 +
            C19427 * C2147 - C19753 * C2033 - C19427 * C2379 + C29557 * C2486) *
               C29484 * C29548) *
              C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C19426 * C215 - C19752 * C93 - C19426 * C443 + C19324 * C545 +
            C19427 * C1169 - C19753 * C1059 - C19427 * C1357 + C29557 * C1453) *
               C29484 * C10009 +
           (C19779 + C19780) * C29484 * C29548) *
              C29439 * C612 -
          ((C19427 * C2672 - C19753 * C2554 - C19427 * C2890 + C29557 * C2999 +
            C19426 * C729 - C19752 * C617 - C19426 * C917 + C19324 * C1011) *
               C29484 * C29548 +
           (C19427 * C2671 - C19753 * C2553 - C19427 * C2889 + C29557 * C2998 +
            C19426 * C728 - C19752 * C618 - C19426 * C916 + C19324 * C1012) *
               C29484 * C10009) *
              C29439 * C613 +
          ((C19426 * C731 - C19752 * C619 - C19426 * C919 + C19324 * C1013 +
            C19427 * C6087 - C19753 * C5929 - C19427 * C6377 + C29557 * C6519) *
               C29484 * C10009 +
           (C19426 * C732 - C19752 * C620 - C19426 * C920 + C19324 * C1014 +
            C19427 * C6088 - C19753 * C5930 - C19427 * C6378 + C29557 * C6520) *
               C29484 * C29548) *
              C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q));
    d2eexx[35] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C13361 * C98 - C13362 * C93 - C13361 * C99 + C29390 * C108) *
                 C19324 +
             C16920 * C29557) *
                C3053 +
            (C23103 + C23104) * C29555) *
               C29439 * C1507 -
           ((C23105 + C23106) * C29555 + (C23104 + C23103) * C3053) * C29439 *
               C1508) *
              C1509 +
          (((C24127 + C24128) * C3053 +
            (C14520 * C19324 + (C13361 * C5933 - C13362 * C5930 -
                                C13361 * C5934 + C29390 * C5936) *
                                   C29557) *
                C29555) *
               C29439 * C1508 -
           ((C24128 + C24127) * C29555 +
            (C18086 * C29557 +
             (C13361 * C100 - C13362 * C94 - C13361 * C101 + C29390 * C109) *
                 C19324) *
                C3053) *
               C29439 * C1507) *
              C1510)) /
        (p * q * std::sqrt(p + q));
    d2eexy[35] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C3053 * C152 - C3109 * C93 + C29555 * C678 - C3110 * C618) *
                 C13361 +
             (C3053 * C157 - C3109 * C99 + C29555 * C684 - C3110 * C627) *
                 C29390) *
                C19324 +
            ((C23659 - C23660 + C23661 - C23662) * C13361 +
             (C23663 - C23664 + C23665 - C23666) * C29390) *
                C29557) *
               C29439 * C1507 +
           (((C3109 * C618 - C3053 * C678 + C3110 * C619 - C29555 * C681) *
                 C13361 +
             (C3109 * C627 - C3053 * C684 + C3110 * C629 - C29555 * C687) *
                 C29390) *
                C19324 +
            ((C3109 * C2553 - C3053 * C2615 + C3110 * C5929 - C29555 * C6017) *
                 C13361 +
             (C3109 * C2557 - C3053 * C2618 + C3110 * C5932 - C29555 * C6019) *
                 C29390) *
                C29557) *
               C29439 * C1508) *
              C1509 +
          ((((C3113 - C3112 + C3115 - C3114) * C13361 +
             (C3117 - C3116 + C3119 - C3118) * C29390) *
                C19324 +
            ((C5361 - C5362 + C5363 - C5364) * C13361 +
             (C5365 - C5366 + C5367 - C5368) * C29390) *
                C29557) *
               C29439 * C1507 +
           (((C4722 - C4721 + C4724 - C4723) * C13361 +
             (C4726 - C4725 + C4728 - C4727) * C29390) *
                C19324 +
            ((C3053 * C2616 - C3109 * C2554 + C29555 * C6018 - C3110 * C5930) *
                 C13361 +
             (C3053 * C2619 - C3109 * C2559 + C29555 * C6020 - C3110 * C5934) *
                 C29390) *
                C29557) *
               C29439 * C1508) *
              C1510)) /
        (p * q * std::sqrt(p + q));
    d2eexz[35] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C19324 * C215 - C19426 * C93 + C29557 * C1169 - C19427 * C1059) *
                 C13361 +
             (C19324 * C220 - C19426 * C99 + C29557 * C1175 - C19427 * C1068) *
                 C29390) *
                C3053 +
            ((C23207 - C23208 + C23209 - C23210) * C13361 +
             (C23211 - C23212 + C23213 - C23214) * C29390) *
                C29555) *
               C29439 * C1507 +
           (((C23208 - C23207 + C23210 - C23209) * C13361 +
             (C23212 - C23211 + C23214 - C23213) * C29390) *
                C3053 +
            ((C23215 - C23216 + C23217 - C23218) * C13361 +
             (C23219 - C23220 + C23221 - C23222) * C29390) *
                C29555) *
               C29439 * C1508) *
              C1509 +
          ((((C19430 - C19429 + C19432 - C19431) * C13361 +
             (C19434 - C19433 + C19436 - C19435) * C29390) *
                C3053 +
            ((C20937 - C20938 + C20939 - C20940) * C13361 +
             (C20941 - C20942 + C20943 - C20944) * C29390) *
                C29555) *
               C29439 * C1507 +
           (((C20938 - C20937 + C20940 - C20939) * C13361 +
             (C20942 - C20941 + C20944 - C20943) * C29390) *
                C3053 +
            ((C19324 * C732 - C19426 * C620 + C29557 * C6088 - C19427 * C5930) *
                 C13361 +
             (C19324 * C738 - C19426 * C631 + C29557 * C6090 - C19427 * C5934) *
                 C29390) *
                C29555) *
               C29439 * C1508) *
              C1510)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[35] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C29390 * C98 - C13361 * C93) * C3109 +
                       (C29390 * C282 - C13361 * C277) * C3053 +
                       (C13869 - C13870) * C3110 + (C13871 - C13872) * C29555) *
                          C19324 +
                      ((C17095 - C17096) * C3109 + (C17097 - C17098) * C3053 +
                       C18903 * C3110 + C18904 * C29555) *
                          C29557) *
                         C29439 * C1507 +
                     (((C13870 - C13869) * C3109 + (C13872 - C13871) * C3053 +
                       (C13874 - C13873) * C3110 + (C13876 - C13875) * C29555) *
                          C19324 +
                      (C18905 * C3109 + C18906 * C3053 +
                       (C15619 - C15620) * C3110 + (C15621 - C15622) * C29555) *
                          C29557) *
                         C29439 * C1508) *
                        C1509 +
                    ((((C13361 * C94 - C29390 * C100) * C3109 +
                       (C13361 * C278 - C29390 * C283) * C3053 +
                       (C14673 - C14674) * C3110 + (C14675 - C14676) * C29555) *
                          C19324 +
                      ((C18285 - C18286) * C3109 + (C18287 - C18288) * C3053 +
                       (C17678 - C17679) * C3110 + (C17680 - C17681) * C29555) *
                          C29557) *
                         C29439 * C1507 +
                     (((C14674 - C14673) * C3109 + (C14676 - C14675) * C3053 +
                       (C14678 - C14677) * C3110 + (C14680 - C14679) * C29555) *
                          C19324 +
                      ((C17679 - C17678) * C3109 + (C17681 - C17680) * C3053 +
                       (C29390 * C5933 - C13361 * C5930) * C3110 +
                       (C29390 * C6164 - C13361 * C6162) * C29555) *
                          C29557) *
                         C29439 * C1508) *
                        C1510)) /
                  (p * q * std::sqrt(p + q));
    d2eeyy[35] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C3109 * C152 - C3277 * C93 - C3109 * C277 + C3053 * C326 +
             C3110 * C678 - C3278 * C618 - C3110 * C778 + C29555 * C830) *
                C29390 * C19324 +
            (C23849 + C23850) * C29390 * C29557) *
               C29439 * C1507 -
           ((C3110 * C6017 - C3278 * C5929 - C3110 * C6161 + C29555 * C6239 +
             C3109 * C2615 - C3277 * C2553 - C3109 * C2727 + C3053 * C2783) *
                C29390 * C29557 +
            (C3110 * C681 - C3278 * C619 - C3110 * C781 + C29555 * C831 +
             C3109 * C678 - C3277 * C618 - C3109 * C778 + C3053 * C830) *
                C29390 * C19324) *
               C29439 * C1508) *
              C1509 +
          (((C4952 + C4951) * C29390 * C19324 +
            (C3109 * C2616 - C3277 * C2554 - C3109 * C2728 + C3053 * C2784 +
             C3110 * C6018 - C3278 * C5930 - C3110 * C6162 + C29555 * C6240) *
                C29390 * C29557) *
               C29439 * C1508 -
           ((C5583 + C5584) * C29390 * C29557 +
            (C3305 + C3304) * C29390 * C19324) *
               C29439 * C1507) *
              C1510)) /
        (p * q * std::sqrt(p + q));
    d2eeyz[35] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C19324 * C215 - C19426 * C93 + C29557 * C1169 - C19427 * C1059) *
                C3109 +
            (C19324 * C390 - C19426 * C277 + C29557 * C1313 - C19427 * C1219) *
                C3053 +
            (C23207 - C23208 + C23209 - C23210) * C3110 +
            (C23373 - C23374 + C23375 - C23376) * C29555) *
               C29390 * C29439 * C1507 +
           ((C23208 - C23207 + C23210 - C23209) * C3109 +
            (C23374 - C23373 + C23376 - C23375) * C3053 +
            (C23215 - C23216 + C23217 - C23218) * C3110 +
            (C23377 - C23378 + C23379 - C23380) * C29555) *
               C29390 * C29439 * C1508) *
              C1509 +
          (((C19430 - C19429 + C19432 - C19431) * C3109 +
            (C19596 - C19595 + C19598 - C19597) * C3053 +
            (C20937 - C20938 + C20939 - C20940) * C3110 +
            (C21143 - C21144 + C21145 - C21146) * C29555) *
               C29390 * C29439 * C1507 +
           ((C20938 - C20937 + C20940 - C20939) * C3109 +
            (C21144 - C21143 + C21146 - C21145) * C3053 +
            (C19324 * C732 - C19426 * C620 + C29557 * C6088 - C19427 * C5930) *
                C3110 +
            (C19324 * C876 - C19426 * C782 + C29557 * C6308 - C19427 * C6162) *
                C29555) *
               C29390 * C29439 * C1508) *
              C1510)) /
        (p * q * std::sqrt(p + q));
    d2eezx[35] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C29390 * C98 - C13361 * C93) * C19426 +
             (C29390 * C448 - C13361 * C443) * C19324 +
             (C17095 - C17096) * C19427 + (C17289 - C17290) * C29557) *
                C3053 +
            ((C13869 - C13870) * C19426 + (C14004 - C14005) * C19324 +
             C18903 * C19427 + C19123 * C29557) *
                C29555) *
               C29439 * C1507 +
           (((C13870 - C13869) * C19426 + (C14005 - C14004) * C19324 +
             C18905 * C19427 + C19124 * C29557) *
                C3053 +
            ((C13874 - C13873) * C19426 + (C14008 - C14007) * C19324 +
             (C15619 - C15620) * C19427 + (C15781 - C15782) * C29557) *
                C29555) *
               C29439 * C1508) *
              C1509 +
          ((((C13361 * C94 - C29390 * C100) * C19426 +
             (C13361 * C444 - C29390 * C449) * C19324 +
             (C18285 - C18286) * C19427 + (C18487 - C18488) * C29557) *
                C3053 +
            ((C14673 - C14674) * C19426 + (C14831 - C14832) * C19324 +
             (C17678 - C17679) * C19427 + (C17880 - C17881) * C29557) *
                C29555) *
               C29439 * C1507 +
           (((C14674 - C14673) * C19426 + (C14832 - C14831) * C19324 +
             (C17679 - C17678) * C19427 + (C17881 - C17880) * C29557) *
                C3053 +
            ((C14678 - C14677) * C19426 + (C14834 - C14833) * C19324 +
             (C29390 * C5933 - C13361 * C5930) * C19427 +
             (C29390 * C6380 - C13361 * C6378) * C29557) *
                C29555) *
               C29439 * C1508) *
              C1510)) /
        (p * q * std::sqrt(p + q));
    d2eezy[35] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C3053 * C152 - C3109 * C93 + C29555 * C678 - C3110 * C618) *
                C19426 +
            (C3053 * C491 - C3109 * C443 + C29555 * C966 - C3110 * C916) *
                C19324 +
            (C23659 - C23660 + C23661 - C23662) * C19427 +
            (C24003 - C24004 + C24005 - C24006) * C29557) *
               C29390 * C29439 * C1507 +
           ((C3109 * C618 - C3053 * C678 + C3110 * C619 - C29555 * C681) *
                C19426 +
            (C3109 * C916 - C3053 * C966 + C3110 * C919 - C29555 * C969) *
                C19324 +
            (C3109 * C2553 - C3053 * C2615 + C3110 * C5929 - C29555 * C6017) *
                C19427 +
            (C3109 * C2889 - C3053 * C2945 + C3110 * C6377 - C29555 * C6451) *
                C29557) *
               C29390 * C29439 * C1508) *
              C1509 +
          (((C3113 - C3112 + C3115 - C3114) * C19426 +
            (C3459 - C3458 + C3461 - C3460) * C19324 +
            (C5361 - C5362 + C5363 - C5364) * C19427 +
            (C5785 - C5786 + C5787 - C5788) * C29557) *
               C29390 * C29439 * C1507 +
           ((C4722 - C4721 + C4724 - C4723) * C19426 +
            (C5158 - C5157 + C5160 - C5159) * C19324 +
            (C3053 * C2616 - C3109 * C2554 + C29555 * C6018 - C3110 * C5930) *
                C19427 +
            (C3053 * C2946 - C3109 * C2890 + C29555 * C6452 - C3110 * C6378) *
                C29557) *
               C29390 * C29439 * C1508) *
              C1510)) /
        (p * q * std::sqrt(p + q));
    d2eezz[35] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C19426 * C215 - C19752 * C93 - C19426 * C443 +
                       C19324 * C545 + C19427 * C1169 - C19753 * C1059 -
                       C19427 * C1357 + C29557 * C1453) *
                          C3053 +
                      (C23555 + C23556) * C29555) *
                         C29390 * C29439 * C1507 -
                     ((C23557 + C23558) * C29555 + (C23556 + C23555) * C3053) *
                         C29390 * C29439 * C1508) *
                        C1509 +
                    (((C21358 + C21357) * C3053 +
                      (C19426 * C732 - C19752 * C620 - C19426 * C920 +
                       C19324 * C1014 + C19427 * C6088 - C19753 * C5930 -
                       C19427 * C6378 + C29557 * C6520) *
                          C29555) *
                         C29390 * C29439 * C1508 -
                     ((C21357 + C21358) * C29555 + (C19780 + C19779) * C3053) *
                         C29390 * C29439 * C1507) *
                        C1510)) /
                  (p * q * std::sqrt(p + q));
    d2eexx[36] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C13361 * C98 - C13362 * C93 - C13361 * C99 + C29390 * C108) *
                 C19324 +
             C16920 * C29557) *
                C3053 +
            (C23103 + C23104) * C29555) *
               C2031 -
           ((C25317 + C25318) * C29555 +
            (C16922 * C29557 + C16920 * C19324) * C3053) *
               C2032) *
              C1507 +
          (((C25318 + C25317) * C3053 +
            (C15451 * C19324 + (C13361 * C14137 - C13362 * C14136 -
                                C13361 * C14138 + C29390 * C14139) *
                                   C29557) *
                C29555) *
               C2032 -
           ((C23105 + C23106) * C29555 + (C23104 + C23103) * C3053) * C2031) *
              C1508) *
         C29413) /
        (p * q * std::sqrt(p + q));
    d2eexy[36] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C3053 * C152 - C3109 * C93 + C29555 * C678 - C3110 * C618) *
                 C13361 +
             (C3053 * C157 - C3109 * C99 + C29555 * C684 - C3110 * C627) *
                 C29390) *
                C19324 +
            ((C23659 - C23660 + C23661 - C23662) * C13361 +
             (C23663 - C23664 + C23665 - C23666) * C29390) *
                C29557) *
               C2031 +
           (((C23660 - C23659 + C23662 - C23661) * C13361 +
             (C23664 - C23663 + C23666 - C23665) * C29390) *
                C19324 +
            ((C23667 - C23668 + C23669 - C23670) * C13361 +
             (C23671 - C23672 + C23673 - C23674) * C29390) *
                C29557) *
               C2032) *
              C1507 +
          ((((C3109 * C618 - C3053 * C678 + C3110 * C619 - C29555 * C681) *
                 C13361 +
             (C3109 * C627 - C3053 * C684 + C3110 * C629 - C29555 * C687) *
                 C29390) *
                C19324 +
            ((C25385 - C25386 + C25387 - C25388) * C13361 +
             (C25389 - C25390 + C25391 - C25392) * C29390) *
                C29557) *
               C2031 +
           (((C25386 - C25385 + C25388 - C25387) * C13361 +
             (C25390 - C25389 + C25392 - C25391) * C29390) *
                C19324 +
            ((C3053 * C4200 - C3109 * C4142 + C29555 * C14178 -
              C3110 * C14136) *
                 C13361 +
             (C3053 * C4202 - C3109 * C4145 + C29555 * C14179 -
              C3110 * C14138) *
                 C29390) *
                C29557) *
               C2032) *
              C1508) *
         C29413) /
        (p * q * std::sqrt(p + q));
    d2eexz[36] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C19324 * C215 - C19426 * C93 + C29557 * C1169 - C19427 * C1059) *
                 C13361 +
             (C19324 * C220 - C19426 * C99 + C29557 * C1175 - C19427 * C1068) *
                 C29390) *
                C3053 +
            ((C23207 - C23208 + C23209 - C23210) * C13361 +
             (C23211 - C23212 + C23213 - C23214) * C29390) *
                C29555) *
               C2031 +
           (((C19426 * C1059 - C19324 * C1169 + C19427 * C1060 -
              C29557 * C1172) *
                 C13361 +
             (C19426 * C1068 - C19324 * C1175 + C19427 * C1070 -
              C29557 * C1178) *
                 C29390) *
                C3053 +
            ((C25459 - C25460 + C25461 - C25462) * C13361 +
             (C25463 - C25464 + C25465 - C25466) * C29390) *
                C29555) *
               C2032) *
              C1507 +
          ((((C23208 - C23207 + C23210 - C23209) * C13361 +
             (C23212 - C23211 + C23214 - C23213) * C29390) *
                C3053 +
            ((C23215 - C23216 + C23217 - C23218) * C13361 +
             (C23219 - C23220 + C23221 - C23222) * C29390) *
                C29555) *
               C2031 +
           (((C25460 - C25459 + C25462 - C25461) * C13361 +
             (C25464 - C25463 + C25466 - C25465) * C29390) *
                C3053 +
            ((C19324 * C6087 - C19426 * C5929 + C29557 * C14218 -
              C19427 * C14136) *
                 C13361 +
             (C19324 * C6089 - C19426 * C5932 + C29557 * C14219 -
              C19427 * C14138) *
                 C29390) *
                C29555) *
               C2032) *
              C1508) *
         C29413) /
        (p * q * std::sqrt(p + q));
    d2eeyx[36] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C29390 * C98 - C13361 * C93) * C3109 +
                       (C29390 * C282 - C13361 * C277) * C3053 +
                       (C13869 - C13870) * C3110 + (C13871 - C13872) * C29555) *
                          C19324 +
                      ((C17095 - C17096) * C3109 + (C17097 - C17098) * C3053 +
                       C18903 * C3110 + C18904 * C29555) *
                          C29557) *
                         C2031 +
                     (((C17096 - C17095) * C3109 + (C17098 - C17097) * C3053 +
                       C18905 * C3110 + C18906 * C29555) *
                          C19324 +
                      ((C17099 - C17100) * C3109 + (C17101 - C17102) * C3053 +
                       (C17103 - C17104) * C3110 + (C17105 - C17106) * C29555) *
                          C29557) *
                         C2032) *
                        C1507 +
                    ((((C13870 - C13869) * C3109 + (C13872 - C13871) * C3053 +
                       (C13874 - C13873) * C3110 + (C13876 - C13875) * C29555) *
                          C19324 +
                      (C18905 * C3109 + C18906 * C3053 +
                       (C15619 - C15620) * C3110 + (C15621 - C15622) * C29555) *
                          C29557) *
                         C2031 +
                     ((C18903 * C3109 + C18904 * C3053 +
                       (C15620 - C15619) * C3110 + (C15622 - C15621) * C29555) *
                          C19324 +
                      ((C17104 - C17103) * C3109 + (C17106 - C17105) * C3053 +
                       (C29390 * C14137 - C13361 * C14136) * C3110 +
                       (C29390 * C14259 - C13361 * C14258) * C29555) *
                          C29557) *
                         C2032) *
                        C1508) *
                   C29413) /
                  (p * q * std::sqrt(p + q));
    d2eeyy[36] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C3109 * C152 - C3277 * C93 - C3109 * C277 + C3053 * C326 +
             C3110 * C678 - C3278 * C618 - C3110 * C778 + C29555 * C830) *
                C29390 * C19324 +
            (C23849 + C23850) * C29390 * C29557) *
               C2031 -
           ((C23851 + C23852) * C29390 * C29557 +
            (C23850 + C23849) * C29390 * C19324) *
               C2032) *
              C1507 +
          (((C25611 + C25612) * C29390 * C19324 +
            (C3109 * C4200 - C3277 * C4142 - C3109 * C4308 + C3053 * C4362 +
             C3110 * C14178 - C3278 * C14136 - C3110 * C14258 +
             C29555 * C14298) *
                C29390 * C29557) *
               C2032 -
           ((C25612 + C25611) * C29390 * C29557 +
            (C3110 * C681 - C3278 * C619 - C3110 * C781 + C29555 * C831 +
             C3109 * C678 - C3277 * C618 - C3109 * C778 + C3053 * C830) *
                C29390 * C19324) *
               C2031) *
              C1508) *
         C29413) /
        (p * q * std::sqrt(p + q));
    d2eeyz[36] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C19324 * C215 - C19426 * C93 + C29557 * C1169 - C19427 * C1059) *
                C3109 +
            (C19324 * C390 - C19426 * C277 + C29557 * C1313 - C19427 * C1219) *
                C3053 +
            (C23207 - C23208 + C23209 - C23210) * C3110 +
            (C23373 - C23374 + C23375 - C23376) * C29555) *
               C29390 * C2031 +
           ((C19426 * C1059 - C19324 * C1169 + C19427 * C1060 -
             C29557 * C1172) *
                C3109 +
            (C19426 * C1219 - C19324 * C1313 + C19427 * C1222 -
             C29557 * C1316) *
                C3053 +
            (C25459 - C25460 + C25461 - C25462) * C3110 +
            (C25679 - C25680 + C25681 - C25682) * C29555) *
               C29390 * C2032) *
              C1507 +
          (((C23208 - C23207 + C23210 - C23209) * C3109 +
            (C23374 - C23373 + C23376 - C23375) * C3053 +
            (C23215 - C23216 + C23217 - C23218) * C3110 +
            (C23377 - C23378 + C23379 - C23380) * C29555) *
               C29390 * C2031 +
           ((C25460 - C25459 + C25462 - C25461) * C3109 +
            (C25680 - C25679 + C25682 - C25681) * C3053 +
            (C19324 * C6087 - C19426 * C5929 + C29557 * C14218 -
             C19427 * C14136) *
                C3110 +
            (C19324 * C6307 - C19426 * C6161 + C29557 * C14337 -
             C19427 * C14258) *
                C29555) *
               C29390 * C2032) *
              C1508) *
         C29413) /
        (p * q * std::sqrt(p + q));
    d2eezx[36] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C29390 * C98 - C13361 * C93) * C19426 +
             (C29390 * C448 - C13361 * C443) * C19324 +
             (C17095 - C17096) * C19427 + (C17289 - C17290) * C29557) *
                C3053 +
            ((C13869 - C13870) * C19426 + (C14004 - C14005) * C19324 +
             C18903 * C19427 + C19123 * C29557) *
                C29555) *
               C2031 +
           (((C17096 - C17095) * C19426 + (C17290 - C17289) * C19324 +
             (C17099 - C17100) * C19427 + (C17291 - C17292) * C29557) *
                C3053 +
            (C18905 * C19426 + C19124 * C19324 + (C17103 - C17104) * C19427 +
             (C17293 - C17294) * C29557) *
                C29555) *
               C2032) *
              C1507 +
          ((((C13870 - C13869) * C19426 + (C14005 - C14004) * C19324 +
             C18905 * C19427 + C19124 * C29557) *
                C3053 +
            ((C13874 - C13873) * C19426 + (C14008 - C14007) * C19324 +
             (C15619 - C15620) * C19427 + (C15781 - C15782) * C29557) *
                C29555) *
               C2031 +
           ((C18903 * C19426 + C19123 * C19324 + (C17104 - C17103) * C19427 +
             (C17294 - C17293) * C29557) *
                C3053 +
            ((C15620 - C15619) * C19426 + (C15782 - C15781) * C19324 +
             (C29390 * C14137 - C13361 * C14136) * C19427 +
             (C29390 * C14377 - C13361 * C14376) * C29557) *
                C29555) *
               C2032) *
              C1508) *
         C29413) /
        (p * q * std::sqrt(p + q));
    d2eezy[36] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C3053 * C152 - C3109 * C93 + C29555 * C678 - C3110 * C618) *
                C19426 +
            (C3053 * C491 - C3109 * C443 + C29555 * C966 - C3110 * C916) *
                C19324 +
            (C23659 - C23660 + C23661 - C23662) * C19427 +
            (C24003 - C24004 + C24005 - C24006) * C29557) *
               C29390 * C2031 +
           ((C23660 - C23659 + C23662 - C23661) * C19426 +
            (C24004 - C24003 + C24006 - C24005) * C19324 +
            (C23667 - C23668 + C23669 - C23670) * C19427 +
            (C24007 - C24008 + C24009 - C24010) * C29557) *
               C29390 * C2032) *
              C1507 +
          (((C3109 * C618 - C3053 * C678 + C3110 * C619 - C29555 * C681) *
                C19426 +
            (C3109 * C916 - C3053 * C966 + C3110 * C919 - C29555 * C969) *
                C19324 +
            (C25385 - C25386 + C25387 - C25388) * C19427 +
            (C25815 - C25816 + C25817 - C25818) * C29557) *
               C29390 * C2031 +
           ((C25386 - C25385 + C25388 - C25387) * C19426 +
            (C25816 - C25815 + C25818 - C25817) * C19324 +
            (C3053 * C4200 - C3109 * C4142 + C29555 * C14178 - C3110 * C14136) *
                C19427 +
            (C3053 * C4520 - C3109 * C4466 + C29555 * C14416 - C3110 * C14376) *
                C29557) *
               C29390 * C2032) *
              C1508) *
         C29413) /
        (p * q * std::sqrt(p + q));
    d2eezz[36] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C19426 * C215 - C19752 * C93 - C19426 * C443 +
                       C19324 * C545 + C19427 * C1169 - C19753 * C1059 -
                       C19427 * C1357 + C29557 * C1453) *
                          C3053 +
                      (C23555 + C23556) * C29555) *
                         C29390 * C2031 -
                     ((C25897 + C25898) * C29555 +
                      (C19427 * C1172 - C19753 * C1060 - C19427 * C1360 +
                       C29557 * C1454 + C19426 * C1169 - C19752 * C1059 -
                       C19426 * C1357 + C19324 * C1453) *
                          C3053) *
                         C29390 * C2032) *
                        C1507 +
                    (((C25898 + C25897) * C3053 +
                      (C19426 * C6087 - C19752 * C5929 - C19426 * C6377 +
                       C19324 * C6519 + C19427 * C14218 - C19753 * C14136 -
                       C19427 * C14376 + C29557 * C14455) *
                          C29555) *
                         C29390 * C2032 -
                     ((C23557 + C23558) * C29555 + (C23556 + C23555) * C3053) *
                         C29390 * C2031) *
                        C1508) *
                   C29413) /
                  (p * q * std::sqrt(p + q));
    d2eexx[37] +=
        (-std::pow(Pi, 2.5) *
         ((((C13361 * C98 - C13362 * C93 - C13361 * C99 + C29390 * C108) *
                C19324 +
            C16920 * C29557) *
               C3053 +
           (C23103 + C23104) * C29555) *
              C29439 * C612 -
          ((C23105 + C23106) * C29555 + (C23104 + C23103) * C3053) * C29439 *
              C613 +
          ((C23106 + C23105) * C3053 +
           (C13736 * C19324 + (C13361 * C15435 - C13362 * C15434 -
                               C13361 * C15436 + C29390 * C15437) *
                                  C29557) *
               C29555) *
              C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C13361 * C98 - C13362 * C93 - C13361 * C99 + C29390 * C108) *
                C19324 +
            C16920 * C29557) *
               C3053 +
           (C13734 * C19324 + C15452 * C29557) * C29555) *
              C29439 * C29425 * C84 -
          ((C17478 * C29557 + C14519 * C19324) * C29555 +
           (C18086 * C29557 +
            (C13361 * C100 - C13362 * C94 - C13361 * C101 + C29390 * C109) *
                C19324) *
               C3053) *
              C29439 * C29425 * C85 +
          (((C13361 * C102 - C13362 * C95 - C13361 * C103 + C29390 * C110) *
                C19324 +
            (C13361 * C1063 - C13362 * C1057 - C13361 * C1064 +
             C29390 * C1075) *
                C29557) *
               C3053 +
           ((C13361 * C622 - C13362 * C616 - C13361 * C623 + C29390 * C634) *
                C19324 +
            (C13361 * C2560 - C13362 * C2555 - C13361 * C2561 +
             C29390 * C2564) *
                C29557) *
               C29555) *
              C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C13361 * C98 - C13362 * C93 - C13361 * C99 + C29390 * C108) *
                C19324 +
            C16920 * C29557) *
               C3053 +
           (C23103 + C23104) * C29555) *
              C1054 -
          ((C16921 * C29557 + C15452 * C19324) * C29555 +
           (C16922 * C29557 + C16920 * C19324) * C3053) *
              C1055 +
          ((C16922 * C19324 + (C13361 * C7538 - C13362 * C7536 -
                               C13361 * C7539 + C29390 * C7542) *
                                  C29557) *
               C3053 +
           (C16921 * C19324 + (C13361 * C16898 - C13362 * C16897 -
                               C13361 * C16899 + C29390 * C16900) *
                                  C29557) *
               C29555) *
              C1056) *
         C29425 * C29413) /
            (p * q * std::sqrt(p + q));
    d2eexy[37] +=
        (-std::pow(Pi, 2.5) *
         ((((C3053 * C152 - C3109 * C93 + C29555 * C678 - C3110 * C618) *
                C13361 +
            (C3053 * C157 - C3109 * C99 + C29555 * C684 - C3110 * C627) *
                C29390) *
               C19324 +
           ((C3053 * C1119 - C3109 * C1059 + C29555 * C2615 - C3110 * C2553) *
                C13361 +
            (C3053 * C1125 - C3109 * C1068 + C29555 * C2618 - C3110 * C2557) *
                C29390) *
               C29557) *
              C29439 * C612 +
          (((C3109 * C618 - C3053 * C678 + C3110 * C619 - C29555 * C681) *
                C13361 +
            (C3109 * C627 - C3053 * C684 + C3110 * C629 - C29555 * C687) *
                C29390) *
               C19324 +
           ((C3109 * C2553 - C3053 * C2615 + C3110 * C5929 - C29555 * C6017) *
                C13361 +
            (C3109 * C2557 - C3053 * C2618 + C3110 * C5932 - C29555 * C6019) *
                C29390) *
               C29557) *
              C29439 * C613 +
          (((C3053 * C681 - C3109 * C619 + C29555 * C3655 - C3110 * C3569) *
                C13361 +
            (C3053 * C687 - C3109 * C629 + C29555 * C3657 - C3110 * C3572) *
                C29390) *
               C19324 +
           ((C3053 * C6017 - C3109 * C5929 + C29555 * C15504 - C3110 * C15434) *
                C13361 +
            (C3053 * C6019 - C3109 * C5932 + C29555 * C15505 - C3110 * C15436) *
                C29390) *
               C29557) *
              C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C3053 * C152 - C3109 * C93 + C29555 * C678 - C3110 * C618) *
                C13361 +
            (C3053 * C157 - C3109 * C99 + C29555 * C684 - C3110 * C627) *
                C29390) *
               C19324 +
           ((C3053 * C1119 - C3109 * C1059 + C29555 * C2615 - C3110 * C2553) *
                C13361 +
            (C3053 * C1125 - C3109 * C1068 + C29555 * C2618 - C3110 * C2557) *
                C29390) *
               C29557) *
              C29439 * C29425 * C84 +
          (((C3113 - C3112 + C3115 - C3114) * C13361 +
            (C3117 - C3116 + C3119 - C3118) * C29390) *
               C19324 +
           ((C5361 - C5362 + C5363 - C5364) * C13361 +
            (C5365 - C5366 + C5367 - C5368) * C29390) *
               C29557) *
              C29439 * C29425 * C85 +
          (((C3121 - C3120 + C3123 - C3122) * C13361 +
            (C3125 - C3124 + C3127 - C3126) * C29390) *
               C19324 +
           ((C3053 * C1121 - C3109 * C1057 + C29555 * C2617 - C3110 * C2555) *
                C13361 +
            (C3053 * C1127 - C3109 * C1064 + C29555 * C2620 - C3110 * C2561) *
                C29390) *
               C29557) *
              C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C3053 * C152 - C3109 * C93 + C29555 * C678 - C3110 * C618) *
                C13361 +
            (C3053 * C157 - C3109 * C99 + C29555 * C684 - C3110 * C627) *
                C29390) *
               C19324 +
           ((C23659 - C23660 + C23661 - C23662) * C13361 +
            (C23663 - C23664 + C23665 - C23666) * C29390) *
               C29557) *
              C1054 +
          (((C23660 - C23659 + C23662 - C23661) * C13361 +
            (C23664 - C23663 + C23666 - C23665) * C29390) *
               C19324 +
           ((C23667 - C23668 + C23669 - C23670) * C13361 +
            (C23671 - C23672 + C23673 - C23674) * C29390) *
               C29557) *
              C1055 +
          (((C23668 - C23667 + C23670 - C23669) * C13361 +
            (C23672 - C23671 + C23674 - C23673) * C29390) *
               C19324 +
           ((C3053 * C7622 - C3109 * C7536 + C29555 * C16972 - C3110 * C16897) *
                C13361 +
            (C3053 * C7624 - C3109 * C7539 + C29555 * C16973 - C3110 * C16899) *
                C29390) *
               C29557) *
              C1056) *
         C29425 * C29413) /
            (p * q * std::sqrt(p + q));
    d2eexz[37] +=
        (-std::pow(Pi, 2.5) *
         ((((C19324 * C215 - C19426 * C93 + C29557 * C1169 - C19427 * C1059) *
                C13361 +
            (C19324 * C220 - C19426 * C99 + C29557 * C1175 - C19427 * C1068) *
                C29390) *
               C3053 +
           ((C23207 - C23208 + C23209 - C23210) * C13361 +
            (C23211 - C23212 + C23213 - C23214) * C29390) *
               C29555) *
              C29439 * C612 +
          (((C23208 - C23207 + C23210 - C23209) * C13361 +
            (C23212 - C23211 + C23214 - C23213) * C29390) *
               C3053 +
           ((C23215 - C23216 + C23217 - C23218) * C13361 +
            (C23219 - C23220 + C23221 - C23222) * C29390) *
               C29555) *
              C29439 * C613 +
          (((C23216 - C23215 + C23218 - C23217) * C13361 +
            (C23220 - C23219 + C23222 - C23221) * C29390) *
               C3053 +
           ((C19324 * C3709 - C19426 * C3569 + C29557 * C15556 -
             C19427 * C15434) *
                C13361 +
            (C19324 * C3711 - C19426 * C3572 + C29557 * C15557 -
             C19427 * C15436) *
                C29390) *
               C29555) *
              C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C19324 * C215 - C19426 * C93 + C29557 * C1169 - C19427 * C1059) *
                C13361 +
            (C19324 * C220 - C19426 * C99 + C29557 * C1175 - C19427 * C1068) *
                C29390) *
               C3053 +
           ((C19324 * C728 - C19426 * C618 + C29557 * C2671 - C19427 * C2553) *
                C13361 +
            (C19324 * C734 - C19426 * C627 + C29557 * C2674 - C19427 * C2557) *
                C29390) *
               C29555) *
              C29439 * C29425 * C84 +
          (((C19430 - C19429 + C19432 - C19431) * C13361 +
            (C19434 - C19433 + C19436 - C19435) * C29390) *
               C3053 +
           ((C20937 - C20938 + C20939 - C20940) * C13361 +
            (C20941 - C20942 + C20943 - C20944) * C29390) *
               C29555) *
              C29439 * C29425 * C85 +
          (((C19438 - C19437 + C19440 - C19439) * C13361 +
            (C19442 - C19441 + C19444 - C19443) * C29390) *
               C3053 +
           ((C19324 * C730 - C19426 * C616 + C29557 * C2673 - C19427 * C2555) *
                C13361 +
            (C19324 * C736 - C19426 * C623 + C29557 * C2676 - C19427 * C2561) *
                C29390) *
               C29555) *
              C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C19324 * C215 - C19426 * C93 + C29557 * C1169 - C19427 * C1059) *
                C13361 +
            (C19324 * C220 - C19426 * C99 + C29557 * C1175 - C19427 * C1068) *
                C29390) *
               C3053 +
           ((C23207 - C23208 + C23209 - C23210) * C13361 +
            (C23211 - C23212 + C23213 - C23214) * C29390) *
               C29555) *
              C1054 +
          (((C19426 * C1059 - C19324 * C1169 + C19427 * C1060 -
             C29557 * C1172) *
                C13361 +
            (C19426 * C1068 - C19324 * C1175 + C19427 * C1070 -
             C29557 * C1178) *
                C29390) *
               C3053 +
           ((C19426 * C2553 - C19324 * C2671 + C19427 * C4142 -
             C29557 * C4254) *
                C13361 +
            (C19426 * C2557 - C19324 * C2674 + C19427 * C4145 -
             C29557 * C4256) *
                C29390) *
               C29555) *
              C1055 +
          (((C19324 * C1172 - C19426 * C1060 + C29557 * C7688 -
             C19427 * C7536) *
                C13361 +
            (C19324 * C1178 - C19426 * C1070 + C29557 * C7690 -
             C19427 * C7539) *
                C29390) *
               C3053 +
           ((C19324 * C4254 - C19426 * C4142 + C29557 * C17040 -
             C19427 * C16897) *
                C13361 +
            (C19324 * C4256 - C19426 * C4145 + C29557 * C17041 -
             C19427 * C16899) *
                C29390) *
               C29555) *
              C1056) *
         C29425 * C29413) /
            (p * q * std::sqrt(p + q));
    d2eeyx[37] += (-std::pow(Pi, 2.5) *
                   ((((C29390 * C98 - C13361 * C93) * C3109 +
                      (C29390 * C282 - C13361 * C277) * C3053 +
                      (C13869 - C13870) * C3110 + (C13871 - C13872) * C29555) *
                         C19324 +
                     ((C17095 - C17096) * C3109 + (C17097 - C17098) * C3053 +
                      C18903 * C3110 + C18904 * C29555) *
                         C29557) *
                        C29439 * C612 +
                    (((C13870 - C13869) * C3109 + (C13872 - C13871) * C3053 +
                      (C13874 - C13873) * C3110 + (C13876 - C13875) * C29555) *
                         C19324 +
                     (C18905 * C3109 + C18906 * C3053 +
                      (C15619 - C15620) * C3110 + (C15621 - C15622) * C29555) *
                         C29557) *
                        C29439 * C613 +
                    ((C13881 * C3109 + C13882 * C3053 +
                      (C13878 - C13877) * C3110 + (C13880 - C13879) * C29555) *
                         C19324 +
                     ((C15620 - C15619) * C3109 + (C15622 - C15621) * C3053 +
                      (C29390 * C15435 - C13361 * C15434) * C3110 +
                      (C29390 * C15613 - C13361 * C15612) * C29555) *
                         C29557) *
                        C29439 * C614) *
                   C29413) /
                      (p * q * std::sqrt(p + q)) -
                  (std::pow(Pi, 2.5) *
                   ((((C29390 * C98 - C13361 * C93) * C3109 +
                      (C29390 * C282 - C13361 * C277) * C3053 +
                      (C13869 - C13870) * C3110 + (C13871 - C13872) * C29555) *
                         C19324 +
                     ((C17095 - C17096) * C3109 + (C17097 - C17098) * C3053 +
                      C18903 * C3110 + C18904 * C29555) *
                         C29557) *
                        C29439 * C29425 * C84 +
                    (((C13361 * C94 - C29390 * C100) * C3109 +
                      (C13361 * C278 - C29390 * C283) * C3053 +
                      (C14673 - C14674) * C3110 + (C14675 - C14676) * C29555) *
                         C19324 +
                     ((C18285 - C18286) * C3109 + (C18287 - C18288) * C3053 +
                      (C17678 - C17679) * C3110 + (C17680 - C17681) * C29555) *
                         C29557) *
                        C29439 * C29425 * C85 +
                    (((C29390 * C102 - C13361 * C95) * C3109 +
                      (C29390 * C284 - C13361 * C279) * C3053 +
                      (C29390 * C622 - C13361 * C616) * C3110 +
                      (C29390 * C786 - C13361 * C780) * C29555) *
                         C19324 +
                     ((C29390 * C1063 - C13361 * C1057) * C3109 +
                      (C29390 * C1227 - C13361 * C1221) * C3053 +
                      (C29390 * C2560 - C13361 * C2555) * C3110 +
                      (C29390 * C2732 - C13361 * C2729) * C29555) *
                         C29557) *
                        C29439 * C29425 * C86)) /
                      (p * q * std::sqrt(p + q)) +
                  (2 * std::pow(Pi, 2.5) *
                   ((((C29390 * C98 - C13361 * C93) * C3109 +
                      (C29390 * C282 - C13361 * C277) * C3053 +
                      (C13869 - C13870) * C3110 + (C13871 - C13872) * C29555) *
                         C19324 +
                     ((C17095 - C17096) * C3109 + (C17097 - C17098) * C3053 +
                      C18903 * C3110 + C18904 * C29555) *
                         C29557) *
                        C1054 +
                    (((C17096 - C17095) * C3109 + (C17098 - C17097) * C3053 +
                      C18905 * C3110 + C18906 * C29555) *
                         C19324 +
                     ((C17099 - C17100) * C3109 + (C17101 - C17102) * C3053 +
                      (C17103 - C17104) * C3110 + (C17105 - C17106) * C29555) *
                         C29557) *
                        C1055 +
                    (((C17100 - C17099) * C3109 + (C17102 - C17101) * C3053 +
                      (C17104 - C17103) * C3110 + (C17106 - C17105) * C29555) *
                         C19324 +
                     ((C29390 * C7538 - C13361 * C7536) * C3109 +
                      (C29390 * C7744 - C13361 * C7742) * C3053 +
                      (C29390 * C16898 - C13361 * C16897) * C3110 +
                      (C29390 * C17093 - C13361 * C17092) * C29555) *
                         C29557) *
                        C1056) *
                   C29425 * C29413) /
                      (p * q * std::sqrt(p + q));
    d2eeyy[37] +=
        (-std::pow(Pi, 2.5) *
         (((C3109 * C152 - C3277 * C93 - C3109 * C277 + C3053 * C326 +
            C3110 * C678 - C3278 * C618 - C3110 * C778 + C29555 * C830) *
               C29390 * C19324 +
           (C3109 * C1119 - C3277 * C1059 - C3109 * C1219 + C3053 * C1271 +
            C3110 * C2615 - C3278 * C2553 - C3110 * C2727 + C29555 * C2783) *
               C29390 * C29557) *
              C29439 * C612 -
          ((C3110 * C6017 - C3278 * C5929 - C3110 * C6161 + C29555 * C6239 +
            C3109 * C2615 - C3277 * C2553 - C3109 * C2727 + C3053 * C2783) *
               C29390 * C29557 +
           (C3110 * C681 - C3278 * C619 - C3110 * C781 + C29555 * C831 +
            C3109 * C678 - C3277 * C618 - C3109 * C778 + C3053 * C830) *
               C29390 * C19324) *
              C29439 * C613 +
          ((C3109 * C681 - C3277 * C619 - C3109 * C781 + C3053 * C831 +
            C3110 * C3655 - C3278 * C3569 - C3110 * C3775 + C29555 * C3845) *
               C29390 * C19324 +
           (C3109 * C6017 - C3277 * C5929 - C3109 * C6161 + C3053 * C6239 +
            C3110 * C15504 - C3278 * C15434 - C3110 * C15612 +
            C29555 * C15672) *
               C29390 * C29557) *
              C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C3109 * C152 - C3277 * C93 - C3109 * C277 + C3053 * C326 +
            C3110 * C678 - C3278 * C618 - C3110 * C778 + C29555 * C830) *
               C29390 * C19324 +
           (C3109 * C1119 - C3277 * C1059 - C3109 * C1219 + C3053 * C1271 +
            C3110 * C2615 - C3278 * C2553 - C3110 * C2727 + C29555 * C2783) *
               C29390 * C29557) *
              C29439 * C29425 * C84 -
          ((C5583 + C5584) * C29390 * C29557 +
           (C3305 + C3304) * C29390 * C19324) *
              C29439 * C29425 * C85 +
          ((C3307 + C3306) * C29390 * C19324 +
           (C3109 * C1121 - C3277 * C1057 - C3109 * C1221 + C3053 * C1269 +
            C3110 * C2617 - C3278 * C2555 - C3110 * C2729 + C29555 * C2785) *
               C29390 * C29557) *
              C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C3109 * C152 - C3277 * C93 - C3109 * C277 + C3053 * C326 +
            C3110 * C678 - C3278 * C618 - C3110 * C778 + C29555 * C830) *
               C29390 * C19324 +
           (C23849 + C23850) * C29390 * C29557) *
              C1054 -
          ((C23851 + C23852) * C29390 * C29557 +
           (C23850 + C23849) * C29390 * C19324) *
              C1055 +
          ((C23852 + C23851) * C29390 * C19324 +
           (C3109 * C7622 - C3277 * C7536 - C3109 * C7742 + C3053 * C7812 +
            C3110 * C16972 - C3278 * C16897 - C3110 * C17092 +
            C29555 * C17156) *
               C29390 * C29557) *
              C1056) *
         C29425 * C29413) /
            (p * q * std::sqrt(p + q));
    d2eeyz[37] +=
        (-std::pow(Pi, 2.5) *
         (((C19324 * C215 - C19426 * C93 + C29557 * C1169 - C19427 * C1059) *
               C3109 +
           (C19324 * C390 - C19426 * C277 + C29557 * C1313 - C19427 * C1219) *
               C3053 +
           (C23207 - C23208 + C23209 - C23210) * C3110 +
           (C23373 - C23374 + C23375 - C23376) * C29555) *
              C29390 * C29439 * C612 +
          ((C23208 - C23207 + C23210 - C23209) * C3109 +
           (C23374 - C23373 + C23376 - C23375) * C3053 +
           (C23215 - C23216 + C23217 - C23218) * C3110 +
           (C23377 - C23378 + C23379 - C23380) * C29555) *
              C29390 * C29439 * C613 +
          ((C23216 - C23215 + C23218 - C23217) * C3109 +
           (C23378 - C23377 + C23380 - C23379) * C3053 +
           (C19324 * C3709 - C19426 * C3569 + C29557 * C15556 -
            C19427 * C15434) *
               C3110 +
           (C19324 * C3897 - C19426 * C3775 + C29557 * C15723 -
            C19427 * C15612) *
               C29555) *
              C29390 * C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C19324 * C215 - C19426 * C93 + C29557 * C1169 - C19427 * C1059) *
               C3109 +
           (C19324 * C390 - C19426 * C277 + C29557 * C1313 - C19427 * C1219) *
               C3053 +
           (C19324 * C728 - C19426 * C618 + C29557 * C2671 - C19427 * C2553) *
               C3110 +
           (C19324 * C872 - C19426 * C778 + C29557 * C2836 - C19427 * C2727) *
               C29555) *
              C29390 * C29439 * C29425 * C84 +
          ((C19430 - C19429 + C19432 - C19431) * C3109 +
           (C19596 - C19595 + C19598 - C19597) * C3053 +
           (C20937 - C20938 + C20939 - C20940) * C3110 +
           (C21143 - C21144 + C21145 - C21146) * C29555) *
              C29390 * C29439 * C29425 * C85 +
          ((C19438 - C19437 + C19440 - C19439) * C3109 +
           (C19600 - C19599 + C19602 - C19601) * C3053 +
           (C19324 * C730 - C19426 * C616 + C29557 * C2673 - C19427 * C2555) *
               C3110 +
           (C19324 * C874 - C19426 * C780 + C29557 * C2838 - C19427 * C2729) *
               C29555) *
              C29390 * C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C19324 * C215 - C19426 * C93 + C29557 * C1169 - C19427 * C1059) *
               C3109 +
           (C19324 * C390 - C19426 * C277 + C29557 * C1313 - C19427 * C1219) *
               C3053 +
           (C23207 - C23208 + C23209 - C23210) * C3110 +
           (C23373 - C23374 + C23375 - C23376) * C29555) *
              C29390 * C1054 +
          ((C19426 * C1059 - C19324 * C1169 + C19427 * C1060 - C29557 * C1172) *
               C3109 +
           (C19426 * C1219 - C19324 * C1313 + C19427 * C1222 - C29557 * C1316) *
               C3053 +
           (C19426 * C2553 - C19324 * C2671 + C19427 * C4142 - C29557 * C4254) *
               C3110 +
           (C19426 * C2727 - C19324 * C2836 + C19427 * C4308 - C29557 * C4414) *
               C29555) *
              C29390 * C1055 +
          ((C19324 * C1172 - C19426 * C1060 + C29557 * C7688 - C19427 * C7536) *
               C3109 +
           (C19324 * C1316 - C19426 * C1222 + C29557 * C7889 - C19427 * C7742) *
               C3053 +
           (C19324 * C4254 - C19426 * C4142 + C29557 * C17040 -
            C19427 * C16897) *
               C3110 +
           (C19324 * C4414 - C19426 * C4308 + C29557 * C17235 -
            C19427 * C17092) *
               C29555) *
              C29390 * C1056) *
         C29425 * C29413) /
            (p * q * std::sqrt(p + q));
    d2eezx[37] += (-std::pow(Pi, 2.5) *
                   ((((C29390 * C98 - C13361 * C93) * C19426 +
                      (C29390 * C448 - C13361 * C443) * C19324 +
                      (C17095 - C17096) * C19427 + (C17289 - C17290) * C29557) *
                         C3053 +
                     ((C13869 - C13870) * C19426 + (C14004 - C14005) * C19324 +
                      C18903 * C19427 + C19123 * C29557) *
                         C29555) *
                        C29439 * C612 +
                    (((C13870 - C13869) * C19426 + (C14005 - C14004) * C19324 +
                      C18905 * C19427 + C19124 * C29557) *
                         C3053 +
                     ((C13874 - C13873) * C19426 + (C14008 - C14007) * C19324 +
                      (C15619 - C15620) * C19427 + (C15781 - C15782) * C29557) *
                         C29555) *
                        C29439 * C613 +
                    ((C13881 * C19426 + C14011 * C19324 +
                      (C15620 - C15619) * C19427 + (C15782 - C15781) * C29557) *
                         C3053 +
                     ((C13878 - C13877) * C19426 + (C14010 - C14009) * C19324 +
                      (C29390 * C15435 - C13361 * C15434) * C19427 +
                      (C29390 * C15777 - C13361 * C15776) * C29557) *
                         C29555) *
                        C29439 * C614) *
                   C29413) /
                      (p * q * std::sqrt(p + q)) -
                  (std::pow(Pi, 2.5) *
                   ((((C29390 * C98 - C13361 * C93) * C19426 +
                      (C29390 * C448 - C13361 * C443) * C19324 +
                      (C17095 - C17096) * C19427 + (C17289 - C17290) * C29557) *
                         C3053 +
                     ((C13869 - C13870) * C19426 + (C14004 - C14005) * C19324 +
                      C18903 * C19427 + C19123 * C29557) *
                         C29555) *
                        C29439 * C29425 * C84 +
                    (((C13361 * C94 - C29390 * C100) * C19426 +
                      (C13361 * C444 - C29390 * C449) * C19324 +
                      (C18285 - C18286) * C19427 + (C18487 - C18488) * C29557) *
                         C3053 +
                     ((C14673 - C14674) * C19426 + (C14831 - C14832) * C19324 +
                      (C17678 - C17679) * C19427 + (C17880 - C17881) * C29557) *
                         C29555) *
                        C29439 * C29425 * C85 +
                    (((C29390 * C102 - C13361 * C95) * C19426 +
                      (C29390 * C450 - C13361 * C445) * C19324 +
                      (C29390 * C1063 - C13361 * C1057) * C19427 +
                      (C29390 * C1365 - C13361 * C1359) * C29557) *
                         C3053 +
                     ((C29390 * C622 - C13361 * C616) * C19426 +
                      (C29390 * C924 - C13361 * C918) * C19324 +
                      (C29390 * C2560 - C13361 * C2555) * C19427 +
                      (C29390 * C2894 - C13361 * C2891) * C29557) *
                         C29555) *
                        C29439 * C29425 * C86)) /
                      (p * q * std::sqrt(p + q)) +
                  (2 * std::pow(Pi, 2.5) *
                   ((((C29390 * C98 - C13361 * C93) * C19426 +
                      (C29390 * C448 - C13361 * C443) * C19324 +
                      (C17095 - C17096) * C19427 + (C17289 - C17290) * C29557) *
                         C3053 +
                     ((C13869 - C13870) * C19426 + (C14004 - C14005) * C19324 +
                      C18903 * C19427 + C19123 * C29557) *
                         C29555) *
                        C1054 +
                    (((C17096 - C17095) * C19426 + (C17290 - C17289) * C19324 +
                      (C17099 - C17100) * C19427 + (C17291 - C17292) * C29557) *
                         C3053 +
                     (C18905 * C19426 + C19124 * C19324 +
                      (C17103 - C17104) * C19427 + (C17293 - C17294) * C29557) *
                         C29555) *
                        C1055 +
                    (((C17100 - C17099) * C19426 + (C17292 - C17291) * C19324 +
                      (C29390 * C7538 - C13361 * C7536) * C19427 +
                      (C29390 * C7943 - C13361 * C7941) * C29557) *
                         C3053 +
                     ((C17104 - C17103) * C19426 + (C17294 - C17293) * C19324 +
                      (C29390 * C16898 - C13361 * C16897) * C19427 +
                      (C29390 * C17287 - C13361 * C17286) * C29557) *
                         C29555) *
                        C1056) *
                   C29425 * C29413) /
                      (p * q * std::sqrt(p + q));
    d2eezy[37] +=
        (-std::pow(Pi, 2.5) *
         (((C3053 * C152 - C3109 * C93 + C29555 * C678 - C3110 * C618) *
               C19426 +
           (C3053 * C491 - C3109 * C443 + C29555 * C966 - C3110 * C916) *
               C19324 +
           (C3053 * C1119 - C3109 * C1059 + C29555 * C2615 - C3110 * C2553) *
               C19427 +
           (C3053 * C1407 - C3109 * C1357 + C29555 * C2945 - C3110 * C2889) *
               C29557) *
              C29390 * C29439 * C612 +
          ((C3109 * C618 - C3053 * C678 + C3110 * C619 - C29555 * C681) *
               C19426 +
           (C3109 * C916 - C3053 * C966 + C3110 * C919 - C29555 * C969) *
               C19324 +
           (C3109 * C2553 - C3053 * C2615 + C3110 * C5929 - C29555 * C6017) *
               C19427 +
           (C3109 * C2889 - C3053 * C2945 + C3110 * C6377 - C29555 * C6451) *
               C29557) *
              C29390 * C29439 * C613 +
          ((C3053 * C681 - C3109 * C619 + C29555 * C3655 - C3110 * C3569) *
               C19426 +
           (C3053 * C969 - C3109 * C919 + C29555 * C4017 - C3110 * C3955) *
               C19324 +
           (C3053 * C6017 - C3109 * C5929 + C29555 * C15504 - C3110 * C15434) *
               C19427 +
           (C3053 * C6451 - C3109 * C6377 + C29555 * C15832 - C3110 * C15776) *
               C29557) *
              C29390 * C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C3053 * C152 - C3109 * C93 + C29555 * C678 - C3110 * C618) *
               C19426 +
           (C3053 * C491 - C3109 * C443 + C29555 * C966 - C3110 * C916) *
               C19324 +
           (C3053 * C1119 - C3109 * C1059 + C29555 * C2615 - C3110 * C2553) *
               C19427 +
           (C3053 * C1407 - C3109 * C1357 + C29555 * C2945 - C3110 * C2889) *
               C29557) *
              C29390 * C29439 * C29425 * C84 +
          ((C3113 - C3112 + C3115 - C3114) * C19426 +
           (C3459 - C3458 + C3461 - C3460) * C19324 +
           (C5361 - C5362 + C5363 - C5364) * C19427 +
           (C5785 - C5786 + C5787 - C5788) * C29557) *
              C29390 * C29439 * C29425 * C85 +
          ((C3121 - C3120 + C3123 - C3122) * C19426 +
           (C3463 - C3462 + C3465 - C3464) * C19324 +
           (C3053 * C1121 - C3109 * C1057 + C29555 * C2617 - C3110 * C2555) *
               C19427 +
           (C3053 * C1409 - C3109 * C1359 + C29555 * C2947 - C3110 * C2891) *
               C29557) *
              C29390 * C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C3053 * C152 - C3109 * C93 + C29555 * C678 - C3110 * C618) *
               C19426 +
           (C3053 * C491 - C3109 * C443 + C29555 * C966 - C3110 * C916) *
               C19324 +
           (C23659 - C23660 + C23661 - C23662) * C19427 +
           (C24003 - C24004 + C24005 - C24006) * C29557) *
              C29390 * C1054 +
          ((C23660 - C23659 + C23662 - C23661) * C19426 +
           (C24004 - C24003 + C24006 - C24005) * C19324 +
           (C23667 - C23668 + C23669 - C23670) * C19427 +
           (C24007 - C24008 + C24009 - C24010) * C29557) *
              C29390 * C1055 +
          ((C23668 - C23667 + C23670 - C23669) * C19426 +
           (C24008 - C24007 + C24010 - C24009) * C19324 +
           (C3053 * C7622 - C3109 * C7536 + C29555 * C16972 - C3110 * C16897) *
               C19427 +
           (C3053 * C8003 - C3109 * C7941 + C29555 * C17344 - C3110 * C17286) *
               C29557) *
              C29390 * C1056) *
         C29425 * C29413) /
            (p * q * std::sqrt(p + q));
    d2eezz[37] +=
        (-std::pow(Pi, 2.5) *
         (((C19426 * C215 - C19752 * C93 - C19426 * C443 + C19324 * C545 +
            C19427 * C1169 - C19753 * C1059 - C19427 * C1357 + C29557 * C1453) *
               C3053 +
           (C23555 + C23556) * C29555) *
              C29390 * C29439 * C612 -
          ((C23557 + C23558) * C29555 + (C23556 + C23555) * C3053) * C29390 *
              C29439 * C613 +
          ((C23558 + C23557) * C3053 +
           (C19426 * C3709 - C19752 * C3569 - C19426 * C3955 + C19324 * C4069 +
            C19427 * C15556 - C19753 * C15434 - C19427 * C15776 +
            C29557 * C15883) *
               C29555) *
              C29390 * C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C19426 * C215 - C19752 * C93 - C19426 * C443 + C19324 * C545 +
            C19427 * C1169 - C19753 * C1059 - C19427 * C1357 + C29557 * C1453) *
               C3053 +
           (C19426 * C728 - C19752 * C618 - C19426 * C916 + C19324 * C1012 +
            C19427 * C2671 - C19753 * C2553 - C19427 * C2889 + C29557 * C2998) *
               C29555) *
              C29390 * C29439 * C29425 * C84 -
          ((C21357 + C21358) * C29555 + (C19780 + C19779) * C3053) * C29390 *
              C29439 * C29425 * C85 +
          ((C19782 + C19781) * C3053 +
           (C19426 * C730 - C19752 * C616 - C19426 * C918 + C19324 * C1010 +
            C19427 * C2673 - C19753 * C2555 - C19427 * C2891 + C29557 * C3000) *
               C29555) *
              C29390 * C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C19426 * C215 - C19752 * C93 - C19426 * C443 + C19324 * C545 +
            C19427 * C1169 - C19753 * C1059 - C19427 * C1357 + C29557 * C1453) *
               C3053 +
           (C23555 + C23556) * C29555) *
              C29390 * C1054 -
          ((C19427 * C4254 - C19753 * C4142 - C19427 * C4466 + C29557 * C4572 +
            C19426 * C2671 - C19752 * C2553 - C19426 * C2889 + C19324 * C2998) *
               C29555 +
           (C19427 * C1172 - C19753 * C1060 - C19427 * C1360 + C29557 * C1454 +
            C19426 * C1169 - C19752 * C1059 - C19426 * C1357 + C19324 * C1453) *
               C3053) *
              C29390 * C1055 +
          ((C19426 * C1172 - C19752 * C1060 - C19426 * C1360 + C19324 * C1454 +
            C19427 * C7688 - C19753 * C7536 - C19427 * C7941 + C29557 * C8061) *
               C3053 +
           (C19426 * C4254 - C19752 * C4142 - C19426 * C4466 + C19324 * C4572 +
            C19427 * C17040 - C19753 * C16897 - C19427 * C17286 +
            C29557 * C17403) *
               C29555) *
              C29390 * C1056) *
         C29425 * C29413) /
            (p * q * std::sqrt(p + q));
    d2eexx[38] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C13361 * C98 - C13362 * C93 - C13361 * C99 + C29390 * C108) *
                 C19324 +
             C16920 * C29557) *
                C3053 +
            (C23103 + C23104) * C29555) *
               C2031 -
           ((C16921 * C29557 + C15452 * C19324) * C29555 +
            (C16922 * C29557 + C16920 * C19324) * C3053) *
               C2032) *
              C29425 * C1509 +
          (((C18086 * C19324 + (C13361 * C1071 - C13362 * C1061 -
                                C13361 * C1072 + C29390 * C1079) *
                                   C29557) *
                C3053 +
            (C17478 * C19324 + (C13361 * C4146 - C13362 * C4143 -
                                C13361 * C4147 + C29390 * C4149) *
                                   C29557) *
                C29555) *
               C2032 -
           ((C24128 + C24127) * C29555 +
            (C18086 * C29557 +
             (C13361 * C100 - C13362 * C94 - C13361 * C101 + C29390 * C109) *
                 C19324) *
                C3053) *
               C2031) *
              C29425 * C1510)) /
        (p * q * std::sqrt(p + q));
    d2eexy[38] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C3053 * C152 - C3109 * C93 + C29555 * C678 - C3110 * C618) *
                 C13361 +
             (C3053 * C157 - C3109 * C99 + C29555 * C684 - C3110 * C627) *
                 C29390) *
                C19324 +
            ((C23659 - C23660 + C23661 - C23662) * C13361 +
             (C23663 - C23664 + C23665 - C23666) * C29390) *
                C29557) *
               C2031 +
           (((C23660 - C23659 + C23662 - C23661) * C13361 +
             (C23664 - C23663 + C23666 - C23665) * C29390) *
                C19324 +
            ((C23667 - C23668 + C23669 - C23670) * C13361 +
             (C23671 - C23672 + C23673 - C23674) * C29390) *
                C29557) *
               C2032) *
              C29425 * C1509 +
          ((((C3113 - C3112 + C3115 - C3114) * C13361 +
             (C3117 - C3116 + C3119 - C3118) * C29390) *
                C19324 +
            ((C5361 - C5362 + C5363 - C5364) * C13361 +
             (C5365 - C5366 + C5367 - C5368) * C29390) *
                C29557) *
               C2031 +
           (((C5362 - C5361 + C5364 - C5363) * C13361 +
             (C5366 - C5365 + C5368 - C5367) * C29390) *
                C19324 +
            ((C3053 * C1123 - C3109 * C1061 + C29555 * C4201 - C3110 * C4143) *
                 C13361 +
             (C3053 * C1129 - C3109 * C1072 + C29555 * C4203 - C3110 * C4147) *
                 C29390) *
                C29557) *
               C2032) *
              C29425 * C1510)) /
        (p * q * std::sqrt(p + q));
    d2eexz[38] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C19324 * C215 - C19426 * C93 + C29557 * C1169 - C19427 * C1059) *
                 C13361 +
             (C19324 * C220 - C19426 * C99 + C29557 * C1175 - C19427 * C1068) *
                 C29390) *
                C3053 +
            ((C23207 - C23208 + C23209 - C23210) * C13361 +
             (C23211 - C23212 + C23213 - C23214) * C29390) *
                C29555) *
               C2031 +
           (((C19426 * C1059 - C19324 * C1169 + C19427 * C1060 -
              C29557 * C1172) *
                 C13361 +
             (C19426 * C1068 - C19324 * C1175 + C19427 * C1070 -
              C29557 * C1178) *
                 C29390) *
                C3053 +
            ((C19426 * C2553 - C19324 * C2671 + C19427 * C4142 -
              C29557 * C4254) *
                 C13361 +
             (C19426 * C2557 - C19324 * C2674 + C19427 * C4145 -
              C29557 * C4256) *
                 C29390) *
                C29555) *
               C2032) *
              C29425 * C1509 +
          ((((C19430 - C19429 + C19432 - C19431) * C13361 +
             (C19434 - C19433 + C19436 - C19435) * C29390) *
                C3053 +
            ((C20937 - C20938 + C20939 - C20940) * C13361 +
             (C20941 - C20942 + C20943 - C20944) * C29390) *
                C29555) *
               C2031 +
           (((C21572 - C21571 + C21574 - C21573) * C13361 +
             (C21576 - C21575 + C21578 - C21577) * C29390) *
                C3053 +
            ((C19324 * C2672 - C19426 * C2554 + C29557 * C4255 -
              C19427 * C4143) *
                 C13361 +
             (C19324 * C2675 - C19426 * C2559 + C29557 * C4257 -
              C19427 * C4147) *
                 C29390) *
                C29555) *
               C2032) *
              C29425 * C1510)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[38] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C29390 * C98 - C13361 * C93) * C3109 +
                       (C29390 * C282 - C13361 * C277) * C3053 +
                       (C13869 - C13870) * C3110 + (C13871 - C13872) * C29555) *
                          C19324 +
                      ((C17095 - C17096) * C3109 + (C17097 - C17098) * C3053 +
                       C18903 * C3110 + C18904 * C29555) *
                          C29557) *
                         C2031 +
                     (((C17096 - C17095) * C3109 + (C17098 - C17097) * C3053 +
                       C18905 * C3110 + C18906 * C29555) *
                          C19324 +
                      ((C17099 - C17100) * C3109 + (C17101 - C17102) * C3053 +
                       (C17103 - C17104) * C3110 + (C17105 - C17106) * C29555) *
                          C29557) *
                         C2032) *
                        C29425 * C1509 +
                    ((((C13361 * C94 - C29390 * C100) * C3109 +
                       (C13361 * C278 - C29390 * C283) * C3053 +
                       (C14673 - C14674) * C3110 + (C14675 - C14676) * C29555) *
                          C19324 +
                      ((C18285 - C18286) * C3109 + (C18287 - C18288) * C3053 +
                       (C17678 - C17679) * C3110 + (C17680 - C17681) * C29555) *
                          C29557) *
                         C2031 +
                     (((C18286 - C18285) * C3109 + (C18288 - C18287) * C3053 +
                       (C17679 - C17678) * C3110 + (C17681 - C17680) * C29555) *
                          C19324 +
                      ((C29390 * C1071 - C13361 * C1061) * C3109 +
                       (C29390 * C1229 - C13361 * C1223) * C3053 +
                       (C29390 * C4146 - C13361 * C4143) * C3110 +
                       (C29390 * C4311 - C13361 * C4309) * C29555) *
                          C29557) *
                         C2032) *
                        C29425 * C1510)) /
                  (p * q * std::sqrt(p + q));
    d2eeyy[38] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C3109 * C152 - C3277 * C93 - C3109 * C277 + C3053 * C326 +
             C3110 * C678 - C3278 * C618 - C3110 * C778 + C29555 * C830) *
                C29390 * C19324 +
            (C23849 + C23850) * C29390 * C29557) *
               C2031 -
           ((C23851 + C23852) * C29390 * C29557 +
            (C23850 + C23849) * C29390 * C19324) *
               C2032) *
              C29425 * C1509 +
          (((C5584 + C5583) * C29390 * C19324 +
            (C3109 * C1123 - C3277 * C1061 - C3109 * C1223 + C3053 * C1273 +
             C3110 * C4201 - C3278 * C4143 - C3110 * C4309 + C29555 * C4363) *
                C29390 * C29557) *
               C2032 -
           ((C5583 + C5584) * C29390 * C29557 +
            (C3305 + C3304) * C29390 * C19324) *
               C2031) *
              C29425 * C1510)) /
        (p * q * std::sqrt(p + q));
    d2eeyz[38] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C19324 * C215 - C19426 * C93 + C29557 * C1169 - C19427 * C1059) *
                C3109 +
            (C19324 * C390 - C19426 * C277 + C29557 * C1313 - C19427 * C1219) *
                C3053 +
            (C23207 - C23208 + C23209 - C23210) * C3110 +
            (C23373 - C23374 + C23375 - C23376) * C29555) *
               C29390 * C2031 +
           ((C19426 * C1059 - C19324 * C1169 + C19427 * C1060 -
             C29557 * C1172) *
                C3109 +
            (C19426 * C1219 - C19324 * C1313 + C19427 * C1222 -
             C29557 * C1316) *
                C3053 +
            (C19426 * C2553 - C19324 * C2671 + C19427 * C4142 -
             C29557 * C4254) *
                C3110 +
            (C19426 * C2727 - C19324 * C2836 + C19427 * C4308 -
             C29557 * C4414) *
                C29555) *
               C29390 * C2032) *
              C29425 * C1509 +
          (((C19430 - C19429 + C19432 - C19431) * C3109 +
            (C19596 - C19595 + C19598 - C19597) * C3053 +
            (C20937 - C20938 + C20939 - C20940) * C3110 +
            (C21143 - C21144 + C21145 - C21146) * C29555) *
               C29390 * C2031 +
           ((C21572 - C21571 + C21574 - C21573) * C3109 +
            (C21788 - C21787 + C21790 - C21789) * C3053 +
            (C19324 * C2672 - C19426 * C2554 + C29557 * C4255 -
             C19427 * C4143) *
                C3110 +
            (C19324 * C2837 - C19426 * C2728 + C29557 * C4415 -
             C19427 * C4309) *
                C29555) *
               C29390 * C2032) *
              C29425 * C1510)) /
        (p * q * std::sqrt(p + q));
    d2eezx[38] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C29390 * C98 - C13361 * C93) * C19426 +
             (C29390 * C448 - C13361 * C443) * C19324 +
             (C17095 - C17096) * C19427 + (C17289 - C17290) * C29557) *
                C3053 +
            ((C13869 - C13870) * C19426 + (C14004 - C14005) * C19324 +
             C18903 * C19427 + C19123 * C29557) *
                C29555) *
               C2031 +
           (((C17096 - C17095) * C19426 + (C17290 - C17289) * C19324 +
             (C17099 - C17100) * C19427 + (C17291 - C17292) * C29557) *
                C3053 +
            (C18905 * C19426 + C19124 * C19324 + (C17103 - C17104) * C19427 +
             (C17293 - C17294) * C29557) *
                C29555) *
               C2032) *
              C29425 * C1509 +
          ((((C13361 * C94 - C29390 * C100) * C19426 +
             (C13361 * C444 - C29390 * C449) * C19324 +
             (C18285 - C18286) * C19427 + (C18487 - C18488) * C29557) *
                C3053 +
            ((C14673 - C14674) * C19426 + (C14831 - C14832) * C19324 +
             (C17678 - C17679) * C19427 + (C17880 - C17881) * C29557) *
                C29555) *
               C2031 +
           (((C18286 - C18285) * C19426 + (C18488 - C18487) * C19324 +
             (C29390 * C1071 - C13361 * C1061) * C19427 +
             (C29390 * C1367 - C13361 * C1361) * C29557) *
                C3053 +
            ((C17679 - C17678) * C19426 + (C17881 - C17880) * C19324 +
             (C29390 * C4146 - C13361 * C4143) * C19427 +
             (C29390 * C4469 - C13361 * C4467) * C29557) *
                C29555) *
               C2032) *
              C29425 * C1510)) /
        (p * q * std::sqrt(p + q));
    d2eezy[38] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C3053 * C152 - C3109 * C93 + C29555 * C678 - C3110 * C618) *
                C19426 +
            (C3053 * C491 - C3109 * C443 + C29555 * C966 - C3110 * C916) *
                C19324 +
            (C23659 - C23660 + C23661 - C23662) * C19427 +
            (C24003 - C24004 + C24005 - C24006) * C29557) *
               C29390 * C2031 +
           ((C23660 - C23659 + C23662 - C23661) * C19426 +
            (C24004 - C24003 + C24006 - C24005) * C19324 +
            (C23667 - C23668 + C23669 - C23670) * C19427 +
            (C24007 - C24008 + C24009 - C24010) * C29557) *
               C29390 * C2032) *
              C29425 * C1509 +
          (((C3113 - C3112 + C3115 - C3114) * C19426 +
            (C3459 - C3458 + C3461 - C3460) * C19324 +
            (C5361 - C5362 + C5363 - C5364) * C19427 +
            (C5785 - C5786 + C5787 - C5788) * C29557) *
               C29390 * C2031 +
           ((C5362 - C5361 + C5364 - C5363) * C19426 +
            (C5786 - C5785 + C5788 - C5787) * C19324 +
            (C3053 * C1123 - C3109 * C1061 + C29555 * C4201 - C3110 * C4143) *
                C19427 +
            (C3053 * C1411 - C3109 * C1361 + C29555 * C4521 - C3110 * C4467) *
                C29557) *
               C29390 * C2032) *
              C29425 * C1510)) /
        (p * q * std::sqrt(p + q));
    d2eezz[38] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C19426 * C215 - C19752 * C93 - C19426 * C443 +
                       C19324 * C545 + C19427 * C1169 - C19753 * C1059 -
                       C19427 * C1357 + C29557 * C1453) *
                          C3053 +
                      (C23555 + C23556) * C29555) *
                         C29390 * C2031 -
                     ((C19427 * C4254 - C19753 * C4142 - C19427 * C4466 +
                       C29557 * C4572 + C19426 * C2671 - C19752 * C2553 -
                       C19426 * C2889 + C19324 * C2998) *
                          C29555 +
                      (C19427 * C1172 - C19753 * C1060 - C19427 * C1360 +
                       C29557 * C1454 + C19426 * C1169 - C19752 * C1059 -
                       C19426 * C1357 + C19324 * C1453) *
                          C3053) *
                         C29390 * C2032) *
                        C29425 * C1509 +
                    (((C22006 + C22005) * C3053 +
                      (C19426 * C2672 - C19752 * C2554 - C19426 * C2890 +
                       C19324 * C2999 + C19427 * C4255 - C19753 * C4143 -
                       C19427 * C4467 + C29557 * C4573) *
                          C29555) *
                         C29390 * C2032 -
                     ((C21357 + C21358) * C29555 + (C19780 + C19779) * C3053) *
                         C29390 * C2031) *
                        C29425 * C1510)) /
                  (p * q * std::sqrt(p + q));
    d2eexx[39] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13361 * C98 - C13362 * C93 - C13361 * C99 + C29390 * C108) *
                C19324 +
            C16920 * C29557) *
               C3053 +
           (C13734 * C19324 + C15452 * C29557) * C29555) *
              C29439 * C29425 * C84 -
          ((C17478 * C29557 + C14519 * C19324) * C29555 +
           (C18086 * C29557 +
            (C13361 * C100 - C13362 * C94 - C13361 * C101 + C29390 * C109) *
                C19324) *
               C3053) *
              C29439 * C29425 * C85 +
          (((C13361 * C102 - C13362 * C95 - C13361 * C103 + C29390 * C110) *
                C19324 +
            (C13361 * C1063 - C13362 * C1057 - C13361 * C1064 +
             C29390 * C1075) *
                C29557) *
               C3053 +
           ((C13361 * C622 - C13362 * C616 - C13361 * C623 + C29390 * C634) *
                C19324 +
            (C13361 * C2560 - C13362 * C2555 - C13361 * C2561 +
             C29390 * C2564) *
                C29557) *
               C29555) *
              C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13361 * C98 - C13362 * C93 - C13361 * C99 + C29390 * C108) *
                C19324 +
            C16920 * C29557) *
               C3053 +
           (C23103 + C23104) * C29555) *
              C29439 * C612 -
          ((C23105 + C23106) * C29555 + (C23104 + C23103) * C3053) * C29439 *
              C613 +
          ((C23106 + C23105) * C3053 +
           (C13736 * C19324 + (C13361 * C15435 - C13362 * C15434 -
                               C13361 * C15436 + C29390 * C15437) *
                                  C29557) *
               C29555) *
              C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q));
    d2eexy[39] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C3053 * C152 - C3109 * C93 + C29555 * C678 - C3110 * C618) *
                C13361 +
            (C3053 * C157 - C3109 * C99 + C29555 * C684 - C3110 * C627) *
                C29390) *
               C19324 +
           ((C3053 * C1119 - C3109 * C1059 + C29555 * C2615 - C3110 * C2553) *
                C13361 +
            (C3053 * C1125 - C3109 * C1068 + C29555 * C2618 - C3110 * C2557) *
                C29390) *
               C29557) *
              C29439 * C29425 * C84 +
          (((C3113 - C3112 + C3115 - C3114) * C13361 +
            (C3117 - C3116 + C3119 - C3118) * C29390) *
               C19324 +
           ((C5361 - C5362 + C5363 - C5364) * C13361 +
            (C5365 - C5366 + C5367 - C5368) * C29390) *
               C29557) *
              C29439 * C29425 * C85 +
          (((C3121 - C3120 + C3123 - C3122) * C13361 +
            (C3125 - C3124 + C3127 - C3126) * C29390) *
               C19324 +
           ((C3053 * C1121 - C3109 * C1057 + C29555 * C2617 - C3110 * C2555) *
                C13361 +
            (C3053 * C1127 - C3109 * C1064 + C29555 * C2620 - C3110 * C2561) *
                C29390) *
               C29557) *
              C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C3053 * C152 - C3109 * C93 + C29555 * C678 - C3110 * C618) *
                C13361 +
            (C3053 * C157 - C3109 * C99 + C29555 * C684 - C3110 * C627) *
                C29390) *
               C19324 +
           ((C3053 * C1119 - C3109 * C1059 + C29555 * C2615 - C3110 * C2553) *
                C13361 +
            (C3053 * C1125 - C3109 * C1068 + C29555 * C2618 - C3110 * C2557) *
                C29390) *
               C29557) *
              C29439 * C612 +
          (((C3109 * C618 - C3053 * C678 + C3110 * C619 - C29555 * C681) *
                C13361 +
            (C3109 * C627 - C3053 * C684 + C3110 * C629 - C29555 * C687) *
                C29390) *
               C19324 +
           ((C3109 * C2553 - C3053 * C2615 + C3110 * C5929 - C29555 * C6017) *
                C13361 +
            (C3109 * C2557 - C3053 * C2618 + C3110 * C5932 - C29555 * C6019) *
                C29390) *
               C29557) *
              C29439 * C613 +
          (((C3053 * C681 - C3109 * C619 + C29555 * C3655 - C3110 * C3569) *
                C13361 +
            (C3053 * C687 - C3109 * C629 + C29555 * C3657 - C3110 * C3572) *
                C29390) *
               C19324 +
           ((C3053 * C6017 - C3109 * C5929 + C29555 * C15504 - C3110 * C15434) *
                C13361 +
            (C3053 * C6019 - C3109 * C5932 + C29555 * C15505 - C3110 * C15436) *
                C29390) *
               C29557) *
              C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q));
    d2eexz[39] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19324 * C215 - C19426 * C93 + C29557 * C1169 - C19427 * C1059) *
                C13361 +
            (C19324 * C220 - C19426 * C99 + C29557 * C1175 - C19427 * C1068) *
                C29390) *
               C3053 +
           ((C19324 * C728 - C19426 * C618 + C29557 * C2671 - C19427 * C2553) *
                C13361 +
            (C19324 * C734 - C19426 * C627 + C29557 * C2674 - C19427 * C2557) *
                C29390) *
               C29555) *
              C29439 * C29425 * C84 +
          (((C19430 - C19429 + C19432 - C19431) * C13361 +
            (C19434 - C19433 + C19436 - C19435) * C29390) *
               C3053 +
           ((C20937 - C20938 + C20939 - C20940) * C13361 +
            (C20941 - C20942 + C20943 - C20944) * C29390) *
               C29555) *
              C29439 * C29425 * C85 +
          (((C19438 - C19437 + C19440 - C19439) * C13361 +
            (C19442 - C19441 + C19444 - C19443) * C29390) *
               C3053 +
           ((C19324 * C730 - C19426 * C616 + C29557 * C2673 - C19427 * C2555) *
                C13361 +
            (C19324 * C736 - C19426 * C623 + C29557 * C2676 - C19427 * C2561) *
                C29390) *
               C29555) *
              C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19324 * C215 - C19426 * C93 + C29557 * C1169 - C19427 * C1059) *
                C13361 +
            (C19324 * C220 - C19426 * C99 + C29557 * C1175 - C19427 * C1068) *
                C29390) *
               C3053 +
           ((C23207 - C23208 + C23209 - C23210) * C13361 +
            (C23211 - C23212 + C23213 - C23214) * C29390) *
               C29555) *
              C29439 * C612 +
          (((C23208 - C23207 + C23210 - C23209) * C13361 +
            (C23212 - C23211 + C23214 - C23213) * C29390) *
               C3053 +
           ((C23215 - C23216 + C23217 - C23218) * C13361 +
            (C23219 - C23220 + C23221 - C23222) * C29390) *
               C29555) *
              C29439 * C613 +
          (((C23216 - C23215 + C23218 - C23217) * C13361 +
            (C23220 - C23219 + C23222 - C23221) * C29390) *
               C3053 +
           ((C19324 * C3709 - C19426 * C3569 + C29557 * C15556 -
             C19427 * C15434) *
                C13361 +
            (C19324 * C3711 - C19426 * C3572 + C29557 * C15557 -
             C19427 * C15436) *
                C29390) *
               C29555) *
              C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q));
    d2eeyx[39] += (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C29390 * C98 - C13361 * C93) * C3109 +
                      (C29390 * C282 - C13361 * C277) * C3053 +
                      (C13869 - C13870) * C3110 + (C13871 - C13872) * C29555) *
                         C19324 +
                     ((C17095 - C17096) * C3109 + (C17097 - C17098) * C3053 +
                      C18903 * C3110 + C18904 * C29555) *
                         C29557) *
                        C29439 * C29425 * C84 +
                    (((C13361 * C94 - C29390 * C100) * C3109 +
                      (C13361 * C278 - C29390 * C283) * C3053 +
                      (C14673 - C14674) * C3110 + (C14675 - C14676) * C29555) *
                         C19324 +
                     ((C18285 - C18286) * C3109 + (C18287 - C18288) * C3053 +
                      (C17678 - C17679) * C3110 + (C17680 - C17681) * C29555) *
                         C29557) *
                        C29439 * C29425 * C85 +
                    (((C29390 * C102 - C13361 * C95) * C3109 +
                      (C29390 * C284 - C13361 * C279) * C3053 +
                      (C29390 * C622 - C13361 * C616) * C3110 +
                      (C29390 * C786 - C13361 * C780) * C29555) *
                         C19324 +
                     ((C29390 * C1063 - C13361 * C1057) * C3109 +
                      (C29390 * C1227 - C13361 * C1221) * C3053 +
                      (C29390 * C2560 - C13361 * C2555) * C3110 +
                      (C29390 * C2732 - C13361 * C2729) * C29555) *
                         C29557) *
                        C29439 * C29425 * C86)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C29390 * C98 - C13361 * C93) * C3109 +
                      (C29390 * C282 - C13361 * C277) * C3053 +
                      (C13869 - C13870) * C3110 + (C13871 - C13872) * C29555) *
                         C19324 +
                     ((C17095 - C17096) * C3109 + (C17097 - C17098) * C3053 +
                      C18903 * C3110 + C18904 * C29555) *
                         C29557) *
                        C29439 * C612 +
                    (((C13870 - C13869) * C3109 + (C13872 - C13871) * C3053 +
                      (C13874 - C13873) * C3110 + (C13876 - C13875) * C29555) *
                         C19324 +
                     (C18905 * C3109 + C18906 * C3053 +
                      (C15619 - C15620) * C3110 + (C15621 - C15622) * C29555) *
                         C29557) *
                        C29439 * C613 +
                    ((C13881 * C3109 + C13882 * C3053 +
                      (C13878 - C13877) * C3110 + (C13880 - C13879) * C29555) *
                         C19324 +
                     ((C15620 - C15619) * C3109 + (C15622 - C15621) * C3053 +
                      (C29390 * C15435 - C13361 * C15434) * C3110 +
                      (C29390 * C15613 - C13361 * C15612) * C29555) *
                         C29557) *
                        C29439 * C614) *
                   C29413) /
                      (p * q * std::sqrt(p + q));
    d2eeyy[39] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C3109 * C152 - C3277 * C93 - C3109 * C277 + C3053 * C326 +
            C3110 * C678 - C3278 * C618 - C3110 * C778 + C29555 * C830) *
               C29390 * C19324 +
           (C3109 * C1119 - C3277 * C1059 - C3109 * C1219 + C3053 * C1271 +
            C3110 * C2615 - C3278 * C2553 - C3110 * C2727 + C29555 * C2783) *
               C29390 * C29557) *
              C29439 * C29425 * C84 -
          ((C5583 + C5584) * C29390 * C29557 +
           (C3305 + C3304) * C29390 * C19324) *
              C29439 * C29425 * C85 +
          ((C3307 + C3306) * C29390 * C19324 +
           (C3109 * C1121 - C3277 * C1057 - C3109 * C1221 + C3053 * C1269 +
            C3110 * C2617 - C3278 * C2555 - C3110 * C2729 + C29555 * C2785) *
               C29390 * C29557) *
              C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C3109 * C152 - C3277 * C93 - C3109 * C277 + C3053 * C326 +
            C3110 * C678 - C3278 * C618 - C3110 * C778 + C29555 * C830) *
               C29390 * C19324 +
           (C3109 * C1119 - C3277 * C1059 - C3109 * C1219 + C3053 * C1271 +
            C3110 * C2615 - C3278 * C2553 - C3110 * C2727 + C29555 * C2783) *
               C29390 * C29557) *
              C29439 * C612 -
          ((C3110 * C6017 - C3278 * C5929 - C3110 * C6161 + C29555 * C6239 +
            C3109 * C2615 - C3277 * C2553 - C3109 * C2727 + C3053 * C2783) *
               C29390 * C29557 +
           (C3110 * C681 - C3278 * C619 - C3110 * C781 + C29555 * C831 +
            C3109 * C678 - C3277 * C618 - C3109 * C778 + C3053 * C830) *
               C29390 * C19324) *
              C29439 * C613 +
          ((C3109 * C681 - C3277 * C619 - C3109 * C781 + C3053 * C831 +
            C3110 * C3655 - C3278 * C3569 - C3110 * C3775 + C29555 * C3845) *
               C29390 * C19324 +
           (C3109 * C6017 - C3277 * C5929 - C3109 * C6161 + C3053 * C6239 +
            C3110 * C15504 - C3278 * C15434 - C3110 * C15612 +
            C29555 * C15672) *
               C29390 * C29557) *
              C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q));
    d2eeyz[39] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C19324 * C215 - C19426 * C93 + C29557 * C1169 - C19427 * C1059) *
               C3109 +
           (C19324 * C390 - C19426 * C277 + C29557 * C1313 - C19427 * C1219) *
               C3053 +
           (C19324 * C728 - C19426 * C618 + C29557 * C2671 - C19427 * C2553) *
               C3110 +
           (C19324 * C872 - C19426 * C778 + C29557 * C2836 - C19427 * C2727) *
               C29555) *
              C29390 * C29439 * C29425 * C84 +
          ((C19430 - C19429 + C19432 - C19431) * C3109 +
           (C19596 - C19595 + C19598 - C19597) * C3053 +
           (C20937 - C20938 + C20939 - C20940) * C3110 +
           (C21143 - C21144 + C21145 - C21146) * C29555) *
              C29390 * C29439 * C29425 * C85 +
          ((C19438 - C19437 + C19440 - C19439) * C3109 +
           (C19600 - C19599 + C19602 - C19601) * C3053 +
           (C19324 * C730 - C19426 * C616 + C29557 * C2673 - C19427 * C2555) *
               C3110 +
           (C19324 * C874 - C19426 * C780 + C29557 * C2838 - C19427 * C2729) *
               C29555) *
              C29390 * C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C19324 * C215 - C19426 * C93 + C29557 * C1169 - C19427 * C1059) *
               C3109 +
           (C19324 * C390 - C19426 * C277 + C29557 * C1313 - C19427 * C1219) *
               C3053 +
           (C23207 - C23208 + C23209 - C23210) * C3110 +
           (C23373 - C23374 + C23375 - C23376) * C29555) *
              C29390 * C29439 * C612 +
          ((C23208 - C23207 + C23210 - C23209) * C3109 +
           (C23374 - C23373 + C23376 - C23375) * C3053 +
           (C23215 - C23216 + C23217 - C23218) * C3110 +
           (C23377 - C23378 + C23379 - C23380) * C29555) *
              C29390 * C29439 * C613 +
          ((C23216 - C23215 + C23218 - C23217) * C3109 +
           (C23378 - C23377 + C23380 - C23379) * C3053 +
           (C19324 * C3709 - C19426 * C3569 + C29557 * C15556 -
            C19427 * C15434) *
               C3110 +
           (C19324 * C3897 - C19426 * C3775 + C29557 * C15723 -
            C19427 * C15612) *
               C29555) *
              C29390 * C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q));
    d2eezx[39] += (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C29390 * C98 - C13361 * C93) * C19426 +
                      (C29390 * C448 - C13361 * C443) * C19324 +
                      (C17095 - C17096) * C19427 + (C17289 - C17290) * C29557) *
                         C3053 +
                     ((C13869 - C13870) * C19426 + (C14004 - C14005) * C19324 +
                      C18903 * C19427 + C19123 * C29557) *
                         C29555) *
                        C29439 * C29425 * C84 +
                    (((C13361 * C94 - C29390 * C100) * C19426 +
                      (C13361 * C444 - C29390 * C449) * C19324 +
                      (C18285 - C18286) * C19427 + (C18487 - C18488) * C29557) *
                         C3053 +
                     ((C14673 - C14674) * C19426 + (C14831 - C14832) * C19324 +
                      (C17678 - C17679) * C19427 + (C17880 - C17881) * C29557) *
                         C29555) *
                        C29439 * C29425 * C85 +
                    (((C29390 * C102 - C13361 * C95) * C19426 +
                      (C29390 * C450 - C13361 * C445) * C19324 +
                      (C29390 * C1063 - C13361 * C1057) * C19427 +
                      (C29390 * C1365 - C13361 * C1359) * C29557) *
                         C3053 +
                     ((C29390 * C622 - C13361 * C616) * C19426 +
                      (C29390 * C924 - C13361 * C918) * C19324 +
                      (C29390 * C2560 - C13361 * C2555) * C19427 +
                      (C29390 * C2894 - C13361 * C2891) * C29557) *
                         C29555) *
                        C29439 * C29425 * C86)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C29390 * C98 - C13361 * C93) * C19426 +
                      (C29390 * C448 - C13361 * C443) * C19324 +
                      (C17095 - C17096) * C19427 + (C17289 - C17290) * C29557) *
                         C3053 +
                     ((C13869 - C13870) * C19426 + (C14004 - C14005) * C19324 +
                      C18903 * C19427 + C19123 * C29557) *
                         C29555) *
                        C29439 * C612 +
                    (((C13870 - C13869) * C19426 + (C14005 - C14004) * C19324 +
                      C18905 * C19427 + C19124 * C29557) *
                         C3053 +
                     ((C13874 - C13873) * C19426 + (C14008 - C14007) * C19324 +
                      (C15619 - C15620) * C19427 + (C15781 - C15782) * C29557) *
                         C29555) *
                        C29439 * C613 +
                    ((C13881 * C19426 + C14011 * C19324 +
                      (C15620 - C15619) * C19427 + (C15782 - C15781) * C29557) *
                         C3053 +
                     ((C13878 - C13877) * C19426 + (C14010 - C14009) * C19324 +
                      (C29390 * C15435 - C13361 * C15434) * C19427 +
                      (C29390 * C15777 - C13361 * C15776) * C29557) *
                         C29555) *
                        C29439 * C614) *
                   C29413) /
                      (p * q * std::sqrt(p + q));
    d2eezy[39] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C3053 * C152 - C3109 * C93 + C29555 * C678 - C3110 * C618) *
               C19426 +
           (C3053 * C491 - C3109 * C443 + C29555 * C966 - C3110 * C916) *
               C19324 +
           (C3053 * C1119 - C3109 * C1059 + C29555 * C2615 - C3110 * C2553) *
               C19427 +
           (C3053 * C1407 - C3109 * C1357 + C29555 * C2945 - C3110 * C2889) *
               C29557) *
              C29390 * C29439 * C29425 * C84 +
          ((C3113 - C3112 + C3115 - C3114) * C19426 +
           (C3459 - C3458 + C3461 - C3460) * C19324 +
           (C5361 - C5362 + C5363 - C5364) * C19427 +
           (C5785 - C5786 + C5787 - C5788) * C29557) *
              C29390 * C29439 * C29425 * C85 +
          ((C3121 - C3120 + C3123 - C3122) * C19426 +
           (C3463 - C3462 + C3465 - C3464) * C19324 +
           (C3053 * C1121 - C3109 * C1057 + C29555 * C2617 - C3110 * C2555) *
               C19427 +
           (C3053 * C1409 - C3109 * C1359 + C29555 * C2947 - C3110 * C2891) *
               C29557) *
              C29390 * C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C3053 * C152 - C3109 * C93 + C29555 * C678 - C3110 * C618) *
               C19426 +
           (C3053 * C491 - C3109 * C443 + C29555 * C966 - C3110 * C916) *
               C19324 +
           (C3053 * C1119 - C3109 * C1059 + C29555 * C2615 - C3110 * C2553) *
               C19427 +
           (C3053 * C1407 - C3109 * C1357 + C29555 * C2945 - C3110 * C2889) *
               C29557) *
              C29390 * C29439 * C612 +
          ((C3109 * C618 - C3053 * C678 + C3110 * C619 - C29555 * C681) *
               C19426 +
           (C3109 * C916 - C3053 * C966 + C3110 * C919 - C29555 * C969) *
               C19324 +
           (C3109 * C2553 - C3053 * C2615 + C3110 * C5929 - C29555 * C6017) *
               C19427 +
           (C3109 * C2889 - C3053 * C2945 + C3110 * C6377 - C29555 * C6451) *
               C29557) *
              C29390 * C29439 * C613 +
          ((C3053 * C681 - C3109 * C619 + C29555 * C3655 - C3110 * C3569) *
               C19426 +
           (C3053 * C969 - C3109 * C919 + C29555 * C4017 - C3110 * C3955) *
               C19324 +
           (C3053 * C6017 - C3109 * C5929 + C29555 * C15504 - C3110 * C15434) *
               C19427 +
           (C3053 * C6451 - C3109 * C6377 + C29555 * C15832 - C3110 * C15776) *
               C29557) *
              C29390 * C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q));
    d2eezz[39] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C19426 * C215 - C19752 * C93 - C19426 * C443 + C19324 * C545 +
            C19427 * C1169 - C19753 * C1059 - C19427 * C1357 + C29557 * C1453) *
               C3053 +
           (C19426 * C728 - C19752 * C618 - C19426 * C916 + C19324 * C1012 +
            C19427 * C2671 - C19753 * C2553 - C19427 * C2889 + C29557 * C2998) *
               C29555) *
              C29390 * C29439 * C29425 * C84 -
          ((C21357 + C21358) * C29555 + (C19780 + C19779) * C3053) * C29390 *
              C29439 * C29425 * C85 +
          ((C19782 + C19781) * C3053 +
           (C19426 * C730 - C19752 * C616 - C19426 * C918 + C19324 * C1010 +
            C19427 * C2673 - C19753 * C2555 - C19427 * C2891 + C29557 * C3000) *
               C29555) *
              C29390 * C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C19426 * C215 - C19752 * C93 - C19426 * C443 + C19324 * C545 +
            C19427 * C1169 - C19753 * C1059 - C19427 * C1357 + C29557 * C1453) *
               C3053 +
           (C23555 + C23556) * C29555) *
              C29390 * C29439 * C612 -
          ((C23557 + C23558) * C29555 + (C23556 + C23555) * C3053) * C29390 *
              C29439 * C613 +
          ((C23558 + C23557) * C3053 +
           (C19426 * C3709 - C19752 * C3569 - C19426 * C3955 + C19324 * C4069 +
            C19427 * C15556 - C19753 * C15434 - C19427 * C15776 +
            C29557 * C15883) *
               C29555) *
              C29390 * C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q));
    d2eexx[40] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C13361 * C98 - C13362 * C93 - C13361 * C99 + C29390 * C108) *
                C25936 +
            C16920 * C25937 + C16922 * C25938) *
               C29484 * C29439 * C1507 -
           (C16921 * C25938 + C15452 * C25937 + C13734 * C25936) * C29484 *
               C29439 * C1508) *
              C1509 +
          ((C14519 * C25936 + C17478 * C25937 +
            (C13361 * C4146 - C13362 * C4143 - C13361 * C4147 +
             C29390 * C4149) *
                C25938) *
               C29484 * C29439 * C1508 -
           ((C13361 * C1071 - C13362 * C1061 - C13361 * C1072 +
             C29390 * C1079) *
                C25938 +
            C18086 * C25937 +
            (C13361 * C100 - C13362 * C94 - C13361 * C101 + C29390 * C109) *
                C25936) *
               C29484 * C29439 * C1507) *
              C1510)) /
        (p * q * std::sqrt(p + q));
    d2eexy[40] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C29484 * C152 - C151 * C93) * C13361 +
             (C29484 * C157 - C151 * C99) * C29390) *
                C25936 +
            ((C7627 - C7628) * C13361 + (C7629 - C7630) * C29390) * C25937 +
            C26689 * C25938) *
               C29439 * C1507 +
           (((C151 * C618 - C29484 * C678) * C13361 +
             (C151 * C627 - C29484 * C684) * C29390) *
                C25936 +
            ((C9483 - C9484) * C13361 + (C9485 - C9486) * C29390) * C25937 +
            ((C151 * C4142 - C29484 * C4200) * C13361 +
             (C151 * C4145 - C29484 * C4202) * C29390) *
                C25938) *
               C29439 * C1508) *
              C1509 +
          ((((C164 - C163) * C13361 + (C166 - C165) * C29390) * C25936 +
            (C8845 * C13361 + C8846 * C29390) * C25937 +
            ((C7635 - C7636) * C13361 + (C7637 - C7638) * C29390) * C25938) *
               C29439 * C1507 +
           (((C1569 - C1568) * C13361 + (C1571 - C1570) * C29390) * C25936 +
            ((C8197 - C8196) * C13361 + (C8199 - C8198) * C29390) * C25937 +
            ((C29484 * C4201 - C151 * C4143) * C13361 +
             (C29484 * C4203 - C151 * C4147) * C29390) *
                C25938) *
               C29439 * C1508) *
              C1510)) /
        (p * q * std::sqrt(p + q));
    d2eexz[40] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C25936 * C215 - C26015 * C93 + C25937 * C1169 -
                       C26016 * C1059 + C25938 * C1172 - C26017 * C1060) *
                          C13361 +
                      (C25936 * C220 - C26015 * C99 + C25937 * C1175 -
                       C26016 * C1068 + C25938 * C1178 - C26017 * C1070) *
                          C29390) *
                         C29484 * C29439 * C1507 +
                     ((C26015 * C618 - C25936 * C728 + C26016 * C2553 -
                       C25937 * C2671 + C26017 * C4142 - C25938 * C4254) *
                          C13361 +
                      (C26015 * C627 - C25936 * C734 + C26016 * C2557 -
                       C25937 * C2674 + C26017 * C4145 - C25938 * C4256) *
                          C29390) *
                         C29484 * C29439 * C1508) *
                        C1509 +
                    (((C26015 * C94 - C25936 * C216 + C26016 * C1058 -
                       C25937 * C1170 + C26017 * C1061 - C25938 * C1173) *
                          C13361 +
                      (C26015 * C101 - C25936 * C221 + C26016 * C1066 -
                       C25937 * C1176 + C26017 * C1072 - C25938 * C1179) *
                          C29390) *
                         C29484 * C29439 * C1507 +
                     ((C25936 * C729 - C26015 * C617 + C25937 * C2672 -
                       C26016 * C2554 + C25938 * C4255 - C26017 * C4143) *
                          C13361 +
                      (C25936 * C735 - C26015 * C625 + C25937 * C2675 -
                       C26016 * C2559 + C25938 * C4257 - C26017 * C4147) *
                          C29390) *
                         C29484 * C29439 * C1508) *
                        C1510)) /
                  (p * q * std::sqrt(p + q));
    d2eeyx[40] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C29390 * C98 - C13361 * C93) * C151 +
             (C29390 * C282 - C13361 * C277) * C29484) *
                C25936 +
            ((C17095 - C17096) * C151 + (C17097 - C17098) * C29484) * C25937 +
            C26778 * C25938) *
               C29439 * C1507 +
           (((C13870 - C13869) * C151 + (C13872 - C13871) * C29484) * C25936 +
            (C18905 * C151 + C18906 * C29484) * C25937 +
            ((C17103 - C17104) * C151 + (C17105 - C17106) * C29484) * C25938) *
               C29439 * C1508) *
              C1509 +
          ((((C13361 * C94 - C29390 * C100) * C151 +
             (C13361 * C278 - C29390 * C283) * C29484) *
                C25936 +
            ((C18285 - C18286) * C151 + (C18287 - C18288) * C29484) * C25937 +
            ((C13361 * C1061 - C29390 * C1071) * C151 +
             (C13361 * C1223 - C29390 * C1229) * C29484) *
                C25938) *
               C29439 * C1507 +
           (((C14674 - C14673) * C151 + (C14676 - C14675) * C29484) * C25936 +
            ((C17679 - C17678) * C151 + (C17681 - C17680) * C29484) * C25937 +
            ((C29390 * C4146 - C13361 * C4143) * C151 +
             (C29390 * C4311 - C13361 * C4309) * C29484) *
                C25938) *
               C29439 * C1508) *
              C1510)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[40] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C151 * C152 - C325 * C93 - C151 * C277 + C29484 * C326) * C29390 *
                C25936 +
            C26818 * C25937 + C26819 * C25938) *
               C29439 * C1507 -
           ((C151 * C4200 - C325 * C4142 - C151 * C4308 + C29484 * C4362) *
                C29390 * C25938 +
            C9692 * C29390 * C25937 +
            (C151 * C678 - C325 * C618 - C151 * C778 + C29484 * C830) * C29390 *
                C25936) *
               C29439 * C1508) *
              C1509 +
          ((C1752 * C29390 * C25936 + C8412 * C29390 * C25937 +
            (C151 * C4201 - C325 * C4143 - C151 * C4309 + C29484 * C4363) *
                C29390 * C25938) *
               C29439 * C1508 -
           (C7835 * C29390 * C25938 + C2274 * C29390 * C25937 +
            C350 * C29390 * C25936) *
               C29439 * C1507) *
              C1510)) /
        (p * q * std::sqrt(p + q));
    d2eeyz[40] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C25936 * C215 - C26015 * C93 + C25937 * C1169 -
                       C26016 * C1059 + C25938 * C1172 - C26017 * C1060) *
                          C151 +
                      (C25936 * C390 - C26015 * C277 + C25937 * C1313 -
                       C26016 * C1219 + C25938 * C1316 - C26017 * C1222) *
                          C29484) *
                         C29390 * C29439 * C1507 +
                     ((C26015 * C618 - C25936 * C728 + C26016 * C2553 -
                       C25937 * C2671 + C26017 * C4142 - C25938 * C4254) *
                          C151 +
                      (C26015 * C778 - C25936 * C872 + C26016 * C2727 -
                       C25937 * C2836 + C26017 * C4308 - C25938 * C4414) *
                          C29484) *
                         C29390 * C29439 * C1508) *
                        C1509 +
                    (((C26015 * C94 - C25936 * C216 + C26016 * C1058 -
                       C25937 * C1170 + C26017 * C1061 - C25938 * C1173) *
                          C151 +
                      (C26015 * C278 - C25936 * C391 + C26016 * C1220 -
                       C25937 * C1314 + C26017 * C1223 - C25938 * C1317) *
                          C29484) *
                         C29390 * C29439 * C1507 +
                     ((C25936 * C729 - C26015 * C617 + C25937 * C2672 -
                       C26016 * C2554 + C25938 * C4255 - C26017 * C4143) *
                          C151 +
                      (C25936 * C873 - C26015 * C779 + C25937 * C2837 -
                       C26016 * C2728 + C25938 * C4415 - C26017 * C4309) *
                          C29484) *
                         C29390 * C29439 * C1508) *
                        C1510)) /
                  (p * q * std::sqrt(p + q));
    d2eezx[40] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C29390 * C98 - C13361 * C93) * C26015 +
                      (C29390 * C448 - C13361 * C443) * C25936 +
                      (C17095 - C17096) * C26016 + (C17289 - C17290) * C25937 +
                      C26770 * C26017 + C26907 * C25938) *
                         C29484 * C29439 * C1507 +
                     ((C13870 - C13869) * C26015 + (C14005 - C14004) * C25936 +
                      C18905 * C26016 + C19124 * C25937 +
                      (C17103 - C17104) * C26017 + (C17293 - C17294) * C25938) *
                         C29484 * C29439 * C1508) *
                        C1509 +
                    (((C13361 * C94 - C29390 * C100) * C26015 +
                      (C13361 * C444 - C29390 * C449) * C25936 +
                      (C18285 - C18286) * C26016 + (C18487 - C18488) * C25937 +
                      (C13361 * C1061 - C29390 * C1071) * C26017 +
                      (C13361 * C1361 - C29390 * C1367) * C25938) *
                         C29484 * C29439 * C1507 +
                     ((C14674 - C14673) * C26015 + (C14832 - C14831) * C25936 +
                      (C17679 - C17678) * C26016 + (C17881 - C17880) * C25937 +
                      (C29390 * C4146 - C13361 * C4143) * C26017 +
                      (C29390 * C4469 - C13361 * C4467) * C25938) *
                         C29484 * C29439 * C1508) *
                        C1510)) /
                  (p * q * std::sqrt(p + q));
    d2eezy[40] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C29484 * C152 - C151 * C93) * C26015 +
            (C29484 * C491 - C151 * C443) * C25936 + (C7627 - C7628) * C26016 +
            (C8006 - C8007) * C25937 + C26681 * C26017 + C26949 * C25938) *
               C29390 * C29439 * C1507 +
           ((C151 * C618 - C29484 * C678) * C26015 +
            (C151 * C916 - C29484 * C966) * C25936 + (C9483 - C9484) * C26016 +
            (C9892 - C9893) * C25937 +
            (C151 * C4142 - C29484 * C4200) * C26017 +
            (C151 * C4466 - C29484 * C4520) * C25938) *
               C29390 * C29439 * C1508) *
              C1509 +
          (((C164 - C163) * C26015 + (C498 - C497) * C25936 + C8845 * C26016 +
            C9270 * C25937 + (C7635 - C7636) * C26017 +
            (C8010 - C8011) * C25938) *
               C29390 * C29439 * C1507 +
           ((C1569 - C1568) * C26015 + (C1912 - C1911) * C25936 +
            (C8197 - C8196) * C26016 + (C8616 - C8615) * C25937 +
            (C29484 * C4201 - C151 * C4143) * C26017 +
            (C29484 * C4521 - C151 * C4467) * C25938) *
               C29390 * C29439 * C1508) *
              C1510)) /
        (p * q * std::sqrt(p + q));
    d2eezz[40] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C26015 * C215 - C26246 * C93 - C26015 * C443 + C25936 * C545 +
            C26016 * C1169 - C26247 * C1059 - C26016 * C1357 + C25937 * C1453 +
            C26017 * C1172 - C26248 * C1060 - C26017 * C1360 + C25938 * C1454) *
               C29484 * C29390 * C29439 * C1507 -
           (C26017 * C4254 - C26248 * C4142 - C26017 * C4466 + C25938 * C4572 +
            C26016 * C2671 - C26247 * C2553 - C26016 * C2889 + C25937 * C2998 +
            C26015 * C728 - C26246 * C618 - C26015 * C916 + C25936 * C1012) *
               C29484 * C29390 * C29439 * C1508) *
              C1509 +
          ((C26015 * C729 - C26246 * C617 - C26015 * C917 + C25936 * C1011 +
            C26016 * C2672 - C26247 * C2554 - C26016 * C2890 + C25937 * C2999 +
            C26017 * C4255 - C26248 * C4143 - C26017 * C4467 + C25938 * C4573) *
               C29484 * C29390 * C29439 * C1508 -
           (C26017 * C1173 - C26248 * C1061 - C26017 * C1361 + C25938 * C1455 +
            C26016 * C1170 - C26247 * C1058 - C26016 * C1358 + C25937 * C1452 +
            C26015 * C216 - C26246 * C94 - C26015 * C444 + C25936 * C546) *
               C29484 * C29390 * C29439 * C1507) *
              C1510)) /
        (p * q * std::sqrt(p + q));
    d2eexx[41] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C13361 * C98 - C13362 * C93 - C13361 * C99 + C29390 * C108) *
                C25936 +
            C16920 * C25937 + C16922 * C25938) *
               C29484 * C2031 -
           (C26640 * C25938 + C16922 * C25937 + C16920 * C25936) * C29484 *
               C2032) *
              C1507 +
          ((C15452 * C25936 + C16921 * C25937 +
            (C13361 * C16898 - C13362 * C16897 - C13361 * C16899 +
             C29390 * C16900) *
                C25938) *
               C29484 * C2032 -
           (C16921 * C25938 + C15452 * C25937 + C13734 * C25936) * C29484 *
               C2031) *
              C1508) *
         C29413) /
        (p * q * std::sqrt(p + q));
    d2eexy[41] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C29484 * C152 - C151 * C93) * C13361 +
             (C29484 * C157 - C151 * C99) * C29390) *
                C25936 +
            ((C7627 - C7628) * C13361 + (C7629 - C7630) * C29390) * C25937 +
            C26689 * C25938) *
               C2031 +
           (((C7628 - C7627) * C13361 + (C7630 - C7629) * C29390) * C25936 +
            ((C7631 - C7632) * C13361 + (C7633 - C7634) * C29390) * C25937 +
            ((C26683 - C26684) * C13361 + (C26685 - C26686) * C29390) *
                C25938) *
               C2032) *
              C1507 +
          ((((C151 * C618 - C29484 * C678) * C13361 +
             (C151 * C627 - C29484 * C684) * C29390) *
                C25936 +
            ((C9483 - C9484) * C13361 + (C9485 - C9486) * C29390) * C25937 +
            ((C28006 - C28007) * C13361 + (C28008 - C28009) * C29390) *
                C25938) *
               C2031 +
           (((C9484 - C9483) * C13361 + (C9486 - C9485) * C29390) * C25936 +
            ((C28007 - C28006) * C13361 + (C28009 - C28008) * C29390) * C25937 +
            ((C29484 * C16972 - C151 * C16897) * C13361 +
             (C29484 * C16973 - C151 * C16899) * C29390) *
                C25938) *
               C2032) *
              C1508) *
         C29413) /
        (p * q * std::sqrt(p + q));
    d2eexz[41] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C25936 * C215 - C26015 * C93 + C25937 * C1169 -
                       C26016 * C1059 + C25938 * C1172 - C26017 * C1060) *
                          C13361 +
                      (C25936 * C220 - C26015 * C99 + C25937 * C1175 -
                       C26016 * C1068 + C25938 * C1178 - C26017 * C1070) *
                          C29390) *
                         C29484 * C2031 +
                     ((C26015 * C1059 - C25936 * C1169 + C26016 * C1060 -
                       C25937 * C1172 + C26017 * C7536 - C25938 * C7688) *
                          C13361 +
                      (C26015 * C1068 - C25936 * C1175 + C26016 * C1070 -
                       C25937 * C1178 + C26017 * C7539 - C25938 * C7690) *
                          C29390) *
                         C29484 * C2032) *
                        C1507 +
                    (((C26015 * C618 - C25936 * C728 + C26016 * C2553 -
                       C25937 * C2671 + C26017 * C4142 - C25938 * C4254) *
                          C13361 +
                      (C26015 * C627 - C25936 * C734 + C26016 * C2557 -
                       C25937 * C2674 + C26017 * C4145 - C25938 * C4256) *
                          C29390) *
                         C29484 * C2031 +
                     ((C25936 * C2671 - C26015 * C2553 + C25937 * C4254 -
                       C26016 * C4142 + C25938 * C17040 - C26017 * C16897) *
                          C13361 +
                      (C25936 * C2674 - C26015 * C2557 + C25937 * C4256 -
                       C26016 * C4145 + C25938 * C17041 - C26017 * C16899) *
                          C29390) *
                         C29484 * C2032) *
                        C1508) *
                   C29413) /
                  (p * q * std::sqrt(p + q));
    d2eeyx[41] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C29390 * C98 - C13361 * C93) * C151 +
             (C29390 * C282 - C13361 * C277) * C29484) *
                C25936 +
            ((C17095 - C17096) * C151 + (C17097 - C17098) * C29484) * C25937 +
            C26778 * C25938) *
               C2031 +
           (((C17096 - C17095) * C151 + (C17098 - C17097) * C29484) * C25936 +
            ((C17099 - C17100) * C151 + (C17101 - C17102) * C29484) * C25937 +
            ((C26772 - C26773) * C151 + (C26774 - C26775) * C29484) * C25938) *
               C2032) *
              C1507 +
          ((((C13870 - C13869) * C151 + (C13872 - C13871) * C29484) * C25936 +
            (C18905 * C151 + C18906 * C29484) * C25937 +
            ((C17103 - C17104) * C151 + (C17105 - C17106) * C29484) * C25938) *
               C2031 +
           ((C18903 * C151 + C18904 * C29484) * C25936 +
            ((C17104 - C17103) * C151 + (C17106 - C17105) * C29484) * C25937 +
            ((C29390 * C16898 - C13361 * C16897) * C151 +
             (C29390 * C17093 - C13361 * C17092) * C29484) *
                C25938) *
               C2032) *
              C1508) *
         C29413) /
        (p * q * std::sqrt(p + q));
    d2eeyy[41] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C151 * C152 - C325 * C93 - C151 * C277 + C29484 * C326) * C29390 *
                C25936 +
            C26818 * C25937 + C26819 * C25938) *
               C2031 -
           (C26827 * C25938 + C26819 * C25937 + C26818 * C25936) * C2032) *
              C1507 +
          ((C28160 * C25936 + C28168 * C25937 +
            (C151 * C16972 - C325 * C16897 - C151 * C17092 + C29484 * C17156) *
                C29390 * C25938) *
               C2032 -
           (C28168 * C25938 + C28160 * C25937 +
            (C151 * C678 - C325 * C618 - C151 * C778 + C29484 * C830) * C29390 *
                C25936) *
               C2031) *
              C1508) *
         C29413) /
        (p * q * std::sqrt(p + q));
    d2eeyz[41] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C25936 * C215 - C26015 * C93 + C25937 * C1169 -
                       C26016 * C1059 + C25938 * C1172 - C26017 * C1060) *
                          C151 +
                      (C25936 * C390 - C26015 * C277 + C25937 * C1313 -
                       C26016 * C1219 + C25938 * C1316 - C26017 * C1222) *
                          C29484) *
                         C29390 * C2031 +
                     ((C26015 * C1059 - C25936 * C1169 + C26016 * C1060 -
                       C25937 * C1172 + C26017 * C7536 - C25938 * C7688) *
                          C151 +
                      (C26015 * C1219 - C25936 * C1313 + C26016 * C1222 -
                       C25937 * C1316 + C26017 * C7742 - C25938 * C7889) *
                          C29484) *
                         C29390 * C2032) *
                        C1507 +
                    (((C26015 * C618 - C25936 * C728 + C26016 * C2553 -
                       C25937 * C2671 + C26017 * C4142 - C25938 * C4254) *
                          C151 +
                      (C26015 * C778 - C25936 * C872 + C26016 * C2727 -
                       C25937 * C2836 + C26017 * C4308 - C25938 * C4414) *
                          C29484) *
                         C29390 * C2031 +
                     ((C25936 * C2671 - C26015 * C2553 + C25937 * C4254 -
                       C26016 * C4142 + C25938 * C17040 - C26017 * C16897) *
                          C151 +
                      (C25936 * C2836 - C26015 * C2727 + C25937 * C4414 -
                       C26016 * C4308 + C25938 * C17235 - C26017 * C17092) *
                          C29484) *
                         C29390 * C2032) *
                        C1508) *
                   C29413) /
                  (p * q * std::sqrt(p + q));
    d2eezx[41] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C29390 * C98 - C13361 * C93) * C26015 +
                      (C29390 * C448 - C13361 * C443) * C25936 +
                      (C17095 - C17096) * C26016 + (C17289 - C17290) * C25937 +
                      C26770 * C26017 + C26907 * C25938) *
                         C29484 * C2031 +
                     ((C17096 - C17095) * C26015 + (C17290 - C17289) * C25936 +
                      (C17099 - C17100) * C26016 + (C17291 - C17292) * C25937 +
                      (C26772 - C26773) * C26017 + (C26908 - C26909) * C25938) *
                         C29484 * C2032) *
                        C1507 +
                    (((C13870 - C13869) * C26015 + (C14005 - C14004) * C25936 +
                      C18905 * C26016 + C19124 * C25937 +
                      (C17103 - C17104) * C26017 + (C17293 - C17294) * C25938) *
                         C29484 * C2031 +
                     (C18903 * C26015 + C19123 * C25936 +
                      (C17104 - C17103) * C26016 + (C17294 - C17293) * C25937 +
                      (C29390 * C16898 - C13361 * C16897) * C26017 +
                      (C29390 * C17287 - C13361 * C17286) * C25938) *
                         C29484 * C2032) *
                        C1508) *
                   C29413) /
                  (p * q * std::sqrt(p + q));
    d2eezy[41] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C29484 * C152 - C151 * C93) * C26015 +
            (C29484 * C491 - C151 * C443) * C25936 + (C7627 - C7628) * C26016 +
            (C8006 - C8007) * C25937 + C26681 * C26017 + C26949 * C25938) *
               C29390 * C2031 +
           ((C7628 - C7627) * C26015 + (C8007 - C8006) * C25936 +
            (C7631 - C7632) * C26016 + (C8008 - C8009) * C25937 +
            (C26683 - C26684) * C26017 + (C26950 - C26951) * C25938) *
               C29390 * C2032) *
              C1507 +
          (((C151 * C618 - C29484 * C678) * C26015 +
            (C151 * C916 - C29484 * C966) * C25936 + (C9483 - C9484) * C26016 +
            (C9892 - C9893) * C25937 + (C28006 - C28007) * C26017 +
            (C28319 - C28320) * C25938) *
               C29390 * C2031 +
           ((C9484 - C9483) * C26015 + (C9893 - C9892) * C25936 +
            (C28007 - C28006) * C26016 + (C28320 - C28319) * C25937 +
            (C29484 * C16972 - C151 * C16897) * C26017 +
            (C29484 * C17344 - C151 * C17286) * C25938) *
               C29390 * C2032) *
              C1508) *
         C29413) /
        (p * q * std::sqrt(p + q));
    d2eezz[41] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C26015 * C215 - C26246 * C93 - C26015 * C443 + C25936 * C545 +
            C26016 * C1169 - C26247 * C1059 - C26016 * C1357 + C25937 * C1453 +
            C26017 * C1172 - C26248 * C1060 - C26017 * C1360 + C25938 * C1454) *
               C29484 * C29390 * C2031 -
           (C26017 * C7688 - C26248 * C7536 - C26017 * C7941 + C25938 * C8061 +
            C26016 * C1172 - C26247 * C1060 - C26016 * C1360 + C25937 * C1454 +
            C26015 * C1169 - C26246 * C1059 - C26015 * C1357 + C25936 * C1453) *
               C29484 * C29390 * C2032) *
              C1507 +
          ((C26015 * C2671 - C26246 * C2553 - C26015 * C2889 + C25936 * C2998 +
            C26016 * C4254 - C26247 * C4142 - C26016 * C4466 + C25937 * C4572 +
            C26017 * C17040 - C26248 * C16897 - C26017 * C17286 +
            C25938 * C17403) *
               C29484 * C29390 * C2032 -
           (C26017 * C4254 - C26248 * C4142 - C26017 * C4466 + C25938 * C4572 +
            C26016 * C2671 - C26247 * C2553 - C26016 * C2889 + C25937 * C2998 +
            C26015 * C728 - C26246 * C618 - C26015 * C916 + C25936 * C1012) *
               C29484 * C29390 * C2031) *
              C1508) *
         C29413) /
        (p * q * std::sqrt(p + q));
    d2eexx[42] +=
        (-std::pow(Pi, 2.5) *
         (((C13361 * C98 - C13362 * C93 - C13361 * C99 + C29390 * C108) *
               C25936 +
           C16920 * C25937 + C16922 * C25938) *
              C29484 * C29439 * C612 -
          (C16921 * C25938 + C15452 * C25937 + C13734 * C25936) * C29484 *
              C29439 * C613 +
          (C13735 * C25936 + C15451 * C25937 +
           (C13361 * C14137 - C13362 * C14136 - C13361 * C14138 +
            C29390 * C14139) *
               C25938) *
              C29484 * C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C13361 * C98 - C13362 * C93 - C13361 * C99 + C29390 * C108) *
               C25936 +
           C16920 * C25937 + C16922 * C25938) *
              C29484 * C29439 * C29425 * C84 -
          ((C13361 * C1071 - C13362 * C1061 - C13361 * C1072 + C29390 * C1079) *
               C25938 +
           C18086 * C25937 +
           (C13361 * C100 - C13362 * C94 - C13361 * C101 + C29390 * C109) *
               C25936) *
              C29484 * C29439 * C29425 * C85 +
          ((C13361 * C102 - C13362 * C95 - C13361 * C103 + C29390 * C110) *
               C25936 +
           (C13361 * C1063 - C13362 * C1057 - C13361 * C1064 + C29390 * C1075) *
               C25937 +
           (C13361 * C1073 - C13362 * C1062 - C13361 * C1074 + C29390 * C1080) *
               C25938) *
              C29484 * C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C13361 * C98 - C13362 * C93 - C13361 * C99 + C29390 * C108) *
               C25936 +
           C16920 * C25937 + C16922 * C25938) *
              C29484 * C1054 -
          (C26640 * C25938 + C16922 * C25937 + C16920 * C25936) * C29484 *
              C1055 +
          (C16922 * C25936 + C26640 * C25937 +
           (C13361 * C26630 - C13362 * C26629 - C13361 * C26631 +
            C29390 * C26632) *
               C25938) *
              C29484 * C1056) *
         C29425 * C29413) /
            (p * q * std::sqrt(p + q));
    d2eexy[42] +=
        (-std::pow(Pi, 2.5) *
         ((((C29484 * C152 - C151 * C93) * C13361 +
            (C29484 * C157 - C151 * C99) * C29390) *
               C25936 +
           ((C7627 - C7628) * C13361 + (C7629 - C7630) * C29390) * C25937 +
           ((C7632 - C7631) * C13361 + (C7634 - C7633) * C29390) * C25938) *
              C29439 * C612 +
          (((C151 * C618 - C29484 * C678) * C13361 +
            (C151 * C627 - C29484 * C684) * C29390) *
               C25936 +
           ((C9483 - C9484) * C13361 + (C9485 - C9486) * C29390) * C25937 +
           ((C151 * C4142 - C29484 * C4200) * C13361 +
            (C151 * C4145 - C29484 * C4202) * C29390) *
               C25938) *
              C29439 * C613 +
          (((C29484 * C681 - C151 * C619) * C13361 +
            (C29484 * C687 - C151 * C629) * C29390) *
               C25936 +
           ((C29484 * C6017 - C151 * C5929) * C13361 +
            (C29484 * C6019 - C151 * C5932) * C29390) *
               C25937 +
           ((C29484 * C14178 - C151 * C14136) * C13361 +
            (C29484 * C14179 - C151 * C14138) * C29390) *
               C25938) *
              C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C29484 * C152 - C151 * C93) * C13361 +
            (C29484 * C157 - C151 * C99) * C29390) *
               C25936 +
           ((C7627 - C7628) * C13361 + (C7629 - C7630) * C29390) * C25937 +
           ((C7632 - C7631) * C13361 + (C7634 - C7633) * C29390) * C25938) *
              C29439 * C29425 * C84 +
          (((C164 - C163) * C13361 + (C166 - C165) * C29390) * C25936 +
           (C8845 * C13361 + C8846 * C29390) * C25937 +
           ((C7635 - C7636) * C13361 + (C7637 - C7638) * C29390) * C25938) *
              C29439 * C29425 * C85 +
          ((C175 * C13361 + C176 * C29390) * C25936 +
           ((C2095 - C2094) * C13361 + (C2097 - C2096) * C29390) * C25937 +
           ((C29484 * C1124 - C151 * C1062) * C13361 +
            (C29484 * C1130 - C151 * C1074) * C29390) *
               C25938) *
              C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C29484 * C152 - C151 * C93) * C13361 +
            (C29484 * C157 - C151 * C99) * C29390) *
               C25936 +
           ((C7627 - C7628) * C13361 + (C7629 - C7630) * C29390) * C25937 +
           C26689 * C25938) *
              C1054 +
          (((C7628 - C7627) * C13361 + (C7630 - C7629) * C29390) * C25936 +
           ((C7631 - C7632) * C13361 + (C7633 - C7634) * C29390) * C25937 +
           ((C26683 - C26684) * C13361 + (C26685 - C26686) * C29390) * C25938) *
              C1055 +
          (C26689 * C25936 +
           ((C26684 - C26683) * C13361 + (C26686 - C26685) * C29390) * C25937 +
           ((C29484 * C26678 - C151 * C26629) * C13361 +
            (C29484 * C26679 - C151 * C26631) * C29390) *
               C25938) *
              C1056) *
         C29425 * C29413) /
            (p * q * std::sqrt(p + q));
    d2eexz[42] += (-std::pow(Pi, 2.5) *
                   (((C25936 * C215 - C26015 * C93 + C25937 * C1169 -
                      C26016 * C1059 + C25938 * C1172 - C26017 * C1060) *
                         C13361 +
                     (C25936 * C220 - C26015 * C99 + C25937 * C1175 -
                      C26016 * C1068 + C25938 * C1178 - C26017 * C1070) *
                         C29390) *
                        C29484 * C29439 * C612 +
                    ((C26015 * C618 - C25936 * C728 + C26016 * C2553 -
                      C25937 * C2671 + C26017 * C4142 - C25938 * C4254) *
                         C13361 +
                     (C26015 * C627 - C25936 * C734 + C26016 * C2557 -
                      C25937 * C2674 + C26017 * C4145 - C25938 * C4256) *
                         C29390) *
                        C29484 * C29439 * C613 +
                    ((C25936 * C731 - C26015 * C619 + C25937 * C6087 -
                      C26016 * C5929 + C25938 * C14218 - C26017 * C14136) *
                         C13361 +
                     (C25936 * C737 - C26015 * C629 + C25937 * C6089 -
                      C26016 * C5932 + C25938 * C14219 - C26017 * C14138) *
                         C29390) *
                        C29484 * C29439 * C614) *
                   C29413) /
                      (p * q * std::sqrt(p + q)) -
                  (std::pow(Pi, 2.5) *
                   (((C25936 * C215 - C26015 * C93 + C25937 * C1169 -
                      C26016 * C1059 + C25938 * C1172 - C26017 * C1060) *
                         C13361 +
                     (C25936 * C220 - C26015 * C99 + C25937 * C1175 -
                      C26016 * C1068 + C25938 * C1178 - C26017 * C1070) *
                         C29390) *
                        C29484 * C29439 * C29425 * C84 +
                    ((C26015 * C94 - C25936 * C216 + C26016 * C1058 -
                      C25937 * C1170 + C26017 * C1061 - C25938 * C1173) *
                         C13361 +
                     (C26015 * C101 - C25936 * C221 + C26016 * C1066 -
                      C25937 * C1176 + C26017 * C1072 - C25938 * C1179) *
                         C29390) *
                        C29484 * C29439 * C29425 * C85 +
                    ((C25936 * C217 - C26015 * C95 + C25937 * C1171 -
                      C26016 * C1057 + C25938 * C1174 - C26017 * C1062) *
                         C13361 +
                     (C25936 * C222 - C26015 * C103 + C25937 * C1177 -
                      C26016 * C1064 + C25938 * C1180 - C26017 * C1074) *
                         C29390) *
                        C29484 * C29439 * C29425 * C86)) /
                      (p * q * std::sqrt(p + q)) +
                  (2 * std::pow(Pi, 2.5) *
                   (((C25936 * C215 - C26015 * C93 + C25937 * C1169 -
                      C26016 * C1059 + C25938 * C1172 - C26017 * C1060) *
                         C13361 +
                     (C25936 * C220 - C26015 * C99 + C25937 * C1175 -
                      C26016 * C1068 + C25938 * C1178 - C26017 * C1070) *
                         C29390) *
                        C29484 * C1054 +
                    ((C26015 * C1059 - C25936 * C1169 + C26016 * C1060 -
                      C25937 * C1172 + C26017 * C7536 - C25938 * C7688) *
                         C13361 +
                     (C26015 * C1068 - C25936 * C1175 + C26016 * C1070 -
                      C25937 * C1178 + C26017 * C7539 - C25938 * C7690) *
                         C29390) *
                        C29484 * C1055 +
                    ((C25936 * C1172 - C26015 * C1060 + C25937 * C7688 -
                      C26016 * C7536 + C25938 * C26727 - C26017 * C26629) *
                         C13361 +
                     (C25936 * C1178 - C26015 * C1070 + C25937 * C7690 -
                      C26016 * C7539 + C25938 * C26728 - C26017 * C26631) *
                         C29390) *
                        C29484 * C1056) *
                   C29425 * C29413) /
                      (p * q * std::sqrt(p + q));
    d2eeyx[42] +=
        (-std::pow(Pi, 2.5) *
         ((((C29390 * C98 - C13361 * C93) * C151 +
            (C29390 * C282 - C13361 * C277) * C29484) *
               C25936 +
           ((C17095 - C17096) * C151 + (C17097 - C17098) * C29484) * C25937 +
           ((C17100 - C17099) * C151 + (C17102 - C17101) * C29484) * C25938) *
              C29439 * C612 +
          (((C13870 - C13869) * C151 + (C13872 - C13871) * C29484) * C25936 +
           (C18905 * C151 + C18906 * C29484) * C25937 +
           ((C17103 - C17104) * C151 + (C17105 - C17106) * C29484) * C25938) *
              C29439 * C613 +
          ((C13881 * C151 + C13882 * C29484) * C25936 +
           ((C15620 - C15619) * C151 + (C15622 - C15621) * C29484) * C25937 +
           ((C29390 * C14137 - C13361 * C14136) * C151 +
            (C29390 * C14259 - C13361 * C14258) * C29484) *
               C25938) *
              C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C29390 * C98 - C13361 * C93) * C151 +
            (C29390 * C282 - C13361 * C277) * C29484) *
               C25936 +
           ((C17095 - C17096) * C151 + (C17097 - C17098) * C29484) * C25937 +
           ((C17100 - C17099) * C151 + (C17102 - C17101) * C29484) * C25938) *
              C29439 * C29425 * C84 +
          (((C13361 * C94 - C29390 * C100) * C151 +
            (C13361 * C278 - C29390 * C283) * C29484) *
               C25936 +
           ((C18285 - C18286) * C151 + (C18287 - C18288) * C29484) * C25937 +
           ((C13361 * C1061 - C29390 * C1071) * C151 +
            (C13361 * C1223 - C29390 * C1229) * C29484) *
               C25938) *
              C29439 * C29425 * C85 +
          (((C29390 * C102 - C13361 * C95) * C151 +
            (C29390 * C284 - C13361 * C279) * C29484) *
               C25936 +
           ((C29390 * C1063 - C13361 * C1057) * C151 +
            (C29390 * C1227 - C13361 * C1221) * C29484) *
               C25937 +
           ((C29390 * C1073 - C13361 * C1062) * C151 +
            (C29390 * C1230 - C13361 * C1224) * C29484) *
               C25938) *
              C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C29390 * C98 - C13361 * C93) * C151 +
            (C29390 * C282 - C13361 * C277) * C29484) *
               C25936 +
           ((C17095 - C17096) * C151 + (C17097 - C17098) * C29484) * C25937 +
           C26778 * C25938) *
              C1054 +
          (((C17096 - C17095) * C151 + (C17098 - C17097) * C29484) * C25936 +
           ((C17099 - C17100) * C151 + (C17101 - C17102) * C29484) * C25937 +
           ((C26772 - C26773) * C151 + (C26774 - C26775) * C29484) * C25938) *
              C1055 +
          (C26778 * C25936 +
           ((C26773 - C26772) * C151 + (C26775 - C26774) * C29484) * C25937 +
           ((C29390 * C26630 - C13361 * C26629) * C151 +
            (C29390 * C26768 - C13361 * C26767) * C29484) *
               C25938) *
              C1056) *
         C29425 * C29413) /
            (p * q * std::sqrt(p + q));
    d2eeyy[42] +=
        (-std::pow(Pi, 2.5) *
         (((C151 * C152 - C325 * C93 - C151 * C277 + C29484 * C326) * C29390 *
               C25936 +
           C7834 * C29390 * C25937 + C7836 * C29390 * C25938) *
              C29439 * C612 -
          ((C151 * C4200 - C325 * C4142 - C151 * C4308 + C29484 * C4362) *
               C29390 * C25938 +
           C9692 * C29390 * C25937 +
           (C151 * C678 - C325 * C618 - C151 * C778 + C29484 * C830) * C29390 *
               C25936) *
              C29439 * C613 +
          ((C151 * C681 - C325 * C619 - C151 * C781 + C29484 * C831) * C29390 *
               C25936 +
           (C151 * C6017 - C325 * C5929 - C151 * C6161 + C29484 * C6239) *
               C29390 * C25937 +
           (C151 * C14178 - C325 * C14136 - C151 * C14258 + C29484 * C14298) *
               C29390 * C25938) *
              C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C151 * C152 - C325 * C93 - C151 * C277 + C29484 * C326) * C29390 *
               C25936 +
           C7834 * C29390 * C25937 + C7836 * C29390 * C25938) *
              C29439 * C29425 * C84 -
          (C7835 * C29390 * C25938 + C2274 * C29390 * C25937 +
           C350 * C29390 * C25936) *
              C29439 * C29425 * C85 +
          (C351 * C29390 * C25936 + C2273 * C29390 * C25937 +
           (C151 * C1124 - C325 * C1062 - C151 * C1224 + C29484 * C1274) *
               C29390 * C25938) *
              C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C151 * C152 - C325 * C93 - C151 * C277 + C29484 * C326) * C29390 *
               C25936 +
           C26818 * C25937 + C26819 * C25938) *
              C1054 -
          (C26827 * C25938 + C26819 * C25937 + C26818 * C25936) * C1055 +
          (C26819 * C25936 + C26827 * C25937 +
           (C151 * C26678 - C325 * C26629 - C151 * C26767 + C29484 * C26816) *
               C29390 * C25938) *
              C1056) *
         C29425 * C29413) /
            (p * q * std::sqrt(p + q));
    d2eeyz[42] += (-std::pow(Pi, 2.5) *
                   (((C25936 * C215 - C26015 * C93 + C25937 * C1169 -
                      C26016 * C1059 + C25938 * C1172 - C26017 * C1060) *
                         C151 +
                     (C25936 * C390 - C26015 * C277 + C25937 * C1313 -
                      C26016 * C1219 + C25938 * C1316 - C26017 * C1222) *
                         C29484) *
                        C29390 * C29439 * C612 +
                    ((C26015 * C618 - C25936 * C728 + C26016 * C2553 -
                      C25937 * C2671 + C26017 * C4142 - C25938 * C4254) *
                         C151 +
                     (C26015 * C778 - C25936 * C872 + C26016 * C2727 -
                      C25937 * C2836 + C26017 * C4308 - C25938 * C4414) *
                         C29484) *
                        C29390 * C29439 * C613 +
                    ((C25936 * C731 - C26015 * C619 + C25937 * C6087 -
                      C26016 * C5929 + C25938 * C14218 - C26017 * C14136) *
                         C151 +
                     (C25936 * C875 - C26015 * C781 + C25937 * C6307 -
                      C26016 * C6161 + C25938 * C14337 - C26017 * C14258) *
                         C29484) *
                        C29390 * C29439 * C614) *
                   C29413) /
                      (p * q * std::sqrt(p + q)) -
                  (std::pow(Pi, 2.5) *
                   (((C25936 * C215 - C26015 * C93 + C25937 * C1169 -
                      C26016 * C1059 + C25938 * C1172 - C26017 * C1060) *
                         C151 +
                     (C25936 * C390 - C26015 * C277 + C25937 * C1313 -
                      C26016 * C1219 + C25938 * C1316 - C26017 * C1222) *
                         C29484) *
                        C29390 * C29439 * C29425 * C84 +
                    ((C26015 * C94 - C25936 * C216 + C26016 * C1058 -
                      C25937 * C1170 + C26017 * C1061 - C25938 * C1173) *
                         C151 +
                     (C26015 * C278 - C25936 * C391 + C26016 * C1220 -
                      C25937 * C1314 + C26017 * C1223 - C25938 * C1317) *
                         C29484) *
                        C29390 * C29439 * C29425 * C85 +
                    ((C25936 * C217 - C26015 * C95 + C25937 * C1171 -
                      C26016 * C1057 + C25938 * C1174 - C26017 * C1062) *
                         C151 +
                     (C25936 * C392 - C26015 * C279 + C25937 * C1315 -
                      C26016 * C1221 + C25938 * C1318 - C26017 * C1224) *
                         C29484) *
                        C29390 * C29439 * C29425 * C86)) /
                      (p * q * std::sqrt(p + q)) +
                  (2 * std::pow(Pi, 2.5) *
                   (((C25936 * C215 - C26015 * C93 + C25937 * C1169 -
                      C26016 * C1059 + C25938 * C1172 - C26017 * C1060) *
                         C151 +
                     (C25936 * C390 - C26015 * C277 + C25937 * C1313 -
                      C26016 * C1219 + C25938 * C1316 - C26017 * C1222) *
                         C29484) *
                        C29390 * C1054 +
                    ((C26015 * C1059 - C25936 * C1169 + C26016 * C1060 -
                      C25937 * C1172 + C26017 * C7536 - C25938 * C7688) *
                         C151 +
                     (C26015 * C1219 - C25936 * C1313 + C26016 * C1222 -
                      C25937 * C1316 + C26017 * C7742 - C25938 * C7889) *
                         C29484) *
                        C29390 * C1055 +
                    ((C25936 * C1172 - C26015 * C1060 + C25937 * C7688 -
                      C26016 * C7536 + C25938 * C26727 - C26017 * C26629) *
                         C151 +
                     (C25936 * C1316 - C26015 * C1222 + C25937 * C7889 -
                      C26016 * C7742 + C25938 * C26865 - C26017 * C26767) *
                         C29484) *
                        C29390 * C1056) *
                   C29425 * C29413) /
                      (p * q * std::sqrt(p + q));
    d2eezx[42] += (-std::pow(Pi, 2.5) *
                   (((C29390 * C98 - C13361 * C93) * C26015 +
                     (C29390 * C448 - C13361 * C443) * C25936 +
                     (C17095 - C17096) * C26016 + (C17289 - C17290) * C25937 +
                     (C17100 - C17099) * C26017 + (C17292 - C17291) * C25938) *
                        C29484 * C29439 * C612 +
                    ((C13870 - C13869) * C26015 + (C14005 - C14004) * C25936 +
                     C18905 * C26016 + C19124 * C25937 +
                     (C17103 - C17104) * C26017 + (C17293 - C17294) * C25938) *
                        C29484 * C29439 * C613 +
                    (C13881 * C26015 + C14011 * C25936 +
                     (C15620 - C15619) * C26016 + (C15782 - C15781) * C25937 +
                     (C29390 * C14137 - C13361 * C14136) * C26017 +
                     (C29390 * C14377 - C13361 * C14376) * C25938) *
                        C29484 * C29439 * C614) *
                   C29413) /
                      (p * q * std::sqrt(p + q)) -
                  (std::pow(Pi, 2.5) *
                   (((C29390 * C98 - C13361 * C93) * C26015 +
                     (C29390 * C448 - C13361 * C443) * C25936 +
                     (C17095 - C17096) * C26016 + (C17289 - C17290) * C25937 +
                     (C17100 - C17099) * C26017 + (C17292 - C17291) * C25938) *
                        C29484 * C29439 * C29425 * C84 +
                    ((C13361 * C94 - C29390 * C100) * C26015 +
                     (C13361 * C444 - C29390 * C449) * C25936 +
                     (C18285 - C18286) * C26016 + (C18487 - C18488) * C25937 +
                     (C13361 * C1061 - C29390 * C1071) * C26017 +
                     (C13361 * C1361 - C29390 * C1367) * C25938) *
                        C29484 * C29439 * C29425 * C85 +
                    ((C29390 * C102 - C13361 * C95) * C26015 +
                     (C29390 * C450 - C13361 * C445) * C25936 +
                     (C29390 * C1063 - C13361 * C1057) * C26016 +
                     (C29390 * C1365 - C13361 * C1359) * C25937 +
                     (C29390 * C1073 - C13361 * C1062) * C26017 +
                     (C29390 * C1368 - C13361 * C1362) * C25938) *
                        C29484 * C29439 * C29425 * C86)) /
                      (p * q * std::sqrt(p + q)) +
                  (2 * std::pow(Pi, 2.5) *
                   (((C29390 * C98 - C13361 * C93) * C26015 +
                     (C29390 * C448 - C13361 * C443) * C25936 +
                     (C17095 - C17096) * C26016 + (C17289 - C17290) * C25937 +
                     C26770 * C26017 + C26907 * C25938) *
                        C29484 * C1054 +
                    ((C17096 - C17095) * C26015 + (C17290 - C17289) * C25936 +
                     (C17099 - C17100) * C26016 + (C17291 - C17292) * C25937 +
                     (C26772 - C26773) * C26017 + (C26908 - C26909) * C25938) *
                        C29484 * C1055 +
                    (C26770 * C26015 + C26907 * C25936 +
                     (C26773 - C26772) * C26016 + (C26909 - C26908) * C25937 +
                     (C29390 * C26630 - C13361 * C26629) * C26017 +
                     (C29390 * C26905 - C13361 * C26904) * C25938) *
                        C29484 * C1056) *
                   C29425 * C29413) /
                      (p * q * std::sqrt(p + q));
    d2eezy[42] +=
        (-std::pow(Pi, 2.5) *
         (((C29484 * C152 - C151 * C93) * C26015 +
           (C29484 * C491 - C151 * C443) * C25936 + (C7627 - C7628) * C26016 +
           (C8006 - C8007) * C25937 + (C7632 - C7631) * C26017 +
           (C8009 - C8008) * C25938) *
              C29390 * C29439 * C612 +
          ((C151 * C618 - C29484 * C678) * C26015 +
           (C151 * C916 - C29484 * C966) * C25936 + (C9483 - C9484) * C26016 +
           (C9892 - C9893) * C25937 + (C151 * C4142 - C29484 * C4200) * C26017 +
           (C151 * C4466 - C29484 * C4520) * C25938) *
              C29390 * C29439 * C613 +
          ((C29484 * C681 - C151 * C619) * C26015 +
           (C29484 * C969 - C151 * C919) * C25936 +
           (C29484 * C6017 - C151 * C5929) * C26016 +
           (C29484 * C6451 - C151 * C6377) * C25937 +
           (C29484 * C14178 - C151 * C14136) * C26017 +
           (C29484 * C14416 - C151 * C14376) * C25938) *
              C29390 * C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C29484 * C152 - C151 * C93) * C26015 +
           (C29484 * C491 - C151 * C443) * C25936 + (C7627 - C7628) * C26016 +
           (C8006 - C8007) * C25937 + (C7632 - C7631) * C26017 +
           (C8009 - C8008) * C25938) *
              C29390 * C29439 * C29425 * C84 +
          ((C164 - C163) * C26015 + (C498 - C497) * C25936 + C8845 * C26016 +
           C9270 * C25937 + (C7635 - C7636) * C26017 +
           (C8010 - C8011) * C25938) *
              C29390 * C29439 * C29425 * C85 +
          (C175 * C26015 + C504 * C25936 + (C2095 - C2094) * C26016 +
           (C2436 - C2435) * C25937 + (C29484 * C1124 - C151 * C1062) * C26017 +
           (C29484 * C1412 - C151 * C1362) * C25938) *
              C29390 * C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C29484 * C152 - C151 * C93) * C26015 +
           (C29484 * C491 - C151 * C443) * C25936 + (C7627 - C7628) * C26016 +
           (C8006 - C8007) * C25937 + C26681 * C26017 + C26949 * C25938) *
              C29390 * C1054 +
          ((C7628 - C7627) * C26015 + (C8007 - C8006) * C25936 +
           (C7631 - C7632) * C26016 + (C8008 - C8009) * C25937 +
           (C26683 - C26684) * C26017 + (C26950 - C26951) * C25938) *
              C29390 * C1055 +
          (C26681 * C26015 + C26949 * C25936 + (C26684 - C26683) * C26016 +
           (C26951 - C26950) * C25937 +
           (C29484 * C26678 - C151 * C26629) * C26017 +
           (C29484 * C26947 - C151 * C26904) * C25938) *
              C29390 * C1056) *
         C29425 * C29413) /
            (p * q * std::sqrt(p + q));
    d2eezz[42] +=
        (-std::pow(Pi, 2.5) *
         ((C26015 * C215 - C26246 * C93 - C26015 * C443 + C25936 * C545 +
           C26016 * C1169 - C26247 * C1059 - C26016 * C1357 + C25937 * C1453 +
           C26017 * C1172 - C26248 * C1060 - C26017 * C1360 + C25938 * C1454) *
              C29484 * C29390 * C29439 * C612 -
          (C26017 * C4254 - C26248 * C4142 - C26017 * C4466 + C25938 * C4572 +
           C26016 * C2671 - C26247 * C2553 - C26016 * C2889 + C25937 * C2998 +
           C26015 * C728 - C26246 * C618 - C26015 * C916 + C25936 * C1012) *
              C29484 * C29390 * C29439 * C613 +
          (C26015 * C731 - C26246 * C619 - C26015 * C919 + C25936 * C1013 +
           C26016 * C6087 - C26247 * C5929 - C26016 * C6377 + C25937 * C6519 +
           C26017 * C14218 - C26248 * C14136 - C26017 * C14376 +
           C25938 * C14455) *
              C29484 * C29390 * C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((C26015 * C215 - C26246 * C93 - C26015 * C443 + C25936 * C545 +
           C26016 * C1169 - C26247 * C1059 - C26016 * C1357 + C25937 * C1453 +
           C26017 * C1172 - C26248 * C1060 - C26017 * C1360 + C25938 * C1454) *
              C29484 * C29390 * C29439 * C29425 * C84 -
          (C26017 * C1173 - C26248 * C1061 - C26017 * C1361 + C25938 * C1455 +
           C26016 * C1170 - C26247 * C1058 - C26016 * C1358 + C25937 * C1452 +
           C26015 * C216 - C26246 * C94 - C26015 * C444 + C25936 * C546) *
              C29484 * C29390 * C29439 * C29425 * C85 +
          (C26015 * C217 - C26246 * C95 - C26015 * C445 + C25936 * C547 +
           C26016 * C1171 - C26247 * C1057 - C26016 * C1359 + C25937 * C1451 +
           C26017 * C1174 - C26248 * C1062 - C26017 * C1362 + C25938 * C1456) *
              C29484 * C29390 * C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((C26015 * C215 - C26246 * C93 - C26015 * C443 + C25936 * C545 +
           C26016 * C1169 - C26247 * C1059 - C26016 * C1357 + C25937 * C1453 +
           C26017 * C1172 - C26248 * C1060 - C26017 * C1360 + C25938 * C1454) *
              C29484 * C29390 * C1054 -
          (C26017 * C7688 - C26248 * C7536 - C26017 * C7941 + C25938 * C8061 +
           C26016 * C1172 - C26247 * C1060 - C26016 * C1360 + C25937 * C1454 +
           C26015 * C1169 - C26246 * C1059 - C26015 * C1357 + C25936 * C1453) *
              C29484 * C29390 * C1055 +
          (C26015 * C1172 - C26246 * C1060 - C26015 * C1360 + C25936 * C1454 +
           C26016 * C7688 - C26247 * C7536 - C26016 * C7941 + C25937 * C8061 +
           C26017 * C26727 - C26248 * C26629 - C26017 * C26904 +
           C25938 * C26989) *
              C29484 * C29390 * C1056) *
         C29425 * C29413) /
            (p * q * std::sqrt(p + q));
    d2eexx[43] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C13361 * C98 - C13362 * C93 - C13361 * C99 + C29390 * C108) *
                C25936 +
            C16920 * C25937 + C16922 * C25938) *
               C29484 * C2031 -
           (C26640 * C25938 + C16922 * C25937 + C16920 * C25936) * C29484 *
               C2032) *
              C29425 * C1509 +
          ((C18086 * C25936 + C27497 * C25937 +
            (C13361 * C7540 - C13362 * C7537 - C13361 * C7541 +
             C29390 * C7543) *
                C25938) *
               C29484 * C2032 -
           (C27497 * C25938 + C18086 * C25937 +
            (C13361 * C100 - C13362 * C94 - C13361 * C101 + C29390 * C109) *
                C25936) *
               C29484 * C2031) *
              C29425 * C1510)) /
        (p * q * std::sqrt(p + q));
    d2eexy[43] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C29484 * C152 - C151 * C93) * C13361 +
             (C29484 * C157 - C151 * C99) * C29390) *
                C25936 +
            ((C7627 - C7628) * C13361 + (C7629 - C7630) * C29390) * C25937 +
            C26689 * C25938) *
               C2031 +
           (((C7628 - C7627) * C13361 + (C7630 - C7629) * C29390) * C25936 +
            ((C7631 - C7632) * C13361 + (C7633 - C7634) * C29390) * C25937 +
            ((C26683 - C26684) * C13361 + (C26685 - C26686) * C29390) *
                C25938) *
               C2032) *
              C29425 * C1509 +
          ((((C164 - C163) * C13361 + (C166 - C165) * C29390) * C25936 +
            (C8845 * C13361 + C8846 * C29390) * C25937 +
            ((C7635 - C7636) * C13361 + (C7637 - C7638) * C29390) * C25938) *
               C2031 +
           ((C8843 * C13361 + C8844 * C29390) * C25936 +
            ((C7636 - C7635) * C13361 + (C7638 - C7637) * C29390) * C25937 +
            ((C29484 * C7623 - C151 * C7537) * C13361 +
             (C29484 * C7625 - C151 * C7541) * C29390) *
                C25938) *
               C2032) *
              C29425 * C1510)) /
        (p * q * std::sqrt(p + q));
    d2eexz[43] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C25936 * C215 - C26015 * C93 + C25937 * C1169 -
                       C26016 * C1059 + C25938 * C1172 - C26017 * C1060) *
                          C13361 +
                      (C25936 * C220 - C26015 * C99 + C25937 * C1175 -
                       C26016 * C1068 + C25938 * C1178 - C26017 * C1070) *
                          C29390) *
                         C29484 * C2031 +
                     ((C26015 * C1059 - C25936 * C1169 + C26016 * C1060 -
                       C25937 * C1172 + C26017 * C7536 - C25938 * C7688) *
                          C13361 +
                      (C26015 * C1068 - C25936 * C1175 + C26016 * C1070 -
                       C25937 * C1178 + C26017 * C7539 - C25938 * C7690) *
                          C29390) *
                         C29484 * C2032) *
                        C29425 * C1509 +
                    (((C26015 * C94 - C25936 * C216 + C26016 * C1058 -
                       C25937 * C1170 + C26017 * C1061 - C25938 * C1173) *
                          C13361 +
                      (C26015 * C101 - C25936 * C221 + C26016 * C1066 -
                       C25937 * C1176 + C26017 * C1072 - C25938 * C1179) *
                          C29390) *
                         C29484 * C2031 +
                     ((C25936 * C1170 - C26015 * C1058 + C25937 * C1173 -
                       C26016 * C1061 + C25938 * C7689 - C26017 * C7537) *
                          C13361 +
                      (C25936 * C1176 - C26015 * C1066 + C25937 * C1179 -
                       C26016 * C1072 + C25938 * C7691 - C26017 * C7541) *
                          C29390) *
                         C29484 * C2032) *
                        C29425 * C1510)) /
                  (p * q * std::sqrt(p + q));
    d2eeyx[43] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C29390 * C98 - C13361 * C93) * C151 +
             (C29390 * C282 - C13361 * C277) * C29484) *
                C25936 +
            ((C17095 - C17096) * C151 + (C17097 - C17098) * C29484) * C25937 +
            C26778 * C25938) *
               C2031 +
           (((C17096 - C17095) * C151 + (C17098 - C17097) * C29484) * C25936 +
            ((C17099 - C17100) * C151 + (C17101 - C17102) * C29484) * C25937 +
            ((C26772 - C26773) * C151 + (C26774 - C26775) * C29484) * C25938) *
               C2032) *
              C29425 * C1509 +
          ((((C13361 * C94 - C29390 * C100) * C151 +
             (C13361 * C278 - C29390 * C283) * C29484) *
                C25936 +
            ((C18285 - C18286) * C151 + (C18287 - C18288) * C29484) * C25937 +
            ((C27648 - C27649) * C151 + (C27650 - C27651) * C29484) * C25938) *
               C2031 +
           (((C18286 - C18285) * C151 + (C18288 - C18287) * C29484) * C25936 +
            ((C27649 - C27648) * C151 + (C27651 - C27650) * C29484) * C25937 +
            ((C29390 * C7540 - C13361 * C7537) * C151 +
             (C29390 * C7745 - C13361 * C7743) * C29484) *
                C25938) *
               C2032) *
              C29425 * C1510)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[43] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C151 * C152 - C325 * C93 - C151 * C277 + C29484 * C326) * C29390 *
                C25936 +
            C26818 * C25937 + C26819 * C25938) *
               C2031 -
           (C26827 * C25938 + C26819 * C25937 + C26818 * C25936) * C2032) *
              C29425 * C1509 +
          ((C27702 * C25936 + C27703 * C25937 +
            (C151 * C7623 - C325 * C7537 - C151 * C7743 + C29484 * C7813) *
                C29390 * C25938) *
               C2032 -
           (C27703 * C25938 + C27702 * C25937 + C350 * C29390 * C25936) *
               C2031) *
              C29425 * C1510)) /
        (p * q * std::sqrt(p + q));
    d2eeyz[43] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C25936 * C215 - C26015 * C93 + C25937 * C1169 -
                       C26016 * C1059 + C25938 * C1172 - C26017 * C1060) *
                          C151 +
                      (C25936 * C390 - C26015 * C277 + C25937 * C1313 -
                       C26016 * C1219 + C25938 * C1316 - C26017 * C1222) *
                          C29484) *
                         C29390 * C2031 +
                     ((C26015 * C1059 - C25936 * C1169 + C26016 * C1060 -
                       C25937 * C1172 + C26017 * C7536 - C25938 * C7688) *
                          C151 +
                      (C26015 * C1219 - C25936 * C1313 + C26016 * C1222 -
                       C25937 * C1316 + C26017 * C7742 - C25938 * C7889) *
                          C29484) *
                         C29390 * C2032) *
                        C29425 * C1509 +
                    (((C26015 * C94 - C25936 * C216 + C26016 * C1058 -
                       C25937 * C1170 + C26017 * C1061 - C25938 * C1173) *
                          C151 +
                      (C26015 * C278 - C25936 * C391 + C26016 * C1220 -
                       C25937 * C1314 + C26017 * C1223 - C25938 * C1317) *
                          C29484) *
                         C29390 * C2031 +
                     ((C25936 * C1170 - C26015 * C1058 + C25937 * C1173 -
                       C26016 * C1061 + C25938 * C7689 - C26017 * C7537) *
                          C151 +
                      (C25936 * C1314 - C26015 * C1220 + C25937 * C1317 -
                       C26016 * C1223 + C25938 * C7890 - C26017 * C7743) *
                          C29484) *
                         C29390 * C2032) *
                        C29425 * C1510)) /
                  (p * q * std::sqrt(p + q));
    d2eezx[43] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C29390 * C98 - C13361 * C93) * C26015 +
                      (C29390 * C448 - C13361 * C443) * C25936 +
                      (C17095 - C17096) * C26016 + (C17289 - C17290) * C25937 +
                      C26770 * C26017 + C26907 * C25938) *
                         C29484 * C2031 +
                     ((C17096 - C17095) * C26015 + (C17290 - C17289) * C25936 +
                      (C17099 - C17100) * C26016 + (C17291 - C17292) * C25937 +
                      (C26772 - C26773) * C26017 + (C26908 - C26909) * C25938) *
                         C29484 * C2032) *
                        C29425 * C1509 +
                    (((C13361 * C94 - C29390 * C100) * C26015 +
                      (C13361 * C444 - C29390 * C449) * C25936 +
                      (C18285 - C18286) * C26016 + (C18487 - C18488) * C25937 +
                      (C27648 - C27649) * C26017 + (C27804 - C27805) * C25938) *
                         C29484 * C2031 +
                     ((C18286 - C18285) * C26015 + (C18488 - C18487) * C25936 +
                      (C27649 - C27648) * C26016 + (C27805 - C27804) * C25937 +
                      (C29390 * C7540 - C13361 * C7537) * C26017 +
                      (C29390 * C7944 - C13361 * C7942) * C25938) *
                         C29484 * C2032) *
                        C29425 * C1510)) /
                  (p * q * std::sqrt(p + q));
    d2eezy[43] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C29484 * C152 - C151 * C93) * C26015 +
            (C29484 * C491 - C151 * C443) * C25936 + (C7627 - C7628) * C26016 +
            (C8006 - C8007) * C25937 + C26681 * C26017 + C26949 * C25938) *
               C29390 * C2031 +
           ((C7628 - C7627) * C26015 + (C8007 - C8006) * C25936 +
            (C7631 - C7632) * C26016 + (C8008 - C8009) * C25937 +
            (C26683 - C26684) * C26017 + (C26950 - C26951) * C25938) *
               C29390 * C2032) *
              C29425 * C1509 +
          (((C164 - C163) * C26015 + (C498 - C497) * C25936 + C8845 * C26016 +
            C9270 * C25937 + (C7635 - C7636) * C26017 +
            (C8010 - C8011) * C25938) *
               C29390 * C2031 +
           (C8843 * C26015 + C9269 * C25936 + (C7636 - C7635) * C26016 +
            (C8011 - C8010) * C25937 +
            (C29484 * C7623 - C151 * C7537) * C26017 +
            (C29484 * C8004 - C151 * C7942) * C25938) *
               C29390 * C2032) *
              C29425 * C1510)) /
        (p * q * std::sqrt(p + q));
    d2eezz[43] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C26015 * C215 - C26246 * C93 - C26015 * C443 + C25936 * C545 +
            C26016 * C1169 - C26247 * C1059 - C26016 * C1357 + C25937 * C1453 +
            C26017 * C1172 - C26248 * C1060 - C26017 * C1360 + C25938 * C1454) *
               C29484 * C29390 * C2031 -
           (C26017 * C7688 - C26248 * C7536 - C26017 * C7941 + C25938 * C8061 +
            C26016 * C1172 - C26247 * C1060 - C26016 * C1360 + C25937 * C1454 +
            C26015 * C1169 - C26246 * C1059 - C26015 * C1357 + C25936 * C1453) *
               C29484 * C29390 * C2032) *
              C29425 * C1509 +
          ((C26015 * C1170 - C26246 * C1058 - C26015 * C1358 + C25936 * C1452 +
            C26016 * C1173 - C26247 * C1061 - C26016 * C1361 + C25937 * C1455 +
            C26017 * C7689 - C26248 * C7537 - C26017 * C7942 + C25938 * C8062) *
               C29484 * C29390 * C2032 -
           (C26017 * C1173 - C26248 * C1061 - C26017 * C1361 + C25938 * C1455 +
            C26016 * C1170 - C26247 * C1058 - C26016 * C1358 + C25937 * C1452 +
            C26015 * C216 - C26246 * C94 - C26015 * C444 + C25936 * C546) *
               C29484 * C29390 * C2031) *
              C29425 * C1510)) /
        (p * q * std::sqrt(p + q));
    d2eexx[44] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C13361 * C98 - C13362 * C93 - C13361 * C99 + C29390 * C108) *
               C25936 +
           C16920 * C25937 + C16922 * C25938) *
              C29484 * C29439 * C29425 * C84 -
          ((C13361 * C1071 - C13362 * C1061 - C13361 * C1072 + C29390 * C1079) *
               C25938 +
           C18086 * C25937 +
           (C13361 * C100 - C13362 * C94 - C13361 * C101 + C29390 * C109) *
               C25936) *
              C29484 * C29439 * C29425 * C85 +
          ((C13361 * C102 - C13362 * C95 - C13361 * C103 + C29390 * C110) *
               C25936 +
           (C13361 * C1063 - C13362 * C1057 - C13361 * C1064 + C29390 * C1075) *
               C25937 +
           (C13361 * C1073 - C13362 * C1062 - C13361 * C1074 + C29390 * C1080) *
               C25938) *
              C29484 * C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C13361 * C98 - C13362 * C93 - C13361 * C99 + C29390 * C108) *
               C25936 +
           C16920 * C25937 + C16922 * C25938) *
              C29484 * C29439 * C612 -
          (C16921 * C25938 + C15452 * C25937 + C13734 * C25936) * C29484 *
              C29439 * C613 +
          (C13735 * C25936 + C15451 * C25937 +
           (C13361 * C14137 - C13362 * C14136 - C13361 * C14138 +
            C29390 * C14139) *
               C25938) *
              C29484 * C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q));
    d2eexy[44] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C29484 * C152 - C151 * C93) * C13361 +
            (C29484 * C157 - C151 * C99) * C29390) *
               C25936 +
           ((C7627 - C7628) * C13361 + (C7629 - C7630) * C29390) * C25937 +
           ((C7632 - C7631) * C13361 + (C7634 - C7633) * C29390) * C25938) *
              C29439 * C29425 * C84 +
          (((C164 - C163) * C13361 + (C166 - C165) * C29390) * C25936 +
           (C8845 * C13361 + C8846 * C29390) * C25937 +
           ((C7635 - C7636) * C13361 + (C7637 - C7638) * C29390) * C25938) *
              C29439 * C29425 * C85 +
          ((C175 * C13361 + C176 * C29390) * C25936 +
           ((C2095 - C2094) * C13361 + (C2097 - C2096) * C29390) * C25937 +
           ((C29484 * C1124 - C151 * C1062) * C13361 +
            (C29484 * C1130 - C151 * C1074) * C29390) *
               C25938) *
              C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C29484 * C152 - C151 * C93) * C13361 +
            (C29484 * C157 - C151 * C99) * C29390) *
               C25936 +
           ((C7627 - C7628) * C13361 + (C7629 - C7630) * C29390) * C25937 +
           ((C7632 - C7631) * C13361 + (C7634 - C7633) * C29390) * C25938) *
              C29439 * C612 +
          (((C151 * C618 - C29484 * C678) * C13361 +
            (C151 * C627 - C29484 * C684) * C29390) *
               C25936 +
           ((C9483 - C9484) * C13361 + (C9485 - C9486) * C29390) * C25937 +
           ((C151 * C4142 - C29484 * C4200) * C13361 +
            (C151 * C4145 - C29484 * C4202) * C29390) *
               C25938) *
              C29439 * C613 +
          (((C29484 * C681 - C151 * C619) * C13361 +
            (C29484 * C687 - C151 * C629) * C29390) *
               C25936 +
           ((C29484 * C6017 - C151 * C5929) * C13361 +
            (C29484 * C6019 - C151 * C5932) * C29390) *
               C25937 +
           ((C29484 * C14178 - C151 * C14136) * C13361 +
            (C29484 * C14179 - C151 * C14138) * C29390) *
               C25938) *
              C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q));
    d2eexz[44] += (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C25936 * C215 - C26015 * C93 + C25937 * C1169 -
                      C26016 * C1059 + C25938 * C1172 - C26017 * C1060) *
                         C13361 +
                     (C25936 * C220 - C26015 * C99 + C25937 * C1175 -
                      C26016 * C1068 + C25938 * C1178 - C26017 * C1070) *
                         C29390) *
                        C29484 * C29439 * C29425 * C84 +
                    ((C26015 * C94 - C25936 * C216 + C26016 * C1058 -
                      C25937 * C1170 + C26017 * C1061 - C25938 * C1173) *
                         C13361 +
                     (C26015 * C101 - C25936 * C221 + C26016 * C1066 -
                      C25937 * C1176 + C26017 * C1072 - C25938 * C1179) *
                         C29390) *
                        C29484 * C29439 * C29425 * C85 +
                    ((C25936 * C217 - C26015 * C95 + C25937 * C1171 -
                      C26016 * C1057 + C25938 * C1174 - C26017 * C1062) *
                         C13361 +
                     (C25936 * C222 - C26015 * C103 + C25937 * C1177 -
                      C26016 * C1064 + C25938 * C1180 - C26017 * C1074) *
                         C29390) *
                        C29484 * C29439 * C29425 * C86)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C25936 * C215 - C26015 * C93 + C25937 * C1169 -
                      C26016 * C1059 + C25938 * C1172 - C26017 * C1060) *
                         C13361 +
                     (C25936 * C220 - C26015 * C99 + C25937 * C1175 -
                      C26016 * C1068 + C25938 * C1178 - C26017 * C1070) *
                         C29390) *
                        C29484 * C29439 * C612 +
                    ((C26015 * C618 - C25936 * C728 + C26016 * C2553 -
                      C25937 * C2671 + C26017 * C4142 - C25938 * C4254) *
                         C13361 +
                     (C26015 * C627 - C25936 * C734 + C26016 * C2557 -
                      C25937 * C2674 + C26017 * C4145 - C25938 * C4256) *
                         C29390) *
                        C29484 * C29439 * C613 +
                    ((C25936 * C731 - C26015 * C619 + C25937 * C6087 -
                      C26016 * C5929 + C25938 * C14218 - C26017 * C14136) *
                         C13361 +
                     (C25936 * C737 - C26015 * C629 + C25937 * C6089 -
                      C26016 * C5932 + C25938 * C14219 - C26017 * C14138) *
                         C29390) *
                        C29484 * C29439 * C614) *
                   C29413) /
                      (p * q * std::sqrt(p + q));
    d2eeyx[44] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C29390 * C98 - C13361 * C93) * C151 +
            (C29390 * C282 - C13361 * C277) * C29484) *
               C25936 +
           ((C17095 - C17096) * C151 + (C17097 - C17098) * C29484) * C25937 +
           ((C17100 - C17099) * C151 + (C17102 - C17101) * C29484) * C25938) *
              C29439 * C29425 * C84 +
          (((C13361 * C94 - C29390 * C100) * C151 +
            (C13361 * C278 - C29390 * C283) * C29484) *
               C25936 +
           ((C18285 - C18286) * C151 + (C18287 - C18288) * C29484) * C25937 +
           ((C13361 * C1061 - C29390 * C1071) * C151 +
            (C13361 * C1223 - C29390 * C1229) * C29484) *
               C25938) *
              C29439 * C29425 * C85 +
          (((C29390 * C102 - C13361 * C95) * C151 +
            (C29390 * C284 - C13361 * C279) * C29484) *
               C25936 +
           ((C29390 * C1063 - C13361 * C1057) * C151 +
            (C29390 * C1227 - C13361 * C1221) * C29484) *
               C25937 +
           ((C29390 * C1073 - C13361 * C1062) * C151 +
            (C29390 * C1230 - C13361 * C1224) * C29484) *
               C25938) *
              C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C29390 * C98 - C13361 * C93) * C151 +
            (C29390 * C282 - C13361 * C277) * C29484) *
               C25936 +
           ((C17095 - C17096) * C151 + (C17097 - C17098) * C29484) * C25937 +
           ((C17100 - C17099) * C151 + (C17102 - C17101) * C29484) * C25938) *
              C29439 * C612 +
          (((C13870 - C13869) * C151 + (C13872 - C13871) * C29484) * C25936 +
           (C18905 * C151 + C18906 * C29484) * C25937 +
           ((C17103 - C17104) * C151 + (C17105 - C17106) * C29484) * C25938) *
              C29439 * C613 +
          ((C13881 * C151 + C13882 * C29484) * C25936 +
           ((C15620 - C15619) * C151 + (C15622 - C15621) * C29484) * C25937 +
           ((C29390 * C14137 - C13361 * C14136) * C151 +
            (C29390 * C14259 - C13361 * C14258) * C29484) *
               C25938) *
              C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q));
    d2eeyy[44] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C151 * C152 - C325 * C93 - C151 * C277 + C29484 * C326) * C29390 *
               C25936 +
           C7834 * C29390 * C25937 + C7836 * C29390 * C25938) *
              C29439 * C29425 * C84 -
          (C7835 * C29390 * C25938 + C2274 * C29390 * C25937 +
           C350 * C29390 * C25936) *
              C29439 * C29425 * C85 +
          (C351 * C29390 * C25936 + C2273 * C29390 * C25937 +
           (C151 * C1124 - C325 * C1062 - C151 * C1224 + C29484 * C1274) *
               C29390 * C25938) *
              C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C151 * C152 - C325 * C93 - C151 * C277 + C29484 * C326) * C29390 *
               C25936 +
           C7834 * C29390 * C25937 + C7836 * C29390 * C25938) *
              C29439 * C612 -
          ((C151 * C4200 - C325 * C4142 - C151 * C4308 + C29484 * C4362) *
               C29390 * C25938 +
           C9692 * C29390 * C25937 +
           (C151 * C678 - C325 * C618 - C151 * C778 + C29484 * C830) * C29390 *
               C25936) *
              C29439 * C613 +
          ((C151 * C681 - C325 * C619 - C151 * C781 + C29484 * C831) * C29390 *
               C25936 +
           (C151 * C6017 - C325 * C5929 - C151 * C6161 + C29484 * C6239) *
               C29390 * C25937 +
           (C151 * C14178 - C325 * C14136 - C151 * C14258 + C29484 * C14298) *
               C29390 * C25938) *
              C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q));
    d2eeyz[44] += (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C25936 * C215 - C26015 * C93 + C25937 * C1169 -
                      C26016 * C1059 + C25938 * C1172 - C26017 * C1060) *
                         C151 +
                     (C25936 * C390 - C26015 * C277 + C25937 * C1313 -
                      C26016 * C1219 + C25938 * C1316 - C26017 * C1222) *
                         C29484) *
                        C29390 * C29439 * C29425 * C84 +
                    ((C26015 * C94 - C25936 * C216 + C26016 * C1058 -
                      C25937 * C1170 + C26017 * C1061 - C25938 * C1173) *
                         C151 +
                     (C26015 * C278 - C25936 * C391 + C26016 * C1220 -
                      C25937 * C1314 + C26017 * C1223 - C25938 * C1317) *
                         C29484) *
                        C29390 * C29439 * C29425 * C85 +
                    ((C25936 * C217 - C26015 * C95 + C25937 * C1171 -
                      C26016 * C1057 + C25938 * C1174 - C26017 * C1062) *
                         C151 +
                     (C25936 * C392 - C26015 * C279 + C25937 * C1315 -
                      C26016 * C1221 + C25938 * C1318 - C26017 * C1224) *
                         C29484) *
                        C29390 * C29439 * C29425 * C86)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C25936 * C215 - C26015 * C93 + C25937 * C1169 -
                      C26016 * C1059 + C25938 * C1172 - C26017 * C1060) *
                         C151 +
                     (C25936 * C390 - C26015 * C277 + C25937 * C1313 -
                      C26016 * C1219 + C25938 * C1316 - C26017 * C1222) *
                         C29484) *
                        C29390 * C29439 * C612 +
                    ((C26015 * C618 - C25936 * C728 + C26016 * C2553 -
                      C25937 * C2671 + C26017 * C4142 - C25938 * C4254) *
                         C151 +
                     (C26015 * C778 - C25936 * C872 + C26016 * C2727 -
                      C25937 * C2836 + C26017 * C4308 - C25938 * C4414) *
                         C29484) *
                        C29390 * C29439 * C613 +
                    ((C25936 * C731 - C26015 * C619 + C25937 * C6087 -
                      C26016 * C5929 + C25938 * C14218 - C26017 * C14136) *
                         C151 +
                     (C25936 * C875 - C26015 * C781 + C25937 * C6307 -
                      C26016 * C6161 + C25938 * C14337 - C26017 * C14258) *
                         C29484) *
                        C29390 * C29439 * C614) *
                   C29413) /
                      (p * q * std::sqrt(p + q));
    d2eezx[44] += (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C29390 * C98 - C13361 * C93) * C26015 +
                     (C29390 * C448 - C13361 * C443) * C25936 +
                     (C17095 - C17096) * C26016 + (C17289 - C17290) * C25937 +
                     (C17100 - C17099) * C26017 + (C17292 - C17291) * C25938) *
                        C29484 * C29439 * C29425 * C84 +
                    ((C13361 * C94 - C29390 * C100) * C26015 +
                     (C13361 * C444 - C29390 * C449) * C25936 +
                     (C18285 - C18286) * C26016 + (C18487 - C18488) * C25937 +
                     (C13361 * C1061 - C29390 * C1071) * C26017 +
                     (C13361 * C1361 - C29390 * C1367) * C25938) *
                        C29484 * C29439 * C29425 * C85 +
                    ((C29390 * C102 - C13361 * C95) * C26015 +
                     (C29390 * C450 - C13361 * C445) * C25936 +
                     (C29390 * C1063 - C13361 * C1057) * C26016 +
                     (C29390 * C1365 - C13361 * C1359) * C25937 +
                     (C29390 * C1073 - C13361 * C1062) * C26017 +
                     (C29390 * C1368 - C13361 * C1362) * C25938) *
                        C29484 * C29439 * C29425 * C86)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C29390 * C98 - C13361 * C93) * C26015 +
                     (C29390 * C448 - C13361 * C443) * C25936 +
                     (C17095 - C17096) * C26016 + (C17289 - C17290) * C25937 +
                     (C17100 - C17099) * C26017 + (C17292 - C17291) * C25938) *
                        C29484 * C29439 * C612 +
                    ((C13870 - C13869) * C26015 + (C14005 - C14004) * C25936 +
                     C18905 * C26016 + C19124 * C25937 +
                     (C17103 - C17104) * C26017 + (C17293 - C17294) * C25938) *
                        C29484 * C29439 * C613 +
                    (C13881 * C26015 + C14011 * C25936 +
                     (C15620 - C15619) * C26016 + (C15782 - C15781) * C25937 +
                     (C29390 * C14137 - C13361 * C14136) * C26017 +
                     (C29390 * C14377 - C13361 * C14376) * C25938) *
                        C29484 * C29439 * C614) *
                   C29413) /
                      (p * q * std::sqrt(p + q));
    d2eezy[44] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C29484 * C152 - C151 * C93) * C26015 +
           (C29484 * C491 - C151 * C443) * C25936 + (C7627 - C7628) * C26016 +
           (C8006 - C8007) * C25937 + (C7632 - C7631) * C26017 +
           (C8009 - C8008) * C25938) *
              C29390 * C29439 * C29425 * C84 +
          ((C164 - C163) * C26015 + (C498 - C497) * C25936 + C8845 * C26016 +
           C9270 * C25937 + (C7635 - C7636) * C26017 +
           (C8010 - C8011) * C25938) *
              C29390 * C29439 * C29425 * C85 +
          (C175 * C26015 + C504 * C25936 + (C2095 - C2094) * C26016 +
           (C2436 - C2435) * C25937 + (C29484 * C1124 - C151 * C1062) * C26017 +
           (C29484 * C1412 - C151 * C1362) * C25938) *
              C29390 * C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C29484 * C152 - C151 * C93) * C26015 +
           (C29484 * C491 - C151 * C443) * C25936 + (C7627 - C7628) * C26016 +
           (C8006 - C8007) * C25937 + (C7632 - C7631) * C26017 +
           (C8009 - C8008) * C25938) *
              C29390 * C29439 * C612 +
          ((C151 * C618 - C29484 * C678) * C26015 +
           (C151 * C916 - C29484 * C966) * C25936 + (C9483 - C9484) * C26016 +
           (C9892 - C9893) * C25937 + (C151 * C4142 - C29484 * C4200) * C26017 +
           (C151 * C4466 - C29484 * C4520) * C25938) *
              C29390 * C29439 * C613 +
          ((C29484 * C681 - C151 * C619) * C26015 +
           (C29484 * C969 - C151 * C919) * C25936 +
           (C29484 * C6017 - C151 * C5929) * C26016 +
           (C29484 * C6451 - C151 * C6377) * C25937 +
           (C29484 * C14178 - C151 * C14136) * C26017 +
           (C29484 * C14416 - C151 * C14376) * C25938) *
              C29390 * C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q));
    d2eezz[44] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((C26015 * C215 - C26246 * C93 - C26015 * C443 + C25936 * C545 +
           C26016 * C1169 - C26247 * C1059 - C26016 * C1357 + C25937 * C1453 +
           C26017 * C1172 - C26248 * C1060 - C26017 * C1360 + C25938 * C1454) *
              C29484 * C29390 * C29439 * C29425 * C84 -
          (C26017 * C1173 - C26248 * C1061 - C26017 * C1361 + C25938 * C1455 +
           C26016 * C1170 - C26247 * C1058 - C26016 * C1358 + C25937 * C1452 +
           C26015 * C216 - C26246 * C94 - C26015 * C444 + C25936 * C546) *
              C29484 * C29390 * C29439 * C29425 * C85 +
          (C26015 * C217 - C26246 * C95 - C26015 * C445 + C25936 * C547 +
           C26016 * C1171 - C26247 * C1057 - C26016 * C1359 + C25937 * C1451 +
           C26017 * C1174 - C26248 * C1062 - C26017 * C1362 + C25938 * C1456) *
              C29484 * C29390 * C29439 * C29425 * C86)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((C26015 * C215 - C26246 * C93 - C26015 * C443 + C25936 * C545 +
           C26016 * C1169 - C26247 * C1059 - C26016 * C1357 + C25937 * C1453 +
           C26017 * C1172 - C26248 * C1060 - C26017 * C1360 + C25938 * C1454) *
              C29484 * C29390 * C29439 * C612 -
          (C26017 * C4254 - C26248 * C4142 - C26017 * C4466 + C25938 * C4572 +
           C26016 * C2671 - C26247 * C2553 - C26016 * C2889 + C25937 * C2998 +
           C26015 * C728 - C26246 * C618 - C26015 * C916 + C25936 * C1012) *
              C29484 * C29390 * C29439 * C613 +
          (C26015 * C731 - C26246 * C619 - C26015 * C919 + C25936 * C1013 +
           C26016 * C6087 - C26247 * C5929 - C26016 * C6377 + C25937 * C6519 +
           C26017 * C14218 - C26248 * C14136 - C26017 * C14376 +
           C25938 * C14455) *
              C29484 * C29390 * C29439 * C614) *
         C29413) /
            (p * q * std::sqrt(p + q));
}
