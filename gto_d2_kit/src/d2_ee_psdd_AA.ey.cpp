/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "gto_d2_kit/d2_ee_psdd_AA.hpp"
#include <cmath>
/*

*/
#pragma GCC optimize("O0")
namespace {
    const double Pi = M_PI;
}
//
void second_derivative_ee_1022_11(const double ae,
                                  const double xA,
                                  const double yA,
                                  const double zA,
                                  const double be,
                                  const double xB,
                                  const double yB,
                                  const double zB,
                                  const double ce,
                                  const double xC,
                                  const double yC,
                                  const double zC,
                                  const double de,
                                  const double xD,
                                  const double yD,
                                  const double zD,
                                  const double* const bs,
                                  double* const d2eexx,
                                  double* const d2eexy,
                                  double* const d2eexz,
                                  double* const d2eeyx,
                                  double* const d2eeyy,
                                  double* const d2eeyz,
                                  double* const d2eezx,
                                  double* const d2eezy,
                                  double* const d2eezz)
{
    const double p = ae + be;
    const double q = ce + de;
    const double xP = (ae * xA + be * xB) / p;
    const double yP = (ae * yA + be * yB) / p;
    const double zP = (ae * zA + be * zB) / p;
    const double xQ = (ce * xC + de * xD) / q;
    const double yQ = (ce * yC + de * yD) / q;
    const double zQ = (ce * zC + de * zD) / q;
    const double C77335 = ae + be;
    const double C77334 = xA - xB;
    const double C77333 = ae * be;
    const double C77352 = yA - yB;
    const double C77355 = zA - zB;
    const double C77386 = p + q;
    const double C77385 = p * q;
    const double C77391 = xP - xQ;
    const double C77390 = bs[2];
    const double C77398 = std::pow(ae, 2);
    const double C77396 = bs[3];
    const double C77409 = bs[4];
    const double C77430 = bs[5];
    const double C77463 = bs[6];
    const double C77506 = yP - yQ;
    const double C77549 = zP - zQ;
    const double C96 = bs[0];
    const double C78972 = ce + de;
    const double C78971 = ce * de;
    const double C78970 = xC - xD;
    const double C79004 = yC - yD;
    const double C79022 = zC - zD;
    const double C79210 = 2 * C77335;
    const double C79209 = std::pow(C77334, 2);
    const double C77336 = C77333 * C77334;
    const double C77368 = C77333 * C77352;
    const double C79212 = std::pow(C77352, 2);
    const double C77380 = C77333 * C77355;
    const double C79211 = std::pow(C77355, 2);
    const double C77387 = 2 * C77385;
    const double C77399 = C77391 * ae;
    const double C77395 = std::pow(C77391, 2);
    const double C77509 = C77506 * ae;
    const double C77508 = C77391 * C77506;
    const double C77593 = C77506 * C77391;
    const double C77614 = std::pow(C77506, 2);
    const double C77552 = C77549 * ae;
    const double C77551 = C77391 * C77549;
    const double C77635 = C77506 * C77549;
    const double C77651 = C77549 * C77391;
    const double C77672 = C77549 * C77506;
    const double C77688 = std::pow(C77549, 2);
    const double C78976 = 2 * C78972;
    const double C78975 = std::pow(C78972, 2);
    const double C78977 = C78970 * de;
    const double C78974 = C78970 * ce;
    const double C78973 = std::pow(C78970, 2);
    const double C79005 = std::pow(C79004, 2);
    const double C79064 = C79004 * de;
    const double C79062 = C79004 * ce;
    const double C79023 = std::pow(C79022, 2);
    const double C79106 = C79022 * de;
    const double C79104 = C79022 * ce;
    const double C79244 = std::pow(C79210, -1);
    const double C79243 = C79209 * C77333;
    const double C79246 = C79212 * C77333;
    const double C79245 = C79211 * C77333;
    const double C77389 = C77387 / C77386;
    const double C108 =
        ((std::pow(xP - xQ, 2) * bs[2] * std::pow(C77387 / C77386, 2) -
          (bs[1] * C77387) / C77386) *
         std::pow(ae, 2)) /
        std::pow(C77335, 2);
    const double C97 = -(C77391 * bs[1] * C77387) / C77386;
    const double C749 = -(C77506 * bs[1] * C77387) / C77386;
    const double C1682 = -(C77549 * bs[1] * C77387) / C77386;
    const double C77401 = C77396 * C77399;
    const double C77412 = C77409 * C77399;
    const double C77435 = C77430 * C77399;
    const double C77471 = C77463 * C77399;
    const double C102 = (-(bs[1] * C77399 * C77387) / C77386) / C77335;
    const double C77411 = C77395 * C77409;
    const double C77434 = C77395 * C77430;
    const double C77470 = C77395 * C77463;
    const double C77511 = C77396 * C77509;
    const double C77515 = C77409 * C77509;
    const double C77522 = C77430 * C77509;
    const double C77533 = C77463 * C77509;
    const double C167 = (-(bs[1] * C77509 * C77387) / C77386) / C77335;
    const double C77510 = C77508 * C77398;
    const double C77594 = C77593 * C77398;
    const double C77616 = C77614 * C77409;
    const double C77621 = C77614 * C77430;
    const double C77626 = C77614 * C77463;
    const double C77554 = C77396 * C77552;
    const double C77558 = C77409 * C77552;
    const double C77565 = C77430 * C77552;
    const double C77576 = C77463 * C77552;
    const double C246 = (-(bs[1] * C77552 * C77387) / C77386) / C77335;
    const double C77553 = C77551 * C77398;
    const double C77636 = C77635 * C77398;
    const double C77652 = C77651 * C77398;
    const double C77673 = C77672 * C77398;
    const double C77690 = C77688 * C77409;
    const double C77695 = C77688 * C77430;
    const double C77700 = C77688 * C77463;
    const double C78989 = std::pow(C78976, -1);
    const double C79220 = std::pow(C78976, -2);
    const double C78990 = 2 * C78975;
    const double C79224 = C78975 * C78976;
    const double C79223 = 4 * C78975;
    const double C79213 = std::pow(C78974, 2);
    const double C78978 = C78973 * C78971;
    const double C79006 = C79005 * C78971;
    const double C79225 = std::pow(C79062, 2);
    const double C79024 = C79023 * C78971;
    const double C79227 = std::pow(C79104, 2);
    const double C79276 = C79243 / C77335;
    const double C79278 = C79246 / C77335;
    const double C79277 = C79245 / C77335;
    const double C77392 = std::pow(C77389, 2);
    const double C77397 = -C77389;
    const double C77410 = std::pow(C77389, 4);
    const double C77464 = std::pow(C77389, 6);
    const double C77514 = C77409 * C77510;
    const double C77521 = C77430 * C77510;
    const double C77532 = C77463 * C77510;
    const double C77596 = C77409 * C77594;
    const double C77599 = C77430 * C77594;
    const double C77605 = C77463 * C77594;
    const double C77557 = C77409 * C77553;
    const double C77564 = C77430 * C77553;
    const double C77575 = C77463 * C77553;
    const double C77638 = C77409 * C77636;
    const double C77641 = C77430 * C77636;
    const double C77644 = C77463 * C77636;
    const double C77654 = C77409 * C77652;
    const double C77657 = C77430 * C77652;
    const double C77663 = C77463 * C77652;
    const double C77675 = C77409 * C77673;
    const double C77678 = C77430 * C77673;
    const double C77681 = C77463 * C77673;
    const double C79256 = 4 * C79224;
    const double C79255 = C78972 * C79223;
    const double C78979 = C78978 / C78972;
    const double C79007 = C79006 / C78972;
    const double C79025 = C79024 / C78972;
    const double C79294 = -C79276;
    const double C79296 = -C79278;
    const double C79295 = -C79277;
    const double C77394 = C77390 * C77392;
    const double C109 = (2 * ae * C77392 * C77390 * C77391 * ae +
                         C77391 *
                             (C77390 * C77392 + std::pow(C77391, 2) * bs[3] *
                                                    std::pow(-C77389, 3)) *
                             std::pow(ae, 2)) /
                        std::pow(C77335, 2);
    const double C173 =
        (C77392 * C77390 * C77391 * (yP - yQ) * C77398) / std::pow(C77335, 2);
    const double C252 =
        (C77392 * C77390 * C77391 * (zP - zQ) * C77398) / std::pow(C77335, 2);
    const double C324 =
        (C77392 * C77390 * C77506 * C77391 * C77398) / std::pow(C77335, 2);
    const double C373 =
        ((std::pow(C77506, 2) * C77390 * C77392 - (bs[1] * C77387) / C77386) *
         C77398) /
        std::pow(C77335, 2);
    const double C447 =
        (C77392 * C77390 * C77506 * C77549 * C77398) / std::pow(C77335, 2);
    const double C515 =
        (C77392 * C77390 * C77549 * C77391 * C77398) / std::pow(C77335, 2);
    const double C563 =
        (C77392 * C77390 * C77549 * C77506 * C77398) / std::pow(C77335, 2);
    const double C632 =
        ((std::pow(C77549, 2) * C77390 * C77392 - (bs[1] * C77387) / C77386) *
         C77398) /
        std::pow(C77335, 2);
    const double C103 = (C77391 * C77392 * C77390 * C77399) / C77335 -
                        (ae * bs[1] * C77387) / (C77386 * C77335);
    const double C168 = (C77391 * C77392 * C77390 * C77509) / C77335;
    const double C247 = (C77391 * C77392 * C77390 * C77552) / C77335;
    const double C757 = (C77506 * C77392 * C77390 * C77399) / C77335;
    const double C859 = (C77506 * C77392 * C77390 * C77509) / C77335 -
                        (ae * bs[1] * C77387) / (C77386 * C77335);
    const double C973 = (C77506 * C77392 * C77390 * C77552) / C77335;
    const double C1690 = (C77549 * C77392 * C77390 * C77399) / C77335;
    const double C1792 = (C77549 * C77392 * C77390 * C77509) / C77335;
    const double C1906 = (C77549 * C77392 * C77390 * C77552) / C77335 -
                         (ae * bs[1] * C77387) / (C77386 * C77335);
    const double C77400 = std::pow(C77397, 3);
    const double C77431 = std::pow(C77397, 5);
    const double C77416 = C77410 * C77412;
    const double C77415 = C77411 * C77410;
    const double C77429 = C77409 * C77410;
    const double C77517 = C77410 * C77515;
    const double C77560 = C77410 * C77558;
    const double C77617 = C77616 * C77410;
    const double C77691 = C77690 * C77410;
    const double C77476 = C77464 * C77471;
    const double C77475 = C77470 * C77464;
    const double C77537 = C77464 * C77533;
    const double C77580 = C77464 * C77576;
    const double C77627 = C77626 * C77464;
    const double C77701 = C77700 * C77464;
    const double C77516 = C77410 * C77514;
    const double C77535 = C77464 * C77532;
    const double C77597 = C77410 * C77596;
    const double C77606 = C77464 * C77605;
    const double C77559 = C77410 * C77557;
    const double C77578 = C77464 * C77575;
    const double C77639 = C77410 * C77638;
    const double C77645 = C77464 * C77644;
    const double C77655 = C77410 * C77654;
    const double C77664 = C77464 * C77663;
    const double C77676 = C77410 * C77675;
    const double C77682 = C77464 * C77681;
    const double C78980 = -C78979;
    const double C79008 = -C79007;
    const double C79026 = -C79025;
    const double C79306 = std::exp(C79294);
    const double C79308 = std::exp(C79296);
    const double C79307 = std::exp(C79295);
    const double C77402 = C77394 * ae;
    const double C98 = C77394 * C77395 - (bs[1] * C77387) / C77386;
    const double C748 = C77506 * C77391 * C77394;
    const double C750 = C77394 * C77614 - (bs[1] * C77387) / C77386;
    const double C1681 = C77549 * C77391 * C77394;
    const double C1683 = C77394 * C77688 - (bs[1] * C77387) / C77386;
    const double C3931 = C77549 * C77506 * C77394;
    const double C77403 = C77400 * C77401;
    const double C77408 = C77396 * C77400;
    const double C77512 = C77400 * C77511;
    const double C77555 = C77400 * C77554;
    const double C174 = (ae * C77392 * C77390 * C77506 * ae +
                         C77391 * C77400 * C77396 * C77391 * C77506 * C77398) /
                        std::pow(C77335, 2);
    const double C253 = (ae * C77392 * C77390 * C77549 * ae +
                         C77391 * C77400 * C77396 * C77391 * C77549 * C77398) /
                        std::pow(C77335, 2);
    const double C325 = (ae * C77392 * C77390 * C77509 +
                         C77391 * C77400 * C77396 * C77506 * C77391 * C77398) /
                        std::pow(C77335, 2);
    const double C374 =
        (C77391 * (C77394 + std::pow(C77506, 2) * C77396 * C77400) * C77398) /
        std::pow(C77335, 2);
    const double C448 = (C77391 * C77400 * C77396 * C77506 * C77549 * C77398) /
                        std::pow(C77335, 2);
    const double C449 =
        (C77400 * C77396 * C77636 + C77410 * C77409 * C77636 * C77395) /
        std::pow(C77335, 2);
    const double C516 = (ae * C77392 * C77390 * C77552 +
                         C77391 * C77400 * C77396 * C77549 * C77391 * C77398) /
                        std::pow(C77335, 2);
    const double C564 = (C77391 * C77400 * C77396 * C77549 * C77506 * C77398) /
                        std::pow(C77335, 2);
    const double C565 =
        (C77400 * C77396 * C77673 + C77410 * C77409 * C77673 * C77395) /
        std::pow(C77335, 2);
    const double C633 =
        (C77391 * (C77394 + std::pow(C77549, 2) * C77396 * C77400) * C77398) /
        std::pow(C77335, 2);
    const double C765 =
        (C77506 * (C77394 + C77395 * C77396 * C77400) * C77398) /
        std::pow(C77335, 2);
    const double C867 =
        (ae * C77392 * C77390 * C77399 + C77506 * C77400 * C77396 * C77510) /
        std::pow(C77335, 2);
    const double C981 =
        (C77506 * C77400 * C77396 * C77553) / std::pow(C77335, 2);
    const double C1087 =
        (ae * C77392 * C77390 * C77399 + C77506 * C77400 * C77396 * C77594) /
        std::pow(C77335, 2);
    const double C1169 =
        (2 * ae * C77392 * C77390 * C77509 +
         C77506 * (C77394 + C77614 * C77396 * C77400) * C77398) /
        std::pow(C77335, 2);
    const double C1279 =
        (ae * C77392 * C77390 * C77552 + C77506 * C77400 * C77396 * C77636) /
        std::pow(C77335, 2);
    const double C1381 =
        (C77506 * C77400 * C77396 * C77652) / std::pow(C77335, 2);
    const double C1463 =
        (ae * C77392 * C77390 * C77552 + C77506 * C77400 * C77396 * C77673) /
        std::pow(C77335, 2);
    const double C1565 =
        (C77506 * (C77394 + C77688 * C77396 * C77400) * C77398) /
        std::pow(C77335, 2);
    const double C1698 =
        (C77549 * (C77394 + C77395 * C77396 * C77400) * C77398) /
        std::pow(C77335, 2);
    const double C1800 =
        (C77549 * C77400 * C77396 * C77510) / std::pow(C77335, 2);
    const double C1914 =
        (ae * C77392 * C77390 * C77399 + C77549 * C77400 * C77396 * C77553) /
        std::pow(C77335, 2);
    const double C2020 =
        (C77549 * C77400 * C77396 * C77594) / std::pow(C77335, 2);
    const double C2102 =
        (C77549 * (C77394 + C77614 * C77396 * C77400) * C77398) /
        std::pow(C77335, 2);
    const double C2212 =
        (ae * C77392 * C77390 * C77509 + C77549 * C77400 * C77396 * C77636) /
        std::pow(C77335, 2);
    const double C2314 =
        (ae * C77392 * C77390 * C77399 + C77549 * C77400 * C77396 * C77652) /
        std::pow(C77335, 2);
    const double C2396 =
        (ae * C77392 * C77390 * C77509 + C77549 * C77400 * C77396 * C77673) /
        std::pow(C77335, 2);
    const double C2498 =
        (2 * ae * C77392 * C77390 * C77552 +
         C77549 * (C77394 + C77688 * C77396 * C77400) * C77398) /
        std::pow(C77335, 2);
    const double C77440 = C77431 * C77435;
    const double C77439 = C77434 * C77431;
    const double C77462 = C77430 * C77431;
    const double C77524 = C77431 * C77522;
    const double C77523 = C77431 * C77521;
    const double C77567 = C77431 * C77565;
    const double C77566 = C77431 * C77564;
    const double C77600 = C77431 * C77599;
    const double C77622 = C77621 * C77431;
    const double C77642 = C77431 * C77641;
    const double C77658 = C77431 * C77657;
    const double C77679 = C77431 * C77678;
    const double C77696 = C77695 * C77431;
    const double C77419 = C77391 * C77416;
    const double C77428 = ae * C77416;
    const double C78002 = C77506 * C77416;
    const double C78280 = C77549 * C77416;
    const double C77438 = C77429 * C77395;
    const double C77437 = C77391 * C77429;
    const double C77436 = C77429 * ae;
    const double C78049 = C77429 * C77614;
    const double C78048 = C77506 * C77429;
    const double C78348 = C77429 * C77688;
    const double C78347 = C77549 * C77429;
    const double C77520 = ae * C77517;
    const double C77519 = C77391 * C77517;
    const double C78034 = C77506 * C77517;
    const double C78299 = C77549 * C77517;
    const double C77563 = ae * C77560;
    const double C77562 = C77391 * C77560;
    const double C78091 = C77506 * C77560;
    const double C78333 = C77549 * C77560;
    const double C77480 = C77391 * C77476;
    const double C78471 = C77476 * C77614;
    const double C78603 = C77506 * C77476;
    const double C78675 = C77476 * C77688;
    const double C77540 = C77537 * C77395;
    const double C78068 = C77391 * C77537;
    const double C78493 = C77506 * C77537;
    const double C78612 = C77537 * C77688;
    const double C77583 = C77580 * C77395;
    const double C78099 = C77391 * C77580;
    const double C78525 = C77580 * C77614;
    const double C78626 = C77506 * C77580;
    const double C78706 = C77549 * C77580;
    const double C1801 =
        (C77400 * C77396 * C77510 + C77516 * C77688) / std::pow(C77335, 2);
    const double C77539 = C77391 * C77535;
    const double C78469 = C77506 * C77535;
    const double C78669 = C77535 * C77688;
    const double C2021 =
        (C77400 * C77396 * C77594 + C77597 * C77688) / std::pow(C77335, 2);
    const double C77607 = C77391 * C77606;
    const double C78483 = C77506 * C77606;
    const double C78549 = C77606 * C77688;
    const double C78578 = C77549 * C77606;
    const double C982 =
        (C77400 * C77396 * C77553 + C77559 * C77614) / std::pow(C77335, 2);
    const double C77582 = C77391 * C77578;
    const double C78479 = C77578 * C77614;
    const double C78602 = C77506 * C77578;
    const double C78673 = C77549 * C77578;
    const double C450 =
        (2 * C77391 * C77639 +
         C77391 * (C77639 + C77431 * C77430 * C77636 * C77395)) /
        std::pow(C77335, 2);
    const double C77646 = C77645 * C77395;
    const double C78098 = C77391 * C77645;
    const double C78523 = C77506 * C77645;
    const double C78562 = C77549 * C77645;
    const double C1382 =
        (C77400 * C77396 * C77652 + C77655 * C77614) / std::pow(C77335, 2);
    const double C77665 = C77391 * C77664;
    const double C78534 = C77664 * C77614;
    const double C78616 = C77506 * C77664;
    const double C78690 = C77549 * C77664;
    const double C566 =
        (2 * C77391 * C77676 +
         C77391 * (C77676 + C77431 * C77430 * C77673 * C77395)) /
        std::pow(C77335, 2);
    const double C77683 = C77682 * C77395;
    const double C78115 = C77391 * C77682;
    const double C78538 = C77506 * C77682;
    const double C78696 = C77549 * C77682;
    const double C78981 = std::exp(C78980);
    const double C79009 = std::exp(C79008);
    const double C79027 = std::exp(C79026);
    const double C27223 = C79306 * C757;
    const double C53437 = C79306 * C1690;
    const double C77337 = C77336 * C79306;
    const double C81 = -(C79306 * C77334 * be) / C77335;
    const double C82 = C79244 * C79306;
    const double C181 = C79308 * C168;
    const double C53265 = C79308 * C1792;
    const double C77369 = C77368 * C79308;
    const double C166 = -(2 * C77333 * (yA - yB) * C79308) / C77335;
    const double C372 =
        -((C79308 - (C77352 * 2 * C77333 * C77352 * C79308) / C77335) * 2 *
          C77333) /
        C77335;
    const double C26551 =
        (-(0 * be) / C77335) / (2 * C77335) -
        ((C79308 - (C77352 * 2 * C77333 * C77352 * C79308) / C77335) * be) /
            C77335;
    const double C26552 =
        (-(2 * C77333 * C77352 * C79308) / C77335) / (2 * C77335) -
        (0 * be) / C77335;
    const double C26495 = -(C79308 * C77352 * be) / C77335;
    const double C26496 = C79244 * C79308;
    const double C260 = C79307 * C247;
    const double C27125 = C79307 * C973;
    const double C77381 = C77380 * C79307;
    const double C245 = -(2 * C77333 * (zA - zB) * C79307) / C77335;
    const double C631 =
        -((C79307 - (C77355 * 2 * C77333 * C77355 * C79307) / C77335) * 2 *
          C77333) /
        C77335;
    const double C52140 =
        (-(0 * be) / C77335) / (2 * C77335) -
        ((C79307 - (C77355 * 2 * C77333 * C77355 * C79307) / C77335) * be) /
            C77335;
    const double C52141 =
        (-(2 * C77333 * C77355 * C79307) / C77335) / (2 * C77335) -
        (0 * be) / C77335;
    const double C52053 = -(C79307 * C77355 * be) / C77335;
    const double C52054 = C79244 * C79307;
    const double C77404 = C77391 * C77403;
    const double C868 = (C77400 * C77396 * C77510 + ae * C77506 * C77403 +
                         C77506 * (ae * C77403 + C77506 * C77516)) /
                        std::pow(C77335, 2);
    const double C1088 = (C77400 * C77396 * C77594 + ae * C77506 * C77403 +
                          C77506 * (ae * C77403 + C77506 * C77597)) /
                         std::pow(C77335, 2);
    const double C1915 = (C77400 * C77396 * C77553 + ae * C77549 * C77403 +
                          C77549 * (ae * C77403 + C77549 * C77559)) /
                         std::pow(C77335, 2);
    const double C2315 = (C77400 * C77396 * C77652 + ae * C77549 * C77403 +
                          C77549 * (ae * C77403 + C77549 * C77655)) /
                         std::pow(C77335, 2);
    const double C4051 =
        (C77549 * (ae * C77403 + C77506 * C77516)) / std::pow(C77335, 2);
    const double C4169 =
        (ae * C77506 * C77403 + C77549 * C77506 * C77559) / std::pow(C77335, 2);
    const double C4283 =
        (ae * C77549 * C77403 + C77506 * C77549 * C77597) / std::pow(C77335, 2);
    const double C4613 =
        (ae * C77506 * C77403 + C77549 * C77506 * C77655) / std::pow(C77335, 2);
    const double C758 = (C77392 * C77390 * C77399 + C77403 * C77614) / C77335;
    const double C1691 = (C77392 * C77390 * C77399 + C77403 * C77688) / C77335;
    const double C3935 = (C77549 * C77506 * C77403) / C77335;
    const double C5572 =
        (2 * C77506 * C77403 + C77506 * (C77403 + C77416 * C77614)) / C77335;
    const double C6050 = (C77549 * (C77403 + C77416 * C77614)) / C77335;
    const double C10324 =
        (2 * C77549 * C77403 + C77549 * (C77403 + C77416 * C77688)) / C77335;
    const double C77414 = C77391 * C77408;
    const double C77413 = C77408 * ae;
    const double C77418 = C77408 + C77415;
    const double C77618 = C77408 + C77617;
    const double C77692 = C77408 + C77691;
    const double C78035 = C77506 * C77408;
    const double C78334 = C77549 * C77408;
    const double C375 =
        ((C77394 + C77614 * C77396 * C77400) * C77398 +
         (C77408 + C77614 * C77409 * C77410) * C77398 * C77395) /
        std::pow(C77335, 2);
    const double C634 =
        ((C77394 + C77688 * C77396 * C77400) * C77398 +
         (C77408 + C77688 * C77409 * C77410) * C77398 * C77395) /
        std::pow(C77335, 2);
    const double C99 =
        2 * C77391 * C77394 + C77391 * (C77394 + C77408 * C77395);
    const double C752 = C77506 * (C77394 + C77408 * C77395);
    const double C1685 = C77549 * (C77394 + C77408 * C77395);
    const double C5568 =
        2 * C77506 * C77394 + C77506 * (C77394 + C77408 * C77614);
    const double C6044 = C77549 * (C77394 + C77408 * C77614);
    const double C10320 =
        2 * C77549 * C77394 + C77549 * (C77394 + C77408 * C77688);
    const double C77759 = C77506 * C77512;
    const double C175 =
        (C77400 * C77396 * C77510 + ae * C77391 * C77512 +
         C77391 * (ae * C77512 + C77391 * C77410 * C77409 * C77510)) /
        std::pow(C77335, 2);
    const double C176 =
        (2 * (ae * C77512 + C77391 * C77516) + ae * (C77512 + C77517 * C77395) +
         C77391 *
             (C77516 + ae * C77391 * C77517 +
              C77391 * (ae * C77517 + C77391 * C77431 * C77430 * C77510))) /
        std::pow(C77335, 2);
    const double C326 =
        (C77400 * C77396 * C77594 + ae * C77391 * C77512 +
         C77391 * (ae * C77512 + C77391 * C77410 * C77409 * C77594)) /
        std::pow(C77335, 2);
    const double C1799 =
        (C77549 * (ae * C77512 + C77391 * C77516)) / std::pow(C77335, 2);
    const double C2019 =
        (C77549 * (ae * C77512 + C77391 * C77597)) / std::pow(C77335, 2);
    const double C2211 =
        (ae * C77391 * C77512 + C77549 * C77391 * C77639) / std::pow(C77335, 2);
    const double C2213 = (C77400 * C77396 * C77636 + ae * C77549 * C77512 +
                          C77549 * (ae * C77512 + C77549 * C77639)) /
                         std::pow(C77335, 2);
    const double C2395 =
        (ae * C77391 * C77512 + C77549 * C77391 * C77676) / std::pow(C77335, 2);
    const double C2397 = (C77400 * C77396 * C77673 + ae * C77549 * C77512 +
                          C77549 * (ae * C77512 + C77549 * C77676)) /
                         std::pow(C77335, 2);
    const double C169 = (C77392 * C77390 * C77509 + C77512 * C77395) / C77335;
    const double C170 =
        (2 * C77391 * C77512 + C77391 * (C77512 + C77517 * C77395)) / C77335;
    const double C858 =
        (C77506 * C77391 * C77512 + C77391 * C77394 * ae) / C77335;
    const double C862 = (C77506 * (C77512 + C77517 * C77395) +
                         (C77394 + C77408 * C77395) * ae) /
                        C77335;
    const double C1791 = (C77549 * C77391 * C77512) / C77335;
    const double C1793 = (C77392 * C77390 * C77509 + C77512 * C77688) / C77335;
    const double C1795 = (C77549 * (C77512 + C77517 * C77395)) / C77335;
    const double C10378 =
        (2 * C77549 * C77512 + C77549 * (C77512 + C77517 * C77688)) / C77335;
    const double C77893 = C77549 * C77555;
    const double C254 =
        (C77400 * C77396 * C77553 + ae * C77391 * C77555 +
         C77391 * (ae * C77555 + C77391 * C77410 * C77409 * C77553)) /
        std::pow(C77335, 2);
    const double C255 =
        (2 * (ae * C77555 + C77391 * C77559) + ae * (C77555 + C77560 * C77395) +
         C77391 *
             (C77559 + ae * C77391 * C77560 +
              C77391 * (ae * C77560 + C77391 * C77431 * C77430 * C77553))) /
        std::pow(C77335, 2);
    const double C517 =
        (C77400 * C77396 * C77652 + ae * C77391 * C77555 +
         C77391 * (ae * C77555 + C77391 * C77410 * C77409 * C77652)) /
        std::pow(C77335, 2);
    const double C980 =
        (C77506 * (ae * C77555 + C77391 * C77559)) / std::pow(C77335, 2);
    const double C1278 =
        (ae * C77391 * C77555 + C77506 * C77391 * C77639) / std::pow(C77335, 2);
    const double C1280 = (C77400 * C77396 * C77636 + ae * C77506 * C77555 +
                          C77506 * (ae * C77555 + C77506 * C77639)) /
                         std::pow(C77335, 2);
    const double C1380 =
        (C77506 * (ae * C77555 + C77391 * C77655)) / std::pow(C77335, 2);
    const double C1462 =
        (ae * C77391 * C77555 + C77506 * C77391 * C77676) / std::pow(C77335, 2);
    const double C1464 = (C77400 * C77396 * C77673 + ae * C77506 * C77555 +
                          C77506 * (ae * C77555 + C77506 * C77676)) /
                         std::pow(C77335, 2);
    const double C248 = (C77392 * C77390 * C77552 + C77555 * C77395) / C77335;
    const double C249 =
        (2 * C77391 * C77555 + C77391 * (C77555 + C77560 * C77395)) / C77335;
    const double C972 = (C77506 * C77391 * C77555) / C77335;
    const double C974 = (C77392 * C77390 * C77552 + C77555 * C77614) / C77335;
    const double C976 = (C77506 * (C77555 + C77560 * C77395)) / C77335;
    const double C1905 =
        (C77549 * C77391 * C77555 + C77391 * C77394 * ae) / C77335;
    const double C1909 = (C77549 * (C77555 + C77560 * C77395) +
                          (C77394 + C77408 * C77395) * ae) /
                         C77335;
    const double C4165 =
        (C77549 * C77506 * C77555 + C77506 * C77394 * ae) / C77335;
    const double C5676 =
        (2 * C77506 * C77555 + C77506 * (C77555 + C77560 * C77614)) / C77335;
    const double C6228 = (C77549 * (C77555 + C77560 * C77614) +
                          (C77394 + C77408 * C77614) * ae) /
                         C77335;
    const double C183 = C79308 * C174;
    const double C262 = C79307 * C253;
    const double C383 = C79308 * C374;
    const double C456 = C79307 * C448;
    const double C458 = C79307 * C449;
    const double C572 = C79308 * C564;
    const double C574 = C79308 * C565;
    const double C642 = C79307 * C633;
    const double C26935 = C79306 * C765;
    const double C27127 = C79307 * C981;
    const double C27225 = C79306 * C1087;
    const double C27419 = C79307 * C1279;
    const double C27500 = C79306 * C1381;
    const double C27677 = C79307 * C1565;
    const double C53160 = C79306 * C1698;
    const double C53267 = C79308 * C1800;
    const double C53439 = C79306 * C2020;
    const double C53559 = C79308 * C2102;
    const double C53723 = C79306 * C2314;
    const double C53815 = C79308 * C2396;
    const double C77444 = C77391 * C77440;
    const double C77461 = ae * C77440;
    const double C77911 = C77506 * C77440;
    const double C77932 = C77549 * C77440;
    const double C78004 = C77440 * C77614;
    const double C78282 = C77440 * C77688;
    const double C77443 = C77429 + C77439;
    const double C77474 = C77462 * C77395;
    const double C77473 = C77391 * C77462;
    const double C77472 = C77462 * ae;
    const double C77479 = C77462 + C77475;
    const double C77628 = C77462 + C77627;
    const double C77702 = C77462 + C77701;
    const double C78495 = C77462 * C77614;
    const double C78494 = C77506 * C77462;
    const double C78611 = C77462 * C77688;
    const double C78707 = C77549 * C77462;
    const double C77526 = C77524 * C77395;
    const double C77531 = ae * C77524;
    const double C77530 = C77391 * C77524;
    const double C78047 = C77506 * C77524;
    const double C78300 = C77524 * C77688;
    const double C78561 = C77549 * C77524;
    const double C77525 = C77391 * C77523;
    const double C78003 = C77506 * C77523;
    const double C10382 =
        (2 * C77549 * C77516 + C77549 * (C77516 + C77523 * C77688)) /
        std::pow(C77335, 2);
    const double C10383 =
        (3 * (C77516 + C77523 * C77688) +
         C77549 * (2 * C77549 * C77523 + C77549 * (C77523 + C77535 * C77688))) /
        std::pow(C77335, 2);
    const double C77569 = C77567 * C77395;
    const double C77574 = ae * C77567;
    const double C77573 = C77391 * C77567;
    const double C78093 = C77567 * C77614;
    const double C78346 = C77549 * C77567;
    const double C78444 = C77506 * C77567;
    const double C77568 = C77391 * C77566;
    const double C78281 = C77549 * C77566;
    const double C78427 = C77506 * C77566;
    const double C5680 =
        (2 * C77506 * C77559 + C77506 * (C77559 + C77566 * C77614)) /
        std::pow(C77335, 2);
    const double C5681 =
        (3 * (C77559 + C77566 * C77614) +
         C77506 * (2 * C77506 * C77566 + C77506 * (C77566 + C77578 * C77614))) /
        std::pow(C77335, 2);
    const double C6234 = (ae * (C77403 + C77416 * C77614) +
                          C77549 * (C77559 + C77566 * C77614)) /
                         std::pow(C77335, 2);
    const double C77601 = C77391 * C77600;
    const double C78017 = C77506 * C77600;
    const double C78242 = C77549 * C77600;
    const double C6312 = (ae * (C77403 + C77416 * C77688) +
                          C77506 * (C77597 + C77600 * C77688)) /
                         std::pow(C77335, 2);
    const double C10478 =
        (2 * C77549 * C77597 + C77549 * (C77597 + C77600 * C77688)) /
        std::pow(C77335, 2);
    const double C77623 = C77429 + C77622;
    const double C78088 = C77391 * C77642;
    const double C78092 = C77506 * C77642;
    const double C78258 = C77549 * C77642;
    const double C451 =
        (3 * (C77639 + C77642 * C77395) +
         C77391 * (2 * C77391 * C77642 +
                   C77391 * (C77642 + C77464 * C77463 * C77636 * C77395))) /
        std::pow(C77335, 2);
    const double C1282 = (ae * (C77555 + C77560 * C77395) +
                          C77506 * (C77639 + C77642 * C77395)) /
                         std::pow(C77335, 2);
    const double C2215 = (ae * (C77512 + C77517 * C77395) +
                          C77549 * (C77639 + C77642 * C77395)) /
                         std::pow(C77335, 2);
    const double C77659 = C77391 * C77658;
    const double C78309 = C77549 * C77658;
    const double C78437 = C77506 * C77658;
    const double C5868 =
        (2 * C77506 * C77655 + C77506 * (C77655 + C77658 * C77614)) /
        std::pow(C77335, 2);
    const double C5869 =
        (3 * (C77655 + C77658 * C77614) +
         C77506 * (2 * C77506 * C77658 + C77506 * (C77658 + C77664 * C77614))) /
        std::pow(C77335, 2);
    const double C6560 = (ae * (C77403 + C77416 * C77614) +
                          C77549 * (C77655 + C77658 * C77614)) /
                         std::pow(C77335, 2);
    const double C78109 = C77391 * C77679;
    const double C78112 = C77506 * C77679;
    const double C78317 = C77549 * C77679;
    const double C567 =
        (3 * (C77676 + C77679 * C77395) +
         C77391 * (2 * C77391 * C77679 +
                   C77391 * (C77679 + C77464 * C77463 * C77673 * C77395))) /
        std::pow(C77335, 2);
    const double C1466 = (ae * (C77555 + C77560 * C77395) +
                          C77506 * (C77676 + C77679 * C77395)) /
                         std::pow(C77335, 2);
    const double C2399 = (ae * (C77512 + C77517 * C77395) +
                          C77549 * (C77676 + C77679 * C77395)) /
                         std::pow(C77335, 2);
    const double C77697 = C77429 + C77696;
    const double C77433 = 2 * C77428;
    const double C5630 =
        (2 * (ae * C77403 + C77506 * C77516) + ae * (C77403 + C77416 * C77614) +
         C77506 * (C77516 + ae * C77506 * C77416 +
                   C77506 * (C77428 + C77506 * C77523))) /
        std::pow(C77335, 2);
    const double C10432 =
        (2 * (ae * C77403 + C77549 * C77559) + ae * (C77403 + C77416 * C77688) +
         C77549 * (C77559 + ae * C77549 * C77416 +
                   C77549 * (C77428 + C77549 * C77566))) /
        std::pow(C77335, 2);
    const double C5726 =
        (2 * (ae * C77403 + C77506 * C77597) + ae * (C77403 + C77416 * C77614) +
         C77506 *
             (C77597 + ae * C78002 + C77506 * (C77428 + C77506 * C77600))) /
        std::pow(C77335, 2);
    const double C6232 = (C77506 * C77559 + ae * C77549 * C78002 +
                          C77549 * (ae * C78002 + C77549 * C77506 * C77566)) /
                         std::pow(C77335, 2);
    const double C6314 =
        (C77549 * C77597 + ae * C77549 * C78002 +
         C77506 * (ae * C77549 * C77416 + C77506 * C77549 * C77600)) /
        std::pow(C77335, 2);
    const double C6558 = (C77506 * C77655 + ae * C77549 * C78002 +
                          C77549 * (ae * C78002 + C77549 * C77506 * C77658)) /
                         std::pow(C77335, 2);
    const double C6048 = (C77506 * C77403 + C78002 * C77688) / C77335;
    const double C10620 =
        (2 * (ae * C77403 + C77549 * C77655) + ae * (C77403 + C77416 * C77688) +
         C77549 *
             (C77655 + ae * C78280 + C77549 * (C77428 + C77549 * C77658))) /
        std::pow(C77335, 2);
    const double C77442 = C77408 + C77438;
    const double C77441 = C77437 * ae;
    const double C77467 = 2 * C77437;
    const double C78025 = C77506 * C77437;
    const double C78324 = C77549 * C77437;
    const double C78053 = C77408 + C78049;
    const double C78052 = C78048 * ae;
    const double C78445 = C77549 * C78048;
    const double C78496 = 2 * C78048;
    const double C78352 = C77408 + C78348;
    const double C78351 = C78347 * ae;
    const double C78709 = 2 * C78347;
    const double C78044 = 2 * C77520;
    const double C77763 = C77506 * C77519;
    const double C327 =
        (2 * (ae * C77512 + C77391 * C77597) + ae * (C77512 + C77517 * C77395) +
         C77391 * (C77597 + ae * C77519 +
                   C77391 * (C77520 + C77391 * C77431 * C77430 * C77594))) /
        std::pow(C77335, 2);
    const double C2214 = (C77391 * C77639 + ae * C77549 * C77519 +
                          C77549 * (ae * C77519 + C77549 * C77391 * C77642)) /
                         std::pow(C77335, 2);
    const double C2398 = (C77391 * C77676 + ae * C77549 * C77519 +
                          C77549 * (ae * C77519 + C77549 * C77391 * C77679)) /
                         std::pow(C77335, 2);
    const double C1794 = (C77391 * C77512 + C77519 * C77688) / C77335;
    const double C10666 =
        (2 * (ae * C77512 + C77549 * C77676) + ae * (C77512 + C77517 * C77688) +
         C77549 *
             (C77676 + ae * C78299 + C77549 * (C77520 + C77549 * C77679))) /
        std::pow(C77335, 2);
    const double C78343 = 2 * C77563;
    const double C5822 =
        (2 * (ae * C77555 + C77506 * C77639) + ae * (C77555 + C77560 * C77614) +
         C77506 * (C77639 + ae * C77506 * C77560 +
                   C77506 * (C77563 + C77506 * C77642))) /
        std::pow(C77335, 2);
    const double C77897 = C77549 * C77562;
    const double C518 =
        (2 * (ae * C77555 + C77391 * C77655) + ae * (C77555 + C77560 * C77395) +
         C77391 * (C77655 + ae * C77562 +
                   C77391 * (C77563 + C77391 * C77431 * C77430 * C77652))) /
        std::pow(C77335, 2);
    const double C1281 = (C77391 * C77639 + ae * C77506 * C77562 +
                          C77506 * (ae * C77562 + C77506 * C77391 * C77642)) /
                         std::pow(C77335, 2);
    const double C1465 = (C77391 * C77676 + ae * C77506 * C77562 +
                          C77506 * (ae * C77562 + C77506 * C77391 * C77679)) /
                         std::pow(C77335, 2);
    const double C975 = (C77391 * C77555 + C77562 * C77614) / C77335;
    const double C78187 = C77549 * C78091;
    const double C5914 =
        (2 * (ae * C77555 + C77506 * C77676) + ae * (C77555 + C77560 * C77614) +
         C77506 *
             (C77676 + ae * C78091 + C77506 * (C77563 + C77506 * C77679))) /
        std::pow(C77335, 2);
    const double C78473 = C77440 + C78471;
    const double C78605 = C78603 * C77688;
    const double C78677 = C77440 + C78675;
    const double C77542 = C77524 + C77540;
    const double C78072 = C77506 * C78068;
    const double C78304 = C78068 * C77688;
    const double C78614 = C77524 + C78612;
    const double C77585 = C77567 + C77583;
    const double C78101 = C78099 * C77614;
    const double C78367 = C77549 * C78099;
    const double C78456 = C77506 * C78099;
    const double C78528 = C77567 + C78525;
    const double C78630 = C77549 * C78626;
    const double C53269 = C79308 * C1801;
    const double C78670 = C77523 + C78669;
    const double C53441 = C79306 * C2021;
    const double C78550 = C77600 + C78549;
    const double C78579 = C77506 * C78578;
    const double C27129 = C79307 * C982;
    const double C78480 = C77566 + C78479;
    const double C78604 = C77549 * C78602;
    const double C462 = C79307 * C450;
    const double C77647 = C77642 + C77646;
    const double C78100 = C77506 * C78098;
    const double C78261 = C77549 * C78098;
    const double C27502 = C79306 * C1382;
    const double C78535 = C77658 + C78534;
    const double C78617 = C77549 * C78616;
    const double C578 = C79308 * C566;
    const double C77684 = C77679 + C77683;
    const double C78116 = C77506 * C78115;
    const double C78320 = C77549 * C78115;
    const double C78983 = C78981 * C78974;
    const double C78982 = C78981 / C78976;
    const double C78992 = C78989 * C78981;
    const double C79216 = C78981 * C78977;
    const double C79253 = C79220 * C78981;
    const double C79247 = C78981 * C79213;
    const double C79063 = C79009 / C78976;
    const double C79065 = C79009 * C79062;
    const double C79072 = C78989 * C79009;
    const double C79231 = C79009 * C79064;
    const double C79259 = C79220 * C79009;
    const double C79257 = C79009 * C79225;
    const double C79105 = C79027 / C78976;
    const double C79107 = C79027 * C79104;
    const double C79114 = C78989 * C79027;
    const double C79237 = C79027 * C79106;
    const double C79262 = C79220 * C79027;
    const double C79260 = C79027 * C79227;
    const double C92 =
        -(((-4 * C77337) / C77335 -
           (C77334 * (C79306 - (C77334 * 2 * C77337) / C77335) * 2 * C77333) /
               C77335) *
          be) /
        C77335;
    const double C93 =
        (-(0 * be) / C77335) / (2 * C77335) -
        ((C79306 - (C77334 * 2 * C77337) / C77335) * be) / C77335;
    const double C94 =
        (-((C79306 - (C77334 * 2 * C77337) / C77335) * 2 * C77333) / C77335) /
        (2 * C77335);
    const double C95 =
        (-(2 * C77337) / C77335) / (2 * C77335) - (0 * be) / C77335;
    const double C26497 =
        -((C79306 - (C77334 * 2 * C77337) / C77335) * 2 * C77333) / C77335;
    const double C26498 = -(2 * C77337) / C77335;
    const double C26679 =
        -(((-4 * C77369) / C77335 -
           (C77352 * (C79308 - (C77352 * 2 * C77369) / C77335) * 2 * C77333) /
               C77335) *
          be) /
        C77335;
    const double C26680 =
        (-((C79308 - (C77352 * 2 * C77369) / C77335) * 2 * C77333) / C77335) /
        (2 * C77335);
    const double C186 = C166 * C98;
    const double C182 = C166 * C103;
    const double C180 = C166 * C97;
    const double C382 = C166 * C168;
    const double C380 = C166 * C167;
    const double C571 = C166 * C247;
    const double C877 = C166 * C748;
    const double C1180 = C166 * C859;
    const double C1810 = C166 * C1681;
    const double C2113 = C166 * C1792;
    const double C53270 = C166 * C1683;
    const double C53266 = C166 * C1690;
    const double C53264 = C166 * C1682;
    const double C53814 = C166 * C1906;
    const double C55314 = C166 * C3931;
    const double C384 = C372 * C98;
    const double C381 = C372 * C97;
    const double C1177 = C372 * C748;
    const double C2110 = C372 * C1681;
    const double C53560 = C372 * C1683;
    const double C53558 = C372 * C1682;
    const double C55626 = C372 * C3931;
    const double C26685 = C26551 * C168;
    const double C26682 = C26551 * C167;
    const double C27333 = C26551 * C859;
    const double C28069 = C26551 * C1792;
    const double C26683 = C26552 * C859;
    const double C52394 =
        -(((-4 * C77381) / C77335 -
           (C77355 * (C79307 - (C77355 * 2 * C77381) / C77335) * 2 * C77333) /
               C77335) *
          be) /
        C77335;
    const double C52395 =
        (-((C79307 - (C77355 * 2 * C77381) / C77335) * 2 * C77333) / C77335) /
        (2 * C77335);
    const double C265 = C245 * C98;
    const double C261 = C245 * C103;
    const double C259 = C245 * C97;
    const double C455 = C245 * C168;
    const double C641 = C245 * C247;
    const double C639 = C245 * C246;
    const double C991 = C245 * C748;
    const double C1576 = C245 * C973;
    const double C1924 = C245 * C1681;
    const double C2509 = C245 * C1906;
    const double C27130 = C245 * C750;
    const double C27126 = C245 * C757;
    const double C27124 = C245 * C749;
    const double C27418 = C245 * C859;
    const double C29907 = C245 * C3931;
    const double C643 = C631 * C98;
    const double C640 = C631 * C97;
    const double C1573 = C631 * C748;
    const double C2506 = C631 * C1681;
    const double C27678 = C631 * C750;
    const double C27676 = C631 * C749;
    const double C30547 = C631 * C3931;
    const double C52400 = C52140 * C247;
    const double C52397 = C52140 * C246;
    const double C53074 = C52140 * C973;
    const double C53895 = C52140 * C1906;
    const double C52398 = C52141 * C1906;
    const double C77405 = C77404 + C77402;
    const double C27227 = C79306 * C1088;
    const double C53725 = C79306 * C2315;
    const double C55317 = C79308 * C4051;
    const double C29906 = C79307 * C4169;
    const double C30016 = C79306 * C4283;
    const double C30337 = C79306 * C4613;
    const double C27128 = C245 * C758;
    const double C27229 = C79306 * C758;
    const double C53268 = C166 * C1691;
    const double C53443 = C79306 * C1691;
    const double C29905 = C245 * C3935;
    const double C30018 = C79306 * C3935;
    const double C55316 = C166 * C3935;
    const double C31367 = C245 * C5572;
    const double C31425 = C79306 * C5572;
    const double C31938 = C245 * C6050;
    const double C32036 = C79306 * C6050;
    const double C57238 = C166 * C6050;
    const double C61349 = C166 * C10324;
    const double C61451 = C79306 * C10324;
    const double C77417 = C77414 * ae;
    const double C4166 =
        (C77549 * C77506 * C77562 + C77506 * C77414 * ae) / C77335;
    const double C751 = C77391 * C77394 + C77414 * C77614;
    const double C1684 = C77391 * C77394 + C77414 * C77688;
    const double C3932 = C77549 * C77506 * C77414;
    const double C5567 =
        2 * C77506 * C77414 + C77506 * (C77414 + C77437 * C77614);
    const double C6043 = C77549 * (C77414 + C77437 * C77614);
    const double C10319 =
        2 * C77549 * C77414 + C77549 * (C77414 + C77437 * C77688);
    const double C77421 = C77419 + C77413;
    const double C78036 = C78034 + C77413;
    const double C78335 = C78333 + C77413;
    const double C6478 = (ae * (C77555 + C77549 * (C77549 * C77560 + C77413) +
                                C77549 * C77408 * ae) +
                          C77506 * (C77639 + ae * C77549 * C77517 +
                                    C77549 * (C77520 + C77549 * C77642))) /
                         std::pow(C77335, 2);
    const double C77420 = C77418 * C77398;
    const double C77619 = C77618 * C77398;
    const double C77693 = C77692 * C77398;
    const double C78037 = C78035 * ae;
    const double C6042 = C77506 * C77394 + C78035 * C77688;
    const double C12365 =
        2 * C77549 * C78035 + C77549 * (C78035 + C78048 * C77688);
    const double C78336 = C78334 * ae;
    const double C386 = C79308 * C375;
    const double C645 = C79307 * C634;
    const double C188 = C166 * C99;
    const double C267 = C245 * C99;
    const double C387 = C372 * C99;
    const double C646 = C631 * C99;
    const double C883 = C166 * C752;
    const double C997 = C245 * C752;
    const double C1185 = C372 * C752;
    const double C1581 = C631 * C752;
    const double C1816 = C166 * C1685;
    const double C1930 = C245 * C1685;
    const double C2118 = C372 * C1685;
    const double C2514 = C631 * C1685;
    const double C31365 = C245 * C5568;
    const double C31671 = C631 * C5568;
    const double C31936 = C245 * C6044;
    const double C32456 = C631 * C6044;
    const double C57236 = C166 * C6044;
    const double C57486 = C372 * C6044;
    const double C61347 = C166 * C10320;
    const double C61509 = C372 * C10320;
    const double C77760 = C77759 + C77402;
    const double C185 = C79308 * C175;
    const double C191 = C79308 * C176;
    const double C1809 = C79308 * C1799;
    const double C53447 = C79306 * C2019;
    const double C2221 = C79307 * C2211;
    const double C2405 = C79308 * C2395;
    const double C53817 = C79308 * C2397;
    const double C187 = C79308 * C169;
    const double C385 = C166 * C169;
    const double C457 = C245 * C169;
    const double C26686 = C26551 * C169;
    const double C189 = C79308 * C170;
    const double C388 = C166 * C170;
    const double C461 = C245 * C170;
    const double C26689 = C26551 * C170;
    const double C878 = C79308 * C858;
    const double C1178 = C166 * C858;
    const double C1287 = C245 * C858;
    const double C26684 = C26552 * C858;
    const double C27336 = C26551 * C858;
    const double C884 = C79308 * C862;
    const double C1186 = C166 * C862;
    const double C1294 = C245 * C862;
    const double C26687 = C26552 * C862;
    const double C27341 = C26551 * C862;
    const double C1811 = C79308 * C1791;
    const double C2111 = C166 * C1791;
    const double C2220 = C245 * C1791;
    const double C28072 = C26551 * C1791;
    const double C2114 = C166 * C1793;
    const double C28070 = C26551 * C1793;
    const double C53271 = C79308 * C1793;
    const double C1817 = C79308 * C1795;
    const double C2119 = C166 * C1795;
    const double C2227 = C245 * C1795;
    const double C28077 = C26551 * C1795;
    const double C10529 = C166 * C10378;
    const double C36190 = C26551 * C10378;
    const double C61348 = C79308 * C10378;
    const double C77894 = C77893 + C77402;
    const double C264 = C79307 * C254;
    const double C270 = C79307 * C255;
    const double C990 = C79307 * C980;
    const double C1288 = C79307 * C1278;
    const double C27421 = C79307 * C1280;
    const double C27506 = C79306 * C1380;
    const double C1472 = C79308 * C1462;
    const double C266 = C79307 * C248;
    const double C573 = C166 * C248;
    const double C644 = C245 * C248;
    const double C52401 = C52140 * C248;
    const double C268 = C79307 * C249;
    const double C577 = C166 * C249;
    const double C647 = C245 * C249;
    const double C52404 = C52140 * C249;
    const double C992 = C79307 * C972;
    const double C1471 = C166 * C972;
    const double C1574 = C245 * C972;
    const double C53077 = C52140 * C972;
    const double C1577 = C245 * C974;
    const double C27131 = C79307 * C974;
    const double C53075 = C52140 * C974;
    const double C998 = C79307 * C976;
    const double C1478 = C166 * C976;
    const double C1582 = C245 * C976;
    const double C53082 = C52140 * C976;
    const double C1925 = C79307 * C1905;
    const double C2404 = C166 * C1905;
    const double C2507 = C245 * C1905;
    const double C52399 = C52141 * C1905;
    const double C53898 = C52140 * C1905;
    const double C1931 = C79307 * C1909;
    const double C2411 = C166 * C1909;
    const double C2515 = C245 * C1909;
    const double C52402 = C52141 * C1909;
    const double C53903 = C52140 * C1909;
    const double C4832 = C245 * C4165;
    const double C29908 = C79307 * C4165;
    const double C53073 = C52141 * C4165;
    const double C55928 = C166 * C4165;
    const double C56029 = C52140 * C4165;
    const double C5965 = C245 * C5676;
    const double C31366 = C79307 * C5676;
    const double C57081 = C52140 * C5676;
    const double C6727 = C245 * C6228;
    const double C31937 = C79307 * C6228;
    const double C53076 = C52141 * C6228;
    const double C57727 = C166 * C6228;
    const double C57811 = C52140 * C6228;
    const double C77447 = C77444 + C77436;
    const double C77469 = 2 * C77461;
    const double C78472 = C77461 + C78469;
    const double C78484 = C77461 + C78483;
    const double C78676 = C77461 + C78673;
    const double C78691 = C77461 + C78690;
    const double C77916 = ae * C77911;
    const double C78470 = 2 * C77911;
    const double C78601 = C77549 * C77911;
    const double C6315 =
        (C77597 + C77600 * C77688 + ae * (C78002 + C77911 * C77688) +
         C77506 * (ae * (C77416 + C77440 * C77688) +
                   C77506 * (C77600 + C77606 * C77688))) /
        std::pow(C77335, 2);
    const double C12367 =
        (2 * C77549 * C78002 + C77549 * (C78002 + C77911 * C77688)) / C77335;
    const double C77937 = ae * C77932;
    const double C78674 = 2 * C77932;
    const double C78006 = C77416 + C78004;
    const double C78284 = C77416 + C78282;
    const double C77446 = C77443 * C77398;
    const double C77478 = C77429 + C77474;
    const double C77477 = C77473 * ae;
    const double C78070 = C77473 * C77614;
    const double C78069 = C77506 * C77473;
    const double C78369 = C77473 * C77688;
    const double C78368 = C77549 * C77473;
    const double C77484 = C77480 + C77472;
    const double C78499 = C78493 + C77472;
    const double C78713 = C78706 + C77472;
    const double C77483 = C77479 * C77398;
    const double C77629 = C77628 * C77398;
    const double C77703 = C77702 * C77398;
    const double C78501 = C77429 + C78495;
    const double C78500 = C78494 * ae;
    const double C78628 = C78494 * C77688;
    const double C78627 = C77549 * C78494;
    const double C78613 = C77429 + C78611;
    const double C78714 = C78707 * ae;
    const double C77528 = C77517 + C77526;
    const double C77541 = C77531 + C77539;
    const double C77608 = C77531 + C77607;
    const double C78489 = 2 * C77531;
    const double C78564 = C77531 + C78562;
    const double C78697 = C77531 + C78696;
    const double C77536 = 2 * C77530;
    const double C77534 = ae * C77530;
    const double C78024 = C77506 * C77530;
    const double C78303 = C77549 * C77530;
    const double C10377 =
        (2 * C77549 * C77519 + C77549 * (C77519 + C77530 * C77688)) / C77335;
    const double C78051 = C78047 + C77436;
    const double C78301 = C77517 + C78300;
    const double C78563 = ae * C78561;
    const double C78685 = 2 * C78561;
    const double C77527 = C77520 + C77525;
    const double C78005 = C77428 + C78003;
    const double C61350 = C79308 * C10382;
    const double C61352 = C79308 * C10383;
    const double C77571 = C77560 + C77569;
    const double C77584 = C77574 + C77582;
    const double C77666 = C77574 + C77665;
    const double C78527 = C77574 + C78523;
    const double C78539 = C77574 + C78538;
    const double C78702 = 2 * C77574;
    const double C77579 = 2 * C77573;
    const double C77577 = ae * C77573;
    const double C78097 = C77506 * C77573;
    const double C78323 = C77549 * C77573;
    const double C5675 =
        (2 * C77506 * C77562 + C77506 * (C77562 + C77573 * C77614)) / C77335;
    const double C6227 = (C77549 * (C77562 + C77573 * C77614) +
                          (C77414 + C77437 * C77614) * ae) /
                         C77335;
    const double C78095 = C77560 + C78093;
    const double C78350 = C78346 + C77436;
    const double C78446 = C77549 * C78444;
    const double C78524 = 2 * C78444;
    const double C78522 = ae * C78444;
    const double C77570 = C77563 + C77568;
    const double C78283 = C77428 + C78281;
    const double C31368 = C79307 * C5680;
    const double C31370 = C79307 * C5681;
    const double C31939 = C79307 * C6234;
    const double C77602 = C77520 + C77601;
    const double C78018 = C77428 + C78017;
    const double C10479 =
        (3 * (C77597 + C77600 * C77688) +
         C77549 * (2 * C78242 + C77549 * (C77600 + C77606 * C77688))) /
        std::pow(C77335, 2);
    const double C32034 = C79306 * C6312;
    const double C61453 = C79306 * C10478;
    const double C77624 = C77623 * C77398;
    const double C78094 = C77563 + C78092;
    const double C78259 = C77520 + C78258;
    const double C464 = C79307 * C451;
    const double C1295 = C79307 * C1282;
    const double C2228 = C79307 * C2215;
    const double C77660 = C77563 + C77659;
    const double C78310 = C77428 + C78309;
    const double C31577 = C79306 * C5868;
    const double C31579 = C79306 * C5869;
    const double C32294 = C79306 * C6560;
    const double C78113 = C77563 + C78112;
    const double C78318 = C77520 + C78317;
    const double C580 = C79308 * C567;
    const double C1479 = C79308 * C1466;
    const double C2412 = C79308 * C2399;
    const double C77698 = C77697 * C77398;
    const double C31427 = C79306 * C5726;
    const double C31935 = C79307 * C6232;
    const double C32038 = C79306 * C6314;
    const double C32291 = C79306 * C6558;
    const double C31934 = C245 * C6048;
    const double C32032 = C79306 * C6048;
    const double C57234 = C166 * C6048;
    const double C61609 = C79306 * C10620;
    const double C77445 = C77442 * ae;
    const double C100 = 3 * (C77394 + C77408 * C77395) +
                        C77391 * (2 * C77414 + C77391 * C77442);
    const double C753 = C77394 + C77408 * C77395 + C77442 * C77614;
    const double C754 = C77506 * (2 * C77414 + C77391 * C77442);
    const double C1686 = C77394 + C77408 * C77395 + C77442 * C77688;
    const double C1687 = C77549 * (2 * C77414 + C77391 * C77442);
    const double C3933 = C77549 * C77506 * C77442;
    const double C78027 = C78025 * ae;
    const double C6041 = C77506 * C77414 + C78025 * C77688;
    const double C78326 = C78324 * ae;
    const double C78055 = C78053 * ae;
    const double C5569 = 3 * (C77394 + C77408 * C77614) +
                         C77506 * (2 * C78035 + C77506 * C78053);
    const double C6045 = C77394 + C77408 * C77614 + C78053 * C77688;
    const double C8377 = C77549 * (2 * C78035 + C77506 * C78053);
    const double C6481 =
        (C77639 + ae * C77549 * C77517 + C77549 * (C77520 + C77549 * C77642) +
         ae * (C78091 + C77549 * (C77549 * C77506 * C77567 + C78052) +
               C77549 * C78048 * ae) +
         C77506 * (ae * (C77560 + C77549 * (C77549 * C77567 + C77436) +
                         C77549 * C77429 * ae) +
                   C77506 * (C77642 + ae * C77549 * C77524 +
                             C77549 * (C77531 + C77549 * C77645)))) /
        std::pow(C77335, 2);
    const double C78447 = C78445 * ae;
    const double C78354 = C78352 * ae;
    const double C10321 = 3 * (C77394 + C77408 * C77688) +
                          C77549 * (2 * C78334 + C77549 * C78352);
    const double C2225 = C79307 * C2214;
    const double C2409 = C79308 * C2398;
    const double C1813 = C79308 * C1794;
    const double C2116 = C166 * C1794;
    const double C2224 = C245 * C1794;
    const double C28075 = C26551 * C1794;
    const double C61658 = C79308 * C10666;
    const double C31527 = C79307 * C5822;
    const double C1292 = C79307 * C1281;
    const double C1476 = C79308 * C1465;
    const double C994 = C79307 * C975;
    const double C1475 = C166 * C975;
    const double C1579 = C245 * C975;
    const double C53080 = C52140 * C975;
    const double C78475 = C77506 * C78473;
    const double C78607 = C77911 + C78605;
    const double C78679 = C77549 * C78677;
    const double C77544 = C77391 * C77542;
    const double C78209 = C77506 * C77542;
    const double C78305 = C77530 + C78304;
    const double C78686 = C77549 * C78614;
    const double C77587 = C77391 * C77585;
    const double C78396 = C77506 * C77585;
    const double C78413 = C77549 * C77585;
    const double C78103 = C77573 + C78101;
    const double C78458 = C77549 * C78456;
    const double C78530 = C77506 * C78528;
    const double C78658 = C77549 * C78528;
    const double C61345 =
        (4 * (2 * C77549 * C77523 + C77549 * C78670) +
         C77549 * (3 * C78670 +
                   C77549 * (2 * C77549 * C77535 +
                             C77549 * (C77535 + std::pow(C77397, 7) * bs[7] *
                                                    C77510 * C77688)))) /
        std::pow(C77335, 2);
    const double C61448 =
        (4 * (2 * C78242 + C77549 * C78550) +
         C77549 * (3 * C78550 +
                   C77549 * (2 * C78578 +
                             C77549 * (C77606 + std::pow(C77397, 7) * bs[7] *
                                                    C77594 * C77688)))) /
        std::pow(C77335, 2);
    const double C31363 =
        (4 * (2 * C78427 + C77506 * C78480) +
         C77506 * (3 * C78480 +
                   C77506 * (2 * C77506 * C77578 +
                             C77506 * (C77578 + std::pow(C77397, 7) * bs[7] *
                                                    C77553 * C77614)))) /
        std::pow(C77335, 2);
    const double C452 =
        (4 * (2 * C77391 * C77642 + C77391 * C77647) +
         C77391 * (3 * C77647 +
                   C77391 * (2 * C77391 * C77645 +
                             C77391 * (C77645 + std::pow(C77397, 7) * bs[7] *
                                                    C77636 * C77395)))) /
        std::pow(C77335, 2);
    const double C31573 =
        (4 * (2 * C78437 + C77506 * C78535) +
         C77506 * (3 * C78535 +
                   C77506 * (2 * C77506 * C77664 +
                             C77506 * (C77664 + std::pow(C77397, 7) * bs[7] *
                                                    C77652 * C77614)))) /
        std::pow(C77335, 2);
    const double C568 =
        (4 * (2 * C77391 * C77679 + C77391 * C77684) +
         C77391 * (3 * C77684 +
                   C77391 * (2 * C77391 * C77682 +
                             C77391 * (C77682 + std::pow(C77397, 7) * bs[7] *
                                                    C77673 * C77395)))) /
        std::pow(C77335, 2);
    const double C78984 = C78983 * C78977;
    const double C78991 = C78983 / C78990;
    const double C79217 = C78989 * C78983;
    const double C79215 = C78983 / C78972;
    const double C745 = (C78981 * std::pow(C78977, 2)) / C78975 + C78982;
    const double C78993 = C78992 * C78977;
    const double C79221 = C78974 * C78992;
    const double C79219 = 2 * C78992;
    const double C79263 = C78992 / C79223;
    const double C91 = C78992 / C79256;
    const double C15086 = C78992 / C78976;
    const double C79249 = C79216 / C78972;
    const double C746 = (-2 * C78989 * C79216) / C78972;
    const double C79279 = C79247 / C78975;
    const double C4921 = (C79009 * std::pow(C79064, 2)) / C78975 + C79063;
    const double C79066 = C79065 * C79064;
    const double C79071 = C79065 / C78990;
    const double C79229 = C79065 / C78972;
    const double C79226 = C78989 * C79065;
    const double C79073 = C79072 * C79064;
    const double C79235 = C79062 * C79072;
    const double C79234 = 2 * C79072;
    const double C79269 = C79072 / C79223;
    const double C5565 = C79072 / C79256;
    const double C15083 = C79072 / C78976;
    const double C79265 = C79231 / C78972;
    const double C4922 = (-2 * C78989 * C79231) / C78972;
    const double C79284 = C79257 / C78975;
    const double C9011 = (C79027 * std::pow(C79106, 2)) / C78975 + C79105;
    const double C79108 = C79107 * C79106;
    const double C79113 = C79107 / C78990;
    const double C79230 = C79107 / C78972;
    const double C79228 = C78989 * C79107;
    const double C79115 = C79114 * C79106;
    const double C79241 = C79104 * C79114;
    const double C79240 = 2 * C79114;
    const double C79275 = C79114 / C79223;
    const double C10318 = C79114 / C79256;
    const double C20477 = C79114 / C78976;
    const double C79271 = C79237 / C78972;
    const double C9012 = (-2 * C78989 * C79237) / C78972;
    const double C79286 = C79260 / C78975;
    const double C118 = C93 * C103;
    const double C115 = C93 * C102;
    const double C775 = C93 * C758;
    const double C774 = C93 * C757;
    const double C1708 = C93 * C1691;
    const double C1707 = C93 * C1690;
    const double C3944 = C93 * C3935;
    const double C5581 = C93 * C5572;
    const double C6063 = C93 * C6050;
    const double C6061 = C93 * C6048;
    const double C10333 = C93 * C10324;
    const double C116 = C95 * C103;
    const double C26946 = C26497 * C752;
    const double C26940 = C26497 * C748;
    const double C26936 = C26497 * C750;
    const double C26934 = C26497 * C749;
    const double C29688 = C26497 * C3931;
    const double C31263 = C26497 * C5568;
    const double C31761 = C26497 * C6044;
    const double C53167 = C26497 * C1685;
    const double C53163 = C26497 * C1681;
    const double C53161 = C26497 * C1683;
    const double C53159 = C26497 * C1682;
    const double C61292 = C26497 * C10320;
    const double C26503 = C26498 * C103;
    const double C26501 = C26498 * C757;
    const double C26500 = C26498 * C102;
    const double C26939 = C26498 * C5572;
    const double C26937 = C26498 * C758;
    const double C27240 = C26498 * C862;
    const double C27238 = C26498 * C752;
    const double C27232 = C26498 * C858;
    const double C27230 = C26498 * C748;
    const double C27228 = C26498 * C750;
    const double C27224 = C26498 * C859;
    const double C27222 = C26498 * C749;
    const double C27511 = C26498 * C976;
    const double C27508 = C26498 * C975;
    const double C27505 = C26498 * C972;
    const double C27501 = C26498 * C974;
    const double C27499 = C26498 * C973;
    const double C27763 = C26498 * C6048;
    const double C27762 = C26498 * C1691;
    const double C27761 = C26498 * C1690;
    const double C27760 = C26498 * C3935;
    const double C29690 = C26498 * C6050;
    const double C30017 = C26498 * C3931;
    const double C30336 = C26498 * C4165;
    const double C31424 = C26498 * C5568;
    const double C31576 = C26498 * C5676;
    const double C32035 = C26498 * C6044;
    const double C32293 = C26498 * C6228;
    const double C36012 = C26498 * C10324;
    const double C53454 = C26498 * C1795;
    const double C53452 = C26498 * C1685;
    const double C53450 = C26498 * C1794;
    const double C53446 = C26498 * C1791;
    const double C53444 = C26498 * C1681;
    const double C53442 = C26498 * C1683;
    const double C53440 = C26498 * C1793;
    const double C53438 = C26498 * C1792;
    const double C53436 = C26498 * C1682;
    const double C53730 = C26498 * C1909;
    const double C53726 = C26498 * C1905;
    const double C53722 = C26498 * C1906;
    const double C61452 = C26498 * C10378;
    const double C61450 = C26498 * C10320;
    const double C197 = C182 + C183;
    const double C196 = C180 + C181;
    const double C582 = C571 + C572;
    const double C53281 = C53266 + C53267;
    const double C53280 = C53264 + C53265;
    const double C53818 = C53814 + C53815;
    const double C394 = C381 + C382;
    const double C53566 = C53558 + C2113;
    const double C276 = C261 + C262;
    const double C275 = C259 + C260;
    const double C466 = C455 + C456;
    const double C27141 = C27126 + C27127;
    const double C27140 = C27124 + C27125;
    const double C27422 = C27418 + C27419;
    const double C653 = C640 + C641;
    const double C27680 = C27676 + C1576;
    const double C77406 = ae * C77405;
    const double C104 =
        (C77392 * C77390 * C77399 + C77391 * C77405 + C77391 * C77394 * ae) /
        C77335;
    const double C756 = (C77506 * C77405) / C77335;
    const double C1689 = (C77549 * C77405) / C77335;
    const double C27142 = C27128 + C27129;
    const double C53282 = C53268 + C53269;
    const double C29913 = C29905 + C29906;
    const double C55323 = C55316 + C55317;
    const double C77764 = C77763 + C77417;
    const double C77898 = C77897 + C77417;
    const double C4175 = C79307 * C4166;
    const double C4721 = C166 * C4166;
    const double C4834 = C245 * C4166;
    const double C30340 = C26498 * C4166;
    const double C53078 = C52141 * C4166;
    const double C56032 = C52140 * C4166;
    const double C879 = C166 * C751;
    const double C993 = C245 * C751;
    const double C1182 = C372 * C751;
    const double C1578 = C631 * C751;
    const double C26942 = C26497 * C751;
    const double C27234 = C26498 * C751;
    const double C1812 = C166 * C1684;
    const double C1926 = C245 * C1684;
    const double C2115 = C372 * C1684;
    const double C2511 = C631 * C1684;
    const double C53165 = C26497 * C1684;
    const double C53448 = C26498 * C1684;
    const double C4056 = C166 * C3932;
    const double C4174 = C245 * C3932;
    const double C4391 = C372 * C3932;
    const double C4833 = C631 * C3932;
    const double C29691 = C26497 * C3932;
    const double C30019 = C26498 * C3932;
    const double C6877 = C166 * C5567;
    const double C6951 = C245 * C5567;
    const double C7089 = C372 * C5567;
    const double C7373 = C631 * C5567;
    const double C32536 = C26497 * C5567;
    const double C32745 = C26498 * C5567;
    const double C7585 = C166 * C6043;
    const double C7691 = C245 * C6043;
    const double C7893 = C372 * C6043;
    const double C8305 = C631 * C6043;
    const double C33184 = C26497 * C6043;
    const double C33489 = C26498 * C6043;
    const double C11797 = C166 * C10319;
    const double C11871 = C245 * C10319;
    const double C12009 = C372 * C10319;
    const double C12293 = C631 * C10319;
    const double C62665 = C26497 * C10319;
    const double C62873 = C26498 * C10319;
    const double C77423 = ae * C77421;
    const double C77422 = C77391 * C77421;
    const double C77432 = 2 * C77421;
    const double C77711 = C77506 * C77421;
    const double C77813 = C77549 * C77421;
    const double C759 = (C77405 + C77421 * C77614) / C77335;
    const double C1692 = (C77405 + C77421 * C77688) / C77335;
    const double C78039 = ae * C78036;
    const double C78038 = C77506 * C78036;
    const double C78046 = 2 * C78036;
    const double C78154 = C77549 * C78036;
    const double C78338 = ae * C78335;
    const double C78337 = C77549 * C78335;
    const double C78345 = 2 * C78335;
    const double C32206 = C79307 * C6478;
    const double C764 = (2 * ae * C77506 * C77403 + C77391 * C77506 * C77420) /
                        std::pow(C77335, 2);
    const double C766 =
        ((C77394 + C77395 * C77396 * C77400) * C77398 + C77420 * C77614) /
        std::pow(C77335, 2);
    const double C1697 = (2 * ae * C77549 * C77403 + C77391 * C77549 * C77420) /
                         std::pow(C77335, 2);
    const double C1699 =
        ((C77394 + C77395 * C77396 * C77400) * C77398 + C77420 * C77688) /
        std::pow(C77335, 2);
    const double C3939 = (C77549 * C77506 * C77420) / std::pow(C77335, 2);
    const double C376 =
        (2 * C77391 * C77619 +
         C77391 *
             (C77619 + (C77429 + C77614 * C77430 * C77431) * C77398 * C77395)) /
        std::pow(C77335, 2);
    const double C1168 = (2 * ae * C77391 * C77512 + C77506 * C77391 * C77619) /
                         std::pow(C77335, 2);
    const double C2101 = (C77549 * C77391 * C77619) / std::pow(C77335, 2);
    const double C2103 =
        ((C77394 + C77614 * C77396 * C77400) * C77398 + C77619 * C77688) /
        std::pow(C77335, 2);
    const double C4385 = (2 * ae * C77549 * C77512 + C77506 * C77549 * C77619) /
                         std::pow(C77335, 2);
    const double C635 =
        (2 * C77391 * C77693 +
         C77391 *
             (C77693 + (C77429 + C77688 * C77430 * C77431) * C77398 * C77395)) /
        std::pow(C77335, 2);
    const double C1564 = (C77506 * C77391 * C77693) / std::pow(C77335, 2);
    const double C1566 =
        ((C77394 + C77688 * C77396 * C77400) * C77398 + C77693 * C77614) /
        std::pow(C77335, 2);
    const double C2497 = (2 * ae * C77391 * C77555 + C77549 * C77391 * C77693) /
                         std::pow(C77335, 2);
    const double C4827 = (2 * ae * C77506 * C77555 + C77549 * C77506 * C77693) /
                         std::pow(C77335, 2);
    const double C78188 = C78187 + C78037;
    const double C6480 =
        (ae * C77512 + C77549 * C77639 + ae * (C77549 * C78091 + C78037) +
         C77506 * (ae * (C77549 * C77560 + C77413) +
                   C77506 * (C77520 + C77549 * C77642))) /
        std::pow(C77335, 2);
    const double C31759 = C26497 * C6042;
    const double C31932 = C245 * C6042;
    const double C32031 = C26498 * C6042;
    const double C32454 = C631 * C6042;
    const double C57232 = C166 * C6042;
    const double C57484 = C372 * C6042;
    const double C37937 = C26497 * C12365;
    const double C38082 = C245 * C12365;
    const double C38157 = C26498 * C12365;
    const double C38506 = C631 * C12365;
    const double C63349 = C166 * C12365;
    const double C63555 = C372 * C12365;
    const double C77761 = ae * C77760;
    const double C860 =
        (C77392 * C77390 * C77509 + C77506 * C77760 + C77506 * C77394 * ae) /
        C77335;
    const double C4047 = (C77549 * C77760) / C77335;
    const double C6140 = (C77760 + C78036 * C77688) / C77335;
    const double C199 = C186 + C187;
    const double C395 = C384 + C385;
    const double C467 = C457 + C458;
    const double C200 = C188 + C189;
    const double C396 = C387 + C388;
    const double C468 = C461 + C462;
    const double C892 = C877 + C878;
    const double C1193 = C1177 + C1178;
    const double C895 = C883 + C884;
    const double C1195 = C1185 + C1186;
    const double C1825 = C1810 + C1811;
    const double C2126 = C2110 + C2111;
    const double C2232 = C2220 + C2221;
    const double C53567 = C53560 + C2114;
    const double C53283 = C53270 + C53271;
    const double C1828 = C1816 + C1817;
    const double C2128 = C2118 + C2119;
    const double C61514 = C61509 + C10529;
    const double C61355 = C61347 + C61348;
    const double C77895 = ae * C77894;
    const double C1907 =
        (C77392 * C77390 * C77552 + C77549 * C77894 + C77549 * C77394 * ae) /
        C77335;
    const double C1299 = C1287 + C1288;
    const double C278 = C265 + C266;
    const double C583 = C573 + C574;
    const double C654 = C643 + C644;
    const double C279 = C267 + C268;
    const double C584 = C577 + C578;
    const double C655 = C646 + C647;
    const double C1006 = C991 + C992;
    const double C1483 = C1471 + C1472;
    const double C1589 = C1573 + C1574;
    const double C27681 = C27678 + C1577;
    const double C27143 = C27130 + C27131;
    const double C1009 = C997 + C998;
    const double C1591 = C1581 + C1582;
    const double C1939 = C1924 + C1925;
    const double C2416 = C2404 + C2405;
    const double C2522 = C2506 + C2507;
    const double C1942 = C1930 + C1931;
    const double C2524 = C2514 + C2515;
    const double C30549 = C30547 + C4832;
    const double C29914 = C29907 + C29908;
    const double C31676 = C31671 + C5965;
    const double C31373 = C31365 + C31366;
    const double C32462 = C32456 + C6727;
    const double C31946 = C31936 + C31937;
    const double C77450 = ae * C77447;
    const double C77449 = C77391 * C77447;
    const double C77466 = 2 * C77447;
    const double C77714 = C77447 * C77614;
    const double C77720 = C77506 * C77447;
    const double C77816 = C77447 * C77688;
    const double C77822 = C77549 * C77447;
    const double C78474 = C77506 * C78472;
    const double C78485 = C77506 * C78484;
    const double C78678 = C77549 * C78676;
    const double C78692 = C77549 * C78691;
    const double C77921 = 2 * C77916;
    const double C78468 = C77523 + C77916;
    const double C78482 = C77600 + C77916;
    const double C78606 = C77916 + C78604;
    const double C78618 = C77916 + C78617;
    const double C12511 =
        (2 * (ae * C78002 + C77549 * C78427) + ae * (C78002 + C77911 * C77688) +
         C77549 * (C78427 + ae * C77549 * C77911 +
                   C77549 * (C77916 + C77549 * C77506 * C77578))) /
        std::pow(C77335, 2);
    const double C12785 =
        (2 * (ae * C78002 + C77549 * C78437) + ae * (C78002 + C77911 * C77688) +
         C77549 * (C78437 + ae * C77549 * C77911 +
                   C77549 * (C77916 + C77549 * C77506 * C77664))) /
        std::pow(C77335, 2);
    const double C32040 = C79306 * C6315;
    const double C12372 = C93 * C12367;
    const double C36011 = C26498 * C12367;
    const double C38080 = C245 * C12367;
    const double C38158 = C79306 * C12367;
    const double C63347 = C166 * C12367;
    const double C77942 = 2 * C77937;
    const double C78580 = C77937 + C78579;
    const double C78672 = C77566 + C77937;
    const double C78689 = C77658 + C77937;
    const double C6235 =
        (C77559 + C77566 * C77614 + ae * C77549 * C78006 +
         C77549 * (ae * C78006 + C77549 * (C77566 + C77578 * C77614))) /
        std::pow(C77335, 2);
    const double C6561 =
        (C77655 + C77658 * C77614 + ae * C77549 * C78006 +
         C77549 * (ae * C78006 + C77549 * (C77658 + C77664 * C77614))) /
        std::pow(C77335, 2);
    const double C8523 =
        (ae * (2 * C78002 + C77506 * C78006) +
         C77549 * (2 * C77506 * C77566 + C77506 * (C77566 + C77578 * C77614))) /
        std::pow(C77335, 2);
    const double C8591 =
        (2 * (ae * C77549 * C77416 + C77506 * C78242) + ae * C77549 * C78006 +
         C77506 * (C78242 + ae * C77549 * C77911 +
                   C77506 * (C77937 + C77506 * C77549 * C77606))) /
        std::pow(C77335, 2);
    const double C8797 =
        (ae * (2 * C78002 + C77506 * C78006) +
         C77549 * (2 * C77506 * C77658 + C77506 * (C77658 + C77664 * C77614))) /
        std::pow(C77335, 2);
    const double C38078 =
        (2 * (ae * C78006 + C77549 * C78480) + ae * (C78006 + C78473 * C77688) +
         C77549 * (C78480 + ae * C77549 * C78473 +
                   C77549 * (ae * C78473 +
                             C77549 * (C77578 + std::pow(C77397, 7) * bs[7] *
                                                    C77553 * C77614)))) /
        std::pow(C77335, 2);
    const double C38365 =
        (2 * (ae * C78006 + C77549 * C78535) + ae * (C78006 + C78473 * C77688) +
         C77549 * (C78535 + ae * C77549 * C78473 +
                   C77549 * (ae * C78473 +
                             C77549 * (C77664 + std::pow(C77397, 7) * bs[7] *
                                                    C77652 * C77614)))) /
        std::pow(C77335, 2);
    const double C5573 = (3 * (C77403 + C77416 * C77614) +
                          C77506 * (2 * C78002 + C77506 * C78006)) /
                         C77335;
    const double C6051 = (C77403 + C77416 * C77614 + C78006 * C77688) / C77335;
    const double C8379 = (C77549 * (2 * C78002 + C77506 * C78006)) / C77335;
    const double C37934 =
        (2 * C77549 * C78006 + C77549 * (C78006 + C78473 * C77688)) / C77335;
    const double C12579 =
        (ae * (2 * C78280 + C77549 * C78284) +
         C77506 * (2 * C78242 + C77549 * (C77600 + C77606 * C77688))) /
        std::pow(C77335, 2);
    const double C32029 =
        (2 * (ae * C78284 + C77506 * C78550) + ae * (C78006 + C78473 * C77688) +
         C77506 * (C78550 + ae * (C77911 + C77506 * C77476 * C77688) +
                   C77506 * (ae * (C77440 + C77476 * C77688) +
                             C77506 * (C77606 + std::pow(C77397, 7) * bs[7] *
                                                    C77594 * C77688)))) /
        std::pow(C77335, 2);
    const double C36144 =
        (ae * (3 * C78284 +
               C77549 * (2 * C77932 + C77549 * (C77440 + C77476 * C77688))) +
         C77506 * (3 * C78550 +
                   C77549 * (2 * C78578 +
                             C77549 * (C77606 + std::pow(C77397, 7) * bs[7] *
                                                    C77594 * C77688)))) /
        std::pow(C77335, 2);
    const double C10325 = (3 * (C77403 + C77416 * C77688) +
                           C77549 * (2 * C78280 + C77549 * C78284)) /
                          C77335;
    const double C77448 = C77391 * C77446;
    const double C77718 = C77506 * C77446;
    const double C77820 = C77549 * C77446;
    const double C767 = (2 * ae * (C77403 + C77416 * C77614) +
                         C77391 * (C77420 + C77446 * C77614)) /
                        std::pow(C77335, 2);
    const double C1700 = (2 * ae * (C77403 + C77416 * C77688) +
                          C77391 * (C77420 + C77446 * C77688)) /
                         std::pow(C77335, 2);
    const double C5576 =
        (2 * C77506 * C77420 + C77506 * (C77420 + C77446 * C77614)) /
        std::pow(C77335, 2);
    const double C6056 =
        (C77549 * (C77420 + C77446 * C77614)) / std::pow(C77335, 2);
    const double C10328 =
        (2 * C77549 * C77420 + C77549 * (C77420 + C77446 * C77688)) /
        std::pow(C77335, 2);
    const double C77482 = C77391 * C77478;
    const double C77481 = C77478 * ae;
    const double C78210 = C77506 * C77478;
    const double C78414 = C77549 * C77478;
    const double C6801 =
        2 * C77506 * C77442 + C77506 * (C77442 + C77478 * C77614);
    const double C7477 = C77549 * (C77442 + C77478 * C77614);
    const double C11721 =
        2 * C77549 * C77442 + C77549 * (C77442 + C77478 * C77688);
    const double C78076 = C78072 + C77477;
    const double C78371 = C78367 + C77477;
    const double C78074 = C77437 + C78070;
    const double C78073 = C78069 * ae;
    const double C78457 = C77549 * C78069;
    const double C12366 =
        2 * C77549 * C78025 + C77549 * (C78025 + C78069 * C77688);
    const double C78373 = C77437 + C78369;
    const double C78372 = C78368 * ae;
    const double C77489 = ae * C77484;
    const double C77487 = C77391 * C77484;
    const double C77726 = C77484 * C77614;
    const double C77828 = C77484 * C77688;
    const double C77915 = C77506 * C77484;
    const double C77936 = C77549 * C77484;
    const double C78506 = ae * C78499;
    const double C78503 = C77506 * C78499;
    const double C78554 = C78499 * C77688;
    const double C78586 = C77549 * C78499;
    const double C78719 = ae * C78713;
    const double C78717 = C77549 * C78713;
    const double C77486 = C77391 * C77483;
    const double C77724 = C77483 * C77614;
    const double C77826 = C77483 * C77688;
    const double C77912 = C77506 * C77483;
    const double C77933 = C77549 * C77483;
    const double C77630 = C77629 * C77395;
    const double C78066 = C77391 * C77629;
    const double C78490 = C77506 * C77629;
    const double C78552 = C77629 * C77688;
    const double C78583 = C77549 * C77629;
    const double C77704 = C77703 * C77395;
    const double C78123 = C77391 * C77703;
    const double C78543 = C77703 * C77614;
    const double C78624 = C77506 * C77703;
    const double C78703 = C77549 * C77703;
    const double C78505 = C77506 * C78501;
    const double C78504 = C78501 * ae;
    const double C78659 = C77549 * C78501;
    const double C37933 =
        2 * C77549 * C78053 + C77549 * (C78053 + C78501 * C77688);
    const double C78634 = C78630 + C78500;
    const double C78632 = C78048 + C78628;
    const double C78631 = C78627 * ae;
    const double C78710 = C77549 * C78613;
    const double C78708 = C78613 * ae;
    const double C77768 = C77506 * C77528;
    const double C2216 = (C77639 + C77642 * C77395 + ae * C77549 * C77528 +
                          C77549 * (ae * C77528 + C77549 * C77647)) /
                         std::pow(C77335, 2);
    const double C2217 = (ae * (2 * C77519 + C77391 * C77528) +
                          C77549 * (2 * C77391 * C77642 + C77391 * C77647)) /
                         std::pow(C77335, 2);
    const double C2400 = (C77676 + C77679 * C77395 + ae * C77549 * C77528 +
                          C77549 * (ae * C77528 + C77549 * C77684)) /
                         std::pow(C77335, 2);
    const double C2401 = (ae * (2 * C77519 + C77391 * C77528) +
                          C77549 * (2 * C77391 * C77679 + C77391 * C77684)) /
                         std::pow(C77335, 2);
    const double C12080 =
        (2 * (ae * C77528 + C77549 * C77647) + ae * (C77528 + C77542 * C77688) +
         C77549 * (C77647 + ae * C77549 * C77542 +
                   C77549 * (ae * C77542 +
                             C77549 * (C77645 + std::pow(C77397, 7) * bs[7] *
                                                    C77636 * C77395)))) /
        std::pow(C77335, 2);
    const double C12219 =
        (2 * (ae * C77528 + C77549 * C77684) + ae * (C77528 + C77542 * C77688) +
         C77549 * (C77684 + ae * C77549 * C77542 +
                   C77549 * (ae * C77542 +
                             C77549 * (C77682 + std::pow(C77397, 7) * bs[7] *
                                                    C77673 * C77395)))) /
        std::pow(C77335, 2);
    const double C171 = (3 * (C77512 + C77517 * C77395) +
                         C77391 * (2 * C77519 + C77391 * C77528)) /
                        C77335;
    const double C864 = (C77506 * (2 * C77519 + C77391 * C77528) +
                         (2 * C77414 + C77391 * C77442) * ae) /
                        C77335;
    const double C1796 = (C77512 + C77517 * C77395 + C77528 * C77688) / C77335;
    const double C1797 = (C77549 * (2 * C77519 + C77391 * C77528)) / C77335;
    const double C11792 =
        (2 * C77549 * C77528 + C77549 * (C77528 + C77542 * C77688)) / C77335;
    const double C77543 = C77391 * C77541;
    const double C78008 = C77506 * C77541;
    const double C77609 = C77391 * C77608;
    const double C78020 = C77506 * C77608;
    const double C78244 = C77549 * C77608;
    const double C78566 = C77549 * C78564;
    const double C78593 = C77506 * C78564;
    const double C78698 = C77549 * C78697;
    const double C77538 = C77523 + C77534;
    const double C77604 = C77600 + C77534;
    const double C78065 = 2 * C77534;
    const double C78262 = C77534 + C78261;
    const double C78321 = C77534 + C78320;
    const double C6477 = (ae * (C77562 + C77549 * (C77549 * C77573 + C77441) +
                                C77549 * C77437 * ae) +
                          C77506 * (C78088 + ae * C77549 * C77530 +
                                    C77549 * (C77534 + C77549 * C78098))) /
                         std::pow(C77335, 2);
    const double C78026 = C78024 + C77441;
    const double C10665 =
        (2 * (ae * C77519 + C77549 * C78109) + ae * (C77519 + C77530 * C77688) +
         C77549 *
             (C78109 + ae * C78303 + C77549 * (C77534 + C77549 * C78115))) /
        std::pow(C77335, 2);
    const double C10528 = C166 * C10377;
    const double C11798 = C79308 * C10377;
    const double C12082 = C245 * C10377;
    const double C37602 = C26551 * C10377;
    const double C62871 = C26498 * C10377;
    const double C78056 = ae * C78051;
    const double C78054 = C77506 * C78051;
    const double C78157 = C78051 * C77688;
    const double C78248 = C77549 * C78051;
    const double C78492 = 2 * C78051;
    const double C10379 = (3 * (C77512 + C77517 * C77688) +
                           C77549 * (2 * C78299 + C77549 * C78301)) /
                          C77335;
    const double C78565 = C77642 + C78563;
    const double C78582 = 2 * C78563;
    const double C78695 = C77679 + C78563;
    const double C177 =
        (3 * (C77516 + ae * C77519 + C77391 * C77527) +
         ae * (2 * C77519 + C77391 * C77528) +
         C77391 * (2 * C77527 + ae * C77528 +
                   C77391 * (C77523 + ae * C77391 * C77524 +
                             C77391 * (ae * C77524 +
                                       C77391 * C77464 * C77463 * C77510)))) /
        std::pow(C77335, 2);
    const double C1802 =
        (ae * C77512 + C77391 * C77516 + C77527 * C77688) / std::pow(C77335, 2);
    const double C1803 = (C77549 * (C77516 + ae * C77519 + C77391 * C77527)) /
                         std::pow(C77335, 2);
    const double C10381 =
        (2 * C77549 * C77527 + C77549 * (C77527 + C77541 * C77688)) /
        std::pow(C77335, 2);
    const double C10384 =
        (3 * (C77527 + C77541 * C77688) +
         C77549 *
             (2 * C77549 * C77541 +
              C77549 * (C77541 + (ae * C77537 + C77391 * std::pow(C77397, 7) *
                                                    bs[7] * C77510) *
                                     C77688))) /
        std::pow(C77335, 2);
    const double C5631 =
        (3 * (C77516 + ae * C78002 + C77506 * C78005) +
         ae * (2 * C78002 + C77506 * C78006) +
         C77506 * (2 * C78005 + ae * C78006 +
                   C77506 * (C77523 + C77916 +
                             C77506 * (C77461 + C77506 * C77535)))) /
        std::pow(C77335, 2);
    const double C6146 =
        (ae * C77403 + C77506 * C77516 + C78005 * C77688) / std::pow(C77335, 2);
    const double C6148 = (C77549 * (C77516 + ae * C78002 + C77506 * C78005)) /
                         std::pow(C77335, 2);
    const double C6149 =
        (C77516 + ae * C78002 + C77506 * C78005 +
         (C77523 + C77916 + C77506 * (C77461 + C77506 * C77535)) * C77688) /
        std::pow(C77335, 2);
    const double C8453 =
        (C77549 *
         (2 * C78005 + ae * C78006 +
          C77506 * (C77523 + C77916 + C77506 * (C77461 + C77506 * C77535)))) /
        std::pow(C77335, 2);
    const double C12441 =
        (2 * C77549 * C78005 +
         C77549 * (C78005 + (C77461 + C77506 * C77535) * C77688)) /
        std::pow(C77335, 2);
    const double C36057 =
        (3 * (C78005 + C78472 * C77688) +
         C77549 *
             (2 * C77549 * C78472 +
              C77549 * (C78472 + (ae * C77476 + C77506 * std::pow(C77397, 7) *
                                                    bs[7] * C77510) *
                                     C77688))) /
        std::pow(C77335, 2);
    const double C61356 = C61349 + C61350;
    const double C77902 = C77549 * C77571;
    const double C1283 = (C77639 + C77642 * C77395 + ae * C77506 * C77571 +
                          C77506 * (ae * C77571 + C77506 * C77647)) /
                         std::pow(C77335, 2);
    const double C1284 = (ae * (2 * C77562 + C77391 * C77571) +
                          C77506 * (2 * C77391 * C77642 + C77391 * C77647)) /
                         std::pow(C77335, 2);
    const double C1467 = (C77676 + C77679 * C77395 + ae * C77506 * C77571 +
                          C77506 * (ae * C77571 + C77506 * C77684)) /
                         std::pow(C77335, 2);
    const double C1468 = (ae * (2 * C77562 + C77391 * C77571) +
                          C77506 * (2 * C77391 * C77679 + C77391 * C77684)) /
                         std::pow(C77335, 2);
    const double C7160 =
        (2 * (ae * C77571 + C77506 * C77647) + ae * (C77571 + C77585 * C77614) +
         C77506 * (C77647 + ae * C77506 * C77585 +
                   C77506 * (ae * C77585 +
                             C77506 * (C77645 + std::pow(C77397, 7) * bs[7] *
                                                    C77636 * C77395)))) /
        std::pow(C77335, 2);
    const double C7299 =
        (2 * (ae * C77571 + C77506 * C77684) + ae * (C77571 + C77585 * C77614) +
         C77506 * (C77684 + ae * C77506 * C77585 +
                   C77506 * (ae * C77585 +
                             C77506 * (C77682 + std::pow(C77397, 7) * bs[7] *
                                                    C77673 * C77395)))) /
        std::pow(C77335, 2);
    const double C250 = (3 * (C77555 + C77560 * C77395) +
                         C77391 * (2 * C77562 + C77391 * C77571)) /
                        C77335;
    const double C977 = (C77555 + C77560 * C77395 + C77571 * C77614) / C77335;
    const double C978 = (C77506 * (2 * C77562 + C77391 * C77571)) / C77335;
    const double C1911 = (C77549 * (2 * C77562 + C77391 * C77571) +
                          (2 * C77414 + C77391 * C77442) * ae) /
                         C77335;
    const double C4167 =
        (C77549 * C77506 * C77571 + C77506 * C77442 * ae) / C77335;
    const double C6946 =
        (2 * C77506 * C77571 + C77506 * (C77571 + C77585 * C77614)) / C77335;
    const double C7686 = (C77549 * (C77571 + C77585 * C77614) +
                          (C77442 + C77478 * C77614) * ae) /
                         C77335;
    const double C77586 = C77391 * C77584;
    const double C78286 = C77549 * C77584;
    const double C78429 = C77506 * C77584;
    const double C77667 = C77391 * C77666;
    const double C78312 = C77549 * C77666;
    const double C78439 = C77506 * C77666;
    const double C78529 = C77506 * C78527;
    const double C78540 = C77506 * C78539;
    const double C78620 = C77549 * C78539;
    const double C77581 = C77566 + C77577;
    const double C77662 = C77658 + C77577;
    const double C78102 = C77577 + C78100;
    const double C78117 = C77577 + C78116;
    const double C78364 = 2 * C77577;
    const double C5821 =
        (2 * (ae * C77562 + C77506 * C78088) + ae * (C77562 + C77573 * C77614) +
         C77506 * (C78088 + ae * C77506 * C77573 +
                   C77506 * (C77577 + C77506 * C77391 * C77645))) /
        std::pow(C77335, 2);
    const double C78183 = C77549 * C78097;
    const double C5913 =
        (2 * (ae * C77562 + C77506 * C78109) + ae * (C77562 + C77573 * C77614) +
         C77506 * (C78109 + ae * C78097 +
                   C77506 * (C77577 + C77506 * C77391 * C77682))) /
        std::pow(C77335, 2);
    const double C78325 = C78323 + C77441;
    const double C5964 = C245 * C5675;
    const double C6952 = C79307 * C5675;
    const double C7301 = C166 * C5675;
    const double C32949 = C26498 * C5675;
    const double C58408 = C52140 * C5675;
    const double C6726 = C245 * C6227;
    const double C7692 = C79307 * C6227;
    const double C8201 = C166 * C6227;
    const double C33789 = C26498 * C6227;
    const double C53079 = C52141 * C6227;
    const double C59297 = C52140 * C6227;
    const double C78193 = C77549 * C78095;
    const double C5677 = (3 * (C77555 + C77560 * C77614) +
                          C77506 * (2 * C78091 + C77506 * C78095)) /
                         C77335;
    const double C8521 = (C77549 * (2 * C78091 + C77506 * C78095) +
                          (2 * C78035 + C77506 * C78053) * ae) /
                         C77335;
    const double C78355 = ae * C78350;
    const double C78353 = C77549 * C78350;
    const double C78705 = 2 * C78350;
    const double C78448 = C78446 + C78052;
    const double C78526 = C77642 + C78522;
    const double C78537 = C77679 + C78522;
    const double C78623 = 2 * C78522;
    const double C256 =
        (3 * (C77559 + ae * C77562 + C77391 * C77570) +
         ae * (2 * C77562 + C77391 * C77571) +
         C77391 * (2 * C77570 + ae * C77571 +
                   C77391 * (C77566 + ae * C77391 * C77567 +
                             C77391 * (ae * C77567 +
                                       C77391 * C77464 * C77463 * C77553)))) /
        std::pow(C77335, 2);
    const double C983 =
        (ae * C77555 + C77391 * C77559 + C77570 * C77614) / std::pow(C77335, 2);
    const double C984 = (C77506 * (C77559 + ae * C77562 + C77391 * C77570)) /
                        std::pow(C77335, 2);
    const double C5679 =
        (2 * C77506 * C77570 + C77506 * (C77570 + C77584 * C77614)) /
        std::pow(C77335, 2);
    const double C5682 =
        (3 * (C77570 + C77584 * C77614) +
         C77506 *
             (2 * C77506 * C77584 +
              C77506 * (C77584 + (ae * C77580 + C77391 * std::pow(C77397, 7) *
                                                    bs[7] * C77553) *
                                     C77614))) /
        std::pow(C77335, 2);
    const double C10433 =
        (3 * (C77559 + ae * C78280 + C77549 * C78283) +
         ae * (2 * C78280 + C77549 * C78284) +
         C77549 * (2 * C78283 + ae * C78284 +
                   C77549 * (C77566 + C77937 +
                             C77549 * (C77461 + C77549 * C77578)))) /
        std::pow(C77335, 2);
    const double C31374 = C31367 + C31368;
    const double C31947 = C31938 + C31939;
    const double C328 =
        (3 * (C77597 + ae * C77519 + C77391 * C77602) +
         ae * (2 * C77519 + C77391 * C77528) +
         C77391 * (2 * C77602 + ae * C77528 +
                   C77391 * (C77600 + C77534 +
                             C77391 * (C77531 +
                                       C77391 * C77464 * C77463 * C77594)))) /
        std::pow(C77335, 2);
    const double C2022 =
        (ae * C77512 + C77391 * C77597 + C77602 * C77688) / std::pow(C77335, 2);
    const double C2023 = (C77549 * (C77597 + ae * C77519 + C77391 * C77602)) /
                         std::pow(C77335, 2);
    const double C10477 =
        (2 * C77549 * C77602 + C77549 * (C77602 + C77608 * C77688)) /
        std::pow(C77335, 2);
    const double C5727 =
        (3 * (C77597 + ae * C78002 + C77506 * C78018) +
         ae * (2 * C78002 + C77506 * C78006) +
         C77506 * (2 * C78018 + ae * C78006 +
                   C77506 * (C77600 + C77916 +
                             C77506 * (C77461 + C77506 * C77606)))) /
        std::pow(C77335, 2);
    const double C61455 = C79306 * C10479;
    const double C78023 = C77391 * C77624;
    const double C78045 = C77506 * C77624;
    const double C78246 = C77549 * C77624;
    const double C377 =
        (3 * (C77619 + C77624 * C77395) +
         C77391 * (2 * C77391 * C77624 +
                   C77391 * (C77624 + (C77462 + C77614 * C77463 * C77464) *
                                          C77398 * C77395))) /
        std::pow(C77335, 2);
    const double C1172 = (2 * ae * (C77512 + C77517 * C77395) +
                          C77506 * (C77619 + C77624 * C77395)) /
                         std::pow(C77335, 2);
    const double C2104 =
        (C77391 * C77619 + C77391 * C77624 * C77688) / std::pow(C77335, 2);
    const double C2105 =
        (C77549 * (C77619 + C77624 * C77395)) / std::pow(C77335, 2);
    const double C4386 =
        (2 * ae * C77549 * C77519 + C77506 * C77549 * C77391 * C77624) /
        std::pow(C77335, 2);
    const double C6392 = (2 * ae * (C77512 + C77517 * C77688) +
                          C77506 * (C77619 + C77624 * C77688)) /
                         std::pow(C77335, 2);
    const double C10524 =
        (2 * C77549 * C77619 + C77549 * (C77619 + C77624 * C77688)) /
        std::pow(C77335, 2);
    const double C5823 =
        (3 * (C77639 + ae * C78091 + C77506 * C78094) +
         ae * (2 * C78091 + C77506 * C78095) +
         C77506 * (2 * C78094 + ae * C78095 +
                   C77506 * (C77642 + ae * C77506 * C77567 +
                             C77506 * (C77574 + C77506 * C77645)))) /
        std::pow(C77335, 2);
    const double C10574 =
        (2 * (ae * C77512 + C77549 * C77639) + ae * (C77512 + C77517 * C77688) +
         C77549 * (C77639 + ae * C77549 * C77517 + C77549 * C78259)) /
        std::pow(C77335, 2);
    const double C10575 =
        (3 * (C77639 + ae * C78299 + C77549 * C78259) +
         ae * (2 * C78299 + C77549 * C78301) +
         C77549 * (2 * C78259 + ae * C78301 +
                   C77549 * (C77642 + ae * C77549 * C77524 +
                             C77549 * (C77531 + C77549 * C77645)))) /
        std::pow(C77335, 2);
    const double C1301 = C1294 + C1295;
    const double C2234 = C2227 + C2228;
    const double C519 =
        (3 * (C77655 + ae * C77562 + C77391 * C77660) +
         ae * (2 * C77562 + C77391 * C77571) +
         C77391 * (2 * C77660 + ae * C77571 +
                   C77391 * (C77658 + C77577 +
                             C77391 * (C77574 +
                                       C77391 * C77464 * C77463 * C77652)))) /
        std::pow(C77335, 2);
    const double C1383 =
        (ae * C77555 + C77391 * C77655 + C77660 * C77614) / std::pow(C77335, 2);
    const double C1384 = (C77506 * (C77655 + ae * C77562 + C77391 * C77660)) /
                         std::pow(C77335, 2);
    const double C5867 =
        (2 * C77506 * C77660 + C77506 * (C77660 + C77666 * C77614)) /
        std::pow(C77335, 2);
    const double C5870 =
        (3 * (C77660 + C77666 * C77614) +
         C77506 *
             (2 * C77506 * C77666 +
              C77506 * (C77666 + (ae * C77580 + C77391 * std::pow(C77397, 7) *
                                                    bs[7] * C77652) *
                                     C77614))) /
        std::pow(C77335, 2);
    const double C10621 =
        (3 * (C77655 + ae * C78280 + C77549 * C78310) +
         ae * (2 * C78280 + C77549 * C78284) +
         C77549 * (2 * C78310 + ae * C78284 +
                   C77549 * (C77658 + C77937 +
                             C77549 * (C77461 + C77549 * C77664)))) /
        std::pow(C77335, 2);
    const double C5915 =
        (3 * (C77676 + ae * C78091 + C77506 * C78113) +
         ae * (2 * C78091 + C77506 * C78095) +
         C77506 * (2 * C78113 + ae * C78095 +
                   C77506 * (C77679 + ae * C77506 * C77567 +
                             C77506 * (C77574 + C77506 * C77682)))) /
        std::pow(C77335, 2);
    const double C10667 =
        (3 * (C77676 + ae * C78299 + C77549 * C78318) +
         ae * (2 * C78299 + C77549 * C78301) +
         C77549 * (2 * C78318 + ae * C78301 +
                   C77549 * (C77679 + ae * C77549 * C77524 +
                             C77549 * (C77531 + C77549 * C77682)))) /
        std::pow(C77335, 2);
    const double C1485 = C1478 + C1479;
    const double C2418 = C2411 + C2412;
    const double C78119 = C77391 * C77698;
    const double C78344 = C77549 * C77698;
    const double C78443 = C77506 * C77698;
    const double C636 =
        (3 * (C77693 + C77698 * C77395) +
         C77391 * (2 * C77391 * C77698 +
                   C77391 * (C77698 + (C77462 + C77688 * C77463 * C77464) *
                                          C77398 * C77395))) /
        std::pow(C77335, 2);
    const double C1567 =
        (C77391 * C77693 + C77391 * C77698 * C77614) / std::pow(C77335, 2);
    const double C1568 =
        (C77506 * (C77693 + C77698 * C77395)) / std::pow(C77335, 2);
    const double C2501 = (2 * ae * (C77555 + C77560 * C77395) +
                          C77549 * (C77693 + C77698 * C77395)) /
                         std::pow(C77335, 2);
    const double C4828 =
        (2 * ae * C77506 * C77562 + C77549 * C77506 * C77391 * C77698) /
        std::pow(C77335, 2);
    const double C5960 =
        (2 * C77506 * C77693 + C77506 * (C77693 + C77698 * C77614)) /
        std::pow(C77335, 2);
    const double C5961 =
        (3 * (C77693 + C77698 * C77614) +
         C77506 * (2 * C77506 * C77698 + C77506 * (C77698 + C77703 * C77614))) /
        std::pow(C77335, 2);
    const double C6720 = (2 * ae * (C77555 + C77560 * C77614) +
                          C77549 * (C77693 + C77698 * C77614)) /
                         std::pow(C77335, 2);
    const double C8933 =
        (2 * ae * (2 * C78091 + C77506 * C78095) +
         C77549 * (2 * C77506 * C77698 + C77506 * (C77698 + C77703 * C77614))) /
        std::pow(C77335, 2);
    const double C31945 = C31934 + C31935;
    const double C194 = C166 * C100;
    const double C273 = C245 * C100;
    const double C390 = C372 * C100;
    const double C649 = C631 * C100;
    const double C889 = C166 * C753;
    const double C1003 = C245 * C753;
    const double C1188 = C372 * C753;
    const double C1584 = C631 * C753;
    const double C26948 = C26497 * C753;
    const double C27244 = C26498 * C753;
    const double C2685 = C166 * C754;
    const double C2759 = C245 * C754;
    const double C2897 = C372 * C754;
    const double C3181 = C631 * C754;
    const double C28442 = C26497 * C754;
    const double C28649 = C26498 * C754;
    const double C1822 = C166 * C1686;
    const double C1936 = C245 * C1686;
    const double C2121 = C372 * C1686;
    const double C2517 = C631 * C1686;
    const double C53169 = C26497 * C1686;
    const double C53458 = C26498 * C1686;
    const double C3331 = C166 * C1687;
    const double C3405 = C245 * C1687;
    const double C3543 = C372 * C1687;
    const double C3827 = C631 * C1687;
    const double C54568 = C26497 * C1687;
    const double C54774 = C26498 * C1687;
    const double C4062 = C166 * C3933;
    const double C4180 = C245 * C3933;
    const double C4394 = C372 * C3933;
    const double C4836 = C631 * C3933;
    const double C29694 = C26497 * C3933;
    const double C30025 = C26498 * C3933;
    const double C6479 =
        (ae * C77519 + C77549 * C78088 + ae * (C77549 * C78097 + C78027) +
         C77506 * (ae * (C77549 * C77573 + C77441) +
                   C77506 * (C77534 + C77549 * C78098))) /
        std::pow(C77335, 2);
    const double C10925 = C166 * C6041;
    const double C11031 = C245 * C6041;
    const double C11233 = C372 * C6041;
    const double C11645 = C631 * C6041;
    const double C36464 = C26497 * C6041;
    const double C36769 = C26498 * C6041;
    const double C31265 = C26497 * C5569;
    const double C31371 = C245 * C5569;
    const double C31430 = C26498 * C5569;
    const double C31673 = C631 * C5569;
    const double C31763 = C26497 * C6045;
    const double C31942 = C245 * C6045;
    const double C32041 = C26498 * C6045;
    const double C32458 = C631 * C6045;
    const double C57242 = C166 * C6045;
    const double C57488 = C372 * C6045;
    const double C34059 = C26497 * C8377;
    const double C34204 = C245 * C8377;
    const double C34279 = C26498 * C8377;
    const double C34628 = C631 * C8377;
    const double C59431 = C166 * C8377;
    const double C59639 = C372 * C8377;
    const double C32210 = C79307 * C6481;
    const double C61294 = C26497 * C10321;
    const double C61353 = C166 * C10321;
    const double C61456 = C26498 * C10321;
    const double C61511 = C372 * C10321;
    const double C2233 = C2224 + C2225;
    const double C1484 = C1475 + C1476;
    const double C78477 = C78470 + C78475;
    const double C38153 =
        (2 * C78242 + C77549 * C78550 + ae * (2 * C78601 + C77549 * C78607) +
         C77506 * (ae * (2 * C77932 + C77549 * (C77440 + C77476 * C77688)) +
                   C77506 * (2 * C78578 +
                             C77549 * (C77606 + std::pow(C77397, 7) * bs[7] *
                                                    C77594 * C77688)))) /
        std::pow(C77335, 2);
    const double C36008 = (3 * (C78002 + C77911 * C77688) +
                           C77549 * (2 * C78601 + C77549 * C78607)) /
                          C77335;
    const double C78681 = C78674 + C78679;
    const double C77546 = C77536 + C77544;
    const double C10380 = (3 * (C77519 + C77530 * C77688) +
                           C77549 * (2 * C78303 + C77549 * C78305)) /
                          C77335;
    const double C78687 = C78685 + C78686;
    const double C77589 = C77579 + C77587;
    const double C78397 = C77549 * C78396;
    const double C78197 = C77549 * C78103;
    const double C5678 = (3 * (C77562 + C77573 * C77614) +
                          C77506 * (2 * C78097 + C77506 * C78103)) /
                         C77335;
    const double C78532 = C78524 + C78530;
    const double C78985 = C78984 / C78975;
    const double C79250 = 2 * C79217;
    const double C78994 = C78993 / C78972;
    const double C79254 = C79221 / C78990;
    const double C79280 = C79215 - C79249;
    const double C13595 = -C79249;
    const double C79297 = C79279 + C78982;
    const double C79067 = C79066 / C78975;
    const double C79258 = 2 * C79226;
    const double C79074 = C79073 / C78972;
    const double C79268 = C79235 / C78990;
    const double C79288 = C79229 - C79265;
    const double C12991 = -C79265;
    const double C79300 = C79284 + C79063;
    const double C79109 = C79108 / C78975;
    const double C79261 = 2 * C79228;
    const double C79116 = C79115 / C78972;
    const double C79274 = C79241 / C78990;
    const double C79291 = C79230 - C79271;
    const double C17509 = -C79271;
    const double C79301 = C79286 + C79105;
    const double C26952 = C26934 + C26501;
    const double C31269 = C31263 + C26939;
    const double C26953 = C26936 + C26937;
    const double C27249 = C27228 + C27229;
    const double C27247 = C27224 + C27225;
    const double C27246 = C27222 + C27223;
    const double C27518 = C27505 + C27506;
    const double C27517 = C27501 + C27502;
    const double C27516 = C27499 + C27500;
    const double C53173 = C53161 + C27762;
    const double C53172 = C53159 + C27761;
    const double C29697 = C29688 + C27760;
    const double C31769 = C31761 + C29690;
    const double C30028 = C30017 + C30018;
    const double C30345 = C30336 + C30337;
    const double C31432 = C31424 + C31425;
    const double C31581 = C31576 + C31577;
    const double C32045 = C32035 + C32036;
    const double C32299 = C32293 + C32294;
    const double C61297 = C61292 + C36012;
    const double C53465 = C53446 + C53447;
    const double C53463 = C53442 + C53443;
    const double C53462 = C53440 + C53441;
    const double C53461 = C53438 + C53439;
    const double C53460 = C53436 + C53437;
    const double C53734 = C53722 + C53723;
    const double C61459 = C61452 + C61453;
    const double C61458 = C61450 + C61451;
    const double C570 = C196 * C245;
    const double C586 = C582 * C79307;
    const double C53285 = C53281 * C79306;
    const double C53284 = C53280 * C26498;
    const double C398 = C394 + C382;
    const double C53568 = C53566 + C2113;
    const double C454 = C275 * C166;
    const double C470 = C466 * C79308;
    const double C27145 = C27141 * C79306;
    const double C27144 = C27140 * C26498;
    const double C657 = C653 + C641;
    const double C27682 = C27680 + C1576;
    const double C110 =
        ((C77394 + C77395 * C77396 * C77400) * C77398 + C77406 + C77406 +
         C77391 *
             (2 * ae * C77403 +
              C77391 *
                  (C77396 * C77400 + C77395 * bs[4] * std::pow(C77389, 4)) *
                  C77398)) /
        std::pow(C77335, 2);
    const double C866 = (C77406 + C77506 * (ae * C77512 + C77391 * C77516)) /
                        std::pow(C77335, 2);
    const double C1086 = (C77406 + C77506 * (ae * C77512 + C77391 * C77597)) /
                         std::pow(C77335, 2);
    const double C1913 = (C77406 + C77549 * (ae * C77555 + C77391 * C77559)) /
                         std::pow(C77335, 2);
    const double C2313 = (C77406 + C77549 * (ae * C77555 + C77391 * C77655)) /
                         std::pow(C77335, 2);
    const double C119 = C93 * C104;
    const double C117 = C95 * C104;
    const double C184 = C166 * C104;
    const double C263 = C245 * C104;
    const double C26504 = C26498 * C104;
    const double C777 = C93 * C756;
    const double C773 = C95 * C756;
    const double C875 = C166 * C756;
    const double C989 = C245 * C756;
    const double C26502 = C26498 * C756;
    const double C27231 = C79306 * C756;
    const double C1710 = C93 * C1689;
    const double C1706 = C95 * C1689;
    const double C1808 = C166 * C1689;
    const double C1922 = C245 * C1689;
    const double C27764 = C26498 * C1689;
    const double C53445 = C79306 * C1689;
    const double C27146 = C27142 * C79306;
    const double C53286 = C53282 * C79306;
    const double C29915 = C29913 * C79306;
    const double C55325 = C55323 * C79306;
    const double C77765 = ae * C77764;
    const double C861 =
        (C77391 * C77512 + C77506 * C77764 + C77506 * C77414 * ae) / C77335;
    const double C4048 = (C77549 * C77764) / C77335;
    const double C77899 = ae * C77898;
    const double C1908 =
        (C77391 * C77555 + C77549 * C77898 + C77549 * C77414 * ae) / C77335;
    const double C1007 = C993 + C994;
    const double C1590 = C1578 + C1579;
    const double C1826 = C1812 + C1813;
    const double C2127 = C2115 + C2116;
    const double C4182 = C4174 + C4175;
    const double C4840 = C4833 + C4834;
    const double C4052 =
        (C77549 * (C77423 + C77506 * C77527)) / std::pow(C77335, 2);
    const double C77424 = C77403 + C77422;
    const double C77712 = ae * C77711;
    const double C3936 = (C77549 * C77711) / C77335;
    const double C77814 = ae * C77813;
    const double C780 = C93 * C759;
    const double C776 = C95 * C759;
    const double C881 = C166 * C759;
    const double C995 = C245 * C759;
    const double C26943 = C26498 * C759;
    const double C27235 = C79306 * C759;
    const double C1713 = C93 * C1692;
    const double C1709 = C95 * C1692;
    const double C1814 = C166 * C1692;
    const double C1928 = C245 * C1692;
    const double C27767 = C26498 * C1692;
    const double C53449 = C79306 * C1692;
    const double C78040 = C77512 + C78038;
    const double C78155 = ae * C78154;
    const double C78339 = C77555 + C78337;
    const double C26941 = C79306 * C764;
    const double C26938 = C79306 * C766;
    const double C53164 = C79306 * C1697;
    const double C53162 = C79306 * C1699;
    const double C29689 = C79306 * C3939;
    const double C389 = C79308 * C376;
    const double C1179 = C79308 * C1168;
    const double C2112 = C79308 * C2101;
    const double C53561 = C79308 * C2103;
    const double C55627 = C79308 * C4385;
    const double C648 = C79307 * C635;
    const double C1575 = C79307 * C1564;
    const double C27679 = C79307 * C1566;
    const double C2508 = C79307 * C2497;
    const double C30548 = C79307 * C4827;
    const double C78189 = ae * C78188;
    const double C6226 =
        (C77506 * C77555 + C77549 * C78188 + C77549 * C78035 * ae) / C77335;
    const double C32208 = C79307 * C6480;
    const double C31768 = C31759 + C27763;
    const double C32043 = C32031 + C32032;
    const double C1170 =
        ((C77394 + C77614 * C77396 * C77400) * C77398 + C77761 + C77761 +
         C77506 * (2 * ae * C77512 + C77506 * C77619)) /
        std::pow(C77335, 2);
    const double C4715 = (C77761 + C77549 * (ae * C77555 + C77506 * C77676)) /
                         std::pow(C77335, 2);
    const double C1181 = C166 * C860;
    const double C27226 = C26498 * C860;
    const double C27334 = C26551 * C860;
    const double C27332 = C26552 * C860;
    const double C27420 = C245 * C860;
    const double C4390 = C166 * C4047;
    const double C28068 = C26552 * C4047;
    const double C30015 = C26498 * C4047;
    const double C30131 = C26551 * C4047;
    const double C30235 = C245 * C4047;
    const double C55315 = C79308 * C4047;
    const double C6399 = C166 * C6140;
    const double C28071 = C26552 * C6140;
    const double C32033 = C26498 * C6140;
    const double C32125 = C26551 * C6140;
    const double C32205 = C245 * C6140;
    const double C57233 = C79308 * C6140;
    const double C575 = C199 * C245;
    const double C399 = C395 + C385;
    const double C471 = C467 * C79308;
    const double C576 = C200 * C245;
    const double C400 = C396 + C388;
    const double C472 = C468 * C79308;
    const double C1473 = C892 * C245;
    const double C1197 = C1193 + C1178;
    const double C1477 = C895 * C245;
    const double C1199 = C1195 + C1186;
    const double C2406 = C1825 * C245;
    const double C53272 = C1825 * C26498;
    const double C2130 = C2126 + C2111;
    const double C2236 = C2232 * C79308;
    const double C53569 = C53567 + C2114;
    const double C53287 = C53283 * C26498;
    const double C2410 = C1828 * C245;
    const double C53276 = C1828 * C26498;
    const double C2132 = C2128 + C2119;
    const double C61516 = C61514 + C10529;
    const double C61359 = C61355 * C26498;
    const double C2499 =
        ((C77394 + C77688 * C77396 * C77400) * C77398 + C77895 + C77895 +
         C77549 * (2 * ae * C77555 + C77549 * C77693)) /
        std::pow(C77335, 2);
    const double C4501 = (C77895 + C77506 * (ae * C77512 + C77549 * C77639)) /
                         std::pow(C77335, 2);
    const double C2510 = C245 * C1907;
    const double C53724 = C26498 * C1907;
    const double C53816 = C166 * C1907;
    const double C53896 = C52140 * C1907;
    const double C53894 = C52141 * C1907;
    const double C1303 = C1299 * C79308;
    const double C459 = C278 * C166;
    const double C587 = C583 * C79307;
    const double C658 = C654 + C644;
    const double C460 = C279 * C166;
    const double C588 = C584 * C79307;
    const double C659 = C655 + C647;
    const double C1289 = C1006 * C166;
    const double C27132 = C1006 * C26498;
    const double C1487 = C1483 * C79307;
    const double C1593 = C1589 + C1574;
    const double C27683 = C27681 + C1577;
    const double C27147 = C27143 * C26498;
    const double C1293 = C1009 * C166;
    const double C27136 = C1009 * C26498;
    const double C1595 = C1591 + C1582;
    const double C2222 = C1939 * C166;
    const double C2420 = C2416 * C79307;
    const double C2526 = C2522 + C2507;
    const double C2226 = C1942 * C166;
    const double C2528 = C2524 + C2515;
    const double C30550 = C30549 + C4832;
    const double C29916 = C29914 * C26498;
    const double C31678 = C31676 + C5965;
    const double C31377 = C31373 * C26498;
    const double C32465 = C32462 + C6727;
    const double C31952 = C31946 * C26498;
    const double C77460 = C77446 + C77450;
    const double C77452 = C77416 + C77449;
    const double C77715 = C77421 + C77714;
    const double C77722 = ae * C77720;
    const double C77955 = C77549 * C77720;
    const double C78201 = 2 * C77720;
    const double C6047 = (C77711 + C77720 * C77688) / C77335;
    const double C77817 = C77421 + C77816;
    const double C77824 = ae * C77822;
    const double C78401 = 2 * C77822;
    const double C78476 = C78468 + C78474;
    const double C78486 = C78482 + C78485;
    const double C36101 =
        (3 * (C78427 + ae * C78601 + C77549 * C78606) +
         ae * (2 * C78601 + C77549 * C78607) +
         C77549 * (2 * C78606 + ae * C78607 +
                   C77549 * (C78602 + ae * C77549 * C78603 +
                             C77549 * (ae * C78603 + C77549 * C77506 *
                                                         std::pow(C77397, 7) *
                                                         bs[7] * C77553)))) /
        std::pow(C77335, 2);
    const double C36277 =
        (3 * (C78437 + ae * C78601 + C77549 * C78618) +
         ae * (2 * C78601 + C77549 * C78607) +
         C77549 * (2 * C78618 + ae * C78607 +
                   C77549 * (C78616 + ae * C77549 * C78603 +
                             C77549 * (ae * C78603 + C77549 * C77506 *
                                                         std::pow(C77397, 7) *
                                                         bs[7] * C77652)))) /
        std::pow(C77335, 2);
    const double C38081 = C79307 * C12511;
    const double C38368 = C79306 * C12785;
    const double C37940 = C37937 + C36011;
    const double C38160 = C38157 + C38158;
    const double C78680 = C78672 + C78678;
    const double C78693 = C78689 + C78692;
    const double C31941 = C79307 * C6235;
    const double C32296 = C79306 * C6561;
    const double C34203 = C79307 * C8523;
    const double C34278 = C79306 * C8591;
    const double C34490 = C79306 * C8797;
    const double C5582 = C93 * C5573;
    const double C31266 = C26498 * C5573;
    const double C31369 = C245 * C5573;
    const double C31431 = C79306 * C5573;
    const double C6064 = C93 * C6051;
    const double C31764 = C26498 * C6051;
    const double C31940 = C245 * C6051;
    const double C32042 = C79306 * C6051;
    const double C57240 = C166 * C6051;
    const double C8384 = C93 * C8379;
    const double C31766 = C26498 * C8379;
    const double C34202 = C245 * C8379;
    const double C34280 = C79306 * C8379;
    const double C59433 = C166 * C8379;
    const double C37939 = C26498 * C37934;
    const double C38156 = C79306 * C12579;
    const double C10334 = C93 * C10325;
    const double C36013 = C26498 * C10325;
    const double C61351 = C166 * C10325;
    const double C61457 = C79306 * C10325;
    const double C77451 = C77433 + C77448;
    const double C3940 =
        (2 * ae * C77549 * C77506 * C77416 + C77391 * C77549 * C77718) /
        std::pow(C77335, 2);
    const double C6054 =
        (C77506 * C77420 + C77718 * C77688) / std::pow(C77335, 2);
    const double C26944 = C79306 * C767;
    const double C53166 = C79306 * C1700;
    const double C31264 = C79306 * C5576;
    const double C31762 = C79306 * C6056;
    const double C61293 = C79306 * C10328;
    const double C77485 = C77467 + C77482;
    const double C78211 = C78209 + C77481;
    const double C78415 = C78413 + C77481;
    const double C11336 =
        (ae * (C77571 + C77549 * (C77549 * C77585 + C77481) +
               C77549 * C77478 * ae) +
         C77506 * (C77647 + ae * C77549 * C77542 +
                   C77549 * (ae * C77542 +
                             C77549 * (C77645 + std::pow(C77397, 7) * bs[7] *
                                                    C77636 * C77395)))) /
        std::pow(C77335, 2);
    const double C78212 = C78210 * ae;
    const double C10817 = C77506 * C77442 + C78210 * C77688;
    const double C78416 = C78414 * ae;
    const double C78079 = ae * C78076;
    const double C78078 = C77506 * C78076;
    const double C78161 = C78076 * C77688;
    const double C78254 = C77549 * C78076;
    const double C78376 = ae * C78371;
    const double C78374 = C77549 * C78371;
    const double C78077 = C78074 * ae;
    const double C8522 = (C77549 * (2 * C78097 + C77506 * C78103) +
                          (2 * C78025 + C77506 * C78074) * ae) /
                         C77335;
    const double C5570 = 3 * (C77414 + C77437 * C77614) +
                         C77506 * (2 * C78025 + C77506 * C78074);
    const double C6046 = C77414 + C77437 * C77614 + C78074 * C77688;
    const double C8378 = C77549 * (2 * C78025 + C77506 * C78074);
    const double C78460 = C78458 + C78073;
    const double C6482 =
        (C78088 + ae * C77549 * C77530 + C77549 * (C77534 + C77549 * C78098) +
         ae * (C78097 + C77549 * (C77549 * C77506 * C78099 + C78073) +
               C77549 * C78069 * ae) +
         C77506 * (ae * (C77573 + C77549 * (C77549 * C78099 + C77477) +
                         C77549 * C77473 * ae) +
                   C77506 * (C78098 + ae * C77549 * C78068 +
                             C77549 * (ae * C78068 + C77549 * C77391 *
                                                         std::pow(C77397, 7) *
                                                         bs[7] * C77636)))) /
        std::pow(C77335, 2);
    const double C78459 = C78457 * ae;
    const double C78375 = C78373 * ae;
    const double C10322 = 3 * (C77414 + C77437 * C77688) +
                          C77549 * (2 * C78324 + C77549 * C78373);
    const double C77491 = C77440 + C77487;
    const double C77729 = C77447 + C77726;
    const double C77831 = C77447 + C77828;
    const double C77920 = ae * C77915;
    const double C77960 = C77549 * C77915;
    const double C78385 = C77915 * C77688;
    const double C77941 = ae * C77936;
    const double C78508 = C77524 + C78503;
    const double C78557 = C78051 + C78554;
    const double C78590 = ae * C78586;
    const double C78721 = C77567 + C78717;
    const double C77490 = C77469 + C77486;
    const double C77727 = C77446 + C77724;
    const double C77829 = C77446 + C77826;
    const double C77917 = C77391 * C77912;
    const double C77958 = C77549 * C77912;
    const double C6053 = (2 * ae * (C78002 + C77911 * C77688) +
                          C77391 * (C77718 + C77912 * C77688)) /
                         std::pow(C77335, 2);
    const double C8382 =
        (2 * ae * C77549 * (2 * C77911 + C77506 * (C77440 + C77476 * C77614)) +
         C77391 * C77549 *
             (2 * C77912 +
              C77506 * (C77483 + (C77463 * C77464 +
                                  C77395 * bs[7] * std::pow(C77397, 7)) *
                                     C77398 * C77614))) /
        std::pow(C77335, 2);
    const double C12369 =
        (2 * C77549 * C77718 + C77549 * (C77718 + C77912 * C77688)) /
        std::pow(C77335, 2);
    const double C77938 = C77391 * C77933;
    const double C77631 = C77624 + C77630;
    const double C78071 = C77506 * C78066;
    const double C78252 = C77549 * C78066;
    const double C78498 = C78489 + C78490;
    const double C78555 = C77624 + C78552;
    const double C78587 = C77506 * C78583;
    const double C77705 = C77698 + C77704;
    const double C78365 = C77549 * C78123;
    const double C78455 = C77506 * C78123;
    const double C8934 =
        (2 * ae * (2 * C78097 + C77506 * C78103) +
         C77549 *
             (2 * C77506 * C78123 +
              C77506 * (C78123 + C77391 *
                                     (C77463 * C77464 +
                                      C77688 * bs[7] * std::pow(C77397, 7)) *
                                     C77398 * C77614))) /
        std::pow(C77335, 2);
    const double C78544 = C77698 + C78543;
    const double C78629 = C77549 * C78624;
    const double C78712 = C78702 + C78703;
    const double C78509 = C78496 + C78505;
    const double C78660 = C78658 + C78504;
    const double C78661 = C78659 * ae;
    const double C78637 = ae * C78634;
    const double C78636 = C77549 * C78634;
    const double C78635 = C78632 * ae;
    const double C36007 = 3 * (C78035 + C78048 * C77688) +
                          C77549 * (2 * C78445 + C77549 * C78632);
    const double C78715 = C78709 + C78710;
    const double C77769 = C77768 + C77445;
    const double C2230 = C79307 * C2216;
    const double C3617 = C79307 * C2217;
    const double C2414 = C79308 * C2400;
    const double C3756 = C79308 * C2401;
    const double C195 = C79308 * C171;
    const double C391 = C166 * C171;
    const double C463 = C245 * C171;
    const double C26690 = C26551 * C171;
    const double C1191 = C166 * C864;
    const double C2686 = C79308 * C864;
    const double C2970 = C245 * C864;
    const double C26688 = C26552 * C864;
    const double C28651 = C26498 * C864;
    const double C28721 = C26551 * C864;
    const double C1823 = C79308 * C1796;
    const double C2122 = C166 * C1796;
    const double C2229 = C245 * C1796;
    const double C28078 = C26551 * C1796;
    const double C53456 = C26498 * C1796;
    const double C2124 = C166 * C1797;
    const double C3332 = C79308 * C1797;
    const double C3616 = C245 * C1797;
    const double C29324 = C26551 * C1797;
    const double C54776 = C26498 * C1797;
    const double C12011 = C166 * C11792;
    const double C78009 = C77450 + C78008;
    const double C78021 = C77450 + C78020;
    const double C10480 =
        (3 * (C77602 + C77608 * C77688) +
         C77549 *
             (2 * C78244 +
              C77549 * (C77608 + (ae * C77537 + C77391 * std::pow(C77397, 7) *
                                                    bs[7] * C77594) *
                                     C77688))) /
        std::pow(C77335, 2);
    const double C77545 = C77538 + C77543;
    const double C77610 = C77604 + C77609;
    const double C10573 =
        (2 * (ae * C77519 + C77549 * C78088) + ae * (C77519 + C77530 * C77688) +
         C77549 * (C78088 + ae * C77549 * C77530 + C77549 * C78262)) /
        std::pow(C77335, 2);
    const double C10576 =
        (3 * (C78088 + ae * C78303 + C77549 * C78262) +
         ae * (2 * C78303 + C77549 * C78305) +
         C77549 * (2 * C78262 + ae * C78305 +
                   C77549 * (C78098 + ae * C77549 * C78068 +
                             C77549 * (ae * C78068 + C77549 * C77391 *
                                                         std::pow(C77397, 7) *
                                                         bs[7] * C77636)))) /
        std::pow(C77335, 2);
    const double C10668 =
        (3 * (C78109 + ae * C78303 + C77549 * C78321) +
         ae * (2 * C78303 + C77549 * C78305) +
         C77549 * (2 * C78321 + ae * C78305 +
                   C77549 * (C78115 + ae * C77549 * C78068 +
                             C77549 * (ae * C78068 + C77549 * C77391 *
                                                         std::pow(C77397, 7) *
                                                         bs[7] * C77673)))) /
        std::pow(C77335, 2);
    const double C11339 = C79307 * C6477;
    const double C78029 = ae * C78026;
    const double C78028 = C77506 * C78026;
    const double C78067 = 2 * C78026;
    const double C78151 = C77549 * C78026;
    const double C6139 = (C77764 + C78026 * C77688) / C77335;
    const double C12222 = C79308 * C10665;
    const double C12012 = C12009 + C10528;
    const double C11800 = C11797 + C11798;
    const double C78488 = C77624 + C78056;
    const double C78057 = C77517 + C78054;
    const double C78158 = C78036 + C78157;
    const double C78250 = ae * C78248;
    const double C78650 = 2 * C78248;
    const double C10530 = C166 * C10379;
    const double C36191 = C26551 * C10379;
    const double C61354 = C79308 * C10379;
    const double C61454 = C26498 * C10379;
    const double C78567 = C78565 + C78566;
    const double C78699 = C78695 + C78698;
    const double C193 = C79308 * C177;
    const double C1815 = C79308 * C1802;
    const double C1819 = C79308 * C1803;
    const double C11796 = C79308 * C10381;
    const double C57235 = C79308 * C6146;
    const double C57239 = C79308 * C6148;
    const double C57241 = C79308 * C6149;
    const double C59434 = C79308 * C8453;
    const double C63348 = C79308 * C12441;
    const double C61360 = C61356 * C79306;
    const double C77903 = C77902 + C77445;
    const double C1297 = C79307 * C1283;
    const double C2971 = C79307 * C1284;
    const double C1481 = C79308 * C1467;
    const double C3110 = C79308 * C1468;
    const double C274 = C79307 * C250;
    const double C579 = C166 * C250;
    const double C650 = C245 * C250;
    const double C52405 = C52140 * C250;
    const double C1004 = C79307 * C977;
    const double C1480 = C166 * C977;
    const double C1585 = C245 * C977;
    const double C27513 = C26498 * C977;
    const double C53083 = C52140 * C977;
    const double C1587 = C245 * C978;
    const double C2760 = C79307 * C978;
    const double C3109 = C166 * C978;
    const double C28856 = C26498 * C978;
    const double C54500 = C52140 * C978;
    const double C2520 = C245 * C1911;
    const double C3406 = C79307 * C1911;
    const double C3755 = C166 * C1911;
    const double C52403 = C52141 * C1911;
    const double C54981 = C26498 * C1911;
    const double C55116 = C52140 * C1911;
    const double C4181 = C79307 * C4167;
    const double C4723 = C166 * C4167;
    const double C4837 = C245 * C4167;
    const double C30342 = C26498 * C4167;
    const double C53081 = C52141 * C4167;
    const double C56033 = C52140 * C4167;
    const double C7375 = C245 * C6946;
    const double C8307 = C245 * C7686;
    const double C53084 = C52141 * C7686;
    const double C78287 = C77450 + C78286;
    const double C78313 = C77450 + C78312;
    const double C78621 = C78056 + C78620;
    const double C77588 = C77581 + C77586;
    const double C77668 = C77662 + C77667;
    const double C5824 =
        (3 * (C78088 + ae * C78097 + C77506 * C78102) +
         ae * (2 * C78097 + C77506 * C78103) +
         C77506 * (2 * C78102 + ae * C78103 +
                   C77506 * (C78098 + ae * C77506 * C78099 +
                             C77506 * (ae * C78099 + C77506 * C77391 *
                                                         std::pow(C77397, 7) *
                                                         bs[7] * C77636)))) /
        std::pow(C77335, 2);
    const double C5916 =
        (3 * (C78109 + ae * C78097 + C77506 * C78117) +
         ae * (2 * C78097 + C77506 * C78103) +
         C77506 * (2 * C78117 + ae * C78103 +
                   C77506 * (C78115 + ae * C77506 * C78099 +
                             C77506 * (ae * C78099 + C77506 * C77391 *
                                                         std::pow(C77397, 7) *
                                                         bs[7] * C77673)))) /
        std::pow(C77335, 2);
    const double C7163 = C79307 * C5821;
    const double C78184 = C78183 + C78027;
    const double C7302 = C79308 * C5913;
    const double C78328 = ae * C78325;
    const double C78327 = C77549 * C78325;
    const double C78366 = 2 * C78325;
    const double C7376 = C7373 + C5964;
    const double C6954 = C6951 + C6952;
    const double C8308 = C8305 + C6726;
    const double C7694 = C7691 + C7692;
    const double C78194 = C78193 + C78055;
    const double C5966 = C245 * C5677;
    const double C31372 = C79307 * C5677;
    const double C31578 = C26498 * C5677;
    const double C57082 = C52140 * C5677;
    const double C8936 = C245 * C8521;
    const double C34205 = C79307 * C8521;
    const double C34489 = C26498 * C8521;
    const double C57080 = C52141 * C8521;
    const double C59844 = C166 * C8521;
    const double C59913 = C52140 * C8521;
    const double C78594 = C78355 + C78593;
    const double C78701 = C77698 + C78355;
    const double C78356 = C77560 + C78353;
    const double C78450 = ae * C78448;
    const double C78449 = C77549 * C78448;
    const double C78625 = 2 * C78448;
    const double C78531 = C78526 + C78529;
    const double C78541 = C78537 + C78540;
    const double C272 = C79307 * C256;
    const double C996 = C79307 * C983;
    const double C1000 = C79307 * C984;
    const double C6950 = C79307 * C5679;
    const double C31378 = C31374 * C79306;
    const double C31953 = C31947 * C79306;
    const double C53451 = C79306 * C2022;
    const double C53455 = C79306 * C2023;
    const double C62872 = C79306 * C10477;
    const double C31429 = C79306 * C5727;
    const double C6391 = (2 * ae * (C77519 + C77530 * C77688) +
                          C77506 * (C78023 + C78066 * C77688)) /
                         std::pow(C77335, 2);
    const double C10523 =
        (2 * C77549 * C78023 + C77549 * (C78023 + C78066 * C77688)) /
        std::pow(C77335, 2);
    const double C78050 = C78044 + C78045;
    const double C10525 =
        (3 * (C77619 + C77624 * C77688) +
         C77549 * (2 * C78246 + C77549 * (C77624 + C77629 * C77688))) /
        std::pow(C77335, 2);
    const double C12647 =
        (2 * ae * (2 * C78299 + C77549 * C78301) +
         C77506 * (2 * C78246 + C77549 * (C77624 + C77629 * C77688))) /
        std::pow(C77335, 2);
    const double C392 = C79308 * C377;
    const double C1187 = C79308 * C1172;
    const double C2117 = C79308 * C2104;
    const double C2120 = C79308 * C2105;
    const double C4393 = C79308 * C4386;
    const double C57485 = C79308 * C6392;
    const double C61510 = C79308 * C10524;
    const double C31529 = C79307 * C5823;
    const double C1305 = C1301 * C79308;
    const double C2238 = C2234 * C79308;
    const double C27509 = C79306 * C1383;
    const double C27512 = C79306 * C1384;
    const double C32950 = C79306 * C5867;
    const double C61611 = C79306 * C10621;
    const double C61660 = C79308 * C10667;
    const double C1489 = C1485 * C79307;
    const double C2422 = C2418 * C79307;
    const double C5959 =
        (2 * C77506 * C78119 + C77506 * (C78119 + C77391 * C77703 * C77614)) /
        std::pow(C77335, 2);
    const double C5962 =
        (3 * (C78119 + C78123 * C77614) +
         C77506 *
             (2 * C77506 * C78123 +
              C77506 * (C78123 + C77391 *
                                     (C77463 * C77464 +
                                      C77688 * bs[7] * std::pow(C77397, 7)) *
                                     C77398 * C77614))) /
        std::pow(C77335, 2);
    const double C6719 = (2 * ae * (C77562 + C77573 * C77614) +
                          C77549 * (C78119 + C78123 * C77614)) /
                         std::pow(C77335, 2);
    const double C78349 = C78343 + C78344;
    const double C651 = C79307 * C636;
    const double C1580 = C79307 * C1567;
    const double C1583 = C79307 * C1568;
    const double C2516 = C79307 * C2501;
    const double C4835 = C79307 * C4828;
    const double C31672 = C79307 * C5960;
    const double C31674 = C79307 * C5961;
    const double C32457 = C79307 * C6720;
    const double C34629 = C79307 * C8933;
    const double C31951 = C31945 * C79306;
    const double C7999 = C79307 * C6479;
    const double C2237 = C2233 * C79308;
    const double C1488 = C1484 * C79307;
    const double C31930 =
        (2 * C78427 + C77506 * C78480 + ae * C77549 * C78477 +
         C77549 * (ae * C78477 +
                   C77549 * (2 * C77506 * C77578 +
                             C77506 * (C77578 + std::pow(C77397, 7) * bs[7] *
                                                    C77553 * C77614)))) /
        std::pow(C77335, 2);
    const double C32287 =
        (2 * C78437 + C77506 * C78535 + ae * C77549 * C78477 +
         C77549 * (ae * C78477 +
                   C77549 * (2 * C77506 * C77664 +
                             C77506 * (C77664 + std::pow(C77397, 7) * bs[7] *
                                                    C77652 * C77614)))) /
        std::pow(C77335, 2);
    const double C34200 =
        (ae * (3 * C78006 + C77506 * C78477) +
         C77549 * (3 * C78480 +
                   C77506 * (2 * C77506 * C77578 +
                             C77506 * (C77578 + std::pow(C77397, 7) * bs[7] *
                                                    C77553 * C77614)))) /
        std::pow(C77335, 2);
    const double C34275 =
        (3 * (C78242 + ae * C77549 * C77911 + C77506 * C78580) +
         ae * C77549 * C78477 +
         C77506 * (2 * C78580 + ae * C77549 * C78473 +
                   C77506 * (C78578 + ae * C77549 * C77506 * C77476 +
                             C77506 * (ae * C77549 * C77476 +
                                       C77506 * C77549 * std::pow(C77397, 7) *
                                           bs[7] * C77594)))) /
        std::pow(C77335, 2);
    const double C34487 =
        (ae * (3 * C78006 + C77506 * C78477) +
         C77549 * (3 * C78535 +
                   C77506 * (2 * C77506 * C77664 +
                             C77506 * (C77664 + std::pow(C77397, 7) * bs[7] *
                                                    C77652 * C77614)))) /
        std::pow(C77335, 2);
    const double C31260 = (4 * (2 * C78002 + C77506 * C78006) +
                           C77506 * (3 * C78006 + C77506 * C78477)) /
                          C77335;
    const double C31756 =
        (2 * C78002 + C77506 * C78006 + C78477 * C77688) / C77335;
    const double C34056 = (C77549 * (3 * C78006 + C77506 * C78477)) / C77335;
    const double C36014 = C26498 * C36008;
    const double C61289 = (4 * (2 * C78280 + C77549 * C78284) +
                           C77549 * (3 * C78284 + C77549 * C78681)) /
                          C77335;
    const double C77773 = C77506 * C77546;
    const double C2218 =
        (2 * C77391 * C77642 + C77391 * C77647 + ae * C77549 * C77546 +
         C77549 * (ae * C77546 +
                   C77549 * (2 * C77391 * C77645 +
                             C77391 * (C77645 + std::pow(C77397, 7) * bs[7] *
                                                    C77636 * C77395)))) /
        std::pow(C77335, 2);
    const double C2402 =
        (2 * C77391 * C77679 + C77391 * C77684 + ae * C77549 * C77546 +
         C77549 * (ae * C77546 +
                   C77549 * (2 * C77391 * C77682 +
                             C77391 * (C77682 + std::pow(C77397, 7) * bs[7] *
                                                    C77673 * C77395)))) /
        std::pow(C77335, 2);
    const double C3614 =
        (ae * (3 * C77528 + C77391 * C77546) +
         C77549 * (3 * C77647 +
                   C77391 * (2 * C77391 * C77645 +
                             C77391 * (C77645 + std::pow(C77397, 7) * bs[7] *
                                                    C77636 * C77395)))) /
        std::pow(C77335, 2);
    const double C3753 =
        (ae * (3 * C77528 + C77391 * C77546) +
         C77549 * (3 * C77684 +
                   C77391 * (2 * C77391 * C77682 +
                             C77391 * (C77682 + std::pow(C77397, 7) * bs[7] *
                                                    C77673 * C77395)))) /
        std::pow(C77335, 2);
    const double C4388 =
        (2 * ae * C77549 * C77546 +
         C77506 * C77549 *
             (2 * C77391 * C77629 +
              C77391 * (C77629 + (C77463 * C77464 +
                                  C77614 * bs[7] * std::pow(C77397, 7)) *
                                     C77398 * C77395))) /
        std::pow(C77335, 2);
    const double C172 = (4 * (2 * C77519 + C77391 * C77528) +
                         C77391 * (3 * C77528 + C77391 * C77546)) /
                        C77335;
    const double C1798 =
        (2 * C77519 + C77391 * C77528 + C77546 * C77688) / C77335;
    const double C3326 = (C77549 * (3 * C77528 + C77391 * C77546)) / C77335;
    const double C10531 = C166 * C10380;
    const double C61344 = (4 * (2 * C78299 + C77549 * C78301) +
                           C77549 * (3 * C78301 + C77549 * C78687)) /
                          C77335;
    const double C77907 = C77549 * C77589;
    const double C1285 =
        (2 * C77391 * C77642 + C77391 * C77647 + ae * C77506 * C77589 +
         C77506 * (ae * C77589 +
                   C77506 * (2 * C77391 * C77645 +
                             C77391 * (C77645 + std::pow(C77397, 7) * bs[7] *
                                                    C77636 * C77395)))) /
        std::pow(C77335, 2);
    const double C1469 =
        (2 * C77391 * C77679 + C77391 * C77684 + ae * C77506 * C77589 +
         C77506 * (ae * C77589 +
                   C77506 * (2 * C77391 * C77682 +
                             C77391 * (C77682 + std::pow(C77397, 7) * bs[7] *
                                                    C77673 * C77395)))) /
        std::pow(C77335, 2);
    const double C2968 =
        (ae * (3 * C77571 + C77391 * C77589) +
         C77506 * (3 * C77647 +
                   C77391 * (2 * C77391 * C77645 +
                             C77391 * (C77645 + std::pow(C77397, 7) * bs[7] *
                                                    C77636 * C77395)))) /
        std::pow(C77335, 2);
    const double C3107 =
        (ae * (3 * C77571 + C77391 * C77589) +
         C77506 * (3 * C77684 +
                   C77391 * (2 * C77391 * C77682 +
                             C77391 * (C77682 + std::pow(C77397, 7) * bs[7] *
                                                    C77673 * C77395)))) /
        std::pow(C77335, 2);
    const double C4830 =
        (2 * ae * C77506 * C77589 +
         C77549 * C77506 *
             (2 * C77391 * C77703 +
              C77391 * (C77703 + (C77463 * C77464 +
                                  C77688 * bs[7] * std::pow(C77397, 7)) *
                                     C77398 * C77395))) /
        std::pow(C77335, 2);
    const double C251 = (4 * (2 * C77562 + C77391 * C77571) +
                         C77391 * (3 * C77571 + C77391 * C77589)) /
                        C77335;
    const double C979 =
        (2 * C77562 + C77391 * C77571 + C77589 * C77614) / C77335;
    const double C2754 = (C77506 * (3 * C77571 + C77391 * C77589)) / C77335;
    const double C5967 = C245 * C5678;
    const double C78571 = C77549 * C78532;
    const double C31362 = (4 * (2 * C78091 + C77506 * C78095) +
                           C77506 * (3 * C78095 + C77506 * C78532)) /
                          C77335;
    const double C78986 = C78982 - C78985;
    const double C79281 = C79250 / C78972;
    const double C78995 = C78991 - C78994;
    const double C79298 = C79280 / C78976;
    const double C79068 = C79063 - C79067;
    const double C79285 = C79258 / C78972;
    const double C79075 = C79071 - C79074;
    const double C79302 = C79288 / C78976;
    const double C79110 = C79105 - C79109;
    const double C79287 = C79261 / C78972;
    const double C79117 = C79113 - C79116;
    const double C79304 = C79291 / C78976;
    const double C26958 = C26952 + C26501;
    const double C31271 = C31269 + C26939;
    const double C26959 = C26953 + C26937;
    const double C27503 = C27249 * C245;
    const double C27498 = C27246 * C245;
    const double C27524 = C27518 * C79307;
    const double C27523 = C27517 * C79307;
    const double C27522 = C27516 * C79307;
    const double C53179 = C53173 + C27762;
    const double C53178 = C53172 + C27761;
    const double C29700 = C29697 + C27760;
    const double C31772 = C31769 + C29690;
    const double C30338 = C30028 * C245;
    const double C55522 = C30028 * C166;
    const double C30348 = C30345 * C79307;
    const double C31575 = C31432 * C245;
    const double C31583 = C31581 * C79307;
    const double C32292 = C32045 * C245;
    const double C57406 = C32045 * C166;
    const double C32302 = C32299 * C79307;
    const double C61299 = C61297 + C36012;
    const double C53477 = C53465 * C79308;
    const double C53475 = C53463 * C166;
    const double C53474 = C53462 * C79308;
    const double C53473 = C53461 * C79308;
    const double C53472 = C53460 * C166;
    const double C61463 = C61459 * C79308;
    const double C61462 = C61458 * C166;
    const double C402 = C398 + C383;
    const double C53570 = C53568 + C53559;
    const double C661 = C657 + C642;
    const double C27684 = C27682 + C27677;
    const double C876 = C79308 * C866;
    const double C27233 = C79306 * C1086;
    const double C1923 = C79307 * C1913;
    const double C53727 = C79306 * C2313;
    const double C198 = C184 + C185;
    const double C277 = C263 + C264;
    const double C1005 = C989 + C990;
    const double C26954 = C26940 + C26502;
    const double C27250 = C27230 + C27231;
    const double C1824 = C1808 + C1809;
    const double C53174 = C53163 + C27764;
    const double C53464 = C53444 + C53445;
    const double C1171 =
        (C77391 * C77619 + C77765 + C77765 +
         C77506 * (2 * ae * C77519 + C77506 * C77391 * C77624)) /
        std::pow(C77335, 2);
    const double C4716 =
        (C77765 + C77549 * (ae * C77562 + C77506 * C77391 * C77679)) /
        std::pow(C77335, 2);
    const double C880 = C79308 * C861;
    const double C1183 = C166 * C861;
    const double C1291 = C245 * C861;
    const double C27236 = C26498 * C861;
    const double C27339 = C26551 * C861;
    const double C27337 = C26552 * C861;
    const double C4057 = C79308 * C4048;
    const double C4392 = C166 * C4048;
    const double C4507 = C245 * C4048;
    const double C28073 = C26552 * C4048;
    const double C30021 = C26498 * C4048;
    const double C30134 = C26551 * C4048;
    const double C2500 =
        (C77391 * C77693 + C77899 + C77899 +
         C77549 * (2 * ae * C77562 + C77549 * C77391 * C77698)) /
        std::pow(C77335, 2);
    const double C4502 =
        (C77899 + C77506 * (ae * C77519 + C77549 * C77391 * C77642)) /
        std::pow(C77335, 2);
    const double C1927 = C79307 * C1908;
    const double C2408 = C166 * C1908;
    const double C2512 = C245 * C1908;
    const double C53728 = C26498 * C1908;
    const double C53901 = C52140 * C1908;
    const double C53899 = C52141 * C1908;
    const double C1290 = C1007 * C166;
    const double C27134 = C1007 * C26498;
    const double C1594 = C1590 + C1579;
    const double C2407 = C1826 * C245;
    const double C53274 = C1826 * C26498;
    const double C2131 = C2127 + C2116;
    const double C4506 = C4182 * C166;
    const double C29909 = C4182 * C26498;
    const double C4842 = C4840 + C4834;
    const double C4059 = C79308 * C4052;
    const double C77425 = C77424 + C77417;
    const double C768 =
        (C77506 * C77420 + C77712 + C77712 +
         C77391 * (2 * ae * C77506 * C77416 + C77391 * C77506 * C77446)) /
        std::pow(C77335, 2);
    const double C869 = (ae * C77512 + C77391 * C77516 + C77712 +
                         C77506 * (C77423 + C77506 * C77527)) /
                        std::pow(C77335, 2);
    const double C1089 = (ae * C77512 + C77391 * C77597 + C77712 +
                          C77506 * (C77423 + C77506 * C77602)) /
                         std::pow(C77335, 2);
    const double C4170 =
        (C77712 + C77549 * C77506 * C77570) / std::pow(C77335, 2);
    const double C4614 =
        (C77712 + C77549 * C77506 * C77660) / std::pow(C77335, 2);
    const double C3947 = C93 * C3936;
    const double C3945 = C95 * C3936;
    const double C4058 = C166 * C3936;
    const double C4176 = C245 * C3936;
    const double C27765 = C26498 * C3936;
    const double C30020 = C79306 * C3936;
    const double C1701 =
        (C77549 * C77420 + C77814 + C77814 +
         C77391 * (2 * ae * C77549 * C77416 + C77391 * C77549 * C77446)) /
        std::pow(C77335, 2);
    const double C1916 = (ae * C77555 + C77391 * C77559 + C77814 +
                          C77549 * (C77423 + C77549 * C77570)) /
                         std::pow(C77335, 2);
    const double C2316 = (ae * C77555 + C77391 * C77655 + C77814 +
                          C77549 * (C77423 + C77549 * C77660)) /
                         std::pow(C77335, 2);
    const double C4284 =
        (C77814 + C77506 * C77549 * C77602) / std::pow(C77335, 2);
    const double C26955 = C26942 + C26943;
    const double C27252 = C27234 + C27235;
    const double C53175 = C53165 + C27767;
    const double C53466 = C53448 + C53449;
    const double C78041 = C78040 + C78037;
    const double C6394 =
        (C77549 * C77619 + C78155 + C78155 +
         C77506 * (2 * ae * C77549 * C77517 + C77506 * C77549 * C77624)) /
        std::pow(C77335, 2);
    const double C6638 = (ae * C77555 + C77506 * C77676 + C78155 +
                          C77549 * (C78039 + C77549 * C78113)) /
                         std::pow(C77335, 2);
    const double C78340 = C78339 + C78336;
    const double C6718 =
        (C77506 * C77693 + C78189 + C78189 +
         C77549 * (2 * ae * C78091 + C77549 * C77506 * C77698)) /
        std::pow(C77335, 2);
    const double C6725 = C245 * C6226;
    const double C31933 = C79307 * C6226;
    const double C32290 = C26498 * C6226;
    const double C56030 = C52141 * C6226;
    const double C57725 = C166 * C6226;
    const double C57809 = C52140 * C6226;
    const double C31771 = C31768 + C27763;
    const double C32289 = C32043 * C245;
    const double C57404 = C32043 * C166;
    const double C55929 = C79308 * C4715;
    const double C27248 = C27226 + C27227;
    const double C27423 = C27420 + C27421;
    const double C55630 = C55626 + C4390;
    const double C30027 = C30015 + C30016;
    const double C55322 = C55314 + C55315;
    const double C57491 = C57484 + C6399;
    const double C32044 = C32033 + C32034;
    const double C32211 = C32205 + C32206;
    const double C57244 = C57232 + C57233;
    const double C403 = C399 + C386;
    const double C404 = C400 + C389;
    const double C1201 = C1197 + C1179;
    const double C2134 = C2130 + C2112;
    const double C53571 = C53569 + C53561;
    const double C30236 = C79307 * C4501;
    const double C53735 = C53724 + C53725;
    const double C53819 = C53816 + C53817;
    const double C662 = C658 + C645;
    const double C663 = C659 + C648;
    const double C1597 = C1593 + C1575;
    const double C27685 = C27683 + C27679;
    const double C2530 = C2526 + C2508;
    const double C30551 = C30550 + C30548;
    const double C77468 = C77460 + C77450;
    const double C77453 = C77452 + C77441;
    const double C77716 = ae * C77715;
    const double C5571 = (2 * C77711 + C77506 * C77715) / C77335;
    const double C6049 = (C77549 * C77715) / C77335;
    const double C77956 = ae * C77955;
    const double C6060 = C95 * C6047;
    const double C10821 = C93 * C6047;
    const double C10923 = C166 * C6047;
    const double C11029 = C245 * C6047;
    const double C27766 = C26498 * C6047;
    const double C36770 = C79306 * C6047;
    const double C77818 = ae * C77817;
    const double C10323 = (2 * C77813 + C77549 * C77817) / C77335;
    const double C31319 =
        (4 * (2 * C78005 + ae * C78006 + C77506 * C78476) +
         ae * (3 * C78006 + C77506 * C78477) +
         C77506 * (3 * C78476 + ae * C78477 +
                   C77506 * (2 * C78472 + ae * C78473 +
                             C77506 * (C77535 + ae * C77506 * C77476 +
                                       C77506 * (ae * C77476 +
                                                 C77506 * std::pow(C77397, 7) *
                                                     bs[7] * C77510))))) /
        std::pow(C77335, 2);
    const double C31854 =
        (2 * C78005 + ae * C78006 + C77506 * C78476 +
         (2 * C78472 + ae * C78473 +
          C77506 * (C77535 + ae * C77506 * C77476 +
                    C77506 * (ae * C77476 +
                              C77506 * std::pow(C77397, 7) * bs[7] * C77510))) *
             C77688) /
        std::pow(C77335, 2);
    const double C34132 =
        (C77549 * (3 * C78476 + ae * C78477 +
                   C77506 * (2 * C78472 + ae * C78473 +
                             C77506 * (C77535 + ae * C77506 * C77476 +
                                       C77506 * (ae * C77476 +
                                                 C77506 * std::pow(C77397, 7) *
                                                     bs[7] * C77510))))) /
        std::pow(C77335, 2);
    const double C38010 =
        (2 * C77549 * C78476 +
         C77549 *
             (C78476 + (C77535 + ae * C78603 +
                        C77506 * (ae * C77476 + C77506 * std::pow(C77397, 7) *
                                                    bs[7] * C77510)) *
                           C77688)) /
        std::pow(C77335, 2);
    const double C31422 =
        (4 * (2 * C78018 + ae * C78006 + C77506 * C78486) +
         ae * (3 * C78006 + C77506 * C78477) +
         C77506 * (3 * C78486 + ae * C78477 +
                   C77506 * (2 * C78484 + ae * C78473 +
                             C77506 * (C77606 + ae * C77506 * C77476 +
                                       C77506 * (ae * C77476 +
                                                 C77506 * std::pow(C77397, 7) *
                                                     bs[7] * C77594))))) /
        std::pow(C77335, 2);
    const double C38084 = C38080 + C38081;
    const double C37941 = C37940 + C36011;
    const double C38369 = C38160 * C245;
    const double C63488 = C38160 * C166;
    const double C61405 =
        (4 * (2 * C78283 + ae * C78284 + C77549 * C78680) +
         ae * (3 * C78284 + C77549 * C78681) +
         C77549 * (3 * C78680 + ae * C78681 +
                   C77549 * (2 * C78676 + ae * C78677 +
                             C77549 * (C77578 + ae * C77549 * C77476 +
                                       C77549 * (ae * C77476 +
                                                 C77549 * std::pow(C77397, 7) *
                                                     bs[7] * C77553))))) /
        std::pow(C77335, 2);
    const double C61606 =
        (4 * (2 * C78310 + ae * C78284 + C77549 * C78693) +
         ae * (3 * C78284 + C77549 * C78681) +
         C77549 * (3 * C78693 + ae * C78681 +
                   C77549 * (2 * C78691 + ae * C78677 +
                             C77549 * (C77664 + ae * C77549 * C77476 +
                                       C77549 * (ae * C77476 +
                                                 C77549 * std::pow(C77397, 7) *
                                                     bs[7] * C77652))))) /
        std::pow(C77335, 2);
    const double C31270 = C31265 + C31266;
    const double C31375 = C31369 + C31370;
    const double C31435 = C31430 + C31431;
    const double C31770 = C31763 + C31764;
    const double C31948 = C31940 + C31941;
    const double C32048 = C32041 + C32042;
    const double C34062 = C34059 + C31766;
    const double C34206 = C34202 + C34203;
    const double C34282 = C34279 + C34280;
    const double C61298 = C61294 + C36013;
    const double C61357 = C61351 + C61352;
    const double C61461 = C61456 + C61457;
    const double C29692 = C79306 * C3940;
    const double C31760 = C79306 * C6054;
    const double C77488 = C77485 * ae;
    const double C2680 = (C77506 * (3 * C77528 + C77391 * C77546) +
                          (3 * C77442 + C77391 * C77485) * ae) /
                         C77335;
    const double C3400 = (C77549 * (3 * C77571 + C77391 * C77589) +
                          (3 * C77442 + C77391 * C77485) * ae) /
                         C77335;
    const double C4168 =
        (C77549 * C77506 * C77589 + C77506 * C77485 * ae) / C77335;
    const double C101 = 4 * (2 * C77414 + C77391 * C77442) +
                        C77391 * (3 * C77442 + C77391 * C77485);
    const double C755 = 2 * C77414 + C77391 * C77442 + C77485 * C77614;
    const double C1688 = 2 * C77414 + C77391 * C77442 + C77485 * C77688;
    const double C2609 = C77506 * (3 * C77442 + C77391 * C77485);
    const double C3255 = C77549 * (3 * C77442 + C77391 * C77485);
    const double C3934 = C77549 * C77506 * C77485;
    const double C78214 = ae * C78211;
    const double C78213 = C77506 * C78211;
    const double C78229 = C77549 * C78211;
    const double C78418 = ae * C78415;
    const double C78417 = C77549 * C78415;
    const double C78398 = C78397 + C78212;
    const double C7996 =
        (ae * C77528 + C77549 * C77647 +
         ae * (C77549 * C77506 * C77585 + C78212) +
         C77506 * (ae * (C77549 * C77585 + C77481) +
                   C77506 * (ae * C77542 +
                             C77549 * (C77645 + std::pow(C77397, 7) * bs[7] *
                                                    C77636 * C77395)))) /
        std::pow(C77335, 2);
    const double C78080 = C77530 + C78078;
    const double C78162 = C78026 + C78161;
    const double C78256 = ae * C78254;
    const double C78377 = C77573 + C78374;
    const double C78198 = C78197 + C78077;
    const double C8937 = C245 * C8522;
    const double C58409 = C52141 * C8522;
    const double C78462 = ae * C78460;
    const double C78461 = C77549 * C78460;
    const double C77493 = C77491 + C77477;
    const double C77731 = ae * C77729;
    const double C78202 = C77506 * C77729;
    const double C78223 = C77549 * C77729;
    const double C6052 = (C77715 + C77729 * C77688) / C77335;
    const double C77833 = ae * C77831;
    const double C78402 = C77549 * C77831;
    const double C77962 = ae * C77960;
    const double C78386 = C77720 + C78385;
    const double C78510 = C78508 + C78500;
    const double C78559 = ae * C78557;
    const double C78651 = C77549 * C78557;
    const double C78722 = C78721 + C78714;
    const double C77492 = C77391 * C77490;
    const double C5575 =
        (2 * ae * (2 * C77506 * C77416 + C77506 * (C77416 + C77440 * C77614)) +
         C77391 * (2 * C77718 + C77506 * C77727)) /
        std::pow(C77335, 2);
    const double C5577 = (3 * (C77420 + C77446 * C77614) +
                          C77506 * (2 * C77718 + C77506 * C77727)) /
                         std::pow(C77335, 2);
    const double C5578 =
        (2 * ae *
             (3 * (C77416 + C77440 * C77614) +
              C77506 * (2 * C77911 + C77506 * (C77440 + C77476 * C77614))) +
         C77391 * (3 * C77727 +
                   C77506 * (2 * C77912 +
                             C77506 * (C77483 +
                                       (C77463 * C77464 +
                                        C77395 * bs[7] * std::pow(C77397, 7)) *
                                           C77398 * C77614)))) /
        std::pow(C77335, 2);
    const double C6055 = (2 * ae * C77549 * C78006 + C77391 * C77549 * C77727) /
                         std::pow(C77335, 2);
    const double C6057 =
        (C77420 + C77446 * C77614 + C77727 * C77688) / std::pow(C77335, 2);
    const double C6058 =
        (2 * ae * (C78006 + (C77440 + C77476 * C77614) * C77688) +
         C77391 * (C77727 + (C77483 + (C77463 * C77464 +
                                       C77395 * bs[7] * std::pow(C77397, 7)) *
                                          C77398 * C77614) *
                                C77688)) /
        std::pow(C77335, 2);
    const double C8381 =
        (C77549 * (2 * C77718 + C77506 * C77727)) / std::pow(C77335, 2);
    const double C31261 =
        (4 * (2 * C77718 + C77506 * C77727) +
         C77506 * (3 * C77727 +
                   C77506 * (2 * C77912 +
                             C77506 * (C77483 +
                                       (C77463 * C77464 +
                                        C77395 * bs[7] * std::pow(C77397, 7)) *
                                           C77398 * C77614)))) /
        std::pow(C77335, 2);
    const double C31757 =
        (2 * C77718 + C77506 * C77727 +
         (2 * C77912 +
          C77506 * (C77483 +
                    (C77463 * C77464 + C77395 * bs[7] * std::pow(C77397, 7)) *
                        C77398 * C77614)) *
             C77688) /
        std::pow(C77335, 2);
    const double C34057 =
        (C77549 *
         (3 * C77727 +
          C77506 * (2 * C77912 +
                    C77506 * (C77483 + (C77463 * C77464 +
                                        C77395 * bs[7] * std::pow(C77397, 7)) *
                                           C77398 * C77614)))) /
        std::pow(C77335, 2);
    const double C37935 =
        (2 * C77549 * C77727 +
         C77549 * (C77727 + (C77483 + (C77463 * C77464 +
                                       C77395 * bs[7] * std::pow(C77397, 7)) *
                                          C77398 * C77614) *
                                C77688)) /
        std::pow(C77335, 2);
    const double C10327 =
        (2 * ae * (2 * C77549 * C77416 + C77549 * (C77416 + C77440 * C77688)) +
         C77391 * (2 * C77820 + C77549 * C77829)) /
        std::pow(C77335, 2);
    const double C10329 = (3 * (C77420 + C77446 * C77688) +
                           C77549 * (2 * C77820 + C77549 * C77829)) /
                          std::pow(C77335, 2);
    const double C10330 =
        (2 * ae *
             (3 * (C77416 + C77440 * C77688) +
              C77549 * (2 * C77932 + C77549 * (C77440 + C77476 * C77688))) +
         C77391 * (3 * C77829 +
                   C77549 * (2 * C77933 +
                             C77549 * (C77483 +
                                       (C77463 * C77464 +
                                        C77395 * bs[7] * std::pow(C77397, 7)) *
                                           C77398 * C77688)))) /
        std::pow(C77335, 2);
    const double C61290 =
        (4 * (2 * C77820 + C77549 * C77829) +
         C77549 * (3 * C77829 +
                   C77549 * (2 * C77933 +
                             C77549 * (C77483 +
                                       (C77463 * C77464 +
                                        C77395 * bs[7] * std::pow(C77397, 7)) *
                                           C77398 * C77688)))) /
        std::pow(C77335, 2);
    const double C77922 = C77921 + C77917;
    const double C12370 =
        (2 * ae *
             (2 * C77549 * C77911 +
              C77549 * (C77911 + C77506 * C77476 * C77688)) +
         C77391 *
             (2 * C77958 +
              C77549 * (C77912 + C77506 *
                                     (C77463 * C77464 +
                                      C77395 * bs[7] * std::pow(C77397, 7)) *
                                     C77398 * C77688))) /
        std::pow(C77335, 2);
    const double C36009 =
        (3 * (C77718 + C77912 * C77688) +
         C77549 *
             (2 * C77958 +
              C77549 * (C77912 + C77506 *
                                     (C77463 * C77464 +
                                      C77395 * bs[7] * std::pow(C77397, 7)) *
                                     C77398 * C77688))) /
        std::pow(C77335, 2);
    const double C36465 = C79306 * C6053;
    const double C37938 = C79306 * C12369;
    const double C77943 = C77942 + C77938;
    const double C378 =
        (4 * (2 * C77391 * C77624 + C77391 * C77631) +
         C77391 * (3 * C77631 +
                   C77391 * (2 * C77391 * C77629 +
                             C77391 * (C77629 +
                                       (C77463 * C77464 +
                                        C77614 * bs[7] * std::pow(C77397, 7)) *
                                           C77398 * C77395)))) /
        std::pow(C77335, 2);
    const double C1174 = (2 * ae * (2 * C77519 + C77391 * C77528) +
                          C77506 * (2 * C77391 * C77624 + C77391 * C77631)) /
                         std::pow(C77335, 2);
    const double C2106 =
        (C77619 + C77624 * C77395 + C77631 * C77688) / std::pow(C77335, 2);
    const double C2107 = (C77549 * (2 * C77391 * C77624 + C77391 * C77631)) /
                         std::pow(C77335, 2);
    const double C2108 =
        (2 * C77391 * C77624 + C77391 * C77631 +
         (2 * C77391 * C77629 +
          C77391 * (C77629 +
                    (C77463 * C77464 + C77614 * bs[7] * std::pow(C77397, 7)) *
                        C77398 * C77395)) *
             C77688) /
        std::pow(C77335, 2);
    const double C2895 =
        (2 * ae * (3 * C77528 + C77391 * C77546) +
         C77506 * (3 * C77631 +
                   C77391 * (2 * C77391 * C77629 +
                             C77391 * (C77629 +
                                       (C77463 * C77464 +
                                        C77614 * bs[7] * std::pow(C77397, 7)) *
                                           C77398 * C77395)))) /
        std::pow(C77335, 2);
    const double C3541 =
        (C77549 *
         (3 * C77631 +
          C77391 * (2 * C77391 * C77629 +
                    C77391 * (C77629 + (C77463 * C77464 +
                                        C77614 * bs[7] * std::pow(C77397, 7)) *
                                           C77398 * C77395)))) /
        std::pow(C77335, 2);
    const double C4387 = (2 * ae * C77549 * C77528 + C77506 * C77549 * C77631) /
                         std::pow(C77335, 2);
    const double C11231 =
        (2 * ae * (C77528 + C77542 * C77688) +
         C77506 * (C77631 + (C77629 + (C77463 * C77464 +
                                       C77614 * bs[7] * std::pow(C77397, 7)) *
                                          C77398 * C77395) *
                                C77688)) /
        std::pow(C77335, 2);
    const double C12007 =
        (2 * C77549 * C77631 +
         C77549 * (C77631 + (C77629 + (C77463 * C77464 +
                                       C77614 * bs[7] * std::pow(C77397, 7)) *
                                          C77398 * C77395) *
                                C77688)) /
        std::pow(C77335, 2);
    const double C78075 = C78065 + C78071;
    const double C10526 =
        (3 * (C78023 + C78066 * C77688) +
         C77549 *
             (2 * C78252 +
              C77549 * (C78066 + C77391 *
                                     (C77463 * C77464 +
                                      C77614 * bs[7] * std::pow(C77397, 7)) *
                                     C77398 * C77688))) /
        std::pow(C77335, 2);
    const double C12648 =
        (2 * ae * (2 * C78303 + C77549 * C78305) +
         C77506 *
             (2 * C78252 +
              C77549 * (C78066 + C77391 *
                                     (C77463 * C77464 +
                                      C77614 * bs[7] * std::pow(C77397, 7)) *
                                     C77398 * C77688))) /
        std::pow(C77335, 2);
    const double C78502 = C77506 * C78498;
    const double C36187 =
        (2 * ae *
             (3 * C78301 +
              C77549 * (2 * C78561 + C77549 * (C77524 + C77537 * C77688))) +
         C77506 * (3 * C78555 +
                   C77549 * (2 * C78583 +
                             C77549 * (C77629 +
                                       (C77463 * C77464 +
                                        C77614 * bs[7] * std::pow(C77397, 7)) *
                                           C77398 * C77688)))) /
        std::pow(C77335, 2);
    const double C61507 =
        (4 * (2 * C78246 + C77549 * C78555) +
         C77549 * (3 * C78555 +
                   C77549 * (2 * C78583 +
                             C77549 * (C77629 +
                                       (C77463 * C77464 +
                                        C77614 * bs[7] * std::pow(C77397, 7)) *
                                           C77398 * C77688)))) /
        std::pow(C77335, 2);
    const double C78591 = C78582 + C78587;
    const double C637 =
        (4 * (2 * C77391 * C77698 + C77391 * C77705) +
         C77391 * (3 * C77705 +
                   C77391 * (2 * C77391 * C77703 +
                             C77391 * (C77703 +
                                       (C77463 * C77464 +
                                        C77688 * bs[7] * std::pow(C77397, 7)) *
                                           C77398 * C77395)))) /
        std::pow(C77335, 2);
    const double C1569 =
        (C77693 + C77698 * C77395 + C77705 * C77614) / std::pow(C77335, 2);
    const double C1570 = (C77506 * (2 * C77391 * C77698 + C77391 * C77705)) /
                         std::pow(C77335, 2);
    const double C1571 =
        (2 * C77391 * C77698 + C77391 * C77705 +
         (2 * C77391 * C77703 +
          C77391 * (C77703 +
                    (C77463 * C77464 + C77688 * bs[7] * std::pow(C77397, 7)) *
                        C77398 * C77395)) *
             C77614) /
        std::pow(C77335, 2);
    const double C2503 = (2 * ae * (2 * C77562 + C77391 * C77571) +
                          C77549 * (2 * C77391 * C77698 + C77391 * C77705)) /
                         std::pow(C77335, 2);
    const double C3179 =
        (C77506 *
         (3 * C77705 +
          C77391 * (2 * C77391 * C77703 +
                    C77391 * (C77703 + (C77463 * C77464 +
                                        C77688 * bs[7] * std::pow(C77397, 7)) *
                                           C77398 * C77395)))) /
        std::pow(C77335, 2);
    const double C3825 =
        (2 * ae * (3 * C77571 + C77391 * C77589) +
         C77549 * (3 * C77705 +
                   C77391 * (2 * C77391 * C77703 +
                             C77391 * (C77703 +
                                       (C77463 * C77464 +
                                        C77688 * bs[7] * std::pow(C77397, 7)) *
                                           C77398 * C77395)))) /
        std::pow(C77335, 2);
    const double C4829 = (2 * ae * C77506 * C77571 + C77549 * C77506 * C77705) /
                         std::pow(C77335, 2);
    const double C7371 =
        (2 * C77506 * C77705 +
         C77506 * (C77705 + (C77703 + (C77463 * C77464 +
                                       C77688 * bs[7] * std::pow(C77397, 7)) *
                                          C77398 * C77395) *
                                C77614)) /
        std::pow(C77335, 2);
    const double C8303 =
        (2 * ae * (C77571 + C77585 * C77614) +
         C77549 * (C77705 + (C77703 + (C77463 * C77464 +
                                       C77688 * bs[7] * std::pow(C77397, 7)) *
                                          C77398 * C77395) *
                                C77614)) /
        std::pow(C77335, 2);
    const double C78370 = C78364 + C78365;
    const double C31669 =
        (4 * (2 * C78443 + C77506 * C78544) +
         C77506 * (3 * C78544 +
                   C77506 * (2 * C77506 * C77703 +
                             C77506 * (C77703 +
                                       (C77463 * C77464 +
                                        C77688 * bs[7] * std::pow(C77397, 7)) *
                                           C77398 * C77614)))) /
        std::pow(C77335, 2);
    const double C34626 =
        (2 * ae * (3 * C78095 + C77506 * C78532) +
         C77549 * (3 * C78544 +
                   C77506 * (2 * C77506 * C77703 +
                             C77506 * (C77703 +
                                       (C77463 * C77464 +
                                        C77688 * bs[7] * std::pow(C77397, 7)) *
                                           C77398 * C77614)))) /
        std::pow(C77335, 2);
    const double C78633 = C78623 + C78629;
    const double C78716 = C77549 * C78712;
    const double C78511 = C78509 * ae;
    const double C34199 = (C77549 * (3 * C78095 + C77506 * C78532) +
                           (3 * C78053 + C77506 * C78509) * ae) /
                          C77335;
    const double C31259 = 4 * (2 * C78035 + C77506 * C78053) +
                          C77506 * (3 * C78053 + C77506 * C78509);
    const double C31755 = 2 * C78035 + C77506 * C78053 + C78509 * C77688;
    const double C34055 = C77549 * (3 * C78053 + C77506 * C78509);
    const double C78663 = ae * C78660;
    const double C78662 = C77549 * C78660;
    const double C78638 = C78444 + C78636;
    const double C78718 = C78715 * ae;
    const double C61288 = 4 * (2 * C78334 + C77549 * C78352) +
                          C77549 * (3 * C78352 + C77549 * C78715);
    const double C77770 = ae * C77769;
    const double C863 =
        (C77512 + C77517 * C77395 + C77506 * C77769 + C77506 * C77442 * ae) /
        C77335;
    const double C4049 = (C77549 * C77769) / C77335;
    const double C10920 = (C77769 + C78211 * C77688) / C77335;
    const double C203 = C194 + C195;
    const double C397 = C390 + C391;
    const double C469 = C463 + C464;
    const double C2900 = C2897 + C1191;
    const double C2688 = C2685 + C2686;
    const double C1831 = C1822 + C1823;
    const double C2129 = C2121 + C2122;
    const double C2235 = C2229 + C2230;
    const double C3546 = C3543 + C2124;
    const double C3334 = C3331 + C3332;
    const double C3619 = C3616 + C3617;
    const double C6145 =
        (C77423 + C77506 * C77527 + C78009 * C77688) / std::pow(C77335, 2);
    const double C6147 =
        (C77549 * (C77527 + C77722 + C77506 * C78009)) / std::pow(C77335, 2);
    const double C6150 =
        (C77527 + C77722 + C77506 * C78009 +
         (C77541 + C77920 +
          C77506 *
              (C77489 + C77506 * (ae * C77537 + C77391 * std::pow(C77397, 7) *
                                                    bs[7] * C77510))) *
             C77688) /
        std::pow(C77335, 2);
    const double C12442 =
        (2 * C77549 * C78009 +
         C77549 * (C78009 + (C77489 + C77506 * (ae * C77537 +
                                                C77391 * std::pow(C77397, 7) *
                                                    bs[7] * C77510)) *
                                C77688)) /
        std::pow(C77335, 2);
    const double C178 =
        (4 * (2 * C77527 + ae * C77528 + C77391 * C77545) +
         ae * (3 * C77528 + C77391 * C77546) +
         C77391 * (3 * C77545 + ae * C77546 +
                   C77391 * (2 * C77541 + ae * C77542 +
                             C77391 * (C77535 + ae * C77391 * C77537 +
                                       C77391 * (ae * C77537 +
                                                 C77391 * std::pow(C77397, 7) *
                                                     bs[7] * C77510))))) /
        std::pow(C77335, 2);
    const double C1804 =
        (C77516 + ae * C77519 + C77391 * C77527 + C77545 * C77688) /
        std::pow(C77335, 2);
    const double C1805 =
        (C77549 * (2 * C77527 + ae * C77528 + C77391 * C77545)) /
        std::pow(C77335, 2);
    const double C1806 =
        (2 * C77527 + ae * C77528 + C77391 * C77545 +
         (2 * C77541 + ae * C77542 +
          C77391 * (C77535 + ae * C77391 * C77537 +
                    C77391 * (ae * C77537 +
                              C77391 * std::pow(C77397, 7) * bs[7] * C77510))) *
             C77688) /
        std::pow(C77335, 2);
    const double C3327 =
        (C77549 * (3 * C77545 + ae * C77546 +
                   C77391 * (2 * C77541 + ae * C77542 +
                             C77391 * (C77535 + ae * C77391 * C77537 +
                                       C77391 * (ae * C77537 +
                                                 C77391 * std::pow(C77397, 7) *
                                                     bs[7] * C77510))))) /
        std::pow(C77335, 2);
    const double C11793 =
        (2 * C77549 * C77545 +
         C77549 *
             (C77545 + (C77535 + ae * C78068 +
                        C77391 * (ae * C77537 + C77391 * std::pow(C77397, 7) *
                                                    bs[7] * C77510)) *
                           C77688)) /
        std::pow(C77335, 2);
    const double C329 =
        (4 * (2 * C77602 + ae * C77528 + C77391 * C77610) +
         ae * (3 * C77528 + C77391 * C77546) +
         C77391 * (3 * C77610 + ae * C77546 +
                   C77391 * (2 * C77608 + ae * C77542 +
                             C77391 * (C77606 + ae * C77391 * C77537 +
                                       C77391 * (ae * C77537 +
                                                 C77391 * std::pow(C77397, 7) *
                                                     bs[7] * C77594))))) /
        std::pow(C77335, 2);
    const double C2024 =
        (C77597 + ae * C77519 + C77391 * C77602 + C77610 * C77688) /
        std::pow(C77335, 2);
    const double C2025 =
        (C77549 * (2 * C77602 + ae * C77528 + C77391 * C77610)) /
        std::pow(C77335, 2);
    const double C2026 =
        (2 * C77602 + ae * C77528 + C77391 * C77610 +
         (2 * C77608 + ae * C77542 +
          C77391 * (C77606 + ae * C77391 * C77537 +
                    C77391 * (ae * C77537 +
                              C77391 * std::pow(C77397, 7) * bs[7] * C77594))) *
             C77688) /
        std::pow(C77335, 2);
    const double C3474 =
        (C77549 * (3 * C77610 + ae * C77546 +
                   C77391 * (2 * C77608 + ae * C77542 +
                             C77391 * (C77606 + ae * C77391 * C77537 +
                                       C77391 * (ae * C77537 +
                                                 C77391 * std::pow(C77397, 7) *
                                                     bs[7] * C77594))))) /
        std::pow(C77335, 2);
    const double C11940 =
        (2 * C77549 * C77610 +
         C77549 *
             (C77610 + (C77606 + ae * C78068 +
                        C77391 * (ae * C77537 + C77391 * std::pow(C77397, 7) *
                                                    bs[7] * C77594)) *
                           C77688)) /
        std::pow(C77335, 2);
    const double C12083 = C79307 * C10573;
    const double C78030 = C77519 + C78028;
    const double C78152 = ae * C78151;
    const double C6398 = C166 * C6139;
    const double C10926 = C79308 * C6139;
    const double C11338 = C245 * C6139;
    const double C28074 = C26552 * C6139;
    const double C36767 = C26498 * C6139;
    const double C36871 = C26551 * C6139;
    const double C12013 = C12012 + C10528;
    const double C12223 = C11800 * C245;
    const double C62738 = C11800 * C26498;
    const double C78497 = C78488 + C78056;
    const double C78058 = C78057 + C78052;
    const double C78159 = ae * C78158;
    const double C12439 = (2 * C78154 + C77549 * C78158) / C77335;
    const double C61515 = C61511 + C10530;
    const double C61358 = C61353 + C61354;
    const double C61460 = C61454 + C61455;
    const double C61563 =
        (4 * (2 * C78259 + ae * C78301 + C77549 * C78567) +
         ae * (3 * C78301 + C77549 * C78687) +
         C77549 * (3 * C78567 + ae * C78687 +
                   C77549 * (2 * C78564 + ae * C78614 +
                             C77549 * (C77645 + ae * C77549 * C77537 +
                                       C77549 * (ae * C77537 +
                                                 C77549 * std::pow(C77397, 7) *
                                                     bs[7] * C77636))))) /
        std::pow(C77335, 2);
    const double C61655 =
        (4 * (2 * C78318 + ae * C78301 + C77549 * C78699) +
         ae * (3 * C78301 + C77549 * C78687) +
         C77549 * (3 * C78699 + ae * C78687 +
                   C77549 * (2 * C78697 + ae * C78614 +
                             C77549 * (C77682 + ae * C77549 * C77537 +
                                       C77549 * (ae * C77537 +
                                                 C77549 * std::pow(C77397, 7) *
                                                     bs[7] * C77673))))) /
        std::pow(C77335, 2);
    const double C1827 = C1814 + C1815;
    const double C57245 = C57234 + C57235;
    const double C57247 = C57238 + C57239;
    const double C57248 = C57240 + C57241;
    const double C59436 = C59433 + C59434;
    const double C63351 = C63347 + C63348;
    const double C77904 = ae * C77903;
    const double C1910 =
        (C77555 + C77560 * C77395 + C77549 * C77903 + C77549 * C77442 * ae) /
        C77335;
    const double C2973 = C2970 + C2971;
    const double C282 = C273 + C274;
    const double C585 = C579 + C580;
    const double C656 = C649 + C650;
    const double C1012 = C1003 + C1004;
    const double C1486 = C1480 + C1481;
    const double C1592 = C1584 + C1585;
    const double C3184 = C3181 + C1587;
    const double C2762 = C2759 + C2760;
    const double C3112 = C3109 + C3110;
    const double C3830 = C3827 + C2520;
    const double C3408 = C3405 + C3406;
    const double C3758 = C3755 + C3756;
    const double C4185 = C4180 + C4181;
    const double C4841 = C4836 + C4837;
    const double C257 =
        (4 * (2 * C77570 + ae * C77571 + C77391 * C77588) +
         ae * (3 * C77571 + C77391 * C77589) +
         C77391 * (3 * C77588 + ae * C77589 +
                   C77391 * (2 * C77584 + ae * C77585 +
                             C77391 * (C77578 + ae * C77391 * C77580 +
                                       C77391 * (ae * C77580 +
                                                 C77391 * std::pow(C77397, 7) *
                                                     bs[7] * C77553))))) /
        std::pow(C77335, 2);
    const double C985 =
        (C77559 + ae * C77562 + C77391 * C77570 + C77588 * C77614) /
        std::pow(C77335, 2);
    const double C986 =
        (C77506 * (2 * C77570 + ae * C77571 + C77391 * C77588)) /
        std::pow(C77335, 2);
    const double C987 =
        (2 * C77570 + ae * C77571 + C77391 * C77588 +
         (2 * C77584 + ae * C77585 +
          C77391 * (C77578 + ae * C77391 * C77580 +
                    C77391 * (ae * C77580 +
                              C77391 * std::pow(C77397, 7) * bs[7] * C77553))) *
             C77614) /
        std::pow(C77335, 2);
    const double C2755 =
        (C77506 * (3 * C77588 + ae * C77589 +
                   C77391 * (2 * C77584 + ae * C77585 +
                             C77391 * (C77578 + ae * C77391 * C77580 +
                                       C77391 * (ae * C77580 +
                                                 C77391 * std::pow(C77397, 7) *
                                                     bs[7] * C77553))))) /
        std::pow(C77335, 2);
    const double C6947 =
        (2 * C77506 * C77588 +
         C77506 *
             (C77588 + (C77578 + ae * C78099 +
                        C77391 * (ae * C77580 + C77391 * std::pow(C77397, 7) *
                                                    bs[7] * C77553)) *
                           C77614)) /
        std::pow(C77335, 2);
    const double C520 =
        (4 * (2 * C77660 + ae * C77571 + C77391 * C77668) +
         ae * (3 * C77571 + C77391 * C77589) +
         C77391 * (3 * C77668 + ae * C77589 +
                   C77391 * (2 * C77666 + ae * C77585 +
                             C77391 * (C77664 + ae * C77391 * C77580 +
                                       C77391 * (ae * C77580 +
                                                 C77391 * std::pow(C77397, 7) *
                                                     bs[7] * C77652))))) /
        std::pow(C77335, 2);
    const double C1385 =
        (C77655 + ae * C77562 + C77391 * C77660 + C77668 * C77614) /
        std::pow(C77335, 2);
    const double C1386 =
        (C77506 * (2 * C77660 + ae * C77571 + C77391 * C77668)) /
        std::pow(C77335, 2);
    const double C1387 =
        (2 * C77660 + ae * C77571 + C77391 * C77668 +
         (2 * C77666 + ae * C77585 +
          C77391 * (C77664 + ae * C77391 * C77580 +
                    C77391 * (ae * C77580 +
                              C77391 * std::pow(C77397, 7) * bs[7] * C77652))) *
             C77614) /
        std::pow(C77335, 2);
    const double C3040 =
        (C77506 * (3 * C77668 + ae * C77589 +
                   C77391 * (2 * C77666 + ae * C77585 +
                             C77391 * (C77664 + ae * C77391 * C77580 +
                                       C77391 * (ae * C77580 +
                                                 C77391 * std::pow(C77397, 7) *
                                                     bs[7] * C77652))))) /
        std::pow(C77335, 2);
    const double C7232 =
        (2 * C77506 * C77668 +
         C77506 *
             (C77668 + (C77664 + ae * C78099 +
                        C77391 * (ae * C77580 + C77391 * std::pow(C77397, 7) *
                                                    bs[7] * C77652)) *
                           C77614)) /
        std::pow(C77335, 2);
    const double C78185 = ae * C78184;
    const double C6225 =
        (C77506 * C77562 + C77549 * C78184 + C77549 * C78025 * ae) / C77335;
    const double C7304 = C7301 + C7302;
    const double C78329 = C77562 + C78327;
    const double C7377 = C7376 + C5964;
    const double C7164 = C6954 * C166;
    const double C32676 = C6954 * C26498;
    const double C8309 = C8308 + C6726;
    const double C8000 = C7694 * C166;
    const double C33388 = C7694 * C26498;
    const double C78195 = ae * C78194;
    const double C6229 =
        (C77555 + C77560 * C77614 + C77549 * C78194 + C77549 * C78053 * ae) /
        C77335;
    const double C31677 = C31673 + C5966;
    const double C31376 = C31371 + C31372;
    const double C31582 = C31578 + C31579;
    const double C34631 = C34628 + C8936;
    const double C34207 = C34204 + C34205;
    const double C34492 = C34489 + C34490;
    const double C78711 = C78701 + C78355;
    const double C78357 = C78356 + C78351;
    const double C78451 = C78091 + C78449;
    const double C31524 =
        (4 * (2 * C78094 + ae * C78095 + C77506 * C78531) +
         ae * (3 * C78095 + C77506 * C78532) +
         C77506 * (3 * C78531 + ae * C78532 +
                   C77506 * (2 * C78527 + ae * C78528 +
                             C77506 * (C77645 + ae * C77506 * C77580 +
                                       C77506 * (ae * C77580 +
                                                 C77506 * std::pow(C77397, 7) *
                                                     bs[7] * C77636))))) /
        std::pow(C77335, 2);
    const double C31626 =
        (4 * (2 * C78113 + ae * C78095 + C77506 * C78541) +
         ae * (3 * C78095 + C77506 * C78532) +
         C77506 * (3 * C78541 + ae * C78532 +
                   C77506 * (2 * C78539 + ae * C78528 +
                             C77506 * (C77682 + ae * C77506 * C77580 +
                                       C77506 * (ae * C77580 +
                                                 C77506 * std::pow(C77397, 7) *
                                                     bs[7] * C77673))))) /
        std::pow(C77335, 2);
    const double C1008 = C995 + C996;
    const double C53467 = C53450 + C53451;
    const double C53469 = C53454 + C53455;
    const double C62875 = C62871 + C62872;
    const double C11234 = C79308 * C6391;
    const double C12010 = C79308 * C10523;
    const double C61512 = C79308 * C10525;
    const double C63556 = C79308 * C12647;
    const double C1203 = C1199 + C1187;
    const double C2136 = C2132 + C2120;
    const double C61518 = C61516 + C61510;
    const double C27519 = C27508 + C27509;
    const double C27520 = C27511 + C27512;
    const double C32952 = C32949 + C32950;
    const double C7374 = C79307 * C5959;
    const double C8306 = C79307 * C6719;
    const double C1599 = C1595 + C1583;
    const double C2532 = C2528 + C2516;
    const double C31680 = C31678 + C31672;
    const double C32468 = C32465 + C32457;
    const double C31268 = C26498 * C31260;
    const double C31767 = C26498 * C31756;
    const double C34061 = C26498 * C34056;
    const double C61296 = C26498 * C61289;
    const double C393 = C166 * C172;
    const double C2125 = C166 * C1798;
    const double C3545 = C166 * C3326;
    const double C61513 = C166 * C61344;
    const double C652 = C245 * C251;
    const double C1588 = C245 * C979;
    const double C3183 = C245 * C2754;
    const double C31675 = C245 * C31362;
    const double C79214 = C78986 * C78974;
    const double C79252 = C79219 + C78986;
    const double C79222 = C78995 / C78976;
    const double C79218 = C78995 * C78974;
    const double C2605 = C79298 - (C78986 * C78977) / C78972;
    const double C79232 = C79068 * C79062;
    const double C79267 = C79234 + C79068;
    const double C79236 = C79075 / C78976;
    const double C79233 = C79075 * C79062;
    const double C6795 = C79302 - (C79068 * C79064) / C78972;
    const double C79238 = C79110 * C79104;
    const double C79273 = C79240 + C79110;
    const double C79242 = C79117 / C78976;
    const double C79239 = C79117 * C79104;
    const double C11717 = C79304 - (C79110 * C79106) / C78972;
    const double C26964 = C26958 + C26935;
    const double C31273 = C31271 + C31264;
    const double C26965 = C26959 + C26938;
    const double C53185 = C53179 + C53162;
    const double C53184 = C53178 + C53160;
    const double C29703 = C29700 + C29689;
    const double C31775 = C31772 + C31762;
    const double C61301 = C61299 + C61293;
    const double C53572 = C53570 * C79306;
    const double C665 = C661 * C79308;
    const double C891 = C875 + C876;
    const double C27251 = C27232 + C27233;
    const double C1938 = C1922 + C1923;
    const double C53736 = C53726 + C53727;
    const double C27133 = C1005 * C79306;
    const double C26960 = C26954 + C26502;
    const double C27504 = C27250 * C245;
    const double C53273 = C1824 * C79306;
    const double C53180 = C53174 + C27764;
    const double C53476 = C53464 * C166;
    const double C1184 = C79308 * C1171;
    const double C4722 = C79308 * C4716;
    const double C893 = C879 + C880;
    const double C1194 = C1182 + C1183;
    const double C1300 = C1291 + C1292;
    const double C4064 = C4056 + C4057;
    const double C4398 = C4391 + C4392;
    const double C2513 = C79307 * C2500;
    const double C4508 = C79307 * C4502;
    const double C1940 = C1926 + C1927;
    const double C2417 = C2408 + C2409;
    const double C2523 = C2511 + C2512;
    const double C1598 = C1594 + C1580;
    const double C2135 = C2131 + C2117;
    const double C4844 = C4842 + C4835;
    const double C77426 = ae * C77425;
    const double C105 =
        (2 * C77405 + C77391 * C77425 + (C77394 + C77408 * C77395) * ae) /
        C77335;
    const double C760 = (C77506 * C77425) / C77335;
    const double C1693 = (C77549 * C77425) / C77335;
    const double C26947 = C79306 * C768;
    const double C882 = C79308 * C869;
    const double C27237 = C79306 * C1089;
    const double C4177 = C79307 * C4170;
    const double C30341 = C79306 * C4614;
    const double C4065 = C4058 + C4059;
    const double C29698 = C29691 + C27765;
    const double C30029 = C30019 + C30020;
    const double C53168 = C79306 * C1701;
    const double C1929 = C79307 * C1916;
    const double C53729 = C79306 * C2316;
    const double C30022 = C79306 * C4284;
    const double C26961 = C26955 + C26943;
    const double C27507 = C27252 * C245;
    const double C53181 = C53175 + C27767;
    const double C53478 = C53466 * C166;
    const double C78042 = ae * C78041;
    const double C5626 =
        (2 * C77760 + C77506 * C78041 + (C77394 + C77408 * C77614) * ae) /
        C77335;
    const double C6142 = (C77549 * C78041) / C77335;
    const double C57487 = C79308 * C6394;
    const double C57726 = C79308 * C6638;
    const double C78341 = ae * C78340;
    const double C10428 =
        (2 * C77894 + C77549 * C78340 + (C77394 + C77408 * C77688) * ae) /
        C77335;
    const double C32455 = C79307 * C6718;
    const double C32461 = C32454 + C6725;
    const double C31944 = C31932 + C31933;
    const double C32298 = C32290 + C32291;
    const double C55930 = C55928 + C55929;
    const double C55631 = C55630 + C4390;
    const double C55523 = C30027 * C79308;
    const double C55324 = C55322 * C26498;
    const double C57494 = C57491 + C6399;
    const double C57405 = C32044 * C79308;
    const double C57250 = C57244 * C26498;
    const double C53562 = C2134 * C79306;
    const double C53573 = C53571 * C79306;
    const double C30237 = C30235 + C30236;
    const double C666 = C662 * C79308;
    const double C667 = C663 * C79308;
    const double C1601 = C1597 * C79308;
    const double C2534 = C2530 * C79308;
    const double C77455 = ae * C77453;
    const double C77454 = C77391 * C77453;
    const double C77465 = 3 * C77453;
    const double C77719 = C77506 * C77453;
    const double C77821 = C77549 * C77453;
    const double C761 = (C77425 + C77453 * C77614) / C77335;
    const double C1694 = (C77425 + C77453 * C77688) / C77335;
    const double C769 = (C77420 + C77446 * C77614 + C77716 + C77716 +
                         C77391 * (2 * ae * (C77416 + C77440 * C77614) +
                                   C77391 * (C77446 + C77483 * C77614))) /
                        std::pow(C77335, 2);
    const double C5629 =
        (2 * (C77423 + C77506 * C77527) + C77716 +
         C77506 * (C77527 + C77722 + C77506 * (C77450 + C77506 * C77541))) /
        std::pow(C77335, 2);
    const double C5725 =
        (2 * (C77423 + C77506 * C77602) + C77716 +
         C77506 * (C77602 + C77722 + C77506 * (C77450 + C77506 * C77608))) /
        std::pow(C77335, 2);
    const double C6233 =
        (C77716 + C77549 * (C77570 + C77584 * C77614)) / std::pow(C77335, 2);
    const double C6559 =
        (C77716 + C77549 * (C77660 + C77666 * C77614)) / std::pow(C77335, 2);
    const double C5580 = C95 * C5571;
    const double C6805 = C93 * C5571;
    const double C6875 = C166 * C5571;
    const double C6949 = C245 * C5571;
    const double C26945 = C26498 * C5571;
    const double C32746 = C79306 * C5571;
    const double C6062 = C95 * C6049;
    const double C7481 = C93 * C6049;
    const double C7583 = C166 * C6049;
    const double C7689 = C245 * C6049;
    const double C29693 = C26498 * C6049;
    const double C33490 = C79306 * C6049;
    const double C3941 =
        (C77549 * C77718 + C77956 + C77956 +
         C77391 * (2 * ae * C77549 * C77911 + C77391 * C77549 * C77912)) /
        std::pow(C77335, 2);
    const double C6231 = (C77506 * C77570 + C77956 +
                          C77549 * (C77722 + C77549 * C77506 * C77584)) /
                         std::pow(C77335, 2);
    const double C6313 = (C77549 * C77602 + C77956 +
                          C77506 * (C77824 + C77506 * C77549 * C77608)) /
                         std::pow(C77335, 2);
    const double C6557 = (C77506 * C77660 + C77956 +
                          C77549 * (C77722 + C77549 * C77506 * C77666)) /
                         std::pow(C77335, 2);
    const double C36467 = C36464 + C27766;
    const double C36772 = C36769 + C36770;
    const double C1702 = (C77420 + C77446 * C77688 + C77818 + C77818 +
                          C77391 * (2 * ae * (C77416 + C77440 * C77688) +
                                    C77391 * (C77446 + C77483 * C77688))) /
                         std::pow(C77335, 2);
    const double C6311 =
        (C77818 + C77506 * (C77602 + C77608 * C77688)) / std::pow(C77335, 2);
    const double C10431 =
        (2 * (C77423 + C77549 * C77570) + C77818 +
         C77549 * (C77570 + C77824 + C77549 * (C77450 + C77549 * C77584))) /
        std::pow(C77335, 2);
    const double C10619 =
        (2 * (C77423 + C77549 * C77660) + C77818 +
         C77549 * (C77660 + C77824 + C77549 * (C77450 + C77549 * C77666))) /
        std::pow(C77335, 2);
    const double C10332 = C95 * C10323;
    const double C11725 = C93 * C10323;
    const double C11795 = C166 * C10323;
    const double C11869 = C245 * C10323;
    const double C37336 = C26498 * C10323;
    const double C62874 = C79306 * C10323;
    const double C38086 = C38084 * C79306;
    const double C31272 = C31270 + C31266;
    const double C31379 = C31375 * C79306;
    const double C31580 = C31435 * C245;
    const double C31773 = C31770 + C31764;
    const double C31954 = C31948 * C79306;
    const double C32297 = C32048 * C245;
    const double C57409 = C32048 * C166;
    const double C34063 = C34062 + C31766;
    const double C34208 = C34206 * C79306;
    const double C34491 = C34282 * C245;
    const double C59571 = C34282 * C166;
    const double C61300 = C61298 + C36013;
    const double C61361 = C61357 * C79306;
    const double C61465 = C61461 * C166;
    const double C31774 = C31771 + C31760;
    const double C77774 = C77773 + C77488;
    const double C77908 = C77907 + C77488;
    const double C2899 = C166 * C2680;
    const double C26691 = C26552 * C2680;
    const double C3829 = C245 * C3400;
    const double C52406 = C52141 * C3400;
    const double C4839 = C245 * C4168;
    const double C54501 = C52141 * C4168;
    const double C78215 = C77528 + C78213;
    const double C78230 = ae * C78229;
    const double C78419 = C77571 + C78417;
    const double C78399 = ae * C78398;
    const double C11026 =
        (C77506 * C77571 + C77549 * C78398 + C77549 * C78210 * ae) / C77335;
    const double C78081 = C78080 + C78073;
    const double C78163 = ae * C78162;
    const double C12440 = (2 * C78151 + C77549 * C78162) / C77335;
    const double C78378 = C78377 + C78372;
    const double C78199 = ae * C78198;
    const double C6230 =
        (C77562 + C77573 * C77614 + C77549 * C78198 + C77549 * C78074 * ae) /
        C77335;
    const double C78463 = C78097 + C78461;
    const double C77496 = ae * C77493;
    const double C77495 = C77391 * C77493;
    const double C77725 = C77493 * C77614;
    const double C77827 = C77493 * C77688;
    const double C77914 = C77506 * C77493;
    const double C77935 = C77549 * C77493;
    const double C5632 =
        (3 * (C77527 + C77722 + C77506 * C78009) +
         ae * (2 * C77720 + C77506 * C77729) +
         C77506 * (2 * C78009 + C77731 +
                   C77506 * (C77541 + C77920 +
                             C77506 * (C77489 +
                                       C77506 * (ae * C77537 +
                                                 C77391 * std::pow(C77397, 7) *
                                                     bs[7] * C77510))))) /
        std::pow(C77335, 2);
    const double C5728 =
        (3 * (C77602 + C77722 + C77506 * C78021) +
         ae * (2 * C77720 + C77506 * C77729) +
         C77506 * (2 * C78021 + C77731 +
                   C77506 * (C77608 + C77920 +
                             C77506 * (C77489 +
                                       C77506 * (ae * C77537 +
                                                 C77391 * std::pow(C77397, 7) *
                                                     bs[7] * C77594))))) /
        std::pow(C77335, 2);
    const double C6236 =
        (C77570 + C77584 * C77614 + ae * C77549 * C77729 +
         C77549 * (C77731 + C77549 * (C77584 + (ae * C77580 +
                                                C77391 * std::pow(C77397, 7) *
                                                    bs[7] * C77553) *
                                                   C77614))) /
        std::pow(C77335, 2);
    const double C6562 =
        (C77660 + C77666 * C77614 + ae * C77549 * C77729 +
         C77549 * (C77731 + C77549 * (C77666 + (ae * C77580 +
                                                C77391 * std::pow(C77397, 7) *
                                                    bs[7] * C77652) *
                                                   C77614))) /
        std::pow(C77335, 2);
    const double C8454 =
        (C77549 *
         (2 * C78009 + C77731 +
          C77506 * (C77541 + C77920 +
                    C77506 * (C77489 + C77506 * (ae * C77537 +
                                                 C77391 * std::pow(C77397, 7) *
                                                     bs[7] * C77510))))) /
        std::pow(C77335, 2);
    const double C78203 = C78201 + C78202;
    const double C78224 = ae * C78223;
    const double C6065 = C95 * C6052;
    const double C36466 = C26498 * C6052;
    const double C6316 =
        (C77602 + C77608 * C77688 + ae * (C77720 + C77915 * C77688) +
         C77506 * (C77833 + C77506 * (C77608 + (ae * C77537 +
                                                C77391 * std::pow(C77397, 7) *
                                                    bs[7] * C77594) *
                                                   C77688))) /
        std::pow(C77335, 2);
    const double C10434 =
        (3 * (C77570 + C77824 + C77549 * C78287) +
         ae * (2 * C77822 + C77549 * C77831) +
         C77549 * (2 * C78287 + C77833 +
                   C77549 * (C77584 + C77941 +
                             C77549 * (C77489 +
                                       C77549 * (ae * C77580 +
                                                 C77391 * std::pow(C77397, 7) *
                                                     bs[7] * C77553))))) /
        std::pow(C77335, 2);
    const double C10622 =
        (3 * (C77660 + C77824 + C77549 * C78313) +
         ae * (2 * C77822 + C77549 * C77831) +
         C77549 * (2 * C78313 + C77833 +
                   C77549 * (C77666 + C77941 +
                             C77549 * (C77489 +
                                       C77549 * (ae * C77580 +
                                                 C77391 * std::pow(C77397, 7) *
                                                     bs[7] * C77652))))) /
        std::pow(C77335, 2);
    const double C78403 = C78401 + C78402;
    const double C78387 = ae * C78386;
    const double C12368 = (2 * C77955 + C77549 * C78386) / C77335;
    const double C78513 = ae * C78510;
    const double C78512 = C77506 * C78510;
    const double C78553 = C78510 * C77688;
    const double C78585 = C77549 * C78510;
    const double C36320 =
        (3 * (C78113 + C78250 + C77549 * C78621) +
         ae * (2 * C78248 + C77549 * C78557) +
         C77549 * (2 * C78621 + C78559 +
                   C77549 * (C78539 + C78590 +
                             C77549 * (C78506 +
                                       C77549 * (ae * C77580 +
                                                 C77506 * std::pow(C77397, 7) *
                                                     bs[7] * C77673))))) /
        std::pow(C77335, 2);
    const double C78652 = C78650 + C78651;
    const double C78724 = ae * C78722;
    const double C78723 = C77549 * C78722;
    const double C77494 = C77468 + C77492;
    const double C32537 = C79306 * C5575;
    const double C31267 = C79306 * C5577;
    const double C33185 = C79306 * C6055;
    const double C31765 = C79306 * C6057;
    const double C34060 = C79306 * C8381;
    const double C62666 = C79306 * C10327;
    const double C61295 = C79306 * C10329;
    const double C37942 = C37941 + C37938;
    const double C2898 = C79308 * C1174;
    const double C2123 = C79308 * C2106;
    const double C3544 = C79308 * C2107;
    const double C4396 = C79308 * C4387;
    const double C1586 = C79307 * C1569;
    const double C3182 = C79307 * C1570;
    const double C3828 = C79307 * C2503;
    const double C4838 = C79307 * C4829;
    const double C78572 = C78571 + C78511;
    const double C34630 = C245 * C34199;
    const double C57083 = C52141 * C34199;
    const double C78664 = C78095 + C78662;
    const double C78639 = C78638 + C78631;
    const double C1173 = (C77619 + C77624 * C77395 + C77770 + C77770 +
                          C77506 * (2 * ae * C77528 + C77506 * C77631)) /
                         std::pow(C77335, 2);
    const double C4717 = (C77770 + C77549 * (ae * C77571 + C77506 * C77684)) /
                         std::pow(C77335, 2);
    const double C890 = C79308 * C863;
    const double C1189 = C166 * C863;
    const double C1296 = C245 * C863;
    const double C27242 = C26498 * C863;
    const double C27342 = C26551 * C863;
    const double C27340 = C26552 * C863;
    const double C4063 = C79308 * C4049;
    const double C4395 = C166 * C4049;
    const double C4509 = C245 * C4049;
    const double C28076 = C26552 * C4049;
    const double C30023 = C26498 * C4049;
    const double C30135 = C26551 * C4049;
    const double C11235 = C166 * C10920;
    const double C28079 = C26552 * C10920;
    const double C581 = C203 * C245;
    const double C401 = C397 + C391;
    const double C473 = C469 * C79308;
    const double C2901 = C2900 + C1191;
    const double C3111 = C2688 * C245;
    const double C2415 = C1831 * C245;
    const double C53279 = C1831 * C26498;
    const double C2133 = C2129 + C2122;
    const double C2239 = C2235 * C79308;
    const double C3547 = C3546 + C2124;
    const double C3757 = C3334 * C245;
    const double C54640 = C3334 * C26498;
    const double C3620 = C3619 * C79308;
    const double C10924 = C79308 * C6145;
    const double C7584 = C79308 * C6147;
    const double C1821 = C79308 * C1804;
    const double C3330 = C79308 * C1805;
    const double C53457 = C79306 * C2024;
    const double C54777 = C79306 * C2025;
    const double C12085 = C12082 + C12083;
    const double C78031 = C78030 + C78027;
    const double C6393 =
        (C77549 * C78023 + C78152 + C78152 +
         C77506 * (2 * ae * C77549 * C77530 + C77506 * C77549 * C78066)) /
        std::pow(C77335, 2);
    const double C6637 = (ae * C77562 + C77506 * C78109 + C78152 +
                          C77549 * (C78029 + C77549 * C78117)) /
                         std::pow(C77335, 2);
    const double C11236 = C11233 + C6398;
    const double C10928 = C10925 + C10926;
    const double C11341 = C11338 + C11339;
    const double C78507 = C78497 + C78502;
    const double C78060 = ae * C78058;
    const double C78059 = C77506 * C78058;
    const double C78247 = C77549 * C78058;
    const double C78491 = 3 * C78058;
    const double C6143 = (C78041 + C78058 * C77688) / C77335;
    const double C6395 = (C77619 + C77624 * C77688 + C78159 + C78159 +
                          C77506 * (2 * ae * (C77517 + C77524 * C77688) +
                                    C77506 * (C77624 + C77629 * C77688))) /
                         std::pow(C77335, 2);
    const double C12853 =
        (2 * (C78039 + C77549 * C78113) + C78159 +
         C77549 * (C78113 + C78250 +
                   C77549 * (C78056 + C77549 * (C77574 + C77506 * C77682)))) /
        std::pow(C77335, 2);
    const double C12650 = C166 * C12439;
    const double C36189 = C26552 * C12439;
    const double C38155 = C26498 * C12439;
    const double C38228 = C26551 * C12439;
    const double C38297 = C245 * C12439;
    const double C63350 = C79308 * C12439;
    const double C61517 = C61515 + C10530;
    const double C61362 = C61358 * C26498;
    const double C61464 = C61460 * C79308;
    const double C53275 = C1827 * C79306;
    const double C57251 = C57245 * C79306;
    const double C57253 = C57247 * C79306;
    const double C57254 = C57248 * C79306;
    const double C59438 = C59436 * C79306;
    const double C63353 = C63351 * C79306;
    const double C2502 = (C77693 + C77698 * C77395 + C77904 + C77904 +
                          C77549 * (2 * ae * C77571 + C77549 * C77705)) /
                         std::pow(C77335, 2);
    const double C4503 = (C77904 + C77506 * (ae * C77528 + C77549 * C77647)) /
                         std::pow(C77335, 2);
    const double C1937 = C79307 * C1910;
    const double C2413 = C166 * C1910;
    const double C2518 = C245 * C1910;
    const double C53732 = C26498 * C1910;
    const double C53904 = C52140 * C1910;
    const double C53902 = C52141 * C1910;
    const double C2974 = C2973 * C79308;
    const double C465 = C282 * C166;
    const double C589 = C585 * C79307;
    const double C660 = C656 + C650;
    const double C1298 = C1012 * C166;
    const double C27139 = C1012 * C26498;
    const double C1490 = C1486 * C79307;
    const double C1596 = C1592 + C1585;
    const double C3185 = C3184 + C1587;
    const double C2972 = C2762 * C166;
    const double C28581 = C2762 * C26498;
    const double C3113 = C3112 * C79307;
    const double C3831 = C3830 + C2520;
    const double C3618 = C3408 * C166;
    const double C3759 = C3758 * C79307;
    const double C4511 = C4185 * C166;
    const double C29912 = C4185 * C26498;
    const double C4843 = C4841 + C4837;
    const double C1002 = C79307 * C985;
    const double C2758 = C79307 * C986;
    const double C27514 = C79306 * C1385;
    const double C28857 = C79306 * C1386;
    const double C6717 =
        (C77506 * C78119 + C78185 + C78185 +
         C77549 * (2 * ae * C78097 + C77549 * C77506 * C78123)) /
        std::pow(C77335, 2);
    const double C6724 = C245 * C6225;
    const double C11032 = C79307 * C6225;
    const double C11541 = C166 * C6225;
    const double C37069 = C26498 * C6225;
    const double C56031 = C52141 * C6225;
    const double C62597 = C52140 * C6225;
    const double C7305 = C7304 * C79307;
    const double C78330 = C78329 + C78326;
    const double C6721 =
        (C77693 + C77698 * C77614 + C78195 + C78195 +
         C77549 * (2 * ae * C78095 + C77549 * (C77698 + C77703 * C77614))) /
        std::pow(C77335, 2);
    const double C8729 =
        (2 * (ae * (C77549 * C77560 + C77413) + C77506 * C78259) + C78195 +
         C77506 * (C78259 + ae * (C77549 * C77506 * C77567 + C78052) +
                   C77506 * (ae * (C77549 * C77567 + C77436) +
                             C77506 * (C77531 + C77549 * C77645)))) /
        std::pow(C77335, 2);
    const double C6728 = C245 * C6229;
    const double C31943 = C79307 * C6229;
    const double C32295 = C26498 * C6229;
    const double C57729 = C166 * C6229;
    const double C57812 = C52140 * C6229;
    const double C57810 = C52141 * C6229;
    const double C31679 = C31677 + C5966;
    const double C31380 = C31376 * C26498;
    const double C31584 = C31582 * C79307;
    const double C34632 = C34631 + C8936;
    const double C34209 = C34207 * C26498;
    const double C34493 = C34492 * C79307;
    const double C78720 = C78711 + C78716;
    const double C78359 = ae * C78357;
    const double C78358 = C77549 * C78357;
    const double C78704 = 3 * C78357;
    const double C36234 =
        (ae *
             (3 * C78357 +
              C77549 * (2 * C78350 +
                        C77549 * (C77567 + C77549 * (C77549 * C77580 + C77472) +
                                  C77549 * C77462 * ae) +
                        C78613 * ae) +
              (2 * C78347 + C77549 * C78613) * ae) +
         C77506 * (3 * C78567 + ae * (2 * C78561 + C77549 * C78614) +
                   C77549 * (2 * C78564 + ae * C78614 +
                             C77549 * (C77645 + ae * C77549 * C77537 +
                                       C77549 * (ae * C77537 +
                                                 C77549 * std::pow(C77397, 7) *
                                                     bs[7] * C77636))))) /
        std::pow(C77335, 2);
    const double C78452 = C78451 + C78447;
    const double C27135 = C1008 * C79306;
    const double C53479 = C53467 * C79308;
    const double C53481 = C53469 * C79308;
    const double C62877 = C62875 * C79308;
    const double C12014 = C12013 + C12010;
    const double C53564 = C2136 * C79306;
    const double C61520 = C61518 * C79306;
    const double C27525 = C27519 * C79307;
    const double C27526 = C27520 * C79307;
    const double C32953 = C32952 * C79307;
    const double C7378 = C7377 + C7374;
    const double C8310 = C8309 + C8306;
    const double C1603 = C1599 * C79308;
    const double C2536 = C2532 * C79308;
    const double C79248 = C79214 / C78972;
    const double C79282 = C79252 / C78976;
    const double C79283 = C79254 + C79222;
    const double C2607 = C79222 - C78993 / C78990;
    const double C79251 = C79218 / C78972;
    const double C79264 = C79232 / C78972;
    const double C79289 = C79267 / C78976;
    const double C79290 = C79268 + C79236;
    const double C6797 = C79236 - C79073 / C78990;
    const double C79266 = C79233 / C78972;
    const double C79270 = C79238 / C78972;
    const double C79292 = C79273 / C78976;
    const double C79293 = C79274 + C79242;
    const double C11719 = C79242 - C79115 / C78990;
    const double C79272 = C79239 / C78972;
    const double C26970 = C26964 * C79307;
    const double C31275 = C31273 * C79307;
    const double C26971 = C26965 * C79307;
    const double C29706 = C29703 * C79307;
    const double C31778 = C31775 * C79307;
    const double C26966 = C26960 + C26941;
    const double C53186 = C53180 + C53164;
    const double C4726 = C4721 + C4722;
    const double C1474 = C893 * C245;
    const double C1198 = C1194 + C1183;
    const double C1304 = C1300 * C79308;
    const double C4720 = C4064 * C245;
    const double C55318 = C4064 * C26498;
    const double C4400 = C4398 + C4392;
    const double C4512 = C4507 + C4508;
    const double C2223 = C1940 * C166;
    const double C2421 = C2417 * C79307;
    const double C2527 = C2523 + C2512;
    const double C1602 = C1598 * C79308;
    const double C53563 = C2135 * C79306;
    const double C4846 = C4844 * C79308;
    const double C111 =
        (2 * (2 * ae * C77403 + C77391 * C77420) + C77426 + C77426 +
         C77391 * (C77420 + C77423 + C77423 +
                   C77391 * (2 * ae * C77416 +
                             C77391 *
                                 (C77409 * C77410 +
                                  C77395 * bs[5] * std::pow(C77397, 5)) *
                                 C77398))) /
        std::pow(C77335, 2);
    const double C870 =
        (C77426 + C77506 * (C77516 + ae * C77519 + C77391 * C77527)) /
        std::pow(C77335, 2);
    const double C1090 =
        (C77426 + C77506 * (C77597 + ae * C77519 + C77391 * C77602)) /
        std::pow(C77335, 2);
    const double C1917 =
        (C77426 + C77549 * (C77559 + ae * C77562 + C77391 * C77570)) /
        std::pow(C77335, 2);
    const double C2317 =
        (C77426 + C77549 * (C77655 + ae * C77562 + C77391 * C77660)) /
        std::pow(C77335, 2);
    const double C122 = C93 * C105;
    const double C120 = C95 * C105;
    const double C190 = C166 * C105;
    const double C269 = C245 * C105;
    const double C26507 = C26498 * C105;
    const double C782 = C93 * C760;
    const double C778 = C95 * C760;
    const double C885 = C166 * C760;
    const double C999 = C245 * C760;
    const double C26505 = C26498 * C760;
    const double C27239 = C79306 * C760;
    const double C1715 = C93 * C1693;
    const double C1711 = C95 * C1693;
    const double C1818 = C166 * C1693;
    const double C1932 = C245 * C1693;
    const double C27769 = C26498 * C1693;
    const double C53453 = C79306 * C1693;
    const double C894 = C881 + C882;
    const double C27253 = C27236 + C27237;
    const double C4183 = C4176 + C4177;
    const double C30346 = C30340 + C30341;
    const double C55319 = C4065 * C79306;
    const double C29701 = C29698 + C27765;
    const double C30339 = C30029 * C245;
    const double C55524 = C30029 * C166;
    const double C1941 = C1928 + C1929;
    const double C53737 = C53728 + C53729;
    const double C30030 = C30021 + C30022;
    const double C26967 = C26961 + C26944;
    const double C53187 = C53181 + C53166;
    const double C5772 =
        (2 * (2 * ae * C77512 + C77506 * C77619) + C78042 + C78042 +
         C77506 * (C77619 + C78039 + C78039 +
                   C77506 * (2 * C77520 + C77506 * C77624))) /
        std::pow(C77335, 2);
    const double C6640 =
        (C78042 + C77549 * (C77676 + ae * C78091 + C77506 * C78113)) /
        std::pow(C77335, 2);
    const double C5777 = C166 * C5626;
    const double C27335 = C26552 * C5626;
    const double C31426 = C26498 * C5626;
    const double C31480 = C26551 * C5626;
    const double C31526 = C245 * C5626;
    const double C6401 = C166 * C6142;
    const double C30132 = C26552 * C6142;
    const double C32037 = C26498 * C6142;
    const double C32127 = C26551 * C6142;
    const double C32207 = C245 * C6142;
    const double C57237 = C79308 * C6142;
    const double C57731 = C57725 + C57726;
    const double C10712 =
        (2 * (2 * ae * C77555 + C77549 * C77693) + C78341 + C78341 +
         C77549 * (C77693 + C78338 + C78338 +
                   C77549 * (2 * C77563 + C77549 * C77698))) /
        std::pow(C77335, 2);
    const double C10717 = C245 * C10428;
    const double C53897 = C52141 * C10428;
    const double C61608 = C26498 * C10428;
    const double C61657 = C166 * C10428;
    const double C61707 = C52140 * C10428;
    const double C32464 = C32461 + C6725;
    const double C31950 = C31944 * C26498;
    const double C32301 = C32298 * C79307;
    const double C55632 = C55631 + C55627;
    const double C57497 = C57494 + C57485;
    const double C4053 =
        (C77549 * (C77455 + C77506 * C77545)) / std::pow(C77335, 2);
    const double C77456 = C77432 + C77454;
    const double C77721 = ae * C77719;
    const double C3937 = (C77549 * C77719) / C77335;
    const double C77823 = ae * C77821;
    const double C783 = C93 * C761;
    const double C779 = C95 * C761;
    const double C887 = C166 * C761;
    const double C1001 = C245 * C761;
    const double C26949 = C26498 * C761;
    const double C27245 = C79306 * C761;
    const double C1716 = C93 * C1694;
    const double C1712 = C95 * C1694;
    const double C1820 = C166 * C1694;
    const double C1934 = C245 * C1694;
    const double C27770 = C26498 * C1694;
    const double C53459 = C79306 * C1694;
    const double C26950 = C79306 * C769;
    const double C6876 = C79308 * C5629;
    const double C32744 = C79306 * C5725;
    const double C7690 = C79307 * C6233;
    const double C33790 = C79306 * C6559;
    const double C6953 = C6949 + C6950;
    const double C32539 = C32536 + C26945;
    const double C32748 = C32745 + C32746;
    const double C33187 = C33184 + C29693;
    const double C33492 = C33489 + C33490;
    const double C29695 = C79306 * C3941;
    const double C11030 = C79307 * C6231;
    const double C33488 = C79306 * C6313;
    const double C37070 = C79306 * C6557;
    const double C36468 = C36467 + C27766;
    const double C37071 = C36772 * C245;
    const double C62105 = C36772 * C166;
    const double C53170 = C79306 * C1702;
    const double C36768 = C79306 * C6311;
    const double C11870 = C79307 * C10431;
    const double C63079 = C79306 * C10619;
    const double C11799 = C11795 + C11796;
    const double C62668 = C62665 + C37336;
    const double C62876 = C62873 + C62874;
    const double C31777 = C31774 * C79307;
    const double C77775 = ae * C77774;
    const double C865 = (2 * C77519 + C77391 * C77528 + C77506 * C77774 +
                         C77506 * C77485 * ae) /
                        C77335;
    const double C4050 = (C77549 * C77774) / C77335;
    const double C77909 = ae * C77908;
    const double C1912 = (2 * C77562 + C77391 * C77571 + C77549 * C77908 +
                          C77549 * C77485 * ae) /
                         C77335;
    const double C78216 = C78215 + C78212;
    const double C7891 =
        (C77549 * C77631 + C78230 + C78230 +
         C77506 * (2 * ae * C77549 * C77542 +
                   C77506 * C77549 *
                       (C77629 + (C77463 * C77464 +
                                  C77614 * bs[7] * std::pow(C77397, 7)) *
                                     C77398 * C77395))) /
        std::pow(C77335, 2);
    const double C11539 =
        (ae * C77571 + C77506 * C77684 + C78230 +
         C77549 * (C78214 +
                   C77549 * (ae * C77585 +
                             C77506 * (C77682 + std::pow(C77397, 7) * bs[7] *
                                                    C77673 * C77395)))) /
        std::pow(C77335, 2);
    const double C78420 = C78419 + C78416;
    const double C11643 =
        (C77506 * C77705 + C78399 + C78399 +
         C77549 * (2 * ae * C78396 +
                   C77549 * C77506 *
                       (C77703 + (C77463 * C77464 +
                                  C77688 * bs[7] * std::pow(C77397, 7)) *
                                     C77398 * C77395))) /
        std::pow(C77335, 2);
    const double C11647 = C245 * C11026;
    const double C56034 = C52141 * C11026;
    const double C78083 = ae * C78081;
    const double C78082 = C77506 * C78081;
    const double C78253 = C77549 * C78081;
    const double C6396 =
        (C78023 + C78066 * C77688 + C78163 + C78163 +
         C77506 *
             (2 * ae * (C77530 + C78068 * C77688) +
              C77506 * (C78066 + C77391 *
                                     (C77463 * C77464 +
                                      C77614 * bs[7] * std::pow(C77397, 7)) *
                                     C77398 * C77688))) /
        std::pow(C77335, 2);
    const double C12854 =
        (2 * (C78029 + C77549 * C78117) + C78163 +
         C77549 * (C78117 + C78256 +
                   C77549 * (C78079 +
                             C77549 * (ae * C78099 + C77506 * C77391 *
                                                         std::pow(C77397, 7) *
                                                         bs[7] * C77673)))) /
        std::pow(C77335, 2);
    const double C12651 = C166 * C12440;
    const double C37603 = C26552 * C12440;
    const double C78380 = ae * C78378;
    const double C78379 = C77549 * C78378;
    const double C6722 =
        (C78119 + C78123 * C77614 + C78199 + C78199 +
         C77549 *
             (2 * ae * C78103 +
              C77549 * (C78123 + C77391 *
                                     (C77463 * C77464 +
                                      C77688 * bs[7] * std::pow(C77397, 7)) *
                                     C77398 * C77614))) /
        std::pow(C77335, 2);
    const double C8730 =
        (2 * (ae * (C77549 * C77573 + C77441) + C77506 * C78262) + C78199 +
         C77506 * (C78262 + ae * (C77549 * C77506 * C78099 + C78073) +
                   C77506 * (ae * (C77549 * C78099 + C77477) +
                             C77506 * (ae * C78068 + C77549 * C77391 *
                                                         std::pow(C77397, 7) *
                                                         bs[7] * C77636)))) /
        std::pow(C77335, 2);
    const double C6729 = C245 * C6230;
    const double C59298 = C52141 * C6230;
    const double C78464 = C78463 + C78459;
    const double C10921 =
        (C77455 + C77506 * C77545 +
         (C77496 +
          C77506 * (C77535 + ae * C78068 +
                    C77391 * (ae * C77537 +
                              C77391 * std::pow(C77397, 7) * bs[7] * C77510))) *
             C77688) /
        std::pow(C77335, 2);
    const double C77497 = C77466 + C77495;
    const double C77728 = C77453 + C77725;
    const double C77830 = C77453 + C77827;
    const double C77919 = ae * C77914;
    const double C77959 = C77549 * C77914;
    const double C10818 = (C77719 + C77914 * C77688) / C77335;
    const double C77940 = ae * C77935;
    const double C78204 = ae * C78203;
    const double C5574 = (3 * C77715 + C77506 * C78203) / C77335;
    const double C8380 = (C77549 * C78203) / C77335;
    const double C7479 =
        (C77549 * C77727 + C78224 + C78224 +
         C77391 * (2 * ae * C77549 * (C77440 + C77476 * C77614) +
                   C77391 * C77549 *
                       (C77483 + (C77463 * C77464 +
                                  C77395 * bs[7] * std::pow(C77397, 7)) *
                                     C77398 * C77614))) /
        std::pow(C77335, 2);
    const double C8592 =
        (2 * (C77824 + C77506 * C78244) + C78224 +
         C77506 * (C78244 + C77962 +
                   C77506 * (C77941 +
                             C77506 * C77549 *
                                 (ae * C77537 + C77391 * std::pow(C77397, 7) *
                                                    bs[7] * C77594)))) /
        std::pow(C77335, 2);
    const double C78404 = ae * C78403;
    const double C10326 = (3 * C77817 + C77549 * C78403) / C77335;
    const double C10819 =
        (C77718 + C77912 * C77688 + C78387 + C78387 +
         C77391 *
             (2 * ae * (C77911 + C77506 * C77476 * C77688) +
              C77391 * (C77912 + C77506 *
                                     (C77463 * C77464 +
                                      C77395 * bs[7] * std::pow(C77397, 7)) *
                                     C77398 * C77688))) /
        std::pow(C77335, 2);
    const double C12512 =
        (2 * (C77722 + C77549 * C78429) + C78387 +
         C77549 * (C78429 + C77962 +
                   C77549 * (C77920 +
                             C77549 * C77506 *
                                 (ae * C77580 + C77391 * std::pow(C77397, 7) *
                                                    bs[7] * C77553)))) /
        std::pow(C77335, 2);
    const double C12786 =
        (2 * (C77722 + C77549 * C78439) + C78387 +
         C77549 * (C78439 + C77962 +
                   C77549 * (C77920 +
                             C77549 * C77506 *
                                 (ae * C77580 + C77391 * std::pow(C77397, 7) *
                                                    bs[7] * C77652)))) /
        std::pow(C77335, 2);
    const double C12373 = C95 * C12368;
    const double C37337 = C26498 * C12368;
    const double C78514 = C78492 + C78512;
    const double C78556 = C78058 + C78553;
    const double C78589 = ae * C78585;
    const double C78653 = ae * C78652;
    const double C36056 = (3 * C78158 + C77549 * C78652) / C77335;
    const double C78725 = C78705 + C78723;
    const double C31274 = C31272 + C31267;
    const double C31776 = C31773 + C31765;
    const double C34064 = C34063 + C34060;
    const double C61302 = C61300 + C61295;
    const double C37943 = C37942 * C79307;
    const double C78573 = ae * C78572;
    const double C31929 = (2 * C78091 + C77506 * C78095 + C77549 * C78572 +
                           C77549 * C78509 * ae) /
                          C77335;
    const double C78665 = C78664 + C78661;
    const double C78641 = ae * C78639;
    const double C78640 = C77549 * C78639;
    const double C1190 = C79308 * C1173;
    const double C4724 = C79308 * C4717;
    const double C898 = C889 + C890;
    const double C1196 = C1188 + C1189;
    const double C1302 = C1296 + C1297;
    const double C4067 = C4062 + C4063;
    const double C4399 = C4394 + C4395;
    const double C405 = C401 + C392;
    const double C2902 = C2901 + C2898;
    const double C2137 = C2133 + C2123;
    const double C3548 = C3547 + C3544;
    const double C10927 = C10923 + C10924;
    const double C7587 = C7583 + C7584;
    const double C53470 = C53456 + C53457;
    const double C54779 = C54776 + C54777;
    const double C12086 = C12085 * C79308;
    const double C78032 = ae * C78031;
    const double C5625 =
        (2 * C77764 + C77506 * C78031 + (C77414 + C77437 * C77614) * ae) /
        C77335;
    const double C6141 = (C77549 * C78031) / C77335;
    const double C6144 = (C78031 + C78081 * C77688) / C77335;
    const double C7894 = C79308 * C6393;
    const double C11542 = C79308 * C6637;
    const double C11237 = C11236 + C6398;
    const double C11543 = C10928 * C245;
    const double C61907 = C10928 * C26498;
    const double C11342 = C11341 * C79308;
    const double C6641 =
        (C77676 + ae * C78091 + C77506 * C78113 + ae * C77549 * C78058 +
         C77549 * (C78060 + C77549 * (C77679 + ae * C77506 * C77567 +
                                      C77506 * (C77574 + C77506 * C77682)))) /
        std::pow(C77335, 2);
    const double C78061 = C78046 + C78059;
    const double C78249 = ae * C78247;
    const double C6402 = C166 * C6143;
    const double C32039 = C26498 * C6143;
    const double C32128 = C26551 * C6143;
    const double C32124 = C26552 * C6143;
    const double C32209 = C245 * C6143;
    const double C57243 = C79308 * C6143;
    const double C57489 = C79308 * C6395;
    const double C63761 = C79308 * C12853;
    const double C63558 = C63555 + C12650;
    const double C38159 = C38155 + C38156;
    const double C63352 = C63349 + C63350;
    const double C61519 = C61517 + C61512;
    const double C2519 = C79307 * C2502;
    const double C4510 = C79307 * C4503;
    const double C1945 = C1936 + C1937;
    const double C2419 = C2413 + C2414;
    const double C2525 = C2517 + C2518;
    const double C664 = C660 + C651;
    const double C1600 = C1596 + C1586;
    const double C3186 = C3185 + C3182;
    const double C3832 = C3831 + C3828;
    const double C4845 = C4843 + C4838;
    const double C27521 = C27513 + C27514;
    const double C28858 = C28856 + C28857;
    const double C11646 = C79307 * C6717;
    const double C11648 = C11645 + C6724;
    const double C11034 = C11031 + C11032;
    const double C78331 = ae * C78330;
    const double C10427 =
        (2 * C77898 + C77549 * C78330 + (C77414 + C77437 * C77688) * ae) /
        C77335;
    const double C32459 = C79307 * C6721;
    const double C34420 = C79307 * C8729;
    const double C32463 = C32458 + C6728;
    const double C31949 = C31942 + C31943;
    const double C32300 = C32295 + C32296;
    const double C31681 = C31679 + C31674;
    const double C34633 = C34632 + C34629;
    const double C32203 =
        (2 * (C78359 + C77506 * C78567) +
         ae * (C78095 + C77549 * (C77549 * C78528 + C78504) +
               C77549 * C78501 * ae) +
         C77506 *
             (C78567 +
              ae * (C78444 + C77549 * (C77549 * C77506 * C77580 + C78500) +
                    C77549 * C78494 * ae) +
              C77506 * (ae * (C77567 + C77549 * (C77549 * C77580 + C77472) +
                              C77549 * C77462 * ae) +
                        C77506 * (C77645 + ae * C77549 * C77537 +
                                  C77549 * (ae * C77537 +
                                            C77549 * std::pow(C77397, 7) *
                                                bs[7] * C77636))))) /
        std::pow(C77335, 2);
    const double C78360 = C78345 + C78358;
    const double C78453 = ae * C78452;
    const double C12509 =
        (2 * C78188 + C77549 * C78452 + (C78035 + C78048 * C77688) * ae) /
        C77335;
    const double C62945 = C12014 * C79306;
    const double C7379 = C7378 * C79308;
    const double C8311 = C8310 * C79308;
    const double C79309 = C79248 + C79298;
    const double C2606 = C79282 - (C78995 * C78977) / C78972;
    const double C90 = C79283 / C78976 - C78993 / C79255;
    const double C79299 = C79251 + C79282;
    const double C79310 = C79264 + C79302;
    const double C6796 = C79289 - (C79075 * C79064) / C78972;
    const double C5564 = C79290 / C78976 - C79073 / C79255;
    const double C79303 = C79266 + C79289;
    const double C79311 = C79270 + C79304;
    const double C11718 = C79292 - (C79117 * C79106) / C78972;
    const double C10317 = C79293 / C78976 - C79115 / C79255;
    const double C79305 = C79272 + C79292;
    const double C26972 = C26966 * C79307;
    const double C4728 = C4726 * C79307;
    const double C1202 = C1198 + C1184;
    const double C4402 = C4400 + C4393;
    const double C4514 = C4512 * C79308;
    const double C2531 = C2527 + C2513;
    const double C886 = C79308 * C870;
    const double C27241 = C79306 * C1090;
    const double C1933 = C79307 * C1917;
    const double C53731 = C79306 * C2317;
    const double C201 = C190 + C191;
    const double C280 = C269 + C270;
    const double C1010 = C999 + C1000;
    const double C26956 = C26946 + C26505;
    const double C27254 = C27238 + C27239;
    const double C1829 = C1818 + C1819;
    const double C53176 = C53167 + C27769;
    const double C53468 = C53452 + C53453;
    const double C29910 = C4183 * C79306;
    const double C30349 = C30346 * C79307;
    const double C29704 = C29701 + C29692;
    const double C55525 = C30030 * C79308;
    const double C26973 = C26967 * C79307;
    const double C57728 = C79308 * C6640;
    const double C31433 = C31426 + C31427;
    const double C31530 = C31526 + C31527;
    const double C57492 = C57486 + C6401;
    const double C32046 = C32037 + C32038;
    const double C32212 = C32207 + C32208;
    const double C57246 = C57236 + C57237;
    const double C61612 = C61608 + C61609;
    const double C61661 = C61657 + C61658;
    const double C32467 = C32464 + C32455;
    const double C55633 = C55632 * C79306;
    const double C57500 = C57497 * C79306;
    const double C4061 = C79308 * C4053;
    const double C77457 = C77456 + C77445;
    const double C770 =
        (2 * (2 * ae * C77506 * C77416 + C77391 * C77718) + C77721 + C77721 +
         C77391 *
             (C77718 + C77722 + C77722 +
              C77391 * (2 * ae * C77506 * C77440 + C77391 * C77506 * C77483))) /
        std::pow(C77335, 2);
    const double C871 = (C77516 + ae * C77519 + C77391 * C77527 + C77721 +
                         C77506 * (C77455 + C77506 * C77545)) /
                        std::pow(C77335, 2);
    const double C1091 = (C77597 + ae * C77519 + C77391 * C77602 + C77721 +
                          C77506 * (C77455 + C77506 * C77610)) /
                         std::pow(C77335, 2);
    const double C4171 =
        (C77721 + C77549 * C77506 * C77588) / std::pow(C77335, 2);
    const double C4615 =
        (C77721 + C77549 * C77506 * C77668) / std::pow(C77335, 2);
    const double C3948 = C93 * C3937;
    const double C3946 = C95 * C3937;
    const double C4060 = C166 * C3937;
    const double C4178 = C245 * C3937;
    const double C27768 = C26498 * C3937;
    const double C30026 = C79306 * C3937;
    const double C1703 =
        (2 * (2 * ae * C77549 * C77416 + C77391 * C77820) + C77823 + C77823 +
         C77391 *
             (C77820 + C77824 + C77824 +
              C77391 * (2 * ae * C77549 * C77440 + C77391 * C77549 * C77483))) /
        std::pow(C77335, 2);
    const double C1918 = (C77559 + ae * C77562 + C77391 * C77570 + C77823 +
                          C77549 * (C77455 + C77549 * C77588)) /
                         std::pow(C77335, 2);
    const double C2318 = (C77655 + ae * C77562 + C77391 * C77660 + C77823 +
                          C77549 * (C77455 + C77549 * C77668)) /
                         std::pow(C77335, 2);
    const double C4285 =
        (C77823 + C77506 * C77549 * C77610) / std::pow(C77335, 2);
    const double C1011 = C1001 + C1002;
    const double C26957 = C26948 + C26949;
    const double C27257 = C27244 + C27245;
    const double C1830 = C1820 + C1821;
    const double C53177 = C53169 + C27770;
    const double C53471 = C53458 + C53459;
    const double C6879 = C6875 + C6876;
    const double C7693 = C7689 + C7690;
    const double C33792 = C33789 + C33790;
    const double C32675 = C6953 * C79306;
    const double C32540 = C32539 + C26945;
    const double C32951 = C32748 * C245;
    const double C33188 = C33187 + C29693;
    const double C33791 = C33492 * C245;
    const double C58804 = C33492 * C166;
    const double C11033 = C11029 + C11030;
    const double C37072 = C37069 + C37070;
    const double C36469 = C36468 + C36465;
    const double C36771 = C36767 + C36768;
    const double C11873 = C11869 + C11870;
    const double C62737 = C11799 * C79306;
    const double C62669 = C62668 + C37336;
    const double C62878 = C62876 * C166;
    const double C1175 =
        (2 * C77391 * C77624 + C77391 * C77631 + C77775 + C77775 +
         C77506 * (2 * ae * C77546 +
                   C77506 * (2 * C77391 * C77629 +
                             C77391 * (C77629 +
                                       (C77463 * C77464 +
                                        C77614 * bs[7] * std::pow(C77397, 7)) *
                                           C77398 * C77395)))) /
        std::pow(C77335, 2);
    const double C4718 =
        (C77775 +
         C77549 * (ae * C77589 +
                   C77506 * (2 * C77391 * C77682 +
                             C77391 * (C77682 + std::pow(C77397, 7) * bs[7] *
                                                    C77673 * C77395)))) /
        std::pow(C77335, 2);
    const double C1192 = C166 * C865;
    const double C28722 = C26552 * C865;
    const double C4397 = C166 * C4050;
    const double C29325 = C26552 * C4050;
    const double C2504 =
        (2 * C77391 * C77698 + C77391 * C77705 + C77909 + C77909 +
         C77549 * (2 * ae * C77589 +
                   C77549 * (2 * C77391 * C77703 +
                             C77391 * (C77703 +
                                       (C77463 * C77464 +
                                        C77688 * bs[7] * std::pow(C77397, 7)) *
                                           C77398 * C77395)))) /
        std::pow(C77335, 2);
    const double C4504 =
        (C77909 +
         C77506 * (ae * C77546 +
                   C77549 * (2 * C77391 * C77645 +
                             C77391 * (C77645 + std::pow(C77397, 7) * bs[7] *
                                                    C77636 * C77395)))) /
        std::pow(C77335, 2);
    const double C2521 = C245 * C1912;
    const double C55117 = C52141 * C1912;
    const double C78217 = ae * C78216;
    const double C6872 =
        (2 * C77769 + C77506 * C78216 + (C77442 + C77478 * C77614) * ae) /
        C77335;
    const double C7580 = (C77549 * C78216) / C77335;
    const double C78421 = ae * C78420;
    const double C11866 =
        (2 * C77903 + C77549 * C78420 + (C77442 + C77478 * C77688) * ae) /
        C77335;
    const double C6642 =
        (C78109 + ae * C78097 + C77506 * C78117 + ae * C77549 * C78081 +
         C77549 * (C78083 +
                   C77549 * (C78115 + ae * C77506 * C78099 +
                             C77506 * (ae * C78099 + C77506 * C77391 *
                                                         std::pow(C77397, 7) *
                                                         bs[7] * C77673)))) /
        std::pow(C77335, 2);
    const double C78084 = C78067 + C78082;
    const double C78255 = ae * C78253;
    const double C78381 = C78366 + C78379;
    const double C78465 = ae * C78464;
    const double C12510 =
        (2 * C78184 + C77549 * C78464 + (C78025 + C78069 * C77688) * ae) /
        C77335;
    const double C77498 = C77497 + C77481;
    const double C77730 = ae * C77728;
    const double C6802 = (2 * C77719 + C77506 * C77728) / C77335;
    const double C7478 = (C77549 * C77728) / C77335;
    const double C77832 = ae * C77830;
    const double C11722 = (2 * C77821 + C77549 * C77830) / C77335;
    const double C7581 =
        (C77549 *
         (C77545 + C77919 +
          C77506 * (C77496 + C77506 * (C77535 + ae * C78068 +
                                       C77391 * (ae * C77537 +
                                                 C77391 * std::pow(C77397, 7) *
                                                     bs[7] * C77510))))) /
        std::pow(C77335, 2);
    const double C77961 = ae * C77959;
    const double C10822 = C95 * C10818;
    const double C27771 = C26498 * C10818;
    const double C6803 =
        (2 * C77718 + C77506 * C77727 + C78204 + C78204 +
         C77391 * (2 * ae * (2 * C77911 + C77506 * (C77440 + C77476 * C77614)) +
                   C77391 * (2 * C77912 +
                             C77506 * (C77483 +
                                       (C77463 * C77464 +
                                        C77395 * bs[7] * std::pow(C77397, 7)) *
                                           C77398 * C77614)))) /
        std::pow(C77335, 2);
    const double C8524 =
        (C78204 + C77549 * (2 * C77506 * C77584 +
                            C77506 * (C77584 + (ae * C77580 +
                                                C77391 * std::pow(C77397, 7) *
                                                    bs[7] * C77553) *
                                                   C77614))) /
        std::pow(C77335, 2);
    const double C8798 =
        (C78204 + C77549 * (2 * C77506 * C77666 +
                            C77506 * (C77666 + (ae * C77580 +
                                                C77391 * std::pow(C77397, 7) *
                                                    bs[7] * C77652) *
                                                   C77614))) /
        std::pow(C77335, 2);
    const double C5583 = C95 * C5574;
    const double C32538 = C26498 * C5574;
    const double C8385 = C95 * C8380;
    const double C33186 = C26498 * C8380;
    const double C11723 =
        (2 * C77820 + C77549 * C77829 + C78404 + C78404 +
         C77391 * (2 * ae * (2 * C77932 + C77549 * (C77440 + C77476 * C77688)) +
                   C77391 * (2 * C77933 +
                             C77549 * (C77483 +
                                       (C77463 * C77464 +
                                        C77395 * bs[7] * std::pow(C77397, 7)) *
                                           C77398 * C77688)))) /
        std::pow(C77335, 2);
    const double C12580 =
        (C78404 + C77506 * (2 * C78244 +
                            C77549 * (C77608 + (ae * C77537 +
                                                C77391 * std::pow(C77397, 7) *
                                                    bs[7] * C77594) *
                                                   C77688))) /
        std::pow(C77335, 2);
    const double C10335 = C95 * C10326;
    const double C62667 = C26498 * C10326;
    const double C78515 = C78514 + C78504;
    const double C78558 = ae * C78556;
    const double C38009 = (2 * C78247 + C77549 * C78556) / C77335;
    const double C38226 =
        (2 * C78246 + C77549 * C78555 + C78653 + C78653 +
         C77506 * (2 * ae * (2 * C78561 + C77549 * C78614) +
                   C77506 * (2 * C78583 +
                             C77549 * (C77629 +
                                       (C77463 * C77464 +
                                        C77614 * bs[7] * std::pow(C77397, 7)) *
                                           C77398 * C77688)))) /
        std::pow(C77335, 2);
    const double C36192 = C26552 * C36056;
    const double C63557 = C166 * C36056;
    const double C78726 = C78725 + C78708;
    const double C31276 = C31274 * C79307;
    const double C31779 = C31776 * C79307;
    const double C34065 = C34064 * C79307;
    const double C32452 =
        (2 * C78443 + C77506 * C78544 + C78573 + C78573 +
         C77549 * (2 * ae * C78532 +
                   C77549 * (2 * C77506 * C77703 +
                             C77506 * (C77703 +
                                       (C77463 * C77464 +
                                        C77688 * bs[7] * std::pow(C77397, 7)) *
                                           C77398 * C77614)))) /
        std::pow(C77335, 2);
    const double C34417 =
        (3 * (C78259 + C78450 + C77506 * C78594) + C78573 +
         C77506 * (2 * C78594 + ae * (C77549 * C78528 + C78504) +
                   C77506 * (C78564 + ae * (C77549 * C77506 * C77580 + C78500) +
                             C77506 * (ae * (C77549 * C77580 + C77472) +
                                       C77506 * (ae * C77537 +
                                                 C77549 * std::pow(C77397, 7) *
                                                     bs[7] * C77636))))) /
        std::pow(C77335, 2);
    const double C32460 = C245 * C31929;
    const double C59914 = C52141 * C31929;
    const double C78666 = ae * C78665;
    const double C38077 =
        (2 * C78194 + C77549 * C78665 + (C78053 + C78501 * C77688) * ae) /
        C77335;
    const double C78642 = C78625 + C78640;
    const double C4727 = C4723 + C4724;
    const double C1482 = C898 * C245;
    const double C1200 = C1196 + C1189;
    const double C1306 = C1302 * C79308;
    const double C4725 = C4067 * C245;
    const double C55320 = C4067 * C26498;
    const double C4401 = C4399 + C4395;
    const double C53565 = C2137 * C79306;
    const double C54848 = C3548 * C79306;
    const double C61906 = C10927 * C79306;
    const double C58607 = C7587 * C79306;
    const double C53482 = C53470 * C79308;
    const double C54781 = C54779 * C79308;
    const double C5771 =
        (2 * (2 * ae * C77519 + C77506 * C78023) + C78032 + C78032 +
         C77506 * (C78023 + C78029 + C78029 +
                   C77506 * (2 * C77534 + C77506 * C77391 * C77629))) /
        std::pow(C77335, 2);
    const double C6639 =
        (C78032 + C77549 * (C78109 + ae * C78097 + C77506 * C78117)) /
        std::pow(C77335, 2);
    const double C5776 = C166 * C5625;
    const double C6878 = C79308 * C5625;
    const double C7162 = C245 * C5625;
    const double C27338 = C26552 * C5625;
    const double C32743 = C26498 * C5625;
    const double C32815 = C26551 * C5625;
    const double C6400 = C166 * C6141;
    const double C7586 = C79308 * C6141;
    const double C7998 = C245 * C6141;
    const double C30133 = C26552 * C6141;
    const double C33487 = C26498 * C6141;
    const double C33591 = C26551 * C6141;
    const double C6403 = C166 * C6144;
    const double C36872 = C26552 * C6144;
    const double C11544 = C11541 + C11542;
    const double C11238 = C11237 + C11234;
    const double C57730 = C79308 * C6641;
    const double C78062 = C78061 + C78055;
    const double C8659 =
        (2 * (2 * ae * C77549 * C77517 + C77506 * C78246) + C78249 + C78249 +
         C77506 *
             (C78246 + C78250 + C78250 +
              C77506 * (2 * ae * C77549 * C77524 + C77506 * C77549 * C77629))) /
        std::pow(C77335, 2);
    const double C57493 = C57488 + C6402;
    const double C32047 = C32039 + C32040;
    const double C32213 = C32209 + C32210;
    const double C57249 = C57242 + C57243;
    const double C63559 = C63558 + C12650;
    const double C63487 = C38159 * C79308;
    const double C63354 = C63352 * C26498;
    const double C61521 = C61519 * C79306;
    const double C4513 = C4509 + C4510;
    const double C2231 = C1945 * C166;
    const double C2423 = C2419 * C79307;
    const double C2529 = C2525 + C2518;
    const double C668 = C664 * C79308;
    const double C1604 = C1600 * C79308;
    const double C3187 = C3186 * C79308;
    const double C3833 = C3832 * C79308;
    const double C4847 = C4845 * C79308;
    const double C27527 = C27521 * C79307;
    const double C28859 = C28858 * C79307;
    const double C11649 = C11648 + C6724;
    const double C11340 = C11034 * C166;
    const double C36668 = C11034 * C26498;
    const double C10711 =
        (2 * (2 * ae * C77562 + C77549 * C78119) + C78331 + C78331 +
         C77549 * (C78119 + C78328 + C78328 +
                   C77549 * (2 * C77577 + C77549 * C78123))) /
        std::pow(C77335, 2);
    const double C10716 = C245 * C10427;
    const double C11872 = C79307 * C10427;
    const double C12221 = C166 * C10427;
    const double C53900 = C52141 * C10427;
    const double C63078 = C26498 * C10427;
    const double C63213 = C52140 * C10427;
    const double C32466 = C32463 + C6728;
    const double C31955 = C31949 * C26498;
    const double C32303 = C32300 * C79307;
    const double C78361 = C78360 + C78354;
    const double C12921 =
        (2 * (2 * ae * C78091 + C77549 * C78443) + C78453 + C78453 +
         C77549 * (C78443 + C78450 + C78450 +
                   C77549 * (2 * ae * C78444 + C77549 * C77506 * C77703))) /
        std::pow(C77335, 2);
    const double C12924 = C245 * C12509;
    const double C38083 = C79307 * C12509;
    const double C38367 = C26498 * C12509;
    const double C57808 = C52141 * C12509;
    const double C63760 = C166 * C12509;
    const double C63829 = C52140 * C12509;
    const double C87 =
        (C79297 + 2 * C78986) / C78976 - (C79309 * C78977) / C78972;
    const double C88 =
        (C79281 + 2 * C78995 + C79309) / C78976 - (C79299 * C78977) / C78972;
    const double C89 = (C79253 + C78992 / C78972 + C79299) / C78976 -
                       (C79283 * C78977) / C78972;
    const double C5561 =
        (C79300 + 2 * C79068) / C78976 - (C79310 * C79064) / C78972;
    const double C5562 =
        (C79285 + 2 * C79075 + C79310) / C78976 - (C79303 * C79064) / C78972;
    const double C5563 = (C79259 + C79072 / C78972 + C79303) / C78976 -
                         (C79290 * C79064) / C78972;
    const double C10314 =
        (C79301 + 2 * C79110) / C78976 - (C79311 * C79106) / C78972;
    const double C10315 =
        (C79287 + 2 * C79117 + C79311) / C78976 - (C79305 * C79106) / C78972;
    const double C10316 = (C79262 + C79114 / C78972 + C79305) / C78976 -
                          (C79293 * C79106) / C78972;
    const double C55628 = C4402 * C79306;
    const double C2535 = C2531 * C79308;
    const double C896 = C885 + C886;
    const double C27255 = C27240 + C27241;
    const double C1943 = C1932 + C1933;
    const double C53738 = C53730 + C53731;
    const double C27137 = C1010 * C79306;
    const double C26962 = C26956 + C26505;
    const double C27510 = C27254 * C245;
    const double C53277 = C1829 * C79306;
    const double C53182 = C53176 + C27769;
    const double C53480 = C53468 * C166;
    const double C29707 = C29704 * C79307;
    const double C57732 = C57727 + C57728;
    const double C57495 = C57492 + C6401;
    const double C57407 = C32046 * C79308;
    const double C57252 = C57246 * C26498;
    const double C77458 = ae * C77457;
    const double C106 =
        (3 * C77425 + C77391 * C77457 + (2 * C77414 + C77391 * C77442) * ae) /
        C77335;
    const double C762 = (C77506 * C77457) / C77335;
    const double C1695 = (C77549 * C77457) / C77335;
    const double C28443 = C79306 * C770;
    const double C888 = C79308 * C871;
    const double C27243 = C79306 * C1091;
    const double C4179 = C79307 * C4171;
    const double C30343 = C79306 * C4615;
    const double C4066 = C4060 + C4061;
    const double C29699 = C29694 + C27768;
    const double C30032 = C30025 + C30026;
    const double C54569 = C79306 * C1703;
    const double C1935 = C79307 * C1918;
    const double C53733 = C79306 * C2318;
    const double C30024 = C79306 * C4285;
    const double C27138 = C1011 * C79306;
    const double C26963 = C26957 + C26949;
    const double C27515 = C27257 * C245;
    const double C53278 = C1830 * C79306;
    const double C53183 = C53177 + C27770;
    const double C53483 = C53471 * C166;
    const double C33387 = C7693 * C79306;
    const double C33793 = C33792 * C79307;
    const double C32541 = C32540 + C32537;
    const double C33189 = C33188 + C33185;
    const double C36667 = C11033 * C79306;
    const double C37073 = C37072 * C79307;
    const double C36470 = C36469 * C79307;
    const double C62104 = C36771 * C79308;
    const double C62670 = C62669 + C62666;
    const double C7087 =
        (2 * (2 * ae * C77528 + C77506 * C77631) + C78217 + C78217 +
         C77506 * (C77631 + C78214 + C78214 +
                   C77506 * (2 * ae * C77542 +
                             C77506 * (C77629 +
                                       (C77463 * C77464 +
                                        C77614 * bs[7] * std::pow(C77397, 7)) *
                                           C77398 * C77395)))) /
        std::pow(C77335, 2);
    const double C8199 =
        (C78217 +
         C77549 * (C77684 + ae * C77506 * C77585 +
                   C77506 * (ae * C77585 +
                             C77506 * (C77682 + std::pow(C77397, 7) * bs[7] *
                                                    C77673 * C77395)))) /
        std::pow(C77335, 2);
    const double C7091 = C166 * C6872;
    const double C27343 = C26552 * C6872;
    const double C7895 = C166 * C7580;
    const double C30136 = C26552 * C7580;
    const double C12291 =
        (2 * (2 * ae * C77571 + C77549 * C77705) + C78421 + C78421 +
         C77549 * (C77705 + C78418 + C78418 +
                   C77549 * (2 * ae * C77585 +
                             C77549 * (C77703 +
                                       (C77463 * C77464 +
                                        C77688 * bs[7] * std::pow(C77397, 7)) *
                                           C77398 * C77395)))) /
        std::pow(C77335, 2);
    const double C12295 = C245 * C11866;
    const double C53905 = C52141 * C11866;
    const double C78085 = C78084 + C78077;
    const double C8660 =
        (2 * (2 * ae * C77549 * C77530 + C77506 * C78252) + C78255 + C78255 +
         C77506 * (C78252 + C78256 + C78256 +
                   C77506 * (2 * ae * C77549 * C78068 +
                             C77506 * C77549 * C77391 *
                                 (C77463 * C77464 +
                                  C77614 * bs[7] * std::pow(C77397, 7)) *
                                 C77398))) /
        std::pow(C77335, 2);
    const double C78382 = C78381 + C78375;
    const double C12922 =
        (2 * (2 * ae * C78097 + C77549 * C78455) + C78465 + C78465 +
         C77549 * (C78455 + C78462 + C78462 +
                   C77549 * (2 * ae * C78456 +
                             C77549 * C77506 * C77391 *
                                 (C77463 * C77464 +
                                  C77688 * bs[7] * std::pow(C77397, 7)) *
                                 C77398))) /
        std::pow(C77335, 2);
    const double C12925 = C245 * C12510;
    const double C62598 = C52141 * C12510;
    const double C77500 = ae * C77498;
    const double C77499 = C77391 * C77498;
    const double C77913 = C77506 * C77498;
    const double C77934 = C77549 * C77498;
    const double C763 = (C77457 + C77498 * C77614) / C77335;
    const double C1696 = (C77457 + C77498 * C77688) / C77335;
    const double C771 =
        (2 * (2 * ae * (C77416 + C77440 * C77614) + C77391 * C77727) + C77730 +
         C77730 +
         C77391 * (C77727 + C77731 + C77731 +
                   C77391 * (2 * ae * (C77440 + C77476 * C77614) +
                             C77391 * (C77483 +
                                       (C77463 * C77464 +
                                        C77395 * bs[7] * std::pow(C77397, 7)) *
                                           C77398 * C77614)))) /
        std::pow(C77335, 2);
    const double C6873 =
        (2 * (C77455 + C77506 * C77545) + C77730 +
         C77506 * (C77545 + C77919 +
                   C77506 * (C77496 +
                             C77506 * (C77535 + ae * C78068 +
                                       C77391 * (ae * C77537 +
                                                 C77391 * std::pow(C77397, 7) *
                                                     bs[7] * C77510))))) /
        std::pow(C77335, 2);
    const double C7020 =
        (2 * (C77455 + C77506 * C77610) + C77730 +
         C77506 * (C77610 + C77919 +
                   C77506 * (C77496 +
                             C77506 * (C77606 + ae * C78068 +
                                       C77391 * (ae * C77537 +
                                                 C77391 * std::pow(C77397, 7) *
                                                     bs[7] * C77594))))) /
        std::pow(C77335, 2);
    const double C7687 =
        (C77730 + C77549 * (C77588 + (C77578 + ae * C78099 +
                                      C77391 * (ae * C77580 +
                                                C77391 * std::pow(C77397, 7) *
                                                    bs[7] * C77553)) *
                                         C77614)) /
        std::pow(C77335, 2);
    const double C8100 =
        (C77730 + C77549 * (C77668 + (C77664 + ae * C78099 +
                                      C77391 * (ae * C77580 +
                                                C77391 * std::pow(C77397, 7) *
                                                    bs[7] * C77652)) *
                                         C77614)) /
        std::pow(C77335, 2);
    const double C6806 = C95 * C6802;
    const double C26951 = C26498 * C6802;
    const double C7482 = C95 * C7478;
    const double C29696 = C26498 * C7478;
    const double C1704 =
        (2 * (2 * ae * (C77416 + C77440 * C77688) + C77391 * C77829) + C77832 +
         C77832 +
         C77391 * (C77829 + C77833 + C77833 +
                   C77391 * (2 * ae * (C77440 + C77476 * C77688) +
                             C77391 * (C77483 +
                                       (C77463 * C77464 +
                                        C77395 * bs[7] * std::pow(C77397, 7)) *
                                           C77398 * C77688)))) /
        std::pow(C77335, 2);
    const double C11132 =
        (C77832 + C77506 * (C77610 + (C77606 + ae * C78068 +
                                      C77391 * (ae * C77537 +
                                                C77391 * std::pow(C77397, 7) *
                                                    bs[7] * C77594)) *
                                         C77688)) /
        std::pow(C77335, 2);
    const double C11867 =
        (2 * (C77455 + C77549 * C77588) + C77832 +
         C77549 * (C77588 + C77940 +
                   C77549 * (C77496 +
                             C77549 * (C77578 + ae * C78099 +
                                       C77391 * (ae * C77580 +
                                                 C77391 * std::pow(C77397, 7) *
                                                     bs[7] * C77553))))) /
        std::pow(C77335, 2);
    const double C12152 =
        (2 * (C77455 + C77549 * C77668) + C77832 +
         C77549 * (C77668 + C77940 +
                   C77549 * (C77496 +
                             C77549 * (C77664 + ae * C78099 +
                                       C77391 * (ae * C77580 +
                                                 C77391 * std::pow(C77397, 7) *
                                                     bs[7] * C77652))))) /
        std::pow(C77335, 2);
    const double C11726 = C95 * C11722;
    const double C53171 = C26498 * C11722;
    const double C3942 =
        (2 * (2 * ae * C77549 * C77911 + C77391 * C77958) + C77961 + C77961 +
         C77391 * (C77958 + C77962 + C77962 +
                   C77391 * (2 * ae * C77549 * C77506 * C77476 +
                             C77391 * C77549 * C77506 *
                                 (C77463 * C77464 +
                                  C77395 * bs[7] * std::pow(C77397, 7)) *
                                 C77398))) /
        std::pow(C77335, 2);
    const double C7792 =
        (C77549 * C77610 + C77961 +
         C77506 * (C77940 +
                   C77506 * C77549 *
                       (C77606 + ae * C78068 +
                        C77391 * (ae * C77537 + C77391 * std::pow(C77397, 7) *
                                                    bs[7] * C77594)))) /
        std::pow(C77335, 2);
    const double C11027 =
        (C77506 * C77588 + C77961 +
         C77549 * (C77919 +
                   C77549 * C77506 *
                       (C77578 + ae * C78099 +
                        C77391 * (ae * C77580 + C77391 * std::pow(C77397, 7) *
                                                    bs[7] * C77553)))) /
        std::pow(C77335, 2);
    const double C11440 =
        (C77506 * C77668 + C77961 +
         C77549 * (C77919 +
                   C77549 * C77506 *
                       (C77664 + ae * C78099 +
                        C77391 * (ae * C77580 + C77391 * std::pow(C77397, 7) *
                                                    bs[7] * C77652)))) /
        std::pow(C77335, 2);
    const double C78517 = ae * C78515;
    const double C78516 = C77506 * C78515;
    const double C78584 = C77549 * C78515;
    const double C32122 =
        (2 * (2 * ae * C78301 + C77506 * C78555) + C78558 + C78558 +
         C77506 * (C78555 + C78559 + C78559 +
                   C77506 * (2 * ae * (C77524 + C77537 * C77688) +
                             C77506 * (C77629 +
                                       (C77463 * C77464 +
                                        C77614 * bs[7] * std::pow(C77397, 7)) *
                                           C77398 * C77688)))) /
        std::pow(C77335, 2);
    const double C38437 =
        (2 * (C78060 + C77549 * C78541) + C78558 +
         C77549 * (C78541 + C78589 +
                   C77549 * (C78513 +
                             C77549 * (C77682 + ae * C78626 +
                                       C77506 * (ae * C77580 +
                                                 C77506 * std::pow(C77397, 7) *
                                                     bs[7] * C77673))))) /
        std::pow(C77335, 2);
    const double C38229 = C26552 * C38009;
    const double C57490 = C166 * C38009;
    const double C78728 = ae * C78726;
    const double C78727 = C77549 * C78726;
    const double C38504 =
        (2 * (2 * ae * C78095 + C77549 * C78544) + C78666 + C78666 +
         C77549 * (C78544 + C78663 + C78663 +
                   C77549 * (2 * ae * C78528 +
                             C77549 * (C77703 +
                                       (C77463 * C77464 +
                                        C77688 * bs[7] * std::pow(C77397, 7)) *
                                           C77398 * C77614)))) /
        std::pow(C77335, 2);
    const double C38508 = C245 * C38077;
    const double C57813 = C52141 * C38077;
    const double C78643 = C78642 + C78635;
    const double C4729 = C4727 * C79307;
    const double C1204 = C1200 + C1190;
    const double C4403 = C4401 + C4396;
    const double C7090 = C79308 * C5771;
    const double C8202 = C79308 * C6639;
    const double C7092 = C7089 + C5776;
    const double C6880 = C6877 + C6878;
    const double C7165 = C7162 + C7163;
    const double C32747 = C32743 + C32744;
    const double C7896 = C7893 + C6400;
    const double C7588 = C7585 + C7586;
    const double C8001 = C7998 + C7999;
    const double C33491 = C33487 + C33488;
    const double C11545 = C11544 * C79307;
    const double C62204 = C11238 * C79306;
    const double C57733 = C57729 + C57730;
    const double C78063 = ae * C78062;
    const double C5627 =
        (3 * C78041 + C77506 * C78062 + (2 * C78035 + C77506 * C78053) * ae) /
        C77335;
    const double C8451 = (C77549 * C78062) / C77335;
    const double C31853 = (C78062 + C78515 * C77688) / C77335;
    const double C59640 = C79308 * C8659;
    const double C57496 = C57493 + C6402;
    const double C57408 = C32047 * C79308;
    const double C57255 = C57249 * C26498;
    const double C63560 = C63559 + C63556;
    const double C4515 = C4513 * C79308;
    const double C2533 = C2529 + C2519;
    const double C11650 = C11649 + C11646;
    const double C12294 = C79307 * C10711;
    const double C12296 = C12293 + C10716;
    const double C11874 = C11871 + C11872;
    const double C12224 = C12221 + C12222;
    const double C63080 = C63078 + C63079;
    const double C32469 = C32466 + C32459;
    const double C78362 = ae * C78361;
    const double C10429 =
        (3 * C78340 + C77549 * C78361 + (2 * C78334 + C77549 * C78352) * ae) /
        C77335;
    const double C38507 = C79307 * C12921;
    const double C38509 = C38506 + C12924;
    const double C38085 = C38082 + C38083;
    const double C38370 = C38367 + C38368;
    const double C63762 = C63760 + C63761;
    const double C26968 = C26962 + C26947;
    const double C53188 = C53182 + C53168;
    const double C57498 = C57495 + C57487;
    const double C112 =
        (3 * (C77420 + C77423 + C77423 + C77391 * C77451) + C77458 + C77458 +
         C77391 *
             (2 * C77451 + C77455 + C77455 +
              C77391 * (C77446 + C77450 + C77450 +
                        C77391 * (2 * ae * C77440 +
                                  C77391 *
                                      (C77430 * C77431 +
                                       C77395 * bs[6] * std::pow(C77389, 6)) *
                                      C77398)))) /
        std::pow(C77335, 2);
    const double C872 =
        (C77458 + C77506 * (2 * C77527 + ae * C77528 + C77391 * C77545)) /
        std::pow(C77335, 2);
    const double C1092 =
        (C77458 + C77506 * (2 * C77602 + ae * C77528 + C77391 * C77610)) /
        std::pow(C77335, 2);
    const double C1919 =
        (C77458 + C77549 * (2 * C77570 + ae * C77571 + C77391 * C77588)) /
        std::pow(C77335, 2);
    const double C2319 =
        (C77458 + C77549 * (2 * C77660 + ae * C77571 + C77391 * C77668)) /
        std::pow(C77335, 2);
    const double C123 = C93 * C106;
    const double C121 = C95 * C106;
    const double C192 = C166 * C106;
    const double C271 = C245 * C106;
    const double C26508 = C26498 * C106;
    const double C781 = C95 * C762;
    const double C2613 = C93 * C762;
    const double C2683 = C166 * C762;
    const double C2757 = C245 * C762;
    const double C26506 = C26498 * C762;
    const double C28650 = C79306 * C762;
    const double C1714 = C95 * C1695;
    const double C3259 = C93 * C1695;
    const double C3329 = C166 * C1695;
    const double C3403 = C245 * C1695;
    const double C29058 = C26498 * C1695;
    const double C54775 = C79306 * C1695;
    const double C897 = C887 + C888;
    const double C27256 = C27242 + C27243;
    const double C4184 = C4178 + C4179;
    const double C30347 = C30342 + C30343;
    const double C55321 = C4066 * C79306;
    const double C29702 = C29699 + C27768;
    const double C30344 = C30032 * C245;
    const double C55526 = C30032 * C166;
    const double C1944 = C1934 + C1935;
    const double C53739 = C53732 + C53733;
    const double C30031 = C30023 + C30024;
    const double C26969 = C26963 + C26950;
    const double C53189 = C53183 + C53170;
    const double C32542 = C32541 * C79307;
    const double C33190 = C33189 * C79307;
    const double C78086 = ae * C78085;
    const double C5628 =
        (3 * C78031 + C77506 * C78085 + (2 * C78025 + C77506 * C78074) * ae) /
        C77335;
    const double C8452 = (C77549 * C78085) / C77335;
    const double C78383 = ae * C78382;
    const double C10430 =
        (3 * C78330 + C77549 * C78382 + (2 * C78324 + C77549 * C78373) * ae) /
        C77335;
    const double C873 =
        (2 * C77527 + ae * C77528 + C77391 * C77545 + ae * C77506 * C77498 +
         C77506 * (C77500 +
                   C77506 * (2 * C77541 + ae * C77542 +
                             C77391 * (C77535 + ae * C77391 * C77537 +
                                       C77391 * (ae * C77537 +
                                                 C77391 * std::pow(C77397, 7) *
                                                     bs[7] * C77510))))) /
        std::pow(C77335, 2);
    const double C1093 =
        (2 * C77602 + ae * C77528 + C77391 * C77610 + ae * C77506 * C77498 +
         C77506 * (C77500 +
                   C77506 * (2 * C77608 + ae * C77542 +
                             C77391 * (C77606 + ae * C77391 * C77537 +
                                       C77391 * (ae * C77537 +
                                                 C77391 * std::pow(C77397, 7) *
                                                     bs[7] * C77594))))) /
        std::pow(C77335, 2);
    const double C1920 =
        (2 * C77570 + ae * C77571 + C77391 * C77588 + ae * C77549 * C77498 +
         C77549 * (C77500 +
                   C77549 * (2 * C77584 + ae * C77585 +
                             C77391 * (C77578 + ae * C77391 * C77580 +
                                       C77391 * (ae * C77580 +
                                                 C77391 * std::pow(C77397, 7) *
                                                     bs[7] * C77553))))) /
        std::pow(C77335, 2);
    const double C2320 =
        (2 * C77660 + ae * C77571 + C77391 * C77668 + ae * C77549 * C77498 +
         C77549 * (C77500 +
                   C77549 * (2 * C77666 + ae * C77585 +
                             C77391 * (C77664 + ae * C77391 * C77580 +
                                       C77391 * (ae * C77580 +
                                                 C77391 * std::pow(C77397, 7) *
                                                     bs[7] * C77652))))) /
        std::pow(C77335, 2);
    const double C4054 =
        (C77549 *
         (C77500 + C77506 * (2 * C77541 + ae * C77542 +
                             C77391 * (C77535 + ae * C77391 * C77537 +
                                       C77391 * (ae * C77537 +
                                                 C77391 * std::pow(C77397, 7) *
                                                     bs[7] * C77510))))) /
        std::pow(C77335, 2);
    const double C77501 = C77465 + C77499;
    const double C77918 = ae * C77913;
    const double C3938 = (C77549 * C77913) / C77335;
    const double C77939 = ae * C77934;
    const double C784 = C95 * C763;
    const double C28444 = C26498 * C763;
    const double C1717 = C95 * C1696;
    const double C54570 = C26498 * C1696;
    const double C32377 =
        (2 * C78113 + ae * C78095 + C77506 * C78541 + ae * C77549 * C78515 +
         C77549 * (C78517 +
                   C77549 * (2 * C78539 + ae * C78528 +
                             C77506 * (C77682 + ae * C77506 * C77580 +
                                       C77506 * (ae * C77580 +
                                                 C77506 * std::pow(C77397, 7) *
                                                     bs[7] * C77673))))) /
        std::pow(C77335, 2);
    const double C78518 = C78491 + C78516;
    const double C78588 = ae * C78584;
    const double C78729 = C78704 + C78727;
    const double C78644 = ae * C78643;
    const double C36100 =
        (3 * C78452 + C77549 * C78643 + (2 * C78445 + C77549 * C78632) * ae) /
        C77335;
    const double C55629 = C4403 * C79306;
    const double C8204 = C8201 + C8202;
    const double C7093 = C7092 + C5776;
    const double C7303 = C6880 * C245;
    const double C7166 = C7165 * C79308;
    const double C7897 = C7896 + C6400;
    const double C8203 = C7588 * C245;
    const double C58606 = C7588 * C26498;
    const double C8002 = C8001 * C79308;
    const double C58805 = C33491 * C79308;
    const double C5773 =
        (3 * (C77619 + C78039 + C78039 + C77506 * C78050) + C78063 + C78063 +
         C77506 * (2 * C78050 + C78060 + C78060 +
                   C77506 * (C77624 + C78056 + C78056 +
                             C77506 * (2 * C77531 + C77506 * C77629)))) /
        std::pow(C77335, 2);
    const double C8865 =
        (C78063 + C77549 * (2 * C78113 + ae * C78095 +
                            C77506 * (C77679 + ae * C77506 * C77567 +
                                      C77506 * (C77574 + C77506 * C77682)))) /
        std::pow(C77335, 2);
    const double C5778 = C166 * C5627;
    const double C31428 = C26498 * C5627;
    const double C31481 = C26551 * C5627;
    const double C31479 = C26552 * C5627;
    const double C31528 = C245 * C5627;
    const double C8662 = C166 * C8451;
    const double C32126 = C26552 * C8451;
    const double C34277 = C26498 * C8451;
    const double C34350 = C26551 * C8451;
    const double C34419 = C245 * C8451;
    const double C59432 = C79308 * C8451;
    const double C32129 = C26552 * C31853;
    const double C59641 = C166 * C31853;
    const double C57499 = C57496 + C57489;
    const double C63561 = C63560 * C79306;
    const double C2537 = C2533 * C79308;
    const double C11651 = C11650 * C79308;
    const double C12297 = C12296 + C10716;
    const double C12084 = C11874 * C166;
    const double C12225 = C12224 * C79307;
    const double C10713 =
        (3 * (C77693 + C78338 + C78338 + C77549 * C78349) + C78362 + C78362 +
         C77549 * (2 * C78349 + C78359 + C78359 +
                   C77549 * (C77698 + C78355 + C78355 +
                             C77549 * (2 * C77574 + C77549 * C77703)))) /
        std::pow(C77335, 2);
    const double C12717 =
        (C78362 + C77506 * (2 * C78259 + ae * C78301 +
                            C77549 * (C77642 + ae * C77549 * C77524 +
                                      C77549 * (C77531 + C77549 * C77645)))) /
        std::pow(C77335, 2);
    const double C10718 = C245 * C10429;
    const double C61610 = C26498 * C10429;
    const double C61659 = C166 * C10429;
    const double C61708 = C52140 * C10429;
    const double C61706 = C52141 * C10429;
    const double C38510 = C38509 + C12924;
    const double C38087 = C38085 * C26498;
    const double C38371 = C38370 * C79307;
    const double C26974 = C26968 * C79307;
    const double C57501 = C57498 * C79306;
    const double C2684 = C79308 * C872;
    const double C28652 = C79306 * C1092;
    const double C3404 = C79307 * C1919;
    const double C54982 = C79306 * C2319;
    const double C202 = C192 + C193;
    const double C281 = C271 + C272;
    const double C2761 = C2757 + C2758;
    const double C28445 = C28442 + C26506;
    const double C28653 = C28649 + C28650;
    const double C3333 = C3329 + C3330;
    const double C54571 = C54568 + C29058;
    const double C54778 = C54774 + C54775;
    const double C29911 = C4184 * C79306;
    const double C30350 = C30347 * C79307;
    const double C29705 = C29702 + C29695;
    const double C55527 = C30031 * C79308;
    const double C26975 = C26969 * C79307;
    const double C5774 =
        (3 * (C78023 + C78029 + C78029 + C77506 * C78075) + C78086 + C78086 +
         C77506 *
             (2 * C78075 + C78083 + C78083 +
              C77506 * (C78066 + C78079 + C78079 +
                        C77506 * (2 * ae * C78068 +
                                  C77506 * C77391 *
                                      (C77463 * C77464 +
                                       C77614 * bs[7] * std::pow(C77397, 7)) *
                                      C77398)))) /
        std::pow(C77335, 2);
    const double C8866 =
        (C78086 +
         C77549 * (2 * C78117 + ae * C78103 +
                   C77506 * (C78115 + ae * C77506 * C78099 +
                             C77506 * (ae * C78099 + C77506 * C77391 *
                                                         std::pow(C77397, 7) *
                                                         bs[7] * C77673)))) /
        std::pow(C77335, 2);
    const double C5779 = C166 * C5628;
    const double C32816 = C26552 * C5628;
    const double C8663 = C166 * C8452;
    const double C33592 = C26552 * C8452;
    const double C10714 =
        (3 * (C78119 + C78328 + C78328 + C77549 * C78370) + C78383 + C78383 +
         C77549 *
             (2 * C78370 + C78380 + C78380 +
              C77549 * (C78123 + C78376 + C78376 +
                        C77549 * (2 * ae * C78099 +
                                  C77549 * C77391 *
                                      (C77463 * C77464 +
                                       C77688 * bs[7] * std::pow(C77397, 7)) *
                                      C77398)))) /
        std::pow(C77335, 2);
    const double C12718 =
        (C78383 +
         C77506 * (2 * C78262 + ae * C78305 +
                   C77549 * (C78098 + ae * C77549 * C78068 +
                             C77549 * (ae * C78068 + C77549 * C77391 *
                                                         std::pow(C77397, 7) *
                                                         bs[7] * C77636)))) /
        std::pow(C77335, 2);
    const double C10719 = C245 * C10430;
    const double C63214 = C52141 * C10430;
    const double C77502 = C77501 + C77488;
    const double C2611 =
        (3 * (C77718 + C77722 + C77722 + C77391 * C77922) + C77918 + C77918 +
         C77391 *
             (2 * C77922 + C77919 + C77919 +
              C77391 * (C77912 + C77920 + C77920 +
                        C77391 * (2 * ae * C77506 * C77476 +
                                  C77391 * C77506 *
                                      (C77463 * C77464 +
                                       C77395 * bs[7] * std::pow(C77397, 7)) *
                                      C77398)))) /
        std::pow(C77335, 2);
    const double C4172 =
        (C77918 +
         C77549 * C77506 *
             (2 * C77584 + ae * C77585 +
              C77391 * (C77578 + ae * C77391 * C77580 +
                        C77391 * (ae * C77580 + C77391 * std::pow(C77397, 7) *
                                                    bs[7] * C77553)))) /
        std::pow(C77335, 2);
    const double C4616 =
        (C77918 +
         C77549 * C77506 *
             (2 * C77666 + ae * C77585 +
              C77391 * (C77664 + ae * C77391 * C77580 +
                        C77391 * (ae * C77580 + C77391 * std::pow(C77397, 7) *
                                                    bs[7] * C77652)))) /
        std::pow(C77335, 2);
    const double C3949 = C95 * C3938;
    const double C29059 = C26498 * C3938;
    const double C3257 =
        (3 * (C77820 + C77824 + C77824 + C77391 * C77943) + C77939 + C77939 +
         C77391 *
             (2 * C77943 + C77940 + C77940 +
              C77391 * (C77933 + C77941 + C77941 +
                        C77391 * (2 * ae * C77549 * C77476 +
                                  C77391 * C77549 *
                                      (C77463 * C77464 +
                                       C77395 * bs[7] * std::pow(C77397, 7)) *
                                      C77398)))) /
        std::pow(C77335, 2);
    const double C4286 =
        (C77939 +
         C77506 * C77549 *
             (2 * C77608 + ae * C77542 +
              C77391 * (C77606 + ae * C77391 * C77537 +
                        C77391 * (ae * C77537 + C77391 * std::pow(C77397, 7) *
                                                    bs[7] * C77594)))) /
        std::pow(C77335, 2);
    const double C78519 = C78518 + C78511;
    const double C34348 =
        (3 * (C78246 + C78250 + C78250 + C77506 * C78591) + C78588 + C78588 +
         C77506 *
             (2 * C78591 + C78589 + C78589 +
              C77506 * (C78583 + C78590 + C78590 +
                        C77506 * (2 * ae * C77549 * C77537 +
                                  C77506 * C77549 *
                                      (C77463 * C77464 +
                                       C77614 * bs[7] * std::pow(C77397, 7)) *
                                      C77398)))) /
        std::pow(C77335, 2);
    const double C78730 = C78729 + C78718;
    const double C36363 =
        (3 * (C78443 + C78450 + C78450 + C77549 * C78633) + C78644 + C78644 +
         C77549 *
             (2 * C78633 + C78641 + C78641 +
              C77549 * (C78624 + C78637 + C78637 +
                        C77549 * (2 * ae * C78626 +
                                  C77549 * C77506 *
                                      (C77463 * C77464 +
                                       C77688 * bs[7] * std::pow(C77397, 7)) *
                                      C77398)))) /
        std::pow(C77335, 2);
    const double C38295 =
        (2 * C78259 + ae * C78301 + C77549 * C78567 + C78644 +
         C77506 *
             (ae * (2 * C78350 +
                    C77549 * (C77567 + C77549 * (C77549 * C77580 + C77472) +
                              C77549 * C77462 * ae) +
                    C78613 * ae) +
              C77506 * (2 * C78564 + ae * C78614 +
                        C77549 * (C77645 + ae * C77549 * C77537 +
                                  C77549 * (ae * C77537 +
                                            C77549 * std::pow(C77397, 7) *
                                                bs[7] * C77636))))) /
        std::pow(C77335, 2);
    const double C36365 = C245 * C36100;
    const double C63830 = C52141 * C36100;
    const double C8205 = C8204 * C79307;
    const double C7094 = C7093 + C7090;
    const double C7898 = C7897 + C7894;
    const double C59845 = C79308 * C8865;
    const double C31434 = C31428 + C31429;
    const double C31531 = C31528 + C31529;
    const double C59642 = C59639 + C8662;
    const double C34281 = C34277 + C34278;
    const double C34421 = C34419 + C34420;
    const double C59435 = C59431 + C59432;
    const double C57502 = C57499 * C79306;
    const double C12298 = C12297 + C12294;
    const double C38298 = C79307 * C12717;
    const double C61613 = C61610 + C61611;
    const double C61662 = C61659 + C61660;
    const double C38511 = C38510 + C38507;
    const double C2687 = C2683 + C2684;
    const double C28654 = C28651 + C28652;
    const double C3407 = C3403 + C3404;
    const double C54983 = C54981 + C54982;
    const double C28582 = C2761 * C79306;
    const double C28446 = C28445 + C26506;
    const double C28855 = C28653 * C245;
    const double C54641 = C3333 * C79306;
    const double C54572 = C54571 + C29058;
    const double C54780 = C54778 * C166;
    const double C29708 = C29705 * C79307;
    const double C77503 = ae * C77502;
    const double C107 =
        (4 * C77457 + C77391 * C77502 + (3 * C77442 + C77391 * C77485) * ae) /
        C77335;
    const double C2610 = (C77506 * C77502) / C77335;
    const double C3256 = (C77549 * C77502) / C77335;
    const double C78520 = ae * C78519;
    const double C31318 =
        (4 * C78062 + C77506 * C78519 + (3 * C78053 + C77506 * C78509) * ae) /
        C77335;
    const double C34131 = (C77549 * C78519) / C77335;
    const double C78731 = ae * C78730;
    const double C61404 =
        (4 * C78361 + C77549 * C78730 + (3 * C78352 + C77549 * C78715) * ae) /
        C77335;
    const double C58904 = C7898 * C79306;
    const double C59846 = C59844 + C59845;
    const double C59643 = C59642 + C8662;
    const double C59572 = C34281 * C79308;
    const double C59437 = C59435 * C26498;
    const double C12299 = C12298 * C79308;
    const double C38299 = C38297 + C38298;
    const double C28447 = C28446 + C28443;
    const double C54573 = C54572 + C54569;
    const double C113 =
        (4 * (2 * C77451 + C77455 + C77455 + C77391 * C77494) + C77503 +
         C77503 +
         C77391 * (3 * C77494 + C77500 + C77500 +
                   C77391 * (2 * C77490 + C77496 + C77496 +
                             C77391 * (C77483 + C77489 + C77489 +
                                       C77391 * (2 * ae * C77476 +
                                                 C77391 *
                                                     (C77463 * C77464 +
                                                      C77395 * bs[7] *
                                                          std::pow(C77397, 7)) *
                                                     C77398))))) /
        std::pow(C77335, 2);
    const double C2681 =
        (C77503 +
         C77506 * (3 * C77545 + ae * C77546 +
                   C77391 * (2 * C77541 + ae * C77542 +
                             C77391 * (C77535 + ae * C77391 * C77537 +
                                       C77391 * (ae * C77537 +
                                                 C77391 * std::pow(C77397, 7) *
                                                     bs[7] * C77510))))) /
        std::pow(C77335, 2);
    const double C2828 =
        (C77503 +
         C77506 * (3 * C77610 + ae * C77546 +
                   C77391 * (2 * C77608 + ae * C77542 +
                             C77391 * (C77606 + ae * C77391 * C77537 +
                                       C77391 * (ae * C77537 +
                                                 C77391 * std::pow(C77397, 7) *
                                                     bs[7] * C77594))))) /
        std::pow(C77335, 2);
    const double C3401 =
        (C77503 +
         C77549 * (3 * C77588 + ae * C77589 +
                   C77391 * (2 * C77584 + ae * C77585 +
                             C77391 * (C77578 + ae * C77391 * C77580 +
                                       C77391 * (ae * C77580 +
                                                 C77391 * std::pow(C77397, 7) *
                                                     bs[7] * C77553))))) /
        std::pow(C77335, 2);
    const double C3686 =
        (C77503 +
         C77549 * (3 * C77668 + ae * C77589 +
                   C77391 * (2 * C77666 + ae * C77585 +
                             C77391 * (C77664 + ae * C77391 * C77580 +
                                       C77391 * (ae * C77580 +
                                                 C77391 * std::pow(C77397, 7) *
                                                     bs[7] * C77652))))) /
        std::pow(C77335, 2);
    const double C124 = C95 * C107;
    const double C2614 = C95 * C2610;
    const double C26509 = C26498 * C2610;
    const double C3260 = C95 * C3256;
    const double C52056 = C26498 * C3256;
    const double C31477 =
        (4 * (2 * C78050 + C78060 + C78060 + C77506 * C78507) + C78520 +
         C78520 +
         C77506 * (3 * C78507 + C78517 + C78517 +
                   C77506 * (2 * C78498 + C78513 + C78513 +
                             C77506 * (C77629 + C78506 + C78506 +
                                       C77506 * (2 * ae * C77537 +
                                                 C77506 *
                                                     (C77463 * C77464 +
                                                      C77614 * bs[7] *
                                                          std::pow(C77397, 7)) *
                                                     C77398))))) /
        std::pow(C77335, 2);
    const double C34559 =
        (C78520 +
         C77549 * (3 * C78541 + ae * C78532 +
                   C77506 * (2 * C78539 + ae * C78528 +
                             C77506 * (C77682 + ae * C77506 * C77580 +
                                       C77506 * (ae * C77580 +
                                                 C77506 * std::pow(C77397, 7) *
                                                     bs[7] * C77673))))) /
        std::pow(C77335, 2);
    const double C31482 = C26552 * C31318;
    const double C34351 = C26552 * C34131;
    const double C56911 = C166 * C34131;
    const double C61704 =
        (4 * (2 * C78349 + C78359 + C78359 + C77549 * C78720) + C78731 +
         C78731 +
         C77549 * (3 * C78720 + C78728 + C78728 +
                   C77549 * (2 * C78712 + C78724 + C78724 +
                             C77549 * (C77703 + C78719 + C78719 +
                                       C77549 * (2 * ae * C77580 +
                                                 C77549 *
                                                     (C77463 * C77464 +
                                                      C77688 * bs[7] *
                                                          std::pow(C77397, 7)) *
                                                     C77398))))) /
        std::pow(C77335, 2);
    const double C61709 = C52141 * C61404;
    const double C59644 = C59643 + C59640;
    const double C28448 = C28447 * C79307;
    const double C59645 = C59644 * C79306;
    d2eexx[0] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((C92 * C96 + C115 + C115 + C81 * C108 + C94 * C97 + C116 +
                     C116 + C82 * C109) *
                        C79307 * C79308 * C79027 * C79068 -
                    (C94 * C748 + C773 + C773 + C82 * C764 + C92 * C749 + C774 +
                     C774 + C81 * C765) *
                        C79307 * C79308 * C79027 * C79075 +
                    (C92 * C750 + C775 + C775 + C81 * C766 + C94 * C751 + C776 +
                     C776 + C82 * C767) *
                        C79307 * C79308 * C79027 * C15083) *
                       C78986 +
                   ((C92 * C748 + C777 + C777 + C81 * C764 + C94 * C752 + C778 +
                     C778 + C82 * C768) *
                        C79307 * C79308 * C79027 * C79075 -
                    (C94 * C98 + C117 + C117 + C82 * C110 + C92 * C97 + C118 +
                     C118 + C81 * C109) *
                        C79307 * C79308 * C79027 * C79068 -
                    (C94 * C753 + C779 + C779 + C82 * C769 + C92 * C751 + C780 +
                     C780 + C81 * C767) *
                        C79307 * C79308 * C79027 * C15083) *
                       C78995 +
                   ((C92 * C98 + C119 + C119 + C81 * C110 + C94 * C99 + C120 +
                     C120 + C82 * C111) *
                        C79307 * C79308 * C79027 * C79068 -
                    (C94 * C754 + C781 + C781 + C82 * C770 + C92 * C752 + C782 +
                     C782 + C81 * C768) *
                        C79307 * C79308 * C79027 * C79075 +
                    (C92 * C753 + C783 + C783 + C81 * C769 + C94 * C755 + C784 +
                     C784 + C82 * C771) *
                        C79307 * C79308 * C79027 * C15083) *
                       C15086)) /
                 (p * q * std::sqrt(p + q));
    d2eexy[0] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C166 * C96 + C79308 * C167) * C93 +
            (C166 * C102 + C79308 * C173) * C81 + C196 * C95 + C197 * C82) *
               C79307 * C79027 * C79068 -
           (C891 * C82 + C892 * C95 + (C166 * C757 + C79308 * C867) * C81 +
            (C166 * C749 + C79308 * C859) * C93) *
               C79307 * C79027 * C79075 +
           ((C166 * C750 + C79308 * C860) * C93 +
            (C166 * C758 + C79308 * C868) * C81 + C893 * C95 + C894 * C82) *
               C79307 * C79027 * C15083) *
              C78986 +
          ((C892 * C93 + C891 * C81 + C895 * C95 + C896 * C82) * C79307 *
               C79027 * C79075 -
           (C198 * C82 + C199 * C95 + C197 * C81 + C196 * C93) * C79307 *
               C79027 * C79068 -
           (C897 * C82 + C898 * C95 + C894 * C81 + C893 * C93) * C79307 *
               C79027 * C15083) *
              C78995 +
          ((C199 * C93 + C198 * C81 + C200 * C95 + C201 * C82) * C79307 *
               C79027 * C79068 -
           (C2687 * C82 + C2688 * C95 + C896 * C81 + C895 * C93) * C79307 *
               C79027 * C79075 +
           (C898 * C93 + C897 * C81 + (C166 * C755 + C79308 * C865) * C95 +
            (C166 * C763 + C79308 * C873) * C82) *
               C79307 * C79027 * C15083) *
              C15086)) /
        (p * q * std::sqrt(p + q));
    d2eexz[0] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C245 * C96 + C79307 * C246) * C93 +
            (C245 * C102 + C79307 * C252) * C81 + C275 * C95 + C276 * C82) *
               C79308 * C79027 * C79068 -
           (C1005 * C82 + C1006 * C95 + (C245 * C757 + C79307 * C981) * C81 +
            (C245 * C749 + C79307 * C973) * C93) *
               C79308 * C79027 * C79075 +
           ((C245 * C750 + C79307 * C974) * C93 +
            (C245 * C758 + C79307 * C982) * C81 + C1007 * C95 + C1008 * C82) *
               C79308 * C79027 * C15083) *
              C78986 +
          ((C1006 * C93 + C1005 * C81 + C1009 * C95 + C1010 * C82) * C79308 *
               C79027 * C79075 -
           (C277 * C82 + C278 * C95 + C276 * C81 + C275 * C93) * C79308 *
               C79027 * C79068 -
           (C1011 * C82 + C1012 * C95 + C1008 * C81 + C1007 * C93) * C79308 *
               C79027 * C15083) *
              C78995 +
          ((C278 * C93 + C277 * C81 + C279 * C95 + C280 * C82) * C79308 *
               C79027 * C79068 -
           (C2761 * C82 + C2762 * C95 + C1010 * C81 + C1009 * C93) * C79308 *
               C79027 * C79075 +
           (C1012 * C93 + C1011 * C81 + (C245 * C755 + C79307 * C979) * C95 +
            (C245 * C763 + C79307 * C987) * C82) *
               C79308 * C79027 * C15083) *
              C15086)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[0] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C166 +
            (C93 * C167 + C81 * C324 + C95 * C168 + C82 * C325) * C79308) *
               C79307 * C79027 * C79068 -
           ((C95 * C858 + C82 * C1086 + C93 * C859 + C81 * C1087) * C79308 +
            (C95 * C748 + C82 * C756 + C93 * C749 + C81 * C757) * C166) *
               C79307 * C79027 * C79075 +
           ((C93 * C750 + C81 * C758 + C95 * C751 + C82 * C759) * C166 +
            (C93 * C860 + C81 * C1088 + C95 * C861 + C82 * C1089) * C79308) *
               C79307 * C79027 * C15083) *
              C78986 +
          (((C93 * C748 + C81 * C756 + C95 * C752 + C82 * C760) * C166 +
            (C93 * C858 + C81 * C1086 + C95 * C862 + C82 * C1090) * C79308) *
               C79307 * C79027 * C79075 -
           ((C95 * C169 + C82 * C326 + C93 * C168 + C81 * C325) * C79308 +
            (C95 * C98 + C82 * C104 + C93 * C97 + C81 * C103) * C166) *
               C79307 * C79027 * C79068 -
           ((C95 * C863 + C82 * C1091 + C93 * C861 + C81 * C1089) * C79308 +
            (C95 * C753 + C82 * C761 + C93 * C751 + C81 * C759) * C166) *
               C79307 * C79027 * C15083) *
              C78995 +
          (((C93 * C98 + C81 * C104 + C95 * C99 + C82 * C105) * C166 +
            (C93 * C169 + C81 * C326 + C95 * C170 + C82 * C327) * C79308) *
               C79307 * C79027 * C79068 -
           ((C95 * C864 + C82 * C1092 + C93 * C862 + C81 * C1090) * C79308 +
            (C95 * C754 + C82 * C762 + C93 * C752 + C81 * C760) * C166) *
               C79307 * C79027 * C79075 +
           ((C93 * C753 + C81 * C761 + C95 * C755 + C82 * C763) * C166 +
            (C93 * C863 + C81 * C1091 + C95 * C865 + C82 * C1093) * C79308) *
               C79307 * C79027 * C15083) *
              C15086)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[0] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C372 * C96 + C380 + C380 + C79308 * C373) * C81 + C402 * C82) *
               C79307 * C79027 * C79068 -
           (C1201 * C82 +
            (C372 * C749 + C1180 + C1180 + C79308 * C1169) * C81) *
               C79307 * C79027 * C79075 +
           ((C372 * C750 + C1181 + C1181 + C79308 * C1170) * C81 +
            C1202 * C82) *
               C79307 * C79027 * C15083) *
              C78986 +
          ((C1201 * C81 + C1203 * C82) * C79307 * C79027 * C79075 -
           (C403 * C82 + C402 * C81) * C79307 * C79027 * C79068 -
           (C1204 * C82 + C1202 * C81) * C79307 * C79027 * C15083) *
              C78995 +
          ((C403 * C81 + C404 * C82) * C79307 * C79027 * C79068 -
           (C2902 * C82 + C1203 * C81) * C79307 * C79027 * C79075 +
           (C1204 * C81 +
            (C372 * C755 + C1192 + C1192 + C79308 * C1175) * C82) *
               C79307 * C79027 * C15083) *
              C15086)) /
        (p * q * std::sqrt(p + q));
    d2eeyz[0] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C245 * C96 + C79307 * C246) * C166 +
             (C245 * C167 + C79307 * C447) * C79308) *
                C81 +
            (C454 + C470) * C82) *
               C79027 * C79068 -
           ((C1303 + C1289) * C82 + ((C245 * C859 + C79307 * C1279) * C79308 +
                                     (C245 * C749 + C79307 * C973) * C166) *
                                        C81) *
               C79027 * C79075 +
           (((C245 * C750 + C79307 * C974) * C166 +
             (C245 * C860 + C79307 * C1280) * C79308) *
                C81 +
            (C1290 + C1304) * C82) *
               C79027 * C15083) *
              C78986 +
          (((C1289 + C1303) * C81 + (C1293 + C1305) * C82) * C79027 * C79075 -
           ((C471 + C459) * C82 + (C470 + C454) * C81) * C79027 * C79068 -
           ((C1306 + C1298) * C82 + (C1304 + C1290) * C81) * C79027 * C15083) *
              C78995 +
          (((C459 + C471) * C81 + (C460 + C472) * C82) * C79027 * C79068 -
           ((C2974 + C2972) * C82 + (C1305 + C1293) * C81) * C79027 * C79075 +
           ((C1298 + C1306) * C81 + ((C245 * C755 + C79307 * C979) * C166 +
                                     (C245 * C865 + C79307 * C1285) * C79308) *
                                        C82) *
               C79027 * C15083) *
              C15086)) /
        (p * q * std::sqrt(p + q));
    d2eezx[0] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C245 +
            (C93 * C246 + C81 * C515 + C95 * C247 + C82 * C516) * C79307) *
               C79308 * C79027 * C79068 -
           ((C95 * C972 + C82 * C1380 + C93 * C973 + C81 * C1381) * C79307 +
            (C95 * C748 + C82 * C756 + C93 * C749 + C81 * C757) * C245) *
               C79308 * C79027 * C79075 +
           ((C93 * C750 + C81 * C758 + C95 * C751 + C82 * C759) * C245 +
            (C93 * C974 + C81 * C1382 + C95 * C975 + C82 * C1383) * C79307) *
               C79308 * C79027 * C15083) *
              C78986 +
          (((C93 * C748 + C81 * C756 + C95 * C752 + C82 * C760) * C245 +
            (C93 * C972 + C81 * C1380 + C95 * C976 + C82 * C1384) * C79307) *
               C79308 * C79027 * C79075 -
           ((C95 * C248 + C82 * C517 + C93 * C247 + C81 * C516) * C79307 +
            (C95 * C98 + C82 * C104 + C93 * C97 + C81 * C103) * C245) *
               C79308 * C79027 * C79068 -
           ((C95 * C977 + C82 * C1385 + C93 * C975 + C81 * C1383) * C79307 +
            (C95 * C753 + C82 * C761 + C93 * C751 + C81 * C759) * C245) *
               C79308 * C79027 * C15083) *
              C78995 +
          (((C93 * C98 + C81 * C104 + C95 * C99 + C82 * C105) * C245 +
            (C93 * C248 + C81 * C517 + C95 * C249 + C82 * C518) * C79307) *
               C79308 * C79027 * C79068 -
           ((C95 * C978 + C82 * C1386 + C93 * C976 + C81 * C1384) * C79307 +
            (C95 * C754 + C82 * C762 + C93 * C752 + C81 * C760) * C245) *
               C79308 * C79027 * C79075 +
           ((C93 * C753 + C81 * C761 + C95 * C755 + C82 * C763) * C245 +
            (C93 * C977 + C81 * C1385 + C95 * C979 + C82 * C1387) * C79307) *
               C79308 * C79027 * C15083) *
              C15086)) /
        (p * q * std::sqrt(p + q));
    d2eezy[0] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C166 * C96 + C79308 * C167) * C245 +
             (C166 * C246 + C79308 * C563) * C79307) *
                C81 +
            (C570 + C586) * C82) *
               C79027 * C79068 -
           ((C1487 + C1473) * C82 + ((C166 * C973 + C79308 * C1463) * C79307 +
                                     (C166 * C749 + C79308 * C859) * C245) *
                                        C81) *
               C79027 * C79075 +
           (((C166 * C750 + C79308 * C860) * C245 +
             (C166 * C974 + C79308 * C1464) * C79307) *
                C81 +
            (C1474 + C1488) * C82) *
               C79027 * C15083) *
              C78986 +
          (((C1473 + C1487) * C81 + (C1477 + C1489) * C82) * C79027 * C79075 -
           ((C587 + C575) * C82 + (C586 + C570) * C81) * C79027 * C79068 -
           ((C1490 + C1482) * C82 + (C1488 + C1474) * C81) * C79027 * C15083) *
              C78995 +
          (((C575 + C587) * C81 + (C576 + C588) * C82) * C79027 * C79068 -
           ((C3113 + C3111) * C82 + (C1489 + C1477) * C81) * C79027 * C79075 +
           ((C1482 + C1490) * C81 + ((C166 * C755 + C79308 * C865) * C245 +
                                     (C166 * C979 + C79308 * C1469) * C79307) *
                                        C82) *
               C79027 * C15083) *
              C15086)) /
        (p * q * std::sqrt(p + q));
    d2eezz[0] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C631 * C96 + C639 + C639 + C79307 * C632) * C79308 * C81 +
            C665 * C82) *
               C79027 * C79068 -
           (C1601 * C82 +
            (C631 * C749 + C1576 + C1576 + C79307 * C1565) * C79308 * C81) *
               C79027 * C79075 +
           ((C631 * C750 + C1577 + C1577 + C79307 * C1566) * C79308 * C81 +
            C1602 * C82) *
               C79027 * C15083) *
              C78986 +
          ((C1601 * C81 + C1603 * C82) * C79027 * C79075 -
           (C666 * C82 + C665 * C81) * C79027 * C79068 -
           (C1604 * C82 + C1602 * C81) * C79027 * C15083) *
              C78995 +
          ((C666 * C81 + C667 * C82) * C79027 * C79068 -
           (C3187 * C82 + C1603 * C81) * C79027 * C79075 +
           (C1604 * C81 +
            (C631 * C755 + C1588 + C1588 + C79307 * C1571) * C79308 * C82) *
               C79027 * C15083) *
              C15086)) /
        (p * q * std::sqrt(p + q));
    d2eexx[1] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C92 * C96 + C115 + C115 + C81 * C108 + C94 * C97 + C116 +
                      C116 + C82 * C109) *
                         C79307 * C79308 * C79230 -
                     (C94 * C1681 + C1706 + C1706 + C82 * C1697 + C92 * C1682 +
                      C1707 + C1707 + C81 * C1698) *
                         C79307 * C79308 * C79114) *
                        C79068 +
                    ((C92 * C3931 + C3944 + C3944 + C81 * C3939 + C94 * C3932 +
                      C3945 + C3945 + C82 * C3940) *
                         C79307 * C79308 * C79114 -
                     (C94 * C748 + C773 + C773 + C82 * C764 + C92 * C749 +
                      C774 + C774 + C81 * C765) *
                         C79307 * C79308 * C79230) *
                        C79075 +
                    ((C92 * C750 + C775 + C775 + C81 * C766 + C94 * C751 +
                      C776 + C776 + C82 * C767) *
                         C79307 * C79308 * C79230 -
                     (C94 * C6043 + C6062 + C6062 + C82 * C6055 + C92 * C6044 +
                      C6063 + C6063 + C81 * C6056) *
                         C79307 * C79308 * C79114) *
                        C15083) *
                       C13595 +
                   (((C92 * C1681 + C1710 + C1710 + C81 * C1697 + C94 * C1685 +
                      C1711 + C1711 + C82 * C1701) *
                         C79307 * C79308 * C79114 -
                     (C94 * C98 + C117 + C117 + C82 * C110 + C92 * C97 + C118 +
                      C118 + C81 * C109) *
                         C79307 * C79308 * C79230) *
                        C79068 +
                    ((C92 * C748 + C777 + C777 + C81 * C764 + C94 * C752 +
                      C778 + C778 + C82 * C768) *
                         C79307 * C79308 * C79230 -
                     (C94 * C3933 + C3946 + C3946 + C82 * C3941 + C92 * C3932 +
                      C3947 + C3947 + C81 * C3940) *
                         C79307 * C79308 * C79114) *
                        C79075 +
                    ((C92 * C6043 + C7481 + C7481 + C81 * C6055 + C94 * C7477 +
                      C7482 + C7482 + C82 * C7479) *
                         C79307 * C79308 * C79114 -
                     (C94 * C753 + C779 + C779 + C82 * C769 + C92 * C751 +
                      C780 + C780 + C81 * C767) *
                         C79307 * C79308 * C79230) *
                        C15083) *
                       C78992)) /
                 (p * q * std::sqrt(p + q));
    d2eexy[1] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C166 * C96 + C79308 * C167) * C93 +
             (C166 * C102 + C79308 * C173) * C81 + C196 * C95 + C197 * C82) *
                C79307 * C79230 -
            (C1824 * C82 + C1825 * C95 + (C166 * C1690 + C79308 * C1800) * C81 +
             (C166 * C1682 + C79308 * C1792) * C93) *
                C79307 * C79114) *
               C79068 +
           (((C166 * C3931 + C79308 * C4047) * C93 +
             (C166 * C3935 + C79308 * C4051) * C81 + C4064 * C95 +
             C4065 * C82) *
                C79307 * C79114 -
            (C891 * C82 + C892 * C95 + (C166 * C757 + C79308 * C867) * C81 +
             (C166 * C749 + C79308 * C859) * C93) *
                C79307 * C79230) *
               C79075 +
           (((C166 * C750 + C79308 * C860) * C93 +
             (C166 * C758 + C79308 * C868) * C81 + C893 * C95 + C894 * C82) *
                C79307 * C79230 -
            (C7587 * C82 + C7588 * C95 + (C166 * C6050 + C79308 * C6148) * C81 +
             (C166 * C6044 + C79308 * C6142) * C93) *
                C79307 * C79114) *
               C15083) *
              C13595 +
          (((C1825 * C93 + C1824 * C81 + C1828 * C95 + C1829 * C82) * C79307 *
                C79114 -
            (C198 * C82 + C199 * C95 + C197 * C81 + C196 * C93) * C79307 *
                C79230) *
               C79068 +
           ((C892 * C93 + C891 * C81 + C895 * C95 + C896 * C82) * C79307 *
                C79230 -
            (C4066 * C82 + C4067 * C95 + C4065 * C81 + C4064 * C93) * C79307 *
                C79114) *
               C79075 +
           ((C7588 * C93 + C7587 * C81 + (C166 * C7477 + C79308 * C7580) * C95 +
             (C166 * C7478 + C79308 * C7581) * C82) *
                C79307 * C79114 -
            (C897 * C82 + C898 * C95 + C894 * C81 + C893 * C93) * C79307 *
                C79230) *
               C15083) *
              C78992)) /
        (p * q * std::sqrt(p + q));
    d2eexz[1] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C245 * C96 + C79307 * C246) * C93 +
             (C245 * C102 + C79307 * C252) * C81 + C275 * C95 + C276 * C82) *
                C79308 * C79230 -
            (C1938 * C82 + C1939 * C95 + (C245 * C1690 + C79307 * C1914) * C81 +
             (C245 * C1682 + C79307 * C1906) * C93) *
                C79308 * C79114) *
               C79068 +
           (((C245 * C3931 + C79307 * C4165) * C93 +
             (C245 * C3935 + C79307 * C4169) * C81 + C4182 * C95 +
             C4183 * C82) *
                C79308 * C79114 -
            (C1005 * C82 + C1006 * C95 + (C245 * C757 + C79307 * C981) * C81 +
             (C245 * C749 + C79307 * C973) * C93) *
                C79308 * C79230) *
               C79075 +
           (((C245 * C750 + C79307 * C974) * C93 +
             (C245 * C758 + C79307 * C982) * C81 + C1007 * C95 + C1008 * C82) *
                C79308 * C79230 -
            (C7693 * C82 + C7694 * C95 + (C245 * C6050 + C79307 * C6234) * C81 +
             (C245 * C6044 + C79307 * C6228) * C93) *
                C79308 * C79114) *
               C15083) *
              C13595 +
          (((C1939 * C93 + C1938 * C81 + C1942 * C95 + C1943 * C82) * C79308 *
                C79114 -
            (C277 * C82 + C278 * C95 + C276 * C81 + C275 * C93) * C79308 *
                C79230) *
               C79068 +
           ((C1006 * C93 + C1005 * C81 + C1009 * C95 + C1010 * C82) * C79308 *
                C79230 -
            (C4184 * C82 + C4185 * C95 + C4183 * C81 + C4182 * C93) * C79308 *
                C79114) *
               C79075 +
           ((C7694 * C93 + C7693 * C81 + (C245 * C7477 + C79307 * C7686) * C95 +
             (C245 * C7478 + C79307 * C7687) * C82) *
                C79308 * C79114 -
            (C1011 * C82 + C1012 * C95 + C1008 * C81 + C1007 * C93) * C79308 *
                C79230) *
               C15083) *
              C78992)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[1] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C166 +
             (C93 * C167 + C81 * C324 + C95 * C168 + C82 * C325) * C79308) *
                C79307 * C79230 -
            ((C95 * C1791 + C82 * C2019 + C93 * C1792 + C81 * C2020) * C79308 +
             (C95 * C1681 + C82 * C1689 + C93 * C1682 + C81 * C1690) * C166) *
                C79307 * C79114) *
               C79068 +
           (((C93 * C3931 + C81 * C3935 + C95 * C3932 + C82 * C3936) * C166 +
             (C93 * C4047 + C81 * C4283 + C95 * C4048 + C82 * C4284) * C79308) *
                C79307 * C79114 -
            ((C95 * C858 + C82 * C1086 + C93 * C859 + C81 * C1087) * C79308 +
             (C95 * C748 + C82 * C756 + C93 * C749 + C81 * C757) * C166) *
                C79307 * C79230) *
               C79075 +
           (((C93 * C750 + C81 * C758 + C95 * C751 + C82 * C759) * C166 +
             (C93 * C860 + C81 * C1088 + C95 * C861 + C82 * C1089) * C79308) *
                C79307 * C79230 -
            ((C95 * C6141 + C82 * C6313 + C93 * C6142 + C81 * C6314) * C79308 +
             (C95 * C6043 + C82 * C6049 + C93 * C6044 + C81 * C6050) * C166) *
                C79307 * C79114) *
               C15083) *
              C13595 +
          ((((C93 * C1681 + C81 * C1689 + C95 * C1685 + C82 * C1693) * C166 +
             (C93 * C1791 + C81 * C2019 + C95 * C1795 + C82 * C2023) * C79308) *
                C79307 * C79114 -
            ((C95 * C169 + C82 * C326 + C93 * C168 + C81 * C325) * C79308 +
             (C95 * C98 + C82 * C104 + C93 * C97 + C81 * C103) * C166) *
                C79307 * C79230) *
               C79068 +
           (((C93 * C748 + C81 * C756 + C95 * C752 + C82 * C760) * C166 +
             (C93 * C858 + C81 * C1086 + C95 * C862 + C82 * C1090) * C79308) *
                C79307 * C79230 -
            ((C95 * C4049 + C82 * C4285 + C93 * C4048 + C81 * C4284) * C79308 +
             (C95 * C3933 + C82 * C3937 + C93 * C3932 + C81 * C3936) * C166) *
                C79307 * C79114) *
               C79075 +
           (((C93 * C6043 + C81 * C6049 + C95 * C7477 + C82 * C7478) * C166 +
             (C93 * C6141 + C81 * C6313 + C95 * C7580 + C82 * C7792) * C79308) *
                C79307 * C79114 -
            ((C95 * C863 + C82 * C1091 + C93 * C861 + C81 * C1089) * C79308 +
             (C95 * C753 + C82 * C761 + C93 * C751 + C81 * C759) * C166) *
                C79307 * C79230) *
               C15083) *
              C78992)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[1] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C372 * C96 + C380 + C380 + C79308 * C373) * C81 + C402 * C82) *
                C79307 * C79230 -
            (C2134 * C82 +
             (C372 * C1682 + C2113 + C2113 + C79308 * C2102) * C81) *
                C79307 * C79114) *
               C79068 +
           (((C372 * C3931 + C4390 + C4390 + C79308 * C4385) * C81 +
             C4402 * C82) *
                C79307 * C79114 -
            (C1201 * C82 +
             (C372 * C749 + C1180 + C1180 + C79308 * C1169) * C81) *
                C79307 * C79230) *
               C79075 +
           (((C372 * C750 + C1181 + C1181 + C79308 * C1170) * C81 +
             C1202 * C82) *
                C79307 * C79230 -
            (C7898 * C82 +
             (C372 * C6044 + C6401 + C6401 + C79308 * C6394) * C81) *
                C79307 * C79114) *
               C15083) *
              C13595 +
          (((C2134 * C81 + C2136 * C82) * C79307 * C79114 -
            (C403 * C82 + C402 * C81) * C79307 * C79230) *
               C79068 +
           ((C1201 * C81 + C1203 * C82) * C79307 * C79230 -
            (C4403 * C82 + C4402 * C81) * C79307 * C79114) *
               C79075 +
           ((C7898 * C81 +
             (C372 * C7477 + C7895 + C7895 + C79308 * C7891) * C82) *
                C79307 * C79114 -
            (C1204 * C82 + C1202 * C81) * C79307 * C79230) *
               C15083) *
              C78992)) /
        (p * q * std::sqrt(p + q));
    d2eeyz[1] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C245 * C96 + C79307 * C246) * C166 +
              (C245 * C167 + C79307 * C447) * C79308) *
                 C81 +
             (C454 + C470) * C82) *
                C79230 -
            ((C2236 + C2222) * C82 + ((C245 * C1792 + C79307 * C2212) * C79308 +
                                      (C245 * C1682 + C79307 * C1906) * C166) *
                                         C81) *
                C79114) *
               C79068 +
           ((((C245 * C3931 + C79307 * C4165) * C166 +
              (C245 * C4047 + C79307 * C4501) * C79308) *
                 C81 +
             (C4506 + C4514) * C82) *
                C79114 -
            ((C1303 + C1289) * C82 + ((C245 * C859 + C79307 * C1279) * C79308 +
                                      (C245 * C749 + C79307 * C973) * C166) *
                                         C81) *
                C79230) *
               C79075 +
           ((((C245 * C750 + C79307 * C974) * C166 +
              (C245 * C860 + C79307 * C1280) * C79308) *
                 C81 +
             (C1290 + C1304) * C82) *
                C79230 -
            ((C8002 + C8000) * C82 + ((C245 * C6142 + C79307 * C6480) * C79308 +
                                      (C245 * C6044 + C79307 * C6228) * C166) *
                                         C81) *
                C79114) *
               C15083) *
              C13595 +
          ((((C2222 + C2236) * C81 + (C2226 + C2238) * C82) * C79114 -
            ((C471 + C459) * C82 + (C470 + C454) * C81) * C79230) *
               C79068 +
           (((C1289 + C1303) * C81 + (C1293 + C1305) * C82) * C79230 -
            ((C4515 + C4511) * C82 + (C4514 + C4506) * C81) * C79114) *
               C79075 +
           (((C8000 + C8002) * C81 +
             ((C245 * C7477 + C79307 * C7686) * C166 +
              (C245 * C7580 + C79307 * C7996) * C79308) *
                 C82) *
                C79114 -
            ((C1306 + C1298) * C82 + (C1304 + C1290) * C81) * C79230) *
               C15083) *
              C78992)) /
        (p * q * std::sqrt(p + q));
    d2eezx[1] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C245 +
             (C93 * C246 + C81 * C515 + C95 * C247 + C82 * C516) * C79307) *
                C79308 * C79230 -
            ((C95 * C1905 + C82 * C2313 + C93 * C1906 + C81 * C2314) * C79307 +
             (C95 * C1681 + C82 * C1689 + C93 * C1682 + C81 * C1690) * C245) *
                C79308 * C79114) *
               C79068 +
           (((C93 * C3931 + C81 * C3935 + C95 * C3932 + C82 * C3936) * C245 +
             (C93 * C4165 + C81 * C4613 + C95 * C4166 + C82 * C4614) * C79307) *
                C79308 * C79114 -
            ((C95 * C972 + C82 * C1380 + C93 * C973 + C81 * C1381) * C79307 +
             (C95 * C748 + C82 * C756 + C93 * C749 + C81 * C757) * C245) *
                C79308 * C79230) *
               C79075 +
           (((C93 * C750 + C81 * C758 + C95 * C751 + C82 * C759) * C245 +
             (C93 * C974 + C81 * C1382 + C95 * C975 + C82 * C1383) * C79307) *
                C79308 * C79230 -
            ((C95 * C6227 + C82 * C6559 + C93 * C6228 + C81 * C6560) * C79307 +
             (C95 * C6043 + C82 * C6049 + C93 * C6044 + C81 * C6050) * C245) *
                C79308 * C79114) *
               C15083) *
              C13595 +
          ((((C93 * C1681 + C81 * C1689 + C95 * C1685 + C82 * C1693) * C245 +
             (C93 * C1905 + C81 * C2313 + C95 * C1909 + C82 * C2317) * C79307) *
                C79308 * C79114 -
            ((C95 * C248 + C82 * C517 + C93 * C247 + C81 * C516) * C79307 +
             (C95 * C98 + C82 * C104 + C93 * C97 + C81 * C103) * C245) *
                C79308 * C79230) *
               C79068 +
           (((C93 * C748 + C81 * C756 + C95 * C752 + C82 * C760) * C245 +
             (C93 * C972 + C81 * C1380 + C95 * C976 + C82 * C1384) * C79307) *
                C79308 * C79230 -
            ((C95 * C4167 + C82 * C4615 + C93 * C4166 + C81 * C4614) * C79307 +
             (C95 * C3933 + C82 * C3937 + C93 * C3932 + C81 * C3936) * C245) *
                C79308 * C79114) *
               C79075 +
           (((C93 * C6043 + C81 * C6049 + C95 * C7477 + C82 * C7478) * C245 +
             (C93 * C6227 + C81 * C6559 + C95 * C7686 + C82 * C8100) * C79307) *
                C79308 * C79114 -
            ((C95 * C977 + C82 * C1385 + C93 * C975 + C81 * C1383) * C79307 +
             (C95 * C753 + C82 * C761 + C93 * C751 + C81 * C759) * C245) *
                C79308 * C79230) *
               C15083) *
              C78992)) /
        (p * q * std::sqrt(p + q));
    d2eezy[1] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C166 * C96 + C79308 * C167) * C245 +
              (C166 * C246 + C79308 * C563) * C79307) *
                 C81 +
             (C570 + C586) * C82) *
                C79230 -
            ((C2420 + C2406) * C82 + ((C166 * C1906 + C79308 * C2396) * C79307 +
                                      (C166 * C1682 + C79308 * C1792) * C245) *
                                         C81) *
                C79114) *
               C79068 +
           ((((C166 * C3931 + C79308 * C4047) * C245 +
              (C166 * C4165 + C79308 * C4715) * C79307) *
                 C81 +
             (C4720 + C4728) * C82) *
                C79114 -
            ((C1487 + C1473) * C82 + ((C166 * C973 + C79308 * C1463) * C79307 +
                                      (C166 * C749 + C79308 * C859) * C245) *
                                         C81) *
                C79230) *
               C79075 +
           ((((C166 * C750 + C79308 * C860) * C245 +
              (C166 * C974 + C79308 * C1464) * C79307) *
                 C81 +
             (C1474 + C1488) * C82) *
                C79230 -
            ((C8205 + C8203) * C82 + ((C166 * C6228 + C79308 * C6640) * C79307 +
                                      (C166 * C6044 + C79308 * C6142) * C245) *
                                         C81) *
                C79114) *
               C15083) *
              C13595 +
          ((((C2406 + C2420) * C81 + (C2410 + C2422) * C82) * C79114 -
            ((C587 + C575) * C82 + (C586 + C570) * C81) * C79230) *
               C79068 +
           (((C1473 + C1487) * C81 + (C1477 + C1489) * C82) * C79230 -
            ((C4729 + C4725) * C82 + (C4728 + C4720) * C81) * C79114) *
               C79075 +
           (((C8203 + C8205) * C81 +
             ((C166 * C7477 + C79308 * C7580) * C245 +
              (C166 * C7686 + C79308 * C8199) * C79307) *
                 C82) *
                C79114 -
            ((C1490 + C1482) * C82 + (C1488 + C1474) * C81) * C79230) *
               C15083) *
              C78992)) /
        (p * q * std::sqrt(p + q));
    d2eezz[1] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C631 * C96 + C639 + C639 + C79307 * C632) * C79308 * C81 +
             C665 * C82) *
                C79230 -
            (C2534 * C82 +
             (C631 * C1682 + C2509 + C2509 + C79307 * C2498) * C79308 * C81) *
                C79114) *
               C79068 +
           (((C631 * C3931 + C4832 + C4832 + C79307 * C4827) * C79308 * C81 +
             C4846 * C82) *
                C79114 -
            (C1601 * C82 +
             (C631 * C749 + C1576 + C1576 + C79307 * C1565) * C79308 * C81) *
                C79230) *
               C79075 +
           (((C631 * C750 + C1577 + C1577 + C79307 * C1566) * C79308 * C81 +
             C1602 * C82) *
                C79230 -
            (C8311 * C82 +
             (C631 * C6044 + C6727 + C6727 + C79307 * C6720) * C79308 * C81) *
                C79114) *
               C15083) *
              C13595 +
          (((C2534 * C81 + C2536 * C82) * C79114 -
            (C666 * C82 + C665 * C81) * C79230) *
               C79068 +
           ((C1601 * C81 + C1603 * C82) * C79230 -
            (C4847 * C82 + C4846 * C81) * C79114) *
               C79075 +
           ((C8311 * C81 +
             (C631 * C7477 + C8307 + C8307 + C79307 * C8303) * C79308 * C82) *
                C79114 -
            (C1604 * C82 + C1602 * C81) * C79230) *
               C15083) *
              C78992)) /
        (p * q * std::sqrt(p + q));
    d2eexx[2] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((C92 * C96 + C115 + C115 + C81 * C108 + C94 * C97 + C116 +
                     C116 + C82 * C109) *
                        C79307 * C79308 * C79027 * C79310 -
                    (C94 * C748 + C773 + C773 + C82 * C764 + C92 * C749 + C774 +
                     C774 + C81 * C765) *
                        C79307 * C79308 * C79027 * C79303 +
                    (C92 * C750 + C775 + C775 + C81 * C766 + C94 * C751 + C776 +
                     C776 + C82 * C767) *
                        C79307 * C79308 * C79027 * C79290 -
                    (C94 * C5567 + C5580 + C5580 + C82 * C5575 + C92 * C5568 +
                     C5581 + C5581 + C81 * C5576) *
                        C79307 * C79308 * C79027 * C79269) *
                       C13595 +
                   ((C92 * C748 + C777 + C777 + C81 * C764 + C94 * C752 + C778 +
                     C778 + C82 * C768) *
                        C79307 * C79308 * C79027 * C79303 -
                    (C94 * C98 + C117 + C117 + C82 * C110 + C92 * C97 + C118 +
                     C118 + C81 * C109) *
                        C79307 * C79308 * C79027 * C79310 -
                    (C94 * C753 + C779 + C779 + C82 * C769 + C92 * C751 + C780 +
                     C780 + C81 * C767) *
                        C79307 * C79308 * C79027 * C79290 +
                    (C92 * C5567 + C6805 + C6805 + C81 * C5575 + C94 * C6801 +
                     C6806 + C6806 + C82 * C6803) *
                        C79307 * C79308 * C79027 * C79269) *
                       C78992)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((C92 * C96 + C115 + C115 + C81 * C108 + C94 * C97 + C116 +
                     C116 + C82 * C109) *
                        C79307 * C79308 * C79027 * C12991 -
                    (C94 * C748 + C773 + C773 + C82 * C764 + C92 * C749 + C774 +
                     C774 + C81 * C765) *
                        C79307 * C79308 * C79027 * C79072) *
                       C79309 +
                   ((C92 * C748 + C777 + C777 + C81 * C764 + C94 * C752 + C778 +
                     C778 + C82 * C768) *
                        C79307 * C79308 * C79027 * C79072 -
                    (C94 * C98 + C117 + C117 + C82 * C110 + C92 * C97 + C118 +
                     C118 + C81 * C109) *
                        C79307 * C79308 * C79027 * C12991) *
                       C79299 +
                   ((C92 * C98 + C119 + C119 + C81 * C110 + C94 * C99 + C120 +
                     C120 + C82 * C111) *
                        C79307 * C79308 * C79027 * C12991 -
                    (C94 * C754 + C781 + C781 + C82 * C770 + C92 * C752 + C782 +
                     C782 + C81 * C768) *
                        C79307 * C79308 * C79027 * C79072) *
                       C79283 +
                   ((C92 * C754 + C2613 + C2613 + C81 * C770 + C94 * C2609 +
                     C2614 + C2614 + C82 * C2611) *
                        C79307 * C79308 * C79027 * C79072 -
                    (C94 * C100 + C121 + C121 + C82 * C112 + C92 * C99 + C122 +
                     C122 + C81 * C111) *
                        C79307 * C79308 * C79027 * C12991) *
                       C79263)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((C92 * C96 + C115 + C115 + C81 * C108 + C94 * C97 + C116 +
                      C116 + C82 * C109) *
                         C79307 * C79308 * C79301 -
                     (C94 * C1681 + C1706 + C1706 + C82 * C1697 + C92 * C1682 +
                      C1707 + C1707 + C81 * C1698) *
                         C79307 * C79308 * C79287 +
                     (C92 * C1683 + C1708 + C1708 + C81 * C1699 + C94 * C1684 +
                      C1709 + C1709 + C82 * C1700) *
                         C79307 * C79308 * C79262) *
                        C12991 +
                    ((C92 * C3931 + C3944 + C3944 + C81 * C3939 + C94 * C3932 +
                      C3945 + C3945 + C82 * C3940) *
                         C79307 * C79308 * C79287 -
                     (C94 * C748 + C773 + C773 + C82 * C764 + C92 * C749 +
                      C774 + C774 + C81 * C765) *
                         C79307 * C79308 * C79301 -
                     (C94 * C6041 + C6060 + C6060 + C82 * C6053 + C92 * C6042 +
                      C6061 + C6061 + C81 * C6054) *
                         C79307 * C79308 * C79262) *
                        C79072) *
                       C13595 +
                   (((C92 * C1681 + C1710 + C1710 + C81 * C1697 + C94 * C1685 +
                      C1711 + C1711 + C82 * C1701) *
                         C79307 * C79308 * C79287 -
                     (C94 * C98 + C117 + C117 + C82 * C110 + C92 * C97 + C118 +
                      C118 + C81 * C109) *
                         C79307 * C79308 * C79301 -
                     (C94 * C1686 + C1712 + C1712 + C82 * C1702 + C92 * C1684 +
                      C1713 + C1713 + C81 * C1700) *
                         C79307 * C79308 * C79262) *
                        C12991 +
                    ((C92 * C748 + C777 + C777 + C81 * C764 + C94 * C752 +
                      C778 + C778 + C82 * C768) *
                         C79307 * C79308 * C79301 -
                     (C94 * C3933 + C3946 + C3946 + C82 * C3941 + C92 * C3932 +
                      C3947 + C3947 + C81 * C3940) *
                         C79307 * C79308 * C79287 +
                     (C92 * C6041 + C10821 + C10821 + C81 * C6053 +
                      C94 * C10817 + C10822 + C10822 + C82 * C10819) *
                         C79307 * C79308 * C79262) *
                        C79072) *
                       C78992)) /
                     (p * q * std::sqrt(p + q));
    d2eexy[2] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C166 * C96 + C79308 * C167) * C93 +
            (C166 * C102 + C79308 * C173) * C81 + C196 * C95 + C197 * C82) *
               C79307 * C79027 * C79310 -
           (C891 * C82 + C892 * C95 + (C166 * C757 + C79308 * C867) * C81 +
            (C166 * C749 + C79308 * C859) * C93) *
               C79307 * C79027 * C79303 +
           ((C166 * C750 + C79308 * C860) * C93 +
            (C166 * C758 + C79308 * C868) * C81 + C893 * C95 + C894 * C82) *
               C79307 * C79027 * C79290 -
           (C6879 * C82 + C6880 * C95 + (C166 * C5572 + C79308 * C5630) * C81 +
            (C166 * C5568 + C79308 * C5626) * C93) *
               C79307 * C79027 * C79269) *
              C13595 +
          ((C892 * C93 + C891 * C81 + C895 * C95 + C896 * C82) * C79307 *
               C79027 * C79303 -
           (C198 * C82 + C199 * C95 + C197 * C81 + C196 * C93) * C79307 *
               C79027 * C79310 -
           (C897 * C82 + C898 * C95 + C894 * C81 + C893 * C93) * C79307 *
               C79027 * C79290 +
           (C6880 * C93 + C6879 * C81 + (C166 * C6801 + C79308 * C6872) * C95 +
            (C166 * C6802 + C79308 * C6873) * C82) *
               C79307 * C79027 * C79269) *
              C78992)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C166 * C96 + C79308 * C167) * C93 +
            (C166 * C102 + C79308 * C173) * C81 + C196 * C95 + C197 * C82) *
               C79307 * C79027 * C12991 -
           (C891 * C82 + C892 * C95 + (C166 * C757 + C79308 * C867) * C81 +
            (C166 * C749 + C79308 * C859) * C93) *
               C79307 * C79027 * C79072) *
              C79309 +
          ((C892 * C93 + C891 * C81 + C895 * C95 + C896 * C82) * C79307 *
               C79027 * C79072 -
           (C198 * C82 + C199 * C95 + C197 * C81 + C196 * C93) * C79307 *
               C79027 * C12991) *
              C79299 +
          ((C199 * C93 + C198 * C81 + C200 * C95 + C201 * C82) * C79307 *
               C79027 * C12991 -
           (C2687 * C82 + C2688 * C95 + C896 * C81 + C895 * C93) * C79307 *
               C79027 * C79072) *
              C79283 +
          ((C2688 * C93 + C2687 * C81 + (C166 * C2609 + C79308 * C2680) * C95 +
            (C166 * C2610 + C79308 * C2681) * C82) *
               C79307 * C79027 * C79072 -
           (C202 * C82 + C203 * C95 + C201 * C81 + C200 * C93) * C79307 *
               C79027 * C12991) *
              C79263)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C166 * C96 + C79308 * C167) * C93 +
             (C166 * C102 + C79308 * C173) * C81 + C196 * C95 + C197 * C82) *
                C79307 * C79301 -
            (C1824 * C82 + C1825 * C95 + (C166 * C1690 + C79308 * C1800) * C81 +
             (C166 * C1682 + C79308 * C1792) * C93) *
                C79307 * C79287 +
            ((C166 * C1683 + C79308 * C1793) * C93 +
             (C166 * C1691 + C79308 * C1801) * C81 + C1826 * C95 +
             C1827 * C82) *
                C79307 * C79262) *
               C12991 +
           (((C166 * C3931 + C79308 * C4047) * C93 +
             (C166 * C3935 + C79308 * C4051) * C81 + C4064 * C95 +
             C4065 * C82) *
                C79307 * C79287 -
            (C891 * C82 + C892 * C95 + (C166 * C757 + C79308 * C867) * C81 +
             (C166 * C749 + C79308 * C859) * C93) *
                C79307 * C79301 -
            (C10927 * C82 + C10928 * C95 +
             (C166 * C6048 + C79308 * C6146) * C81 +
             (C166 * C6042 + C79308 * C6140) * C93) *
                C79307 * C79262) *
               C79072) *
              C13595 +
          (((C1825 * C93 + C1824 * C81 + C1828 * C95 + C1829 * C82) * C79307 *
                C79287 -
            (C198 * C82 + C199 * C95 + C197 * C81 + C196 * C93) * C79307 *
                C79301 -
            (C1830 * C82 + C1831 * C95 + C1827 * C81 + C1826 * C93) * C79307 *
                C79262) *
               C12991 +
           ((C892 * C93 + C891 * C81 + C895 * C95 + C896 * C82) * C79307 *
                C79301 -
            (C4066 * C82 + C4067 * C95 + C4065 * C81 + C4064 * C93) * C79307 *
                C79287 +
            (C10928 * C93 + C10927 * C81 +
             (C166 * C10817 + C79308 * C10920) * C95 +
             (C166 * C10818 + C79308 * C10921) * C82) *
                C79307 * C79262) *
               C79072) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eexz[2] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C245 * C96 + C79307 * C246) * C93 +
            (C245 * C102 + C79307 * C252) * C81 + C275 * C95 + C276 * C82) *
               C79308 * C79027 * C79310 -
           (C1005 * C82 + C1006 * C95 + (C245 * C757 + C79307 * C981) * C81 +
            (C245 * C749 + C79307 * C973) * C93) *
               C79308 * C79027 * C79303 +
           ((C245 * C750 + C79307 * C974) * C93 +
            (C245 * C758 + C79307 * C982) * C81 + C1007 * C95 + C1008 * C82) *
               C79308 * C79027 * C79290 -
           (C6953 * C82 + C6954 * C95 + (C245 * C5572 + C79307 * C5680) * C81 +
            (C245 * C5568 + C79307 * C5676) * C93) *
               C79308 * C79027 * C79269) *
              C13595 +
          ((C1006 * C93 + C1005 * C81 + C1009 * C95 + C1010 * C82) * C79308 *
               C79027 * C79303 -
           (C277 * C82 + C278 * C95 + C276 * C81 + C275 * C93) * C79308 *
               C79027 * C79310 -
           (C1011 * C82 + C1012 * C95 + C1008 * C81 + C1007 * C93) * C79308 *
               C79027 * C79290 +
           (C6954 * C93 + C6953 * C81 + (C245 * C6801 + C79307 * C6946) * C95 +
            (C245 * C6802 + C79307 * C6947) * C82) *
               C79308 * C79027 * C79269) *
              C78992)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C245 * C96 + C79307 * C246) * C93 +
            (C245 * C102 + C79307 * C252) * C81 + C275 * C95 + C276 * C82) *
               C79308 * C79027 * C12991 -
           (C1005 * C82 + C1006 * C95 + (C245 * C757 + C79307 * C981) * C81 +
            (C245 * C749 + C79307 * C973) * C93) *
               C79308 * C79027 * C79072) *
              C79309 +
          ((C1006 * C93 + C1005 * C81 + C1009 * C95 + C1010 * C82) * C79308 *
               C79027 * C79072 -
           (C277 * C82 + C278 * C95 + C276 * C81 + C275 * C93) * C79308 *
               C79027 * C12991) *
              C79299 +
          ((C278 * C93 + C277 * C81 + C279 * C95 + C280 * C82) * C79308 *
               C79027 * C12991 -
           (C2761 * C82 + C2762 * C95 + C1010 * C81 + C1009 * C93) * C79308 *
               C79027 * C79072) *
              C79283 +
          ((C2762 * C93 + C2761 * C81 + (C245 * C2609 + C79307 * C2754) * C95 +
            (C245 * C2610 + C79307 * C2755) * C82) *
               C79308 * C79027 * C79072 -
           (C281 * C82 + C282 * C95 + C280 * C81 + C279 * C93) * C79308 *
               C79027 * C12991) *
              C79263)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C245 * C96 + C79307 * C246) * C93 +
             (C245 * C102 + C79307 * C252) * C81 + C275 * C95 + C276 * C82) *
                C79308 * C79301 -
            (C1938 * C82 + C1939 * C95 + (C245 * C1690 + C79307 * C1914) * C81 +
             (C245 * C1682 + C79307 * C1906) * C93) *
                C79308 * C79287 +
            ((C245 * C1683 + C79307 * C1907) * C93 +
             (C245 * C1691 + C79307 * C1915) * C81 + C1940 * C95 +
             C1941 * C82) *
                C79308 * C79262) *
               C12991 +
           (((C245 * C3931 + C79307 * C4165) * C93 +
             (C245 * C3935 + C79307 * C4169) * C81 + C4182 * C95 +
             C4183 * C82) *
                C79308 * C79287 -
            (C1005 * C82 + C1006 * C95 + (C245 * C757 + C79307 * C981) * C81 +
             (C245 * C749 + C79307 * C973) * C93) *
                C79308 * C79301 -
            (C11033 * C82 + C11034 * C95 +
             (C245 * C6048 + C79307 * C6232) * C81 +
             (C245 * C6042 + C79307 * C6226) * C93) *
                C79308 * C79262) *
               C79072) *
              C13595 +
          (((C1939 * C93 + C1938 * C81 + C1942 * C95 + C1943 * C82) * C79308 *
                C79287 -
            (C277 * C82 + C278 * C95 + C276 * C81 + C275 * C93) * C79308 *
                C79301 -
            (C1944 * C82 + C1945 * C95 + C1941 * C81 + C1940 * C93) * C79308 *
                C79262) *
               C12991 +
           ((C1006 * C93 + C1005 * C81 + C1009 * C95 + C1010 * C82) * C79308 *
                C79301 -
            (C4184 * C82 + C4185 * C95 + C4183 * C81 + C4182 * C93) * C79308 *
                C79287 +
            (C11034 * C93 + C11033 * C81 +
             (C245 * C10817 + C79307 * C11026) * C95 +
             (C245 * C10818 + C79307 * C11027) * C82) *
                C79308 * C79262) *
               C79072) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eeyx[2] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C166 +
            (C93 * C167 + C81 * C324 + C95 * C168 + C82 * C325) * C79308) *
               C79307 * C79027 * C79310 -
           ((C95 * C858 + C82 * C1086 + C93 * C859 + C81 * C1087) * C79308 +
            (C95 * C748 + C82 * C756 + C93 * C749 + C81 * C757) * C166) *
               C79307 * C79027 * C79303 +
           ((C93 * C750 + C81 * C758 + C95 * C751 + C82 * C759) * C166 +
            (C93 * C860 + C81 * C1088 + C95 * C861 + C82 * C1089) * C79308) *
               C79307 * C79027 * C79290 -
           ((C95 * C5625 + C82 * C5725 + C93 * C5626 + C81 * C5726) * C79308 +
            (C95 * C5567 + C82 * C5571 + C93 * C5568 + C81 * C5572) * C166) *
               C79307 * C79027 * C79269) *
              C13595 +
          (((C93 * C748 + C81 * C756 + C95 * C752 + C82 * C760) * C166 +
            (C93 * C858 + C81 * C1086 + C95 * C862 + C82 * C1090) * C79308) *
               C79307 * C79027 * C79303 -
           ((C95 * C169 + C82 * C326 + C93 * C168 + C81 * C325) * C79308 +
            (C95 * C98 + C82 * C104 + C93 * C97 + C81 * C103) * C166) *
               C79307 * C79027 * C79310 -
           ((C95 * C863 + C82 * C1091 + C93 * C861 + C81 * C1089) * C79308 +
            (C95 * C753 + C82 * C761 + C93 * C751 + C81 * C759) * C166) *
               C79307 * C79027 * C79290 +
           ((C93 * C5567 + C81 * C5571 + C95 * C6801 + C82 * C6802) * C166 +
            (C93 * C5625 + C81 * C5725 + C95 * C6872 + C82 * C7020) * C79308) *
               C79307 * C79027 * C79269) *
              C78992)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C166 +
            (C93 * C167 + C81 * C324 + C95 * C168 + C82 * C325) * C79308) *
               C79307 * C79027 * C12991 -
           ((C95 * C858 + C82 * C1086 + C93 * C859 + C81 * C1087) * C79308 +
            (C95 * C748 + C82 * C756 + C93 * C749 + C81 * C757) * C166) *
               C79307 * C79027 * C79072) *
              C79309 +
          (((C93 * C748 + C81 * C756 + C95 * C752 + C82 * C760) * C166 +
            (C93 * C858 + C81 * C1086 + C95 * C862 + C82 * C1090) * C79308) *
               C79307 * C79027 * C79072 -
           ((C95 * C169 + C82 * C326 + C93 * C168 + C81 * C325) * C79308 +
            (C95 * C98 + C82 * C104 + C93 * C97 + C81 * C103) * C166) *
               C79307 * C79027 * C12991) *
              C79299 +
          (((C93 * C98 + C81 * C104 + C95 * C99 + C82 * C105) * C166 +
            (C93 * C169 + C81 * C326 + C95 * C170 + C82 * C327) * C79308) *
               C79307 * C79027 * C12991 -
           ((C95 * C864 + C82 * C1092 + C93 * C862 + C81 * C1090) * C79308 +
            (C95 * C754 + C82 * C762 + C93 * C752 + C81 * C760) * C166) *
               C79307 * C79027 * C79072) *
              C79283 +
          (((C93 * C754 + C81 * C762 + C95 * C2609 + C82 * C2610) * C166 +
            (C93 * C864 + C81 * C1092 + C95 * C2680 + C82 * C2828) * C79308) *
               C79307 * C79027 * C79072 -
           ((C95 * C171 + C82 * C328 + C93 * C170 + C81 * C327) * C79308 +
            (C95 * C100 + C82 * C106 + C93 * C99 + C81 * C105) * C166) *
               C79307 * C79027 * C12991) *
              C79263)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C166 +
             (C93 * C167 + C81 * C324 + C95 * C168 + C82 * C325) * C79308) *
                C79307 * C79301 -
            ((C95 * C1791 + C82 * C2019 + C93 * C1792 + C81 * C2020) * C79308 +
             (C95 * C1681 + C82 * C1689 + C93 * C1682 + C81 * C1690) * C166) *
                C79307 * C79287 +
            ((C93 * C1683 + C81 * C1691 + C95 * C1684 + C82 * C1692) * C166 +
             (C93 * C1793 + C81 * C2021 + C95 * C1794 + C82 * C2022) * C79308) *
                C79307 * C79262) *
               C12991 +
           (((C93 * C3931 + C81 * C3935 + C95 * C3932 + C82 * C3936) * C166 +
             (C93 * C4047 + C81 * C4283 + C95 * C4048 + C82 * C4284) * C79308) *
                C79307 * C79287 -
            ((C95 * C858 + C82 * C1086 + C93 * C859 + C81 * C1087) * C79308 +
             (C95 * C748 + C82 * C756 + C93 * C749 + C81 * C757) * C166) *
                C79307 * C79301 -
            ((C95 * C6139 + C82 * C6311 + C93 * C6140 + C81 * C6312) * C79308 +
             (C95 * C6041 + C82 * C6047 + C93 * C6042 + C81 * C6048) * C166) *
                C79307 * C79262) *
               C79072) *
              C13595 +
          ((((C93 * C1681 + C81 * C1689 + C95 * C1685 + C82 * C1693) * C166 +
             (C93 * C1791 + C81 * C2019 + C95 * C1795 + C82 * C2023) * C79308) *
                C79307 * C79287 -
            ((C95 * C169 + C82 * C326 + C93 * C168 + C81 * C325) * C79308 +
             (C95 * C98 + C82 * C104 + C93 * C97 + C81 * C103) * C166) *
                C79307 * C79301 -
            ((C95 * C1796 + C82 * C2024 + C93 * C1794 + C81 * C2022) * C79308 +
             (C95 * C1686 + C82 * C1694 + C93 * C1684 + C81 * C1692) * C166) *
                C79307 * C79262) *
               C12991 +
           (((C93 * C748 + C81 * C756 + C95 * C752 + C82 * C760) * C166 +
             (C93 * C858 + C81 * C1086 + C95 * C862 + C82 * C1090) * C79308) *
                C79307 * C79301 -
            ((C95 * C4049 + C82 * C4285 + C93 * C4048 + C81 * C4284) * C79308 +
             (C95 * C3933 + C82 * C3937 + C93 * C3932 + C81 * C3936) * C166) *
                C79307 * C79287 +
            ((C93 * C6041 + C81 * C6047 + C95 * C10817 + C82 * C10818) * C166 +
             (C93 * C6139 + C81 * C6311 + C95 * C10920 + C82 * C11132) *
                 C79308) *
                C79307 * C79262) *
               C79072) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eeyy[2] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C372 * C96 + C380 + C380 + C79308 * C373) * C81 + C402 * C82) *
               C79307 * C79027 * C79310 -
           (C1201 * C82 +
            (C372 * C749 + C1180 + C1180 + C79308 * C1169) * C81) *
               C79307 * C79027 * C79303 +
           ((C372 * C750 + C1181 + C1181 + C79308 * C1170) * C81 +
            C1202 * C82) *
               C79307 * C79027 * C79290 -
           (C7094 * C82 +
            (C372 * C5568 + C5777 + C5777 + C79308 * C5772) * C81) *
               C79307 * C79027 * C79269) *
              C13595 +
          ((C1201 * C81 + C1203 * C82) * C79307 * C79027 * C79303 -
           (C403 * C82 + C402 * C81) * C79307 * C79027 * C79310 -
           (C1204 * C82 + C1202 * C81) * C79307 * C79027 * C79290 +
           (C7094 * C81 +
            (C372 * C6801 + C7091 + C7091 + C79308 * C7087) * C82) *
               C79307 * C79027 * C79269) *
              C78992)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C372 * C96 + C380 + C380 + C79308 * C373) * C81 + C402 * C82) *
               C79307 * C79027 * C12991 -
           (C1201 * C82 +
            (C372 * C749 + C1180 + C1180 + C79308 * C1169) * C81) *
               C79307 * C79027 * C79072) *
              C79309 +
          ((C1201 * C81 + C1203 * C82) * C79307 * C79027 * C79072 -
           (C403 * C82 + C402 * C81) * C79307 * C79027 * C12991) *
              C79299 +
          ((C403 * C81 + C404 * C82) * C79307 * C79027 * C12991 -
           (C2902 * C82 + C1203 * C81) * C79307 * C79027 * C79072) *
              C79283 +
          ((C2902 * C81 +
            (C372 * C2609 + C2899 + C2899 + C79308 * C2895) * C82) *
               C79307 * C79027 * C79072 -
           (C405 * C82 + C404 * C81) * C79307 * C79027 * C12991) *
              C79263)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C372 * C96 + C380 + C380 + C79308 * C373) * C81 + C402 * C82) *
                C79307 * C79301 -
            (C2134 * C82 +
             (C372 * C1682 + C2113 + C2113 + C79308 * C2102) * C81) *
                C79307 * C79287 +
            ((C372 * C1683 + C2114 + C2114 + C79308 * C2103) * C81 +
             C2135 * C82) *
                C79307 * C79262) *
               C12991 +
           (((C372 * C3931 + C4390 + C4390 + C79308 * C4385) * C81 +
             C4402 * C82) *
                C79307 * C79287 -
            (C1201 * C82 +
             (C372 * C749 + C1180 + C1180 + C79308 * C1169) * C81) *
                C79307 * C79301 -
            (C11238 * C82 +
             (C372 * C6042 + C6399 + C6399 + C79308 * C6392) * C81) *
                C79307 * C79262) *
               C79072) *
              C13595 +
          (((C2134 * C81 + C2136 * C82) * C79307 * C79287 -
            (C403 * C82 + C402 * C81) * C79307 * C79301 -
            (C2137 * C82 + C2135 * C81) * C79307 * C79262) *
               C12991 +
           ((C1201 * C81 + C1203 * C82) * C79307 * C79301 -
            (C4403 * C82 + C4402 * C81) * C79307 * C79287 +
            (C11238 * C81 +
             (C372 * C10817 + C11235 + C11235 + C79308 * C11231) * C82) *
                C79307 * C79262) *
               C79072) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[2] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C245 * C96 + C79307 * C246) * C166 +
             (C245 * C167 + C79307 * C447) * C79308) *
                C81 +
            (C454 + C470) * C82) *
               C79027 * C79310 -
           ((C1303 + C1289) * C82 + ((C245 * C859 + C79307 * C1279) * C79308 +
                                     (C245 * C749 + C79307 * C973) * C166) *
                                        C81) *
               C79027 * C79303 +
           (((C245 * C750 + C79307 * C974) * C166 +
             (C245 * C860 + C79307 * C1280) * C79308) *
                C81 +
            (C1290 + C1304) * C82) *
               C79027 * C79290 -
           ((C7166 + C7164) * C82 + ((C245 * C5626 + C79307 * C5822) * C79308 +
                                     (C245 * C5568 + C79307 * C5676) * C166) *
                                        C81) *
               C79027 * C79269) *
              C13595 +
          (((C1289 + C1303) * C81 + (C1293 + C1305) * C82) * C79027 * C79303 -
           ((C471 + C459) * C82 + (C470 + C454) * C81) * C79027 * C79310 -
           ((C1306 + C1298) * C82 + (C1304 + C1290) * C81) * C79027 * C79290 +
           ((C7164 + C7166) * C81 + ((C245 * C6801 + C79307 * C6946) * C166 +
                                     (C245 * C6872 + C79307 * C7160) * C79308) *
                                        C82) *
               C79027 * C79269) *
              C78992)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C245 * C96 + C79307 * C246) * C166 +
             (C245 * C167 + C79307 * C447) * C79308) *
                C81 +
            (C454 + C470) * C82) *
               C79027 * C12991 -
           ((C1303 + C1289) * C82 + ((C245 * C859 + C79307 * C1279) * C79308 +
                                     (C245 * C749 + C79307 * C973) * C166) *
                                        C81) *
               C79027 * C79072) *
              C79309 +
          (((C1289 + C1303) * C81 + (C1293 + C1305) * C82) * C79027 * C79072 -
           ((C471 + C459) * C82 + (C470 + C454) * C81) * C79027 * C12991) *
              C79299 +
          (((C459 + C471) * C81 + (C460 + C472) * C82) * C79027 * C12991 -
           ((C2974 + C2972) * C82 + (C1305 + C1293) * C81) * C79027 * C79072) *
              C79283 +
          (((C2972 + C2974) * C81 + ((C245 * C2609 + C79307 * C2754) * C166 +
                                     (C245 * C2680 + C79307 * C2968) * C79308) *
                                        C82) *
               C79027 * C79072 -
           ((C473 + C465) * C82 + (C472 + C460) * C81) * C79027 * C12991) *
              C79263)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C245 * C96 + C79307 * C246) * C166 +
              (C245 * C167 + C79307 * C447) * C79308) *
                 C81 +
             (C454 + C470) * C82) *
                C79301 -
            ((C2236 + C2222) * C82 + ((C245 * C1792 + C79307 * C2212) * C79308 +
                                      (C245 * C1682 + C79307 * C1906) * C166) *
                                         C81) *
                C79287 +
            (((C245 * C1683 + C79307 * C1907) * C166 +
              (C245 * C1793 + C79307 * C2213) * C79308) *
                 C81 +
             (C2223 + C2237) * C82) *
                C79262) *
               C12991 +
           ((((C245 * C3931 + C79307 * C4165) * C166 +
              (C245 * C4047 + C79307 * C4501) * C79308) *
                 C81 +
             (C4506 + C4514) * C82) *
                C79287 -
            ((C1303 + C1289) * C82 + ((C245 * C859 + C79307 * C1279) * C79308 +
                                      (C245 * C749 + C79307 * C973) * C166) *
                                         C81) *
                C79301 -
            ((C11342 + C11340) * C82 +
             ((C245 * C6140 + C79307 * C6478) * C79308 +
              (C245 * C6042 + C79307 * C6226) * C166) *
                 C81) *
                C79262) *
               C79072) *
              C13595 +
          ((((C2222 + C2236) * C81 + (C2226 + C2238) * C82) * C79287 -
            ((C471 + C459) * C82 + (C470 + C454) * C81) * C79301 -
            ((C2239 + C2231) * C82 + (C2237 + C2223) * C81) * C79262) *
               C12991 +
           (((C1289 + C1303) * C81 + (C1293 + C1305) * C82) * C79301 -
            ((C4515 + C4511) * C82 + (C4514 + C4506) * C81) * C79287 +
            ((C11340 + C11342) * C81 +
             ((C245 * C10817 + C79307 * C11026) * C166 +
              (C245 * C10920 + C79307 * C11336) * C79308) *
                 C82) *
                C79262) *
               C79072) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eezx[2] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C245 +
            (C93 * C246 + C81 * C515 + C95 * C247 + C82 * C516) * C79307) *
               C79308 * C79027 * C79310 -
           ((C95 * C972 + C82 * C1380 + C93 * C973 + C81 * C1381) * C79307 +
            (C95 * C748 + C82 * C756 + C93 * C749 + C81 * C757) * C245) *
               C79308 * C79027 * C79303 +
           ((C93 * C750 + C81 * C758 + C95 * C751 + C82 * C759) * C245 +
            (C93 * C974 + C81 * C1382 + C95 * C975 + C82 * C1383) * C79307) *
               C79308 * C79027 * C79290 -
           ((C95 * C5675 + C82 * C5867 + C93 * C5676 + C81 * C5868) * C79307 +
            (C95 * C5567 + C82 * C5571 + C93 * C5568 + C81 * C5572) * C245) *
               C79308 * C79027 * C79269) *
              C13595 +
          (((C93 * C748 + C81 * C756 + C95 * C752 + C82 * C760) * C245 +
            (C93 * C972 + C81 * C1380 + C95 * C976 + C82 * C1384) * C79307) *
               C79308 * C79027 * C79303 -
           ((C95 * C248 + C82 * C517 + C93 * C247 + C81 * C516) * C79307 +
            (C95 * C98 + C82 * C104 + C93 * C97 + C81 * C103) * C245) *
               C79308 * C79027 * C79310 -
           ((C95 * C977 + C82 * C1385 + C93 * C975 + C81 * C1383) * C79307 +
            (C95 * C753 + C82 * C761 + C93 * C751 + C81 * C759) * C245) *
               C79308 * C79027 * C79290 +
           ((C93 * C5567 + C81 * C5571 + C95 * C6801 + C82 * C6802) * C245 +
            (C93 * C5675 + C81 * C5867 + C95 * C6946 + C82 * C7232) * C79307) *
               C79308 * C79027 * C79269) *
              C78992)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C245 +
            (C93 * C246 + C81 * C515 + C95 * C247 + C82 * C516) * C79307) *
               C79308 * C79027 * C12991 -
           ((C95 * C972 + C82 * C1380 + C93 * C973 + C81 * C1381) * C79307 +
            (C95 * C748 + C82 * C756 + C93 * C749 + C81 * C757) * C245) *
               C79308 * C79027 * C79072) *
              C79309 +
          (((C93 * C748 + C81 * C756 + C95 * C752 + C82 * C760) * C245 +
            (C93 * C972 + C81 * C1380 + C95 * C976 + C82 * C1384) * C79307) *
               C79308 * C79027 * C79072 -
           ((C95 * C248 + C82 * C517 + C93 * C247 + C81 * C516) * C79307 +
            (C95 * C98 + C82 * C104 + C93 * C97 + C81 * C103) * C245) *
               C79308 * C79027 * C12991) *
              C79299 +
          (((C93 * C98 + C81 * C104 + C95 * C99 + C82 * C105) * C245 +
            (C93 * C248 + C81 * C517 + C95 * C249 + C82 * C518) * C79307) *
               C79308 * C79027 * C12991 -
           ((C95 * C978 + C82 * C1386 + C93 * C976 + C81 * C1384) * C79307 +
            (C95 * C754 + C82 * C762 + C93 * C752 + C81 * C760) * C245) *
               C79308 * C79027 * C79072) *
              C79283 +
          (((C93 * C754 + C81 * C762 + C95 * C2609 + C82 * C2610) * C245 +
            (C93 * C978 + C81 * C1386 + C95 * C2754 + C82 * C3040) * C79307) *
               C79308 * C79027 * C79072 -
           ((C95 * C250 + C82 * C519 + C93 * C249 + C81 * C518) * C79307 +
            (C95 * C100 + C82 * C106 + C93 * C99 + C81 * C105) * C245) *
               C79308 * C79027 * C12991) *
              C79263)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C245 +
             (C93 * C246 + C81 * C515 + C95 * C247 + C82 * C516) * C79307) *
                C79308 * C79301 -
            ((C95 * C1905 + C82 * C2313 + C93 * C1906 + C81 * C2314) * C79307 +
             (C95 * C1681 + C82 * C1689 + C93 * C1682 + C81 * C1690) * C245) *
                C79308 * C79287 +
            ((C93 * C1683 + C81 * C1691 + C95 * C1684 + C82 * C1692) * C245 +
             (C93 * C1907 + C81 * C2315 + C95 * C1908 + C82 * C2316) * C79307) *
                C79308 * C79262) *
               C12991 +
           (((C93 * C3931 + C81 * C3935 + C95 * C3932 + C82 * C3936) * C245 +
             (C93 * C4165 + C81 * C4613 + C95 * C4166 + C82 * C4614) * C79307) *
                C79308 * C79287 -
            ((C95 * C972 + C82 * C1380 + C93 * C973 + C81 * C1381) * C79307 +
             (C95 * C748 + C82 * C756 + C93 * C749 + C81 * C757) * C245) *
                C79308 * C79301 -
            ((C95 * C6225 + C82 * C6557 + C93 * C6226 + C81 * C6558) * C79307 +
             (C95 * C6041 + C82 * C6047 + C93 * C6042 + C81 * C6048) * C245) *
                C79308 * C79262) *
               C79072) *
              C13595 +
          ((((C93 * C1681 + C81 * C1689 + C95 * C1685 + C82 * C1693) * C245 +
             (C93 * C1905 + C81 * C2313 + C95 * C1909 + C82 * C2317) * C79307) *
                C79308 * C79287 -
            ((C95 * C248 + C82 * C517 + C93 * C247 + C81 * C516) * C79307 +
             (C95 * C98 + C82 * C104 + C93 * C97 + C81 * C103) * C245) *
                C79308 * C79301 -
            ((C95 * C1910 + C82 * C2318 + C93 * C1908 + C81 * C2316) * C79307 +
             (C95 * C1686 + C82 * C1694 + C93 * C1684 + C81 * C1692) * C245) *
                C79308 * C79262) *
               C12991 +
           (((C93 * C748 + C81 * C756 + C95 * C752 + C82 * C760) * C245 +
             (C93 * C972 + C81 * C1380 + C95 * C976 + C82 * C1384) * C79307) *
                C79308 * C79301 -
            ((C95 * C4167 + C82 * C4615 + C93 * C4166 + C81 * C4614) * C79307 +
             (C95 * C3933 + C82 * C3937 + C93 * C3932 + C81 * C3936) * C245) *
                C79308 * C79287 +
            ((C93 * C6041 + C81 * C6047 + C95 * C10817 + C82 * C10818) * C245 +
             (C93 * C6225 + C81 * C6557 + C95 * C11026 + C82 * C11440) *
                 C79307) *
                C79308 * C79262) *
               C79072) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eezy[2] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C166 * C96 + C79308 * C167) * C245 +
             (C166 * C246 + C79308 * C563) * C79307) *
                C81 +
            (C570 + C586) * C82) *
               C79027 * C79310 -
           ((C1487 + C1473) * C82 + ((C166 * C973 + C79308 * C1463) * C79307 +
                                     (C166 * C749 + C79308 * C859) * C245) *
                                        C81) *
               C79027 * C79303 +
           (((C166 * C750 + C79308 * C860) * C245 +
             (C166 * C974 + C79308 * C1464) * C79307) *
                C81 +
            (C1474 + C1488) * C82) *
               C79027 * C79290 -
           ((C7305 + C7303) * C82 + ((C166 * C5676 + C79308 * C5914) * C79307 +
                                     (C166 * C5568 + C79308 * C5626) * C245) *
                                        C81) *
               C79027 * C79269) *
              C13595 +
          (((C1473 + C1487) * C81 + (C1477 + C1489) * C82) * C79027 * C79303 -
           ((C587 + C575) * C82 + (C586 + C570) * C81) * C79027 * C79310 -
           ((C1490 + C1482) * C82 + (C1488 + C1474) * C81) * C79027 * C79290 +
           ((C7303 + C7305) * C81 + ((C166 * C6801 + C79308 * C6872) * C245 +
                                     (C166 * C6946 + C79308 * C7299) * C79307) *
                                        C82) *
               C79027 * C79269) *
              C78992)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C166 * C96 + C79308 * C167) * C245 +
             (C166 * C246 + C79308 * C563) * C79307) *
                C81 +
            (C570 + C586) * C82) *
               C79027 * C12991 -
           ((C1487 + C1473) * C82 + ((C166 * C973 + C79308 * C1463) * C79307 +
                                     (C166 * C749 + C79308 * C859) * C245) *
                                        C81) *
               C79027 * C79072) *
              C79309 +
          (((C1473 + C1487) * C81 + (C1477 + C1489) * C82) * C79027 * C79072 -
           ((C587 + C575) * C82 + (C586 + C570) * C81) * C79027 * C12991) *
              C79299 +
          (((C575 + C587) * C81 + (C576 + C588) * C82) * C79027 * C12991 -
           ((C3113 + C3111) * C82 + (C1489 + C1477) * C81) * C79027 * C79072) *
              C79283 +
          (((C3111 + C3113) * C81 + ((C166 * C2609 + C79308 * C2680) * C245 +
                                     (C166 * C2754 + C79308 * C3107) * C79307) *
                                        C82) *
               C79027 * C79072 -
           ((C589 + C581) * C82 + (C588 + C576) * C81) * C79027 * C12991) *
              C79263)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C166 * C96 + C79308 * C167) * C245 +
              (C166 * C246 + C79308 * C563) * C79307) *
                 C81 +
             (C570 + C586) * C82) *
                C79301 -
            ((C2420 + C2406) * C82 + ((C166 * C1906 + C79308 * C2396) * C79307 +
                                      (C166 * C1682 + C79308 * C1792) * C245) *
                                         C81) *
                C79287 +
            (((C166 * C1683 + C79308 * C1793) * C245 +
              (C166 * C1907 + C79308 * C2397) * C79307) *
                 C81 +
             (C2407 + C2421) * C82) *
                C79262) *
               C12991 +
           ((((C166 * C3931 + C79308 * C4047) * C245 +
              (C166 * C4165 + C79308 * C4715) * C79307) *
                 C81 +
             (C4720 + C4728) * C82) *
                C79287 -
            ((C1487 + C1473) * C82 + ((C166 * C973 + C79308 * C1463) * C79307 +
                                      (C166 * C749 + C79308 * C859) * C245) *
                                         C81) *
                C79301 -
            ((C11545 + C11543) * C82 +
             ((C166 * C6226 + C79308 * C6638) * C79307 +
              (C166 * C6042 + C79308 * C6140) * C245) *
                 C81) *
                C79262) *
               C79072) *
              C13595 +
          ((((C2406 + C2420) * C81 + (C2410 + C2422) * C82) * C79287 -
            ((C587 + C575) * C82 + (C586 + C570) * C81) * C79301 -
            ((C2423 + C2415) * C82 + (C2421 + C2407) * C81) * C79262) *
               C12991 +
           (((C1473 + C1487) * C81 + (C1477 + C1489) * C82) * C79301 -
            ((C4729 + C4725) * C82 + (C4728 + C4720) * C81) * C79287 +
            ((C11543 + C11545) * C81 +
             ((C166 * C10817 + C79308 * C10920) * C245 +
              (C166 * C11026 + C79308 * C11539) * C79307) *
                 C82) *
                C79262) *
               C79072) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eezz[2] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C631 * C96 + C639 + C639 + C79307 * C632) * C79308 * C81 +
            C665 * C82) *
               C79027 * C79310 -
           (C1601 * C82 +
            (C631 * C749 + C1576 + C1576 + C79307 * C1565) * C79308 * C81) *
               C79027 * C79303 +
           ((C631 * C750 + C1577 + C1577 + C79307 * C1566) * C79308 * C81 +
            C1602 * C82) *
               C79027 * C79290 -
           (C7379 * C82 +
            (C631 * C5568 + C5965 + C5965 + C79307 * C5960) * C79308 * C81) *
               C79027 * C79269) *
              C13595 +
          ((C1601 * C81 + C1603 * C82) * C79027 * C79303 -
           (C666 * C82 + C665 * C81) * C79027 * C79310 -
           (C1604 * C82 + C1602 * C81) * C79027 * C79290 +
           (C7379 * C81 +
            (C631 * C6801 + C7375 + C7375 + C79307 * C7371) * C79308 * C82) *
               C79027 * C79269) *
              C78992)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C631 * C96 + C639 + C639 + C79307 * C632) * C79308 * C81 +
            C665 * C82) *
               C79027 * C12991 -
           (C1601 * C82 +
            (C631 * C749 + C1576 + C1576 + C79307 * C1565) * C79308 * C81) *
               C79027 * C79072) *
              C79309 +
          ((C1601 * C81 + C1603 * C82) * C79027 * C79072 -
           (C666 * C82 + C665 * C81) * C79027 * C12991) *
              C79299 +
          ((C666 * C81 + C667 * C82) * C79027 * C12991 -
           (C3187 * C82 + C1603 * C81) * C79027 * C79072) *
              C79283 +
          ((C3187 * C81 +
            (C631 * C2609 + C3183 + C3183 + C79307 * C3179) * C79308 * C82) *
               C79027 * C79072 -
           (C668 * C82 + C667 * C81) * C79027 * C12991) *
              C79263)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C631 * C96 + C639 + C639 + C79307 * C632) * C79308 * C81 +
             C665 * C82) *
                C79301 -
            (C2534 * C82 +
             (C631 * C1682 + C2509 + C2509 + C79307 * C2498) * C79308 * C81) *
                C79287 +
            ((C631 * C1683 + C2510 + C2510 + C79307 * C2499) * C79308 * C81 +
             C2535 * C82) *
                C79262) *
               C12991 +
           (((C631 * C3931 + C4832 + C4832 + C79307 * C4827) * C79308 * C81 +
             C4846 * C82) *
                C79287 -
            (C1601 * C82 +
             (C631 * C749 + C1576 + C1576 + C79307 * C1565) * C79308 * C81) *
                C79301 -
            (C11651 * C82 +
             (C631 * C6042 + C6725 + C6725 + C79307 * C6718) * C79308 * C81) *
                C79262) *
               C79072) *
              C13595 +
          (((C2534 * C81 + C2536 * C82) * C79287 -
            (C666 * C82 + C665 * C81) * C79301 -
            (C2537 * C82 + C2535 * C81) * C79262) *
               C12991 +
           ((C1601 * C81 + C1603 * C82) * C79301 -
            (C4847 * C82 + C4846 * C81) * C79287 +
            (C11651 * C81 +
             (C631 * C10817 + C11647 + C11647 + C79307 * C11643) * C79308 *
                 C82) *
                C79262) *
               C79072) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eexx[3] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C92 * C96 + C115 + C115 + C81 * C108 + C94 * C97 + C116 +
                      C116 + C82 * C109) *
                         C79307 * C79308 * C79230 -
                     (C94 * C1681 + C1706 + C1706 + C82 * C1697 + C92 * C1682 +
                      C1707 + C1707 + C81 * C1698) *
                         C79307 * C79308 * C79114) *
                        C12991 +
                    ((C92 * C3931 + C3944 + C3944 + C81 * C3939 + C94 * C3932 +
                      C3945 + C3945 + C82 * C3940) *
                         C79307 * C79308 * C79114 -
                     (C94 * C748 + C773 + C773 + C82 * C764 + C92 * C749 +
                      C774 + C774 + C81 * C765) *
                         C79307 * C79308 * C79230) *
                        C79072) *
                       C78986 +
                   (((C92 * C1681 + C1710 + C1710 + C81 * C1697 + C94 * C1685 +
                      C1711 + C1711 + C82 * C1701) *
                         C79307 * C79308 * C79114 -
                     (C94 * C98 + C117 + C117 + C82 * C110 + C92 * C97 + C118 +
                      C118 + C81 * C109) *
                         C79307 * C79308 * C79230) *
                        C12991 +
                    ((C92 * C748 + C777 + C777 + C81 * C764 + C94 * C752 +
                      C778 + C778 + C82 * C768) *
                         C79307 * C79308 * C79230 -
                     (C94 * C3933 + C3946 + C3946 + C82 * C3941 + C92 * C3932 +
                      C3947 + C3947 + C81 * C3940) *
                         C79307 * C79308 * C79114) *
                        C79072) *
                       C78995 +
                   (((C92 * C98 + C119 + C119 + C81 * C110 + C94 * C99 + C120 +
                      C120 + C82 * C111) *
                         C79307 * C79308 * C79230 -
                     (C94 * C1687 + C1714 + C1714 + C82 * C1703 + C92 * C1685 +
                      C1715 + C1715 + C81 * C1701) *
                         C79307 * C79308 * C79114) *
                        C12991 +
                    ((C92 * C3933 + C3948 + C3948 + C81 * C3941 + C94 * C3934 +
                      C3949 + C3949 + C82 * C3942) *
                         C79307 * C79308 * C79114 -
                     (C94 * C754 + C781 + C781 + C82 * C770 + C92 * C752 +
                      C782 + C782 + C81 * C768) *
                         C79307 * C79308 * C79230) *
                        C79072) *
                       C15086)) /
                 (p * q * std::sqrt(p + q));
    d2eexy[3] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C166 * C96 + C79308 * C167) * C93 +
             (C166 * C102 + C79308 * C173) * C81 + C196 * C95 + C197 * C82) *
                C79307 * C79230 -
            (C1824 * C82 + C1825 * C95 + (C166 * C1690 + C79308 * C1800) * C81 +
             (C166 * C1682 + C79308 * C1792) * C93) *
                C79307 * C79114) *
               C12991 +
           (((C166 * C3931 + C79308 * C4047) * C93 +
             (C166 * C3935 + C79308 * C4051) * C81 + C4064 * C95 +
             C4065 * C82) *
                C79307 * C79114 -
            (C891 * C82 + C892 * C95 + (C166 * C757 + C79308 * C867) * C81 +
             (C166 * C749 + C79308 * C859) * C93) *
                C79307 * C79230) *
               C79072) *
              C78986 +
          (((C1825 * C93 + C1824 * C81 + C1828 * C95 + C1829 * C82) * C79307 *
                C79114 -
            (C198 * C82 + C199 * C95 + C197 * C81 + C196 * C93) * C79307 *
                C79230) *
               C12991 +
           ((C892 * C93 + C891 * C81 + C895 * C95 + C896 * C82) * C79307 *
                C79230 -
            (C4066 * C82 + C4067 * C95 + C4065 * C81 + C4064 * C93) * C79307 *
                C79114) *
               C79072) *
              C78995 +
          (((C199 * C93 + C198 * C81 + C200 * C95 + C201 * C82) * C79307 *
                C79230 -
            (C3333 * C82 + C3334 * C95 + C1829 * C81 + C1828 * C93) * C79307 *
                C79114) *
               C12991 +
           ((C4067 * C93 + C4066 * C81 + (C166 * C3934 + C79308 * C4050) * C95 +
             (C166 * C3938 + C79308 * C4054) * C82) *
                C79307 * C79114 -
            (C2687 * C82 + C2688 * C95 + C896 * C81 + C895 * C93) * C79307 *
                C79230) *
               C79072) *
              C15086)) /
        (p * q * std::sqrt(p + q));
    d2eexz[3] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C245 * C96 + C79307 * C246) * C93 +
             (C245 * C102 + C79307 * C252) * C81 + C275 * C95 + C276 * C82) *
                C79308 * C79230 -
            (C1938 * C82 + C1939 * C95 + (C245 * C1690 + C79307 * C1914) * C81 +
             (C245 * C1682 + C79307 * C1906) * C93) *
                C79308 * C79114) *
               C12991 +
           (((C245 * C3931 + C79307 * C4165) * C93 +
             (C245 * C3935 + C79307 * C4169) * C81 + C4182 * C95 +
             C4183 * C82) *
                C79308 * C79114 -
            (C1005 * C82 + C1006 * C95 + (C245 * C757 + C79307 * C981) * C81 +
             (C245 * C749 + C79307 * C973) * C93) *
                C79308 * C79230) *
               C79072) *
              C78986 +
          (((C1939 * C93 + C1938 * C81 + C1942 * C95 + C1943 * C82) * C79308 *
                C79114 -
            (C277 * C82 + C278 * C95 + C276 * C81 + C275 * C93) * C79308 *
                C79230) *
               C12991 +
           ((C1006 * C93 + C1005 * C81 + C1009 * C95 + C1010 * C82) * C79308 *
                C79230 -
            (C4184 * C82 + C4185 * C95 + C4183 * C81 + C4182 * C93) * C79308 *
                C79114) *
               C79072) *
              C78995 +
          (((C278 * C93 + C277 * C81 + C279 * C95 + C280 * C82) * C79308 *
                C79230 -
            (C3407 * C82 + C3408 * C95 + C1943 * C81 + C1942 * C93) * C79308 *
                C79114) *
               C12991 +
           ((C4185 * C93 + C4184 * C81 + (C245 * C3934 + C79307 * C4168) * C95 +
             (C245 * C3938 + C79307 * C4172) * C82) *
                C79308 * C79114 -
            (C2761 * C82 + C2762 * C95 + C1010 * C81 + C1009 * C93) * C79308 *
                C79230) *
               C79072) *
              C15086)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[3] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C166 +
             (C93 * C167 + C81 * C324 + C95 * C168 + C82 * C325) * C79308) *
                C79307 * C79230 -
            ((C95 * C1791 + C82 * C2019 + C93 * C1792 + C81 * C2020) * C79308 +
             (C95 * C1681 + C82 * C1689 + C93 * C1682 + C81 * C1690) * C166) *
                C79307 * C79114) *
               C12991 +
           (((C93 * C3931 + C81 * C3935 + C95 * C3932 + C82 * C3936) * C166 +
             (C93 * C4047 + C81 * C4283 + C95 * C4048 + C82 * C4284) * C79308) *
                C79307 * C79114 -
            ((C95 * C858 + C82 * C1086 + C93 * C859 + C81 * C1087) * C79308 +
             (C95 * C748 + C82 * C756 + C93 * C749 + C81 * C757) * C166) *
                C79307 * C79230) *
               C79072) *
              C78986 +
          ((((C93 * C1681 + C81 * C1689 + C95 * C1685 + C82 * C1693) * C166 +
             (C93 * C1791 + C81 * C2019 + C95 * C1795 + C82 * C2023) * C79308) *
                C79307 * C79114 -
            ((C95 * C169 + C82 * C326 + C93 * C168 + C81 * C325) * C79308 +
             (C95 * C98 + C82 * C104 + C93 * C97 + C81 * C103) * C166) *
                C79307 * C79230) *
               C12991 +
           (((C93 * C748 + C81 * C756 + C95 * C752 + C82 * C760) * C166 +
             (C93 * C858 + C81 * C1086 + C95 * C862 + C82 * C1090) * C79308) *
                C79307 * C79230 -
            ((C95 * C4049 + C82 * C4285 + C93 * C4048 + C81 * C4284) * C79308 +
             (C95 * C3933 + C82 * C3937 + C93 * C3932 + C81 * C3936) * C166) *
                C79307 * C79114) *
               C79072) *
              C78995 +
          ((((C93 * C98 + C81 * C104 + C95 * C99 + C82 * C105) * C166 +
             (C93 * C169 + C81 * C326 + C95 * C170 + C82 * C327) * C79308) *
                C79307 * C79230 -
            ((C95 * C1797 + C82 * C2025 + C93 * C1795 + C81 * C2023) * C79308 +
             (C95 * C1687 + C82 * C1695 + C93 * C1685 + C81 * C1693) * C166) *
                C79307 * C79114) *
               C12991 +
           (((C93 * C3933 + C81 * C3937 + C95 * C3934 + C82 * C3938) * C166 +
             (C93 * C4049 + C81 * C4285 + C95 * C4050 + C82 * C4286) * C79308) *
                C79307 * C79114 -
            ((C95 * C864 + C82 * C1092 + C93 * C862 + C81 * C1090) * C79308 +
             (C95 * C754 + C82 * C762 + C93 * C752 + C81 * C760) * C166) *
                C79307 * C79230) *
               C79072) *
              C15086)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[3] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C372 * C96 + C380 + C380 + C79308 * C373) * C81 + C402 * C82) *
                C79307 * C79230 -
            (C2134 * C82 +
             (C372 * C1682 + C2113 + C2113 + C79308 * C2102) * C81) *
                C79307 * C79114) *
               C12991 +
           (((C372 * C3931 + C4390 + C4390 + C79308 * C4385) * C81 +
             C4402 * C82) *
                C79307 * C79114 -
            (C1201 * C82 +
             (C372 * C749 + C1180 + C1180 + C79308 * C1169) * C81) *
                C79307 * C79230) *
               C79072) *
              C78986 +
          (((C2134 * C81 + C2136 * C82) * C79307 * C79114 -
            (C403 * C82 + C402 * C81) * C79307 * C79230) *
               C12991 +
           ((C1201 * C81 + C1203 * C82) * C79307 * C79230 -
            (C4403 * C82 + C4402 * C81) * C79307 * C79114) *
               C79072) *
              C78995 +
          (((C403 * C81 + C404 * C82) * C79307 * C79230 -
            (C3548 * C82 + C2136 * C81) * C79307 * C79114) *
               C12991 +
           ((C4403 * C81 +
             (C372 * C3934 + C4397 + C4397 + C79308 * C4388) * C82) *
                C79307 * C79114 -
            (C2902 * C82 + C1203 * C81) * C79307 * C79230) *
               C79072) *
              C15086)) /
        (p * q * std::sqrt(p + q));
    d2eeyz[3] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C245 * C96 + C79307 * C246) * C166 +
              (C245 * C167 + C79307 * C447) * C79308) *
                 C81 +
             (C454 + C470) * C82) *
                C79230 -
            ((C2236 + C2222) * C82 + ((C245 * C1792 + C79307 * C2212) * C79308 +
                                      (C245 * C1682 + C79307 * C1906) * C166) *
                                         C81) *
                C79114) *
               C12991 +
           ((((C245 * C3931 + C79307 * C4165) * C166 +
              (C245 * C4047 + C79307 * C4501) * C79308) *
                 C81 +
             (C4506 + C4514) * C82) *
                C79114 -
            ((C1303 + C1289) * C82 + ((C245 * C859 + C79307 * C1279) * C79308 +
                                      (C245 * C749 + C79307 * C973) * C166) *
                                         C81) *
                C79230) *
               C79072) *
              C78986 +
          ((((C2222 + C2236) * C81 + (C2226 + C2238) * C82) * C79114 -
            ((C471 + C459) * C82 + (C470 + C454) * C81) * C79230) *
               C12991 +
           (((C1289 + C1303) * C81 + (C1293 + C1305) * C82) * C79230 -
            ((C4515 + C4511) * C82 + (C4514 + C4506) * C81) * C79114) *
               C79072) *
              C78995 +
          ((((C459 + C471) * C81 + (C460 + C472) * C82) * C79230 -
            ((C3620 + C3618) * C82 + (C2238 + C2226) * C81) * C79114) *
               C12991 +
           (((C4511 + C4515) * C81 +
             ((C245 * C3934 + C79307 * C4168) * C166 +
              (C245 * C4050 + C79307 * C4504) * C79308) *
                 C82) *
                C79114 -
            ((C2974 + C2972) * C82 + (C1305 + C1293) * C81) * C79230) *
               C79072) *
              C15086)) /
        (p * q * std::sqrt(p + q));
    d2eezx[3] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C245 +
             (C93 * C246 + C81 * C515 + C95 * C247 + C82 * C516) * C79307) *
                C79308 * C79230 -
            ((C95 * C1905 + C82 * C2313 + C93 * C1906 + C81 * C2314) * C79307 +
             (C95 * C1681 + C82 * C1689 + C93 * C1682 + C81 * C1690) * C245) *
                C79308 * C79114) *
               C12991 +
           (((C93 * C3931 + C81 * C3935 + C95 * C3932 + C82 * C3936) * C245 +
             (C93 * C4165 + C81 * C4613 + C95 * C4166 + C82 * C4614) * C79307) *
                C79308 * C79114 -
            ((C95 * C972 + C82 * C1380 + C93 * C973 + C81 * C1381) * C79307 +
             (C95 * C748 + C82 * C756 + C93 * C749 + C81 * C757) * C245) *
                C79308 * C79230) *
               C79072) *
              C78986 +
          ((((C93 * C1681 + C81 * C1689 + C95 * C1685 + C82 * C1693) * C245 +
             (C93 * C1905 + C81 * C2313 + C95 * C1909 + C82 * C2317) * C79307) *
                C79308 * C79114 -
            ((C95 * C248 + C82 * C517 + C93 * C247 + C81 * C516) * C79307 +
             (C95 * C98 + C82 * C104 + C93 * C97 + C81 * C103) * C245) *
                C79308 * C79230) *
               C12991 +
           (((C93 * C748 + C81 * C756 + C95 * C752 + C82 * C760) * C245 +
             (C93 * C972 + C81 * C1380 + C95 * C976 + C82 * C1384) * C79307) *
                C79308 * C79230 -
            ((C95 * C4167 + C82 * C4615 + C93 * C4166 + C81 * C4614) * C79307 +
             (C95 * C3933 + C82 * C3937 + C93 * C3932 + C81 * C3936) * C245) *
                C79308 * C79114) *
               C79072) *
              C78995 +
          ((((C93 * C98 + C81 * C104 + C95 * C99 + C82 * C105) * C245 +
             (C93 * C248 + C81 * C517 + C95 * C249 + C82 * C518) * C79307) *
                C79308 * C79230 -
            ((C95 * C1911 + C82 * C2319 + C93 * C1909 + C81 * C2317) * C79307 +
             (C95 * C1687 + C82 * C1695 + C93 * C1685 + C81 * C1693) * C245) *
                C79308 * C79114) *
               C12991 +
           (((C93 * C3933 + C81 * C3937 + C95 * C3934 + C82 * C3938) * C245 +
             (C93 * C4167 + C81 * C4615 + C95 * C4168 + C82 * C4616) * C79307) *
                C79308 * C79114 -
            ((C95 * C978 + C82 * C1386 + C93 * C976 + C81 * C1384) * C79307 +
             (C95 * C754 + C82 * C762 + C93 * C752 + C81 * C760) * C245) *
                C79308 * C79230) *
               C79072) *
              C15086)) /
        (p * q * std::sqrt(p + q));
    d2eezy[3] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C166 * C96 + C79308 * C167) * C245 +
              (C166 * C246 + C79308 * C563) * C79307) *
                 C81 +
             (C570 + C586) * C82) *
                C79230 -
            ((C2420 + C2406) * C82 + ((C166 * C1906 + C79308 * C2396) * C79307 +
                                      (C166 * C1682 + C79308 * C1792) * C245) *
                                         C81) *
                C79114) *
               C12991 +
           ((((C166 * C3931 + C79308 * C4047) * C245 +
              (C166 * C4165 + C79308 * C4715) * C79307) *
                 C81 +
             (C4720 + C4728) * C82) *
                C79114 -
            ((C1487 + C1473) * C82 + ((C166 * C973 + C79308 * C1463) * C79307 +
                                      (C166 * C749 + C79308 * C859) * C245) *
                                         C81) *
                C79230) *
               C79072) *
              C78986 +
          ((((C2406 + C2420) * C81 + (C2410 + C2422) * C82) * C79114 -
            ((C587 + C575) * C82 + (C586 + C570) * C81) * C79230) *
               C12991 +
           (((C1473 + C1487) * C81 + (C1477 + C1489) * C82) * C79230 -
            ((C4729 + C4725) * C82 + (C4728 + C4720) * C81) * C79114) *
               C79072) *
              C78995 +
          ((((C575 + C587) * C81 + (C576 + C588) * C82) * C79230 -
            ((C3759 + C3757) * C82 + (C2422 + C2410) * C81) * C79114) *
               C12991 +
           (((C4725 + C4729) * C81 +
             ((C166 * C3934 + C79308 * C4050) * C245 +
              (C166 * C4168 + C79308 * C4718) * C79307) *
                 C82) *
                C79114 -
            ((C3113 + C3111) * C82 + (C1489 + C1477) * C81) * C79230) *
               C79072) *
              C15086)) /
        (p * q * std::sqrt(p + q));
    d2eezz[3] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C631 * C96 + C639 + C639 + C79307 * C632) * C79308 * C81 +
             C665 * C82) *
                C79230 -
            (C2534 * C82 +
             (C631 * C1682 + C2509 + C2509 + C79307 * C2498) * C79308 * C81) *
                C79114) *
               C12991 +
           (((C631 * C3931 + C4832 + C4832 + C79307 * C4827) * C79308 * C81 +
             C4846 * C82) *
                C79114 -
            (C1601 * C82 +
             (C631 * C749 + C1576 + C1576 + C79307 * C1565) * C79308 * C81) *
                C79230) *
               C79072) *
              C78986 +
          (((C2534 * C81 + C2536 * C82) * C79114 -
            (C666 * C82 + C665 * C81) * C79230) *
               C12991 +
           ((C1601 * C81 + C1603 * C82) * C79230 -
            (C4847 * C82 + C4846 * C81) * C79114) *
               C79072) *
              C78995 +
          (((C666 * C81 + C667 * C82) * C79230 -
            (C3833 * C82 + C2536 * C81) * C79114) *
               C12991 +
           ((C4847 * C81 +
             (C631 * C3934 + C4839 + C4839 + C79307 * C4830) * C79308 * C82) *
                C79114 -
            (C3187 * C82 + C1603 * C81) * C79230) *
               C79072) *
              C15086)) /
        (p * q * std::sqrt(p + q));
    d2eexx[4] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((C92 * C96 + C115 + C115 + C81 * C108 + C94 * C97 + C116 +
                     C116 + C82 * C109) *
                        C79307 * C79308 * C79027 * C12991 -
                    (C94 * C748 + C773 + C773 + C82 * C764 + C92 * C749 + C774 +
                     C774 + C81 * C765) *
                        C79307 * C79308 * C79027 * C79072) *
                       C79309 +
                   ((C92 * C748 + C777 + C777 + C81 * C764 + C94 * C752 + C778 +
                     C778 + C82 * C768) *
                        C79307 * C79308 * C79027 * C79072 -
                    (C94 * C98 + C117 + C117 + C82 * C110 + C92 * C97 + C118 +
                     C118 + C81 * C109) *
                        C79307 * C79308 * C79027 * C12991) *
                       C79299 +
                   ((C92 * C98 + C119 + C119 + C81 * C110 + C94 * C99 + C120 +
                     C120 + C82 * C111) *
                        C79307 * C79308 * C79027 * C12991 -
                    (C94 * C754 + C781 + C781 + C82 * C770 + C92 * C752 + C782 +
                     C782 + C81 * C768) *
                        C79307 * C79308 * C79027 * C79072) *
                       C79283 +
                   ((C92 * C754 + C2613 + C2613 + C81 * C770 + C94 * C2609 +
                     C2614 + C2614 + C82 * C2611) *
                        C79307 * C79308 * C79027 * C79072 -
                    (C94 * C100 + C121 + C121 + C82 * C112 + C92 * C99 + C122 +
                     C122 + C81 * C111) *
                        C79307 * C79308 * C79027 * C12991) *
                       C79263)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((C92 * C96 + C115 + C115 + C81 * C108 + C94 * C97 + C116 +
                     C116 + C82 * C109) *
                        C79307 * C79308 * C79027 * C79310 -
                    (C94 * C748 + C773 + C773 + C82 * C764 + C92 * C749 + C774 +
                     C774 + C81 * C765) *
                        C79307 * C79308 * C79027 * C79303 +
                    (C92 * C750 + C775 + C775 + C81 * C766 + C94 * C751 + C776 +
                     C776 + C82 * C767) *
                        C79307 * C79308 * C79027 * C79290 -
                    (C94 * C5567 + C5580 + C5580 + C82 * C5575 + C92 * C5568 +
                     C5581 + C5581 + C81 * C5576) *
                        C79307 * C79308 * C79027 * C79269) *
                       C13595 +
                   ((C92 * C748 + C777 + C777 + C81 * C764 + C94 * C752 + C778 +
                     C778 + C82 * C768) *
                        C79307 * C79308 * C79027 * C79303 -
                    (C94 * C98 + C117 + C117 + C82 * C110 + C92 * C97 + C118 +
                     C118 + C81 * C109) *
                        C79307 * C79308 * C79027 * C79310 -
                    (C94 * C753 + C779 + C779 + C82 * C769 + C92 * C751 + C780 +
                     C780 + C81 * C767) *
                        C79307 * C79308 * C79027 * C79290 +
                    (C92 * C5567 + C6805 + C6805 + C81 * C5575 + C94 * C6801 +
                     C6806 + C6806 + C82 * C6803) *
                        C79307 * C79308 * C79027 * C79269) *
                       C78992)) /
                     (p * q * std::sqrt(p + q));
    d2eexy[4] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C166 * C96 + C79308 * C167) * C93 +
            (C166 * C102 + C79308 * C173) * C81 + C196 * C95 + C197 * C82) *
               C79307 * C79027 * C12991 -
           (C891 * C82 + C892 * C95 + (C166 * C757 + C79308 * C867) * C81 +
            (C166 * C749 + C79308 * C859) * C93) *
               C79307 * C79027 * C79072) *
              C79309 +
          ((C892 * C93 + C891 * C81 + C895 * C95 + C896 * C82) * C79307 *
               C79027 * C79072 -
           (C198 * C82 + C199 * C95 + C197 * C81 + C196 * C93) * C79307 *
               C79027 * C12991) *
              C79299 +
          ((C199 * C93 + C198 * C81 + C200 * C95 + C201 * C82) * C79307 *
               C79027 * C12991 -
           (C2687 * C82 + C2688 * C95 + C896 * C81 + C895 * C93) * C79307 *
               C79027 * C79072) *
              C79283 +
          ((C2688 * C93 + C2687 * C81 + (C166 * C2609 + C79308 * C2680) * C95 +
            (C166 * C2610 + C79308 * C2681) * C82) *
               C79307 * C79027 * C79072 -
           (C202 * C82 + C203 * C95 + C201 * C81 + C200 * C93) * C79307 *
               C79027 * C12991) *
              C79263)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C166 * C96 + C79308 * C167) * C93 +
            (C166 * C102 + C79308 * C173) * C81 + C196 * C95 + C197 * C82) *
               C79307 * C79027 * C79310 -
           (C891 * C82 + C892 * C95 + (C166 * C757 + C79308 * C867) * C81 +
            (C166 * C749 + C79308 * C859) * C93) *
               C79307 * C79027 * C79303 +
           ((C166 * C750 + C79308 * C860) * C93 +
            (C166 * C758 + C79308 * C868) * C81 + C893 * C95 + C894 * C82) *
               C79307 * C79027 * C79290 -
           (C6879 * C82 + C6880 * C95 + (C166 * C5572 + C79308 * C5630) * C81 +
            (C166 * C5568 + C79308 * C5626) * C93) *
               C79307 * C79027 * C79269) *
              C13595 +
          ((C892 * C93 + C891 * C81 + C895 * C95 + C896 * C82) * C79307 *
               C79027 * C79303 -
           (C198 * C82 + C199 * C95 + C197 * C81 + C196 * C93) * C79307 *
               C79027 * C79310 -
           (C897 * C82 + C898 * C95 + C894 * C81 + C893 * C93) * C79307 *
               C79027 * C79290 +
           (C6880 * C93 + C6879 * C81 + (C166 * C6801 + C79308 * C6872) * C95 +
            (C166 * C6802 + C79308 * C6873) * C82) *
               C79307 * C79027 * C79269) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eexz[4] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C245 * C96 + C79307 * C246) * C93 +
            (C245 * C102 + C79307 * C252) * C81 + C275 * C95 + C276 * C82) *
               C79308 * C79027 * C12991 -
           (C1005 * C82 + C1006 * C95 + (C245 * C757 + C79307 * C981) * C81 +
            (C245 * C749 + C79307 * C973) * C93) *
               C79308 * C79027 * C79072) *
              C79309 +
          ((C1006 * C93 + C1005 * C81 + C1009 * C95 + C1010 * C82) * C79308 *
               C79027 * C79072 -
           (C277 * C82 + C278 * C95 + C276 * C81 + C275 * C93) * C79308 *
               C79027 * C12991) *
              C79299 +
          ((C278 * C93 + C277 * C81 + C279 * C95 + C280 * C82) * C79308 *
               C79027 * C12991 -
           (C2761 * C82 + C2762 * C95 + C1010 * C81 + C1009 * C93) * C79308 *
               C79027 * C79072) *
              C79283 +
          ((C2762 * C93 + C2761 * C81 + (C245 * C2609 + C79307 * C2754) * C95 +
            (C245 * C2610 + C79307 * C2755) * C82) *
               C79308 * C79027 * C79072 -
           (C281 * C82 + C282 * C95 + C280 * C81 + C279 * C93) * C79308 *
               C79027 * C12991) *
              C79263)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C245 * C96 + C79307 * C246) * C93 +
            (C245 * C102 + C79307 * C252) * C81 + C275 * C95 + C276 * C82) *
               C79308 * C79027 * C79310 -
           (C1005 * C82 + C1006 * C95 + (C245 * C757 + C79307 * C981) * C81 +
            (C245 * C749 + C79307 * C973) * C93) *
               C79308 * C79027 * C79303 +
           ((C245 * C750 + C79307 * C974) * C93 +
            (C245 * C758 + C79307 * C982) * C81 + C1007 * C95 + C1008 * C82) *
               C79308 * C79027 * C79290 -
           (C6953 * C82 + C6954 * C95 + (C245 * C5572 + C79307 * C5680) * C81 +
            (C245 * C5568 + C79307 * C5676) * C93) *
               C79308 * C79027 * C79269) *
              C13595 +
          ((C1006 * C93 + C1005 * C81 + C1009 * C95 + C1010 * C82) * C79308 *
               C79027 * C79303 -
           (C277 * C82 + C278 * C95 + C276 * C81 + C275 * C93) * C79308 *
               C79027 * C79310 -
           (C1011 * C82 + C1012 * C95 + C1008 * C81 + C1007 * C93) * C79308 *
               C79027 * C79290 +
           (C6954 * C93 + C6953 * C81 + (C245 * C6801 + C79307 * C6946) * C95 +
            (C245 * C6802 + C79307 * C6947) * C82) *
               C79308 * C79027 * C79269) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eeyx[4] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C166 +
            (C93 * C167 + C81 * C324 + C95 * C168 + C82 * C325) * C79308) *
               C79307 * C79027 * C12991 -
           ((C95 * C858 + C82 * C1086 + C93 * C859 + C81 * C1087) * C79308 +
            (C95 * C748 + C82 * C756 + C93 * C749 + C81 * C757) * C166) *
               C79307 * C79027 * C79072) *
              C79309 +
          (((C93 * C748 + C81 * C756 + C95 * C752 + C82 * C760) * C166 +
            (C93 * C858 + C81 * C1086 + C95 * C862 + C82 * C1090) * C79308) *
               C79307 * C79027 * C79072 -
           ((C95 * C169 + C82 * C326 + C93 * C168 + C81 * C325) * C79308 +
            (C95 * C98 + C82 * C104 + C93 * C97 + C81 * C103) * C166) *
               C79307 * C79027 * C12991) *
              C79299 +
          (((C93 * C98 + C81 * C104 + C95 * C99 + C82 * C105) * C166 +
            (C93 * C169 + C81 * C326 + C95 * C170 + C82 * C327) * C79308) *
               C79307 * C79027 * C12991 -
           ((C95 * C864 + C82 * C1092 + C93 * C862 + C81 * C1090) * C79308 +
            (C95 * C754 + C82 * C762 + C93 * C752 + C81 * C760) * C166) *
               C79307 * C79027 * C79072) *
              C79283 +
          (((C93 * C754 + C81 * C762 + C95 * C2609 + C82 * C2610) * C166 +
            (C93 * C864 + C81 * C1092 + C95 * C2680 + C82 * C2828) * C79308) *
               C79307 * C79027 * C79072 -
           ((C95 * C171 + C82 * C328 + C93 * C170 + C81 * C327) * C79308 +
            (C95 * C100 + C82 * C106 + C93 * C99 + C81 * C105) * C166) *
               C79307 * C79027 * C12991) *
              C79263)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C166 +
            (C93 * C167 + C81 * C324 + C95 * C168 + C82 * C325) * C79308) *
               C79307 * C79027 * C79310 -
           ((C95 * C858 + C82 * C1086 + C93 * C859 + C81 * C1087) * C79308 +
            (C95 * C748 + C82 * C756 + C93 * C749 + C81 * C757) * C166) *
               C79307 * C79027 * C79303 +
           ((C93 * C750 + C81 * C758 + C95 * C751 + C82 * C759) * C166 +
            (C93 * C860 + C81 * C1088 + C95 * C861 + C82 * C1089) * C79308) *
               C79307 * C79027 * C79290 -
           ((C95 * C5625 + C82 * C5725 + C93 * C5626 + C81 * C5726) * C79308 +
            (C95 * C5567 + C82 * C5571 + C93 * C5568 + C81 * C5572) * C166) *
               C79307 * C79027 * C79269) *
              C13595 +
          (((C93 * C748 + C81 * C756 + C95 * C752 + C82 * C760) * C166 +
            (C93 * C858 + C81 * C1086 + C95 * C862 + C82 * C1090) * C79308) *
               C79307 * C79027 * C79303 -
           ((C95 * C169 + C82 * C326 + C93 * C168 + C81 * C325) * C79308 +
            (C95 * C98 + C82 * C104 + C93 * C97 + C81 * C103) * C166) *
               C79307 * C79027 * C79310 -
           ((C95 * C863 + C82 * C1091 + C93 * C861 + C81 * C1089) * C79308 +
            (C95 * C753 + C82 * C761 + C93 * C751 + C81 * C759) * C166) *
               C79307 * C79027 * C79290 +
           ((C93 * C5567 + C81 * C5571 + C95 * C6801 + C82 * C6802) * C166 +
            (C93 * C5625 + C81 * C5725 + C95 * C6872 + C82 * C7020) * C79308) *
               C79307 * C79027 * C79269) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eeyy[4] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C372 * C96 + C380 + C380 + C79308 * C373) * C81 + C402 * C82) *
               C79307 * C79027 * C12991 -
           (C1201 * C82 +
            (C372 * C749 + C1180 + C1180 + C79308 * C1169) * C81) *
               C79307 * C79027 * C79072) *
              C79309 +
          ((C1201 * C81 + C1203 * C82) * C79307 * C79027 * C79072 -
           (C403 * C82 + C402 * C81) * C79307 * C79027 * C12991) *
              C79299 +
          ((C403 * C81 + C404 * C82) * C79307 * C79027 * C12991 -
           (C2902 * C82 + C1203 * C81) * C79307 * C79027 * C79072) *
              C79283 +
          ((C2902 * C81 +
            (C372 * C2609 + C2899 + C2899 + C79308 * C2895) * C82) *
               C79307 * C79027 * C79072 -
           (C405 * C82 + C404 * C81) * C79307 * C79027 * C12991) *
              C79263)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C372 * C96 + C380 + C380 + C79308 * C373) * C81 + C402 * C82) *
               C79307 * C79027 * C79310 -
           (C1201 * C82 +
            (C372 * C749 + C1180 + C1180 + C79308 * C1169) * C81) *
               C79307 * C79027 * C79303 +
           ((C372 * C750 + C1181 + C1181 + C79308 * C1170) * C81 +
            C1202 * C82) *
               C79307 * C79027 * C79290 -
           (C7094 * C82 +
            (C372 * C5568 + C5777 + C5777 + C79308 * C5772) * C81) *
               C79307 * C79027 * C79269) *
              C13595 +
          ((C1201 * C81 + C1203 * C82) * C79307 * C79027 * C79303 -
           (C403 * C82 + C402 * C81) * C79307 * C79027 * C79310 -
           (C1204 * C82 + C1202 * C81) * C79307 * C79027 * C79290 +
           (C7094 * C81 +
            (C372 * C6801 + C7091 + C7091 + C79308 * C7087) * C82) *
               C79307 * C79027 * C79269) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[4] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C245 * C96 + C79307 * C246) * C166 +
             (C245 * C167 + C79307 * C447) * C79308) *
                C81 +
            (C454 + C470) * C82) *
               C79027 * C12991 -
           ((C1303 + C1289) * C82 + ((C245 * C859 + C79307 * C1279) * C79308 +
                                     (C245 * C749 + C79307 * C973) * C166) *
                                        C81) *
               C79027 * C79072) *
              C79309 +
          (((C1289 + C1303) * C81 + (C1293 + C1305) * C82) * C79027 * C79072 -
           ((C471 + C459) * C82 + (C470 + C454) * C81) * C79027 * C12991) *
              C79299 +
          (((C459 + C471) * C81 + (C460 + C472) * C82) * C79027 * C12991 -
           ((C2974 + C2972) * C82 + (C1305 + C1293) * C81) * C79027 * C79072) *
              C79283 +
          (((C2972 + C2974) * C81 + ((C245 * C2609 + C79307 * C2754) * C166 +
                                     (C245 * C2680 + C79307 * C2968) * C79308) *
                                        C82) *
               C79027 * C79072 -
           ((C473 + C465) * C82 + (C472 + C460) * C81) * C79027 * C12991) *
              C79263)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C245 * C96 + C79307 * C246) * C166 +
             (C245 * C167 + C79307 * C447) * C79308) *
                C81 +
            (C454 + C470) * C82) *
               C79027 * C79310 -
           ((C1303 + C1289) * C82 + ((C245 * C859 + C79307 * C1279) * C79308 +
                                     (C245 * C749 + C79307 * C973) * C166) *
                                        C81) *
               C79027 * C79303 +
           (((C245 * C750 + C79307 * C974) * C166 +
             (C245 * C860 + C79307 * C1280) * C79308) *
                C81 +
            (C1290 + C1304) * C82) *
               C79027 * C79290 -
           ((C7166 + C7164) * C82 + ((C245 * C5626 + C79307 * C5822) * C79308 +
                                     (C245 * C5568 + C79307 * C5676) * C166) *
                                        C81) *
               C79027 * C79269) *
              C13595 +
          (((C1289 + C1303) * C81 + (C1293 + C1305) * C82) * C79027 * C79303 -
           ((C471 + C459) * C82 + (C470 + C454) * C81) * C79027 * C79310 -
           ((C1306 + C1298) * C82 + (C1304 + C1290) * C81) * C79027 * C79290 +
           ((C7164 + C7166) * C81 + ((C245 * C6801 + C79307 * C6946) * C166 +
                                     (C245 * C6872 + C79307 * C7160) * C79308) *
                                        C82) *
               C79027 * C79269) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eezx[4] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C245 +
            (C93 * C246 + C81 * C515 + C95 * C247 + C82 * C516) * C79307) *
               C79308 * C79027 * C12991 -
           ((C95 * C972 + C82 * C1380 + C93 * C973 + C81 * C1381) * C79307 +
            (C95 * C748 + C82 * C756 + C93 * C749 + C81 * C757) * C245) *
               C79308 * C79027 * C79072) *
              C79309 +
          (((C93 * C748 + C81 * C756 + C95 * C752 + C82 * C760) * C245 +
            (C93 * C972 + C81 * C1380 + C95 * C976 + C82 * C1384) * C79307) *
               C79308 * C79027 * C79072 -
           ((C95 * C248 + C82 * C517 + C93 * C247 + C81 * C516) * C79307 +
            (C95 * C98 + C82 * C104 + C93 * C97 + C81 * C103) * C245) *
               C79308 * C79027 * C12991) *
              C79299 +
          (((C93 * C98 + C81 * C104 + C95 * C99 + C82 * C105) * C245 +
            (C93 * C248 + C81 * C517 + C95 * C249 + C82 * C518) * C79307) *
               C79308 * C79027 * C12991 -
           ((C95 * C978 + C82 * C1386 + C93 * C976 + C81 * C1384) * C79307 +
            (C95 * C754 + C82 * C762 + C93 * C752 + C81 * C760) * C245) *
               C79308 * C79027 * C79072) *
              C79283 +
          (((C93 * C754 + C81 * C762 + C95 * C2609 + C82 * C2610) * C245 +
            (C93 * C978 + C81 * C1386 + C95 * C2754 + C82 * C3040) * C79307) *
               C79308 * C79027 * C79072 -
           ((C95 * C250 + C82 * C519 + C93 * C249 + C81 * C518) * C79307 +
            (C95 * C100 + C82 * C106 + C93 * C99 + C81 * C105) * C245) *
               C79308 * C79027 * C12991) *
              C79263)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C245 +
            (C93 * C246 + C81 * C515 + C95 * C247 + C82 * C516) * C79307) *
               C79308 * C79027 * C79310 -
           ((C95 * C972 + C82 * C1380 + C93 * C973 + C81 * C1381) * C79307 +
            (C95 * C748 + C82 * C756 + C93 * C749 + C81 * C757) * C245) *
               C79308 * C79027 * C79303 +
           ((C93 * C750 + C81 * C758 + C95 * C751 + C82 * C759) * C245 +
            (C93 * C974 + C81 * C1382 + C95 * C975 + C82 * C1383) * C79307) *
               C79308 * C79027 * C79290 -
           ((C95 * C5675 + C82 * C5867 + C93 * C5676 + C81 * C5868) * C79307 +
            (C95 * C5567 + C82 * C5571 + C93 * C5568 + C81 * C5572) * C245) *
               C79308 * C79027 * C79269) *
              C13595 +
          (((C93 * C748 + C81 * C756 + C95 * C752 + C82 * C760) * C245 +
            (C93 * C972 + C81 * C1380 + C95 * C976 + C82 * C1384) * C79307) *
               C79308 * C79027 * C79303 -
           ((C95 * C248 + C82 * C517 + C93 * C247 + C81 * C516) * C79307 +
            (C95 * C98 + C82 * C104 + C93 * C97 + C81 * C103) * C245) *
               C79308 * C79027 * C79310 -
           ((C95 * C977 + C82 * C1385 + C93 * C975 + C81 * C1383) * C79307 +
            (C95 * C753 + C82 * C761 + C93 * C751 + C81 * C759) * C245) *
               C79308 * C79027 * C79290 +
           ((C93 * C5567 + C81 * C5571 + C95 * C6801 + C82 * C6802) * C245 +
            (C93 * C5675 + C81 * C5867 + C95 * C6946 + C82 * C7232) * C79307) *
               C79308 * C79027 * C79269) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eezy[4] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C166 * C96 + C79308 * C167) * C245 +
             (C166 * C246 + C79308 * C563) * C79307) *
                C81 +
            (C570 + C586) * C82) *
               C79027 * C12991 -
           ((C1487 + C1473) * C82 + ((C166 * C973 + C79308 * C1463) * C79307 +
                                     (C166 * C749 + C79308 * C859) * C245) *
                                        C81) *
               C79027 * C79072) *
              C79309 +
          (((C1473 + C1487) * C81 + (C1477 + C1489) * C82) * C79027 * C79072 -
           ((C587 + C575) * C82 + (C586 + C570) * C81) * C79027 * C12991) *
              C79299 +
          (((C575 + C587) * C81 + (C576 + C588) * C82) * C79027 * C12991 -
           ((C3113 + C3111) * C82 + (C1489 + C1477) * C81) * C79027 * C79072) *
              C79283 +
          (((C3111 + C3113) * C81 + ((C166 * C2609 + C79308 * C2680) * C245 +
                                     (C166 * C2754 + C79308 * C3107) * C79307) *
                                        C82) *
               C79027 * C79072 -
           ((C589 + C581) * C82 + (C588 + C576) * C81) * C79027 * C12991) *
              C79263)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C166 * C96 + C79308 * C167) * C245 +
             (C166 * C246 + C79308 * C563) * C79307) *
                C81 +
            (C570 + C586) * C82) *
               C79027 * C79310 -
           ((C1487 + C1473) * C82 + ((C166 * C973 + C79308 * C1463) * C79307 +
                                     (C166 * C749 + C79308 * C859) * C245) *
                                        C81) *
               C79027 * C79303 +
           (((C166 * C750 + C79308 * C860) * C245 +
             (C166 * C974 + C79308 * C1464) * C79307) *
                C81 +
            (C1474 + C1488) * C82) *
               C79027 * C79290 -
           ((C7305 + C7303) * C82 + ((C166 * C5676 + C79308 * C5914) * C79307 +
                                     (C166 * C5568 + C79308 * C5626) * C245) *
                                        C81) *
               C79027 * C79269) *
              C13595 +
          (((C1473 + C1487) * C81 + (C1477 + C1489) * C82) * C79027 * C79303 -
           ((C587 + C575) * C82 + (C586 + C570) * C81) * C79027 * C79310 -
           ((C1490 + C1482) * C82 + (C1488 + C1474) * C81) * C79027 * C79290 +
           ((C7303 + C7305) * C81 + ((C166 * C6801 + C79308 * C6872) * C245 +
                                     (C166 * C6946 + C79308 * C7299) * C79307) *
                                        C82) *
               C79027 * C79269) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eezz[4] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C631 * C96 + C639 + C639 + C79307 * C632) * C79308 * C81 +
            C665 * C82) *
               C79027 * C12991 -
           (C1601 * C82 +
            (C631 * C749 + C1576 + C1576 + C79307 * C1565) * C79308 * C81) *
               C79027 * C79072) *
              C79309 +
          ((C1601 * C81 + C1603 * C82) * C79027 * C79072 -
           (C666 * C82 + C665 * C81) * C79027 * C12991) *
              C79299 +
          ((C666 * C81 + C667 * C82) * C79027 * C12991 -
           (C3187 * C82 + C1603 * C81) * C79027 * C79072) *
              C79283 +
          ((C3187 * C81 +
            (C631 * C2609 + C3183 + C3183 + C79307 * C3179) * C79308 * C82) *
               C79027 * C79072 -
           (C668 * C82 + C667 * C81) * C79027 * C12991) *
              C79263)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C631 * C96 + C639 + C639 + C79307 * C632) * C79308 * C81 +
            C665 * C82) *
               C79027 * C79310 -
           (C1601 * C82 +
            (C631 * C749 + C1576 + C1576 + C79307 * C1565) * C79308 * C81) *
               C79027 * C79303 +
           ((C631 * C750 + C1577 + C1577 + C79307 * C1566) * C79308 * C81 +
            C1602 * C82) *
               C79027 * C79290 -
           (C7379 * C82 +
            (C631 * C5568 + C5965 + C5965 + C79307 * C5960) * C79308 * C81) *
               C79027 * C79269) *
              C13595 +
          ((C1601 * C81 + C1603 * C82) * C79027 * C79303 -
           (C666 * C82 + C665 * C81) * C79027 * C79310 -
           (C1604 * C82 + C1602 * C81) * C79027 * C79290 +
           (C7379 * C81 +
            (C631 * C6801 + C7375 + C7375 + C79307 * C7371) * C79308 * C82) *
               C79027 * C79269) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eexx[5] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C92 * C96 + C115 + C115 + C81 * C108 + C94 * C97 + C116 +
                      C116 + C82 * C109) *
                         C79307 * C79308 * C17509 -
                     (C94 * C1681 + C1706 + C1706 + C82 * C1697 + C92 * C1682 +
                      C1707 + C1707 + C81 * C1698) *
                         C79307 * C79308 * C79114) *
                        C79068 +
                    ((C92 * C3931 + C3944 + C3944 + C81 * C3939 + C94 * C3932 +
                      C3945 + C3945 + C82 * C3940) *
                         C79307 * C79308 * C79114 -
                     (C94 * C748 + C773 + C773 + C82 * C764 + C92 * C749 +
                      C774 + C774 + C81 * C765) *
                         C79307 * C79308 * C17509) *
                        C79075 +
                    ((C92 * C750 + C775 + C775 + C81 * C766 + C94 * C751 +
                      C776 + C776 + C82 * C767) *
                         C79307 * C79308 * C17509 -
                     (C94 * C6043 + C6062 + C6062 + C82 * C6055 + C92 * C6044 +
                      C6063 + C6063 + C81 * C6056) *
                         C79307 * C79308 * C79114) *
                        C15083) *
                       C79215 +
                   (((C92 * C1681 + C1710 + C1710 + C81 * C1697 + C94 * C1685 +
                      C1711 + C1711 + C82 * C1701) *
                         C79307 * C79308 * C79114 -
                     (C94 * C98 + C117 + C117 + C82 * C110 + C92 * C97 + C118 +
                      C118 + C81 * C109) *
                         C79307 * C79308 * C17509) *
                        C79068 +
                    ((C92 * C748 + C777 + C777 + C81 * C764 + C94 * C752 +
                      C778 + C778 + C82 * C768) *
                         C79307 * C79308 * C17509 -
                     (C94 * C3933 + C3946 + C3946 + C82 * C3941 + C92 * C3932 +
                      C3947 + C3947 + C81 * C3940) *
                         C79307 * C79308 * C79114) *
                        C79075 +
                    ((C92 * C6043 + C7481 + C7481 + C81 * C6055 + C94 * C7477 +
                      C7482 + C7482 + C82 * C7479) *
                         C79307 * C79308 * C79114 -
                     (C94 * C753 + C779 + C779 + C82 * C769 + C92 * C751 +
                      C780 + C780 + C81 * C767) *
                         C79307 * C79308 * C17509) *
                        C15083) *
                       C78992)) /
                 (p * q * std::sqrt(p + q));
    d2eexy[5] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C166 * C96 + C79308 * C167) * C93 +
             (C166 * C102 + C79308 * C173) * C81 + C196 * C95 + C197 * C82) *
                C79307 * C17509 -
            (C1824 * C82 + C1825 * C95 + (C166 * C1690 + C79308 * C1800) * C81 +
             (C166 * C1682 + C79308 * C1792) * C93) *
                C79307 * C79114) *
               C79068 +
           (((C166 * C3931 + C79308 * C4047) * C93 +
             (C166 * C3935 + C79308 * C4051) * C81 + C4064 * C95 +
             C4065 * C82) *
                C79307 * C79114 -
            (C891 * C82 + C892 * C95 + (C166 * C757 + C79308 * C867) * C81 +
             (C166 * C749 + C79308 * C859) * C93) *
                C79307 * C17509) *
               C79075 +
           (((C166 * C750 + C79308 * C860) * C93 +
             (C166 * C758 + C79308 * C868) * C81 + C893 * C95 + C894 * C82) *
                C79307 * C17509 -
            (C7587 * C82 + C7588 * C95 + (C166 * C6050 + C79308 * C6148) * C81 +
             (C166 * C6044 + C79308 * C6142) * C93) *
                C79307 * C79114) *
               C15083) *
              C79215 +
          (((C1825 * C93 + C1824 * C81 + C1828 * C95 + C1829 * C82) * C79307 *
                C79114 -
            (C198 * C82 + C199 * C95 + C197 * C81 + C196 * C93) * C79307 *
                C17509) *
               C79068 +
           ((C892 * C93 + C891 * C81 + C895 * C95 + C896 * C82) * C79307 *
                C17509 -
            (C4066 * C82 + C4067 * C95 + C4065 * C81 + C4064 * C93) * C79307 *
                C79114) *
               C79075 +
           ((C7588 * C93 + C7587 * C81 + (C166 * C7477 + C79308 * C7580) * C95 +
             (C166 * C7478 + C79308 * C7581) * C82) *
                C79307 * C79114 -
            (C897 * C82 + C898 * C95 + C894 * C81 + C893 * C93) * C79307 *
                C17509) *
               C15083) *
              C78992)) /
        (p * q * std::sqrt(p + q));
    d2eexz[5] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C245 * C96 + C79307 * C246) * C93 +
             (C245 * C102 + C79307 * C252) * C81 + C275 * C95 + C276 * C82) *
                C79308 * C17509 -
            (C1938 * C82 + C1939 * C95 + (C245 * C1690 + C79307 * C1914) * C81 +
             (C245 * C1682 + C79307 * C1906) * C93) *
                C79308 * C79114) *
               C79068 +
           (((C245 * C3931 + C79307 * C4165) * C93 +
             (C245 * C3935 + C79307 * C4169) * C81 + C4182 * C95 +
             C4183 * C82) *
                C79308 * C79114 -
            (C1005 * C82 + C1006 * C95 + (C245 * C757 + C79307 * C981) * C81 +
             (C245 * C749 + C79307 * C973) * C93) *
                C79308 * C17509) *
               C79075 +
           (((C245 * C750 + C79307 * C974) * C93 +
             (C245 * C758 + C79307 * C982) * C81 + C1007 * C95 + C1008 * C82) *
                C79308 * C17509 -
            (C7693 * C82 + C7694 * C95 + (C245 * C6050 + C79307 * C6234) * C81 +
             (C245 * C6044 + C79307 * C6228) * C93) *
                C79308 * C79114) *
               C15083) *
              C79215 +
          (((C1939 * C93 + C1938 * C81 + C1942 * C95 + C1943 * C82) * C79308 *
                C79114 -
            (C277 * C82 + C278 * C95 + C276 * C81 + C275 * C93) * C79308 *
                C17509) *
               C79068 +
           ((C1006 * C93 + C1005 * C81 + C1009 * C95 + C1010 * C82) * C79308 *
                C17509 -
            (C4184 * C82 + C4185 * C95 + C4183 * C81 + C4182 * C93) * C79308 *
                C79114) *
               C79075 +
           ((C7694 * C93 + C7693 * C81 + (C245 * C7477 + C79307 * C7686) * C95 +
             (C245 * C7478 + C79307 * C7687) * C82) *
                C79308 * C79114 -
            (C1011 * C82 + C1012 * C95 + C1008 * C81 + C1007 * C93) * C79308 *
                C17509) *
               C15083) *
              C78992)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[5] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C166 +
             (C93 * C167 + C81 * C324 + C95 * C168 + C82 * C325) * C79308) *
                C79307 * C17509 -
            ((C95 * C1791 + C82 * C2019 + C93 * C1792 + C81 * C2020) * C79308 +
             (C95 * C1681 + C82 * C1689 + C93 * C1682 + C81 * C1690) * C166) *
                C79307 * C79114) *
               C79068 +
           (((C93 * C3931 + C81 * C3935 + C95 * C3932 + C82 * C3936) * C166 +
             (C93 * C4047 + C81 * C4283 + C95 * C4048 + C82 * C4284) * C79308) *
                C79307 * C79114 -
            ((C95 * C858 + C82 * C1086 + C93 * C859 + C81 * C1087) * C79308 +
             (C95 * C748 + C82 * C756 + C93 * C749 + C81 * C757) * C166) *
                C79307 * C17509) *
               C79075 +
           (((C93 * C750 + C81 * C758 + C95 * C751 + C82 * C759) * C166 +
             (C93 * C860 + C81 * C1088 + C95 * C861 + C82 * C1089) * C79308) *
                C79307 * C17509 -
            ((C95 * C6141 + C82 * C6313 + C93 * C6142 + C81 * C6314) * C79308 +
             (C95 * C6043 + C82 * C6049 + C93 * C6044 + C81 * C6050) * C166) *
                C79307 * C79114) *
               C15083) *
              C79215 +
          ((((C93 * C1681 + C81 * C1689 + C95 * C1685 + C82 * C1693) * C166 +
             (C93 * C1791 + C81 * C2019 + C95 * C1795 + C82 * C2023) * C79308) *
                C79307 * C79114 -
            ((C95 * C169 + C82 * C326 + C93 * C168 + C81 * C325) * C79308 +
             (C95 * C98 + C82 * C104 + C93 * C97 + C81 * C103) * C166) *
                C79307 * C17509) *
               C79068 +
           (((C93 * C748 + C81 * C756 + C95 * C752 + C82 * C760) * C166 +
             (C93 * C858 + C81 * C1086 + C95 * C862 + C82 * C1090) * C79308) *
                C79307 * C17509 -
            ((C95 * C4049 + C82 * C4285 + C93 * C4048 + C81 * C4284) * C79308 +
             (C95 * C3933 + C82 * C3937 + C93 * C3932 + C81 * C3936) * C166) *
                C79307 * C79114) *
               C79075 +
           (((C93 * C6043 + C81 * C6049 + C95 * C7477 + C82 * C7478) * C166 +
             (C93 * C6141 + C81 * C6313 + C95 * C7580 + C82 * C7792) * C79308) *
                C79307 * C79114 -
            ((C95 * C863 + C82 * C1091 + C93 * C861 + C81 * C1089) * C79308 +
             (C95 * C753 + C82 * C761 + C93 * C751 + C81 * C759) * C166) *
                C79307 * C17509) *
               C15083) *
              C78992)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[5] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C372 * C96 + C380 + C380 + C79308 * C373) * C81 + C402 * C82) *
                C79307 * C17509 -
            (C2134 * C82 +
             (C372 * C1682 + C2113 + C2113 + C79308 * C2102) * C81) *
                C79307 * C79114) *
               C79068 +
           (((C372 * C3931 + C4390 + C4390 + C79308 * C4385) * C81 +
             C4402 * C82) *
                C79307 * C79114 -
            (C1201 * C82 +
             (C372 * C749 + C1180 + C1180 + C79308 * C1169) * C81) *
                C79307 * C17509) *
               C79075 +
           (((C372 * C750 + C1181 + C1181 + C79308 * C1170) * C81 +
             C1202 * C82) *
                C79307 * C17509 -
            (C7898 * C82 +
             (C372 * C6044 + C6401 + C6401 + C79308 * C6394) * C81) *
                C79307 * C79114) *
               C15083) *
              C79215 +
          (((C2134 * C81 + C2136 * C82) * C79307 * C79114 -
            (C403 * C82 + C402 * C81) * C79307 * C17509) *
               C79068 +
           ((C1201 * C81 + C1203 * C82) * C79307 * C17509 -
            (C4403 * C82 + C4402 * C81) * C79307 * C79114) *
               C79075 +
           ((C7898 * C81 +
             (C372 * C7477 + C7895 + C7895 + C79308 * C7891) * C82) *
                C79307 * C79114 -
            (C1204 * C82 + C1202 * C81) * C79307 * C17509) *
               C15083) *
              C78992)) /
        (p * q * std::sqrt(p + q));
    d2eeyz[5] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C245 * C96 + C79307 * C246) * C166 +
              (C245 * C167 + C79307 * C447) * C79308) *
                 C81 +
             (C454 + C470) * C82) *
                C17509 -
            ((C2236 + C2222) * C82 + ((C245 * C1792 + C79307 * C2212) * C79308 +
                                      (C245 * C1682 + C79307 * C1906) * C166) *
                                         C81) *
                C79114) *
               C79068 +
           ((((C245 * C3931 + C79307 * C4165) * C166 +
              (C245 * C4047 + C79307 * C4501) * C79308) *
                 C81 +
             (C4506 + C4514) * C82) *
                C79114 -
            ((C1303 + C1289) * C82 + ((C245 * C859 + C79307 * C1279) * C79308 +
                                      (C245 * C749 + C79307 * C973) * C166) *
                                         C81) *
                C17509) *
               C79075 +
           ((((C245 * C750 + C79307 * C974) * C166 +
              (C245 * C860 + C79307 * C1280) * C79308) *
                 C81 +
             (C1290 + C1304) * C82) *
                C17509 -
            ((C8002 + C8000) * C82 + ((C245 * C6142 + C79307 * C6480) * C79308 +
                                      (C245 * C6044 + C79307 * C6228) * C166) *
                                         C81) *
                C79114) *
               C15083) *
              C79215 +
          ((((C2222 + C2236) * C81 + (C2226 + C2238) * C82) * C79114 -
            ((C471 + C459) * C82 + (C470 + C454) * C81) * C17509) *
               C79068 +
           (((C1289 + C1303) * C81 + (C1293 + C1305) * C82) * C17509 -
            ((C4515 + C4511) * C82 + (C4514 + C4506) * C81) * C79114) *
               C79075 +
           (((C8000 + C8002) * C81 +
             ((C245 * C7477 + C79307 * C7686) * C166 +
              (C245 * C7580 + C79307 * C7996) * C79308) *
                 C82) *
                C79114 -
            ((C1306 + C1298) * C82 + (C1304 + C1290) * C81) * C17509) *
               C15083) *
              C78992)) /
        (p * q * std::sqrt(p + q));
    d2eezx[5] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C245 +
             (C93 * C246 + C81 * C515 + C95 * C247 + C82 * C516) * C79307) *
                C79308 * C17509 -
            ((C95 * C1905 + C82 * C2313 + C93 * C1906 + C81 * C2314) * C79307 +
             (C95 * C1681 + C82 * C1689 + C93 * C1682 + C81 * C1690) * C245) *
                C79308 * C79114) *
               C79068 +
           (((C93 * C3931 + C81 * C3935 + C95 * C3932 + C82 * C3936) * C245 +
             (C93 * C4165 + C81 * C4613 + C95 * C4166 + C82 * C4614) * C79307) *
                C79308 * C79114 -
            ((C95 * C972 + C82 * C1380 + C93 * C973 + C81 * C1381) * C79307 +
             (C95 * C748 + C82 * C756 + C93 * C749 + C81 * C757) * C245) *
                C79308 * C17509) *
               C79075 +
           (((C93 * C750 + C81 * C758 + C95 * C751 + C82 * C759) * C245 +
             (C93 * C974 + C81 * C1382 + C95 * C975 + C82 * C1383) * C79307) *
                C79308 * C17509 -
            ((C95 * C6227 + C82 * C6559 + C93 * C6228 + C81 * C6560) * C79307 +
             (C95 * C6043 + C82 * C6049 + C93 * C6044 + C81 * C6050) * C245) *
                C79308 * C79114) *
               C15083) *
              C79215 +
          ((((C93 * C1681 + C81 * C1689 + C95 * C1685 + C82 * C1693) * C245 +
             (C93 * C1905 + C81 * C2313 + C95 * C1909 + C82 * C2317) * C79307) *
                C79308 * C79114 -
            ((C95 * C248 + C82 * C517 + C93 * C247 + C81 * C516) * C79307 +
             (C95 * C98 + C82 * C104 + C93 * C97 + C81 * C103) * C245) *
                C79308 * C17509) *
               C79068 +
           (((C93 * C748 + C81 * C756 + C95 * C752 + C82 * C760) * C245 +
             (C93 * C972 + C81 * C1380 + C95 * C976 + C82 * C1384) * C79307) *
                C79308 * C17509 -
            ((C95 * C4167 + C82 * C4615 + C93 * C4166 + C81 * C4614) * C79307 +
             (C95 * C3933 + C82 * C3937 + C93 * C3932 + C81 * C3936) * C245) *
                C79308 * C79114) *
               C79075 +
           (((C93 * C6043 + C81 * C6049 + C95 * C7477 + C82 * C7478) * C245 +
             (C93 * C6227 + C81 * C6559 + C95 * C7686 + C82 * C8100) * C79307) *
                C79308 * C79114 -
            ((C95 * C977 + C82 * C1385 + C93 * C975 + C81 * C1383) * C79307 +
             (C95 * C753 + C82 * C761 + C93 * C751 + C81 * C759) * C245) *
                C79308 * C17509) *
               C15083) *
              C78992)) /
        (p * q * std::sqrt(p + q));
    d2eezy[5] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C166 * C96 + C79308 * C167) * C245 +
              (C166 * C246 + C79308 * C563) * C79307) *
                 C81 +
             (C570 + C586) * C82) *
                C17509 -
            ((C2420 + C2406) * C82 + ((C166 * C1906 + C79308 * C2396) * C79307 +
                                      (C166 * C1682 + C79308 * C1792) * C245) *
                                         C81) *
                C79114) *
               C79068 +
           ((((C166 * C3931 + C79308 * C4047) * C245 +
              (C166 * C4165 + C79308 * C4715) * C79307) *
                 C81 +
             (C4720 + C4728) * C82) *
                C79114 -
            ((C1487 + C1473) * C82 + ((C166 * C973 + C79308 * C1463) * C79307 +
                                      (C166 * C749 + C79308 * C859) * C245) *
                                         C81) *
                C17509) *
               C79075 +
           ((((C166 * C750 + C79308 * C860) * C245 +
              (C166 * C974 + C79308 * C1464) * C79307) *
                 C81 +
             (C1474 + C1488) * C82) *
                C17509 -
            ((C8205 + C8203) * C82 + ((C166 * C6228 + C79308 * C6640) * C79307 +
                                      (C166 * C6044 + C79308 * C6142) * C245) *
                                         C81) *
                C79114) *
               C15083) *
              C79215 +
          ((((C2406 + C2420) * C81 + (C2410 + C2422) * C82) * C79114 -
            ((C587 + C575) * C82 + (C586 + C570) * C81) * C17509) *
               C79068 +
           (((C1473 + C1487) * C81 + (C1477 + C1489) * C82) * C17509 -
            ((C4729 + C4725) * C82 + (C4728 + C4720) * C81) * C79114) *
               C79075 +
           (((C8203 + C8205) * C81 +
             ((C166 * C7477 + C79308 * C7580) * C245 +
              (C166 * C7686 + C79308 * C8199) * C79307) *
                 C82) *
                C79114 -
            ((C1490 + C1482) * C82 + (C1488 + C1474) * C81) * C17509) *
               C15083) *
              C78992)) /
        (p * q * std::sqrt(p + q));
    d2eezz[5] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C631 * C96 + C639 + C639 + C79307 * C632) * C79308 * C81 +
             C665 * C82) *
                C17509 -
            (C2534 * C82 +
             (C631 * C1682 + C2509 + C2509 + C79307 * C2498) * C79308 * C81) *
                C79114) *
               C79068 +
           (((C631 * C3931 + C4832 + C4832 + C79307 * C4827) * C79308 * C81 +
             C4846 * C82) *
                C79114 -
            (C1601 * C82 +
             (C631 * C749 + C1576 + C1576 + C79307 * C1565) * C79308 * C81) *
                C17509) *
               C79075 +
           (((C631 * C750 + C1577 + C1577 + C79307 * C1566) * C79308 * C81 +
             C1602 * C82) *
                C17509 -
            (C8311 * C82 +
             (C631 * C6044 + C6727 + C6727 + C79307 * C6720) * C79308 * C81) *
                C79114) *
               C15083) *
              C79215 +
          (((C2534 * C81 + C2536 * C82) * C79114 -
            (C666 * C82 + C665 * C81) * C17509) *
               C79068 +
           ((C1601 * C81 + C1603 * C82) * C17509 -
            (C4847 * C82 + C4846 * C81) * C79114) *
               C79075 +
           ((C8311 * C81 +
             (C631 * C7477 + C8307 + C8307 + C79307 * C8303) * C79308 * C82) *
                C79114 -
            (C1604 * C82 + C1602 * C81) * C17509) *
               C15083) *
              C78992)) /
        (p * q * std::sqrt(p + q));
    d2eexx[6] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((C92 * C96 + C115 + C115 + C81 * C108 + C94 * C97 + C116 +
                     C116 + C82 * C109) *
                        C79307 * C79308 * C79110 -
                    (C94 * C1681 + C1706 + C1706 + C82 * C1697 + C92 * C1682 +
                     C1707 + C1707 + C81 * C1698) *
                        C79307 * C79308 * C79117 +
                    (C92 * C1683 + C1708 + C1708 + C81 * C1699 + C94 * C1684 +
                     C1709 + C1709 + C82 * C1700) *
                        C79307 * C79308 * C20477) *
                       C79068 +
                   ((C92 * C3931 + C3944 + C3944 + C81 * C3939 + C94 * C3932 +
                     C3945 + C3945 + C82 * C3940) *
                        C79307 * C79308 * C79117 -
                    (C94 * C748 + C773 + C773 + C82 * C764 + C92 * C749 + C774 +
                     C774 + C81 * C765) *
                        C79307 * C79308 * C79110 -
                    (C94 * C6041 + C6060 + C6060 + C82 * C6053 + C92 * C6042 +
                     C6061 + C6061 + C81 * C6054) *
                        C79307 * C79308 * C20477) *
                       C79075 +
                   ((C92 * C750 + C775 + C775 + C81 * C766 + C94 * C751 + C776 +
                     C776 + C82 * C767) *
                        C79307 * C79308 * C79110 -
                    (C94 * C6043 + C6062 + C6062 + C82 * C6055 + C92 * C6044 +
                     C6063 + C6063 + C81 * C6056) *
                        C79307 * C79308 * C79117 +
                    (C92 * C6045 + C6064 + C6064 + C81 * C6057 + C94 * C6046 +
                     C6065 + C6065 + C82 * C6058) *
                        C79307 * C79308 * C20477) *
                       C15083) *
                  C78981) /
                 (p * q * std::sqrt(p + q));
    d2eexy[6] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C166 * C96 + C79308 * C167) * C93 +
            (C166 * C102 + C79308 * C173) * C81 + C196 * C95 + C197 * C82) *
               C79307 * C79110 -
           (C1824 * C82 + C1825 * C95 + (C166 * C1690 + C79308 * C1800) * C81 +
            (C166 * C1682 + C79308 * C1792) * C93) *
               C79307 * C79117 +
           ((C166 * C1683 + C79308 * C1793) * C93 +
            (C166 * C1691 + C79308 * C1801) * C81 + C1826 * C95 + C1827 * C82) *
               C79307 * C20477) *
              C79068 +
          (((C166 * C3931 + C79308 * C4047) * C93 +
            (C166 * C3935 + C79308 * C4051) * C81 + C4064 * C95 + C4065 * C82) *
               C79307 * C79117 -
           (C891 * C82 + C892 * C95 + (C166 * C757 + C79308 * C867) * C81 +
            (C166 * C749 + C79308 * C859) * C93) *
               C79307 * C79110 -
           (C10927 * C82 + C10928 * C95 +
            (C166 * C6048 + C79308 * C6146) * C81 +
            (C166 * C6042 + C79308 * C6140) * C93) *
               C79307 * C20477) *
              C79075 +
          (((C166 * C750 + C79308 * C860) * C93 +
            (C166 * C758 + C79308 * C868) * C81 + C893 * C95 + C894 * C82) *
               C79307 * C79110 -
           (C7587 * C82 + C7588 * C95 + (C166 * C6050 + C79308 * C6148) * C81 +
            (C166 * C6044 + C79308 * C6142) * C93) *
               C79307 * C79117 +
           ((C166 * C6045 + C79308 * C6143) * C93 +
            (C166 * C6051 + C79308 * C6149) * C81 +
            (C166 * C6046 + C79308 * C6144) * C95 +
            (C166 * C6052 + C79308 * C6150) * C82) *
               C79307 * C20477) *
              C15083) *
         C78981) /
        (p * q * std::sqrt(p + q));
    d2eexz[6] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C245 * C96 + C79307 * C246) * C93 +
            (C245 * C102 + C79307 * C252) * C81 + C275 * C95 + C276 * C82) *
               C79308 * C79110 -
           (C1938 * C82 + C1939 * C95 + (C245 * C1690 + C79307 * C1914) * C81 +
            (C245 * C1682 + C79307 * C1906) * C93) *
               C79308 * C79117 +
           ((C245 * C1683 + C79307 * C1907) * C93 +
            (C245 * C1691 + C79307 * C1915) * C81 + C1940 * C95 + C1941 * C82) *
               C79308 * C20477) *
              C79068 +
          (((C245 * C3931 + C79307 * C4165) * C93 +
            (C245 * C3935 + C79307 * C4169) * C81 + C4182 * C95 + C4183 * C82) *
               C79308 * C79117 -
           (C1005 * C82 + C1006 * C95 + (C245 * C757 + C79307 * C981) * C81 +
            (C245 * C749 + C79307 * C973) * C93) *
               C79308 * C79110 -
           (C11033 * C82 + C11034 * C95 +
            (C245 * C6048 + C79307 * C6232) * C81 +
            (C245 * C6042 + C79307 * C6226) * C93) *
               C79308 * C20477) *
              C79075 +
          (((C245 * C750 + C79307 * C974) * C93 +
            (C245 * C758 + C79307 * C982) * C81 + C1007 * C95 + C1008 * C82) *
               C79308 * C79110 -
           (C7693 * C82 + C7694 * C95 + (C245 * C6050 + C79307 * C6234) * C81 +
            (C245 * C6044 + C79307 * C6228) * C93) *
               C79308 * C79117 +
           ((C245 * C6045 + C79307 * C6229) * C93 +
            (C245 * C6051 + C79307 * C6235) * C81 +
            (C245 * C6046 + C79307 * C6230) * C95 +
            (C245 * C6052 + C79307 * C6236) * C82) *
               C79308 * C20477) *
              C15083) *
         C78981) /
        (p * q * std::sqrt(p + q));
    d2eeyx[6] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C166 +
            (C93 * C167 + C81 * C324 + C95 * C168 + C82 * C325) * C79308) *
               C79307 * C79110 -
           ((C95 * C1791 + C82 * C2019 + C93 * C1792 + C81 * C2020) * C79308 +
            (C95 * C1681 + C82 * C1689 + C93 * C1682 + C81 * C1690) * C166) *
               C79307 * C79117 +
           ((C93 * C1683 + C81 * C1691 + C95 * C1684 + C82 * C1692) * C166 +
            (C93 * C1793 + C81 * C2021 + C95 * C1794 + C82 * C2022) * C79308) *
               C79307 * C20477) *
              C79068 +
          (((C93 * C3931 + C81 * C3935 + C95 * C3932 + C82 * C3936) * C166 +
            (C93 * C4047 + C81 * C4283 + C95 * C4048 + C82 * C4284) * C79308) *
               C79307 * C79117 -
           ((C95 * C858 + C82 * C1086 + C93 * C859 + C81 * C1087) * C79308 +
            (C95 * C748 + C82 * C756 + C93 * C749 + C81 * C757) * C166) *
               C79307 * C79110 -
           ((C95 * C6139 + C82 * C6311 + C93 * C6140 + C81 * C6312) * C79308 +
            (C95 * C6041 + C82 * C6047 + C93 * C6042 + C81 * C6048) * C166) *
               C79307 * C20477) *
              C79075 +
          (((C93 * C750 + C81 * C758 + C95 * C751 + C82 * C759) * C166 +
            (C93 * C860 + C81 * C1088 + C95 * C861 + C82 * C1089) * C79308) *
               C79307 * C79110 -
           ((C95 * C6141 + C82 * C6313 + C93 * C6142 + C81 * C6314) * C79308 +
            (C95 * C6043 + C82 * C6049 + C93 * C6044 + C81 * C6050) * C166) *
               C79307 * C79117 +
           ((C93 * C6045 + C81 * C6051 + C95 * C6046 + C82 * C6052) * C166 +
            (C93 * C6143 + C81 * C6315 + C95 * C6144 + C82 * C6316) * C79308) *
               C79307 * C20477) *
              C15083) *
         C78981) /
        (p * q * std::sqrt(p + q));
    d2eeyy[6] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C372 * C96 + C380 + C380 + C79308 * C373) * C81 + C402 * C82) *
               C79307 * C79110 -
           (C2134 * C82 +
            (C372 * C1682 + C2113 + C2113 + C79308 * C2102) * C81) *
               C79307 * C79117 +
           ((C372 * C1683 + C2114 + C2114 + C79308 * C2103) * C81 +
            C2135 * C82) *
               C79307 * C20477) *
              C79068 +
          (((C372 * C3931 + C4390 + C4390 + C79308 * C4385) * C81 +
            C4402 * C82) *
               C79307 * C79117 -
           (C1201 * C82 +
            (C372 * C749 + C1180 + C1180 + C79308 * C1169) * C81) *
               C79307 * C79110 -
           (C11238 * C82 +
            (C372 * C6042 + C6399 + C6399 + C79308 * C6392) * C81) *
               C79307 * C20477) *
              C79075 +
          (((C372 * C750 + C1181 + C1181 + C79308 * C1170) * C81 +
            C1202 * C82) *
               C79307 * C79110 -
           (C7898 * C82 +
            (C372 * C6044 + C6401 + C6401 + C79308 * C6394) * C81) *
               C79307 * C79117 +
           ((C372 * C6045 + C6402 + C6402 + C79308 * C6395) * C81 +
            (C372 * C6046 + C6403 + C6403 + C79308 * C6396) * C82) *
               C79307 * C20477) *
              C15083) *
         C78981) /
        (p * q * std::sqrt(p + q));
    d2eeyz[6] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C245 * C96 + C79307 * C246) * C166 +
             (C245 * C167 + C79307 * C447) * C79308) *
                C81 +
            (C454 + C470) * C82) *
               C79110 -
           ((C2236 + C2222) * C82 + ((C245 * C1792 + C79307 * C2212) * C79308 +
                                     (C245 * C1682 + C79307 * C1906) * C166) *
                                        C81) *
               C79117 +
           (((C245 * C1683 + C79307 * C1907) * C166 +
             (C245 * C1793 + C79307 * C2213) * C79308) *
                C81 +
            (C2223 + C2237) * C82) *
               C20477) *
              C79068 +
          ((((C245 * C3931 + C79307 * C4165) * C166 +
             (C245 * C4047 + C79307 * C4501) * C79308) *
                C81 +
            (C4506 + C4514) * C82) *
               C79117 -
           ((C1303 + C1289) * C82 + ((C245 * C859 + C79307 * C1279) * C79308 +
                                     (C245 * C749 + C79307 * C973) * C166) *
                                        C81) *
               C79110 -
           ((C11342 + C11340) * C82 +
            ((C245 * C6140 + C79307 * C6478) * C79308 +
             (C245 * C6042 + C79307 * C6226) * C166) *
                C81) *
               C20477) *
              C79075 +
          ((((C245 * C750 + C79307 * C974) * C166 +
             (C245 * C860 + C79307 * C1280) * C79308) *
                C81 +
            (C1290 + C1304) * C82) *
               C79110 -
           ((C8002 + C8000) * C82 + ((C245 * C6142 + C79307 * C6480) * C79308 +
                                     (C245 * C6044 + C79307 * C6228) * C166) *
                                        C81) *
               C79117 +
           (((C245 * C6045 + C79307 * C6229) * C166 +
             (C245 * C6143 + C79307 * C6481) * C79308) *
                C81 +
            ((C245 * C6046 + C79307 * C6230) * C166 +
             (C245 * C6144 + C79307 * C6482) * C79308) *
                C82) *
               C20477) *
              C15083) *
         C78981) /
        (p * q * std::sqrt(p + q));
    d2eezx[6] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C245 +
            (C93 * C246 + C81 * C515 + C95 * C247 + C82 * C516) * C79307) *
               C79308 * C79110 -
           ((C95 * C1905 + C82 * C2313 + C93 * C1906 + C81 * C2314) * C79307 +
            (C95 * C1681 + C82 * C1689 + C93 * C1682 + C81 * C1690) * C245) *
               C79308 * C79117 +
           ((C93 * C1683 + C81 * C1691 + C95 * C1684 + C82 * C1692) * C245 +
            (C93 * C1907 + C81 * C2315 + C95 * C1908 + C82 * C2316) * C79307) *
               C79308 * C20477) *
              C79068 +
          (((C93 * C3931 + C81 * C3935 + C95 * C3932 + C82 * C3936) * C245 +
            (C93 * C4165 + C81 * C4613 + C95 * C4166 + C82 * C4614) * C79307) *
               C79308 * C79117 -
           ((C95 * C972 + C82 * C1380 + C93 * C973 + C81 * C1381) * C79307 +
            (C95 * C748 + C82 * C756 + C93 * C749 + C81 * C757) * C245) *
               C79308 * C79110 -
           ((C95 * C6225 + C82 * C6557 + C93 * C6226 + C81 * C6558) * C79307 +
            (C95 * C6041 + C82 * C6047 + C93 * C6042 + C81 * C6048) * C245) *
               C79308 * C20477) *
              C79075 +
          (((C93 * C750 + C81 * C758 + C95 * C751 + C82 * C759) * C245 +
            (C93 * C974 + C81 * C1382 + C95 * C975 + C82 * C1383) * C79307) *
               C79308 * C79110 -
           ((C95 * C6227 + C82 * C6559 + C93 * C6228 + C81 * C6560) * C79307 +
            (C95 * C6043 + C82 * C6049 + C93 * C6044 + C81 * C6050) * C245) *
               C79308 * C79117 +
           ((C93 * C6045 + C81 * C6051 + C95 * C6046 + C82 * C6052) * C245 +
            (C93 * C6229 + C81 * C6561 + C95 * C6230 + C82 * C6562) * C79307) *
               C79308 * C20477) *
              C15083) *
         C78981) /
        (p * q * std::sqrt(p + q));
    d2eezy[6] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C166 * C96 + C79308 * C167) * C245 +
             (C166 * C246 + C79308 * C563) * C79307) *
                C81 +
            (C570 + C586) * C82) *
               C79110 -
           ((C2420 + C2406) * C82 + ((C166 * C1906 + C79308 * C2396) * C79307 +
                                     (C166 * C1682 + C79308 * C1792) * C245) *
                                        C81) *
               C79117 +
           (((C166 * C1683 + C79308 * C1793) * C245 +
             (C166 * C1907 + C79308 * C2397) * C79307) *
                C81 +
            (C2407 + C2421) * C82) *
               C20477) *
              C79068 +
          ((((C166 * C3931 + C79308 * C4047) * C245 +
             (C166 * C4165 + C79308 * C4715) * C79307) *
                C81 +
            (C4720 + C4728) * C82) *
               C79117 -
           ((C1487 + C1473) * C82 + ((C166 * C973 + C79308 * C1463) * C79307 +
                                     (C166 * C749 + C79308 * C859) * C245) *
                                        C81) *
               C79110 -
           ((C11545 + C11543) * C82 +
            ((C166 * C6226 + C79308 * C6638) * C79307 +
             (C166 * C6042 + C79308 * C6140) * C245) *
                C81) *
               C20477) *
              C79075 +
          ((((C166 * C750 + C79308 * C860) * C245 +
             (C166 * C974 + C79308 * C1464) * C79307) *
                C81 +
            (C1474 + C1488) * C82) *
               C79110 -
           ((C8205 + C8203) * C82 + ((C166 * C6228 + C79308 * C6640) * C79307 +
                                     (C166 * C6044 + C79308 * C6142) * C245) *
                                        C81) *
               C79117 +
           (((C166 * C6045 + C79308 * C6143) * C245 +
             (C166 * C6229 + C79308 * C6641) * C79307) *
                C81 +
            ((C166 * C6046 + C79308 * C6144) * C245 +
             (C166 * C6230 + C79308 * C6642) * C79307) *
                C82) *
               C20477) *
              C15083) *
         C78981) /
        (p * q * std::sqrt(p + q));
    d2eezz[6] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C631 * C96 + C639 + C639 + C79307 * C632) * C79308 * C81 +
            C665 * C82) *
               C79110 -
           (C2534 * C82 +
            (C631 * C1682 + C2509 + C2509 + C79307 * C2498) * C79308 * C81) *
               C79117 +
           ((C631 * C1683 + C2510 + C2510 + C79307 * C2499) * C79308 * C81 +
            C2535 * C82) *
               C20477) *
              C79068 +
          (((C631 * C3931 + C4832 + C4832 + C79307 * C4827) * C79308 * C81 +
            C4846 * C82) *
               C79117 -
           (C1601 * C82 +
            (C631 * C749 + C1576 + C1576 + C79307 * C1565) * C79308 * C81) *
               C79110 -
           (C11651 * C82 +
            (C631 * C6042 + C6725 + C6725 + C79307 * C6718) * C79308 * C81) *
               C20477) *
              C79075 +
          (((C631 * C750 + C1577 + C1577 + C79307 * C1566) * C79308 * C81 +
            C1602 * C82) *
               C79110 -
           (C8311 * C82 +
            (C631 * C6044 + C6727 + C6727 + C79307 * C6720) * C79308 * C81) *
               C79117 +
           ((C631 * C6045 + C6728 + C6728 + C79307 * C6721) * C79308 * C81 +
            (C631 * C6046 + C6729 + C6729 + C79307 * C6722) * C79308 * C82) *
               C20477) *
              C15083) *
         C78981) /
        (p * q * std::sqrt(p + q));
    d2eexx[7] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((C92 * C96 + C115 + C115 + C81 * C108 + C94 * C97 + C116 +
                     C116 + C82 * C109) *
                        C79307 * C79308 * C17509 -
                    (C94 * C1681 + C1706 + C1706 + C82 * C1697 + C92 * C1682 +
                     C1707 + C1707 + C81 * C1698) *
                        C79307 * C79308 * C79114) *
                       C79310 +
                   ((C92 * C3931 + C3944 + C3944 + C81 * C3939 + C94 * C3932 +
                     C3945 + C3945 + C82 * C3940) *
                        C79307 * C79308 * C79114 -
                    (C94 * C748 + C773 + C773 + C82 * C764 + C92 * C749 + C774 +
                     C774 + C81 * C765) *
                        C79307 * C79308 * C17509) *
                       C79303 +
                   ((C92 * C750 + C775 + C775 + C81 * C766 + C94 * C751 + C776 +
                     C776 + C82 * C767) *
                        C79307 * C79308 * C17509 -
                    (C94 * C6043 + C6062 + C6062 + C82 * C6055 + C92 * C6044 +
                     C6063 + C6063 + C81 * C6056) *
                        C79307 * C79308 * C79114) *
                       C79290 +
                   ((C92 * C8377 + C8384 + C8384 + C81 * C8381 + C94 * C8378 +
                     C8385 + C8385 + C82 * C8382) *
                        C79307 * C79308 * C79114 -
                    (C94 * C5567 + C5580 + C5580 + C82 * C5575 + C92 * C5568 +
                     C5581 + C5581 + C81 * C5576) *
                        C79307 * C79308 * C17509) *
                       C79269) *
                  C78981) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C92 * C96 + C115 + C115 + C81 * C108 + C94 * C97 + C116 +
                      C116 + C82 * C109) *
                         C79307 * C79308 * C17509 -
                     (C94 * C1681 + C1706 + C1706 + C82 * C1697 + C92 * C1682 +
                      C1707 + C1707 + C81 * C1698) *
                         C79307 * C79308 * C79114) *
                        C12991 +
                    ((C92 * C3931 + C3944 + C3944 + C81 * C3939 + C94 * C3932 +
                      C3945 + C3945 + C82 * C3940) *
                         C79307 * C79308 * C79114 -
                     (C94 * C748 + C773 + C773 + C82 * C764 + C92 * C749 +
                      C774 + C774 + C81 * C765) *
                         C79307 * C79308 * C17509) *
                        C79072) *
                       C79297 +
                   (((C92 * C1681 + C1710 + C1710 + C81 * C1697 + C94 * C1685 +
                      C1711 + C1711 + C82 * C1701) *
                         C79307 * C79308 * C79114 -
                     (C94 * C98 + C117 + C117 + C82 * C110 + C92 * C97 + C118 +
                      C118 + C81 * C109) *
                         C79307 * C79308 * C17509) *
                        C12991 +
                    ((C92 * C748 + C777 + C777 + C81 * C764 + C94 * C752 +
                      C778 + C778 + C82 * C768) *
                         C79307 * C79308 * C17509 -
                     (C94 * C3933 + C3946 + C3946 + C82 * C3941 + C92 * C3932 +
                      C3947 + C3947 + C81 * C3940) *
                         C79307 * C79308 * C79114) *
                        C79072) *
                       C79281 +
                   (((C92 * C98 + C119 + C119 + C81 * C110 + C94 * C99 + C120 +
                      C120 + C82 * C111) *
                         C79307 * C79308 * C17509 -
                     (C94 * C1687 + C1714 + C1714 + C82 * C1703 + C92 * C1685 +
                      C1715 + C1715 + C81 * C1701) *
                         C79307 * C79308 * C79114) *
                        C12991 +
                    ((C92 * C3933 + C3948 + C3948 + C81 * C3941 + C94 * C3934 +
                      C3949 + C3949 + C82 * C3942) *
                         C79307 * C79308 * C79114 -
                     (C94 * C754 + C781 + C781 + C82 * C770 + C92 * C752 +
                      C782 + C782 + C81 * C768) *
                         C79307 * C79308 * C17509) *
                        C79072) *
                       C79253)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  (((C92 * C96 + C115 + C115 + C81 * C108 + C94 * C97 + C116 +
                     C116 + C82 * C109) *
                        C79307 * C79308 * C79311 -
                    (C94 * C1681 + C1706 + C1706 + C82 * C1697 + C92 * C1682 +
                     C1707 + C1707 + C81 * C1698) *
                        C79307 * C79308 * C79305 +
                    (C92 * C1683 + C1708 + C1708 + C81 * C1699 + C94 * C1684 +
                     C1709 + C1709 + C82 * C1700) *
                        C79307 * C79308 * C79293 -
                    (C94 * C10319 + C10332 + C10332 + C82 * C10327 +
                     C92 * C10320 + C10333 + C10333 + C81 * C10328) *
                        C79307 * C79308 * C79275) *
                       C12991 +
                   ((C92 * C3931 + C3944 + C3944 + C81 * C3939 + C94 * C3932 +
                     C3945 + C3945 + C82 * C3940) *
                        C79307 * C79308 * C79305 -
                    (C94 * C748 + C773 + C773 + C82 * C764 + C92 * C749 + C774 +
                     C774 + C81 * C765) *
                        C79307 * C79308 * C79311 -
                    (C94 * C6041 + C6060 + C6060 + C82 * C6053 + C92 * C6042 +
                     C6061 + C6061 + C81 * C6054) *
                        C79307 * C79308 * C79293 +
                    (C92 * C12365 + C12372 + C12372 + C81 * C12369 +
                     C94 * C12366 + C12373 + C12373 + C82 * C12370) *
                        C79307 * C79308 * C79275) *
                       C79072) *
                  C78981) /
                     (p * q * std::sqrt(p + q));
    d2eexy[7] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C166 * C96 + C79308 * C167) * C93 +
            (C166 * C102 + C79308 * C173) * C81 + C196 * C95 + C197 * C82) *
               C79307 * C17509 -
           (C1824 * C82 + C1825 * C95 + (C166 * C1690 + C79308 * C1800) * C81 +
            (C166 * C1682 + C79308 * C1792) * C93) *
               C79307 * C79114) *
              C79310 +
          (((C166 * C3931 + C79308 * C4047) * C93 +
            (C166 * C3935 + C79308 * C4051) * C81 + C4064 * C95 + C4065 * C82) *
               C79307 * C79114 -
           (C891 * C82 + C892 * C95 + (C166 * C757 + C79308 * C867) * C81 +
            (C166 * C749 + C79308 * C859) * C93) *
               C79307 * C17509) *
              C79303 +
          (((C166 * C750 + C79308 * C860) * C93 +
            (C166 * C758 + C79308 * C868) * C81 + C893 * C95 + C894 * C82) *
               C79307 * C17509 -
           (C7587 * C82 + C7588 * C95 + (C166 * C6050 + C79308 * C6148) * C81 +
            (C166 * C6044 + C79308 * C6142) * C93) *
               C79307 * C79114) *
              C79290 +
          (((C166 * C8377 + C79308 * C8451) * C93 +
            (C166 * C8379 + C79308 * C8453) * C81 +
            (C166 * C8378 + C79308 * C8452) * C95 +
            (C166 * C8380 + C79308 * C8454) * C82) *
               C79307 * C79114 -
           (C6879 * C82 + C6880 * C95 + (C166 * C5572 + C79308 * C5630) * C81 +
            (C166 * C5568 + C79308 * C5626) * C93) *
               C79307 * C17509) *
              C79269) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C166 * C96 + C79308 * C167) * C93 +
             (C166 * C102 + C79308 * C173) * C81 + C196 * C95 + C197 * C82) *
                C79307 * C17509 -
            (C1824 * C82 + C1825 * C95 + (C166 * C1690 + C79308 * C1800) * C81 +
             (C166 * C1682 + C79308 * C1792) * C93) *
                C79307 * C79114) *
               C12991 +
           (((C166 * C3931 + C79308 * C4047) * C93 +
             (C166 * C3935 + C79308 * C4051) * C81 + C4064 * C95 +
             C4065 * C82) *
                C79307 * C79114 -
            (C891 * C82 + C892 * C95 + (C166 * C757 + C79308 * C867) * C81 +
             (C166 * C749 + C79308 * C859) * C93) *
                C79307 * C17509) *
               C79072) *
              C79297 +
          (((C1825 * C93 + C1824 * C81 + C1828 * C95 + C1829 * C82) * C79307 *
                C79114 -
            (C198 * C82 + C199 * C95 + C197 * C81 + C196 * C93) * C79307 *
                C17509) *
               C12991 +
           ((C892 * C93 + C891 * C81 + C895 * C95 + C896 * C82) * C79307 *
                C17509 -
            (C4066 * C82 + C4067 * C95 + C4065 * C81 + C4064 * C93) * C79307 *
                C79114) *
               C79072) *
              C79281 +
          (((C199 * C93 + C198 * C81 + C200 * C95 + C201 * C82) * C79307 *
                C17509 -
            (C3333 * C82 + C3334 * C95 + C1829 * C81 + C1828 * C93) * C79307 *
                C79114) *
               C12991 +
           ((C4067 * C93 + C4066 * C81 + (C166 * C3934 + C79308 * C4050) * C95 +
             (C166 * C3938 + C79308 * C4054) * C82) *
                C79307 * C79114 -
            (C2687 * C82 + C2688 * C95 + C896 * C81 + C895 * C93) * C79307 *
                C17509) *
               C79072) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C166 * C96 + C79308 * C167) * C93 +
            (C166 * C102 + C79308 * C173) * C81 + C196 * C95 + C197 * C82) *
               C79307 * C79311 -
           (C1824 * C82 + C1825 * C95 + (C166 * C1690 + C79308 * C1800) * C81 +
            (C166 * C1682 + C79308 * C1792) * C93) *
               C79307 * C79305 +
           ((C166 * C1683 + C79308 * C1793) * C93 +
            (C166 * C1691 + C79308 * C1801) * C81 + C1826 * C95 + C1827 * C82) *
               C79307 * C79293 -
           (C11799 * C82 + C11800 * C95 +
            (C166 * C10324 + C79308 * C10382) * C81 +
            (C166 * C10320 + C79308 * C10378) * C93) *
               C79307 * C79275) *
              C12991 +
          (((C166 * C3931 + C79308 * C4047) * C93 +
            (C166 * C3935 + C79308 * C4051) * C81 + C4064 * C95 + C4065 * C82) *
               C79307 * C79305 -
           (C891 * C82 + C892 * C95 + (C166 * C757 + C79308 * C867) * C81 +
            (C166 * C749 + C79308 * C859) * C93) *
               C79307 * C79311 -
           (C10927 * C82 + C10928 * C95 +
            (C166 * C6048 + C79308 * C6146) * C81 +
            (C166 * C6042 + C79308 * C6140) * C93) *
               C79307 * C79293 +
           ((C166 * C12365 + C79308 * C12439) * C93 +
            (C166 * C12367 + C79308 * C12441) * C81 +
            (C166 * C12366 + C79308 * C12440) * C95 +
            (C166 * C12368 + C79308 * C12442) * C82) *
               C79307 * C79275) *
              C79072) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eexz[7] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C245 * C96 + C79307 * C246) * C93 +
            (C245 * C102 + C79307 * C252) * C81 + C275 * C95 + C276 * C82) *
               C79308 * C17509 -
           (C1938 * C82 + C1939 * C95 + (C245 * C1690 + C79307 * C1914) * C81 +
            (C245 * C1682 + C79307 * C1906) * C93) *
               C79308 * C79114) *
              C79310 +
          (((C245 * C3931 + C79307 * C4165) * C93 +
            (C245 * C3935 + C79307 * C4169) * C81 + C4182 * C95 + C4183 * C82) *
               C79308 * C79114 -
           (C1005 * C82 + C1006 * C95 + (C245 * C757 + C79307 * C981) * C81 +
            (C245 * C749 + C79307 * C973) * C93) *
               C79308 * C17509) *
              C79303 +
          (((C245 * C750 + C79307 * C974) * C93 +
            (C245 * C758 + C79307 * C982) * C81 + C1007 * C95 + C1008 * C82) *
               C79308 * C17509 -
           (C7693 * C82 + C7694 * C95 + (C245 * C6050 + C79307 * C6234) * C81 +
            (C245 * C6044 + C79307 * C6228) * C93) *
               C79308 * C79114) *
              C79290 +
          (((C245 * C8377 + C79307 * C8521) * C93 +
            (C245 * C8379 + C79307 * C8523) * C81 +
            (C245 * C8378 + C79307 * C8522) * C95 +
            (C245 * C8380 + C79307 * C8524) * C82) *
               C79308 * C79114 -
           (C6953 * C82 + C6954 * C95 + (C245 * C5572 + C79307 * C5680) * C81 +
            (C245 * C5568 + C79307 * C5676) * C93) *
               C79308 * C17509) *
              C79269) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C245 * C96 + C79307 * C246) * C93 +
             (C245 * C102 + C79307 * C252) * C81 + C275 * C95 + C276 * C82) *
                C79308 * C17509 -
            (C1938 * C82 + C1939 * C95 + (C245 * C1690 + C79307 * C1914) * C81 +
             (C245 * C1682 + C79307 * C1906) * C93) *
                C79308 * C79114) *
               C12991 +
           (((C245 * C3931 + C79307 * C4165) * C93 +
             (C245 * C3935 + C79307 * C4169) * C81 + C4182 * C95 +
             C4183 * C82) *
                C79308 * C79114 -
            (C1005 * C82 + C1006 * C95 + (C245 * C757 + C79307 * C981) * C81 +
             (C245 * C749 + C79307 * C973) * C93) *
                C79308 * C17509) *
               C79072) *
              C79297 +
          (((C1939 * C93 + C1938 * C81 + C1942 * C95 + C1943 * C82) * C79308 *
                C79114 -
            (C277 * C82 + C278 * C95 + C276 * C81 + C275 * C93) * C79308 *
                C17509) *
               C12991 +
           ((C1006 * C93 + C1005 * C81 + C1009 * C95 + C1010 * C82) * C79308 *
                C17509 -
            (C4184 * C82 + C4185 * C95 + C4183 * C81 + C4182 * C93) * C79308 *
                C79114) *
               C79072) *
              C79281 +
          (((C278 * C93 + C277 * C81 + C279 * C95 + C280 * C82) * C79308 *
                C17509 -
            (C3407 * C82 + C3408 * C95 + C1943 * C81 + C1942 * C93) * C79308 *
                C79114) *
               C12991 +
           ((C4185 * C93 + C4184 * C81 + (C245 * C3934 + C79307 * C4168) * C95 +
             (C245 * C3938 + C79307 * C4172) * C82) *
                C79308 * C79114 -
            (C2761 * C82 + C2762 * C95 + C1010 * C81 + C1009 * C93) * C79308 *
                C17509) *
               C79072) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C245 * C96 + C79307 * C246) * C93 +
            (C245 * C102 + C79307 * C252) * C81 + C275 * C95 + C276 * C82) *
               C79308 * C79311 -
           (C1938 * C82 + C1939 * C95 + (C245 * C1690 + C79307 * C1914) * C81 +
            (C245 * C1682 + C79307 * C1906) * C93) *
               C79308 * C79305 +
           ((C245 * C1683 + C79307 * C1907) * C93 +
            (C245 * C1691 + C79307 * C1915) * C81 + C1940 * C95 + C1941 * C82) *
               C79308 * C79293 -
           (C11873 * C82 + C11874 * C95 +
            (C245 * C10324 + C79307 * C10432) * C81 +
            (C245 * C10320 + C79307 * C10428) * C93) *
               C79308 * C79275) *
              C12991 +
          (((C245 * C3931 + C79307 * C4165) * C93 +
            (C245 * C3935 + C79307 * C4169) * C81 + C4182 * C95 + C4183 * C82) *
               C79308 * C79305 -
           (C1005 * C82 + C1006 * C95 + (C245 * C757 + C79307 * C981) * C81 +
            (C245 * C749 + C79307 * C973) * C93) *
               C79308 * C79311 -
           (C11033 * C82 + C11034 * C95 +
            (C245 * C6048 + C79307 * C6232) * C81 +
            (C245 * C6042 + C79307 * C6226) * C93) *
               C79308 * C79293 +
           ((C245 * C12365 + C79307 * C12509) * C93 +
            (C245 * C12367 + C79307 * C12511) * C81 +
            (C245 * C12366 + C79307 * C12510) * C95 +
            (C245 * C12368 + C79307 * C12512) * C82) *
               C79308 * C79275) *
              C79072) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eeyx[7] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C166 +
            (C93 * C167 + C81 * C324 + C95 * C168 + C82 * C325) * C79308) *
               C79307 * C17509 -
           ((C95 * C1791 + C82 * C2019 + C93 * C1792 + C81 * C2020) * C79308 +
            (C95 * C1681 + C82 * C1689 + C93 * C1682 + C81 * C1690) * C166) *
               C79307 * C79114) *
              C79310 +
          (((C93 * C3931 + C81 * C3935 + C95 * C3932 + C82 * C3936) * C166 +
            (C93 * C4047 + C81 * C4283 + C95 * C4048 + C82 * C4284) * C79308) *
               C79307 * C79114 -
           ((C95 * C858 + C82 * C1086 + C93 * C859 + C81 * C1087) * C79308 +
            (C95 * C748 + C82 * C756 + C93 * C749 + C81 * C757) * C166) *
               C79307 * C17509) *
              C79303 +
          (((C93 * C750 + C81 * C758 + C95 * C751 + C82 * C759) * C166 +
            (C93 * C860 + C81 * C1088 + C95 * C861 + C82 * C1089) * C79308) *
               C79307 * C17509 -
           ((C95 * C6141 + C82 * C6313 + C93 * C6142 + C81 * C6314) * C79308 +
            (C95 * C6043 + C82 * C6049 + C93 * C6044 + C81 * C6050) * C166) *
               C79307 * C79114) *
              C79290 +
          (((C93 * C8377 + C81 * C8379 + C95 * C8378 + C82 * C8380) * C166 +
            (C93 * C8451 + C81 * C8591 + C95 * C8452 + C82 * C8592) * C79308) *
               C79307 * C79114 -
           ((C95 * C5625 + C82 * C5725 + C93 * C5626 + C81 * C5726) * C79308 +
            (C95 * C5567 + C82 * C5571 + C93 * C5568 + C81 * C5572) * C166) *
               C79307 * C17509) *
              C79269) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C166 +
             (C93 * C167 + C81 * C324 + C95 * C168 + C82 * C325) * C79308) *
                C79307 * C17509 -
            ((C95 * C1791 + C82 * C2019 + C93 * C1792 + C81 * C2020) * C79308 +
             (C95 * C1681 + C82 * C1689 + C93 * C1682 + C81 * C1690) * C166) *
                C79307 * C79114) *
               C12991 +
           (((C93 * C3931 + C81 * C3935 + C95 * C3932 + C82 * C3936) * C166 +
             (C93 * C4047 + C81 * C4283 + C95 * C4048 + C82 * C4284) * C79308) *
                C79307 * C79114 -
            ((C95 * C858 + C82 * C1086 + C93 * C859 + C81 * C1087) * C79308 +
             (C95 * C748 + C82 * C756 + C93 * C749 + C81 * C757) * C166) *
                C79307 * C17509) *
               C79072) *
              C79297 +
          ((((C93 * C1681 + C81 * C1689 + C95 * C1685 + C82 * C1693) * C166 +
             (C93 * C1791 + C81 * C2019 + C95 * C1795 + C82 * C2023) * C79308) *
                C79307 * C79114 -
            ((C95 * C169 + C82 * C326 + C93 * C168 + C81 * C325) * C79308 +
             (C95 * C98 + C82 * C104 + C93 * C97 + C81 * C103) * C166) *
                C79307 * C17509) *
               C12991 +
           (((C93 * C748 + C81 * C756 + C95 * C752 + C82 * C760) * C166 +
             (C93 * C858 + C81 * C1086 + C95 * C862 + C82 * C1090) * C79308) *
                C79307 * C17509 -
            ((C95 * C4049 + C82 * C4285 + C93 * C4048 + C81 * C4284) * C79308 +
             (C95 * C3933 + C82 * C3937 + C93 * C3932 + C81 * C3936) * C166) *
                C79307 * C79114) *
               C79072) *
              C79281 +
          ((((C93 * C98 + C81 * C104 + C95 * C99 + C82 * C105) * C166 +
             (C93 * C169 + C81 * C326 + C95 * C170 + C82 * C327) * C79308) *
                C79307 * C17509 -
            ((C95 * C1797 + C82 * C2025 + C93 * C1795 + C81 * C2023) * C79308 +
             (C95 * C1687 + C82 * C1695 + C93 * C1685 + C81 * C1693) * C166) *
                C79307 * C79114) *
               C12991 +
           (((C93 * C3933 + C81 * C3937 + C95 * C3934 + C82 * C3938) * C166 +
             (C93 * C4049 + C81 * C4285 + C95 * C4050 + C82 * C4286) * C79308) *
                C79307 * C79114 -
            ((C95 * C864 + C82 * C1092 + C93 * C862 + C81 * C1090) * C79308 +
             (C95 * C754 + C82 * C762 + C93 * C752 + C81 * C760) * C166) *
                C79307 * C17509) *
               C79072) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C166 +
            (C93 * C167 + C81 * C324 + C95 * C168 + C82 * C325) * C79308) *
               C79307 * C79311 -
           ((C95 * C1791 + C82 * C2019 + C93 * C1792 + C81 * C2020) * C79308 +
            (C95 * C1681 + C82 * C1689 + C93 * C1682 + C81 * C1690) * C166) *
               C79307 * C79305 +
           ((C93 * C1683 + C81 * C1691 + C95 * C1684 + C82 * C1692) * C166 +
            (C93 * C1793 + C81 * C2021 + C95 * C1794 + C82 * C2022) * C79308) *
               C79307 * C79293 -
           ((C95 * C10377 + C82 * C10477 + C93 * C10378 + C81 * C10478) *
                C79308 +
            (C95 * C10319 + C82 * C10323 + C93 * C10320 + C81 * C10324) *
                C166) *
               C79307 * C79275) *
              C12991 +
          (((C93 * C3931 + C81 * C3935 + C95 * C3932 + C82 * C3936) * C166 +
            (C93 * C4047 + C81 * C4283 + C95 * C4048 + C82 * C4284) * C79308) *
               C79307 * C79305 -
           ((C95 * C858 + C82 * C1086 + C93 * C859 + C81 * C1087) * C79308 +
            (C95 * C748 + C82 * C756 + C93 * C749 + C81 * C757) * C166) *
               C79307 * C79311 -
           ((C95 * C6139 + C82 * C6311 + C93 * C6140 + C81 * C6312) * C79308 +
            (C95 * C6041 + C82 * C6047 + C93 * C6042 + C81 * C6048) * C166) *
               C79307 * C79293 +
           ((C93 * C12365 + C81 * C12367 + C95 * C12366 + C82 * C12368) * C166 +
            (C93 * C12439 + C81 * C12579 + C95 * C12440 + C82 * C12580) *
                C79308) *
               C79307 * C79275) *
              C79072) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eeyy[7] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C372 * C96 + C380 + C380 + C79308 * C373) * C81 + C402 * C82) *
               C79307 * C17509 -
           (C2134 * C82 +
            (C372 * C1682 + C2113 + C2113 + C79308 * C2102) * C81) *
               C79307 * C79114) *
              C79310 +
          (((C372 * C3931 + C4390 + C4390 + C79308 * C4385) * C81 +
            C4402 * C82) *
               C79307 * C79114 -
           (C1201 * C82 +
            (C372 * C749 + C1180 + C1180 + C79308 * C1169) * C81) *
               C79307 * C17509) *
              C79303 +
          (((C372 * C750 + C1181 + C1181 + C79308 * C1170) * C81 +
            C1202 * C82) *
               C79307 * C17509 -
           (C7898 * C82 +
            (C372 * C6044 + C6401 + C6401 + C79308 * C6394) * C81) *
               C79307 * C79114) *
              C79290 +
          (((C372 * C8377 + C8662 + C8662 + C79308 * C8659) * C81 +
            (C372 * C8378 + C8663 + C8663 + C79308 * C8660) * C82) *
               C79307 * C79114 -
           (C7094 * C82 +
            (C372 * C5568 + C5777 + C5777 + C79308 * C5772) * C81) *
               C79307 * C17509) *
              C79269) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C372 * C96 + C380 + C380 + C79308 * C373) * C81 + C402 * C82) *
                C79307 * C17509 -
            (C2134 * C82 +
             (C372 * C1682 + C2113 + C2113 + C79308 * C2102) * C81) *
                C79307 * C79114) *
               C12991 +
           (((C372 * C3931 + C4390 + C4390 + C79308 * C4385) * C81 +
             C4402 * C82) *
                C79307 * C79114 -
            (C1201 * C82 +
             (C372 * C749 + C1180 + C1180 + C79308 * C1169) * C81) *
                C79307 * C17509) *
               C79072) *
              C79297 +
          (((C2134 * C81 + C2136 * C82) * C79307 * C79114 -
            (C403 * C82 + C402 * C81) * C79307 * C17509) *
               C12991 +
           ((C1201 * C81 + C1203 * C82) * C79307 * C17509 -
            (C4403 * C82 + C4402 * C81) * C79307 * C79114) *
               C79072) *
              C79281 +
          (((C403 * C81 + C404 * C82) * C79307 * C17509 -
            (C3548 * C82 + C2136 * C81) * C79307 * C79114) *
               C12991 +
           ((C4403 * C81 +
             (C372 * C3934 + C4397 + C4397 + C79308 * C4388) * C82) *
                C79307 * C79114 -
            (C2902 * C82 + C1203 * C81) * C79307 * C17509) *
               C79072) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C372 * C96 + C380 + C380 + C79308 * C373) * C81 + C402 * C82) *
               C79307 * C79311 -
           (C2134 * C82 +
            (C372 * C1682 + C2113 + C2113 + C79308 * C2102) * C81) *
               C79307 * C79305 +
           ((C372 * C1683 + C2114 + C2114 + C79308 * C2103) * C81 +
            C2135 * C82) *
               C79307 * C79293 -
           (C12014 * C82 +
            (C372 * C10320 + C10529 + C10529 + C79308 * C10524) * C81) *
               C79307 * C79275) *
              C12991 +
          (((C372 * C3931 + C4390 + C4390 + C79308 * C4385) * C81 +
            C4402 * C82) *
               C79307 * C79305 -
           (C1201 * C82 +
            (C372 * C749 + C1180 + C1180 + C79308 * C1169) * C81) *
               C79307 * C79311 -
           (C11238 * C82 +
            (C372 * C6042 + C6399 + C6399 + C79308 * C6392) * C81) *
               C79307 * C79293 +
           ((C372 * C12365 + C12650 + C12650 + C79308 * C12647) * C81 +
            (C372 * C12366 + C12651 + C12651 + C79308 * C12648) * C82) *
               C79307 * C79275) *
              C79072) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eeyz[7] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C245 * C96 + C79307 * C246) * C166 +
             (C245 * C167 + C79307 * C447) * C79308) *
                C81 +
            (C454 + C470) * C82) *
               C17509 -
           ((C2236 + C2222) * C82 + ((C245 * C1792 + C79307 * C2212) * C79308 +
                                     (C245 * C1682 + C79307 * C1906) * C166) *
                                        C81) *
               C79114) *
              C79310 +
          ((((C245 * C3931 + C79307 * C4165) * C166 +
             (C245 * C4047 + C79307 * C4501) * C79308) *
                C81 +
            (C4506 + C4514) * C82) *
               C79114 -
           ((C1303 + C1289) * C82 + ((C245 * C859 + C79307 * C1279) * C79308 +
                                     (C245 * C749 + C79307 * C973) * C166) *
                                        C81) *
               C17509) *
              C79303 +
          ((((C245 * C750 + C79307 * C974) * C166 +
             (C245 * C860 + C79307 * C1280) * C79308) *
                C81 +
            (C1290 + C1304) * C82) *
               C17509 -
           ((C8002 + C8000) * C82 + ((C245 * C6142 + C79307 * C6480) * C79308 +
                                     (C245 * C6044 + C79307 * C6228) * C166) *
                                        C81) *
               C79114) *
              C79290 +
          ((((C245 * C8377 + C79307 * C8521) * C166 +
             (C245 * C8451 + C79307 * C8729) * C79308) *
                C81 +
            ((C245 * C8378 + C79307 * C8522) * C166 +
             (C245 * C8452 + C79307 * C8730) * C79308) *
                C82) *
               C79114 -
           ((C7166 + C7164) * C82 + ((C245 * C5626 + C79307 * C5822) * C79308 +
                                     (C245 * C5568 + C79307 * C5676) * C166) *
                                        C81) *
               C17509) *
              C79269) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C245 * C96 + C79307 * C246) * C166 +
              (C245 * C167 + C79307 * C447) * C79308) *
                 C81 +
             (C454 + C470) * C82) *
                C17509 -
            ((C2236 + C2222) * C82 + ((C245 * C1792 + C79307 * C2212) * C79308 +
                                      (C245 * C1682 + C79307 * C1906) * C166) *
                                         C81) *
                C79114) *
               C12991 +
           ((((C245 * C3931 + C79307 * C4165) * C166 +
              (C245 * C4047 + C79307 * C4501) * C79308) *
                 C81 +
             (C4506 + C4514) * C82) *
                C79114 -
            ((C1303 + C1289) * C82 + ((C245 * C859 + C79307 * C1279) * C79308 +
                                      (C245 * C749 + C79307 * C973) * C166) *
                                         C81) *
                C17509) *
               C79072) *
              C79297 +
          ((((C2222 + C2236) * C81 + (C2226 + C2238) * C82) * C79114 -
            ((C471 + C459) * C82 + (C470 + C454) * C81) * C17509) *
               C12991 +
           (((C1289 + C1303) * C81 + (C1293 + C1305) * C82) * C17509 -
            ((C4515 + C4511) * C82 + (C4514 + C4506) * C81) * C79114) *
               C79072) *
              C79281 +
          ((((C459 + C471) * C81 + (C460 + C472) * C82) * C17509 -
            ((C3620 + C3618) * C82 + (C2238 + C2226) * C81) * C79114) *
               C12991 +
           (((C4511 + C4515) * C81 +
             ((C245 * C3934 + C79307 * C4168) * C166 +
              (C245 * C4050 + C79307 * C4504) * C79308) *
                 C82) *
                C79114 -
            ((C2974 + C2972) * C82 + (C1305 + C1293) * C81) * C17509) *
               C79072) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C245 * C96 + C79307 * C246) * C166 +
             (C245 * C167 + C79307 * C447) * C79308) *
                C81 +
            (C454 + C470) * C82) *
               C79311 -
           ((C2236 + C2222) * C82 + ((C245 * C1792 + C79307 * C2212) * C79308 +
                                     (C245 * C1682 + C79307 * C1906) * C166) *
                                        C81) *
               C79305 +
           (((C245 * C1683 + C79307 * C1907) * C166 +
             (C245 * C1793 + C79307 * C2213) * C79308) *
                C81 +
            (C2223 + C2237) * C82) *
               C79293 -
           ((C12086 + C12084) * C82 +
            ((C245 * C10378 + C79307 * C10574) * C79308 +
             (C245 * C10320 + C79307 * C10428) * C166) *
                C81) *
               C79275) *
              C12991 +
          ((((C245 * C3931 + C79307 * C4165) * C166 +
             (C245 * C4047 + C79307 * C4501) * C79308) *
                C81 +
            (C4506 + C4514) * C82) *
               C79305 -
           ((C1303 + C1289) * C82 + ((C245 * C859 + C79307 * C1279) * C79308 +
                                     (C245 * C749 + C79307 * C973) * C166) *
                                        C81) *
               C79311 -
           ((C11342 + C11340) * C82 +
            ((C245 * C6140 + C79307 * C6478) * C79308 +
             (C245 * C6042 + C79307 * C6226) * C166) *
                C81) *
               C79293 +
           (((C245 * C12365 + C79307 * C12509) * C166 +
             (C245 * C12439 + C79307 * C12717) * C79308) *
                C81 +
            ((C245 * C12366 + C79307 * C12510) * C166 +
             (C245 * C12440 + C79307 * C12718) * C79308) *
                C82) *
               C79275) *
              C79072) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eezx[7] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C245 +
            (C93 * C246 + C81 * C515 + C95 * C247 + C82 * C516) * C79307) *
               C79308 * C17509 -
           ((C95 * C1905 + C82 * C2313 + C93 * C1906 + C81 * C2314) * C79307 +
            (C95 * C1681 + C82 * C1689 + C93 * C1682 + C81 * C1690) * C245) *
               C79308 * C79114) *
              C79310 +
          (((C93 * C3931 + C81 * C3935 + C95 * C3932 + C82 * C3936) * C245 +
            (C93 * C4165 + C81 * C4613 + C95 * C4166 + C82 * C4614) * C79307) *
               C79308 * C79114 -
           ((C95 * C972 + C82 * C1380 + C93 * C973 + C81 * C1381) * C79307 +
            (C95 * C748 + C82 * C756 + C93 * C749 + C81 * C757) * C245) *
               C79308 * C17509) *
              C79303 +
          (((C93 * C750 + C81 * C758 + C95 * C751 + C82 * C759) * C245 +
            (C93 * C974 + C81 * C1382 + C95 * C975 + C82 * C1383) * C79307) *
               C79308 * C17509 -
           ((C95 * C6227 + C82 * C6559 + C93 * C6228 + C81 * C6560) * C79307 +
            (C95 * C6043 + C82 * C6049 + C93 * C6044 + C81 * C6050) * C245) *
               C79308 * C79114) *
              C79290 +
          (((C93 * C8377 + C81 * C8379 + C95 * C8378 + C82 * C8380) * C245 +
            (C93 * C8521 + C81 * C8797 + C95 * C8522 + C82 * C8798) * C79307) *
               C79308 * C79114 -
           ((C95 * C5675 + C82 * C5867 + C93 * C5676 + C81 * C5868) * C79307 +
            (C95 * C5567 + C82 * C5571 + C93 * C5568 + C81 * C5572) * C245) *
               C79308 * C17509) *
              C79269) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C245 +
             (C93 * C246 + C81 * C515 + C95 * C247 + C82 * C516) * C79307) *
                C79308 * C17509 -
            ((C95 * C1905 + C82 * C2313 + C93 * C1906 + C81 * C2314) * C79307 +
             (C95 * C1681 + C82 * C1689 + C93 * C1682 + C81 * C1690) * C245) *
                C79308 * C79114) *
               C12991 +
           (((C93 * C3931 + C81 * C3935 + C95 * C3932 + C82 * C3936) * C245 +
             (C93 * C4165 + C81 * C4613 + C95 * C4166 + C82 * C4614) * C79307) *
                C79308 * C79114 -
            ((C95 * C972 + C82 * C1380 + C93 * C973 + C81 * C1381) * C79307 +
             (C95 * C748 + C82 * C756 + C93 * C749 + C81 * C757) * C245) *
                C79308 * C17509) *
               C79072) *
              C79297 +
          ((((C93 * C1681 + C81 * C1689 + C95 * C1685 + C82 * C1693) * C245 +
             (C93 * C1905 + C81 * C2313 + C95 * C1909 + C82 * C2317) * C79307) *
                C79308 * C79114 -
            ((C95 * C248 + C82 * C517 + C93 * C247 + C81 * C516) * C79307 +
             (C95 * C98 + C82 * C104 + C93 * C97 + C81 * C103) * C245) *
                C79308 * C17509) *
               C12991 +
           (((C93 * C748 + C81 * C756 + C95 * C752 + C82 * C760) * C245 +
             (C93 * C972 + C81 * C1380 + C95 * C976 + C82 * C1384) * C79307) *
                C79308 * C17509 -
            ((C95 * C4167 + C82 * C4615 + C93 * C4166 + C81 * C4614) * C79307 +
             (C95 * C3933 + C82 * C3937 + C93 * C3932 + C81 * C3936) * C245) *
                C79308 * C79114) *
               C79072) *
              C79281 +
          ((((C93 * C98 + C81 * C104 + C95 * C99 + C82 * C105) * C245 +
             (C93 * C248 + C81 * C517 + C95 * C249 + C82 * C518) * C79307) *
                C79308 * C17509 -
            ((C95 * C1911 + C82 * C2319 + C93 * C1909 + C81 * C2317) * C79307 +
             (C95 * C1687 + C82 * C1695 + C93 * C1685 + C81 * C1693) * C245) *
                C79308 * C79114) *
               C12991 +
           (((C93 * C3933 + C81 * C3937 + C95 * C3934 + C82 * C3938) * C245 +
             (C93 * C4167 + C81 * C4615 + C95 * C4168 + C82 * C4616) * C79307) *
                C79308 * C79114 -
            ((C95 * C978 + C82 * C1386 + C93 * C976 + C81 * C1384) * C79307 +
             (C95 * C754 + C82 * C762 + C93 * C752 + C81 * C760) * C245) *
                C79308 * C17509) *
               C79072) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C245 +
            (C93 * C246 + C81 * C515 + C95 * C247 + C82 * C516) * C79307) *
               C79308 * C79311 -
           ((C95 * C1905 + C82 * C2313 + C93 * C1906 + C81 * C2314) * C79307 +
            (C95 * C1681 + C82 * C1689 + C93 * C1682 + C81 * C1690) * C245) *
               C79308 * C79305 +
           ((C93 * C1683 + C81 * C1691 + C95 * C1684 + C82 * C1692) * C245 +
            (C93 * C1907 + C81 * C2315 + C95 * C1908 + C82 * C2316) * C79307) *
               C79308 * C79293 -
           ((C95 * C10427 + C82 * C10619 + C93 * C10428 + C81 * C10620) *
                C79307 +
            (C95 * C10319 + C82 * C10323 + C93 * C10320 + C81 * C10324) *
                C245) *
               C79308 * C79275) *
              C12991 +
          (((C93 * C3931 + C81 * C3935 + C95 * C3932 + C82 * C3936) * C245 +
            (C93 * C4165 + C81 * C4613 + C95 * C4166 + C82 * C4614) * C79307) *
               C79308 * C79305 -
           ((C95 * C972 + C82 * C1380 + C93 * C973 + C81 * C1381) * C79307 +
            (C95 * C748 + C82 * C756 + C93 * C749 + C81 * C757) * C245) *
               C79308 * C79311 -
           ((C95 * C6225 + C82 * C6557 + C93 * C6226 + C81 * C6558) * C79307 +
            (C95 * C6041 + C82 * C6047 + C93 * C6042 + C81 * C6048) * C245) *
               C79308 * C79293 +
           ((C93 * C12365 + C81 * C12367 + C95 * C12366 + C82 * C12368) * C245 +
            (C93 * C12509 + C81 * C12785 + C95 * C12510 + C82 * C12786) *
                C79307) *
               C79308 * C79275) *
              C79072) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eezy[7] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C166 * C96 + C79308 * C167) * C245 +
             (C166 * C246 + C79308 * C563) * C79307) *
                C81 +
            (C570 + C586) * C82) *
               C17509 -
           ((C2420 + C2406) * C82 + ((C166 * C1906 + C79308 * C2396) * C79307 +
                                     (C166 * C1682 + C79308 * C1792) * C245) *
                                        C81) *
               C79114) *
              C79310 +
          ((((C166 * C3931 + C79308 * C4047) * C245 +
             (C166 * C4165 + C79308 * C4715) * C79307) *
                C81 +
            (C4720 + C4728) * C82) *
               C79114 -
           ((C1487 + C1473) * C82 + ((C166 * C973 + C79308 * C1463) * C79307 +
                                     (C166 * C749 + C79308 * C859) * C245) *
                                        C81) *
               C17509) *
              C79303 +
          ((((C166 * C750 + C79308 * C860) * C245 +
             (C166 * C974 + C79308 * C1464) * C79307) *
                C81 +
            (C1474 + C1488) * C82) *
               C17509 -
           ((C8205 + C8203) * C82 + ((C166 * C6228 + C79308 * C6640) * C79307 +
                                     (C166 * C6044 + C79308 * C6142) * C245) *
                                        C81) *
               C79114) *
              C79290 +
          ((((C166 * C8377 + C79308 * C8451) * C245 +
             (C166 * C8521 + C79308 * C8865) * C79307) *
                C81 +
            ((C166 * C8378 + C79308 * C8452) * C245 +
             (C166 * C8522 + C79308 * C8866) * C79307) *
                C82) *
               C79114 -
           ((C7305 + C7303) * C82 + ((C166 * C5676 + C79308 * C5914) * C79307 +
                                     (C166 * C5568 + C79308 * C5626) * C245) *
                                        C81) *
               C17509) *
              C79269) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C166 * C96 + C79308 * C167) * C245 +
              (C166 * C246 + C79308 * C563) * C79307) *
                 C81 +
             (C570 + C586) * C82) *
                C17509 -
            ((C2420 + C2406) * C82 + ((C166 * C1906 + C79308 * C2396) * C79307 +
                                      (C166 * C1682 + C79308 * C1792) * C245) *
                                         C81) *
                C79114) *
               C12991 +
           ((((C166 * C3931 + C79308 * C4047) * C245 +
              (C166 * C4165 + C79308 * C4715) * C79307) *
                 C81 +
             (C4720 + C4728) * C82) *
                C79114 -
            ((C1487 + C1473) * C82 + ((C166 * C973 + C79308 * C1463) * C79307 +
                                      (C166 * C749 + C79308 * C859) * C245) *
                                         C81) *
                C17509) *
               C79072) *
              C79297 +
          ((((C2406 + C2420) * C81 + (C2410 + C2422) * C82) * C79114 -
            ((C587 + C575) * C82 + (C586 + C570) * C81) * C17509) *
               C12991 +
           (((C1473 + C1487) * C81 + (C1477 + C1489) * C82) * C17509 -
            ((C4729 + C4725) * C82 + (C4728 + C4720) * C81) * C79114) *
               C79072) *
              C79281 +
          ((((C575 + C587) * C81 + (C576 + C588) * C82) * C17509 -
            ((C3759 + C3757) * C82 + (C2422 + C2410) * C81) * C79114) *
               C12991 +
           (((C4725 + C4729) * C81 +
             ((C166 * C3934 + C79308 * C4050) * C245 +
              (C166 * C4168 + C79308 * C4718) * C79307) *
                 C82) *
                C79114 -
            ((C3113 + C3111) * C82 + (C1489 + C1477) * C81) * C17509) *
               C79072) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C166 * C96 + C79308 * C167) * C245 +
             (C166 * C246 + C79308 * C563) * C79307) *
                C81 +
            (C570 + C586) * C82) *
               C79311 -
           ((C2420 + C2406) * C82 + ((C166 * C1906 + C79308 * C2396) * C79307 +
                                     (C166 * C1682 + C79308 * C1792) * C245) *
                                        C81) *
               C79305 +
           (((C166 * C1683 + C79308 * C1793) * C245 +
             (C166 * C1907 + C79308 * C2397) * C79307) *
                C81 +
            (C2407 + C2421) * C82) *
               C79293 -
           ((C12225 + C12223) * C82 +
            ((C166 * C10428 + C79308 * C10666) * C79307 +
             (C166 * C10320 + C79308 * C10378) * C245) *
                C81) *
               C79275) *
              C12991 +
          ((((C166 * C3931 + C79308 * C4047) * C245 +
             (C166 * C4165 + C79308 * C4715) * C79307) *
                C81 +
            (C4720 + C4728) * C82) *
               C79305 -
           ((C1487 + C1473) * C82 + ((C166 * C973 + C79308 * C1463) * C79307 +
                                     (C166 * C749 + C79308 * C859) * C245) *
                                        C81) *
               C79311 -
           ((C11545 + C11543) * C82 +
            ((C166 * C6226 + C79308 * C6638) * C79307 +
             (C166 * C6042 + C79308 * C6140) * C245) *
                C81) *
               C79293 +
           (((C166 * C12365 + C79308 * C12439) * C245 +
             (C166 * C12509 + C79308 * C12853) * C79307) *
                C81 +
            ((C166 * C12366 + C79308 * C12440) * C245 +
             (C166 * C12510 + C79308 * C12854) * C79307) *
                C82) *
               C79275) *
              C79072) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eezz[7] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C631 * C96 + C639 + C639 + C79307 * C632) * C79308 * C81 +
            C665 * C82) *
               C17509 -
           (C2534 * C82 +
            (C631 * C1682 + C2509 + C2509 + C79307 * C2498) * C79308 * C81) *
               C79114) *
              C79310 +
          (((C631 * C3931 + C4832 + C4832 + C79307 * C4827) * C79308 * C81 +
            C4846 * C82) *
               C79114 -
           (C1601 * C82 +
            (C631 * C749 + C1576 + C1576 + C79307 * C1565) * C79308 * C81) *
               C17509) *
              C79303 +
          (((C631 * C750 + C1577 + C1577 + C79307 * C1566) * C79308 * C81 +
            C1602 * C82) *
               C17509 -
           (C8311 * C82 +
            (C631 * C6044 + C6727 + C6727 + C79307 * C6720) * C79308 * C81) *
               C79114) *
              C79290 +
          (((C631 * C8377 + C8936 + C8936 + C79307 * C8933) * C79308 * C81 +
            (C631 * C8378 + C8937 + C8937 + C79307 * C8934) * C79308 * C82) *
               C79114 -
           (C7379 * C82 +
            (C631 * C5568 + C5965 + C5965 + C79307 * C5960) * C79308 * C81) *
               C17509) *
              C79269) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C631 * C96 + C639 + C639 + C79307 * C632) * C79308 * C81 +
             C665 * C82) *
                C17509 -
            (C2534 * C82 +
             (C631 * C1682 + C2509 + C2509 + C79307 * C2498) * C79308 * C81) *
                C79114) *
               C12991 +
           (((C631 * C3931 + C4832 + C4832 + C79307 * C4827) * C79308 * C81 +
             C4846 * C82) *
                C79114 -
            (C1601 * C82 +
             (C631 * C749 + C1576 + C1576 + C79307 * C1565) * C79308 * C81) *
                C17509) *
               C79072) *
              C79297 +
          (((C2534 * C81 + C2536 * C82) * C79114 -
            (C666 * C82 + C665 * C81) * C17509) *
               C12991 +
           ((C1601 * C81 + C1603 * C82) * C17509 -
            (C4847 * C82 + C4846 * C81) * C79114) *
               C79072) *
              C79281 +
          (((C666 * C81 + C667 * C82) * C17509 -
            (C3833 * C82 + C2536 * C81) * C79114) *
               C12991 +
           ((C4847 * C81 +
             (C631 * C3934 + C4839 + C4839 + C79307 * C4830) * C79308 * C82) *
                C79114 -
            (C3187 * C82 + C1603 * C81) * C17509) *
               C79072) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C631 * C96 + C639 + C639 + C79307 * C632) * C79308 * C81 +
            C665 * C82) *
               C79311 -
           (C2534 * C82 +
            (C631 * C1682 + C2509 + C2509 + C79307 * C2498) * C79308 * C81) *
               C79305 +
           ((C631 * C1683 + C2510 + C2510 + C79307 * C2499) * C79308 * C81 +
            C2535 * C82) *
               C79293 -
           (C12299 * C82 + (C631 * C10320 + C10717 + C10717 + C79307 * C10712) *
                               C79308 * C81) *
               C79275) *
              C12991 +
          (((C631 * C3931 + C4832 + C4832 + C79307 * C4827) * C79308 * C81 +
            C4846 * C82) *
               C79305 -
           (C1601 * C82 +
            (C631 * C749 + C1576 + C1576 + C79307 * C1565) * C79308 * C81) *
               C79311 -
           (C11651 * C82 +
            (C631 * C6042 + C6725 + C6725 + C79307 * C6718) * C79308 * C81) *
               C79293 +
           ((C631 * C12365 + C12924 + C12924 + C79307 * C12921) * C79308 * C81 +
            (C631 * C12366 + C12925 + C12925 + C79307 * C12922) * C79308 *
                C82) *
               C79275) *
              C79072) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eexx[8] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C92 * C96 + C115 + C115 + C81 * C108 + C94 * C97 + C116 +
                      C116 + C82 * C109) *
                         C79307 * C79308 * C79110 -
                     (C94 * C1681 + C1706 + C1706 + C82 * C1697 + C92 * C1682 +
                      C1707 + C1707 + C81 * C1698) *
                         C79307 * C79308 * C79117 +
                     (C92 * C1683 + C1708 + C1708 + C81 * C1699 + C94 * C1684 +
                      C1709 + C1709 + C82 * C1700) *
                         C79307 * C79308 * C20477) *
                        C12991 +
                    ((C92 * C3931 + C3944 + C3944 + C81 * C3939 + C94 * C3932 +
                      C3945 + C3945 + C82 * C3940) *
                         C79307 * C79308 * C79117 -
                     (C94 * C748 + C773 + C773 + C82 * C764 + C92 * C749 +
                      C774 + C774 + C81 * C765) *
                         C79307 * C79308 * C79110 -
                     (C94 * C6041 + C6060 + C6060 + C82 * C6053 + C92 * C6042 +
                      C6061 + C6061 + C81 * C6054) *
                         C79307 * C79308 * C20477) *
                        C79072) *
                       C79215 +
                   (((C92 * C1681 + C1710 + C1710 + C81 * C1697 + C94 * C1685 +
                      C1711 + C1711 + C82 * C1701) *
                         C79307 * C79308 * C79117 -
                     (C94 * C98 + C117 + C117 + C82 * C110 + C92 * C97 + C118 +
                      C118 + C81 * C109) *
                         C79307 * C79308 * C79110 -
                     (C94 * C1686 + C1712 + C1712 + C82 * C1702 + C92 * C1684 +
                      C1713 + C1713 + C81 * C1700) *
                         C79307 * C79308 * C20477) *
                        C12991 +
                    ((C92 * C748 + C777 + C777 + C81 * C764 + C94 * C752 +
                      C778 + C778 + C82 * C768) *
                         C79307 * C79308 * C79110 -
                     (C94 * C3933 + C3946 + C3946 + C82 * C3941 + C92 * C3932 +
                      C3947 + C3947 + C81 * C3940) *
                         C79307 * C79308 * C79117 +
                     (C92 * C6041 + C10821 + C10821 + C81 * C6053 +
                      C94 * C10817 + C10822 + C10822 + C82 * C10819) *
                         C79307 * C79308 * C20477) *
                        C79072) *
                       C78992)) /
                 (p * q * std::sqrt(p + q));
    d2eexy[8] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C166 * C96 + C79308 * C167) * C93 +
             (C166 * C102 + C79308 * C173) * C81 + C196 * C95 + C197 * C82) *
                C79307 * C79110 -
            (C1824 * C82 + C1825 * C95 + (C166 * C1690 + C79308 * C1800) * C81 +
             (C166 * C1682 + C79308 * C1792) * C93) *
                C79307 * C79117 +
            ((C166 * C1683 + C79308 * C1793) * C93 +
             (C166 * C1691 + C79308 * C1801) * C81 + C1826 * C95 +
             C1827 * C82) *
                C79307 * C20477) *
               C12991 +
           (((C166 * C3931 + C79308 * C4047) * C93 +
             (C166 * C3935 + C79308 * C4051) * C81 + C4064 * C95 +
             C4065 * C82) *
                C79307 * C79117 -
            (C891 * C82 + C892 * C95 + (C166 * C757 + C79308 * C867) * C81 +
             (C166 * C749 + C79308 * C859) * C93) *
                C79307 * C79110 -
            (C10927 * C82 + C10928 * C95 +
             (C166 * C6048 + C79308 * C6146) * C81 +
             (C166 * C6042 + C79308 * C6140) * C93) *
                C79307 * C20477) *
               C79072) *
              C79215 +
          (((C1825 * C93 + C1824 * C81 + C1828 * C95 + C1829 * C82) * C79307 *
                C79117 -
            (C198 * C82 + C199 * C95 + C197 * C81 + C196 * C93) * C79307 *
                C79110 -
            (C1830 * C82 + C1831 * C95 + C1827 * C81 + C1826 * C93) * C79307 *
                C20477) *
               C12991 +
           ((C892 * C93 + C891 * C81 + C895 * C95 + C896 * C82) * C79307 *
                C79110 -
            (C4066 * C82 + C4067 * C95 + C4065 * C81 + C4064 * C93) * C79307 *
                C79117 +
            (C10928 * C93 + C10927 * C81 +
             (C166 * C10817 + C79308 * C10920) * C95 +
             (C166 * C10818 + C79308 * C10921) * C82) *
                C79307 * C20477) *
               C79072) *
              C78992)) /
        (p * q * std::sqrt(p + q));
    d2eexz[8] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C245 * C96 + C79307 * C246) * C93 +
             (C245 * C102 + C79307 * C252) * C81 + C275 * C95 + C276 * C82) *
                C79308 * C79110 -
            (C1938 * C82 + C1939 * C95 + (C245 * C1690 + C79307 * C1914) * C81 +
             (C245 * C1682 + C79307 * C1906) * C93) *
                C79308 * C79117 +
            ((C245 * C1683 + C79307 * C1907) * C93 +
             (C245 * C1691 + C79307 * C1915) * C81 + C1940 * C95 +
             C1941 * C82) *
                C79308 * C20477) *
               C12991 +
           (((C245 * C3931 + C79307 * C4165) * C93 +
             (C245 * C3935 + C79307 * C4169) * C81 + C4182 * C95 +
             C4183 * C82) *
                C79308 * C79117 -
            (C1005 * C82 + C1006 * C95 + (C245 * C757 + C79307 * C981) * C81 +
             (C245 * C749 + C79307 * C973) * C93) *
                C79308 * C79110 -
            (C11033 * C82 + C11034 * C95 +
             (C245 * C6048 + C79307 * C6232) * C81 +
             (C245 * C6042 + C79307 * C6226) * C93) *
                C79308 * C20477) *
               C79072) *
              C79215 +
          (((C1939 * C93 + C1938 * C81 + C1942 * C95 + C1943 * C82) * C79308 *
                C79117 -
            (C277 * C82 + C278 * C95 + C276 * C81 + C275 * C93) * C79308 *
                C79110 -
            (C1944 * C82 + C1945 * C95 + C1941 * C81 + C1940 * C93) * C79308 *
                C20477) *
               C12991 +
           ((C1006 * C93 + C1005 * C81 + C1009 * C95 + C1010 * C82) * C79308 *
                C79110 -
            (C4184 * C82 + C4185 * C95 + C4183 * C81 + C4182 * C93) * C79308 *
                C79117 +
            (C11034 * C93 + C11033 * C81 +
             (C245 * C10817 + C79307 * C11026) * C95 +
             (C245 * C10818 + C79307 * C11027) * C82) *
                C79308 * C20477) *
               C79072) *
              C78992)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[8] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C166 +
             (C93 * C167 + C81 * C324 + C95 * C168 + C82 * C325) * C79308) *
                C79307 * C79110 -
            ((C95 * C1791 + C82 * C2019 + C93 * C1792 + C81 * C2020) * C79308 +
             (C95 * C1681 + C82 * C1689 + C93 * C1682 + C81 * C1690) * C166) *
                C79307 * C79117 +
            ((C93 * C1683 + C81 * C1691 + C95 * C1684 + C82 * C1692) * C166 +
             (C93 * C1793 + C81 * C2021 + C95 * C1794 + C82 * C2022) * C79308) *
                C79307 * C20477) *
               C12991 +
           (((C93 * C3931 + C81 * C3935 + C95 * C3932 + C82 * C3936) * C166 +
             (C93 * C4047 + C81 * C4283 + C95 * C4048 + C82 * C4284) * C79308) *
                C79307 * C79117 -
            ((C95 * C858 + C82 * C1086 + C93 * C859 + C81 * C1087) * C79308 +
             (C95 * C748 + C82 * C756 + C93 * C749 + C81 * C757) * C166) *
                C79307 * C79110 -
            ((C95 * C6139 + C82 * C6311 + C93 * C6140 + C81 * C6312) * C79308 +
             (C95 * C6041 + C82 * C6047 + C93 * C6042 + C81 * C6048) * C166) *
                C79307 * C20477) *
               C79072) *
              C79215 +
          ((((C93 * C1681 + C81 * C1689 + C95 * C1685 + C82 * C1693) * C166 +
             (C93 * C1791 + C81 * C2019 + C95 * C1795 + C82 * C2023) * C79308) *
                C79307 * C79117 -
            ((C95 * C169 + C82 * C326 + C93 * C168 + C81 * C325) * C79308 +
             (C95 * C98 + C82 * C104 + C93 * C97 + C81 * C103) * C166) *
                C79307 * C79110 -
            ((C95 * C1796 + C82 * C2024 + C93 * C1794 + C81 * C2022) * C79308 +
             (C95 * C1686 + C82 * C1694 + C93 * C1684 + C81 * C1692) * C166) *
                C79307 * C20477) *
               C12991 +
           (((C93 * C748 + C81 * C756 + C95 * C752 + C82 * C760) * C166 +
             (C93 * C858 + C81 * C1086 + C95 * C862 + C82 * C1090) * C79308) *
                C79307 * C79110 -
            ((C95 * C4049 + C82 * C4285 + C93 * C4048 + C81 * C4284) * C79308 +
             (C95 * C3933 + C82 * C3937 + C93 * C3932 + C81 * C3936) * C166) *
                C79307 * C79117 +
            ((C93 * C6041 + C81 * C6047 + C95 * C10817 + C82 * C10818) * C166 +
             (C93 * C6139 + C81 * C6311 + C95 * C10920 + C82 * C11132) *
                 C79308) *
                C79307 * C20477) *
               C79072) *
              C78992)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[8] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C372 * C96 + C380 + C380 + C79308 * C373) * C81 + C402 * C82) *
                C79307 * C79110 -
            (C2134 * C82 +
             (C372 * C1682 + C2113 + C2113 + C79308 * C2102) * C81) *
                C79307 * C79117 +
            ((C372 * C1683 + C2114 + C2114 + C79308 * C2103) * C81 +
             C2135 * C82) *
                C79307 * C20477) *
               C12991 +
           (((C372 * C3931 + C4390 + C4390 + C79308 * C4385) * C81 +
             C4402 * C82) *
                C79307 * C79117 -
            (C1201 * C82 +
             (C372 * C749 + C1180 + C1180 + C79308 * C1169) * C81) *
                C79307 * C79110 -
            (C11238 * C82 +
             (C372 * C6042 + C6399 + C6399 + C79308 * C6392) * C81) *
                C79307 * C20477) *
               C79072) *
              C79215 +
          (((C2134 * C81 + C2136 * C82) * C79307 * C79117 -
            (C403 * C82 + C402 * C81) * C79307 * C79110 -
            (C2137 * C82 + C2135 * C81) * C79307 * C20477) *
               C12991 +
           ((C1201 * C81 + C1203 * C82) * C79307 * C79110 -
            (C4403 * C82 + C4402 * C81) * C79307 * C79117 +
            (C11238 * C81 +
             (C372 * C10817 + C11235 + C11235 + C79308 * C11231) * C82) *
                C79307 * C20477) *
               C79072) *
              C78992)) /
        (p * q * std::sqrt(p + q));
    d2eeyz[8] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C245 * C96 + C79307 * C246) * C166 +
              (C245 * C167 + C79307 * C447) * C79308) *
                 C81 +
             (C454 + C470) * C82) *
                C79110 -
            ((C2236 + C2222) * C82 + ((C245 * C1792 + C79307 * C2212) * C79308 +
                                      (C245 * C1682 + C79307 * C1906) * C166) *
                                         C81) *
                C79117 +
            (((C245 * C1683 + C79307 * C1907) * C166 +
              (C245 * C1793 + C79307 * C2213) * C79308) *
                 C81 +
             (C2223 + C2237) * C82) *
                C20477) *
               C12991 +
           ((((C245 * C3931 + C79307 * C4165) * C166 +
              (C245 * C4047 + C79307 * C4501) * C79308) *
                 C81 +
             (C4506 + C4514) * C82) *
                C79117 -
            ((C1303 + C1289) * C82 + ((C245 * C859 + C79307 * C1279) * C79308 +
                                      (C245 * C749 + C79307 * C973) * C166) *
                                         C81) *
                C79110 -
            ((C11342 + C11340) * C82 +
             ((C245 * C6140 + C79307 * C6478) * C79308 +
              (C245 * C6042 + C79307 * C6226) * C166) *
                 C81) *
                C20477) *
               C79072) *
              C79215 +
          ((((C2222 + C2236) * C81 + (C2226 + C2238) * C82) * C79117 -
            ((C471 + C459) * C82 + (C470 + C454) * C81) * C79110 -
            ((C2239 + C2231) * C82 + (C2237 + C2223) * C81) * C20477) *
               C12991 +
           (((C1289 + C1303) * C81 + (C1293 + C1305) * C82) * C79110 -
            ((C4515 + C4511) * C82 + (C4514 + C4506) * C81) * C79117 +
            ((C11340 + C11342) * C81 +
             ((C245 * C10817 + C79307 * C11026) * C166 +
              (C245 * C10920 + C79307 * C11336) * C79308) *
                 C82) *
                C20477) *
               C79072) *
              C78992)) /
        (p * q * std::sqrt(p + q));
    d2eezx[8] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C245 +
             (C93 * C246 + C81 * C515 + C95 * C247 + C82 * C516) * C79307) *
                C79308 * C79110 -
            ((C95 * C1905 + C82 * C2313 + C93 * C1906 + C81 * C2314) * C79307 +
             (C95 * C1681 + C82 * C1689 + C93 * C1682 + C81 * C1690) * C245) *
                C79308 * C79117 +
            ((C93 * C1683 + C81 * C1691 + C95 * C1684 + C82 * C1692) * C245 +
             (C93 * C1907 + C81 * C2315 + C95 * C1908 + C82 * C2316) * C79307) *
                C79308 * C20477) *
               C12991 +
           (((C93 * C3931 + C81 * C3935 + C95 * C3932 + C82 * C3936) * C245 +
             (C93 * C4165 + C81 * C4613 + C95 * C4166 + C82 * C4614) * C79307) *
                C79308 * C79117 -
            ((C95 * C972 + C82 * C1380 + C93 * C973 + C81 * C1381) * C79307 +
             (C95 * C748 + C82 * C756 + C93 * C749 + C81 * C757) * C245) *
                C79308 * C79110 -
            ((C95 * C6225 + C82 * C6557 + C93 * C6226 + C81 * C6558) * C79307 +
             (C95 * C6041 + C82 * C6047 + C93 * C6042 + C81 * C6048) * C245) *
                C79308 * C20477) *
               C79072) *
              C79215 +
          ((((C93 * C1681 + C81 * C1689 + C95 * C1685 + C82 * C1693) * C245 +
             (C93 * C1905 + C81 * C2313 + C95 * C1909 + C82 * C2317) * C79307) *
                C79308 * C79117 -
            ((C95 * C248 + C82 * C517 + C93 * C247 + C81 * C516) * C79307 +
             (C95 * C98 + C82 * C104 + C93 * C97 + C81 * C103) * C245) *
                C79308 * C79110 -
            ((C95 * C1910 + C82 * C2318 + C93 * C1908 + C81 * C2316) * C79307 +
             (C95 * C1686 + C82 * C1694 + C93 * C1684 + C81 * C1692) * C245) *
                C79308 * C20477) *
               C12991 +
           (((C93 * C748 + C81 * C756 + C95 * C752 + C82 * C760) * C245 +
             (C93 * C972 + C81 * C1380 + C95 * C976 + C82 * C1384) * C79307) *
                C79308 * C79110 -
            ((C95 * C4167 + C82 * C4615 + C93 * C4166 + C81 * C4614) * C79307 +
             (C95 * C3933 + C82 * C3937 + C93 * C3932 + C81 * C3936) * C245) *
                C79308 * C79117 +
            ((C93 * C6041 + C81 * C6047 + C95 * C10817 + C82 * C10818) * C245 +
             (C93 * C6225 + C81 * C6557 + C95 * C11026 + C82 * C11440) *
                 C79307) *
                C79308 * C20477) *
               C79072) *
              C78992)) /
        (p * q * std::sqrt(p + q));
    d2eezy[8] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C166 * C96 + C79308 * C167) * C245 +
              (C166 * C246 + C79308 * C563) * C79307) *
                 C81 +
             (C570 + C586) * C82) *
                C79110 -
            ((C2420 + C2406) * C82 + ((C166 * C1906 + C79308 * C2396) * C79307 +
                                      (C166 * C1682 + C79308 * C1792) * C245) *
                                         C81) *
                C79117 +
            (((C166 * C1683 + C79308 * C1793) * C245 +
              (C166 * C1907 + C79308 * C2397) * C79307) *
                 C81 +
             (C2407 + C2421) * C82) *
                C20477) *
               C12991 +
           ((((C166 * C3931 + C79308 * C4047) * C245 +
              (C166 * C4165 + C79308 * C4715) * C79307) *
                 C81 +
             (C4720 + C4728) * C82) *
                C79117 -
            ((C1487 + C1473) * C82 + ((C166 * C973 + C79308 * C1463) * C79307 +
                                      (C166 * C749 + C79308 * C859) * C245) *
                                         C81) *
                C79110 -
            ((C11545 + C11543) * C82 +
             ((C166 * C6226 + C79308 * C6638) * C79307 +
              (C166 * C6042 + C79308 * C6140) * C245) *
                 C81) *
                C20477) *
               C79072) *
              C79215 +
          ((((C2406 + C2420) * C81 + (C2410 + C2422) * C82) * C79117 -
            ((C587 + C575) * C82 + (C586 + C570) * C81) * C79110 -
            ((C2423 + C2415) * C82 + (C2421 + C2407) * C81) * C20477) *
               C12991 +
           (((C1473 + C1487) * C81 + (C1477 + C1489) * C82) * C79110 -
            ((C4729 + C4725) * C82 + (C4728 + C4720) * C81) * C79117 +
            ((C11543 + C11545) * C81 +
             ((C166 * C10817 + C79308 * C10920) * C245 +
              (C166 * C11026 + C79308 * C11539) * C79307) *
                 C82) *
                C20477) *
               C79072) *
              C78992)) /
        (p * q * std::sqrt(p + q));
    d2eezz[8] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C631 * C96 + C639 + C639 + C79307 * C632) * C79308 * C81 +
             C665 * C82) *
                C79110 -
            (C2534 * C82 +
             (C631 * C1682 + C2509 + C2509 + C79307 * C2498) * C79308 * C81) *
                C79117 +
            ((C631 * C1683 + C2510 + C2510 + C79307 * C2499) * C79308 * C81 +
             C2535 * C82) *
                C20477) *
               C12991 +
           (((C631 * C3931 + C4832 + C4832 + C79307 * C4827) * C79308 * C81 +
             C4846 * C82) *
                C79117 -
            (C1601 * C82 +
             (C631 * C749 + C1576 + C1576 + C79307 * C1565) * C79308 * C81) *
                C79110 -
            (C11651 * C82 +
             (C631 * C6042 + C6725 + C6725 + C79307 * C6718) * C79308 * C81) *
                C20477) *
               C79072) *
              C79215 +
          (((C2534 * C81 + C2536 * C82) * C79117 -
            (C666 * C82 + C665 * C81) * C79110 -
            (C2537 * C82 + C2535 * C81) * C20477) *
               C12991 +
           ((C1601 * C81 + C1603 * C82) * C79110 -
            (C4847 * C82 + C4846 * C81) * C79117 +
            (C11651 * C81 +
             (C631 * C10817 + C11647 + C11647 + C79307 * C11643) * C79308 *
                 C82) *
                C20477) *
               C79072) *
              C78992)) /
        (p * q * std::sqrt(p + q));
    d2eexx[9] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C92 * C96 + C115 + C115 + C81 * C108 + C94 * C97 + C116 +
                      C116 + C82 * C109) *
                         C79307 * C79308 * C17509 -
                     (C94 * C1681 + C1706 + C1706 + C82 * C1697 + C92 * C1682 +
                      C1707 + C1707 + C81 * C1698) *
                         C79307 * C79308 * C79114) *
                        C12991 +
                    ((C92 * C3931 + C3944 + C3944 + C81 * C3939 + C94 * C3932 +
                      C3945 + C3945 + C82 * C3940) *
                         C79307 * C79308 * C79114 -
                     (C94 * C748 + C773 + C773 + C82 * C764 + C92 * C749 +
                      C774 + C774 + C81 * C765) *
                         C79307 * C79308 * C17509) *
                        C79072) *
                       C79297 +
                   (((C92 * C1681 + C1710 + C1710 + C81 * C1697 + C94 * C1685 +
                      C1711 + C1711 + C82 * C1701) *
                         C79307 * C79308 * C79114 -
                     (C94 * C98 + C117 + C117 + C82 * C110 + C92 * C97 + C118 +
                      C118 + C81 * C109) *
                         C79307 * C79308 * C17509) *
                        C12991 +
                    ((C92 * C748 + C777 + C777 + C81 * C764 + C94 * C752 +
                      C778 + C778 + C82 * C768) *
                         C79307 * C79308 * C17509 -
                     (C94 * C3933 + C3946 + C3946 + C82 * C3941 + C92 * C3932 +
                      C3947 + C3947 + C81 * C3940) *
                         C79307 * C79308 * C79114) *
                        C79072) *
                       C79281 +
                   (((C92 * C98 + C119 + C119 + C81 * C110 + C94 * C99 + C120 +
                      C120 + C82 * C111) *
                         C79307 * C79308 * C17509 -
                     (C94 * C1687 + C1714 + C1714 + C82 * C1703 + C92 * C1685 +
                      C1715 + C1715 + C81 * C1701) *
                         C79307 * C79308 * C79114) *
                        C12991 +
                    ((C92 * C3933 + C3948 + C3948 + C81 * C3941 + C94 * C3934 +
                      C3949 + C3949 + C82 * C3942) *
                         C79307 * C79308 * C79114 -
                     (C94 * C754 + C781 + C781 + C82 * C770 + C92 * C752 +
                      C782 + C782 + C81 * C768) *
                         C79307 * C79308 * C17509) *
                        C79072) *
                       C79253)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((C92 * C96 + C115 + C115 + C81 * C108 + C94 * C97 + C116 +
                     C116 + C82 * C109) *
                        C79307 * C79308 * C17509 -
                    (C94 * C1681 + C1706 + C1706 + C82 * C1697 + C92 * C1682 +
                     C1707 + C1707 + C81 * C1698) *
                        C79307 * C79308 * C79114) *
                       C79310 +
                   ((C92 * C3931 + C3944 + C3944 + C81 * C3939 + C94 * C3932 +
                     C3945 + C3945 + C82 * C3940) *
                        C79307 * C79308 * C79114 -
                    (C94 * C748 + C773 + C773 + C82 * C764 + C92 * C749 + C774 +
                     C774 + C81 * C765) *
                        C79307 * C79308 * C17509) *
                       C79303 +
                   ((C92 * C750 + C775 + C775 + C81 * C766 + C94 * C751 + C776 +
                     C776 + C82 * C767) *
                        C79307 * C79308 * C17509 -
                    (C94 * C6043 + C6062 + C6062 + C82 * C6055 + C92 * C6044 +
                     C6063 + C6063 + C81 * C6056) *
                        C79307 * C79308 * C79114) *
                       C79290 +
                   ((C92 * C8377 + C8384 + C8384 + C81 * C8381 + C94 * C8378 +
                     C8385 + C8385 + C82 * C8382) *
                        C79307 * C79308 * C79114 -
                    (C94 * C5567 + C5580 + C5580 + C82 * C5575 + C92 * C5568 +
                     C5581 + C5581 + C81 * C5576) *
                        C79307 * C79308 * C17509) *
                       C79269) *
                  C78981) /
                     (p * q * std::sqrt(p + q));
    d2eexy[9] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C166 * C96 + C79308 * C167) * C93 +
             (C166 * C102 + C79308 * C173) * C81 + C196 * C95 + C197 * C82) *
                C79307 * C17509 -
            (C1824 * C82 + C1825 * C95 + (C166 * C1690 + C79308 * C1800) * C81 +
             (C166 * C1682 + C79308 * C1792) * C93) *
                C79307 * C79114) *
               C12991 +
           (((C166 * C3931 + C79308 * C4047) * C93 +
             (C166 * C3935 + C79308 * C4051) * C81 + C4064 * C95 +
             C4065 * C82) *
                C79307 * C79114 -
            (C891 * C82 + C892 * C95 + (C166 * C757 + C79308 * C867) * C81 +
             (C166 * C749 + C79308 * C859) * C93) *
                C79307 * C17509) *
               C79072) *
              C79297 +
          (((C1825 * C93 + C1824 * C81 + C1828 * C95 + C1829 * C82) * C79307 *
                C79114 -
            (C198 * C82 + C199 * C95 + C197 * C81 + C196 * C93) * C79307 *
                C17509) *
               C12991 +
           ((C892 * C93 + C891 * C81 + C895 * C95 + C896 * C82) * C79307 *
                C17509 -
            (C4066 * C82 + C4067 * C95 + C4065 * C81 + C4064 * C93) * C79307 *
                C79114) *
               C79072) *
              C79281 +
          (((C199 * C93 + C198 * C81 + C200 * C95 + C201 * C82) * C79307 *
                C17509 -
            (C3333 * C82 + C3334 * C95 + C1829 * C81 + C1828 * C93) * C79307 *
                C79114) *
               C12991 +
           ((C4067 * C93 + C4066 * C81 + (C166 * C3934 + C79308 * C4050) * C95 +
             (C166 * C3938 + C79308 * C4054) * C82) *
                C79307 * C79114 -
            (C2687 * C82 + C2688 * C95 + C896 * C81 + C895 * C93) * C79307 *
                C17509) *
               C79072) *
              C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C166 * C96 + C79308 * C167) * C93 +
            (C166 * C102 + C79308 * C173) * C81 + C196 * C95 + C197 * C82) *
               C79307 * C17509 -
           (C1824 * C82 + C1825 * C95 + (C166 * C1690 + C79308 * C1800) * C81 +
            (C166 * C1682 + C79308 * C1792) * C93) *
               C79307 * C79114) *
              C79310 +
          (((C166 * C3931 + C79308 * C4047) * C93 +
            (C166 * C3935 + C79308 * C4051) * C81 + C4064 * C95 + C4065 * C82) *
               C79307 * C79114 -
           (C891 * C82 + C892 * C95 + (C166 * C757 + C79308 * C867) * C81 +
            (C166 * C749 + C79308 * C859) * C93) *
               C79307 * C17509) *
              C79303 +
          (((C166 * C750 + C79308 * C860) * C93 +
            (C166 * C758 + C79308 * C868) * C81 + C893 * C95 + C894 * C82) *
               C79307 * C17509 -
           (C7587 * C82 + C7588 * C95 + (C166 * C6050 + C79308 * C6148) * C81 +
            (C166 * C6044 + C79308 * C6142) * C93) *
               C79307 * C79114) *
              C79290 +
          (((C166 * C8377 + C79308 * C8451) * C93 +
            (C166 * C8379 + C79308 * C8453) * C81 +
            (C166 * C8378 + C79308 * C8452) * C95 +
            (C166 * C8380 + C79308 * C8454) * C82) *
               C79307 * C79114 -
           (C6879 * C82 + C6880 * C95 + (C166 * C5572 + C79308 * C5630) * C81 +
            (C166 * C5568 + C79308 * C5626) * C93) *
               C79307 * C17509) *
              C79269) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eexz[9] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C245 * C96 + C79307 * C246) * C93 +
             (C245 * C102 + C79307 * C252) * C81 + C275 * C95 + C276 * C82) *
                C79308 * C17509 -
            (C1938 * C82 + C1939 * C95 + (C245 * C1690 + C79307 * C1914) * C81 +
             (C245 * C1682 + C79307 * C1906) * C93) *
                C79308 * C79114) *
               C12991 +
           (((C245 * C3931 + C79307 * C4165) * C93 +
             (C245 * C3935 + C79307 * C4169) * C81 + C4182 * C95 +
             C4183 * C82) *
                C79308 * C79114 -
            (C1005 * C82 + C1006 * C95 + (C245 * C757 + C79307 * C981) * C81 +
             (C245 * C749 + C79307 * C973) * C93) *
                C79308 * C17509) *
               C79072) *
              C79297 +
          (((C1939 * C93 + C1938 * C81 + C1942 * C95 + C1943 * C82) * C79308 *
                C79114 -
            (C277 * C82 + C278 * C95 + C276 * C81 + C275 * C93) * C79308 *
                C17509) *
               C12991 +
           ((C1006 * C93 + C1005 * C81 + C1009 * C95 + C1010 * C82) * C79308 *
                C17509 -
            (C4184 * C82 + C4185 * C95 + C4183 * C81 + C4182 * C93) * C79308 *
                C79114) *
               C79072) *
              C79281 +
          (((C278 * C93 + C277 * C81 + C279 * C95 + C280 * C82) * C79308 *
                C17509 -
            (C3407 * C82 + C3408 * C95 + C1943 * C81 + C1942 * C93) * C79308 *
                C79114) *
               C12991 +
           ((C4185 * C93 + C4184 * C81 + (C245 * C3934 + C79307 * C4168) * C95 +
             (C245 * C3938 + C79307 * C4172) * C82) *
                C79308 * C79114 -
            (C2761 * C82 + C2762 * C95 + C1010 * C81 + C1009 * C93) * C79308 *
                C17509) *
               C79072) *
              C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C245 * C96 + C79307 * C246) * C93 +
            (C245 * C102 + C79307 * C252) * C81 + C275 * C95 + C276 * C82) *
               C79308 * C17509 -
           (C1938 * C82 + C1939 * C95 + (C245 * C1690 + C79307 * C1914) * C81 +
            (C245 * C1682 + C79307 * C1906) * C93) *
               C79308 * C79114) *
              C79310 +
          (((C245 * C3931 + C79307 * C4165) * C93 +
            (C245 * C3935 + C79307 * C4169) * C81 + C4182 * C95 + C4183 * C82) *
               C79308 * C79114 -
           (C1005 * C82 + C1006 * C95 + (C245 * C757 + C79307 * C981) * C81 +
            (C245 * C749 + C79307 * C973) * C93) *
               C79308 * C17509) *
              C79303 +
          (((C245 * C750 + C79307 * C974) * C93 +
            (C245 * C758 + C79307 * C982) * C81 + C1007 * C95 + C1008 * C82) *
               C79308 * C17509 -
           (C7693 * C82 + C7694 * C95 + (C245 * C6050 + C79307 * C6234) * C81 +
            (C245 * C6044 + C79307 * C6228) * C93) *
               C79308 * C79114) *
              C79290 +
          (((C245 * C8377 + C79307 * C8521) * C93 +
            (C245 * C8379 + C79307 * C8523) * C81 +
            (C245 * C8378 + C79307 * C8522) * C95 +
            (C245 * C8380 + C79307 * C8524) * C82) *
               C79308 * C79114 -
           (C6953 * C82 + C6954 * C95 + (C245 * C5572 + C79307 * C5680) * C81 +
            (C245 * C5568 + C79307 * C5676) * C93) *
               C79308 * C17509) *
              C79269) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eeyx[9] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C166 +
             (C93 * C167 + C81 * C324 + C95 * C168 + C82 * C325) * C79308) *
                C79307 * C17509 -
            ((C95 * C1791 + C82 * C2019 + C93 * C1792 + C81 * C2020) * C79308 +
             (C95 * C1681 + C82 * C1689 + C93 * C1682 + C81 * C1690) * C166) *
                C79307 * C79114) *
               C12991 +
           (((C93 * C3931 + C81 * C3935 + C95 * C3932 + C82 * C3936) * C166 +
             (C93 * C4047 + C81 * C4283 + C95 * C4048 + C82 * C4284) * C79308) *
                C79307 * C79114 -
            ((C95 * C858 + C82 * C1086 + C93 * C859 + C81 * C1087) * C79308 +
             (C95 * C748 + C82 * C756 + C93 * C749 + C81 * C757) * C166) *
                C79307 * C17509) *
               C79072) *
              C79297 +
          ((((C93 * C1681 + C81 * C1689 + C95 * C1685 + C82 * C1693) * C166 +
             (C93 * C1791 + C81 * C2019 + C95 * C1795 + C82 * C2023) * C79308) *
                C79307 * C79114 -
            ((C95 * C169 + C82 * C326 + C93 * C168 + C81 * C325) * C79308 +
             (C95 * C98 + C82 * C104 + C93 * C97 + C81 * C103) * C166) *
                C79307 * C17509) *
               C12991 +
           (((C93 * C748 + C81 * C756 + C95 * C752 + C82 * C760) * C166 +
             (C93 * C858 + C81 * C1086 + C95 * C862 + C82 * C1090) * C79308) *
                C79307 * C17509 -
            ((C95 * C4049 + C82 * C4285 + C93 * C4048 + C81 * C4284) * C79308 +
             (C95 * C3933 + C82 * C3937 + C93 * C3932 + C81 * C3936) * C166) *
                C79307 * C79114) *
               C79072) *
              C79281 +
          ((((C93 * C98 + C81 * C104 + C95 * C99 + C82 * C105) * C166 +
             (C93 * C169 + C81 * C326 + C95 * C170 + C82 * C327) * C79308) *
                C79307 * C17509 -
            ((C95 * C1797 + C82 * C2025 + C93 * C1795 + C81 * C2023) * C79308 +
             (C95 * C1687 + C82 * C1695 + C93 * C1685 + C81 * C1693) * C166) *
                C79307 * C79114) *
               C12991 +
           (((C93 * C3933 + C81 * C3937 + C95 * C3934 + C82 * C3938) * C166 +
             (C93 * C4049 + C81 * C4285 + C95 * C4050 + C82 * C4286) * C79308) *
                C79307 * C79114 -
            ((C95 * C864 + C82 * C1092 + C93 * C862 + C81 * C1090) * C79308 +
             (C95 * C754 + C82 * C762 + C93 * C752 + C81 * C760) * C166) *
                C79307 * C17509) *
               C79072) *
              C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C166 +
            (C93 * C167 + C81 * C324 + C95 * C168 + C82 * C325) * C79308) *
               C79307 * C17509 -
           ((C95 * C1791 + C82 * C2019 + C93 * C1792 + C81 * C2020) * C79308 +
            (C95 * C1681 + C82 * C1689 + C93 * C1682 + C81 * C1690) * C166) *
               C79307 * C79114) *
              C79310 +
          (((C93 * C3931 + C81 * C3935 + C95 * C3932 + C82 * C3936) * C166 +
            (C93 * C4047 + C81 * C4283 + C95 * C4048 + C82 * C4284) * C79308) *
               C79307 * C79114 -
           ((C95 * C858 + C82 * C1086 + C93 * C859 + C81 * C1087) * C79308 +
            (C95 * C748 + C82 * C756 + C93 * C749 + C81 * C757) * C166) *
               C79307 * C17509) *
              C79303 +
          (((C93 * C750 + C81 * C758 + C95 * C751 + C82 * C759) * C166 +
            (C93 * C860 + C81 * C1088 + C95 * C861 + C82 * C1089) * C79308) *
               C79307 * C17509 -
           ((C95 * C6141 + C82 * C6313 + C93 * C6142 + C81 * C6314) * C79308 +
            (C95 * C6043 + C82 * C6049 + C93 * C6044 + C81 * C6050) * C166) *
               C79307 * C79114) *
              C79290 +
          (((C93 * C8377 + C81 * C8379 + C95 * C8378 + C82 * C8380) * C166 +
            (C93 * C8451 + C81 * C8591 + C95 * C8452 + C82 * C8592) * C79308) *
               C79307 * C79114 -
           ((C95 * C5625 + C82 * C5725 + C93 * C5626 + C81 * C5726) * C79308 +
            (C95 * C5567 + C82 * C5571 + C93 * C5568 + C81 * C5572) * C166) *
               C79307 * C17509) *
              C79269) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eeyy[9] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C372 * C96 + C380 + C380 + C79308 * C373) * C81 + C402 * C82) *
                C79307 * C17509 -
            (C2134 * C82 +
             (C372 * C1682 + C2113 + C2113 + C79308 * C2102) * C81) *
                C79307 * C79114) *
               C12991 +
           (((C372 * C3931 + C4390 + C4390 + C79308 * C4385) * C81 +
             C4402 * C82) *
                C79307 * C79114 -
            (C1201 * C82 +
             (C372 * C749 + C1180 + C1180 + C79308 * C1169) * C81) *
                C79307 * C17509) *
               C79072) *
              C79297 +
          (((C2134 * C81 + C2136 * C82) * C79307 * C79114 -
            (C403 * C82 + C402 * C81) * C79307 * C17509) *
               C12991 +
           ((C1201 * C81 + C1203 * C82) * C79307 * C17509 -
            (C4403 * C82 + C4402 * C81) * C79307 * C79114) *
               C79072) *
              C79281 +
          (((C403 * C81 + C404 * C82) * C79307 * C17509 -
            (C3548 * C82 + C2136 * C81) * C79307 * C79114) *
               C12991 +
           ((C4403 * C81 +
             (C372 * C3934 + C4397 + C4397 + C79308 * C4388) * C82) *
                C79307 * C79114 -
            (C2902 * C82 + C1203 * C81) * C79307 * C17509) *
               C79072) *
              C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C372 * C96 + C380 + C380 + C79308 * C373) * C81 + C402 * C82) *
               C79307 * C17509 -
           (C2134 * C82 +
            (C372 * C1682 + C2113 + C2113 + C79308 * C2102) * C81) *
               C79307 * C79114) *
              C79310 +
          (((C372 * C3931 + C4390 + C4390 + C79308 * C4385) * C81 +
            C4402 * C82) *
               C79307 * C79114 -
           (C1201 * C82 +
            (C372 * C749 + C1180 + C1180 + C79308 * C1169) * C81) *
               C79307 * C17509) *
              C79303 +
          (((C372 * C750 + C1181 + C1181 + C79308 * C1170) * C81 +
            C1202 * C82) *
               C79307 * C17509 -
           (C7898 * C82 +
            (C372 * C6044 + C6401 + C6401 + C79308 * C6394) * C81) *
               C79307 * C79114) *
              C79290 +
          (((C372 * C8377 + C8662 + C8662 + C79308 * C8659) * C81 +
            (C372 * C8378 + C8663 + C8663 + C79308 * C8660) * C82) *
               C79307 * C79114 -
           (C7094 * C82 +
            (C372 * C5568 + C5777 + C5777 + C79308 * C5772) * C81) *
               C79307 * C17509) *
              C79269) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eeyz[9] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C245 * C96 + C79307 * C246) * C166 +
              (C245 * C167 + C79307 * C447) * C79308) *
                 C81 +
             (C454 + C470) * C82) *
                C17509 -
            ((C2236 + C2222) * C82 + ((C245 * C1792 + C79307 * C2212) * C79308 +
                                      (C245 * C1682 + C79307 * C1906) * C166) *
                                         C81) *
                C79114) *
               C12991 +
           ((((C245 * C3931 + C79307 * C4165) * C166 +
              (C245 * C4047 + C79307 * C4501) * C79308) *
                 C81 +
             (C4506 + C4514) * C82) *
                C79114 -
            ((C1303 + C1289) * C82 + ((C245 * C859 + C79307 * C1279) * C79308 +
                                      (C245 * C749 + C79307 * C973) * C166) *
                                         C81) *
                C17509) *
               C79072) *
              C79297 +
          ((((C2222 + C2236) * C81 + (C2226 + C2238) * C82) * C79114 -
            ((C471 + C459) * C82 + (C470 + C454) * C81) * C17509) *
               C12991 +
           (((C1289 + C1303) * C81 + (C1293 + C1305) * C82) * C17509 -
            ((C4515 + C4511) * C82 + (C4514 + C4506) * C81) * C79114) *
               C79072) *
              C79281 +
          ((((C459 + C471) * C81 + (C460 + C472) * C82) * C17509 -
            ((C3620 + C3618) * C82 + (C2238 + C2226) * C81) * C79114) *
               C12991 +
           (((C4511 + C4515) * C81 +
             ((C245 * C3934 + C79307 * C4168) * C166 +
              (C245 * C4050 + C79307 * C4504) * C79308) *
                 C82) *
                C79114 -
            ((C2974 + C2972) * C82 + (C1305 + C1293) * C81) * C17509) *
               C79072) *
              C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C245 * C96 + C79307 * C246) * C166 +
             (C245 * C167 + C79307 * C447) * C79308) *
                C81 +
            (C454 + C470) * C82) *
               C17509 -
           ((C2236 + C2222) * C82 + ((C245 * C1792 + C79307 * C2212) * C79308 +
                                     (C245 * C1682 + C79307 * C1906) * C166) *
                                        C81) *
               C79114) *
              C79310 +
          ((((C245 * C3931 + C79307 * C4165) * C166 +
             (C245 * C4047 + C79307 * C4501) * C79308) *
                C81 +
            (C4506 + C4514) * C82) *
               C79114 -
           ((C1303 + C1289) * C82 + ((C245 * C859 + C79307 * C1279) * C79308 +
                                     (C245 * C749 + C79307 * C973) * C166) *
                                        C81) *
               C17509) *
              C79303 +
          ((((C245 * C750 + C79307 * C974) * C166 +
             (C245 * C860 + C79307 * C1280) * C79308) *
                C81 +
            (C1290 + C1304) * C82) *
               C17509 -
           ((C8002 + C8000) * C82 + ((C245 * C6142 + C79307 * C6480) * C79308 +
                                     (C245 * C6044 + C79307 * C6228) * C166) *
                                        C81) *
               C79114) *
              C79290 +
          ((((C245 * C8377 + C79307 * C8521) * C166 +
             (C245 * C8451 + C79307 * C8729) * C79308) *
                C81 +
            ((C245 * C8378 + C79307 * C8522) * C166 +
             (C245 * C8452 + C79307 * C8730) * C79308) *
                C82) *
               C79114 -
           ((C7166 + C7164) * C82 + ((C245 * C5626 + C79307 * C5822) * C79308 +
                                     (C245 * C5568 + C79307 * C5676) * C166) *
                                        C81) *
               C17509) *
              C79269) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eezx[9] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C245 +
             (C93 * C246 + C81 * C515 + C95 * C247 + C82 * C516) * C79307) *
                C79308 * C17509 -
            ((C95 * C1905 + C82 * C2313 + C93 * C1906 + C81 * C2314) * C79307 +
             (C95 * C1681 + C82 * C1689 + C93 * C1682 + C81 * C1690) * C245) *
                C79308 * C79114) *
               C12991 +
           (((C93 * C3931 + C81 * C3935 + C95 * C3932 + C82 * C3936) * C245 +
             (C93 * C4165 + C81 * C4613 + C95 * C4166 + C82 * C4614) * C79307) *
                C79308 * C79114 -
            ((C95 * C972 + C82 * C1380 + C93 * C973 + C81 * C1381) * C79307 +
             (C95 * C748 + C82 * C756 + C93 * C749 + C81 * C757) * C245) *
                C79308 * C17509) *
               C79072) *
              C79297 +
          ((((C93 * C1681 + C81 * C1689 + C95 * C1685 + C82 * C1693) * C245 +
             (C93 * C1905 + C81 * C2313 + C95 * C1909 + C82 * C2317) * C79307) *
                C79308 * C79114 -
            ((C95 * C248 + C82 * C517 + C93 * C247 + C81 * C516) * C79307 +
             (C95 * C98 + C82 * C104 + C93 * C97 + C81 * C103) * C245) *
                C79308 * C17509) *
               C12991 +
           (((C93 * C748 + C81 * C756 + C95 * C752 + C82 * C760) * C245 +
             (C93 * C972 + C81 * C1380 + C95 * C976 + C82 * C1384) * C79307) *
                C79308 * C17509 -
            ((C95 * C4167 + C82 * C4615 + C93 * C4166 + C81 * C4614) * C79307 +
             (C95 * C3933 + C82 * C3937 + C93 * C3932 + C81 * C3936) * C245) *
                C79308 * C79114) *
               C79072) *
              C79281 +
          ((((C93 * C98 + C81 * C104 + C95 * C99 + C82 * C105) * C245 +
             (C93 * C248 + C81 * C517 + C95 * C249 + C82 * C518) * C79307) *
                C79308 * C17509 -
            ((C95 * C1911 + C82 * C2319 + C93 * C1909 + C81 * C2317) * C79307 +
             (C95 * C1687 + C82 * C1695 + C93 * C1685 + C81 * C1693) * C245) *
                C79308 * C79114) *
               C12991 +
           (((C93 * C3933 + C81 * C3937 + C95 * C3934 + C82 * C3938) * C245 +
             (C93 * C4167 + C81 * C4615 + C95 * C4168 + C82 * C4616) * C79307) *
                C79308 * C79114 -
            ((C95 * C978 + C82 * C1386 + C93 * C976 + C81 * C1384) * C79307 +
             (C95 * C754 + C82 * C762 + C93 * C752 + C81 * C760) * C245) *
                C79308 * C17509) *
               C79072) *
              C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C245 +
            (C93 * C246 + C81 * C515 + C95 * C247 + C82 * C516) * C79307) *
               C79308 * C17509 -
           ((C95 * C1905 + C82 * C2313 + C93 * C1906 + C81 * C2314) * C79307 +
            (C95 * C1681 + C82 * C1689 + C93 * C1682 + C81 * C1690) * C245) *
               C79308 * C79114) *
              C79310 +
          (((C93 * C3931 + C81 * C3935 + C95 * C3932 + C82 * C3936) * C245 +
            (C93 * C4165 + C81 * C4613 + C95 * C4166 + C82 * C4614) * C79307) *
               C79308 * C79114 -
           ((C95 * C972 + C82 * C1380 + C93 * C973 + C81 * C1381) * C79307 +
            (C95 * C748 + C82 * C756 + C93 * C749 + C81 * C757) * C245) *
               C79308 * C17509) *
              C79303 +
          (((C93 * C750 + C81 * C758 + C95 * C751 + C82 * C759) * C245 +
            (C93 * C974 + C81 * C1382 + C95 * C975 + C82 * C1383) * C79307) *
               C79308 * C17509 -
           ((C95 * C6227 + C82 * C6559 + C93 * C6228 + C81 * C6560) * C79307 +
            (C95 * C6043 + C82 * C6049 + C93 * C6044 + C81 * C6050) * C245) *
               C79308 * C79114) *
              C79290 +
          (((C93 * C8377 + C81 * C8379 + C95 * C8378 + C82 * C8380) * C245 +
            (C93 * C8521 + C81 * C8797 + C95 * C8522 + C82 * C8798) * C79307) *
               C79308 * C79114 -
           ((C95 * C5675 + C82 * C5867 + C93 * C5676 + C81 * C5868) * C79307 +
            (C95 * C5567 + C82 * C5571 + C93 * C5568 + C81 * C5572) * C245) *
               C79308 * C17509) *
              C79269) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eezy[9] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C166 * C96 + C79308 * C167) * C245 +
              (C166 * C246 + C79308 * C563) * C79307) *
                 C81 +
             (C570 + C586) * C82) *
                C17509 -
            ((C2420 + C2406) * C82 + ((C166 * C1906 + C79308 * C2396) * C79307 +
                                      (C166 * C1682 + C79308 * C1792) * C245) *
                                         C81) *
                C79114) *
               C12991 +
           ((((C166 * C3931 + C79308 * C4047) * C245 +
              (C166 * C4165 + C79308 * C4715) * C79307) *
                 C81 +
             (C4720 + C4728) * C82) *
                C79114 -
            ((C1487 + C1473) * C82 + ((C166 * C973 + C79308 * C1463) * C79307 +
                                      (C166 * C749 + C79308 * C859) * C245) *
                                         C81) *
                C17509) *
               C79072) *
              C79297 +
          ((((C2406 + C2420) * C81 + (C2410 + C2422) * C82) * C79114 -
            ((C587 + C575) * C82 + (C586 + C570) * C81) * C17509) *
               C12991 +
           (((C1473 + C1487) * C81 + (C1477 + C1489) * C82) * C17509 -
            ((C4729 + C4725) * C82 + (C4728 + C4720) * C81) * C79114) *
               C79072) *
              C79281 +
          ((((C575 + C587) * C81 + (C576 + C588) * C82) * C17509 -
            ((C3759 + C3757) * C82 + (C2422 + C2410) * C81) * C79114) *
               C12991 +
           (((C4725 + C4729) * C81 +
             ((C166 * C3934 + C79308 * C4050) * C245 +
              (C166 * C4168 + C79308 * C4718) * C79307) *
                 C82) *
                C79114 -
            ((C3113 + C3111) * C82 + (C1489 + C1477) * C81) * C17509) *
               C79072) *
              C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C166 * C96 + C79308 * C167) * C245 +
             (C166 * C246 + C79308 * C563) * C79307) *
                C81 +
            (C570 + C586) * C82) *
               C17509 -
           ((C2420 + C2406) * C82 + ((C166 * C1906 + C79308 * C2396) * C79307 +
                                     (C166 * C1682 + C79308 * C1792) * C245) *
                                        C81) *
               C79114) *
              C79310 +
          ((((C166 * C3931 + C79308 * C4047) * C245 +
             (C166 * C4165 + C79308 * C4715) * C79307) *
                C81 +
            (C4720 + C4728) * C82) *
               C79114 -
           ((C1487 + C1473) * C82 + ((C166 * C973 + C79308 * C1463) * C79307 +
                                     (C166 * C749 + C79308 * C859) * C245) *
                                        C81) *
               C17509) *
              C79303 +
          ((((C166 * C750 + C79308 * C860) * C245 +
             (C166 * C974 + C79308 * C1464) * C79307) *
                C81 +
            (C1474 + C1488) * C82) *
               C17509 -
           ((C8205 + C8203) * C82 + ((C166 * C6228 + C79308 * C6640) * C79307 +
                                     (C166 * C6044 + C79308 * C6142) * C245) *
                                        C81) *
               C79114) *
              C79290 +
          ((((C166 * C8377 + C79308 * C8451) * C245 +
             (C166 * C8521 + C79308 * C8865) * C79307) *
                C81 +
            ((C166 * C8378 + C79308 * C8452) * C245 +
             (C166 * C8522 + C79308 * C8866) * C79307) *
                C82) *
               C79114 -
           ((C7305 + C7303) * C82 + ((C166 * C5676 + C79308 * C5914) * C79307 +
                                     (C166 * C5568 + C79308 * C5626) * C245) *
                                        C81) *
               C17509) *
              C79269) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eezz[9] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C631 * C96 + C639 + C639 + C79307 * C632) * C79308 * C81 +
             C665 * C82) *
                C17509 -
            (C2534 * C82 +
             (C631 * C1682 + C2509 + C2509 + C79307 * C2498) * C79308 * C81) *
                C79114) *
               C12991 +
           (((C631 * C3931 + C4832 + C4832 + C79307 * C4827) * C79308 * C81 +
             C4846 * C82) *
                C79114 -
            (C1601 * C82 +
             (C631 * C749 + C1576 + C1576 + C79307 * C1565) * C79308 * C81) *
                C17509) *
               C79072) *
              C79297 +
          (((C2534 * C81 + C2536 * C82) * C79114 -
            (C666 * C82 + C665 * C81) * C17509) *
               C12991 +
           ((C1601 * C81 + C1603 * C82) * C17509 -
            (C4847 * C82 + C4846 * C81) * C79114) *
               C79072) *
              C79281 +
          (((C666 * C81 + C667 * C82) * C17509 -
            (C3833 * C82 + C2536 * C81) * C79114) *
               C12991 +
           ((C4847 * C81 +
             (C631 * C3934 + C4839 + C4839 + C79307 * C4830) * C79308 * C82) *
                C79114 -
            (C3187 * C82 + C1603 * C81) * C17509) *
               C79072) *
              C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C631 * C96 + C639 + C639 + C79307 * C632) * C79308 * C81 +
            C665 * C82) *
               C17509 -
           (C2534 * C82 +
            (C631 * C1682 + C2509 + C2509 + C79307 * C2498) * C79308 * C81) *
               C79114) *
              C79310 +
          (((C631 * C3931 + C4832 + C4832 + C79307 * C4827) * C79308 * C81 +
            C4846 * C82) *
               C79114 -
           (C1601 * C82 +
            (C631 * C749 + C1576 + C1576 + C79307 * C1565) * C79308 * C81) *
               C17509) *
              C79303 +
          (((C631 * C750 + C1577 + C1577 + C79307 * C1566) * C79308 * C81 +
            C1602 * C82) *
               C17509 -
           (C8311 * C82 +
            (C631 * C6044 + C6727 + C6727 + C79307 * C6720) * C79308 * C81) *
               C79114) *
              C79290 +
          (((C631 * C8377 + C8936 + C8936 + C79307 * C8933) * C79308 * C81 +
            (C631 * C8378 + C8937 + C8937 + C79307 * C8934) * C79308 * C82) *
               C79114 -
           (C7379 * C82 +
            (C631 * C5568 + C5965 + C5965 + C79307 * C5960) * C79308 * C81) *
               C17509) *
              C79269) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eexx[10] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C92 * C96 + C115 + C115 + C81 * C108 + C94 * C97 + C116 +
                      C116 + C82 * C109) *
                         C79307 * C79308 * C79027 * C6795 -
                     (C94 * C748 + C773 + C773 + C82 * C764 + C92 * C749 +
                      C774 + C774 + C81 * C765) *
                         C79307 * C79308 * C79027 * C6796 +
                     (C92 * C750 + C775 + C775 + C81 * C766 + C94 * C751 +
                      C776 + C776 + C82 * C767) *
                         C79307 * C79308 * C79027 * C6797 -
                     (C94 * C5567 + C5580 + C5580 + C82 * C5575 + C92 * C5568 +
                      C5581 + C5581 + C81 * C5576) *
                         C79307 * C79308 * C79027 * C79269) *
                        C79215 +
                    ((C92 * C748 + C777 + C777 + C81 * C764 + C94 * C752 +
                      C778 + C778 + C82 * C768) *
                         C79307 * C79308 * C79027 * C6796 -
                     (C94 * C98 + C117 + C117 + C82 * C110 + C92 * C97 + C118 +
                      C118 + C81 * C109) *
                         C79307 * C79308 * C79027 * C6795 -
                     (C94 * C753 + C779 + C779 + C82 * C769 + C92 * C751 +
                      C780 + C780 + C81 * C767) *
                         C79307 * C79308 * C79027 * C6797 +
                     (C92 * C5567 + C6805 + C6805 + C81 * C5575 + C94 * C6801 +
                      C6806 + C6806 + C82 * C6803) *
                         C79307 * C79308 * C79027 * C79269) *
                        C78992)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C92 * C96 + C115 + C115 + C81 * C108 + C94 * C97 + C116 +
                      C116 + C82 * C109) *
                         C79307 * C79308 * C79027 * C79229 -
                     (C94 * C748 + C773 + C773 + C82 * C764 + C92 * C749 +
                      C774 + C774 + C81 * C765) *
                         C79307 * C79308 * C79027 * C79072) *
                        C2605 +
                    ((C92 * C748 + C777 + C777 + C81 * C764 + C94 * C752 +
                      C778 + C778 + C82 * C768) *
                         C79307 * C79308 * C79027 * C79072 -
                     (C94 * C98 + C117 + C117 + C82 * C110 + C92 * C97 + C118 +
                      C118 + C81 * C109) *
                         C79307 * C79308 * C79027 * C79229) *
                        C2606 +
                    ((C92 * C98 + C119 + C119 + C81 * C110 + C94 * C99 + C120 +
                      C120 + C82 * C111) *
                         C79307 * C79308 * C79027 * C79229 -
                     (C94 * C754 + C781 + C781 + C82 * C770 + C92 * C752 +
                      C782 + C782 + C81 * C768) *
                         C79307 * C79308 * C79027 * C79072) *
                        C2607 +
                    ((C92 * C754 + C2613 + C2613 + C81 * C770 + C94 * C2609 +
                      C2614 + C2614 + C82 * C2611) *
                         C79307 * C79308 * C79027 * C79072 -
                     (C94 * C100 + C121 + C121 + C82 * C112 + C92 * C99 + C122 +
                      C122 + C81 * C111) *
                         C79307 * C79308 * C79027 * C79229) *
                        C79263)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C92 * C96 + C115 + C115 + C81 * C108 + C94 * C97 + C116 +
                       C116 + C82 * C109) *
                          C79307 * C79308 * C9011 -
                      (C94 * C1681 + C1706 + C1706 + C82 * C1697 + C92 * C1682 +
                       C1707 + C1707 + C81 * C1698) *
                          C79307 * C79308 * C9012 +
                      (C92 * C1683 + C1708 + C1708 + C81 * C1699 + C94 * C1684 +
                       C1709 + C1709 + C82 * C1700) *
                          C79307 * C79308 * C79262) *
                         C79229 +
                     ((C92 * C3931 + C3944 + C3944 + C81 * C3939 + C94 * C3932 +
                       C3945 + C3945 + C82 * C3940) *
                          C79307 * C79308 * C9012 -
                      (C94 * C748 + C773 + C773 + C82 * C764 + C92 * C749 +
                       C774 + C774 + C81 * C765) *
                          C79307 * C79308 * C9011 -
                      (C94 * C6041 + C6060 + C6060 + C82 * C6053 + C92 * C6042 +
                       C6061 + C6061 + C81 * C6054) *
                          C79307 * C79308 * C79262) *
                         C79072) *
                        C79215 +
                    (((C92 * C1681 + C1710 + C1710 + C81 * C1697 + C94 * C1685 +
                       C1711 + C1711 + C82 * C1701) *
                          C79307 * C79308 * C9012 -
                      (C94 * C98 + C117 + C117 + C82 * C110 + C92 * C97 + C118 +
                       C118 + C81 * C109) *
                          C79307 * C79308 * C9011 -
                      (C94 * C1686 + C1712 + C1712 + C82 * C1702 + C92 * C1684 +
                       C1713 + C1713 + C81 * C1700) *
                          C79307 * C79308 * C79262) *
                         C79229 +
                     ((C92 * C748 + C777 + C777 + C81 * C764 + C94 * C752 +
                       C778 + C778 + C82 * C768) *
                          C79307 * C79308 * C9011 -
                      (C94 * C3933 + C3946 + C3946 + C82 * C3941 + C92 * C3932 +
                       C3947 + C3947 + C81 * C3940) *
                          C79307 * C79308 * C9012 +
                      (C92 * C6041 + C10821 + C10821 + C81 * C6053 +
                       C94 * C10817 + C10822 + C10822 + C82 * C10819) *
                          C79307 * C79308 * C79262) *
                         C79072) *
                        C78992)) /
                      (p * q * std::sqrt(p + q));
    d2eexy[10] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C166 * C96 + C79308 * C167) * C93 +
            (C166 * C102 + C79308 * C173) * C81 + C196 * C95 + C197 * C82) *
               C79307 * C79027 * C6795 -
           (C891 * C82 + C892 * C95 + (C166 * C757 + C79308 * C867) * C81 +
            (C166 * C749 + C79308 * C859) * C93) *
               C79307 * C79027 * C6796 +
           ((C166 * C750 + C79308 * C860) * C93 +
            (C166 * C758 + C79308 * C868) * C81 + C893 * C95 + C894 * C82) *
               C79307 * C79027 * C6797 -
           (C6879 * C82 + C6880 * C95 + (C166 * C5572 + C79308 * C5630) * C81 +
            (C166 * C5568 + C79308 * C5626) * C93) *
               C79307 * C79027 * C79269) *
              C79215 +
          ((C892 * C93 + C891 * C81 + C895 * C95 + C896 * C82) * C79307 *
               C79027 * C6796 -
           (C198 * C82 + C199 * C95 + C197 * C81 + C196 * C93) * C79307 *
               C79027 * C6795 -
           (C897 * C82 + C898 * C95 + C894 * C81 + C893 * C93) * C79307 *
               C79027 * C6797 +
           (C6880 * C93 + C6879 * C81 + (C166 * C6801 + C79308 * C6872) * C95 +
            (C166 * C6802 + C79308 * C6873) * C82) *
               C79307 * C79027 * C79269) *
              C78992)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C166 * C96 + C79308 * C167) * C93 +
            (C166 * C102 + C79308 * C173) * C81 + C196 * C95 + C197 * C82) *
               C79307 * C79027 * C79229 -
           (C891 * C82 + C892 * C95 + (C166 * C757 + C79308 * C867) * C81 +
            (C166 * C749 + C79308 * C859) * C93) *
               C79307 * C79027 * C79072) *
              C2605 +
          ((C892 * C93 + C891 * C81 + C895 * C95 + C896 * C82) * C79307 *
               C79027 * C79072 -
           (C198 * C82 + C199 * C95 + C197 * C81 + C196 * C93) * C79307 *
               C79027 * C79229) *
              C2606 +
          ((C199 * C93 + C198 * C81 + C200 * C95 + C201 * C82) * C79307 *
               C79027 * C79229 -
           (C2687 * C82 + C2688 * C95 + C896 * C81 + C895 * C93) * C79307 *
               C79027 * C79072) *
              C2607 +
          ((C2688 * C93 + C2687 * C81 + (C166 * C2609 + C79308 * C2680) * C95 +
            (C166 * C2610 + C79308 * C2681) * C82) *
               C79307 * C79027 * C79072 -
           (C202 * C82 + C203 * C95 + C201 * C81 + C200 * C93) * C79307 *
               C79027 * C79229) *
              C79263)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C166 * C96 + C79308 * C167) * C93 +
             (C166 * C102 + C79308 * C173) * C81 + C196 * C95 + C197 * C82) *
                C79307 * C9011 -
            (C1824 * C82 + C1825 * C95 + (C166 * C1690 + C79308 * C1800) * C81 +
             (C166 * C1682 + C79308 * C1792) * C93) *
                C79307 * C9012 +
            ((C166 * C1683 + C79308 * C1793) * C93 +
             (C166 * C1691 + C79308 * C1801) * C81 + C1826 * C95 +
             C1827 * C82) *
                C79307 * C79262) *
               C79229 +
           (((C166 * C3931 + C79308 * C4047) * C93 +
             (C166 * C3935 + C79308 * C4051) * C81 + C4064 * C95 +
             C4065 * C82) *
                C79307 * C9012 -
            (C891 * C82 + C892 * C95 + (C166 * C757 + C79308 * C867) * C81 +
             (C166 * C749 + C79308 * C859) * C93) *
                C79307 * C9011 -
            (C10927 * C82 + C10928 * C95 +
             (C166 * C6048 + C79308 * C6146) * C81 +
             (C166 * C6042 + C79308 * C6140) * C93) *
                C79307 * C79262) *
               C79072) *
              C79215 +
          (((C1825 * C93 + C1824 * C81 + C1828 * C95 + C1829 * C82) * C79307 *
                C9012 -
            (C198 * C82 + C199 * C95 + C197 * C81 + C196 * C93) * C79307 *
                C9011 -
            (C1830 * C82 + C1831 * C95 + C1827 * C81 + C1826 * C93) * C79307 *
                C79262) *
               C79229 +
           ((C892 * C93 + C891 * C81 + C895 * C95 + C896 * C82) * C79307 *
                C9011 -
            (C4066 * C82 + C4067 * C95 + C4065 * C81 + C4064 * C93) * C79307 *
                C9012 +
            (C10928 * C93 + C10927 * C81 +
             (C166 * C10817 + C79308 * C10920) * C95 +
             (C166 * C10818 + C79308 * C10921) * C82) *
                C79307 * C79262) *
               C79072) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eexz[10] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C245 * C96 + C79307 * C246) * C93 +
            (C245 * C102 + C79307 * C252) * C81 + C275 * C95 + C276 * C82) *
               C79308 * C79027 * C6795 -
           (C1005 * C82 + C1006 * C95 + (C245 * C757 + C79307 * C981) * C81 +
            (C245 * C749 + C79307 * C973) * C93) *
               C79308 * C79027 * C6796 +
           ((C245 * C750 + C79307 * C974) * C93 +
            (C245 * C758 + C79307 * C982) * C81 + C1007 * C95 + C1008 * C82) *
               C79308 * C79027 * C6797 -
           (C6953 * C82 + C6954 * C95 + (C245 * C5572 + C79307 * C5680) * C81 +
            (C245 * C5568 + C79307 * C5676) * C93) *
               C79308 * C79027 * C79269) *
              C79215 +
          ((C1006 * C93 + C1005 * C81 + C1009 * C95 + C1010 * C82) * C79308 *
               C79027 * C6796 -
           (C277 * C82 + C278 * C95 + C276 * C81 + C275 * C93) * C79308 *
               C79027 * C6795 -
           (C1011 * C82 + C1012 * C95 + C1008 * C81 + C1007 * C93) * C79308 *
               C79027 * C6797 +
           (C6954 * C93 + C6953 * C81 + (C245 * C6801 + C79307 * C6946) * C95 +
            (C245 * C6802 + C79307 * C6947) * C82) *
               C79308 * C79027 * C79269) *
              C78992)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C245 * C96 + C79307 * C246) * C93 +
            (C245 * C102 + C79307 * C252) * C81 + C275 * C95 + C276 * C82) *
               C79308 * C79027 * C79229 -
           (C1005 * C82 + C1006 * C95 + (C245 * C757 + C79307 * C981) * C81 +
            (C245 * C749 + C79307 * C973) * C93) *
               C79308 * C79027 * C79072) *
              C2605 +
          ((C1006 * C93 + C1005 * C81 + C1009 * C95 + C1010 * C82) * C79308 *
               C79027 * C79072 -
           (C277 * C82 + C278 * C95 + C276 * C81 + C275 * C93) * C79308 *
               C79027 * C79229) *
              C2606 +
          ((C278 * C93 + C277 * C81 + C279 * C95 + C280 * C82) * C79308 *
               C79027 * C79229 -
           (C2761 * C82 + C2762 * C95 + C1010 * C81 + C1009 * C93) * C79308 *
               C79027 * C79072) *
              C2607 +
          ((C2762 * C93 + C2761 * C81 + (C245 * C2609 + C79307 * C2754) * C95 +
            (C245 * C2610 + C79307 * C2755) * C82) *
               C79308 * C79027 * C79072 -
           (C281 * C82 + C282 * C95 + C280 * C81 + C279 * C93) * C79308 *
               C79027 * C79229) *
              C79263)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C245 * C96 + C79307 * C246) * C93 +
             (C245 * C102 + C79307 * C252) * C81 + C275 * C95 + C276 * C82) *
                C79308 * C9011 -
            (C1938 * C82 + C1939 * C95 + (C245 * C1690 + C79307 * C1914) * C81 +
             (C245 * C1682 + C79307 * C1906) * C93) *
                C79308 * C9012 +
            ((C245 * C1683 + C79307 * C1907) * C93 +
             (C245 * C1691 + C79307 * C1915) * C81 + C1940 * C95 +
             C1941 * C82) *
                C79308 * C79262) *
               C79229 +
           (((C245 * C3931 + C79307 * C4165) * C93 +
             (C245 * C3935 + C79307 * C4169) * C81 + C4182 * C95 +
             C4183 * C82) *
                C79308 * C9012 -
            (C1005 * C82 + C1006 * C95 + (C245 * C757 + C79307 * C981) * C81 +
             (C245 * C749 + C79307 * C973) * C93) *
                C79308 * C9011 -
            (C11033 * C82 + C11034 * C95 +
             (C245 * C6048 + C79307 * C6232) * C81 +
             (C245 * C6042 + C79307 * C6226) * C93) *
                C79308 * C79262) *
               C79072) *
              C79215 +
          (((C1939 * C93 + C1938 * C81 + C1942 * C95 + C1943 * C82) * C79308 *
                C9012 -
            (C277 * C82 + C278 * C95 + C276 * C81 + C275 * C93) * C79308 *
                C9011 -
            (C1944 * C82 + C1945 * C95 + C1941 * C81 + C1940 * C93) * C79308 *
                C79262) *
               C79229 +
           ((C1006 * C93 + C1005 * C81 + C1009 * C95 + C1010 * C82) * C79308 *
                C9011 -
            (C4184 * C82 + C4185 * C95 + C4183 * C81 + C4182 * C93) * C79308 *
                C9012 +
            (C11034 * C93 + C11033 * C81 +
             (C245 * C10817 + C79307 * C11026) * C95 +
             (C245 * C10818 + C79307 * C11027) * C82) *
                C79308 * C79262) *
               C79072) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eeyx[10] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C166 +
            (C93 * C167 + C81 * C324 + C95 * C168 + C82 * C325) * C79308) *
               C79307 * C79027 * C6795 -
           ((C95 * C858 + C82 * C1086 + C93 * C859 + C81 * C1087) * C79308 +
            (C95 * C748 + C82 * C756 + C93 * C749 + C81 * C757) * C166) *
               C79307 * C79027 * C6796 +
           ((C93 * C750 + C81 * C758 + C95 * C751 + C82 * C759) * C166 +
            (C93 * C860 + C81 * C1088 + C95 * C861 + C82 * C1089) * C79308) *
               C79307 * C79027 * C6797 -
           ((C95 * C5625 + C82 * C5725 + C93 * C5626 + C81 * C5726) * C79308 +
            (C95 * C5567 + C82 * C5571 + C93 * C5568 + C81 * C5572) * C166) *
               C79307 * C79027 * C79269) *
              C79215 +
          (((C93 * C748 + C81 * C756 + C95 * C752 + C82 * C760) * C166 +
            (C93 * C858 + C81 * C1086 + C95 * C862 + C82 * C1090) * C79308) *
               C79307 * C79027 * C6796 -
           ((C95 * C169 + C82 * C326 + C93 * C168 + C81 * C325) * C79308 +
            (C95 * C98 + C82 * C104 + C93 * C97 + C81 * C103) * C166) *
               C79307 * C79027 * C6795 -
           ((C95 * C863 + C82 * C1091 + C93 * C861 + C81 * C1089) * C79308 +
            (C95 * C753 + C82 * C761 + C93 * C751 + C81 * C759) * C166) *
               C79307 * C79027 * C6797 +
           ((C93 * C5567 + C81 * C5571 + C95 * C6801 + C82 * C6802) * C166 +
            (C93 * C5625 + C81 * C5725 + C95 * C6872 + C82 * C7020) * C79308) *
               C79307 * C79027 * C79269) *
              C78992)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C166 +
            (C93 * C167 + C81 * C324 + C95 * C168 + C82 * C325) * C79308) *
               C79307 * C79027 * C79229 -
           ((C95 * C858 + C82 * C1086 + C93 * C859 + C81 * C1087) * C79308 +
            (C95 * C748 + C82 * C756 + C93 * C749 + C81 * C757) * C166) *
               C79307 * C79027 * C79072) *
              C2605 +
          (((C93 * C748 + C81 * C756 + C95 * C752 + C82 * C760) * C166 +
            (C93 * C858 + C81 * C1086 + C95 * C862 + C82 * C1090) * C79308) *
               C79307 * C79027 * C79072 -
           ((C95 * C169 + C82 * C326 + C93 * C168 + C81 * C325) * C79308 +
            (C95 * C98 + C82 * C104 + C93 * C97 + C81 * C103) * C166) *
               C79307 * C79027 * C79229) *
              C2606 +
          (((C93 * C98 + C81 * C104 + C95 * C99 + C82 * C105) * C166 +
            (C93 * C169 + C81 * C326 + C95 * C170 + C82 * C327) * C79308) *
               C79307 * C79027 * C79229 -
           ((C95 * C864 + C82 * C1092 + C93 * C862 + C81 * C1090) * C79308 +
            (C95 * C754 + C82 * C762 + C93 * C752 + C81 * C760) * C166) *
               C79307 * C79027 * C79072) *
              C2607 +
          (((C93 * C754 + C81 * C762 + C95 * C2609 + C82 * C2610) * C166 +
            (C93 * C864 + C81 * C1092 + C95 * C2680 + C82 * C2828) * C79308) *
               C79307 * C79027 * C79072 -
           ((C95 * C171 + C82 * C328 + C93 * C170 + C81 * C327) * C79308 +
            (C95 * C100 + C82 * C106 + C93 * C99 + C81 * C105) * C166) *
               C79307 * C79027 * C79229) *
              C79263)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C166 +
             (C93 * C167 + C81 * C324 + C95 * C168 + C82 * C325) * C79308) *
                C79307 * C9011 -
            ((C95 * C1791 + C82 * C2019 + C93 * C1792 + C81 * C2020) * C79308 +
             (C95 * C1681 + C82 * C1689 + C93 * C1682 + C81 * C1690) * C166) *
                C79307 * C9012 +
            ((C93 * C1683 + C81 * C1691 + C95 * C1684 + C82 * C1692) * C166 +
             (C93 * C1793 + C81 * C2021 + C95 * C1794 + C82 * C2022) * C79308) *
                C79307 * C79262) *
               C79229 +
           (((C93 * C3931 + C81 * C3935 + C95 * C3932 + C82 * C3936) * C166 +
             (C93 * C4047 + C81 * C4283 + C95 * C4048 + C82 * C4284) * C79308) *
                C79307 * C9012 -
            ((C95 * C858 + C82 * C1086 + C93 * C859 + C81 * C1087) * C79308 +
             (C95 * C748 + C82 * C756 + C93 * C749 + C81 * C757) * C166) *
                C79307 * C9011 -
            ((C95 * C6139 + C82 * C6311 + C93 * C6140 + C81 * C6312) * C79308 +
             (C95 * C6041 + C82 * C6047 + C93 * C6042 + C81 * C6048) * C166) *
                C79307 * C79262) *
               C79072) *
              C79215 +
          ((((C93 * C1681 + C81 * C1689 + C95 * C1685 + C82 * C1693) * C166 +
             (C93 * C1791 + C81 * C2019 + C95 * C1795 + C82 * C2023) * C79308) *
                C79307 * C9012 -
            ((C95 * C169 + C82 * C326 + C93 * C168 + C81 * C325) * C79308 +
             (C95 * C98 + C82 * C104 + C93 * C97 + C81 * C103) * C166) *
                C79307 * C9011 -
            ((C95 * C1796 + C82 * C2024 + C93 * C1794 + C81 * C2022) * C79308 +
             (C95 * C1686 + C82 * C1694 + C93 * C1684 + C81 * C1692) * C166) *
                C79307 * C79262) *
               C79229 +
           (((C93 * C748 + C81 * C756 + C95 * C752 + C82 * C760) * C166 +
             (C93 * C858 + C81 * C1086 + C95 * C862 + C82 * C1090) * C79308) *
                C79307 * C9011 -
            ((C95 * C4049 + C82 * C4285 + C93 * C4048 + C81 * C4284) * C79308 +
             (C95 * C3933 + C82 * C3937 + C93 * C3932 + C81 * C3936) * C166) *
                C79307 * C9012 +
            ((C93 * C6041 + C81 * C6047 + C95 * C10817 + C82 * C10818) * C166 +
             (C93 * C6139 + C81 * C6311 + C95 * C10920 + C82 * C11132) *
                 C79308) *
                C79307 * C79262) *
               C79072) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eeyy[10] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C372 * C96 + C380 + C380 + C79308 * C373) * C81 + C402 * C82) *
               C79307 * C79027 * C6795 -
           (C1201 * C82 +
            (C372 * C749 + C1180 + C1180 + C79308 * C1169) * C81) *
               C79307 * C79027 * C6796 +
           ((C372 * C750 + C1181 + C1181 + C79308 * C1170) * C81 +
            C1202 * C82) *
               C79307 * C79027 * C6797 -
           (C7094 * C82 +
            (C372 * C5568 + C5777 + C5777 + C79308 * C5772) * C81) *
               C79307 * C79027 * C79269) *
              C79215 +
          ((C1201 * C81 + C1203 * C82) * C79307 * C79027 * C6796 -
           (C403 * C82 + C402 * C81) * C79307 * C79027 * C6795 -
           (C1204 * C82 + C1202 * C81) * C79307 * C79027 * C6797 +
           (C7094 * C81 +
            (C372 * C6801 + C7091 + C7091 + C79308 * C7087) * C82) *
               C79307 * C79027 * C79269) *
              C78992)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C372 * C96 + C380 + C380 + C79308 * C373) * C81 + C402 * C82) *
               C79307 * C79027 * C79229 -
           (C1201 * C82 +
            (C372 * C749 + C1180 + C1180 + C79308 * C1169) * C81) *
               C79307 * C79027 * C79072) *
              C2605 +
          ((C1201 * C81 + C1203 * C82) * C79307 * C79027 * C79072 -
           (C403 * C82 + C402 * C81) * C79307 * C79027 * C79229) *
              C2606 +
          ((C403 * C81 + C404 * C82) * C79307 * C79027 * C79229 -
           (C2902 * C82 + C1203 * C81) * C79307 * C79027 * C79072) *
              C2607 +
          ((C2902 * C81 +
            (C372 * C2609 + C2899 + C2899 + C79308 * C2895) * C82) *
               C79307 * C79027 * C79072 -
           (C405 * C82 + C404 * C81) * C79307 * C79027 * C79229) *
              C79263)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C372 * C96 + C380 + C380 + C79308 * C373) * C81 + C402 * C82) *
                C79307 * C9011 -
            (C2134 * C82 +
             (C372 * C1682 + C2113 + C2113 + C79308 * C2102) * C81) *
                C79307 * C9012 +
            ((C372 * C1683 + C2114 + C2114 + C79308 * C2103) * C81 +
             C2135 * C82) *
                C79307 * C79262) *
               C79229 +
           (((C372 * C3931 + C4390 + C4390 + C79308 * C4385) * C81 +
             C4402 * C82) *
                C79307 * C9012 -
            (C1201 * C82 +
             (C372 * C749 + C1180 + C1180 + C79308 * C1169) * C81) *
                C79307 * C9011 -
            (C11238 * C82 +
             (C372 * C6042 + C6399 + C6399 + C79308 * C6392) * C81) *
                C79307 * C79262) *
               C79072) *
              C79215 +
          (((C2134 * C81 + C2136 * C82) * C79307 * C9012 -
            (C403 * C82 + C402 * C81) * C79307 * C9011 -
            (C2137 * C82 + C2135 * C81) * C79307 * C79262) *
               C79229 +
           ((C1201 * C81 + C1203 * C82) * C79307 * C9011 -
            (C4403 * C82 + C4402 * C81) * C79307 * C9012 +
            (C11238 * C81 +
             (C372 * C10817 + C11235 + C11235 + C79308 * C11231) * C82) *
                C79307 * C79262) *
               C79072) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[10] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C245 * C96 + C79307 * C246) * C166 +
             (C245 * C167 + C79307 * C447) * C79308) *
                C81 +
            (C454 + C470) * C82) *
               C79027 * C6795 -
           ((C1303 + C1289) * C82 + ((C245 * C859 + C79307 * C1279) * C79308 +
                                     (C245 * C749 + C79307 * C973) * C166) *
                                        C81) *
               C79027 * C6796 +
           (((C245 * C750 + C79307 * C974) * C166 +
             (C245 * C860 + C79307 * C1280) * C79308) *
                C81 +
            (C1290 + C1304) * C82) *
               C79027 * C6797 -
           ((C7166 + C7164) * C82 + ((C245 * C5626 + C79307 * C5822) * C79308 +
                                     (C245 * C5568 + C79307 * C5676) * C166) *
                                        C81) *
               C79027 * C79269) *
              C79215 +
          (((C1289 + C1303) * C81 + (C1293 + C1305) * C82) * C79027 * C6796 -
           ((C471 + C459) * C82 + (C470 + C454) * C81) * C79027 * C6795 -
           ((C1306 + C1298) * C82 + (C1304 + C1290) * C81) * C79027 * C6797 +
           ((C7164 + C7166) * C81 + ((C245 * C6801 + C79307 * C6946) * C166 +
                                     (C245 * C6872 + C79307 * C7160) * C79308) *
                                        C82) *
               C79027 * C79269) *
              C78992)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C245 * C96 + C79307 * C246) * C166 +
             (C245 * C167 + C79307 * C447) * C79308) *
                C81 +
            (C454 + C470) * C82) *
               C79027 * C79229 -
           ((C1303 + C1289) * C82 + ((C245 * C859 + C79307 * C1279) * C79308 +
                                     (C245 * C749 + C79307 * C973) * C166) *
                                        C81) *
               C79027 * C79072) *
              C2605 +
          (((C1289 + C1303) * C81 + (C1293 + C1305) * C82) * C79027 * C79072 -
           ((C471 + C459) * C82 + (C470 + C454) * C81) * C79027 * C79229) *
              C2606 +
          (((C459 + C471) * C81 + (C460 + C472) * C82) * C79027 * C79229 -
           ((C2974 + C2972) * C82 + (C1305 + C1293) * C81) * C79027 * C79072) *
              C2607 +
          (((C2972 + C2974) * C81 + ((C245 * C2609 + C79307 * C2754) * C166 +
                                     (C245 * C2680 + C79307 * C2968) * C79308) *
                                        C82) *
               C79027 * C79072 -
           ((C473 + C465) * C82 + (C472 + C460) * C81) * C79027 * C79229) *
              C79263)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C245 * C96 + C79307 * C246) * C166 +
              (C245 * C167 + C79307 * C447) * C79308) *
                 C81 +
             (C454 + C470) * C82) *
                C9011 -
            ((C2236 + C2222) * C82 + ((C245 * C1792 + C79307 * C2212) * C79308 +
                                      (C245 * C1682 + C79307 * C1906) * C166) *
                                         C81) *
                C9012 +
            (((C245 * C1683 + C79307 * C1907) * C166 +
              (C245 * C1793 + C79307 * C2213) * C79308) *
                 C81 +
             (C2223 + C2237) * C82) *
                C79262) *
               C79229 +
           ((((C245 * C3931 + C79307 * C4165) * C166 +
              (C245 * C4047 + C79307 * C4501) * C79308) *
                 C81 +
             (C4506 + C4514) * C82) *
                C9012 -
            ((C1303 + C1289) * C82 + ((C245 * C859 + C79307 * C1279) * C79308 +
                                      (C245 * C749 + C79307 * C973) * C166) *
                                         C81) *
                C9011 -
            ((C11342 + C11340) * C82 +
             ((C245 * C6140 + C79307 * C6478) * C79308 +
              (C245 * C6042 + C79307 * C6226) * C166) *
                 C81) *
                C79262) *
               C79072) *
              C79215 +
          ((((C2222 + C2236) * C81 + (C2226 + C2238) * C82) * C9012 -
            ((C471 + C459) * C82 + (C470 + C454) * C81) * C9011 -
            ((C2239 + C2231) * C82 + (C2237 + C2223) * C81) * C79262) *
               C79229 +
           (((C1289 + C1303) * C81 + (C1293 + C1305) * C82) * C9011 -
            ((C4515 + C4511) * C82 + (C4514 + C4506) * C81) * C9012 +
            ((C11340 + C11342) * C81 +
             ((C245 * C10817 + C79307 * C11026) * C166 +
              (C245 * C10920 + C79307 * C11336) * C79308) *
                 C82) *
                C79262) *
               C79072) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eezx[10] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C245 +
            (C93 * C246 + C81 * C515 + C95 * C247 + C82 * C516) * C79307) *
               C79308 * C79027 * C6795 -
           ((C95 * C972 + C82 * C1380 + C93 * C973 + C81 * C1381) * C79307 +
            (C95 * C748 + C82 * C756 + C93 * C749 + C81 * C757) * C245) *
               C79308 * C79027 * C6796 +
           ((C93 * C750 + C81 * C758 + C95 * C751 + C82 * C759) * C245 +
            (C93 * C974 + C81 * C1382 + C95 * C975 + C82 * C1383) * C79307) *
               C79308 * C79027 * C6797 -
           ((C95 * C5675 + C82 * C5867 + C93 * C5676 + C81 * C5868) * C79307 +
            (C95 * C5567 + C82 * C5571 + C93 * C5568 + C81 * C5572) * C245) *
               C79308 * C79027 * C79269) *
              C79215 +
          (((C93 * C748 + C81 * C756 + C95 * C752 + C82 * C760) * C245 +
            (C93 * C972 + C81 * C1380 + C95 * C976 + C82 * C1384) * C79307) *
               C79308 * C79027 * C6796 -
           ((C95 * C248 + C82 * C517 + C93 * C247 + C81 * C516) * C79307 +
            (C95 * C98 + C82 * C104 + C93 * C97 + C81 * C103) * C245) *
               C79308 * C79027 * C6795 -
           ((C95 * C977 + C82 * C1385 + C93 * C975 + C81 * C1383) * C79307 +
            (C95 * C753 + C82 * C761 + C93 * C751 + C81 * C759) * C245) *
               C79308 * C79027 * C6797 +
           ((C93 * C5567 + C81 * C5571 + C95 * C6801 + C82 * C6802) * C245 +
            (C93 * C5675 + C81 * C5867 + C95 * C6946 + C82 * C7232) * C79307) *
               C79308 * C79027 * C79269) *
              C78992)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C245 +
            (C93 * C246 + C81 * C515 + C95 * C247 + C82 * C516) * C79307) *
               C79308 * C79027 * C79229 -
           ((C95 * C972 + C82 * C1380 + C93 * C973 + C81 * C1381) * C79307 +
            (C95 * C748 + C82 * C756 + C93 * C749 + C81 * C757) * C245) *
               C79308 * C79027 * C79072) *
              C2605 +
          (((C93 * C748 + C81 * C756 + C95 * C752 + C82 * C760) * C245 +
            (C93 * C972 + C81 * C1380 + C95 * C976 + C82 * C1384) * C79307) *
               C79308 * C79027 * C79072 -
           ((C95 * C248 + C82 * C517 + C93 * C247 + C81 * C516) * C79307 +
            (C95 * C98 + C82 * C104 + C93 * C97 + C81 * C103) * C245) *
               C79308 * C79027 * C79229) *
              C2606 +
          (((C93 * C98 + C81 * C104 + C95 * C99 + C82 * C105) * C245 +
            (C93 * C248 + C81 * C517 + C95 * C249 + C82 * C518) * C79307) *
               C79308 * C79027 * C79229 -
           ((C95 * C978 + C82 * C1386 + C93 * C976 + C81 * C1384) * C79307 +
            (C95 * C754 + C82 * C762 + C93 * C752 + C81 * C760) * C245) *
               C79308 * C79027 * C79072) *
              C2607 +
          (((C93 * C754 + C81 * C762 + C95 * C2609 + C82 * C2610) * C245 +
            (C93 * C978 + C81 * C1386 + C95 * C2754 + C82 * C3040) * C79307) *
               C79308 * C79027 * C79072 -
           ((C95 * C250 + C82 * C519 + C93 * C249 + C81 * C518) * C79307 +
            (C95 * C100 + C82 * C106 + C93 * C99 + C81 * C105) * C245) *
               C79308 * C79027 * C79229) *
              C79263)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C245 +
             (C93 * C246 + C81 * C515 + C95 * C247 + C82 * C516) * C79307) *
                C79308 * C9011 -
            ((C95 * C1905 + C82 * C2313 + C93 * C1906 + C81 * C2314) * C79307 +
             (C95 * C1681 + C82 * C1689 + C93 * C1682 + C81 * C1690) * C245) *
                C79308 * C9012 +
            ((C93 * C1683 + C81 * C1691 + C95 * C1684 + C82 * C1692) * C245 +
             (C93 * C1907 + C81 * C2315 + C95 * C1908 + C82 * C2316) * C79307) *
                C79308 * C79262) *
               C79229 +
           (((C93 * C3931 + C81 * C3935 + C95 * C3932 + C82 * C3936) * C245 +
             (C93 * C4165 + C81 * C4613 + C95 * C4166 + C82 * C4614) * C79307) *
                C79308 * C9012 -
            ((C95 * C972 + C82 * C1380 + C93 * C973 + C81 * C1381) * C79307 +
             (C95 * C748 + C82 * C756 + C93 * C749 + C81 * C757) * C245) *
                C79308 * C9011 -
            ((C95 * C6225 + C82 * C6557 + C93 * C6226 + C81 * C6558) * C79307 +
             (C95 * C6041 + C82 * C6047 + C93 * C6042 + C81 * C6048) * C245) *
                C79308 * C79262) *
               C79072) *
              C79215 +
          ((((C93 * C1681 + C81 * C1689 + C95 * C1685 + C82 * C1693) * C245 +
             (C93 * C1905 + C81 * C2313 + C95 * C1909 + C82 * C2317) * C79307) *
                C79308 * C9012 -
            ((C95 * C248 + C82 * C517 + C93 * C247 + C81 * C516) * C79307 +
             (C95 * C98 + C82 * C104 + C93 * C97 + C81 * C103) * C245) *
                C79308 * C9011 -
            ((C95 * C1910 + C82 * C2318 + C93 * C1908 + C81 * C2316) * C79307 +
             (C95 * C1686 + C82 * C1694 + C93 * C1684 + C81 * C1692) * C245) *
                C79308 * C79262) *
               C79229 +
           (((C93 * C748 + C81 * C756 + C95 * C752 + C82 * C760) * C245 +
             (C93 * C972 + C81 * C1380 + C95 * C976 + C82 * C1384) * C79307) *
                C79308 * C9011 -
            ((C95 * C4167 + C82 * C4615 + C93 * C4166 + C81 * C4614) * C79307 +
             (C95 * C3933 + C82 * C3937 + C93 * C3932 + C81 * C3936) * C245) *
                C79308 * C9012 +
            ((C93 * C6041 + C81 * C6047 + C95 * C10817 + C82 * C10818) * C245 +
             (C93 * C6225 + C81 * C6557 + C95 * C11026 + C82 * C11440) *
                 C79307) *
                C79308 * C79262) *
               C79072) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eezy[10] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C166 * C96 + C79308 * C167) * C245 +
             (C166 * C246 + C79308 * C563) * C79307) *
                C81 +
            (C570 + C586) * C82) *
               C79027 * C6795 -
           ((C1487 + C1473) * C82 + ((C166 * C973 + C79308 * C1463) * C79307 +
                                     (C166 * C749 + C79308 * C859) * C245) *
                                        C81) *
               C79027 * C6796 +
           (((C166 * C750 + C79308 * C860) * C245 +
             (C166 * C974 + C79308 * C1464) * C79307) *
                C81 +
            (C1474 + C1488) * C82) *
               C79027 * C6797 -
           ((C7305 + C7303) * C82 + ((C166 * C5676 + C79308 * C5914) * C79307 +
                                     (C166 * C5568 + C79308 * C5626) * C245) *
                                        C81) *
               C79027 * C79269) *
              C79215 +
          (((C1473 + C1487) * C81 + (C1477 + C1489) * C82) * C79027 * C6796 -
           ((C587 + C575) * C82 + (C586 + C570) * C81) * C79027 * C6795 -
           ((C1490 + C1482) * C82 + (C1488 + C1474) * C81) * C79027 * C6797 +
           ((C7303 + C7305) * C81 + ((C166 * C6801 + C79308 * C6872) * C245 +
                                     (C166 * C6946 + C79308 * C7299) * C79307) *
                                        C82) *
               C79027 * C79269) *
              C78992)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C166 * C96 + C79308 * C167) * C245 +
             (C166 * C246 + C79308 * C563) * C79307) *
                C81 +
            (C570 + C586) * C82) *
               C79027 * C79229 -
           ((C1487 + C1473) * C82 + ((C166 * C973 + C79308 * C1463) * C79307 +
                                     (C166 * C749 + C79308 * C859) * C245) *
                                        C81) *
               C79027 * C79072) *
              C2605 +
          (((C1473 + C1487) * C81 + (C1477 + C1489) * C82) * C79027 * C79072 -
           ((C587 + C575) * C82 + (C586 + C570) * C81) * C79027 * C79229) *
              C2606 +
          (((C575 + C587) * C81 + (C576 + C588) * C82) * C79027 * C79229 -
           ((C3113 + C3111) * C82 + (C1489 + C1477) * C81) * C79027 * C79072) *
              C2607 +
          (((C3111 + C3113) * C81 + ((C166 * C2609 + C79308 * C2680) * C245 +
                                     (C166 * C2754 + C79308 * C3107) * C79307) *
                                        C82) *
               C79027 * C79072 -
           ((C589 + C581) * C82 + (C588 + C576) * C81) * C79027 * C79229) *
              C79263)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C166 * C96 + C79308 * C167) * C245 +
              (C166 * C246 + C79308 * C563) * C79307) *
                 C81 +
             (C570 + C586) * C82) *
                C9011 -
            ((C2420 + C2406) * C82 + ((C166 * C1906 + C79308 * C2396) * C79307 +
                                      (C166 * C1682 + C79308 * C1792) * C245) *
                                         C81) *
                C9012 +
            (((C166 * C1683 + C79308 * C1793) * C245 +
              (C166 * C1907 + C79308 * C2397) * C79307) *
                 C81 +
             (C2407 + C2421) * C82) *
                C79262) *
               C79229 +
           ((((C166 * C3931 + C79308 * C4047) * C245 +
              (C166 * C4165 + C79308 * C4715) * C79307) *
                 C81 +
             (C4720 + C4728) * C82) *
                C9012 -
            ((C1487 + C1473) * C82 + ((C166 * C973 + C79308 * C1463) * C79307 +
                                      (C166 * C749 + C79308 * C859) * C245) *
                                         C81) *
                C9011 -
            ((C11545 + C11543) * C82 +
             ((C166 * C6226 + C79308 * C6638) * C79307 +
              (C166 * C6042 + C79308 * C6140) * C245) *
                 C81) *
                C79262) *
               C79072) *
              C79215 +
          ((((C2406 + C2420) * C81 + (C2410 + C2422) * C82) * C9012 -
            ((C587 + C575) * C82 + (C586 + C570) * C81) * C9011 -
            ((C2423 + C2415) * C82 + (C2421 + C2407) * C81) * C79262) *
               C79229 +
           (((C1473 + C1487) * C81 + (C1477 + C1489) * C82) * C9011 -
            ((C4729 + C4725) * C82 + (C4728 + C4720) * C81) * C9012 +
            ((C11543 + C11545) * C81 +
             ((C166 * C10817 + C79308 * C10920) * C245 +
              (C166 * C11026 + C79308 * C11539) * C79307) *
                 C82) *
                C79262) *
               C79072) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eezz[10] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C631 * C96 + C639 + C639 + C79307 * C632) * C79308 * C81 +
            C665 * C82) *
               C79027 * C6795 -
           (C1601 * C82 +
            (C631 * C749 + C1576 + C1576 + C79307 * C1565) * C79308 * C81) *
               C79027 * C6796 +
           ((C631 * C750 + C1577 + C1577 + C79307 * C1566) * C79308 * C81 +
            C1602 * C82) *
               C79027 * C6797 -
           (C7379 * C82 +
            (C631 * C5568 + C5965 + C5965 + C79307 * C5960) * C79308 * C81) *
               C79027 * C79269) *
              C79215 +
          ((C1601 * C81 + C1603 * C82) * C79027 * C6796 -
           (C666 * C82 + C665 * C81) * C79027 * C6795 -
           (C1604 * C82 + C1602 * C81) * C79027 * C6797 +
           (C7379 * C81 +
            (C631 * C6801 + C7375 + C7375 + C79307 * C7371) * C79308 * C82) *
               C79027 * C79269) *
              C78992)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C631 * C96 + C639 + C639 + C79307 * C632) * C79308 * C81 +
            C665 * C82) *
               C79027 * C79229 -
           (C1601 * C82 +
            (C631 * C749 + C1576 + C1576 + C79307 * C1565) * C79308 * C81) *
               C79027 * C79072) *
              C2605 +
          ((C1601 * C81 + C1603 * C82) * C79027 * C79072 -
           (C666 * C82 + C665 * C81) * C79027 * C79229) *
              C2606 +
          ((C666 * C81 + C667 * C82) * C79027 * C79229 -
           (C3187 * C82 + C1603 * C81) * C79027 * C79072) *
              C2607 +
          ((C3187 * C81 +
            (C631 * C2609 + C3183 + C3183 + C79307 * C3179) * C79308 * C82) *
               C79027 * C79072 -
           (C668 * C82 + C667 * C81) * C79027 * C79229) *
              C79263)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C631 * C96 + C639 + C639 + C79307 * C632) * C79308 * C81 +
             C665 * C82) *
                C9011 -
            (C2534 * C82 +
             (C631 * C1682 + C2509 + C2509 + C79307 * C2498) * C79308 * C81) *
                C9012 +
            ((C631 * C1683 + C2510 + C2510 + C79307 * C2499) * C79308 * C81 +
             C2535 * C82) *
                C79262) *
               C79229 +
           (((C631 * C3931 + C4832 + C4832 + C79307 * C4827) * C79308 * C81 +
             C4846 * C82) *
                C9012 -
            (C1601 * C82 +
             (C631 * C749 + C1576 + C1576 + C79307 * C1565) * C79308 * C81) *
                C9011 -
            (C11651 * C82 +
             (C631 * C6042 + C6725 + C6725 + C79307 * C6718) * C79308 * C81) *
                C79262) *
               C79072) *
              C79215 +
          (((C2534 * C81 + C2536 * C82) * C9012 -
            (C666 * C82 + C665 * C81) * C9011 -
            (C2537 * C82 + C2535 * C81) * C79262) *
               C79229 +
           ((C1601 * C81 + C1603 * C82) * C9011 -
            (C4847 * C82 + C4846 * C81) * C9012 +
            (C11651 * C81 +
             (C631 * C10817 + C11647 + C11647 + C79307 * C11643) * C79308 *
                 C82) *
                C79262) *
               C79072) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eexx[11] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C92 * C96 + C115 + C115 + C81 * C108 + C94 * C97 + C116 +
                      C116 + C82 * C109) *
                         C79307 * C79308 * C79230 -
                     (C94 * C1681 + C1706 + C1706 + C82 * C1697 + C92 * C1682 +
                      C1707 + C1707 + C81 * C1698) *
                         C79307 * C79308 * C79114) *
                        C6795 +
                    ((C92 * C3931 + C3944 + C3944 + C81 * C3939 + C94 * C3932 +
                      C3945 + C3945 + C82 * C3940) *
                         C79307 * C79308 * C79114 -
                     (C94 * C748 + C773 + C773 + C82 * C764 + C92 * C749 +
                      C774 + C774 + C81 * C765) *
                         C79307 * C79308 * C79230) *
                        C6796 +
                    ((C92 * C750 + C775 + C775 + C81 * C766 + C94 * C751 +
                      C776 + C776 + C82 * C767) *
                         C79307 * C79308 * C79230 -
                     (C94 * C6043 + C6062 + C6062 + C82 * C6055 + C92 * C6044 +
                      C6063 + C6063 + C81 * C6056) *
                         C79307 * C79308 * C79114) *
                        C6797 +
                    ((C92 * C8377 + C8384 + C8384 + C81 * C8381 + C94 * C8378 +
                      C8385 + C8385 + C82 * C8382) *
                         C79307 * C79308 * C79114 -
                     (C94 * C5567 + C5580 + C5580 + C82 * C5575 + C92 * C5568 +
                      C5581 + C5581 + C81 * C5576) *
                         C79307 * C79308 * C79230) *
                        C79269) *
                   C78981) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C92 * C96 + C115 + C115 + C81 * C108 + C94 * C97 + C116 +
                       C116 + C82 * C109) *
                          C79307 * C79308 * C79230 -
                      (C94 * C1681 + C1706 + C1706 + C82 * C1697 + C92 * C1682 +
                       C1707 + C1707 + C81 * C1698) *
                          C79307 * C79308 * C79114) *
                         C79229 +
                     ((C92 * C3931 + C3944 + C3944 + C81 * C3939 + C94 * C3932 +
                       C3945 + C3945 + C82 * C3940) *
                          C79307 * C79308 * C79114 -
                      (C94 * C748 + C773 + C773 + C82 * C764 + C92 * C749 +
                       C774 + C774 + C81 * C765) *
                          C79307 * C79308 * C79230) *
                         C79072) *
                        C745 +
                    (((C92 * C1681 + C1710 + C1710 + C81 * C1697 + C94 * C1685 +
                       C1711 + C1711 + C82 * C1701) *
                          C79307 * C79308 * C79114 -
                      (C94 * C98 + C117 + C117 + C82 * C110 + C92 * C97 + C118 +
                       C118 + C81 * C109) *
                          C79307 * C79308 * C79230) *
                         C79229 +
                     ((C92 * C748 + C777 + C777 + C81 * C764 + C94 * C752 +
                       C778 + C778 + C82 * C768) *
                          C79307 * C79308 * C79230 -
                      (C94 * C3933 + C3946 + C3946 + C82 * C3941 + C92 * C3932 +
                       C3947 + C3947 + C81 * C3940) *
                          C79307 * C79308 * C79114) *
                         C79072) *
                        C746 +
                    (((C92 * C98 + C119 + C119 + C81 * C110 + C94 * C99 + C120 +
                       C120 + C82 * C111) *
                          C79307 * C79308 * C79230 -
                      (C94 * C1687 + C1714 + C1714 + C82 * C1703 + C92 * C1685 +
                       C1715 + C1715 + C81 * C1701) *
                          C79307 * C79308 * C79114) *
                         C79229 +
                     ((C92 * C3933 + C3948 + C3948 + C81 * C3941 + C94 * C3934 +
                       C3949 + C3949 + C82 * C3942) *
                          C79307 * C79308 * C79114 -
                      (C94 * C754 + C781 + C781 + C82 * C770 + C92 * C752 +
                       C782 + C782 + C81 * C768) *
                          C79307 * C79308 * C79230) *
                         C79072) *
                        C79253)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((C92 * C96 + C115 + C115 + C81 * C108 + C94 * C97 + C116 +
                      C116 + C82 * C109) *
                         C79307 * C79308 * C11717 -
                     (C94 * C1681 + C1706 + C1706 + C82 * C1697 + C92 * C1682 +
                      C1707 + C1707 + C81 * C1698) *
                         C79307 * C79308 * C11718 +
                     (C92 * C1683 + C1708 + C1708 + C81 * C1699 + C94 * C1684 +
                      C1709 + C1709 + C82 * C1700) *
                         C79307 * C79308 * C11719 -
                     (C94 * C10319 + C10332 + C10332 + C82 * C10327 +
                      C92 * C10320 + C10333 + C10333 + C81 * C10328) *
                         C79307 * C79308 * C79275) *
                        C79229 +
                    ((C92 * C3931 + C3944 + C3944 + C81 * C3939 + C94 * C3932 +
                      C3945 + C3945 + C82 * C3940) *
                         C79307 * C79308 * C11718 -
                     (C94 * C748 + C773 + C773 + C82 * C764 + C92 * C749 +
                      C774 + C774 + C81 * C765) *
                         C79307 * C79308 * C11717 -
                     (C94 * C6041 + C6060 + C6060 + C82 * C6053 + C92 * C6042 +
                      C6061 + C6061 + C81 * C6054) *
                         C79307 * C79308 * C11719 +
                     (C92 * C12365 + C12372 + C12372 + C81 * C12369 +
                      C94 * C12366 + C12373 + C12373 + C82 * C12370) *
                         C79307 * C79308 * C79275) *
                        C79072) *
                   C78981) /
                      (p * q * std::sqrt(p + q));
    d2eexy[11] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C166 * C96 + C79308 * C167) * C93 +
            (C166 * C102 + C79308 * C173) * C81 + C196 * C95 + C197 * C82) *
               C79307 * C79230 -
           (C1824 * C82 + C1825 * C95 + (C166 * C1690 + C79308 * C1800) * C81 +
            (C166 * C1682 + C79308 * C1792) * C93) *
               C79307 * C79114) *
              C6795 +
          (((C166 * C3931 + C79308 * C4047) * C93 +
            (C166 * C3935 + C79308 * C4051) * C81 + C4064 * C95 + C4065 * C82) *
               C79307 * C79114 -
           (C891 * C82 + C892 * C95 + (C166 * C757 + C79308 * C867) * C81 +
            (C166 * C749 + C79308 * C859) * C93) *
               C79307 * C79230) *
              C6796 +
          (((C166 * C750 + C79308 * C860) * C93 +
            (C166 * C758 + C79308 * C868) * C81 + C893 * C95 + C894 * C82) *
               C79307 * C79230 -
           (C7587 * C82 + C7588 * C95 + (C166 * C6050 + C79308 * C6148) * C81 +
            (C166 * C6044 + C79308 * C6142) * C93) *
               C79307 * C79114) *
              C6797 +
          (((C166 * C8377 + C79308 * C8451) * C93 +
            (C166 * C8379 + C79308 * C8453) * C81 +
            (C166 * C8378 + C79308 * C8452) * C95 +
            (C166 * C8380 + C79308 * C8454) * C82) *
               C79307 * C79114 -
           (C6879 * C82 + C6880 * C95 + (C166 * C5572 + C79308 * C5630) * C81 +
            (C166 * C5568 + C79308 * C5626) * C93) *
               C79307 * C79230) *
              C79269) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C166 * C96 + C79308 * C167) * C93 +
             (C166 * C102 + C79308 * C173) * C81 + C196 * C95 + C197 * C82) *
                C79307 * C79230 -
            (C1824 * C82 + C1825 * C95 + (C166 * C1690 + C79308 * C1800) * C81 +
             (C166 * C1682 + C79308 * C1792) * C93) *
                C79307 * C79114) *
               C79229 +
           (((C166 * C3931 + C79308 * C4047) * C93 +
             (C166 * C3935 + C79308 * C4051) * C81 + C4064 * C95 +
             C4065 * C82) *
                C79307 * C79114 -
            (C891 * C82 + C892 * C95 + (C166 * C757 + C79308 * C867) * C81 +
             (C166 * C749 + C79308 * C859) * C93) *
                C79307 * C79230) *
               C79072) *
              C745 +
          (((C1825 * C93 + C1824 * C81 + C1828 * C95 + C1829 * C82) * C79307 *
                C79114 -
            (C198 * C82 + C199 * C95 + C197 * C81 + C196 * C93) * C79307 *
                C79230) *
               C79229 +
           ((C892 * C93 + C891 * C81 + C895 * C95 + C896 * C82) * C79307 *
                C79230 -
            (C4066 * C82 + C4067 * C95 + C4065 * C81 + C4064 * C93) * C79307 *
                C79114) *
               C79072) *
              C746 +
          (((C199 * C93 + C198 * C81 + C200 * C95 + C201 * C82) * C79307 *
                C79230 -
            (C3333 * C82 + C3334 * C95 + C1829 * C81 + C1828 * C93) * C79307 *
                C79114) *
               C79229 +
           ((C4067 * C93 + C4066 * C81 + (C166 * C3934 + C79308 * C4050) * C95 +
             (C166 * C3938 + C79308 * C4054) * C82) *
                C79307 * C79114 -
            (C2687 * C82 + C2688 * C95 + C896 * C81 + C895 * C93) * C79307 *
                C79230) *
               C79072) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C166 * C96 + C79308 * C167) * C93 +
            (C166 * C102 + C79308 * C173) * C81 + C196 * C95 + C197 * C82) *
               C79307 * C11717 -
           (C1824 * C82 + C1825 * C95 + (C166 * C1690 + C79308 * C1800) * C81 +
            (C166 * C1682 + C79308 * C1792) * C93) *
               C79307 * C11718 +
           ((C166 * C1683 + C79308 * C1793) * C93 +
            (C166 * C1691 + C79308 * C1801) * C81 + C1826 * C95 + C1827 * C82) *
               C79307 * C11719 -
           (C11799 * C82 + C11800 * C95 +
            (C166 * C10324 + C79308 * C10382) * C81 +
            (C166 * C10320 + C79308 * C10378) * C93) *
               C79307 * C79275) *
              C79229 +
          (((C166 * C3931 + C79308 * C4047) * C93 +
            (C166 * C3935 + C79308 * C4051) * C81 + C4064 * C95 + C4065 * C82) *
               C79307 * C11718 -
           (C891 * C82 + C892 * C95 + (C166 * C757 + C79308 * C867) * C81 +
            (C166 * C749 + C79308 * C859) * C93) *
               C79307 * C11717 -
           (C10927 * C82 + C10928 * C95 +
            (C166 * C6048 + C79308 * C6146) * C81 +
            (C166 * C6042 + C79308 * C6140) * C93) *
               C79307 * C11719 +
           ((C166 * C12365 + C79308 * C12439) * C93 +
            (C166 * C12367 + C79308 * C12441) * C81 +
            (C166 * C12366 + C79308 * C12440) * C95 +
            (C166 * C12368 + C79308 * C12442) * C82) *
               C79307 * C79275) *
              C79072) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eexz[11] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C245 * C96 + C79307 * C246) * C93 +
            (C245 * C102 + C79307 * C252) * C81 + C275 * C95 + C276 * C82) *
               C79308 * C79230 -
           (C1938 * C82 + C1939 * C95 + (C245 * C1690 + C79307 * C1914) * C81 +
            (C245 * C1682 + C79307 * C1906) * C93) *
               C79308 * C79114) *
              C6795 +
          (((C245 * C3931 + C79307 * C4165) * C93 +
            (C245 * C3935 + C79307 * C4169) * C81 + C4182 * C95 + C4183 * C82) *
               C79308 * C79114 -
           (C1005 * C82 + C1006 * C95 + (C245 * C757 + C79307 * C981) * C81 +
            (C245 * C749 + C79307 * C973) * C93) *
               C79308 * C79230) *
              C6796 +
          (((C245 * C750 + C79307 * C974) * C93 +
            (C245 * C758 + C79307 * C982) * C81 + C1007 * C95 + C1008 * C82) *
               C79308 * C79230 -
           (C7693 * C82 + C7694 * C95 + (C245 * C6050 + C79307 * C6234) * C81 +
            (C245 * C6044 + C79307 * C6228) * C93) *
               C79308 * C79114) *
              C6797 +
          (((C245 * C8377 + C79307 * C8521) * C93 +
            (C245 * C8379 + C79307 * C8523) * C81 +
            (C245 * C8378 + C79307 * C8522) * C95 +
            (C245 * C8380 + C79307 * C8524) * C82) *
               C79308 * C79114 -
           (C6953 * C82 + C6954 * C95 + (C245 * C5572 + C79307 * C5680) * C81 +
            (C245 * C5568 + C79307 * C5676) * C93) *
               C79308 * C79230) *
              C79269) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C245 * C96 + C79307 * C246) * C93 +
             (C245 * C102 + C79307 * C252) * C81 + C275 * C95 + C276 * C82) *
                C79308 * C79230 -
            (C1938 * C82 + C1939 * C95 + (C245 * C1690 + C79307 * C1914) * C81 +
             (C245 * C1682 + C79307 * C1906) * C93) *
                C79308 * C79114) *
               C79229 +
           (((C245 * C3931 + C79307 * C4165) * C93 +
             (C245 * C3935 + C79307 * C4169) * C81 + C4182 * C95 +
             C4183 * C82) *
                C79308 * C79114 -
            (C1005 * C82 + C1006 * C95 + (C245 * C757 + C79307 * C981) * C81 +
             (C245 * C749 + C79307 * C973) * C93) *
                C79308 * C79230) *
               C79072) *
              C745 +
          (((C1939 * C93 + C1938 * C81 + C1942 * C95 + C1943 * C82) * C79308 *
                C79114 -
            (C277 * C82 + C278 * C95 + C276 * C81 + C275 * C93) * C79308 *
                C79230) *
               C79229 +
           ((C1006 * C93 + C1005 * C81 + C1009 * C95 + C1010 * C82) * C79308 *
                C79230 -
            (C4184 * C82 + C4185 * C95 + C4183 * C81 + C4182 * C93) * C79308 *
                C79114) *
               C79072) *
              C746 +
          (((C278 * C93 + C277 * C81 + C279 * C95 + C280 * C82) * C79308 *
                C79230 -
            (C3407 * C82 + C3408 * C95 + C1943 * C81 + C1942 * C93) * C79308 *
                C79114) *
               C79229 +
           ((C4185 * C93 + C4184 * C81 + (C245 * C3934 + C79307 * C4168) * C95 +
             (C245 * C3938 + C79307 * C4172) * C82) *
                C79308 * C79114 -
            (C2761 * C82 + C2762 * C95 + C1010 * C81 + C1009 * C93) * C79308 *
                C79230) *
               C79072) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C245 * C96 + C79307 * C246) * C93 +
            (C245 * C102 + C79307 * C252) * C81 + C275 * C95 + C276 * C82) *
               C79308 * C11717 -
           (C1938 * C82 + C1939 * C95 + (C245 * C1690 + C79307 * C1914) * C81 +
            (C245 * C1682 + C79307 * C1906) * C93) *
               C79308 * C11718 +
           ((C245 * C1683 + C79307 * C1907) * C93 +
            (C245 * C1691 + C79307 * C1915) * C81 + C1940 * C95 + C1941 * C82) *
               C79308 * C11719 -
           (C11873 * C82 + C11874 * C95 +
            (C245 * C10324 + C79307 * C10432) * C81 +
            (C245 * C10320 + C79307 * C10428) * C93) *
               C79308 * C79275) *
              C79229 +
          (((C245 * C3931 + C79307 * C4165) * C93 +
            (C245 * C3935 + C79307 * C4169) * C81 + C4182 * C95 + C4183 * C82) *
               C79308 * C11718 -
           (C1005 * C82 + C1006 * C95 + (C245 * C757 + C79307 * C981) * C81 +
            (C245 * C749 + C79307 * C973) * C93) *
               C79308 * C11717 -
           (C11033 * C82 + C11034 * C95 +
            (C245 * C6048 + C79307 * C6232) * C81 +
            (C245 * C6042 + C79307 * C6226) * C93) *
               C79308 * C11719 +
           ((C245 * C12365 + C79307 * C12509) * C93 +
            (C245 * C12367 + C79307 * C12511) * C81 +
            (C245 * C12366 + C79307 * C12510) * C95 +
            (C245 * C12368 + C79307 * C12512) * C82) *
               C79308 * C79275) *
              C79072) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eeyx[11] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C166 +
            (C93 * C167 + C81 * C324 + C95 * C168 + C82 * C325) * C79308) *
               C79307 * C79230 -
           ((C95 * C1791 + C82 * C2019 + C93 * C1792 + C81 * C2020) * C79308 +
            (C95 * C1681 + C82 * C1689 + C93 * C1682 + C81 * C1690) * C166) *
               C79307 * C79114) *
              C6795 +
          (((C93 * C3931 + C81 * C3935 + C95 * C3932 + C82 * C3936) * C166 +
            (C93 * C4047 + C81 * C4283 + C95 * C4048 + C82 * C4284) * C79308) *
               C79307 * C79114 -
           ((C95 * C858 + C82 * C1086 + C93 * C859 + C81 * C1087) * C79308 +
            (C95 * C748 + C82 * C756 + C93 * C749 + C81 * C757) * C166) *
               C79307 * C79230) *
              C6796 +
          (((C93 * C750 + C81 * C758 + C95 * C751 + C82 * C759) * C166 +
            (C93 * C860 + C81 * C1088 + C95 * C861 + C82 * C1089) * C79308) *
               C79307 * C79230 -
           ((C95 * C6141 + C82 * C6313 + C93 * C6142 + C81 * C6314) * C79308 +
            (C95 * C6043 + C82 * C6049 + C93 * C6044 + C81 * C6050) * C166) *
               C79307 * C79114) *
              C6797 +
          (((C93 * C8377 + C81 * C8379 + C95 * C8378 + C82 * C8380) * C166 +
            (C93 * C8451 + C81 * C8591 + C95 * C8452 + C82 * C8592) * C79308) *
               C79307 * C79114 -
           ((C95 * C5625 + C82 * C5725 + C93 * C5626 + C81 * C5726) * C79308 +
            (C95 * C5567 + C82 * C5571 + C93 * C5568 + C81 * C5572) * C166) *
               C79307 * C79230) *
              C79269) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C166 +
             (C93 * C167 + C81 * C324 + C95 * C168 + C82 * C325) * C79308) *
                C79307 * C79230 -
            ((C95 * C1791 + C82 * C2019 + C93 * C1792 + C81 * C2020) * C79308 +
             (C95 * C1681 + C82 * C1689 + C93 * C1682 + C81 * C1690) * C166) *
                C79307 * C79114) *
               C79229 +
           (((C93 * C3931 + C81 * C3935 + C95 * C3932 + C82 * C3936) * C166 +
             (C93 * C4047 + C81 * C4283 + C95 * C4048 + C82 * C4284) * C79308) *
                C79307 * C79114 -
            ((C95 * C858 + C82 * C1086 + C93 * C859 + C81 * C1087) * C79308 +
             (C95 * C748 + C82 * C756 + C93 * C749 + C81 * C757) * C166) *
                C79307 * C79230) *
               C79072) *
              C745 +
          ((((C93 * C1681 + C81 * C1689 + C95 * C1685 + C82 * C1693) * C166 +
             (C93 * C1791 + C81 * C2019 + C95 * C1795 + C82 * C2023) * C79308) *
                C79307 * C79114 -
            ((C95 * C169 + C82 * C326 + C93 * C168 + C81 * C325) * C79308 +
             (C95 * C98 + C82 * C104 + C93 * C97 + C81 * C103) * C166) *
                C79307 * C79230) *
               C79229 +
           (((C93 * C748 + C81 * C756 + C95 * C752 + C82 * C760) * C166 +
             (C93 * C858 + C81 * C1086 + C95 * C862 + C82 * C1090) * C79308) *
                C79307 * C79230 -
            ((C95 * C4049 + C82 * C4285 + C93 * C4048 + C81 * C4284) * C79308 +
             (C95 * C3933 + C82 * C3937 + C93 * C3932 + C81 * C3936) * C166) *
                C79307 * C79114) *
               C79072) *
              C746 +
          ((((C93 * C98 + C81 * C104 + C95 * C99 + C82 * C105) * C166 +
             (C93 * C169 + C81 * C326 + C95 * C170 + C82 * C327) * C79308) *
                C79307 * C79230 -
            ((C95 * C1797 + C82 * C2025 + C93 * C1795 + C81 * C2023) * C79308 +
             (C95 * C1687 + C82 * C1695 + C93 * C1685 + C81 * C1693) * C166) *
                C79307 * C79114) *
               C79229 +
           (((C93 * C3933 + C81 * C3937 + C95 * C3934 + C82 * C3938) * C166 +
             (C93 * C4049 + C81 * C4285 + C95 * C4050 + C82 * C4286) * C79308) *
                C79307 * C79114 -
            ((C95 * C864 + C82 * C1092 + C93 * C862 + C81 * C1090) * C79308 +
             (C95 * C754 + C82 * C762 + C93 * C752 + C81 * C760) * C166) *
                C79307 * C79230) *
               C79072) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C166 +
            (C93 * C167 + C81 * C324 + C95 * C168 + C82 * C325) * C79308) *
               C79307 * C11717 -
           ((C95 * C1791 + C82 * C2019 + C93 * C1792 + C81 * C2020) * C79308 +
            (C95 * C1681 + C82 * C1689 + C93 * C1682 + C81 * C1690) * C166) *
               C79307 * C11718 +
           ((C93 * C1683 + C81 * C1691 + C95 * C1684 + C82 * C1692) * C166 +
            (C93 * C1793 + C81 * C2021 + C95 * C1794 + C82 * C2022) * C79308) *
               C79307 * C11719 -
           ((C95 * C10377 + C82 * C10477 + C93 * C10378 + C81 * C10478) *
                C79308 +
            (C95 * C10319 + C82 * C10323 + C93 * C10320 + C81 * C10324) *
                C166) *
               C79307 * C79275) *
              C79229 +
          (((C93 * C3931 + C81 * C3935 + C95 * C3932 + C82 * C3936) * C166 +
            (C93 * C4047 + C81 * C4283 + C95 * C4048 + C82 * C4284) * C79308) *
               C79307 * C11718 -
           ((C95 * C858 + C82 * C1086 + C93 * C859 + C81 * C1087) * C79308 +
            (C95 * C748 + C82 * C756 + C93 * C749 + C81 * C757) * C166) *
               C79307 * C11717 -
           ((C95 * C6139 + C82 * C6311 + C93 * C6140 + C81 * C6312) * C79308 +
            (C95 * C6041 + C82 * C6047 + C93 * C6042 + C81 * C6048) * C166) *
               C79307 * C11719 +
           ((C93 * C12365 + C81 * C12367 + C95 * C12366 + C82 * C12368) * C166 +
            (C93 * C12439 + C81 * C12579 + C95 * C12440 + C82 * C12580) *
                C79308) *
               C79307 * C79275) *
              C79072) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eeyy[11] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C372 * C96 + C380 + C380 + C79308 * C373) * C81 + C402 * C82) *
               C79307 * C79230 -
           (C2134 * C82 +
            (C372 * C1682 + C2113 + C2113 + C79308 * C2102) * C81) *
               C79307 * C79114) *
              C6795 +
          (((C372 * C3931 + C4390 + C4390 + C79308 * C4385) * C81 +
            C4402 * C82) *
               C79307 * C79114 -
           (C1201 * C82 +
            (C372 * C749 + C1180 + C1180 + C79308 * C1169) * C81) *
               C79307 * C79230) *
              C6796 +
          (((C372 * C750 + C1181 + C1181 + C79308 * C1170) * C81 +
            C1202 * C82) *
               C79307 * C79230 -
           (C7898 * C82 +
            (C372 * C6044 + C6401 + C6401 + C79308 * C6394) * C81) *
               C79307 * C79114) *
              C6797 +
          (((C372 * C8377 + C8662 + C8662 + C79308 * C8659) * C81 +
            (C372 * C8378 + C8663 + C8663 + C79308 * C8660) * C82) *
               C79307 * C79114 -
           (C7094 * C82 +
            (C372 * C5568 + C5777 + C5777 + C79308 * C5772) * C81) *
               C79307 * C79230) *
              C79269) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C372 * C96 + C380 + C380 + C79308 * C373) * C81 + C402 * C82) *
                C79307 * C79230 -
            (C2134 * C82 +
             (C372 * C1682 + C2113 + C2113 + C79308 * C2102) * C81) *
                C79307 * C79114) *
               C79229 +
           (((C372 * C3931 + C4390 + C4390 + C79308 * C4385) * C81 +
             C4402 * C82) *
                C79307 * C79114 -
            (C1201 * C82 +
             (C372 * C749 + C1180 + C1180 + C79308 * C1169) * C81) *
                C79307 * C79230) *
               C79072) *
              C745 +
          (((C2134 * C81 + C2136 * C82) * C79307 * C79114 -
            (C403 * C82 + C402 * C81) * C79307 * C79230) *
               C79229 +
           ((C1201 * C81 + C1203 * C82) * C79307 * C79230 -
            (C4403 * C82 + C4402 * C81) * C79307 * C79114) *
               C79072) *
              C746 +
          (((C403 * C81 + C404 * C82) * C79307 * C79230 -
            (C3548 * C82 + C2136 * C81) * C79307 * C79114) *
               C79229 +
           ((C4403 * C81 +
             (C372 * C3934 + C4397 + C4397 + C79308 * C4388) * C82) *
                C79307 * C79114 -
            (C2902 * C82 + C1203 * C81) * C79307 * C79230) *
               C79072) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C372 * C96 + C380 + C380 + C79308 * C373) * C81 + C402 * C82) *
               C79307 * C11717 -
           (C2134 * C82 +
            (C372 * C1682 + C2113 + C2113 + C79308 * C2102) * C81) *
               C79307 * C11718 +
           ((C372 * C1683 + C2114 + C2114 + C79308 * C2103) * C81 +
            C2135 * C82) *
               C79307 * C11719 -
           (C12014 * C82 +
            (C372 * C10320 + C10529 + C10529 + C79308 * C10524) * C81) *
               C79307 * C79275) *
              C79229 +
          (((C372 * C3931 + C4390 + C4390 + C79308 * C4385) * C81 +
            C4402 * C82) *
               C79307 * C11718 -
           (C1201 * C82 +
            (C372 * C749 + C1180 + C1180 + C79308 * C1169) * C81) *
               C79307 * C11717 -
           (C11238 * C82 +
            (C372 * C6042 + C6399 + C6399 + C79308 * C6392) * C81) *
               C79307 * C11719 +
           ((C372 * C12365 + C12650 + C12650 + C79308 * C12647) * C81 +
            (C372 * C12366 + C12651 + C12651 + C79308 * C12648) * C82) *
               C79307 * C79275) *
              C79072) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eeyz[11] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C245 * C96 + C79307 * C246) * C166 +
             (C245 * C167 + C79307 * C447) * C79308) *
                C81 +
            (C454 + C470) * C82) *
               C79230 -
           ((C2236 + C2222) * C82 + ((C245 * C1792 + C79307 * C2212) * C79308 +
                                     (C245 * C1682 + C79307 * C1906) * C166) *
                                        C81) *
               C79114) *
              C6795 +
          ((((C245 * C3931 + C79307 * C4165) * C166 +
             (C245 * C4047 + C79307 * C4501) * C79308) *
                C81 +
            (C4506 + C4514) * C82) *
               C79114 -
           ((C1303 + C1289) * C82 + ((C245 * C859 + C79307 * C1279) * C79308 +
                                     (C245 * C749 + C79307 * C973) * C166) *
                                        C81) *
               C79230) *
              C6796 +
          ((((C245 * C750 + C79307 * C974) * C166 +
             (C245 * C860 + C79307 * C1280) * C79308) *
                C81 +
            (C1290 + C1304) * C82) *
               C79230 -
           ((C8002 + C8000) * C82 + ((C245 * C6142 + C79307 * C6480) * C79308 +
                                     (C245 * C6044 + C79307 * C6228) * C166) *
                                        C81) *
               C79114) *
              C6797 +
          ((((C245 * C8377 + C79307 * C8521) * C166 +
             (C245 * C8451 + C79307 * C8729) * C79308) *
                C81 +
            ((C245 * C8378 + C79307 * C8522) * C166 +
             (C245 * C8452 + C79307 * C8730) * C79308) *
                C82) *
               C79114 -
           ((C7166 + C7164) * C82 + ((C245 * C5626 + C79307 * C5822) * C79308 +
                                     (C245 * C5568 + C79307 * C5676) * C166) *
                                        C81) *
               C79230) *
              C79269) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C245 * C96 + C79307 * C246) * C166 +
              (C245 * C167 + C79307 * C447) * C79308) *
                 C81 +
             (C454 + C470) * C82) *
                C79230 -
            ((C2236 + C2222) * C82 + ((C245 * C1792 + C79307 * C2212) * C79308 +
                                      (C245 * C1682 + C79307 * C1906) * C166) *
                                         C81) *
                C79114) *
               C79229 +
           ((((C245 * C3931 + C79307 * C4165) * C166 +
              (C245 * C4047 + C79307 * C4501) * C79308) *
                 C81 +
             (C4506 + C4514) * C82) *
                C79114 -
            ((C1303 + C1289) * C82 + ((C245 * C859 + C79307 * C1279) * C79308 +
                                      (C245 * C749 + C79307 * C973) * C166) *
                                         C81) *
                C79230) *
               C79072) *
              C745 +
          ((((C2222 + C2236) * C81 + (C2226 + C2238) * C82) * C79114 -
            ((C471 + C459) * C82 + (C470 + C454) * C81) * C79230) *
               C79229 +
           (((C1289 + C1303) * C81 + (C1293 + C1305) * C82) * C79230 -
            ((C4515 + C4511) * C82 + (C4514 + C4506) * C81) * C79114) *
               C79072) *
              C746 +
          ((((C459 + C471) * C81 + (C460 + C472) * C82) * C79230 -
            ((C3620 + C3618) * C82 + (C2238 + C2226) * C81) * C79114) *
               C79229 +
           (((C4511 + C4515) * C81 +
             ((C245 * C3934 + C79307 * C4168) * C166 +
              (C245 * C4050 + C79307 * C4504) * C79308) *
                 C82) *
                C79114 -
            ((C2974 + C2972) * C82 + (C1305 + C1293) * C81) * C79230) *
               C79072) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C245 * C96 + C79307 * C246) * C166 +
             (C245 * C167 + C79307 * C447) * C79308) *
                C81 +
            (C454 + C470) * C82) *
               C11717 -
           ((C2236 + C2222) * C82 + ((C245 * C1792 + C79307 * C2212) * C79308 +
                                     (C245 * C1682 + C79307 * C1906) * C166) *
                                        C81) *
               C11718 +
           (((C245 * C1683 + C79307 * C1907) * C166 +
             (C245 * C1793 + C79307 * C2213) * C79308) *
                C81 +
            (C2223 + C2237) * C82) *
               C11719 -
           ((C12086 + C12084) * C82 +
            ((C245 * C10378 + C79307 * C10574) * C79308 +
             (C245 * C10320 + C79307 * C10428) * C166) *
                C81) *
               C79275) *
              C79229 +
          ((((C245 * C3931 + C79307 * C4165) * C166 +
             (C245 * C4047 + C79307 * C4501) * C79308) *
                C81 +
            (C4506 + C4514) * C82) *
               C11718 -
           ((C1303 + C1289) * C82 + ((C245 * C859 + C79307 * C1279) * C79308 +
                                     (C245 * C749 + C79307 * C973) * C166) *
                                        C81) *
               C11717 -
           ((C11342 + C11340) * C82 +
            ((C245 * C6140 + C79307 * C6478) * C79308 +
             (C245 * C6042 + C79307 * C6226) * C166) *
                C81) *
               C11719 +
           (((C245 * C12365 + C79307 * C12509) * C166 +
             (C245 * C12439 + C79307 * C12717) * C79308) *
                C81 +
            ((C245 * C12366 + C79307 * C12510) * C166 +
             (C245 * C12440 + C79307 * C12718) * C79308) *
                C82) *
               C79275) *
              C79072) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eezx[11] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C245 +
            (C93 * C246 + C81 * C515 + C95 * C247 + C82 * C516) * C79307) *
               C79308 * C79230 -
           ((C95 * C1905 + C82 * C2313 + C93 * C1906 + C81 * C2314) * C79307 +
            (C95 * C1681 + C82 * C1689 + C93 * C1682 + C81 * C1690) * C245) *
               C79308 * C79114) *
              C6795 +
          (((C93 * C3931 + C81 * C3935 + C95 * C3932 + C82 * C3936) * C245 +
            (C93 * C4165 + C81 * C4613 + C95 * C4166 + C82 * C4614) * C79307) *
               C79308 * C79114 -
           ((C95 * C972 + C82 * C1380 + C93 * C973 + C81 * C1381) * C79307 +
            (C95 * C748 + C82 * C756 + C93 * C749 + C81 * C757) * C245) *
               C79308 * C79230) *
              C6796 +
          (((C93 * C750 + C81 * C758 + C95 * C751 + C82 * C759) * C245 +
            (C93 * C974 + C81 * C1382 + C95 * C975 + C82 * C1383) * C79307) *
               C79308 * C79230 -
           ((C95 * C6227 + C82 * C6559 + C93 * C6228 + C81 * C6560) * C79307 +
            (C95 * C6043 + C82 * C6049 + C93 * C6044 + C81 * C6050) * C245) *
               C79308 * C79114) *
              C6797 +
          (((C93 * C8377 + C81 * C8379 + C95 * C8378 + C82 * C8380) * C245 +
            (C93 * C8521 + C81 * C8797 + C95 * C8522 + C82 * C8798) * C79307) *
               C79308 * C79114 -
           ((C95 * C5675 + C82 * C5867 + C93 * C5676 + C81 * C5868) * C79307 +
            (C95 * C5567 + C82 * C5571 + C93 * C5568 + C81 * C5572) * C245) *
               C79308 * C79230) *
              C79269) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C245 +
             (C93 * C246 + C81 * C515 + C95 * C247 + C82 * C516) * C79307) *
                C79308 * C79230 -
            ((C95 * C1905 + C82 * C2313 + C93 * C1906 + C81 * C2314) * C79307 +
             (C95 * C1681 + C82 * C1689 + C93 * C1682 + C81 * C1690) * C245) *
                C79308 * C79114) *
               C79229 +
           (((C93 * C3931 + C81 * C3935 + C95 * C3932 + C82 * C3936) * C245 +
             (C93 * C4165 + C81 * C4613 + C95 * C4166 + C82 * C4614) * C79307) *
                C79308 * C79114 -
            ((C95 * C972 + C82 * C1380 + C93 * C973 + C81 * C1381) * C79307 +
             (C95 * C748 + C82 * C756 + C93 * C749 + C81 * C757) * C245) *
                C79308 * C79230) *
               C79072) *
              C745 +
          ((((C93 * C1681 + C81 * C1689 + C95 * C1685 + C82 * C1693) * C245 +
             (C93 * C1905 + C81 * C2313 + C95 * C1909 + C82 * C2317) * C79307) *
                C79308 * C79114 -
            ((C95 * C248 + C82 * C517 + C93 * C247 + C81 * C516) * C79307 +
             (C95 * C98 + C82 * C104 + C93 * C97 + C81 * C103) * C245) *
                C79308 * C79230) *
               C79229 +
           (((C93 * C748 + C81 * C756 + C95 * C752 + C82 * C760) * C245 +
             (C93 * C972 + C81 * C1380 + C95 * C976 + C82 * C1384) * C79307) *
                C79308 * C79230 -
            ((C95 * C4167 + C82 * C4615 + C93 * C4166 + C81 * C4614) * C79307 +
             (C95 * C3933 + C82 * C3937 + C93 * C3932 + C81 * C3936) * C245) *
                C79308 * C79114) *
               C79072) *
              C746 +
          ((((C93 * C98 + C81 * C104 + C95 * C99 + C82 * C105) * C245 +
             (C93 * C248 + C81 * C517 + C95 * C249 + C82 * C518) * C79307) *
                C79308 * C79230 -
            ((C95 * C1911 + C82 * C2319 + C93 * C1909 + C81 * C2317) * C79307 +
             (C95 * C1687 + C82 * C1695 + C93 * C1685 + C81 * C1693) * C245) *
                C79308 * C79114) *
               C79229 +
           (((C93 * C3933 + C81 * C3937 + C95 * C3934 + C82 * C3938) * C245 +
             (C93 * C4167 + C81 * C4615 + C95 * C4168 + C82 * C4616) * C79307) *
                C79308 * C79114 -
            ((C95 * C978 + C82 * C1386 + C93 * C976 + C81 * C1384) * C79307 +
             (C95 * C754 + C82 * C762 + C93 * C752 + C81 * C760) * C245) *
                C79308 * C79230) *
               C79072) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C245 +
            (C93 * C246 + C81 * C515 + C95 * C247 + C82 * C516) * C79307) *
               C79308 * C11717 -
           ((C95 * C1905 + C82 * C2313 + C93 * C1906 + C81 * C2314) * C79307 +
            (C95 * C1681 + C82 * C1689 + C93 * C1682 + C81 * C1690) * C245) *
               C79308 * C11718 +
           ((C93 * C1683 + C81 * C1691 + C95 * C1684 + C82 * C1692) * C245 +
            (C93 * C1907 + C81 * C2315 + C95 * C1908 + C82 * C2316) * C79307) *
               C79308 * C11719 -
           ((C95 * C10427 + C82 * C10619 + C93 * C10428 + C81 * C10620) *
                C79307 +
            (C95 * C10319 + C82 * C10323 + C93 * C10320 + C81 * C10324) *
                C245) *
               C79308 * C79275) *
              C79229 +
          (((C93 * C3931 + C81 * C3935 + C95 * C3932 + C82 * C3936) * C245 +
            (C93 * C4165 + C81 * C4613 + C95 * C4166 + C82 * C4614) * C79307) *
               C79308 * C11718 -
           ((C95 * C972 + C82 * C1380 + C93 * C973 + C81 * C1381) * C79307 +
            (C95 * C748 + C82 * C756 + C93 * C749 + C81 * C757) * C245) *
               C79308 * C11717 -
           ((C95 * C6225 + C82 * C6557 + C93 * C6226 + C81 * C6558) * C79307 +
            (C95 * C6041 + C82 * C6047 + C93 * C6042 + C81 * C6048) * C245) *
               C79308 * C11719 +
           ((C93 * C12365 + C81 * C12367 + C95 * C12366 + C82 * C12368) * C245 +
            (C93 * C12509 + C81 * C12785 + C95 * C12510 + C82 * C12786) *
                C79307) *
               C79308 * C79275) *
              C79072) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eezy[11] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C166 * C96 + C79308 * C167) * C245 +
             (C166 * C246 + C79308 * C563) * C79307) *
                C81 +
            (C570 + C586) * C82) *
               C79230 -
           ((C2420 + C2406) * C82 + ((C166 * C1906 + C79308 * C2396) * C79307 +
                                     (C166 * C1682 + C79308 * C1792) * C245) *
                                        C81) *
               C79114) *
              C6795 +
          ((((C166 * C3931 + C79308 * C4047) * C245 +
             (C166 * C4165 + C79308 * C4715) * C79307) *
                C81 +
            (C4720 + C4728) * C82) *
               C79114 -
           ((C1487 + C1473) * C82 + ((C166 * C973 + C79308 * C1463) * C79307 +
                                     (C166 * C749 + C79308 * C859) * C245) *
                                        C81) *
               C79230) *
              C6796 +
          ((((C166 * C750 + C79308 * C860) * C245 +
             (C166 * C974 + C79308 * C1464) * C79307) *
                C81 +
            (C1474 + C1488) * C82) *
               C79230 -
           ((C8205 + C8203) * C82 + ((C166 * C6228 + C79308 * C6640) * C79307 +
                                     (C166 * C6044 + C79308 * C6142) * C245) *
                                        C81) *
               C79114) *
              C6797 +
          ((((C166 * C8377 + C79308 * C8451) * C245 +
             (C166 * C8521 + C79308 * C8865) * C79307) *
                C81 +
            ((C166 * C8378 + C79308 * C8452) * C245 +
             (C166 * C8522 + C79308 * C8866) * C79307) *
                C82) *
               C79114 -
           ((C7305 + C7303) * C82 + ((C166 * C5676 + C79308 * C5914) * C79307 +
                                     (C166 * C5568 + C79308 * C5626) * C245) *
                                        C81) *
               C79230) *
              C79269) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C166 * C96 + C79308 * C167) * C245 +
              (C166 * C246 + C79308 * C563) * C79307) *
                 C81 +
             (C570 + C586) * C82) *
                C79230 -
            ((C2420 + C2406) * C82 + ((C166 * C1906 + C79308 * C2396) * C79307 +
                                      (C166 * C1682 + C79308 * C1792) * C245) *
                                         C81) *
                C79114) *
               C79229 +
           ((((C166 * C3931 + C79308 * C4047) * C245 +
              (C166 * C4165 + C79308 * C4715) * C79307) *
                 C81 +
             (C4720 + C4728) * C82) *
                C79114 -
            ((C1487 + C1473) * C82 + ((C166 * C973 + C79308 * C1463) * C79307 +
                                      (C166 * C749 + C79308 * C859) * C245) *
                                         C81) *
                C79230) *
               C79072) *
              C745 +
          ((((C2406 + C2420) * C81 + (C2410 + C2422) * C82) * C79114 -
            ((C587 + C575) * C82 + (C586 + C570) * C81) * C79230) *
               C79229 +
           (((C1473 + C1487) * C81 + (C1477 + C1489) * C82) * C79230 -
            ((C4729 + C4725) * C82 + (C4728 + C4720) * C81) * C79114) *
               C79072) *
              C746 +
          ((((C575 + C587) * C81 + (C576 + C588) * C82) * C79230 -
            ((C3759 + C3757) * C82 + (C2422 + C2410) * C81) * C79114) *
               C79229 +
           (((C4725 + C4729) * C81 +
             ((C166 * C3934 + C79308 * C4050) * C245 +
              (C166 * C4168 + C79308 * C4718) * C79307) *
                 C82) *
                C79114 -
            ((C3113 + C3111) * C82 + (C1489 + C1477) * C81) * C79230) *
               C79072) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C166 * C96 + C79308 * C167) * C245 +
             (C166 * C246 + C79308 * C563) * C79307) *
                C81 +
            (C570 + C586) * C82) *
               C11717 -
           ((C2420 + C2406) * C82 + ((C166 * C1906 + C79308 * C2396) * C79307 +
                                     (C166 * C1682 + C79308 * C1792) * C245) *
                                        C81) *
               C11718 +
           (((C166 * C1683 + C79308 * C1793) * C245 +
             (C166 * C1907 + C79308 * C2397) * C79307) *
                C81 +
            (C2407 + C2421) * C82) *
               C11719 -
           ((C12225 + C12223) * C82 +
            ((C166 * C10428 + C79308 * C10666) * C79307 +
             (C166 * C10320 + C79308 * C10378) * C245) *
                C81) *
               C79275) *
              C79229 +
          ((((C166 * C3931 + C79308 * C4047) * C245 +
             (C166 * C4165 + C79308 * C4715) * C79307) *
                C81 +
            (C4720 + C4728) * C82) *
               C11718 -
           ((C1487 + C1473) * C82 + ((C166 * C973 + C79308 * C1463) * C79307 +
                                     (C166 * C749 + C79308 * C859) * C245) *
                                        C81) *
               C11717 -
           ((C11545 + C11543) * C82 +
            ((C166 * C6226 + C79308 * C6638) * C79307 +
             (C166 * C6042 + C79308 * C6140) * C245) *
                C81) *
               C11719 +
           (((C166 * C12365 + C79308 * C12439) * C245 +
             (C166 * C12509 + C79308 * C12853) * C79307) *
                C81 +
            ((C166 * C12366 + C79308 * C12440) * C245 +
             (C166 * C12510 + C79308 * C12854) * C79307) *
                C82) *
               C79275) *
              C79072) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eezz[11] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C631 * C96 + C639 + C639 + C79307 * C632) * C79308 * C81 +
            C665 * C82) *
               C79230 -
           (C2534 * C82 +
            (C631 * C1682 + C2509 + C2509 + C79307 * C2498) * C79308 * C81) *
               C79114) *
              C6795 +
          (((C631 * C3931 + C4832 + C4832 + C79307 * C4827) * C79308 * C81 +
            C4846 * C82) *
               C79114 -
           (C1601 * C82 +
            (C631 * C749 + C1576 + C1576 + C79307 * C1565) * C79308 * C81) *
               C79230) *
              C6796 +
          (((C631 * C750 + C1577 + C1577 + C79307 * C1566) * C79308 * C81 +
            C1602 * C82) *
               C79230 -
           (C8311 * C82 +
            (C631 * C6044 + C6727 + C6727 + C79307 * C6720) * C79308 * C81) *
               C79114) *
              C6797 +
          (((C631 * C8377 + C8936 + C8936 + C79307 * C8933) * C79308 * C81 +
            (C631 * C8378 + C8937 + C8937 + C79307 * C8934) * C79308 * C82) *
               C79114 -
           (C7379 * C82 +
            (C631 * C5568 + C5965 + C5965 + C79307 * C5960) * C79308 * C81) *
               C79230) *
              C79269) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C631 * C96 + C639 + C639 + C79307 * C632) * C79308 * C81 +
             C665 * C82) *
                C79230 -
            (C2534 * C82 +
             (C631 * C1682 + C2509 + C2509 + C79307 * C2498) * C79308 * C81) *
                C79114) *
               C79229 +
           (((C631 * C3931 + C4832 + C4832 + C79307 * C4827) * C79308 * C81 +
             C4846 * C82) *
                C79114 -
            (C1601 * C82 +
             (C631 * C749 + C1576 + C1576 + C79307 * C1565) * C79308 * C81) *
                C79230) *
               C79072) *
              C745 +
          (((C2534 * C81 + C2536 * C82) * C79114 -
            (C666 * C82 + C665 * C81) * C79230) *
               C79229 +
           ((C1601 * C81 + C1603 * C82) * C79230 -
            (C4847 * C82 + C4846 * C81) * C79114) *
               C79072) *
              C746 +
          (((C666 * C81 + C667 * C82) * C79230 -
            (C3833 * C82 + C2536 * C81) * C79114) *
               C79229 +
           ((C4847 * C81 +
             (C631 * C3934 + C4839 + C4839 + C79307 * C4830) * C79308 * C82) *
                C79114 -
            (C3187 * C82 + C1603 * C81) * C79230) *
               C79072) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C631 * C96 + C639 + C639 + C79307 * C632) * C79308 * C81 +
            C665 * C82) *
               C11717 -
           (C2534 * C82 +
            (C631 * C1682 + C2509 + C2509 + C79307 * C2498) * C79308 * C81) *
               C11718 +
           ((C631 * C1683 + C2510 + C2510 + C79307 * C2499) * C79308 * C81 +
            C2535 * C82) *
               C11719 -
           (C12299 * C82 + (C631 * C10320 + C10717 + C10717 + C79307 * C10712) *
                               C79308 * C81) *
               C79275) *
              C79229 +
          (((C631 * C3931 + C4832 + C4832 + C79307 * C4827) * C79308 * C81 +
            C4846 * C82) *
               C11718 -
           (C1601 * C82 +
            (C631 * C749 + C1576 + C1576 + C79307 * C1565) * C79308 * C81) *
               C11717 -
           (C11651 * C82 +
            (C631 * C6042 + C6725 + C6725 + C79307 * C6718) * C79308 * C81) *
               C11719 +
           ((C631 * C12365 + C12924 + C12924 + C79307 * C12921) * C79308 * C81 +
            (C631 * C12366 + C12925 + C12925 + C79307 * C12922) * C79308 *
                C82) *
               C79275) *
              C79072) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eexx[12] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((C92 * C96 + C115 + C115 + C81 * C108 + C94 * C97 + C116 + C116 +
               C82 * C109) *
                  C79307 * C79308 * C79027 * C79009 * C87 -
              (C94 * C98 + C117 + C117 + C82 * C110 + C92 * C97 + C118 + C118 +
               C81 * C109) *
                  C79307 * C79308 * C79027 * C79009 * C88 +
              (C92 * C98 + C119 + C119 + C81 * C110 + C94 * C99 + C120 + C120 +
               C82 * C111) *
                  C79307 * C79308 * C79027 * C79009 * C89 -
              (C94 * C100 + C121 + C121 + C82 * C112 + C92 * C99 + C122 + C122 +
               C81 * C111) *
                  C79307 * C79308 * C79027 * C79009 * C90 +
              (C92 * C100 + C123 + C123 + C81 * C112 + C94 * C101 + C124 +
               C124 + C82 * C113) *
                  C79307 * C79308 * C79027 * C79009 * C91) +
         0.5 * std::pow(Pi, 2.5) *
             (((C92 * C96 + C115 + C115 + C81 * C108 + C94 * C97 + C116 + C116 +
                C82 * C109) *
                   C79307 * C79308 * C79027 * C79300 -
               (C94 * C748 + C773 + C773 + C82 * C764 + C92 * C749 + C774 +
                C774 + C81 * C765) *
                   C79307 * C79308 * C79027 * C79285 +
               (C92 * C750 + C775 + C775 + C81 * C766 + C94 * C751 + C776 +
                C776 + C82 * C767) *
                   C79307 * C79308 * C79027 * C79259) *
                  C745 +
              ((C92 * C748 + C777 + C777 + C81 * C764 + C94 * C752 + C778 +
                C778 + C82 * C768) *
                   C79307 * C79308 * C79027 * C79285 -
               (C94 * C98 + C117 + C117 + C82 * C110 + C92 * C97 + C118 + C118 +
                C81 * C109) *
                   C79307 * C79308 * C79027 * C79300 -
               (C94 * C753 + C779 + C779 + C82 * C769 + C92 * C751 + C780 +
                C780 + C81 * C767) *
                   C79307 * C79308 * C79027 * C79259) *
                  C746 +
              ((C92 * C98 + C119 + C119 + C81 * C110 + C94 * C99 + C120 + C120 +
                C82 * C111) *
                   C79307 * C79308 * C79027 * C79300 -
               (C94 * C754 + C781 + C781 + C82 * C770 + C92 * C752 + C782 +
                C782 + C81 * C768) *
                   C79307 * C79308 * C79027 * C79285 +
               (C92 * C753 + C783 + C783 + C81 * C769 + C94 * C755 + C784 +
                C784 + C82 * C771) *
                   C79307 * C79308 * C79027 * C79259) *
                  C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) * (((C92 * C96 + C115 + C115 + C81 * C108 +
                                C94 * C97 + C116 + C116 + C82 * C109) *
                                   C79307 * C79308 * C79301 -
                               (C94 * C1681 + C1706 + C1706 + C82 * C1697 +
                                C92 * C1682 + C1707 + C1707 + C81 * C1698) *
                                   C79307 * C79308 * C79287 +
                               (C92 * C1683 + C1708 + C1708 + C81 * C1699 +
                                C94 * C1684 + C1709 + C1709 + C82 * C1700) *
                                   C79307 * C79308 * C79262) *
                                  C79009 * C745 +
                              ((C92 * C1681 + C1710 + C1710 + C81 * C1697 +
                                C94 * C1685 + C1711 + C1711 + C82 * C1701) *
                                   C79307 * C79308 * C79287 -
                               (C94 * C98 + C117 + C117 + C82 * C110 +
                                C92 * C97 + C118 + C118 + C81 * C109) *
                                   C79307 * C79308 * C79301 -
                               (C94 * C1686 + C1712 + C1712 + C82 * C1702 +
                                C92 * C1684 + C1713 + C1713 + C81 * C1700) *
                                   C79307 * C79308 * C79262) *
                                  C79009 * C746 +
                              ((C92 * C98 + C119 + C119 + C81 * C110 +
                                C94 * C99 + C120 + C120 + C82 * C111) *
                                   C79307 * C79308 * C79301 -
                               (C94 * C1687 + C1714 + C1714 + C82 * C1703 +
                                C92 * C1685 + C1715 + C1715 + C81 * C1701) *
                                   C79307 * C79308 * C79287 +
                               (C92 * C1686 + C1716 + C1716 + C81 * C1702 +
                                C94 * C1688 + C1717 + C1717 + C82 * C1704) *
                                   C79307 * C79308 * C79262) *
                                  C79009 * C79253)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C92 * C96 + C115 + C115 + C81 * C108 + C94 * C97 + C116 + C116 +
            C82 * C109) *
               C79307 * C79308 * C79027 * C4921 -
           (C94 * C748 + C773 + C773 + C82 * C764 + C92 * C749 + C774 + C774 +
            C81 * C765) *
               C79307 * C79308 * C79027 * C4922 +
           (C92 * C750 + C775 + C775 + C81 * C766 + C94 * C751 + C776 + C776 +
            C82 * C767) *
               C79307 * C79308 * C79027 * C79259) *
              C79297 +
          ((C92 * C748 + C777 + C777 + C81 * C764 + C94 * C752 + C778 + C778 +
            C82 * C768) *
               C79307 * C79308 * C79027 * C4922 -
           (C94 * C98 + C117 + C117 + C82 * C110 + C92 * C97 + C118 + C118 +
            C81 * C109) *
               C79307 * C79308 * C79027 * C4921 -
           (C94 * C753 + C779 + C779 + C82 * C769 + C92 * C751 + C780 + C780 +
            C81 * C767) *
               C79307 * C79308 * C79027 * C79259) *
              C79281 +
          ((C92 * C98 + C119 + C119 + C81 * C110 + C94 * C99 + C120 + C120 +
            C82 * C111) *
               C79307 * C79308 * C79027 * C4921 -
           (C94 * C754 + C781 + C781 + C82 * C770 + C92 * C752 + C782 + C782 +
            C81 * C768) *
               C79307 * C79308 * C79027 * C4922 +
           (C92 * C753 + C783 + C783 + C81 * C769 + C94 * C755 + C784 + C784 +
            C82 * C771) *
               C79307 * C79308 * C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((C92 * C96 + C115 + C115 + C81 * C108 + C94 * C97 + C116 + C116 +
           C82 * C109) *
              C79307 * C79308 * C79027 * C5561 -
          (C94 * C748 + C773 + C773 + C82 * C764 + C92 * C749 + C774 + C774 +
           C81 * C765) *
              C79307 * C79308 * C79027 * C5562 +
          (C92 * C750 + C775 + C775 + C81 * C766 + C94 * C751 + C776 + C776 +
           C82 * C767) *
              C79307 * C79308 * C79027 * C5563 -
          (C94 * C5567 + C5580 + C5580 + C82 * C5575 + C92 * C5568 + C5581 +
           C5581 + C81 * C5576) *
              C79307 * C79308 * C79027 * C5564 +
          (C92 * C5569 + C5582 + C5582 + C81 * C5577 + C94 * C5570 + C5583 +
           C5583 + C82 * C5578) *
              C79307 * C79308 * C79027 * C5565) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C92 * C96 + C115 + C115 + C81 * C108 + C94 * C97 + C116 + C116 +
            C82 * C109) *
               C79307 * C79308 * C79301 -
           (C94 * C1681 + C1706 + C1706 + C82 * C1697 + C92 * C1682 + C1707 +
            C1707 + C81 * C1698) *
               C79307 * C79308 * C79287 +
           (C92 * C1683 + C1708 + C1708 + C81 * C1699 + C94 * C1684 + C1709 +
            C1709 + C82 * C1700) *
               C79307 * C79308 * C79262) *
              C4921 +
          ((C92 * C3931 + C3944 + C3944 + C81 * C3939 + C94 * C3932 + C3945 +
            C3945 + C82 * C3940) *
               C79307 * C79308 * C79287 -
           (C94 * C748 + C773 + C773 + C82 * C764 + C92 * C749 + C774 + C774 +
            C81 * C765) *
               C79307 * C79308 * C79301 -
           (C94 * C6041 + C6060 + C6060 + C82 * C6053 + C92 * C6042 + C6061 +
            C6061 + C81 * C6054) *
               C79307 * C79308 * C79262) *
              C4922 +
          ((C92 * C750 + C775 + C775 + C81 * C766 + C94 * C751 + C776 + C776 +
            C82 * C767) *
               C79307 * C79308 * C79301 -
           (C94 * C6043 + C6062 + C6062 + C82 * C6055 + C92 * C6044 + C6063 +
            C6063 + C81 * C6056) *
               C79307 * C79308 * C79287 +
           (C92 * C6045 + C6064 + C6064 + C81 * C6057 + C94 * C6046 + C6065 +
            C6065 + C82 * C6058) *
               C79307 * C79308 * C79262) *
              C79259) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) * (((C92 * C96 + C115 + C115 + C81 * C108 +
                                C94 * C97 + C116 + C116 + C82 * C109) *
                                   C79307 * C79308 * C9011 -
                               (C94 * C1681 + C1706 + C1706 + C82 * C1697 +
                                C92 * C1682 + C1707 + C1707 + C81 * C1698) *
                                   C79307 * C79308 * C9012 +
                               (C92 * C1683 + C1708 + C1708 + C81 * C1699 +
                                C94 * C1684 + C1709 + C1709 + C82 * C1700) *
                                   C79307 * C79308 * C79262) *
                                  C79009 * C79297 +
                              ((C92 * C1681 + C1710 + C1710 + C81 * C1697 +
                                C94 * C1685 + C1711 + C1711 + C82 * C1701) *
                                   C79307 * C79308 * C9012 -
                               (C94 * C98 + C117 + C117 + C82 * C110 +
                                C92 * C97 + C118 + C118 + C81 * C109) *
                                   C79307 * C79308 * C9011 -
                               (C94 * C1686 + C1712 + C1712 + C82 * C1702 +
                                C92 * C1684 + C1713 + C1713 + C81 * C1700) *
                                   C79307 * C79308 * C79262) *
                                  C79009 * C79281 +
                              ((C92 * C98 + C119 + C119 + C81 * C110 +
                                C94 * C99 + C120 + C120 + C82 * C111) *
                                   C79307 * C79308 * C9011 -
                               (C94 * C1687 + C1714 + C1714 + C82 * C1703 +
                                C92 * C1685 + C1715 + C1715 + C81 * C1701) *
                                   C79307 * C79308 * C9012 +
                               (C92 * C1686 + C1716 + C1716 + C81 * C1702 +
                                C94 * C1688 + C1717 + C1717 + C82 * C1704) *
                                   C79307 * C79308 * C79262) *
                                  C79009 * C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C92 * C96 + C115 + C115 + C81 * C108 + C94 * C97 + C116 + C116 +
            C82 * C109) *
               C79307 * C79308 * C9011 -
           (C94 * C1681 + C1706 + C1706 + C82 * C1697 + C92 * C1682 + C1707 +
            C1707 + C81 * C1698) *
               C79307 * C79308 * C9012 +
           (C92 * C1683 + C1708 + C1708 + C81 * C1699 + C94 * C1684 + C1709 +
            C1709 + C82 * C1700) *
               C79307 * C79308 * C79262) *
              C79300 +
          ((C92 * C3931 + C3944 + C3944 + C81 * C3939 + C94 * C3932 + C3945 +
            C3945 + C82 * C3940) *
               C79307 * C79308 * C9012 -
           (C94 * C748 + C773 + C773 + C82 * C764 + C92 * C749 + C774 + C774 +
            C81 * C765) *
               C79307 * C79308 * C9011 -
           (C94 * C6041 + C6060 + C6060 + C82 * C6053 + C92 * C6042 + C6061 +
            C6061 + C81 * C6054) *
               C79307 * C79308 * C79262) *
              C79285 +
          ((C92 * C750 + C775 + C775 + C81 * C766 + C94 * C751 + C776 + C776 +
            C82 * C767) *
               C79307 * C79308 * C9011 -
           (C94 * C6043 + C6062 + C6062 + C82 * C6055 + C92 * C6044 + C6063 +
            C6063 + C81 * C6056) *
               C79307 * C79308 * C9012 +
           (C92 * C6045 + C6064 + C6064 + C81 * C6057 + C94 * C6046 + C6065 +
            C6065 + C82 * C6058) *
               C79307 * C79308 * C79262) *
              C79259) *
         C78981) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((C92 * C96 + C115 + C115 + C81 * C108 + C94 * C97 + C116 + C116 +
           C82 * C109) *
              C79307 * C79308 * C10314 -
          (C94 * C1681 + C1706 + C1706 + C82 * C1697 + C92 * C1682 + C1707 +
           C1707 + C81 * C1698) *
              C79307 * C79308 * C10315 +
          (C92 * C1683 + C1708 + C1708 + C81 * C1699 + C94 * C1684 + C1709 +
           C1709 + C82 * C1700) *
              C79307 * C79308 * C10316 -
          (C94 * C10319 + C10332 + C10332 + C82 * C10327 + C92 * C10320 +
           C10333 + C10333 + C81 * C10328) *
              C79307 * C79308 * C10317 +
          (C92 * C10321 + C10334 + C10334 + C81 * C10329 + C94 * C10322 +
           C10335 + C10335 + C82 * C10330) *
              C79307 * C79308 * C10318) *
         C79009 * C78981) /
            (p * q * std::sqrt(p + q));
    d2eexy[12] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((C166 * C96 + C79308 * C167) * C93 +
               (C166 * C102 + C79308 * C173) * C81 + C196 * C95 + C197 * C82) *
                  C79307 * C79027 * C79009 * C87 -
              (C198 * C82 + C199 * C95 + C197 * C81 + C196 * C93) * C79307 *
                  C79027 * C79009 * C88 +
              (C199 * C93 + C198 * C81 + C200 * C95 + C201 * C82) * C79307 *
                  C79027 * C79009 * C89 -
              (C202 * C82 + C203 * C95 + C201 * C81 + C200 * C93) * C79307 *
                  C79027 * C79009 * C90 +
              (C203 * C93 + C202 * C81 + (C166 * C101 + C79308 * C172) * C95 +
               (C166 * C107 + C79308 * C178) * C82) *
                  C79307 * C79027 * C79009 * C91) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C166 * C96 + C79308 * C167) * C93 +
                (C166 * C102 + C79308 * C173) * C81 + C196 * C95 + C197 * C82) *
                   C79307 * C79027 * C79300 -
               (C891 * C82 + C892 * C95 + (C166 * C757 + C79308 * C867) * C81 +
                (C166 * C749 + C79308 * C859) * C93) *
                   C79307 * C79027 * C79285 +
               ((C166 * C750 + C79308 * C860) * C93 +
                (C166 * C758 + C79308 * C868) * C81 + C893 * C95 + C894 * C82) *
                   C79307 * C79027 * C79259) *
                  C745 +
              ((C892 * C93 + C891 * C81 + C895 * C95 + C896 * C82) * C79307 *
                   C79027 * C79285 -
               (C198 * C82 + C199 * C95 + C197 * C81 + C196 * C93) * C79307 *
                   C79027 * C79300 -
               (C897 * C82 + C898 * C95 + C894 * C81 + C893 * C93) * C79307 *
                   C79027 * C79259) *
                  C746 +
              ((C199 * C93 + C198 * C81 + C200 * C95 + C201 * C82) * C79307 *
                   C79027 * C79300 -
               ((C166 * C762 + C79308 * C872) * C82 +
                (C166 * C754 + C79308 * C864) * C95 + C896 * C81 + C895 * C93) *
                   C79307 * C79027 * C79285 +
               (C898 * C93 + C897 * C81 + (C166 * C755 + C79308 * C865) * C95 +
                (C166 * C763 + C79308 * C873) * C82) *
                   C79307 * C79027 * C79259) *
                  C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C166 * C96 + C79308 * C167) * C93 +
            (C166 * C102 + C79308 * C173) * C81 + C196 * C95 + C197 * C82) *
               C79307 * C79301 -
           (C1824 * C82 + C1825 * C95 + (C166 * C1690 + C79308 * C1800) * C81 +
            (C166 * C1682 + C79308 * C1792) * C93) *
               C79307 * C79287 +
           ((C166 * C1683 + C79308 * C1793) * C93 +
            (C166 * C1691 + C79308 * C1801) * C81 + C1826 * C95 + C1827 * C82) *
               C79307 * C79262) *
              C79009 * C745 +
          ((C1825 * C93 + C1824 * C81 + C1828 * C95 + C1829 * C82) * C79307 *
               C79287 -
           (C198 * C82 + C199 * C95 + C197 * C81 + C196 * C93) * C79307 *
               C79301 -
           (C1830 * C82 + C1831 * C95 + C1827 * C81 + C1826 * C93) * C79307 *
               C79262) *
              C79009 * C746 +
          ((C199 * C93 + C198 * C81 + C200 * C95 + C201 * C82) * C79307 *
               C79301 -
           ((C166 * C1695 + C79308 * C1805) * C82 +
            (C166 * C1687 + C79308 * C1797) * C95 + C1829 * C81 + C1828 * C93) *
               C79307 * C79287 +
           (C1831 * C93 + C1830 * C81 + (C166 * C1688 + C79308 * C1798) * C95 +
            (C166 * C1696 + C79308 * C1806) * C82) *
               C79307 * C79262) *
              C79009 * C79253)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C166 * C96 + C79308 * C167) * C93 +
            (C166 * C102 + C79308 * C173) * C81 + C196 * C95 + C197 * C82) *
               C79307 * C79027 * C4921 -
           (C891 * C82 + C892 * C95 + (C166 * C757 + C79308 * C867) * C81 +
            (C166 * C749 + C79308 * C859) * C93) *
               C79307 * C79027 * C4922 +
           ((C166 * C750 + C79308 * C860) * C93 +
            (C166 * C758 + C79308 * C868) * C81 + C893 * C95 + C894 * C82) *
               C79307 * C79027 * C79259) *
              C79297 +
          ((C892 * C93 + C891 * C81 + C895 * C95 + C896 * C82) * C79307 *
               C79027 * C4922 -
           (C198 * C82 + C199 * C95 + C197 * C81 + C196 * C93) * C79307 *
               C79027 * C4921 -
           (C897 * C82 + C898 * C95 + C894 * C81 + C893 * C93) * C79307 *
               C79027 * C79259) *
              C79281 +
          ((C199 * C93 + C198 * C81 + C200 * C95 + C201 * C82) * C79307 *
               C79027 * C4921 -
           (C2687 * C82 + C2688 * C95 + C896 * C81 + C895 * C93) * C79307 *
               C79027 * C4922 +
           (C898 * C93 + C897 * C81 + (C166 * C755 + C79308 * C865) * C95 +
            (C166 * C763 + C79308 * C873) * C82) *
               C79307 * C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C166 * C96 + C79308 * C167) * C93 +
           (C166 * C102 + C79308 * C173) * C81 + C196 * C95 + C197 * C82) *
              C79307 * C79027 * C5561 -
          (C891 * C82 + C892 * C95 + (C166 * C757 + C79308 * C867) * C81 +
           (C166 * C749 + C79308 * C859) * C93) *
              C79307 * C79027 * C5562 +
          ((C166 * C750 + C79308 * C860) * C93 +
           (C166 * C758 + C79308 * C868) * C81 + C893 * C95 + C894 * C82) *
              C79307 * C79027 * C5563 -
          ((C166 * C5571 + C79308 * C5629) * C82 +
           (C166 * C5567 + C79308 * C5625) * C95 +
           (C166 * C5572 + C79308 * C5630) * C81 +
           (C166 * C5568 + C79308 * C5626) * C93) *
              C79307 * C79027 * C5564 +
          ((C166 * C5569 + C79308 * C5627) * C93 +
           (C166 * C5573 + C79308 * C5631) * C81 +
           (C166 * C5570 + C79308 * C5628) * C95 +
           (C166 * C5574 + C79308 * C5632) * C82) *
              C79307 * C79027 * C5565) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C166 * C96 + C79308 * C167) * C93 +
            (C166 * C102 + C79308 * C173) * C81 + C196 * C95 + C197 * C82) *
               C79307 * C79301 -
           (C1824 * C82 + C1825 * C95 + (C166 * C1690 + C79308 * C1800) * C81 +
            (C166 * C1682 + C79308 * C1792) * C93) *
               C79307 * C79287 +
           ((C166 * C1683 + C79308 * C1793) * C93 +
            (C166 * C1691 + C79308 * C1801) * C81 + C1826 * C95 + C1827 * C82) *
               C79307 * C79262) *
              C4921 +
          (((C166 * C3931 + C79308 * C4047) * C93 +
            (C166 * C3935 + C79308 * C4051) * C81 + C4064 * C95 + C4065 * C82) *
               C79307 * C79287 -
           (C891 * C82 + C892 * C95 + (C166 * C757 + C79308 * C867) * C81 +
            (C166 * C749 + C79308 * C859) * C93) *
               C79307 * C79301 -
           ((C166 * C6047 + C79308 * C6145) * C82 +
            (C166 * C6041 + C79308 * C6139) * C95 +
            (C166 * C6048 + C79308 * C6146) * C81 +
            (C166 * C6042 + C79308 * C6140) * C93) *
               C79307 * C79262) *
              C4922 +
          (((C166 * C750 + C79308 * C860) * C93 +
            (C166 * C758 + C79308 * C868) * C81 + C893 * C95 + C894 * C82) *
               C79307 * C79301 -
           ((C166 * C6049 + C79308 * C6147) * C82 +
            (C166 * C6043 + C79308 * C6141) * C95 +
            (C166 * C6050 + C79308 * C6148) * C81 +
            (C166 * C6044 + C79308 * C6142) * C93) *
               C79307 * C79287 +
           ((C166 * C6045 + C79308 * C6143) * C93 +
            (C166 * C6051 + C79308 * C6149) * C81 +
            (C166 * C6046 + C79308 * C6144) * C95 +
            (C166 * C6052 + C79308 * C6150) * C82) *
               C79307 * C79262) *
              C79259) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C166 * C96 + C79308 * C167) * C93 +
            (C166 * C102 + C79308 * C173) * C81 + C196 * C95 + C197 * C82) *
               C79307 * C9011 -
           (C1824 * C82 + C1825 * C95 + (C166 * C1690 + C79308 * C1800) * C81 +
            (C166 * C1682 + C79308 * C1792) * C93) *
               C79307 * C9012 +
           ((C166 * C1683 + C79308 * C1793) * C93 +
            (C166 * C1691 + C79308 * C1801) * C81 + C1826 * C95 + C1827 * C82) *
               C79307 * C79262) *
              C79009 * C79297 +
          ((C1825 * C93 + C1824 * C81 + C1828 * C95 + C1829 * C82) * C79307 *
               C9012 -
           (C198 * C82 + C199 * C95 + C197 * C81 + C196 * C93) * C79307 *
               C9011 -
           (C1830 * C82 + C1831 * C95 + C1827 * C81 + C1826 * C93) * C79307 *
               C79262) *
              C79009 * C79281 +
          ((C199 * C93 + C198 * C81 + C200 * C95 + C201 * C82) * C79307 *
               C9011 -
           (C3333 * C82 + C3334 * C95 + C1829 * C81 + C1828 * C93) * C79307 *
               C9012 +
           (C1831 * C93 + C1830 * C81 + (C166 * C1688 + C79308 * C1798) * C95 +
            (C166 * C1696 + C79308 * C1806) * C82) *
               C79307 * C79262) *
              C79009 * C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C166 * C96 + C79308 * C167) * C93 +
            (C166 * C102 + C79308 * C173) * C81 + C196 * C95 + C197 * C82) *
               C79307 * C9011 -
           (C1824 * C82 + C1825 * C95 + (C166 * C1690 + C79308 * C1800) * C81 +
            (C166 * C1682 + C79308 * C1792) * C93) *
               C79307 * C9012 +
           ((C166 * C1683 + C79308 * C1793) * C93 +
            (C166 * C1691 + C79308 * C1801) * C81 + C1826 * C95 + C1827 * C82) *
               C79307 * C79262) *
              C79300 +
          (((C166 * C3931 + C79308 * C4047) * C93 +
            (C166 * C3935 + C79308 * C4051) * C81 + C4064 * C95 + C4065 * C82) *
               C79307 * C9012 -
           (C891 * C82 + C892 * C95 + (C166 * C757 + C79308 * C867) * C81 +
            (C166 * C749 + C79308 * C859) * C93) *
               C79307 * C9011 -
           ((C166 * C6047 + C79308 * C6145) * C82 +
            (C166 * C6041 + C79308 * C6139) * C95 +
            (C166 * C6048 + C79308 * C6146) * C81 +
            (C166 * C6042 + C79308 * C6140) * C93) *
               C79307 * C79262) *
              C79285 +
          (((C166 * C750 + C79308 * C860) * C93 +
            (C166 * C758 + C79308 * C868) * C81 + C893 * C95 + C894 * C82) *
               C79307 * C9011 -
           (C7587 * C82 + C7588 * C95 + (C166 * C6050 + C79308 * C6148) * C81 +
            (C166 * C6044 + C79308 * C6142) * C93) *
               C79307 * C9012 +
           ((C166 * C6045 + C79308 * C6143) * C93 +
            (C166 * C6051 + C79308 * C6149) * C81 +
            (C166 * C6046 + C79308 * C6144) * C95 +
            (C166 * C6052 + C79308 * C6150) * C82) *
               C79307 * C79262) *
              C79259) *
         C78981) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C166 * C96 + C79308 * C167) * C93 +
           (C166 * C102 + C79308 * C173) * C81 + C196 * C95 + C197 * C82) *
              C79307 * C10314 -
          (C1824 * C82 + C1825 * C95 + (C166 * C1690 + C79308 * C1800) * C81 +
           (C166 * C1682 + C79308 * C1792) * C93) *
              C79307 * C10315 +
          ((C166 * C1683 + C79308 * C1793) * C93 +
           (C166 * C1691 + C79308 * C1801) * C81 + C1826 * C95 + C1827 * C82) *
              C79307 * C10316 -
          ((C166 * C10323 + C79308 * C10381) * C82 +
           (C166 * C10319 + C79308 * C10377) * C95 +
           (C166 * C10324 + C79308 * C10382) * C81 +
           (C166 * C10320 + C79308 * C10378) * C93) *
              C79307 * C10317 +
          ((C166 * C10321 + C79308 * C10379) * C93 +
           (C166 * C10325 + C79308 * C10383) * C81 +
           (C166 * C10322 + C79308 * C10380) * C95 +
           (C166 * C10326 + C79308 * C10384) * C82) *
              C79307 * C10318) *
         C79009 * C78981) /
            (p * q * std::sqrt(p + q));
    d2eexz[12] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((C245 * C96 + C79307 * C246) * C93 +
               (C245 * C102 + C79307 * C252) * C81 + C275 * C95 + C276 * C82) *
                  C79308 * C79027 * C79009 * C87 -
              (C277 * C82 + C278 * C95 + C276 * C81 + C275 * C93) * C79308 *
                  C79027 * C79009 * C88 +
              (C278 * C93 + C277 * C81 + C279 * C95 + C280 * C82) * C79308 *
                  C79027 * C79009 * C89 -
              (C281 * C82 + C282 * C95 + C280 * C81 + C279 * C93) * C79308 *
                  C79027 * C79009 * C90 +
              (C282 * C93 + C281 * C81 + (C245 * C101 + C79307 * C251) * C95 +
               (C245 * C107 + C79307 * C257) * C82) *
                  C79308 * C79027 * C79009 * C91) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C245 * C96 + C79307 * C246) * C93 +
                (C245 * C102 + C79307 * C252) * C81 + C275 * C95 + C276 * C82) *
                   C79308 * C79027 * C79300 -
               (C1005 * C82 + C1006 * C95 +
                (C245 * C757 + C79307 * C981) * C81 +
                (C245 * C749 + C79307 * C973) * C93) *
                   C79308 * C79027 * C79285 +
               ((C245 * C750 + C79307 * C974) * C93 +
                (C245 * C758 + C79307 * C982) * C81 + C1007 * C95 +
                C1008 * C82) *
                   C79308 * C79027 * C79259) *
                  C745 +
              ((C1006 * C93 + C1005 * C81 + C1009 * C95 + C1010 * C82) *
                   C79308 * C79027 * C79285 -
               (C277 * C82 + C278 * C95 + C276 * C81 + C275 * C93) * C79308 *
                   C79027 * C79300 -
               (C1011 * C82 + C1012 * C95 + C1008 * C81 + C1007 * C93) *
                   C79308 * C79027 * C79259) *
                  C746 +
              ((C278 * C93 + C277 * C81 + C279 * C95 + C280 * C82) * C79308 *
                   C79027 * C79300 -
               ((C245 * C762 + C79307 * C986) * C82 +
                (C245 * C754 + C79307 * C978) * C95 + C1010 * C81 +
                C1009 * C93) *
                   C79308 * C79027 * C79285 +
               (C1012 * C93 + C1011 * C81 +
                (C245 * C755 + C79307 * C979) * C95 +
                (C245 * C763 + C79307 * C987) * C82) *
                   C79308 * C79027 * C79259) *
                  C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C245 * C96 + C79307 * C246) * C93 +
            (C245 * C102 + C79307 * C252) * C81 + C275 * C95 + C276 * C82) *
               C79308 * C79301 -
           (C1938 * C82 + C1939 * C95 + (C245 * C1690 + C79307 * C1914) * C81 +
            (C245 * C1682 + C79307 * C1906) * C93) *
               C79308 * C79287 +
           ((C245 * C1683 + C79307 * C1907) * C93 +
            (C245 * C1691 + C79307 * C1915) * C81 + C1940 * C95 + C1941 * C82) *
               C79308 * C79262) *
              C79009 * C745 +
          ((C1939 * C93 + C1938 * C81 + C1942 * C95 + C1943 * C82) * C79308 *
               C79287 -
           (C277 * C82 + C278 * C95 + C276 * C81 + C275 * C93) * C79308 *
               C79301 -
           (C1944 * C82 + C1945 * C95 + C1941 * C81 + C1940 * C93) * C79308 *
               C79262) *
              C79009 * C746 +
          ((C278 * C93 + C277 * C81 + C279 * C95 + C280 * C82) * C79308 *
               C79301 -
           ((C245 * C1695 + C79307 * C1919) * C82 +
            (C245 * C1687 + C79307 * C1911) * C95 + C1943 * C81 + C1942 * C93) *
               C79308 * C79287 +
           (C1945 * C93 + C1944 * C81 + (C245 * C1688 + C79307 * C1912) * C95 +
            (C245 * C1696 + C79307 * C1920) * C82) *
               C79308 * C79262) *
              C79009 * C79253)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C245 * C96 + C79307 * C246) * C93 +
            (C245 * C102 + C79307 * C252) * C81 + C275 * C95 + C276 * C82) *
               C79308 * C79027 * C4921 -
           (C1005 * C82 + C1006 * C95 + (C245 * C757 + C79307 * C981) * C81 +
            (C245 * C749 + C79307 * C973) * C93) *
               C79308 * C79027 * C4922 +
           ((C245 * C750 + C79307 * C974) * C93 +
            (C245 * C758 + C79307 * C982) * C81 + C1007 * C95 + C1008 * C82) *
               C79308 * C79027 * C79259) *
              C79297 +
          ((C1006 * C93 + C1005 * C81 + C1009 * C95 + C1010 * C82) * C79308 *
               C79027 * C4922 -
           (C277 * C82 + C278 * C95 + C276 * C81 + C275 * C93) * C79308 *
               C79027 * C4921 -
           (C1011 * C82 + C1012 * C95 + C1008 * C81 + C1007 * C93) * C79308 *
               C79027 * C79259) *
              C79281 +
          ((C278 * C93 + C277 * C81 + C279 * C95 + C280 * C82) * C79308 *
               C79027 * C4921 -
           (C2761 * C82 + C2762 * C95 + C1010 * C81 + C1009 * C93) * C79308 *
               C79027 * C4922 +
           (C1012 * C93 + C1011 * C81 + (C245 * C755 + C79307 * C979) * C95 +
            (C245 * C763 + C79307 * C987) * C82) *
               C79308 * C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C245 * C96 + C79307 * C246) * C93 +
           (C245 * C102 + C79307 * C252) * C81 + C275 * C95 + C276 * C82) *
              C79308 * C79027 * C5561 -
          (C1005 * C82 + C1006 * C95 + (C245 * C757 + C79307 * C981) * C81 +
           (C245 * C749 + C79307 * C973) * C93) *
              C79308 * C79027 * C5562 +
          ((C245 * C750 + C79307 * C974) * C93 +
           (C245 * C758 + C79307 * C982) * C81 + C1007 * C95 + C1008 * C82) *
              C79308 * C79027 * C5563 -
          ((C245 * C5571 + C79307 * C5679) * C82 +
           (C245 * C5567 + C79307 * C5675) * C95 +
           (C245 * C5572 + C79307 * C5680) * C81 +
           (C245 * C5568 + C79307 * C5676) * C93) *
              C79308 * C79027 * C5564 +
          ((C245 * C5569 + C79307 * C5677) * C93 +
           (C245 * C5573 + C79307 * C5681) * C81 +
           (C245 * C5570 + C79307 * C5678) * C95 +
           (C245 * C5574 + C79307 * C5682) * C82) *
              C79308 * C79027 * C5565) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C245 * C96 + C79307 * C246) * C93 +
            (C245 * C102 + C79307 * C252) * C81 + C275 * C95 + C276 * C82) *
               C79308 * C79301 -
           (C1938 * C82 + C1939 * C95 + (C245 * C1690 + C79307 * C1914) * C81 +
            (C245 * C1682 + C79307 * C1906) * C93) *
               C79308 * C79287 +
           ((C245 * C1683 + C79307 * C1907) * C93 +
            (C245 * C1691 + C79307 * C1915) * C81 + C1940 * C95 + C1941 * C82) *
               C79308 * C79262) *
              C4921 +
          (((C245 * C3931 + C79307 * C4165) * C93 +
            (C245 * C3935 + C79307 * C4169) * C81 + C4182 * C95 + C4183 * C82) *
               C79308 * C79287 -
           (C1005 * C82 + C1006 * C95 + (C245 * C757 + C79307 * C981) * C81 +
            (C245 * C749 + C79307 * C973) * C93) *
               C79308 * C79301 -
           ((C245 * C6047 + C79307 * C6231) * C82 +
            (C245 * C6041 + C79307 * C6225) * C95 +
            (C245 * C6048 + C79307 * C6232) * C81 +
            (C245 * C6042 + C79307 * C6226) * C93) *
               C79308 * C79262) *
              C4922 +
          (((C245 * C750 + C79307 * C974) * C93 +
            (C245 * C758 + C79307 * C982) * C81 + C1007 * C95 + C1008 * C82) *
               C79308 * C79301 -
           ((C245 * C6049 + C79307 * C6233) * C82 +
            (C245 * C6043 + C79307 * C6227) * C95 +
            (C245 * C6050 + C79307 * C6234) * C81 +
            (C245 * C6044 + C79307 * C6228) * C93) *
               C79308 * C79287 +
           ((C245 * C6045 + C79307 * C6229) * C93 +
            (C245 * C6051 + C79307 * C6235) * C81 +
            (C245 * C6046 + C79307 * C6230) * C95 +
            (C245 * C6052 + C79307 * C6236) * C82) *
               C79308 * C79262) *
              C79259) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C245 * C96 + C79307 * C246) * C93 +
            (C245 * C102 + C79307 * C252) * C81 + C275 * C95 + C276 * C82) *
               C79308 * C9011 -
           (C1938 * C82 + C1939 * C95 + (C245 * C1690 + C79307 * C1914) * C81 +
            (C245 * C1682 + C79307 * C1906) * C93) *
               C79308 * C9012 +
           ((C245 * C1683 + C79307 * C1907) * C93 +
            (C245 * C1691 + C79307 * C1915) * C81 + C1940 * C95 + C1941 * C82) *
               C79308 * C79262) *
              C79009 * C79297 +
          ((C1939 * C93 + C1938 * C81 + C1942 * C95 + C1943 * C82) * C79308 *
               C9012 -
           (C277 * C82 + C278 * C95 + C276 * C81 + C275 * C93) * C79308 *
               C9011 -
           (C1944 * C82 + C1945 * C95 + C1941 * C81 + C1940 * C93) * C79308 *
               C79262) *
              C79009 * C79281 +
          ((C278 * C93 + C277 * C81 + C279 * C95 + C280 * C82) * C79308 *
               C9011 -
           (C3407 * C82 + C3408 * C95 + C1943 * C81 + C1942 * C93) * C79308 *
               C9012 +
           (C1945 * C93 + C1944 * C81 + (C245 * C1688 + C79307 * C1912) * C95 +
            (C245 * C1696 + C79307 * C1920) * C82) *
               C79308 * C79262) *
              C79009 * C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C245 * C96 + C79307 * C246) * C93 +
            (C245 * C102 + C79307 * C252) * C81 + C275 * C95 + C276 * C82) *
               C79308 * C9011 -
           (C1938 * C82 + C1939 * C95 + (C245 * C1690 + C79307 * C1914) * C81 +
            (C245 * C1682 + C79307 * C1906) * C93) *
               C79308 * C9012 +
           ((C245 * C1683 + C79307 * C1907) * C93 +
            (C245 * C1691 + C79307 * C1915) * C81 + C1940 * C95 + C1941 * C82) *
               C79308 * C79262) *
              C79300 +
          (((C245 * C3931 + C79307 * C4165) * C93 +
            (C245 * C3935 + C79307 * C4169) * C81 + C4182 * C95 + C4183 * C82) *
               C79308 * C9012 -
           (C1005 * C82 + C1006 * C95 + (C245 * C757 + C79307 * C981) * C81 +
            (C245 * C749 + C79307 * C973) * C93) *
               C79308 * C9011 -
           ((C245 * C6047 + C79307 * C6231) * C82 +
            (C245 * C6041 + C79307 * C6225) * C95 +
            (C245 * C6048 + C79307 * C6232) * C81 +
            (C245 * C6042 + C79307 * C6226) * C93) *
               C79308 * C79262) *
              C79285 +
          (((C245 * C750 + C79307 * C974) * C93 +
            (C245 * C758 + C79307 * C982) * C81 + C1007 * C95 + C1008 * C82) *
               C79308 * C9011 -
           (C7693 * C82 + C7694 * C95 + (C245 * C6050 + C79307 * C6234) * C81 +
            (C245 * C6044 + C79307 * C6228) * C93) *
               C79308 * C9012 +
           ((C245 * C6045 + C79307 * C6229) * C93 +
            (C245 * C6051 + C79307 * C6235) * C81 +
            (C245 * C6046 + C79307 * C6230) * C95 +
            (C245 * C6052 + C79307 * C6236) * C82) *
               C79308 * C79262) *
              C79259) *
         C78981) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C245 * C96 + C79307 * C246) * C93 +
           (C245 * C102 + C79307 * C252) * C81 + C275 * C95 + C276 * C82) *
              C79308 * C10314 -
          (C1938 * C82 + C1939 * C95 + (C245 * C1690 + C79307 * C1914) * C81 +
           (C245 * C1682 + C79307 * C1906) * C93) *
              C79308 * C10315 +
          ((C245 * C1683 + C79307 * C1907) * C93 +
           (C245 * C1691 + C79307 * C1915) * C81 + C1940 * C95 + C1941 * C82) *
              C79308 * C10316 -
          ((C245 * C10323 + C79307 * C10431) * C82 +
           (C245 * C10319 + C79307 * C10427) * C95 +
           (C245 * C10324 + C79307 * C10432) * C81 +
           (C245 * C10320 + C79307 * C10428) * C93) *
              C79308 * C10317 +
          ((C245 * C10321 + C79307 * C10429) * C93 +
           (C245 * C10325 + C79307 * C10433) * C81 +
           (C245 * C10322 + C79307 * C10430) * C95 +
           (C245 * C10326 + C79307 * C10434) * C82) *
              C79308 * C10318) *
         C79009 * C78981) /
            (p * q * std::sqrt(p + q));
    d2eeyx[12] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C166 +
               (C93 * C167 + C81 * C324 + C95 * C168 + C82 * C325) * C79308) *
                  C79307 * C79027 * C79009 * C87 -
              ((C95 * C169 + C82 * C326 + C93 * C168 + C81 * C325) * C79308 +
               (C95 * C98 + C82 * C104 + C93 * C97 + C81 * C103) * C166) *
                  C79307 * C79027 * C79009 * C88 +
              ((C93 * C98 + C81 * C104 + C95 * C99 + C82 * C105) * C166 +
               (C93 * C169 + C81 * C326 + C95 * C170 + C82 * C327) * C79308) *
                  C79307 * C79027 * C79009 * C89 -
              ((C95 * C171 + C82 * C328 + C93 * C170 + C81 * C327) * C79308 +
               (C95 * C100 + C82 * C106 + C93 * C99 + C81 * C105) * C166) *
                  C79307 * C79027 * C79009 * C90 +
              ((C93 * C100 + C81 * C106 + C95 * C101 + C82 * C107) * C166 +
               (C93 * C171 + C81 * C328 + C95 * C172 + C82 * C329) * C79308) *
                  C79307 * C79027 * C79009 * C91) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C166 +
                (C93 * C167 + C81 * C324 + C95 * C168 + C82 * C325) * C79308) *
                   C79307 * C79027 * C79300 -
               ((C95 * C858 + C82 * C1086 + C93 * C859 + C81 * C1087) * C79308 +
                (C95 * C748 + C82 * C756 + C93 * C749 + C81 * C757) * C166) *
                   C79307 * C79027 * C79285 +
               ((C93 * C750 + C81 * C758 + C95 * C751 + C82 * C759) * C166 +
                (C93 * C860 + C81 * C1088 + C95 * C861 + C82 * C1089) *
                    C79308) *
                   C79307 * C79027 * C79259) *
                  C745 +
              (((C93 * C748 + C81 * C756 + C95 * C752 + C82 * C760) * C166 +
                (C93 * C858 + C81 * C1086 + C95 * C862 + C82 * C1090) *
                    C79308) *
                   C79307 * C79027 * C79285 -
               ((C95 * C169 + C82 * C326 + C93 * C168 + C81 * C325) * C79308 +
                (C95 * C98 + C82 * C104 + C93 * C97 + C81 * C103) * C166) *
                   C79307 * C79027 * C79300 -
               ((C95 * C863 + C82 * C1091 + C93 * C861 + C81 * C1089) * C79308 +
                (C95 * C753 + C82 * C761 + C93 * C751 + C81 * C759) * C166) *
                   C79307 * C79027 * C79259) *
                  C746 +
              (((C93 * C98 + C81 * C104 + C95 * C99 + C82 * C105) * C166 +
                (C93 * C169 + C81 * C326 + C95 * C170 + C82 * C327) * C79308) *
                   C79307 * C79027 * C79300 -
               ((C95 * C864 + C82 * C1092 + C93 * C862 + C81 * C1090) * C79308 +
                (C95 * C754 + C82 * C762 + C93 * C752 + C81 * C760) * C166) *
                   C79307 * C79027 * C79285 +
               ((C93 * C753 + C81 * C761 + C95 * C755 + C82 * C763) * C166 +
                (C93 * C863 + C81 * C1091 + C95 * C865 + C82 * C1093) *
                    C79308) *
                   C79307 * C79027 * C79259) *
                  C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C166 +
            (C93 * C167 + C81 * C324 + C95 * C168 + C82 * C325) * C79308) *
               C79307 * C79301 -
           ((C95 * C1791 + C82 * C2019 + C93 * C1792 + C81 * C2020) * C79308 +
            (C95 * C1681 + C82 * C1689 + C93 * C1682 + C81 * C1690) * C166) *
               C79307 * C79287 +
           ((C93 * C1683 + C81 * C1691 + C95 * C1684 + C82 * C1692) * C166 +
            (C93 * C1793 + C81 * C2021 + C95 * C1794 + C82 * C2022) * C79308) *
               C79307 * C79262) *
              C79009 * C745 +
          (((C93 * C1681 + C81 * C1689 + C95 * C1685 + C82 * C1693) * C166 +
            (C93 * C1791 + C81 * C2019 + C95 * C1795 + C82 * C2023) * C79308) *
               C79307 * C79287 -
           ((C95 * C169 + C82 * C326 + C93 * C168 + C81 * C325) * C79308 +
            (C95 * C98 + C82 * C104 + C93 * C97 + C81 * C103) * C166) *
               C79307 * C79301 -
           ((C95 * C1796 + C82 * C2024 + C93 * C1794 + C81 * C2022) * C79308 +
            (C95 * C1686 + C82 * C1694 + C93 * C1684 + C81 * C1692) * C166) *
               C79307 * C79262) *
              C79009 * C746 +
          (((C93 * C98 + C81 * C104 + C95 * C99 + C82 * C105) * C166 +
            (C93 * C169 + C81 * C326 + C95 * C170 + C82 * C327) * C79308) *
               C79307 * C79301 -
           ((C95 * C1797 + C82 * C2025 + C93 * C1795 + C81 * C2023) * C79308 +
            (C95 * C1687 + C82 * C1695 + C93 * C1685 + C81 * C1693) * C166) *
               C79307 * C79287 +
           ((C93 * C1686 + C81 * C1694 + C95 * C1688 + C82 * C1696) * C166 +
            (C93 * C1796 + C81 * C2024 + C95 * C1798 + C82 * C2026) * C79308) *
               C79307 * C79262) *
              C79009 * C79253)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C166 +
            (C93 * C167 + C81 * C324 + C95 * C168 + C82 * C325) * C79308) *
               C79307 * C79027 * C4921 -
           ((C95 * C858 + C82 * C1086 + C93 * C859 + C81 * C1087) * C79308 +
            (C95 * C748 + C82 * C756 + C93 * C749 + C81 * C757) * C166) *
               C79307 * C79027 * C4922 +
           ((C93 * C750 + C81 * C758 + C95 * C751 + C82 * C759) * C166 +
            (C93 * C860 + C81 * C1088 + C95 * C861 + C82 * C1089) * C79308) *
               C79307 * C79027 * C79259) *
              C79297 +
          (((C93 * C748 + C81 * C756 + C95 * C752 + C82 * C760) * C166 +
            (C93 * C858 + C81 * C1086 + C95 * C862 + C82 * C1090) * C79308) *
               C79307 * C79027 * C4922 -
           ((C95 * C169 + C82 * C326 + C93 * C168 + C81 * C325) * C79308 +
            (C95 * C98 + C82 * C104 + C93 * C97 + C81 * C103) * C166) *
               C79307 * C79027 * C4921 -
           ((C95 * C863 + C82 * C1091 + C93 * C861 + C81 * C1089) * C79308 +
            (C95 * C753 + C82 * C761 + C93 * C751 + C81 * C759) * C166) *
               C79307 * C79027 * C79259) *
              C79281 +
          (((C93 * C98 + C81 * C104 + C95 * C99 + C82 * C105) * C166 +
            (C93 * C169 + C81 * C326 + C95 * C170 + C82 * C327) * C79308) *
               C79307 * C79027 * C4921 -
           ((C95 * C864 + C82 * C1092 + C93 * C862 + C81 * C1090) * C79308 +
            (C95 * C754 + C82 * C762 + C93 * C752 + C81 * C760) * C166) *
               C79307 * C79027 * C4922 +
           ((C93 * C753 + C81 * C761 + C95 * C755 + C82 * C763) * C166 +
            (C93 * C863 + C81 * C1091 + C95 * C865 + C82 * C1093) * C79308) *
               C79307 * C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C166 +
           (C93 * C167 + C81 * C324 + C95 * C168 + C82 * C325) * C79308) *
              C79307 * C79027 * C5561 -
          ((C95 * C858 + C82 * C1086 + C93 * C859 + C81 * C1087) * C79308 +
           (C95 * C748 + C82 * C756 + C93 * C749 + C81 * C757) * C166) *
              C79307 * C79027 * C5562 +
          ((C93 * C750 + C81 * C758 + C95 * C751 + C82 * C759) * C166 +
           (C93 * C860 + C81 * C1088 + C95 * C861 + C82 * C1089) * C79308) *
              C79307 * C79027 * C5563 -
          ((C95 * C5625 + C82 * C5725 + C93 * C5626 + C81 * C5726) * C79308 +
           (C95 * C5567 + C82 * C5571 + C93 * C5568 + C81 * C5572) * C166) *
              C79307 * C79027 * C5564 +
          ((C93 * C5569 + C81 * C5573 + C95 * C5570 + C82 * C5574) * C166 +
           (C93 * C5627 + C81 * C5727 + C95 * C5628 + C82 * C5728) * C79308) *
              C79307 * C79027 * C5565) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C166 +
            (C93 * C167 + C81 * C324 + C95 * C168 + C82 * C325) * C79308) *
               C79307 * C79301 -
           ((C95 * C1791 + C82 * C2019 + C93 * C1792 + C81 * C2020) * C79308 +
            (C95 * C1681 + C82 * C1689 + C93 * C1682 + C81 * C1690) * C166) *
               C79307 * C79287 +
           ((C93 * C1683 + C81 * C1691 + C95 * C1684 + C82 * C1692) * C166 +
            (C93 * C1793 + C81 * C2021 + C95 * C1794 + C82 * C2022) * C79308) *
               C79307 * C79262) *
              C4921 +
          (((C93 * C3931 + C81 * C3935 + C95 * C3932 + C82 * C3936) * C166 +
            (C93 * C4047 + C81 * C4283 + C95 * C4048 + C82 * C4284) * C79308) *
               C79307 * C79287 -
           ((C95 * C858 + C82 * C1086 + C93 * C859 + C81 * C1087) * C79308 +
            (C95 * C748 + C82 * C756 + C93 * C749 + C81 * C757) * C166) *
               C79307 * C79301 -
           ((C95 * C6139 + C82 * C6311 + C93 * C6140 + C81 * C6312) * C79308 +
            (C95 * C6041 + C82 * C6047 + C93 * C6042 + C81 * C6048) * C166) *
               C79307 * C79262) *
              C4922 +
          (((C93 * C750 + C81 * C758 + C95 * C751 + C82 * C759) * C166 +
            (C93 * C860 + C81 * C1088 + C95 * C861 + C82 * C1089) * C79308) *
               C79307 * C79301 -
           ((C95 * C6141 + C82 * C6313 + C93 * C6142 + C81 * C6314) * C79308 +
            (C95 * C6043 + C82 * C6049 + C93 * C6044 + C81 * C6050) * C166) *
               C79307 * C79287 +
           ((C93 * C6045 + C81 * C6051 + C95 * C6046 + C82 * C6052) * C166 +
            (C93 * C6143 + C81 * C6315 + C95 * C6144 + C82 * C6316) * C79308) *
               C79307 * C79262) *
              C79259) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C166 +
            (C93 * C167 + C81 * C324 + C95 * C168 + C82 * C325) * C79308) *
               C79307 * C9011 -
           ((C95 * C1791 + C82 * C2019 + C93 * C1792 + C81 * C2020) * C79308 +
            (C95 * C1681 + C82 * C1689 + C93 * C1682 + C81 * C1690) * C166) *
               C79307 * C9012 +
           ((C93 * C1683 + C81 * C1691 + C95 * C1684 + C82 * C1692) * C166 +
            (C93 * C1793 + C81 * C2021 + C95 * C1794 + C82 * C2022) * C79308) *
               C79307 * C79262) *
              C79009 * C79297 +
          (((C93 * C1681 + C81 * C1689 + C95 * C1685 + C82 * C1693) * C166 +
            (C93 * C1791 + C81 * C2019 + C95 * C1795 + C82 * C2023) * C79308) *
               C79307 * C9012 -
           ((C95 * C169 + C82 * C326 + C93 * C168 + C81 * C325) * C79308 +
            (C95 * C98 + C82 * C104 + C93 * C97 + C81 * C103) * C166) *
               C79307 * C9011 -
           ((C95 * C1796 + C82 * C2024 + C93 * C1794 + C81 * C2022) * C79308 +
            (C95 * C1686 + C82 * C1694 + C93 * C1684 + C81 * C1692) * C166) *
               C79307 * C79262) *
              C79009 * C79281 +
          (((C93 * C98 + C81 * C104 + C95 * C99 + C82 * C105) * C166 +
            (C93 * C169 + C81 * C326 + C95 * C170 + C82 * C327) * C79308) *
               C79307 * C9011 -
           ((C95 * C1797 + C82 * C2025 + C93 * C1795 + C81 * C2023) * C79308 +
            (C95 * C1687 + C82 * C1695 + C93 * C1685 + C81 * C1693) * C166) *
               C79307 * C9012 +
           ((C93 * C1686 + C81 * C1694 + C95 * C1688 + C82 * C1696) * C166 +
            (C93 * C1796 + C81 * C2024 + C95 * C1798 + C82 * C2026) * C79308) *
               C79307 * C79262) *
              C79009 * C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C166 +
            (C93 * C167 + C81 * C324 + C95 * C168 + C82 * C325) * C79308) *
               C79307 * C9011 -
           ((C95 * C1791 + C82 * C2019 + C93 * C1792 + C81 * C2020) * C79308 +
            (C95 * C1681 + C82 * C1689 + C93 * C1682 + C81 * C1690) * C166) *
               C79307 * C9012 +
           ((C93 * C1683 + C81 * C1691 + C95 * C1684 + C82 * C1692) * C166 +
            (C93 * C1793 + C81 * C2021 + C95 * C1794 + C82 * C2022) * C79308) *
               C79307 * C79262) *
              C79300 +
          (((C93 * C3931 + C81 * C3935 + C95 * C3932 + C82 * C3936) * C166 +
            (C93 * C4047 + C81 * C4283 + C95 * C4048 + C82 * C4284) * C79308) *
               C79307 * C9012 -
           ((C95 * C858 + C82 * C1086 + C93 * C859 + C81 * C1087) * C79308 +
            (C95 * C748 + C82 * C756 + C93 * C749 + C81 * C757) * C166) *
               C79307 * C9011 -
           ((C95 * C6139 + C82 * C6311 + C93 * C6140 + C81 * C6312) * C79308 +
            (C95 * C6041 + C82 * C6047 + C93 * C6042 + C81 * C6048) * C166) *
               C79307 * C79262) *
              C79285 +
          (((C93 * C750 + C81 * C758 + C95 * C751 + C82 * C759) * C166 +
            (C93 * C860 + C81 * C1088 + C95 * C861 + C82 * C1089) * C79308) *
               C79307 * C9011 -
           ((C95 * C6141 + C82 * C6313 + C93 * C6142 + C81 * C6314) * C79308 +
            (C95 * C6043 + C82 * C6049 + C93 * C6044 + C81 * C6050) * C166) *
               C79307 * C9012 +
           ((C93 * C6045 + C81 * C6051 + C95 * C6046 + C82 * C6052) * C166 +
            (C93 * C6143 + C81 * C6315 + C95 * C6144 + C82 * C6316) * C79308) *
               C79307 * C79262) *
              C79259) *
         C78981) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C166 +
           (C93 * C167 + C81 * C324 + C95 * C168 + C82 * C325) * C79308) *
              C79307 * C10314 -
          ((C95 * C1791 + C82 * C2019 + C93 * C1792 + C81 * C2020) * C79308 +
           (C95 * C1681 + C82 * C1689 + C93 * C1682 + C81 * C1690) * C166) *
              C79307 * C10315 +
          ((C93 * C1683 + C81 * C1691 + C95 * C1684 + C82 * C1692) * C166 +
           (C93 * C1793 + C81 * C2021 + C95 * C1794 + C82 * C2022) * C79308) *
              C79307 * C10316 -
          ((C95 * C10377 + C82 * C10477 + C93 * C10378 + C81 * C10478) *
               C79308 +
           (C95 * C10319 + C82 * C10323 + C93 * C10320 + C81 * C10324) * C166) *
              C79307 * C10317 +
          ((C93 * C10321 + C81 * C10325 + C95 * C10322 + C82 * C10326) * C166 +
           (C93 * C10379 + C81 * C10479 + C95 * C10380 + C82 * C10480) *
               C79308) *
              C79307 * C10318) *
         C79009 * C78981) /
            (p * q * std::sqrt(p + q));
    d2eeyy[12] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((C372 * C96 + C380 + C380 + C79308 * C373) * C81 + C402 * C82) *
                  C79307 * C79027 * C79009 * C87 -
              (C403 * C82 + C402 * C81) * C79307 * C79027 * C79009 * C88 +
              (C403 * C81 + C404 * C82) * C79307 * C79027 * C79009 * C89 -
              (C405 * C82 + C404 * C81) * C79307 * C79027 * C79009 * C90 +
              (C405 * C81 + (C372 * C101 + C393 + C393 + C79308 * C378) * C82) *
                  C79307 * C79027 * C79009 * C91) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C372 * C96 + C380 + C380 + C79308 * C373) * C81 + C402 * C82) *
                   C79307 * C79027 * C79300 -
               (C1201 * C82 +
                (C372 * C749 + C1180 + C1180 + C79308 * C1169) * C81) *
                   C79307 * C79027 * C79285 +
               ((C372 * C750 + C1181 + C1181 + C79308 * C1170) * C81 +
                C1202 * C82) *
                   C79307 * C79027 * C79259) *
                  C745 +
              ((C1201 * C81 + C1203 * C82) * C79307 * C79027 * C79285 -
               (C403 * C82 + C402 * C81) * C79307 * C79027 * C79300 -
               (C1204 * C82 + C1202 * C81) * C79307 * C79027 * C79259) *
                  C746 +
              ((C403 * C81 + C404 * C82) * C79307 * C79027 * C79300 -
               ((C372 * C754 + C1191 + C1191 + C79308 * C1174) * C82 +
                C1203 * C81) *
                   C79307 * C79027 * C79285 +
               (C1204 * C81 +
                (C372 * C755 + C1192 + C1192 + C79308 * C1175) * C82) *
                   C79307 * C79027 * C79259) *
                  C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C372 * C96 + C380 + C380 + C79308 * C373) * C81 + C402 * C82) *
               C79307 * C79301 -
           (C2134 * C82 +
            (C372 * C1682 + C2113 + C2113 + C79308 * C2102) * C81) *
               C79307 * C79287 +
           ((C372 * C1683 + C2114 + C2114 + C79308 * C2103) * C81 +
            C2135 * C82) *
               C79307 * C79262) *
              C79009 * C745 +
          ((C2134 * C81 + C2136 * C82) * C79307 * C79287 -
           (C403 * C82 + C402 * C81) * C79307 * C79301 -
           (C2137 * C82 + C2135 * C81) * C79307 * C79262) *
              C79009 * C746 +
          ((C403 * C81 + C404 * C82) * C79307 * C79301 -
           ((C372 * C1687 + C2124 + C2124 + C79308 * C2107) * C82 +
            C2136 * C81) *
               C79307 * C79287 +
           (C2137 * C81 +
            (C372 * C1688 + C2125 + C2125 + C79308 * C2108) * C82) *
               C79307 * C79262) *
              C79009 * C79253)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C372 * C96 + C380 + C380 + C79308 * C373) * C81 + C402 * C82) *
               C79307 * C79027 * C4921 -
           (C1201 * C82 +
            (C372 * C749 + C1180 + C1180 + C79308 * C1169) * C81) *
               C79307 * C79027 * C4922 +
           ((C372 * C750 + C1181 + C1181 + C79308 * C1170) * C81 +
            C1202 * C82) *
               C79307 * C79027 * C79259) *
              C79297 +
          ((C1201 * C81 + C1203 * C82) * C79307 * C79027 * C4922 -
           (C403 * C82 + C402 * C81) * C79307 * C79027 * C4921 -
           (C1204 * C82 + C1202 * C81) * C79307 * C79027 * C79259) *
              C79281 +
          ((C403 * C81 + C404 * C82) * C79307 * C79027 * C4921 -
           (C2902 * C82 + C1203 * C81) * C79307 * C79027 * C4922 +
           (C1204 * C81 +
            (C372 * C755 + C1192 + C1192 + C79308 * C1175) * C82) *
               C79307 * C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C372 * C96 + C380 + C380 + C79308 * C373) * C81 + C402 * C82) *
              C79307 * C79027 * C5561 -
          (C1201 * C82 + (C372 * C749 + C1180 + C1180 + C79308 * C1169) * C81) *
              C79307 * C79027 * C5562 +
          ((C372 * C750 + C1181 + C1181 + C79308 * C1170) * C81 + C1202 * C82) *
              C79307 * C79027 * C5563 -
          ((C372 * C5567 + C5776 + C5776 + C79308 * C5771) * C82 +
           (C372 * C5568 + C5777 + C5777 + C79308 * C5772) * C81) *
              C79307 * C79027 * C5564 +
          ((C372 * C5569 + C5778 + C5778 + C79308 * C5773) * C81 +
           (C372 * C5570 + C5779 + C5779 + C79308 * C5774) * C82) *
              C79307 * C79027 * C5565) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C372 * C96 + C380 + C380 + C79308 * C373) * C81 + C402 * C82) *
               C79307 * C79301 -
           (C2134 * C82 +
            (C372 * C1682 + C2113 + C2113 + C79308 * C2102) * C81) *
               C79307 * C79287 +
           ((C372 * C1683 + C2114 + C2114 + C79308 * C2103) * C81 +
            C2135 * C82) *
               C79307 * C79262) *
              C4921 +
          (((C372 * C3931 + C4390 + C4390 + C79308 * C4385) * C81 +
            C4402 * C82) *
               C79307 * C79287 -
           (C1201 * C82 +
            (C372 * C749 + C1180 + C1180 + C79308 * C1169) * C81) *
               C79307 * C79301 -
           ((C372 * C6041 + C6398 + C6398 + C79308 * C6391) * C82 +
            (C372 * C6042 + C6399 + C6399 + C79308 * C6392) * C81) *
               C79307 * C79262) *
              C4922 +
          (((C372 * C750 + C1181 + C1181 + C79308 * C1170) * C81 +
            C1202 * C82) *
               C79307 * C79301 -
           ((C372 * C6043 + C6400 + C6400 + C79308 * C6393) * C82 +
            (C372 * C6044 + C6401 + C6401 + C79308 * C6394) * C81) *
               C79307 * C79287 +
           ((C372 * C6045 + C6402 + C6402 + C79308 * C6395) * C81 +
            (C372 * C6046 + C6403 + C6403 + C79308 * C6396) * C82) *
               C79307 * C79262) *
              C79259) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C372 * C96 + C380 + C380 + C79308 * C373) * C81 + C402 * C82) *
               C79307 * C9011 -
           (C2134 * C82 +
            (C372 * C1682 + C2113 + C2113 + C79308 * C2102) * C81) *
               C79307 * C9012 +
           ((C372 * C1683 + C2114 + C2114 + C79308 * C2103) * C81 +
            C2135 * C82) *
               C79307 * C79262) *
              C79009 * C79297 +
          ((C2134 * C81 + C2136 * C82) * C79307 * C9012 -
           (C403 * C82 + C402 * C81) * C79307 * C9011 -
           (C2137 * C82 + C2135 * C81) * C79307 * C79262) *
              C79009 * C79281 +
          ((C403 * C81 + C404 * C82) * C79307 * C9011 -
           (C3548 * C82 + C2136 * C81) * C79307 * C9012 +
           (C2137 * C81 +
            (C372 * C1688 + C2125 + C2125 + C79308 * C2108) * C82) *
               C79307 * C79262) *
              C79009 * C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C372 * C96 + C380 + C380 + C79308 * C373) * C81 + C402 * C82) *
               C79307 * C9011 -
           (C2134 * C82 +
            (C372 * C1682 + C2113 + C2113 + C79308 * C2102) * C81) *
               C79307 * C9012 +
           ((C372 * C1683 + C2114 + C2114 + C79308 * C2103) * C81 +
            C2135 * C82) *
               C79307 * C79262) *
              C79300 +
          (((C372 * C3931 + C4390 + C4390 + C79308 * C4385) * C81 +
            C4402 * C82) *
               C79307 * C9012 -
           (C1201 * C82 +
            (C372 * C749 + C1180 + C1180 + C79308 * C1169) * C81) *
               C79307 * C9011 -
           ((C372 * C6041 + C6398 + C6398 + C79308 * C6391) * C82 +
            (C372 * C6042 + C6399 + C6399 + C79308 * C6392) * C81) *
               C79307 * C79262) *
              C79285 +
          (((C372 * C750 + C1181 + C1181 + C79308 * C1170) * C81 +
            C1202 * C82) *
               C79307 * C9011 -
           (C7898 * C82 +
            (C372 * C6044 + C6401 + C6401 + C79308 * C6394) * C81) *
               C79307 * C9012 +
           ((C372 * C6045 + C6402 + C6402 + C79308 * C6395) * C81 +
            (C372 * C6046 + C6403 + C6403 + C79308 * C6396) * C82) *
               C79307 * C79262) *
              C79259) *
         C78981) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C372 * C96 + C380 + C380 + C79308 * C373) * C81 + C402 * C82) *
              C79307 * C10314 -
          (C2134 * C82 +
           (C372 * C1682 + C2113 + C2113 + C79308 * C2102) * C81) *
              C79307 * C10315 +
          ((C372 * C1683 + C2114 + C2114 + C79308 * C2103) * C81 +
           C2135 * C82) *
              C79307 * C10316 -
          ((C372 * C10319 + C10528 + C10528 + C79308 * C10523) * C82 +
           (C372 * C10320 + C10529 + C10529 + C79308 * C10524) * C81) *
              C79307 * C10317 +
          ((C372 * C10321 + C10530 + C10530 + C79308 * C10525) * C81 +
           (C372 * C10322 + C10531 + C10531 + C79308 * C10526) * C82) *
              C79307 * C10318) *
         C79009 * C78981) /
            (p * q * std::sqrt(p + q));
    d2eeyz[12] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C245 * C96 + C79307 * C246) * C166 +
                (C245 * C167 + C79307 * C447) * C79308) *
                   C81 +
               (C454 + C470) * C82) *
                  C79027 * C79009 * C87 -
              ((C471 + C459) * C82 + (C470 + C454) * C81) * C79027 * C79009 *
                  C88 +
              ((C459 + C471) * C81 + (C460 + C472) * C82) * C79027 * C79009 *
                  C89 -
              ((C473 + C465) * C82 + (C472 + C460) * C81) * C79027 * C79009 *
                  C90 +
              ((C465 + C473) * C81 + ((C245 * C101 + C79307 * C251) * C166 +
                                      (C245 * C172 + C79307 * C452) * C79308) *
                                         C82) *
                  C79027 * C79009 * C91) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C245 * C96 + C79307 * C246) * C166 +
                 (C245 * C167 + C79307 * C447) * C79308) *
                    C81 +
                (C454 + C470) * C82) *
                   C79027 * C79300 -
               ((C1303 + C1289) * C82 +
                ((C245 * C859 + C79307 * C1279) * C79308 +
                 (C245 * C749 + C79307 * C973) * C166) *
                    C81) *
                   C79027 * C79285 +
               (((C245 * C750 + C79307 * C974) * C166 +
                 (C245 * C860 + C79307 * C1280) * C79308) *
                    C81 +
                (C1290 + C1304) * C82) *
                   C79027 * C79259) *
                  C745 +
              (((C1289 + C1303) * C81 + (C1293 + C1305) * C82) * C79027 *
                   C79285 -
               ((C471 + C459) * C82 + (C470 + C454) * C81) * C79027 * C79300 -
               ((C1306 + C1298) * C82 + (C1304 + C1290) * C81) * C79027 *
                   C79259) *
                  C746 +
              (((C459 + C471) * C81 + (C460 + C472) * C82) * C79027 * C79300 -
               (((C245 * C864 + C79307 * C1284) * C79308 +
                 (C245 * C754 + C79307 * C978) * C166) *
                    C82 +
                (C1305 + C1293) * C81) *
                   C79027 * C79285 +
               ((C1298 + C1306) * C81 +
                ((C245 * C755 + C79307 * C979) * C166 +
                 (C245 * C865 + C79307 * C1285) * C79308) *
                    C82) *
                   C79027 * C79259) *
                  C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C245 * C96 + C79307 * C246) * C166 +
             (C245 * C167 + C79307 * C447) * C79308) *
                C81 +
            (C454 + C470) * C82) *
               C79301 -
           ((C2236 + C2222) * C82 + ((C245 * C1792 + C79307 * C2212) * C79308 +
                                     (C245 * C1682 + C79307 * C1906) * C166) *
                                        C81) *
               C79287 +
           (((C245 * C1683 + C79307 * C1907) * C166 +
             (C245 * C1793 + C79307 * C2213) * C79308) *
                C81 +
            (C2223 + C2237) * C82) *
               C79262) *
              C79009 * C745 +
          (((C2222 + C2236) * C81 + (C2226 + C2238) * C82) * C79287 -
           ((C471 + C459) * C82 + (C470 + C454) * C81) * C79301 -
           ((C2239 + C2231) * C82 + (C2237 + C2223) * C81) * C79262) *
              C79009 * C746 +
          (((C459 + C471) * C81 + (C460 + C472) * C82) * C79301 -
           (((C245 * C1797 + C79307 * C2217) * C79308 +
             (C245 * C1687 + C79307 * C1911) * C166) *
                C82 +
            (C2238 + C2226) * C81) *
               C79287 +
           ((C2231 + C2239) * C81 + ((C245 * C1688 + C79307 * C1912) * C166 +
                                     (C245 * C1798 + C79307 * C2218) * C79308) *
                                        C82) *
               C79262) *
              C79009 * C79253)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C245 * C96 + C79307 * C246) * C166 +
             (C245 * C167 + C79307 * C447) * C79308) *
                C81 +
            (C454 + C470) * C82) *
               C79027 * C4921 -
           ((C1303 + C1289) * C82 + ((C245 * C859 + C79307 * C1279) * C79308 +
                                     (C245 * C749 + C79307 * C973) * C166) *
                                        C81) *
               C79027 * C4922 +
           (((C245 * C750 + C79307 * C974) * C166 +
             (C245 * C860 + C79307 * C1280) * C79308) *
                C81 +
            (C1290 + C1304) * C82) *
               C79027 * C79259) *
              C79297 +
          (((C1289 + C1303) * C81 + (C1293 + C1305) * C82) * C79027 * C4922 -
           ((C471 + C459) * C82 + (C470 + C454) * C81) * C79027 * C4921 -
           ((C1306 + C1298) * C82 + (C1304 + C1290) * C81) * C79027 * C79259) *
              C79281 +
          (((C459 + C471) * C81 + (C460 + C472) * C82) * C79027 * C4921 -
           ((C2974 + C2972) * C82 + (C1305 + C1293) * C81) * C79027 * C4922 +
           ((C1298 + C1306) * C81 + ((C245 * C755 + C79307 * C979) * C166 +
                                     (C245 * C865 + C79307 * C1285) * C79308) *
                                        C82) *
               C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C245 * C96 + C79307 * C246) * C166 +
            (C245 * C167 + C79307 * C447) * C79308) *
               C81 +
           (C454 + C470) * C82) *
              C79027 * C5561 -
          ((C1303 + C1289) * C82 + ((C245 * C859 + C79307 * C1279) * C79308 +
                                    (C245 * C749 + C79307 * C973) * C166) *
                                       C81) *
              C79027 * C5562 +
          (((C245 * C750 + C79307 * C974) * C166 +
            (C245 * C860 + C79307 * C1280) * C79308) *
               C81 +
           (C1290 + C1304) * C82) *
              C79027 * C5563 -
          (((C245 * C5625 + C79307 * C5821) * C79308 +
            (C245 * C5567 + C79307 * C5675) * C166) *
               C82 +
           ((C245 * C5626 + C79307 * C5822) * C79308 +
            (C245 * C5568 + C79307 * C5676) * C166) *
               C81) *
              C79027 * C5564 +
          (((C245 * C5569 + C79307 * C5677) * C166 +
            (C245 * C5627 + C79307 * C5823) * C79308) *
               C81 +
           ((C245 * C5570 + C79307 * C5678) * C166 +
            (C245 * C5628 + C79307 * C5824) * C79308) *
               C82) *
              C79027 * C5565) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C245 * C96 + C79307 * C246) * C166 +
             (C245 * C167 + C79307 * C447) * C79308) *
                C81 +
            (C454 + C470) * C82) *
               C79301 -
           ((C2236 + C2222) * C82 + ((C245 * C1792 + C79307 * C2212) * C79308 +
                                     (C245 * C1682 + C79307 * C1906) * C166) *
                                        C81) *
               C79287 +
           (((C245 * C1683 + C79307 * C1907) * C166 +
             (C245 * C1793 + C79307 * C2213) * C79308) *
                C81 +
            (C2223 + C2237) * C82) *
               C79262) *
              C4921 +
          ((((C245 * C3931 + C79307 * C4165) * C166 +
             (C245 * C4047 + C79307 * C4501) * C79308) *
                C81 +
            (C4506 + C4514) * C82) *
               C79287 -
           ((C1303 + C1289) * C82 + ((C245 * C859 + C79307 * C1279) * C79308 +
                                     (C245 * C749 + C79307 * C973) * C166) *
                                        C81) *
               C79301 -
           (((C245 * C6139 + C79307 * C6477) * C79308 +
             (C245 * C6041 + C79307 * C6225) * C166) *
                C82 +
            ((C245 * C6140 + C79307 * C6478) * C79308 +
             (C245 * C6042 + C79307 * C6226) * C166) *
                C81) *
               C79262) *
              C4922 +
          ((((C245 * C750 + C79307 * C974) * C166 +
             (C245 * C860 + C79307 * C1280) * C79308) *
                C81 +
            (C1290 + C1304) * C82) *
               C79301 -
           (((C245 * C6141 + C79307 * C6479) * C79308 +
             (C245 * C6043 + C79307 * C6227) * C166) *
                C82 +
            ((C245 * C6142 + C79307 * C6480) * C79308 +
             (C245 * C6044 + C79307 * C6228) * C166) *
                C81) *
               C79287 +
           (((C245 * C6045 + C79307 * C6229) * C166 +
             (C245 * C6143 + C79307 * C6481) * C79308) *
                C81 +
            ((C245 * C6046 + C79307 * C6230) * C166 +
             (C245 * C6144 + C79307 * C6482) * C79308) *
                C82) *
               C79262) *
              C79259) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C245 * C96 + C79307 * C246) * C166 +
             (C245 * C167 + C79307 * C447) * C79308) *
                C81 +
            (C454 + C470) * C82) *
               C9011 -
           ((C2236 + C2222) * C82 + ((C245 * C1792 + C79307 * C2212) * C79308 +
                                     (C245 * C1682 + C79307 * C1906) * C166) *
                                        C81) *
               C9012 +
           (((C245 * C1683 + C79307 * C1907) * C166 +
             (C245 * C1793 + C79307 * C2213) * C79308) *
                C81 +
            (C2223 + C2237) * C82) *
               C79262) *
              C79009 * C79297 +
          (((C2222 + C2236) * C81 + (C2226 + C2238) * C82) * C9012 -
           ((C471 + C459) * C82 + (C470 + C454) * C81) * C9011 -
           ((C2239 + C2231) * C82 + (C2237 + C2223) * C81) * C79262) *
              C79009 * C79281 +
          (((C459 + C471) * C81 + (C460 + C472) * C82) * C9011 -
           ((C3620 + C3618) * C82 + (C2238 + C2226) * C81) * C9012 +
           ((C2231 + C2239) * C81 + ((C245 * C1688 + C79307 * C1912) * C166 +
                                     (C245 * C1798 + C79307 * C2218) * C79308) *
                                        C82) *
               C79262) *
              C79009 * C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C245 * C96 + C79307 * C246) * C166 +
             (C245 * C167 + C79307 * C447) * C79308) *
                C81 +
            (C454 + C470) * C82) *
               C9011 -
           ((C2236 + C2222) * C82 + ((C245 * C1792 + C79307 * C2212) * C79308 +
                                     (C245 * C1682 + C79307 * C1906) * C166) *
                                        C81) *
               C9012 +
           (((C245 * C1683 + C79307 * C1907) * C166 +
             (C245 * C1793 + C79307 * C2213) * C79308) *
                C81 +
            (C2223 + C2237) * C82) *
               C79262) *
              C79300 +
          ((((C245 * C3931 + C79307 * C4165) * C166 +
             (C245 * C4047 + C79307 * C4501) * C79308) *
                C81 +
            (C4506 + C4514) * C82) *
               C9012 -
           ((C1303 + C1289) * C82 + ((C245 * C859 + C79307 * C1279) * C79308 +
                                     (C245 * C749 + C79307 * C973) * C166) *
                                        C81) *
               C9011 -
           (((C245 * C6139 + C79307 * C6477) * C79308 +
             (C245 * C6041 + C79307 * C6225) * C166) *
                C82 +
            ((C245 * C6140 + C79307 * C6478) * C79308 +
             (C245 * C6042 + C79307 * C6226) * C166) *
                C81) *
               C79262) *
              C79285 +
          ((((C245 * C750 + C79307 * C974) * C166 +
             (C245 * C860 + C79307 * C1280) * C79308) *
                C81 +
            (C1290 + C1304) * C82) *
               C9011 -
           ((C8002 + C8000) * C82 + ((C245 * C6142 + C79307 * C6480) * C79308 +
                                     (C245 * C6044 + C79307 * C6228) * C166) *
                                        C81) *
               C9012 +
           (((C245 * C6045 + C79307 * C6229) * C166 +
             (C245 * C6143 + C79307 * C6481) * C79308) *
                C81 +
            ((C245 * C6046 + C79307 * C6230) * C166 +
             (C245 * C6144 + C79307 * C6482) * C79308) *
                C82) *
               C79262) *
              C79259) *
         C78981) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C245 * C96 + C79307 * C246) * C166 +
            (C245 * C167 + C79307 * C447) * C79308) *
               C81 +
           (C454 + C470) * C82) *
              C10314 -
          ((C2236 + C2222) * C82 + ((C245 * C1792 + C79307 * C2212) * C79308 +
                                    (C245 * C1682 + C79307 * C1906) * C166) *
                                       C81) *
              C10315 +
          (((C245 * C1683 + C79307 * C1907) * C166 +
            (C245 * C1793 + C79307 * C2213) * C79308) *
               C81 +
           (C2223 + C2237) * C82) *
              C10316 -
          (((C245 * C10377 + C79307 * C10573) * C79308 +
            (C245 * C10319 + C79307 * C10427) * C166) *
               C82 +
           ((C245 * C10378 + C79307 * C10574) * C79308 +
            (C245 * C10320 + C79307 * C10428) * C166) *
               C81) *
              C10317 +
          (((C245 * C10321 + C79307 * C10429) * C166 +
            (C245 * C10379 + C79307 * C10575) * C79308) *
               C81 +
           ((C245 * C10322 + C79307 * C10430) * C166 +
            (C245 * C10380 + C79307 * C10576) * C79308) *
               C82) *
              C10318) *
         C79009 * C78981) /
            (p * q * std::sqrt(p + q));
    d2eezx[12] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C245 +
               (C93 * C246 + C81 * C515 + C95 * C247 + C82 * C516) * C79307) *
                  C79308 * C79027 * C79009 * C87 -
              ((C95 * C248 + C82 * C517 + C93 * C247 + C81 * C516) * C79307 +
               (C95 * C98 + C82 * C104 + C93 * C97 + C81 * C103) * C245) *
                  C79308 * C79027 * C79009 * C88 +
              ((C93 * C98 + C81 * C104 + C95 * C99 + C82 * C105) * C245 +
               (C93 * C248 + C81 * C517 + C95 * C249 + C82 * C518) * C79307) *
                  C79308 * C79027 * C79009 * C89 -
              ((C95 * C250 + C82 * C519 + C93 * C249 + C81 * C518) * C79307 +
               (C95 * C100 + C82 * C106 + C93 * C99 + C81 * C105) * C245) *
                  C79308 * C79027 * C79009 * C90 +
              ((C93 * C100 + C81 * C106 + C95 * C101 + C82 * C107) * C245 +
               (C93 * C250 + C81 * C519 + C95 * C251 + C82 * C520) * C79307) *
                  C79308 * C79027 * C79009 * C91) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C245 +
                (C93 * C246 + C81 * C515 + C95 * C247 + C82 * C516) * C79307) *
                   C79308 * C79027 * C79300 -
               ((C95 * C972 + C82 * C1380 + C93 * C973 + C81 * C1381) * C79307 +
                (C95 * C748 + C82 * C756 + C93 * C749 + C81 * C757) * C245) *
                   C79308 * C79027 * C79285 +
               ((C93 * C750 + C81 * C758 + C95 * C751 + C82 * C759) * C245 +
                (C93 * C974 + C81 * C1382 + C95 * C975 + C82 * C1383) *
                    C79307) *
                   C79308 * C79027 * C79259) *
                  C745 +
              (((C93 * C748 + C81 * C756 + C95 * C752 + C82 * C760) * C245 +
                (C93 * C972 + C81 * C1380 + C95 * C976 + C82 * C1384) *
                    C79307) *
                   C79308 * C79027 * C79285 -
               ((C95 * C248 + C82 * C517 + C93 * C247 + C81 * C516) * C79307 +
                (C95 * C98 + C82 * C104 + C93 * C97 + C81 * C103) * C245) *
                   C79308 * C79027 * C79300 -
               ((C95 * C977 + C82 * C1385 + C93 * C975 + C81 * C1383) * C79307 +
                (C95 * C753 + C82 * C761 + C93 * C751 + C81 * C759) * C245) *
                   C79308 * C79027 * C79259) *
                  C746 +
              (((C93 * C98 + C81 * C104 + C95 * C99 + C82 * C105) * C245 +
                (C93 * C248 + C81 * C517 + C95 * C249 + C82 * C518) * C79307) *
                   C79308 * C79027 * C79300 -
               ((C95 * C978 + C82 * C1386 + C93 * C976 + C81 * C1384) * C79307 +
                (C95 * C754 + C82 * C762 + C93 * C752 + C81 * C760) * C245) *
                   C79308 * C79027 * C79285 +
               ((C93 * C753 + C81 * C761 + C95 * C755 + C82 * C763) * C245 +
                (C93 * C977 + C81 * C1385 + C95 * C979 + C82 * C1387) *
                    C79307) *
                   C79308 * C79027 * C79259) *
                  C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C245 +
            (C93 * C246 + C81 * C515 + C95 * C247 + C82 * C516) * C79307) *
               C79308 * C79301 -
           ((C95 * C1905 + C82 * C2313 + C93 * C1906 + C81 * C2314) * C79307 +
            (C95 * C1681 + C82 * C1689 + C93 * C1682 + C81 * C1690) * C245) *
               C79308 * C79287 +
           ((C93 * C1683 + C81 * C1691 + C95 * C1684 + C82 * C1692) * C245 +
            (C93 * C1907 + C81 * C2315 + C95 * C1908 + C82 * C2316) * C79307) *
               C79308 * C79262) *
              C79009 * C745 +
          (((C93 * C1681 + C81 * C1689 + C95 * C1685 + C82 * C1693) * C245 +
            (C93 * C1905 + C81 * C2313 + C95 * C1909 + C82 * C2317) * C79307) *
               C79308 * C79287 -
           ((C95 * C248 + C82 * C517 + C93 * C247 + C81 * C516) * C79307 +
            (C95 * C98 + C82 * C104 + C93 * C97 + C81 * C103) * C245) *
               C79308 * C79301 -
           ((C95 * C1910 + C82 * C2318 + C93 * C1908 + C81 * C2316) * C79307 +
            (C95 * C1686 + C82 * C1694 + C93 * C1684 + C81 * C1692) * C245) *
               C79308 * C79262) *
              C79009 * C746 +
          (((C93 * C98 + C81 * C104 + C95 * C99 + C82 * C105) * C245 +
            (C93 * C248 + C81 * C517 + C95 * C249 + C82 * C518) * C79307) *
               C79308 * C79301 -
           ((C95 * C1911 + C82 * C2319 + C93 * C1909 + C81 * C2317) * C79307 +
            (C95 * C1687 + C82 * C1695 + C93 * C1685 + C81 * C1693) * C245) *
               C79308 * C79287 +
           ((C93 * C1686 + C81 * C1694 + C95 * C1688 + C82 * C1696) * C245 +
            (C93 * C1910 + C81 * C2318 + C95 * C1912 + C82 * C2320) * C79307) *
               C79308 * C79262) *
              C79009 * C79253)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C245 +
            (C93 * C246 + C81 * C515 + C95 * C247 + C82 * C516) * C79307) *
               C79308 * C79027 * C4921 -
           ((C95 * C972 + C82 * C1380 + C93 * C973 + C81 * C1381) * C79307 +
            (C95 * C748 + C82 * C756 + C93 * C749 + C81 * C757) * C245) *
               C79308 * C79027 * C4922 +
           ((C93 * C750 + C81 * C758 + C95 * C751 + C82 * C759) * C245 +
            (C93 * C974 + C81 * C1382 + C95 * C975 + C82 * C1383) * C79307) *
               C79308 * C79027 * C79259) *
              C79297 +
          (((C93 * C748 + C81 * C756 + C95 * C752 + C82 * C760) * C245 +
            (C93 * C972 + C81 * C1380 + C95 * C976 + C82 * C1384) * C79307) *
               C79308 * C79027 * C4922 -
           ((C95 * C248 + C82 * C517 + C93 * C247 + C81 * C516) * C79307 +
            (C95 * C98 + C82 * C104 + C93 * C97 + C81 * C103) * C245) *
               C79308 * C79027 * C4921 -
           ((C95 * C977 + C82 * C1385 + C93 * C975 + C81 * C1383) * C79307 +
            (C95 * C753 + C82 * C761 + C93 * C751 + C81 * C759) * C245) *
               C79308 * C79027 * C79259) *
              C79281 +
          (((C93 * C98 + C81 * C104 + C95 * C99 + C82 * C105) * C245 +
            (C93 * C248 + C81 * C517 + C95 * C249 + C82 * C518) * C79307) *
               C79308 * C79027 * C4921 -
           ((C95 * C978 + C82 * C1386 + C93 * C976 + C81 * C1384) * C79307 +
            (C95 * C754 + C82 * C762 + C93 * C752 + C81 * C760) * C245) *
               C79308 * C79027 * C4922 +
           ((C93 * C753 + C81 * C761 + C95 * C755 + C82 * C763) * C245 +
            (C93 * C977 + C81 * C1385 + C95 * C979 + C82 * C1387) * C79307) *
               C79308 * C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C245 +
           (C93 * C246 + C81 * C515 + C95 * C247 + C82 * C516) * C79307) *
              C79308 * C79027 * C5561 -
          ((C95 * C972 + C82 * C1380 + C93 * C973 + C81 * C1381) * C79307 +
           (C95 * C748 + C82 * C756 + C93 * C749 + C81 * C757) * C245) *
              C79308 * C79027 * C5562 +
          ((C93 * C750 + C81 * C758 + C95 * C751 + C82 * C759) * C245 +
           (C93 * C974 + C81 * C1382 + C95 * C975 + C82 * C1383) * C79307) *
              C79308 * C79027 * C5563 -
          ((C95 * C5675 + C82 * C5867 + C93 * C5676 + C81 * C5868) * C79307 +
           (C95 * C5567 + C82 * C5571 + C93 * C5568 + C81 * C5572) * C245) *
              C79308 * C79027 * C5564 +
          ((C93 * C5569 + C81 * C5573 + C95 * C5570 + C82 * C5574) * C245 +
           (C93 * C5677 + C81 * C5869 + C95 * C5678 + C82 * C5870) * C79307) *
              C79308 * C79027 * C5565) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C245 +
            (C93 * C246 + C81 * C515 + C95 * C247 + C82 * C516) * C79307) *
               C79308 * C79301 -
           ((C95 * C1905 + C82 * C2313 + C93 * C1906 + C81 * C2314) * C79307 +
            (C95 * C1681 + C82 * C1689 + C93 * C1682 + C81 * C1690) * C245) *
               C79308 * C79287 +
           ((C93 * C1683 + C81 * C1691 + C95 * C1684 + C82 * C1692) * C245 +
            (C93 * C1907 + C81 * C2315 + C95 * C1908 + C82 * C2316) * C79307) *
               C79308 * C79262) *
              C4921 +
          (((C93 * C3931 + C81 * C3935 + C95 * C3932 + C82 * C3936) * C245 +
            (C93 * C4165 + C81 * C4613 + C95 * C4166 + C82 * C4614) * C79307) *
               C79308 * C79287 -
           ((C95 * C972 + C82 * C1380 + C93 * C973 + C81 * C1381) * C79307 +
            (C95 * C748 + C82 * C756 + C93 * C749 + C81 * C757) * C245) *
               C79308 * C79301 -
           ((C95 * C6225 + C82 * C6557 + C93 * C6226 + C81 * C6558) * C79307 +
            (C95 * C6041 + C82 * C6047 + C93 * C6042 + C81 * C6048) * C245) *
               C79308 * C79262) *
              C4922 +
          (((C93 * C750 + C81 * C758 + C95 * C751 + C82 * C759) * C245 +
            (C93 * C974 + C81 * C1382 + C95 * C975 + C82 * C1383) * C79307) *
               C79308 * C79301 -
           ((C95 * C6227 + C82 * C6559 + C93 * C6228 + C81 * C6560) * C79307 +
            (C95 * C6043 + C82 * C6049 + C93 * C6044 + C81 * C6050) * C245) *
               C79308 * C79287 +
           ((C93 * C6045 + C81 * C6051 + C95 * C6046 + C82 * C6052) * C245 +
            (C93 * C6229 + C81 * C6561 + C95 * C6230 + C82 * C6562) * C79307) *
               C79308 * C79262) *
              C79259) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C245 +
            (C93 * C246 + C81 * C515 + C95 * C247 + C82 * C516) * C79307) *
               C79308 * C9011 -
           ((C95 * C1905 + C82 * C2313 + C93 * C1906 + C81 * C2314) * C79307 +
            (C95 * C1681 + C82 * C1689 + C93 * C1682 + C81 * C1690) * C245) *
               C79308 * C9012 +
           ((C93 * C1683 + C81 * C1691 + C95 * C1684 + C82 * C1692) * C245 +
            (C93 * C1907 + C81 * C2315 + C95 * C1908 + C82 * C2316) * C79307) *
               C79308 * C79262) *
              C79009 * C79297 +
          (((C93 * C1681 + C81 * C1689 + C95 * C1685 + C82 * C1693) * C245 +
            (C93 * C1905 + C81 * C2313 + C95 * C1909 + C82 * C2317) * C79307) *
               C79308 * C9012 -
           ((C95 * C248 + C82 * C517 + C93 * C247 + C81 * C516) * C79307 +
            (C95 * C98 + C82 * C104 + C93 * C97 + C81 * C103) * C245) *
               C79308 * C9011 -
           ((C95 * C1910 + C82 * C2318 + C93 * C1908 + C81 * C2316) * C79307 +
            (C95 * C1686 + C82 * C1694 + C93 * C1684 + C81 * C1692) * C245) *
               C79308 * C79262) *
              C79009 * C79281 +
          (((C93 * C98 + C81 * C104 + C95 * C99 + C82 * C105) * C245 +
            (C93 * C248 + C81 * C517 + C95 * C249 + C82 * C518) * C79307) *
               C79308 * C9011 -
           ((C95 * C1911 + C82 * C2319 + C93 * C1909 + C81 * C2317) * C79307 +
            (C95 * C1687 + C82 * C1695 + C93 * C1685 + C81 * C1693) * C245) *
               C79308 * C9012 +
           ((C93 * C1686 + C81 * C1694 + C95 * C1688 + C82 * C1696) * C245 +
            (C93 * C1910 + C81 * C2318 + C95 * C1912 + C82 * C2320) * C79307) *
               C79308 * C79262) *
              C79009 * C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C245 +
            (C93 * C246 + C81 * C515 + C95 * C247 + C82 * C516) * C79307) *
               C79308 * C9011 -
           ((C95 * C1905 + C82 * C2313 + C93 * C1906 + C81 * C2314) * C79307 +
            (C95 * C1681 + C82 * C1689 + C93 * C1682 + C81 * C1690) * C245) *
               C79308 * C9012 +
           ((C93 * C1683 + C81 * C1691 + C95 * C1684 + C82 * C1692) * C245 +
            (C93 * C1907 + C81 * C2315 + C95 * C1908 + C82 * C2316) * C79307) *
               C79308 * C79262) *
              C79300 +
          (((C93 * C3931 + C81 * C3935 + C95 * C3932 + C82 * C3936) * C245 +
            (C93 * C4165 + C81 * C4613 + C95 * C4166 + C82 * C4614) * C79307) *
               C79308 * C9012 -
           ((C95 * C972 + C82 * C1380 + C93 * C973 + C81 * C1381) * C79307 +
            (C95 * C748 + C82 * C756 + C93 * C749 + C81 * C757) * C245) *
               C79308 * C9011 -
           ((C95 * C6225 + C82 * C6557 + C93 * C6226 + C81 * C6558) * C79307 +
            (C95 * C6041 + C82 * C6047 + C93 * C6042 + C81 * C6048) * C245) *
               C79308 * C79262) *
              C79285 +
          (((C93 * C750 + C81 * C758 + C95 * C751 + C82 * C759) * C245 +
            (C93 * C974 + C81 * C1382 + C95 * C975 + C82 * C1383) * C79307) *
               C79308 * C9011 -
           ((C95 * C6227 + C82 * C6559 + C93 * C6228 + C81 * C6560) * C79307 +
            (C95 * C6043 + C82 * C6049 + C93 * C6044 + C81 * C6050) * C245) *
               C79308 * C9012 +
           ((C93 * C6045 + C81 * C6051 + C95 * C6046 + C82 * C6052) * C245 +
            (C93 * C6229 + C81 * C6561 + C95 * C6230 + C82 * C6562) * C79307) *
               C79308 * C79262) *
              C79259) *
         C78981) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C245 +
           (C93 * C246 + C81 * C515 + C95 * C247 + C82 * C516) * C79307) *
              C79308 * C10314 -
          ((C95 * C1905 + C82 * C2313 + C93 * C1906 + C81 * C2314) * C79307 +
           (C95 * C1681 + C82 * C1689 + C93 * C1682 + C81 * C1690) * C245) *
              C79308 * C10315 +
          ((C93 * C1683 + C81 * C1691 + C95 * C1684 + C82 * C1692) * C245 +
           (C93 * C1907 + C81 * C2315 + C95 * C1908 + C82 * C2316) * C79307) *
              C79308 * C10316 -
          ((C95 * C10427 + C82 * C10619 + C93 * C10428 + C81 * C10620) *
               C79307 +
           (C95 * C10319 + C82 * C10323 + C93 * C10320 + C81 * C10324) * C245) *
              C79308 * C10317 +
          ((C93 * C10321 + C81 * C10325 + C95 * C10322 + C82 * C10326) * C245 +
           (C93 * C10429 + C81 * C10621 + C95 * C10430 + C82 * C10622) *
               C79307) *
              C79308 * C10318) *
         C79009 * C78981) /
            (p * q * std::sqrt(p + q));
    d2eezy[12] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C166 * C96 + C79308 * C167) * C245 +
                (C166 * C246 + C79308 * C563) * C79307) *
                   C81 +
               (C570 + C586) * C82) *
                  C79027 * C79009 * C87 -
              ((C587 + C575) * C82 + (C586 + C570) * C81) * C79027 * C79009 *
                  C88 +
              ((C575 + C587) * C81 + (C576 + C588) * C82) * C79027 * C79009 *
                  C89 -
              ((C589 + C581) * C82 + (C588 + C576) * C81) * C79027 * C79009 *
                  C90 +
              ((C581 + C589) * C81 + ((C166 * C101 + C79308 * C172) * C245 +
                                      (C166 * C251 + C79308 * C568) * C79307) *
                                         C82) *
                  C79027 * C79009 * C91) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C166 * C96 + C79308 * C167) * C245 +
                 (C166 * C246 + C79308 * C563) * C79307) *
                    C81 +
                (C570 + C586) * C82) *
                   C79027 * C79300 -
               ((C1487 + C1473) * C82 +
                ((C166 * C973 + C79308 * C1463) * C79307 +
                 (C166 * C749 + C79308 * C859) * C245) *
                    C81) *
                   C79027 * C79285 +
               (((C166 * C750 + C79308 * C860) * C245 +
                 (C166 * C974 + C79308 * C1464) * C79307) *
                    C81 +
                (C1474 + C1488) * C82) *
                   C79027 * C79259) *
                  C745 +
              (((C1473 + C1487) * C81 + (C1477 + C1489) * C82) * C79027 *
                   C79285 -
               ((C587 + C575) * C82 + (C586 + C570) * C81) * C79027 * C79300 -
               ((C1490 + C1482) * C82 + (C1488 + C1474) * C81) * C79027 *
                   C79259) *
                  C746 +
              (((C575 + C587) * C81 + (C576 + C588) * C82) * C79027 * C79300 -
               (((C166 * C978 + C79308 * C1468) * C79307 +
                 (C166 * C754 + C79308 * C864) * C245) *
                    C82 +
                (C1489 + C1477) * C81) *
                   C79027 * C79285 +
               ((C1482 + C1490) * C81 +
                ((C166 * C755 + C79308 * C865) * C245 +
                 (C166 * C979 + C79308 * C1469) * C79307) *
                    C82) *
                   C79027 * C79259) *
                  C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C166 * C96 + C79308 * C167) * C245 +
             (C166 * C246 + C79308 * C563) * C79307) *
                C81 +
            (C570 + C586) * C82) *
               C79301 -
           ((C2420 + C2406) * C82 + ((C166 * C1906 + C79308 * C2396) * C79307 +
                                     (C166 * C1682 + C79308 * C1792) * C245) *
                                        C81) *
               C79287 +
           (((C166 * C1683 + C79308 * C1793) * C245 +
             (C166 * C1907 + C79308 * C2397) * C79307) *
                C81 +
            (C2407 + C2421) * C82) *
               C79262) *
              C79009 * C745 +
          (((C2406 + C2420) * C81 + (C2410 + C2422) * C82) * C79287 -
           ((C587 + C575) * C82 + (C586 + C570) * C81) * C79301 -
           ((C2423 + C2415) * C82 + (C2421 + C2407) * C81) * C79262) *
              C79009 * C746 +
          (((C575 + C587) * C81 + (C576 + C588) * C82) * C79301 -
           (((C166 * C1911 + C79308 * C2401) * C79307 +
             (C166 * C1687 + C79308 * C1797) * C245) *
                C82 +
            (C2422 + C2410) * C81) *
               C79287 +
           ((C2415 + C2423) * C81 + ((C166 * C1688 + C79308 * C1798) * C245 +
                                     (C166 * C1912 + C79308 * C2402) * C79307) *
                                        C82) *
               C79262) *
              C79009 * C79253)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C166 * C96 + C79308 * C167) * C245 +
             (C166 * C246 + C79308 * C563) * C79307) *
                C81 +
            (C570 + C586) * C82) *
               C79027 * C4921 -
           ((C1487 + C1473) * C82 + ((C166 * C973 + C79308 * C1463) * C79307 +
                                     (C166 * C749 + C79308 * C859) * C245) *
                                        C81) *
               C79027 * C4922 +
           (((C166 * C750 + C79308 * C860) * C245 +
             (C166 * C974 + C79308 * C1464) * C79307) *
                C81 +
            (C1474 + C1488) * C82) *
               C79027 * C79259) *
              C79297 +
          (((C1473 + C1487) * C81 + (C1477 + C1489) * C82) * C79027 * C4922 -
           ((C587 + C575) * C82 + (C586 + C570) * C81) * C79027 * C4921 -
           ((C1490 + C1482) * C82 + (C1488 + C1474) * C81) * C79027 * C79259) *
              C79281 +
          (((C575 + C587) * C81 + (C576 + C588) * C82) * C79027 * C4921 -
           ((C3113 + C3111) * C82 + (C1489 + C1477) * C81) * C79027 * C4922 +
           ((C1482 + C1490) * C81 + ((C166 * C755 + C79308 * C865) * C245 +
                                     (C166 * C979 + C79308 * C1469) * C79307) *
                                        C82) *
               C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C166 * C96 + C79308 * C167) * C245 +
            (C166 * C246 + C79308 * C563) * C79307) *
               C81 +
           (C570 + C586) * C82) *
              C79027 * C5561 -
          ((C1487 + C1473) * C82 + ((C166 * C973 + C79308 * C1463) * C79307 +
                                    (C166 * C749 + C79308 * C859) * C245) *
                                       C81) *
              C79027 * C5562 +
          (((C166 * C750 + C79308 * C860) * C245 +
            (C166 * C974 + C79308 * C1464) * C79307) *
               C81 +
           (C1474 + C1488) * C82) *
              C79027 * C5563 -
          (((C166 * C5675 + C79308 * C5913) * C79307 +
            (C166 * C5567 + C79308 * C5625) * C245) *
               C82 +
           ((C166 * C5676 + C79308 * C5914) * C79307 +
            (C166 * C5568 + C79308 * C5626) * C245) *
               C81) *
              C79027 * C5564 +
          (((C166 * C5569 + C79308 * C5627) * C245 +
            (C166 * C5677 + C79308 * C5915) * C79307) *
               C81 +
           ((C166 * C5570 + C79308 * C5628) * C245 +
            (C166 * C5678 + C79308 * C5916) * C79307) *
               C82) *
              C79027 * C5565) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C166 * C96 + C79308 * C167) * C245 +
             (C166 * C246 + C79308 * C563) * C79307) *
                C81 +
            (C570 + C586) * C82) *
               C79301 -
           ((C2420 + C2406) * C82 + ((C166 * C1906 + C79308 * C2396) * C79307 +
                                     (C166 * C1682 + C79308 * C1792) * C245) *
                                        C81) *
               C79287 +
           (((C166 * C1683 + C79308 * C1793) * C245 +
             (C166 * C1907 + C79308 * C2397) * C79307) *
                C81 +
            (C2407 + C2421) * C82) *
               C79262) *
              C4921 +
          ((((C166 * C3931 + C79308 * C4047) * C245 +
             (C166 * C4165 + C79308 * C4715) * C79307) *
                C81 +
            (C4720 + C4728) * C82) *
               C79287 -
           ((C1487 + C1473) * C82 + ((C166 * C973 + C79308 * C1463) * C79307 +
                                     (C166 * C749 + C79308 * C859) * C245) *
                                        C81) *
               C79301 -
           (((C166 * C6225 + C79308 * C6637) * C79307 +
             (C166 * C6041 + C79308 * C6139) * C245) *
                C82 +
            ((C166 * C6226 + C79308 * C6638) * C79307 +
             (C166 * C6042 + C79308 * C6140) * C245) *
                C81) *
               C79262) *
              C4922 +
          ((((C166 * C750 + C79308 * C860) * C245 +
             (C166 * C974 + C79308 * C1464) * C79307) *
                C81 +
            (C1474 + C1488) * C82) *
               C79301 -
           (((C166 * C6227 + C79308 * C6639) * C79307 +
             (C166 * C6043 + C79308 * C6141) * C245) *
                C82 +
            ((C166 * C6228 + C79308 * C6640) * C79307 +
             (C166 * C6044 + C79308 * C6142) * C245) *
                C81) *
               C79287 +
           (((C166 * C6045 + C79308 * C6143) * C245 +
             (C166 * C6229 + C79308 * C6641) * C79307) *
                C81 +
            ((C166 * C6046 + C79308 * C6144) * C245 +
             (C166 * C6230 + C79308 * C6642) * C79307) *
                C82) *
               C79262) *
              C79259) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C166 * C96 + C79308 * C167) * C245 +
             (C166 * C246 + C79308 * C563) * C79307) *
                C81 +
            (C570 + C586) * C82) *
               C9011 -
           ((C2420 + C2406) * C82 + ((C166 * C1906 + C79308 * C2396) * C79307 +
                                     (C166 * C1682 + C79308 * C1792) * C245) *
                                        C81) *
               C9012 +
           (((C166 * C1683 + C79308 * C1793) * C245 +
             (C166 * C1907 + C79308 * C2397) * C79307) *
                C81 +
            (C2407 + C2421) * C82) *
               C79262) *
              C79009 * C79297 +
          (((C2406 + C2420) * C81 + (C2410 + C2422) * C82) * C9012 -
           ((C587 + C575) * C82 + (C586 + C570) * C81) * C9011 -
           ((C2423 + C2415) * C82 + (C2421 + C2407) * C81) * C79262) *
              C79009 * C79281 +
          (((C575 + C587) * C81 + (C576 + C588) * C82) * C9011 -
           ((C3759 + C3757) * C82 + (C2422 + C2410) * C81) * C9012 +
           ((C2415 + C2423) * C81 + ((C166 * C1688 + C79308 * C1798) * C245 +
                                     (C166 * C1912 + C79308 * C2402) * C79307) *
                                        C82) *
               C79262) *
              C79009 * C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C166 * C96 + C79308 * C167) * C245 +
             (C166 * C246 + C79308 * C563) * C79307) *
                C81 +
            (C570 + C586) * C82) *
               C9011 -
           ((C2420 + C2406) * C82 + ((C166 * C1906 + C79308 * C2396) * C79307 +
                                     (C166 * C1682 + C79308 * C1792) * C245) *
                                        C81) *
               C9012 +
           (((C166 * C1683 + C79308 * C1793) * C245 +
             (C166 * C1907 + C79308 * C2397) * C79307) *
                C81 +
            (C2407 + C2421) * C82) *
               C79262) *
              C79300 +
          ((((C166 * C3931 + C79308 * C4047) * C245 +
             (C166 * C4165 + C79308 * C4715) * C79307) *
                C81 +
            (C4720 + C4728) * C82) *
               C9012 -
           ((C1487 + C1473) * C82 + ((C166 * C973 + C79308 * C1463) * C79307 +
                                     (C166 * C749 + C79308 * C859) * C245) *
                                        C81) *
               C9011 -
           (((C166 * C6225 + C79308 * C6637) * C79307 +
             (C166 * C6041 + C79308 * C6139) * C245) *
                C82 +
            ((C166 * C6226 + C79308 * C6638) * C79307 +
             (C166 * C6042 + C79308 * C6140) * C245) *
                C81) *
               C79262) *
              C79285 +
          ((((C166 * C750 + C79308 * C860) * C245 +
             (C166 * C974 + C79308 * C1464) * C79307) *
                C81 +
            (C1474 + C1488) * C82) *
               C9011 -
           ((C8205 + C8203) * C82 + ((C166 * C6228 + C79308 * C6640) * C79307 +
                                     (C166 * C6044 + C79308 * C6142) * C245) *
                                        C81) *
               C9012 +
           (((C166 * C6045 + C79308 * C6143) * C245 +
             (C166 * C6229 + C79308 * C6641) * C79307) *
                C81 +
            ((C166 * C6046 + C79308 * C6144) * C245 +
             (C166 * C6230 + C79308 * C6642) * C79307) *
                C82) *
               C79262) *
              C79259) *
         C78981) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C166 * C96 + C79308 * C167) * C245 +
            (C166 * C246 + C79308 * C563) * C79307) *
               C81 +
           (C570 + C586) * C82) *
              C10314 -
          ((C2420 + C2406) * C82 + ((C166 * C1906 + C79308 * C2396) * C79307 +
                                    (C166 * C1682 + C79308 * C1792) * C245) *
                                       C81) *
              C10315 +
          (((C166 * C1683 + C79308 * C1793) * C245 +
            (C166 * C1907 + C79308 * C2397) * C79307) *
               C81 +
           (C2407 + C2421) * C82) *
              C10316 -
          (((C166 * C10427 + C79308 * C10665) * C79307 +
            (C166 * C10319 + C79308 * C10377) * C245) *
               C82 +
           ((C166 * C10428 + C79308 * C10666) * C79307 +
            (C166 * C10320 + C79308 * C10378) * C245) *
               C81) *
              C10317 +
          (((C166 * C10321 + C79308 * C10379) * C245 +
            (C166 * C10429 + C79308 * C10667) * C79307) *
               C81 +
           ((C166 * C10322 + C79308 * C10380) * C245 +
            (C166 * C10430 + C79308 * C10668) * C79307) *
               C82) *
              C10318) *
         C79009 * C78981) /
            (p * q * std::sqrt(p + q));
    d2eezz[12] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((C631 * C96 + C639 + C639 + C79307 * C632) * C79308 * C81 +
               C665 * C82) *
                  C79027 * C79009 * C87 -
              (C666 * C82 + C665 * C81) * C79027 * C79009 * C88 +
              (C666 * C81 + C667 * C82) * C79027 * C79009 * C89 -
              (C668 * C82 + C667 * C81) * C79027 * C79009 * C90 +
              (C668 * C81 +
               (C631 * C101 + C652 + C652 + C79307 * C637) * C79308 * C82) *
                  C79027 * C79009 * C91) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C631 * C96 + C639 + C639 + C79307 * C632) * C79308 * C81 +
                C665 * C82) *
                   C79027 * C79300 -
               (C1601 * C82 +
                (C631 * C749 + C1576 + C1576 + C79307 * C1565) * C79308 * C81) *
                   C79027 * C79285 +
               ((C631 * C750 + C1577 + C1577 + C79307 * C1566) * C79308 * C81 +
                C1602 * C82) *
                   C79027 * C79259) *
                  C745 +
              ((C1601 * C81 + C1603 * C82) * C79027 * C79285 -
               (C666 * C82 + C665 * C81) * C79027 * C79300 -
               (C1604 * C82 + C1602 * C81) * C79027 * C79259) *
                  C746 +
              ((C666 * C81 + C667 * C82) * C79027 * C79300 -
               ((C631 * C754 + C1587 + C1587 + C79307 * C1570) * C79308 * C82 +
                C1603 * C81) *
                   C79027 * C79285 +
               (C1604 * C81 +
                (C631 * C755 + C1588 + C1588 + C79307 * C1571) * C79308 * C82) *
                   C79027 * C79259) *
                  C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C631 * C96 + C639 + C639 + C79307 * C632) * C79308 * C81 +
            C665 * C82) *
               C79301 -
           (C2534 * C82 +
            (C631 * C1682 + C2509 + C2509 + C79307 * C2498) * C79308 * C81) *
               C79287 +
           ((C631 * C1683 + C2510 + C2510 + C79307 * C2499) * C79308 * C81 +
            C2535 * C82) *
               C79262) *
              C79009 * C745 +
          ((C2534 * C81 + C2536 * C82) * C79287 -
           (C666 * C82 + C665 * C81) * C79301 -
           (C2537 * C82 + C2535 * C81) * C79262) *
              C79009 * C746 +
          ((C666 * C81 + C667 * C82) * C79301 -
           ((C631 * C1687 + C2520 + C2520 + C79307 * C2503) * C79308 * C82 +
            C2536 * C81) *
               C79287 +
           (C2537 * C81 +
            (C631 * C1688 + C2521 + C2521 + C79307 * C2504) * C79308 * C82) *
               C79262) *
              C79009 * C79253)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C631 * C96 + C639 + C639 + C79307 * C632) * C79308 * C81 +
            C665 * C82) *
               C79027 * C4921 -
           (C1601 * C82 +
            (C631 * C749 + C1576 + C1576 + C79307 * C1565) * C79308 * C81) *
               C79027 * C4922 +
           ((C631 * C750 + C1577 + C1577 + C79307 * C1566) * C79308 * C81 +
            C1602 * C82) *
               C79027 * C79259) *
              C79297 +
          ((C1601 * C81 + C1603 * C82) * C79027 * C4922 -
           (C666 * C82 + C665 * C81) * C79027 * C4921 -
           (C1604 * C82 + C1602 * C81) * C79027 * C79259) *
              C79281 +
          ((C666 * C81 + C667 * C82) * C79027 * C4921 -
           (C3187 * C82 + C1603 * C81) * C79027 * C4922 +
           (C1604 * C81 +
            (C631 * C755 + C1588 + C1588 + C79307 * C1571) * C79308 * C82) *
               C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C631 * C96 + C639 + C639 + C79307 * C632) * C79308 * C81 +
           C665 * C82) *
              C79027 * C5561 -
          (C1601 * C82 +
           (C631 * C749 + C1576 + C1576 + C79307 * C1565) * C79308 * C81) *
              C79027 * C5562 +
          ((C631 * C750 + C1577 + C1577 + C79307 * C1566) * C79308 * C81 +
           C1602 * C82) *
              C79027 * C5563 -
          ((C631 * C5567 + C5964 + C5964 + C79307 * C5959) * C79308 * C82 +
           (C631 * C5568 + C5965 + C5965 + C79307 * C5960) * C79308 * C81) *
              C79027 * C5564 +
          ((C631 * C5569 + C5966 + C5966 + C79307 * C5961) * C79308 * C81 +
           (C631 * C5570 + C5967 + C5967 + C79307 * C5962) * C79308 * C82) *
              C79027 * C5565) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C631 * C96 + C639 + C639 + C79307 * C632) * C79308 * C81 +
            C665 * C82) *
               C79301 -
           (C2534 * C82 +
            (C631 * C1682 + C2509 + C2509 + C79307 * C2498) * C79308 * C81) *
               C79287 +
           ((C631 * C1683 + C2510 + C2510 + C79307 * C2499) * C79308 * C81 +
            C2535 * C82) *
               C79262) *
              C4921 +
          (((C631 * C3931 + C4832 + C4832 + C79307 * C4827) * C79308 * C81 +
            C4846 * C82) *
               C79287 -
           (C1601 * C82 +
            (C631 * C749 + C1576 + C1576 + C79307 * C1565) * C79308 * C81) *
               C79301 -
           ((C631 * C6041 + C6724 + C6724 + C79307 * C6717) * C79308 * C82 +
            (C631 * C6042 + C6725 + C6725 + C79307 * C6718) * C79308 * C81) *
               C79262) *
              C4922 +
          (((C631 * C750 + C1577 + C1577 + C79307 * C1566) * C79308 * C81 +
            C1602 * C82) *
               C79301 -
           ((C631 * C6043 + C6726 + C6726 + C79307 * C6719) * C79308 * C82 +
            (C631 * C6044 + C6727 + C6727 + C79307 * C6720) * C79308 * C81) *
               C79287 +
           ((C631 * C6045 + C6728 + C6728 + C79307 * C6721) * C79308 * C81 +
            (C631 * C6046 + C6729 + C6729 + C79307 * C6722) * C79308 * C82) *
               C79262) *
              C79259) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C631 * C96 + C639 + C639 + C79307 * C632) * C79308 * C81 +
            C665 * C82) *
               C9011 -
           (C2534 * C82 +
            (C631 * C1682 + C2509 + C2509 + C79307 * C2498) * C79308 * C81) *
               C9012 +
           ((C631 * C1683 + C2510 + C2510 + C79307 * C2499) * C79308 * C81 +
            C2535 * C82) *
               C79262) *
              C79009 * C79297 +
          ((C2534 * C81 + C2536 * C82) * C9012 -
           (C666 * C82 + C665 * C81) * C9011 -
           (C2537 * C82 + C2535 * C81) * C79262) *
              C79009 * C79281 +
          ((C666 * C81 + C667 * C82) * C9011 -
           (C3833 * C82 + C2536 * C81) * C9012 +
           (C2537 * C81 +
            (C631 * C1688 + C2521 + C2521 + C79307 * C2504) * C79308 * C82) *
               C79262) *
              C79009 * C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C631 * C96 + C639 + C639 + C79307 * C632) * C79308 * C81 +
            C665 * C82) *
               C9011 -
           (C2534 * C82 +
            (C631 * C1682 + C2509 + C2509 + C79307 * C2498) * C79308 * C81) *
               C9012 +
           ((C631 * C1683 + C2510 + C2510 + C79307 * C2499) * C79308 * C81 +
            C2535 * C82) *
               C79262) *
              C79300 +
          (((C631 * C3931 + C4832 + C4832 + C79307 * C4827) * C79308 * C81 +
            C4846 * C82) *
               C9012 -
           (C1601 * C82 +
            (C631 * C749 + C1576 + C1576 + C79307 * C1565) * C79308 * C81) *
               C9011 -
           ((C631 * C6041 + C6724 + C6724 + C79307 * C6717) * C79308 * C82 +
            (C631 * C6042 + C6725 + C6725 + C79307 * C6718) * C79308 * C81) *
               C79262) *
              C79285 +
          (((C631 * C750 + C1577 + C1577 + C79307 * C1566) * C79308 * C81 +
            C1602 * C82) *
               C9011 -
           (C8311 * C82 +
            (C631 * C6044 + C6727 + C6727 + C79307 * C6720) * C79308 * C81) *
               C9012 +
           ((C631 * C6045 + C6728 + C6728 + C79307 * C6721) * C79308 * C81 +
            (C631 * C6046 + C6729 + C6729 + C79307 * C6722) * C79308 * C82) *
               C79262) *
              C79259) *
         C78981) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C631 * C96 + C639 + C639 + C79307 * C632) * C79308 * C81 +
           C665 * C82) *
              C10314 -
          (C2534 * C82 +
           (C631 * C1682 + C2509 + C2509 + C79307 * C2498) * C79308 * C81) *
              C10315 +
          ((C631 * C1683 + C2510 + C2510 + C79307 * C2499) * C79308 * C81 +
           C2535 * C82) *
              C10316 -
          ((C631 * C10319 + C10716 + C10716 + C79307 * C10711) * C79308 * C82 +
           (C631 * C10320 + C10717 + C10717 + C79307 * C10712) * C79308 * C81) *
              C10317 +
          ((C631 * C10321 + C10718 + C10718 + C79307 * C10713) * C79308 * C81 +
           (C631 * C10322 + C10719 + C10719 + C79307 * C10714) * C79308 * C82) *
              C10318) *
         C79009 * C78981) /
            (p * q * std::sqrt(p + q));
    d2eexx[13] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C92 * C96 + C115 + C115 + C81 * C108 + C94 * C97 + C116 +
                       C116 + C82 * C109) *
                          C79307 * C79308 * C79230 -
                      (C94 * C1681 + C1706 + C1706 + C82 * C1697 + C92 * C1682 +
                       C1707 + C1707 + C81 * C1698) *
                          C79307 * C79308 * C79114) *
                         C4921 +
                     ((C92 * C3931 + C3944 + C3944 + C81 * C3939 + C94 * C3932 +
                       C3945 + C3945 + C82 * C3940) *
                          C79307 * C79308 * C79114 -
                      (C94 * C748 + C773 + C773 + C82 * C764 + C92 * C749 +
                       C774 + C774 + C81 * C765) *
                          C79307 * C79308 * C79230) *
                         C4922 +
                     ((C92 * C750 + C775 + C775 + C81 * C766 + C94 * C751 +
                       C776 + C776 + C82 * C767) *
                          C79307 * C79308 * C79230 -
                      (C94 * C6043 + C6062 + C6062 + C82 * C6055 + C92 * C6044 +
                       C6063 + C6063 + C81 * C6056) *
                          C79307 * C79308 * C79114) *
                         C79259) *
                        C79215 +
                    (((C92 * C1681 + C1710 + C1710 + C81 * C1697 + C94 * C1685 +
                       C1711 + C1711 + C82 * C1701) *
                          C79307 * C79308 * C79114 -
                      (C94 * C98 + C117 + C117 + C82 * C110 + C92 * C97 + C118 +
                       C118 + C81 * C109) *
                          C79307 * C79308 * C79230) *
                         C4921 +
                     ((C92 * C748 + C777 + C777 + C81 * C764 + C94 * C752 +
                       C778 + C778 + C82 * C768) *
                          C79307 * C79308 * C79230 -
                      (C94 * C3933 + C3946 + C3946 + C82 * C3941 + C92 * C3932 +
                       C3947 + C3947 + C81 * C3940) *
                          C79307 * C79308 * C79114) *
                         C4922 +
                     ((C92 * C6043 + C7481 + C7481 + C81 * C6055 + C94 * C7477 +
                       C7482 + C7482 + C82 * C7479) *
                          C79307 * C79308 * C79114 -
                      (C94 * C753 + C779 + C779 + C82 * C769 + C92 * C751 +
                       C780 + C780 + C81 * C767) *
                          C79307 * C79308 * C79230) *
                         C79259) *
                        C78992)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C92 * C96 + C115 + C115 + C81 * C108 + C94 * C97 + C116 +
                      C116 + C82 * C109) *
                         C79307 * C79308 * C79230 -
                     (C94 * C1681 + C1706 + C1706 + C82 * C1697 + C92 * C1682 +
                      C1707 + C1707 + C81 * C1698) *
                         C79307 * C79308 * C79114) *
                        C79009 * C2605 +
                    ((C92 * C1681 + C1710 + C1710 + C81 * C1697 + C94 * C1685 +
                      C1711 + C1711 + C82 * C1701) *
                         C79307 * C79308 * C79114 -
                     (C94 * C98 + C117 + C117 + C82 * C110 + C92 * C97 + C118 +
                      C118 + C81 * C109) *
                         C79307 * C79308 * C79230) *
                        C79009 * C2606 +
                    ((C92 * C98 + C119 + C119 + C81 * C110 + C94 * C99 + C120 +
                      C120 + C82 * C111) *
                         C79307 * C79308 * C79230 -
                     (C94 * C1687 + C1714 + C1714 + C82 * C1703 + C92 * C1685 +
                      C1715 + C1715 + C81 * C1701) *
                         C79307 * C79308 * C79114) *
                        C79009 * C2607 +
                    ((C92 * C1687 + C3259 + C3259 + C81 * C1703 + C94 * C3255 +
                      C3260 + C3260 + C82 * C3257) *
                         C79307 * C79308 * C79114 -
                     (C94 * C100 + C121 + C121 + C82 * C112 + C92 * C99 + C122 +
                      C122 + C81 * C111) *
                         C79307 * C79308 * C79230) *
                        C79009 * C79263)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((C92 * C96 + C115 + C115 + C81 * C108 + C94 * C97 + C116 +
                      C116 + C82 * C109) *
                         C79307 * C79308 * C11717 -
                     (C94 * C1681 + C1706 + C1706 + C82 * C1697 + C92 * C1682 +
                      C1707 + C1707 + C81 * C1698) *
                         C79307 * C79308 * C11718 +
                     (C92 * C1683 + C1708 + C1708 + C81 * C1699 + C94 * C1684 +
                      C1709 + C1709 + C82 * C1700) *
                         C79307 * C79308 * C11719 -
                     (C94 * C10319 + C10332 + C10332 + C82 * C10327 +
                      C92 * C10320 + C10333 + C10333 + C81 * C10328) *
                         C79307 * C79308 * C79275) *
                        C79009 * C79215 +
                    ((C92 * C1681 + C1710 + C1710 + C81 * C1697 + C94 * C1685 +
                      C1711 + C1711 + C82 * C1701) *
                         C79307 * C79308 * C11718 -
                     (C94 * C98 + C117 + C117 + C82 * C110 + C92 * C97 + C118 +
                      C118 + C81 * C109) *
                         C79307 * C79308 * C11717 -
                     (C94 * C1686 + C1712 + C1712 + C82 * C1702 + C92 * C1684 +
                      C1713 + C1713 + C81 * C1700) *
                         C79307 * C79308 * C11719 +
                     (C92 * C10319 + C11725 + C11725 + C81 * C10327 +
                      C94 * C11721 + C11726 + C11726 + C82 * C11723) *
                         C79307 * C79308 * C79275) *
                        C79009 * C78992)) /
                      (p * q * std::sqrt(p + q));
    d2eexy[13] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C166 * C96 + C79308 * C167) * C93 +
             (C166 * C102 + C79308 * C173) * C81 + C196 * C95 + C197 * C82) *
                C79307 * C79230 -
            (C1824 * C82 + C1825 * C95 + (C166 * C1690 + C79308 * C1800) * C81 +
             (C166 * C1682 + C79308 * C1792) * C93) *
                C79307 * C79114) *
               C4921 +
           (((C166 * C3931 + C79308 * C4047) * C93 +
             (C166 * C3935 + C79308 * C4051) * C81 + C4064 * C95 +
             C4065 * C82) *
                C79307 * C79114 -
            (C891 * C82 + C892 * C95 + (C166 * C757 + C79308 * C867) * C81 +
             (C166 * C749 + C79308 * C859) * C93) *
                C79307 * C79230) *
               C4922 +
           (((C166 * C750 + C79308 * C860) * C93 +
             (C166 * C758 + C79308 * C868) * C81 + C893 * C95 + C894 * C82) *
                C79307 * C79230 -
            (C7587 * C82 + C7588 * C95 + (C166 * C6050 + C79308 * C6148) * C81 +
             (C166 * C6044 + C79308 * C6142) * C93) *
                C79307 * C79114) *
               C79259) *
              C79215 +
          (((C1825 * C93 + C1824 * C81 + C1828 * C95 + C1829 * C82) * C79307 *
                C79114 -
            (C198 * C82 + C199 * C95 + C197 * C81 + C196 * C93) * C79307 *
                C79230) *
               C4921 +
           ((C892 * C93 + C891 * C81 + C895 * C95 + C896 * C82) * C79307 *
                C79230 -
            (C4066 * C82 + C4067 * C95 + C4065 * C81 + C4064 * C93) * C79307 *
                C79114) *
               C4922 +
           ((C7588 * C93 + C7587 * C81 + (C166 * C7477 + C79308 * C7580) * C95 +
             (C166 * C7478 + C79308 * C7581) * C82) *
                C79307 * C79114 -
            (C897 * C82 + C898 * C95 + C894 * C81 + C893 * C93) * C79307 *
                C79230) *
               C79259) *
              C78992)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C166 * C96 + C79308 * C167) * C93 +
            (C166 * C102 + C79308 * C173) * C81 + C196 * C95 + C197 * C82) *
               C79307 * C79230 -
           (C1824 * C82 + C1825 * C95 + (C166 * C1690 + C79308 * C1800) * C81 +
            (C166 * C1682 + C79308 * C1792) * C93) *
               C79307 * C79114) *
              C79009 * C2605 +
          ((C1825 * C93 + C1824 * C81 + C1828 * C95 + C1829 * C82) * C79307 *
               C79114 -
           (C198 * C82 + C199 * C95 + C197 * C81 + C196 * C93) * C79307 *
               C79230) *
              C79009 * C2606 +
          ((C199 * C93 + C198 * C81 + C200 * C95 + C201 * C82) * C79307 *
               C79230 -
           (C3333 * C82 + C3334 * C95 + C1829 * C81 + C1828 * C93) * C79307 *
               C79114) *
              C79009 * C2607 +
          ((C3334 * C93 + C3333 * C81 + (C166 * C3255 + C79308 * C3326) * C95 +
            (C166 * C3256 + C79308 * C3327) * C82) *
               C79307 * C79114 -
           (C202 * C82 + C203 * C95 + C201 * C81 + C200 * C93) * C79307 *
               C79230) *
              C79009 * C79263)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C166 * C96 + C79308 * C167) * C93 +
            (C166 * C102 + C79308 * C173) * C81 + C196 * C95 + C197 * C82) *
               C79307 * C11717 -
           (C1824 * C82 + C1825 * C95 + (C166 * C1690 + C79308 * C1800) * C81 +
            (C166 * C1682 + C79308 * C1792) * C93) *
               C79307 * C11718 +
           ((C166 * C1683 + C79308 * C1793) * C93 +
            (C166 * C1691 + C79308 * C1801) * C81 + C1826 * C95 + C1827 * C82) *
               C79307 * C11719 -
           (C11799 * C82 + C11800 * C95 +
            (C166 * C10324 + C79308 * C10382) * C81 +
            (C166 * C10320 + C79308 * C10378) * C93) *
               C79307 * C79275) *
              C79009 * C79215 +
          ((C1825 * C93 + C1824 * C81 + C1828 * C95 + C1829 * C82) * C79307 *
               C11718 -
           (C198 * C82 + C199 * C95 + C197 * C81 + C196 * C93) * C79307 *
               C11717 -
           (C1830 * C82 + C1831 * C95 + C1827 * C81 + C1826 * C93) * C79307 *
               C11719 +
           (C11800 * C93 + C11799 * C81 +
            (C166 * C11721 + C79308 * C11792) * C95 +
            (C166 * C11722 + C79308 * C11793) * C82) *
               C79307 * C79275) *
              C79009 * C78992)) /
            (p * q * std::sqrt(p + q));
    d2eexz[13] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C245 * C96 + C79307 * C246) * C93 +
             (C245 * C102 + C79307 * C252) * C81 + C275 * C95 + C276 * C82) *
                C79308 * C79230 -
            (C1938 * C82 + C1939 * C95 + (C245 * C1690 + C79307 * C1914) * C81 +
             (C245 * C1682 + C79307 * C1906) * C93) *
                C79308 * C79114) *
               C4921 +
           (((C245 * C3931 + C79307 * C4165) * C93 +
             (C245 * C3935 + C79307 * C4169) * C81 + C4182 * C95 +
             C4183 * C82) *
                C79308 * C79114 -
            (C1005 * C82 + C1006 * C95 + (C245 * C757 + C79307 * C981) * C81 +
             (C245 * C749 + C79307 * C973) * C93) *
                C79308 * C79230) *
               C4922 +
           (((C245 * C750 + C79307 * C974) * C93 +
             (C245 * C758 + C79307 * C982) * C81 + C1007 * C95 + C1008 * C82) *
                C79308 * C79230 -
            (C7693 * C82 + C7694 * C95 + (C245 * C6050 + C79307 * C6234) * C81 +
             (C245 * C6044 + C79307 * C6228) * C93) *
                C79308 * C79114) *
               C79259) *
              C79215 +
          (((C1939 * C93 + C1938 * C81 + C1942 * C95 + C1943 * C82) * C79308 *
                C79114 -
            (C277 * C82 + C278 * C95 + C276 * C81 + C275 * C93) * C79308 *
                C79230) *
               C4921 +
           ((C1006 * C93 + C1005 * C81 + C1009 * C95 + C1010 * C82) * C79308 *
                C79230 -
            (C4184 * C82 + C4185 * C95 + C4183 * C81 + C4182 * C93) * C79308 *
                C79114) *
               C4922 +
           ((C7694 * C93 + C7693 * C81 + (C245 * C7477 + C79307 * C7686) * C95 +
             (C245 * C7478 + C79307 * C7687) * C82) *
                C79308 * C79114 -
            (C1011 * C82 + C1012 * C95 + C1008 * C81 + C1007 * C93) * C79308 *
                C79230) *
               C79259) *
              C78992)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C245 * C96 + C79307 * C246) * C93 +
            (C245 * C102 + C79307 * C252) * C81 + C275 * C95 + C276 * C82) *
               C79308 * C79230 -
           (C1938 * C82 + C1939 * C95 + (C245 * C1690 + C79307 * C1914) * C81 +
            (C245 * C1682 + C79307 * C1906) * C93) *
               C79308 * C79114) *
              C79009 * C2605 +
          ((C1939 * C93 + C1938 * C81 + C1942 * C95 + C1943 * C82) * C79308 *
               C79114 -
           (C277 * C82 + C278 * C95 + C276 * C81 + C275 * C93) * C79308 *
               C79230) *
              C79009 * C2606 +
          ((C278 * C93 + C277 * C81 + C279 * C95 + C280 * C82) * C79308 *
               C79230 -
           (C3407 * C82 + C3408 * C95 + C1943 * C81 + C1942 * C93) * C79308 *
               C79114) *
              C79009 * C2607 +
          ((C3408 * C93 + C3407 * C81 + (C245 * C3255 + C79307 * C3400) * C95 +
            (C245 * C3256 + C79307 * C3401) * C82) *
               C79308 * C79114 -
           (C281 * C82 + C282 * C95 + C280 * C81 + C279 * C93) * C79308 *
               C79230) *
              C79009 * C79263)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C245 * C96 + C79307 * C246) * C93 +
            (C245 * C102 + C79307 * C252) * C81 + C275 * C95 + C276 * C82) *
               C79308 * C11717 -
           (C1938 * C82 + C1939 * C95 + (C245 * C1690 + C79307 * C1914) * C81 +
            (C245 * C1682 + C79307 * C1906) * C93) *
               C79308 * C11718 +
           ((C245 * C1683 + C79307 * C1907) * C93 +
            (C245 * C1691 + C79307 * C1915) * C81 + C1940 * C95 + C1941 * C82) *
               C79308 * C11719 -
           (C11873 * C82 + C11874 * C95 +
            (C245 * C10324 + C79307 * C10432) * C81 +
            (C245 * C10320 + C79307 * C10428) * C93) *
               C79308 * C79275) *
              C79009 * C79215 +
          ((C1939 * C93 + C1938 * C81 + C1942 * C95 + C1943 * C82) * C79308 *
               C11718 -
           (C277 * C82 + C278 * C95 + C276 * C81 + C275 * C93) * C79308 *
               C11717 -
           (C1944 * C82 + C1945 * C95 + C1941 * C81 + C1940 * C93) * C79308 *
               C11719 +
           (C11874 * C93 + C11873 * C81 +
            (C245 * C11721 + C79307 * C11866) * C95 +
            (C245 * C11722 + C79307 * C11867) * C82) *
               C79308 * C79275) *
              C79009 * C78992)) /
            (p * q * std::sqrt(p + q));
    d2eeyx[13] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C166 +
             (C93 * C167 + C81 * C324 + C95 * C168 + C82 * C325) * C79308) *
                C79307 * C79230 -
            ((C95 * C1791 + C82 * C2019 + C93 * C1792 + C81 * C2020) * C79308 +
             (C95 * C1681 + C82 * C1689 + C93 * C1682 + C81 * C1690) * C166) *
                C79307 * C79114) *
               C4921 +
           (((C93 * C3931 + C81 * C3935 + C95 * C3932 + C82 * C3936) * C166 +
             (C93 * C4047 + C81 * C4283 + C95 * C4048 + C82 * C4284) * C79308) *
                C79307 * C79114 -
            ((C95 * C858 + C82 * C1086 + C93 * C859 + C81 * C1087) * C79308 +
             (C95 * C748 + C82 * C756 + C93 * C749 + C81 * C757) * C166) *
                C79307 * C79230) *
               C4922 +
           (((C93 * C750 + C81 * C758 + C95 * C751 + C82 * C759) * C166 +
             (C93 * C860 + C81 * C1088 + C95 * C861 + C82 * C1089) * C79308) *
                C79307 * C79230 -
            ((C95 * C6141 + C82 * C6313 + C93 * C6142 + C81 * C6314) * C79308 +
             (C95 * C6043 + C82 * C6049 + C93 * C6044 + C81 * C6050) * C166) *
                C79307 * C79114) *
               C79259) *
              C79215 +
          ((((C93 * C1681 + C81 * C1689 + C95 * C1685 + C82 * C1693) * C166 +
             (C93 * C1791 + C81 * C2019 + C95 * C1795 + C82 * C2023) * C79308) *
                C79307 * C79114 -
            ((C95 * C169 + C82 * C326 + C93 * C168 + C81 * C325) * C79308 +
             (C95 * C98 + C82 * C104 + C93 * C97 + C81 * C103) * C166) *
                C79307 * C79230) *
               C4921 +
           (((C93 * C748 + C81 * C756 + C95 * C752 + C82 * C760) * C166 +
             (C93 * C858 + C81 * C1086 + C95 * C862 + C82 * C1090) * C79308) *
                C79307 * C79230 -
            ((C95 * C4049 + C82 * C4285 + C93 * C4048 + C81 * C4284) * C79308 +
             (C95 * C3933 + C82 * C3937 + C93 * C3932 + C81 * C3936) * C166) *
                C79307 * C79114) *
               C4922 +
           (((C93 * C6043 + C81 * C6049 + C95 * C7477 + C82 * C7478) * C166 +
             (C93 * C6141 + C81 * C6313 + C95 * C7580 + C82 * C7792) * C79308) *
                C79307 * C79114 -
            ((C95 * C863 + C82 * C1091 + C93 * C861 + C81 * C1089) * C79308 +
             (C95 * C753 + C82 * C761 + C93 * C751 + C81 * C759) * C166) *
                C79307 * C79230) *
               C79259) *
              C78992)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C166 +
            (C93 * C167 + C81 * C324 + C95 * C168 + C82 * C325) * C79308) *
               C79307 * C79230 -
           ((C95 * C1791 + C82 * C2019 + C93 * C1792 + C81 * C2020) * C79308 +
            (C95 * C1681 + C82 * C1689 + C93 * C1682 + C81 * C1690) * C166) *
               C79307 * C79114) *
              C79009 * C2605 +
          (((C93 * C1681 + C81 * C1689 + C95 * C1685 + C82 * C1693) * C166 +
            (C93 * C1791 + C81 * C2019 + C95 * C1795 + C82 * C2023) * C79308) *
               C79307 * C79114 -
           ((C95 * C169 + C82 * C326 + C93 * C168 + C81 * C325) * C79308 +
            (C95 * C98 + C82 * C104 + C93 * C97 + C81 * C103) * C166) *
               C79307 * C79230) *
              C79009 * C2606 +
          (((C93 * C98 + C81 * C104 + C95 * C99 + C82 * C105) * C166 +
            (C93 * C169 + C81 * C326 + C95 * C170 + C82 * C327) * C79308) *
               C79307 * C79230 -
           ((C95 * C1797 + C82 * C2025 + C93 * C1795 + C81 * C2023) * C79308 +
            (C95 * C1687 + C82 * C1695 + C93 * C1685 + C81 * C1693) * C166) *
               C79307 * C79114) *
              C79009 * C2607 +
          (((C93 * C1687 + C81 * C1695 + C95 * C3255 + C82 * C3256) * C166 +
            (C93 * C1797 + C81 * C2025 + C95 * C3326 + C82 * C3474) * C79308) *
               C79307 * C79114 -
           ((C95 * C171 + C82 * C328 + C93 * C170 + C81 * C327) * C79308 +
            (C95 * C100 + C82 * C106 + C93 * C99 + C81 * C105) * C166) *
               C79307 * C79230) *
              C79009 * C79263)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C166 +
            (C93 * C167 + C81 * C324 + C95 * C168 + C82 * C325) * C79308) *
               C79307 * C11717 -
           ((C95 * C1791 + C82 * C2019 + C93 * C1792 + C81 * C2020) * C79308 +
            (C95 * C1681 + C82 * C1689 + C93 * C1682 + C81 * C1690) * C166) *
               C79307 * C11718 +
           ((C93 * C1683 + C81 * C1691 + C95 * C1684 + C82 * C1692) * C166 +
            (C93 * C1793 + C81 * C2021 + C95 * C1794 + C82 * C2022) * C79308) *
               C79307 * C11719 -
           ((C95 * C10377 + C82 * C10477 + C93 * C10378 + C81 * C10478) *
                C79308 +
            (C95 * C10319 + C82 * C10323 + C93 * C10320 + C81 * C10324) *
                C166) *
               C79307 * C79275) *
              C79009 * C79215 +
          (((C93 * C1681 + C81 * C1689 + C95 * C1685 + C82 * C1693) * C166 +
            (C93 * C1791 + C81 * C2019 + C95 * C1795 + C82 * C2023) * C79308) *
               C79307 * C11718 -
           ((C95 * C169 + C82 * C326 + C93 * C168 + C81 * C325) * C79308 +
            (C95 * C98 + C82 * C104 + C93 * C97 + C81 * C103) * C166) *
               C79307 * C11717 -
           ((C95 * C1796 + C82 * C2024 + C93 * C1794 + C81 * C2022) * C79308 +
            (C95 * C1686 + C82 * C1694 + C93 * C1684 + C81 * C1692) * C166) *
               C79307 * C11719 +
           ((C93 * C10319 + C81 * C10323 + C95 * C11721 + C82 * C11722) * C166 +
            (C93 * C10377 + C81 * C10477 + C95 * C11792 + C82 * C11940) *
                C79308) *
               C79307 * C79275) *
              C79009 * C78992)) /
            (p * q * std::sqrt(p + q));
    d2eeyy[13] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C372 * C96 + C380 + C380 + C79308 * C373) * C81 + C402 * C82) *
                C79307 * C79230 -
            (C2134 * C82 +
             (C372 * C1682 + C2113 + C2113 + C79308 * C2102) * C81) *
                C79307 * C79114) *
               C4921 +
           (((C372 * C3931 + C4390 + C4390 + C79308 * C4385) * C81 +
             C4402 * C82) *
                C79307 * C79114 -
            (C1201 * C82 +
             (C372 * C749 + C1180 + C1180 + C79308 * C1169) * C81) *
                C79307 * C79230) *
               C4922 +
           (((C372 * C750 + C1181 + C1181 + C79308 * C1170) * C81 +
             C1202 * C82) *
                C79307 * C79230 -
            (C7898 * C82 +
             (C372 * C6044 + C6401 + C6401 + C79308 * C6394) * C81) *
                C79307 * C79114) *
               C79259) *
              C79215 +
          (((C2134 * C81 + C2136 * C82) * C79307 * C79114 -
            (C403 * C82 + C402 * C81) * C79307 * C79230) *
               C4921 +
           ((C1201 * C81 + C1203 * C82) * C79307 * C79230 -
            (C4403 * C82 + C4402 * C81) * C79307 * C79114) *
               C4922 +
           ((C7898 * C81 +
             (C372 * C7477 + C7895 + C7895 + C79308 * C7891) * C82) *
                C79307 * C79114 -
            (C1204 * C82 + C1202 * C81) * C79307 * C79230) *
               C79259) *
              C78992)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C372 * C96 + C380 + C380 + C79308 * C373) * C81 + C402 * C82) *
               C79307 * C79230 -
           (C2134 * C82 +
            (C372 * C1682 + C2113 + C2113 + C79308 * C2102) * C81) *
               C79307 * C79114) *
              C79009 * C2605 +
          ((C2134 * C81 + C2136 * C82) * C79307 * C79114 -
           (C403 * C82 + C402 * C81) * C79307 * C79230) *
              C79009 * C2606 +
          ((C403 * C81 + C404 * C82) * C79307 * C79230 -
           (C3548 * C82 + C2136 * C81) * C79307 * C79114) *
              C79009 * C2607 +
          ((C3548 * C81 +
            (C372 * C3255 + C3545 + C3545 + C79308 * C3541) * C82) *
               C79307 * C79114 -
           (C405 * C82 + C404 * C81) * C79307 * C79230) *
              C79009 * C79263)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C372 * C96 + C380 + C380 + C79308 * C373) * C81 + C402 * C82) *
               C79307 * C11717 -
           (C2134 * C82 +
            (C372 * C1682 + C2113 + C2113 + C79308 * C2102) * C81) *
               C79307 * C11718 +
           ((C372 * C1683 + C2114 + C2114 + C79308 * C2103) * C81 +
            C2135 * C82) *
               C79307 * C11719 -
           (C12014 * C82 +
            (C372 * C10320 + C10529 + C10529 + C79308 * C10524) * C81) *
               C79307 * C79275) *
              C79009 * C79215 +
          ((C2134 * C81 + C2136 * C82) * C79307 * C11718 -
           (C403 * C82 + C402 * C81) * C79307 * C11717 -
           (C2137 * C82 + C2135 * C81) * C79307 * C11719 +
           (C12014 * C81 +
            (C372 * C11721 + C12011 + C12011 + C79308 * C12007) * C82) *
               C79307 * C79275) *
              C79009 * C78992)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[13] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C245 * C96 + C79307 * C246) * C166 +
              (C245 * C167 + C79307 * C447) * C79308) *
                 C81 +
             (C454 + C470) * C82) *
                C79230 -
            ((C2236 + C2222) * C82 + ((C245 * C1792 + C79307 * C2212) * C79308 +
                                      (C245 * C1682 + C79307 * C1906) * C166) *
                                         C81) *
                C79114) *
               C4921 +
           ((((C245 * C3931 + C79307 * C4165) * C166 +
              (C245 * C4047 + C79307 * C4501) * C79308) *
                 C81 +
             (C4506 + C4514) * C82) *
                C79114 -
            ((C1303 + C1289) * C82 + ((C245 * C859 + C79307 * C1279) * C79308 +
                                      (C245 * C749 + C79307 * C973) * C166) *
                                         C81) *
                C79230) *
               C4922 +
           ((((C245 * C750 + C79307 * C974) * C166 +
              (C245 * C860 + C79307 * C1280) * C79308) *
                 C81 +
             (C1290 + C1304) * C82) *
                C79230 -
            ((C8002 + C8000) * C82 + ((C245 * C6142 + C79307 * C6480) * C79308 +
                                      (C245 * C6044 + C79307 * C6228) * C166) *
                                         C81) *
                C79114) *
               C79259) *
              C79215 +
          ((((C2222 + C2236) * C81 + (C2226 + C2238) * C82) * C79114 -
            ((C471 + C459) * C82 + (C470 + C454) * C81) * C79230) *
               C4921 +
           (((C1289 + C1303) * C81 + (C1293 + C1305) * C82) * C79230 -
            ((C4515 + C4511) * C82 + (C4514 + C4506) * C81) * C79114) *
               C4922 +
           (((C8000 + C8002) * C81 +
             ((C245 * C7477 + C79307 * C7686) * C166 +
              (C245 * C7580 + C79307 * C7996) * C79308) *
                 C82) *
                C79114 -
            ((C1306 + C1298) * C82 + (C1304 + C1290) * C81) * C79230) *
               C79259) *
              C78992)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C245 * C96 + C79307 * C246) * C166 +
             (C245 * C167 + C79307 * C447) * C79308) *
                C81 +
            (C454 + C470) * C82) *
               C79230 -
           ((C2236 + C2222) * C82 + ((C245 * C1792 + C79307 * C2212) * C79308 +
                                     (C245 * C1682 + C79307 * C1906) * C166) *
                                        C81) *
               C79114) *
              C79009 * C2605 +
          (((C2222 + C2236) * C81 + (C2226 + C2238) * C82) * C79114 -
           ((C471 + C459) * C82 + (C470 + C454) * C81) * C79230) *
              C79009 * C2606 +
          (((C459 + C471) * C81 + (C460 + C472) * C82) * C79230 -
           ((C3620 + C3618) * C82 + (C2238 + C2226) * C81) * C79114) *
              C79009 * C2607 +
          (((C3618 + C3620) * C81 + ((C245 * C3255 + C79307 * C3400) * C166 +
                                     (C245 * C3326 + C79307 * C3614) * C79308) *
                                        C82) *
               C79114 -
           ((C473 + C465) * C82 + (C472 + C460) * C81) * C79230) *
              C79009 * C79263)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C245 * C96 + C79307 * C246) * C166 +
             (C245 * C167 + C79307 * C447) * C79308) *
                C81 +
            (C454 + C470) * C82) *
               C11717 -
           ((C2236 + C2222) * C82 + ((C245 * C1792 + C79307 * C2212) * C79308 +
                                     (C245 * C1682 + C79307 * C1906) * C166) *
                                        C81) *
               C11718 +
           (((C245 * C1683 + C79307 * C1907) * C166 +
             (C245 * C1793 + C79307 * C2213) * C79308) *
                C81 +
            (C2223 + C2237) * C82) *
               C11719 -
           ((C12086 + C12084) * C82 +
            ((C245 * C10378 + C79307 * C10574) * C79308 +
             (C245 * C10320 + C79307 * C10428) * C166) *
                C81) *
               C79275) *
              C79009 * C79215 +
          (((C2222 + C2236) * C81 + (C2226 + C2238) * C82) * C11718 -
           ((C471 + C459) * C82 + (C470 + C454) * C81) * C11717 -
           ((C2239 + C2231) * C82 + (C2237 + C2223) * C81) * C11719 +
           ((C12084 + C12086) * C81 +
            ((C245 * C11721 + C79307 * C11866) * C166 +
             (C245 * C11792 + C79307 * C12080) * C79308) *
                C82) *
               C79275) *
              C79009 * C78992)) /
            (p * q * std::sqrt(p + q));
    d2eezx[13] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C245 +
             (C93 * C246 + C81 * C515 + C95 * C247 + C82 * C516) * C79307) *
                C79308 * C79230 -
            ((C95 * C1905 + C82 * C2313 + C93 * C1906 + C81 * C2314) * C79307 +
             (C95 * C1681 + C82 * C1689 + C93 * C1682 + C81 * C1690) * C245) *
                C79308 * C79114) *
               C4921 +
           (((C93 * C3931 + C81 * C3935 + C95 * C3932 + C82 * C3936) * C245 +
             (C93 * C4165 + C81 * C4613 + C95 * C4166 + C82 * C4614) * C79307) *
                C79308 * C79114 -
            ((C95 * C972 + C82 * C1380 + C93 * C973 + C81 * C1381) * C79307 +
             (C95 * C748 + C82 * C756 + C93 * C749 + C81 * C757) * C245) *
                C79308 * C79230) *
               C4922 +
           (((C93 * C750 + C81 * C758 + C95 * C751 + C82 * C759) * C245 +
             (C93 * C974 + C81 * C1382 + C95 * C975 + C82 * C1383) * C79307) *
                C79308 * C79230 -
            ((C95 * C6227 + C82 * C6559 + C93 * C6228 + C81 * C6560) * C79307 +
             (C95 * C6043 + C82 * C6049 + C93 * C6044 + C81 * C6050) * C245) *
                C79308 * C79114) *
               C79259) *
              C79215 +
          ((((C93 * C1681 + C81 * C1689 + C95 * C1685 + C82 * C1693) * C245 +
             (C93 * C1905 + C81 * C2313 + C95 * C1909 + C82 * C2317) * C79307) *
                C79308 * C79114 -
            ((C95 * C248 + C82 * C517 + C93 * C247 + C81 * C516) * C79307 +
             (C95 * C98 + C82 * C104 + C93 * C97 + C81 * C103) * C245) *
                C79308 * C79230) *
               C4921 +
           (((C93 * C748 + C81 * C756 + C95 * C752 + C82 * C760) * C245 +
             (C93 * C972 + C81 * C1380 + C95 * C976 + C82 * C1384) * C79307) *
                C79308 * C79230 -
            ((C95 * C4167 + C82 * C4615 + C93 * C4166 + C81 * C4614) * C79307 +
             (C95 * C3933 + C82 * C3937 + C93 * C3932 + C81 * C3936) * C245) *
                C79308 * C79114) *
               C4922 +
           (((C93 * C6043 + C81 * C6049 + C95 * C7477 + C82 * C7478) * C245 +
             (C93 * C6227 + C81 * C6559 + C95 * C7686 + C82 * C8100) * C79307) *
                C79308 * C79114 -
            ((C95 * C977 + C82 * C1385 + C93 * C975 + C81 * C1383) * C79307 +
             (C95 * C753 + C82 * C761 + C93 * C751 + C81 * C759) * C245) *
                C79308 * C79230) *
               C79259) *
              C78992)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C245 +
            (C93 * C246 + C81 * C515 + C95 * C247 + C82 * C516) * C79307) *
               C79308 * C79230 -
           ((C95 * C1905 + C82 * C2313 + C93 * C1906 + C81 * C2314) * C79307 +
            (C95 * C1681 + C82 * C1689 + C93 * C1682 + C81 * C1690) * C245) *
               C79308 * C79114) *
              C79009 * C2605 +
          (((C93 * C1681 + C81 * C1689 + C95 * C1685 + C82 * C1693) * C245 +
            (C93 * C1905 + C81 * C2313 + C95 * C1909 + C82 * C2317) * C79307) *
               C79308 * C79114 -
           ((C95 * C248 + C82 * C517 + C93 * C247 + C81 * C516) * C79307 +
            (C95 * C98 + C82 * C104 + C93 * C97 + C81 * C103) * C245) *
               C79308 * C79230) *
              C79009 * C2606 +
          (((C93 * C98 + C81 * C104 + C95 * C99 + C82 * C105) * C245 +
            (C93 * C248 + C81 * C517 + C95 * C249 + C82 * C518) * C79307) *
               C79308 * C79230 -
           ((C95 * C1911 + C82 * C2319 + C93 * C1909 + C81 * C2317) * C79307 +
            (C95 * C1687 + C82 * C1695 + C93 * C1685 + C81 * C1693) * C245) *
               C79308 * C79114) *
              C79009 * C2607 +
          (((C93 * C1687 + C81 * C1695 + C95 * C3255 + C82 * C3256) * C245 +
            (C93 * C1911 + C81 * C2319 + C95 * C3400 + C82 * C3686) * C79307) *
               C79308 * C79114 -
           ((C95 * C250 + C82 * C519 + C93 * C249 + C81 * C518) * C79307 +
            (C95 * C100 + C82 * C106 + C93 * C99 + C81 * C105) * C245) *
               C79308 * C79230) *
              C79009 * C79263)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C245 +
            (C93 * C246 + C81 * C515 + C95 * C247 + C82 * C516) * C79307) *
               C79308 * C11717 -
           ((C95 * C1905 + C82 * C2313 + C93 * C1906 + C81 * C2314) * C79307 +
            (C95 * C1681 + C82 * C1689 + C93 * C1682 + C81 * C1690) * C245) *
               C79308 * C11718 +
           ((C93 * C1683 + C81 * C1691 + C95 * C1684 + C82 * C1692) * C245 +
            (C93 * C1907 + C81 * C2315 + C95 * C1908 + C82 * C2316) * C79307) *
               C79308 * C11719 -
           ((C95 * C10427 + C82 * C10619 + C93 * C10428 + C81 * C10620) *
                C79307 +
            (C95 * C10319 + C82 * C10323 + C93 * C10320 + C81 * C10324) *
                C245) *
               C79308 * C79275) *
              C79009 * C79215 +
          (((C93 * C1681 + C81 * C1689 + C95 * C1685 + C82 * C1693) * C245 +
            (C93 * C1905 + C81 * C2313 + C95 * C1909 + C82 * C2317) * C79307) *
               C79308 * C11718 -
           ((C95 * C248 + C82 * C517 + C93 * C247 + C81 * C516) * C79307 +
            (C95 * C98 + C82 * C104 + C93 * C97 + C81 * C103) * C245) *
               C79308 * C11717 -
           ((C95 * C1910 + C82 * C2318 + C93 * C1908 + C81 * C2316) * C79307 +
            (C95 * C1686 + C82 * C1694 + C93 * C1684 + C81 * C1692) * C245) *
               C79308 * C11719 +
           ((C93 * C10319 + C81 * C10323 + C95 * C11721 + C82 * C11722) * C245 +
            (C93 * C10427 + C81 * C10619 + C95 * C11866 + C82 * C12152) *
                C79307) *
               C79308 * C79275) *
              C79009 * C78992)) /
            (p * q * std::sqrt(p + q));
    d2eezy[13] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C166 * C96 + C79308 * C167) * C245 +
              (C166 * C246 + C79308 * C563) * C79307) *
                 C81 +
             (C570 + C586) * C82) *
                C79230 -
            ((C2420 + C2406) * C82 + ((C166 * C1906 + C79308 * C2396) * C79307 +
                                      (C166 * C1682 + C79308 * C1792) * C245) *
                                         C81) *
                C79114) *
               C4921 +
           ((((C166 * C3931 + C79308 * C4047) * C245 +
              (C166 * C4165 + C79308 * C4715) * C79307) *
                 C81 +
             (C4720 + C4728) * C82) *
                C79114 -
            ((C1487 + C1473) * C82 + ((C166 * C973 + C79308 * C1463) * C79307 +
                                      (C166 * C749 + C79308 * C859) * C245) *
                                         C81) *
                C79230) *
               C4922 +
           ((((C166 * C750 + C79308 * C860) * C245 +
              (C166 * C974 + C79308 * C1464) * C79307) *
                 C81 +
             (C1474 + C1488) * C82) *
                C79230 -
            ((C8205 + C8203) * C82 + ((C166 * C6228 + C79308 * C6640) * C79307 +
                                      (C166 * C6044 + C79308 * C6142) * C245) *
                                         C81) *
                C79114) *
               C79259) *
              C79215 +
          ((((C2406 + C2420) * C81 + (C2410 + C2422) * C82) * C79114 -
            ((C587 + C575) * C82 + (C586 + C570) * C81) * C79230) *
               C4921 +
           (((C1473 + C1487) * C81 + (C1477 + C1489) * C82) * C79230 -
            ((C4729 + C4725) * C82 + (C4728 + C4720) * C81) * C79114) *
               C4922 +
           (((C8203 + C8205) * C81 +
             ((C166 * C7477 + C79308 * C7580) * C245 +
              (C166 * C7686 + C79308 * C8199) * C79307) *
                 C82) *
                C79114 -
            ((C1490 + C1482) * C82 + (C1488 + C1474) * C81) * C79230) *
               C79259) *
              C78992)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C166 * C96 + C79308 * C167) * C245 +
             (C166 * C246 + C79308 * C563) * C79307) *
                C81 +
            (C570 + C586) * C82) *
               C79230 -
           ((C2420 + C2406) * C82 + ((C166 * C1906 + C79308 * C2396) * C79307 +
                                     (C166 * C1682 + C79308 * C1792) * C245) *
                                        C81) *
               C79114) *
              C79009 * C2605 +
          (((C2406 + C2420) * C81 + (C2410 + C2422) * C82) * C79114 -
           ((C587 + C575) * C82 + (C586 + C570) * C81) * C79230) *
              C79009 * C2606 +
          (((C575 + C587) * C81 + (C576 + C588) * C82) * C79230 -
           ((C3759 + C3757) * C82 + (C2422 + C2410) * C81) * C79114) *
              C79009 * C2607 +
          (((C3757 + C3759) * C81 + ((C166 * C3255 + C79308 * C3326) * C245 +
                                     (C166 * C3400 + C79308 * C3753) * C79307) *
                                        C82) *
               C79114 -
           ((C589 + C581) * C82 + (C588 + C576) * C81) * C79230) *
              C79009 * C79263)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C166 * C96 + C79308 * C167) * C245 +
             (C166 * C246 + C79308 * C563) * C79307) *
                C81 +
            (C570 + C586) * C82) *
               C11717 -
           ((C2420 + C2406) * C82 + ((C166 * C1906 + C79308 * C2396) * C79307 +
                                     (C166 * C1682 + C79308 * C1792) * C245) *
                                        C81) *
               C11718 +
           (((C166 * C1683 + C79308 * C1793) * C245 +
             (C166 * C1907 + C79308 * C2397) * C79307) *
                C81 +
            (C2407 + C2421) * C82) *
               C11719 -
           ((C12225 + C12223) * C82 +
            ((C166 * C10428 + C79308 * C10666) * C79307 +
             (C166 * C10320 + C79308 * C10378) * C245) *
                C81) *
               C79275) *
              C79009 * C79215 +
          (((C2406 + C2420) * C81 + (C2410 + C2422) * C82) * C11718 -
           ((C587 + C575) * C82 + (C586 + C570) * C81) * C11717 -
           ((C2423 + C2415) * C82 + (C2421 + C2407) * C81) * C11719 +
           ((C12223 + C12225) * C81 +
            ((C166 * C11721 + C79308 * C11792) * C245 +
             (C166 * C11866 + C79308 * C12219) * C79307) *
                C82) *
               C79275) *
              C79009 * C78992)) /
            (p * q * std::sqrt(p + q));
    d2eezz[13] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C631 * C96 + C639 + C639 + C79307 * C632) * C79308 * C81 +
             C665 * C82) *
                C79230 -
            (C2534 * C82 +
             (C631 * C1682 + C2509 + C2509 + C79307 * C2498) * C79308 * C81) *
                C79114) *
               C4921 +
           (((C631 * C3931 + C4832 + C4832 + C79307 * C4827) * C79308 * C81 +
             C4846 * C82) *
                C79114 -
            (C1601 * C82 +
             (C631 * C749 + C1576 + C1576 + C79307 * C1565) * C79308 * C81) *
                C79230) *
               C4922 +
           (((C631 * C750 + C1577 + C1577 + C79307 * C1566) * C79308 * C81 +
             C1602 * C82) *
                C79230 -
            (C8311 * C82 +
             (C631 * C6044 + C6727 + C6727 + C79307 * C6720) * C79308 * C81) *
                C79114) *
               C79259) *
              C79215 +
          (((C2534 * C81 + C2536 * C82) * C79114 -
            (C666 * C82 + C665 * C81) * C79230) *
               C4921 +
           ((C1601 * C81 + C1603 * C82) * C79230 -
            (C4847 * C82 + C4846 * C81) * C79114) *
               C4922 +
           ((C8311 * C81 +
             (C631 * C7477 + C8307 + C8307 + C79307 * C8303) * C79308 * C82) *
                C79114 -
            (C1604 * C82 + C1602 * C81) * C79230) *
               C79259) *
              C78992)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C631 * C96 + C639 + C639 + C79307 * C632) * C79308 * C81 +
            C665 * C82) *
               C79230 -
           (C2534 * C82 +
            (C631 * C1682 + C2509 + C2509 + C79307 * C2498) * C79308 * C81) *
               C79114) *
              C79009 * C2605 +
          ((C2534 * C81 + C2536 * C82) * C79114 -
           (C666 * C82 + C665 * C81) * C79230) *
              C79009 * C2606 +
          ((C666 * C81 + C667 * C82) * C79230 -
           (C3833 * C82 + C2536 * C81) * C79114) *
              C79009 * C2607 +
          ((C3833 * C81 +
            (C631 * C3255 + C3829 + C3829 + C79307 * C3825) * C79308 * C82) *
               C79114 -
           (C668 * C82 + C667 * C81) * C79230) *
              C79009 * C79263)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C631 * C96 + C639 + C639 + C79307 * C632) * C79308 * C81 +
            C665 * C82) *
               C11717 -
           (C2534 * C82 +
            (C631 * C1682 + C2509 + C2509 + C79307 * C2498) * C79308 * C81) *
               C11718 +
           ((C631 * C1683 + C2510 + C2510 + C79307 * C2499) * C79308 * C81 +
            C2535 * C82) *
               C11719 -
           (C12299 * C82 + (C631 * C10320 + C10717 + C10717 + C79307 * C10712) *
                               C79308 * C81) *
               C79275) *
              C79009 * C79215 +
          ((C2534 * C81 + C2536 * C82) * C11718 -
           (C666 * C82 + C665 * C81) * C11717 -
           (C2537 * C82 + C2535 * C81) * C11719 +
           (C12299 * C81 + (C631 * C11721 + C12295 + C12295 + C79307 * C12291) *
                               C79308 * C82) *
               C79275) *
              C79009 * C78992)) /
            (p * q * std::sqrt(p + q));
    d2eexx[14] += (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   (((C92 * C96 + C115 + C115 + C81 * C108 + C94 * C97 + C116 +
                      C116 + C82 * C109) *
                         C79307 * C79308 * C79027 * C79300 -
                     (C94 * C748 + C773 + C773 + C82 * C764 + C92 * C749 +
                      C774 + C774 + C81 * C765) *
                         C79307 * C79308 * C79027 * C79285 +
                     (C92 * C750 + C775 + C775 + C81 * C766 + C94 * C751 +
                      C776 + C776 + C82 * C767) *
                         C79307 * C79308 * C79027 * C79259) *
                        C745 +
                    ((C92 * C748 + C777 + C777 + C81 * C764 + C94 * C752 +
                      C778 + C778 + C82 * C768) *
                         C79307 * C79308 * C79027 * C79285 -
                     (C94 * C98 + C117 + C117 + C82 * C110 + C92 * C97 + C118 +
                      C118 + C81 * C109) *
                         C79307 * C79308 * C79027 * C79300 -
                     (C94 * C753 + C779 + C779 + C82 * C769 + C92 * C751 +
                      C780 + C780 + C81 * C767) *
                         C79307 * C79308 * C79027 * C79259) *
                        C746 +
                    ((C92 * C98 + C119 + C119 + C81 * C110 + C94 * C99 + C120 +
                      C120 + C82 * C111) *
                         C79307 * C79308 * C79027 * C79300 -
                     (C94 * C754 + C781 + C781 + C82 * C770 + C92 * C752 +
                      C782 + C782 + C81 * C768) *
                         C79307 * C79308 * C79027 * C79285 +
                     (C92 * C753 + C783 + C783 + C81 * C769 + C94 * C755 +
                      C784 + C784 + C82 * C771) *
                         C79307 * C79308 * C79027 * C79259) *
                        C79253)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   ((C92 * C96 + C115 + C115 + C81 * C108 + C94 * C97 + C116 +
                     C116 + C82 * C109) *
                        C79307 * C79308 * C79027 * C79009 * C87 -
                    (C94 * C98 + C117 + C117 + C82 * C110 + C92 * C97 + C118 +
                     C118 + C81 * C109) *
                        C79307 * C79308 * C79027 * C79009 * C88 +
                    (C92 * C98 + C119 + C119 + C81 * C110 + C94 * C99 + C120 +
                     C120 + C82 * C111) *
                        C79307 * C79308 * C79027 * C79009 * C89 -
                    (C94 * C100 + C121 + C121 + C82 * C112 + C92 * C99 + C122 +
                     C122 + C81 * C111) *
                        C79307 * C79308 * C79027 * C79009 * C90 +
                    (C92 * C100 + C123 + C123 + C81 * C112 + C94 * C101 + C124 +
                     C124 + C82 * C113) *
                        C79307 * C79308 * C79027 * C79009 * C91)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   (((C92 * C96 + C115 + C115 + C81 * C108 + C94 * C97 + C116 +
                      C116 + C82 * C109) *
                         C79307 * C79308 * C79027 * C4921 -
                     (C94 * C748 + C773 + C773 + C82 * C764 + C92 * C749 +
                      C774 + C774 + C81 * C765) *
                         C79307 * C79308 * C79027 * C4922 +
                     (C92 * C750 + C775 + C775 + C81 * C766 + C94 * C751 +
                      C776 + C776 + C82 * C767) *
                         C79307 * C79308 * C79027 * C79259) *
                        C79297 +
                    ((C92 * C748 + C777 + C777 + C81 * C764 + C94 * C752 +
                      C778 + C778 + C82 * C768) *
                         C79307 * C79308 * C79027 * C4922 -
                     (C94 * C98 + C117 + C117 + C82 * C110 + C92 * C97 + C118 +
                      C118 + C81 * C109) *
                         C79307 * C79308 * C79027 * C4921 -
                     (C94 * C753 + C779 + C779 + C82 * C769 + C92 * C751 +
                      C780 + C780 + C81 * C767) *
                         C79307 * C79308 * C79027 * C79259) *
                        C79281 +
                    ((C92 * C98 + C119 + C119 + C81 * C110 + C94 * C99 + C120 +
                      C120 + C82 * C111) *
                         C79307 * C79308 * C79027 * C4921 -
                     (C94 * C754 + C781 + C781 + C82 * C770 + C92 * C752 +
                      C782 + C782 + C81 * C768) *
                         C79307 * C79308 * C79027 * C4922 +
                     (C92 * C753 + C783 + C783 + C81 * C769 + C94 * C755 +
                      C784 + C784 + C82 * C771) *
                         C79307 * C79308 * C79027 * C79259) *
                        C79253)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   ((C92 * C96 + C115 + C115 + C81 * C108 + C94 * C97 + C116 +
                     C116 + C82 * C109) *
                        C79307 * C79308 * C79027 * C5561 -
                    (C94 * C748 + C773 + C773 + C82 * C764 + C92 * C749 + C774 +
                     C774 + C81 * C765) *
                        C79307 * C79308 * C79027 * C5562 +
                    (C92 * C750 + C775 + C775 + C81 * C766 + C94 * C751 + C776 +
                     C776 + C82 * C767) *
                        C79307 * C79308 * C79027 * C5563 -
                    (C94 * C5567 + C5580 + C5580 + C82 * C5575 + C92 * C5568 +
                     C5581 + C5581 + C81 * C5576) *
                        C79307 * C79308 * C79027 * C5564 +
                    (C92 * C5569 + C5582 + C5582 + C81 * C5577 + C94 * C5570 +
                     C5583 + C5583 + C82 * C5578) *
                        C79307 * C79308 * C79027 * C5565) *
                   C78981) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C92 * C96 + C115 + C115 + C81 * C108 + C94 * C97 + C116 +
                      C116 + C82 * C109) *
                         C79307 * C79308 * C9011 -
                     (C94 * C1681 + C1706 + C1706 + C82 * C1697 + C92 * C1682 +
                      C1707 + C1707 + C81 * C1698) *
                         C79307 * C79308 * C9012 +
                     (C92 * C1683 + C1708 + C1708 + C81 * C1699 + C94 * C1684 +
                      C1709 + C1709 + C82 * C1700) *
                         C79307 * C79308 * C79262) *
                        C79009 * C79297 +
                    ((C92 * C1681 + C1710 + C1710 + C81 * C1697 + C94 * C1685 +
                      C1711 + C1711 + C82 * C1701) *
                         C79307 * C79308 * C9012 -
                     (C94 * C98 + C117 + C117 + C82 * C110 + C92 * C97 + C118 +
                      C118 + C81 * C109) *
                         C79307 * C79308 * C9011 -
                     (C94 * C1686 + C1712 + C1712 + C82 * C1702 + C92 * C1684 +
                      C1713 + C1713 + C81 * C1700) *
                         C79307 * C79308 * C79262) *
                        C79009 * C79281 +
                    ((C92 * C98 + C119 + C119 + C81 * C110 + C94 * C99 + C120 +
                      C120 + C82 * C111) *
                         C79307 * C79308 * C9011 -
                     (C94 * C1687 + C1714 + C1714 + C82 * C1703 + C92 * C1685 +
                      C1715 + C1715 + C81 * C1701) *
                         C79307 * C79308 * C9012 +
                     (C92 * C1686 + C1716 + C1716 + C81 * C1702 + C94 * C1688 +
                      C1717 + C1717 + C82 * C1704) *
                         C79307 * C79308 * C79262) *
                        C79009 * C79253)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C92 * C96 + C115 + C115 + C81 * C108 + C94 * C97 + C116 +
                      C116 + C82 * C109) *
                         C79307 * C79308 * C9011 -
                     (C94 * C1681 + C1706 + C1706 + C82 * C1697 + C92 * C1682 +
                      C1707 + C1707 + C81 * C1698) *
                         C79307 * C79308 * C9012 +
                     (C92 * C1683 + C1708 + C1708 + C81 * C1699 + C94 * C1684 +
                      C1709 + C1709 + C82 * C1700) *
                         C79307 * C79308 * C79262) *
                        C79300 +
                    ((C92 * C3931 + C3944 + C3944 + C81 * C3939 + C94 * C3932 +
                      C3945 + C3945 + C82 * C3940) *
                         C79307 * C79308 * C9012 -
                     (C94 * C748 + C773 + C773 + C82 * C764 + C92 * C749 +
                      C774 + C774 + C81 * C765) *
                         C79307 * C79308 * C9011 -
                     (C94 * C6041 + C6060 + C6060 + C82 * C6053 + C92 * C6042 +
                      C6061 + C6061 + C81 * C6054) *
                         C79307 * C79308 * C79262) *
                        C79285 +
                    ((C92 * C750 + C775 + C775 + C81 * C766 + C94 * C751 +
                      C776 + C776 + C82 * C767) *
                         C79307 * C79308 * C9011 -
                     (C94 * C6043 + C6062 + C6062 + C82 * C6055 + C92 * C6044 +
                      C6063 + C6063 + C81 * C6056) *
                         C79307 * C79308 * C9012 +
                     (C92 * C6045 + C6064 + C6064 + C81 * C6057 + C94 * C6046 +
                      C6065 + C6065 + C82 * C6058) *
                         C79307 * C79308 * C79262) *
                        C79259) *
                   C78981) /
                      (p * q * std::sqrt(p + q));
    d2eexy[14] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C166 * C96 + C79308 * C167) * C93 +
            (C166 * C102 + C79308 * C173) * C81 + C196 * C95 + C197 * C82) *
               C79307 * C79027 * C79300 -
           (C891 * C82 + C892 * C95 + (C166 * C757 + C79308 * C867) * C81 +
            (C166 * C749 + C79308 * C859) * C93) *
               C79307 * C79027 * C79285 +
           ((C166 * C750 + C79308 * C860) * C93 +
            (C166 * C758 + C79308 * C868) * C81 + C893 * C95 + C894 * C82) *
               C79307 * C79027 * C79259) *
              C745 +
          ((C892 * C93 + C891 * C81 + C895 * C95 + C896 * C82) * C79307 *
               C79027 * C79285 -
           (C198 * C82 + C199 * C95 + C197 * C81 + C196 * C93) * C79307 *
               C79027 * C79300 -
           (C897 * C82 + C898 * C95 + C894 * C81 + C893 * C93) * C79307 *
               C79027 * C79259) *
              C746 +
          ((C199 * C93 + C198 * C81 + C200 * C95 + C201 * C82) * C79307 *
               C79027 * C79300 -
           ((C166 * C762 + C79308 * C872) * C82 +
            (C166 * C754 + C79308 * C864) * C95 + C896 * C81 + C895 * C93) *
               C79307 * C79027 * C79285 +
           (C898 * C93 + C897 * C81 + (C166 * C755 + C79308 * C865) * C95 +
            (C166 * C763 + C79308 * C873) * C82) *
               C79307 * C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C166 * C96 + C79308 * C167) * C93 +
           (C166 * C102 + C79308 * C173) * C81 + C196 * C95 + C197 * C82) *
              C79307 * C79027 * C79009 * C87 -
          (C198 * C82 + C199 * C95 + C197 * C81 + C196 * C93) * C79307 *
              C79027 * C79009 * C88 +
          (C199 * C93 + C198 * C81 + C200 * C95 + C201 * C82) * C79307 *
              C79027 * C79009 * C89 -
          (C202 * C82 + C203 * C95 + C201 * C81 + C200 * C93) * C79307 *
              C79027 * C79009 * C90 +
          (C203 * C93 + C202 * C81 + (C166 * C101 + C79308 * C172) * C95 +
           (C166 * C107 + C79308 * C178) * C82) *
              C79307 * C79027 * C79009 * C91)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C166 * C96 + C79308 * C167) * C93 +
            (C166 * C102 + C79308 * C173) * C81 + C196 * C95 + C197 * C82) *
               C79307 * C79027 * C4921 -
           (C891 * C82 + C892 * C95 + (C166 * C757 + C79308 * C867) * C81 +
            (C166 * C749 + C79308 * C859) * C93) *
               C79307 * C79027 * C4922 +
           ((C166 * C750 + C79308 * C860) * C93 +
            (C166 * C758 + C79308 * C868) * C81 + C893 * C95 + C894 * C82) *
               C79307 * C79027 * C79259) *
              C79297 +
          ((C892 * C93 + C891 * C81 + C895 * C95 + C896 * C82) * C79307 *
               C79027 * C4922 -
           (C198 * C82 + C199 * C95 + C197 * C81 + C196 * C93) * C79307 *
               C79027 * C4921 -
           (C897 * C82 + C898 * C95 + C894 * C81 + C893 * C93) * C79307 *
               C79027 * C79259) *
              C79281 +
          ((C199 * C93 + C198 * C81 + C200 * C95 + C201 * C82) * C79307 *
               C79027 * C4921 -
           (C2687 * C82 + C2688 * C95 + C896 * C81 + C895 * C93) * C79307 *
               C79027 * C4922 +
           (C898 * C93 + C897 * C81 + (C166 * C755 + C79308 * C865) * C95 +
            (C166 * C763 + C79308 * C873) * C82) *
               C79307 * C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C166 * C96 + C79308 * C167) * C93 +
           (C166 * C102 + C79308 * C173) * C81 + C196 * C95 + C197 * C82) *
              C79307 * C79027 * C5561 -
          (C891 * C82 + C892 * C95 + (C166 * C757 + C79308 * C867) * C81 +
           (C166 * C749 + C79308 * C859) * C93) *
              C79307 * C79027 * C5562 +
          ((C166 * C750 + C79308 * C860) * C93 +
           (C166 * C758 + C79308 * C868) * C81 + C893 * C95 + C894 * C82) *
              C79307 * C79027 * C5563 -
          ((C166 * C5571 + C79308 * C5629) * C82 +
           (C166 * C5567 + C79308 * C5625) * C95 +
           (C166 * C5572 + C79308 * C5630) * C81 +
           (C166 * C5568 + C79308 * C5626) * C93) *
              C79307 * C79027 * C5564 +
          ((C166 * C5569 + C79308 * C5627) * C93 +
           (C166 * C5573 + C79308 * C5631) * C81 +
           (C166 * C5570 + C79308 * C5628) * C95 +
           (C166 * C5574 + C79308 * C5632) * C82) *
              C79307 * C79027 * C5565) *
         C78981) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C166 * C96 + C79308 * C167) * C93 +
            (C166 * C102 + C79308 * C173) * C81 + C196 * C95 + C197 * C82) *
               C79307 * C9011 -
           (C1824 * C82 + C1825 * C95 + (C166 * C1690 + C79308 * C1800) * C81 +
            (C166 * C1682 + C79308 * C1792) * C93) *
               C79307 * C9012 +
           ((C166 * C1683 + C79308 * C1793) * C93 +
            (C166 * C1691 + C79308 * C1801) * C81 + C1826 * C95 + C1827 * C82) *
               C79307 * C79262) *
              C79009 * C79297 +
          ((C1825 * C93 + C1824 * C81 + C1828 * C95 + C1829 * C82) * C79307 *
               C9012 -
           (C198 * C82 + C199 * C95 + C197 * C81 + C196 * C93) * C79307 *
               C9011 -
           (C1830 * C82 + C1831 * C95 + C1827 * C81 + C1826 * C93) * C79307 *
               C79262) *
              C79009 * C79281 +
          ((C199 * C93 + C198 * C81 + C200 * C95 + C201 * C82) * C79307 *
               C9011 -
           (C3333 * C82 + C3334 * C95 + C1829 * C81 + C1828 * C93) * C79307 *
               C9012 +
           (C1831 * C93 + C1830 * C81 + (C166 * C1688 + C79308 * C1798) * C95 +
            (C166 * C1696 + C79308 * C1806) * C82) *
               C79307 * C79262) *
              C79009 * C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C166 * C96 + C79308 * C167) * C93 +
            (C166 * C102 + C79308 * C173) * C81 + C196 * C95 + C197 * C82) *
               C79307 * C9011 -
           (C1824 * C82 + C1825 * C95 + (C166 * C1690 + C79308 * C1800) * C81 +
            (C166 * C1682 + C79308 * C1792) * C93) *
               C79307 * C9012 +
           ((C166 * C1683 + C79308 * C1793) * C93 +
            (C166 * C1691 + C79308 * C1801) * C81 + C1826 * C95 + C1827 * C82) *
               C79307 * C79262) *
              C79300 +
          (((C166 * C3931 + C79308 * C4047) * C93 +
            (C166 * C3935 + C79308 * C4051) * C81 + C4064 * C95 + C4065 * C82) *
               C79307 * C9012 -
           (C891 * C82 + C892 * C95 + (C166 * C757 + C79308 * C867) * C81 +
            (C166 * C749 + C79308 * C859) * C93) *
               C79307 * C9011 -
           ((C166 * C6047 + C79308 * C6145) * C82 +
            (C166 * C6041 + C79308 * C6139) * C95 +
            (C166 * C6048 + C79308 * C6146) * C81 +
            (C166 * C6042 + C79308 * C6140) * C93) *
               C79307 * C79262) *
              C79285 +
          (((C166 * C750 + C79308 * C860) * C93 +
            (C166 * C758 + C79308 * C868) * C81 + C893 * C95 + C894 * C82) *
               C79307 * C9011 -
           (C7587 * C82 + C7588 * C95 + (C166 * C6050 + C79308 * C6148) * C81 +
            (C166 * C6044 + C79308 * C6142) * C93) *
               C79307 * C9012 +
           ((C166 * C6045 + C79308 * C6143) * C93 +
            (C166 * C6051 + C79308 * C6149) * C81 +
            (C166 * C6046 + C79308 * C6144) * C95 +
            (C166 * C6052 + C79308 * C6150) * C82) *
               C79307 * C79262) *
              C79259) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eexz[14] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C245 * C96 + C79307 * C246) * C93 +
            (C245 * C102 + C79307 * C252) * C81 + C275 * C95 + C276 * C82) *
               C79308 * C79027 * C79300 -
           (C1005 * C82 + C1006 * C95 + (C245 * C757 + C79307 * C981) * C81 +
            (C245 * C749 + C79307 * C973) * C93) *
               C79308 * C79027 * C79285 +
           ((C245 * C750 + C79307 * C974) * C93 +
            (C245 * C758 + C79307 * C982) * C81 + C1007 * C95 + C1008 * C82) *
               C79308 * C79027 * C79259) *
              C745 +
          ((C1006 * C93 + C1005 * C81 + C1009 * C95 + C1010 * C82) * C79308 *
               C79027 * C79285 -
           (C277 * C82 + C278 * C95 + C276 * C81 + C275 * C93) * C79308 *
               C79027 * C79300 -
           (C1011 * C82 + C1012 * C95 + C1008 * C81 + C1007 * C93) * C79308 *
               C79027 * C79259) *
              C746 +
          ((C278 * C93 + C277 * C81 + C279 * C95 + C280 * C82) * C79308 *
               C79027 * C79300 -
           ((C245 * C762 + C79307 * C986) * C82 +
            (C245 * C754 + C79307 * C978) * C95 + C1010 * C81 + C1009 * C93) *
               C79308 * C79027 * C79285 +
           (C1012 * C93 + C1011 * C81 + (C245 * C755 + C79307 * C979) * C95 +
            (C245 * C763 + C79307 * C987) * C82) *
               C79308 * C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C245 * C96 + C79307 * C246) * C93 +
           (C245 * C102 + C79307 * C252) * C81 + C275 * C95 + C276 * C82) *
              C79308 * C79027 * C79009 * C87 -
          (C277 * C82 + C278 * C95 + C276 * C81 + C275 * C93) * C79308 *
              C79027 * C79009 * C88 +
          (C278 * C93 + C277 * C81 + C279 * C95 + C280 * C82) * C79308 *
              C79027 * C79009 * C89 -
          (C281 * C82 + C282 * C95 + C280 * C81 + C279 * C93) * C79308 *
              C79027 * C79009 * C90 +
          (C282 * C93 + C281 * C81 + (C245 * C101 + C79307 * C251) * C95 +
           (C245 * C107 + C79307 * C257) * C82) *
              C79308 * C79027 * C79009 * C91)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C245 * C96 + C79307 * C246) * C93 +
            (C245 * C102 + C79307 * C252) * C81 + C275 * C95 + C276 * C82) *
               C79308 * C79027 * C4921 -
           (C1005 * C82 + C1006 * C95 + (C245 * C757 + C79307 * C981) * C81 +
            (C245 * C749 + C79307 * C973) * C93) *
               C79308 * C79027 * C4922 +
           ((C245 * C750 + C79307 * C974) * C93 +
            (C245 * C758 + C79307 * C982) * C81 + C1007 * C95 + C1008 * C82) *
               C79308 * C79027 * C79259) *
              C79297 +
          ((C1006 * C93 + C1005 * C81 + C1009 * C95 + C1010 * C82) * C79308 *
               C79027 * C4922 -
           (C277 * C82 + C278 * C95 + C276 * C81 + C275 * C93) * C79308 *
               C79027 * C4921 -
           (C1011 * C82 + C1012 * C95 + C1008 * C81 + C1007 * C93) * C79308 *
               C79027 * C79259) *
              C79281 +
          ((C278 * C93 + C277 * C81 + C279 * C95 + C280 * C82) * C79308 *
               C79027 * C4921 -
           (C2761 * C82 + C2762 * C95 + C1010 * C81 + C1009 * C93) * C79308 *
               C79027 * C4922 +
           (C1012 * C93 + C1011 * C81 + (C245 * C755 + C79307 * C979) * C95 +
            (C245 * C763 + C79307 * C987) * C82) *
               C79308 * C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C245 * C96 + C79307 * C246) * C93 +
           (C245 * C102 + C79307 * C252) * C81 + C275 * C95 + C276 * C82) *
              C79308 * C79027 * C5561 -
          (C1005 * C82 + C1006 * C95 + (C245 * C757 + C79307 * C981) * C81 +
           (C245 * C749 + C79307 * C973) * C93) *
              C79308 * C79027 * C5562 +
          ((C245 * C750 + C79307 * C974) * C93 +
           (C245 * C758 + C79307 * C982) * C81 + C1007 * C95 + C1008 * C82) *
              C79308 * C79027 * C5563 -
          ((C245 * C5571 + C79307 * C5679) * C82 +
           (C245 * C5567 + C79307 * C5675) * C95 +
           (C245 * C5572 + C79307 * C5680) * C81 +
           (C245 * C5568 + C79307 * C5676) * C93) *
              C79308 * C79027 * C5564 +
          ((C245 * C5569 + C79307 * C5677) * C93 +
           (C245 * C5573 + C79307 * C5681) * C81 +
           (C245 * C5570 + C79307 * C5678) * C95 +
           (C245 * C5574 + C79307 * C5682) * C82) *
              C79308 * C79027 * C5565) *
         C78981) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C245 * C96 + C79307 * C246) * C93 +
            (C245 * C102 + C79307 * C252) * C81 + C275 * C95 + C276 * C82) *
               C79308 * C9011 -
           (C1938 * C82 + C1939 * C95 + (C245 * C1690 + C79307 * C1914) * C81 +
            (C245 * C1682 + C79307 * C1906) * C93) *
               C79308 * C9012 +
           ((C245 * C1683 + C79307 * C1907) * C93 +
            (C245 * C1691 + C79307 * C1915) * C81 + C1940 * C95 + C1941 * C82) *
               C79308 * C79262) *
              C79009 * C79297 +
          ((C1939 * C93 + C1938 * C81 + C1942 * C95 + C1943 * C82) * C79308 *
               C9012 -
           (C277 * C82 + C278 * C95 + C276 * C81 + C275 * C93) * C79308 *
               C9011 -
           (C1944 * C82 + C1945 * C95 + C1941 * C81 + C1940 * C93) * C79308 *
               C79262) *
              C79009 * C79281 +
          ((C278 * C93 + C277 * C81 + C279 * C95 + C280 * C82) * C79308 *
               C9011 -
           (C3407 * C82 + C3408 * C95 + C1943 * C81 + C1942 * C93) * C79308 *
               C9012 +
           (C1945 * C93 + C1944 * C81 + (C245 * C1688 + C79307 * C1912) * C95 +
            (C245 * C1696 + C79307 * C1920) * C82) *
               C79308 * C79262) *
              C79009 * C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C245 * C96 + C79307 * C246) * C93 +
            (C245 * C102 + C79307 * C252) * C81 + C275 * C95 + C276 * C82) *
               C79308 * C9011 -
           (C1938 * C82 + C1939 * C95 + (C245 * C1690 + C79307 * C1914) * C81 +
            (C245 * C1682 + C79307 * C1906) * C93) *
               C79308 * C9012 +
           ((C245 * C1683 + C79307 * C1907) * C93 +
            (C245 * C1691 + C79307 * C1915) * C81 + C1940 * C95 + C1941 * C82) *
               C79308 * C79262) *
              C79300 +
          (((C245 * C3931 + C79307 * C4165) * C93 +
            (C245 * C3935 + C79307 * C4169) * C81 + C4182 * C95 + C4183 * C82) *
               C79308 * C9012 -
           (C1005 * C82 + C1006 * C95 + (C245 * C757 + C79307 * C981) * C81 +
            (C245 * C749 + C79307 * C973) * C93) *
               C79308 * C9011 -
           ((C245 * C6047 + C79307 * C6231) * C82 +
            (C245 * C6041 + C79307 * C6225) * C95 +
            (C245 * C6048 + C79307 * C6232) * C81 +
            (C245 * C6042 + C79307 * C6226) * C93) *
               C79308 * C79262) *
              C79285 +
          (((C245 * C750 + C79307 * C974) * C93 +
            (C245 * C758 + C79307 * C982) * C81 + C1007 * C95 + C1008 * C82) *
               C79308 * C9011 -
           (C7693 * C82 + C7694 * C95 + (C245 * C6050 + C79307 * C6234) * C81 +
            (C245 * C6044 + C79307 * C6228) * C93) *
               C79308 * C9012 +
           ((C245 * C6045 + C79307 * C6229) * C93 +
            (C245 * C6051 + C79307 * C6235) * C81 +
            (C245 * C6046 + C79307 * C6230) * C95 +
            (C245 * C6052 + C79307 * C6236) * C82) *
               C79308 * C79262) *
              C79259) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eeyx[14] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C166 +
            (C93 * C167 + C81 * C324 + C95 * C168 + C82 * C325) * C79308) *
               C79307 * C79027 * C79300 -
           ((C95 * C858 + C82 * C1086 + C93 * C859 + C81 * C1087) * C79308 +
            (C95 * C748 + C82 * C756 + C93 * C749 + C81 * C757) * C166) *
               C79307 * C79027 * C79285 +
           ((C93 * C750 + C81 * C758 + C95 * C751 + C82 * C759) * C166 +
            (C93 * C860 + C81 * C1088 + C95 * C861 + C82 * C1089) * C79308) *
               C79307 * C79027 * C79259) *
              C745 +
          (((C93 * C748 + C81 * C756 + C95 * C752 + C82 * C760) * C166 +
            (C93 * C858 + C81 * C1086 + C95 * C862 + C82 * C1090) * C79308) *
               C79307 * C79027 * C79285 -
           ((C95 * C169 + C82 * C326 + C93 * C168 + C81 * C325) * C79308 +
            (C95 * C98 + C82 * C104 + C93 * C97 + C81 * C103) * C166) *
               C79307 * C79027 * C79300 -
           ((C95 * C863 + C82 * C1091 + C93 * C861 + C81 * C1089) * C79308 +
            (C95 * C753 + C82 * C761 + C93 * C751 + C81 * C759) * C166) *
               C79307 * C79027 * C79259) *
              C746 +
          (((C93 * C98 + C81 * C104 + C95 * C99 + C82 * C105) * C166 +
            (C93 * C169 + C81 * C326 + C95 * C170 + C82 * C327) * C79308) *
               C79307 * C79027 * C79300 -
           ((C95 * C864 + C82 * C1092 + C93 * C862 + C81 * C1090) * C79308 +
            (C95 * C754 + C82 * C762 + C93 * C752 + C81 * C760) * C166) *
               C79307 * C79027 * C79285 +
           ((C93 * C753 + C81 * C761 + C95 * C755 + C82 * C763) * C166 +
            (C93 * C863 + C81 * C1091 + C95 * C865 + C82 * C1093) * C79308) *
               C79307 * C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C166 +
           (C93 * C167 + C81 * C324 + C95 * C168 + C82 * C325) * C79308) *
              C79307 * C79027 * C79009 * C87 -
          ((C95 * C169 + C82 * C326 + C93 * C168 + C81 * C325) * C79308 +
           (C95 * C98 + C82 * C104 + C93 * C97 + C81 * C103) * C166) *
              C79307 * C79027 * C79009 * C88 +
          ((C93 * C98 + C81 * C104 + C95 * C99 + C82 * C105) * C166 +
           (C93 * C169 + C81 * C326 + C95 * C170 + C82 * C327) * C79308) *
              C79307 * C79027 * C79009 * C89 -
          ((C95 * C171 + C82 * C328 + C93 * C170 + C81 * C327) * C79308 +
           (C95 * C100 + C82 * C106 + C93 * C99 + C81 * C105) * C166) *
              C79307 * C79027 * C79009 * C90 +
          ((C93 * C100 + C81 * C106 + C95 * C101 + C82 * C107) * C166 +
           (C93 * C171 + C81 * C328 + C95 * C172 + C82 * C329) * C79308) *
              C79307 * C79027 * C79009 * C91)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C166 +
            (C93 * C167 + C81 * C324 + C95 * C168 + C82 * C325) * C79308) *
               C79307 * C79027 * C4921 -
           ((C95 * C858 + C82 * C1086 + C93 * C859 + C81 * C1087) * C79308 +
            (C95 * C748 + C82 * C756 + C93 * C749 + C81 * C757) * C166) *
               C79307 * C79027 * C4922 +
           ((C93 * C750 + C81 * C758 + C95 * C751 + C82 * C759) * C166 +
            (C93 * C860 + C81 * C1088 + C95 * C861 + C82 * C1089) * C79308) *
               C79307 * C79027 * C79259) *
              C79297 +
          (((C93 * C748 + C81 * C756 + C95 * C752 + C82 * C760) * C166 +
            (C93 * C858 + C81 * C1086 + C95 * C862 + C82 * C1090) * C79308) *
               C79307 * C79027 * C4922 -
           ((C95 * C169 + C82 * C326 + C93 * C168 + C81 * C325) * C79308 +
            (C95 * C98 + C82 * C104 + C93 * C97 + C81 * C103) * C166) *
               C79307 * C79027 * C4921 -
           ((C95 * C863 + C82 * C1091 + C93 * C861 + C81 * C1089) * C79308 +
            (C95 * C753 + C82 * C761 + C93 * C751 + C81 * C759) * C166) *
               C79307 * C79027 * C79259) *
              C79281 +
          (((C93 * C98 + C81 * C104 + C95 * C99 + C82 * C105) * C166 +
            (C93 * C169 + C81 * C326 + C95 * C170 + C82 * C327) * C79308) *
               C79307 * C79027 * C4921 -
           ((C95 * C864 + C82 * C1092 + C93 * C862 + C81 * C1090) * C79308 +
            (C95 * C754 + C82 * C762 + C93 * C752 + C81 * C760) * C166) *
               C79307 * C79027 * C4922 +
           ((C93 * C753 + C81 * C761 + C95 * C755 + C82 * C763) * C166 +
            (C93 * C863 + C81 * C1091 + C95 * C865 + C82 * C1093) * C79308) *
               C79307 * C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C166 +
           (C93 * C167 + C81 * C324 + C95 * C168 + C82 * C325) * C79308) *
              C79307 * C79027 * C5561 -
          ((C95 * C858 + C82 * C1086 + C93 * C859 + C81 * C1087) * C79308 +
           (C95 * C748 + C82 * C756 + C93 * C749 + C81 * C757) * C166) *
              C79307 * C79027 * C5562 +
          ((C93 * C750 + C81 * C758 + C95 * C751 + C82 * C759) * C166 +
           (C93 * C860 + C81 * C1088 + C95 * C861 + C82 * C1089) * C79308) *
              C79307 * C79027 * C5563 -
          ((C95 * C5625 + C82 * C5725 + C93 * C5626 + C81 * C5726) * C79308 +
           (C95 * C5567 + C82 * C5571 + C93 * C5568 + C81 * C5572) * C166) *
              C79307 * C79027 * C5564 +
          ((C93 * C5569 + C81 * C5573 + C95 * C5570 + C82 * C5574) * C166 +
           (C93 * C5627 + C81 * C5727 + C95 * C5628 + C82 * C5728) * C79308) *
              C79307 * C79027 * C5565) *
         C78981) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C166 +
            (C93 * C167 + C81 * C324 + C95 * C168 + C82 * C325) * C79308) *
               C79307 * C9011 -
           ((C95 * C1791 + C82 * C2019 + C93 * C1792 + C81 * C2020) * C79308 +
            (C95 * C1681 + C82 * C1689 + C93 * C1682 + C81 * C1690) * C166) *
               C79307 * C9012 +
           ((C93 * C1683 + C81 * C1691 + C95 * C1684 + C82 * C1692) * C166 +
            (C93 * C1793 + C81 * C2021 + C95 * C1794 + C82 * C2022) * C79308) *
               C79307 * C79262) *
              C79009 * C79297 +
          (((C93 * C1681 + C81 * C1689 + C95 * C1685 + C82 * C1693) * C166 +
            (C93 * C1791 + C81 * C2019 + C95 * C1795 + C82 * C2023) * C79308) *
               C79307 * C9012 -
           ((C95 * C169 + C82 * C326 + C93 * C168 + C81 * C325) * C79308 +
            (C95 * C98 + C82 * C104 + C93 * C97 + C81 * C103) * C166) *
               C79307 * C9011 -
           ((C95 * C1796 + C82 * C2024 + C93 * C1794 + C81 * C2022) * C79308 +
            (C95 * C1686 + C82 * C1694 + C93 * C1684 + C81 * C1692) * C166) *
               C79307 * C79262) *
              C79009 * C79281 +
          (((C93 * C98 + C81 * C104 + C95 * C99 + C82 * C105) * C166 +
            (C93 * C169 + C81 * C326 + C95 * C170 + C82 * C327) * C79308) *
               C79307 * C9011 -
           ((C95 * C1797 + C82 * C2025 + C93 * C1795 + C81 * C2023) * C79308 +
            (C95 * C1687 + C82 * C1695 + C93 * C1685 + C81 * C1693) * C166) *
               C79307 * C9012 +
           ((C93 * C1686 + C81 * C1694 + C95 * C1688 + C82 * C1696) * C166 +
            (C93 * C1796 + C81 * C2024 + C95 * C1798 + C82 * C2026) * C79308) *
               C79307 * C79262) *
              C79009 * C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C166 +
            (C93 * C167 + C81 * C324 + C95 * C168 + C82 * C325) * C79308) *
               C79307 * C9011 -
           ((C95 * C1791 + C82 * C2019 + C93 * C1792 + C81 * C2020) * C79308 +
            (C95 * C1681 + C82 * C1689 + C93 * C1682 + C81 * C1690) * C166) *
               C79307 * C9012 +
           ((C93 * C1683 + C81 * C1691 + C95 * C1684 + C82 * C1692) * C166 +
            (C93 * C1793 + C81 * C2021 + C95 * C1794 + C82 * C2022) * C79308) *
               C79307 * C79262) *
              C79300 +
          (((C93 * C3931 + C81 * C3935 + C95 * C3932 + C82 * C3936) * C166 +
            (C93 * C4047 + C81 * C4283 + C95 * C4048 + C82 * C4284) * C79308) *
               C79307 * C9012 -
           ((C95 * C858 + C82 * C1086 + C93 * C859 + C81 * C1087) * C79308 +
            (C95 * C748 + C82 * C756 + C93 * C749 + C81 * C757) * C166) *
               C79307 * C9011 -
           ((C95 * C6139 + C82 * C6311 + C93 * C6140 + C81 * C6312) * C79308 +
            (C95 * C6041 + C82 * C6047 + C93 * C6042 + C81 * C6048) * C166) *
               C79307 * C79262) *
              C79285 +
          (((C93 * C750 + C81 * C758 + C95 * C751 + C82 * C759) * C166 +
            (C93 * C860 + C81 * C1088 + C95 * C861 + C82 * C1089) * C79308) *
               C79307 * C9011 -
           ((C95 * C6141 + C82 * C6313 + C93 * C6142 + C81 * C6314) * C79308 +
            (C95 * C6043 + C82 * C6049 + C93 * C6044 + C81 * C6050) * C166) *
               C79307 * C9012 +
           ((C93 * C6045 + C81 * C6051 + C95 * C6046 + C82 * C6052) * C166 +
            (C93 * C6143 + C81 * C6315 + C95 * C6144 + C82 * C6316) * C79308) *
               C79307 * C79262) *
              C79259) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eeyy[14] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C372 * C96 + C380 + C380 + C79308 * C373) * C81 + C402 * C82) *
               C79307 * C79027 * C79300 -
           (C1201 * C82 +
            (C372 * C749 + C1180 + C1180 + C79308 * C1169) * C81) *
               C79307 * C79027 * C79285 +
           ((C372 * C750 + C1181 + C1181 + C79308 * C1170) * C81 +
            C1202 * C82) *
               C79307 * C79027 * C79259) *
              C745 +
          ((C1201 * C81 + C1203 * C82) * C79307 * C79027 * C79285 -
           (C403 * C82 + C402 * C81) * C79307 * C79027 * C79300 -
           (C1204 * C82 + C1202 * C81) * C79307 * C79027 * C79259) *
              C746 +
          ((C403 * C81 + C404 * C82) * C79307 * C79027 * C79300 -
           ((C372 * C754 + C1191 + C1191 + C79308 * C1174) * C82 +
            C1203 * C81) *
               C79307 * C79027 * C79285 +
           (C1204 * C81 +
            (C372 * C755 + C1192 + C1192 + C79308 * C1175) * C82) *
               C79307 * C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C372 * C96 + C380 + C380 + C79308 * C373) * C81 + C402 * C82) *
              C79307 * C79027 * C79009 * C87 -
          (C403 * C82 + C402 * C81) * C79307 * C79027 * C79009 * C88 +
          (C403 * C81 + C404 * C82) * C79307 * C79027 * C79009 * C89 -
          (C405 * C82 + C404 * C81) * C79307 * C79027 * C79009 * C90 +
          (C405 * C81 + (C372 * C101 + C393 + C393 + C79308 * C378) * C82) *
              C79307 * C79027 * C79009 * C91)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C372 * C96 + C380 + C380 + C79308 * C373) * C81 + C402 * C82) *
               C79307 * C79027 * C4921 -
           (C1201 * C82 +
            (C372 * C749 + C1180 + C1180 + C79308 * C1169) * C81) *
               C79307 * C79027 * C4922 +
           ((C372 * C750 + C1181 + C1181 + C79308 * C1170) * C81 +
            C1202 * C82) *
               C79307 * C79027 * C79259) *
              C79297 +
          ((C1201 * C81 + C1203 * C82) * C79307 * C79027 * C4922 -
           (C403 * C82 + C402 * C81) * C79307 * C79027 * C4921 -
           (C1204 * C82 + C1202 * C81) * C79307 * C79027 * C79259) *
              C79281 +
          ((C403 * C81 + C404 * C82) * C79307 * C79027 * C4921 -
           (C2902 * C82 + C1203 * C81) * C79307 * C79027 * C4922 +
           (C1204 * C81 +
            (C372 * C755 + C1192 + C1192 + C79308 * C1175) * C82) *
               C79307 * C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C372 * C96 + C380 + C380 + C79308 * C373) * C81 + C402 * C82) *
              C79307 * C79027 * C5561 -
          (C1201 * C82 + (C372 * C749 + C1180 + C1180 + C79308 * C1169) * C81) *
              C79307 * C79027 * C5562 +
          ((C372 * C750 + C1181 + C1181 + C79308 * C1170) * C81 + C1202 * C82) *
              C79307 * C79027 * C5563 -
          ((C372 * C5567 + C5776 + C5776 + C79308 * C5771) * C82 +
           (C372 * C5568 + C5777 + C5777 + C79308 * C5772) * C81) *
              C79307 * C79027 * C5564 +
          ((C372 * C5569 + C5778 + C5778 + C79308 * C5773) * C81 +
           (C372 * C5570 + C5779 + C5779 + C79308 * C5774) * C82) *
              C79307 * C79027 * C5565) *
         C78981) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C372 * C96 + C380 + C380 + C79308 * C373) * C81 + C402 * C82) *
               C79307 * C9011 -
           (C2134 * C82 +
            (C372 * C1682 + C2113 + C2113 + C79308 * C2102) * C81) *
               C79307 * C9012 +
           ((C372 * C1683 + C2114 + C2114 + C79308 * C2103) * C81 +
            C2135 * C82) *
               C79307 * C79262) *
              C79009 * C79297 +
          ((C2134 * C81 + C2136 * C82) * C79307 * C9012 -
           (C403 * C82 + C402 * C81) * C79307 * C9011 -
           (C2137 * C82 + C2135 * C81) * C79307 * C79262) *
              C79009 * C79281 +
          ((C403 * C81 + C404 * C82) * C79307 * C9011 -
           (C3548 * C82 + C2136 * C81) * C79307 * C9012 +
           (C2137 * C81 +
            (C372 * C1688 + C2125 + C2125 + C79308 * C2108) * C82) *
               C79307 * C79262) *
              C79009 * C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C372 * C96 + C380 + C380 + C79308 * C373) * C81 + C402 * C82) *
               C79307 * C9011 -
           (C2134 * C82 +
            (C372 * C1682 + C2113 + C2113 + C79308 * C2102) * C81) *
               C79307 * C9012 +
           ((C372 * C1683 + C2114 + C2114 + C79308 * C2103) * C81 +
            C2135 * C82) *
               C79307 * C79262) *
              C79300 +
          (((C372 * C3931 + C4390 + C4390 + C79308 * C4385) * C81 +
            C4402 * C82) *
               C79307 * C9012 -
           (C1201 * C82 +
            (C372 * C749 + C1180 + C1180 + C79308 * C1169) * C81) *
               C79307 * C9011 -
           ((C372 * C6041 + C6398 + C6398 + C79308 * C6391) * C82 +
            (C372 * C6042 + C6399 + C6399 + C79308 * C6392) * C81) *
               C79307 * C79262) *
              C79285 +
          (((C372 * C750 + C1181 + C1181 + C79308 * C1170) * C81 +
            C1202 * C82) *
               C79307 * C9011 -
           (C7898 * C82 +
            (C372 * C6044 + C6401 + C6401 + C79308 * C6394) * C81) *
               C79307 * C9012 +
           ((C372 * C6045 + C6402 + C6402 + C79308 * C6395) * C81 +
            (C372 * C6046 + C6403 + C6403 + C79308 * C6396) * C82) *
               C79307 * C79262) *
              C79259) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eeyz[14] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C245 * C96 + C79307 * C246) * C166 +
             (C245 * C167 + C79307 * C447) * C79308) *
                C81 +
            (C454 + C470) * C82) *
               C79027 * C79300 -
           ((C1303 + C1289) * C82 + ((C245 * C859 + C79307 * C1279) * C79308 +
                                     (C245 * C749 + C79307 * C973) * C166) *
                                        C81) *
               C79027 * C79285 +
           (((C245 * C750 + C79307 * C974) * C166 +
             (C245 * C860 + C79307 * C1280) * C79308) *
                C81 +
            (C1290 + C1304) * C82) *
               C79027 * C79259) *
              C745 +
          (((C1289 + C1303) * C81 + (C1293 + C1305) * C82) * C79027 * C79285 -
           ((C471 + C459) * C82 + (C470 + C454) * C81) * C79027 * C79300 -
           ((C1306 + C1298) * C82 + (C1304 + C1290) * C81) * C79027 * C79259) *
              C746 +
          (((C459 + C471) * C81 + (C460 + C472) * C82) * C79027 * C79300 -
           (((C245 * C864 + C79307 * C1284) * C79308 +
             (C245 * C754 + C79307 * C978) * C166) *
                C82 +
            (C1305 + C1293) * C81) *
               C79027 * C79285 +
           ((C1298 + C1306) * C81 + ((C245 * C755 + C79307 * C979) * C166 +
                                     (C245 * C865 + C79307 * C1285) * C79308) *
                                        C82) *
               C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C245 * C96 + C79307 * C246) * C166 +
            (C245 * C167 + C79307 * C447) * C79308) *
               C81 +
           (C454 + C470) * C82) *
              C79027 * C79009 * C87 -
          ((C471 + C459) * C82 + (C470 + C454) * C81) * C79027 * C79009 * C88 +
          ((C459 + C471) * C81 + (C460 + C472) * C82) * C79027 * C79009 * C89 -
          ((C473 + C465) * C82 + (C472 + C460) * C81) * C79027 * C79009 * C90 +
          ((C465 + C473) * C81 + ((C245 * C101 + C79307 * C251) * C166 +
                                  (C245 * C172 + C79307 * C452) * C79308) *
                                     C82) *
              C79027 * C79009 * C91)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C245 * C96 + C79307 * C246) * C166 +
             (C245 * C167 + C79307 * C447) * C79308) *
                C81 +
            (C454 + C470) * C82) *
               C79027 * C4921 -
           ((C1303 + C1289) * C82 + ((C245 * C859 + C79307 * C1279) * C79308 +
                                     (C245 * C749 + C79307 * C973) * C166) *
                                        C81) *
               C79027 * C4922 +
           (((C245 * C750 + C79307 * C974) * C166 +
             (C245 * C860 + C79307 * C1280) * C79308) *
                C81 +
            (C1290 + C1304) * C82) *
               C79027 * C79259) *
              C79297 +
          (((C1289 + C1303) * C81 + (C1293 + C1305) * C82) * C79027 * C4922 -
           ((C471 + C459) * C82 + (C470 + C454) * C81) * C79027 * C4921 -
           ((C1306 + C1298) * C82 + (C1304 + C1290) * C81) * C79027 * C79259) *
              C79281 +
          (((C459 + C471) * C81 + (C460 + C472) * C82) * C79027 * C4921 -
           ((C2974 + C2972) * C82 + (C1305 + C1293) * C81) * C79027 * C4922 +
           ((C1298 + C1306) * C81 + ((C245 * C755 + C79307 * C979) * C166 +
                                     (C245 * C865 + C79307 * C1285) * C79308) *
                                        C82) *
               C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C245 * C96 + C79307 * C246) * C166 +
            (C245 * C167 + C79307 * C447) * C79308) *
               C81 +
           (C454 + C470) * C82) *
              C79027 * C5561 -
          ((C1303 + C1289) * C82 + ((C245 * C859 + C79307 * C1279) * C79308 +
                                    (C245 * C749 + C79307 * C973) * C166) *
                                       C81) *
              C79027 * C5562 +
          (((C245 * C750 + C79307 * C974) * C166 +
            (C245 * C860 + C79307 * C1280) * C79308) *
               C81 +
           (C1290 + C1304) * C82) *
              C79027 * C5563 -
          (((C245 * C5625 + C79307 * C5821) * C79308 +
            (C245 * C5567 + C79307 * C5675) * C166) *
               C82 +
           ((C245 * C5626 + C79307 * C5822) * C79308 +
            (C245 * C5568 + C79307 * C5676) * C166) *
               C81) *
              C79027 * C5564 +
          (((C245 * C5569 + C79307 * C5677) * C166 +
            (C245 * C5627 + C79307 * C5823) * C79308) *
               C81 +
           ((C245 * C5570 + C79307 * C5678) * C166 +
            (C245 * C5628 + C79307 * C5824) * C79308) *
               C82) *
              C79027 * C5565) *
         C78981) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C245 * C96 + C79307 * C246) * C166 +
             (C245 * C167 + C79307 * C447) * C79308) *
                C81 +
            (C454 + C470) * C82) *
               C9011 -
           ((C2236 + C2222) * C82 + ((C245 * C1792 + C79307 * C2212) * C79308 +
                                     (C245 * C1682 + C79307 * C1906) * C166) *
                                        C81) *
               C9012 +
           (((C245 * C1683 + C79307 * C1907) * C166 +
             (C245 * C1793 + C79307 * C2213) * C79308) *
                C81 +
            (C2223 + C2237) * C82) *
               C79262) *
              C79009 * C79297 +
          (((C2222 + C2236) * C81 + (C2226 + C2238) * C82) * C9012 -
           ((C471 + C459) * C82 + (C470 + C454) * C81) * C9011 -
           ((C2239 + C2231) * C82 + (C2237 + C2223) * C81) * C79262) *
              C79009 * C79281 +
          (((C459 + C471) * C81 + (C460 + C472) * C82) * C9011 -
           ((C3620 + C3618) * C82 + (C2238 + C2226) * C81) * C9012 +
           ((C2231 + C2239) * C81 + ((C245 * C1688 + C79307 * C1912) * C166 +
                                     (C245 * C1798 + C79307 * C2218) * C79308) *
                                        C82) *
               C79262) *
              C79009 * C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C245 * C96 + C79307 * C246) * C166 +
             (C245 * C167 + C79307 * C447) * C79308) *
                C81 +
            (C454 + C470) * C82) *
               C9011 -
           ((C2236 + C2222) * C82 + ((C245 * C1792 + C79307 * C2212) * C79308 +
                                     (C245 * C1682 + C79307 * C1906) * C166) *
                                        C81) *
               C9012 +
           (((C245 * C1683 + C79307 * C1907) * C166 +
             (C245 * C1793 + C79307 * C2213) * C79308) *
                C81 +
            (C2223 + C2237) * C82) *
               C79262) *
              C79300 +
          ((((C245 * C3931 + C79307 * C4165) * C166 +
             (C245 * C4047 + C79307 * C4501) * C79308) *
                C81 +
            (C4506 + C4514) * C82) *
               C9012 -
           ((C1303 + C1289) * C82 + ((C245 * C859 + C79307 * C1279) * C79308 +
                                     (C245 * C749 + C79307 * C973) * C166) *
                                        C81) *
               C9011 -
           (((C245 * C6139 + C79307 * C6477) * C79308 +
             (C245 * C6041 + C79307 * C6225) * C166) *
                C82 +
            ((C245 * C6140 + C79307 * C6478) * C79308 +
             (C245 * C6042 + C79307 * C6226) * C166) *
                C81) *
               C79262) *
              C79285 +
          ((((C245 * C750 + C79307 * C974) * C166 +
             (C245 * C860 + C79307 * C1280) * C79308) *
                C81 +
            (C1290 + C1304) * C82) *
               C9011 -
           ((C8002 + C8000) * C82 + ((C245 * C6142 + C79307 * C6480) * C79308 +
                                     (C245 * C6044 + C79307 * C6228) * C166) *
                                        C81) *
               C9012 +
           (((C245 * C6045 + C79307 * C6229) * C166 +
             (C245 * C6143 + C79307 * C6481) * C79308) *
                C81 +
            ((C245 * C6046 + C79307 * C6230) * C166 +
             (C245 * C6144 + C79307 * C6482) * C79308) *
                C82) *
               C79262) *
              C79259) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eezx[14] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C245 +
            (C93 * C246 + C81 * C515 + C95 * C247 + C82 * C516) * C79307) *
               C79308 * C79027 * C79300 -
           ((C95 * C972 + C82 * C1380 + C93 * C973 + C81 * C1381) * C79307 +
            (C95 * C748 + C82 * C756 + C93 * C749 + C81 * C757) * C245) *
               C79308 * C79027 * C79285 +
           ((C93 * C750 + C81 * C758 + C95 * C751 + C82 * C759) * C245 +
            (C93 * C974 + C81 * C1382 + C95 * C975 + C82 * C1383) * C79307) *
               C79308 * C79027 * C79259) *
              C745 +
          (((C93 * C748 + C81 * C756 + C95 * C752 + C82 * C760) * C245 +
            (C93 * C972 + C81 * C1380 + C95 * C976 + C82 * C1384) * C79307) *
               C79308 * C79027 * C79285 -
           ((C95 * C248 + C82 * C517 + C93 * C247 + C81 * C516) * C79307 +
            (C95 * C98 + C82 * C104 + C93 * C97 + C81 * C103) * C245) *
               C79308 * C79027 * C79300 -
           ((C95 * C977 + C82 * C1385 + C93 * C975 + C81 * C1383) * C79307 +
            (C95 * C753 + C82 * C761 + C93 * C751 + C81 * C759) * C245) *
               C79308 * C79027 * C79259) *
              C746 +
          (((C93 * C98 + C81 * C104 + C95 * C99 + C82 * C105) * C245 +
            (C93 * C248 + C81 * C517 + C95 * C249 + C82 * C518) * C79307) *
               C79308 * C79027 * C79300 -
           ((C95 * C978 + C82 * C1386 + C93 * C976 + C81 * C1384) * C79307 +
            (C95 * C754 + C82 * C762 + C93 * C752 + C81 * C760) * C245) *
               C79308 * C79027 * C79285 +
           ((C93 * C753 + C81 * C761 + C95 * C755 + C82 * C763) * C245 +
            (C93 * C977 + C81 * C1385 + C95 * C979 + C82 * C1387) * C79307) *
               C79308 * C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C245 +
           (C93 * C246 + C81 * C515 + C95 * C247 + C82 * C516) * C79307) *
              C79308 * C79027 * C79009 * C87 -
          ((C95 * C248 + C82 * C517 + C93 * C247 + C81 * C516) * C79307 +
           (C95 * C98 + C82 * C104 + C93 * C97 + C81 * C103) * C245) *
              C79308 * C79027 * C79009 * C88 +
          ((C93 * C98 + C81 * C104 + C95 * C99 + C82 * C105) * C245 +
           (C93 * C248 + C81 * C517 + C95 * C249 + C82 * C518) * C79307) *
              C79308 * C79027 * C79009 * C89 -
          ((C95 * C250 + C82 * C519 + C93 * C249 + C81 * C518) * C79307 +
           (C95 * C100 + C82 * C106 + C93 * C99 + C81 * C105) * C245) *
              C79308 * C79027 * C79009 * C90 +
          ((C93 * C100 + C81 * C106 + C95 * C101 + C82 * C107) * C245 +
           (C93 * C250 + C81 * C519 + C95 * C251 + C82 * C520) * C79307) *
              C79308 * C79027 * C79009 * C91)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C245 +
            (C93 * C246 + C81 * C515 + C95 * C247 + C82 * C516) * C79307) *
               C79308 * C79027 * C4921 -
           ((C95 * C972 + C82 * C1380 + C93 * C973 + C81 * C1381) * C79307 +
            (C95 * C748 + C82 * C756 + C93 * C749 + C81 * C757) * C245) *
               C79308 * C79027 * C4922 +
           ((C93 * C750 + C81 * C758 + C95 * C751 + C82 * C759) * C245 +
            (C93 * C974 + C81 * C1382 + C95 * C975 + C82 * C1383) * C79307) *
               C79308 * C79027 * C79259) *
              C79297 +
          (((C93 * C748 + C81 * C756 + C95 * C752 + C82 * C760) * C245 +
            (C93 * C972 + C81 * C1380 + C95 * C976 + C82 * C1384) * C79307) *
               C79308 * C79027 * C4922 -
           ((C95 * C248 + C82 * C517 + C93 * C247 + C81 * C516) * C79307 +
            (C95 * C98 + C82 * C104 + C93 * C97 + C81 * C103) * C245) *
               C79308 * C79027 * C4921 -
           ((C95 * C977 + C82 * C1385 + C93 * C975 + C81 * C1383) * C79307 +
            (C95 * C753 + C82 * C761 + C93 * C751 + C81 * C759) * C245) *
               C79308 * C79027 * C79259) *
              C79281 +
          (((C93 * C98 + C81 * C104 + C95 * C99 + C82 * C105) * C245 +
            (C93 * C248 + C81 * C517 + C95 * C249 + C82 * C518) * C79307) *
               C79308 * C79027 * C4921 -
           ((C95 * C978 + C82 * C1386 + C93 * C976 + C81 * C1384) * C79307 +
            (C95 * C754 + C82 * C762 + C93 * C752 + C81 * C760) * C245) *
               C79308 * C79027 * C4922 +
           ((C93 * C753 + C81 * C761 + C95 * C755 + C82 * C763) * C245 +
            (C93 * C977 + C81 * C1385 + C95 * C979 + C82 * C1387) * C79307) *
               C79308 * C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C245 +
           (C93 * C246 + C81 * C515 + C95 * C247 + C82 * C516) * C79307) *
              C79308 * C79027 * C5561 -
          ((C95 * C972 + C82 * C1380 + C93 * C973 + C81 * C1381) * C79307 +
           (C95 * C748 + C82 * C756 + C93 * C749 + C81 * C757) * C245) *
              C79308 * C79027 * C5562 +
          ((C93 * C750 + C81 * C758 + C95 * C751 + C82 * C759) * C245 +
           (C93 * C974 + C81 * C1382 + C95 * C975 + C82 * C1383) * C79307) *
              C79308 * C79027 * C5563 -
          ((C95 * C5675 + C82 * C5867 + C93 * C5676 + C81 * C5868) * C79307 +
           (C95 * C5567 + C82 * C5571 + C93 * C5568 + C81 * C5572) * C245) *
              C79308 * C79027 * C5564 +
          ((C93 * C5569 + C81 * C5573 + C95 * C5570 + C82 * C5574) * C245 +
           (C93 * C5677 + C81 * C5869 + C95 * C5678 + C82 * C5870) * C79307) *
              C79308 * C79027 * C5565) *
         C78981) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C245 +
            (C93 * C246 + C81 * C515 + C95 * C247 + C82 * C516) * C79307) *
               C79308 * C9011 -
           ((C95 * C1905 + C82 * C2313 + C93 * C1906 + C81 * C2314) * C79307 +
            (C95 * C1681 + C82 * C1689 + C93 * C1682 + C81 * C1690) * C245) *
               C79308 * C9012 +
           ((C93 * C1683 + C81 * C1691 + C95 * C1684 + C82 * C1692) * C245 +
            (C93 * C1907 + C81 * C2315 + C95 * C1908 + C82 * C2316) * C79307) *
               C79308 * C79262) *
              C79009 * C79297 +
          (((C93 * C1681 + C81 * C1689 + C95 * C1685 + C82 * C1693) * C245 +
            (C93 * C1905 + C81 * C2313 + C95 * C1909 + C82 * C2317) * C79307) *
               C79308 * C9012 -
           ((C95 * C248 + C82 * C517 + C93 * C247 + C81 * C516) * C79307 +
            (C95 * C98 + C82 * C104 + C93 * C97 + C81 * C103) * C245) *
               C79308 * C9011 -
           ((C95 * C1910 + C82 * C2318 + C93 * C1908 + C81 * C2316) * C79307 +
            (C95 * C1686 + C82 * C1694 + C93 * C1684 + C81 * C1692) * C245) *
               C79308 * C79262) *
              C79009 * C79281 +
          (((C93 * C98 + C81 * C104 + C95 * C99 + C82 * C105) * C245 +
            (C93 * C248 + C81 * C517 + C95 * C249 + C82 * C518) * C79307) *
               C79308 * C9011 -
           ((C95 * C1911 + C82 * C2319 + C93 * C1909 + C81 * C2317) * C79307 +
            (C95 * C1687 + C82 * C1695 + C93 * C1685 + C81 * C1693) * C245) *
               C79308 * C9012 +
           ((C93 * C1686 + C81 * C1694 + C95 * C1688 + C82 * C1696) * C245 +
            (C93 * C1910 + C81 * C2318 + C95 * C1912 + C82 * C2320) * C79307) *
               C79308 * C79262) *
              C79009 * C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C245 +
            (C93 * C246 + C81 * C515 + C95 * C247 + C82 * C516) * C79307) *
               C79308 * C9011 -
           ((C95 * C1905 + C82 * C2313 + C93 * C1906 + C81 * C2314) * C79307 +
            (C95 * C1681 + C82 * C1689 + C93 * C1682 + C81 * C1690) * C245) *
               C79308 * C9012 +
           ((C93 * C1683 + C81 * C1691 + C95 * C1684 + C82 * C1692) * C245 +
            (C93 * C1907 + C81 * C2315 + C95 * C1908 + C82 * C2316) * C79307) *
               C79308 * C79262) *
              C79300 +
          (((C93 * C3931 + C81 * C3935 + C95 * C3932 + C82 * C3936) * C245 +
            (C93 * C4165 + C81 * C4613 + C95 * C4166 + C82 * C4614) * C79307) *
               C79308 * C9012 -
           ((C95 * C972 + C82 * C1380 + C93 * C973 + C81 * C1381) * C79307 +
            (C95 * C748 + C82 * C756 + C93 * C749 + C81 * C757) * C245) *
               C79308 * C9011 -
           ((C95 * C6225 + C82 * C6557 + C93 * C6226 + C81 * C6558) * C79307 +
            (C95 * C6041 + C82 * C6047 + C93 * C6042 + C81 * C6048) * C245) *
               C79308 * C79262) *
              C79285 +
          (((C93 * C750 + C81 * C758 + C95 * C751 + C82 * C759) * C245 +
            (C93 * C974 + C81 * C1382 + C95 * C975 + C82 * C1383) * C79307) *
               C79308 * C9011 -
           ((C95 * C6227 + C82 * C6559 + C93 * C6228 + C81 * C6560) * C79307 +
            (C95 * C6043 + C82 * C6049 + C93 * C6044 + C81 * C6050) * C245) *
               C79308 * C9012 +
           ((C93 * C6045 + C81 * C6051 + C95 * C6046 + C82 * C6052) * C245 +
            (C93 * C6229 + C81 * C6561 + C95 * C6230 + C82 * C6562) * C79307) *
               C79308 * C79262) *
              C79259) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eezy[14] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C166 * C96 + C79308 * C167) * C245 +
             (C166 * C246 + C79308 * C563) * C79307) *
                C81 +
            (C570 + C586) * C82) *
               C79027 * C79300 -
           ((C1487 + C1473) * C82 + ((C166 * C973 + C79308 * C1463) * C79307 +
                                     (C166 * C749 + C79308 * C859) * C245) *
                                        C81) *
               C79027 * C79285 +
           (((C166 * C750 + C79308 * C860) * C245 +
             (C166 * C974 + C79308 * C1464) * C79307) *
                C81 +
            (C1474 + C1488) * C82) *
               C79027 * C79259) *
              C745 +
          (((C1473 + C1487) * C81 + (C1477 + C1489) * C82) * C79027 * C79285 -
           ((C587 + C575) * C82 + (C586 + C570) * C81) * C79027 * C79300 -
           ((C1490 + C1482) * C82 + (C1488 + C1474) * C81) * C79027 * C79259) *
              C746 +
          (((C575 + C587) * C81 + (C576 + C588) * C82) * C79027 * C79300 -
           (((C166 * C978 + C79308 * C1468) * C79307 +
             (C166 * C754 + C79308 * C864) * C245) *
                C82 +
            (C1489 + C1477) * C81) *
               C79027 * C79285 +
           ((C1482 + C1490) * C81 + ((C166 * C755 + C79308 * C865) * C245 +
                                     (C166 * C979 + C79308 * C1469) * C79307) *
                                        C82) *
               C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C166 * C96 + C79308 * C167) * C245 +
            (C166 * C246 + C79308 * C563) * C79307) *
               C81 +
           (C570 + C586) * C82) *
              C79027 * C79009 * C87 -
          ((C587 + C575) * C82 + (C586 + C570) * C81) * C79027 * C79009 * C88 +
          ((C575 + C587) * C81 + (C576 + C588) * C82) * C79027 * C79009 * C89 -
          ((C589 + C581) * C82 + (C588 + C576) * C81) * C79027 * C79009 * C90 +
          ((C581 + C589) * C81 + ((C166 * C101 + C79308 * C172) * C245 +
                                  (C166 * C251 + C79308 * C568) * C79307) *
                                     C82) *
              C79027 * C79009 * C91)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C166 * C96 + C79308 * C167) * C245 +
             (C166 * C246 + C79308 * C563) * C79307) *
                C81 +
            (C570 + C586) * C82) *
               C79027 * C4921 -
           ((C1487 + C1473) * C82 + ((C166 * C973 + C79308 * C1463) * C79307 +
                                     (C166 * C749 + C79308 * C859) * C245) *
                                        C81) *
               C79027 * C4922 +
           (((C166 * C750 + C79308 * C860) * C245 +
             (C166 * C974 + C79308 * C1464) * C79307) *
                C81 +
            (C1474 + C1488) * C82) *
               C79027 * C79259) *
              C79297 +
          (((C1473 + C1487) * C81 + (C1477 + C1489) * C82) * C79027 * C4922 -
           ((C587 + C575) * C82 + (C586 + C570) * C81) * C79027 * C4921 -
           ((C1490 + C1482) * C82 + (C1488 + C1474) * C81) * C79027 * C79259) *
              C79281 +
          (((C575 + C587) * C81 + (C576 + C588) * C82) * C79027 * C4921 -
           ((C3113 + C3111) * C82 + (C1489 + C1477) * C81) * C79027 * C4922 +
           ((C1482 + C1490) * C81 + ((C166 * C755 + C79308 * C865) * C245 +
                                     (C166 * C979 + C79308 * C1469) * C79307) *
                                        C82) *
               C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C166 * C96 + C79308 * C167) * C245 +
            (C166 * C246 + C79308 * C563) * C79307) *
               C81 +
           (C570 + C586) * C82) *
              C79027 * C5561 -
          ((C1487 + C1473) * C82 + ((C166 * C973 + C79308 * C1463) * C79307 +
                                    (C166 * C749 + C79308 * C859) * C245) *
                                       C81) *
              C79027 * C5562 +
          (((C166 * C750 + C79308 * C860) * C245 +
            (C166 * C974 + C79308 * C1464) * C79307) *
               C81 +
           (C1474 + C1488) * C82) *
              C79027 * C5563 -
          (((C166 * C5675 + C79308 * C5913) * C79307 +
            (C166 * C5567 + C79308 * C5625) * C245) *
               C82 +
           ((C166 * C5676 + C79308 * C5914) * C79307 +
            (C166 * C5568 + C79308 * C5626) * C245) *
               C81) *
              C79027 * C5564 +
          (((C166 * C5569 + C79308 * C5627) * C245 +
            (C166 * C5677 + C79308 * C5915) * C79307) *
               C81 +
           ((C166 * C5570 + C79308 * C5628) * C245 +
            (C166 * C5678 + C79308 * C5916) * C79307) *
               C82) *
              C79027 * C5565) *
         C78981) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C166 * C96 + C79308 * C167) * C245 +
             (C166 * C246 + C79308 * C563) * C79307) *
                C81 +
            (C570 + C586) * C82) *
               C9011 -
           ((C2420 + C2406) * C82 + ((C166 * C1906 + C79308 * C2396) * C79307 +
                                     (C166 * C1682 + C79308 * C1792) * C245) *
                                        C81) *
               C9012 +
           (((C166 * C1683 + C79308 * C1793) * C245 +
             (C166 * C1907 + C79308 * C2397) * C79307) *
                C81 +
            (C2407 + C2421) * C82) *
               C79262) *
              C79009 * C79297 +
          (((C2406 + C2420) * C81 + (C2410 + C2422) * C82) * C9012 -
           ((C587 + C575) * C82 + (C586 + C570) * C81) * C9011 -
           ((C2423 + C2415) * C82 + (C2421 + C2407) * C81) * C79262) *
              C79009 * C79281 +
          (((C575 + C587) * C81 + (C576 + C588) * C82) * C9011 -
           ((C3759 + C3757) * C82 + (C2422 + C2410) * C81) * C9012 +
           ((C2415 + C2423) * C81 + ((C166 * C1688 + C79308 * C1798) * C245 +
                                     (C166 * C1912 + C79308 * C2402) * C79307) *
                                        C82) *
               C79262) *
              C79009 * C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C166 * C96 + C79308 * C167) * C245 +
             (C166 * C246 + C79308 * C563) * C79307) *
                C81 +
            (C570 + C586) * C82) *
               C9011 -
           ((C2420 + C2406) * C82 + ((C166 * C1906 + C79308 * C2396) * C79307 +
                                     (C166 * C1682 + C79308 * C1792) * C245) *
                                        C81) *
               C9012 +
           (((C166 * C1683 + C79308 * C1793) * C245 +
             (C166 * C1907 + C79308 * C2397) * C79307) *
                C81 +
            (C2407 + C2421) * C82) *
               C79262) *
              C79300 +
          ((((C166 * C3931 + C79308 * C4047) * C245 +
             (C166 * C4165 + C79308 * C4715) * C79307) *
                C81 +
            (C4720 + C4728) * C82) *
               C9012 -
           ((C1487 + C1473) * C82 + ((C166 * C973 + C79308 * C1463) * C79307 +
                                     (C166 * C749 + C79308 * C859) * C245) *
                                        C81) *
               C9011 -
           (((C166 * C6225 + C79308 * C6637) * C79307 +
             (C166 * C6041 + C79308 * C6139) * C245) *
                C82 +
            ((C166 * C6226 + C79308 * C6638) * C79307 +
             (C166 * C6042 + C79308 * C6140) * C245) *
                C81) *
               C79262) *
              C79285 +
          ((((C166 * C750 + C79308 * C860) * C245 +
             (C166 * C974 + C79308 * C1464) * C79307) *
                C81 +
            (C1474 + C1488) * C82) *
               C9011 -
           ((C8205 + C8203) * C82 + ((C166 * C6228 + C79308 * C6640) * C79307 +
                                     (C166 * C6044 + C79308 * C6142) * C245) *
                                        C81) *
               C9012 +
           (((C166 * C6045 + C79308 * C6143) * C245 +
             (C166 * C6229 + C79308 * C6641) * C79307) *
                C81 +
            ((C166 * C6046 + C79308 * C6144) * C245 +
             (C166 * C6230 + C79308 * C6642) * C79307) *
                C82) *
               C79262) *
              C79259) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eezz[14] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C631 * C96 + C639 + C639 + C79307 * C632) * C79308 * C81 +
            C665 * C82) *
               C79027 * C79300 -
           (C1601 * C82 +
            (C631 * C749 + C1576 + C1576 + C79307 * C1565) * C79308 * C81) *
               C79027 * C79285 +
           ((C631 * C750 + C1577 + C1577 + C79307 * C1566) * C79308 * C81 +
            C1602 * C82) *
               C79027 * C79259) *
              C745 +
          ((C1601 * C81 + C1603 * C82) * C79027 * C79285 -
           (C666 * C82 + C665 * C81) * C79027 * C79300 -
           (C1604 * C82 + C1602 * C81) * C79027 * C79259) *
              C746 +
          ((C666 * C81 + C667 * C82) * C79027 * C79300 -
           ((C631 * C754 + C1587 + C1587 + C79307 * C1570) * C79308 * C82 +
            C1603 * C81) *
               C79027 * C79285 +
           (C1604 * C81 +
            (C631 * C755 + C1588 + C1588 + C79307 * C1571) * C79308 * C82) *
               C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C631 * C96 + C639 + C639 + C79307 * C632) * C79308 * C81 +
           C665 * C82) *
              C79027 * C79009 * C87 -
          (C666 * C82 + C665 * C81) * C79027 * C79009 * C88 +
          (C666 * C81 + C667 * C82) * C79027 * C79009 * C89 -
          (C668 * C82 + C667 * C81) * C79027 * C79009 * C90 +
          (C668 * C81 +
           (C631 * C101 + C652 + C652 + C79307 * C637) * C79308 * C82) *
              C79027 * C79009 * C91)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C631 * C96 + C639 + C639 + C79307 * C632) * C79308 * C81 +
            C665 * C82) *
               C79027 * C4921 -
           (C1601 * C82 +
            (C631 * C749 + C1576 + C1576 + C79307 * C1565) * C79308 * C81) *
               C79027 * C4922 +
           ((C631 * C750 + C1577 + C1577 + C79307 * C1566) * C79308 * C81 +
            C1602 * C82) *
               C79027 * C79259) *
              C79297 +
          ((C1601 * C81 + C1603 * C82) * C79027 * C4922 -
           (C666 * C82 + C665 * C81) * C79027 * C4921 -
           (C1604 * C82 + C1602 * C81) * C79027 * C79259) *
              C79281 +
          ((C666 * C81 + C667 * C82) * C79027 * C4921 -
           (C3187 * C82 + C1603 * C81) * C79027 * C4922 +
           (C1604 * C81 +
            (C631 * C755 + C1588 + C1588 + C79307 * C1571) * C79308 * C82) *
               C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C631 * C96 + C639 + C639 + C79307 * C632) * C79308 * C81 +
           C665 * C82) *
              C79027 * C5561 -
          (C1601 * C82 +
           (C631 * C749 + C1576 + C1576 + C79307 * C1565) * C79308 * C81) *
              C79027 * C5562 +
          ((C631 * C750 + C1577 + C1577 + C79307 * C1566) * C79308 * C81 +
           C1602 * C82) *
              C79027 * C5563 -
          ((C631 * C5567 + C5964 + C5964 + C79307 * C5959) * C79308 * C82 +
           (C631 * C5568 + C5965 + C5965 + C79307 * C5960) * C79308 * C81) *
              C79027 * C5564 +
          ((C631 * C5569 + C5966 + C5966 + C79307 * C5961) * C79308 * C81 +
           (C631 * C5570 + C5967 + C5967 + C79307 * C5962) * C79308 * C82) *
              C79027 * C5565) *
         C78981) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C631 * C96 + C639 + C639 + C79307 * C632) * C79308 * C81 +
            C665 * C82) *
               C9011 -
           (C2534 * C82 +
            (C631 * C1682 + C2509 + C2509 + C79307 * C2498) * C79308 * C81) *
               C9012 +
           ((C631 * C1683 + C2510 + C2510 + C79307 * C2499) * C79308 * C81 +
            C2535 * C82) *
               C79262) *
              C79009 * C79297 +
          ((C2534 * C81 + C2536 * C82) * C9012 -
           (C666 * C82 + C665 * C81) * C9011 -
           (C2537 * C82 + C2535 * C81) * C79262) *
              C79009 * C79281 +
          ((C666 * C81 + C667 * C82) * C9011 -
           (C3833 * C82 + C2536 * C81) * C9012 +
           (C2537 * C81 +
            (C631 * C1688 + C2521 + C2521 + C79307 * C2504) * C79308 * C82) *
               C79262) *
              C79009 * C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C631 * C96 + C639 + C639 + C79307 * C632) * C79308 * C81 +
            C665 * C82) *
               C9011 -
           (C2534 * C82 +
            (C631 * C1682 + C2509 + C2509 + C79307 * C2498) * C79308 * C81) *
               C9012 +
           ((C631 * C1683 + C2510 + C2510 + C79307 * C2499) * C79308 * C81 +
            C2535 * C82) *
               C79262) *
              C79300 +
          (((C631 * C3931 + C4832 + C4832 + C79307 * C4827) * C79308 * C81 +
            C4846 * C82) *
               C9012 -
           (C1601 * C82 +
            (C631 * C749 + C1576 + C1576 + C79307 * C1565) * C79308 * C81) *
               C9011 -
           ((C631 * C6041 + C6724 + C6724 + C79307 * C6717) * C79308 * C82 +
            (C631 * C6042 + C6725 + C6725 + C79307 * C6718) * C79308 * C81) *
               C79262) *
              C79285 +
          (((C631 * C750 + C1577 + C1577 + C79307 * C1566) * C79308 * C81 +
            C1602 * C82) *
               C9011 -
           (C8311 * C82 +
            (C631 * C6044 + C6727 + C6727 + C79307 * C6720) * C79308 * C81) *
               C9012 +
           ((C631 * C6045 + C6728 + C6728 + C79307 * C6721) * C79308 * C81 +
            (C631 * C6046 + C6729 + C6729 + C79307 * C6722) * C79308 * C82) *
               C79262) *
              C79259) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eexx[15] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C92 * C96 + C115 + C115 + C81 * C108 + C94 * C97 + C116 +
                       C116 + C82 * C109) *
                          C79307 * C79308 * C17509 -
                      (C94 * C1681 + C1706 + C1706 + C82 * C1697 + C92 * C1682 +
                       C1707 + C1707 + C81 * C1698) *
                          C79307 * C79308 * C79114) *
                         C79229 +
                     ((C92 * C3931 + C3944 + C3944 + C81 * C3939 + C94 * C3932 +
                       C3945 + C3945 + C82 * C3940) *
                          C79307 * C79308 * C79114 -
                      (C94 * C748 + C773 + C773 + C82 * C764 + C92 * C749 +
                       C774 + C774 + C81 * C765) *
                          C79307 * C79308 * C17509) *
                         C79072) *
                        C78986 +
                    (((C92 * C1681 + C1710 + C1710 + C81 * C1697 + C94 * C1685 +
                       C1711 + C1711 + C82 * C1701) *
                          C79307 * C79308 * C79114 -
                      (C94 * C98 + C117 + C117 + C82 * C110 + C92 * C97 + C118 +
                       C118 + C81 * C109) *
                          C79307 * C79308 * C17509) *
                         C79229 +
                     ((C92 * C748 + C777 + C777 + C81 * C764 + C94 * C752 +
                       C778 + C778 + C82 * C768) *
                          C79307 * C79308 * C17509 -
                      (C94 * C3933 + C3946 + C3946 + C82 * C3941 + C92 * C3932 +
                       C3947 + C3947 + C81 * C3940) *
                          C79307 * C79308 * C79114) *
                         C79072) *
                        C78995 +
                    (((C92 * C98 + C119 + C119 + C81 * C110 + C94 * C99 + C120 +
                       C120 + C82 * C111) *
                          C79307 * C79308 * C17509 -
                      (C94 * C1687 + C1714 + C1714 + C82 * C1703 + C92 * C1685 +
                       C1715 + C1715 + C81 * C1701) *
                          C79307 * C79308 * C79114) *
                         C79229 +
                     ((C92 * C3933 + C3948 + C3948 + C81 * C3941 + C94 * C3934 +
                       C3949 + C3949 + C82 * C3942) *
                          C79307 * C79308 * C79114 -
                      (C94 * C754 + C781 + C781 + C82 * C770 + C92 * C752 +
                       C782 + C782 + C81 * C768) *
                          C79307 * C79308 * C17509) *
                         C79072) *
                        C15086)) /
                  (p * q * std::sqrt(p + q));
    d2eexy[15] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C166 * C96 + C79308 * C167) * C93 +
             (C166 * C102 + C79308 * C173) * C81 + C196 * C95 + C197 * C82) *
                C79307 * C17509 -
            (C1824 * C82 + C1825 * C95 + (C166 * C1690 + C79308 * C1800) * C81 +
             (C166 * C1682 + C79308 * C1792) * C93) *
                C79307 * C79114) *
               C79229 +
           (((C166 * C3931 + C79308 * C4047) * C93 +
             (C166 * C3935 + C79308 * C4051) * C81 + C4064 * C95 +
             C4065 * C82) *
                C79307 * C79114 -
            (C891 * C82 + C892 * C95 + (C166 * C757 + C79308 * C867) * C81 +
             (C166 * C749 + C79308 * C859) * C93) *
                C79307 * C17509) *
               C79072) *
              C78986 +
          (((C1825 * C93 + C1824 * C81 + C1828 * C95 + C1829 * C82) * C79307 *
                C79114 -
            (C198 * C82 + C199 * C95 + C197 * C81 + C196 * C93) * C79307 *
                C17509) *
               C79229 +
           ((C892 * C93 + C891 * C81 + C895 * C95 + C896 * C82) * C79307 *
                C17509 -
            (C4066 * C82 + C4067 * C95 + C4065 * C81 + C4064 * C93) * C79307 *
                C79114) *
               C79072) *
              C78995 +
          (((C199 * C93 + C198 * C81 + C200 * C95 + C201 * C82) * C79307 *
                C17509 -
            (C3333 * C82 + C3334 * C95 + C1829 * C81 + C1828 * C93) * C79307 *
                C79114) *
               C79229 +
           ((C4067 * C93 + C4066 * C81 + (C166 * C3934 + C79308 * C4050) * C95 +
             (C166 * C3938 + C79308 * C4054) * C82) *
                C79307 * C79114 -
            (C2687 * C82 + C2688 * C95 + C896 * C81 + C895 * C93) * C79307 *
                C17509) *
               C79072) *
              C15086)) /
        (p * q * std::sqrt(p + q));
    d2eexz[15] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C245 * C96 + C79307 * C246) * C93 +
             (C245 * C102 + C79307 * C252) * C81 + C275 * C95 + C276 * C82) *
                C79308 * C17509 -
            (C1938 * C82 + C1939 * C95 + (C245 * C1690 + C79307 * C1914) * C81 +
             (C245 * C1682 + C79307 * C1906) * C93) *
                C79308 * C79114) *
               C79229 +
           (((C245 * C3931 + C79307 * C4165) * C93 +
             (C245 * C3935 + C79307 * C4169) * C81 + C4182 * C95 +
             C4183 * C82) *
                C79308 * C79114 -
            (C1005 * C82 + C1006 * C95 + (C245 * C757 + C79307 * C981) * C81 +
             (C245 * C749 + C79307 * C973) * C93) *
                C79308 * C17509) *
               C79072) *
              C78986 +
          (((C1939 * C93 + C1938 * C81 + C1942 * C95 + C1943 * C82) * C79308 *
                C79114 -
            (C277 * C82 + C278 * C95 + C276 * C81 + C275 * C93) * C79308 *
                C17509) *
               C79229 +
           ((C1006 * C93 + C1005 * C81 + C1009 * C95 + C1010 * C82) * C79308 *
                C17509 -
            (C4184 * C82 + C4185 * C95 + C4183 * C81 + C4182 * C93) * C79308 *
                C79114) *
               C79072) *
              C78995 +
          (((C278 * C93 + C277 * C81 + C279 * C95 + C280 * C82) * C79308 *
                C17509 -
            (C3407 * C82 + C3408 * C95 + C1943 * C81 + C1942 * C93) * C79308 *
                C79114) *
               C79229 +
           ((C4185 * C93 + C4184 * C81 + (C245 * C3934 + C79307 * C4168) * C95 +
             (C245 * C3938 + C79307 * C4172) * C82) *
                C79308 * C79114 -
            (C2761 * C82 + C2762 * C95 + C1010 * C81 + C1009 * C93) * C79308 *
                C17509) *
               C79072) *
              C15086)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[15] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C166 +
             (C93 * C167 + C81 * C324 + C95 * C168 + C82 * C325) * C79308) *
                C79307 * C17509 -
            ((C95 * C1791 + C82 * C2019 + C93 * C1792 + C81 * C2020) * C79308 +
             (C95 * C1681 + C82 * C1689 + C93 * C1682 + C81 * C1690) * C166) *
                C79307 * C79114) *
               C79229 +
           (((C93 * C3931 + C81 * C3935 + C95 * C3932 + C82 * C3936) * C166 +
             (C93 * C4047 + C81 * C4283 + C95 * C4048 + C82 * C4284) * C79308) *
                C79307 * C79114 -
            ((C95 * C858 + C82 * C1086 + C93 * C859 + C81 * C1087) * C79308 +
             (C95 * C748 + C82 * C756 + C93 * C749 + C81 * C757) * C166) *
                C79307 * C17509) *
               C79072) *
              C78986 +
          ((((C93 * C1681 + C81 * C1689 + C95 * C1685 + C82 * C1693) * C166 +
             (C93 * C1791 + C81 * C2019 + C95 * C1795 + C82 * C2023) * C79308) *
                C79307 * C79114 -
            ((C95 * C169 + C82 * C326 + C93 * C168 + C81 * C325) * C79308 +
             (C95 * C98 + C82 * C104 + C93 * C97 + C81 * C103) * C166) *
                C79307 * C17509) *
               C79229 +
           (((C93 * C748 + C81 * C756 + C95 * C752 + C82 * C760) * C166 +
             (C93 * C858 + C81 * C1086 + C95 * C862 + C82 * C1090) * C79308) *
                C79307 * C17509 -
            ((C95 * C4049 + C82 * C4285 + C93 * C4048 + C81 * C4284) * C79308 +
             (C95 * C3933 + C82 * C3937 + C93 * C3932 + C81 * C3936) * C166) *
                C79307 * C79114) *
               C79072) *
              C78995 +
          ((((C93 * C98 + C81 * C104 + C95 * C99 + C82 * C105) * C166 +
             (C93 * C169 + C81 * C326 + C95 * C170 + C82 * C327) * C79308) *
                C79307 * C17509 -
            ((C95 * C1797 + C82 * C2025 + C93 * C1795 + C81 * C2023) * C79308 +
             (C95 * C1687 + C82 * C1695 + C93 * C1685 + C81 * C1693) * C166) *
                C79307 * C79114) *
               C79229 +
           (((C93 * C3933 + C81 * C3937 + C95 * C3934 + C82 * C3938) * C166 +
             (C93 * C4049 + C81 * C4285 + C95 * C4050 + C82 * C4286) * C79308) *
                C79307 * C79114 -
            ((C95 * C864 + C82 * C1092 + C93 * C862 + C81 * C1090) * C79308 +
             (C95 * C754 + C82 * C762 + C93 * C752 + C81 * C760) * C166) *
                C79307 * C17509) *
               C79072) *
              C15086)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[15] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C372 * C96 + C380 + C380 + C79308 * C373) * C81 + C402 * C82) *
                C79307 * C17509 -
            (C2134 * C82 +
             (C372 * C1682 + C2113 + C2113 + C79308 * C2102) * C81) *
                C79307 * C79114) *
               C79229 +
           (((C372 * C3931 + C4390 + C4390 + C79308 * C4385) * C81 +
             C4402 * C82) *
                C79307 * C79114 -
            (C1201 * C82 +
             (C372 * C749 + C1180 + C1180 + C79308 * C1169) * C81) *
                C79307 * C17509) *
               C79072) *
              C78986 +
          (((C2134 * C81 + C2136 * C82) * C79307 * C79114 -
            (C403 * C82 + C402 * C81) * C79307 * C17509) *
               C79229 +
           ((C1201 * C81 + C1203 * C82) * C79307 * C17509 -
            (C4403 * C82 + C4402 * C81) * C79307 * C79114) *
               C79072) *
              C78995 +
          (((C403 * C81 + C404 * C82) * C79307 * C17509 -
            (C3548 * C82 + C2136 * C81) * C79307 * C79114) *
               C79229 +
           ((C4403 * C81 +
             (C372 * C3934 + C4397 + C4397 + C79308 * C4388) * C82) *
                C79307 * C79114 -
            (C2902 * C82 + C1203 * C81) * C79307 * C17509) *
               C79072) *
              C15086)) /
        (p * q * std::sqrt(p + q));
    d2eeyz[15] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C245 * C96 + C79307 * C246) * C166 +
              (C245 * C167 + C79307 * C447) * C79308) *
                 C81 +
             (C454 + C470) * C82) *
                C17509 -
            ((C2236 + C2222) * C82 + ((C245 * C1792 + C79307 * C2212) * C79308 +
                                      (C245 * C1682 + C79307 * C1906) * C166) *
                                         C81) *
                C79114) *
               C79229 +
           ((((C245 * C3931 + C79307 * C4165) * C166 +
              (C245 * C4047 + C79307 * C4501) * C79308) *
                 C81 +
             (C4506 + C4514) * C82) *
                C79114 -
            ((C1303 + C1289) * C82 + ((C245 * C859 + C79307 * C1279) * C79308 +
                                      (C245 * C749 + C79307 * C973) * C166) *
                                         C81) *
                C17509) *
               C79072) *
              C78986 +
          ((((C2222 + C2236) * C81 + (C2226 + C2238) * C82) * C79114 -
            ((C471 + C459) * C82 + (C470 + C454) * C81) * C17509) *
               C79229 +
           (((C1289 + C1303) * C81 + (C1293 + C1305) * C82) * C17509 -
            ((C4515 + C4511) * C82 + (C4514 + C4506) * C81) * C79114) *
               C79072) *
              C78995 +
          ((((C459 + C471) * C81 + (C460 + C472) * C82) * C17509 -
            ((C3620 + C3618) * C82 + (C2238 + C2226) * C81) * C79114) *
               C79229 +
           (((C4511 + C4515) * C81 +
             ((C245 * C3934 + C79307 * C4168) * C166 +
              (C245 * C4050 + C79307 * C4504) * C79308) *
                 C82) *
                C79114 -
            ((C2974 + C2972) * C82 + (C1305 + C1293) * C81) * C17509) *
               C79072) *
              C15086)) /
        (p * q * std::sqrt(p + q));
    d2eezx[15] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C245 +
             (C93 * C246 + C81 * C515 + C95 * C247 + C82 * C516) * C79307) *
                C79308 * C17509 -
            ((C95 * C1905 + C82 * C2313 + C93 * C1906 + C81 * C2314) * C79307 +
             (C95 * C1681 + C82 * C1689 + C93 * C1682 + C81 * C1690) * C245) *
                C79308 * C79114) *
               C79229 +
           (((C93 * C3931 + C81 * C3935 + C95 * C3932 + C82 * C3936) * C245 +
             (C93 * C4165 + C81 * C4613 + C95 * C4166 + C82 * C4614) * C79307) *
                C79308 * C79114 -
            ((C95 * C972 + C82 * C1380 + C93 * C973 + C81 * C1381) * C79307 +
             (C95 * C748 + C82 * C756 + C93 * C749 + C81 * C757) * C245) *
                C79308 * C17509) *
               C79072) *
              C78986 +
          ((((C93 * C1681 + C81 * C1689 + C95 * C1685 + C82 * C1693) * C245 +
             (C93 * C1905 + C81 * C2313 + C95 * C1909 + C82 * C2317) * C79307) *
                C79308 * C79114 -
            ((C95 * C248 + C82 * C517 + C93 * C247 + C81 * C516) * C79307 +
             (C95 * C98 + C82 * C104 + C93 * C97 + C81 * C103) * C245) *
                C79308 * C17509) *
               C79229 +
           (((C93 * C748 + C81 * C756 + C95 * C752 + C82 * C760) * C245 +
             (C93 * C972 + C81 * C1380 + C95 * C976 + C82 * C1384) * C79307) *
                C79308 * C17509 -
            ((C95 * C4167 + C82 * C4615 + C93 * C4166 + C81 * C4614) * C79307 +
             (C95 * C3933 + C82 * C3937 + C93 * C3932 + C81 * C3936) * C245) *
                C79308 * C79114) *
               C79072) *
              C78995 +
          ((((C93 * C98 + C81 * C104 + C95 * C99 + C82 * C105) * C245 +
             (C93 * C248 + C81 * C517 + C95 * C249 + C82 * C518) * C79307) *
                C79308 * C17509 -
            ((C95 * C1911 + C82 * C2319 + C93 * C1909 + C81 * C2317) * C79307 +
             (C95 * C1687 + C82 * C1695 + C93 * C1685 + C81 * C1693) * C245) *
                C79308 * C79114) *
               C79229 +
           (((C93 * C3933 + C81 * C3937 + C95 * C3934 + C82 * C3938) * C245 +
             (C93 * C4167 + C81 * C4615 + C95 * C4168 + C82 * C4616) * C79307) *
                C79308 * C79114 -
            ((C95 * C978 + C82 * C1386 + C93 * C976 + C81 * C1384) * C79307 +
             (C95 * C754 + C82 * C762 + C93 * C752 + C81 * C760) * C245) *
                C79308 * C17509) *
               C79072) *
              C15086)) /
        (p * q * std::sqrt(p + q));
    d2eezy[15] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C166 * C96 + C79308 * C167) * C245 +
              (C166 * C246 + C79308 * C563) * C79307) *
                 C81 +
             (C570 + C586) * C82) *
                C17509 -
            ((C2420 + C2406) * C82 + ((C166 * C1906 + C79308 * C2396) * C79307 +
                                      (C166 * C1682 + C79308 * C1792) * C245) *
                                         C81) *
                C79114) *
               C79229 +
           ((((C166 * C3931 + C79308 * C4047) * C245 +
              (C166 * C4165 + C79308 * C4715) * C79307) *
                 C81 +
             (C4720 + C4728) * C82) *
                C79114 -
            ((C1487 + C1473) * C82 + ((C166 * C973 + C79308 * C1463) * C79307 +
                                      (C166 * C749 + C79308 * C859) * C245) *
                                         C81) *
                C17509) *
               C79072) *
              C78986 +
          ((((C2406 + C2420) * C81 + (C2410 + C2422) * C82) * C79114 -
            ((C587 + C575) * C82 + (C586 + C570) * C81) * C17509) *
               C79229 +
           (((C1473 + C1487) * C81 + (C1477 + C1489) * C82) * C17509 -
            ((C4729 + C4725) * C82 + (C4728 + C4720) * C81) * C79114) *
               C79072) *
              C78995 +
          ((((C575 + C587) * C81 + (C576 + C588) * C82) * C17509 -
            ((C3759 + C3757) * C82 + (C2422 + C2410) * C81) * C79114) *
               C79229 +
           (((C4725 + C4729) * C81 +
             ((C166 * C3934 + C79308 * C4050) * C245 +
              (C166 * C4168 + C79308 * C4718) * C79307) *
                 C82) *
                C79114 -
            ((C3113 + C3111) * C82 + (C1489 + C1477) * C81) * C17509) *
               C79072) *
              C15086)) /
        (p * q * std::sqrt(p + q));
    d2eezz[15] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C631 * C96 + C639 + C639 + C79307 * C632) * C79308 * C81 +
             C665 * C82) *
                C17509 -
            (C2534 * C82 +
             (C631 * C1682 + C2509 + C2509 + C79307 * C2498) * C79308 * C81) *
                C79114) *
               C79229 +
           (((C631 * C3931 + C4832 + C4832 + C79307 * C4827) * C79308 * C81 +
             C4846 * C82) *
                C79114 -
            (C1601 * C82 +
             (C631 * C749 + C1576 + C1576 + C79307 * C1565) * C79308 * C81) *
                C17509) *
               C79072) *
              C78986 +
          (((C2534 * C81 + C2536 * C82) * C79114 -
            (C666 * C82 + C665 * C81) * C17509) *
               C79229 +
           ((C1601 * C81 + C1603 * C82) * C17509 -
            (C4847 * C82 + C4846 * C81) * C79114) *
               C79072) *
              C78995 +
          (((C666 * C81 + C667 * C82) * C17509 -
            (C3833 * C82 + C2536 * C81) * C79114) *
               C79229 +
           ((C4847 * C81 +
             (C631 * C3934 + C4839 + C4839 + C79307 * C4830) * C79308 * C82) *
                C79114 -
            (C3187 * C82 + C1603 * C81) * C17509) *
               C79072) *
              C15086)) /
        (p * q * std::sqrt(p + q));
    d2eexx[16] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C92 * C96 + C115 + C115 + C81 * C108 + C94 * C97 + C116 +
                       C116 + C82 * C109) *
                          C79307 * C79308 * C79110 -
                      (C94 * C1681 + C1706 + C1706 + C82 * C1697 + C92 * C1682 +
                       C1707 + C1707 + C81 * C1698) *
                          C79307 * C79308 * C79117 +
                      (C92 * C1683 + C1708 + C1708 + C81 * C1699 + C94 * C1684 +
                       C1709 + C1709 + C82 * C1700) *
                          C79307 * C79308 * C20477) *
                         C79229 +
                     ((C92 * C3931 + C3944 + C3944 + C81 * C3939 + C94 * C3932 +
                       C3945 + C3945 + C82 * C3940) *
                          C79307 * C79308 * C79117 -
                      (C94 * C748 + C773 + C773 + C82 * C764 + C92 * C749 +
                       C774 + C774 + C81 * C765) *
                          C79307 * C79308 * C79110 -
                      (C94 * C6041 + C6060 + C6060 + C82 * C6053 + C92 * C6042 +
                       C6061 + C6061 + C81 * C6054) *
                          C79307 * C79308 * C20477) *
                         C79072) *
                        C13595 +
                    (((C92 * C1681 + C1710 + C1710 + C81 * C1697 + C94 * C1685 +
                       C1711 + C1711 + C82 * C1701) *
                          C79307 * C79308 * C79117 -
                      (C94 * C98 + C117 + C117 + C82 * C110 + C92 * C97 + C118 +
                       C118 + C81 * C109) *
                          C79307 * C79308 * C79110 -
                      (C94 * C1686 + C1712 + C1712 + C82 * C1702 + C92 * C1684 +
                       C1713 + C1713 + C81 * C1700) *
                          C79307 * C79308 * C20477) *
                         C79229 +
                     ((C92 * C748 + C777 + C777 + C81 * C764 + C94 * C752 +
                       C778 + C778 + C82 * C768) *
                          C79307 * C79308 * C79110 -
                      (C94 * C3933 + C3946 + C3946 + C82 * C3941 + C92 * C3932 +
                       C3947 + C3947 + C81 * C3940) *
                          C79307 * C79308 * C79117 +
                      (C92 * C6041 + C10821 + C10821 + C81 * C6053 +
                       C94 * C10817 + C10822 + C10822 + C82 * C10819) *
                          C79307 * C79308 * C20477) *
                         C79072) *
                        C78992)) /
                  (p * q * std::sqrt(p + q));
    d2eexy[16] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C166 * C96 + C79308 * C167) * C93 +
             (C166 * C102 + C79308 * C173) * C81 + C196 * C95 + C197 * C82) *
                C79307 * C79110 -
            (C1824 * C82 + C1825 * C95 + (C166 * C1690 + C79308 * C1800) * C81 +
             (C166 * C1682 + C79308 * C1792) * C93) *
                C79307 * C79117 +
            ((C166 * C1683 + C79308 * C1793) * C93 +
             (C166 * C1691 + C79308 * C1801) * C81 + C1826 * C95 +
             C1827 * C82) *
                C79307 * C20477) *
               C79229 +
           (((C166 * C3931 + C79308 * C4047) * C93 +
             (C166 * C3935 + C79308 * C4051) * C81 + C4064 * C95 +
             C4065 * C82) *
                C79307 * C79117 -
            (C891 * C82 + C892 * C95 + (C166 * C757 + C79308 * C867) * C81 +
             (C166 * C749 + C79308 * C859) * C93) *
                C79307 * C79110 -
            (C10927 * C82 + C10928 * C95 +
             (C166 * C6048 + C79308 * C6146) * C81 +
             (C166 * C6042 + C79308 * C6140) * C93) *
                C79307 * C20477) *
               C79072) *
              C13595 +
          (((C1825 * C93 + C1824 * C81 + C1828 * C95 + C1829 * C82) * C79307 *
                C79117 -
            (C198 * C82 + C199 * C95 + C197 * C81 + C196 * C93) * C79307 *
                C79110 -
            (C1830 * C82 + C1831 * C95 + C1827 * C81 + C1826 * C93) * C79307 *
                C20477) *
               C79229 +
           ((C892 * C93 + C891 * C81 + C895 * C95 + C896 * C82) * C79307 *
                C79110 -
            (C4066 * C82 + C4067 * C95 + C4065 * C81 + C4064 * C93) * C79307 *
                C79117 +
            (C10928 * C93 + C10927 * C81 +
             (C166 * C10817 + C79308 * C10920) * C95 +
             (C166 * C10818 + C79308 * C10921) * C82) *
                C79307 * C20477) *
               C79072) *
              C78992)) /
        (p * q * std::sqrt(p + q));
    d2eexz[16] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C245 * C96 + C79307 * C246) * C93 +
             (C245 * C102 + C79307 * C252) * C81 + C275 * C95 + C276 * C82) *
                C79308 * C79110 -
            (C1938 * C82 + C1939 * C95 + (C245 * C1690 + C79307 * C1914) * C81 +
             (C245 * C1682 + C79307 * C1906) * C93) *
                C79308 * C79117 +
            ((C245 * C1683 + C79307 * C1907) * C93 +
             (C245 * C1691 + C79307 * C1915) * C81 + C1940 * C95 +
             C1941 * C82) *
                C79308 * C20477) *
               C79229 +
           (((C245 * C3931 + C79307 * C4165) * C93 +
             (C245 * C3935 + C79307 * C4169) * C81 + C4182 * C95 +
             C4183 * C82) *
                C79308 * C79117 -
            (C1005 * C82 + C1006 * C95 + (C245 * C757 + C79307 * C981) * C81 +
             (C245 * C749 + C79307 * C973) * C93) *
                C79308 * C79110 -
            (C11033 * C82 + C11034 * C95 +
             (C245 * C6048 + C79307 * C6232) * C81 +
             (C245 * C6042 + C79307 * C6226) * C93) *
                C79308 * C20477) *
               C79072) *
              C13595 +
          (((C1939 * C93 + C1938 * C81 + C1942 * C95 + C1943 * C82) * C79308 *
                C79117 -
            (C277 * C82 + C278 * C95 + C276 * C81 + C275 * C93) * C79308 *
                C79110 -
            (C1944 * C82 + C1945 * C95 + C1941 * C81 + C1940 * C93) * C79308 *
                C20477) *
               C79229 +
           ((C1006 * C93 + C1005 * C81 + C1009 * C95 + C1010 * C82) * C79308 *
                C79110 -
            (C4184 * C82 + C4185 * C95 + C4183 * C81 + C4182 * C93) * C79308 *
                C79117 +
            (C11034 * C93 + C11033 * C81 +
             (C245 * C10817 + C79307 * C11026) * C95 +
             (C245 * C10818 + C79307 * C11027) * C82) *
                C79308 * C20477) *
               C79072) *
              C78992)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[16] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C166 +
             (C93 * C167 + C81 * C324 + C95 * C168 + C82 * C325) * C79308) *
                C79307 * C79110 -
            ((C95 * C1791 + C82 * C2019 + C93 * C1792 + C81 * C2020) * C79308 +
             (C95 * C1681 + C82 * C1689 + C93 * C1682 + C81 * C1690) * C166) *
                C79307 * C79117 +
            ((C93 * C1683 + C81 * C1691 + C95 * C1684 + C82 * C1692) * C166 +
             (C93 * C1793 + C81 * C2021 + C95 * C1794 + C82 * C2022) * C79308) *
                C79307 * C20477) *
               C79229 +
           (((C93 * C3931 + C81 * C3935 + C95 * C3932 + C82 * C3936) * C166 +
             (C93 * C4047 + C81 * C4283 + C95 * C4048 + C82 * C4284) * C79308) *
                C79307 * C79117 -
            ((C95 * C858 + C82 * C1086 + C93 * C859 + C81 * C1087) * C79308 +
             (C95 * C748 + C82 * C756 + C93 * C749 + C81 * C757) * C166) *
                C79307 * C79110 -
            ((C95 * C6139 + C82 * C6311 + C93 * C6140 + C81 * C6312) * C79308 +
             (C95 * C6041 + C82 * C6047 + C93 * C6042 + C81 * C6048) * C166) *
                C79307 * C20477) *
               C79072) *
              C13595 +
          ((((C93 * C1681 + C81 * C1689 + C95 * C1685 + C82 * C1693) * C166 +
             (C93 * C1791 + C81 * C2019 + C95 * C1795 + C82 * C2023) * C79308) *
                C79307 * C79117 -
            ((C95 * C169 + C82 * C326 + C93 * C168 + C81 * C325) * C79308 +
             (C95 * C98 + C82 * C104 + C93 * C97 + C81 * C103) * C166) *
                C79307 * C79110 -
            ((C95 * C1796 + C82 * C2024 + C93 * C1794 + C81 * C2022) * C79308 +
             (C95 * C1686 + C82 * C1694 + C93 * C1684 + C81 * C1692) * C166) *
                C79307 * C20477) *
               C79229 +
           (((C93 * C748 + C81 * C756 + C95 * C752 + C82 * C760) * C166 +
             (C93 * C858 + C81 * C1086 + C95 * C862 + C82 * C1090) * C79308) *
                C79307 * C79110 -
            ((C95 * C4049 + C82 * C4285 + C93 * C4048 + C81 * C4284) * C79308 +
             (C95 * C3933 + C82 * C3937 + C93 * C3932 + C81 * C3936) * C166) *
                C79307 * C79117 +
            ((C93 * C6041 + C81 * C6047 + C95 * C10817 + C82 * C10818) * C166 +
             (C93 * C6139 + C81 * C6311 + C95 * C10920 + C82 * C11132) *
                 C79308) *
                C79307 * C20477) *
               C79072) *
              C78992)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[16] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C372 * C96 + C380 + C380 + C79308 * C373) * C81 + C402 * C82) *
                C79307 * C79110 -
            (C2134 * C82 +
             (C372 * C1682 + C2113 + C2113 + C79308 * C2102) * C81) *
                C79307 * C79117 +
            ((C372 * C1683 + C2114 + C2114 + C79308 * C2103) * C81 +
             C2135 * C82) *
                C79307 * C20477) *
               C79229 +
           (((C372 * C3931 + C4390 + C4390 + C79308 * C4385) * C81 +
             C4402 * C82) *
                C79307 * C79117 -
            (C1201 * C82 +
             (C372 * C749 + C1180 + C1180 + C79308 * C1169) * C81) *
                C79307 * C79110 -
            (C11238 * C82 +
             (C372 * C6042 + C6399 + C6399 + C79308 * C6392) * C81) *
                C79307 * C20477) *
               C79072) *
              C13595 +
          (((C2134 * C81 + C2136 * C82) * C79307 * C79117 -
            (C403 * C82 + C402 * C81) * C79307 * C79110 -
            (C2137 * C82 + C2135 * C81) * C79307 * C20477) *
               C79229 +
           ((C1201 * C81 + C1203 * C82) * C79307 * C79110 -
            (C4403 * C82 + C4402 * C81) * C79307 * C79117 +
            (C11238 * C81 +
             (C372 * C10817 + C11235 + C11235 + C79308 * C11231) * C82) *
                C79307 * C20477) *
               C79072) *
              C78992)) /
        (p * q * std::sqrt(p + q));
    d2eeyz[16] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C245 * C96 + C79307 * C246) * C166 +
              (C245 * C167 + C79307 * C447) * C79308) *
                 C81 +
             (C454 + C470) * C82) *
                C79110 -
            ((C2236 + C2222) * C82 + ((C245 * C1792 + C79307 * C2212) * C79308 +
                                      (C245 * C1682 + C79307 * C1906) * C166) *
                                         C81) *
                C79117 +
            (((C245 * C1683 + C79307 * C1907) * C166 +
              (C245 * C1793 + C79307 * C2213) * C79308) *
                 C81 +
             (C2223 + C2237) * C82) *
                C20477) *
               C79229 +
           ((((C245 * C3931 + C79307 * C4165) * C166 +
              (C245 * C4047 + C79307 * C4501) * C79308) *
                 C81 +
             (C4506 + C4514) * C82) *
                C79117 -
            ((C1303 + C1289) * C82 + ((C245 * C859 + C79307 * C1279) * C79308 +
                                      (C245 * C749 + C79307 * C973) * C166) *
                                         C81) *
                C79110 -
            ((C11342 + C11340) * C82 +
             ((C245 * C6140 + C79307 * C6478) * C79308 +
              (C245 * C6042 + C79307 * C6226) * C166) *
                 C81) *
                C20477) *
               C79072) *
              C13595 +
          ((((C2222 + C2236) * C81 + (C2226 + C2238) * C82) * C79117 -
            ((C471 + C459) * C82 + (C470 + C454) * C81) * C79110 -
            ((C2239 + C2231) * C82 + (C2237 + C2223) * C81) * C20477) *
               C79229 +
           (((C1289 + C1303) * C81 + (C1293 + C1305) * C82) * C79110 -
            ((C4515 + C4511) * C82 + (C4514 + C4506) * C81) * C79117 +
            ((C11340 + C11342) * C81 +
             ((C245 * C10817 + C79307 * C11026) * C166 +
              (C245 * C10920 + C79307 * C11336) * C79308) *
                 C82) *
                C20477) *
               C79072) *
              C78992)) /
        (p * q * std::sqrt(p + q));
    d2eezx[16] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C245 +
             (C93 * C246 + C81 * C515 + C95 * C247 + C82 * C516) * C79307) *
                C79308 * C79110 -
            ((C95 * C1905 + C82 * C2313 + C93 * C1906 + C81 * C2314) * C79307 +
             (C95 * C1681 + C82 * C1689 + C93 * C1682 + C81 * C1690) * C245) *
                C79308 * C79117 +
            ((C93 * C1683 + C81 * C1691 + C95 * C1684 + C82 * C1692) * C245 +
             (C93 * C1907 + C81 * C2315 + C95 * C1908 + C82 * C2316) * C79307) *
                C79308 * C20477) *
               C79229 +
           (((C93 * C3931 + C81 * C3935 + C95 * C3932 + C82 * C3936) * C245 +
             (C93 * C4165 + C81 * C4613 + C95 * C4166 + C82 * C4614) * C79307) *
                C79308 * C79117 -
            ((C95 * C972 + C82 * C1380 + C93 * C973 + C81 * C1381) * C79307 +
             (C95 * C748 + C82 * C756 + C93 * C749 + C81 * C757) * C245) *
                C79308 * C79110 -
            ((C95 * C6225 + C82 * C6557 + C93 * C6226 + C81 * C6558) * C79307 +
             (C95 * C6041 + C82 * C6047 + C93 * C6042 + C81 * C6048) * C245) *
                C79308 * C20477) *
               C79072) *
              C13595 +
          ((((C93 * C1681 + C81 * C1689 + C95 * C1685 + C82 * C1693) * C245 +
             (C93 * C1905 + C81 * C2313 + C95 * C1909 + C82 * C2317) * C79307) *
                C79308 * C79117 -
            ((C95 * C248 + C82 * C517 + C93 * C247 + C81 * C516) * C79307 +
             (C95 * C98 + C82 * C104 + C93 * C97 + C81 * C103) * C245) *
                C79308 * C79110 -
            ((C95 * C1910 + C82 * C2318 + C93 * C1908 + C81 * C2316) * C79307 +
             (C95 * C1686 + C82 * C1694 + C93 * C1684 + C81 * C1692) * C245) *
                C79308 * C20477) *
               C79229 +
           (((C93 * C748 + C81 * C756 + C95 * C752 + C82 * C760) * C245 +
             (C93 * C972 + C81 * C1380 + C95 * C976 + C82 * C1384) * C79307) *
                C79308 * C79110 -
            ((C95 * C4167 + C82 * C4615 + C93 * C4166 + C81 * C4614) * C79307 +
             (C95 * C3933 + C82 * C3937 + C93 * C3932 + C81 * C3936) * C245) *
                C79308 * C79117 +
            ((C93 * C6041 + C81 * C6047 + C95 * C10817 + C82 * C10818) * C245 +
             (C93 * C6225 + C81 * C6557 + C95 * C11026 + C82 * C11440) *
                 C79307) *
                C79308 * C20477) *
               C79072) *
              C78992)) /
        (p * q * std::sqrt(p + q));
    d2eezy[16] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C166 * C96 + C79308 * C167) * C245 +
              (C166 * C246 + C79308 * C563) * C79307) *
                 C81 +
             (C570 + C586) * C82) *
                C79110 -
            ((C2420 + C2406) * C82 + ((C166 * C1906 + C79308 * C2396) * C79307 +
                                      (C166 * C1682 + C79308 * C1792) * C245) *
                                         C81) *
                C79117 +
            (((C166 * C1683 + C79308 * C1793) * C245 +
              (C166 * C1907 + C79308 * C2397) * C79307) *
                 C81 +
             (C2407 + C2421) * C82) *
                C20477) *
               C79229 +
           ((((C166 * C3931 + C79308 * C4047) * C245 +
              (C166 * C4165 + C79308 * C4715) * C79307) *
                 C81 +
             (C4720 + C4728) * C82) *
                C79117 -
            ((C1487 + C1473) * C82 + ((C166 * C973 + C79308 * C1463) * C79307 +
                                      (C166 * C749 + C79308 * C859) * C245) *
                                         C81) *
                C79110 -
            ((C11545 + C11543) * C82 +
             ((C166 * C6226 + C79308 * C6638) * C79307 +
              (C166 * C6042 + C79308 * C6140) * C245) *
                 C81) *
                C20477) *
               C79072) *
              C13595 +
          ((((C2406 + C2420) * C81 + (C2410 + C2422) * C82) * C79117 -
            ((C587 + C575) * C82 + (C586 + C570) * C81) * C79110 -
            ((C2423 + C2415) * C82 + (C2421 + C2407) * C81) * C20477) *
               C79229 +
           (((C1473 + C1487) * C81 + (C1477 + C1489) * C82) * C79110 -
            ((C4729 + C4725) * C82 + (C4728 + C4720) * C81) * C79117 +
            ((C11543 + C11545) * C81 +
             ((C166 * C10817 + C79308 * C10920) * C245 +
              (C166 * C11026 + C79308 * C11539) * C79307) *
                 C82) *
                C20477) *
               C79072) *
              C78992)) /
        (p * q * std::sqrt(p + q));
    d2eezz[16] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C631 * C96 + C639 + C639 + C79307 * C632) * C79308 * C81 +
             C665 * C82) *
                C79110 -
            (C2534 * C82 +
             (C631 * C1682 + C2509 + C2509 + C79307 * C2498) * C79308 * C81) *
                C79117 +
            ((C631 * C1683 + C2510 + C2510 + C79307 * C2499) * C79308 * C81 +
             C2535 * C82) *
                C20477) *
               C79229 +
           (((C631 * C3931 + C4832 + C4832 + C79307 * C4827) * C79308 * C81 +
             C4846 * C82) *
                C79117 -
            (C1601 * C82 +
             (C631 * C749 + C1576 + C1576 + C79307 * C1565) * C79308 * C81) *
                C79110 -
            (C11651 * C82 +
             (C631 * C6042 + C6725 + C6725 + C79307 * C6718) * C79308 * C81) *
                C20477) *
               C79072) *
              C13595 +
          (((C2534 * C81 + C2536 * C82) * C79117 -
            (C666 * C82 + C665 * C81) * C79110 -
            (C2537 * C82 + C2535 * C81) * C20477) *
               C79229 +
           ((C1601 * C81 + C1603 * C82) * C79110 -
            (C4847 * C82 + C4846 * C81) * C79117 +
            (C11651 * C81 +
             (C631 * C10817 + C11647 + C11647 + C79307 * C11643) * C79308 *
                 C82) *
                C20477) *
               C79072) *
              C78992)) /
        (p * q * std::sqrt(p + q));
    d2eexx[17] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C92 * C96 + C115 + C115 + C81 * C108 + C94 * C97 + C116 +
                       C116 + C82 * C109) *
                          C79307 * C79308 * C17509 -
                      (C94 * C1681 + C1706 + C1706 + C82 * C1697 + C92 * C1682 +
                       C1707 + C1707 + C81 * C1698) *
                          C79307 * C79308 * C79114) *
                         C79300 +
                     ((C92 * C3931 + C3944 + C3944 + C81 * C3939 + C94 * C3932 +
                       C3945 + C3945 + C82 * C3940) *
                          C79307 * C79308 * C79114 -
                      (C94 * C748 + C773 + C773 + C82 * C764 + C92 * C749 +
                       C774 + C774 + C81 * C765) *
                          C79307 * C79308 * C17509) *
                         C79285 +
                     ((C92 * C750 + C775 + C775 + C81 * C766 + C94 * C751 +
                       C776 + C776 + C82 * C767) *
                          C79307 * C79308 * C17509 -
                      (C94 * C6043 + C6062 + C6062 + C82 * C6055 + C92 * C6044 +
                       C6063 + C6063 + C81 * C6056) *
                          C79307 * C79308 * C79114) *
                         C79259) *
                        C13595 +
                    (((C92 * C1681 + C1710 + C1710 + C81 * C1697 + C94 * C1685 +
                       C1711 + C1711 + C82 * C1701) *
                          C79307 * C79308 * C79114 -
                      (C94 * C98 + C117 + C117 + C82 * C110 + C92 * C97 + C118 +
                       C118 + C81 * C109) *
                          C79307 * C79308 * C17509) *
                         C79300 +
                     ((C92 * C748 + C777 + C777 + C81 * C764 + C94 * C752 +
                       C778 + C778 + C82 * C768) *
                          C79307 * C79308 * C17509 -
                      (C94 * C3933 + C3946 + C3946 + C82 * C3941 + C92 * C3932 +
                       C3947 + C3947 + C81 * C3940) *
                          C79307 * C79308 * C79114) *
                         C79285 +
                     ((C92 * C6043 + C7481 + C7481 + C81 * C6055 + C94 * C7477 +
                       C7482 + C7482 + C82 * C7479) *
                          C79307 * C79308 * C79114 -
                      (C94 * C753 + C779 + C779 + C82 * C769 + C92 * C751 +
                       C780 + C780 + C81 * C767) *
                          C79307 * C79308 * C17509) *
                         C79259) *
                        C78992)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C92 * C96 + C115 + C115 + C81 * C108 + C94 * C97 + C116 +
                      C116 + C82 * C109) *
                         C79307 * C79308 * C17509 -
                     (C94 * C1681 + C1706 + C1706 + C82 * C1697 + C92 * C1682 +
                      C1707 + C1707 + C81 * C1698) *
                         C79307 * C79308 * C79114) *
                        C79009 * C79309 +
                    ((C92 * C1681 + C1710 + C1710 + C81 * C1697 + C94 * C1685 +
                      C1711 + C1711 + C82 * C1701) *
                         C79307 * C79308 * C79114 -
                     (C94 * C98 + C117 + C117 + C82 * C110 + C92 * C97 + C118 +
                      C118 + C81 * C109) *
                         C79307 * C79308 * C17509) *
                        C79009 * C79299 +
                    ((C92 * C98 + C119 + C119 + C81 * C110 + C94 * C99 + C120 +
                      C120 + C82 * C111) *
                         C79307 * C79308 * C17509 -
                     (C94 * C1687 + C1714 + C1714 + C82 * C1703 + C92 * C1685 +
                      C1715 + C1715 + C81 * C1701) *
                         C79307 * C79308 * C79114) *
                        C79009 * C79283 +
                    ((C92 * C1687 + C3259 + C3259 + C81 * C1703 + C94 * C3255 +
                      C3260 + C3260 + C82 * C3257) *
                         C79307 * C79308 * C79114 -
                     (C94 * C100 + C121 + C121 + C82 * C112 + C92 * C99 + C122 +
                      C122 + C81 * C111) *
                         C79307 * C79308 * C17509) *
                        C79009 * C79263)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((C92 * C96 + C115 + C115 + C81 * C108 + C94 * C97 + C116 +
                      C116 + C82 * C109) *
                         C79307 * C79308 * C79311 -
                     (C94 * C1681 + C1706 + C1706 + C82 * C1697 + C92 * C1682 +
                      C1707 + C1707 + C81 * C1698) *
                         C79307 * C79308 * C79305 +
                     (C92 * C1683 + C1708 + C1708 + C81 * C1699 + C94 * C1684 +
                      C1709 + C1709 + C82 * C1700) *
                         C79307 * C79308 * C79293 -
                     (C94 * C10319 + C10332 + C10332 + C82 * C10327 +
                      C92 * C10320 + C10333 + C10333 + C81 * C10328) *
                         C79307 * C79308 * C79275) *
                        C79009 * C13595 +
                    ((C92 * C1681 + C1710 + C1710 + C81 * C1697 + C94 * C1685 +
                      C1711 + C1711 + C82 * C1701) *
                         C79307 * C79308 * C79305 -
                     (C94 * C98 + C117 + C117 + C82 * C110 + C92 * C97 + C118 +
                      C118 + C81 * C109) *
                         C79307 * C79308 * C79311 -
                     (C94 * C1686 + C1712 + C1712 + C82 * C1702 + C92 * C1684 +
                      C1713 + C1713 + C81 * C1700) *
                         C79307 * C79308 * C79293 +
                     (C92 * C10319 + C11725 + C11725 + C81 * C10327 +
                      C94 * C11721 + C11726 + C11726 + C82 * C11723) *
                         C79307 * C79308 * C79275) *
                        C79009 * C78992)) /
                      (p * q * std::sqrt(p + q));
    d2eexy[17] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C166 * C96 + C79308 * C167) * C93 +
             (C166 * C102 + C79308 * C173) * C81 + C196 * C95 + C197 * C82) *
                C79307 * C17509 -
            (C1824 * C82 + C1825 * C95 + (C166 * C1690 + C79308 * C1800) * C81 +
             (C166 * C1682 + C79308 * C1792) * C93) *
                C79307 * C79114) *
               C79300 +
           (((C166 * C3931 + C79308 * C4047) * C93 +
             (C166 * C3935 + C79308 * C4051) * C81 + C4064 * C95 +
             C4065 * C82) *
                C79307 * C79114 -
            (C891 * C82 + C892 * C95 + (C166 * C757 + C79308 * C867) * C81 +
             (C166 * C749 + C79308 * C859) * C93) *
                C79307 * C17509) *
               C79285 +
           (((C166 * C750 + C79308 * C860) * C93 +
             (C166 * C758 + C79308 * C868) * C81 + C893 * C95 + C894 * C82) *
                C79307 * C17509 -
            (C7587 * C82 + C7588 * C95 + (C166 * C6050 + C79308 * C6148) * C81 +
             (C166 * C6044 + C79308 * C6142) * C93) *
                C79307 * C79114) *
               C79259) *
              C13595 +
          (((C1825 * C93 + C1824 * C81 + C1828 * C95 + C1829 * C82) * C79307 *
                C79114 -
            (C198 * C82 + C199 * C95 + C197 * C81 + C196 * C93) * C79307 *
                C17509) *
               C79300 +
           ((C892 * C93 + C891 * C81 + C895 * C95 + C896 * C82) * C79307 *
                C17509 -
            (C4066 * C82 + C4067 * C95 + C4065 * C81 + C4064 * C93) * C79307 *
                C79114) *
               C79285 +
           ((C7588 * C93 + C7587 * C81 + (C166 * C7477 + C79308 * C7580) * C95 +
             (C166 * C7478 + C79308 * C7581) * C82) *
                C79307 * C79114 -
            (C897 * C82 + C898 * C95 + C894 * C81 + C893 * C93) * C79307 *
                C17509) *
               C79259) *
              C78992)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C166 * C96 + C79308 * C167) * C93 +
            (C166 * C102 + C79308 * C173) * C81 + C196 * C95 + C197 * C82) *
               C79307 * C17509 -
           (C1824 * C82 + C1825 * C95 + (C166 * C1690 + C79308 * C1800) * C81 +
            (C166 * C1682 + C79308 * C1792) * C93) *
               C79307 * C79114) *
              C79009 * C79309 +
          ((C1825 * C93 + C1824 * C81 + C1828 * C95 + C1829 * C82) * C79307 *
               C79114 -
           (C198 * C82 + C199 * C95 + C197 * C81 + C196 * C93) * C79307 *
               C17509) *
              C79009 * C79299 +
          ((C199 * C93 + C198 * C81 + C200 * C95 + C201 * C82) * C79307 *
               C17509 -
           (C3333 * C82 + C3334 * C95 + C1829 * C81 + C1828 * C93) * C79307 *
               C79114) *
              C79009 * C79283 +
          ((C3334 * C93 + C3333 * C81 + (C166 * C3255 + C79308 * C3326) * C95 +
            (C166 * C3256 + C79308 * C3327) * C82) *
               C79307 * C79114 -
           (C202 * C82 + C203 * C95 + C201 * C81 + C200 * C93) * C79307 *
               C17509) *
              C79009 * C79263)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C166 * C96 + C79308 * C167) * C93 +
            (C166 * C102 + C79308 * C173) * C81 + C196 * C95 + C197 * C82) *
               C79307 * C79311 -
           (C1824 * C82 + C1825 * C95 + (C166 * C1690 + C79308 * C1800) * C81 +
            (C166 * C1682 + C79308 * C1792) * C93) *
               C79307 * C79305 +
           ((C166 * C1683 + C79308 * C1793) * C93 +
            (C166 * C1691 + C79308 * C1801) * C81 + C1826 * C95 + C1827 * C82) *
               C79307 * C79293 -
           (C11799 * C82 + C11800 * C95 +
            (C166 * C10324 + C79308 * C10382) * C81 +
            (C166 * C10320 + C79308 * C10378) * C93) *
               C79307 * C79275) *
              C79009 * C13595 +
          ((C1825 * C93 + C1824 * C81 + C1828 * C95 + C1829 * C82) * C79307 *
               C79305 -
           (C198 * C82 + C199 * C95 + C197 * C81 + C196 * C93) * C79307 *
               C79311 -
           (C1830 * C82 + C1831 * C95 + C1827 * C81 + C1826 * C93) * C79307 *
               C79293 +
           (C11800 * C93 + C11799 * C81 +
            (C166 * C11721 + C79308 * C11792) * C95 +
            (C166 * C11722 + C79308 * C11793) * C82) *
               C79307 * C79275) *
              C79009 * C78992)) /
            (p * q * std::sqrt(p + q));
    d2eexz[17] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C245 * C96 + C79307 * C246) * C93 +
             (C245 * C102 + C79307 * C252) * C81 + C275 * C95 + C276 * C82) *
                C79308 * C17509 -
            (C1938 * C82 + C1939 * C95 + (C245 * C1690 + C79307 * C1914) * C81 +
             (C245 * C1682 + C79307 * C1906) * C93) *
                C79308 * C79114) *
               C79300 +
           (((C245 * C3931 + C79307 * C4165) * C93 +
             (C245 * C3935 + C79307 * C4169) * C81 + C4182 * C95 +
             C4183 * C82) *
                C79308 * C79114 -
            (C1005 * C82 + C1006 * C95 + (C245 * C757 + C79307 * C981) * C81 +
             (C245 * C749 + C79307 * C973) * C93) *
                C79308 * C17509) *
               C79285 +
           (((C245 * C750 + C79307 * C974) * C93 +
             (C245 * C758 + C79307 * C982) * C81 + C1007 * C95 + C1008 * C82) *
                C79308 * C17509 -
            (C7693 * C82 + C7694 * C95 + (C245 * C6050 + C79307 * C6234) * C81 +
             (C245 * C6044 + C79307 * C6228) * C93) *
                C79308 * C79114) *
               C79259) *
              C13595 +
          (((C1939 * C93 + C1938 * C81 + C1942 * C95 + C1943 * C82) * C79308 *
                C79114 -
            (C277 * C82 + C278 * C95 + C276 * C81 + C275 * C93) * C79308 *
                C17509) *
               C79300 +
           ((C1006 * C93 + C1005 * C81 + C1009 * C95 + C1010 * C82) * C79308 *
                C17509 -
            (C4184 * C82 + C4185 * C95 + C4183 * C81 + C4182 * C93) * C79308 *
                C79114) *
               C79285 +
           ((C7694 * C93 + C7693 * C81 + (C245 * C7477 + C79307 * C7686) * C95 +
             (C245 * C7478 + C79307 * C7687) * C82) *
                C79308 * C79114 -
            (C1011 * C82 + C1012 * C95 + C1008 * C81 + C1007 * C93) * C79308 *
                C17509) *
               C79259) *
              C78992)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C245 * C96 + C79307 * C246) * C93 +
            (C245 * C102 + C79307 * C252) * C81 + C275 * C95 + C276 * C82) *
               C79308 * C17509 -
           (C1938 * C82 + C1939 * C95 + (C245 * C1690 + C79307 * C1914) * C81 +
            (C245 * C1682 + C79307 * C1906) * C93) *
               C79308 * C79114) *
              C79009 * C79309 +
          ((C1939 * C93 + C1938 * C81 + C1942 * C95 + C1943 * C82) * C79308 *
               C79114 -
           (C277 * C82 + C278 * C95 + C276 * C81 + C275 * C93) * C79308 *
               C17509) *
              C79009 * C79299 +
          ((C278 * C93 + C277 * C81 + C279 * C95 + C280 * C82) * C79308 *
               C17509 -
           (C3407 * C82 + C3408 * C95 + C1943 * C81 + C1942 * C93) * C79308 *
               C79114) *
              C79009 * C79283 +
          ((C3408 * C93 + C3407 * C81 + (C245 * C3255 + C79307 * C3400) * C95 +
            (C245 * C3256 + C79307 * C3401) * C82) *
               C79308 * C79114 -
           (C281 * C82 + C282 * C95 + C280 * C81 + C279 * C93) * C79308 *
               C17509) *
              C79009 * C79263)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C245 * C96 + C79307 * C246) * C93 +
            (C245 * C102 + C79307 * C252) * C81 + C275 * C95 + C276 * C82) *
               C79308 * C79311 -
           (C1938 * C82 + C1939 * C95 + (C245 * C1690 + C79307 * C1914) * C81 +
            (C245 * C1682 + C79307 * C1906) * C93) *
               C79308 * C79305 +
           ((C245 * C1683 + C79307 * C1907) * C93 +
            (C245 * C1691 + C79307 * C1915) * C81 + C1940 * C95 + C1941 * C82) *
               C79308 * C79293 -
           (C11873 * C82 + C11874 * C95 +
            (C245 * C10324 + C79307 * C10432) * C81 +
            (C245 * C10320 + C79307 * C10428) * C93) *
               C79308 * C79275) *
              C79009 * C13595 +
          ((C1939 * C93 + C1938 * C81 + C1942 * C95 + C1943 * C82) * C79308 *
               C79305 -
           (C277 * C82 + C278 * C95 + C276 * C81 + C275 * C93) * C79308 *
               C79311 -
           (C1944 * C82 + C1945 * C95 + C1941 * C81 + C1940 * C93) * C79308 *
               C79293 +
           (C11874 * C93 + C11873 * C81 +
            (C245 * C11721 + C79307 * C11866) * C95 +
            (C245 * C11722 + C79307 * C11867) * C82) *
               C79308 * C79275) *
              C79009 * C78992)) /
            (p * q * std::sqrt(p + q));
    d2eeyx[17] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C166 +
             (C93 * C167 + C81 * C324 + C95 * C168 + C82 * C325) * C79308) *
                C79307 * C17509 -
            ((C95 * C1791 + C82 * C2019 + C93 * C1792 + C81 * C2020) * C79308 +
             (C95 * C1681 + C82 * C1689 + C93 * C1682 + C81 * C1690) * C166) *
                C79307 * C79114) *
               C79300 +
           (((C93 * C3931 + C81 * C3935 + C95 * C3932 + C82 * C3936) * C166 +
             (C93 * C4047 + C81 * C4283 + C95 * C4048 + C82 * C4284) * C79308) *
                C79307 * C79114 -
            ((C95 * C858 + C82 * C1086 + C93 * C859 + C81 * C1087) * C79308 +
             (C95 * C748 + C82 * C756 + C93 * C749 + C81 * C757) * C166) *
                C79307 * C17509) *
               C79285 +
           (((C93 * C750 + C81 * C758 + C95 * C751 + C82 * C759) * C166 +
             (C93 * C860 + C81 * C1088 + C95 * C861 + C82 * C1089) * C79308) *
                C79307 * C17509 -
            ((C95 * C6141 + C82 * C6313 + C93 * C6142 + C81 * C6314) * C79308 +
             (C95 * C6043 + C82 * C6049 + C93 * C6044 + C81 * C6050) * C166) *
                C79307 * C79114) *
               C79259) *
              C13595 +
          ((((C93 * C1681 + C81 * C1689 + C95 * C1685 + C82 * C1693) * C166 +
             (C93 * C1791 + C81 * C2019 + C95 * C1795 + C82 * C2023) * C79308) *
                C79307 * C79114 -
            ((C95 * C169 + C82 * C326 + C93 * C168 + C81 * C325) * C79308 +
             (C95 * C98 + C82 * C104 + C93 * C97 + C81 * C103) * C166) *
                C79307 * C17509) *
               C79300 +
           (((C93 * C748 + C81 * C756 + C95 * C752 + C82 * C760) * C166 +
             (C93 * C858 + C81 * C1086 + C95 * C862 + C82 * C1090) * C79308) *
                C79307 * C17509 -
            ((C95 * C4049 + C82 * C4285 + C93 * C4048 + C81 * C4284) * C79308 +
             (C95 * C3933 + C82 * C3937 + C93 * C3932 + C81 * C3936) * C166) *
                C79307 * C79114) *
               C79285 +
           (((C93 * C6043 + C81 * C6049 + C95 * C7477 + C82 * C7478) * C166 +
             (C93 * C6141 + C81 * C6313 + C95 * C7580 + C82 * C7792) * C79308) *
                C79307 * C79114 -
            ((C95 * C863 + C82 * C1091 + C93 * C861 + C81 * C1089) * C79308 +
             (C95 * C753 + C82 * C761 + C93 * C751 + C81 * C759) * C166) *
                C79307 * C17509) *
               C79259) *
              C78992)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C166 +
            (C93 * C167 + C81 * C324 + C95 * C168 + C82 * C325) * C79308) *
               C79307 * C17509 -
           ((C95 * C1791 + C82 * C2019 + C93 * C1792 + C81 * C2020) * C79308 +
            (C95 * C1681 + C82 * C1689 + C93 * C1682 + C81 * C1690) * C166) *
               C79307 * C79114) *
              C79009 * C79309 +
          (((C93 * C1681 + C81 * C1689 + C95 * C1685 + C82 * C1693) * C166 +
            (C93 * C1791 + C81 * C2019 + C95 * C1795 + C82 * C2023) * C79308) *
               C79307 * C79114 -
           ((C95 * C169 + C82 * C326 + C93 * C168 + C81 * C325) * C79308 +
            (C95 * C98 + C82 * C104 + C93 * C97 + C81 * C103) * C166) *
               C79307 * C17509) *
              C79009 * C79299 +
          (((C93 * C98 + C81 * C104 + C95 * C99 + C82 * C105) * C166 +
            (C93 * C169 + C81 * C326 + C95 * C170 + C82 * C327) * C79308) *
               C79307 * C17509 -
           ((C95 * C1797 + C82 * C2025 + C93 * C1795 + C81 * C2023) * C79308 +
            (C95 * C1687 + C82 * C1695 + C93 * C1685 + C81 * C1693) * C166) *
               C79307 * C79114) *
              C79009 * C79283 +
          (((C93 * C1687 + C81 * C1695 + C95 * C3255 + C82 * C3256) * C166 +
            (C93 * C1797 + C81 * C2025 + C95 * C3326 + C82 * C3474) * C79308) *
               C79307 * C79114 -
           ((C95 * C171 + C82 * C328 + C93 * C170 + C81 * C327) * C79308 +
            (C95 * C100 + C82 * C106 + C93 * C99 + C81 * C105) * C166) *
               C79307 * C17509) *
              C79009 * C79263)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C166 +
            (C93 * C167 + C81 * C324 + C95 * C168 + C82 * C325) * C79308) *
               C79307 * C79311 -
           ((C95 * C1791 + C82 * C2019 + C93 * C1792 + C81 * C2020) * C79308 +
            (C95 * C1681 + C82 * C1689 + C93 * C1682 + C81 * C1690) * C166) *
               C79307 * C79305 +
           ((C93 * C1683 + C81 * C1691 + C95 * C1684 + C82 * C1692) * C166 +
            (C93 * C1793 + C81 * C2021 + C95 * C1794 + C82 * C2022) * C79308) *
               C79307 * C79293 -
           ((C95 * C10377 + C82 * C10477 + C93 * C10378 + C81 * C10478) *
                C79308 +
            (C95 * C10319 + C82 * C10323 + C93 * C10320 + C81 * C10324) *
                C166) *
               C79307 * C79275) *
              C79009 * C13595 +
          (((C93 * C1681 + C81 * C1689 + C95 * C1685 + C82 * C1693) * C166 +
            (C93 * C1791 + C81 * C2019 + C95 * C1795 + C82 * C2023) * C79308) *
               C79307 * C79305 -
           ((C95 * C169 + C82 * C326 + C93 * C168 + C81 * C325) * C79308 +
            (C95 * C98 + C82 * C104 + C93 * C97 + C81 * C103) * C166) *
               C79307 * C79311 -
           ((C95 * C1796 + C82 * C2024 + C93 * C1794 + C81 * C2022) * C79308 +
            (C95 * C1686 + C82 * C1694 + C93 * C1684 + C81 * C1692) * C166) *
               C79307 * C79293 +
           ((C93 * C10319 + C81 * C10323 + C95 * C11721 + C82 * C11722) * C166 +
            (C93 * C10377 + C81 * C10477 + C95 * C11792 + C82 * C11940) *
                C79308) *
               C79307 * C79275) *
              C79009 * C78992)) /
            (p * q * std::sqrt(p + q));
    d2eeyy[17] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C372 * C96 + C380 + C380 + C79308 * C373) * C81 + C402 * C82) *
                C79307 * C17509 -
            (C2134 * C82 +
             (C372 * C1682 + C2113 + C2113 + C79308 * C2102) * C81) *
                C79307 * C79114) *
               C79300 +
           (((C372 * C3931 + C4390 + C4390 + C79308 * C4385) * C81 +
             C4402 * C82) *
                C79307 * C79114 -
            (C1201 * C82 +
             (C372 * C749 + C1180 + C1180 + C79308 * C1169) * C81) *
                C79307 * C17509) *
               C79285 +
           (((C372 * C750 + C1181 + C1181 + C79308 * C1170) * C81 +
             C1202 * C82) *
                C79307 * C17509 -
            (C7898 * C82 +
             (C372 * C6044 + C6401 + C6401 + C79308 * C6394) * C81) *
                C79307 * C79114) *
               C79259) *
              C13595 +
          (((C2134 * C81 + C2136 * C82) * C79307 * C79114 -
            (C403 * C82 + C402 * C81) * C79307 * C17509) *
               C79300 +
           ((C1201 * C81 + C1203 * C82) * C79307 * C17509 -
            (C4403 * C82 + C4402 * C81) * C79307 * C79114) *
               C79285 +
           ((C7898 * C81 +
             (C372 * C7477 + C7895 + C7895 + C79308 * C7891) * C82) *
                C79307 * C79114 -
            (C1204 * C82 + C1202 * C81) * C79307 * C17509) *
               C79259) *
              C78992)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C372 * C96 + C380 + C380 + C79308 * C373) * C81 + C402 * C82) *
               C79307 * C17509 -
           (C2134 * C82 +
            (C372 * C1682 + C2113 + C2113 + C79308 * C2102) * C81) *
               C79307 * C79114) *
              C79009 * C79309 +
          ((C2134 * C81 + C2136 * C82) * C79307 * C79114 -
           (C403 * C82 + C402 * C81) * C79307 * C17509) *
              C79009 * C79299 +
          ((C403 * C81 + C404 * C82) * C79307 * C17509 -
           (C3548 * C82 + C2136 * C81) * C79307 * C79114) *
              C79009 * C79283 +
          ((C3548 * C81 +
            (C372 * C3255 + C3545 + C3545 + C79308 * C3541) * C82) *
               C79307 * C79114 -
           (C405 * C82 + C404 * C81) * C79307 * C17509) *
              C79009 * C79263)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C372 * C96 + C380 + C380 + C79308 * C373) * C81 + C402 * C82) *
               C79307 * C79311 -
           (C2134 * C82 +
            (C372 * C1682 + C2113 + C2113 + C79308 * C2102) * C81) *
               C79307 * C79305 +
           ((C372 * C1683 + C2114 + C2114 + C79308 * C2103) * C81 +
            C2135 * C82) *
               C79307 * C79293 -
           (C12014 * C82 +
            (C372 * C10320 + C10529 + C10529 + C79308 * C10524) * C81) *
               C79307 * C79275) *
              C79009 * C13595 +
          ((C2134 * C81 + C2136 * C82) * C79307 * C79305 -
           (C403 * C82 + C402 * C81) * C79307 * C79311 -
           (C2137 * C82 + C2135 * C81) * C79307 * C79293 +
           (C12014 * C81 +
            (C372 * C11721 + C12011 + C12011 + C79308 * C12007) * C82) *
               C79307 * C79275) *
              C79009 * C78992)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[17] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C245 * C96 + C79307 * C246) * C166 +
              (C245 * C167 + C79307 * C447) * C79308) *
                 C81 +
             (C454 + C470) * C82) *
                C17509 -
            ((C2236 + C2222) * C82 + ((C245 * C1792 + C79307 * C2212) * C79308 +
                                      (C245 * C1682 + C79307 * C1906) * C166) *
                                         C81) *
                C79114) *
               C79300 +
           ((((C245 * C3931 + C79307 * C4165) * C166 +
              (C245 * C4047 + C79307 * C4501) * C79308) *
                 C81 +
             (C4506 + C4514) * C82) *
                C79114 -
            ((C1303 + C1289) * C82 + ((C245 * C859 + C79307 * C1279) * C79308 +
                                      (C245 * C749 + C79307 * C973) * C166) *
                                         C81) *
                C17509) *
               C79285 +
           ((((C245 * C750 + C79307 * C974) * C166 +
              (C245 * C860 + C79307 * C1280) * C79308) *
                 C81 +
             (C1290 + C1304) * C82) *
                C17509 -
            ((C8002 + C8000) * C82 + ((C245 * C6142 + C79307 * C6480) * C79308 +
                                      (C245 * C6044 + C79307 * C6228) * C166) *
                                         C81) *
                C79114) *
               C79259) *
              C13595 +
          ((((C2222 + C2236) * C81 + (C2226 + C2238) * C82) * C79114 -
            ((C471 + C459) * C82 + (C470 + C454) * C81) * C17509) *
               C79300 +
           (((C1289 + C1303) * C81 + (C1293 + C1305) * C82) * C17509 -
            ((C4515 + C4511) * C82 + (C4514 + C4506) * C81) * C79114) *
               C79285 +
           (((C8000 + C8002) * C81 +
             ((C245 * C7477 + C79307 * C7686) * C166 +
              (C245 * C7580 + C79307 * C7996) * C79308) *
                 C82) *
                C79114 -
            ((C1306 + C1298) * C82 + (C1304 + C1290) * C81) * C17509) *
               C79259) *
              C78992)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C245 * C96 + C79307 * C246) * C166 +
             (C245 * C167 + C79307 * C447) * C79308) *
                C81 +
            (C454 + C470) * C82) *
               C17509 -
           ((C2236 + C2222) * C82 + ((C245 * C1792 + C79307 * C2212) * C79308 +
                                     (C245 * C1682 + C79307 * C1906) * C166) *
                                        C81) *
               C79114) *
              C79009 * C79309 +
          (((C2222 + C2236) * C81 + (C2226 + C2238) * C82) * C79114 -
           ((C471 + C459) * C82 + (C470 + C454) * C81) * C17509) *
              C79009 * C79299 +
          (((C459 + C471) * C81 + (C460 + C472) * C82) * C17509 -
           ((C3620 + C3618) * C82 + (C2238 + C2226) * C81) * C79114) *
              C79009 * C79283 +
          (((C3618 + C3620) * C81 + ((C245 * C3255 + C79307 * C3400) * C166 +
                                     (C245 * C3326 + C79307 * C3614) * C79308) *
                                        C82) *
               C79114 -
           ((C473 + C465) * C82 + (C472 + C460) * C81) * C17509) *
              C79009 * C79263)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C245 * C96 + C79307 * C246) * C166 +
             (C245 * C167 + C79307 * C447) * C79308) *
                C81 +
            (C454 + C470) * C82) *
               C79311 -
           ((C2236 + C2222) * C82 + ((C245 * C1792 + C79307 * C2212) * C79308 +
                                     (C245 * C1682 + C79307 * C1906) * C166) *
                                        C81) *
               C79305 +
           (((C245 * C1683 + C79307 * C1907) * C166 +
             (C245 * C1793 + C79307 * C2213) * C79308) *
                C81 +
            (C2223 + C2237) * C82) *
               C79293 -
           ((C12086 + C12084) * C82 +
            ((C245 * C10378 + C79307 * C10574) * C79308 +
             (C245 * C10320 + C79307 * C10428) * C166) *
                C81) *
               C79275) *
              C79009 * C13595 +
          (((C2222 + C2236) * C81 + (C2226 + C2238) * C82) * C79305 -
           ((C471 + C459) * C82 + (C470 + C454) * C81) * C79311 -
           ((C2239 + C2231) * C82 + (C2237 + C2223) * C81) * C79293 +
           ((C12084 + C12086) * C81 +
            ((C245 * C11721 + C79307 * C11866) * C166 +
             (C245 * C11792 + C79307 * C12080) * C79308) *
                C82) *
               C79275) *
              C79009 * C78992)) /
            (p * q * std::sqrt(p + q));
    d2eezx[17] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C245 +
             (C93 * C246 + C81 * C515 + C95 * C247 + C82 * C516) * C79307) *
                C79308 * C17509 -
            ((C95 * C1905 + C82 * C2313 + C93 * C1906 + C81 * C2314) * C79307 +
             (C95 * C1681 + C82 * C1689 + C93 * C1682 + C81 * C1690) * C245) *
                C79308 * C79114) *
               C79300 +
           (((C93 * C3931 + C81 * C3935 + C95 * C3932 + C82 * C3936) * C245 +
             (C93 * C4165 + C81 * C4613 + C95 * C4166 + C82 * C4614) * C79307) *
                C79308 * C79114 -
            ((C95 * C972 + C82 * C1380 + C93 * C973 + C81 * C1381) * C79307 +
             (C95 * C748 + C82 * C756 + C93 * C749 + C81 * C757) * C245) *
                C79308 * C17509) *
               C79285 +
           (((C93 * C750 + C81 * C758 + C95 * C751 + C82 * C759) * C245 +
             (C93 * C974 + C81 * C1382 + C95 * C975 + C82 * C1383) * C79307) *
                C79308 * C17509 -
            ((C95 * C6227 + C82 * C6559 + C93 * C6228 + C81 * C6560) * C79307 +
             (C95 * C6043 + C82 * C6049 + C93 * C6044 + C81 * C6050) * C245) *
                C79308 * C79114) *
               C79259) *
              C13595 +
          ((((C93 * C1681 + C81 * C1689 + C95 * C1685 + C82 * C1693) * C245 +
             (C93 * C1905 + C81 * C2313 + C95 * C1909 + C82 * C2317) * C79307) *
                C79308 * C79114 -
            ((C95 * C248 + C82 * C517 + C93 * C247 + C81 * C516) * C79307 +
             (C95 * C98 + C82 * C104 + C93 * C97 + C81 * C103) * C245) *
                C79308 * C17509) *
               C79300 +
           (((C93 * C748 + C81 * C756 + C95 * C752 + C82 * C760) * C245 +
             (C93 * C972 + C81 * C1380 + C95 * C976 + C82 * C1384) * C79307) *
                C79308 * C17509 -
            ((C95 * C4167 + C82 * C4615 + C93 * C4166 + C81 * C4614) * C79307 +
             (C95 * C3933 + C82 * C3937 + C93 * C3932 + C81 * C3936) * C245) *
                C79308 * C79114) *
               C79285 +
           (((C93 * C6043 + C81 * C6049 + C95 * C7477 + C82 * C7478) * C245 +
             (C93 * C6227 + C81 * C6559 + C95 * C7686 + C82 * C8100) * C79307) *
                C79308 * C79114 -
            ((C95 * C977 + C82 * C1385 + C93 * C975 + C81 * C1383) * C79307 +
             (C95 * C753 + C82 * C761 + C93 * C751 + C81 * C759) * C245) *
                C79308 * C17509) *
               C79259) *
              C78992)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C245 +
            (C93 * C246 + C81 * C515 + C95 * C247 + C82 * C516) * C79307) *
               C79308 * C17509 -
           ((C95 * C1905 + C82 * C2313 + C93 * C1906 + C81 * C2314) * C79307 +
            (C95 * C1681 + C82 * C1689 + C93 * C1682 + C81 * C1690) * C245) *
               C79308 * C79114) *
              C79009 * C79309 +
          (((C93 * C1681 + C81 * C1689 + C95 * C1685 + C82 * C1693) * C245 +
            (C93 * C1905 + C81 * C2313 + C95 * C1909 + C82 * C2317) * C79307) *
               C79308 * C79114 -
           ((C95 * C248 + C82 * C517 + C93 * C247 + C81 * C516) * C79307 +
            (C95 * C98 + C82 * C104 + C93 * C97 + C81 * C103) * C245) *
               C79308 * C17509) *
              C79009 * C79299 +
          (((C93 * C98 + C81 * C104 + C95 * C99 + C82 * C105) * C245 +
            (C93 * C248 + C81 * C517 + C95 * C249 + C82 * C518) * C79307) *
               C79308 * C17509 -
           ((C95 * C1911 + C82 * C2319 + C93 * C1909 + C81 * C2317) * C79307 +
            (C95 * C1687 + C82 * C1695 + C93 * C1685 + C81 * C1693) * C245) *
               C79308 * C79114) *
              C79009 * C79283 +
          (((C93 * C1687 + C81 * C1695 + C95 * C3255 + C82 * C3256) * C245 +
            (C93 * C1911 + C81 * C2319 + C95 * C3400 + C82 * C3686) * C79307) *
               C79308 * C79114 -
           ((C95 * C250 + C82 * C519 + C93 * C249 + C81 * C518) * C79307 +
            (C95 * C100 + C82 * C106 + C93 * C99 + C81 * C105) * C245) *
               C79308 * C17509) *
              C79009 * C79263)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C245 +
            (C93 * C246 + C81 * C515 + C95 * C247 + C82 * C516) * C79307) *
               C79308 * C79311 -
           ((C95 * C1905 + C82 * C2313 + C93 * C1906 + C81 * C2314) * C79307 +
            (C95 * C1681 + C82 * C1689 + C93 * C1682 + C81 * C1690) * C245) *
               C79308 * C79305 +
           ((C93 * C1683 + C81 * C1691 + C95 * C1684 + C82 * C1692) * C245 +
            (C93 * C1907 + C81 * C2315 + C95 * C1908 + C82 * C2316) * C79307) *
               C79308 * C79293 -
           ((C95 * C10427 + C82 * C10619 + C93 * C10428 + C81 * C10620) *
                C79307 +
            (C95 * C10319 + C82 * C10323 + C93 * C10320 + C81 * C10324) *
                C245) *
               C79308 * C79275) *
              C79009 * C13595 +
          (((C93 * C1681 + C81 * C1689 + C95 * C1685 + C82 * C1693) * C245 +
            (C93 * C1905 + C81 * C2313 + C95 * C1909 + C82 * C2317) * C79307) *
               C79308 * C79305 -
           ((C95 * C248 + C82 * C517 + C93 * C247 + C81 * C516) * C79307 +
            (C95 * C98 + C82 * C104 + C93 * C97 + C81 * C103) * C245) *
               C79308 * C79311 -
           ((C95 * C1910 + C82 * C2318 + C93 * C1908 + C81 * C2316) * C79307 +
            (C95 * C1686 + C82 * C1694 + C93 * C1684 + C81 * C1692) * C245) *
               C79308 * C79293 +
           ((C93 * C10319 + C81 * C10323 + C95 * C11721 + C82 * C11722) * C245 +
            (C93 * C10427 + C81 * C10619 + C95 * C11866 + C82 * C12152) *
                C79307) *
               C79308 * C79275) *
              C79009 * C78992)) /
            (p * q * std::sqrt(p + q));
    d2eezy[17] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C166 * C96 + C79308 * C167) * C245 +
              (C166 * C246 + C79308 * C563) * C79307) *
                 C81 +
             (C570 + C586) * C82) *
                C17509 -
            ((C2420 + C2406) * C82 + ((C166 * C1906 + C79308 * C2396) * C79307 +
                                      (C166 * C1682 + C79308 * C1792) * C245) *
                                         C81) *
                C79114) *
               C79300 +
           ((((C166 * C3931 + C79308 * C4047) * C245 +
              (C166 * C4165 + C79308 * C4715) * C79307) *
                 C81 +
             (C4720 + C4728) * C82) *
                C79114 -
            ((C1487 + C1473) * C82 + ((C166 * C973 + C79308 * C1463) * C79307 +
                                      (C166 * C749 + C79308 * C859) * C245) *
                                         C81) *
                C17509) *
               C79285 +
           ((((C166 * C750 + C79308 * C860) * C245 +
              (C166 * C974 + C79308 * C1464) * C79307) *
                 C81 +
             (C1474 + C1488) * C82) *
                C17509 -
            ((C8205 + C8203) * C82 + ((C166 * C6228 + C79308 * C6640) * C79307 +
                                      (C166 * C6044 + C79308 * C6142) * C245) *
                                         C81) *
                C79114) *
               C79259) *
              C13595 +
          ((((C2406 + C2420) * C81 + (C2410 + C2422) * C82) * C79114 -
            ((C587 + C575) * C82 + (C586 + C570) * C81) * C17509) *
               C79300 +
           (((C1473 + C1487) * C81 + (C1477 + C1489) * C82) * C17509 -
            ((C4729 + C4725) * C82 + (C4728 + C4720) * C81) * C79114) *
               C79285 +
           (((C8203 + C8205) * C81 +
             ((C166 * C7477 + C79308 * C7580) * C245 +
              (C166 * C7686 + C79308 * C8199) * C79307) *
                 C82) *
                C79114 -
            ((C1490 + C1482) * C82 + (C1488 + C1474) * C81) * C17509) *
               C79259) *
              C78992)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C166 * C96 + C79308 * C167) * C245 +
             (C166 * C246 + C79308 * C563) * C79307) *
                C81 +
            (C570 + C586) * C82) *
               C17509 -
           ((C2420 + C2406) * C82 + ((C166 * C1906 + C79308 * C2396) * C79307 +
                                     (C166 * C1682 + C79308 * C1792) * C245) *
                                        C81) *
               C79114) *
              C79009 * C79309 +
          (((C2406 + C2420) * C81 + (C2410 + C2422) * C82) * C79114 -
           ((C587 + C575) * C82 + (C586 + C570) * C81) * C17509) *
              C79009 * C79299 +
          (((C575 + C587) * C81 + (C576 + C588) * C82) * C17509 -
           ((C3759 + C3757) * C82 + (C2422 + C2410) * C81) * C79114) *
              C79009 * C79283 +
          (((C3757 + C3759) * C81 + ((C166 * C3255 + C79308 * C3326) * C245 +
                                     (C166 * C3400 + C79308 * C3753) * C79307) *
                                        C82) *
               C79114 -
           ((C589 + C581) * C82 + (C588 + C576) * C81) * C17509) *
              C79009 * C79263)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C166 * C96 + C79308 * C167) * C245 +
             (C166 * C246 + C79308 * C563) * C79307) *
                C81 +
            (C570 + C586) * C82) *
               C79311 -
           ((C2420 + C2406) * C82 + ((C166 * C1906 + C79308 * C2396) * C79307 +
                                     (C166 * C1682 + C79308 * C1792) * C245) *
                                        C81) *
               C79305 +
           (((C166 * C1683 + C79308 * C1793) * C245 +
             (C166 * C1907 + C79308 * C2397) * C79307) *
                C81 +
            (C2407 + C2421) * C82) *
               C79293 -
           ((C12225 + C12223) * C82 +
            ((C166 * C10428 + C79308 * C10666) * C79307 +
             (C166 * C10320 + C79308 * C10378) * C245) *
                C81) *
               C79275) *
              C79009 * C13595 +
          (((C2406 + C2420) * C81 + (C2410 + C2422) * C82) * C79305 -
           ((C587 + C575) * C82 + (C586 + C570) * C81) * C79311 -
           ((C2423 + C2415) * C82 + (C2421 + C2407) * C81) * C79293 +
           ((C12223 + C12225) * C81 +
            ((C166 * C11721 + C79308 * C11792) * C245 +
             (C166 * C11866 + C79308 * C12219) * C79307) *
                C82) *
               C79275) *
              C79009 * C78992)) /
            (p * q * std::sqrt(p + q));
    d2eezz[17] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C631 * C96 + C639 + C639 + C79307 * C632) * C79308 * C81 +
             C665 * C82) *
                C17509 -
            (C2534 * C82 +
             (C631 * C1682 + C2509 + C2509 + C79307 * C2498) * C79308 * C81) *
                C79114) *
               C79300 +
           (((C631 * C3931 + C4832 + C4832 + C79307 * C4827) * C79308 * C81 +
             C4846 * C82) *
                C79114 -
            (C1601 * C82 +
             (C631 * C749 + C1576 + C1576 + C79307 * C1565) * C79308 * C81) *
                C17509) *
               C79285 +
           (((C631 * C750 + C1577 + C1577 + C79307 * C1566) * C79308 * C81 +
             C1602 * C82) *
                C17509 -
            (C8311 * C82 +
             (C631 * C6044 + C6727 + C6727 + C79307 * C6720) * C79308 * C81) *
                C79114) *
               C79259) *
              C13595 +
          (((C2534 * C81 + C2536 * C82) * C79114 -
            (C666 * C82 + C665 * C81) * C17509) *
               C79300 +
           ((C1601 * C81 + C1603 * C82) * C17509 -
            (C4847 * C82 + C4846 * C81) * C79114) *
               C79285 +
           ((C8311 * C81 +
             (C631 * C7477 + C8307 + C8307 + C79307 * C8303) * C79308 * C82) *
                C79114 -
            (C1604 * C82 + C1602 * C81) * C17509) *
               C79259) *
              C78992)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C631 * C96 + C639 + C639 + C79307 * C632) * C79308 * C81 +
            C665 * C82) *
               C17509 -
           (C2534 * C82 +
            (C631 * C1682 + C2509 + C2509 + C79307 * C2498) * C79308 * C81) *
               C79114) *
              C79009 * C79309 +
          ((C2534 * C81 + C2536 * C82) * C79114 -
           (C666 * C82 + C665 * C81) * C17509) *
              C79009 * C79299 +
          ((C666 * C81 + C667 * C82) * C17509 -
           (C3833 * C82 + C2536 * C81) * C79114) *
              C79009 * C79283 +
          ((C3833 * C81 +
            (C631 * C3255 + C3829 + C3829 + C79307 * C3825) * C79308 * C82) *
               C79114 -
           (C668 * C82 + C667 * C81) * C17509) *
              C79009 * C79263)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C631 * C96 + C639 + C639 + C79307 * C632) * C79308 * C81 +
            C665 * C82) *
               C79311 -
           (C2534 * C82 +
            (C631 * C1682 + C2509 + C2509 + C79307 * C2498) * C79308 * C81) *
               C79305 +
           ((C631 * C1683 + C2510 + C2510 + C79307 * C2499) * C79308 * C81 +
            C2535 * C82) *
               C79293 -
           (C12299 * C82 + (C631 * C10320 + C10717 + C10717 + C79307 * C10712) *
                               C79308 * C81) *
               C79275) *
              C79009 * C13595 +
          ((C2534 * C81 + C2536 * C82) * C79305 -
           (C666 * C82 + C665 * C81) * C79311 -
           (C2537 * C82 + C2535 * C81) * C79293 +
           (C12299 * C81 + (C631 * C11721 + C12295 + C12295 + C79307 * C12291) *
                               C79308 * C82) *
               C79275) *
              C79009 * C78992)) /
            (p * q * std::sqrt(p + q));
    d2eexx[18] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((C92 * C96 + C115 + C115 + C81 * C108 + C94 * C97 + C116 +
                      C116 + C82 * C109) *
                         C79307 * C79308 * C79110 -
                     (C94 * C1681 + C1706 + C1706 + C82 * C1697 + C92 * C1682 +
                      C1707 + C1707 + C81 * C1698) *
                         C79307 * C79308 * C79117 +
                     (C92 * C1683 + C1708 + C1708 + C81 * C1699 + C94 * C1684 +
                      C1709 + C1709 + C82 * C1700) *
                         C79307 * C79308 * C20477) *
                        C79009 * C78986 +
                    ((C92 * C1681 + C1710 + C1710 + C81 * C1697 + C94 * C1685 +
                      C1711 + C1711 + C82 * C1701) *
                         C79307 * C79308 * C79117 -
                     (C94 * C98 + C117 + C117 + C82 * C110 + C92 * C97 + C118 +
                      C118 + C81 * C109) *
                         C79307 * C79308 * C79110 -
                     (C94 * C1686 + C1712 + C1712 + C82 * C1702 + C92 * C1684 +
                      C1713 + C1713 + C81 * C1700) *
                         C79307 * C79308 * C20477) *
                        C79009 * C78995 +
                    ((C92 * C98 + C119 + C119 + C81 * C110 + C94 * C99 + C120 +
                      C120 + C82 * C111) *
                         C79307 * C79308 * C79110 -
                     (C94 * C1687 + C1714 + C1714 + C82 * C1703 + C92 * C1685 +
                      C1715 + C1715 + C81 * C1701) *
                         C79307 * C79308 * C79117 +
                     (C92 * C1686 + C1716 + C1716 + C81 * C1702 + C94 * C1688 +
                      C1717 + C1717 + C82 * C1704) *
                         C79307 * C79308 * C20477) *
                        C79009 * C15086)) /
                  (p * q * std::sqrt(p + q));
    d2eexy[18] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C166 * C96 + C79308 * C167) * C93 +
            (C166 * C102 + C79308 * C173) * C81 + C196 * C95 + C197 * C82) *
               C79307 * C79110 -
           (C1824 * C82 + C1825 * C95 + (C166 * C1690 + C79308 * C1800) * C81 +
            (C166 * C1682 + C79308 * C1792) * C93) *
               C79307 * C79117 +
           ((C166 * C1683 + C79308 * C1793) * C93 +
            (C166 * C1691 + C79308 * C1801) * C81 + C1826 * C95 + C1827 * C82) *
               C79307 * C20477) *
              C79009 * C78986 +
          ((C1825 * C93 + C1824 * C81 + C1828 * C95 + C1829 * C82) * C79307 *
               C79117 -
           (C198 * C82 + C199 * C95 + C197 * C81 + C196 * C93) * C79307 *
               C79110 -
           (C1830 * C82 + C1831 * C95 + C1827 * C81 + C1826 * C93) * C79307 *
               C20477) *
              C79009 * C78995 +
          ((C199 * C93 + C198 * C81 + C200 * C95 + C201 * C82) * C79307 *
               C79110 -
           (C3333 * C82 + C3334 * C95 + C1829 * C81 + C1828 * C93) * C79307 *
               C79117 +
           (C1831 * C93 + C1830 * C81 + (C166 * C1688 + C79308 * C1798) * C95 +
            (C166 * C1696 + C79308 * C1806) * C82) *
               C79307 * C20477) *
              C79009 * C15086)) /
        (p * q * std::sqrt(p + q));
    d2eexz[18] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C245 * C96 + C79307 * C246) * C93 +
            (C245 * C102 + C79307 * C252) * C81 + C275 * C95 + C276 * C82) *
               C79308 * C79110 -
           (C1938 * C82 + C1939 * C95 + (C245 * C1690 + C79307 * C1914) * C81 +
            (C245 * C1682 + C79307 * C1906) * C93) *
               C79308 * C79117 +
           ((C245 * C1683 + C79307 * C1907) * C93 +
            (C245 * C1691 + C79307 * C1915) * C81 + C1940 * C95 + C1941 * C82) *
               C79308 * C20477) *
              C79009 * C78986 +
          ((C1939 * C93 + C1938 * C81 + C1942 * C95 + C1943 * C82) * C79308 *
               C79117 -
           (C277 * C82 + C278 * C95 + C276 * C81 + C275 * C93) * C79308 *
               C79110 -
           (C1944 * C82 + C1945 * C95 + C1941 * C81 + C1940 * C93) * C79308 *
               C20477) *
              C79009 * C78995 +
          ((C278 * C93 + C277 * C81 + C279 * C95 + C280 * C82) * C79308 *
               C79110 -
           (C3407 * C82 + C3408 * C95 + C1943 * C81 + C1942 * C93) * C79308 *
               C79117 +
           (C1945 * C93 + C1944 * C81 + (C245 * C1688 + C79307 * C1912) * C95 +
            (C245 * C1696 + C79307 * C1920) * C82) *
               C79308 * C20477) *
              C79009 * C15086)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[18] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C166 +
            (C93 * C167 + C81 * C324 + C95 * C168 + C82 * C325) * C79308) *
               C79307 * C79110 -
           ((C95 * C1791 + C82 * C2019 + C93 * C1792 + C81 * C2020) * C79308 +
            (C95 * C1681 + C82 * C1689 + C93 * C1682 + C81 * C1690) * C166) *
               C79307 * C79117 +
           ((C93 * C1683 + C81 * C1691 + C95 * C1684 + C82 * C1692) * C166 +
            (C93 * C1793 + C81 * C2021 + C95 * C1794 + C82 * C2022) * C79308) *
               C79307 * C20477) *
              C79009 * C78986 +
          (((C93 * C1681 + C81 * C1689 + C95 * C1685 + C82 * C1693) * C166 +
            (C93 * C1791 + C81 * C2019 + C95 * C1795 + C82 * C2023) * C79308) *
               C79307 * C79117 -
           ((C95 * C169 + C82 * C326 + C93 * C168 + C81 * C325) * C79308 +
            (C95 * C98 + C82 * C104 + C93 * C97 + C81 * C103) * C166) *
               C79307 * C79110 -
           ((C95 * C1796 + C82 * C2024 + C93 * C1794 + C81 * C2022) * C79308 +
            (C95 * C1686 + C82 * C1694 + C93 * C1684 + C81 * C1692) * C166) *
               C79307 * C20477) *
              C79009 * C78995 +
          (((C93 * C98 + C81 * C104 + C95 * C99 + C82 * C105) * C166 +
            (C93 * C169 + C81 * C326 + C95 * C170 + C82 * C327) * C79308) *
               C79307 * C79110 -
           ((C95 * C1797 + C82 * C2025 + C93 * C1795 + C81 * C2023) * C79308 +
            (C95 * C1687 + C82 * C1695 + C93 * C1685 + C81 * C1693) * C166) *
               C79307 * C79117 +
           ((C93 * C1686 + C81 * C1694 + C95 * C1688 + C82 * C1696) * C166 +
            (C93 * C1796 + C81 * C2024 + C95 * C1798 + C82 * C2026) * C79308) *
               C79307 * C20477) *
              C79009 * C15086)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[18] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C372 * C96 + C380 + C380 + C79308 * C373) * C81 + C402 * C82) *
               C79307 * C79110 -
           (C2134 * C82 +
            (C372 * C1682 + C2113 + C2113 + C79308 * C2102) * C81) *
               C79307 * C79117 +
           ((C372 * C1683 + C2114 + C2114 + C79308 * C2103) * C81 +
            C2135 * C82) *
               C79307 * C20477) *
              C79009 * C78986 +
          ((C2134 * C81 + C2136 * C82) * C79307 * C79117 -
           (C403 * C82 + C402 * C81) * C79307 * C79110 -
           (C2137 * C82 + C2135 * C81) * C79307 * C20477) *
              C79009 * C78995 +
          ((C403 * C81 + C404 * C82) * C79307 * C79110 -
           (C3548 * C82 + C2136 * C81) * C79307 * C79117 +
           (C2137 * C81 +
            (C372 * C1688 + C2125 + C2125 + C79308 * C2108) * C82) *
               C79307 * C20477) *
              C79009 * C15086)) /
        (p * q * std::sqrt(p + q));
    d2eeyz[18] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C245 * C96 + C79307 * C246) * C166 +
             (C245 * C167 + C79307 * C447) * C79308) *
                C81 +
            (C454 + C470) * C82) *
               C79110 -
           ((C2236 + C2222) * C82 + ((C245 * C1792 + C79307 * C2212) * C79308 +
                                     (C245 * C1682 + C79307 * C1906) * C166) *
                                        C81) *
               C79117 +
           (((C245 * C1683 + C79307 * C1907) * C166 +
             (C245 * C1793 + C79307 * C2213) * C79308) *
                C81 +
            (C2223 + C2237) * C82) *
               C20477) *
              C79009 * C78986 +
          (((C2222 + C2236) * C81 + (C2226 + C2238) * C82) * C79117 -
           ((C471 + C459) * C82 + (C470 + C454) * C81) * C79110 -
           ((C2239 + C2231) * C82 + (C2237 + C2223) * C81) * C20477) *
              C79009 * C78995 +
          (((C459 + C471) * C81 + (C460 + C472) * C82) * C79110 -
           ((C3620 + C3618) * C82 + (C2238 + C2226) * C81) * C79117 +
           ((C2231 + C2239) * C81 + ((C245 * C1688 + C79307 * C1912) * C166 +
                                     (C245 * C1798 + C79307 * C2218) * C79308) *
                                        C82) *
               C20477) *
              C79009 * C15086)) /
        (p * q * std::sqrt(p + q));
    d2eezx[18] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C245 +
            (C93 * C246 + C81 * C515 + C95 * C247 + C82 * C516) * C79307) *
               C79308 * C79110 -
           ((C95 * C1905 + C82 * C2313 + C93 * C1906 + C81 * C2314) * C79307 +
            (C95 * C1681 + C82 * C1689 + C93 * C1682 + C81 * C1690) * C245) *
               C79308 * C79117 +
           ((C93 * C1683 + C81 * C1691 + C95 * C1684 + C82 * C1692) * C245 +
            (C93 * C1907 + C81 * C2315 + C95 * C1908 + C82 * C2316) * C79307) *
               C79308 * C20477) *
              C79009 * C78986 +
          (((C93 * C1681 + C81 * C1689 + C95 * C1685 + C82 * C1693) * C245 +
            (C93 * C1905 + C81 * C2313 + C95 * C1909 + C82 * C2317) * C79307) *
               C79308 * C79117 -
           ((C95 * C248 + C82 * C517 + C93 * C247 + C81 * C516) * C79307 +
            (C95 * C98 + C82 * C104 + C93 * C97 + C81 * C103) * C245) *
               C79308 * C79110 -
           ((C95 * C1910 + C82 * C2318 + C93 * C1908 + C81 * C2316) * C79307 +
            (C95 * C1686 + C82 * C1694 + C93 * C1684 + C81 * C1692) * C245) *
               C79308 * C20477) *
              C79009 * C78995 +
          (((C93 * C98 + C81 * C104 + C95 * C99 + C82 * C105) * C245 +
            (C93 * C248 + C81 * C517 + C95 * C249 + C82 * C518) * C79307) *
               C79308 * C79110 -
           ((C95 * C1911 + C82 * C2319 + C93 * C1909 + C81 * C2317) * C79307 +
            (C95 * C1687 + C82 * C1695 + C93 * C1685 + C81 * C1693) * C245) *
               C79308 * C79117 +
           ((C93 * C1686 + C81 * C1694 + C95 * C1688 + C82 * C1696) * C245 +
            (C93 * C1910 + C81 * C2318 + C95 * C1912 + C82 * C2320) * C79307) *
               C79308 * C20477) *
              C79009 * C15086)) /
        (p * q * std::sqrt(p + q));
    d2eezy[18] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C166 * C96 + C79308 * C167) * C245 +
             (C166 * C246 + C79308 * C563) * C79307) *
                C81 +
            (C570 + C586) * C82) *
               C79110 -
           ((C2420 + C2406) * C82 + ((C166 * C1906 + C79308 * C2396) * C79307 +
                                     (C166 * C1682 + C79308 * C1792) * C245) *
                                        C81) *
               C79117 +
           (((C166 * C1683 + C79308 * C1793) * C245 +
             (C166 * C1907 + C79308 * C2397) * C79307) *
                C81 +
            (C2407 + C2421) * C82) *
               C20477) *
              C79009 * C78986 +
          (((C2406 + C2420) * C81 + (C2410 + C2422) * C82) * C79117 -
           ((C587 + C575) * C82 + (C586 + C570) * C81) * C79110 -
           ((C2423 + C2415) * C82 + (C2421 + C2407) * C81) * C20477) *
              C79009 * C78995 +
          (((C575 + C587) * C81 + (C576 + C588) * C82) * C79110 -
           ((C3759 + C3757) * C82 + (C2422 + C2410) * C81) * C79117 +
           ((C2415 + C2423) * C81 + ((C166 * C1688 + C79308 * C1798) * C245 +
                                     (C166 * C1912 + C79308 * C2402) * C79307) *
                                        C82) *
               C20477) *
              C79009 * C15086)) /
        (p * q * std::sqrt(p + q));
    d2eezz[18] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C631 * C96 + C639 + C639 + C79307 * C632) * C79308 * C81 +
            C665 * C82) *
               C79110 -
           (C2534 * C82 +
            (C631 * C1682 + C2509 + C2509 + C79307 * C2498) * C79308 * C81) *
               C79117 +
           ((C631 * C1683 + C2510 + C2510 + C79307 * C2499) * C79308 * C81 +
            C2535 * C82) *
               C20477) *
              C79009 * C78986 +
          ((C2534 * C81 + C2536 * C82) * C79117 -
           (C666 * C82 + C665 * C81) * C79110 -
           (C2537 * C82 + C2535 * C81) * C20477) *
              C79009 * C78995 +
          ((C666 * C81 + C667 * C82) * C79110 -
           (C3833 * C82 + C2536 * C81) * C79117 +
           (C2537 * C81 +
            (C631 * C1688 + C2521 + C2521 + C79307 * C2504) * C79308 * C82) *
               C20477) *
              C79009 * C15086)) /
        (p * q * std::sqrt(p + q));
    d2eexx[19] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((C92 * C96 + C115 + C115 + C81 * C108 + C94 * C97 + C116 +
                      C116 + C82 * C109) *
                         C79307 * C79308 * C17509 -
                     (C94 * C1681 + C1706 + C1706 + C82 * C1697 + C92 * C1682 +
                      C1707 + C1707 + C81 * C1698) *
                         C79307 * C79308 * C79114) *
                        C79009 * C79309 +
                    ((C92 * C1681 + C1710 + C1710 + C81 * C1697 + C94 * C1685 +
                      C1711 + C1711 + C82 * C1701) *
                         C79307 * C79308 * C79114 -
                     (C94 * C98 + C117 + C117 + C82 * C110 + C92 * C97 + C118 +
                      C118 + C81 * C109) *
                         C79307 * C79308 * C17509) *
                        C79009 * C79299 +
                    ((C92 * C98 + C119 + C119 + C81 * C110 + C94 * C99 + C120 +
                      C120 + C82 * C111) *
                         C79307 * C79308 * C17509 -
                     (C94 * C1687 + C1714 + C1714 + C82 * C1703 + C92 * C1685 +
                      C1715 + C1715 + C81 * C1701) *
                         C79307 * C79308 * C79114) *
                        C79009 * C79283 +
                    ((C92 * C1687 + C3259 + C3259 + C81 * C1703 + C94 * C3255 +
                      C3260 + C3260 + C82 * C3257) *
                         C79307 * C79308 * C79114 -
                     (C94 * C100 + C121 + C121 + C82 * C112 + C92 * C99 + C122 +
                      C122 + C81 * C111) *
                         C79307 * C79308 * C17509) *
                        C79009 * C79263)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C92 * C96 + C115 + C115 + C81 * C108 + C94 * C97 + C116 +
                       C116 + C82 * C109) *
                          C79307 * C79308 * C17509 -
                      (C94 * C1681 + C1706 + C1706 + C82 * C1697 + C92 * C1682 +
                       C1707 + C1707 + C81 * C1698) *
                          C79307 * C79308 * C79114) *
                         C79300 +
                     ((C92 * C3931 + C3944 + C3944 + C81 * C3939 + C94 * C3932 +
                       C3945 + C3945 + C82 * C3940) *
                          C79307 * C79308 * C79114 -
                      (C94 * C748 + C773 + C773 + C82 * C764 + C92 * C749 +
                       C774 + C774 + C81 * C765) *
                          C79307 * C79308 * C17509) *
                         C79285 +
                     ((C92 * C750 + C775 + C775 + C81 * C766 + C94 * C751 +
                       C776 + C776 + C82 * C767) *
                          C79307 * C79308 * C17509 -
                      (C94 * C6043 + C6062 + C6062 + C82 * C6055 + C92 * C6044 +
                       C6063 + C6063 + C81 * C6056) *
                          C79307 * C79308 * C79114) *
                         C79259) *
                        C13595 +
                    (((C92 * C1681 + C1710 + C1710 + C81 * C1697 + C94 * C1685 +
                       C1711 + C1711 + C82 * C1701) *
                          C79307 * C79308 * C79114 -
                      (C94 * C98 + C117 + C117 + C82 * C110 + C92 * C97 + C118 +
                       C118 + C81 * C109) *
                          C79307 * C79308 * C17509) *
                         C79300 +
                     ((C92 * C748 + C777 + C777 + C81 * C764 + C94 * C752 +
                       C778 + C778 + C82 * C768) *
                          C79307 * C79308 * C17509 -
                      (C94 * C3933 + C3946 + C3946 + C82 * C3941 + C92 * C3932 +
                       C3947 + C3947 + C81 * C3940) *
                          C79307 * C79308 * C79114) *
                         C79285 +
                     ((C92 * C6043 + C7481 + C7481 + C81 * C6055 + C94 * C7477 +
                       C7482 + C7482 + C82 * C7479) *
                          C79307 * C79308 * C79114 -
                      (C94 * C753 + C779 + C779 + C82 * C769 + C92 * C751 +
                       C780 + C780 + C81 * C767) *
                          C79307 * C79308 * C17509) *
                         C79259) *
                        C78992)) /
                      (p * q * std::sqrt(p + q));
    d2eexy[19] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C166 * C96 + C79308 * C167) * C93 +
            (C166 * C102 + C79308 * C173) * C81 + C196 * C95 + C197 * C82) *
               C79307 * C17509 -
           (C1824 * C82 + C1825 * C95 + (C166 * C1690 + C79308 * C1800) * C81 +
            (C166 * C1682 + C79308 * C1792) * C93) *
               C79307 * C79114) *
              C79009 * C79309 +
          ((C1825 * C93 + C1824 * C81 + C1828 * C95 + C1829 * C82) * C79307 *
               C79114 -
           (C198 * C82 + C199 * C95 + C197 * C81 + C196 * C93) * C79307 *
               C17509) *
              C79009 * C79299 +
          ((C199 * C93 + C198 * C81 + C200 * C95 + C201 * C82) * C79307 *
               C17509 -
           (C3333 * C82 + C3334 * C95 + C1829 * C81 + C1828 * C93) * C79307 *
               C79114) *
              C79009 * C79283 +
          ((C3334 * C93 + C3333 * C81 + (C166 * C3255 + C79308 * C3326) * C95 +
            (C166 * C3256 + C79308 * C3327) * C82) *
               C79307 * C79114 -
           (C202 * C82 + C203 * C95 + C201 * C81 + C200 * C93) * C79307 *
               C17509) *
              C79009 * C79263)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C166 * C96 + C79308 * C167) * C93 +
             (C166 * C102 + C79308 * C173) * C81 + C196 * C95 + C197 * C82) *
                C79307 * C17509 -
            (C1824 * C82 + C1825 * C95 + (C166 * C1690 + C79308 * C1800) * C81 +
             (C166 * C1682 + C79308 * C1792) * C93) *
                C79307 * C79114) *
               C79300 +
           (((C166 * C3931 + C79308 * C4047) * C93 +
             (C166 * C3935 + C79308 * C4051) * C81 + C4064 * C95 +
             C4065 * C82) *
                C79307 * C79114 -
            (C891 * C82 + C892 * C95 + (C166 * C757 + C79308 * C867) * C81 +
             (C166 * C749 + C79308 * C859) * C93) *
                C79307 * C17509) *
               C79285 +
           (((C166 * C750 + C79308 * C860) * C93 +
             (C166 * C758 + C79308 * C868) * C81 + C893 * C95 + C894 * C82) *
                C79307 * C17509 -
            (C7587 * C82 + C7588 * C95 + (C166 * C6050 + C79308 * C6148) * C81 +
             (C166 * C6044 + C79308 * C6142) * C93) *
                C79307 * C79114) *
               C79259) *
              C13595 +
          (((C1825 * C93 + C1824 * C81 + C1828 * C95 + C1829 * C82) * C79307 *
                C79114 -
            (C198 * C82 + C199 * C95 + C197 * C81 + C196 * C93) * C79307 *
                C17509) *
               C79300 +
           ((C892 * C93 + C891 * C81 + C895 * C95 + C896 * C82) * C79307 *
                C17509 -
            (C4066 * C82 + C4067 * C95 + C4065 * C81 + C4064 * C93) * C79307 *
                C79114) *
               C79285 +
           ((C7588 * C93 + C7587 * C81 + (C166 * C7477 + C79308 * C7580) * C95 +
             (C166 * C7478 + C79308 * C7581) * C82) *
                C79307 * C79114 -
            (C897 * C82 + C898 * C95 + C894 * C81 + C893 * C93) * C79307 *
                C17509) *
               C79259) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eexz[19] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C245 * C96 + C79307 * C246) * C93 +
            (C245 * C102 + C79307 * C252) * C81 + C275 * C95 + C276 * C82) *
               C79308 * C17509 -
           (C1938 * C82 + C1939 * C95 + (C245 * C1690 + C79307 * C1914) * C81 +
            (C245 * C1682 + C79307 * C1906) * C93) *
               C79308 * C79114) *
              C79009 * C79309 +
          ((C1939 * C93 + C1938 * C81 + C1942 * C95 + C1943 * C82) * C79308 *
               C79114 -
           (C277 * C82 + C278 * C95 + C276 * C81 + C275 * C93) * C79308 *
               C17509) *
              C79009 * C79299 +
          ((C278 * C93 + C277 * C81 + C279 * C95 + C280 * C82) * C79308 *
               C17509 -
           (C3407 * C82 + C3408 * C95 + C1943 * C81 + C1942 * C93) * C79308 *
               C79114) *
              C79009 * C79283 +
          ((C3408 * C93 + C3407 * C81 + (C245 * C3255 + C79307 * C3400) * C95 +
            (C245 * C3256 + C79307 * C3401) * C82) *
               C79308 * C79114 -
           (C281 * C82 + C282 * C95 + C280 * C81 + C279 * C93) * C79308 *
               C17509) *
              C79009 * C79263)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C245 * C96 + C79307 * C246) * C93 +
             (C245 * C102 + C79307 * C252) * C81 + C275 * C95 + C276 * C82) *
                C79308 * C17509 -
            (C1938 * C82 + C1939 * C95 + (C245 * C1690 + C79307 * C1914) * C81 +
             (C245 * C1682 + C79307 * C1906) * C93) *
                C79308 * C79114) *
               C79300 +
           (((C245 * C3931 + C79307 * C4165) * C93 +
             (C245 * C3935 + C79307 * C4169) * C81 + C4182 * C95 +
             C4183 * C82) *
                C79308 * C79114 -
            (C1005 * C82 + C1006 * C95 + (C245 * C757 + C79307 * C981) * C81 +
             (C245 * C749 + C79307 * C973) * C93) *
                C79308 * C17509) *
               C79285 +
           (((C245 * C750 + C79307 * C974) * C93 +
             (C245 * C758 + C79307 * C982) * C81 + C1007 * C95 + C1008 * C82) *
                C79308 * C17509 -
            (C7693 * C82 + C7694 * C95 + (C245 * C6050 + C79307 * C6234) * C81 +
             (C245 * C6044 + C79307 * C6228) * C93) *
                C79308 * C79114) *
               C79259) *
              C13595 +
          (((C1939 * C93 + C1938 * C81 + C1942 * C95 + C1943 * C82) * C79308 *
                C79114 -
            (C277 * C82 + C278 * C95 + C276 * C81 + C275 * C93) * C79308 *
                C17509) *
               C79300 +
           ((C1006 * C93 + C1005 * C81 + C1009 * C95 + C1010 * C82) * C79308 *
                C17509 -
            (C4184 * C82 + C4185 * C95 + C4183 * C81 + C4182 * C93) * C79308 *
                C79114) *
               C79285 +
           ((C7694 * C93 + C7693 * C81 + (C245 * C7477 + C79307 * C7686) * C95 +
             (C245 * C7478 + C79307 * C7687) * C82) *
                C79308 * C79114 -
            (C1011 * C82 + C1012 * C95 + C1008 * C81 + C1007 * C93) * C79308 *
                C17509) *
               C79259) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eeyx[19] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C166 +
            (C93 * C167 + C81 * C324 + C95 * C168 + C82 * C325) * C79308) *
               C79307 * C17509 -
           ((C95 * C1791 + C82 * C2019 + C93 * C1792 + C81 * C2020) * C79308 +
            (C95 * C1681 + C82 * C1689 + C93 * C1682 + C81 * C1690) * C166) *
               C79307 * C79114) *
              C79009 * C79309 +
          (((C93 * C1681 + C81 * C1689 + C95 * C1685 + C82 * C1693) * C166 +
            (C93 * C1791 + C81 * C2019 + C95 * C1795 + C82 * C2023) * C79308) *
               C79307 * C79114 -
           ((C95 * C169 + C82 * C326 + C93 * C168 + C81 * C325) * C79308 +
            (C95 * C98 + C82 * C104 + C93 * C97 + C81 * C103) * C166) *
               C79307 * C17509) *
              C79009 * C79299 +
          (((C93 * C98 + C81 * C104 + C95 * C99 + C82 * C105) * C166 +
            (C93 * C169 + C81 * C326 + C95 * C170 + C82 * C327) * C79308) *
               C79307 * C17509 -
           ((C95 * C1797 + C82 * C2025 + C93 * C1795 + C81 * C2023) * C79308 +
            (C95 * C1687 + C82 * C1695 + C93 * C1685 + C81 * C1693) * C166) *
               C79307 * C79114) *
              C79009 * C79283 +
          (((C93 * C1687 + C81 * C1695 + C95 * C3255 + C82 * C3256) * C166 +
            (C93 * C1797 + C81 * C2025 + C95 * C3326 + C82 * C3474) * C79308) *
               C79307 * C79114 -
           ((C95 * C171 + C82 * C328 + C93 * C170 + C81 * C327) * C79308 +
            (C95 * C100 + C82 * C106 + C93 * C99 + C81 * C105) * C166) *
               C79307 * C17509) *
              C79009 * C79263)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C166 +
             (C93 * C167 + C81 * C324 + C95 * C168 + C82 * C325) * C79308) *
                C79307 * C17509 -
            ((C95 * C1791 + C82 * C2019 + C93 * C1792 + C81 * C2020) * C79308 +
             (C95 * C1681 + C82 * C1689 + C93 * C1682 + C81 * C1690) * C166) *
                C79307 * C79114) *
               C79300 +
           (((C93 * C3931 + C81 * C3935 + C95 * C3932 + C82 * C3936) * C166 +
             (C93 * C4047 + C81 * C4283 + C95 * C4048 + C82 * C4284) * C79308) *
                C79307 * C79114 -
            ((C95 * C858 + C82 * C1086 + C93 * C859 + C81 * C1087) * C79308 +
             (C95 * C748 + C82 * C756 + C93 * C749 + C81 * C757) * C166) *
                C79307 * C17509) *
               C79285 +
           (((C93 * C750 + C81 * C758 + C95 * C751 + C82 * C759) * C166 +
             (C93 * C860 + C81 * C1088 + C95 * C861 + C82 * C1089) * C79308) *
                C79307 * C17509 -
            ((C95 * C6141 + C82 * C6313 + C93 * C6142 + C81 * C6314) * C79308 +
             (C95 * C6043 + C82 * C6049 + C93 * C6044 + C81 * C6050) * C166) *
                C79307 * C79114) *
               C79259) *
              C13595 +
          ((((C93 * C1681 + C81 * C1689 + C95 * C1685 + C82 * C1693) * C166 +
             (C93 * C1791 + C81 * C2019 + C95 * C1795 + C82 * C2023) * C79308) *
                C79307 * C79114 -
            ((C95 * C169 + C82 * C326 + C93 * C168 + C81 * C325) * C79308 +
             (C95 * C98 + C82 * C104 + C93 * C97 + C81 * C103) * C166) *
                C79307 * C17509) *
               C79300 +
           (((C93 * C748 + C81 * C756 + C95 * C752 + C82 * C760) * C166 +
             (C93 * C858 + C81 * C1086 + C95 * C862 + C82 * C1090) * C79308) *
                C79307 * C17509 -
            ((C95 * C4049 + C82 * C4285 + C93 * C4048 + C81 * C4284) * C79308 +
             (C95 * C3933 + C82 * C3937 + C93 * C3932 + C81 * C3936) * C166) *
                C79307 * C79114) *
               C79285 +
           (((C93 * C6043 + C81 * C6049 + C95 * C7477 + C82 * C7478) * C166 +
             (C93 * C6141 + C81 * C6313 + C95 * C7580 + C82 * C7792) * C79308) *
                C79307 * C79114 -
            ((C95 * C863 + C82 * C1091 + C93 * C861 + C81 * C1089) * C79308 +
             (C95 * C753 + C82 * C761 + C93 * C751 + C81 * C759) * C166) *
                C79307 * C17509) *
               C79259) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eeyy[19] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C372 * C96 + C380 + C380 + C79308 * C373) * C81 + C402 * C82) *
               C79307 * C17509 -
           (C2134 * C82 +
            (C372 * C1682 + C2113 + C2113 + C79308 * C2102) * C81) *
               C79307 * C79114) *
              C79009 * C79309 +
          ((C2134 * C81 + C2136 * C82) * C79307 * C79114 -
           (C403 * C82 + C402 * C81) * C79307 * C17509) *
              C79009 * C79299 +
          ((C403 * C81 + C404 * C82) * C79307 * C17509 -
           (C3548 * C82 + C2136 * C81) * C79307 * C79114) *
              C79009 * C79283 +
          ((C3548 * C81 +
            (C372 * C3255 + C3545 + C3545 + C79308 * C3541) * C82) *
               C79307 * C79114 -
           (C405 * C82 + C404 * C81) * C79307 * C17509) *
              C79009 * C79263)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C372 * C96 + C380 + C380 + C79308 * C373) * C81 + C402 * C82) *
                C79307 * C17509 -
            (C2134 * C82 +
             (C372 * C1682 + C2113 + C2113 + C79308 * C2102) * C81) *
                C79307 * C79114) *
               C79300 +
           (((C372 * C3931 + C4390 + C4390 + C79308 * C4385) * C81 +
             C4402 * C82) *
                C79307 * C79114 -
            (C1201 * C82 +
             (C372 * C749 + C1180 + C1180 + C79308 * C1169) * C81) *
                C79307 * C17509) *
               C79285 +
           (((C372 * C750 + C1181 + C1181 + C79308 * C1170) * C81 +
             C1202 * C82) *
                C79307 * C17509 -
            (C7898 * C82 +
             (C372 * C6044 + C6401 + C6401 + C79308 * C6394) * C81) *
                C79307 * C79114) *
               C79259) *
              C13595 +
          (((C2134 * C81 + C2136 * C82) * C79307 * C79114 -
            (C403 * C82 + C402 * C81) * C79307 * C17509) *
               C79300 +
           ((C1201 * C81 + C1203 * C82) * C79307 * C17509 -
            (C4403 * C82 + C4402 * C81) * C79307 * C79114) *
               C79285 +
           ((C7898 * C81 +
             (C372 * C7477 + C7895 + C7895 + C79308 * C7891) * C82) *
                C79307 * C79114 -
            (C1204 * C82 + C1202 * C81) * C79307 * C17509) *
               C79259) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[19] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C245 * C96 + C79307 * C246) * C166 +
             (C245 * C167 + C79307 * C447) * C79308) *
                C81 +
            (C454 + C470) * C82) *
               C17509 -
           ((C2236 + C2222) * C82 + ((C245 * C1792 + C79307 * C2212) * C79308 +
                                     (C245 * C1682 + C79307 * C1906) * C166) *
                                        C81) *
               C79114) *
              C79009 * C79309 +
          (((C2222 + C2236) * C81 + (C2226 + C2238) * C82) * C79114 -
           ((C471 + C459) * C82 + (C470 + C454) * C81) * C17509) *
              C79009 * C79299 +
          (((C459 + C471) * C81 + (C460 + C472) * C82) * C17509 -
           ((C3620 + C3618) * C82 + (C2238 + C2226) * C81) * C79114) *
              C79009 * C79283 +
          (((C3618 + C3620) * C81 + ((C245 * C3255 + C79307 * C3400) * C166 +
                                     (C245 * C3326 + C79307 * C3614) * C79308) *
                                        C82) *
               C79114 -
           ((C473 + C465) * C82 + (C472 + C460) * C81) * C17509) *
              C79009 * C79263)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C245 * C96 + C79307 * C246) * C166 +
              (C245 * C167 + C79307 * C447) * C79308) *
                 C81 +
             (C454 + C470) * C82) *
                C17509 -
            ((C2236 + C2222) * C82 + ((C245 * C1792 + C79307 * C2212) * C79308 +
                                      (C245 * C1682 + C79307 * C1906) * C166) *
                                         C81) *
                C79114) *
               C79300 +
           ((((C245 * C3931 + C79307 * C4165) * C166 +
              (C245 * C4047 + C79307 * C4501) * C79308) *
                 C81 +
             (C4506 + C4514) * C82) *
                C79114 -
            ((C1303 + C1289) * C82 + ((C245 * C859 + C79307 * C1279) * C79308 +
                                      (C245 * C749 + C79307 * C973) * C166) *
                                         C81) *
                C17509) *
               C79285 +
           ((((C245 * C750 + C79307 * C974) * C166 +
              (C245 * C860 + C79307 * C1280) * C79308) *
                 C81 +
             (C1290 + C1304) * C82) *
                C17509 -
            ((C8002 + C8000) * C82 + ((C245 * C6142 + C79307 * C6480) * C79308 +
                                      (C245 * C6044 + C79307 * C6228) * C166) *
                                         C81) *
                C79114) *
               C79259) *
              C13595 +
          ((((C2222 + C2236) * C81 + (C2226 + C2238) * C82) * C79114 -
            ((C471 + C459) * C82 + (C470 + C454) * C81) * C17509) *
               C79300 +
           (((C1289 + C1303) * C81 + (C1293 + C1305) * C82) * C17509 -
            ((C4515 + C4511) * C82 + (C4514 + C4506) * C81) * C79114) *
               C79285 +
           (((C8000 + C8002) * C81 +
             ((C245 * C7477 + C79307 * C7686) * C166 +
              (C245 * C7580 + C79307 * C7996) * C79308) *
                 C82) *
                C79114 -
            ((C1306 + C1298) * C82 + (C1304 + C1290) * C81) * C17509) *
               C79259) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eezx[19] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C245 +
            (C93 * C246 + C81 * C515 + C95 * C247 + C82 * C516) * C79307) *
               C79308 * C17509 -
           ((C95 * C1905 + C82 * C2313 + C93 * C1906 + C81 * C2314) * C79307 +
            (C95 * C1681 + C82 * C1689 + C93 * C1682 + C81 * C1690) * C245) *
               C79308 * C79114) *
              C79009 * C79309 +
          (((C93 * C1681 + C81 * C1689 + C95 * C1685 + C82 * C1693) * C245 +
            (C93 * C1905 + C81 * C2313 + C95 * C1909 + C82 * C2317) * C79307) *
               C79308 * C79114 -
           ((C95 * C248 + C82 * C517 + C93 * C247 + C81 * C516) * C79307 +
            (C95 * C98 + C82 * C104 + C93 * C97 + C81 * C103) * C245) *
               C79308 * C17509) *
              C79009 * C79299 +
          (((C93 * C98 + C81 * C104 + C95 * C99 + C82 * C105) * C245 +
            (C93 * C248 + C81 * C517 + C95 * C249 + C82 * C518) * C79307) *
               C79308 * C17509 -
           ((C95 * C1911 + C82 * C2319 + C93 * C1909 + C81 * C2317) * C79307 +
            (C95 * C1687 + C82 * C1695 + C93 * C1685 + C81 * C1693) * C245) *
               C79308 * C79114) *
              C79009 * C79283 +
          (((C93 * C1687 + C81 * C1695 + C95 * C3255 + C82 * C3256) * C245 +
            (C93 * C1911 + C81 * C2319 + C95 * C3400 + C82 * C3686) * C79307) *
               C79308 * C79114 -
           ((C95 * C250 + C82 * C519 + C93 * C249 + C81 * C518) * C79307 +
            (C95 * C100 + C82 * C106 + C93 * C99 + C81 * C105) * C245) *
               C79308 * C17509) *
              C79009 * C79263)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C245 +
             (C93 * C246 + C81 * C515 + C95 * C247 + C82 * C516) * C79307) *
                C79308 * C17509 -
            ((C95 * C1905 + C82 * C2313 + C93 * C1906 + C81 * C2314) * C79307 +
             (C95 * C1681 + C82 * C1689 + C93 * C1682 + C81 * C1690) * C245) *
                C79308 * C79114) *
               C79300 +
           (((C93 * C3931 + C81 * C3935 + C95 * C3932 + C82 * C3936) * C245 +
             (C93 * C4165 + C81 * C4613 + C95 * C4166 + C82 * C4614) * C79307) *
                C79308 * C79114 -
            ((C95 * C972 + C82 * C1380 + C93 * C973 + C81 * C1381) * C79307 +
             (C95 * C748 + C82 * C756 + C93 * C749 + C81 * C757) * C245) *
                C79308 * C17509) *
               C79285 +
           (((C93 * C750 + C81 * C758 + C95 * C751 + C82 * C759) * C245 +
             (C93 * C974 + C81 * C1382 + C95 * C975 + C82 * C1383) * C79307) *
                C79308 * C17509 -
            ((C95 * C6227 + C82 * C6559 + C93 * C6228 + C81 * C6560) * C79307 +
             (C95 * C6043 + C82 * C6049 + C93 * C6044 + C81 * C6050) * C245) *
                C79308 * C79114) *
               C79259) *
              C13595 +
          ((((C93 * C1681 + C81 * C1689 + C95 * C1685 + C82 * C1693) * C245 +
             (C93 * C1905 + C81 * C2313 + C95 * C1909 + C82 * C2317) * C79307) *
                C79308 * C79114 -
            ((C95 * C248 + C82 * C517 + C93 * C247 + C81 * C516) * C79307 +
             (C95 * C98 + C82 * C104 + C93 * C97 + C81 * C103) * C245) *
                C79308 * C17509) *
               C79300 +
           (((C93 * C748 + C81 * C756 + C95 * C752 + C82 * C760) * C245 +
             (C93 * C972 + C81 * C1380 + C95 * C976 + C82 * C1384) * C79307) *
                C79308 * C17509 -
            ((C95 * C4167 + C82 * C4615 + C93 * C4166 + C81 * C4614) * C79307 +
             (C95 * C3933 + C82 * C3937 + C93 * C3932 + C81 * C3936) * C245) *
                C79308 * C79114) *
               C79285 +
           (((C93 * C6043 + C81 * C6049 + C95 * C7477 + C82 * C7478) * C245 +
             (C93 * C6227 + C81 * C6559 + C95 * C7686 + C82 * C8100) * C79307) *
                C79308 * C79114 -
            ((C95 * C977 + C82 * C1385 + C93 * C975 + C81 * C1383) * C79307 +
             (C95 * C753 + C82 * C761 + C93 * C751 + C81 * C759) * C245) *
                C79308 * C17509) *
               C79259) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eezy[19] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C166 * C96 + C79308 * C167) * C245 +
             (C166 * C246 + C79308 * C563) * C79307) *
                C81 +
            (C570 + C586) * C82) *
               C17509 -
           ((C2420 + C2406) * C82 + ((C166 * C1906 + C79308 * C2396) * C79307 +
                                     (C166 * C1682 + C79308 * C1792) * C245) *
                                        C81) *
               C79114) *
              C79009 * C79309 +
          (((C2406 + C2420) * C81 + (C2410 + C2422) * C82) * C79114 -
           ((C587 + C575) * C82 + (C586 + C570) * C81) * C17509) *
              C79009 * C79299 +
          (((C575 + C587) * C81 + (C576 + C588) * C82) * C17509 -
           ((C3759 + C3757) * C82 + (C2422 + C2410) * C81) * C79114) *
              C79009 * C79283 +
          (((C3757 + C3759) * C81 + ((C166 * C3255 + C79308 * C3326) * C245 +
                                     (C166 * C3400 + C79308 * C3753) * C79307) *
                                        C82) *
               C79114 -
           ((C589 + C581) * C82 + (C588 + C576) * C81) * C17509) *
              C79009 * C79263)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C166 * C96 + C79308 * C167) * C245 +
              (C166 * C246 + C79308 * C563) * C79307) *
                 C81 +
             (C570 + C586) * C82) *
                C17509 -
            ((C2420 + C2406) * C82 + ((C166 * C1906 + C79308 * C2396) * C79307 +
                                      (C166 * C1682 + C79308 * C1792) * C245) *
                                         C81) *
                C79114) *
               C79300 +
           ((((C166 * C3931 + C79308 * C4047) * C245 +
              (C166 * C4165 + C79308 * C4715) * C79307) *
                 C81 +
             (C4720 + C4728) * C82) *
                C79114 -
            ((C1487 + C1473) * C82 + ((C166 * C973 + C79308 * C1463) * C79307 +
                                      (C166 * C749 + C79308 * C859) * C245) *
                                         C81) *
                C17509) *
               C79285 +
           ((((C166 * C750 + C79308 * C860) * C245 +
              (C166 * C974 + C79308 * C1464) * C79307) *
                 C81 +
             (C1474 + C1488) * C82) *
                C17509 -
            ((C8205 + C8203) * C82 + ((C166 * C6228 + C79308 * C6640) * C79307 +
                                      (C166 * C6044 + C79308 * C6142) * C245) *
                                         C81) *
                C79114) *
               C79259) *
              C13595 +
          ((((C2406 + C2420) * C81 + (C2410 + C2422) * C82) * C79114 -
            ((C587 + C575) * C82 + (C586 + C570) * C81) * C17509) *
               C79300 +
           (((C1473 + C1487) * C81 + (C1477 + C1489) * C82) * C17509 -
            ((C4729 + C4725) * C82 + (C4728 + C4720) * C81) * C79114) *
               C79285 +
           (((C8203 + C8205) * C81 +
             ((C166 * C7477 + C79308 * C7580) * C245 +
              (C166 * C7686 + C79308 * C8199) * C79307) *
                 C82) *
                C79114 -
            ((C1490 + C1482) * C82 + (C1488 + C1474) * C81) * C17509) *
               C79259) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eezz[19] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C631 * C96 + C639 + C639 + C79307 * C632) * C79308 * C81 +
            C665 * C82) *
               C17509 -
           (C2534 * C82 +
            (C631 * C1682 + C2509 + C2509 + C79307 * C2498) * C79308 * C81) *
               C79114) *
              C79009 * C79309 +
          ((C2534 * C81 + C2536 * C82) * C79114 -
           (C666 * C82 + C665 * C81) * C17509) *
              C79009 * C79299 +
          ((C666 * C81 + C667 * C82) * C17509 -
           (C3833 * C82 + C2536 * C81) * C79114) *
              C79009 * C79283 +
          ((C3833 * C81 +
            (C631 * C3255 + C3829 + C3829 + C79307 * C3825) * C79308 * C82) *
               C79114 -
           (C668 * C82 + C667 * C81) * C17509) *
              C79009 * C79263)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C631 * C96 + C639 + C639 + C79307 * C632) * C79308 * C81 +
             C665 * C82) *
                C17509 -
            (C2534 * C82 +
             (C631 * C1682 + C2509 + C2509 + C79307 * C2498) * C79308 * C81) *
                C79114) *
               C79300 +
           (((C631 * C3931 + C4832 + C4832 + C79307 * C4827) * C79308 * C81 +
             C4846 * C82) *
                C79114 -
            (C1601 * C82 +
             (C631 * C749 + C1576 + C1576 + C79307 * C1565) * C79308 * C81) *
                C17509) *
               C79285 +
           (((C631 * C750 + C1577 + C1577 + C79307 * C1566) * C79308 * C81 +
             C1602 * C82) *
                C17509 -
            (C8311 * C82 +
             (C631 * C6044 + C6727 + C6727 + C79307 * C6720) * C79308 * C81) *
                C79114) *
               C79259) *
              C13595 +
          (((C2534 * C81 + C2536 * C82) * C79114 -
            (C666 * C82 + C665 * C81) * C17509) *
               C79300 +
           ((C1601 * C81 + C1603 * C82) * C17509 -
            (C4847 * C82 + C4846 * C81) * C79114) *
               C79285 +
           ((C8311 * C81 +
             (C631 * C7477 + C8307 + C8307 + C79307 * C8303) * C79308 * C82) *
                C79114 -
            (C1604 * C82 + C1602 * C81) * C17509) *
               C79259) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eexx[20] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((C92 * C96 + C115 + C115 + C81 * C108 + C94 * C97 + C116 +
                      C116 + C82 * C109) *
                         C79307 * C79308 * C79027 * C79229 -
                     (C94 * C748 + C773 + C773 + C82 * C764 + C92 * C749 +
                      C774 + C774 + C81 * C765) *
                         C79307 * C79308 * C79027 * C79072) *
                        C2605 +
                    ((C92 * C748 + C777 + C777 + C81 * C764 + C94 * C752 +
                      C778 + C778 + C82 * C768) *
                         C79307 * C79308 * C79027 * C79072 -
                     (C94 * C98 + C117 + C117 + C82 * C110 + C92 * C97 + C118 +
                      C118 + C81 * C109) *
                         C79307 * C79308 * C79027 * C79229) *
                        C2606 +
                    ((C92 * C98 + C119 + C119 + C81 * C110 + C94 * C99 + C120 +
                      C120 + C82 * C111) *
                         C79307 * C79308 * C79027 * C79229 -
                     (C94 * C754 + C781 + C781 + C82 * C770 + C92 * C752 +
                      C782 + C782 + C81 * C768) *
                         C79307 * C79308 * C79027 * C79072) *
                        C2607 +
                    ((C92 * C754 + C2613 + C2613 + C81 * C770 + C94 * C2609 +
                      C2614 + C2614 + C82 * C2611) *
                         C79307 * C79308 * C79027 * C79072 -
                     (C94 * C100 + C121 + C121 + C82 * C112 + C92 * C99 + C122 +
                      C122 + C81 * C111) *
                         C79307 * C79308 * C79027 * C79229) *
                        C79263)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((C92 * C96 + C115 + C115 + C81 * C108 + C94 * C97 + C116 +
                      C116 + C82 * C109) *
                         C79307 * C79308 * C79027 * C6795 -
                     (C94 * C748 + C773 + C773 + C82 * C764 + C92 * C749 +
                      C774 + C774 + C81 * C765) *
                         C79307 * C79308 * C79027 * C6796 +
                     (C92 * C750 + C775 + C775 + C81 * C766 + C94 * C751 +
                      C776 + C776 + C82 * C767) *
                         C79307 * C79308 * C79027 * C6797 -
                     (C94 * C5567 + C5580 + C5580 + C82 * C5575 + C92 * C5568 +
                      C5581 + C5581 + C81 * C5576) *
                         C79307 * C79308 * C79027 * C79269) *
                        C79215 +
                    ((C92 * C748 + C777 + C777 + C81 * C764 + C94 * C752 +
                      C778 + C778 + C82 * C768) *
                         C79307 * C79308 * C79027 * C6796 -
                     (C94 * C98 + C117 + C117 + C82 * C110 + C92 * C97 + C118 +
                      C118 + C81 * C109) *
                         C79307 * C79308 * C79027 * C6795 -
                     (C94 * C753 + C779 + C779 + C82 * C769 + C92 * C751 +
                      C780 + C780 + C81 * C767) *
                         C79307 * C79308 * C79027 * C6797 +
                     (C92 * C5567 + C6805 + C6805 + C81 * C5575 + C94 * C6801 +
                      C6806 + C6806 + C82 * C6803) *
                         C79307 * C79308 * C79027 * C79269) *
                        C78992)) /
                      (p * q * std::sqrt(p + q));
    d2eexy[20] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C166 * C96 + C79308 * C167) * C93 +
            (C166 * C102 + C79308 * C173) * C81 + C196 * C95 + C197 * C82) *
               C79307 * C79027 * C79229 -
           (C891 * C82 + C892 * C95 + (C166 * C757 + C79308 * C867) * C81 +
            (C166 * C749 + C79308 * C859) * C93) *
               C79307 * C79027 * C79072) *
              C2605 +
          ((C892 * C93 + C891 * C81 + C895 * C95 + C896 * C82) * C79307 *
               C79027 * C79072 -
           (C198 * C82 + C199 * C95 + C197 * C81 + C196 * C93) * C79307 *
               C79027 * C79229) *
              C2606 +
          ((C199 * C93 + C198 * C81 + C200 * C95 + C201 * C82) * C79307 *
               C79027 * C79229 -
           (C2687 * C82 + C2688 * C95 + C896 * C81 + C895 * C93) * C79307 *
               C79027 * C79072) *
              C2607 +
          ((C2688 * C93 + C2687 * C81 + (C166 * C2609 + C79308 * C2680) * C95 +
            (C166 * C2610 + C79308 * C2681) * C82) *
               C79307 * C79027 * C79072 -
           (C202 * C82 + C203 * C95 + C201 * C81 + C200 * C93) * C79307 *
               C79027 * C79229) *
              C79263)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C166 * C96 + C79308 * C167) * C93 +
            (C166 * C102 + C79308 * C173) * C81 + C196 * C95 + C197 * C82) *
               C79307 * C79027 * C6795 -
           (C891 * C82 + C892 * C95 + (C166 * C757 + C79308 * C867) * C81 +
            (C166 * C749 + C79308 * C859) * C93) *
               C79307 * C79027 * C6796 +
           ((C166 * C750 + C79308 * C860) * C93 +
            (C166 * C758 + C79308 * C868) * C81 + C893 * C95 + C894 * C82) *
               C79307 * C79027 * C6797 -
           (C6879 * C82 + C6880 * C95 + (C166 * C5572 + C79308 * C5630) * C81 +
            (C166 * C5568 + C79308 * C5626) * C93) *
               C79307 * C79027 * C79269) *
              C79215 +
          ((C892 * C93 + C891 * C81 + C895 * C95 + C896 * C82) * C79307 *
               C79027 * C6796 -
           (C198 * C82 + C199 * C95 + C197 * C81 + C196 * C93) * C79307 *
               C79027 * C6795 -
           (C897 * C82 + C898 * C95 + C894 * C81 + C893 * C93) * C79307 *
               C79027 * C6797 +
           (C6880 * C93 + C6879 * C81 + (C166 * C6801 + C79308 * C6872) * C95 +
            (C166 * C6802 + C79308 * C6873) * C82) *
               C79307 * C79027 * C79269) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eexz[20] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C245 * C96 + C79307 * C246) * C93 +
            (C245 * C102 + C79307 * C252) * C81 + C275 * C95 + C276 * C82) *
               C79308 * C79027 * C79229 -
           (C1005 * C82 + C1006 * C95 + (C245 * C757 + C79307 * C981) * C81 +
            (C245 * C749 + C79307 * C973) * C93) *
               C79308 * C79027 * C79072) *
              C2605 +
          ((C1006 * C93 + C1005 * C81 + C1009 * C95 + C1010 * C82) * C79308 *
               C79027 * C79072 -
           (C277 * C82 + C278 * C95 + C276 * C81 + C275 * C93) * C79308 *
               C79027 * C79229) *
              C2606 +
          ((C278 * C93 + C277 * C81 + C279 * C95 + C280 * C82) * C79308 *
               C79027 * C79229 -
           (C2761 * C82 + C2762 * C95 + C1010 * C81 + C1009 * C93) * C79308 *
               C79027 * C79072) *
              C2607 +
          ((C2762 * C93 + C2761 * C81 + (C245 * C2609 + C79307 * C2754) * C95 +
            (C245 * C2610 + C79307 * C2755) * C82) *
               C79308 * C79027 * C79072 -
           (C281 * C82 + C282 * C95 + C280 * C81 + C279 * C93) * C79308 *
               C79027 * C79229) *
              C79263)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C245 * C96 + C79307 * C246) * C93 +
            (C245 * C102 + C79307 * C252) * C81 + C275 * C95 + C276 * C82) *
               C79308 * C79027 * C6795 -
           (C1005 * C82 + C1006 * C95 + (C245 * C757 + C79307 * C981) * C81 +
            (C245 * C749 + C79307 * C973) * C93) *
               C79308 * C79027 * C6796 +
           ((C245 * C750 + C79307 * C974) * C93 +
            (C245 * C758 + C79307 * C982) * C81 + C1007 * C95 + C1008 * C82) *
               C79308 * C79027 * C6797 -
           (C6953 * C82 + C6954 * C95 + (C245 * C5572 + C79307 * C5680) * C81 +
            (C245 * C5568 + C79307 * C5676) * C93) *
               C79308 * C79027 * C79269) *
              C79215 +
          ((C1006 * C93 + C1005 * C81 + C1009 * C95 + C1010 * C82) * C79308 *
               C79027 * C6796 -
           (C277 * C82 + C278 * C95 + C276 * C81 + C275 * C93) * C79308 *
               C79027 * C6795 -
           (C1011 * C82 + C1012 * C95 + C1008 * C81 + C1007 * C93) * C79308 *
               C79027 * C6797 +
           (C6954 * C93 + C6953 * C81 + (C245 * C6801 + C79307 * C6946) * C95 +
            (C245 * C6802 + C79307 * C6947) * C82) *
               C79308 * C79027 * C79269) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eeyx[20] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C166 +
            (C93 * C167 + C81 * C324 + C95 * C168 + C82 * C325) * C79308) *
               C79307 * C79027 * C79229 -
           ((C95 * C858 + C82 * C1086 + C93 * C859 + C81 * C1087) * C79308 +
            (C95 * C748 + C82 * C756 + C93 * C749 + C81 * C757) * C166) *
               C79307 * C79027 * C79072) *
              C2605 +
          (((C93 * C748 + C81 * C756 + C95 * C752 + C82 * C760) * C166 +
            (C93 * C858 + C81 * C1086 + C95 * C862 + C82 * C1090) * C79308) *
               C79307 * C79027 * C79072 -
           ((C95 * C169 + C82 * C326 + C93 * C168 + C81 * C325) * C79308 +
            (C95 * C98 + C82 * C104 + C93 * C97 + C81 * C103) * C166) *
               C79307 * C79027 * C79229) *
              C2606 +
          (((C93 * C98 + C81 * C104 + C95 * C99 + C82 * C105) * C166 +
            (C93 * C169 + C81 * C326 + C95 * C170 + C82 * C327) * C79308) *
               C79307 * C79027 * C79229 -
           ((C95 * C864 + C82 * C1092 + C93 * C862 + C81 * C1090) * C79308 +
            (C95 * C754 + C82 * C762 + C93 * C752 + C81 * C760) * C166) *
               C79307 * C79027 * C79072) *
              C2607 +
          (((C93 * C754 + C81 * C762 + C95 * C2609 + C82 * C2610) * C166 +
            (C93 * C864 + C81 * C1092 + C95 * C2680 + C82 * C2828) * C79308) *
               C79307 * C79027 * C79072 -
           ((C95 * C171 + C82 * C328 + C93 * C170 + C81 * C327) * C79308 +
            (C95 * C100 + C82 * C106 + C93 * C99 + C81 * C105) * C166) *
               C79307 * C79027 * C79229) *
              C79263)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C166 +
            (C93 * C167 + C81 * C324 + C95 * C168 + C82 * C325) * C79308) *
               C79307 * C79027 * C6795 -
           ((C95 * C858 + C82 * C1086 + C93 * C859 + C81 * C1087) * C79308 +
            (C95 * C748 + C82 * C756 + C93 * C749 + C81 * C757) * C166) *
               C79307 * C79027 * C6796 +
           ((C93 * C750 + C81 * C758 + C95 * C751 + C82 * C759) * C166 +
            (C93 * C860 + C81 * C1088 + C95 * C861 + C82 * C1089) * C79308) *
               C79307 * C79027 * C6797 -
           ((C95 * C5625 + C82 * C5725 + C93 * C5626 + C81 * C5726) * C79308 +
            (C95 * C5567 + C82 * C5571 + C93 * C5568 + C81 * C5572) * C166) *
               C79307 * C79027 * C79269) *
              C79215 +
          (((C93 * C748 + C81 * C756 + C95 * C752 + C82 * C760) * C166 +
            (C93 * C858 + C81 * C1086 + C95 * C862 + C82 * C1090) * C79308) *
               C79307 * C79027 * C6796 -
           ((C95 * C169 + C82 * C326 + C93 * C168 + C81 * C325) * C79308 +
            (C95 * C98 + C82 * C104 + C93 * C97 + C81 * C103) * C166) *
               C79307 * C79027 * C6795 -
           ((C95 * C863 + C82 * C1091 + C93 * C861 + C81 * C1089) * C79308 +
            (C95 * C753 + C82 * C761 + C93 * C751 + C81 * C759) * C166) *
               C79307 * C79027 * C6797 +
           ((C93 * C5567 + C81 * C5571 + C95 * C6801 + C82 * C6802) * C166 +
            (C93 * C5625 + C81 * C5725 + C95 * C6872 + C82 * C7020) * C79308) *
               C79307 * C79027 * C79269) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eeyy[20] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C372 * C96 + C380 + C380 + C79308 * C373) * C81 + C402 * C82) *
               C79307 * C79027 * C79229 -
           (C1201 * C82 +
            (C372 * C749 + C1180 + C1180 + C79308 * C1169) * C81) *
               C79307 * C79027 * C79072) *
              C2605 +
          ((C1201 * C81 + C1203 * C82) * C79307 * C79027 * C79072 -
           (C403 * C82 + C402 * C81) * C79307 * C79027 * C79229) *
              C2606 +
          ((C403 * C81 + C404 * C82) * C79307 * C79027 * C79229 -
           (C2902 * C82 + C1203 * C81) * C79307 * C79027 * C79072) *
              C2607 +
          ((C2902 * C81 +
            (C372 * C2609 + C2899 + C2899 + C79308 * C2895) * C82) *
               C79307 * C79027 * C79072 -
           (C405 * C82 + C404 * C81) * C79307 * C79027 * C79229) *
              C79263)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C372 * C96 + C380 + C380 + C79308 * C373) * C81 + C402 * C82) *
               C79307 * C79027 * C6795 -
           (C1201 * C82 +
            (C372 * C749 + C1180 + C1180 + C79308 * C1169) * C81) *
               C79307 * C79027 * C6796 +
           ((C372 * C750 + C1181 + C1181 + C79308 * C1170) * C81 +
            C1202 * C82) *
               C79307 * C79027 * C6797 -
           (C7094 * C82 +
            (C372 * C5568 + C5777 + C5777 + C79308 * C5772) * C81) *
               C79307 * C79027 * C79269) *
              C79215 +
          ((C1201 * C81 + C1203 * C82) * C79307 * C79027 * C6796 -
           (C403 * C82 + C402 * C81) * C79307 * C79027 * C6795 -
           (C1204 * C82 + C1202 * C81) * C79307 * C79027 * C6797 +
           (C7094 * C81 +
            (C372 * C6801 + C7091 + C7091 + C79308 * C7087) * C82) *
               C79307 * C79027 * C79269) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[20] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C245 * C96 + C79307 * C246) * C166 +
             (C245 * C167 + C79307 * C447) * C79308) *
                C81 +
            (C454 + C470) * C82) *
               C79027 * C79229 -
           ((C1303 + C1289) * C82 + ((C245 * C859 + C79307 * C1279) * C79308 +
                                     (C245 * C749 + C79307 * C973) * C166) *
                                        C81) *
               C79027 * C79072) *
              C2605 +
          (((C1289 + C1303) * C81 + (C1293 + C1305) * C82) * C79027 * C79072 -
           ((C471 + C459) * C82 + (C470 + C454) * C81) * C79027 * C79229) *
              C2606 +
          (((C459 + C471) * C81 + (C460 + C472) * C82) * C79027 * C79229 -
           ((C2974 + C2972) * C82 + (C1305 + C1293) * C81) * C79027 * C79072) *
              C2607 +
          (((C2972 + C2974) * C81 + ((C245 * C2609 + C79307 * C2754) * C166 +
                                     (C245 * C2680 + C79307 * C2968) * C79308) *
                                        C82) *
               C79027 * C79072 -
           ((C473 + C465) * C82 + (C472 + C460) * C81) * C79027 * C79229) *
              C79263)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C245 * C96 + C79307 * C246) * C166 +
             (C245 * C167 + C79307 * C447) * C79308) *
                C81 +
            (C454 + C470) * C82) *
               C79027 * C6795 -
           ((C1303 + C1289) * C82 + ((C245 * C859 + C79307 * C1279) * C79308 +
                                     (C245 * C749 + C79307 * C973) * C166) *
                                        C81) *
               C79027 * C6796 +
           (((C245 * C750 + C79307 * C974) * C166 +
             (C245 * C860 + C79307 * C1280) * C79308) *
                C81 +
            (C1290 + C1304) * C82) *
               C79027 * C6797 -
           ((C7166 + C7164) * C82 + ((C245 * C5626 + C79307 * C5822) * C79308 +
                                     (C245 * C5568 + C79307 * C5676) * C166) *
                                        C81) *
               C79027 * C79269) *
              C79215 +
          (((C1289 + C1303) * C81 + (C1293 + C1305) * C82) * C79027 * C6796 -
           ((C471 + C459) * C82 + (C470 + C454) * C81) * C79027 * C6795 -
           ((C1306 + C1298) * C82 + (C1304 + C1290) * C81) * C79027 * C6797 +
           ((C7164 + C7166) * C81 + ((C245 * C6801 + C79307 * C6946) * C166 +
                                     (C245 * C6872 + C79307 * C7160) * C79308) *
                                        C82) *
               C79027 * C79269) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eezx[20] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C245 +
            (C93 * C246 + C81 * C515 + C95 * C247 + C82 * C516) * C79307) *
               C79308 * C79027 * C79229 -
           ((C95 * C972 + C82 * C1380 + C93 * C973 + C81 * C1381) * C79307 +
            (C95 * C748 + C82 * C756 + C93 * C749 + C81 * C757) * C245) *
               C79308 * C79027 * C79072) *
              C2605 +
          (((C93 * C748 + C81 * C756 + C95 * C752 + C82 * C760) * C245 +
            (C93 * C972 + C81 * C1380 + C95 * C976 + C82 * C1384) * C79307) *
               C79308 * C79027 * C79072 -
           ((C95 * C248 + C82 * C517 + C93 * C247 + C81 * C516) * C79307 +
            (C95 * C98 + C82 * C104 + C93 * C97 + C81 * C103) * C245) *
               C79308 * C79027 * C79229) *
              C2606 +
          (((C93 * C98 + C81 * C104 + C95 * C99 + C82 * C105) * C245 +
            (C93 * C248 + C81 * C517 + C95 * C249 + C82 * C518) * C79307) *
               C79308 * C79027 * C79229 -
           ((C95 * C978 + C82 * C1386 + C93 * C976 + C81 * C1384) * C79307 +
            (C95 * C754 + C82 * C762 + C93 * C752 + C81 * C760) * C245) *
               C79308 * C79027 * C79072) *
              C2607 +
          (((C93 * C754 + C81 * C762 + C95 * C2609 + C82 * C2610) * C245 +
            (C93 * C978 + C81 * C1386 + C95 * C2754 + C82 * C3040) * C79307) *
               C79308 * C79027 * C79072 -
           ((C95 * C250 + C82 * C519 + C93 * C249 + C81 * C518) * C79307 +
            (C95 * C100 + C82 * C106 + C93 * C99 + C81 * C105) * C245) *
               C79308 * C79027 * C79229) *
              C79263)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C245 +
            (C93 * C246 + C81 * C515 + C95 * C247 + C82 * C516) * C79307) *
               C79308 * C79027 * C6795 -
           ((C95 * C972 + C82 * C1380 + C93 * C973 + C81 * C1381) * C79307 +
            (C95 * C748 + C82 * C756 + C93 * C749 + C81 * C757) * C245) *
               C79308 * C79027 * C6796 +
           ((C93 * C750 + C81 * C758 + C95 * C751 + C82 * C759) * C245 +
            (C93 * C974 + C81 * C1382 + C95 * C975 + C82 * C1383) * C79307) *
               C79308 * C79027 * C6797 -
           ((C95 * C5675 + C82 * C5867 + C93 * C5676 + C81 * C5868) * C79307 +
            (C95 * C5567 + C82 * C5571 + C93 * C5568 + C81 * C5572) * C245) *
               C79308 * C79027 * C79269) *
              C79215 +
          (((C93 * C748 + C81 * C756 + C95 * C752 + C82 * C760) * C245 +
            (C93 * C972 + C81 * C1380 + C95 * C976 + C82 * C1384) * C79307) *
               C79308 * C79027 * C6796 -
           ((C95 * C248 + C82 * C517 + C93 * C247 + C81 * C516) * C79307 +
            (C95 * C98 + C82 * C104 + C93 * C97 + C81 * C103) * C245) *
               C79308 * C79027 * C6795 -
           ((C95 * C977 + C82 * C1385 + C93 * C975 + C81 * C1383) * C79307 +
            (C95 * C753 + C82 * C761 + C93 * C751 + C81 * C759) * C245) *
               C79308 * C79027 * C6797 +
           ((C93 * C5567 + C81 * C5571 + C95 * C6801 + C82 * C6802) * C245 +
            (C93 * C5675 + C81 * C5867 + C95 * C6946 + C82 * C7232) * C79307) *
               C79308 * C79027 * C79269) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eezy[20] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C166 * C96 + C79308 * C167) * C245 +
             (C166 * C246 + C79308 * C563) * C79307) *
                C81 +
            (C570 + C586) * C82) *
               C79027 * C79229 -
           ((C1487 + C1473) * C82 + ((C166 * C973 + C79308 * C1463) * C79307 +
                                     (C166 * C749 + C79308 * C859) * C245) *
                                        C81) *
               C79027 * C79072) *
              C2605 +
          (((C1473 + C1487) * C81 + (C1477 + C1489) * C82) * C79027 * C79072 -
           ((C587 + C575) * C82 + (C586 + C570) * C81) * C79027 * C79229) *
              C2606 +
          (((C575 + C587) * C81 + (C576 + C588) * C82) * C79027 * C79229 -
           ((C3113 + C3111) * C82 + (C1489 + C1477) * C81) * C79027 * C79072) *
              C2607 +
          (((C3111 + C3113) * C81 + ((C166 * C2609 + C79308 * C2680) * C245 +
                                     (C166 * C2754 + C79308 * C3107) * C79307) *
                                        C82) *
               C79027 * C79072 -
           ((C589 + C581) * C82 + (C588 + C576) * C81) * C79027 * C79229) *
              C79263)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C166 * C96 + C79308 * C167) * C245 +
             (C166 * C246 + C79308 * C563) * C79307) *
                C81 +
            (C570 + C586) * C82) *
               C79027 * C6795 -
           ((C1487 + C1473) * C82 + ((C166 * C973 + C79308 * C1463) * C79307 +
                                     (C166 * C749 + C79308 * C859) * C245) *
                                        C81) *
               C79027 * C6796 +
           (((C166 * C750 + C79308 * C860) * C245 +
             (C166 * C974 + C79308 * C1464) * C79307) *
                C81 +
            (C1474 + C1488) * C82) *
               C79027 * C6797 -
           ((C7305 + C7303) * C82 + ((C166 * C5676 + C79308 * C5914) * C79307 +
                                     (C166 * C5568 + C79308 * C5626) * C245) *
                                        C81) *
               C79027 * C79269) *
              C79215 +
          (((C1473 + C1487) * C81 + (C1477 + C1489) * C82) * C79027 * C6796 -
           ((C587 + C575) * C82 + (C586 + C570) * C81) * C79027 * C6795 -
           ((C1490 + C1482) * C82 + (C1488 + C1474) * C81) * C79027 * C6797 +
           ((C7303 + C7305) * C81 + ((C166 * C6801 + C79308 * C6872) * C245 +
                                     (C166 * C6946 + C79308 * C7299) * C79307) *
                                        C82) *
               C79027 * C79269) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eezz[20] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C631 * C96 + C639 + C639 + C79307 * C632) * C79308 * C81 +
            C665 * C82) *
               C79027 * C79229 -
           (C1601 * C82 +
            (C631 * C749 + C1576 + C1576 + C79307 * C1565) * C79308 * C81) *
               C79027 * C79072) *
              C2605 +
          ((C1601 * C81 + C1603 * C82) * C79027 * C79072 -
           (C666 * C82 + C665 * C81) * C79027 * C79229) *
              C2606 +
          ((C666 * C81 + C667 * C82) * C79027 * C79229 -
           (C3187 * C82 + C1603 * C81) * C79027 * C79072) *
              C2607 +
          ((C3187 * C81 +
            (C631 * C2609 + C3183 + C3183 + C79307 * C3179) * C79308 * C82) *
               C79027 * C79072 -
           (C668 * C82 + C667 * C81) * C79027 * C79229) *
              C79263)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C631 * C96 + C639 + C639 + C79307 * C632) * C79308 * C81 +
            C665 * C82) *
               C79027 * C6795 -
           (C1601 * C82 +
            (C631 * C749 + C1576 + C1576 + C79307 * C1565) * C79308 * C81) *
               C79027 * C6796 +
           ((C631 * C750 + C1577 + C1577 + C79307 * C1566) * C79308 * C81 +
            C1602 * C82) *
               C79027 * C6797 -
           (C7379 * C82 +
            (C631 * C5568 + C5965 + C5965 + C79307 * C5960) * C79308 * C81) *
               C79027 * C79269) *
              C79215 +
          ((C1601 * C81 + C1603 * C82) * C79027 * C6796 -
           (C666 * C82 + C665 * C81) * C79027 * C6795 -
           (C1604 * C82 + C1602 * C81) * C79027 * C6797 +
           (C7379 * C81 +
            (C631 * C6801 + C7375 + C7375 + C79307 * C7371) * C79308 * C82) *
               C79027 * C79269) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eexx[21] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C92 * C96 + C115 + C115 + C81 * C108 + C94 * C97 + C116 +
                       C116 + C82 * C109) *
                          C79307 * C79308 * C79230 -
                      (C94 * C1681 + C1706 + C1706 + C82 * C1697 + C92 * C1682 +
                       C1707 + C1707 + C81 * C1698) *
                          C79307 * C79308 * C79114) *
                         C79229 +
                     ((C92 * C3931 + C3944 + C3944 + C81 * C3939 + C94 * C3932 +
                       C3945 + C3945 + C82 * C3940) *
                          C79307 * C79308 * C79114 -
                      (C94 * C748 + C773 + C773 + C82 * C764 + C92 * C749 +
                       C774 + C774 + C81 * C765) *
                          C79307 * C79308 * C79230) *
                         C79072) *
                        C745 +
                    (((C92 * C1681 + C1710 + C1710 + C81 * C1697 + C94 * C1685 +
                       C1711 + C1711 + C82 * C1701) *
                          C79307 * C79308 * C79114 -
                      (C94 * C98 + C117 + C117 + C82 * C110 + C92 * C97 + C118 +
                       C118 + C81 * C109) *
                          C79307 * C79308 * C79230) *
                         C79229 +
                     ((C92 * C748 + C777 + C777 + C81 * C764 + C94 * C752 +
                       C778 + C778 + C82 * C768) *
                          C79307 * C79308 * C79230 -
                      (C94 * C3933 + C3946 + C3946 + C82 * C3941 + C92 * C3932 +
                       C3947 + C3947 + C81 * C3940) *
                          C79307 * C79308 * C79114) *
                         C79072) *
                        C746 +
                    (((C92 * C98 + C119 + C119 + C81 * C110 + C94 * C99 + C120 +
                       C120 + C82 * C111) *
                          C79307 * C79308 * C79230 -
                      (C94 * C1687 + C1714 + C1714 + C82 * C1703 + C92 * C1685 +
                       C1715 + C1715 + C81 * C1701) *
                          C79307 * C79308 * C79114) *
                         C79229 +
                     ((C92 * C3933 + C3948 + C3948 + C81 * C3941 + C94 * C3934 +
                       C3949 + C3949 + C82 * C3942) *
                          C79307 * C79308 * C79114 -
                      (C94 * C754 + C781 + C781 + C82 * C770 + C92 * C752 +
                       C782 + C782 + C81 * C768) *
                          C79307 * C79308 * C79230) *
                         C79072) *
                        C79253)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((C92 * C96 + C115 + C115 + C81 * C108 + C94 * C97 + C116 +
                      C116 + C82 * C109) *
                         C79307 * C79308 * C79230 -
                     (C94 * C1681 + C1706 + C1706 + C82 * C1697 + C92 * C1682 +
                      C1707 + C1707 + C81 * C1698) *
                         C79307 * C79308 * C79114) *
                        C6795 +
                    ((C92 * C3931 + C3944 + C3944 + C81 * C3939 + C94 * C3932 +
                      C3945 + C3945 + C82 * C3940) *
                         C79307 * C79308 * C79114 -
                     (C94 * C748 + C773 + C773 + C82 * C764 + C92 * C749 +
                      C774 + C774 + C81 * C765) *
                         C79307 * C79308 * C79230) *
                        C6796 +
                    ((C92 * C750 + C775 + C775 + C81 * C766 + C94 * C751 +
                      C776 + C776 + C82 * C767) *
                         C79307 * C79308 * C79230 -
                     (C94 * C6043 + C6062 + C6062 + C82 * C6055 + C92 * C6044 +
                      C6063 + C6063 + C81 * C6056) *
                         C79307 * C79308 * C79114) *
                        C6797 +
                    ((C92 * C8377 + C8384 + C8384 + C81 * C8381 + C94 * C8378 +
                      C8385 + C8385 + C82 * C8382) *
                         C79307 * C79308 * C79114 -
                     (C94 * C5567 + C5580 + C5580 + C82 * C5575 + C92 * C5568 +
                      C5581 + C5581 + C81 * C5576) *
                         C79307 * C79308 * C79230) *
                        C79269) *
                   C78981) /
                      (p * q * std::sqrt(p + q));
    d2eexy[21] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C166 * C96 + C79308 * C167) * C93 +
             (C166 * C102 + C79308 * C173) * C81 + C196 * C95 + C197 * C82) *
                C79307 * C79230 -
            (C1824 * C82 + C1825 * C95 + (C166 * C1690 + C79308 * C1800) * C81 +
             (C166 * C1682 + C79308 * C1792) * C93) *
                C79307 * C79114) *
               C79229 +
           (((C166 * C3931 + C79308 * C4047) * C93 +
             (C166 * C3935 + C79308 * C4051) * C81 + C4064 * C95 +
             C4065 * C82) *
                C79307 * C79114 -
            (C891 * C82 + C892 * C95 + (C166 * C757 + C79308 * C867) * C81 +
             (C166 * C749 + C79308 * C859) * C93) *
                C79307 * C79230) *
               C79072) *
              C745 +
          (((C1825 * C93 + C1824 * C81 + C1828 * C95 + C1829 * C82) * C79307 *
                C79114 -
            (C198 * C82 + C199 * C95 + C197 * C81 + C196 * C93) * C79307 *
                C79230) *
               C79229 +
           ((C892 * C93 + C891 * C81 + C895 * C95 + C896 * C82) * C79307 *
                C79230 -
            (C4066 * C82 + C4067 * C95 + C4065 * C81 + C4064 * C93) * C79307 *
                C79114) *
               C79072) *
              C746 +
          (((C199 * C93 + C198 * C81 + C200 * C95 + C201 * C82) * C79307 *
                C79230 -
            (C3333 * C82 + C3334 * C95 + C1829 * C81 + C1828 * C93) * C79307 *
                C79114) *
               C79229 +
           ((C4067 * C93 + C4066 * C81 + (C166 * C3934 + C79308 * C4050) * C95 +
             (C166 * C3938 + C79308 * C4054) * C82) *
                C79307 * C79114 -
            (C2687 * C82 + C2688 * C95 + C896 * C81 + C895 * C93) * C79307 *
                C79230) *
               C79072) *
              C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C166 * C96 + C79308 * C167) * C93 +
            (C166 * C102 + C79308 * C173) * C81 + C196 * C95 + C197 * C82) *
               C79307 * C79230 -
           (C1824 * C82 + C1825 * C95 + (C166 * C1690 + C79308 * C1800) * C81 +
            (C166 * C1682 + C79308 * C1792) * C93) *
               C79307 * C79114) *
              C6795 +
          (((C166 * C3931 + C79308 * C4047) * C93 +
            (C166 * C3935 + C79308 * C4051) * C81 + C4064 * C95 + C4065 * C82) *
               C79307 * C79114 -
           (C891 * C82 + C892 * C95 + (C166 * C757 + C79308 * C867) * C81 +
            (C166 * C749 + C79308 * C859) * C93) *
               C79307 * C79230) *
              C6796 +
          (((C166 * C750 + C79308 * C860) * C93 +
            (C166 * C758 + C79308 * C868) * C81 + C893 * C95 + C894 * C82) *
               C79307 * C79230 -
           (C7587 * C82 + C7588 * C95 + (C166 * C6050 + C79308 * C6148) * C81 +
            (C166 * C6044 + C79308 * C6142) * C93) *
               C79307 * C79114) *
              C6797 +
          (((C166 * C8377 + C79308 * C8451) * C93 +
            (C166 * C8379 + C79308 * C8453) * C81 +
            (C166 * C8378 + C79308 * C8452) * C95 +
            (C166 * C8380 + C79308 * C8454) * C82) *
               C79307 * C79114 -
           (C6879 * C82 + C6880 * C95 + (C166 * C5572 + C79308 * C5630) * C81 +
            (C166 * C5568 + C79308 * C5626) * C93) *
               C79307 * C79230) *
              C79269) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eexz[21] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C245 * C96 + C79307 * C246) * C93 +
             (C245 * C102 + C79307 * C252) * C81 + C275 * C95 + C276 * C82) *
                C79308 * C79230 -
            (C1938 * C82 + C1939 * C95 + (C245 * C1690 + C79307 * C1914) * C81 +
             (C245 * C1682 + C79307 * C1906) * C93) *
                C79308 * C79114) *
               C79229 +
           (((C245 * C3931 + C79307 * C4165) * C93 +
             (C245 * C3935 + C79307 * C4169) * C81 + C4182 * C95 +
             C4183 * C82) *
                C79308 * C79114 -
            (C1005 * C82 + C1006 * C95 + (C245 * C757 + C79307 * C981) * C81 +
             (C245 * C749 + C79307 * C973) * C93) *
                C79308 * C79230) *
               C79072) *
              C745 +
          (((C1939 * C93 + C1938 * C81 + C1942 * C95 + C1943 * C82) * C79308 *
                C79114 -
            (C277 * C82 + C278 * C95 + C276 * C81 + C275 * C93) * C79308 *
                C79230) *
               C79229 +
           ((C1006 * C93 + C1005 * C81 + C1009 * C95 + C1010 * C82) * C79308 *
                C79230 -
            (C4184 * C82 + C4185 * C95 + C4183 * C81 + C4182 * C93) * C79308 *
                C79114) *
               C79072) *
              C746 +
          (((C278 * C93 + C277 * C81 + C279 * C95 + C280 * C82) * C79308 *
                C79230 -
            (C3407 * C82 + C3408 * C95 + C1943 * C81 + C1942 * C93) * C79308 *
                C79114) *
               C79229 +
           ((C4185 * C93 + C4184 * C81 + (C245 * C3934 + C79307 * C4168) * C95 +
             (C245 * C3938 + C79307 * C4172) * C82) *
                C79308 * C79114 -
            (C2761 * C82 + C2762 * C95 + C1010 * C81 + C1009 * C93) * C79308 *
                C79230) *
               C79072) *
              C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C245 * C96 + C79307 * C246) * C93 +
            (C245 * C102 + C79307 * C252) * C81 + C275 * C95 + C276 * C82) *
               C79308 * C79230 -
           (C1938 * C82 + C1939 * C95 + (C245 * C1690 + C79307 * C1914) * C81 +
            (C245 * C1682 + C79307 * C1906) * C93) *
               C79308 * C79114) *
              C6795 +
          (((C245 * C3931 + C79307 * C4165) * C93 +
            (C245 * C3935 + C79307 * C4169) * C81 + C4182 * C95 + C4183 * C82) *
               C79308 * C79114 -
           (C1005 * C82 + C1006 * C95 + (C245 * C757 + C79307 * C981) * C81 +
            (C245 * C749 + C79307 * C973) * C93) *
               C79308 * C79230) *
              C6796 +
          (((C245 * C750 + C79307 * C974) * C93 +
            (C245 * C758 + C79307 * C982) * C81 + C1007 * C95 + C1008 * C82) *
               C79308 * C79230 -
           (C7693 * C82 + C7694 * C95 + (C245 * C6050 + C79307 * C6234) * C81 +
            (C245 * C6044 + C79307 * C6228) * C93) *
               C79308 * C79114) *
              C6797 +
          (((C245 * C8377 + C79307 * C8521) * C93 +
            (C245 * C8379 + C79307 * C8523) * C81 +
            (C245 * C8378 + C79307 * C8522) * C95 +
            (C245 * C8380 + C79307 * C8524) * C82) *
               C79308 * C79114 -
           (C6953 * C82 + C6954 * C95 + (C245 * C5572 + C79307 * C5680) * C81 +
            (C245 * C5568 + C79307 * C5676) * C93) *
               C79308 * C79230) *
              C79269) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eeyx[21] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C166 +
             (C93 * C167 + C81 * C324 + C95 * C168 + C82 * C325) * C79308) *
                C79307 * C79230 -
            ((C95 * C1791 + C82 * C2019 + C93 * C1792 + C81 * C2020) * C79308 +
             (C95 * C1681 + C82 * C1689 + C93 * C1682 + C81 * C1690) * C166) *
                C79307 * C79114) *
               C79229 +
           (((C93 * C3931 + C81 * C3935 + C95 * C3932 + C82 * C3936) * C166 +
             (C93 * C4047 + C81 * C4283 + C95 * C4048 + C82 * C4284) * C79308) *
                C79307 * C79114 -
            ((C95 * C858 + C82 * C1086 + C93 * C859 + C81 * C1087) * C79308 +
             (C95 * C748 + C82 * C756 + C93 * C749 + C81 * C757) * C166) *
                C79307 * C79230) *
               C79072) *
              C745 +
          ((((C93 * C1681 + C81 * C1689 + C95 * C1685 + C82 * C1693) * C166 +
             (C93 * C1791 + C81 * C2019 + C95 * C1795 + C82 * C2023) * C79308) *
                C79307 * C79114 -
            ((C95 * C169 + C82 * C326 + C93 * C168 + C81 * C325) * C79308 +
             (C95 * C98 + C82 * C104 + C93 * C97 + C81 * C103) * C166) *
                C79307 * C79230) *
               C79229 +
           (((C93 * C748 + C81 * C756 + C95 * C752 + C82 * C760) * C166 +
             (C93 * C858 + C81 * C1086 + C95 * C862 + C82 * C1090) * C79308) *
                C79307 * C79230 -
            ((C95 * C4049 + C82 * C4285 + C93 * C4048 + C81 * C4284) * C79308 +
             (C95 * C3933 + C82 * C3937 + C93 * C3932 + C81 * C3936) * C166) *
                C79307 * C79114) *
               C79072) *
              C746 +
          ((((C93 * C98 + C81 * C104 + C95 * C99 + C82 * C105) * C166 +
             (C93 * C169 + C81 * C326 + C95 * C170 + C82 * C327) * C79308) *
                C79307 * C79230 -
            ((C95 * C1797 + C82 * C2025 + C93 * C1795 + C81 * C2023) * C79308 +
             (C95 * C1687 + C82 * C1695 + C93 * C1685 + C81 * C1693) * C166) *
                C79307 * C79114) *
               C79229 +
           (((C93 * C3933 + C81 * C3937 + C95 * C3934 + C82 * C3938) * C166 +
             (C93 * C4049 + C81 * C4285 + C95 * C4050 + C82 * C4286) * C79308) *
                C79307 * C79114 -
            ((C95 * C864 + C82 * C1092 + C93 * C862 + C81 * C1090) * C79308 +
             (C95 * C754 + C82 * C762 + C93 * C752 + C81 * C760) * C166) *
                C79307 * C79230) *
               C79072) *
              C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C166 +
            (C93 * C167 + C81 * C324 + C95 * C168 + C82 * C325) * C79308) *
               C79307 * C79230 -
           ((C95 * C1791 + C82 * C2019 + C93 * C1792 + C81 * C2020) * C79308 +
            (C95 * C1681 + C82 * C1689 + C93 * C1682 + C81 * C1690) * C166) *
               C79307 * C79114) *
              C6795 +
          (((C93 * C3931 + C81 * C3935 + C95 * C3932 + C82 * C3936) * C166 +
            (C93 * C4047 + C81 * C4283 + C95 * C4048 + C82 * C4284) * C79308) *
               C79307 * C79114 -
           ((C95 * C858 + C82 * C1086 + C93 * C859 + C81 * C1087) * C79308 +
            (C95 * C748 + C82 * C756 + C93 * C749 + C81 * C757) * C166) *
               C79307 * C79230) *
              C6796 +
          (((C93 * C750 + C81 * C758 + C95 * C751 + C82 * C759) * C166 +
            (C93 * C860 + C81 * C1088 + C95 * C861 + C82 * C1089) * C79308) *
               C79307 * C79230 -
           ((C95 * C6141 + C82 * C6313 + C93 * C6142 + C81 * C6314) * C79308 +
            (C95 * C6043 + C82 * C6049 + C93 * C6044 + C81 * C6050) * C166) *
               C79307 * C79114) *
              C6797 +
          (((C93 * C8377 + C81 * C8379 + C95 * C8378 + C82 * C8380) * C166 +
            (C93 * C8451 + C81 * C8591 + C95 * C8452 + C82 * C8592) * C79308) *
               C79307 * C79114 -
           ((C95 * C5625 + C82 * C5725 + C93 * C5626 + C81 * C5726) * C79308 +
            (C95 * C5567 + C82 * C5571 + C93 * C5568 + C81 * C5572) * C166) *
               C79307 * C79230) *
              C79269) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eeyy[21] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C372 * C96 + C380 + C380 + C79308 * C373) * C81 + C402 * C82) *
                C79307 * C79230 -
            (C2134 * C82 +
             (C372 * C1682 + C2113 + C2113 + C79308 * C2102) * C81) *
                C79307 * C79114) *
               C79229 +
           (((C372 * C3931 + C4390 + C4390 + C79308 * C4385) * C81 +
             C4402 * C82) *
                C79307 * C79114 -
            (C1201 * C82 +
             (C372 * C749 + C1180 + C1180 + C79308 * C1169) * C81) *
                C79307 * C79230) *
               C79072) *
              C745 +
          (((C2134 * C81 + C2136 * C82) * C79307 * C79114 -
            (C403 * C82 + C402 * C81) * C79307 * C79230) *
               C79229 +
           ((C1201 * C81 + C1203 * C82) * C79307 * C79230 -
            (C4403 * C82 + C4402 * C81) * C79307 * C79114) *
               C79072) *
              C746 +
          (((C403 * C81 + C404 * C82) * C79307 * C79230 -
            (C3548 * C82 + C2136 * C81) * C79307 * C79114) *
               C79229 +
           ((C4403 * C81 +
             (C372 * C3934 + C4397 + C4397 + C79308 * C4388) * C82) *
                C79307 * C79114 -
            (C2902 * C82 + C1203 * C81) * C79307 * C79230) *
               C79072) *
              C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C372 * C96 + C380 + C380 + C79308 * C373) * C81 + C402 * C82) *
               C79307 * C79230 -
           (C2134 * C82 +
            (C372 * C1682 + C2113 + C2113 + C79308 * C2102) * C81) *
               C79307 * C79114) *
              C6795 +
          (((C372 * C3931 + C4390 + C4390 + C79308 * C4385) * C81 +
            C4402 * C82) *
               C79307 * C79114 -
           (C1201 * C82 +
            (C372 * C749 + C1180 + C1180 + C79308 * C1169) * C81) *
               C79307 * C79230) *
              C6796 +
          (((C372 * C750 + C1181 + C1181 + C79308 * C1170) * C81 +
            C1202 * C82) *
               C79307 * C79230 -
           (C7898 * C82 +
            (C372 * C6044 + C6401 + C6401 + C79308 * C6394) * C81) *
               C79307 * C79114) *
              C6797 +
          (((C372 * C8377 + C8662 + C8662 + C79308 * C8659) * C81 +
            (C372 * C8378 + C8663 + C8663 + C79308 * C8660) * C82) *
               C79307 * C79114 -
           (C7094 * C82 +
            (C372 * C5568 + C5777 + C5777 + C79308 * C5772) * C81) *
               C79307 * C79230) *
              C79269) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eeyz[21] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C245 * C96 + C79307 * C246) * C166 +
              (C245 * C167 + C79307 * C447) * C79308) *
                 C81 +
             (C454 + C470) * C82) *
                C79230 -
            ((C2236 + C2222) * C82 + ((C245 * C1792 + C79307 * C2212) * C79308 +
                                      (C245 * C1682 + C79307 * C1906) * C166) *
                                         C81) *
                C79114) *
               C79229 +
           ((((C245 * C3931 + C79307 * C4165) * C166 +
              (C245 * C4047 + C79307 * C4501) * C79308) *
                 C81 +
             (C4506 + C4514) * C82) *
                C79114 -
            ((C1303 + C1289) * C82 + ((C245 * C859 + C79307 * C1279) * C79308 +
                                      (C245 * C749 + C79307 * C973) * C166) *
                                         C81) *
                C79230) *
               C79072) *
              C745 +
          ((((C2222 + C2236) * C81 + (C2226 + C2238) * C82) * C79114 -
            ((C471 + C459) * C82 + (C470 + C454) * C81) * C79230) *
               C79229 +
           (((C1289 + C1303) * C81 + (C1293 + C1305) * C82) * C79230 -
            ((C4515 + C4511) * C82 + (C4514 + C4506) * C81) * C79114) *
               C79072) *
              C746 +
          ((((C459 + C471) * C81 + (C460 + C472) * C82) * C79230 -
            ((C3620 + C3618) * C82 + (C2238 + C2226) * C81) * C79114) *
               C79229 +
           (((C4511 + C4515) * C81 +
             ((C245 * C3934 + C79307 * C4168) * C166 +
              (C245 * C4050 + C79307 * C4504) * C79308) *
                 C82) *
                C79114 -
            ((C2974 + C2972) * C82 + (C1305 + C1293) * C81) * C79230) *
               C79072) *
              C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C245 * C96 + C79307 * C246) * C166 +
             (C245 * C167 + C79307 * C447) * C79308) *
                C81 +
            (C454 + C470) * C82) *
               C79230 -
           ((C2236 + C2222) * C82 + ((C245 * C1792 + C79307 * C2212) * C79308 +
                                     (C245 * C1682 + C79307 * C1906) * C166) *
                                        C81) *
               C79114) *
              C6795 +
          ((((C245 * C3931 + C79307 * C4165) * C166 +
             (C245 * C4047 + C79307 * C4501) * C79308) *
                C81 +
            (C4506 + C4514) * C82) *
               C79114 -
           ((C1303 + C1289) * C82 + ((C245 * C859 + C79307 * C1279) * C79308 +
                                     (C245 * C749 + C79307 * C973) * C166) *
                                        C81) *
               C79230) *
              C6796 +
          ((((C245 * C750 + C79307 * C974) * C166 +
             (C245 * C860 + C79307 * C1280) * C79308) *
                C81 +
            (C1290 + C1304) * C82) *
               C79230 -
           ((C8002 + C8000) * C82 + ((C245 * C6142 + C79307 * C6480) * C79308 +
                                     (C245 * C6044 + C79307 * C6228) * C166) *
                                        C81) *
               C79114) *
              C6797 +
          ((((C245 * C8377 + C79307 * C8521) * C166 +
             (C245 * C8451 + C79307 * C8729) * C79308) *
                C81 +
            ((C245 * C8378 + C79307 * C8522) * C166 +
             (C245 * C8452 + C79307 * C8730) * C79308) *
                C82) *
               C79114 -
           ((C7166 + C7164) * C82 + ((C245 * C5626 + C79307 * C5822) * C79308 +
                                     (C245 * C5568 + C79307 * C5676) * C166) *
                                        C81) *
               C79230) *
              C79269) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eezx[21] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C245 +
             (C93 * C246 + C81 * C515 + C95 * C247 + C82 * C516) * C79307) *
                C79308 * C79230 -
            ((C95 * C1905 + C82 * C2313 + C93 * C1906 + C81 * C2314) * C79307 +
             (C95 * C1681 + C82 * C1689 + C93 * C1682 + C81 * C1690) * C245) *
                C79308 * C79114) *
               C79229 +
           (((C93 * C3931 + C81 * C3935 + C95 * C3932 + C82 * C3936) * C245 +
             (C93 * C4165 + C81 * C4613 + C95 * C4166 + C82 * C4614) * C79307) *
                C79308 * C79114 -
            ((C95 * C972 + C82 * C1380 + C93 * C973 + C81 * C1381) * C79307 +
             (C95 * C748 + C82 * C756 + C93 * C749 + C81 * C757) * C245) *
                C79308 * C79230) *
               C79072) *
              C745 +
          ((((C93 * C1681 + C81 * C1689 + C95 * C1685 + C82 * C1693) * C245 +
             (C93 * C1905 + C81 * C2313 + C95 * C1909 + C82 * C2317) * C79307) *
                C79308 * C79114 -
            ((C95 * C248 + C82 * C517 + C93 * C247 + C81 * C516) * C79307 +
             (C95 * C98 + C82 * C104 + C93 * C97 + C81 * C103) * C245) *
                C79308 * C79230) *
               C79229 +
           (((C93 * C748 + C81 * C756 + C95 * C752 + C82 * C760) * C245 +
             (C93 * C972 + C81 * C1380 + C95 * C976 + C82 * C1384) * C79307) *
                C79308 * C79230 -
            ((C95 * C4167 + C82 * C4615 + C93 * C4166 + C81 * C4614) * C79307 +
             (C95 * C3933 + C82 * C3937 + C93 * C3932 + C81 * C3936) * C245) *
                C79308 * C79114) *
               C79072) *
              C746 +
          ((((C93 * C98 + C81 * C104 + C95 * C99 + C82 * C105) * C245 +
             (C93 * C248 + C81 * C517 + C95 * C249 + C82 * C518) * C79307) *
                C79308 * C79230 -
            ((C95 * C1911 + C82 * C2319 + C93 * C1909 + C81 * C2317) * C79307 +
             (C95 * C1687 + C82 * C1695 + C93 * C1685 + C81 * C1693) * C245) *
                C79308 * C79114) *
               C79229 +
           (((C93 * C3933 + C81 * C3937 + C95 * C3934 + C82 * C3938) * C245 +
             (C93 * C4167 + C81 * C4615 + C95 * C4168 + C82 * C4616) * C79307) *
                C79308 * C79114 -
            ((C95 * C978 + C82 * C1386 + C93 * C976 + C81 * C1384) * C79307 +
             (C95 * C754 + C82 * C762 + C93 * C752 + C81 * C760) * C245) *
                C79308 * C79230) *
               C79072) *
              C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C245 +
            (C93 * C246 + C81 * C515 + C95 * C247 + C82 * C516) * C79307) *
               C79308 * C79230 -
           ((C95 * C1905 + C82 * C2313 + C93 * C1906 + C81 * C2314) * C79307 +
            (C95 * C1681 + C82 * C1689 + C93 * C1682 + C81 * C1690) * C245) *
               C79308 * C79114) *
              C6795 +
          (((C93 * C3931 + C81 * C3935 + C95 * C3932 + C82 * C3936) * C245 +
            (C93 * C4165 + C81 * C4613 + C95 * C4166 + C82 * C4614) * C79307) *
               C79308 * C79114 -
           ((C95 * C972 + C82 * C1380 + C93 * C973 + C81 * C1381) * C79307 +
            (C95 * C748 + C82 * C756 + C93 * C749 + C81 * C757) * C245) *
               C79308 * C79230) *
              C6796 +
          (((C93 * C750 + C81 * C758 + C95 * C751 + C82 * C759) * C245 +
            (C93 * C974 + C81 * C1382 + C95 * C975 + C82 * C1383) * C79307) *
               C79308 * C79230 -
           ((C95 * C6227 + C82 * C6559 + C93 * C6228 + C81 * C6560) * C79307 +
            (C95 * C6043 + C82 * C6049 + C93 * C6044 + C81 * C6050) * C245) *
               C79308 * C79114) *
              C6797 +
          (((C93 * C8377 + C81 * C8379 + C95 * C8378 + C82 * C8380) * C245 +
            (C93 * C8521 + C81 * C8797 + C95 * C8522 + C82 * C8798) * C79307) *
               C79308 * C79114 -
           ((C95 * C5675 + C82 * C5867 + C93 * C5676 + C81 * C5868) * C79307 +
            (C95 * C5567 + C82 * C5571 + C93 * C5568 + C81 * C5572) * C245) *
               C79308 * C79230) *
              C79269) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eezy[21] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C166 * C96 + C79308 * C167) * C245 +
              (C166 * C246 + C79308 * C563) * C79307) *
                 C81 +
             (C570 + C586) * C82) *
                C79230 -
            ((C2420 + C2406) * C82 + ((C166 * C1906 + C79308 * C2396) * C79307 +
                                      (C166 * C1682 + C79308 * C1792) * C245) *
                                         C81) *
                C79114) *
               C79229 +
           ((((C166 * C3931 + C79308 * C4047) * C245 +
              (C166 * C4165 + C79308 * C4715) * C79307) *
                 C81 +
             (C4720 + C4728) * C82) *
                C79114 -
            ((C1487 + C1473) * C82 + ((C166 * C973 + C79308 * C1463) * C79307 +
                                      (C166 * C749 + C79308 * C859) * C245) *
                                         C81) *
                C79230) *
               C79072) *
              C745 +
          ((((C2406 + C2420) * C81 + (C2410 + C2422) * C82) * C79114 -
            ((C587 + C575) * C82 + (C586 + C570) * C81) * C79230) *
               C79229 +
           (((C1473 + C1487) * C81 + (C1477 + C1489) * C82) * C79230 -
            ((C4729 + C4725) * C82 + (C4728 + C4720) * C81) * C79114) *
               C79072) *
              C746 +
          ((((C575 + C587) * C81 + (C576 + C588) * C82) * C79230 -
            ((C3759 + C3757) * C82 + (C2422 + C2410) * C81) * C79114) *
               C79229 +
           (((C4725 + C4729) * C81 +
             ((C166 * C3934 + C79308 * C4050) * C245 +
              (C166 * C4168 + C79308 * C4718) * C79307) *
                 C82) *
                C79114 -
            ((C3113 + C3111) * C82 + (C1489 + C1477) * C81) * C79230) *
               C79072) *
              C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C166 * C96 + C79308 * C167) * C245 +
             (C166 * C246 + C79308 * C563) * C79307) *
                C81 +
            (C570 + C586) * C82) *
               C79230 -
           ((C2420 + C2406) * C82 + ((C166 * C1906 + C79308 * C2396) * C79307 +
                                     (C166 * C1682 + C79308 * C1792) * C245) *
                                        C81) *
               C79114) *
              C6795 +
          ((((C166 * C3931 + C79308 * C4047) * C245 +
             (C166 * C4165 + C79308 * C4715) * C79307) *
                C81 +
            (C4720 + C4728) * C82) *
               C79114 -
           ((C1487 + C1473) * C82 + ((C166 * C973 + C79308 * C1463) * C79307 +
                                     (C166 * C749 + C79308 * C859) * C245) *
                                        C81) *
               C79230) *
              C6796 +
          ((((C166 * C750 + C79308 * C860) * C245 +
             (C166 * C974 + C79308 * C1464) * C79307) *
                C81 +
            (C1474 + C1488) * C82) *
               C79230 -
           ((C8205 + C8203) * C82 + ((C166 * C6228 + C79308 * C6640) * C79307 +
                                     (C166 * C6044 + C79308 * C6142) * C245) *
                                        C81) *
               C79114) *
              C6797 +
          ((((C166 * C8377 + C79308 * C8451) * C245 +
             (C166 * C8521 + C79308 * C8865) * C79307) *
                C81 +
            ((C166 * C8378 + C79308 * C8452) * C245 +
             (C166 * C8522 + C79308 * C8866) * C79307) *
                C82) *
               C79114 -
           ((C7305 + C7303) * C82 + ((C166 * C5676 + C79308 * C5914) * C79307 +
                                     (C166 * C5568 + C79308 * C5626) * C245) *
                                        C81) *
               C79230) *
              C79269) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eezz[21] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C631 * C96 + C639 + C639 + C79307 * C632) * C79308 * C81 +
             C665 * C82) *
                C79230 -
            (C2534 * C82 +
             (C631 * C1682 + C2509 + C2509 + C79307 * C2498) * C79308 * C81) *
                C79114) *
               C79229 +
           (((C631 * C3931 + C4832 + C4832 + C79307 * C4827) * C79308 * C81 +
             C4846 * C82) *
                C79114 -
            (C1601 * C82 +
             (C631 * C749 + C1576 + C1576 + C79307 * C1565) * C79308 * C81) *
                C79230) *
               C79072) *
              C745 +
          (((C2534 * C81 + C2536 * C82) * C79114 -
            (C666 * C82 + C665 * C81) * C79230) *
               C79229 +
           ((C1601 * C81 + C1603 * C82) * C79230 -
            (C4847 * C82 + C4846 * C81) * C79114) *
               C79072) *
              C746 +
          (((C666 * C81 + C667 * C82) * C79230 -
            (C3833 * C82 + C2536 * C81) * C79114) *
               C79229 +
           ((C4847 * C81 +
             (C631 * C3934 + C4839 + C4839 + C79307 * C4830) * C79308 * C82) *
                C79114 -
            (C3187 * C82 + C1603 * C81) * C79230) *
               C79072) *
              C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C631 * C96 + C639 + C639 + C79307 * C632) * C79308 * C81 +
            C665 * C82) *
               C79230 -
           (C2534 * C82 +
            (C631 * C1682 + C2509 + C2509 + C79307 * C2498) * C79308 * C81) *
               C79114) *
              C6795 +
          (((C631 * C3931 + C4832 + C4832 + C79307 * C4827) * C79308 * C81 +
            C4846 * C82) *
               C79114 -
           (C1601 * C82 +
            (C631 * C749 + C1576 + C1576 + C79307 * C1565) * C79308 * C81) *
               C79230) *
              C6796 +
          (((C631 * C750 + C1577 + C1577 + C79307 * C1566) * C79308 * C81 +
            C1602 * C82) *
               C79230 -
           (C8311 * C82 +
            (C631 * C6044 + C6727 + C6727 + C79307 * C6720) * C79308 * C81) *
               C79114) *
              C6797 +
          (((C631 * C8377 + C8936 + C8936 + C79307 * C8933) * C79308 * C81 +
            (C631 * C8378 + C8937 + C8937 + C79307 * C8934) * C79308 * C82) *
               C79114 -
           (C7379 * C82 +
            (C631 * C5568 + C5965 + C5965 + C79307 * C5960) * C79308 * C81) *
               C79230) *
              C79269) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eexx[22] += (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   (((C92 * C96 + C115 + C115 + C81 * C108 + C94 * C97 + C116 +
                      C116 + C82 * C109) *
                         C79307 * C79308 * C79027 * C79300 -
                     (C94 * C748 + C773 + C773 + C82 * C764 + C92 * C749 +
                      C774 + C774 + C81 * C765) *
                         C79307 * C79308 * C79027 * C79285 +
                     (C92 * C750 + C775 + C775 + C81 * C766 + C94 * C751 +
                      C776 + C776 + C82 * C767) *
                         C79307 * C79308 * C79027 * C79259) *
                        C745 +
                    ((C92 * C748 + C777 + C777 + C81 * C764 + C94 * C752 +
                      C778 + C778 + C82 * C768) *
                         C79307 * C79308 * C79027 * C79285 -
                     (C94 * C98 + C117 + C117 + C82 * C110 + C92 * C97 + C118 +
                      C118 + C81 * C109) *
                         C79307 * C79308 * C79027 * C79300 -
                     (C94 * C753 + C779 + C779 + C82 * C769 + C92 * C751 +
                      C780 + C780 + C81 * C767) *
                         C79307 * C79308 * C79027 * C79259) *
                        C746 +
                    ((C92 * C98 + C119 + C119 + C81 * C110 + C94 * C99 + C120 +
                      C120 + C82 * C111) *
                         C79307 * C79308 * C79027 * C79300 -
                     (C94 * C754 + C781 + C781 + C82 * C770 + C92 * C752 +
                      C782 + C782 + C81 * C768) *
                         C79307 * C79308 * C79027 * C79285 +
                     (C92 * C753 + C783 + C783 + C81 * C769 + C94 * C755 +
                      C784 + C784 + C82 * C771) *
                         C79307 * C79308 * C79027 * C79259) *
                        C79253)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   ((C92 * C96 + C115 + C115 + C81 * C108 + C94 * C97 + C116 +
                     C116 + C82 * C109) *
                        C79307 * C79308 * C79027 * C79009 * C87 -
                    (C94 * C98 + C117 + C117 + C82 * C110 + C92 * C97 + C118 +
                     C118 + C81 * C109) *
                        C79307 * C79308 * C79027 * C79009 * C88 +
                    (C92 * C98 + C119 + C119 + C81 * C110 + C94 * C99 + C120 +
                     C120 + C82 * C111) *
                        C79307 * C79308 * C79027 * C79009 * C89 -
                    (C94 * C100 + C121 + C121 + C82 * C112 + C92 * C99 + C122 +
                     C122 + C81 * C111) *
                        C79307 * C79308 * C79027 * C79009 * C90 +
                    (C92 * C100 + C123 + C123 + C81 * C112 + C94 * C101 + C124 +
                     C124 + C82 * C113) *
                        C79307 * C79308 * C79027 * C79009 * C91)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C92 * C96 + C115 + C115 + C81 * C108 + C94 * C97 + C116 +
                      C116 + C82 * C109) *
                         C79307 * C79308 * C79301 -
                     (C94 * C1681 + C1706 + C1706 + C82 * C1697 + C92 * C1682 +
                      C1707 + C1707 + C81 * C1698) *
                         C79307 * C79308 * C79287 +
                     (C92 * C1683 + C1708 + C1708 + C81 * C1699 + C94 * C1684 +
                      C1709 + C1709 + C82 * C1700) *
                         C79307 * C79308 * C79262) *
                        C79009 * C745 +
                    ((C92 * C1681 + C1710 + C1710 + C81 * C1697 + C94 * C1685 +
                      C1711 + C1711 + C82 * C1701) *
                         C79307 * C79308 * C79287 -
                     (C94 * C98 + C117 + C117 + C82 * C110 + C92 * C97 + C118 +
                      C118 + C81 * C109) *
                         C79307 * C79308 * C79301 -
                     (C94 * C1686 + C1712 + C1712 + C82 * C1702 + C92 * C1684 +
                      C1713 + C1713 + C81 * C1700) *
                         C79307 * C79308 * C79262) *
                        C79009 * C746 +
                    ((C92 * C98 + C119 + C119 + C81 * C110 + C94 * C99 + C120 +
                      C120 + C82 * C111) *
                         C79307 * C79308 * C79301 -
                     (C94 * C1687 + C1714 + C1714 + C82 * C1703 + C92 * C1685 +
                      C1715 + C1715 + C81 * C1701) *
                         C79307 * C79308 * C79287 +
                     (C92 * C1686 + C1716 + C1716 + C81 * C1702 + C94 * C1688 +
                      C1717 + C1717 + C82 * C1704) *
                         C79307 * C79308 * C79262) *
                        C79009 * C79253)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   (((C92 * C96 + C115 + C115 + C81 * C108 + C94 * C97 + C116 +
                      C116 + C82 * C109) *
                         C79307 * C79308 * C79027 * C4921 -
                     (C94 * C748 + C773 + C773 + C82 * C764 + C92 * C749 +
                      C774 + C774 + C81 * C765) *
                         C79307 * C79308 * C79027 * C4922 +
                     (C92 * C750 + C775 + C775 + C81 * C766 + C94 * C751 +
                      C776 + C776 + C82 * C767) *
                         C79307 * C79308 * C79027 * C79259) *
                        C79297 +
                    ((C92 * C748 + C777 + C777 + C81 * C764 + C94 * C752 +
                      C778 + C778 + C82 * C768) *
                         C79307 * C79308 * C79027 * C4922 -
                     (C94 * C98 + C117 + C117 + C82 * C110 + C92 * C97 + C118 +
                      C118 + C81 * C109) *
                         C79307 * C79308 * C79027 * C4921 -
                     (C94 * C753 + C779 + C779 + C82 * C769 + C92 * C751 +
                      C780 + C780 + C81 * C767) *
                         C79307 * C79308 * C79027 * C79259) *
                        C79281 +
                    ((C92 * C98 + C119 + C119 + C81 * C110 + C94 * C99 + C120 +
                      C120 + C82 * C111) *
                         C79307 * C79308 * C79027 * C4921 -
                     (C94 * C754 + C781 + C781 + C82 * C770 + C92 * C752 +
                      C782 + C782 + C81 * C768) *
                         C79307 * C79308 * C79027 * C4922 +
                     (C92 * C753 + C783 + C783 + C81 * C769 + C94 * C755 +
                      C784 + C784 + C82 * C771) *
                         C79307 * C79308 * C79027 * C79259) *
                        C79253)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   ((C92 * C96 + C115 + C115 + C81 * C108 + C94 * C97 + C116 +
                     C116 + C82 * C109) *
                        C79307 * C79308 * C79027 * C5561 -
                    (C94 * C748 + C773 + C773 + C82 * C764 + C92 * C749 + C774 +
                     C774 + C81 * C765) *
                        C79307 * C79308 * C79027 * C5562 +
                    (C92 * C750 + C775 + C775 + C81 * C766 + C94 * C751 + C776 +
                     C776 + C82 * C767) *
                        C79307 * C79308 * C79027 * C5563 -
                    (C94 * C5567 + C5580 + C5580 + C82 * C5575 + C92 * C5568 +
                     C5581 + C5581 + C81 * C5576) *
                        C79307 * C79308 * C79027 * C5564 +
                    (C92 * C5569 + C5582 + C5582 + C81 * C5577 + C94 * C5570 +
                     C5583 + C5583 + C82 * C5578) *
                        C79307 * C79308 * C79027 * C5565) *
                   C78981) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C92 * C96 + C115 + C115 + C81 * C108 + C94 * C97 + C116 +
                      C116 + C82 * C109) *
                         C79307 * C79308 * C79301 -
                     (C94 * C1681 + C1706 + C1706 + C82 * C1697 + C92 * C1682 +
                      C1707 + C1707 + C81 * C1698) *
                         C79307 * C79308 * C79287 +
                     (C92 * C1683 + C1708 + C1708 + C81 * C1699 + C94 * C1684 +
                      C1709 + C1709 + C82 * C1700) *
                         C79307 * C79308 * C79262) *
                        C4921 +
                    ((C92 * C3931 + C3944 + C3944 + C81 * C3939 + C94 * C3932 +
                      C3945 + C3945 + C82 * C3940) *
                         C79307 * C79308 * C79287 -
                     (C94 * C748 + C773 + C773 + C82 * C764 + C92 * C749 +
                      C774 + C774 + C81 * C765) *
                         C79307 * C79308 * C79301 -
                     (C94 * C6041 + C6060 + C6060 + C82 * C6053 + C92 * C6042 +
                      C6061 + C6061 + C81 * C6054) *
                         C79307 * C79308 * C79262) *
                        C4922 +
                    ((C92 * C750 + C775 + C775 + C81 * C766 + C94 * C751 +
                      C776 + C776 + C82 * C767) *
                         C79307 * C79308 * C79301 -
                     (C94 * C6043 + C6062 + C6062 + C82 * C6055 + C92 * C6044 +
                      C6063 + C6063 + C81 * C6056) *
                         C79307 * C79308 * C79287 +
                     (C92 * C6045 + C6064 + C6064 + C81 * C6057 + C94 * C6046 +
                      C6065 + C6065 + C82 * C6058) *
                         C79307 * C79308 * C79262) *
                        C79259) *
                   C78981) /
                      (p * q * std::sqrt(p + q));
    d2eexy[22] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C166 * C96 + C79308 * C167) * C93 +
            (C166 * C102 + C79308 * C173) * C81 + C196 * C95 + C197 * C82) *
               C79307 * C79027 * C79300 -
           (C891 * C82 + C892 * C95 + (C166 * C757 + C79308 * C867) * C81 +
            (C166 * C749 + C79308 * C859) * C93) *
               C79307 * C79027 * C79285 +
           ((C166 * C750 + C79308 * C860) * C93 +
            (C166 * C758 + C79308 * C868) * C81 + C893 * C95 + C894 * C82) *
               C79307 * C79027 * C79259) *
              C745 +
          ((C892 * C93 + C891 * C81 + C895 * C95 + C896 * C82) * C79307 *
               C79027 * C79285 -
           (C198 * C82 + C199 * C95 + C197 * C81 + C196 * C93) * C79307 *
               C79027 * C79300 -
           (C897 * C82 + C898 * C95 + C894 * C81 + C893 * C93) * C79307 *
               C79027 * C79259) *
              C746 +
          ((C199 * C93 + C198 * C81 + C200 * C95 + C201 * C82) * C79307 *
               C79027 * C79300 -
           ((C166 * C762 + C79308 * C872) * C82 +
            (C166 * C754 + C79308 * C864) * C95 + C896 * C81 + C895 * C93) *
               C79307 * C79027 * C79285 +
           (C898 * C93 + C897 * C81 + (C166 * C755 + C79308 * C865) * C95 +
            (C166 * C763 + C79308 * C873) * C82) *
               C79307 * C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C166 * C96 + C79308 * C167) * C93 +
           (C166 * C102 + C79308 * C173) * C81 + C196 * C95 + C197 * C82) *
              C79307 * C79027 * C79009 * C87 -
          (C198 * C82 + C199 * C95 + C197 * C81 + C196 * C93) * C79307 *
              C79027 * C79009 * C88 +
          (C199 * C93 + C198 * C81 + C200 * C95 + C201 * C82) * C79307 *
              C79027 * C79009 * C89 -
          (C202 * C82 + C203 * C95 + C201 * C81 + C200 * C93) * C79307 *
              C79027 * C79009 * C90 +
          (C203 * C93 + C202 * C81 + (C166 * C101 + C79308 * C172) * C95 +
           (C166 * C107 + C79308 * C178) * C82) *
              C79307 * C79027 * C79009 * C91)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C166 * C96 + C79308 * C167) * C93 +
            (C166 * C102 + C79308 * C173) * C81 + C196 * C95 + C197 * C82) *
               C79307 * C79301 -
           (C1824 * C82 + C1825 * C95 + (C166 * C1690 + C79308 * C1800) * C81 +
            (C166 * C1682 + C79308 * C1792) * C93) *
               C79307 * C79287 +
           ((C166 * C1683 + C79308 * C1793) * C93 +
            (C166 * C1691 + C79308 * C1801) * C81 + C1826 * C95 + C1827 * C82) *
               C79307 * C79262) *
              C79009 * C745 +
          ((C1825 * C93 + C1824 * C81 + C1828 * C95 + C1829 * C82) * C79307 *
               C79287 -
           (C198 * C82 + C199 * C95 + C197 * C81 + C196 * C93) * C79307 *
               C79301 -
           (C1830 * C82 + C1831 * C95 + C1827 * C81 + C1826 * C93) * C79307 *
               C79262) *
              C79009 * C746 +
          ((C199 * C93 + C198 * C81 + C200 * C95 + C201 * C82) * C79307 *
               C79301 -
           ((C166 * C1695 + C79308 * C1805) * C82 +
            (C166 * C1687 + C79308 * C1797) * C95 + C1829 * C81 + C1828 * C93) *
               C79307 * C79287 +
           (C1831 * C93 + C1830 * C81 + (C166 * C1688 + C79308 * C1798) * C95 +
            (C166 * C1696 + C79308 * C1806) * C82) *
               C79307 * C79262) *
              C79009 * C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C166 * C96 + C79308 * C167) * C93 +
            (C166 * C102 + C79308 * C173) * C81 + C196 * C95 + C197 * C82) *
               C79307 * C79027 * C4921 -
           (C891 * C82 + C892 * C95 + (C166 * C757 + C79308 * C867) * C81 +
            (C166 * C749 + C79308 * C859) * C93) *
               C79307 * C79027 * C4922 +
           ((C166 * C750 + C79308 * C860) * C93 +
            (C166 * C758 + C79308 * C868) * C81 + C893 * C95 + C894 * C82) *
               C79307 * C79027 * C79259) *
              C79297 +
          ((C892 * C93 + C891 * C81 + C895 * C95 + C896 * C82) * C79307 *
               C79027 * C4922 -
           (C198 * C82 + C199 * C95 + C197 * C81 + C196 * C93) * C79307 *
               C79027 * C4921 -
           (C897 * C82 + C898 * C95 + C894 * C81 + C893 * C93) * C79307 *
               C79027 * C79259) *
              C79281 +
          ((C199 * C93 + C198 * C81 + C200 * C95 + C201 * C82) * C79307 *
               C79027 * C4921 -
           (C2687 * C82 + C2688 * C95 + C896 * C81 + C895 * C93) * C79307 *
               C79027 * C4922 +
           (C898 * C93 + C897 * C81 + (C166 * C755 + C79308 * C865) * C95 +
            (C166 * C763 + C79308 * C873) * C82) *
               C79307 * C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C166 * C96 + C79308 * C167) * C93 +
           (C166 * C102 + C79308 * C173) * C81 + C196 * C95 + C197 * C82) *
              C79307 * C79027 * C5561 -
          (C891 * C82 + C892 * C95 + (C166 * C757 + C79308 * C867) * C81 +
           (C166 * C749 + C79308 * C859) * C93) *
              C79307 * C79027 * C5562 +
          ((C166 * C750 + C79308 * C860) * C93 +
           (C166 * C758 + C79308 * C868) * C81 + C893 * C95 + C894 * C82) *
              C79307 * C79027 * C5563 -
          ((C166 * C5571 + C79308 * C5629) * C82 +
           (C166 * C5567 + C79308 * C5625) * C95 +
           (C166 * C5572 + C79308 * C5630) * C81 +
           (C166 * C5568 + C79308 * C5626) * C93) *
              C79307 * C79027 * C5564 +
          ((C166 * C5569 + C79308 * C5627) * C93 +
           (C166 * C5573 + C79308 * C5631) * C81 +
           (C166 * C5570 + C79308 * C5628) * C95 +
           (C166 * C5574 + C79308 * C5632) * C82) *
              C79307 * C79027 * C5565) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C166 * C96 + C79308 * C167) * C93 +
            (C166 * C102 + C79308 * C173) * C81 + C196 * C95 + C197 * C82) *
               C79307 * C79301 -
           (C1824 * C82 + C1825 * C95 + (C166 * C1690 + C79308 * C1800) * C81 +
            (C166 * C1682 + C79308 * C1792) * C93) *
               C79307 * C79287 +
           ((C166 * C1683 + C79308 * C1793) * C93 +
            (C166 * C1691 + C79308 * C1801) * C81 + C1826 * C95 + C1827 * C82) *
               C79307 * C79262) *
              C4921 +
          (((C166 * C3931 + C79308 * C4047) * C93 +
            (C166 * C3935 + C79308 * C4051) * C81 + C4064 * C95 + C4065 * C82) *
               C79307 * C79287 -
           (C891 * C82 + C892 * C95 + (C166 * C757 + C79308 * C867) * C81 +
            (C166 * C749 + C79308 * C859) * C93) *
               C79307 * C79301 -
           ((C166 * C6047 + C79308 * C6145) * C82 +
            (C166 * C6041 + C79308 * C6139) * C95 +
            (C166 * C6048 + C79308 * C6146) * C81 +
            (C166 * C6042 + C79308 * C6140) * C93) *
               C79307 * C79262) *
              C4922 +
          (((C166 * C750 + C79308 * C860) * C93 +
            (C166 * C758 + C79308 * C868) * C81 + C893 * C95 + C894 * C82) *
               C79307 * C79301 -
           ((C166 * C6049 + C79308 * C6147) * C82 +
            (C166 * C6043 + C79308 * C6141) * C95 +
            (C166 * C6050 + C79308 * C6148) * C81 +
            (C166 * C6044 + C79308 * C6142) * C93) *
               C79307 * C79287 +
           ((C166 * C6045 + C79308 * C6143) * C93 +
            (C166 * C6051 + C79308 * C6149) * C81 +
            (C166 * C6046 + C79308 * C6144) * C95 +
            (C166 * C6052 + C79308 * C6150) * C82) *
               C79307 * C79262) *
              C79259) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eexz[22] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C245 * C96 + C79307 * C246) * C93 +
            (C245 * C102 + C79307 * C252) * C81 + C275 * C95 + C276 * C82) *
               C79308 * C79027 * C79300 -
           (C1005 * C82 + C1006 * C95 + (C245 * C757 + C79307 * C981) * C81 +
            (C245 * C749 + C79307 * C973) * C93) *
               C79308 * C79027 * C79285 +
           ((C245 * C750 + C79307 * C974) * C93 +
            (C245 * C758 + C79307 * C982) * C81 + C1007 * C95 + C1008 * C82) *
               C79308 * C79027 * C79259) *
              C745 +
          ((C1006 * C93 + C1005 * C81 + C1009 * C95 + C1010 * C82) * C79308 *
               C79027 * C79285 -
           (C277 * C82 + C278 * C95 + C276 * C81 + C275 * C93) * C79308 *
               C79027 * C79300 -
           (C1011 * C82 + C1012 * C95 + C1008 * C81 + C1007 * C93) * C79308 *
               C79027 * C79259) *
              C746 +
          ((C278 * C93 + C277 * C81 + C279 * C95 + C280 * C82) * C79308 *
               C79027 * C79300 -
           ((C245 * C762 + C79307 * C986) * C82 +
            (C245 * C754 + C79307 * C978) * C95 + C1010 * C81 + C1009 * C93) *
               C79308 * C79027 * C79285 +
           (C1012 * C93 + C1011 * C81 + (C245 * C755 + C79307 * C979) * C95 +
            (C245 * C763 + C79307 * C987) * C82) *
               C79308 * C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C245 * C96 + C79307 * C246) * C93 +
           (C245 * C102 + C79307 * C252) * C81 + C275 * C95 + C276 * C82) *
              C79308 * C79027 * C79009 * C87 -
          (C277 * C82 + C278 * C95 + C276 * C81 + C275 * C93) * C79308 *
              C79027 * C79009 * C88 +
          (C278 * C93 + C277 * C81 + C279 * C95 + C280 * C82) * C79308 *
              C79027 * C79009 * C89 -
          (C281 * C82 + C282 * C95 + C280 * C81 + C279 * C93) * C79308 *
              C79027 * C79009 * C90 +
          (C282 * C93 + C281 * C81 + (C245 * C101 + C79307 * C251) * C95 +
           (C245 * C107 + C79307 * C257) * C82) *
              C79308 * C79027 * C79009 * C91)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C245 * C96 + C79307 * C246) * C93 +
            (C245 * C102 + C79307 * C252) * C81 + C275 * C95 + C276 * C82) *
               C79308 * C79301 -
           (C1938 * C82 + C1939 * C95 + (C245 * C1690 + C79307 * C1914) * C81 +
            (C245 * C1682 + C79307 * C1906) * C93) *
               C79308 * C79287 +
           ((C245 * C1683 + C79307 * C1907) * C93 +
            (C245 * C1691 + C79307 * C1915) * C81 + C1940 * C95 + C1941 * C82) *
               C79308 * C79262) *
              C79009 * C745 +
          ((C1939 * C93 + C1938 * C81 + C1942 * C95 + C1943 * C82) * C79308 *
               C79287 -
           (C277 * C82 + C278 * C95 + C276 * C81 + C275 * C93) * C79308 *
               C79301 -
           (C1944 * C82 + C1945 * C95 + C1941 * C81 + C1940 * C93) * C79308 *
               C79262) *
              C79009 * C746 +
          ((C278 * C93 + C277 * C81 + C279 * C95 + C280 * C82) * C79308 *
               C79301 -
           ((C245 * C1695 + C79307 * C1919) * C82 +
            (C245 * C1687 + C79307 * C1911) * C95 + C1943 * C81 + C1942 * C93) *
               C79308 * C79287 +
           (C1945 * C93 + C1944 * C81 + (C245 * C1688 + C79307 * C1912) * C95 +
            (C245 * C1696 + C79307 * C1920) * C82) *
               C79308 * C79262) *
              C79009 * C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C245 * C96 + C79307 * C246) * C93 +
            (C245 * C102 + C79307 * C252) * C81 + C275 * C95 + C276 * C82) *
               C79308 * C79027 * C4921 -
           (C1005 * C82 + C1006 * C95 + (C245 * C757 + C79307 * C981) * C81 +
            (C245 * C749 + C79307 * C973) * C93) *
               C79308 * C79027 * C4922 +
           ((C245 * C750 + C79307 * C974) * C93 +
            (C245 * C758 + C79307 * C982) * C81 + C1007 * C95 + C1008 * C82) *
               C79308 * C79027 * C79259) *
              C79297 +
          ((C1006 * C93 + C1005 * C81 + C1009 * C95 + C1010 * C82) * C79308 *
               C79027 * C4922 -
           (C277 * C82 + C278 * C95 + C276 * C81 + C275 * C93) * C79308 *
               C79027 * C4921 -
           (C1011 * C82 + C1012 * C95 + C1008 * C81 + C1007 * C93) * C79308 *
               C79027 * C79259) *
              C79281 +
          ((C278 * C93 + C277 * C81 + C279 * C95 + C280 * C82) * C79308 *
               C79027 * C4921 -
           (C2761 * C82 + C2762 * C95 + C1010 * C81 + C1009 * C93) * C79308 *
               C79027 * C4922 +
           (C1012 * C93 + C1011 * C81 + (C245 * C755 + C79307 * C979) * C95 +
            (C245 * C763 + C79307 * C987) * C82) *
               C79308 * C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C245 * C96 + C79307 * C246) * C93 +
           (C245 * C102 + C79307 * C252) * C81 + C275 * C95 + C276 * C82) *
              C79308 * C79027 * C5561 -
          (C1005 * C82 + C1006 * C95 + (C245 * C757 + C79307 * C981) * C81 +
           (C245 * C749 + C79307 * C973) * C93) *
              C79308 * C79027 * C5562 +
          ((C245 * C750 + C79307 * C974) * C93 +
           (C245 * C758 + C79307 * C982) * C81 + C1007 * C95 + C1008 * C82) *
              C79308 * C79027 * C5563 -
          ((C245 * C5571 + C79307 * C5679) * C82 +
           (C245 * C5567 + C79307 * C5675) * C95 +
           (C245 * C5572 + C79307 * C5680) * C81 +
           (C245 * C5568 + C79307 * C5676) * C93) *
              C79308 * C79027 * C5564 +
          ((C245 * C5569 + C79307 * C5677) * C93 +
           (C245 * C5573 + C79307 * C5681) * C81 +
           (C245 * C5570 + C79307 * C5678) * C95 +
           (C245 * C5574 + C79307 * C5682) * C82) *
              C79308 * C79027 * C5565) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C245 * C96 + C79307 * C246) * C93 +
            (C245 * C102 + C79307 * C252) * C81 + C275 * C95 + C276 * C82) *
               C79308 * C79301 -
           (C1938 * C82 + C1939 * C95 + (C245 * C1690 + C79307 * C1914) * C81 +
            (C245 * C1682 + C79307 * C1906) * C93) *
               C79308 * C79287 +
           ((C245 * C1683 + C79307 * C1907) * C93 +
            (C245 * C1691 + C79307 * C1915) * C81 + C1940 * C95 + C1941 * C82) *
               C79308 * C79262) *
              C4921 +
          (((C245 * C3931 + C79307 * C4165) * C93 +
            (C245 * C3935 + C79307 * C4169) * C81 + C4182 * C95 + C4183 * C82) *
               C79308 * C79287 -
           (C1005 * C82 + C1006 * C95 + (C245 * C757 + C79307 * C981) * C81 +
            (C245 * C749 + C79307 * C973) * C93) *
               C79308 * C79301 -
           ((C245 * C6047 + C79307 * C6231) * C82 +
            (C245 * C6041 + C79307 * C6225) * C95 +
            (C245 * C6048 + C79307 * C6232) * C81 +
            (C245 * C6042 + C79307 * C6226) * C93) *
               C79308 * C79262) *
              C4922 +
          (((C245 * C750 + C79307 * C974) * C93 +
            (C245 * C758 + C79307 * C982) * C81 + C1007 * C95 + C1008 * C82) *
               C79308 * C79301 -
           ((C245 * C6049 + C79307 * C6233) * C82 +
            (C245 * C6043 + C79307 * C6227) * C95 +
            (C245 * C6050 + C79307 * C6234) * C81 +
            (C245 * C6044 + C79307 * C6228) * C93) *
               C79308 * C79287 +
           ((C245 * C6045 + C79307 * C6229) * C93 +
            (C245 * C6051 + C79307 * C6235) * C81 +
            (C245 * C6046 + C79307 * C6230) * C95 +
            (C245 * C6052 + C79307 * C6236) * C82) *
               C79308 * C79262) *
              C79259) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eeyx[22] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C166 +
            (C93 * C167 + C81 * C324 + C95 * C168 + C82 * C325) * C79308) *
               C79307 * C79027 * C79300 -
           ((C95 * C858 + C82 * C1086 + C93 * C859 + C81 * C1087) * C79308 +
            (C95 * C748 + C82 * C756 + C93 * C749 + C81 * C757) * C166) *
               C79307 * C79027 * C79285 +
           ((C93 * C750 + C81 * C758 + C95 * C751 + C82 * C759) * C166 +
            (C93 * C860 + C81 * C1088 + C95 * C861 + C82 * C1089) * C79308) *
               C79307 * C79027 * C79259) *
              C745 +
          (((C93 * C748 + C81 * C756 + C95 * C752 + C82 * C760) * C166 +
            (C93 * C858 + C81 * C1086 + C95 * C862 + C82 * C1090) * C79308) *
               C79307 * C79027 * C79285 -
           ((C95 * C169 + C82 * C326 + C93 * C168 + C81 * C325) * C79308 +
            (C95 * C98 + C82 * C104 + C93 * C97 + C81 * C103) * C166) *
               C79307 * C79027 * C79300 -
           ((C95 * C863 + C82 * C1091 + C93 * C861 + C81 * C1089) * C79308 +
            (C95 * C753 + C82 * C761 + C93 * C751 + C81 * C759) * C166) *
               C79307 * C79027 * C79259) *
              C746 +
          (((C93 * C98 + C81 * C104 + C95 * C99 + C82 * C105) * C166 +
            (C93 * C169 + C81 * C326 + C95 * C170 + C82 * C327) * C79308) *
               C79307 * C79027 * C79300 -
           ((C95 * C864 + C82 * C1092 + C93 * C862 + C81 * C1090) * C79308 +
            (C95 * C754 + C82 * C762 + C93 * C752 + C81 * C760) * C166) *
               C79307 * C79027 * C79285 +
           ((C93 * C753 + C81 * C761 + C95 * C755 + C82 * C763) * C166 +
            (C93 * C863 + C81 * C1091 + C95 * C865 + C82 * C1093) * C79308) *
               C79307 * C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C166 +
           (C93 * C167 + C81 * C324 + C95 * C168 + C82 * C325) * C79308) *
              C79307 * C79027 * C79009 * C87 -
          ((C95 * C169 + C82 * C326 + C93 * C168 + C81 * C325) * C79308 +
           (C95 * C98 + C82 * C104 + C93 * C97 + C81 * C103) * C166) *
              C79307 * C79027 * C79009 * C88 +
          ((C93 * C98 + C81 * C104 + C95 * C99 + C82 * C105) * C166 +
           (C93 * C169 + C81 * C326 + C95 * C170 + C82 * C327) * C79308) *
              C79307 * C79027 * C79009 * C89 -
          ((C95 * C171 + C82 * C328 + C93 * C170 + C81 * C327) * C79308 +
           (C95 * C100 + C82 * C106 + C93 * C99 + C81 * C105) * C166) *
              C79307 * C79027 * C79009 * C90 +
          ((C93 * C100 + C81 * C106 + C95 * C101 + C82 * C107) * C166 +
           (C93 * C171 + C81 * C328 + C95 * C172 + C82 * C329) * C79308) *
              C79307 * C79027 * C79009 * C91)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C166 +
            (C93 * C167 + C81 * C324 + C95 * C168 + C82 * C325) * C79308) *
               C79307 * C79301 -
           ((C95 * C1791 + C82 * C2019 + C93 * C1792 + C81 * C2020) * C79308 +
            (C95 * C1681 + C82 * C1689 + C93 * C1682 + C81 * C1690) * C166) *
               C79307 * C79287 +
           ((C93 * C1683 + C81 * C1691 + C95 * C1684 + C82 * C1692) * C166 +
            (C93 * C1793 + C81 * C2021 + C95 * C1794 + C82 * C2022) * C79308) *
               C79307 * C79262) *
              C79009 * C745 +
          (((C93 * C1681 + C81 * C1689 + C95 * C1685 + C82 * C1693) * C166 +
            (C93 * C1791 + C81 * C2019 + C95 * C1795 + C82 * C2023) * C79308) *
               C79307 * C79287 -
           ((C95 * C169 + C82 * C326 + C93 * C168 + C81 * C325) * C79308 +
            (C95 * C98 + C82 * C104 + C93 * C97 + C81 * C103) * C166) *
               C79307 * C79301 -
           ((C95 * C1796 + C82 * C2024 + C93 * C1794 + C81 * C2022) * C79308 +
            (C95 * C1686 + C82 * C1694 + C93 * C1684 + C81 * C1692) * C166) *
               C79307 * C79262) *
              C79009 * C746 +
          (((C93 * C98 + C81 * C104 + C95 * C99 + C82 * C105) * C166 +
            (C93 * C169 + C81 * C326 + C95 * C170 + C82 * C327) * C79308) *
               C79307 * C79301 -
           ((C95 * C1797 + C82 * C2025 + C93 * C1795 + C81 * C2023) * C79308 +
            (C95 * C1687 + C82 * C1695 + C93 * C1685 + C81 * C1693) * C166) *
               C79307 * C79287 +
           ((C93 * C1686 + C81 * C1694 + C95 * C1688 + C82 * C1696) * C166 +
            (C93 * C1796 + C81 * C2024 + C95 * C1798 + C82 * C2026) * C79308) *
               C79307 * C79262) *
              C79009 * C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C166 +
            (C93 * C167 + C81 * C324 + C95 * C168 + C82 * C325) * C79308) *
               C79307 * C79027 * C4921 -
           ((C95 * C858 + C82 * C1086 + C93 * C859 + C81 * C1087) * C79308 +
            (C95 * C748 + C82 * C756 + C93 * C749 + C81 * C757) * C166) *
               C79307 * C79027 * C4922 +
           ((C93 * C750 + C81 * C758 + C95 * C751 + C82 * C759) * C166 +
            (C93 * C860 + C81 * C1088 + C95 * C861 + C82 * C1089) * C79308) *
               C79307 * C79027 * C79259) *
              C79297 +
          (((C93 * C748 + C81 * C756 + C95 * C752 + C82 * C760) * C166 +
            (C93 * C858 + C81 * C1086 + C95 * C862 + C82 * C1090) * C79308) *
               C79307 * C79027 * C4922 -
           ((C95 * C169 + C82 * C326 + C93 * C168 + C81 * C325) * C79308 +
            (C95 * C98 + C82 * C104 + C93 * C97 + C81 * C103) * C166) *
               C79307 * C79027 * C4921 -
           ((C95 * C863 + C82 * C1091 + C93 * C861 + C81 * C1089) * C79308 +
            (C95 * C753 + C82 * C761 + C93 * C751 + C81 * C759) * C166) *
               C79307 * C79027 * C79259) *
              C79281 +
          (((C93 * C98 + C81 * C104 + C95 * C99 + C82 * C105) * C166 +
            (C93 * C169 + C81 * C326 + C95 * C170 + C82 * C327) * C79308) *
               C79307 * C79027 * C4921 -
           ((C95 * C864 + C82 * C1092 + C93 * C862 + C81 * C1090) * C79308 +
            (C95 * C754 + C82 * C762 + C93 * C752 + C81 * C760) * C166) *
               C79307 * C79027 * C4922 +
           ((C93 * C753 + C81 * C761 + C95 * C755 + C82 * C763) * C166 +
            (C93 * C863 + C81 * C1091 + C95 * C865 + C82 * C1093) * C79308) *
               C79307 * C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C166 +
           (C93 * C167 + C81 * C324 + C95 * C168 + C82 * C325) * C79308) *
              C79307 * C79027 * C5561 -
          ((C95 * C858 + C82 * C1086 + C93 * C859 + C81 * C1087) * C79308 +
           (C95 * C748 + C82 * C756 + C93 * C749 + C81 * C757) * C166) *
              C79307 * C79027 * C5562 +
          ((C93 * C750 + C81 * C758 + C95 * C751 + C82 * C759) * C166 +
           (C93 * C860 + C81 * C1088 + C95 * C861 + C82 * C1089) * C79308) *
              C79307 * C79027 * C5563 -
          ((C95 * C5625 + C82 * C5725 + C93 * C5626 + C81 * C5726) * C79308 +
           (C95 * C5567 + C82 * C5571 + C93 * C5568 + C81 * C5572) * C166) *
              C79307 * C79027 * C5564 +
          ((C93 * C5569 + C81 * C5573 + C95 * C5570 + C82 * C5574) * C166 +
           (C93 * C5627 + C81 * C5727 + C95 * C5628 + C82 * C5728) * C79308) *
              C79307 * C79027 * C5565) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C166 +
            (C93 * C167 + C81 * C324 + C95 * C168 + C82 * C325) * C79308) *
               C79307 * C79301 -
           ((C95 * C1791 + C82 * C2019 + C93 * C1792 + C81 * C2020) * C79308 +
            (C95 * C1681 + C82 * C1689 + C93 * C1682 + C81 * C1690) * C166) *
               C79307 * C79287 +
           ((C93 * C1683 + C81 * C1691 + C95 * C1684 + C82 * C1692) * C166 +
            (C93 * C1793 + C81 * C2021 + C95 * C1794 + C82 * C2022) * C79308) *
               C79307 * C79262) *
              C4921 +
          (((C93 * C3931 + C81 * C3935 + C95 * C3932 + C82 * C3936) * C166 +
            (C93 * C4047 + C81 * C4283 + C95 * C4048 + C82 * C4284) * C79308) *
               C79307 * C79287 -
           ((C95 * C858 + C82 * C1086 + C93 * C859 + C81 * C1087) * C79308 +
            (C95 * C748 + C82 * C756 + C93 * C749 + C81 * C757) * C166) *
               C79307 * C79301 -
           ((C95 * C6139 + C82 * C6311 + C93 * C6140 + C81 * C6312) * C79308 +
            (C95 * C6041 + C82 * C6047 + C93 * C6042 + C81 * C6048) * C166) *
               C79307 * C79262) *
              C4922 +
          (((C93 * C750 + C81 * C758 + C95 * C751 + C82 * C759) * C166 +
            (C93 * C860 + C81 * C1088 + C95 * C861 + C82 * C1089) * C79308) *
               C79307 * C79301 -
           ((C95 * C6141 + C82 * C6313 + C93 * C6142 + C81 * C6314) * C79308 +
            (C95 * C6043 + C82 * C6049 + C93 * C6044 + C81 * C6050) * C166) *
               C79307 * C79287 +
           ((C93 * C6045 + C81 * C6051 + C95 * C6046 + C82 * C6052) * C166 +
            (C93 * C6143 + C81 * C6315 + C95 * C6144 + C82 * C6316) * C79308) *
               C79307 * C79262) *
              C79259) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eeyy[22] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C372 * C96 + C380 + C380 + C79308 * C373) * C81 + C402 * C82) *
               C79307 * C79027 * C79300 -
           (C1201 * C82 +
            (C372 * C749 + C1180 + C1180 + C79308 * C1169) * C81) *
               C79307 * C79027 * C79285 +
           ((C372 * C750 + C1181 + C1181 + C79308 * C1170) * C81 +
            C1202 * C82) *
               C79307 * C79027 * C79259) *
              C745 +
          ((C1201 * C81 + C1203 * C82) * C79307 * C79027 * C79285 -
           (C403 * C82 + C402 * C81) * C79307 * C79027 * C79300 -
           (C1204 * C82 + C1202 * C81) * C79307 * C79027 * C79259) *
              C746 +
          ((C403 * C81 + C404 * C82) * C79307 * C79027 * C79300 -
           ((C372 * C754 + C1191 + C1191 + C79308 * C1174) * C82 +
            C1203 * C81) *
               C79307 * C79027 * C79285 +
           (C1204 * C81 +
            (C372 * C755 + C1192 + C1192 + C79308 * C1175) * C82) *
               C79307 * C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C372 * C96 + C380 + C380 + C79308 * C373) * C81 + C402 * C82) *
              C79307 * C79027 * C79009 * C87 -
          (C403 * C82 + C402 * C81) * C79307 * C79027 * C79009 * C88 +
          (C403 * C81 + C404 * C82) * C79307 * C79027 * C79009 * C89 -
          (C405 * C82 + C404 * C81) * C79307 * C79027 * C79009 * C90 +
          (C405 * C81 + (C372 * C101 + C393 + C393 + C79308 * C378) * C82) *
              C79307 * C79027 * C79009 * C91)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C372 * C96 + C380 + C380 + C79308 * C373) * C81 + C402 * C82) *
               C79307 * C79301 -
           (C2134 * C82 +
            (C372 * C1682 + C2113 + C2113 + C79308 * C2102) * C81) *
               C79307 * C79287 +
           ((C372 * C1683 + C2114 + C2114 + C79308 * C2103) * C81 +
            C2135 * C82) *
               C79307 * C79262) *
              C79009 * C745 +
          ((C2134 * C81 + C2136 * C82) * C79307 * C79287 -
           (C403 * C82 + C402 * C81) * C79307 * C79301 -
           (C2137 * C82 + C2135 * C81) * C79307 * C79262) *
              C79009 * C746 +
          ((C403 * C81 + C404 * C82) * C79307 * C79301 -
           ((C372 * C1687 + C2124 + C2124 + C79308 * C2107) * C82 +
            C2136 * C81) *
               C79307 * C79287 +
           (C2137 * C81 +
            (C372 * C1688 + C2125 + C2125 + C79308 * C2108) * C82) *
               C79307 * C79262) *
              C79009 * C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C372 * C96 + C380 + C380 + C79308 * C373) * C81 + C402 * C82) *
               C79307 * C79027 * C4921 -
           (C1201 * C82 +
            (C372 * C749 + C1180 + C1180 + C79308 * C1169) * C81) *
               C79307 * C79027 * C4922 +
           ((C372 * C750 + C1181 + C1181 + C79308 * C1170) * C81 +
            C1202 * C82) *
               C79307 * C79027 * C79259) *
              C79297 +
          ((C1201 * C81 + C1203 * C82) * C79307 * C79027 * C4922 -
           (C403 * C82 + C402 * C81) * C79307 * C79027 * C4921 -
           (C1204 * C82 + C1202 * C81) * C79307 * C79027 * C79259) *
              C79281 +
          ((C403 * C81 + C404 * C82) * C79307 * C79027 * C4921 -
           (C2902 * C82 + C1203 * C81) * C79307 * C79027 * C4922 +
           (C1204 * C81 +
            (C372 * C755 + C1192 + C1192 + C79308 * C1175) * C82) *
               C79307 * C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C372 * C96 + C380 + C380 + C79308 * C373) * C81 + C402 * C82) *
              C79307 * C79027 * C5561 -
          (C1201 * C82 + (C372 * C749 + C1180 + C1180 + C79308 * C1169) * C81) *
              C79307 * C79027 * C5562 +
          ((C372 * C750 + C1181 + C1181 + C79308 * C1170) * C81 + C1202 * C82) *
              C79307 * C79027 * C5563 -
          ((C372 * C5567 + C5776 + C5776 + C79308 * C5771) * C82 +
           (C372 * C5568 + C5777 + C5777 + C79308 * C5772) * C81) *
              C79307 * C79027 * C5564 +
          ((C372 * C5569 + C5778 + C5778 + C79308 * C5773) * C81 +
           (C372 * C5570 + C5779 + C5779 + C79308 * C5774) * C82) *
              C79307 * C79027 * C5565) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C372 * C96 + C380 + C380 + C79308 * C373) * C81 + C402 * C82) *
               C79307 * C79301 -
           (C2134 * C82 +
            (C372 * C1682 + C2113 + C2113 + C79308 * C2102) * C81) *
               C79307 * C79287 +
           ((C372 * C1683 + C2114 + C2114 + C79308 * C2103) * C81 +
            C2135 * C82) *
               C79307 * C79262) *
              C4921 +
          (((C372 * C3931 + C4390 + C4390 + C79308 * C4385) * C81 +
            C4402 * C82) *
               C79307 * C79287 -
           (C1201 * C82 +
            (C372 * C749 + C1180 + C1180 + C79308 * C1169) * C81) *
               C79307 * C79301 -
           ((C372 * C6041 + C6398 + C6398 + C79308 * C6391) * C82 +
            (C372 * C6042 + C6399 + C6399 + C79308 * C6392) * C81) *
               C79307 * C79262) *
              C4922 +
          (((C372 * C750 + C1181 + C1181 + C79308 * C1170) * C81 +
            C1202 * C82) *
               C79307 * C79301 -
           ((C372 * C6043 + C6400 + C6400 + C79308 * C6393) * C82 +
            (C372 * C6044 + C6401 + C6401 + C79308 * C6394) * C81) *
               C79307 * C79287 +
           ((C372 * C6045 + C6402 + C6402 + C79308 * C6395) * C81 +
            (C372 * C6046 + C6403 + C6403 + C79308 * C6396) * C82) *
               C79307 * C79262) *
              C79259) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eeyz[22] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C245 * C96 + C79307 * C246) * C166 +
             (C245 * C167 + C79307 * C447) * C79308) *
                C81 +
            (C454 + C470) * C82) *
               C79027 * C79300 -
           ((C1303 + C1289) * C82 + ((C245 * C859 + C79307 * C1279) * C79308 +
                                     (C245 * C749 + C79307 * C973) * C166) *
                                        C81) *
               C79027 * C79285 +
           (((C245 * C750 + C79307 * C974) * C166 +
             (C245 * C860 + C79307 * C1280) * C79308) *
                C81 +
            (C1290 + C1304) * C82) *
               C79027 * C79259) *
              C745 +
          (((C1289 + C1303) * C81 + (C1293 + C1305) * C82) * C79027 * C79285 -
           ((C471 + C459) * C82 + (C470 + C454) * C81) * C79027 * C79300 -
           ((C1306 + C1298) * C82 + (C1304 + C1290) * C81) * C79027 * C79259) *
              C746 +
          (((C459 + C471) * C81 + (C460 + C472) * C82) * C79027 * C79300 -
           (((C245 * C864 + C79307 * C1284) * C79308 +
             (C245 * C754 + C79307 * C978) * C166) *
                C82 +
            (C1305 + C1293) * C81) *
               C79027 * C79285 +
           ((C1298 + C1306) * C81 + ((C245 * C755 + C79307 * C979) * C166 +
                                     (C245 * C865 + C79307 * C1285) * C79308) *
                                        C82) *
               C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C245 * C96 + C79307 * C246) * C166 +
            (C245 * C167 + C79307 * C447) * C79308) *
               C81 +
           (C454 + C470) * C82) *
              C79027 * C79009 * C87 -
          ((C471 + C459) * C82 + (C470 + C454) * C81) * C79027 * C79009 * C88 +
          ((C459 + C471) * C81 + (C460 + C472) * C82) * C79027 * C79009 * C89 -
          ((C473 + C465) * C82 + (C472 + C460) * C81) * C79027 * C79009 * C90 +
          ((C465 + C473) * C81 + ((C245 * C101 + C79307 * C251) * C166 +
                                  (C245 * C172 + C79307 * C452) * C79308) *
                                     C82) *
              C79027 * C79009 * C91)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C245 * C96 + C79307 * C246) * C166 +
             (C245 * C167 + C79307 * C447) * C79308) *
                C81 +
            (C454 + C470) * C82) *
               C79301 -
           ((C2236 + C2222) * C82 + ((C245 * C1792 + C79307 * C2212) * C79308 +
                                     (C245 * C1682 + C79307 * C1906) * C166) *
                                        C81) *
               C79287 +
           (((C245 * C1683 + C79307 * C1907) * C166 +
             (C245 * C1793 + C79307 * C2213) * C79308) *
                C81 +
            (C2223 + C2237) * C82) *
               C79262) *
              C79009 * C745 +
          (((C2222 + C2236) * C81 + (C2226 + C2238) * C82) * C79287 -
           ((C471 + C459) * C82 + (C470 + C454) * C81) * C79301 -
           ((C2239 + C2231) * C82 + (C2237 + C2223) * C81) * C79262) *
              C79009 * C746 +
          (((C459 + C471) * C81 + (C460 + C472) * C82) * C79301 -
           (((C245 * C1797 + C79307 * C2217) * C79308 +
             (C245 * C1687 + C79307 * C1911) * C166) *
                C82 +
            (C2238 + C2226) * C81) *
               C79287 +
           ((C2231 + C2239) * C81 + ((C245 * C1688 + C79307 * C1912) * C166 +
                                     (C245 * C1798 + C79307 * C2218) * C79308) *
                                        C82) *
               C79262) *
              C79009 * C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C245 * C96 + C79307 * C246) * C166 +
             (C245 * C167 + C79307 * C447) * C79308) *
                C81 +
            (C454 + C470) * C82) *
               C79027 * C4921 -
           ((C1303 + C1289) * C82 + ((C245 * C859 + C79307 * C1279) * C79308 +
                                     (C245 * C749 + C79307 * C973) * C166) *
                                        C81) *
               C79027 * C4922 +
           (((C245 * C750 + C79307 * C974) * C166 +
             (C245 * C860 + C79307 * C1280) * C79308) *
                C81 +
            (C1290 + C1304) * C82) *
               C79027 * C79259) *
              C79297 +
          (((C1289 + C1303) * C81 + (C1293 + C1305) * C82) * C79027 * C4922 -
           ((C471 + C459) * C82 + (C470 + C454) * C81) * C79027 * C4921 -
           ((C1306 + C1298) * C82 + (C1304 + C1290) * C81) * C79027 * C79259) *
              C79281 +
          (((C459 + C471) * C81 + (C460 + C472) * C82) * C79027 * C4921 -
           ((C2974 + C2972) * C82 + (C1305 + C1293) * C81) * C79027 * C4922 +
           ((C1298 + C1306) * C81 + ((C245 * C755 + C79307 * C979) * C166 +
                                     (C245 * C865 + C79307 * C1285) * C79308) *
                                        C82) *
               C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C245 * C96 + C79307 * C246) * C166 +
            (C245 * C167 + C79307 * C447) * C79308) *
               C81 +
           (C454 + C470) * C82) *
              C79027 * C5561 -
          ((C1303 + C1289) * C82 + ((C245 * C859 + C79307 * C1279) * C79308 +
                                    (C245 * C749 + C79307 * C973) * C166) *
                                       C81) *
              C79027 * C5562 +
          (((C245 * C750 + C79307 * C974) * C166 +
            (C245 * C860 + C79307 * C1280) * C79308) *
               C81 +
           (C1290 + C1304) * C82) *
              C79027 * C5563 -
          (((C245 * C5625 + C79307 * C5821) * C79308 +
            (C245 * C5567 + C79307 * C5675) * C166) *
               C82 +
           ((C245 * C5626 + C79307 * C5822) * C79308 +
            (C245 * C5568 + C79307 * C5676) * C166) *
               C81) *
              C79027 * C5564 +
          (((C245 * C5569 + C79307 * C5677) * C166 +
            (C245 * C5627 + C79307 * C5823) * C79308) *
               C81 +
           ((C245 * C5570 + C79307 * C5678) * C166 +
            (C245 * C5628 + C79307 * C5824) * C79308) *
               C82) *
              C79027 * C5565) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C245 * C96 + C79307 * C246) * C166 +
             (C245 * C167 + C79307 * C447) * C79308) *
                C81 +
            (C454 + C470) * C82) *
               C79301 -
           ((C2236 + C2222) * C82 + ((C245 * C1792 + C79307 * C2212) * C79308 +
                                     (C245 * C1682 + C79307 * C1906) * C166) *
                                        C81) *
               C79287 +
           (((C245 * C1683 + C79307 * C1907) * C166 +
             (C245 * C1793 + C79307 * C2213) * C79308) *
                C81 +
            (C2223 + C2237) * C82) *
               C79262) *
              C4921 +
          ((((C245 * C3931 + C79307 * C4165) * C166 +
             (C245 * C4047 + C79307 * C4501) * C79308) *
                C81 +
            (C4506 + C4514) * C82) *
               C79287 -
           ((C1303 + C1289) * C82 + ((C245 * C859 + C79307 * C1279) * C79308 +
                                     (C245 * C749 + C79307 * C973) * C166) *
                                        C81) *
               C79301 -
           (((C245 * C6139 + C79307 * C6477) * C79308 +
             (C245 * C6041 + C79307 * C6225) * C166) *
                C82 +
            ((C245 * C6140 + C79307 * C6478) * C79308 +
             (C245 * C6042 + C79307 * C6226) * C166) *
                C81) *
               C79262) *
              C4922 +
          ((((C245 * C750 + C79307 * C974) * C166 +
             (C245 * C860 + C79307 * C1280) * C79308) *
                C81 +
            (C1290 + C1304) * C82) *
               C79301 -
           (((C245 * C6141 + C79307 * C6479) * C79308 +
             (C245 * C6043 + C79307 * C6227) * C166) *
                C82 +
            ((C245 * C6142 + C79307 * C6480) * C79308 +
             (C245 * C6044 + C79307 * C6228) * C166) *
                C81) *
               C79287 +
           (((C245 * C6045 + C79307 * C6229) * C166 +
             (C245 * C6143 + C79307 * C6481) * C79308) *
                C81 +
            ((C245 * C6046 + C79307 * C6230) * C166 +
             (C245 * C6144 + C79307 * C6482) * C79308) *
                C82) *
               C79262) *
              C79259) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eezx[22] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C245 +
            (C93 * C246 + C81 * C515 + C95 * C247 + C82 * C516) * C79307) *
               C79308 * C79027 * C79300 -
           ((C95 * C972 + C82 * C1380 + C93 * C973 + C81 * C1381) * C79307 +
            (C95 * C748 + C82 * C756 + C93 * C749 + C81 * C757) * C245) *
               C79308 * C79027 * C79285 +
           ((C93 * C750 + C81 * C758 + C95 * C751 + C82 * C759) * C245 +
            (C93 * C974 + C81 * C1382 + C95 * C975 + C82 * C1383) * C79307) *
               C79308 * C79027 * C79259) *
              C745 +
          (((C93 * C748 + C81 * C756 + C95 * C752 + C82 * C760) * C245 +
            (C93 * C972 + C81 * C1380 + C95 * C976 + C82 * C1384) * C79307) *
               C79308 * C79027 * C79285 -
           ((C95 * C248 + C82 * C517 + C93 * C247 + C81 * C516) * C79307 +
            (C95 * C98 + C82 * C104 + C93 * C97 + C81 * C103) * C245) *
               C79308 * C79027 * C79300 -
           ((C95 * C977 + C82 * C1385 + C93 * C975 + C81 * C1383) * C79307 +
            (C95 * C753 + C82 * C761 + C93 * C751 + C81 * C759) * C245) *
               C79308 * C79027 * C79259) *
              C746 +
          (((C93 * C98 + C81 * C104 + C95 * C99 + C82 * C105) * C245 +
            (C93 * C248 + C81 * C517 + C95 * C249 + C82 * C518) * C79307) *
               C79308 * C79027 * C79300 -
           ((C95 * C978 + C82 * C1386 + C93 * C976 + C81 * C1384) * C79307 +
            (C95 * C754 + C82 * C762 + C93 * C752 + C81 * C760) * C245) *
               C79308 * C79027 * C79285 +
           ((C93 * C753 + C81 * C761 + C95 * C755 + C82 * C763) * C245 +
            (C93 * C977 + C81 * C1385 + C95 * C979 + C82 * C1387) * C79307) *
               C79308 * C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C245 +
           (C93 * C246 + C81 * C515 + C95 * C247 + C82 * C516) * C79307) *
              C79308 * C79027 * C79009 * C87 -
          ((C95 * C248 + C82 * C517 + C93 * C247 + C81 * C516) * C79307 +
           (C95 * C98 + C82 * C104 + C93 * C97 + C81 * C103) * C245) *
              C79308 * C79027 * C79009 * C88 +
          ((C93 * C98 + C81 * C104 + C95 * C99 + C82 * C105) * C245 +
           (C93 * C248 + C81 * C517 + C95 * C249 + C82 * C518) * C79307) *
              C79308 * C79027 * C79009 * C89 -
          ((C95 * C250 + C82 * C519 + C93 * C249 + C81 * C518) * C79307 +
           (C95 * C100 + C82 * C106 + C93 * C99 + C81 * C105) * C245) *
              C79308 * C79027 * C79009 * C90 +
          ((C93 * C100 + C81 * C106 + C95 * C101 + C82 * C107) * C245 +
           (C93 * C250 + C81 * C519 + C95 * C251 + C82 * C520) * C79307) *
              C79308 * C79027 * C79009 * C91)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C245 +
            (C93 * C246 + C81 * C515 + C95 * C247 + C82 * C516) * C79307) *
               C79308 * C79301 -
           ((C95 * C1905 + C82 * C2313 + C93 * C1906 + C81 * C2314) * C79307 +
            (C95 * C1681 + C82 * C1689 + C93 * C1682 + C81 * C1690) * C245) *
               C79308 * C79287 +
           ((C93 * C1683 + C81 * C1691 + C95 * C1684 + C82 * C1692) * C245 +
            (C93 * C1907 + C81 * C2315 + C95 * C1908 + C82 * C2316) * C79307) *
               C79308 * C79262) *
              C79009 * C745 +
          (((C93 * C1681 + C81 * C1689 + C95 * C1685 + C82 * C1693) * C245 +
            (C93 * C1905 + C81 * C2313 + C95 * C1909 + C82 * C2317) * C79307) *
               C79308 * C79287 -
           ((C95 * C248 + C82 * C517 + C93 * C247 + C81 * C516) * C79307 +
            (C95 * C98 + C82 * C104 + C93 * C97 + C81 * C103) * C245) *
               C79308 * C79301 -
           ((C95 * C1910 + C82 * C2318 + C93 * C1908 + C81 * C2316) * C79307 +
            (C95 * C1686 + C82 * C1694 + C93 * C1684 + C81 * C1692) * C245) *
               C79308 * C79262) *
              C79009 * C746 +
          (((C93 * C98 + C81 * C104 + C95 * C99 + C82 * C105) * C245 +
            (C93 * C248 + C81 * C517 + C95 * C249 + C82 * C518) * C79307) *
               C79308 * C79301 -
           ((C95 * C1911 + C82 * C2319 + C93 * C1909 + C81 * C2317) * C79307 +
            (C95 * C1687 + C82 * C1695 + C93 * C1685 + C81 * C1693) * C245) *
               C79308 * C79287 +
           ((C93 * C1686 + C81 * C1694 + C95 * C1688 + C82 * C1696) * C245 +
            (C93 * C1910 + C81 * C2318 + C95 * C1912 + C82 * C2320) * C79307) *
               C79308 * C79262) *
              C79009 * C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C245 +
            (C93 * C246 + C81 * C515 + C95 * C247 + C82 * C516) * C79307) *
               C79308 * C79027 * C4921 -
           ((C95 * C972 + C82 * C1380 + C93 * C973 + C81 * C1381) * C79307 +
            (C95 * C748 + C82 * C756 + C93 * C749 + C81 * C757) * C245) *
               C79308 * C79027 * C4922 +
           ((C93 * C750 + C81 * C758 + C95 * C751 + C82 * C759) * C245 +
            (C93 * C974 + C81 * C1382 + C95 * C975 + C82 * C1383) * C79307) *
               C79308 * C79027 * C79259) *
              C79297 +
          (((C93 * C748 + C81 * C756 + C95 * C752 + C82 * C760) * C245 +
            (C93 * C972 + C81 * C1380 + C95 * C976 + C82 * C1384) * C79307) *
               C79308 * C79027 * C4922 -
           ((C95 * C248 + C82 * C517 + C93 * C247 + C81 * C516) * C79307 +
            (C95 * C98 + C82 * C104 + C93 * C97 + C81 * C103) * C245) *
               C79308 * C79027 * C4921 -
           ((C95 * C977 + C82 * C1385 + C93 * C975 + C81 * C1383) * C79307 +
            (C95 * C753 + C82 * C761 + C93 * C751 + C81 * C759) * C245) *
               C79308 * C79027 * C79259) *
              C79281 +
          (((C93 * C98 + C81 * C104 + C95 * C99 + C82 * C105) * C245 +
            (C93 * C248 + C81 * C517 + C95 * C249 + C82 * C518) * C79307) *
               C79308 * C79027 * C4921 -
           ((C95 * C978 + C82 * C1386 + C93 * C976 + C81 * C1384) * C79307 +
            (C95 * C754 + C82 * C762 + C93 * C752 + C81 * C760) * C245) *
               C79308 * C79027 * C4922 +
           ((C93 * C753 + C81 * C761 + C95 * C755 + C82 * C763) * C245 +
            (C93 * C977 + C81 * C1385 + C95 * C979 + C82 * C1387) * C79307) *
               C79308 * C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C245 +
           (C93 * C246 + C81 * C515 + C95 * C247 + C82 * C516) * C79307) *
              C79308 * C79027 * C5561 -
          ((C95 * C972 + C82 * C1380 + C93 * C973 + C81 * C1381) * C79307 +
           (C95 * C748 + C82 * C756 + C93 * C749 + C81 * C757) * C245) *
              C79308 * C79027 * C5562 +
          ((C93 * C750 + C81 * C758 + C95 * C751 + C82 * C759) * C245 +
           (C93 * C974 + C81 * C1382 + C95 * C975 + C82 * C1383) * C79307) *
              C79308 * C79027 * C5563 -
          ((C95 * C5675 + C82 * C5867 + C93 * C5676 + C81 * C5868) * C79307 +
           (C95 * C5567 + C82 * C5571 + C93 * C5568 + C81 * C5572) * C245) *
              C79308 * C79027 * C5564 +
          ((C93 * C5569 + C81 * C5573 + C95 * C5570 + C82 * C5574) * C245 +
           (C93 * C5677 + C81 * C5869 + C95 * C5678 + C82 * C5870) * C79307) *
              C79308 * C79027 * C5565) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C245 +
            (C93 * C246 + C81 * C515 + C95 * C247 + C82 * C516) * C79307) *
               C79308 * C79301 -
           ((C95 * C1905 + C82 * C2313 + C93 * C1906 + C81 * C2314) * C79307 +
            (C95 * C1681 + C82 * C1689 + C93 * C1682 + C81 * C1690) * C245) *
               C79308 * C79287 +
           ((C93 * C1683 + C81 * C1691 + C95 * C1684 + C82 * C1692) * C245 +
            (C93 * C1907 + C81 * C2315 + C95 * C1908 + C82 * C2316) * C79307) *
               C79308 * C79262) *
              C4921 +
          (((C93 * C3931 + C81 * C3935 + C95 * C3932 + C82 * C3936) * C245 +
            (C93 * C4165 + C81 * C4613 + C95 * C4166 + C82 * C4614) * C79307) *
               C79308 * C79287 -
           ((C95 * C972 + C82 * C1380 + C93 * C973 + C81 * C1381) * C79307 +
            (C95 * C748 + C82 * C756 + C93 * C749 + C81 * C757) * C245) *
               C79308 * C79301 -
           ((C95 * C6225 + C82 * C6557 + C93 * C6226 + C81 * C6558) * C79307 +
            (C95 * C6041 + C82 * C6047 + C93 * C6042 + C81 * C6048) * C245) *
               C79308 * C79262) *
              C4922 +
          (((C93 * C750 + C81 * C758 + C95 * C751 + C82 * C759) * C245 +
            (C93 * C974 + C81 * C1382 + C95 * C975 + C82 * C1383) * C79307) *
               C79308 * C79301 -
           ((C95 * C6227 + C82 * C6559 + C93 * C6228 + C81 * C6560) * C79307 +
            (C95 * C6043 + C82 * C6049 + C93 * C6044 + C81 * C6050) * C245) *
               C79308 * C79287 +
           ((C93 * C6045 + C81 * C6051 + C95 * C6046 + C82 * C6052) * C245 +
            (C93 * C6229 + C81 * C6561 + C95 * C6230 + C82 * C6562) * C79307) *
               C79308 * C79262) *
              C79259) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eezy[22] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C166 * C96 + C79308 * C167) * C245 +
             (C166 * C246 + C79308 * C563) * C79307) *
                C81 +
            (C570 + C586) * C82) *
               C79027 * C79300 -
           ((C1487 + C1473) * C82 + ((C166 * C973 + C79308 * C1463) * C79307 +
                                     (C166 * C749 + C79308 * C859) * C245) *
                                        C81) *
               C79027 * C79285 +
           (((C166 * C750 + C79308 * C860) * C245 +
             (C166 * C974 + C79308 * C1464) * C79307) *
                C81 +
            (C1474 + C1488) * C82) *
               C79027 * C79259) *
              C745 +
          (((C1473 + C1487) * C81 + (C1477 + C1489) * C82) * C79027 * C79285 -
           ((C587 + C575) * C82 + (C586 + C570) * C81) * C79027 * C79300 -
           ((C1490 + C1482) * C82 + (C1488 + C1474) * C81) * C79027 * C79259) *
              C746 +
          (((C575 + C587) * C81 + (C576 + C588) * C82) * C79027 * C79300 -
           (((C166 * C978 + C79308 * C1468) * C79307 +
             (C166 * C754 + C79308 * C864) * C245) *
                C82 +
            (C1489 + C1477) * C81) *
               C79027 * C79285 +
           ((C1482 + C1490) * C81 + ((C166 * C755 + C79308 * C865) * C245 +
                                     (C166 * C979 + C79308 * C1469) * C79307) *
                                        C82) *
               C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C166 * C96 + C79308 * C167) * C245 +
            (C166 * C246 + C79308 * C563) * C79307) *
               C81 +
           (C570 + C586) * C82) *
              C79027 * C79009 * C87 -
          ((C587 + C575) * C82 + (C586 + C570) * C81) * C79027 * C79009 * C88 +
          ((C575 + C587) * C81 + (C576 + C588) * C82) * C79027 * C79009 * C89 -
          ((C589 + C581) * C82 + (C588 + C576) * C81) * C79027 * C79009 * C90 +
          ((C581 + C589) * C81 + ((C166 * C101 + C79308 * C172) * C245 +
                                  (C166 * C251 + C79308 * C568) * C79307) *
                                     C82) *
              C79027 * C79009 * C91)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C166 * C96 + C79308 * C167) * C245 +
             (C166 * C246 + C79308 * C563) * C79307) *
                C81 +
            (C570 + C586) * C82) *
               C79301 -
           ((C2420 + C2406) * C82 + ((C166 * C1906 + C79308 * C2396) * C79307 +
                                     (C166 * C1682 + C79308 * C1792) * C245) *
                                        C81) *
               C79287 +
           (((C166 * C1683 + C79308 * C1793) * C245 +
             (C166 * C1907 + C79308 * C2397) * C79307) *
                C81 +
            (C2407 + C2421) * C82) *
               C79262) *
              C79009 * C745 +
          (((C2406 + C2420) * C81 + (C2410 + C2422) * C82) * C79287 -
           ((C587 + C575) * C82 + (C586 + C570) * C81) * C79301 -
           ((C2423 + C2415) * C82 + (C2421 + C2407) * C81) * C79262) *
              C79009 * C746 +
          (((C575 + C587) * C81 + (C576 + C588) * C82) * C79301 -
           (((C166 * C1911 + C79308 * C2401) * C79307 +
             (C166 * C1687 + C79308 * C1797) * C245) *
                C82 +
            (C2422 + C2410) * C81) *
               C79287 +
           ((C2415 + C2423) * C81 + ((C166 * C1688 + C79308 * C1798) * C245 +
                                     (C166 * C1912 + C79308 * C2402) * C79307) *
                                        C82) *
               C79262) *
              C79009 * C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C166 * C96 + C79308 * C167) * C245 +
             (C166 * C246 + C79308 * C563) * C79307) *
                C81 +
            (C570 + C586) * C82) *
               C79027 * C4921 -
           ((C1487 + C1473) * C82 + ((C166 * C973 + C79308 * C1463) * C79307 +
                                     (C166 * C749 + C79308 * C859) * C245) *
                                        C81) *
               C79027 * C4922 +
           (((C166 * C750 + C79308 * C860) * C245 +
             (C166 * C974 + C79308 * C1464) * C79307) *
                C81 +
            (C1474 + C1488) * C82) *
               C79027 * C79259) *
              C79297 +
          (((C1473 + C1487) * C81 + (C1477 + C1489) * C82) * C79027 * C4922 -
           ((C587 + C575) * C82 + (C586 + C570) * C81) * C79027 * C4921 -
           ((C1490 + C1482) * C82 + (C1488 + C1474) * C81) * C79027 * C79259) *
              C79281 +
          (((C575 + C587) * C81 + (C576 + C588) * C82) * C79027 * C4921 -
           ((C3113 + C3111) * C82 + (C1489 + C1477) * C81) * C79027 * C4922 +
           ((C1482 + C1490) * C81 + ((C166 * C755 + C79308 * C865) * C245 +
                                     (C166 * C979 + C79308 * C1469) * C79307) *
                                        C82) *
               C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C166 * C96 + C79308 * C167) * C245 +
            (C166 * C246 + C79308 * C563) * C79307) *
               C81 +
           (C570 + C586) * C82) *
              C79027 * C5561 -
          ((C1487 + C1473) * C82 + ((C166 * C973 + C79308 * C1463) * C79307 +
                                    (C166 * C749 + C79308 * C859) * C245) *
                                       C81) *
              C79027 * C5562 +
          (((C166 * C750 + C79308 * C860) * C245 +
            (C166 * C974 + C79308 * C1464) * C79307) *
               C81 +
           (C1474 + C1488) * C82) *
              C79027 * C5563 -
          (((C166 * C5675 + C79308 * C5913) * C79307 +
            (C166 * C5567 + C79308 * C5625) * C245) *
               C82 +
           ((C166 * C5676 + C79308 * C5914) * C79307 +
            (C166 * C5568 + C79308 * C5626) * C245) *
               C81) *
              C79027 * C5564 +
          (((C166 * C5569 + C79308 * C5627) * C245 +
            (C166 * C5677 + C79308 * C5915) * C79307) *
               C81 +
           ((C166 * C5570 + C79308 * C5628) * C245 +
            (C166 * C5678 + C79308 * C5916) * C79307) *
               C82) *
              C79027 * C5565) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C166 * C96 + C79308 * C167) * C245 +
             (C166 * C246 + C79308 * C563) * C79307) *
                C81 +
            (C570 + C586) * C82) *
               C79301 -
           ((C2420 + C2406) * C82 + ((C166 * C1906 + C79308 * C2396) * C79307 +
                                     (C166 * C1682 + C79308 * C1792) * C245) *
                                        C81) *
               C79287 +
           (((C166 * C1683 + C79308 * C1793) * C245 +
             (C166 * C1907 + C79308 * C2397) * C79307) *
                C81 +
            (C2407 + C2421) * C82) *
               C79262) *
              C4921 +
          ((((C166 * C3931 + C79308 * C4047) * C245 +
             (C166 * C4165 + C79308 * C4715) * C79307) *
                C81 +
            (C4720 + C4728) * C82) *
               C79287 -
           ((C1487 + C1473) * C82 + ((C166 * C973 + C79308 * C1463) * C79307 +
                                     (C166 * C749 + C79308 * C859) * C245) *
                                        C81) *
               C79301 -
           (((C166 * C6225 + C79308 * C6637) * C79307 +
             (C166 * C6041 + C79308 * C6139) * C245) *
                C82 +
            ((C166 * C6226 + C79308 * C6638) * C79307 +
             (C166 * C6042 + C79308 * C6140) * C245) *
                C81) *
               C79262) *
              C4922 +
          ((((C166 * C750 + C79308 * C860) * C245 +
             (C166 * C974 + C79308 * C1464) * C79307) *
                C81 +
            (C1474 + C1488) * C82) *
               C79301 -
           (((C166 * C6227 + C79308 * C6639) * C79307 +
             (C166 * C6043 + C79308 * C6141) * C245) *
                C82 +
            ((C166 * C6228 + C79308 * C6640) * C79307 +
             (C166 * C6044 + C79308 * C6142) * C245) *
                C81) *
               C79287 +
           (((C166 * C6045 + C79308 * C6143) * C245 +
             (C166 * C6229 + C79308 * C6641) * C79307) *
                C81 +
            ((C166 * C6046 + C79308 * C6144) * C245 +
             (C166 * C6230 + C79308 * C6642) * C79307) *
                C82) *
               C79262) *
              C79259) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eezz[22] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C631 * C96 + C639 + C639 + C79307 * C632) * C79308 * C81 +
            C665 * C82) *
               C79027 * C79300 -
           (C1601 * C82 +
            (C631 * C749 + C1576 + C1576 + C79307 * C1565) * C79308 * C81) *
               C79027 * C79285 +
           ((C631 * C750 + C1577 + C1577 + C79307 * C1566) * C79308 * C81 +
            C1602 * C82) *
               C79027 * C79259) *
              C745 +
          ((C1601 * C81 + C1603 * C82) * C79027 * C79285 -
           (C666 * C82 + C665 * C81) * C79027 * C79300 -
           (C1604 * C82 + C1602 * C81) * C79027 * C79259) *
              C746 +
          ((C666 * C81 + C667 * C82) * C79027 * C79300 -
           ((C631 * C754 + C1587 + C1587 + C79307 * C1570) * C79308 * C82 +
            C1603 * C81) *
               C79027 * C79285 +
           (C1604 * C81 +
            (C631 * C755 + C1588 + C1588 + C79307 * C1571) * C79308 * C82) *
               C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C631 * C96 + C639 + C639 + C79307 * C632) * C79308 * C81 +
           C665 * C82) *
              C79027 * C79009 * C87 -
          (C666 * C82 + C665 * C81) * C79027 * C79009 * C88 +
          (C666 * C81 + C667 * C82) * C79027 * C79009 * C89 -
          (C668 * C82 + C667 * C81) * C79027 * C79009 * C90 +
          (C668 * C81 +
           (C631 * C101 + C652 + C652 + C79307 * C637) * C79308 * C82) *
              C79027 * C79009 * C91)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C631 * C96 + C639 + C639 + C79307 * C632) * C79308 * C81 +
            C665 * C82) *
               C79301 -
           (C2534 * C82 +
            (C631 * C1682 + C2509 + C2509 + C79307 * C2498) * C79308 * C81) *
               C79287 +
           ((C631 * C1683 + C2510 + C2510 + C79307 * C2499) * C79308 * C81 +
            C2535 * C82) *
               C79262) *
              C79009 * C745 +
          ((C2534 * C81 + C2536 * C82) * C79287 -
           (C666 * C82 + C665 * C81) * C79301 -
           (C2537 * C82 + C2535 * C81) * C79262) *
              C79009 * C746 +
          ((C666 * C81 + C667 * C82) * C79301 -
           ((C631 * C1687 + C2520 + C2520 + C79307 * C2503) * C79308 * C82 +
            C2536 * C81) *
               C79287 +
           (C2537 * C81 +
            (C631 * C1688 + C2521 + C2521 + C79307 * C2504) * C79308 * C82) *
               C79262) *
              C79009 * C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C631 * C96 + C639 + C639 + C79307 * C632) * C79308 * C81 +
            C665 * C82) *
               C79027 * C4921 -
           (C1601 * C82 +
            (C631 * C749 + C1576 + C1576 + C79307 * C1565) * C79308 * C81) *
               C79027 * C4922 +
           ((C631 * C750 + C1577 + C1577 + C79307 * C1566) * C79308 * C81 +
            C1602 * C82) *
               C79027 * C79259) *
              C79297 +
          ((C1601 * C81 + C1603 * C82) * C79027 * C4922 -
           (C666 * C82 + C665 * C81) * C79027 * C4921 -
           (C1604 * C82 + C1602 * C81) * C79027 * C79259) *
              C79281 +
          ((C666 * C81 + C667 * C82) * C79027 * C4921 -
           (C3187 * C82 + C1603 * C81) * C79027 * C4922 +
           (C1604 * C81 +
            (C631 * C755 + C1588 + C1588 + C79307 * C1571) * C79308 * C82) *
               C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C631 * C96 + C639 + C639 + C79307 * C632) * C79308 * C81 +
           C665 * C82) *
              C79027 * C5561 -
          (C1601 * C82 +
           (C631 * C749 + C1576 + C1576 + C79307 * C1565) * C79308 * C81) *
              C79027 * C5562 +
          ((C631 * C750 + C1577 + C1577 + C79307 * C1566) * C79308 * C81 +
           C1602 * C82) *
              C79027 * C5563 -
          ((C631 * C5567 + C5964 + C5964 + C79307 * C5959) * C79308 * C82 +
           (C631 * C5568 + C5965 + C5965 + C79307 * C5960) * C79308 * C81) *
              C79027 * C5564 +
          ((C631 * C5569 + C5966 + C5966 + C79307 * C5961) * C79308 * C81 +
           (C631 * C5570 + C5967 + C5967 + C79307 * C5962) * C79308 * C82) *
              C79027 * C5565) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C631 * C96 + C639 + C639 + C79307 * C632) * C79308 * C81 +
            C665 * C82) *
               C79301 -
           (C2534 * C82 +
            (C631 * C1682 + C2509 + C2509 + C79307 * C2498) * C79308 * C81) *
               C79287 +
           ((C631 * C1683 + C2510 + C2510 + C79307 * C2499) * C79308 * C81 +
            C2535 * C82) *
               C79262) *
              C4921 +
          (((C631 * C3931 + C4832 + C4832 + C79307 * C4827) * C79308 * C81 +
            C4846 * C82) *
               C79287 -
           (C1601 * C82 +
            (C631 * C749 + C1576 + C1576 + C79307 * C1565) * C79308 * C81) *
               C79301 -
           ((C631 * C6041 + C6724 + C6724 + C79307 * C6717) * C79308 * C82 +
            (C631 * C6042 + C6725 + C6725 + C79307 * C6718) * C79308 * C81) *
               C79262) *
              C4922 +
          (((C631 * C750 + C1577 + C1577 + C79307 * C1566) * C79308 * C81 +
            C1602 * C82) *
               C79301 -
           ((C631 * C6043 + C6726 + C6726 + C79307 * C6719) * C79308 * C82 +
            (C631 * C6044 + C6727 + C6727 + C79307 * C6720) * C79308 * C81) *
               C79287 +
           ((C631 * C6045 + C6728 + C6728 + C79307 * C6721) * C79308 * C81 +
            (C631 * C6046 + C6729 + C6729 + C79307 * C6722) * C79308 * C82) *
               C79262) *
              C79259) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eexx[23] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((C92 * C96 + C115 + C115 + C81 * C108 + C94 * C97 + C116 +
                      C116 + C82 * C109) *
                         C79307 * C79308 * C79230 -
                     (C94 * C1681 + C1706 + C1706 + C82 * C1697 + C92 * C1682 +
                      C1707 + C1707 + C81 * C1698) *
                         C79307 * C79308 * C79114) *
                        C79009 * C2605 +
                    ((C92 * C1681 + C1710 + C1710 + C81 * C1697 + C94 * C1685 +
                      C1711 + C1711 + C82 * C1701) *
                         C79307 * C79308 * C79114 -
                     (C94 * C98 + C117 + C117 + C82 * C110 + C92 * C97 + C118 +
                      C118 + C81 * C109) *
                         C79307 * C79308 * C79230) *
                        C79009 * C2606 +
                    ((C92 * C98 + C119 + C119 + C81 * C110 + C94 * C99 + C120 +
                      C120 + C82 * C111) *
                         C79307 * C79308 * C79230 -
                     (C94 * C1687 + C1714 + C1714 + C82 * C1703 + C92 * C1685 +
                      C1715 + C1715 + C81 * C1701) *
                         C79307 * C79308 * C79114) *
                        C79009 * C2607 +
                    ((C92 * C1687 + C3259 + C3259 + C81 * C1703 + C94 * C3255 +
                      C3260 + C3260 + C82 * C3257) *
                         C79307 * C79308 * C79114 -
                     (C94 * C100 + C121 + C121 + C82 * C112 + C92 * C99 + C122 +
                      C122 + C81 * C111) *
                         C79307 * C79308 * C79230) *
                        C79009 * C79263)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C92 * C96 + C115 + C115 + C81 * C108 + C94 * C97 + C116 +
                       C116 + C82 * C109) *
                          C79307 * C79308 * C79230 -
                      (C94 * C1681 + C1706 + C1706 + C82 * C1697 + C92 * C1682 +
                       C1707 + C1707 + C81 * C1698) *
                          C79307 * C79308 * C79114) *
                         C4921 +
                     ((C92 * C3931 + C3944 + C3944 + C81 * C3939 + C94 * C3932 +
                       C3945 + C3945 + C82 * C3940) *
                          C79307 * C79308 * C79114 -
                      (C94 * C748 + C773 + C773 + C82 * C764 + C92 * C749 +
                       C774 + C774 + C81 * C765) *
                          C79307 * C79308 * C79230) *
                         C4922 +
                     ((C92 * C750 + C775 + C775 + C81 * C766 + C94 * C751 +
                       C776 + C776 + C82 * C767) *
                          C79307 * C79308 * C79230 -
                      (C94 * C6043 + C6062 + C6062 + C82 * C6055 + C92 * C6044 +
                       C6063 + C6063 + C81 * C6056) *
                          C79307 * C79308 * C79114) *
                         C79259) *
                        C79215 +
                    (((C92 * C1681 + C1710 + C1710 + C81 * C1697 + C94 * C1685 +
                       C1711 + C1711 + C82 * C1701) *
                          C79307 * C79308 * C79114 -
                      (C94 * C98 + C117 + C117 + C82 * C110 + C92 * C97 + C118 +
                       C118 + C81 * C109) *
                          C79307 * C79308 * C79230) *
                         C4921 +
                     ((C92 * C748 + C777 + C777 + C81 * C764 + C94 * C752 +
                       C778 + C778 + C82 * C768) *
                          C79307 * C79308 * C79230 -
                      (C94 * C3933 + C3946 + C3946 + C82 * C3941 + C92 * C3932 +
                       C3947 + C3947 + C81 * C3940) *
                          C79307 * C79308 * C79114) *
                         C4922 +
                     ((C92 * C6043 + C7481 + C7481 + C81 * C6055 + C94 * C7477 +
                       C7482 + C7482 + C82 * C7479) *
                          C79307 * C79308 * C79114 -
                      (C94 * C753 + C779 + C779 + C82 * C769 + C92 * C751 +
                       C780 + C780 + C81 * C767) *
                          C79307 * C79308 * C79230) *
                         C79259) *
                        C78992)) /
                      (p * q * std::sqrt(p + q));
    d2eexy[23] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C166 * C96 + C79308 * C167) * C93 +
            (C166 * C102 + C79308 * C173) * C81 + C196 * C95 + C197 * C82) *
               C79307 * C79230 -
           (C1824 * C82 + C1825 * C95 + (C166 * C1690 + C79308 * C1800) * C81 +
            (C166 * C1682 + C79308 * C1792) * C93) *
               C79307 * C79114) *
              C79009 * C2605 +
          ((C1825 * C93 + C1824 * C81 + C1828 * C95 + C1829 * C82) * C79307 *
               C79114 -
           (C198 * C82 + C199 * C95 + C197 * C81 + C196 * C93) * C79307 *
               C79230) *
              C79009 * C2606 +
          ((C199 * C93 + C198 * C81 + C200 * C95 + C201 * C82) * C79307 *
               C79230 -
           (C3333 * C82 + C3334 * C95 + C1829 * C81 + C1828 * C93) * C79307 *
               C79114) *
              C79009 * C2607 +
          ((C3334 * C93 + C3333 * C81 + (C166 * C3255 + C79308 * C3326) * C95 +
            (C166 * C3256 + C79308 * C3327) * C82) *
               C79307 * C79114 -
           (C202 * C82 + C203 * C95 + C201 * C81 + C200 * C93) * C79307 *
               C79230) *
              C79009 * C79263)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C166 * C96 + C79308 * C167) * C93 +
             (C166 * C102 + C79308 * C173) * C81 + C196 * C95 + C197 * C82) *
                C79307 * C79230 -
            (C1824 * C82 + C1825 * C95 + (C166 * C1690 + C79308 * C1800) * C81 +
             (C166 * C1682 + C79308 * C1792) * C93) *
                C79307 * C79114) *
               C4921 +
           (((C166 * C3931 + C79308 * C4047) * C93 +
             (C166 * C3935 + C79308 * C4051) * C81 + C4064 * C95 +
             C4065 * C82) *
                C79307 * C79114 -
            (C891 * C82 + C892 * C95 + (C166 * C757 + C79308 * C867) * C81 +
             (C166 * C749 + C79308 * C859) * C93) *
                C79307 * C79230) *
               C4922 +
           (((C166 * C750 + C79308 * C860) * C93 +
             (C166 * C758 + C79308 * C868) * C81 + C893 * C95 + C894 * C82) *
                C79307 * C79230 -
            (C7587 * C82 + C7588 * C95 + (C166 * C6050 + C79308 * C6148) * C81 +
             (C166 * C6044 + C79308 * C6142) * C93) *
                C79307 * C79114) *
               C79259) *
              C79215 +
          (((C1825 * C93 + C1824 * C81 + C1828 * C95 + C1829 * C82) * C79307 *
                C79114 -
            (C198 * C82 + C199 * C95 + C197 * C81 + C196 * C93) * C79307 *
                C79230) *
               C4921 +
           ((C892 * C93 + C891 * C81 + C895 * C95 + C896 * C82) * C79307 *
                C79230 -
            (C4066 * C82 + C4067 * C95 + C4065 * C81 + C4064 * C93) * C79307 *
                C79114) *
               C4922 +
           ((C7588 * C93 + C7587 * C81 + (C166 * C7477 + C79308 * C7580) * C95 +
             (C166 * C7478 + C79308 * C7581) * C82) *
                C79307 * C79114 -
            (C897 * C82 + C898 * C95 + C894 * C81 + C893 * C93) * C79307 *
                C79230) *
               C79259) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eexz[23] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C245 * C96 + C79307 * C246) * C93 +
            (C245 * C102 + C79307 * C252) * C81 + C275 * C95 + C276 * C82) *
               C79308 * C79230 -
           (C1938 * C82 + C1939 * C95 + (C245 * C1690 + C79307 * C1914) * C81 +
            (C245 * C1682 + C79307 * C1906) * C93) *
               C79308 * C79114) *
              C79009 * C2605 +
          ((C1939 * C93 + C1938 * C81 + C1942 * C95 + C1943 * C82) * C79308 *
               C79114 -
           (C277 * C82 + C278 * C95 + C276 * C81 + C275 * C93) * C79308 *
               C79230) *
              C79009 * C2606 +
          ((C278 * C93 + C277 * C81 + C279 * C95 + C280 * C82) * C79308 *
               C79230 -
           (C3407 * C82 + C3408 * C95 + C1943 * C81 + C1942 * C93) * C79308 *
               C79114) *
              C79009 * C2607 +
          ((C3408 * C93 + C3407 * C81 + (C245 * C3255 + C79307 * C3400) * C95 +
            (C245 * C3256 + C79307 * C3401) * C82) *
               C79308 * C79114 -
           (C281 * C82 + C282 * C95 + C280 * C81 + C279 * C93) * C79308 *
               C79230) *
              C79009 * C79263)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C245 * C96 + C79307 * C246) * C93 +
             (C245 * C102 + C79307 * C252) * C81 + C275 * C95 + C276 * C82) *
                C79308 * C79230 -
            (C1938 * C82 + C1939 * C95 + (C245 * C1690 + C79307 * C1914) * C81 +
             (C245 * C1682 + C79307 * C1906) * C93) *
                C79308 * C79114) *
               C4921 +
           (((C245 * C3931 + C79307 * C4165) * C93 +
             (C245 * C3935 + C79307 * C4169) * C81 + C4182 * C95 +
             C4183 * C82) *
                C79308 * C79114 -
            (C1005 * C82 + C1006 * C95 + (C245 * C757 + C79307 * C981) * C81 +
             (C245 * C749 + C79307 * C973) * C93) *
                C79308 * C79230) *
               C4922 +
           (((C245 * C750 + C79307 * C974) * C93 +
             (C245 * C758 + C79307 * C982) * C81 + C1007 * C95 + C1008 * C82) *
                C79308 * C79230 -
            (C7693 * C82 + C7694 * C95 + (C245 * C6050 + C79307 * C6234) * C81 +
             (C245 * C6044 + C79307 * C6228) * C93) *
                C79308 * C79114) *
               C79259) *
              C79215 +
          (((C1939 * C93 + C1938 * C81 + C1942 * C95 + C1943 * C82) * C79308 *
                C79114 -
            (C277 * C82 + C278 * C95 + C276 * C81 + C275 * C93) * C79308 *
                C79230) *
               C4921 +
           ((C1006 * C93 + C1005 * C81 + C1009 * C95 + C1010 * C82) * C79308 *
                C79230 -
            (C4184 * C82 + C4185 * C95 + C4183 * C81 + C4182 * C93) * C79308 *
                C79114) *
               C4922 +
           ((C7694 * C93 + C7693 * C81 + (C245 * C7477 + C79307 * C7686) * C95 +
             (C245 * C7478 + C79307 * C7687) * C82) *
                C79308 * C79114 -
            (C1011 * C82 + C1012 * C95 + C1008 * C81 + C1007 * C93) * C79308 *
                C79230) *
               C79259) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eeyx[23] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C166 +
            (C93 * C167 + C81 * C324 + C95 * C168 + C82 * C325) * C79308) *
               C79307 * C79230 -
           ((C95 * C1791 + C82 * C2019 + C93 * C1792 + C81 * C2020) * C79308 +
            (C95 * C1681 + C82 * C1689 + C93 * C1682 + C81 * C1690) * C166) *
               C79307 * C79114) *
              C79009 * C2605 +
          (((C93 * C1681 + C81 * C1689 + C95 * C1685 + C82 * C1693) * C166 +
            (C93 * C1791 + C81 * C2019 + C95 * C1795 + C82 * C2023) * C79308) *
               C79307 * C79114 -
           ((C95 * C169 + C82 * C326 + C93 * C168 + C81 * C325) * C79308 +
            (C95 * C98 + C82 * C104 + C93 * C97 + C81 * C103) * C166) *
               C79307 * C79230) *
              C79009 * C2606 +
          (((C93 * C98 + C81 * C104 + C95 * C99 + C82 * C105) * C166 +
            (C93 * C169 + C81 * C326 + C95 * C170 + C82 * C327) * C79308) *
               C79307 * C79230 -
           ((C95 * C1797 + C82 * C2025 + C93 * C1795 + C81 * C2023) * C79308 +
            (C95 * C1687 + C82 * C1695 + C93 * C1685 + C81 * C1693) * C166) *
               C79307 * C79114) *
              C79009 * C2607 +
          (((C93 * C1687 + C81 * C1695 + C95 * C3255 + C82 * C3256) * C166 +
            (C93 * C1797 + C81 * C2025 + C95 * C3326 + C82 * C3474) * C79308) *
               C79307 * C79114 -
           ((C95 * C171 + C82 * C328 + C93 * C170 + C81 * C327) * C79308 +
            (C95 * C100 + C82 * C106 + C93 * C99 + C81 * C105) * C166) *
               C79307 * C79230) *
              C79009 * C79263)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C166 +
             (C93 * C167 + C81 * C324 + C95 * C168 + C82 * C325) * C79308) *
                C79307 * C79230 -
            ((C95 * C1791 + C82 * C2019 + C93 * C1792 + C81 * C2020) * C79308 +
             (C95 * C1681 + C82 * C1689 + C93 * C1682 + C81 * C1690) * C166) *
                C79307 * C79114) *
               C4921 +
           (((C93 * C3931 + C81 * C3935 + C95 * C3932 + C82 * C3936) * C166 +
             (C93 * C4047 + C81 * C4283 + C95 * C4048 + C82 * C4284) * C79308) *
                C79307 * C79114 -
            ((C95 * C858 + C82 * C1086 + C93 * C859 + C81 * C1087) * C79308 +
             (C95 * C748 + C82 * C756 + C93 * C749 + C81 * C757) * C166) *
                C79307 * C79230) *
               C4922 +
           (((C93 * C750 + C81 * C758 + C95 * C751 + C82 * C759) * C166 +
             (C93 * C860 + C81 * C1088 + C95 * C861 + C82 * C1089) * C79308) *
                C79307 * C79230 -
            ((C95 * C6141 + C82 * C6313 + C93 * C6142 + C81 * C6314) * C79308 +
             (C95 * C6043 + C82 * C6049 + C93 * C6044 + C81 * C6050) * C166) *
                C79307 * C79114) *
               C79259) *
              C79215 +
          ((((C93 * C1681 + C81 * C1689 + C95 * C1685 + C82 * C1693) * C166 +
             (C93 * C1791 + C81 * C2019 + C95 * C1795 + C82 * C2023) * C79308) *
                C79307 * C79114 -
            ((C95 * C169 + C82 * C326 + C93 * C168 + C81 * C325) * C79308 +
             (C95 * C98 + C82 * C104 + C93 * C97 + C81 * C103) * C166) *
                C79307 * C79230) *
               C4921 +
           (((C93 * C748 + C81 * C756 + C95 * C752 + C82 * C760) * C166 +
             (C93 * C858 + C81 * C1086 + C95 * C862 + C82 * C1090) * C79308) *
                C79307 * C79230 -
            ((C95 * C4049 + C82 * C4285 + C93 * C4048 + C81 * C4284) * C79308 +
             (C95 * C3933 + C82 * C3937 + C93 * C3932 + C81 * C3936) * C166) *
                C79307 * C79114) *
               C4922 +
           (((C93 * C6043 + C81 * C6049 + C95 * C7477 + C82 * C7478) * C166 +
             (C93 * C6141 + C81 * C6313 + C95 * C7580 + C82 * C7792) * C79308) *
                C79307 * C79114 -
            ((C95 * C863 + C82 * C1091 + C93 * C861 + C81 * C1089) * C79308 +
             (C95 * C753 + C82 * C761 + C93 * C751 + C81 * C759) * C166) *
                C79307 * C79230) *
               C79259) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eeyy[23] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C372 * C96 + C380 + C380 + C79308 * C373) * C81 + C402 * C82) *
               C79307 * C79230 -
           (C2134 * C82 +
            (C372 * C1682 + C2113 + C2113 + C79308 * C2102) * C81) *
               C79307 * C79114) *
              C79009 * C2605 +
          ((C2134 * C81 + C2136 * C82) * C79307 * C79114 -
           (C403 * C82 + C402 * C81) * C79307 * C79230) *
              C79009 * C2606 +
          ((C403 * C81 + C404 * C82) * C79307 * C79230 -
           (C3548 * C82 + C2136 * C81) * C79307 * C79114) *
              C79009 * C2607 +
          ((C3548 * C81 +
            (C372 * C3255 + C3545 + C3545 + C79308 * C3541) * C82) *
               C79307 * C79114 -
           (C405 * C82 + C404 * C81) * C79307 * C79230) *
              C79009 * C79263)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C372 * C96 + C380 + C380 + C79308 * C373) * C81 + C402 * C82) *
                C79307 * C79230 -
            (C2134 * C82 +
             (C372 * C1682 + C2113 + C2113 + C79308 * C2102) * C81) *
                C79307 * C79114) *
               C4921 +
           (((C372 * C3931 + C4390 + C4390 + C79308 * C4385) * C81 +
             C4402 * C82) *
                C79307 * C79114 -
            (C1201 * C82 +
             (C372 * C749 + C1180 + C1180 + C79308 * C1169) * C81) *
                C79307 * C79230) *
               C4922 +
           (((C372 * C750 + C1181 + C1181 + C79308 * C1170) * C81 +
             C1202 * C82) *
                C79307 * C79230 -
            (C7898 * C82 +
             (C372 * C6044 + C6401 + C6401 + C79308 * C6394) * C81) *
                C79307 * C79114) *
               C79259) *
              C79215 +
          (((C2134 * C81 + C2136 * C82) * C79307 * C79114 -
            (C403 * C82 + C402 * C81) * C79307 * C79230) *
               C4921 +
           ((C1201 * C81 + C1203 * C82) * C79307 * C79230 -
            (C4403 * C82 + C4402 * C81) * C79307 * C79114) *
               C4922 +
           ((C7898 * C81 +
             (C372 * C7477 + C7895 + C7895 + C79308 * C7891) * C82) *
                C79307 * C79114 -
            (C1204 * C82 + C1202 * C81) * C79307 * C79230) *
               C79259) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[23] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C245 * C96 + C79307 * C246) * C166 +
             (C245 * C167 + C79307 * C447) * C79308) *
                C81 +
            (C454 + C470) * C82) *
               C79230 -
           ((C2236 + C2222) * C82 + ((C245 * C1792 + C79307 * C2212) * C79308 +
                                     (C245 * C1682 + C79307 * C1906) * C166) *
                                        C81) *
               C79114) *
              C79009 * C2605 +
          (((C2222 + C2236) * C81 + (C2226 + C2238) * C82) * C79114 -
           ((C471 + C459) * C82 + (C470 + C454) * C81) * C79230) *
              C79009 * C2606 +
          (((C459 + C471) * C81 + (C460 + C472) * C82) * C79230 -
           ((C3620 + C3618) * C82 + (C2238 + C2226) * C81) * C79114) *
              C79009 * C2607 +
          (((C3618 + C3620) * C81 + ((C245 * C3255 + C79307 * C3400) * C166 +
                                     (C245 * C3326 + C79307 * C3614) * C79308) *
                                        C82) *
               C79114 -
           ((C473 + C465) * C82 + (C472 + C460) * C81) * C79230) *
              C79009 * C79263)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C245 * C96 + C79307 * C246) * C166 +
              (C245 * C167 + C79307 * C447) * C79308) *
                 C81 +
             (C454 + C470) * C82) *
                C79230 -
            ((C2236 + C2222) * C82 + ((C245 * C1792 + C79307 * C2212) * C79308 +
                                      (C245 * C1682 + C79307 * C1906) * C166) *
                                         C81) *
                C79114) *
               C4921 +
           ((((C245 * C3931 + C79307 * C4165) * C166 +
              (C245 * C4047 + C79307 * C4501) * C79308) *
                 C81 +
             (C4506 + C4514) * C82) *
                C79114 -
            ((C1303 + C1289) * C82 + ((C245 * C859 + C79307 * C1279) * C79308 +
                                      (C245 * C749 + C79307 * C973) * C166) *
                                         C81) *
                C79230) *
               C4922 +
           ((((C245 * C750 + C79307 * C974) * C166 +
              (C245 * C860 + C79307 * C1280) * C79308) *
                 C81 +
             (C1290 + C1304) * C82) *
                C79230 -
            ((C8002 + C8000) * C82 + ((C245 * C6142 + C79307 * C6480) * C79308 +
                                      (C245 * C6044 + C79307 * C6228) * C166) *
                                         C81) *
                C79114) *
               C79259) *
              C79215 +
          ((((C2222 + C2236) * C81 + (C2226 + C2238) * C82) * C79114 -
            ((C471 + C459) * C82 + (C470 + C454) * C81) * C79230) *
               C4921 +
           (((C1289 + C1303) * C81 + (C1293 + C1305) * C82) * C79230 -
            ((C4515 + C4511) * C82 + (C4514 + C4506) * C81) * C79114) *
               C4922 +
           (((C8000 + C8002) * C81 +
             ((C245 * C7477 + C79307 * C7686) * C166 +
              (C245 * C7580 + C79307 * C7996) * C79308) *
                 C82) *
                C79114 -
            ((C1306 + C1298) * C82 + (C1304 + C1290) * C81) * C79230) *
               C79259) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eezx[23] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C245 +
            (C93 * C246 + C81 * C515 + C95 * C247 + C82 * C516) * C79307) *
               C79308 * C79230 -
           ((C95 * C1905 + C82 * C2313 + C93 * C1906 + C81 * C2314) * C79307 +
            (C95 * C1681 + C82 * C1689 + C93 * C1682 + C81 * C1690) * C245) *
               C79308 * C79114) *
              C79009 * C2605 +
          (((C93 * C1681 + C81 * C1689 + C95 * C1685 + C82 * C1693) * C245 +
            (C93 * C1905 + C81 * C2313 + C95 * C1909 + C82 * C2317) * C79307) *
               C79308 * C79114 -
           ((C95 * C248 + C82 * C517 + C93 * C247 + C81 * C516) * C79307 +
            (C95 * C98 + C82 * C104 + C93 * C97 + C81 * C103) * C245) *
               C79308 * C79230) *
              C79009 * C2606 +
          (((C93 * C98 + C81 * C104 + C95 * C99 + C82 * C105) * C245 +
            (C93 * C248 + C81 * C517 + C95 * C249 + C82 * C518) * C79307) *
               C79308 * C79230 -
           ((C95 * C1911 + C82 * C2319 + C93 * C1909 + C81 * C2317) * C79307 +
            (C95 * C1687 + C82 * C1695 + C93 * C1685 + C81 * C1693) * C245) *
               C79308 * C79114) *
              C79009 * C2607 +
          (((C93 * C1687 + C81 * C1695 + C95 * C3255 + C82 * C3256) * C245 +
            (C93 * C1911 + C81 * C2319 + C95 * C3400 + C82 * C3686) * C79307) *
               C79308 * C79114 -
           ((C95 * C250 + C82 * C519 + C93 * C249 + C81 * C518) * C79307 +
            (C95 * C100 + C82 * C106 + C93 * C99 + C81 * C105) * C245) *
               C79308 * C79230) *
              C79009 * C79263)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C245 +
             (C93 * C246 + C81 * C515 + C95 * C247 + C82 * C516) * C79307) *
                C79308 * C79230 -
            ((C95 * C1905 + C82 * C2313 + C93 * C1906 + C81 * C2314) * C79307 +
             (C95 * C1681 + C82 * C1689 + C93 * C1682 + C81 * C1690) * C245) *
                C79308 * C79114) *
               C4921 +
           (((C93 * C3931 + C81 * C3935 + C95 * C3932 + C82 * C3936) * C245 +
             (C93 * C4165 + C81 * C4613 + C95 * C4166 + C82 * C4614) * C79307) *
                C79308 * C79114 -
            ((C95 * C972 + C82 * C1380 + C93 * C973 + C81 * C1381) * C79307 +
             (C95 * C748 + C82 * C756 + C93 * C749 + C81 * C757) * C245) *
                C79308 * C79230) *
               C4922 +
           (((C93 * C750 + C81 * C758 + C95 * C751 + C82 * C759) * C245 +
             (C93 * C974 + C81 * C1382 + C95 * C975 + C82 * C1383) * C79307) *
                C79308 * C79230 -
            ((C95 * C6227 + C82 * C6559 + C93 * C6228 + C81 * C6560) * C79307 +
             (C95 * C6043 + C82 * C6049 + C93 * C6044 + C81 * C6050) * C245) *
                C79308 * C79114) *
               C79259) *
              C79215 +
          ((((C93 * C1681 + C81 * C1689 + C95 * C1685 + C82 * C1693) * C245 +
             (C93 * C1905 + C81 * C2313 + C95 * C1909 + C82 * C2317) * C79307) *
                C79308 * C79114 -
            ((C95 * C248 + C82 * C517 + C93 * C247 + C81 * C516) * C79307 +
             (C95 * C98 + C82 * C104 + C93 * C97 + C81 * C103) * C245) *
                C79308 * C79230) *
               C4921 +
           (((C93 * C748 + C81 * C756 + C95 * C752 + C82 * C760) * C245 +
             (C93 * C972 + C81 * C1380 + C95 * C976 + C82 * C1384) * C79307) *
                C79308 * C79230 -
            ((C95 * C4167 + C82 * C4615 + C93 * C4166 + C81 * C4614) * C79307 +
             (C95 * C3933 + C82 * C3937 + C93 * C3932 + C81 * C3936) * C245) *
                C79308 * C79114) *
               C4922 +
           (((C93 * C6043 + C81 * C6049 + C95 * C7477 + C82 * C7478) * C245 +
             (C93 * C6227 + C81 * C6559 + C95 * C7686 + C82 * C8100) * C79307) *
                C79308 * C79114 -
            ((C95 * C977 + C82 * C1385 + C93 * C975 + C81 * C1383) * C79307 +
             (C95 * C753 + C82 * C761 + C93 * C751 + C81 * C759) * C245) *
                C79308 * C79230) *
               C79259) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eezy[23] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C166 * C96 + C79308 * C167) * C245 +
             (C166 * C246 + C79308 * C563) * C79307) *
                C81 +
            (C570 + C586) * C82) *
               C79230 -
           ((C2420 + C2406) * C82 + ((C166 * C1906 + C79308 * C2396) * C79307 +
                                     (C166 * C1682 + C79308 * C1792) * C245) *
                                        C81) *
               C79114) *
              C79009 * C2605 +
          (((C2406 + C2420) * C81 + (C2410 + C2422) * C82) * C79114 -
           ((C587 + C575) * C82 + (C586 + C570) * C81) * C79230) *
              C79009 * C2606 +
          (((C575 + C587) * C81 + (C576 + C588) * C82) * C79230 -
           ((C3759 + C3757) * C82 + (C2422 + C2410) * C81) * C79114) *
              C79009 * C2607 +
          (((C3757 + C3759) * C81 + ((C166 * C3255 + C79308 * C3326) * C245 +
                                     (C166 * C3400 + C79308 * C3753) * C79307) *
                                        C82) *
               C79114 -
           ((C589 + C581) * C82 + (C588 + C576) * C81) * C79230) *
              C79009 * C79263)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C166 * C96 + C79308 * C167) * C245 +
              (C166 * C246 + C79308 * C563) * C79307) *
                 C81 +
             (C570 + C586) * C82) *
                C79230 -
            ((C2420 + C2406) * C82 + ((C166 * C1906 + C79308 * C2396) * C79307 +
                                      (C166 * C1682 + C79308 * C1792) * C245) *
                                         C81) *
                C79114) *
               C4921 +
           ((((C166 * C3931 + C79308 * C4047) * C245 +
              (C166 * C4165 + C79308 * C4715) * C79307) *
                 C81 +
             (C4720 + C4728) * C82) *
                C79114 -
            ((C1487 + C1473) * C82 + ((C166 * C973 + C79308 * C1463) * C79307 +
                                      (C166 * C749 + C79308 * C859) * C245) *
                                         C81) *
                C79230) *
               C4922 +
           ((((C166 * C750 + C79308 * C860) * C245 +
              (C166 * C974 + C79308 * C1464) * C79307) *
                 C81 +
             (C1474 + C1488) * C82) *
                C79230 -
            ((C8205 + C8203) * C82 + ((C166 * C6228 + C79308 * C6640) * C79307 +
                                      (C166 * C6044 + C79308 * C6142) * C245) *
                                         C81) *
                C79114) *
               C79259) *
              C79215 +
          ((((C2406 + C2420) * C81 + (C2410 + C2422) * C82) * C79114 -
            ((C587 + C575) * C82 + (C586 + C570) * C81) * C79230) *
               C4921 +
           (((C1473 + C1487) * C81 + (C1477 + C1489) * C82) * C79230 -
            ((C4729 + C4725) * C82 + (C4728 + C4720) * C81) * C79114) *
               C4922 +
           (((C8203 + C8205) * C81 +
             ((C166 * C7477 + C79308 * C7580) * C245 +
              (C166 * C7686 + C79308 * C8199) * C79307) *
                 C82) *
                C79114 -
            ((C1490 + C1482) * C82 + (C1488 + C1474) * C81) * C79230) *
               C79259) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eezz[23] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C631 * C96 + C639 + C639 + C79307 * C632) * C79308 * C81 +
            C665 * C82) *
               C79230 -
           (C2534 * C82 +
            (C631 * C1682 + C2509 + C2509 + C79307 * C2498) * C79308 * C81) *
               C79114) *
              C79009 * C2605 +
          ((C2534 * C81 + C2536 * C82) * C79114 -
           (C666 * C82 + C665 * C81) * C79230) *
              C79009 * C2606 +
          ((C666 * C81 + C667 * C82) * C79230 -
           (C3833 * C82 + C2536 * C81) * C79114) *
              C79009 * C2607 +
          ((C3833 * C81 +
            (C631 * C3255 + C3829 + C3829 + C79307 * C3825) * C79308 * C82) *
               C79114 -
           (C668 * C82 + C667 * C81) * C79230) *
              C79009 * C79263)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C631 * C96 + C639 + C639 + C79307 * C632) * C79308 * C81 +
             C665 * C82) *
                C79230 -
            (C2534 * C82 +
             (C631 * C1682 + C2509 + C2509 + C79307 * C2498) * C79308 * C81) *
                C79114) *
               C4921 +
           (((C631 * C3931 + C4832 + C4832 + C79307 * C4827) * C79308 * C81 +
             C4846 * C82) *
                C79114 -
            (C1601 * C82 +
             (C631 * C749 + C1576 + C1576 + C79307 * C1565) * C79308 * C81) *
                C79230) *
               C4922 +
           (((C631 * C750 + C1577 + C1577 + C79307 * C1566) * C79308 * C81 +
             C1602 * C82) *
                C79230 -
            (C8311 * C82 +
             (C631 * C6044 + C6727 + C6727 + C79307 * C6720) * C79308 * C81) *
                C79114) *
               C79259) *
              C79215 +
          (((C2534 * C81 + C2536 * C82) * C79114 -
            (C666 * C82 + C665 * C81) * C79230) *
               C4921 +
           ((C1601 * C81 + C1603 * C82) * C79230 -
            (C4847 * C82 + C4846 * C81) * C79114) *
               C4922 +
           ((C8311 * C81 +
             (C631 * C7477 + C8307 + C8307 + C79307 * C8303) * C79308 * C82) *
                C79114 -
            (C1604 * C82 + C1602 * C81) * C79230) *
               C79259) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eexx[24] += (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                   ((C92 * C96 + C115 + C115 + C81 * C108 + C94 * C97 + C116 +
                     C116 + C82 * C109) *
                        C79307 * C79308 * C79027 * C79009 * C87 -
                    (C94 * C98 + C117 + C117 + C82 * C110 + C92 * C97 + C118 +
                     C118 + C81 * C109) *
                        C79307 * C79308 * C79027 * C79009 * C88 +
                    (C92 * C98 + C119 + C119 + C81 * C110 + C94 * C99 + C120 +
                     C120 + C82 * C111) *
                        C79307 * C79308 * C79027 * C79009 * C89 -
                    (C94 * C100 + C121 + C121 + C82 * C112 + C92 * C99 + C122 +
                     C122 + C81 * C111) *
                        C79307 * C79308 * C79027 * C79009 * C90 +
                    (C92 * C100 + C123 + C123 + C81 * C112 + C94 * C101 + C124 +
                     C124 + C82 * C113) *
                        C79307 * C79308 * C79027 * C79009 * C91)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                   (((C92 * C96 + C115 + C115 + C81 * C108 + C94 * C97 + C116 +
                      C116 + C82 * C109) *
                         C79307 * C79308 * C79027 * C79300 -
                     (C94 * C748 + C773 + C773 + C82 * C764 + C92 * C749 +
                      C774 + C774 + C81 * C765) *
                         C79307 * C79308 * C79027 * C79285 +
                     (C92 * C750 + C775 + C775 + C81 * C766 + C94 * C751 +
                      C776 + C776 + C82 * C767) *
                         C79307 * C79308 * C79027 * C79259) *
                        C745 +
                    ((C92 * C748 + C777 + C777 + C81 * C764 + C94 * C752 +
                      C778 + C778 + C82 * C768) *
                         C79307 * C79308 * C79027 * C79285 -
                     (C94 * C98 + C117 + C117 + C82 * C110 + C92 * C97 + C118 +
                      C118 + C81 * C109) *
                         C79307 * C79308 * C79027 * C79300 -
                     (C94 * C753 + C779 + C779 + C82 * C769 + C92 * C751 +
                      C780 + C780 + C81 * C767) *
                         C79307 * C79308 * C79027 * C79259) *
                        C746 +
                    ((C92 * C98 + C119 + C119 + C81 * C110 + C94 * C99 + C120 +
                      C120 + C82 * C111) *
                         C79307 * C79308 * C79027 * C79300 -
                     (C94 * C754 + C781 + C781 + C82 * C770 + C92 * C752 +
                      C782 + C782 + C81 * C768) *
                         C79307 * C79308 * C79027 * C79285 +
                     (C92 * C753 + C783 + C783 + C81 * C769 + C94 * C755 +
                      C784 + C784 + C82 * C771) *
                         C79307 * C79308 * C79027 * C79259) *
                        C79253)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                   (((C92 * C96 + C115 + C115 + C81 * C108 + C94 * C97 + C116 +
                      C116 + C82 * C109) *
                         C79307 * C79308 * C79027 * C4921 -
                     (C94 * C748 + C773 + C773 + C82 * C764 + C92 * C749 +
                      C774 + C774 + C81 * C765) *
                         C79307 * C79308 * C79027 * C4922 +
                     (C92 * C750 + C775 + C775 + C81 * C766 + C94 * C751 +
                      C776 + C776 + C82 * C767) *
                         C79307 * C79308 * C79027 * C79259) *
                        C79297 +
                    ((C92 * C748 + C777 + C777 + C81 * C764 + C94 * C752 +
                      C778 + C778 + C82 * C768) *
                         C79307 * C79308 * C79027 * C4922 -
                     (C94 * C98 + C117 + C117 + C82 * C110 + C92 * C97 + C118 +
                      C118 + C81 * C109) *
                         C79307 * C79308 * C79027 * C4921 -
                     (C94 * C753 + C779 + C779 + C82 * C769 + C92 * C751 +
                      C780 + C780 + C81 * C767) *
                         C79307 * C79308 * C79027 * C79259) *
                        C79281 +
                    ((C92 * C98 + C119 + C119 + C81 * C110 + C94 * C99 + C120 +
                      C120 + C82 * C111) *
                         C79307 * C79308 * C79027 * C4921 -
                     (C94 * C754 + C781 + C781 + C82 * C770 + C92 * C752 +
                      C782 + C782 + C81 * C768) *
                         C79307 * C79308 * C79027 * C4922 +
                     (C92 * C753 + C783 + C783 + C81 * C769 + C94 * C755 +
                      C784 + C784 + C82 * C771) *
                         C79307 * C79308 * C79027 * C79259) *
                        C79253)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                   ((C92 * C96 + C115 + C115 + C81 * C108 + C94 * C97 + C116 +
                     C116 + C82 * C109) *
                        C79307 * C79308 * C79027 * C5561 -
                    (C94 * C748 + C773 + C773 + C82 * C764 + C92 * C749 + C774 +
                     C774 + C81 * C765) *
                        C79307 * C79308 * C79027 * C5562 +
                    (C92 * C750 + C775 + C775 + C81 * C766 + C94 * C751 + C776 +
                     C776 + C82 * C767) *
                        C79307 * C79308 * C79027 * C5563 -
                    (C94 * C5567 + C5580 + C5580 + C82 * C5575 + C92 * C5568 +
                     C5581 + C5581 + C81 * C5576) *
                        C79307 * C79308 * C79027 * C5564 +
                    (C92 * C5569 + C5582 + C5582 + C81 * C5577 + C94 * C5570 +
                     C5583 + C5583 + C82 * C5578) *
                        C79307 * C79308 * C79027 * C5565) *
                   C78981) /
                      (p * q * std::sqrt(p + q));
    d2eexy[24] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C166 * C96 + C79308 * C167) * C93 +
           (C166 * C102 + C79308 * C173) * C81 + C196 * C95 + C197 * C82) *
              C79307 * C79027 * C79009 * C87 -
          (C198 * C82 + C199 * C95 + C197 * C81 + C196 * C93) * C79307 *
              C79027 * C79009 * C88 +
          (C199 * C93 + C198 * C81 + C200 * C95 + C201 * C82) * C79307 *
              C79027 * C79009 * C89 -
          (C202 * C82 + C203 * C95 + C201 * C81 + C200 * C93) * C79307 *
              C79027 * C79009 * C90 +
          (C203 * C93 + C202 * C81 + (C166 * C101 + C79308 * C172) * C95 +
           (C166 * C107 + C79308 * C178) * C82) *
              C79307 * C79027 * C79009 * C91)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C166 * C96 + C79308 * C167) * C93 +
            (C166 * C102 + C79308 * C173) * C81 + C196 * C95 + C197 * C82) *
               C79307 * C79027 * C79300 -
           (C891 * C82 + C892 * C95 + (C166 * C757 + C79308 * C867) * C81 +
            (C166 * C749 + C79308 * C859) * C93) *
               C79307 * C79027 * C79285 +
           ((C166 * C750 + C79308 * C860) * C93 +
            (C166 * C758 + C79308 * C868) * C81 + C893 * C95 + C894 * C82) *
               C79307 * C79027 * C79259) *
              C745 +
          ((C892 * C93 + C891 * C81 + C895 * C95 + C896 * C82) * C79307 *
               C79027 * C79285 -
           (C198 * C82 + C199 * C95 + C197 * C81 + C196 * C93) * C79307 *
               C79027 * C79300 -
           (C897 * C82 + C898 * C95 + C894 * C81 + C893 * C93) * C79307 *
               C79027 * C79259) *
              C746 +
          ((C199 * C93 + C198 * C81 + C200 * C95 + C201 * C82) * C79307 *
               C79027 * C79300 -
           ((C166 * C762 + C79308 * C872) * C82 +
            (C166 * C754 + C79308 * C864) * C95 + C896 * C81 + C895 * C93) *
               C79307 * C79027 * C79285 +
           (C898 * C93 + C897 * C81 + (C166 * C755 + C79308 * C865) * C95 +
            (C166 * C763 + C79308 * C873) * C82) *
               C79307 * C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C166 * C96 + C79308 * C167) * C93 +
            (C166 * C102 + C79308 * C173) * C81 + C196 * C95 + C197 * C82) *
               C79307 * C79027 * C4921 -
           (C891 * C82 + C892 * C95 + (C166 * C757 + C79308 * C867) * C81 +
            (C166 * C749 + C79308 * C859) * C93) *
               C79307 * C79027 * C4922 +
           ((C166 * C750 + C79308 * C860) * C93 +
            (C166 * C758 + C79308 * C868) * C81 + C893 * C95 + C894 * C82) *
               C79307 * C79027 * C79259) *
              C79297 +
          ((C892 * C93 + C891 * C81 + C895 * C95 + C896 * C82) * C79307 *
               C79027 * C4922 -
           (C198 * C82 + C199 * C95 + C197 * C81 + C196 * C93) * C79307 *
               C79027 * C4921 -
           (C897 * C82 + C898 * C95 + C894 * C81 + C893 * C93) * C79307 *
               C79027 * C79259) *
              C79281 +
          ((C199 * C93 + C198 * C81 + C200 * C95 + C201 * C82) * C79307 *
               C79027 * C4921 -
           (C2687 * C82 + C2688 * C95 + C896 * C81 + C895 * C93) * C79307 *
               C79027 * C4922 +
           (C898 * C93 + C897 * C81 + (C166 * C755 + C79308 * C865) * C95 +
            (C166 * C763 + C79308 * C873) * C82) *
               C79307 * C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C166 * C96 + C79308 * C167) * C93 +
           (C166 * C102 + C79308 * C173) * C81 + C196 * C95 + C197 * C82) *
              C79307 * C79027 * C5561 -
          (C891 * C82 + C892 * C95 + (C166 * C757 + C79308 * C867) * C81 +
           (C166 * C749 + C79308 * C859) * C93) *
              C79307 * C79027 * C5562 +
          ((C166 * C750 + C79308 * C860) * C93 +
           (C166 * C758 + C79308 * C868) * C81 + C893 * C95 + C894 * C82) *
              C79307 * C79027 * C5563 -
          ((C166 * C5571 + C79308 * C5629) * C82 +
           (C166 * C5567 + C79308 * C5625) * C95 +
           (C166 * C5572 + C79308 * C5630) * C81 +
           (C166 * C5568 + C79308 * C5626) * C93) *
              C79307 * C79027 * C5564 +
          ((C166 * C5569 + C79308 * C5627) * C93 +
           (C166 * C5573 + C79308 * C5631) * C81 +
           (C166 * C5570 + C79308 * C5628) * C95 +
           (C166 * C5574 + C79308 * C5632) * C82) *
              C79307 * C79027 * C5565) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eexz[24] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C245 * C96 + C79307 * C246) * C93 +
           (C245 * C102 + C79307 * C252) * C81 + C275 * C95 + C276 * C82) *
              C79308 * C79027 * C79009 * C87 -
          (C277 * C82 + C278 * C95 + C276 * C81 + C275 * C93) * C79308 *
              C79027 * C79009 * C88 +
          (C278 * C93 + C277 * C81 + C279 * C95 + C280 * C82) * C79308 *
              C79027 * C79009 * C89 -
          (C281 * C82 + C282 * C95 + C280 * C81 + C279 * C93) * C79308 *
              C79027 * C79009 * C90 +
          (C282 * C93 + C281 * C81 + (C245 * C101 + C79307 * C251) * C95 +
           (C245 * C107 + C79307 * C257) * C82) *
              C79308 * C79027 * C79009 * C91)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C245 * C96 + C79307 * C246) * C93 +
            (C245 * C102 + C79307 * C252) * C81 + C275 * C95 + C276 * C82) *
               C79308 * C79027 * C79300 -
           (C1005 * C82 + C1006 * C95 + (C245 * C757 + C79307 * C981) * C81 +
            (C245 * C749 + C79307 * C973) * C93) *
               C79308 * C79027 * C79285 +
           ((C245 * C750 + C79307 * C974) * C93 +
            (C245 * C758 + C79307 * C982) * C81 + C1007 * C95 + C1008 * C82) *
               C79308 * C79027 * C79259) *
              C745 +
          ((C1006 * C93 + C1005 * C81 + C1009 * C95 + C1010 * C82) * C79308 *
               C79027 * C79285 -
           (C277 * C82 + C278 * C95 + C276 * C81 + C275 * C93) * C79308 *
               C79027 * C79300 -
           (C1011 * C82 + C1012 * C95 + C1008 * C81 + C1007 * C93) * C79308 *
               C79027 * C79259) *
              C746 +
          ((C278 * C93 + C277 * C81 + C279 * C95 + C280 * C82) * C79308 *
               C79027 * C79300 -
           ((C245 * C762 + C79307 * C986) * C82 +
            (C245 * C754 + C79307 * C978) * C95 + C1010 * C81 + C1009 * C93) *
               C79308 * C79027 * C79285 +
           (C1012 * C93 + C1011 * C81 + (C245 * C755 + C79307 * C979) * C95 +
            (C245 * C763 + C79307 * C987) * C82) *
               C79308 * C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C245 * C96 + C79307 * C246) * C93 +
            (C245 * C102 + C79307 * C252) * C81 + C275 * C95 + C276 * C82) *
               C79308 * C79027 * C4921 -
           (C1005 * C82 + C1006 * C95 + (C245 * C757 + C79307 * C981) * C81 +
            (C245 * C749 + C79307 * C973) * C93) *
               C79308 * C79027 * C4922 +
           ((C245 * C750 + C79307 * C974) * C93 +
            (C245 * C758 + C79307 * C982) * C81 + C1007 * C95 + C1008 * C82) *
               C79308 * C79027 * C79259) *
              C79297 +
          ((C1006 * C93 + C1005 * C81 + C1009 * C95 + C1010 * C82) * C79308 *
               C79027 * C4922 -
           (C277 * C82 + C278 * C95 + C276 * C81 + C275 * C93) * C79308 *
               C79027 * C4921 -
           (C1011 * C82 + C1012 * C95 + C1008 * C81 + C1007 * C93) * C79308 *
               C79027 * C79259) *
              C79281 +
          ((C278 * C93 + C277 * C81 + C279 * C95 + C280 * C82) * C79308 *
               C79027 * C4921 -
           (C2761 * C82 + C2762 * C95 + C1010 * C81 + C1009 * C93) * C79308 *
               C79027 * C4922 +
           (C1012 * C93 + C1011 * C81 + (C245 * C755 + C79307 * C979) * C95 +
            (C245 * C763 + C79307 * C987) * C82) *
               C79308 * C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C245 * C96 + C79307 * C246) * C93 +
           (C245 * C102 + C79307 * C252) * C81 + C275 * C95 + C276 * C82) *
              C79308 * C79027 * C5561 -
          (C1005 * C82 + C1006 * C95 + (C245 * C757 + C79307 * C981) * C81 +
           (C245 * C749 + C79307 * C973) * C93) *
              C79308 * C79027 * C5562 +
          ((C245 * C750 + C79307 * C974) * C93 +
           (C245 * C758 + C79307 * C982) * C81 + C1007 * C95 + C1008 * C82) *
              C79308 * C79027 * C5563 -
          ((C245 * C5571 + C79307 * C5679) * C82 +
           (C245 * C5567 + C79307 * C5675) * C95 +
           (C245 * C5572 + C79307 * C5680) * C81 +
           (C245 * C5568 + C79307 * C5676) * C93) *
              C79308 * C79027 * C5564 +
          ((C245 * C5569 + C79307 * C5677) * C93 +
           (C245 * C5573 + C79307 * C5681) * C81 +
           (C245 * C5570 + C79307 * C5678) * C95 +
           (C245 * C5574 + C79307 * C5682) * C82) *
              C79308 * C79027 * C5565) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eeyx[24] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C166 +
           (C93 * C167 + C81 * C324 + C95 * C168 + C82 * C325) * C79308) *
              C79307 * C79027 * C79009 * C87 -
          ((C95 * C169 + C82 * C326 + C93 * C168 + C81 * C325) * C79308 +
           (C95 * C98 + C82 * C104 + C93 * C97 + C81 * C103) * C166) *
              C79307 * C79027 * C79009 * C88 +
          ((C93 * C98 + C81 * C104 + C95 * C99 + C82 * C105) * C166 +
           (C93 * C169 + C81 * C326 + C95 * C170 + C82 * C327) * C79308) *
              C79307 * C79027 * C79009 * C89 -
          ((C95 * C171 + C82 * C328 + C93 * C170 + C81 * C327) * C79308 +
           (C95 * C100 + C82 * C106 + C93 * C99 + C81 * C105) * C166) *
              C79307 * C79027 * C79009 * C90 +
          ((C93 * C100 + C81 * C106 + C95 * C101 + C82 * C107) * C166 +
           (C93 * C171 + C81 * C328 + C95 * C172 + C82 * C329) * C79308) *
              C79307 * C79027 * C79009 * C91)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C166 +
            (C93 * C167 + C81 * C324 + C95 * C168 + C82 * C325) * C79308) *
               C79307 * C79027 * C79300 -
           ((C95 * C858 + C82 * C1086 + C93 * C859 + C81 * C1087) * C79308 +
            (C95 * C748 + C82 * C756 + C93 * C749 + C81 * C757) * C166) *
               C79307 * C79027 * C79285 +
           ((C93 * C750 + C81 * C758 + C95 * C751 + C82 * C759) * C166 +
            (C93 * C860 + C81 * C1088 + C95 * C861 + C82 * C1089) * C79308) *
               C79307 * C79027 * C79259) *
              C745 +
          (((C93 * C748 + C81 * C756 + C95 * C752 + C82 * C760) * C166 +
            (C93 * C858 + C81 * C1086 + C95 * C862 + C82 * C1090) * C79308) *
               C79307 * C79027 * C79285 -
           ((C95 * C169 + C82 * C326 + C93 * C168 + C81 * C325) * C79308 +
            (C95 * C98 + C82 * C104 + C93 * C97 + C81 * C103) * C166) *
               C79307 * C79027 * C79300 -
           ((C95 * C863 + C82 * C1091 + C93 * C861 + C81 * C1089) * C79308 +
            (C95 * C753 + C82 * C761 + C93 * C751 + C81 * C759) * C166) *
               C79307 * C79027 * C79259) *
              C746 +
          (((C93 * C98 + C81 * C104 + C95 * C99 + C82 * C105) * C166 +
            (C93 * C169 + C81 * C326 + C95 * C170 + C82 * C327) * C79308) *
               C79307 * C79027 * C79300 -
           ((C95 * C864 + C82 * C1092 + C93 * C862 + C81 * C1090) * C79308 +
            (C95 * C754 + C82 * C762 + C93 * C752 + C81 * C760) * C166) *
               C79307 * C79027 * C79285 +
           ((C93 * C753 + C81 * C761 + C95 * C755 + C82 * C763) * C166 +
            (C93 * C863 + C81 * C1091 + C95 * C865 + C82 * C1093) * C79308) *
               C79307 * C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C166 +
            (C93 * C167 + C81 * C324 + C95 * C168 + C82 * C325) * C79308) *
               C79307 * C79027 * C4921 -
           ((C95 * C858 + C82 * C1086 + C93 * C859 + C81 * C1087) * C79308 +
            (C95 * C748 + C82 * C756 + C93 * C749 + C81 * C757) * C166) *
               C79307 * C79027 * C4922 +
           ((C93 * C750 + C81 * C758 + C95 * C751 + C82 * C759) * C166 +
            (C93 * C860 + C81 * C1088 + C95 * C861 + C82 * C1089) * C79308) *
               C79307 * C79027 * C79259) *
              C79297 +
          (((C93 * C748 + C81 * C756 + C95 * C752 + C82 * C760) * C166 +
            (C93 * C858 + C81 * C1086 + C95 * C862 + C82 * C1090) * C79308) *
               C79307 * C79027 * C4922 -
           ((C95 * C169 + C82 * C326 + C93 * C168 + C81 * C325) * C79308 +
            (C95 * C98 + C82 * C104 + C93 * C97 + C81 * C103) * C166) *
               C79307 * C79027 * C4921 -
           ((C95 * C863 + C82 * C1091 + C93 * C861 + C81 * C1089) * C79308 +
            (C95 * C753 + C82 * C761 + C93 * C751 + C81 * C759) * C166) *
               C79307 * C79027 * C79259) *
              C79281 +
          (((C93 * C98 + C81 * C104 + C95 * C99 + C82 * C105) * C166 +
            (C93 * C169 + C81 * C326 + C95 * C170 + C82 * C327) * C79308) *
               C79307 * C79027 * C4921 -
           ((C95 * C864 + C82 * C1092 + C93 * C862 + C81 * C1090) * C79308 +
            (C95 * C754 + C82 * C762 + C93 * C752 + C81 * C760) * C166) *
               C79307 * C79027 * C4922 +
           ((C93 * C753 + C81 * C761 + C95 * C755 + C82 * C763) * C166 +
            (C93 * C863 + C81 * C1091 + C95 * C865 + C82 * C1093) * C79308) *
               C79307 * C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C166 +
           (C93 * C167 + C81 * C324 + C95 * C168 + C82 * C325) * C79308) *
              C79307 * C79027 * C5561 -
          ((C95 * C858 + C82 * C1086 + C93 * C859 + C81 * C1087) * C79308 +
           (C95 * C748 + C82 * C756 + C93 * C749 + C81 * C757) * C166) *
              C79307 * C79027 * C5562 +
          ((C93 * C750 + C81 * C758 + C95 * C751 + C82 * C759) * C166 +
           (C93 * C860 + C81 * C1088 + C95 * C861 + C82 * C1089) * C79308) *
              C79307 * C79027 * C5563 -
          ((C95 * C5625 + C82 * C5725 + C93 * C5626 + C81 * C5726) * C79308 +
           (C95 * C5567 + C82 * C5571 + C93 * C5568 + C81 * C5572) * C166) *
              C79307 * C79027 * C5564 +
          ((C93 * C5569 + C81 * C5573 + C95 * C5570 + C82 * C5574) * C166 +
           (C93 * C5627 + C81 * C5727 + C95 * C5628 + C82 * C5728) * C79308) *
              C79307 * C79027 * C5565) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eeyy[24] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C372 * C96 + C380 + C380 + C79308 * C373) * C81 + C402 * C82) *
              C79307 * C79027 * C79009 * C87 -
          (C403 * C82 + C402 * C81) * C79307 * C79027 * C79009 * C88 +
          (C403 * C81 + C404 * C82) * C79307 * C79027 * C79009 * C89 -
          (C405 * C82 + C404 * C81) * C79307 * C79027 * C79009 * C90 +
          (C405 * C81 + (C372 * C101 + C393 + C393 + C79308 * C378) * C82) *
              C79307 * C79027 * C79009 * C91)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C372 * C96 + C380 + C380 + C79308 * C373) * C81 + C402 * C82) *
               C79307 * C79027 * C79300 -
           (C1201 * C82 +
            (C372 * C749 + C1180 + C1180 + C79308 * C1169) * C81) *
               C79307 * C79027 * C79285 +
           ((C372 * C750 + C1181 + C1181 + C79308 * C1170) * C81 +
            C1202 * C82) *
               C79307 * C79027 * C79259) *
              C745 +
          ((C1201 * C81 + C1203 * C82) * C79307 * C79027 * C79285 -
           (C403 * C82 + C402 * C81) * C79307 * C79027 * C79300 -
           (C1204 * C82 + C1202 * C81) * C79307 * C79027 * C79259) *
              C746 +
          ((C403 * C81 + C404 * C82) * C79307 * C79027 * C79300 -
           ((C372 * C754 + C1191 + C1191 + C79308 * C1174) * C82 +
            C1203 * C81) *
               C79307 * C79027 * C79285 +
           (C1204 * C81 +
            (C372 * C755 + C1192 + C1192 + C79308 * C1175) * C82) *
               C79307 * C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C372 * C96 + C380 + C380 + C79308 * C373) * C81 + C402 * C82) *
               C79307 * C79027 * C4921 -
           (C1201 * C82 +
            (C372 * C749 + C1180 + C1180 + C79308 * C1169) * C81) *
               C79307 * C79027 * C4922 +
           ((C372 * C750 + C1181 + C1181 + C79308 * C1170) * C81 +
            C1202 * C82) *
               C79307 * C79027 * C79259) *
              C79297 +
          ((C1201 * C81 + C1203 * C82) * C79307 * C79027 * C4922 -
           (C403 * C82 + C402 * C81) * C79307 * C79027 * C4921 -
           (C1204 * C82 + C1202 * C81) * C79307 * C79027 * C79259) *
              C79281 +
          ((C403 * C81 + C404 * C82) * C79307 * C79027 * C4921 -
           (C2902 * C82 + C1203 * C81) * C79307 * C79027 * C4922 +
           (C1204 * C81 +
            (C372 * C755 + C1192 + C1192 + C79308 * C1175) * C82) *
               C79307 * C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C372 * C96 + C380 + C380 + C79308 * C373) * C81 + C402 * C82) *
              C79307 * C79027 * C5561 -
          (C1201 * C82 + (C372 * C749 + C1180 + C1180 + C79308 * C1169) * C81) *
              C79307 * C79027 * C5562 +
          ((C372 * C750 + C1181 + C1181 + C79308 * C1170) * C81 + C1202 * C82) *
              C79307 * C79027 * C5563 -
          ((C372 * C5567 + C5776 + C5776 + C79308 * C5771) * C82 +
           (C372 * C5568 + C5777 + C5777 + C79308 * C5772) * C81) *
              C79307 * C79027 * C5564 +
          ((C372 * C5569 + C5778 + C5778 + C79308 * C5773) * C81 +
           (C372 * C5570 + C5779 + C5779 + C79308 * C5774) * C82) *
              C79307 * C79027 * C5565) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eeyz[24] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C245 * C96 + C79307 * C246) * C166 +
            (C245 * C167 + C79307 * C447) * C79308) *
               C81 +
           (C454 + C470) * C82) *
              C79027 * C79009 * C87 -
          ((C471 + C459) * C82 + (C470 + C454) * C81) * C79027 * C79009 * C88 +
          ((C459 + C471) * C81 + (C460 + C472) * C82) * C79027 * C79009 * C89 -
          ((C473 + C465) * C82 + (C472 + C460) * C81) * C79027 * C79009 * C90 +
          ((C465 + C473) * C81 + ((C245 * C101 + C79307 * C251) * C166 +
                                  (C245 * C172 + C79307 * C452) * C79308) *
                                     C82) *
              C79027 * C79009 * C91)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C245 * C96 + C79307 * C246) * C166 +
             (C245 * C167 + C79307 * C447) * C79308) *
                C81 +
            (C454 + C470) * C82) *
               C79027 * C79300 -
           ((C1303 + C1289) * C82 + ((C245 * C859 + C79307 * C1279) * C79308 +
                                     (C245 * C749 + C79307 * C973) * C166) *
                                        C81) *
               C79027 * C79285 +
           (((C245 * C750 + C79307 * C974) * C166 +
             (C245 * C860 + C79307 * C1280) * C79308) *
                C81 +
            (C1290 + C1304) * C82) *
               C79027 * C79259) *
              C745 +
          (((C1289 + C1303) * C81 + (C1293 + C1305) * C82) * C79027 * C79285 -
           ((C471 + C459) * C82 + (C470 + C454) * C81) * C79027 * C79300 -
           ((C1306 + C1298) * C82 + (C1304 + C1290) * C81) * C79027 * C79259) *
              C746 +
          (((C459 + C471) * C81 + (C460 + C472) * C82) * C79027 * C79300 -
           (((C245 * C864 + C79307 * C1284) * C79308 +
             (C245 * C754 + C79307 * C978) * C166) *
                C82 +
            (C1305 + C1293) * C81) *
               C79027 * C79285 +
           ((C1298 + C1306) * C81 + ((C245 * C755 + C79307 * C979) * C166 +
                                     (C245 * C865 + C79307 * C1285) * C79308) *
                                        C82) *
               C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C245 * C96 + C79307 * C246) * C166 +
             (C245 * C167 + C79307 * C447) * C79308) *
                C81 +
            (C454 + C470) * C82) *
               C79027 * C4921 -
           ((C1303 + C1289) * C82 + ((C245 * C859 + C79307 * C1279) * C79308 +
                                     (C245 * C749 + C79307 * C973) * C166) *
                                        C81) *
               C79027 * C4922 +
           (((C245 * C750 + C79307 * C974) * C166 +
             (C245 * C860 + C79307 * C1280) * C79308) *
                C81 +
            (C1290 + C1304) * C82) *
               C79027 * C79259) *
              C79297 +
          (((C1289 + C1303) * C81 + (C1293 + C1305) * C82) * C79027 * C4922 -
           ((C471 + C459) * C82 + (C470 + C454) * C81) * C79027 * C4921 -
           ((C1306 + C1298) * C82 + (C1304 + C1290) * C81) * C79027 * C79259) *
              C79281 +
          (((C459 + C471) * C81 + (C460 + C472) * C82) * C79027 * C4921 -
           ((C2974 + C2972) * C82 + (C1305 + C1293) * C81) * C79027 * C4922 +
           ((C1298 + C1306) * C81 + ((C245 * C755 + C79307 * C979) * C166 +
                                     (C245 * C865 + C79307 * C1285) * C79308) *
                                        C82) *
               C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C245 * C96 + C79307 * C246) * C166 +
            (C245 * C167 + C79307 * C447) * C79308) *
               C81 +
           (C454 + C470) * C82) *
              C79027 * C5561 -
          ((C1303 + C1289) * C82 + ((C245 * C859 + C79307 * C1279) * C79308 +
                                    (C245 * C749 + C79307 * C973) * C166) *
                                       C81) *
              C79027 * C5562 +
          (((C245 * C750 + C79307 * C974) * C166 +
            (C245 * C860 + C79307 * C1280) * C79308) *
               C81 +
           (C1290 + C1304) * C82) *
              C79027 * C5563 -
          (((C245 * C5625 + C79307 * C5821) * C79308 +
            (C245 * C5567 + C79307 * C5675) * C166) *
               C82 +
           ((C245 * C5626 + C79307 * C5822) * C79308 +
            (C245 * C5568 + C79307 * C5676) * C166) *
               C81) *
              C79027 * C5564 +
          (((C245 * C5569 + C79307 * C5677) * C166 +
            (C245 * C5627 + C79307 * C5823) * C79308) *
               C81 +
           ((C245 * C5570 + C79307 * C5678) * C166 +
            (C245 * C5628 + C79307 * C5824) * C79308) *
               C82) *
              C79027 * C5565) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eezx[24] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C245 +
           (C93 * C246 + C81 * C515 + C95 * C247 + C82 * C516) * C79307) *
              C79308 * C79027 * C79009 * C87 -
          ((C95 * C248 + C82 * C517 + C93 * C247 + C81 * C516) * C79307 +
           (C95 * C98 + C82 * C104 + C93 * C97 + C81 * C103) * C245) *
              C79308 * C79027 * C79009 * C88 +
          ((C93 * C98 + C81 * C104 + C95 * C99 + C82 * C105) * C245 +
           (C93 * C248 + C81 * C517 + C95 * C249 + C82 * C518) * C79307) *
              C79308 * C79027 * C79009 * C89 -
          ((C95 * C250 + C82 * C519 + C93 * C249 + C81 * C518) * C79307 +
           (C95 * C100 + C82 * C106 + C93 * C99 + C81 * C105) * C245) *
              C79308 * C79027 * C79009 * C90 +
          ((C93 * C100 + C81 * C106 + C95 * C101 + C82 * C107) * C245 +
           (C93 * C250 + C81 * C519 + C95 * C251 + C82 * C520) * C79307) *
              C79308 * C79027 * C79009 * C91)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C245 +
            (C93 * C246 + C81 * C515 + C95 * C247 + C82 * C516) * C79307) *
               C79308 * C79027 * C79300 -
           ((C95 * C972 + C82 * C1380 + C93 * C973 + C81 * C1381) * C79307 +
            (C95 * C748 + C82 * C756 + C93 * C749 + C81 * C757) * C245) *
               C79308 * C79027 * C79285 +
           ((C93 * C750 + C81 * C758 + C95 * C751 + C82 * C759) * C245 +
            (C93 * C974 + C81 * C1382 + C95 * C975 + C82 * C1383) * C79307) *
               C79308 * C79027 * C79259) *
              C745 +
          (((C93 * C748 + C81 * C756 + C95 * C752 + C82 * C760) * C245 +
            (C93 * C972 + C81 * C1380 + C95 * C976 + C82 * C1384) * C79307) *
               C79308 * C79027 * C79285 -
           ((C95 * C248 + C82 * C517 + C93 * C247 + C81 * C516) * C79307 +
            (C95 * C98 + C82 * C104 + C93 * C97 + C81 * C103) * C245) *
               C79308 * C79027 * C79300 -
           ((C95 * C977 + C82 * C1385 + C93 * C975 + C81 * C1383) * C79307 +
            (C95 * C753 + C82 * C761 + C93 * C751 + C81 * C759) * C245) *
               C79308 * C79027 * C79259) *
              C746 +
          (((C93 * C98 + C81 * C104 + C95 * C99 + C82 * C105) * C245 +
            (C93 * C248 + C81 * C517 + C95 * C249 + C82 * C518) * C79307) *
               C79308 * C79027 * C79300 -
           ((C95 * C978 + C82 * C1386 + C93 * C976 + C81 * C1384) * C79307 +
            (C95 * C754 + C82 * C762 + C93 * C752 + C81 * C760) * C245) *
               C79308 * C79027 * C79285 +
           ((C93 * C753 + C81 * C761 + C95 * C755 + C82 * C763) * C245 +
            (C93 * C977 + C81 * C1385 + C95 * C979 + C82 * C1387) * C79307) *
               C79308 * C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C245 +
            (C93 * C246 + C81 * C515 + C95 * C247 + C82 * C516) * C79307) *
               C79308 * C79027 * C4921 -
           ((C95 * C972 + C82 * C1380 + C93 * C973 + C81 * C1381) * C79307 +
            (C95 * C748 + C82 * C756 + C93 * C749 + C81 * C757) * C245) *
               C79308 * C79027 * C4922 +
           ((C93 * C750 + C81 * C758 + C95 * C751 + C82 * C759) * C245 +
            (C93 * C974 + C81 * C1382 + C95 * C975 + C82 * C1383) * C79307) *
               C79308 * C79027 * C79259) *
              C79297 +
          (((C93 * C748 + C81 * C756 + C95 * C752 + C82 * C760) * C245 +
            (C93 * C972 + C81 * C1380 + C95 * C976 + C82 * C1384) * C79307) *
               C79308 * C79027 * C4922 -
           ((C95 * C248 + C82 * C517 + C93 * C247 + C81 * C516) * C79307 +
            (C95 * C98 + C82 * C104 + C93 * C97 + C81 * C103) * C245) *
               C79308 * C79027 * C4921 -
           ((C95 * C977 + C82 * C1385 + C93 * C975 + C81 * C1383) * C79307 +
            (C95 * C753 + C82 * C761 + C93 * C751 + C81 * C759) * C245) *
               C79308 * C79027 * C79259) *
              C79281 +
          (((C93 * C98 + C81 * C104 + C95 * C99 + C82 * C105) * C245 +
            (C93 * C248 + C81 * C517 + C95 * C249 + C82 * C518) * C79307) *
               C79308 * C79027 * C4921 -
           ((C95 * C978 + C82 * C1386 + C93 * C976 + C81 * C1384) * C79307 +
            (C95 * C754 + C82 * C762 + C93 * C752 + C81 * C760) * C245) *
               C79308 * C79027 * C4922 +
           ((C93 * C753 + C81 * C761 + C95 * C755 + C82 * C763) * C245 +
            (C93 * C977 + C81 * C1385 + C95 * C979 + C82 * C1387) * C79307) *
               C79308 * C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C93 * C96 + C81 * C102 + C95 * C97 + C82 * C103) * C245 +
           (C93 * C246 + C81 * C515 + C95 * C247 + C82 * C516) * C79307) *
              C79308 * C79027 * C5561 -
          ((C95 * C972 + C82 * C1380 + C93 * C973 + C81 * C1381) * C79307 +
           (C95 * C748 + C82 * C756 + C93 * C749 + C81 * C757) * C245) *
              C79308 * C79027 * C5562 +
          ((C93 * C750 + C81 * C758 + C95 * C751 + C82 * C759) * C245 +
           (C93 * C974 + C81 * C1382 + C95 * C975 + C82 * C1383) * C79307) *
              C79308 * C79027 * C5563 -
          ((C95 * C5675 + C82 * C5867 + C93 * C5676 + C81 * C5868) * C79307 +
           (C95 * C5567 + C82 * C5571 + C93 * C5568 + C81 * C5572) * C245) *
              C79308 * C79027 * C5564 +
          ((C93 * C5569 + C81 * C5573 + C95 * C5570 + C82 * C5574) * C245 +
           (C93 * C5677 + C81 * C5869 + C95 * C5678 + C82 * C5870) * C79307) *
              C79308 * C79027 * C5565) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eezy[24] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C166 * C96 + C79308 * C167) * C245 +
            (C166 * C246 + C79308 * C563) * C79307) *
               C81 +
           (C570 + C586) * C82) *
              C79027 * C79009 * C87 -
          ((C587 + C575) * C82 + (C586 + C570) * C81) * C79027 * C79009 * C88 +
          ((C575 + C587) * C81 + (C576 + C588) * C82) * C79027 * C79009 * C89 -
          ((C589 + C581) * C82 + (C588 + C576) * C81) * C79027 * C79009 * C90 +
          ((C581 + C589) * C81 + ((C166 * C101 + C79308 * C172) * C245 +
                                  (C166 * C251 + C79308 * C568) * C79307) *
                                     C82) *
              C79027 * C79009 * C91)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C166 * C96 + C79308 * C167) * C245 +
             (C166 * C246 + C79308 * C563) * C79307) *
                C81 +
            (C570 + C586) * C82) *
               C79027 * C79300 -
           ((C1487 + C1473) * C82 + ((C166 * C973 + C79308 * C1463) * C79307 +
                                     (C166 * C749 + C79308 * C859) * C245) *
                                        C81) *
               C79027 * C79285 +
           (((C166 * C750 + C79308 * C860) * C245 +
             (C166 * C974 + C79308 * C1464) * C79307) *
                C81 +
            (C1474 + C1488) * C82) *
               C79027 * C79259) *
              C745 +
          (((C1473 + C1487) * C81 + (C1477 + C1489) * C82) * C79027 * C79285 -
           ((C587 + C575) * C82 + (C586 + C570) * C81) * C79027 * C79300 -
           ((C1490 + C1482) * C82 + (C1488 + C1474) * C81) * C79027 * C79259) *
              C746 +
          (((C575 + C587) * C81 + (C576 + C588) * C82) * C79027 * C79300 -
           (((C166 * C978 + C79308 * C1468) * C79307 +
             (C166 * C754 + C79308 * C864) * C245) *
                C82 +
            (C1489 + C1477) * C81) *
               C79027 * C79285 +
           ((C1482 + C1490) * C81 + ((C166 * C755 + C79308 * C865) * C245 +
                                     (C166 * C979 + C79308 * C1469) * C79307) *
                                        C82) *
               C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C166 * C96 + C79308 * C167) * C245 +
             (C166 * C246 + C79308 * C563) * C79307) *
                C81 +
            (C570 + C586) * C82) *
               C79027 * C4921 -
           ((C1487 + C1473) * C82 + ((C166 * C973 + C79308 * C1463) * C79307 +
                                     (C166 * C749 + C79308 * C859) * C245) *
                                        C81) *
               C79027 * C4922 +
           (((C166 * C750 + C79308 * C860) * C245 +
             (C166 * C974 + C79308 * C1464) * C79307) *
                C81 +
            (C1474 + C1488) * C82) *
               C79027 * C79259) *
              C79297 +
          (((C1473 + C1487) * C81 + (C1477 + C1489) * C82) * C79027 * C4922 -
           ((C587 + C575) * C82 + (C586 + C570) * C81) * C79027 * C4921 -
           ((C1490 + C1482) * C82 + (C1488 + C1474) * C81) * C79027 * C79259) *
              C79281 +
          (((C575 + C587) * C81 + (C576 + C588) * C82) * C79027 * C4921 -
           ((C3113 + C3111) * C82 + (C1489 + C1477) * C81) * C79027 * C4922 +
           ((C1482 + C1490) * C81 + ((C166 * C755 + C79308 * C865) * C245 +
                                     (C166 * C979 + C79308 * C1469) * C79307) *
                                        C82) *
               C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C166 * C96 + C79308 * C167) * C245 +
            (C166 * C246 + C79308 * C563) * C79307) *
               C81 +
           (C570 + C586) * C82) *
              C79027 * C5561 -
          ((C1487 + C1473) * C82 + ((C166 * C973 + C79308 * C1463) * C79307 +
                                    (C166 * C749 + C79308 * C859) * C245) *
                                       C81) *
              C79027 * C5562 +
          (((C166 * C750 + C79308 * C860) * C245 +
            (C166 * C974 + C79308 * C1464) * C79307) *
               C81 +
           (C1474 + C1488) * C82) *
              C79027 * C5563 -
          (((C166 * C5675 + C79308 * C5913) * C79307 +
            (C166 * C5567 + C79308 * C5625) * C245) *
               C82 +
           ((C166 * C5676 + C79308 * C5914) * C79307 +
            (C166 * C5568 + C79308 * C5626) * C245) *
               C81) *
              C79027 * C5564 +
          (((C166 * C5569 + C79308 * C5627) * C245 +
            (C166 * C5677 + C79308 * C5915) * C79307) *
               C81 +
           ((C166 * C5570 + C79308 * C5628) * C245 +
            (C166 * C5678 + C79308 * C5916) * C79307) *
               C82) *
              C79027 * C5565) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eezz[24] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C631 * C96 + C639 + C639 + C79307 * C632) * C79308 * C81 +
           C665 * C82) *
              C79027 * C79009 * C87 -
          (C666 * C82 + C665 * C81) * C79027 * C79009 * C88 +
          (C666 * C81 + C667 * C82) * C79027 * C79009 * C89 -
          (C668 * C82 + C667 * C81) * C79027 * C79009 * C90 +
          (C668 * C81 +
           (C631 * C101 + C652 + C652 + C79307 * C637) * C79308 * C82) *
              C79027 * C79009 * C91)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C631 * C96 + C639 + C639 + C79307 * C632) * C79308 * C81 +
            C665 * C82) *
               C79027 * C79300 -
           (C1601 * C82 +
            (C631 * C749 + C1576 + C1576 + C79307 * C1565) * C79308 * C81) *
               C79027 * C79285 +
           ((C631 * C750 + C1577 + C1577 + C79307 * C1566) * C79308 * C81 +
            C1602 * C82) *
               C79027 * C79259) *
              C745 +
          ((C1601 * C81 + C1603 * C82) * C79027 * C79285 -
           (C666 * C82 + C665 * C81) * C79027 * C79300 -
           (C1604 * C82 + C1602 * C81) * C79027 * C79259) *
              C746 +
          ((C666 * C81 + C667 * C82) * C79027 * C79300 -
           ((C631 * C754 + C1587 + C1587 + C79307 * C1570) * C79308 * C82 +
            C1603 * C81) *
               C79027 * C79285 +
           (C1604 * C81 +
            (C631 * C755 + C1588 + C1588 + C79307 * C1571) * C79308 * C82) *
               C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C631 * C96 + C639 + C639 + C79307 * C632) * C79308 * C81 +
            C665 * C82) *
               C79027 * C4921 -
           (C1601 * C82 +
            (C631 * C749 + C1576 + C1576 + C79307 * C1565) * C79308 * C81) *
               C79027 * C4922 +
           ((C631 * C750 + C1577 + C1577 + C79307 * C1566) * C79308 * C81 +
            C1602 * C82) *
               C79027 * C79259) *
              C79297 +
          ((C1601 * C81 + C1603 * C82) * C79027 * C4922 -
           (C666 * C82 + C665 * C81) * C79027 * C4921 -
           (C1604 * C82 + C1602 * C81) * C79027 * C79259) *
              C79281 +
          ((C666 * C81 + C667 * C82) * C79027 * C4921 -
           (C3187 * C82 + C1603 * C81) * C79027 * C4922 +
           (C1604 * C81 +
            (C631 * C755 + C1588 + C1588 + C79307 * C1571) * C79308 * C82) *
               C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C631 * C96 + C639 + C639 + C79307 * C632) * C79308 * C81 +
           C665 * C82) *
              C79027 * C5561 -
          (C1601 * C82 +
           (C631 * C749 + C1576 + C1576 + C79307 * C1565) * C79308 * C81) *
              C79027 * C5562 +
          ((C631 * C750 + C1577 + C1577 + C79307 * C1566) * C79308 * C81 +
           C1602 * C82) *
              C79027 * C5563 -
          ((C631 * C5567 + C5964 + C5964 + C79307 * C5959) * C79308 * C82 +
           (C631 * C5568 + C5965 + C5965 + C79307 * C5960) * C79308 * C81) *
              C79027 * C5564 +
          ((C631 * C5569 + C5966 + C5966 + C79307 * C5961) * C79308 * C81 +
           (C631 * C5570 + C5967 + C5967 + C79307 * C5962) * C79308 * C82) *
              C79027 * C5565) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eexx[25] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C79307 * C26495 +
            C26970 * C26496) *
               C79027 * C79068 -
           (C26971 * C26496 + C26970 * C26495) * C79027 * C79075 +
           (C26971 * C26495 + C31275 * C26496) * C79027 * C15083) *
              C78986 +
          ((C26972 * C26495 + C26973 * C26496) * C79027 * C79075 -
           (C26972 * C26496 + (C26497 * C97 + C26503 + C26503 + C79306 * C109) *
                                  C79307 * C26495) *
               C79027 * C79068 -
           (C32542 * C26496 + C26973 * C26495) * C79027 * C15083) *
              C78995 +
          (((C26497 * C98 + C26504 + C26504 + C79306 * C110) * C79307 * C26495 +
            C26974 * C26496) *
               C79027 * C79068 -
           (C26975 * C26496 + C26974 * C26495) * C79027 * C79075 +
           (C26975 * C26495 +
            (C26497 * C6801 + C26951 + C26951 + C79306 * C6803) * C79307 *
                C26496) *
               C79027 * C15083) *
              C15086)) /
        (p * q * std::sqrt(p + q));
    d2eexy[25] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
                C26498 +
            (C26551 * C102 + C26495 * C173 + C26552 * C757 + C26496 * C867) *
                C79306) *
               C79307 * C79027 * C79068 -
           ((C26552 * C758 + C26496 * C868 + C26551 * C757 + C26495 * C867) *
                C79306 +
            (C26552 * C750 + C26496 * C860 + C26551 * C749 + C26495 * C859) *
                C26498) *
               C79307 * C79027 * C79075 +
           ((C26551 * C750 + C26495 * C860 + C26552 * C5568 + C26496 * C5626) *
                C26498 +
            (C26551 * C758 + C26495 * C868 + C26552 * C5572 + C26496 * C5630) *
                C79306) *
               C79307 * C79027 * C15083) *
              C78986 +
          (((C26551 * C748 + C26495 * C858 + C26552 * C751 + C26496 * C861) *
                C26498 +
            (C26551 * C756 + C26495 * C866 + C26552 * C759 + C26496 * C869) *
                C79306) *
               C79307 * C79027 * C79075 -
           ((C26552 * C756 + C26496 * C866 + C26551 * C103 + C26495 * C174) *
                C79306 +
            (C26552 * C748 + C26496 * C858 + C26551 * C97 + C26495 * C168) *
                C26498) *
               C79307 * C79027 * C79068 -
           ((C26552 * C5571 + C26496 * C5629 + C26551 * C759 + C26495 * C869) *
                C79306 +
            (C26552 * C5567 + C26496 * C5625 + C26551 * C751 + C26495 * C861) *
                C26498) *
               C79307 * C79027 * C15083) *
              C78995 +
          (((C26551 * C98 + C26495 * C169 + C26552 * C752 + C26496 * C862) *
                C26498 +
            (C26551 * C104 + C26495 * C175 + C26552 * C760 + C26496 * C870) *
                C79306) *
               C79307 * C79027 * C79068 -
           ((C26552 * C761 + C26496 * C871 + C26551 * C760 + C26495 * C870) *
                C79306 +
            (C26552 * C753 + C26496 * C863 + C26551 * C752 + C26495 * C862) *
                C26498) *
               C79307 * C79027 * C79075 +
           ((C26551 * C753 + C26495 * C863 + C26552 * C6801 + C26496 * C6872) *
                C26498 +
            (C26551 * C761 + C26495 * C871 + C26552 * C6802 + C26496 * C6873) *
                C79306) *
               C79307 * C79027 * C15083) *
              C15086)) /
        (p * q * std::sqrt(p + q));
    d2eexz[25] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C245 * C96 + C79307 * C246) * C26498 +
                       (C245 * C102 + C79307 * C252) * C79306) *
                          C26495 +
                      (C27144 + C27145) * C26496) *
                         C79027 * C79068 -
                     ((C27146 + C27147) * C26496 + (C27145 + C27144) * C26495) *
                         C79027 * C79075 +
                     ((C27147 + C27146) * C26495 + (C31377 + C31378) * C26496) *
                         C79027 * C15083) *
                        C78986 +
                    (((C27132 + C27133) * C26495 + (C27134 + C27135) * C26496) *
                         C79027 * C79075 -
                     ((C27133 + C27132) * C26496 +
                      (C276 * C79306 + C275 * C26498) * C26495) *
                         C79027 * C79068 -
                     ((C32675 + C32676) * C26496 + (C27135 + C27134) * C26495) *
                         C79027 * C15083) *
                        C78995 +
                    (((C278 * C26498 + C277 * C79306) * C26495 +
                      (C27136 + C27137) * C26496) *
                         C79027 * C79068 -
                     ((C27138 + C27139) * C26496 + (C27137 + C27136) * C26495) *
                         C79027 * C79075 +
                     ((C27139 + C27138) * C26495 +
                      ((C245 * C6801 + C79307 * C6946) * C26498 +
                       (C245 * C6802 + C79307 * C6947) * C79306) *
                          C26496) *
                         C79027 * C15083) *
                        C15086)) /
                  (p * q * std::sqrt(p + q));
    d2eeyx[25] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C26498 * C96 + C79306 * C102) * C26551 +
                      (C26498 * C167 + C79306 * C324) * C26495 +
                      C27246 * C26552 + C27247 * C26496) *
                         C79307 * C79027 * C79068 -
                     (C27248 * C26496 + C27249 * C26552 + C27247 * C26495 +
                      C27246 * C26551) *
                         C79307 * C79027 * C79075 +
                     (C27249 * C26551 + C27248 * C26495 + C31432 * C26552 +
                      C31433 * C26496) *
                         C79307 * C79027 * C15083) *
                        C78986 +
                    ((C27250 * C26551 + C27251 * C26495 + C27252 * C26552 +
                      C27253 * C26496) *
                         C79307 * C79027 * C79075 -
                     (C27251 * C26496 + C27250 * C26552 +
                      (C26498 * C168 + C79306 * C325) * C26495 +
                      (C26498 * C97 + C79306 * C103) * C26551) *
                         C79307 * C79027 * C79068 -
                     (C32747 * C26496 + C32748 * C26552 + C27253 * C26495 +
                      C27252 * C26551) *
                         C79307 * C79027 * C15083) *
                        C78995 +
                    (((C26498 * C98 + C79306 * C104) * C26551 +
                      (C26498 * C169 + C79306 * C326) * C26495 +
                      C27254 * C26552 + C27255 * C26496) *
                         C79307 * C79027 * C79068 -
                     (C27256 * C26496 + C27257 * C26552 + C27255 * C26495 +
                      C27254 * C26551) *
                         C79307 * C79027 * C79075 +
                     (C27257 * C26551 + C27256 * C26495 +
                      (C26498 * C6801 + C79306 * C6802) * C26552 +
                      (C26498 * C6872 + C79306 * C7020) * C26496) *
                         C79307 * C79027 * C15083) *
                        C15086)) /
                  (p * q * std::sqrt(p + q));
    d2eeyy[25] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((C26679 * C96 + C26682 + C26682 + C26495 * C373 +
                      C26680 * C749 + C26683 + C26683 + C26496 * C1169) *
                         C79306 * C79307 * C79027 * C79068 -
                     (C26680 * C750 + C27332 + C27332 + C26496 * C1170 +
                      C26679 * C749 + C27333 + C27333 + C26495 * C1169) *
                         C79306 * C79307 * C79027 * C79075 +
                     (C26679 * C750 + C27334 + C27334 + C26495 * C1170 +
                      C26680 * C5568 + C27335 + C27335 + C26496 * C5772) *
                         C79306 * C79307 * C79027 * C15083) *
                        C78986 +
                    ((C26679 * C748 + C27336 + C27336 + C26495 * C1168 +
                      C26680 * C751 + C27337 + C27337 + C26496 * C1171) *
                         C79306 * C79307 * C79027 * C79075 -
                     (C26680 * C748 + C26684 + C26684 + C26496 * C1168 +
                      C26679 * C97 + C26685 + C26685 + C26495 * C374) *
                         C79306 * C79307 * C79027 * C79068 -
                     (C26680 * C5567 + C27338 + C27338 + C26496 * C5771 +
                      C26679 * C751 + C27339 + C27339 + C26495 * C1171) *
                         C79306 * C79307 * C79027 * C15083) *
                        C78995 +
                    ((C26679 * C98 + C26686 + C26686 + C26495 * C375 +
                      C26680 * C752 + C26687 + C26687 + C26496 * C1172) *
                         C79306 * C79307 * C79027 * C79068 -
                     (C26680 * C753 + C27340 + C27340 + C26496 * C1173 +
                      C26679 * C752 + C27341 + C27341 + C26495 * C1172) *
                         C79306 * C79307 * C79027 * C79075 +
                     (C26679 * C753 + C27342 + C27342 + C26495 * C1173 +
                      C26680 * C6801 + C27343 + C27343 + C26496 * C7087) *
                         C79306 * C79307 * C79027 * C15083) *
                        C15086)) /
                  (p * q * std::sqrt(p + q));
    d2eeyz[25] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C245 * C96 + C79307 * C246) * C26551 +
            (C245 * C167 + C79307 * C447) * C26495 + C27140 * C26552 +
            C27422 * C26496) *
               C79306 * C79027 * C79068 -
           (C27423 * C26496 + C27143 * C26552 + C27422 * C26495 +
            C27140 * C26551) *
               C79306 * C79027 * C79075 +
           (C27143 * C26551 + C27423 * C26495 + C31373 * C26552 +
            C31530 * C26496) *
               C79306 * C79027 * C15083) *
              C78986 +
          ((C1006 * C26551 + C1299 * C26495 + C1007 * C26552 + C1300 * C26496) *
               C79306 * C79027 * C79075 -
           (C1299 * C26496 + C1006 * C26552 + C466 * C26495 + C275 * C26551) *
               C79306 * C79027 * C79068 -
           (C7165 * C26496 + C6954 * C26552 + C1300 * C26495 + C1007 * C26551) *
               C79306 * C79027 * C15083) *
              C78995 +
          ((C278 * C26551 + C467 * C26495 + C1009 * C26552 + C1301 * C26496) *
               C79306 * C79027 * C79068 -
           (C1302 * C26496 + C1012 * C26552 + C1301 * C26495 + C1009 * C26551) *
               C79306 * C79027 * C79075 +
           (C1012 * C26551 + C1302 * C26495 +
            (C245 * C6801 + C79307 * C6946) * C26552 +
            (C245 * C6872 + C79307 * C7160) * C26496) *
               C79306 * C79027 * C15083) *
              C15086)) /
        (p * q * std::sqrt(p + q));
    d2eezx[25] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C26498 * C96 + C79306 * C102) * C245 +
                       (C26498 * C246 + C79306 * C515) * C79307) *
                          C26495 +
                      (C27498 + C27522) * C26496) *
                         C79027 * C79068 -
                     ((C27523 + C27503) * C26496 + (C27522 + C27498) * C26495) *
                         C79027 * C79075 +
                     ((C27503 + C27523) * C26495 + (C31575 + C31583) * C26496) *
                         C79027 * C15083) *
                        C78986 +
                    (((C27504 + C27524) * C26495 + (C27507 + C27525) * C26496) *
                         C79027 * C79075 -
                     ((C27524 + C27504) * C26496 +
                      ((C26498 * C247 + C79306 * C516) * C79307 +
                       (C26498 * C97 + C79306 * C103) * C245) *
                          C26495) *
                         C79027 * C79068 -
                     ((C32953 + C32951) * C26496 + (C27525 + C27507) * C26495) *
                         C79027 * C15083) *
                        C78995 +
                    ((((C26498 * C98 + C79306 * C104) * C245 +
                       (C26498 * C248 + C79306 * C517) * C79307) *
                          C26495 +
                      (C27510 + C27526) * C26496) *
                         C79027 * C79068 -
                     ((C27527 + C27515) * C26496 + (C27526 + C27510) * C26495) *
                         C79027 * C79075 +
                     ((C27515 + C27527) * C26495 +
                      ((C26498 * C6801 + C79306 * C6802) * C245 +
                       (C26498 * C6946 + C79306 * C7232) * C79307) *
                          C26496) *
                         C79027 * C15083) *
                        C15086)) /
                  (p * q * std::sqrt(p + q));
    d2eezy[25] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
                C245 +
            (C26551 * C246 + C26495 * C563 + C26552 * C973 + C26496 * C1463) *
                C79307) *
               C79306 * C79027 * C79068 -
           ((C26552 * C974 + C26496 * C1464 + C26551 * C973 + C26495 * C1463) *
                C79307 +
            (C26552 * C750 + C26496 * C860 + C26551 * C749 + C26495 * C859) *
                C245) *
               C79306 * C79027 * C79075 +
           ((C26551 * C750 + C26495 * C860 + C26552 * C5568 + C26496 * C5626) *
                C245 +
            (C26551 * C974 + C26495 * C1464 + C26552 * C5676 + C26496 * C5914) *
                C79307) *
               C79306 * C79027 * C15083) *
              C78986 +
          (((C26551 * C748 + C26495 * C858 + C26552 * C751 + C26496 * C861) *
                C245 +
            (C26551 * C972 + C26495 * C1462 + C26552 * C975 + C26496 * C1465) *
                C79307) *
               C79306 * C79027 * C79075 -
           ((C26552 * C972 + C26496 * C1462 + C26551 * C247 + C26495 * C564) *
                C79307 +
            (C26552 * C748 + C26496 * C858 + C26551 * C97 + C26495 * C168) *
                C245) *
               C79306 * C79027 * C79068 -
           ((C26552 * C5675 + C26496 * C5913 + C26551 * C975 + C26495 * C1465) *
                C79307 +
            (C26552 * C5567 + C26496 * C5625 + C26551 * C751 + C26495 * C861) *
                C245) *
               C79306 * C79027 * C15083) *
              C78995 +
          (((C26551 * C98 + C26495 * C169 + C26552 * C752 + C26496 * C862) *
                C245 +
            (C26551 * C248 + C26495 * C565 + C26552 * C976 + C26496 * C1466) *
                C79307) *
               C79306 * C79027 * C79068 -
           ((C26552 * C977 + C26496 * C1467 + C26551 * C976 + C26495 * C1466) *
                C79307 +
            (C26552 * C753 + C26496 * C863 + C26551 * C752 + C26495 * C862) *
                C245) *
               C79306 * C79027 * C79075 +
           ((C26551 * C753 + C26495 * C863 + C26552 * C6801 + C26496 * C6872) *
                C245 +
            (C26551 * C977 + C26495 * C1467 + C26552 * C6946 + C26496 * C7299) *
                C79307) *
               C79306 * C79027 * C15083) *
              C15086)) /
        (p * q * std::sqrt(p + q));
    d2eezz[25] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C631 * C96 + C639 + C639 + C79307 * C632) * C26495 +
            C27684 * C26496) *
               C79306 * C79027 * C79068 -
           (C27685 * C26496 + C27684 * C26495) * C79306 * C79027 * C79075 +
           (C27685 * C26495 + C31680 * C26496) * C79306 * C79027 * C15083) *
              C78986 +
          ((C1597 * C26495 + C1598 * C26496) * C79306 * C79027 * C79075 -
           (C1597 * C26496 + C661 * C26495) * C79306 * C79027 * C79068 -
           (C7378 * C26496 + C1598 * C26495) * C79306 * C79027 * C15083) *
              C78995 +
          ((C662 * C26495 + C1599 * C26496) * C79306 * C79027 * C79068 -
           (C1600 * C26496 + C1599 * C26495) * C79306 * C79027 * C79075 +
           (C1600 * C26495 +
            (C631 * C6801 + C7375 + C7375 + C79307 * C7371) * C26496) *
               C79306 * C79027 * C15083) *
              C15086)) /
        (p * q * std::sqrt(p + q));
    d2eexx[26] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C26497 * C96 + C26500 + C26500 + C79306 * C108) *
                           C79307 * C26495 +
                       C26970 * C26496) *
                          C79230 -
                      (C29706 * C26496 +
                       (C26497 * C1682 + C27761 + C27761 + C79306 * C1698) *
                           C79307 * C26495) *
                          C79114) *
                         C79068 +
                     ((C29706 * C26495 + C31778 * C26496) * C79114 -
                      (C26971 * C26496 + C26970 * C26495) * C79230) *
                         C79075 +
                     ((C26971 * C26495 + C31275 * C26496) * C79230 -
                      (C34065 * C26496 + C31778 * C26495) * C79114) *
                         C15083) *
                        C13595 +
                    ((((C26497 * C1681 + C27764 + C27764 + C79306 * C1697) *
                           C79307 * C26495 +
                       C29707 * C26496) *
                          C79114 -
                      (C26972 * C26496 +
                       (C26497 * C97 + C26503 + C26503 + C79306 * C109) *
                           C79307 * C26495) *
                          C79230) *
                         C79068 +
                     ((C26972 * C26495 + C26973 * C26496) * C79230 -
                      (C33190 * C26496 + C29707 * C26495) * C79114) *
                         C79075 +
                     ((C33190 * C26495 +
                       (C26497 * C8378 + C33186 + C33186 + C79306 * C8382) *
                           C79307 * C26496) *
                          C79114 -
                      (C32542 * C26496 + C26973 * C26495) * C79230) *
                         C15083) *
                        C78992)) /
                  (p * q * std::sqrt(p + q));
    d2eexy[26] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
                 C26498 +
             (C26551 * C102 + C26495 * C173 + C26552 * C757 + C26496 * C867) *
                 C79306) *
                C79307 * C79230 -
            ((C26552 * C3935 + C26496 * C4051 + C26551 * C1690 +
              C26495 * C1800) *
                 C79306 +
             (C26552 * C3931 + C26496 * C4047 + C26551 * C1682 +
              C26495 * C1792) *
                 C26498) *
                C79307 * C79114) *
               C79068 +
           (((C26551 * C3931 + C26495 * C4047 + C26552 * C6044 +
              C26496 * C6142) *
                 C26498 +
             (C26551 * C3935 + C26495 * C4051 + C26552 * C6050 +
              C26496 * C6148) *
                 C79306) *
                C79307 * C79114 -
            ((C26552 * C758 + C26496 * C868 + C26551 * C757 + C26495 * C867) *
                 C79306 +
             (C26552 * C750 + C26496 * C860 + C26551 * C749 + C26495 * C859) *
                 C26498) *
                C79307 * C79230) *
               C79075 +
           (((C26551 * C750 + C26495 * C860 + C26552 * C5568 + C26496 * C5626) *
                 C26498 +
             (C26551 * C758 + C26495 * C868 + C26552 * C5572 + C26496 * C5630) *
                 C79306) *
                C79307 * C79230 -
            ((C26552 * C8379 + C26496 * C8453 + C26551 * C6050 +
              C26495 * C6148) *
                 C79306 +
             (C26552 * C8377 + C26496 * C8451 + C26551 * C6044 +
              C26495 * C6142) *
                 C26498) *
                C79307 * C79114) *
               C15083) *
              C13595 +
          ((((C26551 * C1681 + C26495 * C1791 + C26552 * C3932 +
              C26496 * C4048) *
                 C26498 +
             (C26551 * C1689 + C26495 * C1799 + C26552 * C3936 +
              C26496 * C4052) *
                 C79306) *
                C79307 * C79114 -
            ((C26552 * C756 + C26496 * C866 + C26551 * C103 + C26495 * C174) *
                 C79306 +
             (C26552 * C748 + C26496 * C858 + C26551 * C97 + C26495 * C168) *
                 C26498) *
                C79307 * C79230) *
               C79068 +
           (((C26551 * C748 + C26495 * C858 + C26552 * C751 + C26496 * C861) *
                 C26498 +
             (C26551 * C756 + C26495 * C866 + C26552 * C759 + C26496 * C869) *
                 C79306) *
                C79307 * C79230 -
            ((C26552 * C6049 + C26496 * C6147 + C26551 * C3936 +
              C26495 * C4052) *
                 C79306 +
             (C26552 * C6043 + C26496 * C6141 + C26551 * C3932 +
              C26495 * C4048) *
                 C26498) *
                C79307 * C79114) *
               C79075 +
           (((C26551 * C6043 + C26495 * C6141 + C26552 * C8378 +
              C26496 * C8452) *
                 C26498 +
             (C26551 * C6049 + C26495 * C6147 + C26552 * C8380 +
              C26496 * C8454) *
                 C79306) *
                C79307 * C79114 -
            ((C26552 * C5571 + C26496 * C5629 + C26551 * C759 + C26495 * C869) *
                 C79306 +
             (C26552 * C5567 + C26496 * C5625 + C26551 * C751 + C26495 * C861) *
                 C26498) *
                C79307 * C79230) *
               C15083) *
              C78992)) /
        (p * q * std::sqrt(p + q));
    d2eexz[26] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C245 * C96 + C79307 * C246) * C26498 +
              (C245 * C102 + C79307 * C252) * C79306) *
                 C26495 +
             (C27144 + C27145) * C26496) *
                C79230 -
            ((C29915 + C29916) * C26496 +
             ((C245 * C1690 + C79307 * C1914) * C79306 +
              (C245 * C1682 + C79307 * C1906) * C26498) *
                 C26495) *
                C79114) *
               C79068 +
           (((C29916 + C29915) * C26495 + (C31952 + C31953) * C26496) * C79114 -
            ((C27146 + C27147) * C26496 + (C27145 + C27144) * C26495) *
                C79230) *
               C79075 +
           (((C27147 + C27146) * C26495 + (C31377 + C31378) * C26496) * C79230 -
            ((C34208 + C34209) * C26496 + (C31953 + C31952) * C26495) *
                C79114) *
               C15083) *
              C13595 +
          ((((C1939 * C26498 + C1938 * C79306) * C26495 +
             (C29909 + C29910) * C26496) *
                C79114 -
            ((C27133 + C27132) * C26496 +
             (C276 * C79306 + C275 * C26498) * C26495) *
                C79230) *
               C79068 +
           (((C27132 + C27133) * C26495 + (C27134 + C27135) * C26496) * C79230 -
            ((C33387 + C33388) * C26496 + (C29910 + C29909) * C26495) *
                C79114) *
               C79075 +
           (((C33388 + C33387) * C26495 +
             ((C245 * C8378 + C79307 * C8522) * C26498 +
              (C245 * C8380 + C79307 * C8524) * C79306) *
                 C26496) *
                C79114 -
            ((C32675 + C32676) * C26496 + (C27135 + C27134) * C26495) *
                C79230) *
               C15083) *
              C78992)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[26] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C26498 * C96 + C79306 * C102) * C26551 +
                       (C26498 * C167 + C79306 * C324) * C26495 +
                       C27246 * C26552 + C27247 * C26496) *
                          C79307 * C79230 -
                      (C30027 * C26496 + C30028 * C26552 +
                       (C26498 * C1792 + C79306 * C2020) * C26495 +
                       (C26498 * C1682 + C79306 * C1690) * C26551) *
                          C79307 * C79114) *
                         C79068 +
                     ((C30028 * C26551 + C30027 * C26495 + C32045 * C26552 +
                       C32046 * C26496) *
                          C79307 * C79114 -
                      (C27248 * C26496 + C27249 * C26552 + C27247 * C26495 +
                       C27246 * C26551) *
                          C79307 * C79230) *
                         C79075 +
                     ((C27249 * C26551 + C27248 * C26495 + C31432 * C26552 +
                       C31433 * C26496) *
                          C79307 * C79230 -
                      (C34281 * C26496 + C34282 * C26552 + C32046 * C26495 +
                       C32045 * C26551) *
                          C79307 * C79114) *
                         C15083) *
                        C13595 +
                    ((((C26498 * C1681 + C79306 * C1689) * C26551 +
                       (C26498 * C1791 + C79306 * C2019) * C26495 +
                       C30029 * C26552 + C30030 * C26496) *
                          C79307 * C79114 -
                      (C27251 * C26496 + C27250 * C26552 +
                       (C26498 * C168 + C79306 * C325) * C26495 +
                       (C26498 * C97 + C79306 * C103) * C26551) *
                          C79307 * C79230) *
                         C79068 +
                     ((C27250 * C26551 + C27251 * C26495 + C27252 * C26552 +
                       C27253 * C26496) *
                          C79307 * C79230 -
                      (C33491 * C26496 + C33492 * C26552 + C30030 * C26495 +
                       C30029 * C26551) *
                          C79307 * C79114) *
                         C79075 +
                     ((C33492 * C26551 + C33491 * C26495 +
                       (C26498 * C8378 + C79306 * C8380) * C26552 +
                       (C26498 * C8452 + C79306 * C8592) * C26496) *
                          C79307 * C79114 -
                      (C32747 * C26496 + C32748 * C26552 + C27253 * C26495 +
                       C27252 * C26551) *
                          C79307 * C79230) *
                         C15083) *
                        C78992)) /
                  (p * q * std::sqrt(p + q));
    d2eeyy[26] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C26679 * C96 + C26682 + C26682 + C26495 * C373 +
                       C26680 * C749 + C26683 + C26683 + C26496 * C1169) *
                          C79306 * C79307 * C79230 -
                      (C26680 * C3931 + C28068 + C28068 + C26496 * C4385 +
                       C26679 * C1682 + C28069 + C28069 + C26495 * C2102) *
                          C79306 * C79307 * C79114) *
                         C79068 +
                     ((C26679 * C3931 + C30131 + C30131 + C26495 * C4385 +
                       C26680 * C6044 + C30132 + C30132 + C26496 * C6394) *
                          C79306 * C79307 * C79114 -
                      (C26680 * C750 + C27332 + C27332 + C26496 * C1170 +
                       C26679 * C749 + C27333 + C27333 + C26495 * C1169) *
                          C79306 * C79307 * C79230) *
                         C79075 +
                     ((C26679 * C750 + C27334 + C27334 + C26495 * C1170 +
                       C26680 * C5568 + C27335 + C27335 + C26496 * C5772) *
                          C79306 * C79307 * C79230 -
                      (C26680 * C8377 + C32126 + C32126 + C26496 * C8659 +
                       C26679 * C6044 + C32127 + C32127 + C26495 * C6394) *
                          C79306 * C79307 * C79114) *
                         C15083) *
                        C13595 +
                    (((C26679 * C1681 + C28072 + C28072 + C26495 * C2101 +
                       C26680 * C3932 + C28073 + C28073 + C26496 * C4386) *
                          C79306 * C79307 * C79114 -
                      (C26680 * C748 + C26684 + C26684 + C26496 * C1168 +
                       C26679 * C97 + C26685 + C26685 + C26495 * C374) *
                          C79306 * C79307 * C79230) *
                         C79068 +
                     ((C26679 * C748 + C27336 + C27336 + C26495 * C1168 +
                       C26680 * C751 + C27337 + C27337 + C26496 * C1171) *
                          C79306 * C79307 * C79230 -
                      (C26680 * C6043 + C30133 + C30133 + C26496 * C6393 +
                       C26679 * C3932 + C30134 + C30134 + C26495 * C4386) *
                          C79306 * C79307 * C79114) *
                         C79075 +
                     ((C26679 * C6043 + C33591 + C33591 + C26495 * C6393 +
                       C26680 * C8378 + C33592 + C33592 + C26496 * C8660) *
                          C79306 * C79307 * C79114 -
                      (C26680 * C5567 + C27338 + C27338 + C26496 * C5771 +
                       C26679 * C751 + C27339 + C27339 + C26495 * C1171) *
                          C79306 * C79307 * C79230) *
                         C15083) *
                        C78992)) /
                  (p * q * std::sqrt(p + q));
    d2eeyz[26] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C245 * C96 + C79307 * C246) * C26551 +
             (C245 * C167 + C79307 * C447) * C26495 + C27140 * C26552 +
             C27422 * C26496) *
                C79306 * C79230 -
            (C30237 * C26496 + C29914 * C26552 +
             (C245 * C1792 + C79307 * C2212) * C26495 +
             (C245 * C1682 + C79307 * C1906) * C26551) *
                C79306 * C79114) *
               C79068 +
           ((C29914 * C26551 + C30237 * C26495 + C31946 * C26552 +
             C32212 * C26496) *
                C79306 * C79114 -
            (C27423 * C26496 + C27143 * C26552 + C27422 * C26495 +
             C27140 * C26551) *
                C79306 * C79230) *
               C79075 +
           ((C27143 * C26551 + C27423 * C26495 + C31373 * C26552 +
             C31530 * C26496) *
                C79306 * C79230 -
            (C34421 * C26496 + C34207 * C26552 + C32212 * C26495 +
             C31946 * C26551) *
                C79306 * C79114) *
               C15083) *
              C13595 +
          (((C1939 * C26551 + C2232 * C26495 + C4182 * C26552 +
             C4512 * C26496) *
                C79306 * C79114 -
            (C1299 * C26496 + C1006 * C26552 + C466 * C26495 + C275 * C26551) *
                C79306 * C79230) *
               C79068 +
           ((C1006 * C26551 + C1299 * C26495 + C1007 * C26552 +
             C1300 * C26496) *
                C79306 * C79230 -
            (C8001 * C26496 + C7694 * C26552 + C4512 * C26495 +
             C4182 * C26551) *
                C79306 * C79114) *
               C79075 +
           ((C7694 * C26551 + C8001 * C26495 +
             (C245 * C8378 + C79307 * C8522) * C26552 +
             (C245 * C8452 + C79307 * C8730) * C26496) *
                C79306 * C79114 -
            (C7165 * C26496 + C6954 * C26552 + C1300 * C26495 +
             C1007 * C26551) *
                C79306 * C79230) *
               C15083) *
              C78992)) /
        (p * q * std::sqrt(p + q));
    d2eezx[26] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C26498 * C96 + C79306 * C102) * C245 +
              (C26498 * C246 + C79306 * C515) * C79307) *
                 C26495 +
             (C27498 + C27522) * C26496) *
                C79230 -
            ((C30348 + C30338) * C26496 +
             ((C26498 * C1906 + C79306 * C2314) * C79307 +
              (C26498 * C1682 + C79306 * C1690) * C245) *
                 C26495) *
                C79114) *
               C79068 +
           (((C30338 + C30348) * C26495 + (C32292 + C32302) * C26496) * C79114 -
            ((C27523 + C27503) * C26496 + (C27522 + C27498) * C26495) *
                C79230) *
               C79075 +
           (((C27503 + C27523) * C26495 + (C31575 + C31583) * C26496) * C79230 -
            ((C34493 + C34491) * C26496 + (C32302 + C32292) * C26495) *
                C79114) *
               C15083) *
              C13595 +
          (((((C26498 * C1681 + C79306 * C1689) * C245 +
              (C26498 * C1905 + C79306 * C2313) * C79307) *
                 C26495 +
             (C30339 + C30349) * C26496) *
                C79114 -
            ((C27524 + C27504) * C26496 +
             ((C26498 * C247 + C79306 * C516) * C79307 +
              (C26498 * C97 + C79306 * C103) * C245) *
                 C26495) *
                C79230) *
               C79068 +
           (((C27504 + C27524) * C26495 + (C27507 + C27525) * C26496) * C79230 -
            ((C33793 + C33791) * C26496 + (C30349 + C30339) * C26495) *
                C79114) *
               C79075 +
           (((C33791 + C33793) * C26495 +
             ((C26498 * C8378 + C79306 * C8380) * C245 +
              (C26498 * C8522 + C79306 * C8798) * C79307) *
                 C26496) *
                C79114 -
            ((C32953 + C32951) * C26496 + (C27525 + C27507) * C26495) *
                C79230) *
               C15083) *
              C78992)) /
        (p * q * std::sqrt(p + q));
    d2eezy[26] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
                 C245 +
             (C26551 * C246 + C26495 * C563 + C26552 * C973 + C26496 * C1463) *
                 C79307) *
                C79306 * C79230 -
            ((C26552 * C4165 + C26496 * C4715 + C26551 * C1906 +
              C26495 * C2396) *
                 C79307 +
             (C26552 * C3931 + C26496 * C4047 + C26551 * C1682 +
              C26495 * C1792) *
                 C245) *
                C79306 * C79114) *
               C79068 +
           (((C26551 * C3931 + C26495 * C4047 + C26552 * C6044 +
              C26496 * C6142) *
                 C245 +
             (C26551 * C4165 + C26495 * C4715 + C26552 * C6228 +
              C26496 * C6640) *
                 C79307) *
                C79306 * C79114 -
            ((C26552 * C974 + C26496 * C1464 + C26551 * C973 + C26495 * C1463) *
                 C79307 +
             (C26552 * C750 + C26496 * C860 + C26551 * C749 + C26495 * C859) *
                 C245) *
                C79306 * C79230) *
               C79075 +
           (((C26551 * C750 + C26495 * C860 + C26552 * C5568 + C26496 * C5626) *
                 C245 +
             (C26551 * C974 + C26495 * C1464 + C26552 * C5676 +
              C26496 * C5914) *
                 C79307) *
                C79306 * C79230 -
            ((C26552 * C8521 + C26496 * C8865 + C26551 * C6228 +
              C26495 * C6640) *
                 C79307 +
             (C26552 * C8377 + C26496 * C8451 + C26551 * C6044 +
              C26495 * C6142) *
                 C245) *
                C79306 * C79114) *
               C15083) *
              C13595 +
          ((((C26551 * C1681 + C26495 * C1791 + C26552 * C3932 +
              C26496 * C4048) *
                 C245 +
             (C26551 * C1905 + C26495 * C2395 + C26552 * C4166 +
              C26496 * C4716) *
                 C79307) *
                C79306 * C79114 -
            ((C26552 * C972 + C26496 * C1462 + C26551 * C247 + C26495 * C564) *
                 C79307 +
             (C26552 * C748 + C26496 * C858 + C26551 * C97 + C26495 * C168) *
                 C245) *
                C79306 * C79230) *
               C79068 +
           (((C26551 * C748 + C26495 * C858 + C26552 * C751 + C26496 * C861) *
                 C245 +
             (C26551 * C972 + C26495 * C1462 + C26552 * C975 + C26496 * C1465) *
                 C79307) *
                C79306 * C79230 -
            ((C26552 * C6227 + C26496 * C6639 + C26551 * C4166 +
              C26495 * C4716) *
                 C79307 +
             (C26552 * C6043 + C26496 * C6141 + C26551 * C3932 +
              C26495 * C4048) *
                 C245) *
                C79306 * C79114) *
               C79075 +
           (((C26551 * C6043 + C26495 * C6141 + C26552 * C8378 +
              C26496 * C8452) *
                 C245 +
             (C26551 * C6227 + C26495 * C6639 + C26552 * C8522 +
              C26496 * C8866) *
                 C79307) *
                C79306 * C79114 -
            ((C26552 * C5675 + C26496 * C5913 + C26551 * C975 +
              C26495 * C1465) *
                 C79307 +
             (C26552 * C5567 + C26496 * C5625 + C26551 * C751 + C26495 * C861) *
                 C245) *
                C79306 * C79230) *
               C15083) *
              C78992)) /
        (p * q * std::sqrt(p + q));
    d2eezz[26] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C631 * C96 + C639 + C639 + C79307 * C632) * C26495 +
             C27684 * C26496) *
                C79306 * C79230 -
            (C30551 * C26496 +
             (C631 * C1682 + C2509 + C2509 + C79307 * C2498) * C26495) *
                C79306 * C79114) *
               C79068 +
           ((C30551 * C26495 + C32468 * C26496) * C79306 * C79114 -
            (C27685 * C26496 + C27684 * C26495) * C79306 * C79230) *
               C79075 +
           ((C27685 * C26495 + C31680 * C26496) * C79306 * C79230 -
            (C34633 * C26496 + C32468 * C26495) * C79306 * C79114) *
               C15083) *
              C13595 +
          (((C2530 * C26495 + C4844 * C26496) * C79306 * C79114 -
            (C1597 * C26496 + C661 * C26495) * C79306 * C79230) *
               C79068 +
           ((C1597 * C26495 + C1598 * C26496) * C79306 * C79230 -
            (C8310 * C26496 + C4844 * C26495) * C79306 * C79114) *
               C79075 +
           ((C8310 * C26495 +
             (C631 * C8378 + C8937 + C8937 + C79307 * C8934) * C26496) *
                C79306 * C79114 -
            (C7378 * C26496 + C1598 * C26495) * C79306 * C79230) *
               C15083) *
              C78992)) /
        (p * q * std::sqrt(p + q));
    d2eexx[27] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C79307 * C26495 +
            C26970 * C26496) *
               C79027 * C79310 -
           (C26971 * C26496 + C26970 * C26495) * C79027 * C79303 +
           (C26971 * C26495 + C31275 * C26496) * C79027 * C79290 -
           (C31276 * C26496 + C31275 * C26495) * C79027 * C79269) *
              C13595 +
          ((C26972 * C26495 + C26973 * C26496) * C79027 * C79303 -
           (C26972 * C26496 + (C26497 * C97 + C26503 + C26503 + C79306 * C109) *
                                  C79307 * C26495) *
               C79027 * C79310 -
           (C32542 * C26496 + C26973 * C26495) * C79027 * C79290 +
           (C32542 * C26495 +
            (C26497 * C5570 + C32538 + C32538 + C79306 * C5578) * C79307 *
                C26496) *
               C79027 * C79269) *
              C78992)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C79307 * C26495 +
            C26970 * C26496) *
               C79027 * C12991 -
           (C26971 * C26496 + C26970 * C26495) * C79027 * C79072) *
              C79309 +
          ((C26972 * C26495 + C26973 * C26496) * C79027 * C79072 -
           (C26972 * C26496 + (C26497 * C97 + C26503 + C26503 + C79306 * C109) *
                                  C79307 * C26495) *
               C79027 * C12991) *
              C79299 +
          (((C26497 * C98 + C26504 + C26504 + C79306 * C110) * C79307 * C26495 +
            C26974 * C26496) *
               C79027 * C12991 -
           (C26975 * C26496 + C26974 * C26495) * C79027 * C79072) *
              C79283 +
          ((C28448 * C26495 +
            (C26497 * C755 + C28444 + C28444 + C79306 * C771) * C79307 *
                C26496) *
               C79027 * C79072 -
           (C28448 * C26496 + (C26497 * C99 + C26507 + C26507 + C79306 * C111) *
                                  C79307 * C26495) *
               C79027 * C12991) *
              C79263)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C79307 *
                 C26495 +
             C26970 * C26496) *
                C79301 -
            (C29706 * C26496 +
             (C26497 * C1682 + C27761 + C27761 + C79306 * C1698) * C79307 *
                 C26495) *
                C79287 +
            ((C26497 * C1683 + C27762 + C27762 + C79306 * C1699) * C79307 *
                 C26495 +
             C31777 * C26496) *
                C79262) *
               C12991 +
           ((C29706 * C26495 + C31778 * C26496) * C79287 -
            (C26971 * C26496 + C26970 * C26495) * C79301 -
            (C31779 * C26496 + C31777 * C26495) * C79262) *
               C79072) *
              C13595 +
          ((((C26497 * C1681 + C27764 + C27764 + C79306 * C1697) * C79307 *
                 C26495 +
             C29707 * C26496) *
                C79287 -
            (C26972 * C26496 +
             (C26497 * C97 + C26503 + C26503 + C79306 * C109) * C79307 *
                 C26495) *
                C79301 -
            (C36470 * C26496 +
             (C26497 * C1684 + C27767 + C27767 + C79306 * C1700) * C79307 *
                 C26495) *
                C79262) *
               C12991 +
           ((C26972 * C26495 + C26973 * C26496) * C79301 -
            (C33190 * C26496 + C29707 * C26495) * C79287 +
            (C36470 * C26495 +
             (C26497 * C6046 + C36466 + C36466 + C79306 * C6058) * C79307 *
                 C26496) *
                C79262) *
               C79072) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eexy[27] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
                C26498 +
            (C26551 * C102 + C26495 * C173 + C26552 * C757 + C26496 * C867) *
                C79306) *
               C79307 * C79027 * C79310 -
           ((C26552 * C758 + C26496 * C868 + C26551 * C757 + C26495 * C867) *
                C79306 +
            (C26552 * C750 + C26496 * C860 + C26551 * C749 + C26495 * C859) *
                C26498) *
               C79307 * C79027 * C79303 +
           ((C26551 * C750 + C26495 * C860 + C26552 * C5568 + C26496 * C5626) *
                C26498 +
            (C26551 * C758 + C26495 * C868 + C26552 * C5572 + C26496 * C5630) *
                C79306) *
               C79307 * C79027 * C79290 -
           ((C26552 * C5573 + C26496 * C5631 + C26551 * C5572 +
             C26495 * C5630) *
                C79306 +
            (C26552 * C5569 + C26496 * C5627 + C26551 * C5568 +
             C26495 * C5626) *
                C26498) *
               C79307 * C79027 * C79269) *
              C13595 +
          (((C26551 * C748 + C26495 * C858 + C26552 * C751 + C26496 * C861) *
                C26498 +
            (C26551 * C756 + C26495 * C866 + C26552 * C759 + C26496 * C869) *
                C79306) *
               C79307 * C79027 * C79303 -
           ((C26552 * C756 + C26496 * C866 + C26551 * C103 + C26495 * C174) *
                C79306 +
            (C26552 * C748 + C26496 * C858 + C26551 * C97 + C26495 * C168) *
                C26498) *
               C79307 * C79027 * C79310 -
           ((C26552 * C5571 + C26496 * C5629 + C26551 * C759 + C26495 * C869) *
                C79306 +
            (C26552 * C5567 + C26496 * C5625 + C26551 * C751 + C26495 * C861) *
                C26498) *
               C79307 * C79027 * C79290 +
           ((C26551 * C5567 + C26495 * C5625 + C26552 * C5570 +
             C26496 * C5628) *
                C26498 +
            (C26551 * C5571 + C26495 * C5629 + C26552 * C5574 +
             C26496 * C5632) *
                C79306) *
               C79307 * C79027 * C79269) *
              C78992)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
                C26498 +
            (C26551 * C102 + C26495 * C173 + C26552 * C757 + C26496 * C867) *
                C79306) *
               C79307 * C79027 * C12991 -
           ((C26552 * C758 + C26496 * C868 + C26551 * C757 + C26495 * C867) *
                C79306 +
            (C26552 * C750 + C26496 * C860 + C26551 * C749 + C26495 * C859) *
                C26498) *
               C79307 * C79027 * C79072) *
              C79309 +
          (((C26551 * C748 + C26495 * C858 + C26552 * C751 + C26496 * C861) *
                C26498 +
            (C26551 * C756 + C26495 * C866 + C26552 * C759 + C26496 * C869) *
                C79306) *
               C79307 * C79027 * C79072 -
           ((C26552 * C756 + C26496 * C866 + C26551 * C103 + C26495 * C174) *
                C79306 +
            (C26552 * C748 + C26496 * C858 + C26551 * C97 + C26495 * C168) *
                C26498) *
               C79307 * C79027 * C12991) *
              C79299 +
          (((C26551 * C98 + C26495 * C169 + C26552 * C752 + C26496 * C862) *
                C26498 +
            (C26551 * C104 + C26495 * C175 + C26552 * C760 + C26496 * C870) *
                C79306) *
               C79307 * C79027 * C12991 -
           ((C26552 * C761 + C26496 * C871 + C26551 * C760 + C26495 * C870) *
                C79306 +
            (C26552 * C753 + C26496 * C863 + C26551 * C752 + C26495 * C862) *
                C26498) *
               C79307 * C79027 * C79072) *
              C79283 +
          (((C26551 * C754 + C26495 * C864 + C26552 * C755 + C26496 * C865) *
                C26498 +
            (C26551 * C762 + C26495 * C872 + C26552 * C763 + C26496 * C873) *
                C79306) *
               C79307 * C79027 * C79072 -
           ((C26552 * C762 + C26496 * C872 + C26551 * C105 + C26495 * C176) *
                C79306 +
            (C26552 * C754 + C26496 * C864 + C26551 * C99 + C26495 * C170) *
                C26498) *
               C79307 * C79027 * C12991) *
              C79263)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
                 C26498 +
             (C26551 * C102 + C26495 * C173 + C26552 * C757 + C26496 * C867) *
                 C79306) *
                C79307 * C79301 -
            ((C26552 * C3935 + C26496 * C4051 + C26551 * C1690 +
              C26495 * C1800) *
                 C79306 +
             (C26552 * C3931 + C26496 * C4047 + C26551 * C1682 +
              C26495 * C1792) *
                 C26498) *
                C79307 * C79287 +
            ((C26551 * C1683 + C26495 * C1793 + C26552 * C6042 +
              C26496 * C6140) *
                 C26498 +
             (C26551 * C1691 + C26495 * C1801 + C26552 * C6048 +
              C26496 * C6146) *
                 C79306) *
                C79307 * C79262) *
               C12991 +
           (((C26551 * C3931 + C26495 * C4047 + C26552 * C6044 +
              C26496 * C6142) *
                 C26498 +
             (C26551 * C3935 + C26495 * C4051 + C26552 * C6050 +
              C26496 * C6148) *
                 C79306) *
                C79307 * C79287 -
            ((C26552 * C758 + C26496 * C868 + C26551 * C757 + C26495 * C867) *
                 C79306 +
             (C26552 * C750 + C26496 * C860 + C26551 * C749 + C26495 * C859) *
                 C26498) *
                C79307 * C79301 -
            ((C26552 * C6051 + C26496 * C6149 + C26551 * C6048 +
              C26495 * C6146) *
                 C79306 +
             (C26552 * C6045 + C26496 * C6143 + C26551 * C6042 +
              C26495 * C6140) *
                 C26498) *
                C79307 * C79262) *
               C79072) *
              C13595 +
          ((((C26551 * C1681 + C26495 * C1791 + C26552 * C3932 +
              C26496 * C4048) *
                 C26498 +
             (C26551 * C1689 + C26495 * C1799 + C26552 * C3936 +
              C26496 * C4052) *
                 C79306) *
                C79307 * C79287 -
            ((C26552 * C756 + C26496 * C866 + C26551 * C103 + C26495 * C174) *
                 C79306 +
             (C26552 * C748 + C26496 * C858 + C26551 * C97 + C26495 * C168) *
                 C26498) *
                C79307 * C79301 -
            ((C26552 * C6047 + C26496 * C6145 + C26551 * C1692 +
              C26495 * C1802) *
                 C79306 +
             (C26552 * C6041 + C26496 * C6139 + C26551 * C1684 +
              C26495 * C1794) *
                 C26498) *
                C79307 * C79262) *
               C12991 +
           (((C26551 * C748 + C26495 * C858 + C26552 * C751 + C26496 * C861) *
                 C26498 +
             (C26551 * C756 + C26495 * C866 + C26552 * C759 + C26496 * C869) *
                 C79306) *
                C79307 * C79301 -
            ((C26552 * C6049 + C26496 * C6147 + C26551 * C3936 +
              C26495 * C4052) *
                 C79306 +
             (C26552 * C6043 + C26496 * C6141 + C26551 * C3932 +
              C26495 * C4048) *
                 C26498) *
                C79307 * C79287 +
            ((C26551 * C6041 + C26495 * C6139 + C26552 * C6046 +
              C26496 * C6144) *
                 C26498 +
             (C26551 * C6047 + C26495 * C6145 + C26552 * C6052 +
              C26496 * C6150) *
                 C79306) *
                C79307 * C79262) *
               C79072) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eexz[27] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C245 * C96 + C79307 * C246) * C26498 +
             (C245 * C102 + C79307 * C252) * C79306) *
                C26495 +
            (C27144 + C27145) * C26496) *
               C79027 * C79310 -
           ((C27146 + C27147) * C26496 + (C27145 + C27144) * C26495) * C79027 *
               C79303 +
           ((C27147 + C27146) * C26495 + (C31377 + C31378) * C26496) * C79027 *
               C79290 -
           ((C31379 + C31380) * C26496 + (C31378 + C31377) * C26495) * C79027 *
               C79269) *
              C13595 +
          (((C27132 + C27133) * C26495 + (C27134 + C27135) * C26496) * C79027 *
               C79303 -
           ((C27133 + C27132) * C26496 +
            (C276 * C79306 + C275 * C26498) * C26495) *
               C79027 * C79310 -
           ((C32675 + C32676) * C26496 + (C27135 + C27134) * C26495) * C79027 *
               C79290 +
           ((C32676 + C32675) * C26495 +
            ((C245 * C5570 + C79307 * C5678) * C26498 +
             (C245 * C5574 + C79307 * C5682) * C79306) *
                C26496) *
               C79027 * C79269) *
              C78992)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C245 * C96 + C79307 * C246) * C26498 +
             (C245 * C102 + C79307 * C252) * C79306) *
                C26495 +
            (C27144 + C27145) * C26496) *
               C79027 * C12991 -
           ((C27146 + C27147) * C26496 + (C27145 + C27144) * C26495) * C79027 *
               C79072) *
              C79309 +
          (((C27132 + C27133) * C26495 + (C27134 + C27135) * C26496) * C79027 *
               C79072 -
           ((C27133 + C27132) * C26496 +
            (C276 * C79306 + C275 * C26498) * C26495) *
               C79027 * C12991) *
              C79299 +
          (((C278 * C26498 + C277 * C79306) * C26495 +
            (C27136 + C27137) * C26496) *
               C79027 * C12991 -
           ((C27138 + C27139) * C26496 + (C27137 + C27136) * C26495) * C79027 *
               C79072) *
              C79283 +
          (((C28581 + C28582) * C26495 +
            ((C245 * C755 + C79307 * C979) * C26498 +
             (C245 * C763 + C79307 * C987) * C79306) *
                C26496) *
               C79027 * C79072 -
           ((C28582 + C28581) * C26496 +
            (C280 * C79306 + C279 * C26498) * C26495) *
               C79027 * C12991) *
              C79263)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C245 * C96 + C79307 * C246) * C26498 +
              (C245 * C102 + C79307 * C252) * C79306) *
                 C26495 +
             (C27144 + C27145) * C26496) *
                C79301 -
            ((C29915 + C29916) * C26496 +
             ((C245 * C1690 + C79307 * C1914) * C79306 +
              (C245 * C1682 + C79307 * C1906) * C26498) *
                 C26495) *
                C79287 +
            (((C245 * C1683 + C79307 * C1907) * C26498 +
              (C245 * C1691 + C79307 * C1915) * C79306) *
                 C26495 +
             (C31950 + C31951) * C26496) *
                C79262) *
               C12991 +
           (((C29916 + C29915) * C26495 + (C31952 + C31953) * C26496) * C79287 -
            ((C27146 + C27147) * C26496 + (C27145 + C27144) * C26495) * C79301 -
            ((C31954 + C31955) * C26496 + (C31951 + C31950) * C26495) *
                C79262) *
               C79072) *
              C13595 +
          ((((C1939 * C26498 + C1938 * C79306) * C26495 +
             (C29909 + C29910) * C26496) *
                C79287 -
            ((C27133 + C27132) * C26496 +
             (C276 * C79306 + C275 * C26498) * C26495) *
                C79301 -
            ((C36667 + C36668) * C26496 +
             (C1941 * C79306 + C1940 * C26498) * C26495) *
                C79262) *
               C12991 +
           (((C27132 + C27133) * C26495 + (C27134 + C27135) * C26496) * C79301 -
            ((C33387 + C33388) * C26496 + (C29910 + C29909) * C26495) * C79287 +
            ((C36668 + C36667) * C26495 +
             ((C245 * C6046 + C79307 * C6230) * C26498 +
              (C245 * C6052 + C79307 * C6236) * C79306) *
                 C26496) *
                C79262) *
               C79072) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eeyx[27] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C26498 * C96 + C79306 * C102) * C26551 +
                      (C26498 * C167 + C79306 * C324) * C26495 +
                      C27246 * C26552 + C27247 * C26496) *
                         C79307 * C79027 * C79310 -
                     (C27248 * C26496 + C27249 * C26552 + C27247 * C26495 +
                      C27246 * C26551) *
                         C79307 * C79027 * C79303 +
                     (C27249 * C26551 + C27248 * C26495 + C31432 * C26552 +
                      C31433 * C26496) *
                         C79307 * C79027 * C79290 -
                     (C31434 * C26496 + C31435 * C26552 + C31433 * C26495 +
                      C31432 * C26551) *
                         C79307 * C79027 * C79269) *
                        C13595 +
                    ((C27250 * C26551 + C27251 * C26495 + C27252 * C26552 +
                      C27253 * C26496) *
                         C79307 * C79027 * C79303 -
                     (C27251 * C26496 + C27250 * C26552 +
                      (C26498 * C168 + C79306 * C325) * C26495 +
                      (C26498 * C97 + C79306 * C103) * C26551) *
                         C79307 * C79027 * C79310 -
                     (C32747 * C26496 + C32748 * C26552 + C27253 * C26495 +
                      C27252 * C26551) *
                         C79307 * C79027 * C79290 +
                     (C32748 * C26551 + C32747 * C26495 +
                      (C26498 * C5570 + C79306 * C5574) * C26552 +
                      (C26498 * C5628 + C79306 * C5728) * C26496) *
                         C79307 * C79027 * C79269) *
                        C78992)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C26498 * C96 + C79306 * C102) * C26551 +
                      (C26498 * C167 + C79306 * C324) * C26495 +
                      C27246 * C26552 + C27247 * C26496) *
                         C79307 * C79027 * C12991 -
                     (C27248 * C26496 + C27249 * C26552 + C27247 * C26495 +
                      C27246 * C26551) *
                         C79307 * C79027 * C79072) *
                        C79309 +
                    ((C27250 * C26551 + C27251 * C26495 + C27252 * C26552 +
                      C27253 * C26496) *
                         C79307 * C79027 * C79072 -
                     (C27251 * C26496 + C27250 * C26552 +
                      (C26498 * C168 + C79306 * C325) * C26495 +
                      (C26498 * C97 + C79306 * C103) * C26551) *
                         C79307 * C79027 * C12991) *
                        C79299 +
                    (((C26498 * C98 + C79306 * C104) * C26551 +
                      (C26498 * C169 + C79306 * C326) * C26495 +
                      C27254 * C26552 + C27255 * C26496) *
                         C79307 * C79027 * C12991 -
                     (C27256 * C26496 + C27257 * C26552 + C27255 * C26495 +
                      C27254 * C26551) *
                         C79307 * C79027 * C79072) *
                        C79283 +
                    ((C28653 * C26551 + C28654 * C26495 +
                      (C26498 * C755 + C79306 * C763) * C26552 +
                      (C26498 * C865 + C79306 * C1093) * C26496) *
                         C79307 * C79027 * C79072 -
                     (C28654 * C26496 + C28653 * C26552 +
                      (C26498 * C170 + C79306 * C327) * C26495 +
                      (C26498 * C99 + C79306 * C105) * C26551) *
                         C79307 * C79027 * C12991) *
                        C79263)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C26498 * C96 + C79306 * C102) * C26551 +
                       (C26498 * C167 + C79306 * C324) * C26495 +
                       C27246 * C26552 + C27247 * C26496) *
                          C79307 * C79301 -
                      (C30027 * C26496 + C30028 * C26552 +
                       (C26498 * C1792 + C79306 * C2020) * C26495 +
                       (C26498 * C1682 + C79306 * C1690) * C26551) *
                          C79307 * C79287 +
                      ((C26498 * C1683 + C79306 * C1691) * C26551 +
                       (C26498 * C1793 + C79306 * C2021) * C26495 +
                       C32043 * C26552 + C32044 * C26496) *
                          C79307 * C79262) *
                         C12991 +
                     ((C30028 * C26551 + C30027 * C26495 + C32045 * C26552 +
                       C32046 * C26496) *
                          C79307 * C79287 -
                      (C27248 * C26496 + C27249 * C26552 + C27247 * C26495 +
                       C27246 * C26551) *
                          C79307 * C79301 -
                      (C32047 * C26496 + C32048 * C26552 + C32044 * C26495 +
                       C32043 * C26551) *
                          C79307 * C79262) *
                         C79072) *
                        C13595 +
                    ((((C26498 * C1681 + C79306 * C1689) * C26551 +
                       (C26498 * C1791 + C79306 * C2019) * C26495 +
                       C30029 * C26552 + C30030 * C26496) *
                          C79307 * C79287 -
                      (C27251 * C26496 + C27250 * C26552 +
                       (C26498 * C168 + C79306 * C325) * C26495 +
                       (C26498 * C97 + C79306 * C103) * C26551) *
                          C79307 * C79301 -
                      (C36771 * C26496 + C36772 * C26552 +
                       (C26498 * C1794 + C79306 * C2022) * C26495 +
                       (C26498 * C1684 + C79306 * C1692) * C26551) *
                          C79307 * C79262) *
                         C12991 +
                     ((C27250 * C26551 + C27251 * C26495 + C27252 * C26552 +
                       C27253 * C26496) *
                          C79307 * C79301 -
                      (C33491 * C26496 + C33492 * C26552 + C30030 * C26495 +
                       C30029 * C26551) *
                          C79307 * C79287 +
                      (C36772 * C26551 + C36771 * C26495 +
                       (C26498 * C6046 + C79306 * C6052) * C26552 +
                       (C26498 * C6144 + C79306 * C6316) * C26496) *
                          C79307 * C79262) *
                         C79072) *
                        C78992)) /
                      (p * q * std::sqrt(p + q));
    d2eeyy[27] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C26679 * C96 + C26682 + C26682 + C26495 * C373 +
                      C26680 * C749 + C26683 + C26683 + C26496 * C1169) *
                         C79306 * C79307 * C79027 * C79310 -
                     (C26680 * C750 + C27332 + C27332 + C26496 * C1170 +
                      C26679 * C749 + C27333 + C27333 + C26495 * C1169) *
                         C79306 * C79307 * C79027 * C79303 +
                     (C26679 * C750 + C27334 + C27334 + C26495 * C1170 +
                      C26680 * C5568 + C27335 + C27335 + C26496 * C5772) *
                         C79306 * C79307 * C79027 * C79290 -
                     (C26680 * C5569 + C31479 + C31479 + C26496 * C5773 +
                      C26679 * C5568 + C31480 + C31480 + C26495 * C5772) *
                         C79306 * C79307 * C79027 * C79269) *
                        C13595 +
                    ((C26679 * C748 + C27336 + C27336 + C26495 * C1168 +
                      C26680 * C751 + C27337 + C27337 + C26496 * C1171) *
                         C79306 * C79307 * C79027 * C79303 -
                     (C26680 * C748 + C26684 + C26684 + C26496 * C1168 +
                      C26679 * C97 + C26685 + C26685 + C26495 * C374) *
                         C79306 * C79307 * C79027 * C79310 -
                     (C26680 * C5567 + C27338 + C27338 + C26496 * C5771 +
                      C26679 * C751 + C27339 + C27339 + C26495 * C1171) *
                         C79306 * C79307 * C79027 * C79290 +
                     (C26679 * C5567 + C32815 + C32815 + C26495 * C5771 +
                      C26680 * C5570 + C32816 + C32816 + C26496 * C5774) *
                         C79306 * C79307 * C79027 * C79269) *
                        C78992)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C26679 * C96 + C26682 + C26682 + C26495 * C373 +
                      C26680 * C749 + C26683 + C26683 + C26496 * C1169) *
                         C79306 * C79307 * C79027 * C12991 -
                     (C26680 * C750 + C27332 + C27332 + C26496 * C1170 +
                      C26679 * C749 + C27333 + C27333 + C26495 * C1169) *
                         C79306 * C79307 * C79027 * C79072) *
                        C79309 +
                    ((C26679 * C748 + C27336 + C27336 + C26495 * C1168 +
                      C26680 * C751 + C27337 + C27337 + C26496 * C1171) *
                         C79306 * C79307 * C79027 * C79072 -
                     (C26680 * C748 + C26684 + C26684 + C26496 * C1168 +
                      C26679 * C97 + C26685 + C26685 + C26495 * C374) *
                         C79306 * C79307 * C79027 * C12991) *
                        C79299 +
                    ((C26679 * C98 + C26686 + C26686 + C26495 * C375 +
                      C26680 * C752 + C26687 + C26687 + C26496 * C1172) *
                         C79306 * C79307 * C79027 * C12991 -
                     (C26680 * C753 + C27340 + C27340 + C26496 * C1173 +
                      C26679 * C752 + C27341 + C27341 + C26495 * C1172) *
                         C79306 * C79307 * C79027 * C79072) *
                        C79283 +
                    ((C26679 * C754 + C28721 + C28721 + C26495 * C1174 +
                      C26680 * C755 + C28722 + C28722 + C26496 * C1175) *
                         C79306 * C79307 * C79027 * C79072 -
                     (C26680 * C754 + C26688 + C26688 + C26496 * C1174 +
                      C26679 * C99 + C26689 + C26689 + C26495 * C376) *
                         C79306 * C79307 * C79027 * C12991) *
                        C79263)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C26679 * C96 + C26682 + C26682 + C26495 * C373 +
                       C26680 * C749 + C26683 + C26683 + C26496 * C1169) *
                          C79306 * C79307 * C79301 -
                      (C26680 * C3931 + C28068 + C28068 + C26496 * C4385 +
                       C26679 * C1682 + C28069 + C28069 + C26495 * C2102) *
                          C79306 * C79307 * C79287 +
                      (C26679 * C1683 + C28070 + C28070 + C26495 * C2103 +
                       C26680 * C6042 + C28071 + C28071 + C26496 * C6392) *
                          C79306 * C79307 * C79262) *
                         C12991 +
                     ((C26679 * C3931 + C30131 + C30131 + C26495 * C4385 +
                       C26680 * C6044 + C30132 + C30132 + C26496 * C6394) *
                          C79306 * C79307 * C79287 -
                      (C26680 * C750 + C27332 + C27332 + C26496 * C1170 +
                       C26679 * C749 + C27333 + C27333 + C26495 * C1169) *
                          C79306 * C79307 * C79301 -
                      (C26680 * C6045 + C32124 + C32124 + C26496 * C6395 +
                       C26679 * C6042 + C32125 + C32125 + C26495 * C6392) *
                          C79306 * C79307 * C79262) *
                         C79072) *
                        C13595 +
                    (((C26679 * C1681 + C28072 + C28072 + C26495 * C2101 +
                       C26680 * C3932 + C28073 + C28073 + C26496 * C4386) *
                          C79306 * C79307 * C79287 -
                      (C26680 * C748 + C26684 + C26684 + C26496 * C1168 +
                       C26679 * C97 + C26685 + C26685 + C26495 * C374) *
                          C79306 * C79307 * C79301 -
                      (C26680 * C6041 + C28074 + C28074 + C26496 * C6391 +
                       C26679 * C1684 + C28075 + C28075 + C26495 * C2104) *
                          C79306 * C79307 * C79262) *
                         C12991 +
                     ((C26679 * C748 + C27336 + C27336 + C26495 * C1168 +
                       C26680 * C751 + C27337 + C27337 + C26496 * C1171) *
                          C79306 * C79307 * C79301 -
                      (C26680 * C6043 + C30133 + C30133 + C26496 * C6393 +
                       C26679 * C3932 + C30134 + C30134 + C26495 * C4386) *
                          C79306 * C79307 * C79287 +
                      (C26679 * C6041 + C36871 + C36871 + C26495 * C6391 +
                       C26680 * C6046 + C36872 + C36872 + C26496 * C6396) *
                          C79306 * C79307 * C79262) *
                         C79072) *
                        C78992)) /
                      (p * q * std::sqrt(p + q));
    d2eeyz[27] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C245 * C96 + C79307 * C246) * C26551 +
            (C245 * C167 + C79307 * C447) * C26495 + C27140 * C26552 +
            C27422 * C26496) *
               C79306 * C79027 * C79310 -
           (C27423 * C26496 + C27143 * C26552 + C27422 * C26495 +
            C27140 * C26551) *
               C79306 * C79027 * C79303 +
           (C27143 * C26551 + C27423 * C26495 + C31373 * C26552 +
            C31530 * C26496) *
               C79306 * C79027 * C79290 -
           (C31531 * C26496 + C31376 * C26552 + C31530 * C26495 +
            C31373 * C26551) *
               C79306 * C79027 * C79269) *
              C13595 +
          ((C1006 * C26551 + C1299 * C26495 + C1007 * C26552 + C1300 * C26496) *
               C79306 * C79027 * C79303 -
           (C1299 * C26496 + C1006 * C26552 + C466 * C26495 + C275 * C26551) *
               C79306 * C79027 * C79310 -
           (C7165 * C26496 + C6954 * C26552 + C1300 * C26495 + C1007 * C26551) *
               C79306 * C79027 * C79290 +
           (C6954 * C26551 + C7165 * C26495 +
            (C245 * C5570 + C79307 * C5678) * C26552 +
            (C245 * C5628 + C79307 * C5824) * C26496) *
               C79306 * C79027 * C79269) *
              C78992)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C245 * C96 + C79307 * C246) * C26551 +
            (C245 * C167 + C79307 * C447) * C26495 + C27140 * C26552 +
            C27422 * C26496) *
               C79306 * C79027 * C12991 -
           (C27423 * C26496 + C27143 * C26552 + C27422 * C26495 +
            C27140 * C26551) *
               C79306 * C79027 * C79072) *
              C79309 +
          ((C1006 * C26551 + C1299 * C26495 + C1007 * C26552 + C1300 * C26496) *
               C79306 * C79027 * C79072 -
           (C1299 * C26496 + C1006 * C26552 + C466 * C26495 + C275 * C26551) *
               C79306 * C79027 * C12991) *
              C79299 +
          ((C278 * C26551 + C467 * C26495 + C1009 * C26552 + C1301 * C26496) *
               C79306 * C79027 * C12991 -
           (C1302 * C26496 + C1012 * C26552 + C1301 * C26495 + C1009 * C26551) *
               C79306 * C79027 * C79072) *
              C79283 +
          ((C2762 * C26551 + C2973 * C26495 +
            (C245 * C755 + C79307 * C979) * C26552 +
            (C245 * C865 + C79307 * C1285) * C26496) *
               C79306 * C79027 * C79072 -
           (C2973 * C26496 + C2762 * C26552 + C468 * C26495 + C279 * C26551) *
               C79306 * C79027 * C12991) *
              C79263)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C245 * C96 + C79307 * C246) * C26551 +
             (C245 * C167 + C79307 * C447) * C26495 + C27140 * C26552 +
             C27422 * C26496) *
                C79306 * C79301 -
            (C30237 * C26496 + C29914 * C26552 +
             (C245 * C1792 + C79307 * C2212) * C26495 +
             (C245 * C1682 + C79307 * C1906) * C26551) *
                C79306 * C79287 +
            ((C245 * C1683 + C79307 * C1907) * C26551 +
             (C245 * C1793 + C79307 * C2213) * C26495 + C31944 * C26552 +
             C32211 * C26496) *
                C79306 * C79262) *
               C12991 +
           ((C29914 * C26551 + C30237 * C26495 + C31946 * C26552 +
             C32212 * C26496) *
                C79306 * C79287 -
            (C27423 * C26496 + C27143 * C26552 + C27422 * C26495 +
             C27140 * C26551) *
                C79306 * C79301 -
            (C32213 * C26496 + C31949 * C26552 + C32211 * C26495 +
             C31944 * C26551) *
                C79306 * C79262) *
               C79072) *
              C13595 +
          (((C1939 * C26551 + C2232 * C26495 + C4182 * C26552 +
             C4512 * C26496) *
                C79306 * C79287 -
            (C1299 * C26496 + C1006 * C26552 + C466 * C26495 + C275 * C26551) *
                C79306 * C79301 -
            (C11341 * C26496 + C11034 * C26552 + C2233 * C26495 +
             C1940 * C26551) *
                C79306 * C79262) *
               C12991 +
           ((C1006 * C26551 + C1299 * C26495 + C1007 * C26552 +
             C1300 * C26496) *
                C79306 * C79301 -
            (C8001 * C26496 + C7694 * C26552 + C4512 * C26495 +
             C4182 * C26551) *
                C79306 * C79287 +
            (C11034 * C26551 + C11341 * C26495 +
             (C245 * C6046 + C79307 * C6230) * C26552 +
             (C245 * C6144 + C79307 * C6482) * C26496) *
                C79306 * C79262) *
               C79072) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eezx[27] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C26498 * C96 + C79306 * C102) * C245 +
             (C26498 * C246 + C79306 * C515) * C79307) *
                C26495 +
            (C27498 + C27522) * C26496) *
               C79027 * C79310 -
           ((C27523 + C27503) * C26496 + (C27522 + C27498) * C26495) * C79027 *
               C79303 +
           ((C27503 + C27523) * C26495 + (C31575 + C31583) * C26496) * C79027 *
               C79290 -
           ((C31584 + C31580) * C26496 + (C31583 + C31575) * C26495) * C79027 *
               C79269) *
              C13595 +
          (((C27504 + C27524) * C26495 + (C27507 + C27525) * C26496) * C79027 *
               C79303 -
           ((C27524 + C27504) * C26496 +
            ((C26498 * C247 + C79306 * C516) * C79307 +
             (C26498 * C97 + C79306 * C103) * C245) *
                C26495) *
               C79027 * C79310 -
           ((C32953 + C32951) * C26496 + (C27525 + C27507) * C26495) * C79027 *
               C79290 +
           ((C32951 + C32953) * C26495 +
            ((C26498 * C5570 + C79306 * C5574) * C245 +
             (C26498 * C5678 + C79306 * C5870) * C79307) *
                C26496) *
               C79027 * C79269) *
              C78992)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C26498 * C96 + C79306 * C102) * C245 +
             (C26498 * C246 + C79306 * C515) * C79307) *
                C26495 +
            (C27498 + C27522) * C26496) *
               C79027 * C12991 -
           ((C27523 + C27503) * C26496 + (C27522 + C27498) * C26495) * C79027 *
               C79072) *
              C79309 +
          (((C27504 + C27524) * C26495 + (C27507 + C27525) * C26496) * C79027 *
               C79072 -
           ((C27524 + C27504) * C26496 +
            ((C26498 * C247 + C79306 * C516) * C79307 +
             (C26498 * C97 + C79306 * C103) * C245) *
                C26495) *
               C79027 * C12991) *
              C79299 +
          ((((C26498 * C98 + C79306 * C104) * C245 +
             (C26498 * C248 + C79306 * C517) * C79307) *
                C26495 +
            (C27510 + C27526) * C26496) *
               C79027 * C12991 -
           ((C27527 + C27515) * C26496 + (C27526 + C27510) * C26495) * C79027 *
               C79072) *
              C79283 +
          (((C28855 + C28859) * C26495 +
            ((C26498 * C755 + C79306 * C763) * C245 +
             (C26498 * C979 + C79306 * C1387) * C79307) *
                C26496) *
               C79027 * C79072 -
           ((C28859 + C28855) * C26496 +
            ((C26498 * C249 + C79306 * C518) * C79307 +
             (C26498 * C99 + C79306 * C105) * C245) *
                C26495) *
               C79027 * C12991) *
              C79263)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C26498 * C96 + C79306 * C102) * C245 +
              (C26498 * C246 + C79306 * C515) * C79307) *
                 C26495 +
             (C27498 + C27522) * C26496) *
                C79301 -
            ((C30348 + C30338) * C26496 +
             ((C26498 * C1906 + C79306 * C2314) * C79307 +
              (C26498 * C1682 + C79306 * C1690) * C245) *
                 C26495) *
                C79287 +
            (((C26498 * C1683 + C79306 * C1691) * C245 +
              (C26498 * C1907 + C79306 * C2315) * C79307) *
                 C26495 +
             (C32289 + C32301) * C26496) *
                C79262) *
               C12991 +
           (((C30338 + C30348) * C26495 + (C32292 + C32302) * C26496) * C79287 -
            ((C27523 + C27503) * C26496 + (C27522 + C27498) * C26495) * C79301 -
            ((C32303 + C32297) * C26496 + (C32301 + C32289) * C26495) *
                C79262) *
               C79072) *
              C13595 +
          (((((C26498 * C1681 + C79306 * C1689) * C245 +
              (C26498 * C1905 + C79306 * C2313) * C79307) *
                 C26495 +
             (C30339 + C30349) * C26496) *
                C79287 -
            ((C27524 + C27504) * C26496 +
             ((C26498 * C247 + C79306 * C516) * C79307 +
              (C26498 * C97 + C79306 * C103) * C245) *
                 C26495) *
                C79301 -
            ((C37073 + C37071) * C26496 +
             ((C26498 * C1908 + C79306 * C2316) * C79307 +
              (C26498 * C1684 + C79306 * C1692) * C245) *
                 C26495) *
                C79262) *
               C12991 +
           (((C27504 + C27524) * C26495 + (C27507 + C27525) * C26496) * C79301 -
            ((C33793 + C33791) * C26496 + (C30349 + C30339) * C26495) * C79287 +
            ((C37071 + C37073) * C26495 +
             ((C26498 * C6046 + C79306 * C6052) * C245 +
              (C26498 * C6230 + C79306 * C6562) * C79307) *
                 C26496) *
                C79262) *
               C79072) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eezy[27] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
                C245 +
            (C26551 * C246 + C26495 * C563 + C26552 * C973 + C26496 * C1463) *
                C79307) *
               C79306 * C79027 * C79310 -
           ((C26552 * C974 + C26496 * C1464 + C26551 * C973 + C26495 * C1463) *
                C79307 +
            (C26552 * C750 + C26496 * C860 + C26551 * C749 + C26495 * C859) *
                C245) *
               C79306 * C79027 * C79303 +
           ((C26551 * C750 + C26495 * C860 + C26552 * C5568 + C26496 * C5626) *
                C245 +
            (C26551 * C974 + C26495 * C1464 + C26552 * C5676 + C26496 * C5914) *
                C79307) *
               C79306 * C79027 * C79290 -
           ((C26552 * C5677 + C26496 * C5915 + C26551 * C5676 +
             C26495 * C5914) *
                C79307 +
            (C26552 * C5569 + C26496 * C5627 + C26551 * C5568 +
             C26495 * C5626) *
                C245) *
               C79306 * C79027 * C79269) *
              C13595 +
          (((C26551 * C748 + C26495 * C858 + C26552 * C751 + C26496 * C861) *
                C245 +
            (C26551 * C972 + C26495 * C1462 + C26552 * C975 + C26496 * C1465) *
                C79307) *
               C79306 * C79027 * C79303 -
           ((C26552 * C972 + C26496 * C1462 + C26551 * C247 + C26495 * C564) *
                C79307 +
            (C26552 * C748 + C26496 * C858 + C26551 * C97 + C26495 * C168) *
                C245) *
               C79306 * C79027 * C79310 -
           ((C26552 * C5675 + C26496 * C5913 + C26551 * C975 + C26495 * C1465) *
                C79307 +
            (C26552 * C5567 + C26496 * C5625 + C26551 * C751 + C26495 * C861) *
                C245) *
               C79306 * C79027 * C79290 +
           ((C26551 * C5567 + C26495 * C5625 + C26552 * C5570 +
             C26496 * C5628) *
                C245 +
            (C26551 * C5675 + C26495 * C5913 + C26552 * C5678 +
             C26496 * C5916) *
                C79307) *
               C79306 * C79027 * C79269) *
              C78992)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
                C245 +
            (C26551 * C246 + C26495 * C563 + C26552 * C973 + C26496 * C1463) *
                C79307) *
               C79306 * C79027 * C12991 -
           ((C26552 * C974 + C26496 * C1464 + C26551 * C973 + C26495 * C1463) *
                C79307 +
            (C26552 * C750 + C26496 * C860 + C26551 * C749 + C26495 * C859) *
                C245) *
               C79306 * C79027 * C79072) *
              C79309 +
          (((C26551 * C748 + C26495 * C858 + C26552 * C751 + C26496 * C861) *
                C245 +
            (C26551 * C972 + C26495 * C1462 + C26552 * C975 + C26496 * C1465) *
                C79307) *
               C79306 * C79027 * C79072 -
           ((C26552 * C972 + C26496 * C1462 + C26551 * C247 + C26495 * C564) *
                C79307 +
            (C26552 * C748 + C26496 * C858 + C26551 * C97 + C26495 * C168) *
                C245) *
               C79306 * C79027 * C12991) *
              C79299 +
          (((C26551 * C98 + C26495 * C169 + C26552 * C752 + C26496 * C862) *
                C245 +
            (C26551 * C248 + C26495 * C565 + C26552 * C976 + C26496 * C1466) *
                C79307) *
               C79306 * C79027 * C12991 -
           ((C26552 * C977 + C26496 * C1467 + C26551 * C976 + C26495 * C1466) *
                C79307 +
            (C26552 * C753 + C26496 * C863 + C26551 * C752 + C26495 * C862) *
                C245) *
               C79306 * C79027 * C79072) *
              C79283 +
          (((C26551 * C754 + C26495 * C864 + C26552 * C755 + C26496 * C865) *
                C245 +
            (C26551 * C978 + C26495 * C1468 + C26552 * C979 + C26496 * C1469) *
                C79307) *
               C79306 * C79027 * C79072 -
           ((C26552 * C978 + C26496 * C1468 + C26551 * C249 + C26495 * C566) *
                C79307 +
            (C26552 * C754 + C26496 * C864 + C26551 * C99 + C26495 * C170) *
                C245) *
               C79306 * C79027 * C12991) *
              C79263)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
                 C245 +
             (C26551 * C246 + C26495 * C563 + C26552 * C973 + C26496 * C1463) *
                 C79307) *
                C79306 * C79301 -
            ((C26552 * C4165 + C26496 * C4715 + C26551 * C1906 +
              C26495 * C2396) *
                 C79307 +
             (C26552 * C3931 + C26496 * C4047 + C26551 * C1682 +
              C26495 * C1792) *
                 C245) *
                C79306 * C79287 +
            ((C26551 * C1683 + C26495 * C1793 + C26552 * C6042 +
              C26496 * C6140) *
                 C245 +
             (C26551 * C1907 + C26495 * C2397 + C26552 * C6226 +
              C26496 * C6638) *
                 C79307) *
                C79306 * C79262) *
               C12991 +
           (((C26551 * C3931 + C26495 * C4047 + C26552 * C6044 +
              C26496 * C6142) *
                 C245 +
             (C26551 * C4165 + C26495 * C4715 + C26552 * C6228 +
              C26496 * C6640) *
                 C79307) *
                C79306 * C79287 -
            ((C26552 * C974 + C26496 * C1464 + C26551 * C973 + C26495 * C1463) *
                 C79307 +
             (C26552 * C750 + C26496 * C860 + C26551 * C749 + C26495 * C859) *
                 C245) *
                C79306 * C79301 -
            ((C26552 * C6229 + C26496 * C6641 + C26551 * C6226 +
              C26495 * C6638) *
                 C79307 +
             (C26552 * C6045 + C26496 * C6143 + C26551 * C6042 +
              C26495 * C6140) *
                 C245) *
                C79306 * C79262) *
               C79072) *
              C13595 +
          ((((C26551 * C1681 + C26495 * C1791 + C26552 * C3932 +
              C26496 * C4048) *
                 C245 +
             (C26551 * C1905 + C26495 * C2395 + C26552 * C4166 +
              C26496 * C4716) *
                 C79307) *
                C79306 * C79287 -
            ((C26552 * C972 + C26496 * C1462 + C26551 * C247 + C26495 * C564) *
                 C79307 +
             (C26552 * C748 + C26496 * C858 + C26551 * C97 + C26495 * C168) *
                 C245) *
                C79306 * C79301 -
            ((C26552 * C6225 + C26496 * C6637 + C26551 * C1908 +
              C26495 * C2398) *
                 C79307 +
             (C26552 * C6041 + C26496 * C6139 + C26551 * C1684 +
              C26495 * C1794) *
                 C245) *
                C79306 * C79262) *
               C12991 +
           (((C26551 * C748 + C26495 * C858 + C26552 * C751 + C26496 * C861) *
                 C245 +
             (C26551 * C972 + C26495 * C1462 + C26552 * C975 + C26496 * C1465) *
                 C79307) *
                C79306 * C79301 -
            ((C26552 * C6227 + C26496 * C6639 + C26551 * C4166 +
              C26495 * C4716) *
                 C79307 +
             (C26552 * C6043 + C26496 * C6141 + C26551 * C3932 +
              C26495 * C4048) *
                 C245) *
                C79306 * C79287 +
            ((C26551 * C6041 + C26495 * C6139 + C26552 * C6046 +
              C26496 * C6144) *
                 C245 +
             (C26551 * C6225 + C26495 * C6637 + C26552 * C6230 +
              C26496 * C6642) *
                 C79307) *
                C79306 * C79262) *
               C79072) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eezz[27] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C631 * C96 + C639 + C639 + C79307 * C632) * C26495 +
            C27684 * C26496) *
               C79306 * C79027 * C79310 -
           (C27685 * C26496 + C27684 * C26495) * C79306 * C79027 * C79303 +
           (C27685 * C26495 + C31680 * C26496) * C79306 * C79027 * C79290 -
           (C31681 * C26496 + C31680 * C26495) * C79306 * C79027 * C79269) *
              C13595 +
          ((C1597 * C26495 + C1598 * C26496) * C79306 * C79027 * C79303 -
           (C1597 * C26496 + C661 * C26495) * C79306 * C79027 * C79310 -
           (C7378 * C26496 + C1598 * C26495) * C79306 * C79027 * C79290 +
           (C7378 * C26495 +
            (C631 * C5570 + C5967 + C5967 + C79307 * C5962) * C26496) *
               C79306 * C79027 * C79269) *
              C78992)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C631 * C96 + C639 + C639 + C79307 * C632) * C26495 +
            C27684 * C26496) *
               C79306 * C79027 * C12991 -
           (C27685 * C26496 + C27684 * C26495) * C79306 * C79027 * C79072) *
              C79309 +
          ((C1597 * C26495 + C1598 * C26496) * C79306 * C79027 * C79072 -
           (C1597 * C26496 + C661 * C26495) * C79306 * C79027 * C12991) *
              C79299 +
          ((C662 * C26495 + C1599 * C26496) * C79306 * C79027 * C12991 -
           (C1600 * C26496 + C1599 * C26495) * C79306 * C79027 * C79072) *
              C79283 +
          ((C3186 * C26495 +
            (C631 * C755 + C1588 + C1588 + C79307 * C1571) * C26496) *
               C79306 * C79027 * C79072 -
           (C3186 * C26496 + C663 * C26495) * C79306 * C79027 * C12991) *
              C79263)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C631 * C96 + C639 + C639 + C79307 * C632) * C26495 +
             C27684 * C26496) *
                C79306 * C79301 -
            (C30551 * C26496 +
             (C631 * C1682 + C2509 + C2509 + C79307 * C2498) * C26495) *
                C79306 * C79287 +
            ((C631 * C1683 + C2510 + C2510 + C79307 * C2499) * C26495 +
             C32467 * C26496) *
                C79306 * C79262) *
               C12991 +
           ((C30551 * C26495 + C32468 * C26496) * C79306 * C79287 -
            (C27685 * C26496 + C27684 * C26495) * C79306 * C79301 -
            (C32469 * C26496 + C32467 * C26495) * C79306 * C79262) *
               C79072) *
              C13595 +
          (((C2530 * C26495 + C4844 * C26496) * C79306 * C79287 -
            (C1597 * C26496 + C661 * C26495) * C79306 * C79301 -
            (C11650 * C26496 + C2531 * C26495) * C79306 * C79262) *
               C12991 +
           ((C1597 * C26495 + C1598 * C26496) * C79306 * C79301 -
            (C8310 * C26496 + C4844 * C26495) * C79306 * C79287 +
            (C11650 * C26495 +
             (C631 * C6046 + C6729 + C6729 + C79307 * C6722) * C26496) *
                C79306 * C79262) *
               C79072) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eexx[28] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C26497 * C96 + C26500 + C26500 + C79306 * C108) *
                           C79307 * C26495 +
                       C26970 * C26496) *
                          C79230 -
                      (C29706 * C26496 +
                       (C26497 * C1682 + C27761 + C27761 + C79306 * C1698) *
                           C79307 * C26495) *
                          C79114) *
                         C12991 +
                     ((C29706 * C26495 + C31778 * C26496) * C79114 -
                      (C26971 * C26496 + C26970 * C26495) * C79230) *
                         C79072) *
                        C78986 +
                    ((((C26497 * C1681 + C27764 + C27764 + C79306 * C1697) *
                           C79307 * C26495 +
                       C29707 * C26496) *
                          C79114 -
                      (C26972 * C26496 +
                       (C26497 * C97 + C26503 + C26503 + C79306 * C109) *
                           C79307 * C26495) *
                          C79230) *
                         C12991 +
                     ((C26972 * C26495 + C26973 * C26496) * C79230 -
                      (C33190 * C26496 + C29707 * C26495) * C79114) *
                         C79072) *
                        C78995 +
                    ((((C26497 * C98 + C26504 + C26504 + C79306 * C110) *
                           C79307 * C26495 +
                       C26974 * C26496) *
                          C79230 -
                      (C29708 * C26496 +
                       (C26497 * C1685 + C27769 + C27769 + C79306 * C1701) *
                           C79307 * C26495) *
                          C79114) *
                         C12991 +
                     ((C29708 * C26495 +
                       (C26497 * C7477 + C29696 + C29696 + C79306 * C7479) *
                           C79307 * C26496) *
                          C79114 -
                      (C26975 * C26496 + C26974 * C26495) * C79230) *
                         C79072) *
                        C15086)) /
                  (p * q * std::sqrt(p + q));
    d2eexy[28] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
                 C26498 +
             (C26551 * C102 + C26495 * C173 + C26552 * C757 + C26496 * C867) *
                 C79306) *
                C79307 * C79230 -
            ((C26552 * C3935 + C26496 * C4051 + C26551 * C1690 +
              C26495 * C1800) *
                 C79306 +
             (C26552 * C3931 + C26496 * C4047 + C26551 * C1682 +
              C26495 * C1792) *
                 C26498) *
                C79307 * C79114) *
               C12991 +
           (((C26551 * C3931 + C26495 * C4047 + C26552 * C6044 +
              C26496 * C6142) *
                 C26498 +
             (C26551 * C3935 + C26495 * C4051 + C26552 * C6050 +
              C26496 * C6148) *
                 C79306) *
                C79307 * C79114 -
            ((C26552 * C758 + C26496 * C868 + C26551 * C757 + C26495 * C867) *
                 C79306 +
             (C26552 * C750 + C26496 * C860 + C26551 * C749 + C26495 * C859) *
                 C26498) *
                C79307 * C79230) *
               C79072) *
              C78986 +
          ((((C26551 * C1681 + C26495 * C1791 + C26552 * C3932 +
              C26496 * C4048) *
                 C26498 +
             (C26551 * C1689 + C26495 * C1799 + C26552 * C3936 +
              C26496 * C4052) *
                 C79306) *
                C79307 * C79114 -
            ((C26552 * C756 + C26496 * C866 + C26551 * C103 + C26495 * C174) *
                 C79306 +
             (C26552 * C748 + C26496 * C858 + C26551 * C97 + C26495 * C168) *
                 C26498) *
                C79307 * C79230) *
               C12991 +
           (((C26551 * C748 + C26495 * C858 + C26552 * C751 + C26496 * C861) *
                 C26498 +
             (C26551 * C756 + C26495 * C866 + C26552 * C759 + C26496 * C869) *
                 C79306) *
                C79307 * C79230 -
            ((C26552 * C6049 + C26496 * C6147 + C26551 * C3936 +
              C26495 * C4052) *
                 C79306 +
             (C26552 * C6043 + C26496 * C6141 + C26551 * C3932 +
              C26495 * C4048) *
                 C26498) *
                C79307 * C79114) *
               C79072) *
              C78995 +
          ((((C26551 * C98 + C26495 * C169 + C26552 * C752 + C26496 * C862) *
                 C26498 +
             (C26551 * C104 + C26495 * C175 + C26552 * C760 + C26496 * C870) *
                 C79306) *
                C79307 * C79230 -
            ((C26552 * C3937 + C26496 * C4053 + C26551 * C1693 +
              C26495 * C1803) *
                 C79306 +
             (C26552 * C3933 + C26496 * C4049 + C26551 * C1685 +
              C26495 * C1795) *
                 C26498) *
                C79307 * C79114) *
               C12991 +
           (((C26551 * C3933 + C26495 * C4049 + C26552 * C7477 +
              C26496 * C7580) *
                 C26498 +
             (C26551 * C3937 + C26495 * C4053 + C26552 * C7478 +
              C26496 * C7581) *
                 C79306) *
                C79307 * C79114 -
            ((C26552 * C761 + C26496 * C871 + C26551 * C760 + C26495 * C870) *
                 C79306 +
             (C26552 * C753 + C26496 * C863 + C26551 * C752 + C26495 * C862) *
                 C26498) *
                C79307 * C79230) *
               C79072) *
              C15086)) /
        (p * q * std::sqrt(p + q));
    d2eexz[28] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C245 * C96 + C79307 * C246) * C26498 +
              (C245 * C102 + C79307 * C252) * C79306) *
                 C26495 +
             (C27144 + C27145) * C26496) *
                C79230 -
            ((C29915 + C29916) * C26496 +
             ((C245 * C1690 + C79307 * C1914) * C79306 +
              (C245 * C1682 + C79307 * C1906) * C26498) *
                 C26495) *
                C79114) *
               C12991 +
           (((C29916 + C29915) * C26495 + (C31952 + C31953) * C26496) * C79114 -
            ((C27146 + C27147) * C26496 + (C27145 + C27144) * C26495) *
                C79230) *
               C79072) *
              C78986 +
          ((((C1939 * C26498 + C1938 * C79306) * C26495 +
             (C29909 + C29910) * C26496) *
                C79114 -
            ((C27133 + C27132) * C26496 +
             (C276 * C79306 + C275 * C26498) * C26495) *
                C79230) *
               C12991 +
           (((C27132 + C27133) * C26495 + (C27134 + C27135) * C26496) * C79230 -
            ((C33387 + C33388) * C26496 + (C29910 + C29909) * C26495) *
                C79114) *
               C79072) *
              C78995 +
          ((((C278 * C26498 + C277 * C79306) * C26495 +
             (C27136 + C27137) * C26496) *
                C79230 -
            ((C29911 + C29912) * C26496 +
             (C1943 * C79306 + C1942 * C26498) * C26495) *
                C79114) *
               C12991 +
           (((C29912 + C29911) * C26495 +
             ((C245 * C7477 + C79307 * C7686) * C26498 +
              (C245 * C7478 + C79307 * C7687) * C79306) *
                 C26496) *
                C79114 -
            ((C27138 + C27139) * C26496 + (C27137 + C27136) * C26495) *
                C79230) *
               C79072) *
              C15086)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[28] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C26498 * C96 + C79306 * C102) * C26551 +
                       (C26498 * C167 + C79306 * C324) * C26495 +
                       C27246 * C26552 + C27247 * C26496) *
                          C79307 * C79230 -
                      (C30027 * C26496 + C30028 * C26552 +
                       (C26498 * C1792 + C79306 * C2020) * C26495 +
                       (C26498 * C1682 + C79306 * C1690) * C26551) *
                          C79307 * C79114) *
                         C12991 +
                     ((C30028 * C26551 + C30027 * C26495 + C32045 * C26552 +
                       C32046 * C26496) *
                          C79307 * C79114 -
                      (C27248 * C26496 + C27249 * C26552 + C27247 * C26495 +
                       C27246 * C26551) *
                          C79307 * C79230) *
                         C79072) *
                        C78986 +
                    ((((C26498 * C1681 + C79306 * C1689) * C26551 +
                       (C26498 * C1791 + C79306 * C2019) * C26495 +
                       C30029 * C26552 + C30030 * C26496) *
                          C79307 * C79114 -
                      (C27251 * C26496 + C27250 * C26552 +
                       (C26498 * C168 + C79306 * C325) * C26495 +
                       (C26498 * C97 + C79306 * C103) * C26551) *
                          C79307 * C79230) *
                         C12991 +
                     ((C27250 * C26551 + C27251 * C26495 + C27252 * C26552 +
                       C27253 * C26496) *
                          C79307 * C79230 -
                      (C33491 * C26496 + C33492 * C26552 + C30030 * C26495 +
                       C30029 * C26551) *
                          C79307 * C79114) *
                         C79072) *
                        C78995 +
                    ((((C26498 * C98 + C79306 * C104) * C26551 +
                       (C26498 * C169 + C79306 * C326) * C26495 +
                       C27254 * C26552 + C27255 * C26496) *
                          C79307 * C79230 -
                      (C30031 * C26496 + C30032 * C26552 +
                       (C26498 * C1795 + C79306 * C2023) * C26495 +
                       (C26498 * C1685 + C79306 * C1693) * C26551) *
                          C79307 * C79114) *
                         C12991 +
                     ((C30032 * C26551 + C30031 * C26495 +
                       (C26498 * C7477 + C79306 * C7478) * C26552 +
                       (C26498 * C7580 + C79306 * C7792) * C26496) *
                          C79307 * C79114 -
                      (C27256 * C26496 + C27257 * C26552 + C27255 * C26495 +
                       C27254 * C26551) *
                          C79307 * C79230) *
                         C79072) *
                        C15086)) /
                  (p * q * std::sqrt(p + q));
    d2eeyy[28] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C26679 * C96 + C26682 + C26682 + C26495 * C373 +
                       C26680 * C749 + C26683 + C26683 + C26496 * C1169) *
                          C79306 * C79307 * C79230 -
                      (C26680 * C3931 + C28068 + C28068 + C26496 * C4385 +
                       C26679 * C1682 + C28069 + C28069 + C26495 * C2102) *
                          C79306 * C79307 * C79114) *
                         C12991 +
                     ((C26679 * C3931 + C30131 + C30131 + C26495 * C4385 +
                       C26680 * C6044 + C30132 + C30132 + C26496 * C6394) *
                          C79306 * C79307 * C79114 -
                      (C26680 * C750 + C27332 + C27332 + C26496 * C1170 +
                       C26679 * C749 + C27333 + C27333 + C26495 * C1169) *
                          C79306 * C79307 * C79230) *
                         C79072) *
                        C78986 +
                    (((C26679 * C1681 + C28072 + C28072 + C26495 * C2101 +
                       C26680 * C3932 + C28073 + C28073 + C26496 * C4386) *
                          C79306 * C79307 * C79114 -
                      (C26680 * C748 + C26684 + C26684 + C26496 * C1168 +
                       C26679 * C97 + C26685 + C26685 + C26495 * C374) *
                          C79306 * C79307 * C79230) *
                         C12991 +
                     ((C26679 * C748 + C27336 + C27336 + C26495 * C1168 +
                       C26680 * C751 + C27337 + C27337 + C26496 * C1171) *
                          C79306 * C79307 * C79230 -
                      (C26680 * C6043 + C30133 + C30133 + C26496 * C6393 +
                       C26679 * C3932 + C30134 + C30134 + C26495 * C4386) *
                          C79306 * C79307 * C79114) *
                         C79072) *
                        C78995 +
                    (((C26679 * C98 + C26686 + C26686 + C26495 * C375 +
                       C26680 * C752 + C26687 + C26687 + C26496 * C1172) *
                          C79306 * C79307 * C79230 -
                      (C26680 * C3933 + C28076 + C28076 + C26496 * C4387 +
                       C26679 * C1685 + C28077 + C28077 + C26495 * C2105) *
                          C79306 * C79307 * C79114) *
                         C12991 +
                     ((C26679 * C3933 + C30135 + C30135 + C26495 * C4387 +
                       C26680 * C7477 + C30136 + C30136 + C26496 * C7891) *
                          C79306 * C79307 * C79114 -
                      (C26680 * C753 + C27340 + C27340 + C26496 * C1173 +
                       C26679 * C752 + C27341 + C27341 + C26495 * C1172) *
                          C79306 * C79307 * C79230) *
                         C79072) *
                        C15086)) /
                  (p * q * std::sqrt(p + q));
    d2eeyz[28] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C245 * C96 + C79307 * C246) * C26551 +
             (C245 * C167 + C79307 * C447) * C26495 + C27140 * C26552 +
             C27422 * C26496) *
                C79306 * C79230 -
            (C30237 * C26496 + C29914 * C26552 +
             (C245 * C1792 + C79307 * C2212) * C26495 +
             (C245 * C1682 + C79307 * C1906) * C26551) *
                C79306 * C79114) *
               C12991 +
           ((C29914 * C26551 + C30237 * C26495 + C31946 * C26552 +
             C32212 * C26496) *
                C79306 * C79114 -
            (C27423 * C26496 + C27143 * C26552 + C27422 * C26495 +
             C27140 * C26551) *
                C79306 * C79230) *
               C79072) *
              C78986 +
          (((C1939 * C26551 + C2232 * C26495 + C4182 * C26552 +
             C4512 * C26496) *
                C79306 * C79114 -
            (C1299 * C26496 + C1006 * C26552 + C466 * C26495 + C275 * C26551) *
                C79306 * C79230) *
               C12991 +
           ((C1006 * C26551 + C1299 * C26495 + C1007 * C26552 +
             C1300 * C26496) *
                C79306 * C79230 -
            (C8001 * C26496 + C7694 * C26552 + C4512 * C26495 +
             C4182 * C26551) *
                C79306 * C79114) *
               C79072) *
              C78995 +
          (((C278 * C26551 + C467 * C26495 + C1009 * C26552 + C1301 * C26496) *
                C79306 * C79230 -
            (C4513 * C26496 + C4185 * C26552 + C2234 * C26495 +
             C1942 * C26551) *
                C79306 * C79114) *
               C12991 +
           ((C4185 * C26551 + C4513 * C26495 +
             (C245 * C7477 + C79307 * C7686) * C26552 +
             (C245 * C7580 + C79307 * C7996) * C26496) *
                C79306 * C79114 -
            (C1302 * C26496 + C1012 * C26552 + C1301 * C26495 +
             C1009 * C26551) *
                C79306 * C79230) *
               C79072) *
              C15086)) /
        (p * q * std::sqrt(p + q));
    d2eezx[28] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C26498 * C96 + C79306 * C102) * C245 +
              (C26498 * C246 + C79306 * C515) * C79307) *
                 C26495 +
             (C27498 + C27522) * C26496) *
                C79230 -
            ((C30348 + C30338) * C26496 +
             ((C26498 * C1906 + C79306 * C2314) * C79307 +
              (C26498 * C1682 + C79306 * C1690) * C245) *
                 C26495) *
                C79114) *
               C12991 +
           (((C30338 + C30348) * C26495 + (C32292 + C32302) * C26496) * C79114 -
            ((C27523 + C27503) * C26496 + (C27522 + C27498) * C26495) *
                C79230) *
               C79072) *
              C78986 +
          (((((C26498 * C1681 + C79306 * C1689) * C245 +
              (C26498 * C1905 + C79306 * C2313) * C79307) *
                 C26495 +
             (C30339 + C30349) * C26496) *
                C79114 -
            ((C27524 + C27504) * C26496 +
             ((C26498 * C247 + C79306 * C516) * C79307 +
              (C26498 * C97 + C79306 * C103) * C245) *
                 C26495) *
                C79230) *
               C12991 +
           (((C27504 + C27524) * C26495 + (C27507 + C27525) * C26496) * C79230 -
            ((C33793 + C33791) * C26496 + (C30349 + C30339) * C26495) *
                C79114) *
               C79072) *
              C78995 +
          (((((C26498 * C98 + C79306 * C104) * C245 +
              (C26498 * C248 + C79306 * C517) * C79307) *
                 C26495 +
             (C27510 + C27526) * C26496) *
                C79230 -
            ((C30350 + C30344) * C26496 +
             ((C26498 * C1909 + C79306 * C2317) * C79307 +
              (C26498 * C1685 + C79306 * C1693) * C245) *
                 C26495) *
                C79114) *
               C12991 +
           (((C30344 + C30350) * C26495 +
             ((C26498 * C7477 + C79306 * C7478) * C245 +
              (C26498 * C7686 + C79306 * C8100) * C79307) *
                 C26496) *
                C79114 -
            ((C27527 + C27515) * C26496 + (C27526 + C27510) * C26495) *
                C79230) *
               C79072) *
              C15086)) /
        (p * q * std::sqrt(p + q));
    d2eezy[28] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
                 C245 +
             (C26551 * C246 + C26495 * C563 + C26552 * C973 + C26496 * C1463) *
                 C79307) *
                C79306 * C79230 -
            ((C26552 * C4165 + C26496 * C4715 + C26551 * C1906 +
              C26495 * C2396) *
                 C79307 +
             (C26552 * C3931 + C26496 * C4047 + C26551 * C1682 +
              C26495 * C1792) *
                 C245) *
                C79306 * C79114) *
               C12991 +
           (((C26551 * C3931 + C26495 * C4047 + C26552 * C6044 +
              C26496 * C6142) *
                 C245 +
             (C26551 * C4165 + C26495 * C4715 + C26552 * C6228 +
              C26496 * C6640) *
                 C79307) *
                C79306 * C79114 -
            ((C26552 * C974 + C26496 * C1464 + C26551 * C973 + C26495 * C1463) *
                 C79307 +
             (C26552 * C750 + C26496 * C860 + C26551 * C749 + C26495 * C859) *
                 C245) *
                C79306 * C79230) *
               C79072) *
              C78986 +
          ((((C26551 * C1681 + C26495 * C1791 + C26552 * C3932 +
              C26496 * C4048) *
                 C245 +
             (C26551 * C1905 + C26495 * C2395 + C26552 * C4166 +
              C26496 * C4716) *
                 C79307) *
                C79306 * C79114 -
            ((C26552 * C972 + C26496 * C1462 + C26551 * C247 + C26495 * C564) *
                 C79307 +
             (C26552 * C748 + C26496 * C858 + C26551 * C97 + C26495 * C168) *
                 C245) *
                C79306 * C79230) *
               C12991 +
           (((C26551 * C748 + C26495 * C858 + C26552 * C751 + C26496 * C861) *
                 C245 +
             (C26551 * C972 + C26495 * C1462 + C26552 * C975 + C26496 * C1465) *
                 C79307) *
                C79306 * C79230 -
            ((C26552 * C6227 + C26496 * C6639 + C26551 * C4166 +
              C26495 * C4716) *
                 C79307 +
             (C26552 * C6043 + C26496 * C6141 + C26551 * C3932 +
              C26495 * C4048) *
                 C245) *
                C79306 * C79114) *
               C79072) *
              C78995 +
          ((((C26551 * C98 + C26495 * C169 + C26552 * C752 + C26496 * C862) *
                 C245 +
             (C26551 * C248 + C26495 * C565 + C26552 * C976 + C26496 * C1466) *
                 C79307) *
                C79306 * C79230 -
            ((C26552 * C4167 + C26496 * C4717 + C26551 * C1909 +
              C26495 * C2399) *
                 C79307 +
             (C26552 * C3933 + C26496 * C4049 + C26551 * C1685 +
              C26495 * C1795) *
                 C245) *
                C79306 * C79114) *
               C12991 +
           (((C26551 * C3933 + C26495 * C4049 + C26552 * C7477 +
              C26496 * C7580) *
                 C245 +
             (C26551 * C4167 + C26495 * C4717 + C26552 * C7686 +
              C26496 * C8199) *
                 C79307) *
                C79306 * C79114 -
            ((C26552 * C977 + C26496 * C1467 + C26551 * C976 + C26495 * C1466) *
                 C79307 +
             (C26552 * C753 + C26496 * C863 + C26551 * C752 + C26495 * C862) *
                 C245) *
                C79306 * C79230) *
               C79072) *
              C15086)) /
        (p * q * std::sqrt(p + q));
    d2eezz[28] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C631 * C96 + C639 + C639 + C79307 * C632) * C26495 +
             C27684 * C26496) *
                C79306 * C79230 -
            (C30551 * C26496 +
             (C631 * C1682 + C2509 + C2509 + C79307 * C2498) * C26495) *
                C79306 * C79114) *
               C12991 +
           ((C30551 * C26495 + C32468 * C26496) * C79306 * C79114 -
            (C27685 * C26496 + C27684 * C26495) * C79306 * C79230) *
               C79072) *
              C78986 +
          (((C2530 * C26495 + C4844 * C26496) * C79306 * C79114 -
            (C1597 * C26496 + C661 * C26495) * C79306 * C79230) *
               C12991 +
           ((C1597 * C26495 + C1598 * C26496) * C79306 * C79230 -
            (C8310 * C26496 + C4844 * C26495) * C79306 * C79114) *
               C79072) *
              C78995 +
          (((C662 * C26495 + C1599 * C26496) * C79306 * C79230 -
            (C4845 * C26496 + C2532 * C26495) * C79306 * C79114) *
               C12991 +
           ((C4845 * C26495 +
             (C631 * C7477 + C8307 + C8307 + C79307 * C8303) * C26496) *
                C79306 * C79114 -
            (C1600 * C26496 + C1599 * C26495) * C79306 * C79230) *
               C79072) *
              C15086)) /
        (p * q * std::sqrt(p + q));
    d2eexx[29] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C79307 * C26495 +
            C26970 * C26496) *
               C79027 * C12991 -
           (C26971 * C26496 + C26970 * C26495) * C79027 * C79072) *
              C79309 +
          ((C26972 * C26495 + C26973 * C26496) * C79027 * C79072 -
           (C26972 * C26496 + (C26497 * C97 + C26503 + C26503 + C79306 * C109) *
                                  C79307 * C26495) *
               C79027 * C12991) *
              C79299 +
          (((C26497 * C98 + C26504 + C26504 + C79306 * C110) * C79307 * C26495 +
            C26974 * C26496) *
               C79027 * C12991 -
           (C26975 * C26496 + C26974 * C26495) * C79027 * C79072) *
              C79283 +
          ((C28448 * C26495 +
            (C26497 * C755 + C28444 + C28444 + C79306 * C771) * C79307 *
                C26496) *
               C79027 * C79072 -
           (C28448 * C26496 + (C26497 * C99 + C26507 + C26507 + C79306 * C111) *
                                  C79307 * C26495) *
               C79027 * C12991) *
              C79263)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C79307 * C26495 +
            C26970 * C26496) *
               C79027 * C79310 -
           (C26971 * C26496 + C26970 * C26495) * C79027 * C79303 +
           (C26971 * C26495 + C31275 * C26496) * C79027 * C79290 -
           (C31276 * C26496 + C31275 * C26495) * C79027 * C79269) *
              C13595 +
          ((C26972 * C26495 + C26973 * C26496) * C79027 * C79303 -
           (C26972 * C26496 + (C26497 * C97 + C26503 + C26503 + C79306 * C109) *
                                  C79307 * C26495) *
               C79027 * C79310 -
           (C32542 * C26496 + C26973 * C26495) * C79027 * C79290 +
           (C32542 * C26495 +
            (C26497 * C5570 + C32538 + C32538 + C79306 * C5578) * C79307 *
                C26496) *
               C79027 * C79269) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eexy[29] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
                C26498 +
            (C26551 * C102 + C26495 * C173 + C26552 * C757 + C26496 * C867) *
                C79306) *
               C79307 * C79027 * C12991 -
           ((C26552 * C758 + C26496 * C868 + C26551 * C757 + C26495 * C867) *
                C79306 +
            (C26552 * C750 + C26496 * C860 + C26551 * C749 + C26495 * C859) *
                C26498) *
               C79307 * C79027 * C79072) *
              C79309 +
          (((C26551 * C748 + C26495 * C858 + C26552 * C751 + C26496 * C861) *
                C26498 +
            (C26551 * C756 + C26495 * C866 + C26552 * C759 + C26496 * C869) *
                C79306) *
               C79307 * C79027 * C79072 -
           ((C26552 * C756 + C26496 * C866 + C26551 * C103 + C26495 * C174) *
                C79306 +
            (C26552 * C748 + C26496 * C858 + C26551 * C97 + C26495 * C168) *
                C26498) *
               C79307 * C79027 * C12991) *
              C79299 +
          (((C26551 * C98 + C26495 * C169 + C26552 * C752 + C26496 * C862) *
                C26498 +
            (C26551 * C104 + C26495 * C175 + C26552 * C760 + C26496 * C870) *
                C79306) *
               C79307 * C79027 * C12991 -
           ((C26552 * C761 + C26496 * C871 + C26551 * C760 + C26495 * C870) *
                C79306 +
            (C26552 * C753 + C26496 * C863 + C26551 * C752 + C26495 * C862) *
                C26498) *
               C79307 * C79027 * C79072) *
              C79283 +
          (((C26551 * C754 + C26495 * C864 + C26552 * C755 + C26496 * C865) *
                C26498 +
            (C26551 * C762 + C26495 * C872 + C26552 * C763 + C26496 * C873) *
                C79306) *
               C79307 * C79027 * C79072 -
           ((C26552 * C762 + C26496 * C872 + C26551 * C105 + C26495 * C176) *
                C79306 +
            (C26552 * C754 + C26496 * C864 + C26551 * C99 + C26495 * C170) *
                C26498) *
               C79307 * C79027 * C12991) *
              C79263)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
                C26498 +
            (C26551 * C102 + C26495 * C173 + C26552 * C757 + C26496 * C867) *
                C79306) *
               C79307 * C79027 * C79310 -
           ((C26552 * C758 + C26496 * C868 + C26551 * C757 + C26495 * C867) *
                C79306 +
            (C26552 * C750 + C26496 * C860 + C26551 * C749 + C26495 * C859) *
                C26498) *
               C79307 * C79027 * C79303 +
           ((C26551 * C750 + C26495 * C860 + C26552 * C5568 + C26496 * C5626) *
                C26498 +
            (C26551 * C758 + C26495 * C868 + C26552 * C5572 + C26496 * C5630) *
                C79306) *
               C79307 * C79027 * C79290 -
           ((C26552 * C5573 + C26496 * C5631 + C26551 * C5572 +
             C26495 * C5630) *
                C79306 +
            (C26552 * C5569 + C26496 * C5627 + C26551 * C5568 +
             C26495 * C5626) *
                C26498) *
               C79307 * C79027 * C79269) *
              C13595 +
          (((C26551 * C748 + C26495 * C858 + C26552 * C751 + C26496 * C861) *
                C26498 +
            (C26551 * C756 + C26495 * C866 + C26552 * C759 + C26496 * C869) *
                C79306) *
               C79307 * C79027 * C79303 -
           ((C26552 * C756 + C26496 * C866 + C26551 * C103 + C26495 * C174) *
                C79306 +
            (C26552 * C748 + C26496 * C858 + C26551 * C97 + C26495 * C168) *
                C26498) *
               C79307 * C79027 * C79310 -
           ((C26552 * C5571 + C26496 * C5629 + C26551 * C759 + C26495 * C869) *
                C79306 +
            (C26552 * C5567 + C26496 * C5625 + C26551 * C751 + C26495 * C861) *
                C26498) *
               C79307 * C79027 * C79290 +
           ((C26551 * C5567 + C26495 * C5625 + C26552 * C5570 +
             C26496 * C5628) *
                C26498 +
            (C26551 * C5571 + C26495 * C5629 + C26552 * C5574 +
             C26496 * C5632) *
                C79306) *
               C79307 * C79027 * C79269) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eexz[29] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((((C245 * C96 + C79307 * C246) * C26498 +
                       (C245 * C102 + C79307 * C252) * C79306) *
                          C26495 +
                      (C27144 + C27145) * C26496) *
                         C79027 * C12991 -
                     ((C27146 + C27147) * C26496 + (C27145 + C27144) * C26495) *
                         C79027 * C79072) *
                        C79309 +
                    (((C27132 + C27133) * C26495 + (C27134 + C27135) * C26496) *
                         C79027 * C79072 -
                     ((C27133 + C27132) * C26496 +
                      (C276 * C79306 + C275 * C26498) * C26495) *
                         C79027 * C12991) *
                        C79299 +
                    (((C278 * C26498 + C277 * C79306) * C26495 +
                      (C27136 + C27137) * C26496) *
                         C79027 * C12991 -
                     ((C27138 + C27139) * C26496 + (C27137 + C27136) * C26495) *
                         C79027 * C79072) *
                        C79283 +
                    (((C28581 + C28582) * C26495 +
                      ((C245 * C755 + C79307 * C979) * C26498 +
                       (C245 * C763 + C79307 * C987) * C79306) *
                          C26496) *
                         C79027 * C79072 -
                     ((C28582 + C28581) * C26496 +
                      (C280 * C79306 + C279 * C26498) * C26495) *
                         C79027 * C12991) *
                        C79263)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((((C245 * C96 + C79307 * C246) * C26498 +
                       (C245 * C102 + C79307 * C252) * C79306) *
                          C26495 +
                      (C27144 + C27145) * C26496) *
                         C79027 * C79310 -
                     ((C27146 + C27147) * C26496 + (C27145 + C27144) * C26495) *
                         C79027 * C79303 +
                     ((C27147 + C27146) * C26495 + (C31377 + C31378) * C26496) *
                         C79027 * C79290 -
                     ((C31379 + C31380) * C26496 + (C31378 + C31377) * C26495) *
                         C79027 * C79269) *
                        C13595 +
                    (((C27132 + C27133) * C26495 + (C27134 + C27135) * C26496) *
                         C79027 * C79303 -
                     ((C27133 + C27132) * C26496 +
                      (C276 * C79306 + C275 * C26498) * C26495) *
                         C79027 * C79310 -
                     ((C32675 + C32676) * C26496 + (C27135 + C27134) * C26495) *
                         C79027 * C79290 +
                     ((C32676 + C32675) * C26495 +
                      ((C245 * C5570 + C79307 * C5678) * C26498 +
                       (C245 * C5574 + C79307 * C5682) * C79306) *
                          C26496) *
                         C79027 * C79269) *
                        C78992)) /
                      (p * q * std::sqrt(p + q));
    d2eeyx[29] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C26498 * C96 + C79306 * C102) * C26551 +
                      (C26498 * C167 + C79306 * C324) * C26495 +
                      C27246 * C26552 + C27247 * C26496) *
                         C79307 * C79027 * C12991 -
                     (C27248 * C26496 + C27249 * C26552 + C27247 * C26495 +
                      C27246 * C26551) *
                         C79307 * C79027 * C79072) *
                        C79309 +
                    ((C27250 * C26551 + C27251 * C26495 + C27252 * C26552 +
                      C27253 * C26496) *
                         C79307 * C79027 * C79072 -
                     (C27251 * C26496 + C27250 * C26552 +
                      (C26498 * C168 + C79306 * C325) * C26495 +
                      (C26498 * C97 + C79306 * C103) * C26551) *
                         C79307 * C79027 * C12991) *
                        C79299 +
                    (((C26498 * C98 + C79306 * C104) * C26551 +
                      (C26498 * C169 + C79306 * C326) * C26495 +
                      C27254 * C26552 + C27255 * C26496) *
                         C79307 * C79027 * C12991 -
                     (C27256 * C26496 + C27257 * C26552 + C27255 * C26495 +
                      C27254 * C26551) *
                         C79307 * C79027 * C79072) *
                        C79283 +
                    ((C28653 * C26551 + C28654 * C26495 +
                      (C26498 * C755 + C79306 * C763) * C26552 +
                      (C26498 * C865 + C79306 * C1093) * C26496) *
                         C79307 * C79027 * C79072 -
                     (C28654 * C26496 + C28653 * C26552 +
                      (C26498 * C170 + C79306 * C327) * C26495 +
                      (C26498 * C99 + C79306 * C105) * C26551) *
                         C79307 * C79027 * C12991) *
                        C79263)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C26498 * C96 + C79306 * C102) * C26551 +
                      (C26498 * C167 + C79306 * C324) * C26495 +
                      C27246 * C26552 + C27247 * C26496) *
                         C79307 * C79027 * C79310 -
                     (C27248 * C26496 + C27249 * C26552 + C27247 * C26495 +
                      C27246 * C26551) *
                         C79307 * C79027 * C79303 +
                     (C27249 * C26551 + C27248 * C26495 + C31432 * C26552 +
                      C31433 * C26496) *
                         C79307 * C79027 * C79290 -
                     (C31434 * C26496 + C31435 * C26552 + C31433 * C26495 +
                      C31432 * C26551) *
                         C79307 * C79027 * C79269) *
                        C13595 +
                    ((C27250 * C26551 + C27251 * C26495 + C27252 * C26552 +
                      C27253 * C26496) *
                         C79307 * C79027 * C79303 -
                     (C27251 * C26496 + C27250 * C26552 +
                      (C26498 * C168 + C79306 * C325) * C26495 +
                      (C26498 * C97 + C79306 * C103) * C26551) *
                         C79307 * C79027 * C79310 -
                     (C32747 * C26496 + C32748 * C26552 + C27253 * C26495 +
                      C27252 * C26551) *
                         C79307 * C79027 * C79290 +
                     (C32748 * C26551 + C32747 * C26495 +
                      (C26498 * C5570 + C79306 * C5574) * C26552 +
                      (C26498 * C5628 + C79306 * C5728) * C26496) *
                         C79307 * C79027 * C79269) *
                        C78992)) /
                      (p * q * std::sqrt(p + q));
    d2eeyy[29] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((C26679 * C96 + C26682 + C26682 + C26495 * C373 +
                      C26680 * C749 + C26683 + C26683 + C26496 * C1169) *
                         C79306 * C79307 * C79027 * C12991 -
                     (C26680 * C750 + C27332 + C27332 + C26496 * C1170 +
                      C26679 * C749 + C27333 + C27333 + C26495 * C1169) *
                         C79306 * C79307 * C79027 * C79072) *
                        C79309 +
                    ((C26679 * C748 + C27336 + C27336 + C26495 * C1168 +
                      C26680 * C751 + C27337 + C27337 + C26496 * C1171) *
                         C79306 * C79307 * C79027 * C79072 -
                     (C26680 * C748 + C26684 + C26684 + C26496 * C1168 +
                      C26679 * C97 + C26685 + C26685 + C26495 * C374) *
                         C79306 * C79307 * C79027 * C12991) *
                        C79299 +
                    ((C26679 * C98 + C26686 + C26686 + C26495 * C375 +
                      C26680 * C752 + C26687 + C26687 + C26496 * C1172) *
                         C79306 * C79307 * C79027 * C12991 -
                     (C26680 * C753 + C27340 + C27340 + C26496 * C1173 +
                      C26679 * C752 + C27341 + C27341 + C26495 * C1172) *
                         C79306 * C79307 * C79027 * C79072) *
                        C79283 +
                    ((C26679 * C754 + C28721 + C28721 + C26495 * C1174 +
                      C26680 * C755 + C28722 + C28722 + C26496 * C1175) *
                         C79306 * C79307 * C79027 * C79072 -
                     (C26680 * C754 + C26688 + C26688 + C26496 * C1174 +
                      C26679 * C99 + C26689 + C26689 + C26495 * C376) *
                         C79306 * C79307 * C79027 * C12991) *
                        C79263)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((C26679 * C96 + C26682 + C26682 + C26495 * C373 +
                      C26680 * C749 + C26683 + C26683 + C26496 * C1169) *
                         C79306 * C79307 * C79027 * C79310 -
                     (C26680 * C750 + C27332 + C27332 + C26496 * C1170 +
                      C26679 * C749 + C27333 + C27333 + C26495 * C1169) *
                         C79306 * C79307 * C79027 * C79303 +
                     (C26679 * C750 + C27334 + C27334 + C26495 * C1170 +
                      C26680 * C5568 + C27335 + C27335 + C26496 * C5772) *
                         C79306 * C79307 * C79027 * C79290 -
                     (C26680 * C5569 + C31479 + C31479 + C26496 * C5773 +
                      C26679 * C5568 + C31480 + C31480 + C26495 * C5772) *
                         C79306 * C79307 * C79027 * C79269) *
                        C13595 +
                    ((C26679 * C748 + C27336 + C27336 + C26495 * C1168 +
                      C26680 * C751 + C27337 + C27337 + C26496 * C1171) *
                         C79306 * C79307 * C79027 * C79303 -
                     (C26680 * C748 + C26684 + C26684 + C26496 * C1168 +
                      C26679 * C97 + C26685 + C26685 + C26495 * C374) *
                         C79306 * C79307 * C79027 * C79310 -
                     (C26680 * C5567 + C27338 + C27338 + C26496 * C5771 +
                      C26679 * C751 + C27339 + C27339 + C26495 * C1171) *
                         C79306 * C79307 * C79027 * C79290 +
                     (C26679 * C5567 + C32815 + C32815 + C26495 * C5771 +
                      C26680 * C5570 + C32816 + C32816 + C26496 * C5774) *
                         C79306 * C79307 * C79027 * C79269) *
                        C78992)) /
                      (p * q * std::sqrt(p + q));
    d2eeyz[29] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C245 * C96 + C79307 * C246) * C26551 +
            (C245 * C167 + C79307 * C447) * C26495 + C27140 * C26552 +
            C27422 * C26496) *
               C79306 * C79027 * C12991 -
           (C27423 * C26496 + C27143 * C26552 + C27422 * C26495 +
            C27140 * C26551) *
               C79306 * C79027 * C79072) *
              C79309 +
          ((C1006 * C26551 + C1299 * C26495 + C1007 * C26552 + C1300 * C26496) *
               C79306 * C79027 * C79072 -
           (C1299 * C26496 + C1006 * C26552 + C466 * C26495 + C275 * C26551) *
               C79306 * C79027 * C12991) *
              C79299 +
          ((C278 * C26551 + C467 * C26495 + C1009 * C26552 + C1301 * C26496) *
               C79306 * C79027 * C12991 -
           (C1302 * C26496 + C1012 * C26552 + C1301 * C26495 + C1009 * C26551) *
               C79306 * C79027 * C79072) *
              C79283 +
          ((C2762 * C26551 + C2973 * C26495 +
            (C245 * C755 + C79307 * C979) * C26552 +
            (C245 * C865 + C79307 * C1285) * C26496) *
               C79306 * C79027 * C79072 -
           (C2973 * C26496 + C2762 * C26552 + C468 * C26495 + C279 * C26551) *
               C79306 * C79027 * C12991) *
              C79263)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C245 * C96 + C79307 * C246) * C26551 +
            (C245 * C167 + C79307 * C447) * C26495 + C27140 * C26552 +
            C27422 * C26496) *
               C79306 * C79027 * C79310 -
           (C27423 * C26496 + C27143 * C26552 + C27422 * C26495 +
            C27140 * C26551) *
               C79306 * C79027 * C79303 +
           (C27143 * C26551 + C27423 * C26495 + C31373 * C26552 +
            C31530 * C26496) *
               C79306 * C79027 * C79290 -
           (C31531 * C26496 + C31376 * C26552 + C31530 * C26495 +
            C31373 * C26551) *
               C79306 * C79027 * C79269) *
              C13595 +
          ((C1006 * C26551 + C1299 * C26495 + C1007 * C26552 + C1300 * C26496) *
               C79306 * C79027 * C79303 -
           (C1299 * C26496 + C1006 * C26552 + C466 * C26495 + C275 * C26551) *
               C79306 * C79027 * C79310 -
           (C7165 * C26496 + C6954 * C26552 + C1300 * C26495 + C1007 * C26551) *
               C79306 * C79027 * C79290 +
           (C6954 * C26551 + C7165 * C26495 +
            (C245 * C5570 + C79307 * C5678) * C26552 +
            (C245 * C5628 + C79307 * C5824) * C26496) *
               C79306 * C79027 * C79269) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eezx[29] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((((C26498 * C96 + C79306 * C102) * C245 +
                       (C26498 * C246 + C79306 * C515) * C79307) *
                          C26495 +
                      (C27498 + C27522) * C26496) *
                         C79027 * C12991 -
                     ((C27523 + C27503) * C26496 + (C27522 + C27498) * C26495) *
                         C79027 * C79072) *
                        C79309 +
                    (((C27504 + C27524) * C26495 + (C27507 + C27525) * C26496) *
                         C79027 * C79072 -
                     ((C27524 + C27504) * C26496 +
                      ((C26498 * C247 + C79306 * C516) * C79307 +
                       (C26498 * C97 + C79306 * C103) * C245) *
                          C26495) *
                         C79027 * C12991) *
                        C79299 +
                    ((((C26498 * C98 + C79306 * C104) * C245 +
                       (C26498 * C248 + C79306 * C517) * C79307) *
                          C26495 +
                      (C27510 + C27526) * C26496) *
                         C79027 * C12991 -
                     ((C27527 + C27515) * C26496 + (C27526 + C27510) * C26495) *
                         C79027 * C79072) *
                        C79283 +
                    (((C28855 + C28859) * C26495 +
                      ((C26498 * C755 + C79306 * C763) * C245 +
                       (C26498 * C979 + C79306 * C1387) * C79307) *
                          C26496) *
                         C79027 * C79072 -
                     ((C28859 + C28855) * C26496 +
                      ((C26498 * C249 + C79306 * C518) * C79307 +
                       (C26498 * C99 + C79306 * C105) * C245) *
                          C26495) *
                         C79027 * C12991) *
                        C79263)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((((C26498 * C96 + C79306 * C102) * C245 +
                       (C26498 * C246 + C79306 * C515) * C79307) *
                          C26495 +
                      (C27498 + C27522) * C26496) *
                         C79027 * C79310 -
                     ((C27523 + C27503) * C26496 + (C27522 + C27498) * C26495) *
                         C79027 * C79303 +
                     ((C27503 + C27523) * C26495 + (C31575 + C31583) * C26496) *
                         C79027 * C79290 -
                     ((C31584 + C31580) * C26496 + (C31583 + C31575) * C26495) *
                         C79027 * C79269) *
                        C13595 +
                    (((C27504 + C27524) * C26495 + (C27507 + C27525) * C26496) *
                         C79027 * C79303 -
                     ((C27524 + C27504) * C26496 +
                      ((C26498 * C247 + C79306 * C516) * C79307 +
                       (C26498 * C97 + C79306 * C103) * C245) *
                          C26495) *
                         C79027 * C79310 -
                     ((C32953 + C32951) * C26496 + (C27525 + C27507) * C26495) *
                         C79027 * C79290 +
                     ((C32951 + C32953) * C26495 +
                      ((C26498 * C5570 + C79306 * C5574) * C245 +
                       (C26498 * C5678 + C79306 * C5870) * C79307) *
                          C26496) *
                         C79027 * C79269) *
                        C78992)) /
                      (p * q * std::sqrt(p + q));
    d2eezy[29] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
                C245 +
            (C26551 * C246 + C26495 * C563 + C26552 * C973 + C26496 * C1463) *
                C79307) *
               C79306 * C79027 * C12991 -
           ((C26552 * C974 + C26496 * C1464 + C26551 * C973 + C26495 * C1463) *
                C79307 +
            (C26552 * C750 + C26496 * C860 + C26551 * C749 + C26495 * C859) *
                C245) *
               C79306 * C79027 * C79072) *
              C79309 +
          (((C26551 * C748 + C26495 * C858 + C26552 * C751 + C26496 * C861) *
                C245 +
            (C26551 * C972 + C26495 * C1462 + C26552 * C975 + C26496 * C1465) *
                C79307) *
               C79306 * C79027 * C79072 -
           ((C26552 * C972 + C26496 * C1462 + C26551 * C247 + C26495 * C564) *
                C79307 +
            (C26552 * C748 + C26496 * C858 + C26551 * C97 + C26495 * C168) *
                C245) *
               C79306 * C79027 * C12991) *
              C79299 +
          (((C26551 * C98 + C26495 * C169 + C26552 * C752 + C26496 * C862) *
                C245 +
            (C26551 * C248 + C26495 * C565 + C26552 * C976 + C26496 * C1466) *
                C79307) *
               C79306 * C79027 * C12991 -
           ((C26552 * C977 + C26496 * C1467 + C26551 * C976 + C26495 * C1466) *
                C79307 +
            (C26552 * C753 + C26496 * C863 + C26551 * C752 + C26495 * C862) *
                C245) *
               C79306 * C79027 * C79072) *
              C79283 +
          (((C26551 * C754 + C26495 * C864 + C26552 * C755 + C26496 * C865) *
                C245 +
            (C26551 * C978 + C26495 * C1468 + C26552 * C979 + C26496 * C1469) *
                C79307) *
               C79306 * C79027 * C79072 -
           ((C26552 * C978 + C26496 * C1468 + C26551 * C249 + C26495 * C566) *
                C79307 +
            (C26552 * C754 + C26496 * C864 + C26551 * C99 + C26495 * C170) *
                C245) *
               C79306 * C79027 * C12991) *
              C79263)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
                C245 +
            (C26551 * C246 + C26495 * C563 + C26552 * C973 + C26496 * C1463) *
                C79307) *
               C79306 * C79027 * C79310 -
           ((C26552 * C974 + C26496 * C1464 + C26551 * C973 + C26495 * C1463) *
                C79307 +
            (C26552 * C750 + C26496 * C860 + C26551 * C749 + C26495 * C859) *
                C245) *
               C79306 * C79027 * C79303 +
           ((C26551 * C750 + C26495 * C860 + C26552 * C5568 + C26496 * C5626) *
                C245 +
            (C26551 * C974 + C26495 * C1464 + C26552 * C5676 + C26496 * C5914) *
                C79307) *
               C79306 * C79027 * C79290 -
           ((C26552 * C5677 + C26496 * C5915 + C26551 * C5676 +
             C26495 * C5914) *
                C79307 +
            (C26552 * C5569 + C26496 * C5627 + C26551 * C5568 +
             C26495 * C5626) *
                C245) *
               C79306 * C79027 * C79269) *
              C13595 +
          (((C26551 * C748 + C26495 * C858 + C26552 * C751 + C26496 * C861) *
                C245 +
            (C26551 * C972 + C26495 * C1462 + C26552 * C975 + C26496 * C1465) *
                C79307) *
               C79306 * C79027 * C79303 -
           ((C26552 * C972 + C26496 * C1462 + C26551 * C247 + C26495 * C564) *
                C79307 +
            (C26552 * C748 + C26496 * C858 + C26551 * C97 + C26495 * C168) *
                C245) *
               C79306 * C79027 * C79310 -
           ((C26552 * C5675 + C26496 * C5913 + C26551 * C975 + C26495 * C1465) *
                C79307 +
            (C26552 * C5567 + C26496 * C5625 + C26551 * C751 + C26495 * C861) *
                C245) *
               C79306 * C79027 * C79290 +
           ((C26551 * C5567 + C26495 * C5625 + C26552 * C5570 +
             C26496 * C5628) *
                C245 +
            (C26551 * C5675 + C26495 * C5913 + C26552 * C5678 +
             C26496 * C5916) *
                C79307) *
               C79306 * C79027 * C79269) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eezz[29] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C631 * C96 + C639 + C639 + C79307 * C632) * C26495 +
            C27684 * C26496) *
               C79306 * C79027 * C12991 -
           (C27685 * C26496 + C27684 * C26495) * C79306 * C79027 * C79072) *
              C79309 +
          ((C1597 * C26495 + C1598 * C26496) * C79306 * C79027 * C79072 -
           (C1597 * C26496 + C661 * C26495) * C79306 * C79027 * C12991) *
              C79299 +
          ((C662 * C26495 + C1599 * C26496) * C79306 * C79027 * C12991 -
           (C1600 * C26496 + C1599 * C26495) * C79306 * C79027 * C79072) *
              C79283 +
          ((C3186 * C26495 +
            (C631 * C755 + C1588 + C1588 + C79307 * C1571) * C26496) *
               C79306 * C79027 * C79072 -
           (C3186 * C26496 + C663 * C26495) * C79306 * C79027 * C12991) *
              C79263)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C631 * C96 + C639 + C639 + C79307 * C632) * C26495 +
            C27684 * C26496) *
               C79306 * C79027 * C79310 -
           (C27685 * C26496 + C27684 * C26495) * C79306 * C79027 * C79303 +
           (C27685 * C26495 + C31680 * C26496) * C79306 * C79027 * C79290 -
           (C31681 * C26496 + C31680 * C26495) * C79306 * C79027 * C79269) *
              C13595 +
          ((C1597 * C26495 + C1598 * C26496) * C79306 * C79027 * C79303 -
           (C1597 * C26496 + C661 * C26495) * C79306 * C79027 * C79310 -
           (C7378 * C26496 + C1598 * C26495) * C79306 * C79027 * C79290 +
           (C7378 * C26495 +
            (C631 * C5570 + C5967 + C5967 + C79307 * C5962) * C26496) *
               C79306 * C79027 * C79269) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eexx[30] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C26497 * C96 + C26500 + C26500 + C79306 * C108) *
                           C79307 * C26495 +
                       C26970 * C26496) *
                          C17509 -
                      (C29706 * C26496 +
                       (C26497 * C1682 + C27761 + C27761 + C79306 * C1698) *
                           C79307 * C26495) *
                          C79114) *
                         C79068 +
                     ((C29706 * C26495 + C31778 * C26496) * C79114 -
                      (C26971 * C26496 + C26970 * C26495) * C17509) *
                         C79075 +
                     ((C26971 * C26495 + C31275 * C26496) * C17509 -
                      (C34065 * C26496 + C31778 * C26495) * C79114) *
                         C15083) *
                        C79215 +
                    ((((C26497 * C1681 + C27764 + C27764 + C79306 * C1697) *
                           C79307 * C26495 +
                       C29707 * C26496) *
                          C79114 -
                      (C26972 * C26496 +
                       (C26497 * C97 + C26503 + C26503 + C79306 * C109) *
                           C79307 * C26495) *
                          C17509) *
                         C79068 +
                     ((C26972 * C26495 + C26973 * C26496) * C17509 -
                      (C33190 * C26496 + C29707 * C26495) * C79114) *
                         C79075 +
                     ((C33190 * C26495 +
                       (C26497 * C8378 + C33186 + C33186 + C79306 * C8382) *
                           C79307 * C26496) *
                          C79114 -
                      (C32542 * C26496 + C26973 * C26495) * C17509) *
                         C15083) *
                        C78992)) /
                  (p * q * std::sqrt(p + q));
    d2eexy[30] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
                 C26498 +
             (C26551 * C102 + C26495 * C173 + C26552 * C757 + C26496 * C867) *
                 C79306) *
                C79307 * C17509 -
            ((C26552 * C3935 + C26496 * C4051 + C26551 * C1690 +
              C26495 * C1800) *
                 C79306 +
             (C26552 * C3931 + C26496 * C4047 + C26551 * C1682 +
              C26495 * C1792) *
                 C26498) *
                C79307 * C79114) *
               C79068 +
           (((C26551 * C3931 + C26495 * C4047 + C26552 * C6044 +
              C26496 * C6142) *
                 C26498 +
             (C26551 * C3935 + C26495 * C4051 + C26552 * C6050 +
              C26496 * C6148) *
                 C79306) *
                C79307 * C79114 -
            ((C26552 * C758 + C26496 * C868 + C26551 * C757 + C26495 * C867) *
                 C79306 +
             (C26552 * C750 + C26496 * C860 + C26551 * C749 + C26495 * C859) *
                 C26498) *
                C79307 * C17509) *
               C79075 +
           (((C26551 * C750 + C26495 * C860 + C26552 * C5568 + C26496 * C5626) *
                 C26498 +
             (C26551 * C758 + C26495 * C868 + C26552 * C5572 + C26496 * C5630) *
                 C79306) *
                C79307 * C17509 -
            ((C26552 * C8379 + C26496 * C8453 + C26551 * C6050 +
              C26495 * C6148) *
                 C79306 +
             (C26552 * C8377 + C26496 * C8451 + C26551 * C6044 +
              C26495 * C6142) *
                 C26498) *
                C79307 * C79114) *
               C15083) *
              C79215 +
          ((((C26551 * C1681 + C26495 * C1791 + C26552 * C3932 +
              C26496 * C4048) *
                 C26498 +
             (C26551 * C1689 + C26495 * C1799 + C26552 * C3936 +
              C26496 * C4052) *
                 C79306) *
                C79307 * C79114 -
            ((C26552 * C756 + C26496 * C866 + C26551 * C103 + C26495 * C174) *
                 C79306 +
             (C26552 * C748 + C26496 * C858 + C26551 * C97 + C26495 * C168) *
                 C26498) *
                C79307 * C17509) *
               C79068 +
           (((C26551 * C748 + C26495 * C858 + C26552 * C751 + C26496 * C861) *
                 C26498 +
             (C26551 * C756 + C26495 * C866 + C26552 * C759 + C26496 * C869) *
                 C79306) *
                C79307 * C17509 -
            ((C26552 * C6049 + C26496 * C6147 + C26551 * C3936 +
              C26495 * C4052) *
                 C79306 +
             (C26552 * C6043 + C26496 * C6141 + C26551 * C3932 +
              C26495 * C4048) *
                 C26498) *
                C79307 * C79114) *
               C79075 +
           (((C26551 * C6043 + C26495 * C6141 + C26552 * C8378 +
              C26496 * C8452) *
                 C26498 +
             (C26551 * C6049 + C26495 * C6147 + C26552 * C8380 +
              C26496 * C8454) *
                 C79306) *
                C79307 * C79114 -
            ((C26552 * C5571 + C26496 * C5629 + C26551 * C759 + C26495 * C869) *
                 C79306 +
             (C26552 * C5567 + C26496 * C5625 + C26551 * C751 + C26495 * C861) *
                 C26498) *
                C79307 * C17509) *
               C15083) *
              C78992)) /
        (p * q * std::sqrt(p + q));
    d2eexz[30] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C245 * C96 + C79307 * C246) * C26498 +
              (C245 * C102 + C79307 * C252) * C79306) *
                 C26495 +
             (C27144 + C27145) * C26496) *
                C17509 -
            ((C29915 + C29916) * C26496 +
             ((C245 * C1690 + C79307 * C1914) * C79306 +
              (C245 * C1682 + C79307 * C1906) * C26498) *
                 C26495) *
                C79114) *
               C79068 +
           (((C29916 + C29915) * C26495 + (C31952 + C31953) * C26496) * C79114 -
            ((C27146 + C27147) * C26496 + (C27145 + C27144) * C26495) *
                C17509) *
               C79075 +
           (((C27147 + C27146) * C26495 + (C31377 + C31378) * C26496) * C17509 -
            ((C34208 + C34209) * C26496 + (C31953 + C31952) * C26495) *
                C79114) *
               C15083) *
              C79215 +
          ((((C1939 * C26498 + C1938 * C79306) * C26495 +
             (C29909 + C29910) * C26496) *
                C79114 -
            ((C27133 + C27132) * C26496 +
             (C276 * C79306 + C275 * C26498) * C26495) *
                C17509) *
               C79068 +
           (((C27132 + C27133) * C26495 + (C27134 + C27135) * C26496) * C17509 -
            ((C33387 + C33388) * C26496 + (C29910 + C29909) * C26495) *
                C79114) *
               C79075 +
           (((C33388 + C33387) * C26495 +
             ((C245 * C8378 + C79307 * C8522) * C26498 +
              (C245 * C8380 + C79307 * C8524) * C79306) *
                 C26496) *
                C79114 -
            ((C32675 + C32676) * C26496 + (C27135 + C27134) * C26495) *
                C17509) *
               C15083) *
              C78992)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[30] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C26498 * C96 + C79306 * C102) * C26551 +
                       (C26498 * C167 + C79306 * C324) * C26495 +
                       C27246 * C26552 + C27247 * C26496) *
                          C79307 * C17509 -
                      (C30027 * C26496 + C30028 * C26552 +
                       (C26498 * C1792 + C79306 * C2020) * C26495 +
                       (C26498 * C1682 + C79306 * C1690) * C26551) *
                          C79307 * C79114) *
                         C79068 +
                     ((C30028 * C26551 + C30027 * C26495 + C32045 * C26552 +
                       C32046 * C26496) *
                          C79307 * C79114 -
                      (C27248 * C26496 + C27249 * C26552 + C27247 * C26495 +
                       C27246 * C26551) *
                          C79307 * C17509) *
                         C79075 +
                     ((C27249 * C26551 + C27248 * C26495 + C31432 * C26552 +
                       C31433 * C26496) *
                          C79307 * C17509 -
                      (C34281 * C26496 + C34282 * C26552 + C32046 * C26495 +
                       C32045 * C26551) *
                          C79307 * C79114) *
                         C15083) *
                        C79215 +
                    ((((C26498 * C1681 + C79306 * C1689) * C26551 +
                       (C26498 * C1791 + C79306 * C2019) * C26495 +
                       C30029 * C26552 + C30030 * C26496) *
                          C79307 * C79114 -
                      (C27251 * C26496 + C27250 * C26552 +
                       (C26498 * C168 + C79306 * C325) * C26495 +
                       (C26498 * C97 + C79306 * C103) * C26551) *
                          C79307 * C17509) *
                         C79068 +
                     ((C27250 * C26551 + C27251 * C26495 + C27252 * C26552 +
                       C27253 * C26496) *
                          C79307 * C17509 -
                      (C33491 * C26496 + C33492 * C26552 + C30030 * C26495 +
                       C30029 * C26551) *
                          C79307 * C79114) *
                         C79075 +
                     ((C33492 * C26551 + C33491 * C26495 +
                       (C26498 * C8378 + C79306 * C8380) * C26552 +
                       (C26498 * C8452 + C79306 * C8592) * C26496) *
                          C79307 * C79114 -
                      (C32747 * C26496 + C32748 * C26552 + C27253 * C26495 +
                       C27252 * C26551) *
                          C79307 * C17509) *
                         C15083) *
                        C78992)) /
                  (p * q * std::sqrt(p + q));
    d2eeyy[30] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C26679 * C96 + C26682 + C26682 + C26495 * C373 +
                       C26680 * C749 + C26683 + C26683 + C26496 * C1169) *
                          C79306 * C79307 * C17509 -
                      (C26680 * C3931 + C28068 + C28068 + C26496 * C4385 +
                       C26679 * C1682 + C28069 + C28069 + C26495 * C2102) *
                          C79306 * C79307 * C79114) *
                         C79068 +
                     ((C26679 * C3931 + C30131 + C30131 + C26495 * C4385 +
                       C26680 * C6044 + C30132 + C30132 + C26496 * C6394) *
                          C79306 * C79307 * C79114 -
                      (C26680 * C750 + C27332 + C27332 + C26496 * C1170 +
                       C26679 * C749 + C27333 + C27333 + C26495 * C1169) *
                          C79306 * C79307 * C17509) *
                         C79075 +
                     ((C26679 * C750 + C27334 + C27334 + C26495 * C1170 +
                       C26680 * C5568 + C27335 + C27335 + C26496 * C5772) *
                          C79306 * C79307 * C17509 -
                      (C26680 * C8377 + C32126 + C32126 + C26496 * C8659 +
                       C26679 * C6044 + C32127 + C32127 + C26495 * C6394) *
                          C79306 * C79307 * C79114) *
                         C15083) *
                        C79215 +
                    (((C26679 * C1681 + C28072 + C28072 + C26495 * C2101 +
                       C26680 * C3932 + C28073 + C28073 + C26496 * C4386) *
                          C79306 * C79307 * C79114 -
                      (C26680 * C748 + C26684 + C26684 + C26496 * C1168 +
                       C26679 * C97 + C26685 + C26685 + C26495 * C374) *
                          C79306 * C79307 * C17509) *
                         C79068 +
                     ((C26679 * C748 + C27336 + C27336 + C26495 * C1168 +
                       C26680 * C751 + C27337 + C27337 + C26496 * C1171) *
                          C79306 * C79307 * C17509 -
                      (C26680 * C6043 + C30133 + C30133 + C26496 * C6393 +
                       C26679 * C3932 + C30134 + C30134 + C26495 * C4386) *
                          C79306 * C79307 * C79114) *
                         C79075 +
                     ((C26679 * C6043 + C33591 + C33591 + C26495 * C6393 +
                       C26680 * C8378 + C33592 + C33592 + C26496 * C8660) *
                          C79306 * C79307 * C79114 -
                      (C26680 * C5567 + C27338 + C27338 + C26496 * C5771 +
                       C26679 * C751 + C27339 + C27339 + C26495 * C1171) *
                          C79306 * C79307 * C17509) *
                         C15083) *
                        C78992)) /
                  (p * q * std::sqrt(p + q));
    d2eeyz[30] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C245 * C96 + C79307 * C246) * C26551 +
             (C245 * C167 + C79307 * C447) * C26495 + C27140 * C26552 +
             C27422 * C26496) *
                C79306 * C17509 -
            (C30237 * C26496 + C29914 * C26552 +
             (C245 * C1792 + C79307 * C2212) * C26495 +
             (C245 * C1682 + C79307 * C1906) * C26551) *
                C79306 * C79114) *
               C79068 +
           ((C29914 * C26551 + C30237 * C26495 + C31946 * C26552 +
             C32212 * C26496) *
                C79306 * C79114 -
            (C27423 * C26496 + C27143 * C26552 + C27422 * C26495 +
             C27140 * C26551) *
                C79306 * C17509) *
               C79075 +
           ((C27143 * C26551 + C27423 * C26495 + C31373 * C26552 +
             C31530 * C26496) *
                C79306 * C17509 -
            (C34421 * C26496 + C34207 * C26552 + C32212 * C26495 +
             C31946 * C26551) *
                C79306 * C79114) *
               C15083) *
              C79215 +
          (((C1939 * C26551 + C2232 * C26495 + C4182 * C26552 +
             C4512 * C26496) *
                C79306 * C79114 -
            (C1299 * C26496 + C1006 * C26552 + C466 * C26495 + C275 * C26551) *
                C79306 * C17509) *
               C79068 +
           ((C1006 * C26551 + C1299 * C26495 + C1007 * C26552 +
             C1300 * C26496) *
                C79306 * C17509 -
            (C8001 * C26496 + C7694 * C26552 + C4512 * C26495 +
             C4182 * C26551) *
                C79306 * C79114) *
               C79075 +
           ((C7694 * C26551 + C8001 * C26495 +
             (C245 * C8378 + C79307 * C8522) * C26552 +
             (C245 * C8452 + C79307 * C8730) * C26496) *
                C79306 * C79114 -
            (C7165 * C26496 + C6954 * C26552 + C1300 * C26495 +
             C1007 * C26551) *
                C79306 * C17509) *
               C15083) *
              C78992)) /
        (p * q * std::sqrt(p + q));
    d2eezx[30] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C26498 * C96 + C79306 * C102) * C245 +
              (C26498 * C246 + C79306 * C515) * C79307) *
                 C26495 +
             (C27498 + C27522) * C26496) *
                C17509 -
            ((C30348 + C30338) * C26496 +
             ((C26498 * C1906 + C79306 * C2314) * C79307 +
              (C26498 * C1682 + C79306 * C1690) * C245) *
                 C26495) *
                C79114) *
               C79068 +
           (((C30338 + C30348) * C26495 + (C32292 + C32302) * C26496) * C79114 -
            ((C27523 + C27503) * C26496 + (C27522 + C27498) * C26495) *
                C17509) *
               C79075 +
           (((C27503 + C27523) * C26495 + (C31575 + C31583) * C26496) * C17509 -
            ((C34493 + C34491) * C26496 + (C32302 + C32292) * C26495) *
                C79114) *
               C15083) *
              C79215 +
          (((((C26498 * C1681 + C79306 * C1689) * C245 +
              (C26498 * C1905 + C79306 * C2313) * C79307) *
                 C26495 +
             (C30339 + C30349) * C26496) *
                C79114 -
            ((C27524 + C27504) * C26496 +
             ((C26498 * C247 + C79306 * C516) * C79307 +
              (C26498 * C97 + C79306 * C103) * C245) *
                 C26495) *
                C17509) *
               C79068 +
           (((C27504 + C27524) * C26495 + (C27507 + C27525) * C26496) * C17509 -
            ((C33793 + C33791) * C26496 + (C30349 + C30339) * C26495) *
                C79114) *
               C79075 +
           (((C33791 + C33793) * C26495 +
             ((C26498 * C8378 + C79306 * C8380) * C245 +
              (C26498 * C8522 + C79306 * C8798) * C79307) *
                 C26496) *
                C79114 -
            ((C32953 + C32951) * C26496 + (C27525 + C27507) * C26495) *
                C17509) *
               C15083) *
              C78992)) /
        (p * q * std::sqrt(p + q));
    d2eezy[30] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
                 C245 +
             (C26551 * C246 + C26495 * C563 + C26552 * C973 + C26496 * C1463) *
                 C79307) *
                C79306 * C17509 -
            ((C26552 * C4165 + C26496 * C4715 + C26551 * C1906 +
              C26495 * C2396) *
                 C79307 +
             (C26552 * C3931 + C26496 * C4047 + C26551 * C1682 +
              C26495 * C1792) *
                 C245) *
                C79306 * C79114) *
               C79068 +
           (((C26551 * C3931 + C26495 * C4047 + C26552 * C6044 +
              C26496 * C6142) *
                 C245 +
             (C26551 * C4165 + C26495 * C4715 + C26552 * C6228 +
              C26496 * C6640) *
                 C79307) *
                C79306 * C79114 -
            ((C26552 * C974 + C26496 * C1464 + C26551 * C973 + C26495 * C1463) *
                 C79307 +
             (C26552 * C750 + C26496 * C860 + C26551 * C749 + C26495 * C859) *
                 C245) *
                C79306 * C17509) *
               C79075 +
           (((C26551 * C750 + C26495 * C860 + C26552 * C5568 + C26496 * C5626) *
                 C245 +
             (C26551 * C974 + C26495 * C1464 + C26552 * C5676 +
              C26496 * C5914) *
                 C79307) *
                C79306 * C17509 -
            ((C26552 * C8521 + C26496 * C8865 + C26551 * C6228 +
              C26495 * C6640) *
                 C79307 +
             (C26552 * C8377 + C26496 * C8451 + C26551 * C6044 +
              C26495 * C6142) *
                 C245) *
                C79306 * C79114) *
               C15083) *
              C79215 +
          ((((C26551 * C1681 + C26495 * C1791 + C26552 * C3932 +
              C26496 * C4048) *
                 C245 +
             (C26551 * C1905 + C26495 * C2395 + C26552 * C4166 +
              C26496 * C4716) *
                 C79307) *
                C79306 * C79114 -
            ((C26552 * C972 + C26496 * C1462 + C26551 * C247 + C26495 * C564) *
                 C79307 +
             (C26552 * C748 + C26496 * C858 + C26551 * C97 + C26495 * C168) *
                 C245) *
                C79306 * C17509) *
               C79068 +
           (((C26551 * C748 + C26495 * C858 + C26552 * C751 + C26496 * C861) *
                 C245 +
             (C26551 * C972 + C26495 * C1462 + C26552 * C975 + C26496 * C1465) *
                 C79307) *
                C79306 * C17509 -
            ((C26552 * C6227 + C26496 * C6639 + C26551 * C4166 +
              C26495 * C4716) *
                 C79307 +
             (C26552 * C6043 + C26496 * C6141 + C26551 * C3932 +
              C26495 * C4048) *
                 C245) *
                C79306 * C79114) *
               C79075 +
           (((C26551 * C6043 + C26495 * C6141 + C26552 * C8378 +
              C26496 * C8452) *
                 C245 +
             (C26551 * C6227 + C26495 * C6639 + C26552 * C8522 +
              C26496 * C8866) *
                 C79307) *
                C79306 * C79114 -
            ((C26552 * C5675 + C26496 * C5913 + C26551 * C975 +
              C26495 * C1465) *
                 C79307 +
             (C26552 * C5567 + C26496 * C5625 + C26551 * C751 + C26495 * C861) *
                 C245) *
                C79306 * C17509) *
               C15083) *
              C78992)) /
        (p * q * std::sqrt(p + q));
    d2eezz[30] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C631 * C96 + C639 + C639 + C79307 * C632) * C26495 +
             C27684 * C26496) *
                C79306 * C17509 -
            (C30551 * C26496 +
             (C631 * C1682 + C2509 + C2509 + C79307 * C2498) * C26495) *
                C79306 * C79114) *
               C79068 +
           ((C30551 * C26495 + C32468 * C26496) * C79306 * C79114 -
            (C27685 * C26496 + C27684 * C26495) * C79306 * C17509) *
               C79075 +
           ((C27685 * C26495 + C31680 * C26496) * C79306 * C17509 -
            (C34633 * C26496 + C32468 * C26495) * C79306 * C79114) *
               C15083) *
              C79215 +
          (((C2530 * C26495 + C4844 * C26496) * C79306 * C79114 -
            (C1597 * C26496 + C661 * C26495) * C79306 * C17509) *
               C79068 +
           ((C1597 * C26495 + C1598 * C26496) * C79306 * C17509 -
            (C8310 * C26496 + C4844 * C26495) * C79306 * C79114) *
               C79075 +
           ((C8310 * C26495 +
             (C631 * C8378 + C8937 + C8937 + C79307 * C8934) * C26496) *
                C79306 * C79114 -
            (C7378 * C26496 + C1598 * C26495) * C79306 * C17509) *
               C15083) *
              C78992)) /
        (p * q * std::sqrt(p + q));
    d2eexx[31] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C79307 * C26495 +
            C26970 * C26496) *
               C79110 -
           (C29706 * C26496 +
            (C26497 * C1682 + C27761 + C27761 + C79306 * C1698) * C79307 *
                C26495) *
               C79117 +
           ((C26497 * C1683 + C27762 + C27762 + C79306 * C1699) * C79307 *
                C26495 +
            C31777 * C26496) *
               C20477) *
              C79068 +
          ((C29706 * C26495 + C31778 * C26496) * C79117 -
           (C26971 * C26496 + C26970 * C26495) * C79110 -
           (C31779 * C26496 + C31777 * C26495) * C20477) *
              C79075 +
          ((C26971 * C26495 + C31275 * C26496) * C79110 -
           (C34065 * C26496 + C31778 * C26495) * C79117 +
           (C31779 * C26495 +
            (C26497 * C31755 + C31767 + C31767 + C79306 * C31757) * C79307 *
                C26496) *
               C20477) *
              C15083) *
         C78981) /
        (p * q * std::sqrt(p + q));
    d2eexy[31] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
                C26498 +
            (C26551 * C102 + C26495 * C173 + C26552 * C757 + C26496 * C867) *
                C79306) *
               C79307 * C79110 -
           ((C26552 * C3935 + C26496 * C4051 + C26551 * C1690 +
             C26495 * C1800) *
                C79306 +
            (C26552 * C3931 + C26496 * C4047 + C26551 * C1682 +
             C26495 * C1792) *
                C26498) *
               C79307 * C79117 +
           ((C26551 * C1683 + C26495 * C1793 + C26552 * C6042 +
             C26496 * C6140) *
                C26498 +
            (C26551 * C1691 + C26495 * C1801 + C26552 * C6048 +
             C26496 * C6146) *
                C79306) *
               C79307 * C20477) *
              C79068 +
          (((C26551 * C3931 + C26495 * C4047 + C26552 * C6044 +
             C26496 * C6142) *
                C26498 +
            (C26551 * C3935 + C26495 * C4051 + C26552 * C6050 +
             C26496 * C6148) *
                C79306) *
               C79307 * C79117 -
           ((C26552 * C758 + C26496 * C868 + C26551 * C757 + C26495 * C867) *
                C79306 +
            (C26552 * C750 + C26496 * C860 + C26551 * C749 + C26495 * C859) *
                C26498) *
               C79307 * C79110 -
           ((C26552 * C6051 + C26496 * C6149 + C26551 * C6048 +
             C26495 * C6146) *
                C79306 +
            (C26552 * C6045 + C26496 * C6143 + C26551 * C6042 +
             C26495 * C6140) *
                C26498) *
               C79307 * C20477) *
              C79075 +
          (((C26551 * C750 + C26495 * C860 + C26552 * C5568 + C26496 * C5626) *
                C26498 +
            (C26551 * C758 + C26495 * C868 + C26552 * C5572 + C26496 * C5630) *
                C79306) *
               C79307 * C79110 -
           ((C26552 * C8379 + C26496 * C8453 + C26551 * C6050 +
             C26495 * C6148) *
                C79306 +
            (C26552 * C8377 + C26496 * C8451 + C26551 * C6044 +
             C26495 * C6142) *
                C26498) *
               C79307 * C79117 +
           ((C26551 * C6045 + C26495 * C6143 + C26552 * C31755 +
             C26496 * C31853) *
                C26498 +
            (C26551 * C6051 + C26495 * C6149 + C26552 * C31756 +
             C26496 * C31854) *
                C79306) *
               C79307 * C20477) *
              C15083) *
         C78981) /
        (p * q * std::sqrt(p + q));
    d2eexz[31] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C245 * C96 + C79307 * C246) * C26498 +
             (C245 * C102 + C79307 * C252) * C79306) *
                C26495 +
            (C27144 + C27145) * C26496) *
               C79110 -
           ((C29915 + C29916) * C26496 +
            ((C245 * C1690 + C79307 * C1914) * C79306 +
             (C245 * C1682 + C79307 * C1906) * C26498) *
                C26495) *
               C79117 +
           (((C245 * C1683 + C79307 * C1907) * C26498 +
             (C245 * C1691 + C79307 * C1915) * C79306) *
                C26495 +
            (C31950 + C31951) * C26496) *
               C20477) *
              C79068 +
          (((C29916 + C29915) * C26495 + (C31952 + C31953) * C26496) * C79117 -
           ((C27146 + C27147) * C26496 + (C27145 + C27144) * C26495) * C79110 -
           ((C31954 + C31955) * C26496 + (C31951 + C31950) * C26495) * C20477) *
              C79075 +
          (((C27147 + C27146) * C26495 + (C31377 + C31378) * C26496) * C79110 -
           ((C34208 + C34209) * C26496 + (C31953 + C31952) * C26495) * C79117 +
           ((C31955 + C31954) * C26495 +
            ((C245 * C31755 + C79307 * C31929) * C26498 +
             (C245 * C31756 + C79307 * C31930) * C79306) *
                C26496) *
               C20477) *
              C15083) *
         C78981) /
        (p * q * std::sqrt(p + q));
    d2eeyx[31] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C26498 * C96 + C79306 * C102) * C26551 +
                      (C26498 * C167 + C79306 * C324) * C26495 +
                      C27246 * C26552 + C27247 * C26496) *
                         C79307 * C79110 -
                     (C30027 * C26496 + C30028 * C26552 +
                      (C26498 * C1792 + C79306 * C2020) * C26495 +
                      (C26498 * C1682 + C79306 * C1690) * C26551) *
                         C79307 * C79117 +
                     ((C26498 * C1683 + C79306 * C1691) * C26551 +
                      (C26498 * C1793 + C79306 * C2021) * C26495 +
                      C32043 * C26552 + C32044 * C26496) *
                         C79307 * C20477) *
                        C79068 +
                    ((C30028 * C26551 + C30027 * C26495 + C32045 * C26552 +
                      C32046 * C26496) *
                         C79307 * C79117 -
                     (C27248 * C26496 + C27249 * C26552 + C27247 * C26495 +
                      C27246 * C26551) *
                         C79307 * C79110 -
                     (C32047 * C26496 + C32048 * C26552 + C32044 * C26495 +
                      C32043 * C26551) *
                         C79307 * C20477) *
                        C79075 +
                    ((C27249 * C26551 + C27248 * C26495 + C31432 * C26552 +
                      C31433 * C26496) *
                         C79307 * C79110 -
                     (C34281 * C26496 + C34282 * C26552 + C32046 * C26495 +
                      C32045 * C26551) *
                         C79307 * C79117 +
                     (C32048 * C26551 + C32047 * C26495 +
                      (C26498 * C31755 + C79306 * C31756) * C26552 +
                      (C26498 * C31853 + C79306 * C32029) * C26496) *
                         C79307 * C20477) *
                        C15083) *
                   C78981) /
                  (p * q * std::sqrt(p + q));
    d2eeyy[31] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((C26679 * C96 + C26682 + C26682 + C26495 * C373 +
                      C26680 * C749 + C26683 + C26683 + C26496 * C1169) *
                         C79306 * C79307 * C79110 -
                     (C26680 * C3931 + C28068 + C28068 + C26496 * C4385 +
                      C26679 * C1682 + C28069 + C28069 + C26495 * C2102) *
                         C79306 * C79307 * C79117 +
                     (C26679 * C1683 + C28070 + C28070 + C26495 * C2103 +
                      C26680 * C6042 + C28071 + C28071 + C26496 * C6392) *
                         C79306 * C79307 * C20477) *
                        C79068 +
                    ((C26679 * C3931 + C30131 + C30131 + C26495 * C4385 +
                      C26680 * C6044 + C30132 + C30132 + C26496 * C6394) *
                         C79306 * C79307 * C79117 -
                     (C26680 * C750 + C27332 + C27332 + C26496 * C1170 +
                      C26679 * C749 + C27333 + C27333 + C26495 * C1169) *
                         C79306 * C79307 * C79110 -
                     (C26680 * C6045 + C32124 + C32124 + C26496 * C6395 +
                      C26679 * C6042 + C32125 + C32125 + C26495 * C6392) *
                         C79306 * C79307 * C20477) *
                        C79075 +
                    ((C26679 * C750 + C27334 + C27334 + C26495 * C1170 +
                      C26680 * C5568 + C27335 + C27335 + C26496 * C5772) *
                         C79306 * C79307 * C79110 -
                     (C26680 * C8377 + C32126 + C32126 + C26496 * C8659 +
                      C26679 * C6044 + C32127 + C32127 + C26495 * C6394) *
                         C79306 * C79307 * C79117 +
                     (C26679 * C6045 + C32128 + C32128 + C26495 * C6395 +
                      C26680 * C31755 + C32129 + C32129 + C26496 * C32122) *
                         C79306 * C79307 * C20477) *
                        C15083) *
                   C78981) /
                  (p * q * std::sqrt(p + q));
    d2eeyz[31] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C245 * C96 + C79307 * C246) * C26551 +
                      (C245 * C167 + C79307 * C447) * C26495 + C27140 * C26552 +
                      C27422 * C26496) *
                         C79306 * C79110 -
                     (C30237 * C26496 + C29914 * C26552 +
                      (C245 * C1792 + C79307 * C2212) * C26495 +
                      (C245 * C1682 + C79307 * C1906) * C26551) *
                         C79306 * C79117 +
                     ((C245 * C1683 + C79307 * C1907) * C26551 +
                      (C245 * C1793 + C79307 * C2213) * C26495 +
                      C31944 * C26552 + C32211 * C26496) *
                         C79306 * C20477) *
                        C79068 +
                    ((C29914 * C26551 + C30237 * C26495 + C31946 * C26552 +
                      C32212 * C26496) *
                         C79306 * C79117 -
                     (C27423 * C26496 + C27143 * C26552 + C27422 * C26495 +
                      C27140 * C26551) *
                         C79306 * C79110 -
                     (C32213 * C26496 + C31949 * C26552 + C32211 * C26495 +
                      C31944 * C26551) *
                         C79306 * C20477) *
                        C79075 +
                    ((C27143 * C26551 + C27423 * C26495 + C31373 * C26552 +
                      C31530 * C26496) *
                         C79306 * C79110 -
                     (C34421 * C26496 + C34207 * C26552 + C32212 * C26495 +
                      C31946 * C26551) *
                         C79306 * C79117 +
                     (C31949 * C26551 + C32213 * C26495 +
                      (C245 * C31755 + C79307 * C31929) * C26552 +
                      (C245 * C31853 + C79307 * C32203) * C26496) *
                         C79306 * C20477) *
                        C15083) *
                   C78981) /
                  (p * q * std::sqrt(p + q));
    d2eezx[31] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C26498 * C96 + C79306 * C102) * C245 +
             (C26498 * C246 + C79306 * C515) * C79307) *
                C26495 +
            (C27498 + C27522) * C26496) *
               C79110 -
           ((C30348 + C30338) * C26496 +
            ((C26498 * C1906 + C79306 * C2314) * C79307 +
             (C26498 * C1682 + C79306 * C1690) * C245) *
                C26495) *
               C79117 +
           (((C26498 * C1683 + C79306 * C1691) * C245 +
             (C26498 * C1907 + C79306 * C2315) * C79307) *
                C26495 +
            (C32289 + C32301) * C26496) *
               C20477) *
              C79068 +
          (((C30338 + C30348) * C26495 + (C32292 + C32302) * C26496) * C79117 -
           ((C27523 + C27503) * C26496 + (C27522 + C27498) * C26495) * C79110 -
           ((C32303 + C32297) * C26496 + (C32301 + C32289) * C26495) * C20477) *
              C79075 +
          (((C27503 + C27523) * C26495 + (C31575 + C31583) * C26496) * C79110 -
           ((C34493 + C34491) * C26496 + (C32302 + C32292) * C26495) * C79117 +
           ((C32297 + C32303) * C26495 +
            ((C26498 * C31755 + C79306 * C31756) * C245 +
             (C26498 * C31929 + C79306 * C32287) * C79307) *
                C26496) *
               C20477) *
              C15083) *
         C78981) /
        (p * q * std::sqrt(p + q));
    d2eezy[31] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
                C245 +
            (C26551 * C246 + C26495 * C563 + C26552 * C973 + C26496 * C1463) *
                C79307) *
               C79306 * C79110 -
           ((C26552 * C4165 + C26496 * C4715 + C26551 * C1906 +
             C26495 * C2396) *
                C79307 +
            (C26552 * C3931 + C26496 * C4047 + C26551 * C1682 +
             C26495 * C1792) *
                C245) *
               C79306 * C79117 +
           ((C26551 * C1683 + C26495 * C1793 + C26552 * C6042 +
             C26496 * C6140) *
                C245 +
            (C26551 * C1907 + C26495 * C2397 + C26552 * C6226 +
             C26496 * C6638) *
                C79307) *
               C79306 * C20477) *
              C79068 +
          (((C26551 * C3931 + C26495 * C4047 + C26552 * C6044 +
             C26496 * C6142) *
                C245 +
            (C26551 * C4165 + C26495 * C4715 + C26552 * C6228 +
             C26496 * C6640) *
                C79307) *
               C79306 * C79117 -
           ((C26552 * C974 + C26496 * C1464 + C26551 * C973 + C26495 * C1463) *
                C79307 +
            (C26552 * C750 + C26496 * C860 + C26551 * C749 + C26495 * C859) *
                C245) *
               C79306 * C79110 -
           ((C26552 * C6229 + C26496 * C6641 + C26551 * C6226 +
             C26495 * C6638) *
                C79307 +
            (C26552 * C6045 + C26496 * C6143 + C26551 * C6042 +
             C26495 * C6140) *
                C245) *
               C79306 * C20477) *
              C79075 +
          (((C26551 * C750 + C26495 * C860 + C26552 * C5568 + C26496 * C5626) *
                C245 +
            (C26551 * C974 + C26495 * C1464 + C26552 * C5676 + C26496 * C5914) *
                C79307) *
               C79306 * C79110 -
           ((C26552 * C8521 + C26496 * C8865 + C26551 * C6228 +
             C26495 * C6640) *
                C79307 +
            (C26552 * C8377 + C26496 * C8451 + C26551 * C6044 +
             C26495 * C6142) *
                C245) *
               C79306 * C79117 +
           ((C26551 * C6045 + C26495 * C6143 + C26552 * C31755 +
             C26496 * C31853) *
                C245 +
            (C26551 * C6229 + C26495 * C6641 + C26552 * C31929 +
             C26496 * C32377) *
                C79307) *
               C79306 * C20477) *
              C15083) *
         C78981) /
        (p * q * std::sqrt(p + q));
    d2eezz[31] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C631 * C96 + C639 + C639 + C79307 * C632) * C26495 +
            C27684 * C26496) *
               C79306 * C79110 -
           (C30551 * C26496 +
            (C631 * C1682 + C2509 + C2509 + C79307 * C2498) * C26495) *
               C79306 * C79117 +
           ((C631 * C1683 + C2510 + C2510 + C79307 * C2499) * C26495 +
            C32467 * C26496) *
               C79306 * C20477) *
              C79068 +
          ((C30551 * C26495 + C32468 * C26496) * C79306 * C79117 -
           (C27685 * C26496 + C27684 * C26495) * C79306 * C79110 -
           (C32469 * C26496 + C32467 * C26495) * C79306 * C20477) *
              C79075 +
          ((C27685 * C26495 + C31680 * C26496) * C79306 * C79110 -
           (C34633 * C26496 + C32468 * C26495) * C79306 * C79117 +
           (C32469 * C26495 +
            (C631 * C31755 + C32460 + C32460 + C79307 * C32452) * C26496) *
               C79306 * C20477) *
              C15083) *
         C78981) /
        (p * q * std::sqrt(p + q));
    d2eexx[32] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C79307 * C26495 +
            C26970 * C26496) *
               C17509 -
           (C29706 * C26496 +
            (C26497 * C1682 + C27761 + C27761 + C79306 * C1698) * C79307 *
                C26495) *
               C79114) *
              C79310 +
          ((C29706 * C26495 + C31778 * C26496) * C79114 -
           (C26971 * C26496 + C26970 * C26495) * C17509) *
              C79303 +
          ((C26971 * C26495 + C31275 * C26496) * C17509 -
           (C34065 * C26496 + C31778 * C26495) * C79114) *
              C79290 +
          ((C34065 * C26495 +
            (C26497 * C34055 + C34061 + C34061 + C79306 * C34057) * C79307 *
                C26496) *
               C79114 -
           (C31276 * C26496 + C31275 * C26495) * C17509) *
              C79269) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C79307 *
                 C26495 +
             C26970 * C26496) *
                C17509 -
            (C29706 * C26496 +
             (C26497 * C1682 + C27761 + C27761 + C79306 * C1698) * C79307 *
                 C26495) *
                C79114) *
               C12991 +
           ((C29706 * C26495 + C31778 * C26496) * C79114 -
            (C26971 * C26496 + C26970 * C26495) * C17509) *
               C79072) *
              C79297 +
          ((((C26497 * C1681 + C27764 + C27764 + C79306 * C1697) * C79307 *
                 C26495 +
             C29707 * C26496) *
                C79114 -
            (C26972 * C26496 +
             (C26497 * C97 + C26503 + C26503 + C79306 * C109) * C79307 *
                 C26495) *
                C17509) *
               C12991 +
           ((C26972 * C26495 + C26973 * C26496) * C17509 -
            (C33190 * C26496 + C29707 * C26495) * C79114) *
               C79072) *
              C79281 +
          ((((C26497 * C98 + C26504 + C26504 + C79306 * C110) * C79307 *
                 C26495 +
             C26974 * C26496) *
                C17509 -
            (C29708 * C26496 +
             (C26497 * C1685 + C27769 + C27769 + C79306 * C1701) * C79307 *
                 C26495) *
                C79114) *
               C12991 +
           ((C29708 * C26495 +
             (C26497 * C7477 + C29696 + C29696 + C79306 * C7479) * C79307 *
                 C26496) *
                C79114 -
            (C26975 * C26496 + C26974 * C26495) * C17509) *
               C79072) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C79307 * C26495 +
            C26970 * C26496) *
               C79311 -
           (C29706 * C26496 +
            (C26497 * C1682 + C27761 + C27761 + C79306 * C1698) * C79307 *
                C26495) *
               C79305 +
           ((C26497 * C1683 + C27762 + C27762 + C79306 * C1699) * C79307 *
                C26495 +
            C31777 * C26496) *
               C79293 -
           (C37943 * C26496 +
            (C26497 * C10320 + C36012 + C36012 + C79306 * C10328) * C79307 *
                C26495) *
               C79275) *
              C12991 +
          ((C29706 * C26495 + C31778 * C26496) * C79305 -
           (C26971 * C26496 + C26970 * C26495) * C79311 -
           (C31779 * C26496 + C31777 * C26495) * C79293 +
           (C37943 * C26495 +
            (C26497 * C37933 + C37939 + C37939 + C79306 * C37935) * C79307 *
                C26496) *
               C79275) *
              C79072) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eexy[32] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
                C26498 +
            (C26551 * C102 + C26495 * C173 + C26552 * C757 + C26496 * C867) *
                C79306) *
               C79307 * C17509 -
           ((C26552 * C3935 + C26496 * C4051 + C26551 * C1690 +
             C26495 * C1800) *
                C79306 +
            (C26552 * C3931 + C26496 * C4047 + C26551 * C1682 +
             C26495 * C1792) *
                C26498) *
               C79307 * C79114) *
              C79310 +
          (((C26551 * C3931 + C26495 * C4047 + C26552 * C6044 +
             C26496 * C6142) *
                C26498 +
            (C26551 * C3935 + C26495 * C4051 + C26552 * C6050 +
             C26496 * C6148) *
                C79306) *
               C79307 * C79114 -
           ((C26552 * C758 + C26496 * C868 + C26551 * C757 + C26495 * C867) *
                C79306 +
            (C26552 * C750 + C26496 * C860 + C26551 * C749 + C26495 * C859) *
                C26498) *
               C79307 * C17509) *
              C79303 +
          (((C26551 * C750 + C26495 * C860 + C26552 * C5568 + C26496 * C5626) *
                C26498 +
            (C26551 * C758 + C26495 * C868 + C26552 * C5572 + C26496 * C5630) *
                C79306) *
               C79307 * C17509 -
           ((C26552 * C8379 + C26496 * C8453 + C26551 * C6050 +
             C26495 * C6148) *
                C79306 +
            (C26552 * C8377 + C26496 * C8451 + C26551 * C6044 +
             C26495 * C6142) *
                C26498) *
               C79307 * C79114) *
              C79290 +
          (((C26551 * C8377 + C26495 * C8451 + C26552 * C34055 +
             C26496 * C34131) *
                C26498 +
            (C26551 * C8379 + C26495 * C8453 + C26552 * C34056 +
             C26496 * C34132) *
                C79306) *
               C79307 * C79114 -
           ((C26552 * C5573 + C26496 * C5631 + C26551 * C5572 +
             C26495 * C5630) *
                C79306 +
            (C26552 * C5569 + C26496 * C5627 + C26551 * C5568 +
             C26495 * C5626) *
                C26498) *
               C79307 * C17509) *
              C79269) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
                 C26498 +
             (C26551 * C102 + C26495 * C173 + C26552 * C757 + C26496 * C867) *
                 C79306) *
                C79307 * C17509 -
            ((C26552 * C3935 + C26496 * C4051 + C26551 * C1690 +
              C26495 * C1800) *
                 C79306 +
             (C26552 * C3931 + C26496 * C4047 + C26551 * C1682 +
              C26495 * C1792) *
                 C26498) *
                C79307 * C79114) *
               C12991 +
           (((C26551 * C3931 + C26495 * C4047 + C26552 * C6044 +
              C26496 * C6142) *
                 C26498 +
             (C26551 * C3935 + C26495 * C4051 + C26552 * C6050 +
              C26496 * C6148) *
                 C79306) *
                C79307 * C79114 -
            ((C26552 * C758 + C26496 * C868 + C26551 * C757 + C26495 * C867) *
                 C79306 +
             (C26552 * C750 + C26496 * C860 + C26551 * C749 + C26495 * C859) *
                 C26498) *
                C79307 * C17509) *
               C79072) *
              C79297 +
          ((((C26551 * C1681 + C26495 * C1791 + C26552 * C3932 +
              C26496 * C4048) *
                 C26498 +
             (C26551 * C1689 + C26495 * C1799 + C26552 * C3936 +
              C26496 * C4052) *
                 C79306) *
                C79307 * C79114 -
            ((C26552 * C756 + C26496 * C866 + C26551 * C103 + C26495 * C174) *
                 C79306 +
             (C26552 * C748 + C26496 * C858 + C26551 * C97 + C26495 * C168) *
                 C26498) *
                C79307 * C17509) *
               C12991 +
           (((C26551 * C748 + C26495 * C858 + C26552 * C751 + C26496 * C861) *
                 C26498 +
             (C26551 * C756 + C26495 * C866 + C26552 * C759 + C26496 * C869) *
                 C79306) *
                C79307 * C17509 -
            ((C26552 * C6049 + C26496 * C6147 + C26551 * C3936 +
              C26495 * C4052) *
                 C79306 +
             (C26552 * C6043 + C26496 * C6141 + C26551 * C3932 +
              C26495 * C4048) *
                 C26498) *
                C79307 * C79114) *
               C79072) *
              C79281 +
          ((((C26551 * C98 + C26495 * C169 + C26552 * C752 + C26496 * C862) *
                 C26498 +
             (C26551 * C104 + C26495 * C175 + C26552 * C760 + C26496 * C870) *
                 C79306) *
                C79307 * C17509 -
            ((C26552 * C3937 + C26496 * C4053 + C26551 * C1693 +
              C26495 * C1803) *
                 C79306 +
             (C26552 * C3933 + C26496 * C4049 + C26551 * C1685 +
              C26495 * C1795) *
                 C26498) *
                C79307 * C79114) *
               C12991 +
           (((C26551 * C3933 + C26495 * C4049 + C26552 * C7477 +
              C26496 * C7580) *
                 C26498 +
             (C26551 * C3937 + C26495 * C4053 + C26552 * C7478 +
              C26496 * C7581) *
                 C79306) *
                C79307 * C79114 -
            ((C26552 * C761 + C26496 * C871 + C26551 * C760 + C26495 * C870) *
                 C79306 +
             (C26552 * C753 + C26496 * C863 + C26551 * C752 + C26495 * C862) *
                 C26498) *
                C79307 * C17509) *
               C79072) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
                C26498 +
            (C26551 * C102 + C26495 * C173 + C26552 * C757 + C26496 * C867) *
                C79306) *
               C79307 * C79311 -
           ((C26552 * C3935 + C26496 * C4051 + C26551 * C1690 +
             C26495 * C1800) *
                C79306 +
            (C26552 * C3931 + C26496 * C4047 + C26551 * C1682 +
             C26495 * C1792) *
                C26498) *
               C79307 * C79305 +
           ((C26551 * C1683 + C26495 * C1793 + C26552 * C6042 +
             C26496 * C6140) *
                C26498 +
            (C26551 * C1691 + C26495 * C1801 + C26552 * C6048 +
             C26496 * C6146) *
                C79306) *
               C79307 * C79293 -
           ((C26552 * C12367 + C26496 * C12441 + C26551 * C10324 +
             C26495 * C10382) *
                C79306 +
            (C26552 * C12365 + C26496 * C12439 + C26551 * C10320 +
             C26495 * C10378) *
                C26498) *
               C79307 * C79275) *
              C12991 +
          (((C26551 * C3931 + C26495 * C4047 + C26552 * C6044 +
             C26496 * C6142) *
                C26498 +
            (C26551 * C3935 + C26495 * C4051 + C26552 * C6050 +
             C26496 * C6148) *
                C79306) *
               C79307 * C79305 -
           ((C26552 * C758 + C26496 * C868 + C26551 * C757 + C26495 * C867) *
                C79306 +
            (C26552 * C750 + C26496 * C860 + C26551 * C749 + C26495 * C859) *
                C26498) *
               C79307 * C79311 -
           ((C26552 * C6051 + C26496 * C6149 + C26551 * C6048 +
             C26495 * C6146) *
                C79306 +
            (C26552 * C6045 + C26496 * C6143 + C26551 * C6042 +
             C26495 * C6140) *
                C26498) *
               C79307 * C79293 +
           ((C26551 * C12365 + C26495 * C12439 + C26552 * C37933 +
             C26496 * C38009) *
                C26498 +
            (C26551 * C12367 + C26495 * C12441 + C26552 * C37934 +
             C26496 * C38010) *
                C79306) *
               C79307 * C79275) *
              C79072) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eexz[32] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C245 * C96 + C79307 * C246) * C26498 +
             (C245 * C102 + C79307 * C252) * C79306) *
                C26495 +
            (C27144 + C27145) * C26496) *
               C17509 -
           ((C29915 + C29916) * C26496 +
            ((C245 * C1690 + C79307 * C1914) * C79306 +
             (C245 * C1682 + C79307 * C1906) * C26498) *
                C26495) *
               C79114) *
              C79310 +
          (((C29916 + C29915) * C26495 + (C31952 + C31953) * C26496) * C79114 -
           ((C27146 + C27147) * C26496 + (C27145 + C27144) * C26495) * C17509) *
              C79303 +
          (((C27147 + C27146) * C26495 + (C31377 + C31378) * C26496) * C17509 -
           ((C34208 + C34209) * C26496 + (C31953 + C31952) * C26495) * C79114) *
              C79290 +
          (((C34209 + C34208) * C26495 +
            ((C245 * C34055 + C79307 * C34199) * C26498 +
             (C245 * C34056 + C79307 * C34200) * C79306) *
                C26496) *
               C79114 -
           ((C31379 + C31380) * C26496 + (C31378 + C31377) * C26495) * C17509) *
              C79269) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C245 * C96 + C79307 * C246) * C26498 +
              (C245 * C102 + C79307 * C252) * C79306) *
                 C26495 +
             (C27144 + C27145) * C26496) *
                C17509 -
            ((C29915 + C29916) * C26496 +
             ((C245 * C1690 + C79307 * C1914) * C79306 +
              (C245 * C1682 + C79307 * C1906) * C26498) *
                 C26495) *
                C79114) *
               C12991 +
           (((C29916 + C29915) * C26495 + (C31952 + C31953) * C26496) * C79114 -
            ((C27146 + C27147) * C26496 + (C27145 + C27144) * C26495) *
                C17509) *
               C79072) *
              C79297 +
          ((((C1939 * C26498 + C1938 * C79306) * C26495 +
             (C29909 + C29910) * C26496) *
                C79114 -
            ((C27133 + C27132) * C26496 +
             (C276 * C79306 + C275 * C26498) * C26495) *
                C17509) *
               C12991 +
           (((C27132 + C27133) * C26495 + (C27134 + C27135) * C26496) * C17509 -
            ((C33387 + C33388) * C26496 + (C29910 + C29909) * C26495) *
                C79114) *
               C79072) *
              C79281 +
          ((((C278 * C26498 + C277 * C79306) * C26495 +
             (C27136 + C27137) * C26496) *
                C17509 -
            ((C29911 + C29912) * C26496 +
             (C1943 * C79306 + C1942 * C26498) * C26495) *
                C79114) *
               C12991 +
           (((C29912 + C29911) * C26495 +
             ((C245 * C7477 + C79307 * C7686) * C26498 +
              (C245 * C7478 + C79307 * C7687) * C79306) *
                 C26496) *
                C79114 -
            ((C27138 + C27139) * C26496 + (C27137 + C27136) * C26495) *
                C17509) *
               C79072) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C245 * C96 + C79307 * C246) * C26498 +
             (C245 * C102 + C79307 * C252) * C79306) *
                C26495 +
            (C27144 + C27145) * C26496) *
               C79311 -
           ((C29915 + C29916) * C26496 +
            ((C245 * C1690 + C79307 * C1914) * C79306 +
             (C245 * C1682 + C79307 * C1906) * C26498) *
                C26495) *
               C79305 +
           (((C245 * C1683 + C79307 * C1907) * C26498 +
             (C245 * C1691 + C79307 * C1915) * C79306) *
                C26495 +
            (C31950 + C31951) * C26496) *
               C79293 -
           ((C38086 + C38087) * C26496 +
            ((C245 * C10324 + C79307 * C10432) * C79306 +
             (C245 * C10320 + C79307 * C10428) * C26498) *
                C26495) *
               C79275) *
              C12991 +
          (((C29916 + C29915) * C26495 + (C31952 + C31953) * C26496) * C79305 -
           ((C27146 + C27147) * C26496 + (C27145 + C27144) * C26495) * C79311 -
           ((C31954 + C31955) * C26496 + (C31951 + C31950) * C26495) * C79293 +
           ((C38087 + C38086) * C26495 +
            ((C245 * C37933 + C79307 * C38077) * C26498 +
             (C245 * C37934 + C79307 * C38078) * C79306) *
                C26496) *
               C79275) *
              C79072) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eeyx[32] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C26498 * C96 + C79306 * C102) * C26551 +
                      (C26498 * C167 + C79306 * C324) * C26495 +
                      C27246 * C26552 + C27247 * C26496) *
                         C79307 * C17509 -
                     (C30027 * C26496 + C30028 * C26552 +
                      (C26498 * C1792 + C79306 * C2020) * C26495 +
                      (C26498 * C1682 + C79306 * C1690) * C26551) *
                         C79307 * C79114) *
                        C79310 +
                    ((C30028 * C26551 + C30027 * C26495 + C32045 * C26552 +
                      C32046 * C26496) *
                         C79307 * C79114 -
                     (C27248 * C26496 + C27249 * C26552 + C27247 * C26495 +
                      C27246 * C26551) *
                         C79307 * C17509) *
                        C79303 +
                    ((C27249 * C26551 + C27248 * C26495 + C31432 * C26552 +
                      C31433 * C26496) *
                         C79307 * C17509 -
                     (C34281 * C26496 + C34282 * C26552 + C32046 * C26495 +
                      C32045 * C26551) *
                         C79307 * C79114) *
                        C79290 +
                    ((C34282 * C26551 + C34281 * C26495 +
                      (C26498 * C34055 + C79306 * C34056) * C26552 +
                      (C26498 * C34131 + C79306 * C34275) * C26496) *
                         C79307 * C79114 -
                     (C31434 * C26496 + C31435 * C26552 + C31433 * C26495 +
                      C31432 * C26551) *
                         C79307 * C17509) *
                        C79269) *
                   C78981) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((((C26498 * C96 + C79306 * C102) * C26551 +
                       (C26498 * C167 + C79306 * C324) * C26495 +
                       C27246 * C26552 + C27247 * C26496) *
                          C79307 * C17509 -
                      (C30027 * C26496 + C30028 * C26552 +
                       (C26498 * C1792 + C79306 * C2020) * C26495 +
                       (C26498 * C1682 + C79306 * C1690) * C26551) *
                          C79307 * C79114) *
                         C12991 +
                     ((C30028 * C26551 + C30027 * C26495 + C32045 * C26552 +
                       C32046 * C26496) *
                          C79307 * C79114 -
                      (C27248 * C26496 + C27249 * C26552 + C27247 * C26495 +
                       C27246 * C26551) *
                          C79307 * C17509) *
                         C79072) *
                        C79297 +
                    ((((C26498 * C1681 + C79306 * C1689) * C26551 +
                       (C26498 * C1791 + C79306 * C2019) * C26495 +
                       C30029 * C26552 + C30030 * C26496) *
                          C79307 * C79114 -
                      (C27251 * C26496 + C27250 * C26552 +
                       (C26498 * C168 + C79306 * C325) * C26495 +
                       (C26498 * C97 + C79306 * C103) * C26551) *
                          C79307 * C17509) *
                         C12991 +
                     ((C27250 * C26551 + C27251 * C26495 + C27252 * C26552 +
                       C27253 * C26496) *
                          C79307 * C17509 -
                      (C33491 * C26496 + C33492 * C26552 + C30030 * C26495 +
                       C30029 * C26551) *
                          C79307 * C79114) *
                         C79072) *
                        C79281 +
                    ((((C26498 * C98 + C79306 * C104) * C26551 +
                       (C26498 * C169 + C79306 * C326) * C26495 +
                       C27254 * C26552 + C27255 * C26496) *
                          C79307 * C17509 -
                      (C30031 * C26496 + C30032 * C26552 +
                       (C26498 * C1795 + C79306 * C2023) * C26495 +
                       (C26498 * C1685 + C79306 * C1693) * C26551) *
                          C79307 * C79114) *
                         C12991 +
                     ((C30032 * C26551 + C30031 * C26495 +
                       (C26498 * C7477 + C79306 * C7478) * C26552 +
                       (C26498 * C7580 + C79306 * C7792) * C26496) *
                          C79307 * C79114 -
                      (C27256 * C26496 + C27257 * C26552 + C27255 * C26495 +
                       C27254 * C26551) *
                          C79307 * C17509) *
                         C79072) *
                        C79253)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C26498 * C96 + C79306 * C102) * C26551 +
                      (C26498 * C167 + C79306 * C324) * C26495 +
                      C27246 * C26552 + C27247 * C26496) *
                         C79307 * C79311 -
                     (C30027 * C26496 + C30028 * C26552 +
                      (C26498 * C1792 + C79306 * C2020) * C26495 +
                      (C26498 * C1682 + C79306 * C1690) * C26551) *
                         C79307 * C79305 +
                     ((C26498 * C1683 + C79306 * C1691) * C26551 +
                      (C26498 * C1793 + C79306 * C2021) * C26495 +
                      C32043 * C26552 + C32044 * C26496) *
                         C79307 * C79293 -
                     (C38159 * C26496 + C38160 * C26552 +
                      (C26498 * C10378 + C79306 * C10478) * C26495 +
                      (C26498 * C10320 + C79306 * C10324) * C26551) *
                         C79307 * C79275) *
                        C12991 +
                    ((C30028 * C26551 + C30027 * C26495 + C32045 * C26552 +
                      C32046 * C26496) *
                         C79307 * C79305 -
                     (C27248 * C26496 + C27249 * C26552 + C27247 * C26495 +
                      C27246 * C26551) *
                         C79307 * C79311 -
                     (C32047 * C26496 + C32048 * C26552 + C32044 * C26495 +
                      C32043 * C26551) *
                         C79307 * C79293 +
                     (C38160 * C26551 + C38159 * C26495 +
                      (C26498 * C37933 + C79306 * C37934) * C26552 +
                      (C26498 * C38009 + C79306 * C38153) * C26496) *
                         C79307 * C79275) *
                        C79072) *
                   C78981) /
                      (p * q * std::sqrt(p + q));
    d2eeyy[32] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C26679 * C96 + C26682 + C26682 + C26495 * C373 +
                      C26680 * C749 + C26683 + C26683 + C26496 * C1169) *
                         C79306 * C79307 * C17509 -
                     (C26680 * C3931 + C28068 + C28068 + C26496 * C4385 +
                      C26679 * C1682 + C28069 + C28069 + C26495 * C2102) *
                         C79306 * C79307 * C79114) *
                        C79310 +
                    ((C26679 * C3931 + C30131 + C30131 + C26495 * C4385 +
                      C26680 * C6044 + C30132 + C30132 + C26496 * C6394) *
                         C79306 * C79307 * C79114 -
                     (C26680 * C750 + C27332 + C27332 + C26496 * C1170 +
                      C26679 * C749 + C27333 + C27333 + C26495 * C1169) *
                         C79306 * C79307 * C17509) *
                        C79303 +
                    ((C26679 * C750 + C27334 + C27334 + C26495 * C1170 +
                      C26680 * C5568 + C27335 + C27335 + C26496 * C5772) *
                         C79306 * C79307 * C17509 -
                     (C26680 * C8377 + C32126 + C32126 + C26496 * C8659 +
                      C26679 * C6044 + C32127 + C32127 + C26495 * C6394) *
                         C79306 * C79307 * C79114) *
                        C79290 +
                    ((C26679 * C8377 + C34350 + C34350 + C26495 * C8659 +
                      C26680 * C34055 + C34351 + C34351 + C26496 * C34348) *
                         C79306 * C79307 * C79114 -
                     (C26680 * C5569 + C31479 + C31479 + C26496 * C5773 +
                      C26679 * C5568 + C31480 + C31480 + C26495 * C5772) *
                         C79306 * C79307 * C17509) *
                        C79269) *
                   C78981) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C26679 * C96 + C26682 + C26682 + C26495 * C373 +
                       C26680 * C749 + C26683 + C26683 + C26496 * C1169) *
                          C79306 * C79307 * C17509 -
                      (C26680 * C3931 + C28068 + C28068 + C26496 * C4385 +
                       C26679 * C1682 + C28069 + C28069 + C26495 * C2102) *
                          C79306 * C79307 * C79114) *
                         C12991 +
                     ((C26679 * C3931 + C30131 + C30131 + C26495 * C4385 +
                       C26680 * C6044 + C30132 + C30132 + C26496 * C6394) *
                          C79306 * C79307 * C79114 -
                      (C26680 * C750 + C27332 + C27332 + C26496 * C1170 +
                       C26679 * C749 + C27333 + C27333 + C26495 * C1169) *
                          C79306 * C79307 * C17509) *
                         C79072) *
                        C79297 +
                    (((C26679 * C1681 + C28072 + C28072 + C26495 * C2101 +
                       C26680 * C3932 + C28073 + C28073 + C26496 * C4386) *
                          C79306 * C79307 * C79114 -
                      (C26680 * C748 + C26684 + C26684 + C26496 * C1168 +
                       C26679 * C97 + C26685 + C26685 + C26495 * C374) *
                          C79306 * C79307 * C17509) *
                         C12991 +
                     ((C26679 * C748 + C27336 + C27336 + C26495 * C1168 +
                       C26680 * C751 + C27337 + C27337 + C26496 * C1171) *
                          C79306 * C79307 * C17509 -
                      (C26680 * C6043 + C30133 + C30133 + C26496 * C6393 +
                       C26679 * C3932 + C30134 + C30134 + C26495 * C4386) *
                          C79306 * C79307 * C79114) *
                         C79072) *
                        C79281 +
                    (((C26679 * C98 + C26686 + C26686 + C26495 * C375 +
                       C26680 * C752 + C26687 + C26687 + C26496 * C1172) *
                          C79306 * C79307 * C17509 -
                      (C26680 * C3933 + C28076 + C28076 + C26496 * C4387 +
                       C26679 * C1685 + C28077 + C28077 + C26495 * C2105) *
                          C79306 * C79307 * C79114) *
                         C12991 +
                     ((C26679 * C3933 + C30135 + C30135 + C26495 * C4387 +
                       C26680 * C7477 + C30136 + C30136 + C26496 * C7891) *
                          C79306 * C79307 * C79114 -
                      (C26680 * C753 + C27340 + C27340 + C26496 * C1173 +
                       C26679 * C752 + C27341 + C27341 + C26495 * C1172) *
                          C79306 * C79307 * C17509) *
                         C79072) *
                        C79253)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((C26679 * C96 + C26682 + C26682 + C26495 * C373 +
                      C26680 * C749 + C26683 + C26683 + C26496 * C1169) *
                         C79306 * C79307 * C79311 -
                     (C26680 * C3931 + C28068 + C28068 + C26496 * C4385 +
                      C26679 * C1682 + C28069 + C28069 + C26495 * C2102) *
                         C79306 * C79307 * C79305 +
                     (C26679 * C1683 + C28070 + C28070 + C26495 * C2103 +
                      C26680 * C6042 + C28071 + C28071 + C26496 * C6392) *
                         C79306 * C79307 * C79293 -
                     (C26680 * C12365 + C36189 + C36189 + C26496 * C12647 +
                      C26679 * C10320 + C36190 + C36190 + C26495 * C10524) *
                         C79306 * C79307 * C79275) *
                        C12991 +
                    ((C26679 * C3931 + C30131 + C30131 + C26495 * C4385 +
                      C26680 * C6044 + C30132 + C30132 + C26496 * C6394) *
                         C79306 * C79307 * C79305 -
                     (C26680 * C750 + C27332 + C27332 + C26496 * C1170 +
                      C26679 * C749 + C27333 + C27333 + C26495 * C1169) *
                         C79306 * C79307 * C79311 -
                     (C26680 * C6045 + C32124 + C32124 + C26496 * C6395 +
                      C26679 * C6042 + C32125 + C32125 + C26495 * C6392) *
                         C79306 * C79307 * C79293 +
                     (C26679 * C12365 + C38228 + C38228 + C26495 * C12647 +
                      C26680 * C37933 + C38229 + C38229 + C26496 * C38226) *
                         C79306 * C79307 * C79275) *
                        C79072) *
                   C78981) /
                      (p * q * std::sqrt(p + q));
    d2eeyz[32] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C245 * C96 + C79307 * C246) * C26551 +
            (C245 * C167 + C79307 * C447) * C26495 + C27140 * C26552 +
            C27422 * C26496) *
               C79306 * C17509 -
           (C30237 * C26496 + C29914 * C26552 +
            (C245 * C1792 + C79307 * C2212) * C26495 +
            (C245 * C1682 + C79307 * C1906) * C26551) *
               C79306 * C79114) *
              C79310 +
          ((C29914 * C26551 + C30237 * C26495 + C31946 * C26552 +
            C32212 * C26496) *
               C79306 * C79114 -
           (C27423 * C26496 + C27143 * C26552 + C27422 * C26495 +
            C27140 * C26551) *
               C79306 * C17509) *
              C79303 +
          ((C27143 * C26551 + C27423 * C26495 + C31373 * C26552 +
            C31530 * C26496) *
               C79306 * C17509 -
           (C34421 * C26496 + C34207 * C26552 + C32212 * C26495 +
            C31946 * C26551) *
               C79306 * C79114) *
              C79290 +
          ((C34207 * C26551 + C34421 * C26495 +
            (C245 * C34055 + C79307 * C34199) * C26552 +
            (C245 * C34131 + C79307 * C34417) * C26496) *
               C79306 * C79114 -
           (C31531 * C26496 + C31376 * C26552 + C31530 * C26495 +
            C31373 * C26551) *
               C79306 * C17509) *
              C79269) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C245 * C96 + C79307 * C246) * C26551 +
             (C245 * C167 + C79307 * C447) * C26495 + C27140 * C26552 +
             C27422 * C26496) *
                C79306 * C17509 -
            (C30237 * C26496 + C29914 * C26552 +
             (C245 * C1792 + C79307 * C2212) * C26495 +
             (C245 * C1682 + C79307 * C1906) * C26551) *
                C79306 * C79114) *
               C12991 +
           ((C29914 * C26551 + C30237 * C26495 + C31946 * C26552 +
             C32212 * C26496) *
                C79306 * C79114 -
            (C27423 * C26496 + C27143 * C26552 + C27422 * C26495 +
             C27140 * C26551) *
                C79306 * C17509) *
               C79072) *
              C79297 +
          (((C1939 * C26551 + C2232 * C26495 + C4182 * C26552 +
             C4512 * C26496) *
                C79306 * C79114 -
            (C1299 * C26496 + C1006 * C26552 + C466 * C26495 + C275 * C26551) *
                C79306 * C17509) *
               C12991 +
           ((C1006 * C26551 + C1299 * C26495 + C1007 * C26552 +
             C1300 * C26496) *
                C79306 * C17509 -
            (C8001 * C26496 + C7694 * C26552 + C4512 * C26495 +
             C4182 * C26551) *
                C79306 * C79114) *
               C79072) *
              C79281 +
          (((C278 * C26551 + C467 * C26495 + C1009 * C26552 + C1301 * C26496) *
                C79306 * C17509 -
            (C4513 * C26496 + C4185 * C26552 + C2234 * C26495 +
             C1942 * C26551) *
                C79306 * C79114) *
               C12991 +
           ((C4185 * C26551 + C4513 * C26495 +
             (C245 * C7477 + C79307 * C7686) * C26552 +
             (C245 * C7580 + C79307 * C7996) * C26496) *
                C79306 * C79114 -
            (C1302 * C26496 + C1012 * C26552 + C1301 * C26495 +
             C1009 * C26551) *
                C79306 * C17509) *
               C79072) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C245 * C96 + C79307 * C246) * C26551 +
            (C245 * C167 + C79307 * C447) * C26495 + C27140 * C26552 +
            C27422 * C26496) *
               C79306 * C79311 -
           (C30237 * C26496 + C29914 * C26552 +
            (C245 * C1792 + C79307 * C2212) * C26495 +
            (C245 * C1682 + C79307 * C1906) * C26551) *
               C79306 * C79305 +
           ((C245 * C1683 + C79307 * C1907) * C26551 +
            (C245 * C1793 + C79307 * C2213) * C26495 + C31944 * C26552 +
            C32211 * C26496) *
               C79306 * C79293 -
           (C38299 * C26496 + C38085 * C26552 +
            (C245 * C10378 + C79307 * C10574) * C26495 +
            (C245 * C10320 + C79307 * C10428) * C26551) *
               C79306 * C79275) *
              C12991 +
          ((C29914 * C26551 + C30237 * C26495 + C31946 * C26552 +
            C32212 * C26496) *
               C79306 * C79305 -
           (C27423 * C26496 + C27143 * C26552 + C27422 * C26495 +
            C27140 * C26551) *
               C79306 * C79311 -
           (C32213 * C26496 + C31949 * C26552 + C32211 * C26495 +
            C31944 * C26551) *
               C79306 * C79293 +
           (C38085 * C26551 + C38299 * C26495 +
            (C245 * C37933 + C79307 * C38077) * C26552 +
            (C245 * C38009 + C79307 * C38295) * C26496) *
               C79306 * C79275) *
              C79072) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eezx[32] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C26498 * C96 + C79306 * C102) * C245 +
             (C26498 * C246 + C79306 * C515) * C79307) *
                C26495 +
            (C27498 + C27522) * C26496) *
               C17509 -
           ((C30348 + C30338) * C26496 +
            ((C26498 * C1906 + C79306 * C2314) * C79307 +
             (C26498 * C1682 + C79306 * C1690) * C245) *
                C26495) *
               C79114) *
              C79310 +
          (((C30338 + C30348) * C26495 + (C32292 + C32302) * C26496) * C79114 -
           ((C27523 + C27503) * C26496 + (C27522 + C27498) * C26495) * C17509) *
              C79303 +
          (((C27503 + C27523) * C26495 + (C31575 + C31583) * C26496) * C17509 -
           ((C34493 + C34491) * C26496 + (C32302 + C32292) * C26495) * C79114) *
              C79290 +
          (((C34491 + C34493) * C26495 +
            ((C26498 * C34055 + C79306 * C34056) * C245 +
             (C26498 * C34199 + C79306 * C34487) * C79307) *
                C26496) *
               C79114 -
           ((C31584 + C31580) * C26496 + (C31583 + C31575) * C26495) * C17509) *
              C79269) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C26498 * C96 + C79306 * C102) * C245 +
              (C26498 * C246 + C79306 * C515) * C79307) *
                 C26495 +
             (C27498 + C27522) * C26496) *
                C17509 -
            ((C30348 + C30338) * C26496 +
             ((C26498 * C1906 + C79306 * C2314) * C79307 +
              (C26498 * C1682 + C79306 * C1690) * C245) *
                 C26495) *
                C79114) *
               C12991 +
           (((C30338 + C30348) * C26495 + (C32292 + C32302) * C26496) * C79114 -
            ((C27523 + C27503) * C26496 + (C27522 + C27498) * C26495) *
                C17509) *
               C79072) *
              C79297 +
          (((((C26498 * C1681 + C79306 * C1689) * C245 +
              (C26498 * C1905 + C79306 * C2313) * C79307) *
                 C26495 +
             (C30339 + C30349) * C26496) *
                C79114 -
            ((C27524 + C27504) * C26496 +
             ((C26498 * C247 + C79306 * C516) * C79307 +
              (C26498 * C97 + C79306 * C103) * C245) *
                 C26495) *
                C17509) *
               C12991 +
           (((C27504 + C27524) * C26495 + (C27507 + C27525) * C26496) * C17509 -
            ((C33793 + C33791) * C26496 + (C30349 + C30339) * C26495) *
                C79114) *
               C79072) *
              C79281 +
          (((((C26498 * C98 + C79306 * C104) * C245 +
              (C26498 * C248 + C79306 * C517) * C79307) *
                 C26495 +
             (C27510 + C27526) * C26496) *
                C17509 -
            ((C30350 + C30344) * C26496 +
             ((C26498 * C1909 + C79306 * C2317) * C79307 +
              (C26498 * C1685 + C79306 * C1693) * C245) *
                 C26495) *
                C79114) *
               C12991 +
           (((C30344 + C30350) * C26495 +
             ((C26498 * C7477 + C79306 * C7478) * C245 +
              (C26498 * C7686 + C79306 * C8100) * C79307) *
                 C26496) *
                C79114 -
            ((C27527 + C27515) * C26496 + (C27526 + C27510) * C26495) *
                C17509) *
               C79072) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C26498 * C96 + C79306 * C102) * C245 +
             (C26498 * C246 + C79306 * C515) * C79307) *
                C26495 +
            (C27498 + C27522) * C26496) *
               C79311 -
           ((C30348 + C30338) * C26496 +
            ((C26498 * C1906 + C79306 * C2314) * C79307 +
             (C26498 * C1682 + C79306 * C1690) * C245) *
                C26495) *
               C79305 +
           (((C26498 * C1683 + C79306 * C1691) * C245 +
             (C26498 * C1907 + C79306 * C2315) * C79307) *
                C26495 +
            (C32289 + C32301) * C26496) *
               C79293 -
           ((C38371 + C38369) * C26496 +
            ((C26498 * C10428 + C79306 * C10620) * C79307 +
             (C26498 * C10320 + C79306 * C10324) * C245) *
                C26495) *
               C79275) *
              C12991 +
          (((C30338 + C30348) * C26495 + (C32292 + C32302) * C26496) * C79305 -
           ((C27523 + C27503) * C26496 + (C27522 + C27498) * C26495) * C79311 -
           ((C32303 + C32297) * C26496 + (C32301 + C32289) * C26495) * C79293 +
           ((C38369 + C38371) * C26495 +
            ((C26498 * C37933 + C79306 * C37934) * C245 +
             (C26498 * C38077 + C79306 * C38365) * C79307) *
                C26496) *
               C79275) *
              C79072) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eezy[32] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
                C245 +
            (C26551 * C246 + C26495 * C563 + C26552 * C973 + C26496 * C1463) *
                C79307) *
               C79306 * C17509 -
           ((C26552 * C4165 + C26496 * C4715 + C26551 * C1906 +
             C26495 * C2396) *
                C79307 +
            (C26552 * C3931 + C26496 * C4047 + C26551 * C1682 +
             C26495 * C1792) *
                C245) *
               C79306 * C79114) *
              C79310 +
          (((C26551 * C3931 + C26495 * C4047 + C26552 * C6044 +
             C26496 * C6142) *
                C245 +
            (C26551 * C4165 + C26495 * C4715 + C26552 * C6228 +
             C26496 * C6640) *
                C79307) *
               C79306 * C79114 -
           ((C26552 * C974 + C26496 * C1464 + C26551 * C973 + C26495 * C1463) *
                C79307 +
            (C26552 * C750 + C26496 * C860 + C26551 * C749 + C26495 * C859) *
                C245) *
               C79306 * C17509) *
              C79303 +
          (((C26551 * C750 + C26495 * C860 + C26552 * C5568 + C26496 * C5626) *
                C245 +
            (C26551 * C974 + C26495 * C1464 + C26552 * C5676 + C26496 * C5914) *
                C79307) *
               C79306 * C17509 -
           ((C26552 * C8521 + C26496 * C8865 + C26551 * C6228 +
             C26495 * C6640) *
                C79307 +
            (C26552 * C8377 + C26496 * C8451 + C26551 * C6044 +
             C26495 * C6142) *
                C245) *
               C79306 * C79114) *
              C79290 +
          (((C26551 * C8377 + C26495 * C8451 + C26552 * C34055 +
             C26496 * C34131) *
                C245 +
            (C26551 * C8521 + C26495 * C8865 + C26552 * C34199 +
             C26496 * C34559) *
                C79307) *
               C79306 * C79114 -
           ((C26552 * C5677 + C26496 * C5915 + C26551 * C5676 +
             C26495 * C5914) *
                C79307 +
            (C26552 * C5569 + C26496 * C5627 + C26551 * C5568 +
             C26495 * C5626) *
                C245) *
               C79306 * C17509) *
              C79269) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
                 C245 +
             (C26551 * C246 + C26495 * C563 + C26552 * C973 + C26496 * C1463) *
                 C79307) *
                C79306 * C17509 -
            ((C26552 * C4165 + C26496 * C4715 + C26551 * C1906 +
              C26495 * C2396) *
                 C79307 +
             (C26552 * C3931 + C26496 * C4047 + C26551 * C1682 +
              C26495 * C1792) *
                 C245) *
                C79306 * C79114) *
               C12991 +
           (((C26551 * C3931 + C26495 * C4047 + C26552 * C6044 +
              C26496 * C6142) *
                 C245 +
             (C26551 * C4165 + C26495 * C4715 + C26552 * C6228 +
              C26496 * C6640) *
                 C79307) *
                C79306 * C79114 -
            ((C26552 * C974 + C26496 * C1464 + C26551 * C973 + C26495 * C1463) *
                 C79307 +
             (C26552 * C750 + C26496 * C860 + C26551 * C749 + C26495 * C859) *
                 C245) *
                C79306 * C17509) *
               C79072) *
              C79297 +
          ((((C26551 * C1681 + C26495 * C1791 + C26552 * C3932 +
              C26496 * C4048) *
                 C245 +
             (C26551 * C1905 + C26495 * C2395 + C26552 * C4166 +
              C26496 * C4716) *
                 C79307) *
                C79306 * C79114 -
            ((C26552 * C972 + C26496 * C1462 + C26551 * C247 + C26495 * C564) *
                 C79307 +
             (C26552 * C748 + C26496 * C858 + C26551 * C97 + C26495 * C168) *
                 C245) *
                C79306 * C17509) *
               C12991 +
           (((C26551 * C748 + C26495 * C858 + C26552 * C751 + C26496 * C861) *
                 C245 +
             (C26551 * C972 + C26495 * C1462 + C26552 * C975 + C26496 * C1465) *
                 C79307) *
                C79306 * C17509 -
            ((C26552 * C6227 + C26496 * C6639 + C26551 * C4166 +
              C26495 * C4716) *
                 C79307 +
             (C26552 * C6043 + C26496 * C6141 + C26551 * C3932 +
              C26495 * C4048) *
                 C245) *
                C79306 * C79114) *
               C79072) *
              C79281 +
          ((((C26551 * C98 + C26495 * C169 + C26552 * C752 + C26496 * C862) *
                 C245 +
             (C26551 * C248 + C26495 * C565 + C26552 * C976 + C26496 * C1466) *
                 C79307) *
                C79306 * C17509 -
            ((C26552 * C4167 + C26496 * C4717 + C26551 * C1909 +
              C26495 * C2399) *
                 C79307 +
             (C26552 * C3933 + C26496 * C4049 + C26551 * C1685 +
              C26495 * C1795) *
                 C245) *
                C79306 * C79114) *
               C12991 +
           (((C26551 * C3933 + C26495 * C4049 + C26552 * C7477 +
              C26496 * C7580) *
                 C245 +
             (C26551 * C4167 + C26495 * C4717 + C26552 * C7686 +
              C26496 * C8199) *
                 C79307) *
                C79306 * C79114 -
            ((C26552 * C977 + C26496 * C1467 + C26551 * C976 + C26495 * C1466) *
                 C79307 +
             (C26552 * C753 + C26496 * C863 + C26551 * C752 + C26495 * C862) *
                 C245) *
                C79306 * C17509) *
               C79072) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
                C245 +
            (C26551 * C246 + C26495 * C563 + C26552 * C973 + C26496 * C1463) *
                C79307) *
               C79306 * C79311 -
           ((C26552 * C4165 + C26496 * C4715 + C26551 * C1906 +
             C26495 * C2396) *
                C79307 +
            (C26552 * C3931 + C26496 * C4047 + C26551 * C1682 +
             C26495 * C1792) *
                C245) *
               C79306 * C79305 +
           ((C26551 * C1683 + C26495 * C1793 + C26552 * C6042 +
             C26496 * C6140) *
                C245 +
            (C26551 * C1907 + C26495 * C2397 + C26552 * C6226 +
             C26496 * C6638) *
                C79307) *
               C79306 * C79293 -
           ((C26552 * C12509 + C26496 * C12853 + C26551 * C10428 +
             C26495 * C10666) *
                C79307 +
            (C26552 * C12365 + C26496 * C12439 + C26551 * C10320 +
             C26495 * C10378) *
                C245) *
               C79306 * C79275) *
              C12991 +
          (((C26551 * C3931 + C26495 * C4047 + C26552 * C6044 +
             C26496 * C6142) *
                C245 +
            (C26551 * C4165 + C26495 * C4715 + C26552 * C6228 +
             C26496 * C6640) *
                C79307) *
               C79306 * C79305 -
           ((C26552 * C974 + C26496 * C1464 + C26551 * C973 + C26495 * C1463) *
                C79307 +
            (C26552 * C750 + C26496 * C860 + C26551 * C749 + C26495 * C859) *
                C245) *
               C79306 * C79311 -
           ((C26552 * C6229 + C26496 * C6641 + C26551 * C6226 +
             C26495 * C6638) *
                C79307 +
            (C26552 * C6045 + C26496 * C6143 + C26551 * C6042 +
             C26495 * C6140) *
                C245) *
               C79306 * C79293 +
           ((C26551 * C12365 + C26495 * C12439 + C26552 * C37933 +
             C26496 * C38009) *
                C245 +
            (C26551 * C12509 + C26495 * C12853 + C26552 * C38077 +
             C26496 * C38437) *
                C79307) *
               C79306 * C79275) *
              C79072) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eezz[32] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C631 * C96 + C639 + C639 + C79307 * C632) * C26495 +
            C27684 * C26496) *
               C79306 * C17509 -
           (C30551 * C26496 +
            (C631 * C1682 + C2509 + C2509 + C79307 * C2498) * C26495) *
               C79306 * C79114) *
              C79310 +
          ((C30551 * C26495 + C32468 * C26496) * C79306 * C79114 -
           (C27685 * C26496 + C27684 * C26495) * C79306 * C17509) *
              C79303 +
          ((C27685 * C26495 + C31680 * C26496) * C79306 * C17509 -
           (C34633 * C26496 + C32468 * C26495) * C79306 * C79114) *
              C79290 +
          ((C34633 * C26495 +
            (C631 * C34055 + C34630 + C34630 + C79307 * C34626) * C26496) *
               C79306 * C79114 -
           (C31681 * C26496 + C31680 * C26495) * C79306 * C17509) *
              C79269) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C631 * C96 + C639 + C639 + C79307 * C632) * C26495 +
             C27684 * C26496) *
                C79306 * C17509 -
            (C30551 * C26496 +
             (C631 * C1682 + C2509 + C2509 + C79307 * C2498) * C26495) *
                C79306 * C79114) *
               C12991 +
           ((C30551 * C26495 + C32468 * C26496) * C79306 * C79114 -
            (C27685 * C26496 + C27684 * C26495) * C79306 * C17509) *
               C79072) *
              C79297 +
          (((C2530 * C26495 + C4844 * C26496) * C79306 * C79114 -
            (C1597 * C26496 + C661 * C26495) * C79306 * C17509) *
               C12991 +
           ((C1597 * C26495 + C1598 * C26496) * C79306 * C17509 -
            (C8310 * C26496 + C4844 * C26495) * C79306 * C79114) *
               C79072) *
              C79281 +
          (((C662 * C26495 + C1599 * C26496) * C79306 * C17509 -
            (C4845 * C26496 + C2532 * C26495) * C79306 * C79114) *
               C12991 +
           ((C4845 * C26495 +
             (C631 * C7477 + C8307 + C8307 + C79307 * C8303) * C26496) *
                C79306 * C79114 -
            (C1600 * C26496 + C1599 * C26495) * C79306 * C17509) *
               C79072) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C631 * C96 + C639 + C639 + C79307 * C632) * C26495 +
            C27684 * C26496) *
               C79306 * C79311 -
           (C30551 * C26496 +
            (C631 * C1682 + C2509 + C2509 + C79307 * C2498) * C26495) *
               C79306 * C79305 +
           ((C631 * C1683 + C2510 + C2510 + C79307 * C2499) * C26495 +
            C32467 * C26496) *
               C79306 * C79293 -
           (C38511 * C26496 +
            (C631 * C10320 + C10717 + C10717 + C79307 * C10712) * C26495) *
               C79306 * C79275) *
              C12991 +
          ((C30551 * C26495 + C32468 * C26496) * C79306 * C79305 -
           (C27685 * C26496 + C27684 * C26495) * C79306 * C79311 -
           (C32469 * C26496 + C32467 * C26495) * C79306 * C79293 +
           (C38511 * C26495 +
            (C631 * C37933 + C38508 + C38508 + C79307 * C38504) * C26496) *
               C79306 * C79275) *
              C79072) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eexx[33] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C26497 * C96 + C26500 + C26500 + C79306 * C108) *
                           C79307 * C26495 +
                       C26970 * C26496) *
                          C79110 -
                      (C29706 * C26496 +
                       (C26497 * C1682 + C27761 + C27761 + C79306 * C1698) *
                           C79307 * C26495) *
                          C79117 +
                      ((C26497 * C1683 + C27762 + C27762 + C79306 * C1699) *
                           C79307 * C26495 +
                       C31777 * C26496) *
                          C20477) *
                         C12991 +
                     ((C29706 * C26495 + C31778 * C26496) * C79117 -
                      (C26971 * C26496 + C26970 * C26495) * C79110 -
                      (C31779 * C26496 + C31777 * C26495) * C20477) *
                         C79072) *
                        C79215 +
                    ((((C26497 * C1681 + C27764 + C27764 + C79306 * C1697) *
                           C79307 * C26495 +
                       C29707 * C26496) *
                          C79117 -
                      (C26972 * C26496 +
                       (C26497 * C97 + C26503 + C26503 + C79306 * C109) *
                           C79307 * C26495) *
                          C79110 -
                      (C36470 * C26496 +
                       (C26497 * C1684 + C27767 + C27767 + C79306 * C1700) *
                           C79307 * C26495) *
                          C20477) *
                         C12991 +
                     ((C26972 * C26495 + C26973 * C26496) * C79110 -
                      (C33190 * C26496 + C29707 * C26495) * C79117 +
                      (C36470 * C26495 +
                       (C26497 * C6046 + C36466 + C36466 + C79306 * C6058) *
                           C79307 * C26496) *
                          C20477) *
                         C79072) *
                        C78992)) /
                  (p * q * std::sqrt(p + q));
    d2eexy[33] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
                 C26498 +
             (C26551 * C102 + C26495 * C173 + C26552 * C757 + C26496 * C867) *
                 C79306) *
                C79307 * C79110 -
            ((C26552 * C3935 + C26496 * C4051 + C26551 * C1690 +
              C26495 * C1800) *
                 C79306 +
             (C26552 * C3931 + C26496 * C4047 + C26551 * C1682 +
              C26495 * C1792) *
                 C26498) *
                C79307 * C79117 +
            ((C26551 * C1683 + C26495 * C1793 + C26552 * C6042 +
              C26496 * C6140) *
                 C26498 +
             (C26551 * C1691 + C26495 * C1801 + C26552 * C6048 +
              C26496 * C6146) *
                 C79306) *
                C79307 * C20477) *
               C12991 +
           (((C26551 * C3931 + C26495 * C4047 + C26552 * C6044 +
              C26496 * C6142) *
                 C26498 +
             (C26551 * C3935 + C26495 * C4051 + C26552 * C6050 +
              C26496 * C6148) *
                 C79306) *
                C79307 * C79117 -
            ((C26552 * C758 + C26496 * C868 + C26551 * C757 + C26495 * C867) *
                 C79306 +
             (C26552 * C750 + C26496 * C860 + C26551 * C749 + C26495 * C859) *
                 C26498) *
                C79307 * C79110 -
            ((C26552 * C6051 + C26496 * C6149 + C26551 * C6048 +
              C26495 * C6146) *
                 C79306 +
             (C26552 * C6045 + C26496 * C6143 + C26551 * C6042 +
              C26495 * C6140) *
                 C26498) *
                C79307 * C20477) *
               C79072) *
              C79215 +
          ((((C26551 * C1681 + C26495 * C1791 + C26552 * C3932 +
              C26496 * C4048) *
                 C26498 +
             (C26551 * C1689 + C26495 * C1799 + C26552 * C3936 +
              C26496 * C4052) *
                 C79306) *
                C79307 * C79117 -
            ((C26552 * C756 + C26496 * C866 + C26551 * C103 + C26495 * C174) *
                 C79306 +
             (C26552 * C748 + C26496 * C858 + C26551 * C97 + C26495 * C168) *
                 C26498) *
                C79307 * C79110 -
            ((C26552 * C6047 + C26496 * C6145 + C26551 * C1692 +
              C26495 * C1802) *
                 C79306 +
             (C26552 * C6041 + C26496 * C6139 + C26551 * C1684 +
              C26495 * C1794) *
                 C26498) *
                C79307 * C20477) *
               C12991 +
           (((C26551 * C748 + C26495 * C858 + C26552 * C751 + C26496 * C861) *
                 C26498 +
             (C26551 * C756 + C26495 * C866 + C26552 * C759 + C26496 * C869) *
                 C79306) *
                C79307 * C79110 -
            ((C26552 * C6049 + C26496 * C6147 + C26551 * C3936 +
              C26495 * C4052) *
                 C79306 +
             (C26552 * C6043 + C26496 * C6141 + C26551 * C3932 +
              C26495 * C4048) *
                 C26498) *
                C79307 * C79117 +
            ((C26551 * C6041 + C26495 * C6139 + C26552 * C6046 +
              C26496 * C6144) *
                 C26498 +
             (C26551 * C6047 + C26495 * C6145 + C26552 * C6052 +
              C26496 * C6150) *
                 C79306) *
                C79307 * C20477) *
               C79072) *
              C78992)) /
        (p * q * std::sqrt(p + q));
    d2eexz[33] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C245 * C96 + C79307 * C246) * C26498 +
              (C245 * C102 + C79307 * C252) * C79306) *
                 C26495 +
             (C27144 + C27145) * C26496) *
                C79110 -
            ((C29915 + C29916) * C26496 +
             ((C245 * C1690 + C79307 * C1914) * C79306 +
              (C245 * C1682 + C79307 * C1906) * C26498) *
                 C26495) *
                C79117 +
            (((C245 * C1683 + C79307 * C1907) * C26498 +
              (C245 * C1691 + C79307 * C1915) * C79306) *
                 C26495 +
             (C31950 + C31951) * C26496) *
                C20477) *
               C12991 +
           (((C29916 + C29915) * C26495 + (C31952 + C31953) * C26496) * C79117 -
            ((C27146 + C27147) * C26496 + (C27145 + C27144) * C26495) * C79110 -
            ((C31954 + C31955) * C26496 + (C31951 + C31950) * C26495) *
                C20477) *
               C79072) *
              C79215 +
          ((((C1939 * C26498 + C1938 * C79306) * C26495 +
             (C29909 + C29910) * C26496) *
                C79117 -
            ((C27133 + C27132) * C26496 +
             (C276 * C79306 + C275 * C26498) * C26495) *
                C79110 -
            ((C36667 + C36668) * C26496 +
             (C1941 * C79306 + C1940 * C26498) * C26495) *
                C20477) *
               C12991 +
           (((C27132 + C27133) * C26495 + (C27134 + C27135) * C26496) * C79110 -
            ((C33387 + C33388) * C26496 + (C29910 + C29909) * C26495) * C79117 +
            ((C36668 + C36667) * C26495 +
             ((C245 * C6046 + C79307 * C6230) * C26498 +
              (C245 * C6052 + C79307 * C6236) * C79306) *
                 C26496) *
                C20477) *
               C79072) *
              C78992)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[33] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C26498 * C96 + C79306 * C102) * C26551 +
                       (C26498 * C167 + C79306 * C324) * C26495 +
                       C27246 * C26552 + C27247 * C26496) *
                          C79307 * C79110 -
                      (C30027 * C26496 + C30028 * C26552 +
                       (C26498 * C1792 + C79306 * C2020) * C26495 +
                       (C26498 * C1682 + C79306 * C1690) * C26551) *
                          C79307 * C79117 +
                      ((C26498 * C1683 + C79306 * C1691) * C26551 +
                       (C26498 * C1793 + C79306 * C2021) * C26495 +
                       C32043 * C26552 + C32044 * C26496) *
                          C79307 * C20477) *
                         C12991 +
                     ((C30028 * C26551 + C30027 * C26495 + C32045 * C26552 +
                       C32046 * C26496) *
                          C79307 * C79117 -
                      (C27248 * C26496 + C27249 * C26552 + C27247 * C26495 +
                       C27246 * C26551) *
                          C79307 * C79110 -
                      (C32047 * C26496 + C32048 * C26552 + C32044 * C26495 +
                       C32043 * C26551) *
                          C79307 * C20477) *
                         C79072) *
                        C79215 +
                    ((((C26498 * C1681 + C79306 * C1689) * C26551 +
                       (C26498 * C1791 + C79306 * C2019) * C26495 +
                       C30029 * C26552 + C30030 * C26496) *
                          C79307 * C79117 -
                      (C27251 * C26496 + C27250 * C26552 +
                       (C26498 * C168 + C79306 * C325) * C26495 +
                       (C26498 * C97 + C79306 * C103) * C26551) *
                          C79307 * C79110 -
                      (C36771 * C26496 + C36772 * C26552 +
                       (C26498 * C1794 + C79306 * C2022) * C26495 +
                       (C26498 * C1684 + C79306 * C1692) * C26551) *
                          C79307 * C20477) *
                         C12991 +
                     ((C27250 * C26551 + C27251 * C26495 + C27252 * C26552 +
                       C27253 * C26496) *
                          C79307 * C79110 -
                      (C33491 * C26496 + C33492 * C26552 + C30030 * C26495 +
                       C30029 * C26551) *
                          C79307 * C79117 +
                      (C36772 * C26551 + C36771 * C26495 +
                       (C26498 * C6046 + C79306 * C6052) * C26552 +
                       (C26498 * C6144 + C79306 * C6316) * C26496) *
                          C79307 * C20477) *
                         C79072) *
                        C78992)) /
                  (p * q * std::sqrt(p + q));
    d2eeyy[33] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C26679 * C96 + C26682 + C26682 + C26495 * C373 +
                       C26680 * C749 + C26683 + C26683 + C26496 * C1169) *
                          C79306 * C79307 * C79110 -
                      (C26680 * C3931 + C28068 + C28068 + C26496 * C4385 +
                       C26679 * C1682 + C28069 + C28069 + C26495 * C2102) *
                          C79306 * C79307 * C79117 +
                      (C26679 * C1683 + C28070 + C28070 + C26495 * C2103 +
                       C26680 * C6042 + C28071 + C28071 + C26496 * C6392) *
                          C79306 * C79307 * C20477) *
                         C12991 +
                     ((C26679 * C3931 + C30131 + C30131 + C26495 * C4385 +
                       C26680 * C6044 + C30132 + C30132 + C26496 * C6394) *
                          C79306 * C79307 * C79117 -
                      (C26680 * C750 + C27332 + C27332 + C26496 * C1170 +
                       C26679 * C749 + C27333 + C27333 + C26495 * C1169) *
                          C79306 * C79307 * C79110 -
                      (C26680 * C6045 + C32124 + C32124 + C26496 * C6395 +
                       C26679 * C6042 + C32125 + C32125 + C26495 * C6392) *
                          C79306 * C79307 * C20477) *
                         C79072) *
                        C79215 +
                    (((C26679 * C1681 + C28072 + C28072 + C26495 * C2101 +
                       C26680 * C3932 + C28073 + C28073 + C26496 * C4386) *
                          C79306 * C79307 * C79117 -
                      (C26680 * C748 + C26684 + C26684 + C26496 * C1168 +
                       C26679 * C97 + C26685 + C26685 + C26495 * C374) *
                          C79306 * C79307 * C79110 -
                      (C26680 * C6041 + C28074 + C28074 + C26496 * C6391 +
                       C26679 * C1684 + C28075 + C28075 + C26495 * C2104) *
                          C79306 * C79307 * C20477) *
                         C12991 +
                     ((C26679 * C748 + C27336 + C27336 + C26495 * C1168 +
                       C26680 * C751 + C27337 + C27337 + C26496 * C1171) *
                          C79306 * C79307 * C79110 -
                      (C26680 * C6043 + C30133 + C30133 + C26496 * C6393 +
                       C26679 * C3932 + C30134 + C30134 + C26495 * C4386) *
                          C79306 * C79307 * C79117 +
                      (C26679 * C6041 + C36871 + C36871 + C26495 * C6391 +
                       C26680 * C6046 + C36872 + C36872 + C26496 * C6396) *
                          C79306 * C79307 * C20477) *
                         C79072) *
                        C78992)) /
                  (p * q * std::sqrt(p + q));
    d2eeyz[33] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C245 * C96 + C79307 * C246) * C26551 +
             (C245 * C167 + C79307 * C447) * C26495 + C27140 * C26552 +
             C27422 * C26496) *
                C79306 * C79110 -
            (C30237 * C26496 + C29914 * C26552 +
             (C245 * C1792 + C79307 * C2212) * C26495 +
             (C245 * C1682 + C79307 * C1906) * C26551) *
                C79306 * C79117 +
            ((C245 * C1683 + C79307 * C1907) * C26551 +
             (C245 * C1793 + C79307 * C2213) * C26495 + C31944 * C26552 +
             C32211 * C26496) *
                C79306 * C20477) *
               C12991 +
           ((C29914 * C26551 + C30237 * C26495 + C31946 * C26552 +
             C32212 * C26496) *
                C79306 * C79117 -
            (C27423 * C26496 + C27143 * C26552 + C27422 * C26495 +
             C27140 * C26551) *
                C79306 * C79110 -
            (C32213 * C26496 + C31949 * C26552 + C32211 * C26495 +
             C31944 * C26551) *
                C79306 * C20477) *
               C79072) *
              C79215 +
          (((C1939 * C26551 + C2232 * C26495 + C4182 * C26552 +
             C4512 * C26496) *
                C79306 * C79117 -
            (C1299 * C26496 + C1006 * C26552 + C466 * C26495 + C275 * C26551) *
                C79306 * C79110 -
            (C11341 * C26496 + C11034 * C26552 + C2233 * C26495 +
             C1940 * C26551) *
                C79306 * C20477) *
               C12991 +
           ((C1006 * C26551 + C1299 * C26495 + C1007 * C26552 +
             C1300 * C26496) *
                C79306 * C79110 -
            (C8001 * C26496 + C7694 * C26552 + C4512 * C26495 +
             C4182 * C26551) *
                C79306 * C79117 +
            (C11034 * C26551 + C11341 * C26495 +
             (C245 * C6046 + C79307 * C6230) * C26552 +
             (C245 * C6144 + C79307 * C6482) * C26496) *
                C79306 * C20477) *
               C79072) *
              C78992)) /
        (p * q * std::sqrt(p + q));
    d2eezx[33] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C26498 * C96 + C79306 * C102) * C245 +
              (C26498 * C246 + C79306 * C515) * C79307) *
                 C26495 +
             (C27498 + C27522) * C26496) *
                C79110 -
            ((C30348 + C30338) * C26496 +
             ((C26498 * C1906 + C79306 * C2314) * C79307 +
              (C26498 * C1682 + C79306 * C1690) * C245) *
                 C26495) *
                C79117 +
            (((C26498 * C1683 + C79306 * C1691) * C245 +
              (C26498 * C1907 + C79306 * C2315) * C79307) *
                 C26495 +
             (C32289 + C32301) * C26496) *
                C20477) *
               C12991 +
           (((C30338 + C30348) * C26495 + (C32292 + C32302) * C26496) * C79117 -
            ((C27523 + C27503) * C26496 + (C27522 + C27498) * C26495) * C79110 -
            ((C32303 + C32297) * C26496 + (C32301 + C32289) * C26495) *
                C20477) *
               C79072) *
              C79215 +
          (((((C26498 * C1681 + C79306 * C1689) * C245 +
              (C26498 * C1905 + C79306 * C2313) * C79307) *
                 C26495 +
             (C30339 + C30349) * C26496) *
                C79117 -
            ((C27524 + C27504) * C26496 +
             ((C26498 * C247 + C79306 * C516) * C79307 +
              (C26498 * C97 + C79306 * C103) * C245) *
                 C26495) *
                C79110 -
            ((C37073 + C37071) * C26496 +
             ((C26498 * C1908 + C79306 * C2316) * C79307 +
              (C26498 * C1684 + C79306 * C1692) * C245) *
                 C26495) *
                C20477) *
               C12991 +
           (((C27504 + C27524) * C26495 + (C27507 + C27525) * C26496) * C79110 -
            ((C33793 + C33791) * C26496 + (C30349 + C30339) * C26495) * C79117 +
            ((C37071 + C37073) * C26495 +
             ((C26498 * C6046 + C79306 * C6052) * C245 +
              (C26498 * C6230 + C79306 * C6562) * C79307) *
                 C26496) *
                C20477) *
               C79072) *
              C78992)) /
        (p * q * std::sqrt(p + q));
    d2eezy[33] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
                 C245 +
             (C26551 * C246 + C26495 * C563 + C26552 * C973 + C26496 * C1463) *
                 C79307) *
                C79306 * C79110 -
            ((C26552 * C4165 + C26496 * C4715 + C26551 * C1906 +
              C26495 * C2396) *
                 C79307 +
             (C26552 * C3931 + C26496 * C4047 + C26551 * C1682 +
              C26495 * C1792) *
                 C245) *
                C79306 * C79117 +
            ((C26551 * C1683 + C26495 * C1793 + C26552 * C6042 +
              C26496 * C6140) *
                 C245 +
             (C26551 * C1907 + C26495 * C2397 + C26552 * C6226 +
              C26496 * C6638) *
                 C79307) *
                C79306 * C20477) *
               C12991 +
           (((C26551 * C3931 + C26495 * C4047 + C26552 * C6044 +
              C26496 * C6142) *
                 C245 +
             (C26551 * C4165 + C26495 * C4715 + C26552 * C6228 +
              C26496 * C6640) *
                 C79307) *
                C79306 * C79117 -
            ((C26552 * C974 + C26496 * C1464 + C26551 * C973 + C26495 * C1463) *
                 C79307 +
             (C26552 * C750 + C26496 * C860 + C26551 * C749 + C26495 * C859) *
                 C245) *
                C79306 * C79110 -
            ((C26552 * C6229 + C26496 * C6641 + C26551 * C6226 +
              C26495 * C6638) *
                 C79307 +
             (C26552 * C6045 + C26496 * C6143 + C26551 * C6042 +
              C26495 * C6140) *
                 C245) *
                C79306 * C20477) *
               C79072) *
              C79215 +
          ((((C26551 * C1681 + C26495 * C1791 + C26552 * C3932 +
              C26496 * C4048) *
                 C245 +
             (C26551 * C1905 + C26495 * C2395 + C26552 * C4166 +
              C26496 * C4716) *
                 C79307) *
                C79306 * C79117 -
            ((C26552 * C972 + C26496 * C1462 + C26551 * C247 + C26495 * C564) *
                 C79307 +
             (C26552 * C748 + C26496 * C858 + C26551 * C97 + C26495 * C168) *
                 C245) *
                C79306 * C79110 -
            ((C26552 * C6225 + C26496 * C6637 + C26551 * C1908 +
              C26495 * C2398) *
                 C79307 +
             (C26552 * C6041 + C26496 * C6139 + C26551 * C1684 +
              C26495 * C1794) *
                 C245) *
                C79306 * C20477) *
               C12991 +
           (((C26551 * C748 + C26495 * C858 + C26552 * C751 + C26496 * C861) *
                 C245 +
             (C26551 * C972 + C26495 * C1462 + C26552 * C975 + C26496 * C1465) *
                 C79307) *
                C79306 * C79110 -
            ((C26552 * C6227 + C26496 * C6639 + C26551 * C4166 +
              C26495 * C4716) *
                 C79307 +
             (C26552 * C6043 + C26496 * C6141 + C26551 * C3932 +
              C26495 * C4048) *
                 C245) *
                C79306 * C79117 +
            ((C26551 * C6041 + C26495 * C6139 + C26552 * C6046 +
              C26496 * C6144) *
                 C245 +
             (C26551 * C6225 + C26495 * C6637 + C26552 * C6230 +
              C26496 * C6642) *
                 C79307) *
                C79306 * C20477) *
               C79072) *
              C78992)) /
        (p * q * std::sqrt(p + q));
    d2eezz[33] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C631 * C96 + C639 + C639 + C79307 * C632) * C26495 +
             C27684 * C26496) *
                C79306 * C79110 -
            (C30551 * C26496 +
             (C631 * C1682 + C2509 + C2509 + C79307 * C2498) * C26495) *
                C79306 * C79117 +
            ((C631 * C1683 + C2510 + C2510 + C79307 * C2499) * C26495 +
             C32467 * C26496) *
                C79306 * C20477) *
               C12991 +
           ((C30551 * C26495 + C32468 * C26496) * C79306 * C79117 -
            (C27685 * C26496 + C27684 * C26495) * C79306 * C79110 -
            (C32469 * C26496 + C32467 * C26495) * C79306 * C20477) *
               C79072) *
              C79215 +
          (((C2530 * C26495 + C4844 * C26496) * C79306 * C79117 -
            (C1597 * C26496 + C661 * C26495) * C79306 * C79110 -
            (C11650 * C26496 + C2531 * C26495) * C79306 * C20477) *
               C12991 +
           ((C1597 * C26495 + C1598 * C26496) * C79306 * C79110 -
            (C8310 * C26496 + C4844 * C26495) * C79306 * C79117 +
            (C11650 * C26495 +
             (C631 * C6046 + C6729 + C6729 + C79307 * C6722) * C26496) *
                C79306 * C20477) *
               C79072) *
              C78992)) /
        (p * q * std::sqrt(p + q));
    d2eexx[34] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C79307 *
                 C26495 +
             C26970 * C26496) *
                C17509 -
            (C29706 * C26496 +
             (C26497 * C1682 + C27761 + C27761 + C79306 * C1698) * C79307 *
                 C26495) *
                C79114) *
               C12991 +
           ((C29706 * C26495 + C31778 * C26496) * C79114 -
            (C26971 * C26496 + C26970 * C26495) * C17509) *
               C79072) *
              C79297 +
          ((((C26497 * C1681 + C27764 + C27764 + C79306 * C1697) * C79307 *
                 C26495 +
             C29707 * C26496) *
                C79114 -
            (C26972 * C26496 +
             (C26497 * C97 + C26503 + C26503 + C79306 * C109) * C79307 *
                 C26495) *
                C17509) *
               C12991 +
           ((C26972 * C26495 + C26973 * C26496) * C17509 -
            (C33190 * C26496 + C29707 * C26495) * C79114) *
               C79072) *
              C79281 +
          ((((C26497 * C98 + C26504 + C26504 + C79306 * C110) * C79307 *
                 C26495 +
             C26974 * C26496) *
                C17509 -
            (C29708 * C26496 +
             (C26497 * C1685 + C27769 + C27769 + C79306 * C1701) * C79307 *
                 C26495) *
                C79114) *
               C12991 +
           ((C29708 * C26495 +
             (C26497 * C7477 + C29696 + C29696 + C79306 * C7479) * C79307 *
                 C26496) *
                C79114 -
            (C26975 * C26496 + C26974 * C26495) * C17509) *
               C79072) *
              C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C79307 * C26495 +
            C26970 * C26496) *
               C17509 -
           (C29706 * C26496 +
            (C26497 * C1682 + C27761 + C27761 + C79306 * C1698) * C79307 *
                C26495) *
               C79114) *
              C79310 +
          ((C29706 * C26495 + C31778 * C26496) * C79114 -
           (C26971 * C26496 + C26970 * C26495) * C17509) *
              C79303 +
          ((C26971 * C26495 + C31275 * C26496) * C17509 -
           (C34065 * C26496 + C31778 * C26495) * C79114) *
              C79290 +
          ((C34065 * C26495 +
            (C26497 * C34055 + C34061 + C34061 + C79306 * C34057) * C79307 *
                C26496) *
               C79114 -
           (C31276 * C26496 + C31275 * C26495) * C17509) *
              C79269) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eexy[34] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
                 C26498 +
             (C26551 * C102 + C26495 * C173 + C26552 * C757 + C26496 * C867) *
                 C79306) *
                C79307 * C17509 -
            ((C26552 * C3935 + C26496 * C4051 + C26551 * C1690 +
              C26495 * C1800) *
                 C79306 +
             (C26552 * C3931 + C26496 * C4047 + C26551 * C1682 +
              C26495 * C1792) *
                 C26498) *
                C79307 * C79114) *
               C12991 +
           (((C26551 * C3931 + C26495 * C4047 + C26552 * C6044 +
              C26496 * C6142) *
                 C26498 +
             (C26551 * C3935 + C26495 * C4051 + C26552 * C6050 +
              C26496 * C6148) *
                 C79306) *
                C79307 * C79114 -
            ((C26552 * C758 + C26496 * C868 + C26551 * C757 + C26495 * C867) *
                 C79306 +
             (C26552 * C750 + C26496 * C860 + C26551 * C749 + C26495 * C859) *
                 C26498) *
                C79307 * C17509) *
               C79072) *
              C79297 +
          ((((C26551 * C1681 + C26495 * C1791 + C26552 * C3932 +
              C26496 * C4048) *
                 C26498 +
             (C26551 * C1689 + C26495 * C1799 + C26552 * C3936 +
              C26496 * C4052) *
                 C79306) *
                C79307 * C79114 -
            ((C26552 * C756 + C26496 * C866 + C26551 * C103 + C26495 * C174) *
                 C79306 +
             (C26552 * C748 + C26496 * C858 + C26551 * C97 + C26495 * C168) *
                 C26498) *
                C79307 * C17509) *
               C12991 +
           (((C26551 * C748 + C26495 * C858 + C26552 * C751 + C26496 * C861) *
                 C26498 +
             (C26551 * C756 + C26495 * C866 + C26552 * C759 + C26496 * C869) *
                 C79306) *
                C79307 * C17509 -
            ((C26552 * C6049 + C26496 * C6147 + C26551 * C3936 +
              C26495 * C4052) *
                 C79306 +
             (C26552 * C6043 + C26496 * C6141 + C26551 * C3932 +
              C26495 * C4048) *
                 C26498) *
                C79307 * C79114) *
               C79072) *
              C79281 +
          ((((C26551 * C98 + C26495 * C169 + C26552 * C752 + C26496 * C862) *
                 C26498 +
             (C26551 * C104 + C26495 * C175 + C26552 * C760 + C26496 * C870) *
                 C79306) *
                C79307 * C17509 -
            ((C26552 * C3937 + C26496 * C4053 + C26551 * C1693 +
              C26495 * C1803) *
                 C79306 +
             (C26552 * C3933 + C26496 * C4049 + C26551 * C1685 +
              C26495 * C1795) *
                 C26498) *
                C79307 * C79114) *
               C12991 +
           (((C26551 * C3933 + C26495 * C4049 + C26552 * C7477 +
              C26496 * C7580) *
                 C26498 +
             (C26551 * C3937 + C26495 * C4053 + C26552 * C7478 +
              C26496 * C7581) *
                 C79306) *
                C79307 * C79114 -
            ((C26552 * C761 + C26496 * C871 + C26551 * C760 + C26495 * C870) *
                 C79306 +
             (C26552 * C753 + C26496 * C863 + C26551 * C752 + C26495 * C862) *
                 C26498) *
                C79307 * C17509) *
               C79072) *
              C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
                C26498 +
            (C26551 * C102 + C26495 * C173 + C26552 * C757 + C26496 * C867) *
                C79306) *
               C79307 * C17509 -
           ((C26552 * C3935 + C26496 * C4051 + C26551 * C1690 +
             C26495 * C1800) *
                C79306 +
            (C26552 * C3931 + C26496 * C4047 + C26551 * C1682 +
             C26495 * C1792) *
                C26498) *
               C79307 * C79114) *
              C79310 +
          (((C26551 * C3931 + C26495 * C4047 + C26552 * C6044 +
             C26496 * C6142) *
                C26498 +
            (C26551 * C3935 + C26495 * C4051 + C26552 * C6050 +
             C26496 * C6148) *
                C79306) *
               C79307 * C79114 -
           ((C26552 * C758 + C26496 * C868 + C26551 * C757 + C26495 * C867) *
                C79306 +
            (C26552 * C750 + C26496 * C860 + C26551 * C749 + C26495 * C859) *
                C26498) *
               C79307 * C17509) *
              C79303 +
          (((C26551 * C750 + C26495 * C860 + C26552 * C5568 + C26496 * C5626) *
                C26498 +
            (C26551 * C758 + C26495 * C868 + C26552 * C5572 + C26496 * C5630) *
                C79306) *
               C79307 * C17509 -
           ((C26552 * C8379 + C26496 * C8453 + C26551 * C6050 +
             C26495 * C6148) *
                C79306 +
            (C26552 * C8377 + C26496 * C8451 + C26551 * C6044 +
             C26495 * C6142) *
                C26498) *
               C79307 * C79114) *
              C79290 +
          (((C26551 * C8377 + C26495 * C8451 + C26552 * C34055 +
             C26496 * C34131) *
                C26498 +
            (C26551 * C8379 + C26495 * C8453 + C26552 * C34056 +
             C26496 * C34132) *
                C79306) *
               C79307 * C79114 -
           ((C26552 * C5573 + C26496 * C5631 + C26551 * C5572 +
             C26495 * C5630) *
                C79306 +
            (C26552 * C5569 + C26496 * C5627 + C26551 * C5568 +
             C26495 * C5626) *
                C26498) *
               C79307 * C17509) *
              C79269) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eexz[34] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C245 * C96 + C79307 * C246) * C26498 +
              (C245 * C102 + C79307 * C252) * C79306) *
                 C26495 +
             (C27144 + C27145) * C26496) *
                C17509 -
            ((C29915 + C29916) * C26496 +
             ((C245 * C1690 + C79307 * C1914) * C79306 +
              (C245 * C1682 + C79307 * C1906) * C26498) *
                 C26495) *
                C79114) *
               C12991 +
           (((C29916 + C29915) * C26495 + (C31952 + C31953) * C26496) * C79114 -
            ((C27146 + C27147) * C26496 + (C27145 + C27144) * C26495) *
                C17509) *
               C79072) *
              C79297 +
          ((((C1939 * C26498 + C1938 * C79306) * C26495 +
             (C29909 + C29910) * C26496) *
                C79114 -
            ((C27133 + C27132) * C26496 +
             (C276 * C79306 + C275 * C26498) * C26495) *
                C17509) *
               C12991 +
           (((C27132 + C27133) * C26495 + (C27134 + C27135) * C26496) * C17509 -
            ((C33387 + C33388) * C26496 + (C29910 + C29909) * C26495) *
                C79114) *
               C79072) *
              C79281 +
          ((((C278 * C26498 + C277 * C79306) * C26495 +
             (C27136 + C27137) * C26496) *
                C17509 -
            ((C29911 + C29912) * C26496 +
             (C1943 * C79306 + C1942 * C26498) * C26495) *
                C79114) *
               C12991 +
           (((C29912 + C29911) * C26495 +
             ((C245 * C7477 + C79307 * C7686) * C26498 +
              (C245 * C7478 + C79307 * C7687) * C79306) *
                 C26496) *
                C79114 -
            ((C27138 + C27139) * C26496 + (C27137 + C27136) * C26495) *
                C17509) *
               C79072) *
              C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C245 * C96 + C79307 * C246) * C26498 +
             (C245 * C102 + C79307 * C252) * C79306) *
                C26495 +
            (C27144 + C27145) * C26496) *
               C17509 -
           ((C29915 + C29916) * C26496 +
            ((C245 * C1690 + C79307 * C1914) * C79306 +
             (C245 * C1682 + C79307 * C1906) * C26498) *
                C26495) *
               C79114) *
              C79310 +
          (((C29916 + C29915) * C26495 + (C31952 + C31953) * C26496) * C79114 -
           ((C27146 + C27147) * C26496 + (C27145 + C27144) * C26495) * C17509) *
              C79303 +
          (((C27147 + C27146) * C26495 + (C31377 + C31378) * C26496) * C17509 -
           ((C34208 + C34209) * C26496 + (C31953 + C31952) * C26495) * C79114) *
              C79290 +
          (((C34209 + C34208) * C26495 +
            ((C245 * C34055 + C79307 * C34199) * C26498 +
             (C245 * C34056 + C79307 * C34200) * C79306) *
                C26496) *
               C79114 -
           ((C31379 + C31380) * C26496 + (C31378 + C31377) * C26495) * C17509) *
              C79269) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eeyx[34] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((((C26498 * C96 + C79306 * C102) * C26551 +
                       (C26498 * C167 + C79306 * C324) * C26495 +
                       C27246 * C26552 + C27247 * C26496) *
                          C79307 * C17509 -
                      (C30027 * C26496 + C30028 * C26552 +
                       (C26498 * C1792 + C79306 * C2020) * C26495 +
                       (C26498 * C1682 + C79306 * C1690) * C26551) *
                          C79307 * C79114) *
                         C12991 +
                     ((C30028 * C26551 + C30027 * C26495 + C32045 * C26552 +
                       C32046 * C26496) *
                          C79307 * C79114 -
                      (C27248 * C26496 + C27249 * C26552 + C27247 * C26495 +
                       C27246 * C26551) *
                          C79307 * C17509) *
                         C79072) *
                        C79297 +
                    ((((C26498 * C1681 + C79306 * C1689) * C26551 +
                       (C26498 * C1791 + C79306 * C2019) * C26495 +
                       C30029 * C26552 + C30030 * C26496) *
                          C79307 * C79114 -
                      (C27251 * C26496 + C27250 * C26552 +
                       (C26498 * C168 + C79306 * C325) * C26495 +
                       (C26498 * C97 + C79306 * C103) * C26551) *
                          C79307 * C17509) *
                         C12991 +
                     ((C27250 * C26551 + C27251 * C26495 + C27252 * C26552 +
                       C27253 * C26496) *
                          C79307 * C17509 -
                      (C33491 * C26496 + C33492 * C26552 + C30030 * C26495 +
                       C30029 * C26551) *
                          C79307 * C79114) *
                         C79072) *
                        C79281 +
                    ((((C26498 * C98 + C79306 * C104) * C26551 +
                       (C26498 * C169 + C79306 * C326) * C26495 +
                       C27254 * C26552 + C27255 * C26496) *
                          C79307 * C17509 -
                      (C30031 * C26496 + C30032 * C26552 +
                       (C26498 * C1795 + C79306 * C2023) * C26495 +
                       (C26498 * C1685 + C79306 * C1693) * C26551) *
                          C79307 * C79114) *
                         C12991 +
                     ((C30032 * C26551 + C30031 * C26495 +
                       (C26498 * C7477 + C79306 * C7478) * C26552 +
                       (C26498 * C7580 + C79306 * C7792) * C26496) *
                          C79307 * C79114 -
                      (C27256 * C26496 + C27257 * C26552 + C27255 * C26495 +
                       C27254 * C26551) *
                          C79307 * C17509) *
                         C79072) *
                        C79253)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C26498 * C96 + C79306 * C102) * C26551 +
                      (C26498 * C167 + C79306 * C324) * C26495 +
                      C27246 * C26552 + C27247 * C26496) *
                         C79307 * C17509 -
                     (C30027 * C26496 + C30028 * C26552 +
                      (C26498 * C1792 + C79306 * C2020) * C26495 +
                      (C26498 * C1682 + C79306 * C1690) * C26551) *
                         C79307 * C79114) *
                        C79310 +
                    ((C30028 * C26551 + C30027 * C26495 + C32045 * C26552 +
                      C32046 * C26496) *
                         C79307 * C79114 -
                     (C27248 * C26496 + C27249 * C26552 + C27247 * C26495 +
                      C27246 * C26551) *
                         C79307 * C17509) *
                        C79303 +
                    ((C27249 * C26551 + C27248 * C26495 + C31432 * C26552 +
                      C31433 * C26496) *
                         C79307 * C17509 -
                     (C34281 * C26496 + C34282 * C26552 + C32046 * C26495 +
                      C32045 * C26551) *
                         C79307 * C79114) *
                        C79290 +
                    ((C34282 * C26551 + C34281 * C26495 +
                      (C26498 * C34055 + C79306 * C34056) * C26552 +
                      (C26498 * C34131 + C79306 * C34275) * C26496) *
                         C79307 * C79114 -
                     (C31434 * C26496 + C31435 * C26552 + C31433 * C26495 +
                      C31432 * C26551) *
                         C79307 * C17509) *
                        C79269) *
                   C78981) /
                      (p * q * std::sqrt(p + q));
    d2eeyy[34] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C26679 * C96 + C26682 + C26682 + C26495 * C373 +
                       C26680 * C749 + C26683 + C26683 + C26496 * C1169) *
                          C79306 * C79307 * C17509 -
                      (C26680 * C3931 + C28068 + C28068 + C26496 * C4385 +
                       C26679 * C1682 + C28069 + C28069 + C26495 * C2102) *
                          C79306 * C79307 * C79114) *
                         C12991 +
                     ((C26679 * C3931 + C30131 + C30131 + C26495 * C4385 +
                       C26680 * C6044 + C30132 + C30132 + C26496 * C6394) *
                          C79306 * C79307 * C79114 -
                      (C26680 * C750 + C27332 + C27332 + C26496 * C1170 +
                       C26679 * C749 + C27333 + C27333 + C26495 * C1169) *
                          C79306 * C79307 * C17509) *
                         C79072) *
                        C79297 +
                    (((C26679 * C1681 + C28072 + C28072 + C26495 * C2101 +
                       C26680 * C3932 + C28073 + C28073 + C26496 * C4386) *
                          C79306 * C79307 * C79114 -
                      (C26680 * C748 + C26684 + C26684 + C26496 * C1168 +
                       C26679 * C97 + C26685 + C26685 + C26495 * C374) *
                          C79306 * C79307 * C17509) *
                         C12991 +
                     ((C26679 * C748 + C27336 + C27336 + C26495 * C1168 +
                       C26680 * C751 + C27337 + C27337 + C26496 * C1171) *
                          C79306 * C79307 * C17509 -
                      (C26680 * C6043 + C30133 + C30133 + C26496 * C6393 +
                       C26679 * C3932 + C30134 + C30134 + C26495 * C4386) *
                          C79306 * C79307 * C79114) *
                         C79072) *
                        C79281 +
                    (((C26679 * C98 + C26686 + C26686 + C26495 * C375 +
                       C26680 * C752 + C26687 + C26687 + C26496 * C1172) *
                          C79306 * C79307 * C17509 -
                      (C26680 * C3933 + C28076 + C28076 + C26496 * C4387 +
                       C26679 * C1685 + C28077 + C28077 + C26495 * C2105) *
                          C79306 * C79307 * C79114) *
                         C12991 +
                     ((C26679 * C3933 + C30135 + C30135 + C26495 * C4387 +
                       C26680 * C7477 + C30136 + C30136 + C26496 * C7891) *
                          C79306 * C79307 * C79114 -
                      (C26680 * C753 + C27340 + C27340 + C26496 * C1173 +
                       C26679 * C752 + C27341 + C27341 + C26495 * C1172) *
                          C79306 * C79307 * C17509) *
                         C79072) *
                        C79253)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((C26679 * C96 + C26682 + C26682 + C26495 * C373 +
                      C26680 * C749 + C26683 + C26683 + C26496 * C1169) *
                         C79306 * C79307 * C17509 -
                     (C26680 * C3931 + C28068 + C28068 + C26496 * C4385 +
                      C26679 * C1682 + C28069 + C28069 + C26495 * C2102) *
                         C79306 * C79307 * C79114) *
                        C79310 +
                    ((C26679 * C3931 + C30131 + C30131 + C26495 * C4385 +
                      C26680 * C6044 + C30132 + C30132 + C26496 * C6394) *
                         C79306 * C79307 * C79114 -
                     (C26680 * C750 + C27332 + C27332 + C26496 * C1170 +
                      C26679 * C749 + C27333 + C27333 + C26495 * C1169) *
                         C79306 * C79307 * C17509) *
                        C79303 +
                    ((C26679 * C750 + C27334 + C27334 + C26495 * C1170 +
                      C26680 * C5568 + C27335 + C27335 + C26496 * C5772) *
                         C79306 * C79307 * C17509 -
                     (C26680 * C8377 + C32126 + C32126 + C26496 * C8659 +
                      C26679 * C6044 + C32127 + C32127 + C26495 * C6394) *
                         C79306 * C79307 * C79114) *
                        C79290 +
                    ((C26679 * C8377 + C34350 + C34350 + C26495 * C8659 +
                      C26680 * C34055 + C34351 + C34351 + C26496 * C34348) *
                         C79306 * C79307 * C79114 -
                     (C26680 * C5569 + C31479 + C31479 + C26496 * C5773 +
                      C26679 * C5568 + C31480 + C31480 + C26495 * C5772) *
                         C79306 * C79307 * C17509) *
                        C79269) *
                   C78981) /
                      (p * q * std::sqrt(p + q));
    d2eeyz[34] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C245 * C96 + C79307 * C246) * C26551 +
             (C245 * C167 + C79307 * C447) * C26495 + C27140 * C26552 +
             C27422 * C26496) *
                C79306 * C17509 -
            (C30237 * C26496 + C29914 * C26552 +
             (C245 * C1792 + C79307 * C2212) * C26495 +
             (C245 * C1682 + C79307 * C1906) * C26551) *
                C79306 * C79114) *
               C12991 +
           ((C29914 * C26551 + C30237 * C26495 + C31946 * C26552 +
             C32212 * C26496) *
                C79306 * C79114 -
            (C27423 * C26496 + C27143 * C26552 + C27422 * C26495 +
             C27140 * C26551) *
                C79306 * C17509) *
               C79072) *
              C79297 +
          (((C1939 * C26551 + C2232 * C26495 + C4182 * C26552 +
             C4512 * C26496) *
                C79306 * C79114 -
            (C1299 * C26496 + C1006 * C26552 + C466 * C26495 + C275 * C26551) *
                C79306 * C17509) *
               C12991 +
           ((C1006 * C26551 + C1299 * C26495 + C1007 * C26552 +
             C1300 * C26496) *
                C79306 * C17509 -
            (C8001 * C26496 + C7694 * C26552 + C4512 * C26495 +
             C4182 * C26551) *
                C79306 * C79114) *
               C79072) *
              C79281 +
          (((C278 * C26551 + C467 * C26495 + C1009 * C26552 + C1301 * C26496) *
                C79306 * C17509 -
            (C4513 * C26496 + C4185 * C26552 + C2234 * C26495 +
             C1942 * C26551) *
                C79306 * C79114) *
               C12991 +
           ((C4185 * C26551 + C4513 * C26495 +
             (C245 * C7477 + C79307 * C7686) * C26552 +
             (C245 * C7580 + C79307 * C7996) * C26496) *
                C79306 * C79114 -
            (C1302 * C26496 + C1012 * C26552 + C1301 * C26495 +
             C1009 * C26551) *
                C79306 * C17509) *
               C79072) *
              C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C245 * C96 + C79307 * C246) * C26551 +
            (C245 * C167 + C79307 * C447) * C26495 + C27140 * C26552 +
            C27422 * C26496) *
               C79306 * C17509 -
           (C30237 * C26496 + C29914 * C26552 +
            (C245 * C1792 + C79307 * C2212) * C26495 +
            (C245 * C1682 + C79307 * C1906) * C26551) *
               C79306 * C79114) *
              C79310 +
          ((C29914 * C26551 + C30237 * C26495 + C31946 * C26552 +
            C32212 * C26496) *
               C79306 * C79114 -
           (C27423 * C26496 + C27143 * C26552 + C27422 * C26495 +
            C27140 * C26551) *
               C79306 * C17509) *
              C79303 +
          ((C27143 * C26551 + C27423 * C26495 + C31373 * C26552 +
            C31530 * C26496) *
               C79306 * C17509 -
           (C34421 * C26496 + C34207 * C26552 + C32212 * C26495 +
            C31946 * C26551) *
               C79306 * C79114) *
              C79290 +
          ((C34207 * C26551 + C34421 * C26495 +
            (C245 * C34055 + C79307 * C34199) * C26552 +
            (C245 * C34131 + C79307 * C34417) * C26496) *
               C79306 * C79114 -
           (C31531 * C26496 + C31376 * C26552 + C31530 * C26495 +
            C31373 * C26551) *
               C79306 * C17509) *
              C79269) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eezx[34] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C26498 * C96 + C79306 * C102) * C245 +
              (C26498 * C246 + C79306 * C515) * C79307) *
                 C26495 +
             (C27498 + C27522) * C26496) *
                C17509 -
            ((C30348 + C30338) * C26496 +
             ((C26498 * C1906 + C79306 * C2314) * C79307 +
              (C26498 * C1682 + C79306 * C1690) * C245) *
                 C26495) *
                C79114) *
               C12991 +
           (((C30338 + C30348) * C26495 + (C32292 + C32302) * C26496) * C79114 -
            ((C27523 + C27503) * C26496 + (C27522 + C27498) * C26495) *
                C17509) *
               C79072) *
              C79297 +
          (((((C26498 * C1681 + C79306 * C1689) * C245 +
              (C26498 * C1905 + C79306 * C2313) * C79307) *
                 C26495 +
             (C30339 + C30349) * C26496) *
                C79114 -
            ((C27524 + C27504) * C26496 +
             ((C26498 * C247 + C79306 * C516) * C79307 +
              (C26498 * C97 + C79306 * C103) * C245) *
                 C26495) *
                C17509) *
               C12991 +
           (((C27504 + C27524) * C26495 + (C27507 + C27525) * C26496) * C17509 -
            ((C33793 + C33791) * C26496 + (C30349 + C30339) * C26495) *
                C79114) *
               C79072) *
              C79281 +
          (((((C26498 * C98 + C79306 * C104) * C245 +
              (C26498 * C248 + C79306 * C517) * C79307) *
                 C26495 +
             (C27510 + C27526) * C26496) *
                C17509 -
            ((C30350 + C30344) * C26496 +
             ((C26498 * C1909 + C79306 * C2317) * C79307 +
              (C26498 * C1685 + C79306 * C1693) * C245) *
                 C26495) *
                C79114) *
               C12991 +
           (((C30344 + C30350) * C26495 +
             ((C26498 * C7477 + C79306 * C7478) * C245 +
              (C26498 * C7686 + C79306 * C8100) * C79307) *
                 C26496) *
                C79114 -
            ((C27527 + C27515) * C26496 + (C27526 + C27510) * C26495) *
                C17509) *
               C79072) *
              C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C26498 * C96 + C79306 * C102) * C245 +
             (C26498 * C246 + C79306 * C515) * C79307) *
                C26495 +
            (C27498 + C27522) * C26496) *
               C17509 -
           ((C30348 + C30338) * C26496 +
            ((C26498 * C1906 + C79306 * C2314) * C79307 +
             (C26498 * C1682 + C79306 * C1690) * C245) *
                C26495) *
               C79114) *
              C79310 +
          (((C30338 + C30348) * C26495 + (C32292 + C32302) * C26496) * C79114 -
           ((C27523 + C27503) * C26496 + (C27522 + C27498) * C26495) * C17509) *
              C79303 +
          (((C27503 + C27523) * C26495 + (C31575 + C31583) * C26496) * C17509 -
           ((C34493 + C34491) * C26496 + (C32302 + C32292) * C26495) * C79114) *
              C79290 +
          (((C34491 + C34493) * C26495 +
            ((C26498 * C34055 + C79306 * C34056) * C245 +
             (C26498 * C34199 + C79306 * C34487) * C79307) *
                C26496) *
               C79114 -
           ((C31584 + C31580) * C26496 + (C31583 + C31575) * C26495) * C17509) *
              C79269) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eezy[34] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
                 C245 +
             (C26551 * C246 + C26495 * C563 + C26552 * C973 + C26496 * C1463) *
                 C79307) *
                C79306 * C17509 -
            ((C26552 * C4165 + C26496 * C4715 + C26551 * C1906 +
              C26495 * C2396) *
                 C79307 +
             (C26552 * C3931 + C26496 * C4047 + C26551 * C1682 +
              C26495 * C1792) *
                 C245) *
                C79306 * C79114) *
               C12991 +
           (((C26551 * C3931 + C26495 * C4047 + C26552 * C6044 +
              C26496 * C6142) *
                 C245 +
             (C26551 * C4165 + C26495 * C4715 + C26552 * C6228 +
              C26496 * C6640) *
                 C79307) *
                C79306 * C79114 -
            ((C26552 * C974 + C26496 * C1464 + C26551 * C973 + C26495 * C1463) *
                 C79307 +
             (C26552 * C750 + C26496 * C860 + C26551 * C749 + C26495 * C859) *
                 C245) *
                C79306 * C17509) *
               C79072) *
              C79297 +
          ((((C26551 * C1681 + C26495 * C1791 + C26552 * C3932 +
              C26496 * C4048) *
                 C245 +
             (C26551 * C1905 + C26495 * C2395 + C26552 * C4166 +
              C26496 * C4716) *
                 C79307) *
                C79306 * C79114 -
            ((C26552 * C972 + C26496 * C1462 + C26551 * C247 + C26495 * C564) *
                 C79307 +
             (C26552 * C748 + C26496 * C858 + C26551 * C97 + C26495 * C168) *
                 C245) *
                C79306 * C17509) *
               C12991 +
           (((C26551 * C748 + C26495 * C858 + C26552 * C751 + C26496 * C861) *
                 C245 +
             (C26551 * C972 + C26495 * C1462 + C26552 * C975 + C26496 * C1465) *
                 C79307) *
                C79306 * C17509 -
            ((C26552 * C6227 + C26496 * C6639 + C26551 * C4166 +
              C26495 * C4716) *
                 C79307 +
             (C26552 * C6043 + C26496 * C6141 + C26551 * C3932 +
              C26495 * C4048) *
                 C245) *
                C79306 * C79114) *
               C79072) *
              C79281 +
          ((((C26551 * C98 + C26495 * C169 + C26552 * C752 + C26496 * C862) *
                 C245 +
             (C26551 * C248 + C26495 * C565 + C26552 * C976 + C26496 * C1466) *
                 C79307) *
                C79306 * C17509 -
            ((C26552 * C4167 + C26496 * C4717 + C26551 * C1909 +
              C26495 * C2399) *
                 C79307 +
             (C26552 * C3933 + C26496 * C4049 + C26551 * C1685 +
              C26495 * C1795) *
                 C245) *
                C79306 * C79114) *
               C12991 +
           (((C26551 * C3933 + C26495 * C4049 + C26552 * C7477 +
              C26496 * C7580) *
                 C245 +
             (C26551 * C4167 + C26495 * C4717 + C26552 * C7686 +
              C26496 * C8199) *
                 C79307) *
                C79306 * C79114 -
            ((C26552 * C977 + C26496 * C1467 + C26551 * C976 + C26495 * C1466) *
                 C79307 +
             (C26552 * C753 + C26496 * C863 + C26551 * C752 + C26495 * C862) *
                 C245) *
                C79306 * C17509) *
               C79072) *
              C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
                C245 +
            (C26551 * C246 + C26495 * C563 + C26552 * C973 + C26496 * C1463) *
                C79307) *
               C79306 * C17509 -
           ((C26552 * C4165 + C26496 * C4715 + C26551 * C1906 +
             C26495 * C2396) *
                C79307 +
            (C26552 * C3931 + C26496 * C4047 + C26551 * C1682 +
             C26495 * C1792) *
                C245) *
               C79306 * C79114) *
              C79310 +
          (((C26551 * C3931 + C26495 * C4047 + C26552 * C6044 +
             C26496 * C6142) *
                C245 +
            (C26551 * C4165 + C26495 * C4715 + C26552 * C6228 +
             C26496 * C6640) *
                C79307) *
               C79306 * C79114 -
           ((C26552 * C974 + C26496 * C1464 + C26551 * C973 + C26495 * C1463) *
                C79307 +
            (C26552 * C750 + C26496 * C860 + C26551 * C749 + C26495 * C859) *
                C245) *
               C79306 * C17509) *
              C79303 +
          (((C26551 * C750 + C26495 * C860 + C26552 * C5568 + C26496 * C5626) *
                C245 +
            (C26551 * C974 + C26495 * C1464 + C26552 * C5676 + C26496 * C5914) *
                C79307) *
               C79306 * C17509 -
           ((C26552 * C8521 + C26496 * C8865 + C26551 * C6228 +
             C26495 * C6640) *
                C79307 +
            (C26552 * C8377 + C26496 * C8451 + C26551 * C6044 +
             C26495 * C6142) *
                C245) *
               C79306 * C79114) *
              C79290 +
          (((C26551 * C8377 + C26495 * C8451 + C26552 * C34055 +
             C26496 * C34131) *
                C245 +
            (C26551 * C8521 + C26495 * C8865 + C26552 * C34199 +
             C26496 * C34559) *
                C79307) *
               C79306 * C79114 -
           ((C26552 * C5677 + C26496 * C5915 + C26551 * C5676 +
             C26495 * C5914) *
                C79307 +
            (C26552 * C5569 + C26496 * C5627 + C26551 * C5568 +
             C26495 * C5626) *
                C245) *
               C79306 * C17509) *
              C79269) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eezz[34] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C631 * C96 + C639 + C639 + C79307 * C632) * C26495 +
             C27684 * C26496) *
                C79306 * C17509 -
            (C30551 * C26496 +
             (C631 * C1682 + C2509 + C2509 + C79307 * C2498) * C26495) *
                C79306 * C79114) *
               C12991 +
           ((C30551 * C26495 + C32468 * C26496) * C79306 * C79114 -
            (C27685 * C26496 + C27684 * C26495) * C79306 * C17509) *
               C79072) *
              C79297 +
          (((C2530 * C26495 + C4844 * C26496) * C79306 * C79114 -
            (C1597 * C26496 + C661 * C26495) * C79306 * C17509) *
               C12991 +
           ((C1597 * C26495 + C1598 * C26496) * C79306 * C17509 -
            (C8310 * C26496 + C4844 * C26495) * C79306 * C79114) *
               C79072) *
              C79281 +
          (((C662 * C26495 + C1599 * C26496) * C79306 * C17509 -
            (C4845 * C26496 + C2532 * C26495) * C79306 * C79114) *
               C12991 +
           ((C4845 * C26495 +
             (C631 * C7477 + C8307 + C8307 + C79307 * C8303) * C26496) *
                C79306 * C79114 -
            (C1600 * C26496 + C1599 * C26495) * C79306 * C17509) *
               C79072) *
              C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C631 * C96 + C639 + C639 + C79307 * C632) * C26495 +
            C27684 * C26496) *
               C79306 * C17509 -
           (C30551 * C26496 +
            (C631 * C1682 + C2509 + C2509 + C79307 * C2498) * C26495) *
               C79306 * C79114) *
              C79310 +
          ((C30551 * C26495 + C32468 * C26496) * C79306 * C79114 -
           (C27685 * C26496 + C27684 * C26495) * C79306 * C17509) *
              C79303 +
          ((C27685 * C26495 + C31680 * C26496) * C79306 * C17509 -
           (C34633 * C26496 + C32468 * C26495) * C79306 * C79114) *
              C79290 +
          ((C34633 * C26495 +
            (C631 * C34055 + C34630 + C34630 + C79307 * C34626) * C26496) *
               C79306 * C79114 -
           (C31681 * C26496 + C31680 * C26495) * C79306 * C17509) *
              C79269) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eexx[35] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C79307 * C26495 +
            C26970 * C26496) *
               C79027 * C6795 -
           (C26971 * C26496 + C26970 * C26495) * C79027 * C6796 +
           (C26971 * C26495 + C31275 * C26496) * C79027 * C6797 -
           (C31276 * C26496 + C31275 * C26495) * C79027 * C79269) *
              C79215 +
          ((C26972 * C26495 + C26973 * C26496) * C79027 * C6796 -
           (C26972 * C26496 + (C26497 * C97 + C26503 + C26503 + C79306 * C109) *
                                  C79307 * C26495) *
               C79027 * C6795 -
           (C32542 * C26496 + C26973 * C26495) * C79027 * C6797 +
           (C32542 * C26495 +
            (C26497 * C5570 + C32538 + C32538 + C79306 * C5578) * C79307 *
                C26496) *
               C79027 * C79269) *
              C78992)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C79307 * C26495 +
            C26970 * C26496) *
               C79027 * C79229 -
           (C26971 * C26496 + C26970 * C26495) * C79027 * C79072) *
              C2605 +
          ((C26972 * C26495 + C26973 * C26496) * C79027 * C79072 -
           (C26972 * C26496 + (C26497 * C97 + C26503 + C26503 + C79306 * C109) *
                                  C79307 * C26495) *
               C79027 * C79229) *
              C2606 +
          (((C26497 * C98 + C26504 + C26504 + C79306 * C110) * C79307 * C26495 +
            C26974 * C26496) *
               C79027 * C79229 -
           (C26975 * C26496 + C26974 * C26495) * C79027 * C79072) *
              C2607 +
          ((C28448 * C26495 +
            (C26497 * C755 + C28444 + C28444 + C79306 * C771) * C79307 *
                C26496) *
               C79027 * C79072 -
           (C28448 * C26496 + (C26497 * C99 + C26507 + C26507 + C79306 * C111) *
                                  C79307 * C26495) *
               C79027 * C79229) *
              C79263)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C79307 *
                 C26495 +
             C26970 * C26496) *
                C9011 -
            (C29706 * C26496 +
             (C26497 * C1682 + C27761 + C27761 + C79306 * C1698) * C79307 *
                 C26495) *
                C9012 +
            ((C26497 * C1683 + C27762 + C27762 + C79306 * C1699) * C79307 *
                 C26495 +
             C31777 * C26496) *
                C79262) *
               C79229 +
           ((C29706 * C26495 + C31778 * C26496) * C9012 -
            (C26971 * C26496 + C26970 * C26495) * C9011 -
            (C31779 * C26496 + C31777 * C26495) * C79262) *
               C79072) *
              C79215 +
          ((((C26497 * C1681 + C27764 + C27764 + C79306 * C1697) * C79307 *
                 C26495 +
             C29707 * C26496) *
                C9012 -
            (C26972 * C26496 +
             (C26497 * C97 + C26503 + C26503 + C79306 * C109) * C79307 *
                 C26495) *
                C9011 -
            (C36470 * C26496 +
             (C26497 * C1684 + C27767 + C27767 + C79306 * C1700) * C79307 *
                 C26495) *
                C79262) *
               C79229 +
           ((C26972 * C26495 + C26973 * C26496) * C9011 -
            (C33190 * C26496 + C29707 * C26495) * C9012 +
            (C36470 * C26495 +
             (C26497 * C6046 + C36466 + C36466 + C79306 * C6058) * C79307 *
                 C26496) *
                C79262) *
               C79072) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eexy[35] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
                C26498 +
            (C26551 * C102 + C26495 * C173 + C26552 * C757 + C26496 * C867) *
                C79306) *
               C79307 * C79027 * C6795 -
           ((C26552 * C758 + C26496 * C868 + C26551 * C757 + C26495 * C867) *
                C79306 +
            (C26552 * C750 + C26496 * C860 + C26551 * C749 + C26495 * C859) *
                C26498) *
               C79307 * C79027 * C6796 +
           ((C26551 * C750 + C26495 * C860 + C26552 * C5568 + C26496 * C5626) *
                C26498 +
            (C26551 * C758 + C26495 * C868 + C26552 * C5572 + C26496 * C5630) *
                C79306) *
               C79307 * C79027 * C6797 -
           ((C26552 * C5573 + C26496 * C5631 + C26551 * C5572 +
             C26495 * C5630) *
                C79306 +
            (C26552 * C5569 + C26496 * C5627 + C26551 * C5568 +
             C26495 * C5626) *
                C26498) *
               C79307 * C79027 * C79269) *
              C79215 +
          (((C26551 * C748 + C26495 * C858 + C26552 * C751 + C26496 * C861) *
                C26498 +
            (C26551 * C756 + C26495 * C866 + C26552 * C759 + C26496 * C869) *
                C79306) *
               C79307 * C79027 * C6796 -
           ((C26552 * C756 + C26496 * C866 + C26551 * C103 + C26495 * C174) *
                C79306 +
            (C26552 * C748 + C26496 * C858 + C26551 * C97 + C26495 * C168) *
                C26498) *
               C79307 * C79027 * C6795 -
           ((C26552 * C5571 + C26496 * C5629 + C26551 * C759 + C26495 * C869) *
                C79306 +
            (C26552 * C5567 + C26496 * C5625 + C26551 * C751 + C26495 * C861) *
                C26498) *
               C79307 * C79027 * C6797 +
           ((C26551 * C5567 + C26495 * C5625 + C26552 * C5570 +
             C26496 * C5628) *
                C26498 +
            (C26551 * C5571 + C26495 * C5629 + C26552 * C5574 +
             C26496 * C5632) *
                C79306) *
               C79307 * C79027 * C79269) *
              C78992)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
                C26498 +
            (C26551 * C102 + C26495 * C173 + C26552 * C757 + C26496 * C867) *
                C79306) *
               C79307 * C79027 * C79229 -
           ((C26552 * C758 + C26496 * C868 + C26551 * C757 + C26495 * C867) *
                C79306 +
            (C26552 * C750 + C26496 * C860 + C26551 * C749 + C26495 * C859) *
                C26498) *
               C79307 * C79027 * C79072) *
              C2605 +
          (((C26551 * C748 + C26495 * C858 + C26552 * C751 + C26496 * C861) *
                C26498 +
            (C26551 * C756 + C26495 * C866 + C26552 * C759 + C26496 * C869) *
                C79306) *
               C79307 * C79027 * C79072 -
           ((C26552 * C756 + C26496 * C866 + C26551 * C103 + C26495 * C174) *
                C79306 +
            (C26552 * C748 + C26496 * C858 + C26551 * C97 + C26495 * C168) *
                C26498) *
               C79307 * C79027 * C79229) *
              C2606 +
          (((C26551 * C98 + C26495 * C169 + C26552 * C752 + C26496 * C862) *
                C26498 +
            (C26551 * C104 + C26495 * C175 + C26552 * C760 + C26496 * C870) *
                C79306) *
               C79307 * C79027 * C79229 -
           ((C26552 * C761 + C26496 * C871 + C26551 * C760 + C26495 * C870) *
                C79306 +
            (C26552 * C753 + C26496 * C863 + C26551 * C752 + C26495 * C862) *
                C26498) *
               C79307 * C79027 * C79072) *
              C2607 +
          (((C26551 * C754 + C26495 * C864 + C26552 * C755 + C26496 * C865) *
                C26498 +
            (C26551 * C762 + C26495 * C872 + C26552 * C763 + C26496 * C873) *
                C79306) *
               C79307 * C79027 * C79072 -
           ((C26552 * C762 + C26496 * C872 + C26551 * C105 + C26495 * C176) *
                C79306 +
            (C26552 * C754 + C26496 * C864 + C26551 * C99 + C26495 * C170) *
                C26498) *
               C79307 * C79027 * C79229) *
              C79263)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
                 C26498 +
             (C26551 * C102 + C26495 * C173 + C26552 * C757 + C26496 * C867) *
                 C79306) *
                C79307 * C9011 -
            ((C26552 * C3935 + C26496 * C4051 + C26551 * C1690 +
              C26495 * C1800) *
                 C79306 +
             (C26552 * C3931 + C26496 * C4047 + C26551 * C1682 +
              C26495 * C1792) *
                 C26498) *
                C79307 * C9012 +
            ((C26551 * C1683 + C26495 * C1793 + C26552 * C6042 +
              C26496 * C6140) *
                 C26498 +
             (C26551 * C1691 + C26495 * C1801 + C26552 * C6048 +
              C26496 * C6146) *
                 C79306) *
                C79307 * C79262) *
               C79229 +
           (((C26551 * C3931 + C26495 * C4047 + C26552 * C6044 +
              C26496 * C6142) *
                 C26498 +
             (C26551 * C3935 + C26495 * C4051 + C26552 * C6050 +
              C26496 * C6148) *
                 C79306) *
                C79307 * C9012 -
            ((C26552 * C758 + C26496 * C868 + C26551 * C757 + C26495 * C867) *
                 C79306 +
             (C26552 * C750 + C26496 * C860 + C26551 * C749 + C26495 * C859) *
                 C26498) *
                C79307 * C9011 -
            ((C26552 * C6051 + C26496 * C6149 + C26551 * C6048 +
              C26495 * C6146) *
                 C79306 +
             (C26552 * C6045 + C26496 * C6143 + C26551 * C6042 +
              C26495 * C6140) *
                 C26498) *
                C79307 * C79262) *
               C79072) *
              C79215 +
          ((((C26551 * C1681 + C26495 * C1791 + C26552 * C3932 +
              C26496 * C4048) *
                 C26498 +
             (C26551 * C1689 + C26495 * C1799 + C26552 * C3936 +
              C26496 * C4052) *
                 C79306) *
                C79307 * C9012 -
            ((C26552 * C756 + C26496 * C866 + C26551 * C103 + C26495 * C174) *
                 C79306 +
             (C26552 * C748 + C26496 * C858 + C26551 * C97 + C26495 * C168) *
                 C26498) *
                C79307 * C9011 -
            ((C26552 * C6047 + C26496 * C6145 + C26551 * C1692 +
              C26495 * C1802) *
                 C79306 +
             (C26552 * C6041 + C26496 * C6139 + C26551 * C1684 +
              C26495 * C1794) *
                 C26498) *
                C79307 * C79262) *
               C79229 +
           (((C26551 * C748 + C26495 * C858 + C26552 * C751 + C26496 * C861) *
                 C26498 +
             (C26551 * C756 + C26495 * C866 + C26552 * C759 + C26496 * C869) *
                 C79306) *
                C79307 * C9011 -
            ((C26552 * C6049 + C26496 * C6147 + C26551 * C3936 +
              C26495 * C4052) *
                 C79306 +
             (C26552 * C6043 + C26496 * C6141 + C26551 * C3932 +
              C26495 * C4048) *
                 C26498) *
                C79307 * C9012 +
            ((C26551 * C6041 + C26495 * C6139 + C26552 * C6046 +
              C26496 * C6144) *
                 C26498 +
             (C26551 * C6047 + C26495 * C6145 + C26552 * C6052 +
              C26496 * C6150) *
                 C79306) *
                C79307 * C79262) *
               C79072) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eexz[35] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C245 * C96 + C79307 * C246) * C26498 +
             (C245 * C102 + C79307 * C252) * C79306) *
                C26495 +
            (C27144 + C27145) * C26496) *
               C79027 * C6795 -
           ((C27146 + C27147) * C26496 + (C27145 + C27144) * C26495) * C79027 *
               C6796 +
           ((C27147 + C27146) * C26495 + (C31377 + C31378) * C26496) * C79027 *
               C6797 -
           ((C31379 + C31380) * C26496 + (C31378 + C31377) * C26495) * C79027 *
               C79269) *
              C79215 +
          (((C27132 + C27133) * C26495 + (C27134 + C27135) * C26496) * C79027 *
               C6796 -
           ((C27133 + C27132) * C26496 +
            (C276 * C79306 + C275 * C26498) * C26495) *
               C79027 * C6795 -
           ((C32675 + C32676) * C26496 + (C27135 + C27134) * C26495) * C79027 *
               C6797 +
           ((C32676 + C32675) * C26495 +
            ((C245 * C5570 + C79307 * C5678) * C26498 +
             (C245 * C5574 + C79307 * C5682) * C79306) *
                C26496) *
               C79027 * C79269) *
              C78992)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C245 * C96 + C79307 * C246) * C26498 +
             (C245 * C102 + C79307 * C252) * C79306) *
                C26495 +
            (C27144 + C27145) * C26496) *
               C79027 * C79229 -
           ((C27146 + C27147) * C26496 + (C27145 + C27144) * C26495) * C79027 *
               C79072) *
              C2605 +
          (((C27132 + C27133) * C26495 + (C27134 + C27135) * C26496) * C79027 *
               C79072 -
           ((C27133 + C27132) * C26496 +
            (C276 * C79306 + C275 * C26498) * C26495) *
               C79027 * C79229) *
              C2606 +
          (((C278 * C26498 + C277 * C79306) * C26495 +
            (C27136 + C27137) * C26496) *
               C79027 * C79229 -
           ((C27138 + C27139) * C26496 + (C27137 + C27136) * C26495) * C79027 *
               C79072) *
              C2607 +
          (((C28581 + C28582) * C26495 +
            ((C245 * C755 + C79307 * C979) * C26498 +
             (C245 * C763 + C79307 * C987) * C79306) *
                C26496) *
               C79027 * C79072 -
           ((C28582 + C28581) * C26496 +
            (C280 * C79306 + C279 * C26498) * C26495) *
               C79027 * C79229) *
              C79263)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C245 * C96 + C79307 * C246) * C26498 +
              (C245 * C102 + C79307 * C252) * C79306) *
                 C26495 +
             (C27144 + C27145) * C26496) *
                C9011 -
            ((C29915 + C29916) * C26496 +
             ((C245 * C1690 + C79307 * C1914) * C79306 +
              (C245 * C1682 + C79307 * C1906) * C26498) *
                 C26495) *
                C9012 +
            (((C245 * C1683 + C79307 * C1907) * C26498 +
              (C245 * C1691 + C79307 * C1915) * C79306) *
                 C26495 +
             (C31950 + C31951) * C26496) *
                C79262) *
               C79229 +
           (((C29916 + C29915) * C26495 + (C31952 + C31953) * C26496) * C9012 -
            ((C27146 + C27147) * C26496 + (C27145 + C27144) * C26495) * C9011 -
            ((C31954 + C31955) * C26496 + (C31951 + C31950) * C26495) *
                C79262) *
               C79072) *
              C79215 +
          ((((C1939 * C26498 + C1938 * C79306) * C26495 +
             (C29909 + C29910) * C26496) *
                C9012 -
            ((C27133 + C27132) * C26496 +
             (C276 * C79306 + C275 * C26498) * C26495) *
                C9011 -
            ((C36667 + C36668) * C26496 +
             (C1941 * C79306 + C1940 * C26498) * C26495) *
                C79262) *
               C79229 +
           (((C27132 + C27133) * C26495 + (C27134 + C27135) * C26496) * C9011 -
            ((C33387 + C33388) * C26496 + (C29910 + C29909) * C26495) * C9012 +
            ((C36668 + C36667) * C26495 +
             ((C245 * C6046 + C79307 * C6230) * C26498 +
              (C245 * C6052 + C79307 * C6236) * C79306) *
                 C26496) *
                C79262) *
               C79072) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eeyx[35] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C26498 * C96 + C79306 * C102) * C26551 +
                      (C26498 * C167 + C79306 * C324) * C26495 +
                      C27246 * C26552 + C27247 * C26496) *
                         C79307 * C79027 * C6795 -
                     (C27248 * C26496 + C27249 * C26552 + C27247 * C26495 +
                      C27246 * C26551) *
                         C79307 * C79027 * C6796 +
                     (C27249 * C26551 + C27248 * C26495 + C31432 * C26552 +
                      C31433 * C26496) *
                         C79307 * C79027 * C6797 -
                     (C31434 * C26496 + C31435 * C26552 + C31433 * C26495 +
                      C31432 * C26551) *
                         C79307 * C79027 * C79269) *
                        C79215 +
                    ((C27250 * C26551 + C27251 * C26495 + C27252 * C26552 +
                      C27253 * C26496) *
                         C79307 * C79027 * C6796 -
                     (C27251 * C26496 + C27250 * C26552 +
                      (C26498 * C168 + C79306 * C325) * C26495 +
                      (C26498 * C97 + C79306 * C103) * C26551) *
                         C79307 * C79027 * C6795 -
                     (C32747 * C26496 + C32748 * C26552 + C27253 * C26495 +
                      C27252 * C26551) *
                         C79307 * C79027 * C6797 +
                     (C32748 * C26551 + C32747 * C26495 +
                      (C26498 * C5570 + C79306 * C5574) * C26552 +
                      (C26498 * C5628 + C79306 * C5728) * C26496) *
                         C79307 * C79027 * C79269) *
                        C78992)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C26498 * C96 + C79306 * C102) * C26551 +
                      (C26498 * C167 + C79306 * C324) * C26495 +
                      C27246 * C26552 + C27247 * C26496) *
                         C79307 * C79027 * C79229 -
                     (C27248 * C26496 + C27249 * C26552 + C27247 * C26495 +
                      C27246 * C26551) *
                         C79307 * C79027 * C79072) *
                        C2605 +
                    ((C27250 * C26551 + C27251 * C26495 + C27252 * C26552 +
                      C27253 * C26496) *
                         C79307 * C79027 * C79072 -
                     (C27251 * C26496 + C27250 * C26552 +
                      (C26498 * C168 + C79306 * C325) * C26495 +
                      (C26498 * C97 + C79306 * C103) * C26551) *
                         C79307 * C79027 * C79229) *
                        C2606 +
                    (((C26498 * C98 + C79306 * C104) * C26551 +
                      (C26498 * C169 + C79306 * C326) * C26495 +
                      C27254 * C26552 + C27255 * C26496) *
                         C79307 * C79027 * C79229 -
                     (C27256 * C26496 + C27257 * C26552 + C27255 * C26495 +
                      C27254 * C26551) *
                         C79307 * C79027 * C79072) *
                        C2607 +
                    ((C28653 * C26551 + C28654 * C26495 +
                      (C26498 * C755 + C79306 * C763) * C26552 +
                      (C26498 * C865 + C79306 * C1093) * C26496) *
                         C79307 * C79027 * C79072 -
                     (C28654 * C26496 + C28653 * C26552 +
                      (C26498 * C170 + C79306 * C327) * C26495 +
                      (C26498 * C99 + C79306 * C105) * C26551) *
                         C79307 * C79027 * C79229) *
                        C79263)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C26498 * C96 + C79306 * C102) * C26551 +
                       (C26498 * C167 + C79306 * C324) * C26495 +
                       C27246 * C26552 + C27247 * C26496) *
                          C79307 * C9011 -
                      (C30027 * C26496 + C30028 * C26552 +
                       (C26498 * C1792 + C79306 * C2020) * C26495 +
                       (C26498 * C1682 + C79306 * C1690) * C26551) *
                          C79307 * C9012 +
                      ((C26498 * C1683 + C79306 * C1691) * C26551 +
                       (C26498 * C1793 + C79306 * C2021) * C26495 +
                       C32043 * C26552 + C32044 * C26496) *
                          C79307 * C79262) *
                         C79229 +
                     ((C30028 * C26551 + C30027 * C26495 + C32045 * C26552 +
                       C32046 * C26496) *
                          C79307 * C9012 -
                      (C27248 * C26496 + C27249 * C26552 + C27247 * C26495 +
                       C27246 * C26551) *
                          C79307 * C9011 -
                      (C32047 * C26496 + C32048 * C26552 + C32044 * C26495 +
                       C32043 * C26551) *
                          C79307 * C79262) *
                         C79072) *
                        C79215 +
                    ((((C26498 * C1681 + C79306 * C1689) * C26551 +
                       (C26498 * C1791 + C79306 * C2019) * C26495 +
                       C30029 * C26552 + C30030 * C26496) *
                          C79307 * C9012 -
                      (C27251 * C26496 + C27250 * C26552 +
                       (C26498 * C168 + C79306 * C325) * C26495 +
                       (C26498 * C97 + C79306 * C103) * C26551) *
                          C79307 * C9011 -
                      (C36771 * C26496 + C36772 * C26552 +
                       (C26498 * C1794 + C79306 * C2022) * C26495 +
                       (C26498 * C1684 + C79306 * C1692) * C26551) *
                          C79307 * C79262) *
                         C79229 +
                     ((C27250 * C26551 + C27251 * C26495 + C27252 * C26552 +
                       C27253 * C26496) *
                          C79307 * C9011 -
                      (C33491 * C26496 + C33492 * C26552 + C30030 * C26495 +
                       C30029 * C26551) *
                          C79307 * C9012 +
                      (C36772 * C26551 + C36771 * C26495 +
                       (C26498 * C6046 + C79306 * C6052) * C26552 +
                       (C26498 * C6144 + C79306 * C6316) * C26496) *
                          C79307 * C79262) *
                         C79072) *
                        C78992)) /
                      (p * q * std::sqrt(p + q));
    d2eeyy[35] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C26679 * C96 + C26682 + C26682 + C26495 * C373 +
                      C26680 * C749 + C26683 + C26683 + C26496 * C1169) *
                         C79306 * C79307 * C79027 * C6795 -
                     (C26680 * C750 + C27332 + C27332 + C26496 * C1170 +
                      C26679 * C749 + C27333 + C27333 + C26495 * C1169) *
                         C79306 * C79307 * C79027 * C6796 +
                     (C26679 * C750 + C27334 + C27334 + C26495 * C1170 +
                      C26680 * C5568 + C27335 + C27335 + C26496 * C5772) *
                         C79306 * C79307 * C79027 * C6797 -
                     (C26680 * C5569 + C31479 + C31479 + C26496 * C5773 +
                      C26679 * C5568 + C31480 + C31480 + C26495 * C5772) *
                         C79306 * C79307 * C79027 * C79269) *
                        C79215 +
                    ((C26679 * C748 + C27336 + C27336 + C26495 * C1168 +
                      C26680 * C751 + C27337 + C27337 + C26496 * C1171) *
                         C79306 * C79307 * C79027 * C6796 -
                     (C26680 * C748 + C26684 + C26684 + C26496 * C1168 +
                      C26679 * C97 + C26685 + C26685 + C26495 * C374) *
                         C79306 * C79307 * C79027 * C6795 -
                     (C26680 * C5567 + C27338 + C27338 + C26496 * C5771 +
                      C26679 * C751 + C27339 + C27339 + C26495 * C1171) *
                         C79306 * C79307 * C79027 * C6797 +
                     (C26679 * C5567 + C32815 + C32815 + C26495 * C5771 +
                      C26680 * C5570 + C32816 + C32816 + C26496 * C5774) *
                         C79306 * C79307 * C79027 * C79269) *
                        C78992)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C26679 * C96 + C26682 + C26682 + C26495 * C373 +
                      C26680 * C749 + C26683 + C26683 + C26496 * C1169) *
                         C79306 * C79307 * C79027 * C79229 -
                     (C26680 * C750 + C27332 + C27332 + C26496 * C1170 +
                      C26679 * C749 + C27333 + C27333 + C26495 * C1169) *
                         C79306 * C79307 * C79027 * C79072) *
                        C2605 +
                    ((C26679 * C748 + C27336 + C27336 + C26495 * C1168 +
                      C26680 * C751 + C27337 + C27337 + C26496 * C1171) *
                         C79306 * C79307 * C79027 * C79072 -
                     (C26680 * C748 + C26684 + C26684 + C26496 * C1168 +
                      C26679 * C97 + C26685 + C26685 + C26495 * C374) *
                         C79306 * C79307 * C79027 * C79229) *
                        C2606 +
                    ((C26679 * C98 + C26686 + C26686 + C26495 * C375 +
                      C26680 * C752 + C26687 + C26687 + C26496 * C1172) *
                         C79306 * C79307 * C79027 * C79229 -
                     (C26680 * C753 + C27340 + C27340 + C26496 * C1173 +
                      C26679 * C752 + C27341 + C27341 + C26495 * C1172) *
                         C79306 * C79307 * C79027 * C79072) *
                        C2607 +
                    ((C26679 * C754 + C28721 + C28721 + C26495 * C1174 +
                      C26680 * C755 + C28722 + C28722 + C26496 * C1175) *
                         C79306 * C79307 * C79027 * C79072 -
                     (C26680 * C754 + C26688 + C26688 + C26496 * C1174 +
                      C26679 * C99 + C26689 + C26689 + C26495 * C376) *
                         C79306 * C79307 * C79027 * C79229) *
                        C79263)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C26679 * C96 + C26682 + C26682 + C26495 * C373 +
                       C26680 * C749 + C26683 + C26683 + C26496 * C1169) *
                          C79306 * C79307 * C9011 -
                      (C26680 * C3931 + C28068 + C28068 + C26496 * C4385 +
                       C26679 * C1682 + C28069 + C28069 + C26495 * C2102) *
                          C79306 * C79307 * C9012 +
                      (C26679 * C1683 + C28070 + C28070 + C26495 * C2103 +
                       C26680 * C6042 + C28071 + C28071 + C26496 * C6392) *
                          C79306 * C79307 * C79262) *
                         C79229 +
                     ((C26679 * C3931 + C30131 + C30131 + C26495 * C4385 +
                       C26680 * C6044 + C30132 + C30132 + C26496 * C6394) *
                          C79306 * C79307 * C9012 -
                      (C26680 * C750 + C27332 + C27332 + C26496 * C1170 +
                       C26679 * C749 + C27333 + C27333 + C26495 * C1169) *
                          C79306 * C79307 * C9011 -
                      (C26680 * C6045 + C32124 + C32124 + C26496 * C6395 +
                       C26679 * C6042 + C32125 + C32125 + C26495 * C6392) *
                          C79306 * C79307 * C79262) *
                         C79072) *
                        C79215 +
                    (((C26679 * C1681 + C28072 + C28072 + C26495 * C2101 +
                       C26680 * C3932 + C28073 + C28073 + C26496 * C4386) *
                          C79306 * C79307 * C9012 -
                      (C26680 * C748 + C26684 + C26684 + C26496 * C1168 +
                       C26679 * C97 + C26685 + C26685 + C26495 * C374) *
                          C79306 * C79307 * C9011 -
                      (C26680 * C6041 + C28074 + C28074 + C26496 * C6391 +
                       C26679 * C1684 + C28075 + C28075 + C26495 * C2104) *
                          C79306 * C79307 * C79262) *
                         C79229 +
                     ((C26679 * C748 + C27336 + C27336 + C26495 * C1168 +
                       C26680 * C751 + C27337 + C27337 + C26496 * C1171) *
                          C79306 * C79307 * C9011 -
                      (C26680 * C6043 + C30133 + C30133 + C26496 * C6393 +
                       C26679 * C3932 + C30134 + C30134 + C26495 * C4386) *
                          C79306 * C79307 * C9012 +
                      (C26679 * C6041 + C36871 + C36871 + C26495 * C6391 +
                       C26680 * C6046 + C36872 + C36872 + C26496 * C6396) *
                          C79306 * C79307 * C79262) *
                         C79072) *
                        C78992)) /
                      (p * q * std::sqrt(p + q));
    d2eeyz[35] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C245 * C96 + C79307 * C246) * C26551 +
            (C245 * C167 + C79307 * C447) * C26495 + C27140 * C26552 +
            C27422 * C26496) *
               C79306 * C79027 * C6795 -
           (C27423 * C26496 + C27143 * C26552 + C27422 * C26495 +
            C27140 * C26551) *
               C79306 * C79027 * C6796 +
           (C27143 * C26551 + C27423 * C26495 + C31373 * C26552 +
            C31530 * C26496) *
               C79306 * C79027 * C6797 -
           (C31531 * C26496 + C31376 * C26552 + C31530 * C26495 +
            C31373 * C26551) *
               C79306 * C79027 * C79269) *
              C79215 +
          ((C1006 * C26551 + C1299 * C26495 + C1007 * C26552 + C1300 * C26496) *
               C79306 * C79027 * C6796 -
           (C1299 * C26496 + C1006 * C26552 + C466 * C26495 + C275 * C26551) *
               C79306 * C79027 * C6795 -
           (C7165 * C26496 + C6954 * C26552 + C1300 * C26495 + C1007 * C26551) *
               C79306 * C79027 * C6797 +
           (C6954 * C26551 + C7165 * C26495 +
            (C245 * C5570 + C79307 * C5678) * C26552 +
            (C245 * C5628 + C79307 * C5824) * C26496) *
               C79306 * C79027 * C79269) *
              C78992)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C245 * C96 + C79307 * C246) * C26551 +
            (C245 * C167 + C79307 * C447) * C26495 + C27140 * C26552 +
            C27422 * C26496) *
               C79306 * C79027 * C79229 -
           (C27423 * C26496 + C27143 * C26552 + C27422 * C26495 +
            C27140 * C26551) *
               C79306 * C79027 * C79072) *
              C2605 +
          ((C1006 * C26551 + C1299 * C26495 + C1007 * C26552 + C1300 * C26496) *
               C79306 * C79027 * C79072 -
           (C1299 * C26496 + C1006 * C26552 + C466 * C26495 + C275 * C26551) *
               C79306 * C79027 * C79229) *
              C2606 +
          ((C278 * C26551 + C467 * C26495 + C1009 * C26552 + C1301 * C26496) *
               C79306 * C79027 * C79229 -
           (C1302 * C26496 + C1012 * C26552 + C1301 * C26495 + C1009 * C26551) *
               C79306 * C79027 * C79072) *
              C2607 +
          ((C2762 * C26551 + C2973 * C26495 +
            (C245 * C755 + C79307 * C979) * C26552 +
            (C245 * C865 + C79307 * C1285) * C26496) *
               C79306 * C79027 * C79072 -
           (C2973 * C26496 + C2762 * C26552 + C468 * C26495 + C279 * C26551) *
               C79306 * C79027 * C79229) *
              C79263)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C245 * C96 + C79307 * C246) * C26551 +
             (C245 * C167 + C79307 * C447) * C26495 + C27140 * C26552 +
             C27422 * C26496) *
                C79306 * C9011 -
            (C30237 * C26496 + C29914 * C26552 +
             (C245 * C1792 + C79307 * C2212) * C26495 +
             (C245 * C1682 + C79307 * C1906) * C26551) *
                C79306 * C9012 +
            ((C245 * C1683 + C79307 * C1907) * C26551 +
             (C245 * C1793 + C79307 * C2213) * C26495 + C31944 * C26552 +
             C32211 * C26496) *
                C79306 * C79262) *
               C79229 +
           ((C29914 * C26551 + C30237 * C26495 + C31946 * C26552 +
             C32212 * C26496) *
                C79306 * C9012 -
            (C27423 * C26496 + C27143 * C26552 + C27422 * C26495 +
             C27140 * C26551) *
                C79306 * C9011 -
            (C32213 * C26496 + C31949 * C26552 + C32211 * C26495 +
             C31944 * C26551) *
                C79306 * C79262) *
               C79072) *
              C79215 +
          (((C1939 * C26551 + C2232 * C26495 + C4182 * C26552 +
             C4512 * C26496) *
                C79306 * C9012 -
            (C1299 * C26496 + C1006 * C26552 + C466 * C26495 + C275 * C26551) *
                C79306 * C9011 -
            (C11341 * C26496 + C11034 * C26552 + C2233 * C26495 +
             C1940 * C26551) *
                C79306 * C79262) *
               C79229 +
           ((C1006 * C26551 + C1299 * C26495 + C1007 * C26552 +
             C1300 * C26496) *
                C79306 * C9011 -
            (C8001 * C26496 + C7694 * C26552 + C4512 * C26495 +
             C4182 * C26551) *
                C79306 * C9012 +
            (C11034 * C26551 + C11341 * C26495 +
             (C245 * C6046 + C79307 * C6230) * C26552 +
             (C245 * C6144 + C79307 * C6482) * C26496) *
                C79306 * C79262) *
               C79072) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eezx[35] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C26498 * C96 + C79306 * C102) * C245 +
             (C26498 * C246 + C79306 * C515) * C79307) *
                C26495 +
            (C27498 + C27522) * C26496) *
               C79027 * C6795 -
           ((C27523 + C27503) * C26496 + (C27522 + C27498) * C26495) * C79027 *
               C6796 +
           ((C27503 + C27523) * C26495 + (C31575 + C31583) * C26496) * C79027 *
               C6797 -
           ((C31584 + C31580) * C26496 + (C31583 + C31575) * C26495) * C79027 *
               C79269) *
              C79215 +
          (((C27504 + C27524) * C26495 + (C27507 + C27525) * C26496) * C79027 *
               C6796 -
           ((C27524 + C27504) * C26496 +
            ((C26498 * C247 + C79306 * C516) * C79307 +
             (C26498 * C97 + C79306 * C103) * C245) *
                C26495) *
               C79027 * C6795 -
           ((C32953 + C32951) * C26496 + (C27525 + C27507) * C26495) * C79027 *
               C6797 +
           ((C32951 + C32953) * C26495 +
            ((C26498 * C5570 + C79306 * C5574) * C245 +
             (C26498 * C5678 + C79306 * C5870) * C79307) *
                C26496) *
               C79027 * C79269) *
              C78992)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C26498 * C96 + C79306 * C102) * C245 +
             (C26498 * C246 + C79306 * C515) * C79307) *
                C26495 +
            (C27498 + C27522) * C26496) *
               C79027 * C79229 -
           ((C27523 + C27503) * C26496 + (C27522 + C27498) * C26495) * C79027 *
               C79072) *
              C2605 +
          (((C27504 + C27524) * C26495 + (C27507 + C27525) * C26496) * C79027 *
               C79072 -
           ((C27524 + C27504) * C26496 +
            ((C26498 * C247 + C79306 * C516) * C79307 +
             (C26498 * C97 + C79306 * C103) * C245) *
                C26495) *
               C79027 * C79229) *
              C2606 +
          ((((C26498 * C98 + C79306 * C104) * C245 +
             (C26498 * C248 + C79306 * C517) * C79307) *
                C26495 +
            (C27510 + C27526) * C26496) *
               C79027 * C79229 -
           ((C27527 + C27515) * C26496 + (C27526 + C27510) * C26495) * C79027 *
               C79072) *
              C2607 +
          (((C28855 + C28859) * C26495 +
            ((C26498 * C755 + C79306 * C763) * C245 +
             (C26498 * C979 + C79306 * C1387) * C79307) *
                C26496) *
               C79027 * C79072 -
           ((C28859 + C28855) * C26496 +
            ((C26498 * C249 + C79306 * C518) * C79307 +
             (C26498 * C99 + C79306 * C105) * C245) *
                C26495) *
               C79027 * C79229) *
              C79263)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C26498 * C96 + C79306 * C102) * C245 +
              (C26498 * C246 + C79306 * C515) * C79307) *
                 C26495 +
             (C27498 + C27522) * C26496) *
                C9011 -
            ((C30348 + C30338) * C26496 +
             ((C26498 * C1906 + C79306 * C2314) * C79307 +
              (C26498 * C1682 + C79306 * C1690) * C245) *
                 C26495) *
                C9012 +
            (((C26498 * C1683 + C79306 * C1691) * C245 +
              (C26498 * C1907 + C79306 * C2315) * C79307) *
                 C26495 +
             (C32289 + C32301) * C26496) *
                C79262) *
               C79229 +
           (((C30338 + C30348) * C26495 + (C32292 + C32302) * C26496) * C9012 -
            ((C27523 + C27503) * C26496 + (C27522 + C27498) * C26495) * C9011 -
            ((C32303 + C32297) * C26496 + (C32301 + C32289) * C26495) *
                C79262) *
               C79072) *
              C79215 +
          (((((C26498 * C1681 + C79306 * C1689) * C245 +
              (C26498 * C1905 + C79306 * C2313) * C79307) *
                 C26495 +
             (C30339 + C30349) * C26496) *
                C9012 -
            ((C27524 + C27504) * C26496 +
             ((C26498 * C247 + C79306 * C516) * C79307 +
              (C26498 * C97 + C79306 * C103) * C245) *
                 C26495) *
                C9011 -
            ((C37073 + C37071) * C26496 +
             ((C26498 * C1908 + C79306 * C2316) * C79307 +
              (C26498 * C1684 + C79306 * C1692) * C245) *
                 C26495) *
                C79262) *
               C79229 +
           (((C27504 + C27524) * C26495 + (C27507 + C27525) * C26496) * C9011 -
            ((C33793 + C33791) * C26496 + (C30349 + C30339) * C26495) * C9012 +
            ((C37071 + C37073) * C26495 +
             ((C26498 * C6046 + C79306 * C6052) * C245 +
              (C26498 * C6230 + C79306 * C6562) * C79307) *
                 C26496) *
                C79262) *
               C79072) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eezy[35] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
                C245 +
            (C26551 * C246 + C26495 * C563 + C26552 * C973 + C26496 * C1463) *
                C79307) *
               C79306 * C79027 * C6795 -
           ((C26552 * C974 + C26496 * C1464 + C26551 * C973 + C26495 * C1463) *
                C79307 +
            (C26552 * C750 + C26496 * C860 + C26551 * C749 + C26495 * C859) *
                C245) *
               C79306 * C79027 * C6796 +
           ((C26551 * C750 + C26495 * C860 + C26552 * C5568 + C26496 * C5626) *
                C245 +
            (C26551 * C974 + C26495 * C1464 + C26552 * C5676 + C26496 * C5914) *
                C79307) *
               C79306 * C79027 * C6797 -
           ((C26552 * C5677 + C26496 * C5915 + C26551 * C5676 +
             C26495 * C5914) *
                C79307 +
            (C26552 * C5569 + C26496 * C5627 + C26551 * C5568 +
             C26495 * C5626) *
                C245) *
               C79306 * C79027 * C79269) *
              C79215 +
          (((C26551 * C748 + C26495 * C858 + C26552 * C751 + C26496 * C861) *
                C245 +
            (C26551 * C972 + C26495 * C1462 + C26552 * C975 + C26496 * C1465) *
                C79307) *
               C79306 * C79027 * C6796 -
           ((C26552 * C972 + C26496 * C1462 + C26551 * C247 + C26495 * C564) *
                C79307 +
            (C26552 * C748 + C26496 * C858 + C26551 * C97 + C26495 * C168) *
                C245) *
               C79306 * C79027 * C6795 -
           ((C26552 * C5675 + C26496 * C5913 + C26551 * C975 + C26495 * C1465) *
                C79307 +
            (C26552 * C5567 + C26496 * C5625 + C26551 * C751 + C26495 * C861) *
                C245) *
               C79306 * C79027 * C6797 +
           ((C26551 * C5567 + C26495 * C5625 + C26552 * C5570 +
             C26496 * C5628) *
                C245 +
            (C26551 * C5675 + C26495 * C5913 + C26552 * C5678 +
             C26496 * C5916) *
                C79307) *
               C79306 * C79027 * C79269) *
              C78992)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
                C245 +
            (C26551 * C246 + C26495 * C563 + C26552 * C973 + C26496 * C1463) *
                C79307) *
               C79306 * C79027 * C79229 -
           ((C26552 * C974 + C26496 * C1464 + C26551 * C973 + C26495 * C1463) *
                C79307 +
            (C26552 * C750 + C26496 * C860 + C26551 * C749 + C26495 * C859) *
                C245) *
               C79306 * C79027 * C79072) *
              C2605 +
          (((C26551 * C748 + C26495 * C858 + C26552 * C751 + C26496 * C861) *
                C245 +
            (C26551 * C972 + C26495 * C1462 + C26552 * C975 + C26496 * C1465) *
                C79307) *
               C79306 * C79027 * C79072 -
           ((C26552 * C972 + C26496 * C1462 + C26551 * C247 + C26495 * C564) *
                C79307 +
            (C26552 * C748 + C26496 * C858 + C26551 * C97 + C26495 * C168) *
                C245) *
               C79306 * C79027 * C79229) *
              C2606 +
          (((C26551 * C98 + C26495 * C169 + C26552 * C752 + C26496 * C862) *
                C245 +
            (C26551 * C248 + C26495 * C565 + C26552 * C976 + C26496 * C1466) *
                C79307) *
               C79306 * C79027 * C79229 -
           ((C26552 * C977 + C26496 * C1467 + C26551 * C976 + C26495 * C1466) *
                C79307 +
            (C26552 * C753 + C26496 * C863 + C26551 * C752 + C26495 * C862) *
                C245) *
               C79306 * C79027 * C79072) *
              C2607 +
          (((C26551 * C754 + C26495 * C864 + C26552 * C755 + C26496 * C865) *
                C245 +
            (C26551 * C978 + C26495 * C1468 + C26552 * C979 + C26496 * C1469) *
                C79307) *
               C79306 * C79027 * C79072 -
           ((C26552 * C978 + C26496 * C1468 + C26551 * C249 + C26495 * C566) *
                C79307 +
            (C26552 * C754 + C26496 * C864 + C26551 * C99 + C26495 * C170) *
                C245) *
               C79306 * C79027 * C79229) *
              C79263)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
                 C245 +
             (C26551 * C246 + C26495 * C563 + C26552 * C973 + C26496 * C1463) *
                 C79307) *
                C79306 * C9011 -
            ((C26552 * C4165 + C26496 * C4715 + C26551 * C1906 +
              C26495 * C2396) *
                 C79307 +
             (C26552 * C3931 + C26496 * C4047 + C26551 * C1682 +
              C26495 * C1792) *
                 C245) *
                C79306 * C9012 +
            ((C26551 * C1683 + C26495 * C1793 + C26552 * C6042 +
              C26496 * C6140) *
                 C245 +
             (C26551 * C1907 + C26495 * C2397 + C26552 * C6226 +
              C26496 * C6638) *
                 C79307) *
                C79306 * C79262) *
               C79229 +
           (((C26551 * C3931 + C26495 * C4047 + C26552 * C6044 +
              C26496 * C6142) *
                 C245 +
             (C26551 * C4165 + C26495 * C4715 + C26552 * C6228 +
              C26496 * C6640) *
                 C79307) *
                C79306 * C9012 -
            ((C26552 * C974 + C26496 * C1464 + C26551 * C973 + C26495 * C1463) *
                 C79307 +
             (C26552 * C750 + C26496 * C860 + C26551 * C749 + C26495 * C859) *
                 C245) *
                C79306 * C9011 -
            ((C26552 * C6229 + C26496 * C6641 + C26551 * C6226 +
              C26495 * C6638) *
                 C79307 +
             (C26552 * C6045 + C26496 * C6143 + C26551 * C6042 +
              C26495 * C6140) *
                 C245) *
                C79306 * C79262) *
               C79072) *
              C79215 +
          ((((C26551 * C1681 + C26495 * C1791 + C26552 * C3932 +
              C26496 * C4048) *
                 C245 +
             (C26551 * C1905 + C26495 * C2395 + C26552 * C4166 +
              C26496 * C4716) *
                 C79307) *
                C79306 * C9012 -
            ((C26552 * C972 + C26496 * C1462 + C26551 * C247 + C26495 * C564) *
                 C79307 +
             (C26552 * C748 + C26496 * C858 + C26551 * C97 + C26495 * C168) *
                 C245) *
                C79306 * C9011 -
            ((C26552 * C6225 + C26496 * C6637 + C26551 * C1908 +
              C26495 * C2398) *
                 C79307 +
             (C26552 * C6041 + C26496 * C6139 + C26551 * C1684 +
              C26495 * C1794) *
                 C245) *
                C79306 * C79262) *
               C79229 +
           (((C26551 * C748 + C26495 * C858 + C26552 * C751 + C26496 * C861) *
                 C245 +
             (C26551 * C972 + C26495 * C1462 + C26552 * C975 + C26496 * C1465) *
                 C79307) *
                C79306 * C9011 -
            ((C26552 * C6227 + C26496 * C6639 + C26551 * C4166 +
              C26495 * C4716) *
                 C79307 +
             (C26552 * C6043 + C26496 * C6141 + C26551 * C3932 +
              C26495 * C4048) *
                 C245) *
                C79306 * C9012 +
            ((C26551 * C6041 + C26495 * C6139 + C26552 * C6046 +
              C26496 * C6144) *
                 C245 +
             (C26551 * C6225 + C26495 * C6637 + C26552 * C6230 +
              C26496 * C6642) *
                 C79307) *
                C79306 * C79262) *
               C79072) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eezz[35] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C631 * C96 + C639 + C639 + C79307 * C632) * C26495 +
            C27684 * C26496) *
               C79306 * C79027 * C6795 -
           (C27685 * C26496 + C27684 * C26495) * C79306 * C79027 * C6796 +
           (C27685 * C26495 + C31680 * C26496) * C79306 * C79027 * C6797 -
           (C31681 * C26496 + C31680 * C26495) * C79306 * C79027 * C79269) *
              C79215 +
          ((C1597 * C26495 + C1598 * C26496) * C79306 * C79027 * C6796 -
           (C1597 * C26496 + C661 * C26495) * C79306 * C79027 * C6795 -
           (C7378 * C26496 + C1598 * C26495) * C79306 * C79027 * C6797 +
           (C7378 * C26495 +
            (C631 * C5570 + C5967 + C5967 + C79307 * C5962) * C26496) *
               C79306 * C79027 * C79269) *
              C78992)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C631 * C96 + C639 + C639 + C79307 * C632) * C26495 +
            C27684 * C26496) *
               C79306 * C79027 * C79229 -
           (C27685 * C26496 + C27684 * C26495) * C79306 * C79027 * C79072) *
              C2605 +
          ((C1597 * C26495 + C1598 * C26496) * C79306 * C79027 * C79072 -
           (C1597 * C26496 + C661 * C26495) * C79306 * C79027 * C79229) *
              C2606 +
          ((C662 * C26495 + C1599 * C26496) * C79306 * C79027 * C79229 -
           (C1600 * C26496 + C1599 * C26495) * C79306 * C79027 * C79072) *
              C2607 +
          ((C3186 * C26495 +
            (C631 * C755 + C1588 + C1588 + C79307 * C1571) * C26496) *
               C79306 * C79027 * C79072 -
           (C3186 * C26496 + C663 * C26495) * C79306 * C79027 * C79229) *
              C79263)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C631 * C96 + C639 + C639 + C79307 * C632) * C26495 +
             C27684 * C26496) *
                C79306 * C9011 -
            (C30551 * C26496 +
             (C631 * C1682 + C2509 + C2509 + C79307 * C2498) * C26495) *
                C79306 * C9012 +
            ((C631 * C1683 + C2510 + C2510 + C79307 * C2499) * C26495 +
             C32467 * C26496) *
                C79306 * C79262) *
               C79229 +
           ((C30551 * C26495 + C32468 * C26496) * C79306 * C9012 -
            (C27685 * C26496 + C27684 * C26495) * C79306 * C9011 -
            (C32469 * C26496 + C32467 * C26495) * C79306 * C79262) *
               C79072) *
              C79215 +
          (((C2530 * C26495 + C4844 * C26496) * C79306 * C9012 -
            (C1597 * C26496 + C661 * C26495) * C79306 * C9011 -
            (C11650 * C26496 + C2531 * C26495) * C79306 * C79262) *
               C79229 +
           ((C1597 * C26495 + C1598 * C26496) * C79306 * C9011 -
            (C8310 * C26496 + C4844 * C26495) * C79306 * C9012 +
            (C11650 * C26495 +
             (C631 * C6046 + C6729 + C6729 + C79307 * C6722) * C26496) *
                C79306 * C79262) *
               C79072) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eexx[36] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C79307 * C26495 +
            C26970 * C26496) *
               C79230 -
           (C29706 * C26496 +
            (C26497 * C1682 + C27761 + C27761 + C79306 * C1698) * C79307 *
                C26495) *
               C79114) *
              C6795 +
          ((C29706 * C26495 + C31778 * C26496) * C79114 -
           (C26971 * C26496 + C26970 * C26495) * C79230) *
              C6796 +
          ((C26971 * C26495 + C31275 * C26496) * C79230 -
           (C34065 * C26496 + C31778 * C26495) * C79114) *
              C6797 +
          ((C34065 * C26495 +
            (C26497 * C34055 + C34061 + C34061 + C79306 * C34057) * C79307 *
                C26496) *
               C79114 -
           (C31276 * C26496 + C31275 * C26495) * C79230) *
              C79269) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C79307 *
                 C26495 +
             C26970 * C26496) *
                C79230 -
            (C29706 * C26496 +
             (C26497 * C1682 + C27761 + C27761 + C79306 * C1698) * C79307 *
                 C26495) *
                C79114) *
               C79229 +
           ((C29706 * C26495 +
             (C26497 * C6044 + C29690 + C29690 + C79306 * C6056) * C79307 *
                 C26496) *
                C79114 -
            (C26971 * C26496 + C26970 * C26495) * C79230) *
               C79072) *
              C745 +
          ((((C26497 * C1681 + C27764 + C27764 + C79306 * C1697) * C79307 *
                 C26495 +
             C29707 * C26496) *
                C79114 -
            (C26972 * C26496 +
             (C26497 * C97 + C26503 + C26503 + C79306 * C109) * C79307 *
                 C26495) *
                C79230) *
               C79229 +
           ((C26972 * C26495 + C26973 * C26496) * C79230 -
            ((C26497 * C6043 + C29693 + C29693 + C79306 * C6055) * C79307 *
                 C26496 +
             C29707 * C26495) *
                C79114) *
               C79072) *
              C746 +
          ((((C26497 * C98 + C26504 + C26504 + C79306 * C110) * C79307 *
                 C26495 +
             C26974 * C26496) *
                C79230 -
            (C29708 * C26496 +
             (C26497 * C1685 + C27769 + C27769 + C79306 * C1701) * C79307 *
                 C26495) *
                C79114) *
               C79229 +
           ((C29708 * C26495 +
             (C26497 * C7477 + C29696 + C29696 + C79306 * C7479) * C79307 *
                 C26496) *
                C79114 -
            (C26975 * C26496 + C26974 * C26495) * C79230) *
               C79072) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C79307 * C26495 +
            C26970 * C26496) *
               C11717 -
           (C29706 * C26496 +
            (C26497 * C1682 + C27761 + C27761 + C79306 * C1698) * C79307 *
                C26495) *
               C11718 +
           ((C26497 * C1683 + C27762 + C27762 + C79306 * C1699) * C79307 *
                C26495 +
            C31777 * C26496) *
               C11719 -
           (C37943 * C26496 +
            (C26497 * C10320 + C36012 + C36012 + C79306 * C10328) * C79307 *
                C26495) *
               C79275) *
              C79229 +
          ((C29706 * C26495 + C31778 * C26496) * C11718 -
           (C26971 * C26496 + C26970 * C26495) * C11717 -
           (C31779 * C26496 + C31777 * C26495) * C11719 +
           (C37943 * C26495 +
            (C26497 * C37933 + C37939 + C37939 + C79306 * C37935) * C79307 *
                C26496) *
               C79275) *
              C79072) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eexy[36] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
                C26498 +
            (C26551 * C102 + C26495 * C173 + C26552 * C757 + C26496 * C867) *
                C79306) *
               C79307 * C79230 -
           ((C26552 * C3935 + C26496 * C4051 + C26551 * C1690 +
             C26495 * C1800) *
                C79306 +
            (C26552 * C3931 + C26496 * C4047 + C26551 * C1682 +
             C26495 * C1792) *
                C26498) *
               C79307 * C79114) *
              C6795 +
          (((C26551 * C3931 + C26495 * C4047 + C26552 * C6044 +
             C26496 * C6142) *
                C26498 +
            (C26551 * C3935 + C26495 * C4051 + C26552 * C6050 +
             C26496 * C6148) *
                C79306) *
               C79307 * C79114 -
           ((C26552 * C758 + C26496 * C868 + C26551 * C757 + C26495 * C867) *
                C79306 +
            (C26552 * C750 + C26496 * C860 + C26551 * C749 + C26495 * C859) *
                C26498) *
               C79307 * C79230) *
              C6796 +
          (((C26551 * C750 + C26495 * C860 + C26552 * C5568 + C26496 * C5626) *
                C26498 +
            (C26551 * C758 + C26495 * C868 + C26552 * C5572 + C26496 * C5630) *
                C79306) *
               C79307 * C79230 -
           ((C26552 * C8379 + C26496 * C8453 + C26551 * C6050 +
             C26495 * C6148) *
                C79306 +
            (C26552 * C8377 + C26496 * C8451 + C26551 * C6044 +
             C26495 * C6142) *
                C26498) *
               C79307 * C79114) *
              C6797 +
          (((C26551 * C8377 + C26495 * C8451 + C26552 * C34055 +
             C26496 * C34131) *
                C26498 +
            (C26551 * C8379 + C26495 * C8453 + C26552 * C34056 +
             C26496 * C34132) *
                C79306) *
               C79307 * C79114 -
           ((C26552 * C5573 + C26496 * C5631 + C26551 * C5572 +
             C26495 * C5630) *
                C79306 +
            (C26552 * C5569 + C26496 * C5627 + C26551 * C5568 +
             C26495 * C5626) *
                C26498) *
               C79307 * C79230) *
              C79269) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
                 C26498 +
             (C26551 * C102 + C26495 * C173 + C26552 * C757 + C26496 * C867) *
                 C79306) *
                C79307 * C79230 -
            ((C26552 * C3935 + C26496 * C4051 + C26551 * C1690 +
              C26495 * C1800) *
                 C79306 +
             (C26552 * C3931 + C26496 * C4047 + C26551 * C1682 +
              C26495 * C1792) *
                 C26498) *
                C79307 * C79114) *
               C79229 +
           (((C26551 * C3931 + C26495 * C4047 + C26552 * C6044 +
              C26496 * C6142) *
                 C26498 +
             (C26551 * C3935 + C26495 * C4051 + C26552 * C6050 +
              C26496 * C6148) *
                 C79306) *
                C79307 * C79114 -
            ((C26552 * C758 + C26496 * C868 + C26551 * C757 + C26495 * C867) *
                 C79306 +
             (C26552 * C750 + C26496 * C860 + C26551 * C749 + C26495 * C859) *
                 C26498) *
                C79307 * C79230) *
               C79072) *
              C745 +
          ((((C26551 * C1681 + C26495 * C1791 + C26552 * C3932 +
              C26496 * C4048) *
                 C26498 +
             (C26551 * C1689 + C26495 * C1799 + C26552 * C3936 +
              C26496 * C4052) *
                 C79306) *
                C79307 * C79114 -
            ((C26552 * C756 + C26496 * C866 + C26551 * C103 + C26495 * C174) *
                 C79306 +
             (C26552 * C748 + C26496 * C858 + C26551 * C97 + C26495 * C168) *
                 C26498) *
                C79307 * C79230) *
               C79229 +
           (((C26551 * C748 + C26495 * C858 + C26552 * C751 + C26496 * C861) *
                 C26498 +
             (C26551 * C756 + C26495 * C866 + C26552 * C759 + C26496 * C869) *
                 C79306) *
                C79307 * C79230 -
            ((C26552 * C6049 + C26496 * C6147 + C26551 * C3936 +
              C26495 * C4052) *
                 C79306 +
             (C26552 * C6043 + C26496 * C6141 + C26551 * C3932 +
              C26495 * C4048) *
                 C26498) *
                C79307 * C79114) *
               C79072) *
              C746 +
          ((((C26551 * C98 + C26495 * C169 + C26552 * C752 + C26496 * C862) *
                 C26498 +
             (C26551 * C104 + C26495 * C175 + C26552 * C760 + C26496 * C870) *
                 C79306) *
                C79307 * C79230 -
            ((C26552 * C3937 + C26496 * C4053 + C26551 * C1693 +
              C26495 * C1803) *
                 C79306 +
             (C26552 * C3933 + C26496 * C4049 + C26551 * C1685 +
              C26495 * C1795) *
                 C26498) *
                C79307 * C79114) *
               C79229 +
           (((C26551 * C3933 + C26495 * C4049 + C26552 * C7477 +
              C26496 * C7580) *
                 C26498 +
             (C26551 * C3937 + C26495 * C4053 + C26552 * C7478 +
              C26496 * C7581) *
                 C79306) *
                C79307 * C79114 -
            ((C26552 * C761 + C26496 * C871 + C26551 * C760 + C26495 * C870) *
                 C79306 +
             (C26552 * C753 + C26496 * C863 + C26551 * C752 + C26495 * C862) *
                 C26498) *
                C79307 * C79230) *
               C79072) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
                C26498 +
            (C26551 * C102 + C26495 * C173 + C26552 * C757 + C26496 * C867) *
                C79306) *
               C79307 * C11717 -
           ((C26552 * C3935 + C26496 * C4051 + C26551 * C1690 +
             C26495 * C1800) *
                C79306 +
            (C26552 * C3931 + C26496 * C4047 + C26551 * C1682 +
             C26495 * C1792) *
                C26498) *
               C79307 * C11718 +
           ((C26551 * C1683 + C26495 * C1793 + C26552 * C6042 +
             C26496 * C6140) *
                C26498 +
            (C26551 * C1691 + C26495 * C1801 + C26552 * C6048 +
             C26496 * C6146) *
                C79306) *
               C79307 * C11719 -
           ((C26552 * C12367 + C26496 * C12441 + C26551 * C10324 +
             C26495 * C10382) *
                C79306 +
            (C26552 * C12365 + C26496 * C12439 + C26551 * C10320 +
             C26495 * C10378) *
                C26498) *
               C79307 * C79275) *
              C79229 +
          (((C26551 * C3931 + C26495 * C4047 + C26552 * C6044 +
             C26496 * C6142) *
                C26498 +
            (C26551 * C3935 + C26495 * C4051 + C26552 * C6050 +
             C26496 * C6148) *
                C79306) *
               C79307 * C11718 -
           ((C26552 * C758 + C26496 * C868 + C26551 * C757 + C26495 * C867) *
                C79306 +
            (C26552 * C750 + C26496 * C860 + C26551 * C749 + C26495 * C859) *
                C26498) *
               C79307 * C11717 -
           ((C26552 * C6051 + C26496 * C6149 + C26551 * C6048 +
             C26495 * C6146) *
                C79306 +
            (C26552 * C6045 + C26496 * C6143 + C26551 * C6042 +
             C26495 * C6140) *
                C26498) *
               C79307 * C11719 +
           ((C26551 * C12365 + C26495 * C12439 + C26552 * C37933 +
             C26496 * C38009) *
                C26498 +
            (C26551 * C12367 + C26495 * C12441 + C26552 * C37934 +
             C26496 * C38010) *
                C79306) *
               C79307 * C79275) *
              C79072) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eexz[36] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C245 * C96 + C79307 * C246) * C26498 +
             (C245 * C102 + C79307 * C252) * C79306) *
                C26495 +
            (C27144 + C27145) * C26496) *
               C79230 -
           ((C29915 + C29916) * C26496 +
            ((C245 * C1690 + C79307 * C1914) * C79306 +
             (C245 * C1682 + C79307 * C1906) * C26498) *
                C26495) *
               C79114) *
              C6795 +
          (((C29916 + C29915) * C26495 + (C31952 + C31953) * C26496) * C79114 -
           ((C27146 + C27147) * C26496 + (C27145 + C27144) * C26495) * C79230) *
              C6796 +
          (((C27147 + C27146) * C26495 + (C31377 + C31378) * C26496) * C79230 -
           ((C34208 + C34209) * C26496 + (C31953 + C31952) * C26495) * C79114) *
              C6797 +
          (((C34209 + C34208) * C26495 +
            ((C245 * C34055 + C79307 * C34199) * C26498 +
             (C245 * C34056 + C79307 * C34200) * C79306) *
                C26496) *
               C79114 -
           ((C31379 + C31380) * C26496 + (C31378 + C31377) * C26495) * C79230) *
              C79269) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C245 * C96 + C79307 * C246) * C26498 +
              (C245 * C102 + C79307 * C252) * C79306) *
                 C26495 +
             (C27144 + C27145) * C26496) *
                C79230 -
            ((C29915 + C29916) * C26496 +
             ((C245 * C1690 + C79307 * C1914) * C79306 +
              (C245 * C1682 + C79307 * C1906) * C26498) *
                 C26495) *
                C79114) *
               C79229 +
           (((C29916 + C29915) * C26495 +
             ((C245 * C6044 + C79307 * C6228) * C26498 +
              (C245 * C6050 + C79307 * C6234) * C79306) *
                 C26496) *
                C79114 -
            ((C27146 + C27147) * C26496 + (C27145 + C27144) * C26495) *
                C79230) *
               C79072) *
              C745 +
          ((((C1939 * C26498 + C1938 * C79306) * C26495 +
             (C29909 + C29910) * C26496) *
                C79114 -
            ((C27133 + C27132) * C26496 +
             (C276 * C79306 + C275 * C26498) * C26495) *
                C79230) *
               C79229 +
           (((C27132 + C27133) * C26495 + (C27134 + C27135) * C26496) * C79230 -
            ((C7693 * C79306 + C7694 * C26498) * C26496 +
             (C29910 + C29909) * C26495) *
                C79114) *
               C79072) *
              C746 +
          ((((C278 * C26498 + C277 * C79306) * C26495 +
             (C27136 + C27137) * C26496) *
                C79230 -
            ((C29911 + C29912) * C26496 +
             (C1943 * C79306 + C1942 * C26498) * C26495) *
                C79114) *
               C79229 +
           (((C29912 + C29911) * C26495 +
             ((C245 * C7477 + C79307 * C7686) * C26498 +
              (C245 * C7478 + C79307 * C7687) * C79306) *
                 C26496) *
                C79114 -
            ((C27138 + C27139) * C26496 + (C27137 + C27136) * C26495) *
                C79230) *
               C79072) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C245 * C96 + C79307 * C246) * C26498 +
             (C245 * C102 + C79307 * C252) * C79306) *
                C26495 +
            (C27144 + C27145) * C26496) *
               C11717 -
           ((C29915 + C29916) * C26496 +
            ((C245 * C1690 + C79307 * C1914) * C79306 +
             (C245 * C1682 + C79307 * C1906) * C26498) *
                C26495) *
               C11718 +
           (((C245 * C1683 + C79307 * C1907) * C26498 +
             (C245 * C1691 + C79307 * C1915) * C79306) *
                C26495 +
            (C31950 + C31951) * C26496) *
               C11719 -
           ((C38086 + C38087) * C26496 +
            ((C245 * C10324 + C79307 * C10432) * C79306 +
             (C245 * C10320 + C79307 * C10428) * C26498) *
                C26495) *
               C79275) *
              C79229 +
          (((C29916 + C29915) * C26495 + (C31952 + C31953) * C26496) * C11718 -
           ((C27146 + C27147) * C26496 + (C27145 + C27144) * C26495) * C11717 -
           ((C31954 + C31955) * C26496 + (C31951 + C31950) * C26495) * C11719 +
           ((C38087 + C38086) * C26495 +
            ((C245 * C37933 + C79307 * C38077) * C26498 +
             (C245 * C37934 + C79307 * C38078) * C79306) *
                C26496) *
               C79275) *
              C79072) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eeyx[36] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C26498 * C96 + C79306 * C102) * C26551 +
                      (C26498 * C167 + C79306 * C324) * C26495 +
                      C27246 * C26552 + C27247 * C26496) *
                         C79307 * C79230 -
                     (C30027 * C26496 + C30028 * C26552 +
                      (C26498 * C1792 + C79306 * C2020) * C26495 +
                      (C26498 * C1682 + C79306 * C1690) * C26551) *
                         C79307 * C79114) *
                        C6795 +
                    ((C30028 * C26551 + C30027 * C26495 + C32045 * C26552 +
                      C32046 * C26496) *
                         C79307 * C79114 -
                     (C27248 * C26496 + C27249 * C26552 + C27247 * C26495 +
                      C27246 * C26551) *
                         C79307 * C79230) *
                        C6796 +
                    ((C27249 * C26551 + C27248 * C26495 + C31432 * C26552 +
                      C31433 * C26496) *
                         C79307 * C79230 -
                     (C34281 * C26496 + C34282 * C26552 + C32046 * C26495 +
                      C32045 * C26551) *
                         C79307 * C79114) *
                        C6797 +
                    ((C34282 * C26551 + C34281 * C26495 +
                      (C26498 * C34055 + C79306 * C34056) * C26552 +
                      (C26498 * C34131 + C79306 * C34275) * C26496) *
                         C79307 * C79114 -
                     (C31434 * C26496 + C31435 * C26552 + C31433 * C26495 +
                      C31432 * C26551) *
                         C79307 * C79230) *
                        C79269) *
                   C78981) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((((C26498 * C96 + C79306 * C102) * C26551 +
                       (C26498 * C167 + C79306 * C324) * C26495 +
                       C27246 * C26552 + C27247 * C26496) *
                          C79307 * C79230 -
                      (C30027 * C26496 + C30028 * C26552 +
                       (C26498 * C1792 + C79306 * C2020) * C26495 +
                       (C26498 * C1682 + C79306 * C1690) * C26551) *
                          C79307 * C79114) *
                         C79229 +
                     ((C30028 * C26551 + C30027 * C26495 +
                       (C26498 * C6044 + C79306 * C6050) * C26552 +
                       (C26498 * C6142 + C79306 * C6314) * C26496) *
                          C79307 * C79114 -
                      (C27248 * C26496 + C27249 * C26552 + C27247 * C26495 +
                       C27246 * C26551) *
                          C79307 * C79230) *
                         C79072) *
                        C745 +
                    ((((C26498 * C1681 + C79306 * C1689) * C26551 +
                       (C26498 * C1791 + C79306 * C2019) * C26495 +
                       C30029 * C26552 + C30030 * C26496) *
                          C79307 * C79114 -
                      (C27251 * C26496 + C27250 * C26552 +
                       (C26498 * C168 + C79306 * C325) * C26495 +
                       (C26498 * C97 + C79306 * C103) * C26551) *
                          C79307 * C79230) *
                         C79229 +
                     ((C27250 * C26551 + C27251 * C26495 + C27252 * C26552 +
                       C27253 * C26496) *
                          C79307 * C79230 -
                      ((C26498 * C6141 + C79306 * C6313) * C26496 +
                       (C26498 * C6043 + C79306 * C6049) * C26552 +
                       C30030 * C26495 + C30029 * C26551) *
                          C79307 * C79114) *
                         C79072) *
                        C746 +
                    ((((C26498 * C98 + C79306 * C104) * C26551 +
                       (C26498 * C169 + C79306 * C326) * C26495 +
                       C27254 * C26552 + C27255 * C26496) *
                          C79307 * C79230 -
                      (C30031 * C26496 + C30032 * C26552 +
                       (C26498 * C1795 + C79306 * C2023) * C26495 +
                       (C26498 * C1685 + C79306 * C1693) * C26551) *
                          C79307 * C79114) *
                         C79229 +
                     ((C30032 * C26551 + C30031 * C26495 +
                       (C26498 * C7477 + C79306 * C7478) * C26552 +
                       (C26498 * C7580 + C79306 * C7792) * C26496) *
                          C79307 * C79114 -
                      (C27256 * C26496 + C27257 * C26552 + C27255 * C26495 +
                       C27254 * C26551) *
                          C79307 * C79230) *
                         C79072) *
                        C79253)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C26498 * C96 + C79306 * C102) * C26551 +
                      (C26498 * C167 + C79306 * C324) * C26495 +
                      C27246 * C26552 + C27247 * C26496) *
                         C79307 * C11717 -
                     (C30027 * C26496 + C30028 * C26552 +
                      (C26498 * C1792 + C79306 * C2020) * C26495 +
                      (C26498 * C1682 + C79306 * C1690) * C26551) *
                         C79307 * C11718 +
                     ((C26498 * C1683 + C79306 * C1691) * C26551 +
                      (C26498 * C1793 + C79306 * C2021) * C26495 +
                      C32043 * C26552 + C32044 * C26496) *
                         C79307 * C11719 -
                     (C38159 * C26496 + C38160 * C26552 +
                      (C26498 * C10378 + C79306 * C10478) * C26495 +
                      (C26498 * C10320 + C79306 * C10324) * C26551) *
                         C79307 * C79275) *
                        C79229 +
                    ((C30028 * C26551 + C30027 * C26495 + C32045 * C26552 +
                      C32046 * C26496) *
                         C79307 * C11718 -
                     (C27248 * C26496 + C27249 * C26552 + C27247 * C26495 +
                      C27246 * C26551) *
                         C79307 * C11717 -
                     (C32047 * C26496 + C32048 * C26552 + C32044 * C26495 +
                      C32043 * C26551) *
                         C79307 * C11719 +
                     (C38160 * C26551 + C38159 * C26495 +
                      (C26498 * C37933 + C79306 * C37934) * C26552 +
                      (C26498 * C38009 + C79306 * C38153) * C26496) *
                         C79307 * C79275) *
                        C79072) *
                   C78981) /
                      (p * q * std::sqrt(p + q));
    d2eeyy[36] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C26679 * C96 + C26682 + C26682 + C26495 * C373 +
                      C26680 * C749 + C26683 + C26683 + C26496 * C1169) *
                         C79306 * C79307 * C79230 -
                     (C26680 * C3931 + C28068 + C28068 + C26496 * C4385 +
                      C26679 * C1682 + C28069 + C28069 + C26495 * C2102) *
                         C79306 * C79307 * C79114) *
                        C6795 +
                    ((C26679 * C3931 + C30131 + C30131 + C26495 * C4385 +
                      C26680 * C6044 + C30132 + C30132 + C26496 * C6394) *
                         C79306 * C79307 * C79114 -
                     (C26680 * C750 + C27332 + C27332 + C26496 * C1170 +
                      C26679 * C749 + C27333 + C27333 + C26495 * C1169) *
                         C79306 * C79307 * C79230) *
                        C6796 +
                    ((C26679 * C750 + C27334 + C27334 + C26495 * C1170 +
                      C26680 * C5568 + C27335 + C27335 + C26496 * C5772) *
                         C79306 * C79307 * C79230 -
                     (C26680 * C8377 + C32126 + C32126 + C26496 * C8659 +
                      C26679 * C6044 + C32127 + C32127 + C26495 * C6394) *
                         C79306 * C79307 * C79114) *
                        C6797 +
                    ((C26679 * C8377 + C34350 + C34350 + C26495 * C8659 +
                      C26680 * C34055 + C34351 + C34351 + C26496 * C34348) *
                         C79306 * C79307 * C79114 -
                     (C26680 * C5569 + C31479 + C31479 + C26496 * C5773 +
                      C26679 * C5568 + C31480 + C31480 + C26495 * C5772) *
                         C79306 * C79307 * C79230) *
                        C79269) *
                   C78981) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C26679 * C96 + C26682 + C26682 + C26495 * C373 +
                       C26680 * C749 + C26683 + C26683 + C26496 * C1169) *
                          C79306 * C79307 * C79230 -
                      (C26680 * C3931 + C28068 + C28068 + C26496 * C4385 +
                       C26679 * C1682 + C28069 + C28069 + C26495 * C2102) *
                          C79306 * C79307 * C79114) *
                         C79229 +
                     ((C26679 * C3931 + C30131 + C30131 + C26495 * C4385 +
                       C26680 * C6044 + C30132 + C30132 + C26496 * C6394) *
                          C79306 * C79307 * C79114 -
                      (C26680 * C750 + C27332 + C27332 + C26496 * C1170 +
                       C26679 * C749 + C27333 + C27333 + C26495 * C1169) *
                          C79306 * C79307 * C79230) *
                         C79072) *
                        C745 +
                    (((C26679 * C1681 + C28072 + C28072 + C26495 * C2101 +
                       C26680 * C3932 + C28073 + C28073 + C26496 * C4386) *
                          C79306 * C79307 * C79114 -
                      (C26680 * C748 + C26684 + C26684 + C26496 * C1168 +
                       C26679 * C97 + C26685 + C26685 + C26495 * C374) *
                          C79306 * C79307 * C79230) *
                         C79229 +
                     ((C26679 * C748 + C27336 + C27336 + C26495 * C1168 +
                       C26680 * C751 + C27337 + C27337 + C26496 * C1171) *
                          C79306 * C79307 * C79230 -
                      (C26680 * C6043 + C30133 + C30133 + C26496 * C6393 +
                       C26679 * C3932 + C30134 + C30134 + C26495 * C4386) *
                          C79306 * C79307 * C79114) *
                         C79072) *
                        C746 +
                    (((C26679 * C98 + C26686 + C26686 + C26495 * C375 +
                       C26680 * C752 + C26687 + C26687 + C26496 * C1172) *
                          C79306 * C79307 * C79230 -
                      (C26680 * C3933 + C28076 + C28076 + C26496 * C4387 +
                       C26679 * C1685 + C28077 + C28077 + C26495 * C2105) *
                          C79306 * C79307 * C79114) *
                         C79229 +
                     ((C26679 * C3933 + C30135 + C30135 + C26495 * C4387 +
                       C26680 * C7477 + C30136 + C30136 + C26496 * C7891) *
                          C79306 * C79307 * C79114 -
                      (C26680 * C753 + C27340 + C27340 + C26496 * C1173 +
                       C26679 * C752 + C27341 + C27341 + C26495 * C1172) *
                          C79306 * C79307 * C79230) *
                         C79072) *
                        C79253)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((C26679 * C96 + C26682 + C26682 + C26495 * C373 +
                      C26680 * C749 + C26683 + C26683 + C26496 * C1169) *
                         C79306 * C79307 * C11717 -
                     (C26680 * C3931 + C28068 + C28068 + C26496 * C4385 +
                      C26679 * C1682 + C28069 + C28069 + C26495 * C2102) *
                         C79306 * C79307 * C11718 +
                     (C26679 * C1683 + C28070 + C28070 + C26495 * C2103 +
                      C26680 * C6042 + C28071 + C28071 + C26496 * C6392) *
                         C79306 * C79307 * C11719 -
                     (C26680 * C12365 + C36189 + C36189 + C26496 * C12647 +
                      C26679 * C10320 + C36190 + C36190 + C26495 * C10524) *
                         C79306 * C79307 * C79275) *
                        C79229 +
                    ((C26679 * C3931 + C30131 + C30131 + C26495 * C4385 +
                      C26680 * C6044 + C30132 + C30132 + C26496 * C6394) *
                         C79306 * C79307 * C11718 -
                     (C26680 * C750 + C27332 + C27332 + C26496 * C1170 +
                      C26679 * C749 + C27333 + C27333 + C26495 * C1169) *
                         C79306 * C79307 * C11717 -
                     (C26680 * C6045 + C32124 + C32124 + C26496 * C6395 +
                      C26679 * C6042 + C32125 + C32125 + C26495 * C6392) *
                         C79306 * C79307 * C11719 +
                     (C26679 * C12365 + C38228 + C38228 + C26495 * C12647 +
                      C26680 * C37933 + C38229 + C38229 + C26496 * C38226) *
                         C79306 * C79307 * C79275) *
                        C79072) *
                   C78981) /
                      (p * q * std::sqrt(p + q));
    d2eeyz[36] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C245 * C96 + C79307 * C246) * C26551 +
            (C245 * C167 + C79307 * C447) * C26495 + C27140 * C26552 +
            C27422 * C26496) *
               C79306 * C79230 -
           (C30237 * C26496 + C29914 * C26552 +
            (C245 * C1792 + C79307 * C2212) * C26495 +
            (C245 * C1682 + C79307 * C1906) * C26551) *
               C79306 * C79114) *
              C6795 +
          ((C29914 * C26551 + C30237 * C26495 + C31946 * C26552 +
            C32212 * C26496) *
               C79306 * C79114 -
           (C27423 * C26496 + C27143 * C26552 + C27422 * C26495 +
            C27140 * C26551) *
               C79306 * C79230) *
              C6796 +
          ((C27143 * C26551 + C27423 * C26495 + C31373 * C26552 +
            C31530 * C26496) *
               C79306 * C79230 -
           (C34421 * C26496 + C34207 * C26552 + C32212 * C26495 +
            C31946 * C26551) *
               C79306 * C79114) *
              C6797 +
          ((C34207 * C26551 + C34421 * C26495 +
            (C245 * C34055 + C79307 * C34199) * C26552 +
            (C245 * C34131 + C79307 * C34417) * C26496) *
               C79306 * C79114 -
           (C31531 * C26496 + C31376 * C26552 + C31530 * C26495 +
            C31373 * C26551) *
               C79306 * C79230) *
              C79269) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C245 * C96 + C79307 * C246) * C26551 +
             (C245 * C167 + C79307 * C447) * C26495 + C27140 * C26552 +
             C27422 * C26496) *
                C79306 * C79230 -
            (C30237 * C26496 + C29914 * C26552 +
             (C245 * C1792 + C79307 * C2212) * C26495 +
             (C245 * C1682 + C79307 * C1906) * C26551) *
                C79306 * C79114) *
               C79229 +
           ((C29914 * C26551 + C30237 * C26495 +
             (C245 * C6044 + C79307 * C6228) * C26552 +
             (C245 * C6142 + C79307 * C6480) * C26496) *
                C79306 * C79114 -
            (C27423 * C26496 + C27143 * C26552 + C27422 * C26495 +
             C27140 * C26551) *
                C79306 * C79230) *
               C79072) *
              C745 +
          (((C1939 * C26551 + C2232 * C26495 + C4182 * C26552 +
             C4512 * C26496) *
                C79306 * C79114 -
            (C1299 * C26496 + C1006 * C26552 + C466 * C26495 + C275 * C26551) *
                C79306 * C79230) *
               C79229 +
           ((C1006 * C26551 + C1299 * C26495 + C1007 * C26552 +
             C1300 * C26496) *
                C79306 * C79230 -
            (C8001 * C26496 + C7694 * C26552 + C4512 * C26495 +
             C4182 * C26551) *
                C79306 * C79114) *
               C79072) *
              C746 +
          (((C278 * C26551 + C467 * C26495 + C1009 * C26552 + C1301 * C26496) *
                C79306 * C79230 -
            (C4513 * C26496 + C4185 * C26552 + C2234 * C26495 +
             C1942 * C26551) *
                C79306 * C79114) *
               C79229 +
           ((C4185 * C26551 + C4513 * C26495 +
             (C245 * C7477 + C79307 * C7686) * C26552 +
             (C245 * C7580 + C79307 * C7996) * C26496) *
                C79306 * C79114 -
            (C1302 * C26496 + C1012 * C26552 + C1301 * C26495 +
             C1009 * C26551) *
                C79306 * C79230) *
               C79072) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C245 * C96 + C79307 * C246) * C26551 +
            (C245 * C167 + C79307 * C447) * C26495 + C27140 * C26552 +
            C27422 * C26496) *
               C79306 * C11717 -
           (C30237 * C26496 + C29914 * C26552 +
            (C245 * C1792 + C79307 * C2212) * C26495 +
            (C245 * C1682 + C79307 * C1906) * C26551) *
               C79306 * C11718 +
           ((C245 * C1683 + C79307 * C1907) * C26551 +
            (C245 * C1793 + C79307 * C2213) * C26495 + C31944 * C26552 +
            C32211 * C26496) *
               C79306 * C11719 -
           (C38299 * C26496 + C38085 * C26552 +
            (C245 * C10378 + C79307 * C10574) * C26495 +
            (C245 * C10320 + C79307 * C10428) * C26551) *
               C79306 * C79275) *
              C79229 +
          ((C29914 * C26551 + C30237 * C26495 + C31946 * C26552 +
            C32212 * C26496) *
               C79306 * C11718 -
           (C27423 * C26496 + C27143 * C26552 + C27422 * C26495 +
            C27140 * C26551) *
               C79306 * C11717 -
           (C32213 * C26496 + C31949 * C26552 + C32211 * C26495 +
            C31944 * C26551) *
               C79306 * C11719 +
           (C38085 * C26551 + C38299 * C26495 +
            (C245 * C37933 + C79307 * C38077) * C26552 +
            (C245 * C38009 + C79307 * C38295) * C26496) *
               C79306 * C79275) *
              C79072) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eezx[36] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C26498 * C96 + C79306 * C102) * C245 +
             (C26498 * C246 + C79306 * C515) * C79307) *
                C26495 +
            (C27498 + C27522) * C26496) *
               C79230 -
           ((C30348 + C30338) * C26496 +
            ((C26498 * C1906 + C79306 * C2314) * C79307 +
             (C26498 * C1682 + C79306 * C1690) * C245) *
                C26495) *
               C79114) *
              C6795 +
          (((C30338 + C30348) * C26495 + (C32292 + C32302) * C26496) * C79114 -
           ((C27523 + C27503) * C26496 + (C27522 + C27498) * C26495) * C79230) *
              C6796 +
          (((C27503 + C27523) * C26495 + (C31575 + C31583) * C26496) * C79230 -
           ((C34493 + C34491) * C26496 + (C32302 + C32292) * C26495) * C79114) *
              C6797 +
          (((C34491 + C34493) * C26495 +
            ((C26498 * C34055 + C79306 * C34056) * C245 +
             (C26498 * C34199 + C79306 * C34487) * C79307) *
                C26496) *
               C79114 -
           ((C31584 + C31580) * C26496 + (C31583 + C31575) * C26495) * C79230) *
              C79269) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C26498 * C96 + C79306 * C102) * C245 +
              (C26498 * C246 + C79306 * C515) * C79307) *
                 C26495 +
             (C27498 + C27522) * C26496) *
                C79230 -
            ((C30348 + C30338) * C26496 +
             ((C26498 * C1906 + C79306 * C2314) * C79307 +
              (C26498 * C1682 + C79306 * C1690) * C245) *
                 C26495) *
                C79114) *
               C79229 +
           (((C30338 + C30348) * C26495 +
             ((C26498 * C6044 + C79306 * C6050) * C245 +
              (C26498 * C6228 + C79306 * C6560) * C79307) *
                 C26496) *
                C79114 -
            ((C27523 + C27503) * C26496 + (C27522 + C27498) * C26495) *
                C79230) *
               C79072) *
              C745 +
          (((((C26498 * C1681 + C79306 * C1689) * C245 +
              (C26498 * C1905 + C79306 * C2313) * C79307) *
                 C26495 +
             (C30339 + C30349) * C26496) *
                C79114 -
            ((C27524 + C27504) * C26496 +
             ((C26498 * C247 + C79306 * C516) * C79307 +
              (C26498 * C97 + C79306 * C103) * C245) *
                 C26495) *
                C79230) *
               C79229 +
           (((C27504 + C27524) * C26495 + (C27507 + C27525) * C26496) * C79230 -
            (((C26498 * C6227 + C79306 * C6559) * C79307 +
              (C26498 * C6043 + C79306 * C6049) * C245) *
                 C26496 +
             (C30349 + C30339) * C26495) *
                C79114) *
               C79072) *
              C746 +
          (((((C26498 * C98 + C79306 * C104) * C245 +
              (C26498 * C248 + C79306 * C517) * C79307) *
                 C26495 +
             (C27510 + C27526) * C26496) *
                C79230 -
            ((C30350 + C30344) * C26496 +
             ((C26498 * C1909 + C79306 * C2317) * C79307 +
              (C26498 * C1685 + C79306 * C1693) * C245) *
                 C26495) *
                C79114) *
               C79229 +
           (((C30344 + C30350) * C26495 +
             ((C26498 * C7477 + C79306 * C7478) * C245 +
              (C26498 * C7686 + C79306 * C8100) * C79307) *
                 C26496) *
                C79114 -
            ((C27527 + C27515) * C26496 + (C27526 + C27510) * C26495) *
                C79230) *
               C79072) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C26498 * C96 + C79306 * C102) * C245 +
             (C26498 * C246 + C79306 * C515) * C79307) *
                C26495 +
            (C27498 + C27522) * C26496) *
               C11717 -
           ((C30348 + C30338) * C26496 +
            ((C26498 * C1906 + C79306 * C2314) * C79307 +
             (C26498 * C1682 + C79306 * C1690) * C245) *
                C26495) *
               C11718 +
           (((C26498 * C1683 + C79306 * C1691) * C245 +
             (C26498 * C1907 + C79306 * C2315) * C79307) *
                C26495 +
            (C32289 + C32301) * C26496) *
               C11719 -
           ((C38371 + C38369) * C26496 +
            ((C26498 * C10428 + C79306 * C10620) * C79307 +
             (C26498 * C10320 + C79306 * C10324) * C245) *
                C26495) *
               C79275) *
              C79229 +
          (((C30338 + C30348) * C26495 + (C32292 + C32302) * C26496) * C11718 -
           ((C27523 + C27503) * C26496 + (C27522 + C27498) * C26495) * C11717 -
           ((C32303 + C32297) * C26496 + (C32301 + C32289) * C26495) * C11719 +
           ((C38369 + C38371) * C26495 +
            ((C26498 * C37933 + C79306 * C37934) * C245 +
             (C26498 * C38077 + C79306 * C38365) * C79307) *
                C26496) *
               C79275) *
              C79072) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eezy[36] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
                C245 +
            (C26551 * C246 + C26495 * C563 + C26552 * C973 + C26496 * C1463) *
                C79307) *
               C79306 * C79230 -
           ((C26552 * C4165 + C26496 * C4715 + C26551 * C1906 +
             C26495 * C2396) *
                C79307 +
            (C26552 * C3931 + C26496 * C4047 + C26551 * C1682 +
             C26495 * C1792) *
                C245) *
               C79306 * C79114) *
              C6795 +
          (((C26551 * C3931 + C26495 * C4047 + C26552 * C6044 +
             C26496 * C6142) *
                C245 +
            (C26551 * C4165 + C26495 * C4715 + C26552 * C6228 +
             C26496 * C6640) *
                C79307) *
               C79306 * C79114 -
           ((C26552 * C974 + C26496 * C1464 + C26551 * C973 + C26495 * C1463) *
                C79307 +
            (C26552 * C750 + C26496 * C860 + C26551 * C749 + C26495 * C859) *
                C245) *
               C79306 * C79230) *
              C6796 +
          (((C26551 * C750 + C26495 * C860 + C26552 * C5568 + C26496 * C5626) *
                C245 +
            (C26551 * C974 + C26495 * C1464 + C26552 * C5676 + C26496 * C5914) *
                C79307) *
               C79306 * C79230 -
           ((C26552 * C8521 + C26496 * C8865 + C26551 * C6228 +
             C26495 * C6640) *
                C79307 +
            (C26552 * C8377 + C26496 * C8451 + C26551 * C6044 +
             C26495 * C6142) *
                C245) *
               C79306 * C79114) *
              C6797 +
          (((C26551 * C8377 + C26495 * C8451 + C26552 * C34055 +
             C26496 * C34131) *
                C245 +
            (C26551 * C8521 + C26495 * C8865 + C26552 * C34199 +
             C26496 * C34559) *
                C79307) *
               C79306 * C79114 -
           ((C26552 * C5677 + C26496 * C5915 + C26551 * C5676 +
             C26495 * C5914) *
                C79307 +
            (C26552 * C5569 + C26496 * C5627 + C26551 * C5568 +
             C26495 * C5626) *
                C245) *
               C79306 * C79230) *
              C79269) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
                 C245 +
             (C26551 * C246 + C26495 * C563 + C26552 * C973 + C26496 * C1463) *
                 C79307) *
                C79306 * C79230 -
            ((C26552 * C4165 + C26496 * C4715 + C26551 * C1906 +
              C26495 * C2396) *
                 C79307 +
             (C26552 * C3931 + C26496 * C4047 + C26551 * C1682 +
              C26495 * C1792) *
                 C245) *
                C79306 * C79114) *
               C79229 +
           (((C26551 * C3931 + C26495 * C4047 + C26552 * C6044 +
              C26496 * C6142) *
                 C245 +
             (C26551 * C4165 + C26495 * C4715 + C26552 * C6228 +
              C26496 * C6640) *
                 C79307) *
                C79306 * C79114 -
            ((C26552 * C974 + C26496 * C1464 + C26551 * C973 + C26495 * C1463) *
                 C79307 +
             (C26552 * C750 + C26496 * C860 + C26551 * C749 + C26495 * C859) *
                 C245) *
                C79306 * C79230) *
               C79072) *
              C745 +
          ((((C26551 * C1681 + C26495 * C1791 + C26552 * C3932 +
              C26496 * C4048) *
                 C245 +
             (C26551 * C1905 + C26495 * C2395 + C26552 * C4166 +
              C26496 * C4716) *
                 C79307) *
                C79306 * C79114 -
            ((C26552 * C972 + C26496 * C1462 + C26551 * C247 + C26495 * C564) *
                 C79307 +
             (C26552 * C748 + C26496 * C858 + C26551 * C97 + C26495 * C168) *
                 C245) *
                C79306 * C79230) *
               C79229 +
           (((C26551 * C748 + C26495 * C858 + C26552 * C751 + C26496 * C861) *
                 C245 +
             (C26551 * C972 + C26495 * C1462 + C26552 * C975 + C26496 * C1465) *
                 C79307) *
                C79306 * C79230 -
            ((C26552 * C6227 + C26496 * C6639 + C26551 * C4166 +
              C26495 * C4716) *
                 C79307 +
             (C26552 * C6043 + C26496 * C6141 + C26551 * C3932 +
              C26495 * C4048) *
                 C245) *
                C79306 * C79114) *
               C79072) *
              C746 +
          ((((C26551 * C98 + C26495 * C169 + C26552 * C752 + C26496 * C862) *
                 C245 +
             (C26551 * C248 + C26495 * C565 + C26552 * C976 + C26496 * C1466) *
                 C79307) *
                C79306 * C79230 -
            ((C26552 * C4167 + C26496 * C4717 + C26551 * C1909 +
              C26495 * C2399) *
                 C79307 +
             (C26552 * C3933 + C26496 * C4049 + C26551 * C1685 +
              C26495 * C1795) *
                 C245) *
                C79306 * C79114) *
               C79229 +
           (((C26551 * C3933 + C26495 * C4049 + C26552 * C7477 +
              C26496 * C7580) *
                 C245 +
             (C26551 * C4167 + C26495 * C4717 + C26552 * C7686 +
              C26496 * C8199) *
                 C79307) *
                C79306 * C79114 -
            ((C26552 * C977 + C26496 * C1467 + C26551 * C976 + C26495 * C1466) *
                 C79307 +
             (C26552 * C753 + C26496 * C863 + C26551 * C752 + C26495 * C862) *
                 C245) *
                C79306 * C79230) *
               C79072) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
                C245 +
            (C26551 * C246 + C26495 * C563 + C26552 * C973 + C26496 * C1463) *
                C79307) *
               C79306 * C11717 -
           ((C26552 * C4165 + C26496 * C4715 + C26551 * C1906 +
             C26495 * C2396) *
                C79307 +
            (C26552 * C3931 + C26496 * C4047 + C26551 * C1682 +
             C26495 * C1792) *
                C245) *
               C79306 * C11718 +
           ((C26551 * C1683 + C26495 * C1793 + C26552 * C6042 +
             C26496 * C6140) *
                C245 +
            (C26551 * C1907 + C26495 * C2397 + C26552 * C6226 +
             C26496 * C6638) *
                C79307) *
               C79306 * C11719 -
           ((C26552 * C12509 + C26496 * C12853 + C26551 * C10428 +
             C26495 * C10666) *
                C79307 +
            (C26552 * C12365 + C26496 * C12439 + C26551 * C10320 +
             C26495 * C10378) *
                C245) *
               C79306 * C79275) *
              C79229 +
          (((C26551 * C3931 + C26495 * C4047 + C26552 * C6044 +
             C26496 * C6142) *
                C245 +
            (C26551 * C4165 + C26495 * C4715 + C26552 * C6228 +
             C26496 * C6640) *
                C79307) *
               C79306 * C11718 -
           ((C26552 * C974 + C26496 * C1464 + C26551 * C973 + C26495 * C1463) *
                C79307 +
            (C26552 * C750 + C26496 * C860 + C26551 * C749 + C26495 * C859) *
                C245) *
               C79306 * C11717 -
           ((C26552 * C6229 + C26496 * C6641 + C26551 * C6226 +
             C26495 * C6638) *
                C79307 +
            (C26552 * C6045 + C26496 * C6143 + C26551 * C6042 +
             C26495 * C6140) *
                C245) *
               C79306 * C11719 +
           ((C26551 * C12365 + C26495 * C12439 + C26552 * C37933 +
             C26496 * C38009) *
                C245 +
            (C26551 * C12509 + C26495 * C12853 + C26552 * C38077 +
             C26496 * C38437) *
                C79307) *
               C79306 * C79275) *
              C79072) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eezz[36] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C631 * C96 + C639 + C639 + C79307 * C632) * C26495 +
            C27684 * C26496) *
               C79306 * C79230 -
           (C30551 * C26496 +
            (C631 * C1682 + C2509 + C2509 + C79307 * C2498) * C26495) *
               C79306 * C79114) *
              C6795 +
          ((C30551 * C26495 + C32468 * C26496) * C79306 * C79114 -
           (C27685 * C26496 + C27684 * C26495) * C79306 * C79230) *
              C6796 +
          ((C27685 * C26495 + C31680 * C26496) * C79306 * C79230 -
           (C34633 * C26496 + C32468 * C26495) * C79306 * C79114) *
              C6797 +
          ((C34633 * C26495 +
            (C631 * C34055 + C34630 + C34630 + C79307 * C34626) * C26496) *
               C79306 * C79114 -
           (C31681 * C26496 + C31680 * C26495) * C79306 * C79230) *
              C79269) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C631 * C96 + C639 + C639 + C79307 * C632) * C26495 +
             C27684 * C26496) *
                C79306 * C79230 -
            (C30551 * C26496 +
             (C631 * C1682 + C2509 + C2509 + C79307 * C2498) * C26495) *
                C79306 * C79114) *
               C79229 +
           ((C30551 * C26495 +
             (C631 * C6044 + C6727 + C6727 + C79307 * C6720) * C26496) *
                C79306 * C79114 -
            (C27685 * C26496 + C27684 * C26495) * C79306 * C79230) *
               C79072) *
              C745 +
          (((C2530 * C26495 + C4844 * C26496) * C79306 * C79114 -
            (C1597 * C26496 + C661 * C26495) * C79306 * C79230) *
               C79229 +
           ((C1597 * C26495 + C1598 * C26496) * C79306 * C79230 -
            (C8310 * C26496 + C4844 * C26495) * C79306 * C79114) *
               C79072) *
              C746 +
          (((C662 * C26495 + C1599 * C26496) * C79306 * C79230 -
            (C4845 * C26496 + C2532 * C26495) * C79306 * C79114) *
               C79229 +
           ((C4845 * C26495 +
             (C631 * C7477 + C8307 + C8307 + C79307 * C8303) * C26496) *
                C79306 * C79114 -
            (C1600 * C26496 + C1599 * C26495) * C79306 * C79230) *
               C79072) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C631 * C96 + C639 + C639 + C79307 * C632) * C26495 +
            C27684 * C26496) *
               C79306 * C11717 -
           (C30551 * C26496 +
            (C631 * C1682 + C2509 + C2509 + C79307 * C2498) * C26495) *
               C79306 * C11718 +
           ((C631 * C1683 + C2510 + C2510 + C79307 * C2499) * C26495 +
            C32467 * C26496) *
               C79306 * C11719 -
           (C38511 * C26496 +
            (C631 * C10320 + C10717 + C10717 + C79307 * C10712) * C26495) *
               C79306 * C79275) *
              C79229 +
          ((C30551 * C26495 + C32468 * C26496) * C79306 * C11718 -
           (C27685 * C26496 + C27684 * C26495) * C79306 * C11717 -
           (C32469 * C26496 + C32467 * C26495) * C79306 * C11719 +
           (C38511 * C26495 +
            (C631 * C37933 + C38508 + C38508 + C79307 * C38504) * C26496) *
               C79306 * C79275) *
              C79072) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eexx[37] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C79307 *
                   C26495 +
               (C26497 * C749 + C26501 + C26501 + C79306 * C765) * C79307 *
                   C26496) *
                  C79027 * C79009 * C87 -
              ((C26497 * C748 + C26502 + C26502 + C79306 * C764) * C79307 *
                   C26496 +
               (C26497 * C97 + C26503 + C26503 + C79306 * C109) * C79307 *
                   C26495) *
                  C79027 * C79009 * C88 +
              ((C26497 * C98 + C26504 + C26504 + C79306 * C110) * C79307 *
                   C26495 +
               (C26497 * C752 + C26505 + C26505 + C79306 * C768) * C79307 *
                   C26496) *
                  C79027 * C79009 * C89 -
              ((C26497 * C754 + C26506 + C26506 + C79306 * C770) * C79307 *
                   C26496 +
               (C26497 * C99 + C26507 + C26507 + C79306 * C111) * C79307 *
                   C26495) *
                  C79027 * C79009 * C90 +
              ((C26497 * C100 + C26508 + C26508 + C79306 * C112) * C79307 *
                   C26495 +
               (C26497 * C2609 + C26509 + C26509 + C79306 * C2611) * C79307 *
                   C26496) *
                  C79027 * C79009 * C91) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C79307 *
                    C26495 +
                C26970 * C26496) *
                   C79027 * C79300 -
               (C26971 * C26496 + C26970 * C26495) * C79027 * C79285 +
               (C26971 * C26495 +
                (C26497 * C5568 + C26939 + C26939 + C79306 * C5576) * C79307 *
                    C26496) *
                   C79027 * C79259) *
                  C745 +
              ((C26972 * C26495 + C26973 * C26496) * C79027 * C79285 -
               (C26972 * C26496 +
                (C26497 * C97 + C26503 + C26503 + C79306 * C109) * C79307 *
                    C26495) *
                   C79027 * C79300 -
               ((C26497 * C5567 + C26945 + C26945 + C79306 * C5575) * C79307 *
                    C26496 +
                C26973 * C26495) *
                   C79027 * C79259) *
                  C746 +
              (((C26497 * C98 + C26504 + C26504 + C79306 * C110) * C79307 *
                    C26495 +
                C26974 * C26496) *
                   C79027 * C79300 -
               (C26975 * C26496 + C26974 * C26495) * C79027 * C79285 +
               (C26975 * C26495 +
                (C26497 * C6801 + C26951 + C26951 + C79306 * C6803) * C79307 *
                    C26496) *
                   C79027 * C79259) *
                  C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C79307 * C26495 +
            C26970 * C26496) *
               C79301 -
           ((C26497 * C3931 + C27760 + C27760 + C79306 * C3939) * C79307 *
                C26496 +
            (C26497 * C1682 + C27761 + C27761 + C79306 * C1698) * C79307 *
                C26495) *
               C79287 +
           ((C26497 * C1683 + C27762 + C27762 + C79306 * C1699) * C79307 *
                C26495 +
            (C26497 * C6042 + C27763 + C27763 + C79306 * C6054) * C79307 *
                C26496) *
               C79262) *
              C79009 * C745 +
          (((C26497 * C1681 + C27764 + C27764 + C79306 * C1697) * C79307 *
                C26495 +
            (C26497 * C3932 + C27765 + C27765 + C79306 * C3940) * C79307 *
                C26496) *
               C79287 -
           (C26972 * C26496 + (C26497 * C97 + C26503 + C26503 + C79306 * C109) *
                                  C79307 * C26495) *
               C79301 -
           ((C26497 * C6041 + C27766 + C27766 + C79306 * C6053) * C79307 *
                C26496 +
            (C26497 * C1684 + C27767 + C27767 + C79306 * C1700) * C79307 *
                C26495) *
               C79262) *
              C79009 * C746 +
          (((C26497 * C98 + C26504 + C26504 + C79306 * C110) * C79307 * C26495 +
            C26974 * C26496) *
               C79301 -
           ((C26497 * C3933 + C27768 + C27768 + C79306 * C3941) * C79307 *
                C26496 +
            (C26497 * C1685 + C27769 + C27769 + C79306 * C1701) * C79307 *
                C26495) *
               C79287 +
           ((C26497 * C1686 + C27770 + C27770 + C79306 * C1702) * C79307 *
                C26495 +
            (C26497 * C10817 + C27771 + C27771 + C79306 * C10819) * C79307 *
                C26496) *
               C79262) *
              C79009 * C79253)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C79307 * C26495 +
            C26970 * C26496) *
               C79027 * C4921 -
           (C26971 * C26496 + C26970 * C26495) * C79027 * C4922 +
           (C26971 * C26495 +
            (C26497 * C5568 + C26939 + C26939 + C79306 * C5576) * C79307 *
                C26496) *
               C79027 * C79259) *
              C79297 +
          ((C26972 * C26495 + C26973 * C26496) * C79027 * C4922 -
           (C26972 * C26496 + (C26497 * C97 + C26503 + C26503 + C79306 * C109) *
                                  C79307 * C26495) *
               C79027 * C4921 -
           ((C26497 * C5567 + C26945 + C26945 + C79306 * C5575) * C79307 *
                C26496 +
            C26973 * C26495) *
               C79027 * C79259) *
              C79281 +
          (((C26497 * C98 + C26504 + C26504 + C79306 * C110) * C79307 * C26495 +
            C26974 * C26496) *
               C79027 * C4921 -
           (C26975 * C26496 + C26974 * C26495) * C79027 * C4922 +
           (C26975 * C26495 +
            (C26497 * C6801 + C26951 + C26951 + C79306 * C6803) * C79307 *
                C26496) *
               C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C79307 * C26495 +
           C26970 * C26496) *
              C79027 * C5561 -
          (C26971 * C26496 + C26970 * C26495) * C79027 * C5562 +
          (C26971 * C26495 + C31275 * C26496) * C79027 * C5563 -
          (C31276 * C26496 + C31275 * C26495) * C79027 * C5564 +
          (C31276 * C26495 +
           (C26497 * C31259 + C31268 + C31268 + C79306 * C31261) * C79307 *
               C26496) *
              C79027 * C5565) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C79307 * C26495 +
            C26970 * C26496) *
               C79301 -
           (C29706 * C26496 +
            (C26497 * C1682 + C27761 + C27761 + C79306 * C1698) * C79307 *
                C26495) *
               C79287 +
           ((C26497 * C1683 + C27762 + C27762 + C79306 * C1699) * C79307 *
                C26495 +
            C31777 * C26496) *
               C79262) *
              C4921 +
          ((C29706 * C26495 + C31778 * C26496) * C79287 -
           (C26971 * C26496 + C26970 * C26495) * C79301 -
           (C31779 * C26496 + C31777 * C26495) * C79262) *
              C4922 +
          ((C26971 * C26495 + C31275 * C26496) * C79301 -
           ((C26497 * C8377 + C31766 + C31766 + C79306 * C8381) * C79307 *
                C26496 +
            C31778 * C26495) *
               C79287 +
           (C31779 * C26495 +
            (C26497 * C31755 + C31767 + C31767 + C79306 * C31757) * C79307 *
                C26496) *
               C79262) *
              C79259) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C79307 * C26495 +
            C26970 * C26496) *
               C9011 -
           (C29706 * C26496 +
            (C26497 * C1682 + C27761 + C27761 + C79306 * C1698) * C79307 *
                C26495) *
               C9012 +
           ((C26497 * C1683 + C27762 + C27762 + C79306 * C1699) * C79307 *
                C26495 +
            C31777 * C26496) *
               C79262) *
              C79009 * C79297 +
          (((C26497 * C1681 + C27764 + C27764 + C79306 * C1697) * C79307 *
                C26495 +
            C29707 * C26496) *
               C9012 -
           (C26972 * C26496 + (C26497 * C97 + C26503 + C26503 + C79306 * C109) *
                                  C79307 * C26495) *
               C9011 -
           ((C26497 * C6041 + C27766 + C27766 + C79306 * C6053) * C79307 *
                C26496 +
            (C26497 * C1684 + C27767 + C27767 + C79306 * C1700) * C79307 *
                C26495) *
               C79262) *
              C79009 * C79281 +
          (((C26497 * C98 + C26504 + C26504 + C79306 * C110) * C79307 * C26495 +
            C26974 * C26496) *
               C9011 -
           (C29708 * C26496 +
            (C26497 * C1685 + C27769 + C27769 + C79306 * C1701) * C79307 *
                C26495) *
               C9012 +
           ((C26497 * C1686 + C27770 + C27770 + C79306 * C1702) * C79307 *
                C26495 +
            (C26497 * C10817 + C27771 + C27771 + C79306 * C10819) * C79307 *
                C26496) *
               C79262) *
              C79009 * C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C79307 * C26495 +
            C26970 * C26496) *
               C9011 -
           (C29706 * C26496 +
            (C26497 * C1682 + C27761 + C27761 + C79306 * C1698) * C79307 *
                C26495) *
               C9012 +
           ((C26497 * C1683 + C27762 + C27762 + C79306 * C1699) * C79307 *
                C26495 +
            C31777 * C26496) *
               C79262) *
              C79300 +
          ((C29706 * C26495 + C31778 * C26496) * C9012 -
           (C26971 * C26496 + C26970 * C26495) * C9011 -
           (C31779 * C26496 + C31777 * C26495) * C79262) *
              C79285 +
          ((C26971 * C26495 + C31275 * C26496) * C9011 -
           (C34065 * C26496 + C31778 * C26495) * C9012 +
           (C31779 * C26495 +
            (C26497 * C31755 + C31767 + C31767 + C79306 * C31757) * C79307 *
                C26496) *
               C79262) *
              C79259) *
         C78981) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C79307 * C26495 +
           C26970 * C26496) *
              C10314 -
          (C29706 * C26496 +
           (C26497 * C1682 + C27761 + C27761 + C79306 * C1698) * C79307 *
               C26495) *
              C10315 +
          ((C26497 * C1683 + C27762 + C27762 + C79306 * C1699) * C79307 *
               C26495 +
           C31777 * C26496) *
              C10316 -
          ((C26497 * C12365 + C36011 + C36011 + C79306 * C12369) * C79307 *
               C26496 +
           (C26497 * C10320 + C36012 + C36012 + C79306 * C10328) * C79307 *
               C26495) *
              C10317 +
          ((C26497 * C10321 + C36013 + C36013 + C79306 * C10329) * C79307 *
               C26495 +
           (C26497 * C36007 + C36014 + C36014 + C79306 * C36009) * C79307 *
               C26496) *
              C10318) *
         C79009 * C78981) /
            (p * q * std::sqrt(p + q));
    d2eexy[37] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
                   C26498 +
               (C26551 * C102 + C26495 * C173 + C26552 * C757 + C26496 * C867) *
                   C79306) *
                  C79307 * C79027 * C79009 * C87 -
              ((C26552 * C756 + C26496 * C866 + C26551 * C103 + C26495 * C174) *
                   C79306 +
               (C26552 * C748 + C26496 * C858 + C26551 * C97 + C26495 * C168) *
                   C26498) *
                  C79307 * C79027 * C79009 * C88 +
              ((C26551 * C98 + C26495 * C169 + C26552 * C752 + C26496 * C862) *
                   C26498 +
               (C26551 * C104 + C26495 * C175 + C26552 * C760 + C26496 * C870) *
                   C79306) *
                  C79307 * C79027 * C79009 * C89 -
              ((C26552 * C762 + C26496 * C872 + C26551 * C105 + C26495 * C176) *
                   C79306 +
               (C26552 * C754 + C26496 * C864 + C26551 * C99 + C26495 * C170) *
                   C26498) *
                  C79307 * C79027 * C79009 * C90 +
              ((C26551 * C100 + C26495 * C171 + C26552 * C2609 +
                C26496 * C2680) *
                   C26498 +
               (C26551 * C106 + C26495 * C177 + C26552 * C2610 +
                C26496 * C2681) *
                   C79306) *
                  C79307 * C79027 * C79009 * C91) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
                    C26498 +
                (C26551 * C102 + C26495 * C173 + C26552 * C757 +
                 C26496 * C867) *
                    C79306) *
                   C79307 * C79027 * C79300 -
               ((C26552 * C758 + C26496 * C868 + C26551 * C757 +
                 C26495 * C867) *
                    C79306 +
                (C26552 * C750 + C26496 * C860 + C26551 * C749 +
                 C26495 * C859) *
                    C26498) *
                   C79307 * C79027 * C79285 +
               ((C26551 * C750 + C26495 * C860 + C26552 * C5568 +
                 C26496 * C5626) *
                    C26498 +
                (C26551 * C758 + C26495 * C868 + C26552 * C5572 +
                 C26496 * C5630) *
                    C79306) *
                   C79307 * C79027 * C79259) *
                  C745 +
              (((C26551 * C748 + C26495 * C858 + C26552 * C751 +
                 C26496 * C861) *
                    C26498 +
                (C26551 * C756 + C26495 * C866 + C26552 * C759 +
                 C26496 * C869) *
                    C79306) *
                   C79307 * C79027 * C79285 -
               ((C26552 * C756 + C26496 * C866 + C26551 * C103 +
                 C26495 * C174) *
                    C79306 +
                (C26552 * C748 + C26496 * C858 + C26551 * C97 + C26495 * C168) *
                    C26498) *
                   C79307 * C79027 * C79300 -
               ((C26552 * C5571 + C26496 * C5629 + C26551 * C759 +
                 C26495 * C869) *
                    C79306 +
                (C26552 * C5567 + C26496 * C5625 + C26551 * C751 +
                 C26495 * C861) *
                    C26498) *
                   C79307 * C79027 * C79259) *
                  C746 +
              (((C26551 * C98 + C26495 * C169 + C26552 * C752 + C26496 * C862) *
                    C26498 +
                (C26551 * C104 + C26495 * C175 + C26552 * C760 +
                 C26496 * C870) *
                    C79306) *
                   C79307 * C79027 * C79300 -
               ((C26552 * C761 + C26496 * C871 + C26551 * C760 +
                 C26495 * C870) *
                    C79306 +
                (C26552 * C753 + C26496 * C863 + C26551 * C752 +
                 C26495 * C862) *
                    C26498) *
                   C79307 * C79027 * C79285 +
               ((C26551 * C753 + C26495 * C863 + C26552 * C6801 +
                 C26496 * C6872) *
                    C26498 +
                (C26551 * C761 + C26495 * C871 + C26552 * C6802 +
                 C26496 * C6873) *
                    C79306) *
                   C79307 * C79027 * C79259) *
                  C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
                C26498 +
            (C26551 * C102 + C26495 * C173 + C26552 * C757 + C26496 * C867) *
                C79306) *
               C79307 * C79301 -
           ((C26552 * C3935 + C26496 * C4051 + C26551 * C1690 +
             C26495 * C1800) *
                C79306 +
            (C26552 * C3931 + C26496 * C4047 + C26551 * C1682 +
             C26495 * C1792) *
                C26498) *
               C79307 * C79287 +
           ((C26551 * C1683 + C26495 * C1793 + C26552 * C6042 +
             C26496 * C6140) *
                C26498 +
            (C26551 * C1691 + C26495 * C1801 + C26552 * C6048 +
             C26496 * C6146) *
                C79306) *
               C79307 * C79262) *
              C79009 * C745 +
          (((C26551 * C1681 + C26495 * C1791 + C26552 * C3932 +
             C26496 * C4048) *
                C26498 +
            (C26551 * C1689 + C26495 * C1799 + C26552 * C3936 +
             C26496 * C4052) *
                C79306) *
               C79307 * C79287 -
           ((C26552 * C756 + C26496 * C866 + C26551 * C103 + C26495 * C174) *
                C79306 +
            (C26552 * C748 + C26496 * C858 + C26551 * C97 + C26495 * C168) *
                C26498) *
               C79307 * C79301 -
           ((C26552 * C6047 + C26496 * C6145 + C26551 * C1692 +
             C26495 * C1802) *
                C79306 +
            (C26552 * C6041 + C26496 * C6139 + C26551 * C1684 +
             C26495 * C1794) *
                C26498) *
               C79307 * C79262) *
              C79009 * C746 +
          (((C26551 * C98 + C26495 * C169 + C26552 * C752 + C26496 * C862) *
                C26498 +
            (C26551 * C104 + C26495 * C175 + C26552 * C760 + C26496 * C870) *
                C79306) *
               C79307 * C79301 -
           ((C26552 * C3937 + C26496 * C4053 + C26551 * C1693 +
             C26495 * C1803) *
                C79306 +
            (C26552 * C3933 + C26496 * C4049 + C26551 * C1685 +
             C26495 * C1795) *
                C26498) *
               C79307 * C79287 +
           ((C26551 * C1686 + C26495 * C1796 + C26552 * C10817 +
             C26496 * C10920) *
                C26498 +
            (C26551 * C1694 + C26495 * C1804 + C26552 * C10818 +
             C26496 * C10921) *
                C79306) *
               C79307 * C79262) *
              C79009 * C79253)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
                C26498 +
            (C26551 * C102 + C26495 * C173 + C26552 * C757 + C26496 * C867) *
                C79306) *
               C79307 * C79027 * C4921 -
           ((C26552 * C758 + C26496 * C868 + C26551 * C757 + C26495 * C867) *
                C79306 +
            (C26552 * C750 + C26496 * C860 + C26551 * C749 + C26495 * C859) *
                C26498) *
               C79307 * C79027 * C4922 +
           ((C26551 * C750 + C26495 * C860 + C26552 * C5568 + C26496 * C5626) *
                C26498 +
            (C26551 * C758 + C26495 * C868 + C26552 * C5572 + C26496 * C5630) *
                C79306) *
               C79307 * C79027 * C79259) *
              C79297 +
          (((C26551 * C748 + C26495 * C858 + C26552 * C751 + C26496 * C861) *
                C26498 +
            (C26551 * C756 + C26495 * C866 + C26552 * C759 + C26496 * C869) *
                C79306) *
               C79307 * C79027 * C4922 -
           ((C26552 * C756 + C26496 * C866 + C26551 * C103 + C26495 * C174) *
                C79306 +
            (C26552 * C748 + C26496 * C858 + C26551 * C97 + C26495 * C168) *
                C26498) *
               C79307 * C79027 * C4921 -
           ((C26552 * C5571 + C26496 * C5629 + C26551 * C759 + C26495 * C869) *
                C79306 +
            (C26552 * C5567 + C26496 * C5625 + C26551 * C751 + C26495 * C861) *
                C26498) *
               C79307 * C79027 * C79259) *
              C79281 +
          (((C26551 * C98 + C26495 * C169 + C26552 * C752 + C26496 * C862) *
                C26498 +
            (C26551 * C104 + C26495 * C175 + C26552 * C760 + C26496 * C870) *
                C79306) *
               C79307 * C79027 * C4921 -
           ((C26552 * C761 + C26496 * C871 + C26551 * C760 + C26495 * C870) *
                C79306 +
            (C26552 * C753 + C26496 * C863 + C26551 * C752 + C26495 * C862) *
                C26498) *
               C79307 * C79027 * C4922 +
           ((C26551 * C753 + C26495 * C863 + C26552 * C6801 + C26496 * C6872) *
                C26498 +
            (C26551 * C761 + C26495 * C871 + C26552 * C6802 + C26496 * C6873) *
                C79306) *
               C79307 * C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
               C26498 +
           (C26551 * C102 + C26495 * C173 + C26552 * C757 + C26496 * C867) *
               C79306) *
              C79307 * C79027 * C5561 -
          ((C26552 * C758 + C26496 * C868 + C26551 * C757 + C26495 * C867) *
               C79306 +
           (C26552 * C750 + C26496 * C860 + C26551 * C749 + C26495 * C859) *
               C26498) *
              C79307 * C79027 * C5562 +
          ((C26551 * C750 + C26495 * C860 + C26552 * C5568 + C26496 * C5626) *
               C26498 +
           (C26551 * C758 + C26495 * C868 + C26552 * C5572 + C26496 * C5630) *
               C79306) *
              C79307 * C79027 * C5563 -
          ((C26552 * C5573 + C26496 * C5631 + C26551 * C5572 + C26495 * C5630) *
               C79306 +
           (C26552 * C5569 + C26496 * C5627 + C26551 * C5568 + C26495 * C5626) *
               C26498) *
              C79307 * C79027 * C5564 +
          ((C26551 * C5569 + C26495 * C5627 + C26552 * C31259 +
            C26496 * C31318) *
               C26498 +
           (C26551 * C5573 + C26495 * C5631 + C26552 * C31260 +
            C26496 * C31319) *
               C79306) *
              C79307 * C79027 * C5565) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
                C26498 +
            (C26551 * C102 + C26495 * C173 + C26552 * C757 + C26496 * C867) *
                C79306) *
               C79307 * C79301 -
           ((C26552 * C3935 + C26496 * C4051 + C26551 * C1690 +
             C26495 * C1800) *
                C79306 +
            (C26552 * C3931 + C26496 * C4047 + C26551 * C1682 +
             C26495 * C1792) *
                C26498) *
               C79307 * C79287 +
           ((C26551 * C1683 + C26495 * C1793 + C26552 * C6042 +
             C26496 * C6140) *
                C26498 +
            (C26551 * C1691 + C26495 * C1801 + C26552 * C6048 +
             C26496 * C6146) *
                C79306) *
               C79307 * C79262) *
              C4921 +
          (((C26551 * C3931 + C26495 * C4047 + C26552 * C6044 +
             C26496 * C6142) *
                C26498 +
            (C26551 * C3935 + C26495 * C4051 + C26552 * C6050 +
             C26496 * C6148) *
                C79306) *
               C79307 * C79287 -
           ((C26552 * C758 + C26496 * C868 + C26551 * C757 + C26495 * C867) *
                C79306 +
            (C26552 * C750 + C26496 * C860 + C26551 * C749 + C26495 * C859) *
                C26498) *
               C79307 * C79301 -
           ((C26552 * C6051 + C26496 * C6149 + C26551 * C6048 +
             C26495 * C6146) *
                C79306 +
            (C26552 * C6045 + C26496 * C6143 + C26551 * C6042 +
             C26495 * C6140) *
                C26498) *
               C79307 * C79262) *
              C4922 +
          (((C26551 * C750 + C26495 * C860 + C26552 * C5568 + C26496 * C5626) *
                C26498 +
            (C26551 * C758 + C26495 * C868 + C26552 * C5572 + C26496 * C5630) *
                C79306) *
               C79307 * C79301 -
           ((C26552 * C8379 + C26496 * C8453 + C26551 * C6050 +
             C26495 * C6148) *
                C79306 +
            (C26552 * C8377 + C26496 * C8451 + C26551 * C6044 +
             C26495 * C6142) *
                C26498) *
               C79307 * C79287 +
           ((C26551 * C6045 + C26495 * C6143 + C26552 * C31755 +
             C26496 * C31853) *
                C26498 +
            (C26551 * C6051 + C26495 * C6149 + C26552 * C31756 +
             C26496 * C31854) *
                C79306) *
               C79307 * C79262) *
              C79259) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
                C26498 +
            (C26551 * C102 + C26495 * C173 + C26552 * C757 + C26496 * C867) *
                C79306) *
               C79307 * C9011 -
           ((C26552 * C3935 + C26496 * C4051 + C26551 * C1690 +
             C26495 * C1800) *
                C79306 +
            (C26552 * C3931 + C26496 * C4047 + C26551 * C1682 +
             C26495 * C1792) *
                C26498) *
               C79307 * C9012 +
           ((C26551 * C1683 + C26495 * C1793 + C26552 * C6042 +
             C26496 * C6140) *
                C26498 +
            (C26551 * C1691 + C26495 * C1801 + C26552 * C6048 +
             C26496 * C6146) *
                C79306) *
               C79307 * C79262) *
              C79009 * C79297 +
          (((C26551 * C1681 + C26495 * C1791 + C26552 * C3932 +
             C26496 * C4048) *
                C26498 +
            (C26551 * C1689 + C26495 * C1799 + C26552 * C3936 +
             C26496 * C4052) *
                C79306) *
               C79307 * C9012 -
           ((C26552 * C756 + C26496 * C866 + C26551 * C103 + C26495 * C174) *
                C79306 +
            (C26552 * C748 + C26496 * C858 + C26551 * C97 + C26495 * C168) *
                C26498) *
               C79307 * C9011 -
           ((C26552 * C6047 + C26496 * C6145 + C26551 * C1692 +
             C26495 * C1802) *
                C79306 +
            (C26552 * C6041 + C26496 * C6139 + C26551 * C1684 +
             C26495 * C1794) *
                C26498) *
               C79307 * C79262) *
              C79009 * C79281 +
          (((C26551 * C98 + C26495 * C169 + C26552 * C752 + C26496 * C862) *
                C26498 +
            (C26551 * C104 + C26495 * C175 + C26552 * C760 + C26496 * C870) *
                C79306) *
               C79307 * C9011 -
           ((C26552 * C3937 + C26496 * C4053 + C26551 * C1693 +
             C26495 * C1803) *
                C79306 +
            (C26552 * C3933 + C26496 * C4049 + C26551 * C1685 +
             C26495 * C1795) *
                C26498) *
               C79307 * C9012 +
           ((C26551 * C1686 + C26495 * C1796 + C26552 * C10817 +
             C26496 * C10920) *
                C26498 +
            (C26551 * C1694 + C26495 * C1804 + C26552 * C10818 +
             C26496 * C10921) *
                C79306) *
               C79307 * C79262) *
              C79009 * C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
                C26498 +
            (C26551 * C102 + C26495 * C173 + C26552 * C757 + C26496 * C867) *
                C79306) *
               C79307 * C9011 -
           ((C26552 * C3935 + C26496 * C4051 + C26551 * C1690 +
             C26495 * C1800) *
                C79306 +
            (C26552 * C3931 + C26496 * C4047 + C26551 * C1682 +
             C26495 * C1792) *
                C26498) *
               C79307 * C9012 +
           ((C26551 * C1683 + C26495 * C1793 + C26552 * C6042 +
             C26496 * C6140) *
                C26498 +
            (C26551 * C1691 + C26495 * C1801 + C26552 * C6048 +
             C26496 * C6146) *
                C79306) *
               C79307 * C79262) *
              C79300 +
          (((C26551 * C3931 + C26495 * C4047 + C26552 * C6044 +
             C26496 * C6142) *
                C26498 +
            (C26551 * C3935 + C26495 * C4051 + C26552 * C6050 +
             C26496 * C6148) *
                C79306) *
               C79307 * C9012 -
           ((C26552 * C758 + C26496 * C868 + C26551 * C757 + C26495 * C867) *
                C79306 +
            (C26552 * C750 + C26496 * C860 + C26551 * C749 + C26495 * C859) *
                C26498) *
               C79307 * C9011 -
           ((C26552 * C6051 + C26496 * C6149 + C26551 * C6048 +
             C26495 * C6146) *
                C79306 +
            (C26552 * C6045 + C26496 * C6143 + C26551 * C6042 +
             C26495 * C6140) *
                C26498) *
               C79307 * C79262) *
              C79285 +
          (((C26551 * C750 + C26495 * C860 + C26552 * C5568 + C26496 * C5626) *
                C26498 +
            (C26551 * C758 + C26495 * C868 + C26552 * C5572 + C26496 * C5630) *
                C79306) *
               C79307 * C9011 -
           ((C26552 * C8379 + C26496 * C8453 + C26551 * C6050 +
             C26495 * C6148) *
                C79306 +
            (C26552 * C8377 + C26496 * C8451 + C26551 * C6044 +
             C26495 * C6142) *
                C26498) *
               C79307 * C9012 +
           ((C26551 * C6045 + C26495 * C6143 + C26552 * C31755 +
             C26496 * C31853) *
                C26498 +
            (C26551 * C6051 + C26495 * C6149 + C26552 * C31756 +
             C26496 * C31854) *
                C79306) *
               C79307 * C79262) *
              C79259) *
         C78981) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
               C26498 +
           (C26551 * C102 + C26495 * C173 + C26552 * C757 + C26496 * C867) *
               C79306) *
              C79307 * C10314 -
          ((C26552 * C3935 + C26496 * C4051 + C26551 * C1690 + C26495 * C1800) *
               C79306 +
           (C26552 * C3931 + C26496 * C4047 + C26551 * C1682 + C26495 * C1792) *
               C26498) *
              C79307 * C10315 +
          ((C26551 * C1683 + C26495 * C1793 + C26552 * C6042 + C26496 * C6140) *
               C26498 +
           (C26551 * C1691 + C26495 * C1801 + C26552 * C6048 + C26496 * C6146) *
               C79306) *
              C79307 * C10316 -
          ((C26552 * C12367 + C26496 * C12441 + C26551 * C10324 +
            C26495 * C10382) *
               C79306 +
           (C26552 * C12365 + C26496 * C12439 + C26551 * C10320 +
            C26495 * C10378) *
               C26498) *
              C79307 * C10317 +
          ((C26551 * C10321 + C26495 * C10379 + C26552 * C36007 +
            C26496 * C36056) *
               C26498 +
           (C26551 * C10325 + C26495 * C10383 + C26552 * C36008 +
            C26496 * C36057) *
               C79306) *
              C79307 * C10318) *
         C79009 * C78981) /
            (p * q * std::sqrt(p + q));
    d2eexz[37] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C245 * C96 + C79307 * C246) * C26498 +
                (C245 * C102 + C79307 * C252) * C79306) *
                   C26495 +
               ((C245 * C749 + C79307 * C973) * C26498 +
                (C245 * C757 + C79307 * C981) * C79306) *
                   C26496) *
                  C79027 * C79009 * C87 -
              ((C1005 * C79306 + C1006 * C26498) * C26496 +
               (C276 * C79306 + C275 * C26498) * C26495) *
                  C79027 * C79009 * C88 +
              ((C278 * C26498 + C277 * C79306) * C26495 +
               (C1009 * C26498 + C1010 * C79306) * C26496) *
                  C79027 * C79009 * C89 -
              ((C2761 * C79306 + C2762 * C26498) * C26496 +
               (C280 * C79306 + C279 * C26498) * C26495) *
                  C79027 * C79009 * C90 +
              ((C282 * C26498 + C281 * C79306) * C26495 +
               ((C245 * C2609 + C79307 * C2754) * C26498 +
                (C245 * C2610 + C79307 * C2755) * C79306) *
                   C26496) *
                  C79027 * C79009 * C91) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C245 * C96 + C79307 * C246) * C26498 +
                 (C245 * C102 + C79307 * C252) * C79306) *
                    C26495 +
                (C27144 + C27145) * C26496) *
                   C79027 * C79300 -
               ((C27146 + C27147) * C26496 + (C27145 + C27144) * C26495) *
                   C79027 * C79285 +
               ((C27147 + C27146) * C26495 +
                ((C245 * C5568 + C79307 * C5676) * C26498 +
                 (C245 * C5572 + C79307 * C5680) * C79306) *
                    C26496) *
                   C79027 * C79259) *
                  C745 +
              (((C27132 + C27133) * C26495 + (C27134 + C27135) * C26496) *
                   C79027 * C79285 -
               ((C27133 + C27132) * C26496 +
                (C276 * C79306 + C275 * C26498) * C26495) *
                   C79027 * C79300 -
               ((C6953 * C79306 + C6954 * C26498) * C26496 +
                (C27135 + C27134) * C26495) *
                   C79027 * C79259) *
                  C746 +
              (((C278 * C26498 + C277 * C79306) * C26495 +
                (C27136 + C27137) * C26496) *
                   C79027 * C79300 -
               ((C27138 + C27139) * C26496 + (C27137 + C27136) * C26495) *
                   C79027 * C79285 +
               ((C27139 + C27138) * C26495 +
                ((C245 * C6801 + C79307 * C6946) * C26498 +
                 (C245 * C6802 + C79307 * C6947) * C79306) *
                    C26496) *
                   C79027 * C79259) *
                  C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) * (((((C245 * C96 + C79307 * C246) * C26498 +
                                 (C245 * C102 + C79307 * C252) * C79306) *
                                    C26495 +
                                (C27144 + C27145) * C26496) *
                                   C79301 -
                               (((C245 * C3935 + C79307 * C4169) * C79306 +
                                 (C245 * C3931 + C79307 * C4165) * C26498) *
                                    C26496 +
                                ((C245 * C1690 + C79307 * C1914) * C79306 +
                                 (C245 * C1682 + C79307 * C1906) * C26498) *
                                    C26495) *
                                   C79287 +
                               (((C245 * C1683 + C79307 * C1907) * C26498 +
                                 (C245 * C1691 + C79307 * C1915) * C79306) *
                                    C26495 +
                                ((C245 * C6042 + C79307 * C6226) * C26498 +
                                 (C245 * C6048 + C79307 * C6232) * C79306) *
                                    C26496) *
                                   C79262) *
                                  C79009 * C745 +
                              (((C1939 * C26498 + C1938 * C79306) * C26495 +
                                (C4182 * C26498 + C4183 * C79306) * C26496) *
                                   C79287 -
                               ((C27133 + C27132) * C26496 +
                                (C276 * C79306 + C275 * C26498) * C26495) *
                                   C79301 -
                               ((C11033 * C79306 + C11034 * C26498) * C26496 +
                                (C1941 * C79306 + C1940 * C26498) * C26495) *
                                   C79262) *
                                  C79009 * C746 +
                              (((C278 * C26498 + C277 * C79306) * C26495 +
                                (C27136 + C27137) * C26496) *
                                   C79301 -
                               ((C4184 * C79306 + C4185 * C26498) * C26496 +
                                (C1943 * C79306 + C1942 * C26498) * C26495) *
                                   C79287 +
                               ((C1945 * C26498 + C1944 * C79306) * C26495 +
                                ((C245 * C10817 + C79307 * C11026) * C26498 +
                                 (C245 * C10818 + C79307 * C11027) * C79306) *
                                    C26496) *
                                   C79262) *
                                  C79009 * C79253)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C245 * C96 + C79307 * C246) * C26498 +
             (C245 * C102 + C79307 * C252) * C79306) *
                C26495 +
            (C27144 + C27145) * C26496) *
               C79027 * C4921 -
           ((C27146 + C27147) * C26496 + (C27145 + C27144) * C26495) * C79027 *
               C4922 +
           ((C27147 + C27146) * C26495 +
            ((C245 * C5568 + C79307 * C5676) * C26498 +
             (C245 * C5572 + C79307 * C5680) * C79306) *
                C26496) *
               C79027 * C79259) *
              C79297 +
          (((C27132 + C27133) * C26495 + (C27134 + C27135) * C26496) * C79027 *
               C4922 -
           ((C27133 + C27132) * C26496 +
            (C276 * C79306 + C275 * C26498) * C26495) *
               C79027 * C4921 -
           ((C6953 * C79306 + C6954 * C26498) * C26496 +
            (C27135 + C27134) * C26495) *
               C79027 * C79259) *
              C79281 +
          (((C278 * C26498 + C277 * C79306) * C26495 +
            (C27136 + C27137) * C26496) *
               C79027 * C4921 -
           ((C27138 + C27139) * C26496 + (C27137 + C27136) * C26495) * C79027 *
               C4922 +
           ((C27139 + C27138) * C26495 +
            ((C245 * C6801 + C79307 * C6946) * C26498 +
             (C245 * C6802 + C79307 * C6947) * C79306) *
                C26496) *
               C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C245 * C96 + C79307 * C246) * C26498 +
            (C245 * C102 + C79307 * C252) * C79306) *
               C26495 +
           (C27144 + C27145) * C26496) *
              C79027 * C5561 -
          ((C27146 + C27147) * C26496 + (C27145 + C27144) * C26495) * C79027 *
              C5562 +
          ((C27147 + C27146) * C26495 + (C31377 + C31378) * C26496) * C79027 *
              C5563 -
          ((C31379 + C31380) * C26496 + (C31378 + C31377) * C26495) * C79027 *
              C5564 +
          ((C31380 + C31379) * C26495 +
           ((C245 * C31259 + C79307 * C31362) * C26498 +
            (C245 * C31260 + C79307 * C31363) * C79306) *
               C26496) *
              C79027 * C5565) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C245 * C96 + C79307 * C246) * C26498 +
             (C245 * C102 + C79307 * C252) * C79306) *
                C26495 +
            (C27144 + C27145) * C26496) *
               C79301 -
           ((C29915 + C29916) * C26496 +
            ((C245 * C1690 + C79307 * C1914) * C79306 +
             (C245 * C1682 + C79307 * C1906) * C26498) *
                C26495) *
               C79287 +
           (((C245 * C1683 + C79307 * C1907) * C26498 +
             (C245 * C1691 + C79307 * C1915) * C79306) *
                C26495 +
            (C31950 + C31951) * C26496) *
               C79262) *
              C4921 +
          (((C29916 + C29915) * C26495 + (C31952 + C31953) * C26496) * C79287 -
           ((C27146 + C27147) * C26496 + (C27145 + C27144) * C26495) * C79301 -
           ((C31954 + C31955) * C26496 + (C31951 + C31950) * C26495) * C79262) *
              C4922 +
          (((C27147 + C27146) * C26495 + (C31377 + C31378) * C26496) * C79301 -
           (((C245 * C8379 + C79307 * C8523) * C79306 +
             (C245 * C8377 + C79307 * C8521) * C26498) *
                C26496 +
            (C31953 + C31952) * C26495) *
               C79287 +
           ((C31955 + C31954) * C26495 +
            ((C245 * C31755 + C79307 * C31929) * C26498 +
             (C245 * C31756 + C79307 * C31930) * C79306) *
                C26496) *
               C79262) *
              C79259) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) * (((((C245 * C96 + C79307 * C246) * C26498 +
                                 (C245 * C102 + C79307 * C252) * C79306) *
                                    C26495 +
                                (C27144 + C27145) * C26496) *
                                   C9011 -
                               ((C29915 + C29916) * C26496 +
                                ((C245 * C1690 + C79307 * C1914) * C79306 +
                                 (C245 * C1682 + C79307 * C1906) * C26498) *
                                    C26495) *
                                   C9012 +
                               (((C245 * C1683 + C79307 * C1907) * C26498 +
                                 (C245 * C1691 + C79307 * C1915) * C79306) *
                                    C26495 +
                                (C31950 + C31951) * C26496) *
                                   C79262) *
                                  C79009 * C79297 +
                              (((C1939 * C26498 + C1938 * C79306) * C26495 +
                                (C29909 + C29910) * C26496) *
                                   C9012 -
                               ((C27133 + C27132) * C26496 +
                                (C276 * C79306 + C275 * C26498) * C26495) *
                                   C9011 -
                               ((C11033 * C79306 + C11034 * C26498) * C26496 +
                                (C1941 * C79306 + C1940 * C26498) * C26495) *
                                   C79262) *
                                  C79009 * C79281 +
                              (((C278 * C26498 + C277 * C79306) * C26495 +
                                (C27136 + C27137) * C26496) *
                                   C9011 -
                               ((C29911 + C29912) * C26496 +
                                (C1943 * C79306 + C1942 * C26498) * C26495) *
                                   C9012 +
                               ((C1945 * C26498 + C1944 * C79306) * C26495 +
                                ((C245 * C10817 + C79307 * C11026) * C26498 +
                                 (C245 * C10818 + C79307 * C11027) * C79306) *
                                    C26496) *
                                   C79262) *
                                  C79009 * C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C245 * C96 + C79307 * C246) * C26498 +
             (C245 * C102 + C79307 * C252) * C79306) *
                C26495 +
            (C27144 + C27145) * C26496) *
               C9011 -
           ((C29915 + C29916) * C26496 +
            ((C245 * C1690 + C79307 * C1914) * C79306 +
             (C245 * C1682 + C79307 * C1906) * C26498) *
                C26495) *
               C9012 +
           (((C245 * C1683 + C79307 * C1907) * C26498 +
             (C245 * C1691 + C79307 * C1915) * C79306) *
                C26495 +
            (C31950 + C31951) * C26496) *
               C79262) *
              C79300 +
          (((C29916 + C29915) * C26495 + (C31952 + C31953) * C26496) * C9012 -
           ((C27146 + C27147) * C26496 + (C27145 + C27144) * C26495) * C9011 -
           ((C31954 + C31955) * C26496 + (C31951 + C31950) * C26495) * C79262) *
              C79285 +
          (((C27147 + C27146) * C26495 + (C31377 + C31378) * C26496) * C9011 -
           ((C34208 + C34209) * C26496 + (C31953 + C31952) * C26495) * C9012 +
           ((C31955 + C31954) * C26495 +
            ((C245 * C31755 + C79307 * C31929) * C26498 +
             (C245 * C31756 + C79307 * C31930) * C79306) *
                C26496) *
               C79262) *
              C79259) *
         C78981) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C245 * C96 + C79307 * C246) * C26498 +
            (C245 * C102 + C79307 * C252) * C79306) *
               C26495 +
           (C27144 + C27145) * C26496) *
              C10314 -
          ((C29915 + C29916) * C26496 +
           ((C245 * C1690 + C79307 * C1914) * C79306 +
            (C245 * C1682 + C79307 * C1906) * C26498) *
               C26495) *
              C10315 +
          (((C245 * C1683 + C79307 * C1907) * C26498 +
            (C245 * C1691 + C79307 * C1915) * C79306) *
               C26495 +
           (C31950 + C31951) * C26496) *
              C10316 -
          (((C245 * C12367 + C79307 * C12511) * C79306 +
            (C245 * C12365 + C79307 * C12509) * C26498) *
               C26496 +
           ((C245 * C10324 + C79307 * C10432) * C79306 +
            (C245 * C10320 + C79307 * C10428) * C26498) *
               C26495) *
              C10317 +
          (((C245 * C10321 + C79307 * C10429) * C26498 +
            (C245 * C10325 + C79307 * C10433) * C79306) *
               C26495 +
           ((C245 * C36007 + C79307 * C36100) * C26498 +
            (C245 * C36008 + C79307 * C36101) * C79306) *
               C26496) *
              C10318) *
         C79009 * C78981) /
            (p * q * std::sqrt(p + q));
    d2eeyx[37] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((C26498 * C96 + C79306 * C102) * C26551 +
               (C26498 * C167 + C79306 * C324) * C26495 +
               (C26498 * C749 + C79306 * C757) * C26552 +
               (C26498 * C859 + C79306 * C1087) * C26496) *
                  C79307 * C79027 * C79009 * C87 -
              ((C26498 * C858 + C79306 * C1086) * C26496 +
               (C26498 * C748 + C79306 * C756) * C26552 +
               (C26498 * C168 + C79306 * C325) * C26495 +
               (C26498 * C97 + C79306 * C103) * C26551) *
                  C79307 * C79027 * C79009 * C88 +
              ((C26498 * C98 + C79306 * C104) * C26551 +
               (C26498 * C169 + C79306 * C326) * C26495 +
               (C26498 * C752 + C79306 * C760) * C26552 +
               (C26498 * C862 + C79306 * C1090) * C26496) *
                  C79307 * C79027 * C79009 * C89 -
              ((C26498 * C864 + C79306 * C1092) * C26496 +
               (C26498 * C754 + C79306 * C762) * C26552 +
               (C26498 * C170 + C79306 * C327) * C26495 +
               (C26498 * C99 + C79306 * C105) * C26551) *
                  C79307 * C79027 * C79009 * C90 +
              ((C26498 * C100 + C79306 * C106) * C26551 +
               (C26498 * C171 + C79306 * C328) * C26495 +
               (C26498 * C2609 + C79306 * C2610) * C26552 +
               (C26498 * C2680 + C79306 * C2828) * C26496) *
                  C79307 * C79027 * C79009 * C91) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C26498 * C96 + C79306 * C102) * C26551 +
                (C26498 * C167 + C79306 * C324) * C26495 + C27246 * C26552 +
                C27247 * C26496) *
                   C79307 * C79027 * C79300 -
               (C27248 * C26496 + C27249 * C26552 + C27247 * C26495 +
                C27246 * C26551) *
                   C79307 * C79027 * C79285 +
               (C27249 * C26551 + C27248 * C26495 +
                (C26498 * C5568 + C79306 * C5572) * C26552 +
                (C26498 * C5626 + C79306 * C5726) * C26496) *
                   C79307 * C79027 * C79259) *
                  C745 +
              ((C27250 * C26551 + C27251 * C26495 + C27252 * C26552 +
                C27253 * C26496) *
                   C79307 * C79027 * C79285 -
               (C27251 * C26496 + C27250 * C26552 +
                (C26498 * C168 + C79306 * C325) * C26495 +
                (C26498 * C97 + C79306 * C103) * C26551) *
                   C79307 * C79027 * C79300 -
               ((C26498 * C5625 + C79306 * C5725) * C26496 +
                (C26498 * C5567 + C79306 * C5571) * C26552 + C27253 * C26495 +
                C27252 * C26551) *
                   C79307 * C79027 * C79259) *
                  C746 +
              (((C26498 * C98 + C79306 * C104) * C26551 +
                (C26498 * C169 + C79306 * C326) * C26495 + C27254 * C26552 +
                C27255 * C26496) *
                   C79307 * C79027 * C79300 -
               (C27256 * C26496 + C27257 * C26552 + C27255 * C26495 +
                C27254 * C26551) *
                   C79307 * C79027 * C79285 +
               (C27257 * C26551 + C27256 * C26495 +
                (C26498 * C6801 + C79306 * C6802) * C26552 +
                (C26498 * C6872 + C79306 * C7020) * C26496) *
                   C79307 * C79027 * C79259) *
                  C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) * ((((C26498 * C96 + C79306 * C102) * C26551 +
                                (C26498 * C167 + C79306 * C324) * C26495 +
                                C27246 * C26552 + C27247 * C26496) *
                                   C79307 * C79301 -
                               ((C26498 * C4047 + C79306 * C4283) * C26496 +
                                (C26498 * C3931 + C79306 * C3935) * C26552 +
                                (C26498 * C1792 + C79306 * C2020) * C26495 +
                                (C26498 * C1682 + C79306 * C1690) * C26551) *
                                   C79307 * C79287 +
                               ((C26498 * C1683 + C79306 * C1691) * C26551 +
                                (C26498 * C1793 + C79306 * C2021) * C26495 +
                                (C26498 * C6042 + C79306 * C6048) * C26552 +
                                (C26498 * C6140 + C79306 * C6312) * C26496) *
                                   C79307 * C79262) *
                                  C79009 * C745 +
                              (((C26498 * C1681 + C79306 * C1689) * C26551 +
                                (C26498 * C1791 + C79306 * C2019) * C26495 +
                                (C26498 * C3932 + C79306 * C3936) * C26552 +
                                (C26498 * C4048 + C79306 * C4284) * C26496) *
                                   C79307 * C79287 -
                               (C27251 * C26496 + C27250 * C26552 +
                                (C26498 * C168 + C79306 * C325) * C26495 +
                                (C26498 * C97 + C79306 * C103) * C26551) *
                                   C79307 * C79301 -
                               ((C26498 * C6139 + C79306 * C6311) * C26496 +
                                (C26498 * C6041 + C79306 * C6047) * C26552 +
                                (C26498 * C1794 + C79306 * C2022) * C26495 +
                                (C26498 * C1684 + C79306 * C1692) * C26551) *
                                   C79307 * C79262) *
                                  C79009 * C746 +
                              (((C26498 * C98 + C79306 * C104) * C26551 +
                                (C26498 * C169 + C79306 * C326) * C26495 +
                                C27254 * C26552 + C27255 * C26496) *
                                   C79307 * C79301 -
                               ((C26498 * C4049 + C79306 * C4285) * C26496 +
                                (C26498 * C3933 + C79306 * C3937) * C26552 +
                                (C26498 * C1795 + C79306 * C2023) * C26495 +
                                (C26498 * C1685 + C79306 * C1693) * C26551) *
                                   C79307 * C79287 +
                               ((C26498 * C1686 + C79306 * C1694) * C26551 +
                                (C26498 * C1796 + C79306 * C2024) * C26495 +
                                (C26498 * C10817 + C79306 * C10818) * C26552 +
                                (C26498 * C10920 + C79306 * C11132) * C26496) *
                                   C79307 * C79262) *
                                  C79009 * C79253)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C26498 * C96 + C79306 * C102) * C26551 +
            (C26498 * C167 + C79306 * C324) * C26495 + C27246 * C26552 +
            C27247 * C26496) *
               C79307 * C79027 * C4921 -
           (C27248 * C26496 + C27249 * C26552 + C27247 * C26495 +
            C27246 * C26551) *
               C79307 * C79027 * C4922 +
           (C27249 * C26551 + C27248 * C26495 +
            (C26498 * C5568 + C79306 * C5572) * C26552 +
            (C26498 * C5626 + C79306 * C5726) * C26496) *
               C79307 * C79027 * C79259) *
              C79297 +
          ((C27250 * C26551 + C27251 * C26495 + C27252 * C26552 +
            C27253 * C26496) *
               C79307 * C79027 * C4922 -
           (C27251 * C26496 + C27250 * C26552 +
            (C26498 * C168 + C79306 * C325) * C26495 +
            (C26498 * C97 + C79306 * C103) * C26551) *
               C79307 * C79027 * C4921 -
           ((C26498 * C5625 + C79306 * C5725) * C26496 +
            (C26498 * C5567 + C79306 * C5571) * C26552 + C27253 * C26495 +
            C27252 * C26551) *
               C79307 * C79027 * C79259) *
              C79281 +
          (((C26498 * C98 + C79306 * C104) * C26551 +
            (C26498 * C169 + C79306 * C326) * C26495 + C27254 * C26552 +
            C27255 * C26496) *
               C79307 * C79027 * C4921 -
           (C27256 * C26496 + C27257 * C26552 + C27255 * C26495 +
            C27254 * C26551) *
               C79307 * C79027 * C4922 +
           (C27257 * C26551 + C27256 * C26495 +
            (C26498 * C6801 + C79306 * C6802) * C26552 +
            (C26498 * C6872 + C79306 * C7020) * C26496) *
               C79307 * C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C26498 * C96 + C79306 * C102) * C26551 +
           (C26498 * C167 + C79306 * C324) * C26495 + C27246 * C26552 +
           C27247 * C26496) *
              C79307 * C79027 * C5561 -
          (C27248 * C26496 + C27249 * C26552 + C27247 * C26495 +
           C27246 * C26551) *
              C79307 * C79027 * C5562 +
          (C27249 * C26551 + C27248 * C26495 + C31432 * C26552 +
           C31433 * C26496) *
              C79307 * C79027 * C5563 -
          (C31434 * C26496 + C31435 * C26552 + C31433 * C26495 +
           C31432 * C26551) *
              C79307 * C79027 * C5564 +
          (C31435 * C26551 + C31434 * C26495 +
           (C26498 * C31259 + C79306 * C31260) * C26552 +
           (C26498 * C31318 + C79306 * C31422) * C26496) *
              C79307 * C79027 * C5565) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C26498 * C96 + C79306 * C102) * C26551 +
            (C26498 * C167 + C79306 * C324) * C26495 + C27246 * C26552 +
            C27247 * C26496) *
               C79307 * C79301 -
           (C30027 * C26496 + C30028 * C26552 +
            (C26498 * C1792 + C79306 * C2020) * C26495 +
            (C26498 * C1682 + C79306 * C1690) * C26551) *
               C79307 * C79287 +
           ((C26498 * C1683 + C79306 * C1691) * C26551 +
            (C26498 * C1793 + C79306 * C2021) * C26495 + C32043 * C26552 +
            C32044 * C26496) *
               C79307 * C79262) *
              C4921 +
          ((C30028 * C26551 + C30027 * C26495 + C32045 * C26552 +
            C32046 * C26496) *
               C79307 * C79287 -
           (C27248 * C26496 + C27249 * C26552 + C27247 * C26495 +
            C27246 * C26551) *
               C79307 * C79301 -
           (C32047 * C26496 + C32048 * C26552 + C32044 * C26495 +
            C32043 * C26551) *
               C79307 * C79262) *
              C4922 +
          ((C27249 * C26551 + C27248 * C26495 + C31432 * C26552 +
            C31433 * C26496) *
               C79307 * C79301 -
           ((C26498 * C8451 + C79306 * C8591) * C26496 +
            (C26498 * C8377 + C79306 * C8379) * C26552 + C32046 * C26495 +
            C32045 * C26551) *
               C79307 * C79287 +
           (C32048 * C26551 + C32047 * C26495 +
            (C26498 * C31755 + C79306 * C31756) * C26552 +
            (C26498 * C31853 + C79306 * C32029) * C26496) *
               C79307 * C79262) *
              C79259) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) * ((((C26498 * C96 + C79306 * C102) * C26551 +
                                (C26498 * C167 + C79306 * C324) * C26495 +
                                C27246 * C26552 + C27247 * C26496) *
                                   C79307 * C9011 -
                               (C30027 * C26496 + C30028 * C26552 +
                                (C26498 * C1792 + C79306 * C2020) * C26495 +
                                (C26498 * C1682 + C79306 * C1690) * C26551) *
                                   C79307 * C9012 +
                               ((C26498 * C1683 + C79306 * C1691) * C26551 +
                                (C26498 * C1793 + C79306 * C2021) * C26495 +
                                C32043 * C26552 + C32044 * C26496) *
                                   C79307 * C79262) *
                                  C79009 * C79297 +
                              (((C26498 * C1681 + C79306 * C1689) * C26551 +
                                (C26498 * C1791 + C79306 * C2019) * C26495 +
                                C30029 * C26552 + C30030 * C26496) *
                                   C79307 * C9012 -
                               (C27251 * C26496 + C27250 * C26552 +
                                (C26498 * C168 + C79306 * C325) * C26495 +
                                (C26498 * C97 + C79306 * C103) * C26551) *
                                   C79307 * C9011 -
                               ((C26498 * C6139 + C79306 * C6311) * C26496 +
                                (C26498 * C6041 + C79306 * C6047) * C26552 +
                                (C26498 * C1794 + C79306 * C2022) * C26495 +
                                (C26498 * C1684 + C79306 * C1692) * C26551) *
                                   C79307 * C79262) *
                                  C79009 * C79281 +
                              (((C26498 * C98 + C79306 * C104) * C26551 +
                                (C26498 * C169 + C79306 * C326) * C26495 +
                                C27254 * C26552 + C27255 * C26496) *
                                   C79307 * C9011 -
                               (C30031 * C26496 + C30032 * C26552 +
                                (C26498 * C1795 + C79306 * C2023) * C26495 +
                                (C26498 * C1685 + C79306 * C1693) * C26551) *
                                   C79307 * C9012 +
                               ((C26498 * C1686 + C79306 * C1694) * C26551 +
                                (C26498 * C1796 + C79306 * C2024) * C26495 +
                                (C26498 * C10817 + C79306 * C10818) * C26552 +
                                (C26498 * C10920 + C79306 * C11132) * C26496) *
                                   C79307 * C79262) *
                                  C79009 * C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C26498 * C96 + C79306 * C102) * C26551 +
            (C26498 * C167 + C79306 * C324) * C26495 + C27246 * C26552 +
            C27247 * C26496) *
               C79307 * C9011 -
           (C30027 * C26496 + C30028 * C26552 +
            (C26498 * C1792 + C79306 * C2020) * C26495 +
            (C26498 * C1682 + C79306 * C1690) * C26551) *
               C79307 * C9012 +
           ((C26498 * C1683 + C79306 * C1691) * C26551 +
            (C26498 * C1793 + C79306 * C2021) * C26495 + C32043 * C26552 +
            C32044 * C26496) *
               C79307 * C79262) *
              C79300 +
          ((C30028 * C26551 + C30027 * C26495 + C32045 * C26552 +
            C32046 * C26496) *
               C79307 * C9012 -
           (C27248 * C26496 + C27249 * C26552 + C27247 * C26495 +
            C27246 * C26551) *
               C79307 * C9011 -
           (C32047 * C26496 + C32048 * C26552 + C32044 * C26495 +
            C32043 * C26551) *
               C79307 * C79262) *
              C79285 +
          ((C27249 * C26551 + C27248 * C26495 + C31432 * C26552 +
            C31433 * C26496) *
               C79307 * C9011 -
           (C34281 * C26496 + C34282 * C26552 + C32046 * C26495 +
            C32045 * C26551) *
               C79307 * C9012 +
           (C32048 * C26551 + C32047 * C26495 +
            (C26498 * C31755 + C79306 * C31756) * C26552 +
            (C26498 * C31853 + C79306 * C32029) * C26496) *
               C79307 * C79262) *
              C79259) *
         C78981) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C26498 * C96 + C79306 * C102) * C26551 +
           (C26498 * C167 + C79306 * C324) * C26495 + C27246 * C26552 +
           C27247 * C26496) *
              C79307 * C10314 -
          (C30027 * C26496 + C30028 * C26552 +
           (C26498 * C1792 + C79306 * C2020) * C26495 +
           (C26498 * C1682 + C79306 * C1690) * C26551) *
              C79307 * C10315 +
          ((C26498 * C1683 + C79306 * C1691) * C26551 +
           (C26498 * C1793 + C79306 * C2021) * C26495 + C32043 * C26552 +
           C32044 * C26496) *
              C79307 * C10316 -
          ((C26498 * C12439 + C79306 * C12579) * C26496 +
           (C26498 * C12365 + C79306 * C12367) * C26552 +
           (C26498 * C10378 + C79306 * C10478) * C26495 +
           (C26498 * C10320 + C79306 * C10324) * C26551) *
              C79307 * C10317 +
          ((C26498 * C10321 + C79306 * C10325) * C26551 +
           (C26498 * C10379 + C79306 * C10479) * C26495 +
           (C26498 * C36007 + C79306 * C36008) * C26552 +
           (C26498 * C36056 + C79306 * C36144) * C26496) *
              C79307 * C10318) *
         C79009 * C78981) /
            (p * q * std::sqrt(p + q));
    d2eeyy[37] += (0.5 * std::pow(Pi, 2.5) *
                       ((C26679 * C96 + C26682 + C26682 + C26495 * C373 +
                         C26680 * C749 + C26683 + C26683 + C26496 * C1169) *
                            C79306 * C79307 * C79027 * C79009 * C87 -
                        (C26680 * C748 + C26684 + C26684 + C26496 * C1168 +
                         C26679 * C97 + C26685 + C26685 + C26495 * C374) *
                            C79306 * C79307 * C79027 * C79009 * C88 +
                        (C26679 * C98 + C26686 + C26686 + C26495 * C375 +
                         C26680 * C752 + C26687 + C26687 + C26496 * C1172) *
                            C79306 * C79307 * C79027 * C79009 * C89 -
                        (C26680 * C754 + C26688 + C26688 + C26496 * C1174 +
                         C26679 * C99 + C26689 + C26689 + C26495 * C376) *
                            C79306 * C79307 * C79027 * C79009 * C90 +
                        (C26679 * C100 + C26690 + C26690 + C26495 * C377 +
                         C26680 * C2609 + C26691 + C26691 + C26496 * C2895) *
                            C79306 * C79307 * C79027 * C79009 * C91) +
                   0.5 * std::pow(Pi, 2.5) *
                       (((C26679 * C96 + C26682 + C26682 + C26495 * C373 +
                          C26680 * C749 + C26683 + C26683 + C26496 * C1169) *
                             C79306 * C79307 * C79027 * C79300 -
                         (C26680 * C750 + C27332 + C27332 + C26496 * C1170 +
                          C26679 * C749 + C27333 + C27333 + C26495 * C1169) *
                             C79306 * C79307 * C79027 * C79285 +
                         (C26679 * C750 + C27334 + C27334 + C26495 * C1170 +
                          C26680 * C5568 + C27335 + C27335 + C26496 * C5772) *
                             C79306 * C79307 * C79027 * C79259) *
                            C745 +
                        ((C26679 * C748 + C27336 + C27336 + C26495 * C1168 +
                          C26680 * C751 + C27337 + C27337 + C26496 * C1171) *
                             C79306 * C79307 * C79027 * C79285 -
                         (C26680 * C748 + C26684 + C26684 + C26496 * C1168 +
                          C26679 * C97 + C26685 + C26685 + C26495 * C374) *
                             C79306 * C79307 * C79027 * C79300 -
                         (C26680 * C5567 + C27338 + C27338 + C26496 * C5771 +
                          C26679 * C751 + C27339 + C27339 + C26495 * C1171) *
                             C79306 * C79307 * C79027 * C79259) *
                            C746 +
                        ((C26679 * C98 + C26686 + C26686 + C26495 * C375 +
                          C26680 * C752 + C26687 + C26687 + C26496 * C1172) *
                             C79306 * C79307 * C79027 * C79300 -
                         (C26680 * C753 + C27340 + C27340 + C26496 * C1173 +
                          C26679 * C752 + C27341 + C27341 + C26495 * C1172) *
                             C79306 * C79307 * C79027 * C79285 +
                         (C26679 * C753 + C27342 + C27342 + C26495 * C1173 +
                          C26680 * C6801 + C27343 + C27343 + C26496 * C7087) *
                             C79306 * C79307 * C79027 * C79259) *
                            C79253)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::pow(Pi, 2.5) *
                   (((C26679 * C96 + C26682 + C26682 + C26495 * C373 +
                      C26680 * C749 + C26683 + C26683 + C26496 * C1169) *
                         C79306 * C79307 * C79301 -
                     (C26680 * C3931 + C28068 + C28068 + C26496 * C4385 +
                      C26679 * C1682 + C28069 + C28069 + C26495 * C2102) *
                         C79306 * C79307 * C79287 +
                     (C26679 * C1683 + C28070 + C28070 + C26495 * C2103 +
                      C26680 * C6042 + C28071 + C28071 + C26496 * C6392) *
                         C79306 * C79307 * C79262) *
                        C79009 * C745 +
                    ((C26679 * C1681 + C28072 + C28072 + C26495 * C2101 +
                      C26680 * C3932 + C28073 + C28073 + C26496 * C4386) *
                         C79306 * C79307 * C79287 -
                     (C26680 * C748 + C26684 + C26684 + C26496 * C1168 +
                      C26679 * C97 + C26685 + C26685 + C26495 * C374) *
                         C79306 * C79307 * C79301 -
                     (C26680 * C6041 + C28074 + C28074 + C26496 * C6391 +
                      C26679 * C1684 + C28075 + C28075 + C26495 * C2104) *
                         C79306 * C79307 * C79262) *
                        C79009 * C746 +
                    ((C26679 * C98 + C26686 + C26686 + C26495 * C375 +
                      C26680 * C752 + C26687 + C26687 + C26496 * C1172) *
                         C79306 * C79307 * C79301 -
                     (C26680 * C3933 + C28076 + C28076 + C26496 * C4387 +
                      C26679 * C1685 + C28077 + C28077 + C26495 * C2105) *
                         C79306 * C79307 * C79287 +
                     (C26679 * C1686 + C28078 + C28078 + C26495 * C2106 +
                      C26680 * C10817 + C28079 + C28079 + C26496 * C11231) *
                         C79306 * C79307 * C79262) *
                        C79009 * C79253)) /
                      (p * q * std::sqrt(p + q)) +
                  (0.5 * std::pow(Pi, 2.5) *
                   (((C26679 * C96 + C26682 + C26682 + C26495 * C373 +
                      C26680 * C749 + C26683 + C26683 + C26496 * C1169) *
                         C79306 * C79307 * C79027 * C4921 -
                     (C26680 * C750 + C27332 + C27332 + C26496 * C1170 +
                      C26679 * C749 + C27333 + C27333 + C26495 * C1169) *
                         C79306 * C79307 * C79027 * C4922 +
                     (C26679 * C750 + C27334 + C27334 + C26495 * C1170 +
                      C26680 * C5568 + C27335 + C27335 + C26496 * C5772) *
                         C79306 * C79307 * C79027 * C79259) *
                        C79297 +
                    ((C26679 * C748 + C27336 + C27336 + C26495 * C1168 +
                      C26680 * C751 + C27337 + C27337 + C26496 * C1171) *
                         C79306 * C79307 * C79027 * C4922 -
                     (C26680 * C748 + C26684 + C26684 + C26496 * C1168 +
                      C26679 * C97 + C26685 + C26685 + C26495 * C374) *
                         C79306 * C79307 * C79027 * C4921 -
                     (C26680 * C5567 + C27338 + C27338 + C26496 * C5771 +
                      C26679 * C751 + C27339 + C27339 + C26495 * C1171) *
                         C79306 * C79307 * C79027 * C79259) *
                        C79281 +
                    ((C26679 * C98 + C26686 + C26686 + C26495 * C375 +
                      C26680 * C752 + C26687 + C26687 + C26496 * C1172) *
                         C79306 * C79307 * C79027 * C4921 -
                     (C26680 * C753 + C27340 + C27340 + C26496 * C1173 +
                      C26679 * C752 + C27341 + C27341 + C26495 * C1172) *
                         C79306 * C79307 * C79027 * C4922 +
                     (C26679 * C753 + C27342 + C27342 + C26495 * C1173 +
                      C26680 * C6801 + C27343 + C27343 + C26496 * C7087) *
                         C79306 * C79307 * C79027 * C79259) *
                        C79253)) /
                      (p * q * std::sqrt(p + q)) +
                  (0.5 * std::pow(Pi, 2.5) *
                   ((C26679 * C96 + C26682 + C26682 + C26495 * C373 +
                     C26680 * C749 + C26683 + C26683 + C26496 * C1169) *
                        C79306 * C79307 * C79027 * C5561 -
                    (C26680 * C750 + C27332 + C27332 + C26496 * C1170 +
                     C26679 * C749 + C27333 + C27333 + C26495 * C1169) *
                        C79306 * C79307 * C79027 * C5562 +
                    (C26679 * C750 + C27334 + C27334 + C26495 * C1170 +
                     C26680 * C5568 + C27335 + C27335 + C26496 * C5772) *
                        C79306 * C79307 * C79027 * C5563 -
                    (C26680 * C5569 + C31479 + C31479 + C26496 * C5773 +
                     C26679 * C5568 + C31480 + C31480 + C26495 * C5772) *
                        C79306 * C79307 * C79027 * C5564 +
                    (C26679 * C5569 + C31481 + C31481 + C26495 * C5773 +
                     C26680 * C31259 + C31482 + C31482 + C26496 * C31477) *
                        C79306 * C79307 * C79027 * C5565) *
                   C78981) /
                      (p * q * std::sqrt(p + q)) -
                  (std::pow(Pi, 2.5) *
                   (((C26679 * C96 + C26682 + C26682 + C26495 * C373 +
                      C26680 * C749 + C26683 + C26683 + C26496 * C1169) *
                         C79306 * C79307 * C79301 -
                     (C26680 * C3931 + C28068 + C28068 + C26496 * C4385 +
                      C26679 * C1682 + C28069 + C28069 + C26495 * C2102) *
                         C79306 * C79307 * C79287 +
                     (C26679 * C1683 + C28070 + C28070 + C26495 * C2103 +
                      C26680 * C6042 + C28071 + C28071 + C26496 * C6392) *
                         C79306 * C79307 * C79262) *
                        C4921 +
                    ((C26679 * C3931 + C30131 + C30131 + C26495 * C4385 +
                      C26680 * C6044 + C30132 + C30132 + C26496 * C6394) *
                         C79306 * C79307 * C79287 -
                     (C26680 * C750 + C27332 + C27332 + C26496 * C1170 +
                      C26679 * C749 + C27333 + C27333 + C26495 * C1169) *
                         C79306 * C79307 * C79301 -
                     (C26680 * C6045 + C32124 + C32124 + C26496 * C6395 +
                      C26679 * C6042 + C32125 + C32125 + C26495 * C6392) *
                         C79306 * C79307 * C79262) *
                        C4922 +
                    ((C26679 * C750 + C27334 + C27334 + C26495 * C1170 +
                      C26680 * C5568 + C27335 + C27335 + C26496 * C5772) *
                         C79306 * C79307 * C79301 -
                     (C26680 * C8377 + C32126 + C32126 + C26496 * C8659 +
                      C26679 * C6044 + C32127 + C32127 + C26495 * C6394) *
                         C79306 * C79307 * C79287 +
                     (C26679 * C6045 + C32128 + C32128 + C26495 * C6395 +
                      C26680 * C31755 + C32129 + C32129 + C26496 * C32122) *
                         C79306 * C79307 * C79262) *
                        C79259) *
                   C78981) /
                      (p * q * std::sqrt(p + q)) -
                  (std::pow(Pi, 2.5) *
                   (((C26679 * C96 + C26682 + C26682 + C26495 * C373 +
                      C26680 * C749 + C26683 + C26683 + C26496 * C1169) *
                         C79306 * C79307 * C9011 -
                     (C26680 * C3931 + C28068 + C28068 + C26496 * C4385 +
                      C26679 * C1682 + C28069 + C28069 + C26495 * C2102) *
                         C79306 * C79307 * C9012 +
                     (C26679 * C1683 + C28070 + C28070 + C26495 * C2103 +
                      C26680 * C6042 + C28071 + C28071 + C26496 * C6392) *
                         C79306 * C79307 * C79262) *
                        C79009 * C79297 +
                    ((C26679 * C1681 + C28072 + C28072 + C26495 * C2101 +
                      C26680 * C3932 + C28073 + C28073 + C26496 * C4386) *
                         C79306 * C79307 * C9012 -
                     (C26680 * C748 + C26684 + C26684 + C26496 * C1168 +
                      C26679 * C97 + C26685 + C26685 + C26495 * C374) *
                         C79306 * C79307 * C9011 -
                     (C26680 * C6041 + C28074 + C28074 + C26496 * C6391 +
                      C26679 * C1684 + C28075 + C28075 + C26495 * C2104) *
                         C79306 * C79307 * C79262) *
                        C79009 * C79281 +
                    ((C26679 * C98 + C26686 + C26686 + C26495 * C375 +
                      C26680 * C752 + C26687 + C26687 + C26496 * C1172) *
                         C79306 * C79307 * C9011 -
                     (C26680 * C3933 + C28076 + C28076 + C26496 * C4387 +
                      C26679 * C1685 + C28077 + C28077 + C26495 * C2105) *
                         C79306 * C79307 * C9012 +
                     (C26679 * C1686 + C28078 + C28078 + C26495 * C2106 +
                      C26680 * C10817 + C28079 + C28079 + C26496 * C11231) *
                         C79306 * C79307 * C79262) *
                        C79009 * C79253)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::pow(Pi, 2.5) *
                   (((C26679 * C96 + C26682 + C26682 + C26495 * C373 +
                      C26680 * C749 + C26683 + C26683 + C26496 * C1169) *
                         C79306 * C79307 * C9011 -
                     (C26680 * C3931 + C28068 + C28068 + C26496 * C4385 +
                      C26679 * C1682 + C28069 + C28069 + C26495 * C2102) *
                         C79306 * C79307 * C9012 +
                     (C26679 * C1683 + C28070 + C28070 + C26495 * C2103 +
                      C26680 * C6042 + C28071 + C28071 + C26496 * C6392) *
                         C79306 * C79307 * C79262) *
                        C79300 +
                    ((C26679 * C3931 + C30131 + C30131 + C26495 * C4385 +
                      C26680 * C6044 + C30132 + C30132 + C26496 * C6394) *
                         C79306 * C79307 * C9012 -
                     (C26680 * C750 + C27332 + C27332 + C26496 * C1170 +
                      C26679 * C749 + C27333 + C27333 + C26495 * C1169) *
                         C79306 * C79307 * C9011 -
                     (C26680 * C6045 + C32124 + C32124 + C26496 * C6395 +
                      C26679 * C6042 + C32125 + C32125 + C26495 * C6392) *
                         C79306 * C79307 * C79262) *
                        C79285 +
                    ((C26679 * C750 + C27334 + C27334 + C26495 * C1170 +
                      C26680 * C5568 + C27335 + C27335 + C26496 * C5772) *
                         C79306 * C79307 * C9011 -
                     (C26680 * C8377 + C32126 + C32126 + C26496 * C8659 +
                      C26679 * C6044 + C32127 + C32127 + C26495 * C6394) *
                         C79306 * C79307 * C9012 +
                     (C26679 * C6045 + C32128 + C32128 + C26495 * C6395 +
                      C26680 * C31755 + C32129 + C32129 + C26496 * C32122) *
                         C79306 * C79307 * C79262) *
                        C79259) *
                   C78981) /
                      (p * q * std::sqrt(p + q)) +
                  (2 * std::pow(Pi, 2.5) *
                   ((C26679 * C96 + C26682 + C26682 + C26495 * C373 +
                     C26680 * C749 + C26683 + C26683 + C26496 * C1169) *
                        C79306 * C79307 * C10314 -
                    (C26680 * C3931 + C28068 + C28068 + C26496 * C4385 +
                     C26679 * C1682 + C28069 + C28069 + C26495 * C2102) *
                        C79306 * C79307 * C10315 +
                    (C26679 * C1683 + C28070 + C28070 + C26495 * C2103 +
                     C26680 * C6042 + C28071 + C28071 + C26496 * C6392) *
                        C79306 * C79307 * C10316 -
                    (C26680 * C12365 + C36189 + C36189 + C26496 * C12647 +
                     C26679 * C10320 + C36190 + C36190 + C26495 * C10524) *
                        C79306 * C79307 * C10317 +
                    (C26679 * C10321 + C36191 + C36191 + C26495 * C10525 +
                     C26680 * C36007 + C36192 + C36192 + C26496 * C36187) *
                        C79306 * C79307 * C10318) *
                   C79009 * C78981) /
                      (p * q * std::sqrt(p + q));
    d2eeyz[37] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((C245 * C96 + C79307 * C246) * C26551 +
               (C245 * C167 + C79307 * C447) * C26495 +
               (C245 * C749 + C79307 * C973) * C26552 +
               (C245 * C859 + C79307 * C1279) * C26496) *
                  C79306 * C79027 * C79009 * C87 -
              (C1299 * C26496 + C1006 * C26552 + C466 * C26495 +
               C275 * C26551) *
                  C79306 * C79027 * C79009 * C88 +
              (C278 * C26551 + C467 * C26495 + C1009 * C26552 +
               C1301 * C26496) *
                  C79306 * C79027 * C79009 * C89 -
              (C2973 * C26496 + C2762 * C26552 + C468 * C26495 +
               C279 * C26551) *
                  C79306 * C79027 * C79009 * C90 +
              (C282 * C26551 + C469 * C26495 +
               (C245 * C2609 + C79307 * C2754) * C26552 +
               (C245 * C2680 + C79307 * C2968) * C26496) *
                  C79306 * C79027 * C79009 * C91) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C245 * C96 + C79307 * C246) * C26551 +
                (C245 * C167 + C79307 * C447) * C26495 + C27140 * C26552 +
                C27422 * C26496) *
                   C79306 * C79027 * C79300 -
               (C27423 * C26496 + C27143 * C26552 + C27422 * C26495 +
                C27140 * C26551) *
                   C79306 * C79027 * C79285 +
               (C27143 * C26551 + C27423 * C26495 +
                (C245 * C5568 + C79307 * C5676) * C26552 +
                (C245 * C5626 + C79307 * C5822) * C26496) *
                   C79306 * C79027 * C79259) *
                  C745 +
              ((C1006 * C26551 + C1299 * C26495 + C1007 * C26552 +
                C1300 * C26496) *
                   C79306 * C79027 * C79285 -
               (C1299 * C26496 + C1006 * C26552 + C466 * C26495 +
                C275 * C26551) *
                   C79306 * C79027 * C79300 -
               (C7165 * C26496 + C6954 * C26552 + C1300 * C26495 +
                C1007 * C26551) *
                   C79306 * C79027 * C79259) *
                  C746 +
              ((C278 * C26551 + C467 * C26495 + C1009 * C26552 +
                C1301 * C26496) *
                   C79306 * C79027 * C79300 -
               (C1302 * C26496 + C1012 * C26552 + C1301 * C26495 +
                C1009 * C26551) *
                   C79306 * C79027 * C79285 +
               (C1012 * C26551 + C1302 * C26495 +
                (C245 * C6801 + C79307 * C6946) * C26552 +
                (C245 * C6872 + C79307 * C7160) * C26496) *
                   C79306 * C79027 * C79259) *
                  C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C245 * C96 + C79307 * C246) * C26551 +
            (C245 * C167 + C79307 * C447) * C26495 + C27140 * C26552 +
            C27422 * C26496) *
               C79306 * C79301 -
           ((C245 * C4047 + C79307 * C4501) * C26496 +
            (C245 * C3931 + C79307 * C4165) * C26552 +
            (C245 * C1792 + C79307 * C2212) * C26495 +
            (C245 * C1682 + C79307 * C1906) * C26551) *
               C79306 * C79287 +
           ((C245 * C1683 + C79307 * C1907) * C26551 +
            (C245 * C1793 + C79307 * C2213) * C26495 +
            (C245 * C6042 + C79307 * C6226) * C26552 +
            (C245 * C6140 + C79307 * C6478) * C26496) *
               C79306 * C79262) *
              C79009 * C745 +
          ((C1939 * C26551 + C2232 * C26495 + C4182 * C26552 + C4512 * C26496) *
               C79306 * C79287 -
           (C1299 * C26496 + C1006 * C26552 + C466 * C26495 + C275 * C26551) *
               C79306 * C79301 -
           (C11341 * C26496 + C11034 * C26552 + C2233 * C26495 +
            C1940 * C26551) *
               C79306 * C79262) *
              C79009 * C746 +
          ((C278 * C26551 + C467 * C26495 + C1009 * C26552 + C1301 * C26496) *
               C79306 * C79301 -
           (C4513 * C26496 + C4185 * C26552 + C2234 * C26495 + C1942 * C26551) *
               C79306 * C79287 +
           (C1945 * C26551 + C2235 * C26495 +
            (C245 * C10817 + C79307 * C11026) * C26552 +
            (C245 * C10920 + C79307 * C11336) * C26496) *
               C79306 * C79262) *
              C79009 * C79253)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C245 * C96 + C79307 * C246) * C26551 +
            (C245 * C167 + C79307 * C447) * C26495 + C27140 * C26552 +
            C27422 * C26496) *
               C79306 * C79027 * C4921 -
           (C27423 * C26496 + C27143 * C26552 + C27422 * C26495 +
            C27140 * C26551) *
               C79306 * C79027 * C4922 +
           (C27143 * C26551 + C27423 * C26495 +
            (C245 * C5568 + C79307 * C5676) * C26552 +
            (C245 * C5626 + C79307 * C5822) * C26496) *
               C79306 * C79027 * C79259) *
              C79297 +
          ((C1006 * C26551 + C1299 * C26495 + C1007 * C26552 + C1300 * C26496) *
               C79306 * C79027 * C4922 -
           (C1299 * C26496 + C1006 * C26552 + C466 * C26495 + C275 * C26551) *
               C79306 * C79027 * C4921 -
           (C7165 * C26496 + C6954 * C26552 + C1300 * C26495 + C1007 * C26551) *
               C79306 * C79027 * C79259) *
              C79281 +
          ((C278 * C26551 + C467 * C26495 + C1009 * C26552 + C1301 * C26496) *
               C79306 * C79027 * C4921 -
           (C1302 * C26496 + C1012 * C26552 + C1301 * C26495 + C1009 * C26551) *
               C79306 * C79027 * C4922 +
           (C1012 * C26551 + C1302 * C26495 +
            (C245 * C6801 + C79307 * C6946) * C26552 +
            (C245 * C6872 + C79307 * C7160) * C26496) *
               C79306 * C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C245 * C96 + C79307 * C246) * C26551 +
           (C245 * C167 + C79307 * C447) * C26495 + C27140 * C26552 +
           C27422 * C26496) *
              C79306 * C79027 * C5561 -
          (C27423 * C26496 + C27143 * C26552 + C27422 * C26495 +
           C27140 * C26551) *
              C79306 * C79027 * C5562 +
          (C27143 * C26551 + C27423 * C26495 + C31373 * C26552 +
           C31530 * C26496) *
              C79306 * C79027 * C5563 -
          (C31531 * C26496 + C31376 * C26552 + C31530 * C26495 +
           C31373 * C26551) *
              C79306 * C79027 * C5564 +
          (C31376 * C26551 + C31531 * C26495 +
           (C245 * C31259 + C79307 * C31362) * C26552 +
           (C245 * C31318 + C79307 * C31524) * C26496) *
              C79306 * C79027 * C5565) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C245 * C96 + C79307 * C246) * C26551 +
            (C245 * C167 + C79307 * C447) * C26495 + C27140 * C26552 +
            C27422 * C26496) *
               C79306 * C79301 -
           (C30237 * C26496 + C29914 * C26552 +
            (C245 * C1792 + C79307 * C2212) * C26495 +
            (C245 * C1682 + C79307 * C1906) * C26551) *
               C79306 * C79287 +
           ((C245 * C1683 + C79307 * C1907) * C26551 +
            (C245 * C1793 + C79307 * C2213) * C26495 + C31944 * C26552 +
            C32211 * C26496) *
               C79306 * C79262) *
              C4921 +
          ((C29914 * C26551 + C30237 * C26495 + C31946 * C26552 +
            C32212 * C26496) *
               C79306 * C79287 -
           (C27423 * C26496 + C27143 * C26552 + C27422 * C26495 +
            C27140 * C26551) *
               C79306 * C79301 -
           (C32213 * C26496 + C31949 * C26552 + C32211 * C26495 +
            C31944 * C26551) *
               C79306 * C79262) *
              C4922 +
          ((C27143 * C26551 + C27423 * C26495 + C31373 * C26552 +
            C31530 * C26496) *
               C79306 * C79301 -
           ((C245 * C8451 + C79307 * C8729) * C26496 +
            (C245 * C8377 + C79307 * C8521) * C26552 + C32212 * C26495 +
            C31946 * C26551) *
               C79306 * C79287 +
           (C31949 * C26551 + C32213 * C26495 +
            (C245 * C31755 + C79307 * C31929) * C26552 +
            (C245 * C31853 + C79307 * C32203) * C26496) *
               C79306 * C79262) *
              C79259) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C245 * C96 + C79307 * C246) * C26551 +
            (C245 * C167 + C79307 * C447) * C26495 + C27140 * C26552 +
            C27422 * C26496) *
               C79306 * C9011 -
           (C30237 * C26496 + C29914 * C26552 +
            (C245 * C1792 + C79307 * C2212) * C26495 +
            (C245 * C1682 + C79307 * C1906) * C26551) *
               C79306 * C9012 +
           ((C245 * C1683 + C79307 * C1907) * C26551 +
            (C245 * C1793 + C79307 * C2213) * C26495 + C31944 * C26552 +
            C32211 * C26496) *
               C79306 * C79262) *
              C79009 * C79297 +
          ((C1939 * C26551 + C2232 * C26495 + C4182 * C26552 + C4512 * C26496) *
               C79306 * C9012 -
           (C1299 * C26496 + C1006 * C26552 + C466 * C26495 + C275 * C26551) *
               C79306 * C9011 -
           (C11341 * C26496 + C11034 * C26552 + C2233 * C26495 +
            C1940 * C26551) *
               C79306 * C79262) *
              C79009 * C79281 +
          ((C278 * C26551 + C467 * C26495 + C1009 * C26552 + C1301 * C26496) *
               C79306 * C9011 -
           (C4513 * C26496 + C4185 * C26552 + C2234 * C26495 + C1942 * C26551) *
               C79306 * C9012 +
           (C1945 * C26551 + C2235 * C26495 +
            (C245 * C10817 + C79307 * C11026) * C26552 +
            (C245 * C10920 + C79307 * C11336) * C26496) *
               C79306 * C79262) *
              C79009 * C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C245 * C96 + C79307 * C246) * C26551 +
            (C245 * C167 + C79307 * C447) * C26495 + C27140 * C26552 +
            C27422 * C26496) *
               C79306 * C9011 -
           (C30237 * C26496 + C29914 * C26552 +
            (C245 * C1792 + C79307 * C2212) * C26495 +
            (C245 * C1682 + C79307 * C1906) * C26551) *
               C79306 * C9012 +
           ((C245 * C1683 + C79307 * C1907) * C26551 +
            (C245 * C1793 + C79307 * C2213) * C26495 + C31944 * C26552 +
            C32211 * C26496) *
               C79306 * C79262) *
              C79300 +
          ((C29914 * C26551 + C30237 * C26495 + C31946 * C26552 +
            C32212 * C26496) *
               C79306 * C9012 -
           (C27423 * C26496 + C27143 * C26552 + C27422 * C26495 +
            C27140 * C26551) *
               C79306 * C9011 -
           (C32213 * C26496 + C31949 * C26552 + C32211 * C26495 +
            C31944 * C26551) *
               C79306 * C79262) *
              C79285 +
          ((C27143 * C26551 + C27423 * C26495 + C31373 * C26552 +
            C31530 * C26496) *
               C79306 * C9011 -
           (C34421 * C26496 + C34207 * C26552 + C32212 * C26495 +
            C31946 * C26551) *
               C79306 * C9012 +
           (C31949 * C26551 + C32213 * C26495 +
            (C245 * C31755 + C79307 * C31929) * C26552 +
            (C245 * C31853 + C79307 * C32203) * C26496) *
               C79306 * C79262) *
              C79259) *
         C78981) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C245 * C96 + C79307 * C246) * C26551 +
           (C245 * C167 + C79307 * C447) * C26495 + C27140 * C26552 +
           C27422 * C26496) *
              C79306 * C10314 -
          (C30237 * C26496 + C29914 * C26552 +
           (C245 * C1792 + C79307 * C2212) * C26495 +
           (C245 * C1682 + C79307 * C1906) * C26551) *
              C79306 * C10315 +
          ((C245 * C1683 + C79307 * C1907) * C26551 +
           (C245 * C1793 + C79307 * C2213) * C26495 + C31944 * C26552 +
           C32211 * C26496) *
              C79306 * C10316 -
          ((C245 * C12439 + C79307 * C12717) * C26496 +
           (C245 * C12365 + C79307 * C12509) * C26552 +
           (C245 * C10378 + C79307 * C10574) * C26495 +
           (C245 * C10320 + C79307 * C10428) * C26551) *
              C79306 * C10317 +
          ((C245 * C10321 + C79307 * C10429) * C26551 +
           (C245 * C10379 + C79307 * C10575) * C26495 +
           (C245 * C36007 + C79307 * C36100) * C26552 +
           (C245 * C36056 + C79307 * C36234) * C26496) *
              C79306 * C10318) *
         C79009 * C78981) /
            (p * q * std::sqrt(p + q));
    d2eezx[37] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C26498 * C96 + C79306 * C102) * C245 +
                (C26498 * C246 + C79306 * C515) * C79307) *
                   C26495 +
               ((C26498 * C749 + C79306 * C757) * C245 +
                (C26498 * C973 + C79306 * C1381) * C79307) *
                   C26496) *
                  C79027 * C79009 * C87 -
              (((C26498 * C972 + C79306 * C1380) * C79307 +
                (C26498 * C748 + C79306 * C756) * C245) *
                   C26496 +
               ((C26498 * C247 + C79306 * C516) * C79307 +
                (C26498 * C97 + C79306 * C103) * C245) *
                   C26495) *
                  C79027 * C79009 * C88 +
              (((C26498 * C98 + C79306 * C104) * C245 +
                (C26498 * C248 + C79306 * C517) * C79307) *
                   C26495 +
               ((C26498 * C752 + C79306 * C760) * C245 +
                (C26498 * C976 + C79306 * C1384) * C79307) *
                   C26496) *
                  C79027 * C79009 * C89 -
              (((C26498 * C978 + C79306 * C1386) * C79307 +
                (C26498 * C754 + C79306 * C762) * C245) *
                   C26496 +
               ((C26498 * C249 + C79306 * C518) * C79307 +
                (C26498 * C99 + C79306 * C105) * C245) *
                   C26495) *
                  C79027 * C79009 * C90 +
              (((C26498 * C100 + C79306 * C106) * C245 +
                (C26498 * C250 + C79306 * C519) * C79307) *
                   C26495 +
               ((C26498 * C2609 + C79306 * C2610) * C245 +
                (C26498 * C2754 + C79306 * C3040) * C79307) *
                   C26496) *
                  C79027 * C79009 * C91) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C26498 * C96 + C79306 * C102) * C245 +
                 (C26498 * C246 + C79306 * C515) * C79307) *
                    C26495 +
                (C27498 + C27522) * C26496) *
                   C79027 * C79300 -
               ((C27523 + C27503) * C26496 + (C27522 + C27498) * C26495) *
                   C79027 * C79285 +
               ((C27503 + C27523) * C26495 +
                ((C26498 * C5568 + C79306 * C5572) * C245 +
                 (C26498 * C5676 + C79306 * C5868) * C79307) *
                    C26496) *
                   C79027 * C79259) *
                  C745 +
              (((C27504 + C27524) * C26495 + (C27507 + C27525) * C26496) *
                   C79027 * C79285 -
               ((C27524 + C27504) * C26496 +
                ((C26498 * C247 + C79306 * C516) * C79307 +
                 (C26498 * C97 + C79306 * C103) * C245) *
                    C26495) *
                   C79027 * C79300 -
               (((C26498 * C5675 + C79306 * C5867) * C79307 +
                 (C26498 * C5567 + C79306 * C5571) * C245) *
                    C26496 +
                (C27525 + C27507) * C26495) *
                   C79027 * C79259) *
                  C746 +
              ((((C26498 * C98 + C79306 * C104) * C245 +
                 (C26498 * C248 + C79306 * C517) * C79307) *
                    C26495 +
                (C27510 + C27526) * C26496) *
                   C79027 * C79300 -
               ((C27527 + C27515) * C26496 + (C27526 + C27510) * C26495) *
                   C79027 * C79285 +
               ((C27515 + C27527) * C26495 +
                ((C26498 * C6801 + C79306 * C6802) * C245 +
                 (C26498 * C6946 + C79306 * C7232) * C79307) *
                    C26496) *
                   C79027 * C79259) *
                  C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) * (((((C26498 * C96 + C79306 * C102) * C245 +
                                 (C26498 * C246 + C79306 * C515) * C79307) *
                                    C26495 +
                                (C27498 + C27522) * C26496) *
                                   C79301 -
                               (((C26498 * C4165 + C79306 * C4613) * C79307 +
                                 (C26498 * C3931 + C79306 * C3935) * C245) *
                                    C26496 +
                                ((C26498 * C1906 + C79306 * C2314) * C79307 +
                                 (C26498 * C1682 + C79306 * C1690) * C245) *
                                    C26495) *
                                   C79287 +
                               (((C26498 * C1683 + C79306 * C1691) * C245 +
                                 (C26498 * C1907 + C79306 * C2315) * C79307) *
                                    C26495 +
                                ((C26498 * C6042 + C79306 * C6048) * C245 +
                                 (C26498 * C6226 + C79306 * C6558) * C79307) *
                                    C26496) *
                                   C79262) *
                                  C79009 * C745 +
                              ((((C26498 * C1681 + C79306 * C1689) * C245 +
                                 (C26498 * C1905 + C79306 * C2313) * C79307) *
                                    C26495 +
                                ((C26498 * C3932 + C79306 * C3936) * C245 +
                                 (C26498 * C4166 + C79306 * C4614) * C79307) *
                                    C26496) *
                                   C79287 -
                               ((C27524 + C27504) * C26496 +
                                ((C26498 * C247 + C79306 * C516) * C79307 +
                                 (C26498 * C97 + C79306 * C103) * C245) *
                                    C26495) *
                                   C79301 -
                               (((C26498 * C6225 + C79306 * C6557) * C79307 +
                                 (C26498 * C6041 + C79306 * C6047) * C245) *
                                    C26496 +
                                ((C26498 * C1908 + C79306 * C2316) * C79307 +
                                 (C26498 * C1684 + C79306 * C1692) * C245) *
                                    C26495) *
                                   C79262) *
                                  C79009 * C746 +
                              ((((C26498 * C98 + C79306 * C104) * C245 +
                                 (C26498 * C248 + C79306 * C517) * C79307) *
                                    C26495 +
                                (C27510 + C27526) * C26496) *
                                   C79301 -
                               (((C26498 * C4167 + C79306 * C4615) * C79307 +
                                 (C26498 * C3933 + C79306 * C3937) * C245) *
                                    C26496 +
                                ((C26498 * C1909 + C79306 * C2317) * C79307 +
                                 (C26498 * C1685 + C79306 * C1693) * C245) *
                                    C26495) *
                                   C79287 +
                               (((C26498 * C1686 + C79306 * C1694) * C245 +
                                 (C26498 * C1910 + C79306 * C2318) * C79307) *
                                    C26495 +
                                ((C26498 * C10817 + C79306 * C10818) * C245 +
                                 (C26498 * C11026 + C79306 * C11440) * C79307) *
                                    C26496) *
                                   C79262) *
                                  C79009 * C79253)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C26498 * C96 + C79306 * C102) * C245 +
             (C26498 * C246 + C79306 * C515) * C79307) *
                C26495 +
            (C27498 + C27522) * C26496) *
               C79027 * C4921 -
           ((C27523 + C27503) * C26496 + (C27522 + C27498) * C26495) * C79027 *
               C4922 +
           ((C27503 + C27523) * C26495 +
            ((C26498 * C5568 + C79306 * C5572) * C245 +
             (C26498 * C5676 + C79306 * C5868) * C79307) *
                C26496) *
               C79027 * C79259) *
              C79297 +
          (((C27504 + C27524) * C26495 + (C27507 + C27525) * C26496) * C79027 *
               C4922 -
           ((C27524 + C27504) * C26496 +
            ((C26498 * C247 + C79306 * C516) * C79307 +
             (C26498 * C97 + C79306 * C103) * C245) *
                C26495) *
               C79027 * C4921 -
           (((C26498 * C5675 + C79306 * C5867) * C79307 +
             (C26498 * C5567 + C79306 * C5571) * C245) *
                C26496 +
            (C27525 + C27507) * C26495) *
               C79027 * C79259) *
              C79281 +
          ((((C26498 * C98 + C79306 * C104) * C245 +
             (C26498 * C248 + C79306 * C517) * C79307) *
                C26495 +
            (C27510 + C27526) * C26496) *
               C79027 * C4921 -
           ((C27527 + C27515) * C26496 + (C27526 + C27510) * C26495) * C79027 *
               C4922 +
           ((C27515 + C27527) * C26495 +
            ((C26498 * C6801 + C79306 * C6802) * C245 +
             (C26498 * C6946 + C79306 * C7232) * C79307) *
                C26496) *
               C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C26498 * C96 + C79306 * C102) * C245 +
            (C26498 * C246 + C79306 * C515) * C79307) *
               C26495 +
           (C27498 + C27522) * C26496) *
              C79027 * C5561 -
          ((C27523 + C27503) * C26496 + (C27522 + C27498) * C26495) * C79027 *
              C5562 +
          ((C27503 + C27523) * C26495 + (C31575 + C31583) * C26496) * C79027 *
              C5563 -
          ((C31584 + C31580) * C26496 + (C31583 + C31575) * C26495) * C79027 *
              C5564 +
          ((C31580 + C31584) * C26495 +
           ((C26498 * C31259 + C79306 * C31260) * C245 +
            (C26498 * C31362 + C79306 * C31573) * C79307) *
               C26496) *
              C79027 * C5565) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C26498 * C96 + C79306 * C102) * C245 +
             (C26498 * C246 + C79306 * C515) * C79307) *
                C26495 +
            (C27498 + C27522) * C26496) *
               C79301 -
           ((C30348 + C30338) * C26496 +
            ((C26498 * C1906 + C79306 * C2314) * C79307 +
             (C26498 * C1682 + C79306 * C1690) * C245) *
                C26495) *
               C79287 +
           (((C26498 * C1683 + C79306 * C1691) * C245 +
             (C26498 * C1907 + C79306 * C2315) * C79307) *
                C26495 +
            (C32289 + C32301) * C26496) *
               C79262) *
              C4921 +
          (((C30338 + C30348) * C26495 + (C32292 + C32302) * C26496) * C79287 -
           ((C27523 + C27503) * C26496 + (C27522 + C27498) * C26495) * C79301 -
           ((C32303 + C32297) * C26496 + (C32301 + C32289) * C26495) * C79262) *
              C4922 +
          (((C27503 + C27523) * C26495 + (C31575 + C31583) * C26496) * C79301 -
           (((C26498 * C8521 + C79306 * C8797) * C79307 +
             (C26498 * C8377 + C79306 * C8379) * C245) *
                C26496 +
            (C32302 + C32292) * C26495) *
               C79287 +
           ((C32297 + C32303) * C26495 +
            ((C26498 * C31755 + C79306 * C31756) * C245 +
             (C26498 * C31929 + C79306 * C32287) * C79307) *
                C26496) *
               C79262) *
              C79259) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) * (((((C26498 * C96 + C79306 * C102) * C245 +
                                 (C26498 * C246 + C79306 * C515) * C79307) *
                                    C26495 +
                                (C27498 + C27522) * C26496) *
                                   C9011 -
                               ((C30348 + C30338) * C26496 +
                                ((C26498 * C1906 + C79306 * C2314) * C79307 +
                                 (C26498 * C1682 + C79306 * C1690) * C245) *
                                    C26495) *
                                   C9012 +
                               (((C26498 * C1683 + C79306 * C1691) * C245 +
                                 (C26498 * C1907 + C79306 * C2315) * C79307) *
                                    C26495 +
                                (C32289 + C32301) * C26496) *
                                   C79262) *
                                  C79009 * C79297 +
                              ((((C26498 * C1681 + C79306 * C1689) * C245 +
                                 (C26498 * C1905 + C79306 * C2313) * C79307) *
                                    C26495 +
                                (C30339 + C30349) * C26496) *
                                   C9012 -
                               ((C27524 + C27504) * C26496 +
                                ((C26498 * C247 + C79306 * C516) * C79307 +
                                 (C26498 * C97 + C79306 * C103) * C245) *
                                    C26495) *
                                   C9011 -
                               (((C26498 * C6225 + C79306 * C6557) * C79307 +
                                 (C26498 * C6041 + C79306 * C6047) * C245) *
                                    C26496 +
                                ((C26498 * C1908 + C79306 * C2316) * C79307 +
                                 (C26498 * C1684 + C79306 * C1692) * C245) *
                                    C26495) *
                                   C79262) *
                                  C79009 * C79281 +
                              ((((C26498 * C98 + C79306 * C104) * C245 +
                                 (C26498 * C248 + C79306 * C517) * C79307) *
                                    C26495 +
                                (C27510 + C27526) * C26496) *
                                   C9011 -
                               ((C30350 + C30344) * C26496 +
                                ((C26498 * C1909 + C79306 * C2317) * C79307 +
                                 (C26498 * C1685 + C79306 * C1693) * C245) *
                                    C26495) *
                                   C9012 +
                               (((C26498 * C1686 + C79306 * C1694) * C245 +
                                 (C26498 * C1910 + C79306 * C2318) * C79307) *
                                    C26495 +
                                ((C26498 * C10817 + C79306 * C10818) * C245 +
                                 (C26498 * C11026 + C79306 * C11440) * C79307) *
                                    C26496) *
                                   C79262) *
                                  C79009 * C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C26498 * C96 + C79306 * C102) * C245 +
             (C26498 * C246 + C79306 * C515) * C79307) *
                C26495 +
            (C27498 + C27522) * C26496) *
               C9011 -
           ((C30348 + C30338) * C26496 +
            ((C26498 * C1906 + C79306 * C2314) * C79307 +
             (C26498 * C1682 + C79306 * C1690) * C245) *
                C26495) *
               C9012 +
           (((C26498 * C1683 + C79306 * C1691) * C245 +
             (C26498 * C1907 + C79306 * C2315) * C79307) *
                C26495 +
            (C32289 + C32301) * C26496) *
               C79262) *
              C79300 +
          (((C30338 + C30348) * C26495 + (C32292 + C32302) * C26496) * C9012 -
           ((C27523 + C27503) * C26496 + (C27522 + C27498) * C26495) * C9011 -
           ((C32303 + C32297) * C26496 + (C32301 + C32289) * C26495) * C79262) *
              C79285 +
          (((C27503 + C27523) * C26495 + (C31575 + C31583) * C26496) * C9011 -
           ((C34493 + C34491) * C26496 + (C32302 + C32292) * C26495) * C9012 +
           ((C32297 + C32303) * C26495 +
            ((C26498 * C31755 + C79306 * C31756) * C245 +
             (C26498 * C31929 + C79306 * C32287) * C79307) *
                C26496) *
               C79262) *
              C79259) *
         C78981) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C26498 * C96 + C79306 * C102) * C245 +
            (C26498 * C246 + C79306 * C515) * C79307) *
               C26495 +
           (C27498 + C27522) * C26496) *
              C10314 -
          ((C30348 + C30338) * C26496 +
           ((C26498 * C1906 + C79306 * C2314) * C79307 +
            (C26498 * C1682 + C79306 * C1690) * C245) *
               C26495) *
              C10315 +
          (((C26498 * C1683 + C79306 * C1691) * C245 +
            (C26498 * C1907 + C79306 * C2315) * C79307) *
               C26495 +
           (C32289 + C32301) * C26496) *
              C10316 -
          (((C26498 * C12509 + C79306 * C12785) * C79307 +
            (C26498 * C12365 + C79306 * C12367) * C245) *
               C26496 +
           ((C26498 * C10428 + C79306 * C10620) * C79307 +
            (C26498 * C10320 + C79306 * C10324) * C245) *
               C26495) *
              C10317 +
          (((C26498 * C10321 + C79306 * C10325) * C245 +
            (C26498 * C10429 + C79306 * C10621) * C79307) *
               C26495 +
           ((C26498 * C36007 + C79306 * C36008) * C245 +
            (C26498 * C36100 + C79306 * C36277) * C79307) *
               C26496) *
              C10318) *
         C79009 * C78981) /
            (p * q * std::sqrt(p + q));
    d2eezy[37] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
                   C245 +
               (C26551 * C246 + C26495 * C563 + C26552 * C973 +
                C26496 * C1463) *
                   C79307) *
                  C79306 * C79027 * C79009 * C87 -
              ((C26552 * C972 + C26496 * C1462 + C26551 * C247 +
                C26495 * C564) *
                   C79307 +
               (C26552 * C748 + C26496 * C858 + C26551 * C97 + C26495 * C168) *
                   C245) *
                  C79306 * C79027 * C79009 * C88 +
              ((C26551 * C98 + C26495 * C169 + C26552 * C752 + C26496 * C862) *
                   C245 +
               (C26551 * C248 + C26495 * C565 + C26552 * C976 +
                C26496 * C1466) *
                   C79307) *
                  C79306 * C79027 * C79009 * C89 -
              ((C26552 * C978 + C26496 * C1468 + C26551 * C249 +
                C26495 * C566) *
                   C79307 +
               (C26552 * C754 + C26496 * C864 + C26551 * C99 + C26495 * C170) *
                   C245) *
                  C79306 * C79027 * C79009 * C90 +
              ((C26551 * C100 + C26495 * C171 + C26552 * C2609 +
                C26496 * C2680) *
                   C245 +
               (C26551 * C250 + C26495 * C567 + C26552 * C2754 +
                C26496 * C3107) *
                   C79307) *
                  C79306 * C79027 * C79009 * C91) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
                    C245 +
                (C26551 * C246 + C26495 * C563 + C26552 * C973 +
                 C26496 * C1463) *
                    C79307) *
                   C79306 * C79027 * C79300 -
               ((C26552 * C974 + C26496 * C1464 + C26551 * C973 +
                 C26495 * C1463) *
                    C79307 +
                (C26552 * C750 + C26496 * C860 + C26551 * C749 +
                 C26495 * C859) *
                    C245) *
                   C79306 * C79027 * C79285 +
               ((C26551 * C750 + C26495 * C860 + C26552 * C5568 +
                 C26496 * C5626) *
                    C245 +
                (C26551 * C974 + C26495 * C1464 + C26552 * C5676 +
                 C26496 * C5914) *
                    C79307) *
                   C79306 * C79027 * C79259) *
                  C745 +
              (((C26551 * C748 + C26495 * C858 + C26552 * C751 +
                 C26496 * C861) *
                    C245 +
                (C26551 * C972 + C26495 * C1462 + C26552 * C975 +
                 C26496 * C1465) *
                    C79307) *
                   C79306 * C79027 * C79285 -
               ((C26552 * C972 + C26496 * C1462 + C26551 * C247 +
                 C26495 * C564) *
                    C79307 +
                (C26552 * C748 + C26496 * C858 + C26551 * C97 + C26495 * C168) *
                    C245) *
                   C79306 * C79027 * C79300 -
               ((C26552 * C5675 + C26496 * C5913 + C26551 * C975 +
                 C26495 * C1465) *
                    C79307 +
                (C26552 * C5567 + C26496 * C5625 + C26551 * C751 +
                 C26495 * C861) *
                    C245) *
                   C79306 * C79027 * C79259) *
                  C746 +
              (((C26551 * C98 + C26495 * C169 + C26552 * C752 + C26496 * C862) *
                    C245 +
                (C26551 * C248 + C26495 * C565 + C26552 * C976 +
                 C26496 * C1466) *
                    C79307) *
                   C79306 * C79027 * C79300 -
               ((C26552 * C977 + C26496 * C1467 + C26551 * C976 +
                 C26495 * C1466) *
                    C79307 +
                (C26552 * C753 + C26496 * C863 + C26551 * C752 +
                 C26495 * C862) *
                    C245) *
                   C79306 * C79027 * C79285 +
               ((C26551 * C753 + C26495 * C863 + C26552 * C6801 +
                 C26496 * C6872) *
                    C245 +
                (C26551 * C977 + C26495 * C1467 + C26552 * C6946 +
                 C26496 * C7299) *
                    C79307) *
                   C79306 * C79027 * C79259) *
                  C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
                C245 +
            (C26551 * C246 + C26495 * C563 + C26552 * C973 + C26496 * C1463) *
                C79307) *
               C79306 * C79301 -
           ((C26552 * C4165 + C26496 * C4715 + C26551 * C1906 +
             C26495 * C2396) *
                C79307 +
            (C26552 * C3931 + C26496 * C4047 + C26551 * C1682 +
             C26495 * C1792) *
                C245) *
               C79306 * C79287 +
           ((C26551 * C1683 + C26495 * C1793 + C26552 * C6042 +
             C26496 * C6140) *
                C245 +
            (C26551 * C1907 + C26495 * C2397 + C26552 * C6226 +
             C26496 * C6638) *
                C79307) *
               C79306 * C79262) *
              C79009 * C745 +
          (((C26551 * C1681 + C26495 * C1791 + C26552 * C3932 +
             C26496 * C4048) *
                C245 +
            (C26551 * C1905 + C26495 * C2395 + C26552 * C4166 +
             C26496 * C4716) *
                C79307) *
               C79306 * C79287 -
           ((C26552 * C972 + C26496 * C1462 + C26551 * C247 + C26495 * C564) *
                C79307 +
            (C26552 * C748 + C26496 * C858 + C26551 * C97 + C26495 * C168) *
                C245) *
               C79306 * C79301 -
           ((C26552 * C6225 + C26496 * C6637 + C26551 * C1908 +
             C26495 * C2398) *
                C79307 +
            (C26552 * C6041 + C26496 * C6139 + C26551 * C1684 +
             C26495 * C1794) *
                C245) *
               C79306 * C79262) *
              C79009 * C746 +
          (((C26551 * C98 + C26495 * C169 + C26552 * C752 + C26496 * C862) *
                C245 +
            (C26551 * C248 + C26495 * C565 + C26552 * C976 + C26496 * C1466) *
                C79307) *
               C79306 * C79301 -
           ((C26552 * C4167 + C26496 * C4717 + C26551 * C1909 +
             C26495 * C2399) *
                C79307 +
            (C26552 * C3933 + C26496 * C4049 + C26551 * C1685 +
             C26495 * C1795) *
                C245) *
               C79306 * C79287 +
           ((C26551 * C1686 + C26495 * C1796 + C26552 * C10817 +
             C26496 * C10920) *
                C245 +
            (C26551 * C1910 + C26495 * C2400 + C26552 * C11026 +
             C26496 * C11539) *
                C79307) *
               C79306 * C79262) *
              C79009 * C79253)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
                C245 +
            (C26551 * C246 + C26495 * C563 + C26552 * C973 + C26496 * C1463) *
                C79307) *
               C79306 * C79027 * C4921 -
           ((C26552 * C974 + C26496 * C1464 + C26551 * C973 + C26495 * C1463) *
                C79307 +
            (C26552 * C750 + C26496 * C860 + C26551 * C749 + C26495 * C859) *
                C245) *
               C79306 * C79027 * C4922 +
           ((C26551 * C750 + C26495 * C860 + C26552 * C5568 + C26496 * C5626) *
                C245 +
            (C26551 * C974 + C26495 * C1464 + C26552 * C5676 + C26496 * C5914) *
                C79307) *
               C79306 * C79027 * C79259) *
              C79297 +
          (((C26551 * C748 + C26495 * C858 + C26552 * C751 + C26496 * C861) *
                C245 +
            (C26551 * C972 + C26495 * C1462 + C26552 * C975 + C26496 * C1465) *
                C79307) *
               C79306 * C79027 * C4922 -
           ((C26552 * C972 + C26496 * C1462 + C26551 * C247 + C26495 * C564) *
                C79307 +
            (C26552 * C748 + C26496 * C858 + C26551 * C97 + C26495 * C168) *
                C245) *
               C79306 * C79027 * C4921 -
           ((C26552 * C5675 + C26496 * C5913 + C26551 * C975 + C26495 * C1465) *
                C79307 +
            (C26552 * C5567 + C26496 * C5625 + C26551 * C751 + C26495 * C861) *
                C245) *
               C79306 * C79027 * C79259) *
              C79281 +
          (((C26551 * C98 + C26495 * C169 + C26552 * C752 + C26496 * C862) *
                C245 +
            (C26551 * C248 + C26495 * C565 + C26552 * C976 + C26496 * C1466) *
                C79307) *
               C79306 * C79027 * C4921 -
           ((C26552 * C977 + C26496 * C1467 + C26551 * C976 + C26495 * C1466) *
                C79307 +
            (C26552 * C753 + C26496 * C863 + C26551 * C752 + C26495 * C862) *
                C245) *
               C79306 * C79027 * C4922 +
           ((C26551 * C753 + C26495 * C863 + C26552 * C6801 + C26496 * C6872) *
                C245 +
            (C26551 * C977 + C26495 * C1467 + C26552 * C6946 + C26496 * C7299) *
                C79307) *
               C79306 * C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
               C245 +
           (C26551 * C246 + C26495 * C563 + C26552 * C973 + C26496 * C1463) *
               C79307) *
              C79306 * C79027 * C5561 -
          ((C26552 * C974 + C26496 * C1464 + C26551 * C973 + C26495 * C1463) *
               C79307 +
           (C26552 * C750 + C26496 * C860 + C26551 * C749 + C26495 * C859) *
               C245) *
              C79306 * C79027 * C5562 +
          ((C26551 * C750 + C26495 * C860 + C26552 * C5568 + C26496 * C5626) *
               C245 +
           (C26551 * C974 + C26495 * C1464 + C26552 * C5676 + C26496 * C5914) *
               C79307) *
              C79306 * C79027 * C5563 -
          ((C26552 * C5677 + C26496 * C5915 + C26551 * C5676 + C26495 * C5914) *
               C79307 +
           (C26552 * C5569 + C26496 * C5627 + C26551 * C5568 + C26495 * C5626) *
               C245) *
              C79306 * C79027 * C5564 +
          ((C26551 * C5569 + C26495 * C5627 + C26552 * C31259 +
            C26496 * C31318) *
               C245 +
           (C26551 * C5677 + C26495 * C5915 + C26552 * C31362 +
            C26496 * C31626) *
               C79307) *
              C79306 * C79027 * C5565) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
                C245 +
            (C26551 * C246 + C26495 * C563 + C26552 * C973 + C26496 * C1463) *
                C79307) *
               C79306 * C79301 -
           ((C26552 * C4165 + C26496 * C4715 + C26551 * C1906 +
             C26495 * C2396) *
                C79307 +
            (C26552 * C3931 + C26496 * C4047 + C26551 * C1682 +
             C26495 * C1792) *
                C245) *
               C79306 * C79287 +
           ((C26551 * C1683 + C26495 * C1793 + C26552 * C6042 +
             C26496 * C6140) *
                C245 +
            (C26551 * C1907 + C26495 * C2397 + C26552 * C6226 +
             C26496 * C6638) *
                C79307) *
               C79306 * C79262) *
              C4921 +
          (((C26551 * C3931 + C26495 * C4047 + C26552 * C6044 +
             C26496 * C6142) *
                C245 +
            (C26551 * C4165 + C26495 * C4715 + C26552 * C6228 +
             C26496 * C6640) *
                C79307) *
               C79306 * C79287 -
           ((C26552 * C974 + C26496 * C1464 + C26551 * C973 + C26495 * C1463) *
                C79307 +
            (C26552 * C750 + C26496 * C860 + C26551 * C749 + C26495 * C859) *
                C245) *
               C79306 * C79301 -
           ((C26552 * C6229 + C26496 * C6641 + C26551 * C6226 +
             C26495 * C6638) *
                C79307 +
            (C26552 * C6045 + C26496 * C6143 + C26551 * C6042 +
             C26495 * C6140) *
                C245) *
               C79306 * C79262) *
              C4922 +
          (((C26551 * C750 + C26495 * C860 + C26552 * C5568 + C26496 * C5626) *
                C245 +
            (C26551 * C974 + C26495 * C1464 + C26552 * C5676 + C26496 * C5914) *
                C79307) *
               C79306 * C79301 -
           ((C26552 * C8521 + C26496 * C8865 + C26551 * C6228 +
             C26495 * C6640) *
                C79307 +
            (C26552 * C8377 + C26496 * C8451 + C26551 * C6044 +
             C26495 * C6142) *
                C245) *
               C79306 * C79287 +
           ((C26551 * C6045 + C26495 * C6143 + C26552 * C31755 +
             C26496 * C31853) *
                C245 +
            (C26551 * C6229 + C26495 * C6641 + C26552 * C31929 +
             C26496 * C32377) *
                C79307) *
               C79306 * C79262) *
              C79259) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
                C245 +
            (C26551 * C246 + C26495 * C563 + C26552 * C973 + C26496 * C1463) *
                C79307) *
               C79306 * C9011 -
           ((C26552 * C4165 + C26496 * C4715 + C26551 * C1906 +
             C26495 * C2396) *
                C79307 +
            (C26552 * C3931 + C26496 * C4047 + C26551 * C1682 +
             C26495 * C1792) *
                C245) *
               C79306 * C9012 +
           ((C26551 * C1683 + C26495 * C1793 + C26552 * C6042 +
             C26496 * C6140) *
                C245 +
            (C26551 * C1907 + C26495 * C2397 + C26552 * C6226 +
             C26496 * C6638) *
                C79307) *
               C79306 * C79262) *
              C79009 * C79297 +
          (((C26551 * C1681 + C26495 * C1791 + C26552 * C3932 +
             C26496 * C4048) *
                C245 +
            (C26551 * C1905 + C26495 * C2395 + C26552 * C4166 +
             C26496 * C4716) *
                C79307) *
               C79306 * C9012 -
           ((C26552 * C972 + C26496 * C1462 + C26551 * C247 + C26495 * C564) *
                C79307 +
            (C26552 * C748 + C26496 * C858 + C26551 * C97 + C26495 * C168) *
                C245) *
               C79306 * C9011 -
           ((C26552 * C6225 + C26496 * C6637 + C26551 * C1908 +
             C26495 * C2398) *
                C79307 +
            (C26552 * C6041 + C26496 * C6139 + C26551 * C1684 +
             C26495 * C1794) *
                C245) *
               C79306 * C79262) *
              C79009 * C79281 +
          (((C26551 * C98 + C26495 * C169 + C26552 * C752 + C26496 * C862) *
                C245 +
            (C26551 * C248 + C26495 * C565 + C26552 * C976 + C26496 * C1466) *
                C79307) *
               C79306 * C9011 -
           ((C26552 * C4167 + C26496 * C4717 + C26551 * C1909 +
             C26495 * C2399) *
                C79307 +
            (C26552 * C3933 + C26496 * C4049 + C26551 * C1685 +
             C26495 * C1795) *
                C245) *
               C79306 * C9012 +
           ((C26551 * C1686 + C26495 * C1796 + C26552 * C10817 +
             C26496 * C10920) *
                C245 +
            (C26551 * C1910 + C26495 * C2400 + C26552 * C11026 +
             C26496 * C11539) *
                C79307) *
               C79306 * C79262) *
              C79009 * C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
                C245 +
            (C26551 * C246 + C26495 * C563 + C26552 * C973 + C26496 * C1463) *
                C79307) *
               C79306 * C9011 -
           ((C26552 * C4165 + C26496 * C4715 + C26551 * C1906 +
             C26495 * C2396) *
                C79307 +
            (C26552 * C3931 + C26496 * C4047 + C26551 * C1682 +
             C26495 * C1792) *
                C245) *
               C79306 * C9012 +
           ((C26551 * C1683 + C26495 * C1793 + C26552 * C6042 +
             C26496 * C6140) *
                C245 +
            (C26551 * C1907 + C26495 * C2397 + C26552 * C6226 +
             C26496 * C6638) *
                C79307) *
               C79306 * C79262) *
              C79300 +
          (((C26551 * C3931 + C26495 * C4047 + C26552 * C6044 +
             C26496 * C6142) *
                C245 +
            (C26551 * C4165 + C26495 * C4715 + C26552 * C6228 +
             C26496 * C6640) *
                C79307) *
               C79306 * C9012 -
           ((C26552 * C974 + C26496 * C1464 + C26551 * C973 + C26495 * C1463) *
                C79307 +
            (C26552 * C750 + C26496 * C860 + C26551 * C749 + C26495 * C859) *
                C245) *
               C79306 * C9011 -
           ((C26552 * C6229 + C26496 * C6641 + C26551 * C6226 +
             C26495 * C6638) *
                C79307 +
            (C26552 * C6045 + C26496 * C6143 + C26551 * C6042 +
             C26495 * C6140) *
                C245) *
               C79306 * C79262) *
              C79285 +
          (((C26551 * C750 + C26495 * C860 + C26552 * C5568 + C26496 * C5626) *
                C245 +
            (C26551 * C974 + C26495 * C1464 + C26552 * C5676 + C26496 * C5914) *
                C79307) *
               C79306 * C9011 -
           ((C26552 * C8521 + C26496 * C8865 + C26551 * C6228 +
             C26495 * C6640) *
                C79307 +
            (C26552 * C8377 + C26496 * C8451 + C26551 * C6044 +
             C26495 * C6142) *
                C245) *
               C79306 * C9012 +
           ((C26551 * C6045 + C26495 * C6143 + C26552 * C31755 +
             C26496 * C31853) *
                C245 +
            (C26551 * C6229 + C26495 * C6641 + C26552 * C31929 +
             C26496 * C32377) *
                C79307) *
               C79306 * C79262) *
              C79259) *
         C78981) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
               C245 +
           (C26551 * C246 + C26495 * C563 + C26552 * C973 + C26496 * C1463) *
               C79307) *
              C79306 * C10314 -
          ((C26552 * C4165 + C26496 * C4715 + C26551 * C1906 + C26495 * C2396) *
               C79307 +
           (C26552 * C3931 + C26496 * C4047 + C26551 * C1682 + C26495 * C1792) *
               C245) *
              C79306 * C10315 +
          ((C26551 * C1683 + C26495 * C1793 + C26552 * C6042 + C26496 * C6140) *
               C245 +
           (C26551 * C1907 + C26495 * C2397 + C26552 * C6226 + C26496 * C6638) *
               C79307) *
              C79306 * C10316 -
          ((C26552 * C12509 + C26496 * C12853 + C26551 * C10428 +
            C26495 * C10666) *
               C79307 +
           (C26552 * C12365 + C26496 * C12439 + C26551 * C10320 +
            C26495 * C10378) *
               C245) *
              C79306 * C10317 +
          ((C26551 * C10321 + C26495 * C10379 + C26552 * C36007 +
            C26496 * C36056) *
               C245 +
           (C26551 * C10429 + C26495 * C10667 + C26552 * C36100 +
            C26496 * C36320) *
               C79307) *
              C79306 * C10318) *
         C79009 * C78981) /
            (p * q * std::sqrt(p + q));
    d2eezz[37] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((C631 * C96 + C639 + C639 + C79307 * C632) * C26495 +
               (C631 * C749 + C1576 + C1576 + C79307 * C1565) * C26496) *
                  C79306 * C79027 * C79009 * C87 -
              (C1597 * C26496 + C661 * C26495) * C79306 * C79027 * C79009 *
                  C88 +
              (C662 * C26495 + C1599 * C26496) * C79306 * C79027 * C79009 *
                  C89 -
              (C3186 * C26496 + C663 * C26495) * C79306 * C79027 * C79009 *
                  C90 +
              (C664 * C26495 +
               (C631 * C2609 + C3183 + C3183 + C79307 * C3179) * C26496) *
                  C79306 * C79027 * C79009 * C91) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C631 * C96 + C639 + C639 + C79307 * C632) * C26495 +
                C27684 * C26496) *
                   C79306 * C79027 * C79300 -
               (C27685 * C26496 + C27684 * C26495) * C79306 * C79027 * C79285 +
               (C27685 * C26495 +
                (C631 * C5568 + C5965 + C5965 + C79307 * C5960) * C26496) *
                   C79306 * C79027 * C79259) *
                  C745 +
              ((C1597 * C26495 + C1598 * C26496) * C79306 * C79027 * C79285 -
               (C1597 * C26496 + C661 * C26495) * C79306 * C79027 * C79300 -
               (C7378 * C26496 + C1598 * C26495) * C79306 * C79027 * C79259) *
                  C746 +
              ((C662 * C26495 + C1599 * C26496) * C79306 * C79027 * C79300 -
               (C1600 * C26496 + C1599 * C26495) * C79306 * C79027 * C79285 +
               (C1600 * C26495 +
                (C631 * C6801 + C7375 + C7375 + C79307 * C7371) * C26496) *
                   C79306 * C79027 * C79259) *
                  C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C631 * C96 + C639 + C639 + C79307 * C632) * C26495 +
            C27684 * C26496) *
               C79306 * C79301 -
           ((C631 * C3931 + C4832 + C4832 + C79307 * C4827) * C26496 +
            (C631 * C1682 + C2509 + C2509 + C79307 * C2498) * C26495) *
               C79306 * C79287 +
           ((C631 * C1683 + C2510 + C2510 + C79307 * C2499) * C26495 +
            (C631 * C6042 + C6725 + C6725 + C79307 * C6718) * C26496) *
               C79306 * C79262) *
              C79009 * C745 +
          ((C2530 * C26495 + C4844 * C26496) * C79306 * C79287 -
           (C1597 * C26496 + C661 * C26495) * C79306 * C79301 -
           (C11650 * C26496 + C2531 * C26495) * C79306 * C79262) *
              C79009 * C746 +
          ((C662 * C26495 + C1599 * C26496) * C79306 * C79301 -
           (C4845 * C26496 + C2532 * C26495) * C79306 * C79287 +
           (C2533 * C26495 +
            (C631 * C10817 + C11647 + C11647 + C79307 * C11643) * C26496) *
               C79306 * C79262) *
              C79009 * C79253)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C631 * C96 + C639 + C639 + C79307 * C632) * C26495 +
            C27684 * C26496) *
               C79306 * C79027 * C4921 -
           (C27685 * C26496 + C27684 * C26495) * C79306 * C79027 * C4922 +
           (C27685 * C26495 +
            (C631 * C5568 + C5965 + C5965 + C79307 * C5960) * C26496) *
               C79306 * C79027 * C79259) *
              C79297 +
          ((C1597 * C26495 + C1598 * C26496) * C79306 * C79027 * C4922 -
           (C1597 * C26496 + C661 * C26495) * C79306 * C79027 * C4921 -
           (C7378 * C26496 + C1598 * C26495) * C79306 * C79027 * C79259) *
              C79281 +
          ((C662 * C26495 + C1599 * C26496) * C79306 * C79027 * C4921 -
           (C1600 * C26496 + C1599 * C26495) * C79306 * C79027 * C4922 +
           (C1600 * C26495 +
            (C631 * C6801 + C7375 + C7375 + C79307 * C7371) * C26496) *
               C79306 * C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C631 * C96 + C639 + C639 + C79307 * C632) * C26495 +
           C27684 * C26496) *
              C79306 * C79027 * C5561 -
          (C27685 * C26496 + C27684 * C26495) * C79306 * C79027 * C5562 +
          (C27685 * C26495 + C31680 * C26496) * C79306 * C79027 * C5563 -
          (C31681 * C26496 + C31680 * C26495) * C79306 * C79027 * C5564 +
          (C31681 * C26495 +
           (C631 * C31259 + C31675 + C31675 + C79307 * C31669) * C26496) *
              C79306 * C79027 * C5565) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C631 * C96 + C639 + C639 + C79307 * C632) * C26495 +
            C27684 * C26496) *
               C79306 * C79301 -
           (C30551 * C26496 +
            (C631 * C1682 + C2509 + C2509 + C79307 * C2498) * C26495) *
               C79306 * C79287 +
           ((C631 * C1683 + C2510 + C2510 + C79307 * C2499) * C26495 +
            C32467 * C26496) *
               C79306 * C79262) *
              C4921 +
          ((C30551 * C26495 + C32468 * C26496) * C79306 * C79287 -
           (C27685 * C26496 + C27684 * C26495) * C79306 * C79301 -
           (C32469 * C26496 + C32467 * C26495) * C79306 * C79262) *
              C4922 +
          ((C27685 * C26495 + C31680 * C26496) * C79306 * C79301 -
           ((C631 * C8377 + C8936 + C8936 + C79307 * C8933) * C26496 +
            C32468 * C26495) *
               C79306 * C79287 +
           (C32469 * C26495 +
            (C631 * C31755 + C32460 + C32460 + C79307 * C32452) * C26496) *
               C79306 * C79262) *
              C79259) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C631 * C96 + C639 + C639 + C79307 * C632) * C26495 +
            C27684 * C26496) *
               C79306 * C9011 -
           (C30551 * C26496 +
            (C631 * C1682 + C2509 + C2509 + C79307 * C2498) * C26495) *
               C79306 * C9012 +
           ((C631 * C1683 + C2510 + C2510 + C79307 * C2499) * C26495 +
            C32467 * C26496) *
               C79306 * C79262) *
              C79009 * C79297 +
          ((C2530 * C26495 + C4844 * C26496) * C79306 * C9012 -
           (C1597 * C26496 + C661 * C26495) * C79306 * C9011 -
           (C11650 * C26496 + C2531 * C26495) * C79306 * C79262) *
              C79009 * C79281 +
          ((C662 * C26495 + C1599 * C26496) * C79306 * C9011 -
           (C4845 * C26496 + C2532 * C26495) * C79306 * C9012 +
           (C2533 * C26495 +
            (C631 * C10817 + C11647 + C11647 + C79307 * C11643) * C26496) *
               C79306 * C79262) *
              C79009 * C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C631 * C96 + C639 + C639 + C79307 * C632) * C26495 +
            C27684 * C26496) *
               C79306 * C9011 -
           (C30551 * C26496 +
            (C631 * C1682 + C2509 + C2509 + C79307 * C2498) * C26495) *
               C79306 * C9012 +
           ((C631 * C1683 + C2510 + C2510 + C79307 * C2499) * C26495 +
            C32467 * C26496) *
               C79306 * C79262) *
              C79300 +
          ((C30551 * C26495 + C32468 * C26496) * C79306 * C9012 -
           (C27685 * C26496 + C27684 * C26495) * C79306 * C9011 -
           (C32469 * C26496 + C32467 * C26495) * C79306 * C79262) *
              C79285 +
          ((C27685 * C26495 + C31680 * C26496) * C79306 * C9011 -
           (C34633 * C26496 + C32468 * C26495) * C79306 * C9012 +
           (C32469 * C26495 +
            (C631 * C31755 + C32460 + C32460 + C79307 * C32452) * C26496) *
               C79306 * C79262) *
              C79259) *
         C78981) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C631 * C96 + C639 + C639 + C79307 * C632) * C26495 +
           C27684 * C26496) *
              C79306 * C10314 -
          (C30551 * C26496 +
           (C631 * C1682 + C2509 + C2509 + C79307 * C2498) * C26495) *
              C79306 * C10315 +
          ((C631 * C1683 + C2510 + C2510 + C79307 * C2499) * C26495 +
           C32467 * C26496) *
              C79306 * C10316 -
          ((C631 * C12365 + C12924 + C12924 + C79307 * C12921) * C26496 +
           (C631 * C10320 + C10717 + C10717 + C79307 * C10712) * C26495) *
              C79306 * C10317 +
          ((C631 * C10321 + C10718 + C10718 + C79307 * C10713) * C26495 +
           (C631 * C36007 + C36365 + C36365 + C79307 * C36363) * C26496) *
              C79306 * C10318) *
         C79009 * C78981) /
            (p * q * std::sqrt(p + q));
    d2eexx[38] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C79307 *
                 C26495 +
             C26970 * C26496) *
                C79230 -
            (C29706 * C26496 +
             (C26497 * C1682 + C27761 + C27761 + C79306 * C1698) * C79307 *
                 C26495) *
                C79114) *
               C4921 +
           ((C29706 * C26495 + C31778 * C26496) * C79114 -
            (C26971 * C26496 + C26970 * C26495) * C79230) *
               C4922 +
           ((C26971 * C26495 + C31275 * C26496) * C79230 -
            ((C26497 * C8377 + C31766 + C31766 + C79306 * C8381) * C79307 *
                 C26496 +
             C31778 * C26495) *
                C79114) *
               C79259) *
              C79215 +
          ((((C26497 * C1681 + C27764 + C27764 + C79306 * C1697) * C79307 *
                 C26495 +
             C29707 * C26496) *
                C79114 -
            (C26972 * C26496 +
             (C26497 * C97 + C26503 + C26503 + C79306 * C109) * C79307 *
                 C26495) *
                C79230) *
               C4921 +
           ((C26972 * C26495 + C26973 * C26496) * C79230 -
            (C33190 * C26496 + C29707 * C26495) * C79114) *
               C4922 +
           ((C33190 * C26495 +
             (C26497 * C8378 + C33186 + C33186 + C79306 * C8382) * C79307 *
                 C26496) *
                C79114 -
            (C32542 * C26496 + C26973 * C26495) * C79230) *
               C79259) *
              C78992)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C79307 * C26495 +
            C26970 * C26496) *
               C79230 -
           ((C26497 * C3931 + C27760 + C27760 + C79306 * C3939) * C79307 *
                C26496 +
            (C26497 * C1682 + C27761 + C27761 + C79306 * C1698) * C79307 *
                C26495) *
               C79114) *
              C79009 * C2605 +
          (((C26497 * C1681 + C27764 + C27764 + C79306 * C1697) * C79307 *
                C26495 +
            (C26497 * C3932 + C27765 + C27765 + C79306 * C3940) * C79307 *
                C26496) *
               C79114 -
           (C26972 * C26496 + (C26497 * C97 + C26503 + C26503 + C79306 * C109) *
                                  C79307 * C26495) *
               C79230) *
              C79009 * C2606 +
          (((C26497 * C98 + C26504 + C26504 + C79306 * C110) * C79307 * C26495 +
            C26974 * C26496) *
               C79230 -
           ((C26497 * C3933 + C27768 + C27768 + C79306 * C3941) * C79307 *
                C26496 +
            (C26497 * C1685 + C27769 + C27769 + C79306 * C1701) * C79307 *
                C26495) *
               C79114) *
              C79009 * C2607 +
          (((C26497 * C1687 + C29058 + C29058 + C79306 * C1703) * C79307 *
                C26495 +
            (C26497 * C3934 + C29059 + C29059 + C79306 * C3942) * C79307 *
                C26496) *
               C79114 -
           (C28448 * C26496 + (C26497 * C99 + C26507 + C26507 + C79306 * C111) *
                                  C79307 * C26495) *
               C79230) *
              C79009 * C79263)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C79307 * C26495 +
            C26970 * C26496) *
               C11717 -
           (C29706 * C26496 +
            (C26497 * C1682 + C27761 + C27761 + C79306 * C1698) * C79307 *
                C26495) *
               C11718 +
           ((C26497 * C1683 + C27762 + C27762 + C79306 * C1699) * C79307 *
                C26495 +
            C31777 * C26496) *
               C11719 -
           ((C26497 * C12365 + C36011 + C36011 + C79306 * C12369) * C79307 *
                C26496 +
            (C26497 * C10320 + C36012 + C36012 + C79306 * C10328) * C79307 *
                C26495) *
               C79275) *
              C79009 * C79215 +
          (((C26497 * C1681 + C27764 + C27764 + C79306 * C1697) * C79307 *
                C26495 +
            C29707 * C26496) *
               C11718 -
           (C26972 * C26496 + (C26497 * C97 + C26503 + C26503 + C79306 * C109) *
                                  C79307 * C26495) *
               C11717 -
           (C36470 * C26496 +
            (C26497 * C1684 + C27767 + C27767 + C79306 * C1700) * C79307 *
                C26495) *
               C11719 +
           ((C26497 * C10319 + C37336 + C37336 + C79306 * C10327) * C79307 *
                C26495 +
            (C26497 * C12366 + C37337 + C37337 + C79306 * C12370) * C79307 *
                C26496) *
               C79275) *
              C79009 * C78992)) /
            (p * q * std::sqrt(p + q));
    d2eexy[38] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
                 C26498 +
             (C26551 * C102 + C26495 * C173 + C26552 * C757 + C26496 * C867) *
                 C79306) *
                C79307 * C79230 -
            ((C26552 * C3935 + C26496 * C4051 + C26551 * C1690 +
              C26495 * C1800) *
                 C79306 +
             (C26552 * C3931 + C26496 * C4047 + C26551 * C1682 +
              C26495 * C1792) *
                 C26498) *
                C79307 * C79114) *
               C4921 +
           (((C26551 * C3931 + C26495 * C4047 + C26552 * C6044 +
              C26496 * C6142) *
                 C26498 +
             (C26551 * C3935 + C26495 * C4051 + C26552 * C6050 +
              C26496 * C6148) *
                 C79306) *
                C79307 * C79114 -
            ((C26552 * C758 + C26496 * C868 + C26551 * C757 + C26495 * C867) *
                 C79306 +
             (C26552 * C750 + C26496 * C860 + C26551 * C749 + C26495 * C859) *
                 C26498) *
                C79307 * C79230) *
               C4922 +
           (((C26551 * C750 + C26495 * C860 + C26552 * C5568 + C26496 * C5626) *
                 C26498 +
             (C26551 * C758 + C26495 * C868 + C26552 * C5572 + C26496 * C5630) *
                 C79306) *
                C79307 * C79230 -
            ((C26552 * C8379 + C26496 * C8453 + C26551 * C6050 +
              C26495 * C6148) *
                 C79306 +
             (C26552 * C8377 + C26496 * C8451 + C26551 * C6044 +
              C26495 * C6142) *
                 C26498) *
                C79307 * C79114) *
               C79259) *
              C79215 +
          ((((C26551 * C1681 + C26495 * C1791 + C26552 * C3932 +
              C26496 * C4048) *
                 C26498 +
             (C26551 * C1689 + C26495 * C1799 + C26552 * C3936 +
              C26496 * C4052) *
                 C79306) *
                C79307 * C79114 -
            ((C26552 * C756 + C26496 * C866 + C26551 * C103 + C26495 * C174) *
                 C79306 +
             (C26552 * C748 + C26496 * C858 + C26551 * C97 + C26495 * C168) *
                 C26498) *
                C79307 * C79230) *
               C4921 +
           (((C26551 * C748 + C26495 * C858 + C26552 * C751 + C26496 * C861) *
                 C26498 +
             (C26551 * C756 + C26495 * C866 + C26552 * C759 + C26496 * C869) *
                 C79306) *
                C79307 * C79230 -
            ((C26552 * C6049 + C26496 * C6147 + C26551 * C3936 +
              C26495 * C4052) *
                 C79306 +
             (C26552 * C6043 + C26496 * C6141 + C26551 * C3932 +
              C26495 * C4048) *
                 C26498) *
                C79307 * C79114) *
               C4922 +
           (((C26551 * C6043 + C26495 * C6141 + C26552 * C8378 +
              C26496 * C8452) *
                 C26498 +
             (C26551 * C6049 + C26495 * C6147 + C26552 * C8380 +
              C26496 * C8454) *
                 C79306) *
                C79307 * C79114 -
            ((C26552 * C5571 + C26496 * C5629 + C26551 * C759 + C26495 * C869) *
                 C79306 +
             (C26552 * C5567 + C26496 * C5625 + C26551 * C751 + C26495 * C861) *
                 C26498) *
                C79307 * C79230) *
               C79259) *
              C78992)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
                C26498 +
            (C26551 * C102 + C26495 * C173 + C26552 * C757 + C26496 * C867) *
                C79306) *
               C79307 * C79230 -
           ((C26552 * C3935 + C26496 * C4051 + C26551 * C1690 +
             C26495 * C1800) *
                C79306 +
            (C26552 * C3931 + C26496 * C4047 + C26551 * C1682 +
             C26495 * C1792) *
                C26498) *
               C79307 * C79114) *
              C79009 * C2605 +
          (((C26551 * C1681 + C26495 * C1791 + C26552 * C3932 +
             C26496 * C4048) *
                C26498 +
            (C26551 * C1689 + C26495 * C1799 + C26552 * C3936 +
             C26496 * C4052) *
                C79306) *
               C79307 * C79114 -
           ((C26552 * C756 + C26496 * C866 + C26551 * C103 + C26495 * C174) *
                C79306 +
            (C26552 * C748 + C26496 * C858 + C26551 * C97 + C26495 * C168) *
                C26498) *
               C79307 * C79230) *
              C79009 * C2606 +
          (((C26551 * C98 + C26495 * C169 + C26552 * C752 + C26496 * C862) *
                C26498 +
            (C26551 * C104 + C26495 * C175 + C26552 * C760 + C26496 * C870) *
                C79306) *
               C79307 * C79230 -
           ((C26552 * C3937 + C26496 * C4053 + C26551 * C1693 +
             C26495 * C1803) *
                C79306 +
            (C26552 * C3933 + C26496 * C4049 + C26551 * C1685 +
             C26495 * C1795) *
                C26498) *
               C79307 * C79114) *
              C79009 * C2607 +
          (((C26551 * C1687 + C26495 * C1797 + C26552 * C3934 +
             C26496 * C4050) *
                C26498 +
            (C26551 * C1695 + C26495 * C1805 + C26552 * C3938 +
             C26496 * C4054) *
                C79306) *
               C79307 * C79114 -
           ((C26552 * C762 + C26496 * C872 + C26551 * C105 + C26495 * C176) *
                C79306 +
            (C26552 * C754 + C26496 * C864 + C26551 * C99 + C26495 * C170) *
                C26498) *
               C79307 * C79230) *
              C79009 * C79263)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
                C26498 +
            (C26551 * C102 + C26495 * C173 + C26552 * C757 + C26496 * C867) *
                C79306) *
               C79307 * C11717 -
           ((C26552 * C3935 + C26496 * C4051 + C26551 * C1690 +
             C26495 * C1800) *
                C79306 +
            (C26552 * C3931 + C26496 * C4047 + C26551 * C1682 +
             C26495 * C1792) *
                C26498) *
               C79307 * C11718 +
           ((C26551 * C1683 + C26495 * C1793 + C26552 * C6042 +
             C26496 * C6140) *
                C26498 +
            (C26551 * C1691 + C26495 * C1801 + C26552 * C6048 +
             C26496 * C6146) *
                C79306) *
               C79307 * C11719 -
           ((C26552 * C12367 + C26496 * C12441 + C26551 * C10324 +
             C26495 * C10382) *
                C79306 +
            (C26552 * C12365 + C26496 * C12439 + C26551 * C10320 +
             C26495 * C10378) *
                C26498) *
               C79307 * C79275) *
              C79009 * C79215 +
          (((C26551 * C1681 + C26495 * C1791 + C26552 * C3932 +
             C26496 * C4048) *
                C26498 +
            (C26551 * C1689 + C26495 * C1799 + C26552 * C3936 +
             C26496 * C4052) *
                C79306) *
               C79307 * C11718 -
           ((C26552 * C756 + C26496 * C866 + C26551 * C103 + C26495 * C174) *
                C79306 +
            (C26552 * C748 + C26496 * C858 + C26551 * C97 + C26495 * C168) *
                C26498) *
               C79307 * C11717 -
           ((C26552 * C6047 + C26496 * C6145 + C26551 * C1692 +
             C26495 * C1802) *
                C79306 +
            (C26552 * C6041 + C26496 * C6139 + C26551 * C1684 +
             C26495 * C1794) *
                C26498) *
               C79307 * C11719 +
           ((C26551 * C10319 + C26495 * C10377 + C26552 * C12366 +
             C26496 * C12440) *
                C26498 +
            (C26551 * C10323 + C26495 * C10381 + C26552 * C12368 +
             C26496 * C12442) *
                C79306) *
               C79307 * C79275) *
              C79009 * C78992)) /
            (p * q * std::sqrt(p + q));
    d2eexz[38] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C245 * C96 + C79307 * C246) * C26498 +
              (C245 * C102 + C79307 * C252) * C79306) *
                 C26495 +
             (C27144 + C27145) * C26496) *
                C79230 -
            ((C29915 + C29916) * C26496 +
             ((C245 * C1690 + C79307 * C1914) * C79306 +
              (C245 * C1682 + C79307 * C1906) * C26498) *
                 C26495) *
                C79114) *
               C4921 +
           (((C29916 + C29915) * C26495 + (C31952 + C31953) * C26496) * C79114 -
            ((C27146 + C27147) * C26496 + (C27145 + C27144) * C26495) *
                C79230) *
               C4922 +
           (((C27147 + C27146) * C26495 + (C31377 + C31378) * C26496) * C79230 -
            (((C245 * C8379 + C79307 * C8523) * C79306 +
              (C245 * C8377 + C79307 * C8521) * C26498) *
                 C26496 +
             (C31953 + C31952) * C26495) *
                C79114) *
               C79259) *
              C79215 +
          ((((C1939 * C26498 + C1938 * C79306) * C26495 +
             (C29909 + C29910) * C26496) *
                C79114 -
            ((C27133 + C27132) * C26496 +
             (C276 * C79306 + C275 * C26498) * C26495) *
                C79230) *
               C4921 +
           (((C27132 + C27133) * C26495 + (C27134 + C27135) * C26496) * C79230 -
            ((C33387 + C33388) * C26496 + (C29910 + C29909) * C26495) *
                C79114) *
               C4922 +
           (((C33388 + C33387) * C26495 +
             ((C245 * C8378 + C79307 * C8522) * C26498 +
              (C245 * C8380 + C79307 * C8524) * C79306) *
                 C26496) *
                C79114 -
            ((C32675 + C32676) * C26496 + (C27135 + C27134) * C26495) *
                C79230) *
               C79259) *
              C78992)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C245 * C96 + C79307 * C246) * C26498 +
             (C245 * C102 + C79307 * C252) * C79306) *
                C26495 +
            (C27144 + C27145) * C26496) *
               C79230 -
           (((C245 * C3935 + C79307 * C4169) * C79306 +
             (C245 * C3931 + C79307 * C4165) * C26498) *
                C26496 +
            ((C245 * C1690 + C79307 * C1914) * C79306 +
             (C245 * C1682 + C79307 * C1906) * C26498) *
                C26495) *
               C79114) *
              C79009 * C2605 +
          (((C1939 * C26498 + C1938 * C79306) * C26495 +
            (C4182 * C26498 + C4183 * C79306) * C26496) *
               C79114 -
           ((C27133 + C27132) * C26496 +
            (C276 * C79306 + C275 * C26498) * C26495) *
               C79230) *
              C79009 * C2606 +
          (((C278 * C26498 + C277 * C79306) * C26495 +
            (C27136 + C27137) * C26496) *
               C79230 -
           ((C4184 * C79306 + C4185 * C26498) * C26496 +
            (C1943 * C79306 + C1942 * C26498) * C26495) *
               C79114) *
              C79009 * C2607 +
          (((C3408 * C26498 + C3407 * C79306) * C26495 +
            ((C245 * C3934 + C79307 * C4168) * C26498 +
             (C245 * C3938 + C79307 * C4172) * C79306) *
                C26496) *
               C79114 -
           ((C28582 + C28581) * C26496 +
            (C280 * C79306 + C279 * C26498) * C26495) *
               C79230) *
              C79009 * C79263)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C245 * C96 + C79307 * C246) * C26498 +
             (C245 * C102 + C79307 * C252) * C79306) *
                C26495 +
            (C27144 + C27145) * C26496) *
               C11717 -
           ((C29915 + C29916) * C26496 +
            ((C245 * C1690 + C79307 * C1914) * C79306 +
             (C245 * C1682 + C79307 * C1906) * C26498) *
                C26495) *
               C11718 +
           (((C245 * C1683 + C79307 * C1907) * C26498 +
             (C245 * C1691 + C79307 * C1915) * C79306) *
                C26495 +
            (C31950 + C31951) * C26496) *
               C11719 -
           (((C245 * C12367 + C79307 * C12511) * C79306 +
             (C245 * C12365 + C79307 * C12509) * C26498) *
                C26496 +
            ((C245 * C10324 + C79307 * C10432) * C79306 +
             (C245 * C10320 + C79307 * C10428) * C26498) *
                C26495) *
               C79275) *
              C79009 * C79215 +
          (((C1939 * C26498 + C1938 * C79306) * C26495 +
            (C29909 + C29910) * C26496) *
               C11718 -
           ((C27133 + C27132) * C26496 +
            (C276 * C79306 + C275 * C26498) * C26495) *
               C11717 -
           ((C36667 + C36668) * C26496 +
            (C1941 * C79306 + C1940 * C26498) * C26495) *
               C11719 +
           ((C11874 * C26498 + C11873 * C79306) * C26495 +
            ((C245 * C12366 + C79307 * C12510) * C26498 +
             (C245 * C12368 + C79307 * C12512) * C79306) *
                C26496) *
               C79275) *
              C79009 * C78992)) /
            (p * q * std::sqrt(p + q));
    d2eeyx[38] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((((C26498 * C96 + C79306 * C102) * C26551 +
                       (C26498 * C167 + C79306 * C324) * C26495 +
                       C27246 * C26552 + C27247 * C26496) *
                          C79307 * C79230 -
                      (C30027 * C26496 + C30028 * C26552 +
                       (C26498 * C1792 + C79306 * C2020) * C26495 +
                       (C26498 * C1682 + C79306 * C1690) * C26551) *
                          C79307 * C79114) *
                         C4921 +
                     ((C30028 * C26551 + C30027 * C26495 + C32045 * C26552 +
                       C32046 * C26496) *
                          C79307 * C79114 -
                      (C27248 * C26496 + C27249 * C26552 + C27247 * C26495 +
                       C27246 * C26551) *
                          C79307 * C79230) *
                         C4922 +
                     ((C27249 * C26551 + C27248 * C26495 + C31432 * C26552 +
                       C31433 * C26496) *
                          C79307 * C79230 -
                      ((C26498 * C8451 + C79306 * C8591) * C26496 +
                       (C26498 * C8377 + C79306 * C8379) * C26552 +
                       C32046 * C26495 + C32045 * C26551) *
                          C79307 * C79114) *
                         C79259) *
                        C79215 +
                    ((((C26498 * C1681 + C79306 * C1689) * C26551 +
                       (C26498 * C1791 + C79306 * C2019) * C26495 +
                       C30029 * C26552 + C30030 * C26496) *
                          C79307 * C79114 -
                      (C27251 * C26496 + C27250 * C26552 +
                       (C26498 * C168 + C79306 * C325) * C26495 +
                       (C26498 * C97 + C79306 * C103) * C26551) *
                          C79307 * C79230) *
                         C4921 +
                     ((C27250 * C26551 + C27251 * C26495 + C27252 * C26552 +
                       C27253 * C26496) *
                          C79307 * C79230 -
                      (C33491 * C26496 + C33492 * C26552 + C30030 * C26495 +
                       C30029 * C26551) *
                          C79307 * C79114) *
                         C4922 +
                     ((C33492 * C26551 + C33491 * C26495 +
                       (C26498 * C8378 + C79306 * C8380) * C26552 +
                       (C26498 * C8452 + C79306 * C8592) * C26496) *
                          C79307 * C79114 -
                      (C32747 * C26496 + C32748 * C26552 + C27253 * C26495 +
                       C27252 * C26551) *
                          C79307 * C79230) *
                         C79259) *
                        C78992)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C26498 * C96 + C79306 * C102) * C26551 +
                      (C26498 * C167 + C79306 * C324) * C26495 +
                      C27246 * C26552 + C27247 * C26496) *
                         C79307 * C79230 -
                     ((C26498 * C4047 + C79306 * C4283) * C26496 +
                      (C26498 * C3931 + C79306 * C3935) * C26552 +
                      (C26498 * C1792 + C79306 * C2020) * C26495 +
                      (C26498 * C1682 + C79306 * C1690) * C26551) *
                         C79307 * C79114) *
                        C79009 * C2605 +
                    (((C26498 * C1681 + C79306 * C1689) * C26551 +
                      (C26498 * C1791 + C79306 * C2019) * C26495 +
                      (C26498 * C3932 + C79306 * C3936) * C26552 +
                      (C26498 * C4048 + C79306 * C4284) * C26496) *
                         C79307 * C79114 -
                     (C27251 * C26496 + C27250 * C26552 +
                      (C26498 * C168 + C79306 * C325) * C26495 +
                      (C26498 * C97 + C79306 * C103) * C26551) *
                         C79307 * C79230) *
                        C79009 * C2606 +
                    (((C26498 * C98 + C79306 * C104) * C26551 +
                      (C26498 * C169 + C79306 * C326) * C26495 +
                      C27254 * C26552 + C27255 * C26496) *
                         C79307 * C79230 -
                     ((C26498 * C4049 + C79306 * C4285) * C26496 +
                      (C26498 * C3933 + C79306 * C3937) * C26552 +
                      (C26498 * C1795 + C79306 * C2023) * C26495 +
                      (C26498 * C1685 + C79306 * C1693) * C26551) *
                         C79307 * C79114) *
                        C79009 * C2607 +
                    (((C26498 * C1687 + C79306 * C1695) * C26551 +
                      (C26498 * C1797 + C79306 * C2025) * C26495 +
                      (C26498 * C3934 + C79306 * C3938) * C26552 +
                      (C26498 * C4050 + C79306 * C4286) * C26496) *
                         C79307 * C79114 -
                     (C28654 * C26496 + C28653 * C26552 +
                      (C26498 * C170 + C79306 * C327) * C26495 +
                      (C26498 * C99 + C79306 * C105) * C26551) *
                         C79307 * C79230) *
                        C79009 * C79263)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C26498 * C96 + C79306 * C102) * C26551 +
                      (C26498 * C167 + C79306 * C324) * C26495 +
                      C27246 * C26552 + C27247 * C26496) *
                         C79307 * C11717 -
                     (C30027 * C26496 + C30028 * C26552 +
                      (C26498 * C1792 + C79306 * C2020) * C26495 +
                      (C26498 * C1682 + C79306 * C1690) * C26551) *
                         C79307 * C11718 +
                     ((C26498 * C1683 + C79306 * C1691) * C26551 +
                      (C26498 * C1793 + C79306 * C2021) * C26495 +
                      C32043 * C26552 + C32044 * C26496) *
                         C79307 * C11719 -
                     ((C26498 * C12439 + C79306 * C12579) * C26496 +
                      (C26498 * C12365 + C79306 * C12367) * C26552 +
                      (C26498 * C10378 + C79306 * C10478) * C26495 +
                      (C26498 * C10320 + C79306 * C10324) * C26551) *
                         C79307 * C79275) *
                        C79009 * C79215 +
                    (((C26498 * C1681 + C79306 * C1689) * C26551 +
                      (C26498 * C1791 + C79306 * C2019) * C26495 +
                      C30029 * C26552 + C30030 * C26496) *
                         C79307 * C11718 -
                     (C27251 * C26496 + C27250 * C26552 +
                      (C26498 * C168 + C79306 * C325) * C26495 +
                      (C26498 * C97 + C79306 * C103) * C26551) *
                         C79307 * C11717 -
                     (C36771 * C26496 + C36772 * C26552 +
                      (C26498 * C1794 + C79306 * C2022) * C26495 +
                      (C26498 * C1684 + C79306 * C1692) * C26551) *
                         C79307 * C11719 +
                     ((C26498 * C10319 + C79306 * C10323) * C26551 +
                      (C26498 * C10377 + C79306 * C10477) * C26495 +
                      (C26498 * C12366 + C79306 * C12368) * C26552 +
                      (C26498 * C12440 + C79306 * C12580) * C26496) *
                         C79307 * C79275) *
                        C79009 * C78992)) /
                      (p * q * std::sqrt(p + q));
    d2eeyy[38] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C26679 * C96 + C26682 + C26682 + C26495 * C373 +
                       C26680 * C749 + C26683 + C26683 + C26496 * C1169) *
                          C79306 * C79307 * C79230 -
                      (C26680 * C3931 + C28068 + C28068 + C26496 * C4385 +
                       C26679 * C1682 + C28069 + C28069 + C26495 * C2102) *
                          C79306 * C79307 * C79114) *
                         C4921 +
                     ((C26679 * C3931 + C30131 + C30131 + C26495 * C4385 +
                       C26680 * C6044 + C30132 + C30132 + C26496 * C6394) *
                          C79306 * C79307 * C79114 -
                      (C26680 * C750 + C27332 + C27332 + C26496 * C1170 +
                       C26679 * C749 + C27333 + C27333 + C26495 * C1169) *
                          C79306 * C79307 * C79230) *
                         C4922 +
                     ((C26679 * C750 + C27334 + C27334 + C26495 * C1170 +
                       C26680 * C5568 + C27335 + C27335 + C26496 * C5772) *
                          C79306 * C79307 * C79230 -
                      (C26680 * C8377 + C32126 + C32126 + C26496 * C8659 +
                       C26679 * C6044 + C32127 + C32127 + C26495 * C6394) *
                          C79306 * C79307 * C79114) *
                         C79259) *
                        C79215 +
                    (((C26679 * C1681 + C28072 + C28072 + C26495 * C2101 +
                       C26680 * C3932 + C28073 + C28073 + C26496 * C4386) *
                          C79306 * C79307 * C79114 -
                      (C26680 * C748 + C26684 + C26684 + C26496 * C1168 +
                       C26679 * C97 + C26685 + C26685 + C26495 * C374) *
                          C79306 * C79307 * C79230) *
                         C4921 +
                     ((C26679 * C748 + C27336 + C27336 + C26495 * C1168 +
                       C26680 * C751 + C27337 + C27337 + C26496 * C1171) *
                          C79306 * C79307 * C79230 -
                      (C26680 * C6043 + C30133 + C30133 + C26496 * C6393 +
                       C26679 * C3932 + C30134 + C30134 + C26495 * C4386) *
                          C79306 * C79307 * C79114) *
                         C4922 +
                     ((C26679 * C6043 + C33591 + C33591 + C26495 * C6393 +
                       C26680 * C8378 + C33592 + C33592 + C26496 * C8660) *
                          C79306 * C79307 * C79114 -
                      (C26680 * C5567 + C27338 + C27338 + C26496 * C5771 +
                       C26679 * C751 + C27339 + C27339 + C26495 * C1171) *
                          C79306 * C79307 * C79230) *
                         C79259) *
                        C78992)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C26679 * C96 + C26682 + C26682 + C26495 * C373 +
                      C26680 * C749 + C26683 + C26683 + C26496 * C1169) *
                         C79306 * C79307 * C79230 -
                     (C26680 * C3931 + C28068 + C28068 + C26496 * C4385 +
                      C26679 * C1682 + C28069 + C28069 + C26495 * C2102) *
                         C79306 * C79307 * C79114) *
                        C79009 * C2605 +
                    ((C26679 * C1681 + C28072 + C28072 + C26495 * C2101 +
                      C26680 * C3932 + C28073 + C28073 + C26496 * C4386) *
                         C79306 * C79307 * C79114 -
                     (C26680 * C748 + C26684 + C26684 + C26496 * C1168 +
                      C26679 * C97 + C26685 + C26685 + C26495 * C374) *
                         C79306 * C79307 * C79230) *
                        C79009 * C2606 +
                    ((C26679 * C98 + C26686 + C26686 + C26495 * C375 +
                      C26680 * C752 + C26687 + C26687 + C26496 * C1172) *
                         C79306 * C79307 * C79230 -
                     (C26680 * C3933 + C28076 + C28076 + C26496 * C4387 +
                      C26679 * C1685 + C28077 + C28077 + C26495 * C2105) *
                         C79306 * C79307 * C79114) *
                        C79009 * C2607 +
                    ((C26679 * C1687 + C29324 + C29324 + C26495 * C2107 +
                      C26680 * C3934 + C29325 + C29325 + C26496 * C4388) *
                         C79306 * C79307 * C79114 -
                     (C26680 * C754 + C26688 + C26688 + C26496 * C1174 +
                      C26679 * C99 + C26689 + C26689 + C26495 * C376) *
                         C79306 * C79307 * C79230) *
                        C79009 * C79263)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((C26679 * C96 + C26682 + C26682 + C26495 * C373 +
                      C26680 * C749 + C26683 + C26683 + C26496 * C1169) *
                         C79306 * C79307 * C11717 -
                     (C26680 * C3931 + C28068 + C28068 + C26496 * C4385 +
                      C26679 * C1682 + C28069 + C28069 + C26495 * C2102) *
                         C79306 * C79307 * C11718 +
                     (C26679 * C1683 + C28070 + C28070 + C26495 * C2103 +
                      C26680 * C6042 + C28071 + C28071 + C26496 * C6392) *
                         C79306 * C79307 * C11719 -
                     (C26680 * C12365 + C36189 + C36189 + C26496 * C12647 +
                      C26679 * C10320 + C36190 + C36190 + C26495 * C10524) *
                         C79306 * C79307 * C79275) *
                        C79009 * C79215 +
                    ((C26679 * C1681 + C28072 + C28072 + C26495 * C2101 +
                      C26680 * C3932 + C28073 + C28073 + C26496 * C4386) *
                         C79306 * C79307 * C11718 -
                     (C26680 * C748 + C26684 + C26684 + C26496 * C1168 +
                      C26679 * C97 + C26685 + C26685 + C26495 * C374) *
                         C79306 * C79307 * C11717 -
                     (C26680 * C6041 + C28074 + C28074 + C26496 * C6391 +
                      C26679 * C1684 + C28075 + C28075 + C26495 * C2104) *
                         C79306 * C79307 * C11719 +
                     (C26679 * C10319 + C37602 + C37602 + C26495 * C10523 +
                      C26680 * C12366 + C37603 + C37603 + C26496 * C12648) *
                         C79306 * C79307 * C79275) *
                        C79009 * C78992)) /
                      (p * q * std::sqrt(p + q));
    d2eeyz[38] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C245 * C96 + C79307 * C246) * C26551 +
             (C245 * C167 + C79307 * C447) * C26495 + C27140 * C26552 +
             C27422 * C26496) *
                C79306 * C79230 -
            (C30237 * C26496 + C29914 * C26552 +
             (C245 * C1792 + C79307 * C2212) * C26495 +
             (C245 * C1682 + C79307 * C1906) * C26551) *
                C79306 * C79114) *
               C4921 +
           ((C29914 * C26551 + C30237 * C26495 + C31946 * C26552 +
             C32212 * C26496) *
                C79306 * C79114 -
            (C27423 * C26496 + C27143 * C26552 + C27422 * C26495 +
             C27140 * C26551) *
                C79306 * C79230) *
               C4922 +
           ((C27143 * C26551 + C27423 * C26495 + C31373 * C26552 +
             C31530 * C26496) *
                C79306 * C79230 -
            ((C245 * C8451 + C79307 * C8729) * C26496 +
             (C245 * C8377 + C79307 * C8521) * C26552 + C32212 * C26495 +
             C31946 * C26551) *
                C79306 * C79114) *
               C79259) *
              C79215 +
          (((C1939 * C26551 + C2232 * C26495 + C4182 * C26552 +
             C4512 * C26496) *
                C79306 * C79114 -
            (C1299 * C26496 + C1006 * C26552 + C466 * C26495 + C275 * C26551) *
                C79306 * C79230) *
               C4921 +
           ((C1006 * C26551 + C1299 * C26495 + C1007 * C26552 +
             C1300 * C26496) *
                C79306 * C79230 -
            (C8001 * C26496 + C7694 * C26552 + C4512 * C26495 +
             C4182 * C26551) *
                C79306 * C79114) *
               C4922 +
           ((C7694 * C26551 + C8001 * C26495 +
             (C245 * C8378 + C79307 * C8522) * C26552 +
             (C245 * C8452 + C79307 * C8730) * C26496) *
                C79306 * C79114 -
            (C7165 * C26496 + C6954 * C26552 + C1300 * C26495 +
             C1007 * C26551) *
                C79306 * C79230) *
               C79259) *
              C78992)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C245 * C96 + C79307 * C246) * C26551 +
            (C245 * C167 + C79307 * C447) * C26495 + C27140 * C26552 +
            C27422 * C26496) *
               C79306 * C79230 -
           ((C245 * C4047 + C79307 * C4501) * C26496 +
            (C245 * C3931 + C79307 * C4165) * C26552 +
            (C245 * C1792 + C79307 * C2212) * C26495 +
            (C245 * C1682 + C79307 * C1906) * C26551) *
               C79306 * C79114) *
              C79009 * C2605 +
          ((C1939 * C26551 + C2232 * C26495 + C4182 * C26552 + C4512 * C26496) *
               C79306 * C79114 -
           (C1299 * C26496 + C1006 * C26552 + C466 * C26495 + C275 * C26551) *
               C79306 * C79230) *
              C79009 * C2606 +
          ((C278 * C26551 + C467 * C26495 + C1009 * C26552 + C1301 * C26496) *
               C79306 * C79230 -
           (C4513 * C26496 + C4185 * C26552 + C2234 * C26495 + C1942 * C26551) *
               C79306 * C79114) *
              C79009 * C2607 +
          ((C3408 * C26551 + C3619 * C26495 +
            (C245 * C3934 + C79307 * C4168) * C26552 +
            (C245 * C4050 + C79307 * C4504) * C26496) *
               C79306 * C79114 -
           (C2973 * C26496 + C2762 * C26552 + C468 * C26495 + C279 * C26551) *
               C79306 * C79230) *
              C79009 * C79263)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C245 * C96 + C79307 * C246) * C26551 +
            (C245 * C167 + C79307 * C447) * C26495 + C27140 * C26552 +
            C27422 * C26496) *
               C79306 * C11717 -
           (C30237 * C26496 + C29914 * C26552 +
            (C245 * C1792 + C79307 * C2212) * C26495 +
            (C245 * C1682 + C79307 * C1906) * C26551) *
               C79306 * C11718 +
           ((C245 * C1683 + C79307 * C1907) * C26551 +
            (C245 * C1793 + C79307 * C2213) * C26495 + C31944 * C26552 +
            C32211 * C26496) *
               C79306 * C11719 -
           ((C245 * C12439 + C79307 * C12717) * C26496 +
            (C245 * C12365 + C79307 * C12509) * C26552 +
            (C245 * C10378 + C79307 * C10574) * C26495 +
            (C245 * C10320 + C79307 * C10428) * C26551) *
               C79306 * C79275) *
              C79009 * C79215 +
          ((C1939 * C26551 + C2232 * C26495 + C4182 * C26552 + C4512 * C26496) *
               C79306 * C11718 -
           (C1299 * C26496 + C1006 * C26552 + C466 * C26495 + C275 * C26551) *
               C79306 * C11717 -
           (C11341 * C26496 + C11034 * C26552 + C2233 * C26495 +
            C1940 * C26551) *
               C79306 * C11719 +
           (C11874 * C26551 + C12085 * C26495 +
            (C245 * C12366 + C79307 * C12510) * C26552 +
            (C245 * C12440 + C79307 * C12718) * C26496) *
               C79306 * C79275) *
              C79009 * C78992)) /
            (p * q * std::sqrt(p + q));
    d2eezx[38] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C26498 * C96 + C79306 * C102) * C245 +
              (C26498 * C246 + C79306 * C515) * C79307) *
                 C26495 +
             (C27498 + C27522) * C26496) *
                C79230 -
            ((C30348 + C30338) * C26496 +
             ((C26498 * C1906 + C79306 * C2314) * C79307 +
              (C26498 * C1682 + C79306 * C1690) * C245) *
                 C26495) *
                C79114) *
               C4921 +
           (((C30338 + C30348) * C26495 + (C32292 + C32302) * C26496) * C79114 -
            ((C27523 + C27503) * C26496 + (C27522 + C27498) * C26495) *
                C79230) *
               C4922 +
           (((C27503 + C27523) * C26495 + (C31575 + C31583) * C26496) * C79230 -
            (((C26498 * C8521 + C79306 * C8797) * C79307 +
              (C26498 * C8377 + C79306 * C8379) * C245) *
                 C26496 +
             (C32302 + C32292) * C26495) *
                C79114) *
               C79259) *
              C79215 +
          (((((C26498 * C1681 + C79306 * C1689) * C245 +
              (C26498 * C1905 + C79306 * C2313) * C79307) *
                 C26495 +
             (C30339 + C30349) * C26496) *
                C79114 -
            ((C27524 + C27504) * C26496 +
             ((C26498 * C247 + C79306 * C516) * C79307 +
              (C26498 * C97 + C79306 * C103) * C245) *
                 C26495) *
                C79230) *
               C4921 +
           (((C27504 + C27524) * C26495 + (C27507 + C27525) * C26496) * C79230 -
            ((C33793 + C33791) * C26496 + (C30349 + C30339) * C26495) *
                C79114) *
               C4922 +
           (((C33791 + C33793) * C26495 +
             ((C26498 * C8378 + C79306 * C8380) * C245 +
              (C26498 * C8522 + C79306 * C8798) * C79307) *
                 C26496) *
                C79114 -
            ((C32953 + C32951) * C26496 + (C27525 + C27507) * C26495) *
                C79230) *
               C79259) *
              C78992)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C26498 * C96 + C79306 * C102) * C245 +
             (C26498 * C246 + C79306 * C515) * C79307) *
                C26495 +
            (C27498 + C27522) * C26496) *
               C79230 -
           (((C26498 * C4165 + C79306 * C4613) * C79307 +
             (C26498 * C3931 + C79306 * C3935) * C245) *
                C26496 +
            ((C26498 * C1906 + C79306 * C2314) * C79307 +
             (C26498 * C1682 + C79306 * C1690) * C245) *
                C26495) *
               C79114) *
              C79009 * C2605 +
          ((((C26498 * C1681 + C79306 * C1689) * C245 +
             (C26498 * C1905 + C79306 * C2313) * C79307) *
                C26495 +
            ((C26498 * C3932 + C79306 * C3936) * C245 +
             (C26498 * C4166 + C79306 * C4614) * C79307) *
                C26496) *
               C79114 -
           ((C27524 + C27504) * C26496 +
            ((C26498 * C247 + C79306 * C516) * C79307 +
             (C26498 * C97 + C79306 * C103) * C245) *
                C26495) *
               C79230) *
              C79009 * C2606 +
          ((((C26498 * C98 + C79306 * C104) * C245 +
             (C26498 * C248 + C79306 * C517) * C79307) *
                C26495 +
            (C27510 + C27526) * C26496) *
               C79230 -
           (((C26498 * C4167 + C79306 * C4615) * C79307 +
             (C26498 * C3933 + C79306 * C3937) * C245) *
                C26496 +
            ((C26498 * C1909 + C79306 * C2317) * C79307 +
             (C26498 * C1685 + C79306 * C1693) * C245) *
                C26495) *
               C79114) *
              C79009 * C2607 +
          ((((C26498 * C1687 + C79306 * C1695) * C245 +
             (C26498 * C1911 + C79306 * C2319) * C79307) *
                C26495 +
            ((C26498 * C3934 + C79306 * C3938) * C245 +
             (C26498 * C4168 + C79306 * C4616) * C79307) *
                C26496) *
               C79114 -
           ((C28859 + C28855) * C26496 +
            ((C26498 * C249 + C79306 * C518) * C79307 +
             (C26498 * C99 + C79306 * C105) * C245) *
                C26495) *
               C79230) *
              C79009 * C79263)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C26498 * C96 + C79306 * C102) * C245 +
             (C26498 * C246 + C79306 * C515) * C79307) *
                C26495 +
            (C27498 + C27522) * C26496) *
               C11717 -
           ((C30348 + C30338) * C26496 +
            ((C26498 * C1906 + C79306 * C2314) * C79307 +
             (C26498 * C1682 + C79306 * C1690) * C245) *
                C26495) *
               C11718 +
           (((C26498 * C1683 + C79306 * C1691) * C245 +
             (C26498 * C1907 + C79306 * C2315) * C79307) *
                C26495 +
            (C32289 + C32301) * C26496) *
               C11719 -
           (((C26498 * C12509 + C79306 * C12785) * C79307 +
             (C26498 * C12365 + C79306 * C12367) * C245) *
                C26496 +
            ((C26498 * C10428 + C79306 * C10620) * C79307 +
             (C26498 * C10320 + C79306 * C10324) * C245) *
                C26495) *
               C79275) *
              C79009 * C79215 +
          ((((C26498 * C1681 + C79306 * C1689) * C245 +
             (C26498 * C1905 + C79306 * C2313) * C79307) *
                C26495 +
            (C30339 + C30349) * C26496) *
               C11718 -
           ((C27524 + C27504) * C26496 +
            ((C26498 * C247 + C79306 * C516) * C79307 +
             (C26498 * C97 + C79306 * C103) * C245) *
                C26495) *
               C11717 -
           ((C37073 + C37071) * C26496 +
            ((C26498 * C1908 + C79306 * C2316) * C79307 +
             (C26498 * C1684 + C79306 * C1692) * C245) *
                C26495) *
               C11719 +
           (((C26498 * C10319 + C79306 * C10323) * C245 +
             (C26498 * C10427 + C79306 * C10619) * C79307) *
                C26495 +
            ((C26498 * C12366 + C79306 * C12368) * C245 +
             (C26498 * C12510 + C79306 * C12786) * C79307) *
                C26496) *
               C79275) *
              C79009 * C78992)) /
            (p * q * std::sqrt(p + q));
    d2eezy[38] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
                 C245 +
             (C26551 * C246 + C26495 * C563 + C26552 * C973 + C26496 * C1463) *
                 C79307) *
                C79306 * C79230 -
            ((C26552 * C4165 + C26496 * C4715 + C26551 * C1906 +
              C26495 * C2396) *
                 C79307 +
             (C26552 * C3931 + C26496 * C4047 + C26551 * C1682 +
              C26495 * C1792) *
                 C245) *
                C79306 * C79114) *
               C4921 +
           (((C26551 * C3931 + C26495 * C4047 + C26552 * C6044 +
              C26496 * C6142) *
                 C245 +
             (C26551 * C4165 + C26495 * C4715 + C26552 * C6228 +
              C26496 * C6640) *
                 C79307) *
                C79306 * C79114 -
            ((C26552 * C974 + C26496 * C1464 + C26551 * C973 + C26495 * C1463) *
                 C79307 +
             (C26552 * C750 + C26496 * C860 + C26551 * C749 + C26495 * C859) *
                 C245) *
                C79306 * C79230) *
               C4922 +
           (((C26551 * C750 + C26495 * C860 + C26552 * C5568 + C26496 * C5626) *
                 C245 +
             (C26551 * C974 + C26495 * C1464 + C26552 * C5676 +
              C26496 * C5914) *
                 C79307) *
                C79306 * C79230 -
            ((C26552 * C8521 + C26496 * C8865 + C26551 * C6228 +
              C26495 * C6640) *
                 C79307 +
             (C26552 * C8377 + C26496 * C8451 + C26551 * C6044 +
              C26495 * C6142) *
                 C245) *
                C79306 * C79114) *
               C79259) *
              C79215 +
          ((((C26551 * C1681 + C26495 * C1791 + C26552 * C3932 +
              C26496 * C4048) *
                 C245 +
             (C26551 * C1905 + C26495 * C2395 + C26552 * C4166 +
              C26496 * C4716) *
                 C79307) *
                C79306 * C79114 -
            ((C26552 * C972 + C26496 * C1462 + C26551 * C247 + C26495 * C564) *
                 C79307 +
             (C26552 * C748 + C26496 * C858 + C26551 * C97 + C26495 * C168) *
                 C245) *
                C79306 * C79230) *
               C4921 +
           (((C26551 * C748 + C26495 * C858 + C26552 * C751 + C26496 * C861) *
                 C245 +
             (C26551 * C972 + C26495 * C1462 + C26552 * C975 + C26496 * C1465) *
                 C79307) *
                C79306 * C79230 -
            ((C26552 * C6227 + C26496 * C6639 + C26551 * C4166 +
              C26495 * C4716) *
                 C79307 +
             (C26552 * C6043 + C26496 * C6141 + C26551 * C3932 +
              C26495 * C4048) *
                 C245) *
                C79306 * C79114) *
               C4922 +
           (((C26551 * C6043 + C26495 * C6141 + C26552 * C8378 +
              C26496 * C8452) *
                 C245 +
             (C26551 * C6227 + C26495 * C6639 + C26552 * C8522 +
              C26496 * C8866) *
                 C79307) *
                C79306 * C79114 -
            ((C26552 * C5675 + C26496 * C5913 + C26551 * C975 +
              C26495 * C1465) *
                 C79307 +
             (C26552 * C5567 + C26496 * C5625 + C26551 * C751 + C26495 * C861) *
                 C245) *
                C79306 * C79230) *
               C79259) *
              C78992)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
                C245 +
            (C26551 * C246 + C26495 * C563 + C26552 * C973 + C26496 * C1463) *
                C79307) *
               C79306 * C79230 -
           ((C26552 * C4165 + C26496 * C4715 + C26551 * C1906 +
             C26495 * C2396) *
                C79307 +
            (C26552 * C3931 + C26496 * C4047 + C26551 * C1682 +
             C26495 * C1792) *
                C245) *
               C79306 * C79114) *
              C79009 * C2605 +
          (((C26551 * C1681 + C26495 * C1791 + C26552 * C3932 +
             C26496 * C4048) *
                C245 +
            (C26551 * C1905 + C26495 * C2395 + C26552 * C4166 +
             C26496 * C4716) *
                C79307) *
               C79306 * C79114 -
           ((C26552 * C972 + C26496 * C1462 + C26551 * C247 + C26495 * C564) *
                C79307 +
            (C26552 * C748 + C26496 * C858 + C26551 * C97 + C26495 * C168) *
                C245) *
               C79306 * C79230) *
              C79009 * C2606 +
          (((C26551 * C98 + C26495 * C169 + C26552 * C752 + C26496 * C862) *
                C245 +
            (C26551 * C248 + C26495 * C565 + C26552 * C976 + C26496 * C1466) *
                C79307) *
               C79306 * C79230 -
           ((C26552 * C4167 + C26496 * C4717 + C26551 * C1909 +
             C26495 * C2399) *
                C79307 +
            (C26552 * C3933 + C26496 * C4049 + C26551 * C1685 +
             C26495 * C1795) *
                C245) *
               C79306 * C79114) *
              C79009 * C2607 +
          (((C26551 * C1687 + C26495 * C1797 + C26552 * C3934 +
             C26496 * C4050) *
                C245 +
            (C26551 * C1911 + C26495 * C2401 + C26552 * C4168 +
             C26496 * C4718) *
                C79307) *
               C79306 * C79114 -
           ((C26552 * C978 + C26496 * C1468 + C26551 * C249 + C26495 * C566) *
                C79307 +
            (C26552 * C754 + C26496 * C864 + C26551 * C99 + C26495 * C170) *
                C245) *
               C79306 * C79230) *
              C79009 * C79263)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
                C245 +
            (C26551 * C246 + C26495 * C563 + C26552 * C973 + C26496 * C1463) *
                C79307) *
               C79306 * C11717 -
           ((C26552 * C4165 + C26496 * C4715 + C26551 * C1906 +
             C26495 * C2396) *
                C79307 +
            (C26552 * C3931 + C26496 * C4047 + C26551 * C1682 +
             C26495 * C1792) *
                C245) *
               C79306 * C11718 +
           ((C26551 * C1683 + C26495 * C1793 + C26552 * C6042 +
             C26496 * C6140) *
                C245 +
            (C26551 * C1907 + C26495 * C2397 + C26552 * C6226 +
             C26496 * C6638) *
                C79307) *
               C79306 * C11719 -
           ((C26552 * C12509 + C26496 * C12853 + C26551 * C10428 +
             C26495 * C10666) *
                C79307 +
            (C26552 * C12365 + C26496 * C12439 + C26551 * C10320 +
             C26495 * C10378) *
                C245) *
               C79306 * C79275) *
              C79009 * C79215 +
          (((C26551 * C1681 + C26495 * C1791 + C26552 * C3932 +
             C26496 * C4048) *
                C245 +
            (C26551 * C1905 + C26495 * C2395 + C26552 * C4166 +
             C26496 * C4716) *
                C79307) *
               C79306 * C11718 -
           ((C26552 * C972 + C26496 * C1462 + C26551 * C247 + C26495 * C564) *
                C79307 +
            (C26552 * C748 + C26496 * C858 + C26551 * C97 + C26495 * C168) *
                C245) *
               C79306 * C11717 -
           ((C26552 * C6225 + C26496 * C6637 + C26551 * C1908 +
             C26495 * C2398) *
                C79307 +
            (C26552 * C6041 + C26496 * C6139 + C26551 * C1684 +
             C26495 * C1794) *
                C245) *
               C79306 * C11719 +
           ((C26551 * C10319 + C26495 * C10377 + C26552 * C12366 +
             C26496 * C12440) *
                C245 +
            (C26551 * C10427 + C26495 * C10665 + C26552 * C12510 +
             C26496 * C12854) *
                C79307) *
               C79306 * C79275) *
              C79009 * C78992)) /
            (p * q * std::sqrt(p + q));
    d2eezz[38] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C631 * C96 + C639 + C639 + C79307 * C632) * C26495 +
             C27684 * C26496) *
                C79306 * C79230 -
            (C30551 * C26496 +
             (C631 * C1682 + C2509 + C2509 + C79307 * C2498) * C26495) *
                C79306 * C79114) *
               C4921 +
           ((C30551 * C26495 + C32468 * C26496) * C79306 * C79114 -
            (C27685 * C26496 + C27684 * C26495) * C79306 * C79230) *
               C4922 +
           ((C27685 * C26495 + C31680 * C26496) * C79306 * C79230 -
            ((C631 * C8377 + C8936 + C8936 + C79307 * C8933) * C26496 +
             C32468 * C26495) *
                C79306 * C79114) *
               C79259) *
              C79215 +
          (((C2530 * C26495 + C4844 * C26496) * C79306 * C79114 -
            (C1597 * C26496 + C661 * C26495) * C79306 * C79230) *
               C4921 +
           ((C1597 * C26495 + C1598 * C26496) * C79306 * C79230 -
            (C8310 * C26496 + C4844 * C26495) * C79306 * C79114) *
               C4922 +
           ((C8310 * C26495 +
             (C631 * C8378 + C8937 + C8937 + C79307 * C8934) * C26496) *
                C79306 * C79114 -
            (C7378 * C26496 + C1598 * C26495) * C79306 * C79230) *
               C79259) *
              C78992)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C631 * C96 + C639 + C639 + C79307 * C632) * C26495 +
            C27684 * C26496) *
               C79306 * C79230 -
           ((C631 * C3931 + C4832 + C4832 + C79307 * C4827) * C26496 +
            (C631 * C1682 + C2509 + C2509 + C79307 * C2498) * C26495) *
               C79306 * C79114) *
              C79009 * C2605 +
          ((C2530 * C26495 + C4844 * C26496) * C79306 * C79114 -
           (C1597 * C26496 + C661 * C26495) * C79306 * C79230) *
              C79009 * C2606 +
          ((C662 * C26495 + C1599 * C26496) * C79306 * C79230 -
           (C4845 * C26496 + C2532 * C26495) * C79306 * C79114) *
              C79009 * C2607 +
          ((C3832 * C26495 +
            (C631 * C3934 + C4839 + C4839 + C79307 * C4830) * C26496) *
               C79306 * C79114 -
           (C3186 * C26496 + C663 * C26495) * C79306 * C79230) *
              C79009 * C79263)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C631 * C96 + C639 + C639 + C79307 * C632) * C26495 +
            C27684 * C26496) *
               C79306 * C11717 -
           (C30551 * C26496 +
            (C631 * C1682 + C2509 + C2509 + C79307 * C2498) * C26495) *
               C79306 * C11718 +
           ((C631 * C1683 + C2510 + C2510 + C79307 * C2499) * C26495 +
            C32467 * C26496) *
               C79306 * C11719 -
           ((C631 * C12365 + C12924 + C12924 + C79307 * C12921) * C26496 +
            (C631 * C10320 + C10717 + C10717 + C79307 * C10712) * C26495) *
               C79306 * C79275) *
              C79009 * C79215 +
          ((C2530 * C26495 + C4844 * C26496) * C79306 * C11718 -
           (C1597 * C26496 + C661 * C26495) * C79306 * C11717 -
           (C11650 * C26496 + C2531 * C26495) * C79306 * C11719 +
           (C12298 * C26495 +
            (C631 * C12366 + C12925 + C12925 + C79307 * C12922) * C26496) *
               C79306 * C79275) *
              C79009 * C78992)) /
            (p * q * std::sqrt(p + q));
    d2eexx[39] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C79307 * C26495 +
            C26970 * C26496) *
               C79027 * C79300 -
           (C26971 * C26496 + C26970 * C26495) * C79027 * C79285 +
           (C26971 * C26495 +
            (C26497 * C5568 + C26939 + C26939 + C79306 * C5576) * C79307 *
                C26496) *
               C79027 * C79259) *
              C745 +
          ((C26972 * C26495 + C26973 * C26496) * C79027 * C79285 -
           (C26972 * C26496 + (C26497 * C97 + C26503 + C26503 + C79306 * C109) *
                                  C79307 * C26495) *
               C79027 * C79300 -
           ((C26497 * C5567 + C26945 + C26945 + C79306 * C5575) * C79307 *
                C26496 +
            C26973 * C26495) *
               C79027 * C79259) *
              C746 +
          (((C26497 * C98 + C26504 + C26504 + C79306 * C110) * C79307 * C26495 +
            C26974 * C26496) *
               C79027 * C79300 -
           (C26975 * C26496 + C26974 * C26495) * C79027 * C79285 +
           (C26975 * C26495 +
            (C26497 * C6801 + C26951 + C26951 + C79306 * C6803) * C79307 *
                C26496) *
               C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C79307 * C26495 +
           (C26497 * C749 + C26501 + C26501 + C79306 * C765) * C79307 *
               C26496) *
              C79027 * C79009 * C87 -
          ((C26497 * C748 + C26502 + C26502 + C79306 * C764) * C79307 * C26496 +
           (C26497 * C97 + C26503 + C26503 + C79306 * C109) * C79307 * C26495) *
              C79027 * C79009 * C88 +
          ((C26497 * C98 + C26504 + C26504 + C79306 * C110) * C79307 * C26495 +
           (C26497 * C752 + C26505 + C26505 + C79306 * C768) * C79307 *
               C26496) *
              C79027 * C79009 * C89 -
          ((C26497 * C754 + C26506 + C26506 + C79306 * C770) * C79307 * C26496 +
           (C26497 * C99 + C26507 + C26507 + C79306 * C111) * C79307 * C26495) *
              C79027 * C79009 * C90 +
          ((C26497 * C100 + C26508 + C26508 + C79306 * C112) * C79307 * C26495 +
           (C26497 * C2609 + C26509 + C26509 + C79306 * C2611) * C79307 *
               C26496) *
              C79027 * C79009 * C91)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C79307 * C26495 +
            C26970 * C26496) *
               C79027 * C4921 -
           (C26971 * C26496 + C26970 * C26495) * C79027 * C4922 +
           (C26971 * C26495 +
            (C26497 * C5568 + C26939 + C26939 + C79306 * C5576) * C79307 *
                C26496) *
               C79027 * C79259) *
              C79297 +
          ((C26972 * C26495 + C26973 * C26496) * C79027 * C4922 -
           (C26972 * C26496 + (C26497 * C97 + C26503 + C26503 + C79306 * C109) *
                                  C79307 * C26495) *
               C79027 * C4921 -
           ((C26497 * C5567 + C26945 + C26945 + C79306 * C5575) * C79307 *
                C26496 +
            C26973 * C26495) *
               C79027 * C79259) *
              C79281 +
          (((C26497 * C98 + C26504 + C26504 + C79306 * C110) * C79307 * C26495 +
            C26974 * C26496) *
               C79027 * C4921 -
           (C26975 * C26496 + C26974 * C26495) * C79027 * C4922 +
           (C26975 * C26495 +
            (C26497 * C6801 + C26951 + C26951 + C79306 * C6803) * C79307 *
                C26496) *
               C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C79307 * C26495 +
           C26970 * C26496) *
              C79027 * C5561 -
          (C26971 * C26496 + C26970 * C26495) * C79027 * C5562 +
          (C26971 * C26495 + C31275 * C26496) * C79027 * C5563 -
          (C31276 * C26496 + C31275 * C26495) * C79027 * C5564 +
          (C31276 * C26495 +
           (C26497 * C31259 + C31268 + C31268 + C79306 * C31261) * C79307 *
               C26496) *
              C79027 * C5565) *
         C78981) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C79307 * C26495 +
            C26970 * C26496) *
               C9011 -
           (C29706 * C26496 +
            (C26497 * C1682 + C27761 + C27761 + C79306 * C1698) * C79307 *
                C26495) *
               C9012 +
           ((C26497 * C1683 + C27762 + C27762 + C79306 * C1699) * C79307 *
                C26495 +
            C31777 * C26496) *
               C79262) *
              C79009 * C79297 +
          (((C26497 * C1681 + C27764 + C27764 + C79306 * C1697) * C79307 *
                C26495 +
            C29707 * C26496) *
               C9012 -
           (C26972 * C26496 + (C26497 * C97 + C26503 + C26503 + C79306 * C109) *
                                  C79307 * C26495) *
               C9011 -
           ((C26497 * C6041 + C27766 + C27766 + C79306 * C6053) * C79307 *
                C26496 +
            (C26497 * C1684 + C27767 + C27767 + C79306 * C1700) * C79307 *
                C26495) *
               C79262) *
              C79009 * C79281 +
          (((C26497 * C98 + C26504 + C26504 + C79306 * C110) * C79307 * C26495 +
            C26974 * C26496) *
               C9011 -
           (C29708 * C26496 +
            (C26497 * C1685 + C27769 + C27769 + C79306 * C1701) * C79307 *
                C26495) *
               C9012 +
           ((C26497 * C1686 + C27770 + C27770 + C79306 * C1702) * C79307 *
                C26495 +
            (C26497 * C10817 + C27771 + C27771 + C79306 * C10819) * C79307 *
                C26496) *
               C79262) *
              C79009 * C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C79307 * C26495 +
            C26970 * C26496) *
               C9011 -
           (C29706 * C26496 +
            (C26497 * C1682 + C27761 + C27761 + C79306 * C1698) * C79307 *
                C26495) *
               C9012 +
           ((C26497 * C1683 + C27762 + C27762 + C79306 * C1699) * C79307 *
                C26495 +
            C31777 * C26496) *
               C79262) *
              C79300 +
          ((C29706 * C26495 + C31778 * C26496) * C9012 -
           (C26971 * C26496 + C26970 * C26495) * C9011 -
           (C31779 * C26496 + C31777 * C26495) * C79262) *
              C79285 +
          ((C26971 * C26495 + C31275 * C26496) * C9011 -
           (C34065 * C26496 + C31778 * C26495) * C9012 +
           (C31779 * C26495 +
            (C26497 * C31755 + C31767 + C31767 + C79306 * C31757) * C79307 *
                C26496) *
               C79262) *
              C79259) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eexy[39] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
                C26498 +
            (C26551 * C102 + C26495 * C173 + C26552 * C757 + C26496 * C867) *
                C79306) *
               C79307 * C79027 * C79300 -
           ((C26552 * C758 + C26496 * C868 + C26551 * C757 + C26495 * C867) *
                C79306 +
            (C26552 * C750 + C26496 * C860 + C26551 * C749 + C26495 * C859) *
                C26498) *
               C79307 * C79027 * C79285 +
           ((C26551 * C750 + C26495 * C860 + C26552 * C5568 + C26496 * C5626) *
                C26498 +
            (C26551 * C758 + C26495 * C868 + C26552 * C5572 + C26496 * C5630) *
                C79306) *
               C79307 * C79027 * C79259) *
              C745 +
          (((C26551 * C748 + C26495 * C858 + C26552 * C751 + C26496 * C861) *
                C26498 +
            (C26551 * C756 + C26495 * C866 + C26552 * C759 + C26496 * C869) *
                C79306) *
               C79307 * C79027 * C79285 -
           ((C26552 * C756 + C26496 * C866 + C26551 * C103 + C26495 * C174) *
                C79306 +
            (C26552 * C748 + C26496 * C858 + C26551 * C97 + C26495 * C168) *
                C26498) *
               C79307 * C79027 * C79300 -
           ((C26552 * C5571 + C26496 * C5629 + C26551 * C759 + C26495 * C869) *
                C79306 +
            (C26552 * C5567 + C26496 * C5625 + C26551 * C751 + C26495 * C861) *
                C26498) *
               C79307 * C79027 * C79259) *
              C746 +
          (((C26551 * C98 + C26495 * C169 + C26552 * C752 + C26496 * C862) *
                C26498 +
            (C26551 * C104 + C26495 * C175 + C26552 * C760 + C26496 * C870) *
                C79306) *
               C79307 * C79027 * C79300 -
           ((C26552 * C761 + C26496 * C871 + C26551 * C760 + C26495 * C870) *
                C79306 +
            (C26552 * C753 + C26496 * C863 + C26551 * C752 + C26495 * C862) *
                C26498) *
               C79307 * C79027 * C79285 +
           ((C26551 * C753 + C26495 * C863 + C26552 * C6801 + C26496 * C6872) *
                C26498 +
            (C26551 * C761 + C26495 * C871 + C26552 * C6802 + C26496 * C6873) *
                C79306) *
               C79307 * C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
               C26498 +
           (C26551 * C102 + C26495 * C173 + C26552 * C757 + C26496 * C867) *
               C79306) *
              C79307 * C79027 * C79009 * C87 -
          ((C26552 * C756 + C26496 * C866 + C26551 * C103 + C26495 * C174) *
               C79306 +
           (C26552 * C748 + C26496 * C858 + C26551 * C97 + C26495 * C168) *
               C26498) *
              C79307 * C79027 * C79009 * C88 +
          ((C26551 * C98 + C26495 * C169 + C26552 * C752 + C26496 * C862) *
               C26498 +
           (C26551 * C104 + C26495 * C175 + C26552 * C760 + C26496 * C870) *
               C79306) *
              C79307 * C79027 * C79009 * C89 -
          ((C26552 * C762 + C26496 * C872 + C26551 * C105 + C26495 * C176) *
               C79306 +
           (C26552 * C754 + C26496 * C864 + C26551 * C99 + C26495 * C170) *
               C26498) *
              C79307 * C79027 * C79009 * C90 +
          ((C26551 * C100 + C26495 * C171 + C26552 * C2609 + C26496 * C2680) *
               C26498 +
           (C26551 * C106 + C26495 * C177 + C26552 * C2610 + C26496 * C2681) *
               C79306) *
              C79307 * C79027 * C79009 * C91)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
                C26498 +
            (C26551 * C102 + C26495 * C173 + C26552 * C757 + C26496 * C867) *
                C79306) *
               C79307 * C79027 * C4921 -
           ((C26552 * C758 + C26496 * C868 + C26551 * C757 + C26495 * C867) *
                C79306 +
            (C26552 * C750 + C26496 * C860 + C26551 * C749 + C26495 * C859) *
                C26498) *
               C79307 * C79027 * C4922 +
           ((C26551 * C750 + C26495 * C860 + C26552 * C5568 + C26496 * C5626) *
                C26498 +
            (C26551 * C758 + C26495 * C868 + C26552 * C5572 + C26496 * C5630) *
                C79306) *
               C79307 * C79027 * C79259) *
              C79297 +
          (((C26551 * C748 + C26495 * C858 + C26552 * C751 + C26496 * C861) *
                C26498 +
            (C26551 * C756 + C26495 * C866 + C26552 * C759 + C26496 * C869) *
                C79306) *
               C79307 * C79027 * C4922 -
           ((C26552 * C756 + C26496 * C866 + C26551 * C103 + C26495 * C174) *
                C79306 +
            (C26552 * C748 + C26496 * C858 + C26551 * C97 + C26495 * C168) *
                C26498) *
               C79307 * C79027 * C4921 -
           ((C26552 * C5571 + C26496 * C5629 + C26551 * C759 + C26495 * C869) *
                C79306 +
            (C26552 * C5567 + C26496 * C5625 + C26551 * C751 + C26495 * C861) *
                C26498) *
               C79307 * C79027 * C79259) *
              C79281 +
          (((C26551 * C98 + C26495 * C169 + C26552 * C752 + C26496 * C862) *
                C26498 +
            (C26551 * C104 + C26495 * C175 + C26552 * C760 + C26496 * C870) *
                C79306) *
               C79307 * C79027 * C4921 -
           ((C26552 * C761 + C26496 * C871 + C26551 * C760 + C26495 * C870) *
                C79306 +
            (C26552 * C753 + C26496 * C863 + C26551 * C752 + C26495 * C862) *
                C26498) *
               C79307 * C79027 * C4922 +
           ((C26551 * C753 + C26495 * C863 + C26552 * C6801 + C26496 * C6872) *
                C26498 +
            (C26551 * C761 + C26495 * C871 + C26552 * C6802 + C26496 * C6873) *
                C79306) *
               C79307 * C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
               C26498 +
           (C26551 * C102 + C26495 * C173 + C26552 * C757 + C26496 * C867) *
               C79306) *
              C79307 * C79027 * C5561 -
          ((C26552 * C758 + C26496 * C868 + C26551 * C757 + C26495 * C867) *
               C79306 +
           (C26552 * C750 + C26496 * C860 + C26551 * C749 + C26495 * C859) *
               C26498) *
              C79307 * C79027 * C5562 +
          ((C26551 * C750 + C26495 * C860 + C26552 * C5568 + C26496 * C5626) *
               C26498 +
           (C26551 * C758 + C26495 * C868 + C26552 * C5572 + C26496 * C5630) *
               C79306) *
              C79307 * C79027 * C5563 -
          ((C26552 * C5573 + C26496 * C5631 + C26551 * C5572 + C26495 * C5630) *
               C79306 +
           (C26552 * C5569 + C26496 * C5627 + C26551 * C5568 + C26495 * C5626) *
               C26498) *
              C79307 * C79027 * C5564 +
          ((C26551 * C5569 + C26495 * C5627 + C26552 * C31259 +
            C26496 * C31318) *
               C26498 +
           (C26551 * C5573 + C26495 * C5631 + C26552 * C31260 +
            C26496 * C31319) *
               C79306) *
              C79307 * C79027 * C5565) *
         C78981) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
                C26498 +
            (C26551 * C102 + C26495 * C173 + C26552 * C757 + C26496 * C867) *
                C79306) *
               C79307 * C9011 -
           ((C26552 * C3935 + C26496 * C4051 + C26551 * C1690 +
             C26495 * C1800) *
                C79306 +
            (C26552 * C3931 + C26496 * C4047 + C26551 * C1682 +
             C26495 * C1792) *
                C26498) *
               C79307 * C9012 +
           ((C26551 * C1683 + C26495 * C1793 + C26552 * C6042 +
             C26496 * C6140) *
                C26498 +
            (C26551 * C1691 + C26495 * C1801 + C26552 * C6048 +
             C26496 * C6146) *
                C79306) *
               C79307 * C79262) *
              C79009 * C79297 +
          (((C26551 * C1681 + C26495 * C1791 + C26552 * C3932 +
             C26496 * C4048) *
                C26498 +
            (C26551 * C1689 + C26495 * C1799 + C26552 * C3936 +
             C26496 * C4052) *
                C79306) *
               C79307 * C9012 -
           ((C26552 * C756 + C26496 * C866 + C26551 * C103 + C26495 * C174) *
                C79306 +
            (C26552 * C748 + C26496 * C858 + C26551 * C97 + C26495 * C168) *
                C26498) *
               C79307 * C9011 -
           ((C26552 * C6047 + C26496 * C6145 + C26551 * C1692 +
             C26495 * C1802) *
                C79306 +
            (C26552 * C6041 + C26496 * C6139 + C26551 * C1684 +
             C26495 * C1794) *
                C26498) *
               C79307 * C79262) *
              C79009 * C79281 +
          (((C26551 * C98 + C26495 * C169 + C26552 * C752 + C26496 * C862) *
                C26498 +
            (C26551 * C104 + C26495 * C175 + C26552 * C760 + C26496 * C870) *
                C79306) *
               C79307 * C9011 -
           ((C26552 * C3937 + C26496 * C4053 + C26551 * C1693 +
             C26495 * C1803) *
                C79306 +
            (C26552 * C3933 + C26496 * C4049 + C26551 * C1685 +
             C26495 * C1795) *
                C26498) *
               C79307 * C9012 +
           ((C26551 * C1686 + C26495 * C1796 + C26552 * C10817 +
             C26496 * C10920) *
                C26498 +
            (C26551 * C1694 + C26495 * C1804 + C26552 * C10818 +
             C26496 * C10921) *
                C79306) *
               C79307 * C79262) *
              C79009 * C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
                C26498 +
            (C26551 * C102 + C26495 * C173 + C26552 * C757 + C26496 * C867) *
                C79306) *
               C79307 * C9011 -
           ((C26552 * C3935 + C26496 * C4051 + C26551 * C1690 +
             C26495 * C1800) *
                C79306 +
            (C26552 * C3931 + C26496 * C4047 + C26551 * C1682 +
             C26495 * C1792) *
                C26498) *
               C79307 * C9012 +
           ((C26551 * C1683 + C26495 * C1793 + C26552 * C6042 +
             C26496 * C6140) *
                C26498 +
            (C26551 * C1691 + C26495 * C1801 + C26552 * C6048 +
             C26496 * C6146) *
                C79306) *
               C79307 * C79262) *
              C79300 +
          (((C26551 * C3931 + C26495 * C4047 + C26552 * C6044 +
             C26496 * C6142) *
                C26498 +
            (C26551 * C3935 + C26495 * C4051 + C26552 * C6050 +
             C26496 * C6148) *
                C79306) *
               C79307 * C9012 -
           ((C26552 * C758 + C26496 * C868 + C26551 * C757 + C26495 * C867) *
                C79306 +
            (C26552 * C750 + C26496 * C860 + C26551 * C749 + C26495 * C859) *
                C26498) *
               C79307 * C9011 -
           ((C26552 * C6051 + C26496 * C6149 + C26551 * C6048 +
             C26495 * C6146) *
                C79306 +
            (C26552 * C6045 + C26496 * C6143 + C26551 * C6042 +
             C26495 * C6140) *
                C26498) *
               C79307 * C79262) *
              C79285 +
          (((C26551 * C750 + C26495 * C860 + C26552 * C5568 + C26496 * C5626) *
                C26498 +
            (C26551 * C758 + C26495 * C868 + C26552 * C5572 + C26496 * C5630) *
                C79306) *
               C79307 * C9011 -
           ((C26552 * C8379 + C26496 * C8453 + C26551 * C6050 +
             C26495 * C6148) *
                C79306 +
            (C26552 * C8377 + C26496 * C8451 + C26551 * C6044 +
             C26495 * C6142) *
                C26498) *
               C79307 * C9012 +
           ((C26551 * C6045 + C26495 * C6143 + C26552 * C31755 +
             C26496 * C31853) *
                C26498 +
            (C26551 * C6051 + C26495 * C6149 + C26552 * C31756 +
             C26496 * C31854) *
                C79306) *
               C79307 * C79262) *
              C79259) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eexz[39] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C245 * C96 + C79307 * C246) * C26498 +
             (C245 * C102 + C79307 * C252) * C79306) *
                C26495 +
            (C27144 + C27145) * C26496) *
               C79027 * C79300 -
           ((C27146 + C27147) * C26496 + (C27145 + C27144) * C26495) * C79027 *
               C79285 +
           ((C27147 + C27146) * C26495 +
            ((C245 * C5568 + C79307 * C5676) * C26498 +
             (C245 * C5572 + C79307 * C5680) * C79306) *
                C26496) *
               C79027 * C79259) *
              C745 +
          (((C27132 + C27133) * C26495 + (C27134 + C27135) * C26496) * C79027 *
               C79285 -
           ((C27133 + C27132) * C26496 +
            (C276 * C79306 + C275 * C26498) * C26495) *
               C79027 * C79300 -
           ((C6953 * C79306 + C6954 * C26498) * C26496 +
            (C27135 + C27134) * C26495) *
               C79027 * C79259) *
              C746 +
          (((C278 * C26498 + C277 * C79306) * C26495 +
            (C27136 + C27137) * C26496) *
               C79027 * C79300 -
           ((C27138 + C27139) * C26496 + (C27137 + C27136) * C26495) * C79027 *
               C79285 +
           ((C27139 + C27138) * C26495 +
            ((C245 * C6801 + C79307 * C6946) * C26498 +
             (C245 * C6802 + C79307 * C6947) * C79306) *
                C26496) *
               C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C245 * C96 + C79307 * C246) * C26498 +
            (C245 * C102 + C79307 * C252) * C79306) *
               C26495 +
           ((C245 * C749 + C79307 * C973) * C26498 +
            (C245 * C757 + C79307 * C981) * C79306) *
               C26496) *
              C79027 * C79009 * C87 -
          ((C1005 * C79306 + C1006 * C26498) * C26496 +
           (C276 * C79306 + C275 * C26498) * C26495) *
              C79027 * C79009 * C88 +
          ((C278 * C26498 + C277 * C79306) * C26495 +
           (C1009 * C26498 + C1010 * C79306) * C26496) *
              C79027 * C79009 * C89 -
          ((C2761 * C79306 + C2762 * C26498) * C26496 +
           (C280 * C79306 + C279 * C26498) * C26495) *
              C79027 * C79009 * C90 +
          ((C282 * C26498 + C281 * C79306) * C26495 +
           ((C245 * C2609 + C79307 * C2754) * C26498 +
            (C245 * C2610 + C79307 * C2755) * C79306) *
               C26496) *
              C79027 * C79009 * C91)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C245 * C96 + C79307 * C246) * C26498 +
             (C245 * C102 + C79307 * C252) * C79306) *
                C26495 +
            (C27144 + C27145) * C26496) *
               C79027 * C4921 -
           ((C27146 + C27147) * C26496 + (C27145 + C27144) * C26495) * C79027 *
               C4922 +
           ((C27147 + C27146) * C26495 +
            ((C245 * C5568 + C79307 * C5676) * C26498 +
             (C245 * C5572 + C79307 * C5680) * C79306) *
                C26496) *
               C79027 * C79259) *
              C79297 +
          (((C27132 + C27133) * C26495 + (C27134 + C27135) * C26496) * C79027 *
               C4922 -
           ((C27133 + C27132) * C26496 +
            (C276 * C79306 + C275 * C26498) * C26495) *
               C79027 * C4921 -
           ((C6953 * C79306 + C6954 * C26498) * C26496 +
            (C27135 + C27134) * C26495) *
               C79027 * C79259) *
              C79281 +
          (((C278 * C26498 + C277 * C79306) * C26495 +
            (C27136 + C27137) * C26496) *
               C79027 * C4921 -
           ((C27138 + C27139) * C26496 + (C27137 + C27136) * C26495) * C79027 *
               C4922 +
           ((C27139 + C27138) * C26495 +
            ((C245 * C6801 + C79307 * C6946) * C26498 +
             (C245 * C6802 + C79307 * C6947) * C79306) *
                C26496) *
               C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C245 * C96 + C79307 * C246) * C26498 +
            (C245 * C102 + C79307 * C252) * C79306) *
               C26495 +
           (C27144 + C27145) * C26496) *
              C79027 * C5561 -
          ((C27146 + C27147) * C26496 + (C27145 + C27144) * C26495) * C79027 *
              C5562 +
          ((C27147 + C27146) * C26495 + (C31377 + C31378) * C26496) * C79027 *
              C5563 -
          ((C31379 + C31380) * C26496 + (C31378 + C31377) * C26495) * C79027 *
              C5564 +
          ((C31380 + C31379) * C26495 +
           ((C245 * C31259 + C79307 * C31362) * C26498 +
            (C245 * C31260 + C79307 * C31363) * C79306) *
               C26496) *
              C79027 * C5565) *
         C78981) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C245 * C96 + C79307 * C246) * C26498 +
             (C245 * C102 + C79307 * C252) * C79306) *
                C26495 +
            (C27144 + C27145) * C26496) *
               C9011 -
           ((C29915 + C29916) * C26496 +
            ((C245 * C1690 + C79307 * C1914) * C79306 +
             (C245 * C1682 + C79307 * C1906) * C26498) *
                C26495) *
               C9012 +
           (((C245 * C1683 + C79307 * C1907) * C26498 +
             (C245 * C1691 + C79307 * C1915) * C79306) *
                C26495 +
            (C31950 + C31951) * C26496) *
               C79262) *
              C79009 * C79297 +
          (((C1939 * C26498 + C1938 * C79306) * C26495 +
            (C29909 + C29910) * C26496) *
               C9012 -
           ((C27133 + C27132) * C26496 +
            (C276 * C79306 + C275 * C26498) * C26495) *
               C9011 -
           ((C11033 * C79306 + C11034 * C26498) * C26496 +
            (C1941 * C79306 + C1940 * C26498) * C26495) *
               C79262) *
              C79009 * C79281 +
          (((C278 * C26498 + C277 * C79306) * C26495 +
            (C27136 + C27137) * C26496) *
               C9011 -
           ((C29911 + C29912) * C26496 +
            (C1943 * C79306 + C1942 * C26498) * C26495) *
               C9012 +
           ((C1945 * C26498 + C1944 * C79306) * C26495 +
            ((C245 * C10817 + C79307 * C11026) * C26498 +
             (C245 * C10818 + C79307 * C11027) * C79306) *
                C26496) *
               C79262) *
              C79009 * C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C245 * C96 + C79307 * C246) * C26498 +
             (C245 * C102 + C79307 * C252) * C79306) *
                C26495 +
            (C27144 + C27145) * C26496) *
               C9011 -
           ((C29915 + C29916) * C26496 +
            ((C245 * C1690 + C79307 * C1914) * C79306 +
             (C245 * C1682 + C79307 * C1906) * C26498) *
                C26495) *
               C9012 +
           (((C245 * C1683 + C79307 * C1907) * C26498 +
             (C245 * C1691 + C79307 * C1915) * C79306) *
                C26495 +
            (C31950 + C31951) * C26496) *
               C79262) *
              C79300 +
          (((C29916 + C29915) * C26495 + (C31952 + C31953) * C26496) * C9012 -
           ((C27146 + C27147) * C26496 + (C27145 + C27144) * C26495) * C9011 -
           ((C31954 + C31955) * C26496 + (C31951 + C31950) * C26495) * C79262) *
              C79285 +
          (((C27147 + C27146) * C26495 + (C31377 + C31378) * C26496) * C9011 -
           ((C34208 + C34209) * C26496 + (C31953 + C31952) * C26495) * C9012 +
           ((C31955 + C31954) * C26495 +
            ((C245 * C31755 + C79307 * C31929) * C26498 +
             (C245 * C31756 + C79307 * C31930) * C79306) *
                C26496) *
               C79262) *
              C79259) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eeyx[39] += (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   ((((C26498 * C96 + C79306 * C102) * C26551 +
                      (C26498 * C167 + C79306 * C324) * C26495 +
                      C27246 * C26552 + C27247 * C26496) *
                         C79307 * C79027 * C79300 -
                     (C27248 * C26496 + C27249 * C26552 + C27247 * C26495 +
                      C27246 * C26551) *
                         C79307 * C79027 * C79285 +
                     (C27249 * C26551 + C27248 * C26495 +
                      (C26498 * C5568 + C79306 * C5572) * C26552 +
                      (C26498 * C5626 + C79306 * C5726) * C26496) *
                         C79307 * C79027 * C79259) *
                        C745 +
                    ((C27250 * C26551 + C27251 * C26495 + C27252 * C26552 +
                      C27253 * C26496) *
                         C79307 * C79027 * C79285 -
                     (C27251 * C26496 + C27250 * C26552 +
                      (C26498 * C168 + C79306 * C325) * C26495 +
                      (C26498 * C97 + C79306 * C103) * C26551) *
                         C79307 * C79027 * C79300 -
                     ((C26498 * C5625 + C79306 * C5725) * C26496 +
                      (C26498 * C5567 + C79306 * C5571) * C26552 +
                      C27253 * C26495 + C27252 * C26551) *
                         C79307 * C79027 * C79259) *
                        C746 +
                    (((C26498 * C98 + C79306 * C104) * C26551 +
                      (C26498 * C169 + C79306 * C326) * C26495 +
                      C27254 * C26552 + C27255 * C26496) *
                         C79307 * C79027 * C79300 -
                     (C27256 * C26496 + C27257 * C26552 + C27255 * C26495 +
                      C27254 * C26551) *
                         C79307 * C79027 * C79285 +
                     (C27257 * C26551 + C27256 * C26495 +
                      (C26498 * C6801 + C79306 * C6802) * C26552 +
                      (C26498 * C6872 + C79306 * C7020) * C26496) *
                         C79307 * C79027 * C79259) *
                        C79253)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   (((C26498 * C96 + C79306 * C102) * C26551 +
                     (C26498 * C167 + C79306 * C324) * C26495 +
                     (C26498 * C749 + C79306 * C757) * C26552 +
                     (C26498 * C859 + C79306 * C1087) * C26496) *
                        C79307 * C79027 * C79009 * C87 -
                    ((C26498 * C858 + C79306 * C1086) * C26496 +
                     (C26498 * C748 + C79306 * C756) * C26552 +
                     (C26498 * C168 + C79306 * C325) * C26495 +
                     (C26498 * C97 + C79306 * C103) * C26551) *
                        C79307 * C79027 * C79009 * C88 +
                    ((C26498 * C98 + C79306 * C104) * C26551 +
                     (C26498 * C169 + C79306 * C326) * C26495 +
                     (C26498 * C752 + C79306 * C760) * C26552 +
                     (C26498 * C862 + C79306 * C1090) * C26496) *
                        C79307 * C79027 * C79009 * C89 -
                    ((C26498 * C864 + C79306 * C1092) * C26496 +
                     (C26498 * C754 + C79306 * C762) * C26552 +
                     (C26498 * C170 + C79306 * C327) * C26495 +
                     (C26498 * C99 + C79306 * C105) * C26551) *
                        C79307 * C79027 * C79009 * C90 +
                    ((C26498 * C100 + C79306 * C106) * C26551 +
                     (C26498 * C171 + C79306 * C328) * C26495 +
                     (C26498 * C2609 + C79306 * C2610) * C26552 +
                     (C26498 * C2680 + C79306 * C2828) * C26496) *
                        C79307 * C79027 * C79009 * C91)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   ((((C26498 * C96 + C79306 * C102) * C26551 +
                      (C26498 * C167 + C79306 * C324) * C26495 +
                      C27246 * C26552 + C27247 * C26496) *
                         C79307 * C79027 * C4921 -
                     (C27248 * C26496 + C27249 * C26552 + C27247 * C26495 +
                      C27246 * C26551) *
                         C79307 * C79027 * C4922 +
                     (C27249 * C26551 + C27248 * C26495 +
                      (C26498 * C5568 + C79306 * C5572) * C26552 +
                      (C26498 * C5626 + C79306 * C5726) * C26496) *
                         C79307 * C79027 * C79259) *
                        C79297 +
                    ((C27250 * C26551 + C27251 * C26495 + C27252 * C26552 +
                      C27253 * C26496) *
                         C79307 * C79027 * C4922 -
                     (C27251 * C26496 + C27250 * C26552 +
                      (C26498 * C168 + C79306 * C325) * C26495 +
                      (C26498 * C97 + C79306 * C103) * C26551) *
                         C79307 * C79027 * C4921 -
                     ((C26498 * C5625 + C79306 * C5725) * C26496 +
                      (C26498 * C5567 + C79306 * C5571) * C26552 +
                      C27253 * C26495 + C27252 * C26551) *
                         C79307 * C79027 * C79259) *
                        C79281 +
                    (((C26498 * C98 + C79306 * C104) * C26551 +
                      (C26498 * C169 + C79306 * C326) * C26495 +
                      C27254 * C26552 + C27255 * C26496) *
                         C79307 * C79027 * C4921 -
                     (C27256 * C26496 + C27257 * C26552 + C27255 * C26495 +
                      C27254 * C26551) *
                         C79307 * C79027 * C4922 +
                     (C27257 * C26551 + C27256 * C26495 +
                      (C26498 * C6801 + C79306 * C6802) * C26552 +
                      (C26498 * C6872 + C79306 * C7020) * C26496) *
                         C79307 * C79027 * C79259) *
                        C79253)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   (((C26498 * C96 + C79306 * C102) * C26551 +
                     (C26498 * C167 + C79306 * C324) * C26495 +
                     C27246 * C26552 + C27247 * C26496) *
                        C79307 * C79027 * C5561 -
                    (C27248 * C26496 + C27249 * C26552 + C27247 * C26495 +
                     C27246 * C26551) *
                        C79307 * C79027 * C5562 +
                    (C27249 * C26551 + C27248 * C26495 + C31432 * C26552 +
                     C31433 * C26496) *
                        C79307 * C79027 * C5563 -
                    (C31434 * C26496 + C31435 * C26552 + C31433 * C26495 +
                     C31432 * C26551) *
                        C79307 * C79027 * C5564 +
                    (C31435 * C26551 + C31434 * C26495 +
                     (C26498 * C31259 + C79306 * C31260) * C26552 +
                     (C26498 * C31318 + C79306 * C31422) * C26496) *
                        C79307 * C79027 * C5565) *
                   C78981) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C26498 * C96 + C79306 * C102) * C26551 +
                      (C26498 * C167 + C79306 * C324) * C26495 +
                      C27246 * C26552 + C27247 * C26496) *
                         C79307 * C9011 -
                     (C30027 * C26496 + C30028 * C26552 +
                      (C26498 * C1792 + C79306 * C2020) * C26495 +
                      (C26498 * C1682 + C79306 * C1690) * C26551) *
                         C79307 * C9012 +
                     ((C26498 * C1683 + C79306 * C1691) * C26551 +
                      (C26498 * C1793 + C79306 * C2021) * C26495 +
                      C32043 * C26552 + C32044 * C26496) *
                         C79307 * C79262) *
                        C79009 * C79297 +
                    (((C26498 * C1681 + C79306 * C1689) * C26551 +
                      (C26498 * C1791 + C79306 * C2019) * C26495 +
                      C30029 * C26552 + C30030 * C26496) *
                         C79307 * C9012 -
                     (C27251 * C26496 + C27250 * C26552 +
                      (C26498 * C168 + C79306 * C325) * C26495 +
                      (C26498 * C97 + C79306 * C103) * C26551) *
                         C79307 * C9011 -
                     ((C26498 * C6139 + C79306 * C6311) * C26496 +
                      (C26498 * C6041 + C79306 * C6047) * C26552 +
                      (C26498 * C1794 + C79306 * C2022) * C26495 +
                      (C26498 * C1684 + C79306 * C1692) * C26551) *
                         C79307 * C79262) *
                        C79009 * C79281 +
                    (((C26498 * C98 + C79306 * C104) * C26551 +
                      (C26498 * C169 + C79306 * C326) * C26495 +
                      C27254 * C26552 + C27255 * C26496) *
                         C79307 * C9011 -
                     (C30031 * C26496 + C30032 * C26552 +
                      (C26498 * C1795 + C79306 * C2023) * C26495 +
                      (C26498 * C1685 + C79306 * C1693) * C26551) *
                         C79307 * C9012 +
                     ((C26498 * C1686 + C79306 * C1694) * C26551 +
                      (C26498 * C1796 + C79306 * C2024) * C26495 +
                      (C26498 * C10817 + C79306 * C10818) * C26552 +
                      (C26498 * C10920 + C79306 * C11132) * C26496) *
                         C79307 * C79262) *
                        C79009 * C79253)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C26498 * C96 + C79306 * C102) * C26551 +
                      (C26498 * C167 + C79306 * C324) * C26495 +
                      C27246 * C26552 + C27247 * C26496) *
                         C79307 * C9011 -
                     (C30027 * C26496 + C30028 * C26552 +
                      (C26498 * C1792 + C79306 * C2020) * C26495 +
                      (C26498 * C1682 + C79306 * C1690) * C26551) *
                         C79307 * C9012 +
                     ((C26498 * C1683 + C79306 * C1691) * C26551 +
                      (C26498 * C1793 + C79306 * C2021) * C26495 +
                      C32043 * C26552 + C32044 * C26496) *
                         C79307 * C79262) *
                        C79300 +
                    ((C30028 * C26551 + C30027 * C26495 + C32045 * C26552 +
                      C32046 * C26496) *
                         C79307 * C9012 -
                     (C27248 * C26496 + C27249 * C26552 + C27247 * C26495 +
                      C27246 * C26551) *
                         C79307 * C9011 -
                     (C32047 * C26496 + C32048 * C26552 + C32044 * C26495 +
                      C32043 * C26551) *
                         C79307 * C79262) *
                        C79285 +
                    ((C27249 * C26551 + C27248 * C26495 + C31432 * C26552 +
                      C31433 * C26496) *
                         C79307 * C9011 -
                     (C34281 * C26496 + C34282 * C26552 + C32046 * C26495 +
                      C32045 * C26551) *
                         C79307 * C9012 +
                     (C32048 * C26551 + C32047 * C26495 +
                      (C26498 * C31755 + C79306 * C31756) * C26552 +
                      (C26498 * C31853 + C79306 * C32029) * C26496) *
                         C79307 * C79262) *
                        C79259) *
                   C78981) /
                      (p * q * std::sqrt(p + q));
    d2eeyy[39] += (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   (((C26679 * C96 + C26682 + C26682 + C26495 * C373 +
                      C26680 * C749 + C26683 + C26683 + C26496 * C1169) *
                         C79306 * C79307 * C79027 * C79300 -
                     (C26680 * C750 + C27332 + C27332 + C26496 * C1170 +
                      C26679 * C749 + C27333 + C27333 + C26495 * C1169) *
                         C79306 * C79307 * C79027 * C79285 +
                     (C26679 * C750 + C27334 + C27334 + C26495 * C1170 +
                      C26680 * C5568 + C27335 + C27335 + C26496 * C5772) *
                         C79306 * C79307 * C79027 * C79259) *
                        C745 +
                    ((C26679 * C748 + C27336 + C27336 + C26495 * C1168 +
                      C26680 * C751 + C27337 + C27337 + C26496 * C1171) *
                         C79306 * C79307 * C79027 * C79285 -
                     (C26680 * C748 + C26684 + C26684 + C26496 * C1168 +
                      C26679 * C97 + C26685 + C26685 + C26495 * C374) *
                         C79306 * C79307 * C79027 * C79300 -
                     (C26680 * C5567 + C27338 + C27338 + C26496 * C5771 +
                      C26679 * C751 + C27339 + C27339 + C26495 * C1171) *
                         C79306 * C79307 * C79027 * C79259) *
                        C746 +
                    ((C26679 * C98 + C26686 + C26686 + C26495 * C375 +
                      C26680 * C752 + C26687 + C26687 + C26496 * C1172) *
                         C79306 * C79307 * C79027 * C79300 -
                     (C26680 * C753 + C27340 + C27340 + C26496 * C1173 +
                      C26679 * C752 + C27341 + C27341 + C26495 * C1172) *
                         C79306 * C79307 * C79027 * C79285 +
                     (C26679 * C753 + C27342 + C27342 + C26495 * C1173 +
                      C26680 * C6801 + C27343 + C27343 + C26496 * C7087) *
                         C79306 * C79307 * C79027 * C79259) *
                        C79253)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   ((C26679 * C96 + C26682 + C26682 + C26495 * C373 +
                     C26680 * C749 + C26683 + C26683 + C26496 * C1169) *
                        C79306 * C79307 * C79027 * C79009 * C87 -
                    (C26680 * C748 + C26684 + C26684 + C26496 * C1168 +
                     C26679 * C97 + C26685 + C26685 + C26495 * C374) *
                        C79306 * C79307 * C79027 * C79009 * C88 +
                    (C26679 * C98 + C26686 + C26686 + C26495 * C375 +
                     C26680 * C752 + C26687 + C26687 + C26496 * C1172) *
                        C79306 * C79307 * C79027 * C79009 * C89 -
                    (C26680 * C754 + C26688 + C26688 + C26496 * C1174 +
                     C26679 * C99 + C26689 + C26689 + C26495 * C376) *
                        C79306 * C79307 * C79027 * C79009 * C90 +
                    (C26679 * C100 + C26690 + C26690 + C26495 * C377 +
                     C26680 * C2609 + C26691 + C26691 + C26496 * C2895) *
                        C79306 * C79307 * C79027 * C79009 * C91)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   (((C26679 * C96 + C26682 + C26682 + C26495 * C373 +
                      C26680 * C749 + C26683 + C26683 + C26496 * C1169) *
                         C79306 * C79307 * C79027 * C4921 -
                     (C26680 * C750 + C27332 + C27332 + C26496 * C1170 +
                      C26679 * C749 + C27333 + C27333 + C26495 * C1169) *
                         C79306 * C79307 * C79027 * C4922 +
                     (C26679 * C750 + C27334 + C27334 + C26495 * C1170 +
                      C26680 * C5568 + C27335 + C27335 + C26496 * C5772) *
                         C79306 * C79307 * C79027 * C79259) *
                        C79297 +
                    ((C26679 * C748 + C27336 + C27336 + C26495 * C1168 +
                      C26680 * C751 + C27337 + C27337 + C26496 * C1171) *
                         C79306 * C79307 * C79027 * C4922 -
                     (C26680 * C748 + C26684 + C26684 + C26496 * C1168 +
                      C26679 * C97 + C26685 + C26685 + C26495 * C374) *
                         C79306 * C79307 * C79027 * C4921 -
                     (C26680 * C5567 + C27338 + C27338 + C26496 * C5771 +
                      C26679 * C751 + C27339 + C27339 + C26495 * C1171) *
                         C79306 * C79307 * C79027 * C79259) *
                        C79281 +
                    ((C26679 * C98 + C26686 + C26686 + C26495 * C375 +
                      C26680 * C752 + C26687 + C26687 + C26496 * C1172) *
                         C79306 * C79307 * C79027 * C4921 -
                     (C26680 * C753 + C27340 + C27340 + C26496 * C1173 +
                      C26679 * C752 + C27341 + C27341 + C26495 * C1172) *
                         C79306 * C79307 * C79027 * C4922 +
                     (C26679 * C753 + C27342 + C27342 + C26495 * C1173 +
                      C26680 * C6801 + C27343 + C27343 + C26496 * C7087) *
                         C79306 * C79307 * C79027 * C79259) *
                        C79253)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   ((C26679 * C96 + C26682 + C26682 + C26495 * C373 +
                     C26680 * C749 + C26683 + C26683 + C26496 * C1169) *
                        C79306 * C79307 * C79027 * C5561 -
                    (C26680 * C750 + C27332 + C27332 + C26496 * C1170 +
                     C26679 * C749 + C27333 + C27333 + C26495 * C1169) *
                        C79306 * C79307 * C79027 * C5562 +
                    (C26679 * C750 + C27334 + C27334 + C26495 * C1170 +
                     C26680 * C5568 + C27335 + C27335 + C26496 * C5772) *
                        C79306 * C79307 * C79027 * C5563 -
                    (C26680 * C5569 + C31479 + C31479 + C26496 * C5773 +
                     C26679 * C5568 + C31480 + C31480 + C26495 * C5772) *
                        C79306 * C79307 * C79027 * C5564 +
                    (C26679 * C5569 + C31481 + C31481 + C26495 * C5773 +
                     C26680 * C31259 + C31482 + C31482 + C26496 * C31477) *
                        C79306 * C79307 * C79027 * C5565) *
                   C78981) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C26679 * C96 + C26682 + C26682 + C26495 * C373 +
                      C26680 * C749 + C26683 + C26683 + C26496 * C1169) *
                         C79306 * C79307 * C9011 -
                     (C26680 * C3931 + C28068 + C28068 + C26496 * C4385 +
                      C26679 * C1682 + C28069 + C28069 + C26495 * C2102) *
                         C79306 * C79307 * C9012 +
                     (C26679 * C1683 + C28070 + C28070 + C26495 * C2103 +
                      C26680 * C6042 + C28071 + C28071 + C26496 * C6392) *
                         C79306 * C79307 * C79262) *
                        C79009 * C79297 +
                    ((C26679 * C1681 + C28072 + C28072 + C26495 * C2101 +
                      C26680 * C3932 + C28073 + C28073 + C26496 * C4386) *
                         C79306 * C79307 * C9012 -
                     (C26680 * C748 + C26684 + C26684 + C26496 * C1168 +
                      C26679 * C97 + C26685 + C26685 + C26495 * C374) *
                         C79306 * C79307 * C9011 -
                     (C26680 * C6041 + C28074 + C28074 + C26496 * C6391 +
                      C26679 * C1684 + C28075 + C28075 + C26495 * C2104) *
                         C79306 * C79307 * C79262) *
                        C79009 * C79281 +
                    ((C26679 * C98 + C26686 + C26686 + C26495 * C375 +
                      C26680 * C752 + C26687 + C26687 + C26496 * C1172) *
                         C79306 * C79307 * C9011 -
                     (C26680 * C3933 + C28076 + C28076 + C26496 * C4387 +
                      C26679 * C1685 + C28077 + C28077 + C26495 * C2105) *
                         C79306 * C79307 * C9012 +
                     (C26679 * C1686 + C28078 + C28078 + C26495 * C2106 +
                      C26680 * C10817 + C28079 + C28079 + C26496 * C11231) *
                         C79306 * C79307 * C79262) *
                        C79009 * C79253)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C26679 * C96 + C26682 + C26682 + C26495 * C373 +
                      C26680 * C749 + C26683 + C26683 + C26496 * C1169) *
                         C79306 * C79307 * C9011 -
                     (C26680 * C3931 + C28068 + C28068 + C26496 * C4385 +
                      C26679 * C1682 + C28069 + C28069 + C26495 * C2102) *
                         C79306 * C79307 * C9012 +
                     (C26679 * C1683 + C28070 + C28070 + C26495 * C2103 +
                      C26680 * C6042 + C28071 + C28071 + C26496 * C6392) *
                         C79306 * C79307 * C79262) *
                        C79300 +
                    ((C26679 * C3931 + C30131 + C30131 + C26495 * C4385 +
                      C26680 * C6044 + C30132 + C30132 + C26496 * C6394) *
                         C79306 * C79307 * C9012 -
                     (C26680 * C750 + C27332 + C27332 + C26496 * C1170 +
                      C26679 * C749 + C27333 + C27333 + C26495 * C1169) *
                         C79306 * C79307 * C9011 -
                     (C26680 * C6045 + C32124 + C32124 + C26496 * C6395 +
                      C26679 * C6042 + C32125 + C32125 + C26495 * C6392) *
                         C79306 * C79307 * C79262) *
                        C79285 +
                    ((C26679 * C750 + C27334 + C27334 + C26495 * C1170 +
                      C26680 * C5568 + C27335 + C27335 + C26496 * C5772) *
                         C79306 * C79307 * C9011 -
                     (C26680 * C8377 + C32126 + C32126 + C26496 * C8659 +
                      C26679 * C6044 + C32127 + C32127 + C26495 * C6394) *
                         C79306 * C79307 * C9012 +
                     (C26679 * C6045 + C32128 + C32128 + C26495 * C6395 +
                      C26680 * C31755 + C32129 + C32129 + C26496 * C32122) *
                         C79306 * C79307 * C79262) *
                        C79259) *
                   C78981) /
                      (p * q * std::sqrt(p + q));
    d2eeyz[39] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C245 * C96 + C79307 * C246) * C26551 +
            (C245 * C167 + C79307 * C447) * C26495 + C27140 * C26552 +
            C27422 * C26496) *
               C79306 * C79027 * C79300 -
           (C27423 * C26496 + C27143 * C26552 + C27422 * C26495 +
            C27140 * C26551) *
               C79306 * C79027 * C79285 +
           (C27143 * C26551 + C27423 * C26495 +
            (C245 * C5568 + C79307 * C5676) * C26552 +
            (C245 * C5626 + C79307 * C5822) * C26496) *
               C79306 * C79027 * C79259) *
              C745 +
          ((C1006 * C26551 + C1299 * C26495 + C1007 * C26552 + C1300 * C26496) *
               C79306 * C79027 * C79285 -
           (C1299 * C26496 + C1006 * C26552 + C466 * C26495 + C275 * C26551) *
               C79306 * C79027 * C79300 -
           (C7165 * C26496 + C6954 * C26552 + C1300 * C26495 + C1007 * C26551) *
               C79306 * C79027 * C79259) *
              C746 +
          ((C278 * C26551 + C467 * C26495 + C1009 * C26552 + C1301 * C26496) *
               C79306 * C79027 * C79300 -
           (C1302 * C26496 + C1012 * C26552 + C1301 * C26495 + C1009 * C26551) *
               C79306 * C79027 * C79285 +
           (C1012 * C26551 + C1302 * C26495 +
            (C245 * C6801 + C79307 * C6946) * C26552 +
            (C245 * C6872 + C79307 * C7160) * C26496) *
               C79306 * C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C245 * C96 + C79307 * C246) * C26551 +
           (C245 * C167 + C79307 * C447) * C26495 +
           (C245 * C749 + C79307 * C973) * C26552 +
           (C245 * C859 + C79307 * C1279) * C26496) *
              C79306 * C79027 * C79009 * C87 -
          (C1299 * C26496 + C1006 * C26552 + C466 * C26495 + C275 * C26551) *
              C79306 * C79027 * C79009 * C88 +
          (C278 * C26551 + C467 * C26495 + C1009 * C26552 + C1301 * C26496) *
              C79306 * C79027 * C79009 * C89 -
          (C2973 * C26496 + C2762 * C26552 + C468 * C26495 + C279 * C26551) *
              C79306 * C79027 * C79009 * C90 +
          (C282 * C26551 + C469 * C26495 +
           (C245 * C2609 + C79307 * C2754) * C26552 +
           (C245 * C2680 + C79307 * C2968) * C26496) *
              C79306 * C79027 * C79009 * C91)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C245 * C96 + C79307 * C246) * C26551 +
            (C245 * C167 + C79307 * C447) * C26495 + C27140 * C26552 +
            C27422 * C26496) *
               C79306 * C79027 * C4921 -
           (C27423 * C26496 + C27143 * C26552 + C27422 * C26495 +
            C27140 * C26551) *
               C79306 * C79027 * C4922 +
           (C27143 * C26551 + C27423 * C26495 +
            (C245 * C5568 + C79307 * C5676) * C26552 +
            (C245 * C5626 + C79307 * C5822) * C26496) *
               C79306 * C79027 * C79259) *
              C79297 +
          ((C1006 * C26551 + C1299 * C26495 + C1007 * C26552 + C1300 * C26496) *
               C79306 * C79027 * C4922 -
           (C1299 * C26496 + C1006 * C26552 + C466 * C26495 + C275 * C26551) *
               C79306 * C79027 * C4921 -
           (C7165 * C26496 + C6954 * C26552 + C1300 * C26495 + C1007 * C26551) *
               C79306 * C79027 * C79259) *
              C79281 +
          ((C278 * C26551 + C467 * C26495 + C1009 * C26552 + C1301 * C26496) *
               C79306 * C79027 * C4921 -
           (C1302 * C26496 + C1012 * C26552 + C1301 * C26495 + C1009 * C26551) *
               C79306 * C79027 * C4922 +
           (C1012 * C26551 + C1302 * C26495 +
            (C245 * C6801 + C79307 * C6946) * C26552 +
            (C245 * C6872 + C79307 * C7160) * C26496) *
               C79306 * C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C245 * C96 + C79307 * C246) * C26551 +
           (C245 * C167 + C79307 * C447) * C26495 + C27140 * C26552 +
           C27422 * C26496) *
              C79306 * C79027 * C5561 -
          (C27423 * C26496 + C27143 * C26552 + C27422 * C26495 +
           C27140 * C26551) *
              C79306 * C79027 * C5562 +
          (C27143 * C26551 + C27423 * C26495 + C31373 * C26552 +
           C31530 * C26496) *
              C79306 * C79027 * C5563 -
          (C31531 * C26496 + C31376 * C26552 + C31530 * C26495 +
           C31373 * C26551) *
              C79306 * C79027 * C5564 +
          (C31376 * C26551 + C31531 * C26495 +
           (C245 * C31259 + C79307 * C31362) * C26552 +
           (C245 * C31318 + C79307 * C31524) * C26496) *
              C79306 * C79027 * C5565) *
         C78981) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C245 * C96 + C79307 * C246) * C26551 +
            (C245 * C167 + C79307 * C447) * C26495 + C27140 * C26552 +
            C27422 * C26496) *
               C79306 * C9011 -
           (C30237 * C26496 + C29914 * C26552 +
            (C245 * C1792 + C79307 * C2212) * C26495 +
            (C245 * C1682 + C79307 * C1906) * C26551) *
               C79306 * C9012 +
           ((C245 * C1683 + C79307 * C1907) * C26551 +
            (C245 * C1793 + C79307 * C2213) * C26495 + C31944 * C26552 +
            C32211 * C26496) *
               C79306 * C79262) *
              C79009 * C79297 +
          ((C1939 * C26551 + C2232 * C26495 + C4182 * C26552 + C4512 * C26496) *
               C79306 * C9012 -
           (C1299 * C26496 + C1006 * C26552 + C466 * C26495 + C275 * C26551) *
               C79306 * C9011 -
           (C11341 * C26496 + C11034 * C26552 + C2233 * C26495 +
            C1940 * C26551) *
               C79306 * C79262) *
              C79009 * C79281 +
          ((C278 * C26551 + C467 * C26495 + C1009 * C26552 + C1301 * C26496) *
               C79306 * C9011 -
           (C4513 * C26496 + C4185 * C26552 + C2234 * C26495 + C1942 * C26551) *
               C79306 * C9012 +
           (C1945 * C26551 + C2235 * C26495 +
            (C245 * C10817 + C79307 * C11026) * C26552 +
            (C245 * C10920 + C79307 * C11336) * C26496) *
               C79306 * C79262) *
              C79009 * C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C245 * C96 + C79307 * C246) * C26551 +
            (C245 * C167 + C79307 * C447) * C26495 + C27140 * C26552 +
            C27422 * C26496) *
               C79306 * C9011 -
           (C30237 * C26496 + C29914 * C26552 +
            (C245 * C1792 + C79307 * C2212) * C26495 +
            (C245 * C1682 + C79307 * C1906) * C26551) *
               C79306 * C9012 +
           ((C245 * C1683 + C79307 * C1907) * C26551 +
            (C245 * C1793 + C79307 * C2213) * C26495 + C31944 * C26552 +
            C32211 * C26496) *
               C79306 * C79262) *
              C79300 +
          ((C29914 * C26551 + C30237 * C26495 + C31946 * C26552 +
            C32212 * C26496) *
               C79306 * C9012 -
           (C27423 * C26496 + C27143 * C26552 + C27422 * C26495 +
            C27140 * C26551) *
               C79306 * C9011 -
           (C32213 * C26496 + C31949 * C26552 + C32211 * C26495 +
            C31944 * C26551) *
               C79306 * C79262) *
              C79285 +
          ((C27143 * C26551 + C27423 * C26495 + C31373 * C26552 +
            C31530 * C26496) *
               C79306 * C9011 -
           (C34421 * C26496 + C34207 * C26552 + C32212 * C26495 +
            C31946 * C26551) *
               C79306 * C9012 +
           (C31949 * C26551 + C32213 * C26495 +
            (C245 * C31755 + C79307 * C31929) * C26552 +
            (C245 * C31853 + C79307 * C32203) * C26496) *
               C79306 * C79262) *
              C79259) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eezx[39] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C26498 * C96 + C79306 * C102) * C245 +
             (C26498 * C246 + C79306 * C515) * C79307) *
                C26495 +
            (C27498 + C27522) * C26496) *
               C79027 * C79300 -
           ((C27523 + C27503) * C26496 + (C27522 + C27498) * C26495) * C79027 *
               C79285 +
           ((C27503 + C27523) * C26495 +
            ((C26498 * C5568 + C79306 * C5572) * C245 +
             (C26498 * C5676 + C79306 * C5868) * C79307) *
                C26496) *
               C79027 * C79259) *
              C745 +
          (((C27504 + C27524) * C26495 + (C27507 + C27525) * C26496) * C79027 *
               C79285 -
           ((C27524 + C27504) * C26496 +
            ((C26498 * C247 + C79306 * C516) * C79307 +
             (C26498 * C97 + C79306 * C103) * C245) *
                C26495) *
               C79027 * C79300 -
           (((C26498 * C5675 + C79306 * C5867) * C79307 +
             (C26498 * C5567 + C79306 * C5571) * C245) *
                C26496 +
            (C27525 + C27507) * C26495) *
               C79027 * C79259) *
              C746 +
          ((((C26498 * C98 + C79306 * C104) * C245 +
             (C26498 * C248 + C79306 * C517) * C79307) *
                C26495 +
            (C27510 + C27526) * C26496) *
               C79027 * C79300 -
           ((C27527 + C27515) * C26496 + (C27526 + C27510) * C26495) * C79027 *
               C79285 +
           ((C27515 + C27527) * C26495 +
            ((C26498 * C6801 + C79306 * C6802) * C245 +
             (C26498 * C6946 + C79306 * C7232) * C79307) *
                C26496) *
               C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C26498 * C96 + C79306 * C102) * C245 +
            (C26498 * C246 + C79306 * C515) * C79307) *
               C26495 +
           ((C26498 * C749 + C79306 * C757) * C245 +
            (C26498 * C973 + C79306 * C1381) * C79307) *
               C26496) *
              C79027 * C79009 * C87 -
          (((C26498 * C972 + C79306 * C1380) * C79307 +
            (C26498 * C748 + C79306 * C756) * C245) *
               C26496 +
           ((C26498 * C247 + C79306 * C516) * C79307 +
            (C26498 * C97 + C79306 * C103) * C245) *
               C26495) *
              C79027 * C79009 * C88 +
          (((C26498 * C98 + C79306 * C104) * C245 +
            (C26498 * C248 + C79306 * C517) * C79307) *
               C26495 +
           ((C26498 * C752 + C79306 * C760) * C245 +
            (C26498 * C976 + C79306 * C1384) * C79307) *
               C26496) *
              C79027 * C79009 * C89 -
          (((C26498 * C978 + C79306 * C1386) * C79307 +
            (C26498 * C754 + C79306 * C762) * C245) *
               C26496 +
           ((C26498 * C249 + C79306 * C518) * C79307 +
            (C26498 * C99 + C79306 * C105) * C245) *
               C26495) *
              C79027 * C79009 * C90 +
          (((C26498 * C100 + C79306 * C106) * C245 +
            (C26498 * C250 + C79306 * C519) * C79307) *
               C26495 +
           ((C26498 * C2609 + C79306 * C2610) * C245 +
            (C26498 * C2754 + C79306 * C3040) * C79307) *
               C26496) *
              C79027 * C79009 * C91)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C26498 * C96 + C79306 * C102) * C245 +
             (C26498 * C246 + C79306 * C515) * C79307) *
                C26495 +
            (C27498 + C27522) * C26496) *
               C79027 * C4921 -
           ((C27523 + C27503) * C26496 + (C27522 + C27498) * C26495) * C79027 *
               C4922 +
           ((C27503 + C27523) * C26495 +
            ((C26498 * C5568 + C79306 * C5572) * C245 +
             (C26498 * C5676 + C79306 * C5868) * C79307) *
                C26496) *
               C79027 * C79259) *
              C79297 +
          (((C27504 + C27524) * C26495 + (C27507 + C27525) * C26496) * C79027 *
               C4922 -
           ((C27524 + C27504) * C26496 +
            ((C26498 * C247 + C79306 * C516) * C79307 +
             (C26498 * C97 + C79306 * C103) * C245) *
                C26495) *
               C79027 * C4921 -
           (((C26498 * C5675 + C79306 * C5867) * C79307 +
             (C26498 * C5567 + C79306 * C5571) * C245) *
                C26496 +
            (C27525 + C27507) * C26495) *
               C79027 * C79259) *
              C79281 +
          ((((C26498 * C98 + C79306 * C104) * C245 +
             (C26498 * C248 + C79306 * C517) * C79307) *
                C26495 +
            (C27510 + C27526) * C26496) *
               C79027 * C4921 -
           ((C27527 + C27515) * C26496 + (C27526 + C27510) * C26495) * C79027 *
               C4922 +
           ((C27515 + C27527) * C26495 +
            ((C26498 * C6801 + C79306 * C6802) * C245 +
             (C26498 * C6946 + C79306 * C7232) * C79307) *
                C26496) *
               C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C26498 * C96 + C79306 * C102) * C245 +
            (C26498 * C246 + C79306 * C515) * C79307) *
               C26495 +
           (C27498 + C27522) * C26496) *
              C79027 * C5561 -
          ((C27523 + C27503) * C26496 + (C27522 + C27498) * C26495) * C79027 *
              C5562 +
          ((C27503 + C27523) * C26495 + (C31575 + C31583) * C26496) * C79027 *
              C5563 -
          ((C31584 + C31580) * C26496 + (C31583 + C31575) * C26495) * C79027 *
              C5564 +
          ((C31580 + C31584) * C26495 +
           ((C26498 * C31259 + C79306 * C31260) * C245 +
            (C26498 * C31362 + C79306 * C31573) * C79307) *
               C26496) *
              C79027 * C5565) *
         C78981) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C26498 * C96 + C79306 * C102) * C245 +
             (C26498 * C246 + C79306 * C515) * C79307) *
                C26495 +
            (C27498 + C27522) * C26496) *
               C9011 -
           ((C30348 + C30338) * C26496 +
            ((C26498 * C1906 + C79306 * C2314) * C79307 +
             (C26498 * C1682 + C79306 * C1690) * C245) *
                C26495) *
               C9012 +
           (((C26498 * C1683 + C79306 * C1691) * C245 +
             (C26498 * C1907 + C79306 * C2315) * C79307) *
                C26495 +
            (C32289 + C32301) * C26496) *
               C79262) *
              C79009 * C79297 +
          ((((C26498 * C1681 + C79306 * C1689) * C245 +
             (C26498 * C1905 + C79306 * C2313) * C79307) *
                C26495 +
            (C30339 + C30349) * C26496) *
               C9012 -
           ((C27524 + C27504) * C26496 +
            ((C26498 * C247 + C79306 * C516) * C79307 +
             (C26498 * C97 + C79306 * C103) * C245) *
                C26495) *
               C9011 -
           (((C26498 * C6225 + C79306 * C6557) * C79307 +
             (C26498 * C6041 + C79306 * C6047) * C245) *
                C26496 +
            ((C26498 * C1908 + C79306 * C2316) * C79307 +
             (C26498 * C1684 + C79306 * C1692) * C245) *
                C26495) *
               C79262) *
              C79009 * C79281 +
          ((((C26498 * C98 + C79306 * C104) * C245 +
             (C26498 * C248 + C79306 * C517) * C79307) *
                C26495 +
            (C27510 + C27526) * C26496) *
               C9011 -
           ((C30350 + C30344) * C26496 +
            ((C26498 * C1909 + C79306 * C2317) * C79307 +
             (C26498 * C1685 + C79306 * C1693) * C245) *
                C26495) *
               C9012 +
           (((C26498 * C1686 + C79306 * C1694) * C245 +
             (C26498 * C1910 + C79306 * C2318) * C79307) *
                C26495 +
            ((C26498 * C10817 + C79306 * C10818) * C245 +
             (C26498 * C11026 + C79306 * C11440) * C79307) *
                C26496) *
               C79262) *
              C79009 * C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C26498 * C96 + C79306 * C102) * C245 +
             (C26498 * C246 + C79306 * C515) * C79307) *
                C26495 +
            (C27498 + C27522) * C26496) *
               C9011 -
           ((C30348 + C30338) * C26496 +
            ((C26498 * C1906 + C79306 * C2314) * C79307 +
             (C26498 * C1682 + C79306 * C1690) * C245) *
                C26495) *
               C9012 +
           (((C26498 * C1683 + C79306 * C1691) * C245 +
             (C26498 * C1907 + C79306 * C2315) * C79307) *
                C26495 +
            (C32289 + C32301) * C26496) *
               C79262) *
              C79300 +
          (((C30338 + C30348) * C26495 + (C32292 + C32302) * C26496) * C9012 -
           ((C27523 + C27503) * C26496 + (C27522 + C27498) * C26495) * C9011 -
           ((C32303 + C32297) * C26496 + (C32301 + C32289) * C26495) * C79262) *
              C79285 +
          (((C27503 + C27523) * C26495 + (C31575 + C31583) * C26496) * C9011 -
           ((C34493 + C34491) * C26496 + (C32302 + C32292) * C26495) * C9012 +
           ((C32297 + C32303) * C26495 +
            ((C26498 * C31755 + C79306 * C31756) * C245 +
             (C26498 * C31929 + C79306 * C32287) * C79307) *
                C26496) *
               C79262) *
              C79259) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eezy[39] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
                C245 +
            (C26551 * C246 + C26495 * C563 + C26552 * C973 + C26496 * C1463) *
                C79307) *
               C79306 * C79027 * C79300 -
           ((C26552 * C974 + C26496 * C1464 + C26551 * C973 + C26495 * C1463) *
                C79307 +
            (C26552 * C750 + C26496 * C860 + C26551 * C749 + C26495 * C859) *
                C245) *
               C79306 * C79027 * C79285 +
           ((C26551 * C750 + C26495 * C860 + C26552 * C5568 + C26496 * C5626) *
                C245 +
            (C26551 * C974 + C26495 * C1464 + C26552 * C5676 + C26496 * C5914) *
                C79307) *
               C79306 * C79027 * C79259) *
              C745 +
          (((C26551 * C748 + C26495 * C858 + C26552 * C751 + C26496 * C861) *
                C245 +
            (C26551 * C972 + C26495 * C1462 + C26552 * C975 + C26496 * C1465) *
                C79307) *
               C79306 * C79027 * C79285 -
           ((C26552 * C972 + C26496 * C1462 + C26551 * C247 + C26495 * C564) *
                C79307 +
            (C26552 * C748 + C26496 * C858 + C26551 * C97 + C26495 * C168) *
                C245) *
               C79306 * C79027 * C79300 -
           ((C26552 * C5675 + C26496 * C5913 + C26551 * C975 + C26495 * C1465) *
                C79307 +
            (C26552 * C5567 + C26496 * C5625 + C26551 * C751 + C26495 * C861) *
                C245) *
               C79306 * C79027 * C79259) *
              C746 +
          (((C26551 * C98 + C26495 * C169 + C26552 * C752 + C26496 * C862) *
                C245 +
            (C26551 * C248 + C26495 * C565 + C26552 * C976 + C26496 * C1466) *
                C79307) *
               C79306 * C79027 * C79300 -
           ((C26552 * C977 + C26496 * C1467 + C26551 * C976 + C26495 * C1466) *
                C79307 +
            (C26552 * C753 + C26496 * C863 + C26551 * C752 + C26495 * C862) *
                C245) *
               C79306 * C79027 * C79285 +
           ((C26551 * C753 + C26495 * C863 + C26552 * C6801 + C26496 * C6872) *
                C245 +
            (C26551 * C977 + C26495 * C1467 + C26552 * C6946 + C26496 * C7299) *
                C79307) *
               C79306 * C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
               C245 +
           (C26551 * C246 + C26495 * C563 + C26552 * C973 + C26496 * C1463) *
               C79307) *
              C79306 * C79027 * C79009 * C87 -
          ((C26552 * C972 + C26496 * C1462 + C26551 * C247 + C26495 * C564) *
               C79307 +
           (C26552 * C748 + C26496 * C858 + C26551 * C97 + C26495 * C168) *
               C245) *
              C79306 * C79027 * C79009 * C88 +
          ((C26551 * C98 + C26495 * C169 + C26552 * C752 + C26496 * C862) *
               C245 +
           (C26551 * C248 + C26495 * C565 + C26552 * C976 + C26496 * C1466) *
               C79307) *
              C79306 * C79027 * C79009 * C89 -
          ((C26552 * C978 + C26496 * C1468 + C26551 * C249 + C26495 * C566) *
               C79307 +
           (C26552 * C754 + C26496 * C864 + C26551 * C99 + C26495 * C170) *
               C245) *
              C79306 * C79027 * C79009 * C90 +
          ((C26551 * C100 + C26495 * C171 + C26552 * C2609 + C26496 * C2680) *
               C245 +
           (C26551 * C250 + C26495 * C567 + C26552 * C2754 + C26496 * C3107) *
               C79307) *
              C79306 * C79027 * C79009 * C91)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
                C245 +
            (C26551 * C246 + C26495 * C563 + C26552 * C973 + C26496 * C1463) *
                C79307) *
               C79306 * C79027 * C4921 -
           ((C26552 * C974 + C26496 * C1464 + C26551 * C973 + C26495 * C1463) *
                C79307 +
            (C26552 * C750 + C26496 * C860 + C26551 * C749 + C26495 * C859) *
                C245) *
               C79306 * C79027 * C4922 +
           ((C26551 * C750 + C26495 * C860 + C26552 * C5568 + C26496 * C5626) *
                C245 +
            (C26551 * C974 + C26495 * C1464 + C26552 * C5676 + C26496 * C5914) *
                C79307) *
               C79306 * C79027 * C79259) *
              C79297 +
          (((C26551 * C748 + C26495 * C858 + C26552 * C751 + C26496 * C861) *
                C245 +
            (C26551 * C972 + C26495 * C1462 + C26552 * C975 + C26496 * C1465) *
                C79307) *
               C79306 * C79027 * C4922 -
           ((C26552 * C972 + C26496 * C1462 + C26551 * C247 + C26495 * C564) *
                C79307 +
            (C26552 * C748 + C26496 * C858 + C26551 * C97 + C26495 * C168) *
                C245) *
               C79306 * C79027 * C4921 -
           ((C26552 * C5675 + C26496 * C5913 + C26551 * C975 + C26495 * C1465) *
                C79307 +
            (C26552 * C5567 + C26496 * C5625 + C26551 * C751 + C26495 * C861) *
                C245) *
               C79306 * C79027 * C79259) *
              C79281 +
          (((C26551 * C98 + C26495 * C169 + C26552 * C752 + C26496 * C862) *
                C245 +
            (C26551 * C248 + C26495 * C565 + C26552 * C976 + C26496 * C1466) *
                C79307) *
               C79306 * C79027 * C4921 -
           ((C26552 * C977 + C26496 * C1467 + C26551 * C976 + C26495 * C1466) *
                C79307 +
            (C26552 * C753 + C26496 * C863 + C26551 * C752 + C26495 * C862) *
                C245) *
               C79306 * C79027 * C4922 +
           ((C26551 * C753 + C26495 * C863 + C26552 * C6801 + C26496 * C6872) *
                C245 +
            (C26551 * C977 + C26495 * C1467 + C26552 * C6946 + C26496 * C7299) *
                C79307) *
               C79306 * C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
               C245 +
           (C26551 * C246 + C26495 * C563 + C26552 * C973 + C26496 * C1463) *
               C79307) *
              C79306 * C79027 * C5561 -
          ((C26552 * C974 + C26496 * C1464 + C26551 * C973 + C26495 * C1463) *
               C79307 +
           (C26552 * C750 + C26496 * C860 + C26551 * C749 + C26495 * C859) *
               C245) *
              C79306 * C79027 * C5562 +
          ((C26551 * C750 + C26495 * C860 + C26552 * C5568 + C26496 * C5626) *
               C245 +
           (C26551 * C974 + C26495 * C1464 + C26552 * C5676 + C26496 * C5914) *
               C79307) *
              C79306 * C79027 * C5563 -
          ((C26552 * C5677 + C26496 * C5915 + C26551 * C5676 + C26495 * C5914) *
               C79307 +
           (C26552 * C5569 + C26496 * C5627 + C26551 * C5568 + C26495 * C5626) *
               C245) *
              C79306 * C79027 * C5564 +
          ((C26551 * C5569 + C26495 * C5627 + C26552 * C31259 +
            C26496 * C31318) *
               C245 +
           (C26551 * C5677 + C26495 * C5915 + C26552 * C31362 +
            C26496 * C31626) *
               C79307) *
              C79306 * C79027 * C5565) *
         C78981) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
                C245 +
            (C26551 * C246 + C26495 * C563 + C26552 * C973 + C26496 * C1463) *
                C79307) *
               C79306 * C9011 -
           ((C26552 * C4165 + C26496 * C4715 + C26551 * C1906 +
             C26495 * C2396) *
                C79307 +
            (C26552 * C3931 + C26496 * C4047 + C26551 * C1682 +
             C26495 * C1792) *
                C245) *
               C79306 * C9012 +
           ((C26551 * C1683 + C26495 * C1793 + C26552 * C6042 +
             C26496 * C6140) *
                C245 +
            (C26551 * C1907 + C26495 * C2397 + C26552 * C6226 +
             C26496 * C6638) *
                C79307) *
               C79306 * C79262) *
              C79009 * C79297 +
          (((C26551 * C1681 + C26495 * C1791 + C26552 * C3932 +
             C26496 * C4048) *
                C245 +
            (C26551 * C1905 + C26495 * C2395 + C26552 * C4166 +
             C26496 * C4716) *
                C79307) *
               C79306 * C9012 -
           ((C26552 * C972 + C26496 * C1462 + C26551 * C247 + C26495 * C564) *
                C79307 +
            (C26552 * C748 + C26496 * C858 + C26551 * C97 + C26495 * C168) *
                C245) *
               C79306 * C9011 -
           ((C26552 * C6225 + C26496 * C6637 + C26551 * C1908 +
             C26495 * C2398) *
                C79307 +
            (C26552 * C6041 + C26496 * C6139 + C26551 * C1684 +
             C26495 * C1794) *
                C245) *
               C79306 * C79262) *
              C79009 * C79281 +
          (((C26551 * C98 + C26495 * C169 + C26552 * C752 + C26496 * C862) *
                C245 +
            (C26551 * C248 + C26495 * C565 + C26552 * C976 + C26496 * C1466) *
                C79307) *
               C79306 * C9011 -
           ((C26552 * C4167 + C26496 * C4717 + C26551 * C1909 +
             C26495 * C2399) *
                C79307 +
            (C26552 * C3933 + C26496 * C4049 + C26551 * C1685 +
             C26495 * C1795) *
                C245) *
               C79306 * C9012 +
           ((C26551 * C1686 + C26495 * C1796 + C26552 * C10817 +
             C26496 * C10920) *
                C245 +
            (C26551 * C1910 + C26495 * C2400 + C26552 * C11026 +
             C26496 * C11539) *
                C79307) *
               C79306 * C79262) *
              C79009 * C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
                C245 +
            (C26551 * C246 + C26495 * C563 + C26552 * C973 + C26496 * C1463) *
                C79307) *
               C79306 * C9011 -
           ((C26552 * C4165 + C26496 * C4715 + C26551 * C1906 +
             C26495 * C2396) *
                C79307 +
            (C26552 * C3931 + C26496 * C4047 + C26551 * C1682 +
             C26495 * C1792) *
                C245) *
               C79306 * C9012 +
           ((C26551 * C1683 + C26495 * C1793 + C26552 * C6042 +
             C26496 * C6140) *
                C245 +
            (C26551 * C1907 + C26495 * C2397 + C26552 * C6226 +
             C26496 * C6638) *
                C79307) *
               C79306 * C79262) *
              C79300 +
          (((C26551 * C3931 + C26495 * C4047 + C26552 * C6044 +
             C26496 * C6142) *
                C245 +
            (C26551 * C4165 + C26495 * C4715 + C26552 * C6228 +
             C26496 * C6640) *
                C79307) *
               C79306 * C9012 -
           ((C26552 * C974 + C26496 * C1464 + C26551 * C973 + C26495 * C1463) *
                C79307 +
            (C26552 * C750 + C26496 * C860 + C26551 * C749 + C26495 * C859) *
                C245) *
               C79306 * C9011 -
           ((C26552 * C6229 + C26496 * C6641 + C26551 * C6226 +
             C26495 * C6638) *
                C79307 +
            (C26552 * C6045 + C26496 * C6143 + C26551 * C6042 +
             C26495 * C6140) *
                C245) *
               C79306 * C79262) *
              C79285 +
          (((C26551 * C750 + C26495 * C860 + C26552 * C5568 + C26496 * C5626) *
                C245 +
            (C26551 * C974 + C26495 * C1464 + C26552 * C5676 + C26496 * C5914) *
                C79307) *
               C79306 * C9011 -
           ((C26552 * C8521 + C26496 * C8865 + C26551 * C6228 +
             C26495 * C6640) *
                C79307 +
            (C26552 * C8377 + C26496 * C8451 + C26551 * C6044 +
             C26495 * C6142) *
                C245) *
               C79306 * C9012 +
           ((C26551 * C6045 + C26495 * C6143 + C26552 * C31755 +
             C26496 * C31853) *
                C245 +
            (C26551 * C6229 + C26495 * C6641 + C26552 * C31929 +
             C26496 * C32377) *
                C79307) *
               C79306 * C79262) *
              C79259) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eezz[39] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C631 * C96 + C639 + C639 + C79307 * C632) * C26495 +
            C27684 * C26496) *
               C79306 * C79027 * C79300 -
           (C27685 * C26496 + C27684 * C26495) * C79306 * C79027 * C79285 +
           (C27685 * C26495 +
            (C631 * C5568 + C5965 + C5965 + C79307 * C5960) * C26496) *
               C79306 * C79027 * C79259) *
              C745 +
          ((C1597 * C26495 + C1598 * C26496) * C79306 * C79027 * C79285 -
           (C1597 * C26496 + C661 * C26495) * C79306 * C79027 * C79300 -
           (C7378 * C26496 + C1598 * C26495) * C79306 * C79027 * C79259) *
              C746 +
          ((C662 * C26495 + C1599 * C26496) * C79306 * C79027 * C79300 -
           (C1600 * C26496 + C1599 * C26495) * C79306 * C79027 * C79285 +
           (C1600 * C26495 +
            (C631 * C6801 + C7375 + C7375 + C79307 * C7371) * C26496) *
               C79306 * C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C631 * C96 + C639 + C639 + C79307 * C632) * C26495 +
           (C631 * C749 + C1576 + C1576 + C79307 * C1565) * C26496) *
              C79306 * C79027 * C79009 * C87 -
          (C1597 * C26496 + C661 * C26495) * C79306 * C79027 * C79009 * C88 +
          (C662 * C26495 + C1599 * C26496) * C79306 * C79027 * C79009 * C89 -
          (C3186 * C26496 + C663 * C26495) * C79306 * C79027 * C79009 * C90 +
          (C664 * C26495 +
           (C631 * C2609 + C3183 + C3183 + C79307 * C3179) * C26496) *
              C79306 * C79027 * C79009 * C91)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C631 * C96 + C639 + C639 + C79307 * C632) * C26495 +
            C27684 * C26496) *
               C79306 * C79027 * C4921 -
           (C27685 * C26496 + C27684 * C26495) * C79306 * C79027 * C4922 +
           (C27685 * C26495 +
            (C631 * C5568 + C5965 + C5965 + C79307 * C5960) * C26496) *
               C79306 * C79027 * C79259) *
              C79297 +
          ((C1597 * C26495 + C1598 * C26496) * C79306 * C79027 * C4922 -
           (C1597 * C26496 + C661 * C26495) * C79306 * C79027 * C4921 -
           (C7378 * C26496 + C1598 * C26495) * C79306 * C79027 * C79259) *
              C79281 +
          ((C662 * C26495 + C1599 * C26496) * C79306 * C79027 * C4921 -
           (C1600 * C26496 + C1599 * C26495) * C79306 * C79027 * C4922 +
           (C1600 * C26495 +
            (C631 * C6801 + C7375 + C7375 + C79307 * C7371) * C26496) *
               C79306 * C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C631 * C96 + C639 + C639 + C79307 * C632) * C26495 +
           C27684 * C26496) *
              C79306 * C79027 * C5561 -
          (C27685 * C26496 + C27684 * C26495) * C79306 * C79027 * C5562 +
          (C27685 * C26495 + C31680 * C26496) * C79306 * C79027 * C5563 -
          (C31681 * C26496 + C31680 * C26495) * C79306 * C79027 * C5564 +
          (C31681 * C26495 +
           (C631 * C31259 + C31675 + C31675 + C79307 * C31669) * C26496) *
              C79306 * C79027 * C5565) *
         C78981) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C631 * C96 + C639 + C639 + C79307 * C632) * C26495 +
            C27684 * C26496) *
               C79306 * C9011 -
           (C30551 * C26496 +
            (C631 * C1682 + C2509 + C2509 + C79307 * C2498) * C26495) *
               C79306 * C9012 +
           ((C631 * C1683 + C2510 + C2510 + C79307 * C2499) * C26495 +
            C32467 * C26496) *
               C79306 * C79262) *
              C79009 * C79297 +
          ((C2530 * C26495 + C4844 * C26496) * C79306 * C9012 -
           (C1597 * C26496 + C661 * C26495) * C79306 * C9011 -
           (C11650 * C26496 + C2531 * C26495) * C79306 * C79262) *
              C79009 * C79281 +
          ((C662 * C26495 + C1599 * C26496) * C79306 * C9011 -
           (C4845 * C26496 + C2532 * C26495) * C79306 * C9012 +
           (C2533 * C26495 +
            (C631 * C10817 + C11647 + C11647 + C79307 * C11643) * C26496) *
               C79306 * C79262) *
              C79009 * C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C631 * C96 + C639 + C639 + C79307 * C632) * C26495 +
            C27684 * C26496) *
               C79306 * C9011 -
           (C30551 * C26496 +
            (C631 * C1682 + C2509 + C2509 + C79307 * C2498) * C26495) *
               C79306 * C9012 +
           ((C631 * C1683 + C2510 + C2510 + C79307 * C2499) * C26495 +
            C32467 * C26496) *
               C79306 * C79262) *
              C79300 +
          ((C30551 * C26495 + C32468 * C26496) * C79306 * C9012 -
           (C27685 * C26496 + C27684 * C26495) * C79306 * C9011 -
           (C32469 * C26496 + C32467 * C26495) * C79306 * C79262) *
              C79285 +
          ((C27685 * C26495 + C31680 * C26496) * C79306 * C9011 -
           (C34633 * C26496 + C32468 * C26495) * C79306 * C9012 +
           (C32469 * C26495 +
            (C631 * C31755 + C32460 + C32460 + C79307 * C32452) * C26496) *
               C79306 * C79262) *
              C79259) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eexx[40] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C26497 * C96 + C26500 + C26500 + C79306 * C108) *
                           C79307 * C26495 +
                       C26970 * C26496) *
                          C17509 -
                      (C29706 * C26496 +
                       (C26497 * C1682 + C27761 + C27761 + C79306 * C1698) *
                           C79307 * C26495) *
                          C79114) *
                         C79229 +
                     ((C29706 * C26495 + C31778 * C26496) * C79114 -
                      (C26971 * C26496 + C26970 * C26495) * C17509) *
                         C79072) *
                        C78986 +
                    ((((C26497 * C1681 + C27764 + C27764 + C79306 * C1697) *
                           C79307 * C26495 +
                       C29707 * C26496) *
                          C79114 -
                      (C26972 * C26496 +
                       (C26497 * C97 + C26503 + C26503 + C79306 * C109) *
                           C79307 * C26495) *
                          C17509) *
                         C79229 +
                     ((C26972 * C26495 + C26973 * C26496) * C17509 -
                      (C33190 * C26496 + C29707 * C26495) * C79114) *
                         C79072) *
                        C78995 +
                    ((((C26497 * C98 + C26504 + C26504 + C79306 * C110) *
                           C79307 * C26495 +
                       C26974 * C26496) *
                          C17509 -
                      (C29708 * C26496 +
                       (C26497 * C1685 + C27769 + C27769 + C79306 * C1701) *
                           C79307 * C26495) *
                          C79114) *
                         C79229 +
                     ((C29708 * C26495 +
                       (C26497 * C7477 + C29696 + C29696 + C79306 * C7479) *
                           C79307 * C26496) *
                          C79114 -
                      (C26975 * C26496 + C26974 * C26495) * C17509) *
                         C79072) *
                        C15086)) /
                  (p * q * std::sqrt(p + q));
    d2eexy[40] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
                 C26498 +
             (C26551 * C102 + C26495 * C173 + C26552 * C757 + C26496 * C867) *
                 C79306) *
                C79307 * C17509 -
            ((C26552 * C3935 + C26496 * C4051 + C26551 * C1690 +
              C26495 * C1800) *
                 C79306 +
             (C26552 * C3931 + C26496 * C4047 + C26551 * C1682 +
              C26495 * C1792) *
                 C26498) *
                C79307 * C79114) *
               C79229 +
           (((C26551 * C3931 + C26495 * C4047 + C26552 * C6044 +
              C26496 * C6142) *
                 C26498 +
             (C26551 * C3935 + C26495 * C4051 + C26552 * C6050 +
              C26496 * C6148) *
                 C79306) *
                C79307 * C79114 -
            ((C26552 * C758 + C26496 * C868 + C26551 * C757 + C26495 * C867) *
                 C79306 +
             (C26552 * C750 + C26496 * C860 + C26551 * C749 + C26495 * C859) *
                 C26498) *
                C79307 * C17509) *
               C79072) *
              C78986 +
          ((((C26551 * C1681 + C26495 * C1791 + C26552 * C3932 +
              C26496 * C4048) *
                 C26498 +
             (C26551 * C1689 + C26495 * C1799 + C26552 * C3936 +
              C26496 * C4052) *
                 C79306) *
                C79307 * C79114 -
            ((C26552 * C756 + C26496 * C866 + C26551 * C103 + C26495 * C174) *
                 C79306 +
             (C26552 * C748 + C26496 * C858 + C26551 * C97 + C26495 * C168) *
                 C26498) *
                C79307 * C17509) *
               C79229 +
           (((C26551 * C748 + C26495 * C858 + C26552 * C751 + C26496 * C861) *
                 C26498 +
             (C26551 * C756 + C26495 * C866 + C26552 * C759 + C26496 * C869) *
                 C79306) *
                C79307 * C17509 -
            ((C26552 * C6049 + C26496 * C6147 + C26551 * C3936 +
              C26495 * C4052) *
                 C79306 +
             (C26552 * C6043 + C26496 * C6141 + C26551 * C3932 +
              C26495 * C4048) *
                 C26498) *
                C79307 * C79114) *
               C79072) *
              C78995 +
          ((((C26551 * C98 + C26495 * C169 + C26552 * C752 + C26496 * C862) *
                 C26498 +
             (C26551 * C104 + C26495 * C175 + C26552 * C760 + C26496 * C870) *
                 C79306) *
                C79307 * C17509 -
            ((C26552 * C3937 + C26496 * C4053 + C26551 * C1693 +
              C26495 * C1803) *
                 C79306 +
             (C26552 * C3933 + C26496 * C4049 + C26551 * C1685 +
              C26495 * C1795) *
                 C26498) *
                C79307 * C79114) *
               C79229 +
           (((C26551 * C3933 + C26495 * C4049 + C26552 * C7477 +
              C26496 * C7580) *
                 C26498 +
             (C26551 * C3937 + C26495 * C4053 + C26552 * C7478 +
              C26496 * C7581) *
                 C79306) *
                C79307 * C79114 -
            ((C26552 * C761 + C26496 * C871 + C26551 * C760 + C26495 * C870) *
                 C79306 +
             (C26552 * C753 + C26496 * C863 + C26551 * C752 + C26495 * C862) *
                 C26498) *
                C79307 * C17509) *
               C79072) *
              C15086)) /
        (p * q * std::sqrt(p + q));
    d2eexz[40] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C245 * C96 + C79307 * C246) * C26498 +
              (C245 * C102 + C79307 * C252) * C79306) *
                 C26495 +
             (C27144 + C27145) * C26496) *
                C17509 -
            ((C29915 + C29916) * C26496 +
             ((C245 * C1690 + C79307 * C1914) * C79306 +
              (C245 * C1682 + C79307 * C1906) * C26498) *
                 C26495) *
                C79114) *
               C79229 +
           (((C29916 + C29915) * C26495 + (C31952 + C31953) * C26496) * C79114 -
            ((C27146 + C27147) * C26496 + (C27145 + C27144) * C26495) *
                C17509) *
               C79072) *
              C78986 +
          ((((C1939 * C26498 + C1938 * C79306) * C26495 +
             (C29909 + C29910) * C26496) *
                C79114 -
            ((C27133 + C27132) * C26496 +
             (C276 * C79306 + C275 * C26498) * C26495) *
                C17509) *
               C79229 +
           (((C27132 + C27133) * C26495 + (C27134 + C27135) * C26496) * C17509 -
            ((C33387 + C33388) * C26496 + (C29910 + C29909) * C26495) *
                C79114) *
               C79072) *
              C78995 +
          ((((C278 * C26498 + C277 * C79306) * C26495 +
             (C27136 + C27137) * C26496) *
                C17509 -
            ((C29911 + C29912) * C26496 +
             (C1943 * C79306 + C1942 * C26498) * C26495) *
                C79114) *
               C79229 +
           (((C29912 + C29911) * C26495 +
             ((C245 * C7477 + C79307 * C7686) * C26498 +
              (C245 * C7478 + C79307 * C7687) * C79306) *
                 C26496) *
                C79114 -
            ((C27138 + C27139) * C26496 + (C27137 + C27136) * C26495) *
                C17509) *
               C79072) *
              C15086)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[40] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C26498 * C96 + C79306 * C102) * C26551 +
                       (C26498 * C167 + C79306 * C324) * C26495 +
                       C27246 * C26552 + C27247 * C26496) *
                          C79307 * C17509 -
                      (C30027 * C26496 + C30028 * C26552 +
                       (C26498 * C1792 + C79306 * C2020) * C26495 +
                       (C26498 * C1682 + C79306 * C1690) * C26551) *
                          C79307 * C79114) *
                         C79229 +
                     ((C30028 * C26551 + C30027 * C26495 + C32045 * C26552 +
                       C32046 * C26496) *
                          C79307 * C79114 -
                      (C27248 * C26496 + C27249 * C26552 + C27247 * C26495 +
                       C27246 * C26551) *
                          C79307 * C17509) *
                         C79072) *
                        C78986 +
                    ((((C26498 * C1681 + C79306 * C1689) * C26551 +
                       (C26498 * C1791 + C79306 * C2019) * C26495 +
                       C30029 * C26552 + C30030 * C26496) *
                          C79307 * C79114 -
                      (C27251 * C26496 + C27250 * C26552 +
                       (C26498 * C168 + C79306 * C325) * C26495 +
                       (C26498 * C97 + C79306 * C103) * C26551) *
                          C79307 * C17509) *
                         C79229 +
                     ((C27250 * C26551 + C27251 * C26495 + C27252 * C26552 +
                       C27253 * C26496) *
                          C79307 * C17509 -
                      (C33491 * C26496 + C33492 * C26552 + C30030 * C26495 +
                       C30029 * C26551) *
                          C79307 * C79114) *
                         C79072) *
                        C78995 +
                    ((((C26498 * C98 + C79306 * C104) * C26551 +
                       (C26498 * C169 + C79306 * C326) * C26495 +
                       C27254 * C26552 + C27255 * C26496) *
                          C79307 * C17509 -
                      (C30031 * C26496 + C30032 * C26552 +
                       (C26498 * C1795 + C79306 * C2023) * C26495 +
                       (C26498 * C1685 + C79306 * C1693) * C26551) *
                          C79307 * C79114) *
                         C79229 +
                     ((C30032 * C26551 + C30031 * C26495 +
                       (C26498 * C7477 + C79306 * C7478) * C26552 +
                       (C26498 * C7580 + C79306 * C7792) * C26496) *
                          C79307 * C79114 -
                      (C27256 * C26496 + C27257 * C26552 + C27255 * C26495 +
                       C27254 * C26551) *
                          C79307 * C17509) *
                         C79072) *
                        C15086)) /
                  (p * q * std::sqrt(p + q));
    d2eeyy[40] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C26679 * C96 + C26682 + C26682 + C26495 * C373 +
                       C26680 * C749 + C26683 + C26683 + C26496 * C1169) *
                          C79306 * C79307 * C17509 -
                      (C26680 * C3931 + C28068 + C28068 + C26496 * C4385 +
                       C26679 * C1682 + C28069 + C28069 + C26495 * C2102) *
                          C79306 * C79307 * C79114) *
                         C79229 +
                     ((C26679 * C3931 + C30131 + C30131 + C26495 * C4385 +
                       C26680 * C6044 + C30132 + C30132 + C26496 * C6394) *
                          C79306 * C79307 * C79114 -
                      (C26680 * C750 + C27332 + C27332 + C26496 * C1170 +
                       C26679 * C749 + C27333 + C27333 + C26495 * C1169) *
                          C79306 * C79307 * C17509) *
                         C79072) *
                        C78986 +
                    (((C26679 * C1681 + C28072 + C28072 + C26495 * C2101 +
                       C26680 * C3932 + C28073 + C28073 + C26496 * C4386) *
                          C79306 * C79307 * C79114 -
                      (C26680 * C748 + C26684 + C26684 + C26496 * C1168 +
                       C26679 * C97 + C26685 + C26685 + C26495 * C374) *
                          C79306 * C79307 * C17509) *
                         C79229 +
                     ((C26679 * C748 + C27336 + C27336 + C26495 * C1168 +
                       C26680 * C751 + C27337 + C27337 + C26496 * C1171) *
                          C79306 * C79307 * C17509 -
                      (C26680 * C6043 + C30133 + C30133 + C26496 * C6393 +
                       C26679 * C3932 + C30134 + C30134 + C26495 * C4386) *
                          C79306 * C79307 * C79114) *
                         C79072) *
                        C78995 +
                    (((C26679 * C98 + C26686 + C26686 + C26495 * C375 +
                       C26680 * C752 + C26687 + C26687 + C26496 * C1172) *
                          C79306 * C79307 * C17509 -
                      (C26680 * C3933 + C28076 + C28076 + C26496 * C4387 +
                       C26679 * C1685 + C28077 + C28077 + C26495 * C2105) *
                          C79306 * C79307 * C79114) *
                         C79229 +
                     ((C26679 * C3933 + C30135 + C30135 + C26495 * C4387 +
                       C26680 * C7477 + C30136 + C30136 + C26496 * C7891) *
                          C79306 * C79307 * C79114 -
                      (C26680 * C753 + C27340 + C27340 + C26496 * C1173 +
                       C26679 * C752 + C27341 + C27341 + C26495 * C1172) *
                          C79306 * C79307 * C17509) *
                         C79072) *
                        C15086)) /
                  (p * q * std::sqrt(p + q));
    d2eeyz[40] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C245 * C96 + C79307 * C246) * C26551 +
             (C245 * C167 + C79307 * C447) * C26495 + C27140 * C26552 +
             C27422 * C26496) *
                C79306 * C17509 -
            (C30237 * C26496 + C29914 * C26552 +
             (C245 * C1792 + C79307 * C2212) * C26495 +
             (C245 * C1682 + C79307 * C1906) * C26551) *
                C79306 * C79114) *
               C79229 +
           ((C29914 * C26551 + C30237 * C26495 + C31946 * C26552 +
             C32212 * C26496) *
                C79306 * C79114 -
            (C27423 * C26496 + C27143 * C26552 + C27422 * C26495 +
             C27140 * C26551) *
                C79306 * C17509) *
               C79072) *
              C78986 +
          (((C1939 * C26551 + C2232 * C26495 + C4182 * C26552 +
             C4512 * C26496) *
                C79306 * C79114 -
            (C1299 * C26496 + C1006 * C26552 + C466 * C26495 + C275 * C26551) *
                C79306 * C17509) *
               C79229 +
           ((C1006 * C26551 + C1299 * C26495 + C1007 * C26552 +
             C1300 * C26496) *
                C79306 * C17509 -
            (C8001 * C26496 + C7694 * C26552 + C4512 * C26495 +
             C4182 * C26551) *
                C79306 * C79114) *
               C79072) *
              C78995 +
          (((C278 * C26551 + C467 * C26495 + C1009 * C26552 + C1301 * C26496) *
                C79306 * C17509 -
            (C4513 * C26496 + C4185 * C26552 + C2234 * C26495 +
             C1942 * C26551) *
                C79306 * C79114) *
               C79229 +
           ((C4185 * C26551 + C4513 * C26495 +
             (C245 * C7477 + C79307 * C7686) * C26552 +
             (C245 * C7580 + C79307 * C7996) * C26496) *
                C79306 * C79114 -
            (C1302 * C26496 + C1012 * C26552 + C1301 * C26495 +
             C1009 * C26551) *
                C79306 * C17509) *
               C79072) *
              C15086)) /
        (p * q * std::sqrt(p + q));
    d2eezx[40] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C26498 * C96 + C79306 * C102) * C245 +
              (C26498 * C246 + C79306 * C515) * C79307) *
                 C26495 +
             (C27498 + C27522) * C26496) *
                C17509 -
            ((C30348 + C30338) * C26496 +
             ((C26498 * C1906 + C79306 * C2314) * C79307 +
              (C26498 * C1682 + C79306 * C1690) * C245) *
                 C26495) *
                C79114) *
               C79229 +
           (((C30338 + C30348) * C26495 + (C32292 + C32302) * C26496) * C79114 -
            ((C27523 + C27503) * C26496 + (C27522 + C27498) * C26495) *
                C17509) *
               C79072) *
              C78986 +
          (((((C26498 * C1681 + C79306 * C1689) * C245 +
              (C26498 * C1905 + C79306 * C2313) * C79307) *
                 C26495 +
             (C30339 + C30349) * C26496) *
                C79114 -
            ((C27524 + C27504) * C26496 +
             ((C26498 * C247 + C79306 * C516) * C79307 +
              (C26498 * C97 + C79306 * C103) * C245) *
                 C26495) *
                C17509) *
               C79229 +
           (((C27504 + C27524) * C26495 + (C27507 + C27525) * C26496) * C17509 -
            ((C33793 + C33791) * C26496 + (C30349 + C30339) * C26495) *
                C79114) *
               C79072) *
              C78995 +
          (((((C26498 * C98 + C79306 * C104) * C245 +
              (C26498 * C248 + C79306 * C517) * C79307) *
                 C26495 +
             (C27510 + C27526) * C26496) *
                C17509 -
            ((C30350 + C30344) * C26496 +
             ((C26498 * C1909 + C79306 * C2317) * C79307 +
              (C26498 * C1685 + C79306 * C1693) * C245) *
                 C26495) *
                C79114) *
               C79229 +
           (((C30344 + C30350) * C26495 +
             ((C26498 * C7477 + C79306 * C7478) * C245 +
              (C26498 * C7686 + C79306 * C8100) * C79307) *
                 C26496) *
                C79114 -
            ((C27527 + C27515) * C26496 + (C27526 + C27510) * C26495) *
                C17509) *
               C79072) *
              C15086)) /
        (p * q * std::sqrt(p + q));
    d2eezy[40] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
                 C245 +
             (C26551 * C246 + C26495 * C563 + C26552 * C973 + C26496 * C1463) *
                 C79307) *
                C79306 * C17509 -
            ((C26552 * C4165 + C26496 * C4715 + C26551 * C1906 +
              C26495 * C2396) *
                 C79307 +
             (C26552 * C3931 + C26496 * C4047 + C26551 * C1682 +
              C26495 * C1792) *
                 C245) *
                C79306 * C79114) *
               C79229 +
           (((C26551 * C3931 + C26495 * C4047 + C26552 * C6044 +
              C26496 * C6142) *
                 C245 +
             (C26551 * C4165 + C26495 * C4715 + C26552 * C6228 +
              C26496 * C6640) *
                 C79307) *
                C79306 * C79114 -
            ((C26552 * C974 + C26496 * C1464 + C26551 * C973 + C26495 * C1463) *
                 C79307 +
             (C26552 * C750 + C26496 * C860 + C26551 * C749 + C26495 * C859) *
                 C245) *
                C79306 * C17509) *
               C79072) *
              C78986 +
          ((((C26551 * C1681 + C26495 * C1791 + C26552 * C3932 +
              C26496 * C4048) *
                 C245 +
             (C26551 * C1905 + C26495 * C2395 + C26552 * C4166 +
              C26496 * C4716) *
                 C79307) *
                C79306 * C79114 -
            ((C26552 * C972 + C26496 * C1462 + C26551 * C247 + C26495 * C564) *
                 C79307 +
             (C26552 * C748 + C26496 * C858 + C26551 * C97 + C26495 * C168) *
                 C245) *
                C79306 * C17509) *
               C79229 +
           (((C26551 * C748 + C26495 * C858 + C26552 * C751 + C26496 * C861) *
                 C245 +
             (C26551 * C972 + C26495 * C1462 + C26552 * C975 + C26496 * C1465) *
                 C79307) *
                C79306 * C17509 -
            ((C26552 * C6227 + C26496 * C6639 + C26551 * C4166 +
              C26495 * C4716) *
                 C79307 +
             (C26552 * C6043 + C26496 * C6141 + C26551 * C3932 +
              C26495 * C4048) *
                 C245) *
                C79306 * C79114) *
               C79072) *
              C78995 +
          ((((C26551 * C98 + C26495 * C169 + C26552 * C752 + C26496 * C862) *
                 C245 +
             (C26551 * C248 + C26495 * C565 + C26552 * C976 + C26496 * C1466) *
                 C79307) *
                C79306 * C17509 -
            ((C26552 * C4167 + C26496 * C4717 + C26551 * C1909 +
              C26495 * C2399) *
                 C79307 +
             (C26552 * C3933 + C26496 * C4049 + C26551 * C1685 +
              C26495 * C1795) *
                 C245) *
                C79306 * C79114) *
               C79229 +
           (((C26551 * C3933 + C26495 * C4049 + C26552 * C7477 +
              C26496 * C7580) *
                 C245 +
             (C26551 * C4167 + C26495 * C4717 + C26552 * C7686 +
              C26496 * C8199) *
                 C79307) *
                C79306 * C79114 -
            ((C26552 * C977 + C26496 * C1467 + C26551 * C976 + C26495 * C1466) *
                 C79307 +
             (C26552 * C753 + C26496 * C863 + C26551 * C752 + C26495 * C862) *
                 C245) *
                C79306 * C17509) *
               C79072) *
              C15086)) /
        (p * q * std::sqrt(p + q));
    d2eezz[40] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C631 * C96 + C639 + C639 + C79307 * C632) * C26495 +
             C27684 * C26496) *
                C79306 * C17509 -
            (C30551 * C26496 +
             (C631 * C1682 + C2509 + C2509 + C79307 * C2498) * C26495) *
                C79306 * C79114) *
               C79229 +
           ((C30551 * C26495 + C32468 * C26496) * C79306 * C79114 -
            (C27685 * C26496 + C27684 * C26495) * C79306 * C17509) *
               C79072) *
              C78986 +
          (((C2530 * C26495 + C4844 * C26496) * C79306 * C79114 -
            (C1597 * C26496 + C661 * C26495) * C79306 * C17509) *
               C79229 +
           ((C1597 * C26495 + C1598 * C26496) * C79306 * C17509 -
            (C8310 * C26496 + C4844 * C26495) * C79306 * C79114) *
               C79072) *
              C78995 +
          (((C662 * C26495 + C1599 * C26496) * C79306 * C17509 -
            (C4845 * C26496 + C2532 * C26495) * C79306 * C79114) *
               C79229 +
           ((C4845 * C26495 +
             (C631 * C7477 + C8307 + C8307 + C79307 * C8303) * C26496) *
                C79306 * C79114 -
            (C1600 * C26496 + C1599 * C26495) * C79306 * C17509) *
               C79072) *
              C15086)) /
        (p * q * std::sqrt(p + q));
    d2eexx[41] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C26497 * C96 + C26500 + C26500 + C79306 * C108) *
                           C79307 * C26495 +
                       C26970 * C26496) *
                          C79110 -
                      (C29706 * C26496 +
                       (C26497 * C1682 + C27761 + C27761 + C79306 * C1698) *
                           C79307 * C26495) *
                          C79117 +
                      ((C26497 * C1683 + C27762 + C27762 + C79306 * C1699) *
                           C79307 * C26495 +
                       C31777 * C26496) *
                          C20477) *
                         C79229 +
                     ((C29706 * C26495 + C31778 * C26496) * C79117 -
                      (C26971 * C26496 + C26970 * C26495) * C79110 -
                      (C31779 * C26496 + C31777 * C26495) * C20477) *
                         C79072) *
                        C13595 +
                    ((((C26497 * C1681 + C27764 + C27764 + C79306 * C1697) *
                           C79307 * C26495 +
                       C29707 * C26496) *
                          C79117 -
                      (C26972 * C26496 +
                       (C26497 * C97 + C26503 + C26503 + C79306 * C109) *
                           C79307 * C26495) *
                          C79110 -
                      (C36470 * C26496 +
                       (C26497 * C1684 + C27767 + C27767 + C79306 * C1700) *
                           C79307 * C26495) *
                          C20477) *
                         C79229 +
                     ((C26972 * C26495 + C26973 * C26496) * C79110 -
                      (C33190 * C26496 + C29707 * C26495) * C79117 +
                      (C36470 * C26495 +
                       (C26497 * C6046 + C36466 + C36466 + C79306 * C6058) *
                           C79307 * C26496) *
                          C20477) *
                         C79072) *
                        C78992)) /
                  (p * q * std::sqrt(p + q));
    d2eexy[41] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
                 C26498 +
             (C26551 * C102 + C26495 * C173 + C26552 * C757 + C26496 * C867) *
                 C79306) *
                C79307 * C79110 -
            ((C26552 * C3935 + C26496 * C4051 + C26551 * C1690 +
              C26495 * C1800) *
                 C79306 +
             (C26552 * C3931 + C26496 * C4047 + C26551 * C1682 +
              C26495 * C1792) *
                 C26498) *
                C79307 * C79117 +
            ((C26551 * C1683 + C26495 * C1793 + C26552 * C6042 +
              C26496 * C6140) *
                 C26498 +
             (C26551 * C1691 + C26495 * C1801 + C26552 * C6048 +
              C26496 * C6146) *
                 C79306) *
                C79307 * C20477) *
               C79229 +
           (((C26551 * C3931 + C26495 * C4047 + C26552 * C6044 +
              C26496 * C6142) *
                 C26498 +
             (C26551 * C3935 + C26495 * C4051 + C26552 * C6050 +
              C26496 * C6148) *
                 C79306) *
                C79307 * C79117 -
            ((C26552 * C758 + C26496 * C868 + C26551 * C757 + C26495 * C867) *
                 C79306 +
             (C26552 * C750 + C26496 * C860 + C26551 * C749 + C26495 * C859) *
                 C26498) *
                C79307 * C79110 -
            ((C26552 * C6051 + C26496 * C6149 + C26551 * C6048 +
              C26495 * C6146) *
                 C79306 +
             (C26552 * C6045 + C26496 * C6143 + C26551 * C6042 +
              C26495 * C6140) *
                 C26498) *
                C79307 * C20477) *
               C79072) *
              C13595 +
          ((((C26551 * C1681 + C26495 * C1791 + C26552 * C3932 +
              C26496 * C4048) *
                 C26498 +
             (C26551 * C1689 + C26495 * C1799 + C26552 * C3936 +
              C26496 * C4052) *
                 C79306) *
                C79307 * C79117 -
            ((C26552 * C756 + C26496 * C866 + C26551 * C103 + C26495 * C174) *
                 C79306 +
             (C26552 * C748 + C26496 * C858 + C26551 * C97 + C26495 * C168) *
                 C26498) *
                C79307 * C79110 -
            ((C26552 * C6047 + C26496 * C6145 + C26551 * C1692 +
              C26495 * C1802) *
                 C79306 +
             (C26552 * C6041 + C26496 * C6139 + C26551 * C1684 +
              C26495 * C1794) *
                 C26498) *
                C79307 * C20477) *
               C79229 +
           (((C26551 * C748 + C26495 * C858 + C26552 * C751 + C26496 * C861) *
                 C26498 +
             (C26551 * C756 + C26495 * C866 + C26552 * C759 + C26496 * C869) *
                 C79306) *
                C79307 * C79110 -
            ((C26552 * C6049 + C26496 * C6147 + C26551 * C3936 +
              C26495 * C4052) *
                 C79306 +
             (C26552 * C6043 + C26496 * C6141 + C26551 * C3932 +
              C26495 * C4048) *
                 C26498) *
                C79307 * C79117 +
            ((C26551 * C6041 + C26495 * C6139 + C26552 * C6046 +
              C26496 * C6144) *
                 C26498 +
             (C26551 * C6047 + C26495 * C6145 + C26552 * C6052 +
              C26496 * C6150) *
                 C79306) *
                C79307 * C20477) *
               C79072) *
              C78992)) /
        (p * q * std::sqrt(p + q));
    d2eexz[41] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C245 * C96 + C79307 * C246) * C26498 +
              (C245 * C102 + C79307 * C252) * C79306) *
                 C26495 +
             (C27144 + C27145) * C26496) *
                C79110 -
            ((C29915 + C29916) * C26496 +
             ((C245 * C1690 + C79307 * C1914) * C79306 +
              (C245 * C1682 + C79307 * C1906) * C26498) *
                 C26495) *
                C79117 +
            (((C245 * C1683 + C79307 * C1907) * C26498 +
              (C245 * C1691 + C79307 * C1915) * C79306) *
                 C26495 +
             (C31950 + C31951) * C26496) *
                C20477) *
               C79229 +
           (((C29916 + C29915) * C26495 + (C31952 + C31953) * C26496) * C79117 -
            ((C27146 + C27147) * C26496 + (C27145 + C27144) * C26495) * C79110 -
            ((C31954 + C31955) * C26496 + (C31951 + C31950) * C26495) *
                C20477) *
               C79072) *
              C13595 +
          ((((C1939 * C26498 + C1938 * C79306) * C26495 +
             (C29909 + C29910) * C26496) *
                C79117 -
            ((C27133 + C27132) * C26496 +
             (C276 * C79306 + C275 * C26498) * C26495) *
                C79110 -
            ((C36667 + C36668) * C26496 +
             (C1941 * C79306 + C1940 * C26498) * C26495) *
                C20477) *
               C79229 +
           (((C27132 + C27133) * C26495 + (C27134 + C27135) * C26496) * C79110 -
            ((C33387 + C33388) * C26496 + (C29910 + C29909) * C26495) * C79117 +
            ((C36668 + C36667) * C26495 +
             ((C245 * C6046 + C79307 * C6230) * C26498 +
              (C245 * C6052 + C79307 * C6236) * C79306) *
                 C26496) *
                C20477) *
               C79072) *
              C78992)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[41] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C26498 * C96 + C79306 * C102) * C26551 +
                       (C26498 * C167 + C79306 * C324) * C26495 +
                       C27246 * C26552 + C27247 * C26496) *
                          C79307 * C79110 -
                      (C30027 * C26496 + C30028 * C26552 +
                       (C26498 * C1792 + C79306 * C2020) * C26495 +
                       (C26498 * C1682 + C79306 * C1690) * C26551) *
                          C79307 * C79117 +
                      ((C26498 * C1683 + C79306 * C1691) * C26551 +
                       (C26498 * C1793 + C79306 * C2021) * C26495 +
                       C32043 * C26552 + C32044 * C26496) *
                          C79307 * C20477) *
                         C79229 +
                     ((C30028 * C26551 + C30027 * C26495 + C32045 * C26552 +
                       C32046 * C26496) *
                          C79307 * C79117 -
                      (C27248 * C26496 + C27249 * C26552 + C27247 * C26495 +
                       C27246 * C26551) *
                          C79307 * C79110 -
                      (C32047 * C26496 + C32048 * C26552 + C32044 * C26495 +
                       C32043 * C26551) *
                          C79307 * C20477) *
                         C79072) *
                        C13595 +
                    ((((C26498 * C1681 + C79306 * C1689) * C26551 +
                       (C26498 * C1791 + C79306 * C2019) * C26495 +
                       C30029 * C26552 + C30030 * C26496) *
                          C79307 * C79117 -
                      (C27251 * C26496 + C27250 * C26552 +
                       (C26498 * C168 + C79306 * C325) * C26495 +
                       (C26498 * C97 + C79306 * C103) * C26551) *
                          C79307 * C79110 -
                      (C36771 * C26496 + C36772 * C26552 +
                       (C26498 * C1794 + C79306 * C2022) * C26495 +
                       (C26498 * C1684 + C79306 * C1692) * C26551) *
                          C79307 * C20477) *
                         C79229 +
                     ((C27250 * C26551 + C27251 * C26495 + C27252 * C26552 +
                       C27253 * C26496) *
                          C79307 * C79110 -
                      (C33491 * C26496 + C33492 * C26552 + C30030 * C26495 +
                       C30029 * C26551) *
                          C79307 * C79117 +
                      (C36772 * C26551 + C36771 * C26495 +
                       (C26498 * C6046 + C79306 * C6052) * C26552 +
                       (C26498 * C6144 + C79306 * C6316) * C26496) *
                          C79307 * C20477) *
                         C79072) *
                        C78992)) /
                  (p * q * std::sqrt(p + q));
    d2eeyy[41] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C26679 * C96 + C26682 + C26682 + C26495 * C373 +
                       C26680 * C749 + C26683 + C26683 + C26496 * C1169) *
                          C79306 * C79307 * C79110 -
                      (C26680 * C3931 + C28068 + C28068 + C26496 * C4385 +
                       C26679 * C1682 + C28069 + C28069 + C26495 * C2102) *
                          C79306 * C79307 * C79117 +
                      (C26679 * C1683 + C28070 + C28070 + C26495 * C2103 +
                       C26680 * C6042 + C28071 + C28071 + C26496 * C6392) *
                          C79306 * C79307 * C20477) *
                         C79229 +
                     ((C26679 * C3931 + C30131 + C30131 + C26495 * C4385 +
                       C26680 * C6044 + C30132 + C30132 + C26496 * C6394) *
                          C79306 * C79307 * C79117 -
                      (C26680 * C750 + C27332 + C27332 + C26496 * C1170 +
                       C26679 * C749 + C27333 + C27333 + C26495 * C1169) *
                          C79306 * C79307 * C79110 -
                      (C26680 * C6045 + C32124 + C32124 + C26496 * C6395 +
                       C26679 * C6042 + C32125 + C32125 + C26495 * C6392) *
                          C79306 * C79307 * C20477) *
                         C79072) *
                        C13595 +
                    (((C26679 * C1681 + C28072 + C28072 + C26495 * C2101 +
                       C26680 * C3932 + C28073 + C28073 + C26496 * C4386) *
                          C79306 * C79307 * C79117 -
                      (C26680 * C748 + C26684 + C26684 + C26496 * C1168 +
                       C26679 * C97 + C26685 + C26685 + C26495 * C374) *
                          C79306 * C79307 * C79110 -
                      (C26680 * C6041 + C28074 + C28074 + C26496 * C6391 +
                       C26679 * C1684 + C28075 + C28075 + C26495 * C2104) *
                          C79306 * C79307 * C20477) *
                         C79229 +
                     ((C26679 * C748 + C27336 + C27336 + C26495 * C1168 +
                       C26680 * C751 + C27337 + C27337 + C26496 * C1171) *
                          C79306 * C79307 * C79110 -
                      (C26680 * C6043 + C30133 + C30133 + C26496 * C6393 +
                       C26679 * C3932 + C30134 + C30134 + C26495 * C4386) *
                          C79306 * C79307 * C79117 +
                      (C26679 * C6041 + C36871 + C36871 + C26495 * C6391 +
                       C26680 * C6046 + C36872 + C36872 + C26496 * C6396) *
                          C79306 * C79307 * C20477) *
                         C79072) *
                        C78992)) /
                  (p * q * std::sqrt(p + q));
    d2eeyz[41] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C245 * C96 + C79307 * C246) * C26551 +
             (C245 * C167 + C79307 * C447) * C26495 + C27140 * C26552 +
             C27422 * C26496) *
                C79306 * C79110 -
            (C30237 * C26496 + C29914 * C26552 +
             (C245 * C1792 + C79307 * C2212) * C26495 +
             (C245 * C1682 + C79307 * C1906) * C26551) *
                C79306 * C79117 +
            ((C245 * C1683 + C79307 * C1907) * C26551 +
             (C245 * C1793 + C79307 * C2213) * C26495 + C31944 * C26552 +
             C32211 * C26496) *
                C79306 * C20477) *
               C79229 +
           ((C29914 * C26551 + C30237 * C26495 + C31946 * C26552 +
             C32212 * C26496) *
                C79306 * C79117 -
            (C27423 * C26496 + C27143 * C26552 + C27422 * C26495 +
             C27140 * C26551) *
                C79306 * C79110 -
            (C32213 * C26496 + C31949 * C26552 + C32211 * C26495 +
             C31944 * C26551) *
                C79306 * C20477) *
               C79072) *
              C13595 +
          (((C1939 * C26551 + C2232 * C26495 + C4182 * C26552 +
             C4512 * C26496) *
                C79306 * C79117 -
            (C1299 * C26496 + C1006 * C26552 + C466 * C26495 + C275 * C26551) *
                C79306 * C79110 -
            (C11341 * C26496 + C11034 * C26552 + C2233 * C26495 +
             C1940 * C26551) *
                C79306 * C20477) *
               C79229 +
           ((C1006 * C26551 + C1299 * C26495 + C1007 * C26552 +
             C1300 * C26496) *
                C79306 * C79110 -
            (C8001 * C26496 + C7694 * C26552 + C4512 * C26495 +
             C4182 * C26551) *
                C79306 * C79117 +
            (C11034 * C26551 + C11341 * C26495 +
             (C245 * C6046 + C79307 * C6230) * C26552 +
             (C245 * C6144 + C79307 * C6482) * C26496) *
                C79306 * C20477) *
               C79072) *
              C78992)) /
        (p * q * std::sqrt(p + q));
    d2eezx[41] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C26498 * C96 + C79306 * C102) * C245 +
              (C26498 * C246 + C79306 * C515) * C79307) *
                 C26495 +
             (C27498 + C27522) * C26496) *
                C79110 -
            ((C30348 + C30338) * C26496 +
             ((C26498 * C1906 + C79306 * C2314) * C79307 +
              (C26498 * C1682 + C79306 * C1690) * C245) *
                 C26495) *
                C79117 +
            (((C26498 * C1683 + C79306 * C1691) * C245 +
              (C26498 * C1907 + C79306 * C2315) * C79307) *
                 C26495 +
             (C32289 + C32301) * C26496) *
                C20477) *
               C79229 +
           (((C30338 + C30348) * C26495 + (C32292 + C32302) * C26496) * C79117 -
            ((C27523 + C27503) * C26496 + (C27522 + C27498) * C26495) * C79110 -
            ((C32303 + C32297) * C26496 + (C32301 + C32289) * C26495) *
                C20477) *
               C79072) *
              C13595 +
          (((((C26498 * C1681 + C79306 * C1689) * C245 +
              (C26498 * C1905 + C79306 * C2313) * C79307) *
                 C26495 +
             (C30339 + C30349) * C26496) *
                C79117 -
            ((C27524 + C27504) * C26496 +
             ((C26498 * C247 + C79306 * C516) * C79307 +
              (C26498 * C97 + C79306 * C103) * C245) *
                 C26495) *
                C79110 -
            ((C37073 + C37071) * C26496 +
             ((C26498 * C1908 + C79306 * C2316) * C79307 +
              (C26498 * C1684 + C79306 * C1692) * C245) *
                 C26495) *
                C20477) *
               C79229 +
           (((C27504 + C27524) * C26495 + (C27507 + C27525) * C26496) * C79110 -
            ((C33793 + C33791) * C26496 + (C30349 + C30339) * C26495) * C79117 +
            ((C37071 + C37073) * C26495 +
             ((C26498 * C6046 + C79306 * C6052) * C245 +
              (C26498 * C6230 + C79306 * C6562) * C79307) *
                 C26496) *
                C20477) *
               C79072) *
              C78992)) /
        (p * q * std::sqrt(p + q));
    d2eezy[41] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
                 C245 +
             (C26551 * C246 + C26495 * C563 + C26552 * C973 + C26496 * C1463) *
                 C79307) *
                C79306 * C79110 -
            ((C26552 * C4165 + C26496 * C4715 + C26551 * C1906 +
              C26495 * C2396) *
                 C79307 +
             (C26552 * C3931 + C26496 * C4047 + C26551 * C1682 +
              C26495 * C1792) *
                 C245) *
                C79306 * C79117 +
            ((C26551 * C1683 + C26495 * C1793 + C26552 * C6042 +
              C26496 * C6140) *
                 C245 +
             (C26551 * C1907 + C26495 * C2397 + C26552 * C6226 +
              C26496 * C6638) *
                 C79307) *
                C79306 * C20477) *
               C79229 +
           (((C26551 * C3931 + C26495 * C4047 + C26552 * C6044 +
              C26496 * C6142) *
                 C245 +
             (C26551 * C4165 + C26495 * C4715 + C26552 * C6228 +
              C26496 * C6640) *
                 C79307) *
                C79306 * C79117 -
            ((C26552 * C974 + C26496 * C1464 + C26551 * C973 + C26495 * C1463) *
                 C79307 +
             (C26552 * C750 + C26496 * C860 + C26551 * C749 + C26495 * C859) *
                 C245) *
                C79306 * C79110 -
            ((C26552 * C6229 + C26496 * C6641 + C26551 * C6226 +
              C26495 * C6638) *
                 C79307 +
             (C26552 * C6045 + C26496 * C6143 + C26551 * C6042 +
              C26495 * C6140) *
                 C245) *
                C79306 * C20477) *
               C79072) *
              C13595 +
          ((((C26551 * C1681 + C26495 * C1791 + C26552 * C3932 +
              C26496 * C4048) *
                 C245 +
             (C26551 * C1905 + C26495 * C2395 + C26552 * C4166 +
              C26496 * C4716) *
                 C79307) *
                C79306 * C79117 -
            ((C26552 * C972 + C26496 * C1462 + C26551 * C247 + C26495 * C564) *
                 C79307 +
             (C26552 * C748 + C26496 * C858 + C26551 * C97 + C26495 * C168) *
                 C245) *
                C79306 * C79110 -
            ((C26552 * C6225 + C26496 * C6637 + C26551 * C1908 +
              C26495 * C2398) *
                 C79307 +
             (C26552 * C6041 + C26496 * C6139 + C26551 * C1684 +
              C26495 * C1794) *
                 C245) *
                C79306 * C20477) *
               C79229 +
           (((C26551 * C748 + C26495 * C858 + C26552 * C751 + C26496 * C861) *
                 C245 +
             (C26551 * C972 + C26495 * C1462 + C26552 * C975 + C26496 * C1465) *
                 C79307) *
                C79306 * C79110 -
            ((C26552 * C6227 + C26496 * C6639 + C26551 * C4166 +
              C26495 * C4716) *
                 C79307 +
             (C26552 * C6043 + C26496 * C6141 + C26551 * C3932 +
              C26495 * C4048) *
                 C245) *
                C79306 * C79117 +
            ((C26551 * C6041 + C26495 * C6139 + C26552 * C6046 +
              C26496 * C6144) *
                 C245 +
             (C26551 * C6225 + C26495 * C6637 + C26552 * C6230 +
              C26496 * C6642) *
                 C79307) *
                C79306 * C20477) *
               C79072) *
              C78992)) /
        (p * q * std::sqrt(p + q));
    d2eezz[41] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C631 * C96 + C639 + C639 + C79307 * C632) * C26495 +
             C27684 * C26496) *
                C79306 * C79110 -
            (C30551 * C26496 +
             (C631 * C1682 + C2509 + C2509 + C79307 * C2498) * C26495) *
                C79306 * C79117 +
            ((C631 * C1683 + C2510 + C2510 + C79307 * C2499) * C26495 +
             C32467 * C26496) *
                C79306 * C20477) *
               C79229 +
           ((C30551 * C26495 + C32468 * C26496) * C79306 * C79117 -
            (C27685 * C26496 + C27684 * C26495) * C79306 * C79110 -
            (C32469 * C26496 + C32467 * C26495) * C79306 * C20477) *
               C79072) *
              C13595 +
          (((C2530 * C26495 + C4844 * C26496) * C79306 * C79117 -
            (C1597 * C26496 + C661 * C26495) * C79306 * C79110 -
            (C11650 * C26496 + C2531 * C26495) * C79306 * C20477) *
               C79229 +
           ((C1597 * C26495 + C1598 * C26496) * C79306 * C79110 -
            (C8310 * C26496 + C4844 * C26495) * C79306 * C79117 +
            (C11650 * C26495 +
             (C631 * C6046 + C6729 + C6729 + C79307 * C6722) * C26496) *
                C79306 * C20477) *
               C79072) *
              C78992)) /
        (p * q * std::sqrt(p + q));
    d2eexx[42] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C79307 *
                 C26495 +
             C26970 * C26496) *
                C17509 -
            (C29706 * C26496 +
             (C26497 * C1682 + C27761 + C27761 + C79306 * C1698) * C79307 *
                 C26495) *
                C79114) *
               C79300 +
           ((C29706 * C26495 + C31778 * C26496) * C79114 -
            (C26971 * C26496 + C26970 * C26495) * C17509) *
               C79285 +
           ((C26971 * C26495 + C31275 * C26496) * C17509 -
            (C34065 * C26496 + C31778 * C26495) * C79114) *
               C79259) *
              C13595 +
          ((((C26497 * C1681 + C27764 + C27764 + C79306 * C1697) * C79307 *
                 C26495 +
             C29707 * C26496) *
                C79114 -
            (C26972 * C26496 +
             (C26497 * C97 + C26503 + C26503 + C79306 * C109) * C79307 *
                 C26495) *
                C17509) *
               C79300 +
           ((C26972 * C26495 + C26973 * C26496) * C17509 -
            (C33190 * C26496 + C29707 * C26495) * C79114) *
               C79285 +
           ((C33190 * C26495 +
             (C26497 * C8378 + C33186 + C33186 + C79306 * C8382) * C79307 *
                 C26496) *
                C79114 -
            (C32542 * C26496 + C26973 * C26495) * C17509) *
               C79259) *
              C78992)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C79307 * C26495 +
            C26970 * C26496) *
               C17509 -
           (C29706 * C26496 +
            (C26497 * C1682 + C27761 + C27761 + C79306 * C1698) * C79307 *
                C26495) *
               C79114) *
              C79009 * C79309 +
          (((C26497 * C1681 + C27764 + C27764 + C79306 * C1697) * C79307 *
                C26495 +
            C29707 * C26496) *
               C79114 -
           (C26972 * C26496 + (C26497 * C97 + C26503 + C26503 + C79306 * C109) *
                                  C79307 * C26495) *
               C17509) *
              C79009 * C79299 +
          (((C26497 * C98 + C26504 + C26504 + C79306 * C110) * C79307 * C26495 +
            C26974 * C26496) *
               C17509 -
           (C29708 * C26496 +
            (C26497 * C1685 + C27769 + C27769 + C79306 * C1701) * C79307 *
                C26495) *
               C79114) *
              C79009 * C79283 +
          (((C26497 * C1687 + C29058 + C29058 + C79306 * C1703) * C79307 *
                C26495 +
            (C26497 * C3934 + C29059 + C29059 + C79306 * C3942) * C79307 *
                C26496) *
               C79114 -
           (C28448 * C26496 + (C26497 * C99 + C26507 + C26507 + C79306 * C111) *
                                  C79307 * C26495) *
               C17509) *
              C79009 * C79263)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C79307 * C26495 +
            C26970 * C26496) *
               C79311 -
           (C29706 * C26496 +
            (C26497 * C1682 + C27761 + C27761 + C79306 * C1698) * C79307 *
                C26495) *
               C79305 +
           ((C26497 * C1683 + C27762 + C27762 + C79306 * C1699) * C79307 *
                C26495 +
            C31777 * C26496) *
               C79293 -
           (C37943 * C26496 +
            (C26497 * C10320 + C36012 + C36012 + C79306 * C10328) * C79307 *
                C26495) *
               C79275) *
              C79009 * C13595 +
          (((C26497 * C1681 + C27764 + C27764 + C79306 * C1697) * C79307 *
                C26495 +
            C29707 * C26496) *
               C79305 -
           (C26972 * C26496 + (C26497 * C97 + C26503 + C26503 + C79306 * C109) *
                                  C79307 * C26495) *
               C79311 -
           (C36470 * C26496 +
            (C26497 * C1684 + C27767 + C27767 + C79306 * C1700) * C79307 *
                C26495) *
               C79293 +
           ((C26497 * C10319 + C37336 + C37336 + C79306 * C10327) * C79307 *
                C26495 +
            (C26497 * C12366 + C37337 + C37337 + C79306 * C12370) * C79307 *
                C26496) *
               C79275) *
              C79009 * C78992)) /
            (p * q * std::sqrt(p + q));
    d2eexy[42] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
                 C26498 +
             (C26551 * C102 + C26495 * C173 + C26552 * C757 + C26496 * C867) *
                 C79306) *
                C79307 * C17509 -
            ((C26552 * C3935 + C26496 * C4051 + C26551 * C1690 +
              C26495 * C1800) *
                 C79306 +
             (C26552 * C3931 + C26496 * C4047 + C26551 * C1682 +
              C26495 * C1792) *
                 C26498) *
                C79307 * C79114) *
               C79300 +
           (((C26551 * C3931 + C26495 * C4047 + C26552 * C6044 +
              C26496 * C6142) *
                 C26498 +
             (C26551 * C3935 + C26495 * C4051 + C26552 * C6050 +
              C26496 * C6148) *
                 C79306) *
                C79307 * C79114 -
            ((C26552 * C758 + C26496 * C868 + C26551 * C757 + C26495 * C867) *
                 C79306 +
             (C26552 * C750 + C26496 * C860 + C26551 * C749 + C26495 * C859) *
                 C26498) *
                C79307 * C17509) *
               C79285 +
           (((C26551 * C750 + C26495 * C860 + C26552 * C5568 + C26496 * C5626) *
                 C26498 +
             (C26551 * C758 + C26495 * C868 + C26552 * C5572 + C26496 * C5630) *
                 C79306) *
                C79307 * C17509 -
            ((C26552 * C8379 + C26496 * C8453 + C26551 * C6050 +
              C26495 * C6148) *
                 C79306 +
             (C26552 * C8377 + C26496 * C8451 + C26551 * C6044 +
              C26495 * C6142) *
                 C26498) *
                C79307 * C79114) *
               C79259) *
              C13595 +
          ((((C26551 * C1681 + C26495 * C1791 + C26552 * C3932 +
              C26496 * C4048) *
                 C26498 +
             (C26551 * C1689 + C26495 * C1799 + C26552 * C3936 +
              C26496 * C4052) *
                 C79306) *
                C79307 * C79114 -
            ((C26552 * C756 + C26496 * C866 + C26551 * C103 + C26495 * C174) *
                 C79306 +
             (C26552 * C748 + C26496 * C858 + C26551 * C97 + C26495 * C168) *
                 C26498) *
                C79307 * C17509) *
               C79300 +
           (((C26551 * C748 + C26495 * C858 + C26552 * C751 + C26496 * C861) *
                 C26498 +
             (C26551 * C756 + C26495 * C866 + C26552 * C759 + C26496 * C869) *
                 C79306) *
                C79307 * C17509 -
            ((C26552 * C6049 + C26496 * C6147 + C26551 * C3936 +
              C26495 * C4052) *
                 C79306 +
             (C26552 * C6043 + C26496 * C6141 + C26551 * C3932 +
              C26495 * C4048) *
                 C26498) *
                C79307 * C79114) *
               C79285 +
           (((C26551 * C6043 + C26495 * C6141 + C26552 * C8378 +
              C26496 * C8452) *
                 C26498 +
             (C26551 * C6049 + C26495 * C6147 + C26552 * C8380 +
              C26496 * C8454) *
                 C79306) *
                C79307 * C79114 -
            ((C26552 * C5571 + C26496 * C5629 + C26551 * C759 + C26495 * C869) *
                 C79306 +
             (C26552 * C5567 + C26496 * C5625 + C26551 * C751 + C26495 * C861) *
                 C26498) *
                C79307 * C17509) *
               C79259) *
              C78992)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
                C26498 +
            (C26551 * C102 + C26495 * C173 + C26552 * C757 + C26496 * C867) *
                C79306) *
               C79307 * C17509 -
           ((C26552 * C3935 + C26496 * C4051 + C26551 * C1690 +
             C26495 * C1800) *
                C79306 +
            (C26552 * C3931 + C26496 * C4047 + C26551 * C1682 +
             C26495 * C1792) *
                C26498) *
               C79307 * C79114) *
              C79009 * C79309 +
          (((C26551 * C1681 + C26495 * C1791 + C26552 * C3932 +
             C26496 * C4048) *
                C26498 +
            (C26551 * C1689 + C26495 * C1799 + C26552 * C3936 +
             C26496 * C4052) *
                C79306) *
               C79307 * C79114 -
           ((C26552 * C756 + C26496 * C866 + C26551 * C103 + C26495 * C174) *
                C79306 +
            (C26552 * C748 + C26496 * C858 + C26551 * C97 + C26495 * C168) *
                C26498) *
               C79307 * C17509) *
              C79009 * C79299 +
          (((C26551 * C98 + C26495 * C169 + C26552 * C752 + C26496 * C862) *
                C26498 +
            (C26551 * C104 + C26495 * C175 + C26552 * C760 + C26496 * C870) *
                C79306) *
               C79307 * C17509 -
           ((C26552 * C3937 + C26496 * C4053 + C26551 * C1693 +
             C26495 * C1803) *
                C79306 +
            (C26552 * C3933 + C26496 * C4049 + C26551 * C1685 +
             C26495 * C1795) *
                C26498) *
               C79307 * C79114) *
              C79009 * C79283 +
          (((C26551 * C1687 + C26495 * C1797 + C26552 * C3934 +
             C26496 * C4050) *
                C26498 +
            (C26551 * C1695 + C26495 * C1805 + C26552 * C3938 +
             C26496 * C4054) *
                C79306) *
               C79307 * C79114 -
           ((C26552 * C762 + C26496 * C872 + C26551 * C105 + C26495 * C176) *
                C79306 +
            (C26552 * C754 + C26496 * C864 + C26551 * C99 + C26495 * C170) *
                C26498) *
               C79307 * C17509) *
              C79009 * C79263)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
                C26498 +
            (C26551 * C102 + C26495 * C173 + C26552 * C757 + C26496 * C867) *
                C79306) *
               C79307 * C79311 -
           ((C26552 * C3935 + C26496 * C4051 + C26551 * C1690 +
             C26495 * C1800) *
                C79306 +
            (C26552 * C3931 + C26496 * C4047 + C26551 * C1682 +
             C26495 * C1792) *
                C26498) *
               C79307 * C79305 +
           ((C26551 * C1683 + C26495 * C1793 + C26552 * C6042 +
             C26496 * C6140) *
                C26498 +
            (C26551 * C1691 + C26495 * C1801 + C26552 * C6048 +
             C26496 * C6146) *
                C79306) *
               C79307 * C79293 -
           ((C26552 * C12367 + C26496 * C12441 + C26551 * C10324 +
             C26495 * C10382) *
                C79306 +
            (C26552 * C12365 + C26496 * C12439 + C26551 * C10320 +
             C26495 * C10378) *
                C26498) *
               C79307 * C79275) *
              C79009 * C13595 +
          (((C26551 * C1681 + C26495 * C1791 + C26552 * C3932 +
             C26496 * C4048) *
                C26498 +
            (C26551 * C1689 + C26495 * C1799 + C26552 * C3936 +
             C26496 * C4052) *
                C79306) *
               C79307 * C79305 -
           ((C26552 * C756 + C26496 * C866 + C26551 * C103 + C26495 * C174) *
                C79306 +
            (C26552 * C748 + C26496 * C858 + C26551 * C97 + C26495 * C168) *
                C26498) *
               C79307 * C79311 -
           ((C26552 * C6047 + C26496 * C6145 + C26551 * C1692 +
             C26495 * C1802) *
                C79306 +
            (C26552 * C6041 + C26496 * C6139 + C26551 * C1684 +
             C26495 * C1794) *
                C26498) *
               C79307 * C79293 +
           ((C26551 * C10319 + C26495 * C10377 + C26552 * C12366 +
             C26496 * C12440) *
                C26498 +
            (C26551 * C10323 + C26495 * C10381 + C26552 * C12368 +
             C26496 * C12442) *
                C79306) *
               C79307 * C79275) *
              C79009 * C78992)) /
            (p * q * std::sqrt(p + q));
    d2eexz[42] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C245 * C96 + C79307 * C246) * C26498 +
              (C245 * C102 + C79307 * C252) * C79306) *
                 C26495 +
             (C27144 + C27145) * C26496) *
                C17509 -
            ((C29915 + C29916) * C26496 +
             ((C245 * C1690 + C79307 * C1914) * C79306 +
              (C245 * C1682 + C79307 * C1906) * C26498) *
                 C26495) *
                C79114) *
               C79300 +
           (((C29916 + C29915) * C26495 + (C31952 + C31953) * C26496) * C79114 -
            ((C27146 + C27147) * C26496 + (C27145 + C27144) * C26495) *
                C17509) *
               C79285 +
           (((C27147 + C27146) * C26495 + (C31377 + C31378) * C26496) * C17509 -
            ((C34208 + C34209) * C26496 + (C31953 + C31952) * C26495) *
                C79114) *
               C79259) *
              C13595 +
          ((((C1939 * C26498 + C1938 * C79306) * C26495 +
             (C29909 + C29910) * C26496) *
                C79114 -
            ((C27133 + C27132) * C26496 +
             (C276 * C79306 + C275 * C26498) * C26495) *
                C17509) *
               C79300 +
           (((C27132 + C27133) * C26495 + (C27134 + C27135) * C26496) * C17509 -
            ((C33387 + C33388) * C26496 + (C29910 + C29909) * C26495) *
                C79114) *
               C79285 +
           (((C33388 + C33387) * C26495 +
             ((C245 * C8378 + C79307 * C8522) * C26498 +
              (C245 * C8380 + C79307 * C8524) * C79306) *
                 C26496) *
                C79114 -
            ((C32675 + C32676) * C26496 + (C27135 + C27134) * C26495) *
                C17509) *
               C79259) *
              C78992)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C245 * C96 + C79307 * C246) * C26498 +
             (C245 * C102 + C79307 * C252) * C79306) *
                C26495 +
            (C27144 + C27145) * C26496) *
               C17509 -
           ((C29915 + C29916) * C26496 +
            ((C245 * C1690 + C79307 * C1914) * C79306 +
             (C245 * C1682 + C79307 * C1906) * C26498) *
                C26495) *
               C79114) *
              C79009 * C79309 +
          (((C1939 * C26498 + C1938 * C79306) * C26495 +
            (C29909 + C29910) * C26496) *
               C79114 -
           ((C27133 + C27132) * C26496 +
            (C276 * C79306 + C275 * C26498) * C26495) *
               C17509) *
              C79009 * C79299 +
          (((C278 * C26498 + C277 * C79306) * C26495 +
            (C27136 + C27137) * C26496) *
               C17509 -
           ((C29911 + C29912) * C26496 +
            (C1943 * C79306 + C1942 * C26498) * C26495) *
               C79114) *
              C79009 * C79283 +
          (((C3408 * C26498 + C3407 * C79306) * C26495 +
            ((C245 * C3934 + C79307 * C4168) * C26498 +
             (C245 * C3938 + C79307 * C4172) * C79306) *
                C26496) *
               C79114 -
           ((C28582 + C28581) * C26496 +
            (C280 * C79306 + C279 * C26498) * C26495) *
               C17509) *
              C79009 * C79263)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C245 * C96 + C79307 * C246) * C26498 +
             (C245 * C102 + C79307 * C252) * C79306) *
                C26495 +
            (C27144 + C27145) * C26496) *
               C79311 -
           ((C29915 + C29916) * C26496 +
            ((C245 * C1690 + C79307 * C1914) * C79306 +
             (C245 * C1682 + C79307 * C1906) * C26498) *
                C26495) *
               C79305 +
           (((C245 * C1683 + C79307 * C1907) * C26498 +
             (C245 * C1691 + C79307 * C1915) * C79306) *
                C26495 +
            (C31950 + C31951) * C26496) *
               C79293 -
           ((C38086 + C38087) * C26496 +
            ((C245 * C10324 + C79307 * C10432) * C79306 +
             (C245 * C10320 + C79307 * C10428) * C26498) *
                C26495) *
               C79275) *
              C79009 * C13595 +
          (((C1939 * C26498 + C1938 * C79306) * C26495 +
            (C29909 + C29910) * C26496) *
               C79305 -
           ((C27133 + C27132) * C26496 +
            (C276 * C79306 + C275 * C26498) * C26495) *
               C79311 -
           ((C36667 + C36668) * C26496 +
            (C1941 * C79306 + C1940 * C26498) * C26495) *
               C79293 +
           ((C11874 * C26498 + C11873 * C79306) * C26495 +
            ((C245 * C12366 + C79307 * C12510) * C26498 +
             (C245 * C12368 + C79307 * C12512) * C79306) *
                C26496) *
               C79275) *
              C79009 * C78992)) /
            (p * q * std::sqrt(p + q));
    d2eeyx[42] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((((C26498 * C96 + C79306 * C102) * C26551 +
                       (C26498 * C167 + C79306 * C324) * C26495 +
                       C27246 * C26552 + C27247 * C26496) *
                          C79307 * C17509 -
                      (C30027 * C26496 + C30028 * C26552 +
                       (C26498 * C1792 + C79306 * C2020) * C26495 +
                       (C26498 * C1682 + C79306 * C1690) * C26551) *
                          C79307 * C79114) *
                         C79300 +
                     ((C30028 * C26551 + C30027 * C26495 + C32045 * C26552 +
                       C32046 * C26496) *
                          C79307 * C79114 -
                      (C27248 * C26496 + C27249 * C26552 + C27247 * C26495 +
                       C27246 * C26551) *
                          C79307 * C17509) *
                         C79285 +
                     ((C27249 * C26551 + C27248 * C26495 + C31432 * C26552 +
                       C31433 * C26496) *
                          C79307 * C17509 -
                      (C34281 * C26496 + C34282 * C26552 + C32046 * C26495 +
                       C32045 * C26551) *
                          C79307 * C79114) *
                         C79259) *
                        C13595 +
                    ((((C26498 * C1681 + C79306 * C1689) * C26551 +
                       (C26498 * C1791 + C79306 * C2019) * C26495 +
                       C30029 * C26552 + C30030 * C26496) *
                          C79307 * C79114 -
                      (C27251 * C26496 + C27250 * C26552 +
                       (C26498 * C168 + C79306 * C325) * C26495 +
                       (C26498 * C97 + C79306 * C103) * C26551) *
                          C79307 * C17509) *
                         C79300 +
                     ((C27250 * C26551 + C27251 * C26495 + C27252 * C26552 +
                       C27253 * C26496) *
                          C79307 * C17509 -
                      (C33491 * C26496 + C33492 * C26552 + C30030 * C26495 +
                       C30029 * C26551) *
                          C79307 * C79114) *
                         C79285 +
                     ((C33492 * C26551 + C33491 * C26495 +
                       (C26498 * C8378 + C79306 * C8380) * C26552 +
                       (C26498 * C8452 + C79306 * C8592) * C26496) *
                          C79307 * C79114 -
                      (C32747 * C26496 + C32748 * C26552 + C27253 * C26495 +
                       C27252 * C26551) *
                          C79307 * C17509) *
                         C79259) *
                        C78992)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C26498 * C96 + C79306 * C102) * C26551 +
                      (C26498 * C167 + C79306 * C324) * C26495 +
                      C27246 * C26552 + C27247 * C26496) *
                         C79307 * C17509 -
                     (C30027 * C26496 + C30028 * C26552 +
                      (C26498 * C1792 + C79306 * C2020) * C26495 +
                      (C26498 * C1682 + C79306 * C1690) * C26551) *
                         C79307 * C79114) *
                        C79009 * C79309 +
                    (((C26498 * C1681 + C79306 * C1689) * C26551 +
                      (C26498 * C1791 + C79306 * C2019) * C26495 +
                      C30029 * C26552 + C30030 * C26496) *
                         C79307 * C79114 -
                     (C27251 * C26496 + C27250 * C26552 +
                      (C26498 * C168 + C79306 * C325) * C26495 +
                      (C26498 * C97 + C79306 * C103) * C26551) *
                         C79307 * C17509) *
                        C79009 * C79299 +
                    (((C26498 * C98 + C79306 * C104) * C26551 +
                      (C26498 * C169 + C79306 * C326) * C26495 +
                      C27254 * C26552 + C27255 * C26496) *
                         C79307 * C17509 -
                     (C30031 * C26496 + C30032 * C26552 +
                      (C26498 * C1795 + C79306 * C2023) * C26495 +
                      (C26498 * C1685 + C79306 * C1693) * C26551) *
                         C79307 * C79114) *
                        C79009 * C79283 +
                    (((C26498 * C1687 + C79306 * C1695) * C26551 +
                      (C26498 * C1797 + C79306 * C2025) * C26495 +
                      (C26498 * C3934 + C79306 * C3938) * C26552 +
                      (C26498 * C4050 + C79306 * C4286) * C26496) *
                         C79307 * C79114 -
                     (C28654 * C26496 + C28653 * C26552 +
                      (C26498 * C170 + C79306 * C327) * C26495 +
                      (C26498 * C99 + C79306 * C105) * C26551) *
                         C79307 * C17509) *
                        C79009 * C79263)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C26498 * C96 + C79306 * C102) * C26551 +
                      (C26498 * C167 + C79306 * C324) * C26495 +
                      C27246 * C26552 + C27247 * C26496) *
                         C79307 * C79311 -
                     (C30027 * C26496 + C30028 * C26552 +
                      (C26498 * C1792 + C79306 * C2020) * C26495 +
                      (C26498 * C1682 + C79306 * C1690) * C26551) *
                         C79307 * C79305 +
                     ((C26498 * C1683 + C79306 * C1691) * C26551 +
                      (C26498 * C1793 + C79306 * C2021) * C26495 +
                      C32043 * C26552 + C32044 * C26496) *
                         C79307 * C79293 -
                     (C38159 * C26496 + C38160 * C26552 +
                      (C26498 * C10378 + C79306 * C10478) * C26495 +
                      (C26498 * C10320 + C79306 * C10324) * C26551) *
                         C79307 * C79275) *
                        C79009 * C13595 +
                    (((C26498 * C1681 + C79306 * C1689) * C26551 +
                      (C26498 * C1791 + C79306 * C2019) * C26495 +
                      C30029 * C26552 + C30030 * C26496) *
                         C79307 * C79305 -
                     (C27251 * C26496 + C27250 * C26552 +
                      (C26498 * C168 + C79306 * C325) * C26495 +
                      (C26498 * C97 + C79306 * C103) * C26551) *
                         C79307 * C79311 -
                     (C36771 * C26496 + C36772 * C26552 +
                      (C26498 * C1794 + C79306 * C2022) * C26495 +
                      (C26498 * C1684 + C79306 * C1692) * C26551) *
                         C79307 * C79293 +
                     ((C26498 * C10319 + C79306 * C10323) * C26551 +
                      (C26498 * C10377 + C79306 * C10477) * C26495 +
                      (C26498 * C12366 + C79306 * C12368) * C26552 +
                      (C26498 * C12440 + C79306 * C12580) * C26496) *
                         C79307 * C79275) *
                        C79009 * C78992)) /
                      (p * q * std::sqrt(p + q));
    d2eeyy[42] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C26679 * C96 + C26682 + C26682 + C26495 * C373 +
                       C26680 * C749 + C26683 + C26683 + C26496 * C1169) *
                          C79306 * C79307 * C17509 -
                      (C26680 * C3931 + C28068 + C28068 + C26496 * C4385 +
                       C26679 * C1682 + C28069 + C28069 + C26495 * C2102) *
                          C79306 * C79307 * C79114) *
                         C79300 +
                     ((C26679 * C3931 + C30131 + C30131 + C26495 * C4385 +
                       C26680 * C6044 + C30132 + C30132 + C26496 * C6394) *
                          C79306 * C79307 * C79114 -
                      (C26680 * C750 + C27332 + C27332 + C26496 * C1170 +
                       C26679 * C749 + C27333 + C27333 + C26495 * C1169) *
                          C79306 * C79307 * C17509) *
                         C79285 +
                     ((C26679 * C750 + C27334 + C27334 + C26495 * C1170 +
                       C26680 * C5568 + C27335 + C27335 + C26496 * C5772) *
                          C79306 * C79307 * C17509 -
                      (C26680 * C8377 + C32126 + C32126 + C26496 * C8659 +
                       C26679 * C6044 + C32127 + C32127 + C26495 * C6394) *
                          C79306 * C79307 * C79114) *
                         C79259) *
                        C13595 +
                    (((C26679 * C1681 + C28072 + C28072 + C26495 * C2101 +
                       C26680 * C3932 + C28073 + C28073 + C26496 * C4386) *
                          C79306 * C79307 * C79114 -
                      (C26680 * C748 + C26684 + C26684 + C26496 * C1168 +
                       C26679 * C97 + C26685 + C26685 + C26495 * C374) *
                          C79306 * C79307 * C17509) *
                         C79300 +
                     ((C26679 * C748 + C27336 + C27336 + C26495 * C1168 +
                       C26680 * C751 + C27337 + C27337 + C26496 * C1171) *
                          C79306 * C79307 * C17509 -
                      (C26680 * C6043 + C30133 + C30133 + C26496 * C6393 +
                       C26679 * C3932 + C30134 + C30134 + C26495 * C4386) *
                          C79306 * C79307 * C79114) *
                         C79285 +
                     ((C26679 * C6043 + C33591 + C33591 + C26495 * C6393 +
                       C26680 * C8378 + C33592 + C33592 + C26496 * C8660) *
                          C79306 * C79307 * C79114 -
                      (C26680 * C5567 + C27338 + C27338 + C26496 * C5771 +
                       C26679 * C751 + C27339 + C27339 + C26495 * C1171) *
                          C79306 * C79307 * C17509) *
                         C79259) *
                        C78992)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C26679 * C96 + C26682 + C26682 + C26495 * C373 +
                      C26680 * C749 + C26683 + C26683 + C26496 * C1169) *
                         C79306 * C79307 * C17509 -
                     (C26680 * C3931 + C28068 + C28068 + C26496 * C4385 +
                      C26679 * C1682 + C28069 + C28069 + C26495 * C2102) *
                         C79306 * C79307 * C79114) *
                        C79009 * C79309 +
                    ((C26679 * C1681 + C28072 + C28072 + C26495 * C2101 +
                      C26680 * C3932 + C28073 + C28073 + C26496 * C4386) *
                         C79306 * C79307 * C79114 -
                     (C26680 * C748 + C26684 + C26684 + C26496 * C1168 +
                      C26679 * C97 + C26685 + C26685 + C26495 * C374) *
                         C79306 * C79307 * C17509) *
                        C79009 * C79299 +
                    ((C26679 * C98 + C26686 + C26686 + C26495 * C375 +
                      C26680 * C752 + C26687 + C26687 + C26496 * C1172) *
                         C79306 * C79307 * C17509 -
                     (C26680 * C3933 + C28076 + C28076 + C26496 * C4387 +
                      C26679 * C1685 + C28077 + C28077 + C26495 * C2105) *
                         C79306 * C79307 * C79114) *
                        C79009 * C79283 +
                    ((C26679 * C1687 + C29324 + C29324 + C26495 * C2107 +
                      C26680 * C3934 + C29325 + C29325 + C26496 * C4388) *
                         C79306 * C79307 * C79114 -
                     (C26680 * C754 + C26688 + C26688 + C26496 * C1174 +
                      C26679 * C99 + C26689 + C26689 + C26495 * C376) *
                         C79306 * C79307 * C17509) *
                        C79009 * C79263)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((C26679 * C96 + C26682 + C26682 + C26495 * C373 +
                      C26680 * C749 + C26683 + C26683 + C26496 * C1169) *
                         C79306 * C79307 * C79311 -
                     (C26680 * C3931 + C28068 + C28068 + C26496 * C4385 +
                      C26679 * C1682 + C28069 + C28069 + C26495 * C2102) *
                         C79306 * C79307 * C79305 +
                     (C26679 * C1683 + C28070 + C28070 + C26495 * C2103 +
                      C26680 * C6042 + C28071 + C28071 + C26496 * C6392) *
                         C79306 * C79307 * C79293 -
                     (C26680 * C12365 + C36189 + C36189 + C26496 * C12647 +
                      C26679 * C10320 + C36190 + C36190 + C26495 * C10524) *
                         C79306 * C79307 * C79275) *
                        C79009 * C13595 +
                    ((C26679 * C1681 + C28072 + C28072 + C26495 * C2101 +
                      C26680 * C3932 + C28073 + C28073 + C26496 * C4386) *
                         C79306 * C79307 * C79305 -
                     (C26680 * C748 + C26684 + C26684 + C26496 * C1168 +
                      C26679 * C97 + C26685 + C26685 + C26495 * C374) *
                         C79306 * C79307 * C79311 -
                     (C26680 * C6041 + C28074 + C28074 + C26496 * C6391 +
                      C26679 * C1684 + C28075 + C28075 + C26495 * C2104) *
                         C79306 * C79307 * C79293 +
                     (C26679 * C10319 + C37602 + C37602 + C26495 * C10523 +
                      C26680 * C12366 + C37603 + C37603 + C26496 * C12648) *
                         C79306 * C79307 * C79275) *
                        C79009 * C78992)) /
                      (p * q * std::sqrt(p + q));
    d2eeyz[42] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C245 * C96 + C79307 * C246) * C26551 +
             (C245 * C167 + C79307 * C447) * C26495 + C27140 * C26552 +
             C27422 * C26496) *
                C79306 * C17509 -
            (C30237 * C26496 + C29914 * C26552 +
             (C245 * C1792 + C79307 * C2212) * C26495 +
             (C245 * C1682 + C79307 * C1906) * C26551) *
                C79306 * C79114) *
               C79300 +
           ((C29914 * C26551 + C30237 * C26495 + C31946 * C26552 +
             C32212 * C26496) *
                C79306 * C79114 -
            (C27423 * C26496 + C27143 * C26552 + C27422 * C26495 +
             C27140 * C26551) *
                C79306 * C17509) *
               C79285 +
           ((C27143 * C26551 + C27423 * C26495 + C31373 * C26552 +
             C31530 * C26496) *
                C79306 * C17509 -
            (C34421 * C26496 + C34207 * C26552 + C32212 * C26495 +
             C31946 * C26551) *
                C79306 * C79114) *
               C79259) *
              C13595 +
          (((C1939 * C26551 + C2232 * C26495 + C4182 * C26552 +
             C4512 * C26496) *
                C79306 * C79114 -
            (C1299 * C26496 + C1006 * C26552 + C466 * C26495 + C275 * C26551) *
                C79306 * C17509) *
               C79300 +
           ((C1006 * C26551 + C1299 * C26495 + C1007 * C26552 +
             C1300 * C26496) *
                C79306 * C17509 -
            (C8001 * C26496 + C7694 * C26552 + C4512 * C26495 +
             C4182 * C26551) *
                C79306 * C79114) *
               C79285 +
           ((C7694 * C26551 + C8001 * C26495 +
             (C245 * C8378 + C79307 * C8522) * C26552 +
             (C245 * C8452 + C79307 * C8730) * C26496) *
                C79306 * C79114 -
            (C7165 * C26496 + C6954 * C26552 + C1300 * C26495 +
             C1007 * C26551) *
                C79306 * C17509) *
               C79259) *
              C78992)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C245 * C96 + C79307 * C246) * C26551 +
            (C245 * C167 + C79307 * C447) * C26495 + C27140 * C26552 +
            C27422 * C26496) *
               C79306 * C17509 -
           (C30237 * C26496 + C29914 * C26552 +
            (C245 * C1792 + C79307 * C2212) * C26495 +
            (C245 * C1682 + C79307 * C1906) * C26551) *
               C79306 * C79114) *
              C79009 * C79309 +
          ((C1939 * C26551 + C2232 * C26495 + C4182 * C26552 + C4512 * C26496) *
               C79306 * C79114 -
           (C1299 * C26496 + C1006 * C26552 + C466 * C26495 + C275 * C26551) *
               C79306 * C17509) *
              C79009 * C79299 +
          ((C278 * C26551 + C467 * C26495 + C1009 * C26552 + C1301 * C26496) *
               C79306 * C17509 -
           (C4513 * C26496 + C4185 * C26552 + C2234 * C26495 + C1942 * C26551) *
               C79306 * C79114) *
              C79009 * C79283 +
          ((C3408 * C26551 + C3619 * C26495 +
            (C245 * C3934 + C79307 * C4168) * C26552 +
            (C245 * C4050 + C79307 * C4504) * C26496) *
               C79306 * C79114 -
           (C2973 * C26496 + C2762 * C26552 + C468 * C26495 + C279 * C26551) *
               C79306 * C17509) *
              C79009 * C79263)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C245 * C96 + C79307 * C246) * C26551 +
            (C245 * C167 + C79307 * C447) * C26495 + C27140 * C26552 +
            C27422 * C26496) *
               C79306 * C79311 -
           (C30237 * C26496 + C29914 * C26552 +
            (C245 * C1792 + C79307 * C2212) * C26495 +
            (C245 * C1682 + C79307 * C1906) * C26551) *
               C79306 * C79305 +
           ((C245 * C1683 + C79307 * C1907) * C26551 +
            (C245 * C1793 + C79307 * C2213) * C26495 + C31944 * C26552 +
            C32211 * C26496) *
               C79306 * C79293 -
           (C38299 * C26496 + C38085 * C26552 +
            (C245 * C10378 + C79307 * C10574) * C26495 +
            (C245 * C10320 + C79307 * C10428) * C26551) *
               C79306 * C79275) *
              C79009 * C13595 +
          ((C1939 * C26551 + C2232 * C26495 + C4182 * C26552 + C4512 * C26496) *
               C79306 * C79305 -
           (C1299 * C26496 + C1006 * C26552 + C466 * C26495 + C275 * C26551) *
               C79306 * C79311 -
           (C11341 * C26496 + C11034 * C26552 + C2233 * C26495 +
            C1940 * C26551) *
               C79306 * C79293 +
           (C11874 * C26551 + C12085 * C26495 +
            (C245 * C12366 + C79307 * C12510) * C26552 +
            (C245 * C12440 + C79307 * C12718) * C26496) *
               C79306 * C79275) *
              C79009 * C78992)) /
            (p * q * std::sqrt(p + q));
    d2eezx[42] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C26498 * C96 + C79306 * C102) * C245 +
              (C26498 * C246 + C79306 * C515) * C79307) *
                 C26495 +
             (C27498 + C27522) * C26496) *
                C17509 -
            ((C30348 + C30338) * C26496 +
             ((C26498 * C1906 + C79306 * C2314) * C79307 +
              (C26498 * C1682 + C79306 * C1690) * C245) *
                 C26495) *
                C79114) *
               C79300 +
           (((C30338 + C30348) * C26495 + (C32292 + C32302) * C26496) * C79114 -
            ((C27523 + C27503) * C26496 + (C27522 + C27498) * C26495) *
                C17509) *
               C79285 +
           (((C27503 + C27523) * C26495 + (C31575 + C31583) * C26496) * C17509 -
            ((C34493 + C34491) * C26496 + (C32302 + C32292) * C26495) *
                C79114) *
               C79259) *
              C13595 +
          (((((C26498 * C1681 + C79306 * C1689) * C245 +
              (C26498 * C1905 + C79306 * C2313) * C79307) *
                 C26495 +
             (C30339 + C30349) * C26496) *
                C79114 -
            ((C27524 + C27504) * C26496 +
             ((C26498 * C247 + C79306 * C516) * C79307 +
              (C26498 * C97 + C79306 * C103) * C245) *
                 C26495) *
                C17509) *
               C79300 +
           (((C27504 + C27524) * C26495 + (C27507 + C27525) * C26496) * C17509 -
            ((C33793 + C33791) * C26496 + (C30349 + C30339) * C26495) *
                C79114) *
               C79285 +
           (((C33791 + C33793) * C26495 +
             ((C26498 * C8378 + C79306 * C8380) * C245 +
              (C26498 * C8522 + C79306 * C8798) * C79307) *
                 C26496) *
                C79114 -
            ((C32953 + C32951) * C26496 + (C27525 + C27507) * C26495) *
                C17509) *
               C79259) *
              C78992)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C26498 * C96 + C79306 * C102) * C245 +
             (C26498 * C246 + C79306 * C515) * C79307) *
                C26495 +
            (C27498 + C27522) * C26496) *
               C17509 -
           ((C30348 + C30338) * C26496 +
            ((C26498 * C1906 + C79306 * C2314) * C79307 +
             (C26498 * C1682 + C79306 * C1690) * C245) *
                C26495) *
               C79114) *
              C79009 * C79309 +
          ((((C26498 * C1681 + C79306 * C1689) * C245 +
             (C26498 * C1905 + C79306 * C2313) * C79307) *
                C26495 +
            (C30339 + C30349) * C26496) *
               C79114 -
           ((C27524 + C27504) * C26496 +
            ((C26498 * C247 + C79306 * C516) * C79307 +
             (C26498 * C97 + C79306 * C103) * C245) *
                C26495) *
               C17509) *
              C79009 * C79299 +
          ((((C26498 * C98 + C79306 * C104) * C245 +
             (C26498 * C248 + C79306 * C517) * C79307) *
                C26495 +
            (C27510 + C27526) * C26496) *
               C17509 -
           ((C30350 + C30344) * C26496 +
            ((C26498 * C1909 + C79306 * C2317) * C79307 +
             (C26498 * C1685 + C79306 * C1693) * C245) *
                C26495) *
               C79114) *
              C79009 * C79283 +
          ((((C26498 * C1687 + C79306 * C1695) * C245 +
             (C26498 * C1911 + C79306 * C2319) * C79307) *
                C26495 +
            ((C26498 * C3934 + C79306 * C3938) * C245 +
             (C26498 * C4168 + C79306 * C4616) * C79307) *
                C26496) *
               C79114 -
           ((C28859 + C28855) * C26496 +
            ((C26498 * C249 + C79306 * C518) * C79307 +
             (C26498 * C99 + C79306 * C105) * C245) *
                C26495) *
               C17509) *
              C79009 * C79263)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C26498 * C96 + C79306 * C102) * C245 +
             (C26498 * C246 + C79306 * C515) * C79307) *
                C26495 +
            (C27498 + C27522) * C26496) *
               C79311 -
           ((C30348 + C30338) * C26496 +
            ((C26498 * C1906 + C79306 * C2314) * C79307 +
             (C26498 * C1682 + C79306 * C1690) * C245) *
                C26495) *
               C79305 +
           (((C26498 * C1683 + C79306 * C1691) * C245 +
             (C26498 * C1907 + C79306 * C2315) * C79307) *
                C26495 +
            (C32289 + C32301) * C26496) *
               C79293 -
           ((C38371 + C38369) * C26496 +
            ((C26498 * C10428 + C79306 * C10620) * C79307 +
             (C26498 * C10320 + C79306 * C10324) * C245) *
                C26495) *
               C79275) *
              C79009 * C13595 +
          ((((C26498 * C1681 + C79306 * C1689) * C245 +
             (C26498 * C1905 + C79306 * C2313) * C79307) *
                C26495 +
            (C30339 + C30349) * C26496) *
               C79305 -
           ((C27524 + C27504) * C26496 +
            ((C26498 * C247 + C79306 * C516) * C79307 +
             (C26498 * C97 + C79306 * C103) * C245) *
                C26495) *
               C79311 -
           ((C37073 + C37071) * C26496 +
            ((C26498 * C1908 + C79306 * C2316) * C79307 +
             (C26498 * C1684 + C79306 * C1692) * C245) *
                C26495) *
               C79293 +
           (((C26498 * C10319 + C79306 * C10323) * C245 +
             (C26498 * C10427 + C79306 * C10619) * C79307) *
                C26495 +
            ((C26498 * C12366 + C79306 * C12368) * C245 +
             (C26498 * C12510 + C79306 * C12786) * C79307) *
                C26496) *
               C79275) *
              C79009 * C78992)) /
            (p * q * std::sqrt(p + q));
    d2eezy[42] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
                 C245 +
             (C26551 * C246 + C26495 * C563 + C26552 * C973 + C26496 * C1463) *
                 C79307) *
                C79306 * C17509 -
            ((C26552 * C4165 + C26496 * C4715 + C26551 * C1906 +
              C26495 * C2396) *
                 C79307 +
             (C26552 * C3931 + C26496 * C4047 + C26551 * C1682 +
              C26495 * C1792) *
                 C245) *
                C79306 * C79114) *
               C79300 +
           (((C26551 * C3931 + C26495 * C4047 + C26552 * C6044 +
              C26496 * C6142) *
                 C245 +
             (C26551 * C4165 + C26495 * C4715 + C26552 * C6228 +
              C26496 * C6640) *
                 C79307) *
                C79306 * C79114 -
            ((C26552 * C974 + C26496 * C1464 + C26551 * C973 + C26495 * C1463) *
                 C79307 +
             (C26552 * C750 + C26496 * C860 + C26551 * C749 + C26495 * C859) *
                 C245) *
                C79306 * C17509) *
               C79285 +
           (((C26551 * C750 + C26495 * C860 + C26552 * C5568 + C26496 * C5626) *
                 C245 +
             (C26551 * C974 + C26495 * C1464 + C26552 * C5676 +
              C26496 * C5914) *
                 C79307) *
                C79306 * C17509 -
            ((C26552 * C8521 + C26496 * C8865 + C26551 * C6228 +
              C26495 * C6640) *
                 C79307 +
             (C26552 * C8377 + C26496 * C8451 + C26551 * C6044 +
              C26495 * C6142) *
                 C245) *
                C79306 * C79114) *
               C79259) *
              C13595 +
          ((((C26551 * C1681 + C26495 * C1791 + C26552 * C3932 +
              C26496 * C4048) *
                 C245 +
             (C26551 * C1905 + C26495 * C2395 + C26552 * C4166 +
              C26496 * C4716) *
                 C79307) *
                C79306 * C79114 -
            ((C26552 * C972 + C26496 * C1462 + C26551 * C247 + C26495 * C564) *
                 C79307 +
             (C26552 * C748 + C26496 * C858 + C26551 * C97 + C26495 * C168) *
                 C245) *
                C79306 * C17509) *
               C79300 +
           (((C26551 * C748 + C26495 * C858 + C26552 * C751 + C26496 * C861) *
                 C245 +
             (C26551 * C972 + C26495 * C1462 + C26552 * C975 + C26496 * C1465) *
                 C79307) *
                C79306 * C17509 -
            ((C26552 * C6227 + C26496 * C6639 + C26551 * C4166 +
              C26495 * C4716) *
                 C79307 +
             (C26552 * C6043 + C26496 * C6141 + C26551 * C3932 +
              C26495 * C4048) *
                 C245) *
                C79306 * C79114) *
               C79285 +
           (((C26551 * C6043 + C26495 * C6141 + C26552 * C8378 +
              C26496 * C8452) *
                 C245 +
             (C26551 * C6227 + C26495 * C6639 + C26552 * C8522 +
              C26496 * C8866) *
                 C79307) *
                C79306 * C79114 -
            ((C26552 * C5675 + C26496 * C5913 + C26551 * C975 +
              C26495 * C1465) *
                 C79307 +
             (C26552 * C5567 + C26496 * C5625 + C26551 * C751 + C26495 * C861) *
                 C245) *
                C79306 * C17509) *
               C79259) *
              C78992)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
                C245 +
            (C26551 * C246 + C26495 * C563 + C26552 * C973 + C26496 * C1463) *
                C79307) *
               C79306 * C17509 -
           ((C26552 * C4165 + C26496 * C4715 + C26551 * C1906 +
             C26495 * C2396) *
                C79307 +
            (C26552 * C3931 + C26496 * C4047 + C26551 * C1682 +
             C26495 * C1792) *
                C245) *
               C79306 * C79114) *
              C79009 * C79309 +
          (((C26551 * C1681 + C26495 * C1791 + C26552 * C3932 +
             C26496 * C4048) *
                C245 +
            (C26551 * C1905 + C26495 * C2395 + C26552 * C4166 +
             C26496 * C4716) *
                C79307) *
               C79306 * C79114 -
           ((C26552 * C972 + C26496 * C1462 + C26551 * C247 + C26495 * C564) *
                C79307 +
            (C26552 * C748 + C26496 * C858 + C26551 * C97 + C26495 * C168) *
                C245) *
               C79306 * C17509) *
              C79009 * C79299 +
          (((C26551 * C98 + C26495 * C169 + C26552 * C752 + C26496 * C862) *
                C245 +
            (C26551 * C248 + C26495 * C565 + C26552 * C976 + C26496 * C1466) *
                C79307) *
               C79306 * C17509 -
           ((C26552 * C4167 + C26496 * C4717 + C26551 * C1909 +
             C26495 * C2399) *
                C79307 +
            (C26552 * C3933 + C26496 * C4049 + C26551 * C1685 +
             C26495 * C1795) *
                C245) *
               C79306 * C79114) *
              C79009 * C79283 +
          (((C26551 * C1687 + C26495 * C1797 + C26552 * C3934 +
             C26496 * C4050) *
                C245 +
            (C26551 * C1911 + C26495 * C2401 + C26552 * C4168 +
             C26496 * C4718) *
                C79307) *
               C79306 * C79114 -
           ((C26552 * C978 + C26496 * C1468 + C26551 * C249 + C26495 * C566) *
                C79307 +
            (C26552 * C754 + C26496 * C864 + C26551 * C99 + C26495 * C170) *
                C245) *
               C79306 * C17509) *
              C79009 * C79263)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
                C245 +
            (C26551 * C246 + C26495 * C563 + C26552 * C973 + C26496 * C1463) *
                C79307) *
               C79306 * C79311 -
           ((C26552 * C4165 + C26496 * C4715 + C26551 * C1906 +
             C26495 * C2396) *
                C79307 +
            (C26552 * C3931 + C26496 * C4047 + C26551 * C1682 +
             C26495 * C1792) *
                C245) *
               C79306 * C79305 +
           ((C26551 * C1683 + C26495 * C1793 + C26552 * C6042 +
             C26496 * C6140) *
                C245 +
            (C26551 * C1907 + C26495 * C2397 + C26552 * C6226 +
             C26496 * C6638) *
                C79307) *
               C79306 * C79293 -
           ((C26552 * C12509 + C26496 * C12853 + C26551 * C10428 +
             C26495 * C10666) *
                C79307 +
            (C26552 * C12365 + C26496 * C12439 + C26551 * C10320 +
             C26495 * C10378) *
                C245) *
               C79306 * C79275) *
              C79009 * C13595 +
          (((C26551 * C1681 + C26495 * C1791 + C26552 * C3932 +
             C26496 * C4048) *
                C245 +
            (C26551 * C1905 + C26495 * C2395 + C26552 * C4166 +
             C26496 * C4716) *
                C79307) *
               C79306 * C79305 -
           ((C26552 * C972 + C26496 * C1462 + C26551 * C247 + C26495 * C564) *
                C79307 +
            (C26552 * C748 + C26496 * C858 + C26551 * C97 + C26495 * C168) *
                C245) *
               C79306 * C79311 -
           ((C26552 * C6225 + C26496 * C6637 + C26551 * C1908 +
             C26495 * C2398) *
                C79307 +
            (C26552 * C6041 + C26496 * C6139 + C26551 * C1684 +
             C26495 * C1794) *
                C245) *
               C79306 * C79293 +
           ((C26551 * C10319 + C26495 * C10377 + C26552 * C12366 +
             C26496 * C12440) *
                C245 +
            (C26551 * C10427 + C26495 * C10665 + C26552 * C12510 +
             C26496 * C12854) *
                C79307) *
               C79306 * C79275) *
              C79009 * C78992)) /
            (p * q * std::sqrt(p + q));
    d2eezz[42] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C631 * C96 + C639 + C639 + C79307 * C632) * C26495 +
             C27684 * C26496) *
                C79306 * C17509 -
            (C30551 * C26496 +
             (C631 * C1682 + C2509 + C2509 + C79307 * C2498) * C26495) *
                C79306 * C79114) *
               C79300 +
           ((C30551 * C26495 + C32468 * C26496) * C79306 * C79114 -
            (C27685 * C26496 + C27684 * C26495) * C79306 * C17509) *
               C79285 +
           ((C27685 * C26495 + C31680 * C26496) * C79306 * C17509 -
            (C34633 * C26496 + C32468 * C26495) * C79306 * C79114) *
               C79259) *
              C13595 +
          (((C2530 * C26495 + C4844 * C26496) * C79306 * C79114 -
            (C1597 * C26496 + C661 * C26495) * C79306 * C17509) *
               C79300 +
           ((C1597 * C26495 + C1598 * C26496) * C79306 * C17509 -
            (C8310 * C26496 + C4844 * C26495) * C79306 * C79114) *
               C79285 +
           ((C8310 * C26495 +
             (C631 * C8378 + C8937 + C8937 + C79307 * C8934) * C26496) *
                C79306 * C79114 -
            (C7378 * C26496 + C1598 * C26495) * C79306 * C17509) *
               C79259) *
              C78992)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C631 * C96 + C639 + C639 + C79307 * C632) * C26495 +
            C27684 * C26496) *
               C79306 * C17509 -
           (C30551 * C26496 +
            (C631 * C1682 + C2509 + C2509 + C79307 * C2498) * C26495) *
               C79306 * C79114) *
              C79009 * C79309 +
          ((C2530 * C26495 + C4844 * C26496) * C79306 * C79114 -
           (C1597 * C26496 + C661 * C26495) * C79306 * C17509) *
              C79009 * C79299 +
          ((C662 * C26495 + C1599 * C26496) * C79306 * C17509 -
           (C4845 * C26496 + C2532 * C26495) * C79306 * C79114) *
              C79009 * C79283 +
          ((C3832 * C26495 +
            (C631 * C3934 + C4839 + C4839 + C79307 * C4830) * C26496) *
               C79306 * C79114 -
           (C3186 * C26496 + C663 * C26495) * C79306 * C17509) *
              C79009 * C79263)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C631 * C96 + C639 + C639 + C79307 * C632) * C26495 +
            C27684 * C26496) *
               C79306 * C79311 -
           (C30551 * C26496 +
            (C631 * C1682 + C2509 + C2509 + C79307 * C2498) * C26495) *
               C79306 * C79305 +
           ((C631 * C1683 + C2510 + C2510 + C79307 * C2499) * C26495 +
            C32467 * C26496) *
               C79306 * C79293 -
           (C38511 * C26496 +
            (C631 * C10320 + C10717 + C10717 + C79307 * C10712) * C26495) *
               C79306 * C79275) *
              C79009 * C13595 +
          ((C2530 * C26495 + C4844 * C26496) * C79306 * C79305 -
           (C1597 * C26496 + C661 * C26495) * C79306 * C79311 -
           (C11650 * C26496 + C2531 * C26495) * C79306 * C79293 +
           (C12298 * C26495 +
            (C631 * C12366 + C12925 + C12925 + C79307 * C12922) * C26496) *
               C79306 * C79275) *
              C79009 * C78992)) /
            (p * q * std::sqrt(p + q));
    d2eexx[43] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C79307 * C26495 +
            C26970 * C26496) *
               C79110 -
           (C29706 * C26496 +
            (C26497 * C1682 + C27761 + C27761 + C79306 * C1698) * C79307 *
                C26495) *
               C79117 +
           ((C26497 * C1683 + C27762 + C27762 + C79306 * C1699) * C79307 *
                C26495 +
            C31777 * C26496) *
               C20477) *
              C79009 * C78986 +
          (((C26497 * C1681 + C27764 + C27764 + C79306 * C1697) * C79307 *
                C26495 +
            C29707 * C26496) *
               C79117 -
           (C26972 * C26496 + (C26497 * C97 + C26503 + C26503 + C79306 * C109) *
                                  C79307 * C26495) *
               C79110 -
           (C36470 * C26496 +
            (C26497 * C1684 + C27767 + C27767 + C79306 * C1700) * C79307 *
                C26495) *
               C20477) *
              C79009 * C78995 +
          (((C26497 * C98 + C26504 + C26504 + C79306 * C110) * C79307 * C26495 +
            C26974 * C26496) *
               C79110 -
           (C29708 * C26496 +
            (C26497 * C1685 + C27769 + C27769 + C79306 * C1701) * C79307 *
                C26495) *
               C79117 +
           ((C26497 * C1686 + C27770 + C27770 + C79306 * C1702) * C79307 *
                C26495 +
            (C26497 * C10817 + C27771 + C27771 + C79306 * C10819) * C79307 *
                C26496) *
               C20477) *
              C79009 * C15086)) /
        (p * q * std::sqrt(p + q));
    d2eexy[43] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
                C26498 +
            (C26551 * C102 + C26495 * C173 + C26552 * C757 + C26496 * C867) *
                C79306) *
               C79307 * C79110 -
           ((C26552 * C3935 + C26496 * C4051 + C26551 * C1690 +
             C26495 * C1800) *
                C79306 +
            (C26552 * C3931 + C26496 * C4047 + C26551 * C1682 +
             C26495 * C1792) *
                C26498) *
               C79307 * C79117 +
           ((C26551 * C1683 + C26495 * C1793 + C26552 * C6042 +
             C26496 * C6140) *
                C26498 +
            (C26551 * C1691 + C26495 * C1801 + C26552 * C6048 +
             C26496 * C6146) *
                C79306) *
               C79307 * C20477) *
              C79009 * C78986 +
          (((C26551 * C1681 + C26495 * C1791 + C26552 * C3932 +
             C26496 * C4048) *
                C26498 +
            (C26551 * C1689 + C26495 * C1799 + C26552 * C3936 +
             C26496 * C4052) *
                C79306) *
               C79307 * C79117 -
           ((C26552 * C756 + C26496 * C866 + C26551 * C103 + C26495 * C174) *
                C79306 +
            (C26552 * C748 + C26496 * C858 + C26551 * C97 + C26495 * C168) *
                C26498) *
               C79307 * C79110 -
           ((C26552 * C6047 + C26496 * C6145 + C26551 * C1692 +
             C26495 * C1802) *
                C79306 +
            (C26552 * C6041 + C26496 * C6139 + C26551 * C1684 +
             C26495 * C1794) *
                C26498) *
               C79307 * C20477) *
              C79009 * C78995 +
          (((C26551 * C98 + C26495 * C169 + C26552 * C752 + C26496 * C862) *
                C26498 +
            (C26551 * C104 + C26495 * C175 + C26552 * C760 + C26496 * C870) *
                C79306) *
               C79307 * C79110 -
           ((C26552 * C3937 + C26496 * C4053 + C26551 * C1693 +
             C26495 * C1803) *
                C79306 +
            (C26552 * C3933 + C26496 * C4049 + C26551 * C1685 +
             C26495 * C1795) *
                C26498) *
               C79307 * C79117 +
           ((C26551 * C1686 + C26495 * C1796 + C26552 * C10817 +
             C26496 * C10920) *
                C26498 +
            (C26551 * C1694 + C26495 * C1804 + C26552 * C10818 +
             C26496 * C10921) *
                C79306) *
               C79307 * C20477) *
              C79009 * C15086)) /
        (p * q * std::sqrt(p + q));
    d2eexz[43] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C245 * C96 + C79307 * C246) * C26498 +
                       (C245 * C102 + C79307 * C252) * C79306) *
                          C26495 +
                      (C27144 + C27145) * C26496) *
                         C79110 -
                     ((C29915 + C29916) * C26496 +
                      ((C245 * C1690 + C79307 * C1914) * C79306 +
                       (C245 * C1682 + C79307 * C1906) * C26498) *
                          C26495) *
                         C79117 +
                     (((C245 * C1683 + C79307 * C1907) * C26498 +
                       (C245 * C1691 + C79307 * C1915) * C79306) *
                          C26495 +
                      (C31950 + C31951) * C26496) *
                         C20477) *
                        C79009 * C78986 +
                    (((C1939 * C26498 + C1938 * C79306) * C26495 +
                      (C29909 + C29910) * C26496) *
                         C79117 -
                     ((C27133 + C27132) * C26496 +
                      (C276 * C79306 + C275 * C26498) * C26495) *
                         C79110 -
                     ((C36667 + C36668) * C26496 +
                      (C1941 * C79306 + C1940 * C26498) * C26495) *
                         C20477) *
                        C79009 * C78995 +
                    (((C278 * C26498 + C277 * C79306) * C26495 +
                      (C27136 + C27137) * C26496) *
                         C79110 -
                     ((C29911 + C29912) * C26496 +
                      (C1943 * C79306 + C1942 * C26498) * C26495) *
                         C79117 +
                     ((C1945 * C26498 + C1944 * C79306) * C26495 +
                      ((C245 * C10817 + C79307 * C11026) * C26498 +
                       (C245 * C10818 + C79307 * C11027) * C79306) *
                          C26496) *
                         C20477) *
                        C79009 * C15086)) /
                  (p * q * std::sqrt(p + q));
    d2eeyx[43] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C26498 * C96 + C79306 * C102) * C26551 +
                      (C26498 * C167 + C79306 * C324) * C26495 +
                      C27246 * C26552 + C27247 * C26496) *
                         C79307 * C79110 -
                     (C30027 * C26496 + C30028 * C26552 +
                      (C26498 * C1792 + C79306 * C2020) * C26495 +
                      (C26498 * C1682 + C79306 * C1690) * C26551) *
                         C79307 * C79117 +
                     ((C26498 * C1683 + C79306 * C1691) * C26551 +
                      (C26498 * C1793 + C79306 * C2021) * C26495 +
                      C32043 * C26552 + C32044 * C26496) *
                         C79307 * C20477) *
                        C79009 * C78986 +
                    (((C26498 * C1681 + C79306 * C1689) * C26551 +
                      (C26498 * C1791 + C79306 * C2019) * C26495 +
                      C30029 * C26552 + C30030 * C26496) *
                         C79307 * C79117 -
                     (C27251 * C26496 + C27250 * C26552 +
                      (C26498 * C168 + C79306 * C325) * C26495 +
                      (C26498 * C97 + C79306 * C103) * C26551) *
                         C79307 * C79110 -
                     (C36771 * C26496 + C36772 * C26552 +
                      (C26498 * C1794 + C79306 * C2022) * C26495 +
                      (C26498 * C1684 + C79306 * C1692) * C26551) *
                         C79307 * C20477) *
                        C79009 * C78995 +
                    (((C26498 * C98 + C79306 * C104) * C26551 +
                      (C26498 * C169 + C79306 * C326) * C26495 +
                      C27254 * C26552 + C27255 * C26496) *
                         C79307 * C79110 -
                     (C30031 * C26496 + C30032 * C26552 +
                      (C26498 * C1795 + C79306 * C2023) * C26495 +
                      (C26498 * C1685 + C79306 * C1693) * C26551) *
                         C79307 * C79117 +
                     ((C26498 * C1686 + C79306 * C1694) * C26551 +
                      (C26498 * C1796 + C79306 * C2024) * C26495 +
                      (C26498 * C10817 + C79306 * C10818) * C26552 +
                      (C26498 * C10920 + C79306 * C11132) * C26496) *
                         C79307 * C20477) *
                        C79009 * C15086)) /
                  (p * q * std::sqrt(p + q));
    d2eeyy[43] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((C26679 * C96 + C26682 + C26682 + C26495 * C373 +
                      C26680 * C749 + C26683 + C26683 + C26496 * C1169) *
                         C79306 * C79307 * C79110 -
                     (C26680 * C3931 + C28068 + C28068 + C26496 * C4385 +
                      C26679 * C1682 + C28069 + C28069 + C26495 * C2102) *
                         C79306 * C79307 * C79117 +
                     (C26679 * C1683 + C28070 + C28070 + C26495 * C2103 +
                      C26680 * C6042 + C28071 + C28071 + C26496 * C6392) *
                         C79306 * C79307 * C20477) *
                        C79009 * C78986 +
                    ((C26679 * C1681 + C28072 + C28072 + C26495 * C2101 +
                      C26680 * C3932 + C28073 + C28073 + C26496 * C4386) *
                         C79306 * C79307 * C79117 -
                     (C26680 * C748 + C26684 + C26684 + C26496 * C1168 +
                      C26679 * C97 + C26685 + C26685 + C26495 * C374) *
                         C79306 * C79307 * C79110 -
                     (C26680 * C6041 + C28074 + C28074 + C26496 * C6391 +
                      C26679 * C1684 + C28075 + C28075 + C26495 * C2104) *
                         C79306 * C79307 * C20477) *
                        C79009 * C78995 +
                    ((C26679 * C98 + C26686 + C26686 + C26495 * C375 +
                      C26680 * C752 + C26687 + C26687 + C26496 * C1172) *
                         C79306 * C79307 * C79110 -
                     (C26680 * C3933 + C28076 + C28076 + C26496 * C4387 +
                      C26679 * C1685 + C28077 + C28077 + C26495 * C2105) *
                         C79306 * C79307 * C79117 +
                     (C26679 * C1686 + C28078 + C28078 + C26495 * C2106 +
                      C26680 * C10817 + C28079 + C28079 + C26496 * C11231) *
                         C79306 * C79307 * C20477) *
                        C79009 * C15086)) /
                  (p * q * std::sqrt(p + q));
    d2eeyz[43] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C245 * C96 + C79307 * C246) * C26551 +
            (C245 * C167 + C79307 * C447) * C26495 + C27140 * C26552 +
            C27422 * C26496) *
               C79306 * C79110 -
           (C30237 * C26496 + C29914 * C26552 +
            (C245 * C1792 + C79307 * C2212) * C26495 +
            (C245 * C1682 + C79307 * C1906) * C26551) *
               C79306 * C79117 +
           ((C245 * C1683 + C79307 * C1907) * C26551 +
            (C245 * C1793 + C79307 * C2213) * C26495 + C31944 * C26552 +
            C32211 * C26496) *
               C79306 * C20477) *
              C79009 * C78986 +
          ((C1939 * C26551 + C2232 * C26495 + C4182 * C26552 + C4512 * C26496) *
               C79306 * C79117 -
           (C1299 * C26496 + C1006 * C26552 + C466 * C26495 + C275 * C26551) *
               C79306 * C79110 -
           (C11341 * C26496 + C11034 * C26552 + C2233 * C26495 +
            C1940 * C26551) *
               C79306 * C20477) *
              C79009 * C78995 +
          ((C278 * C26551 + C467 * C26495 + C1009 * C26552 + C1301 * C26496) *
               C79306 * C79110 -
           (C4513 * C26496 + C4185 * C26552 + C2234 * C26495 + C1942 * C26551) *
               C79306 * C79117 +
           (C1945 * C26551 + C2235 * C26495 +
            (C245 * C10817 + C79307 * C11026) * C26552 +
            (C245 * C10920 + C79307 * C11336) * C26496) *
               C79306 * C20477) *
              C79009 * C15086)) /
        (p * q * std::sqrt(p + q));
    d2eezx[43] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C26498 * C96 + C79306 * C102) * C245 +
                       (C26498 * C246 + C79306 * C515) * C79307) *
                          C26495 +
                      (C27498 + C27522) * C26496) *
                         C79110 -
                     ((C30348 + C30338) * C26496 +
                      ((C26498 * C1906 + C79306 * C2314) * C79307 +
                       (C26498 * C1682 + C79306 * C1690) * C245) *
                          C26495) *
                         C79117 +
                     (((C26498 * C1683 + C79306 * C1691) * C245 +
                       (C26498 * C1907 + C79306 * C2315) * C79307) *
                          C26495 +
                      (C32289 + C32301) * C26496) *
                         C20477) *
                        C79009 * C78986 +
                    ((((C26498 * C1681 + C79306 * C1689) * C245 +
                       (C26498 * C1905 + C79306 * C2313) * C79307) *
                          C26495 +
                      (C30339 + C30349) * C26496) *
                         C79117 -
                     ((C27524 + C27504) * C26496 +
                      ((C26498 * C247 + C79306 * C516) * C79307 +
                       (C26498 * C97 + C79306 * C103) * C245) *
                          C26495) *
                         C79110 -
                     ((C37073 + C37071) * C26496 +
                      ((C26498 * C1908 + C79306 * C2316) * C79307 +
                       (C26498 * C1684 + C79306 * C1692) * C245) *
                          C26495) *
                         C20477) *
                        C79009 * C78995 +
                    ((((C26498 * C98 + C79306 * C104) * C245 +
                       (C26498 * C248 + C79306 * C517) * C79307) *
                          C26495 +
                      (C27510 + C27526) * C26496) *
                         C79110 -
                     ((C30350 + C30344) * C26496 +
                      ((C26498 * C1909 + C79306 * C2317) * C79307 +
                       (C26498 * C1685 + C79306 * C1693) * C245) *
                          C26495) *
                         C79117 +
                     (((C26498 * C1686 + C79306 * C1694) * C245 +
                       (C26498 * C1910 + C79306 * C2318) * C79307) *
                          C26495 +
                      ((C26498 * C10817 + C79306 * C10818) * C245 +
                       (C26498 * C11026 + C79306 * C11440) * C79307) *
                          C26496) *
                         C20477) *
                        C79009 * C15086)) /
                  (p * q * std::sqrt(p + q));
    d2eezy[43] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
                C245 +
            (C26551 * C246 + C26495 * C563 + C26552 * C973 + C26496 * C1463) *
                C79307) *
               C79306 * C79110 -
           ((C26552 * C4165 + C26496 * C4715 + C26551 * C1906 +
             C26495 * C2396) *
                C79307 +
            (C26552 * C3931 + C26496 * C4047 + C26551 * C1682 +
             C26495 * C1792) *
                C245) *
               C79306 * C79117 +
           ((C26551 * C1683 + C26495 * C1793 + C26552 * C6042 +
             C26496 * C6140) *
                C245 +
            (C26551 * C1907 + C26495 * C2397 + C26552 * C6226 +
             C26496 * C6638) *
                C79307) *
               C79306 * C20477) *
              C79009 * C78986 +
          (((C26551 * C1681 + C26495 * C1791 + C26552 * C3932 +
             C26496 * C4048) *
                C245 +
            (C26551 * C1905 + C26495 * C2395 + C26552 * C4166 +
             C26496 * C4716) *
                C79307) *
               C79306 * C79117 -
           ((C26552 * C972 + C26496 * C1462 + C26551 * C247 + C26495 * C564) *
                C79307 +
            (C26552 * C748 + C26496 * C858 + C26551 * C97 + C26495 * C168) *
                C245) *
               C79306 * C79110 -
           ((C26552 * C6225 + C26496 * C6637 + C26551 * C1908 +
             C26495 * C2398) *
                C79307 +
            (C26552 * C6041 + C26496 * C6139 + C26551 * C1684 +
             C26495 * C1794) *
                C245) *
               C79306 * C20477) *
              C79009 * C78995 +
          (((C26551 * C98 + C26495 * C169 + C26552 * C752 + C26496 * C862) *
                C245 +
            (C26551 * C248 + C26495 * C565 + C26552 * C976 + C26496 * C1466) *
                C79307) *
               C79306 * C79110 -
           ((C26552 * C4167 + C26496 * C4717 + C26551 * C1909 +
             C26495 * C2399) *
                C79307 +
            (C26552 * C3933 + C26496 * C4049 + C26551 * C1685 +
             C26495 * C1795) *
                C245) *
               C79306 * C79117 +
           ((C26551 * C1686 + C26495 * C1796 + C26552 * C10817 +
             C26496 * C10920) *
                C245 +
            (C26551 * C1910 + C26495 * C2400 + C26552 * C11026 +
             C26496 * C11539) *
                C79307) *
               C79306 * C20477) *
              C79009 * C15086)) /
        (p * q * std::sqrt(p + q));
    d2eezz[43] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C631 * C96 + C639 + C639 + C79307 * C632) * C26495 +
            C27684 * C26496) *
               C79306 * C79110 -
           (C30551 * C26496 +
            (C631 * C1682 + C2509 + C2509 + C79307 * C2498) * C26495) *
               C79306 * C79117 +
           ((C631 * C1683 + C2510 + C2510 + C79307 * C2499) * C26495 +
            C32467 * C26496) *
               C79306 * C20477) *
              C79009 * C78986 +
          ((C2530 * C26495 + C4844 * C26496) * C79306 * C79117 -
           (C1597 * C26496 + C661 * C26495) * C79306 * C79110 -
           (C11650 * C26496 + C2531 * C26495) * C79306 * C20477) *
              C79009 * C78995 +
          ((C662 * C26495 + C1599 * C26496) * C79306 * C79110 -
           (C4845 * C26496 + C2532 * C26495) * C79306 * C79117 +
           (C2533 * C26495 +
            (C631 * C10817 + C11647 + C11647 + C79307 * C11643) * C26496) *
               C79306 * C20477) *
              C79009 * C15086)) /
        (p * q * std::sqrt(p + q));
    d2eexx[44] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C79307 * C26495 +
            C26970 * C26496) *
               C17509 -
           (C29706 * C26496 +
            (C26497 * C1682 + C27761 + C27761 + C79306 * C1698) * C79307 *
                C26495) *
               C79114) *
              C79009 * C79309 +
          (((C26497 * C1681 + C27764 + C27764 + C79306 * C1697) * C79307 *
                C26495 +
            C29707 * C26496) *
               C79114 -
           (C26972 * C26496 + (C26497 * C97 + C26503 + C26503 + C79306 * C109) *
                                  C79307 * C26495) *
               C17509) *
              C79009 * C79299 +
          (((C26497 * C98 + C26504 + C26504 + C79306 * C110) * C79307 * C26495 +
            C26974 * C26496) *
               C17509 -
           (C29708 * C26496 +
            (C26497 * C1685 + C27769 + C27769 + C79306 * C1701) * C79307 *
                C26495) *
               C79114) *
              C79009 * C79283 +
          (((C26497 * C1687 + C29058 + C29058 + C79306 * C1703) * C79307 *
                C26495 +
            (C26497 * C3934 + C29059 + C29059 + C79306 * C3942) * C79307 *
                C26496) *
               C79114 -
           (C28448 * C26496 + (C26497 * C99 + C26507 + C26507 + C79306 * C111) *
                                  C79307 * C26495) *
               C17509) *
              C79009 * C79263)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C79307 *
                 C26495 +
             C26970 * C26496) *
                C17509 -
            (C29706 * C26496 +
             (C26497 * C1682 + C27761 + C27761 + C79306 * C1698) * C79307 *
                 C26495) *
                C79114) *
               C79300 +
           ((C29706 * C26495 + C31778 * C26496) * C79114 -
            (C26971 * C26496 + C26970 * C26495) * C17509) *
               C79285 +
           ((C26971 * C26495 + C31275 * C26496) * C17509 -
            (C34065 * C26496 + C31778 * C26495) * C79114) *
               C79259) *
              C13595 +
          ((((C26497 * C1681 + C27764 + C27764 + C79306 * C1697) * C79307 *
                 C26495 +
             C29707 * C26496) *
                C79114 -
            (C26972 * C26496 +
             (C26497 * C97 + C26503 + C26503 + C79306 * C109) * C79307 *
                 C26495) *
                C17509) *
               C79300 +
           ((C26972 * C26495 + C26973 * C26496) * C17509 -
            (C33190 * C26496 + C29707 * C26495) * C79114) *
               C79285 +
           ((C33190 * C26495 +
             (C26497 * C8378 + C33186 + C33186 + C79306 * C8382) * C79307 *
                 C26496) *
                C79114 -
            (C32542 * C26496 + C26973 * C26495) * C17509) *
               C79259) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eexy[44] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
                C26498 +
            (C26551 * C102 + C26495 * C173 + C26552 * C757 + C26496 * C867) *
                C79306) *
               C79307 * C17509 -
           ((C26552 * C3935 + C26496 * C4051 + C26551 * C1690 +
             C26495 * C1800) *
                C79306 +
            (C26552 * C3931 + C26496 * C4047 + C26551 * C1682 +
             C26495 * C1792) *
                C26498) *
               C79307 * C79114) *
              C79009 * C79309 +
          (((C26551 * C1681 + C26495 * C1791 + C26552 * C3932 +
             C26496 * C4048) *
                C26498 +
            (C26551 * C1689 + C26495 * C1799 + C26552 * C3936 +
             C26496 * C4052) *
                C79306) *
               C79307 * C79114 -
           ((C26552 * C756 + C26496 * C866 + C26551 * C103 + C26495 * C174) *
                C79306 +
            (C26552 * C748 + C26496 * C858 + C26551 * C97 + C26495 * C168) *
                C26498) *
               C79307 * C17509) *
              C79009 * C79299 +
          (((C26551 * C98 + C26495 * C169 + C26552 * C752 + C26496 * C862) *
                C26498 +
            (C26551 * C104 + C26495 * C175 + C26552 * C760 + C26496 * C870) *
                C79306) *
               C79307 * C17509 -
           ((C26552 * C3937 + C26496 * C4053 + C26551 * C1693 +
             C26495 * C1803) *
                C79306 +
            (C26552 * C3933 + C26496 * C4049 + C26551 * C1685 +
             C26495 * C1795) *
                C26498) *
               C79307 * C79114) *
              C79009 * C79283 +
          (((C26551 * C1687 + C26495 * C1797 + C26552 * C3934 +
             C26496 * C4050) *
                C26498 +
            (C26551 * C1695 + C26495 * C1805 + C26552 * C3938 +
             C26496 * C4054) *
                C79306) *
               C79307 * C79114 -
           ((C26552 * C762 + C26496 * C872 + C26551 * C105 + C26495 * C176) *
                C79306 +
            (C26552 * C754 + C26496 * C864 + C26551 * C99 + C26495 * C170) *
                C26498) *
               C79307 * C17509) *
              C79009 * C79263)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
                 C26498 +
             (C26551 * C102 + C26495 * C173 + C26552 * C757 + C26496 * C867) *
                 C79306) *
                C79307 * C17509 -
            ((C26552 * C3935 + C26496 * C4051 + C26551 * C1690 +
              C26495 * C1800) *
                 C79306 +
             (C26552 * C3931 + C26496 * C4047 + C26551 * C1682 +
              C26495 * C1792) *
                 C26498) *
                C79307 * C79114) *
               C79300 +
           (((C26551 * C3931 + C26495 * C4047 + C26552 * C6044 +
              C26496 * C6142) *
                 C26498 +
             (C26551 * C3935 + C26495 * C4051 + C26552 * C6050 +
              C26496 * C6148) *
                 C79306) *
                C79307 * C79114 -
            ((C26552 * C758 + C26496 * C868 + C26551 * C757 + C26495 * C867) *
                 C79306 +
             (C26552 * C750 + C26496 * C860 + C26551 * C749 + C26495 * C859) *
                 C26498) *
                C79307 * C17509) *
               C79285 +
           (((C26551 * C750 + C26495 * C860 + C26552 * C5568 + C26496 * C5626) *
                 C26498 +
             (C26551 * C758 + C26495 * C868 + C26552 * C5572 + C26496 * C5630) *
                 C79306) *
                C79307 * C17509 -
            ((C26552 * C8379 + C26496 * C8453 + C26551 * C6050 +
              C26495 * C6148) *
                 C79306 +
             (C26552 * C8377 + C26496 * C8451 + C26551 * C6044 +
              C26495 * C6142) *
                 C26498) *
                C79307 * C79114) *
               C79259) *
              C13595 +
          ((((C26551 * C1681 + C26495 * C1791 + C26552 * C3932 +
              C26496 * C4048) *
                 C26498 +
             (C26551 * C1689 + C26495 * C1799 + C26552 * C3936 +
              C26496 * C4052) *
                 C79306) *
                C79307 * C79114 -
            ((C26552 * C756 + C26496 * C866 + C26551 * C103 + C26495 * C174) *
                 C79306 +
             (C26552 * C748 + C26496 * C858 + C26551 * C97 + C26495 * C168) *
                 C26498) *
                C79307 * C17509) *
               C79300 +
           (((C26551 * C748 + C26495 * C858 + C26552 * C751 + C26496 * C861) *
                 C26498 +
             (C26551 * C756 + C26495 * C866 + C26552 * C759 + C26496 * C869) *
                 C79306) *
                C79307 * C17509 -
            ((C26552 * C6049 + C26496 * C6147 + C26551 * C3936 +
              C26495 * C4052) *
                 C79306 +
             (C26552 * C6043 + C26496 * C6141 + C26551 * C3932 +
              C26495 * C4048) *
                 C26498) *
                C79307 * C79114) *
               C79285 +
           (((C26551 * C6043 + C26495 * C6141 + C26552 * C8378 +
              C26496 * C8452) *
                 C26498 +
             (C26551 * C6049 + C26495 * C6147 + C26552 * C8380 +
              C26496 * C8454) *
                 C79306) *
                C79307 * C79114 -
            ((C26552 * C5571 + C26496 * C5629 + C26551 * C759 + C26495 * C869) *
                 C79306 +
             (C26552 * C5567 + C26496 * C5625 + C26551 * C751 + C26495 * C861) *
                 C26498) *
                C79307 * C17509) *
               C79259) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eexz[44] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C245 * C96 + C79307 * C246) * C26498 +
             (C245 * C102 + C79307 * C252) * C79306) *
                C26495 +
            (C27144 + C27145) * C26496) *
               C17509 -
           ((C29915 + C29916) * C26496 +
            ((C245 * C1690 + C79307 * C1914) * C79306 +
             (C245 * C1682 + C79307 * C1906) * C26498) *
                C26495) *
               C79114) *
              C79009 * C79309 +
          (((C1939 * C26498 + C1938 * C79306) * C26495 +
            (C29909 + C29910) * C26496) *
               C79114 -
           ((C27133 + C27132) * C26496 +
            (C276 * C79306 + C275 * C26498) * C26495) *
               C17509) *
              C79009 * C79299 +
          (((C278 * C26498 + C277 * C79306) * C26495 +
            (C27136 + C27137) * C26496) *
               C17509 -
           ((C29911 + C29912) * C26496 +
            (C1943 * C79306 + C1942 * C26498) * C26495) *
               C79114) *
              C79009 * C79283 +
          (((C3408 * C26498 + C3407 * C79306) * C26495 +
            ((C245 * C3934 + C79307 * C4168) * C26498 +
             (C245 * C3938 + C79307 * C4172) * C79306) *
                C26496) *
               C79114 -
           ((C28582 + C28581) * C26496 +
            (C280 * C79306 + C279 * C26498) * C26495) *
               C17509) *
              C79009 * C79263)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C245 * C96 + C79307 * C246) * C26498 +
              (C245 * C102 + C79307 * C252) * C79306) *
                 C26495 +
             (C27144 + C27145) * C26496) *
                C17509 -
            ((C29915 + C29916) * C26496 +
             ((C245 * C1690 + C79307 * C1914) * C79306 +
              (C245 * C1682 + C79307 * C1906) * C26498) *
                 C26495) *
                C79114) *
               C79300 +
           (((C29916 + C29915) * C26495 + (C31952 + C31953) * C26496) * C79114 -
            ((C27146 + C27147) * C26496 + (C27145 + C27144) * C26495) *
                C17509) *
               C79285 +
           (((C27147 + C27146) * C26495 + (C31377 + C31378) * C26496) * C17509 -
            ((C34208 + C34209) * C26496 + (C31953 + C31952) * C26495) *
                C79114) *
               C79259) *
              C13595 +
          ((((C1939 * C26498 + C1938 * C79306) * C26495 +
             (C29909 + C29910) * C26496) *
                C79114 -
            ((C27133 + C27132) * C26496 +
             (C276 * C79306 + C275 * C26498) * C26495) *
                C17509) *
               C79300 +
           (((C27132 + C27133) * C26495 + (C27134 + C27135) * C26496) * C17509 -
            ((C33387 + C33388) * C26496 + (C29910 + C29909) * C26495) *
                C79114) *
               C79285 +
           (((C33388 + C33387) * C26495 +
             ((C245 * C8378 + C79307 * C8522) * C26498 +
              (C245 * C8380 + C79307 * C8524) * C79306) *
                 C26496) *
                C79114 -
            ((C32675 + C32676) * C26496 + (C27135 + C27134) * C26495) *
                C17509) *
               C79259) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eeyx[44] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C26498 * C96 + C79306 * C102) * C26551 +
                      (C26498 * C167 + C79306 * C324) * C26495 +
                      C27246 * C26552 + C27247 * C26496) *
                         C79307 * C17509 -
                     (C30027 * C26496 + C30028 * C26552 +
                      (C26498 * C1792 + C79306 * C2020) * C26495 +
                      (C26498 * C1682 + C79306 * C1690) * C26551) *
                         C79307 * C79114) *
                        C79009 * C79309 +
                    (((C26498 * C1681 + C79306 * C1689) * C26551 +
                      (C26498 * C1791 + C79306 * C2019) * C26495 +
                      C30029 * C26552 + C30030 * C26496) *
                         C79307 * C79114 -
                     (C27251 * C26496 + C27250 * C26552 +
                      (C26498 * C168 + C79306 * C325) * C26495 +
                      (C26498 * C97 + C79306 * C103) * C26551) *
                         C79307 * C17509) *
                        C79009 * C79299 +
                    (((C26498 * C98 + C79306 * C104) * C26551 +
                      (C26498 * C169 + C79306 * C326) * C26495 +
                      C27254 * C26552 + C27255 * C26496) *
                         C79307 * C17509 -
                     (C30031 * C26496 + C30032 * C26552 +
                      (C26498 * C1795 + C79306 * C2023) * C26495 +
                      (C26498 * C1685 + C79306 * C1693) * C26551) *
                         C79307 * C79114) *
                        C79009 * C79283 +
                    (((C26498 * C1687 + C79306 * C1695) * C26551 +
                      (C26498 * C1797 + C79306 * C2025) * C26495 +
                      (C26498 * C3934 + C79306 * C3938) * C26552 +
                      (C26498 * C4050 + C79306 * C4286) * C26496) *
                         C79307 * C79114 -
                     (C28654 * C26496 + C28653 * C26552 +
                      (C26498 * C170 + C79306 * C327) * C26495 +
                      (C26498 * C99 + C79306 * C105) * C26551) *
                         C79307 * C17509) *
                        C79009 * C79263)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((((C26498 * C96 + C79306 * C102) * C26551 +
                       (C26498 * C167 + C79306 * C324) * C26495 +
                       C27246 * C26552 + C27247 * C26496) *
                          C79307 * C17509 -
                      (C30027 * C26496 + C30028 * C26552 +
                       (C26498 * C1792 + C79306 * C2020) * C26495 +
                       (C26498 * C1682 + C79306 * C1690) * C26551) *
                          C79307 * C79114) *
                         C79300 +
                     ((C30028 * C26551 + C30027 * C26495 + C32045 * C26552 +
                       C32046 * C26496) *
                          C79307 * C79114 -
                      (C27248 * C26496 + C27249 * C26552 + C27247 * C26495 +
                       C27246 * C26551) *
                          C79307 * C17509) *
                         C79285 +
                     ((C27249 * C26551 + C27248 * C26495 + C31432 * C26552 +
                       C31433 * C26496) *
                          C79307 * C17509 -
                      (C34281 * C26496 + C34282 * C26552 + C32046 * C26495 +
                       C32045 * C26551) *
                          C79307 * C79114) *
                         C79259) *
                        C13595 +
                    ((((C26498 * C1681 + C79306 * C1689) * C26551 +
                       (C26498 * C1791 + C79306 * C2019) * C26495 +
                       C30029 * C26552 + C30030 * C26496) *
                          C79307 * C79114 -
                      (C27251 * C26496 + C27250 * C26552 +
                       (C26498 * C168 + C79306 * C325) * C26495 +
                       (C26498 * C97 + C79306 * C103) * C26551) *
                          C79307 * C17509) *
                         C79300 +
                     ((C27250 * C26551 + C27251 * C26495 + C27252 * C26552 +
                       C27253 * C26496) *
                          C79307 * C17509 -
                      (C33491 * C26496 + C33492 * C26552 + C30030 * C26495 +
                       C30029 * C26551) *
                          C79307 * C79114) *
                         C79285 +
                     ((C33492 * C26551 + C33491 * C26495 +
                       (C26498 * C8378 + C79306 * C8380) * C26552 +
                       (C26498 * C8452 + C79306 * C8592) * C26496) *
                          C79307 * C79114 -
                      (C32747 * C26496 + C32748 * C26552 + C27253 * C26495 +
                       C27252 * C26551) *
                          C79307 * C17509) *
                         C79259) *
                        C78992)) /
                      (p * q * std::sqrt(p + q));
    d2eeyy[44] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((C26679 * C96 + C26682 + C26682 + C26495 * C373 +
                      C26680 * C749 + C26683 + C26683 + C26496 * C1169) *
                         C79306 * C79307 * C17509 -
                     (C26680 * C3931 + C28068 + C28068 + C26496 * C4385 +
                      C26679 * C1682 + C28069 + C28069 + C26495 * C2102) *
                         C79306 * C79307 * C79114) *
                        C79009 * C79309 +
                    ((C26679 * C1681 + C28072 + C28072 + C26495 * C2101 +
                      C26680 * C3932 + C28073 + C28073 + C26496 * C4386) *
                         C79306 * C79307 * C79114 -
                     (C26680 * C748 + C26684 + C26684 + C26496 * C1168 +
                      C26679 * C97 + C26685 + C26685 + C26495 * C374) *
                         C79306 * C79307 * C17509) *
                        C79009 * C79299 +
                    ((C26679 * C98 + C26686 + C26686 + C26495 * C375 +
                      C26680 * C752 + C26687 + C26687 + C26496 * C1172) *
                         C79306 * C79307 * C17509 -
                     (C26680 * C3933 + C28076 + C28076 + C26496 * C4387 +
                      C26679 * C1685 + C28077 + C28077 + C26495 * C2105) *
                         C79306 * C79307 * C79114) *
                        C79009 * C79283 +
                    ((C26679 * C1687 + C29324 + C29324 + C26495 * C2107 +
                      C26680 * C3934 + C29325 + C29325 + C26496 * C4388) *
                         C79306 * C79307 * C79114 -
                     (C26680 * C754 + C26688 + C26688 + C26496 * C1174 +
                      C26679 * C99 + C26689 + C26689 + C26495 * C376) *
                         C79306 * C79307 * C17509) *
                        C79009 * C79263)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C26679 * C96 + C26682 + C26682 + C26495 * C373 +
                       C26680 * C749 + C26683 + C26683 + C26496 * C1169) *
                          C79306 * C79307 * C17509 -
                      (C26680 * C3931 + C28068 + C28068 + C26496 * C4385 +
                       C26679 * C1682 + C28069 + C28069 + C26495 * C2102) *
                          C79306 * C79307 * C79114) *
                         C79300 +
                     ((C26679 * C3931 + C30131 + C30131 + C26495 * C4385 +
                       C26680 * C6044 + C30132 + C30132 + C26496 * C6394) *
                          C79306 * C79307 * C79114 -
                      (C26680 * C750 + C27332 + C27332 + C26496 * C1170 +
                       C26679 * C749 + C27333 + C27333 + C26495 * C1169) *
                          C79306 * C79307 * C17509) *
                         C79285 +
                     ((C26679 * C750 + C27334 + C27334 + C26495 * C1170 +
                       C26680 * C5568 + C27335 + C27335 + C26496 * C5772) *
                          C79306 * C79307 * C17509 -
                      (C26680 * C8377 + C32126 + C32126 + C26496 * C8659 +
                       C26679 * C6044 + C32127 + C32127 + C26495 * C6394) *
                          C79306 * C79307 * C79114) *
                         C79259) *
                        C13595 +
                    (((C26679 * C1681 + C28072 + C28072 + C26495 * C2101 +
                       C26680 * C3932 + C28073 + C28073 + C26496 * C4386) *
                          C79306 * C79307 * C79114 -
                      (C26680 * C748 + C26684 + C26684 + C26496 * C1168 +
                       C26679 * C97 + C26685 + C26685 + C26495 * C374) *
                          C79306 * C79307 * C17509) *
                         C79300 +
                     ((C26679 * C748 + C27336 + C27336 + C26495 * C1168 +
                       C26680 * C751 + C27337 + C27337 + C26496 * C1171) *
                          C79306 * C79307 * C17509 -
                      (C26680 * C6043 + C30133 + C30133 + C26496 * C6393 +
                       C26679 * C3932 + C30134 + C30134 + C26495 * C4386) *
                          C79306 * C79307 * C79114) *
                         C79285 +
                     ((C26679 * C6043 + C33591 + C33591 + C26495 * C6393 +
                       C26680 * C8378 + C33592 + C33592 + C26496 * C8660) *
                          C79306 * C79307 * C79114 -
                      (C26680 * C5567 + C27338 + C27338 + C26496 * C5771 +
                       C26679 * C751 + C27339 + C27339 + C26495 * C1171) *
                          C79306 * C79307 * C17509) *
                         C79259) *
                        C78992)) /
                      (p * q * std::sqrt(p + q));
    d2eeyz[44] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C245 * C96 + C79307 * C246) * C26551 +
            (C245 * C167 + C79307 * C447) * C26495 + C27140 * C26552 +
            C27422 * C26496) *
               C79306 * C17509 -
           (C30237 * C26496 + C29914 * C26552 +
            (C245 * C1792 + C79307 * C2212) * C26495 +
            (C245 * C1682 + C79307 * C1906) * C26551) *
               C79306 * C79114) *
              C79009 * C79309 +
          ((C1939 * C26551 + C2232 * C26495 + C4182 * C26552 + C4512 * C26496) *
               C79306 * C79114 -
           (C1299 * C26496 + C1006 * C26552 + C466 * C26495 + C275 * C26551) *
               C79306 * C17509) *
              C79009 * C79299 +
          ((C278 * C26551 + C467 * C26495 + C1009 * C26552 + C1301 * C26496) *
               C79306 * C17509 -
           (C4513 * C26496 + C4185 * C26552 + C2234 * C26495 + C1942 * C26551) *
               C79306 * C79114) *
              C79009 * C79283 +
          ((C3408 * C26551 + C3619 * C26495 +
            (C245 * C3934 + C79307 * C4168) * C26552 +
            (C245 * C4050 + C79307 * C4504) * C26496) *
               C79306 * C79114 -
           (C2973 * C26496 + C2762 * C26552 + C468 * C26495 + C279 * C26551) *
               C79306 * C17509) *
              C79009 * C79263)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C245 * C96 + C79307 * C246) * C26551 +
             (C245 * C167 + C79307 * C447) * C26495 + C27140 * C26552 +
             C27422 * C26496) *
                C79306 * C17509 -
            (C30237 * C26496 + C29914 * C26552 +
             (C245 * C1792 + C79307 * C2212) * C26495 +
             (C245 * C1682 + C79307 * C1906) * C26551) *
                C79306 * C79114) *
               C79300 +
           ((C29914 * C26551 + C30237 * C26495 + C31946 * C26552 +
             C32212 * C26496) *
                C79306 * C79114 -
            (C27423 * C26496 + C27143 * C26552 + C27422 * C26495 +
             C27140 * C26551) *
                C79306 * C17509) *
               C79285 +
           ((C27143 * C26551 + C27423 * C26495 + C31373 * C26552 +
             C31530 * C26496) *
                C79306 * C17509 -
            (C34421 * C26496 + C34207 * C26552 + C32212 * C26495 +
             C31946 * C26551) *
                C79306 * C79114) *
               C79259) *
              C13595 +
          (((C1939 * C26551 + C2232 * C26495 + C4182 * C26552 +
             C4512 * C26496) *
                C79306 * C79114 -
            (C1299 * C26496 + C1006 * C26552 + C466 * C26495 + C275 * C26551) *
                C79306 * C17509) *
               C79300 +
           ((C1006 * C26551 + C1299 * C26495 + C1007 * C26552 +
             C1300 * C26496) *
                C79306 * C17509 -
            (C8001 * C26496 + C7694 * C26552 + C4512 * C26495 +
             C4182 * C26551) *
                C79306 * C79114) *
               C79285 +
           ((C7694 * C26551 + C8001 * C26495 +
             (C245 * C8378 + C79307 * C8522) * C26552 +
             (C245 * C8452 + C79307 * C8730) * C26496) *
                C79306 * C79114 -
            (C7165 * C26496 + C6954 * C26552 + C1300 * C26495 +
             C1007 * C26551) *
                C79306 * C17509) *
               C79259) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eezx[44] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C26498 * C96 + C79306 * C102) * C245 +
             (C26498 * C246 + C79306 * C515) * C79307) *
                C26495 +
            (C27498 + C27522) * C26496) *
               C17509 -
           ((C30348 + C30338) * C26496 +
            ((C26498 * C1906 + C79306 * C2314) * C79307 +
             (C26498 * C1682 + C79306 * C1690) * C245) *
                C26495) *
               C79114) *
              C79009 * C79309 +
          ((((C26498 * C1681 + C79306 * C1689) * C245 +
             (C26498 * C1905 + C79306 * C2313) * C79307) *
                C26495 +
            (C30339 + C30349) * C26496) *
               C79114 -
           ((C27524 + C27504) * C26496 +
            ((C26498 * C247 + C79306 * C516) * C79307 +
             (C26498 * C97 + C79306 * C103) * C245) *
                C26495) *
               C17509) *
              C79009 * C79299 +
          ((((C26498 * C98 + C79306 * C104) * C245 +
             (C26498 * C248 + C79306 * C517) * C79307) *
                C26495 +
            (C27510 + C27526) * C26496) *
               C17509 -
           ((C30350 + C30344) * C26496 +
            ((C26498 * C1909 + C79306 * C2317) * C79307 +
             (C26498 * C1685 + C79306 * C1693) * C245) *
                C26495) *
               C79114) *
              C79009 * C79283 +
          ((((C26498 * C1687 + C79306 * C1695) * C245 +
             (C26498 * C1911 + C79306 * C2319) * C79307) *
                C26495 +
            ((C26498 * C3934 + C79306 * C3938) * C245 +
             (C26498 * C4168 + C79306 * C4616) * C79307) *
                C26496) *
               C79114 -
           ((C28859 + C28855) * C26496 +
            ((C26498 * C249 + C79306 * C518) * C79307 +
             (C26498 * C99 + C79306 * C105) * C245) *
                C26495) *
               C17509) *
              C79009 * C79263)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C26498 * C96 + C79306 * C102) * C245 +
              (C26498 * C246 + C79306 * C515) * C79307) *
                 C26495 +
             (C27498 + C27522) * C26496) *
                C17509 -
            ((C30348 + C30338) * C26496 +
             ((C26498 * C1906 + C79306 * C2314) * C79307 +
              (C26498 * C1682 + C79306 * C1690) * C245) *
                 C26495) *
                C79114) *
               C79300 +
           (((C30338 + C30348) * C26495 + (C32292 + C32302) * C26496) * C79114 -
            ((C27523 + C27503) * C26496 + (C27522 + C27498) * C26495) *
                C17509) *
               C79285 +
           (((C27503 + C27523) * C26495 + (C31575 + C31583) * C26496) * C17509 -
            ((C34493 + C34491) * C26496 + (C32302 + C32292) * C26495) *
                C79114) *
               C79259) *
              C13595 +
          (((((C26498 * C1681 + C79306 * C1689) * C245 +
              (C26498 * C1905 + C79306 * C2313) * C79307) *
                 C26495 +
             (C30339 + C30349) * C26496) *
                C79114 -
            ((C27524 + C27504) * C26496 +
             ((C26498 * C247 + C79306 * C516) * C79307 +
              (C26498 * C97 + C79306 * C103) * C245) *
                 C26495) *
                C17509) *
               C79300 +
           (((C27504 + C27524) * C26495 + (C27507 + C27525) * C26496) * C17509 -
            ((C33793 + C33791) * C26496 + (C30349 + C30339) * C26495) *
                C79114) *
               C79285 +
           (((C33791 + C33793) * C26495 +
             ((C26498 * C8378 + C79306 * C8380) * C245 +
              (C26498 * C8522 + C79306 * C8798) * C79307) *
                 C26496) *
                C79114 -
            ((C32953 + C32951) * C26496 + (C27525 + C27507) * C26495) *
                C17509) *
               C79259) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eezy[44] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
                C245 +
            (C26551 * C246 + C26495 * C563 + C26552 * C973 + C26496 * C1463) *
                C79307) *
               C79306 * C17509 -
           ((C26552 * C4165 + C26496 * C4715 + C26551 * C1906 +
             C26495 * C2396) *
                C79307 +
            (C26552 * C3931 + C26496 * C4047 + C26551 * C1682 +
             C26495 * C1792) *
                C245) *
               C79306 * C79114) *
              C79009 * C79309 +
          (((C26551 * C1681 + C26495 * C1791 + C26552 * C3932 +
             C26496 * C4048) *
                C245 +
            (C26551 * C1905 + C26495 * C2395 + C26552 * C4166 +
             C26496 * C4716) *
                C79307) *
               C79306 * C79114 -
           ((C26552 * C972 + C26496 * C1462 + C26551 * C247 + C26495 * C564) *
                C79307 +
            (C26552 * C748 + C26496 * C858 + C26551 * C97 + C26495 * C168) *
                C245) *
               C79306 * C17509) *
              C79009 * C79299 +
          (((C26551 * C98 + C26495 * C169 + C26552 * C752 + C26496 * C862) *
                C245 +
            (C26551 * C248 + C26495 * C565 + C26552 * C976 + C26496 * C1466) *
                C79307) *
               C79306 * C17509 -
           ((C26552 * C4167 + C26496 * C4717 + C26551 * C1909 +
             C26495 * C2399) *
                C79307 +
            (C26552 * C3933 + C26496 * C4049 + C26551 * C1685 +
             C26495 * C1795) *
                C245) *
               C79306 * C79114) *
              C79009 * C79283 +
          (((C26551 * C1687 + C26495 * C1797 + C26552 * C3934 +
             C26496 * C4050) *
                C245 +
            (C26551 * C1911 + C26495 * C2401 + C26552 * C4168 +
             C26496 * C4718) *
                C79307) *
               C79306 * C79114 -
           ((C26552 * C978 + C26496 * C1468 + C26551 * C249 + C26495 * C566) *
                C79307 +
            (C26552 * C754 + C26496 * C864 + C26551 * C99 + C26495 * C170) *
                C245) *
               C79306 * C17509) *
              C79009 * C79263)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
                 C245 +
             (C26551 * C246 + C26495 * C563 + C26552 * C973 + C26496 * C1463) *
                 C79307) *
                C79306 * C17509 -
            ((C26552 * C4165 + C26496 * C4715 + C26551 * C1906 +
              C26495 * C2396) *
                 C79307 +
             (C26552 * C3931 + C26496 * C4047 + C26551 * C1682 +
              C26495 * C1792) *
                 C245) *
                C79306 * C79114) *
               C79300 +
           (((C26551 * C3931 + C26495 * C4047 + C26552 * C6044 +
              C26496 * C6142) *
                 C245 +
             (C26551 * C4165 + C26495 * C4715 + C26552 * C6228 +
              C26496 * C6640) *
                 C79307) *
                C79306 * C79114 -
            ((C26552 * C974 + C26496 * C1464 + C26551 * C973 + C26495 * C1463) *
                 C79307 +
             (C26552 * C750 + C26496 * C860 + C26551 * C749 + C26495 * C859) *
                 C245) *
                C79306 * C17509) *
               C79285 +
           (((C26551 * C750 + C26495 * C860 + C26552 * C5568 + C26496 * C5626) *
                 C245 +
             (C26551 * C974 + C26495 * C1464 + C26552 * C5676 +
              C26496 * C5914) *
                 C79307) *
                C79306 * C17509 -
            ((C26552 * C8521 + C26496 * C8865 + C26551 * C6228 +
              C26495 * C6640) *
                 C79307 +
             (C26552 * C8377 + C26496 * C8451 + C26551 * C6044 +
              C26495 * C6142) *
                 C245) *
                C79306 * C79114) *
               C79259) *
              C13595 +
          ((((C26551 * C1681 + C26495 * C1791 + C26552 * C3932 +
              C26496 * C4048) *
                 C245 +
             (C26551 * C1905 + C26495 * C2395 + C26552 * C4166 +
              C26496 * C4716) *
                 C79307) *
                C79306 * C79114 -
            ((C26552 * C972 + C26496 * C1462 + C26551 * C247 + C26495 * C564) *
                 C79307 +
             (C26552 * C748 + C26496 * C858 + C26551 * C97 + C26495 * C168) *
                 C245) *
                C79306 * C17509) *
               C79300 +
           (((C26551 * C748 + C26495 * C858 + C26552 * C751 + C26496 * C861) *
                 C245 +
             (C26551 * C972 + C26495 * C1462 + C26552 * C975 + C26496 * C1465) *
                 C79307) *
                C79306 * C17509 -
            ((C26552 * C6227 + C26496 * C6639 + C26551 * C4166 +
              C26495 * C4716) *
                 C79307 +
             (C26552 * C6043 + C26496 * C6141 + C26551 * C3932 +
              C26495 * C4048) *
                 C245) *
                C79306 * C79114) *
               C79285 +
           (((C26551 * C6043 + C26495 * C6141 + C26552 * C8378 +
              C26496 * C8452) *
                 C245 +
             (C26551 * C6227 + C26495 * C6639 + C26552 * C8522 +
              C26496 * C8866) *
                 C79307) *
                C79306 * C79114 -
            ((C26552 * C5675 + C26496 * C5913 + C26551 * C975 +
              C26495 * C1465) *
                 C79307 +
             (C26552 * C5567 + C26496 * C5625 + C26551 * C751 + C26495 * C861) *
                 C245) *
                C79306 * C17509) *
               C79259) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eezz[44] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C631 * C96 + C639 + C639 + C79307 * C632) * C26495 +
            C27684 * C26496) *
               C79306 * C17509 -
           (C30551 * C26496 +
            (C631 * C1682 + C2509 + C2509 + C79307 * C2498) * C26495) *
               C79306 * C79114) *
              C79009 * C79309 +
          ((C2530 * C26495 + C4844 * C26496) * C79306 * C79114 -
           (C1597 * C26496 + C661 * C26495) * C79306 * C17509) *
              C79009 * C79299 +
          ((C662 * C26495 + C1599 * C26496) * C79306 * C17509 -
           (C4845 * C26496 + C2532 * C26495) * C79306 * C79114) *
              C79009 * C79283 +
          ((C3832 * C26495 +
            (C631 * C3934 + C4839 + C4839 + C79307 * C4830) * C26496) *
               C79306 * C79114 -
           (C3186 * C26496 + C663 * C26495) * C79306 * C17509) *
              C79009 * C79263)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C631 * C96 + C639 + C639 + C79307 * C632) * C26495 +
             C27684 * C26496) *
                C79306 * C17509 -
            (C30551 * C26496 +
             (C631 * C1682 + C2509 + C2509 + C79307 * C2498) * C26495) *
                C79306 * C79114) *
               C79300 +
           ((C30551 * C26495 + C32468 * C26496) * C79306 * C79114 -
            (C27685 * C26496 + C27684 * C26495) * C79306 * C17509) *
               C79285 +
           ((C27685 * C26495 + C31680 * C26496) * C79306 * C17509 -
            (C34633 * C26496 + C32468 * C26495) * C79306 * C79114) *
               C79259) *
              C13595 +
          (((C2530 * C26495 + C4844 * C26496) * C79306 * C79114 -
            (C1597 * C26496 + C661 * C26495) * C79306 * C17509) *
               C79300 +
           ((C1597 * C26495 + C1598 * C26496) * C79306 * C17509 -
            (C8310 * C26496 + C4844 * C26495) * C79306 * C79114) *
               C79285 +
           ((C8310 * C26495 +
             (C631 * C8378 + C8937 + C8937 + C79307 * C8934) * C26496) *
                C79306 * C79114 -
            (C7378 * C26496 + C1598 * C26495) * C79306 * C17509) *
               C79259) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eexx[45] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C79307 * C26495 +
            C26970 * C26496) *
               C79027 * C79229 -
           (C26971 * C26496 + C26970 * C26495) * C79027 * C79072) *
              C2605 +
          ((C26972 * C26495 + C26973 * C26496) * C79027 * C79072 -
           (C26972 * C26496 + (C26497 * C97 + C26503 + C26503 + C79306 * C109) *
                                  C79307 * C26495) *
               C79027 * C79229) *
              C2606 +
          (((C26497 * C98 + C26504 + C26504 + C79306 * C110) * C79307 * C26495 +
            C26974 * C26496) *
               C79027 * C79229 -
           (C26975 * C26496 + C26974 * C26495) * C79027 * C79072) *
              C2607 +
          ((C28448 * C26495 +
            (C26497 * C755 + C28444 + C28444 + C79306 * C771) * C79307 *
                C26496) *
               C79027 * C79072 -
           (C28448 * C26496 + (C26497 * C99 + C26507 + C26507 + C79306 * C111) *
                                  C79307 * C26495) *
               C79027 * C79229) *
              C79263)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C79307 * C26495 +
            C26970 * C26496) *
               C79027 * C6795 -
           (C26971 * C26496 + C26970 * C26495) * C79027 * C6796 +
           (C26971 * C26495 + C31275 * C26496) * C79027 * C6797 -
           (C31276 * C26496 + C31275 * C26495) * C79027 * C79269) *
              C79215 +
          ((C26972 * C26495 + C26973 * C26496) * C79027 * C6796 -
           (C26972 * C26496 + (C26497 * C97 + C26503 + C26503 + C79306 * C109) *
                                  C79307 * C26495) *
               C79027 * C6795 -
           (C32542 * C26496 + C26973 * C26495) * C79027 * C6797 +
           (C32542 * C26495 +
            (C26497 * C5570 + C32538 + C32538 + C79306 * C5578) * C79307 *
                C26496) *
               C79027 * C79269) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eexy[45] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
                C26498 +
            (C26551 * C102 + C26495 * C173 + C26552 * C757 + C26496 * C867) *
                C79306) *
               C79307 * C79027 * C79229 -
           ((C26552 * C758 + C26496 * C868 + C26551 * C757 + C26495 * C867) *
                C79306 +
            (C26552 * C750 + C26496 * C860 + C26551 * C749 + C26495 * C859) *
                C26498) *
               C79307 * C79027 * C79072) *
              C2605 +
          (((C26551 * C748 + C26495 * C858 + C26552 * C751 + C26496 * C861) *
                C26498 +
            (C26551 * C756 + C26495 * C866 + C26552 * C759 + C26496 * C869) *
                C79306) *
               C79307 * C79027 * C79072 -
           ((C26552 * C756 + C26496 * C866 + C26551 * C103 + C26495 * C174) *
                C79306 +
            (C26552 * C748 + C26496 * C858 + C26551 * C97 + C26495 * C168) *
                C26498) *
               C79307 * C79027 * C79229) *
              C2606 +
          (((C26551 * C98 + C26495 * C169 + C26552 * C752 + C26496 * C862) *
                C26498 +
            (C26551 * C104 + C26495 * C175 + C26552 * C760 + C26496 * C870) *
                C79306) *
               C79307 * C79027 * C79229 -
           ((C26552 * C761 + C26496 * C871 + C26551 * C760 + C26495 * C870) *
                C79306 +
            (C26552 * C753 + C26496 * C863 + C26551 * C752 + C26495 * C862) *
                C26498) *
               C79307 * C79027 * C79072) *
              C2607 +
          (((C26551 * C754 + C26495 * C864 + C26552 * C755 + C26496 * C865) *
                C26498 +
            (C26551 * C762 + C26495 * C872 + C26552 * C763 + C26496 * C873) *
                C79306) *
               C79307 * C79027 * C79072 -
           ((C26552 * C762 + C26496 * C872 + C26551 * C105 + C26495 * C176) *
                C79306 +
            (C26552 * C754 + C26496 * C864 + C26551 * C99 + C26495 * C170) *
                C26498) *
               C79307 * C79027 * C79229) *
              C79263)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
                C26498 +
            (C26551 * C102 + C26495 * C173 + C26552 * C757 + C26496 * C867) *
                C79306) *
               C79307 * C79027 * C6795 -
           ((C26552 * C758 + C26496 * C868 + C26551 * C757 + C26495 * C867) *
                C79306 +
            (C26552 * C750 + C26496 * C860 + C26551 * C749 + C26495 * C859) *
                C26498) *
               C79307 * C79027 * C6796 +
           ((C26551 * C750 + C26495 * C860 + C26552 * C5568 + C26496 * C5626) *
                C26498 +
            (C26551 * C758 + C26495 * C868 + C26552 * C5572 + C26496 * C5630) *
                C79306) *
               C79307 * C79027 * C6797 -
           ((C26552 * C5573 + C26496 * C5631 + C26551 * C5572 +
             C26495 * C5630) *
                C79306 +
            (C26552 * C5569 + C26496 * C5627 + C26551 * C5568 +
             C26495 * C5626) *
                C26498) *
               C79307 * C79027 * C79269) *
              C79215 +
          (((C26551 * C748 + C26495 * C858 + C26552 * C751 + C26496 * C861) *
                C26498 +
            (C26551 * C756 + C26495 * C866 + C26552 * C759 + C26496 * C869) *
                C79306) *
               C79307 * C79027 * C6796 -
           ((C26552 * C756 + C26496 * C866 + C26551 * C103 + C26495 * C174) *
                C79306 +
            (C26552 * C748 + C26496 * C858 + C26551 * C97 + C26495 * C168) *
                C26498) *
               C79307 * C79027 * C6795 -
           ((C26552 * C5571 + C26496 * C5629 + C26551 * C759 + C26495 * C869) *
                C79306 +
            (C26552 * C5567 + C26496 * C5625 + C26551 * C751 + C26495 * C861) *
                C26498) *
               C79307 * C79027 * C6797 +
           ((C26551 * C5567 + C26495 * C5625 + C26552 * C5570 +
             C26496 * C5628) *
                C26498 +
            (C26551 * C5571 + C26495 * C5629 + C26552 * C5574 +
             C26496 * C5632) *
                C79306) *
               C79307 * C79027 * C79269) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eexz[45] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((((C245 * C96 + C79307 * C246) * C26498 +
                       (C245 * C102 + C79307 * C252) * C79306) *
                          C26495 +
                      (C27144 + C27145) * C26496) *
                         C79027 * C79229 -
                     ((C27146 + C27147) * C26496 + (C27145 + C27144) * C26495) *
                         C79027 * C79072) *
                        C2605 +
                    (((C27132 + C27133) * C26495 + (C27134 + C27135) * C26496) *
                         C79027 * C79072 -
                     ((C27133 + C27132) * C26496 +
                      (C276 * C79306 + C275 * C26498) * C26495) *
                         C79027 * C79229) *
                        C2606 +
                    (((C278 * C26498 + C277 * C79306) * C26495 +
                      (C27136 + C27137) * C26496) *
                         C79027 * C79229 -
                     ((C27138 + C27139) * C26496 + (C27137 + C27136) * C26495) *
                         C79027 * C79072) *
                        C2607 +
                    (((C28581 + C28582) * C26495 +
                      ((C245 * C755 + C79307 * C979) * C26498 +
                       (C245 * C763 + C79307 * C987) * C79306) *
                          C26496) *
                         C79027 * C79072 -
                     ((C28582 + C28581) * C26496 +
                      (C280 * C79306 + C279 * C26498) * C26495) *
                         C79027 * C79229) *
                        C79263)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((((C245 * C96 + C79307 * C246) * C26498 +
                       (C245 * C102 + C79307 * C252) * C79306) *
                          C26495 +
                      (C27144 + C27145) * C26496) *
                         C79027 * C6795 -
                     ((C27146 + C27147) * C26496 + (C27145 + C27144) * C26495) *
                         C79027 * C6796 +
                     ((C27147 + C27146) * C26495 + (C31377 + C31378) * C26496) *
                         C79027 * C6797 -
                     ((C31379 + C31380) * C26496 + (C31378 + C31377) * C26495) *
                         C79027 * C79269) *
                        C79215 +
                    (((C27132 + C27133) * C26495 + (C27134 + C27135) * C26496) *
                         C79027 * C6796 -
                     ((C27133 + C27132) * C26496 +
                      (C276 * C79306 + C275 * C26498) * C26495) *
                         C79027 * C6795 -
                     ((C32675 + C32676) * C26496 + (C27135 + C27134) * C26495) *
                         C79027 * C6797 +
                     ((C32676 + C32675) * C26495 +
                      ((C245 * C5570 + C79307 * C5678) * C26498 +
                       (C245 * C5574 + C79307 * C5682) * C79306) *
                          C26496) *
                         C79027 * C79269) *
                        C78992)) /
                      (p * q * std::sqrt(p + q));
    d2eeyx[45] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C26498 * C96 + C79306 * C102) * C26551 +
                      (C26498 * C167 + C79306 * C324) * C26495 +
                      C27246 * C26552 + C27247 * C26496) *
                         C79307 * C79027 * C79229 -
                     (C27248 * C26496 + C27249 * C26552 + C27247 * C26495 +
                      C27246 * C26551) *
                         C79307 * C79027 * C79072) *
                        C2605 +
                    ((C27250 * C26551 + C27251 * C26495 + C27252 * C26552 +
                      C27253 * C26496) *
                         C79307 * C79027 * C79072 -
                     (C27251 * C26496 + C27250 * C26552 +
                      (C26498 * C168 + C79306 * C325) * C26495 +
                      (C26498 * C97 + C79306 * C103) * C26551) *
                         C79307 * C79027 * C79229) *
                        C2606 +
                    (((C26498 * C98 + C79306 * C104) * C26551 +
                      (C26498 * C169 + C79306 * C326) * C26495 +
                      C27254 * C26552 + C27255 * C26496) *
                         C79307 * C79027 * C79229 -
                     (C27256 * C26496 + C27257 * C26552 + C27255 * C26495 +
                      C27254 * C26551) *
                         C79307 * C79027 * C79072) *
                        C2607 +
                    ((C28653 * C26551 + C28654 * C26495 +
                      (C26498 * C755 + C79306 * C763) * C26552 +
                      (C26498 * C865 + C79306 * C1093) * C26496) *
                         C79307 * C79027 * C79072 -
                     (C28654 * C26496 + C28653 * C26552 +
                      (C26498 * C170 + C79306 * C327) * C26495 +
                      (C26498 * C99 + C79306 * C105) * C26551) *
                         C79307 * C79027 * C79229) *
                        C79263)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C26498 * C96 + C79306 * C102) * C26551 +
                      (C26498 * C167 + C79306 * C324) * C26495 +
                      C27246 * C26552 + C27247 * C26496) *
                         C79307 * C79027 * C6795 -
                     (C27248 * C26496 + C27249 * C26552 + C27247 * C26495 +
                      C27246 * C26551) *
                         C79307 * C79027 * C6796 +
                     (C27249 * C26551 + C27248 * C26495 + C31432 * C26552 +
                      C31433 * C26496) *
                         C79307 * C79027 * C6797 -
                     (C31434 * C26496 + C31435 * C26552 + C31433 * C26495 +
                      C31432 * C26551) *
                         C79307 * C79027 * C79269) *
                        C79215 +
                    ((C27250 * C26551 + C27251 * C26495 + C27252 * C26552 +
                      C27253 * C26496) *
                         C79307 * C79027 * C6796 -
                     (C27251 * C26496 + C27250 * C26552 +
                      (C26498 * C168 + C79306 * C325) * C26495 +
                      (C26498 * C97 + C79306 * C103) * C26551) *
                         C79307 * C79027 * C6795 -
                     (C32747 * C26496 + C32748 * C26552 + C27253 * C26495 +
                      C27252 * C26551) *
                         C79307 * C79027 * C6797 +
                     (C32748 * C26551 + C32747 * C26495 +
                      (C26498 * C5570 + C79306 * C5574) * C26552 +
                      (C26498 * C5628 + C79306 * C5728) * C26496) *
                         C79307 * C79027 * C79269) *
                        C78992)) /
                      (p * q * std::sqrt(p + q));
    d2eeyy[45] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((C26679 * C96 + C26682 + C26682 + C26495 * C373 +
                      C26680 * C749 + C26683 + C26683 + C26496 * C1169) *
                         C79306 * C79307 * C79027 * C79229 -
                     (C26680 * C750 + C27332 + C27332 + C26496 * C1170 +
                      C26679 * C749 + C27333 + C27333 + C26495 * C1169) *
                         C79306 * C79307 * C79027 * C79072) *
                        C2605 +
                    ((C26679 * C748 + C27336 + C27336 + C26495 * C1168 +
                      C26680 * C751 + C27337 + C27337 + C26496 * C1171) *
                         C79306 * C79307 * C79027 * C79072 -
                     (C26680 * C748 + C26684 + C26684 + C26496 * C1168 +
                      C26679 * C97 + C26685 + C26685 + C26495 * C374) *
                         C79306 * C79307 * C79027 * C79229) *
                        C2606 +
                    ((C26679 * C98 + C26686 + C26686 + C26495 * C375 +
                      C26680 * C752 + C26687 + C26687 + C26496 * C1172) *
                         C79306 * C79307 * C79027 * C79229 -
                     (C26680 * C753 + C27340 + C27340 + C26496 * C1173 +
                      C26679 * C752 + C27341 + C27341 + C26495 * C1172) *
                         C79306 * C79307 * C79027 * C79072) *
                        C2607 +
                    ((C26679 * C754 + C28721 + C28721 + C26495 * C1174 +
                      C26680 * C755 + C28722 + C28722 + C26496 * C1175) *
                         C79306 * C79307 * C79027 * C79072 -
                     (C26680 * C754 + C26688 + C26688 + C26496 * C1174 +
                      C26679 * C99 + C26689 + C26689 + C26495 * C376) *
                         C79306 * C79307 * C79027 * C79229) *
                        C79263)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((C26679 * C96 + C26682 + C26682 + C26495 * C373 +
                      C26680 * C749 + C26683 + C26683 + C26496 * C1169) *
                         C79306 * C79307 * C79027 * C6795 -
                     (C26680 * C750 + C27332 + C27332 + C26496 * C1170 +
                      C26679 * C749 + C27333 + C27333 + C26495 * C1169) *
                         C79306 * C79307 * C79027 * C6796 +
                     (C26679 * C750 + C27334 + C27334 + C26495 * C1170 +
                      C26680 * C5568 + C27335 + C27335 + C26496 * C5772) *
                         C79306 * C79307 * C79027 * C6797 -
                     (C26680 * C5569 + C31479 + C31479 + C26496 * C5773 +
                      C26679 * C5568 + C31480 + C31480 + C26495 * C5772) *
                         C79306 * C79307 * C79027 * C79269) *
                        C79215 +
                    ((C26679 * C748 + C27336 + C27336 + C26495 * C1168 +
                      C26680 * C751 + C27337 + C27337 + C26496 * C1171) *
                         C79306 * C79307 * C79027 * C6796 -
                     (C26680 * C748 + C26684 + C26684 + C26496 * C1168 +
                      C26679 * C97 + C26685 + C26685 + C26495 * C374) *
                         C79306 * C79307 * C79027 * C6795 -
                     (C26680 * C5567 + C27338 + C27338 + C26496 * C5771 +
                      C26679 * C751 + C27339 + C27339 + C26495 * C1171) *
                         C79306 * C79307 * C79027 * C6797 +
                     (C26679 * C5567 + C32815 + C32815 + C26495 * C5771 +
                      C26680 * C5570 + C32816 + C32816 + C26496 * C5774) *
                         C79306 * C79307 * C79027 * C79269) *
                        C78992)) /
                      (p * q * std::sqrt(p + q));
    d2eeyz[45] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C245 * C96 + C79307 * C246) * C26551 +
            (C245 * C167 + C79307 * C447) * C26495 + C27140 * C26552 +
            C27422 * C26496) *
               C79306 * C79027 * C79229 -
           (C27423 * C26496 + C27143 * C26552 + C27422 * C26495 +
            C27140 * C26551) *
               C79306 * C79027 * C79072) *
              C2605 +
          ((C1006 * C26551 + C1299 * C26495 + C1007 * C26552 + C1300 * C26496) *
               C79306 * C79027 * C79072 -
           (C1299 * C26496 + C1006 * C26552 + C466 * C26495 + C275 * C26551) *
               C79306 * C79027 * C79229) *
              C2606 +
          ((C278 * C26551 + C467 * C26495 + C1009 * C26552 + C1301 * C26496) *
               C79306 * C79027 * C79229 -
           (C1302 * C26496 + C1012 * C26552 + C1301 * C26495 + C1009 * C26551) *
               C79306 * C79027 * C79072) *
              C2607 +
          ((C2762 * C26551 + C2973 * C26495 +
            (C245 * C755 + C79307 * C979) * C26552 +
            (C245 * C865 + C79307 * C1285) * C26496) *
               C79306 * C79027 * C79072 -
           (C2973 * C26496 + C2762 * C26552 + C468 * C26495 + C279 * C26551) *
               C79306 * C79027 * C79229) *
              C79263)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C245 * C96 + C79307 * C246) * C26551 +
            (C245 * C167 + C79307 * C447) * C26495 + C27140 * C26552 +
            C27422 * C26496) *
               C79306 * C79027 * C6795 -
           (C27423 * C26496 + C27143 * C26552 + C27422 * C26495 +
            C27140 * C26551) *
               C79306 * C79027 * C6796 +
           (C27143 * C26551 + C27423 * C26495 + C31373 * C26552 +
            C31530 * C26496) *
               C79306 * C79027 * C6797 -
           (C31531 * C26496 + C31376 * C26552 + C31530 * C26495 +
            C31373 * C26551) *
               C79306 * C79027 * C79269) *
              C79215 +
          ((C1006 * C26551 + C1299 * C26495 + C1007 * C26552 + C1300 * C26496) *
               C79306 * C79027 * C6796 -
           (C1299 * C26496 + C1006 * C26552 + C466 * C26495 + C275 * C26551) *
               C79306 * C79027 * C6795 -
           (C7165 * C26496 + C6954 * C26552 + C1300 * C26495 + C1007 * C26551) *
               C79306 * C79027 * C6797 +
           (C6954 * C26551 + C7165 * C26495 +
            (C245 * C5570 + C79307 * C5678) * C26552 +
            (C245 * C5628 + C79307 * C5824) * C26496) *
               C79306 * C79027 * C79269) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eezx[45] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((((C26498 * C96 + C79306 * C102) * C245 +
                       (C26498 * C246 + C79306 * C515) * C79307) *
                          C26495 +
                      (C27498 + C27522) * C26496) *
                         C79027 * C79229 -
                     ((C27523 + C27503) * C26496 + (C27522 + C27498) * C26495) *
                         C79027 * C79072) *
                        C2605 +
                    (((C27504 + C27524) * C26495 + (C27507 + C27525) * C26496) *
                         C79027 * C79072 -
                     ((C27524 + C27504) * C26496 +
                      ((C26498 * C247 + C79306 * C516) * C79307 +
                       (C26498 * C97 + C79306 * C103) * C245) *
                          C26495) *
                         C79027 * C79229) *
                        C2606 +
                    ((((C26498 * C98 + C79306 * C104) * C245 +
                       (C26498 * C248 + C79306 * C517) * C79307) *
                          C26495 +
                      (C27510 + C27526) * C26496) *
                         C79027 * C79229 -
                     ((C27527 + C27515) * C26496 + (C27526 + C27510) * C26495) *
                         C79027 * C79072) *
                        C2607 +
                    (((C28855 + C28859) * C26495 +
                      ((C26498 * C755 + C79306 * C763) * C245 +
                       (C26498 * C979 + C79306 * C1387) * C79307) *
                          C26496) *
                         C79027 * C79072 -
                     ((C28859 + C28855) * C26496 +
                      ((C26498 * C249 + C79306 * C518) * C79307 +
                       (C26498 * C99 + C79306 * C105) * C245) *
                          C26495) *
                         C79027 * C79229) *
                        C79263)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((((C26498 * C96 + C79306 * C102) * C245 +
                       (C26498 * C246 + C79306 * C515) * C79307) *
                          C26495 +
                      (C27498 + C27522) * C26496) *
                         C79027 * C6795 -
                     ((C27523 + C27503) * C26496 + (C27522 + C27498) * C26495) *
                         C79027 * C6796 +
                     ((C27503 + C27523) * C26495 + (C31575 + C31583) * C26496) *
                         C79027 * C6797 -
                     ((C31584 + C31580) * C26496 + (C31583 + C31575) * C26495) *
                         C79027 * C79269) *
                        C79215 +
                    (((C27504 + C27524) * C26495 + (C27507 + C27525) * C26496) *
                         C79027 * C6796 -
                     ((C27524 + C27504) * C26496 +
                      ((C26498 * C247 + C79306 * C516) * C79307 +
                       (C26498 * C97 + C79306 * C103) * C245) *
                          C26495) *
                         C79027 * C6795 -
                     ((C32953 + C32951) * C26496 + (C27525 + C27507) * C26495) *
                         C79027 * C6797 +
                     ((C32951 + C32953) * C26495 +
                      ((C26498 * C5570 + C79306 * C5574) * C245 +
                       (C26498 * C5678 + C79306 * C5870) * C79307) *
                          C26496) *
                         C79027 * C79269) *
                        C78992)) /
                      (p * q * std::sqrt(p + q));
    d2eezy[45] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
                C245 +
            (C26551 * C246 + C26495 * C563 + C26552 * C973 + C26496 * C1463) *
                C79307) *
               C79306 * C79027 * C79229 -
           ((C26552 * C974 + C26496 * C1464 + C26551 * C973 + C26495 * C1463) *
                C79307 +
            (C26552 * C750 + C26496 * C860 + C26551 * C749 + C26495 * C859) *
                C245) *
               C79306 * C79027 * C79072) *
              C2605 +
          (((C26551 * C748 + C26495 * C858 + C26552 * C751 + C26496 * C861) *
                C245 +
            (C26551 * C972 + C26495 * C1462 + C26552 * C975 + C26496 * C1465) *
                C79307) *
               C79306 * C79027 * C79072 -
           ((C26552 * C972 + C26496 * C1462 + C26551 * C247 + C26495 * C564) *
                C79307 +
            (C26552 * C748 + C26496 * C858 + C26551 * C97 + C26495 * C168) *
                C245) *
               C79306 * C79027 * C79229) *
              C2606 +
          (((C26551 * C98 + C26495 * C169 + C26552 * C752 + C26496 * C862) *
                C245 +
            (C26551 * C248 + C26495 * C565 + C26552 * C976 + C26496 * C1466) *
                C79307) *
               C79306 * C79027 * C79229 -
           ((C26552 * C977 + C26496 * C1467 + C26551 * C976 + C26495 * C1466) *
                C79307 +
            (C26552 * C753 + C26496 * C863 + C26551 * C752 + C26495 * C862) *
                C245) *
               C79306 * C79027 * C79072) *
              C2607 +
          (((C26551 * C754 + C26495 * C864 + C26552 * C755 + C26496 * C865) *
                C245 +
            (C26551 * C978 + C26495 * C1468 + C26552 * C979 + C26496 * C1469) *
                C79307) *
               C79306 * C79027 * C79072 -
           ((C26552 * C978 + C26496 * C1468 + C26551 * C249 + C26495 * C566) *
                C79307 +
            (C26552 * C754 + C26496 * C864 + C26551 * C99 + C26495 * C170) *
                C245) *
               C79306 * C79027 * C79229) *
              C79263)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
                C245 +
            (C26551 * C246 + C26495 * C563 + C26552 * C973 + C26496 * C1463) *
                C79307) *
               C79306 * C79027 * C6795 -
           ((C26552 * C974 + C26496 * C1464 + C26551 * C973 + C26495 * C1463) *
                C79307 +
            (C26552 * C750 + C26496 * C860 + C26551 * C749 + C26495 * C859) *
                C245) *
               C79306 * C79027 * C6796 +
           ((C26551 * C750 + C26495 * C860 + C26552 * C5568 + C26496 * C5626) *
                C245 +
            (C26551 * C974 + C26495 * C1464 + C26552 * C5676 + C26496 * C5914) *
                C79307) *
               C79306 * C79027 * C6797 -
           ((C26552 * C5677 + C26496 * C5915 + C26551 * C5676 +
             C26495 * C5914) *
                C79307 +
            (C26552 * C5569 + C26496 * C5627 + C26551 * C5568 +
             C26495 * C5626) *
                C245) *
               C79306 * C79027 * C79269) *
              C79215 +
          (((C26551 * C748 + C26495 * C858 + C26552 * C751 + C26496 * C861) *
                C245 +
            (C26551 * C972 + C26495 * C1462 + C26552 * C975 + C26496 * C1465) *
                C79307) *
               C79306 * C79027 * C6796 -
           ((C26552 * C972 + C26496 * C1462 + C26551 * C247 + C26495 * C564) *
                C79307 +
            (C26552 * C748 + C26496 * C858 + C26551 * C97 + C26495 * C168) *
                C245) *
               C79306 * C79027 * C6795 -
           ((C26552 * C5675 + C26496 * C5913 + C26551 * C975 + C26495 * C1465) *
                C79307 +
            (C26552 * C5567 + C26496 * C5625 + C26551 * C751 + C26495 * C861) *
                C245) *
               C79306 * C79027 * C6797 +
           ((C26551 * C5567 + C26495 * C5625 + C26552 * C5570 +
             C26496 * C5628) *
                C245 +
            (C26551 * C5675 + C26495 * C5913 + C26552 * C5678 +
             C26496 * C5916) *
                C79307) *
               C79306 * C79027 * C79269) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eezz[45] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C631 * C96 + C639 + C639 + C79307 * C632) * C26495 +
            C27684 * C26496) *
               C79306 * C79027 * C79229 -
           (C27685 * C26496 + C27684 * C26495) * C79306 * C79027 * C79072) *
              C2605 +
          ((C1597 * C26495 + C1598 * C26496) * C79306 * C79027 * C79072 -
           (C1597 * C26496 + C661 * C26495) * C79306 * C79027 * C79229) *
              C2606 +
          ((C662 * C26495 + C1599 * C26496) * C79306 * C79027 * C79229 -
           (C1600 * C26496 + C1599 * C26495) * C79306 * C79027 * C79072) *
              C2607 +
          ((C3186 * C26495 +
            (C631 * C755 + C1588 + C1588 + C79307 * C1571) * C26496) *
               C79306 * C79027 * C79072 -
           (C3186 * C26496 + C663 * C26495) * C79306 * C79027 * C79229) *
              C79263)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C631 * C96 + C639 + C639 + C79307 * C632) * C26495 +
            C27684 * C26496) *
               C79306 * C79027 * C6795 -
           (C27685 * C26496 + C27684 * C26495) * C79306 * C79027 * C6796 +
           (C27685 * C26495 + C31680 * C26496) * C79306 * C79027 * C6797 -
           (C31681 * C26496 + C31680 * C26495) * C79306 * C79027 * C79269) *
              C79215 +
          ((C1597 * C26495 + C1598 * C26496) * C79306 * C79027 * C6796 -
           (C1597 * C26496 + C661 * C26495) * C79306 * C79027 * C6795 -
           (C7378 * C26496 + C1598 * C26495) * C79306 * C79027 * C6797 +
           (C7378 * C26495 +
            (C631 * C5570 + C5967 + C5967 + C79307 * C5962) * C26496) *
               C79306 * C79027 * C79269) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eexx[46] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C79307 *
                 C26495 +
             C26970 * C26496) *
                C79230 -
            (C29706 * C26496 +
             (C26497 * C1682 + C27761 + C27761 + C79306 * C1698) * C79307 *
                 C26495) *
                C79114) *
               C79229 +
           ((C29706 * C26495 +
             (C26497 * C6044 + C29690 + C29690 + C79306 * C6056) * C79307 *
                 C26496) *
                C79114 -
            (C26971 * C26496 + C26970 * C26495) * C79230) *
               C79072) *
              C745 +
          ((((C26497 * C1681 + C27764 + C27764 + C79306 * C1697) * C79307 *
                 C26495 +
             C29707 * C26496) *
                C79114 -
            (C26972 * C26496 +
             (C26497 * C97 + C26503 + C26503 + C79306 * C109) * C79307 *
                 C26495) *
                C79230) *
               C79229 +
           ((C26972 * C26495 + C26973 * C26496) * C79230 -
            ((C26497 * C6043 + C29693 + C29693 + C79306 * C6055) * C79307 *
                 C26496 +
             C29707 * C26495) *
                C79114) *
               C79072) *
              C746 +
          ((((C26497 * C98 + C26504 + C26504 + C79306 * C110) * C79307 *
                 C26495 +
             C26974 * C26496) *
                C79230 -
            (C29708 * C26496 +
             (C26497 * C1685 + C27769 + C27769 + C79306 * C1701) * C79307 *
                 C26495) *
                C79114) *
               C79229 +
           ((C29708 * C26495 +
             (C26497 * C7477 + C29696 + C29696 + C79306 * C7479) * C79307 *
                 C26496) *
                C79114 -
            (C26975 * C26496 + C26974 * C26495) * C79230) *
               C79072) *
              C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C79307 * C26495 +
            C26970 * C26496) *
               C79230 -
           (C29706 * C26496 +
            (C26497 * C1682 + C27761 + C27761 + C79306 * C1698) * C79307 *
                C26495) *
               C79114) *
              C6795 +
          ((C29706 * C26495 + C31778 * C26496) * C79114 -
           (C26971 * C26496 + C26970 * C26495) * C79230) *
              C6796 +
          ((C26971 * C26495 + C31275 * C26496) * C79230 -
           (C34065 * C26496 + C31778 * C26495) * C79114) *
              C6797 +
          ((C34065 * C26495 +
            (C26497 * C34055 + C34061 + C34061 + C79306 * C34057) * C79307 *
                C26496) *
               C79114 -
           (C31276 * C26496 + C31275 * C26495) * C79230) *
              C79269) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eexy[46] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
                 C26498 +
             (C26551 * C102 + C26495 * C173 + C26552 * C757 + C26496 * C867) *
                 C79306) *
                C79307 * C79230 -
            ((C26552 * C3935 + C26496 * C4051 + C26551 * C1690 +
              C26495 * C1800) *
                 C79306 +
             (C26552 * C3931 + C26496 * C4047 + C26551 * C1682 +
              C26495 * C1792) *
                 C26498) *
                C79307 * C79114) *
               C79229 +
           (((C26551 * C3931 + C26495 * C4047 + C26552 * C6044 +
              C26496 * C6142) *
                 C26498 +
             (C26551 * C3935 + C26495 * C4051 + C26552 * C6050 +
              C26496 * C6148) *
                 C79306) *
                C79307 * C79114 -
            ((C26552 * C758 + C26496 * C868 + C26551 * C757 + C26495 * C867) *
                 C79306 +
             (C26552 * C750 + C26496 * C860 + C26551 * C749 + C26495 * C859) *
                 C26498) *
                C79307 * C79230) *
               C79072) *
              C745 +
          ((((C26551 * C1681 + C26495 * C1791 + C26552 * C3932 +
              C26496 * C4048) *
                 C26498 +
             (C26551 * C1689 + C26495 * C1799 + C26552 * C3936 +
              C26496 * C4052) *
                 C79306) *
                C79307 * C79114 -
            ((C26552 * C756 + C26496 * C866 + C26551 * C103 + C26495 * C174) *
                 C79306 +
             (C26552 * C748 + C26496 * C858 + C26551 * C97 + C26495 * C168) *
                 C26498) *
                C79307 * C79230) *
               C79229 +
           (((C26551 * C748 + C26495 * C858 + C26552 * C751 + C26496 * C861) *
                 C26498 +
             (C26551 * C756 + C26495 * C866 + C26552 * C759 + C26496 * C869) *
                 C79306) *
                C79307 * C79230 -
            ((C26552 * C6049 + C26496 * C6147 + C26551 * C3936 +
              C26495 * C4052) *
                 C79306 +
             (C26552 * C6043 + C26496 * C6141 + C26551 * C3932 +
              C26495 * C4048) *
                 C26498) *
                C79307 * C79114) *
               C79072) *
              C746 +
          ((((C26551 * C98 + C26495 * C169 + C26552 * C752 + C26496 * C862) *
                 C26498 +
             (C26551 * C104 + C26495 * C175 + C26552 * C760 + C26496 * C870) *
                 C79306) *
                C79307 * C79230 -
            ((C26552 * C3937 + C26496 * C4053 + C26551 * C1693 +
              C26495 * C1803) *
                 C79306 +
             (C26552 * C3933 + C26496 * C4049 + C26551 * C1685 +
              C26495 * C1795) *
                 C26498) *
                C79307 * C79114) *
               C79229 +
           (((C26551 * C3933 + C26495 * C4049 + C26552 * C7477 +
              C26496 * C7580) *
                 C26498 +
             (C26551 * C3937 + C26495 * C4053 + C26552 * C7478 +
              C26496 * C7581) *
                 C79306) *
                C79307 * C79114 -
            ((C26552 * C761 + C26496 * C871 + C26551 * C760 + C26495 * C870) *
                 C79306 +
             (C26552 * C753 + C26496 * C863 + C26551 * C752 + C26495 * C862) *
                 C26498) *
                C79307 * C79230) *
               C79072) *
              C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
                C26498 +
            (C26551 * C102 + C26495 * C173 + C26552 * C757 + C26496 * C867) *
                C79306) *
               C79307 * C79230 -
           ((C26552 * C3935 + C26496 * C4051 + C26551 * C1690 +
             C26495 * C1800) *
                C79306 +
            (C26552 * C3931 + C26496 * C4047 + C26551 * C1682 +
             C26495 * C1792) *
                C26498) *
               C79307 * C79114) *
              C6795 +
          (((C26551 * C3931 + C26495 * C4047 + C26552 * C6044 +
             C26496 * C6142) *
                C26498 +
            (C26551 * C3935 + C26495 * C4051 + C26552 * C6050 +
             C26496 * C6148) *
                C79306) *
               C79307 * C79114 -
           ((C26552 * C758 + C26496 * C868 + C26551 * C757 + C26495 * C867) *
                C79306 +
            (C26552 * C750 + C26496 * C860 + C26551 * C749 + C26495 * C859) *
                C26498) *
               C79307 * C79230) *
              C6796 +
          (((C26551 * C750 + C26495 * C860 + C26552 * C5568 + C26496 * C5626) *
                C26498 +
            (C26551 * C758 + C26495 * C868 + C26552 * C5572 + C26496 * C5630) *
                C79306) *
               C79307 * C79230 -
           ((C26552 * C8379 + C26496 * C8453 + C26551 * C6050 +
             C26495 * C6148) *
                C79306 +
            (C26552 * C8377 + C26496 * C8451 + C26551 * C6044 +
             C26495 * C6142) *
                C26498) *
               C79307 * C79114) *
              C6797 +
          (((C26551 * C8377 + C26495 * C8451 + C26552 * C34055 +
             C26496 * C34131) *
                C26498 +
            (C26551 * C8379 + C26495 * C8453 + C26552 * C34056 +
             C26496 * C34132) *
                C79306) *
               C79307 * C79114 -
           ((C26552 * C5573 + C26496 * C5631 + C26551 * C5572 +
             C26495 * C5630) *
                C79306 +
            (C26552 * C5569 + C26496 * C5627 + C26551 * C5568 +
             C26495 * C5626) *
                C26498) *
               C79307 * C79230) *
              C79269) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eexz[46] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C245 * C96 + C79307 * C246) * C26498 +
              (C245 * C102 + C79307 * C252) * C79306) *
                 C26495 +
             (C27144 + C27145) * C26496) *
                C79230 -
            ((C29915 + C29916) * C26496 +
             ((C245 * C1690 + C79307 * C1914) * C79306 +
              (C245 * C1682 + C79307 * C1906) * C26498) *
                 C26495) *
                C79114) *
               C79229 +
           (((C29916 + C29915) * C26495 +
             ((C245 * C6044 + C79307 * C6228) * C26498 +
              (C245 * C6050 + C79307 * C6234) * C79306) *
                 C26496) *
                C79114 -
            ((C27146 + C27147) * C26496 + (C27145 + C27144) * C26495) *
                C79230) *
               C79072) *
              C745 +
          ((((C1939 * C26498 + C1938 * C79306) * C26495 +
             (C29909 + C29910) * C26496) *
                C79114 -
            ((C27133 + C27132) * C26496 +
             (C276 * C79306 + C275 * C26498) * C26495) *
                C79230) *
               C79229 +
           (((C27132 + C27133) * C26495 + (C27134 + C27135) * C26496) * C79230 -
            ((C7693 * C79306 + C7694 * C26498) * C26496 +
             (C29910 + C29909) * C26495) *
                C79114) *
               C79072) *
              C746 +
          ((((C278 * C26498 + C277 * C79306) * C26495 +
             (C27136 + C27137) * C26496) *
                C79230 -
            ((C29911 + C29912) * C26496 +
             (C1943 * C79306 + C1942 * C26498) * C26495) *
                C79114) *
               C79229 +
           (((C29912 + C29911) * C26495 +
             ((C245 * C7477 + C79307 * C7686) * C26498 +
              (C245 * C7478 + C79307 * C7687) * C79306) *
                 C26496) *
                C79114 -
            ((C27138 + C27139) * C26496 + (C27137 + C27136) * C26495) *
                C79230) *
               C79072) *
              C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C245 * C96 + C79307 * C246) * C26498 +
             (C245 * C102 + C79307 * C252) * C79306) *
                C26495 +
            (C27144 + C27145) * C26496) *
               C79230 -
           ((C29915 + C29916) * C26496 +
            ((C245 * C1690 + C79307 * C1914) * C79306 +
             (C245 * C1682 + C79307 * C1906) * C26498) *
                C26495) *
               C79114) *
              C6795 +
          (((C29916 + C29915) * C26495 + (C31952 + C31953) * C26496) * C79114 -
           ((C27146 + C27147) * C26496 + (C27145 + C27144) * C26495) * C79230) *
              C6796 +
          (((C27147 + C27146) * C26495 + (C31377 + C31378) * C26496) * C79230 -
           ((C34208 + C34209) * C26496 + (C31953 + C31952) * C26495) * C79114) *
              C6797 +
          (((C34209 + C34208) * C26495 +
            ((C245 * C34055 + C79307 * C34199) * C26498 +
             (C245 * C34056 + C79307 * C34200) * C79306) *
                C26496) *
               C79114 -
           ((C31379 + C31380) * C26496 + (C31378 + C31377) * C26495) * C79230) *
              C79269) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eeyx[46] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((((C26498 * C96 + C79306 * C102) * C26551 +
                       (C26498 * C167 + C79306 * C324) * C26495 +
                       C27246 * C26552 + C27247 * C26496) *
                          C79307 * C79230 -
                      (C30027 * C26496 + C30028 * C26552 +
                       (C26498 * C1792 + C79306 * C2020) * C26495 +
                       (C26498 * C1682 + C79306 * C1690) * C26551) *
                          C79307 * C79114) *
                         C79229 +
                     ((C30028 * C26551 + C30027 * C26495 +
                       (C26498 * C6044 + C79306 * C6050) * C26552 +
                       (C26498 * C6142 + C79306 * C6314) * C26496) *
                          C79307 * C79114 -
                      (C27248 * C26496 + C27249 * C26552 + C27247 * C26495 +
                       C27246 * C26551) *
                          C79307 * C79230) *
                         C79072) *
                        C745 +
                    ((((C26498 * C1681 + C79306 * C1689) * C26551 +
                       (C26498 * C1791 + C79306 * C2019) * C26495 +
                       C30029 * C26552 + C30030 * C26496) *
                          C79307 * C79114 -
                      (C27251 * C26496 + C27250 * C26552 +
                       (C26498 * C168 + C79306 * C325) * C26495 +
                       (C26498 * C97 + C79306 * C103) * C26551) *
                          C79307 * C79230) *
                         C79229 +
                     ((C27250 * C26551 + C27251 * C26495 + C27252 * C26552 +
                       C27253 * C26496) *
                          C79307 * C79230 -
                      ((C26498 * C6141 + C79306 * C6313) * C26496 +
                       (C26498 * C6043 + C79306 * C6049) * C26552 +
                       C30030 * C26495 + C30029 * C26551) *
                          C79307 * C79114) *
                         C79072) *
                        C746 +
                    ((((C26498 * C98 + C79306 * C104) * C26551 +
                       (C26498 * C169 + C79306 * C326) * C26495 +
                       C27254 * C26552 + C27255 * C26496) *
                          C79307 * C79230 -
                      (C30031 * C26496 + C30032 * C26552 +
                       (C26498 * C1795 + C79306 * C2023) * C26495 +
                       (C26498 * C1685 + C79306 * C1693) * C26551) *
                          C79307 * C79114) *
                         C79229 +
                     ((C30032 * C26551 + C30031 * C26495 +
                       (C26498 * C7477 + C79306 * C7478) * C26552 +
                       (C26498 * C7580 + C79306 * C7792) * C26496) *
                          C79307 * C79114 -
                      (C27256 * C26496 + C27257 * C26552 + C27255 * C26495 +
                       C27254 * C26551) *
                          C79307 * C79230) *
                         C79072) *
                        C79253)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C26498 * C96 + C79306 * C102) * C26551 +
                      (C26498 * C167 + C79306 * C324) * C26495 +
                      C27246 * C26552 + C27247 * C26496) *
                         C79307 * C79230 -
                     (C30027 * C26496 + C30028 * C26552 +
                      (C26498 * C1792 + C79306 * C2020) * C26495 +
                      (C26498 * C1682 + C79306 * C1690) * C26551) *
                         C79307 * C79114) *
                        C6795 +
                    ((C30028 * C26551 + C30027 * C26495 + C32045 * C26552 +
                      C32046 * C26496) *
                         C79307 * C79114 -
                     (C27248 * C26496 + C27249 * C26552 + C27247 * C26495 +
                      C27246 * C26551) *
                         C79307 * C79230) *
                        C6796 +
                    ((C27249 * C26551 + C27248 * C26495 + C31432 * C26552 +
                      C31433 * C26496) *
                         C79307 * C79230 -
                     (C34281 * C26496 + C34282 * C26552 + C32046 * C26495 +
                      C32045 * C26551) *
                         C79307 * C79114) *
                        C6797 +
                    ((C34282 * C26551 + C34281 * C26495 +
                      (C26498 * C34055 + C79306 * C34056) * C26552 +
                      (C26498 * C34131 + C79306 * C34275) * C26496) *
                         C79307 * C79114 -
                     (C31434 * C26496 + C31435 * C26552 + C31433 * C26495 +
                      C31432 * C26551) *
                         C79307 * C79230) *
                        C79269) *
                   C78981) /
                      (p * q * std::sqrt(p + q));
    d2eeyy[46] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C26679 * C96 + C26682 + C26682 + C26495 * C373 +
                       C26680 * C749 + C26683 + C26683 + C26496 * C1169) *
                          C79306 * C79307 * C79230 -
                      (C26680 * C3931 + C28068 + C28068 + C26496 * C4385 +
                       C26679 * C1682 + C28069 + C28069 + C26495 * C2102) *
                          C79306 * C79307 * C79114) *
                         C79229 +
                     ((C26679 * C3931 + C30131 + C30131 + C26495 * C4385 +
                       C26680 * C6044 + C30132 + C30132 + C26496 * C6394) *
                          C79306 * C79307 * C79114 -
                      (C26680 * C750 + C27332 + C27332 + C26496 * C1170 +
                       C26679 * C749 + C27333 + C27333 + C26495 * C1169) *
                          C79306 * C79307 * C79230) *
                         C79072) *
                        C745 +
                    (((C26679 * C1681 + C28072 + C28072 + C26495 * C2101 +
                       C26680 * C3932 + C28073 + C28073 + C26496 * C4386) *
                          C79306 * C79307 * C79114 -
                      (C26680 * C748 + C26684 + C26684 + C26496 * C1168 +
                       C26679 * C97 + C26685 + C26685 + C26495 * C374) *
                          C79306 * C79307 * C79230) *
                         C79229 +
                     ((C26679 * C748 + C27336 + C27336 + C26495 * C1168 +
                       C26680 * C751 + C27337 + C27337 + C26496 * C1171) *
                          C79306 * C79307 * C79230 -
                      (C26680 * C6043 + C30133 + C30133 + C26496 * C6393 +
                       C26679 * C3932 + C30134 + C30134 + C26495 * C4386) *
                          C79306 * C79307 * C79114) *
                         C79072) *
                        C746 +
                    (((C26679 * C98 + C26686 + C26686 + C26495 * C375 +
                       C26680 * C752 + C26687 + C26687 + C26496 * C1172) *
                          C79306 * C79307 * C79230 -
                      (C26680 * C3933 + C28076 + C28076 + C26496 * C4387 +
                       C26679 * C1685 + C28077 + C28077 + C26495 * C2105) *
                          C79306 * C79307 * C79114) *
                         C79229 +
                     ((C26679 * C3933 + C30135 + C30135 + C26495 * C4387 +
                       C26680 * C7477 + C30136 + C30136 + C26496 * C7891) *
                          C79306 * C79307 * C79114 -
                      (C26680 * C753 + C27340 + C27340 + C26496 * C1173 +
                       C26679 * C752 + C27341 + C27341 + C26495 * C1172) *
                          C79306 * C79307 * C79230) *
                         C79072) *
                        C79253)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((C26679 * C96 + C26682 + C26682 + C26495 * C373 +
                      C26680 * C749 + C26683 + C26683 + C26496 * C1169) *
                         C79306 * C79307 * C79230 -
                     (C26680 * C3931 + C28068 + C28068 + C26496 * C4385 +
                      C26679 * C1682 + C28069 + C28069 + C26495 * C2102) *
                         C79306 * C79307 * C79114) *
                        C6795 +
                    ((C26679 * C3931 + C30131 + C30131 + C26495 * C4385 +
                      C26680 * C6044 + C30132 + C30132 + C26496 * C6394) *
                         C79306 * C79307 * C79114 -
                     (C26680 * C750 + C27332 + C27332 + C26496 * C1170 +
                      C26679 * C749 + C27333 + C27333 + C26495 * C1169) *
                         C79306 * C79307 * C79230) *
                        C6796 +
                    ((C26679 * C750 + C27334 + C27334 + C26495 * C1170 +
                      C26680 * C5568 + C27335 + C27335 + C26496 * C5772) *
                         C79306 * C79307 * C79230 -
                     (C26680 * C8377 + C32126 + C32126 + C26496 * C8659 +
                      C26679 * C6044 + C32127 + C32127 + C26495 * C6394) *
                         C79306 * C79307 * C79114) *
                        C6797 +
                    ((C26679 * C8377 + C34350 + C34350 + C26495 * C8659 +
                      C26680 * C34055 + C34351 + C34351 + C26496 * C34348) *
                         C79306 * C79307 * C79114 -
                     (C26680 * C5569 + C31479 + C31479 + C26496 * C5773 +
                      C26679 * C5568 + C31480 + C31480 + C26495 * C5772) *
                         C79306 * C79307 * C79230) *
                        C79269) *
                   C78981) /
                      (p * q * std::sqrt(p + q));
    d2eeyz[46] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C245 * C96 + C79307 * C246) * C26551 +
             (C245 * C167 + C79307 * C447) * C26495 + C27140 * C26552 +
             C27422 * C26496) *
                C79306 * C79230 -
            (C30237 * C26496 + C29914 * C26552 +
             (C245 * C1792 + C79307 * C2212) * C26495 +
             (C245 * C1682 + C79307 * C1906) * C26551) *
                C79306 * C79114) *
               C79229 +
           ((C29914 * C26551 + C30237 * C26495 +
             (C245 * C6044 + C79307 * C6228) * C26552 +
             (C245 * C6142 + C79307 * C6480) * C26496) *
                C79306 * C79114 -
            (C27423 * C26496 + C27143 * C26552 + C27422 * C26495 +
             C27140 * C26551) *
                C79306 * C79230) *
               C79072) *
              C745 +
          (((C1939 * C26551 + C2232 * C26495 + C4182 * C26552 +
             C4512 * C26496) *
                C79306 * C79114 -
            (C1299 * C26496 + C1006 * C26552 + C466 * C26495 + C275 * C26551) *
                C79306 * C79230) *
               C79229 +
           ((C1006 * C26551 + C1299 * C26495 + C1007 * C26552 +
             C1300 * C26496) *
                C79306 * C79230 -
            (C8001 * C26496 + C7694 * C26552 + C4512 * C26495 +
             C4182 * C26551) *
                C79306 * C79114) *
               C79072) *
              C746 +
          (((C278 * C26551 + C467 * C26495 + C1009 * C26552 + C1301 * C26496) *
                C79306 * C79230 -
            (C4513 * C26496 + C4185 * C26552 + C2234 * C26495 +
             C1942 * C26551) *
                C79306 * C79114) *
               C79229 +
           ((C4185 * C26551 + C4513 * C26495 +
             (C245 * C7477 + C79307 * C7686) * C26552 +
             (C245 * C7580 + C79307 * C7996) * C26496) *
                C79306 * C79114 -
            (C1302 * C26496 + C1012 * C26552 + C1301 * C26495 +
             C1009 * C26551) *
                C79306 * C79230) *
               C79072) *
              C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C245 * C96 + C79307 * C246) * C26551 +
            (C245 * C167 + C79307 * C447) * C26495 + C27140 * C26552 +
            C27422 * C26496) *
               C79306 * C79230 -
           (C30237 * C26496 + C29914 * C26552 +
            (C245 * C1792 + C79307 * C2212) * C26495 +
            (C245 * C1682 + C79307 * C1906) * C26551) *
               C79306 * C79114) *
              C6795 +
          ((C29914 * C26551 + C30237 * C26495 + C31946 * C26552 +
            C32212 * C26496) *
               C79306 * C79114 -
           (C27423 * C26496 + C27143 * C26552 + C27422 * C26495 +
            C27140 * C26551) *
               C79306 * C79230) *
              C6796 +
          ((C27143 * C26551 + C27423 * C26495 + C31373 * C26552 +
            C31530 * C26496) *
               C79306 * C79230 -
           (C34421 * C26496 + C34207 * C26552 + C32212 * C26495 +
            C31946 * C26551) *
               C79306 * C79114) *
              C6797 +
          ((C34207 * C26551 + C34421 * C26495 +
            (C245 * C34055 + C79307 * C34199) * C26552 +
            (C245 * C34131 + C79307 * C34417) * C26496) *
               C79306 * C79114 -
           (C31531 * C26496 + C31376 * C26552 + C31530 * C26495 +
            C31373 * C26551) *
               C79306 * C79230) *
              C79269) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eezx[46] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C26498 * C96 + C79306 * C102) * C245 +
              (C26498 * C246 + C79306 * C515) * C79307) *
                 C26495 +
             (C27498 + C27522) * C26496) *
                C79230 -
            ((C30348 + C30338) * C26496 +
             ((C26498 * C1906 + C79306 * C2314) * C79307 +
              (C26498 * C1682 + C79306 * C1690) * C245) *
                 C26495) *
                C79114) *
               C79229 +
           (((C30338 + C30348) * C26495 +
             ((C26498 * C6044 + C79306 * C6050) * C245 +
              (C26498 * C6228 + C79306 * C6560) * C79307) *
                 C26496) *
                C79114 -
            ((C27523 + C27503) * C26496 + (C27522 + C27498) * C26495) *
                C79230) *
               C79072) *
              C745 +
          (((((C26498 * C1681 + C79306 * C1689) * C245 +
              (C26498 * C1905 + C79306 * C2313) * C79307) *
                 C26495 +
             (C30339 + C30349) * C26496) *
                C79114 -
            ((C27524 + C27504) * C26496 +
             ((C26498 * C247 + C79306 * C516) * C79307 +
              (C26498 * C97 + C79306 * C103) * C245) *
                 C26495) *
                C79230) *
               C79229 +
           (((C27504 + C27524) * C26495 + (C27507 + C27525) * C26496) * C79230 -
            (((C26498 * C6227 + C79306 * C6559) * C79307 +
              (C26498 * C6043 + C79306 * C6049) * C245) *
                 C26496 +
             (C30349 + C30339) * C26495) *
                C79114) *
               C79072) *
              C746 +
          (((((C26498 * C98 + C79306 * C104) * C245 +
              (C26498 * C248 + C79306 * C517) * C79307) *
                 C26495 +
             (C27510 + C27526) * C26496) *
                C79230 -
            ((C30350 + C30344) * C26496 +
             ((C26498 * C1909 + C79306 * C2317) * C79307 +
              (C26498 * C1685 + C79306 * C1693) * C245) *
                 C26495) *
                C79114) *
               C79229 +
           (((C30344 + C30350) * C26495 +
             ((C26498 * C7477 + C79306 * C7478) * C245 +
              (C26498 * C7686 + C79306 * C8100) * C79307) *
                 C26496) *
                C79114 -
            ((C27527 + C27515) * C26496 + (C27526 + C27510) * C26495) *
                C79230) *
               C79072) *
              C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C26498 * C96 + C79306 * C102) * C245 +
             (C26498 * C246 + C79306 * C515) * C79307) *
                C26495 +
            (C27498 + C27522) * C26496) *
               C79230 -
           ((C30348 + C30338) * C26496 +
            ((C26498 * C1906 + C79306 * C2314) * C79307 +
             (C26498 * C1682 + C79306 * C1690) * C245) *
                C26495) *
               C79114) *
              C6795 +
          (((C30338 + C30348) * C26495 + (C32292 + C32302) * C26496) * C79114 -
           ((C27523 + C27503) * C26496 + (C27522 + C27498) * C26495) * C79230) *
              C6796 +
          (((C27503 + C27523) * C26495 + (C31575 + C31583) * C26496) * C79230 -
           ((C34493 + C34491) * C26496 + (C32302 + C32292) * C26495) * C79114) *
              C6797 +
          (((C34491 + C34493) * C26495 +
            ((C26498 * C34055 + C79306 * C34056) * C245 +
             (C26498 * C34199 + C79306 * C34487) * C79307) *
                C26496) *
               C79114 -
           ((C31584 + C31580) * C26496 + (C31583 + C31575) * C26495) * C79230) *
              C79269) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eezy[46] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
                 C245 +
             (C26551 * C246 + C26495 * C563 + C26552 * C973 + C26496 * C1463) *
                 C79307) *
                C79306 * C79230 -
            ((C26552 * C4165 + C26496 * C4715 + C26551 * C1906 +
              C26495 * C2396) *
                 C79307 +
             (C26552 * C3931 + C26496 * C4047 + C26551 * C1682 +
              C26495 * C1792) *
                 C245) *
                C79306 * C79114) *
               C79229 +
           (((C26551 * C3931 + C26495 * C4047 + C26552 * C6044 +
              C26496 * C6142) *
                 C245 +
             (C26551 * C4165 + C26495 * C4715 + C26552 * C6228 +
              C26496 * C6640) *
                 C79307) *
                C79306 * C79114 -
            ((C26552 * C974 + C26496 * C1464 + C26551 * C973 + C26495 * C1463) *
                 C79307 +
             (C26552 * C750 + C26496 * C860 + C26551 * C749 + C26495 * C859) *
                 C245) *
                C79306 * C79230) *
               C79072) *
              C745 +
          ((((C26551 * C1681 + C26495 * C1791 + C26552 * C3932 +
              C26496 * C4048) *
                 C245 +
             (C26551 * C1905 + C26495 * C2395 + C26552 * C4166 +
              C26496 * C4716) *
                 C79307) *
                C79306 * C79114 -
            ((C26552 * C972 + C26496 * C1462 + C26551 * C247 + C26495 * C564) *
                 C79307 +
             (C26552 * C748 + C26496 * C858 + C26551 * C97 + C26495 * C168) *
                 C245) *
                C79306 * C79230) *
               C79229 +
           (((C26551 * C748 + C26495 * C858 + C26552 * C751 + C26496 * C861) *
                 C245 +
             (C26551 * C972 + C26495 * C1462 + C26552 * C975 + C26496 * C1465) *
                 C79307) *
                C79306 * C79230 -
            ((C26552 * C6227 + C26496 * C6639 + C26551 * C4166 +
              C26495 * C4716) *
                 C79307 +
             (C26552 * C6043 + C26496 * C6141 + C26551 * C3932 +
              C26495 * C4048) *
                 C245) *
                C79306 * C79114) *
               C79072) *
              C746 +
          ((((C26551 * C98 + C26495 * C169 + C26552 * C752 + C26496 * C862) *
                 C245 +
             (C26551 * C248 + C26495 * C565 + C26552 * C976 + C26496 * C1466) *
                 C79307) *
                C79306 * C79230 -
            ((C26552 * C4167 + C26496 * C4717 + C26551 * C1909 +
              C26495 * C2399) *
                 C79307 +
             (C26552 * C3933 + C26496 * C4049 + C26551 * C1685 +
              C26495 * C1795) *
                 C245) *
                C79306 * C79114) *
               C79229 +
           (((C26551 * C3933 + C26495 * C4049 + C26552 * C7477 +
              C26496 * C7580) *
                 C245 +
             (C26551 * C4167 + C26495 * C4717 + C26552 * C7686 +
              C26496 * C8199) *
                 C79307) *
                C79306 * C79114 -
            ((C26552 * C977 + C26496 * C1467 + C26551 * C976 + C26495 * C1466) *
                 C79307 +
             (C26552 * C753 + C26496 * C863 + C26551 * C752 + C26495 * C862) *
                 C245) *
                C79306 * C79230) *
               C79072) *
              C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
                C245 +
            (C26551 * C246 + C26495 * C563 + C26552 * C973 + C26496 * C1463) *
                C79307) *
               C79306 * C79230 -
           ((C26552 * C4165 + C26496 * C4715 + C26551 * C1906 +
             C26495 * C2396) *
                C79307 +
            (C26552 * C3931 + C26496 * C4047 + C26551 * C1682 +
             C26495 * C1792) *
                C245) *
               C79306 * C79114) *
              C6795 +
          (((C26551 * C3931 + C26495 * C4047 + C26552 * C6044 +
             C26496 * C6142) *
                C245 +
            (C26551 * C4165 + C26495 * C4715 + C26552 * C6228 +
             C26496 * C6640) *
                C79307) *
               C79306 * C79114 -
           ((C26552 * C974 + C26496 * C1464 + C26551 * C973 + C26495 * C1463) *
                C79307 +
            (C26552 * C750 + C26496 * C860 + C26551 * C749 + C26495 * C859) *
                C245) *
               C79306 * C79230) *
              C6796 +
          (((C26551 * C750 + C26495 * C860 + C26552 * C5568 + C26496 * C5626) *
                C245 +
            (C26551 * C974 + C26495 * C1464 + C26552 * C5676 + C26496 * C5914) *
                C79307) *
               C79306 * C79230 -
           ((C26552 * C8521 + C26496 * C8865 + C26551 * C6228 +
             C26495 * C6640) *
                C79307 +
            (C26552 * C8377 + C26496 * C8451 + C26551 * C6044 +
             C26495 * C6142) *
                C245) *
               C79306 * C79114) *
              C6797 +
          (((C26551 * C8377 + C26495 * C8451 + C26552 * C34055 +
             C26496 * C34131) *
                C245 +
            (C26551 * C8521 + C26495 * C8865 + C26552 * C34199 +
             C26496 * C34559) *
                C79307) *
               C79306 * C79114 -
           ((C26552 * C5677 + C26496 * C5915 + C26551 * C5676 +
             C26495 * C5914) *
                C79307 +
            (C26552 * C5569 + C26496 * C5627 + C26551 * C5568 +
             C26495 * C5626) *
                C245) *
               C79306 * C79230) *
              C79269) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eezz[46] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C631 * C96 + C639 + C639 + C79307 * C632) * C26495 +
             C27684 * C26496) *
                C79306 * C79230 -
            (C30551 * C26496 +
             (C631 * C1682 + C2509 + C2509 + C79307 * C2498) * C26495) *
                C79306 * C79114) *
               C79229 +
           ((C30551 * C26495 +
             (C631 * C6044 + C6727 + C6727 + C79307 * C6720) * C26496) *
                C79306 * C79114 -
            (C27685 * C26496 + C27684 * C26495) * C79306 * C79230) *
               C79072) *
              C745 +
          (((C2530 * C26495 + C4844 * C26496) * C79306 * C79114 -
            (C1597 * C26496 + C661 * C26495) * C79306 * C79230) *
               C79229 +
           ((C1597 * C26495 + C1598 * C26496) * C79306 * C79230 -
            (C8310 * C26496 + C4844 * C26495) * C79306 * C79114) *
               C79072) *
              C746 +
          (((C662 * C26495 + C1599 * C26496) * C79306 * C79230 -
            (C4845 * C26496 + C2532 * C26495) * C79306 * C79114) *
               C79229 +
           ((C4845 * C26495 +
             (C631 * C7477 + C8307 + C8307 + C79307 * C8303) * C26496) *
                C79306 * C79114 -
            (C1600 * C26496 + C1599 * C26495) * C79306 * C79230) *
               C79072) *
              C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C631 * C96 + C639 + C639 + C79307 * C632) * C26495 +
            C27684 * C26496) *
               C79306 * C79230 -
           (C30551 * C26496 +
            (C631 * C1682 + C2509 + C2509 + C79307 * C2498) * C26495) *
               C79306 * C79114) *
              C6795 +
          ((C30551 * C26495 + C32468 * C26496) * C79306 * C79114 -
           (C27685 * C26496 + C27684 * C26495) * C79306 * C79230) *
              C6796 +
          ((C27685 * C26495 + C31680 * C26496) * C79306 * C79230 -
           (C34633 * C26496 + C32468 * C26495) * C79306 * C79114) *
              C6797 +
          ((C34633 * C26495 +
            (C631 * C34055 + C34630 + C34630 + C79307 * C34626) * C26496) *
               C79306 * C79114 -
           (C31681 * C26496 + C31680 * C26495) * C79306 * C79230) *
              C79269) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eexx[47] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C79307 * C26495 +
            C26970 * C26496) *
               C79027 * C79300 -
           (C26971 * C26496 + C26970 * C26495) * C79027 * C79285 +
           (C26971 * C26495 +
            (C26497 * C5568 + C26939 + C26939 + C79306 * C5576) * C79307 *
                C26496) *
               C79027 * C79259) *
              C745 +
          ((C26972 * C26495 + C26973 * C26496) * C79027 * C79285 -
           (C26972 * C26496 + (C26497 * C97 + C26503 + C26503 + C79306 * C109) *
                                  C79307 * C26495) *
               C79027 * C79300 -
           ((C26497 * C5567 + C26945 + C26945 + C79306 * C5575) * C79307 *
                C26496 +
            C26973 * C26495) *
               C79027 * C79259) *
              C746 +
          (((C26497 * C98 + C26504 + C26504 + C79306 * C110) * C79307 * C26495 +
            C26974 * C26496) *
               C79027 * C79300 -
           (C26975 * C26496 + C26974 * C26495) * C79027 * C79285 +
           (C26975 * C26495 +
            (C26497 * C6801 + C26951 + C26951 + C79306 * C6803) * C79307 *
                C26496) *
               C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C79307 * C26495 +
           (C26497 * C749 + C26501 + C26501 + C79306 * C765) * C79307 *
               C26496) *
              C79027 * C79009 * C87 -
          ((C26497 * C748 + C26502 + C26502 + C79306 * C764) * C79307 * C26496 +
           (C26497 * C97 + C26503 + C26503 + C79306 * C109) * C79307 * C26495) *
              C79027 * C79009 * C88 +
          ((C26497 * C98 + C26504 + C26504 + C79306 * C110) * C79307 * C26495 +
           (C26497 * C752 + C26505 + C26505 + C79306 * C768) * C79307 *
               C26496) *
              C79027 * C79009 * C89 -
          ((C26497 * C754 + C26506 + C26506 + C79306 * C770) * C79307 * C26496 +
           (C26497 * C99 + C26507 + C26507 + C79306 * C111) * C79307 * C26495) *
              C79027 * C79009 * C90 +
          ((C26497 * C100 + C26508 + C26508 + C79306 * C112) * C79307 * C26495 +
           (C26497 * C2609 + C26509 + C26509 + C79306 * C2611) * C79307 *
               C26496) *
              C79027 * C79009 * C91)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C79307 * C26495 +
            C26970 * C26496) *
               C79301 -
           ((C26497 * C3931 + C27760 + C27760 + C79306 * C3939) * C79307 *
                C26496 +
            (C26497 * C1682 + C27761 + C27761 + C79306 * C1698) * C79307 *
                C26495) *
               C79287 +
           ((C26497 * C1683 + C27762 + C27762 + C79306 * C1699) * C79307 *
                C26495 +
            (C26497 * C6042 + C27763 + C27763 + C79306 * C6054) * C79307 *
                C26496) *
               C79262) *
              C79009 * C745 +
          (((C26497 * C1681 + C27764 + C27764 + C79306 * C1697) * C79307 *
                C26495 +
            (C26497 * C3932 + C27765 + C27765 + C79306 * C3940) * C79307 *
                C26496) *
               C79287 -
           (C26972 * C26496 + (C26497 * C97 + C26503 + C26503 + C79306 * C109) *
                                  C79307 * C26495) *
               C79301 -
           ((C26497 * C6041 + C27766 + C27766 + C79306 * C6053) * C79307 *
                C26496 +
            (C26497 * C1684 + C27767 + C27767 + C79306 * C1700) * C79307 *
                C26495) *
               C79262) *
              C79009 * C746 +
          (((C26497 * C98 + C26504 + C26504 + C79306 * C110) * C79307 * C26495 +
            C26974 * C26496) *
               C79301 -
           ((C26497 * C3933 + C27768 + C27768 + C79306 * C3941) * C79307 *
                C26496 +
            (C26497 * C1685 + C27769 + C27769 + C79306 * C1701) * C79307 *
                C26495) *
               C79287 +
           ((C26497 * C1686 + C27770 + C27770 + C79306 * C1702) * C79307 *
                C26495 +
            (C26497 * C10817 + C27771 + C27771 + C79306 * C10819) * C79307 *
                C26496) *
               C79262) *
              C79009 * C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C79307 * C26495 +
            C26970 * C26496) *
               C79027 * C4921 -
           (C26971 * C26496 + C26970 * C26495) * C79027 * C4922 +
           (C26971 * C26495 +
            (C26497 * C5568 + C26939 + C26939 + C79306 * C5576) * C79307 *
                C26496) *
               C79027 * C79259) *
              C79297 +
          ((C26972 * C26495 + C26973 * C26496) * C79027 * C4922 -
           (C26972 * C26496 + (C26497 * C97 + C26503 + C26503 + C79306 * C109) *
                                  C79307 * C26495) *
               C79027 * C4921 -
           ((C26497 * C5567 + C26945 + C26945 + C79306 * C5575) * C79307 *
                C26496 +
            C26973 * C26495) *
               C79027 * C79259) *
              C79281 +
          (((C26497 * C98 + C26504 + C26504 + C79306 * C110) * C79307 * C26495 +
            C26974 * C26496) *
               C79027 * C4921 -
           (C26975 * C26496 + C26974 * C26495) * C79027 * C4922 +
           (C26975 * C26495 +
            (C26497 * C6801 + C26951 + C26951 + C79306 * C6803) * C79307 *
                C26496) *
               C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C79307 * C26495 +
           C26970 * C26496) *
              C79027 * C5561 -
          (C26971 * C26496 + C26970 * C26495) * C79027 * C5562 +
          (C26971 * C26495 + C31275 * C26496) * C79027 * C5563 -
          (C31276 * C26496 + C31275 * C26495) * C79027 * C5564 +
          (C31276 * C26495 +
           (C26497 * C31259 + C31268 + C31268 + C79306 * C31261) * C79307 *
               C26496) *
              C79027 * C5565) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C79307 * C26495 +
            C26970 * C26496) *
               C79301 -
           (C29706 * C26496 +
            (C26497 * C1682 + C27761 + C27761 + C79306 * C1698) * C79307 *
                C26495) *
               C79287 +
           ((C26497 * C1683 + C27762 + C27762 + C79306 * C1699) * C79307 *
                C26495 +
            C31777 * C26496) *
               C79262) *
              C4921 +
          ((C29706 * C26495 + C31778 * C26496) * C79287 -
           (C26971 * C26496 + C26970 * C26495) * C79301 -
           (C31779 * C26496 + C31777 * C26495) * C79262) *
              C4922 +
          ((C26971 * C26495 + C31275 * C26496) * C79301 -
           ((C26497 * C8377 + C31766 + C31766 + C79306 * C8381) * C79307 *
                C26496 +
            C31778 * C26495) *
               C79287 +
           (C31779 * C26495 +
            (C26497 * C31755 + C31767 + C31767 + C79306 * C31757) * C79307 *
                C26496) *
               C79262) *
              C79259) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eexy[47] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
                C26498 +
            (C26551 * C102 + C26495 * C173 + C26552 * C757 + C26496 * C867) *
                C79306) *
               C79307 * C79027 * C79300 -
           ((C26552 * C758 + C26496 * C868 + C26551 * C757 + C26495 * C867) *
                C79306 +
            (C26552 * C750 + C26496 * C860 + C26551 * C749 + C26495 * C859) *
                C26498) *
               C79307 * C79027 * C79285 +
           ((C26551 * C750 + C26495 * C860 + C26552 * C5568 + C26496 * C5626) *
                C26498 +
            (C26551 * C758 + C26495 * C868 + C26552 * C5572 + C26496 * C5630) *
                C79306) *
               C79307 * C79027 * C79259) *
              C745 +
          (((C26551 * C748 + C26495 * C858 + C26552 * C751 + C26496 * C861) *
                C26498 +
            (C26551 * C756 + C26495 * C866 + C26552 * C759 + C26496 * C869) *
                C79306) *
               C79307 * C79027 * C79285 -
           ((C26552 * C756 + C26496 * C866 + C26551 * C103 + C26495 * C174) *
                C79306 +
            (C26552 * C748 + C26496 * C858 + C26551 * C97 + C26495 * C168) *
                C26498) *
               C79307 * C79027 * C79300 -
           ((C26552 * C5571 + C26496 * C5629 + C26551 * C759 + C26495 * C869) *
                C79306 +
            (C26552 * C5567 + C26496 * C5625 + C26551 * C751 + C26495 * C861) *
                C26498) *
               C79307 * C79027 * C79259) *
              C746 +
          (((C26551 * C98 + C26495 * C169 + C26552 * C752 + C26496 * C862) *
                C26498 +
            (C26551 * C104 + C26495 * C175 + C26552 * C760 + C26496 * C870) *
                C79306) *
               C79307 * C79027 * C79300 -
           ((C26552 * C761 + C26496 * C871 + C26551 * C760 + C26495 * C870) *
                C79306 +
            (C26552 * C753 + C26496 * C863 + C26551 * C752 + C26495 * C862) *
                C26498) *
               C79307 * C79027 * C79285 +
           ((C26551 * C753 + C26495 * C863 + C26552 * C6801 + C26496 * C6872) *
                C26498 +
            (C26551 * C761 + C26495 * C871 + C26552 * C6802 + C26496 * C6873) *
                C79306) *
               C79307 * C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
               C26498 +
           (C26551 * C102 + C26495 * C173 + C26552 * C757 + C26496 * C867) *
               C79306) *
              C79307 * C79027 * C79009 * C87 -
          ((C26552 * C756 + C26496 * C866 + C26551 * C103 + C26495 * C174) *
               C79306 +
           (C26552 * C748 + C26496 * C858 + C26551 * C97 + C26495 * C168) *
               C26498) *
              C79307 * C79027 * C79009 * C88 +
          ((C26551 * C98 + C26495 * C169 + C26552 * C752 + C26496 * C862) *
               C26498 +
           (C26551 * C104 + C26495 * C175 + C26552 * C760 + C26496 * C870) *
               C79306) *
              C79307 * C79027 * C79009 * C89 -
          ((C26552 * C762 + C26496 * C872 + C26551 * C105 + C26495 * C176) *
               C79306 +
           (C26552 * C754 + C26496 * C864 + C26551 * C99 + C26495 * C170) *
               C26498) *
              C79307 * C79027 * C79009 * C90 +
          ((C26551 * C100 + C26495 * C171 + C26552 * C2609 + C26496 * C2680) *
               C26498 +
           (C26551 * C106 + C26495 * C177 + C26552 * C2610 + C26496 * C2681) *
               C79306) *
              C79307 * C79027 * C79009 * C91)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
                C26498 +
            (C26551 * C102 + C26495 * C173 + C26552 * C757 + C26496 * C867) *
                C79306) *
               C79307 * C79301 -
           ((C26552 * C3935 + C26496 * C4051 + C26551 * C1690 +
             C26495 * C1800) *
                C79306 +
            (C26552 * C3931 + C26496 * C4047 + C26551 * C1682 +
             C26495 * C1792) *
                C26498) *
               C79307 * C79287 +
           ((C26551 * C1683 + C26495 * C1793 + C26552 * C6042 +
             C26496 * C6140) *
                C26498 +
            (C26551 * C1691 + C26495 * C1801 + C26552 * C6048 +
             C26496 * C6146) *
                C79306) *
               C79307 * C79262) *
              C79009 * C745 +
          (((C26551 * C1681 + C26495 * C1791 + C26552 * C3932 +
             C26496 * C4048) *
                C26498 +
            (C26551 * C1689 + C26495 * C1799 + C26552 * C3936 +
             C26496 * C4052) *
                C79306) *
               C79307 * C79287 -
           ((C26552 * C756 + C26496 * C866 + C26551 * C103 + C26495 * C174) *
                C79306 +
            (C26552 * C748 + C26496 * C858 + C26551 * C97 + C26495 * C168) *
                C26498) *
               C79307 * C79301 -
           ((C26552 * C6047 + C26496 * C6145 + C26551 * C1692 +
             C26495 * C1802) *
                C79306 +
            (C26552 * C6041 + C26496 * C6139 + C26551 * C1684 +
             C26495 * C1794) *
                C26498) *
               C79307 * C79262) *
              C79009 * C746 +
          (((C26551 * C98 + C26495 * C169 + C26552 * C752 + C26496 * C862) *
                C26498 +
            (C26551 * C104 + C26495 * C175 + C26552 * C760 + C26496 * C870) *
                C79306) *
               C79307 * C79301 -
           ((C26552 * C3937 + C26496 * C4053 + C26551 * C1693 +
             C26495 * C1803) *
                C79306 +
            (C26552 * C3933 + C26496 * C4049 + C26551 * C1685 +
             C26495 * C1795) *
                C26498) *
               C79307 * C79287 +
           ((C26551 * C1686 + C26495 * C1796 + C26552 * C10817 +
             C26496 * C10920) *
                C26498 +
            (C26551 * C1694 + C26495 * C1804 + C26552 * C10818 +
             C26496 * C10921) *
                C79306) *
               C79307 * C79262) *
              C79009 * C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
                C26498 +
            (C26551 * C102 + C26495 * C173 + C26552 * C757 + C26496 * C867) *
                C79306) *
               C79307 * C79027 * C4921 -
           ((C26552 * C758 + C26496 * C868 + C26551 * C757 + C26495 * C867) *
                C79306 +
            (C26552 * C750 + C26496 * C860 + C26551 * C749 + C26495 * C859) *
                C26498) *
               C79307 * C79027 * C4922 +
           ((C26551 * C750 + C26495 * C860 + C26552 * C5568 + C26496 * C5626) *
                C26498 +
            (C26551 * C758 + C26495 * C868 + C26552 * C5572 + C26496 * C5630) *
                C79306) *
               C79307 * C79027 * C79259) *
              C79297 +
          (((C26551 * C748 + C26495 * C858 + C26552 * C751 + C26496 * C861) *
                C26498 +
            (C26551 * C756 + C26495 * C866 + C26552 * C759 + C26496 * C869) *
                C79306) *
               C79307 * C79027 * C4922 -
           ((C26552 * C756 + C26496 * C866 + C26551 * C103 + C26495 * C174) *
                C79306 +
            (C26552 * C748 + C26496 * C858 + C26551 * C97 + C26495 * C168) *
                C26498) *
               C79307 * C79027 * C4921 -
           ((C26552 * C5571 + C26496 * C5629 + C26551 * C759 + C26495 * C869) *
                C79306 +
            (C26552 * C5567 + C26496 * C5625 + C26551 * C751 + C26495 * C861) *
                C26498) *
               C79307 * C79027 * C79259) *
              C79281 +
          (((C26551 * C98 + C26495 * C169 + C26552 * C752 + C26496 * C862) *
                C26498 +
            (C26551 * C104 + C26495 * C175 + C26552 * C760 + C26496 * C870) *
                C79306) *
               C79307 * C79027 * C4921 -
           ((C26552 * C761 + C26496 * C871 + C26551 * C760 + C26495 * C870) *
                C79306 +
            (C26552 * C753 + C26496 * C863 + C26551 * C752 + C26495 * C862) *
                C26498) *
               C79307 * C79027 * C4922 +
           ((C26551 * C753 + C26495 * C863 + C26552 * C6801 + C26496 * C6872) *
                C26498 +
            (C26551 * C761 + C26495 * C871 + C26552 * C6802 + C26496 * C6873) *
                C79306) *
               C79307 * C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
               C26498 +
           (C26551 * C102 + C26495 * C173 + C26552 * C757 + C26496 * C867) *
               C79306) *
              C79307 * C79027 * C5561 -
          ((C26552 * C758 + C26496 * C868 + C26551 * C757 + C26495 * C867) *
               C79306 +
           (C26552 * C750 + C26496 * C860 + C26551 * C749 + C26495 * C859) *
               C26498) *
              C79307 * C79027 * C5562 +
          ((C26551 * C750 + C26495 * C860 + C26552 * C5568 + C26496 * C5626) *
               C26498 +
           (C26551 * C758 + C26495 * C868 + C26552 * C5572 + C26496 * C5630) *
               C79306) *
              C79307 * C79027 * C5563 -
          ((C26552 * C5573 + C26496 * C5631 + C26551 * C5572 + C26495 * C5630) *
               C79306 +
           (C26552 * C5569 + C26496 * C5627 + C26551 * C5568 + C26495 * C5626) *
               C26498) *
              C79307 * C79027 * C5564 +
          ((C26551 * C5569 + C26495 * C5627 + C26552 * C31259 +
            C26496 * C31318) *
               C26498 +
           (C26551 * C5573 + C26495 * C5631 + C26552 * C31260 +
            C26496 * C31319) *
               C79306) *
              C79307 * C79027 * C5565) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
                C26498 +
            (C26551 * C102 + C26495 * C173 + C26552 * C757 + C26496 * C867) *
                C79306) *
               C79307 * C79301 -
           ((C26552 * C3935 + C26496 * C4051 + C26551 * C1690 +
             C26495 * C1800) *
                C79306 +
            (C26552 * C3931 + C26496 * C4047 + C26551 * C1682 +
             C26495 * C1792) *
                C26498) *
               C79307 * C79287 +
           ((C26551 * C1683 + C26495 * C1793 + C26552 * C6042 +
             C26496 * C6140) *
                C26498 +
            (C26551 * C1691 + C26495 * C1801 + C26552 * C6048 +
             C26496 * C6146) *
                C79306) *
               C79307 * C79262) *
              C4921 +
          (((C26551 * C3931 + C26495 * C4047 + C26552 * C6044 +
             C26496 * C6142) *
                C26498 +
            (C26551 * C3935 + C26495 * C4051 + C26552 * C6050 +
             C26496 * C6148) *
                C79306) *
               C79307 * C79287 -
           ((C26552 * C758 + C26496 * C868 + C26551 * C757 + C26495 * C867) *
                C79306 +
            (C26552 * C750 + C26496 * C860 + C26551 * C749 + C26495 * C859) *
                C26498) *
               C79307 * C79301 -
           ((C26552 * C6051 + C26496 * C6149 + C26551 * C6048 +
             C26495 * C6146) *
                C79306 +
            (C26552 * C6045 + C26496 * C6143 + C26551 * C6042 +
             C26495 * C6140) *
                C26498) *
               C79307 * C79262) *
              C4922 +
          (((C26551 * C750 + C26495 * C860 + C26552 * C5568 + C26496 * C5626) *
                C26498 +
            (C26551 * C758 + C26495 * C868 + C26552 * C5572 + C26496 * C5630) *
                C79306) *
               C79307 * C79301 -
           ((C26552 * C8379 + C26496 * C8453 + C26551 * C6050 +
             C26495 * C6148) *
                C79306 +
            (C26552 * C8377 + C26496 * C8451 + C26551 * C6044 +
             C26495 * C6142) *
                C26498) *
               C79307 * C79287 +
           ((C26551 * C6045 + C26495 * C6143 + C26552 * C31755 +
             C26496 * C31853) *
                C26498 +
            (C26551 * C6051 + C26495 * C6149 + C26552 * C31756 +
             C26496 * C31854) *
                C79306) *
               C79307 * C79262) *
              C79259) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eexz[47] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C245 * C96 + C79307 * C246) * C26498 +
             (C245 * C102 + C79307 * C252) * C79306) *
                C26495 +
            (C27144 + C27145) * C26496) *
               C79027 * C79300 -
           ((C27146 + C27147) * C26496 + (C27145 + C27144) * C26495) * C79027 *
               C79285 +
           ((C27147 + C27146) * C26495 +
            ((C245 * C5568 + C79307 * C5676) * C26498 +
             (C245 * C5572 + C79307 * C5680) * C79306) *
                C26496) *
               C79027 * C79259) *
              C745 +
          (((C27132 + C27133) * C26495 + (C27134 + C27135) * C26496) * C79027 *
               C79285 -
           ((C27133 + C27132) * C26496 +
            (C276 * C79306 + C275 * C26498) * C26495) *
               C79027 * C79300 -
           ((C6953 * C79306 + C6954 * C26498) * C26496 +
            (C27135 + C27134) * C26495) *
               C79027 * C79259) *
              C746 +
          (((C278 * C26498 + C277 * C79306) * C26495 +
            (C27136 + C27137) * C26496) *
               C79027 * C79300 -
           ((C27138 + C27139) * C26496 + (C27137 + C27136) * C26495) * C79027 *
               C79285 +
           ((C27139 + C27138) * C26495 +
            ((C245 * C6801 + C79307 * C6946) * C26498 +
             (C245 * C6802 + C79307 * C6947) * C79306) *
                C26496) *
               C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C245 * C96 + C79307 * C246) * C26498 +
            (C245 * C102 + C79307 * C252) * C79306) *
               C26495 +
           ((C245 * C749 + C79307 * C973) * C26498 +
            (C245 * C757 + C79307 * C981) * C79306) *
               C26496) *
              C79027 * C79009 * C87 -
          ((C1005 * C79306 + C1006 * C26498) * C26496 +
           (C276 * C79306 + C275 * C26498) * C26495) *
              C79027 * C79009 * C88 +
          ((C278 * C26498 + C277 * C79306) * C26495 +
           (C1009 * C26498 + C1010 * C79306) * C26496) *
              C79027 * C79009 * C89 -
          ((C2761 * C79306 + C2762 * C26498) * C26496 +
           (C280 * C79306 + C279 * C26498) * C26495) *
              C79027 * C79009 * C90 +
          ((C282 * C26498 + C281 * C79306) * C26495 +
           ((C245 * C2609 + C79307 * C2754) * C26498 +
            (C245 * C2610 + C79307 * C2755) * C79306) *
               C26496) *
              C79027 * C79009 * C91)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C245 * C96 + C79307 * C246) * C26498 +
             (C245 * C102 + C79307 * C252) * C79306) *
                C26495 +
            (C27144 + C27145) * C26496) *
               C79301 -
           (((C245 * C3935 + C79307 * C4169) * C79306 +
             (C245 * C3931 + C79307 * C4165) * C26498) *
                C26496 +
            ((C245 * C1690 + C79307 * C1914) * C79306 +
             (C245 * C1682 + C79307 * C1906) * C26498) *
                C26495) *
               C79287 +
           (((C245 * C1683 + C79307 * C1907) * C26498 +
             (C245 * C1691 + C79307 * C1915) * C79306) *
                C26495 +
            ((C245 * C6042 + C79307 * C6226) * C26498 +
             (C245 * C6048 + C79307 * C6232) * C79306) *
                C26496) *
               C79262) *
              C79009 * C745 +
          (((C1939 * C26498 + C1938 * C79306) * C26495 +
            (C4182 * C26498 + C4183 * C79306) * C26496) *
               C79287 -
           ((C27133 + C27132) * C26496 +
            (C276 * C79306 + C275 * C26498) * C26495) *
               C79301 -
           ((C11033 * C79306 + C11034 * C26498) * C26496 +
            (C1941 * C79306 + C1940 * C26498) * C26495) *
               C79262) *
              C79009 * C746 +
          (((C278 * C26498 + C277 * C79306) * C26495 +
            (C27136 + C27137) * C26496) *
               C79301 -
           ((C4184 * C79306 + C4185 * C26498) * C26496 +
            (C1943 * C79306 + C1942 * C26498) * C26495) *
               C79287 +
           ((C1945 * C26498 + C1944 * C79306) * C26495 +
            ((C245 * C10817 + C79307 * C11026) * C26498 +
             (C245 * C10818 + C79307 * C11027) * C79306) *
                C26496) *
               C79262) *
              C79009 * C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C245 * C96 + C79307 * C246) * C26498 +
             (C245 * C102 + C79307 * C252) * C79306) *
                C26495 +
            (C27144 + C27145) * C26496) *
               C79027 * C4921 -
           ((C27146 + C27147) * C26496 + (C27145 + C27144) * C26495) * C79027 *
               C4922 +
           ((C27147 + C27146) * C26495 +
            ((C245 * C5568 + C79307 * C5676) * C26498 +
             (C245 * C5572 + C79307 * C5680) * C79306) *
                C26496) *
               C79027 * C79259) *
              C79297 +
          (((C27132 + C27133) * C26495 + (C27134 + C27135) * C26496) * C79027 *
               C4922 -
           ((C27133 + C27132) * C26496 +
            (C276 * C79306 + C275 * C26498) * C26495) *
               C79027 * C4921 -
           ((C6953 * C79306 + C6954 * C26498) * C26496 +
            (C27135 + C27134) * C26495) *
               C79027 * C79259) *
              C79281 +
          (((C278 * C26498 + C277 * C79306) * C26495 +
            (C27136 + C27137) * C26496) *
               C79027 * C4921 -
           ((C27138 + C27139) * C26496 + (C27137 + C27136) * C26495) * C79027 *
               C4922 +
           ((C27139 + C27138) * C26495 +
            ((C245 * C6801 + C79307 * C6946) * C26498 +
             (C245 * C6802 + C79307 * C6947) * C79306) *
                C26496) *
               C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C245 * C96 + C79307 * C246) * C26498 +
            (C245 * C102 + C79307 * C252) * C79306) *
               C26495 +
           (C27144 + C27145) * C26496) *
              C79027 * C5561 -
          ((C27146 + C27147) * C26496 + (C27145 + C27144) * C26495) * C79027 *
              C5562 +
          ((C27147 + C27146) * C26495 + (C31377 + C31378) * C26496) * C79027 *
              C5563 -
          ((C31379 + C31380) * C26496 + (C31378 + C31377) * C26495) * C79027 *
              C5564 +
          ((C31380 + C31379) * C26495 +
           ((C245 * C31259 + C79307 * C31362) * C26498 +
            (C245 * C31260 + C79307 * C31363) * C79306) *
               C26496) *
              C79027 * C5565) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C245 * C96 + C79307 * C246) * C26498 +
             (C245 * C102 + C79307 * C252) * C79306) *
                C26495 +
            (C27144 + C27145) * C26496) *
               C79301 -
           ((C29915 + C29916) * C26496 +
            ((C245 * C1690 + C79307 * C1914) * C79306 +
             (C245 * C1682 + C79307 * C1906) * C26498) *
                C26495) *
               C79287 +
           (((C245 * C1683 + C79307 * C1907) * C26498 +
             (C245 * C1691 + C79307 * C1915) * C79306) *
                C26495 +
            (C31950 + C31951) * C26496) *
               C79262) *
              C4921 +
          (((C29916 + C29915) * C26495 + (C31952 + C31953) * C26496) * C79287 -
           ((C27146 + C27147) * C26496 + (C27145 + C27144) * C26495) * C79301 -
           ((C31954 + C31955) * C26496 + (C31951 + C31950) * C26495) * C79262) *
              C4922 +
          (((C27147 + C27146) * C26495 + (C31377 + C31378) * C26496) * C79301 -
           (((C245 * C8379 + C79307 * C8523) * C79306 +
             (C245 * C8377 + C79307 * C8521) * C26498) *
                C26496 +
            (C31953 + C31952) * C26495) *
               C79287 +
           ((C31955 + C31954) * C26495 +
            ((C245 * C31755 + C79307 * C31929) * C26498 +
             (C245 * C31756 + C79307 * C31930) * C79306) *
                C26496) *
               C79262) *
              C79259) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eeyx[47] += (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   ((((C26498 * C96 + C79306 * C102) * C26551 +
                      (C26498 * C167 + C79306 * C324) * C26495 +
                      C27246 * C26552 + C27247 * C26496) *
                         C79307 * C79027 * C79300 -
                     (C27248 * C26496 + C27249 * C26552 + C27247 * C26495 +
                      C27246 * C26551) *
                         C79307 * C79027 * C79285 +
                     (C27249 * C26551 + C27248 * C26495 +
                      (C26498 * C5568 + C79306 * C5572) * C26552 +
                      (C26498 * C5626 + C79306 * C5726) * C26496) *
                         C79307 * C79027 * C79259) *
                        C745 +
                    ((C27250 * C26551 + C27251 * C26495 + C27252 * C26552 +
                      C27253 * C26496) *
                         C79307 * C79027 * C79285 -
                     (C27251 * C26496 + C27250 * C26552 +
                      (C26498 * C168 + C79306 * C325) * C26495 +
                      (C26498 * C97 + C79306 * C103) * C26551) *
                         C79307 * C79027 * C79300 -
                     ((C26498 * C5625 + C79306 * C5725) * C26496 +
                      (C26498 * C5567 + C79306 * C5571) * C26552 +
                      C27253 * C26495 + C27252 * C26551) *
                         C79307 * C79027 * C79259) *
                        C746 +
                    (((C26498 * C98 + C79306 * C104) * C26551 +
                      (C26498 * C169 + C79306 * C326) * C26495 +
                      C27254 * C26552 + C27255 * C26496) *
                         C79307 * C79027 * C79300 -
                     (C27256 * C26496 + C27257 * C26552 + C27255 * C26495 +
                      C27254 * C26551) *
                         C79307 * C79027 * C79285 +
                     (C27257 * C26551 + C27256 * C26495 +
                      (C26498 * C6801 + C79306 * C6802) * C26552 +
                      (C26498 * C6872 + C79306 * C7020) * C26496) *
                         C79307 * C79027 * C79259) *
                        C79253)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   (((C26498 * C96 + C79306 * C102) * C26551 +
                     (C26498 * C167 + C79306 * C324) * C26495 +
                     (C26498 * C749 + C79306 * C757) * C26552 +
                     (C26498 * C859 + C79306 * C1087) * C26496) *
                        C79307 * C79027 * C79009 * C87 -
                    ((C26498 * C858 + C79306 * C1086) * C26496 +
                     (C26498 * C748 + C79306 * C756) * C26552 +
                     (C26498 * C168 + C79306 * C325) * C26495 +
                     (C26498 * C97 + C79306 * C103) * C26551) *
                        C79307 * C79027 * C79009 * C88 +
                    ((C26498 * C98 + C79306 * C104) * C26551 +
                     (C26498 * C169 + C79306 * C326) * C26495 +
                     (C26498 * C752 + C79306 * C760) * C26552 +
                     (C26498 * C862 + C79306 * C1090) * C26496) *
                        C79307 * C79027 * C79009 * C89 -
                    ((C26498 * C864 + C79306 * C1092) * C26496 +
                     (C26498 * C754 + C79306 * C762) * C26552 +
                     (C26498 * C170 + C79306 * C327) * C26495 +
                     (C26498 * C99 + C79306 * C105) * C26551) *
                        C79307 * C79027 * C79009 * C90 +
                    ((C26498 * C100 + C79306 * C106) * C26551 +
                     (C26498 * C171 + C79306 * C328) * C26495 +
                     (C26498 * C2609 + C79306 * C2610) * C26552 +
                     (C26498 * C2680 + C79306 * C2828) * C26496) *
                        C79307 * C79027 * C79009 * C91)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C26498 * C96 + C79306 * C102) * C26551 +
                      (C26498 * C167 + C79306 * C324) * C26495 +
                      C27246 * C26552 + C27247 * C26496) *
                         C79307 * C79301 -
                     ((C26498 * C4047 + C79306 * C4283) * C26496 +
                      (C26498 * C3931 + C79306 * C3935) * C26552 +
                      (C26498 * C1792 + C79306 * C2020) * C26495 +
                      (C26498 * C1682 + C79306 * C1690) * C26551) *
                         C79307 * C79287 +
                     ((C26498 * C1683 + C79306 * C1691) * C26551 +
                      (C26498 * C1793 + C79306 * C2021) * C26495 +
                      (C26498 * C6042 + C79306 * C6048) * C26552 +
                      (C26498 * C6140 + C79306 * C6312) * C26496) *
                         C79307 * C79262) *
                        C79009 * C745 +
                    (((C26498 * C1681 + C79306 * C1689) * C26551 +
                      (C26498 * C1791 + C79306 * C2019) * C26495 +
                      (C26498 * C3932 + C79306 * C3936) * C26552 +
                      (C26498 * C4048 + C79306 * C4284) * C26496) *
                         C79307 * C79287 -
                     (C27251 * C26496 + C27250 * C26552 +
                      (C26498 * C168 + C79306 * C325) * C26495 +
                      (C26498 * C97 + C79306 * C103) * C26551) *
                         C79307 * C79301 -
                     ((C26498 * C6139 + C79306 * C6311) * C26496 +
                      (C26498 * C6041 + C79306 * C6047) * C26552 +
                      (C26498 * C1794 + C79306 * C2022) * C26495 +
                      (C26498 * C1684 + C79306 * C1692) * C26551) *
                         C79307 * C79262) *
                        C79009 * C746 +
                    (((C26498 * C98 + C79306 * C104) * C26551 +
                      (C26498 * C169 + C79306 * C326) * C26495 +
                      C27254 * C26552 + C27255 * C26496) *
                         C79307 * C79301 -
                     ((C26498 * C4049 + C79306 * C4285) * C26496 +
                      (C26498 * C3933 + C79306 * C3937) * C26552 +
                      (C26498 * C1795 + C79306 * C2023) * C26495 +
                      (C26498 * C1685 + C79306 * C1693) * C26551) *
                         C79307 * C79287 +
                     ((C26498 * C1686 + C79306 * C1694) * C26551 +
                      (C26498 * C1796 + C79306 * C2024) * C26495 +
                      (C26498 * C10817 + C79306 * C10818) * C26552 +
                      (C26498 * C10920 + C79306 * C11132) * C26496) *
                         C79307 * C79262) *
                        C79009 * C79253)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   ((((C26498 * C96 + C79306 * C102) * C26551 +
                      (C26498 * C167 + C79306 * C324) * C26495 +
                      C27246 * C26552 + C27247 * C26496) *
                         C79307 * C79027 * C4921 -
                     (C27248 * C26496 + C27249 * C26552 + C27247 * C26495 +
                      C27246 * C26551) *
                         C79307 * C79027 * C4922 +
                     (C27249 * C26551 + C27248 * C26495 +
                      (C26498 * C5568 + C79306 * C5572) * C26552 +
                      (C26498 * C5626 + C79306 * C5726) * C26496) *
                         C79307 * C79027 * C79259) *
                        C79297 +
                    ((C27250 * C26551 + C27251 * C26495 + C27252 * C26552 +
                      C27253 * C26496) *
                         C79307 * C79027 * C4922 -
                     (C27251 * C26496 + C27250 * C26552 +
                      (C26498 * C168 + C79306 * C325) * C26495 +
                      (C26498 * C97 + C79306 * C103) * C26551) *
                         C79307 * C79027 * C4921 -
                     ((C26498 * C5625 + C79306 * C5725) * C26496 +
                      (C26498 * C5567 + C79306 * C5571) * C26552 +
                      C27253 * C26495 + C27252 * C26551) *
                         C79307 * C79027 * C79259) *
                        C79281 +
                    (((C26498 * C98 + C79306 * C104) * C26551 +
                      (C26498 * C169 + C79306 * C326) * C26495 +
                      C27254 * C26552 + C27255 * C26496) *
                         C79307 * C79027 * C4921 -
                     (C27256 * C26496 + C27257 * C26552 + C27255 * C26495 +
                      C27254 * C26551) *
                         C79307 * C79027 * C4922 +
                     (C27257 * C26551 + C27256 * C26495 +
                      (C26498 * C6801 + C79306 * C6802) * C26552 +
                      (C26498 * C6872 + C79306 * C7020) * C26496) *
                         C79307 * C79027 * C79259) *
                        C79253)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   (((C26498 * C96 + C79306 * C102) * C26551 +
                     (C26498 * C167 + C79306 * C324) * C26495 +
                     C27246 * C26552 + C27247 * C26496) *
                        C79307 * C79027 * C5561 -
                    (C27248 * C26496 + C27249 * C26552 + C27247 * C26495 +
                     C27246 * C26551) *
                        C79307 * C79027 * C5562 +
                    (C27249 * C26551 + C27248 * C26495 + C31432 * C26552 +
                     C31433 * C26496) *
                        C79307 * C79027 * C5563 -
                    (C31434 * C26496 + C31435 * C26552 + C31433 * C26495 +
                     C31432 * C26551) *
                        C79307 * C79027 * C5564 +
                    (C31435 * C26551 + C31434 * C26495 +
                     (C26498 * C31259 + C79306 * C31260) * C26552 +
                     (C26498 * C31318 + C79306 * C31422) * C26496) *
                        C79307 * C79027 * C5565) *
                   C78981) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C26498 * C96 + C79306 * C102) * C26551 +
                      (C26498 * C167 + C79306 * C324) * C26495 +
                      C27246 * C26552 + C27247 * C26496) *
                         C79307 * C79301 -
                     (C30027 * C26496 + C30028 * C26552 +
                      (C26498 * C1792 + C79306 * C2020) * C26495 +
                      (C26498 * C1682 + C79306 * C1690) * C26551) *
                         C79307 * C79287 +
                     ((C26498 * C1683 + C79306 * C1691) * C26551 +
                      (C26498 * C1793 + C79306 * C2021) * C26495 +
                      C32043 * C26552 + C32044 * C26496) *
                         C79307 * C79262) *
                        C4921 +
                    ((C30028 * C26551 + C30027 * C26495 + C32045 * C26552 +
                      C32046 * C26496) *
                         C79307 * C79287 -
                     (C27248 * C26496 + C27249 * C26552 + C27247 * C26495 +
                      C27246 * C26551) *
                         C79307 * C79301 -
                     (C32047 * C26496 + C32048 * C26552 + C32044 * C26495 +
                      C32043 * C26551) *
                         C79307 * C79262) *
                        C4922 +
                    ((C27249 * C26551 + C27248 * C26495 + C31432 * C26552 +
                      C31433 * C26496) *
                         C79307 * C79301 -
                     ((C26498 * C8451 + C79306 * C8591) * C26496 +
                      (C26498 * C8377 + C79306 * C8379) * C26552 +
                      C32046 * C26495 + C32045 * C26551) *
                         C79307 * C79287 +
                     (C32048 * C26551 + C32047 * C26495 +
                      (C26498 * C31755 + C79306 * C31756) * C26552 +
                      (C26498 * C31853 + C79306 * C32029) * C26496) *
                         C79307 * C79262) *
                        C79259) *
                   C78981) /
                      (p * q * std::sqrt(p + q));
    d2eeyy[47] += (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   (((C26679 * C96 + C26682 + C26682 + C26495 * C373 +
                      C26680 * C749 + C26683 + C26683 + C26496 * C1169) *
                         C79306 * C79307 * C79027 * C79300 -
                     (C26680 * C750 + C27332 + C27332 + C26496 * C1170 +
                      C26679 * C749 + C27333 + C27333 + C26495 * C1169) *
                         C79306 * C79307 * C79027 * C79285 +
                     (C26679 * C750 + C27334 + C27334 + C26495 * C1170 +
                      C26680 * C5568 + C27335 + C27335 + C26496 * C5772) *
                         C79306 * C79307 * C79027 * C79259) *
                        C745 +
                    ((C26679 * C748 + C27336 + C27336 + C26495 * C1168 +
                      C26680 * C751 + C27337 + C27337 + C26496 * C1171) *
                         C79306 * C79307 * C79027 * C79285 -
                     (C26680 * C748 + C26684 + C26684 + C26496 * C1168 +
                      C26679 * C97 + C26685 + C26685 + C26495 * C374) *
                         C79306 * C79307 * C79027 * C79300 -
                     (C26680 * C5567 + C27338 + C27338 + C26496 * C5771 +
                      C26679 * C751 + C27339 + C27339 + C26495 * C1171) *
                         C79306 * C79307 * C79027 * C79259) *
                        C746 +
                    ((C26679 * C98 + C26686 + C26686 + C26495 * C375 +
                      C26680 * C752 + C26687 + C26687 + C26496 * C1172) *
                         C79306 * C79307 * C79027 * C79300 -
                     (C26680 * C753 + C27340 + C27340 + C26496 * C1173 +
                      C26679 * C752 + C27341 + C27341 + C26495 * C1172) *
                         C79306 * C79307 * C79027 * C79285 +
                     (C26679 * C753 + C27342 + C27342 + C26495 * C1173 +
                      C26680 * C6801 + C27343 + C27343 + C26496 * C7087) *
                         C79306 * C79307 * C79027 * C79259) *
                        C79253)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   ((C26679 * C96 + C26682 + C26682 + C26495 * C373 +
                     C26680 * C749 + C26683 + C26683 + C26496 * C1169) *
                        C79306 * C79307 * C79027 * C79009 * C87 -
                    (C26680 * C748 + C26684 + C26684 + C26496 * C1168 +
                     C26679 * C97 + C26685 + C26685 + C26495 * C374) *
                        C79306 * C79307 * C79027 * C79009 * C88 +
                    (C26679 * C98 + C26686 + C26686 + C26495 * C375 +
                     C26680 * C752 + C26687 + C26687 + C26496 * C1172) *
                        C79306 * C79307 * C79027 * C79009 * C89 -
                    (C26680 * C754 + C26688 + C26688 + C26496 * C1174 +
                     C26679 * C99 + C26689 + C26689 + C26495 * C376) *
                        C79306 * C79307 * C79027 * C79009 * C90 +
                    (C26679 * C100 + C26690 + C26690 + C26495 * C377 +
                     C26680 * C2609 + C26691 + C26691 + C26496 * C2895) *
                        C79306 * C79307 * C79027 * C79009 * C91)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C26679 * C96 + C26682 + C26682 + C26495 * C373 +
                      C26680 * C749 + C26683 + C26683 + C26496 * C1169) *
                         C79306 * C79307 * C79301 -
                     (C26680 * C3931 + C28068 + C28068 + C26496 * C4385 +
                      C26679 * C1682 + C28069 + C28069 + C26495 * C2102) *
                         C79306 * C79307 * C79287 +
                     (C26679 * C1683 + C28070 + C28070 + C26495 * C2103 +
                      C26680 * C6042 + C28071 + C28071 + C26496 * C6392) *
                         C79306 * C79307 * C79262) *
                        C79009 * C745 +
                    ((C26679 * C1681 + C28072 + C28072 + C26495 * C2101 +
                      C26680 * C3932 + C28073 + C28073 + C26496 * C4386) *
                         C79306 * C79307 * C79287 -
                     (C26680 * C748 + C26684 + C26684 + C26496 * C1168 +
                      C26679 * C97 + C26685 + C26685 + C26495 * C374) *
                         C79306 * C79307 * C79301 -
                     (C26680 * C6041 + C28074 + C28074 + C26496 * C6391 +
                      C26679 * C1684 + C28075 + C28075 + C26495 * C2104) *
                         C79306 * C79307 * C79262) *
                        C79009 * C746 +
                    ((C26679 * C98 + C26686 + C26686 + C26495 * C375 +
                      C26680 * C752 + C26687 + C26687 + C26496 * C1172) *
                         C79306 * C79307 * C79301 -
                     (C26680 * C3933 + C28076 + C28076 + C26496 * C4387 +
                      C26679 * C1685 + C28077 + C28077 + C26495 * C2105) *
                         C79306 * C79307 * C79287 +
                     (C26679 * C1686 + C28078 + C28078 + C26495 * C2106 +
                      C26680 * C10817 + C28079 + C28079 + C26496 * C11231) *
                         C79306 * C79307 * C79262) *
                        C79009 * C79253)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   (((C26679 * C96 + C26682 + C26682 + C26495 * C373 +
                      C26680 * C749 + C26683 + C26683 + C26496 * C1169) *
                         C79306 * C79307 * C79027 * C4921 -
                     (C26680 * C750 + C27332 + C27332 + C26496 * C1170 +
                      C26679 * C749 + C27333 + C27333 + C26495 * C1169) *
                         C79306 * C79307 * C79027 * C4922 +
                     (C26679 * C750 + C27334 + C27334 + C26495 * C1170 +
                      C26680 * C5568 + C27335 + C27335 + C26496 * C5772) *
                         C79306 * C79307 * C79027 * C79259) *
                        C79297 +
                    ((C26679 * C748 + C27336 + C27336 + C26495 * C1168 +
                      C26680 * C751 + C27337 + C27337 + C26496 * C1171) *
                         C79306 * C79307 * C79027 * C4922 -
                     (C26680 * C748 + C26684 + C26684 + C26496 * C1168 +
                      C26679 * C97 + C26685 + C26685 + C26495 * C374) *
                         C79306 * C79307 * C79027 * C4921 -
                     (C26680 * C5567 + C27338 + C27338 + C26496 * C5771 +
                      C26679 * C751 + C27339 + C27339 + C26495 * C1171) *
                         C79306 * C79307 * C79027 * C79259) *
                        C79281 +
                    ((C26679 * C98 + C26686 + C26686 + C26495 * C375 +
                      C26680 * C752 + C26687 + C26687 + C26496 * C1172) *
                         C79306 * C79307 * C79027 * C4921 -
                     (C26680 * C753 + C27340 + C27340 + C26496 * C1173 +
                      C26679 * C752 + C27341 + C27341 + C26495 * C1172) *
                         C79306 * C79307 * C79027 * C4922 +
                     (C26679 * C753 + C27342 + C27342 + C26495 * C1173 +
                      C26680 * C6801 + C27343 + C27343 + C26496 * C7087) *
                         C79306 * C79307 * C79027 * C79259) *
                        C79253)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   ((C26679 * C96 + C26682 + C26682 + C26495 * C373 +
                     C26680 * C749 + C26683 + C26683 + C26496 * C1169) *
                        C79306 * C79307 * C79027 * C5561 -
                    (C26680 * C750 + C27332 + C27332 + C26496 * C1170 +
                     C26679 * C749 + C27333 + C27333 + C26495 * C1169) *
                        C79306 * C79307 * C79027 * C5562 +
                    (C26679 * C750 + C27334 + C27334 + C26495 * C1170 +
                     C26680 * C5568 + C27335 + C27335 + C26496 * C5772) *
                        C79306 * C79307 * C79027 * C5563 -
                    (C26680 * C5569 + C31479 + C31479 + C26496 * C5773 +
                     C26679 * C5568 + C31480 + C31480 + C26495 * C5772) *
                        C79306 * C79307 * C79027 * C5564 +
                    (C26679 * C5569 + C31481 + C31481 + C26495 * C5773 +
                     C26680 * C31259 + C31482 + C31482 + C26496 * C31477) *
                        C79306 * C79307 * C79027 * C5565) *
                   C78981) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C26679 * C96 + C26682 + C26682 + C26495 * C373 +
                      C26680 * C749 + C26683 + C26683 + C26496 * C1169) *
                         C79306 * C79307 * C79301 -
                     (C26680 * C3931 + C28068 + C28068 + C26496 * C4385 +
                      C26679 * C1682 + C28069 + C28069 + C26495 * C2102) *
                         C79306 * C79307 * C79287 +
                     (C26679 * C1683 + C28070 + C28070 + C26495 * C2103 +
                      C26680 * C6042 + C28071 + C28071 + C26496 * C6392) *
                         C79306 * C79307 * C79262) *
                        C4921 +
                    ((C26679 * C3931 + C30131 + C30131 + C26495 * C4385 +
                      C26680 * C6044 + C30132 + C30132 + C26496 * C6394) *
                         C79306 * C79307 * C79287 -
                     (C26680 * C750 + C27332 + C27332 + C26496 * C1170 +
                      C26679 * C749 + C27333 + C27333 + C26495 * C1169) *
                         C79306 * C79307 * C79301 -
                     (C26680 * C6045 + C32124 + C32124 + C26496 * C6395 +
                      C26679 * C6042 + C32125 + C32125 + C26495 * C6392) *
                         C79306 * C79307 * C79262) *
                        C4922 +
                    ((C26679 * C750 + C27334 + C27334 + C26495 * C1170 +
                      C26680 * C5568 + C27335 + C27335 + C26496 * C5772) *
                         C79306 * C79307 * C79301 -
                     (C26680 * C8377 + C32126 + C32126 + C26496 * C8659 +
                      C26679 * C6044 + C32127 + C32127 + C26495 * C6394) *
                         C79306 * C79307 * C79287 +
                     (C26679 * C6045 + C32128 + C32128 + C26495 * C6395 +
                      C26680 * C31755 + C32129 + C32129 + C26496 * C32122) *
                         C79306 * C79307 * C79262) *
                        C79259) *
                   C78981) /
                      (p * q * std::sqrt(p + q));
    d2eeyz[47] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C245 * C96 + C79307 * C246) * C26551 +
            (C245 * C167 + C79307 * C447) * C26495 + C27140 * C26552 +
            C27422 * C26496) *
               C79306 * C79027 * C79300 -
           (C27423 * C26496 + C27143 * C26552 + C27422 * C26495 +
            C27140 * C26551) *
               C79306 * C79027 * C79285 +
           (C27143 * C26551 + C27423 * C26495 +
            (C245 * C5568 + C79307 * C5676) * C26552 +
            (C245 * C5626 + C79307 * C5822) * C26496) *
               C79306 * C79027 * C79259) *
              C745 +
          ((C1006 * C26551 + C1299 * C26495 + C1007 * C26552 + C1300 * C26496) *
               C79306 * C79027 * C79285 -
           (C1299 * C26496 + C1006 * C26552 + C466 * C26495 + C275 * C26551) *
               C79306 * C79027 * C79300 -
           (C7165 * C26496 + C6954 * C26552 + C1300 * C26495 + C1007 * C26551) *
               C79306 * C79027 * C79259) *
              C746 +
          ((C278 * C26551 + C467 * C26495 + C1009 * C26552 + C1301 * C26496) *
               C79306 * C79027 * C79300 -
           (C1302 * C26496 + C1012 * C26552 + C1301 * C26495 + C1009 * C26551) *
               C79306 * C79027 * C79285 +
           (C1012 * C26551 + C1302 * C26495 +
            (C245 * C6801 + C79307 * C6946) * C26552 +
            (C245 * C6872 + C79307 * C7160) * C26496) *
               C79306 * C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C245 * C96 + C79307 * C246) * C26551 +
           (C245 * C167 + C79307 * C447) * C26495 +
           (C245 * C749 + C79307 * C973) * C26552 +
           (C245 * C859 + C79307 * C1279) * C26496) *
              C79306 * C79027 * C79009 * C87 -
          (C1299 * C26496 + C1006 * C26552 + C466 * C26495 + C275 * C26551) *
              C79306 * C79027 * C79009 * C88 +
          (C278 * C26551 + C467 * C26495 + C1009 * C26552 + C1301 * C26496) *
              C79306 * C79027 * C79009 * C89 -
          (C2973 * C26496 + C2762 * C26552 + C468 * C26495 + C279 * C26551) *
              C79306 * C79027 * C79009 * C90 +
          (C282 * C26551 + C469 * C26495 +
           (C245 * C2609 + C79307 * C2754) * C26552 +
           (C245 * C2680 + C79307 * C2968) * C26496) *
              C79306 * C79027 * C79009 * C91)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C245 * C96 + C79307 * C246) * C26551 +
            (C245 * C167 + C79307 * C447) * C26495 + C27140 * C26552 +
            C27422 * C26496) *
               C79306 * C79301 -
           ((C245 * C4047 + C79307 * C4501) * C26496 +
            (C245 * C3931 + C79307 * C4165) * C26552 +
            (C245 * C1792 + C79307 * C2212) * C26495 +
            (C245 * C1682 + C79307 * C1906) * C26551) *
               C79306 * C79287 +
           ((C245 * C1683 + C79307 * C1907) * C26551 +
            (C245 * C1793 + C79307 * C2213) * C26495 +
            (C245 * C6042 + C79307 * C6226) * C26552 +
            (C245 * C6140 + C79307 * C6478) * C26496) *
               C79306 * C79262) *
              C79009 * C745 +
          ((C1939 * C26551 + C2232 * C26495 + C4182 * C26552 + C4512 * C26496) *
               C79306 * C79287 -
           (C1299 * C26496 + C1006 * C26552 + C466 * C26495 + C275 * C26551) *
               C79306 * C79301 -
           (C11341 * C26496 + C11034 * C26552 + C2233 * C26495 +
            C1940 * C26551) *
               C79306 * C79262) *
              C79009 * C746 +
          ((C278 * C26551 + C467 * C26495 + C1009 * C26552 + C1301 * C26496) *
               C79306 * C79301 -
           (C4513 * C26496 + C4185 * C26552 + C2234 * C26495 + C1942 * C26551) *
               C79306 * C79287 +
           (C1945 * C26551 + C2235 * C26495 +
            (C245 * C10817 + C79307 * C11026) * C26552 +
            (C245 * C10920 + C79307 * C11336) * C26496) *
               C79306 * C79262) *
              C79009 * C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C245 * C96 + C79307 * C246) * C26551 +
            (C245 * C167 + C79307 * C447) * C26495 + C27140 * C26552 +
            C27422 * C26496) *
               C79306 * C79027 * C4921 -
           (C27423 * C26496 + C27143 * C26552 + C27422 * C26495 +
            C27140 * C26551) *
               C79306 * C79027 * C4922 +
           (C27143 * C26551 + C27423 * C26495 +
            (C245 * C5568 + C79307 * C5676) * C26552 +
            (C245 * C5626 + C79307 * C5822) * C26496) *
               C79306 * C79027 * C79259) *
              C79297 +
          ((C1006 * C26551 + C1299 * C26495 + C1007 * C26552 + C1300 * C26496) *
               C79306 * C79027 * C4922 -
           (C1299 * C26496 + C1006 * C26552 + C466 * C26495 + C275 * C26551) *
               C79306 * C79027 * C4921 -
           (C7165 * C26496 + C6954 * C26552 + C1300 * C26495 + C1007 * C26551) *
               C79306 * C79027 * C79259) *
              C79281 +
          ((C278 * C26551 + C467 * C26495 + C1009 * C26552 + C1301 * C26496) *
               C79306 * C79027 * C4921 -
           (C1302 * C26496 + C1012 * C26552 + C1301 * C26495 + C1009 * C26551) *
               C79306 * C79027 * C4922 +
           (C1012 * C26551 + C1302 * C26495 +
            (C245 * C6801 + C79307 * C6946) * C26552 +
            (C245 * C6872 + C79307 * C7160) * C26496) *
               C79306 * C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C245 * C96 + C79307 * C246) * C26551 +
           (C245 * C167 + C79307 * C447) * C26495 + C27140 * C26552 +
           C27422 * C26496) *
              C79306 * C79027 * C5561 -
          (C27423 * C26496 + C27143 * C26552 + C27422 * C26495 +
           C27140 * C26551) *
              C79306 * C79027 * C5562 +
          (C27143 * C26551 + C27423 * C26495 + C31373 * C26552 +
           C31530 * C26496) *
              C79306 * C79027 * C5563 -
          (C31531 * C26496 + C31376 * C26552 + C31530 * C26495 +
           C31373 * C26551) *
              C79306 * C79027 * C5564 +
          (C31376 * C26551 + C31531 * C26495 +
           (C245 * C31259 + C79307 * C31362) * C26552 +
           (C245 * C31318 + C79307 * C31524) * C26496) *
              C79306 * C79027 * C5565) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C245 * C96 + C79307 * C246) * C26551 +
            (C245 * C167 + C79307 * C447) * C26495 + C27140 * C26552 +
            C27422 * C26496) *
               C79306 * C79301 -
           (C30237 * C26496 + C29914 * C26552 +
            (C245 * C1792 + C79307 * C2212) * C26495 +
            (C245 * C1682 + C79307 * C1906) * C26551) *
               C79306 * C79287 +
           ((C245 * C1683 + C79307 * C1907) * C26551 +
            (C245 * C1793 + C79307 * C2213) * C26495 + C31944 * C26552 +
            C32211 * C26496) *
               C79306 * C79262) *
              C4921 +
          ((C29914 * C26551 + C30237 * C26495 + C31946 * C26552 +
            C32212 * C26496) *
               C79306 * C79287 -
           (C27423 * C26496 + C27143 * C26552 + C27422 * C26495 +
            C27140 * C26551) *
               C79306 * C79301 -
           (C32213 * C26496 + C31949 * C26552 + C32211 * C26495 +
            C31944 * C26551) *
               C79306 * C79262) *
              C4922 +
          ((C27143 * C26551 + C27423 * C26495 + C31373 * C26552 +
            C31530 * C26496) *
               C79306 * C79301 -
           ((C245 * C8451 + C79307 * C8729) * C26496 +
            (C245 * C8377 + C79307 * C8521) * C26552 + C32212 * C26495 +
            C31946 * C26551) *
               C79306 * C79287 +
           (C31949 * C26551 + C32213 * C26495 +
            (C245 * C31755 + C79307 * C31929) * C26552 +
            (C245 * C31853 + C79307 * C32203) * C26496) *
               C79306 * C79262) *
              C79259) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eezx[47] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C26498 * C96 + C79306 * C102) * C245 +
             (C26498 * C246 + C79306 * C515) * C79307) *
                C26495 +
            (C27498 + C27522) * C26496) *
               C79027 * C79300 -
           ((C27523 + C27503) * C26496 + (C27522 + C27498) * C26495) * C79027 *
               C79285 +
           ((C27503 + C27523) * C26495 +
            ((C26498 * C5568 + C79306 * C5572) * C245 +
             (C26498 * C5676 + C79306 * C5868) * C79307) *
                C26496) *
               C79027 * C79259) *
              C745 +
          (((C27504 + C27524) * C26495 + (C27507 + C27525) * C26496) * C79027 *
               C79285 -
           ((C27524 + C27504) * C26496 +
            ((C26498 * C247 + C79306 * C516) * C79307 +
             (C26498 * C97 + C79306 * C103) * C245) *
                C26495) *
               C79027 * C79300 -
           (((C26498 * C5675 + C79306 * C5867) * C79307 +
             (C26498 * C5567 + C79306 * C5571) * C245) *
                C26496 +
            (C27525 + C27507) * C26495) *
               C79027 * C79259) *
              C746 +
          ((((C26498 * C98 + C79306 * C104) * C245 +
             (C26498 * C248 + C79306 * C517) * C79307) *
                C26495 +
            (C27510 + C27526) * C26496) *
               C79027 * C79300 -
           ((C27527 + C27515) * C26496 + (C27526 + C27510) * C26495) * C79027 *
               C79285 +
           ((C27515 + C27527) * C26495 +
            ((C26498 * C6801 + C79306 * C6802) * C245 +
             (C26498 * C6946 + C79306 * C7232) * C79307) *
                C26496) *
               C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C26498 * C96 + C79306 * C102) * C245 +
            (C26498 * C246 + C79306 * C515) * C79307) *
               C26495 +
           ((C26498 * C749 + C79306 * C757) * C245 +
            (C26498 * C973 + C79306 * C1381) * C79307) *
               C26496) *
              C79027 * C79009 * C87 -
          (((C26498 * C972 + C79306 * C1380) * C79307 +
            (C26498 * C748 + C79306 * C756) * C245) *
               C26496 +
           ((C26498 * C247 + C79306 * C516) * C79307 +
            (C26498 * C97 + C79306 * C103) * C245) *
               C26495) *
              C79027 * C79009 * C88 +
          (((C26498 * C98 + C79306 * C104) * C245 +
            (C26498 * C248 + C79306 * C517) * C79307) *
               C26495 +
           ((C26498 * C752 + C79306 * C760) * C245 +
            (C26498 * C976 + C79306 * C1384) * C79307) *
               C26496) *
              C79027 * C79009 * C89 -
          (((C26498 * C978 + C79306 * C1386) * C79307 +
            (C26498 * C754 + C79306 * C762) * C245) *
               C26496 +
           ((C26498 * C249 + C79306 * C518) * C79307 +
            (C26498 * C99 + C79306 * C105) * C245) *
               C26495) *
              C79027 * C79009 * C90 +
          (((C26498 * C100 + C79306 * C106) * C245 +
            (C26498 * C250 + C79306 * C519) * C79307) *
               C26495 +
           ((C26498 * C2609 + C79306 * C2610) * C245 +
            (C26498 * C2754 + C79306 * C3040) * C79307) *
               C26496) *
              C79027 * C79009 * C91)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C26498 * C96 + C79306 * C102) * C245 +
             (C26498 * C246 + C79306 * C515) * C79307) *
                C26495 +
            (C27498 + C27522) * C26496) *
               C79301 -
           (((C26498 * C4165 + C79306 * C4613) * C79307 +
             (C26498 * C3931 + C79306 * C3935) * C245) *
                C26496 +
            ((C26498 * C1906 + C79306 * C2314) * C79307 +
             (C26498 * C1682 + C79306 * C1690) * C245) *
                C26495) *
               C79287 +
           (((C26498 * C1683 + C79306 * C1691) * C245 +
             (C26498 * C1907 + C79306 * C2315) * C79307) *
                C26495 +
            ((C26498 * C6042 + C79306 * C6048) * C245 +
             (C26498 * C6226 + C79306 * C6558) * C79307) *
                C26496) *
               C79262) *
              C79009 * C745 +
          ((((C26498 * C1681 + C79306 * C1689) * C245 +
             (C26498 * C1905 + C79306 * C2313) * C79307) *
                C26495 +
            ((C26498 * C3932 + C79306 * C3936) * C245 +
             (C26498 * C4166 + C79306 * C4614) * C79307) *
                C26496) *
               C79287 -
           ((C27524 + C27504) * C26496 +
            ((C26498 * C247 + C79306 * C516) * C79307 +
             (C26498 * C97 + C79306 * C103) * C245) *
                C26495) *
               C79301 -
           (((C26498 * C6225 + C79306 * C6557) * C79307 +
             (C26498 * C6041 + C79306 * C6047) * C245) *
                C26496 +
            ((C26498 * C1908 + C79306 * C2316) * C79307 +
             (C26498 * C1684 + C79306 * C1692) * C245) *
                C26495) *
               C79262) *
              C79009 * C746 +
          ((((C26498 * C98 + C79306 * C104) * C245 +
             (C26498 * C248 + C79306 * C517) * C79307) *
                C26495 +
            (C27510 + C27526) * C26496) *
               C79301 -
           (((C26498 * C4167 + C79306 * C4615) * C79307 +
             (C26498 * C3933 + C79306 * C3937) * C245) *
                C26496 +
            ((C26498 * C1909 + C79306 * C2317) * C79307 +
             (C26498 * C1685 + C79306 * C1693) * C245) *
                C26495) *
               C79287 +
           (((C26498 * C1686 + C79306 * C1694) * C245 +
             (C26498 * C1910 + C79306 * C2318) * C79307) *
                C26495 +
            ((C26498 * C10817 + C79306 * C10818) * C245 +
             (C26498 * C11026 + C79306 * C11440) * C79307) *
                C26496) *
               C79262) *
              C79009 * C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C26498 * C96 + C79306 * C102) * C245 +
             (C26498 * C246 + C79306 * C515) * C79307) *
                C26495 +
            (C27498 + C27522) * C26496) *
               C79027 * C4921 -
           ((C27523 + C27503) * C26496 + (C27522 + C27498) * C26495) * C79027 *
               C4922 +
           ((C27503 + C27523) * C26495 +
            ((C26498 * C5568 + C79306 * C5572) * C245 +
             (C26498 * C5676 + C79306 * C5868) * C79307) *
                C26496) *
               C79027 * C79259) *
              C79297 +
          (((C27504 + C27524) * C26495 + (C27507 + C27525) * C26496) * C79027 *
               C4922 -
           ((C27524 + C27504) * C26496 +
            ((C26498 * C247 + C79306 * C516) * C79307 +
             (C26498 * C97 + C79306 * C103) * C245) *
                C26495) *
               C79027 * C4921 -
           (((C26498 * C5675 + C79306 * C5867) * C79307 +
             (C26498 * C5567 + C79306 * C5571) * C245) *
                C26496 +
            (C27525 + C27507) * C26495) *
               C79027 * C79259) *
              C79281 +
          ((((C26498 * C98 + C79306 * C104) * C245 +
             (C26498 * C248 + C79306 * C517) * C79307) *
                C26495 +
            (C27510 + C27526) * C26496) *
               C79027 * C4921 -
           ((C27527 + C27515) * C26496 + (C27526 + C27510) * C26495) * C79027 *
               C4922 +
           ((C27515 + C27527) * C26495 +
            ((C26498 * C6801 + C79306 * C6802) * C245 +
             (C26498 * C6946 + C79306 * C7232) * C79307) *
                C26496) *
               C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C26498 * C96 + C79306 * C102) * C245 +
            (C26498 * C246 + C79306 * C515) * C79307) *
               C26495 +
           (C27498 + C27522) * C26496) *
              C79027 * C5561 -
          ((C27523 + C27503) * C26496 + (C27522 + C27498) * C26495) * C79027 *
              C5562 +
          ((C27503 + C27523) * C26495 + (C31575 + C31583) * C26496) * C79027 *
              C5563 -
          ((C31584 + C31580) * C26496 + (C31583 + C31575) * C26495) * C79027 *
              C5564 +
          ((C31580 + C31584) * C26495 +
           ((C26498 * C31259 + C79306 * C31260) * C245 +
            (C26498 * C31362 + C79306 * C31573) * C79307) *
               C26496) *
              C79027 * C5565) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C26498 * C96 + C79306 * C102) * C245 +
             (C26498 * C246 + C79306 * C515) * C79307) *
                C26495 +
            (C27498 + C27522) * C26496) *
               C79301 -
           ((C30348 + C30338) * C26496 +
            ((C26498 * C1906 + C79306 * C2314) * C79307 +
             (C26498 * C1682 + C79306 * C1690) * C245) *
                C26495) *
               C79287 +
           (((C26498 * C1683 + C79306 * C1691) * C245 +
             (C26498 * C1907 + C79306 * C2315) * C79307) *
                C26495 +
            (C32289 + C32301) * C26496) *
               C79262) *
              C4921 +
          (((C30338 + C30348) * C26495 + (C32292 + C32302) * C26496) * C79287 -
           ((C27523 + C27503) * C26496 + (C27522 + C27498) * C26495) * C79301 -
           ((C32303 + C32297) * C26496 + (C32301 + C32289) * C26495) * C79262) *
              C4922 +
          (((C27503 + C27523) * C26495 + (C31575 + C31583) * C26496) * C79301 -
           (((C26498 * C8521 + C79306 * C8797) * C79307 +
             (C26498 * C8377 + C79306 * C8379) * C245) *
                C26496 +
            (C32302 + C32292) * C26495) *
               C79287 +
           ((C32297 + C32303) * C26495 +
            ((C26498 * C31755 + C79306 * C31756) * C245 +
             (C26498 * C31929 + C79306 * C32287) * C79307) *
                C26496) *
               C79262) *
              C79259) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eezy[47] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
                C245 +
            (C26551 * C246 + C26495 * C563 + C26552 * C973 + C26496 * C1463) *
                C79307) *
               C79306 * C79027 * C79300 -
           ((C26552 * C974 + C26496 * C1464 + C26551 * C973 + C26495 * C1463) *
                C79307 +
            (C26552 * C750 + C26496 * C860 + C26551 * C749 + C26495 * C859) *
                C245) *
               C79306 * C79027 * C79285 +
           ((C26551 * C750 + C26495 * C860 + C26552 * C5568 + C26496 * C5626) *
                C245 +
            (C26551 * C974 + C26495 * C1464 + C26552 * C5676 + C26496 * C5914) *
                C79307) *
               C79306 * C79027 * C79259) *
              C745 +
          (((C26551 * C748 + C26495 * C858 + C26552 * C751 + C26496 * C861) *
                C245 +
            (C26551 * C972 + C26495 * C1462 + C26552 * C975 + C26496 * C1465) *
                C79307) *
               C79306 * C79027 * C79285 -
           ((C26552 * C972 + C26496 * C1462 + C26551 * C247 + C26495 * C564) *
                C79307 +
            (C26552 * C748 + C26496 * C858 + C26551 * C97 + C26495 * C168) *
                C245) *
               C79306 * C79027 * C79300 -
           ((C26552 * C5675 + C26496 * C5913 + C26551 * C975 + C26495 * C1465) *
                C79307 +
            (C26552 * C5567 + C26496 * C5625 + C26551 * C751 + C26495 * C861) *
                C245) *
               C79306 * C79027 * C79259) *
              C746 +
          (((C26551 * C98 + C26495 * C169 + C26552 * C752 + C26496 * C862) *
                C245 +
            (C26551 * C248 + C26495 * C565 + C26552 * C976 + C26496 * C1466) *
                C79307) *
               C79306 * C79027 * C79300 -
           ((C26552 * C977 + C26496 * C1467 + C26551 * C976 + C26495 * C1466) *
                C79307 +
            (C26552 * C753 + C26496 * C863 + C26551 * C752 + C26495 * C862) *
                C245) *
               C79306 * C79027 * C79285 +
           ((C26551 * C753 + C26495 * C863 + C26552 * C6801 + C26496 * C6872) *
                C245 +
            (C26551 * C977 + C26495 * C1467 + C26552 * C6946 + C26496 * C7299) *
                C79307) *
               C79306 * C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
               C245 +
           (C26551 * C246 + C26495 * C563 + C26552 * C973 + C26496 * C1463) *
               C79307) *
              C79306 * C79027 * C79009 * C87 -
          ((C26552 * C972 + C26496 * C1462 + C26551 * C247 + C26495 * C564) *
               C79307 +
           (C26552 * C748 + C26496 * C858 + C26551 * C97 + C26495 * C168) *
               C245) *
              C79306 * C79027 * C79009 * C88 +
          ((C26551 * C98 + C26495 * C169 + C26552 * C752 + C26496 * C862) *
               C245 +
           (C26551 * C248 + C26495 * C565 + C26552 * C976 + C26496 * C1466) *
               C79307) *
              C79306 * C79027 * C79009 * C89 -
          ((C26552 * C978 + C26496 * C1468 + C26551 * C249 + C26495 * C566) *
               C79307 +
           (C26552 * C754 + C26496 * C864 + C26551 * C99 + C26495 * C170) *
               C245) *
              C79306 * C79027 * C79009 * C90 +
          ((C26551 * C100 + C26495 * C171 + C26552 * C2609 + C26496 * C2680) *
               C245 +
           (C26551 * C250 + C26495 * C567 + C26552 * C2754 + C26496 * C3107) *
               C79307) *
              C79306 * C79027 * C79009 * C91)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
                C245 +
            (C26551 * C246 + C26495 * C563 + C26552 * C973 + C26496 * C1463) *
                C79307) *
               C79306 * C79301 -
           ((C26552 * C4165 + C26496 * C4715 + C26551 * C1906 +
             C26495 * C2396) *
                C79307 +
            (C26552 * C3931 + C26496 * C4047 + C26551 * C1682 +
             C26495 * C1792) *
                C245) *
               C79306 * C79287 +
           ((C26551 * C1683 + C26495 * C1793 + C26552 * C6042 +
             C26496 * C6140) *
                C245 +
            (C26551 * C1907 + C26495 * C2397 + C26552 * C6226 +
             C26496 * C6638) *
                C79307) *
               C79306 * C79262) *
              C79009 * C745 +
          (((C26551 * C1681 + C26495 * C1791 + C26552 * C3932 +
             C26496 * C4048) *
                C245 +
            (C26551 * C1905 + C26495 * C2395 + C26552 * C4166 +
             C26496 * C4716) *
                C79307) *
               C79306 * C79287 -
           ((C26552 * C972 + C26496 * C1462 + C26551 * C247 + C26495 * C564) *
                C79307 +
            (C26552 * C748 + C26496 * C858 + C26551 * C97 + C26495 * C168) *
                C245) *
               C79306 * C79301 -
           ((C26552 * C6225 + C26496 * C6637 + C26551 * C1908 +
             C26495 * C2398) *
                C79307 +
            (C26552 * C6041 + C26496 * C6139 + C26551 * C1684 +
             C26495 * C1794) *
                C245) *
               C79306 * C79262) *
              C79009 * C746 +
          (((C26551 * C98 + C26495 * C169 + C26552 * C752 + C26496 * C862) *
                C245 +
            (C26551 * C248 + C26495 * C565 + C26552 * C976 + C26496 * C1466) *
                C79307) *
               C79306 * C79301 -
           ((C26552 * C4167 + C26496 * C4717 + C26551 * C1909 +
             C26495 * C2399) *
                C79307 +
            (C26552 * C3933 + C26496 * C4049 + C26551 * C1685 +
             C26495 * C1795) *
                C245) *
               C79306 * C79287 +
           ((C26551 * C1686 + C26495 * C1796 + C26552 * C10817 +
             C26496 * C10920) *
                C245 +
            (C26551 * C1910 + C26495 * C2400 + C26552 * C11026 +
             C26496 * C11539) *
                C79307) *
               C79306 * C79262) *
              C79009 * C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
                C245 +
            (C26551 * C246 + C26495 * C563 + C26552 * C973 + C26496 * C1463) *
                C79307) *
               C79306 * C79027 * C4921 -
           ((C26552 * C974 + C26496 * C1464 + C26551 * C973 + C26495 * C1463) *
                C79307 +
            (C26552 * C750 + C26496 * C860 + C26551 * C749 + C26495 * C859) *
                C245) *
               C79306 * C79027 * C4922 +
           ((C26551 * C750 + C26495 * C860 + C26552 * C5568 + C26496 * C5626) *
                C245 +
            (C26551 * C974 + C26495 * C1464 + C26552 * C5676 + C26496 * C5914) *
                C79307) *
               C79306 * C79027 * C79259) *
              C79297 +
          (((C26551 * C748 + C26495 * C858 + C26552 * C751 + C26496 * C861) *
                C245 +
            (C26551 * C972 + C26495 * C1462 + C26552 * C975 + C26496 * C1465) *
                C79307) *
               C79306 * C79027 * C4922 -
           ((C26552 * C972 + C26496 * C1462 + C26551 * C247 + C26495 * C564) *
                C79307 +
            (C26552 * C748 + C26496 * C858 + C26551 * C97 + C26495 * C168) *
                C245) *
               C79306 * C79027 * C4921 -
           ((C26552 * C5675 + C26496 * C5913 + C26551 * C975 + C26495 * C1465) *
                C79307 +
            (C26552 * C5567 + C26496 * C5625 + C26551 * C751 + C26495 * C861) *
                C245) *
               C79306 * C79027 * C79259) *
              C79281 +
          (((C26551 * C98 + C26495 * C169 + C26552 * C752 + C26496 * C862) *
                C245 +
            (C26551 * C248 + C26495 * C565 + C26552 * C976 + C26496 * C1466) *
                C79307) *
               C79306 * C79027 * C4921 -
           ((C26552 * C977 + C26496 * C1467 + C26551 * C976 + C26495 * C1466) *
                C79307 +
            (C26552 * C753 + C26496 * C863 + C26551 * C752 + C26495 * C862) *
                C245) *
               C79306 * C79027 * C4922 +
           ((C26551 * C753 + C26495 * C863 + C26552 * C6801 + C26496 * C6872) *
                C245 +
            (C26551 * C977 + C26495 * C1467 + C26552 * C6946 + C26496 * C7299) *
                C79307) *
               C79306 * C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
               C245 +
           (C26551 * C246 + C26495 * C563 + C26552 * C973 + C26496 * C1463) *
               C79307) *
              C79306 * C79027 * C5561 -
          ((C26552 * C974 + C26496 * C1464 + C26551 * C973 + C26495 * C1463) *
               C79307 +
           (C26552 * C750 + C26496 * C860 + C26551 * C749 + C26495 * C859) *
               C245) *
              C79306 * C79027 * C5562 +
          ((C26551 * C750 + C26495 * C860 + C26552 * C5568 + C26496 * C5626) *
               C245 +
           (C26551 * C974 + C26495 * C1464 + C26552 * C5676 + C26496 * C5914) *
               C79307) *
              C79306 * C79027 * C5563 -
          ((C26552 * C5677 + C26496 * C5915 + C26551 * C5676 + C26495 * C5914) *
               C79307 +
           (C26552 * C5569 + C26496 * C5627 + C26551 * C5568 + C26495 * C5626) *
               C245) *
              C79306 * C79027 * C5564 +
          ((C26551 * C5569 + C26495 * C5627 + C26552 * C31259 +
            C26496 * C31318) *
               C245 +
           (C26551 * C5677 + C26495 * C5915 + C26552 * C31362 +
            C26496 * C31626) *
               C79307) *
              C79306 * C79027 * C5565) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
                C245 +
            (C26551 * C246 + C26495 * C563 + C26552 * C973 + C26496 * C1463) *
                C79307) *
               C79306 * C79301 -
           ((C26552 * C4165 + C26496 * C4715 + C26551 * C1906 +
             C26495 * C2396) *
                C79307 +
            (C26552 * C3931 + C26496 * C4047 + C26551 * C1682 +
             C26495 * C1792) *
                C245) *
               C79306 * C79287 +
           ((C26551 * C1683 + C26495 * C1793 + C26552 * C6042 +
             C26496 * C6140) *
                C245 +
            (C26551 * C1907 + C26495 * C2397 + C26552 * C6226 +
             C26496 * C6638) *
                C79307) *
               C79306 * C79262) *
              C4921 +
          (((C26551 * C3931 + C26495 * C4047 + C26552 * C6044 +
             C26496 * C6142) *
                C245 +
            (C26551 * C4165 + C26495 * C4715 + C26552 * C6228 +
             C26496 * C6640) *
                C79307) *
               C79306 * C79287 -
           ((C26552 * C974 + C26496 * C1464 + C26551 * C973 + C26495 * C1463) *
                C79307 +
            (C26552 * C750 + C26496 * C860 + C26551 * C749 + C26495 * C859) *
                C245) *
               C79306 * C79301 -
           ((C26552 * C6229 + C26496 * C6641 + C26551 * C6226 +
             C26495 * C6638) *
                C79307 +
            (C26552 * C6045 + C26496 * C6143 + C26551 * C6042 +
             C26495 * C6140) *
                C245) *
               C79306 * C79262) *
              C4922 +
          (((C26551 * C750 + C26495 * C860 + C26552 * C5568 + C26496 * C5626) *
                C245 +
            (C26551 * C974 + C26495 * C1464 + C26552 * C5676 + C26496 * C5914) *
                C79307) *
               C79306 * C79301 -
           ((C26552 * C8521 + C26496 * C8865 + C26551 * C6228 +
             C26495 * C6640) *
                C79307 +
            (C26552 * C8377 + C26496 * C8451 + C26551 * C6044 +
             C26495 * C6142) *
                C245) *
               C79306 * C79287 +
           ((C26551 * C6045 + C26495 * C6143 + C26552 * C31755 +
             C26496 * C31853) *
                C245 +
            (C26551 * C6229 + C26495 * C6641 + C26552 * C31929 +
             C26496 * C32377) *
                C79307) *
               C79306 * C79262) *
              C79259) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eezz[47] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C631 * C96 + C639 + C639 + C79307 * C632) * C26495 +
            C27684 * C26496) *
               C79306 * C79027 * C79300 -
           (C27685 * C26496 + C27684 * C26495) * C79306 * C79027 * C79285 +
           (C27685 * C26495 +
            (C631 * C5568 + C5965 + C5965 + C79307 * C5960) * C26496) *
               C79306 * C79027 * C79259) *
              C745 +
          ((C1597 * C26495 + C1598 * C26496) * C79306 * C79027 * C79285 -
           (C1597 * C26496 + C661 * C26495) * C79306 * C79027 * C79300 -
           (C7378 * C26496 + C1598 * C26495) * C79306 * C79027 * C79259) *
              C746 +
          ((C662 * C26495 + C1599 * C26496) * C79306 * C79027 * C79300 -
           (C1600 * C26496 + C1599 * C26495) * C79306 * C79027 * C79285 +
           (C1600 * C26495 +
            (C631 * C6801 + C7375 + C7375 + C79307 * C7371) * C26496) *
               C79306 * C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C631 * C96 + C639 + C639 + C79307 * C632) * C26495 +
           (C631 * C749 + C1576 + C1576 + C79307 * C1565) * C26496) *
              C79306 * C79027 * C79009 * C87 -
          (C1597 * C26496 + C661 * C26495) * C79306 * C79027 * C79009 * C88 +
          (C662 * C26495 + C1599 * C26496) * C79306 * C79027 * C79009 * C89 -
          (C3186 * C26496 + C663 * C26495) * C79306 * C79027 * C79009 * C90 +
          (C664 * C26495 +
           (C631 * C2609 + C3183 + C3183 + C79307 * C3179) * C26496) *
              C79306 * C79027 * C79009 * C91)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C631 * C96 + C639 + C639 + C79307 * C632) * C26495 +
            C27684 * C26496) *
               C79306 * C79301 -
           ((C631 * C3931 + C4832 + C4832 + C79307 * C4827) * C26496 +
            (C631 * C1682 + C2509 + C2509 + C79307 * C2498) * C26495) *
               C79306 * C79287 +
           ((C631 * C1683 + C2510 + C2510 + C79307 * C2499) * C26495 +
            (C631 * C6042 + C6725 + C6725 + C79307 * C6718) * C26496) *
               C79306 * C79262) *
              C79009 * C745 +
          ((C2530 * C26495 + C4844 * C26496) * C79306 * C79287 -
           (C1597 * C26496 + C661 * C26495) * C79306 * C79301 -
           (C11650 * C26496 + C2531 * C26495) * C79306 * C79262) *
              C79009 * C746 +
          ((C662 * C26495 + C1599 * C26496) * C79306 * C79301 -
           (C4845 * C26496 + C2532 * C26495) * C79306 * C79287 +
           (C2533 * C26495 +
            (C631 * C10817 + C11647 + C11647 + C79307 * C11643) * C26496) *
               C79306 * C79262) *
              C79009 * C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C631 * C96 + C639 + C639 + C79307 * C632) * C26495 +
            C27684 * C26496) *
               C79306 * C79027 * C4921 -
           (C27685 * C26496 + C27684 * C26495) * C79306 * C79027 * C4922 +
           (C27685 * C26495 +
            (C631 * C5568 + C5965 + C5965 + C79307 * C5960) * C26496) *
               C79306 * C79027 * C79259) *
              C79297 +
          ((C1597 * C26495 + C1598 * C26496) * C79306 * C79027 * C4922 -
           (C1597 * C26496 + C661 * C26495) * C79306 * C79027 * C4921 -
           (C7378 * C26496 + C1598 * C26495) * C79306 * C79027 * C79259) *
              C79281 +
          ((C662 * C26495 + C1599 * C26496) * C79306 * C79027 * C4921 -
           (C1600 * C26496 + C1599 * C26495) * C79306 * C79027 * C4922 +
           (C1600 * C26495 +
            (C631 * C6801 + C7375 + C7375 + C79307 * C7371) * C26496) *
               C79306 * C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C631 * C96 + C639 + C639 + C79307 * C632) * C26495 +
           C27684 * C26496) *
              C79306 * C79027 * C5561 -
          (C27685 * C26496 + C27684 * C26495) * C79306 * C79027 * C5562 +
          (C27685 * C26495 + C31680 * C26496) * C79306 * C79027 * C5563 -
          (C31681 * C26496 + C31680 * C26495) * C79306 * C79027 * C5564 +
          (C31681 * C26495 +
           (C631 * C31259 + C31675 + C31675 + C79307 * C31669) * C26496) *
              C79306 * C79027 * C5565) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C631 * C96 + C639 + C639 + C79307 * C632) * C26495 +
            C27684 * C26496) *
               C79306 * C79301 -
           (C30551 * C26496 +
            (C631 * C1682 + C2509 + C2509 + C79307 * C2498) * C26495) *
               C79306 * C79287 +
           ((C631 * C1683 + C2510 + C2510 + C79307 * C2499) * C26495 +
            C32467 * C26496) *
               C79306 * C79262) *
              C4921 +
          ((C30551 * C26495 + C32468 * C26496) * C79306 * C79287 -
           (C27685 * C26496 + C27684 * C26495) * C79306 * C79301 -
           (C32469 * C26496 + C32467 * C26495) * C79306 * C79262) *
              C4922 +
          ((C27685 * C26495 + C31680 * C26496) * C79306 * C79301 -
           ((C631 * C8377 + C8936 + C8936 + C79307 * C8933) * C26496 +
            C32468 * C26495) *
               C79306 * C79287 +
           (C32469 * C26495 +
            (C631 * C31755 + C32460 + C32460 + C79307 * C32452) * C26496) *
               C79306 * C79262) *
              C79259) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eexx[48] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C79307 * C26495 +
            C26970 * C26496) *
               C79230 -
           ((C26497 * C3931 + C27760 + C27760 + C79306 * C3939) * C79307 *
                C26496 +
            (C26497 * C1682 + C27761 + C27761 + C79306 * C1698) * C79307 *
                C26495) *
               C79114) *
              C79009 * C2605 +
          (((C26497 * C1681 + C27764 + C27764 + C79306 * C1697) * C79307 *
                C26495 +
            (C26497 * C3932 + C27765 + C27765 + C79306 * C3940) * C79307 *
                C26496) *
               C79114 -
           (C26972 * C26496 + (C26497 * C97 + C26503 + C26503 + C79306 * C109) *
                                  C79307 * C26495) *
               C79230) *
              C79009 * C2606 +
          (((C26497 * C98 + C26504 + C26504 + C79306 * C110) * C79307 * C26495 +
            C26974 * C26496) *
               C79230 -
           ((C26497 * C3933 + C27768 + C27768 + C79306 * C3941) * C79307 *
                C26496 +
            (C26497 * C1685 + C27769 + C27769 + C79306 * C1701) * C79307 *
                C26495) *
               C79114) *
              C79009 * C2607 +
          (((C26497 * C1687 + C29058 + C29058 + C79306 * C1703) * C79307 *
                C26495 +
            (C26497 * C3934 + C29059 + C29059 + C79306 * C3942) * C79307 *
                C26496) *
               C79114 -
           (C28448 * C26496 + (C26497 * C99 + C26507 + C26507 + C79306 * C111) *
                                  C79307 * C26495) *
               C79230) *
              C79009 * C79263)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C79307 *
                 C26495 +
             C26970 * C26496) *
                C79230 -
            (C29706 * C26496 +
             (C26497 * C1682 + C27761 + C27761 + C79306 * C1698) * C79307 *
                 C26495) *
                C79114) *
               C4921 +
           ((C29706 * C26495 + C31778 * C26496) * C79114 -
            (C26971 * C26496 + C26970 * C26495) * C79230) *
               C4922 +
           ((C26971 * C26495 + C31275 * C26496) * C79230 -
            ((C26497 * C8377 + C31766 + C31766 + C79306 * C8381) * C79307 *
                 C26496 +
             C31778 * C26495) *
                C79114) *
               C79259) *
              C79215 +
          ((((C26497 * C1681 + C27764 + C27764 + C79306 * C1697) * C79307 *
                 C26495 +
             C29707 * C26496) *
                C79114 -
            (C26972 * C26496 +
             (C26497 * C97 + C26503 + C26503 + C79306 * C109) * C79307 *
                 C26495) *
                C79230) *
               C4921 +
           ((C26972 * C26495 + C26973 * C26496) * C79230 -
            (C33190 * C26496 + C29707 * C26495) * C79114) *
               C4922 +
           ((C33190 * C26495 +
             (C26497 * C8378 + C33186 + C33186 + C79306 * C8382) * C79307 *
                 C26496) *
                C79114 -
            (C32542 * C26496 + C26973 * C26495) * C79230) *
               C79259) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eexy[48] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
                C26498 +
            (C26551 * C102 + C26495 * C173 + C26552 * C757 + C26496 * C867) *
                C79306) *
               C79307 * C79230 -
           ((C26552 * C3935 + C26496 * C4051 + C26551 * C1690 +
             C26495 * C1800) *
                C79306 +
            (C26552 * C3931 + C26496 * C4047 + C26551 * C1682 +
             C26495 * C1792) *
                C26498) *
               C79307 * C79114) *
              C79009 * C2605 +
          (((C26551 * C1681 + C26495 * C1791 + C26552 * C3932 +
             C26496 * C4048) *
                C26498 +
            (C26551 * C1689 + C26495 * C1799 + C26552 * C3936 +
             C26496 * C4052) *
                C79306) *
               C79307 * C79114 -
           ((C26552 * C756 + C26496 * C866 + C26551 * C103 + C26495 * C174) *
                C79306 +
            (C26552 * C748 + C26496 * C858 + C26551 * C97 + C26495 * C168) *
                C26498) *
               C79307 * C79230) *
              C79009 * C2606 +
          (((C26551 * C98 + C26495 * C169 + C26552 * C752 + C26496 * C862) *
                C26498 +
            (C26551 * C104 + C26495 * C175 + C26552 * C760 + C26496 * C870) *
                C79306) *
               C79307 * C79230 -
           ((C26552 * C3937 + C26496 * C4053 + C26551 * C1693 +
             C26495 * C1803) *
                C79306 +
            (C26552 * C3933 + C26496 * C4049 + C26551 * C1685 +
             C26495 * C1795) *
                C26498) *
               C79307 * C79114) *
              C79009 * C2607 +
          (((C26551 * C1687 + C26495 * C1797 + C26552 * C3934 +
             C26496 * C4050) *
                C26498 +
            (C26551 * C1695 + C26495 * C1805 + C26552 * C3938 +
             C26496 * C4054) *
                C79306) *
               C79307 * C79114 -
           ((C26552 * C762 + C26496 * C872 + C26551 * C105 + C26495 * C176) *
                C79306 +
            (C26552 * C754 + C26496 * C864 + C26551 * C99 + C26495 * C170) *
                C26498) *
               C79307 * C79230) *
              C79009 * C79263)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
                 C26498 +
             (C26551 * C102 + C26495 * C173 + C26552 * C757 + C26496 * C867) *
                 C79306) *
                C79307 * C79230 -
            ((C26552 * C3935 + C26496 * C4051 + C26551 * C1690 +
              C26495 * C1800) *
                 C79306 +
             (C26552 * C3931 + C26496 * C4047 + C26551 * C1682 +
              C26495 * C1792) *
                 C26498) *
                C79307 * C79114) *
               C4921 +
           (((C26551 * C3931 + C26495 * C4047 + C26552 * C6044 +
              C26496 * C6142) *
                 C26498 +
             (C26551 * C3935 + C26495 * C4051 + C26552 * C6050 +
              C26496 * C6148) *
                 C79306) *
                C79307 * C79114 -
            ((C26552 * C758 + C26496 * C868 + C26551 * C757 + C26495 * C867) *
                 C79306 +
             (C26552 * C750 + C26496 * C860 + C26551 * C749 + C26495 * C859) *
                 C26498) *
                C79307 * C79230) *
               C4922 +
           (((C26551 * C750 + C26495 * C860 + C26552 * C5568 + C26496 * C5626) *
                 C26498 +
             (C26551 * C758 + C26495 * C868 + C26552 * C5572 + C26496 * C5630) *
                 C79306) *
                C79307 * C79230 -
            ((C26552 * C8379 + C26496 * C8453 + C26551 * C6050 +
              C26495 * C6148) *
                 C79306 +
             (C26552 * C8377 + C26496 * C8451 + C26551 * C6044 +
              C26495 * C6142) *
                 C26498) *
                C79307 * C79114) *
               C79259) *
              C79215 +
          ((((C26551 * C1681 + C26495 * C1791 + C26552 * C3932 +
              C26496 * C4048) *
                 C26498 +
             (C26551 * C1689 + C26495 * C1799 + C26552 * C3936 +
              C26496 * C4052) *
                 C79306) *
                C79307 * C79114 -
            ((C26552 * C756 + C26496 * C866 + C26551 * C103 + C26495 * C174) *
                 C79306 +
             (C26552 * C748 + C26496 * C858 + C26551 * C97 + C26495 * C168) *
                 C26498) *
                C79307 * C79230) *
               C4921 +
           (((C26551 * C748 + C26495 * C858 + C26552 * C751 + C26496 * C861) *
                 C26498 +
             (C26551 * C756 + C26495 * C866 + C26552 * C759 + C26496 * C869) *
                 C79306) *
                C79307 * C79230 -
            ((C26552 * C6049 + C26496 * C6147 + C26551 * C3936 +
              C26495 * C4052) *
                 C79306 +
             (C26552 * C6043 + C26496 * C6141 + C26551 * C3932 +
              C26495 * C4048) *
                 C26498) *
                C79307 * C79114) *
               C4922 +
           (((C26551 * C6043 + C26495 * C6141 + C26552 * C8378 +
              C26496 * C8452) *
                 C26498 +
             (C26551 * C6049 + C26495 * C6147 + C26552 * C8380 +
              C26496 * C8454) *
                 C79306) *
                C79307 * C79114 -
            ((C26552 * C5571 + C26496 * C5629 + C26551 * C759 + C26495 * C869) *
                 C79306 +
             (C26552 * C5567 + C26496 * C5625 + C26551 * C751 + C26495 * C861) *
                 C26498) *
                C79307 * C79230) *
               C79259) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eexz[48] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C245 * C96 + C79307 * C246) * C26498 +
             (C245 * C102 + C79307 * C252) * C79306) *
                C26495 +
            (C27144 + C27145) * C26496) *
               C79230 -
           (((C245 * C3935 + C79307 * C4169) * C79306 +
             (C245 * C3931 + C79307 * C4165) * C26498) *
                C26496 +
            ((C245 * C1690 + C79307 * C1914) * C79306 +
             (C245 * C1682 + C79307 * C1906) * C26498) *
                C26495) *
               C79114) *
              C79009 * C2605 +
          (((C1939 * C26498 + C1938 * C79306) * C26495 +
            (C4182 * C26498 + C4183 * C79306) * C26496) *
               C79114 -
           ((C27133 + C27132) * C26496 +
            (C276 * C79306 + C275 * C26498) * C26495) *
               C79230) *
              C79009 * C2606 +
          (((C278 * C26498 + C277 * C79306) * C26495 +
            (C27136 + C27137) * C26496) *
               C79230 -
           ((C4184 * C79306 + C4185 * C26498) * C26496 +
            (C1943 * C79306 + C1942 * C26498) * C26495) *
               C79114) *
              C79009 * C2607 +
          (((C3408 * C26498 + C3407 * C79306) * C26495 +
            ((C245 * C3934 + C79307 * C4168) * C26498 +
             (C245 * C3938 + C79307 * C4172) * C79306) *
                C26496) *
               C79114 -
           ((C28582 + C28581) * C26496 +
            (C280 * C79306 + C279 * C26498) * C26495) *
               C79230) *
              C79009 * C79263)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C245 * C96 + C79307 * C246) * C26498 +
              (C245 * C102 + C79307 * C252) * C79306) *
                 C26495 +
             (C27144 + C27145) * C26496) *
                C79230 -
            ((C29915 + C29916) * C26496 +
             ((C245 * C1690 + C79307 * C1914) * C79306 +
              (C245 * C1682 + C79307 * C1906) * C26498) *
                 C26495) *
                C79114) *
               C4921 +
           (((C29916 + C29915) * C26495 + (C31952 + C31953) * C26496) * C79114 -
            ((C27146 + C27147) * C26496 + (C27145 + C27144) * C26495) *
                C79230) *
               C4922 +
           (((C27147 + C27146) * C26495 + (C31377 + C31378) * C26496) * C79230 -
            (((C245 * C8379 + C79307 * C8523) * C79306 +
              (C245 * C8377 + C79307 * C8521) * C26498) *
                 C26496 +
             (C31953 + C31952) * C26495) *
                C79114) *
               C79259) *
              C79215 +
          ((((C1939 * C26498 + C1938 * C79306) * C26495 +
             (C29909 + C29910) * C26496) *
                C79114 -
            ((C27133 + C27132) * C26496 +
             (C276 * C79306 + C275 * C26498) * C26495) *
                C79230) *
               C4921 +
           (((C27132 + C27133) * C26495 + (C27134 + C27135) * C26496) * C79230 -
            ((C33387 + C33388) * C26496 + (C29910 + C29909) * C26495) *
                C79114) *
               C4922 +
           (((C33388 + C33387) * C26495 +
             ((C245 * C8378 + C79307 * C8522) * C26498 +
              (C245 * C8380 + C79307 * C8524) * C79306) *
                 C26496) *
                C79114 -
            ((C32675 + C32676) * C26496 + (C27135 + C27134) * C26495) *
                C79230) *
               C79259) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eeyx[48] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C26498 * C96 + C79306 * C102) * C26551 +
                      (C26498 * C167 + C79306 * C324) * C26495 +
                      C27246 * C26552 + C27247 * C26496) *
                         C79307 * C79230 -
                     ((C26498 * C4047 + C79306 * C4283) * C26496 +
                      (C26498 * C3931 + C79306 * C3935) * C26552 +
                      (C26498 * C1792 + C79306 * C2020) * C26495 +
                      (C26498 * C1682 + C79306 * C1690) * C26551) *
                         C79307 * C79114) *
                        C79009 * C2605 +
                    (((C26498 * C1681 + C79306 * C1689) * C26551 +
                      (C26498 * C1791 + C79306 * C2019) * C26495 +
                      (C26498 * C3932 + C79306 * C3936) * C26552 +
                      (C26498 * C4048 + C79306 * C4284) * C26496) *
                         C79307 * C79114 -
                     (C27251 * C26496 + C27250 * C26552 +
                      (C26498 * C168 + C79306 * C325) * C26495 +
                      (C26498 * C97 + C79306 * C103) * C26551) *
                         C79307 * C79230) *
                        C79009 * C2606 +
                    (((C26498 * C98 + C79306 * C104) * C26551 +
                      (C26498 * C169 + C79306 * C326) * C26495 +
                      C27254 * C26552 + C27255 * C26496) *
                         C79307 * C79230 -
                     ((C26498 * C4049 + C79306 * C4285) * C26496 +
                      (C26498 * C3933 + C79306 * C3937) * C26552 +
                      (C26498 * C1795 + C79306 * C2023) * C26495 +
                      (C26498 * C1685 + C79306 * C1693) * C26551) *
                         C79307 * C79114) *
                        C79009 * C2607 +
                    (((C26498 * C1687 + C79306 * C1695) * C26551 +
                      (C26498 * C1797 + C79306 * C2025) * C26495 +
                      (C26498 * C3934 + C79306 * C3938) * C26552 +
                      (C26498 * C4050 + C79306 * C4286) * C26496) *
                         C79307 * C79114 -
                     (C28654 * C26496 + C28653 * C26552 +
                      (C26498 * C170 + C79306 * C327) * C26495 +
                      (C26498 * C99 + C79306 * C105) * C26551) *
                         C79307 * C79230) *
                        C79009 * C79263)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((((C26498 * C96 + C79306 * C102) * C26551 +
                       (C26498 * C167 + C79306 * C324) * C26495 +
                       C27246 * C26552 + C27247 * C26496) *
                          C79307 * C79230 -
                      (C30027 * C26496 + C30028 * C26552 +
                       (C26498 * C1792 + C79306 * C2020) * C26495 +
                       (C26498 * C1682 + C79306 * C1690) * C26551) *
                          C79307 * C79114) *
                         C4921 +
                     ((C30028 * C26551 + C30027 * C26495 + C32045 * C26552 +
                       C32046 * C26496) *
                          C79307 * C79114 -
                      (C27248 * C26496 + C27249 * C26552 + C27247 * C26495 +
                       C27246 * C26551) *
                          C79307 * C79230) *
                         C4922 +
                     ((C27249 * C26551 + C27248 * C26495 + C31432 * C26552 +
                       C31433 * C26496) *
                          C79307 * C79230 -
                      ((C26498 * C8451 + C79306 * C8591) * C26496 +
                       (C26498 * C8377 + C79306 * C8379) * C26552 +
                       C32046 * C26495 + C32045 * C26551) *
                          C79307 * C79114) *
                         C79259) *
                        C79215 +
                    ((((C26498 * C1681 + C79306 * C1689) * C26551 +
                       (C26498 * C1791 + C79306 * C2019) * C26495 +
                       C30029 * C26552 + C30030 * C26496) *
                          C79307 * C79114 -
                      (C27251 * C26496 + C27250 * C26552 +
                       (C26498 * C168 + C79306 * C325) * C26495 +
                       (C26498 * C97 + C79306 * C103) * C26551) *
                          C79307 * C79230) *
                         C4921 +
                     ((C27250 * C26551 + C27251 * C26495 + C27252 * C26552 +
                       C27253 * C26496) *
                          C79307 * C79230 -
                      (C33491 * C26496 + C33492 * C26552 + C30030 * C26495 +
                       C30029 * C26551) *
                          C79307 * C79114) *
                         C4922 +
                     ((C33492 * C26551 + C33491 * C26495 +
                       (C26498 * C8378 + C79306 * C8380) * C26552 +
                       (C26498 * C8452 + C79306 * C8592) * C26496) *
                          C79307 * C79114 -
                      (C32747 * C26496 + C32748 * C26552 + C27253 * C26495 +
                       C27252 * C26551) *
                          C79307 * C79230) *
                         C79259) *
                        C78992)) /
                      (p * q * std::sqrt(p + q));
    d2eeyy[48] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((C26679 * C96 + C26682 + C26682 + C26495 * C373 +
                      C26680 * C749 + C26683 + C26683 + C26496 * C1169) *
                         C79306 * C79307 * C79230 -
                     (C26680 * C3931 + C28068 + C28068 + C26496 * C4385 +
                      C26679 * C1682 + C28069 + C28069 + C26495 * C2102) *
                         C79306 * C79307 * C79114) *
                        C79009 * C2605 +
                    ((C26679 * C1681 + C28072 + C28072 + C26495 * C2101 +
                      C26680 * C3932 + C28073 + C28073 + C26496 * C4386) *
                         C79306 * C79307 * C79114 -
                     (C26680 * C748 + C26684 + C26684 + C26496 * C1168 +
                      C26679 * C97 + C26685 + C26685 + C26495 * C374) *
                         C79306 * C79307 * C79230) *
                        C79009 * C2606 +
                    ((C26679 * C98 + C26686 + C26686 + C26495 * C375 +
                      C26680 * C752 + C26687 + C26687 + C26496 * C1172) *
                         C79306 * C79307 * C79230 -
                     (C26680 * C3933 + C28076 + C28076 + C26496 * C4387 +
                      C26679 * C1685 + C28077 + C28077 + C26495 * C2105) *
                         C79306 * C79307 * C79114) *
                        C79009 * C2607 +
                    ((C26679 * C1687 + C29324 + C29324 + C26495 * C2107 +
                      C26680 * C3934 + C29325 + C29325 + C26496 * C4388) *
                         C79306 * C79307 * C79114 -
                     (C26680 * C754 + C26688 + C26688 + C26496 * C1174 +
                      C26679 * C99 + C26689 + C26689 + C26495 * C376) *
                         C79306 * C79307 * C79230) *
                        C79009 * C79263)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C26679 * C96 + C26682 + C26682 + C26495 * C373 +
                       C26680 * C749 + C26683 + C26683 + C26496 * C1169) *
                          C79306 * C79307 * C79230 -
                      (C26680 * C3931 + C28068 + C28068 + C26496 * C4385 +
                       C26679 * C1682 + C28069 + C28069 + C26495 * C2102) *
                          C79306 * C79307 * C79114) *
                         C4921 +
                     ((C26679 * C3931 + C30131 + C30131 + C26495 * C4385 +
                       C26680 * C6044 + C30132 + C30132 + C26496 * C6394) *
                          C79306 * C79307 * C79114 -
                      (C26680 * C750 + C27332 + C27332 + C26496 * C1170 +
                       C26679 * C749 + C27333 + C27333 + C26495 * C1169) *
                          C79306 * C79307 * C79230) *
                         C4922 +
                     ((C26679 * C750 + C27334 + C27334 + C26495 * C1170 +
                       C26680 * C5568 + C27335 + C27335 + C26496 * C5772) *
                          C79306 * C79307 * C79230 -
                      (C26680 * C8377 + C32126 + C32126 + C26496 * C8659 +
                       C26679 * C6044 + C32127 + C32127 + C26495 * C6394) *
                          C79306 * C79307 * C79114) *
                         C79259) *
                        C79215 +
                    (((C26679 * C1681 + C28072 + C28072 + C26495 * C2101 +
                       C26680 * C3932 + C28073 + C28073 + C26496 * C4386) *
                          C79306 * C79307 * C79114 -
                      (C26680 * C748 + C26684 + C26684 + C26496 * C1168 +
                       C26679 * C97 + C26685 + C26685 + C26495 * C374) *
                          C79306 * C79307 * C79230) *
                         C4921 +
                     ((C26679 * C748 + C27336 + C27336 + C26495 * C1168 +
                       C26680 * C751 + C27337 + C27337 + C26496 * C1171) *
                          C79306 * C79307 * C79230 -
                      (C26680 * C6043 + C30133 + C30133 + C26496 * C6393 +
                       C26679 * C3932 + C30134 + C30134 + C26495 * C4386) *
                          C79306 * C79307 * C79114) *
                         C4922 +
                     ((C26679 * C6043 + C33591 + C33591 + C26495 * C6393 +
                       C26680 * C8378 + C33592 + C33592 + C26496 * C8660) *
                          C79306 * C79307 * C79114 -
                      (C26680 * C5567 + C27338 + C27338 + C26496 * C5771 +
                       C26679 * C751 + C27339 + C27339 + C26495 * C1171) *
                          C79306 * C79307 * C79230) *
                         C79259) *
                        C78992)) /
                      (p * q * std::sqrt(p + q));
    d2eeyz[48] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C245 * C96 + C79307 * C246) * C26551 +
            (C245 * C167 + C79307 * C447) * C26495 + C27140 * C26552 +
            C27422 * C26496) *
               C79306 * C79230 -
           ((C245 * C4047 + C79307 * C4501) * C26496 +
            (C245 * C3931 + C79307 * C4165) * C26552 +
            (C245 * C1792 + C79307 * C2212) * C26495 +
            (C245 * C1682 + C79307 * C1906) * C26551) *
               C79306 * C79114) *
              C79009 * C2605 +
          ((C1939 * C26551 + C2232 * C26495 + C4182 * C26552 + C4512 * C26496) *
               C79306 * C79114 -
           (C1299 * C26496 + C1006 * C26552 + C466 * C26495 + C275 * C26551) *
               C79306 * C79230) *
              C79009 * C2606 +
          ((C278 * C26551 + C467 * C26495 + C1009 * C26552 + C1301 * C26496) *
               C79306 * C79230 -
           (C4513 * C26496 + C4185 * C26552 + C2234 * C26495 + C1942 * C26551) *
               C79306 * C79114) *
              C79009 * C2607 +
          ((C3408 * C26551 + C3619 * C26495 +
            (C245 * C3934 + C79307 * C4168) * C26552 +
            (C245 * C4050 + C79307 * C4504) * C26496) *
               C79306 * C79114 -
           (C2973 * C26496 + C2762 * C26552 + C468 * C26495 + C279 * C26551) *
               C79306 * C79230) *
              C79009 * C79263)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C245 * C96 + C79307 * C246) * C26551 +
             (C245 * C167 + C79307 * C447) * C26495 + C27140 * C26552 +
             C27422 * C26496) *
                C79306 * C79230 -
            (C30237 * C26496 + C29914 * C26552 +
             (C245 * C1792 + C79307 * C2212) * C26495 +
             (C245 * C1682 + C79307 * C1906) * C26551) *
                C79306 * C79114) *
               C4921 +
           ((C29914 * C26551 + C30237 * C26495 + C31946 * C26552 +
             C32212 * C26496) *
                C79306 * C79114 -
            (C27423 * C26496 + C27143 * C26552 + C27422 * C26495 +
             C27140 * C26551) *
                C79306 * C79230) *
               C4922 +
           ((C27143 * C26551 + C27423 * C26495 + C31373 * C26552 +
             C31530 * C26496) *
                C79306 * C79230 -
            ((C245 * C8451 + C79307 * C8729) * C26496 +
             (C245 * C8377 + C79307 * C8521) * C26552 + C32212 * C26495 +
             C31946 * C26551) *
                C79306 * C79114) *
               C79259) *
              C79215 +
          (((C1939 * C26551 + C2232 * C26495 + C4182 * C26552 +
             C4512 * C26496) *
                C79306 * C79114 -
            (C1299 * C26496 + C1006 * C26552 + C466 * C26495 + C275 * C26551) *
                C79306 * C79230) *
               C4921 +
           ((C1006 * C26551 + C1299 * C26495 + C1007 * C26552 +
             C1300 * C26496) *
                C79306 * C79230 -
            (C8001 * C26496 + C7694 * C26552 + C4512 * C26495 +
             C4182 * C26551) *
                C79306 * C79114) *
               C4922 +
           ((C7694 * C26551 + C8001 * C26495 +
             (C245 * C8378 + C79307 * C8522) * C26552 +
             (C245 * C8452 + C79307 * C8730) * C26496) *
                C79306 * C79114 -
            (C7165 * C26496 + C6954 * C26552 + C1300 * C26495 +
             C1007 * C26551) *
                C79306 * C79230) *
               C79259) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eezx[48] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C26498 * C96 + C79306 * C102) * C245 +
             (C26498 * C246 + C79306 * C515) * C79307) *
                C26495 +
            (C27498 + C27522) * C26496) *
               C79230 -
           (((C26498 * C4165 + C79306 * C4613) * C79307 +
             (C26498 * C3931 + C79306 * C3935) * C245) *
                C26496 +
            ((C26498 * C1906 + C79306 * C2314) * C79307 +
             (C26498 * C1682 + C79306 * C1690) * C245) *
                C26495) *
               C79114) *
              C79009 * C2605 +
          ((((C26498 * C1681 + C79306 * C1689) * C245 +
             (C26498 * C1905 + C79306 * C2313) * C79307) *
                C26495 +
            ((C26498 * C3932 + C79306 * C3936) * C245 +
             (C26498 * C4166 + C79306 * C4614) * C79307) *
                C26496) *
               C79114 -
           ((C27524 + C27504) * C26496 +
            ((C26498 * C247 + C79306 * C516) * C79307 +
             (C26498 * C97 + C79306 * C103) * C245) *
                C26495) *
               C79230) *
              C79009 * C2606 +
          ((((C26498 * C98 + C79306 * C104) * C245 +
             (C26498 * C248 + C79306 * C517) * C79307) *
                C26495 +
            (C27510 + C27526) * C26496) *
               C79230 -
           (((C26498 * C4167 + C79306 * C4615) * C79307 +
             (C26498 * C3933 + C79306 * C3937) * C245) *
                C26496 +
            ((C26498 * C1909 + C79306 * C2317) * C79307 +
             (C26498 * C1685 + C79306 * C1693) * C245) *
                C26495) *
               C79114) *
              C79009 * C2607 +
          ((((C26498 * C1687 + C79306 * C1695) * C245 +
             (C26498 * C1911 + C79306 * C2319) * C79307) *
                C26495 +
            ((C26498 * C3934 + C79306 * C3938) * C245 +
             (C26498 * C4168 + C79306 * C4616) * C79307) *
                C26496) *
               C79114 -
           ((C28859 + C28855) * C26496 +
            ((C26498 * C249 + C79306 * C518) * C79307 +
             (C26498 * C99 + C79306 * C105) * C245) *
                C26495) *
               C79230) *
              C79009 * C79263)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C26498 * C96 + C79306 * C102) * C245 +
              (C26498 * C246 + C79306 * C515) * C79307) *
                 C26495 +
             (C27498 + C27522) * C26496) *
                C79230 -
            ((C30348 + C30338) * C26496 +
             ((C26498 * C1906 + C79306 * C2314) * C79307 +
              (C26498 * C1682 + C79306 * C1690) * C245) *
                 C26495) *
                C79114) *
               C4921 +
           (((C30338 + C30348) * C26495 + (C32292 + C32302) * C26496) * C79114 -
            ((C27523 + C27503) * C26496 + (C27522 + C27498) * C26495) *
                C79230) *
               C4922 +
           (((C27503 + C27523) * C26495 + (C31575 + C31583) * C26496) * C79230 -
            (((C26498 * C8521 + C79306 * C8797) * C79307 +
              (C26498 * C8377 + C79306 * C8379) * C245) *
                 C26496 +
             (C32302 + C32292) * C26495) *
                C79114) *
               C79259) *
              C79215 +
          (((((C26498 * C1681 + C79306 * C1689) * C245 +
              (C26498 * C1905 + C79306 * C2313) * C79307) *
                 C26495 +
             (C30339 + C30349) * C26496) *
                C79114 -
            ((C27524 + C27504) * C26496 +
             ((C26498 * C247 + C79306 * C516) * C79307 +
              (C26498 * C97 + C79306 * C103) * C245) *
                 C26495) *
                C79230) *
               C4921 +
           (((C27504 + C27524) * C26495 + (C27507 + C27525) * C26496) * C79230 -
            ((C33793 + C33791) * C26496 + (C30349 + C30339) * C26495) *
                C79114) *
               C4922 +
           (((C33791 + C33793) * C26495 +
             ((C26498 * C8378 + C79306 * C8380) * C245 +
              (C26498 * C8522 + C79306 * C8798) * C79307) *
                 C26496) *
                C79114 -
            ((C32953 + C32951) * C26496 + (C27525 + C27507) * C26495) *
                C79230) *
               C79259) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eezy[48] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
                C245 +
            (C26551 * C246 + C26495 * C563 + C26552 * C973 + C26496 * C1463) *
                C79307) *
               C79306 * C79230 -
           ((C26552 * C4165 + C26496 * C4715 + C26551 * C1906 +
             C26495 * C2396) *
                C79307 +
            (C26552 * C3931 + C26496 * C4047 + C26551 * C1682 +
             C26495 * C1792) *
                C245) *
               C79306 * C79114) *
              C79009 * C2605 +
          (((C26551 * C1681 + C26495 * C1791 + C26552 * C3932 +
             C26496 * C4048) *
                C245 +
            (C26551 * C1905 + C26495 * C2395 + C26552 * C4166 +
             C26496 * C4716) *
                C79307) *
               C79306 * C79114 -
           ((C26552 * C972 + C26496 * C1462 + C26551 * C247 + C26495 * C564) *
                C79307 +
            (C26552 * C748 + C26496 * C858 + C26551 * C97 + C26495 * C168) *
                C245) *
               C79306 * C79230) *
              C79009 * C2606 +
          (((C26551 * C98 + C26495 * C169 + C26552 * C752 + C26496 * C862) *
                C245 +
            (C26551 * C248 + C26495 * C565 + C26552 * C976 + C26496 * C1466) *
                C79307) *
               C79306 * C79230 -
           ((C26552 * C4167 + C26496 * C4717 + C26551 * C1909 +
             C26495 * C2399) *
                C79307 +
            (C26552 * C3933 + C26496 * C4049 + C26551 * C1685 +
             C26495 * C1795) *
                C245) *
               C79306 * C79114) *
              C79009 * C2607 +
          (((C26551 * C1687 + C26495 * C1797 + C26552 * C3934 +
             C26496 * C4050) *
                C245 +
            (C26551 * C1911 + C26495 * C2401 + C26552 * C4168 +
             C26496 * C4718) *
                C79307) *
               C79306 * C79114 -
           ((C26552 * C978 + C26496 * C1468 + C26551 * C249 + C26495 * C566) *
                C79307 +
            (C26552 * C754 + C26496 * C864 + C26551 * C99 + C26495 * C170) *
                C245) *
               C79306 * C79230) *
              C79009 * C79263)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
                 C245 +
             (C26551 * C246 + C26495 * C563 + C26552 * C973 + C26496 * C1463) *
                 C79307) *
                C79306 * C79230 -
            ((C26552 * C4165 + C26496 * C4715 + C26551 * C1906 +
              C26495 * C2396) *
                 C79307 +
             (C26552 * C3931 + C26496 * C4047 + C26551 * C1682 +
              C26495 * C1792) *
                 C245) *
                C79306 * C79114) *
               C4921 +
           (((C26551 * C3931 + C26495 * C4047 + C26552 * C6044 +
              C26496 * C6142) *
                 C245 +
             (C26551 * C4165 + C26495 * C4715 + C26552 * C6228 +
              C26496 * C6640) *
                 C79307) *
                C79306 * C79114 -
            ((C26552 * C974 + C26496 * C1464 + C26551 * C973 + C26495 * C1463) *
                 C79307 +
             (C26552 * C750 + C26496 * C860 + C26551 * C749 + C26495 * C859) *
                 C245) *
                C79306 * C79230) *
               C4922 +
           (((C26551 * C750 + C26495 * C860 + C26552 * C5568 + C26496 * C5626) *
                 C245 +
             (C26551 * C974 + C26495 * C1464 + C26552 * C5676 +
              C26496 * C5914) *
                 C79307) *
                C79306 * C79230 -
            ((C26552 * C8521 + C26496 * C8865 + C26551 * C6228 +
              C26495 * C6640) *
                 C79307 +
             (C26552 * C8377 + C26496 * C8451 + C26551 * C6044 +
              C26495 * C6142) *
                 C245) *
                C79306 * C79114) *
               C79259) *
              C79215 +
          ((((C26551 * C1681 + C26495 * C1791 + C26552 * C3932 +
              C26496 * C4048) *
                 C245 +
             (C26551 * C1905 + C26495 * C2395 + C26552 * C4166 +
              C26496 * C4716) *
                 C79307) *
                C79306 * C79114 -
            ((C26552 * C972 + C26496 * C1462 + C26551 * C247 + C26495 * C564) *
                 C79307 +
             (C26552 * C748 + C26496 * C858 + C26551 * C97 + C26495 * C168) *
                 C245) *
                C79306 * C79230) *
               C4921 +
           (((C26551 * C748 + C26495 * C858 + C26552 * C751 + C26496 * C861) *
                 C245 +
             (C26551 * C972 + C26495 * C1462 + C26552 * C975 + C26496 * C1465) *
                 C79307) *
                C79306 * C79230 -
            ((C26552 * C6227 + C26496 * C6639 + C26551 * C4166 +
              C26495 * C4716) *
                 C79307 +
             (C26552 * C6043 + C26496 * C6141 + C26551 * C3932 +
              C26495 * C4048) *
                 C245) *
                C79306 * C79114) *
               C4922 +
           (((C26551 * C6043 + C26495 * C6141 + C26552 * C8378 +
              C26496 * C8452) *
                 C245 +
             (C26551 * C6227 + C26495 * C6639 + C26552 * C8522 +
              C26496 * C8866) *
                 C79307) *
                C79306 * C79114 -
            ((C26552 * C5675 + C26496 * C5913 + C26551 * C975 +
              C26495 * C1465) *
                 C79307 +
             (C26552 * C5567 + C26496 * C5625 + C26551 * C751 + C26495 * C861) *
                 C245) *
                C79306 * C79230) *
               C79259) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eezz[48] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C631 * C96 + C639 + C639 + C79307 * C632) * C26495 +
            C27684 * C26496) *
               C79306 * C79230 -
           ((C631 * C3931 + C4832 + C4832 + C79307 * C4827) * C26496 +
            (C631 * C1682 + C2509 + C2509 + C79307 * C2498) * C26495) *
               C79306 * C79114) *
              C79009 * C2605 +
          ((C2530 * C26495 + C4844 * C26496) * C79306 * C79114 -
           (C1597 * C26496 + C661 * C26495) * C79306 * C79230) *
              C79009 * C2606 +
          ((C662 * C26495 + C1599 * C26496) * C79306 * C79230 -
           (C4845 * C26496 + C2532 * C26495) * C79306 * C79114) *
              C79009 * C2607 +
          ((C3832 * C26495 +
            (C631 * C3934 + C4839 + C4839 + C79307 * C4830) * C26496) *
               C79306 * C79114 -
           (C3186 * C26496 + C663 * C26495) * C79306 * C79230) *
              C79009 * C79263)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C631 * C96 + C639 + C639 + C79307 * C632) * C26495 +
             C27684 * C26496) *
                C79306 * C79230 -
            (C30551 * C26496 +
             (C631 * C1682 + C2509 + C2509 + C79307 * C2498) * C26495) *
                C79306 * C79114) *
               C4921 +
           ((C30551 * C26495 + C32468 * C26496) * C79306 * C79114 -
            (C27685 * C26496 + C27684 * C26495) * C79306 * C79230) *
               C4922 +
           ((C27685 * C26495 + C31680 * C26496) * C79306 * C79230 -
            ((C631 * C8377 + C8936 + C8936 + C79307 * C8933) * C26496 +
             C32468 * C26495) *
                C79306 * C79114) *
               C79259) *
              C79215 +
          (((C2530 * C26495 + C4844 * C26496) * C79306 * C79114 -
            (C1597 * C26496 + C661 * C26495) * C79306 * C79230) *
               C4921 +
           ((C1597 * C26495 + C1598 * C26496) * C79306 * C79230 -
            (C8310 * C26496 + C4844 * C26495) * C79306 * C79114) *
               C4922 +
           ((C8310 * C26495 +
             (C631 * C8378 + C8937 + C8937 + C79307 * C8934) * C26496) *
                C79306 * C79114 -
            (C7378 * C26496 + C1598 * C26495) * C79306 * C79230) *
               C79259) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eexx[49] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C79307 * C26495 +
           (C26497 * C749 + C26501 + C26501 + C79306 * C765) * C79307 *
               C26496) *
              C79027 * C79009 * C87 -
          ((C26497 * C748 + C26502 + C26502 + C79306 * C764) * C79307 * C26496 +
           (C26497 * C97 + C26503 + C26503 + C79306 * C109) * C79307 * C26495) *
              C79027 * C79009 * C88 +
          ((C26497 * C98 + C26504 + C26504 + C79306 * C110) * C79307 * C26495 +
           (C26497 * C752 + C26505 + C26505 + C79306 * C768) * C79307 *
               C26496) *
              C79027 * C79009 * C89 -
          ((C26497 * C754 + C26506 + C26506 + C79306 * C770) * C79307 * C26496 +
           (C26497 * C99 + C26507 + C26507 + C79306 * C111) * C79307 * C26495) *
              C79027 * C79009 * C90 +
          ((C26497 * C100 + C26508 + C26508 + C79306 * C112) * C79307 * C26495 +
           (C26497 * C2609 + C26509 + C26509 + C79306 * C2611) * C79307 *
               C26496) *
              C79027 * C79009 * C91)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C79307 * C26495 +
            C26970 * C26496) *
               C79027 * C79300 -
           (C26971 * C26496 + C26970 * C26495) * C79027 * C79285 +
           (C26971 * C26495 +
            (C26497 * C5568 + C26939 + C26939 + C79306 * C5576) * C79307 *
                C26496) *
               C79027 * C79259) *
              C745 +
          ((C26972 * C26495 + C26973 * C26496) * C79027 * C79285 -
           (C26972 * C26496 + (C26497 * C97 + C26503 + C26503 + C79306 * C109) *
                                  C79307 * C26495) *
               C79027 * C79300 -
           ((C26497 * C5567 + C26945 + C26945 + C79306 * C5575) * C79307 *
                C26496 +
            C26973 * C26495) *
               C79027 * C79259) *
              C746 +
          (((C26497 * C98 + C26504 + C26504 + C79306 * C110) * C79307 * C26495 +
            C26974 * C26496) *
               C79027 * C79300 -
           (C26975 * C26496 + C26974 * C26495) * C79027 * C79285 +
           (C26975 * C26495 +
            (C26497 * C6801 + C26951 + C26951 + C79306 * C6803) * C79307 *
                C26496) *
               C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C79307 * C26495 +
            C26970 * C26496) *
               C79027 * C4921 -
           (C26971 * C26496 + C26970 * C26495) * C79027 * C4922 +
           (C26971 * C26495 +
            (C26497 * C5568 + C26939 + C26939 + C79306 * C5576) * C79307 *
                C26496) *
               C79027 * C79259) *
              C79297 +
          ((C26972 * C26495 + C26973 * C26496) * C79027 * C4922 -
           (C26972 * C26496 + (C26497 * C97 + C26503 + C26503 + C79306 * C109) *
                                  C79307 * C26495) *
               C79027 * C4921 -
           ((C26497 * C5567 + C26945 + C26945 + C79306 * C5575) * C79307 *
                C26496 +
            C26973 * C26495) *
               C79027 * C79259) *
              C79281 +
          (((C26497 * C98 + C26504 + C26504 + C79306 * C110) * C79307 * C26495 +
            C26974 * C26496) *
               C79027 * C4921 -
           (C26975 * C26496 + C26974 * C26495) * C79027 * C4922 +
           (C26975 * C26495 +
            (C26497 * C6801 + C26951 + C26951 + C79306 * C6803) * C79307 *
                C26496) *
               C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C79307 * C26495 +
           C26970 * C26496) *
              C79027 * C5561 -
          (C26971 * C26496 + C26970 * C26495) * C79027 * C5562 +
          (C26971 * C26495 + C31275 * C26496) * C79027 * C5563 -
          (C31276 * C26496 + C31275 * C26495) * C79027 * C5564 +
          (C31276 * C26495 +
           (C26497 * C31259 + C31268 + C31268 + C79306 * C31261) * C79307 *
               C26496) *
              C79027 * C5565) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eexy[49] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
               C26498 +
           (C26551 * C102 + C26495 * C173 + C26552 * C757 + C26496 * C867) *
               C79306) *
              C79307 * C79027 * C79009 * C87 -
          ((C26552 * C756 + C26496 * C866 + C26551 * C103 + C26495 * C174) *
               C79306 +
           (C26552 * C748 + C26496 * C858 + C26551 * C97 + C26495 * C168) *
               C26498) *
              C79307 * C79027 * C79009 * C88 +
          ((C26551 * C98 + C26495 * C169 + C26552 * C752 + C26496 * C862) *
               C26498 +
           (C26551 * C104 + C26495 * C175 + C26552 * C760 + C26496 * C870) *
               C79306) *
              C79307 * C79027 * C79009 * C89 -
          ((C26552 * C762 + C26496 * C872 + C26551 * C105 + C26495 * C176) *
               C79306 +
           (C26552 * C754 + C26496 * C864 + C26551 * C99 + C26495 * C170) *
               C26498) *
              C79307 * C79027 * C79009 * C90 +
          ((C26551 * C100 + C26495 * C171 + C26552 * C2609 + C26496 * C2680) *
               C26498 +
           (C26551 * C106 + C26495 * C177 + C26552 * C2610 + C26496 * C2681) *
               C79306) *
              C79307 * C79027 * C79009 * C91)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
                C26498 +
            (C26551 * C102 + C26495 * C173 + C26552 * C757 + C26496 * C867) *
                C79306) *
               C79307 * C79027 * C79300 -
           ((C26552 * C758 + C26496 * C868 + C26551 * C757 + C26495 * C867) *
                C79306 +
            (C26552 * C750 + C26496 * C860 + C26551 * C749 + C26495 * C859) *
                C26498) *
               C79307 * C79027 * C79285 +
           ((C26551 * C750 + C26495 * C860 + C26552 * C5568 + C26496 * C5626) *
                C26498 +
            (C26551 * C758 + C26495 * C868 + C26552 * C5572 + C26496 * C5630) *
                C79306) *
               C79307 * C79027 * C79259) *
              C745 +
          (((C26551 * C748 + C26495 * C858 + C26552 * C751 + C26496 * C861) *
                C26498 +
            (C26551 * C756 + C26495 * C866 + C26552 * C759 + C26496 * C869) *
                C79306) *
               C79307 * C79027 * C79285 -
           ((C26552 * C756 + C26496 * C866 + C26551 * C103 + C26495 * C174) *
                C79306 +
            (C26552 * C748 + C26496 * C858 + C26551 * C97 + C26495 * C168) *
                C26498) *
               C79307 * C79027 * C79300 -
           ((C26552 * C5571 + C26496 * C5629 + C26551 * C759 + C26495 * C869) *
                C79306 +
            (C26552 * C5567 + C26496 * C5625 + C26551 * C751 + C26495 * C861) *
                C26498) *
               C79307 * C79027 * C79259) *
              C746 +
          (((C26551 * C98 + C26495 * C169 + C26552 * C752 + C26496 * C862) *
                C26498 +
            (C26551 * C104 + C26495 * C175 + C26552 * C760 + C26496 * C870) *
                C79306) *
               C79307 * C79027 * C79300 -
           ((C26552 * C761 + C26496 * C871 + C26551 * C760 + C26495 * C870) *
                C79306 +
            (C26552 * C753 + C26496 * C863 + C26551 * C752 + C26495 * C862) *
                C26498) *
               C79307 * C79027 * C79285 +
           ((C26551 * C753 + C26495 * C863 + C26552 * C6801 + C26496 * C6872) *
                C26498 +
            (C26551 * C761 + C26495 * C871 + C26552 * C6802 + C26496 * C6873) *
                C79306) *
               C79307 * C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
                C26498 +
            (C26551 * C102 + C26495 * C173 + C26552 * C757 + C26496 * C867) *
                C79306) *
               C79307 * C79027 * C4921 -
           ((C26552 * C758 + C26496 * C868 + C26551 * C757 + C26495 * C867) *
                C79306 +
            (C26552 * C750 + C26496 * C860 + C26551 * C749 + C26495 * C859) *
                C26498) *
               C79307 * C79027 * C4922 +
           ((C26551 * C750 + C26495 * C860 + C26552 * C5568 + C26496 * C5626) *
                C26498 +
            (C26551 * C758 + C26495 * C868 + C26552 * C5572 + C26496 * C5630) *
                C79306) *
               C79307 * C79027 * C79259) *
              C79297 +
          (((C26551 * C748 + C26495 * C858 + C26552 * C751 + C26496 * C861) *
                C26498 +
            (C26551 * C756 + C26495 * C866 + C26552 * C759 + C26496 * C869) *
                C79306) *
               C79307 * C79027 * C4922 -
           ((C26552 * C756 + C26496 * C866 + C26551 * C103 + C26495 * C174) *
                C79306 +
            (C26552 * C748 + C26496 * C858 + C26551 * C97 + C26495 * C168) *
                C26498) *
               C79307 * C79027 * C4921 -
           ((C26552 * C5571 + C26496 * C5629 + C26551 * C759 + C26495 * C869) *
                C79306 +
            (C26552 * C5567 + C26496 * C5625 + C26551 * C751 + C26495 * C861) *
                C26498) *
               C79307 * C79027 * C79259) *
              C79281 +
          (((C26551 * C98 + C26495 * C169 + C26552 * C752 + C26496 * C862) *
                C26498 +
            (C26551 * C104 + C26495 * C175 + C26552 * C760 + C26496 * C870) *
                C79306) *
               C79307 * C79027 * C4921 -
           ((C26552 * C761 + C26496 * C871 + C26551 * C760 + C26495 * C870) *
                C79306 +
            (C26552 * C753 + C26496 * C863 + C26551 * C752 + C26495 * C862) *
                C26498) *
               C79307 * C79027 * C4922 +
           ((C26551 * C753 + C26495 * C863 + C26552 * C6801 + C26496 * C6872) *
                C26498 +
            (C26551 * C761 + C26495 * C871 + C26552 * C6802 + C26496 * C6873) *
                C79306) *
               C79307 * C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
               C26498 +
           (C26551 * C102 + C26495 * C173 + C26552 * C757 + C26496 * C867) *
               C79306) *
              C79307 * C79027 * C5561 -
          ((C26552 * C758 + C26496 * C868 + C26551 * C757 + C26495 * C867) *
               C79306 +
           (C26552 * C750 + C26496 * C860 + C26551 * C749 + C26495 * C859) *
               C26498) *
              C79307 * C79027 * C5562 +
          ((C26551 * C750 + C26495 * C860 + C26552 * C5568 + C26496 * C5626) *
               C26498 +
           (C26551 * C758 + C26495 * C868 + C26552 * C5572 + C26496 * C5630) *
               C79306) *
              C79307 * C79027 * C5563 -
          ((C26552 * C5573 + C26496 * C5631 + C26551 * C5572 + C26495 * C5630) *
               C79306 +
           (C26552 * C5569 + C26496 * C5627 + C26551 * C5568 + C26495 * C5626) *
               C26498) *
              C79307 * C79027 * C5564 +
          ((C26551 * C5569 + C26495 * C5627 + C26552 * C31259 +
            C26496 * C31318) *
               C26498 +
           (C26551 * C5573 + C26495 * C5631 + C26552 * C31260 +
            C26496 * C31319) *
               C79306) *
              C79307 * C79027 * C5565) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eexz[49] += (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                   ((((C245 * C96 + C79307 * C246) * C26498 +
                      (C245 * C102 + C79307 * C252) * C79306) *
                         C26495 +
                     ((C245 * C749 + C79307 * C973) * C26498 +
                      (C245 * C757 + C79307 * C981) * C79306) *
                         C26496) *
                        C79027 * C79009 * C87 -
                    ((C1005 * C79306 + C1006 * C26498) * C26496 +
                     (C276 * C79306 + C275 * C26498) * C26495) *
                        C79027 * C79009 * C88 +
                    ((C278 * C26498 + C277 * C79306) * C26495 +
                     (C1009 * C26498 + C1010 * C79306) * C26496) *
                        C79027 * C79009 * C89 -
                    ((C2761 * C79306 + C2762 * C26498) * C26496 +
                     (C280 * C79306 + C279 * C26498) * C26495) *
                        C79027 * C79009 * C90 +
                    ((C282 * C26498 + C281 * C79306) * C26495 +
                     ((C245 * C2609 + C79307 * C2754) * C26498 +
                      (C245 * C2610 + C79307 * C2755) * C79306) *
                         C26496) *
                        C79027 * C79009 * C91)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                   (((((C245 * C96 + C79307 * C246) * C26498 +
                       (C245 * C102 + C79307 * C252) * C79306) *
                          C26495 +
                      (C27144 + C27145) * C26496) *
                         C79027 * C79300 -
                     ((C27146 + C27147) * C26496 + (C27145 + C27144) * C26495) *
                         C79027 * C79285 +
                     ((C27147 + C27146) * C26495 +
                      ((C245 * C5568 + C79307 * C5676) * C26498 +
                       (C245 * C5572 + C79307 * C5680) * C79306) *
                          C26496) *
                         C79027 * C79259) *
                        C745 +
                    (((C27132 + C27133) * C26495 + (C27134 + C27135) * C26496) *
                         C79027 * C79285 -
                     ((C27133 + C27132) * C26496 +
                      (C276 * C79306 + C275 * C26498) * C26495) *
                         C79027 * C79300 -
                     ((C6953 * C79306 + C6954 * C26498) * C26496 +
                      (C27135 + C27134) * C26495) *
                         C79027 * C79259) *
                        C746 +
                    (((C278 * C26498 + C277 * C79306) * C26495 +
                      (C27136 + C27137) * C26496) *
                         C79027 * C79300 -
                     ((C27138 + C27139) * C26496 + (C27137 + C27136) * C26495) *
                         C79027 * C79285 +
                     ((C27139 + C27138) * C26495 +
                      ((C245 * C6801 + C79307 * C6946) * C26498 +
                       (C245 * C6802 + C79307 * C6947) * C79306) *
                          C26496) *
                         C79027 * C79259) *
                        C79253)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                   (((((C245 * C96 + C79307 * C246) * C26498 +
                       (C245 * C102 + C79307 * C252) * C79306) *
                          C26495 +
                      (C27144 + C27145) * C26496) *
                         C79027 * C4921 -
                     ((C27146 + C27147) * C26496 + (C27145 + C27144) * C26495) *
                         C79027 * C4922 +
                     ((C27147 + C27146) * C26495 +
                      ((C245 * C5568 + C79307 * C5676) * C26498 +
                       (C245 * C5572 + C79307 * C5680) * C79306) *
                          C26496) *
                         C79027 * C79259) *
                        C79297 +
                    (((C27132 + C27133) * C26495 + (C27134 + C27135) * C26496) *
                         C79027 * C4922 -
                     ((C27133 + C27132) * C26496 +
                      (C276 * C79306 + C275 * C26498) * C26495) *
                         C79027 * C4921 -
                     ((C6953 * C79306 + C6954 * C26498) * C26496 +
                      (C27135 + C27134) * C26495) *
                         C79027 * C79259) *
                        C79281 +
                    (((C278 * C26498 + C277 * C79306) * C26495 +
                      (C27136 + C27137) * C26496) *
                         C79027 * C4921 -
                     ((C27138 + C27139) * C26496 + (C27137 + C27136) * C26495) *
                         C79027 * C4922 +
                     ((C27139 + C27138) * C26495 +
                      ((C245 * C6801 + C79307 * C6946) * C26498 +
                       (C245 * C6802 + C79307 * C6947) * C79306) *
                          C26496) *
                         C79027 * C79259) *
                        C79253)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                   ((((C245 * C96 + C79307 * C246) * C26498 +
                      (C245 * C102 + C79307 * C252) * C79306) *
                         C26495 +
                     (C27144 + C27145) * C26496) *
                        C79027 * C5561 -
                    ((C27146 + C27147) * C26496 + (C27145 + C27144) * C26495) *
                        C79027 * C5562 +
                    ((C27147 + C27146) * C26495 + (C31377 + C31378) * C26496) *
                        C79027 * C5563 -
                    ((C31379 + C31380) * C26496 + (C31378 + C31377) * C26495) *
                        C79027 * C5564 +
                    ((C31380 + C31379) * C26495 +
                     ((C245 * C31259 + C79307 * C31362) * C26498 +
                      (C245 * C31260 + C79307 * C31363) * C79306) *
                         C26496) *
                        C79027 * C5565) *
                   C78981) /
                      (p * q * std::sqrt(p + q));
    d2eeyx[49] += (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                   (((C26498 * C96 + C79306 * C102) * C26551 +
                     (C26498 * C167 + C79306 * C324) * C26495 +
                     (C26498 * C749 + C79306 * C757) * C26552 +
                     (C26498 * C859 + C79306 * C1087) * C26496) *
                        C79307 * C79027 * C79009 * C87 -
                    ((C26498 * C858 + C79306 * C1086) * C26496 +
                     (C26498 * C748 + C79306 * C756) * C26552 +
                     (C26498 * C168 + C79306 * C325) * C26495 +
                     (C26498 * C97 + C79306 * C103) * C26551) *
                        C79307 * C79027 * C79009 * C88 +
                    ((C26498 * C98 + C79306 * C104) * C26551 +
                     (C26498 * C169 + C79306 * C326) * C26495 +
                     (C26498 * C752 + C79306 * C760) * C26552 +
                     (C26498 * C862 + C79306 * C1090) * C26496) *
                        C79307 * C79027 * C79009 * C89 -
                    ((C26498 * C864 + C79306 * C1092) * C26496 +
                     (C26498 * C754 + C79306 * C762) * C26552 +
                     (C26498 * C170 + C79306 * C327) * C26495 +
                     (C26498 * C99 + C79306 * C105) * C26551) *
                        C79307 * C79027 * C79009 * C90 +
                    ((C26498 * C100 + C79306 * C106) * C26551 +
                     (C26498 * C171 + C79306 * C328) * C26495 +
                     (C26498 * C2609 + C79306 * C2610) * C26552 +
                     (C26498 * C2680 + C79306 * C2828) * C26496) *
                        C79307 * C79027 * C79009 * C91)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                   ((((C26498 * C96 + C79306 * C102) * C26551 +
                      (C26498 * C167 + C79306 * C324) * C26495 +
                      C27246 * C26552 + C27247 * C26496) *
                         C79307 * C79027 * C79300 -
                     (C27248 * C26496 + C27249 * C26552 + C27247 * C26495 +
                      C27246 * C26551) *
                         C79307 * C79027 * C79285 +
                     (C27249 * C26551 + C27248 * C26495 +
                      (C26498 * C5568 + C79306 * C5572) * C26552 +
                      (C26498 * C5626 + C79306 * C5726) * C26496) *
                         C79307 * C79027 * C79259) *
                        C745 +
                    ((C27250 * C26551 + C27251 * C26495 + C27252 * C26552 +
                      C27253 * C26496) *
                         C79307 * C79027 * C79285 -
                     (C27251 * C26496 + C27250 * C26552 +
                      (C26498 * C168 + C79306 * C325) * C26495 +
                      (C26498 * C97 + C79306 * C103) * C26551) *
                         C79307 * C79027 * C79300 -
                     ((C26498 * C5625 + C79306 * C5725) * C26496 +
                      (C26498 * C5567 + C79306 * C5571) * C26552 +
                      C27253 * C26495 + C27252 * C26551) *
                         C79307 * C79027 * C79259) *
                        C746 +
                    (((C26498 * C98 + C79306 * C104) * C26551 +
                      (C26498 * C169 + C79306 * C326) * C26495 +
                      C27254 * C26552 + C27255 * C26496) *
                         C79307 * C79027 * C79300 -
                     (C27256 * C26496 + C27257 * C26552 + C27255 * C26495 +
                      C27254 * C26551) *
                         C79307 * C79027 * C79285 +
                     (C27257 * C26551 + C27256 * C26495 +
                      (C26498 * C6801 + C79306 * C6802) * C26552 +
                      (C26498 * C6872 + C79306 * C7020) * C26496) *
                         C79307 * C79027 * C79259) *
                        C79253)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                   ((((C26498 * C96 + C79306 * C102) * C26551 +
                      (C26498 * C167 + C79306 * C324) * C26495 +
                      C27246 * C26552 + C27247 * C26496) *
                         C79307 * C79027 * C4921 -
                     (C27248 * C26496 + C27249 * C26552 + C27247 * C26495 +
                      C27246 * C26551) *
                         C79307 * C79027 * C4922 +
                     (C27249 * C26551 + C27248 * C26495 +
                      (C26498 * C5568 + C79306 * C5572) * C26552 +
                      (C26498 * C5626 + C79306 * C5726) * C26496) *
                         C79307 * C79027 * C79259) *
                        C79297 +
                    ((C27250 * C26551 + C27251 * C26495 + C27252 * C26552 +
                      C27253 * C26496) *
                         C79307 * C79027 * C4922 -
                     (C27251 * C26496 + C27250 * C26552 +
                      (C26498 * C168 + C79306 * C325) * C26495 +
                      (C26498 * C97 + C79306 * C103) * C26551) *
                         C79307 * C79027 * C4921 -
                     ((C26498 * C5625 + C79306 * C5725) * C26496 +
                      (C26498 * C5567 + C79306 * C5571) * C26552 +
                      C27253 * C26495 + C27252 * C26551) *
                         C79307 * C79027 * C79259) *
                        C79281 +
                    (((C26498 * C98 + C79306 * C104) * C26551 +
                      (C26498 * C169 + C79306 * C326) * C26495 +
                      C27254 * C26552 + C27255 * C26496) *
                         C79307 * C79027 * C4921 -
                     (C27256 * C26496 + C27257 * C26552 + C27255 * C26495 +
                      C27254 * C26551) *
                         C79307 * C79027 * C4922 +
                     (C27257 * C26551 + C27256 * C26495 +
                      (C26498 * C6801 + C79306 * C6802) * C26552 +
                      (C26498 * C6872 + C79306 * C7020) * C26496) *
                         C79307 * C79027 * C79259) *
                        C79253)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                   (((C26498 * C96 + C79306 * C102) * C26551 +
                     (C26498 * C167 + C79306 * C324) * C26495 +
                     C27246 * C26552 + C27247 * C26496) *
                        C79307 * C79027 * C5561 -
                    (C27248 * C26496 + C27249 * C26552 + C27247 * C26495 +
                     C27246 * C26551) *
                        C79307 * C79027 * C5562 +
                    (C27249 * C26551 + C27248 * C26495 + C31432 * C26552 +
                     C31433 * C26496) *
                        C79307 * C79027 * C5563 -
                    (C31434 * C26496 + C31435 * C26552 + C31433 * C26495 +
                     C31432 * C26551) *
                        C79307 * C79027 * C5564 +
                    (C31435 * C26551 + C31434 * C26495 +
                     (C26498 * C31259 + C79306 * C31260) * C26552 +
                     (C26498 * C31318 + C79306 * C31422) * C26496) *
                        C79307 * C79027 * C5565) *
                   C78981) /
                      (p * q * std::sqrt(p + q));
    d2eeyy[49] += (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                   ((C26679 * C96 + C26682 + C26682 + C26495 * C373 +
                     C26680 * C749 + C26683 + C26683 + C26496 * C1169) *
                        C79306 * C79307 * C79027 * C79009 * C87 -
                    (C26680 * C748 + C26684 + C26684 + C26496 * C1168 +
                     C26679 * C97 + C26685 + C26685 + C26495 * C374) *
                        C79306 * C79307 * C79027 * C79009 * C88 +
                    (C26679 * C98 + C26686 + C26686 + C26495 * C375 +
                     C26680 * C752 + C26687 + C26687 + C26496 * C1172) *
                        C79306 * C79307 * C79027 * C79009 * C89 -
                    (C26680 * C754 + C26688 + C26688 + C26496 * C1174 +
                     C26679 * C99 + C26689 + C26689 + C26495 * C376) *
                        C79306 * C79307 * C79027 * C79009 * C90 +
                    (C26679 * C100 + C26690 + C26690 + C26495 * C377 +
                     C26680 * C2609 + C26691 + C26691 + C26496 * C2895) *
                        C79306 * C79307 * C79027 * C79009 * C91)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                   (((C26679 * C96 + C26682 + C26682 + C26495 * C373 +
                      C26680 * C749 + C26683 + C26683 + C26496 * C1169) *
                         C79306 * C79307 * C79027 * C79300 -
                     (C26680 * C750 + C27332 + C27332 + C26496 * C1170 +
                      C26679 * C749 + C27333 + C27333 + C26495 * C1169) *
                         C79306 * C79307 * C79027 * C79285 +
                     (C26679 * C750 + C27334 + C27334 + C26495 * C1170 +
                      C26680 * C5568 + C27335 + C27335 + C26496 * C5772) *
                         C79306 * C79307 * C79027 * C79259) *
                        C745 +
                    ((C26679 * C748 + C27336 + C27336 + C26495 * C1168 +
                      C26680 * C751 + C27337 + C27337 + C26496 * C1171) *
                         C79306 * C79307 * C79027 * C79285 -
                     (C26680 * C748 + C26684 + C26684 + C26496 * C1168 +
                      C26679 * C97 + C26685 + C26685 + C26495 * C374) *
                         C79306 * C79307 * C79027 * C79300 -
                     (C26680 * C5567 + C27338 + C27338 + C26496 * C5771 +
                      C26679 * C751 + C27339 + C27339 + C26495 * C1171) *
                         C79306 * C79307 * C79027 * C79259) *
                        C746 +
                    ((C26679 * C98 + C26686 + C26686 + C26495 * C375 +
                      C26680 * C752 + C26687 + C26687 + C26496 * C1172) *
                         C79306 * C79307 * C79027 * C79300 -
                     (C26680 * C753 + C27340 + C27340 + C26496 * C1173 +
                      C26679 * C752 + C27341 + C27341 + C26495 * C1172) *
                         C79306 * C79307 * C79027 * C79285 +
                     (C26679 * C753 + C27342 + C27342 + C26495 * C1173 +
                      C26680 * C6801 + C27343 + C27343 + C26496 * C7087) *
                         C79306 * C79307 * C79027 * C79259) *
                        C79253)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                   (((C26679 * C96 + C26682 + C26682 + C26495 * C373 +
                      C26680 * C749 + C26683 + C26683 + C26496 * C1169) *
                         C79306 * C79307 * C79027 * C4921 -
                     (C26680 * C750 + C27332 + C27332 + C26496 * C1170 +
                      C26679 * C749 + C27333 + C27333 + C26495 * C1169) *
                         C79306 * C79307 * C79027 * C4922 +
                     (C26679 * C750 + C27334 + C27334 + C26495 * C1170 +
                      C26680 * C5568 + C27335 + C27335 + C26496 * C5772) *
                         C79306 * C79307 * C79027 * C79259) *
                        C79297 +
                    ((C26679 * C748 + C27336 + C27336 + C26495 * C1168 +
                      C26680 * C751 + C27337 + C27337 + C26496 * C1171) *
                         C79306 * C79307 * C79027 * C4922 -
                     (C26680 * C748 + C26684 + C26684 + C26496 * C1168 +
                      C26679 * C97 + C26685 + C26685 + C26495 * C374) *
                         C79306 * C79307 * C79027 * C4921 -
                     (C26680 * C5567 + C27338 + C27338 + C26496 * C5771 +
                      C26679 * C751 + C27339 + C27339 + C26495 * C1171) *
                         C79306 * C79307 * C79027 * C79259) *
                        C79281 +
                    ((C26679 * C98 + C26686 + C26686 + C26495 * C375 +
                      C26680 * C752 + C26687 + C26687 + C26496 * C1172) *
                         C79306 * C79307 * C79027 * C4921 -
                     (C26680 * C753 + C27340 + C27340 + C26496 * C1173 +
                      C26679 * C752 + C27341 + C27341 + C26495 * C1172) *
                         C79306 * C79307 * C79027 * C4922 +
                     (C26679 * C753 + C27342 + C27342 + C26495 * C1173 +
                      C26680 * C6801 + C27343 + C27343 + C26496 * C7087) *
                         C79306 * C79307 * C79027 * C79259) *
                        C79253)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                   ((C26679 * C96 + C26682 + C26682 + C26495 * C373 +
                     C26680 * C749 + C26683 + C26683 + C26496 * C1169) *
                        C79306 * C79307 * C79027 * C5561 -
                    (C26680 * C750 + C27332 + C27332 + C26496 * C1170 +
                     C26679 * C749 + C27333 + C27333 + C26495 * C1169) *
                        C79306 * C79307 * C79027 * C5562 +
                    (C26679 * C750 + C27334 + C27334 + C26495 * C1170 +
                     C26680 * C5568 + C27335 + C27335 + C26496 * C5772) *
                        C79306 * C79307 * C79027 * C5563 -
                    (C26680 * C5569 + C31479 + C31479 + C26496 * C5773 +
                     C26679 * C5568 + C31480 + C31480 + C26495 * C5772) *
                        C79306 * C79307 * C79027 * C5564 +
                    (C26679 * C5569 + C31481 + C31481 + C26495 * C5773 +
                     C26680 * C31259 + C31482 + C31482 + C26496 * C31477) *
                        C79306 * C79307 * C79027 * C5565) *
                   C78981) /
                      (p * q * std::sqrt(p + q));
    d2eeyz[49] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C245 * C96 + C79307 * C246) * C26551 +
           (C245 * C167 + C79307 * C447) * C26495 +
           (C245 * C749 + C79307 * C973) * C26552 +
           (C245 * C859 + C79307 * C1279) * C26496) *
              C79306 * C79027 * C79009 * C87 -
          (C1299 * C26496 + C1006 * C26552 + C466 * C26495 + C275 * C26551) *
              C79306 * C79027 * C79009 * C88 +
          (C278 * C26551 + C467 * C26495 + C1009 * C26552 + C1301 * C26496) *
              C79306 * C79027 * C79009 * C89 -
          (C2973 * C26496 + C2762 * C26552 + C468 * C26495 + C279 * C26551) *
              C79306 * C79027 * C79009 * C90 +
          (C282 * C26551 + C469 * C26495 +
           (C245 * C2609 + C79307 * C2754) * C26552 +
           (C245 * C2680 + C79307 * C2968) * C26496) *
              C79306 * C79027 * C79009 * C91)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C245 * C96 + C79307 * C246) * C26551 +
            (C245 * C167 + C79307 * C447) * C26495 + C27140 * C26552 +
            C27422 * C26496) *
               C79306 * C79027 * C79300 -
           (C27423 * C26496 + C27143 * C26552 + C27422 * C26495 +
            C27140 * C26551) *
               C79306 * C79027 * C79285 +
           (C27143 * C26551 + C27423 * C26495 +
            (C245 * C5568 + C79307 * C5676) * C26552 +
            (C245 * C5626 + C79307 * C5822) * C26496) *
               C79306 * C79027 * C79259) *
              C745 +
          ((C1006 * C26551 + C1299 * C26495 + C1007 * C26552 + C1300 * C26496) *
               C79306 * C79027 * C79285 -
           (C1299 * C26496 + C1006 * C26552 + C466 * C26495 + C275 * C26551) *
               C79306 * C79027 * C79300 -
           (C7165 * C26496 + C6954 * C26552 + C1300 * C26495 + C1007 * C26551) *
               C79306 * C79027 * C79259) *
              C746 +
          ((C278 * C26551 + C467 * C26495 + C1009 * C26552 + C1301 * C26496) *
               C79306 * C79027 * C79300 -
           (C1302 * C26496 + C1012 * C26552 + C1301 * C26495 + C1009 * C26551) *
               C79306 * C79027 * C79285 +
           (C1012 * C26551 + C1302 * C26495 +
            (C245 * C6801 + C79307 * C6946) * C26552 +
            (C245 * C6872 + C79307 * C7160) * C26496) *
               C79306 * C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C245 * C96 + C79307 * C246) * C26551 +
            (C245 * C167 + C79307 * C447) * C26495 + C27140 * C26552 +
            C27422 * C26496) *
               C79306 * C79027 * C4921 -
           (C27423 * C26496 + C27143 * C26552 + C27422 * C26495 +
            C27140 * C26551) *
               C79306 * C79027 * C4922 +
           (C27143 * C26551 + C27423 * C26495 +
            (C245 * C5568 + C79307 * C5676) * C26552 +
            (C245 * C5626 + C79307 * C5822) * C26496) *
               C79306 * C79027 * C79259) *
              C79297 +
          ((C1006 * C26551 + C1299 * C26495 + C1007 * C26552 + C1300 * C26496) *
               C79306 * C79027 * C4922 -
           (C1299 * C26496 + C1006 * C26552 + C466 * C26495 + C275 * C26551) *
               C79306 * C79027 * C4921 -
           (C7165 * C26496 + C6954 * C26552 + C1300 * C26495 + C1007 * C26551) *
               C79306 * C79027 * C79259) *
              C79281 +
          ((C278 * C26551 + C467 * C26495 + C1009 * C26552 + C1301 * C26496) *
               C79306 * C79027 * C4921 -
           (C1302 * C26496 + C1012 * C26552 + C1301 * C26495 + C1009 * C26551) *
               C79306 * C79027 * C4922 +
           (C1012 * C26551 + C1302 * C26495 +
            (C245 * C6801 + C79307 * C6946) * C26552 +
            (C245 * C6872 + C79307 * C7160) * C26496) *
               C79306 * C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C245 * C96 + C79307 * C246) * C26551 +
           (C245 * C167 + C79307 * C447) * C26495 + C27140 * C26552 +
           C27422 * C26496) *
              C79306 * C79027 * C5561 -
          (C27423 * C26496 + C27143 * C26552 + C27422 * C26495 +
           C27140 * C26551) *
              C79306 * C79027 * C5562 +
          (C27143 * C26551 + C27423 * C26495 + C31373 * C26552 +
           C31530 * C26496) *
              C79306 * C79027 * C5563 -
          (C31531 * C26496 + C31376 * C26552 + C31530 * C26495 +
           C31373 * C26551) *
              C79306 * C79027 * C5564 +
          (C31376 * C26551 + C31531 * C26495 +
           (C245 * C31259 + C79307 * C31362) * C26552 +
           (C245 * C31318 + C79307 * C31524) * C26496) *
              C79306 * C79027 * C5565) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eezx[49] += (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                   ((((C26498 * C96 + C79306 * C102) * C245 +
                      (C26498 * C246 + C79306 * C515) * C79307) *
                         C26495 +
                     ((C26498 * C749 + C79306 * C757) * C245 +
                      (C26498 * C973 + C79306 * C1381) * C79307) *
                         C26496) *
                        C79027 * C79009 * C87 -
                    (((C26498 * C972 + C79306 * C1380) * C79307 +
                      (C26498 * C748 + C79306 * C756) * C245) *
                         C26496 +
                     ((C26498 * C247 + C79306 * C516) * C79307 +
                      (C26498 * C97 + C79306 * C103) * C245) *
                         C26495) *
                        C79027 * C79009 * C88 +
                    (((C26498 * C98 + C79306 * C104) * C245 +
                      (C26498 * C248 + C79306 * C517) * C79307) *
                         C26495 +
                     ((C26498 * C752 + C79306 * C760) * C245 +
                      (C26498 * C976 + C79306 * C1384) * C79307) *
                         C26496) *
                        C79027 * C79009 * C89 -
                    (((C26498 * C978 + C79306 * C1386) * C79307 +
                      (C26498 * C754 + C79306 * C762) * C245) *
                         C26496 +
                     ((C26498 * C249 + C79306 * C518) * C79307 +
                      (C26498 * C99 + C79306 * C105) * C245) *
                         C26495) *
                        C79027 * C79009 * C90 +
                    (((C26498 * C100 + C79306 * C106) * C245 +
                      (C26498 * C250 + C79306 * C519) * C79307) *
                         C26495 +
                     ((C26498 * C2609 + C79306 * C2610) * C245 +
                      (C26498 * C2754 + C79306 * C3040) * C79307) *
                         C26496) *
                        C79027 * C79009 * C91)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                   (((((C26498 * C96 + C79306 * C102) * C245 +
                       (C26498 * C246 + C79306 * C515) * C79307) *
                          C26495 +
                      (C27498 + C27522) * C26496) *
                         C79027 * C79300 -
                     ((C27523 + C27503) * C26496 + (C27522 + C27498) * C26495) *
                         C79027 * C79285 +
                     ((C27503 + C27523) * C26495 +
                      ((C26498 * C5568 + C79306 * C5572) * C245 +
                       (C26498 * C5676 + C79306 * C5868) * C79307) *
                          C26496) *
                         C79027 * C79259) *
                        C745 +
                    (((C27504 + C27524) * C26495 + (C27507 + C27525) * C26496) *
                         C79027 * C79285 -
                     ((C27524 + C27504) * C26496 +
                      ((C26498 * C247 + C79306 * C516) * C79307 +
                       (C26498 * C97 + C79306 * C103) * C245) *
                          C26495) *
                         C79027 * C79300 -
                     (((C26498 * C5675 + C79306 * C5867) * C79307 +
                       (C26498 * C5567 + C79306 * C5571) * C245) *
                          C26496 +
                      (C27525 + C27507) * C26495) *
                         C79027 * C79259) *
                        C746 +
                    ((((C26498 * C98 + C79306 * C104) * C245 +
                       (C26498 * C248 + C79306 * C517) * C79307) *
                          C26495 +
                      (C27510 + C27526) * C26496) *
                         C79027 * C79300 -
                     ((C27527 + C27515) * C26496 + (C27526 + C27510) * C26495) *
                         C79027 * C79285 +
                     ((C27515 + C27527) * C26495 +
                      ((C26498 * C6801 + C79306 * C6802) * C245 +
                       (C26498 * C6946 + C79306 * C7232) * C79307) *
                          C26496) *
                         C79027 * C79259) *
                        C79253)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                   (((((C26498 * C96 + C79306 * C102) * C245 +
                       (C26498 * C246 + C79306 * C515) * C79307) *
                          C26495 +
                      (C27498 + C27522) * C26496) *
                         C79027 * C4921 -
                     ((C27523 + C27503) * C26496 + (C27522 + C27498) * C26495) *
                         C79027 * C4922 +
                     ((C27503 + C27523) * C26495 +
                      ((C26498 * C5568 + C79306 * C5572) * C245 +
                       (C26498 * C5676 + C79306 * C5868) * C79307) *
                          C26496) *
                         C79027 * C79259) *
                        C79297 +
                    (((C27504 + C27524) * C26495 + (C27507 + C27525) * C26496) *
                         C79027 * C4922 -
                     ((C27524 + C27504) * C26496 +
                      ((C26498 * C247 + C79306 * C516) * C79307 +
                       (C26498 * C97 + C79306 * C103) * C245) *
                          C26495) *
                         C79027 * C4921 -
                     (((C26498 * C5675 + C79306 * C5867) * C79307 +
                       (C26498 * C5567 + C79306 * C5571) * C245) *
                          C26496 +
                      (C27525 + C27507) * C26495) *
                         C79027 * C79259) *
                        C79281 +
                    ((((C26498 * C98 + C79306 * C104) * C245 +
                       (C26498 * C248 + C79306 * C517) * C79307) *
                          C26495 +
                      (C27510 + C27526) * C26496) *
                         C79027 * C4921 -
                     ((C27527 + C27515) * C26496 + (C27526 + C27510) * C26495) *
                         C79027 * C4922 +
                     ((C27515 + C27527) * C26495 +
                      ((C26498 * C6801 + C79306 * C6802) * C245 +
                       (C26498 * C6946 + C79306 * C7232) * C79307) *
                          C26496) *
                         C79027 * C79259) *
                        C79253)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                   ((((C26498 * C96 + C79306 * C102) * C245 +
                      (C26498 * C246 + C79306 * C515) * C79307) *
                         C26495 +
                     (C27498 + C27522) * C26496) *
                        C79027 * C5561 -
                    ((C27523 + C27503) * C26496 + (C27522 + C27498) * C26495) *
                        C79027 * C5562 +
                    ((C27503 + C27523) * C26495 + (C31575 + C31583) * C26496) *
                        C79027 * C5563 -
                    ((C31584 + C31580) * C26496 + (C31583 + C31575) * C26495) *
                        C79027 * C5564 +
                    ((C31580 + C31584) * C26495 +
                     ((C26498 * C31259 + C79306 * C31260) * C245 +
                      (C26498 * C31362 + C79306 * C31573) * C79307) *
                         C26496) *
                        C79027 * C5565) *
                   C78981) /
                      (p * q * std::sqrt(p + q));
    d2eezy[49] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
               C245 +
           (C26551 * C246 + C26495 * C563 + C26552 * C973 + C26496 * C1463) *
               C79307) *
              C79306 * C79027 * C79009 * C87 -
          ((C26552 * C972 + C26496 * C1462 + C26551 * C247 + C26495 * C564) *
               C79307 +
           (C26552 * C748 + C26496 * C858 + C26551 * C97 + C26495 * C168) *
               C245) *
              C79306 * C79027 * C79009 * C88 +
          ((C26551 * C98 + C26495 * C169 + C26552 * C752 + C26496 * C862) *
               C245 +
           (C26551 * C248 + C26495 * C565 + C26552 * C976 + C26496 * C1466) *
               C79307) *
              C79306 * C79027 * C79009 * C89 -
          ((C26552 * C978 + C26496 * C1468 + C26551 * C249 + C26495 * C566) *
               C79307 +
           (C26552 * C754 + C26496 * C864 + C26551 * C99 + C26495 * C170) *
               C245) *
              C79306 * C79027 * C79009 * C90 +
          ((C26551 * C100 + C26495 * C171 + C26552 * C2609 + C26496 * C2680) *
               C245 +
           (C26551 * C250 + C26495 * C567 + C26552 * C2754 + C26496 * C3107) *
               C79307) *
              C79306 * C79027 * C79009 * C91)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
                C245 +
            (C26551 * C246 + C26495 * C563 + C26552 * C973 + C26496 * C1463) *
                C79307) *
               C79306 * C79027 * C79300 -
           ((C26552 * C974 + C26496 * C1464 + C26551 * C973 + C26495 * C1463) *
                C79307 +
            (C26552 * C750 + C26496 * C860 + C26551 * C749 + C26495 * C859) *
                C245) *
               C79306 * C79027 * C79285 +
           ((C26551 * C750 + C26495 * C860 + C26552 * C5568 + C26496 * C5626) *
                C245 +
            (C26551 * C974 + C26495 * C1464 + C26552 * C5676 + C26496 * C5914) *
                C79307) *
               C79306 * C79027 * C79259) *
              C745 +
          (((C26551 * C748 + C26495 * C858 + C26552 * C751 + C26496 * C861) *
                C245 +
            (C26551 * C972 + C26495 * C1462 + C26552 * C975 + C26496 * C1465) *
                C79307) *
               C79306 * C79027 * C79285 -
           ((C26552 * C972 + C26496 * C1462 + C26551 * C247 + C26495 * C564) *
                C79307 +
            (C26552 * C748 + C26496 * C858 + C26551 * C97 + C26495 * C168) *
                C245) *
               C79306 * C79027 * C79300 -
           ((C26552 * C5675 + C26496 * C5913 + C26551 * C975 + C26495 * C1465) *
                C79307 +
            (C26552 * C5567 + C26496 * C5625 + C26551 * C751 + C26495 * C861) *
                C245) *
               C79306 * C79027 * C79259) *
              C746 +
          (((C26551 * C98 + C26495 * C169 + C26552 * C752 + C26496 * C862) *
                C245 +
            (C26551 * C248 + C26495 * C565 + C26552 * C976 + C26496 * C1466) *
                C79307) *
               C79306 * C79027 * C79300 -
           ((C26552 * C977 + C26496 * C1467 + C26551 * C976 + C26495 * C1466) *
                C79307 +
            (C26552 * C753 + C26496 * C863 + C26551 * C752 + C26495 * C862) *
                C245) *
               C79306 * C79027 * C79285 +
           ((C26551 * C753 + C26495 * C863 + C26552 * C6801 + C26496 * C6872) *
                C245 +
            (C26551 * C977 + C26495 * C1467 + C26552 * C6946 + C26496 * C7299) *
                C79307) *
               C79306 * C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
                C245 +
            (C26551 * C246 + C26495 * C563 + C26552 * C973 + C26496 * C1463) *
                C79307) *
               C79306 * C79027 * C4921 -
           ((C26552 * C974 + C26496 * C1464 + C26551 * C973 + C26495 * C1463) *
                C79307 +
            (C26552 * C750 + C26496 * C860 + C26551 * C749 + C26495 * C859) *
                C245) *
               C79306 * C79027 * C4922 +
           ((C26551 * C750 + C26495 * C860 + C26552 * C5568 + C26496 * C5626) *
                C245 +
            (C26551 * C974 + C26495 * C1464 + C26552 * C5676 + C26496 * C5914) *
                C79307) *
               C79306 * C79027 * C79259) *
              C79297 +
          (((C26551 * C748 + C26495 * C858 + C26552 * C751 + C26496 * C861) *
                C245 +
            (C26551 * C972 + C26495 * C1462 + C26552 * C975 + C26496 * C1465) *
                C79307) *
               C79306 * C79027 * C4922 -
           ((C26552 * C972 + C26496 * C1462 + C26551 * C247 + C26495 * C564) *
                C79307 +
            (C26552 * C748 + C26496 * C858 + C26551 * C97 + C26495 * C168) *
                C245) *
               C79306 * C79027 * C4921 -
           ((C26552 * C5675 + C26496 * C5913 + C26551 * C975 + C26495 * C1465) *
                C79307 +
            (C26552 * C5567 + C26496 * C5625 + C26551 * C751 + C26495 * C861) *
                C245) *
               C79306 * C79027 * C79259) *
              C79281 +
          (((C26551 * C98 + C26495 * C169 + C26552 * C752 + C26496 * C862) *
                C245 +
            (C26551 * C248 + C26495 * C565 + C26552 * C976 + C26496 * C1466) *
                C79307) *
               C79306 * C79027 * C4921 -
           ((C26552 * C977 + C26496 * C1467 + C26551 * C976 + C26495 * C1466) *
                C79307 +
            (C26552 * C753 + C26496 * C863 + C26551 * C752 + C26495 * C862) *
                C245) *
               C79306 * C79027 * C4922 +
           ((C26551 * C753 + C26495 * C863 + C26552 * C6801 + C26496 * C6872) *
                C245 +
            (C26551 * C977 + C26495 * C1467 + C26552 * C6946 + C26496 * C7299) *
                C79307) *
               C79306 * C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C26551 * C96 + C26495 * C167 + C26552 * C749 + C26496 * C859) *
               C245 +
           (C26551 * C246 + C26495 * C563 + C26552 * C973 + C26496 * C1463) *
               C79307) *
              C79306 * C79027 * C5561 -
          ((C26552 * C974 + C26496 * C1464 + C26551 * C973 + C26495 * C1463) *
               C79307 +
           (C26552 * C750 + C26496 * C860 + C26551 * C749 + C26495 * C859) *
               C245) *
              C79306 * C79027 * C5562 +
          ((C26551 * C750 + C26495 * C860 + C26552 * C5568 + C26496 * C5626) *
               C245 +
           (C26551 * C974 + C26495 * C1464 + C26552 * C5676 + C26496 * C5914) *
               C79307) *
              C79306 * C79027 * C5563 -
          ((C26552 * C5677 + C26496 * C5915 + C26551 * C5676 + C26495 * C5914) *
               C79307 +
           (C26552 * C5569 + C26496 * C5627 + C26551 * C5568 + C26495 * C5626) *
               C245) *
              C79306 * C79027 * C5564 +
          ((C26551 * C5569 + C26495 * C5627 + C26552 * C31259 +
            C26496 * C31318) *
               C245 +
           (C26551 * C5677 + C26495 * C5915 + C26552 * C31362 +
            C26496 * C31626) *
               C79307) *
              C79306 * C79027 * C5565) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eezz[49] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C631 * C96 + C639 + C639 + C79307 * C632) * C26495 +
           (C631 * C749 + C1576 + C1576 + C79307 * C1565) * C26496) *
              C79306 * C79027 * C79009 * C87 -
          (C1597 * C26496 + C661 * C26495) * C79306 * C79027 * C79009 * C88 +
          (C662 * C26495 + C1599 * C26496) * C79306 * C79027 * C79009 * C89 -
          (C3186 * C26496 + C663 * C26495) * C79306 * C79027 * C79009 * C90 +
          (C664 * C26495 +
           (C631 * C2609 + C3183 + C3183 + C79307 * C3179) * C26496) *
              C79306 * C79027 * C79009 * C91)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C631 * C96 + C639 + C639 + C79307 * C632) * C26495 +
            C27684 * C26496) *
               C79306 * C79027 * C79300 -
           (C27685 * C26496 + C27684 * C26495) * C79306 * C79027 * C79285 +
           (C27685 * C26495 +
            (C631 * C5568 + C5965 + C5965 + C79307 * C5960) * C26496) *
               C79306 * C79027 * C79259) *
              C745 +
          ((C1597 * C26495 + C1598 * C26496) * C79306 * C79027 * C79285 -
           (C1597 * C26496 + C661 * C26495) * C79306 * C79027 * C79300 -
           (C7378 * C26496 + C1598 * C26495) * C79306 * C79027 * C79259) *
              C746 +
          ((C662 * C26495 + C1599 * C26496) * C79306 * C79027 * C79300 -
           (C1600 * C26496 + C1599 * C26495) * C79306 * C79027 * C79285 +
           (C1600 * C26495 +
            (C631 * C6801 + C7375 + C7375 + C79307 * C7371) * C26496) *
               C79306 * C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C631 * C96 + C639 + C639 + C79307 * C632) * C26495 +
            C27684 * C26496) *
               C79306 * C79027 * C4921 -
           (C27685 * C26496 + C27684 * C26495) * C79306 * C79027 * C4922 +
           (C27685 * C26495 +
            (C631 * C5568 + C5965 + C5965 + C79307 * C5960) * C26496) *
               C79306 * C79027 * C79259) *
              C79297 +
          ((C1597 * C26495 + C1598 * C26496) * C79306 * C79027 * C4922 -
           (C1597 * C26496 + C661 * C26495) * C79306 * C79027 * C4921 -
           (C7378 * C26496 + C1598 * C26495) * C79306 * C79027 * C79259) *
              C79281 +
          ((C662 * C26495 + C1599 * C26496) * C79306 * C79027 * C4921 -
           (C1600 * C26496 + C1599 * C26495) * C79306 * C79027 * C4922 +
           (C1600 * C26495 +
            (C631 * C6801 + C7375 + C7375 + C79307 * C7371) * C26496) *
               C79306 * C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C631 * C96 + C639 + C639 + C79307 * C632) * C26495 +
           C27684 * C26496) *
              C79306 * C79027 * C5561 -
          (C27685 * C26496 + C27684 * C26495) * C79306 * C79027 * C5562 +
          (C27685 * C26495 + C31680 * C26496) * C79306 * C79027 * C5563 -
          (C31681 * C26496 + C31680 * C26495) * C79306 * C79027 * C5564 +
          (C31681 * C26495 +
           (C631 * C31259 + C31675 + C31675 + C79307 * C31669) * C26496) *
              C79306 * C79027 * C5565) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eexx[50] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C52053 +
            C53184 * C52054) *
               C79308 * C79027 * C79068 -
           (C29703 * C52054 + C26964 * C52053) * C79308 * C79027 * C79075 +
           (C26965 * C52053 + C31775 * C52054) * C79308 * C79027 * C15083) *
              C78986 +
          ((C26966 * C52053 + C29704 * C52054) * C79308 * C79027 * C79075 -
           (C53186 * C52054 +
            (C26497 * C97 + C26503 + C26503 + C79306 * C109) * C52053) *
               C79308 * C79027 * C79068 -
           (C33189 * C52054 + C26967 * C52053) * C79308 * C79027 * C15083) *
              C78995 +
          (((C26497 * C98 + C26504 + C26504 + C79306 * C110) * C52053 +
            C53188 * C52054) *
               C79308 * C79027 * C79068 -
           (C29705 * C52054 + C26968 * C52053) * C79308 * C79027 * C79075 +
           (C26969 * C52053 +
            (C26497 * C7477 + C29696 + C29696 + C79306 * C7479) * C52054) *
               C79308 * C79027 * C15083) *
              C15086)) /
        (p * q * std::sqrt(p + q));
    d2eexy[50] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C166 * C96 + C79308 * C167) * C26498 +
                       (C166 * C102 + C79308 * C173) * C79306) *
                          C52053 +
                      (C53284 + C53285) * C52054) *
                         C79027 * C79068 -
                     ((C55325 + C55324) * C52054 +
                      ((C166 * C757 + C79308 * C867) * C79306 +
                       (C166 * C749 + C79308 * C859) * C26498) *
                          C52053) *
                         C79027 * C79075 +
                     (((C166 * C750 + C79308 * C860) * C26498 +
                       (C166 * C758 + C79308 * C868) * C79306) *
                          C52053 +
                      (C57252 + C57253) * C52054) *
                         C79027 * C15083) *
                        C78986 +
                    (((C892 * C26498 + C891 * C79306) * C52053 +
                      (C55318 + C55319) * C52054) *
                         C79027 * C79075 -
                     ((C53273 + C53272) * C52054 +
                      (C197 * C79306 + C196 * C26498) * C52053) *
                         C79027 * C79068 -
                     ((C58607 + C58606) * C52054 +
                      (C894 * C79306 + C893 * C26498) * C52053) *
                         C79027 * C15083) *
                        C78995 +
                    (((C199 * C26498 + C198 * C79306) * C52053 +
                      (C53276 + C53277) * C52054) *
                         C79027 * C79068 -
                     ((C55321 + C55320) * C52054 +
                      (C896 * C79306 + C895 * C26498) * C52053) *
                         C79027 * C79075 +
                     ((C898 * C26498 + C897 * C79306) * C52053 +
                      ((C166 * C7477 + C79308 * C7580) * C26498 +
                       (C166 * C7478 + C79308 * C7581) * C79306) *
                          C52054) *
                         C79027 * C15083) *
                        C15086)) /
                  (p * q * std::sqrt(p + q));
    d2eexz[50] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
                C26498 +
            (C52140 * C102 + C52053 * C252 + C52141 * C1690 + C52054 * C1914) *
                C79306) *
               C79308 * C79027 * C79068 -
           ((C52141 * C3935 + C52054 * C4169 + C52140 * C757 + C52053 * C981) *
                C79306 +
            (C52141 * C3931 + C52054 * C4165 + C52140 * C749 + C52053 * C973) *
                C26498) *
               C79308 * C79027 * C79075 +
           ((C52140 * C750 + C52053 * C974 + C52141 * C6044 + C52054 * C6228) *
                C26498 +
            (C52140 * C758 + C52053 * C982 + C52141 * C6050 + C52054 * C6234) *
                C79306) *
               C79308 * C79027 * C15083) *
              C78986 +
          (((C52140 * C748 + C52053 * C972 + C52141 * C3932 + C52054 * C4166) *
                C26498 +
            (C52140 * C756 + C52053 * C980 + C52141 * C3936 + C52054 * C4170) *
                C79306) *
               C79308 * C79027 * C79075 -
           ((C52141 * C1689 + C52054 * C1913 + C52140 * C103 + C52053 * C253) *
                C79306 +
            (C52141 * C1681 + C52054 * C1905 + C52140 * C97 + C52053 * C247) *
                C26498) *
               C79308 * C79027 * C79068 -
           ((C52141 * C6049 + C52054 * C6233 + C52140 * C759 + C52053 * C983) *
                C79306 +
            (C52141 * C6043 + C52054 * C6227 + C52140 * C751 + C52053 * C975) *
                C26498) *
               C79308 * C79027 * C15083) *
              C78995 +
          (((C52140 * C98 + C52053 * C248 + C52141 * C1685 + C52054 * C1909) *
                C26498 +
            (C52140 * C104 + C52053 * C254 + C52141 * C1693 + C52054 * C1917) *
                C79306) *
               C79308 * C79027 * C79068 -
           ((C52141 * C3937 + C52054 * C4171 + C52140 * C760 + C52053 * C984) *
                C79306 +
            (C52141 * C3933 + C52054 * C4167 + C52140 * C752 + C52053 * C976) *
                C26498) *
               C79308 * C79027 * C79075 +
           ((C52140 * C753 + C52053 * C977 + C52141 * C7477 + C52054 * C7686) *
                C26498 +
            (C52140 * C761 + C52053 * C985 + C52141 * C7478 + C52054 * C7687) *
                C79306) *
               C79308 * C79027 * C15083) *
              C15086)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[50] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C26498 * C96 + C79306 * C102) * C166 +
                       (C26498 * C167 + C79306 * C324) * C79308) *
                          C52053 +
                      (C53472 + C53473) * C52054) *
                         C79027 * C79068 -
                     ((C55523 + C55522) * C52054 +
                      (C27247 * C79308 + C27246 * C166) * C52053) *
                         C79027 * C79075 +
                     ((C27249 * C166 + C27248 * C79308) * C52053 +
                      (C57406 + C57407) * C52054) *
                         C79027 * C15083) *
                        C78986 +
                    (((C27250 * C166 + C27251 * C79308) * C52053 +
                      (C55524 + C55525) * C52054) *
                         C79027 * C79075 -
                     ((C53477 + C53476) * C52054 +
                      ((C26498 * C168 + C79306 * C325) * C79308 +
                       (C26498 * C97 + C79306 * C103) * C166) *
                          C52053) *
                         C79027 * C79068 -
                     ((C58805 + C58804) * C52054 +
                      (C27253 * C79308 + C27252 * C166) * C52053) *
                         C79027 * C15083) *
                        C78995 +
                    ((((C26498 * C98 + C79306 * C104) * C166 +
                       (C26498 * C169 + C79306 * C326) * C79308) *
                          C52053 +
                      (C53480 + C53481) * C52054) *
                         C79027 * C79068 -
                     ((C55527 + C55526) * C52054 +
                      (C27255 * C79308 + C27254 * C166) * C52053) *
                         C79027 * C79075 +
                     ((C27257 * C166 + C27256 * C79308) * C52053 +
                      ((C26498 * C7477 + C79306 * C7478) * C166 +
                       (C26498 * C7580 + C79306 * C7792) * C79308) *
                          C52054) *
                         C79027 * C15083) *
                        C15086)) /
                  (p * q * std::sqrt(p + q));
    d2eeyy[50] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C372 * C96 + C380 + C380 + C79308 * C373) * C79306 * C52053 +
            C53572 * C52054) *
               C79027 * C79068 -
           (C55633 * C52054 +
            (C372 * C749 + C1180 + C1180 + C79308 * C1169) * C79306 * C52053) *
               C79027 * C79075 +
           ((C372 * C750 + C1181 + C1181 + C79308 * C1170) * C79306 * C52053 +
            C57501 * C52054) *
               C79027 * C15083) *
              C78986 +
          ((C1201 * C79306 * C52053 + C55628 * C52054) * C79027 * C79075 -
           (C53562 * C52054 + C402 * C79306 * C52053) * C79027 * C79068 -
           (C58904 * C52054 + C1202 * C79306 * C52053) * C79027 * C15083) *
              C78995 +
          ((C403 * C79306 * C52053 + C53564 * C52054) * C79027 * C79068 -
           (C55629 * C52054 + C1203 * C79306 * C52053) * C79027 * C79075 +
           (C1204 * C79306 * C52053 +
            (C372 * C7477 + C7895 + C7895 + C79308 * C7891) * C79306 * C52054) *
               C79027 * C15083) *
              C15086)) /
        (p * q * std::sqrt(p + q));
    d2eeyz[50] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
                C166 +
            (C52140 * C167 + C52053 * C447 + C52141 * C1792 + C52054 * C2212) *
                C79308) *
               C79306 * C79027 * C79068 -
           ((C52141 * C4047 + C52054 * C4501 + C52140 * C859 + C52053 * C1279) *
                C79308 +
            (C52141 * C3931 + C52054 * C4165 + C52140 * C749 + C52053 * C973) *
                C166) *
               C79306 * C79027 * C79075 +
           ((C52140 * C750 + C52053 * C974 + C52141 * C6044 + C52054 * C6228) *
                C166 +
            (C52140 * C860 + C52053 * C1280 + C52141 * C6142 + C52054 * C6480) *
                C79308) *
               C79306 * C79027 * C15083) *
              C78986 +
          (((C52140 * C748 + C52053 * C972 + C52141 * C3932 + C52054 * C4166) *
                C166 +
            (C52140 * C858 + C52053 * C1278 + C52141 * C4048 + C52054 * C4502) *
                C79308) *
               C79306 * C79027 * C79075 -
           ((C52141 * C1791 + C52054 * C2211 + C52140 * C168 + C52053 * C448) *
                C79308 +
            (C52141 * C1681 + C52054 * C1905 + C52140 * C97 + C52053 * C247) *
                C166) *
               C79306 * C79027 * C79068 -
           ((C52141 * C6141 + C52054 * C6479 + C52140 * C861 + C52053 * C1281) *
                C79308 +
            (C52141 * C6043 + C52054 * C6227 + C52140 * C751 + C52053 * C975) *
                C166) *
               C79306 * C79027 * C15083) *
              C78995 +
          (((C52140 * C98 + C52053 * C248 + C52141 * C1685 + C52054 * C1909) *
                C166 +
            (C52140 * C169 + C52053 * C449 + C52141 * C1795 + C52054 * C2215) *
                C79308) *
               C79306 * C79027 * C79068 -
           ((C52141 * C4049 + C52054 * C4503 + C52140 * C862 + C52053 * C1282) *
                C79308 +
            (C52141 * C3933 + C52054 * C4167 + C52140 * C752 + C52053 * C976) *
                C166) *
               C79306 * C79027 * C79075 +
           ((C52140 * C753 + C52053 * C977 + C52141 * C7477 + C52054 * C7686) *
                C166 +
            (C52140 * C863 + C52053 * C1283 + C52141 * C7580 + C52054 * C7996) *
                C79308) *
               C79306 * C79027 * C15083) *
              C15086)) /
        (p * q * std::sqrt(p + q));
    d2eezx[50] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C26498 * C96 + C79306 * C102) * C52140 +
                      (C26498 * C246 + C79306 * C515) * C52053 +
                      C53460 * C52141 + C53734 * C52054) *
                         C79308 * C79027 * C79068 -
                     (C30345 * C52054 + C30028 * C52141 + C27516 * C52053 +
                      C27246 * C52140) *
                         C79308 * C79027 * C79075 +
                     (C27249 * C52140 + C27517 * C52053 + C32045 * C52141 +
                      C32299 * C52054) *
                         C79308 * C79027 * C15083) *
                        C78986 +
                    ((C27250 * C52140 + C27518 * C52053 + C30029 * C52141 +
                      C30346 * C52054) *
                         C79308 * C79027 * C79075 -
                     (C53736 * C52054 + C53464 * C52141 +
                      (C26498 * C247 + C79306 * C516) * C52053 +
                      (C26498 * C97 + C79306 * C103) * C52140) *
                         C79308 * C79027 * C79068 -
                     (C33792 * C52054 + C33492 * C52141 + C27519 * C52053 +
                      C27252 * C52140) *
                         C79308 * C79027 * C15083) *
                        C78995 +
                    (((C26498 * C98 + C79306 * C104) * C52140 +
                      (C26498 * C248 + C79306 * C517) * C52053 +
                      C53468 * C52141 + C53738 * C52054) *
                         C79308 * C79027 * C79068 -
                     (C30347 * C52054 + C30032 * C52141 + C27520 * C52053 +
                      C27254 * C52140) *
                         C79308 * C79027 * C79075 +
                     (C27257 * C52140 + C27521 * C52053 +
                      (C26498 * C7477 + C79306 * C7478) * C52141 +
                      (C26498 * C7686 + C79306 * C8100) * C52054) *
                         C79308 * C79027 * C15083) *
                        C15086)) /
                  (p * q * std::sqrt(p + q));
    d2eezy[50] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C166 * C96 + C79308 * C167) * C52140 +
            (C166 * C246 + C79308 * C563) * C52053 + C53280 * C52141 +
            C53818 * C52054) *
               C79306 * C79027 * C79068 -
           (C55930 * C52054 + C55322 * C52141 +
            (C166 * C973 + C79308 * C1463) * C52053 +
            (C166 * C749 + C79308 * C859) * C52140) *
               C79306 * C79027 * C79075 +
           ((C166 * C750 + C79308 * C860) * C52140 +
            (C166 * C974 + C79308 * C1464) * C52053 + C57246 * C52141 +
            C57732 * C52054) *
               C79306 * C79027 * C15083) *
              C78986 +
          ((C892 * C52140 + C1483 * C52053 + C4064 * C52141 + C4726 * C52054) *
               C79306 * C79027 * C79075 -
           (C2416 * C52054 + C1825 * C52141 + C582 * C52053 + C196 * C52140) *
               C79306 * C79027 * C79068 -
           (C8204 * C52054 + C7588 * C52141 + C1484 * C52053 + C893 * C52140) *
               C79306 * C79027 * C15083) *
              C78995 +
          ((C199 * C52140 + C583 * C52053 + C1828 * C52141 + C2418 * C52054) *
               C79306 * C79027 * C79068 -
           (C4727 * C52054 + C4067 * C52141 + C1485 * C52053 + C895 * C52140) *
               C79306 * C79027 * C79075 +
           (C898 * C52140 + C1486 * C52053 +
            (C166 * C7477 + C79308 * C7580) * C52141 +
            (C166 * C7686 + C79308 * C8199) * C52054) *
               C79306 * C79027 * C15083) *
              C15086)) /
        (p * q * std::sqrt(p + q));
    d2eezz[50] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((C52394 * C96 + C52397 + C52397 + C52053 * C632 +
                      C52395 * C1682 + C52398 + C52398 + C52054 * C2498) *
                         C79308 * C79306 * C79027 * C79068 -
                     (C52395 * C3931 + C53073 + C53073 + C52054 * C4827 +
                      C52394 * C749 + C53074 + C53074 + C52053 * C1565) *
                         C79308 * C79306 * C79027 * C79075 +
                     (C52394 * C750 + C53075 + C53075 + C52053 * C1566 +
                      C52395 * C6044 + C53076 + C53076 + C52054 * C6720) *
                         C79308 * C79306 * C79027 * C15083) *
                        C78986 +
                    ((C52394 * C748 + C53077 + C53077 + C52053 * C1564 +
                      C52395 * C3932 + C53078 + C53078 + C52054 * C4828) *
                         C79308 * C79306 * C79027 * C79075 -
                     (C52395 * C1681 + C52399 + C52399 + C52054 * C2497 +
                      C52394 * C97 + C52400 + C52400 + C52053 * C633) *
                         C79308 * C79306 * C79027 * C79068 -
                     (C52395 * C6043 + C53079 + C53079 + C52054 * C6719 +
                      C52394 * C751 + C53080 + C53080 + C52053 * C1567) *
                         C79308 * C79306 * C79027 * C15083) *
                        C78995 +
                    ((C52394 * C98 + C52401 + C52401 + C52053 * C634 +
                      C52395 * C1685 + C52402 + C52402 + C52054 * C2501) *
                         C79308 * C79306 * C79027 * C79068 -
                     (C52395 * C3933 + C53081 + C53081 + C52054 * C4829 +
                      C52394 * C752 + C53082 + C53082 + C52053 * C1568) *
                         C79308 * C79306 * C79027 * C79075 +
                     (C52394 * C753 + C53083 + C53083 + C52053 * C1569 +
                      C52395 * C7477 + C53084 + C53084 + C52054 * C8303) *
                         C79308 * C79306 * C79027 * C15083) *
                        C15086)) /
                  (p * q * std::sqrt(p + q));
    d2eexx[51] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C52053 +
             C53184 * C52054) *
                C79308 * C79230 -
            (C53185 * C52054 + C53184 * C52053) * C79308 * C79114) *
               C79068 +
           ((C29703 * C52053 + C31774 * C52054) * C79308 * C79114 -
            (C29703 * C52054 + C26964 * C52053) * C79308 * C79230) *
               C79075 +
           ((C26965 * C52053 + C31775 * C52054) * C79308 * C79230 -
            (C31776 * C52054 + C31775 * C52053) * C79308 * C79114) *
               C15083) *
              C13595 +
          (((C53186 * C52053 + C53187 * C52054) * C79308 * C79114 -
            (C53186 * C52054 +
             (C26497 * C97 + C26503 + C26503 + C79306 * C109) * C52053) *
                C79308 * C79230) *
               C79068 +
           ((C26966 * C52053 + C29704 * C52054) * C79308 * C79230 -
            (C36469 * C52054 + C29704 * C52053) * C79308 * C79114) *
               C79075 +
           ((C33189 * C52053 +
             (C26497 * C6046 + C36466 + C36466 + C79306 * C6058) * C52054) *
                C79308 * C79114 -
            (C33189 * C52054 + C26967 * C52053) * C79308 * C79230) *
               C15083) *
              C78992)) /
        (p * q * std::sqrt(p + q));
    d2eexy[51] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C166 * C96 + C79308 * C167) * C26498 +
              (C166 * C102 + C79308 * C173) * C79306) *
                 C52053 +
             (C53284 + C53285) * C52054) *
                C79230 -
            ((C53286 + C53287) * C52054 + (C53285 + C53284) * C52053) *
                C79114) *
               C79068 +
           (((C55324 + C55325) * C52053 + (C57250 + C57251) * C52054) * C79114 -
            ((C55325 + C55324) * C52054 +
             ((C166 * C757 + C79308 * C867) * C79306 +
              (C166 * C749 + C79308 * C859) * C26498) *
                 C52053) *
                C79230) *
               C79075 +
           ((((C166 * C750 + C79308 * C860) * C26498 +
              (C166 * C758 + C79308 * C868) * C79306) *
                 C52053 +
             (C57252 + C57253) * C52054) *
                C79230 -
            ((C57254 + C57255) * C52054 + (C57253 + C57252) * C52053) *
                C79114) *
               C15083) *
              C13595 +
          ((((C53272 + C53273) * C52053 + (C53274 + C53275) * C52054) * C79114 -
            ((C53273 + C53272) * C52054 +
             (C197 * C79306 + C196 * C26498) * C52053) *
                C79230) *
               C79068 +
           (((C892 * C26498 + C891 * C79306) * C52053 +
             (C55318 + C55319) * C52054) *
                C79230 -
            ((C61906 + C61907) * C52054 + (C55319 + C55318) * C52053) *
                C79114) *
               C79075 +
           (((C58606 + C58607) * C52053 +
             ((C166 * C6046 + C79308 * C6144) * C26498 +
              (C166 * C6052 + C79308 * C6150) * C79306) *
                 C52054) *
                C79114 -
            ((C58607 + C58606) * C52054 +
             (C894 * C79306 + C893 * C26498) * C52053) *
                C79230) *
               C15083) *
              C78992)) /
        (p * q * std::sqrt(p + q));
    d2eexz[51] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
                 C26498 +
             (C52140 * C102 + C52053 * C252 + C52141 * C1690 + C52054 * C1914) *
                 C79306) *
                C79308 * C79230 -
            ((C52141 * C1691 + C52054 * C1915 + C52140 * C1690 +
              C52053 * C1914) *
                 C79306 +
             (C52141 * C1683 + C52054 * C1907 + C52140 * C1682 +
              C52053 * C1906) *
                 C26498) *
                C79308 * C79114) *
               C79068 +
           (((C52140 * C3931 + C52053 * C4165 + C52141 * C6042 +
              C52054 * C6226) *
                 C26498 +
             (C52140 * C3935 + C52053 * C4169 + C52141 * C6048 +
              C52054 * C6232) *
                 C79306) *
                C79308 * C79114 -
            ((C52141 * C3935 + C52054 * C4169 + C52140 * C757 + C52053 * C981) *
                 C79306 +
             (C52141 * C3931 + C52054 * C4165 + C52140 * C749 + C52053 * C973) *
                 C26498) *
                C79308 * C79230) *
               C79075 +
           (((C52140 * C750 + C52053 * C974 + C52141 * C6044 + C52054 * C6228) *
                 C26498 +
             (C52140 * C758 + C52053 * C982 + C52141 * C6050 + C52054 * C6234) *
                 C79306) *
                C79308 * C79230 -
            ((C52141 * C6051 + C52054 * C6235 + C52140 * C6050 +
              C52053 * C6234) *
                 C79306 +
             (C52141 * C6045 + C52054 * C6229 + C52140 * C6044 +
              C52053 * C6228) *
                 C26498) *
                C79308 * C79114) *
               C15083) *
              C13595 +
          ((((C52140 * C1681 + C52053 * C1905 + C52141 * C1684 +
              C52054 * C1908) *
                 C26498 +
             (C52140 * C1689 + C52053 * C1913 + C52141 * C1692 +
              C52054 * C1916) *
                 C79306) *
                C79308 * C79114 -
            ((C52141 * C1689 + C52054 * C1913 + C52140 * C103 + C52053 * C253) *
                 C79306 +
             (C52141 * C1681 + C52054 * C1905 + C52140 * C97 + C52053 * C247) *
                 C26498) *
                C79308 * C79230) *
               C79068 +
           (((C52140 * C748 + C52053 * C972 + C52141 * C3932 + C52054 * C4166) *
                 C26498 +
             (C52140 * C756 + C52053 * C980 + C52141 * C3936 + C52054 * C4170) *
                 C79306) *
                C79308 * C79230 -
            ((C52141 * C6047 + C52054 * C6231 + C52140 * C3936 +
              C52053 * C4170) *
                 C79306 +
             (C52141 * C6041 + C52054 * C6225 + C52140 * C3932 +
              C52053 * C4166) *
                 C26498) *
                C79308 * C79114) *
               C79075 +
           (((C52140 * C6043 + C52053 * C6227 + C52141 * C6046 +
              C52054 * C6230) *
                 C26498 +
             (C52140 * C6049 + C52053 * C6233 + C52141 * C6052 +
              C52054 * C6236) *
                 C79306) *
                C79308 * C79114 -
            ((C52141 * C6049 + C52054 * C6233 + C52140 * C759 + C52053 * C983) *
                 C79306 +
             (C52141 * C6043 + C52054 * C6227 + C52140 * C751 + C52053 * C975) *
                 C26498) *
                C79308 * C79230) *
               C15083) *
              C78992)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[51] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C26498 * C96 + C79306 * C102) * C166 +
              (C26498 * C167 + C79306 * C324) * C79308) *
                 C52053 +
             (C53472 + C53473) * C52054) *
                C79230 -
            ((C53474 + C53475) * C52054 + (C53473 + C53472) * C52053) *
                C79114) *
               C79068 +
           (((C55522 + C55523) * C52053 + (C57404 + C57405) * C52054) * C79114 -
            ((C55523 + C55522) * C52054 +
             (C27247 * C79308 + C27246 * C166) * C52053) *
                C79230) *
               C79075 +
           (((C27249 * C166 + C27248 * C79308) * C52053 +
             (C57406 + C57407) * C52054) *
                C79230 -
            ((C57408 + C57409) * C52054 + (C57407 + C57406) * C52053) *
                C79114) *
               C15083) *
              C13595 +
          ((((C53476 + C53477) * C52053 + (C53478 + C53479) * C52054) * C79114 -
            ((C53477 + C53476) * C52054 +
             ((C26498 * C168 + C79306 * C325) * C79308 +
              (C26498 * C97 + C79306 * C103) * C166) *
                 C52053) *
                C79230) *
               C79068 +
           (((C27250 * C166 + C27251 * C79308) * C52053 +
             (C55524 + C55525) * C52054) *
                C79230 -
            ((C62104 + C62105) * C52054 + (C55525 + C55524) * C52053) *
                C79114) *
               C79075 +
           (((C58804 + C58805) * C52053 +
             ((C26498 * C6046 + C79306 * C6052) * C166 +
              (C26498 * C6144 + C79306 * C6316) * C79308) *
                 C52054) *
                C79114 -
            ((C58805 + C58804) * C52054 +
             (C27253 * C79308 + C27252 * C166) * C52053) *
                C79230) *
               C15083) *
              C78992)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[51] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C372 * C96 + C380 + C380 + C79308 * C373) * C79306 * C52053 +
             C53572 * C52054) *
                C79230 -
            (C53573 * C52054 + C53572 * C52053) * C79114) *
               C79068 +
           ((C55633 * C52053 + C57500 * C52054) * C79114 -
            (C55633 * C52054 +
             (C372 * C749 + C1180 + C1180 + C79308 * C1169) * C79306 * C52053) *
                C79230) *
               C79075 +
           (((C372 * C750 + C1181 + C1181 + C79308 * C1170) * C79306 * C52053 +
             C57501 * C52054) *
                C79230 -
            (C57502 * C52054 + C57501 * C52053) * C79114) *
               C15083) *
              C13595 +
          (((C53562 * C52053 + C53563 * C52054) * C79114 -
            (C53562 * C52054 + C402 * C79306 * C52053) * C79230) *
               C79068 +
           ((C1201 * C79306 * C52053 + C55628 * C52054) * C79230 -
            (C62204 * C52054 + C55628 * C52053) * C79114) *
               C79075 +
           ((C58904 * C52053 + (C372 * C6046 + C6403 + C6403 + C79308 * C6396) *
                                   C79306 * C52054) *
                C79114 -
            (C58904 * C52054 + C1202 * C79306 * C52053) * C79230) *
               C15083) *
              C78992)) /
        (p * q * std::sqrt(p + q));
    d2eeyz[51] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
                 C166 +
             (C52140 * C167 + C52053 * C447 + C52141 * C1792 + C52054 * C2212) *
                 C79308) *
                C79306 * C79230 -
            ((C52141 * C1793 + C52054 * C2213 + C52140 * C1792 +
              C52053 * C2212) *
                 C79308 +
             (C52141 * C1683 + C52054 * C1907 + C52140 * C1682 +
              C52053 * C1906) *
                 C166) *
                C79306 * C79114) *
               C79068 +
           (((C52140 * C3931 + C52053 * C4165 + C52141 * C6042 +
              C52054 * C6226) *
                 C166 +
             (C52140 * C4047 + C52053 * C4501 + C52141 * C6140 +
              C52054 * C6478) *
                 C79308) *
                C79306 * C79114 -
            ((C52141 * C4047 + C52054 * C4501 + C52140 * C859 +
              C52053 * C1279) *
                 C79308 +
             (C52141 * C3931 + C52054 * C4165 + C52140 * C749 + C52053 * C973) *
                 C166) *
                C79306 * C79230) *
               C79075 +
           (((C52140 * C750 + C52053 * C974 + C52141 * C6044 + C52054 * C6228) *
                 C166 +
             (C52140 * C860 + C52053 * C1280 + C52141 * C6142 +
              C52054 * C6480) *
                 C79308) *
                C79306 * C79230 -
            ((C52141 * C6143 + C52054 * C6481 + C52140 * C6142 +
              C52053 * C6480) *
                 C79308 +
             (C52141 * C6045 + C52054 * C6229 + C52140 * C6044 +
              C52053 * C6228) *
                 C166) *
                C79306 * C79114) *
               C15083) *
              C13595 +
          ((((C52140 * C1681 + C52053 * C1905 + C52141 * C1684 +
              C52054 * C1908) *
                 C166 +
             (C52140 * C1791 + C52053 * C2211 + C52141 * C1794 +
              C52054 * C2214) *
                 C79308) *
                C79306 * C79114 -
            ((C52141 * C1791 + C52054 * C2211 + C52140 * C168 + C52053 * C448) *
                 C79308 +
             (C52141 * C1681 + C52054 * C1905 + C52140 * C97 + C52053 * C247) *
                 C166) *
                C79306 * C79230) *
               C79068 +
           (((C52140 * C748 + C52053 * C972 + C52141 * C3932 + C52054 * C4166) *
                 C166 +
             (C52140 * C858 + C52053 * C1278 + C52141 * C4048 +
              C52054 * C4502) *
                 C79308) *
                C79306 * C79230 -
            ((C52141 * C6139 + C52054 * C6477 + C52140 * C4048 +
              C52053 * C4502) *
                 C79308 +
             (C52141 * C6041 + C52054 * C6225 + C52140 * C3932 +
              C52053 * C4166) *
                 C166) *
                C79306 * C79114) *
               C79075 +
           (((C52140 * C6043 + C52053 * C6227 + C52141 * C6046 +
              C52054 * C6230) *
                 C166 +
             (C52140 * C6141 + C52053 * C6479 + C52141 * C6144 +
              C52054 * C6482) *
                 C79308) *
                C79306 * C79114 -
            ((C52141 * C6141 + C52054 * C6479 + C52140 * C861 +
              C52053 * C1281) *
                 C79308 +
             (C52141 * C6043 + C52054 * C6227 + C52140 * C751 + C52053 * C975) *
                 C166) *
                C79306 * C79230) *
               C15083) *
              C78992)) /
        (p * q * std::sqrt(p + q));
    d2eezx[51] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C26498 * C96 + C79306 * C102) * C52140 +
                       (C26498 * C246 + C79306 * C515) * C52053 +
                       C53460 * C52141 + C53734 * C52054) *
                          C79308 * C79230 -
                      (C53735 * C52054 + C53463 * C52141 + C53734 * C52053 +
                       C53460 * C52140) *
                          C79308 * C79114) *
                         C79068 +
                     ((C30028 * C52140 + C30345 * C52053 + C32043 * C52141 +
                       C32298 * C52054) *
                          C79308 * C79114 -
                      (C30345 * C52054 + C30028 * C52141 + C27516 * C52053 +
                       C27246 * C52140) *
                          C79308 * C79230) *
                         C79075 +
                     ((C27249 * C52140 + C27517 * C52053 + C32045 * C52141 +
                       C32299 * C52054) *
                          C79308 * C79230 -
                      (C32300 * C52054 + C32048 * C52141 + C32299 * C52053 +
                       C32045 * C52140) *
                          C79308 * C79114) *
                         C15083) *
                        C13595 +
                    (((C53464 * C52140 + C53736 * C52053 + C53466 * C52141 +
                       C53737 * C52054) *
                          C79308 * C79114 -
                      (C53736 * C52054 + C53464 * C52141 +
                       (C26498 * C247 + C79306 * C516) * C52053 +
                       (C26498 * C97 + C79306 * C103) * C52140) *
                          C79308 * C79230) *
                         C79068 +
                     ((C27250 * C52140 + C27518 * C52053 + C30029 * C52141 +
                       C30346 * C52054) *
                          C79308 * C79230 -
                      (C37072 * C52054 + C36772 * C52141 + C30346 * C52053 +
                       C30029 * C52140) *
                          C79308 * C79114) *
                         C79075 +
                     ((C33492 * C52140 + C33792 * C52053 +
                       (C26498 * C6046 + C79306 * C6052) * C52141 +
                       (C26498 * C6230 + C79306 * C6562) * C52054) *
                          C79308 * C79114 -
                      (C33792 * C52054 + C33492 * C52141 + C27519 * C52053 +
                       C27252 * C52140) *
                          C79308 * C79230) *
                         C15083) *
                        C78992)) /
                  (p * q * std::sqrt(p + q));
    d2eezy[51] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C166 * C96 + C79308 * C167) * C52140 +
             (C166 * C246 + C79308 * C563) * C52053 + C53280 * C52141 +
             C53818 * C52054) *
                C79306 * C79230 -
            (C53819 * C52054 + C53283 * C52141 + C53818 * C52053 +
             C53280 * C52140) *
                C79306 * C79114) *
               C79068 +
           ((C55322 * C52140 + C55930 * C52053 + C57244 * C52141 +
             C57731 * C52054) *
                C79306 * C79114 -
            (C55930 * C52054 + C55322 * C52141 +
             (C166 * C973 + C79308 * C1463) * C52053 +
             (C166 * C749 + C79308 * C859) * C52140) *
                C79306 * C79230) *
               C79075 +
           (((C166 * C750 + C79308 * C860) * C52140 +
             (C166 * C974 + C79308 * C1464) * C52053 + C57246 * C52141 +
             C57732 * C52054) *
                C79306 * C79230 -
            (C57733 * C52054 + C57249 * C52141 + C57732 * C52053 +
             C57246 * C52140) *
                C79306 * C79114) *
               C15083) *
              C13595 +
          (((C1825 * C52140 + C2416 * C52053 + C1826 * C52141 +
             C2417 * C52054) *
                C79306 * C79114 -
            (C2416 * C52054 + C1825 * C52141 + C582 * C52053 + C196 * C52140) *
                C79306 * C79230) *
               C79068 +
           ((C892 * C52140 + C1483 * C52053 + C4064 * C52141 + C4726 * C52054) *
                C79306 * C79230 -
            (C11544 * C52054 + C10928 * C52141 + C4726 * C52053 +
             C4064 * C52140) *
                C79306 * C79114) *
               C79075 +
           ((C7588 * C52140 + C8204 * C52053 +
             (C166 * C6046 + C79308 * C6144) * C52141 +
             (C166 * C6230 + C79308 * C6642) * C52054) *
                C79306 * C79114 -
            (C8204 * C52054 + C7588 * C52141 + C1484 * C52053 + C893 * C52140) *
                C79306 * C79230) *
               C15083) *
              C78992)) /
        (p * q * std::sqrt(p + q));
    d2eezz[51] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C52394 * C96 + C52397 + C52397 + C52053 * C632 +
                       C52395 * C1682 + C52398 + C52398 + C52054 * C2498) *
                          C79308 * C79306 * C79230 -
                      (C52395 * C1683 + C53894 + C53894 + C52054 * C2499 +
                       C52394 * C1682 + C53895 + C53895 + C52053 * C2498) *
                          C79308 * C79306 * C79114) *
                         C79068 +
                     ((C52394 * C3931 + C56029 + C56029 + C52053 * C4827 +
                       C52395 * C6042 + C56030 + C56030 + C52054 * C6718) *
                          C79308 * C79306 * C79114 -
                      (C52395 * C3931 + C53073 + C53073 + C52054 * C4827 +
                       C52394 * C749 + C53074 + C53074 + C52053 * C1565) *
                          C79308 * C79306 * C79230) *
                         C79075 +
                     ((C52394 * C750 + C53075 + C53075 + C52053 * C1566 +
                       C52395 * C6044 + C53076 + C53076 + C52054 * C6720) *
                          C79308 * C79306 * C79230 -
                      (C52395 * C6045 + C57810 + C57810 + C52054 * C6721 +
                       C52394 * C6044 + C57811 + C57811 + C52053 * C6720) *
                          C79308 * C79306 * C79114) *
                         C15083) *
                        C13595 +
                    (((C52394 * C1681 + C53898 + C53898 + C52053 * C2497 +
                       C52395 * C1684 + C53899 + C53899 + C52054 * C2500) *
                          C79308 * C79306 * C79114 -
                      (C52395 * C1681 + C52399 + C52399 + C52054 * C2497 +
                       C52394 * C97 + C52400 + C52400 + C52053 * C633) *
                          C79308 * C79306 * C79230) *
                         C79068 +
                     ((C52394 * C748 + C53077 + C53077 + C52053 * C1564 +
                       C52395 * C3932 + C53078 + C53078 + C52054 * C4828) *
                          C79308 * C79306 * C79230 -
                      (C52395 * C6041 + C56031 + C56031 + C52054 * C6717 +
                       C52394 * C3932 + C56032 + C56032 + C52053 * C4828) *
                          C79308 * C79306 * C79114) *
                         C79075 +
                     ((C52394 * C6043 + C59297 + C59297 + C52053 * C6719 +
                       C52395 * C6046 + C59298 + C59298 + C52054 * C6722) *
                          C79308 * C79306 * C79114 -
                      (C52395 * C6043 + C53079 + C53079 + C52054 * C6719 +
                       C52394 * C751 + C53080 + C53080 + C52053 * C1567) *
                          C79308 * C79306 * C79230) *
                         C15083) *
                        C78992)) /
                  (p * q * std::sqrt(p + q));
    d2eexx[52] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C52053 +
            C53184 * C52054) *
               C79308 * C79027 * C79310 -
           (C29703 * C52054 + C26964 * C52053) * C79308 * C79027 * C79303 +
           (C26965 * C52053 + C31775 * C52054) * C79308 * C79027 * C79290 -
           (C34064 * C52054 + C31273 * C52053) * C79308 * C79027 * C79269) *
              C13595 +
          ((C26966 * C52053 + C29704 * C52054) * C79308 * C79027 * C79303 -
           (C53186 * C52054 +
            (C26497 * C97 + C26503 + C26503 + C79306 * C109) * C52053) *
               C79308 * C79027 * C79310 -
           (C33189 * C52054 + C26967 * C52053) * C79308 * C79027 * C79290 +
           (C32541 * C52053 +
            (C26497 * C8378 + C33186 + C33186 + C79306 * C8382) * C52054) *
               C79308 * C79027 * C79269) *
              C78992)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C52053 +
            C53184 * C52054) *
               C79308 * C79027 * C12991 -
           (C29703 * C52054 + C26964 * C52053) * C79308 * C79027 * C79072) *
              C79309 +
          ((C26966 * C52053 + C29704 * C52054) * C79308 * C79027 * C79072 -
           (C53186 * C52054 +
            (C26497 * C97 + C26503 + C26503 + C79306 * C109) * C52053) *
               C79308 * C79027 * C12991) *
              C79299 +
          (((C26497 * C98 + C26504 + C26504 + C79306 * C110) * C52053 +
            C53188 * C52054) *
               C79308 * C79027 * C12991 -
           (C29705 * C52054 + C26968 * C52053) * C79308 * C79027 * C79072) *
              C79283 +
          ((C28447 * C52053 +
            (C26497 * C3934 + C29059 + C29059 + C79306 * C3942) * C52054) *
               C79308 * C79027 * C79072 -
           (C54573 * C52054 +
            (C26497 * C99 + C26507 + C26507 + C79306 * C111) * C52053) *
               C79308 * C79027 * C12991) *
              C79263)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C52053 +
             C53184 * C52054) *
                C79308 * C79301 -
            (C53185 * C52054 + C53184 * C52053) * C79308 * C79287 +
            (C53185 * C52053 + C61301 * C52054) * C79308 * C79262) *
               C12991 +
           ((C29703 * C52053 + C31774 * C52054) * C79308 * C79287 -
            (C29703 * C52054 + C26964 * C52053) * C79308 * C79301 -
            (C37942 * C52054 + C31774 * C52053) * C79308 * C79262) *
               C79072) *
              C13595 +
          (((C53186 * C52053 + C53187 * C52054) * C79308 * C79287 -
            (C53186 * C52054 +
             (C26497 * C97 + C26503 + C26503 + C79306 * C109) * C52053) *
                C79308 * C79301 -
            (C62670 * C52054 + C53187 * C52053) * C79308 * C79262) *
               C12991 +
           ((C26966 * C52053 + C29704 * C52054) * C79308 * C79301 -
            (C36469 * C52054 + C29704 * C52053) * C79308 * C79287 +
            (C36469 * C52053 +
             (C26497 * C12366 + C37337 + C37337 + C79306 * C12370) * C52054) *
                C79308 * C79262) *
               C79072) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eexy[52] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C166 * C96 + C79308 * C167) * C26498 +
             (C166 * C102 + C79308 * C173) * C79306) *
                C52053 +
            (C53284 + C53285) * C52054) *
               C79027 * C79310 -
           ((C55325 + C55324) * C52054 +
            ((C166 * C757 + C79308 * C867) * C79306 +
             (C166 * C749 + C79308 * C859) * C26498) *
                C52053) *
               C79027 * C79303 +
           (((C166 * C750 + C79308 * C860) * C26498 +
             (C166 * C758 + C79308 * C868) * C79306) *
                C52053 +
            (C57252 + C57253) * C52054) *
               C79027 * C79290 -
           ((C59438 + C59437) * C52054 +
            ((C166 * C5572 + C79308 * C5630) * C79306 +
             (C166 * C5568 + C79308 * C5626) * C26498) *
                C52053) *
               C79027 * C79269) *
              C13595 +
          (((C892 * C26498 + C891 * C79306) * C52053 +
            (C55318 + C55319) * C52054) *
               C79027 * C79303 -
           ((C53273 + C53272) * C52054 +
            (C197 * C79306 + C196 * C26498) * C52053) *
               C79027 * C79310 -
           ((C58607 + C58606) * C52054 +
            (C894 * C79306 + C893 * C26498) * C52053) *
               C79027 * C79290 +
           ((C6880 * C26498 + C6879 * C79306) * C52053 +
            ((C166 * C8378 + C79308 * C8452) * C26498 +
             (C166 * C8380 + C79308 * C8454) * C79306) *
                C52054) *
               C79027 * C79269) *
              C78992)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C166 * C96 + C79308 * C167) * C26498 +
             (C166 * C102 + C79308 * C173) * C79306) *
                C52053 +
            (C53284 + C53285) * C52054) *
               C79027 * C12991 -
           ((C55325 + C55324) * C52054 +
            ((C166 * C757 + C79308 * C867) * C79306 +
             (C166 * C749 + C79308 * C859) * C26498) *
                C52053) *
               C79027 * C79072) *
              C79309 +
          (((C892 * C26498 + C891 * C79306) * C52053 +
            (C55318 + C55319) * C52054) *
               C79027 * C79072 -
           ((C53273 + C53272) * C52054 +
            (C197 * C79306 + C196 * C26498) * C52053) *
               C79027 * C12991) *
              C79299 +
          (((C199 * C26498 + C198 * C79306) * C52053 +
            (C53276 + C53277) * C52054) *
               C79027 * C12991 -
           ((C55321 + C55320) * C52054 +
            (C896 * C79306 + C895 * C26498) * C52053) *
               C79027 * C79072) *
              C79283 +
          (((C2688 * C26498 + C2687 * C79306) * C52053 +
            ((C166 * C3934 + C79308 * C4050) * C26498 +
             (C166 * C3938 + C79308 * C4054) * C79306) *
                C52054) *
               C79027 * C79072 -
           ((C54641 + C54640) * C52054 +
            (C201 * C79306 + C200 * C26498) * C52053) *
               C79027 * C12991) *
              C79263)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C166 * C96 + C79308 * C167) * C26498 +
              (C166 * C102 + C79308 * C173) * C79306) *
                 C52053 +
             (C53284 + C53285) * C52054) *
                C79301 -
            ((C53286 + C53287) * C52054 + (C53285 + C53284) * C52053) * C79287 +
            ((C53287 + C53286) * C52053 + (C61359 + C61360) * C52054) *
                C79262) *
               C12991 +
           (((C55324 + C55325) * C52053 + (C57250 + C57251) * C52054) * C79287 -
            ((C55325 + C55324) * C52054 +
             ((C166 * C757 + C79308 * C867) * C79306 +
              (C166 * C749 + C79308 * C859) * C26498) *
                 C52053) *
                C79301 -
            ((C63353 + C63354) * C52054 + (C57251 + C57250) * C52053) *
                C79262) *
               C79072) *
              C13595 +
          ((((C53272 + C53273) * C52053 + (C53274 + C53275) * C52054) * C79287 -
            ((C53273 + C53272) * C52054 +
             (C197 * C79306 + C196 * C26498) * C52053) *
                C79301 -
            ((C62737 + C62738) * C52054 + (C53275 + C53274) * C52053) *
                C79262) *
               C12991 +
           (((C892 * C26498 + C891 * C79306) * C52053 +
             (C55318 + C55319) * C52054) *
                C79301 -
            ((C61906 + C61907) * C52054 + (C55319 + C55318) * C52053) * C79287 +
            ((C61907 + C61906) * C52053 +
             ((C166 * C12366 + C79308 * C12440) * C26498 +
              (C166 * C12368 + C79308 * C12442) * C79306) *
                 C52054) *
                C79262) *
               C79072) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eexz[52] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
                C26498 +
            (C52140 * C102 + C52053 * C252 + C52141 * C1690 + C52054 * C1914) *
                C79306) *
               C79308 * C79027 * C79310 -
           ((C52141 * C3935 + C52054 * C4169 + C52140 * C757 + C52053 * C981) *
                C79306 +
            (C52141 * C3931 + C52054 * C4165 + C52140 * C749 + C52053 * C973) *
                C26498) *
               C79308 * C79027 * C79303 +
           ((C52140 * C750 + C52053 * C974 + C52141 * C6044 + C52054 * C6228) *
                C26498 +
            (C52140 * C758 + C52053 * C982 + C52141 * C6050 + C52054 * C6234) *
                C79306) *
               C79308 * C79027 * C79290 -
           ((C52141 * C8379 + C52054 * C8523 + C52140 * C5572 +
             C52053 * C5680) *
                C79306 +
            (C52141 * C8377 + C52054 * C8521 + C52140 * C5568 +
             C52053 * C5676) *
                C26498) *
               C79308 * C79027 * C79269) *
              C13595 +
          (((C52140 * C748 + C52053 * C972 + C52141 * C3932 + C52054 * C4166) *
                C26498 +
            (C52140 * C756 + C52053 * C980 + C52141 * C3936 + C52054 * C4170) *
                C79306) *
               C79308 * C79027 * C79303 -
           ((C52141 * C1689 + C52054 * C1913 + C52140 * C103 + C52053 * C253) *
                C79306 +
            (C52141 * C1681 + C52054 * C1905 + C52140 * C97 + C52053 * C247) *
                C26498) *
               C79308 * C79027 * C79310 -
           ((C52141 * C6049 + C52054 * C6233 + C52140 * C759 + C52053 * C983) *
                C79306 +
            (C52141 * C6043 + C52054 * C6227 + C52140 * C751 + C52053 * C975) *
                C26498) *
               C79308 * C79027 * C79290 +
           ((C52140 * C5567 + C52053 * C5675 + C52141 * C8378 +
             C52054 * C8522) *
                C26498 +
            (C52140 * C5571 + C52053 * C5679 + C52141 * C8380 +
             C52054 * C8524) *
                C79306) *
               C79308 * C79027 * C79269) *
              C78992)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
                C26498 +
            (C52140 * C102 + C52053 * C252 + C52141 * C1690 + C52054 * C1914) *
                C79306) *
               C79308 * C79027 * C12991 -
           ((C52141 * C3935 + C52054 * C4169 + C52140 * C757 + C52053 * C981) *
                C79306 +
            (C52141 * C3931 + C52054 * C4165 + C52140 * C749 + C52053 * C973) *
                C26498) *
               C79308 * C79027 * C79072) *
              C79309 +
          (((C52140 * C748 + C52053 * C972 + C52141 * C3932 + C52054 * C4166) *
                C26498 +
            (C52140 * C756 + C52053 * C980 + C52141 * C3936 + C52054 * C4170) *
                C79306) *
               C79308 * C79027 * C79072 -
           ((C52141 * C1689 + C52054 * C1913 + C52140 * C103 + C52053 * C253) *
                C79306 +
            (C52141 * C1681 + C52054 * C1905 + C52140 * C97 + C52053 * C247) *
                C26498) *
               C79308 * C79027 * C12991) *
              C79299 +
          (((C52140 * C98 + C52053 * C248 + C52141 * C1685 + C52054 * C1909) *
                C26498 +
            (C52140 * C104 + C52053 * C254 + C52141 * C1693 + C52054 * C1917) *
                C79306) *
               C79308 * C79027 * C12991 -
           ((C52141 * C3937 + C52054 * C4171 + C52140 * C760 + C52053 * C984) *
                C79306 +
            (C52141 * C3933 + C52054 * C4167 + C52140 * C752 + C52053 * C976) *
                C26498) *
               C79308 * C79027 * C79072) *
              C79283 +
          (((C52140 * C754 + C52053 * C978 + C52141 * C3934 + C52054 * C4168) *
                C26498 +
            (C52140 * C762 + C52053 * C986 + C52141 * C3938 + C52054 * C4172) *
                C79306) *
               C79308 * C79027 * C79072 -
           ((C52141 * C1695 + C52054 * C1919 + C52140 * C105 + C52053 * C255) *
                C79306 +
            (C52141 * C1687 + C52054 * C1911 + C52140 * C99 + C52053 * C249) *
                C26498) *
               C79308 * C79027 * C12991) *
              C79263)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
                 C26498 +
             (C52140 * C102 + C52053 * C252 + C52141 * C1690 + C52054 * C1914) *
                 C79306) *
                C79308 * C79301 -
            ((C52141 * C1691 + C52054 * C1915 + C52140 * C1690 +
              C52053 * C1914) *
                 C79306 +
             (C52141 * C1683 + C52054 * C1907 + C52140 * C1682 +
              C52053 * C1906) *
                 C26498) *
                C79308 * C79287 +
            ((C52140 * C1683 + C52053 * C1907 + C52141 * C10320 +
              C52054 * C10428) *
                 C26498 +
             (C52140 * C1691 + C52053 * C1915 + C52141 * C10324 +
              C52054 * C10432) *
                 C79306) *
                C79308 * C79262) *
               C12991 +
           (((C52140 * C3931 + C52053 * C4165 + C52141 * C6042 +
              C52054 * C6226) *
                 C26498 +
             (C52140 * C3935 + C52053 * C4169 + C52141 * C6048 +
              C52054 * C6232) *
                 C79306) *
                C79308 * C79287 -
            ((C52141 * C3935 + C52054 * C4169 + C52140 * C757 + C52053 * C981) *
                 C79306 +
             (C52141 * C3931 + C52054 * C4165 + C52140 * C749 + C52053 * C973) *
                 C26498) *
                C79308 * C79301 -
            ((C52141 * C12367 + C52054 * C12511 + C52140 * C6048 +
              C52053 * C6232) *
                 C79306 +
             (C52141 * C12365 + C52054 * C12509 + C52140 * C6042 +
              C52053 * C6226) *
                 C26498) *
                C79308 * C79262) *
               C79072) *
              C13595 +
          ((((C52140 * C1681 + C52053 * C1905 + C52141 * C1684 +
              C52054 * C1908) *
                 C26498 +
             (C52140 * C1689 + C52053 * C1913 + C52141 * C1692 +
              C52054 * C1916) *
                 C79306) *
                C79308 * C79287 -
            ((C52141 * C1689 + C52054 * C1913 + C52140 * C103 + C52053 * C253) *
                 C79306 +
             (C52141 * C1681 + C52054 * C1905 + C52140 * C97 + C52053 * C247) *
                 C26498) *
                C79308 * C79301 -
            ((C52141 * C10323 + C52054 * C10431 + C52140 * C1692 +
              C52053 * C1916) *
                 C79306 +
             (C52141 * C10319 + C52054 * C10427 + C52140 * C1684 +
              C52053 * C1908) *
                 C26498) *
                C79308 * C79262) *
               C12991 +
           (((C52140 * C748 + C52053 * C972 + C52141 * C3932 + C52054 * C4166) *
                 C26498 +
             (C52140 * C756 + C52053 * C980 + C52141 * C3936 + C52054 * C4170) *
                 C79306) *
                C79308 * C79301 -
            ((C52141 * C6047 + C52054 * C6231 + C52140 * C3936 +
              C52053 * C4170) *
                 C79306 +
             (C52141 * C6041 + C52054 * C6225 + C52140 * C3932 +
              C52053 * C4166) *
                 C26498) *
                C79308 * C79287 +
            ((C52140 * C6041 + C52053 * C6225 + C52141 * C12366 +
              C52054 * C12510) *
                 C26498 +
             (C52140 * C6047 + C52053 * C6231 + C52141 * C12368 +
              C52054 * C12512) *
                 C79306) *
                C79308 * C79262) *
               C79072) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eeyx[52] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C26498 * C96 + C79306 * C102) * C166 +
             (C26498 * C167 + C79306 * C324) * C79308) *
                C52053 +
            (C53472 + C53473) * C52054) *
               C79027 * C79310 -
           ((C55523 + C55522) * C52054 +
            (C27247 * C79308 + C27246 * C166) * C52053) *
               C79027 * C79303 +
           ((C27249 * C166 + C27248 * C79308) * C52053 +
            (C57406 + C57407) * C52054) *
               C79027 * C79290 -
           ((C59572 + C59571) * C52054 +
            (C31433 * C79308 + C31432 * C166) * C52053) *
               C79027 * C79269) *
              C13595 +
          (((C27250 * C166 + C27251 * C79308) * C52053 +
            (C55524 + C55525) * C52054) *
               C79027 * C79303 -
           ((C53477 + C53476) * C52054 +
            ((C26498 * C168 + C79306 * C325) * C79308 +
             (C26498 * C97 + C79306 * C103) * C166) *
                C52053) *
               C79027 * C79310 -
           ((C58805 + C58804) * C52054 +
            (C27253 * C79308 + C27252 * C166) * C52053) *
               C79027 * C79290 +
           ((C32748 * C166 + C32747 * C79308) * C52053 +
            ((C26498 * C8378 + C79306 * C8380) * C166 +
             (C26498 * C8452 + C79306 * C8592) * C79308) *
                C52054) *
               C79027 * C79269) *
              C78992)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C26498 * C96 + C79306 * C102) * C166 +
             (C26498 * C167 + C79306 * C324) * C79308) *
                C52053 +
            (C53472 + C53473) * C52054) *
               C79027 * C12991 -
           ((C55523 + C55522) * C52054 +
            (C27247 * C79308 + C27246 * C166) * C52053) *
               C79027 * C79072) *
              C79309 +
          (((C27250 * C166 + C27251 * C79308) * C52053 +
            (C55524 + C55525) * C52054) *
               C79027 * C79072 -
           ((C53477 + C53476) * C52054 +
            ((C26498 * C168 + C79306 * C325) * C79308 +
             (C26498 * C97 + C79306 * C103) * C166) *
                C52053) *
               C79027 * C12991) *
              C79299 +
          ((((C26498 * C98 + C79306 * C104) * C166 +
             (C26498 * C169 + C79306 * C326) * C79308) *
                C52053 +
            (C53480 + C53481) * C52054) *
               C79027 * C12991 -
           ((C55527 + C55526) * C52054 +
            (C27255 * C79308 + C27254 * C166) * C52053) *
               C79027 * C79072) *
              C79283 +
          (((C28653 * C166 + C28654 * C79308) * C52053 +
            ((C26498 * C3934 + C79306 * C3938) * C166 +
             (C26498 * C4050 + C79306 * C4286) * C79308) *
                C52054) *
               C79027 * C79072 -
           ((C54781 + C54780) * C52054 +
            ((C26498 * C170 + C79306 * C327) * C79308 +
             (C26498 * C99 + C79306 * C105) * C166) *
                C52053) *
               C79027 * C12991) *
              C79263)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C26498 * C96 + C79306 * C102) * C166 +
              (C26498 * C167 + C79306 * C324) * C79308) *
                 C52053 +
             (C53472 + C53473) * C52054) *
                C79301 -
            ((C53474 + C53475) * C52054 + (C53473 + C53472) * C52053) * C79287 +
            ((C53475 + C53474) * C52053 + (C61462 + C61463) * C52054) *
                C79262) *
               C12991 +
           (((C55522 + C55523) * C52053 + (C57404 + C57405) * C52054) * C79287 -
            ((C55523 + C55522) * C52054 +
             (C27247 * C79308 + C27246 * C166) * C52053) *
                C79301 -
            ((C63487 + C63488) * C52054 + (C57405 + C57404) * C52053) *
                C79262) *
               C79072) *
              C13595 +
          ((((C53476 + C53477) * C52053 + (C53478 + C53479) * C52054) * C79287 -
            ((C53477 + C53476) * C52054 +
             ((C26498 * C168 + C79306 * C325) * C79308 +
              (C26498 * C97 + C79306 * C103) * C166) *
                 C52053) *
                C79301 -
            ((C62877 + C62878) * C52054 + (C53479 + C53478) * C52053) *
                C79262) *
               C12991 +
           (((C27250 * C166 + C27251 * C79308) * C52053 +
             (C55524 + C55525) * C52054) *
                C79301 -
            ((C62104 + C62105) * C52054 + (C55525 + C55524) * C52053) * C79287 +
            ((C62105 + C62104) * C52053 +
             ((C26498 * C12366 + C79306 * C12368) * C166 +
              (C26498 * C12440 + C79306 * C12580) * C79308) *
                 C52054) *
                C79262) *
               C79072) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eeyy[52] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C372 * C96 + C380 + C380 + C79308 * C373) * C79306 * C52053 +
            C53572 * C52054) *
               C79027 * C79310 -
           (C55633 * C52054 +
            (C372 * C749 + C1180 + C1180 + C79308 * C1169) * C79306 * C52053) *
               C79027 * C79303 +
           ((C372 * C750 + C1181 + C1181 + C79308 * C1170) * C79306 * C52053 +
            C57501 * C52054) *
               C79027 * C79290 -
           (C59645 * C52054 +
            (C372 * C5568 + C5777 + C5777 + C79308 * C5772) * C79306 * C52053) *
               C79027 * C79269) *
              C13595 +
          ((C1201 * C79306 * C52053 + C55628 * C52054) * C79027 * C79303 -
           (C53562 * C52054 + C402 * C79306 * C52053) * C79027 * C79310 -
           (C58904 * C52054 + C1202 * C79306 * C52053) * C79027 * C79290 +
           (C7094 * C79306 * C52053 +
            (C372 * C8378 + C8663 + C8663 + C79308 * C8660) * C79306 * C52054) *
               C79027 * C79269) *
              C78992)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C372 * C96 + C380 + C380 + C79308 * C373) * C79306 * C52053 +
            C53572 * C52054) *
               C79027 * C12991 -
           (C55633 * C52054 +
            (C372 * C749 + C1180 + C1180 + C79308 * C1169) * C79306 * C52053) *
               C79027 * C79072) *
              C79309 +
          ((C1201 * C79306 * C52053 + C55628 * C52054) * C79027 * C79072 -
           (C53562 * C52054 + C402 * C79306 * C52053) * C79027 * C12991) *
              C79299 +
          ((C403 * C79306 * C52053 + C53564 * C52054) * C79027 * C12991 -
           (C55629 * C52054 + C1203 * C79306 * C52053) * C79027 * C79072) *
              C79283 +
          ((C2902 * C79306 * C52053 +
            (C372 * C3934 + C4397 + C4397 + C79308 * C4388) * C79306 * C52054) *
               C79027 * C79072 -
           (C54848 * C52054 + C404 * C79306 * C52053) * C79027 * C12991) *
              C79263)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C372 * C96 + C380 + C380 + C79308 * C373) * C79306 * C52053 +
             C53572 * C52054) *
                C79301 -
            (C53573 * C52054 + C53572 * C52053) * C79287 +
            (C53573 * C52053 + C61520 * C52054) * C79262) *
               C12991 +
           ((C55633 * C52053 + C57500 * C52054) * C79287 -
            (C55633 * C52054 +
             (C372 * C749 + C1180 + C1180 + C79308 * C1169) * C79306 * C52053) *
                C79301 -
            (C63561 * C52054 + C57500 * C52053) * C79262) *
               C79072) *
              C13595 +
          (((C53562 * C52053 + C53563 * C52054) * C79287 -
            (C53562 * C52054 + C402 * C79306 * C52053) * C79301 -
            (C62945 * C52054 + C53563 * C52053) * C79262) *
               C12991 +
           ((C1201 * C79306 * C52053 + C55628 * C52054) * C79301 -
            (C62204 * C52054 + C55628 * C52053) * C79287 +
            (C62204 * C52053 +
             (C372 * C12366 + C12651 + C12651 + C79308 * C12648) * C79306 *
                 C52054) *
                C79262) *
               C79072) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[52] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
                C166 +
            (C52140 * C167 + C52053 * C447 + C52141 * C1792 + C52054 * C2212) *
                C79308) *
               C79306 * C79027 * C79310 -
           ((C52141 * C4047 + C52054 * C4501 + C52140 * C859 + C52053 * C1279) *
                C79308 +
            (C52141 * C3931 + C52054 * C4165 + C52140 * C749 + C52053 * C973) *
                C166) *
               C79306 * C79027 * C79303 +
           ((C52140 * C750 + C52053 * C974 + C52141 * C6044 + C52054 * C6228) *
                C166 +
            (C52140 * C860 + C52053 * C1280 + C52141 * C6142 + C52054 * C6480) *
                C79308) *
               C79306 * C79027 * C79290 -
           ((C52141 * C8451 + C52054 * C8729 + C52140 * C5626 +
             C52053 * C5822) *
                C79308 +
            (C52141 * C8377 + C52054 * C8521 + C52140 * C5568 +
             C52053 * C5676) *
                C166) *
               C79306 * C79027 * C79269) *
              C13595 +
          (((C52140 * C748 + C52053 * C972 + C52141 * C3932 + C52054 * C4166) *
                C166 +
            (C52140 * C858 + C52053 * C1278 + C52141 * C4048 + C52054 * C4502) *
                C79308) *
               C79306 * C79027 * C79303 -
           ((C52141 * C1791 + C52054 * C2211 + C52140 * C168 + C52053 * C448) *
                C79308 +
            (C52141 * C1681 + C52054 * C1905 + C52140 * C97 + C52053 * C247) *
                C166) *
               C79306 * C79027 * C79310 -
           ((C52141 * C6141 + C52054 * C6479 + C52140 * C861 + C52053 * C1281) *
                C79308 +
            (C52141 * C6043 + C52054 * C6227 + C52140 * C751 + C52053 * C975) *
                C166) *
               C79306 * C79027 * C79290 +
           ((C52140 * C5567 + C52053 * C5675 + C52141 * C8378 +
             C52054 * C8522) *
                C166 +
            (C52140 * C5625 + C52053 * C5821 + C52141 * C8452 +
             C52054 * C8730) *
                C79308) *
               C79306 * C79027 * C79269) *
              C78992)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
                C166 +
            (C52140 * C167 + C52053 * C447 + C52141 * C1792 + C52054 * C2212) *
                C79308) *
               C79306 * C79027 * C12991 -
           ((C52141 * C4047 + C52054 * C4501 + C52140 * C859 + C52053 * C1279) *
                C79308 +
            (C52141 * C3931 + C52054 * C4165 + C52140 * C749 + C52053 * C973) *
                C166) *
               C79306 * C79027 * C79072) *
              C79309 +
          (((C52140 * C748 + C52053 * C972 + C52141 * C3932 + C52054 * C4166) *
                C166 +
            (C52140 * C858 + C52053 * C1278 + C52141 * C4048 + C52054 * C4502) *
                C79308) *
               C79306 * C79027 * C79072 -
           ((C52141 * C1791 + C52054 * C2211 + C52140 * C168 + C52053 * C448) *
                C79308 +
            (C52141 * C1681 + C52054 * C1905 + C52140 * C97 + C52053 * C247) *
                C166) *
               C79306 * C79027 * C12991) *
              C79299 +
          (((C52140 * C98 + C52053 * C248 + C52141 * C1685 + C52054 * C1909) *
                C166 +
            (C52140 * C169 + C52053 * C449 + C52141 * C1795 + C52054 * C2215) *
                C79308) *
               C79306 * C79027 * C12991 -
           ((C52141 * C4049 + C52054 * C4503 + C52140 * C862 + C52053 * C1282) *
                C79308 +
            (C52141 * C3933 + C52054 * C4167 + C52140 * C752 + C52053 * C976) *
                C166) *
               C79306 * C79027 * C79072) *
              C79283 +
          (((C52140 * C754 + C52053 * C978 + C52141 * C3934 + C52054 * C4168) *
                C166 +
            (C52140 * C864 + C52053 * C1284 + C52141 * C4050 + C52054 * C4504) *
                C79308) *
               C79306 * C79027 * C79072 -
           ((C52141 * C1797 + C52054 * C2217 + C52140 * C170 + C52053 * C450) *
                C79308 +
            (C52141 * C1687 + C52054 * C1911 + C52140 * C99 + C52053 * C249) *
                C166) *
               C79306 * C79027 * C12991) *
              C79263)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
                 C166 +
             (C52140 * C167 + C52053 * C447 + C52141 * C1792 + C52054 * C2212) *
                 C79308) *
                C79306 * C79301 -
            ((C52141 * C1793 + C52054 * C2213 + C52140 * C1792 +
              C52053 * C2212) *
                 C79308 +
             (C52141 * C1683 + C52054 * C1907 + C52140 * C1682 +
              C52053 * C1906) *
                 C166) *
                C79306 * C79287 +
            ((C52140 * C1683 + C52053 * C1907 + C52141 * C10320 +
              C52054 * C10428) *
                 C166 +
             (C52140 * C1793 + C52053 * C2213 + C52141 * C10378 +
              C52054 * C10574) *
                 C79308) *
                C79306 * C79262) *
               C12991 +
           (((C52140 * C3931 + C52053 * C4165 + C52141 * C6042 +
              C52054 * C6226) *
                 C166 +
             (C52140 * C4047 + C52053 * C4501 + C52141 * C6140 +
              C52054 * C6478) *
                 C79308) *
                C79306 * C79287 -
            ((C52141 * C4047 + C52054 * C4501 + C52140 * C859 +
              C52053 * C1279) *
                 C79308 +
             (C52141 * C3931 + C52054 * C4165 + C52140 * C749 + C52053 * C973) *
                 C166) *
                C79306 * C79301 -
            ((C52141 * C12439 + C52054 * C12717 + C52140 * C6140 +
              C52053 * C6478) *
                 C79308 +
             (C52141 * C12365 + C52054 * C12509 + C52140 * C6042 +
              C52053 * C6226) *
                 C166) *
                C79306 * C79262) *
               C79072) *
              C13595 +
          ((((C52140 * C1681 + C52053 * C1905 + C52141 * C1684 +
              C52054 * C1908) *
                 C166 +
             (C52140 * C1791 + C52053 * C2211 + C52141 * C1794 +
              C52054 * C2214) *
                 C79308) *
                C79306 * C79287 -
            ((C52141 * C1791 + C52054 * C2211 + C52140 * C168 + C52053 * C448) *
                 C79308 +
             (C52141 * C1681 + C52054 * C1905 + C52140 * C97 + C52053 * C247) *
                 C166) *
                C79306 * C79301 -
            ((C52141 * C10377 + C52054 * C10573 + C52140 * C1794 +
              C52053 * C2214) *
                 C79308 +
             (C52141 * C10319 + C52054 * C10427 + C52140 * C1684 +
              C52053 * C1908) *
                 C166) *
                C79306 * C79262) *
               C12991 +
           (((C52140 * C748 + C52053 * C972 + C52141 * C3932 + C52054 * C4166) *
                 C166 +
             (C52140 * C858 + C52053 * C1278 + C52141 * C4048 +
              C52054 * C4502) *
                 C79308) *
                C79306 * C79301 -
            ((C52141 * C6139 + C52054 * C6477 + C52140 * C4048 +
              C52053 * C4502) *
                 C79308 +
             (C52141 * C6041 + C52054 * C6225 + C52140 * C3932 +
              C52053 * C4166) *
                 C166) *
                C79306 * C79287 +
            ((C52140 * C6041 + C52053 * C6225 + C52141 * C12366 +
              C52054 * C12510) *
                 C166 +
             (C52140 * C6139 + C52053 * C6477 + C52141 * C12440 +
              C52054 * C12718) *
                 C79308) *
                C79306 * C79262) *
               C79072) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eezx[52] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C26498 * C96 + C79306 * C102) * C52140 +
                      (C26498 * C246 + C79306 * C515) * C52053 +
                      C53460 * C52141 + C53734 * C52054) *
                         C79308 * C79027 * C79310 -
                     (C30345 * C52054 + C30028 * C52141 + C27516 * C52053 +
                      C27246 * C52140) *
                         C79308 * C79027 * C79303 +
                     (C27249 * C52140 + C27517 * C52053 + C32045 * C52141 +
                      C32299 * C52054) *
                         C79308 * C79027 * C79290 -
                     (C34492 * C52054 + C34282 * C52141 + C31581 * C52053 +
                      C31432 * C52140) *
                         C79308 * C79027 * C79269) *
                        C13595 +
                    ((C27250 * C52140 + C27518 * C52053 + C30029 * C52141 +
                      C30346 * C52054) *
                         C79308 * C79027 * C79303 -
                     (C53736 * C52054 + C53464 * C52141 +
                      (C26498 * C247 + C79306 * C516) * C52053 +
                      (C26498 * C97 + C79306 * C103) * C52140) *
                         C79308 * C79027 * C79310 -
                     (C33792 * C52054 + C33492 * C52141 + C27519 * C52053 +
                      C27252 * C52140) *
                         C79308 * C79027 * C79290 +
                     (C32748 * C52140 + C32952 * C52053 +
                      (C26498 * C8378 + C79306 * C8380) * C52141 +
                      (C26498 * C8522 + C79306 * C8798) * C52054) *
                         C79308 * C79027 * C79269) *
                        C78992)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C26498 * C96 + C79306 * C102) * C52140 +
                      (C26498 * C246 + C79306 * C515) * C52053 +
                      C53460 * C52141 + C53734 * C52054) *
                         C79308 * C79027 * C12991 -
                     (C30345 * C52054 + C30028 * C52141 + C27516 * C52053 +
                      C27246 * C52140) *
                         C79308 * C79027 * C79072) *
                        C79309 +
                    ((C27250 * C52140 + C27518 * C52053 + C30029 * C52141 +
                      C30346 * C52054) *
                         C79308 * C79027 * C79072 -
                     (C53736 * C52054 + C53464 * C52141 +
                      (C26498 * C247 + C79306 * C516) * C52053 +
                      (C26498 * C97 + C79306 * C103) * C52140) *
                         C79308 * C79027 * C12991) *
                        C79299 +
                    (((C26498 * C98 + C79306 * C104) * C52140 +
                      (C26498 * C248 + C79306 * C517) * C52053 +
                      C53468 * C52141 + C53738 * C52054) *
                         C79308 * C79027 * C12991 -
                     (C30347 * C52054 + C30032 * C52141 + C27520 * C52053 +
                      C27254 * C52140) *
                         C79308 * C79027 * C79072) *
                        C79283 +
                    ((C28653 * C52140 + C28858 * C52053 +
                      (C26498 * C3934 + C79306 * C3938) * C52141 +
                      (C26498 * C4168 + C79306 * C4616) * C52054) *
                         C79308 * C79027 * C79072 -
                     (C54983 * C52054 + C54778 * C52141 +
                      (C26498 * C249 + C79306 * C518) * C52053 +
                      (C26498 * C99 + C79306 * C105) * C52140) *
                         C79308 * C79027 * C12991) *
                        C79263)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C26498 * C96 + C79306 * C102) * C52140 +
                       (C26498 * C246 + C79306 * C515) * C52053 +
                       C53460 * C52141 + C53734 * C52054) *
                          C79308 * C79301 -
                      (C53735 * C52054 + C53463 * C52141 + C53734 * C52053 +
                       C53460 * C52140) *
                          C79308 * C79287 +
                      (C53463 * C52140 + C53735 * C52053 + C61458 * C52141 +
                       C61612 * C52054) *
                          C79308 * C79262) *
                         C12991 +
                     ((C30028 * C52140 + C30345 * C52053 + C32043 * C52141 +
                       C32298 * C52054) *
                          C79308 * C79287 -
                      (C30345 * C52054 + C30028 * C52141 + C27516 * C52053 +
                       C27246 * C52140) *
                          C79308 * C79301 -
                      (C38370 * C52054 + C38160 * C52141 + C32298 * C52053 +
                       C32043 * C52140) *
                          C79308 * C79262) *
                         C79072) *
                        C13595 +
                    (((C53464 * C52140 + C53736 * C52053 + C53466 * C52141 +
                       C53737 * C52054) *
                          C79308 * C79287 -
                      (C53736 * C52054 + C53464 * C52141 +
                       (C26498 * C247 + C79306 * C516) * C52053 +
                       (C26498 * C97 + C79306 * C103) * C52140) *
                          C79308 * C79301 -
                      (C63080 * C52054 + C62876 * C52141 + C53737 * C52053 +
                       C53466 * C52140) *
                          C79308 * C79262) *
                         C12991 +
                     ((C27250 * C52140 + C27518 * C52053 + C30029 * C52141 +
                       C30346 * C52054) *
                          C79308 * C79301 -
                      (C37072 * C52054 + C36772 * C52141 + C30346 * C52053 +
                       C30029 * C52140) *
                          C79308 * C79287 +
                      (C36772 * C52140 + C37072 * C52053 +
                       (C26498 * C12366 + C79306 * C12368) * C52141 +
                       (C26498 * C12510 + C79306 * C12786) * C52054) *
                          C79308 * C79262) *
                         C79072) *
                        C78992)) /
                      (p * q * std::sqrt(p + q));
    d2eezy[52] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C166 * C96 + C79308 * C167) * C52140 +
            (C166 * C246 + C79308 * C563) * C52053 + C53280 * C52141 +
            C53818 * C52054) *
               C79306 * C79027 * C79310 -
           (C55930 * C52054 + C55322 * C52141 +
            (C166 * C973 + C79308 * C1463) * C52053 +
            (C166 * C749 + C79308 * C859) * C52140) *
               C79306 * C79027 * C79303 +
           ((C166 * C750 + C79308 * C860) * C52140 +
            (C166 * C974 + C79308 * C1464) * C52053 + C57246 * C52141 +
            C57732 * C52054) *
               C79306 * C79027 * C79290 -
           (C59846 * C52054 + C59435 * C52141 +
            (C166 * C5676 + C79308 * C5914) * C52053 +
            (C166 * C5568 + C79308 * C5626) * C52140) *
               C79306 * C79027 * C79269) *
              C13595 +
          ((C892 * C52140 + C1483 * C52053 + C4064 * C52141 + C4726 * C52054) *
               C79306 * C79027 * C79303 -
           (C2416 * C52054 + C1825 * C52141 + C582 * C52053 + C196 * C52140) *
               C79306 * C79027 * C79310 -
           (C8204 * C52054 + C7588 * C52141 + C1484 * C52053 + C893 * C52140) *
               C79306 * C79027 * C79290 +
           (C6880 * C52140 + C7304 * C52053 +
            (C166 * C8378 + C79308 * C8452) * C52141 +
            (C166 * C8522 + C79308 * C8866) * C52054) *
               C79306 * C79027 * C79269) *
              C78992)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C166 * C96 + C79308 * C167) * C52140 +
            (C166 * C246 + C79308 * C563) * C52053 + C53280 * C52141 +
            C53818 * C52054) *
               C79306 * C79027 * C12991 -
           (C55930 * C52054 + C55322 * C52141 +
            (C166 * C973 + C79308 * C1463) * C52053 +
            (C166 * C749 + C79308 * C859) * C52140) *
               C79306 * C79027 * C79072) *
              C79309 +
          ((C892 * C52140 + C1483 * C52053 + C4064 * C52141 + C4726 * C52054) *
               C79306 * C79027 * C79072 -
           (C2416 * C52054 + C1825 * C52141 + C582 * C52053 + C196 * C52140) *
               C79306 * C79027 * C12991) *
              C79299 +
          ((C199 * C52140 + C583 * C52053 + C1828 * C52141 + C2418 * C52054) *
               C79306 * C79027 * C12991 -
           (C4727 * C52054 + C4067 * C52141 + C1485 * C52053 + C895 * C52140) *
               C79306 * C79027 * C79072) *
              C79283 +
          ((C2688 * C52140 + C3112 * C52053 +
            (C166 * C3934 + C79308 * C4050) * C52141 +
            (C166 * C4168 + C79308 * C4718) * C52054) *
               C79306 * C79027 * C79072 -
           (C3758 * C52054 + C3334 * C52141 + C584 * C52053 + C200 * C52140) *
               C79306 * C79027 * C12991) *
              C79263)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C166 * C96 + C79308 * C167) * C52140 +
             (C166 * C246 + C79308 * C563) * C52053 + C53280 * C52141 +
             C53818 * C52054) *
                C79306 * C79301 -
            (C53819 * C52054 + C53283 * C52141 + C53818 * C52053 +
             C53280 * C52140) *
                C79306 * C79287 +
            (C53283 * C52140 + C53819 * C52053 + C61355 * C52141 +
             C61661 * C52054) *
                C79306 * C79262) *
               C12991 +
           ((C55322 * C52140 + C55930 * C52053 + C57244 * C52141 +
             C57731 * C52054) *
                C79306 * C79287 -
            (C55930 * C52054 + C55322 * C52141 +
             (C166 * C973 + C79308 * C1463) * C52053 +
             (C166 * C749 + C79308 * C859) * C52140) *
                C79306 * C79301 -
            (C63762 * C52054 + C63352 * C52141 + C57731 * C52053 +
             C57244 * C52140) *
                C79306 * C79262) *
               C79072) *
              C13595 +
          (((C1825 * C52140 + C2416 * C52053 + C1826 * C52141 +
             C2417 * C52054) *
                C79306 * C79287 -
            (C2416 * C52054 + C1825 * C52141 + C582 * C52053 + C196 * C52140) *
                C79306 * C79301 -
            (C12224 * C52054 + C11800 * C52141 + C2417 * C52053 +
             C1826 * C52140) *
                C79306 * C79262) *
               C12991 +
           ((C892 * C52140 + C1483 * C52053 + C4064 * C52141 + C4726 * C52054) *
                C79306 * C79301 -
            (C11544 * C52054 + C10928 * C52141 + C4726 * C52053 +
             C4064 * C52140) *
                C79306 * C79287 +
            (C10928 * C52140 + C11544 * C52053 +
             (C166 * C12366 + C79308 * C12440) * C52141 +
             (C166 * C12510 + C79308 * C12854) * C52054) *
                C79306 * C79262) *
               C79072) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eezz[52] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C52394 * C96 + C52397 + C52397 + C52053 * C632 +
                      C52395 * C1682 + C52398 + C52398 + C52054 * C2498) *
                         C79308 * C79306 * C79027 * C79310 -
                     (C52395 * C3931 + C53073 + C53073 + C52054 * C4827 +
                      C52394 * C749 + C53074 + C53074 + C52053 * C1565) *
                         C79308 * C79306 * C79027 * C79303 +
                     (C52394 * C750 + C53075 + C53075 + C52053 * C1566 +
                      C52395 * C6044 + C53076 + C53076 + C52054 * C6720) *
                         C79308 * C79306 * C79027 * C79290 -
                     (C52395 * C8377 + C57080 + C57080 + C52054 * C8933 +
                      C52394 * C5568 + C57081 + C57081 + C52053 * C5960) *
                         C79308 * C79306 * C79027 * C79269) *
                        C13595 +
                    ((C52394 * C748 + C53077 + C53077 + C52053 * C1564 +
                      C52395 * C3932 + C53078 + C53078 + C52054 * C4828) *
                         C79308 * C79306 * C79027 * C79303 -
                     (C52395 * C1681 + C52399 + C52399 + C52054 * C2497 +
                      C52394 * C97 + C52400 + C52400 + C52053 * C633) *
                         C79308 * C79306 * C79027 * C79310 -
                     (C52395 * C6043 + C53079 + C53079 + C52054 * C6719 +
                      C52394 * C751 + C53080 + C53080 + C52053 * C1567) *
                         C79308 * C79306 * C79027 * C79290 +
                     (C52394 * C5567 + C58408 + C58408 + C52053 * C5959 +
                      C52395 * C8378 + C58409 + C58409 + C52054 * C8934) *
                         C79308 * C79306 * C79027 * C79269) *
                        C78992)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C52394 * C96 + C52397 + C52397 + C52053 * C632 +
                      C52395 * C1682 + C52398 + C52398 + C52054 * C2498) *
                         C79308 * C79306 * C79027 * C12991 -
                     (C52395 * C3931 + C53073 + C53073 + C52054 * C4827 +
                      C52394 * C749 + C53074 + C53074 + C52053 * C1565) *
                         C79308 * C79306 * C79027 * C79072) *
                        C79309 +
                    ((C52394 * C748 + C53077 + C53077 + C52053 * C1564 +
                      C52395 * C3932 + C53078 + C53078 + C52054 * C4828) *
                         C79308 * C79306 * C79027 * C79072 -
                     (C52395 * C1681 + C52399 + C52399 + C52054 * C2497 +
                      C52394 * C97 + C52400 + C52400 + C52053 * C633) *
                         C79308 * C79306 * C79027 * C12991) *
                        C79299 +
                    ((C52394 * C98 + C52401 + C52401 + C52053 * C634 +
                      C52395 * C1685 + C52402 + C52402 + C52054 * C2501) *
                         C79308 * C79306 * C79027 * C12991 -
                     (C52395 * C3933 + C53081 + C53081 + C52054 * C4829 +
                      C52394 * C752 + C53082 + C53082 + C52053 * C1568) *
                         C79308 * C79306 * C79027 * C79072) *
                        C79283 +
                    ((C52394 * C754 + C54500 + C54500 + C52053 * C1570 +
                      C52395 * C3934 + C54501 + C54501 + C52054 * C4830) *
                         C79308 * C79306 * C79027 * C79072 -
                     (C52395 * C1687 + C52403 + C52403 + C52054 * C2503 +
                      C52394 * C99 + C52404 + C52404 + C52053 * C635) *
                         C79308 * C79306 * C79027 * C12991) *
                        C79263)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C52394 * C96 + C52397 + C52397 + C52053 * C632 +
                       C52395 * C1682 + C52398 + C52398 + C52054 * C2498) *
                          C79308 * C79306 * C79301 -
                      (C52395 * C1683 + C53894 + C53894 + C52054 * C2499 +
                       C52394 * C1682 + C53895 + C53895 + C52053 * C2498) *
                          C79308 * C79306 * C79287 +
                      (C52394 * C1683 + C53896 + C53896 + C52053 * C2499 +
                       C52395 * C10320 + C53897 + C53897 + C52054 * C10712) *
                          C79308 * C79306 * C79262) *
                         C12991 +
                     ((C52394 * C3931 + C56029 + C56029 + C52053 * C4827 +
                       C52395 * C6042 + C56030 + C56030 + C52054 * C6718) *
                          C79308 * C79306 * C79287 -
                      (C52395 * C3931 + C53073 + C53073 + C52054 * C4827 +
                       C52394 * C749 + C53074 + C53074 + C52053 * C1565) *
                          C79308 * C79306 * C79301 -
                      (C52395 * C12365 + C57808 + C57808 + C52054 * C12921 +
                       C52394 * C6042 + C57809 + C57809 + C52053 * C6718) *
                          C79308 * C79306 * C79262) *
                         C79072) *
                        C13595 +
                    (((C52394 * C1681 + C53898 + C53898 + C52053 * C2497 +
                       C52395 * C1684 + C53899 + C53899 + C52054 * C2500) *
                          C79308 * C79306 * C79287 -
                      (C52395 * C1681 + C52399 + C52399 + C52054 * C2497 +
                       C52394 * C97 + C52400 + C52400 + C52053 * C633) *
                          C79308 * C79306 * C79301 -
                      (C52395 * C10319 + C53900 + C53900 + C52054 * C10711 +
                       C52394 * C1684 + C53901 + C53901 + C52053 * C2500) *
                          C79308 * C79306 * C79262) *
                         C12991 +
                     ((C52394 * C748 + C53077 + C53077 + C52053 * C1564 +
                       C52395 * C3932 + C53078 + C53078 + C52054 * C4828) *
                          C79308 * C79306 * C79301 -
                      (C52395 * C6041 + C56031 + C56031 + C52054 * C6717 +
                       C52394 * C3932 + C56032 + C56032 + C52053 * C4828) *
                          C79308 * C79306 * C79287 +
                      (C52394 * C6041 + C62597 + C62597 + C52053 * C6717 +
                       C52395 * C12366 + C62598 + C62598 + C52054 * C12922) *
                          C79308 * C79306 * C79262) *
                         C79072) *
                        C78992)) /
                      (p * q * std::sqrt(p + q));
    d2eexx[53] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C52053 +
             C53184 * C52054) *
                C79308 * C79230 -
            (C53185 * C52054 + C53184 * C52053) * C79308 * C79114) *
               C12991 +
           ((C29703 * C52053 + C31774 * C52054) * C79308 * C79114 -
            (C29703 * C52054 + C26964 * C52053) * C79308 * C79230) *
               C79072) *
              C78986 +
          (((C53186 * C52053 + C53187 * C52054) * C79308 * C79114 -
            (C53186 * C52054 +
             (C26497 * C97 + C26503 + C26503 + C79306 * C109) * C52053) *
                C79308 * C79230) *
               C12991 +
           ((C26966 * C52053 + C29704 * C52054) * C79308 * C79230 -
            (C36469 * C52054 + C29704 * C52053) * C79308 * C79114) *
               C79072) *
              C78995 +
          ((((C26497 * C98 + C26504 + C26504 + C79306 * C110) * C52053 +
             C53188 * C52054) *
                C79308 * C79230 -
            (C53189 * C52054 + C53188 * C52053) * C79308 * C79114) *
               C12991 +
           ((C29705 * C52053 +
             (C26497 * C10817 + C27771 + C27771 + C79306 * C10819) * C52054) *
                C79308 * C79114 -
            (C29705 * C52054 + C26968 * C52053) * C79308 * C79230) *
               C79072) *
              C15086)) /
        (p * q * std::sqrt(p + q));
    d2eexy[53] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C166 * C96 + C79308 * C167) * C26498 +
              (C166 * C102 + C79308 * C173) * C79306) *
                 C52053 +
             (C53284 + C53285) * C52054) *
                C79230 -
            ((C53286 + C53287) * C52054 + (C53285 + C53284) * C52053) *
                C79114) *
               C12991 +
           (((C55324 + C55325) * C52053 + (C57250 + C57251) * C52054) * C79114 -
            ((C55325 + C55324) * C52054 +
             ((C166 * C757 + C79308 * C867) * C79306 +
              (C166 * C749 + C79308 * C859) * C26498) *
                 C52053) *
                C79230) *
               C79072) *
              C78986 +
          ((((C53272 + C53273) * C52053 + (C53274 + C53275) * C52054) * C79114 -
            ((C53273 + C53272) * C52054 +
             (C197 * C79306 + C196 * C26498) * C52053) *
                C79230) *
               C12991 +
           (((C892 * C26498 + C891 * C79306) * C52053 +
             (C55318 + C55319) * C52054) *
                C79230 -
            ((C61906 + C61907) * C52054 + (C55319 + C55318) * C52053) *
                C79114) *
               C79072) *
              C78995 +
          ((((C199 * C26498 + C198 * C79306) * C52053 +
             (C53276 + C53277) * C52054) *
                C79230 -
            ((C53278 + C53279) * C52054 + (C53277 + C53276) * C52053) *
                C79114) *
               C12991 +
           (((C55320 + C55321) * C52053 +
             ((C166 * C10817 + C79308 * C10920) * C26498 +
              (C166 * C10818 + C79308 * C10921) * C79306) *
                 C52054) *
                C79114 -
            ((C55321 + C55320) * C52054 +
             (C896 * C79306 + C895 * C26498) * C52053) *
                C79230) *
               C79072) *
              C15086)) /
        (p * q * std::sqrt(p + q));
    d2eexz[53] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
                 C26498 +
             (C52140 * C102 + C52053 * C252 + C52141 * C1690 + C52054 * C1914) *
                 C79306) *
                C79308 * C79230 -
            ((C52141 * C1691 + C52054 * C1915 + C52140 * C1690 +
              C52053 * C1914) *
                 C79306 +
             (C52141 * C1683 + C52054 * C1907 + C52140 * C1682 +
              C52053 * C1906) *
                 C26498) *
                C79308 * C79114) *
               C12991 +
           (((C52140 * C3931 + C52053 * C4165 + C52141 * C6042 +
              C52054 * C6226) *
                 C26498 +
             (C52140 * C3935 + C52053 * C4169 + C52141 * C6048 +
              C52054 * C6232) *
                 C79306) *
                C79308 * C79114 -
            ((C52141 * C3935 + C52054 * C4169 + C52140 * C757 + C52053 * C981) *
                 C79306 +
             (C52141 * C3931 + C52054 * C4165 + C52140 * C749 + C52053 * C973) *
                 C26498) *
                C79308 * C79230) *
               C79072) *
              C78986 +
          ((((C52140 * C1681 + C52053 * C1905 + C52141 * C1684 +
              C52054 * C1908) *
                 C26498 +
             (C52140 * C1689 + C52053 * C1913 + C52141 * C1692 +
              C52054 * C1916) *
                 C79306) *
                C79308 * C79114 -
            ((C52141 * C1689 + C52054 * C1913 + C52140 * C103 + C52053 * C253) *
                 C79306 +
             (C52141 * C1681 + C52054 * C1905 + C52140 * C97 + C52053 * C247) *
                 C26498) *
                C79308 * C79230) *
               C12991 +
           (((C52140 * C748 + C52053 * C972 + C52141 * C3932 + C52054 * C4166) *
                 C26498 +
             (C52140 * C756 + C52053 * C980 + C52141 * C3936 + C52054 * C4170) *
                 C79306) *
                C79308 * C79230 -
            ((C52141 * C6047 + C52054 * C6231 + C52140 * C3936 +
              C52053 * C4170) *
                 C79306 +
             (C52141 * C6041 + C52054 * C6225 + C52140 * C3932 +
              C52053 * C4166) *
                 C26498) *
                C79308 * C79114) *
               C79072) *
              C78995 +
          ((((C52140 * C98 + C52053 * C248 + C52141 * C1685 + C52054 * C1909) *
                 C26498 +
             (C52140 * C104 + C52053 * C254 + C52141 * C1693 + C52054 * C1917) *
                 C79306) *
                C79308 * C79230 -
            ((C52141 * C1694 + C52054 * C1918 + C52140 * C1693 +
              C52053 * C1917) *
                 C79306 +
             (C52141 * C1686 + C52054 * C1910 + C52140 * C1685 +
              C52053 * C1909) *
                 C26498) *
                C79308 * C79114) *
               C12991 +
           (((C52140 * C3933 + C52053 * C4167 + C52141 * C10817 +
              C52054 * C11026) *
                 C26498 +
             (C52140 * C3937 + C52053 * C4171 + C52141 * C10818 +
              C52054 * C11027) *
                 C79306) *
                C79308 * C79114 -
            ((C52141 * C3937 + C52054 * C4171 + C52140 * C760 + C52053 * C984) *
                 C79306 +
             (C52141 * C3933 + C52054 * C4167 + C52140 * C752 + C52053 * C976) *
                 C26498) *
                C79308 * C79230) *
               C79072) *
              C15086)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[53] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C26498 * C96 + C79306 * C102) * C166 +
              (C26498 * C167 + C79306 * C324) * C79308) *
                 C52053 +
             (C53472 + C53473) * C52054) *
                C79230 -
            ((C53474 + C53475) * C52054 + (C53473 + C53472) * C52053) *
                C79114) *
               C12991 +
           (((C55522 + C55523) * C52053 + (C57404 + C57405) * C52054) * C79114 -
            ((C55523 + C55522) * C52054 +
             (C27247 * C79308 + C27246 * C166) * C52053) *
                C79230) *
               C79072) *
              C78986 +
          ((((C53476 + C53477) * C52053 + (C53478 + C53479) * C52054) * C79114 -
            ((C53477 + C53476) * C52054 +
             ((C26498 * C168 + C79306 * C325) * C79308 +
              (C26498 * C97 + C79306 * C103) * C166) *
                 C52053) *
                C79230) *
               C12991 +
           (((C27250 * C166 + C27251 * C79308) * C52053 +
             (C55524 + C55525) * C52054) *
                C79230 -
            ((C62104 + C62105) * C52054 + (C55525 + C55524) * C52053) *
                C79114) *
               C79072) *
              C78995 +
          (((((C26498 * C98 + C79306 * C104) * C166 +
              (C26498 * C169 + C79306 * C326) * C79308) *
                 C52053 +
             (C53480 + C53481) * C52054) *
                C79230 -
            ((C53482 + C53483) * C52054 + (C53481 + C53480) * C52053) *
                C79114) *
               C12991 +
           (((C55526 + C55527) * C52053 +
             ((C26498 * C10817 + C79306 * C10818) * C166 +
              (C26498 * C10920 + C79306 * C11132) * C79308) *
                 C52054) *
                C79114 -
            ((C55527 + C55526) * C52054 +
             (C27255 * C79308 + C27254 * C166) * C52053) *
                C79230) *
               C79072) *
              C15086)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[53] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C372 * C96 + C380 + C380 + C79308 * C373) * C79306 * C52053 +
             C53572 * C52054) *
                C79230 -
            (C53573 * C52054 + C53572 * C52053) * C79114) *
               C12991 +
           ((C55633 * C52053 + C57500 * C52054) * C79114 -
            (C55633 * C52054 +
             (C372 * C749 + C1180 + C1180 + C79308 * C1169) * C79306 * C52053) *
                C79230) *
               C79072) *
              C78986 +
          (((C53562 * C52053 + C53563 * C52054) * C79114 -
            (C53562 * C52054 + C402 * C79306 * C52053) * C79230) *
               C12991 +
           ((C1201 * C79306 * C52053 + C55628 * C52054) * C79230 -
            (C62204 * C52054 + C55628 * C52053) * C79114) *
               C79072) *
              C78995 +
          (((C403 * C79306 * C52053 + C53564 * C52054) * C79230 -
            (C53565 * C52054 + C53564 * C52053) * C79114) *
               C12991 +
           ((C55629 * C52053 +
             (C372 * C10817 + C11235 + C11235 + C79308 * C11231) * C79306 *
                 C52054) *
                C79114 -
            (C55629 * C52054 + C1203 * C79306 * C52053) * C79230) *
               C79072) *
              C15086)) /
        (p * q * std::sqrt(p + q));
    d2eeyz[53] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
                 C166 +
             (C52140 * C167 + C52053 * C447 + C52141 * C1792 + C52054 * C2212) *
                 C79308) *
                C79306 * C79230 -
            ((C52141 * C1793 + C52054 * C2213 + C52140 * C1792 +
              C52053 * C2212) *
                 C79308 +
             (C52141 * C1683 + C52054 * C1907 + C52140 * C1682 +
              C52053 * C1906) *
                 C166) *
                C79306 * C79114) *
               C12991 +
           (((C52140 * C3931 + C52053 * C4165 + C52141 * C6042 +
              C52054 * C6226) *
                 C166 +
             (C52140 * C4047 + C52053 * C4501 + C52141 * C6140 +
              C52054 * C6478) *
                 C79308) *
                C79306 * C79114 -
            ((C52141 * C4047 + C52054 * C4501 + C52140 * C859 +
              C52053 * C1279) *
                 C79308 +
             (C52141 * C3931 + C52054 * C4165 + C52140 * C749 + C52053 * C973) *
                 C166) *
                C79306 * C79230) *
               C79072) *
              C78986 +
          ((((C52140 * C1681 + C52053 * C1905 + C52141 * C1684 +
              C52054 * C1908) *
                 C166 +
             (C52140 * C1791 + C52053 * C2211 + C52141 * C1794 +
              C52054 * C2214) *
                 C79308) *
                C79306 * C79114 -
            ((C52141 * C1791 + C52054 * C2211 + C52140 * C168 + C52053 * C448) *
                 C79308 +
             (C52141 * C1681 + C52054 * C1905 + C52140 * C97 + C52053 * C247) *
                 C166) *
                C79306 * C79230) *
               C12991 +
           (((C52140 * C748 + C52053 * C972 + C52141 * C3932 + C52054 * C4166) *
                 C166 +
             (C52140 * C858 + C52053 * C1278 + C52141 * C4048 +
              C52054 * C4502) *
                 C79308) *
                C79306 * C79230 -
            ((C52141 * C6139 + C52054 * C6477 + C52140 * C4048 +
              C52053 * C4502) *
                 C79308 +
             (C52141 * C6041 + C52054 * C6225 + C52140 * C3932 +
              C52053 * C4166) *
                 C166) *
                C79306 * C79114) *
               C79072) *
              C78995 +
          ((((C52140 * C98 + C52053 * C248 + C52141 * C1685 + C52054 * C1909) *
                 C166 +
             (C52140 * C169 + C52053 * C449 + C52141 * C1795 + C52054 * C2215) *
                 C79308) *
                C79306 * C79230 -
            ((C52141 * C1796 + C52054 * C2216 + C52140 * C1795 +
              C52053 * C2215) *
                 C79308 +
             (C52141 * C1686 + C52054 * C1910 + C52140 * C1685 +
              C52053 * C1909) *
                 C166) *
                C79306 * C79114) *
               C12991 +
           (((C52140 * C3933 + C52053 * C4167 + C52141 * C10817 +
              C52054 * C11026) *
                 C166 +
             (C52140 * C4049 + C52053 * C4503 + C52141 * C10920 +
              C52054 * C11336) *
                 C79308) *
                C79306 * C79114 -
            ((C52141 * C4049 + C52054 * C4503 + C52140 * C862 +
              C52053 * C1282) *
                 C79308 +
             (C52141 * C3933 + C52054 * C4167 + C52140 * C752 + C52053 * C976) *
                 C166) *
                C79306 * C79230) *
               C79072) *
              C15086)) /
        (p * q * std::sqrt(p + q));
    d2eezx[53] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C26498 * C96 + C79306 * C102) * C52140 +
                       (C26498 * C246 + C79306 * C515) * C52053 +
                       C53460 * C52141 + C53734 * C52054) *
                          C79308 * C79230 -
                      (C53735 * C52054 + C53463 * C52141 + C53734 * C52053 +
                       C53460 * C52140) *
                          C79308 * C79114) *
                         C12991 +
                     ((C30028 * C52140 + C30345 * C52053 + C32043 * C52141 +
                       C32298 * C52054) *
                          C79308 * C79114 -
                      (C30345 * C52054 + C30028 * C52141 + C27516 * C52053 +
                       C27246 * C52140) *
                          C79308 * C79230) *
                         C79072) *
                        C78986 +
                    (((C53464 * C52140 + C53736 * C52053 + C53466 * C52141 +
                       C53737 * C52054) *
                          C79308 * C79114 -
                      (C53736 * C52054 + C53464 * C52141 +
                       (C26498 * C247 + C79306 * C516) * C52053 +
                       (C26498 * C97 + C79306 * C103) * C52140) *
                          C79308 * C79230) *
                         C12991 +
                     ((C27250 * C52140 + C27518 * C52053 + C30029 * C52141 +
                       C30346 * C52054) *
                          C79308 * C79230 -
                      (C37072 * C52054 + C36772 * C52141 + C30346 * C52053 +
                       C30029 * C52140) *
                          C79308 * C79114) *
                         C79072) *
                        C78995 +
                    ((((C26498 * C98 + C79306 * C104) * C52140 +
                       (C26498 * C248 + C79306 * C517) * C52053 +
                       C53468 * C52141 + C53738 * C52054) *
                          C79308 * C79230 -
                      (C53739 * C52054 + C53471 * C52141 + C53738 * C52053 +
                       C53468 * C52140) *
                          C79308 * C79114) *
                         C12991 +
                     ((C30032 * C52140 + C30347 * C52053 +
                       (C26498 * C10817 + C79306 * C10818) * C52141 +
                       (C26498 * C11026 + C79306 * C11440) * C52054) *
                          C79308 * C79114 -
                      (C30347 * C52054 + C30032 * C52141 + C27520 * C52053 +
                       C27254 * C52140) *
                          C79308 * C79230) *
                         C79072) *
                        C15086)) /
                  (p * q * std::sqrt(p + q));
    d2eezy[53] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C166 * C96 + C79308 * C167) * C52140 +
             (C166 * C246 + C79308 * C563) * C52053 + C53280 * C52141 +
             C53818 * C52054) *
                C79306 * C79230 -
            (C53819 * C52054 + C53283 * C52141 + C53818 * C52053 +
             C53280 * C52140) *
                C79306 * C79114) *
               C12991 +
           ((C55322 * C52140 + C55930 * C52053 + C57244 * C52141 +
             C57731 * C52054) *
                C79306 * C79114 -
            (C55930 * C52054 + C55322 * C52141 +
             (C166 * C973 + C79308 * C1463) * C52053 +
             (C166 * C749 + C79308 * C859) * C52140) *
                C79306 * C79230) *
               C79072) *
              C78986 +
          (((C1825 * C52140 + C2416 * C52053 + C1826 * C52141 +
             C2417 * C52054) *
                C79306 * C79114 -
            (C2416 * C52054 + C1825 * C52141 + C582 * C52053 + C196 * C52140) *
                C79306 * C79230) *
               C12991 +
           ((C892 * C52140 + C1483 * C52053 + C4064 * C52141 + C4726 * C52054) *
                C79306 * C79230 -
            (C11544 * C52054 + C10928 * C52141 + C4726 * C52053 +
             C4064 * C52140) *
                C79306 * C79114) *
               C79072) *
              C78995 +
          (((C199 * C52140 + C583 * C52053 + C1828 * C52141 + C2418 * C52054) *
                C79306 * C79230 -
            (C2419 * C52054 + C1831 * C52141 + C2418 * C52053 +
             C1828 * C52140) *
                C79306 * C79114) *
               C12991 +
           ((C4067 * C52140 + C4727 * C52053 +
             (C166 * C10817 + C79308 * C10920) * C52141 +
             (C166 * C11026 + C79308 * C11539) * C52054) *
                C79306 * C79114 -
            (C4727 * C52054 + C4067 * C52141 + C1485 * C52053 + C895 * C52140) *
                C79306 * C79230) *
               C79072) *
              C15086)) /
        (p * q * std::sqrt(p + q));
    d2eezz[53] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C52394 * C96 + C52397 + C52397 + C52053 * C632 +
                       C52395 * C1682 + C52398 + C52398 + C52054 * C2498) *
                          C79308 * C79306 * C79230 -
                      (C52395 * C1683 + C53894 + C53894 + C52054 * C2499 +
                       C52394 * C1682 + C53895 + C53895 + C52053 * C2498) *
                          C79308 * C79306 * C79114) *
                         C12991 +
                     ((C52394 * C3931 + C56029 + C56029 + C52053 * C4827 +
                       C52395 * C6042 + C56030 + C56030 + C52054 * C6718) *
                          C79308 * C79306 * C79114 -
                      (C52395 * C3931 + C53073 + C53073 + C52054 * C4827 +
                       C52394 * C749 + C53074 + C53074 + C52053 * C1565) *
                          C79308 * C79306 * C79230) *
                         C79072) *
                        C78986 +
                    (((C52394 * C1681 + C53898 + C53898 + C52053 * C2497 +
                       C52395 * C1684 + C53899 + C53899 + C52054 * C2500) *
                          C79308 * C79306 * C79114 -
                      (C52395 * C1681 + C52399 + C52399 + C52054 * C2497 +
                       C52394 * C97 + C52400 + C52400 + C52053 * C633) *
                          C79308 * C79306 * C79230) *
                         C12991 +
                     ((C52394 * C748 + C53077 + C53077 + C52053 * C1564 +
                       C52395 * C3932 + C53078 + C53078 + C52054 * C4828) *
                          C79308 * C79306 * C79230 -
                      (C52395 * C6041 + C56031 + C56031 + C52054 * C6717 +
                       C52394 * C3932 + C56032 + C56032 + C52053 * C4828) *
                          C79308 * C79306 * C79114) *
                         C79072) *
                        C78995 +
                    (((C52394 * C98 + C52401 + C52401 + C52053 * C634 +
                       C52395 * C1685 + C52402 + C52402 + C52054 * C2501) *
                          C79308 * C79306 * C79230 -
                      (C52395 * C1686 + C53902 + C53902 + C52054 * C2502 +
                       C52394 * C1685 + C53903 + C53903 + C52053 * C2501) *
                          C79308 * C79306 * C79114) *
                         C12991 +
                     ((C52394 * C3933 + C56033 + C56033 + C52053 * C4829 +
                       C52395 * C10817 + C56034 + C56034 + C52054 * C11643) *
                          C79308 * C79306 * C79114 -
                      (C52395 * C3933 + C53081 + C53081 + C52054 * C4829 +
                       C52394 * C752 + C53082 + C53082 + C52053 * C1568) *
                          C79308 * C79306 * C79230) *
                         C79072) *
                        C15086)) /
                  (p * q * std::sqrt(p + q));
    d2eexx[54] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C52053 +
            C53184 * C52054) *
               C79308 * C79027 * C12991 -
           (C29703 * C52054 + C26964 * C52053) * C79308 * C79027 * C79072) *
              C79309 +
          ((C26966 * C52053 + C29704 * C52054) * C79308 * C79027 * C79072 -
           (C53186 * C52054 +
            (C26497 * C97 + C26503 + C26503 + C79306 * C109) * C52053) *
               C79308 * C79027 * C12991) *
              C79299 +
          (((C26497 * C98 + C26504 + C26504 + C79306 * C110) * C52053 +
            C53188 * C52054) *
               C79308 * C79027 * C12991 -
           (C29705 * C52054 + C26968 * C52053) * C79308 * C79027 * C79072) *
              C79283 +
          ((C28447 * C52053 +
            (C26497 * C3934 + C29059 + C29059 + C79306 * C3942) * C52054) *
               C79308 * C79027 * C79072 -
           (C54573 * C52054 +
            (C26497 * C99 + C26507 + C26507 + C79306 * C111) * C52053) *
               C79308 * C79027 * C12991) *
              C79263)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C52053 +
            C53184 * C52054) *
               C79308 * C79027 * C79310 -
           (C29703 * C52054 + C26964 * C52053) * C79308 * C79027 * C79303 +
           (C26965 * C52053 + C31775 * C52054) * C79308 * C79027 * C79290 -
           (C34064 * C52054 + C31273 * C52053) * C79308 * C79027 * C79269) *
              C13595 +
          ((C26966 * C52053 + C29704 * C52054) * C79308 * C79027 * C79303 -
           (C53186 * C52054 +
            (C26497 * C97 + C26503 + C26503 + C79306 * C109) * C52053) *
               C79308 * C79027 * C79310 -
           (C33189 * C52054 + C26967 * C52053) * C79308 * C79027 * C79290 +
           (C32541 * C52053 +
            (C26497 * C8378 + C33186 + C33186 + C79306 * C8382) * C52054) *
               C79308 * C79027 * C79269) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eexy[54] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((((C166 * C96 + C79308 * C167) * C26498 +
                       (C166 * C102 + C79308 * C173) * C79306) *
                          C52053 +
                      (C53284 + C53285) * C52054) *
                         C79027 * C12991 -
                     ((C55325 + C55324) * C52054 +
                      ((C166 * C757 + C79308 * C867) * C79306 +
                       (C166 * C749 + C79308 * C859) * C26498) *
                          C52053) *
                         C79027 * C79072) *
                        C79309 +
                    (((C892 * C26498 + C891 * C79306) * C52053 +
                      (C55318 + C55319) * C52054) *
                         C79027 * C79072 -
                     ((C53273 + C53272) * C52054 +
                      (C197 * C79306 + C196 * C26498) * C52053) *
                         C79027 * C12991) *
                        C79299 +
                    (((C199 * C26498 + C198 * C79306) * C52053 +
                      (C53276 + C53277) * C52054) *
                         C79027 * C12991 -
                     ((C55321 + C55320) * C52054 +
                      (C896 * C79306 + C895 * C26498) * C52053) *
                         C79027 * C79072) *
                        C79283 +
                    (((C2688 * C26498 + C2687 * C79306) * C52053 +
                      ((C166 * C3934 + C79308 * C4050) * C26498 +
                       (C166 * C3938 + C79308 * C4054) * C79306) *
                          C52054) *
                         C79027 * C79072 -
                     ((C54641 + C54640) * C52054 +
                      (C201 * C79306 + C200 * C26498) * C52053) *
                         C79027 * C12991) *
                        C79263)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((((C166 * C96 + C79308 * C167) * C26498 +
                       (C166 * C102 + C79308 * C173) * C79306) *
                          C52053 +
                      (C53284 + C53285) * C52054) *
                         C79027 * C79310 -
                     ((C55325 + C55324) * C52054 +
                      ((C166 * C757 + C79308 * C867) * C79306 +
                       (C166 * C749 + C79308 * C859) * C26498) *
                          C52053) *
                         C79027 * C79303 +
                     (((C166 * C750 + C79308 * C860) * C26498 +
                       (C166 * C758 + C79308 * C868) * C79306) *
                          C52053 +
                      (C57252 + C57253) * C52054) *
                         C79027 * C79290 -
                     ((C59438 + C59437) * C52054 +
                      ((C166 * C5572 + C79308 * C5630) * C79306 +
                       (C166 * C5568 + C79308 * C5626) * C26498) *
                          C52053) *
                         C79027 * C79269) *
                        C13595 +
                    (((C892 * C26498 + C891 * C79306) * C52053 +
                      (C55318 + C55319) * C52054) *
                         C79027 * C79303 -
                     ((C53273 + C53272) * C52054 +
                      (C197 * C79306 + C196 * C26498) * C52053) *
                         C79027 * C79310 -
                     ((C58607 + C58606) * C52054 +
                      (C894 * C79306 + C893 * C26498) * C52053) *
                         C79027 * C79290 +
                     ((C6880 * C26498 + C6879 * C79306) * C52053 +
                      ((C166 * C8378 + C79308 * C8452) * C26498 +
                       (C166 * C8380 + C79308 * C8454) * C79306) *
                          C52054) *
                         C79027 * C79269) *
                        C78992)) /
                      (p * q * std::sqrt(p + q));
    d2eexz[54] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
                C26498 +
            (C52140 * C102 + C52053 * C252 + C52141 * C1690 + C52054 * C1914) *
                C79306) *
               C79308 * C79027 * C12991 -
           ((C52141 * C3935 + C52054 * C4169 + C52140 * C757 + C52053 * C981) *
                C79306 +
            (C52141 * C3931 + C52054 * C4165 + C52140 * C749 + C52053 * C973) *
                C26498) *
               C79308 * C79027 * C79072) *
              C79309 +
          (((C52140 * C748 + C52053 * C972 + C52141 * C3932 + C52054 * C4166) *
                C26498 +
            (C52140 * C756 + C52053 * C980 + C52141 * C3936 + C52054 * C4170) *
                C79306) *
               C79308 * C79027 * C79072 -
           ((C52141 * C1689 + C52054 * C1913 + C52140 * C103 + C52053 * C253) *
                C79306 +
            (C52141 * C1681 + C52054 * C1905 + C52140 * C97 + C52053 * C247) *
                C26498) *
               C79308 * C79027 * C12991) *
              C79299 +
          (((C52140 * C98 + C52053 * C248 + C52141 * C1685 + C52054 * C1909) *
                C26498 +
            (C52140 * C104 + C52053 * C254 + C52141 * C1693 + C52054 * C1917) *
                C79306) *
               C79308 * C79027 * C12991 -
           ((C52141 * C3937 + C52054 * C4171 + C52140 * C760 + C52053 * C984) *
                C79306 +
            (C52141 * C3933 + C52054 * C4167 + C52140 * C752 + C52053 * C976) *
                C26498) *
               C79308 * C79027 * C79072) *
              C79283 +
          (((C52140 * C754 + C52053 * C978 + C52141 * C3934 + C52054 * C4168) *
                C26498 +
            (C52140 * C762 + C52053 * C986 + C52141 * C3938 + C52054 * C4172) *
                C79306) *
               C79308 * C79027 * C79072 -
           ((C52141 * C1695 + C52054 * C1919 + C52140 * C105 + C52053 * C255) *
                C79306 +
            (C52141 * C1687 + C52054 * C1911 + C52140 * C99 + C52053 * C249) *
                C26498) *
               C79308 * C79027 * C12991) *
              C79263)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
                C26498 +
            (C52140 * C102 + C52053 * C252 + C52141 * C1690 + C52054 * C1914) *
                C79306) *
               C79308 * C79027 * C79310 -
           ((C52141 * C3935 + C52054 * C4169 + C52140 * C757 + C52053 * C981) *
                C79306 +
            (C52141 * C3931 + C52054 * C4165 + C52140 * C749 + C52053 * C973) *
                C26498) *
               C79308 * C79027 * C79303 +
           ((C52140 * C750 + C52053 * C974 + C52141 * C6044 + C52054 * C6228) *
                C26498 +
            (C52140 * C758 + C52053 * C982 + C52141 * C6050 + C52054 * C6234) *
                C79306) *
               C79308 * C79027 * C79290 -
           ((C52141 * C8379 + C52054 * C8523 + C52140 * C5572 +
             C52053 * C5680) *
                C79306 +
            (C52141 * C8377 + C52054 * C8521 + C52140 * C5568 +
             C52053 * C5676) *
                C26498) *
               C79308 * C79027 * C79269) *
              C13595 +
          (((C52140 * C748 + C52053 * C972 + C52141 * C3932 + C52054 * C4166) *
                C26498 +
            (C52140 * C756 + C52053 * C980 + C52141 * C3936 + C52054 * C4170) *
                C79306) *
               C79308 * C79027 * C79303 -
           ((C52141 * C1689 + C52054 * C1913 + C52140 * C103 + C52053 * C253) *
                C79306 +
            (C52141 * C1681 + C52054 * C1905 + C52140 * C97 + C52053 * C247) *
                C26498) *
               C79308 * C79027 * C79310 -
           ((C52141 * C6049 + C52054 * C6233 + C52140 * C759 + C52053 * C983) *
                C79306 +
            (C52141 * C6043 + C52054 * C6227 + C52140 * C751 + C52053 * C975) *
                C26498) *
               C79308 * C79027 * C79290 +
           ((C52140 * C5567 + C52053 * C5675 + C52141 * C8378 +
             C52054 * C8522) *
                C26498 +
            (C52140 * C5571 + C52053 * C5679 + C52141 * C8380 +
             C52054 * C8524) *
                C79306) *
               C79308 * C79027 * C79269) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eeyx[54] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((((C26498 * C96 + C79306 * C102) * C166 +
                       (C26498 * C167 + C79306 * C324) * C79308) *
                          C52053 +
                      (C53472 + C53473) * C52054) *
                         C79027 * C12991 -
                     ((C55523 + C55522) * C52054 +
                      (C27247 * C79308 + C27246 * C166) * C52053) *
                         C79027 * C79072) *
                        C79309 +
                    (((C27250 * C166 + C27251 * C79308) * C52053 +
                      (C55524 + C55525) * C52054) *
                         C79027 * C79072 -
                     ((C53477 + C53476) * C52054 +
                      ((C26498 * C168 + C79306 * C325) * C79308 +
                       (C26498 * C97 + C79306 * C103) * C166) *
                          C52053) *
                         C79027 * C12991) *
                        C79299 +
                    ((((C26498 * C98 + C79306 * C104) * C166 +
                       (C26498 * C169 + C79306 * C326) * C79308) *
                          C52053 +
                      (C53480 + C53481) * C52054) *
                         C79027 * C12991 -
                     ((C55527 + C55526) * C52054 +
                      (C27255 * C79308 + C27254 * C166) * C52053) *
                         C79027 * C79072) *
                        C79283 +
                    (((C28653 * C166 + C28654 * C79308) * C52053 +
                      ((C26498 * C3934 + C79306 * C3938) * C166 +
                       (C26498 * C4050 + C79306 * C4286) * C79308) *
                          C52054) *
                         C79027 * C79072 -
                     ((C54781 + C54780) * C52054 +
                      ((C26498 * C170 + C79306 * C327) * C79308 +
                       (C26498 * C99 + C79306 * C105) * C166) *
                          C52053) *
                         C79027 * C12991) *
                        C79263)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((((C26498 * C96 + C79306 * C102) * C166 +
                       (C26498 * C167 + C79306 * C324) * C79308) *
                          C52053 +
                      (C53472 + C53473) * C52054) *
                         C79027 * C79310 -
                     ((C55523 + C55522) * C52054 +
                      (C27247 * C79308 + C27246 * C166) * C52053) *
                         C79027 * C79303 +
                     ((C27249 * C166 + C27248 * C79308) * C52053 +
                      (C57406 + C57407) * C52054) *
                         C79027 * C79290 -
                     ((C59572 + C59571) * C52054 +
                      (C31433 * C79308 + C31432 * C166) * C52053) *
                         C79027 * C79269) *
                        C13595 +
                    (((C27250 * C166 + C27251 * C79308) * C52053 +
                      (C55524 + C55525) * C52054) *
                         C79027 * C79303 -
                     ((C53477 + C53476) * C52054 +
                      ((C26498 * C168 + C79306 * C325) * C79308 +
                       (C26498 * C97 + C79306 * C103) * C166) *
                          C52053) *
                         C79027 * C79310 -
                     ((C58805 + C58804) * C52054 +
                      (C27253 * C79308 + C27252 * C166) * C52053) *
                         C79027 * C79290 +
                     ((C32748 * C166 + C32747 * C79308) * C52053 +
                      ((C26498 * C8378 + C79306 * C8380) * C166 +
                       (C26498 * C8452 + C79306 * C8592) * C79308) *
                          C52054) *
                         C79027 * C79269) *
                        C78992)) /
                      (p * q * std::sqrt(p + q));
    d2eeyy[54] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C372 * C96 + C380 + C380 + C79308 * C373) * C79306 * C52053 +
            C53572 * C52054) *
               C79027 * C12991 -
           (C55633 * C52054 +
            (C372 * C749 + C1180 + C1180 + C79308 * C1169) * C79306 * C52053) *
               C79027 * C79072) *
              C79309 +
          ((C1201 * C79306 * C52053 + C55628 * C52054) * C79027 * C79072 -
           (C53562 * C52054 + C402 * C79306 * C52053) * C79027 * C12991) *
              C79299 +
          ((C403 * C79306 * C52053 + C53564 * C52054) * C79027 * C12991 -
           (C55629 * C52054 + C1203 * C79306 * C52053) * C79027 * C79072) *
              C79283 +
          ((C2902 * C79306 * C52053 +
            (C372 * C3934 + C4397 + C4397 + C79308 * C4388) * C79306 * C52054) *
               C79027 * C79072 -
           (C54848 * C52054 + C404 * C79306 * C52053) * C79027 * C12991) *
              C79263)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C372 * C96 + C380 + C380 + C79308 * C373) * C79306 * C52053 +
            C53572 * C52054) *
               C79027 * C79310 -
           (C55633 * C52054 +
            (C372 * C749 + C1180 + C1180 + C79308 * C1169) * C79306 * C52053) *
               C79027 * C79303 +
           ((C372 * C750 + C1181 + C1181 + C79308 * C1170) * C79306 * C52053 +
            C57501 * C52054) *
               C79027 * C79290 -
           (C59645 * C52054 +
            (C372 * C5568 + C5777 + C5777 + C79308 * C5772) * C79306 * C52053) *
               C79027 * C79269) *
              C13595 +
          ((C1201 * C79306 * C52053 + C55628 * C52054) * C79027 * C79303 -
           (C53562 * C52054 + C402 * C79306 * C52053) * C79027 * C79310 -
           (C58904 * C52054 + C1202 * C79306 * C52053) * C79027 * C79290 +
           (C7094 * C79306 * C52053 +
            (C372 * C8378 + C8663 + C8663 + C79308 * C8660) * C79306 * C52054) *
               C79027 * C79269) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[54] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
                C166 +
            (C52140 * C167 + C52053 * C447 + C52141 * C1792 + C52054 * C2212) *
                C79308) *
               C79306 * C79027 * C12991 -
           ((C52141 * C4047 + C52054 * C4501 + C52140 * C859 + C52053 * C1279) *
                C79308 +
            (C52141 * C3931 + C52054 * C4165 + C52140 * C749 + C52053 * C973) *
                C166) *
               C79306 * C79027 * C79072) *
              C79309 +
          (((C52140 * C748 + C52053 * C972 + C52141 * C3932 + C52054 * C4166) *
                C166 +
            (C52140 * C858 + C52053 * C1278 + C52141 * C4048 + C52054 * C4502) *
                C79308) *
               C79306 * C79027 * C79072 -
           ((C52141 * C1791 + C52054 * C2211 + C52140 * C168 + C52053 * C448) *
                C79308 +
            (C52141 * C1681 + C52054 * C1905 + C52140 * C97 + C52053 * C247) *
                C166) *
               C79306 * C79027 * C12991) *
              C79299 +
          (((C52140 * C98 + C52053 * C248 + C52141 * C1685 + C52054 * C1909) *
                C166 +
            (C52140 * C169 + C52053 * C449 + C52141 * C1795 + C52054 * C2215) *
                C79308) *
               C79306 * C79027 * C12991 -
           ((C52141 * C4049 + C52054 * C4503 + C52140 * C862 + C52053 * C1282) *
                C79308 +
            (C52141 * C3933 + C52054 * C4167 + C52140 * C752 + C52053 * C976) *
                C166) *
               C79306 * C79027 * C79072) *
              C79283 +
          (((C52140 * C754 + C52053 * C978 + C52141 * C3934 + C52054 * C4168) *
                C166 +
            (C52140 * C864 + C52053 * C1284 + C52141 * C4050 + C52054 * C4504) *
                C79308) *
               C79306 * C79027 * C79072 -
           ((C52141 * C1797 + C52054 * C2217 + C52140 * C170 + C52053 * C450) *
                C79308 +
            (C52141 * C1687 + C52054 * C1911 + C52140 * C99 + C52053 * C249) *
                C166) *
               C79306 * C79027 * C12991) *
              C79263)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
                C166 +
            (C52140 * C167 + C52053 * C447 + C52141 * C1792 + C52054 * C2212) *
                C79308) *
               C79306 * C79027 * C79310 -
           ((C52141 * C4047 + C52054 * C4501 + C52140 * C859 + C52053 * C1279) *
                C79308 +
            (C52141 * C3931 + C52054 * C4165 + C52140 * C749 + C52053 * C973) *
                C166) *
               C79306 * C79027 * C79303 +
           ((C52140 * C750 + C52053 * C974 + C52141 * C6044 + C52054 * C6228) *
                C166 +
            (C52140 * C860 + C52053 * C1280 + C52141 * C6142 + C52054 * C6480) *
                C79308) *
               C79306 * C79027 * C79290 -
           ((C52141 * C8451 + C52054 * C8729 + C52140 * C5626 +
             C52053 * C5822) *
                C79308 +
            (C52141 * C8377 + C52054 * C8521 + C52140 * C5568 +
             C52053 * C5676) *
                C166) *
               C79306 * C79027 * C79269) *
              C13595 +
          (((C52140 * C748 + C52053 * C972 + C52141 * C3932 + C52054 * C4166) *
                C166 +
            (C52140 * C858 + C52053 * C1278 + C52141 * C4048 + C52054 * C4502) *
                C79308) *
               C79306 * C79027 * C79303 -
           ((C52141 * C1791 + C52054 * C2211 + C52140 * C168 + C52053 * C448) *
                C79308 +
            (C52141 * C1681 + C52054 * C1905 + C52140 * C97 + C52053 * C247) *
                C166) *
               C79306 * C79027 * C79310 -
           ((C52141 * C6141 + C52054 * C6479 + C52140 * C861 + C52053 * C1281) *
                C79308 +
            (C52141 * C6043 + C52054 * C6227 + C52140 * C751 + C52053 * C975) *
                C166) *
               C79306 * C79027 * C79290 +
           ((C52140 * C5567 + C52053 * C5675 + C52141 * C8378 +
             C52054 * C8522) *
                C166 +
            (C52140 * C5625 + C52053 * C5821 + C52141 * C8452 +
             C52054 * C8730) *
                C79308) *
               C79306 * C79027 * C79269) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eezx[54] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C26498 * C96 + C79306 * C102) * C52140 +
                      (C26498 * C246 + C79306 * C515) * C52053 +
                      C53460 * C52141 + C53734 * C52054) *
                         C79308 * C79027 * C12991 -
                     (C30345 * C52054 + C30028 * C52141 + C27516 * C52053 +
                      C27246 * C52140) *
                         C79308 * C79027 * C79072) *
                        C79309 +
                    ((C27250 * C52140 + C27518 * C52053 + C30029 * C52141 +
                      C30346 * C52054) *
                         C79308 * C79027 * C79072 -
                     (C53736 * C52054 + C53464 * C52141 +
                      (C26498 * C247 + C79306 * C516) * C52053 +
                      (C26498 * C97 + C79306 * C103) * C52140) *
                         C79308 * C79027 * C12991) *
                        C79299 +
                    (((C26498 * C98 + C79306 * C104) * C52140 +
                      (C26498 * C248 + C79306 * C517) * C52053 +
                      C53468 * C52141 + C53738 * C52054) *
                         C79308 * C79027 * C12991 -
                     (C30347 * C52054 + C30032 * C52141 + C27520 * C52053 +
                      C27254 * C52140) *
                         C79308 * C79027 * C79072) *
                        C79283 +
                    ((C28653 * C52140 + C28858 * C52053 +
                      (C26498 * C3934 + C79306 * C3938) * C52141 +
                      (C26498 * C4168 + C79306 * C4616) * C52054) *
                         C79308 * C79027 * C79072 -
                     (C54983 * C52054 + C54778 * C52141 +
                      (C26498 * C249 + C79306 * C518) * C52053 +
                      (C26498 * C99 + C79306 * C105) * C52140) *
                         C79308 * C79027 * C12991) *
                        C79263)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C26498 * C96 + C79306 * C102) * C52140 +
                      (C26498 * C246 + C79306 * C515) * C52053 +
                      C53460 * C52141 + C53734 * C52054) *
                         C79308 * C79027 * C79310 -
                     (C30345 * C52054 + C30028 * C52141 + C27516 * C52053 +
                      C27246 * C52140) *
                         C79308 * C79027 * C79303 +
                     (C27249 * C52140 + C27517 * C52053 + C32045 * C52141 +
                      C32299 * C52054) *
                         C79308 * C79027 * C79290 -
                     (C34492 * C52054 + C34282 * C52141 + C31581 * C52053 +
                      C31432 * C52140) *
                         C79308 * C79027 * C79269) *
                        C13595 +
                    ((C27250 * C52140 + C27518 * C52053 + C30029 * C52141 +
                      C30346 * C52054) *
                         C79308 * C79027 * C79303 -
                     (C53736 * C52054 + C53464 * C52141 +
                      (C26498 * C247 + C79306 * C516) * C52053 +
                      (C26498 * C97 + C79306 * C103) * C52140) *
                         C79308 * C79027 * C79310 -
                     (C33792 * C52054 + C33492 * C52141 + C27519 * C52053 +
                      C27252 * C52140) *
                         C79308 * C79027 * C79290 +
                     (C32748 * C52140 + C32952 * C52053 +
                      (C26498 * C8378 + C79306 * C8380) * C52141 +
                      (C26498 * C8522 + C79306 * C8798) * C52054) *
                         C79308 * C79027 * C79269) *
                        C78992)) /
                      (p * q * std::sqrt(p + q));
    d2eezy[54] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C166 * C96 + C79308 * C167) * C52140 +
            (C166 * C246 + C79308 * C563) * C52053 + C53280 * C52141 +
            C53818 * C52054) *
               C79306 * C79027 * C12991 -
           (C55930 * C52054 + C55322 * C52141 +
            (C166 * C973 + C79308 * C1463) * C52053 +
            (C166 * C749 + C79308 * C859) * C52140) *
               C79306 * C79027 * C79072) *
              C79309 +
          ((C892 * C52140 + C1483 * C52053 + C4064 * C52141 + C4726 * C52054) *
               C79306 * C79027 * C79072 -
           (C2416 * C52054 + C1825 * C52141 + C582 * C52053 + C196 * C52140) *
               C79306 * C79027 * C12991) *
              C79299 +
          ((C199 * C52140 + C583 * C52053 + C1828 * C52141 + C2418 * C52054) *
               C79306 * C79027 * C12991 -
           (C4727 * C52054 + C4067 * C52141 + C1485 * C52053 + C895 * C52140) *
               C79306 * C79027 * C79072) *
              C79283 +
          ((C2688 * C52140 + C3112 * C52053 +
            (C166 * C3934 + C79308 * C4050) * C52141 +
            (C166 * C4168 + C79308 * C4718) * C52054) *
               C79306 * C79027 * C79072 -
           (C3758 * C52054 + C3334 * C52141 + C584 * C52053 + C200 * C52140) *
               C79306 * C79027 * C12991) *
              C79263)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C166 * C96 + C79308 * C167) * C52140 +
            (C166 * C246 + C79308 * C563) * C52053 + C53280 * C52141 +
            C53818 * C52054) *
               C79306 * C79027 * C79310 -
           (C55930 * C52054 + C55322 * C52141 +
            (C166 * C973 + C79308 * C1463) * C52053 +
            (C166 * C749 + C79308 * C859) * C52140) *
               C79306 * C79027 * C79303 +
           ((C166 * C750 + C79308 * C860) * C52140 +
            (C166 * C974 + C79308 * C1464) * C52053 + C57246 * C52141 +
            C57732 * C52054) *
               C79306 * C79027 * C79290 -
           (C59846 * C52054 + C59435 * C52141 +
            (C166 * C5676 + C79308 * C5914) * C52053 +
            (C166 * C5568 + C79308 * C5626) * C52140) *
               C79306 * C79027 * C79269) *
              C13595 +
          ((C892 * C52140 + C1483 * C52053 + C4064 * C52141 + C4726 * C52054) *
               C79306 * C79027 * C79303 -
           (C2416 * C52054 + C1825 * C52141 + C582 * C52053 + C196 * C52140) *
               C79306 * C79027 * C79310 -
           (C8204 * C52054 + C7588 * C52141 + C1484 * C52053 + C893 * C52140) *
               C79306 * C79027 * C79290 +
           (C6880 * C52140 + C7304 * C52053 +
            (C166 * C8378 + C79308 * C8452) * C52141 +
            (C166 * C8522 + C79308 * C8866) * C52054) *
               C79306 * C79027 * C79269) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eezz[54] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((C52394 * C96 + C52397 + C52397 + C52053 * C632 +
                      C52395 * C1682 + C52398 + C52398 + C52054 * C2498) *
                         C79308 * C79306 * C79027 * C12991 -
                     (C52395 * C3931 + C53073 + C53073 + C52054 * C4827 +
                      C52394 * C749 + C53074 + C53074 + C52053 * C1565) *
                         C79308 * C79306 * C79027 * C79072) *
                        C79309 +
                    ((C52394 * C748 + C53077 + C53077 + C52053 * C1564 +
                      C52395 * C3932 + C53078 + C53078 + C52054 * C4828) *
                         C79308 * C79306 * C79027 * C79072 -
                     (C52395 * C1681 + C52399 + C52399 + C52054 * C2497 +
                      C52394 * C97 + C52400 + C52400 + C52053 * C633) *
                         C79308 * C79306 * C79027 * C12991) *
                        C79299 +
                    ((C52394 * C98 + C52401 + C52401 + C52053 * C634 +
                      C52395 * C1685 + C52402 + C52402 + C52054 * C2501) *
                         C79308 * C79306 * C79027 * C12991 -
                     (C52395 * C3933 + C53081 + C53081 + C52054 * C4829 +
                      C52394 * C752 + C53082 + C53082 + C52053 * C1568) *
                         C79308 * C79306 * C79027 * C79072) *
                        C79283 +
                    ((C52394 * C754 + C54500 + C54500 + C52053 * C1570 +
                      C52395 * C3934 + C54501 + C54501 + C52054 * C4830) *
                         C79308 * C79306 * C79027 * C79072 -
                     (C52395 * C1687 + C52403 + C52403 + C52054 * C2503 +
                      C52394 * C99 + C52404 + C52404 + C52053 * C635) *
                         C79308 * C79306 * C79027 * C12991) *
                        C79263)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((C52394 * C96 + C52397 + C52397 + C52053 * C632 +
                      C52395 * C1682 + C52398 + C52398 + C52054 * C2498) *
                         C79308 * C79306 * C79027 * C79310 -
                     (C52395 * C3931 + C53073 + C53073 + C52054 * C4827 +
                      C52394 * C749 + C53074 + C53074 + C52053 * C1565) *
                         C79308 * C79306 * C79027 * C79303 +
                     (C52394 * C750 + C53075 + C53075 + C52053 * C1566 +
                      C52395 * C6044 + C53076 + C53076 + C52054 * C6720) *
                         C79308 * C79306 * C79027 * C79290 -
                     (C52395 * C8377 + C57080 + C57080 + C52054 * C8933 +
                      C52394 * C5568 + C57081 + C57081 + C52053 * C5960) *
                         C79308 * C79306 * C79027 * C79269) *
                        C13595 +
                    ((C52394 * C748 + C53077 + C53077 + C52053 * C1564 +
                      C52395 * C3932 + C53078 + C53078 + C52054 * C4828) *
                         C79308 * C79306 * C79027 * C79303 -
                     (C52395 * C1681 + C52399 + C52399 + C52054 * C2497 +
                      C52394 * C97 + C52400 + C52400 + C52053 * C633) *
                         C79308 * C79306 * C79027 * C79310 -
                     (C52395 * C6043 + C53079 + C53079 + C52054 * C6719 +
                      C52394 * C751 + C53080 + C53080 + C52053 * C1567) *
                         C79308 * C79306 * C79027 * C79290 +
                     (C52394 * C5567 + C58408 + C58408 + C52053 * C5959 +
                      C52395 * C8378 + C58409 + C58409 + C52054 * C8934) *
                         C79308 * C79306 * C79027 * C79269) *
                        C78992)) /
                      (p * q * std::sqrt(p + q));
    d2eexx[55] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C52053 +
             C53184 * C52054) *
                C79308 * C17509 -
            (C53185 * C52054 + C53184 * C52053) * C79308 * C79114) *
               C79068 +
           ((C29703 * C52053 + C31774 * C52054) * C79308 * C79114 -
            (C29703 * C52054 + C26964 * C52053) * C79308 * C17509) *
               C79075 +
           ((C26965 * C52053 + C31775 * C52054) * C79308 * C17509 -
            (C31776 * C52054 + C31775 * C52053) * C79308 * C79114) *
               C15083) *
              C79215 +
          (((C53186 * C52053 + C53187 * C52054) * C79308 * C79114 -
            (C53186 * C52054 +
             (C26497 * C97 + C26503 + C26503 + C79306 * C109) * C52053) *
                C79308 * C17509) *
               C79068 +
           ((C26966 * C52053 + C29704 * C52054) * C79308 * C17509 -
            (C36469 * C52054 + C29704 * C52053) * C79308 * C79114) *
               C79075 +
           ((C33189 * C52053 +
             (C26497 * C6046 + C36466 + C36466 + C79306 * C6058) * C52054) *
                C79308 * C79114 -
            (C33189 * C52054 + C26967 * C52053) * C79308 * C17509) *
               C15083) *
              C78992)) /
        (p * q * std::sqrt(p + q));
    d2eexy[55] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C166 * C96 + C79308 * C167) * C26498 +
              (C166 * C102 + C79308 * C173) * C79306) *
                 C52053 +
             (C53284 + C53285) * C52054) *
                C17509 -
            ((C53286 + C53287) * C52054 + (C53285 + C53284) * C52053) *
                C79114) *
               C79068 +
           (((C55324 + C55325) * C52053 + (C57250 + C57251) * C52054) * C79114 -
            ((C55325 + C55324) * C52054 +
             ((C166 * C757 + C79308 * C867) * C79306 +
              (C166 * C749 + C79308 * C859) * C26498) *
                 C52053) *
                C17509) *
               C79075 +
           ((((C166 * C750 + C79308 * C860) * C26498 +
              (C166 * C758 + C79308 * C868) * C79306) *
                 C52053 +
             (C57252 + C57253) * C52054) *
                C17509 -
            ((C57254 + C57255) * C52054 + (C57253 + C57252) * C52053) *
                C79114) *
               C15083) *
              C79215 +
          ((((C53272 + C53273) * C52053 + (C53274 + C53275) * C52054) * C79114 -
            ((C53273 + C53272) * C52054 +
             (C197 * C79306 + C196 * C26498) * C52053) *
                C17509) *
               C79068 +
           (((C892 * C26498 + C891 * C79306) * C52053 +
             (C55318 + C55319) * C52054) *
                C17509 -
            ((C61906 + C61907) * C52054 + (C55319 + C55318) * C52053) *
                C79114) *
               C79075 +
           (((C58606 + C58607) * C52053 +
             ((C166 * C6046 + C79308 * C6144) * C26498 +
              (C166 * C6052 + C79308 * C6150) * C79306) *
                 C52054) *
                C79114 -
            ((C58607 + C58606) * C52054 +
             (C894 * C79306 + C893 * C26498) * C52053) *
                C17509) *
               C15083) *
              C78992)) /
        (p * q * std::sqrt(p + q));
    d2eexz[55] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
                 C26498 +
             (C52140 * C102 + C52053 * C252 + C52141 * C1690 + C52054 * C1914) *
                 C79306) *
                C79308 * C17509 -
            ((C52141 * C1691 + C52054 * C1915 + C52140 * C1690 +
              C52053 * C1914) *
                 C79306 +
             (C52141 * C1683 + C52054 * C1907 + C52140 * C1682 +
              C52053 * C1906) *
                 C26498) *
                C79308 * C79114) *
               C79068 +
           (((C52140 * C3931 + C52053 * C4165 + C52141 * C6042 +
              C52054 * C6226) *
                 C26498 +
             (C52140 * C3935 + C52053 * C4169 + C52141 * C6048 +
              C52054 * C6232) *
                 C79306) *
                C79308 * C79114 -
            ((C52141 * C3935 + C52054 * C4169 + C52140 * C757 + C52053 * C981) *
                 C79306 +
             (C52141 * C3931 + C52054 * C4165 + C52140 * C749 + C52053 * C973) *
                 C26498) *
                C79308 * C17509) *
               C79075 +
           (((C52140 * C750 + C52053 * C974 + C52141 * C6044 + C52054 * C6228) *
                 C26498 +
             (C52140 * C758 + C52053 * C982 + C52141 * C6050 + C52054 * C6234) *
                 C79306) *
                C79308 * C17509 -
            ((C52141 * C6051 + C52054 * C6235 + C52140 * C6050 +
              C52053 * C6234) *
                 C79306 +
             (C52141 * C6045 + C52054 * C6229 + C52140 * C6044 +
              C52053 * C6228) *
                 C26498) *
                C79308 * C79114) *
               C15083) *
              C79215 +
          ((((C52140 * C1681 + C52053 * C1905 + C52141 * C1684 +
              C52054 * C1908) *
                 C26498 +
             (C52140 * C1689 + C52053 * C1913 + C52141 * C1692 +
              C52054 * C1916) *
                 C79306) *
                C79308 * C79114 -
            ((C52141 * C1689 + C52054 * C1913 + C52140 * C103 + C52053 * C253) *
                 C79306 +
             (C52141 * C1681 + C52054 * C1905 + C52140 * C97 + C52053 * C247) *
                 C26498) *
                C79308 * C17509) *
               C79068 +
           (((C52140 * C748 + C52053 * C972 + C52141 * C3932 + C52054 * C4166) *
                 C26498 +
             (C52140 * C756 + C52053 * C980 + C52141 * C3936 + C52054 * C4170) *
                 C79306) *
                C79308 * C17509 -
            ((C52141 * C6047 + C52054 * C6231 + C52140 * C3936 +
              C52053 * C4170) *
                 C79306 +
             (C52141 * C6041 + C52054 * C6225 + C52140 * C3932 +
              C52053 * C4166) *
                 C26498) *
                C79308 * C79114) *
               C79075 +
           (((C52140 * C6043 + C52053 * C6227 + C52141 * C6046 +
              C52054 * C6230) *
                 C26498 +
             (C52140 * C6049 + C52053 * C6233 + C52141 * C6052 +
              C52054 * C6236) *
                 C79306) *
                C79308 * C79114 -
            ((C52141 * C6049 + C52054 * C6233 + C52140 * C759 + C52053 * C983) *
                 C79306 +
             (C52141 * C6043 + C52054 * C6227 + C52140 * C751 + C52053 * C975) *
                 C26498) *
                C79308 * C17509) *
               C15083) *
              C78992)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[55] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C26498 * C96 + C79306 * C102) * C166 +
              (C26498 * C167 + C79306 * C324) * C79308) *
                 C52053 +
             (C53472 + C53473) * C52054) *
                C17509 -
            ((C53474 + C53475) * C52054 + (C53473 + C53472) * C52053) *
                C79114) *
               C79068 +
           (((C55522 + C55523) * C52053 + (C57404 + C57405) * C52054) * C79114 -
            ((C55523 + C55522) * C52054 +
             (C27247 * C79308 + C27246 * C166) * C52053) *
                C17509) *
               C79075 +
           (((C27249 * C166 + C27248 * C79308) * C52053 +
             (C57406 + C57407) * C52054) *
                C17509 -
            ((C57408 + C57409) * C52054 + (C57407 + C57406) * C52053) *
                C79114) *
               C15083) *
              C79215 +
          ((((C53476 + C53477) * C52053 + (C53478 + C53479) * C52054) * C79114 -
            ((C53477 + C53476) * C52054 +
             ((C26498 * C168 + C79306 * C325) * C79308 +
              (C26498 * C97 + C79306 * C103) * C166) *
                 C52053) *
                C17509) *
               C79068 +
           (((C27250 * C166 + C27251 * C79308) * C52053 +
             (C55524 + C55525) * C52054) *
                C17509 -
            ((C62104 + C62105) * C52054 + (C55525 + C55524) * C52053) *
                C79114) *
               C79075 +
           (((C58804 + C58805) * C52053 +
             ((C26498 * C6046 + C79306 * C6052) * C166 +
              (C26498 * C6144 + C79306 * C6316) * C79308) *
                 C52054) *
                C79114 -
            ((C58805 + C58804) * C52054 +
             (C27253 * C79308 + C27252 * C166) * C52053) *
                C17509) *
               C15083) *
              C78992)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[55] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C372 * C96 + C380 + C380 + C79308 * C373) * C79306 * C52053 +
             C53572 * C52054) *
                C17509 -
            (C53573 * C52054 + C53572 * C52053) * C79114) *
               C79068 +
           ((C55633 * C52053 + C57500 * C52054) * C79114 -
            (C55633 * C52054 +
             (C372 * C749 + C1180 + C1180 + C79308 * C1169) * C79306 * C52053) *
                C17509) *
               C79075 +
           (((C372 * C750 + C1181 + C1181 + C79308 * C1170) * C79306 * C52053 +
             C57501 * C52054) *
                C17509 -
            (C57502 * C52054 + C57501 * C52053) * C79114) *
               C15083) *
              C79215 +
          (((C53562 * C52053 + C53563 * C52054) * C79114 -
            (C53562 * C52054 + C402 * C79306 * C52053) * C17509) *
               C79068 +
           ((C1201 * C79306 * C52053 + C55628 * C52054) * C17509 -
            (C62204 * C52054 + C55628 * C52053) * C79114) *
               C79075 +
           ((C58904 * C52053 + (C372 * C6046 + C6403 + C6403 + C79308 * C6396) *
                                   C79306 * C52054) *
                C79114 -
            (C58904 * C52054 + C1202 * C79306 * C52053) * C17509) *
               C15083) *
              C78992)) /
        (p * q * std::sqrt(p + q));
    d2eeyz[55] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
                 C166 +
             (C52140 * C167 + C52053 * C447 + C52141 * C1792 + C52054 * C2212) *
                 C79308) *
                C79306 * C17509 -
            ((C52141 * C1793 + C52054 * C2213 + C52140 * C1792 +
              C52053 * C2212) *
                 C79308 +
             (C52141 * C1683 + C52054 * C1907 + C52140 * C1682 +
              C52053 * C1906) *
                 C166) *
                C79306 * C79114) *
               C79068 +
           (((C52140 * C3931 + C52053 * C4165 + C52141 * C6042 +
              C52054 * C6226) *
                 C166 +
             (C52140 * C4047 + C52053 * C4501 + C52141 * C6140 +
              C52054 * C6478) *
                 C79308) *
                C79306 * C79114 -
            ((C52141 * C4047 + C52054 * C4501 + C52140 * C859 +
              C52053 * C1279) *
                 C79308 +
             (C52141 * C3931 + C52054 * C4165 + C52140 * C749 + C52053 * C973) *
                 C166) *
                C79306 * C17509) *
               C79075 +
           (((C52140 * C750 + C52053 * C974 + C52141 * C6044 + C52054 * C6228) *
                 C166 +
             (C52140 * C860 + C52053 * C1280 + C52141 * C6142 +
              C52054 * C6480) *
                 C79308) *
                C79306 * C17509 -
            ((C52141 * C6143 + C52054 * C6481 + C52140 * C6142 +
              C52053 * C6480) *
                 C79308 +
             (C52141 * C6045 + C52054 * C6229 + C52140 * C6044 +
              C52053 * C6228) *
                 C166) *
                C79306 * C79114) *
               C15083) *
              C79215 +
          ((((C52140 * C1681 + C52053 * C1905 + C52141 * C1684 +
              C52054 * C1908) *
                 C166 +
             (C52140 * C1791 + C52053 * C2211 + C52141 * C1794 +
              C52054 * C2214) *
                 C79308) *
                C79306 * C79114 -
            ((C52141 * C1791 + C52054 * C2211 + C52140 * C168 + C52053 * C448) *
                 C79308 +
             (C52141 * C1681 + C52054 * C1905 + C52140 * C97 + C52053 * C247) *
                 C166) *
                C79306 * C17509) *
               C79068 +
           (((C52140 * C748 + C52053 * C972 + C52141 * C3932 + C52054 * C4166) *
                 C166 +
             (C52140 * C858 + C52053 * C1278 + C52141 * C4048 +
              C52054 * C4502) *
                 C79308) *
                C79306 * C17509 -
            ((C52141 * C6139 + C52054 * C6477 + C52140 * C4048 +
              C52053 * C4502) *
                 C79308 +
             (C52141 * C6041 + C52054 * C6225 + C52140 * C3932 +
              C52053 * C4166) *
                 C166) *
                C79306 * C79114) *
               C79075 +
           (((C52140 * C6043 + C52053 * C6227 + C52141 * C6046 +
              C52054 * C6230) *
                 C166 +
             (C52140 * C6141 + C52053 * C6479 + C52141 * C6144 +
              C52054 * C6482) *
                 C79308) *
                C79306 * C79114 -
            ((C52141 * C6141 + C52054 * C6479 + C52140 * C861 +
              C52053 * C1281) *
                 C79308 +
             (C52141 * C6043 + C52054 * C6227 + C52140 * C751 + C52053 * C975) *
                 C166) *
                C79306 * C17509) *
               C15083) *
              C78992)) /
        (p * q * std::sqrt(p + q));
    d2eezx[55] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C26498 * C96 + C79306 * C102) * C52140 +
                       (C26498 * C246 + C79306 * C515) * C52053 +
                       C53460 * C52141 + C53734 * C52054) *
                          C79308 * C17509 -
                      (C53735 * C52054 + C53463 * C52141 + C53734 * C52053 +
                       C53460 * C52140) *
                          C79308 * C79114) *
                         C79068 +
                     ((C30028 * C52140 + C30345 * C52053 + C32043 * C52141 +
                       C32298 * C52054) *
                          C79308 * C79114 -
                      (C30345 * C52054 + C30028 * C52141 + C27516 * C52053 +
                       C27246 * C52140) *
                          C79308 * C17509) *
                         C79075 +
                     ((C27249 * C52140 + C27517 * C52053 + C32045 * C52141 +
                       C32299 * C52054) *
                          C79308 * C17509 -
                      (C32300 * C52054 + C32048 * C52141 + C32299 * C52053 +
                       C32045 * C52140) *
                          C79308 * C79114) *
                         C15083) *
                        C79215 +
                    (((C53464 * C52140 + C53736 * C52053 + C53466 * C52141 +
                       C53737 * C52054) *
                          C79308 * C79114 -
                      (C53736 * C52054 + C53464 * C52141 +
                       (C26498 * C247 + C79306 * C516) * C52053 +
                       (C26498 * C97 + C79306 * C103) * C52140) *
                          C79308 * C17509) *
                         C79068 +
                     ((C27250 * C52140 + C27518 * C52053 + C30029 * C52141 +
                       C30346 * C52054) *
                          C79308 * C17509 -
                      (C37072 * C52054 + C36772 * C52141 + C30346 * C52053 +
                       C30029 * C52140) *
                          C79308 * C79114) *
                         C79075 +
                     ((C33492 * C52140 + C33792 * C52053 +
                       (C26498 * C6046 + C79306 * C6052) * C52141 +
                       (C26498 * C6230 + C79306 * C6562) * C52054) *
                          C79308 * C79114 -
                      (C33792 * C52054 + C33492 * C52141 + C27519 * C52053 +
                       C27252 * C52140) *
                          C79308 * C17509) *
                         C15083) *
                        C78992)) /
                  (p * q * std::sqrt(p + q));
    d2eezy[55] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C166 * C96 + C79308 * C167) * C52140 +
             (C166 * C246 + C79308 * C563) * C52053 + C53280 * C52141 +
             C53818 * C52054) *
                C79306 * C17509 -
            (C53819 * C52054 + C53283 * C52141 + C53818 * C52053 +
             C53280 * C52140) *
                C79306 * C79114) *
               C79068 +
           ((C55322 * C52140 + C55930 * C52053 + C57244 * C52141 +
             C57731 * C52054) *
                C79306 * C79114 -
            (C55930 * C52054 + C55322 * C52141 +
             (C166 * C973 + C79308 * C1463) * C52053 +
             (C166 * C749 + C79308 * C859) * C52140) *
                C79306 * C17509) *
               C79075 +
           (((C166 * C750 + C79308 * C860) * C52140 +
             (C166 * C974 + C79308 * C1464) * C52053 + C57246 * C52141 +
             C57732 * C52054) *
                C79306 * C17509 -
            (C57733 * C52054 + C57249 * C52141 + C57732 * C52053 +
             C57246 * C52140) *
                C79306 * C79114) *
               C15083) *
              C79215 +
          (((C1825 * C52140 + C2416 * C52053 + C1826 * C52141 +
             C2417 * C52054) *
                C79306 * C79114 -
            (C2416 * C52054 + C1825 * C52141 + C582 * C52053 + C196 * C52140) *
                C79306 * C17509) *
               C79068 +
           ((C892 * C52140 + C1483 * C52053 + C4064 * C52141 + C4726 * C52054) *
                C79306 * C17509 -
            (C11544 * C52054 + C10928 * C52141 + C4726 * C52053 +
             C4064 * C52140) *
                C79306 * C79114) *
               C79075 +
           ((C7588 * C52140 + C8204 * C52053 +
             (C166 * C6046 + C79308 * C6144) * C52141 +
             (C166 * C6230 + C79308 * C6642) * C52054) *
                C79306 * C79114 -
            (C8204 * C52054 + C7588 * C52141 + C1484 * C52053 + C893 * C52140) *
                C79306 * C17509) *
               C15083) *
              C78992)) /
        (p * q * std::sqrt(p + q));
    d2eezz[55] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C52394 * C96 + C52397 + C52397 + C52053 * C632 +
                       C52395 * C1682 + C52398 + C52398 + C52054 * C2498) *
                          C79308 * C79306 * C17509 -
                      (C52395 * C1683 + C53894 + C53894 + C52054 * C2499 +
                       C52394 * C1682 + C53895 + C53895 + C52053 * C2498) *
                          C79308 * C79306 * C79114) *
                         C79068 +
                     ((C52394 * C3931 + C56029 + C56029 + C52053 * C4827 +
                       C52395 * C6042 + C56030 + C56030 + C52054 * C6718) *
                          C79308 * C79306 * C79114 -
                      (C52395 * C3931 + C53073 + C53073 + C52054 * C4827 +
                       C52394 * C749 + C53074 + C53074 + C52053 * C1565) *
                          C79308 * C79306 * C17509) *
                         C79075 +
                     ((C52394 * C750 + C53075 + C53075 + C52053 * C1566 +
                       C52395 * C6044 + C53076 + C53076 + C52054 * C6720) *
                          C79308 * C79306 * C17509 -
                      (C52395 * C6045 + C57810 + C57810 + C52054 * C6721 +
                       C52394 * C6044 + C57811 + C57811 + C52053 * C6720) *
                          C79308 * C79306 * C79114) *
                         C15083) *
                        C79215 +
                    (((C52394 * C1681 + C53898 + C53898 + C52053 * C2497 +
                       C52395 * C1684 + C53899 + C53899 + C52054 * C2500) *
                          C79308 * C79306 * C79114 -
                      (C52395 * C1681 + C52399 + C52399 + C52054 * C2497 +
                       C52394 * C97 + C52400 + C52400 + C52053 * C633) *
                          C79308 * C79306 * C17509) *
                         C79068 +
                     ((C52394 * C748 + C53077 + C53077 + C52053 * C1564 +
                       C52395 * C3932 + C53078 + C53078 + C52054 * C4828) *
                          C79308 * C79306 * C17509 -
                      (C52395 * C6041 + C56031 + C56031 + C52054 * C6717 +
                       C52394 * C3932 + C56032 + C56032 + C52053 * C4828) *
                          C79308 * C79306 * C79114) *
                         C79075 +
                     ((C52394 * C6043 + C59297 + C59297 + C52053 * C6719 +
                       C52395 * C6046 + C59298 + C59298 + C52054 * C6722) *
                          C79308 * C79306 * C79114 -
                      (C52395 * C6043 + C53079 + C53079 + C52054 * C6719 +
                       C52394 * C751 + C53080 + C53080 + C52053 * C1567) *
                          C79308 * C79306 * C17509) *
                         C15083) *
                        C78992)) /
                  (p * q * std::sqrt(p + q));
    d2eexx[56] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C52053 +
            C53184 * C52054) *
               C79308 * C79110 -
           (C53185 * C52054 + C53184 * C52053) * C79308 * C79117 +
           (C53185 * C52053 + C61301 * C52054) * C79308 * C20477) *
              C79068 +
          ((C29703 * C52053 + C31774 * C52054) * C79308 * C79117 -
           (C29703 * C52054 + C26964 * C52053) * C79308 * C79110 -
           (C37942 * C52054 + C31774 * C52053) * C79308 * C20477) *
              C79075 +
          ((C26965 * C52053 + C31775 * C52054) * C79308 * C79110 -
           (C31776 * C52054 + C31775 * C52053) * C79308 * C79117 +
           (C31776 * C52053 +
            (C26497 * C37933 + C37939 + C37939 + C79306 * C37935) * C52054) *
               C79308 * C20477) *
              C15083) *
         C78981) /
        (p * q * std::sqrt(p + q));
    d2eexy[56] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C166 * C96 + C79308 * C167) * C26498 +
             (C166 * C102 + C79308 * C173) * C79306) *
                C52053 +
            (C53284 + C53285) * C52054) *
               C79110 -
           ((C53286 + C53287) * C52054 + (C53285 + C53284) * C52053) * C79117 +
           ((C53287 + C53286) * C52053 + (C61359 + C61360) * C52054) * C20477) *
              C79068 +
          (((C55324 + C55325) * C52053 + (C57250 + C57251) * C52054) * C79117 -
           ((C55325 + C55324) * C52054 +
            ((C166 * C757 + C79308 * C867) * C79306 +
             (C166 * C749 + C79308 * C859) * C26498) *
                C52053) *
               C79110 -
           ((C63353 + C63354) * C52054 + (C57251 + C57250) * C52053) * C20477) *
              C79075 +
          ((((C166 * C750 + C79308 * C860) * C26498 +
             (C166 * C758 + C79308 * C868) * C79306) *
                C52053 +
            (C57252 + C57253) * C52054) *
               C79110 -
           ((C57254 + C57255) * C52054 + (C57253 + C57252) * C52053) * C79117 +
           ((C57255 + C57254) * C52053 +
            ((C166 * C37933 + C79308 * C38009) * C26498 +
             (C166 * C37934 + C79308 * C38010) * C79306) *
                C52054) *
               C20477) *
              C15083) *
         C78981) /
        (p * q * std::sqrt(p + q));
    d2eexz[56] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
                C26498 +
            (C52140 * C102 + C52053 * C252 + C52141 * C1690 + C52054 * C1914) *
                C79306) *
               C79308 * C79110 -
           ((C52141 * C1691 + C52054 * C1915 + C52140 * C1690 +
             C52053 * C1914) *
                C79306 +
            (C52141 * C1683 + C52054 * C1907 + C52140 * C1682 +
             C52053 * C1906) *
                C26498) *
               C79308 * C79117 +
           ((C52140 * C1683 + C52053 * C1907 + C52141 * C10320 +
             C52054 * C10428) *
                C26498 +
            (C52140 * C1691 + C52053 * C1915 + C52141 * C10324 +
             C52054 * C10432) *
                C79306) *
               C79308 * C20477) *
              C79068 +
          (((C52140 * C3931 + C52053 * C4165 + C52141 * C6042 +
             C52054 * C6226) *
                C26498 +
            (C52140 * C3935 + C52053 * C4169 + C52141 * C6048 +
             C52054 * C6232) *
                C79306) *
               C79308 * C79117 -
           ((C52141 * C3935 + C52054 * C4169 + C52140 * C757 + C52053 * C981) *
                C79306 +
            (C52141 * C3931 + C52054 * C4165 + C52140 * C749 + C52053 * C973) *
                C26498) *
               C79308 * C79110 -
           ((C52141 * C12367 + C52054 * C12511 + C52140 * C6048 +
             C52053 * C6232) *
                C79306 +
            (C52141 * C12365 + C52054 * C12509 + C52140 * C6042 +
             C52053 * C6226) *
                C26498) *
               C79308 * C20477) *
              C79075 +
          (((C52140 * C750 + C52053 * C974 + C52141 * C6044 + C52054 * C6228) *
                C26498 +
            (C52140 * C758 + C52053 * C982 + C52141 * C6050 + C52054 * C6234) *
                C79306) *
               C79308 * C79110 -
           ((C52141 * C6051 + C52054 * C6235 + C52140 * C6050 +
             C52053 * C6234) *
                C79306 +
            (C52141 * C6045 + C52054 * C6229 + C52140 * C6044 +
             C52053 * C6228) *
                C26498) *
               C79308 * C79117 +
           ((C52140 * C6045 + C52053 * C6229 + C52141 * C37933 +
             C52054 * C38077) *
                C26498 +
            (C52140 * C6051 + C52053 * C6235 + C52141 * C37934 +
             C52054 * C38078) *
                C79306) *
               C79308 * C20477) *
              C15083) *
         C78981) /
        (p * q * std::sqrt(p + q));
    d2eeyx[56] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C26498 * C96 + C79306 * C102) * C166 +
             (C26498 * C167 + C79306 * C324) * C79308) *
                C52053 +
            (C53472 + C53473) * C52054) *
               C79110 -
           ((C53474 + C53475) * C52054 + (C53473 + C53472) * C52053) * C79117 +
           ((C53475 + C53474) * C52053 + (C61462 + C61463) * C52054) * C20477) *
              C79068 +
          (((C55522 + C55523) * C52053 + (C57404 + C57405) * C52054) * C79117 -
           ((C55523 + C55522) * C52054 +
            (C27247 * C79308 + C27246 * C166) * C52053) *
               C79110 -
           ((C63487 + C63488) * C52054 + (C57405 + C57404) * C52053) * C20477) *
              C79075 +
          (((C27249 * C166 + C27248 * C79308) * C52053 +
            (C57406 + C57407) * C52054) *
               C79110 -
           ((C57408 + C57409) * C52054 + (C57407 + C57406) * C52053) * C79117 +
           ((C57409 + C57408) * C52053 +
            ((C26498 * C37933 + C79306 * C37934) * C166 +
             (C26498 * C38009 + C79306 * C38153) * C79308) *
                C52054) *
               C20477) *
              C15083) *
         C78981) /
        (p * q * std::sqrt(p + q));
    d2eeyy[56] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C372 * C96 + C380 + C380 + C79308 * C373) * C79306 * C52053 +
            C53572 * C52054) *
               C79110 -
           (C53573 * C52054 + C53572 * C52053) * C79117 +
           (C53573 * C52053 + C61520 * C52054) * C20477) *
              C79068 +
          ((C55633 * C52053 + C57500 * C52054) * C79117 -
           (C55633 * C52054 +
            (C372 * C749 + C1180 + C1180 + C79308 * C1169) * C79306 * C52053) *
               C79110 -
           (C63561 * C52054 + C57500 * C52053) * C20477) *
              C79075 +
          (((C372 * C750 + C1181 + C1181 + C79308 * C1170) * C79306 * C52053 +
            C57501 * C52054) *
               C79110 -
           (C57502 * C52054 + C57501 * C52053) * C79117 +
           (C57502 * C52053 +
            (C372 * C37933 + C57490 + C57490 + C79308 * C38226) * C79306 *
                C52054) *
               C20477) *
              C15083) *
         C78981) /
        (p * q * std::sqrt(p + q));
    d2eeyz[56] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
                C166 +
            (C52140 * C167 + C52053 * C447 + C52141 * C1792 + C52054 * C2212) *
                C79308) *
               C79306 * C79110 -
           ((C52141 * C1793 + C52054 * C2213 + C52140 * C1792 +
             C52053 * C2212) *
                C79308 +
            (C52141 * C1683 + C52054 * C1907 + C52140 * C1682 +
             C52053 * C1906) *
                C166) *
               C79306 * C79117 +
           ((C52140 * C1683 + C52053 * C1907 + C52141 * C10320 +
             C52054 * C10428) *
                C166 +
            (C52140 * C1793 + C52053 * C2213 + C52141 * C10378 +
             C52054 * C10574) *
                C79308) *
               C79306 * C20477) *
              C79068 +
          (((C52140 * C3931 + C52053 * C4165 + C52141 * C6042 +
             C52054 * C6226) *
                C166 +
            (C52140 * C4047 + C52053 * C4501 + C52141 * C6140 +
             C52054 * C6478) *
                C79308) *
               C79306 * C79117 -
           ((C52141 * C4047 + C52054 * C4501 + C52140 * C859 + C52053 * C1279) *
                C79308 +
            (C52141 * C3931 + C52054 * C4165 + C52140 * C749 + C52053 * C973) *
                C166) *
               C79306 * C79110 -
           ((C52141 * C12439 + C52054 * C12717 + C52140 * C6140 +
             C52053 * C6478) *
                C79308 +
            (C52141 * C12365 + C52054 * C12509 + C52140 * C6042 +
             C52053 * C6226) *
                C166) *
               C79306 * C20477) *
              C79075 +
          (((C52140 * C750 + C52053 * C974 + C52141 * C6044 + C52054 * C6228) *
                C166 +
            (C52140 * C860 + C52053 * C1280 + C52141 * C6142 + C52054 * C6480) *
                C79308) *
               C79306 * C79110 -
           ((C52141 * C6143 + C52054 * C6481 + C52140 * C6142 +
             C52053 * C6480) *
                C79308 +
            (C52141 * C6045 + C52054 * C6229 + C52140 * C6044 +
             C52053 * C6228) *
                C166) *
               C79306 * C79117 +
           ((C52140 * C6045 + C52053 * C6229 + C52141 * C37933 +
             C52054 * C38077) *
                C166 +
            (C52140 * C6143 + C52053 * C6481 + C52141 * C38009 +
             C52054 * C38295) *
                C79308) *
               C79306 * C20477) *
              C15083) *
         C78981) /
        (p * q * std::sqrt(p + q));
    d2eezx[56] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C26498 * C96 + C79306 * C102) * C52140 +
                      (C26498 * C246 + C79306 * C515) * C52053 +
                      C53460 * C52141 + C53734 * C52054) *
                         C79308 * C79110 -
                     (C53735 * C52054 + C53463 * C52141 + C53734 * C52053 +
                      C53460 * C52140) *
                         C79308 * C79117 +
                     (C53463 * C52140 + C53735 * C52053 + C61458 * C52141 +
                      C61612 * C52054) *
                         C79308 * C20477) *
                        C79068 +
                    ((C30028 * C52140 + C30345 * C52053 + C32043 * C52141 +
                      C32298 * C52054) *
                         C79308 * C79117 -
                     (C30345 * C52054 + C30028 * C52141 + C27516 * C52053 +
                      C27246 * C52140) *
                         C79308 * C79110 -
                     (C38370 * C52054 + C38160 * C52141 + C32298 * C52053 +
                      C32043 * C52140) *
                         C79308 * C20477) *
                        C79075 +
                    ((C27249 * C52140 + C27517 * C52053 + C32045 * C52141 +
                      C32299 * C52054) *
                         C79308 * C79110 -
                     (C32300 * C52054 + C32048 * C52141 + C32299 * C52053 +
                      C32045 * C52140) *
                         C79308 * C79117 +
                     (C32048 * C52140 + C32300 * C52053 +
                      (C26498 * C37933 + C79306 * C37934) * C52141 +
                      (C26498 * C38077 + C79306 * C38365) * C52054) *
                         C79308 * C20477) *
                        C15083) *
                   C78981) /
                  (p * q * std::sqrt(p + q));
    d2eezy[56] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C166 * C96 + C79308 * C167) * C52140 +
                      (C166 * C246 + C79308 * C563) * C52053 + C53280 * C52141 +
                      C53818 * C52054) *
                         C79306 * C79110 -
                     (C53819 * C52054 + C53283 * C52141 + C53818 * C52053 +
                      C53280 * C52140) *
                         C79306 * C79117 +
                     (C53283 * C52140 + C53819 * C52053 + C61355 * C52141 +
                      C61661 * C52054) *
                         C79306 * C20477) *
                        C79068 +
                    ((C55322 * C52140 + C55930 * C52053 + C57244 * C52141 +
                      C57731 * C52054) *
                         C79306 * C79117 -
                     (C55930 * C52054 + C55322 * C52141 +
                      (C166 * C973 + C79308 * C1463) * C52053 +
                      (C166 * C749 + C79308 * C859) * C52140) *
                         C79306 * C79110 -
                     (C63762 * C52054 + C63352 * C52141 + C57731 * C52053 +
                      C57244 * C52140) *
                         C79306 * C20477) *
                        C79075 +
                    (((C166 * C750 + C79308 * C860) * C52140 +
                      (C166 * C974 + C79308 * C1464) * C52053 +
                      C57246 * C52141 + C57732 * C52054) *
                         C79306 * C79110 -
                     (C57733 * C52054 + C57249 * C52141 + C57732 * C52053 +
                      C57246 * C52140) *
                         C79306 * C79117 +
                     (C57249 * C52140 + C57733 * C52053 +
                      (C166 * C37933 + C79308 * C38009) * C52141 +
                      (C166 * C38077 + C79308 * C38437) * C52054) *
                         C79306 * C20477) *
                        C15083) *
                   C78981) /
                  (p * q * std::sqrt(p + q));
    d2eezz[56] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((C52394 * C96 + C52397 + C52397 + C52053 * C632 +
                      C52395 * C1682 + C52398 + C52398 + C52054 * C2498) *
                         C79308 * C79306 * C79110 -
                     (C52395 * C1683 + C53894 + C53894 + C52054 * C2499 +
                      C52394 * C1682 + C53895 + C53895 + C52053 * C2498) *
                         C79308 * C79306 * C79117 +
                     (C52394 * C1683 + C53896 + C53896 + C52053 * C2499 +
                      C52395 * C10320 + C53897 + C53897 + C52054 * C10712) *
                         C79308 * C79306 * C20477) *
                        C79068 +
                    ((C52394 * C3931 + C56029 + C56029 + C52053 * C4827 +
                      C52395 * C6042 + C56030 + C56030 + C52054 * C6718) *
                         C79308 * C79306 * C79117 -
                     (C52395 * C3931 + C53073 + C53073 + C52054 * C4827 +
                      C52394 * C749 + C53074 + C53074 + C52053 * C1565) *
                         C79308 * C79306 * C79110 -
                     (C52395 * C12365 + C57808 + C57808 + C52054 * C12921 +
                      C52394 * C6042 + C57809 + C57809 + C52053 * C6718) *
                         C79308 * C79306 * C20477) *
                        C79075 +
                    ((C52394 * C750 + C53075 + C53075 + C52053 * C1566 +
                      C52395 * C6044 + C53076 + C53076 + C52054 * C6720) *
                         C79308 * C79306 * C79110 -
                     (C52395 * C6045 + C57810 + C57810 + C52054 * C6721 +
                      C52394 * C6044 + C57811 + C57811 + C52053 * C6720) *
                         C79308 * C79306 * C79117 +
                     (C52394 * C6045 + C57812 + C57812 + C52053 * C6721 +
                      C52395 * C37933 + C57813 + C57813 + C52054 * C38504) *
                         C79308 * C79306 * C20477) *
                        C15083) *
                   C78981) /
                  (p * q * std::sqrt(p + q));
    d2eexx[57] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C52053 +
            C53184 * C52054) *
               C79308 * C17509 -
           (C53185 * C52054 + C53184 * C52053) * C79308 * C79114) *
              C79310 +
          ((C29703 * C52053 + C31774 * C52054) * C79308 * C79114 -
           (C29703 * C52054 + C26964 * C52053) * C79308 * C17509) *
              C79303 +
          ((C26965 * C52053 + C31775 * C52054) * C79308 * C17509 -
           (C31776 * C52054 + C31775 * C52053) * C79308 * C79114) *
              C79290 +
          ((C34064 * C52053 +
            (C26497 * C31755 + C31767 + C31767 + C79306 * C31757) * C52054) *
               C79308 * C79114 -
           (C34064 * C52054 + C31273 * C52053) * C79308 * C17509) *
              C79269) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C52053 +
             C53184 * C52054) *
                C79308 * C17509 -
            (C53185 * C52054 + C53184 * C52053) * C79308 * C79114) *
               C12991 +
           ((C29703 * C52053 + C31774 * C52054) * C79308 * C79114 -
            (C29703 * C52054 + C26964 * C52053) * C79308 * C17509) *
               C79072) *
              C79297 +
          (((C53186 * C52053 + C53187 * C52054) * C79308 * C79114 -
            (C53186 * C52054 +
             (C26497 * C97 + C26503 + C26503 + C79306 * C109) * C52053) *
                C79308 * C17509) *
               C12991 +
           ((C26966 * C52053 + C29704 * C52054) * C79308 * C17509 -
            (C36469 * C52054 + C29704 * C52053) * C79308 * C79114) *
               C79072) *
              C79281 +
          ((((C26497 * C98 + C26504 + C26504 + C79306 * C110) * C52053 +
             C53188 * C52054) *
                C79308 * C17509 -
            (C53189 * C52054 + C53188 * C52053) * C79308 * C79114) *
               C12991 +
           ((C29705 * C52053 +
             (C26497 * C10817 + C27771 + C27771 + C79306 * C10819) * C52054) *
                C79308 * C79114 -
            (C29705 * C52054 + C26968 * C52053) * C79308 * C17509) *
               C79072) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C52053 +
            C53184 * C52054) *
               C79308 * C79311 -
           (C53185 * C52054 + C53184 * C52053) * C79308 * C79305 +
           (C53185 * C52053 + C61301 * C52054) * C79308 * C79293 -
           (C61302 * C52054 + C61301 * C52053) * C79308 * C79275) *
              C12991 +
          ((C29703 * C52053 + C31774 * C52054) * C79308 * C79305 -
           (C29703 * C52054 + C26964 * C52053) * C79308 * C79311 -
           (C37942 * C52054 + C31774 * C52053) * C79308 * C79293 +
           (C37942 * C52053 +
            (C26497 * C36007 + C36014 + C36014 + C79306 * C36009) * C52054) *
               C79308 * C79275) *
              C79072) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eexy[57] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C166 * C96 + C79308 * C167) * C26498 +
             (C166 * C102 + C79308 * C173) * C79306) *
                C52053 +
            (C53284 + C53285) * C52054) *
               C17509 -
           ((C53286 + C53287) * C52054 + (C53285 + C53284) * C52053) * C79114) *
              C79310 +
          (((C55324 + C55325) * C52053 + (C57250 + C57251) * C52054) * C79114 -
           ((C55325 + C55324) * C52054 +
            ((C166 * C757 + C79308 * C867) * C79306 +
             (C166 * C749 + C79308 * C859) * C26498) *
                C52053) *
               C17509) *
              C79303 +
          ((((C166 * C750 + C79308 * C860) * C26498 +
             (C166 * C758 + C79308 * C868) * C79306) *
                C52053 +
            (C57252 + C57253) * C52054) *
               C17509 -
           ((C57254 + C57255) * C52054 + (C57253 + C57252) * C52053) * C79114) *
              C79290 +
          (((C59437 + C59438) * C52053 +
            ((C166 * C31755 + C79308 * C31853) * C26498 +
             (C166 * C31756 + C79308 * C31854) * C79306) *
                C52054) *
               C79114 -
           ((C59438 + C59437) * C52054 +
            ((C166 * C5572 + C79308 * C5630) * C79306 +
             (C166 * C5568 + C79308 * C5626) * C26498) *
                C52053) *
               C17509) *
              C79269) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C166 * C96 + C79308 * C167) * C26498 +
              (C166 * C102 + C79308 * C173) * C79306) *
                 C52053 +
             (C53284 + C53285) * C52054) *
                C17509 -
            ((C53286 + C53287) * C52054 + (C53285 + C53284) * C52053) *
                C79114) *
               C12991 +
           (((C55324 + C55325) * C52053 + (C57250 + C57251) * C52054) * C79114 -
            ((C55325 + C55324) * C52054 +
             ((C166 * C757 + C79308 * C867) * C79306 +
              (C166 * C749 + C79308 * C859) * C26498) *
                 C52053) *
                C17509) *
               C79072) *
              C79297 +
          ((((C53272 + C53273) * C52053 + (C53274 + C53275) * C52054) * C79114 -
            ((C53273 + C53272) * C52054 +
             (C197 * C79306 + C196 * C26498) * C52053) *
                C17509) *
               C12991 +
           (((C892 * C26498 + C891 * C79306) * C52053 +
             (C55318 + C55319) * C52054) *
                C17509 -
            ((C61906 + C61907) * C52054 + (C55319 + C55318) * C52053) *
                C79114) *
               C79072) *
              C79281 +
          ((((C199 * C26498 + C198 * C79306) * C52053 +
             (C53276 + C53277) * C52054) *
                C17509 -
            ((C53278 + C53279) * C52054 + (C53277 + C53276) * C52053) *
                C79114) *
               C12991 +
           (((C55320 + C55321) * C52053 +
             ((C166 * C10817 + C79308 * C10920) * C26498 +
              (C166 * C10818 + C79308 * C10921) * C79306) *
                 C52054) *
                C79114 -
            ((C55321 + C55320) * C52054 +
             (C896 * C79306 + C895 * C26498) * C52053) *
                C17509) *
               C79072) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C166 * C96 + C79308 * C167) * C26498 +
             (C166 * C102 + C79308 * C173) * C79306) *
                C52053 +
            (C53284 + C53285) * C52054) *
               C79311 -
           ((C53286 + C53287) * C52054 + (C53285 + C53284) * C52053) * C79305 +
           ((C53287 + C53286) * C52053 + (C61359 + C61360) * C52054) * C79293 -
           ((C61361 + C61362) * C52054 + (C61360 + C61359) * C52053) * C79275) *
              C12991 +
          (((C55324 + C55325) * C52053 + (C57250 + C57251) * C52054) * C79305 -
           ((C55325 + C55324) * C52054 +
            ((C166 * C757 + C79308 * C867) * C79306 +
             (C166 * C749 + C79308 * C859) * C26498) *
                C52053) *
               C79311 -
           ((C63353 + C63354) * C52054 + (C57251 + C57250) * C52053) * C79293 +
           ((C63354 + C63353) * C52053 +
            ((C166 * C36007 + C79308 * C36056) * C26498 +
             (C166 * C36008 + C79308 * C36057) * C79306) *
                C52054) *
               C79275) *
              C79072) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eexz[57] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
                C26498 +
            (C52140 * C102 + C52053 * C252 + C52141 * C1690 + C52054 * C1914) *
                C79306) *
               C79308 * C17509 -
           ((C52141 * C1691 + C52054 * C1915 + C52140 * C1690 +
             C52053 * C1914) *
                C79306 +
            (C52141 * C1683 + C52054 * C1907 + C52140 * C1682 +
             C52053 * C1906) *
                C26498) *
               C79308 * C79114) *
              C79310 +
          (((C52140 * C3931 + C52053 * C4165 + C52141 * C6042 +
             C52054 * C6226) *
                C26498 +
            (C52140 * C3935 + C52053 * C4169 + C52141 * C6048 +
             C52054 * C6232) *
                C79306) *
               C79308 * C79114 -
           ((C52141 * C3935 + C52054 * C4169 + C52140 * C757 + C52053 * C981) *
                C79306 +
            (C52141 * C3931 + C52054 * C4165 + C52140 * C749 + C52053 * C973) *
                C26498) *
               C79308 * C17509) *
              C79303 +
          (((C52140 * C750 + C52053 * C974 + C52141 * C6044 + C52054 * C6228) *
                C26498 +
            (C52140 * C758 + C52053 * C982 + C52141 * C6050 + C52054 * C6234) *
                C79306) *
               C79308 * C17509 -
           ((C52141 * C6051 + C52054 * C6235 + C52140 * C6050 +
             C52053 * C6234) *
                C79306 +
            (C52141 * C6045 + C52054 * C6229 + C52140 * C6044 +
             C52053 * C6228) *
                C26498) *
               C79308 * C79114) *
              C79290 +
          (((C52140 * C8377 + C52053 * C8521 + C52141 * C31755 +
             C52054 * C31929) *
                C26498 +
            (C52140 * C8379 + C52053 * C8523 + C52141 * C31756 +
             C52054 * C31930) *
                C79306) *
               C79308 * C79114 -
           ((C52141 * C8379 + C52054 * C8523 + C52140 * C5572 +
             C52053 * C5680) *
                C79306 +
            (C52141 * C8377 + C52054 * C8521 + C52140 * C5568 +
             C52053 * C5676) *
                C26498) *
               C79308 * C17509) *
              C79269) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
                 C26498 +
             (C52140 * C102 + C52053 * C252 + C52141 * C1690 + C52054 * C1914) *
                 C79306) *
                C79308 * C17509 -
            ((C52141 * C1691 + C52054 * C1915 + C52140 * C1690 +
              C52053 * C1914) *
                 C79306 +
             (C52141 * C1683 + C52054 * C1907 + C52140 * C1682 +
              C52053 * C1906) *
                 C26498) *
                C79308 * C79114) *
               C12991 +
           (((C52140 * C3931 + C52053 * C4165 + C52141 * C6042 +
              C52054 * C6226) *
                 C26498 +
             (C52140 * C3935 + C52053 * C4169 + C52141 * C6048 +
              C52054 * C6232) *
                 C79306) *
                C79308 * C79114 -
            ((C52141 * C3935 + C52054 * C4169 + C52140 * C757 + C52053 * C981) *
                 C79306 +
             (C52141 * C3931 + C52054 * C4165 + C52140 * C749 + C52053 * C973) *
                 C26498) *
                C79308 * C17509) *
               C79072) *
              C79297 +
          ((((C52140 * C1681 + C52053 * C1905 + C52141 * C1684 +
              C52054 * C1908) *
                 C26498 +
             (C52140 * C1689 + C52053 * C1913 + C52141 * C1692 +
              C52054 * C1916) *
                 C79306) *
                C79308 * C79114 -
            ((C52141 * C1689 + C52054 * C1913 + C52140 * C103 + C52053 * C253) *
                 C79306 +
             (C52141 * C1681 + C52054 * C1905 + C52140 * C97 + C52053 * C247) *
                 C26498) *
                C79308 * C17509) *
               C12991 +
           (((C52140 * C748 + C52053 * C972 + C52141 * C3932 + C52054 * C4166) *
                 C26498 +
             (C52140 * C756 + C52053 * C980 + C52141 * C3936 + C52054 * C4170) *
                 C79306) *
                C79308 * C17509 -
            ((C52141 * C6047 + C52054 * C6231 + C52140 * C3936 +
              C52053 * C4170) *
                 C79306 +
             (C52141 * C6041 + C52054 * C6225 + C52140 * C3932 +
              C52053 * C4166) *
                 C26498) *
                C79308 * C79114) *
               C79072) *
              C79281 +
          ((((C52140 * C98 + C52053 * C248 + C52141 * C1685 + C52054 * C1909) *
                 C26498 +
             (C52140 * C104 + C52053 * C254 + C52141 * C1693 + C52054 * C1917) *
                 C79306) *
                C79308 * C17509 -
            ((C52141 * C1694 + C52054 * C1918 + C52140 * C1693 +
              C52053 * C1917) *
                 C79306 +
             (C52141 * C1686 + C52054 * C1910 + C52140 * C1685 +
              C52053 * C1909) *
                 C26498) *
                C79308 * C79114) *
               C12991 +
           (((C52140 * C3933 + C52053 * C4167 + C52141 * C10817 +
              C52054 * C11026) *
                 C26498 +
             (C52140 * C3937 + C52053 * C4171 + C52141 * C10818 +
              C52054 * C11027) *
                 C79306) *
                C79308 * C79114 -
            ((C52141 * C3937 + C52054 * C4171 + C52140 * C760 + C52053 * C984) *
                 C79306 +
             (C52141 * C3933 + C52054 * C4167 + C52140 * C752 + C52053 * C976) *
                 C26498) *
                C79308 * C17509) *
               C79072) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
                C26498 +
            (C52140 * C102 + C52053 * C252 + C52141 * C1690 + C52054 * C1914) *
                C79306) *
               C79308 * C79311 -
           ((C52141 * C1691 + C52054 * C1915 + C52140 * C1690 +
             C52053 * C1914) *
                C79306 +
            (C52141 * C1683 + C52054 * C1907 + C52140 * C1682 +
             C52053 * C1906) *
                C26498) *
               C79308 * C79305 +
           ((C52140 * C1683 + C52053 * C1907 + C52141 * C10320 +
             C52054 * C10428) *
                C26498 +
            (C52140 * C1691 + C52053 * C1915 + C52141 * C10324 +
             C52054 * C10432) *
                C79306) *
               C79308 * C79293 -
           ((C52141 * C10325 + C52054 * C10433 + C52140 * C10324 +
             C52053 * C10432) *
                C79306 +
            (C52141 * C10321 + C52054 * C10429 + C52140 * C10320 +
             C52053 * C10428) *
                C26498) *
               C79308 * C79275) *
              C12991 +
          (((C52140 * C3931 + C52053 * C4165 + C52141 * C6042 +
             C52054 * C6226) *
                C26498 +
            (C52140 * C3935 + C52053 * C4169 + C52141 * C6048 +
             C52054 * C6232) *
                C79306) *
               C79308 * C79305 -
           ((C52141 * C3935 + C52054 * C4169 + C52140 * C757 + C52053 * C981) *
                C79306 +
            (C52141 * C3931 + C52054 * C4165 + C52140 * C749 + C52053 * C973) *
                C26498) *
               C79308 * C79311 -
           ((C52141 * C12367 + C52054 * C12511 + C52140 * C6048 +
             C52053 * C6232) *
                C79306 +
            (C52141 * C12365 + C52054 * C12509 + C52140 * C6042 +
             C52053 * C6226) *
                C26498) *
               C79308 * C79293 +
           ((C52140 * C12365 + C52053 * C12509 + C52141 * C36007 +
             C52054 * C36100) *
                C26498 +
            (C52140 * C12367 + C52053 * C12511 + C52141 * C36008 +
             C52054 * C36101) *
                C79306) *
               C79308 * C79275) *
              C79072) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eeyx[57] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C26498 * C96 + C79306 * C102) * C166 +
             (C26498 * C167 + C79306 * C324) * C79308) *
                C52053 +
            (C53472 + C53473) * C52054) *
               C17509 -
           ((C53474 + C53475) * C52054 + (C53473 + C53472) * C52053) * C79114) *
              C79310 +
          (((C55522 + C55523) * C52053 + (C57404 + C57405) * C52054) * C79114 -
           ((C55523 + C55522) * C52054 +
            (C27247 * C79308 + C27246 * C166) * C52053) *
               C17509) *
              C79303 +
          (((C27249 * C166 + C27248 * C79308) * C52053 +
            (C57406 + C57407) * C52054) *
               C17509 -
           ((C57408 + C57409) * C52054 + (C57407 + C57406) * C52053) * C79114) *
              C79290 +
          (((C59571 + C59572) * C52053 +
            ((C26498 * C31755 + C79306 * C31756) * C166 +
             (C26498 * C31853 + C79306 * C32029) * C79308) *
                C52054) *
               C79114 -
           ((C59572 + C59571) * C52054 +
            (C31433 * C79308 + C31432 * C166) * C52053) *
               C17509) *
              C79269) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C26498 * C96 + C79306 * C102) * C166 +
              (C26498 * C167 + C79306 * C324) * C79308) *
                 C52053 +
             (C53472 + C53473) * C52054) *
                C17509 -
            ((C53474 + C53475) * C52054 + (C53473 + C53472) * C52053) *
                C79114) *
               C12991 +
           (((C55522 + C55523) * C52053 + (C57404 + C57405) * C52054) * C79114 -
            ((C55523 + C55522) * C52054 +
             (C27247 * C79308 + C27246 * C166) * C52053) *
                C17509) *
               C79072) *
              C79297 +
          ((((C53476 + C53477) * C52053 + (C53478 + C53479) * C52054) * C79114 -
            ((C53477 + C53476) * C52054 +
             ((C26498 * C168 + C79306 * C325) * C79308 +
              (C26498 * C97 + C79306 * C103) * C166) *
                 C52053) *
                C17509) *
               C12991 +
           (((C27250 * C166 + C27251 * C79308) * C52053 +
             (C55524 + C55525) * C52054) *
                C17509 -
            ((C62104 + C62105) * C52054 + (C55525 + C55524) * C52053) *
                C79114) *
               C79072) *
              C79281 +
          (((((C26498 * C98 + C79306 * C104) * C166 +
              (C26498 * C169 + C79306 * C326) * C79308) *
                 C52053 +
             (C53480 + C53481) * C52054) *
                C17509 -
            ((C53482 + C53483) * C52054 + (C53481 + C53480) * C52053) *
                C79114) *
               C12991 +
           (((C55526 + C55527) * C52053 +
             ((C26498 * C10817 + C79306 * C10818) * C166 +
              (C26498 * C10920 + C79306 * C11132) * C79308) *
                 C52054) *
                C79114 -
            ((C55527 + C55526) * C52054 +
             (C27255 * C79308 + C27254 * C166) * C52053) *
                C17509) *
               C79072) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C26498 * C96 + C79306 * C102) * C166 +
             (C26498 * C167 + C79306 * C324) * C79308) *
                C52053 +
            (C53472 + C53473) * C52054) *
               C79311 -
           ((C53474 + C53475) * C52054 + (C53473 + C53472) * C52053) * C79305 +
           ((C53475 + C53474) * C52053 + (C61462 + C61463) * C52054) * C79293 -
           ((C61464 + C61465) * C52054 + (C61463 + C61462) * C52053) * C79275) *
              C12991 +
          (((C55522 + C55523) * C52053 + (C57404 + C57405) * C52054) * C79305 -
           ((C55523 + C55522) * C52054 +
            (C27247 * C79308 + C27246 * C166) * C52053) *
               C79311 -
           ((C63487 + C63488) * C52054 + (C57405 + C57404) * C52053) * C79293 +
           ((C63488 + C63487) * C52053 +
            ((C26498 * C36007 + C79306 * C36008) * C166 +
             (C26498 * C36056 + C79306 * C36144) * C79308) *
                C52054) *
               C79275) *
              C79072) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eeyy[57] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C372 * C96 + C380 + C380 + C79308 * C373) * C79306 * C52053 +
            C53572 * C52054) *
               C17509 -
           (C53573 * C52054 + C53572 * C52053) * C79114) *
              C79310 +
          ((C55633 * C52053 + C57500 * C52054) * C79114 -
           (C55633 * C52054 +
            (C372 * C749 + C1180 + C1180 + C79308 * C1169) * C79306 * C52053) *
               C17509) *
              C79303 +
          (((C372 * C750 + C1181 + C1181 + C79308 * C1170) * C79306 * C52053 +
            C57501 * C52054) *
               C17509 -
           (C57502 * C52054 + C57501 * C52053) * C79114) *
              C79290 +
          ((C59645 * C52053 +
            (C372 * C31755 + C59641 + C59641 + C79308 * C32122) * C79306 *
                C52054) *
               C79114 -
           (C59645 * C52054 +
            (C372 * C5568 + C5777 + C5777 + C79308 * C5772) * C79306 * C52053) *
               C17509) *
              C79269) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C372 * C96 + C380 + C380 + C79308 * C373) * C79306 * C52053 +
             C53572 * C52054) *
                C17509 -
            (C53573 * C52054 + C53572 * C52053) * C79114) *
               C12991 +
           ((C55633 * C52053 + C57500 * C52054) * C79114 -
            (C55633 * C52054 +
             (C372 * C749 + C1180 + C1180 + C79308 * C1169) * C79306 * C52053) *
                C17509) *
               C79072) *
              C79297 +
          (((C53562 * C52053 + C53563 * C52054) * C79114 -
            (C53562 * C52054 + C402 * C79306 * C52053) * C17509) *
               C12991 +
           ((C1201 * C79306 * C52053 + C55628 * C52054) * C17509 -
            (C62204 * C52054 + C55628 * C52053) * C79114) *
               C79072) *
              C79281 +
          (((C403 * C79306 * C52053 + C53564 * C52054) * C17509 -
            (C53565 * C52054 + C53564 * C52053) * C79114) *
               C12991 +
           ((C55629 * C52053 +
             (C372 * C10817 + C11235 + C11235 + C79308 * C11231) * C79306 *
                 C52054) *
                C79114 -
            (C55629 * C52054 + C1203 * C79306 * C52053) * C17509) *
               C79072) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C372 * C96 + C380 + C380 + C79308 * C373) * C79306 * C52053 +
            C53572 * C52054) *
               C79311 -
           (C53573 * C52054 + C53572 * C52053) * C79305 +
           (C53573 * C52053 + C61520 * C52054) * C79293 -
           (C61521 * C52054 + C61520 * C52053) * C79275) *
              C12991 +
          ((C55633 * C52053 + C57500 * C52054) * C79305 -
           (C55633 * C52054 +
            (C372 * C749 + C1180 + C1180 + C79308 * C1169) * C79306 * C52053) *
               C79311 -
           (C63561 * C52054 + C57500 * C52053) * C79293 +
           (C63561 * C52053 +
            (C372 * C36007 + C63557 + C63557 + C79308 * C36187) * C79306 *
                C52054) *
               C79275) *
              C79072) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eeyz[57] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
                C166 +
            (C52140 * C167 + C52053 * C447 + C52141 * C1792 + C52054 * C2212) *
                C79308) *
               C79306 * C17509 -
           ((C52141 * C1793 + C52054 * C2213 + C52140 * C1792 +
             C52053 * C2212) *
                C79308 +
            (C52141 * C1683 + C52054 * C1907 + C52140 * C1682 +
             C52053 * C1906) *
                C166) *
               C79306 * C79114) *
              C79310 +
          (((C52140 * C3931 + C52053 * C4165 + C52141 * C6042 +
             C52054 * C6226) *
                C166 +
            (C52140 * C4047 + C52053 * C4501 + C52141 * C6140 +
             C52054 * C6478) *
                C79308) *
               C79306 * C79114 -
           ((C52141 * C4047 + C52054 * C4501 + C52140 * C859 + C52053 * C1279) *
                C79308 +
            (C52141 * C3931 + C52054 * C4165 + C52140 * C749 + C52053 * C973) *
                C166) *
               C79306 * C17509) *
              C79303 +
          (((C52140 * C750 + C52053 * C974 + C52141 * C6044 + C52054 * C6228) *
                C166 +
            (C52140 * C860 + C52053 * C1280 + C52141 * C6142 + C52054 * C6480) *
                C79308) *
               C79306 * C17509 -
           ((C52141 * C6143 + C52054 * C6481 + C52140 * C6142 +
             C52053 * C6480) *
                C79308 +
            (C52141 * C6045 + C52054 * C6229 + C52140 * C6044 +
             C52053 * C6228) *
                C166) *
               C79306 * C79114) *
              C79290 +
          (((C52140 * C8377 + C52053 * C8521 + C52141 * C31755 +
             C52054 * C31929) *
                C166 +
            (C52140 * C8451 + C52053 * C8729 + C52141 * C31853 +
             C52054 * C32203) *
                C79308) *
               C79306 * C79114 -
           ((C52141 * C8451 + C52054 * C8729 + C52140 * C5626 +
             C52053 * C5822) *
                C79308 +
            (C52141 * C8377 + C52054 * C8521 + C52140 * C5568 +
             C52053 * C5676) *
                C166) *
               C79306 * C17509) *
              C79269) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
                 C166 +
             (C52140 * C167 + C52053 * C447 + C52141 * C1792 + C52054 * C2212) *
                 C79308) *
                C79306 * C17509 -
            ((C52141 * C1793 + C52054 * C2213 + C52140 * C1792 +
              C52053 * C2212) *
                 C79308 +
             (C52141 * C1683 + C52054 * C1907 + C52140 * C1682 +
              C52053 * C1906) *
                 C166) *
                C79306 * C79114) *
               C12991 +
           (((C52140 * C3931 + C52053 * C4165 + C52141 * C6042 +
              C52054 * C6226) *
                 C166 +
             (C52140 * C4047 + C52053 * C4501 + C52141 * C6140 +
              C52054 * C6478) *
                 C79308) *
                C79306 * C79114 -
            ((C52141 * C4047 + C52054 * C4501 + C52140 * C859 +
              C52053 * C1279) *
                 C79308 +
             (C52141 * C3931 + C52054 * C4165 + C52140 * C749 + C52053 * C973) *
                 C166) *
                C79306 * C17509) *
               C79072) *
              C79297 +
          ((((C52140 * C1681 + C52053 * C1905 + C52141 * C1684 +
              C52054 * C1908) *
                 C166 +
             (C52140 * C1791 + C52053 * C2211 + C52141 * C1794 +
              C52054 * C2214) *
                 C79308) *
                C79306 * C79114 -
            ((C52141 * C1791 + C52054 * C2211 + C52140 * C168 + C52053 * C448) *
                 C79308 +
             (C52141 * C1681 + C52054 * C1905 + C52140 * C97 + C52053 * C247) *
                 C166) *
                C79306 * C17509) *
               C12991 +
           (((C52140 * C748 + C52053 * C972 + C52141 * C3932 + C52054 * C4166) *
                 C166 +
             (C52140 * C858 + C52053 * C1278 + C52141 * C4048 +
              C52054 * C4502) *
                 C79308) *
                C79306 * C17509 -
            ((C52141 * C6139 + C52054 * C6477 + C52140 * C4048 +
              C52053 * C4502) *
                 C79308 +
             (C52141 * C6041 + C52054 * C6225 + C52140 * C3932 +
              C52053 * C4166) *
                 C166) *
                C79306 * C79114) *
               C79072) *
              C79281 +
          ((((C52140 * C98 + C52053 * C248 + C52141 * C1685 + C52054 * C1909) *
                 C166 +
             (C52140 * C169 + C52053 * C449 + C52141 * C1795 + C52054 * C2215) *
                 C79308) *
                C79306 * C17509 -
            ((C52141 * C1796 + C52054 * C2216 + C52140 * C1795 +
              C52053 * C2215) *
                 C79308 +
             (C52141 * C1686 + C52054 * C1910 + C52140 * C1685 +
              C52053 * C1909) *
                 C166) *
                C79306 * C79114) *
               C12991 +
           (((C52140 * C3933 + C52053 * C4167 + C52141 * C10817 +
              C52054 * C11026) *
                 C166 +
             (C52140 * C4049 + C52053 * C4503 + C52141 * C10920 +
              C52054 * C11336) *
                 C79308) *
                C79306 * C79114 -
            ((C52141 * C4049 + C52054 * C4503 + C52140 * C862 +
              C52053 * C1282) *
                 C79308 +
             (C52141 * C3933 + C52054 * C4167 + C52140 * C752 + C52053 * C976) *
                 C166) *
                C79306 * C17509) *
               C79072) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
                C166 +
            (C52140 * C167 + C52053 * C447 + C52141 * C1792 + C52054 * C2212) *
                C79308) *
               C79306 * C79311 -
           ((C52141 * C1793 + C52054 * C2213 + C52140 * C1792 +
             C52053 * C2212) *
                C79308 +
            (C52141 * C1683 + C52054 * C1907 + C52140 * C1682 +
             C52053 * C1906) *
                C166) *
               C79306 * C79305 +
           ((C52140 * C1683 + C52053 * C1907 + C52141 * C10320 +
             C52054 * C10428) *
                C166 +
            (C52140 * C1793 + C52053 * C2213 + C52141 * C10378 +
             C52054 * C10574) *
                C79308) *
               C79306 * C79293 -
           ((C52141 * C10379 + C52054 * C10575 + C52140 * C10378 +
             C52053 * C10574) *
                C79308 +
            (C52141 * C10321 + C52054 * C10429 + C52140 * C10320 +
             C52053 * C10428) *
                C166) *
               C79306 * C79275) *
              C12991 +
          (((C52140 * C3931 + C52053 * C4165 + C52141 * C6042 +
             C52054 * C6226) *
                C166 +
            (C52140 * C4047 + C52053 * C4501 + C52141 * C6140 +
             C52054 * C6478) *
                C79308) *
               C79306 * C79305 -
           ((C52141 * C4047 + C52054 * C4501 + C52140 * C859 + C52053 * C1279) *
                C79308 +
            (C52141 * C3931 + C52054 * C4165 + C52140 * C749 + C52053 * C973) *
                C166) *
               C79306 * C79311 -
           ((C52141 * C12439 + C52054 * C12717 + C52140 * C6140 +
             C52053 * C6478) *
                C79308 +
            (C52141 * C12365 + C52054 * C12509 + C52140 * C6042 +
             C52053 * C6226) *
                C166) *
               C79306 * C79293 +
           ((C52140 * C12365 + C52053 * C12509 + C52141 * C36007 +
             C52054 * C36100) *
                C166 +
            (C52140 * C12439 + C52053 * C12717 + C52141 * C36056 +
             C52054 * C36234) *
                C79308) *
               C79306 * C79275) *
              C79072) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eezx[57] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C26498 * C96 + C79306 * C102) * C52140 +
                      (C26498 * C246 + C79306 * C515) * C52053 +
                      C53460 * C52141 + C53734 * C52054) *
                         C79308 * C17509 -
                     (C53735 * C52054 + C53463 * C52141 + C53734 * C52053 +
                      C53460 * C52140) *
                         C79308 * C79114) *
                        C79310 +
                    ((C30028 * C52140 + C30345 * C52053 + C32043 * C52141 +
                      C32298 * C52054) *
                         C79308 * C79114 -
                     (C30345 * C52054 + C30028 * C52141 + C27516 * C52053 +
                      C27246 * C52140) *
                         C79308 * C17509) *
                        C79303 +
                    ((C27249 * C52140 + C27517 * C52053 + C32045 * C52141 +
                      C32299 * C52054) *
                         C79308 * C17509 -
                     (C32300 * C52054 + C32048 * C52141 + C32299 * C52053 +
                      C32045 * C52140) *
                         C79308 * C79114) *
                        C79290 +
                    ((C34282 * C52140 + C34492 * C52053 +
                      (C26498 * C31755 + C79306 * C31756) * C52141 +
                      (C26498 * C31929 + C79306 * C32287) * C52054) *
                         C79308 * C79114 -
                     (C34492 * C52054 + C34282 * C52141 + C31581 * C52053 +
                      C31432 * C52140) *
                         C79308 * C17509) *
                        C79269) *
                   C78981) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((((C26498 * C96 + C79306 * C102) * C52140 +
                       (C26498 * C246 + C79306 * C515) * C52053 +
                       C53460 * C52141 + C53734 * C52054) *
                          C79308 * C17509 -
                      (C53735 * C52054 + C53463 * C52141 + C53734 * C52053 +
                       C53460 * C52140) *
                          C79308 * C79114) *
                         C12991 +
                     ((C30028 * C52140 + C30345 * C52053 + C32043 * C52141 +
                       C32298 * C52054) *
                          C79308 * C79114 -
                      (C30345 * C52054 + C30028 * C52141 + C27516 * C52053 +
                       C27246 * C52140) *
                          C79308 * C17509) *
                         C79072) *
                        C79297 +
                    (((C53464 * C52140 + C53736 * C52053 + C53466 * C52141 +
                       C53737 * C52054) *
                          C79308 * C79114 -
                      (C53736 * C52054 + C53464 * C52141 +
                       (C26498 * C247 + C79306 * C516) * C52053 +
                       (C26498 * C97 + C79306 * C103) * C52140) *
                          C79308 * C17509) *
                         C12991 +
                     ((C27250 * C52140 + C27518 * C52053 + C30029 * C52141 +
                       C30346 * C52054) *
                          C79308 * C17509 -
                      (C37072 * C52054 + C36772 * C52141 + C30346 * C52053 +
                       C30029 * C52140) *
                          C79308 * C79114) *
                         C79072) *
                        C79281 +
                    ((((C26498 * C98 + C79306 * C104) * C52140 +
                       (C26498 * C248 + C79306 * C517) * C52053 +
                       C53468 * C52141 + C53738 * C52054) *
                          C79308 * C17509 -
                      (C53739 * C52054 + C53471 * C52141 + C53738 * C52053 +
                       C53468 * C52140) *
                          C79308 * C79114) *
                         C12991 +
                     ((C30032 * C52140 + C30347 * C52053 +
                       (C26498 * C10817 + C79306 * C10818) * C52141 +
                       (C26498 * C11026 + C79306 * C11440) * C52054) *
                          C79308 * C79114 -
                      (C30347 * C52054 + C30032 * C52141 + C27520 * C52053 +
                       C27254 * C52140) *
                          C79308 * C17509) *
                         C79072) *
                        C79253)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C26498 * C96 + C79306 * C102) * C52140 +
                      (C26498 * C246 + C79306 * C515) * C52053 +
                      C53460 * C52141 + C53734 * C52054) *
                         C79308 * C79311 -
                     (C53735 * C52054 + C53463 * C52141 + C53734 * C52053 +
                      C53460 * C52140) *
                         C79308 * C79305 +
                     (C53463 * C52140 + C53735 * C52053 + C61458 * C52141 +
                      C61612 * C52054) *
                         C79308 * C79293 -
                     (C61613 * C52054 + C61461 * C52141 + C61612 * C52053 +
                      C61458 * C52140) *
                         C79308 * C79275) *
                        C12991 +
                    ((C30028 * C52140 + C30345 * C52053 + C32043 * C52141 +
                      C32298 * C52054) *
                         C79308 * C79305 -
                     (C30345 * C52054 + C30028 * C52141 + C27516 * C52053 +
                      C27246 * C52140) *
                         C79308 * C79311 -
                     (C38370 * C52054 + C38160 * C52141 + C32298 * C52053 +
                      C32043 * C52140) *
                         C79308 * C79293 +
                     (C38160 * C52140 + C38370 * C52053 +
                      (C26498 * C36007 + C79306 * C36008) * C52141 +
                      (C26498 * C36100 + C79306 * C36277) * C52054) *
                         C79308 * C79275) *
                        C79072) *
                   C78981) /
                      (p * q * std::sqrt(p + q));
    d2eezy[57] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C166 * C96 + C79308 * C167) * C52140 +
            (C166 * C246 + C79308 * C563) * C52053 + C53280 * C52141 +
            C53818 * C52054) *
               C79306 * C17509 -
           (C53819 * C52054 + C53283 * C52141 + C53818 * C52053 +
            C53280 * C52140) *
               C79306 * C79114) *
              C79310 +
          ((C55322 * C52140 + C55930 * C52053 + C57244 * C52141 +
            C57731 * C52054) *
               C79306 * C79114 -
           (C55930 * C52054 + C55322 * C52141 +
            (C166 * C973 + C79308 * C1463) * C52053 +
            (C166 * C749 + C79308 * C859) * C52140) *
               C79306 * C17509) *
              C79303 +
          (((C166 * C750 + C79308 * C860) * C52140 +
            (C166 * C974 + C79308 * C1464) * C52053 + C57246 * C52141 +
            C57732 * C52054) *
               C79306 * C17509 -
           (C57733 * C52054 + C57249 * C52141 + C57732 * C52053 +
            C57246 * C52140) *
               C79306 * C79114) *
              C79290 +
          ((C59435 * C52140 + C59846 * C52053 +
            (C166 * C31755 + C79308 * C31853) * C52141 +
            (C166 * C31929 + C79308 * C32377) * C52054) *
               C79306 * C79114 -
           (C59846 * C52054 + C59435 * C52141 +
            (C166 * C5676 + C79308 * C5914) * C52053 +
            (C166 * C5568 + C79308 * C5626) * C52140) *
               C79306 * C17509) *
              C79269) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C166 * C96 + C79308 * C167) * C52140 +
             (C166 * C246 + C79308 * C563) * C52053 + C53280 * C52141 +
             C53818 * C52054) *
                C79306 * C17509 -
            (C53819 * C52054 + C53283 * C52141 + C53818 * C52053 +
             C53280 * C52140) *
                C79306 * C79114) *
               C12991 +
           ((C55322 * C52140 + C55930 * C52053 + C57244 * C52141 +
             C57731 * C52054) *
                C79306 * C79114 -
            (C55930 * C52054 + C55322 * C52141 +
             (C166 * C973 + C79308 * C1463) * C52053 +
             (C166 * C749 + C79308 * C859) * C52140) *
                C79306 * C17509) *
               C79072) *
              C79297 +
          (((C1825 * C52140 + C2416 * C52053 + C1826 * C52141 +
             C2417 * C52054) *
                C79306 * C79114 -
            (C2416 * C52054 + C1825 * C52141 + C582 * C52053 + C196 * C52140) *
                C79306 * C17509) *
               C12991 +
           ((C892 * C52140 + C1483 * C52053 + C4064 * C52141 + C4726 * C52054) *
                C79306 * C17509 -
            (C11544 * C52054 + C10928 * C52141 + C4726 * C52053 +
             C4064 * C52140) *
                C79306 * C79114) *
               C79072) *
              C79281 +
          (((C199 * C52140 + C583 * C52053 + C1828 * C52141 + C2418 * C52054) *
                C79306 * C17509 -
            (C2419 * C52054 + C1831 * C52141 + C2418 * C52053 +
             C1828 * C52140) *
                C79306 * C79114) *
               C12991 +
           ((C4067 * C52140 + C4727 * C52053 +
             (C166 * C10817 + C79308 * C10920) * C52141 +
             (C166 * C11026 + C79308 * C11539) * C52054) *
                C79306 * C79114 -
            (C4727 * C52054 + C4067 * C52141 + C1485 * C52053 + C895 * C52140) *
                C79306 * C17509) *
               C79072) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C166 * C96 + C79308 * C167) * C52140 +
            (C166 * C246 + C79308 * C563) * C52053 + C53280 * C52141 +
            C53818 * C52054) *
               C79306 * C79311 -
           (C53819 * C52054 + C53283 * C52141 + C53818 * C52053 +
            C53280 * C52140) *
               C79306 * C79305 +
           (C53283 * C52140 + C53819 * C52053 + C61355 * C52141 +
            C61661 * C52054) *
               C79306 * C79293 -
           (C61662 * C52054 + C61358 * C52141 + C61661 * C52053 +
            C61355 * C52140) *
               C79306 * C79275) *
              C12991 +
          ((C55322 * C52140 + C55930 * C52053 + C57244 * C52141 +
            C57731 * C52054) *
               C79306 * C79305 -
           (C55930 * C52054 + C55322 * C52141 +
            (C166 * C973 + C79308 * C1463) * C52053 +
            (C166 * C749 + C79308 * C859) * C52140) *
               C79306 * C79311 -
           (C63762 * C52054 + C63352 * C52141 + C57731 * C52053 +
            C57244 * C52140) *
               C79306 * C79293 +
           (C63352 * C52140 + C63762 * C52053 +
            (C166 * C36007 + C79308 * C36056) * C52141 +
            (C166 * C36100 + C79308 * C36320) * C52054) *
               C79306 * C79275) *
              C79072) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eezz[57] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C52394 * C96 + C52397 + C52397 + C52053 * C632 +
                      C52395 * C1682 + C52398 + C52398 + C52054 * C2498) *
                         C79308 * C79306 * C17509 -
                     (C52395 * C1683 + C53894 + C53894 + C52054 * C2499 +
                      C52394 * C1682 + C53895 + C53895 + C52053 * C2498) *
                         C79308 * C79306 * C79114) *
                        C79310 +
                    ((C52394 * C3931 + C56029 + C56029 + C52053 * C4827 +
                      C52395 * C6042 + C56030 + C56030 + C52054 * C6718) *
                         C79308 * C79306 * C79114 -
                     (C52395 * C3931 + C53073 + C53073 + C52054 * C4827 +
                      C52394 * C749 + C53074 + C53074 + C52053 * C1565) *
                         C79308 * C79306 * C17509) *
                        C79303 +
                    ((C52394 * C750 + C53075 + C53075 + C52053 * C1566 +
                      C52395 * C6044 + C53076 + C53076 + C52054 * C6720) *
                         C79308 * C79306 * C17509 -
                     (C52395 * C6045 + C57810 + C57810 + C52054 * C6721 +
                      C52394 * C6044 + C57811 + C57811 + C52053 * C6720) *
                         C79308 * C79306 * C79114) *
                        C79290 +
                    ((C52394 * C8377 + C59913 + C59913 + C52053 * C8933 +
                      C52395 * C31755 + C59914 + C59914 + C52054 * C32452) *
                         C79308 * C79306 * C79114 -
                     (C52395 * C8377 + C57080 + C57080 + C52054 * C8933 +
                      C52394 * C5568 + C57081 + C57081 + C52053 * C5960) *
                         C79308 * C79306 * C17509) *
                        C79269) *
                   C78981) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C52394 * C96 + C52397 + C52397 + C52053 * C632 +
                       C52395 * C1682 + C52398 + C52398 + C52054 * C2498) *
                          C79308 * C79306 * C17509 -
                      (C52395 * C1683 + C53894 + C53894 + C52054 * C2499 +
                       C52394 * C1682 + C53895 + C53895 + C52053 * C2498) *
                          C79308 * C79306 * C79114) *
                         C12991 +
                     ((C52394 * C3931 + C56029 + C56029 + C52053 * C4827 +
                       C52395 * C6042 + C56030 + C56030 + C52054 * C6718) *
                          C79308 * C79306 * C79114 -
                      (C52395 * C3931 + C53073 + C53073 + C52054 * C4827 +
                       C52394 * C749 + C53074 + C53074 + C52053 * C1565) *
                          C79308 * C79306 * C17509) *
                         C79072) *
                        C79297 +
                    (((C52394 * C1681 + C53898 + C53898 + C52053 * C2497 +
                       C52395 * C1684 + C53899 + C53899 + C52054 * C2500) *
                          C79308 * C79306 * C79114 -
                      (C52395 * C1681 + C52399 + C52399 + C52054 * C2497 +
                       C52394 * C97 + C52400 + C52400 + C52053 * C633) *
                          C79308 * C79306 * C17509) *
                         C12991 +
                     ((C52394 * C748 + C53077 + C53077 + C52053 * C1564 +
                       C52395 * C3932 + C53078 + C53078 + C52054 * C4828) *
                          C79308 * C79306 * C17509 -
                      (C52395 * C6041 + C56031 + C56031 + C52054 * C6717 +
                       C52394 * C3932 + C56032 + C56032 + C52053 * C4828) *
                          C79308 * C79306 * C79114) *
                         C79072) *
                        C79281 +
                    (((C52394 * C98 + C52401 + C52401 + C52053 * C634 +
                       C52395 * C1685 + C52402 + C52402 + C52054 * C2501) *
                          C79308 * C79306 * C17509 -
                      (C52395 * C1686 + C53902 + C53902 + C52054 * C2502 +
                       C52394 * C1685 + C53903 + C53903 + C52053 * C2501) *
                          C79308 * C79306 * C79114) *
                         C12991 +
                     ((C52394 * C3933 + C56033 + C56033 + C52053 * C4829 +
                       C52395 * C10817 + C56034 + C56034 + C52054 * C11643) *
                          C79308 * C79306 * C79114 -
                      (C52395 * C3933 + C53081 + C53081 + C52054 * C4829 +
                       C52394 * C752 + C53082 + C53082 + C52053 * C1568) *
                          C79308 * C79306 * C17509) *
                         C79072) *
                        C79253)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((C52394 * C96 + C52397 + C52397 + C52053 * C632 +
                      C52395 * C1682 + C52398 + C52398 + C52054 * C2498) *
                         C79308 * C79306 * C79311 -
                     (C52395 * C1683 + C53894 + C53894 + C52054 * C2499 +
                      C52394 * C1682 + C53895 + C53895 + C52053 * C2498) *
                         C79308 * C79306 * C79305 +
                     (C52394 * C1683 + C53896 + C53896 + C52053 * C2499 +
                      C52395 * C10320 + C53897 + C53897 + C52054 * C10712) *
                         C79308 * C79306 * C79293 -
                     (C52395 * C10321 + C61706 + C61706 + C52054 * C10713 +
                      C52394 * C10320 + C61707 + C61707 + C52053 * C10712) *
                         C79308 * C79306 * C79275) *
                        C12991 +
                    ((C52394 * C3931 + C56029 + C56029 + C52053 * C4827 +
                      C52395 * C6042 + C56030 + C56030 + C52054 * C6718) *
                         C79308 * C79306 * C79305 -
                     (C52395 * C3931 + C53073 + C53073 + C52054 * C4827 +
                      C52394 * C749 + C53074 + C53074 + C52053 * C1565) *
                         C79308 * C79306 * C79311 -
                     (C52395 * C12365 + C57808 + C57808 + C52054 * C12921 +
                      C52394 * C6042 + C57809 + C57809 + C52053 * C6718) *
                         C79308 * C79306 * C79293 +
                     (C52394 * C12365 + C63829 + C63829 + C52053 * C12921 +
                      C52395 * C36007 + C63830 + C63830 + C52054 * C36363) *
                         C79308 * C79306 * C79275) *
                        C79072) *
                   C78981) /
                      (p * q * std::sqrt(p + q));
    d2eexx[58] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C52053 +
             C53184 * C52054) *
                C79308 * C79110 -
            (C53185 * C52054 + C53184 * C52053) * C79308 * C79117 +
            (C53185 * C52053 + C61301 * C52054) * C79308 * C20477) *
               C12991 +
           ((C29703 * C52053 + C31774 * C52054) * C79308 * C79117 -
            (C29703 * C52054 + C26964 * C52053) * C79308 * C79110 -
            (C37942 * C52054 + C31774 * C52053) * C79308 * C20477) *
               C79072) *
              C79215 +
          (((C53186 * C52053 + C53187 * C52054) * C79308 * C79117 -
            (C53186 * C52054 +
             (C26497 * C97 + C26503 + C26503 + C79306 * C109) * C52053) *
                C79308 * C79110 -
            (C62670 * C52054 + C53187 * C52053) * C79308 * C20477) *
               C12991 +
           ((C26966 * C52053 + C29704 * C52054) * C79308 * C79110 -
            (C36469 * C52054 + C29704 * C52053) * C79308 * C79117 +
            (C36469 * C52053 +
             (C26497 * C12366 + C37337 + C37337 + C79306 * C12370) * C52054) *
                C79308 * C20477) *
               C79072) *
              C78992)) /
        (p * q * std::sqrt(p + q));
    d2eexy[58] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C166 * C96 + C79308 * C167) * C26498 +
              (C166 * C102 + C79308 * C173) * C79306) *
                 C52053 +
             (C53284 + C53285) * C52054) *
                C79110 -
            ((C53286 + C53287) * C52054 + (C53285 + C53284) * C52053) * C79117 +
            ((C53287 + C53286) * C52053 + (C61359 + C61360) * C52054) *
                C20477) *
               C12991 +
           (((C55324 + C55325) * C52053 + (C57250 + C57251) * C52054) * C79117 -
            ((C55325 + C55324) * C52054 +
             ((C166 * C757 + C79308 * C867) * C79306 +
              (C166 * C749 + C79308 * C859) * C26498) *
                 C52053) *
                C79110 -
            ((C63353 + C63354) * C52054 + (C57251 + C57250) * C52053) *
                C20477) *
               C79072) *
              C79215 +
          ((((C53272 + C53273) * C52053 + (C53274 + C53275) * C52054) * C79117 -
            ((C53273 + C53272) * C52054 +
             (C197 * C79306 + C196 * C26498) * C52053) *
                C79110 -
            ((C62737 + C62738) * C52054 + (C53275 + C53274) * C52053) *
                C20477) *
               C12991 +
           (((C892 * C26498 + C891 * C79306) * C52053 +
             (C55318 + C55319) * C52054) *
                C79110 -
            ((C61906 + C61907) * C52054 + (C55319 + C55318) * C52053) * C79117 +
            ((C61907 + C61906) * C52053 +
             ((C166 * C12366 + C79308 * C12440) * C26498 +
              (C166 * C12368 + C79308 * C12442) * C79306) *
                 C52054) *
                C20477) *
               C79072) *
              C78992)) /
        (p * q * std::sqrt(p + q));
    d2eexz[58] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
                 C26498 +
             (C52140 * C102 + C52053 * C252 + C52141 * C1690 + C52054 * C1914) *
                 C79306) *
                C79308 * C79110 -
            ((C52141 * C1691 + C52054 * C1915 + C52140 * C1690 +
              C52053 * C1914) *
                 C79306 +
             (C52141 * C1683 + C52054 * C1907 + C52140 * C1682 +
              C52053 * C1906) *
                 C26498) *
                C79308 * C79117 +
            ((C52140 * C1683 + C52053 * C1907 + C52141 * C10320 +
              C52054 * C10428) *
                 C26498 +
             (C52140 * C1691 + C52053 * C1915 + C52141 * C10324 +
              C52054 * C10432) *
                 C79306) *
                C79308 * C20477) *
               C12991 +
           (((C52140 * C3931 + C52053 * C4165 + C52141 * C6042 +
              C52054 * C6226) *
                 C26498 +
             (C52140 * C3935 + C52053 * C4169 + C52141 * C6048 +
              C52054 * C6232) *
                 C79306) *
                C79308 * C79117 -
            ((C52141 * C3935 + C52054 * C4169 + C52140 * C757 + C52053 * C981) *
                 C79306 +
             (C52141 * C3931 + C52054 * C4165 + C52140 * C749 + C52053 * C973) *
                 C26498) *
                C79308 * C79110 -
            ((C52141 * C12367 + C52054 * C12511 + C52140 * C6048 +
              C52053 * C6232) *
                 C79306 +
             (C52141 * C12365 + C52054 * C12509 + C52140 * C6042 +
              C52053 * C6226) *
                 C26498) *
                C79308 * C20477) *
               C79072) *
              C79215 +
          ((((C52140 * C1681 + C52053 * C1905 + C52141 * C1684 +
              C52054 * C1908) *
                 C26498 +
             (C52140 * C1689 + C52053 * C1913 + C52141 * C1692 +
              C52054 * C1916) *
                 C79306) *
                C79308 * C79117 -
            ((C52141 * C1689 + C52054 * C1913 + C52140 * C103 + C52053 * C253) *
                 C79306 +
             (C52141 * C1681 + C52054 * C1905 + C52140 * C97 + C52053 * C247) *
                 C26498) *
                C79308 * C79110 -
            ((C52141 * C10323 + C52054 * C10431 + C52140 * C1692 +
              C52053 * C1916) *
                 C79306 +
             (C52141 * C10319 + C52054 * C10427 + C52140 * C1684 +
              C52053 * C1908) *
                 C26498) *
                C79308 * C20477) *
               C12991 +
           (((C52140 * C748 + C52053 * C972 + C52141 * C3932 + C52054 * C4166) *
                 C26498 +
             (C52140 * C756 + C52053 * C980 + C52141 * C3936 + C52054 * C4170) *
                 C79306) *
                C79308 * C79110 -
            ((C52141 * C6047 + C52054 * C6231 + C52140 * C3936 +
              C52053 * C4170) *
                 C79306 +
             (C52141 * C6041 + C52054 * C6225 + C52140 * C3932 +
              C52053 * C4166) *
                 C26498) *
                C79308 * C79117 +
            ((C52140 * C6041 + C52053 * C6225 + C52141 * C12366 +
              C52054 * C12510) *
                 C26498 +
             (C52140 * C6047 + C52053 * C6231 + C52141 * C12368 +
              C52054 * C12512) *
                 C79306) *
                C79308 * C20477) *
               C79072) *
              C78992)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[58] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C26498 * C96 + C79306 * C102) * C166 +
              (C26498 * C167 + C79306 * C324) * C79308) *
                 C52053 +
             (C53472 + C53473) * C52054) *
                C79110 -
            ((C53474 + C53475) * C52054 + (C53473 + C53472) * C52053) * C79117 +
            ((C53475 + C53474) * C52053 + (C61462 + C61463) * C52054) *
                C20477) *
               C12991 +
           (((C55522 + C55523) * C52053 + (C57404 + C57405) * C52054) * C79117 -
            ((C55523 + C55522) * C52054 +
             (C27247 * C79308 + C27246 * C166) * C52053) *
                C79110 -
            ((C63487 + C63488) * C52054 + (C57405 + C57404) * C52053) *
                C20477) *
               C79072) *
              C79215 +
          ((((C53476 + C53477) * C52053 + (C53478 + C53479) * C52054) * C79117 -
            ((C53477 + C53476) * C52054 +
             ((C26498 * C168 + C79306 * C325) * C79308 +
              (C26498 * C97 + C79306 * C103) * C166) *
                 C52053) *
                C79110 -
            ((C62877 + C62878) * C52054 + (C53479 + C53478) * C52053) *
                C20477) *
               C12991 +
           (((C27250 * C166 + C27251 * C79308) * C52053 +
             (C55524 + C55525) * C52054) *
                C79110 -
            ((C62104 + C62105) * C52054 + (C55525 + C55524) * C52053) * C79117 +
            ((C62105 + C62104) * C52053 +
             ((C26498 * C12366 + C79306 * C12368) * C166 +
              (C26498 * C12440 + C79306 * C12580) * C79308) *
                 C52054) *
                C20477) *
               C79072) *
              C78992)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[58] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C372 * C96 + C380 + C380 + C79308 * C373) * C79306 * C52053 +
             C53572 * C52054) *
                C79110 -
            (C53573 * C52054 + C53572 * C52053) * C79117 +
            (C53573 * C52053 + C61520 * C52054) * C20477) *
               C12991 +
           ((C55633 * C52053 + C57500 * C52054) * C79117 -
            (C55633 * C52054 +
             (C372 * C749 + C1180 + C1180 + C79308 * C1169) * C79306 * C52053) *
                C79110 -
            (C63561 * C52054 + C57500 * C52053) * C20477) *
               C79072) *
              C79215 +
          (((C53562 * C52053 + C53563 * C52054) * C79117 -
            (C53562 * C52054 + C402 * C79306 * C52053) * C79110 -
            (C62945 * C52054 + C53563 * C52053) * C20477) *
               C12991 +
           ((C1201 * C79306 * C52053 + C55628 * C52054) * C79110 -
            (C62204 * C52054 + C55628 * C52053) * C79117 +
            (C62204 * C52053 +
             (C372 * C12366 + C12651 + C12651 + C79308 * C12648) * C79306 *
                 C52054) *
                C20477) *
               C79072) *
              C78992)) /
        (p * q * std::sqrt(p + q));
    d2eeyz[58] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
                 C166 +
             (C52140 * C167 + C52053 * C447 + C52141 * C1792 + C52054 * C2212) *
                 C79308) *
                C79306 * C79110 -
            ((C52141 * C1793 + C52054 * C2213 + C52140 * C1792 +
              C52053 * C2212) *
                 C79308 +
             (C52141 * C1683 + C52054 * C1907 + C52140 * C1682 +
              C52053 * C1906) *
                 C166) *
                C79306 * C79117 +
            ((C52140 * C1683 + C52053 * C1907 + C52141 * C10320 +
              C52054 * C10428) *
                 C166 +
             (C52140 * C1793 + C52053 * C2213 + C52141 * C10378 +
              C52054 * C10574) *
                 C79308) *
                C79306 * C20477) *
               C12991 +
           (((C52140 * C3931 + C52053 * C4165 + C52141 * C6042 +
              C52054 * C6226) *
                 C166 +
             (C52140 * C4047 + C52053 * C4501 + C52141 * C6140 +
              C52054 * C6478) *
                 C79308) *
                C79306 * C79117 -
            ((C52141 * C4047 + C52054 * C4501 + C52140 * C859 +
              C52053 * C1279) *
                 C79308 +
             (C52141 * C3931 + C52054 * C4165 + C52140 * C749 + C52053 * C973) *
                 C166) *
                C79306 * C79110 -
            ((C52141 * C12439 + C52054 * C12717 + C52140 * C6140 +
              C52053 * C6478) *
                 C79308 +
             (C52141 * C12365 + C52054 * C12509 + C52140 * C6042 +
              C52053 * C6226) *
                 C166) *
                C79306 * C20477) *
               C79072) *
              C79215 +
          ((((C52140 * C1681 + C52053 * C1905 + C52141 * C1684 +
              C52054 * C1908) *
                 C166 +
             (C52140 * C1791 + C52053 * C2211 + C52141 * C1794 +
              C52054 * C2214) *
                 C79308) *
                C79306 * C79117 -
            ((C52141 * C1791 + C52054 * C2211 + C52140 * C168 + C52053 * C448) *
                 C79308 +
             (C52141 * C1681 + C52054 * C1905 + C52140 * C97 + C52053 * C247) *
                 C166) *
                C79306 * C79110 -
            ((C52141 * C10377 + C52054 * C10573 + C52140 * C1794 +
              C52053 * C2214) *
                 C79308 +
             (C52141 * C10319 + C52054 * C10427 + C52140 * C1684 +
              C52053 * C1908) *
                 C166) *
                C79306 * C20477) *
               C12991 +
           (((C52140 * C748 + C52053 * C972 + C52141 * C3932 + C52054 * C4166) *
                 C166 +
             (C52140 * C858 + C52053 * C1278 + C52141 * C4048 +
              C52054 * C4502) *
                 C79308) *
                C79306 * C79110 -
            ((C52141 * C6139 + C52054 * C6477 + C52140 * C4048 +
              C52053 * C4502) *
                 C79308 +
             (C52141 * C6041 + C52054 * C6225 + C52140 * C3932 +
              C52053 * C4166) *
                 C166) *
                C79306 * C79117 +
            ((C52140 * C6041 + C52053 * C6225 + C52141 * C12366 +
              C52054 * C12510) *
                 C166 +
             (C52140 * C6139 + C52053 * C6477 + C52141 * C12440 +
              C52054 * C12718) *
                 C79308) *
                C79306 * C20477) *
               C79072) *
              C78992)) /
        (p * q * std::sqrt(p + q));
    d2eezx[58] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C26498 * C96 + C79306 * C102) * C52140 +
                       (C26498 * C246 + C79306 * C515) * C52053 +
                       C53460 * C52141 + C53734 * C52054) *
                          C79308 * C79110 -
                      (C53735 * C52054 + C53463 * C52141 + C53734 * C52053 +
                       C53460 * C52140) *
                          C79308 * C79117 +
                      (C53463 * C52140 + C53735 * C52053 + C61458 * C52141 +
                       C61612 * C52054) *
                          C79308 * C20477) *
                         C12991 +
                     ((C30028 * C52140 + C30345 * C52053 + C32043 * C52141 +
                       C32298 * C52054) *
                          C79308 * C79117 -
                      (C30345 * C52054 + C30028 * C52141 + C27516 * C52053 +
                       C27246 * C52140) *
                          C79308 * C79110 -
                      (C38370 * C52054 + C38160 * C52141 + C32298 * C52053 +
                       C32043 * C52140) *
                          C79308 * C20477) *
                         C79072) *
                        C79215 +
                    (((C53464 * C52140 + C53736 * C52053 + C53466 * C52141 +
                       C53737 * C52054) *
                          C79308 * C79117 -
                      (C53736 * C52054 + C53464 * C52141 +
                       (C26498 * C247 + C79306 * C516) * C52053 +
                       (C26498 * C97 + C79306 * C103) * C52140) *
                          C79308 * C79110 -
                      (C63080 * C52054 + C62876 * C52141 + C53737 * C52053 +
                       C53466 * C52140) *
                          C79308 * C20477) *
                         C12991 +
                     ((C27250 * C52140 + C27518 * C52053 + C30029 * C52141 +
                       C30346 * C52054) *
                          C79308 * C79110 -
                      (C37072 * C52054 + C36772 * C52141 + C30346 * C52053 +
                       C30029 * C52140) *
                          C79308 * C79117 +
                      (C36772 * C52140 + C37072 * C52053 +
                       (C26498 * C12366 + C79306 * C12368) * C52141 +
                       (C26498 * C12510 + C79306 * C12786) * C52054) *
                          C79308 * C20477) *
                         C79072) *
                        C78992)) /
                  (p * q * std::sqrt(p + q));
    d2eezy[58] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C166 * C96 + C79308 * C167) * C52140 +
             (C166 * C246 + C79308 * C563) * C52053 + C53280 * C52141 +
             C53818 * C52054) *
                C79306 * C79110 -
            (C53819 * C52054 + C53283 * C52141 + C53818 * C52053 +
             C53280 * C52140) *
                C79306 * C79117 +
            (C53283 * C52140 + C53819 * C52053 + C61355 * C52141 +
             C61661 * C52054) *
                C79306 * C20477) *
               C12991 +
           ((C55322 * C52140 + C55930 * C52053 + C57244 * C52141 +
             C57731 * C52054) *
                C79306 * C79117 -
            (C55930 * C52054 + C55322 * C52141 +
             (C166 * C973 + C79308 * C1463) * C52053 +
             (C166 * C749 + C79308 * C859) * C52140) *
                C79306 * C79110 -
            (C63762 * C52054 + C63352 * C52141 + C57731 * C52053 +
             C57244 * C52140) *
                C79306 * C20477) *
               C79072) *
              C79215 +
          (((C1825 * C52140 + C2416 * C52053 + C1826 * C52141 +
             C2417 * C52054) *
                C79306 * C79117 -
            (C2416 * C52054 + C1825 * C52141 + C582 * C52053 + C196 * C52140) *
                C79306 * C79110 -
            (C12224 * C52054 + C11800 * C52141 + C2417 * C52053 +
             C1826 * C52140) *
                C79306 * C20477) *
               C12991 +
           ((C892 * C52140 + C1483 * C52053 + C4064 * C52141 + C4726 * C52054) *
                C79306 * C79110 -
            (C11544 * C52054 + C10928 * C52141 + C4726 * C52053 +
             C4064 * C52140) *
                C79306 * C79117 +
            (C10928 * C52140 + C11544 * C52053 +
             (C166 * C12366 + C79308 * C12440) * C52141 +
             (C166 * C12510 + C79308 * C12854) * C52054) *
                C79306 * C20477) *
               C79072) *
              C78992)) /
        (p * q * std::sqrt(p + q));
    d2eezz[58] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C52394 * C96 + C52397 + C52397 + C52053 * C632 +
                       C52395 * C1682 + C52398 + C52398 + C52054 * C2498) *
                          C79308 * C79306 * C79110 -
                      (C52395 * C1683 + C53894 + C53894 + C52054 * C2499 +
                       C52394 * C1682 + C53895 + C53895 + C52053 * C2498) *
                          C79308 * C79306 * C79117 +
                      (C52394 * C1683 + C53896 + C53896 + C52053 * C2499 +
                       C52395 * C10320 + C53897 + C53897 + C52054 * C10712) *
                          C79308 * C79306 * C20477) *
                         C12991 +
                     ((C52394 * C3931 + C56029 + C56029 + C52053 * C4827 +
                       C52395 * C6042 + C56030 + C56030 + C52054 * C6718) *
                          C79308 * C79306 * C79117 -
                      (C52395 * C3931 + C53073 + C53073 + C52054 * C4827 +
                       C52394 * C749 + C53074 + C53074 + C52053 * C1565) *
                          C79308 * C79306 * C79110 -
                      (C52395 * C12365 + C57808 + C57808 + C52054 * C12921 +
                       C52394 * C6042 + C57809 + C57809 + C52053 * C6718) *
                          C79308 * C79306 * C20477) *
                         C79072) *
                        C79215 +
                    (((C52394 * C1681 + C53898 + C53898 + C52053 * C2497 +
                       C52395 * C1684 + C53899 + C53899 + C52054 * C2500) *
                          C79308 * C79306 * C79117 -
                      (C52395 * C1681 + C52399 + C52399 + C52054 * C2497 +
                       C52394 * C97 + C52400 + C52400 + C52053 * C633) *
                          C79308 * C79306 * C79110 -
                      (C52395 * C10319 + C53900 + C53900 + C52054 * C10711 +
                       C52394 * C1684 + C53901 + C53901 + C52053 * C2500) *
                          C79308 * C79306 * C20477) *
                         C12991 +
                     ((C52394 * C748 + C53077 + C53077 + C52053 * C1564 +
                       C52395 * C3932 + C53078 + C53078 + C52054 * C4828) *
                          C79308 * C79306 * C79110 -
                      (C52395 * C6041 + C56031 + C56031 + C52054 * C6717 +
                       C52394 * C3932 + C56032 + C56032 + C52053 * C4828) *
                          C79308 * C79306 * C79117 +
                      (C52394 * C6041 + C62597 + C62597 + C52053 * C6717 +
                       C52395 * C12366 + C62598 + C62598 + C52054 * C12922) *
                          C79308 * C79306 * C20477) *
                         C79072) *
                        C78992)) /
                  (p * q * std::sqrt(p + q));
    d2eexx[59] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C52053 +
             C53184 * C52054) *
                C79308 * C17509 -
            (C53185 * C52054 + C53184 * C52053) * C79308 * C79114) *
               C12991 +
           ((C29703 * C52053 + C31774 * C52054) * C79308 * C79114 -
            (C29703 * C52054 + C26964 * C52053) * C79308 * C17509) *
               C79072) *
              C79297 +
          (((C53186 * C52053 + C53187 * C52054) * C79308 * C79114 -
            (C53186 * C52054 +
             (C26497 * C97 + C26503 + C26503 + C79306 * C109) * C52053) *
                C79308 * C17509) *
               C12991 +
           ((C26966 * C52053 + C29704 * C52054) * C79308 * C17509 -
            (C36469 * C52054 + C29704 * C52053) * C79308 * C79114) *
               C79072) *
              C79281 +
          ((((C26497 * C98 + C26504 + C26504 + C79306 * C110) * C52053 +
             C53188 * C52054) *
                C79308 * C17509 -
            (C53189 * C52054 + C53188 * C52053) * C79308 * C79114) *
               C12991 +
           ((C29705 * C52053 +
             (C26497 * C10817 + C27771 + C27771 + C79306 * C10819) * C52054) *
                C79308 * C79114 -
            (C29705 * C52054 + C26968 * C52053) * C79308 * C17509) *
               C79072) *
              C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C52053 +
            C53184 * C52054) *
               C79308 * C17509 -
           (C53185 * C52054 + C53184 * C52053) * C79308 * C79114) *
              C79310 +
          ((C29703 * C52053 + C31774 * C52054) * C79308 * C79114 -
           (C29703 * C52054 + C26964 * C52053) * C79308 * C17509) *
              C79303 +
          ((C26965 * C52053 + C31775 * C52054) * C79308 * C17509 -
           (C31776 * C52054 + C31775 * C52053) * C79308 * C79114) *
              C79290 +
          ((C34064 * C52053 +
            (C26497 * C31755 + C31767 + C31767 + C79306 * C31757) * C52054) *
               C79308 * C79114 -
           (C34064 * C52054 + C31273 * C52053) * C79308 * C17509) *
              C79269) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eexy[59] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C166 * C96 + C79308 * C167) * C26498 +
              (C166 * C102 + C79308 * C173) * C79306) *
                 C52053 +
             (C53284 + C53285) * C52054) *
                C17509 -
            ((C53286 + C53287) * C52054 + (C53285 + C53284) * C52053) *
                C79114) *
               C12991 +
           (((C55324 + C55325) * C52053 + (C57250 + C57251) * C52054) * C79114 -
            ((C55325 + C55324) * C52054 +
             ((C166 * C757 + C79308 * C867) * C79306 +
              (C166 * C749 + C79308 * C859) * C26498) *
                 C52053) *
                C17509) *
               C79072) *
              C79297 +
          ((((C53272 + C53273) * C52053 + (C53274 + C53275) * C52054) * C79114 -
            ((C53273 + C53272) * C52054 +
             (C197 * C79306 + C196 * C26498) * C52053) *
                C17509) *
               C12991 +
           (((C892 * C26498 + C891 * C79306) * C52053 +
             (C55318 + C55319) * C52054) *
                C17509 -
            ((C61906 + C61907) * C52054 + (C55319 + C55318) * C52053) *
                C79114) *
               C79072) *
              C79281 +
          ((((C199 * C26498 + C198 * C79306) * C52053 +
             (C53276 + C53277) * C52054) *
                C17509 -
            ((C53278 + C53279) * C52054 + (C53277 + C53276) * C52053) *
                C79114) *
               C12991 +
           (((C55320 + C55321) * C52053 +
             ((C166 * C10817 + C79308 * C10920) * C26498 +
              (C166 * C10818 + C79308 * C10921) * C79306) *
                 C52054) *
                C79114 -
            ((C55321 + C55320) * C52054 +
             (C896 * C79306 + C895 * C26498) * C52053) *
                C17509) *
               C79072) *
              C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C166 * C96 + C79308 * C167) * C26498 +
             (C166 * C102 + C79308 * C173) * C79306) *
                C52053 +
            (C53284 + C53285) * C52054) *
               C17509 -
           ((C53286 + C53287) * C52054 + (C53285 + C53284) * C52053) * C79114) *
              C79310 +
          (((C55324 + C55325) * C52053 + (C57250 + C57251) * C52054) * C79114 -
           ((C55325 + C55324) * C52054 +
            ((C166 * C757 + C79308 * C867) * C79306 +
             (C166 * C749 + C79308 * C859) * C26498) *
                C52053) *
               C17509) *
              C79303 +
          ((((C166 * C750 + C79308 * C860) * C26498 +
             (C166 * C758 + C79308 * C868) * C79306) *
                C52053 +
            (C57252 + C57253) * C52054) *
               C17509 -
           ((C57254 + C57255) * C52054 + (C57253 + C57252) * C52053) * C79114) *
              C79290 +
          (((C59437 + C59438) * C52053 +
            ((C166 * C31755 + C79308 * C31853) * C26498 +
             (C166 * C31756 + C79308 * C31854) * C79306) *
                C52054) *
               C79114 -
           ((C59438 + C59437) * C52054 +
            ((C166 * C5572 + C79308 * C5630) * C79306 +
             (C166 * C5568 + C79308 * C5626) * C26498) *
                C52053) *
               C17509) *
              C79269) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eexz[59] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
                 C26498 +
             (C52140 * C102 + C52053 * C252 + C52141 * C1690 + C52054 * C1914) *
                 C79306) *
                C79308 * C17509 -
            ((C52141 * C1691 + C52054 * C1915 + C52140 * C1690 +
              C52053 * C1914) *
                 C79306 +
             (C52141 * C1683 + C52054 * C1907 + C52140 * C1682 +
              C52053 * C1906) *
                 C26498) *
                C79308 * C79114) *
               C12991 +
           (((C52140 * C3931 + C52053 * C4165 + C52141 * C6042 +
              C52054 * C6226) *
                 C26498 +
             (C52140 * C3935 + C52053 * C4169 + C52141 * C6048 +
              C52054 * C6232) *
                 C79306) *
                C79308 * C79114 -
            ((C52141 * C3935 + C52054 * C4169 + C52140 * C757 + C52053 * C981) *
                 C79306 +
             (C52141 * C3931 + C52054 * C4165 + C52140 * C749 + C52053 * C973) *
                 C26498) *
                C79308 * C17509) *
               C79072) *
              C79297 +
          ((((C52140 * C1681 + C52053 * C1905 + C52141 * C1684 +
              C52054 * C1908) *
                 C26498 +
             (C52140 * C1689 + C52053 * C1913 + C52141 * C1692 +
              C52054 * C1916) *
                 C79306) *
                C79308 * C79114 -
            ((C52141 * C1689 + C52054 * C1913 + C52140 * C103 + C52053 * C253) *
                 C79306 +
             (C52141 * C1681 + C52054 * C1905 + C52140 * C97 + C52053 * C247) *
                 C26498) *
                C79308 * C17509) *
               C12991 +
           (((C52140 * C748 + C52053 * C972 + C52141 * C3932 + C52054 * C4166) *
                 C26498 +
             (C52140 * C756 + C52053 * C980 + C52141 * C3936 + C52054 * C4170) *
                 C79306) *
                C79308 * C17509 -
            ((C52141 * C6047 + C52054 * C6231 + C52140 * C3936 +
              C52053 * C4170) *
                 C79306 +
             (C52141 * C6041 + C52054 * C6225 + C52140 * C3932 +
              C52053 * C4166) *
                 C26498) *
                C79308 * C79114) *
               C79072) *
              C79281 +
          ((((C52140 * C98 + C52053 * C248 + C52141 * C1685 + C52054 * C1909) *
                 C26498 +
             (C52140 * C104 + C52053 * C254 + C52141 * C1693 + C52054 * C1917) *
                 C79306) *
                C79308 * C17509 -
            ((C52141 * C1694 + C52054 * C1918 + C52140 * C1693 +
              C52053 * C1917) *
                 C79306 +
             (C52141 * C1686 + C52054 * C1910 + C52140 * C1685 +
              C52053 * C1909) *
                 C26498) *
                C79308 * C79114) *
               C12991 +
           (((C52140 * C3933 + C52053 * C4167 + C52141 * C10817 +
              C52054 * C11026) *
                 C26498 +
             (C52140 * C3937 + C52053 * C4171 + C52141 * C10818 +
              C52054 * C11027) *
                 C79306) *
                C79308 * C79114 -
            ((C52141 * C3937 + C52054 * C4171 + C52140 * C760 + C52053 * C984) *
                 C79306 +
             (C52141 * C3933 + C52054 * C4167 + C52140 * C752 + C52053 * C976) *
                 C26498) *
                C79308 * C17509) *
               C79072) *
              C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
                C26498 +
            (C52140 * C102 + C52053 * C252 + C52141 * C1690 + C52054 * C1914) *
                C79306) *
               C79308 * C17509 -
           ((C52141 * C1691 + C52054 * C1915 + C52140 * C1690 +
             C52053 * C1914) *
                C79306 +
            (C52141 * C1683 + C52054 * C1907 + C52140 * C1682 +
             C52053 * C1906) *
                C26498) *
               C79308 * C79114) *
              C79310 +
          (((C52140 * C3931 + C52053 * C4165 + C52141 * C6042 +
             C52054 * C6226) *
                C26498 +
            (C52140 * C3935 + C52053 * C4169 + C52141 * C6048 +
             C52054 * C6232) *
                C79306) *
               C79308 * C79114 -
           ((C52141 * C3935 + C52054 * C4169 + C52140 * C757 + C52053 * C981) *
                C79306 +
            (C52141 * C3931 + C52054 * C4165 + C52140 * C749 + C52053 * C973) *
                C26498) *
               C79308 * C17509) *
              C79303 +
          (((C52140 * C750 + C52053 * C974 + C52141 * C6044 + C52054 * C6228) *
                C26498 +
            (C52140 * C758 + C52053 * C982 + C52141 * C6050 + C52054 * C6234) *
                C79306) *
               C79308 * C17509 -
           ((C52141 * C6051 + C52054 * C6235 + C52140 * C6050 +
             C52053 * C6234) *
                C79306 +
            (C52141 * C6045 + C52054 * C6229 + C52140 * C6044 +
             C52053 * C6228) *
                C26498) *
               C79308 * C79114) *
              C79290 +
          (((C52140 * C8377 + C52053 * C8521 + C52141 * C31755 +
             C52054 * C31929) *
                C26498 +
            (C52140 * C8379 + C52053 * C8523 + C52141 * C31756 +
             C52054 * C31930) *
                C79306) *
               C79308 * C79114 -
           ((C52141 * C8379 + C52054 * C8523 + C52140 * C5572 +
             C52053 * C5680) *
                C79306 +
            (C52141 * C8377 + C52054 * C8521 + C52140 * C5568 +
             C52053 * C5676) *
                C26498) *
               C79308 * C17509) *
              C79269) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eeyx[59] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C26498 * C96 + C79306 * C102) * C166 +
              (C26498 * C167 + C79306 * C324) * C79308) *
                 C52053 +
             (C53472 + C53473) * C52054) *
                C17509 -
            ((C53474 + C53475) * C52054 + (C53473 + C53472) * C52053) *
                C79114) *
               C12991 +
           (((C55522 + C55523) * C52053 + (C57404 + C57405) * C52054) * C79114 -
            ((C55523 + C55522) * C52054 +
             (C27247 * C79308 + C27246 * C166) * C52053) *
                C17509) *
               C79072) *
              C79297 +
          ((((C53476 + C53477) * C52053 + (C53478 + C53479) * C52054) * C79114 -
            ((C53477 + C53476) * C52054 +
             ((C26498 * C168 + C79306 * C325) * C79308 +
              (C26498 * C97 + C79306 * C103) * C166) *
                 C52053) *
                C17509) *
               C12991 +
           (((C27250 * C166 + C27251 * C79308) * C52053 +
             (C55524 + C55525) * C52054) *
                C17509 -
            ((C62104 + C62105) * C52054 + (C55525 + C55524) * C52053) *
                C79114) *
               C79072) *
              C79281 +
          (((((C26498 * C98 + C79306 * C104) * C166 +
              (C26498 * C169 + C79306 * C326) * C79308) *
                 C52053 +
             (C53480 + C53481) * C52054) *
                C17509 -
            ((C53482 + C53483) * C52054 + (C53481 + C53480) * C52053) *
                C79114) *
               C12991 +
           (((C55526 + C55527) * C52053 +
             ((C26498 * C10817 + C79306 * C10818) * C166 +
              (C26498 * C10920 + C79306 * C11132) * C79308) *
                 C52054) *
                C79114 -
            ((C55527 + C55526) * C52054 +
             (C27255 * C79308 + C27254 * C166) * C52053) *
                C17509) *
               C79072) *
              C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C26498 * C96 + C79306 * C102) * C166 +
             (C26498 * C167 + C79306 * C324) * C79308) *
                C52053 +
            (C53472 + C53473) * C52054) *
               C17509 -
           ((C53474 + C53475) * C52054 + (C53473 + C53472) * C52053) * C79114) *
              C79310 +
          (((C55522 + C55523) * C52053 + (C57404 + C57405) * C52054) * C79114 -
           ((C55523 + C55522) * C52054 +
            (C27247 * C79308 + C27246 * C166) * C52053) *
               C17509) *
              C79303 +
          (((C27249 * C166 + C27248 * C79308) * C52053 +
            (C57406 + C57407) * C52054) *
               C17509 -
           ((C57408 + C57409) * C52054 + (C57407 + C57406) * C52053) * C79114) *
              C79290 +
          (((C59571 + C59572) * C52053 +
            ((C26498 * C31755 + C79306 * C31756) * C166 +
             (C26498 * C31853 + C79306 * C32029) * C79308) *
                C52054) *
               C79114 -
           ((C59572 + C59571) * C52054 +
            (C31433 * C79308 + C31432 * C166) * C52053) *
               C17509) *
              C79269) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eeyy[59] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C372 * C96 + C380 + C380 + C79308 * C373) * C79306 * C52053 +
             C53572 * C52054) *
                C17509 -
            (C53573 * C52054 + C53572 * C52053) * C79114) *
               C12991 +
           ((C55633 * C52053 + C57500 * C52054) * C79114 -
            (C55633 * C52054 +
             (C372 * C749 + C1180 + C1180 + C79308 * C1169) * C79306 * C52053) *
                C17509) *
               C79072) *
              C79297 +
          (((C53562 * C52053 + C53563 * C52054) * C79114 -
            (C53562 * C52054 + C402 * C79306 * C52053) * C17509) *
               C12991 +
           ((C1201 * C79306 * C52053 + C55628 * C52054) * C17509 -
            (C62204 * C52054 + C55628 * C52053) * C79114) *
               C79072) *
              C79281 +
          (((C403 * C79306 * C52053 + C53564 * C52054) * C17509 -
            (C53565 * C52054 + C53564 * C52053) * C79114) *
               C12991 +
           ((C55629 * C52053 +
             (C372 * C10817 + C11235 + C11235 + C79308 * C11231) * C79306 *
                 C52054) *
                C79114 -
            (C55629 * C52054 + C1203 * C79306 * C52053) * C17509) *
               C79072) *
              C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C372 * C96 + C380 + C380 + C79308 * C373) * C79306 * C52053 +
            C53572 * C52054) *
               C17509 -
           (C53573 * C52054 + C53572 * C52053) * C79114) *
              C79310 +
          ((C55633 * C52053 + C57500 * C52054) * C79114 -
           (C55633 * C52054 +
            (C372 * C749 + C1180 + C1180 + C79308 * C1169) * C79306 * C52053) *
               C17509) *
              C79303 +
          (((C372 * C750 + C1181 + C1181 + C79308 * C1170) * C79306 * C52053 +
            C57501 * C52054) *
               C17509 -
           (C57502 * C52054 + C57501 * C52053) * C79114) *
              C79290 +
          ((C59645 * C52053 +
            (C372 * C31755 + C59641 + C59641 + C79308 * C32122) * C79306 *
                C52054) *
               C79114 -
           (C59645 * C52054 +
            (C372 * C5568 + C5777 + C5777 + C79308 * C5772) * C79306 * C52053) *
               C17509) *
              C79269) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eeyz[59] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
                 C166 +
             (C52140 * C167 + C52053 * C447 + C52141 * C1792 + C52054 * C2212) *
                 C79308) *
                C79306 * C17509 -
            ((C52141 * C1793 + C52054 * C2213 + C52140 * C1792 +
              C52053 * C2212) *
                 C79308 +
             (C52141 * C1683 + C52054 * C1907 + C52140 * C1682 +
              C52053 * C1906) *
                 C166) *
                C79306 * C79114) *
               C12991 +
           (((C52140 * C3931 + C52053 * C4165 + C52141 * C6042 +
              C52054 * C6226) *
                 C166 +
             (C52140 * C4047 + C52053 * C4501 + C52141 * C6140 +
              C52054 * C6478) *
                 C79308) *
                C79306 * C79114 -
            ((C52141 * C4047 + C52054 * C4501 + C52140 * C859 +
              C52053 * C1279) *
                 C79308 +
             (C52141 * C3931 + C52054 * C4165 + C52140 * C749 + C52053 * C973) *
                 C166) *
                C79306 * C17509) *
               C79072) *
              C79297 +
          ((((C52140 * C1681 + C52053 * C1905 + C52141 * C1684 +
              C52054 * C1908) *
                 C166 +
             (C52140 * C1791 + C52053 * C2211 + C52141 * C1794 +
              C52054 * C2214) *
                 C79308) *
                C79306 * C79114 -
            ((C52141 * C1791 + C52054 * C2211 + C52140 * C168 + C52053 * C448) *
                 C79308 +
             (C52141 * C1681 + C52054 * C1905 + C52140 * C97 + C52053 * C247) *
                 C166) *
                C79306 * C17509) *
               C12991 +
           (((C52140 * C748 + C52053 * C972 + C52141 * C3932 + C52054 * C4166) *
                 C166 +
             (C52140 * C858 + C52053 * C1278 + C52141 * C4048 +
              C52054 * C4502) *
                 C79308) *
                C79306 * C17509 -
            ((C52141 * C6139 + C52054 * C6477 + C52140 * C4048 +
              C52053 * C4502) *
                 C79308 +
             (C52141 * C6041 + C52054 * C6225 + C52140 * C3932 +
              C52053 * C4166) *
                 C166) *
                C79306 * C79114) *
               C79072) *
              C79281 +
          ((((C52140 * C98 + C52053 * C248 + C52141 * C1685 + C52054 * C1909) *
                 C166 +
             (C52140 * C169 + C52053 * C449 + C52141 * C1795 + C52054 * C2215) *
                 C79308) *
                C79306 * C17509 -
            ((C52141 * C1796 + C52054 * C2216 + C52140 * C1795 +
              C52053 * C2215) *
                 C79308 +
             (C52141 * C1686 + C52054 * C1910 + C52140 * C1685 +
              C52053 * C1909) *
                 C166) *
                C79306 * C79114) *
               C12991 +
           (((C52140 * C3933 + C52053 * C4167 + C52141 * C10817 +
              C52054 * C11026) *
                 C166 +
             (C52140 * C4049 + C52053 * C4503 + C52141 * C10920 +
              C52054 * C11336) *
                 C79308) *
                C79306 * C79114 -
            ((C52141 * C4049 + C52054 * C4503 + C52140 * C862 +
              C52053 * C1282) *
                 C79308 +
             (C52141 * C3933 + C52054 * C4167 + C52140 * C752 + C52053 * C976) *
                 C166) *
                C79306 * C17509) *
               C79072) *
              C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
                C166 +
            (C52140 * C167 + C52053 * C447 + C52141 * C1792 + C52054 * C2212) *
                C79308) *
               C79306 * C17509 -
           ((C52141 * C1793 + C52054 * C2213 + C52140 * C1792 +
             C52053 * C2212) *
                C79308 +
            (C52141 * C1683 + C52054 * C1907 + C52140 * C1682 +
             C52053 * C1906) *
                C166) *
               C79306 * C79114) *
              C79310 +
          (((C52140 * C3931 + C52053 * C4165 + C52141 * C6042 +
             C52054 * C6226) *
                C166 +
            (C52140 * C4047 + C52053 * C4501 + C52141 * C6140 +
             C52054 * C6478) *
                C79308) *
               C79306 * C79114 -
           ((C52141 * C4047 + C52054 * C4501 + C52140 * C859 + C52053 * C1279) *
                C79308 +
            (C52141 * C3931 + C52054 * C4165 + C52140 * C749 + C52053 * C973) *
                C166) *
               C79306 * C17509) *
              C79303 +
          (((C52140 * C750 + C52053 * C974 + C52141 * C6044 + C52054 * C6228) *
                C166 +
            (C52140 * C860 + C52053 * C1280 + C52141 * C6142 + C52054 * C6480) *
                C79308) *
               C79306 * C17509 -
           ((C52141 * C6143 + C52054 * C6481 + C52140 * C6142 +
             C52053 * C6480) *
                C79308 +
            (C52141 * C6045 + C52054 * C6229 + C52140 * C6044 +
             C52053 * C6228) *
                C166) *
               C79306 * C79114) *
              C79290 +
          (((C52140 * C8377 + C52053 * C8521 + C52141 * C31755 +
             C52054 * C31929) *
                C166 +
            (C52140 * C8451 + C52053 * C8729 + C52141 * C31853 +
             C52054 * C32203) *
                C79308) *
               C79306 * C79114 -
           ((C52141 * C8451 + C52054 * C8729 + C52140 * C5626 +
             C52053 * C5822) *
                C79308 +
            (C52141 * C8377 + C52054 * C8521 + C52140 * C5568 +
             C52053 * C5676) *
                C166) *
               C79306 * C17509) *
              C79269) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eezx[59] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((((C26498 * C96 + C79306 * C102) * C52140 +
                       (C26498 * C246 + C79306 * C515) * C52053 +
                       C53460 * C52141 + C53734 * C52054) *
                          C79308 * C17509 -
                      (C53735 * C52054 + C53463 * C52141 + C53734 * C52053 +
                       C53460 * C52140) *
                          C79308 * C79114) *
                         C12991 +
                     ((C30028 * C52140 + C30345 * C52053 + C32043 * C52141 +
                       C32298 * C52054) *
                          C79308 * C79114 -
                      (C30345 * C52054 + C30028 * C52141 + C27516 * C52053 +
                       C27246 * C52140) *
                          C79308 * C17509) *
                         C79072) *
                        C79297 +
                    (((C53464 * C52140 + C53736 * C52053 + C53466 * C52141 +
                       C53737 * C52054) *
                          C79308 * C79114 -
                      (C53736 * C52054 + C53464 * C52141 +
                       (C26498 * C247 + C79306 * C516) * C52053 +
                       (C26498 * C97 + C79306 * C103) * C52140) *
                          C79308 * C17509) *
                         C12991 +
                     ((C27250 * C52140 + C27518 * C52053 + C30029 * C52141 +
                       C30346 * C52054) *
                          C79308 * C17509 -
                      (C37072 * C52054 + C36772 * C52141 + C30346 * C52053 +
                       C30029 * C52140) *
                          C79308 * C79114) *
                         C79072) *
                        C79281 +
                    ((((C26498 * C98 + C79306 * C104) * C52140 +
                       (C26498 * C248 + C79306 * C517) * C52053 +
                       C53468 * C52141 + C53738 * C52054) *
                          C79308 * C17509 -
                      (C53739 * C52054 + C53471 * C52141 + C53738 * C52053 +
                       C53468 * C52140) *
                          C79308 * C79114) *
                         C12991 +
                     ((C30032 * C52140 + C30347 * C52053 +
                       (C26498 * C10817 + C79306 * C10818) * C52141 +
                       (C26498 * C11026 + C79306 * C11440) * C52054) *
                          C79308 * C79114 -
                      (C30347 * C52054 + C30032 * C52141 + C27520 * C52053 +
                       C27254 * C52140) *
                          C79308 * C17509) *
                         C79072) *
                        C79253)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C26498 * C96 + C79306 * C102) * C52140 +
                      (C26498 * C246 + C79306 * C515) * C52053 +
                      C53460 * C52141 + C53734 * C52054) *
                         C79308 * C17509 -
                     (C53735 * C52054 + C53463 * C52141 + C53734 * C52053 +
                      C53460 * C52140) *
                         C79308 * C79114) *
                        C79310 +
                    ((C30028 * C52140 + C30345 * C52053 + C32043 * C52141 +
                      C32298 * C52054) *
                         C79308 * C79114 -
                     (C30345 * C52054 + C30028 * C52141 + C27516 * C52053 +
                      C27246 * C52140) *
                         C79308 * C17509) *
                        C79303 +
                    ((C27249 * C52140 + C27517 * C52053 + C32045 * C52141 +
                      C32299 * C52054) *
                         C79308 * C17509 -
                     (C32300 * C52054 + C32048 * C52141 + C32299 * C52053 +
                      C32045 * C52140) *
                         C79308 * C79114) *
                        C79290 +
                    ((C34282 * C52140 + C34492 * C52053 +
                      (C26498 * C31755 + C79306 * C31756) * C52141 +
                      (C26498 * C31929 + C79306 * C32287) * C52054) *
                         C79308 * C79114 -
                     (C34492 * C52054 + C34282 * C52141 + C31581 * C52053 +
                      C31432 * C52140) *
                         C79308 * C17509) *
                        C79269) *
                   C78981) /
                      (p * q * std::sqrt(p + q));
    d2eezy[59] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C166 * C96 + C79308 * C167) * C52140 +
             (C166 * C246 + C79308 * C563) * C52053 + C53280 * C52141 +
             C53818 * C52054) *
                C79306 * C17509 -
            (C53819 * C52054 + C53283 * C52141 + C53818 * C52053 +
             C53280 * C52140) *
                C79306 * C79114) *
               C12991 +
           ((C55322 * C52140 + C55930 * C52053 + C57244 * C52141 +
             C57731 * C52054) *
                C79306 * C79114 -
            (C55930 * C52054 + C55322 * C52141 +
             (C166 * C973 + C79308 * C1463) * C52053 +
             (C166 * C749 + C79308 * C859) * C52140) *
                C79306 * C17509) *
               C79072) *
              C79297 +
          (((C1825 * C52140 + C2416 * C52053 + C1826 * C52141 +
             C2417 * C52054) *
                C79306 * C79114 -
            (C2416 * C52054 + C1825 * C52141 + C582 * C52053 + C196 * C52140) *
                C79306 * C17509) *
               C12991 +
           ((C892 * C52140 + C1483 * C52053 + C4064 * C52141 + C4726 * C52054) *
                C79306 * C17509 -
            (C11544 * C52054 + C10928 * C52141 + C4726 * C52053 +
             C4064 * C52140) *
                C79306 * C79114) *
               C79072) *
              C79281 +
          (((C199 * C52140 + C583 * C52053 + C1828 * C52141 + C2418 * C52054) *
                C79306 * C17509 -
            (C2419 * C52054 + C1831 * C52141 + C2418 * C52053 +
             C1828 * C52140) *
                C79306 * C79114) *
               C12991 +
           ((C4067 * C52140 + C4727 * C52053 +
             (C166 * C10817 + C79308 * C10920) * C52141 +
             (C166 * C11026 + C79308 * C11539) * C52054) *
                C79306 * C79114 -
            (C4727 * C52054 + C4067 * C52141 + C1485 * C52053 + C895 * C52140) *
                C79306 * C17509) *
               C79072) *
              C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C166 * C96 + C79308 * C167) * C52140 +
            (C166 * C246 + C79308 * C563) * C52053 + C53280 * C52141 +
            C53818 * C52054) *
               C79306 * C17509 -
           (C53819 * C52054 + C53283 * C52141 + C53818 * C52053 +
            C53280 * C52140) *
               C79306 * C79114) *
              C79310 +
          ((C55322 * C52140 + C55930 * C52053 + C57244 * C52141 +
            C57731 * C52054) *
               C79306 * C79114 -
           (C55930 * C52054 + C55322 * C52141 +
            (C166 * C973 + C79308 * C1463) * C52053 +
            (C166 * C749 + C79308 * C859) * C52140) *
               C79306 * C17509) *
              C79303 +
          (((C166 * C750 + C79308 * C860) * C52140 +
            (C166 * C974 + C79308 * C1464) * C52053 + C57246 * C52141 +
            C57732 * C52054) *
               C79306 * C17509 -
           (C57733 * C52054 + C57249 * C52141 + C57732 * C52053 +
            C57246 * C52140) *
               C79306 * C79114) *
              C79290 +
          ((C59435 * C52140 + C59846 * C52053 +
            (C166 * C31755 + C79308 * C31853) * C52141 +
            (C166 * C31929 + C79308 * C32377) * C52054) *
               C79306 * C79114 -
           (C59846 * C52054 + C59435 * C52141 +
            (C166 * C5676 + C79308 * C5914) * C52053 +
            (C166 * C5568 + C79308 * C5626) * C52140) *
               C79306 * C17509) *
              C79269) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eezz[59] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C52394 * C96 + C52397 + C52397 + C52053 * C632 +
                       C52395 * C1682 + C52398 + C52398 + C52054 * C2498) *
                          C79308 * C79306 * C17509 -
                      (C52395 * C1683 + C53894 + C53894 + C52054 * C2499 +
                       C52394 * C1682 + C53895 + C53895 + C52053 * C2498) *
                          C79308 * C79306 * C79114) *
                         C12991 +
                     ((C52394 * C3931 + C56029 + C56029 + C52053 * C4827 +
                       C52395 * C6042 + C56030 + C56030 + C52054 * C6718) *
                          C79308 * C79306 * C79114 -
                      (C52395 * C3931 + C53073 + C53073 + C52054 * C4827 +
                       C52394 * C749 + C53074 + C53074 + C52053 * C1565) *
                          C79308 * C79306 * C17509) *
                         C79072) *
                        C79297 +
                    (((C52394 * C1681 + C53898 + C53898 + C52053 * C2497 +
                       C52395 * C1684 + C53899 + C53899 + C52054 * C2500) *
                          C79308 * C79306 * C79114 -
                      (C52395 * C1681 + C52399 + C52399 + C52054 * C2497 +
                       C52394 * C97 + C52400 + C52400 + C52053 * C633) *
                          C79308 * C79306 * C17509) *
                         C12991 +
                     ((C52394 * C748 + C53077 + C53077 + C52053 * C1564 +
                       C52395 * C3932 + C53078 + C53078 + C52054 * C4828) *
                          C79308 * C79306 * C17509 -
                      (C52395 * C6041 + C56031 + C56031 + C52054 * C6717 +
                       C52394 * C3932 + C56032 + C56032 + C52053 * C4828) *
                          C79308 * C79306 * C79114) *
                         C79072) *
                        C79281 +
                    (((C52394 * C98 + C52401 + C52401 + C52053 * C634 +
                       C52395 * C1685 + C52402 + C52402 + C52054 * C2501) *
                          C79308 * C79306 * C17509 -
                      (C52395 * C1686 + C53902 + C53902 + C52054 * C2502 +
                       C52394 * C1685 + C53903 + C53903 + C52053 * C2501) *
                          C79308 * C79306 * C79114) *
                         C12991 +
                     ((C52394 * C3933 + C56033 + C56033 + C52053 * C4829 +
                       C52395 * C10817 + C56034 + C56034 + C52054 * C11643) *
                          C79308 * C79306 * C79114 -
                      (C52395 * C3933 + C53081 + C53081 + C52054 * C4829 +
                       C52394 * C752 + C53082 + C53082 + C52053 * C1568) *
                          C79308 * C79306 * C17509) *
                         C79072) *
                        C79253)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((C52394 * C96 + C52397 + C52397 + C52053 * C632 +
                      C52395 * C1682 + C52398 + C52398 + C52054 * C2498) *
                         C79308 * C79306 * C17509 -
                     (C52395 * C1683 + C53894 + C53894 + C52054 * C2499 +
                      C52394 * C1682 + C53895 + C53895 + C52053 * C2498) *
                         C79308 * C79306 * C79114) *
                        C79310 +
                    ((C52394 * C3931 + C56029 + C56029 + C52053 * C4827 +
                      C52395 * C6042 + C56030 + C56030 + C52054 * C6718) *
                         C79308 * C79306 * C79114 -
                     (C52395 * C3931 + C53073 + C53073 + C52054 * C4827 +
                      C52394 * C749 + C53074 + C53074 + C52053 * C1565) *
                         C79308 * C79306 * C17509) *
                        C79303 +
                    ((C52394 * C750 + C53075 + C53075 + C52053 * C1566 +
                      C52395 * C6044 + C53076 + C53076 + C52054 * C6720) *
                         C79308 * C79306 * C17509 -
                     (C52395 * C6045 + C57810 + C57810 + C52054 * C6721 +
                      C52394 * C6044 + C57811 + C57811 + C52053 * C6720) *
                         C79308 * C79306 * C79114) *
                        C79290 +
                    ((C52394 * C8377 + C59913 + C59913 + C52053 * C8933 +
                      C52395 * C31755 + C59914 + C59914 + C52054 * C32452) *
                         C79308 * C79306 * C79114 -
                     (C52395 * C8377 + C57080 + C57080 + C52054 * C8933 +
                      C52394 * C5568 + C57081 + C57081 + C52053 * C5960) *
                         C79308 * C79306 * C17509) *
                        C79269) *
                   C78981) /
                      (p * q * std::sqrt(p + q));
    d2eexx[60] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C52053 +
            C53184 * C52054) *
               C79308 * C79027 * C6795 -
           (C29703 * C52054 + C26964 * C52053) * C79308 * C79027 * C6796 +
           (C26965 * C52053 + C31775 * C52054) * C79308 * C79027 * C6797 -
           (C34064 * C52054 + C31273 * C52053) * C79308 * C79027 * C79269) *
              C79215 +
          ((C26966 * C52053 + C29704 * C52054) * C79308 * C79027 * C6796 -
           (C53186 * C52054 +
            (C26497 * C97 + C26503 + C26503 + C79306 * C109) * C52053) *
               C79308 * C79027 * C6795 -
           (C33189 * C52054 + C26967 * C52053) * C79308 * C79027 * C6797 +
           (C32541 * C52053 +
            (C26497 * C8378 + C33186 + C33186 + C79306 * C8382) * C52054) *
               C79308 * C79027 * C79269) *
              C78992)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C52053 +
            C53184 * C52054) *
               C79308 * C79027 * C79229 -
           (C29703 * C52054 + C26964 * C52053) * C79308 * C79027 * C79072) *
              C2605 +
          ((C26966 * C52053 + C29704 * C52054) * C79308 * C79027 * C79072 -
           (C53186 * C52054 +
            (C26497 * C97 + C26503 + C26503 + C79306 * C109) * C52053) *
               C79308 * C79027 * C79229) *
              C2606 +
          (((C26497 * C98 + C26504 + C26504 + C79306 * C110) * C52053 +
            C53188 * C52054) *
               C79308 * C79027 * C79229 -
           (C29705 * C52054 + C26968 * C52053) * C79308 * C79027 * C79072) *
              C2607 +
          ((C28447 * C52053 +
            (C26497 * C3934 + C29059 + C29059 + C79306 * C3942) * C52054) *
               C79308 * C79027 * C79072 -
           ((C26497 * C1687 + C29058 + C29058 + C79306 * C1703) * C52054 +
            (C26497 * C99 + C26507 + C26507 + C79306 * C111) * C52053) *
               C79308 * C79027 * C79229) *
              C79263)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C52053 +
             C53184 * C52054) *
                C79308 * C9011 -
            (C53185 * C52054 + C53184 * C52053) * C79308 * C9012 +
            (C53185 * C52053 + C61301 * C52054) * C79308 * C79262) *
               C79229 +
           ((C29703 * C52053 + C31774 * C52054) * C79308 * C9012 -
            (C29703 * C52054 + C26964 * C52053) * C79308 * C9011 -
            (C37942 * C52054 + C31774 * C52053) * C79308 * C79262) *
               C79072) *
              C79215 +
          (((C53186 * C52053 + C53187 * C52054) * C79308 * C9012 -
            (C53186 * C52054 +
             (C26497 * C97 + C26503 + C26503 + C79306 * C109) * C52053) *
                C79308 * C9011 -
            ((C26497 * C10319 + C37336 + C37336 + C79306 * C10327) * C52054 +
             C53187 * C52053) *
                C79308 * C79262) *
               C79229 +
           ((C26966 * C52053 + C29704 * C52054) * C79308 * C9011 -
            (C36469 * C52054 + C29704 * C52053) * C79308 * C9012 +
            (C36469 * C52053 +
             (C26497 * C12366 + C37337 + C37337 + C79306 * C12370) * C52054) *
                C79308 * C79262) *
               C79072) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eexy[60] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C166 * C96 + C79308 * C167) * C26498 +
             (C166 * C102 + C79308 * C173) * C79306) *
                C52053 +
            (C53284 + C53285) * C52054) *
               C79027 * C6795 -
           ((C55325 + C55324) * C52054 +
            ((C166 * C757 + C79308 * C867) * C79306 +
             (C166 * C749 + C79308 * C859) * C26498) *
                C52053) *
               C79027 * C6796 +
           (((C166 * C750 + C79308 * C860) * C26498 +
             (C166 * C758 + C79308 * C868) * C79306) *
                C52053 +
            (C57252 + C57253) * C52054) *
               C79027 * C6797 -
           (((C166 * C8379 + C79308 * C8453) * C79306 +
             (C166 * C8377 + C79308 * C8451) * C26498) *
                C52054 +
            ((C166 * C5572 + C79308 * C5630) * C79306 +
             (C166 * C5568 + C79308 * C5626) * C26498) *
                C52053) *
               C79027 * C79269) *
              C79215 +
          (((C892 * C26498 + C891 * C79306) * C52053 +
            (C55318 + C55319) * C52054) *
               C79027 * C6796 -
           ((C53273 + C53272) * C52054 +
            (C197 * C79306 + C196 * C26498) * C52053) *
               C79027 * C6795 -
           ((C7587 * C79306 + C7588 * C26498) * C52054 +
            (C894 * C79306 + C893 * C26498) * C52053) *
               C79027 * C6797 +
           ((C6880 * C26498 + C6879 * C79306) * C52053 +
            ((C166 * C8378 + C79308 * C8452) * C26498 +
             (C166 * C8380 + C79308 * C8454) * C79306) *
                C52054) *
               C79027 * C79269) *
              C78992)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C166 * C96 + C79308 * C167) * C26498 +
             (C166 * C102 + C79308 * C173) * C79306) *
                C52053 +
            (C53284 + C53285) * C52054) *
               C79027 * C79229 -
           (((C166 * C3935 + C79308 * C4051) * C79306 +
             (C166 * C3931 + C79308 * C4047) * C26498) *
                C52054 +
            ((C166 * C757 + C79308 * C867) * C79306 +
             (C166 * C749 + C79308 * C859) * C26498) *
                C52053) *
               C79027 * C79072) *
              C2605 +
          (((C892 * C26498 + C891 * C79306) * C52053 +
            (C4064 * C26498 + C4065 * C79306) * C52054) *
               C79027 * C79072 -
           ((C53273 + C53272) * C52054 +
            (C197 * C79306 + C196 * C26498) * C52053) *
               C79027 * C79229) *
              C2606 +
          (((C199 * C26498 + C198 * C79306) * C52053 +
            (C53276 + C53277) * C52054) *
               C79027 * C79229 -
           ((C4066 * C79306 + C4067 * C26498) * C52054 +
            (C896 * C79306 + C895 * C26498) * C52053) *
               C79027 * C79072) *
              C2607 +
          (((C2688 * C26498 + C2687 * C79306) * C52053 +
            ((C166 * C3934 + C79308 * C4050) * C26498 +
             (C166 * C3938 + C79308 * C4054) * C79306) *
                C52054) *
               C79027 * C79072 -
           ((C3333 * C79306 + C3334 * C26498) * C52054 +
            (C201 * C79306 + C200 * C26498) * C52053) *
               C79027 * C79229) *
              C79263)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C166 * C96 + C79308 * C167) * C26498 +
              (C166 * C102 + C79308 * C173) * C79306) *
                 C52053 +
             (C53284 + C53285) * C52054) *
                C9011 -
            ((C53286 + C53287) * C52054 + (C53285 + C53284) * C52053) * C9012 +
            ((C53287 + C53286) * C52053 + (C61359 + C61360) * C52054) *
                C79262) *
               C79229 +
           (((C55324 + C55325) * C52053 + (C57250 + C57251) * C52054) * C9012 -
            ((C55325 + C55324) * C52054 +
             ((C166 * C757 + C79308 * C867) * C79306 +
              (C166 * C749 + C79308 * C859) * C26498) *
                 C52053) *
                C9011 -
            (((C166 * C12367 + C79308 * C12441) * C79306 +
              (C166 * C12365 + C79308 * C12439) * C26498) *
                 C52054 +
             (C57251 + C57250) * C52053) *
                C79262) *
               C79072) *
              C79215 +
          ((((C53272 + C53273) * C52053 + (C53274 + C53275) * C52054) * C9012 -
            ((C53273 + C53272) * C52054 +
             (C197 * C79306 + C196 * C26498) * C52053) *
                C9011 -
            ((C11799 * C79306 + C11800 * C26498) * C52054 +
             (C53275 + C53274) * C52053) *
                C79262) *
               C79229 +
           (((C892 * C26498 + C891 * C79306) * C52053 +
             (C55318 + C55319) * C52054) *
                C9011 -
            ((C61906 + C61907) * C52054 + (C55319 + C55318) * C52053) * C9012 +
            ((C61907 + C61906) * C52053 +
             ((C166 * C12366 + C79308 * C12440) * C26498 +
              (C166 * C12368 + C79308 * C12442) * C79306) *
                 C52054) *
                C79262) *
               C79072) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eexz[60] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
                C26498 +
            (C52140 * C102 + C52053 * C252 + C52141 * C1690 + C52054 * C1914) *
                C79306) *
               C79308 * C79027 * C6795 -
           ((C52141 * C3935 + C52054 * C4169 + C52140 * C757 + C52053 * C981) *
                C79306 +
            (C52141 * C3931 + C52054 * C4165 + C52140 * C749 + C52053 * C973) *
                C26498) *
               C79308 * C79027 * C6796 +
           ((C52140 * C750 + C52053 * C974 + C52141 * C6044 + C52054 * C6228) *
                C26498 +
            (C52140 * C758 + C52053 * C982 + C52141 * C6050 + C52054 * C6234) *
                C79306) *
               C79308 * C79027 * C6797 -
           ((C52141 * C8379 + C52054 * C8523 + C52140 * C5572 +
             C52053 * C5680) *
                C79306 +
            (C52141 * C8377 + C52054 * C8521 + C52140 * C5568 +
             C52053 * C5676) *
                C26498) *
               C79308 * C79027 * C79269) *
              C79215 +
          (((C52140 * C748 + C52053 * C972 + C52141 * C3932 + C52054 * C4166) *
                C26498 +
            (C52140 * C756 + C52053 * C980 + C52141 * C3936 + C52054 * C4170) *
                C79306) *
               C79308 * C79027 * C6796 -
           ((C52141 * C1689 + C52054 * C1913 + C52140 * C103 + C52053 * C253) *
                C79306 +
            (C52141 * C1681 + C52054 * C1905 + C52140 * C97 + C52053 * C247) *
                C26498) *
               C79308 * C79027 * C6795 -
           ((C52141 * C6049 + C52054 * C6233 + C52140 * C759 + C52053 * C983) *
                C79306 +
            (C52141 * C6043 + C52054 * C6227 + C52140 * C751 + C52053 * C975) *
                C26498) *
               C79308 * C79027 * C6797 +
           ((C52140 * C5567 + C52053 * C5675 + C52141 * C8378 +
             C52054 * C8522) *
                C26498 +
            (C52140 * C5571 + C52053 * C5679 + C52141 * C8380 +
             C52054 * C8524) *
                C79306) *
               C79308 * C79027 * C79269) *
              C78992)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
                C26498 +
            (C52140 * C102 + C52053 * C252 + C52141 * C1690 + C52054 * C1914) *
                C79306) *
               C79308 * C79027 * C79229 -
           ((C52141 * C3935 + C52054 * C4169 + C52140 * C757 + C52053 * C981) *
                C79306 +
            (C52141 * C3931 + C52054 * C4165 + C52140 * C749 + C52053 * C973) *
                C26498) *
               C79308 * C79027 * C79072) *
              C2605 +
          (((C52140 * C748 + C52053 * C972 + C52141 * C3932 + C52054 * C4166) *
                C26498 +
            (C52140 * C756 + C52053 * C980 + C52141 * C3936 + C52054 * C4170) *
                C79306) *
               C79308 * C79027 * C79072 -
           ((C52141 * C1689 + C52054 * C1913 + C52140 * C103 + C52053 * C253) *
                C79306 +
            (C52141 * C1681 + C52054 * C1905 + C52140 * C97 + C52053 * C247) *
                C26498) *
               C79308 * C79027 * C79229) *
              C2606 +
          (((C52140 * C98 + C52053 * C248 + C52141 * C1685 + C52054 * C1909) *
                C26498 +
            (C52140 * C104 + C52053 * C254 + C52141 * C1693 + C52054 * C1917) *
                C79306) *
               C79308 * C79027 * C79229 -
           ((C52141 * C3937 + C52054 * C4171 + C52140 * C760 + C52053 * C984) *
                C79306 +
            (C52141 * C3933 + C52054 * C4167 + C52140 * C752 + C52053 * C976) *
                C26498) *
               C79308 * C79027 * C79072) *
              C2607 +
          (((C52140 * C754 + C52053 * C978 + C52141 * C3934 + C52054 * C4168) *
                C26498 +
            (C52140 * C762 + C52053 * C986 + C52141 * C3938 + C52054 * C4172) *
                C79306) *
               C79308 * C79027 * C79072 -
           ((C52141 * C1695 + C52054 * C1919 + C52140 * C105 + C52053 * C255) *
                C79306 +
            (C52141 * C1687 + C52054 * C1911 + C52140 * C99 + C52053 * C249) *
                C26498) *
               C79308 * C79027 * C79229) *
              C79263)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
                 C26498 +
             (C52140 * C102 + C52053 * C252 + C52141 * C1690 + C52054 * C1914) *
                 C79306) *
                C79308 * C9011 -
            ((C52141 * C1691 + C52054 * C1915 + C52140 * C1690 +
              C52053 * C1914) *
                 C79306 +
             (C52141 * C1683 + C52054 * C1907 + C52140 * C1682 +
              C52053 * C1906) *
                 C26498) *
                C79308 * C9012 +
            ((C52140 * C1683 + C52053 * C1907 + C52141 * C10320 +
              C52054 * C10428) *
                 C26498 +
             (C52140 * C1691 + C52053 * C1915 + C52141 * C10324 +
              C52054 * C10432) *
                 C79306) *
                C79308 * C79262) *
               C79229 +
           (((C52140 * C3931 + C52053 * C4165 + C52141 * C6042 +
              C52054 * C6226) *
                 C26498 +
             (C52140 * C3935 + C52053 * C4169 + C52141 * C6048 +
              C52054 * C6232) *
                 C79306) *
                C79308 * C9012 -
            ((C52141 * C3935 + C52054 * C4169 + C52140 * C757 + C52053 * C981) *
                 C79306 +
             (C52141 * C3931 + C52054 * C4165 + C52140 * C749 + C52053 * C973) *
                 C26498) *
                C79308 * C9011 -
            ((C52141 * C12367 + C52054 * C12511 + C52140 * C6048 +
              C52053 * C6232) *
                 C79306 +
             (C52141 * C12365 + C52054 * C12509 + C52140 * C6042 +
              C52053 * C6226) *
                 C26498) *
                C79308 * C79262) *
               C79072) *
              C79215 +
          ((((C52140 * C1681 + C52053 * C1905 + C52141 * C1684 +
              C52054 * C1908) *
                 C26498 +
             (C52140 * C1689 + C52053 * C1913 + C52141 * C1692 +
              C52054 * C1916) *
                 C79306) *
                C79308 * C9012 -
            ((C52141 * C1689 + C52054 * C1913 + C52140 * C103 + C52053 * C253) *
                 C79306 +
             (C52141 * C1681 + C52054 * C1905 + C52140 * C97 + C52053 * C247) *
                 C26498) *
                C79308 * C9011 -
            ((C52141 * C10323 + C52054 * C10431 + C52140 * C1692 +
              C52053 * C1916) *
                 C79306 +
             (C52141 * C10319 + C52054 * C10427 + C52140 * C1684 +
              C52053 * C1908) *
                 C26498) *
                C79308 * C79262) *
               C79229 +
           (((C52140 * C748 + C52053 * C972 + C52141 * C3932 + C52054 * C4166) *
                 C26498 +
             (C52140 * C756 + C52053 * C980 + C52141 * C3936 + C52054 * C4170) *
                 C79306) *
                C79308 * C9011 -
            ((C52141 * C6047 + C52054 * C6231 + C52140 * C3936 +
              C52053 * C4170) *
                 C79306 +
             (C52141 * C6041 + C52054 * C6225 + C52140 * C3932 +
              C52053 * C4166) *
                 C26498) *
                C79308 * C9012 +
            ((C52140 * C6041 + C52053 * C6225 + C52141 * C12366 +
              C52054 * C12510) *
                 C26498 +
             (C52140 * C6047 + C52053 * C6231 + C52141 * C12368 +
              C52054 * C12512) *
                 C79306) *
                C79308 * C79262) *
               C79072) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eeyx[60] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C26498 * C96 + C79306 * C102) * C166 +
             (C26498 * C167 + C79306 * C324) * C79308) *
                C52053 +
            (C53472 + C53473) * C52054) *
               C79027 * C6795 -
           ((C55523 + C55522) * C52054 +
            (C27247 * C79308 + C27246 * C166) * C52053) *
               C79027 * C6796 +
           ((C27249 * C166 + C27248 * C79308) * C52053 +
            (C57406 + C57407) * C52054) *
               C79027 * C6797 -
           ((C34281 * C79308 + C34282 * C166) * C52054 +
            (C31433 * C79308 + C31432 * C166) * C52053) *
               C79027 * C79269) *
              C79215 +
          (((C27250 * C166 + C27251 * C79308) * C52053 +
            (C55524 + C55525) * C52054) *
               C79027 * C6796 -
           ((C53477 + C53476) * C52054 +
            ((C26498 * C168 + C79306 * C325) * C79308 +
             (C26498 * C97 + C79306 * C103) * C166) *
                C52053) *
               C79027 * C6795 -
           ((C33491 * C79308 + C33492 * C166) * C52054 +
            (C27253 * C79308 + C27252 * C166) * C52053) *
               C79027 * C6797 +
           ((C32748 * C166 + C32747 * C79308) * C52053 +
            ((C26498 * C8378 + C79306 * C8380) * C166 +
             (C26498 * C8452 + C79306 * C8592) * C79308) *
                C52054) *
               C79027 * C79269) *
              C78992)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C26498 * C96 + C79306 * C102) * C166 +
             (C26498 * C167 + C79306 * C324) * C79308) *
                C52053 +
            (C53472 + C53473) * C52054) *
               C79027 * C79229 -
           ((C30027 * C79308 + C30028 * C166) * C52054 +
            (C27247 * C79308 + C27246 * C166) * C52053) *
               C79027 * C79072) *
              C2605 +
          (((C27250 * C166 + C27251 * C79308) * C52053 +
            (C30029 * C166 + C30030 * C79308) * C52054) *
               C79027 * C79072 -
           ((C53477 + C53476) * C52054 +
            ((C26498 * C168 + C79306 * C325) * C79308 +
             (C26498 * C97 + C79306 * C103) * C166) *
                C52053) *
               C79027 * C79229) *
              C2606 +
          ((((C26498 * C98 + C79306 * C104) * C166 +
             (C26498 * C169 + C79306 * C326) * C79308) *
                C52053 +
            (C53480 + C53481) * C52054) *
               C79027 * C79229 -
           ((C30031 * C79308 + C30032 * C166) * C52054 +
            (C27255 * C79308 + C27254 * C166) * C52053) *
               C79027 * C79072) *
              C2607 +
          (((C28653 * C166 + C28654 * C79308) * C52053 +
            ((C26498 * C3934 + C79306 * C3938) * C166 +
             (C26498 * C4050 + C79306 * C4286) * C79308) *
                C52054) *
               C79027 * C79072 -
           (((C26498 * C1797 + C79306 * C2025) * C79308 +
             (C26498 * C1687 + C79306 * C1695) * C166) *
                C52054 +
            ((C26498 * C170 + C79306 * C327) * C79308 +
             (C26498 * C99 + C79306 * C105) * C166) *
                C52053) *
               C79027 * C79229) *
              C79263)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C26498 * C96 + C79306 * C102) * C166 +
              (C26498 * C167 + C79306 * C324) * C79308) *
                 C52053 +
             (C53472 + C53473) * C52054) *
                C9011 -
            ((C53474 + C53475) * C52054 + (C53473 + C53472) * C52053) * C9012 +
            ((C53475 + C53474) * C52053 + (C61462 + C61463) * C52054) *
                C79262) *
               C79229 +
           (((C55522 + C55523) * C52053 + (C57404 + C57405) * C52054) * C9012 -
            ((C55523 + C55522) * C52054 +
             (C27247 * C79308 + C27246 * C166) * C52053) *
                C9011 -
            ((C38159 * C79308 + C38160 * C166) * C52054 +
             (C57405 + C57404) * C52053) *
                C79262) *
               C79072) *
              C79215 +
          ((((C53476 + C53477) * C52053 + (C53478 + C53479) * C52054) * C9012 -
            ((C53477 + C53476) * C52054 +
             ((C26498 * C168 + C79306 * C325) * C79308 +
              (C26498 * C97 + C79306 * C103) * C166) *
                 C52053) *
                C9011 -
            (((C26498 * C10377 + C79306 * C10477) * C79308 +
              (C26498 * C10319 + C79306 * C10323) * C166) *
                 C52054 +
             (C53479 + C53478) * C52053) *
                C79262) *
               C79229 +
           (((C27250 * C166 + C27251 * C79308) * C52053 +
             (C55524 + C55525) * C52054) *
                C9011 -
            ((C62104 + C62105) * C52054 + (C55525 + C55524) * C52053) * C9012 +
            ((C62105 + C62104) * C52053 +
             ((C26498 * C12366 + C79306 * C12368) * C166 +
              (C26498 * C12440 + C79306 * C12580) * C79308) *
                 C52054) *
                C79262) *
               C79072) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eeyy[60] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C372 * C96 + C380 + C380 + C79308 * C373) * C79306 * C52053 +
            C53572 * C52054) *
               C79027 * C6795 -
           (C55633 * C52054 +
            (C372 * C749 + C1180 + C1180 + C79308 * C1169) * C79306 * C52053) *
               C79027 * C6796 +
           ((C372 * C750 + C1181 + C1181 + C79308 * C1170) * C79306 * C52053 +
            C57501 * C52054) *
               C79027 * C6797 -
           ((C372 * C8377 + C8662 + C8662 + C79308 * C8659) * C79306 * C52054 +
            (C372 * C5568 + C5777 + C5777 + C79308 * C5772) * C79306 * C52053) *
               C79027 * C79269) *
              C79215 +
          ((C1201 * C79306 * C52053 + C55628 * C52054) * C79027 * C6796 -
           (C53562 * C52054 + C402 * C79306 * C52053) * C79027 * C6795 -
           (C7898 * C79306 * C52054 + C1202 * C79306 * C52053) * C79027 *
               C6797 +
           (C7094 * C79306 * C52053 +
            (C372 * C8378 + C8663 + C8663 + C79308 * C8660) * C79306 * C52054) *
               C79027 * C79269) *
              C78992)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C372 * C96 + C380 + C380 + C79308 * C373) * C79306 * C52053 +
            C53572 * C52054) *
               C79027 * C79229 -
           ((C372 * C3931 + C4390 + C4390 + C79308 * C4385) * C79306 * C52054 +
            (C372 * C749 + C1180 + C1180 + C79308 * C1169) * C79306 * C52053) *
               C79027 * C79072) *
              C2605 +
          ((C1201 * C79306 * C52053 + C4402 * C79306 * C52054) * C79027 *
               C79072 -
           (C53562 * C52054 + C402 * C79306 * C52053) * C79027 * C79229) *
              C2606 +
          ((C403 * C79306 * C52053 + C53564 * C52054) * C79027 * C79229 -
           (C4403 * C79306 * C52054 + C1203 * C79306 * C52053) * C79027 *
               C79072) *
              C2607 +
          ((C2902 * C79306 * C52053 +
            (C372 * C3934 + C4397 + C4397 + C79308 * C4388) * C79306 * C52054) *
               C79027 * C79072 -
           (C3548 * C79306 * C52054 + C404 * C79306 * C52053) * C79027 *
               C79229) *
              C79263)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C372 * C96 + C380 + C380 + C79308 * C373) * C79306 * C52053 +
             C53572 * C52054) *
                C9011 -
            (C53573 * C52054 + C53572 * C52053) * C9012 +
            (C53573 * C52053 + C61520 * C52054) * C79262) *
               C79229 +
           ((C55633 * C52053 + C57500 * C52054) * C9012 -
            (C55633 * C52054 +
             (C372 * C749 + C1180 + C1180 + C79308 * C1169) * C79306 * C52053) *
                C9011 -
            ((C372 * C12365 + C12650 + C12650 + C79308 * C12647) * C79306 *
                 C52054 +
             C57500 * C52053) *
                C79262) *
               C79072) *
              C79215 +
          (((C53562 * C52053 + C53563 * C52054) * C9012 -
            (C53562 * C52054 + C402 * C79306 * C52053) * C9011 -
            (C12014 * C79306 * C52054 + C53563 * C52053) * C79262) *
               C79229 +
           ((C1201 * C79306 * C52053 + C55628 * C52054) * C9011 -
            (C62204 * C52054 + C55628 * C52053) * C9012 +
            (C62204 * C52053 +
             (C372 * C12366 + C12651 + C12651 + C79308 * C12648) * C79306 *
                 C52054) *
                C79262) *
               C79072) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[60] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
                C166 +
            (C52140 * C167 + C52053 * C447 + C52141 * C1792 + C52054 * C2212) *
                C79308) *
               C79306 * C79027 * C6795 -
           ((C52141 * C4047 + C52054 * C4501 + C52140 * C859 + C52053 * C1279) *
                C79308 +
            (C52141 * C3931 + C52054 * C4165 + C52140 * C749 + C52053 * C973) *
                C166) *
               C79306 * C79027 * C6796 +
           ((C52140 * C750 + C52053 * C974 + C52141 * C6044 + C52054 * C6228) *
                C166 +
            (C52140 * C860 + C52053 * C1280 + C52141 * C6142 + C52054 * C6480) *
                C79308) *
               C79306 * C79027 * C6797 -
           ((C52141 * C8451 + C52054 * C8729 + C52140 * C5626 +
             C52053 * C5822) *
                C79308 +
            (C52141 * C8377 + C52054 * C8521 + C52140 * C5568 +
             C52053 * C5676) *
                C166) *
               C79306 * C79027 * C79269) *
              C79215 +
          (((C52140 * C748 + C52053 * C972 + C52141 * C3932 + C52054 * C4166) *
                C166 +
            (C52140 * C858 + C52053 * C1278 + C52141 * C4048 + C52054 * C4502) *
                C79308) *
               C79306 * C79027 * C6796 -
           ((C52141 * C1791 + C52054 * C2211 + C52140 * C168 + C52053 * C448) *
                C79308 +
            (C52141 * C1681 + C52054 * C1905 + C52140 * C97 + C52053 * C247) *
                C166) *
               C79306 * C79027 * C6795 -
           ((C52141 * C6141 + C52054 * C6479 + C52140 * C861 + C52053 * C1281) *
                C79308 +
            (C52141 * C6043 + C52054 * C6227 + C52140 * C751 + C52053 * C975) *
                C166) *
               C79306 * C79027 * C6797 +
           ((C52140 * C5567 + C52053 * C5675 + C52141 * C8378 +
             C52054 * C8522) *
                C166 +
            (C52140 * C5625 + C52053 * C5821 + C52141 * C8452 +
             C52054 * C8730) *
                C79308) *
               C79306 * C79027 * C79269) *
              C78992)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
                C166 +
            (C52140 * C167 + C52053 * C447 + C52141 * C1792 + C52054 * C2212) *
                C79308) *
               C79306 * C79027 * C79229 -
           ((C52141 * C4047 + C52054 * C4501 + C52140 * C859 + C52053 * C1279) *
                C79308 +
            (C52141 * C3931 + C52054 * C4165 + C52140 * C749 + C52053 * C973) *
                C166) *
               C79306 * C79027 * C79072) *
              C2605 +
          (((C52140 * C748 + C52053 * C972 + C52141 * C3932 + C52054 * C4166) *
                C166 +
            (C52140 * C858 + C52053 * C1278 + C52141 * C4048 + C52054 * C4502) *
                C79308) *
               C79306 * C79027 * C79072 -
           ((C52141 * C1791 + C52054 * C2211 + C52140 * C168 + C52053 * C448) *
                C79308 +
            (C52141 * C1681 + C52054 * C1905 + C52140 * C97 + C52053 * C247) *
                C166) *
               C79306 * C79027 * C79229) *
              C2606 +
          (((C52140 * C98 + C52053 * C248 + C52141 * C1685 + C52054 * C1909) *
                C166 +
            (C52140 * C169 + C52053 * C449 + C52141 * C1795 + C52054 * C2215) *
                C79308) *
               C79306 * C79027 * C79229 -
           ((C52141 * C4049 + C52054 * C4503 + C52140 * C862 + C52053 * C1282) *
                C79308 +
            (C52141 * C3933 + C52054 * C4167 + C52140 * C752 + C52053 * C976) *
                C166) *
               C79306 * C79027 * C79072) *
              C2607 +
          (((C52140 * C754 + C52053 * C978 + C52141 * C3934 + C52054 * C4168) *
                C166 +
            (C52140 * C864 + C52053 * C1284 + C52141 * C4050 + C52054 * C4504) *
                C79308) *
               C79306 * C79027 * C79072 -
           ((C52141 * C1797 + C52054 * C2217 + C52140 * C170 + C52053 * C450) *
                C79308 +
            (C52141 * C1687 + C52054 * C1911 + C52140 * C99 + C52053 * C249) *
                C166) *
               C79306 * C79027 * C79229) *
              C79263)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
                 C166 +
             (C52140 * C167 + C52053 * C447 + C52141 * C1792 + C52054 * C2212) *
                 C79308) *
                C79306 * C9011 -
            ((C52141 * C1793 + C52054 * C2213 + C52140 * C1792 +
              C52053 * C2212) *
                 C79308 +
             (C52141 * C1683 + C52054 * C1907 + C52140 * C1682 +
              C52053 * C1906) *
                 C166) *
                C79306 * C9012 +
            ((C52140 * C1683 + C52053 * C1907 + C52141 * C10320 +
              C52054 * C10428) *
                 C166 +
             (C52140 * C1793 + C52053 * C2213 + C52141 * C10378 +
              C52054 * C10574) *
                 C79308) *
                C79306 * C79262) *
               C79229 +
           (((C52140 * C3931 + C52053 * C4165 + C52141 * C6042 +
              C52054 * C6226) *
                 C166 +
             (C52140 * C4047 + C52053 * C4501 + C52141 * C6140 +
              C52054 * C6478) *
                 C79308) *
                C79306 * C9012 -
            ((C52141 * C4047 + C52054 * C4501 + C52140 * C859 +
              C52053 * C1279) *
                 C79308 +
             (C52141 * C3931 + C52054 * C4165 + C52140 * C749 + C52053 * C973) *
                 C166) *
                C79306 * C9011 -
            ((C52141 * C12439 + C52054 * C12717 + C52140 * C6140 +
              C52053 * C6478) *
                 C79308 +
             (C52141 * C12365 + C52054 * C12509 + C52140 * C6042 +
              C52053 * C6226) *
                 C166) *
                C79306 * C79262) *
               C79072) *
              C79215 +
          ((((C52140 * C1681 + C52053 * C1905 + C52141 * C1684 +
              C52054 * C1908) *
                 C166 +
             (C52140 * C1791 + C52053 * C2211 + C52141 * C1794 +
              C52054 * C2214) *
                 C79308) *
                C79306 * C9012 -
            ((C52141 * C1791 + C52054 * C2211 + C52140 * C168 + C52053 * C448) *
                 C79308 +
             (C52141 * C1681 + C52054 * C1905 + C52140 * C97 + C52053 * C247) *
                 C166) *
                C79306 * C9011 -
            ((C52141 * C10377 + C52054 * C10573 + C52140 * C1794 +
              C52053 * C2214) *
                 C79308 +
             (C52141 * C10319 + C52054 * C10427 + C52140 * C1684 +
              C52053 * C1908) *
                 C166) *
                C79306 * C79262) *
               C79229 +
           (((C52140 * C748 + C52053 * C972 + C52141 * C3932 + C52054 * C4166) *
                 C166 +
             (C52140 * C858 + C52053 * C1278 + C52141 * C4048 +
              C52054 * C4502) *
                 C79308) *
                C79306 * C9011 -
            ((C52141 * C6139 + C52054 * C6477 + C52140 * C4048 +
              C52053 * C4502) *
                 C79308 +
             (C52141 * C6041 + C52054 * C6225 + C52140 * C3932 +
              C52053 * C4166) *
                 C166) *
                C79306 * C9012 +
            ((C52140 * C6041 + C52053 * C6225 + C52141 * C12366 +
              C52054 * C12510) *
                 C166 +
             (C52140 * C6139 + C52053 * C6477 + C52141 * C12440 +
              C52054 * C12718) *
                 C79308) *
                C79306 * C79262) *
               C79072) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eezx[60] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C26498 * C96 + C79306 * C102) * C52140 +
                      (C26498 * C246 + C79306 * C515) * C52053 +
                      C53460 * C52141 + C53734 * C52054) *
                         C79308 * C79027 * C6795 -
                     (C30345 * C52054 + C30028 * C52141 + C27516 * C52053 +
                      C27246 * C52140) *
                         C79308 * C79027 * C6796 +
                     (C27249 * C52140 + C27517 * C52053 + C32045 * C52141 +
                      C32299 * C52054) *
                         C79308 * C79027 * C6797 -
                     (C34492 * C52054 + C34282 * C52141 + C31581 * C52053 +
                      C31432 * C52140) *
                         C79308 * C79027 * C79269) *
                        C79215 +
                    ((C27250 * C52140 + C27518 * C52053 + C30029 * C52141 +
                      C30346 * C52054) *
                         C79308 * C79027 * C6796 -
                     (C53736 * C52054 + C53464 * C52141 +
                      (C26498 * C247 + C79306 * C516) * C52053 +
                      (C26498 * C97 + C79306 * C103) * C52140) *
                         C79308 * C79027 * C6795 -
                     (C33792 * C52054 + C33492 * C52141 + C27519 * C52053 +
                      C27252 * C52140) *
                         C79308 * C79027 * C6797 +
                     (C32748 * C52140 + C32952 * C52053 +
                      (C26498 * C8378 + C79306 * C8380) * C52141 +
                      (C26498 * C8522 + C79306 * C8798) * C52054) *
                         C79308 * C79027 * C79269) *
                        C78992)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C26498 * C96 + C79306 * C102) * C52140 +
                      (C26498 * C246 + C79306 * C515) * C52053 +
                      C53460 * C52141 + C53734 * C52054) *
                         C79308 * C79027 * C79229 -
                     (C30345 * C52054 + C30028 * C52141 + C27516 * C52053 +
                      C27246 * C52140) *
                         C79308 * C79027 * C79072) *
                        C2605 +
                    ((C27250 * C52140 + C27518 * C52053 + C30029 * C52141 +
                      C30346 * C52054) *
                         C79308 * C79027 * C79072 -
                     (C53736 * C52054 + C53464 * C52141 +
                      (C26498 * C247 + C79306 * C516) * C52053 +
                      (C26498 * C97 + C79306 * C103) * C52140) *
                         C79308 * C79027 * C79229) *
                        C2606 +
                    (((C26498 * C98 + C79306 * C104) * C52140 +
                      (C26498 * C248 + C79306 * C517) * C52053 +
                      C53468 * C52141 + C53738 * C52054) *
                         C79308 * C79027 * C79229 -
                     (C30347 * C52054 + C30032 * C52141 + C27520 * C52053 +
                      C27254 * C52140) *
                         C79308 * C79027 * C79072) *
                        C2607 +
                    ((C28653 * C52140 + C28858 * C52053 +
                      (C26498 * C3934 + C79306 * C3938) * C52141 +
                      (C26498 * C4168 + C79306 * C4616) * C52054) *
                         C79308 * C79027 * C79072 -
                     ((C26498 * C1911 + C79306 * C2319) * C52054 +
                      (C26498 * C1687 + C79306 * C1695) * C52141 +
                      (C26498 * C249 + C79306 * C518) * C52053 +
                      (C26498 * C99 + C79306 * C105) * C52140) *
                         C79308 * C79027 * C79229) *
                        C79263)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C26498 * C96 + C79306 * C102) * C52140 +
                       (C26498 * C246 + C79306 * C515) * C52053 +
                       C53460 * C52141 + C53734 * C52054) *
                          C79308 * C9011 -
                      (C53735 * C52054 + C53463 * C52141 + C53734 * C52053 +
                       C53460 * C52140) *
                          C79308 * C9012 +
                      (C53463 * C52140 + C53735 * C52053 + C61458 * C52141 +
                       C61612 * C52054) *
                          C79308 * C79262) *
                         C79229 +
                     ((C30028 * C52140 + C30345 * C52053 + C32043 * C52141 +
                       C32298 * C52054) *
                          C79308 * C9012 -
                      (C30345 * C52054 + C30028 * C52141 + C27516 * C52053 +
                       C27246 * C52140) *
                          C79308 * C9011 -
                      (C38370 * C52054 + C38160 * C52141 + C32298 * C52053 +
                       C32043 * C52140) *
                          C79308 * C79262) *
                         C79072) *
                        C79215 +
                    (((C53464 * C52140 + C53736 * C52053 + C53466 * C52141 +
                       C53737 * C52054) *
                          C79308 * C9012 -
                      (C53736 * C52054 + C53464 * C52141 +
                       (C26498 * C247 + C79306 * C516) * C52053 +
                       (C26498 * C97 + C79306 * C103) * C52140) *
                          C79308 * C9011 -
                      ((C26498 * C10427 + C79306 * C10619) * C52054 +
                       (C26498 * C10319 + C79306 * C10323) * C52141 +
                       C53737 * C52053 + C53466 * C52140) *
                          C79308 * C79262) *
                         C79229 +
                     ((C27250 * C52140 + C27518 * C52053 + C30029 * C52141 +
                       C30346 * C52054) *
                          C79308 * C9011 -
                      (C37072 * C52054 + C36772 * C52141 + C30346 * C52053 +
                       C30029 * C52140) *
                          C79308 * C9012 +
                      (C36772 * C52140 + C37072 * C52053 +
                       (C26498 * C12366 + C79306 * C12368) * C52141 +
                       (C26498 * C12510 + C79306 * C12786) * C52054) *
                          C79308 * C79262) *
                         C79072) *
                        C78992)) /
                      (p * q * std::sqrt(p + q));
    d2eezy[60] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C166 * C96 + C79308 * C167) * C52140 +
            (C166 * C246 + C79308 * C563) * C52053 + C53280 * C52141 +
            C53818 * C52054) *
               C79306 * C79027 * C6795 -
           (C55930 * C52054 + C55322 * C52141 +
            (C166 * C973 + C79308 * C1463) * C52053 +
            (C166 * C749 + C79308 * C859) * C52140) *
               C79306 * C79027 * C6796 +
           ((C166 * C750 + C79308 * C860) * C52140 +
            (C166 * C974 + C79308 * C1464) * C52053 + C57246 * C52141 +
            C57732 * C52054) *
               C79306 * C79027 * C6797 -
           ((C166 * C8521 + C79308 * C8865) * C52054 +
            (C166 * C8377 + C79308 * C8451) * C52141 +
            (C166 * C5676 + C79308 * C5914) * C52053 +
            (C166 * C5568 + C79308 * C5626) * C52140) *
               C79306 * C79027 * C79269) *
              C79215 +
          ((C892 * C52140 + C1483 * C52053 + C4064 * C52141 + C4726 * C52054) *
               C79306 * C79027 * C6796 -
           (C2416 * C52054 + C1825 * C52141 + C582 * C52053 + C196 * C52140) *
               C79306 * C79027 * C6795 -
           (C8204 * C52054 + C7588 * C52141 + C1484 * C52053 + C893 * C52140) *
               C79306 * C79027 * C6797 +
           (C6880 * C52140 + C7304 * C52053 +
            (C166 * C8378 + C79308 * C8452) * C52141 +
            (C166 * C8522 + C79308 * C8866) * C52054) *
               C79306 * C79027 * C79269) *
              C78992)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C166 * C96 + C79308 * C167) * C52140 +
            (C166 * C246 + C79308 * C563) * C52053 + C53280 * C52141 +
            C53818 * C52054) *
               C79306 * C79027 * C79229 -
           ((C166 * C4165 + C79308 * C4715) * C52054 +
            (C166 * C3931 + C79308 * C4047) * C52141 +
            (C166 * C973 + C79308 * C1463) * C52053 +
            (C166 * C749 + C79308 * C859) * C52140) *
               C79306 * C79027 * C79072) *
              C2605 +
          ((C892 * C52140 + C1483 * C52053 + C4064 * C52141 + C4726 * C52054) *
               C79306 * C79027 * C79072 -
           (C2416 * C52054 + C1825 * C52141 + C582 * C52053 + C196 * C52140) *
               C79306 * C79027 * C79229) *
              C2606 +
          ((C199 * C52140 + C583 * C52053 + C1828 * C52141 + C2418 * C52054) *
               C79306 * C79027 * C79229 -
           (C4727 * C52054 + C4067 * C52141 + C1485 * C52053 + C895 * C52140) *
               C79306 * C79027 * C79072) *
              C2607 +
          ((C2688 * C52140 + C3112 * C52053 +
            (C166 * C3934 + C79308 * C4050) * C52141 +
            (C166 * C4168 + C79308 * C4718) * C52054) *
               C79306 * C79027 * C79072 -
           (C3758 * C52054 + C3334 * C52141 + C584 * C52053 + C200 * C52140) *
               C79306 * C79027 * C79229) *
              C79263)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C166 * C96 + C79308 * C167) * C52140 +
             (C166 * C246 + C79308 * C563) * C52053 + C53280 * C52141 +
             C53818 * C52054) *
                C79306 * C9011 -
            (C53819 * C52054 + C53283 * C52141 + C53818 * C52053 +
             C53280 * C52140) *
                C79306 * C9012 +
            (C53283 * C52140 + C53819 * C52053 + C61355 * C52141 +
             C61661 * C52054) *
                C79306 * C79262) *
               C79229 +
           ((C55322 * C52140 + C55930 * C52053 + C57244 * C52141 +
             C57731 * C52054) *
                C79306 * C9012 -
            (C55930 * C52054 + C55322 * C52141 +
             (C166 * C973 + C79308 * C1463) * C52053 +
             (C166 * C749 + C79308 * C859) * C52140) *
                C79306 * C9011 -
            ((C166 * C12509 + C79308 * C12853) * C52054 +
             (C166 * C12365 + C79308 * C12439) * C52141 + C57731 * C52053 +
             C57244 * C52140) *
                C79306 * C79262) *
               C79072) *
              C79215 +
          (((C1825 * C52140 + C2416 * C52053 + C1826 * C52141 +
             C2417 * C52054) *
                C79306 * C9012 -
            (C2416 * C52054 + C1825 * C52141 + C582 * C52053 + C196 * C52140) *
                C79306 * C9011 -
            (C12224 * C52054 + C11800 * C52141 + C2417 * C52053 +
             C1826 * C52140) *
                C79306 * C79262) *
               C79229 +
           ((C892 * C52140 + C1483 * C52053 + C4064 * C52141 + C4726 * C52054) *
                C79306 * C9011 -
            (C11544 * C52054 + C10928 * C52141 + C4726 * C52053 +
             C4064 * C52140) *
                C79306 * C9012 +
            (C10928 * C52140 + C11544 * C52053 +
             (C166 * C12366 + C79308 * C12440) * C52141 +
             (C166 * C12510 + C79308 * C12854) * C52054) *
                C79306 * C79262) *
               C79072) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eezz[60] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C52394 * C96 + C52397 + C52397 + C52053 * C632 +
                      C52395 * C1682 + C52398 + C52398 + C52054 * C2498) *
                         C79308 * C79306 * C79027 * C6795 -
                     (C52395 * C3931 + C53073 + C53073 + C52054 * C4827 +
                      C52394 * C749 + C53074 + C53074 + C52053 * C1565) *
                         C79308 * C79306 * C79027 * C6796 +
                     (C52394 * C750 + C53075 + C53075 + C52053 * C1566 +
                      C52395 * C6044 + C53076 + C53076 + C52054 * C6720) *
                         C79308 * C79306 * C79027 * C6797 -
                     (C52395 * C8377 + C57080 + C57080 + C52054 * C8933 +
                      C52394 * C5568 + C57081 + C57081 + C52053 * C5960) *
                         C79308 * C79306 * C79027 * C79269) *
                        C79215 +
                    ((C52394 * C748 + C53077 + C53077 + C52053 * C1564 +
                      C52395 * C3932 + C53078 + C53078 + C52054 * C4828) *
                         C79308 * C79306 * C79027 * C6796 -
                     (C52395 * C1681 + C52399 + C52399 + C52054 * C2497 +
                      C52394 * C97 + C52400 + C52400 + C52053 * C633) *
                         C79308 * C79306 * C79027 * C6795 -
                     (C52395 * C6043 + C53079 + C53079 + C52054 * C6719 +
                      C52394 * C751 + C53080 + C53080 + C52053 * C1567) *
                         C79308 * C79306 * C79027 * C6797 +
                     (C52394 * C5567 + C58408 + C58408 + C52053 * C5959 +
                      C52395 * C8378 + C58409 + C58409 + C52054 * C8934) *
                         C79308 * C79306 * C79027 * C79269) *
                        C78992)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C52394 * C96 + C52397 + C52397 + C52053 * C632 +
                      C52395 * C1682 + C52398 + C52398 + C52054 * C2498) *
                         C79308 * C79306 * C79027 * C79229 -
                     (C52395 * C3931 + C53073 + C53073 + C52054 * C4827 +
                      C52394 * C749 + C53074 + C53074 + C52053 * C1565) *
                         C79308 * C79306 * C79027 * C79072) *
                        C2605 +
                    ((C52394 * C748 + C53077 + C53077 + C52053 * C1564 +
                      C52395 * C3932 + C53078 + C53078 + C52054 * C4828) *
                         C79308 * C79306 * C79027 * C79072 -
                     (C52395 * C1681 + C52399 + C52399 + C52054 * C2497 +
                      C52394 * C97 + C52400 + C52400 + C52053 * C633) *
                         C79308 * C79306 * C79027 * C79229) *
                        C2606 +
                    ((C52394 * C98 + C52401 + C52401 + C52053 * C634 +
                      C52395 * C1685 + C52402 + C52402 + C52054 * C2501) *
                         C79308 * C79306 * C79027 * C79229 -
                     (C52395 * C3933 + C53081 + C53081 + C52054 * C4829 +
                      C52394 * C752 + C53082 + C53082 + C52053 * C1568) *
                         C79308 * C79306 * C79027 * C79072) *
                        C2607 +
                    ((C52394 * C754 + C54500 + C54500 + C52053 * C1570 +
                      C52395 * C3934 + C54501 + C54501 + C52054 * C4830) *
                         C79308 * C79306 * C79027 * C79072 -
                     (C52395 * C1687 + C52403 + C52403 + C52054 * C2503 +
                      C52394 * C99 + C52404 + C52404 + C52053 * C635) *
                         C79308 * C79306 * C79027 * C79229) *
                        C79263)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C52394 * C96 + C52397 + C52397 + C52053 * C632 +
                       C52395 * C1682 + C52398 + C52398 + C52054 * C2498) *
                          C79308 * C79306 * C9011 -
                      (C52395 * C1683 + C53894 + C53894 + C52054 * C2499 +
                       C52394 * C1682 + C53895 + C53895 + C52053 * C2498) *
                          C79308 * C79306 * C9012 +
                      (C52394 * C1683 + C53896 + C53896 + C52053 * C2499 +
                       C52395 * C10320 + C53897 + C53897 + C52054 * C10712) *
                          C79308 * C79306 * C79262) *
                         C79229 +
                     ((C52394 * C3931 + C56029 + C56029 + C52053 * C4827 +
                       C52395 * C6042 + C56030 + C56030 + C52054 * C6718) *
                          C79308 * C79306 * C9012 -
                      (C52395 * C3931 + C53073 + C53073 + C52054 * C4827 +
                       C52394 * C749 + C53074 + C53074 + C52053 * C1565) *
                          C79308 * C79306 * C9011 -
                      (C52395 * C12365 + C57808 + C57808 + C52054 * C12921 +
                       C52394 * C6042 + C57809 + C57809 + C52053 * C6718) *
                          C79308 * C79306 * C79262) *
                         C79072) *
                        C79215 +
                    (((C52394 * C1681 + C53898 + C53898 + C52053 * C2497 +
                       C52395 * C1684 + C53899 + C53899 + C52054 * C2500) *
                          C79308 * C79306 * C9012 -
                      (C52395 * C1681 + C52399 + C52399 + C52054 * C2497 +
                       C52394 * C97 + C52400 + C52400 + C52053 * C633) *
                          C79308 * C79306 * C9011 -
                      (C52395 * C10319 + C53900 + C53900 + C52054 * C10711 +
                       C52394 * C1684 + C53901 + C53901 + C52053 * C2500) *
                          C79308 * C79306 * C79262) *
                         C79229 +
                     ((C52394 * C748 + C53077 + C53077 + C52053 * C1564 +
                       C52395 * C3932 + C53078 + C53078 + C52054 * C4828) *
                          C79308 * C79306 * C9011 -
                      (C52395 * C6041 + C56031 + C56031 + C52054 * C6717 +
                       C52394 * C3932 + C56032 + C56032 + C52053 * C4828) *
                          C79308 * C79306 * C9012 +
                      (C52394 * C6041 + C62597 + C62597 + C52053 * C6717 +
                       C52395 * C12366 + C62598 + C62598 + C52054 * C12922) *
                          C79308 * C79306 * C79262) *
                         C79072) *
                        C78992)) /
                      (p * q * std::sqrt(p + q));
    d2eexx[61] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C52053 +
            C53184 * C52054) *
               C79308 * C79230 -
           (C53185 * C52054 + C53184 * C52053) * C79308 * C79114) *
              C6795 +
          ((C29703 * C52053 + C31774 * C52054) * C79308 * C79114 -
           (C29703 * C52054 + C26964 * C52053) * C79308 * C79230) *
              C6796 +
          ((C26965 * C52053 + C31775 * C52054) * C79308 * C79230 -
           (C31776 * C52054 + C31775 * C52053) * C79308 * C79114) *
              C6797 +
          ((C34064 * C52053 +
            (C26497 * C31755 + C31767 + C31767 + C79306 * C31757) * C52054) *
               C79308 * C79114 -
           (C34064 * C52054 + C31273 * C52053) * C79308 * C79230) *
              C79269) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C52053 +
             C53184 * C52054) *
                C79308 * C79230 -
            (C53185 * C52054 + C53184 * C52053) * C79308 * C79114) *
               C79229 +
           ((C29703 * C52053 + C31774 * C52054) * C79308 * C79114 -
            (C29703 * C52054 + C26964 * C52053) * C79308 * C79230) *
               C79072) *
              C745 +
          (((C53186 * C52053 + C53187 * C52054) * C79308 * C79114 -
            (C53186 * C52054 +
             (C26497 * C97 + C26503 + C26503 + C79306 * C109) * C52053) *
                C79308 * C79230) *
               C79229 +
           ((C26966 * C52053 + C29704 * C52054) * C79308 * C79230 -
            (C36469 * C52054 + C29704 * C52053) * C79308 * C79114) *
               C79072) *
              C746 +
          ((((C26497 * C98 + C26504 + C26504 + C79306 * C110) * C52053 +
             C53188 * C52054) *
                C79308 * C79230 -
            (C53189 * C52054 + C53188 * C52053) * C79308 * C79114) *
               C79229 +
           ((C29705 * C52053 +
             (C26497 * C10817 + C27771 + C27771 + C79306 * C10819) * C52054) *
                C79308 * C79114 -
            (C29705 * C52054 + C26968 * C52053) * C79308 * C79230) *
               C79072) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C52053 +
            C53184 * C52054) *
               C79308 * C11717 -
           (C53185 * C52054 + C53184 * C52053) * C79308 * C11718 +
           (C53185 * C52053 + C61301 * C52054) * C79308 * C11719 -
           (C61302 * C52054 + C61301 * C52053) * C79308 * C79275) *
              C79229 +
          ((C29703 * C52053 + C31774 * C52054) * C79308 * C11718 -
           (C29703 * C52054 + C26964 * C52053) * C79308 * C11717 -
           (C37942 * C52054 + C31774 * C52053) * C79308 * C11719 +
           (C37942 * C52053 +
            (C26497 * C36007 + C36014 + C36014 + C79306 * C36009) * C52054) *
               C79308 * C79275) *
              C79072) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eexy[61] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C166 * C96 + C79308 * C167) * C26498 +
             (C166 * C102 + C79308 * C173) * C79306) *
                C52053 +
            (C53284 + C53285) * C52054) *
               C79230 -
           ((C53286 + C53287) * C52054 + (C53285 + C53284) * C52053) * C79114) *
              C6795 +
          (((C55324 + C55325) * C52053 + (C57250 + C57251) * C52054) * C79114 -
           ((C55325 + C55324) * C52054 +
            ((C166 * C757 + C79308 * C867) * C79306 +
             (C166 * C749 + C79308 * C859) * C26498) *
                C52053) *
               C79230) *
              C6796 +
          ((((C166 * C750 + C79308 * C860) * C26498 +
             (C166 * C758 + C79308 * C868) * C79306) *
                C52053 +
            (C57252 + C57253) * C52054) *
               C79230 -
           ((C57254 + C57255) * C52054 + (C57253 + C57252) * C52053) * C79114) *
              C6797 +
          (((C59437 + C59438) * C52053 +
            ((C166 * C31755 + C79308 * C31853) * C26498 +
             (C166 * C31756 + C79308 * C31854) * C79306) *
                C52054) *
               C79114 -
           ((C59438 + C59437) * C52054 +
            ((C166 * C5572 + C79308 * C5630) * C79306 +
             (C166 * C5568 + C79308 * C5626) * C26498) *
                C52053) *
               C79230) *
              C79269) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C166 * C96 + C79308 * C167) * C26498 +
              (C166 * C102 + C79308 * C173) * C79306) *
                 C52053 +
             (C53284 + C53285) * C52054) *
                C79230 -
            ((C53286 + C53287) * C52054 + (C53285 + C53284) * C52053) *
                C79114) *
               C79229 +
           (((C55324 + C55325) * C52053 +
             ((C166 * C6042 + C79308 * C6140) * C26498 +
              (C166 * C6048 + C79308 * C6146) * C79306) *
                 C52054) *
                C79114 -
            ((C55325 + C55324) * C52054 +
             ((C166 * C757 + C79308 * C867) * C79306 +
              (C166 * C749 + C79308 * C859) * C26498) *
                 C52053) *
                C79230) *
               C79072) *
              C745 +
          ((((C53272 + C53273) * C52053 + (C53274 + C53275) * C52054) * C79114 -
            ((C53273 + C53272) * C52054 +
             (C197 * C79306 + C196 * C26498) * C52053) *
                C79230) *
               C79229 +
           (((C892 * C26498 + C891 * C79306) * C52053 +
             (C55318 + C55319) * C52054) *
                C79230 -
            ((C10927 * C79306 + C10928 * C26498) * C52054 +
             (C55319 + C55318) * C52053) *
                C79114) *
               C79072) *
              C746 +
          ((((C199 * C26498 + C198 * C79306) * C52053 +
             (C53276 + C53277) * C52054) *
                C79230 -
            ((C53278 + C53279) * C52054 + (C53277 + C53276) * C52053) *
                C79114) *
               C79229 +
           (((C55320 + C55321) * C52053 +
             ((C166 * C10817 + C79308 * C10920) * C26498 +
              (C166 * C10818 + C79308 * C10921) * C79306) *
                 C52054) *
                C79114 -
            ((C55321 + C55320) * C52054 +
             (C896 * C79306 + C895 * C26498) * C52053) *
                C79230) *
               C79072) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C166 * C96 + C79308 * C167) * C26498 +
             (C166 * C102 + C79308 * C173) * C79306) *
                C52053 +
            (C53284 + C53285) * C52054) *
               C11717 -
           ((C53286 + C53287) * C52054 + (C53285 + C53284) * C52053) * C11718 +
           ((C53287 + C53286) * C52053 + (C61359 + C61360) * C52054) * C11719 -
           ((C61361 + C61362) * C52054 + (C61360 + C61359) * C52053) * C79275) *
              C79229 +
          (((C55324 + C55325) * C52053 + (C57250 + C57251) * C52054) * C11718 -
           ((C55325 + C55324) * C52054 +
            ((C166 * C757 + C79308 * C867) * C79306 +
             (C166 * C749 + C79308 * C859) * C26498) *
                C52053) *
               C11717 -
           ((C63353 + C63354) * C52054 + (C57251 + C57250) * C52053) * C11719 +
           ((C63354 + C63353) * C52053 +
            ((C166 * C36007 + C79308 * C36056) * C26498 +
             (C166 * C36008 + C79308 * C36057) * C79306) *
                C52054) *
               C79275) *
              C79072) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eexz[61] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
                C26498 +
            (C52140 * C102 + C52053 * C252 + C52141 * C1690 + C52054 * C1914) *
                C79306) *
               C79308 * C79230 -
           ((C52141 * C1691 + C52054 * C1915 + C52140 * C1690 +
             C52053 * C1914) *
                C79306 +
            (C52141 * C1683 + C52054 * C1907 + C52140 * C1682 +
             C52053 * C1906) *
                C26498) *
               C79308 * C79114) *
              C6795 +
          (((C52140 * C3931 + C52053 * C4165 + C52141 * C6042 +
             C52054 * C6226) *
                C26498 +
            (C52140 * C3935 + C52053 * C4169 + C52141 * C6048 +
             C52054 * C6232) *
                C79306) *
               C79308 * C79114 -
           ((C52141 * C3935 + C52054 * C4169 + C52140 * C757 + C52053 * C981) *
                C79306 +
            (C52141 * C3931 + C52054 * C4165 + C52140 * C749 + C52053 * C973) *
                C26498) *
               C79308 * C79230) *
              C6796 +
          (((C52140 * C750 + C52053 * C974 + C52141 * C6044 + C52054 * C6228) *
                C26498 +
            (C52140 * C758 + C52053 * C982 + C52141 * C6050 + C52054 * C6234) *
                C79306) *
               C79308 * C79230 -
           ((C52141 * C6051 + C52054 * C6235 + C52140 * C6050 +
             C52053 * C6234) *
                C79306 +
            (C52141 * C6045 + C52054 * C6229 + C52140 * C6044 +
             C52053 * C6228) *
                C26498) *
               C79308 * C79114) *
              C6797 +
          (((C52140 * C8377 + C52053 * C8521 + C52141 * C31755 +
             C52054 * C31929) *
                C26498 +
            (C52140 * C8379 + C52053 * C8523 + C52141 * C31756 +
             C52054 * C31930) *
                C79306) *
               C79308 * C79114 -
           ((C52141 * C8379 + C52054 * C8523 + C52140 * C5572 +
             C52053 * C5680) *
                C79306 +
            (C52141 * C8377 + C52054 * C8521 + C52140 * C5568 +
             C52053 * C5676) *
                C26498) *
               C79308 * C79230) *
              C79269) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
                 C26498 +
             (C52140 * C102 + C52053 * C252 + C52141 * C1690 + C52054 * C1914) *
                 C79306) *
                C79308 * C79230 -
            ((C52141 * C1691 + C52054 * C1915 + C52140 * C1690 +
              C52053 * C1914) *
                 C79306 +
             (C52141 * C1683 + C52054 * C1907 + C52140 * C1682 +
              C52053 * C1906) *
                 C26498) *
                C79308 * C79114) *
               C79229 +
           (((C52140 * C3931 + C52053 * C4165 + C52141 * C6042 +
              C52054 * C6226) *
                 C26498 +
             (C52140 * C3935 + C52053 * C4169 + C52141 * C6048 +
              C52054 * C6232) *
                 C79306) *
                C79308 * C79114 -
            ((C52141 * C3935 + C52054 * C4169 + C52140 * C757 + C52053 * C981) *
                 C79306 +
             (C52141 * C3931 + C52054 * C4165 + C52140 * C749 + C52053 * C973) *
                 C26498) *
                C79308 * C79230) *
               C79072) *
              C745 +
          ((((C52140 * C1681 + C52053 * C1905 + C52141 * C1684 +
              C52054 * C1908) *
                 C26498 +
             (C52140 * C1689 + C52053 * C1913 + C52141 * C1692 +
              C52054 * C1916) *
                 C79306) *
                C79308 * C79114 -
            ((C52141 * C1689 + C52054 * C1913 + C52140 * C103 + C52053 * C253) *
                 C79306 +
             (C52141 * C1681 + C52054 * C1905 + C52140 * C97 + C52053 * C247) *
                 C26498) *
                C79308 * C79230) *
               C79229 +
           (((C52140 * C748 + C52053 * C972 + C52141 * C3932 + C52054 * C4166) *
                 C26498 +
             (C52140 * C756 + C52053 * C980 + C52141 * C3936 + C52054 * C4170) *
                 C79306) *
                C79308 * C79230 -
            ((C52141 * C6047 + C52054 * C6231 + C52140 * C3936 +
              C52053 * C4170) *
                 C79306 +
             (C52141 * C6041 + C52054 * C6225 + C52140 * C3932 +
              C52053 * C4166) *
                 C26498) *
                C79308 * C79114) *
               C79072) *
              C746 +
          ((((C52140 * C98 + C52053 * C248 + C52141 * C1685 + C52054 * C1909) *
                 C26498 +
             (C52140 * C104 + C52053 * C254 + C52141 * C1693 + C52054 * C1917) *
                 C79306) *
                C79308 * C79230 -
            ((C52141 * C1694 + C52054 * C1918 + C52140 * C1693 +
              C52053 * C1917) *
                 C79306 +
             (C52141 * C1686 + C52054 * C1910 + C52140 * C1685 +
              C52053 * C1909) *
                 C26498) *
                C79308 * C79114) *
               C79229 +
           (((C52140 * C3933 + C52053 * C4167 + C52141 * C10817 +
              C52054 * C11026) *
                 C26498 +
             (C52140 * C3937 + C52053 * C4171 + C52141 * C10818 +
              C52054 * C11027) *
                 C79306) *
                C79308 * C79114 -
            ((C52141 * C3937 + C52054 * C4171 + C52140 * C760 + C52053 * C984) *
                 C79306 +
             (C52141 * C3933 + C52054 * C4167 + C52140 * C752 + C52053 * C976) *
                 C26498) *
                C79308 * C79230) *
               C79072) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
                C26498 +
            (C52140 * C102 + C52053 * C252 + C52141 * C1690 + C52054 * C1914) *
                C79306) *
               C79308 * C11717 -
           ((C52141 * C1691 + C52054 * C1915 + C52140 * C1690 +
             C52053 * C1914) *
                C79306 +
            (C52141 * C1683 + C52054 * C1907 + C52140 * C1682 +
             C52053 * C1906) *
                C26498) *
               C79308 * C11718 +
           ((C52140 * C1683 + C52053 * C1907 + C52141 * C10320 +
             C52054 * C10428) *
                C26498 +
            (C52140 * C1691 + C52053 * C1915 + C52141 * C10324 +
             C52054 * C10432) *
                C79306) *
               C79308 * C11719 -
           ((C52141 * C10325 + C52054 * C10433 + C52140 * C10324 +
             C52053 * C10432) *
                C79306 +
            (C52141 * C10321 + C52054 * C10429 + C52140 * C10320 +
             C52053 * C10428) *
                C26498) *
               C79308 * C79275) *
              C79229 +
          (((C52140 * C3931 + C52053 * C4165 + C52141 * C6042 +
             C52054 * C6226) *
                C26498 +
            (C52140 * C3935 + C52053 * C4169 + C52141 * C6048 +
             C52054 * C6232) *
                C79306) *
               C79308 * C11718 -
           ((C52141 * C3935 + C52054 * C4169 + C52140 * C757 + C52053 * C981) *
                C79306 +
            (C52141 * C3931 + C52054 * C4165 + C52140 * C749 + C52053 * C973) *
                C26498) *
               C79308 * C11717 -
           ((C52141 * C12367 + C52054 * C12511 + C52140 * C6048 +
             C52053 * C6232) *
                C79306 +
            (C52141 * C12365 + C52054 * C12509 + C52140 * C6042 +
             C52053 * C6226) *
                C26498) *
               C79308 * C11719 +
           ((C52140 * C12365 + C52053 * C12509 + C52141 * C36007 +
             C52054 * C36100) *
                C26498 +
            (C52140 * C12367 + C52053 * C12511 + C52141 * C36008 +
             C52054 * C36101) *
                C79306) *
               C79308 * C79275) *
              C79072) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eeyx[61] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C26498 * C96 + C79306 * C102) * C166 +
             (C26498 * C167 + C79306 * C324) * C79308) *
                C52053 +
            (C53472 + C53473) * C52054) *
               C79230 -
           ((C53474 + C53475) * C52054 + (C53473 + C53472) * C52053) * C79114) *
              C6795 +
          (((C55522 + C55523) * C52053 + (C57404 + C57405) * C52054) * C79114 -
           ((C55523 + C55522) * C52054 +
            (C27247 * C79308 + C27246 * C166) * C52053) *
               C79230) *
              C6796 +
          (((C27249 * C166 + C27248 * C79308) * C52053 +
            (C57406 + C57407) * C52054) *
               C79230 -
           ((C57408 + C57409) * C52054 + (C57407 + C57406) * C52053) * C79114) *
              C6797 +
          (((C59571 + C59572) * C52053 +
            ((C26498 * C31755 + C79306 * C31756) * C166 +
             (C26498 * C31853 + C79306 * C32029) * C79308) *
                C52054) *
               C79114 -
           ((C59572 + C59571) * C52054 +
            (C31433 * C79308 + C31432 * C166) * C52053) *
               C79230) *
              C79269) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C26498 * C96 + C79306 * C102) * C166 +
              (C26498 * C167 + C79306 * C324) * C79308) *
                 C52053 +
             (C53472 + C53473) * C52054) *
                C79230 -
            ((C53474 + C53475) * C52054 + (C53473 + C53472) * C52053) *
                C79114) *
               C79229 +
           (((C55522 + C55523) * C52053 +
             (C32043 * C166 + C32044 * C79308) * C52054) *
                C79114 -
            ((C55523 + C55522) * C52054 +
             (C27247 * C79308 + C27246 * C166) * C52053) *
                C79230) *
               C79072) *
              C745 +
          ((((C53476 + C53477) * C52053 + (C53478 + C53479) * C52054) * C79114 -
            ((C53477 + C53476) * C52054 +
             ((C26498 * C168 + C79306 * C325) * C79308 +
              (C26498 * C97 + C79306 * C103) * C166) *
                 C52053) *
                C79230) *
               C79229 +
           (((C27250 * C166 + C27251 * C79308) * C52053 +
             (C55524 + C55525) * C52054) *
                C79230 -
            ((C36771 * C79308 + C36772 * C166) * C52054 +
             (C55525 + C55524) * C52053) *
                C79114) *
               C79072) *
              C746 +
          (((((C26498 * C98 + C79306 * C104) * C166 +
              (C26498 * C169 + C79306 * C326) * C79308) *
                 C52053 +
             (C53480 + C53481) * C52054) *
                C79230 -
            ((C53482 + C53483) * C52054 + (C53481 + C53480) * C52053) *
                C79114) *
               C79229 +
           (((C55526 + C55527) * C52053 +
             ((C26498 * C10817 + C79306 * C10818) * C166 +
              (C26498 * C10920 + C79306 * C11132) * C79308) *
                 C52054) *
                C79114 -
            ((C55527 + C55526) * C52054 +
             (C27255 * C79308 + C27254 * C166) * C52053) *
                C79230) *
               C79072) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C26498 * C96 + C79306 * C102) * C166 +
             (C26498 * C167 + C79306 * C324) * C79308) *
                C52053 +
            (C53472 + C53473) * C52054) *
               C11717 -
           ((C53474 + C53475) * C52054 + (C53473 + C53472) * C52053) * C11718 +
           ((C53475 + C53474) * C52053 + (C61462 + C61463) * C52054) * C11719 -
           ((C61464 + C61465) * C52054 + (C61463 + C61462) * C52053) * C79275) *
              C79229 +
          (((C55522 + C55523) * C52053 + (C57404 + C57405) * C52054) * C11718 -
           ((C55523 + C55522) * C52054 +
            (C27247 * C79308 + C27246 * C166) * C52053) *
               C11717 -
           ((C63487 + C63488) * C52054 + (C57405 + C57404) * C52053) * C11719 +
           ((C63488 + C63487) * C52053 +
            ((C26498 * C36007 + C79306 * C36008) * C166 +
             (C26498 * C36056 + C79306 * C36144) * C79308) *
                C52054) *
               C79275) *
              C79072) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eeyy[61] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C372 * C96 + C380 + C380 + C79308 * C373) * C79306 * C52053 +
            C53572 * C52054) *
               C79230 -
           (C53573 * C52054 + C53572 * C52053) * C79114) *
              C6795 +
          ((C55633 * C52053 + C57500 * C52054) * C79114 -
           (C55633 * C52054 +
            (C372 * C749 + C1180 + C1180 + C79308 * C1169) * C79306 * C52053) *
               C79230) *
              C6796 +
          (((C372 * C750 + C1181 + C1181 + C79308 * C1170) * C79306 * C52053 +
            C57501 * C52054) *
               C79230 -
           (C57502 * C52054 + C57501 * C52053) * C79114) *
              C6797 +
          ((C59645 * C52053 +
            (C372 * C31755 + C59641 + C59641 + C79308 * C32122) * C79306 *
                C52054) *
               C79114 -
           (C59645 * C52054 +
            (C372 * C5568 + C5777 + C5777 + C79308 * C5772) * C79306 * C52053) *
               C79230) *
              C79269) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C372 * C96 + C380 + C380 + C79308 * C373) * C79306 * C52053 +
             C53572 * C52054) *
                C79230 -
            (C53573 * C52054 + C53572 * C52053) * C79114) *
               C79229 +
           ((C55633 * C52053 + (C372 * C6042 + C6399 + C6399 + C79308 * C6392) *
                                   C79306 * C52054) *
                C79114 -
            (C55633 * C52054 +
             (C372 * C749 + C1180 + C1180 + C79308 * C1169) * C79306 * C52053) *
                C79230) *
               C79072) *
              C745 +
          (((C53562 * C52053 + C53563 * C52054) * C79114 -
            (C53562 * C52054 + C402 * C79306 * C52053) * C79230) *
               C79229 +
           ((C1201 * C79306 * C52053 + C55628 * C52054) * C79230 -
            (C11238 * C79306 * C52054 + C55628 * C52053) * C79114) *
               C79072) *
              C746 +
          (((C403 * C79306 * C52053 + C53564 * C52054) * C79230 -
            (C53565 * C52054 + C53564 * C52053) * C79114) *
               C79229 +
           ((C55629 * C52053 +
             (C372 * C10817 + C11235 + C11235 + C79308 * C11231) * C79306 *
                 C52054) *
                C79114 -
            (C55629 * C52054 + C1203 * C79306 * C52053) * C79230) *
               C79072) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C372 * C96 + C380 + C380 + C79308 * C373) * C79306 * C52053 +
            C53572 * C52054) *
               C11717 -
           (C53573 * C52054 + C53572 * C52053) * C11718 +
           (C53573 * C52053 + C61520 * C52054) * C11719 -
           (C61521 * C52054 + C61520 * C52053) * C79275) *
              C79229 +
          ((C55633 * C52053 + C57500 * C52054) * C11718 -
           (C55633 * C52054 +
            (C372 * C749 + C1180 + C1180 + C79308 * C1169) * C79306 * C52053) *
               C11717 -
           (C63561 * C52054 + C57500 * C52053) * C11719 +
           (C63561 * C52053 +
            (C372 * C36007 + C63557 + C63557 + C79308 * C36187) * C79306 *
                C52054) *
               C79275) *
              C79072) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eeyz[61] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
                C166 +
            (C52140 * C167 + C52053 * C447 + C52141 * C1792 + C52054 * C2212) *
                C79308) *
               C79306 * C79230 -
           ((C52141 * C1793 + C52054 * C2213 + C52140 * C1792 +
             C52053 * C2212) *
                C79308 +
            (C52141 * C1683 + C52054 * C1907 + C52140 * C1682 +
             C52053 * C1906) *
                C166) *
               C79306 * C79114) *
              C6795 +
          (((C52140 * C3931 + C52053 * C4165 + C52141 * C6042 +
             C52054 * C6226) *
                C166 +
            (C52140 * C4047 + C52053 * C4501 + C52141 * C6140 +
             C52054 * C6478) *
                C79308) *
               C79306 * C79114 -
           ((C52141 * C4047 + C52054 * C4501 + C52140 * C859 + C52053 * C1279) *
                C79308 +
            (C52141 * C3931 + C52054 * C4165 + C52140 * C749 + C52053 * C973) *
                C166) *
               C79306 * C79230) *
              C6796 +
          (((C52140 * C750 + C52053 * C974 + C52141 * C6044 + C52054 * C6228) *
                C166 +
            (C52140 * C860 + C52053 * C1280 + C52141 * C6142 + C52054 * C6480) *
                C79308) *
               C79306 * C79230 -
           ((C52141 * C6143 + C52054 * C6481 + C52140 * C6142 +
             C52053 * C6480) *
                C79308 +
            (C52141 * C6045 + C52054 * C6229 + C52140 * C6044 +
             C52053 * C6228) *
                C166) *
               C79306 * C79114) *
              C6797 +
          (((C52140 * C8377 + C52053 * C8521 + C52141 * C31755 +
             C52054 * C31929) *
                C166 +
            (C52140 * C8451 + C52053 * C8729 + C52141 * C31853 +
             C52054 * C32203) *
                C79308) *
               C79306 * C79114 -
           ((C52141 * C8451 + C52054 * C8729 + C52140 * C5626 +
             C52053 * C5822) *
                C79308 +
            (C52141 * C8377 + C52054 * C8521 + C52140 * C5568 +
             C52053 * C5676) *
                C166) *
               C79306 * C79230) *
              C79269) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
                 C166 +
             (C52140 * C167 + C52053 * C447 + C52141 * C1792 + C52054 * C2212) *
                 C79308) *
                C79306 * C79230 -
            ((C52141 * C1793 + C52054 * C2213 + C52140 * C1792 +
              C52053 * C2212) *
                 C79308 +
             (C52141 * C1683 + C52054 * C1907 + C52140 * C1682 +
              C52053 * C1906) *
                 C166) *
                C79306 * C79114) *
               C79229 +
           (((C52140 * C3931 + C52053 * C4165 + C52141 * C6042 +
              C52054 * C6226) *
                 C166 +
             (C52140 * C4047 + C52053 * C4501 + C52141 * C6140 +
              C52054 * C6478) *
                 C79308) *
                C79306 * C79114 -
            ((C52141 * C4047 + C52054 * C4501 + C52140 * C859 +
              C52053 * C1279) *
                 C79308 +
             (C52141 * C3931 + C52054 * C4165 + C52140 * C749 + C52053 * C973) *
                 C166) *
                C79306 * C79230) *
               C79072) *
              C745 +
          ((((C52140 * C1681 + C52053 * C1905 + C52141 * C1684 +
              C52054 * C1908) *
                 C166 +
             (C52140 * C1791 + C52053 * C2211 + C52141 * C1794 +
              C52054 * C2214) *
                 C79308) *
                C79306 * C79114 -
            ((C52141 * C1791 + C52054 * C2211 + C52140 * C168 + C52053 * C448) *
                 C79308 +
             (C52141 * C1681 + C52054 * C1905 + C52140 * C97 + C52053 * C247) *
                 C166) *
                C79306 * C79230) *
               C79229 +
           (((C52140 * C748 + C52053 * C972 + C52141 * C3932 + C52054 * C4166) *
                 C166 +
             (C52140 * C858 + C52053 * C1278 + C52141 * C4048 +
              C52054 * C4502) *
                 C79308) *
                C79306 * C79230 -
            ((C52141 * C6139 + C52054 * C6477 + C52140 * C4048 +
              C52053 * C4502) *
                 C79308 +
             (C52141 * C6041 + C52054 * C6225 + C52140 * C3932 +
              C52053 * C4166) *
                 C166) *
                C79306 * C79114) *
               C79072) *
              C746 +
          ((((C52140 * C98 + C52053 * C248 + C52141 * C1685 + C52054 * C1909) *
                 C166 +
             (C52140 * C169 + C52053 * C449 + C52141 * C1795 + C52054 * C2215) *
                 C79308) *
                C79306 * C79230 -
            ((C52141 * C1796 + C52054 * C2216 + C52140 * C1795 +
              C52053 * C2215) *
                 C79308 +
             (C52141 * C1686 + C52054 * C1910 + C52140 * C1685 +
              C52053 * C1909) *
                 C166) *
                C79306 * C79114) *
               C79229 +
           (((C52140 * C3933 + C52053 * C4167 + C52141 * C10817 +
              C52054 * C11026) *
                 C166 +
             (C52140 * C4049 + C52053 * C4503 + C52141 * C10920 +
              C52054 * C11336) *
                 C79308) *
                C79306 * C79114 -
            ((C52141 * C4049 + C52054 * C4503 + C52140 * C862 +
              C52053 * C1282) *
                 C79308 +
             (C52141 * C3933 + C52054 * C4167 + C52140 * C752 + C52053 * C976) *
                 C166) *
                C79306 * C79230) *
               C79072) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
                C166 +
            (C52140 * C167 + C52053 * C447 + C52141 * C1792 + C52054 * C2212) *
                C79308) *
               C79306 * C11717 -
           ((C52141 * C1793 + C52054 * C2213 + C52140 * C1792 +
             C52053 * C2212) *
                C79308 +
            (C52141 * C1683 + C52054 * C1907 + C52140 * C1682 +
             C52053 * C1906) *
                C166) *
               C79306 * C11718 +
           ((C52140 * C1683 + C52053 * C1907 + C52141 * C10320 +
             C52054 * C10428) *
                C166 +
            (C52140 * C1793 + C52053 * C2213 + C52141 * C10378 +
             C52054 * C10574) *
                C79308) *
               C79306 * C11719 -
           ((C52141 * C10379 + C52054 * C10575 + C52140 * C10378 +
             C52053 * C10574) *
                C79308 +
            (C52141 * C10321 + C52054 * C10429 + C52140 * C10320 +
             C52053 * C10428) *
                C166) *
               C79306 * C79275) *
              C79229 +
          (((C52140 * C3931 + C52053 * C4165 + C52141 * C6042 +
             C52054 * C6226) *
                C166 +
            (C52140 * C4047 + C52053 * C4501 + C52141 * C6140 +
             C52054 * C6478) *
                C79308) *
               C79306 * C11718 -
           ((C52141 * C4047 + C52054 * C4501 + C52140 * C859 + C52053 * C1279) *
                C79308 +
            (C52141 * C3931 + C52054 * C4165 + C52140 * C749 + C52053 * C973) *
                C166) *
               C79306 * C11717 -
           ((C52141 * C12439 + C52054 * C12717 + C52140 * C6140 +
             C52053 * C6478) *
                C79308 +
            (C52141 * C12365 + C52054 * C12509 + C52140 * C6042 +
             C52053 * C6226) *
                C166) *
               C79306 * C11719 +
           ((C52140 * C12365 + C52053 * C12509 + C52141 * C36007 +
             C52054 * C36100) *
                C166 +
            (C52140 * C12439 + C52053 * C12717 + C52141 * C36056 +
             C52054 * C36234) *
                C79308) *
               C79306 * C79275) *
              C79072) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eezx[61] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C26498 * C96 + C79306 * C102) * C52140 +
                      (C26498 * C246 + C79306 * C515) * C52053 +
                      C53460 * C52141 + C53734 * C52054) *
                         C79308 * C79230 -
                     (C53735 * C52054 + C53463 * C52141 + C53734 * C52053 +
                      C53460 * C52140) *
                         C79308 * C79114) *
                        C6795 +
                    ((C30028 * C52140 + C30345 * C52053 + C32043 * C52141 +
                      C32298 * C52054) *
                         C79308 * C79114 -
                     (C30345 * C52054 + C30028 * C52141 + C27516 * C52053 +
                      C27246 * C52140) *
                         C79308 * C79230) *
                        C6796 +
                    ((C27249 * C52140 + C27517 * C52053 + C32045 * C52141 +
                      C32299 * C52054) *
                         C79308 * C79230 -
                     (C32300 * C52054 + C32048 * C52141 + C32299 * C52053 +
                      C32045 * C52140) *
                         C79308 * C79114) *
                        C6797 +
                    ((C34282 * C52140 + C34492 * C52053 +
                      (C26498 * C31755 + C79306 * C31756) * C52141 +
                      (C26498 * C31929 + C79306 * C32287) * C52054) *
                         C79308 * C79114 -
                     (C34492 * C52054 + C34282 * C52141 + C31581 * C52053 +
                      C31432 * C52140) *
                         C79308 * C79230) *
                        C79269) *
                   C78981) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((((C26498 * C96 + C79306 * C102) * C52140 +
                       (C26498 * C246 + C79306 * C515) * C52053 +
                       C53460 * C52141 + C53734 * C52054) *
                          C79308 * C79230 -
                      (C53735 * C52054 + C53463 * C52141 + C53734 * C52053 +
                       C53460 * C52140) *
                          C79308 * C79114) *
                         C79229 +
                     ((C30028 * C52140 + C30345 * C52053 + C32043 * C52141 +
                       C32298 * C52054) *
                          C79308 * C79114 -
                      (C30345 * C52054 + C30028 * C52141 + C27516 * C52053 +
                       C27246 * C52140) *
                          C79308 * C79230) *
                         C79072) *
                        C745 +
                    (((C53464 * C52140 + C53736 * C52053 + C53466 * C52141 +
                       C53737 * C52054) *
                          C79308 * C79114 -
                      (C53736 * C52054 + C53464 * C52141 +
                       (C26498 * C247 + C79306 * C516) * C52053 +
                       (C26498 * C97 + C79306 * C103) * C52140) *
                          C79308 * C79230) *
                         C79229 +
                     ((C27250 * C52140 + C27518 * C52053 + C30029 * C52141 +
                       C30346 * C52054) *
                          C79308 * C79230 -
                      (C37072 * C52054 + C36772 * C52141 + C30346 * C52053 +
                       C30029 * C52140) *
                          C79308 * C79114) *
                         C79072) *
                        C746 +
                    ((((C26498 * C98 + C79306 * C104) * C52140 +
                       (C26498 * C248 + C79306 * C517) * C52053 +
                       C53468 * C52141 + C53738 * C52054) *
                          C79308 * C79230 -
                      (C53739 * C52054 + C53471 * C52141 + C53738 * C52053 +
                       C53468 * C52140) *
                          C79308 * C79114) *
                         C79229 +
                     ((C30032 * C52140 + C30347 * C52053 +
                       (C26498 * C10817 + C79306 * C10818) * C52141 +
                       (C26498 * C11026 + C79306 * C11440) * C52054) *
                          C79308 * C79114 -
                      (C30347 * C52054 + C30032 * C52141 + C27520 * C52053 +
                       C27254 * C52140) *
                          C79308 * C79230) *
                         C79072) *
                        C79253)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C26498 * C96 + C79306 * C102) * C52140 +
                      (C26498 * C246 + C79306 * C515) * C52053 +
                      C53460 * C52141 + C53734 * C52054) *
                         C79308 * C11717 -
                     (C53735 * C52054 + C53463 * C52141 + C53734 * C52053 +
                      C53460 * C52140) *
                         C79308 * C11718 +
                     (C53463 * C52140 + C53735 * C52053 + C61458 * C52141 +
                      C61612 * C52054) *
                         C79308 * C11719 -
                     (C61613 * C52054 + C61461 * C52141 + C61612 * C52053 +
                      C61458 * C52140) *
                         C79308 * C79275) *
                        C79229 +
                    ((C30028 * C52140 + C30345 * C52053 + C32043 * C52141 +
                      C32298 * C52054) *
                         C79308 * C11718 -
                     (C30345 * C52054 + C30028 * C52141 + C27516 * C52053 +
                      C27246 * C52140) *
                         C79308 * C11717 -
                     (C38370 * C52054 + C38160 * C52141 + C32298 * C52053 +
                      C32043 * C52140) *
                         C79308 * C11719 +
                     (C38160 * C52140 + C38370 * C52053 +
                      (C26498 * C36007 + C79306 * C36008) * C52141 +
                      (C26498 * C36100 + C79306 * C36277) * C52054) *
                         C79308 * C79275) *
                        C79072) *
                   C78981) /
                      (p * q * std::sqrt(p + q));
    d2eezy[61] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C166 * C96 + C79308 * C167) * C52140 +
            (C166 * C246 + C79308 * C563) * C52053 + C53280 * C52141 +
            C53818 * C52054) *
               C79306 * C79230 -
           (C53819 * C52054 + C53283 * C52141 + C53818 * C52053 +
            C53280 * C52140) *
               C79306 * C79114) *
              C6795 +
          ((C55322 * C52140 + C55930 * C52053 + C57244 * C52141 +
            C57731 * C52054) *
               C79306 * C79114 -
           (C55930 * C52054 + C55322 * C52141 +
            (C166 * C973 + C79308 * C1463) * C52053 +
            (C166 * C749 + C79308 * C859) * C52140) *
               C79306 * C79230) *
              C6796 +
          (((C166 * C750 + C79308 * C860) * C52140 +
            (C166 * C974 + C79308 * C1464) * C52053 + C57246 * C52141 +
            C57732 * C52054) *
               C79306 * C79230 -
           (C57733 * C52054 + C57249 * C52141 + C57732 * C52053 +
            C57246 * C52140) *
               C79306 * C79114) *
              C6797 +
          ((C59435 * C52140 + C59846 * C52053 +
            (C166 * C31755 + C79308 * C31853) * C52141 +
            (C166 * C31929 + C79308 * C32377) * C52054) *
               C79306 * C79114 -
           (C59846 * C52054 + C59435 * C52141 +
            (C166 * C5676 + C79308 * C5914) * C52053 +
            (C166 * C5568 + C79308 * C5626) * C52140) *
               C79306 * C79230) *
              C79269) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C166 * C96 + C79308 * C167) * C52140 +
             (C166 * C246 + C79308 * C563) * C52053 + C53280 * C52141 +
             C53818 * C52054) *
                C79306 * C79230 -
            (C53819 * C52054 + C53283 * C52141 + C53818 * C52053 +
             C53280 * C52140) *
                C79306 * C79114) *
               C79229 +
           ((C55322 * C52140 + C55930 * C52053 +
             (C166 * C6042 + C79308 * C6140) * C52141 +
             (C166 * C6226 + C79308 * C6638) * C52054) *
                C79306 * C79114 -
            (C55930 * C52054 + C55322 * C52141 +
             (C166 * C973 + C79308 * C1463) * C52053 +
             (C166 * C749 + C79308 * C859) * C52140) *
                C79306 * C79230) *
               C79072) *
              C745 +
          (((C1825 * C52140 + C2416 * C52053 + C1826 * C52141 +
             C2417 * C52054) *
                C79306 * C79114 -
            (C2416 * C52054 + C1825 * C52141 + C582 * C52053 + C196 * C52140) *
                C79306 * C79230) *
               C79229 +
           ((C892 * C52140 + C1483 * C52053 + C4064 * C52141 + C4726 * C52054) *
                C79306 * C79230 -
            (C11544 * C52054 + C10928 * C52141 + C4726 * C52053 +
             C4064 * C52140) *
                C79306 * C79114) *
               C79072) *
              C746 +
          (((C199 * C52140 + C583 * C52053 + C1828 * C52141 + C2418 * C52054) *
                C79306 * C79230 -
            (C2419 * C52054 + C1831 * C52141 + C2418 * C52053 +
             C1828 * C52140) *
                C79306 * C79114) *
               C79229 +
           ((C4067 * C52140 + C4727 * C52053 +
             (C166 * C10817 + C79308 * C10920) * C52141 +
             (C166 * C11026 + C79308 * C11539) * C52054) *
                C79306 * C79114 -
            (C4727 * C52054 + C4067 * C52141 + C1485 * C52053 + C895 * C52140) *
                C79306 * C79230) *
               C79072) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C166 * C96 + C79308 * C167) * C52140 +
            (C166 * C246 + C79308 * C563) * C52053 + C53280 * C52141 +
            C53818 * C52054) *
               C79306 * C11717 -
           (C53819 * C52054 + C53283 * C52141 + C53818 * C52053 +
            C53280 * C52140) *
               C79306 * C11718 +
           (C53283 * C52140 + C53819 * C52053 + C61355 * C52141 +
            C61661 * C52054) *
               C79306 * C11719 -
           (C61662 * C52054 + C61358 * C52141 + C61661 * C52053 +
            C61355 * C52140) *
               C79306 * C79275) *
              C79229 +
          ((C55322 * C52140 + C55930 * C52053 + C57244 * C52141 +
            C57731 * C52054) *
               C79306 * C11718 -
           (C55930 * C52054 + C55322 * C52141 +
            (C166 * C973 + C79308 * C1463) * C52053 +
            (C166 * C749 + C79308 * C859) * C52140) *
               C79306 * C11717 -
           (C63762 * C52054 + C63352 * C52141 + C57731 * C52053 +
            C57244 * C52140) *
               C79306 * C11719 +
           (C63352 * C52140 + C63762 * C52053 +
            (C166 * C36007 + C79308 * C36056) * C52141 +
            (C166 * C36100 + C79308 * C36320) * C52054) *
               C79306 * C79275) *
              C79072) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eezz[61] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C52394 * C96 + C52397 + C52397 + C52053 * C632 +
                      C52395 * C1682 + C52398 + C52398 + C52054 * C2498) *
                         C79308 * C79306 * C79230 -
                     (C52395 * C1683 + C53894 + C53894 + C52054 * C2499 +
                      C52394 * C1682 + C53895 + C53895 + C52053 * C2498) *
                         C79308 * C79306 * C79114) *
                        C6795 +
                    ((C52394 * C3931 + C56029 + C56029 + C52053 * C4827 +
                      C52395 * C6042 + C56030 + C56030 + C52054 * C6718) *
                         C79308 * C79306 * C79114 -
                     (C52395 * C3931 + C53073 + C53073 + C52054 * C4827 +
                      C52394 * C749 + C53074 + C53074 + C52053 * C1565) *
                         C79308 * C79306 * C79230) *
                        C6796 +
                    ((C52394 * C750 + C53075 + C53075 + C52053 * C1566 +
                      C52395 * C6044 + C53076 + C53076 + C52054 * C6720) *
                         C79308 * C79306 * C79230 -
                     (C52395 * C6045 + C57810 + C57810 + C52054 * C6721 +
                      C52394 * C6044 + C57811 + C57811 + C52053 * C6720) *
                         C79308 * C79306 * C79114) *
                        C6797 +
                    ((C52394 * C8377 + C59913 + C59913 + C52053 * C8933 +
                      C52395 * C31755 + C59914 + C59914 + C52054 * C32452) *
                         C79308 * C79306 * C79114 -
                     (C52395 * C8377 + C57080 + C57080 + C52054 * C8933 +
                      C52394 * C5568 + C57081 + C57081 + C52053 * C5960) *
                         C79308 * C79306 * C79230) *
                        C79269) *
                   C78981) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C52394 * C96 + C52397 + C52397 + C52053 * C632 +
                       C52395 * C1682 + C52398 + C52398 + C52054 * C2498) *
                          C79308 * C79306 * C79230 -
                      (C52395 * C1683 + C53894 + C53894 + C52054 * C2499 +
                       C52394 * C1682 + C53895 + C53895 + C52053 * C2498) *
                          C79308 * C79306 * C79114) *
                         C79229 +
                     ((C52394 * C3931 + C56029 + C56029 + C52053 * C4827 +
                       C52395 * C6042 + C56030 + C56030 + C52054 * C6718) *
                          C79308 * C79306 * C79114 -
                      (C52395 * C3931 + C53073 + C53073 + C52054 * C4827 +
                       C52394 * C749 + C53074 + C53074 + C52053 * C1565) *
                          C79308 * C79306 * C79230) *
                         C79072) *
                        C745 +
                    (((C52394 * C1681 + C53898 + C53898 + C52053 * C2497 +
                       C52395 * C1684 + C53899 + C53899 + C52054 * C2500) *
                          C79308 * C79306 * C79114 -
                      (C52395 * C1681 + C52399 + C52399 + C52054 * C2497 +
                       C52394 * C97 + C52400 + C52400 + C52053 * C633) *
                          C79308 * C79306 * C79230) *
                         C79229 +
                     ((C52394 * C748 + C53077 + C53077 + C52053 * C1564 +
                       C52395 * C3932 + C53078 + C53078 + C52054 * C4828) *
                          C79308 * C79306 * C79230 -
                      (C52395 * C6041 + C56031 + C56031 + C52054 * C6717 +
                       C52394 * C3932 + C56032 + C56032 + C52053 * C4828) *
                          C79308 * C79306 * C79114) *
                         C79072) *
                        C746 +
                    (((C52394 * C98 + C52401 + C52401 + C52053 * C634 +
                       C52395 * C1685 + C52402 + C52402 + C52054 * C2501) *
                          C79308 * C79306 * C79230 -
                      (C52395 * C1686 + C53902 + C53902 + C52054 * C2502 +
                       C52394 * C1685 + C53903 + C53903 + C52053 * C2501) *
                          C79308 * C79306 * C79114) *
                         C79229 +
                     ((C52394 * C3933 + C56033 + C56033 + C52053 * C4829 +
                       C52395 * C10817 + C56034 + C56034 + C52054 * C11643) *
                          C79308 * C79306 * C79114 -
                      (C52395 * C3933 + C53081 + C53081 + C52054 * C4829 +
                       C52394 * C752 + C53082 + C53082 + C52053 * C1568) *
                          C79308 * C79306 * C79230) *
                         C79072) *
                        C79253)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((C52394 * C96 + C52397 + C52397 + C52053 * C632 +
                      C52395 * C1682 + C52398 + C52398 + C52054 * C2498) *
                         C79308 * C79306 * C11717 -
                     (C52395 * C1683 + C53894 + C53894 + C52054 * C2499 +
                      C52394 * C1682 + C53895 + C53895 + C52053 * C2498) *
                         C79308 * C79306 * C11718 +
                     (C52394 * C1683 + C53896 + C53896 + C52053 * C2499 +
                      C52395 * C10320 + C53897 + C53897 + C52054 * C10712) *
                         C79308 * C79306 * C11719 -
                     (C52395 * C10321 + C61706 + C61706 + C52054 * C10713 +
                      C52394 * C10320 + C61707 + C61707 + C52053 * C10712) *
                         C79308 * C79306 * C79275) *
                        C79229 +
                    ((C52394 * C3931 + C56029 + C56029 + C52053 * C4827 +
                      C52395 * C6042 + C56030 + C56030 + C52054 * C6718) *
                         C79308 * C79306 * C11718 -
                     (C52395 * C3931 + C53073 + C53073 + C52054 * C4827 +
                      C52394 * C749 + C53074 + C53074 + C52053 * C1565) *
                         C79308 * C79306 * C11717 -
                     (C52395 * C12365 + C57808 + C57808 + C52054 * C12921 +
                      C52394 * C6042 + C57809 + C57809 + C52053 * C6718) *
                         C79308 * C79306 * C11719 +
                     (C52394 * C12365 + C63829 + C63829 + C52053 * C12921 +
                      C52395 * C36007 + C63830 + C63830 + C52054 * C36363) *
                         C79308 * C79306 * C79275) *
                        C79072) *
                   C78981) /
                      (p * q * std::sqrt(p + q));
    d2eexx[62] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C52053 +
               (C26497 * C1682 + C27761 + C27761 + C79306 * C1698) * C52054) *
                  C79308 * C79027 * C79009 * C87 -
              ((C26497 * C1681 + C27764 + C27764 + C79306 * C1697) * C52054 +
               (C26497 * C97 + C26503 + C26503 + C79306 * C109) * C52053) *
                  C79308 * C79027 * C79009 * C88 +
              ((C26497 * C98 + C26504 + C26504 + C79306 * C110) * C52053 +
               (C26497 * C1685 + C27769 + C27769 + C79306 * C1701) * C52054) *
                  C79308 * C79027 * C79009 * C89 -
              ((C26497 * C1687 + C29058 + C29058 + C79306 * C1703) * C52054 +
               (C26497 * C99 + C26507 + C26507 + C79306 * C111) * C52053) *
                  C79308 * C79027 * C79009 * C90 +
              ((C26497 * C100 + C26508 + C26508 + C79306 * C112) * C52053 +
               (C26497 * C3255 + C52056 + C52056 + C79306 * C3257) * C52054) *
                  C79308 * C79027 * C79009 * C91) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C52053 +
                (C26497 * C1682 + C27761 + C27761 + C79306 * C1698) * C52054) *
                   C79308 * C79027 * C79300 -
               (C29703 * C52054 + C26964 * C52053) * C79308 * C79027 * C79285 +
               (C26965 * C52053 + C31775 * C52054) * C79308 * C79027 * C79259) *
                  C745 +
              ((C26966 * C52053 + C29704 * C52054) * C79308 * C79027 * C79285 -
               ((C26497 * C1681 + C27764 + C27764 + C79306 * C1697) * C52054 +
                (C26497 * C97 + C26503 + C26503 + C79306 * C109) * C52053) *
                   C79308 * C79027 * C79300 -
               (C33189 * C52054 + C26967 * C52053) * C79308 * C79027 * C79259) *
                  C746 +
              (((C26497 * C98 + C26504 + C26504 + C79306 * C110) * C52053 +
                (C26497 * C1685 + C27769 + C27769 + C79306 * C1701) * C52054) *
                   C79308 * C79027 * C79300 -
               (C29705 * C52054 + C26968 * C52053) * C79308 * C79027 * C79285 +
               (C26969 * C52053 +
                (C26497 * C7477 + C29696 + C29696 + C79306 * C7479) * C52054) *
                   C79308 * C79027 * C79259) *
                  C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C52053 +
            C53184 * C52054) *
               C79308 * C79301 -
           (C53185 * C52054 + C53184 * C52053) * C79308 * C79287 +
           (C53185 * C52053 +
            (C26497 * C10320 + C36012 + C36012 + C79306 * C10328) * C52054) *
               C79308 * C79262) *
              C79009 * C745 +
          ((C53186 * C52053 + C53187 * C52054) * C79308 * C79287 -
           (C53186 * C52054 +
            (C26497 * C97 + C26503 + C26503 + C79306 * C109) * C52053) *
               C79308 * C79301 -
           ((C26497 * C10319 + C37336 + C37336 + C79306 * C10327) * C52054 +
            C53187 * C52053) *
               C79308 * C79262) *
              C79009 * C746 +
          (((C26497 * C98 + C26504 + C26504 + C79306 * C110) * C52053 +
            C53188 * C52054) *
               C79308 * C79301 -
           (C53189 * C52054 + C53188 * C52053) * C79308 * C79287 +
           (C53189 * C52053 +
            (C26497 * C11721 + C53171 + C53171 + C79306 * C11723) * C52054) *
               C79308 * C79262) *
              C79009 * C79253)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C52053 +
            C53184 * C52054) *
               C79308 * C79027 * C4921 -
           (C29703 * C52054 + C26964 * C52053) * C79308 * C79027 * C4922 +
           (C26965 * C52053 + C31775 * C52054) * C79308 * C79027 * C79259) *
              C79297 +
          ((C26966 * C52053 + C29704 * C52054) * C79308 * C79027 * C4922 -
           (C53186 * C52054 +
            (C26497 * C97 + C26503 + C26503 + C79306 * C109) * C52053) *
               C79308 * C79027 * C4921 -
           (C33189 * C52054 + C26967 * C52053) * C79308 * C79027 * C79259) *
              C79281 +
          (((C26497 * C98 + C26504 + C26504 + C79306 * C110) * C52053 +
            C53188 * C52054) *
               C79308 * C79027 * C4921 -
           (C29705 * C52054 + C26968 * C52053) * C79308 * C79027 * C4922 +
           (C26969 * C52053 +
            (C26497 * C7477 + C29696 + C29696 + C79306 * C7479) * C52054) *
               C79308 * C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C52053 +
           C53184 * C52054) *
              C79308 * C79027 * C5561 -
          (C29703 * C52054 + C26964 * C52053) * C79308 * C79027 * C5562 +
          (C26965 * C52053 + C31775 * C52054) * C79308 * C79027 * C5563 -
          (C34064 * C52054 + C31273 * C52053) * C79308 * C79027 * C5564 +
          (C31274 * C52053 +
           (C26497 * C34055 + C34061 + C34061 + C79306 * C34057) * C52054) *
              C79308 * C79027 * C5565) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C52053 +
            C53184 * C52054) *
               C79308 * C79301 -
           (C53185 * C52054 + C53184 * C52053) * C79308 * C79287 +
           (C53185 * C52053 +
            (C26497 * C10320 + C36012 + C36012 + C79306 * C10328) * C52054) *
               C79308 * C79262) *
              C4921 +
          ((C29703 * C52053 + C31774 * C52054) * C79308 * C79287 -
           (C29703 * C52054 + C26964 * C52053) * C79308 * C79301 -
           (C37942 * C52054 + C31774 * C52053) * C79308 * C79262) *
              C4922 +
          ((C26965 * C52053 + C31775 * C52054) * C79308 * C79301 -
           (C31776 * C52054 + C31775 * C52053) * C79308 * C79287 +
           (C31776 * C52053 +
            (C26497 * C37933 + C37939 + C37939 + C79306 * C37935) * C52054) *
               C79308 * C79262) *
              C79259) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C52053 +
            C53184 * C52054) *
               C79308 * C9011 -
           (C53185 * C52054 + C53184 * C52053) * C79308 * C9012 +
           (C53185 * C52053 +
            (C26497 * C10320 + C36012 + C36012 + C79306 * C10328) * C52054) *
               C79308 * C79262) *
              C79009 * C79297 +
          ((C53186 * C52053 + C53187 * C52054) * C79308 * C9012 -
           (C53186 * C52054 +
            (C26497 * C97 + C26503 + C26503 + C79306 * C109) * C52053) *
               C79308 * C9011 -
           ((C26497 * C10319 + C37336 + C37336 + C79306 * C10327) * C52054 +
            C53187 * C52053) *
               C79308 * C79262) *
              C79009 * C79281 +
          (((C26497 * C98 + C26504 + C26504 + C79306 * C110) * C52053 +
            C53188 * C52054) *
               C79308 * C9011 -
           (C53189 * C52054 + C53188 * C52053) * C79308 * C9012 +
           (C53189 * C52053 +
            (C26497 * C11721 + C53171 + C53171 + C79306 * C11723) * C52054) *
               C79308 * C79262) *
              C79009 * C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C52053 +
            C53184 * C52054) *
               C79308 * C9011 -
           (C53185 * C52054 + C53184 * C52053) * C79308 * C9012 +
           (C53185 * C52053 +
            (C26497 * C10320 + C36012 + C36012 + C79306 * C10328) * C52054) *
               C79308 * C79262) *
              C79300 +
          ((C29703 * C52053 + C31774 * C52054) * C79308 * C9012 -
           (C29703 * C52054 + C26964 * C52053) * C79308 * C9011 -
           (C37942 * C52054 + C31774 * C52053) * C79308 * C79262) *
              C79285 +
          ((C26965 * C52053 + C31775 * C52054) * C79308 * C9011 -
           (C31776 * C52054 + C31775 * C52053) * C79308 * C9012 +
           (C31776 * C52053 +
            (C26497 * C37933 + C37939 + C37939 + C79306 * C37935) * C52054) *
               C79308 * C79262) *
              C79259) *
         C78981) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C52053 +
           C53184 * C52054) *
              C79308 * C10314 -
          (C53185 * C52054 + C53184 * C52053) * C79308 * C10315 +
          (C53185 * C52053 + C61301 * C52054) * C79308 * C10316 -
          (C61302 * C52054 + C61301 * C52053) * C79308 * C10317 +
          (C61302 * C52053 +
           (C26497 * C61288 + C61296 + C61296 + C79306 * C61290) * C52054) *
              C79308 * C10318) *
         C79009 * C78981) /
            (p * q * std::sqrt(p + q));
    d2eexy[62] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C166 * C96 + C79308 * C167) * C26498 +
                (C166 * C102 + C79308 * C173) * C79306) *
                   C52053 +
               ((C166 * C1682 + C79308 * C1792) * C26498 +
                (C166 * C1690 + C79308 * C1800) * C79306) *
                   C52054) *
                  C79027 * C79009 * C87 -
              ((C1824 * C79306 + C1825 * C26498) * C52054 +
               (C197 * C79306 + C196 * C26498) * C52053) *
                  C79027 * C79009 * C88 +
              ((C199 * C26498 + C198 * C79306) * C52053 +
               (C1828 * C26498 + C1829 * C79306) * C52054) *
                  C79027 * C79009 * C89 -
              ((C3333 * C79306 + C3334 * C26498) * C52054 +
               (C201 * C79306 + C200 * C26498) * C52053) *
                  C79027 * C79009 * C90 +
              ((C203 * C26498 + C202 * C79306) * C52053 +
               ((C166 * C3255 + C79308 * C3326) * C26498 +
                (C166 * C3256 + C79308 * C3327) * C79306) *
                   C52054) *
                  C79027 * C79009 * C91) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C166 * C96 + C79308 * C167) * C26498 +
                 (C166 * C102 + C79308 * C173) * C79306) *
                    C52053 +
                ((C166 * C1682 + C79308 * C1792) * C26498 +
                 (C166 * C1690 + C79308 * C1800) * C79306) *
                    C52054) *
                   C79027 * C79300 -
               (((C166 * C3935 + C79308 * C4051) * C79306 +
                 (C166 * C3931 + C79308 * C4047) * C26498) *
                    C52054 +
                ((C166 * C757 + C79308 * C867) * C79306 +
                 (C166 * C749 + C79308 * C859) * C26498) *
                    C52053) *
                   C79027 * C79285 +
               (((C166 * C750 + C79308 * C860) * C26498 +
                 (C166 * C758 + C79308 * C868) * C79306) *
                    C52053 +
                ((C166 * C6044 + C79308 * C6142) * C26498 +
                 (C166 * C6050 + C79308 * C6148) * C79306) *
                    C52054) *
                   C79027 * C79259) *
                  C745 +
              (((C892 * C26498 + C891 * C79306) * C52053 +
                (C4064 * C26498 + C4065 * C79306) * C52054) *
                   C79027 * C79285 -
               ((C1824 * C79306 + C1825 * C26498) * C52054 +
                (C197 * C79306 + C196 * C26498) * C52053) *
                   C79027 * C79300 -
               ((C7587 * C79306 + C7588 * C26498) * C52054 +
                (C894 * C79306 + C893 * C26498) * C52053) *
                   C79027 * C79259) *
                  C746 +
              (((C199 * C26498 + C198 * C79306) * C52053 +
                (C1828 * C26498 + C1829 * C79306) * C52054) *
                   C79027 * C79300 -
               ((C4066 * C79306 + C4067 * C26498) * C52054 +
                (C896 * C79306 + C895 * C26498) * C52053) *
                   C79027 * C79285 +
               ((C898 * C26498 + C897 * C79306) * C52053 +
                ((C166 * C7477 + C79308 * C7580) * C26498 +
                 (C166 * C7478 + C79308 * C7581) * C79306) *
                    C52054) *
                   C79027 * C79259) *
                  C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C166 * C96 + C79308 * C167) * C26498 +
             (C166 * C102 + C79308 * C173) * C79306) *
                C52053 +
            (C53284 + C53285) * C52054) *
               C79301 -
           ((C53286 + C53287) * C52054 + (C53285 + C53284) * C52053) * C79287 +
           ((C53287 + C53286) * C52053 +
            ((C166 * C10320 + C79308 * C10378) * C26498 +
             (C166 * C10324 + C79308 * C10382) * C79306) *
                C52054) *
               C79262) *
              C79009 * C745 +
          (((C53272 + C53273) * C52053 + (C53274 + C53275) * C52054) * C79287 -
           ((C53273 + C53272) * C52054 +
            (C197 * C79306 + C196 * C26498) * C52053) *
               C79301 -
           ((C11799 * C79306 + C11800 * C26498) * C52054 +
            (C53275 + C53274) * C52053) *
               C79262) *
              C79009 * C746 +
          (((C199 * C26498 + C198 * C79306) * C52053 +
            (C53276 + C53277) * C52054) *
               C79301 -
           ((C53278 + C53279) * C52054 + (C53277 + C53276) * C52053) * C79287 +
           ((C53279 + C53278) * C52053 +
            ((C166 * C11721 + C79308 * C11792) * C26498 +
             (C166 * C11722 + C79308 * C11793) * C79306) *
                C52054) *
               C79262) *
              C79009 * C79253)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C166 * C96 + C79308 * C167) * C26498 +
             (C166 * C102 + C79308 * C173) * C79306) *
                C52053 +
            (C53284 + C53285) * C52054) *
               C79027 * C4921 -
           ((C55325 + C55324) * C52054 +
            ((C166 * C757 + C79308 * C867) * C79306 +
             (C166 * C749 + C79308 * C859) * C26498) *
                C52053) *
               C79027 * C4922 +
           (((C166 * C750 + C79308 * C860) * C26498 +
             (C166 * C758 + C79308 * C868) * C79306) *
                C52053 +
            ((C166 * C6044 + C79308 * C6142) * C26498 +
             (C166 * C6050 + C79308 * C6148) * C79306) *
                C52054) *
               C79027 * C79259) *
              C79297 +
          (((C892 * C26498 + C891 * C79306) * C52053 +
            (C55318 + C55319) * C52054) *
               C79027 * C4922 -
           ((C53273 + C53272) * C52054 +
            (C197 * C79306 + C196 * C26498) * C52053) *
               C79027 * C4921 -
           ((C7587 * C79306 + C7588 * C26498) * C52054 +
            (C894 * C79306 + C893 * C26498) * C52053) *
               C79027 * C79259) *
              C79281 +
          (((C199 * C26498 + C198 * C79306) * C52053 +
            (C53276 + C53277) * C52054) *
               C79027 * C4921 -
           ((C55321 + C55320) * C52054 +
            (C896 * C79306 + C895 * C26498) * C52053) *
               C79027 * C4922 +
           ((C898 * C26498 + C897 * C79306) * C52053 +
            ((C166 * C7477 + C79308 * C7580) * C26498 +
             (C166 * C7478 + C79308 * C7581) * C79306) *
                C52054) *
               C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C166 * C96 + C79308 * C167) * C26498 +
            (C166 * C102 + C79308 * C173) * C79306) *
               C52053 +
           (C53284 + C53285) * C52054) *
              C79027 * C5561 -
          ((C55325 + C55324) * C52054 +
           ((C166 * C757 + C79308 * C867) * C79306 +
            (C166 * C749 + C79308 * C859) * C26498) *
               C52053) *
              C79027 * C5562 +
          (((C166 * C750 + C79308 * C860) * C26498 +
            (C166 * C758 + C79308 * C868) * C79306) *
               C52053 +
           ((C166 * C6044 + C79308 * C6142) * C26498 +
            (C166 * C6050 + C79308 * C6148) * C79306) *
               C52054) *
              C79027 * C5563 -
          (((C166 * C8379 + C79308 * C8453) * C79306 +
            (C166 * C8377 + C79308 * C8451) * C26498) *
               C52054 +
           ((C166 * C5572 + C79308 * C5630) * C79306 +
            (C166 * C5568 + C79308 * C5626) * C26498) *
               C52053) *
              C79027 * C5564 +
          (((C166 * C5569 + C79308 * C5627) * C26498 +
            (C166 * C5573 + C79308 * C5631) * C79306) *
               C52053 +
           ((C166 * C34055 + C79308 * C34131) * C26498 +
            (C166 * C34056 + C79308 * C34132) * C79306) *
               C52054) *
              C79027 * C5565) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C166 * C96 + C79308 * C167) * C26498 +
             (C166 * C102 + C79308 * C173) * C79306) *
                C52053 +
            (C53284 + C53285) * C52054) *
               C79301 -
           ((C53286 + C53287) * C52054 + (C53285 + C53284) * C52053) * C79287 +
           ((C53287 + C53286) * C52053 +
            ((C166 * C10320 + C79308 * C10378) * C26498 +
             (C166 * C10324 + C79308 * C10382) * C79306) *
                C52054) *
               C79262) *
              C4921 +
          (((C55324 + C55325) * C52053 + (C57250 + C57251) * C52054) * C79287 -
           ((C55325 + C55324) * C52054 +
            ((C166 * C757 + C79308 * C867) * C79306 +
             (C166 * C749 + C79308 * C859) * C26498) *
                C52053) *
               C79301 -
           (((C166 * C12367 + C79308 * C12441) * C79306 +
             (C166 * C12365 + C79308 * C12439) * C26498) *
                C52054 +
            (C57251 + C57250) * C52053) *
               C79262) *
              C4922 +
          ((((C166 * C750 + C79308 * C860) * C26498 +
             (C166 * C758 + C79308 * C868) * C79306) *
                C52053 +
            (C57252 + C57253) * C52054) *
               C79301 -
           ((C57254 + C57255) * C52054 + (C57253 + C57252) * C52053) * C79287 +
           ((C57255 + C57254) * C52053 +
            ((C166 * C37933 + C79308 * C38009) * C26498 +
             (C166 * C37934 + C79308 * C38010) * C79306) *
                C52054) *
               C79262) *
              C79259) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C166 * C96 + C79308 * C167) * C26498 +
             (C166 * C102 + C79308 * C173) * C79306) *
                C52053 +
            (C53284 + C53285) * C52054) *
               C9011 -
           ((C53286 + C53287) * C52054 + (C53285 + C53284) * C52053) * C9012 +
           ((C53287 + C53286) * C52053 +
            ((C166 * C10320 + C79308 * C10378) * C26498 +
             (C166 * C10324 + C79308 * C10382) * C79306) *
                C52054) *
               C79262) *
              C79009 * C79297 +
          (((C53272 + C53273) * C52053 + (C53274 + C53275) * C52054) * C9012 -
           ((C53273 + C53272) * C52054 +
            (C197 * C79306 + C196 * C26498) * C52053) *
               C9011 -
           ((C11799 * C79306 + C11800 * C26498) * C52054 +
            (C53275 + C53274) * C52053) *
               C79262) *
              C79009 * C79281 +
          (((C199 * C26498 + C198 * C79306) * C52053 +
            (C53276 + C53277) * C52054) *
               C9011 -
           ((C53278 + C53279) * C52054 + (C53277 + C53276) * C52053) * C9012 +
           ((C53279 + C53278) * C52053 +
            ((C166 * C11721 + C79308 * C11792) * C26498 +
             (C166 * C11722 + C79308 * C11793) * C79306) *
                C52054) *
               C79262) *
              C79009 * C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C166 * C96 + C79308 * C167) * C26498 +
             (C166 * C102 + C79308 * C173) * C79306) *
                C52053 +
            (C53284 + C53285) * C52054) *
               C9011 -
           ((C53286 + C53287) * C52054 + (C53285 + C53284) * C52053) * C9012 +
           ((C53287 + C53286) * C52053 +
            ((C166 * C10320 + C79308 * C10378) * C26498 +
             (C166 * C10324 + C79308 * C10382) * C79306) *
                C52054) *
               C79262) *
              C79300 +
          (((C55324 + C55325) * C52053 + (C57250 + C57251) * C52054) * C9012 -
           ((C55325 + C55324) * C52054 +
            ((C166 * C757 + C79308 * C867) * C79306 +
             (C166 * C749 + C79308 * C859) * C26498) *
                C52053) *
               C9011 -
           (((C166 * C12367 + C79308 * C12441) * C79306 +
             (C166 * C12365 + C79308 * C12439) * C26498) *
                C52054 +
            (C57251 + C57250) * C52053) *
               C79262) *
              C79285 +
          ((((C166 * C750 + C79308 * C860) * C26498 +
             (C166 * C758 + C79308 * C868) * C79306) *
                C52053 +
            (C57252 + C57253) * C52054) *
               C9011 -
           ((C57254 + C57255) * C52054 + (C57253 + C57252) * C52053) * C9012 +
           ((C57255 + C57254) * C52053 +
            ((C166 * C37933 + C79308 * C38009) * C26498 +
             (C166 * C37934 + C79308 * C38010) * C79306) *
                C52054) *
               C79262) *
              C79259) *
         C78981) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C166 * C96 + C79308 * C167) * C26498 +
            (C166 * C102 + C79308 * C173) * C79306) *
               C52053 +
           (C53284 + C53285) * C52054) *
              C10314 -
          ((C53286 + C53287) * C52054 + (C53285 + C53284) * C52053) * C10315 +
          ((C53287 + C53286) * C52053 + (C61359 + C61360) * C52054) * C10316 -
          ((C61361 + C61362) * C52054 + (C61360 + C61359) * C52053) * C10317 +
          ((C61362 + C61361) * C52053 +
           ((C166 * C61288 + C79308 * C61344) * C26498 +
            (C166 * C61289 + C79308 * C61345) * C79306) *
               C52054) *
              C10318) *
         C79009 * C78981) /
            (p * q * std::sqrt(p + q));
    d2eexz[62] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((C52140 * C96 + C52053 * C246 + C52141 * C1682 +
                C52054 * C1906) *
                   C26498 +
               (C52140 * C102 + C52053 * C252 + C52141 * C1690 +
                C52054 * C1914) *
                   C79306) *
                  C79308 * C79027 * C79009 * C87 -
              ((C52141 * C1689 + C52054 * C1913 + C52140 * C103 +
                C52053 * C253) *
                   C79306 +
               (C52141 * C1681 + C52054 * C1905 + C52140 * C97 +
                C52053 * C247) *
                   C26498) *
                  C79308 * C79027 * C79009 * C88 +
              ((C52140 * C98 + C52053 * C248 + C52141 * C1685 +
                C52054 * C1909) *
                   C26498 +
               (C52140 * C104 + C52053 * C254 + C52141 * C1693 +
                C52054 * C1917) *
                   C79306) *
                  C79308 * C79027 * C79009 * C89 -
              ((C52141 * C1695 + C52054 * C1919 + C52140 * C105 +
                C52053 * C255) *
                   C79306 +
               (C52141 * C1687 + C52054 * C1911 + C52140 * C99 +
                C52053 * C249) *
                   C26498) *
                  C79308 * C79027 * C79009 * C90 +
              ((C52140 * C100 + C52053 * C250 + C52141 * C3255 +
                C52054 * C3400) *
                   C26498 +
               (C52140 * C106 + C52053 * C256 + C52141 * C3256 +
                C52054 * C3401) *
                   C79306) *
                  C79308 * C79027 * C79009 * C91) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C52140 * C96 + C52053 * C246 + C52141 * C1682 +
                 C52054 * C1906) *
                    C26498 +
                (C52140 * C102 + C52053 * C252 + C52141 * C1690 +
                 C52054 * C1914) *
                    C79306) *
                   C79308 * C79027 * C79300 -
               ((C52141 * C3935 + C52054 * C4169 + C52140 * C757 +
                 C52053 * C981) *
                    C79306 +
                (C52141 * C3931 + C52054 * C4165 + C52140 * C749 +
                 C52053 * C973) *
                    C26498) *
                   C79308 * C79027 * C79285 +
               ((C52140 * C750 + C52053 * C974 + C52141 * C6044 +
                 C52054 * C6228) *
                    C26498 +
                (C52140 * C758 + C52053 * C982 + C52141 * C6050 +
                 C52054 * C6234) *
                    C79306) *
                   C79308 * C79027 * C79259) *
                  C745 +
              (((C52140 * C748 + C52053 * C972 + C52141 * C3932 +
                 C52054 * C4166) *
                    C26498 +
                (C52140 * C756 + C52053 * C980 + C52141 * C3936 +
                 C52054 * C4170) *
                    C79306) *
                   C79308 * C79027 * C79285 -
               ((C52141 * C1689 + C52054 * C1913 + C52140 * C103 +
                 C52053 * C253) *
                    C79306 +
                (C52141 * C1681 + C52054 * C1905 + C52140 * C97 +
                 C52053 * C247) *
                    C26498) *
                   C79308 * C79027 * C79300 -
               ((C52141 * C6049 + C52054 * C6233 + C52140 * C759 +
                 C52053 * C983) *
                    C79306 +
                (C52141 * C6043 + C52054 * C6227 + C52140 * C751 +
                 C52053 * C975) *
                    C26498) *
                   C79308 * C79027 * C79259) *
                  C746 +
              (((C52140 * C98 + C52053 * C248 + C52141 * C1685 +
                 C52054 * C1909) *
                    C26498 +
                (C52140 * C104 + C52053 * C254 + C52141 * C1693 +
                 C52054 * C1917) *
                    C79306) *
                   C79308 * C79027 * C79300 -
               ((C52141 * C3937 + C52054 * C4171 + C52140 * C760 +
                 C52053 * C984) *
                    C79306 +
                (C52141 * C3933 + C52054 * C4167 + C52140 * C752 +
                 C52053 * C976) *
                    C26498) *
                   C79308 * C79027 * C79285 +
               ((C52140 * C753 + C52053 * C977 + C52141 * C7477 +
                 C52054 * C7686) *
                    C26498 +
                (C52140 * C761 + C52053 * C985 + C52141 * C7478 +
                 C52054 * C7687) *
                    C79306) *
                   C79308 * C79027 * C79259) *
                  C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
                C26498 +
            (C52140 * C102 + C52053 * C252 + C52141 * C1690 + C52054 * C1914) *
                C79306) *
               C79308 * C79301 -
           ((C52141 * C1691 + C52054 * C1915 + C52140 * C1690 +
             C52053 * C1914) *
                C79306 +
            (C52141 * C1683 + C52054 * C1907 + C52140 * C1682 +
             C52053 * C1906) *
                C26498) *
               C79308 * C79287 +
           ((C52140 * C1683 + C52053 * C1907 + C52141 * C10320 +
             C52054 * C10428) *
                C26498 +
            (C52140 * C1691 + C52053 * C1915 + C52141 * C10324 +
             C52054 * C10432) *
                C79306) *
               C79308 * C79262) *
              C79009 * C745 +
          (((C52140 * C1681 + C52053 * C1905 + C52141 * C1684 +
             C52054 * C1908) *
                C26498 +
            (C52140 * C1689 + C52053 * C1913 + C52141 * C1692 +
             C52054 * C1916) *
                C79306) *
               C79308 * C79287 -
           ((C52141 * C1689 + C52054 * C1913 + C52140 * C103 + C52053 * C253) *
                C79306 +
            (C52141 * C1681 + C52054 * C1905 + C52140 * C97 + C52053 * C247) *
                C26498) *
               C79308 * C79301 -
           ((C52141 * C10323 + C52054 * C10431 + C52140 * C1692 +
             C52053 * C1916) *
                C79306 +
            (C52141 * C10319 + C52054 * C10427 + C52140 * C1684 +
             C52053 * C1908) *
                C26498) *
               C79308 * C79262) *
              C79009 * C746 +
          (((C52140 * C98 + C52053 * C248 + C52141 * C1685 + C52054 * C1909) *
                C26498 +
            (C52140 * C104 + C52053 * C254 + C52141 * C1693 + C52054 * C1917) *
                C79306) *
               C79308 * C79301 -
           ((C52141 * C1694 + C52054 * C1918 + C52140 * C1693 +
             C52053 * C1917) *
                C79306 +
            (C52141 * C1686 + C52054 * C1910 + C52140 * C1685 +
             C52053 * C1909) *
                C26498) *
               C79308 * C79287 +
           ((C52140 * C1686 + C52053 * C1910 + C52141 * C11721 +
             C52054 * C11866) *
                C26498 +
            (C52140 * C1694 + C52053 * C1918 + C52141 * C11722 +
             C52054 * C11867) *
                C79306) *
               C79308 * C79262) *
              C79009 * C79253)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
                C26498 +
            (C52140 * C102 + C52053 * C252 + C52141 * C1690 + C52054 * C1914) *
                C79306) *
               C79308 * C79027 * C4921 -
           ((C52141 * C3935 + C52054 * C4169 + C52140 * C757 + C52053 * C981) *
                C79306 +
            (C52141 * C3931 + C52054 * C4165 + C52140 * C749 + C52053 * C973) *
                C26498) *
               C79308 * C79027 * C4922 +
           ((C52140 * C750 + C52053 * C974 + C52141 * C6044 + C52054 * C6228) *
                C26498 +
            (C52140 * C758 + C52053 * C982 + C52141 * C6050 + C52054 * C6234) *
                C79306) *
               C79308 * C79027 * C79259) *
              C79297 +
          (((C52140 * C748 + C52053 * C972 + C52141 * C3932 + C52054 * C4166) *
                C26498 +
            (C52140 * C756 + C52053 * C980 + C52141 * C3936 + C52054 * C4170) *
                C79306) *
               C79308 * C79027 * C4922 -
           ((C52141 * C1689 + C52054 * C1913 + C52140 * C103 + C52053 * C253) *
                C79306 +
            (C52141 * C1681 + C52054 * C1905 + C52140 * C97 + C52053 * C247) *
                C26498) *
               C79308 * C79027 * C4921 -
           ((C52141 * C6049 + C52054 * C6233 + C52140 * C759 + C52053 * C983) *
                C79306 +
            (C52141 * C6043 + C52054 * C6227 + C52140 * C751 + C52053 * C975) *
                C26498) *
               C79308 * C79027 * C79259) *
              C79281 +
          (((C52140 * C98 + C52053 * C248 + C52141 * C1685 + C52054 * C1909) *
                C26498 +
            (C52140 * C104 + C52053 * C254 + C52141 * C1693 + C52054 * C1917) *
                C79306) *
               C79308 * C79027 * C4921 -
           ((C52141 * C3937 + C52054 * C4171 + C52140 * C760 + C52053 * C984) *
                C79306 +
            (C52141 * C3933 + C52054 * C4167 + C52140 * C752 + C52053 * C976) *
                C26498) *
               C79308 * C79027 * C4922 +
           ((C52140 * C753 + C52053 * C977 + C52141 * C7477 + C52054 * C7686) *
                C26498 +
            (C52140 * C761 + C52053 * C985 + C52141 * C7478 + C52054 * C7687) *
                C79306) *
               C79308 * C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
               C26498 +
           (C52140 * C102 + C52053 * C252 + C52141 * C1690 + C52054 * C1914) *
               C79306) *
              C79308 * C79027 * C5561 -
          ((C52141 * C3935 + C52054 * C4169 + C52140 * C757 + C52053 * C981) *
               C79306 +
           (C52141 * C3931 + C52054 * C4165 + C52140 * C749 + C52053 * C973) *
               C26498) *
              C79308 * C79027 * C5562 +
          ((C52140 * C750 + C52053 * C974 + C52141 * C6044 + C52054 * C6228) *
               C26498 +
           (C52140 * C758 + C52053 * C982 + C52141 * C6050 + C52054 * C6234) *
               C79306) *
              C79308 * C79027 * C5563 -
          ((C52141 * C8379 + C52054 * C8523 + C52140 * C5572 + C52053 * C5680) *
               C79306 +
           (C52141 * C8377 + C52054 * C8521 + C52140 * C5568 + C52053 * C5676) *
               C26498) *
              C79308 * C79027 * C5564 +
          ((C52140 * C5569 + C52053 * C5677 + C52141 * C34055 +
            C52054 * C34199) *
               C26498 +
           (C52140 * C5573 + C52053 * C5681 + C52141 * C34056 +
            C52054 * C34200) *
               C79306) *
              C79308 * C79027 * C5565) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
                C26498 +
            (C52140 * C102 + C52053 * C252 + C52141 * C1690 + C52054 * C1914) *
                C79306) *
               C79308 * C79301 -
           ((C52141 * C1691 + C52054 * C1915 + C52140 * C1690 +
             C52053 * C1914) *
                C79306 +
            (C52141 * C1683 + C52054 * C1907 + C52140 * C1682 +
             C52053 * C1906) *
                C26498) *
               C79308 * C79287 +
           ((C52140 * C1683 + C52053 * C1907 + C52141 * C10320 +
             C52054 * C10428) *
                C26498 +
            (C52140 * C1691 + C52053 * C1915 + C52141 * C10324 +
             C52054 * C10432) *
                C79306) *
               C79308 * C79262) *
              C4921 +
          (((C52140 * C3931 + C52053 * C4165 + C52141 * C6042 +
             C52054 * C6226) *
                C26498 +
            (C52140 * C3935 + C52053 * C4169 + C52141 * C6048 +
             C52054 * C6232) *
                C79306) *
               C79308 * C79287 -
           ((C52141 * C3935 + C52054 * C4169 + C52140 * C757 + C52053 * C981) *
                C79306 +
            (C52141 * C3931 + C52054 * C4165 + C52140 * C749 + C52053 * C973) *
                C26498) *
               C79308 * C79301 -
           ((C52141 * C12367 + C52054 * C12511 + C52140 * C6048 +
             C52053 * C6232) *
                C79306 +
            (C52141 * C12365 + C52054 * C12509 + C52140 * C6042 +
             C52053 * C6226) *
                C26498) *
               C79308 * C79262) *
              C4922 +
          (((C52140 * C750 + C52053 * C974 + C52141 * C6044 + C52054 * C6228) *
                C26498 +
            (C52140 * C758 + C52053 * C982 + C52141 * C6050 + C52054 * C6234) *
                C79306) *
               C79308 * C79301 -
           ((C52141 * C6051 + C52054 * C6235 + C52140 * C6050 +
             C52053 * C6234) *
                C79306 +
            (C52141 * C6045 + C52054 * C6229 + C52140 * C6044 +
             C52053 * C6228) *
                C26498) *
               C79308 * C79287 +
           ((C52140 * C6045 + C52053 * C6229 + C52141 * C37933 +
             C52054 * C38077) *
                C26498 +
            (C52140 * C6051 + C52053 * C6235 + C52141 * C37934 +
             C52054 * C38078) *
                C79306) *
               C79308 * C79262) *
              C79259) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
                C26498 +
            (C52140 * C102 + C52053 * C252 + C52141 * C1690 + C52054 * C1914) *
                C79306) *
               C79308 * C9011 -
           ((C52141 * C1691 + C52054 * C1915 + C52140 * C1690 +
             C52053 * C1914) *
                C79306 +
            (C52141 * C1683 + C52054 * C1907 + C52140 * C1682 +
             C52053 * C1906) *
                C26498) *
               C79308 * C9012 +
           ((C52140 * C1683 + C52053 * C1907 + C52141 * C10320 +
             C52054 * C10428) *
                C26498 +
            (C52140 * C1691 + C52053 * C1915 + C52141 * C10324 +
             C52054 * C10432) *
                C79306) *
               C79308 * C79262) *
              C79009 * C79297 +
          (((C52140 * C1681 + C52053 * C1905 + C52141 * C1684 +
             C52054 * C1908) *
                C26498 +
            (C52140 * C1689 + C52053 * C1913 + C52141 * C1692 +
             C52054 * C1916) *
                C79306) *
               C79308 * C9012 -
           ((C52141 * C1689 + C52054 * C1913 + C52140 * C103 + C52053 * C253) *
                C79306 +
            (C52141 * C1681 + C52054 * C1905 + C52140 * C97 + C52053 * C247) *
                C26498) *
               C79308 * C9011 -
           ((C52141 * C10323 + C52054 * C10431 + C52140 * C1692 +
             C52053 * C1916) *
                C79306 +
            (C52141 * C10319 + C52054 * C10427 + C52140 * C1684 +
             C52053 * C1908) *
                C26498) *
               C79308 * C79262) *
              C79009 * C79281 +
          (((C52140 * C98 + C52053 * C248 + C52141 * C1685 + C52054 * C1909) *
                C26498 +
            (C52140 * C104 + C52053 * C254 + C52141 * C1693 + C52054 * C1917) *
                C79306) *
               C79308 * C9011 -
           ((C52141 * C1694 + C52054 * C1918 + C52140 * C1693 +
             C52053 * C1917) *
                C79306 +
            (C52141 * C1686 + C52054 * C1910 + C52140 * C1685 +
             C52053 * C1909) *
                C26498) *
               C79308 * C9012 +
           ((C52140 * C1686 + C52053 * C1910 + C52141 * C11721 +
             C52054 * C11866) *
                C26498 +
            (C52140 * C1694 + C52053 * C1918 + C52141 * C11722 +
             C52054 * C11867) *
                C79306) *
               C79308 * C79262) *
              C79009 * C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
                C26498 +
            (C52140 * C102 + C52053 * C252 + C52141 * C1690 + C52054 * C1914) *
                C79306) *
               C79308 * C9011 -
           ((C52141 * C1691 + C52054 * C1915 + C52140 * C1690 +
             C52053 * C1914) *
                C79306 +
            (C52141 * C1683 + C52054 * C1907 + C52140 * C1682 +
             C52053 * C1906) *
                C26498) *
               C79308 * C9012 +
           ((C52140 * C1683 + C52053 * C1907 + C52141 * C10320 +
             C52054 * C10428) *
                C26498 +
            (C52140 * C1691 + C52053 * C1915 + C52141 * C10324 +
             C52054 * C10432) *
                C79306) *
               C79308 * C79262) *
              C79300 +
          (((C52140 * C3931 + C52053 * C4165 + C52141 * C6042 +
             C52054 * C6226) *
                C26498 +
            (C52140 * C3935 + C52053 * C4169 + C52141 * C6048 +
             C52054 * C6232) *
                C79306) *
               C79308 * C9012 -
           ((C52141 * C3935 + C52054 * C4169 + C52140 * C757 + C52053 * C981) *
                C79306 +
            (C52141 * C3931 + C52054 * C4165 + C52140 * C749 + C52053 * C973) *
                C26498) *
               C79308 * C9011 -
           ((C52141 * C12367 + C52054 * C12511 + C52140 * C6048 +
             C52053 * C6232) *
                C79306 +
            (C52141 * C12365 + C52054 * C12509 + C52140 * C6042 +
             C52053 * C6226) *
                C26498) *
               C79308 * C79262) *
              C79285 +
          (((C52140 * C750 + C52053 * C974 + C52141 * C6044 + C52054 * C6228) *
                C26498 +
            (C52140 * C758 + C52053 * C982 + C52141 * C6050 + C52054 * C6234) *
                C79306) *
               C79308 * C9011 -
           ((C52141 * C6051 + C52054 * C6235 + C52140 * C6050 +
             C52053 * C6234) *
                C79306 +
            (C52141 * C6045 + C52054 * C6229 + C52140 * C6044 +
             C52053 * C6228) *
                C26498) *
               C79308 * C9012 +
           ((C52140 * C6045 + C52053 * C6229 + C52141 * C37933 +
             C52054 * C38077) *
                C26498 +
            (C52140 * C6051 + C52053 * C6235 + C52141 * C37934 +
             C52054 * C38078) *
                C79306) *
               C79308 * C79262) *
              C79259) *
         C78981) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
               C26498 +
           (C52140 * C102 + C52053 * C252 + C52141 * C1690 + C52054 * C1914) *
               C79306) *
              C79308 * C10314 -
          ((C52141 * C1691 + C52054 * C1915 + C52140 * C1690 + C52053 * C1914) *
               C79306 +
           (C52141 * C1683 + C52054 * C1907 + C52140 * C1682 + C52053 * C1906) *
               C26498) *
              C79308 * C10315 +
          ((C52140 * C1683 + C52053 * C1907 + C52141 * C10320 +
            C52054 * C10428) *
               C26498 +
           (C52140 * C1691 + C52053 * C1915 + C52141 * C10324 +
            C52054 * C10432) *
               C79306) *
              C79308 * C10316 -
          ((C52141 * C10325 + C52054 * C10433 + C52140 * C10324 +
            C52053 * C10432) *
               C79306 +
           (C52141 * C10321 + C52054 * C10429 + C52140 * C10320 +
            C52053 * C10428) *
               C26498) *
              C79308 * C10317 +
          ((C52140 * C10321 + C52053 * C10429 + C52141 * C61288 +
            C52054 * C61404) *
               C26498 +
           (C52140 * C10325 + C52053 * C10433 + C52141 * C61289 +
            C52054 * C61405) *
               C79306) *
              C79308 * C10318) *
         C79009 * C78981) /
            (p * q * std::sqrt(p + q));
    d2eeyx[62] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C26498 * C96 + C79306 * C102) * C166 +
                (C26498 * C167 + C79306 * C324) * C79308) *
                   C52053 +
               ((C26498 * C1682 + C79306 * C1690) * C166 +
                (C26498 * C1792 + C79306 * C2020) * C79308) *
                   C52054) *
                  C79027 * C79009 * C87 -
              (((C26498 * C1791 + C79306 * C2019) * C79308 +
                (C26498 * C1681 + C79306 * C1689) * C166) *
                   C52054 +
               ((C26498 * C168 + C79306 * C325) * C79308 +
                (C26498 * C97 + C79306 * C103) * C166) *
                   C52053) *
                  C79027 * C79009 * C88 +
              (((C26498 * C98 + C79306 * C104) * C166 +
                (C26498 * C169 + C79306 * C326) * C79308) *
                   C52053 +
               ((C26498 * C1685 + C79306 * C1693) * C166 +
                (C26498 * C1795 + C79306 * C2023) * C79308) *
                   C52054) *
                  C79027 * C79009 * C89 -
              (((C26498 * C1797 + C79306 * C2025) * C79308 +
                (C26498 * C1687 + C79306 * C1695) * C166) *
                   C52054 +
               ((C26498 * C170 + C79306 * C327) * C79308 +
                (C26498 * C99 + C79306 * C105) * C166) *
                   C52053) *
                  C79027 * C79009 * C90 +
              (((C26498 * C100 + C79306 * C106) * C166 +
                (C26498 * C171 + C79306 * C328) * C79308) *
                   C52053 +
               ((C26498 * C3255 + C79306 * C3256) * C166 +
                (C26498 * C3326 + C79306 * C3474) * C79308) *
                   C52054) *
                  C79027 * C79009 * C91) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C26498 * C96 + C79306 * C102) * C166 +
                 (C26498 * C167 + C79306 * C324) * C79308) *
                    C52053 +
                ((C26498 * C1682 + C79306 * C1690) * C166 +
                 (C26498 * C1792 + C79306 * C2020) * C79308) *
                    C52054) *
                   C79027 * C79300 -
               ((C30027 * C79308 + C30028 * C166) * C52054 +
                (C27247 * C79308 + C27246 * C166) * C52053) *
                   C79027 * C79285 +
               ((C27249 * C166 + C27248 * C79308) * C52053 +
                (C32045 * C166 + C32046 * C79308) * C52054) *
                   C79027 * C79259) *
                  C745 +
              (((C27250 * C166 + C27251 * C79308) * C52053 +
                (C30029 * C166 + C30030 * C79308) * C52054) *
                   C79027 * C79285 -
               (((C26498 * C1791 + C79306 * C2019) * C79308 +
                 (C26498 * C1681 + C79306 * C1689) * C166) *
                    C52054 +
                ((C26498 * C168 + C79306 * C325) * C79308 +
                 (C26498 * C97 + C79306 * C103) * C166) *
                    C52053) *
                   C79027 * C79300 -
               ((C33491 * C79308 + C33492 * C166) * C52054 +
                (C27253 * C79308 + C27252 * C166) * C52053) *
                   C79027 * C79259) *
                  C746 +
              ((((C26498 * C98 + C79306 * C104) * C166 +
                 (C26498 * C169 + C79306 * C326) * C79308) *
                    C52053 +
                ((C26498 * C1685 + C79306 * C1693) * C166 +
                 (C26498 * C1795 + C79306 * C2023) * C79308) *
                    C52054) *
                   C79027 * C79300 -
               ((C30031 * C79308 + C30032 * C166) * C52054 +
                (C27255 * C79308 + C27254 * C166) * C52053) *
                   C79027 * C79285 +
               ((C27257 * C166 + C27256 * C79308) * C52053 +
                ((C26498 * C7477 + C79306 * C7478) * C166 +
                 (C26498 * C7580 + C79306 * C7792) * C79308) *
                    C52054) *
                   C79027 * C79259) *
                  C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C26498 * C96 + C79306 * C102) * C166 +
             (C26498 * C167 + C79306 * C324) * C79308) *
                C52053 +
            (C53472 + C53473) * C52054) *
               C79301 -
           ((C53474 + C53475) * C52054 + (C53473 + C53472) * C52053) * C79287 +
           ((C53475 + C53474) * C52053 +
            ((C26498 * C10320 + C79306 * C10324) * C166 +
             (C26498 * C10378 + C79306 * C10478) * C79308) *
                C52054) *
               C79262) *
              C79009 * C745 +
          (((C53476 + C53477) * C52053 + (C53478 + C53479) * C52054) * C79287 -
           ((C53477 + C53476) * C52054 +
            ((C26498 * C168 + C79306 * C325) * C79308 +
             (C26498 * C97 + C79306 * C103) * C166) *
                C52053) *
               C79301 -
           (((C26498 * C10377 + C79306 * C10477) * C79308 +
             (C26498 * C10319 + C79306 * C10323) * C166) *
                C52054 +
            (C53479 + C53478) * C52053) *
               C79262) *
              C79009 * C746 +
          ((((C26498 * C98 + C79306 * C104) * C166 +
             (C26498 * C169 + C79306 * C326) * C79308) *
                C52053 +
            (C53480 + C53481) * C52054) *
               C79301 -
           ((C53482 + C53483) * C52054 + (C53481 + C53480) * C52053) * C79287 +
           ((C53483 + C53482) * C52053 +
            ((C26498 * C11721 + C79306 * C11722) * C166 +
             (C26498 * C11792 + C79306 * C11940) * C79308) *
                C52054) *
               C79262) *
              C79009 * C79253)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C26498 * C96 + C79306 * C102) * C166 +
             (C26498 * C167 + C79306 * C324) * C79308) *
                C52053 +
            (C53472 + C53473) * C52054) *
               C79027 * C4921 -
           ((C55523 + C55522) * C52054 +
            (C27247 * C79308 + C27246 * C166) * C52053) *
               C79027 * C4922 +
           ((C27249 * C166 + C27248 * C79308) * C52053 +
            (C32045 * C166 + C32046 * C79308) * C52054) *
               C79027 * C79259) *
              C79297 +
          (((C27250 * C166 + C27251 * C79308) * C52053 +
            (C55524 + C55525) * C52054) *
               C79027 * C4922 -
           ((C53477 + C53476) * C52054 +
            ((C26498 * C168 + C79306 * C325) * C79308 +
             (C26498 * C97 + C79306 * C103) * C166) *
                C52053) *
               C79027 * C4921 -
           ((C33491 * C79308 + C33492 * C166) * C52054 +
            (C27253 * C79308 + C27252 * C166) * C52053) *
               C79027 * C79259) *
              C79281 +
          ((((C26498 * C98 + C79306 * C104) * C166 +
             (C26498 * C169 + C79306 * C326) * C79308) *
                C52053 +
            (C53480 + C53481) * C52054) *
               C79027 * C4921 -
           ((C55527 + C55526) * C52054 +
            (C27255 * C79308 + C27254 * C166) * C52053) *
               C79027 * C4922 +
           ((C27257 * C166 + C27256 * C79308) * C52053 +
            ((C26498 * C7477 + C79306 * C7478) * C166 +
             (C26498 * C7580 + C79306 * C7792) * C79308) *
                C52054) *
               C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C26498 * C96 + C79306 * C102) * C166 +
            (C26498 * C167 + C79306 * C324) * C79308) *
               C52053 +
           (C53472 + C53473) * C52054) *
              C79027 * C5561 -
          ((C55523 + C55522) * C52054 +
           (C27247 * C79308 + C27246 * C166) * C52053) *
              C79027 * C5562 +
          ((C27249 * C166 + C27248 * C79308) * C52053 +
           (C32045 * C166 + C32046 * C79308) * C52054) *
              C79027 * C5563 -
          ((C34281 * C79308 + C34282 * C166) * C52054 +
           (C31433 * C79308 + C31432 * C166) * C52053) *
              C79027 * C5564 +
          ((C31435 * C166 + C31434 * C79308) * C52053 +
           ((C26498 * C34055 + C79306 * C34056) * C166 +
            (C26498 * C34131 + C79306 * C34275) * C79308) *
               C52054) *
              C79027 * C5565) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C26498 * C96 + C79306 * C102) * C166 +
             (C26498 * C167 + C79306 * C324) * C79308) *
                C52053 +
            (C53472 + C53473) * C52054) *
               C79301 -
           ((C53474 + C53475) * C52054 + (C53473 + C53472) * C52053) * C79287 +
           ((C53475 + C53474) * C52053 +
            ((C26498 * C10320 + C79306 * C10324) * C166 +
             (C26498 * C10378 + C79306 * C10478) * C79308) *
                C52054) *
               C79262) *
              C4921 +
          (((C55522 + C55523) * C52053 + (C57404 + C57405) * C52054) * C79287 -
           ((C55523 + C55522) * C52054 +
            (C27247 * C79308 + C27246 * C166) * C52053) *
               C79301 -
           ((C38159 * C79308 + C38160 * C166) * C52054 +
            (C57405 + C57404) * C52053) *
               C79262) *
              C4922 +
          (((C27249 * C166 + C27248 * C79308) * C52053 +
            (C57406 + C57407) * C52054) *
               C79301 -
           ((C57408 + C57409) * C52054 + (C57407 + C57406) * C52053) * C79287 +
           ((C57409 + C57408) * C52053 +
            ((C26498 * C37933 + C79306 * C37934) * C166 +
             (C26498 * C38009 + C79306 * C38153) * C79308) *
                C52054) *
               C79262) *
              C79259) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C26498 * C96 + C79306 * C102) * C166 +
             (C26498 * C167 + C79306 * C324) * C79308) *
                C52053 +
            (C53472 + C53473) * C52054) *
               C9011 -
           ((C53474 + C53475) * C52054 + (C53473 + C53472) * C52053) * C9012 +
           ((C53475 + C53474) * C52053 +
            ((C26498 * C10320 + C79306 * C10324) * C166 +
             (C26498 * C10378 + C79306 * C10478) * C79308) *
                C52054) *
               C79262) *
              C79009 * C79297 +
          (((C53476 + C53477) * C52053 + (C53478 + C53479) * C52054) * C9012 -
           ((C53477 + C53476) * C52054 +
            ((C26498 * C168 + C79306 * C325) * C79308 +
             (C26498 * C97 + C79306 * C103) * C166) *
                C52053) *
               C9011 -
           (((C26498 * C10377 + C79306 * C10477) * C79308 +
             (C26498 * C10319 + C79306 * C10323) * C166) *
                C52054 +
            (C53479 + C53478) * C52053) *
               C79262) *
              C79009 * C79281 +
          ((((C26498 * C98 + C79306 * C104) * C166 +
             (C26498 * C169 + C79306 * C326) * C79308) *
                C52053 +
            (C53480 + C53481) * C52054) *
               C9011 -
           ((C53482 + C53483) * C52054 + (C53481 + C53480) * C52053) * C9012 +
           ((C53483 + C53482) * C52053 +
            ((C26498 * C11721 + C79306 * C11722) * C166 +
             (C26498 * C11792 + C79306 * C11940) * C79308) *
                C52054) *
               C79262) *
              C79009 * C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C26498 * C96 + C79306 * C102) * C166 +
             (C26498 * C167 + C79306 * C324) * C79308) *
                C52053 +
            (C53472 + C53473) * C52054) *
               C9011 -
           ((C53474 + C53475) * C52054 + (C53473 + C53472) * C52053) * C9012 +
           ((C53475 + C53474) * C52053 +
            ((C26498 * C10320 + C79306 * C10324) * C166 +
             (C26498 * C10378 + C79306 * C10478) * C79308) *
                C52054) *
               C79262) *
              C79300 +
          (((C55522 + C55523) * C52053 + (C57404 + C57405) * C52054) * C9012 -
           ((C55523 + C55522) * C52054 +
            (C27247 * C79308 + C27246 * C166) * C52053) *
               C9011 -
           ((C38159 * C79308 + C38160 * C166) * C52054 +
            (C57405 + C57404) * C52053) *
               C79262) *
              C79285 +
          (((C27249 * C166 + C27248 * C79308) * C52053 +
            (C57406 + C57407) * C52054) *
               C9011 -
           ((C57408 + C57409) * C52054 + (C57407 + C57406) * C52053) * C9012 +
           ((C57409 + C57408) * C52053 +
            ((C26498 * C37933 + C79306 * C37934) * C166 +
             (C26498 * C38009 + C79306 * C38153) * C79308) *
                C52054) *
               C79262) *
              C79259) *
         C78981) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C26498 * C96 + C79306 * C102) * C166 +
            (C26498 * C167 + C79306 * C324) * C79308) *
               C52053 +
           (C53472 + C53473) * C52054) *
              C10314 -
          ((C53474 + C53475) * C52054 + (C53473 + C53472) * C52053) * C10315 +
          ((C53475 + C53474) * C52053 + (C61462 + C61463) * C52054) * C10316 -
          ((C61464 + C61465) * C52054 + (C61463 + C61462) * C52053) * C10317 +
          ((C61465 + C61464) * C52053 +
           ((C26498 * C61288 + C79306 * C61289) * C166 +
            (C26498 * C61344 + C79306 * C61448) * C79308) *
               C52054) *
              C10318) *
         C79009 * C78981) /
            (p * q * std::sqrt(p + q));
    d2eeyy[62] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((C372 * C96 + C380 + C380 + C79308 * C373) * C79306 * C52053 +
               (C372 * C1682 + C2113 + C2113 + C79308 * C2102) * C79306 *
                   C52054) *
                  C79027 * C79009 * C87 -
              (C2134 * C79306 * C52054 + C402 * C79306 * C52053) * C79027 *
                  C79009 * C88 +
              (C403 * C79306 * C52053 + C2136 * C79306 * C52054) * C79027 *
                  C79009 * C89 -
              (C3548 * C79306 * C52054 + C404 * C79306 * C52053) * C79027 *
                  C79009 * C90 +
              (C405 * C79306 * C52053 +
               (C372 * C3255 + C3545 + C3545 + C79308 * C3541) * C79306 *
                   C52054) *
                  C79027 * C79009 * C91) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C372 * C96 + C380 + C380 + C79308 * C373) * C79306 * C52053 +
                (C372 * C1682 + C2113 + C2113 + C79308 * C2102) * C79306 *
                    C52054) *
                   C79027 * C79300 -
               ((C372 * C3931 + C4390 + C4390 + C79308 * C4385) * C79306 *
                    C52054 +
                (C372 * C749 + C1180 + C1180 + C79308 * C1169) * C79306 *
                    C52053) *
                   C79027 * C79285 +
               ((C372 * C750 + C1181 + C1181 + C79308 * C1170) * C79306 *
                    C52053 +
                (C372 * C6044 + C6401 + C6401 + C79308 * C6394) * C79306 *
                    C52054) *
                   C79027 * C79259) *
                  C745 +
              ((C1201 * C79306 * C52053 + C4402 * C79306 * C52054) * C79027 *
                   C79285 -
               (C2134 * C79306 * C52054 + C402 * C79306 * C52053) * C79027 *
                   C79300 -
               (C7898 * C79306 * C52054 + C1202 * C79306 * C52053) * C79027 *
                   C79259) *
                  C746 +
              ((C403 * C79306 * C52053 + C2136 * C79306 * C52054) * C79027 *
                   C79300 -
               (C4403 * C79306 * C52054 + C1203 * C79306 * C52053) * C79027 *
                   C79285 +
               (C1204 * C79306 * C52053 +
                (C372 * C7477 + C7895 + C7895 + C79308 * C7891) * C79306 *
                    C52054) *
                   C79027 * C79259) *
                  C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C372 * C96 + C380 + C380 + C79308 * C373) * C79306 * C52053 +
            C53572 * C52054) *
               C79301 -
           (C53573 * C52054 + C53572 * C52053) * C79287 +
           (C53573 * C52053 +
            (C372 * C10320 + C10529 + C10529 + C79308 * C10524) * C79306 *
                C52054) *
               C79262) *
              C79009 * C745 +
          ((C53562 * C52053 + C53563 * C52054) * C79287 -
           (C53562 * C52054 + C402 * C79306 * C52053) * C79301 -
           (C12014 * C79306 * C52054 + C53563 * C52053) * C79262) *
              C79009 * C746 +
          ((C403 * C79306 * C52053 + C53564 * C52054) * C79301 -
           (C53565 * C52054 + C53564 * C52053) * C79287 +
           (C53565 * C52053 +
            (C372 * C11721 + C12011 + C12011 + C79308 * C12007) * C79306 *
                C52054) *
               C79262) *
              C79009 * C79253)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C372 * C96 + C380 + C380 + C79308 * C373) * C79306 * C52053 +
            C53572 * C52054) *
               C79027 * C4921 -
           (C55633 * C52054 +
            (C372 * C749 + C1180 + C1180 + C79308 * C1169) * C79306 * C52053) *
               C79027 * C4922 +
           ((C372 * C750 + C1181 + C1181 + C79308 * C1170) * C79306 * C52053 +
            (C372 * C6044 + C6401 + C6401 + C79308 * C6394) * C79306 * C52054) *
               C79027 * C79259) *
              C79297 +
          ((C1201 * C79306 * C52053 + C55628 * C52054) * C79027 * C4922 -
           (C53562 * C52054 + C402 * C79306 * C52053) * C79027 * C4921 -
           (C7898 * C79306 * C52054 + C1202 * C79306 * C52053) * C79027 *
               C79259) *
              C79281 +
          ((C403 * C79306 * C52053 + C53564 * C52054) * C79027 * C4921 -
           (C55629 * C52054 + C1203 * C79306 * C52053) * C79027 * C4922 +
           (C1204 * C79306 * C52053 +
            (C372 * C7477 + C7895 + C7895 + C79308 * C7891) * C79306 * C52054) *
               C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C372 * C96 + C380 + C380 + C79308 * C373) * C79306 * C52053 +
           C53572 * C52054) *
              C79027 * C5561 -
          (C55633 * C52054 +
           (C372 * C749 + C1180 + C1180 + C79308 * C1169) * C79306 * C52053) *
              C79027 * C5562 +
          ((C372 * C750 + C1181 + C1181 + C79308 * C1170) * C79306 * C52053 +
           (C372 * C6044 + C6401 + C6401 + C79308 * C6394) * C79306 * C52054) *
              C79027 * C5563 -
          ((C372 * C8377 + C8662 + C8662 + C79308 * C8659) * C79306 * C52054 +
           (C372 * C5568 + C5777 + C5777 + C79308 * C5772) * C79306 * C52053) *
              C79027 * C5564 +
          ((C372 * C5569 + C5778 + C5778 + C79308 * C5773) * C79306 * C52053 +
           (C372 * C34055 + C56911 + C56911 + C79308 * C34348) * C79306 *
               C52054) *
              C79027 * C5565) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C372 * C96 + C380 + C380 + C79308 * C373) * C79306 * C52053 +
            C53572 * C52054) *
               C79301 -
           (C53573 * C52054 + C53572 * C52053) * C79287 +
           (C53573 * C52053 +
            (C372 * C10320 + C10529 + C10529 + C79308 * C10524) * C79306 *
                C52054) *
               C79262) *
              C4921 +
          ((C55633 * C52053 + C57500 * C52054) * C79287 -
           (C55633 * C52054 +
            (C372 * C749 + C1180 + C1180 + C79308 * C1169) * C79306 * C52053) *
               C79301 -
           ((C372 * C12365 + C12650 + C12650 + C79308 * C12647) * C79306 *
                C52054 +
            C57500 * C52053) *
               C79262) *
              C4922 +
          (((C372 * C750 + C1181 + C1181 + C79308 * C1170) * C79306 * C52053 +
            C57501 * C52054) *
               C79301 -
           (C57502 * C52054 + C57501 * C52053) * C79287 +
           (C57502 * C52053 +
            (C372 * C37933 + C57490 + C57490 + C79308 * C38226) * C79306 *
                C52054) *
               C79262) *
              C79259) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C372 * C96 + C380 + C380 + C79308 * C373) * C79306 * C52053 +
            C53572 * C52054) *
               C9011 -
           (C53573 * C52054 + C53572 * C52053) * C9012 +
           (C53573 * C52053 +
            (C372 * C10320 + C10529 + C10529 + C79308 * C10524) * C79306 *
                C52054) *
               C79262) *
              C79009 * C79297 +
          ((C53562 * C52053 + C53563 * C52054) * C9012 -
           (C53562 * C52054 + C402 * C79306 * C52053) * C9011 -
           (C12014 * C79306 * C52054 + C53563 * C52053) * C79262) *
              C79009 * C79281 +
          ((C403 * C79306 * C52053 + C53564 * C52054) * C9011 -
           (C53565 * C52054 + C53564 * C52053) * C9012 +
           (C53565 * C52053 +
            (C372 * C11721 + C12011 + C12011 + C79308 * C12007) * C79306 *
                C52054) *
               C79262) *
              C79009 * C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C372 * C96 + C380 + C380 + C79308 * C373) * C79306 * C52053 +
            C53572 * C52054) *
               C9011 -
           (C53573 * C52054 + C53572 * C52053) * C9012 +
           (C53573 * C52053 +
            (C372 * C10320 + C10529 + C10529 + C79308 * C10524) * C79306 *
                C52054) *
               C79262) *
              C79300 +
          ((C55633 * C52053 + C57500 * C52054) * C9012 -
           (C55633 * C52054 +
            (C372 * C749 + C1180 + C1180 + C79308 * C1169) * C79306 * C52053) *
               C9011 -
           ((C372 * C12365 + C12650 + C12650 + C79308 * C12647) * C79306 *
                C52054 +
            C57500 * C52053) *
               C79262) *
              C79285 +
          (((C372 * C750 + C1181 + C1181 + C79308 * C1170) * C79306 * C52053 +
            C57501 * C52054) *
               C9011 -
           (C57502 * C52054 + C57501 * C52053) * C9012 +
           (C57502 * C52053 +
            (C372 * C37933 + C57490 + C57490 + C79308 * C38226) * C79306 *
                C52054) *
               C79262) *
              C79259) *
         C78981) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C372 * C96 + C380 + C380 + C79308 * C373) * C79306 * C52053 +
           C53572 * C52054) *
              C10314 -
          (C53573 * C52054 + C53572 * C52053) * C10315 +
          (C53573 * C52053 + C61520 * C52054) * C10316 -
          (C61521 * C52054 + C61520 * C52053) * C10317 +
          (C61521 * C52053 +
           (C372 * C61288 + C61513 + C61513 + C79308 * C61507) * C79306 *
               C52054) *
              C10318) *
         C79009 * C78981) /
            (p * q * std::sqrt(p + q));
    d2eeyz[62] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((C52140 * C96 + C52053 * C246 + C52141 * C1682 +
                C52054 * C1906) *
                   C166 +
               (C52140 * C167 + C52053 * C447 + C52141 * C1792 +
                C52054 * C2212) *
                   C79308) *
                  C79306 * C79027 * C79009 * C87 -
              ((C52141 * C1791 + C52054 * C2211 + C52140 * C168 +
                C52053 * C448) *
                   C79308 +
               (C52141 * C1681 + C52054 * C1905 + C52140 * C97 +
                C52053 * C247) *
                   C166) *
                  C79306 * C79027 * C79009 * C88 +
              ((C52140 * C98 + C52053 * C248 + C52141 * C1685 +
                C52054 * C1909) *
                   C166 +
               (C52140 * C169 + C52053 * C449 + C52141 * C1795 +
                C52054 * C2215) *
                   C79308) *
                  C79306 * C79027 * C79009 * C89 -
              ((C52141 * C1797 + C52054 * C2217 + C52140 * C170 +
                C52053 * C450) *
                   C79308 +
               (C52141 * C1687 + C52054 * C1911 + C52140 * C99 +
                C52053 * C249) *
                   C166) *
                  C79306 * C79027 * C79009 * C90 +
              ((C52140 * C100 + C52053 * C250 + C52141 * C3255 +
                C52054 * C3400) *
                   C166 +
               (C52140 * C171 + C52053 * C451 + C52141 * C3326 +
                C52054 * C3614) *
                   C79308) *
                  C79306 * C79027 * C79009 * C91) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C52140 * C96 + C52053 * C246 + C52141 * C1682 +
                 C52054 * C1906) *
                    C166 +
                (C52140 * C167 + C52053 * C447 + C52141 * C1792 +
                 C52054 * C2212) *
                    C79308) *
                   C79306 * C79027 * C79300 -
               ((C52141 * C4047 + C52054 * C4501 + C52140 * C859 +
                 C52053 * C1279) *
                    C79308 +
                (C52141 * C3931 + C52054 * C4165 + C52140 * C749 +
                 C52053 * C973) *
                    C166) *
                   C79306 * C79027 * C79285 +
               ((C52140 * C750 + C52053 * C974 + C52141 * C6044 +
                 C52054 * C6228) *
                    C166 +
                (C52140 * C860 + C52053 * C1280 + C52141 * C6142 +
                 C52054 * C6480) *
                    C79308) *
                   C79306 * C79027 * C79259) *
                  C745 +
              (((C52140 * C748 + C52053 * C972 + C52141 * C3932 +
                 C52054 * C4166) *
                    C166 +
                (C52140 * C858 + C52053 * C1278 + C52141 * C4048 +
                 C52054 * C4502) *
                    C79308) *
                   C79306 * C79027 * C79285 -
               ((C52141 * C1791 + C52054 * C2211 + C52140 * C168 +
                 C52053 * C448) *
                    C79308 +
                (C52141 * C1681 + C52054 * C1905 + C52140 * C97 +
                 C52053 * C247) *
                    C166) *
                   C79306 * C79027 * C79300 -
               ((C52141 * C6141 + C52054 * C6479 + C52140 * C861 +
                 C52053 * C1281) *
                    C79308 +
                (C52141 * C6043 + C52054 * C6227 + C52140 * C751 +
                 C52053 * C975) *
                    C166) *
                   C79306 * C79027 * C79259) *
                  C746 +
              (((C52140 * C98 + C52053 * C248 + C52141 * C1685 +
                 C52054 * C1909) *
                    C166 +
                (C52140 * C169 + C52053 * C449 + C52141 * C1795 +
                 C52054 * C2215) *
                    C79308) *
                   C79306 * C79027 * C79300 -
               ((C52141 * C4049 + C52054 * C4503 + C52140 * C862 +
                 C52053 * C1282) *
                    C79308 +
                (C52141 * C3933 + C52054 * C4167 + C52140 * C752 +
                 C52053 * C976) *
                    C166) *
                   C79306 * C79027 * C79285 +
               ((C52140 * C753 + C52053 * C977 + C52141 * C7477 +
                 C52054 * C7686) *
                    C166 +
                (C52140 * C863 + C52053 * C1283 + C52141 * C7580 +
                 C52054 * C7996) *
                    C79308) *
                   C79306 * C79027 * C79259) *
                  C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
                C166 +
            (C52140 * C167 + C52053 * C447 + C52141 * C1792 + C52054 * C2212) *
                C79308) *
               C79306 * C79301 -
           ((C52141 * C1793 + C52054 * C2213 + C52140 * C1792 +
             C52053 * C2212) *
                C79308 +
            (C52141 * C1683 + C52054 * C1907 + C52140 * C1682 +
             C52053 * C1906) *
                C166) *
               C79306 * C79287 +
           ((C52140 * C1683 + C52053 * C1907 + C52141 * C10320 +
             C52054 * C10428) *
                C166 +
            (C52140 * C1793 + C52053 * C2213 + C52141 * C10378 +
             C52054 * C10574) *
                C79308) *
               C79306 * C79262) *
              C79009 * C745 +
          (((C52140 * C1681 + C52053 * C1905 + C52141 * C1684 +
             C52054 * C1908) *
                C166 +
            (C52140 * C1791 + C52053 * C2211 + C52141 * C1794 +
             C52054 * C2214) *
                C79308) *
               C79306 * C79287 -
           ((C52141 * C1791 + C52054 * C2211 + C52140 * C168 + C52053 * C448) *
                C79308 +
            (C52141 * C1681 + C52054 * C1905 + C52140 * C97 + C52053 * C247) *
                C166) *
               C79306 * C79301 -
           ((C52141 * C10377 + C52054 * C10573 + C52140 * C1794 +
             C52053 * C2214) *
                C79308 +
            (C52141 * C10319 + C52054 * C10427 + C52140 * C1684 +
             C52053 * C1908) *
                C166) *
               C79306 * C79262) *
              C79009 * C746 +
          (((C52140 * C98 + C52053 * C248 + C52141 * C1685 + C52054 * C1909) *
                C166 +
            (C52140 * C169 + C52053 * C449 + C52141 * C1795 + C52054 * C2215) *
                C79308) *
               C79306 * C79301 -
           ((C52141 * C1796 + C52054 * C2216 + C52140 * C1795 +
             C52053 * C2215) *
                C79308 +
            (C52141 * C1686 + C52054 * C1910 + C52140 * C1685 +
             C52053 * C1909) *
                C166) *
               C79306 * C79287 +
           ((C52140 * C1686 + C52053 * C1910 + C52141 * C11721 +
             C52054 * C11866) *
                C166 +
            (C52140 * C1796 + C52053 * C2216 + C52141 * C11792 +
             C52054 * C12080) *
                C79308) *
               C79306 * C79262) *
              C79009 * C79253)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
                C166 +
            (C52140 * C167 + C52053 * C447 + C52141 * C1792 + C52054 * C2212) *
                C79308) *
               C79306 * C79027 * C4921 -
           ((C52141 * C4047 + C52054 * C4501 + C52140 * C859 + C52053 * C1279) *
                C79308 +
            (C52141 * C3931 + C52054 * C4165 + C52140 * C749 + C52053 * C973) *
                C166) *
               C79306 * C79027 * C4922 +
           ((C52140 * C750 + C52053 * C974 + C52141 * C6044 + C52054 * C6228) *
                C166 +
            (C52140 * C860 + C52053 * C1280 + C52141 * C6142 + C52054 * C6480) *
                C79308) *
               C79306 * C79027 * C79259) *
              C79297 +
          (((C52140 * C748 + C52053 * C972 + C52141 * C3932 + C52054 * C4166) *
                C166 +
            (C52140 * C858 + C52053 * C1278 + C52141 * C4048 + C52054 * C4502) *
                C79308) *
               C79306 * C79027 * C4922 -
           ((C52141 * C1791 + C52054 * C2211 + C52140 * C168 + C52053 * C448) *
                C79308 +
            (C52141 * C1681 + C52054 * C1905 + C52140 * C97 + C52053 * C247) *
                C166) *
               C79306 * C79027 * C4921 -
           ((C52141 * C6141 + C52054 * C6479 + C52140 * C861 + C52053 * C1281) *
                C79308 +
            (C52141 * C6043 + C52054 * C6227 + C52140 * C751 + C52053 * C975) *
                C166) *
               C79306 * C79027 * C79259) *
              C79281 +
          (((C52140 * C98 + C52053 * C248 + C52141 * C1685 + C52054 * C1909) *
                C166 +
            (C52140 * C169 + C52053 * C449 + C52141 * C1795 + C52054 * C2215) *
                C79308) *
               C79306 * C79027 * C4921 -
           ((C52141 * C4049 + C52054 * C4503 + C52140 * C862 + C52053 * C1282) *
                C79308 +
            (C52141 * C3933 + C52054 * C4167 + C52140 * C752 + C52053 * C976) *
                C166) *
               C79306 * C79027 * C4922 +
           ((C52140 * C753 + C52053 * C977 + C52141 * C7477 + C52054 * C7686) *
                C166 +
            (C52140 * C863 + C52053 * C1283 + C52141 * C7580 + C52054 * C7996) *
                C79308) *
               C79306 * C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
               C166 +
           (C52140 * C167 + C52053 * C447 + C52141 * C1792 + C52054 * C2212) *
               C79308) *
              C79306 * C79027 * C5561 -
          ((C52141 * C4047 + C52054 * C4501 + C52140 * C859 + C52053 * C1279) *
               C79308 +
           (C52141 * C3931 + C52054 * C4165 + C52140 * C749 + C52053 * C973) *
               C166) *
              C79306 * C79027 * C5562 +
          ((C52140 * C750 + C52053 * C974 + C52141 * C6044 + C52054 * C6228) *
               C166 +
           (C52140 * C860 + C52053 * C1280 + C52141 * C6142 + C52054 * C6480) *
               C79308) *
              C79306 * C79027 * C5563 -
          ((C52141 * C8451 + C52054 * C8729 + C52140 * C5626 + C52053 * C5822) *
               C79308 +
           (C52141 * C8377 + C52054 * C8521 + C52140 * C5568 + C52053 * C5676) *
               C166) *
              C79306 * C79027 * C5564 +
          ((C52140 * C5569 + C52053 * C5677 + C52141 * C34055 +
            C52054 * C34199) *
               C166 +
           (C52140 * C5627 + C52053 * C5823 + C52141 * C34131 +
            C52054 * C34417) *
               C79308) *
              C79306 * C79027 * C5565) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
                C166 +
            (C52140 * C167 + C52053 * C447 + C52141 * C1792 + C52054 * C2212) *
                C79308) *
               C79306 * C79301 -
           ((C52141 * C1793 + C52054 * C2213 + C52140 * C1792 +
             C52053 * C2212) *
                C79308 +
            (C52141 * C1683 + C52054 * C1907 + C52140 * C1682 +
             C52053 * C1906) *
                C166) *
               C79306 * C79287 +
           ((C52140 * C1683 + C52053 * C1907 + C52141 * C10320 +
             C52054 * C10428) *
                C166 +
            (C52140 * C1793 + C52053 * C2213 + C52141 * C10378 +
             C52054 * C10574) *
                C79308) *
               C79306 * C79262) *
              C4921 +
          (((C52140 * C3931 + C52053 * C4165 + C52141 * C6042 +
             C52054 * C6226) *
                C166 +
            (C52140 * C4047 + C52053 * C4501 + C52141 * C6140 +
             C52054 * C6478) *
                C79308) *
               C79306 * C79287 -
           ((C52141 * C4047 + C52054 * C4501 + C52140 * C859 + C52053 * C1279) *
                C79308 +
            (C52141 * C3931 + C52054 * C4165 + C52140 * C749 + C52053 * C973) *
                C166) *
               C79306 * C79301 -
           ((C52141 * C12439 + C52054 * C12717 + C52140 * C6140 +
             C52053 * C6478) *
                C79308 +
            (C52141 * C12365 + C52054 * C12509 + C52140 * C6042 +
             C52053 * C6226) *
                C166) *
               C79306 * C79262) *
              C4922 +
          (((C52140 * C750 + C52053 * C974 + C52141 * C6044 + C52054 * C6228) *
                C166 +
            (C52140 * C860 + C52053 * C1280 + C52141 * C6142 + C52054 * C6480) *
                C79308) *
               C79306 * C79301 -
           ((C52141 * C6143 + C52054 * C6481 + C52140 * C6142 +
             C52053 * C6480) *
                C79308 +
            (C52141 * C6045 + C52054 * C6229 + C52140 * C6044 +
             C52053 * C6228) *
                C166) *
               C79306 * C79287 +
           ((C52140 * C6045 + C52053 * C6229 + C52141 * C37933 +
             C52054 * C38077) *
                C166 +
            (C52140 * C6143 + C52053 * C6481 + C52141 * C38009 +
             C52054 * C38295) *
                C79308) *
               C79306 * C79262) *
              C79259) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
                C166 +
            (C52140 * C167 + C52053 * C447 + C52141 * C1792 + C52054 * C2212) *
                C79308) *
               C79306 * C9011 -
           ((C52141 * C1793 + C52054 * C2213 + C52140 * C1792 +
             C52053 * C2212) *
                C79308 +
            (C52141 * C1683 + C52054 * C1907 + C52140 * C1682 +
             C52053 * C1906) *
                C166) *
               C79306 * C9012 +
           ((C52140 * C1683 + C52053 * C1907 + C52141 * C10320 +
             C52054 * C10428) *
                C166 +
            (C52140 * C1793 + C52053 * C2213 + C52141 * C10378 +
             C52054 * C10574) *
                C79308) *
               C79306 * C79262) *
              C79009 * C79297 +
          (((C52140 * C1681 + C52053 * C1905 + C52141 * C1684 +
             C52054 * C1908) *
                C166 +
            (C52140 * C1791 + C52053 * C2211 + C52141 * C1794 +
             C52054 * C2214) *
                C79308) *
               C79306 * C9012 -
           ((C52141 * C1791 + C52054 * C2211 + C52140 * C168 + C52053 * C448) *
                C79308 +
            (C52141 * C1681 + C52054 * C1905 + C52140 * C97 + C52053 * C247) *
                C166) *
               C79306 * C9011 -
           ((C52141 * C10377 + C52054 * C10573 + C52140 * C1794 +
             C52053 * C2214) *
                C79308 +
            (C52141 * C10319 + C52054 * C10427 + C52140 * C1684 +
             C52053 * C1908) *
                C166) *
               C79306 * C79262) *
              C79009 * C79281 +
          (((C52140 * C98 + C52053 * C248 + C52141 * C1685 + C52054 * C1909) *
                C166 +
            (C52140 * C169 + C52053 * C449 + C52141 * C1795 + C52054 * C2215) *
                C79308) *
               C79306 * C9011 -
           ((C52141 * C1796 + C52054 * C2216 + C52140 * C1795 +
             C52053 * C2215) *
                C79308 +
            (C52141 * C1686 + C52054 * C1910 + C52140 * C1685 +
             C52053 * C1909) *
                C166) *
               C79306 * C9012 +
           ((C52140 * C1686 + C52053 * C1910 + C52141 * C11721 +
             C52054 * C11866) *
                C166 +
            (C52140 * C1796 + C52053 * C2216 + C52141 * C11792 +
             C52054 * C12080) *
                C79308) *
               C79306 * C79262) *
              C79009 * C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
                C166 +
            (C52140 * C167 + C52053 * C447 + C52141 * C1792 + C52054 * C2212) *
                C79308) *
               C79306 * C9011 -
           ((C52141 * C1793 + C52054 * C2213 + C52140 * C1792 +
             C52053 * C2212) *
                C79308 +
            (C52141 * C1683 + C52054 * C1907 + C52140 * C1682 +
             C52053 * C1906) *
                C166) *
               C79306 * C9012 +
           ((C52140 * C1683 + C52053 * C1907 + C52141 * C10320 +
             C52054 * C10428) *
                C166 +
            (C52140 * C1793 + C52053 * C2213 + C52141 * C10378 +
             C52054 * C10574) *
                C79308) *
               C79306 * C79262) *
              C79300 +
          (((C52140 * C3931 + C52053 * C4165 + C52141 * C6042 +
             C52054 * C6226) *
                C166 +
            (C52140 * C4047 + C52053 * C4501 + C52141 * C6140 +
             C52054 * C6478) *
                C79308) *
               C79306 * C9012 -
           ((C52141 * C4047 + C52054 * C4501 + C52140 * C859 + C52053 * C1279) *
                C79308 +
            (C52141 * C3931 + C52054 * C4165 + C52140 * C749 + C52053 * C973) *
                C166) *
               C79306 * C9011 -
           ((C52141 * C12439 + C52054 * C12717 + C52140 * C6140 +
             C52053 * C6478) *
                C79308 +
            (C52141 * C12365 + C52054 * C12509 + C52140 * C6042 +
             C52053 * C6226) *
                C166) *
               C79306 * C79262) *
              C79285 +
          (((C52140 * C750 + C52053 * C974 + C52141 * C6044 + C52054 * C6228) *
                C166 +
            (C52140 * C860 + C52053 * C1280 + C52141 * C6142 + C52054 * C6480) *
                C79308) *
               C79306 * C9011 -
           ((C52141 * C6143 + C52054 * C6481 + C52140 * C6142 +
             C52053 * C6480) *
                C79308 +
            (C52141 * C6045 + C52054 * C6229 + C52140 * C6044 +
             C52053 * C6228) *
                C166) *
               C79306 * C9012 +
           ((C52140 * C6045 + C52053 * C6229 + C52141 * C37933 +
             C52054 * C38077) *
                C166 +
            (C52140 * C6143 + C52053 * C6481 + C52141 * C38009 +
             C52054 * C38295) *
                C79308) *
               C79306 * C79262) *
              C79259) *
         C78981) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
               C166 +
           (C52140 * C167 + C52053 * C447 + C52141 * C1792 + C52054 * C2212) *
               C79308) *
              C79306 * C10314 -
          ((C52141 * C1793 + C52054 * C2213 + C52140 * C1792 + C52053 * C2212) *
               C79308 +
           (C52141 * C1683 + C52054 * C1907 + C52140 * C1682 + C52053 * C1906) *
               C166) *
              C79306 * C10315 +
          ((C52140 * C1683 + C52053 * C1907 + C52141 * C10320 +
            C52054 * C10428) *
               C166 +
           (C52140 * C1793 + C52053 * C2213 + C52141 * C10378 +
            C52054 * C10574) *
               C79308) *
              C79306 * C10316 -
          ((C52141 * C10379 + C52054 * C10575 + C52140 * C10378 +
            C52053 * C10574) *
               C79308 +
           (C52141 * C10321 + C52054 * C10429 + C52140 * C10320 +
            C52053 * C10428) *
               C166) *
              C79306 * C10317 +
          ((C52140 * C10321 + C52053 * C10429 + C52141 * C61288 +
            C52054 * C61404) *
               C166 +
           (C52140 * C10379 + C52053 * C10575 + C52141 * C61344 +
            C52054 * C61563) *
               C79308) *
              C79306 * C10318) *
         C79009 * C78981) /
            (p * q * std::sqrt(p + q));
    d2eezx[62] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((C26498 * C96 + C79306 * C102) * C52140 +
               (C26498 * C246 + C79306 * C515) * C52053 +
               (C26498 * C1682 + C79306 * C1690) * C52141 +
               (C26498 * C1906 + C79306 * C2314) * C52054) *
                  C79308 * C79027 * C79009 * C87 -
              ((C26498 * C1905 + C79306 * C2313) * C52054 +
               (C26498 * C1681 + C79306 * C1689) * C52141 +
               (C26498 * C247 + C79306 * C516) * C52053 +
               (C26498 * C97 + C79306 * C103) * C52140) *
                  C79308 * C79027 * C79009 * C88 +
              ((C26498 * C98 + C79306 * C104) * C52140 +
               (C26498 * C248 + C79306 * C517) * C52053 +
               (C26498 * C1685 + C79306 * C1693) * C52141 +
               (C26498 * C1909 + C79306 * C2317) * C52054) *
                  C79308 * C79027 * C79009 * C89 -
              ((C26498 * C1911 + C79306 * C2319) * C52054 +
               (C26498 * C1687 + C79306 * C1695) * C52141 +
               (C26498 * C249 + C79306 * C518) * C52053 +
               (C26498 * C99 + C79306 * C105) * C52140) *
                  C79308 * C79027 * C79009 * C90 +
              ((C26498 * C100 + C79306 * C106) * C52140 +
               (C26498 * C250 + C79306 * C519) * C52053 +
               (C26498 * C3255 + C79306 * C3256) * C52141 +
               (C26498 * C3400 + C79306 * C3686) * C52054) *
                  C79308 * C79027 * C79009 * C91) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C26498 * C96 + C79306 * C102) * C52140 +
                (C26498 * C246 + C79306 * C515) * C52053 +
                (C26498 * C1682 + C79306 * C1690) * C52141 +
                (C26498 * C1906 + C79306 * C2314) * C52054) *
                   C79308 * C79027 * C79300 -
               (C30345 * C52054 + C30028 * C52141 + C27516 * C52053 +
                C27246 * C52140) *
                   C79308 * C79027 * C79285 +
               (C27249 * C52140 + C27517 * C52053 + C32045 * C52141 +
                C32299 * C52054) *
                   C79308 * C79027 * C79259) *
                  C745 +
              ((C27250 * C52140 + C27518 * C52053 + C30029 * C52141 +
                C30346 * C52054) *
                   C79308 * C79027 * C79285 -
               ((C26498 * C1905 + C79306 * C2313) * C52054 +
                (C26498 * C1681 + C79306 * C1689) * C52141 +
                (C26498 * C247 + C79306 * C516) * C52053 +
                (C26498 * C97 + C79306 * C103) * C52140) *
                   C79308 * C79027 * C79300 -
               (C33792 * C52054 + C33492 * C52141 + C27519 * C52053 +
                C27252 * C52140) *
                   C79308 * C79027 * C79259) *
                  C746 +
              (((C26498 * C98 + C79306 * C104) * C52140 +
                (C26498 * C248 + C79306 * C517) * C52053 +
                (C26498 * C1685 + C79306 * C1693) * C52141 +
                (C26498 * C1909 + C79306 * C2317) * C52054) *
                   C79308 * C79027 * C79300 -
               (C30347 * C52054 + C30032 * C52141 + C27520 * C52053 +
                C27254 * C52140) *
                   C79308 * C79027 * C79285 +
               (C27257 * C52140 + C27521 * C52053 +
                (C26498 * C7477 + C79306 * C7478) * C52141 +
                (C26498 * C7686 + C79306 * C8100) * C52054) *
                   C79308 * C79027 * C79259) *
                  C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) * ((((C26498 * C96 + C79306 * C102) * C52140 +
                                (C26498 * C246 + C79306 * C515) * C52053 +
                                C53460 * C52141 + C53734 * C52054) *
                                   C79308 * C79301 -
                               (C53735 * C52054 + C53463 * C52141 +
                                C53734 * C52053 + C53460 * C52140) *
                                   C79308 * C79287 +
                               (C53463 * C52140 + C53735 * C52053 +
                                (C26498 * C10320 + C79306 * C10324) * C52141 +
                                (C26498 * C10428 + C79306 * C10620) * C52054) *
                                   C79308 * C79262) *
                                  C79009 * C745 +
                              ((C53464 * C52140 + C53736 * C52053 +
                                C53466 * C52141 + C53737 * C52054) *
                                   C79308 * C79287 -
                               (C53736 * C52054 + C53464 * C52141 +
                                (C26498 * C247 + C79306 * C516) * C52053 +
                                (C26498 * C97 + C79306 * C103) * C52140) *
                                   C79308 * C79301 -
                               ((C26498 * C10427 + C79306 * C10619) * C52054 +
                                (C26498 * C10319 + C79306 * C10323) * C52141 +
                                C53737 * C52053 + C53466 * C52140) *
                                   C79308 * C79262) *
                                  C79009 * C746 +
                              (((C26498 * C98 + C79306 * C104) * C52140 +
                                (C26498 * C248 + C79306 * C517) * C52053 +
                                C53468 * C52141 + C53738 * C52054) *
                                   C79308 * C79301 -
                               (C53739 * C52054 + C53471 * C52141 +
                                C53738 * C52053 + C53468 * C52140) *
                                   C79308 * C79287 +
                               (C53471 * C52140 + C53739 * C52053 +
                                (C26498 * C11721 + C79306 * C11722) * C52141 +
                                (C26498 * C11866 + C79306 * C12152) * C52054) *
                                   C79308 * C79262) *
                                  C79009 * C79253)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C26498 * C96 + C79306 * C102) * C52140 +
            (C26498 * C246 + C79306 * C515) * C52053 + C53460 * C52141 +
            C53734 * C52054) *
               C79308 * C79027 * C4921 -
           (C30345 * C52054 + C30028 * C52141 + C27516 * C52053 +
            C27246 * C52140) *
               C79308 * C79027 * C4922 +
           (C27249 * C52140 + C27517 * C52053 + C32045 * C52141 +
            C32299 * C52054) *
               C79308 * C79027 * C79259) *
              C79297 +
          ((C27250 * C52140 + C27518 * C52053 + C30029 * C52141 +
            C30346 * C52054) *
               C79308 * C79027 * C4922 -
           (C53736 * C52054 + C53464 * C52141 +
            (C26498 * C247 + C79306 * C516) * C52053 +
            (C26498 * C97 + C79306 * C103) * C52140) *
               C79308 * C79027 * C4921 -
           (C33792 * C52054 + C33492 * C52141 + C27519 * C52053 +
            C27252 * C52140) *
               C79308 * C79027 * C79259) *
              C79281 +
          (((C26498 * C98 + C79306 * C104) * C52140 +
            (C26498 * C248 + C79306 * C517) * C52053 + C53468 * C52141 +
            C53738 * C52054) *
               C79308 * C79027 * C4921 -
           (C30347 * C52054 + C30032 * C52141 + C27520 * C52053 +
            C27254 * C52140) *
               C79308 * C79027 * C4922 +
           (C27257 * C52140 + C27521 * C52053 +
            (C26498 * C7477 + C79306 * C7478) * C52141 +
            (C26498 * C7686 + C79306 * C8100) * C52054) *
               C79308 * C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C26498 * C96 + C79306 * C102) * C52140 +
           (C26498 * C246 + C79306 * C515) * C52053 + C53460 * C52141 +
           C53734 * C52054) *
              C79308 * C79027 * C5561 -
          (C30345 * C52054 + C30028 * C52141 + C27516 * C52053 +
           C27246 * C52140) *
              C79308 * C79027 * C5562 +
          (C27249 * C52140 + C27517 * C52053 + C32045 * C52141 +
           C32299 * C52054) *
              C79308 * C79027 * C5563 -
          (C34492 * C52054 + C34282 * C52141 + C31581 * C52053 +
           C31432 * C52140) *
              C79308 * C79027 * C5564 +
          (C31435 * C52140 + C31582 * C52053 +
           (C26498 * C34055 + C79306 * C34056) * C52141 +
           (C26498 * C34199 + C79306 * C34487) * C52054) *
              C79308 * C79027 * C5565) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C26498 * C96 + C79306 * C102) * C52140 +
            (C26498 * C246 + C79306 * C515) * C52053 + C53460 * C52141 +
            C53734 * C52054) *
               C79308 * C79301 -
           (C53735 * C52054 + C53463 * C52141 + C53734 * C52053 +
            C53460 * C52140) *
               C79308 * C79287 +
           (C53463 * C52140 + C53735 * C52053 +
            (C26498 * C10320 + C79306 * C10324) * C52141 +
            (C26498 * C10428 + C79306 * C10620) * C52054) *
               C79308 * C79262) *
              C4921 +
          ((C30028 * C52140 + C30345 * C52053 + C32043 * C52141 +
            C32298 * C52054) *
               C79308 * C79287 -
           (C30345 * C52054 + C30028 * C52141 + C27516 * C52053 +
            C27246 * C52140) *
               C79308 * C79301 -
           (C38370 * C52054 + C38160 * C52141 + C32298 * C52053 +
            C32043 * C52140) *
               C79308 * C79262) *
              C4922 +
          ((C27249 * C52140 + C27517 * C52053 + C32045 * C52141 +
            C32299 * C52054) *
               C79308 * C79301 -
           (C32300 * C52054 + C32048 * C52141 + C32299 * C52053 +
            C32045 * C52140) *
               C79308 * C79287 +
           (C32048 * C52140 + C32300 * C52053 +
            (C26498 * C37933 + C79306 * C37934) * C52141 +
            (C26498 * C38077 + C79306 * C38365) * C52054) *
               C79308 * C79262) *
              C79259) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) * ((((C26498 * C96 + C79306 * C102) * C52140 +
                                (C26498 * C246 + C79306 * C515) * C52053 +
                                C53460 * C52141 + C53734 * C52054) *
                                   C79308 * C9011 -
                               (C53735 * C52054 + C53463 * C52141 +
                                C53734 * C52053 + C53460 * C52140) *
                                   C79308 * C9012 +
                               (C53463 * C52140 + C53735 * C52053 +
                                (C26498 * C10320 + C79306 * C10324) * C52141 +
                                (C26498 * C10428 + C79306 * C10620) * C52054) *
                                   C79308 * C79262) *
                                  C79009 * C79297 +
                              ((C53464 * C52140 + C53736 * C52053 +
                                C53466 * C52141 + C53737 * C52054) *
                                   C79308 * C9012 -
                               (C53736 * C52054 + C53464 * C52141 +
                                (C26498 * C247 + C79306 * C516) * C52053 +
                                (C26498 * C97 + C79306 * C103) * C52140) *
                                   C79308 * C9011 -
                               ((C26498 * C10427 + C79306 * C10619) * C52054 +
                                (C26498 * C10319 + C79306 * C10323) * C52141 +
                                C53737 * C52053 + C53466 * C52140) *
                                   C79308 * C79262) *
                                  C79009 * C79281 +
                              (((C26498 * C98 + C79306 * C104) * C52140 +
                                (C26498 * C248 + C79306 * C517) * C52053 +
                                C53468 * C52141 + C53738 * C52054) *
                                   C79308 * C9011 -
                               (C53739 * C52054 + C53471 * C52141 +
                                C53738 * C52053 + C53468 * C52140) *
                                   C79308 * C9012 +
                               (C53471 * C52140 + C53739 * C52053 +
                                (C26498 * C11721 + C79306 * C11722) * C52141 +
                                (C26498 * C11866 + C79306 * C12152) * C52054) *
                                   C79308 * C79262) *
                                  C79009 * C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C26498 * C96 + C79306 * C102) * C52140 +
            (C26498 * C246 + C79306 * C515) * C52053 + C53460 * C52141 +
            C53734 * C52054) *
               C79308 * C9011 -
           (C53735 * C52054 + C53463 * C52141 + C53734 * C52053 +
            C53460 * C52140) *
               C79308 * C9012 +
           (C53463 * C52140 + C53735 * C52053 +
            (C26498 * C10320 + C79306 * C10324) * C52141 +
            (C26498 * C10428 + C79306 * C10620) * C52054) *
               C79308 * C79262) *
              C79300 +
          ((C30028 * C52140 + C30345 * C52053 + C32043 * C52141 +
            C32298 * C52054) *
               C79308 * C9012 -
           (C30345 * C52054 + C30028 * C52141 + C27516 * C52053 +
            C27246 * C52140) *
               C79308 * C9011 -
           (C38370 * C52054 + C38160 * C52141 + C32298 * C52053 +
            C32043 * C52140) *
               C79308 * C79262) *
              C79285 +
          ((C27249 * C52140 + C27517 * C52053 + C32045 * C52141 +
            C32299 * C52054) *
               C79308 * C9011 -
           (C32300 * C52054 + C32048 * C52141 + C32299 * C52053 +
            C32045 * C52140) *
               C79308 * C9012 +
           (C32048 * C52140 + C32300 * C52053 +
            (C26498 * C37933 + C79306 * C37934) * C52141 +
            (C26498 * C38077 + C79306 * C38365) * C52054) *
               C79308 * C79262) *
              C79259) *
         C78981) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C26498 * C96 + C79306 * C102) * C52140 +
           (C26498 * C246 + C79306 * C515) * C52053 + C53460 * C52141 +
           C53734 * C52054) *
              C79308 * C10314 -
          (C53735 * C52054 + C53463 * C52141 + C53734 * C52053 +
           C53460 * C52140) *
              C79308 * C10315 +
          (C53463 * C52140 + C53735 * C52053 + C61458 * C52141 +
           C61612 * C52054) *
              C79308 * C10316 -
          (C61613 * C52054 + C61461 * C52141 + C61612 * C52053 +
           C61458 * C52140) *
              C79308 * C10317 +
          (C61461 * C52140 + C61613 * C52053 +
           (C26498 * C61288 + C79306 * C61289) * C52141 +
           (C26498 * C61404 + C79306 * C61606) * C52054) *
              C79308 * C10318) *
         C79009 * C78981) /
            (p * q * std::sqrt(p + q));
    d2eezy[62] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((C166 * C96 + C79308 * C167) * C52140 +
               (C166 * C246 + C79308 * C563) * C52053 +
               (C166 * C1682 + C79308 * C1792) * C52141 +
               (C166 * C1906 + C79308 * C2396) * C52054) *
                  C79306 * C79027 * C79009 * C87 -
              (C2416 * C52054 + C1825 * C52141 + C582 * C52053 +
               C196 * C52140) *
                  C79306 * C79027 * C79009 * C88 +
              (C199 * C52140 + C583 * C52053 + C1828 * C52141 +
               C2418 * C52054) *
                  C79306 * C79027 * C79009 * C89 -
              (C3758 * C52054 + C3334 * C52141 + C584 * C52053 +
               C200 * C52140) *
                  C79306 * C79027 * C79009 * C90 +
              (C203 * C52140 + C585 * C52053 +
               (C166 * C3255 + C79308 * C3326) * C52141 +
               (C166 * C3400 + C79308 * C3753) * C52054) *
                  C79306 * C79027 * C79009 * C91) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C166 * C96 + C79308 * C167) * C52140 +
                (C166 * C246 + C79308 * C563) * C52053 +
                (C166 * C1682 + C79308 * C1792) * C52141 +
                (C166 * C1906 + C79308 * C2396) * C52054) *
                   C79306 * C79027 * C79300 -
               ((C166 * C4165 + C79308 * C4715) * C52054 +
                (C166 * C3931 + C79308 * C4047) * C52141 +
                (C166 * C973 + C79308 * C1463) * C52053 +
                (C166 * C749 + C79308 * C859) * C52140) *
                   C79306 * C79027 * C79285 +
               ((C166 * C750 + C79308 * C860) * C52140 +
                (C166 * C974 + C79308 * C1464) * C52053 +
                (C166 * C6044 + C79308 * C6142) * C52141 +
                (C166 * C6228 + C79308 * C6640) * C52054) *
                   C79306 * C79027 * C79259) *
                  C745 +
              ((C892 * C52140 + C1483 * C52053 + C4064 * C52141 +
                C4726 * C52054) *
                   C79306 * C79027 * C79285 -
               (C2416 * C52054 + C1825 * C52141 + C582 * C52053 +
                C196 * C52140) *
                   C79306 * C79027 * C79300 -
               (C8204 * C52054 + C7588 * C52141 + C1484 * C52053 +
                C893 * C52140) *
                   C79306 * C79027 * C79259) *
                  C746 +
              ((C199 * C52140 + C583 * C52053 + C1828 * C52141 +
                C2418 * C52054) *
                   C79306 * C79027 * C79300 -
               (C4727 * C52054 + C4067 * C52141 + C1485 * C52053 +
                C895 * C52140) *
                   C79306 * C79027 * C79285 +
               (C898 * C52140 + C1486 * C52053 +
                (C166 * C7477 + C79308 * C7580) * C52141 +
                (C166 * C7686 + C79308 * C8199) * C52054) *
                   C79306 * C79027 * C79259) *
                  C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C166 * C96 + C79308 * C167) * C52140 +
            (C166 * C246 + C79308 * C563) * C52053 + C53280 * C52141 +
            C53818 * C52054) *
               C79306 * C79301 -
           (C53819 * C52054 + C53283 * C52141 + C53818 * C52053 +
            C53280 * C52140) *
               C79306 * C79287 +
           (C53283 * C52140 + C53819 * C52053 +
            (C166 * C10320 + C79308 * C10378) * C52141 +
            (C166 * C10428 + C79308 * C10666) * C52054) *
               C79306 * C79262) *
              C79009 * C745 +
          ((C1825 * C52140 + C2416 * C52053 + C1826 * C52141 + C2417 * C52054) *
               C79306 * C79287 -
           (C2416 * C52054 + C1825 * C52141 + C582 * C52053 + C196 * C52140) *
               C79306 * C79301 -
           (C12224 * C52054 + C11800 * C52141 + C2417 * C52053 +
            C1826 * C52140) *
               C79306 * C79262) *
              C79009 * C746 +
          ((C199 * C52140 + C583 * C52053 + C1828 * C52141 + C2418 * C52054) *
               C79306 * C79301 -
           (C2419 * C52054 + C1831 * C52141 + C2418 * C52053 + C1828 * C52140) *
               C79306 * C79287 +
           (C1831 * C52140 + C2419 * C52053 +
            (C166 * C11721 + C79308 * C11792) * C52141 +
            (C166 * C11866 + C79308 * C12219) * C52054) *
               C79306 * C79262) *
              C79009 * C79253)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C166 * C96 + C79308 * C167) * C52140 +
            (C166 * C246 + C79308 * C563) * C52053 + C53280 * C52141 +
            C53818 * C52054) *
               C79306 * C79027 * C4921 -
           (C55930 * C52054 + C55322 * C52141 +
            (C166 * C973 + C79308 * C1463) * C52053 +
            (C166 * C749 + C79308 * C859) * C52140) *
               C79306 * C79027 * C4922 +
           ((C166 * C750 + C79308 * C860) * C52140 +
            (C166 * C974 + C79308 * C1464) * C52053 +
            (C166 * C6044 + C79308 * C6142) * C52141 +
            (C166 * C6228 + C79308 * C6640) * C52054) *
               C79306 * C79027 * C79259) *
              C79297 +
          ((C892 * C52140 + C1483 * C52053 + C4064 * C52141 + C4726 * C52054) *
               C79306 * C79027 * C4922 -
           (C2416 * C52054 + C1825 * C52141 + C582 * C52053 + C196 * C52140) *
               C79306 * C79027 * C4921 -
           (C8204 * C52054 + C7588 * C52141 + C1484 * C52053 + C893 * C52140) *
               C79306 * C79027 * C79259) *
              C79281 +
          ((C199 * C52140 + C583 * C52053 + C1828 * C52141 + C2418 * C52054) *
               C79306 * C79027 * C4921 -
           (C4727 * C52054 + C4067 * C52141 + C1485 * C52053 + C895 * C52140) *
               C79306 * C79027 * C4922 +
           (C898 * C52140 + C1486 * C52053 +
            (C166 * C7477 + C79308 * C7580) * C52141 +
            (C166 * C7686 + C79308 * C8199) * C52054) *
               C79306 * C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C166 * C96 + C79308 * C167) * C52140 +
           (C166 * C246 + C79308 * C563) * C52053 + C53280 * C52141 +
           C53818 * C52054) *
              C79306 * C79027 * C5561 -
          (C55930 * C52054 + C55322 * C52141 +
           (C166 * C973 + C79308 * C1463) * C52053 +
           (C166 * C749 + C79308 * C859) * C52140) *
              C79306 * C79027 * C5562 +
          ((C166 * C750 + C79308 * C860) * C52140 +
           (C166 * C974 + C79308 * C1464) * C52053 +
           (C166 * C6044 + C79308 * C6142) * C52141 +
           (C166 * C6228 + C79308 * C6640) * C52054) *
              C79306 * C79027 * C5563 -
          ((C166 * C8521 + C79308 * C8865) * C52054 +
           (C166 * C8377 + C79308 * C8451) * C52141 +
           (C166 * C5676 + C79308 * C5914) * C52053 +
           (C166 * C5568 + C79308 * C5626) * C52140) *
              C79306 * C79027 * C5564 +
          ((C166 * C5569 + C79308 * C5627) * C52140 +
           (C166 * C5677 + C79308 * C5915) * C52053 +
           (C166 * C34055 + C79308 * C34131) * C52141 +
           (C166 * C34199 + C79308 * C34559) * C52054) *
              C79306 * C79027 * C5565) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C166 * C96 + C79308 * C167) * C52140 +
            (C166 * C246 + C79308 * C563) * C52053 + C53280 * C52141 +
            C53818 * C52054) *
               C79306 * C79301 -
           (C53819 * C52054 + C53283 * C52141 + C53818 * C52053 +
            C53280 * C52140) *
               C79306 * C79287 +
           (C53283 * C52140 + C53819 * C52053 +
            (C166 * C10320 + C79308 * C10378) * C52141 +
            (C166 * C10428 + C79308 * C10666) * C52054) *
               C79306 * C79262) *
              C4921 +
          ((C55322 * C52140 + C55930 * C52053 + C57244 * C52141 +
            C57731 * C52054) *
               C79306 * C79287 -
           (C55930 * C52054 + C55322 * C52141 +
            (C166 * C973 + C79308 * C1463) * C52053 +
            (C166 * C749 + C79308 * C859) * C52140) *
               C79306 * C79301 -
           ((C166 * C12509 + C79308 * C12853) * C52054 +
            (C166 * C12365 + C79308 * C12439) * C52141 + C57731 * C52053 +
            C57244 * C52140) *
               C79306 * C79262) *
              C4922 +
          (((C166 * C750 + C79308 * C860) * C52140 +
            (C166 * C974 + C79308 * C1464) * C52053 + C57246 * C52141 +
            C57732 * C52054) *
               C79306 * C79301 -
           (C57733 * C52054 + C57249 * C52141 + C57732 * C52053 +
            C57246 * C52140) *
               C79306 * C79287 +
           (C57249 * C52140 + C57733 * C52053 +
            (C166 * C37933 + C79308 * C38009) * C52141 +
            (C166 * C38077 + C79308 * C38437) * C52054) *
               C79306 * C79262) *
              C79259) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C166 * C96 + C79308 * C167) * C52140 +
            (C166 * C246 + C79308 * C563) * C52053 + C53280 * C52141 +
            C53818 * C52054) *
               C79306 * C9011 -
           (C53819 * C52054 + C53283 * C52141 + C53818 * C52053 +
            C53280 * C52140) *
               C79306 * C9012 +
           (C53283 * C52140 + C53819 * C52053 +
            (C166 * C10320 + C79308 * C10378) * C52141 +
            (C166 * C10428 + C79308 * C10666) * C52054) *
               C79306 * C79262) *
              C79009 * C79297 +
          ((C1825 * C52140 + C2416 * C52053 + C1826 * C52141 + C2417 * C52054) *
               C79306 * C9012 -
           (C2416 * C52054 + C1825 * C52141 + C582 * C52053 + C196 * C52140) *
               C79306 * C9011 -
           (C12224 * C52054 + C11800 * C52141 + C2417 * C52053 +
            C1826 * C52140) *
               C79306 * C79262) *
              C79009 * C79281 +
          ((C199 * C52140 + C583 * C52053 + C1828 * C52141 + C2418 * C52054) *
               C79306 * C9011 -
           (C2419 * C52054 + C1831 * C52141 + C2418 * C52053 + C1828 * C52140) *
               C79306 * C9012 +
           (C1831 * C52140 + C2419 * C52053 +
            (C166 * C11721 + C79308 * C11792) * C52141 +
            (C166 * C11866 + C79308 * C12219) * C52054) *
               C79306 * C79262) *
              C79009 * C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C166 * C96 + C79308 * C167) * C52140 +
            (C166 * C246 + C79308 * C563) * C52053 + C53280 * C52141 +
            C53818 * C52054) *
               C79306 * C9011 -
           (C53819 * C52054 + C53283 * C52141 + C53818 * C52053 +
            C53280 * C52140) *
               C79306 * C9012 +
           (C53283 * C52140 + C53819 * C52053 +
            (C166 * C10320 + C79308 * C10378) * C52141 +
            (C166 * C10428 + C79308 * C10666) * C52054) *
               C79306 * C79262) *
              C79300 +
          ((C55322 * C52140 + C55930 * C52053 + C57244 * C52141 +
            C57731 * C52054) *
               C79306 * C9012 -
           (C55930 * C52054 + C55322 * C52141 +
            (C166 * C973 + C79308 * C1463) * C52053 +
            (C166 * C749 + C79308 * C859) * C52140) *
               C79306 * C9011 -
           ((C166 * C12509 + C79308 * C12853) * C52054 +
            (C166 * C12365 + C79308 * C12439) * C52141 + C57731 * C52053 +
            C57244 * C52140) *
               C79306 * C79262) *
              C79285 +
          (((C166 * C750 + C79308 * C860) * C52140 +
            (C166 * C974 + C79308 * C1464) * C52053 + C57246 * C52141 +
            C57732 * C52054) *
               C79306 * C9011 -
           (C57733 * C52054 + C57249 * C52141 + C57732 * C52053 +
            C57246 * C52140) *
               C79306 * C9012 +
           (C57249 * C52140 + C57733 * C52053 +
            (C166 * C37933 + C79308 * C38009) * C52141 +
            (C166 * C38077 + C79308 * C38437) * C52054) *
               C79306 * C79262) *
              C79259) *
         C78981) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C166 * C96 + C79308 * C167) * C52140 +
           (C166 * C246 + C79308 * C563) * C52053 + C53280 * C52141 +
           C53818 * C52054) *
              C79306 * C10314 -
          (C53819 * C52054 + C53283 * C52141 + C53818 * C52053 +
           C53280 * C52140) *
              C79306 * C10315 +
          (C53283 * C52140 + C53819 * C52053 + C61355 * C52141 +
           C61661 * C52054) *
              C79306 * C10316 -
          (C61662 * C52054 + C61358 * C52141 + C61661 * C52053 +
           C61355 * C52140) *
              C79306 * C10317 +
          (C61358 * C52140 + C61662 * C52053 +
           (C166 * C61288 + C79308 * C61344) * C52141 +
           (C166 * C61404 + C79308 * C61655) * C52054) *
              C79306 * C10318) *
         C79009 * C78981) /
            (p * q * std::sqrt(p + q));
    d2eezz[62] += (0.5 * std::pow(Pi, 2.5) *
                       ((C52394 * C96 + C52397 + C52397 + C52053 * C632 +
                         C52395 * C1682 + C52398 + C52398 + C52054 * C2498) *
                            C79308 * C79306 * C79027 * C79009 * C87 -
                        (C52395 * C1681 + C52399 + C52399 + C52054 * C2497 +
                         C52394 * C97 + C52400 + C52400 + C52053 * C633) *
                            C79308 * C79306 * C79027 * C79009 * C88 +
                        (C52394 * C98 + C52401 + C52401 + C52053 * C634 +
                         C52395 * C1685 + C52402 + C52402 + C52054 * C2501) *
                            C79308 * C79306 * C79027 * C79009 * C89 -
                        (C52395 * C1687 + C52403 + C52403 + C52054 * C2503 +
                         C52394 * C99 + C52404 + C52404 + C52053 * C635) *
                            C79308 * C79306 * C79027 * C79009 * C90 +
                        (C52394 * C100 + C52405 + C52405 + C52053 * C636 +
                         C52395 * C3255 + C52406 + C52406 + C52054 * C3825) *
                            C79308 * C79306 * C79027 * C79009 * C91) +
                   0.5 * std::pow(Pi, 2.5) *
                       (((C52394 * C96 + C52397 + C52397 + C52053 * C632 +
                          C52395 * C1682 + C52398 + C52398 + C52054 * C2498) *
                             C79308 * C79306 * C79027 * C79300 -
                         (C52395 * C3931 + C53073 + C53073 + C52054 * C4827 +
                          C52394 * C749 + C53074 + C53074 + C52053 * C1565) *
                             C79308 * C79306 * C79027 * C79285 +
                         (C52394 * C750 + C53075 + C53075 + C52053 * C1566 +
                          C52395 * C6044 + C53076 + C53076 + C52054 * C6720) *
                             C79308 * C79306 * C79027 * C79259) *
                            C745 +
                        ((C52394 * C748 + C53077 + C53077 + C52053 * C1564 +
                          C52395 * C3932 + C53078 + C53078 + C52054 * C4828) *
                             C79308 * C79306 * C79027 * C79285 -
                         (C52395 * C1681 + C52399 + C52399 + C52054 * C2497 +
                          C52394 * C97 + C52400 + C52400 + C52053 * C633) *
                             C79308 * C79306 * C79027 * C79300 -
                         (C52395 * C6043 + C53079 + C53079 + C52054 * C6719 +
                          C52394 * C751 + C53080 + C53080 + C52053 * C1567) *
                             C79308 * C79306 * C79027 * C79259) *
                            C746 +
                        ((C52394 * C98 + C52401 + C52401 + C52053 * C634 +
                          C52395 * C1685 + C52402 + C52402 + C52054 * C2501) *
                             C79308 * C79306 * C79027 * C79300 -
                         (C52395 * C3933 + C53081 + C53081 + C52054 * C4829 +
                          C52394 * C752 + C53082 + C53082 + C52053 * C1568) *
                             C79308 * C79306 * C79027 * C79285 +
                         (C52394 * C753 + C53083 + C53083 + C52053 * C1569 +
                          C52395 * C7477 + C53084 + C53084 + C52054 * C8303) *
                             C79308 * C79306 * C79027 * C79259) *
                            C79253)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::pow(Pi, 2.5) *
                   (((C52394 * C96 + C52397 + C52397 + C52053 * C632 +
                      C52395 * C1682 + C52398 + C52398 + C52054 * C2498) *
                         C79308 * C79306 * C79301 -
                     (C52395 * C1683 + C53894 + C53894 + C52054 * C2499 +
                      C52394 * C1682 + C53895 + C53895 + C52053 * C2498) *
                         C79308 * C79306 * C79287 +
                     (C52394 * C1683 + C53896 + C53896 + C52053 * C2499 +
                      C52395 * C10320 + C53897 + C53897 + C52054 * C10712) *
                         C79308 * C79306 * C79262) *
                        C79009 * C745 +
                    ((C52394 * C1681 + C53898 + C53898 + C52053 * C2497 +
                      C52395 * C1684 + C53899 + C53899 + C52054 * C2500) *
                         C79308 * C79306 * C79287 -
                     (C52395 * C1681 + C52399 + C52399 + C52054 * C2497 +
                      C52394 * C97 + C52400 + C52400 + C52053 * C633) *
                         C79308 * C79306 * C79301 -
                     (C52395 * C10319 + C53900 + C53900 + C52054 * C10711 +
                      C52394 * C1684 + C53901 + C53901 + C52053 * C2500) *
                         C79308 * C79306 * C79262) *
                        C79009 * C746 +
                    ((C52394 * C98 + C52401 + C52401 + C52053 * C634 +
                      C52395 * C1685 + C52402 + C52402 + C52054 * C2501) *
                         C79308 * C79306 * C79301 -
                     (C52395 * C1686 + C53902 + C53902 + C52054 * C2502 +
                      C52394 * C1685 + C53903 + C53903 + C52053 * C2501) *
                         C79308 * C79306 * C79287 +
                     (C52394 * C1686 + C53904 + C53904 + C52053 * C2502 +
                      C52395 * C11721 + C53905 + C53905 + C52054 * C12291) *
                         C79308 * C79306 * C79262) *
                        C79009 * C79253)) /
                      (p * q * std::sqrt(p + q)) +
                  (0.5 * std::pow(Pi, 2.5) *
                   (((C52394 * C96 + C52397 + C52397 + C52053 * C632 +
                      C52395 * C1682 + C52398 + C52398 + C52054 * C2498) *
                         C79308 * C79306 * C79027 * C4921 -
                     (C52395 * C3931 + C53073 + C53073 + C52054 * C4827 +
                      C52394 * C749 + C53074 + C53074 + C52053 * C1565) *
                         C79308 * C79306 * C79027 * C4922 +
                     (C52394 * C750 + C53075 + C53075 + C52053 * C1566 +
                      C52395 * C6044 + C53076 + C53076 + C52054 * C6720) *
                         C79308 * C79306 * C79027 * C79259) *
                        C79297 +
                    ((C52394 * C748 + C53077 + C53077 + C52053 * C1564 +
                      C52395 * C3932 + C53078 + C53078 + C52054 * C4828) *
                         C79308 * C79306 * C79027 * C4922 -
                     (C52395 * C1681 + C52399 + C52399 + C52054 * C2497 +
                      C52394 * C97 + C52400 + C52400 + C52053 * C633) *
                         C79308 * C79306 * C79027 * C4921 -
                     (C52395 * C6043 + C53079 + C53079 + C52054 * C6719 +
                      C52394 * C751 + C53080 + C53080 + C52053 * C1567) *
                         C79308 * C79306 * C79027 * C79259) *
                        C79281 +
                    ((C52394 * C98 + C52401 + C52401 + C52053 * C634 +
                      C52395 * C1685 + C52402 + C52402 + C52054 * C2501) *
                         C79308 * C79306 * C79027 * C4921 -
                     (C52395 * C3933 + C53081 + C53081 + C52054 * C4829 +
                      C52394 * C752 + C53082 + C53082 + C52053 * C1568) *
                         C79308 * C79306 * C79027 * C4922 +
                     (C52394 * C753 + C53083 + C53083 + C52053 * C1569 +
                      C52395 * C7477 + C53084 + C53084 + C52054 * C8303) *
                         C79308 * C79306 * C79027 * C79259) *
                        C79253)) /
                      (p * q * std::sqrt(p + q)) +
                  (0.5 * std::pow(Pi, 2.5) *
                   ((C52394 * C96 + C52397 + C52397 + C52053 * C632 +
                     C52395 * C1682 + C52398 + C52398 + C52054 * C2498) *
                        C79308 * C79306 * C79027 * C5561 -
                    (C52395 * C3931 + C53073 + C53073 + C52054 * C4827 +
                     C52394 * C749 + C53074 + C53074 + C52053 * C1565) *
                        C79308 * C79306 * C79027 * C5562 +
                    (C52394 * C750 + C53075 + C53075 + C52053 * C1566 +
                     C52395 * C6044 + C53076 + C53076 + C52054 * C6720) *
                        C79308 * C79306 * C79027 * C5563 -
                    (C52395 * C8377 + C57080 + C57080 + C52054 * C8933 +
                     C52394 * C5568 + C57081 + C57081 + C52053 * C5960) *
                        C79308 * C79306 * C79027 * C5564 +
                    (C52394 * C5569 + C57082 + C57082 + C52053 * C5961 +
                     C52395 * C34055 + C57083 + C57083 + C52054 * C34626) *
                        C79308 * C79306 * C79027 * C5565) *
                   C78981) /
                      (p * q * std::sqrt(p + q)) -
                  (std::pow(Pi, 2.5) *
                   (((C52394 * C96 + C52397 + C52397 + C52053 * C632 +
                      C52395 * C1682 + C52398 + C52398 + C52054 * C2498) *
                         C79308 * C79306 * C79301 -
                     (C52395 * C1683 + C53894 + C53894 + C52054 * C2499 +
                      C52394 * C1682 + C53895 + C53895 + C52053 * C2498) *
                         C79308 * C79306 * C79287 +
                     (C52394 * C1683 + C53896 + C53896 + C52053 * C2499 +
                      C52395 * C10320 + C53897 + C53897 + C52054 * C10712) *
                         C79308 * C79306 * C79262) *
                        C4921 +
                    ((C52394 * C3931 + C56029 + C56029 + C52053 * C4827 +
                      C52395 * C6042 + C56030 + C56030 + C52054 * C6718) *
                         C79308 * C79306 * C79287 -
                     (C52395 * C3931 + C53073 + C53073 + C52054 * C4827 +
                      C52394 * C749 + C53074 + C53074 + C52053 * C1565) *
                         C79308 * C79306 * C79301 -
                     (C52395 * C12365 + C57808 + C57808 + C52054 * C12921 +
                      C52394 * C6042 + C57809 + C57809 + C52053 * C6718) *
                         C79308 * C79306 * C79262) *
                        C4922 +
                    ((C52394 * C750 + C53075 + C53075 + C52053 * C1566 +
                      C52395 * C6044 + C53076 + C53076 + C52054 * C6720) *
                         C79308 * C79306 * C79301 -
                     (C52395 * C6045 + C57810 + C57810 + C52054 * C6721 +
                      C52394 * C6044 + C57811 + C57811 + C52053 * C6720) *
                         C79308 * C79306 * C79287 +
                     (C52394 * C6045 + C57812 + C57812 + C52053 * C6721 +
                      C52395 * C37933 + C57813 + C57813 + C52054 * C38504) *
                         C79308 * C79306 * C79262) *
                        C79259) *
                   C78981) /
                      (p * q * std::sqrt(p + q)) -
                  (std::pow(Pi, 2.5) *
                   (((C52394 * C96 + C52397 + C52397 + C52053 * C632 +
                      C52395 * C1682 + C52398 + C52398 + C52054 * C2498) *
                         C79308 * C79306 * C9011 -
                     (C52395 * C1683 + C53894 + C53894 + C52054 * C2499 +
                      C52394 * C1682 + C53895 + C53895 + C52053 * C2498) *
                         C79308 * C79306 * C9012 +
                     (C52394 * C1683 + C53896 + C53896 + C52053 * C2499 +
                      C52395 * C10320 + C53897 + C53897 + C52054 * C10712) *
                         C79308 * C79306 * C79262) *
                        C79009 * C79297 +
                    ((C52394 * C1681 + C53898 + C53898 + C52053 * C2497 +
                      C52395 * C1684 + C53899 + C53899 + C52054 * C2500) *
                         C79308 * C79306 * C9012 -
                     (C52395 * C1681 + C52399 + C52399 + C52054 * C2497 +
                      C52394 * C97 + C52400 + C52400 + C52053 * C633) *
                         C79308 * C79306 * C9011 -
                     (C52395 * C10319 + C53900 + C53900 + C52054 * C10711 +
                      C52394 * C1684 + C53901 + C53901 + C52053 * C2500) *
                         C79308 * C79306 * C79262) *
                        C79009 * C79281 +
                    ((C52394 * C98 + C52401 + C52401 + C52053 * C634 +
                      C52395 * C1685 + C52402 + C52402 + C52054 * C2501) *
                         C79308 * C79306 * C9011 -
                     (C52395 * C1686 + C53902 + C53902 + C52054 * C2502 +
                      C52394 * C1685 + C53903 + C53903 + C52053 * C2501) *
                         C79308 * C79306 * C9012 +
                     (C52394 * C1686 + C53904 + C53904 + C52053 * C2502 +
                      C52395 * C11721 + C53905 + C53905 + C52054 * C12291) *
                         C79308 * C79306 * C79262) *
                        C79009 * C79253)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::pow(Pi, 2.5) *
                   (((C52394 * C96 + C52397 + C52397 + C52053 * C632 +
                      C52395 * C1682 + C52398 + C52398 + C52054 * C2498) *
                         C79308 * C79306 * C9011 -
                     (C52395 * C1683 + C53894 + C53894 + C52054 * C2499 +
                      C52394 * C1682 + C53895 + C53895 + C52053 * C2498) *
                         C79308 * C79306 * C9012 +
                     (C52394 * C1683 + C53896 + C53896 + C52053 * C2499 +
                      C52395 * C10320 + C53897 + C53897 + C52054 * C10712) *
                         C79308 * C79306 * C79262) *
                        C79300 +
                    ((C52394 * C3931 + C56029 + C56029 + C52053 * C4827 +
                      C52395 * C6042 + C56030 + C56030 + C52054 * C6718) *
                         C79308 * C79306 * C9012 -
                     (C52395 * C3931 + C53073 + C53073 + C52054 * C4827 +
                      C52394 * C749 + C53074 + C53074 + C52053 * C1565) *
                         C79308 * C79306 * C9011 -
                     (C52395 * C12365 + C57808 + C57808 + C52054 * C12921 +
                      C52394 * C6042 + C57809 + C57809 + C52053 * C6718) *
                         C79308 * C79306 * C79262) *
                        C79285 +
                    ((C52394 * C750 + C53075 + C53075 + C52053 * C1566 +
                      C52395 * C6044 + C53076 + C53076 + C52054 * C6720) *
                         C79308 * C79306 * C9011 -
                     (C52395 * C6045 + C57810 + C57810 + C52054 * C6721 +
                      C52394 * C6044 + C57811 + C57811 + C52053 * C6720) *
                         C79308 * C79306 * C9012 +
                     (C52394 * C6045 + C57812 + C57812 + C52053 * C6721 +
                      C52395 * C37933 + C57813 + C57813 + C52054 * C38504) *
                         C79308 * C79306 * C79262) *
                        C79259) *
                   C78981) /
                      (p * q * std::sqrt(p + q)) +
                  (2 * std::pow(Pi, 2.5) *
                   ((C52394 * C96 + C52397 + C52397 + C52053 * C632 +
                     C52395 * C1682 + C52398 + C52398 + C52054 * C2498) *
                        C79308 * C79306 * C10314 -
                    (C52395 * C1683 + C53894 + C53894 + C52054 * C2499 +
                     C52394 * C1682 + C53895 + C53895 + C52053 * C2498) *
                        C79308 * C79306 * C10315 +
                    (C52394 * C1683 + C53896 + C53896 + C52053 * C2499 +
                     C52395 * C10320 + C53897 + C53897 + C52054 * C10712) *
                        C79308 * C79306 * C10316 -
                    (C52395 * C10321 + C61706 + C61706 + C52054 * C10713 +
                     C52394 * C10320 + C61707 + C61707 + C52053 * C10712) *
                        C79308 * C79306 * C10317 +
                    (C52394 * C10321 + C61708 + C61708 + C52053 * C10713 +
                     C52395 * C61288 + C61709 + C61709 + C52054 * C61704) *
                        C79308 * C79306 * C10318) *
                   C79009 * C78981) /
                      (p * q * std::sqrt(p + q));
    d2eexx[63] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C52053 +
             C53184 * C52054) *
                C79308 * C79230 -
            (C53185 * C52054 + C53184 * C52053) * C79308 * C79114) *
               C4921 +
           ((C29703 * C52053 + C31774 * C52054) * C79308 * C79114 -
            (C29703 * C52054 + C26964 * C52053) * C79308 * C79230) *
               C4922 +
           ((C26965 * C52053 + C31775 * C52054) * C79308 * C79230 -
            (C31776 * C52054 + C31775 * C52053) * C79308 * C79114) *
               C79259) *
              C79215 +
          (((C53186 * C52053 + C53187 * C52054) * C79308 * C79114 -
            (C53186 * C52054 +
             (C26497 * C97 + C26503 + C26503 + C79306 * C109) * C52053) *
                C79308 * C79230) *
               C4921 +
           ((C26966 * C52053 + C29704 * C52054) * C79308 * C79230 -
            (C36469 * C52054 + C29704 * C52053) * C79308 * C79114) *
               C4922 +
           ((C33189 * C52053 +
             (C26497 * C6046 + C36466 + C36466 + C79306 * C6058) * C52054) *
                C79308 * C79114 -
            (C33189 * C52054 + C26967 * C52053) * C79308 * C79230) *
               C79259) *
              C78992)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C52053 +
            C53184 * C52054) *
               C79308 * C79230 -
           (C53185 * C52054 + C53184 * C52053) * C79308 * C79114) *
              C79009 * C2605 +
          ((C53186 * C52053 + C53187 * C52054) * C79308 * C79114 -
           (C53186 * C52054 +
            (C26497 * C97 + C26503 + C26503 + C79306 * C109) * C52053) *
               C79308 * C79230) *
              C79009 * C2606 +
          (((C26497 * C98 + C26504 + C26504 + C79306 * C110) * C52053 +
            C53188 * C52054) *
               C79308 * C79230 -
           (C53189 * C52054 + C53188 * C52053) * C79308 * C79114) *
              C79009 * C2607 +
          ((C54573 * C52053 +
            (C26497 * C1688 + C54570 + C54570 + C79306 * C1704) * C52054) *
               C79308 * C79114 -
           (C54573 * C52054 +
            (C26497 * C99 + C26507 + C26507 + C79306 * C111) * C52053) *
               C79308 * C79230) *
              C79009 * C79263)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C52053 +
            C53184 * C52054) *
               C79308 * C11717 -
           (C53185 * C52054 + C53184 * C52053) * C79308 * C11718 +
           (C53185 * C52053 + C61301 * C52054) * C79308 * C11719 -
           (C61302 * C52054 + C61301 * C52053) * C79308 * C79275) *
              C79009 * C79215 +
          ((C53186 * C52053 + C53187 * C52054) * C79308 * C11718 -
           (C53186 * C52054 +
            (C26497 * C97 + C26503 + C26503 + C79306 * C109) * C52053) *
               C79308 * C11717 -
           (C62670 * C52054 + C53187 * C52053) * C79308 * C11719 +
           (C62670 * C52053 +
            (C26497 * C10322 + C62667 + C62667 + C79306 * C10330) * C52054) *
               C79308 * C79275) *
              C79009 * C78992)) /
            (p * q * std::sqrt(p + q));
    d2eexy[63] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C166 * C96 + C79308 * C167) * C26498 +
              (C166 * C102 + C79308 * C173) * C79306) *
                 C52053 +
             (C53284 + C53285) * C52054) *
                C79230 -
            ((C53286 + C53287) * C52054 + (C53285 + C53284) * C52053) *
                C79114) *
               C4921 +
           (((C55324 + C55325) * C52053 + (C57250 + C57251) * C52054) * C79114 -
            ((C55325 + C55324) * C52054 +
             ((C166 * C757 + C79308 * C867) * C79306 +
              (C166 * C749 + C79308 * C859) * C26498) *
                 C52053) *
                C79230) *
               C4922 +
           ((((C166 * C750 + C79308 * C860) * C26498 +
              (C166 * C758 + C79308 * C868) * C79306) *
                 C52053 +
             (C57252 + C57253) * C52054) *
                C79230 -
            ((C57254 + C57255) * C52054 + (C57253 + C57252) * C52053) *
                C79114) *
               C79259) *
              C79215 +
          ((((C53272 + C53273) * C52053 + (C53274 + C53275) * C52054) * C79114 -
            ((C53273 + C53272) * C52054 +
             (C197 * C79306 + C196 * C26498) * C52053) *
                C79230) *
               C4921 +
           (((C892 * C26498 + C891 * C79306) * C52053 +
             (C55318 + C55319) * C52054) *
                C79230 -
            ((C10927 * C79306 + C10928 * C26498) * C52054 +
             (C55319 + C55318) * C52053) *
                C79114) *
               C4922 +
           (((C58606 + C58607) * C52053 +
             ((C166 * C6046 + C79308 * C6144) * C26498 +
              (C166 * C6052 + C79308 * C6150) * C79306) *
                 C52054) *
                C79114 -
            ((C58607 + C58606) * C52054 +
             (C894 * C79306 + C893 * C26498) * C52053) *
                C79230) *
               C79259) *
              C78992)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C166 * C96 + C79308 * C167) * C26498 +
             (C166 * C102 + C79308 * C173) * C79306) *
                C52053 +
            (C53284 + C53285) * C52054) *
               C79230 -
           ((C53286 + C53287) * C52054 + (C53285 + C53284) * C52053) * C79114) *
              C79009 * C2605 +
          (((C53272 + C53273) * C52053 + (C53274 + C53275) * C52054) * C79114 -
           ((C53273 + C53272) * C52054 +
            (C197 * C79306 + C196 * C26498) * C52053) *
               C79230) *
              C79009 * C2606 +
          (((C199 * C26498 + C198 * C79306) * C52053 +
            (C53276 + C53277) * C52054) *
               C79230 -
           ((C53278 + C53279) * C52054 + (C53277 + C53276) * C52053) * C79114) *
              C79009 * C2607 +
          (((C54640 + C54641) * C52053 +
            ((C166 * C1688 + C79308 * C1798) * C26498 +
             (C166 * C1696 + C79308 * C1806) * C79306) *
                C52054) *
               C79114 -
           ((C54641 + C54640) * C52054 +
            (C201 * C79306 + C200 * C26498) * C52053) *
               C79230) *
              C79009 * C79263)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C166 * C96 + C79308 * C167) * C26498 +
             (C166 * C102 + C79308 * C173) * C79306) *
                C52053 +
            (C53284 + C53285) * C52054) *
               C11717 -
           ((C53286 + C53287) * C52054 + (C53285 + C53284) * C52053) * C11718 +
           ((C53287 + C53286) * C52053 + (C61359 + C61360) * C52054) * C11719 -
           ((C61361 + C61362) * C52054 + (C61360 + C61359) * C52053) * C79275) *
              C79009 * C79215 +
          (((C53272 + C53273) * C52053 + (C53274 + C53275) * C52054) * C11718 -
           ((C53273 + C53272) * C52054 +
            (C197 * C79306 + C196 * C26498) * C52053) *
               C11717 -
           ((C62737 + C62738) * C52054 + (C53275 + C53274) * C52053) * C11719 +
           ((C62738 + C62737) * C52053 +
            ((C166 * C10322 + C79308 * C10380) * C26498 +
             (C166 * C10326 + C79308 * C10384) * C79306) *
                C52054) *
               C79275) *
              C79009 * C78992)) /
            (p * q * std::sqrt(p + q));
    d2eexz[63] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
                 C26498 +
             (C52140 * C102 + C52053 * C252 + C52141 * C1690 + C52054 * C1914) *
                 C79306) *
                C79308 * C79230 -
            ((C52141 * C1691 + C52054 * C1915 + C52140 * C1690 +
              C52053 * C1914) *
                 C79306 +
             (C52141 * C1683 + C52054 * C1907 + C52140 * C1682 +
              C52053 * C1906) *
                 C26498) *
                C79308 * C79114) *
               C4921 +
           (((C52140 * C3931 + C52053 * C4165 + C52141 * C6042 +
              C52054 * C6226) *
                 C26498 +
             (C52140 * C3935 + C52053 * C4169 + C52141 * C6048 +
              C52054 * C6232) *
                 C79306) *
                C79308 * C79114 -
            ((C52141 * C3935 + C52054 * C4169 + C52140 * C757 + C52053 * C981) *
                 C79306 +
             (C52141 * C3931 + C52054 * C4165 + C52140 * C749 + C52053 * C973) *
                 C26498) *
                C79308 * C79230) *
               C4922 +
           (((C52140 * C750 + C52053 * C974 + C52141 * C6044 + C52054 * C6228) *
                 C26498 +
             (C52140 * C758 + C52053 * C982 + C52141 * C6050 + C52054 * C6234) *
                 C79306) *
                C79308 * C79230 -
            ((C52141 * C6051 + C52054 * C6235 + C52140 * C6050 +
              C52053 * C6234) *
                 C79306 +
             (C52141 * C6045 + C52054 * C6229 + C52140 * C6044 +
              C52053 * C6228) *
                 C26498) *
                C79308 * C79114) *
               C79259) *
              C79215 +
          ((((C52140 * C1681 + C52053 * C1905 + C52141 * C1684 +
              C52054 * C1908) *
                 C26498 +
             (C52140 * C1689 + C52053 * C1913 + C52141 * C1692 +
              C52054 * C1916) *
                 C79306) *
                C79308 * C79114 -
            ((C52141 * C1689 + C52054 * C1913 + C52140 * C103 + C52053 * C253) *
                 C79306 +
             (C52141 * C1681 + C52054 * C1905 + C52140 * C97 + C52053 * C247) *
                 C26498) *
                C79308 * C79230) *
               C4921 +
           (((C52140 * C748 + C52053 * C972 + C52141 * C3932 + C52054 * C4166) *
                 C26498 +
             (C52140 * C756 + C52053 * C980 + C52141 * C3936 + C52054 * C4170) *
                 C79306) *
                C79308 * C79230 -
            ((C52141 * C6047 + C52054 * C6231 + C52140 * C3936 +
              C52053 * C4170) *
                 C79306 +
             (C52141 * C6041 + C52054 * C6225 + C52140 * C3932 +
              C52053 * C4166) *
                 C26498) *
                C79308 * C79114) *
               C4922 +
           (((C52140 * C6043 + C52053 * C6227 + C52141 * C6046 +
              C52054 * C6230) *
                 C26498 +
             (C52140 * C6049 + C52053 * C6233 + C52141 * C6052 +
              C52054 * C6236) *
                 C79306) *
                C79308 * C79114 -
            ((C52141 * C6049 + C52054 * C6233 + C52140 * C759 + C52053 * C983) *
                 C79306 +
             (C52141 * C6043 + C52054 * C6227 + C52140 * C751 + C52053 * C975) *
                 C26498) *
                C79308 * C79230) *
               C79259) *
              C78992)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
                C26498 +
            (C52140 * C102 + C52053 * C252 + C52141 * C1690 + C52054 * C1914) *
                C79306) *
               C79308 * C79230 -
           ((C52141 * C1691 + C52054 * C1915 + C52140 * C1690 +
             C52053 * C1914) *
                C79306 +
            (C52141 * C1683 + C52054 * C1907 + C52140 * C1682 +
             C52053 * C1906) *
                C26498) *
               C79308 * C79114) *
              C79009 * C2605 +
          (((C52140 * C1681 + C52053 * C1905 + C52141 * C1684 +
             C52054 * C1908) *
                C26498 +
            (C52140 * C1689 + C52053 * C1913 + C52141 * C1692 +
             C52054 * C1916) *
                C79306) *
               C79308 * C79114 -
           ((C52141 * C1689 + C52054 * C1913 + C52140 * C103 + C52053 * C253) *
                C79306 +
            (C52141 * C1681 + C52054 * C1905 + C52140 * C97 + C52053 * C247) *
                C26498) *
               C79308 * C79230) *
              C79009 * C2606 +
          (((C52140 * C98 + C52053 * C248 + C52141 * C1685 + C52054 * C1909) *
                C26498 +
            (C52140 * C104 + C52053 * C254 + C52141 * C1693 + C52054 * C1917) *
                C79306) *
               C79308 * C79230 -
           ((C52141 * C1694 + C52054 * C1918 + C52140 * C1693 +
             C52053 * C1917) *
                C79306 +
            (C52141 * C1686 + C52054 * C1910 + C52140 * C1685 +
             C52053 * C1909) *
                C26498) *
               C79308 * C79114) *
              C79009 * C2607 +
          (((C52140 * C1687 + C52053 * C1911 + C52141 * C1688 +
             C52054 * C1912) *
                C26498 +
            (C52140 * C1695 + C52053 * C1919 + C52141 * C1696 +
             C52054 * C1920) *
                C79306) *
               C79308 * C79114 -
           ((C52141 * C1695 + C52054 * C1919 + C52140 * C105 + C52053 * C255) *
                C79306 +
            (C52141 * C1687 + C52054 * C1911 + C52140 * C99 + C52053 * C249) *
                C26498) *
               C79308 * C79230) *
              C79009 * C79263)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
                C26498 +
            (C52140 * C102 + C52053 * C252 + C52141 * C1690 + C52054 * C1914) *
                C79306) *
               C79308 * C11717 -
           ((C52141 * C1691 + C52054 * C1915 + C52140 * C1690 +
             C52053 * C1914) *
                C79306 +
            (C52141 * C1683 + C52054 * C1907 + C52140 * C1682 +
             C52053 * C1906) *
                C26498) *
               C79308 * C11718 +
           ((C52140 * C1683 + C52053 * C1907 + C52141 * C10320 +
             C52054 * C10428) *
                C26498 +
            (C52140 * C1691 + C52053 * C1915 + C52141 * C10324 +
             C52054 * C10432) *
                C79306) *
               C79308 * C11719 -
           ((C52141 * C10325 + C52054 * C10433 + C52140 * C10324 +
             C52053 * C10432) *
                C79306 +
            (C52141 * C10321 + C52054 * C10429 + C52140 * C10320 +
             C52053 * C10428) *
                C26498) *
               C79308 * C79275) *
              C79009 * C79215 +
          (((C52140 * C1681 + C52053 * C1905 + C52141 * C1684 +
             C52054 * C1908) *
                C26498 +
            (C52140 * C1689 + C52053 * C1913 + C52141 * C1692 +
             C52054 * C1916) *
                C79306) *
               C79308 * C11718 -
           ((C52141 * C1689 + C52054 * C1913 + C52140 * C103 + C52053 * C253) *
                C79306 +
            (C52141 * C1681 + C52054 * C1905 + C52140 * C97 + C52053 * C247) *
                C26498) *
               C79308 * C11717 -
           ((C52141 * C10323 + C52054 * C10431 + C52140 * C1692 +
             C52053 * C1916) *
                C79306 +
            (C52141 * C10319 + C52054 * C10427 + C52140 * C1684 +
             C52053 * C1908) *
                C26498) *
               C79308 * C11719 +
           ((C52140 * C10319 + C52053 * C10427 + C52141 * C10322 +
             C52054 * C10430) *
                C26498 +
            (C52140 * C10323 + C52053 * C10431 + C52141 * C10326 +
             C52054 * C10434) *
                C79306) *
               C79308 * C79275) *
              C79009 * C78992)) /
            (p * q * std::sqrt(p + q));
    d2eeyx[63] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C26498 * C96 + C79306 * C102) * C166 +
              (C26498 * C167 + C79306 * C324) * C79308) *
                 C52053 +
             (C53472 + C53473) * C52054) *
                C79230 -
            ((C53474 + C53475) * C52054 + (C53473 + C53472) * C52053) *
                C79114) *
               C4921 +
           (((C55522 + C55523) * C52053 + (C57404 + C57405) * C52054) * C79114 -
            ((C55523 + C55522) * C52054 +
             (C27247 * C79308 + C27246 * C166) * C52053) *
                C79230) *
               C4922 +
           (((C27249 * C166 + C27248 * C79308) * C52053 +
             (C57406 + C57407) * C52054) *
                C79230 -
            ((C57408 + C57409) * C52054 + (C57407 + C57406) * C52053) *
                C79114) *
               C79259) *
              C79215 +
          ((((C53476 + C53477) * C52053 + (C53478 + C53479) * C52054) * C79114 -
            ((C53477 + C53476) * C52054 +
             ((C26498 * C168 + C79306 * C325) * C79308 +
              (C26498 * C97 + C79306 * C103) * C166) *
                 C52053) *
                C79230) *
               C4921 +
           (((C27250 * C166 + C27251 * C79308) * C52053 +
             (C55524 + C55525) * C52054) *
                C79230 -
            ((C36771 * C79308 + C36772 * C166) * C52054 +
             (C55525 + C55524) * C52053) *
                C79114) *
               C4922 +
           (((C58804 + C58805) * C52053 +
             ((C26498 * C6046 + C79306 * C6052) * C166 +
              (C26498 * C6144 + C79306 * C6316) * C79308) *
                 C52054) *
                C79114 -
            ((C58805 + C58804) * C52054 +
             (C27253 * C79308 + C27252 * C166) * C52053) *
                C79230) *
               C79259) *
              C78992)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C26498 * C96 + C79306 * C102) * C166 +
             (C26498 * C167 + C79306 * C324) * C79308) *
                C52053 +
            (C53472 + C53473) * C52054) *
               C79230 -
           ((C53474 + C53475) * C52054 + (C53473 + C53472) * C52053) * C79114) *
              C79009 * C2605 +
          (((C53476 + C53477) * C52053 + (C53478 + C53479) * C52054) * C79114 -
           ((C53477 + C53476) * C52054 +
            ((C26498 * C168 + C79306 * C325) * C79308 +
             (C26498 * C97 + C79306 * C103) * C166) *
                C52053) *
               C79230) *
              C79009 * C2606 +
          ((((C26498 * C98 + C79306 * C104) * C166 +
             (C26498 * C169 + C79306 * C326) * C79308) *
                C52053 +
            (C53480 + C53481) * C52054) *
               C79230 -
           ((C53482 + C53483) * C52054 + (C53481 + C53480) * C52053) * C79114) *
              C79009 * C2607 +
          (((C54780 + C54781) * C52053 +
            ((C26498 * C1688 + C79306 * C1696) * C166 +
             (C26498 * C1798 + C79306 * C2026) * C79308) *
                C52054) *
               C79114 -
           ((C54781 + C54780) * C52054 +
            ((C26498 * C170 + C79306 * C327) * C79308 +
             (C26498 * C99 + C79306 * C105) * C166) *
                C52053) *
               C79230) *
              C79009 * C79263)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C26498 * C96 + C79306 * C102) * C166 +
             (C26498 * C167 + C79306 * C324) * C79308) *
                C52053 +
            (C53472 + C53473) * C52054) *
               C11717 -
           ((C53474 + C53475) * C52054 + (C53473 + C53472) * C52053) * C11718 +
           ((C53475 + C53474) * C52053 + (C61462 + C61463) * C52054) * C11719 -
           ((C61464 + C61465) * C52054 + (C61463 + C61462) * C52053) * C79275) *
              C79009 * C79215 +
          (((C53476 + C53477) * C52053 + (C53478 + C53479) * C52054) * C11718 -
           ((C53477 + C53476) * C52054 +
            ((C26498 * C168 + C79306 * C325) * C79308 +
             (C26498 * C97 + C79306 * C103) * C166) *
                C52053) *
               C11717 -
           ((C62877 + C62878) * C52054 + (C53479 + C53478) * C52053) * C11719 +
           ((C62878 + C62877) * C52053 +
            ((C26498 * C10322 + C79306 * C10326) * C166 +
             (C26498 * C10380 + C79306 * C10480) * C79308) *
                C52054) *
               C79275) *
              C79009 * C78992)) /
            (p * q * std::sqrt(p + q));
    d2eeyy[63] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C372 * C96 + C380 + C380 + C79308 * C373) * C79306 * C52053 +
             C53572 * C52054) *
                C79230 -
            (C53573 * C52054 + C53572 * C52053) * C79114) *
               C4921 +
           ((C55633 * C52053 + C57500 * C52054) * C79114 -
            (C55633 * C52054 +
             (C372 * C749 + C1180 + C1180 + C79308 * C1169) * C79306 * C52053) *
                C79230) *
               C4922 +
           (((C372 * C750 + C1181 + C1181 + C79308 * C1170) * C79306 * C52053 +
             C57501 * C52054) *
                C79230 -
            (C57502 * C52054 + C57501 * C52053) * C79114) *
               C79259) *
              C79215 +
          (((C53562 * C52053 + C53563 * C52054) * C79114 -
            (C53562 * C52054 + C402 * C79306 * C52053) * C79230) *
               C4921 +
           ((C1201 * C79306 * C52053 + C55628 * C52054) * C79230 -
            (C11238 * C79306 * C52054 + C55628 * C52053) * C79114) *
               C4922 +
           ((C58904 * C52053 + (C372 * C6046 + C6403 + C6403 + C79308 * C6396) *
                                   C79306 * C52054) *
                C79114 -
            (C58904 * C52054 + C1202 * C79306 * C52053) * C79230) *
               C79259) *
              C78992)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C372 * C96 + C380 + C380 + C79308 * C373) * C79306 * C52053 +
            C53572 * C52054) *
               C79230 -
           (C53573 * C52054 + C53572 * C52053) * C79114) *
              C79009 * C2605 +
          ((C53562 * C52053 + C53563 * C52054) * C79114 -
           (C53562 * C52054 + C402 * C79306 * C52053) * C79230) *
              C79009 * C2606 +
          ((C403 * C79306 * C52053 + C53564 * C52054) * C79230 -
           (C53565 * C52054 + C53564 * C52053) * C79114) *
              C79009 * C2607 +
          ((C54848 * C52053 +
            (C372 * C1688 + C2125 + C2125 + C79308 * C2108) * C79306 * C52054) *
               C79114 -
           (C54848 * C52054 + C404 * C79306 * C52053) * C79230) *
              C79009 * C79263)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C372 * C96 + C380 + C380 + C79308 * C373) * C79306 * C52053 +
            C53572 * C52054) *
               C11717 -
           (C53573 * C52054 + C53572 * C52053) * C11718 +
           (C53573 * C52053 + C61520 * C52054) * C11719 -
           (C61521 * C52054 + C61520 * C52053) * C79275) *
              C79009 * C79215 +
          ((C53562 * C52053 + C53563 * C52054) * C11718 -
           (C53562 * C52054 + C402 * C79306 * C52053) * C11717 -
           (C62945 * C52054 + C53563 * C52053) * C11719 +
           (C62945 * C52053 +
            (C372 * C10322 + C10531 + C10531 + C79308 * C10526) * C79306 *
                C52054) *
               C79275) *
              C79009 * C78992)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[63] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
                 C166 +
             (C52140 * C167 + C52053 * C447 + C52141 * C1792 + C52054 * C2212) *
                 C79308) *
                C79306 * C79230 -
            ((C52141 * C1793 + C52054 * C2213 + C52140 * C1792 +
              C52053 * C2212) *
                 C79308 +
             (C52141 * C1683 + C52054 * C1907 + C52140 * C1682 +
              C52053 * C1906) *
                 C166) *
                C79306 * C79114) *
               C4921 +
           (((C52140 * C3931 + C52053 * C4165 + C52141 * C6042 +
              C52054 * C6226) *
                 C166 +
             (C52140 * C4047 + C52053 * C4501 + C52141 * C6140 +
              C52054 * C6478) *
                 C79308) *
                C79306 * C79114 -
            ((C52141 * C4047 + C52054 * C4501 + C52140 * C859 +
              C52053 * C1279) *
                 C79308 +
             (C52141 * C3931 + C52054 * C4165 + C52140 * C749 + C52053 * C973) *
                 C166) *
                C79306 * C79230) *
               C4922 +
           (((C52140 * C750 + C52053 * C974 + C52141 * C6044 + C52054 * C6228) *
                 C166 +
             (C52140 * C860 + C52053 * C1280 + C52141 * C6142 +
              C52054 * C6480) *
                 C79308) *
                C79306 * C79230 -
            ((C52141 * C6143 + C52054 * C6481 + C52140 * C6142 +
              C52053 * C6480) *
                 C79308 +
             (C52141 * C6045 + C52054 * C6229 + C52140 * C6044 +
              C52053 * C6228) *
                 C166) *
                C79306 * C79114) *
               C79259) *
              C79215 +
          ((((C52140 * C1681 + C52053 * C1905 + C52141 * C1684 +
              C52054 * C1908) *
                 C166 +
             (C52140 * C1791 + C52053 * C2211 + C52141 * C1794 +
              C52054 * C2214) *
                 C79308) *
                C79306 * C79114 -
            ((C52141 * C1791 + C52054 * C2211 + C52140 * C168 + C52053 * C448) *
                 C79308 +
             (C52141 * C1681 + C52054 * C1905 + C52140 * C97 + C52053 * C247) *
                 C166) *
                C79306 * C79230) *
               C4921 +
           (((C52140 * C748 + C52053 * C972 + C52141 * C3932 + C52054 * C4166) *
                 C166 +
             (C52140 * C858 + C52053 * C1278 + C52141 * C4048 +
              C52054 * C4502) *
                 C79308) *
                C79306 * C79230 -
            ((C52141 * C6139 + C52054 * C6477 + C52140 * C4048 +
              C52053 * C4502) *
                 C79308 +
             (C52141 * C6041 + C52054 * C6225 + C52140 * C3932 +
              C52053 * C4166) *
                 C166) *
                C79306 * C79114) *
               C4922 +
           (((C52140 * C6043 + C52053 * C6227 + C52141 * C6046 +
              C52054 * C6230) *
                 C166 +
             (C52140 * C6141 + C52053 * C6479 + C52141 * C6144 +
              C52054 * C6482) *
                 C79308) *
                C79306 * C79114 -
            ((C52141 * C6141 + C52054 * C6479 + C52140 * C861 +
              C52053 * C1281) *
                 C79308 +
             (C52141 * C6043 + C52054 * C6227 + C52140 * C751 + C52053 * C975) *
                 C166) *
                C79306 * C79230) *
               C79259) *
              C78992)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
                C166 +
            (C52140 * C167 + C52053 * C447 + C52141 * C1792 + C52054 * C2212) *
                C79308) *
               C79306 * C79230 -
           ((C52141 * C1793 + C52054 * C2213 + C52140 * C1792 +
             C52053 * C2212) *
                C79308 +
            (C52141 * C1683 + C52054 * C1907 + C52140 * C1682 +
             C52053 * C1906) *
                C166) *
               C79306 * C79114) *
              C79009 * C2605 +
          (((C52140 * C1681 + C52053 * C1905 + C52141 * C1684 +
             C52054 * C1908) *
                C166 +
            (C52140 * C1791 + C52053 * C2211 + C52141 * C1794 +
             C52054 * C2214) *
                C79308) *
               C79306 * C79114 -
           ((C52141 * C1791 + C52054 * C2211 + C52140 * C168 + C52053 * C448) *
                C79308 +
            (C52141 * C1681 + C52054 * C1905 + C52140 * C97 + C52053 * C247) *
                C166) *
               C79306 * C79230) *
              C79009 * C2606 +
          (((C52140 * C98 + C52053 * C248 + C52141 * C1685 + C52054 * C1909) *
                C166 +
            (C52140 * C169 + C52053 * C449 + C52141 * C1795 + C52054 * C2215) *
                C79308) *
               C79306 * C79230 -
           ((C52141 * C1796 + C52054 * C2216 + C52140 * C1795 +
             C52053 * C2215) *
                C79308 +
            (C52141 * C1686 + C52054 * C1910 + C52140 * C1685 +
             C52053 * C1909) *
                C166) *
               C79306 * C79114) *
              C79009 * C2607 +
          (((C52140 * C1687 + C52053 * C1911 + C52141 * C1688 +
             C52054 * C1912) *
                C166 +
            (C52140 * C1797 + C52053 * C2217 + C52141 * C1798 +
             C52054 * C2218) *
                C79308) *
               C79306 * C79114 -
           ((C52141 * C1797 + C52054 * C2217 + C52140 * C170 + C52053 * C450) *
                C79308 +
            (C52141 * C1687 + C52054 * C1911 + C52140 * C99 + C52053 * C249) *
                C166) *
               C79306 * C79230) *
              C79009 * C79263)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
                C166 +
            (C52140 * C167 + C52053 * C447 + C52141 * C1792 + C52054 * C2212) *
                C79308) *
               C79306 * C11717 -
           ((C52141 * C1793 + C52054 * C2213 + C52140 * C1792 +
             C52053 * C2212) *
                C79308 +
            (C52141 * C1683 + C52054 * C1907 + C52140 * C1682 +
             C52053 * C1906) *
                C166) *
               C79306 * C11718 +
           ((C52140 * C1683 + C52053 * C1907 + C52141 * C10320 +
             C52054 * C10428) *
                C166 +
            (C52140 * C1793 + C52053 * C2213 + C52141 * C10378 +
             C52054 * C10574) *
                C79308) *
               C79306 * C11719 -
           ((C52141 * C10379 + C52054 * C10575 + C52140 * C10378 +
             C52053 * C10574) *
                C79308 +
            (C52141 * C10321 + C52054 * C10429 + C52140 * C10320 +
             C52053 * C10428) *
                C166) *
               C79306 * C79275) *
              C79009 * C79215 +
          (((C52140 * C1681 + C52053 * C1905 + C52141 * C1684 +
             C52054 * C1908) *
                C166 +
            (C52140 * C1791 + C52053 * C2211 + C52141 * C1794 +
             C52054 * C2214) *
                C79308) *
               C79306 * C11718 -
           ((C52141 * C1791 + C52054 * C2211 + C52140 * C168 + C52053 * C448) *
                C79308 +
            (C52141 * C1681 + C52054 * C1905 + C52140 * C97 + C52053 * C247) *
                C166) *
               C79306 * C11717 -
           ((C52141 * C10377 + C52054 * C10573 + C52140 * C1794 +
             C52053 * C2214) *
                C79308 +
            (C52141 * C10319 + C52054 * C10427 + C52140 * C1684 +
             C52053 * C1908) *
                C166) *
               C79306 * C11719 +
           ((C52140 * C10319 + C52053 * C10427 + C52141 * C10322 +
             C52054 * C10430) *
                C166 +
            (C52140 * C10377 + C52053 * C10573 + C52141 * C10380 +
             C52054 * C10576) *
                C79308) *
               C79306 * C79275) *
              C79009 * C78992)) /
            (p * q * std::sqrt(p + q));
    d2eezx[63] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((((C26498 * C96 + C79306 * C102) * C52140 +
                       (C26498 * C246 + C79306 * C515) * C52053 +
                       C53460 * C52141 + C53734 * C52054) *
                          C79308 * C79230 -
                      (C53735 * C52054 + C53463 * C52141 + C53734 * C52053 +
                       C53460 * C52140) *
                          C79308 * C79114) *
                         C4921 +
                     ((C30028 * C52140 + C30345 * C52053 + C32043 * C52141 +
                       C32298 * C52054) *
                          C79308 * C79114 -
                      (C30345 * C52054 + C30028 * C52141 + C27516 * C52053 +
                       C27246 * C52140) *
                          C79308 * C79230) *
                         C4922 +
                     ((C27249 * C52140 + C27517 * C52053 + C32045 * C52141 +
                       C32299 * C52054) *
                          C79308 * C79230 -
                      (C32300 * C52054 + C32048 * C52141 + C32299 * C52053 +
                       C32045 * C52140) *
                          C79308 * C79114) *
                         C79259) *
                        C79215 +
                    (((C53464 * C52140 + C53736 * C52053 + C53466 * C52141 +
                       C53737 * C52054) *
                          C79308 * C79114 -
                      (C53736 * C52054 + C53464 * C52141 +
                       (C26498 * C247 + C79306 * C516) * C52053 +
                       (C26498 * C97 + C79306 * C103) * C52140) *
                          C79308 * C79230) *
                         C4921 +
                     ((C27250 * C52140 + C27518 * C52053 + C30029 * C52141 +
                       C30346 * C52054) *
                          C79308 * C79230 -
                      (C37072 * C52054 + C36772 * C52141 + C30346 * C52053 +
                       C30029 * C52140) *
                          C79308 * C79114) *
                         C4922 +
                     ((C33492 * C52140 + C33792 * C52053 +
                       (C26498 * C6046 + C79306 * C6052) * C52141 +
                       (C26498 * C6230 + C79306 * C6562) * C52054) *
                          C79308 * C79114 -
                      (C33792 * C52054 + C33492 * C52141 + C27519 * C52053 +
                       C27252 * C52140) *
                          C79308 * C79230) *
                         C79259) *
                        C78992)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C26498 * C96 + C79306 * C102) * C52140 +
                      (C26498 * C246 + C79306 * C515) * C52053 +
                      C53460 * C52141 + C53734 * C52054) *
                         C79308 * C79230 -
                     (C53735 * C52054 + C53463 * C52141 + C53734 * C52053 +
                      C53460 * C52140) *
                         C79308 * C79114) *
                        C79009 * C2605 +
                    ((C53464 * C52140 + C53736 * C52053 + C53466 * C52141 +
                      C53737 * C52054) *
                         C79308 * C79114 -
                     (C53736 * C52054 + C53464 * C52141 +
                      (C26498 * C247 + C79306 * C516) * C52053 +
                      (C26498 * C97 + C79306 * C103) * C52140) *
                         C79308 * C79230) *
                        C79009 * C2606 +
                    (((C26498 * C98 + C79306 * C104) * C52140 +
                      (C26498 * C248 + C79306 * C517) * C52053 +
                      C53468 * C52141 + C53738 * C52054) *
                         C79308 * C79230 -
                     (C53739 * C52054 + C53471 * C52141 + C53738 * C52053 +
                      C53468 * C52140) *
                         C79308 * C79114) *
                        C79009 * C2607 +
                    ((C54778 * C52140 + C54983 * C52053 +
                      (C26498 * C1688 + C79306 * C1696) * C52141 +
                      (C26498 * C1912 + C79306 * C2320) * C52054) *
                         C79308 * C79114 -
                     (C54983 * C52054 + C54778 * C52141 +
                      (C26498 * C249 + C79306 * C518) * C52053 +
                      (C26498 * C99 + C79306 * C105) * C52140) *
                         C79308 * C79230) *
                        C79009 * C79263)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C26498 * C96 + C79306 * C102) * C52140 +
                      (C26498 * C246 + C79306 * C515) * C52053 +
                      C53460 * C52141 + C53734 * C52054) *
                         C79308 * C11717 -
                     (C53735 * C52054 + C53463 * C52141 + C53734 * C52053 +
                      C53460 * C52140) *
                         C79308 * C11718 +
                     (C53463 * C52140 + C53735 * C52053 + C61458 * C52141 +
                      C61612 * C52054) *
                         C79308 * C11719 -
                     (C61613 * C52054 + C61461 * C52141 + C61612 * C52053 +
                      C61458 * C52140) *
                         C79308 * C79275) *
                        C79009 * C79215 +
                    ((C53464 * C52140 + C53736 * C52053 + C53466 * C52141 +
                      C53737 * C52054) *
                         C79308 * C11718 -
                     (C53736 * C52054 + C53464 * C52141 +
                      (C26498 * C247 + C79306 * C516) * C52053 +
                      (C26498 * C97 + C79306 * C103) * C52140) *
                         C79308 * C11717 -
                     (C63080 * C52054 + C62876 * C52141 + C53737 * C52053 +
                      C53466 * C52140) *
                         C79308 * C11719 +
                     (C62876 * C52140 + C63080 * C52053 +
                      (C26498 * C10322 + C79306 * C10326) * C52141 +
                      (C26498 * C10430 + C79306 * C10622) * C52054) *
                         C79308 * C79275) *
                        C79009 * C78992)) /
                      (p * q * std::sqrt(p + q));
    d2eezy[63] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C166 * C96 + C79308 * C167) * C52140 +
             (C166 * C246 + C79308 * C563) * C52053 + C53280 * C52141 +
             C53818 * C52054) *
                C79306 * C79230 -
            (C53819 * C52054 + C53283 * C52141 + C53818 * C52053 +
             C53280 * C52140) *
                C79306 * C79114) *
               C4921 +
           ((C55322 * C52140 + C55930 * C52053 + C57244 * C52141 +
             C57731 * C52054) *
                C79306 * C79114 -
            (C55930 * C52054 + C55322 * C52141 +
             (C166 * C973 + C79308 * C1463) * C52053 +
             (C166 * C749 + C79308 * C859) * C52140) *
                C79306 * C79230) *
               C4922 +
           (((C166 * C750 + C79308 * C860) * C52140 +
             (C166 * C974 + C79308 * C1464) * C52053 + C57246 * C52141 +
             C57732 * C52054) *
                C79306 * C79230 -
            (C57733 * C52054 + C57249 * C52141 + C57732 * C52053 +
             C57246 * C52140) *
                C79306 * C79114) *
               C79259) *
              C79215 +
          (((C1825 * C52140 + C2416 * C52053 + C1826 * C52141 +
             C2417 * C52054) *
                C79306 * C79114 -
            (C2416 * C52054 + C1825 * C52141 + C582 * C52053 + C196 * C52140) *
                C79306 * C79230) *
               C4921 +
           ((C892 * C52140 + C1483 * C52053 + C4064 * C52141 + C4726 * C52054) *
                C79306 * C79230 -
            (C11544 * C52054 + C10928 * C52141 + C4726 * C52053 +
             C4064 * C52140) *
                C79306 * C79114) *
               C4922 +
           ((C7588 * C52140 + C8204 * C52053 +
             (C166 * C6046 + C79308 * C6144) * C52141 +
             (C166 * C6230 + C79308 * C6642) * C52054) *
                C79306 * C79114 -
            (C8204 * C52054 + C7588 * C52141 + C1484 * C52053 + C893 * C52140) *
                C79306 * C79230) *
               C79259) *
              C78992)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C166 * C96 + C79308 * C167) * C52140 +
            (C166 * C246 + C79308 * C563) * C52053 + C53280 * C52141 +
            C53818 * C52054) *
               C79306 * C79230 -
           (C53819 * C52054 + C53283 * C52141 + C53818 * C52053 +
            C53280 * C52140) *
               C79306 * C79114) *
              C79009 * C2605 +
          ((C1825 * C52140 + C2416 * C52053 + C1826 * C52141 + C2417 * C52054) *
               C79306 * C79114 -
           (C2416 * C52054 + C1825 * C52141 + C582 * C52053 + C196 * C52140) *
               C79306 * C79230) *
              C79009 * C2606 +
          ((C199 * C52140 + C583 * C52053 + C1828 * C52141 + C2418 * C52054) *
               C79306 * C79230 -
           (C2419 * C52054 + C1831 * C52141 + C2418 * C52053 + C1828 * C52140) *
               C79306 * C79114) *
              C79009 * C2607 +
          ((C3334 * C52140 + C3758 * C52053 +
            (C166 * C1688 + C79308 * C1798) * C52141 +
            (C166 * C1912 + C79308 * C2402) * C52054) *
               C79306 * C79114 -
           (C3758 * C52054 + C3334 * C52141 + C584 * C52053 + C200 * C52140) *
               C79306 * C79230) *
              C79009 * C79263)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C166 * C96 + C79308 * C167) * C52140 +
            (C166 * C246 + C79308 * C563) * C52053 + C53280 * C52141 +
            C53818 * C52054) *
               C79306 * C11717 -
           (C53819 * C52054 + C53283 * C52141 + C53818 * C52053 +
            C53280 * C52140) *
               C79306 * C11718 +
           (C53283 * C52140 + C53819 * C52053 + C61355 * C52141 +
            C61661 * C52054) *
               C79306 * C11719 -
           (C61662 * C52054 + C61358 * C52141 + C61661 * C52053 +
            C61355 * C52140) *
               C79306 * C79275) *
              C79009 * C79215 +
          ((C1825 * C52140 + C2416 * C52053 + C1826 * C52141 + C2417 * C52054) *
               C79306 * C11718 -
           (C2416 * C52054 + C1825 * C52141 + C582 * C52053 + C196 * C52140) *
               C79306 * C11717 -
           (C12224 * C52054 + C11800 * C52141 + C2417 * C52053 +
            C1826 * C52140) *
               C79306 * C11719 +
           (C11800 * C52140 + C12224 * C52053 +
            (C166 * C10322 + C79308 * C10380) * C52141 +
            (C166 * C10430 + C79308 * C10668) * C52054) *
               C79306 * C79275) *
              C79009 * C78992)) /
            (p * q * std::sqrt(p + q));
    d2eezz[63] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C52394 * C96 + C52397 + C52397 + C52053 * C632 +
                       C52395 * C1682 + C52398 + C52398 + C52054 * C2498) *
                          C79308 * C79306 * C79230 -
                      (C52395 * C1683 + C53894 + C53894 + C52054 * C2499 +
                       C52394 * C1682 + C53895 + C53895 + C52053 * C2498) *
                          C79308 * C79306 * C79114) *
                         C4921 +
                     ((C52394 * C3931 + C56029 + C56029 + C52053 * C4827 +
                       C52395 * C6042 + C56030 + C56030 + C52054 * C6718) *
                          C79308 * C79306 * C79114 -
                      (C52395 * C3931 + C53073 + C53073 + C52054 * C4827 +
                       C52394 * C749 + C53074 + C53074 + C52053 * C1565) *
                          C79308 * C79306 * C79230) *
                         C4922 +
                     ((C52394 * C750 + C53075 + C53075 + C52053 * C1566 +
                       C52395 * C6044 + C53076 + C53076 + C52054 * C6720) *
                          C79308 * C79306 * C79230 -
                      (C52395 * C6045 + C57810 + C57810 + C52054 * C6721 +
                       C52394 * C6044 + C57811 + C57811 + C52053 * C6720) *
                          C79308 * C79306 * C79114) *
                         C79259) *
                        C79215 +
                    (((C52394 * C1681 + C53898 + C53898 + C52053 * C2497 +
                       C52395 * C1684 + C53899 + C53899 + C52054 * C2500) *
                          C79308 * C79306 * C79114 -
                      (C52395 * C1681 + C52399 + C52399 + C52054 * C2497 +
                       C52394 * C97 + C52400 + C52400 + C52053 * C633) *
                          C79308 * C79306 * C79230) *
                         C4921 +
                     ((C52394 * C748 + C53077 + C53077 + C52053 * C1564 +
                       C52395 * C3932 + C53078 + C53078 + C52054 * C4828) *
                          C79308 * C79306 * C79230 -
                      (C52395 * C6041 + C56031 + C56031 + C52054 * C6717 +
                       C52394 * C3932 + C56032 + C56032 + C52053 * C4828) *
                          C79308 * C79306 * C79114) *
                         C4922 +
                     ((C52394 * C6043 + C59297 + C59297 + C52053 * C6719 +
                       C52395 * C6046 + C59298 + C59298 + C52054 * C6722) *
                          C79308 * C79306 * C79114 -
                      (C52395 * C6043 + C53079 + C53079 + C52054 * C6719 +
                       C52394 * C751 + C53080 + C53080 + C52053 * C1567) *
                          C79308 * C79306 * C79230) *
                         C79259) *
                        C78992)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C52394 * C96 + C52397 + C52397 + C52053 * C632 +
                      C52395 * C1682 + C52398 + C52398 + C52054 * C2498) *
                         C79308 * C79306 * C79230 -
                     (C52395 * C1683 + C53894 + C53894 + C52054 * C2499 +
                      C52394 * C1682 + C53895 + C53895 + C52053 * C2498) *
                         C79308 * C79306 * C79114) *
                        C79009 * C2605 +
                    ((C52394 * C1681 + C53898 + C53898 + C52053 * C2497 +
                      C52395 * C1684 + C53899 + C53899 + C52054 * C2500) *
                         C79308 * C79306 * C79114 -
                     (C52395 * C1681 + C52399 + C52399 + C52054 * C2497 +
                      C52394 * C97 + C52400 + C52400 + C52053 * C633) *
                         C79308 * C79306 * C79230) *
                        C79009 * C2606 +
                    ((C52394 * C98 + C52401 + C52401 + C52053 * C634 +
                      C52395 * C1685 + C52402 + C52402 + C52054 * C2501) *
                         C79308 * C79306 * C79230 -
                     (C52395 * C1686 + C53902 + C53902 + C52054 * C2502 +
                      C52394 * C1685 + C53903 + C53903 + C52053 * C2501) *
                         C79308 * C79306 * C79114) *
                        C79009 * C2607 +
                    ((C52394 * C1687 + C55116 + C55116 + C52053 * C2503 +
                      C52395 * C1688 + C55117 + C55117 + C52054 * C2504) *
                         C79308 * C79306 * C79114 -
                     (C52395 * C1687 + C52403 + C52403 + C52054 * C2503 +
                      C52394 * C99 + C52404 + C52404 + C52053 * C635) *
                         C79308 * C79306 * C79230) *
                        C79009 * C79263)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((C52394 * C96 + C52397 + C52397 + C52053 * C632 +
                      C52395 * C1682 + C52398 + C52398 + C52054 * C2498) *
                         C79308 * C79306 * C11717 -
                     (C52395 * C1683 + C53894 + C53894 + C52054 * C2499 +
                      C52394 * C1682 + C53895 + C53895 + C52053 * C2498) *
                         C79308 * C79306 * C11718 +
                     (C52394 * C1683 + C53896 + C53896 + C52053 * C2499 +
                      C52395 * C10320 + C53897 + C53897 + C52054 * C10712) *
                         C79308 * C79306 * C11719 -
                     (C52395 * C10321 + C61706 + C61706 + C52054 * C10713 +
                      C52394 * C10320 + C61707 + C61707 + C52053 * C10712) *
                         C79308 * C79306 * C79275) *
                        C79009 * C79215 +
                    ((C52394 * C1681 + C53898 + C53898 + C52053 * C2497 +
                      C52395 * C1684 + C53899 + C53899 + C52054 * C2500) *
                         C79308 * C79306 * C11718 -
                     (C52395 * C1681 + C52399 + C52399 + C52054 * C2497 +
                      C52394 * C97 + C52400 + C52400 + C52053 * C633) *
                         C79308 * C79306 * C11717 -
                     (C52395 * C10319 + C53900 + C53900 + C52054 * C10711 +
                      C52394 * C1684 + C53901 + C53901 + C52053 * C2500) *
                         C79308 * C79306 * C11719 +
                     (C52394 * C10319 + C63213 + C63213 + C52053 * C10711 +
                      C52395 * C10322 + C63214 + C63214 + C52054 * C10714) *
                         C79308 * C79306 * C79275) *
                        C79009 * C78992)) /
                      (p * q * std::sqrt(p + q));
    d2eexx[64] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C52053 +
            (C26497 * C1682 + C27761 + C27761 + C79306 * C1698) * C52054) *
               C79308 * C79027 * C79300 -
           (C29703 * C52054 + C26964 * C52053) * C79308 * C79027 * C79285 +
           (C26965 * C52053 + C31775 * C52054) * C79308 * C79027 * C79259) *
              C745 +
          ((C26966 * C52053 + C29704 * C52054) * C79308 * C79027 * C79285 -
           ((C26497 * C1681 + C27764 + C27764 + C79306 * C1697) * C52054 +
            (C26497 * C97 + C26503 + C26503 + C79306 * C109) * C52053) *
               C79308 * C79027 * C79300 -
           (C33189 * C52054 + C26967 * C52053) * C79308 * C79027 * C79259) *
              C746 +
          (((C26497 * C98 + C26504 + C26504 + C79306 * C110) * C52053 +
            (C26497 * C1685 + C27769 + C27769 + C79306 * C1701) * C52054) *
               C79308 * C79027 * C79300 -
           (C29705 * C52054 + C26968 * C52053) * C79308 * C79027 * C79285 +
           (C26969 * C52053 +
            (C26497 * C7477 + C29696 + C29696 + C79306 * C7479) * C52054) *
               C79308 * C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C52053 +
           (C26497 * C1682 + C27761 + C27761 + C79306 * C1698) * C52054) *
              C79308 * C79027 * C79009 * C87 -
          ((C26497 * C1681 + C27764 + C27764 + C79306 * C1697) * C52054 +
           (C26497 * C97 + C26503 + C26503 + C79306 * C109) * C52053) *
              C79308 * C79027 * C79009 * C88 +
          ((C26497 * C98 + C26504 + C26504 + C79306 * C110) * C52053 +
           (C26497 * C1685 + C27769 + C27769 + C79306 * C1701) * C52054) *
              C79308 * C79027 * C79009 * C89 -
          ((C26497 * C1687 + C29058 + C29058 + C79306 * C1703) * C52054 +
           (C26497 * C99 + C26507 + C26507 + C79306 * C111) * C52053) *
              C79308 * C79027 * C79009 * C90 +
          ((C26497 * C100 + C26508 + C26508 + C79306 * C112) * C52053 +
           (C26497 * C3255 + C52056 + C52056 + C79306 * C3257) * C52054) *
              C79308 * C79027 * C79009 * C91)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C52053 +
            C53184 * C52054) *
               C79308 * C79027 * C4921 -
           (C29703 * C52054 + C26964 * C52053) * C79308 * C79027 * C4922 +
           (C26965 * C52053 + C31775 * C52054) * C79308 * C79027 * C79259) *
              C79297 +
          ((C26966 * C52053 + C29704 * C52054) * C79308 * C79027 * C4922 -
           (C53186 * C52054 +
            (C26497 * C97 + C26503 + C26503 + C79306 * C109) * C52053) *
               C79308 * C79027 * C4921 -
           (C33189 * C52054 + C26967 * C52053) * C79308 * C79027 * C79259) *
              C79281 +
          (((C26497 * C98 + C26504 + C26504 + C79306 * C110) * C52053 +
            C53188 * C52054) *
               C79308 * C79027 * C4921 -
           (C29705 * C52054 + C26968 * C52053) * C79308 * C79027 * C4922 +
           (C26969 * C52053 +
            (C26497 * C7477 + C29696 + C29696 + C79306 * C7479) * C52054) *
               C79308 * C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C52053 +
           C53184 * C52054) *
              C79308 * C79027 * C5561 -
          (C29703 * C52054 + C26964 * C52053) * C79308 * C79027 * C5562 +
          (C26965 * C52053 + C31775 * C52054) * C79308 * C79027 * C5563 -
          (C34064 * C52054 + C31273 * C52053) * C79308 * C79027 * C5564 +
          (C31274 * C52053 +
           (C26497 * C34055 + C34061 + C34061 + C79306 * C34057) * C52054) *
              C79308 * C79027 * C5565) *
         C78981) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C52053 +
            C53184 * C52054) *
               C79308 * C9011 -
           (C53185 * C52054 + C53184 * C52053) * C79308 * C9012 +
           (C53185 * C52053 +
            (C26497 * C10320 + C36012 + C36012 + C79306 * C10328) * C52054) *
               C79308 * C79262) *
              C79009 * C79297 +
          ((C53186 * C52053 + C53187 * C52054) * C79308 * C9012 -
           (C53186 * C52054 +
            (C26497 * C97 + C26503 + C26503 + C79306 * C109) * C52053) *
               C79308 * C9011 -
           ((C26497 * C10319 + C37336 + C37336 + C79306 * C10327) * C52054 +
            C53187 * C52053) *
               C79308 * C79262) *
              C79009 * C79281 +
          (((C26497 * C98 + C26504 + C26504 + C79306 * C110) * C52053 +
            C53188 * C52054) *
               C79308 * C9011 -
           (C53189 * C52054 + C53188 * C52053) * C79308 * C9012 +
           (C53189 * C52053 +
            (C26497 * C11721 + C53171 + C53171 + C79306 * C11723) * C52054) *
               C79308 * C79262) *
              C79009 * C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C52053 +
            C53184 * C52054) *
               C79308 * C9011 -
           (C53185 * C52054 + C53184 * C52053) * C79308 * C9012 +
           (C53185 * C52053 +
            (C26497 * C10320 + C36012 + C36012 + C79306 * C10328) * C52054) *
               C79308 * C79262) *
              C79300 +
          ((C29703 * C52053 + C31774 * C52054) * C79308 * C9012 -
           (C29703 * C52054 + C26964 * C52053) * C79308 * C9011 -
           (C37942 * C52054 + C31774 * C52053) * C79308 * C79262) *
              C79285 +
          ((C26965 * C52053 + C31775 * C52054) * C79308 * C9011 -
           (C31776 * C52054 + C31775 * C52053) * C79308 * C9012 +
           (C31776 * C52053 +
            (C26497 * C37933 + C37939 + C37939 + C79306 * C37935) * C52054) *
               C79308 * C79262) *
              C79259) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eexy[64] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C166 * C96 + C79308 * C167) * C26498 +
             (C166 * C102 + C79308 * C173) * C79306) *
                C52053 +
            ((C166 * C1682 + C79308 * C1792) * C26498 +
             (C166 * C1690 + C79308 * C1800) * C79306) *
                C52054) *
               C79027 * C79300 -
           (((C166 * C3935 + C79308 * C4051) * C79306 +
             (C166 * C3931 + C79308 * C4047) * C26498) *
                C52054 +
            ((C166 * C757 + C79308 * C867) * C79306 +
             (C166 * C749 + C79308 * C859) * C26498) *
                C52053) *
               C79027 * C79285 +
           (((C166 * C750 + C79308 * C860) * C26498 +
             (C166 * C758 + C79308 * C868) * C79306) *
                C52053 +
            ((C166 * C6044 + C79308 * C6142) * C26498 +
             (C166 * C6050 + C79308 * C6148) * C79306) *
                C52054) *
               C79027 * C79259) *
              C745 +
          (((C892 * C26498 + C891 * C79306) * C52053 +
            (C4064 * C26498 + C4065 * C79306) * C52054) *
               C79027 * C79285 -
           ((C1824 * C79306 + C1825 * C26498) * C52054 +
            (C197 * C79306 + C196 * C26498) * C52053) *
               C79027 * C79300 -
           ((C7587 * C79306 + C7588 * C26498) * C52054 +
            (C894 * C79306 + C893 * C26498) * C52053) *
               C79027 * C79259) *
              C746 +
          (((C199 * C26498 + C198 * C79306) * C52053 +
            (C1828 * C26498 + C1829 * C79306) * C52054) *
               C79027 * C79300 -
           ((C4066 * C79306 + C4067 * C26498) * C52054 +
            (C896 * C79306 + C895 * C26498) * C52053) *
               C79027 * C79285 +
           ((C898 * C26498 + C897 * C79306) * C52053 +
            ((C166 * C7477 + C79308 * C7580) * C26498 +
             (C166 * C7478 + C79308 * C7581) * C79306) *
                C52054) *
               C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C166 * C96 + C79308 * C167) * C26498 +
            (C166 * C102 + C79308 * C173) * C79306) *
               C52053 +
           ((C166 * C1682 + C79308 * C1792) * C26498 +
            (C166 * C1690 + C79308 * C1800) * C79306) *
               C52054) *
              C79027 * C79009 * C87 -
          ((C1824 * C79306 + C1825 * C26498) * C52054 +
           (C197 * C79306 + C196 * C26498) * C52053) *
              C79027 * C79009 * C88 +
          ((C199 * C26498 + C198 * C79306) * C52053 +
           (C1828 * C26498 + C1829 * C79306) * C52054) *
              C79027 * C79009 * C89 -
          ((C3333 * C79306 + C3334 * C26498) * C52054 +
           (C201 * C79306 + C200 * C26498) * C52053) *
              C79027 * C79009 * C90 +
          ((C203 * C26498 + C202 * C79306) * C52053 +
           ((C166 * C3255 + C79308 * C3326) * C26498 +
            (C166 * C3256 + C79308 * C3327) * C79306) *
               C52054) *
              C79027 * C79009 * C91)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C166 * C96 + C79308 * C167) * C26498 +
             (C166 * C102 + C79308 * C173) * C79306) *
                C52053 +
            (C53284 + C53285) * C52054) *
               C79027 * C4921 -
           ((C55325 + C55324) * C52054 +
            ((C166 * C757 + C79308 * C867) * C79306 +
             (C166 * C749 + C79308 * C859) * C26498) *
                C52053) *
               C79027 * C4922 +
           (((C166 * C750 + C79308 * C860) * C26498 +
             (C166 * C758 + C79308 * C868) * C79306) *
                C52053 +
            ((C166 * C6044 + C79308 * C6142) * C26498 +
             (C166 * C6050 + C79308 * C6148) * C79306) *
                C52054) *
               C79027 * C79259) *
              C79297 +
          (((C892 * C26498 + C891 * C79306) * C52053 +
            (C55318 + C55319) * C52054) *
               C79027 * C4922 -
           ((C53273 + C53272) * C52054 +
            (C197 * C79306 + C196 * C26498) * C52053) *
               C79027 * C4921 -
           ((C7587 * C79306 + C7588 * C26498) * C52054 +
            (C894 * C79306 + C893 * C26498) * C52053) *
               C79027 * C79259) *
              C79281 +
          (((C199 * C26498 + C198 * C79306) * C52053 +
            (C53276 + C53277) * C52054) *
               C79027 * C4921 -
           ((C55321 + C55320) * C52054 +
            (C896 * C79306 + C895 * C26498) * C52053) *
               C79027 * C4922 +
           ((C898 * C26498 + C897 * C79306) * C52053 +
            ((C166 * C7477 + C79308 * C7580) * C26498 +
             (C166 * C7478 + C79308 * C7581) * C79306) *
                C52054) *
               C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C166 * C96 + C79308 * C167) * C26498 +
            (C166 * C102 + C79308 * C173) * C79306) *
               C52053 +
           (C53284 + C53285) * C52054) *
              C79027 * C5561 -
          ((C55325 + C55324) * C52054 +
           ((C166 * C757 + C79308 * C867) * C79306 +
            (C166 * C749 + C79308 * C859) * C26498) *
               C52053) *
              C79027 * C5562 +
          (((C166 * C750 + C79308 * C860) * C26498 +
            (C166 * C758 + C79308 * C868) * C79306) *
               C52053 +
           ((C166 * C6044 + C79308 * C6142) * C26498 +
            (C166 * C6050 + C79308 * C6148) * C79306) *
               C52054) *
              C79027 * C5563 -
          (((C166 * C8379 + C79308 * C8453) * C79306 +
            (C166 * C8377 + C79308 * C8451) * C26498) *
               C52054 +
           ((C166 * C5572 + C79308 * C5630) * C79306 +
            (C166 * C5568 + C79308 * C5626) * C26498) *
               C52053) *
              C79027 * C5564 +
          (((C166 * C5569 + C79308 * C5627) * C26498 +
            (C166 * C5573 + C79308 * C5631) * C79306) *
               C52053 +
           ((C166 * C34055 + C79308 * C34131) * C26498 +
            (C166 * C34056 + C79308 * C34132) * C79306) *
               C52054) *
              C79027 * C5565) *
         C78981) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C166 * C96 + C79308 * C167) * C26498 +
             (C166 * C102 + C79308 * C173) * C79306) *
                C52053 +
            (C53284 + C53285) * C52054) *
               C9011 -
           ((C53286 + C53287) * C52054 + (C53285 + C53284) * C52053) * C9012 +
           ((C53287 + C53286) * C52053 +
            ((C166 * C10320 + C79308 * C10378) * C26498 +
             (C166 * C10324 + C79308 * C10382) * C79306) *
                C52054) *
               C79262) *
              C79009 * C79297 +
          (((C53272 + C53273) * C52053 + (C53274 + C53275) * C52054) * C9012 -
           ((C53273 + C53272) * C52054 +
            (C197 * C79306 + C196 * C26498) * C52053) *
               C9011 -
           ((C11799 * C79306 + C11800 * C26498) * C52054 +
            (C53275 + C53274) * C52053) *
               C79262) *
              C79009 * C79281 +
          (((C199 * C26498 + C198 * C79306) * C52053 +
            (C53276 + C53277) * C52054) *
               C9011 -
           ((C53278 + C53279) * C52054 + (C53277 + C53276) * C52053) * C9012 +
           ((C53279 + C53278) * C52053 +
            ((C166 * C11721 + C79308 * C11792) * C26498 +
             (C166 * C11722 + C79308 * C11793) * C79306) *
                C52054) *
               C79262) *
              C79009 * C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C166 * C96 + C79308 * C167) * C26498 +
             (C166 * C102 + C79308 * C173) * C79306) *
                C52053 +
            (C53284 + C53285) * C52054) *
               C9011 -
           ((C53286 + C53287) * C52054 + (C53285 + C53284) * C52053) * C9012 +
           ((C53287 + C53286) * C52053 +
            ((C166 * C10320 + C79308 * C10378) * C26498 +
             (C166 * C10324 + C79308 * C10382) * C79306) *
                C52054) *
               C79262) *
              C79300 +
          (((C55324 + C55325) * C52053 + (C57250 + C57251) * C52054) * C9012 -
           ((C55325 + C55324) * C52054 +
            ((C166 * C757 + C79308 * C867) * C79306 +
             (C166 * C749 + C79308 * C859) * C26498) *
                C52053) *
               C9011 -
           (((C166 * C12367 + C79308 * C12441) * C79306 +
             (C166 * C12365 + C79308 * C12439) * C26498) *
                C52054 +
            (C57251 + C57250) * C52053) *
               C79262) *
              C79285 +
          ((((C166 * C750 + C79308 * C860) * C26498 +
             (C166 * C758 + C79308 * C868) * C79306) *
                C52053 +
            (C57252 + C57253) * C52054) *
               C9011 -
           ((C57254 + C57255) * C52054 + (C57253 + C57252) * C52053) * C9012 +
           ((C57255 + C57254) * C52053 +
            ((C166 * C37933 + C79308 * C38009) * C26498 +
             (C166 * C37934 + C79308 * C38010) * C79306) *
                C52054) *
               C79262) *
              C79259) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eexz[64] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
                C26498 +
            (C52140 * C102 + C52053 * C252 + C52141 * C1690 + C52054 * C1914) *
                C79306) *
               C79308 * C79027 * C79300 -
           ((C52141 * C3935 + C52054 * C4169 + C52140 * C757 + C52053 * C981) *
                C79306 +
            (C52141 * C3931 + C52054 * C4165 + C52140 * C749 + C52053 * C973) *
                C26498) *
               C79308 * C79027 * C79285 +
           ((C52140 * C750 + C52053 * C974 + C52141 * C6044 + C52054 * C6228) *
                C26498 +
            (C52140 * C758 + C52053 * C982 + C52141 * C6050 + C52054 * C6234) *
                C79306) *
               C79308 * C79027 * C79259) *
              C745 +
          (((C52140 * C748 + C52053 * C972 + C52141 * C3932 + C52054 * C4166) *
                C26498 +
            (C52140 * C756 + C52053 * C980 + C52141 * C3936 + C52054 * C4170) *
                C79306) *
               C79308 * C79027 * C79285 -
           ((C52141 * C1689 + C52054 * C1913 + C52140 * C103 + C52053 * C253) *
                C79306 +
            (C52141 * C1681 + C52054 * C1905 + C52140 * C97 + C52053 * C247) *
                C26498) *
               C79308 * C79027 * C79300 -
           ((C52141 * C6049 + C52054 * C6233 + C52140 * C759 + C52053 * C983) *
                C79306 +
            (C52141 * C6043 + C52054 * C6227 + C52140 * C751 + C52053 * C975) *
                C26498) *
               C79308 * C79027 * C79259) *
              C746 +
          (((C52140 * C98 + C52053 * C248 + C52141 * C1685 + C52054 * C1909) *
                C26498 +
            (C52140 * C104 + C52053 * C254 + C52141 * C1693 + C52054 * C1917) *
                C79306) *
               C79308 * C79027 * C79300 -
           ((C52141 * C3937 + C52054 * C4171 + C52140 * C760 + C52053 * C984) *
                C79306 +
            (C52141 * C3933 + C52054 * C4167 + C52140 * C752 + C52053 * C976) *
                C26498) *
               C79308 * C79027 * C79285 +
           ((C52140 * C753 + C52053 * C977 + C52141 * C7477 + C52054 * C7686) *
                C26498 +
            (C52140 * C761 + C52053 * C985 + C52141 * C7478 + C52054 * C7687) *
                C79306) *
               C79308 * C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
               C26498 +
           (C52140 * C102 + C52053 * C252 + C52141 * C1690 + C52054 * C1914) *
               C79306) *
              C79308 * C79027 * C79009 * C87 -
          ((C52141 * C1689 + C52054 * C1913 + C52140 * C103 + C52053 * C253) *
               C79306 +
           (C52141 * C1681 + C52054 * C1905 + C52140 * C97 + C52053 * C247) *
               C26498) *
              C79308 * C79027 * C79009 * C88 +
          ((C52140 * C98 + C52053 * C248 + C52141 * C1685 + C52054 * C1909) *
               C26498 +
           (C52140 * C104 + C52053 * C254 + C52141 * C1693 + C52054 * C1917) *
               C79306) *
              C79308 * C79027 * C79009 * C89 -
          ((C52141 * C1695 + C52054 * C1919 + C52140 * C105 + C52053 * C255) *
               C79306 +
           (C52141 * C1687 + C52054 * C1911 + C52140 * C99 + C52053 * C249) *
               C26498) *
              C79308 * C79027 * C79009 * C90 +
          ((C52140 * C100 + C52053 * C250 + C52141 * C3255 + C52054 * C3400) *
               C26498 +
           (C52140 * C106 + C52053 * C256 + C52141 * C3256 + C52054 * C3401) *
               C79306) *
              C79308 * C79027 * C79009 * C91)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
                C26498 +
            (C52140 * C102 + C52053 * C252 + C52141 * C1690 + C52054 * C1914) *
                C79306) *
               C79308 * C79027 * C4921 -
           ((C52141 * C3935 + C52054 * C4169 + C52140 * C757 + C52053 * C981) *
                C79306 +
            (C52141 * C3931 + C52054 * C4165 + C52140 * C749 + C52053 * C973) *
                C26498) *
               C79308 * C79027 * C4922 +
           ((C52140 * C750 + C52053 * C974 + C52141 * C6044 + C52054 * C6228) *
                C26498 +
            (C52140 * C758 + C52053 * C982 + C52141 * C6050 + C52054 * C6234) *
                C79306) *
               C79308 * C79027 * C79259) *
              C79297 +
          (((C52140 * C748 + C52053 * C972 + C52141 * C3932 + C52054 * C4166) *
                C26498 +
            (C52140 * C756 + C52053 * C980 + C52141 * C3936 + C52054 * C4170) *
                C79306) *
               C79308 * C79027 * C4922 -
           ((C52141 * C1689 + C52054 * C1913 + C52140 * C103 + C52053 * C253) *
                C79306 +
            (C52141 * C1681 + C52054 * C1905 + C52140 * C97 + C52053 * C247) *
                C26498) *
               C79308 * C79027 * C4921 -
           ((C52141 * C6049 + C52054 * C6233 + C52140 * C759 + C52053 * C983) *
                C79306 +
            (C52141 * C6043 + C52054 * C6227 + C52140 * C751 + C52053 * C975) *
                C26498) *
               C79308 * C79027 * C79259) *
              C79281 +
          (((C52140 * C98 + C52053 * C248 + C52141 * C1685 + C52054 * C1909) *
                C26498 +
            (C52140 * C104 + C52053 * C254 + C52141 * C1693 + C52054 * C1917) *
                C79306) *
               C79308 * C79027 * C4921 -
           ((C52141 * C3937 + C52054 * C4171 + C52140 * C760 + C52053 * C984) *
                C79306 +
            (C52141 * C3933 + C52054 * C4167 + C52140 * C752 + C52053 * C976) *
                C26498) *
               C79308 * C79027 * C4922 +
           ((C52140 * C753 + C52053 * C977 + C52141 * C7477 + C52054 * C7686) *
                C26498 +
            (C52140 * C761 + C52053 * C985 + C52141 * C7478 + C52054 * C7687) *
                C79306) *
               C79308 * C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
               C26498 +
           (C52140 * C102 + C52053 * C252 + C52141 * C1690 + C52054 * C1914) *
               C79306) *
              C79308 * C79027 * C5561 -
          ((C52141 * C3935 + C52054 * C4169 + C52140 * C757 + C52053 * C981) *
               C79306 +
           (C52141 * C3931 + C52054 * C4165 + C52140 * C749 + C52053 * C973) *
               C26498) *
              C79308 * C79027 * C5562 +
          ((C52140 * C750 + C52053 * C974 + C52141 * C6044 + C52054 * C6228) *
               C26498 +
           (C52140 * C758 + C52053 * C982 + C52141 * C6050 + C52054 * C6234) *
               C79306) *
              C79308 * C79027 * C5563 -
          ((C52141 * C8379 + C52054 * C8523 + C52140 * C5572 + C52053 * C5680) *
               C79306 +
           (C52141 * C8377 + C52054 * C8521 + C52140 * C5568 + C52053 * C5676) *
               C26498) *
              C79308 * C79027 * C5564 +
          ((C52140 * C5569 + C52053 * C5677 + C52141 * C34055 +
            C52054 * C34199) *
               C26498 +
           (C52140 * C5573 + C52053 * C5681 + C52141 * C34056 +
            C52054 * C34200) *
               C79306) *
              C79308 * C79027 * C5565) *
         C78981) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
                C26498 +
            (C52140 * C102 + C52053 * C252 + C52141 * C1690 + C52054 * C1914) *
                C79306) *
               C79308 * C9011 -
           ((C52141 * C1691 + C52054 * C1915 + C52140 * C1690 +
             C52053 * C1914) *
                C79306 +
            (C52141 * C1683 + C52054 * C1907 + C52140 * C1682 +
             C52053 * C1906) *
                C26498) *
               C79308 * C9012 +
           ((C52140 * C1683 + C52053 * C1907 + C52141 * C10320 +
             C52054 * C10428) *
                C26498 +
            (C52140 * C1691 + C52053 * C1915 + C52141 * C10324 +
             C52054 * C10432) *
                C79306) *
               C79308 * C79262) *
              C79009 * C79297 +
          (((C52140 * C1681 + C52053 * C1905 + C52141 * C1684 +
             C52054 * C1908) *
                C26498 +
            (C52140 * C1689 + C52053 * C1913 + C52141 * C1692 +
             C52054 * C1916) *
                C79306) *
               C79308 * C9012 -
           ((C52141 * C1689 + C52054 * C1913 + C52140 * C103 + C52053 * C253) *
                C79306 +
            (C52141 * C1681 + C52054 * C1905 + C52140 * C97 + C52053 * C247) *
                C26498) *
               C79308 * C9011 -
           ((C52141 * C10323 + C52054 * C10431 + C52140 * C1692 +
             C52053 * C1916) *
                C79306 +
            (C52141 * C10319 + C52054 * C10427 + C52140 * C1684 +
             C52053 * C1908) *
                C26498) *
               C79308 * C79262) *
              C79009 * C79281 +
          (((C52140 * C98 + C52053 * C248 + C52141 * C1685 + C52054 * C1909) *
                C26498 +
            (C52140 * C104 + C52053 * C254 + C52141 * C1693 + C52054 * C1917) *
                C79306) *
               C79308 * C9011 -
           ((C52141 * C1694 + C52054 * C1918 + C52140 * C1693 +
             C52053 * C1917) *
                C79306 +
            (C52141 * C1686 + C52054 * C1910 + C52140 * C1685 +
             C52053 * C1909) *
                C26498) *
               C79308 * C9012 +
           ((C52140 * C1686 + C52053 * C1910 + C52141 * C11721 +
             C52054 * C11866) *
                C26498 +
            (C52140 * C1694 + C52053 * C1918 + C52141 * C11722 +
             C52054 * C11867) *
                C79306) *
               C79308 * C79262) *
              C79009 * C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
                C26498 +
            (C52140 * C102 + C52053 * C252 + C52141 * C1690 + C52054 * C1914) *
                C79306) *
               C79308 * C9011 -
           ((C52141 * C1691 + C52054 * C1915 + C52140 * C1690 +
             C52053 * C1914) *
                C79306 +
            (C52141 * C1683 + C52054 * C1907 + C52140 * C1682 +
             C52053 * C1906) *
                C26498) *
               C79308 * C9012 +
           ((C52140 * C1683 + C52053 * C1907 + C52141 * C10320 +
             C52054 * C10428) *
                C26498 +
            (C52140 * C1691 + C52053 * C1915 + C52141 * C10324 +
             C52054 * C10432) *
                C79306) *
               C79308 * C79262) *
              C79300 +
          (((C52140 * C3931 + C52053 * C4165 + C52141 * C6042 +
             C52054 * C6226) *
                C26498 +
            (C52140 * C3935 + C52053 * C4169 + C52141 * C6048 +
             C52054 * C6232) *
                C79306) *
               C79308 * C9012 -
           ((C52141 * C3935 + C52054 * C4169 + C52140 * C757 + C52053 * C981) *
                C79306 +
            (C52141 * C3931 + C52054 * C4165 + C52140 * C749 + C52053 * C973) *
                C26498) *
               C79308 * C9011 -
           ((C52141 * C12367 + C52054 * C12511 + C52140 * C6048 +
             C52053 * C6232) *
                C79306 +
            (C52141 * C12365 + C52054 * C12509 + C52140 * C6042 +
             C52053 * C6226) *
                C26498) *
               C79308 * C79262) *
              C79285 +
          (((C52140 * C750 + C52053 * C974 + C52141 * C6044 + C52054 * C6228) *
                C26498 +
            (C52140 * C758 + C52053 * C982 + C52141 * C6050 + C52054 * C6234) *
                C79306) *
               C79308 * C9011 -
           ((C52141 * C6051 + C52054 * C6235 + C52140 * C6050 +
             C52053 * C6234) *
                C79306 +
            (C52141 * C6045 + C52054 * C6229 + C52140 * C6044 +
             C52053 * C6228) *
                C26498) *
               C79308 * C9012 +
           ((C52140 * C6045 + C52053 * C6229 + C52141 * C37933 +
             C52054 * C38077) *
                C26498 +
            (C52140 * C6051 + C52053 * C6235 + C52141 * C37934 +
             C52054 * C38078) *
                C79306) *
               C79308 * C79262) *
              C79259) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eeyx[64] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C26498 * C96 + C79306 * C102) * C166 +
             (C26498 * C167 + C79306 * C324) * C79308) *
                C52053 +
            ((C26498 * C1682 + C79306 * C1690) * C166 +
             (C26498 * C1792 + C79306 * C2020) * C79308) *
                C52054) *
               C79027 * C79300 -
           ((C30027 * C79308 + C30028 * C166) * C52054 +
            (C27247 * C79308 + C27246 * C166) * C52053) *
               C79027 * C79285 +
           ((C27249 * C166 + C27248 * C79308) * C52053 +
            (C32045 * C166 + C32046 * C79308) * C52054) *
               C79027 * C79259) *
              C745 +
          (((C27250 * C166 + C27251 * C79308) * C52053 +
            (C30029 * C166 + C30030 * C79308) * C52054) *
               C79027 * C79285 -
           (((C26498 * C1791 + C79306 * C2019) * C79308 +
             (C26498 * C1681 + C79306 * C1689) * C166) *
                C52054 +
            ((C26498 * C168 + C79306 * C325) * C79308 +
             (C26498 * C97 + C79306 * C103) * C166) *
                C52053) *
               C79027 * C79300 -
           ((C33491 * C79308 + C33492 * C166) * C52054 +
            (C27253 * C79308 + C27252 * C166) * C52053) *
               C79027 * C79259) *
              C746 +
          ((((C26498 * C98 + C79306 * C104) * C166 +
             (C26498 * C169 + C79306 * C326) * C79308) *
                C52053 +
            ((C26498 * C1685 + C79306 * C1693) * C166 +
             (C26498 * C1795 + C79306 * C2023) * C79308) *
                C52054) *
               C79027 * C79300 -
           ((C30031 * C79308 + C30032 * C166) * C52054 +
            (C27255 * C79308 + C27254 * C166) * C52053) *
               C79027 * C79285 +
           ((C27257 * C166 + C27256 * C79308) * C52053 +
            ((C26498 * C7477 + C79306 * C7478) * C166 +
             (C26498 * C7580 + C79306 * C7792) * C79308) *
                C52054) *
               C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C26498 * C96 + C79306 * C102) * C166 +
            (C26498 * C167 + C79306 * C324) * C79308) *
               C52053 +
           ((C26498 * C1682 + C79306 * C1690) * C166 +
            (C26498 * C1792 + C79306 * C2020) * C79308) *
               C52054) *
              C79027 * C79009 * C87 -
          (((C26498 * C1791 + C79306 * C2019) * C79308 +
            (C26498 * C1681 + C79306 * C1689) * C166) *
               C52054 +
           ((C26498 * C168 + C79306 * C325) * C79308 +
            (C26498 * C97 + C79306 * C103) * C166) *
               C52053) *
              C79027 * C79009 * C88 +
          (((C26498 * C98 + C79306 * C104) * C166 +
            (C26498 * C169 + C79306 * C326) * C79308) *
               C52053 +
           ((C26498 * C1685 + C79306 * C1693) * C166 +
            (C26498 * C1795 + C79306 * C2023) * C79308) *
               C52054) *
              C79027 * C79009 * C89 -
          (((C26498 * C1797 + C79306 * C2025) * C79308 +
            (C26498 * C1687 + C79306 * C1695) * C166) *
               C52054 +
           ((C26498 * C170 + C79306 * C327) * C79308 +
            (C26498 * C99 + C79306 * C105) * C166) *
               C52053) *
              C79027 * C79009 * C90 +
          (((C26498 * C100 + C79306 * C106) * C166 +
            (C26498 * C171 + C79306 * C328) * C79308) *
               C52053 +
           ((C26498 * C3255 + C79306 * C3256) * C166 +
            (C26498 * C3326 + C79306 * C3474) * C79308) *
               C52054) *
              C79027 * C79009 * C91)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C26498 * C96 + C79306 * C102) * C166 +
             (C26498 * C167 + C79306 * C324) * C79308) *
                C52053 +
            (C53472 + C53473) * C52054) *
               C79027 * C4921 -
           ((C55523 + C55522) * C52054 +
            (C27247 * C79308 + C27246 * C166) * C52053) *
               C79027 * C4922 +
           ((C27249 * C166 + C27248 * C79308) * C52053 +
            (C32045 * C166 + C32046 * C79308) * C52054) *
               C79027 * C79259) *
              C79297 +
          (((C27250 * C166 + C27251 * C79308) * C52053 +
            (C55524 + C55525) * C52054) *
               C79027 * C4922 -
           ((C53477 + C53476) * C52054 +
            ((C26498 * C168 + C79306 * C325) * C79308 +
             (C26498 * C97 + C79306 * C103) * C166) *
                C52053) *
               C79027 * C4921 -
           ((C33491 * C79308 + C33492 * C166) * C52054 +
            (C27253 * C79308 + C27252 * C166) * C52053) *
               C79027 * C79259) *
              C79281 +
          ((((C26498 * C98 + C79306 * C104) * C166 +
             (C26498 * C169 + C79306 * C326) * C79308) *
                C52053 +
            (C53480 + C53481) * C52054) *
               C79027 * C4921 -
           ((C55527 + C55526) * C52054 +
            (C27255 * C79308 + C27254 * C166) * C52053) *
               C79027 * C4922 +
           ((C27257 * C166 + C27256 * C79308) * C52053 +
            ((C26498 * C7477 + C79306 * C7478) * C166 +
             (C26498 * C7580 + C79306 * C7792) * C79308) *
                C52054) *
               C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C26498 * C96 + C79306 * C102) * C166 +
            (C26498 * C167 + C79306 * C324) * C79308) *
               C52053 +
           (C53472 + C53473) * C52054) *
              C79027 * C5561 -
          ((C55523 + C55522) * C52054 +
           (C27247 * C79308 + C27246 * C166) * C52053) *
              C79027 * C5562 +
          ((C27249 * C166 + C27248 * C79308) * C52053 +
           (C32045 * C166 + C32046 * C79308) * C52054) *
              C79027 * C5563 -
          ((C34281 * C79308 + C34282 * C166) * C52054 +
           (C31433 * C79308 + C31432 * C166) * C52053) *
              C79027 * C5564 +
          ((C31435 * C166 + C31434 * C79308) * C52053 +
           ((C26498 * C34055 + C79306 * C34056) * C166 +
            (C26498 * C34131 + C79306 * C34275) * C79308) *
               C52054) *
              C79027 * C5565) *
         C78981) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C26498 * C96 + C79306 * C102) * C166 +
             (C26498 * C167 + C79306 * C324) * C79308) *
                C52053 +
            (C53472 + C53473) * C52054) *
               C9011 -
           ((C53474 + C53475) * C52054 + (C53473 + C53472) * C52053) * C9012 +
           ((C53475 + C53474) * C52053 +
            ((C26498 * C10320 + C79306 * C10324) * C166 +
             (C26498 * C10378 + C79306 * C10478) * C79308) *
                C52054) *
               C79262) *
              C79009 * C79297 +
          (((C53476 + C53477) * C52053 + (C53478 + C53479) * C52054) * C9012 -
           ((C53477 + C53476) * C52054 +
            ((C26498 * C168 + C79306 * C325) * C79308 +
             (C26498 * C97 + C79306 * C103) * C166) *
                C52053) *
               C9011 -
           (((C26498 * C10377 + C79306 * C10477) * C79308 +
             (C26498 * C10319 + C79306 * C10323) * C166) *
                C52054 +
            (C53479 + C53478) * C52053) *
               C79262) *
              C79009 * C79281 +
          ((((C26498 * C98 + C79306 * C104) * C166 +
             (C26498 * C169 + C79306 * C326) * C79308) *
                C52053 +
            (C53480 + C53481) * C52054) *
               C9011 -
           ((C53482 + C53483) * C52054 + (C53481 + C53480) * C52053) * C9012 +
           ((C53483 + C53482) * C52053 +
            ((C26498 * C11721 + C79306 * C11722) * C166 +
             (C26498 * C11792 + C79306 * C11940) * C79308) *
                C52054) *
               C79262) *
              C79009 * C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C26498 * C96 + C79306 * C102) * C166 +
             (C26498 * C167 + C79306 * C324) * C79308) *
                C52053 +
            (C53472 + C53473) * C52054) *
               C9011 -
           ((C53474 + C53475) * C52054 + (C53473 + C53472) * C52053) * C9012 +
           ((C53475 + C53474) * C52053 +
            ((C26498 * C10320 + C79306 * C10324) * C166 +
             (C26498 * C10378 + C79306 * C10478) * C79308) *
                C52054) *
               C79262) *
              C79300 +
          (((C55522 + C55523) * C52053 + (C57404 + C57405) * C52054) * C9012 -
           ((C55523 + C55522) * C52054 +
            (C27247 * C79308 + C27246 * C166) * C52053) *
               C9011 -
           ((C38159 * C79308 + C38160 * C166) * C52054 +
            (C57405 + C57404) * C52053) *
               C79262) *
              C79285 +
          (((C27249 * C166 + C27248 * C79308) * C52053 +
            (C57406 + C57407) * C52054) *
               C9011 -
           ((C57408 + C57409) * C52054 + (C57407 + C57406) * C52053) * C9012 +
           ((C57409 + C57408) * C52053 +
            ((C26498 * C37933 + C79306 * C37934) * C166 +
             (C26498 * C38009 + C79306 * C38153) * C79308) *
                C52054) *
               C79262) *
              C79259) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eeyy[64] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C372 * C96 + C380 + C380 + C79308 * C373) * C79306 * C52053 +
            (C372 * C1682 + C2113 + C2113 + C79308 * C2102) * C79306 * C52054) *
               C79027 * C79300 -
           ((C372 * C3931 + C4390 + C4390 + C79308 * C4385) * C79306 * C52054 +
            (C372 * C749 + C1180 + C1180 + C79308 * C1169) * C79306 * C52053) *
               C79027 * C79285 +
           ((C372 * C750 + C1181 + C1181 + C79308 * C1170) * C79306 * C52053 +
            (C372 * C6044 + C6401 + C6401 + C79308 * C6394) * C79306 * C52054) *
               C79027 * C79259) *
              C745 +
          ((C1201 * C79306 * C52053 + C4402 * C79306 * C52054) * C79027 *
               C79285 -
           (C2134 * C79306 * C52054 + C402 * C79306 * C52053) * C79027 *
               C79300 -
           (C7898 * C79306 * C52054 + C1202 * C79306 * C52053) * C79027 *
               C79259) *
              C746 +
          ((C403 * C79306 * C52053 + C2136 * C79306 * C52054) * C79027 *
               C79300 -
           (C4403 * C79306 * C52054 + C1203 * C79306 * C52053) * C79027 *
               C79285 +
           (C1204 * C79306 * C52053 +
            (C372 * C7477 + C7895 + C7895 + C79308 * C7891) * C79306 * C52054) *
               C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C372 * C96 + C380 + C380 + C79308 * C373) * C79306 * C52053 +
           (C372 * C1682 + C2113 + C2113 + C79308 * C2102) * C79306 * C52054) *
              C79027 * C79009 * C87 -
          (C2134 * C79306 * C52054 + C402 * C79306 * C52053) * C79027 * C79009 *
              C88 +
          (C403 * C79306 * C52053 + C2136 * C79306 * C52054) * C79027 * C79009 *
              C89 -
          (C3548 * C79306 * C52054 + C404 * C79306 * C52053) * C79027 * C79009 *
              C90 +
          (C405 * C79306 * C52053 +
           (C372 * C3255 + C3545 + C3545 + C79308 * C3541) * C79306 * C52054) *
              C79027 * C79009 * C91)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C372 * C96 + C380 + C380 + C79308 * C373) * C79306 * C52053 +
            C53572 * C52054) *
               C79027 * C4921 -
           (C55633 * C52054 +
            (C372 * C749 + C1180 + C1180 + C79308 * C1169) * C79306 * C52053) *
               C79027 * C4922 +
           ((C372 * C750 + C1181 + C1181 + C79308 * C1170) * C79306 * C52053 +
            (C372 * C6044 + C6401 + C6401 + C79308 * C6394) * C79306 * C52054) *
               C79027 * C79259) *
              C79297 +
          ((C1201 * C79306 * C52053 + C55628 * C52054) * C79027 * C4922 -
           (C53562 * C52054 + C402 * C79306 * C52053) * C79027 * C4921 -
           (C7898 * C79306 * C52054 + C1202 * C79306 * C52053) * C79027 *
               C79259) *
              C79281 +
          ((C403 * C79306 * C52053 + C53564 * C52054) * C79027 * C4921 -
           (C55629 * C52054 + C1203 * C79306 * C52053) * C79027 * C4922 +
           (C1204 * C79306 * C52053 +
            (C372 * C7477 + C7895 + C7895 + C79308 * C7891) * C79306 * C52054) *
               C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C372 * C96 + C380 + C380 + C79308 * C373) * C79306 * C52053 +
           C53572 * C52054) *
              C79027 * C5561 -
          (C55633 * C52054 +
           (C372 * C749 + C1180 + C1180 + C79308 * C1169) * C79306 * C52053) *
              C79027 * C5562 +
          ((C372 * C750 + C1181 + C1181 + C79308 * C1170) * C79306 * C52053 +
           (C372 * C6044 + C6401 + C6401 + C79308 * C6394) * C79306 * C52054) *
              C79027 * C5563 -
          ((C372 * C8377 + C8662 + C8662 + C79308 * C8659) * C79306 * C52054 +
           (C372 * C5568 + C5777 + C5777 + C79308 * C5772) * C79306 * C52053) *
              C79027 * C5564 +
          ((C372 * C5569 + C5778 + C5778 + C79308 * C5773) * C79306 * C52053 +
           (C372 * C34055 + C56911 + C56911 + C79308 * C34348) * C79306 *
               C52054) *
              C79027 * C5565) *
         C78981) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C372 * C96 + C380 + C380 + C79308 * C373) * C79306 * C52053 +
            C53572 * C52054) *
               C9011 -
           (C53573 * C52054 + C53572 * C52053) * C9012 +
           (C53573 * C52053 +
            (C372 * C10320 + C10529 + C10529 + C79308 * C10524) * C79306 *
                C52054) *
               C79262) *
              C79009 * C79297 +
          ((C53562 * C52053 + C53563 * C52054) * C9012 -
           (C53562 * C52054 + C402 * C79306 * C52053) * C9011 -
           (C12014 * C79306 * C52054 + C53563 * C52053) * C79262) *
              C79009 * C79281 +
          ((C403 * C79306 * C52053 + C53564 * C52054) * C9011 -
           (C53565 * C52054 + C53564 * C52053) * C9012 +
           (C53565 * C52053 +
            (C372 * C11721 + C12011 + C12011 + C79308 * C12007) * C79306 *
                C52054) *
               C79262) *
              C79009 * C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C372 * C96 + C380 + C380 + C79308 * C373) * C79306 * C52053 +
            C53572 * C52054) *
               C9011 -
           (C53573 * C52054 + C53572 * C52053) * C9012 +
           (C53573 * C52053 +
            (C372 * C10320 + C10529 + C10529 + C79308 * C10524) * C79306 *
                C52054) *
               C79262) *
              C79300 +
          ((C55633 * C52053 + C57500 * C52054) * C9012 -
           (C55633 * C52054 +
            (C372 * C749 + C1180 + C1180 + C79308 * C1169) * C79306 * C52053) *
               C9011 -
           ((C372 * C12365 + C12650 + C12650 + C79308 * C12647) * C79306 *
                C52054 +
            C57500 * C52053) *
               C79262) *
              C79285 +
          (((C372 * C750 + C1181 + C1181 + C79308 * C1170) * C79306 * C52053 +
            C57501 * C52054) *
               C9011 -
           (C57502 * C52054 + C57501 * C52053) * C9012 +
           (C57502 * C52053 +
            (C372 * C37933 + C57490 + C57490 + C79308 * C38226) * C79306 *
                C52054) *
               C79262) *
              C79259) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eeyz[64] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
                C166 +
            (C52140 * C167 + C52053 * C447 + C52141 * C1792 + C52054 * C2212) *
                C79308) *
               C79306 * C79027 * C79300 -
           ((C52141 * C4047 + C52054 * C4501 + C52140 * C859 + C52053 * C1279) *
                C79308 +
            (C52141 * C3931 + C52054 * C4165 + C52140 * C749 + C52053 * C973) *
                C166) *
               C79306 * C79027 * C79285 +
           ((C52140 * C750 + C52053 * C974 + C52141 * C6044 + C52054 * C6228) *
                C166 +
            (C52140 * C860 + C52053 * C1280 + C52141 * C6142 + C52054 * C6480) *
                C79308) *
               C79306 * C79027 * C79259) *
              C745 +
          (((C52140 * C748 + C52053 * C972 + C52141 * C3932 + C52054 * C4166) *
                C166 +
            (C52140 * C858 + C52053 * C1278 + C52141 * C4048 + C52054 * C4502) *
                C79308) *
               C79306 * C79027 * C79285 -
           ((C52141 * C1791 + C52054 * C2211 + C52140 * C168 + C52053 * C448) *
                C79308 +
            (C52141 * C1681 + C52054 * C1905 + C52140 * C97 + C52053 * C247) *
                C166) *
               C79306 * C79027 * C79300 -
           ((C52141 * C6141 + C52054 * C6479 + C52140 * C861 + C52053 * C1281) *
                C79308 +
            (C52141 * C6043 + C52054 * C6227 + C52140 * C751 + C52053 * C975) *
                C166) *
               C79306 * C79027 * C79259) *
              C746 +
          (((C52140 * C98 + C52053 * C248 + C52141 * C1685 + C52054 * C1909) *
                C166 +
            (C52140 * C169 + C52053 * C449 + C52141 * C1795 + C52054 * C2215) *
                C79308) *
               C79306 * C79027 * C79300 -
           ((C52141 * C4049 + C52054 * C4503 + C52140 * C862 + C52053 * C1282) *
                C79308 +
            (C52141 * C3933 + C52054 * C4167 + C52140 * C752 + C52053 * C976) *
                C166) *
               C79306 * C79027 * C79285 +
           ((C52140 * C753 + C52053 * C977 + C52141 * C7477 + C52054 * C7686) *
                C166 +
            (C52140 * C863 + C52053 * C1283 + C52141 * C7580 + C52054 * C7996) *
                C79308) *
               C79306 * C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
               C166 +
           (C52140 * C167 + C52053 * C447 + C52141 * C1792 + C52054 * C2212) *
               C79308) *
              C79306 * C79027 * C79009 * C87 -
          ((C52141 * C1791 + C52054 * C2211 + C52140 * C168 + C52053 * C448) *
               C79308 +
           (C52141 * C1681 + C52054 * C1905 + C52140 * C97 + C52053 * C247) *
               C166) *
              C79306 * C79027 * C79009 * C88 +
          ((C52140 * C98 + C52053 * C248 + C52141 * C1685 + C52054 * C1909) *
               C166 +
           (C52140 * C169 + C52053 * C449 + C52141 * C1795 + C52054 * C2215) *
               C79308) *
              C79306 * C79027 * C79009 * C89 -
          ((C52141 * C1797 + C52054 * C2217 + C52140 * C170 + C52053 * C450) *
               C79308 +
           (C52141 * C1687 + C52054 * C1911 + C52140 * C99 + C52053 * C249) *
               C166) *
              C79306 * C79027 * C79009 * C90 +
          ((C52140 * C100 + C52053 * C250 + C52141 * C3255 + C52054 * C3400) *
               C166 +
           (C52140 * C171 + C52053 * C451 + C52141 * C3326 + C52054 * C3614) *
               C79308) *
              C79306 * C79027 * C79009 * C91)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
                C166 +
            (C52140 * C167 + C52053 * C447 + C52141 * C1792 + C52054 * C2212) *
                C79308) *
               C79306 * C79027 * C4921 -
           ((C52141 * C4047 + C52054 * C4501 + C52140 * C859 + C52053 * C1279) *
                C79308 +
            (C52141 * C3931 + C52054 * C4165 + C52140 * C749 + C52053 * C973) *
                C166) *
               C79306 * C79027 * C4922 +
           ((C52140 * C750 + C52053 * C974 + C52141 * C6044 + C52054 * C6228) *
                C166 +
            (C52140 * C860 + C52053 * C1280 + C52141 * C6142 + C52054 * C6480) *
                C79308) *
               C79306 * C79027 * C79259) *
              C79297 +
          (((C52140 * C748 + C52053 * C972 + C52141 * C3932 + C52054 * C4166) *
                C166 +
            (C52140 * C858 + C52053 * C1278 + C52141 * C4048 + C52054 * C4502) *
                C79308) *
               C79306 * C79027 * C4922 -
           ((C52141 * C1791 + C52054 * C2211 + C52140 * C168 + C52053 * C448) *
                C79308 +
            (C52141 * C1681 + C52054 * C1905 + C52140 * C97 + C52053 * C247) *
                C166) *
               C79306 * C79027 * C4921 -
           ((C52141 * C6141 + C52054 * C6479 + C52140 * C861 + C52053 * C1281) *
                C79308 +
            (C52141 * C6043 + C52054 * C6227 + C52140 * C751 + C52053 * C975) *
                C166) *
               C79306 * C79027 * C79259) *
              C79281 +
          (((C52140 * C98 + C52053 * C248 + C52141 * C1685 + C52054 * C1909) *
                C166 +
            (C52140 * C169 + C52053 * C449 + C52141 * C1795 + C52054 * C2215) *
                C79308) *
               C79306 * C79027 * C4921 -
           ((C52141 * C4049 + C52054 * C4503 + C52140 * C862 + C52053 * C1282) *
                C79308 +
            (C52141 * C3933 + C52054 * C4167 + C52140 * C752 + C52053 * C976) *
                C166) *
               C79306 * C79027 * C4922 +
           ((C52140 * C753 + C52053 * C977 + C52141 * C7477 + C52054 * C7686) *
                C166 +
            (C52140 * C863 + C52053 * C1283 + C52141 * C7580 + C52054 * C7996) *
                C79308) *
               C79306 * C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
               C166 +
           (C52140 * C167 + C52053 * C447 + C52141 * C1792 + C52054 * C2212) *
               C79308) *
              C79306 * C79027 * C5561 -
          ((C52141 * C4047 + C52054 * C4501 + C52140 * C859 + C52053 * C1279) *
               C79308 +
           (C52141 * C3931 + C52054 * C4165 + C52140 * C749 + C52053 * C973) *
               C166) *
              C79306 * C79027 * C5562 +
          ((C52140 * C750 + C52053 * C974 + C52141 * C6044 + C52054 * C6228) *
               C166 +
           (C52140 * C860 + C52053 * C1280 + C52141 * C6142 + C52054 * C6480) *
               C79308) *
              C79306 * C79027 * C5563 -
          ((C52141 * C8451 + C52054 * C8729 + C52140 * C5626 + C52053 * C5822) *
               C79308 +
           (C52141 * C8377 + C52054 * C8521 + C52140 * C5568 + C52053 * C5676) *
               C166) *
              C79306 * C79027 * C5564 +
          ((C52140 * C5569 + C52053 * C5677 + C52141 * C34055 +
            C52054 * C34199) *
               C166 +
           (C52140 * C5627 + C52053 * C5823 + C52141 * C34131 +
            C52054 * C34417) *
               C79308) *
              C79306 * C79027 * C5565) *
         C78981) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
                C166 +
            (C52140 * C167 + C52053 * C447 + C52141 * C1792 + C52054 * C2212) *
                C79308) *
               C79306 * C9011 -
           ((C52141 * C1793 + C52054 * C2213 + C52140 * C1792 +
             C52053 * C2212) *
                C79308 +
            (C52141 * C1683 + C52054 * C1907 + C52140 * C1682 +
             C52053 * C1906) *
                C166) *
               C79306 * C9012 +
           ((C52140 * C1683 + C52053 * C1907 + C52141 * C10320 +
             C52054 * C10428) *
                C166 +
            (C52140 * C1793 + C52053 * C2213 + C52141 * C10378 +
             C52054 * C10574) *
                C79308) *
               C79306 * C79262) *
              C79009 * C79297 +
          (((C52140 * C1681 + C52053 * C1905 + C52141 * C1684 +
             C52054 * C1908) *
                C166 +
            (C52140 * C1791 + C52053 * C2211 + C52141 * C1794 +
             C52054 * C2214) *
                C79308) *
               C79306 * C9012 -
           ((C52141 * C1791 + C52054 * C2211 + C52140 * C168 + C52053 * C448) *
                C79308 +
            (C52141 * C1681 + C52054 * C1905 + C52140 * C97 + C52053 * C247) *
                C166) *
               C79306 * C9011 -
           ((C52141 * C10377 + C52054 * C10573 + C52140 * C1794 +
             C52053 * C2214) *
                C79308 +
            (C52141 * C10319 + C52054 * C10427 + C52140 * C1684 +
             C52053 * C1908) *
                C166) *
               C79306 * C79262) *
              C79009 * C79281 +
          (((C52140 * C98 + C52053 * C248 + C52141 * C1685 + C52054 * C1909) *
                C166 +
            (C52140 * C169 + C52053 * C449 + C52141 * C1795 + C52054 * C2215) *
                C79308) *
               C79306 * C9011 -
           ((C52141 * C1796 + C52054 * C2216 + C52140 * C1795 +
             C52053 * C2215) *
                C79308 +
            (C52141 * C1686 + C52054 * C1910 + C52140 * C1685 +
             C52053 * C1909) *
                C166) *
               C79306 * C9012 +
           ((C52140 * C1686 + C52053 * C1910 + C52141 * C11721 +
             C52054 * C11866) *
                C166 +
            (C52140 * C1796 + C52053 * C2216 + C52141 * C11792 +
             C52054 * C12080) *
                C79308) *
               C79306 * C79262) *
              C79009 * C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
                C166 +
            (C52140 * C167 + C52053 * C447 + C52141 * C1792 + C52054 * C2212) *
                C79308) *
               C79306 * C9011 -
           ((C52141 * C1793 + C52054 * C2213 + C52140 * C1792 +
             C52053 * C2212) *
                C79308 +
            (C52141 * C1683 + C52054 * C1907 + C52140 * C1682 +
             C52053 * C1906) *
                C166) *
               C79306 * C9012 +
           ((C52140 * C1683 + C52053 * C1907 + C52141 * C10320 +
             C52054 * C10428) *
                C166 +
            (C52140 * C1793 + C52053 * C2213 + C52141 * C10378 +
             C52054 * C10574) *
                C79308) *
               C79306 * C79262) *
              C79300 +
          (((C52140 * C3931 + C52053 * C4165 + C52141 * C6042 +
             C52054 * C6226) *
                C166 +
            (C52140 * C4047 + C52053 * C4501 + C52141 * C6140 +
             C52054 * C6478) *
                C79308) *
               C79306 * C9012 -
           ((C52141 * C4047 + C52054 * C4501 + C52140 * C859 + C52053 * C1279) *
                C79308 +
            (C52141 * C3931 + C52054 * C4165 + C52140 * C749 + C52053 * C973) *
                C166) *
               C79306 * C9011 -
           ((C52141 * C12439 + C52054 * C12717 + C52140 * C6140 +
             C52053 * C6478) *
                C79308 +
            (C52141 * C12365 + C52054 * C12509 + C52140 * C6042 +
             C52053 * C6226) *
                C166) *
               C79306 * C79262) *
              C79285 +
          (((C52140 * C750 + C52053 * C974 + C52141 * C6044 + C52054 * C6228) *
                C166 +
            (C52140 * C860 + C52053 * C1280 + C52141 * C6142 + C52054 * C6480) *
                C79308) *
               C79306 * C9011 -
           ((C52141 * C6143 + C52054 * C6481 + C52140 * C6142 +
             C52053 * C6480) *
                C79308 +
            (C52141 * C6045 + C52054 * C6229 + C52140 * C6044 +
             C52053 * C6228) *
                C166) *
               C79306 * C9012 +
           ((C52140 * C6045 + C52053 * C6229 + C52141 * C37933 +
             C52054 * C38077) *
                C166 +
            (C52140 * C6143 + C52053 * C6481 + C52141 * C38009 +
             C52054 * C38295) *
                C79308) *
               C79306 * C79262) *
              C79259) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eezx[64] += (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   ((((C26498 * C96 + C79306 * C102) * C52140 +
                      (C26498 * C246 + C79306 * C515) * C52053 +
                      (C26498 * C1682 + C79306 * C1690) * C52141 +
                      (C26498 * C1906 + C79306 * C2314) * C52054) *
                         C79308 * C79027 * C79300 -
                     (C30345 * C52054 + C30028 * C52141 + C27516 * C52053 +
                      C27246 * C52140) *
                         C79308 * C79027 * C79285 +
                     (C27249 * C52140 + C27517 * C52053 + C32045 * C52141 +
                      C32299 * C52054) *
                         C79308 * C79027 * C79259) *
                        C745 +
                    ((C27250 * C52140 + C27518 * C52053 + C30029 * C52141 +
                      C30346 * C52054) *
                         C79308 * C79027 * C79285 -
                     ((C26498 * C1905 + C79306 * C2313) * C52054 +
                      (C26498 * C1681 + C79306 * C1689) * C52141 +
                      (C26498 * C247 + C79306 * C516) * C52053 +
                      (C26498 * C97 + C79306 * C103) * C52140) *
                         C79308 * C79027 * C79300 -
                     (C33792 * C52054 + C33492 * C52141 + C27519 * C52053 +
                      C27252 * C52140) *
                         C79308 * C79027 * C79259) *
                        C746 +
                    (((C26498 * C98 + C79306 * C104) * C52140 +
                      (C26498 * C248 + C79306 * C517) * C52053 +
                      (C26498 * C1685 + C79306 * C1693) * C52141 +
                      (C26498 * C1909 + C79306 * C2317) * C52054) *
                         C79308 * C79027 * C79300 -
                     (C30347 * C52054 + C30032 * C52141 + C27520 * C52053 +
                      C27254 * C52140) *
                         C79308 * C79027 * C79285 +
                     (C27257 * C52140 + C27521 * C52053 +
                      (C26498 * C7477 + C79306 * C7478) * C52141 +
                      (C26498 * C7686 + C79306 * C8100) * C52054) *
                         C79308 * C79027 * C79259) *
                        C79253)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   (((C26498 * C96 + C79306 * C102) * C52140 +
                     (C26498 * C246 + C79306 * C515) * C52053 +
                     (C26498 * C1682 + C79306 * C1690) * C52141 +
                     (C26498 * C1906 + C79306 * C2314) * C52054) *
                        C79308 * C79027 * C79009 * C87 -
                    ((C26498 * C1905 + C79306 * C2313) * C52054 +
                     (C26498 * C1681 + C79306 * C1689) * C52141 +
                     (C26498 * C247 + C79306 * C516) * C52053 +
                     (C26498 * C97 + C79306 * C103) * C52140) *
                        C79308 * C79027 * C79009 * C88 +
                    ((C26498 * C98 + C79306 * C104) * C52140 +
                     (C26498 * C248 + C79306 * C517) * C52053 +
                     (C26498 * C1685 + C79306 * C1693) * C52141 +
                     (C26498 * C1909 + C79306 * C2317) * C52054) *
                        C79308 * C79027 * C79009 * C89 -
                    ((C26498 * C1911 + C79306 * C2319) * C52054 +
                     (C26498 * C1687 + C79306 * C1695) * C52141 +
                     (C26498 * C249 + C79306 * C518) * C52053 +
                     (C26498 * C99 + C79306 * C105) * C52140) *
                        C79308 * C79027 * C79009 * C90 +
                    ((C26498 * C100 + C79306 * C106) * C52140 +
                     (C26498 * C250 + C79306 * C519) * C52053 +
                     (C26498 * C3255 + C79306 * C3256) * C52141 +
                     (C26498 * C3400 + C79306 * C3686) * C52054) *
                        C79308 * C79027 * C79009 * C91)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   ((((C26498 * C96 + C79306 * C102) * C52140 +
                      (C26498 * C246 + C79306 * C515) * C52053 +
                      C53460 * C52141 + C53734 * C52054) *
                         C79308 * C79027 * C4921 -
                     (C30345 * C52054 + C30028 * C52141 + C27516 * C52053 +
                      C27246 * C52140) *
                         C79308 * C79027 * C4922 +
                     (C27249 * C52140 + C27517 * C52053 + C32045 * C52141 +
                      C32299 * C52054) *
                         C79308 * C79027 * C79259) *
                        C79297 +
                    ((C27250 * C52140 + C27518 * C52053 + C30029 * C52141 +
                      C30346 * C52054) *
                         C79308 * C79027 * C4922 -
                     (C53736 * C52054 + C53464 * C52141 +
                      (C26498 * C247 + C79306 * C516) * C52053 +
                      (C26498 * C97 + C79306 * C103) * C52140) *
                         C79308 * C79027 * C4921 -
                     (C33792 * C52054 + C33492 * C52141 + C27519 * C52053 +
                      C27252 * C52140) *
                         C79308 * C79027 * C79259) *
                        C79281 +
                    (((C26498 * C98 + C79306 * C104) * C52140 +
                      (C26498 * C248 + C79306 * C517) * C52053 +
                      C53468 * C52141 + C53738 * C52054) *
                         C79308 * C79027 * C4921 -
                     (C30347 * C52054 + C30032 * C52141 + C27520 * C52053 +
                      C27254 * C52140) *
                         C79308 * C79027 * C4922 +
                     (C27257 * C52140 + C27521 * C52053 +
                      (C26498 * C7477 + C79306 * C7478) * C52141 +
                      (C26498 * C7686 + C79306 * C8100) * C52054) *
                         C79308 * C79027 * C79259) *
                        C79253)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   (((C26498 * C96 + C79306 * C102) * C52140 +
                     (C26498 * C246 + C79306 * C515) * C52053 +
                     C53460 * C52141 + C53734 * C52054) *
                        C79308 * C79027 * C5561 -
                    (C30345 * C52054 + C30028 * C52141 + C27516 * C52053 +
                     C27246 * C52140) *
                        C79308 * C79027 * C5562 +
                    (C27249 * C52140 + C27517 * C52053 + C32045 * C52141 +
                     C32299 * C52054) *
                        C79308 * C79027 * C5563 -
                    (C34492 * C52054 + C34282 * C52141 + C31581 * C52053 +
                     C31432 * C52140) *
                        C79308 * C79027 * C5564 +
                    (C31435 * C52140 + C31582 * C52053 +
                     (C26498 * C34055 + C79306 * C34056) * C52141 +
                     (C26498 * C34199 + C79306 * C34487) * C52054) *
                        C79308 * C79027 * C5565) *
                   C78981) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C26498 * C96 + C79306 * C102) * C52140 +
                      (C26498 * C246 + C79306 * C515) * C52053 +
                      C53460 * C52141 + C53734 * C52054) *
                         C79308 * C9011 -
                     (C53735 * C52054 + C53463 * C52141 + C53734 * C52053 +
                      C53460 * C52140) *
                         C79308 * C9012 +
                     (C53463 * C52140 + C53735 * C52053 +
                      (C26498 * C10320 + C79306 * C10324) * C52141 +
                      (C26498 * C10428 + C79306 * C10620) * C52054) *
                         C79308 * C79262) *
                        C79009 * C79297 +
                    ((C53464 * C52140 + C53736 * C52053 + C53466 * C52141 +
                      C53737 * C52054) *
                         C79308 * C9012 -
                     (C53736 * C52054 + C53464 * C52141 +
                      (C26498 * C247 + C79306 * C516) * C52053 +
                      (C26498 * C97 + C79306 * C103) * C52140) *
                         C79308 * C9011 -
                     ((C26498 * C10427 + C79306 * C10619) * C52054 +
                      (C26498 * C10319 + C79306 * C10323) * C52141 +
                      C53737 * C52053 + C53466 * C52140) *
                         C79308 * C79262) *
                        C79009 * C79281 +
                    (((C26498 * C98 + C79306 * C104) * C52140 +
                      (C26498 * C248 + C79306 * C517) * C52053 +
                      C53468 * C52141 + C53738 * C52054) *
                         C79308 * C9011 -
                     (C53739 * C52054 + C53471 * C52141 + C53738 * C52053 +
                      C53468 * C52140) *
                         C79308 * C9012 +
                     (C53471 * C52140 + C53739 * C52053 +
                      (C26498 * C11721 + C79306 * C11722) * C52141 +
                      (C26498 * C11866 + C79306 * C12152) * C52054) *
                         C79308 * C79262) *
                        C79009 * C79253)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C26498 * C96 + C79306 * C102) * C52140 +
                      (C26498 * C246 + C79306 * C515) * C52053 +
                      C53460 * C52141 + C53734 * C52054) *
                         C79308 * C9011 -
                     (C53735 * C52054 + C53463 * C52141 + C53734 * C52053 +
                      C53460 * C52140) *
                         C79308 * C9012 +
                     (C53463 * C52140 + C53735 * C52053 +
                      (C26498 * C10320 + C79306 * C10324) * C52141 +
                      (C26498 * C10428 + C79306 * C10620) * C52054) *
                         C79308 * C79262) *
                        C79300 +
                    ((C30028 * C52140 + C30345 * C52053 + C32043 * C52141 +
                      C32298 * C52054) *
                         C79308 * C9012 -
                     (C30345 * C52054 + C30028 * C52141 + C27516 * C52053 +
                      C27246 * C52140) *
                         C79308 * C9011 -
                     (C38370 * C52054 + C38160 * C52141 + C32298 * C52053 +
                      C32043 * C52140) *
                         C79308 * C79262) *
                        C79285 +
                    ((C27249 * C52140 + C27517 * C52053 + C32045 * C52141 +
                      C32299 * C52054) *
                         C79308 * C9011 -
                     (C32300 * C52054 + C32048 * C52141 + C32299 * C52053 +
                      C32045 * C52140) *
                         C79308 * C9012 +
                     (C32048 * C52140 + C32300 * C52053 +
                      (C26498 * C37933 + C79306 * C37934) * C52141 +
                      (C26498 * C38077 + C79306 * C38365) * C52054) *
                         C79308 * C79262) *
                        C79259) *
                   C78981) /
                      (p * q * std::sqrt(p + q));
    d2eezy[64] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C166 * C96 + C79308 * C167) * C52140 +
            (C166 * C246 + C79308 * C563) * C52053 +
            (C166 * C1682 + C79308 * C1792) * C52141 +
            (C166 * C1906 + C79308 * C2396) * C52054) *
               C79306 * C79027 * C79300 -
           ((C166 * C4165 + C79308 * C4715) * C52054 +
            (C166 * C3931 + C79308 * C4047) * C52141 +
            (C166 * C973 + C79308 * C1463) * C52053 +
            (C166 * C749 + C79308 * C859) * C52140) *
               C79306 * C79027 * C79285 +
           ((C166 * C750 + C79308 * C860) * C52140 +
            (C166 * C974 + C79308 * C1464) * C52053 +
            (C166 * C6044 + C79308 * C6142) * C52141 +
            (C166 * C6228 + C79308 * C6640) * C52054) *
               C79306 * C79027 * C79259) *
              C745 +
          ((C892 * C52140 + C1483 * C52053 + C4064 * C52141 + C4726 * C52054) *
               C79306 * C79027 * C79285 -
           (C2416 * C52054 + C1825 * C52141 + C582 * C52053 + C196 * C52140) *
               C79306 * C79027 * C79300 -
           (C8204 * C52054 + C7588 * C52141 + C1484 * C52053 + C893 * C52140) *
               C79306 * C79027 * C79259) *
              C746 +
          ((C199 * C52140 + C583 * C52053 + C1828 * C52141 + C2418 * C52054) *
               C79306 * C79027 * C79300 -
           (C4727 * C52054 + C4067 * C52141 + C1485 * C52053 + C895 * C52140) *
               C79306 * C79027 * C79285 +
           (C898 * C52140 + C1486 * C52053 +
            (C166 * C7477 + C79308 * C7580) * C52141 +
            (C166 * C7686 + C79308 * C8199) * C52054) *
               C79306 * C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C166 * C96 + C79308 * C167) * C52140 +
           (C166 * C246 + C79308 * C563) * C52053 +
           (C166 * C1682 + C79308 * C1792) * C52141 +
           (C166 * C1906 + C79308 * C2396) * C52054) *
              C79306 * C79027 * C79009 * C87 -
          (C2416 * C52054 + C1825 * C52141 + C582 * C52053 + C196 * C52140) *
              C79306 * C79027 * C79009 * C88 +
          (C199 * C52140 + C583 * C52053 + C1828 * C52141 + C2418 * C52054) *
              C79306 * C79027 * C79009 * C89 -
          (C3758 * C52054 + C3334 * C52141 + C584 * C52053 + C200 * C52140) *
              C79306 * C79027 * C79009 * C90 +
          (C203 * C52140 + C585 * C52053 +
           (C166 * C3255 + C79308 * C3326) * C52141 +
           (C166 * C3400 + C79308 * C3753) * C52054) *
              C79306 * C79027 * C79009 * C91)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C166 * C96 + C79308 * C167) * C52140 +
            (C166 * C246 + C79308 * C563) * C52053 + C53280 * C52141 +
            C53818 * C52054) *
               C79306 * C79027 * C4921 -
           (C55930 * C52054 + C55322 * C52141 +
            (C166 * C973 + C79308 * C1463) * C52053 +
            (C166 * C749 + C79308 * C859) * C52140) *
               C79306 * C79027 * C4922 +
           ((C166 * C750 + C79308 * C860) * C52140 +
            (C166 * C974 + C79308 * C1464) * C52053 +
            (C166 * C6044 + C79308 * C6142) * C52141 +
            (C166 * C6228 + C79308 * C6640) * C52054) *
               C79306 * C79027 * C79259) *
              C79297 +
          ((C892 * C52140 + C1483 * C52053 + C4064 * C52141 + C4726 * C52054) *
               C79306 * C79027 * C4922 -
           (C2416 * C52054 + C1825 * C52141 + C582 * C52053 + C196 * C52140) *
               C79306 * C79027 * C4921 -
           (C8204 * C52054 + C7588 * C52141 + C1484 * C52053 + C893 * C52140) *
               C79306 * C79027 * C79259) *
              C79281 +
          ((C199 * C52140 + C583 * C52053 + C1828 * C52141 + C2418 * C52054) *
               C79306 * C79027 * C4921 -
           (C4727 * C52054 + C4067 * C52141 + C1485 * C52053 + C895 * C52140) *
               C79306 * C79027 * C4922 +
           (C898 * C52140 + C1486 * C52053 +
            (C166 * C7477 + C79308 * C7580) * C52141 +
            (C166 * C7686 + C79308 * C8199) * C52054) *
               C79306 * C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C166 * C96 + C79308 * C167) * C52140 +
           (C166 * C246 + C79308 * C563) * C52053 + C53280 * C52141 +
           C53818 * C52054) *
              C79306 * C79027 * C5561 -
          (C55930 * C52054 + C55322 * C52141 +
           (C166 * C973 + C79308 * C1463) * C52053 +
           (C166 * C749 + C79308 * C859) * C52140) *
              C79306 * C79027 * C5562 +
          ((C166 * C750 + C79308 * C860) * C52140 +
           (C166 * C974 + C79308 * C1464) * C52053 +
           (C166 * C6044 + C79308 * C6142) * C52141 +
           (C166 * C6228 + C79308 * C6640) * C52054) *
              C79306 * C79027 * C5563 -
          ((C166 * C8521 + C79308 * C8865) * C52054 +
           (C166 * C8377 + C79308 * C8451) * C52141 +
           (C166 * C5676 + C79308 * C5914) * C52053 +
           (C166 * C5568 + C79308 * C5626) * C52140) *
              C79306 * C79027 * C5564 +
          ((C166 * C5569 + C79308 * C5627) * C52140 +
           (C166 * C5677 + C79308 * C5915) * C52053 +
           (C166 * C34055 + C79308 * C34131) * C52141 +
           (C166 * C34199 + C79308 * C34559) * C52054) *
              C79306 * C79027 * C5565) *
         C78981) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C166 * C96 + C79308 * C167) * C52140 +
            (C166 * C246 + C79308 * C563) * C52053 + C53280 * C52141 +
            C53818 * C52054) *
               C79306 * C9011 -
           (C53819 * C52054 + C53283 * C52141 + C53818 * C52053 +
            C53280 * C52140) *
               C79306 * C9012 +
           (C53283 * C52140 + C53819 * C52053 +
            (C166 * C10320 + C79308 * C10378) * C52141 +
            (C166 * C10428 + C79308 * C10666) * C52054) *
               C79306 * C79262) *
              C79009 * C79297 +
          ((C1825 * C52140 + C2416 * C52053 + C1826 * C52141 + C2417 * C52054) *
               C79306 * C9012 -
           (C2416 * C52054 + C1825 * C52141 + C582 * C52053 + C196 * C52140) *
               C79306 * C9011 -
           (C12224 * C52054 + C11800 * C52141 + C2417 * C52053 +
            C1826 * C52140) *
               C79306 * C79262) *
              C79009 * C79281 +
          ((C199 * C52140 + C583 * C52053 + C1828 * C52141 + C2418 * C52054) *
               C79306 * C9011 -
           (C2419 * C52054 + C1831 * C52141 + C2418 * C52053 + C1828 * C52140) *
               C79306 * C9012 +
           (C1831 * C52140 + C2419 * C52053 +
            (C166 * C11721 + C79308 * C11792) * C52141 +
            (C166 * C11866 + C79308 * C12219) * C52054) *
               C79306 * C79262) *
              C79009 * C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C166 * C96 + C79308 * C167) * C52140 +
            (C166 * C246 + C79308 * C563) * C52053 + C53280 * C52141 +
            C53818 * C52054) *
               C79306 * C9011 -
           (C53819 * C52054 + C53283 * C52141 + C53818 * C52053 +
            C53280 * C52140) *
               C79306 * C9012 +
           (C53283 * C52140 + C53819 * C52053 +
            (C166 * C10320 + C79308 * C10378) * C52141 +
            (C166 * C10428 + C79308 * C10666) * C52054) *
               C79306 * C79262) *
              C79300 +
          ((C55322 * C52140 + C55930 * C52053 + C57244 * C52141 +
            C57731 * C52054) *
               C79306 * C9012 -
           (C55930 * C52054 + C55322 * C52141 +
            (C166 * C973 + C79308 * C1463) * C52053 +
            (C166 * C749 + C79308 * C859) * C52140) *
               C79306 * C9011 -
           ((C166 * C12509 + C79308 * C12853) * C52054 +
            (C166 * C12365 + C79308 * C12439) * C52141 + C57731 * C52053 +
            C57244 * C52140) *
               C79306 * C79262) *
              C79285 +
          (((C166 * C750 + C79308 * C860) * C52140 +
            (C166 * C974 + C79308 * C1464) * C52053 + C57246 * C52141 +
            C57732 * C52054) *
               C79306 * C9011 -
           (C57733 * C52054 + C57249 * C52141 + C57732 * C52053 +
            C57246 * C52140) *
               C79306 * C9012 +
           (C57249 * C52140 + C57733 * C52053 +
            (C166 * C37933 + C79308 * C38009) * C52141 +
            (C166 * C38077 + C79308 * C38437) * C52054) *
               C79306 * C79262) *
              C79259) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eezz[64] += (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   (((C52394 * C96 + C52397 + C52397 + C52053 * C632 +
                      C52395 * C1682 + C52398 + C52398 + C52054 * C2498) *
                         C79308 * C79306 * C79027 * C79300 -
                     (C52395 * C3931 + C53073 + C53073 + C52054 * C4827 +
                      C52394 * C749 + C53074 + C53074 + C52053 * C1565) *
                         C79308 * C79306 * C79027 * C79285 +
                     (C52394 * C750 + C53075 + C53075 + C52053 * C1566 +
                      C52395 * C6044 + C53076 + C53076 + C52054 * C6720) *
                         C79308 * C79306 * C79027 * C79259) *
                        C745 +
                    ((C52394 * C748 + C53077 + C53077 + C52053 * C1564 +
                      C52395 * C3932 + C53078 + C53078 + C52054 * C4828) *
                         C79308 * C79306 * C79027 * C79285 -
                     (C52395 * C1681 + C52399 + C52399 + C52054 * C2497 +
                      C52394 * C97 + C52400 + C52400 + C52053 * C633) *
                         C79308 * C79306 * C79027 * C79300 -
                     (C52395 * C6043 + C53079 + C53079 + C52054 * C6719 +
                      C52394 * C751 + C53080 + C53080 + C52053 * C1567) *
                         C79308 * C79306 * C79027 * C79259) *
                        C746 +
                    ((C52394 * C98 + C52401 + C52401 + C52053 * C634 +
                      C52395 * C1685 + C52402 + C52402 + C52054 * C2501) *
                         C79308 * C79306 * C79027 * C79300 -
                     (C52395 * C3933 + C53081 + C53081 + C52054 * C4829 +
                      C52394 * C752 + C53082 + C53082 + C52053 * C1568) *
                         C79308 * C79306 * C79027 * C79285 +
                     (C52394 * C753 + C53083 + C53083 + C52053 * C1569 +
                      C52395 * C7477 + C53084 + C53084 + C52054 * C8303) *
                         C79308 * C79306 * C79027 * C79259) *
                        C79253)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   ((C52394 * C96 + C52397 + C52397 + C52053 * C632 +
                     C52395 * C1682 + C52398 + C52398 + C52054 * C2498) *
                        C79308 * C79306 * C79027 * C79009 * C87 -
                    (C52395 * C1681 + C52399 + C52399 + C52054 * C2497 +
                     C52394 * C97 + C52400 + C52400 + C52053 * C633) *
                        C79308 * C79306 * C79027 * C79009 * C88 +
                    (C52394 * C98 + C52401 + C52401 + C52053 * C634 +
                     C52395 * C1685 + C52402 + C52402 + C52054 * C2501) *
                        C79308 * C79306 * C79027 * C79009 * C89 -
                    (C52395 * C1687 + C52403 + C52403 + C52054 * C2503 +
                     C52394 * C99 + C52404 + C52404 + C52053 * C635) *
                        C79308 * C79306 * C79027 * C79009 * C90 +
                    (C52394 * C100 + C52405 + C52405 + C52053 * C636 +
                     C52395 * C3255 + C52406 + C52406 + C52054 * C3825) *
                        C79308 * C79306 * C79027 * C79009 * C91)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   (((C52394 * C96 + C52397 + C52397 + C52053 * C632 +
                      C52395 * C1682 + C52398 + C52398 + C52054 * C2498) *
                         C79308 * C79306 * C79027 * C4921 -
                     (C52395 * C3931 + C53073 + C53073 + C52054 * C4827 +
                      C52394 * C749 + C53074 + C53074 + C52053 * C1565) *
                         C79308 * C79306 * C79027 * C4922 +
                     (C52394 * C750 + C53075 + C53075 + C52053 * C1566 +
                      C52395 * C6044 + C53076 + C53076 + C52054 * C6720) *
                         C79308 * C79306 * C79027 * C79259) *
                        C79297 +
                    ((C52394 * C748 + C53077 + C53077 + C52053 * C1564 +
                      C52395 * C3932 + C53078 + C53078 + C52054 * C4828) *
                         C79308 * C79306 * C79027 * C4922 -
                     (C52395 * C1681 + C52399 + C52399 + C52054 * C2497 +
                      C52394 * C97 + C52400 + C52400 + C52053 * C633) *
                         C79308 * C79306 * C79027 * C4921 -
                     (C52395 * C6043 + C53079 + C53079 + C52054 * C6719 +
                      C52394 * C751 + C53080 + C53080 + C52053 * C1567) *
                         C79308 * C79306 * C79027 * C79259) *
                        C79281 +
                    ((C52394 * C98 + C52401 + C52401 + C52053 * C634 +
                      C52395 * C1685 + C52402 + C52402 + C52054 * C2501) *
                         C79308 * C79306 * C79027 * C4921 -
                     (C52395 * C3933 + C53081 + C53081 + C52054 * C4829 +
                      C52394 * C752 + C53082 + C53082 + C52053 * C1568) *
                         C79308 * C79306 * C79027 * C4922 +
                     (C52394 * C753 + C53083 + C53083 + C52053 * C1569 +
                      C52395 * C7477 + C53084 + C53084 + C52054 * C8303) *
                         C79308 * C79306 * C79027 * C79259) *
                        C79253)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   ((C52394 * C96 + C52397 + C52397 + C52053 * C632 +
                     C52395 * C1682 + C52398 + C52398 + C52054 * C2498) *
                        C79308 * C79306 * C79027 * C5561 -
                    (C52395 * C3931 + C53073 + C53073 + C52054 * C4827 +
                     C52394 * C749 + C53074 + C53074 + C52053 * C1565) *
                        C79308 * C79306 * C79027 * C5562 +
                    (C52394 * C750 + C53075 + C53075 + C52053 * C1566 +
                     C52395 * C6044 + C53076 + C53076 + C52054 * C6720) *
                        C79308 * C79306 * C79027 * C5563 -
                    (C52395 * C8377 + C57080 + C57080 + C52054 * C8933 +
                     C52394 * C5568 + C57081 + C57081 + C52053 * C5960) *
                        C79308 * C79306 * C79027 * C5564 +
                    (C52394 * C5569 + C57082 + C57082 + C52053 * C5961 +
                     C52395 * C34055 + C57083 + C57083 + C52054 * C34626) *
                        C79308 * C79306 * C79027 * C5565) *
                   C78981) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C52394 * C96 + C52397 + C52397 + C52053 * C632 +
                      C52395 * C1682 + C52398 + C52398 + C52054 * C2498) *
                         C79308 * C79306 * C9011 -
                     (C52395 * C1683 + C53894 + C53894 + C52054 * C2499 +
                      C52394 * C1682 + C53895 + C53895 + C52053 * C2498) *
                         C79308 * C79306 * C9012 +
                     (C52394 * C1683 + C53896 + C53896 + C52053 * C2499 +
                      C52395 * C10320 + C53897 + C53897 + C52054 * C10712) *
                         C79308 * C79306 * C79262) *
                        C79009 * C79297 +
                    ((C52394 * C1681 + C53898 + C53898 + C52053 * C2497 +
                      C52395 * C1684 + C53899 + C53899 + C52054 * C2500) *
                         C79308 * C79306 * C9012 -
                     (C52395 * C1681 + C52399 + C52399 + C52054 * C2497 +
                      C52394 * C97 + C52400 + C52400 + C52053 * C633) *
                         C79308 * C79306 * C9011 -
                     (C52395 * C10319 + C53900 + C53900 + C52054 * C10711 +
                      C52394 * C1684 + C53901 + C53901 + C52053 * C2500) *
                         C79308 * C79306 * C79262) *
                        C79009 * C79281 +
                    ((C52394 * C98 + C52401 + C52401 + C52053 * C634 +
                      C52395 * C1685 + C52402 + C52402 + C52054 * C2501) *
                         C79308 * C79306 * C9011 -
                     (C52395 * C1686 + C53902 + C53902 + C52054 * C2502 +
                      C52394 * C1685 + C53903 + C53903 + C52053 * C2501) *
                         C79308 * C79306 * C9012 +
                     (C52394 * C1686 + C53904 + C53904 + C52053 * C2502 +
                      C52395 * C11721 + C53905 + C53905 + C52054 * C12291) *
                         C79308 * C79306 * C79262) *
                        C79009 * C79253)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C52394 * C96 + C52397 + C52397 + C52053 * C632 +
                      C52395 * C1682 + C52398 + C52398 + C52054 * C2498) *
                         C79308 * C79306 * C9011 -
                     (C52395 * C1683 + C53894 + C53894 + C52054 * C2499 +
                      C52394 * C1682 + C53895 + C53895 + C52053 * C2498) *
                         C79308 * C79306 * C9012 +
                     (C52394 * C1683 + C53896 + C53896 + C52053 * C2499 +
                      C52395 * C10320 + C53897 + C53897 + C52054 * C10712) *
                         C79308 * C79306 * C79262) *
                        C79300 +
                    ((C52394 * C3931 + C56029 + C56029 + C52053 * C4827 +
                      C52395 * C6042 + C56030 + C56030 + C52054 * C6718) *
                         C79308 * C79306 * C9012 -
                     (C52395 * C3931 + C53073 + C53073 + C52054 * C4827 +
                      C52394 * C749 + C53074 + C53074 + C52053 * C1565) *
                         C79308 * C79306 * C9011 -
                     (C52395 * C12365 + C57808 + C57808 + C52054 * C12921 +
                      C52394 * C6042 + C57809 + C57809 + C52053 * C6718) *
                         C79308 * C79306 * C79262) *
                        C79285 +
                    ((C52394 * C750 + C53075 + C53075 + C52053 * C1566 +
                      C52395 * C6044 + C53076 + C53076 + C52054 * C6720) *
                         C79308 * C79306 * C9011 -
                     (C52395 * C6045 + C57810 + C57810 + C52054 * C6721 +
                      C52394 * C6044 + C57811 + C57811 + C52053 * C6720) *
                         C79308 * C79306 * C9012 +
                     (C52394 * C6045 + C57812 + C57812 + C52053 * C6721 +
                      C52395 * C37933 + C57813 + C57813 + C52054 * C38504) *
                         C79308 * C79306 * C79262) *
                        C79259) *
                   C78981) /
                      (p * q * std::sqrt(p + q));
    d2eexx[65] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C52053 +
             C53184 * C52054) *
                C79308 * C17509 -
            (C53185 * C52054 + C53184 * C52053) * C79308 * C79114) *
               C79229 +
           ((C29703 * C52053 + C31774 * C52054) * C79308 * C79114 -
            (C29703 * C52054 + C26964 * C52053) * C79308 * C17509) *
               C79072) *
              C78986 +
          (((C53186 * C52053 + C53187 * C52054) * C79308 * C79114 -
            (C53186 * C52054 +
             (C26497 * C97 + C26503 + C26503 + C79306 * C109) * C52053) *
                C79308 * C17509) *
               C79229 +
           ((C26966 * C52053 + C29704 * C52054) * C79308 * C17509 -
            (C36469 * C52054 + C29704 * C52053) * C79308 * C79114) *
               C79072) *
              C78995 +
          ((((C26497 * C98 + C26504 + C26504 + C79306 * C110) * C52053 +
             C53188 * C52054) *
                C79308 * C17509 -
            (C53189 * C52054 + C53188 * C52053) * C79308 * C79114) *
               C79229 +
           ((C29705 * C52053 +
             (C26497 * C10817 + C27771 + C27771 + C79306 * C10819) * C52054) *
                C79308 * C79114 -
            (C29705 * C52054 + C26968 * C52053) * C79308 * C17509) *
               C79072) *
              C15086)) /
        (p * q * std::sqrt(p + q));
    d2eexy[65] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C166 * C96 + C79308 * C167) * C26498 +
              (C166 * C102 + C79308 * C173) * C79306) *
                 C52053 +
             (C53284 + C53285) * C52054) *
                C17509 -
            ((C53286 + C53287) * C52054 + (C53285 + C53284) * C52053) *
                C79114) *
               C79229 +
           (((C55324 + C55325) * C52053 + (C57250 + C57251) * C52054) * C79114 -
            ((C55325 + C55324) * C52054 +
             ((C166 * C757 + C79308 * C867) * C79306 +
              (C166 * C749 + C79308 * C859) * C26498) *
                 C52053) *
                C17509) *
               C79072) *
              C78986 +
          ((((C53272 + C53273) * C52053 + (C53274 + C53275) * C52054) * C79114 -
            ((C53273 + C53272) * C52054 +
             (C197 * C79306 + C196 * C26498) * C52053) *
                C17509) *
               C79229 +
           (((C892 * C26498 + C891 * C79306) * C52053 +
             (C55318 + C55319) * C52054) *
                C17509 -
            ((C61906 + C61907) * C52054 + (C55319 + C55318) * C52053) *
                C79114) *
               C79072) *
              C78995 +
          ((((C199 * C26498 + C198 * C79306) * C52053 +
             (C53276 + C53277) * C52054) *
                C17509 -
            ((C53278 + C53279) * C52054 + (C53277 + C53276) * C52053) *
                C79114) *
               C79229 +
           (((C55320 + C55321) * C52053 +
             ((C166 * C10817 + C79308 * C10920) * C26498 +
              (C166 * C10818 + C79308 * C10921) * C79306) *
                 C52054) *
                C79114 -
            ((C55321 + C55320) * C52054 +
             (C896 * C79306 + C895 * C26498) * C52053) *
                C17509) *
               C79072) *
              C15086)) /
        (p * q * std::sqrt(p + q));
    d2eexz[65] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
                 C26498 +
             (C52140 * C102 + C52053 * C252 + C52141 * C1690 + C52054 * C1914) *
                 C79306) *
                C79308 * C17509 -
            ((C52141 * C1691 + C52054 * C1915 + C52140 * C1690 +
              C52053 * C1914) *
                 C79306 +
             (C52141 * C1683 + C52054 * C1907 + C52140 * C1682 +
              C52053 * C1906) *
                 C26498) *
                C79308 * C79114) *
               C79229 +
           (((C52140 * C3931 + C52053 * C4165 + C52141 * C6042 +
              C52054 * C6226) *
                 C26498 +
             (C52140 * C3935 + C52053 * C4169 + C52141 * C6048 +
              C52054 * C6232) *
                 C79306) *
                C79308 * C79114 -
            ((C52141 * C3935 + C52054 * C4169 + C52140 * C757 + C52053 * C981) *
                 C79306 +
             (C52141 * C3931 + C52054 * C4165 + C52140 * C749 + C52053 * C973) *
                 C26498) *
                C79308 * C17509) *
               C79072) *
              C78986 +
          ((((C52140 * C1681 + C52053 * C1905 + C52141 * C1684 +
              C52054 * C1908) *
                 C26498 +
             (C52140 * C1689 + C52053 * C1913 + C52141 * C1692 +
              C52054 * C1916) *
                 C79306) *
                C79308 * C79114 -
            ((C52141 * C1689 + C52054 * C1913 + C52140 * C103 + C52053 * C253) *
                 C79306 +
             (C52141 * C1681 + C52054 * C1905 + C52140 * C97 + C52053 * C247) *
                 C26498) *
                C79308 * C17509) *
               C79229 +
           (((C52140 * C748 + C52053 * C972 + C52141 * C3932 + C52054 * C4166) *
                 C26498 +
             (C52140 * C756 + C52053 * C980 + C52141 * C3936 + C52054 * C4170) *
                 C79306) *
                C79308 * C17509 -
            ((C52141 * C6047 + C52054 * C6231 + C52140 * C3936 +
              C52053 * C4170) *
                 C79306 +
             (C52141 * C6041 + C52054 * C6225 + C52140 * C3932 +
              C52053 * C4166) *
                 C26498) *
                C79308 * C79114) *
               C79072) *
              C78995 +
          ((((C52140 * C98 + C52053 * C248 + C52141 * C1685 + C52054 * C1909) *
                 C26498 +
             (C52140 * C104 + C52053 * C254 + C52141 * C1693 + C52054 * C1917) *
                 C79306) *
                C79308 * C17509 -
            ((C52141 * C1694 + C52054 * C1918 + C52140 * C1693 +
              C52053 * C1917) *
                 C79306 +
             (C52141 * C1686 + C52054 * C1910 + C52140 * C1685 +
              C52053 * C1909) *
                 C26498) *
                C79308 * C79114) *
               C79229 +
           (((C52140 * C3933 + C52053 * C4167 + C52141 * C10817 +
              C52054 * C11026) *
                 C26498 +
             (C52140 * C3937 + C52053 * C4171 + C52141 * C10818 +
              C52054 * C11027) *
                 C79306) *
                C79308 * C79114 -
            ((C52141 * C3937 + C52054 * C4171 + C52140 * C760 + C52053 * C984) *
                 C79306 +
             (C52141 * C3933 + C52054 * C4167 + C52140 * C752 + C52053 * C976) *
                 C26498) *
                C79308 * C17509) *
               C79072) *
              C15086)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[65] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C26498 * C96 + C79306 * C102) * C166 +
              (C26498 * C167 + C79306 * C324) * C79308) *
                 C52053 +
             (C53472 + C53473) * C52054) *
                C17509 -
            ((C53474 + C53475) * C52054 + (C53473 + C53472) * C52053) *
                C79114) *
               C79229 +
           (((C55522 + C55523) * C52053 + (C57404 + C57405) * C52054) * C79114 -
            ((C55523 + C55522) * C52054 +
             (C27247 * C79308 + C27246 * C166) * C52053) *
                C17509) *
               C79072) *
              C78986 +
          ((((C53476 + C53477) * C52053 + (C53478 + C53479) * C52054) * C79114 -
            ((C53477 + C53476) * C52054 +
             ((C26498 * C168 + C79306 * C325) * C79308 +
              (C26498 * C97 + C79306 * C103) * C166) *
                 C52053) *
                C17509) *
               C79229 +
           (((C27250 * C166 + C27251 * C79308) * C52053 +
             (C55524 + C55525) * C52054) *
                C17509 -
            ((C62104 + C62105) * C52054 + (C55525 + C55524) * C52053) *
                C79114) *
               C79072) *
              C78995 +
          (((((C26498 * C98 + C79306 * C104) * C166 +
              (C26498 * C169 + C79306 * C326) * C79308) *
                 C52053 +
             (C53480 + C53481) * C52054) *
                C17509 -
            ((C53482 + C53483) * C52054 + (C53481 + C53480) * C52053) *
                C79114) *
               C79229 +
           (((C55526 + C55527) * C52053 +
             ((C26498 * C10817 + C79306 * C10818) * C166 +
              (C26498 * C10920 + C79306 * C11132) * C79308) *
                 C52054) *
                C79114 -
            ((C55527 + C55526) * C52054 +
             (C27255 * C79308 + C27254 * C166) * C52053) *
                C17509) *
               C79072) *
              C15086)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[65] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C372 * C96 + C380 + C380 + C79308 * C373) * C79306 * C52053 +
             C53572 * C52054) *
                C17509 -
            (C53573 * C52054 + C53572 * C52053) * C79114) *
               C79229 +
           ((C55633 * C52053 + C57500 * C52054) * C79114 -
            (C55633 * C52054 +
             (C372 * C749 + C1180 + C1180 + C79308 * C1169) * C79306 * C52053) *
                C17509) *
               C79072) *
              C78986 +
          (((C53562 * C52053 + C53563 * C52054) * C79114 -
            (C53562 * C52054 + C402 * C79306 * C52053) * C17509) *
               C79229 +
           ((C1201 * C79306 * C52053 + C55628 * C52054) * C17509 -
            (C62204 * C52054 + C55628 * C52053) * C79114) *
               C79072) *
              C78995 +
          (((C403 * C79306 * C52053 + C53564 * C52054) * C17509 -
            (C53565 * C52054 + C53564 * C52053) * C79114) *
               C79229 +
           ((C55629 * C52053 +
             (C372 * C10817 + C11235 + C11235 + C79308 * C11231) * C79306 *
                 C52054) *
                C79114 -
            (C55629 * C52054 + C1203 * C79306 * C52053) * C17509) *
               C79072) *
              C15086)) /
        (p * q * std::sqrt(p + q));
    d2eeyz[65] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
                 C166 +
             (C52140 * C167 + C52053 * C447 + C52141 * C1792 + C52054 * C2212) *
                 C79308) *
                C79306 * C17509 -
            ((C52141 * C1793 + C52054 * C2213 + C52140 * C1792 +
              C52053 * C2212) *
                 C79308 +
             (C52141 * C1683 + C52054 * C1907 + C52140 * C1682 +
              C52053 * C1906) *
                 C166) *
                C79306 * C79114) *
               C79229 +
           (((C52140 * C3931 + C52053 * C4165 + C52141 * C6042 +
              C52054 * C6226) *
                 C166 +
             (C52140 * C4047 + C52053 * C4501 + C52141 * C6140 +
              C52054 * C6478) *
                 C79308) *
                C79306 * C79114 -
            ((C52141 * C4047 + C52054 * C4501 + C52140 * C859 +
              C52053 * C1279) *
                 C79308 +
             (C52141 * C3931 + C52054 * C4165 + C52140 * C749 + C52053 * C973) *
                 C166) *
                C79306 * C17509) *
               C79072) *
              C78986 +
          ((((C52140 * C1681 + C52053 * C1905 + C52141 * C1684 +
              C52054 * C1908) *
                 C166 +
             (C52140 * C1791 + C52053 * C2211 + C52141 * C1794 +
              C52054 * C2214) *
                 C79308) *
                C79306 * C79114 -
            ((C52141 * C1791 + C52054 * C2211 + C52140 * C168 + C52053 * C448) *
                 C79308 +
             (C52141 * C1681 + C52054 * C1905 + C52140 * C97 + C52053 * C247) *
                 C166) *
                C79306 * C17509) *
               C79229 +
           (((C52140 * C748 + C52053 * C972 + C52141 * C3932 + C52054 * C4166) *
                 C166 +
             (C52140 * C858 + C52053 * C1278 + C52141 * C4048 +
              C52054 * C4502) *
                 C79308) *
                C79306 * C17509 -
            ((C52141 * C6139 + C52054 * C6477 + C52140 * C4048 +
              C52053 * C4502) *
                 C79308 +
             (C52141 * C6041 + C52054 * C6225 + C52140 * C3932 +
              C52053 * C4166) *
                 C166) *
                C79306 * C79114) *
               C79072) *
              C78995 +
          ((((C52140 * C98 + C52053 * C248 + C52141 * C1685 + C52054 * C1909) *
                 C166 +
             (C52140 * C169 + C52053 * C449 + C52141 * C1795 + C52054 * C2215) *
                 C79308) *
                C79306 * C17509 -
            ((C52141 * C1796 + C52054 * C2216 + C52140 * C1795 +
              C52053 * C2215) *
                 C79308 +
             (C52141 * C1686 + C52054 * C1910 + C52140 * C1685 +
              C52053 * C1909) *
                 C166) *
                C79306 * C79114) *
               C79229 +
           (((C52140 * C3933 + C52053 * C4167 + C52141 * C10817 +
              C52054 * C11026) *
                 C166 +
             (C52140 * C4049 + C52053 * C4503 + C52141 * C10920 +
              C52054 * C11336) *
                 C79308) *
                C79306 * C79114 -
            ((C52141 * C4049 + C52054 * C4503 + C52140 * C862 +
              C52053 * C1282) *
                 C79308 +
             (C52141 * C3933 + C52054 * C4167 + C52140 * C752 + C52053 * C976) *
                 C166) *
                C79306 * C17509) *
               C79072) *
              C15086)) /
        (p * q * std::sqrt(p + q));
    d2eezx[65] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C26498 * C96 + C79306 * C102) * C52140 +
                       (C26498 * C246 + C79306 * C515) * C52053 +
                       C53460 * C52141 + C53734 * C52054) *
                          C79308 * C17509 -
                      (C53735 * C52054 + C53463 * C52141 + C53734 * C52053 +
                       C53460 * C52140) *
                          C79308 * C79114) *
                         C79229 +
                     ((C30028 * C52140 + C30345 * C52053 + C32043 * C52141 +
                       C32298 * C52054) *
                          C79308 * C79114 -
                      (C30345 * C52054 + C30028 * C52141 + C27516 * C52053 +
                       C27246 * C52140) *
                          C79308 * C17509) *
                         C79072) *
                        C78986 +
                    (((C53464 * C52140 + C53736 * C52053 + C53466 * C52141 +
                       C53737 * C52054) *
                          C79308 * C79114 -
                      (C53736 * C52054 + C53464 * C52141 +
                       (C26498 * C247 + C79306 * C516) * C52053 +
                       (C26498 * C97 + C79306 * C103) * C52140) *
                          C79308 * C17509) *
                         C79229 +
                     ((C27250 * C52140 + C27518 * C52053 + C30029 * C52141 +
                       C30346 * C52054) *
                          C79308 * C17509 -
                      (C37072 * C52054 + C36772 * C52141 + C30346 * C52053 +
                       C30029 * C52140) *
                          C79308 * C79114) *
                         C79072) *
                        C78995 +
                    ((((C26498 * C98 + C79306 * C104) * C52140 +
                       (C26498 * C248 + C79306 * C517) * C52053 +
                       C53468 * C52141 + C53738 * C52054) *
                          C79308 * C17509 -
                      (C53739 * C52054 + C53471 * C52141 + C53738 * C52053 +
                       C53468 * C52140) *
                          C79308 * C79114) *
                         C79229 +
                     ((C30032 * C52140 + C30347 * C52053 +
                       (C26498 * C10817 + C79306 * C10818) * C52141 +
                       (C26498 * C11026 + C79306 * C11440) * C52054) *
                          C79308 * C79114 -
                      (C30347 * C52054 + C30032 * C52141 + C27520 * C52053 +
                       C27254 * C52140) *
                          C79308 * C17509) *
                         C79072) *
                        C15086)) /
                  (p * q * std::sqrt(p + q));
    d2eezy[65] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C166 * C96 + C79308 * C167) * C52140 +
             (C166 * C246 + C79308 * C563) * C52053 + C53280 * C52141 +
             C53818 * C52054) *
                C79306 * C17509 -
            (C53819 * C52054 + C53283 * C52141 + C53818 * C52053 +
             C53280 * C52140) *
                C79306 * C79114) *
               C79229 +
           ((C55322 * C52140 + C55930 * C52053 + C57244 * C52141 +
             C57731 * C52054) *
                C79306 * C79114 -
            (C55930 * C52054 + C55322 * C52141 +
             (C166 * C973 + C79308 * C1463) * C52053 +
             (C166 * C749 + C79308 * C859) * C52140) *
                C79306 * C17509) *
               C79072) *
              C78986 +
          (((C1825 * C52140 + C2416 * C52053 + C1826 * C52141 +
             C2417 * C52054) *
                C79306 * C79114 -
            (C2416 * C52054 + C1825 * C52141 + C582 * C52053 + C196 * C52140) *
                C79306 * C17509) *
               C79229 +
           ((C892 * C52140 + C1483 * C52053 + C4064 * C52141 + C4726 * C52054) *
                C79306 * C17509 -
            (C11544 * C52054 + C10928 * C52141 + C4726 * C52053 +
             C4064 * C52140) *
                C79306 * C79114) *
               C79072) *
              C78995 +
          (((C199 * C52140 + C583 * C52053 + C1828 * C52141 + C2418 * C52054) *
                C79306 * C17509 -
            (C2419 * C52054 + C1831 * C52141 + C2418 * C52053 +
             C1828 * C52140) *
                C79306 * C79114) *
               C79229 +
           ((C4067 * C52140 + C4727 * C52053 +
             (C166 * C10817 + C79308 * C10920) * C52141 +
             (C166 * C11026 + C79308 * C11539) * C52054) *
                C79306 * C79114 -
            (C4727 * C52054 + C4067 * C52141 + C1485 * C52053 + C895 * C52140) *
                C79306 * C17509) *
               C79072) *
              C15086)) /
        (p * q * std::sqrt(p + q));
    d2eezz[65] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C52394 * C96 + C52397 + C52397 + C52053 * C632 +
                       C52395 * C1682 + C52398 + C52398 + C52054 * C2498) *
                          C79308 * C79306 * C17509 -
                      (C52395 * C1683 + C53894 + C53894 + C52054 * C2499 +
                       C52394 * C1682 + C53895 + C53895 + C52053 * C2498) *
                          C79308 * C79306 * C79114) *
                         C79229 +
                     ((C52394 * C3931 + C56029 + C56029 + C52053 * C4827 +
                       C52395 * C6042 + C56030 + C56030 + C52054 * C6718) *
                          C79308 * C79306 * C79114 -
                      (C52395 * C3931 + C53073 + C53073 + C52054 * C4827 +
                       C52394 * C749 + C53074 + C53074 + C52053 * C1565) *
                          C79308 * C79306 * C17509) *
                         C79072) *
                        C78986 +
                    (((C52394 * C1681 + C53898 + C53898 + C52053 * C2497 +
                       C52395 * C1684 + C53899 + C53899 + C52054 * C2500) *
                          C79308 * C79306 * C79114 -
                      (C52395 * C1681 + C52399 + C52399 + C52054 * C2497 +
                       C52394 * C97 + C52400 + C52400 + C52053 * C633) *
                          C79308 * C79306 * C17509) *
                         C79229 +
                     ((C52394 * C748 + C53077 + C53077 + C52053 * C1564 +
                       C52395 * C3932 + C53078 + C53078 + C52054 * C4828) *
                          C79308 * C79306 * C17509 -
                      (C52395 * C6041 + C56031 + C56031 + C52054 * C6717 +
                       C52394 * C3932 + C56032 + C56032 + C52053 * C4828) *
                          C79308 * C79306 * C79114) *
                         C79072) *
                        C78995 +
                    (((C52394 * C98 + C52401 + C52401 + C52053 * C634 +
                       C52395 * C1685 + C52402 + C52402 + C52054 * C2501) *
                          C79308 * C79306 * C17509 -
                      (C52395 * C1686 + C53902 + C53902 + C52054 * C2502 +
                       C52394 * C1685 + C53903 + C53903 + C52053 * C2501) *
                          C79308 * C79306 * C79114) *
                         C79229 +
                     ((C52394 * C3933 + C56033 + C56033 + C52053 * C4829 +
                       C52395 * C10817 + C56034 + C56034 + C52054 * C11643) *
                          C79308 * C79306 * C79114 -
                      (C52395 * C3933 + C53081 + C53081 + C52054 * C4829 +
                       C52394 * C752 + C53082 + C53082 + C52053 * C1568) *
                          C79308 * C79306 * C17509) *
                         C79072) *
                        C15086)) /
                  (p * q * std::sqrt(p + q));
    d2eexx[66] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C52053 +
             C53184 * C52054) *
                C79308 * C79110 -
            (C53185 * C52054 + C53184 * C52053) * C79308 * C79117 +
            (C53185 * C52053 + C61301 * C52054) * C79308 * C20477) *
               C79229 +
           ((C29703 * C52053 + C31774 * C52054) * C79308 * C79117 -
            (C29703 * C52054 + C26964 * C52053) * C79308 * C79110 -
            (C37942 * C52054 + C31774 * C52053) * C79308 * C20477) *
               C79072) *
              C13595 +
          (((C53186 * C52053 + C53187 * C52054) * C79308 * C79117 -
            (C53186 * C52054 +
             (C26497 * C97 + C26503 + C26503 + C79306 * C109) * C52053) *
                C79308 * C79110 -
            (C62670 * C52054 + C53187 * C52053) * C79308 * C20477) *
               C79229 +
           ((C26966 * C52053 + C29704 * C52054) * C79308 * C79110 -
            (C36469 * C52054 + C29704 * C52053) * C79308 * C79117 +
            (C36469 * C52053 +
             (C26497 * C12366 + C37337 + C37337 + C79306 * C12370) * C52054) *
                C79308 * C20477) *
               C79072) *
              C78992)) /
        (p * q * std::sqrt(p + q));
    d2eexy[66] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C166 * C96 + C79308 * C167) * C26498 +
              (C166 * C102 + C79308 * C173) * C79306) *
                 C52053 +
             (C53284 + C53285) * C52054) *
                C79110 -
            ((C53286 + C53287) * C52054 + (C53285 + C53284) * C52053) * C79117 +
            ((C53287 + C53286) * C52053 + (C61359 + C61360) * C52054) *
                C20477) *
               C79229 +
           (((C55324 + C55325) * C52053 + (C57250 + C57251) * C52054) * C79117 -
            ((C55325 + C55324) * C52054 +
             ((C166 * C757 + C79308 * C867) * C79306 +
              (C166 * C749 + C79308 * C859) * C26498) *
                 C52053) *
                C79110 -
            ((C63353 + C63354) * C52054 + (C57251 + C57250) * C52053) *
                C20477) *
               C79072) *
              C13595 +
          ((((C53272 + C53273) * C52053 + (C53274 + C53275) * C52054) * C79117 -
            ((C53273 + C53272) * C52054 +
             (C197 * C79306 + C196 * C26498) * C52053) *
                C79110 -
            ((C62737 + C62738) * C52054 + (C53275 + C53274) * C52053) *
                C20477) *
               C79229 +
           (((C892 * C26498 + C891 * C79306) * C52053 +
             (C55318 + C55319) * C52054) *
                C79110 -
            ((C61906 + C61907) * C52054 + (C55319 + C55318) * C52053) * C79117 +
            ((C61907 + C61906) * C52053 +
             ((C166 * C12366 + C79308 * C12440) * C26498 +
              (C166 * C12368 + C79308 * C12442) * C79306) *
                 C52054) *
                C20477) *
               C79072) *
              C78992)) /
        (p * q * std::sqrt(p + q));
    d2eexz[66] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
                 C26498 +
             (C52140 * C102 + C52053 * C252 + C52141 * C1690 + C52054 * C1914) *
                 C79306) *
                C79308 * C79110 -
            ((C52141 * C1691 + C52054 * C1915 + C52140 * C1690 +
              C52053 * C1914) *
                 C79306 +
             (C52141 * C1683 + C52054 * C1907 + C52140 * C1682 +
              C52053 * C1906) *
                 C26498) *
                C79308 * C79117 +
            ((C52140 * C1683 + C52053 * C1907 + C52141 * C10320 +
              C52054 * C10428) *
                 C26498 +
             (C52140 * C1691 + C52053 * C1915 + C52141 * C10324 +
              C52054 * C10432) *
                 C79306) *
                C79308 * C20477) *
               C79229 +
           (((C52140 * C3931 + C52053 * C4165 + C52141 * C6042 +
              C52054 * C6226) *
                 C26498 +
             (C52140 * C3935 + C52053 * C4169 + C52141 * C6048 +
              C52054 * C6232) *
                 C79306) *
                C79308 * C79117 -
            ((C52141 * C3935 + C52054 * C4169 + C52140 * C757 + C52053 * C981) *
                 C79306 +
             (C52141 * C3931 + C52054 * C4165 + C52140 * C749 + C52053 * C973) *
                 C26498) *
                C79308 * C79110 -
            ((C52141 * C12367 + C52054 * C12511 + C52140 * C6048 +
              C52053 * C6232) *
                 C79306 +
             (C52141 * C12365 + C52054 * C12509 + C52140 * C6042 +
              C52053 * C6226) *
                 C26498) *
                C79308 * C20477) *
               C79072) *
              C13595 +
          ((((C52140 * C1681 + C52053 * C1905 + C52141 * C1684 +
              C52054 * C1908) *
                 C26498 +
             (C52140 * C1689 + C52053 * C1913 + C52141 * C1692 +
              C52054 * C1916) *
                 C79306) *
                C79308 * C79117 -
            ((C52141 * C1689 + C52054 * C1913 + C52140 * C103 + C52053 * C253) *
                 C79306 +
             (C52141 * C1681 + C52054 * C1905 + C52140 * C97 + C52053 * C247) *
                 C26498) *
                C79308 * C79110 -
            ((C52141 * C10323 + C52054 * C10431 + C52140 * C1692 +
              C52053 * C1916) *
                 C79306 +
             (C52141 * C10319 + C52054 * C10427 + C52140 * C1684 +
              C52053 * C1908) *
                 C26498) *
                C79308 * C20477) *
               C79229 +
           (((C52140 * C748 + C52053 * C972 + C52141 * C3932 + C52054 * C4166) *
                 C26498 +
             (C52140 * C756 + C52053 * C980 + C52141 * C3936 + C52054 * C4170) *
                 C79306) *
                C79308 * C79110 -
            ((C52141 * C6047 + C52054 * C6231 + C52140 * C3936 +
              C52053 * C4170) *
                 C79306 +
             (C52141 * C6041 + C52054 * C6225 + C52140 * C3932 +
              C52053 * C4166) *
                 C26498) *
                C79308 * C79117 +
            ((C52140 * C6041 + C52053 * C6225 + C52141 * C12366 +
              C52054 * C12510) *
                 C26498 +
             (C52140 * C6047 + C52053 * C6231 + C52141 * C12368 +
              C52054 * C12512) *
                 C79306) *
                C79308 * C20477) *
               C79072) *
              C78992)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[66] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C26498 * C96 + C79306 * C102) * C166 +
              (C26498 * C167 + C79306 * C324) * C79308) *
                 C52053 +
             (C53472 + C53473) * C52054) *
                C79110 -
            ((C53474 + C53475) * C52054 + (C53473 + C53472) * C52053) * C79117 +
            ((C53475 + C53474) * C52053 + (C61462 + C61463) * C52054) *
                C20477) *
               C79229 +
           (((C55522 + C55523) * C52053 + (C57404 + C57405) * C52054) * C79117 -
            ((C55523 + C55522) * C52054 +
             (C27247 * C79308 + C27246 * C166) * C52053) *
                C79110 -
            ((C63487 + C63488) * C52054 + (C57405 + C57404) * C52053) *
                C20477) *
               C79072) *
              C13595 +
          ((((C53476 + C53477) * C52053 + (C53478 + C53479) * C52054) * C79117 -
            ((C53477 + C53476) * C52054 +
             ((C26498 * C168 + C79306 * C325) * C79308 +
              (C26498 * C97 + C79306 * C103) * C166) *
                 C52053) *
                C79110 -
            ((C62877 + C62878) * C52054 + (C53479 + C53478) * C52053) *
                C20477) *
               C79229 +
           (((C27250 * C166 + C27251 * C79308) * C52053 +
             (C55524 + C55525) * C52054) *
                C79110 -
            ((C62104 + C62105) * C52054 + (C55525 + C55524) * C52053) * C79117 +
            ((C62105 + C62104) * C52053 +
             ((C26498 * C12366 + C79306 * C12368) * C166 +
              (C26498 * C12440 + C79306 * C12580) * C79308) *
                 C52054) *
                C20477) *
               C79072) *
              C78992)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[66] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C372 * C96 + C380 + C380 + C79308 * C373) * C79306 * C52053 +
             C53572 * C52054) *
                C79110 -
            (C53573 * C52054 + C53572 * C52053) * C79117 +
            (C53573 * C52053 + C61520 * C52054) * C20477) *
               C79229 +
           ((C55633 * C52053 + C57500 * C52054) * C79117 -
            (C55633 * C52054 +
             (C372 * C749 + C1180 + C1180 + C79308 * C1169) * C79306 * C52053) *
                C79110 -
            (C63561 * C52054 + C57500 * C52053) * C20477) *
               C79072) *
              C13595 +
          (((C53562 * C52053 + C53563 * C52054) * C79117 -
            (C53562 * C52054 + C402 * C79306 * C52053) * C79110 -
            (C62945 * C52054 + C53563 * C52053) * C20477) *
               C79229 +
           ((C1201 * C79306 * C52053 + C55628 * C52054) * C79110 -
            (C62204 * C52054 + C55628 * C52053) * C79117 +
            (C62204 * C52053 +
             (C372 * C12366 + C12651 + C12651 + C79308 * C12648) * C79306 *
                 C52054) *
                C20477) *
               C79072) *
              C78992)) /
        (p * q * std::sqrt(p + q));
    d2eeyz[66] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
                 C166 +
             (C52140 * C167 + C52053 * C447 + C52141 * C1792 + C52054 * C2212) *
                 C79308) *
                C79306 * C79110 -
            ((C52141 * C1793 + C52054 * C2213 + C52140 * C1792 +
              C52053 * C2212) *
                 C79308 +
             (C52141 * C1683 + C52054 * C1907 + C52140 * C1682 +
              C52053 * C1906) *
                 C166) *
                C79306 * C79117 +
            ((C52140 * C1683 + C52053 * C1907 + C52141 * C10320 +
              C52054 * C10428) *
                 C166 +
             (C52140 * C1793 + C52053 * C2213 + C52141 * C10378 +
              C52054 * C10574) *
                 C79308) *
                C79306 * C20477) *
               C79229 +
           (((C52140 * C3931 + C52053 * C4165 + C52141 * C6042 +
              C52054 * C6226) *
                 C166 +
             (C52140 * C4047 + C52053 * C4501 + C52141 * C6140 +
              C52054 * C6478) *
                 C79308) *
                C79306 * C79117 -
            ((C52141 * C4047 + C52054 * C4501 + C52140 * C859 +
              C52053 * C1279) *
                 C79308 +
             (C52141 * C3931 + C52054 * C4165 + C52140 * C749 + C52053 * C973) *
                 C166) *
                C79306 * C79110 -
            ((C52141 * C12439 + C52054 * C12717 + C52140 * C6140 +
              C52053 * C6478) *
                 C79308 +
             (C52141 * C12365 + C52054 * C12509 + C52140 * C6042 +
              C52053 * C6226) *
                 C166) *
                C79306 * C20477) *
               C79072) *
              C13595 +
          ((((C52140 * C1681 + C52053 * C1905 + C52141 * C1684 +
              C52054 * C1908) *
                 C166 +
             (C52140 * C1791 + C52053 * C2211 + C52141 * C1794 +
              C52054 * C2214) *
                 C79308) *
                C79306 * C79117 -
            ((C52141 * C1791 + C52054 * C2211 + C52140 * C168 + C52053 * C448) *
                 C79308 +
             (C52141 * C1681 + C52054 * C1905 + C52140 * C97 + C52053 * C247) *
                 C166) *
                C79306 * C79110 -
            ((C52141 * C10377 + C52054 * C10573 + C52140 * C1794 +
              C52053 * C2214) *
                 C79308 +
             (C52141 * C10319 + C52054 * C10427 + C52140 * C1684 +
              C52053 * C1908) *
                 C166) *
                C79306 * C20477) *
               C79229 +
           (((C52140 * C748 + C52053 * C972 + C52141 * C3932 + C52054 * C4166) *
                 C166 +
             (C52140 * C858 + C52053 * C1278 + C52141 * C4048 +
              C52054 * C4502) *
                 C79308) *
                C79306 * C79110 -
            ((C52141 * C6139 + C52054 * C6477 + C52140 * C4048 +
              C52053 * C4502) *
                 C79308 +
             (C52141 * C6041 + C52054 * C6225 + C52140 * C3932 +
              C52053 * C4166) *
                 C166) *
                C79306 * C79117 +
            ((C52140 * C6041 + C52053 * C6225 + C52141 * C12366 +
              C52054 * C12510) *
                 C166 +
             (C52140 * C6139 + C52053 * C6477 + C52141 * C12440 +
              C52054 * C12718) *
                 C79308) *
                C79306 * C20477) *
               C79072) *
              C78992)) /
        (p * q * std::sqrt(p + q));
    d2eezx[66] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((((C26498 * C96 + C79306 * C102) * C52140 +
                       (C26498 * C246 + C79306 * C515) * C52053 +
                       C53460 * C52141 + C53734 * C52054) *
                          C79308 * C79110 -
                      (C53735 * C52054 + C53463 * C52141 + C53734 * C52053 +
                       C53460 * C52140) *
                          C79308 * C79117 +
                      (C53463 * C52140 + C53735 * C52053 + C61458 * C52141 +
                       C61612 * C52054) *
                          C79308 * C20477) *
                         C79229 +
                     ((C30028 * C52140 + C30345 * C52053 + C32043 * C52141 +
                       C32298 * C52054) *
                          C79308 * C79117 -
                      (C30345 * C52054 + C30028 * C52141 + C27516 * C52053 +
                       C27246 * C52140) *
                          C79308 * C79110 -
                      (C38370 * C52054 + C38160 * C52141 + C32298 * C52053 +
                       C32043 * C52140) *
                          C79308 * C20477) *
                         C79072) *
                        C13595 +
                    (((C53464 * C52140 + C53736 * C52053 + C53466 * C52141 +
                       C53737 * C52054) *
                          C79308 * C79117 -
                      (C53736 * C52054 + C53464 * C52141 +
                       (C26498 * C247 + C79306 * C516) * C52053 +
                       (C26498 * C97 + C79306 * C103) * C52140) *
                          C79308 * C79110 -
                      (C63080 * C52054 + C62876 * C52141 + C53737 * C52053 +
                       C53466 * C52140) *
                          C79308 * C20477) *
                         C79229 +
                     ((C27250 * C52140 + C27518 * C52053 + C30029 * C52141 +
                       C30346 * C52054) *
                          C79308 * C79110 -
                      (C37072 * C52054 + C36772 * C52141 + C30346 * C52053 +
                       C30029 * C52140) *
                          C79308 * C79117 +
                      (C36772 * C52140 + C37072 * C52053 +
                       (C26498 * C12366 + C79306 * C12368) * C52141 +
                       (C26498 * C12510 + C79306 * C12786) * C52054) *
                          C79308 * C20477) *
                         C79072) *
                        C78992)) /
                  (p * q * std::sqrt(p + q));
    d2eezy[66] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C166 * C96 + C79308 * C167) * C52140 +
             (C166 * C246 + C79308 * C563) * C52053 + C53280 * C52141 +
             C53818 * C52054) *
                C79306 * C79110 -
            (C53819 * C52054 + C53283 * C52141 + C53818 * C52053 +
             C53280 * C52140) *
                C79306 * C79117 +
            (C53283 * C52140 + C53819 * C52053 + C61355 * C52141 +
             C61661 * C52054) *
                C79306 * C20477) *
               C79229 +
           ((C55322 * C52140 + C55930 * C52053 + C57244 * C52141 +
             C57731 * C52054) *
                C79306 * C79117 -
            (C55930 * C52054 + C55322 * C52141 +
             (C166 * C973 + C79308 * C1463) * C52053 +
             (C166 * C749 + C79308 * C859) * C52140) *
                C79306 * C79110 -
            (C63762 * C52054 + C63352 * C52141 + C57731 * C52053 +
             C57244 * C52140) *
                C79306 * C20477) *
               C79072) *
              C13595 +
          (((C1825 * C52140 + C2416 * C52053 + C1826 * C52141 +
             C2417 * C52054) *
                C79306 * C79117 -
            (C2416 * C52054 + C1825 * C52141 + C582 * C52053 + C196 * C52140) *
                C79306 * C79110 -
            (C12224 * C52054 + C11800 * C52141 + C2417 * C52053 +
             C1826 * C52140) *
                C79306 * C20477) *
               C79229 +
           ((C892 * C52140 + C1483 * C52053 + C4064 * C52141 + C4726 * C52054) *
                C79306 * C79110 -
            (C11544 * C52054 + C10928 * C52141 + C4726 * C52053 +
             C4064 * C52140) *
                C79306 * C79117 +
            (C10928 * C52140 + C11544 * C52053 +
             (C166 * C12366 + C79308 * C12440) * C52141 +
             (C166 * C12510 + C79308 * C12854) * C52054) *
                C79306 * C20477) *
               C79072) *
              C78992)) /
        (p * q * std::sqrt(p + q));
    d2eezz[66] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C52394 * C96 + C52397 + C52397 + C52053 * C632 +
                       C52395 * C1682 + C52398 + C52398 + C52054 * C2498) *
                          C79308 * C79306 * C79110 -
                      (C52395 * C1683 + C53894 + C53894 + C52054 * C2499 +
                       C52394 * C1682 + C53895 + C53895 + C52053 * C2498) *
                          C79308 * C79306 * C79117 +
                      (C52394 * C1683 + C53896 + C53896 + C52053 * C2499 +
                       C52395 * C10320 + C53897 + C53897 + C52054 * C10712) *
                          C79308 * C79306 * C20477) *
                         C79229 +
                     ((C52394 * C3931 + C56029 + C56029 + C52053 * C4827 +
                       C52395 * C6042 + C56030 + C56030 + C52054 * C6718) *
                          C79308 * C79306 * C79117 -
                      (C52395 * C3931 + C53073 + C53073 + C52054 * C4827 +
                       C52394 * C749 + C53074 + C53074 + C52053 * C1565) *
                          C79308 * C79306 * C79110 -
                      (C52395 * C12365 + C57808 + C57808 + C52054 * C12921 +
                       C52394 * C6042 + C57809 + C57809 + C52053 * C6718) *
                          C79308 * C79306 * C20477) *
                         C79072) *
                        C13595 +
                    (((C52394 * C1681 + C53898 + C53898 + C52053 * C2497 +
                       C52395 * C1684 + C53899 + C53899 + C52054 * C2500) *
                          C79308 * C79306 * C79117 -
                      (C52395 * C1681 + C52399 + C52399 + C52054 * C2497 +
                       C52394 * C97 + C52400 + C52400 + C52053 * C633) *
                          C79308 * C79306 * C79110 -
                      (C52395 * C10319 + C53900 + C53900 + C52054 * C10711 +
                       C52394 * C1684 + C53901 + C53901 + C52053 * C2500) *
                          C79308 * C79306 * C20477) *
                         C79229 +
                     ((C52394 * C748 + C53077 + C53077 + C52053 * C1564 +
                       C52395 * C3932 + C53078 + C53078 + C52054 * C4828) *
                          C79308 * C79306 * C79110 -
                      (C52395 * C6041 + C56031 + C56031 + C52054 * C6717 +
                       C52394 * C3932 + C56032 + C56032 + C52053 * C4828) *
                          C79308 * C79306 * C79117 +
                      (C52394 * C6041 + C62597 + C62597 + C52053 * C6717 +
                       C52395 * C12366 + C62598 + C62598 + C52054 * C12922) *
                          C79308 * C79306 * C20477) *
                         C79072) *
                        C78992)) /
                  (p * q * std::sqrt(p + q));
    d2eexx[67] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C52053 +
             C53184 * C52054) *
                C79308 * C17509 -
            (C53185 * C52054 + C53184 * C52053) * C79308 * C79114) *
               C79300 +
           ((C29703 * C52053 + C31774 * C52054) * C79308 * C79114 -
            (C29703 * C52054 + C26964 * C52053) * C79308 * C17509) *
               C79285 +
           ((C26965 * C52053 + C31775 * C52054) * C79308 * C17509 -
            (C31776 * C52054 + C31775 * C52053) * C79308 * C79114) *
               C79259) *
              C13595 +
          (((C53186 * C52053 + C53187 * C52054) * C79308 * C79114 -
            (C53186 * C52054 +
             (C26497 * C97 + C26503 + C26503 + C79306 * C109) * C52053) *
                C79308 * C17509) *
               C79300 +
           ((C26966 * C52053 + C29704 * C52054) * C79308 * C17509 -
            (C36469 * C52054 + C29704 * C52053) * C79308 * C79114) *
               C79285 +
           ((C33189 * C52053 +
             (C26497 * C6046 + C36466 + C36466 + C79306 * C6058) * C52054) *
                C79308 * C79114 -
            (C33189 * C52054 + C26967 * C52053) * C79308 * C17509) *
               C79259) *
              C78992)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C52053 +
            C53184 * C52054) *
               C79308 * C17509 -
           (C53185 * C52054 + C53184 * C52053) * C79308 * C79114) *
              C79009 * C79309 +
          ((C53186 * C52053 + C53187 * C52054) * C79308 * C79114 -
           (C53186 * C52054 +
            (C26497 * C97 + C26503 + C26503 + C79306 * C109) * C52053) *
               C79308 * C17509) *
              C79009 * C79299 +
          (((C26497 * C98 + C26504 + C26504 + C79306 * C110) * C52053 +
            C53188 * C52054) *
               C79308 * C17509 -
           (C53189 * C52054 + C53188 * C52053) * C79308 * C79114) *
              C79009 * C79283 +
          ((C54573 * C52053 +
            (C26497 * C1688 + C54570 + C54570 + C79306 * C1704) * C52054) *
               C79308 * C79114 -
           (C54573 * C52054 +
            (C26497 * C99 + C26507 + C26507 + C79306 * C111) * C52053) *
               C79308 * C17509) *
              C79009 * C79263)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C52053 +
            C53184 * C52054) *
               C79308 * C79311 -
           (C53185 * C52054 + C53184 * C52053) * C79308 * C79305 +
           (C53185 * C52053 + C61301 * C52054) * C79308 * C79293 -
           (C61302 * C52054 + C61301 * C52053) * C79308 * C79275) *
              C79009 * C13595 +
          ((C53186 * C52053 + C53187 * C52054) * C79308 * C79305 -
           (C53186 * C52054 +
            (C26497 * C97 + C26503 + C26503 + C79306 * C109) * C52053) *
               C79308 * C79311 -
           (C62670 * C52054 + C53187 * C52053) * C79308 * C79293 +
           (C62670 * C52053 +
            (C26497 * C10322 + C62667 + C62667 + C79306 * C10330) * C52054) *
               C79308 * C79275) *
              C79009 * C78992)) /
            (p * q * std::sqrt(p + q));
    d2eexy[67] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C166 * C96 + C79308 * C167) * C26498 +
              (C166 * C102 + C79308 * C173) * C79306) *
                 C52053 +
             (C53284 + C53285) * C52054) *
                C17509 -
            ((C53286 + C53287) * C52054 + (C53285 + C53284) * C52053) *
                C79114) *
               C79300 +
           (((C55324 + C55325) * C52053 + (C57250 + C57251) * C52054) * C79114 -
            ((C55325 + C55324) * C52054 +
             ((C166 * C757 + C79308 * C867) * C79306 +
              (C166 * C749 + C79308 * C859) * C26498) *
                 C52053) *
                C17509) *
               C79285 +
           ((((C166 * C750 + C79308 * C860) * C26498 +
              (C166 * C758 + C79308 * C868) * C79306) *
                 C52053 +
             (C57252 + C57253) * C52054) *
                C17509 -
            ((C57254 + C57255) * C52054 + (C57253 + C57252) * C52053) *
                C79114) *
               C79259) *
              C13595 +
          ((((C53272 + C53273) * C52053 + (C53274 + C53275) * C52054) * C79114 -
            ((C53273 + C53272) * C52054 +
             (C197 * C79306 + C196 * C26498) * C52053) *
                C17509) *
               C79300 +
           (((C892 * C26498 + C891 * C79306) * C52053 +
             (C55318 + C55319) * C52054) *
                C17509 -
            ((C61906 + C61907) * C52054 + (C55319 + C55318) * C52053) *
                C79114) *
               C79285 +
           (((C58606 + C58607) * C52053 +
             ((C166 * C6046 + C79308 * C6144) * C26498 +
              (C166 * C6052 + C79308 * C6150) * C79306) *
                 C52054) *
                C79114 -
            ((C58607 + C58606) * C52054 +
             (C894 * C79306 + C893 * C26498) * C52053) *
                C17509) *
               C79259) *
              C78992)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C166 * C96 + C79308 * C167) * C26498 +
             (C166 * C102 + C79308 * C173) * C79306) *
                C52053 +
            (C53284 + C53285) * C52054) *
               C17509 -
           ((C53286 + C53287) * C52054 + (C53285 + C53284) * C52053) * C79114) *
              C79009 * C79309 +
          (((C53272 + C53273) * C52053 + (C53274 + C53275) * C52054) * C79114 -
           ((C53273 + C53272) * C52054 +
            (C197 * C79306 + C196 * C26498) * C52053) *
               C17509) *
              C79009 * C79299 +
          (((C199 * C26498 + C198 * C79306) * C52053 +
            (C53276 + C53277) * C52054) *
               C17509 -
           ((C53278 + C53279) * C52054 + (C53277 + C53276) * C52053) * C79114) *
              C79009 * C79283 +
          (((C54640 + C54641) * C52053 +
            ((C166 * C1688 + C79308 * C1798) * C26498 +
             (C166 * C1696 + C79308 * C1806) * C79306) *
                C52054) *
               C79114 -
           ((C54641 + C54640) * C52054 +
            (C201 * C79306 + C200 * C26498) * C52053) *
               C17509) *
              C79009 * C79263)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C166 * C96 + C79308 * C167) * C26498 +
             (C166 * C102 + C79308 * C173) * C79306) *
                C52053 +
            (C53284 + C53285) * C52054) *
               C79311 -
           ((C53286 + C53287) * C52054 + (C53285 + C53284) * C52053) * C79305 +
           ((C53287 + C53286) * C52053 + (C61359 + C61360) * C52054) * C79293 -
           ((C61361 + C61362) * C52054 + (C61360 + C61359) * C52053) * C79275) *
              C79009 * C13595 +
          (((C53272 + C53273) * C52053 + (C53274 + C53275) * C52054) * C79305 -
           ((C53273 + C53272) * C52054 +
            (C197 * C79306 + C196 * C26498) * C52053) *
               C79311 -
           ((C62737 + C62738) * C52054 + (C53275 + C53274) * C52053) * C79293 +
           ((C62738 + C62737) * C52053 +
            ((C166 * C10322 + C79308 * C10380) * C26498 +
             (C166 * C10326 + C79308 * C10384) * C79306) *
                C52054) *
               C79275) *
              C79009 * C78992)) /
            (p * q * std::sqrt(p + q));
    d2eexz[67] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
                 C26498 +
             (C52140 * C102 + C52053 * C252 + C52141 * C1690 + C52054 * C1914) *
                 C79306) *
                C79308 * C17509 -
            ((C52141 * C1691 + C52054 * C1915 + C52140 * C1690 +
              C52053 * C1914) *
                 C79306 +
             (C52141 * C1683 + C52054 * C1907 + C52140 * C1682 +
              C52053 * C1906) *
                 C26498) *
                C79308 * C79114) *
               C79300 +
           (((C52140 * C3931 + C52053 * C4165 + C52141 * C6042 +
              C52054 * C6226) *
                 C26498 +
             (C52140 * C3935 + C52053 * C4169 + C52141 * C6048 +
              C52054 * C6232) *
                 C79306) *
                C79308 * C79114 -
            ((C52141 * C3935 + C52054 * C4169 + C52140 * C757 + C52053 * C981) *
                 C79306 +
             (C52141 * C3931 + C52054 * C4165 + C52140 * C749 + C52053 * C973) *
                 C26498) *
                C79308 * C17509) *
               C79285 +
           (((C52140 * C750 + C52053 * C974 + C52141 * C6044 + C52054 * C6228) *
                 C26498 +
             (C52140 * C758 + C52053 * C982 + C52141 * C6050 + C52054 * C6234) *
                 C79306) *
                C79308 * C17509 -
            ((C52141 * C6051 + C52054 * C6235 + C52140 * C6050 +
              C52053 * C6234) *
                 C79306 +
             (C52141 * C6045 + C52054 * C6229 + C52140 * C6044 +
              C52053 * C6228) *
                 C26498) *
                C79308 * C79114) *
               C79259) *
              C13595 +
          ((((C52140 * C1681 + C52053 * C1905 + C52141 * C1684 +
              C52054 * C1908) *
                 C26498 +
             (C52140 * C1689 + C52053 * C1913 + C52141 * C1692 +
              C52054 * C1916) *
                 C79306) *
                C79308 * C79114 -
            ((C52141 * C1689 + C52054 * C1913 + C52140 * C103 + C52053 * C253) *
                 C79306 +
             (C52141 * C1681 + C52054 * C1905 + C52140 * C97 + C52053 * C247) *
                 C26498) *
                C79308 * C17509) *
               C79300 +
           (((C52140 * C748 + C52053 * C972 + C52141 * C3932 + C52054 * C4166) *
                 C26498 +
             (C52140 * C756 + C52053 * C980 + C52141 * C3936 + C52054 * C4170) *
                 C79306) *
                C79308 * C17509 -
            ((C52141 * C6047 + C52054 * C6231 + C52140 * C3936 +
              C52053 * C4170) *
                 C79306 +
             (C52141 * C6041 + C52054 * C6225 + C52140 * C3932 +
              C52053 * C4166) *
                 C26498) *
                C79308 * C79114) *
               C79285 +
           (((C52140 * C6043 + C52053 * C6227 + C52141 * C6046 +
              C52054 * C6230) *
                 C26498 +
             (C52140 * C6049 + C52053 * C6233 + C52141 * C6052 +
              C52054 * C6236) *
                 C79306) *
                C79308 * C79114 -
            ((C52141 * C6049 + C52054 * C6233 + C52140 * C759 + C52053 * C983) *
                 C79306 +
             (C52141 * C6043 + C52054 * C6227 + C52140 * C751 + C52053 * C975) *
                 C26498) *
                C79308 * C17509) *
               C79259) *
              C78992)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
                C26498 +
            (C52140 * C102 + C52053 * C252 + C52141 * C1690 + C52054 * C1914) *
                C79306) *
               C79308 * C17509 -
           ((C52141 * C1691 + C52054 * C1915 + C52140 * C1690 +
             C52053 * C1914) *
                C79306 +
            (C52141 * C1683 + C52054 * C1907 + C52140 * C1682 +
             C52053 * C1906) *
                C26498) *
               C79308 * C79114) *
              C79009 * C79309 +
          (((C52140 * C1681 + C52053 * C1905 + C52141 * C1684 +
             C52054 * C1908) *
                C26498 +
            (C52140 * C1689 + C52053 * C1913 + C52141 * C1692 +
             C52054 * C1916) *
                C79306) *
               C79308 * C79114 -
           ((C52141 * C1689 + C52054 * C1913 + C52140 * C103 + C52053 * C253) *
                C79306 +
            (C52141 * C1681 + C52054 * C1905 + C52140 * C97 + C52053 * C247) *
                C26498) *
               C79308 * C17509) *
              C79009 * C79299 +
          (((C52140 * C98 + C52053 * C248 + C52141 * C1685 + C52054 * C1909) *
                C26498 +
            (C52140 * C104 + C52053 * C254 + C52141 * C1693 + C52054 * C1917) *
                C79306) *
               C79308 * C17509 -
           ((C52141 * C1694 + C52054 * C1918 + C52140 * C1693 +
             C52053 * C1917) *
                C79306 +
            (C52141 * C1686 + C52054 * C1910 + C52140 * C1685 +
             C52053 * C1909) *
                C26498) *
               C79308 * C79114) *
              C79009 * C79283 +
          (((C52140 * C1687 + C52053 * C1911 + C52141 * C1688 +
             C52054 * C1912) *
                C26498 +
            (C52140 * C1695 + C52053 * C1919 + C52141 * C1696 +
             C52054 * C1920) *
                C79306) *
               C79308 * C79114 -
           ((C52141 * C1695 + C52054 * C1919 + C52140 * C105 + C52053 * C255) *
                C79306 +
            (C52141 * C1687 + C52054 * C1911 + C52140 * C99 + C52053 * C249) *
                C26498) *
               C79308 * C17509) *
              C79009 * C79263)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
                C26498 +
            (C52140 * C102 + C52053 * C252 + C52141 * C1690 + C52054 * C1914) *
                C79306) *
               C79308 * C79311 -
           ((C52141 * C1691 + C52054 * C1915 + C52140 * C1690 +
             C52053 * C1914) *
                C79306 +
            (C52141 * C1683 + C52054 * C1907 + C52140 * C1682 +
             C52053 * C1906) *
                C26498) *
               C79308 * C79305 +
           ((C52140 * C1683 + C52053 * C1907 + C52141 * C10320 +
             C52054 * C10428) *
                C26498 +
            (C52140 * C1691 + C52053 * C1915 + C52141 * C10324 +
             C52054 * C10432) *
                C79306) *
               C79308 * C79293 -
           ((C52141 * C10325 + C52054 * C10433 + C52140 * C10324 +
             C52053 * C10432) *
                C79306 +
            (C52141 * C10321 + C52054 * C10429 + C52140 * C10320 +
             C52053 * C10428) *
                C26498) *
               C79308 * C79275) *
              C79009 * C13595 +
          (((C52140 * C1681 + C52053 * C1905 + C52141 * C1684 +
             C52054 * C1908) *
                C26498 +
            (C52140 * C1689 + C52053 * C1913 + C52141 * C1692 +
             C52054 * C1916) *
                C79306) *
               C79308 * C79305 -
           ((C52141 * C1689 + C52054 * C1913 + C52140 * C103 + C52053 * C253) *
                C79306 +
            (C52141 * C1681 + C52054 * C1905 + C52140 * C97 + C52053 * C247) *
                C26498) *
               C79308 * C79311 -
           ((C52141 * C10323 + C52054 * C10431 + C52140 * C1692 +
             C52053 * C1916) *
                C79306 +
            (C52141 * C10319 + C52054 * C10427 + C52140 * C1684 +
             C52053 * C1908) *
                C26498) *
               C79308 * C79293 +
           ((C52140 * C10319 + C52053 * C10427 + C52141 * C10322 +
             C52054 * C10430) *
                C26498 +
            (C52140 * C10323 + C52053 * C10431 + C52141 * C10326 +
             C52054 * C10434) *
                C79306) *
               C79308 * C79275) *
              C79009 * C78992)) /
            (p * q * std::sqrt(p + q));
    d2eeyx[67] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C26498 * C96 + C79306 * C102) * C166 +
              (C26498 * C167 + C79306 * C324) * C79308) *
                 C52053 +
             (C53472 + C53473) * C52054) *
                C17509 -
            ((C53474 + C53475) * C52054 + (C53473 + C53472) * C52053) *
                C79114) *
               C79300 +
           (((C55522 + C55523) * C52053 + (C57404 + C57405) * C52054) * C79114 -
            ((C55523 + C55522) * C52054 +
             (C27247 * C79308 + C27246 * C166) * C52053) *
                C17509) *
               C79285 +
           (((C27249 * C166 + C27248 * C79308) * C52053 +
             (C57406 + C57407) * C52054) *
                C17509 -
            ((C57408 + C57409) * C52054 + (C57407 + C57406) * C52053) *
                C79114) *
               C79259) *
              C13595 +
          ((((C53476 + C53477) * C52053 + (C53478 + C53479) * C52054) * C79114 -
            ((C53477 + C53476) * C52054 +
             ((C26498 * C168 + C79306 * C325) * C79308 +
              (C26498 * C97 + C79306 * C103) * C166) *
                 C52053) *
                C17509) *
               C79300 +
           (((C27250 * C166 + C27251 * C79308) * C52053 +
             (C55524 + C55525) * C52054) *
                C17509 -
            ((C62104 + C62105) * C52054 + (C55525 + C55524) * C52053) *
                C79114) *
               C79285 +
           (((C58804 + C58805) * C52053 +
             ((C26498 * C6046 + C79306 * C6052) * C166 +
              (C26498 * C6144 + C79306 * C6316) * C79308) *
                 C52054) *
                C79114 -
            ((C58805 + C58804) * C52054 +
             (C27253 * C79308 + C27252 * C166) * C52053) *
                C17509) *
               C79259) *
              C78992)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C26498 * C96 + C79306 * C102) * C166 +
             (C26498 * C167 + C79306 * C324) * C79308) *
                C52053 +
            (C53472 + C53473) * C52054) *
               C17509 -
           ((C53474 + C53475) * C52054 + (C53473 + C53472) * C52053) * C79114) *
              C79009 * C79309 +
          (((C53476 + C53477) * C52053 + (C53478 + C53479) * C52054) * C79114 -
           ((C53477 + C53476) * C52054 +
            ((C26498 * C168 + C79306 * C325) * C79308 +
             (C26498 * C97 + C79306 * C103) * C166) *
                C52053) *
               C17509) *
              C79009 * C79299 +
          ((((C26498 * C98 + C79306 * C104) * C166 +
             (C26498 * C169 + C79306 * C326) * C79308) *
                C52053 +
            (C53480 + C53481) * C52054) *
               C17509 -
           ((C53482 + C53483) * C52054 + (C53481 + C53480) * C52053) * C79114) *
              C79009 * C79283 +
          (((C54780 + C54781) * C52053 +
            ((C26498 * C1688 + C79306 * C1696) * C166 +
             (C26498 * C1798 + C79306 * C2026) * C79308) *
                C52054) *
               C79114 -
           ((C54781 + C54780) * C52054 +
            ((C26498 * C170 + C79306 * C327) * C79308 +
             (C26498 * C99 + C79306 * C105) * C166) *
                C52053) *
               C17509) *
              C79009 * C79263)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C26498 * C96 + C79306 * C102) * C166 +
             (C26498 * C167 + C79306 * C324) * C79308) *
                C52053 +
            (C53472 + C53473) * C52054) *
               C79311 -
           ((C53474 + C53475) * C52054 + (C53473 + C53472) * C52053) * C79305 +
           ((C53475 + C53474) * C52053 + (C61462 + C61463) * C52054) * C79293 -
           ((C61464 + C61465) * C52054 + (C61463 + C61462) * C52053) * C79275) *
              C79009 * C13595 +
          (((C53476 + C53477) * C52053 + (C53478 + C53479) * C52054) * C79305 -
           ((C53477 + C53476) * C52054 +
            ((C26498 * C168 + C79306 * C325) * C79308 +
             (C26498 * C97 + C79306 * C103) * C166) *
                C52053) *
               C79311 -
           ((C62877 + C62878) * C52054 + (C53479 + C53478) * C52053) * C79293 +
           ((C62878 + C62877) * C52053 +
            ((C26498 * C10322 + C79306 * C10326) * C166 +
             (C26498 * C10380 + C79306 * C10480) * C79308) *
                C52054) *
               C79275) *
              C79009 * C78992)) /
            (p * q * std::sqrt(p + q));
    d2eeyy[67] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C372 * C96 + C380 + C380 + C79308 * C373) * C79306 * C52053 +
             C53572 * C52054) *
                C17509 -
            (C53573 * C52054 + C53572 * C52053) * C79114) *
               C79300 +
           ((C55633 * C52053 + C57500 * C52054) * C79114 -
            (C55633 * C52054 +
             (C372 * C749 + C1180 + C1180 + C79308 * C1169) * C79306 * C52053) *
                C17509) *
               C79285 +
           (((C372 * C750 + C1181 + C1181 + C79308 * C1170) * C79306 * C52053 +
             C57501 * C52054) *
                C17509 -
            (C57502 * C52054 + C57501 * C52053) * C79114) *
               C79259) *
              C13595 +
          (((C53562 * C52053 + C53563 * C52054) * C79114 -
            (C53562 * C52054 + C402 * C79306 * C52053) * C17509) *
               C79300 +
           ((C1201 * C79306 * C52053 + C55628 * C52054) * C17509 -
            (C62204 * C52054 + C55628 * C52053) * C79114) *
               C79285 +
           ((C58904 * C52053 + (C372 * C6046 + C6403 + C6403 + C79308 * C6396) *
                                   C79306 * C52054) *
                C79114 -
            (C58904 * C52054 + C1202 * C79306 * C52053) * C17509) *
               C79259) *
              C78992)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C372 * C96 + C380 + C380 + C79308 * C373) * C79306 * C52053 +
            C53572 * C52054) *
               C17509 -
           (C53573 * C52054 + C53572 * C52053) * C79114) *
              C79009 * C79309 +
          ((C53562 * C52053 + C53563 * C52054) * C79114 -
           (C53562 * C52054 + C402 * C79306 * C52053) * C17509) *
              C79009 * C79299 +
          ((C403 * C79306 * C52053 + C53564 * C52054) * C17509 -
           (C53565 * C52054 + C53564 * C52053) * C79114) *
              C79009 * C79283 +
          ((C54848 * C52053 +
            (C372 * C1688 + C2125 + C2125 + C79308 * C2108) * C79306 * C52054) *
               C79114 -
           (C54848 * C52054 + C404 * C79306 * C52053) * C17509) *
              C79009 * C79263)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C372 * C96 + C380 + C380 + C79308 * C373) * C79306 * C52053 +
            C53572 * C52054) *
               C79311 -
           (C53573 * C52054 + C53572 * C52053) * C79305 +
           (C53573 * C52053 + C61520 * C52054) * C79293 -
           (C61521 * C52054 + C61520 * C52053) * C79275) *
              C79009 * C13595 +
          ((C53562 * C52053 + C53563 * C52054) * C79305 -
           (C53562 * C52054 + C402 * C79306 * C52053) * C79311 -
           (C62945 * C52054 + C53563 * C52053) * C79293 +
           (C62945 * C52053 +
            (C372 * C10322 + C10531 + C10531 + C79308 * C10526) * C79306 *
                C52054) *
               C79275) *
              C79009 * C78992)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[67] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
                 C166 +
             (C52140 * C167 + C52053 * C447 + C52141 * C1792 + C52054 * C2212) *
                 C79308) *
                C79306 * C17509 -
            ((C52141 * C1793 + C52054 * C2213 + C52140 * C1792 +
              C52053 * C2212) *
                 C79308 +
             (C52141 * C1683 + C52054 * C1907 + C52140 * C1682 +
              C52053 * C1906) *
                 C166) *
                C79306 * C79114) *
               C79300 +
           (((C52140 * C3931 + C52053 * C4165 + C52141 * C6042 +
              C52054 * C6226) *
                 C166 +
             (C52140 * C4047 + C52053 * C4501 + C52141 * C6140 +
              C52054 * C6478) *
                 C79308) *
                C79306 * C79114 -
            ((C52141 * C4047 + C52054 * C4501 + C52140 * C859 +
              C52053 * C1279) *
                 C79308 +
             (C52141 * C3931 + C52054 * C4165 + C52140 * C749 + C52053 * C973) *
                 C166) *
                C79306 * C17509) *
               C79285 +
           (((C52140 * C750 + C52053 * C974 + C52141 * C6044 + C52054 * C6228) *
                 C166 +
             (C52140 * C860 + C52053 * C1280 + C52141 * C6142 +
              C52054 * C6480) *
                 C79308) *
                C79306 * C17509 -
            ((C52141 * C6143 + C52054 * C6481 + C52140 * C6142 +
              C52053 * C6480) *
                 C79308 +
             (C52141 * C6045 + C52054 * C6229 + C52140 * C6044 +
              C52053 * C6228) *
                 C166) *
                C79306 * C79114) *
               C79259) *
              C13595 +
          ((((C52140 * C1681 + C52053 * C1905 + C52141 * C1684 +
              C52054 * C1908) *
                 C166 +
             (C52140 * C1791 + C52053 * C2211 + C52141 * C1794 +
              C52054 * C2214) *
                 C79308) *
                C79306 * C79114 -
            ((C52141 * C1791 + C52054 * C2211 + C52140 * C168 + C52053 * C448) *
                 C79308 +
             (C52141 * C1681 + C52054 * C1905 + C52140 * C97 + C52053 * C247) *
                 C166) *
                C79306 * C17509) *
               C79300 +
           (((C52140 * C748 + C52053 * C972 + C52141 * C3932 + C52054 * C4166) *
                 C166 +
             (C52140 * C858 + C52053 * C1278 + C52141 * C4048 +
              C52054 * C4502) *
                 C79308) *
                C79306 * C17509 -
            ((C52141 * C6139 + C52054 * C6477 + C52140 * C4048 +
              C52053 * C4502) *
                 C79308 +
             (C52141 * C6041 + C52054 * C6225 + C52140 * C3932 +
              C52053 * C4166) *
                 C166) *
                C79306 * C79114) *
               C79285 +
           (((C52140 * C6043 + C52053 * C6227 + C52141 * C6046 +
              C52054 * C6230) *
                 C166 +
             (C52140 * C6141 + C52053 * C6479 + C52141 * C6144 +
              C52054 * C6482) *
                 C79308) *
                C79306 * C79114 -
            ((C52141 * C6141 + C52054 * C6479 + C52140 * C861 +
              C52053 * C1281) *
                 C79308 +
             (C52141 * C6043 + C52054 * C6227 + C52140 * C751 + C52053 * C975) *
                 C166) *
                C79306 * C17509) *
               C79259) *
              C78992)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
                C166 +
            (C52140 * C167 + C52053 * C447 + C52141 * C1792 + C52054 * C2212) *
                C79308) *
               C79306 * C17509 -
           ((C52141 * C1793 + C52054 * C2213 + C52140 * C1792 +
             C52053 * C2212) *
                C79308 +
            (C52141 * C1683 + C52054 * C1907 + C52140 * C1682 +
             C52053 * C1906) *
                C166) *
               C79306 * C79114) *
              C79009 * C79309 +
          (((C52140 * C1681 + C52053 * C1905 + C52141 * C1684 +
             C52054 * C1908) *
                C166 +
            (C52140 * C1791 + C52053 * C2211 + C52141 * C1794 +
             C52054 * C2214) *
                C79308) *
               C79306 * C79114 -
           ((C52141 * C1791 + C52054 * C2211 + C52140 * C168 + C52053 * C448) *
                C79308 +
            (C52141 * C1681 + C52054 * C1905 + C52140 * C97 + C52053 * C247) *
                C166) *
               C79306 * C17509) *
              C79009 * C79299 +
          (((C52140 * C98 + C52053 * C248 + C52141 * C1685 + C52054 * C1909) *
                C166 +
            (C52140 * C169 + C52053 * C449 + C52141 * C1795 + C52054 * C2215) *
                C79308) *
               C79306 * C17509 -
           ((C52141 * C1796 + C52054 * C2216 + C52140 * C1795 +
             C52053 * C2215) *
                C79308 +
            (C52141 * C1686 + C52054 * C1910 + C52140 * C1685 +
             C52053 * C1909) *
                C166) *
               C79306 * C79114) *
              C79009 * C79283 +
          (((C52140 * C1687 + C52053 * C1911 + C52141 * C1688 +
             C52054 * C1912) *
                C166 +
            (C52140 * C1797 + C52053 * C2217 + C52141 * C1798 +
             C52054 * C2218) *
                C79308) *
               C79306 * C79114 -
           ((C52141 * C1797 + C52054 * C2217 + C52140 * C170 + C52053 * C450) *
                C79308 +
            (C52141 * C1687 + C52054 * C1911 + C52140 * C99 + C52053 * C249) *
                C166) *
               C79306 * C17509) *
              C79009 * C79263)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
                C166 +
            (C52140 * C167 + C52053 * C447 + C52141 * C1792 + C52054 * C2212) *
                C79308) *
               C79306 * C79311 -
           ((C52141 * C1793 + C52054 * C2213 + C52140 * C1792 +
             C52053 * C2212) *
                C79308 +
            (C52141 * C1683 + C52054 * C1907 + C52140 * C1682 +
             C52053 * C1906) *
                C166) *
               C79306 * C79305 +
           ((C52140 * C1683 + C52053 * C1907 + C52141 * C10320 +
             C52054 * C10428) *
                C166 +
            (C52140 * C1793 + C52053 * C2213 + C52141 * C10378 +
             C52054 * C10574) *
                C79308) *
               C79306 * C79293 -
           ((C52141 * C10379 + C52054 * C10575 + C52140 * C10378 +
             C52053 * C10574) *
                C79308 +
            (C52141 * C10321 + C52054 * C10429 + C52140 * C10320 +
             C52053 * C10428) *
                C166) *
               C79306 * C79275) *
              C79009 * C13595 +
          (((C52140 * C1681 + C52053 * C1905 + C52141 * C1684 +
             C52054 * C1908) *
                C166 +
            (C52140 * C1791 + C52053 * C2211 + C52141 * C1794 +
             C52054 * C2214) *
                C79308) *
               C79306 * C79305 -
           ((C52141 * C1791 + C52054 * C2211 + C52140 * C168 + C52053 * C448) *
                C79308 +
            (C52141 * C1681 + C52054 * C1905 + C52140 * C97 + C52053 * C247) *
                C166) *
               C79306 * C79311 -
           ((C52141 * C10377 + C52054 * C10573 + C52140 * C1794 +
             C52053 * C2214) *
                C79308 +
            (C52141 * C10319 + C52054 * C10427 + C52140 * C1684 +
             C52053 * C1908) *
                C166) *
               C79306 * C79293 +
           ((C52140 * C10319 + C52053 * C10427 + C52141 * C10322 +
             C52054 * C10430) *
                C166 +
            (C52140 * C10377 + C52053 * C10573 + C52141 * C10380 +
             C52054 * C10576) *
                C79308) *
               C79306 * C79275) *
              C79009 * C78992)) /
            (p * q * std::sqrt(p + q));
    d2eezx[67] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((((C26498 * C96 + C79306 * C102) * C52140 +
                       (C26498 * C246 + C79306 * C515) * C52053 +
                       C53460 * C52141 + C53734 * C52054) *
                          C79308 * C17509 -
                      (C53735 * C52054 + C53463 * C52141 + C53734 * C52053 +
                       C53460 * C52140) *
                          C79308 * C79114) *
                         C79300 +
                     ((C30028 * C52140 + C30345 * C52053 + C32043 * C52141 +
                       C32298 * C52054) *
                          C79308 * C79114 -
                      (C30345 * C52054 + C30028 * C52141 + C27516 * C52053 +
                       C27246 * C52140) *
                          C79308 * C17509) *
                         C79285 +
                     ((C27249 * C52140 + C27517 * C52053 + C32045 * C52141 +
                       C32299 * C52054) *
                          C79308 * C17509 -
                      (C32300 * C52054 + C32048 * C52141 + C32299 * C52053 +
                       C32045 * C52140) *
                          C79308 * C79114) *
                         C79259) *
                        C13595 +
                    (((C53464 * C52140 + C53736 * C52053 + C53466 * C52141 +
                       C53737 * C52054) *
                          C79308 * C79114 -
                      (C53736 * C52054 + C53464 * C52141 +
                       (C26498 * C247 + C79306 * C516) * C52053 +
                       (C26498 * C97 + C79306 * C103) * C52140) *
                          C79308 * C17509) *
                         C79300 +
                     ((C27250 * C52140 + C27518 * C52053 + C30029 * C52141 +
                       C30346 * C52054) *
                          C79308 * C17509 -
                      (C37072 * C52054 + C36772 * C52141 + C30346 * C52053 +
                       C30029 * C52140) *
                          C79308 * C79114) *
                         C79285 +
                     ((C33492 * C52140 + C33792 * C52053 +
                       (C26498 * C6046 + C79306 * C6052) * C52141 +
                       (C26498 * C6230 + C79306 * C6562) * C52054) *
                          C79308 * C79114 -
                      (C33792 * C52054 + C33492 * C52141 + C27519 * C52053 +
                       C27252 * C52140) *
                          C79308 * C17509) *
                         C79259) *
                        C78992)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C26498 * C96 + C79306 * C102) * C52140 +
                      (C26498 * C246 + C79306 * C515) * C52053 +
                      C53460 * C52141 + C53734 * C52054) *
                         C79308 * C17509 -
                     (C53735 * C52054 + C53463 * C52141 + C53734 * C52053 +
                      C53460 * C52140) *
                         C79308 * C79114) *
                        C79009 * C79309 +
                    ((C53464 * C52140 + C53736 * C52053 + C53466 * C52141 +
                      C53737 * C52054) *
                         C79308 * C79114 -
                     (C53736 * C52054 + C53464 * C52141 +
                      (C26498 * C247 + C79306 * C516) * C52053 +
                      (C26498 * C97 + C79306 * C103) * C52140) *
                         C79308 * C17509) *
                        C79009 * C79299 +
                    (((C26498 * C98 + C79306 * C104) * C52140 +
                      (C26498 * C248 + C79306 * C517) * C52053 +
                      C53468 * C52141 + C53738 * C52054) *
                         C79308 * C17509 -
                     (C53739 * C52054 + C53471 * C52141 + C53738 * C52053 +
                      C53468 * C52140) *
                         C79308 * C79114) *
                        C79009 * C79283 +
                    ((C54778 * C52140 + C54983 * C52053 +
                      (C26498 * C1688 + C79306 * C1696) * C52141 +
                      (C26498 * C1912 + C79306 * C2320) * C52054) *
                         C79308 * C79114 -
                     (C54983 * C52054 + C54778 * C52141 +
                      (C26498 * C249 + C79306 * C518) * C52053 +
                      (C26498 * C99 + C79306 * C105) * C52140) *
                         C79308 * C17509) *
                        C79009 * C79263)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C26498 * C96 + C79306 * C102) * C52140 +
                      (C26498 * C246 + C79306 * C515) * C52053 +
                      C53460 * C52141 + C53734 * C52054) *
                         C79308 * C79311 -
                     (C53735 * C52054 + C53463 * C52141 + C53734 * C52053 +
                      C53460 * C52140) *
                         C79308 * C79305 +
                     (C53463 * C52140 + C53735 * C52053 + C61458 * C52141 +
                      C61612 * C52054) *
                         C79308 * C79293 -
                     (C61613 * C52054 + C61461 * C52141 + C61612 * C52053 +
                      C61458 * C52140) *
                         C79308 * C79275) *
                        C79009 * C13595 +
                    ((C53464 * C52140 + C53736 * C52053 + C53466 * C52141 +
                      C53737 * C52054) *
                         C79308 * C79305 -
                     (C53736 * C52054 + C53464 * C52141 +
                      (C26498 * C247 + C79306 * C516) * C52053 +
                      (C26498 * C97 + C79306 * C103) * C52140) *
                         C79308 * C79311 -
                     (C63080 * C52054 + C62876 * C52141 + C53737 * C52053 +
                      C53466 * C52140) *
                         C79308 * C79293 +
                     (C62876 * C52140 + C63080 * C52053 +
                      (C26498 * C10322 + C79306 * C10326) * C52141 +
                      (C26498 * C10430 + C79306 * C10622) * C52054) *
                         C79308 * C79275) *
                        C79009 * C78992)) /
                      (p * q * std::sqrt(p + q));
    d2eezy[67] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C166 * C96 + C79308 * C167) * C52140 +
             (C166 * C246 + C79308 * C563) * C52053 + C53280 * C52141 +
             C53818 * C52054) *
                C79306 * C17509 -
            (C53819 * C52054 + C53283 * C52141 + C53818 * C52053 +
             C53280 * C52140) *
                C79306 * C79114) *
               C79300 +
           ((C55322 * C52140 + C55930 * C52053 + C57244 * C52141 +
             C57731 * C52054) *
                C79306 * C79114 -
            (C55930 * C52054 + C55322 * C52141 +
             (C166 * C973 + C79308 * C1463) * C52053 +
             (C166 * C749 + C79308 * C859) * C52140) *
                C79306 * C17509) *
               C79285 +
           (((C166 * C750 + C79308 * C860) * C52140 +
             (C166 * C974 + C79308 * C1464) * C52053 + C57246 * C52141 +
             C57732 * C52054) *
                C79306 * C17509 -
            (C57733 * C52054 + C57249 * C52141 + C57732 * C52053 +
             C57246 * C52140) *
                C79306 * C79114) *
               C79259) *
              C13595 +
          (((C1825 * C52140 + C2416 * C52053 + C1826 * C52141 +
             C2417 * C52054) *
                C79306 * C79114 -
            (C2416 * C52054 + C1825 * C52141 + C582 * C52053 + C196 * C52140) *
                C79306 * C17509) *
               C79300 +
           ((C892 * C52140 + C1483 * C52053 + C4064 * C52141 + C4726 * C52054) *
                C79306 * C17509 -
            (C11544 * C52054 + C10928 * C52141 + C4726 * C52053 +
             C4064 * C52140) *
                C79306 * C79114) *
               C79285 +
           ((C7588 * C52140 + C8204 * C52053 +
             (C166 * C6046 + C79308 * C6144) * C52141 +
             (C166 * C6230 + C79308 * C6642) * C52054) *
                C79306 * C79114 -
            (C8204 * C52054 + C7588 * C52141 + C1484 * C52053 + C893 * C52140) *
                C79306 * C17509) *
               C79259) *
              C78992)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C166 * C96 + C79308 * C167) * C52140 +
            (C166 * C246 + C79308 * C563) * C52053 + C53280 * C52141 +
            C53818 * C52054) *
               C79306 * C17509 -
           (C53819 * C52054 + C53283 * C52141 + C53818 * C52053 +
            C53280 * C52140) *
               C79306 * C79114) *
              C79009 * C79309 +
          ((C1825 * C52140 + C2416 * C52053 + C1826 * C52141 + C2417 * C52054) *
               C79306 * C79114 -
           (C2416 * C52054 + C1825 * C52141 + C582 * C52053 + C196 * C52140) *
               C79306 * C17509) *
              C79009 * C79299 +
          ((C199 * C52140 + C583 * C52053 + C1828 * C52141 + C2418 * C52054) *
               C79306 * C17509 -
           (C2419 * C52054 + C1831 * C52141 + C2418 * C52053 + C1828 * C52140) *
               C79306 * C79114) *
              C79009 * C79283 +
          ((C3334 * C52140 + C3758 * C52053 +
            (C166 * C1688 + C79308 * C1798) * C52141 +
            (C166 * C1912 + C79308 * C2402) * C52054) *
               C79306 * C79114 -
           (C3758 * C52054 + C3334 * C52141 + C584 * C52053 + C200 * C52140) *
               C79306 * C17509) *
              C79009 * C79263)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C166 * C96 + C79308 * C167) * C52140 +
            (C166 * C246 + C79308 * C563) * C52053 + C53280 * C52141 +
            C53818 * C52054) *
               C79306 * C79311 -
           (C53819 * C52054 + C53283 * C52141 + C53818 * C52053 +
            C53280 * C52140) *
               C79306 * C79305 +
           (C53283 * C52140 + C53819 * C52053 + C61355 * C52141 +
            C61661 * C52054) *
               C79306 * C79293 -
           (C61662 * C52054 + C61358 * C52141 + C61661 * C52053 +
            C61355 * C52140) *
               C79306 * C79275) *
              C79009 * C13595 +
          ((C1825 * C52140 + C2416 * C52053 + C1826 * C52141 + C2417 * C52054) *
               C79306 * C79305 -
           (C2416 * C52054 + C1825 * C52141 + C582 * C52053 + C196 * C52140) *
               C79306 * C79311 -
           (C12224 * C52054 + C11800 * C52141 + C2417 * C52053 +
            C1826 * C52140) *
               C79306 * C79293 +
           (C11800 * C52140 + C12224 * C52053 +
            (C166 * C10322 + C79308 * C10380) * C52141 +
            (C166 * C10430 + C79308 * C10668) * C52054) *
               C79306 * C79275) *
              C79009 * C78992)) /
            (p * q * std::sqrt(p + q));
    d2eezz[67] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C52394 * C96 + C52397 + C52397 + C52053 * C632 +
                       C52395 * C1682 + C52398 + C52398 + C52054 * C2498) *
                          C79308 * C79306 * C17509 -
                      (C52395 * C1683 + C53894 + C53894 + C52054 * C2499 +
                       C52394 * C1682 + C53895 + C53895 + C52053 * C2498) *
                          C79308 * C79306 * C79114) *
                         C79300 +
                     ((C52394 * C3931 + C56029 + C56029 + C52053 * C4827 +
                       C52395 * C6042 + C56030 + C56030 + C52054 * C6718) *
                          C79308 * C79306 * C79114 -
                      (C52395 * C3931 + C53073 + C53073 + C52054 * C4827 +
                       C52394 * C749 + C53074 + C53074 + C52053 * C1565) *
                          C79308 * C79306 * C17509) *
                         C79285 +
                     ((C52394 * C750 + C53075 + C53075 + C52053 * C1566 +
                       C52395 * C6044 + C53076 + C53076 + C52054 * C6720) *
                          C79308 * C79306 * C17509 -
                      (C52395 * C6045 + C57810 + C57810 + C52054 * C6721 +
                       C52394 * C6044 + C57811 + C57811 + C52053 * C6720) *
                          C79308 * C79306 * C79114) *
                         C79259) *
                        C13595 +
                    (((C52394 * C1681 + C53898 + C53898 + C52053 * C2497 +
                       C52395 * C1684 + C53899 + C53899 + C52054 * C2500) *
                          C79308 * C79306 * C79114 -
                      (C52395 * C1681 + C52399 + C52399 + C52054 * C2497 +
                       C52394 * C97 + C52400 + C52400 + C52053 * C633) *
                          C79308 * C79306 * C17509) *
                         C79300 +
                     ((C52394 * C748 + C53077 + C53077 + C52053 * C1564 +
                       C52395 * C3932 + C53078 + C53078 + C52054 * C4828) *
                          C79308 * C79306 * C17509 -
                      (C52395 * C6041 + C56031 + C56031 + C52054 * C6717 +
                       C52394 * C3932 + C56032 + C56032 + C52053 * C4828) *
                          C79308 * C79306 * C79114) *
                         C79285 +
                     ((C52394 * C6043 + C59297 + C59297 + C52053 * C6719 +
                       C52395 * C6046 + C59298 + C59298 + C52054 * C6722) *
                          C79308 * C79306 * C79114 -
                      (C52395 * C6043 + C53079 + C53079 + C52054 * C6719 +
                       C52394 * C751 + C53080 + C53080 + C52053 * C1567) *
                          C79308 * C79306 * C17509) *
                         C79259) *
                        C78992)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C52394 * C96 + C52397 + C52397 + C52053 * C632 +
                      C52395 * C1682 + C52398 + C52398 + C52054 * C2498) *
                         C79308 * C79306 * C17509 -
                     (C52395 * C1683 + C53894 + C53894 + C52054 * C2499 +
                      C52394 * C1682 + C53895 + C53895 + C52053 * C2498) *
                         C79308 * C79306 * C79114) *
                        C79009 * C79309 +
                    ((C52394 * C1681 + C53898 + C53898 + C52053 * C2497 +
                      C52395 * C1684 + C53899 + C53899 + C52054 * C2500) *
                         C79308 * C79306 * C79114 -
                     (C52395 * C1681 + C52399 + C52399 + C52054 * C2497 +
                      C52394 * C97 + C52400 + C52400 + C52053 * C633) *
                         C79308 * C79306 * C17509) *
                        C79009 * C79299 +
                    ((C52394 * C98 + C52401 + C52401 + C52053 * C634 +
                      C52395 * C1685 + C52402 + C52402 + C52054 * C2501) *
                         C79308 * C79306 * C17509 -
                     (C52395 * C1686 + C53902 + C53902 + C52054 * C2502 +
                      C52394 * C1685 + C53903 + C53903 + C52053 * C2501) *
                         C79308 * C79306 * C79114) *
                        C79009 * C79283 +
                    ((C52394 * C1687 + C55116 + C55116 + C52053 * C2503 +
                      C52395 * C1688 + C55117 + C55117 + C52054 * C2504) *
                         C79308 * C79306 * C79114 -
                     (C52395 * C1687 + C52403 + C52403 + C52054 * C2503 +
                      C52394 * C99 + C52404 + C52404 + C52053 * C635) *
                         C79308 * C79306 * C17509) *
                        C79009 * C79263)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((C52394 * C96 + C52397 + C52397 + C52053 * C632 +
                      C52395 * C1682 + C52398 + C52398 + C52054 * C2498) *
                         C79308 * C79306 * C79311 -
                     (C52395 * C1683 + C53894 + C53894 + C52054 * C2499 +
                      C52394 * C1682 + C53895 + C53895 + C52053 * C2498) *
                         C79308 * C79306 * C79305 +
                     (C52394 * C1683 + C53896 + C53896 + C52053 * C2499 +
                      C52395 * C10320 + C53897 + C53897 + C52054 * C10712) *
                         C79308 * C79306 * C79293 -
                     (C52395 * C10321 + C61706 + C61706 + C52054 * C10713 +
                      C52394 * C10320 + C61707 + C61707 + C52053 * C10712) *
                         C79308 * C79306 * C79275) *
                        C79009 * C13595 +
                    ((C52394 * C1681 + C53898 + C53898 + C52053 * C2497 +
                      C52395 * C1684 + C53899 + C53899 + C52054 * C2500) *
                         C79308 * C79306 * C79305 -
                     (C52395 * C1681 + C52399 + C52399 + C52054 * C2497 +
                      C52394 * C97 + C52400 + C52400 + C52053 * C633) *
                         C79308 * C79306 * C79311 -
                     (C52395 * C10319 + C53900 + C53900 + C52054 * C10711 +
                      C52394 * C1684 + C53901 + C53901 + C52053 * C2500) *
                         C79308 * C79306 * C79293 +
                     (C52394 * C10319 + C63213 + C63213 + C52053 * C10711 +
                      C52395 * C10322 + C63214 + C63214 + C52054 * C10714) *
                         C79308 * C79306 * C79275) *
                        C79009 * C78992)) /
                      (p * q * std::sqrt(p + q));
    d2eexx[68] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C52053 +
            C53184 * C52054) *
               C79308 * C79110 -
           (C53185 * C52054 + C53184 * C52053) * C79308 * C79117 +
           (C53185 * C52053 + C61301 * C52054) * C79308 * C20477) *
              C79009 * C78986 +
          ((C53186 * C52053 + C53187 * C52054) * C79308 * C79117 -
           (C53186 * C52054 +
            (C26497 * C97 + C26503 + C26503 + C79306 * C109) * C52053) *
               C79308 * C79110 -
           (C62670 * C52054 + C53187 * C52053) * C79308 * C20477) *
              C79009 * C78995 +
          (((C26497 * C98 + C26504 + C26504 + C79306 * C110) * C52053 +
            C53188 * C52054) *
               C79308 * C79110 -
           (C53189 * C52054 + C53188 * C52053) * C79308 * C79117 +
           (C53189 * C52053 +
            (C26497 * C11721 + C53171 + C53171 + C79306 * C11723) * C52054) *
               C79308 * C20477) *
              C79009 * C15086)) /
        (p * q * std::sqrt(p + q));
    d2eexy[68] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C166 * C96 + C79308 * C167) * C26498 +
             (C166 * C102 + C79308 * C173) * C79306) *
                C52053 +
            (C53284 + C53285) * C52054) *
               C79110 -
           ((C53286 + C53287) * C52054 + (C53285 + C53284) * C52053) * C79117 +
           ((C53287 + C53286) * C52053 + (C61359 + C61360) * C52054) * C20477) *
              C79009 * C78986 +
          (((C53272 + C53273) * C52053 + (C53274 + C53275) * C52054) * C79117 -
           ((C53273 + C53272) * C52054 +
            (C197 * C79306 + C196 * C26498) * C52053) *
               C79110 -
           ((C62737 + C62738) * C52054 + (C53275 + C53274) * C52053) * C20477) *
              C79009 * C78995 +
          (((C199 * C26498 + C198 * C79306) * C52053 +
            (C53276 + C53277) * C52054) *
               C79110 -
           ((C53278 + C53279) * C52054 + (C53277 + C53276) * C52053) * C79117 +
           ((C53279 + C53278) * C52053 +
            ((C166 * C11721 + C79308 * C11792) * C26498 +
             (C166 * C11722 + C79308 * C11793) * C79306) *
                C52054) *
               C20477) *
              C79009 * C15086)) /
        (p * q * std::sqrt(p + q));
    d2eexz[68] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
                C26498 +
            (C52140 * C102 + C52053 * C252 + C52141 * C1690 + C52054 * C1914) *
                C79306) *
               C79308 * C79110 -
           ((C52141 * C1691 + C52054 * C1915 + C52140 * C1690 +
             C52053 * C1914) *
                C79306 +
            (C52141 * C1683 + C52054 * C1907 + C52140 * C1682 +
             C52053 * C1906) *
                C26498) *
               C79308 * C79117 +
           ((C52140 * C1683 + C52053 * C1907 + C52141 * C10320 +
             C52054 * C10428) *
                C26498 +
            (C52140 * C1691 + C52053 * C1915 + C52141 * C10324 +
             C52054 * C10432) *
                C79306) *
               C79308 * C20477) *
              C79009 * C78986 +
          (((C52140 * C1681 + C52053 * C1905 + C52141 * C1684 +
             C52054 * C1908) *
                C26498 +
            (C52140 * C1689 + C52053 * C1913 + C52141 * C1692 +
             C52054 * C1916) *
                C79306) *
               C79308 * C79117 -
           ((C52141 * C1689 + C52054 * C1913 + C52140 * C103 + C52053 * C253) *
                C79306 +
            (C52141 * C1681 + C52054 * C1905 + C52140 * C97 + C52053 * C247) *
                C26498) *
               C79308 * C79110 -
           ((C52141 * C10323 + C52054 * C10431 + C52140 * C1692 +
             C52053 * C1916) *
                C79306 +
            (C52141 * C10319 + C52054 * C10427 + C52140 * C1684 +
             C52053 * C1908) *
                C26498) *
               C79308 * C20477) *
              C79009 * C78995 +
          (((C52140 * C98 + C52053 * C248 + C52141 * C1685 + C52054 * C1909) *
                C26498 +
            (C52140 * C104 + C52053 * C254 + C52141 * C1693 + C52054 * C1917) *
                C79306) *
               C79308 * C79110 -
           ((C52141 * C1694 + C52054 * C1918 + C52140 * C1693 +
             C52053 * C1917) *
                C79306 +
            (C52141 * C1686 + C52054 * C1910 + C52140 * C1685 +
             C52053 * C1909) *
                C26498) *
               C79308 * C79117 +
           ((C52140 * C1686 + C52053 * C1910 + C52141 * C11721 +
             C52054 * C11866) *
                C26498 +
            (C52140 * C1694 + C52053 * C1918 + C52141 * C11722 +
             C52054 * C11867) *
                C79306) *
               C79308 * C20477) *
              C79009 * C15086)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[68] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C26498 * C96 + C79306 * C102) * C166 +
             (C26498 * C167 + C79306 * C324) * C79308) *
                C52053 +
            (C53472 + C53473) * C52054) *
               C79110 -
           ((C53474 + C53475) * C52054 + (C53473 + C53472) * C52053) * C79117 +
           ((C53475 + C53474) * C52053 + (C61462 + C61463) * C52054) * C20477) *
              C79009 * C78986 +
          (((C53476 + C53477) * C52053 + (C53478 + C53479) * C52054) * C79117 -
           ((C53477 + C53476) * C52054 +
            ((C26498 * C168 + C79306 * C325) * C79308 +
             (C26498 * C97 + C79306 * C103) * C166) *
                C52053) *
               C79110 -
           ((C62877 + C62878) * C52054 + (C53479 + C53478) * C52053) * C20477) *
              C79009 * C78995 +
          ((((C26498 * C98 + C79306 * C104) * C166 +
             (C26498 * C169 + C79306 * C326) * C79308) *
                C52053 +
            (C53480 + C53481) * C52054) *
               C79110 -
           ((C53482 + C53483) * C52054 + (C53481 + C53480) * C52053) * C79117 +
           ((C53483 + C53482) * C52053 +
            ((C26498 * C11721 + C79306 * C11722) * C166 +
             (C26498 * C11792 + C79306 * C11940) * C79308) *
                C52054) *
               C20477) *
              C79009 * C15086)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[68] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C372 * C96 + C380 + C380 + C79308 * C373) * C79306 * C52053 +
            C53572 * C52054) *
               C79110 -
           (C53573 * C52054 + C53572 * C52053) * C79117 +
           (C53573 * C52053 + C61520 * C52054) * C20477) *
              C79009 * C78986 +
          ((C53562 * C52053 + C53563 * C52054) * C79117 -
           (C53562 * C52054 + C402 * C79306 * C52053) * C79110 -
           (C62945 * C52054 + C53563 * C52053) * C20477) *
              C79009 * C78995 +
          ((C403 * C79306 * C52053 + C53564 * C52054) * C79110 -
           (C53565 * C52054 + C53564 * C52053) * C79117 +
           (C53565 * C52053 +
            (C372 * C11721 + C12011 + C12011 + C79308 * C12007) * C79306 *
                C52054) *
               C20477) *
              C79009 * C15086)) /
        (p * q * std::sqrt(p + q));
    d2eeyz[68] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
                C166 +
            (C52140 * C167 + C52053 * C447 + C52141 * C1792 + C52054 * C2212) *
                C79308) *
               C79306 * C79110 -
           ((C52141 * C1793 + C52054 * C2213 + C52140 * C1792 +
             C52053 * C2212) *
                C79308 +
            (C52141 * C1683 + C52054 * C1907 + C52140 * C1682 +
             C52053 * C1906) *
                C166) *
               C79306 * C79117 +
           ((C52140 * C1683 + C52053 * C1907 + C52141 * C10320 +
             C52054 * C10428) *
                C166 +
            (C52140 * C1793 + C52053 * C2213 + C52141 * C10378 +
             C52054 * C10574) *
                C79308) *
               C79306 * C20477) *
              C79009 * C78986 +
          (((C52140 * C1681 + C52053 * C1905 + C52141 * C1684 +
             C52054 * C1908) *
                C166 +
            (C52140 * C1791 + C52053 * C2211 + C52141 * C1794 +
             C52054 * C2214) *
                C79308) *
               C79306 * C79117 -
           ((C52141 * C1791 + C52054 * C2211 + C52140 * C168 + C52053 * C448) *
                C79308 +
            (C52141 * C1681 + C52054 * C1905 + C52140 * C97 + C52053 * C247) *
                C166) *
               C79306 * C79110 -
           ((C52141 * C10377 + C52054 * C10573 + C52140 * C1794 +
             C52053 * C2214) *
                C79308 +
            (C52141 * C10319 + C52054 * C10427 + C52140 * C1684 +
             C52053 * C1908) *
                C166) *
               C79306 * C20477) *
              C79009 * C78995 +
          (((C52140 * C98 + C52053 * C248 + C52141 * C1685 + C52054 * C1909) *
                C166 +
            (C52140 * C169 + C52053 * C449 + C52141 * C1795 + C52054 * C2215) *
                C79308) *
               C79306 * C79110 -
           ((C52141 * C1796 + C52054 * C2216 + C52140 * C1795 +
             C52053 * C2215) *
                C79308 +
            (C52141 * C1686 + C52054 * C1910 + C52140 * C1685 +
             C52053 * C1909) *
                C166) *
               C79306 * C79117 +
           ((C52140 * C1686 + C52053 * C1910 + C52141 * C11721 +
             C52054 * C11866) *
                C166 +
            (C52140 * C1796 + C52053 * C2216 + C52141 * C11792 +
             C52054 * C12080) *
                C79308) *
               C79306 * C20477) *
              C79009 * C15086)) /
        (p * q * std::sqrt(p + q));
    d2eezx[68] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   ((((C26498 * C96 + C79306 * C102) * C52140 +
                      (C26498 * C246 + C79306 * C515) * C52053 +
                      C53460 * C52141 + C53734 * C52054) *
                         C79308 * C79110 -
                     (C53735 * C52054 + C53463 * C52141 + C53734 * C52053 +
                      C53460 * C52140) *
                         C79308 * C79117 +
                     (C53463 * C52140 + C53735 * C52053 + C61458 * C52141 +
                      C61612 * C52054) *
                         C79308 * C20477) *
                        C79009 * C78986 +
                    ((C53464 * C52140 + C53736 * C52053 + C53466 * C52141 +
                      C53737 * C52054) *
                         C79308 * C79117 -
                     (C53736 * C52054 + C53464 * C52141 +
                      (C26498 * C247 + C79306 * C516) * C52053 +
                      (C26498 * C97 + C79306 * C103) * C52140) *
                         C79308 * C79110 -
                     (C63080 * C52054 + C62876 * C52141 + C53737 * C52053 +
                      C53466 * C52140) *
                         C79308 * C20477) *
                        C79009 * C78995 +
                    (((C26498 * C98 + C79306 * C104) * C52140 +
                      (C26498 * C248 + C79306 * C517) * C52053 +
                      C53468 * C52141 + C53738 * C52054) *
                         C79308 * C79110 -
                     (C53739 * C52054 + C53471 * C52141 + C53738 * C52053 +
                      C53468 * C52140) *
                         C79308 * C79117 +
                     (C53471 * C52140 + C53739 * C52053 +
                      (C26498 * C11721 + C79306 * C11722) * C52141 +
                      (C26498 * C11866 + C79306 * C12152) * C52054) *
                         C79308 * C20477) *
                        C79009 * C15086)) /
                  (p * q * std::sqrt(p + q));
    d2eezy[68] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C166 * C96 + C79308 * C167) * C52140 +
            (C166 * C246 + C79308 * C563) * C52053 + C53280 * C52141 +
            C53818 * C52054) *
               C79306 * C79110 -
           (C53819 * C52054 + C53283 * C52141 + C53818 * C52053 +
            C53280 * C52140) *
               C79306 * C79117 +
           (C53283 * C52140 + C53819 * C52053 + C61355 * C52141 +
            C61661 * C52054) *
               C79306 * C20477) *
              C79009 * C78986 +
          ((C1825 * C52140 + C2416 * C52053 + C1826 * C52141 + C2417 * C52054) *
               C79306 * C79117 -
           (C2416 * C52054 + C1825 * C52141 + C582 * C52053 + C196 * C52140) *
               C79306 * C79110 -
           (C12224 * C52054 + C11800 * C52141 + C2417 * C52053 +
            C1826 * C52140) *
               C79306 * C20477) *
              C79009 * C78995 +
          ((C199 * C52140 + C583 * C52053 + C1828 * C52141 + C2418 * C52054) *
               C79306 * C79110 -
           (C2419 * C52054 + C1831 * C52141 + C2418 * C52053 + C1828 * C52140) *
               C79306 * C79117 +
           (C1831 * C52140 + C2419 * C52053 +
            (C166 * C11721 + C79308 * C11792) * C52141 +
            (C166 * C11866 + C79308 * C12219) * C52054) *
               C79306 * C20477) *
              C79009 * C15086)) /
        (p * q * std::sqrt(p + q));
    d2eezz[68] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                   (((C52394 * C96 + C52397 + C52397 + C52053 * C632 +
                      C52395 * C1682 + C52398 + C52398 + C52054 * C2498) *
                         C79308 * C79306 * C79110 -
                     (C52395 * C1683 + C53894 + C53894 + C52054 * C2499 +
                      C52394 * C1682 + C53895 + C53895 + C52053 * C2498) *
                         C79308 * C79306 * C79117 +
                     (C52394 * C1683 + C53896 + C53896 + C52053 * C2499 +
                      C52395 * C10320 + C53897 + C53897 + C52054 * C10712) *
                         C79308 * C79306 * C20477) *
                        C79009 * C78986 +
                    ((C52394 * C1681 + C53898 + C53898 + C52053 * C2497 +
                      C52395 * C1684 + C53899 + C53899 + C52054 * C2500) *
                         C79308 * C79306 * C79117 -
                     (C52395 * C1681 + C52399 + C52399 + C52054 * C2497 +
                      C52394 * C97 + C52400 + C52400 + C52053 * C633) *
                         C79308 * C79306 * C79110 -
                     (C52395 * C10319 + C53900 + C53900 + C52054 * C10711 +
                      C52394 * C1684 + C53901 + C53901 + C52053 * C2500) *
                         C79308 * C79306 * C20477) *
                        C79009 * C78995 +
                    ((C52394 * C98 + C52401 + C52401 + C52053 * C634 +
                      C52395 * C1685 + C52402 + C52402 + C52054 * C2501) *
                         C79308 * C79306 * C79110 -
                     (C52395 * C1686 + C53902 + C53902 + C52054 * C2502 +
                      C52394 * C1685 + C53903 + C53903 + C52053 * C2501) *
                         C79308 * C79306 * C79117 +
                     (C52394 * C1686 + C53904 + C53904 + C52053 * C2502 +
                      C52395 * C11721 + C53905 + C53905 + C52054 * C12291) *
                         C79308 * C79306 * C20477) *
                        C79009 * C15086)) /
                  (p * q * std::sqrt(p + q));
    d2eexx[69] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C52053 +
            C53184 * C52054) *
               C79308 * C17509 -
           (C53185 * C52054 + C53184 * C52053) * C79308 * C79114) *
              C79009 * C79309 +
          ((C53186 * C52053 + C53187 * C52054) * C79308 * C79114 -
           (C53186 * C52054 +
            (C26497 * C97 + C26503 + C26503 + C79306 * C109) * C52053) *
               C79308 * C17509) *
              C79009 * C79299 +
          (((C26497 * C98 + C26504 + C26504 + C79306 * C110) * C52053 +
            C53188 * C52054) *
               C79308 * C17509 -
           (C53189 * C52054 + C53188 * C52053) * C79308 * C79114) *
              C79009 * C79283 +
          ((C54573 * C52053 +
            (C26497 * C1688 + C54570 + C54570 + C79306 * C1704) * C52054) *
               C79308 * C79114 -
           (C54573 * C52054 +
            (C26497 * C99 + C26507 + C26507 + C79306 * C111) * C52053) *
               C79308 * C17509) *
              C79009 * C79263)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C52053 +
             C53184 * C52054) *
                C79308 * C17509 -
            (C53185 * C52054 + C53184 * C52053) * C79308 * C79114) *
               C79300 +
           ((C29703 * C52053 + C31774 * C52054) * C79308 * C79114 -
            (C29703 * C52054 + C26964 * C52053) * C79308 * C17509) *
               C79285 +
           ((C26965 * C52053 + C31775 * C52054) * C79308 * C17509 -
            (C31776 * C52054 + C31775 * C52053) * C79308 * C79114) *
               C79259) *
              C13595 +
          (((C53186 * C52053 + C53187 * C52054) * C79308 * C79114 -
            (C53186 * C52054 +
             (C26497 * C97 + C26503 + C26503 + C79306 * C109) * C52053) *
                C79308 * C17509) *
               C79300 +
           ((C26966 * C52053 + C29704 * C52054) * C79308 * C17509 -
            (C36469 * C52054 + C29704 * C52053) * C79308 * C79114) *
               C79285 +
           ((C33189 * C52053 +
             (C26497 * C6046 + C36466 + C36466 + C79306 * C6058) * C52054) *
                C79308 * C79114 -
            (C33189 * C52054 + C26967 * C52053) * C79308 * C17509) *
               C79259) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eexy[69] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C166 * C96 + C79308 * C167) * C26498 +
             (C166 * C102 + C79308 * C173) * C79306) *
                C52053 +
            (C53284 + C53285) * C52054) *
               C17509 -
           ((C53286 + C53287) * C52054 + (C53285 + C53284) * C52053) * C79114) *
              C79009 * C79309 +
          (((C53272 + C53273) * C52053 + (C53274 + C53275) * C52054) * C79114 -
           ((C53273 + C53272) * C52054 +
            (C197 * C79306 + C196 * C26498) * C52053) *
               C17509) *
              C79009 * C79299 +
          (((C199 * C26498 + C198 * C79306) * C52053 +
            (C53276 + C53277) * C52054) *
               C17509 -
           ((C53278 + C53279) * C52054 + (C53277 + C53276) * C52053) * C79114) *
              C79009 * C79283 +
          (((C54640 + C54641) * C52053 +
            ((C166 * C1688 + C79308 * C1798) * C26498 +
             (C166 * C1696 + C79308 * C1806) * C79306) *
                C52054) *
               C79114 -
           ((C54641 + C54640) * C52054 +
            (C201 * C79306 + C200 * C26498) * C52053) *
               C17509) *
              C79009 * C79263)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C166 * C96 + C79308 * C167) * C26498 +
              (C166 * C102 + C79308 * C173) * C79306) *
                 C52053 +
             (C53284 + C53285) * C52054) *
                C17509 -
            ((C53286 + C53287) * C52054 + (C53285 + C53284) * C52053) *
                C79114) *
               C79300 +
           (((C55324 + C55325) * C52053 + (C57250 + C57251) * C52054) * C79114 -
            ((C55325 + C55324) * C52054 +
             ((C166 * C757 + C79308 * C867) * C79306 +
              (C166 * C749 + C79308 * C859) * C26498) *
                 C52053) *
                C17509) *
               C79285 +
           ((((C166 * C750 + C79308 * C860) * C26498 +
              (C166 * C758 + C79308 * C868) * C79306) *
                 C52053 +
             (C57252 + C57253) * C52054) *
                C17509 -
            ((C57254 + C57255) * C52054 + (C57253 + C57252) * C52053) *
                C79114) *
               C79259) *
              C13595 +
          ((((C53272 + C53273) * C52053 + (C53274 + C53275) * C52054) * C79114 -
            ((C53273 + C53272) * C52054 +
             (C197 * C79306 + C196 * C26498) * C52053) *
                C17509) *
               C79300 +
           (((C892 * C26498 + C891 * C79306) * C52053 +
             (C55318 + C55319) * C52054) *
                C17509 -
            ((C61906 + C61907) * C52054 + (C55319 + C55318) * C52053) *
                C79114) *
               C79285 +
           (((C58606 + C58607) * C52053 +
             ((C166 * C6046 + C79308 * C6144) * C26498 +
              (C166 * C6052 + C79308 * C6150) * C79306) *
                 C52054) *
                C79114 -
            ((C58607 + C58606) * C52054 +
             (C894 * C79306 + C893 * C26498) * C52053) *
                C17509) *
               C79259) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eexz[69] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
                C26498 +
            (C52140 * C102 + C52053 * C252 + C52141 * C1690 + C52054 * C1914) *
                C79306) *
               C79308 * C17509 -
           ((C52141 * C1691 + C52054 * C1915 + C52140 * C1690 +
             C52053 * C1914) *
                C79306 +
            (C52141 * C1683 + C52054 * C1907 + C52140 * C1682 +
             C52053 * C1906) *
                C26498) *
               C79308 * C79114) *
              C79009 * C79309 +
          (((C52140 * C1681 + C52053 * C1905 + C52141 * C1684 +
             C52054 * C1908) *
                C26498 +
            (C52140 * C1689 + C52053 * C1913 + C52141 * C1692 +
             C52054 * C1916) *
                C79306) *
               C79308 * C79114 -
           ((C52141 * C1689 + C52054 * C1913 + C52140 * C103 + C52053 * C253) *
                C79306 +
            (C52141 * C1681 + C52054 * C1905 + C52140 * C97 + C52053 * C247) *
                C26498) *
               C79308 * C17509) *
              C79009 * C79299 +
          (((C52140 * C98 + C52053 * C248 + C52141 * C1685 + C52054 * C1909) *
                C26498 +
            (C52140 * C104 + C52053 * C254 + C52141 * C1693 + C52054 * C1917) *
                C79306) *
               C79308 * C17509 -
           ((C52141 * C1694 + C52054 * C1918 + C52140 * C1693 +
             C52053 * C1917) *
                C79306 +
            (C52141 * C1686 + C52054 * C1910 + C52140 * C1685 +
             C52053 * C1909) *
                C26498) *
               C79308 * C79114) *
              C79009 * C79283 +
          (((C52140 * C1687 + C52053 * C1911 + C52141 * C1688 +
             C52054 * C1912) *
                C26498 +
            (C52140 * C1695 + C52053 * C1919 + C52141 * C1696 +
             C52054 * C1920) *
                C79306) *
               C79308 * C79114 -
           ((C52141 * C1695 + C52054 * C1919 + C52140 * C105 + C52053 * C255) *
                C79306 +
            (C52141 * C1687 + C52054 * C1911 + C52140 * C99 + C52053 * C249) *
                C26498) *
               C79308 * C17509) *
              C79009 * C79263)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
                 C26498 +
             (C52140 * C102 + C52053 * C252 + C52141 * C1690 + C52054 * C1914) *
                 C79306) *
                C79308 * C17509 -
            ((C52141 * C1691 + C52054 * C1915 + C52140 * C1690 +
              C52053 * C1914) *
                 C79306 +
             (C52141 * C1683 + C52054 * C1907 + C52140 * C1682 +
              C52053 * C1906) *
                 C26498) *
                C79308 * C79114) *
               C79300 +
           (((C52140 * C3931 + C52053 * C4165 + C52141 * C6042 +
              C52054 * C6226) *
                 C26498 +
             (C52140 * C3935 + C52053 * C4169 + C52141 * C6048 +
              C52054 * C6232) *
                 C79306) *
                C79308 * C79114 -
            ((C52141 * C3935 + C52054 * C4169 + C52140 * C757 + C52053 * C981) *
                 C79306 +
             (C52141 * C3931 + C52054 * C4165 + C52140 * C749 + C52053 * C973) *
                 C26498) *
                C79308 * C17509) *
               C79285 +
           (((C52140 * C750 + C52053 * C974 + C52141 * C6044 + C52054 * C6228) *
                 C26498 +
             (C52140 * C758 + C52053 * C982 + C52141 * C6050 + C52054 * C6234) *
                 C79306) *
                C79308 * C17509 -
            ((C52141 * C6051 + C52054 * C6235 + C52140 * C6050 +
              C52053 * C6234) *
                 C79306 +
             (C52141 * C6045 + C52054 * C6229 + C52140 * C6044 +
              C52053 * C6228) *
                 C26498) *
                C79308 * C79114) *
               C79259) *
              C13595 +
          ((((C52140 * C1681 + C52053 * C1905 + C52141 * C1684 +
              C52054 * C1908) *
                 C26498 +
             (C52140 * C1689 + C52053 * C1913 + C52141 * C1692 +
              C52054 * C1916) *
                 C79306) *
                C79308 * C79114 -
            ((C52141 * C1689 + C52054 * C1913 + C52140 * C103 + C52053 * C253) *
                 C79306 +
             (C52141 * C1681 + C52054 * C1905 + C52140 * C97 + C52053 * C247) *
                 C26498) *
                C79308 * C17509) *
               C79300 +
           (((C52140 * C748 + C52053 * C972 + C52141 * C3932 + C52054 * C4166) *
                 C26498 +
             (C52140 * C756 + C52053 * C980 + C52141 * C3936 + C52054 * C4170) *
                 C79306) *
                C79308 * C17509 -
            ((C52141 * C6047 + C52054 * C6231 + C52140 * C3936 +
              C52053 * C4170) *
                 C79306 +
             (C52141 * C6041 + C52054 * C6225 + C52140 * C3932 +
              C52053 * C4166) *
                 C26498) *
                C79308 * C79114) *
               C79285 +
           (((C52140 * C6043 + C52053 * C6227 + C52141 * C6046 +
              C52054 * C6230) *
                 C26498 +
             (C52140 * C6049 + C52053 * C6233 + C52141 * C6052 +
              C52054 * C6236) *
                 C79306) *
                C79308 * C79114 -
            ((C52141 * C6049 + C52054 * C6233 + C52140 * C759 + C52053 * C983) *
                 C79306 +
             (C52141 * C6043 + C52054 * C6227 + C52140 * C751 + C52053 * C975) *
                 C26498) *
                C79308 * C17509) *
               C79259) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eeyx[69] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C26498 * C96 + C79306 * C102) * C166 +
             (C26498 * C167 + C79306 * C324) * C79308) *
                C52053 +
            (C53472 + C53473) * C52054) *
               C17509 -
           ((C53474 + C53475) * C52054 + (C53473 + C53472) * C52053) * C79114) *
              C79009 * C79309 +
          (((C53476 + C53477) * C52053 + (C53478 + C53479) * C52054) * C79114 -
           ((C53477 + C53476) * C52054 +
            ((C26498 * C168 + C79306 * C325) * C79308 +
             (C26498 * C97 + C79306 * C103) * C166) *
                C52053) *
               C17509) *
              C79009 * C79299 +
          ((((C26498 * C98 + C79306 * C104) * C166 +
             (C26498 * C169 + C79306 * C326) * C79308) *
                C52053 +
            (C53480 + C53481) * C52054) *
               C17509 -
           ((C53482 + C53483) * C52054 + (C53481 + C53480) * C52053) * C79114) *
              C79009 * C79283 +
          (((C54780 + C54781) * C52053 +
            ((C26498 * C1688 + C79306 * C1696) * C166 +
             (C26498 * C1798 + C79306 * C2026) * C79308) *
                C52054) *
               C79114 -
           ((C54781 + C54780) * C52054 +
            ((C26498 * C170 + C79306 * C327) * C79308 +
             (C26498 * C99 + C79306 * C105) * C166) *
                C52053) *
               C17509) *
              C79009 * C79263)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C26498 * C96 + C79306 * C102) * C166 +
              (C26498 * C167 + C79306 * C324) * C79308) *
                 C52053 +
             (C53472 + C53473) * C52054) *
                C17509 -
            ((C53474 + C53475) * C52054 + (C53473 + C53472) * C52053) *
                C79114) *
               C79300 +
           (((C55522 + C55523) * C52053 + (C57404 + C57405) * C52054) * C79114 -
            ((C55523 + C55522) * C52054 +
             (C27247 * C79308 + C27246 * C166) * C52053) *
                C17509) *
               C79285 +
           (((C27249 * C166 + C27248 * C79308) * C52053 +
             (C57406 + C57407) * C52054) *
                C17509 -
            ((C57408 + C57409) * C52054 + (C57407 + C57406) * C52053) *
                C79114) *
               C79259) *
              C13595 +
          ((((C53476 + C53477) * C52053 + (C53478 + C53479) * C52054) * C79114 -
            ((C53477 + C53476) * C52054 +
             ((C26498 * C168 + C79306 * C325) * C79308 +
              (C26498 * C97 + C79306 * C103) * C166) *
                 C52053) *
                C17509) *
               C79300 +
           (((C27250 * C166 + C27251 * C79308) * C52053 +
             (C55524 + C55525) * C52054) *
                C17509 -
            ((C62104 + C62105) * C52054 + (C55525 + C55524) * C52053) *
                C79114) *
               C79285 +
           (((C58804 + C58805) * C52053 +
             ((C26498 * C6046 + C79306 * C6052) * C166 +
              (C26498 * C6144 + C79306 * C6316) * C79308) *
                 C52054) *
                C79114 -
            ((C58805 + C58804) * C52054 +
             (C27253 * C79308 + C27252 * C166) * C52053) *
                C17509) *
               C79259) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eeyy[69] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C372 * C96 + C380 + C380 + C79308 * C373) * C79306 * C52053 +
            C53572 * C52054) *
               C17509 -
           (C53573 * C52054 + C53572 * C52053) * C79114) *
              C79009 * C79309 +
          ((C53562 * C52053 + C53563 * C52054) * C79114 -
           (C53562 * C52054 + C402 * C79306 * C52053) * C17509) *
              C79009 * C79299 +
          ((C403 * C79306 * C52053 + C53564 * C52054) * C17509 -
           (C53565 * C52054 + C53564 * C52053) * C79114) *
              C79009 * C79283 +
          ((C54848 * C52053 +
            (C372 * C1688 + C2125 + C2125 + C79308 * C2108) * C79306 * C52054) *
               C79114 -
           (C54848 * C52054 + C404 * C79306 * C52053) * C17509) *
              C79009 * C79263)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C372 * C96 + C380 + C380 + C79308 * C373) * C79306 * C52053 +
             C53572 * C52054) *
                C17509 -
            (C53573 * C52054 + C53572 * C52053) * C79114) *
               C79300 +
           ((C55633 * C52053 + C57500 * C52054) * C79114 -
            (C55633 * C52054 +
             (C372 * C749 + C1180 + C1180 + C79308 * C1169) * C79306 * C52053) *
                C17509) *
               C79285 +
           (((C372 * C750 + C1181 + C1181 + C79308 * C1170) * C79306 * C52053 +
             C57501 * C52054) *
                C17509 -
            (C57502 * C52054 + C57501 * C52053) * C79114) *
               C79259) *
              C13595 +
          (((C53562 * C52053 + C53563 * C52054) * C79114 -
            (C53562 * C52054 + C402 * C79306 * C52053) * C17509) *
               C79300 +
           ((C1201 * C79306 * C52053 + C55628 * C52054) * C17509 -
            (C62204 * C52054 + C55628 * C52053) * C79114) *
               C79285 +
           ((C58904 * C52053 + (C372 * C6046 + C6403 + C6403 + C79308 * C6396) *
                                   C79306 * C52054) *
                C79114 -
            (C58904 * C52054 + C1202 * C79306 * C52053) * C17509) *
               C79259) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[69] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
                C166 +
            (C52140 * C167 + C52053 * C447 + C52141 * C1792 + C52054 * C2212) *
                C79308) *
               C79306 * C17509 -
           ((C52141 * C1793 + C52054 * C2213 + C52140 * C1792 +
             C52053 * C2212) *
                C79308 +
            (C52141 * C1683 + C52054 * C1907 + C52140 * C1682 +
             C52053 * C1906) *
                C166) *
               C79306 * C79114) *
              C79009 * C79309 +
          (((C52140 * C1681 + C52053 * C1905 + C52141 * C1684 +
             C52054 * C1908) *
                C166 +
            (C52140 * C1791 + C52053 * C2211 + C52141 * C1794 +
             C52054 * C2214) *
                C79308) *
               C79306 * C79114 -
           ((C52141 * C1791 + C52054 * C2211 + C52140 * C168 + C52053 * C448) *
                C79308 +
            (C52141 * C1681 + C52054 * C1905 + C52140 * C97 + C52053 * C247) *
                C166) *
               C79306 * C17509) *
              C79009 * C79299 +
          (((C52140 * C98 + C52053 * C248 + C52141 * C1685 + C52054 * C1909) *
                C166 +
            (C52140 * C169 + C52053 * C449 + C52141 * C1795 + C52054 * C2215) *
                C79308) *
               C79306 * C17509 -
           ((C52141 * C1796 + C52054 * C2216 + C52140 * C1795 +
             C52053 * C2215) *
                C79308 +
            (C52141 * C1686 + C52054 * C1910 + C52140 * C1685 +
             C52053 * C1909) *
                C166) *
               C79306 * C79114) *
              C79009 * C79283 +
          (((C52140 * C1687 + C52053 * C1911 + C52141 * C1688 +
             C52054 * C1912) *
                C166 +
            (C52140 * C1797 + C52053 * C2217 + C52141 * C1798 +
             C52054 * C2218) *
                C79308) *
               C79306 * C79114 -
           ((C52141 * C1797 + C52054 * C2217 + C52140 * C170 + C52053 * C450) *
                C79308 +
            (C52141 * C1687 + C52054 * C1911 + C52140 * C99 + C52053 * C249) *
                C166) *
               C79306 * C17509) *
              C79009 * C79263)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
                 C166 +
             (C52140 * C167 + C52053 * C447 + C52141 * C1792 + C52054 * C2212) *
                 C79308) *
                C79306 * C17509 -
            ((C52141 * C1793 + C52054 * C2213 + C52140 * C1792 +
              C52053 * C2212) *
                 C79308 +
             (C52141 * C1683 + C52054 * C1907 + C52140 * C1682 +
              C52053 * C1906) *
                 C166) *
                C79306 * C79114) *
               C79300 +
           (((C52140 * C3931 + C52053 * C4165 + C52141 * C6042 +
              C52054 * C6226) *
                 C166 +
             (C52140 * C4047 + C52053 * C4501 + C52141 * C6140 +
              C52054 * C6478) *
                 C79308) *
                C79306 * C79114 -
            ((C52141 * C4047 + C52054 * C4501 + C52140 * C859 +
              C52053 * C1279) *
                 C79308 +
             (C52141 * C3931 + C52054 * C4165 + C52140 * C749 + C52053 * C973) *
                 C166) *
                C79306 * C17509) *
               C79285 +
           (((C52140 * C750 + C52053 * C974 + C52141 * C6044 + C52054 * C6228) *
                 C166 +
             (C52140 * C860 + C52053 * C1280 + C52141 * C6142 +
              C52054 * C6480) *
                 C79308) *
                C79306 * C17509 -
            ((C52141 * C6143 + C52054 * C6481 + C52140 * C6142 +
              C52053 * C6480) *
                 C79308 +
             (C52141 * C6045 + C52054 * C6229 + C52140 * C6044 +
              C52053 * C6228) *
                 C166) *
                C79306 * C79114) *
               C79259) *
              C13595 +
          ((((C52140 * C1681 + C52053 * C1905 + C52141 * C1684 +
              C52054 * C1908) *
                 C166 +
             (C52140 * C1791 + C52053 * C2211 + C52141 * C1794 +
              C52054 * C2214) *
                 C79308) *
                C79306 * C79114 -
            ((C52141 * C1791 + C52054 * C2211 + C52140 * C168 + C52053 * C448) *
                 C79308 +
             (C52141 * C1681 + C52054 * C1905 + C52140 * C97 + C52053 * C247) *
                 C166) *
                C79306 * C17509) *
               C79300 +
           (((C52140 * C748 + C52053 * C972 + C52141 * C3932 + C52054 * C4166) *
                 C166 +
             (C52140 * C858 + C52053 * C1278 + C52141 * C4048 +
              C52054 * C4502) *
                 C79308) *
                C79306 * C17509 -
            ((C52141 * C6139 + C52054 * C6477 + C52140 * C4048 +
              C52053 * C4502) *
                 C79308 +
             (C52141 * C6041 + C52054 * C6225 + C52140 * C3932 +
              C52053 * C4166) *
                 C166) *
                C79306 * C79114) *
               C79285 +
           (((C52140 * C6043 + C52053 * C6227 + C52141 * C6046 +
              C52054 * C6230) *
                 C166 +
             (C52140 * C6141 + C52053 * C6479 + C52141 * C6144 +
              C52054 * C6482) *
                 C79308) *
                C79306 * C79114 -
            ((C52141 * C6141 + C52054 * C6479 + C52140 * C861 +
              C52053 * C1281) *
                 C79308 +
             (C52141 * C6043 + C52054 * C6227 + C52140 * C751 + C52053 * C975) *
                 C166) *
                C79306 * C17509) *
               C79259) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eezx[69] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C26498 * C96 + C79306 * C102) * C52140 +
                      (C26498 * C246 + C79306 * C515) * C52053 +
                      C53460 * C52141 + C53734 * C52054) *
                         C79308 * C17509 -
                     (C53735 * C52054 + C53463 * C52141 + C53734 * C52053 +
                      C53460 * C52140) *
                         C79308 * C79114) *
                        C79009 * C79309 +
                    ((C53464 * C52140 + C53736 * C52053 + C53466 * C52141 +
                      C53737 * C52054) *
                         C79308 * C79114 -
                     (C53736 * C52054 + C53464 * C52141 +
                      (C26498 * C247 + C79306 * C516) * C52053 +
                      (C26498 * C97 + C79306 * C103) * C52140) *
                         C79308 * C17509) *
                        C79009 * C79299 +
                    (((C26498 * C98 + C79306 * C104) * C52140 +
                      (C26498 * C248 + C79306 * C517) * C52053 +
                      C53468 * C52141 + C53738 * C52054) *
                         C79308 * C17509 -
                     (C53739 * C52054 + C53471 * C52141 + C53738 * C52053 +
                      C53468 * C52140) *
                         C79308 * C79114) *
                        C79009 * C79283 +
                    ((C54778 * C52140 + C54983 * C52053 +
                      (C26498 * C1688 + C79306 * C1696) * C52141 +
                      (C26498 * C1912 + C79306 * C2320) * C52054) *
                         C79308 * C79114 -
                     (C54983 * C52054 + C54778 * C52141 +
                      (C26498 * C249 + C79306 * C518) * C52053 +
                      (C26498 * C99 + C79306 * C105) * C52140) *
                         C79308 * C17509) *
                        C79009 * C79263)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((((C26498 * C96 + C79306 * C102) * C52140 +
                       (C26498 * C246 + C79306 * C515) * C52053 +
                       C53460 * C52141 + C53734 * C52054) *
                          C79308 * C17509 -
                      (C53735 * C52054 + C53463 * C52141 + C53734 * C52053 +
                       C53460 * C52140) *
                          C79308 * C79114) *
                         C79300 +
                     ((C30028 * C52140 + C30345 * C52053 + C32043 * C52141 +
                       C32298 * C52054) *
                          C79308 * C79114 -
                      (C30345 * C52054 + C30028 * C52141 + C27516 * C52053 +
                       C27246 * C52140) *
                          C79308 * C17509) *
                         C79285 +
                     ((C27249 * C52140 + C27517 * C52053 + C32045 * C52141 +
                       C32299 * C52054) *
                          C79308 * C17509 -
                      (C32300 * C52054 + C32048 * C52141 + C32299 * C52053 +
                       C32045 * C52140) *
                          C79308 * C79114) *
                         C79259) *
                        C13595 +
                    (((C53464 * C52140 + C53736 * C52053 + C53466 * C52141 +
                       C53737 * C52054) *
                          C79308 * C79114 -
                      (C53736 * C52054 + C53464 * C52141 +
                       (C26498 * C247 + C79306 * C516) * C52053 +
                       (C26498 * C97 + C79306 * C103) * C52140) *
                          C79308 * C17509) *
                         C79300 +
                     ((C27250 * C52140 + C27518 * C52053 + C30029 * C52141 +
                       C30346 * C52054) *
                          C79308 * C17509 -
                      (C37072 * C52054 + C36772 * C52141 + C30346 * C52053 +
                       C30029 * C52140) *
                          C79308 * C79114) *
                         C79285 +
                     ((C33492 * C52140 + C33792 * C52053 +
                       (C26498 * C6046 + C79306 * C6052) * C52141 +
                       (C26498 * C6230 + C79306 * C6562) * C52054) *
                          C79308 * C79114 -
                      (C33792 * C52054 + C33492 * C52141 + C27519 * C52053 +
                       C27252 * C52140) *
                          C79308 * C17509) *
                         C79259) *
                        C78992)) /
                      (p * q * std::sqrt(p + q));
    d2eezy[69] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C166 * C96 + C79308 * C167) * C52140 +
            (C166 * C246 + C79308 * C563) * C52053 + C53280 * C52141 +
            C53818 * C52054) *
               C79306 * C17509 -
           (C53819 * C52054 + C53283 * C52141 + C53818 * C52053 +
            C53280 * C52140) *
               C79306 * C79114) *
              C79009 * C79309 +
          ((C1825 * C52140 + C2416 * C52053 + C1826 * C52141 + C2417 * C52054) *
               C79306 * C79114 -
           (C2416 * C52054 + C1825 * C52141 + C582 * C52053 + C196 * C52140) *
               C79306 * C17509) *
              C79009 * C79299 +
          ((C199 * C52140 + C583 * C52053 + C1828 * C52141 + C2418 * C52054) *
               C79306 * C17509 -
           (C2419 * C52054 + C1831 * C52141 + C2418 * C52053 + C1828 * C52140) *
               C79306 * C79114) *
              C79009 * C79283 +
          ((C3334 * C52140 + C3758 * C52053 +
            (C166 * C1688 + C79308 * C1798) * C52141 +
            (C166 * C1912 + C79308 * C2402) * C52054) *
               C79306 * C79114 -
           (C3758 * C52054 + C3334 * C52141 + C584 * C52053 + C200 * C52140) *
               C79306 * C17509) *
              C79009 * C79263)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C166 * C96 + C79308 * C167) * C52140 +
             (C166 * C246 + C79308 * C563) * C52053 + C53280 * C52141 +
             C53818 * C52054) *
                C79306 * C17509 -
            (C53819 * C52054 + C53283 * C52141 + C53818 * C52053 +
             C53280 * C52140) *
                C79306 * C79114) *
               C79300 +
           ((C55322 * C52140 + C55930 * C52053 + C57244 * C52141 +
             C57731 * C52054) *
                C79306 * C79114 -
            (C55930 * C52054 + C55322 * C52141 +
             (C166 * C973 + C79308 * C1463) * C52053 +
             (C166 * C749 + C79308 * C859) * C52140) *
                C79306 * C17509) *
               C79285 +
           (((C166 * C750 + C79308 * C860) * C52140 +
             (C166 * C974 + C79308 * C1464) * C52053 + C57246 * C52141 +
             C57732 * C52054) *
                C79306 * C17509 -
            (C57733 * C52054 + C57249 * C52141 + C57732 * C52053 +
             C57246 * C52140) *
                C79306 * C79114) *
               C79259) *
              C13595 +
          (((C1825 * C52140 + C2416 * C52053 + C1826 * C52141 +
             C2417 * C52054) *
                C79306 * C79114 -
            (C2416 * C52054 + C1825 * C52141 + C582 * C52053 + C196 * C52140) *
                C79306 * C17509) *
               C79300 +
           ((C892 * C52140 + C1483 * C52053 + C4064 * C52141 + C4726 * C52054) *
                C79306 * C17509 -
            (C11544 * C52054 + C10928 * C52141 + C4726 * C52053 +
             C4064 * C52140) *
                C79306 * C79114) *
               C79285 +
           ((C7588 * C52140 + C8204 * C52053 +
             (C166 * C6046 + C79308 * C6144) * C52141 +
             (C166 * C6230 + C79308 * C6642) * C52054) *
                C79306 * C79114 -
            (C8204 * C52054 + C7588 * C52141 + C1484 * C52053 + C893 * C52140) *
                C79306 * C17509) *
               C79259) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eezz[69] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((C52394 * C96 + C52397 + C52397 + C52053 * C632 +
                      C52395 * C1682 + C52398 + C52398 + C52054 * C2498) *
                         C79308 * C79306 * C17509 -
                     (C52395 * C1683 + C53894 + C53894 + C52054 * C2499 +
                      C52394 * C1682 + C53895 + C53895 + C52053 * C2498) *
                         C79308 * C79306 * C79114) *
                        C79009 * C79309 +
                    ((C52394 * C1681 + C53898 + C53898 + C52053 * C2497 +
                      C52395 * C1684 + C53899 + C53899 + C52054 * C2500) *
                         C79308 * C79306 * C79114 -
                     (C52395 * C1681 + C52399 + C52399 + C52054 * C2497 +
                      C52394 * C97 + C52400 + C52400 + C52053 * C633) *
                         C79308 * C79306 * C17509) *
                        C79009 * C79299 +
                    ((C52394 * C98 + C52401 + C52401 + C52053 * C634 +
                      C52395 * C1685 + C52402 + C52402 + C52054 * C2501) *
                         C79308 * C79306 * C17509 -
                     (C52395 * C1686 + C53902 + C53902 + C52054 * C2502 +
                      C52394 * C1685 + C53903 + C53903 + C52053 * C2501) *
                         C79308 * C79306 * C79114) *
                        C79009 * C79283 +
                    ((C52394 * C1687 + C55116 + C55116 + C52053 * C2503 +
                      C52395 * C1688 + C55117 + C55117 + C52054 * C2504) *
                         C79308 * C79306 * C79114 -
                     (C52395 * C1687 + C52403 + C52403 + C52054 * C2503 +
                      C52394 * C99 + C52404 + C52404 + C52053 * C635) *
                         C79308 * C79306 * C17509) *
                        C79009 * C79263)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C52394 * C96 + C52397 + C52397 + C52053 * C632 +
                       C52395 * C1682 + C52398 + C52398 + C52054 * C2498) *
                          C79308 * C79306 * C17509 -
                      (C52395 * C1683 + C53894 + C53894 + C52054 * C2499 +
                       C52394 * C1682 + C53895 + C53895 + C52053 * C2498) *
                          C79308 * C79306 * C79114) *
                         C79300 +
                     ((C52394 * C3931 + C56029 + C56029 + C52053 * C4827 +
                       C52395 * C6042 + C56030 + C56030 + C52054 * C6718) *
                          C79308 * C79306 * C79114 -
                      (C52395 * C3931 + C53073 + C53073 + C52054 * C4827 +
                       C52394 * C749 + C53074 + C53074 + C52053 * C1565) *
                          C79308 * C79306 * C17509) *
                         C79285 +
                     ((C52394 * C750 + C53075 + C53075 + C52053 * C1566 +
                       C52395 * C6044 + C53076 + C53076 + C52054 * C6720) *
                          C79308 * C79306 * C17509 -
                      (C52395 * C6045 + C57810 + C57810 + C52054 * C6721 +
                       C52394 * C6044 + C57811 + C57811 + C52053 * C6720) *
                          C79308 * C79306 * C79114) *
                         C79259) *
                        C13595 +
                    (((C52394 * C1681 + C53898 + C53898 + C52053 * C2497 +
                       C52395 * C1684 + C53899 + C53899 + C52054 * C2500) *
                          C79308 * C79306 * C79114 -
                      (C52395 * C1681 + C52399 + C52399 + C52054 * C2497 +
                       C52394 * C97 + C52400 + C52400 + C52053 * C633) *
                          C79308 * C79306 * C17509) *
                         C79300 +
                     ((C52394 * C748 + C53077 + C53077 + C52053 * C1564 +
                       C52395 * C3932 + C53078 + C53078 + C52054 * C4828) *
                          C79308 * C79306 * C17509 -
                      (C52395 * C6041 + C56031 + C56031 + C52054 * C6717 +
                       C52394 * C3932 + C56032 + C56032 + C52053 * C4828) *
                          C79308 * C79306 * C79114) *
                         C79285 +
                     ((C52394 * C6043 + C59297 + C59297 + C52053 * C6719 +
                       C52395 * C6046 + C59298 + C59298 + C52054 * C6722) *
                          C79308 * C79306 * C79114 -
                      (C52395 * C6043 + C53079 + C53079 + C52054 * C6719 +
                       C52394 * C751 + C53080 + C53080 + C52053 * C1567) *
                          C79308 * C79306 * C17509) *
                         C79259) *
                        C78992)) /
                      (p * q * std::sqrt(p + q));
    d2eexx[70] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C52053 +
            C53184 * C52054) *
               C79308 * C79027 * C79229 -
           (C29703 * C52054 + C26964 * C52053) * C79308 * C79027 * C79072) *
              C2605 +
          ((C26966 * C52053 + C29704 * C52054) * C79308 * C79027 * C79072 -
           (C53186 * C52054 +
            (C26497 * C97 + C26503 + C26503 + C79306 * C109) * C52053) *
               C79308 * C79027 * C79229) *
              C2606 +
          (((C26497 * C98 + C26504 + C26504 + C79306 * C110) * C52053 +
            C53188 * C52054) *
               C79308 * C79027 * C79229 -
           (C29705 * C52054 + C26968 * C52053) * C79308 * C79027 * C79072) *
              C2607 +
          ((C28447 * C52053 +
            (C26497 * C3934 + C29059 + C29059 + C79306 * C3942) * C52054) *
               C79308 * C79027 * C79072 -
           ((C26497 * C1687 + C29058 + C29058 + C79306 * C1703) * C52054 +
            (C26497 * C99 + C26507 + C26507 + C79306 * C111) * C52053) *
               C79308 * C79027 * C79229) *
              C79263)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C52053 +
            C53184 * C52054) *
               C79308 * C79027 * C6795 -
           (C29703 * C52054 + C26964 * C52053) * C79308 * C79027 * C6796 +
           (C26965 * C52053 + C31775 * C52054) * C79308 * C79027 * C6797 -
           (C34064 * C52054 + C31273 * C52053) * C79308 * C79027 * C79269) *
              C79215 +
          ((C26966 * C52053 + C29704 * C52054) * C79308 * C79027 * C6796 -
           (C53186 * C52054 +
            (C26497 * C97 + C26503 + C26503 + C79306 * C109) * C52053) *
               C79308 * C79027 * C6795 -
           (C33189 * C52054 + C26967 * C52053) * C79308 * C79027 * C6797 +
           (C32541 * C52053 +
            (C26497 * C8378 + C33186 + C33186 + C79306 * C8382) * C52054) *
               C79308 * C79027 * C79269) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eexy[70] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((((C166 * C96 + C79308 * C167) * C26498 +
                       (C166 * C102 + C79308 * C173) * C79306) *
                          C52053 +
                      (C53284 + C53285) * C52054) *
                         C79027 * C79229 -
                     (((C166 * C3935 + C79308 * C4051) * C79306 +
                       (C166 * C3931 + C79308 * C4047) * C26498) *
                          C52054 +
                      ((C166 * C757 + C79308 * C867) * C79306 +
                       (C166 * C749 + C79308 * C859) * C26498) *
                          C52053) *
                         C79027 * C79072) *
                        C2605 +
                    (((C892 * C26498 + C891 * C79306) * C52053 +
                      (C4064 * C26498 + C4065 * C79306) * C52054) *
                         C79027 * C79072 -
                     ((C53273 + C53272) * C52054 +
                      (C197 * C79306 + C196 * C26498) * C52053) *
                         C79027 * C79229) *
                        C2606 +
                    (((C199 * C26498 + C198 * C79306) * C52053 +
                      (C53276 + C53277) * C52054) *
                         C79027 * C79229 -
                     ((C4066 * C79306 + C4067 * C26498) * C52054 +
                      (C896 * C79306 + C895 * C26498) * C52053) *
                         C79027 * C79072) *
                        C2607 +
                    (((C2688 * C26498 + C2687 * C79306) * C52053 +
                      ((C166 * C3934 + C79308 * C4050) * C26498 +
                       (C166 * C3938 + C79308 * C4054) * C79306) *
                          C52054) *
                         C79027 * C79072 -
                     ((C3333 * C79306 + C3334 * C26498) * C52054 +
                      (C201 * C79306 + C200 * C26498) * C52053) *
                         C79027 * C79229) *
                        C79263)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((((C166 * C96 + C79308 * C167) * C26498 +
                       (C166 * C102 + C79308 * C173) * C79306) *
                          C52053 +
                      (C53284 + C53285) * C52054) *
                         C79027 * C6795 -
                     ((C55325 + C55324) * C52054 +
                      ((C166 * C757 + C79308 * C867) * C79306 +
                       (C166 * C749 + C79308 * C859) * C26498) *
                          C52053) *
                         C79027 * C6796 +
                     (((C166 * C750 + C79308 * C860) * C26498 +
                       (C166 * C758 + C79308 * C868) * C79306) *
                          C52053 +
                      (C57252 + C57253) * C52054) *
                         C79027 * C6797 -
                     (((C166 * C8379 + C79308 * C8453) * C79306 +
                       (C166 * C8377 + C79308 * C8451) * C26498) *
                          C52054 +
                      ((C166 * C5572 + C79308 * C5630) * C79306 +
                       (C166 * C5568 + C79308 * C5626) * C26498) *
                          C52053) *
                         C79027 * C79269) *
                        C79215 +
                    (((C892 * C26498 + C891 * C79306) * C52053 +
                      (C55318 + C55319) * C52054) *
                         C79027 * C6796 -
                     ((C53273 + C53272) * C52054 +
                      (C197 * C79306 + C196 * C26498) * C52053) *
                         C79027 * C6795 -
                     ((C7587 * C79306 + C7588 * C26498) * C52054 +
                      (C894 * C79306 + C893 * C26498) * C52053) *
                         C79027 * C6797 +
                     ((C6880 * C26498 + C6879 * C79306) * C52053 +
                      ((C166 * C8378 + C79308 * C8452) * C26498 +
                       (C166 * C8380 + C79308 * C8454) * C79306) *
                          C52054) *
                         C79027 * C79269) *
                        C78992)) /
                      (p * q * std::sqrt(p + q));
    d2eexz[70] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
                C26498 +
            (C52140 * C102 + C52053 * C252 + C52141 * C1690 + C52054 * C1914) *
                C79306) *
               C79308 * C79027 * C79229 -
           ((C52141 * C3935 + C52054 * C4169 + C52140 * C757 + C52053 * C981) *
                C79306 +
            (C52141 * C3931 + C52054 * C4165 + C52140 * C749 + C52053 * C973) *
                C26498) *
               C79308 * C79027 * C79072) *
              C2605 +
          (((C52140 * C748 + C52053 * C972 + C52141 * C3932 + C52054 * C4166) *
                C26498 +
            (C52140 * C756 + C52053 * C980 + C52141 * C3936 + C52054 * C4170) *
                C79306) *
               C79308 * C79027 * C79072 -
           ((C52141 * C1689 + C52054 * C1913 + C52140 * C103 + C52053 * C253) *
                C79306 +
            (C52141 * C1681 + C52054 * C1905 + C52140 * C97 + C52053 * C247) *
                C26498) *
               C79308 * C79027 * C79229) *
              C2606 +
          (((C52140 * C98 + C52053 * C248 + C52141 * C1685 + C52054 * C1909) *
                C26498 +
            (C52140 * C104 + C52053 * C254 + C52141 * C1693 + C52054 * C1917) *
                C79306) *
               C79308 * C79027 * C79229 -
           ((C52141 * C3937 + C52054 * C4171 + C52140 * C760 + C52053 * C984) *
                C79306 +
            (C52141 * C3933 + C52054 * C4167 + C52140 * C752 + C52053 * C976) *
                C26498) *
               C79308 * C79027 * C79072) *
              C2607 +
          (((C52140 * C754 + C52053 * C978 + C52141 * C3934 + C52054 * C4168) *
                C26498 +
            (C52140 * C762 + C52053 * C986 + C52141 * C3938 + C52054 * C4172) *
                C79306) *
               C79308 * C79027 * C79072 -
           ((C52141 * C1695 + C52054 * C1919 + C52140 * C105 + C52053 * C255) *
                C79306 +
            (C52141 * C1687 + C52054 * C1911 + C52140 * C99 + C52053 * C249) *
                C26498) *
               C79308 * C79027 * C79229) *
              C79263)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
                C26498 +
            (C52140 * C102 + C52053 * C252 + C52141 * C1690 + C52054 * C1914) *
                C79306) *
               C79308 * C79027 * C6795 -
           ((C52141 * C3935 + C52054 * C4169 + C52140 * C757 + C52053 * C981) *
                C79306 +
            (C52141 * C3931 + C52054 * C4165 + C52140 * C749 + C52053 * C973) *
                C26498) *
               C79308 * C79027 * C6796 +
           ((C52140 * C750 + C52053 * C974 + C52141 * C6044 + C52054 * C6228) *
                C26498 +
            (C52140 * C758 + C52053 * C982 + C52141 * C6050 + C52054 * C6234) *
                C79306) *
               C79308 * C79027 * C6797 -
           ((C52141 * C8379 + C52054 * C8523 + C52140 * C5572 +
             C52053 * C5680) *
                C79306 +
            (C52141 * C8377 + C52054 * C8521 + C52140 * C5568 +
             C52053 * C5676) *
                C26498) *
               C79308 * C79027 * C79269) *
              C79215 +
          (((C52140 * C748 + C52053 * C972 + C52141 * C3932 + C52054 * C4166) *
                C26498 +
            (C52140 * C756 + C52053 * C980 + C52141 * C3936 + C52054 * C4170) *
                C79306) *
               C79308 * C79027 * C6796 -
           ((C52141 * C1689 + C52054 * C1913 + C52140 * C103 + C52053 * C253) *
                C79306 +
            (C52141 * C1681 + C52054 * C1905 + C52140 * C97 + C52053 * C247) *
                C26498) *
               C79308 * C79027 * C6795 -
           ((C52141 * C6049 + C52054 * C6233 + C52140 * C759 + C52053 * C983) *
                C79306 +
            (C52141 * C6043 + C52054 * C6227 + C52140 * C751 + C52053 * C975) *
                C26498) *
               C79308 * C79027 * C6797 +
           ((C52140 * C5567 + C52053 * C5675 + C52141 * C8378 +
             C52054 * C8522) *
                C26498 +
            (C52140 * C5571 + C52053 * C5679 + C52141 * C8380 +
             C52054 * C8524) *
                C79306) *
               C79308 * C79027 * C79269) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eeyx[70] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((((C26498 * C96 + C79306 * C102) * C166 +
                       (C26498 * C167 + C79306 * C324) * C79308) *
                          C52053 +
                      (C53472 + C53473) * C52054) *
                         C79027 * C79229 -
                     ((C30027 * C79308 + C30028 * C166) * C52054 +
                      (C27247 * C79308 + C27246 * C166) * C52053) *
                         C79027 * C79072) *
                        C2605 +
                    (((C27250 * C166 + C27251 * C79308) * C52053 +
                      (C30029 * C166 + C30030 * C79308) * C52054) *
                         C79027 * C79072 -
                     ((C53477 + C53476) * C52054 +
                      ((C26498 * C168 + C79306 * C325) * C79308 +
                       (C26498 * C97 + C79306 * C103) * C166) *
                          C52053) *
                         C79027 * C79229) *
                        C2606 +
                    ((((C26498 * C98 + C79306 * C104) * C166 +
                       (C26498 * C169 + C79306 * C326) * C79308) *
                          C52053 +
                      (C53480 + C53481) * C52054) *
                         C79027 * C79229 -
                     ((C30031 * C79308 + C30032 * C166) * C52054 +
                      (C27255 * C79308 + C27254 * C166) * C52053) *
                         C79027 * C79072) *
                        C2607 +
                    (((C28653 * C166 + C28654 * C79308) * C52053 +
                      ((C26498 * C3934 + C79306 * C3938) * C166 +
                       (C26498 * C4050 + C79306 * C4286) * C79308) *
                          C52054) *
                         C79027 * C79072 -
                     (((C26498 * C1797 + C79306 * C2025) * C79308 +
                       (C26498 * C1687 + C79306 * C1695) * C166) *
                          C52054 +
                      ((C26498 * C170 + C79306 * C327) * C79308 +
                       (C26498 * C99 + C79306 * C105) * C166) *
                          C52053) *
                         C79027 * C79229) *
                        C79263)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((((C26498 * C96 + C79306 * C102) * C166 +
                       (C26498 * C167 + C79306 * C324) * C79308) *
                          C52053 +
                      (C53472 + C53473) * C52054) *
                         C79027 * C6795 -
                     ((C55523 + C55522) * C52054 +
                      (C27247 * C79308 + C27246 * C166) * C52053) *
                         C79027 * C6796 +
                     ((C27249 * C166 + C27248 * C79308) * C52053 +
                      (C57406 + C57407) * C52054) *
                         C79027 * C6797 -
                     ((C34281 * C79308 + C34282 * C166) * C52054 +
                      (C31433 * C79308 + C31432 * C166) * C52053) *
                         C79027 * C79269) *
                        C79215 +
                    (((C27250 * C166 + C27251 * C79308) * C52053 +
                      (C55524 + C55525) * C52054) *
                         C79027 * C6796 -
                     ((C53477 + C53476) * C52054 +
                      ((C26498 * C168 + C79306 * C325) * C79308 +
                       (C26498 * C97 + C79306 * C103) * C166) *
                          C52053) *
                         C79027 * C6795 -
                     ((C33491 * C79308 + C33492 * C166) * C52054 +
                      (C27253 * C79308 + C27252 * C166) * C52053) *
                         C79027 * C6797 +
                     ((C32748 * C166 + C32747 * C79308) * C52053 +
                      ((C26498 * C8378 + C79306 * C8380) * C166 +
                       (C26498 * C8452 + C79306 * C8592) * C79308) *
                          C52054) *
                         C79027 * C79269) *
                        C78992)) /
                      (p * q * std::sqrt(p + q));
    d2eeyy[70] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C372 * C96 + C380 + C380 + C79308 * C373) * C79306 * C52053 +
            C53572 * C52054) *
               C79027 * C79229 -
           ((C372 * C3931 + C4390 + C4390 + C79308 * C4385) * C79306 * C52054 +
            (C372 * C749 + C1180 + C1180 + C79308 * C1169) * C79306 * C52053) *
               C79027 * C79072) *
              C2605 +
          ((C1201 * C79306 * C52053 + C4402 * C79306 * C52054) * C79027 *
               C79072 -
           (C53562 * C52054 + C402 * C79306 * C52053) * C79027 * C79229) *
              C2606 +
          ((C403 * C79306 * C52053 + C53564 * C52054) * C79027 * C79229 -
           (C4403 * C79306 * C52054 + C1203 * C79306 * C52053) * C79027 *
               C79072) *
              C2607 +
          ((C2902 * C79306 * C52053 +
            (C372 * C3934 + C4397 + C4397 + C79308 * C4388) * C79306 * C52054) *
               C79027 * C79072 -
           (C3548 * C79306 * C52054 + C404 * C79306 * C52053) * C79027 *
               C79229) *
              C79263)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C372 * C96 + C380 + C380 + C79308 * C373) * C79306 * C52053 +
            C53572 * C52054) *
               C79027 * C6795 -
           (C55633 * C52054 +
            (C372 * C749 + C1180 + C1180 + C79308 * C1169) * C79306 * C52053) *
               C79027 * C6796 +
           ((C372 * C750 + C1181 + C1181 + C79308 * C1170) * C79306 * C52053 +
            C57501 * C52054) *
               C79027 * C6797 -
           ((C372 * C8377 + C8662 + C8662 + C79308 * C8659) * C79306 * C52054 +
            (C372 * C5568 + C5777 + C5777 + C79308 * C5772) * C79306 * C52053) *
               C79027 * C79269) *
              C79215 +
          ((C1201 * C79306 * C52053 + C55628 * C52054) * C79027 * C6796 -
           (C53562 * C52054 + C402 * C79306 * C52053) * C79027 * C6795 -
           (C7898 * C79306 * C52054 + C1202 * C79306 * C52053) * C79027 *
               C6797 +
           (C7094 * C79306 * C52053 +
            (C372 * C8378 + C8663 + C8663 + C79308 * C8660) * C79306 * C52054) *
               C79027 * C79269) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[70] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
                C166 +
            (C52140 * C167 + C52053 * C447 + C52141 * C1792 + C52054 * C2212) *
                C79308) *
               C79306 * C79027 * C79229 -
           ((C52141 * C4047 + C52054 * C4501 + C52140 * C859 + C52053 * C1279) *
                C79308 +
            (C52141 * C3931 + C52054 * C4165 + C52140 * C749 + C52053 * C973) *
                C166) *
               C79306 * C79027 * C79072) *
              C2605 +
          (((C52140 * C748 + C52053 * C972 + C52141 * C3932 + C52054 * C4166) *
                C166 +
            (C52140 * C858 + C52053 * C1278 + C52141 * C4048 + C52054 * C4502) *
                C79308) *
               C79306 * C79027 * C79072 -
           ((C52141 * C1791 + C52054 * C2211 + C52140 * C168 + C52053 * C448) *
                C79308 +
            (C52141 * C1681 + C52054 * C1905 + C52140 * C97 + C52053 * C247) *
                C166) *
               C79306 * C79027 * C79229) *
              C2606 +
          (((C52140 * C98 + C52053 * C248 + C52141 * C1685 + C52054 * C1909) *
                C166 +
            (C52140 * C169 + C52053 * C449 + C52141 * C1795 + C52054 * C2215) *
                C79308) *
               C79306 * C79027 * C79229 -
           ((C52141 * C4049 + C52054 * C4503 + C52140 * C862 + C52053 * C1282) *
                C79308 +
            (C52141 * C3933 + C52054 * C4167 + C52140 * C752 + C52053 * C976) *
                C166) *
               C79306 * C79027 * C79072) *
              C2607 +
          (((C52140 * C754 + C52053 * C978 + C52141 * C3934 + C52054 * C4168) *
                C166 +
            (C52140 * C864 + C52053 * C1284 + C52141 * C4050 + C52054 * C4504) *
                C79308) *
               C79306 * C79027 * C79072 -
           ((C52141 * C1797 + C52054 * C2217 + C52140 * C170 + C52053 * C450) *
                C79308 +
            (C52141 * C1687 + C52054 * C1911 + C52140 * C99 + C52053 * C249) *
                C166) *
               C79306 * C79027 * C79229) *
              C79263)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
                C166 +
            (C52140 * C167 + C52053 * C447 + C52141 * C1792 + C52054 * C2212) *
                C79308) *
               C79306 * C79027 * C6795 -
           ((C52141 * C4047 + C52054 * C4501 + C52140 * C859 + C52053 * C1279) *
                C79308 +
            (C52141 * C3931 + C52054 * C4165 + C52140 * C749 + C52053 * C973) *
                C166) *
               C79306 * C79027 * C6796 +
           ((C52140 * C750 + C52053 * C974 + C52141 * C6044 + C52054 * C6228) *
                C166 +
            (C52140 * C860 + C52053 * C1280 + C52141 * C6142 + C52054 * C6480) *
                C79308) *
               C79306 * C79027 * C6797 -
           ((C52141 * C8451 + C52054 * C8729 + C52140 * C5626 +
             C52053 * C5822) *
                C79308 +
            (C52141 * C8377 + C52054 * C8521 + C52140 * C5568 +
             C52053 * C5676) *
                C166) *
               C79306 * C79027 * C79269) *
              C79215 +
          (((C52140 * C748 + C52053 * C972 + C52141 * C3932 + C52054 * C4166) *
                C166 +
            (C52140 * C858 + C52053 * C1278 + C52141 * C4048 + C52054 * C4502) *
                C79308) *
               C79306 * C79027 * C6796 -
           ((C52141 * C1791 + C52054 * C2211 + C52140 * C168 + C52053 * C448) *
                C79308 +
            (C52141 * C1681 + C52054 * C1905 + C52140 * C97 + C52053 * C247) *
                C166) *
               C79306 * C79027 * C6795 -
           ((C52141 * C6141 + C52054 * C6479 + C52140 * C861 + C52053 * C1281) *
                C79308 +
            (C52141 * C6043 + C52054 * C6227 + C52140 * C751 + C52053 * C975) *
                C166) *
               C79306 * C79027 * C6797 +
           ((C52140 * C5567 + C52053 * C5675 + C52141 * C8378 +
             C52054 * C8522) *
                C166 +
            (C52140 * C5625 + C52053 * C5821 + C52141 * C8452 +
             C52054 * C8730) *
                C79308) *
               C79306 * C79027 * C79269) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eezx[70] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C26498 * C96 + C79306 * C102) * C52140 +
                      (C26498 * C246 + C79306 * C515) * C52053 +
                      C53460 * C52141 + C53734 * C52054) *
                         C79308 * C79027 * C79229 -
                     (C30345 * C52054 + C30028 * C52141 + C27516 * C52053 +
                      C27246 * C52140) *
                         C79308 * C79027 * C79072) *
                        C2605 +
                    ((C27250 * C52140 + C27518 * C52053 + C30029 * C52141 +
                      C30346 * C52054) *
                         C79308 * C79027 * C79072 -
                     (C53736 * C52054 + C53464 * C52141 +
                      (C26498 * C247 + C79306 * C516) * C52053 +
                      (C26498 * C97 + C79306 * C103) * C52140) *
                         C79308 * C79027 * C79229) *
                        C2606 +
                    (((C26498 * C98 + C79306 * C104) * C52140 +
                      (C26498 * C248 + C79306 * C517) * C52053 +
                      C53468 * C52141 + C53738 * C52054) *
                         C79308 * C79027 * C79229 -
                     (C30347 * C52054 + C30032 * C52141 + C27520 * C52053 +
                      C27254 * C52140) *
                         C79308 * C79027 * C79072) *
                        C2607 +
                    ((C28653 * C52140 + C28858 * C52053 +
                      (C26498 * C3934 + C79306 * C3938) * C52141 +
                      (C26498 * C4168 + C79306 * C4616) * C52054) *
                         C79308 * C79027 * C79072 -
                     ((C26498 * C1911 + C79306 * C2319) * C52054 +
                      (C26498 * C1687 + C79306 * C1695) * C52141 +
                      (C26498 * C249 + C79306 * C518) * C52053 +
                      (C26498 * C99 + C79306 * C105) * C52140) *
                         C79308 * C79027 * C79229) *
                        C79263)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C26498 * C96 + C79306 * C102) * C52140 +
                      (C26498 * C246 + C79306 * C515) * C52053 +
                      C53460 * C52141 + C53734 * C52054) *
                         C79308 * C79027 * C6795 -
                     (C30345 * C52054 + C30028 * C52141 + C27516 * C52053 +
                      C27246 * C52140) *
                         C79308 * C79027 * C6796 +
                     (C27249 * C52140 + C27517 * C52053 + C32045 * C52141 +
                      C32299 * C52054) *
                         C79308 * C79027 * C6797 -
                     (C34492 * C52054 + C34282 * C52141 + C31581 * C52053 +
                      C31432 * C52140) *
                         C79308 * C79027 * C79269) *
                        C79215 +
                    ((C27250 * C52140 + C27518 * C52053 + C30029 * C52141 +
                      C30346 * C52054) *
                         C79308 * C79027 * C6796 -
                     (C53736 * C52054 + C53464 * C52141 +
                      (C26498 * C247 + C79306 * C516) * C52053 +
                      (C26498 * C97 + C79306 * C103) * C52140) *
                         C79308 * C79027 * C6795 -
                     (C33792 * C52054 + C33492 * C52141 + C27519 * C52053 +
                      C27252 * C52140) *
                         C79308 * C79027 * C6797 +
                     (C32748 * C52140 + C32952 * C52053 +
                      (C26498 * C8378 + C79306 * C8380) * C52141 +
                      (C26498 * C8522 + C79306 * C8798) * C52054) *
                         C79308 * C79027 * C79269) *
                        C78992)) /
                      (p * q * std::sqrt(p + q));
    d2eezy[70] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C166 * C96 + C79308 * C167) * C52140 +
            (C166 * C246 + C79308 * C563) * C52053 + C53280 * C52141 +
            C53818 * C52054) *
               C79306 * C79027 * C79229 -
           ((C166 * C4165 + C79308 * C4715) * C52054 +
            (C166 * C3931 + C79308 * C4047) * C52141 +
            (C166 * C973 + C79308 * C1463) * C52053 +
            (C166 * C749 + C79308 * C859) * C52140) *
               C79306 * C79027 * C79072) *
              C2605 +
          ((C892 * C52140 + C1483 * C52053 + C4064 * C52141 + C4726 * C52054) *
               C79306 * C79027 * C79072 -
           (C2416 * C52054 + C1825 * C52141 + C582 * C52053 + C196 * C52140) *
               C79306 * C79027 * C79229) *
              C2606 +
          ((C199 * C52140 + C583 * C52053 + C1828 * C52141 + C2418 * C52054) *
               C79306 * C79027 * C79229 -
           (C4727 * C52054 + C4067 * C52141 + C1485 * C52053 + C895 * C52140) *
               C79306 * C79027 * C79072) *
              C2607 +
          ((C2688 * C52140 + C3112 * C52053 +
            (C166 * C3934 + C79308 * C4050) * C52141 +
            (C166 * C4168 + C79308 * C4718) * C52054) *
               C79306 * C79027 * C79072 -
           (C3758 * C52054 + C3334 * C52141 + C584 * C52053 + C200 * C52140) *
               C79306 * C79027 * C79229) *
              C79263)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C166 * C96 + C79308 * C167) * C52140 +
            (C166 * C246 + C79308 * C563) * C52053 + C53280 * C52141 +
            C53818 * C52054) *
               C79306 * C79027 * C6795 -
           (C55930 * C52054 + C55322 * C52141 +
            (C166 * C973 + C79308 * C1463) * C52053 +
            (C166 * C749 + C79308 * C859) * C52140) *
               C79306 * C79027 * C6796 +
           ((C166 * C750 + C79308 * C860) * C52140 +
            (C166 * C974 + C79308 * C1464) * C52053 + C57246 * C52141 +
            C57732 * C52054) *
               C79306 * C79027 * C6797 -
           ((C166 * C8521 + C79308 * C8865) * C52054 +
            (C166 * C8377 + C79308 * C8451) * C52141 +
            (C166 * C5676 + C79308 * C5914) * C52053 +
            (C166 * C5568 + C79308 * C5626) * C52140) *
               C79306 * C79027 * C79269) *
              C79215 +
          ((C892 * C52140 + C1483 * C52053 + C4064 * C52141 + C4726 * C52054) *
               C79306 * C79027 * C6796 -
           (C2416 * C52054 + C1825 * C52141 + C582 * C52053 + C196 * C52140) *
               C79306 * C79027 * C6795 -
           (C8204 * C52054 + C7588 * C52141 + C1484 * C52053 + C893 * C52140) *
               C79306 * C79027 * C6797 +
           (C6880 * C52140 + C7304 * C52053 +
            (C166 * C8378 + C79308 * C8452) * C52141 +
            (C166 * C8522 + C79308 * C8866) * C52054) *
               C79306 * C79027 * C79269) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eezz[70] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((C52394 * C96 + C52397 + C52397 + C52053 * C632 +
                      C52395 * C1682 + C52398 + C52398 + C52054 * C2498) *
                         C79308 * C79306 * C79027 * C79229 -
                     (C52395 * C3931 + C53073 + C53073 + C52054 * C4827 +
                      C52394 * C749 + C53074 + C53074 + C52053 * C1565) *
                         C79308 * C79306 * C79027 * C79072) *
                        C2605 +
                    ((C52394 * C748 + C53077 + C53077 + C52053 * C1564 +
                      C52395 * C3932 + C53078 + C53078 + C52054 * C4828) *
                         C79308 * C79306 * C79027 * C79072 -
                     (C52395 * C1681 + C52399 + C52399 + C52054 * C2497 +
                      C52394 * C97 + C52400 + C52400 + C52053 * C633) *
                         C79308 * C79306 * C79027 * C79229) *
                        C2606 +
                    ((C52394 * C98 + C52401 + C52401 + C52053 * C634 +
                      C52395 * C1685 + C52402 + C52402 + C52054 * C2501) *
                         C79308 * C79306 * C79027 * C79229 -
                     (C52395 * C3933 + C53081 + C53081 + C52054 * C4829 +
                      C52394 * C752 + C53082 + C53082 + C52053 * C1568) *
                         C79308 * C79306 * C79027 * C79072) *
                        C2607 +
                    ((C52394 * C754 + C54500 + C54500 + C52053 * C1570 +
                      C52395 * C3934 + C54501 + C54501 + C52054 * C4830) *
                         C79308 * C79306 * C79027 * C79072 -
                     (C52395 * C1687 + C52403 + C52403 + C52054 * C2503 +
                      C52394 * C99 + C52404 + C52404 + C52053 * C635) *
                         C79308 * C79306 * C79027 * C79229) *
                        C79263)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((C52394 * C96 + C52397 + C52397 + C52053 * C632 +
                      C52395 * C1682 + C52398 + C52398 + C52054 * C2498) *
                         C79308 * C79306 * C79027 * C6795 -
                     (C52395 * C3931 + C53073 + C53073 + C52054 * C4827 +
                      C52394 * C749 + C53074 + C53074 + C52053 * C1565) *
                         C79308 * C79306 * C79027 * C6796 +
                     (C52394 * C750 + C53075 + C53075 + C52053 * C1566 +
                      C52395 * C6044 + C53076 + C53076 + C52054 * C6720) *
                         C79308 * C79306 * C79027 * C6797 -
                     (C52395 * C8377 + C57080 + C57080 + C52054 * C8933 +
                      C52394 * C5568 + C57081 + C57081 + C52053 * C5960) *
                         C79308 * C79306 * C79027 * C79269) *
                        C79215 +
                    ((C52394 * C748 + C53077 + C53077 + C52053 * C1564 +
                      C52395 * C3932 + C53078 + C53078 + C52054 * C4828) *
                         C79308 * C79306 * C79027 * C6796 -
                     (C52395 * C1681 + C52399 + C52399 + C52054 * C2497 +
                      C52394 * C97 + C52400 + C52400 + C52053 * C633) *
                         C79308 * C79306 * C79027 * C6795 -
                     (C52395 * C6043 + C53079 + C53079 + C52054 * C6719 +
                      C52394 * C751 + C53080 + C53080 + C52053 * C1567) *
                         C79308 * C79306 * C79027 * C6797 +
                     (C52394 * C5567 + C58408 + C58408 + C52053 * C5959 +
                      C52395 * C8378 + C58409 + C58409 + C52054 * C8934) *
                         C79308 * C79306 * C79027 * C79269) *
                        C78992)) /
                      (p * q * std::sqrt(p + q));
    d2eexx[71] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C52053 +
             C53184 * C52054) *
                C79308 * C79230 -
            (C53185 * C52054 + C53184 * C52053) * C79308 * C79114) *
               C79229 +
           ((C29703 * C52053 + C31774 * C52054) * C79308 * C79114 -
            (C29703 * C52054 + C26964 * C52053) * C79308 * C79230) *
               C79072) *
              C745 +
          (((C53186 * C52053 + C53187 * C52054) * C79308 * C79114 -
            (C53186 * C52054 +
             (C26497 * C97 + C26503 + C26503 + C79306 * C109) * C52053) *
                C79308 * C79230) *
               C79229 +
           ((C26966 * C52053 + C29704 * C52054) * C79308 * C79230 -
            (C36469 * C52054 + C29704 * C52053) * C79308 * C79114) *
               C79072) *
              C746 +
          ((((C26497 * C98 + C26504 + C26504 + C79306 * C110) * C52053 +
             C53188 * C52054) *
                C79308 * C79230 -
            (C53189 * C52054 + C53188 * C52053) * C79308 * C79114) *
               C79229 +
           ((C29705 * C52053 +
             (C26497 * C10817 + C27771 + C27771 + C79306 * C10819) * C52054) *
                C79308 * C79114 -
            (C29705 * C52054 + C26968 * C52053) * C79308 * C79230) *
               C79072) *
              C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C52053 +
            C53184 * C52054) *
               C79308 * C79230 -
           (C53185 * C52054 + C53184 * C52053) * C79308 * C79114) *
              C6795 +
          ((C29703 * C52053 + C31774 * C52054) * C79308 * C79114 -
           (C29703 * C52054 + C26964 * C52053) * C79308 * C79230) *
              C6796 +
          ((C26965 * C52053 + C31775 * C52054) * C79308 * C79230 -
           (C31776 * C52054 + C31775 * C52053) * C79308 * C79114) *
              C6797 +
          ((C34064 * C52053 +
            (C26497 * C31755 + C31767 + C31767 + C79306 * C31757) * C52054) *
               C79308 * C79114 -
           (C34064 * C52054 + C31273 * C52053) * C79308 * C79230) *
              C79269) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eexy[71] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C166 * C96 + C79308 * C167) * C26498 +
              (C166 * C102 + C79308 * C173) * C79306) *
                 C52053 +
             (C53284 + C53285) * C52054) *
                C79230 -
            ((C53286 + C53287) * C52054 + (C53285 + C53284) * C52053) *
                C79114) *
               C79229 +
           (((C55324 + C55325) * C52053 +
             ((C166 * C6042 + C79308 * C6140) * C26498 +
              (C166 * C6048 + C79308 * C6146) * C79306) *
                 C52054) *
                C79114 -
            ((C55325 + C55324) * C52054 +
             ((C166 * C757 + C79308 * C867) * C79306 +
              (C166 * C749 + C79308 * C859) * C26498) *
                 C52053) *
                C79230) *
               C79072) *
              C745 +
          ((((C53272 + C53273) * C52053 + (C53274 + C53275) * C52054) * C79114 -
            ((C53273 + C53272) * C52054 +
             (C197 * C79306 + C196 * C26498) * C52053) *
                C79230) *
               C79229 +
           (((C892 * C26498 + C891 * C79306) * C52053 +
             (C55318 + C55319) * C52054) *
                C79230 -
            ((C10927 * C79306 + C10928 * C26498) * C52054 +
             (C55319 + C55318) * C52053) *
                C79114) *
               C79072) *
              C746 +
          ((((C199 * C26498 + C198 * C79306) * C52053 +
             (C53276 + C53277) * C52054) *
                C79230 -
            ((C53278 + C53279) * C52054 + (C53277 + C53276) * C52053) *
                C79114) *
               C79229 +
           (((C55320 + C55321) * C52053 +
             ((C166 * C10817 + C79308 * C10920) * C26498 +
              (C166 * C10818 + C79308 * C10921) * C79306) *
                 C52054) *
                C79114 -
            ((C55321 + C55320) * C52054 +
             (C896 * C79306 + C895 * C26498) * C52053) *
                C79230) *
               C79072) *
              C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C166 * C96 + C79308 * C167) * C26498 +
             (C166 * C102 + C79308 * C173) * C79306) *
                C52053 +
            (C53284 + C53285) * C52054) *
               C79230 -
           ((C53286 + C53287) * C52054 + (C53285 + C53284) * C52053) * C79114) *
              C6795 +
          (((C55324 + C55325) * C52053 + (C57250 + C57251) * C52054) * C79114 -
           ((C55325 + C55324) * C52054 +
            ((C166 * C757 + C79308 * C867) * C79306 +
             (C166 * C749 + C79308 * C859) * C26498) *
                C52053) *
               C79230) *
              C6796 +
          ((((C166 * C750 + C79308 * C860) * C26498 +
             (C166 * C758 + C79308 * C868) * C79306) *
                C52053 +
            (C57252 + C57253) * C52054) *
               C79230 -
           ((C57254 + C57255) * C52054 + (C57253 + C57252) * C52053) * C79114) *
              C6797 +
          (((C59437 + C59438) * C52053 +
            ((C166 * C31755 + C79308 * C31853) * C26498 +
             (C166 * C31756 + C79308 * C31854) * C79306) *
                C52054) *
               C79114 -
           ((C59438 + C59437) * C52054 +
            ((C166 * C5572 + C79308 * C5630) * C79306 +
             (C166 * C5568 + C79308 * C5626) * C26498) *
                C52053) *
               C79230) *
              C79269) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eexz[71] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
                 C26498 +
             (C52140 * C102 + C52053 * C252 + C52141 * C1690 + C52054 * C1914) *
                 C79306) *
                C79308 * C79230 -
            ((C52141 * C1691 + C52054 * C1915 + C52140 * C1690 +
              C52053 * C1914) *
                 C79306 +
             (C52141 * C1683 + C52054 * C1907 + C52140 * C1682 +
              C52053 * C1906) *
                 C26498) *
                C79308 * C79114) *
               C79229 +
           (((C52140 * C3931 + C52053 * C4165 + C52141 * C6042 +
              C52054 * C6226) *
                 C26498 +
             (C52140 * C3935 + C52053 * C4169 + C52141 * C6048 +
              C52054 * C6232) *
                 C79306) *
                C79308 * C79114 -
            ((C52141 * C3935 + C52054 * C4169 + C52140 * C757 + C52053 * C981) *
                 C79306 +
             (C52141 * C3931 + C52054 * C4165 + C52140 * C749 + C52053 * C973) *
                 C26498) *
                C79308 * C79230) *
               C79072) *
              C745 +
          ((((C52140 * C1681 + C52053 * C1905 + C52141 * C1684 +
              C52054 * C1908) *
                 C26498 +
             (C52140 * C1689 + C52053 * C1913 + C52141 * C1692 +
              C52054 * C1916) *
                 C79306) *
                C79308 * C79114 -
            ((C52141 * C1689 + C52054 * C1913 + C52140 * C103 + C52053 * C253) *
                 C79306 +
             (C52141 * C1681 + C52054 * C1905 + C52140 * C97 + C52053 * C247) *
                 C26498) *
                C79308 * C79230) *
               C79229 +
           (((C52140 * C748 + C52053 * C972 + C52141 * C3932 + C52054 * C4166) *
                 C26498 +
             (C52140 * C756 + C52053 * C980 + C52141 * C3936 + C52054 * C4170) *
                 C79306) *
                C79308 * C79230 -
            ((C52141 * C6047 + C52054 * C6231 + C52140 * C3936 +
              C52053 * C4170) *
                 C79306 +
             (C52141 * C6041 + C52054 * C6225 + C52140 * C3932 +
              C52053 * C4166) *
                 C26498) *
                C79308 * C79114) *
               C79072) *
              C746 +
          ((((C52140 * C98 + C52053 * C248 + C52141 * C1685 + C52054 * C1909) *
                 C26498 +
             (C52140 * C104 + C52053 * C254 + C52141 * C1693 + C52054 * C1917) *
                 C79306) *
                C79308 * C79230 -
            ((C52141 * C1694 + C52054 * C1918 + C52140 * C1693 +
              C52053 * C1917) *
                 C79306 +
             (C52141 * C1686 + C52054 * C1910 + C52140 * C1685 +
              C52053 * C1909) *
                 C26498) *
                C79308 * C79114) *
               C79229 +
           (((C52140 * C3933 + C52053 * C4167 + C52141 * C10817 +
              C52054 * C11026) *
                 C26498 +
             (C52140 * C3937 + C52053 * C4171 + C52141 * C10818 +
              C52054 * C11027) *
                 C79306) *
                C79308 * C79114 -
            ((C52141 * C3937 + C52054 * C4171 + C52140 * C760 + C52053 * C984) *
                 C79306 +
             (C52141 * C3933 + C52054 * C4167 + C52140 * C752 + C52053 * C976) *
                 C26498) *
                C79308 * C79230) *
               C79072) *
              C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
                C26498 +
            (C52140 * C102 + C52053 * C252 + C52141 * C1690 + C52054 * C1914) *
                C79306) *
               C79308 * C79230 -
           ((C52141 * C1691 + C52054 * C1915 + C52140 * C1690 +
             C52053 * C1914) *
                C79306 +
            (C52141 * C1683 + C52054 * C1907 + C52140 * C1682 +
             C52053 * C1906) *
                C26498) *
               C79308 * C79114) *
              C6795 +
          (((C52140 * C3931 + C52053 * C4165 + C52141 * C6042 +
             C52054 * C6226) *
                C26498 +
            (C52140 * C3935 + C52053 * C4169 + C52141 * C6048 +
             C52054 * C6232) *
                C79306) *
               C79308 * C79114 -
           ((C52141 * C3935 + C52054 * C4169 + C52140 * C757 + C52053 * C981) *
                C79306 +
            (C52141 * C3931 + C52054 * C4165 + C52140 * C749 + C52053 * C973) *
                C26498) *
               C79308 * C79230) *
              C6796 +
          (((C52140 * C750 + C52053 * C974 + C52141 * C6044 + C52054 * C6228) *
                C26498 +
            (C52140 * C758 + C52053 * C982 + C52141 * C6050 + C52054 * C6234) *
                C79306) *
               C79308 * C79230 -
           ((C52141 * C6051 + C52054 * C6235 + C52140 * C6050 +
             C52053 * C6234) *
                C79306 +
            (C52141 * C6045 + C52054 * C6229 + C52140 * C6044 +
             C52053 * C6228) *
                C26498) *
               C79308 * C79114) *
              C6797 +
          (((C52140 * C8377 + C52053 * C8521 + C52141 * C31755 +
             C52054 * C31929) *
                C26498 +
            (C52140 * C8379 + C52053 * C8523 + C52141 * C31756 +
             C52054 * C31930) *
                C79306) *
               C79308 * C79114 -
           ((C52141 * C8379 + C52054 * C8523 + C52140 * C5572 +
             C52053 * C5680) *
                C79306 +
            (C52141 * C8377 + C52054 * C8521 + C52140 * C5568 +
             C52053 * C5676) *
                C26498) *
               C79308 * C79230) *
              C79269) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eeyx[71] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C26498 * C96 + C79306 * C102) * C166 +
              (C26498 * C167 + C79306 * C324) * C79308) *
                 C52053 +
             (C53472 + C53473) * C52054) *
                C79230 -
            ((C53474 + C53475) * C52054 + (C53473 + C53472) * C52053) *
                C79114) *
               C79229 +
           (((C55522 + C55523) * C52053 +
             (C32043 * C166 + C32044 * C79308) * C52054) *
                C79114 -
            ((C55523 + C55522) * C52054 +
             (C27247 * C79308 + C27246 * C166) * C52053) *
                C79230) *
               C79072) *
              C745 +
          ((((C53476 + C53477) * C52053 + (C53478 + C53479) * C52054) * C79114 -
            ((C53477 + C53476) * C52054 +
             ((C26498 * C168 + C79306 * C325) * C79308 +
              (C26498 * C97 + C79306 * C103) * C166) *
                 C52053) *
                C79230) *
               C79229 +
           (((C27250 * C166 + C27251 * C79308) * C52053 +
             (C55524 + C55525) * C52054) *
                C79230 -
            ((C36771 * C79308 + C36772 * C166) * C52054 +
             (C55525 + C55524) * C52053) *
                C79114) *
               C79072) *
              C746 +
          (((((C26498 * C98 + C79306 * C104) * C166 +
              (C26498 * C169 + C79306 * C326) * C79308) *
                 C52053 +
             (C53480 + C53481) * C52054) *
                C79230 -
            ((C53482 + C53483) * C52054 + (C53481 + C53480) * C52053) *
                C79114) *
               C79229 +
           (((C55526 + C55527) * C52053 +
             ((C26498 * C10817 + C79306 * C10818) * C166 +
              (C26498 * C10920 + C79306 * C11132) * C79308) *
                 C52054) *
                C79114 -
            ((C55527 + C55526) * C52054 +
             (C27255 * C79308 + C27254 * C166) * C52053) *
                C79230) *
               C79072) *
              C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C26498 * C96 + C79306 * C102) * C166 +
             (C26498 * C167 + C79306 * C324) * C79308) *
                C52053 +
            (C53472 + C53473) * C52054) *
               C79230 -
           ((C53474 + C53475) * C52054 + (C53473 + C53472) * C52053) * C79114) *
              C6795 +
          (((C55522 + C55523) * C52053 + (C57404 + C57405) * C52054) * C79114 -
           ((C55523 + C55522) * C52054 +
            (C27247 * C79308 + C27246 * C166) * C52053) *
               C79230) *
              C6796 +
          (((C27249 * C166 + C27248 * C79308) * C52053 +
            (C57406 + C57407) * C52054) *
               C79230 -
           ((C57408 + C57409) * C52054 + (C57407 + C57406) * C52053) * C79114) *
              C6797 +
          (((C59571 + C59572) * C52053 +
            ((C26498 * C31755 + C79306 * C31756) * C166 +
             (C26498 * C31853 + C79306 * C32029) * C79308) *
                C52054) *
               C79114 -
           ((C59572 + C59571) * C52054 +
            (C31433 * C79308 + C31432 * C166) * C52053) *
               C79230) *
              C79269) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eeyy[71] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C372 * C96 + C380 + C380 + C79308 * C373) * C79306 * C52053 +
             C53572 * C52054) *
                C79230 -
            (C53573 * C52054 + C53572 * C52053) * C79114) *
               C79229 +
           ((C55633 * C52053 + (C372 * C6042 + C6399 + C6399 + C79308 * C6392) *
                                   C79306 * C52054) *
                C79114 -
            (C55633 * C52054 +
             (C372 * C749 + C1180 + C1180 + C79308 * C1169) * C79306 * C52053) *
                C79230) *
               C79072) *
              C745 +
          (((C53562 * C52053 + C53563 * C52054) * C79114 -
            (C53562 * C52054 + C402 * C79306 * C52053) * C79230) *
               C79229 +
           ((C1201 * C79306 * C52053 + C55628 * C52054) * C79230 -
            (C11238 * C79306 * C52054 + C55628 * C52053) * C79114) *
               C79072) *
              C746 +
          (((C403 * C79306 * C52053 + C53564 * C52054) * C79230 -
            (C53565 * C52054 + C53564 * C52053) * C79114) *
               C79229 +
           ((C55629 * C52053 +
             (C372 * C10817 + C11235 + C11235 + C79308 * C11231) * C79306 *
                 C52054) *
                C79114 -
            (C55629 * C52054 + C1203 * C79306 * C52053) * C79230) *
               C79072) *
              C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C372 * C96 + C380 + C380 + C79308 * C373) * C79306 * C52053 +
            C53572 * C52054) *
               C79230 -
           (C53573 * C52054 + C53572 * C52053) * C79114) *
              C6795 +
          ((C55633 * C52053 + C57500 * C52054) * C79114 -
           (C55633 * C52054 +
            (C372 * C749 + C1180 + C1180 + C79308 * C1169) * C79306 * C52053) *
               C79230) *
              C6796 +
          (((C372 * C750 + C1181 + C1181 + C79308 * C1170) * C79306 * C52053 +
            C57501 * C52054) *
               C79230 -
           (C57502 * C52054 + C57501 * C52053) * C79114) *
              C6797 +
          ((C59645 * C52053 +
            (C372 * C31755 + C59641 + C59641 + C79308 * C32122) * C79306 *
                C52054) *
               C79114 -
           (C59645 * C52054 +
            (C372 * C5568 + C5777 + C5777 + C79308 * C5772) * C79306 * C52053) *
               C79230) *
              C79269) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eeyz[71] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
                 C166 +
             (C52140 * C167 + C52053 * C447 + C52141 * C1792 + C52054 * C2212) *
                 C79308) *
                C79306 * C79230 -
            ((C52141 * C1793 + C52054 * C2213 + C52140 * C1792 +
              C52053 * C2212) *
                 C79308 +
             (C52141 * C1683 + C52054 * C1907 + C52140 * C1682 +
              C52053 * C1906) *
                 C166) *
                C79306 * C79114) *
               C79229 +
           (((C52140 * C3931 + C52053 * C4165 + C52141 * C6042 +
              C52054 * C6226) *
                 C166 +
             (C52140 * C4047 + C52053 * C4501 + C52141 * C6140 +
              C52054 * C6478) *
                 C79308) *
                C79306 * C79114 -
            ((C52141 * C4047 + C52054 * C4501 + C52140 * C859 +
              C52053 * C1279) *
                 C79308 +
             (C52141 * C3931 + C52054 * C4165 + C52140 * C749 + C52053 * C973) *
                 C166) *
                C79306 * C79230) *
               C79072) *
              C745 +
          ((((C52140 * C1681 + C52053 * C1905 + C52141 * C1684 +
              C52054 * C1908) *
                 C166 +
             (C52140 * C1791 + C52053 * C2211 + C52141 * C1794 +
              C52054 * C2214) *
                 C79308) *
                C79306 * C79114 -
            ((C52141 * C1791 + C52054 * C2211 + C52140 * C168 + C52053 * C448) *
                 C79308 +
             (C52141 * C1681 + C52054 * C1905 + C52140 * C97 + C52053 * C247) *
                 C166) *
                C79306 * C79230) *
               C79229 +
           (((C52140 * C748 + C52053 * C972 + C52141 * C3932 + C52054 * C4166) *
                 C166 +
             (C52140 * C858 + C52053 * C1278 + C52141 * C4048 +
              C52054 * C4502) *
                 C79308) *
                C79306 * C79230 -
            ((C52141 * C6139 + C52054 * C6477 + C52140 * C4048 +
              C52053 * C4502) *
                 C79308 +
             (C52141 * C6041 + C52054 * C6225 + C52140 * C3932 +
              C52053 * C4166) *
                 C166) *
                C79306 * C79114) *
               C79072) *
              C746 +
          ((((C52140 * C98 + C52053 * C248 + C52141 * C1685 + C52054 * C1909) *
                 C166 +
             (C52140 * C169 + C52053 * C449 + C52141 * C1795 + C52054 * C2215) *
                 C79308) *
                C79306 * C79230 -
            ((C52141 * C1796 + C52054 * C2216 + C52140 * C1795 +
              C52053 * C2215) *
                 C79308 +
             (C52141 * C1686 + C52054 * C1910 + C52140 * C1685 +
              C52053 * C1909) *
                 C166) *
                C79306 * C79114) *
               C79229 +
           (((C52140 * C3933 + C52053 * C4167 + C52141 * C10817 +
              C52054 * C11026) *
                 C166 +
             (C52140 * C4049 + C52053 * C4503 + C52141 * C10920 +
              C52054 * C11336) *
                 C79308) *
                C79306 * C79114 -
            ((C52141 * C4049 + C52054 * C4503 + C52140 * C862 +
              C52053 * C1282) *
                 C79308 +
             (C52141 * C3933 + C52054 * C4167 + C52140 * C752 + C52053 * C976) *
                 C166) *
                C79306 * C79230) *
               C79072) *
              C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
                C166 +
            (C52140 * C167 + C52053 * C447 + C52141 * C1792 + C52054 * C2212) *
                C79308) *
               C79306 * C79230 -
           ((C52141 * C1793 + C52054 * C2213 + C52140 * C1792 +
             C52053 * C2212) *
                C79308 +
            (C52141 * C1683 + C52054 * C1907 + C52140 * C1682 +
             C52053 * C1906) *
                C166) *
               C79306 * C79114) *
              C6795 +
          (((C52140 * C3931 + C52053 * C4165 + C52141 * C6042 +
             C52054 * C6226) *
                C166 +
            (C52140 * C4047 + C52053 * C4501 + C52141 * C6140 +
             C52054 * C6478) *
                C79308) *
               C79306 * C79114 -
           ((C52141 * C4047 + C52054 * C4501 + C52140 * C859 + C52053 * C1279) *
                C79308 +
            (C52141 * C3931 + C52054 * C4165 + C52140 * C749 + C52053 * C973) *
                C166) *
               C79306 * C79230) *
              C6796 +
          (((C52140 * C750 + C52053 * C974 + C52141 * C6044 + C52054 * C6228) *
                C166 +
            (C52140 * C860 + C52053 * C1280 + C52141 * C6142 + C52054 * C6480) *
                C79308) *
               C79306 * C79230 -
           ((C52141 * C6143 + C52054 * C6481 + C52140 * C6142 +
             C52053 * C6480) *
                C79308 +
            (C52141 * C6045 + C52054 * C6229 + C52140 * C6044 +
             C52053 * C6228) *
                C166) *
               C79306 * C79114) *
              C6797 +
          (((C52140 * C8377 + C52053 * C8521 + C52141 * C31755 +
             C52054 * C31929) *
                C166 +
            (C52140 * C8451 + C52053 * C8729 + C52141 * C31853 +
             C52054 * C32203) *
                C79308) *
               C79306 * C79114 -
           ((C52141 * C8451 + C52054 * C8729 + C52140 * C5626 +
             C52053 * C5822) *
                C79308 +
            (C52141 * C8377 + C52054 * C8521 + C52140 * C5568 +
             C52053 * C5676) *
                C166) *
               C79306 * C79230) *
              C79269) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eezx[71] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((((C26498 * C96 + C79306 * C102) * C52140 +
                       (C26498 * C246 + C79306 * C515) * C52053 +
                       C53460 * C52141 + C53734 * C52054) *
                          C79308 * C79230 -
                      (C53735 * C52054 + C53463 * C52141 + C53734 * C52053 +
                       C53460 * C52140) *
                          C79308 * C79114) *
                         C79229 +
                     ((C30028 * C52140 + C30345 * C52053 + C32043 * C52141 +
                       C32298 * C52054) *
                          C79308 * C79114 -
                      (C30345 * C52054 + C30028 * C52141 + C27516 * C52053 +
                       C27246 * C52140) *
                          C79308 * C79230) *
                         C79072) *
                        C745 +
                    (((C53464 * C52140 + C53736 * C52053 + C53466 * C52141 +
                       C53737 * C52054) *
                          C79308 * C79114 -
                      (C53736 * C52054 + C53464 * C52141 +
                       (C26498 * C247 + C79306 * C516) * C52053 +
                       (C26498 * C97 + C79306 * C103) * C52140) *
                          C79308 * C79230) *
                         C79229 +
                     ((C27250 * C52140 + C27518 * C52053 + C30029 * C52141 +
                       C30346 * C52054) *
                          C79308 * C79230 -
                      (C37072 * C52054 + C36772 * C52141 + C30346 * C52053 +
                       C30029 * C52140) *
                          C79308 * C79114) *
                         C79072) *
                        C746 +
                    ((((C26498 * C98 + C79306 * C104) * C52140 +
                       (C26498 * C248 + C79306 * C517) * C52053 +
                       C53468 * C52141 + C53738 * C52054) *
                          C79308 * C79230 -
                      (C53739 * C52054 + C53471 * C52141 + C53738 * C52053 +
                       C53468 * C52140) *
                          C79308 * C79114) *
                         C79229 +
                     ((C30032 * C52140 + C30347 * C52053 +
                       (C26498 * C10817 + C79306 * C10818) * C52141 +
                       (C26498 * C11026 + C79306 * C11440) * C52054) *
                          C79308 * C79114 -
                      (C30347 * C52054 + C30032 * C52141 + C27520 * C52053 +
                       C27254 * C52140) *
                          C79308 * C79230) *
                         C79072) *
                        C79253)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C26498 * C96 + C79306 * C102) * C52140 +
                      (C26498 * C246 + C79306 * C515) * C52053 +
                      C53460 * C52141 + C53734 * C52054) *
                         C79308 * C79230 -
                     (C53735 * C52054 + C53463 * C52141 + C53734 * C52053 +
                      C53460 * C52140) *
                         C79308 * C79114) *
                        C6795 +
                    ((C30028 * C52140 + C30345 * C52053 + C32043 * C52141 +
                      C32298 * C52054) *
                         C79308 * C79114 -
                     (C30345 * C52054 + C30028 * C52141 + C27516 * C52053 +
                      C27246 * C52140) *
                         C79308 * C79230) *
                        C6796 +
                    ((C27249 * C52140 + C27517 * C52053 + C32045 * C52141 +
                      C32299 * C52054) *
                         C79308 * C79230 -
                     (C32300 * C52054 + C32048 * C52141 + C32299 * C52053 +
                      C32045 * C52140) *
                         C79308 * C79114) *
                        C6797 +
                    ((C34282 * C52140 + C34492 * C52053 +
                      (C26498 * C31755 + C79306 * C31756) * C52141 +
                      (C26498 * C31929 + C79306 * C32287) * C52054) *
                         C79308 * C79114 -
                     (C34492 * C52054 + C34282 * C52141 + C31581 * C52053 +
                      C31432 * C52140) *
                         C79308 * C79230) *
                        C79269) *
                   C78981) /
                      (p * q * std::sqrt(p + q));
    d2eezy[71] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C166 * C96 + C79308 * C167) * C52140 +
             (C166 * C246 + C79308 * C563) * C52053 + C53280 * C52141 +
             C53818 * C52054) *
                C79306 * C79230 -
            (C53819 * C52054 + C53283 * C52141 + C53818 * C52053 +
             C53280 * C52140) *
                C79306 * C79114) *
               C79229 +
           ((C55322 * C52140 + C55930 * C52053 +
             (C166 * C6042 + C79308 * C6140) * C52141 +
             (C166 * C6226 + C79308 * C6638) * C52054) *
                C79306 * C79114 -
            (C55930 * C52054 + C55322 * C52141 +
             (C166 * C973 + C79308 * C1463) * C52053 +
             (C166 * C749 + C79308 * C859) * C52140) *
                C79306 * C79230) *
               C79072) *
              C745 +
          (((C1825 * C52140 + C2416 * C52053 + C1826 * C52141 +
             C2417 * C52054) *
                C79306 * C79114 -
            (C2416 * C52054 + C1825 * C52141 + C582 * C52053 + C196 * C52140) *
                C79306 * C79230) *
               C79229 +
           ((C892 * C52140 + C1483 * C52053 + C4064 * C52141 + C4726 * C52054) *
                C79306 * C79230 -
            (C11544 * C52054 + C10928 * C52141 + C4726 * C52053 +
             C4064 * C52140) *
                C79306 * C79114) *
               C79072) *
              C746 +
          (((C199 * C52140 + C583 * C52053 + C1828 * C52141 + C2418 * C52054) *
                C79306 * C79230 -
            (C2419 * C52054 + C1831 * C52141 + C2418 * C52053 +
             C1828 * C52140) *
                C79306 * C79114) *
               C79229 +
           ((C4067 * C52140 + C4727 * C52053 +
             (C166 * C10817 + C79308 * C10920) * C52141 +
             (C166 * C11026 + C79308 * C11539) * C52054) *
                C79306 * C79114 -
            (C4727 * C52054 + C4067 * C52141 + C1485 * C52053 + C895 * C52140) *
                C79306 * C79230) *
               C79072) *
              C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C166 * C96 + C79308 * C167) * C52140 +
            (C166 * C246 + C79308 * C563) * C52053 + C53280 * C52141 +
            C53818 * C52054) *
               C79306 * C79230 -
           (C53819 * C52054 + C53283 * C52141 + C53818 * C52053 +
            C53280 * C52140) *
               C79306 * C79114) *
              C6795 +
          ((C55322 * C52140 + C55930 * C52053 + C57244 * C52141 +
            C57731 * C52054) *
               C79306 * C79114 -
           (C55930 * C52054 + C55322 * C52141 +
            (C166 * C973 + C79308 * C1463) * C52053 +
            (C166 * C749 + C79308 * C859) * C52140) *
               C79306 * C79230) *
              C6796 +
          (((C166 * C750 + C79308 * C860) * C52140 +
            (C166 * C974 + C79308 * C1464) * C52053 + C57246 * C52141 +
            C57732 * C52054) *
               C79306 * C79230 -
           (C57733 * C52054 + C57249 * C52141 + C57732 * C52053 +
            C57246 * C52140) *
               C79306 * C79114) *
              C6797 +
          ((C59435 * C52140 + C59846 * C52053 +
            (C166 * C31755 + C79308 * C31853) * C52141 +
            (C166 * C31929 + C79308 * C32377) * C52054) *
               C79306 * C79114 -
           (C59846 * C52054 + C59435 * C52141 +
            (C166 * C5676 + C79308 * C5914) * C52053 +
            (C166 * C5568 + C79308 * C5626) * C52140) *
               C79306 * C79230) *
              C79269) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eezz[71] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C52394 * C96 + C52397 + C52397 + C52053 * C632 +
                       C52395 * C1682 + C52398 + C52398 + C52054 * C2498) *
                          C79308 * C79306 * C79230 -
                      (C52395 * C1683 + C53894 + C53894 + C52054 * C2499 +
                       C52394 * C1682 + C53895 + C53895 + C52053 * C2498) *
                          C79308 * C79306 * C79114) *
                         C79229 +
                     ((C52394 * C3931 + C56029 + C56029 + C52053 * C4827 +
                       C52395 * C6042 + C56030 + C56030 + C52054 * C6718) *
                          C79308 * C79306 * C79114 -
                      (C52395 * C3931 + C53073 + C53073 + C52054 * C4827 +
                       C52394 * C749 + C53074 + C53074 + C52053 * C1565) *
                          C79308 * C79306 * C79230) *
                         C79072) *
                        C745 +
                    (((C52394 * C1681 + C53898 + C53898 + C52053 * C2497 +
                       C52395 * C1684 + C53899 + C53899 + C52054 * C2500) *
                          C79308 * C79306 * C79114 -
                      (C52395 * C1681 + C52399 + C52399 + C52054 * C2497 +
                       C52394 * C97 + C52400 + C52400 + C52053 * C633) *
                          C79308 * C79306 * C79230) *
                         C79229 +
                     ((C52394 * C748 + C53077 + C53077 + C52053 * C1564 +
                       C52395 * C3932 + C53078 + C53078 + C52054 * C4828) *
                          C79308 * C79306 * C79230 -
                      (C52395 * C6041 + C56031 + C56031 + C52054 * C6717 +
                       C52394 * C3932 + C56032 + C56032 + C52053 * C4828) *
                          C79308 * C79306 * C79114) *
                         C79072) *
                        C746 +
                    (((C52394 * C98 + C52401 + C52401 + C52053 * C634 +
                       C52395 * C1685 + C52402 + C52402 + C52054 * C2501) *
                          C79308 * C79306 * C79230 -
                      (C52395 * C1686 + C53902 + C53902 + C52054 * C2502 +
                       C52394 * C1685 + C53903 + C53903 + C52053 * C2501) *
                          C79308 * C79306 * C79114) *
                         C79229 +
                     ((C52394 * C3933 + C56033 + C56033 + C52053 * C4829 +
                       C52395 * C10817 + C56034 + C56034 + C52054 * C11643) *
                          C79308 * C79306 * C79114 -
                      (C52395 * C3933 + C53081 + C53081 + C52054 * C4829 +
                       C52394 * C752 + C53082 + C53082 + C52053 * C1568) *
                          C79308 * C79306 * C79230) *
                         C79072) *
                        C79253)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((C52394 * C96 + C52397 + C52397 + C52053 * C632 +
                      C52395 * C1682 + C52398 + C52398 + C52054 * C2498) *
                         C79308 * C79306 * C79230 -
                     (C52395 * C1683 + C53894 + C53894 + C52054 * C2499 +
                      C52394 * C1682 + C53895 + C53895 + C52053 * C2498) *
                         C79308 * C79306 * C79114) *
                        C6795 +
                    ((C52394 * C3931 + C56029 + C56029 + C52053 * C4827 +
                      C52395 * C6042 + C56030 + C56030 + C52054 * C6718) *
                         C79308 * C79306 * C79114 -
                     (C52395 * C3931 + C53073 + C53073 + C52054 * C4827 +
                      C52394 * C749 + C53074 + C53074 + C52053 * C1565) *
                         C79308 * C79306 * C79230) *
                        C6796 +
                    ((C52394 * C750 + C53075 + C53075 + C52053 * C1566 +
                      C52395 * C6044 + C53076 + C53076 + C52054 * C6720) *
                         C79308 * C79306 * C79230 -
                     (C52395 * C6045 + C57810 + C57810 + C52054 * C6721 +
                      C52394 * C6044 + C57811 + C57811 + C52053 * C6720) *
                         C79308 * C79306 * C79114) *
                        C6797 +
                    ((C52394 * C8377 + C59913 + C59913 + C52053 * C8933 +
                      C52395 * C31755 + C59914 + C59914 + C52054 * C32452) *
                         C79308 * C79306 * C79114 -
                     (C52395 * C8377 + C57080 + C57080 + C52054 * C8933 +
                      C52394 * C5568 + C57081 + C57081 + C52053 * C5960) *
                         C79308 * C79306 * C79230) *
                        C79269) *
                   C78981) /
                      (p * q * std::sqrt(p + q));
    d2eexx[72] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C52053 +
            (C26497 * C1682 + C27761 + C27761 + C79306 * C1698) * C52054) *
               C79308 * C79027 * C79300 -
           (C29703 * C52054 + C26964 * C52053) * C79308 * C79027 * C79285 +
           (C26965 * C52053 + C31775 * C52054) * C79308 * C79027 * C79259) *
              C745 +
          ((C26966 * C52053 + C29704 * C52054) * C79308 * C79027 * C79285 -
           ((C26497 * C1681 + C27764 + C27764 + C79306 * C1697) * C52054 +
            (C26497 * C97 + C26503 + C26503 + C79306 * C109) * C52053) *
               C79308 * C79027 * C79300 -
           (C33189 * C52054 + C26967 * C52053) * C79308 * C79027 * C79259) *
              C746 +
          (((C26497 * C98 + C26504 + C26504 + C79306 * C110) * C52053 +
            (C26497 * C1685 + C27769 + C27769 + C79306 * C1701) * C52054) *
               C79308 * C79027 * C79300 -
           (C29705 * C52054 + C26968 * C52053) * C79308 * C79027 * C79285 +
           (C26969 * C52053 +
            (C26497 * C7477 + C29696 + C29696 + C79306 * C7479) * C52054) *
               C79308 * C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C52053 +
           (C26497 * C1682 + C27761 + C27761 + C79306 * C1698) * C52054) *
              C79308 * C79027 * C79009 * C87 -
          ((C26497 * C1681 + C27764 + C27764 + C79306 * C1697) * C52054 +
           (C26497 * C97 + C26503 + C26503 + C79306 * C109) * C52053) *
              C79308 * C79027 * C79009 * C88 +
          ((C26497 * C98 + C26504 + C26504 + C79306 * C110) * C52053 +
           (C26497 * C1685 + C27769 + C27769 + C79306 * C1701) * C52054) *
              C79308 * C79027 * C79009 * C89 -
          ((C26497 * C1687 + C29058 + C29058 + C79306 * C1703) * C52054 +
           (C26497 * C99 + C26507 + C26507 + C79306 * C111) * C52053) *
              C79308 * C79027 * C79009 * C90 +
          ((C26497 * C100 + C26508 + C26508 + C79306 * C112) * C52053 +
           (C26497 * C3255 + C52056 + C52056 + C79306 * C3257) * C52054) *
              C79308 * C79027 * C79009 * C91)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C52053 +
            C53184 * C52054) *
               C79308 * C79301 -
           (C53185 * C52054 + C53184 * C52053) * C79308 * C79287 +
           (C53185 * C52053 +
            (C26497 * C10320 + C36012 + C36012 + C79306 * C10328) * C52054) *
               C79308 * C79262) *
              C79009 * C745 +
          ((C53186 * C52053 + C53187 * C52054) * C79308 * C79287 -
           (C53186 * C52054 +
            (C26497 * C97 + C26503 + C26503 + C79306 * C109) * C52053) *
               C79308 * C79301 -
           ((C26497 * C10319 + C37336 + C37336 + C79306 * C10327) * C52054 +
            C53187 * C52053) *
               C79308 * C79262) *
              C79009 * C746 +
          (((C26497 * C98 + C26504 + C26504 + C79306 * C110) * C52053 +
            C53188 * C52054) *
               C79308 * C79301 -
           (C53189 * C52054 + C53188 * C52053) * C79308 * C79287 +
           (C53189 * C52053 +
            (C26497 * C11721 + C53171 + C53171 + C79306 * C11723) * C52054) *
               C79308 * C79262) *
              C79009 * C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C52053 +
            C53184 * C52054) *
               C79308 * C79027 * C4921 -
           (C29703 * C52054 + C26964 * C52053) * C79308 * C79027 * C4922 +
           (C26965 * C52053 + C31775 * C52054) * C79308 * C79027 * C79259) *
              C79297 +
          ((C26966 * C52053 + C29704 * C52054) * C79308 * C79027 * C4922 -
           (C53186 * C52054 +
            (C26497 * C97 + C26503 + C26503 + C79306 * C109) * C52053) *
               C79308 * C79027 * C4921 -
           (C33189 * C52054 + C26967 * C52053) * C79308 * C79027 * C79259) *
              C79281 +
          (((C26497 * C98 + C26504 + C26504 + C79306 * C110) * C52053 +
            C53188 * C52054) *
               C79308 * C79027 * C4921 -
           (C29705 * C52054 + C26968 * C52053) * C79308 * C79027 * C4922 +
           (C26969 * C52053 +
            (C26497 * C7477 + C29696 + C29696 + C79306 * C7479) * C52054) *
               C79308 * C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C52053 +
           C53184 * C52054) *
              C79308 * C79027 * C5561 -
          (C29703 * C52054 + C26964 * C52053) * C79308 * C79027 * C5562 +
          (C26965 * C52053 + C31775 * C52054) * C79308 * C79027 * C5563 -
          (C34064 * C52054 + C31273 * C52053) * C79308 * C79027 * C5564 +
          (C31274 * C52053 +
           (C26497 * C34055 + C34061 + C34061 + C79306 * C34057) * C52054) *
              C79308 * C79027 * C5565) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C52053 +
            C53184 * C52054) *
               C79308 * C79301 -
           (C53185 * C52054 + C53184 * C52053) * C79308 * C79287 +
           (C53185 * C52053 +
            (C26497 * C10320 + C36012 + C36012 + C79306 * C10328) * C52054) *
               C79308 * C79262) *
              C4921 +
          ((C29703 * C52053 + C31774 * C52054) * C79308 * C79287 -
           (C29703 * C52054 + C26964 * C52053) * C79308 * C79301 -
           (C37942 * C52054 + C31774 * C52053) * C79308 * C79262) *
              C4922 +
          ((C26965 * C52053 + C31775 * C52054) * C79308 * C79301 -
           (C31776 * C52054 + C31775 * C52053) * C79308 * C79287 +
           (C31776 * C52053 +
            (C26497 * C37933 + C37939 + C37939 + C79306 * C37935) * C52054) *
               C79308 * C79262) *
              C79259) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eexy[72] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C166 * C96 + C79308 * C167) * C26498 +
             (C166 * C102 + C79308 * C173) * C79306) *
                C52053 +
            ((C166 * C1682 + C79308 * C1792) * C26498 +
             (C166 * C1690 + C79308 * C1800) * C79306) *
                C52054) *
               C79027 * C79300 -
           (((C166 * C3935 + C79308 * C4051) * C79306 +
             (C166 * C3931 + C79308 * C4047) * C26498) *
                C52054 +
            ((C166 * C757 + C79308 * C867) * C79306 +
             (C166 * C749 + C79308 * C859) * C26498) *
                C52053) *
               C79027 * C79285 +
           (((C166 * C750 + C79308 * C860) * C26498 +
             (C166 * C758 + C79308 * C868) * C79306) *
                C52053 +
            ((C166 * C6044 + C79308 * C6142) * C26498 +
             (C166 * C6050 + C79308 * C6148) * C79306) *
                C52054) *
               C79027 * C79259) *
              C745 +
          (((C892 * C26498 + C891 * C79306) * C52053 +
            (C4064 * C26498 + C4065 * C79306) * C52054) *
               C79027 * C79285 -
           ((C1824 * C79306 + C1825 * C26498) * C52054 +
            (C197 * C79306 + C196 * C26498) * C52053) *
               C79027 * C79300 -
           ((C7587 * C79306 + C7588 * C26498) * C52054 +
            (C894 * C79306 + C893 * C26498) * C52053) *
               C79027 * C79259) *
              C746 +
          (((C199 * C26498 + C198 * C79306) * C52053 +
            (C1828 * C26498 + C1829 * C79306) * C52054) *
               C79027 * C79300 -
           ((C4066 * C79306 + C4067 * C26498) * C52054 +
            (C896 * C79306 + C895 * C26498) * C52053) *
               C79027 * C79285 +
           ((C898 * C26498 + C897 * C79306) * C52053 +
            ((C166 * C7477 + C79308 * C7580) * C26498 +
             (C166 * C7478 + C79308 * C7581) * C79306) *
                C52054) *
               C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C166 * C96 + C79308 * C167) * C26498 +
            (C166 * C102 + C79308 * C173) * C79306) *
               C52053 +
           ((C166 * C1682 + C79308 * C1792) * C26498 +
            (C166 * C1690 + C79308 * C1800) * C79306) *
               C52054) *
              C79027 * C79009 * C87 -
          ((C1824 * C79306 + C1825 * C26498) * C52054 +
           (C197 * C79306 + C196 * C26498) * C52053) *
              C79027 * C79009 * C88 +
          ((C199 * C26498 + C198 * C79306) * C52053 +
           (C1828 * C26498 + C1829 * C79306) * C52054) *
              C79027 * C79009 * C89 -
          ((C3333 * C79306 + C3334 * C26498) * C52054 +
           (C201 * C79306 + C200 * C26498) * C52053) *
              C79027 * C79009 * C90 +
          ((C203 * C26498 + C202 * C79306) * C52053 +
           ((C166 * C3255 + C79308 * C3326) * C26498 +
            (C166 * C3256 + C79308 * C3327) * C79306) *
               C52054) *
              C79027 * C79009 * C91)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C166 * C96 + C79308 * C167) * C26498 +
             (C166 * C102 + C79308 * C173) * C79306) *
                C52053 +
            (C53284 + C53285) * C52054) *
               C79301 -
           ((C53286 + C53287) * C52054 + (C53285 + C53284) * C52053) * C79287 +
           ((C53287 + C53286) * C52053 +
            ((C166 * C10320 + C79308 * C10378) * C26498 +
             (C166 * C10324 + C79308 * C10382) * C79306) *
                C52054) *
               C79262) *
              C79009 * C745 +
          (((C53272 + C53273) * C52053 + (C53274 + C53275) * C52054) * C79287 -
           ((C53273 + C53272) * C52054 +
            (C197 * C79306 + C196 * C26498) * C52053) *
               C79301 -
           ((C11799 * C79306 + C11800 * C26498) * C52054 +
            (C53275 + C53274) * C52053) *
               C79262) *
              C79009 * C746 +
          (((C199 * C26498 + C198 * C79306) * C52053 +
            (C53276 + C53277) * C52054) *
               C79301 -
           ((C53278 + C53279) * C52054 + (C53277 + C53276) * C52053) * C79287 +
           ((C53279 + C53278) * C52053 +
            ((C166 * C11721 + C79308 * C11792) * C26498 +
             (C166 * C11722 + C79308 * C11793) * C79306) *
                C52054) *
               C79262) *
              C79009 * C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C166 * C96 + C79308 * C167) * C26498 +
             (C166 * C102 + C79308 * C173) * C79306) *
                C52053 +
            (C53284 + C53285) * C52054) *
               C79027 * C4921 -
           ((C55325 + C55324) * C52054 +
            ((C166 * C757 + C79308 * C867) * C79306 +
             (C166 * C749 + C79308 * C859) * C26498) *
                C52053) *
               C79027 * C4922 +
           (((C166 * C750 + C79308 * C860) * C26498 +
             (C166 * C758 + C79308 * C868) * C79306) *
                C52053 +
            ((C166 * C6044 + C79308 * C6142) * C26498 +
             (C166 * C6050 + C79308 * C6148) * C79306) *
                C52054) *
               C79027 * C79259) *
              C79297 +
          (((C892 * C26498 + C891 * C79306) * C52053 +
            (C55318 + C55319) * C52054) *
               C79027 * C4922 -
           ((C53273 + C53272) * C52054 +
            (C197 * C79306 + C196 * C26498) * C52053) *
               C79027 * C4921 -
           ((C7587 * C79306 + C7588 * C26498) * C52054 +
            (C894 * C79306 + C893 * C26498) * C52053) *
               C79027 * C79259) *
              C79281 +
          (((C199 * C26498 + C198 * C79306) * C52053 +
            (C53276 + C53277) * C52054) *
               C79027 * C4921 -
           ((C55321 + C55320) * C52054 +
            (C896 * C79306 + C895 * C26498) * C52053) *
               C79027 * C4922 +
           ((C898 * C26498 + C897 * C79306) * C52053 +
            ((C166 * C7477 + C79308 * C7580) * C26498 +
             (C166 * C7478 + C79308 * C7581) * C79306) *
                C52054) *
               C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C166 * C96 + C79308 * C167) * C26498 +
            (C166 * C102 + C79308 * C173) * C79306) *
               C52053 +
           (C53284 + C53285) * C52054) *
              C79027 * C5561 -
          ((C55325 + C55324) * C52054 +
           ((C166 * C757 + C79308 * C867) * C79306 +
            (C166 * C749 + C79308 * C859) * C26498) *
               C52053) *
              C79027 * C5562 +
          (((C166 * C750 + C79308 * C860) * C26498 +
            (C166 * C758 + C79308 * C868) * C79306) *
               C52053 +
           ((C166 * C6044 + C79308 * C6142) * C26498 +
            (C166 * C6050 + C79308 * C6148) * C79306) *
               C52054) *
              C79027 * C5563 -
          (((C166 * C8379 + C79308 * C8453) * C79306 +
            (C166 * C8377 + C79308 * C8451) * C26498) *
               C52054 +
           ((C166 * C5572 + C79308 * C5630) * C79306 +
            (C166 * C5568 + C79308 * C5626) * C26498) *
               C52053) *
              C79027 * C5564 +
          (((C166 * C5569 + C79308 * C5627) * C26498 +
            (C166 * C5573 + C79308 * C5631) * C79306) *
               C52053 +
           ((C166 * C34055 + C79308 * C34131) * C26498 +
            (C166 * C34056 + C79308 * C34132) * C79306) *
               C52054) *
              C79027 * C5565) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C166 * C96 + C79308 * C167) * C26498 +
             (C166 * C102 + C79308 * C173) * C79306) *
                C52053 +
            (C53284 + C53285) * C52054) *
               C79301 -
           ((C53286 + C53287) * C52054 + (C53285 + C53284) * C52053) * C79287 +
           ((C53287 + C53286) * C52053 +
            ((C166 * C10320 + C79308 * C10378) * C26498 +
             (C166 * C10324 + C79308 * C10382) * C79306) *
                C52054) *
               C79262) *
              C4921 +
          (((C55324 + C55325) * C52053 + (C57250 + C57251) * C52054) * C79287 -
           ((C55325 + C55324) * C52054 +
            ((C166 * C757 + C79308 * C867) * C79306 +
             (C166 * C749 + C79308 * C859) * C26498) *
                C52053) *
               C79301 -
           (((C166 * C12367 + C79308 * C12441) * C79306 +
             (C166 * C12365 + C79308 * C12439) * C26498) *
                C52054 +
            (C57251 + C57250) * C52053) *
               C79262) *
              C4922 +
          ((((C166 * C750 + C79308 * C860) * C26498 +
             (C166 * C758 + C79308 * C868) * C79306) *
                C52053 +
            (C57252 + C57253) * C52054) *
               C79301 -
           ((C57254 + C57255) * C52054 + (C57253 + C57252) * C52053) * C79287 +
           ((C57255 + C57254) * C52053 +
            ((C166 * C37933 + C79308 * C38009) * C26498 +
             (C166 * C37934 + C79308 * C38010) * C79306) *
                C52054) *
               C79262) *
              C79259) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eexz[72] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
                C26498 +
            (C52140 * C102 + C52053 * C252 + C52141 * C1690 + C52054 * C1914) *
                C79306) *
               C79308 * C79027 * C79300 -
           ((C52141 * C3935 + C52054 * C4169 + C52140 * C757 + C52053 * C981) *
                C79306 +
            (C52141 * C3931 + C52054 * C4165 + C52140 * C749 + C52053 * C973) *
                C26498) *
               C79308 * C79027 * C79285 +
           ((C52140 * C750 + C52053 * C974 + C52141 * C6044 + C52054 * C6228) *
                C26498 +
            (C52140 * C758 + C52053 * C982 + C52141 * C6050 + C52054 * C6234) *
                C79306) *
               C79308 * C79027 * C79259) *
              C745 +
          (((C52140 * C748 + C52053 * C972 + C52141 * C3932 + C52054 * C4166) *
                C26498 +
            (C52140 * C756 + C52053 * C980 + C52141 * C3936 + C52054 * C4170) *
                C79306) *
               C79308 * C79027 * C79285 -
           ((C52141 * C1689 + C52054 * C1913 + C52140 * C103 + C52053 * C253) *
                C79306 +
            (C52141 * C1681 + C52054 * C1905 + C52140 * C97 + C52053 * C247) *
                C26498) *
               C79308 * C79027 * C79300 -
           ((C52141 * C6049 + C52054 * C6233 + C52140 * C759 + C52053 * C983) *
                C79306 +
            (C52141 * C6043 + C52054 * C6227 + C52140 * C751 + C52053 * C975) *
                C26498) *
               C79308 * C79027 * C79259) *
              C746 +
          (((C52140 * C98 + C52053 * C248 + C52141 * C1685 + C52054 * C1909) *
                C26498 +
            (C52140 * C104 + C52053 * C254 + C52141 * C1693 + C52054 * C1917) *
                C79306) *
               C79308 * C79027 * C79300 -
           ((C52141 * C3937 + C52054 * C4171 + C52140 * C760 + C52053 * C984) *
                C79306 +
            (C52141 * C3933 + C52054 * C4167 + C52140 * C752 + C52053 * C976) *
                C26498) *
               C79308 * C79027 * C79285 +
           ((C52140 * C753 + C52053 * C977 + C52141 * C7477 + C52054 * C7686) *
                C26498 +
            (C52140 * C761 + C52053 * C985 + C52141 * C7478 + C52054 * C7687) *
                C79306) *
               C79308 * C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
               C26498 +
           (C52140 * C102 + C52053 * C252 + C52141 * C1690 + C52054 * C1914) *
               C79306) *
              C79308 * C79027 * C79009 * C87 -
          ((C52141 * C1689 + C52054 * C1913 + C52140 * C103 + C52053 * C253) *
               C79306 +
           (C52141 * C1681 + C52054 * C1905 + C52140 * C97 + C52053 * C247) *
               C26498) *
              C79308 * C79027 * C79009 * C88 +
          ((C52140 * C98 + C52053 * C248 + C52141 * C1685 + C52054 * C1909) *
               C26498 +
           (C52140 * C104 + C52053 * C254 + C52141 * C1693 + C52054 * C1917) *
               C79306) *
              C79308 * C79027 * C79009 * C89 -
          ((C52141 * C1695 + C52054 * C1919 + C52140 * C105 + C52053 * C255) *
               C79306 +
           (C52141 * C1687 + C52054 * C1911 + C52140 * C99 + C52053 * C249) *
               C26498) *
              C79308 * C79027 * C79009 * C90 +
          ((C52140 * C100 + C52053 * C250 + C52141 * C3255 + C52054 * C3400) *
               C26498 +
           (C52140 * C106 + C52053 * C256 + C52141 * C3256 + C52054 * C3401) *
               C79306) *
              C79308 * C79027 * C79009 * C91)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
                C26498 +
            (C52140 * C102 + C52053 * C252 + C52141 * C1690 + C52054 * C1914) *
                C79306) *
               C79308 * C79301 -
           ((C52141 * C1691 + C52054 * C1915 + C52140 * C1690 +
             C52053 * C1914) *
                C79306 +
            (C52141 * C1683 + C52054 * C1907 + C52140 * C1682 +
             C52053 * C1906) *
                C26498) *
               C79308 * C79287 +
           ((C52140 * C1683 + C52053 * C1907 + C52141 * C10320 +
             C52054 * C10428) *
                C26498 +
            (C52140 * C1691 + C52053 * C1915 + C52141 * C10324 +
             C52054 * C10432) *
                C79306) *
               C79308 * C79262) *
              C79009 * C745 +
          (((C52140 * C1681 + C52053 * C1905 + C52141 * C1684 +
             C52054 * C1908) *
                C26498 +
            (C52140 * C1689 + C52053 * C1913 + C52141 * C1692 +
             C52054 * C1916) *
                C79306) *
               C79308 * C79287 -
           ((C52141 * C1689 + C52054 * C1913 + C52140 * C103 + C52053 * C253) *
                C79306 +
            (C52141 * C1681 + C52054 * C1905 + C52140 * C97 + C52053 * C247) *
                C26498) *
               C79308 * C79301 -
           ((C52141 * C10323 + C52054 * C10431 + C52140 * C1692 +
             C52053 * C1916) *
                C79306 +
            (C52141 * C10319 + C52054 * C10427 + C52140 * C1684 +
             C52053 * C1908) *
                C26498) *
               C79308 * C79262) *
              C79009 * C746 +
          (((C52140 * C98 + C52053 * C248 + C52141 * C1685 + C52054 * C1909) *
                C26498 +
            (C52140 * C104 + C52053 * C254 + C52141 * C1693 + C52054 * C1917) *
                C79306) *
               C79308 * C79301 -
           ((C52141 * C1694 + C52054 * C1918 + C52140 * C1693 +
             C52053 * C1917) *
                C79306 +
            (C52141 * C1686 + C52054 * C1910 + C52140 * C1685 +
             C52053 * C1909) *
                C26498) *
               C79308 * C79287 +
           ((C52140 * C1686 + C52053 * C1910 + C52141 * C11721 +
             C52054 * C11866) *
                C26498 +
            (C52140 * C1694 + C52053 * C1918 + C52141 * C11722 +
             C52054 * C11867) *
                C79306) *
               C79308 * C79262) *
              C79009 * C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
                C26498 +
            (C52140 * C102 + C52053 * C252 + C52141 * C1690 + C52054 * C1914) *
                C79306) *
               C79308 * C79027 * C4921 -
           ((C52141 * C3935 + C52054 * C4169 + C52140 * C757 + C52053 * C981) *
                C79306 +
            (C52141 * C3931 + C52054 * C4165 + C52140 * C749 + C52053 * C973) *
                C26498) *
               C79308 * C79027 * C4922 +
           ((C52140 * C750 + C52053 * C974 + C52141 * C6044 + C52054 * C6228) *
                C26498 +
            (C52140 * C758 + C52053 * C982 + C52141 * C6050 + C52054 * C6234) *
                C79306) *
               C79308 * C79027 * C79259) *
              C79297 +
          (((C52140 * C748 + C52053 * C972 + C52141 * C3932 + C52054 * C4166) *
                C26498 +
            (C52140 * C756 + C52053 * C980 + C52141 * C3936 + C52054 * C4170) *
                C79306) *
               C79308 * C79027 * C4922 -
           ((C52141 * C1689 + C52054 * C1913 + C52140 * C103 + C52053 * C253) *
                C79306 +
            (C52141 * C1681 + C52054 * C1905 + C52140 * C97 + C52053 * C247) *
                C26498) *
               C79308 * C79027 * C4921 -
           ((C52141 * C6049 + C52054 * C6233 + C52140 * C759 + C52053 * C983) *
                C79306 +
            (C52141 * C6043 + C52054 * C6227 + C52140 * C751 + C52053 * C975) *
                C26498) *
               C79308 * C79027 * C79259) *
              C79281 +
          (((C52140 * C98 + C52053 * C248 + C52141 * C1685 + C52054 * C1909) *
                C26498 +
            (C52140 * C104 + C52053 * C254 + C52141 * C1693 + C52054 * C1917) *
                C79306) *
               C79308 * C79027 * C4921 -
           ((C52141 * C3937 + C52054 * C4171 + C52140 * C760 + C52053 * C984) *
                C79306 +
            (C52141 * C3933 + C52054 * C4167 + C52140 * C752 + C52053 * C976) *
                C26498) *
               C79308 * C79027 * C4922 +
           ((C52140 * C753 + C52053 * C977 + C52141 * C7477 + C52054 * C7686) *
                C26498 +
            (C52140 * C761 + C52053 * C985 + C52141 * C7478 + C52054 * C7687) *
                C79306) *
               C79308 * C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
               C26498 +
           (C52140 * C102 + C52053 * C252 + C52141 * C1690 + C52054 * C1914) *
               C79306) *
              C79308 * C79027 * C5561 -
          ((C52141 * C3935 + C52054 * C4169 + C52140 * C757 + C52053 * C981) *
               C79306 +
           (C52141 * C3931 + C52054 * C4165 + C52140 * C749 + C52053 * C973) *
               C26498) *
              C79308 * C79027 * C5562 +
          ((C52140 * C750 + C52053 * C974 + C52141 * C6044 + C52054 * C6228) *
               C26498 +
           (C52140 * C758 + C52053 * C982 + C52141 * C6050 + C52054 * C6234) *
               C79306) *
              C79308 * C79027 * C5563 -
          ((C52141 * C8379 + C52054 * C8523 + C52140 * C5572 + C52053 * C5680) *
               C79306 +
           (C52141 * C8377 + C52054 * C8521 + C52140 * C5568 + C52053 * C5676) *
               C26498) *
              C79308 * C79027 * C5564 +
          ((C52140 * C5569 + C52053 * C5677 + C52141 * C34055 +
            C52054 * C34199) *
               C26498 +
           (C52140 * C5573 + C52053 * C5681 + C52141 * C34056 +
            C52054 * C34200) *
               C79306) *
              C79308 * C79027 * C5565) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
                C26498 +
            (C52140 * C102 + C52053 * C252 + C52141 * C1690 + C52054 * C1914) *
                C79306) *
               C79308 * C79301 -
           ((C52141 * C1691 + C52054 * C1915 + C52140 * C1690 +
             C52053 * C1914) *
                C79306 +
            (C52141 * C1683 + C52054 * C1907 + C52140 * C1682 +
             C52053 * C1906) *
                C26498) *
               C79308 * C79287 +
           ((C52140 * C1683 + C52053 * C1907 + C52141 * C10320 +
             C52054 * C10428) *
                C26498 +
            (C52140 * C1691 + C52053 * C1915 + C52141 * C10324 +
             C52054 * C10432) *
                C79306) *
               C79308 * C79262) *
              C4921 +
          (((C52140 * C3931 + C52053 * C4165 + C52141 * C6042 +
             C52054 * C6226) *
                C26498 +
            (C52140 * C3935 + C52053 * C4169 + C52141 * C6048 +
             C52054 * C6232) *
                C79306) *
               C79308 * C79287 -
           ((C52141 * C3935 + C52054 * C4169 + C52140 * C757 + C52053 * C981) *
                C79306 +
            (C52141 * C3931 + C52054 * C4165 + C52140 * C749 + C52053 * C973) *
                C26498) *
               C79308 * C79301 -
           ((C52141 * C12367 + C52054 * C12511 + C52140 * C6048 +
             C52053 * C6232) *
                C79306 +
            (C52141 * C12365 + C52054 * C12509 + C52140 * C6042 +
             C52053 * C6226) *
                C26498) *
               C79308 * C79262) *
              C4922 +
          (((C52140 * C750 + C52053 * C974 + C52141 * C6044 + C52054 * C6228) *
                C26498 +
            (C52140 * C758 + C52053 * C982 + C52141 * C6050 + C52054 * C6234) *
                C79306) *
               C79308 * C79301 -
           ((C52141 * C6051 + C52054 * C6235 + C52140 * C6050 +
             C52053 * C6234) *
                C79306 +
            (C52141 * C6045 + C52054 * C6229 + C52140 * C6044 +
             C52053 * C6228) *
                C26498) *
               C79308 * C79287 +
           ((C52140 * C6045 + C52053 * C6229 + C52141 * C37933 +
             C52054 * C38077) *
                C26498 +
            (C52140 * C6051 + C52053 * C6235 + C52141 * C37934 +
             C52054 * C38078) *
                C79306) *
               C79308 * C79262) *
              C79259) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eeyx[72] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C26498 * C96 + C79306 * C102) * C166 +
             (C26498 * C167 + C79306 * C324) * C79308) *
                C52053 +
            ((C26498 * C1682 + C79306 * C1690) * C166 +
             (C26498 * C1792 + C79306 * C2020) * C79308) *
                C52054) *
               C79027 * C79300 -
           ((C30027 * C79308 + C30028 * C166) * C52054 +
            (C27247 * C79308 + C27246 * C166) * C52053) *
               C79027 * C79285 +
           ((C27249 * C166 + C27248 * C79308) * C52053 +
            (C32045 * C166 + C32046 * C79308) * C52054) *
               C79027 * C79259) *
              C745 +
          (((C27250 * C166 + C27251 * C79308) * C52053 +
            (C30029 * C166 + C30030 * C79308) * C52054) *
               C79027 * C79285 -
           (((C26498 * C1791 + C79306 * C2019) * C79308 +
             (C26498 * C1681 + C79306 * C1689) * C166) *
                C52054 +
            ((C26498 * C168 + C79306 * C325) * C79308 +
             (C26498 * C97 + C79306 * C103) * C166) *
                C52053) *
               C79027 * C79300 -
           ((C33491 * C79308 + C33492 * C166) * C52054 +
            (C27253 * C79308 + C27252 * C166) * C52053) *
               C79027 * C79259) *
              C746 +
          ((((C26498 * C98 + C79306 * C104) * C166 +
             (C26498 * C169 + C79306 * C326) * C79308) *
                C52053 +
            ((C26498 * C1685 + C79306 * C1693) * C166 +
             (C26498 * C1795 + C79306 * C2023) * C79308) *
                C52054) *
               C79027 * C79300 -
           ((C30031 * C79308 + C30032 * C166) * C52054 +
            (C27255 * C79308 + C27254 * C166) * C52053) *
               C79027 * C79285 +
           ((C27257 * C166 + C27256 * C79308) * C52053 +
            ((C26498 * C7477 + C79306 * C7478) * C166 +
             (C26498 * C7580 + C79306 * C7792) * C79308) *
                C52054) *
               C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C26498 * C96 + C79306 * C102) * C166 +
            (C26498 * C167 + C79306 * C324) * C79308) *
               C52053 +
           ((C26498 * C1682 + C79306 * C1690) * C166 +
            (C26498 * C1792 + C79306 * C2020) * C79308) *
               C52054) *
              C79027 * C79009 * C87 -
          (((C26498 * C1791 + C79306 * C2019) * C79308 +
            (C26498 * C1681 + C79306 * C1689) * C166) *
               C52054 +
           ((C26498 * C168 + C79306 * C325) * C79308 +
            (C26498 * C97 + C79306 * C103) * C166) *
               C52053) *
              C79027 * C79009 * C88 +
          (((C26498 * C98 + C79306 * C104) * C166 +
            (C26498 * C169 + C79306 * C326) * C79308) *
               C52053 +
           ((C26498 * C1685 + C79306 * C1693) * C166 +
            (C26498 * C1795 + C79306 * C2023) * C79308) *
               C52054) *
              C79027 * C79009 * C89 -
          (((C26498 * C1797 + C79306 * C2025) * C79308 +
            (C26498 * C1687 + C79306 * C1695) * C166) *
               C52054 +
           ((C26498 * C170 + C79306 * C327) * C79308 +
            (C26498 * C99 + C79306 * C105) * C166) *
               C52053) *
              C79027 * C79009 * C90 +
          (((C26498 * C100 + C79306 * C106) * C166 +
            (C26498 * C171 + C79306 * C328) * C79308) *
               C52053 +
           ((C26498 * C3255 + C79306 * C3256) * C166 +
            (C26498 * C3326 + C79306 * C3474) * C79308) *
               C52054) *
              C79027 * C79009 * C91)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C26498 * C96 + C79306 * C102) * C166 +
             (C26498 * C167 + C79306 * C324) * C79308) *
                C52053 +
            (C53472 + C53473) * C52054) *
               C79301 -
           ((C53474 + C53475) * C52054 + (C53473 + C53472) * C52053) * C79287 +
           ((C53475 + C53474) * C52053 +
            ((C26498 * C10320 + C79306 * C10324) * C166 +
             (C26498 * C10378 + C79306 * C10478) * C79308) *
                C52054) *
               C79262) *
              C79009 * C745 +
          (((C53476 + C53477) * C52053 + (C53478 + C53479) * C52054) * C79287 -
           ((C53477 + C53476) * C52054 +
            ((C26498 * C168 + C79306 * C325) * C79308 +
             (C26498 * C97 + C79306 * C103) * C166) *
                C52053) *
               C79301 -
           (((C26498 * C10377 + C79306 * C10477) * C79308 +
             (C26498 * C10319 + C79306 * C10323) * C166) *
                C52054 +
            (C53479 + C53478) * C52053) *
               C79262) *
              C79009 * C746 +
          ((((C26498 * C98 + C79306 * C104) * C166 +
             (C26498 * C169 + C79306 * C326) * C79308) *
                C52053 +
            (C53480 + C53481) * C52054) *
               C79301 -
           ((C53482 + C53483) * C52054 + (C53481 + C53480) * C52053) * C79287 +
           ((C53483 + C53482) * C52053 +
            ((C26498 * C11721 + C79306 * C11722) * C166 +
             (C26498 * C11792 + C79306 * C11940) * C79308) *
                C52054) *
               C79262) *
              C79009 * C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C26498 * C96 + C79306 * C102) * C166 +
             (C26498 * C167 + C79306 * C324) * C79308) *
                C52053 +
            (C53472 + C53473) * C52054) *
               C79027 * C4921 -
           ((C55523 + C55522) * C52054 +
            (C27247 * C79308 + C27246 * C166) * C52053) *
               C79027 * C4922 +
           ((C27249 * C166 + C27248 * C79308) * C52053 +
            (C32045 * C166 + C32046 * C79308) * C52054) *
               C79027 * C79259) *
              C79297 +
          (((C27250 * C166 + C27251 * C79308) * C52053 +
            (C55524 + C55525) * C52054) *
               C79027 * C4922 -
           ((C53477 + C53476) * C52054 +
            ((C26498 * C168 + C79306 * C325) * C79308 +
             (C26498 * C97 + C79306 * C103) * C166) *
                C52053) *
               C79027 * C4921 -
           ((C33491 * C79308 + C33492 * C166) * C52054 +
            (C27253 * C79308 + C27252 * C166) * C52053) *
               C79027 * C79259) *
              C79281 +
          ((((C26498 * C98 + C79306 * C104) * C166 +
             (C26498 * C169 + C79306 * C326) * C79308) *
                C52053 +
            (C53480 + C53481) * C52054) *
               C79027 * C4921 -
           ((C55527 + C55526) * C52054 +
            (C27255 * C79308 + C27254 * C166) * C52053) *
               C79027 * C4922 +
           ((C27257 * C166 + C27256 * C79308) * C52053 +
            ((C26498 * C7477 + C79306 * C7478) * C166 +
             (C26498 * C7580 + C79306 * C7792) * C79308) *
                C52054) *
               C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C26498 * C96 + C79306 * C102) * C166 +
            (C26498 * C167 + C79306 * C324) * C79308) *
               C52053 +
           (C53472 + C53473) * C52054) *
              C79027 * C5561 -
          ((C55523 + C55522) * C52054 +
           (C27247 * C79308 + C27246 * C166) * C52053) *
              C79027 * C5562 +
          ((C27249 * C166 + C27248 * C79308) * C52053 +
           (C32045 * C166 + C32046 * C79308) * C52054) *
              C79027 * C5563 -
          ((C34281 * C79308 + C34282 * C166) * C52054 +
           (C31433 * C79308 + C31432 * C166) * C52053) *
              C79027 * C5564 +
          ((C31435 * C166 + C31434 * C79308) * C52053 +
           ((C26498 * C34055 + C79306 * C34056) * C166 +
            (C26498 * C34131 + C79306 * C34275) * C79308) *
               C52054) *
              C79027 * C5565) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C26498 * C96 + C79306 * C102) * C166 +
             (C26498 * C167 + C79306 * C324) * C79308) *
                C52053 +
            (C53472 + C53473) * C52054) *
               C79301 -
           ((C53474 + C53475) * C52054 + (C53473 + C53472) * C52053) * C79287 +
           ((C53475 + C53474) * C52053 +
            ((C26498 * C10320 + C79306 * C10324) * C166 +
             (C26498 * C10378 + C79306 * C10478) * C79308) *
                C52054) *
               C79262) *
              C4921 +
          (((C55522 + C55523) * C52053 + (C57404 + C57405) * C52054) * C79287 -
           ((C55523 + C55522) * C52054 +
            (C27247 * C79308 + C27246 * C166) * C52053) *
               C79301 -
           ((C38159 * C79308 + C38160 * C166) * C52054 +
            (C57405 + C57404) * C52053) *
               C79262) *
              C4922 +
          (((C27249 * C166 + C27248 * C79308) * C52053 +
            (C57406 + C57407) * C52054) *
               C79301 -
           ((C57408 + C57409) * C52054 + (C57407 + C57406) * C52053) * C79287 +
           ((C57409 + C57408) * C52053 +
            ((C26498 * C37933 + C79306 * C37934) * C166 +
             (C26498 * C38009 + C79306 * C38153) * C79308) *
                C52054) *
               C79262) *
              C79259) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eeyy[72] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C372 * C96 + C380 + C380 + C79308 * C373) * C79306 * C52053 +
            (C372 * C1682 + C2113 + C2113 + C79308 * C2102) * C79306 * C52054) *
               C79027 * C79300 -
           ((C372 * C3931 + C4390 + C4390 + C79308 * C4385) * C79306 * C52054 +
            (C372 * C749 + C1180 + C1180 + C79308 * C1169) * C79306 * C52053) *
               C79027 * C79285 +
           ((C372 * C750 + C1181 + C1181 + C79308 * C1170) * C79306 * C52053 +
            (C372 * C6044 + C6401 + C6401 + C79308 * C6394) * C79306 * C52054) *
               C79027 * C79259) *
              C745 +
          ((C1201 * C79306 * C52053 + C4402 * C79306 * C52054) * C79027 *
               C79285 -
           (C2134 * C79306 * C52054 + C402 * C79306 * C52053) * C79027 *
               C79300 -
           (C7898 * C79306 * C52054 + C1202 * C79306 * C52053) * C79027 *
               C79259) *
              C746 +
          ((C403 * C79306 * C52053 + C2136 * C79306 * C52054) * C79027 *
               C79300 -
           (C4403 * C79306 * C52054 + C1203 * C79306 * C52053) * C79027 *
               C79285 +
           (C1204 * C79306 * C52053 +
            (C372 * C7477 + C7895 + C7895 + C79308 * C7891) * C79306 * C52054) *
               C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C372 * C96 + C380 + C380 + C79308 * C373) * C79306 * C52053 +
           (C372 * C1682 + C2113 + C2113 + C79308 * C2102) * C79306 * C52054) *
              C79027 * C79009 * C87 -
          (C2134 * C79306 * C52054 + C402 * C79306 * C52053) * C79027 * C79009 *
              C88 +
          (C403 * C79306 * C52053 + C2136 * C79306 * C52054) * C79027 * C79009 *
              C89 -
          (C3548 * C79306 * C52054 + C404 * C79306 * C52053) * C79027 * C79009 *
              C90 +
          (C405 * C79306 * C52053 +
           (C372 * C3255 + C3545 + C3545 + C79308 * C3541) * C79306 * C52054) *
              C79027 * C79009 * C91)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C372 * C96 + C380 + C380 + C79308 * C373) * C79306 * C52053 +
            C53572 * C52054) *
               C79301 -
           (C53573 * C52054 + C53572 * C52053) * C79287 +
           (C53573 * C52053 +
            (C372 * C10320 + C10529 + C10529 + C79308 * C10524) * C79306 *
                C52054) *
               C79262) *
              C79009 * C745 +
          ((C53562 * C52053 + C53563 * C52054) * C79287 -
           (C53562 * C52054 + C402 * C79306 * C52053) * C79301 -
           (C12014 * C79306 * C52054 + C53563 * C52053) * C79262) *
              C79009 * C746 +
          ((C403 * C79306 * C52053 + C53564 * C52054) * C79301 -
           (C53565 * C52054 + C53564 * C52053) * C79287 +
           (C53565 * C52053 +
            (C372 * C11721 + C12011 + C12011 + C79308 * C12007) * C79306 *
                C52054) *
               C79262) *
              C79009 * C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C372 * C96 + C380 + C380 + C79308 * C373) * C79306 * C52053 +
            C53572 * C52054) *
               C79027 * C4921 -
           (C55633 * C52054 +
            (C372 * C749 + C1180 + C1180 + C79308 * C1169) * C79306 * C52053) *
               C79027 * C4922 +
           ((C372 * C750 + C1181 + C1181 + C79308 * C1170) * C79306 * C52053 +
            (C372 * C6044 + C6401 + C6401 + C79308 * C6394) * C79306 * C52054) *
               C79027 * C79259) *
              C79297 +
          ((C1201 * C79306 * C52053 + C55628 * C52054) * C79027 * C4922 -
           (C53562 * C52054 + C402 * C79306 * C52053) * C79027 * C4921 -
           (C7898 * C79306 * C52054 + C1202 * C79306 * C52053) * C79027 *
               C79259) *
              C79281 +
          ((C403 * C79306 * C52053 + C53564 * C52054) * C79027 * C4921 -
           (C55629 * C52054 + C1203 * C79306 * C52053) * C79027 * C4922 +
           (C1204 * C79306 * C52053 +
            (C372 * C7477 + C7895 + C7895 + C79308 * C7891) * C79306 * C52054) *
               C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C372 * C96 + C380 + C380 + C79308 * C373) * C79306 * C52053 +
           C53572 * C52054) *
              C79027 * C5561 -
          (C55633 * C52054 +
           (C372 * C749 + C1180 + C1180 + C79308 * C1169) * C79306 * C52053) *
              C79027 * C5562 +
          ((C372 * C750 + C1181 + C1181 + C79308 * C1170) * C79306 * C52053 +
           (C372 * C6044 + C6401 + C6401 + C79308 * C6394) * C79306 * C52054) *
              C79027 * C5563 -
          ((C372 * C8377 + C8662 + C8662 + C79308 * C8659) * C79306 * C52054 +
           (C372 * C5568 + C5777 + C5777 + C79308 * C5772) * C79306 * C52053) *
              C79027 * C5564 +
          ((C372 * C5569 + C5778 + C5778 + C79308 * C5773) * C79306 * C52053 +
           (C372 * C34055 + C56911 + C56911 + C79308 * C34348) * C79306 *
               C52054) *
              C79027 * C5565) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C372 * C96 + C380 + C380 + C79308 * C373) * C79306 * C52053 +
            C53572 * C52054) *
               C79301 -
           (C53573 * C52054 + C53572 * C52053) * C79287 +
           (C53573 * C52053 +
            (C372 * C10320 + C10529 + C10529 + C79308 * C10524) * C79306 *
                C52054) *
               C79262) *
              C4921 +
          ((C55633 * C52053 + C57500 * C52054) * C79287 -
           (C55633 * C52054 +
            (C372 * C749 + C1180 + C1180 + C79308 * C1169) * C79306 * C52053) *
               C79301 -
           ((C372 * C12365 + C12650 + C12650 + C79308 * C12647) * C79306 *
                C52054 +
            C57500 * C52053) *
               C79262) *
              C4922 +
          (((C372 * C750 + C1181 + C1181 + C79308 * C1170) * C79306 * C52053 +
            C57501 * C52054) *
               C79301 -
           (C57502 * C52054 + C57501 * C52053) * C79287 +
           (C57502 * C52053 +
            (C372 * C37933 + C57490 + C57490 + C79308 * C38226) * C79306 *
                C52054) *
               C79262) *
              C79259) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eeyz[72] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
                C166 +
            (C52140 * C167 + C52053 * C447 + C52141 * C1792 + C52054 * C2212) *
                C79308) *
               C79306 * C79027 * C79300 -
           ((C52141 * C4047 + C52054 * C4501 + C52140 * C859 + C52053 * C1279) *
                C79308 +
            (C52141 * C3931 + C52054 * C4165 + C52140 * C749 + C52053 * C973) *
                C166) *
               C79306 * C79027 * C79285 +
           ((C52140 * C750 + C52053 * C974 + C52141 * C6044 + C52054 * C6228) *
                C166 +
            (C52140 * C860 + C52053 * C1280 + C52141 * C6142 + C52054 * C6480) *
                C79308) *
               C79306 * C79027 * C79259) *
              C745 +
          (((C52140 * C748 + C52053 * C972 + C52141 * C3932 + C52054 * C4166) *
                C166 +
            (C52140 * C858 + C52053 * C1278 + C52141 * C4048 + C52054 * C4502) *
                C79308) *
               C79306 * C79027 * C79285 -
           ((C52141 * C1791 + C52054 * C2211 + C52140 * C168 + C52053 * C448) *
                C79308 +
            (C52141 * C1681 + C52054 * C1905 + C52140 * C97 + C52053 * C247) *
                C166) *
               C79306 * C79027 * C79300 -
           ((C52141 * C6141 + C52054 * C6479 + C52140 * C861 + C52053 * C1281) *
                C79308 +
            (C52141 * C6043 + C52054 * C6227 + C52140 * C751 + C52053 * C975) *
                C166) *
               C79306 * C79027 * C79259) *
              C746 +
          (((C52140 * C98 + C52053 * C248 + C52141 * C1685 + C52054 * C1909) *
                C166 +
            (C52140 * C169 + C52053 * C449 + C52141 * C1795 + C52054 * C2215) *
                C79308) *
               C79306 * C79027 * C79300 -
           ((C52141 * C4049 + C52054 * C4503 + C52140 * C862 + C52053 * C1282) *
                C79308 +
            (C52141 * C3933 + C52054 * C4167 + C52140 * C752 + C52053 * C976) *
                C166) *
               C79306 * C79027 * C79285 +
           ((C52140 * C753 + C52053 * C977 + C52141 * C7477 + C52054 * C7686) *
                C166 +
            (C52140 * C863 + C52053 * C1283 + C52141 * C7580 + C52054 * C7996) *
                C79308) *
               C79306 * C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
               C166 +
           (C52140 * C167 + C52053 * C447 + C52141 * C1792 + C52054 * C2212) *
               C79308) *
              C79306 * C79027 * C79009 * C87 -
          ((C52141 * C1791 + C52054 * C2211 + C52140 * C168 + C52053 * C448) *
               C79308 +
           (C52141 * C1681 + C52054 * C1905 + C52140 * C97 + C52053 * C247) *
               C166) *
              C79306 * C79027 * C79009 * C88 +
          ((C52140 * C98 + C52053 * C248 + C52141 * C1685 + C52054 * C1909) *
               C166 +
           (C52140 * C169 + C52053 * C449 + C52141 * C1795 + C52054 * C2215) *
               C79308) *
              C79306 * C79027 * C79009 * C89 -
          ((C52141 * C1797 + C52054 * C2217 + C52140 * C170 + C52053 * C450) *
               C79308 +
           (C52141 * C1687 + C52054 * C1911 + C52140 * C99 + C52053 * C249) *
               C166) *
              C79306 * C79027 * C79009 * C90 +
          ((C52140 * C100 + C52053 * C250 + C52141 * C3255 + C52054 * C3400) *
               C166 +
           (C52140 * C171 + C52053 * C451 + C52141 * C3326 + C52054 * C3614) *
               C79308) *
              C79306 * C79027 * C79009 * C91)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
                C166 +
            (C52140 * C167 + C52053 * C447 + C52141 * C1792 + C52054 * C2212) *
                C79308) *
               C79306 * C79301 -
           ((C52141 * C1793 + C52054 * C2213 + C52140 * C1792 +
             C52053 * C2212) *
                C79308 +
            (C52141 * C1683 + C52054 * C1907 + C52140 * C1682 +
             C52053 * C1906) *
                C166) *
               C79306 * C79287 +
           ((C52140 * C1683 + C52053 * C1907 + C52141 * C10320 +
             C52054 * C10428) *
                C166 +
            (C52140 * C1793 + C52053 * C2213 + C52141 * C10378 +
             C52054 * C10574) *
                C79308) *
               C79306 * C79262) *
              C79009 * C745 +
          (((C52140 * C1681 + C52053 * C1905 + C52141 * C1684 +
             C52054 * C1908) *
                C166 +
            (C52140 * C1791 + C52053 * C2211 + C52141 * C1794 +
             C52054 * C2214) *
                C79308) *
               C79306 * C79287 -
           ((C52141 * C1791 + C52054 * C2211 + C52140 * C168 + C52053 * C448) *
                C79308 +
            (C52141 * C1681 + C52054 * C1905 + C52140 * C97 + C52053 * C247) *
                C166) *
               C79306 * C79301 -
           ((C52141 * C10377 + C52054 * C10573 + C52140 * C1794 +
             C52053 * C2214) *
                C79308 +
            (C52141 * C10319 + C52054 * C10427 + C52140 * C1684 +
             C52053 * C1908) *
                C166) *
               C79306 * C79262) *
              C79009 * C746 +
          (((C52140 * C98 + C52053 * C248 + C52141 * C1685 + C52054 * C1909) *
                C166 +
            (C52140 * C169 + C52053 * C449 + C52141 * C1795 + C52054 * C2215) *
                C79308) *
               C79306 * C79301 -
           ((C52141 * C1796 + C52054 * C2216 + C52140 * C1795 +
             C52053 * C2215) *
                C79308 +
            (C52141 * C1686 + C52054 * C1910 + C52140 * C1685 +
             C52053 * C1909) *
                C166) *
               C79306 * C79287 +
           ((C52140 * C1686 + C52053 * C1910 + C52141 * C11721 +
             C52054 * C11866) *
                C166 +
            (C52140 * C1796 + C52053 * C2216 + C52141 * C11792 +
             C52054 * C12080) *
                C79308) *
               C79306 * C79262) *
              C79009 * C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
                C166 +
            (C52140 * C167 + C52053 * C447 + C52141 * C1792 + C52054 * C2212) *
                C79308) *
               C79306 * C79027 * C4921 -
           ((C52141 * C4047 + C52054 * C4501 + C52140 * C859 + C52053 * C1279) *
                C79308 +
            (C52141 * C3931 + C52054 * C4165 + C52140 * C749 + C52053 * C973) *
                C166) *
               C79306 * C79027 * C4922 +
           ((C52140 * C750 + C52053 * C974 + C52141 * C6044 + C52054 * C6228) *
                C166 +
            (C52140 * C860 + C52053 * C1280 + C52141 * C6142 + C52054 * C6480) *
                C79308) *
               C79306 * C79027 * C79259) *
              C79297 +
          (((C52140 * C748 + C52053 * C972 + C52141 * C3932 + C52054 * C4166) *
                C166 +
            (C52140 * C858 + C52053 * C1278 + C52141 * C4048 + C52054 * C4502) *
                C79308) *
               C79306 * C79027 * C4922 -
           ((C52141 * C1791 + C52054 * C2211 + C52140 * C168 + C52053 * C448) *
                C79308 +
            (C52141 * C1681 + C52054 * C1905 + C52140 * C97 + C52053 * C247) *
                C166) *
               C79306 * C79027 * C4921 -
           ((C52141 * C6141 + C52054 * C6479 + C52140 * C861 + C52053 * C1281) *
                C79308 +
            (C52141 * C6043 + C52054 * C6227 + C52140 * C751 + C52053 * C975) *
                C166) *
               C79306 * C79027 * C79259) *
              C79281 +
          (((C52140 * C98 + C52053 * C248 + C52141 * C1685 + C52054 * C1909) *
                C166 +
            (C52140 * C169 + C52053 * C449 + C52141 * C1795 + C52054 * C2215) *
                C79308) *
               C79306 * C79027 * C4921 -
           ((C52141 * C4049 + C52054 * C4503 + C52140 * C862 + C52053 * C1282) *
                C79308 +
            (C52141 * C3933 + C52054 * C4167 + C52140 * C752 + C52053 * C976) *
                C166) *
               C79306 * C79027 * C4922 +
           ((C52140 * C753 + C52053 * C977 + C52141 * C7477 + C52054 * C7686) *
                C166 +
            (C52140 * C863 + C52053 * C1283 + C52141 * C7580 + C52054 * C7996) *
                C79308) *
               C79306 * C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
               C166 +
           (C52140 * C167 + C52053 * C447 + C52141 * C1792 + C52054 * C2212) *
               C79308) *
              C79306 * C79027 * C5561 -
          ((C52141 * C4047 + C52054 * C4501 + C52140 * C859 + C52053 * C1279) *
               C79308 +
           (C52141 * C3931 + C52054 * C4165 + C52140 * C749 + C52053 * C973) *
               C166) *
              C79306 * C79027 * C5562 +
          ((C52140 * C750 + C52053 * C974 + C52141 * C6044 + C52054 * C6228) *
               C166 +
           (C52140 * C860 + C52053 * C1280 + C52141 * C6142 + C52054 * C6480) *
               C79308) *
              C79306 * C79027 * C5563 -
          ((C52141 * C8451 + C52054 * C8729 + C52140 * C5626 + C52053 * C5822) *
               C79308 +
           (C52141 * C8377 + C52054 * C8521 + C52140 * C5568 + C52053 * C5676) *
               C166) *
              C79306 * C79027 * C5564 +
          ((C52140 * C5569 + C52053 * C5677 + C52141 * C34055 +
            C52054 * C34199) *
               C166 +
           (C52140 * C5627 + C52053 * C5823 + C52141 * C34131 +
            C52054 * C34417) *
               C79308) *
              C79306 * C79027 * C5565) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
                C166 +
            (C52140 * C167 + C52053 * C447 + C52141 * C1792 + C52054 * C2212) *
                C79308) *
               C79306 * C79301 -
           ((C52141 * C1793 + C52054 * C2213 + C52140 * C1792 +
             C52053 * C2212) *
                C79308 +
            (C52141 * C1683 + C52054 * C1907 + C52140 * C1682 +
             C52053 * C1906) *
                C166) *
               C79306 * C79287 +
           ((C52140 * C1683 + C52053 * C1907 + C52141 * C10320 +
             C52054 * C10428) *
                C166 +
            (C52140 * C1793 + C52053 * C2213 + C52141 * C10378 +
             C52054 * C10574) *
                C79308) *
               C79306 * C79262) *
              C4921 +
          (((C52140 * C3931 + C52053 * C4165 + C52141 * C6042 +
             C52054 * C6226) *
                C166 +
            (C52140 * C4047 + C52053 * C4501 + C52141 * C6140 +
             C52054 * C6478) *
                C79308) *
               C79306 * C79287 -
           ((C52141 * C4047 + C52054 * C4501 + C52140 * C859 + C52053 * C1279) *
                C79308 +
            (C52141 * C3931 + C52054 * C4165 + C52140 * C749 + C52053 * C973) *
                C166) *
               C79306 * C79301 -
           ((C52141 * C12439 + C52054 * C12717 + C52140 * C6140 +
             C52053 * C6478) *
                C79308 +
            (C52141 * C12365 + C52054 * C12509 + C52140 * C6042 +
             C52053 * C6226) *
                C166) *
               C79306 * C79262) *
              C4922 +
          (((C52140 * C750 + C52053 * C974 + C52141 * C6044 + C52054 * C6228) *
                C166 +
            (C52140 * C860 + C52053 * C1280 + C52141 * C6142 + C52054 * C6480) *
                C79308) *
               C79306 * C79301 -
           ((C52141 * C6143 + C52054 * C6481 + C52140 * C6142 +
             C52053 * C6480) *
                C79308 +
            (C52141 * C6045 + C52054 * C6229 + C52140 * C6044 +
             C52053 * C6228) *
                C166) *
               C79306 * C79287 +
           ((C52140 * C6045 + C52053 * C6229 + C52141 * C37933 +
             C52054 * C38077) *
                C166 +
            (C52140 * C6143 + C52053 * C6481 + C52141 * C38009 +
             C52054 * C38295) *
                C79308) *
               C79306 * C79262) *
              C79259) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eezx[72] += (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   ((((C26498 * C96 + C79306 * C102) * C52140 +
                      (C26498 * C246 + C79306 * C515) * C52053 +
                      (C26498 * C1682 + C79306 * C1690) * C52141 +
                      (C26498 * C1906 + C79306 * C2314) * C52054) *
                         C79308 * C79027 * C79300 -
                     (C30345 * C52054 + C30028 * C52141 + C27516 * C52053 +
                      C27246 * C52140) *
                         C79308 * C79027 * C79285 +
                     (C27249 * C52140 + C27517 * C52053 + C32045 * C52141 +
                      C32299 * C52054) *
                         C79308 * C79027 * C79259) *
                        C745 +
                    ((C27250 * C52140 + C27518 * C52053 + C30029 * C52141 +
                      C30346 * C52054) *
                         C79308 * C79027 * C79285 -
                     ((C26498 * C1905 + C79306 * C2313) * C52054 +
                      (C26498 * C1681 + C79306 * C1689) * C52141 +
                      (C26498 * C247 + C79306 * C516) * C52053 +
                      (C26498 * C97 + C79306 * C103) * C52140) *
                         C79308 * C79027 * C79300 -
                     (C33792 * C52054 + C33492 * C52141 + C27519 * C52053 +
                      C27252 * C52140) *
                         C79308 * C79027 * C79259) *
                        C746 +
                    (((C26498 * C98 + C79306 * C104) * C52140 +
                      (C26498 * C248 + C79306 * C517) * C52053 +
                      (C26498 * C1685 + C79306 * C1693) * C52141 +
                      (C26498 * C1909 + C79306 * C2317) * C52054) *
                         C79308 * C79027 * C79300 -
                     (C30347 * C52054 + C30032 * C52141 + C27520 * C52053 +
                      C27254 * C52140) *
                         C79308 * C79027 * C79285 +
                     (C27257 * C52140 + C27521 * C52053 +
                      (C26498 * C7477 + C79306 * C7478) * C52141 +
                      (C26498 * C7686 + C79306 * C8100) * C52054) *
                         C79308 * C79027 * C79259) *
                        C79253)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   (((C26498 * C96 + C79306 * C102) * C52140 +
                     (C26498 * C246 + C79306 * C515) * C52053 +
                     (C26498 * C1682 + C79306 * C1690) * C52141 +
                     (C26498 * C1906 + C79306 * C2314) * C52054) *
                        C79308 * C79027 * C79009 * C87 -
                    ((C26498 * C1905 + C79306 * C2313) * C52054 +
                     (C26498 * C1681 + C79306 * C1689) * C52141 +
                     (C26498 * C247 + C79306 * C516) * C52053 +
                     (C26498 * C97 + C79306 * C103) * C52140) *
                        C79308 * C79027 * C79009 * C88 +
                    ((C26498 * C98 + C79306 * C104) * C52140 +
                     (C26498 * C248 + C79306 * C517) * C52053 +
                     (C26498 * C1685 + C79306 * C1693) * C52141 +
                     (C26498 * C1909 + C79306 * C2317) * C52054) *
                        C79308 * C79027 * C79009 * C89 -
                    ((C26498 * C1911 + C79306 * C2319) * C52054 +
                     (C26498 * C1687 + C79306 * C1695) * C52141 +
                     (C26498 * C249 + C79306 * C518) * C52053 +
                     (C26498 * C99 + C79306 * C105) * C52140) *
                        C79308 * C79027 * C79009 * C90 +
                    ((C26498 * C100 + C79306 * C106) * C52140 +
                     (C26498 * C250 + C79306 * C519) * C52053 +
                     (C26498 * C3255 + C79306 * C3256) * C52141 +
                     (C26498 * C3400 + C79306 * C3686) * C52054) *
                        C79308 * C79027 * C79009 * C91)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C26498 * C96 + C79306 * C102) * C52140 +
                      (C26498 * C246 + C79306 * C515) * C52053 +
                      C53460 * C52141 + C53734 * C52054) *
                         C79308 * C79301 -
                     (C53735 * C52054 + C53463 * C52141 + C53734 * C52053 +
                      C53460 * C52140) *
                         C79308 * C79287 +
                     (C53463 * C52140 + C53735 * C52053 +
                      (C26498 * C10320 + C79306 * C10324) * C52141 +
                      (C26498 * C10428 + C79306 * C10620) * C52054) *
                         C79308 * C79262) *
                        C79009 * C745 +
                    ((C53464 * C52140 + C53736 * C52053 + C53466 * C52141 +
                      C53737 * C52054) *
                         C79308 * C79287 -
                     (C53736 * C52054 + C53464 * C52141 +
                      (C26498 * C247 + C79306 * C516) * C52053 +
                      (C26498 * C97 + C79306 * C103) * C52140) *
                         C79308 * C79301 -
                     ((C26498 * C10427 + C79306 * C10619) * C52054 +
                      (C26498 * C10319 + C79306 * C10323) * C52141 +
                      C53737 * C52053 + C53466 * C52140) *
                         C79308 * C79262) *
                        C79009 * C746 +
                    (((C26498 * C98 + C79306 * C104) * C52140 +
                      (C26498 * C248 + C79306 * C517) * C52053 +
                      C53468 * C52141 + C53738 * C52054) *
                         C79308 * C79301 -
                     (C53739 * C52054 + C53471 * C52141 + C53738 * C52053 +
                      C53468 * C52140) *
                         C79308 * C79287 +
                     (C53471 * C52140 + C53739 * C52053 +
                      (C26498 * C11721 + C79306 * C11722) * C52141 +
                      (C26498 * C11866 + C79306 * C12152) * C52054) *
                         C79308 * C79262) *
                        C79009 * C79253)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   ((((C26498 * C96 + C79306 * C102) * C52140 +
                      (C26498 * C246 + C79306 * C515) * C52053 +
                      C53460 * C52141 + C53734 * C52054) *
                         C79308 * C79027 * C4921 -
                     (C30345 * C52054 + C30028 * C52141 + C27516 * C52053 +
                      C27246 * C52140) *
                         C79308 * C79027 * C4922 +
                     (C27249 * C52140 + C27517 * C52053 + C32045 * C52141 +
                      C32299 * C52054) *
                         C79308 * C79027 * C79259) *
                        C79297 +
                    ((C27250 * C52140 + C27518 * C52053 + C30029 * C52141 +
                      C30346 * C52054) *
                         C79308 * C79027 * C4922 -
                     (C53736 * C52054 + C53464 * C52141 +
                      (C26498 * C247 + C79306 * C516) * C52053 +
                      (C26498 * C97 + C79306 * C103) * C52140) *
                         C79308 * C79027 * C4921 -
                     (C33792 * C52054 + C33492 * C52141 + C27519 * C52053 +
                      C27252 * C52140) *
                         C79308 * C79027 * C79259) *
                        C79281 +
                    (((C26498 * C98 + C79306 * C104) * C52140 +
                      (C26498 * C248 + C79306 * C517) * C52053 +
                      C53468 * C52141 + C53738 * C52054) *
                         C79308 * C79027 * C4921 -
                     (C30347 * C52054 + C30032 * C52141 + C27520 * C52053 +
                      C27254 * C52140) *
                         C79308 * C79027 * C4922 +
                     (C27257 * C52140 + C27521 * C52053 +
                      (C26498 * C7477 + C79306 * C7478) * C52141 +
                      (C26498 * C7686 + C79306 * C8100) * C52054) *
                         C79308 * C79027 * C79259) *
                        C79253)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   (((C26498 * C96 + C79306 * C102) * C52140 +
                     (C26498 * C246 + C79306 * C515) * C52053 +
                     C53460 * C52141 + C53734 * C52054) *
                        C79308 * C79027 * C5561 -
                    (C30345 * C52054 + C30028 * C52141 + C27516 * C52053 +
                     C27246 * C52140) *
                        C79308 * C79027 * C5562 +
                    (C27249 * C52140 + C27517 * C52053 + C32045 * C52141 +
                     C32299 * C52054) *
                        C79308 * C79027 * C5563 -
                    (C34492 * C52054 + C34282 * C52141 + C31581 * C52053 +
                     C31432 * C52140) *
                        C79308 * C79027 * C5564 +
                    (C31435 * C52140 + C31582 * C52053 +
                     (C26498 * C34055 + C79306 * C34056) * C52141 +
                     (C26498 * C34199 + C79306 * C34487) * C52054) *
                        C79308 * C79027 * C5565) *
                   C78981) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C26498 * C96 + C79306 * C102) * C52140 +
                      (C26498 * C246 + C79306 * C515) * C52053 +
                      C53460 * C52141 + C53734 * C52054) *
                         C79308 * C79301 -
                     (C53735 * C52054 + C53463 * C52141 + C53734 * C52053 +
                      C53460 * C52140) *
                         C79308 * C79287 +
                     (C53463 * C52140 + C53735 * C52053 +
                      (C26498 * C10320 + C79306 * C10324) * C52141 +
                      (C26498 * C10428 + C79306 * C10620) * C52054) *
                         C79308 * C79262) *
                        C4921 +
                    ((C30028 * C52140 + C30345 * C52053 + C32043 * C52141 +
                      C32298 * C52054) *
                         C79308 * C79287 -
                     (C30345 * C52054 + C30028 * C52141 + C27516 * C52053 +
                      C27246 * C52140) *
                         C79308 * C79301 -
                     (C38370 * C52054 + C38160 * C52141 + C32298 * C52053 +
                      C32043 * C52140) *
                         C79308 * C79262) *
                        C4922 +
                    ((C27249 * C52140 + C27517 * C52053 + C32045 * C52141 +
                      C32299 * C52054) *
                         C79308 * C79301 -
                     (C32300 * C52054 + C32048 * C52141 + C32299 * C52053 +
                      C32045 * C52140) *
                         C79308 * C79287 +
                     (C32048 * C52140 + C32300 * C52053 +
                      (C26498 * C37933 + C79306 * C37934) * C52141 +
                      (C26498 * C38077 + C79306 * C38365) * C52054) *
                         C79308 * C79262) *
                        C79259) *
                   C78981) /
                      (p * q * std::sqrt(p + q));
    d2eezy[72] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C166 * C96 + C79308 * C167) * C52140 +
            (C166 * C246 + C79308 * C563) * C52053 +
            (C166 * C1682 + C79308 * C1792) * C52141 +
            (C166 * C1906 + C79308 * C2396) * C52054) *
               C79306 * C79027 * C79300 -
           ((C166 * C4165 + C79308 * C4715) * C52054 +
            (C166 * C3931 + C79308 * C4047) * C52141 +
            (C166 * C973 + C79308 * C1463) * C52053 +
            (C166 * C749 + C79308 * C859) * C52140) *
               C79306 * C79027 * C79285 +
           ((C166 * C750 + C79308 * C860) * C52140 +
            (C166 * C974 + C79308 * C1464) * C52053 +
            (C166 * C6044 + C79308 * C6142) * C52141 +
            (C166 * C6228 + C79308 * C6640) * C52054) *
               C79306 * C79027 * C79259) *
              C745 +
          ((C892 * C52140 + C1483 * C52053 + C4064 * C52141 + C4726 * C52054) *
               C79306 * C79027 * C79285 -
           (C2416 * C52054 + C1825 * C52141 + C582 * C52053 + C196 * C52140) *
               C79306 * C79027 * C79300 -
           (C8204 * C52054 + C7588 * C52141 + C1484 * C52053 + C893 * C52140) *
               C79306 * C79027 * C79259) *
              C746 +
          ((C199 * C52140 + C583 * C52053 + C1828 * C52141 + C2418 * C52054) *
               C79306 * C79027 * C79300 -
           (C4727 * C52054 + C4067 * C52141 + C1485 * C52053 + C895 * C52140) *
               C79306 * C79027 * C79285 +
           (C898 * C52140 + C1486 * C52053 +
            (C166 * C7477 + C79308 * C7580) * C52141 +
            (C166 * C7686 + C79308 * C8199) * C52054) *
               C79306 * C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C166 * C96 + C79308 * C167) * C52140 +
           (C166 * C246 + C79308 * C563) * C52053 +
           (C166 * C1682 + C79308 * C1792) * C52141 +
           (C166 * C1906 + C79308 * C2396) * C52054) *
              C79306 * C79027 * C79009 * C87 -
          (C2416 * C52054 + C1825 * C52141 + C582 * C52053 + C196 * C52140) *
              C79306 * C79027 * C79009 * C88 +
          (C199 * C52140 + C583 * C52053 + C1828 * C52141 + C2418 * C52054) *
              C79306 * C79027 * C79009 * C89 -
          (C3758 * C52054 + C3334 * C52141 + C584 * C52053 + C200 * C52140) *
              C79306 * C79027 * C79009 * C90 +
          (C203 * C52140 + C585 * C52053 +
           (C166 * C3255 + C79308 * C3326) * C52141 +
           (C166 * C3400 + C79308 * C3753) * C52054) *
              C79306 * C79027 * C79009 * C91)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C166 * C96 + C79308 * C167) * C52140 +
            (C166 * C246 + C79308 * C563) * C52053 + C53280 * C52141 +
            C53818 * C52054) *
               C79306 * C79301 -
           (C53819 * C52054 + C53283 * C52141 + C53818 * C52053 +
            C53280 * C52140) *
               C79306 * C79287 +
           (C53283 * C52140 + C53819 * C52053 +
            (C166 * C10320 + C79308 * C10378) * C52141 +
            (C166 * C10428 + C79308 * C10666) * C52054) *
               C79306 * C79262) *
              C79009 * C745 +
          ((C1825 * C52140 + C2416 * C52053 + C1826 * C52141 + C2417 * C52054) *
               C79306 * C79287 -
           (C2416 * C52054 + C1825 * C52141 + C582 * C52053 + C196 * C52140) *
               C79306 * C79301 -
           (C12224 * C52054 + C11800 * C52141 + C2417 * C52053 +
            C1826 * C52140) *
               C79306 * C79262) *
              C79009 * C746 +
          ((C199 * C52140 + C583 * C52053 + C1828 * C52141 + C2418 * C52054) *
               C79306 * C79301 -
           (C2419 * C52054 + C1831 * C52141 + C2418 * C52053 + C1828 * C52140) *
               C79306 * C79287 +
           (C1831 * C52140 + C2419 * C52053 +
            (C166 * C11721 + C79308 * C11792) * C52141 +
            (C166 * C11866 + C79308 * C12219) * C52054) *
               C79306 * C79262) *
              C79009 * C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C166 * C96 + C79308 * C167) * C52140 +
            (C166 * C246 + C79308 * C563) * C52053 + C53280 * C52141 +
            C53818 * C52054) *
               C79306 * C79027 * C4921 -
           (C55930 * C52054 + C55322 * C52141 +
            (C166 * C973 + C79308 * C1463) * C52053 +
            (C166 * C749 + C79308 * C859) * C52140) *
               C79306 * C79027 * C4922 +
           ((C166 * C750 + C79308 * C860) * C52140 +
            (C166 * C974 + C79308 * C1464) * C52053 +
            (C166 * C6044 + C79308 * C6142) * C52141 +
            (C166 * C6228 + C79308 * C6640) * C52054) *
               C79306 * C79027 * C79259) *
              C79297 +
          ((C892 * C52140 + C1483 * C52053 + C4064 * C52141 + C4726 * C52054) *
               C79306 * C79027 * C4922 -
           (C2416 * C52054 + C1825 * C52141 + C582 * C52053 + C196 * C52140) *
               C79306 * C79027 * C4921 -
           (C8204 * C52054 + C7588 * C52141 + C1484 * C52053 + C893 * C52140) *
               C79306 * C79027 * C79259) *
              C79281 +
          ((C199 * C52140 + C583 * C52053 + C1828 * C52141 + C2418 * C52054) *
               C79306 * C79027 * C4921 -
           (C4727 * C52054 + C4067 * C52141 + C1485 * C52053 + C895 * C52140) *
               C79306 * C79027 * C4922 +
           (C898 * C52140 + C1486 * C52053 +
            (C166 * C7477 + C79308 * C7580) * C52141 +
            (C166 * C7686 + C79308 * C8199) * C52054) *
               C79306 * C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C166 * C96 + C79308 * C167) * C52140 +
           (C166 * C246 + C79308 * C563) * C52053 + C53280 * C52141 +
           C53818 * C52054) *
              C79306 * C79027 * C5561 -
          (C55930 * C52054 + C55322 * C52141 +
           (C166 * C973 + C79308 * C1463) * C52053 +
           (C166 * C749 + C79308 * C859) * C52140) *
              C79306 * C79027 * C5562 +
          ((C166 * C750 + C79308 * C860) * C52140 +
           (C166 * C974 + C79308 * C1464) * C52053 +
           (C166 * C6044 + C79308 * C6142) * C52141 +
           (C166 * C6228 + C79308 * C6640) * C52054) *
              C79306 * C79027 * C5563 -
          ((C166 * C8521 + C79308 * C8865) * C52054 +
           (C166 * C8377 + C79308 * C8451) * C52141 +
           (C166 * C5676 + C79308 * C5914) * C52053 +
           (C166 * C5568 + C79308 * C5626) * C52140) *
              C79306 * C79027 * C5564 +
          ((C166 * C5569 + C79308 * C5627) * C52140 +
           (C166 * C5677 + C79308 * C5915) * C52053 +
           (C166 * C34055 + C79308 * C34131) * C52141 +
           (C166 * C34199 + C79308 * C34559) * C52054) *
              C79306 * C79027 * C5565) *
         C78981) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C166 * C96 + C79308 * C167) * C52140 +
            (C166 * C246 + C79308 * C563) * C52053 + C53280 * C52141 +
            C53818 * C52054) *
               C79306 * C79301 -
           (C53819 * C52054 + C53283 * C52141 + C53818 * C52053 +
            C53280 * C52140) *
               C79306 * C79287 +
           (C53283 * C52140 + C53819 * C52053 +
            (C166 * C10320 + C79308 * C10378) * C52141 +
            (C166 * C10428 + C79308 * C10666) * C52054) *
               C79306 * C79262) *
              C4921 +
          ((C55322 * C52140 + C55930 * C52053 + C57244 * C52141 +
            C57731 * C52054) *
               C79306 * C79287 -
           (C55930 * C52054 + C55322 * C52141 +
            (C166 * C973 + C79308 * C1463) * C52053 +
            (C166 * C749 + C79308 * C859) * C52140) *
               C79306 * C79301 -
           ((C166 * C12509 + C79308 * C12853) * C52054 +
            (C166 * C12365 + C79308 * C12439) * C52141 + C57731 * C52053 +
            C57244 * C52140) *
               C79306 * C79262) *
              C4922 +
          (((C166 * C750 + C79308 * C860) * C52140 +
            (C166 * C974 + C79308 * C1464) * C52053 + C57246 * C52141 +
            C57732 * C52054) *
               C79306 * C79301 -
           (C57733 * C52054 + C57249 * C52141 + C57732 * C52053 +
            C57246 * C52140) *
               C79306 * C79287 +
           (C57249 * C52140 + C57733 * C52053 +
            (C166 * C37933 + C79308 * C38009) * C52141 +
            (C166 * C38077 + C79308 * C38437) * C52054) *
               C79306 * C79262) *
              C79259) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eezz[72] += (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   (((C52394 * C96 + C52397 + C52397 + C52053 * C632 +
                      C52395 * C1682 + C52398 + C52398 + C52054 * C2498) *
                         C79308 * C79306 * C79027 * C79300 -
                     (C52395 * C3931 + C53073 + C53073 + C52054 * C4827 +
                      C52394 * C749 + C53074 + C53074 + C52053 * C1565) *
                         C79308 * C79306 * C79027 * C79285 +
                     (C52394 * C750 + C53075 + C53075 + C52053 * C1566 +
                      C52395 * C6044 + C53076 + C53076 + C52054 * C6720) *
                         C79308 * C79306 * C79027 * C79259) *
                        C745 +
                    ((C52394 * C748 + C53077 + C53077 + C52053 * C1564 +
                      C52395 * C3932 + C53078 + C53078 + C52054 * C4828) *
                         C79308 * C79306 * C79027 * C79285 -
                     (C52395 * C1681 + C52399 + C52399 + C52054 * C2497 +
                      C52394 * C97 + C52400 + C52400 + C52053 * C633) *
                         C79308 * C79306 * C79027 * C79300 -
                     (C52395 * C6043 + C53079 + C53079 + C52054 * C6719 +
                      C52394 * C751 + C53080 + C53080 + C52053 * C1567) *
                         C79308 * C79306 * C79027 * C79259) *
                        C746 +
                    ((C52394 * C98 + C52401 + C52401 + C52053 * C634 +
                      C52395 * C1685 + C52402 + C52402 + C52054 * C2501) *
                         C79308 * C79306 * C79027 * C79300 -
                     (C52395 * C3933 + C53081 + C53081 + C52054 * C4829 +
                      C52394 * C752 + C53082 + C53082 + C52053 * C1568) *
                         C79308 * C79306 * C79027 * C79285 +
                     (C52394 * C753 + C53083 + C53083 + C52053 * C1569 +
                      C52395 * C7477 + C53084 + C53084 + C52054 * C8303) *
                         C79308 * C79306 * C79027 * C79259) *
                        C79253)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   ((C52394 * C96 + C52397 + C52397 + C52053 * C632 +
                     C52395 * C1682 + C52398 + C52398 + C52054 * C2498) *
                        C79308 * C79306 * C79027 * C79009 * C87 -
                    (C52395 * C1681 + C52399 + C52399 + C52054 * C2497 +
                     C52394 * C97 + C52400 + C52400 + C52053 * C633) *
                        C79308 * C79306 * C79027 * C79009 * C88 +
                    (C52394 * C98 + C52401 + C52401 + C52053 * C634 +
                     C52395 * C1685 + C52402 + C52402 + C52054 * C2501) *
                        C79308 * C79306 * C79027 * C79009 * C89 -
                    (C52395 * C1687 + C52403 + C52403 + C52054 * C2503 +
                     C52394 * C99 + C52404 + C52404 + C52053 * C635) *
                        C79308 * C79306 * C79027 * C79009 * C90 +
                    (C52394 * C100 + C52405 + C52405 + C52053 * C636 +
                     C52395 * C3255 + C52406 + C52406 + C52054 * C3825) *
                        C79308 * C79306 * C79027 * C79009 * C91)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C52394 * C96 + C52397 + C52397 + C52053 * C632 +
                      C52395 * C1682 + C52398 + C52398 + C52054 * C2498) *
                         C79308 * C79306 * C79301 -
                     (C52395 * C1683 + C53894 + C53894 + C52054 * C2499 +
                      C52394 * C1682 + C53895 + C53895 + C52053 * C2498) *
                         C79308 * C79306 * C79287 +
                     (C52394 * C1683 + C53896 + C53896 + C52053 * C2499 +
                      C52395 * C10320 + C53897 + C53897 + C52054 * C10712) *
                         C79308 * C79306 * C79262) *
                        C79009 * C745 +
                    ((C52394 * C1681 + C53898 + C53898 + C52053 * C2497 +
                      C52395 * C1684 + C53899 + C53899 + C52054 * C2500) *
                         C79308 * C79306 * C79287 -
                     (C52395 * C1681 + C52399 + C52399 + C52054 * C2497 +
                      C52394 * C97 + C52400 + C52400 + C52053 * C633) *
                         C79308 * C79306 * C79301 -
                     (C52395 * C10319 + C53900 + C53900 + C52054 * C10711 +
                      C52394 * C1684 + C53901 + C53901 + C52053 * C2500) *
                         C79308 * C79306 * C79262) *
                        C79009 * C746 +
                    ((C52394 * C98 + C52401 + C52401 + C52053 * C634 +
                      C52395 * C1685 + C52402 + C52402 + C52054 * C2501) *
                         C79308 * C79306 * C79301 -
                     (C52395 * C1686 + C53902 + C53902 + C52054 * C2502 +
                      C52394 * C1685 + C53903 + C53903 + C52053 * C2501) *
                         C79308 * C79306 * C79287 +
                     (C52394 * C1686 + C53904 + C53904 + C52053 * C2502 +
                      C52395 * C11721 + C53905 + C53905 + C52054 * C12291) *
                         C79308 * C79306 * C79262) *
                        C79009 * C79253)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   (((C52394 * C96 + C52397 + C52397 + C52053 * C632 +
                      C52395 * C1682 + C52398 + C52398 + C52054 * C2498) *
                         C79308 * C79306 * C79027 * C4921 -
                     (C52395 * C3931 + C53073 + C53073 + C52054 * C4827 +
                      C52394 * C749 + C53074 + C53074 + C52053 * C1565) *
                         C79308 * C79306 * C79027 * C4922 +
                     (C52394 * C750 + C53075 + C53075 + C52053 * C1566 +
                      C52395 * C6044 + C53076 + C53076 + C52054 * C6720) *
                         C79308 * C79306 * C79027 * C79259) *
                        C79297 +
                    ((C52394 * C748 + C53077 + C53077 + C52053 * C1564 +
                      C52395 * C3932 + C53078 + C53078 + C52054 * C4828) *
                         C79308 * C79306 * C79027 * C4922 -
                     (C52395 * C1681 + C52399 + C52399 + C52054 * C2497 +
                      C52394 * C97 + C52400 + C52400 + C52053 * C633) *
                         C79308 * C79306 * C79027 * C4921 -
                     (C52395 * C6043 + C53079 + C53079 + C52054 * C6719 +
                      C52394 * C751 + C53080 + C53080 + C52053 * C1567) *
                         C79308 * C79306 * C79027 * C79259) *
                        C79281 +
                    ((C52394 * C98 + C52401 + C52401 + C52053 * C634 +
                      C52395 * C1685 + C52402 + C52402 + C52054 * C2501) *
                         C79308 * C79306 * C79027 * C4921 -
                     (C52395 * C3933 + C53081 + C53081 + C52054 * C4829 +
                      C52394 * C752 + C53082 + C53082 + C52053 * C1568) *
                         C79308 * C79306 * C79027 * C4922 +
                     (C52394 * C753 + C53083 + C53083 + C52053 * C1569 +
                      C52395 * C7477 + C53084 + C53084 + C52054 * C8303) *
                         C79308 * C79306 * C79027 * C79259) *
                        C79253)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                   ((C52394 * C96 + C52397 + C52397 + C52053 * C632 +
                     C52395 * C1682 + C52398 + C52398 + C52054 * C2498) *
                        C79308 * C79306 * C79027 * C5561 -
                    (C52395 * C3931 + C53073 + C53073 + C52054 * C4827 +
                     C52394 * C749 + C53074 + C53074 + C52053 * C1565) *
                        C79308 * C79306 * C79027 * C5562 +
                    (C52394 * C750 + C53075 + C53075 + C52053 * C1566 +
                     C52395 * C6044 + C53076 + C53076 + C52054 * C6720) *
                        C79308 * C79306 * C79027 * C5563 -
                    (C52395 * C8377 + C57080 + C57080 + C52054 * C8933 +
                     C52394 * C5568 + C57081 + C57081 + C52053 * C5960) *
                        C79308 * C79306 * C79027 * C5564 +
                    (C52394 * C5569 + C57082 + C57082 + C52053 * C5961 +
                     C52395 * C34055 + C57083 + C57083 + C52054 * C34626) *
                        C79308 * C79306 * C79027 * C5565) *
                   C78981) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C52394 * C96 + C52397 + C52397 + C52053 * C632 +
                      C52395 * C1682 + C52398 + C52398 + C52054 * C2498) *
                         C79308 * C79306 * C79301 -
                     (C52395 * C1683 + C53894 + C53894 + C52054 * C2499 +
                      C52394 * C1682 + C53895 + C53895 + C52053 * C2498) *
                         C79308 * C79306 * C79287 +
                     (C52394 * C1683 + C53896 + C53896 + C52053 * C2499 +
                      C52395 * C10320 + C53897 + C53897 + C52054 * C10712) *
                         C79308 * C79306 * C79262) *
                        C4921 +
                    ((C52394 * C3931 + C56029 + C56029 + C52053 * C4827 +
                      C52395 * C6042 + C56030 + C56030 + C52054 * C6718) *
                         C79308 * C79306 * C79287 -
                     (C52395 * C3931 + C53073 + C53073 + C52054 * C4827 +
                      C52394 * C749 + C53074 + C53074 + C52053 * C1565) *
                         C79308 * C79306 * C79301 -
                     (C52395 * C12365 + C57808 + C57808 + C52054 * C12921 +
                      C52394 * C6042 + C57809 + C57809 + C52053 * C6718) *
                         C79308 * C79306 * C79262) *
                        C4922 +
                    ((C52394 * C750 + C53075 + C53075 + C52053 * C1566 +
                      C52395 * C6044 + C53076 + C53076 + C52054 * C6720) *
                         C79308 * C79306 * C79301 -
                     (C52395 * C6045 + C57810 + C57810 + C52054 * C6721 +
                      C52394 * C6044 + C57811 + C57811 + C52053 * C6720) *
                         C79308 * C79306 * C79287 +
                     (C52394 * C6045 + C57812 + C57812 + C52053 * C6721 +
                      C52395 * C37933 + C57813 + C57813 + C52054 * C38504) *
                         C79308 * C79306 * C79262) *
                        C79259) *
                   C78981) /
                      (p * q * std::sqrt(p + q));
    d2eexx[73] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C52053 +
            C53184 * C52054) *
               C79308 * C79230 -
           (C53185 * C52054 + C53184 * C52053) * C79308 * C79114) *
              C79009 * C2605 +
          ((C53186 * C52053 + C53187 * C52054) * C79308 * C79114 -
           (C53186 * C52054 +
            (C26497 * C97 + C26503 + C26503 + C79306 * C109) * C52053) *
               C79308 * C79230) *
              C79009 * C2606 +
          (((C26497 * C98 + C26504 + C26504 + C79306 * C110) * C52053 +
            C53188 * C52054) *
               C79308 * C79230 -
           (C53189 * C52054 + C53188 * C52053) * C79308 * C79114) *
              C79009 * C2607 +
          ((C54573 * C52053 +
            (C26497 * C1688 + C54570 + C54570 + C79306 * C1704) * C52054) *
               C79308 * C79114 -
           (C54573 * C52054 +
            (C26497 * C99 + C26507 + C26507 + C79306 * C111) * C52053) *
               C79308 * C79230) *
              C79009 * C79263)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C52053 +
             C53184 * C52054) *
                C79308 * C79230 -
            (C53185 * C52054 + C53184 * C52053) * C79308 * C79114) *
               C4921 +
           ((C29703 * C52053 + C31774 * C52054) * C79308 * C79114 -
            (C29703 * C52054 + C26964 * C52053) * C79308 * C79230) *
               C4922 +
           ((C26965 * C52053 + C31775 * C52054) * C79308 * C79230 -
            (C31776 * C52054 + C31775 * C52053) * C79308 * C79114) *
               C79259) *
              C79215 +
          (((C53186 * C52053 + C53187 * C52054) * C79308 * C79114 -
            (C53186 * C52054 +
             (C26497 * C97 + C26503 + C26503 + C79306 * C109) * C52053) *
                C79308 * C79230) *
               C4921 +
           ((C26966 * C52053 + C29704 * C52054) * C79308 * C79230 -
            (C36469 * C52054 + C29704 * C52053) * C79308 * C79114) *
               C4922 +
           ((C33189 * C52053 +
             (C26497 * C6046 + C36466 + C36466 + C79306 * C6058) * C52054) *
                C79308 * C79114 -
            (C33189 * C52054 + C26967 * C52053) * C79308 * C79230) *
               C79259) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eexy[73] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C166 * C96 + C79308 * C167) * C26498 +
             (C166 * C102 + C79308 * C173) * C79306) *
                C52053 +
            (C53284 + C53285) * C52054) *
               C79230 -
           ((C53286 + C53287) * C52054 + (C53285 + C53284) * C52053) * C79114) *
              C79009 * C2605 +
          (((C53272 + C53273) * C52053 + (C53274 + C53275) * C52054) * C79114 -
           ((C53273 + C53272) * C52054 +
            (C197 * C79306 + C196 * C26498) * C52053) *
               C79230) *
              C79009 * C2606 +
          (((C199 * C26498 + C198 * C79306) * C52053 +
            (C53276 + C53277) * C52054) *
               C79230 -
           ((C53278 + C53279) * C52054 + (C53277 + C53276) * C52053) * C79114) *
              C79009 * C2607 +
          (((C54640 + C54641) * C52053 +
            ((C166 * C1688 + C79308 * C1798) * C26498 +
             (C166 * C1696 + C79308 * C1806) * C79306) *
                C52054) *
               C79114 -
           ((C54641 + C54640) * C52054 +
            (C201 * C79306 + C200 * C26498) * C52053) *
               C79230) *
              C79009 * C79263)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C166 * C96 + C79308 * C167) * C26498 +
              (C166 * C102 + C79308 * C173) * C79306) *
                 C52053 +
             (C53284 + C53285) * C52054) *
                C79230 -
            ((C53286 + C53287) * C52054 + (C53285 + C53284) * C52053) *
                C79114) *
               C4921 +
           (((C55324 + C55325) * C52053 + (C57250 + C57251) * C52054) * C79114 -
            ((C55325 + C55324) * C52054 +
             ((C166 * C757 + C79308 * C867) * C79306 +
              (C166 * C749 + C79308 * C859) * C26498) *
                 C52053) *
                C79230) *
               C4922 +
           ((((C166 * C750 + C79308 * C860) * C26498 +
              (C166 * C758 + C79308 * C868) * C79306) *
                 C52053 +
             (C57252 + C57253) * C52054) *
                C79230 -
            ((C57254 + C57255) * C52054 + (C57253 + C57252) * C52053) *
                C79114) *
               C79259) *
              C79215 +
          ((((C53272 + C53273) * C52053 + (C53274 + C53275) * C52054) * C79114 -
            ((C53273 + C53272) * C52054 +
             (C197 * C79306 + C196 * C26498) * C52053) *
                C79230) *
               C4921 +
           (((C892 * C26498 + C891 * C79306) * C52053 +
             (C55318 + C55319) * C52054) *
                C79230 -
            ((C10927 * C79306 + C10928 * C26498) * C52054 +
             (C55319 + C55318) * C52053) *
                C79114) *
               C4922 +
           (((C58606 + C58607) * C52053 +
             ((C166 * C6046 + C79308 * C6144) * C26498 +
              (C166 * C6052 + C79308 * C6150) * C79306) *
                 C52054) *
                C79114 -
            ((C58607 + C58606) * C52054 +
             (C894 * C79306 + C893 * C26498) * C52053) *
                C79230) *
               C79259) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eexz[73] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
                C26498 +
            (C52140 * C102 + C52053 * C252 + C52141 * C1690 + C52054 * C1914) *
                C79306) *
               C79308 * C79230 -
           ((C52141 * C1691 + C52054 * C1915 + C52140 * C1690 +
             C52053 * C1914) *
                C79306 +
            (C52141 * C1683 + C52054 * C1907 + C52140 * C1682 +
             C52053 * C1906) *
                C26498) *
               C79308 * C79114) *
              C79009 * C2605 +
          (((C52140 * C1681 + C52053 * C1905 + C52141 * C1684 +
             C52054 * C1908) *
                C26498 +
            (C52140 * C1689 + C52053 * C1913 + C52141 * C1692 +
             C52054 * C1916) *
                C79306) *
               C79308 * C79114 -
           ((C52141 * C1689 + C52054 * C1913 + C52140 * C103 + C52053 * C253) *
                C79306 +
            (C52141 * C1681 + C52054 * C1905 + C52140 * C97 + C52053 * C247) *
                C26498) *
               C79308 * C79230) *
              C79009 * C2606 +
          (((C52140 * C98 + C52053 * C248 + C52141 * C1685 + C52054 * C1909) *
                C26498 +
            (C52140 * C104 + C52053 * C254 + C52141 * C1693 + C52054 * C1917) *
                C79306) *
               C79308 * C79230 -
           ((C52141 * C1694 + C52054 * C1918 + C52140 * C1693 +
             C52053 * C1917) *
                C79306 +
            (C52141 * C1686 + C52054 * C1910 + C52140 * C1685 +
             C52053 * C1909) *
                C26498) *
               C79308 * C79114) *
              C79009 * C2607 +
          (((C52140 * C1687 + C52053 * C1911 + C52141 * C1688 +
             C52054 * C1912) *
                C26498 +
            (C52140 * C1695 + C52053 * C1919 + C52141 * C1696 +
             C52054 * C1920) *
                C79306) *
               C79308 * C79114 -
           ((C52141 * C1695 + C52054 * C1919 + C52140 * C105 + C52053 * C255) *
                C79306 +
            (C52141 * C1687 + C52054 * C1911 + C52140 * C99 + C52053 * C249) *
                C26498) *
               C79308 * C79230) *
              C79009 * C79263)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
                 C26498 +
             (C52140 * C102 + C52053 * C252 + C52141 * C1690 + C52054 * C1914) *
                 C79306) *
                C79308 * C79230 -
            ((C52141 * C1691 + C52054 * C1915 + C52140 * C1690 +
              C52053 * C1914) *
                 C79306 +
             (C52141 * C1683 + C52054 * C1907 + C52140 * C1682 +
              C52053 * C1906) *
                 C26498) *
                C79308 * C79114) *
               C4921 +
           (((C52140 * C3931 + C52053 * C4165 + C52141 * C6042 +
              C52054 * C6226) *
                 C26498 +
             (C52140 * C3935 + C52053 * C4169 + C52141 * C6048 +
              C52054 * C6232) *
                 C79306) *
                C79308 * C79114 -
            ((C52141 * C3935 + C52054 * C4169 + C52140 * C757 + C52053 * C981) *
                 C79306 +
             (C52141 * C3931 + C52054 * C4165 + C52140 * C749 + C52053 * C973) *
                 C26498) *
                C79308 * C79230) *
               C4922 +
           (((C52140 * C750 + C52053 * C974 + C52141 * C6044 + C52054 * C6228) *
                 C26498 +
             (C52140 * C758 + C52053 * C982 + C52141 * C6050 + C52054 * C6234) *
                 C79306) *
                C79308 * C79230 -
            ((C52141 * C6051 + C52054 * C6235 + C52140 * C6050 +
              C52053 * C6234) *
                 C79306 +
             (C52141 * C6045 + C52054 * C6229 + C52140 * C6044 +
              C52053 * C6228) *
                 C26498) *
                C79308 * C79114) *
               C79259) *
              C79215 +
          ((((C52140 * C1681 + C52053 * C1905 + C52141 * C1684 +
              C52054 * C1908) *
                 C26498 +
             (C52140 * C1689 + C52053 * C1913 + C52141 * C1692 +
              C52054 * C1916) *
                 C79306) *
                C79308 * C79114 -
            ((C52141 * C1689 + C52054 * C1913 + C52140 * C103 + C52053 * C253) *
                 C79306 +
             (C52141 * C1681 + C52054 * C1905 + C52140 * C97 + C52053 * C247) *
                 C26498) *
                C79308 * C79230) *
               C4921 +
           (((C52140 * C748 + C52053 * C972 + C52141 * C3932 + C52054 * C4166) *
                 C26498 +
             (C52140 * C756 + C52053 * C980 + C52141 * C3936 + C52054 * C4170) *
                 C79306) *
                C79308 * C79230 -
            ((C52141 * C6047 + C52054 * C6231 + C52140 * C3936 +
              C52053 * C4170) *
                 C79306 +
             (C52141 * C6041 + C52054 * C6225 + C52140 * C3932 +
              C52053 * C4166) *
                 C26498) *
                C79308 * C79114) *
               C4922 +
           (((C52140 * C6043 + C52053 * C6227 + C52141 * C6046 +
              C52054 * C6230) *
                 C26498 +
             (C52140 * C6049 + C52053 * C6233 + C52141 * C6052 +
              C52054 * C6236) *
                 C79306) *
                C79308 * C79114 -
            ((C52141 * C6049 + C52054 * C6233 + C52140 * C759 + C52053 * C983) *
                 C79306 +
             (C52141 * C6043 + C52054 * C6227 + C52140 * C751 + C52053 * C975) *
                 C26498) *
                C79308 * C79230) *
               C79259) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eeyx[73] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C26498 * C96 + C79306 * C102) * C166 +
             (C26498 * C167 + C79306 * C324) * C79308) *
                C52053 +
            (C53472 + C53473) * C52054) *
               C79230 -
           ((C53474 + C53475) * C52054 + (C53473 + C53472) * C52053) * C79114) *
              C79009 * C2605 +
          (((C53476 + C53477) * C52053 + (C53478 + C53479) * C52054) * C79114 -
           ((C53477 + C53476) * C52054 +
            ((C26498 * C168 + C79306 * C325) * C79308 +
             (C26498 * C97 + C79306 * C103) * C166) *
                C52053) *
               C79230) *
              C79009 * C2606 +
          ((((C26498 * C98 + C79306 * C104) * C166 +
             (C26498 * C169 + C79306 * C326) * C79308) *
                C52053 +
            (C53480 + C53481) * C52054) *
               C79230 -
           ((C53482 + C53483) * C52054 + (C53481 + C53480) * C52053) * C79114) *
              C79009 * C2607 +
          (((C54780 + C54781) * C52053 +
            ((C26498 * C1688 + C79306 * C1696) * C166 +
             (C26498 * C1798 + C79306 * C2026) * C79308) *
                C52054) *
               C79114 -
           ((C54781 + C54780) * C52054 +
            ((C26498 * C170 + C79306 * C327) * C79308 +
             (C26498 * C99 + C79306 * C105) * C166) *
                C52053) *
               C79230) *
              C79009 * C79263)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C26498 * C96 + C79306 * C102) * C166 +
              (C26498 * C167 + C79306 * C324) * C79308) *
                 C52053 +
             (C53472 + C53473) * C52054) *
                C79230 -
            ((C53474 + C53475) * C52054 + (C53473 + C53472) * C52053) *
                C79114) *
               C4921 +
           (((C55522 + C55523) * C52053 + (C57404 + C57405) * C52054) * C79114 -
            ((C55523 + C55522) * C52054 +
             (C27247 * C79308 + C27246 * C166) * C52053) *
                C79230) *
               C4922 +
           (((C27249 * C166 + C27248 * C79308) * C52053 +
             (C57406 + C57407) * C52054) *
                C79230 -
            ((C57408 + C57409) * C52054 + (C57407 + C57406) * C52053) *
                C79114) *
               C79259) *
              C79215 +
          ((((C53476 + C53477) * C52053 + (C53478 + C53479) * C52054) * C79114 -
            ((C53477 + C53476) * C52054 +
             ((C26498 * C168 + C79306 * C325) * C79308 +
              (C26498 * C97 + C79306 * C103) * C166) *
                 C52053) *
                C79230) *
               C4921 +
           (((C27250 * C166 + C27251 * C79308) * C52053 +
             (C55524 + C55525) * C52054) *
                C79230 -
            ((C36771 * C79308 + C36772 * C166) * C52054 +
             (C55525 + C55524) * C52053) *
                C79114) *
               C4922 +
           (((C58804 + C58805) * C52053 +
             ((C26498 * C6046 + C79306 * C6052) * C166 +
              (C26498 * C6144 + C79306 * C6316) * C79308) *
                 C52054) *
                C79114 -
            ((C58805 + C58804) * C52054 +
             (C27253 * C79308 + C27252 * C166) * C52053) *
                C79230) *
               C79259) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eeyy[73] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C372 * C96 + C380 + C380 + C79308 * C373) * C79306 * C52053 +
            C53572 * C52054) *
               C79230 -
           (C53573 * C52054 + C53572 * C52053) * C79114) *
              C79009 * C2605 +
          ((C53562 * C52053 + C53563 * C52054) * C79114 -
           (C53562 * C52054 + C402 * C79306 * C52053) * C79230) *
              C79009 * C2606 +
          ((C403 * C79306 * C52053 + C53564 * C52054) * C79230 -
           (C53565 * C52054 + C53564 * C52053) * C79114) *
              C79009 * C2607 +
          ((C54848 * C52053 +
            (C372 * C1688 + C2125 + C2125 + C79308 * C2108) * C79306 * C52054) *
               C79114 -
           (C54848 * C52054 + C404 * C79306 * C52053) * C79230) *
              C79009 * C79263)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C372 * C96 + C380 + C380 + C79308 * C373) * C79306 * C52053 +
             C53572 * C52054) *
                C79230 -
            (C53573 * C52054 + C53572 * C52053) * C79114) *
               C4921 +
           ((C55633 * C52053 + C57500 * C52054) * C79114 -
            (C55633 * C52054 +
             (C372 * C749 + C1180 + C1180 + C79308 * C1169) * C79306 * C52053) *
                C79230) *
               C4922 +
           (((C372 * C750 + C1181 + C1181 + C79308 * C1170) * C79306 * C52053 +
             C57501 * C52054) *
                C79230 -
            (C57502 * C52054 + C57501 * C52053) * C79114) *
               C79259) *
              C79215 +
          (((C53562 * C52053 + C53563 * C52054) * C79114 -
            (C53562 * C52054 + C402 * C79306 * C52053) * C79230) *
               C4921 +
           ((C1201 * C79306 * C52053 + C55628 * C52054) * C79230 -
            (C11238 * C79306 * C52054 + C55628 * C52053) * C79114) *
               C4922 +
           ((C58904 * C52053 + (C372 * C6046 + C6403 + C6403 + C79308 * C6396) *
                                   C79306 * C52054) *
                C79114 -
            (C58904 * C52054 + C1202 * C79306 * C52053) * C79230) *
               C79259) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[73] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
                C166 +
            (C52140 * C167 + C52053 * C447 + C52141 * C1792 + C52054 * C2212) *
                C79308) *
               C79306 * C79230 -
           ((C52141 * C1793 + C52054 * C2213 + C52140 * C1792 +
             C52053 * C2212) *
                C79308 +
            (C52141 * C1683 + C52054 * C1907 + C52140 * C1682 +
             C52053 * C1906) *
                C166) *
               C79306 * C79114) *
              C79009 * C2605 +
          (((C52140 * C1681 + C52053 * C1905 + C52141 * C1684 +
             C52054 * C1908) *
                C166 +
            (C52140 * C1791 + C52053 * C2211 + C52141 * C1794 +
             C52054 * C2214) *
                C79308) *
               C79306 * C79114 -
           ((C52141 * C1791 + C52054 * C2211 + C52140 * C168 + C52053 * C448) *
                C79308 +
            (C52141 * C1681 + C52054 * C1905 + C52140 * C97 + C52053 * C247) *
                C166) *
               C79306 * C79230) *
              C79009 * C2606 +
          (((C52140 * C98 + C52053 * C248 + C52141 * C1685 + C52054 * C1909) *
                C166 +
            (C52140 * C169 + C52053 * C449 + C52141 * C1795 + C52054 * C2215) *
                C79308) *
               C79306 * C79230 -
           ((C52141 * C1796 + C52054 * C2216 + C52140 * C1795 +
             C52053 * C2215) *
                C79308 +
            (C52141 * C1686 + C52054 * C1910 + C52140 * C1685 +
             C52053 * C1909) *
                C166) *
               C79306 * C79114) *
              C79009 * C2607 +
          (((C52140 * C1687 + C52053 * C1911 + C52141 * C1688 +
             C52054 * C1912) *
                C166 +
            (C52140 * C1797 + C52053 * C2217 + C52141 * C1798 +
             C52054 * C2218) *
                C79308) *
               C79306 * C79114 -
           ((C52141 * C1797 + C52054 * C2217 + C52140 * C170 + C52053 * C450) *
                C79308 +
            (C52141 * C1687 + C52054 * C1911 + C52140 * C99 + C52053 * C249) *
                C166) *
               C79306 * C79230) *
              C79009 * C79263)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
                 C166 +
             (C52140 * C167 + C52053 * C447 + C52141 * C1792 + C52054 * C2212) *
                 C79308) *
                C79306 * C79230 -
            ((C52141 * C1793 + C52054 * C2213 + C52140 * C1792 +
              C52053 * C2212) *
                 C79308 +
             (C52141 * C1683 + C52054 * C1907 + C52140 * C1682 +
              C52053 * C1906) *
                 C166) *
                C79306 * C79114) *
               C4921 +
           (((C52140 * C3931 + C52053 * C4165 + C52141 * C6042 +
              C52054 * C6226) *
                 C166 +
             (C52140 * C4047 + C52053 * C4501 + C52141 * C6140 +
              C52054 * C6478) *
                 C79308) *
                C79306 * C79114 -
            ((C52141 * C4047 + C52054 * C4501 + C52140 * C859 +
              C52053 * C1279) *
                 C79308 +
             (C52141 * C3931 + C52054 * C4165 + C52140 * C749 + C52053 * C973) *
                 C166) *
                C79306 * C79230) *
               C4922 +
           (((C52140 * C750 + C52053 * C974 + C52141 * C6044 + C52054 * C6228) *
                 C166 +
             (C52140 * C860 + C52053 * C1280 + C52141 * C6142 +
              C52054 * C6480) *
                 C79308) *
                C79306 * C79230 -
            ((C52141 * C6143 + C52054 * C6481 + C52140 * C6142 +
              C52053 * C6480) *
                 C79308 +
             (C52141 * C6045 + C52054 * C6229 + C52140 * C6044 +
              C52053 * C6228) *
                 C166) *
                C79306 * C79114) *
               C79259) *
              C79215 +
          ((((C52140 * C1681 + C52053 * C1905 + C52141 * C1684 +
              C52054 * C1908) *
                 C166 +
             (C52140 * C1791 + C52053 * C2211 + C52141 * C1794 +
              C52054 * C2214) *
                 C79308) *
                C79306 * C79114 -
            ((C52141 * C1791 + C52054 * C2211 + C52140 * C168 + C52053 * C448) *
                 C79308 +
             (C52141 * C1681 + C52054 * C1905 + C52140 * C97 + C52053 * C247) *
                 C166) *
                C79306 * C79230) *
               C4921 +
           (((C52140 * C748 + C52053 * C972 + C52141 * C3932 + C52054 * C4166) *
                 C166 +
             (C52140 * C858 + C52053 * C1278 + C52141 * C4048 +
              C52054 * C4502) *
                 C79308) *
                C79306 * C79230 -
            ((C52141 * C6139 + C52054 * C6477 + C52140 * C4048 +
              C52053 * C4502) *
                 C79308 +
             (C52141 * C6041 + C52054 * C6225 + C52140 * C3932 +
              C52053 * C4166) *
                 C166) *
                C79306 * C79114) *
               C4922 +
           (((C52140 * C6043 + C52053 * C6227 + C52141 * C6046 +
              C52054 * C6230) *
                 C166 +
             (C52140 * C6141 + C52053 * C6479 + C52141 * C6144 +
              C52054 * C6482) *
                 C79308) *
                C79306 * C79114 -
            ((C52141 * C6141 + C52054 * C6479 + C52140 * C861 +
              C52053 * C1281) *
                 C79308 +
             (C52141 * C6043 + C52054 * C6227 + C52140 * C751 + C52053 * C975) *
                 C166) *
                C79306 * C79230) *
               C79259) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eezx[73] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C26498 * C96 + C79306 * C102) * C52140 +
                      (C26498 * C246 + C79306 * C515) * C52053 +
                      C53460 * C52141 + C53734 * C52054) *
                         C79308 * C79230 -
                     (C53735 * C52054 + C53463 * C52141 + C53734 * C52053 +
                      C53460 * C52140) *
                         C79308 * C79114) *
                        C79009 * C2605 +
                    ((C53464 * C52140 + C53736 * C52053 + C53466 * C52141 +
                      C53737 * C52054) *
                         C79308 * C79114 -
                     (C53736 * C52054 + C53464 * C52141 +
                      (C26498 * C247 + C79306 * C516) * C52053 +
                      (C26498 * C97 + C79306 * C103) * C52140) *
                         C79308 * C79230) *
                        C79009 * C2606 +
                    (((C26498 * C98 + C79306 * C104) * C52140 +
                      (C26498 * C248 + C79306 * C517) * C52053 +
                      C53468 * C52141 + C53738 * C52054) *
                         C79308 * C79230 -
                     (C53739 * C52054 + C53471 * C52141 + C53738 * C52053 +
                      C53468 * C52140) *
                         C79308 * C79114) *
                        C79009 * C2607 +
                    ((C54778 * C52140 + C54983 * C52053 +
                      (C26498 * C1688 + C79306 * C1696) * C52141 +
                      (C26498 * C1912 + C79306 * C2320) * C52054) *
                         C79308 * C79114 -
                     (C54983 * C52054 + C54778 * C52141 +
                      (C26498 * C249 + C79306 * C518) * C52053 +
                      (C26498 * C99 + C79306 * C105) * C52140) *
                         C79308 * C79230) *
                        C79009 * C79263)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((((C26498 * C96 + C79306 * C102) * C52140 +
                       (C26498 * C246 + C79306 * C515) * C52053 +
                       C53460 * C52141 + C53734 * C52054) *
                          C79308 * C79230 -
                      (C53735 * C52054 + C53463 * C52141 + C53734 * C52053 +
                       C53460 * C52140) *
                          C79308 * C79114) *
                         C4921 +
                     ((C30028 * C52140 + C30345 * C52053 + C32043 * C52141 +
                       C32298 * C52054) *
                          C79308 * C79114 -
                      (C30345 * C52054 + C30028 * C52141 + C27516 * C52053 +
                       C27246 * C52140) *
                          C79308 * C79230) *
                         C4922 +
                     ((C27249 * C52140 + C27517 * C52053 + C32045 * C52141 +
                       C32299 * C52054) *
                          C79308 * C79230 -
                      (C32300 * C52054 + C32048 * C52141 + C32299 * C52053 +
                       C32045 * C52140) *
                          C79308 * C79114) *
                         C79259) *
                        C79215 +
                    (((C53464 * C52140 + C53736 * C52053 + C53466 * C52141 +
                       C53737 * C52054) *
                          C79308 * C79114 -
                      (C53736 * C52054 + C53464 * C52141 +
                       (C26498 * C247 + C79306 * C516) * C52053 +
                       (C26498 * C97 + C79306 * C103) * C52140) *
                          C79308 * C79230) *
                         C4921 +
                     ((C27250 * C52140 + C27518 * C52053 + C30029 * C52141 +
                       C30346 * C52054) *
                          C79308 * C79230 -
                      (C37072 * C52054 + C36772 * C52141 + C30346 * C52053 +
                       C30029 * C52140) *
                          C79308 * C79114) *
                         C4922 +
                     ((C33492 * C52140 + C33792 * C52053 +
                       (C26498 * C6046 + C79306 * C6052) * C52141 +
                       (C26498 * C6230 + C79306 * C6562) * C52054) *
                          C79308 * C79114 -
                      (C33792 * C52054 + C33492 * C52141 + C27519 * C52053 +
                       C27252 * C52140) *
                          C79308 * C79230) *
                         C79259) *
                        C78992)) /
                      (p * q * std::sqrt(p + q));
    d2eezy[73] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C166 * C96 + C79308 * C167) * C52140 +
            (C166 * C246 + C79308 * C563) * C52053 + C53280 * C52141 +
            C53818 * C52054) *
               C79306 * C79230 -
           (C53819 * C52054 + C53283 * C52141 + C53818 * C52053 +
            C53280 * C52140) *
               C79306 * C79114) *
              C79009 * C2605 +
          ((C1825 * C52140 + C2416 * C52053 + C1826 * C52141 + C2417 * C52054) *
               C79306 * C79114 -
           (C2416 * C52054 + C1825 * C52141 + C582 * C52053 + C196 * C52140) *
               C79306 * C79230) *
              C79009 * C2606 +
          ((C199 * C52140 + C583 * C52053 + C1828 * C52141 + C2418 * C52054) *
               C79306 * C79230 -
           (C2419 * C52054 + C1831 * C52141 + C2418 * C52053 + C1828 * C52140) *
               C79306 * C79114) *
              C79009 * C2607 +
          ((C3334 * C52140 + C3758 * C52053 +
            (C166 * C1688 + C79308 * C1798) * C52141 +
            (C166 * C1912 + C79308 * C2402) * C52054) *
               C79306 * C79114 -
           (C3758 * C52054 + C3334 * C52141 + C584 * C52053 + C200 * C52140) *
               C79306 * C79230) *
              C79009 * C79263)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C166 * C96 + C79308 * C167) * C52140 +
             (C166 * C246 + C79308 * C563) * C52053 + C53280 * C52141 +
             C53818 * C52054) *
                C79306 * C79230 -
            (C53819 * C52054 + C53283 * C52141 + C53818 * C52053 +
             C53280 * C52140) *
                C79306 * C79114) *
               C4921 +
           ((C55322 * C52140 + C55930 * C52053 + C57244 * C52141 +
             C57731 * C52054) *
                C79306 * C79114 -
            (C55930 * C52054 + C55322 * C52141 +
             (C166 * C973 + C79308 * C1463) * C52053 +
             (C166 * C749 + C79308 * C859) * C52140) *
                C79306 * C79230) *
               C4922 +
           (((C166 * C750 + C79308 * C860) * C52140 +
             (C166 * C974 + C79308 * C1464) * C52053 + C57246 * C52141 +
             C57732 * C52054) *
                C79306 * C79230 -
            (C57733 * C52054 + C57249 * C52141 + C57732 * C52053 +
             C57246 * C52140) *
                C79306 * C79114) *
               C79259) *
              C79215 +
          (((C1825 * C52140 + C2416 * C52053 + C1826 * C52141 +
             C2417 * C52054) *
                C79306 * C79114 -
            (C2416 * C52054 + C1825 * C52141 + C582 * C52053 + C196 * C52140) *
                C79306 * C79230) *
               C4921 +
           ((C892 * C52140 + C1483 * C52053 + C4064 * C52141 + C4726 * C52054) *
                C79306 * C79230 -
            (C11544 * C52054 + C10928 * C52141 + C4726 * C52053 +
             C4064 * C52140) *
                C79306 * C79114) *
               C4922 +
           ((C7588 * C52140 + C8204 * C52053 +
             (C166 * C6046 + C79308 * C6144) * C52141 +
             (C166 * C6230 + C79308 * C6642) * C52054) *
                C79306 * C79114 -
            (C8204 * C52054 + C7588 * C52141 + C1484 * C52053 + C893 * C52140) *
                C79306 * C79230) *
               C79259) *
              C78992)) /
            (p * q * std::sqrt(p + q));
    d2eezz[73] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   (((C52394 * C96 + C52397 + C52397 + C52053 * C632 +
                      C52395 * C1682 + C52398 + C52398 + C52054 * C2498) *
                         C79308 * C79306 * C79230 -
                     (C52395 * C1683 + C53894 + C53894 + C52054 * C2499 +
                      C52394 * C1682 + C53895 + C53895 + C52053 * C2498) *
                         C79308 * C79306 * C79114) *
                        C79009 * C2605 +
                    ((C52394 * C1681 + C53898 + C53898 + C52053 * C2497 +
                      C52395 * C1684 + C53899 + C53899 + C52054 * C2500) *
                         C79308 * C79306 * C79114 -
                     (C52395 * C1681 + C52399 + C52399 + C52054 * C2497 +
                      C52394 * C97 + C52400 + C52400 + C52053 * C633) *
                         C79308 * C79306 * C79230) *
                        C79009 * C2606 +
                    ((C52394 * C98 + C52401 + C52401 + C52053 * C634 +
                      C52395 * C1685 + C52402 + C52402 + C52054 * C2501) *
                         C79308 * C79306 * C79230 -
                     (C52395 * C1686 + C53902 + C53902 + C52054 * C2502 +
                      C52394 * C1685 + C53903 + C53903 + C52053 * C2501) *
                         C79308 * C79306 * C79114) *
                        C79009 * C2607 +
                    ((C52394 * C1687 + C55116 + C55116 + C52053 * C2503 +
                      C52395 * C1688 + C55117 + C55117 + C52054 * C2504) *
                         C79308 * C79306 * C79114 -
                     (C52395 * C1687 + C52403 + C52403 + C52054 * C2503 +
                      C52394 * C99 + C52404 + C52404 + C52053 * C635) *
                         C79308 * C79306 * C79230) *
                        C79009 * C79263)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                   ((((C52394 * C96 + C52397 + C52397 + C52053 * C632 +
                       C52395 * C1682 + C52398 + C52398 + C52054 * C2498) *
                          C79308 * C79306 * C79230 -
                      (C52395 * C1683 + C53894 + C53894 + C52054 * C2499 +
                       C52394 * C1682 + C53895 + C53895 + C52053 * C2498) *
                          C79308 * C79306 * C79114) *
                         C4921 +
                     ((C52394 * C3931 + C56029 + C56029 + C52053 * C4827 +
                       C52395 * C6042 + C56030 + C56030 + C52054 * C6718) *
                          C79308 * C79306 * C79114 -
                      (C52395 * C3931 + C53073 + C53073 + C52054 * C4827 +
                       C52394 * C749 + C53074 + C53074 + C52053 * C1565) *
                          C79308 * C79306 * C79230) *
                         C4922 +
                     ((C52394 * C750 + C53075 + C53075 + C52053 * C1566 +
                       C52395 * C6044 + C53076 + C53076 + C52054 * C6720) *
                          C79308 * C79306 * C79230 -
                      (C52395 * C6045 + C57810 + C57810 + C52054 * C6721 +
                       C52394 * C6044 + C57811 + C57811 + C52053 * C6720) *
                          C79308 * C79306 * C79114) *
                         C79259) *
                        C79215 +
                    (((C52394 * C1681 + C53898 + C53898 + C52053 * C2497 +
                       C52395 * C1684 + C53899 + C53899 + C52054 * C2500) *
                          C79308 * C79306 * C79114 -
                      (C52395 * C1681 + C52399 + C52399 + C52054 * C2497 +
                       C52394 * C97 + C52400 + C52400 + C52053 * C633) *
                          C79308 * C79306 * C79230) *
                         C4921 +
                     ((C52394 * C748 + C53077 + C53077 + C52053 * C1564 +
                       C52395 * C3932 + C53078 + C53078 + C52054 * C4828) *
                          C79308 * C79306 * C79230 -
                      (C52395 * C6041 + C56031 + C56031 + C52054 * C6717 +
                       C52394 * C3932 + C56032 + C56032 + C52053 * C4828) *
                          C79308 * C79306 * C79114) *
                         C4922 +
                     ((C52394 * C6043 + C59297 + C59297 + C52053 * C6719 +
                       C52395 * C6046 + C59298 + C59298 + C52054 * C6722) *
                          C79308 * C79306 * C79114 -
                      (C52395 * C6043 + C53079 + C53079 + C52054 * C6719 +
                       C52394 * C751 + C53080 + C53080 + C52053 * C1567) *
                          C79308 * C79306 * C79230) *
                         C79259) *
                        C78992)) /
                      (p * q * std::sqrt(p + q));
    d2eexx[74] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C52053 +
           (C26497 * C1682 + C27761 + C27761 + C79306 * C1698) * C52054) *
              C79308 * C79027 * C79009 * C87 -
          ((C26497 * C1681 + C27764 + C27764 + C79306 * C1697) * C52054 +
           (C26497 * C97 + C26503 + C26503 + C79306 * C109) * C52053) *
              C79308 * C79027 * C79009 * C88 +
          ((C26497 * C98 + C26504 + C26504 + C79306 * C110) * C52053 +
           (C26497 * C1685 + C27769 + C27769 + C79306 * C1701) * C52054) *
              C79308 * C79027 * C79009 * C89 -
          ((C26497 * C1687 + C29058 + C29058 + C79306 * C1703) * C52054 +
           (C26497 * C99 + C26507 + C26507 + C79306 * C111) * C52053) *
              C79308 * C79027 * C79009 * C90 +
          ((C26497 * C100 + C26508 + C26508 + C79306 * C112) * C52053 +
           (C26497 * C3255 + C52056 + C52056 + C79306 * C3257) * C52054) *
              C79308 * C79027 * C79009 * C91)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C52053 +
            (C26497 * C1682 + C27761 + C27761 + C79306 * C1698) * C52054) *
               C79308 * C79027 * C79300 -
           (C29703 * C52054 + C26964 * C52053) * C79308 * C79027 * C79285 +
           (C26965 * C52053 + C31775 * C52054) * C79308 * C79027 * C79259) *
              C745 +
          ((C26966 * C52053 + C29704 * C52054) * C79308 * C79027 * C79285 -
           ((C26497 * C1681 + C27764 + C27764 + C79306 * C1697) * C52054 +
            (C26497 * C97 + C26503 + C26503 + C79306 * C109) * C52053) *
               C79308 * C79027 * C79300 -
           (C33189 * C52054 + C26967 * C52053) * C79308 * C79027 * C79259) *
              C746 +
          (((C26497 * C98 + C26504 + C26504 + C79306 * C110) * C52053 +
            (C26497 * C1685 + C27769 + C27769 + C79306 * C1701) * C52054) *
               C79308 * C79027 * C79300 -
           (C29705 * C52054 + C26968 * C52053) * C79308 * C79027 * C79285 +
           (C26969 * C52053 +
            (C26497 * C7477 + C29696 + C29696 + C79306 * C7479) * C52054) *
               C79308 * C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C52053 +
            C53184 * C52054) *
               C79308 * C79027 * C4921 -
           (C29703 * C52054 + C26964 * C52053) * C79308 * C79027 * C4922 +
           (C26965 * C52053 + C31775 * C52054) * C79308 * C79027 * C79259) *
              C79297 +
          ((C26966 * C52053 + C29704 * C52054) * C79308 * C79027 * C4922 -
           (C53186 * C52054 +
            (C26497 * C97 + C26503 + C26503 + C79306 * C109) * C52053) *
               C79308 * C79027 * C4921 -
           (C33189 * C52054 + C26967 * C52053) * C79308 * C79027 * C79259) *
              C79281 +
          (((C26497 * C98 + C26504 + C26504 + C79306 * C110) * C52053 +
            C53188 * C52054) *
               C79308 * C79027 * C4921 -
           (C29705 * C52054 + C26968 * C52053) * C79308 * C79027 * C4922 +
           (C26969 * C52053 +
            (C26497 * C7477 + C29696 + C29696 + C79306 * C7479) * C52054) *
               C79308 * C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C26497 * C96 + C26500 + C26500 + C79306 * C108) * C52053 +
           C53184 * C52054) *
              C79308 * C79027 * C5561 -
          (C29703 * C52054 + C26964 * C52053) * C79308 * C79027 * C5562 +
          (C26965 * C52053 + C31775 * C52054) * C79308 * C79027 * C5563 -
          (C34064 * C52054 + C31273 * C52053) * C79308 * C79027 * C5564 +
          (C31274 * C52053 +
           (C26497 * C34055 + C34061 + C34061 + C79306 * C34057) * C52054) *
              C79308 * C79027 * C5565) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eexy[74] += (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                   ((((C166 * C96 + C79308 * C167) * C26498 +
                      (C166 * C102 + C79308 * C173) * C79306) *
                         C52053 +
                     ((C166 * C1682 + C79308 * C1792) * C26498 +
                      (C166 * C1690 + C79308 * C1800) * C79306) *
                         C52054) *
                        C79027 * C79009 * C87 -
                    ((C1824 * C79306 + C1825 * C26498) * C52054 +
                     (C197 * C79306 + C196 * C26498) * C52053) *
                        C79027 * C79009 * C88 +
                    ((C199 * C26498 + C198 * C79306) * C52053 +
                     (C1828 * C26498 + C1829 * C79306) * C52054) *
                        C79027 * C79009 * C89 -
                    ((C3333 * C79306 + C3334 * C26498) * C52054 +
                     (C201 * C79306 + C200 * C26498) * C52053) *
                        C79027 * C79009 * C90 +
                    ((C203 * C26498 + C202 * C79306) * C52053 +
                     ((C166 * C3255 + C79308 * C3326) * C26498 +
                      (C166 * C3256 + C79308 * C3327) * C79306) *
                         C52054) *
                        C79027 * C79009 * C91)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                   (((((C166 * C96 + C79308 * C167) * C26498 +
                       (C166 * C102 + C79308 * C173) * C79306) *
                          C52053 +
                      ((C166 * C1682 + C79308 * C1792) * C26498 +
                       (C166 * C1690 + C79308 * C1800) * C79306) *
                          C52054) *
                         C79027 * C79300 -
                     (((C166 * C3935 + C79308 * C4051) * C79306 +
                       (C166 * C3931 + C79308 * C4047) * C26498) *
                          C52054 +
                      ((C166 * C757 + C79308 * C867) * C79306 +
                       (C166 * C749 + C79308 * C859) * C26498) *
                          C52053) *
                         C79027 * C79285 +
                     (((C166 * C750 + C79308 * C860) * C26498 +
                       (C166 * C758 + C79308 * C868) * C79306) *
                          C52053 +
                      ((C166 * C6044 + C79308 * C6142) * C26498 +
                       (C166 * C6050 + C79308 * C6148) * C79306) *
                          C52054) *
                         C79027 * C79259) *
                        C745 +
                    (((C892 * C26498 + C891 * C79306) * C52053 +
                      (C4064 * C26498 + C4065 * C79306) * C52054) *
                         C79027 * C79285 -
                     ((C1824 * C79306 + C1825 * C26498) * C52054 +
                      (C197 * C79306 + C196 * C26498) * C52053) *
                         C79027 * C79300 -
                     ((C7587 * C79306 + C7588 * C26498) * C52054 +
                      (C894 * C79306 + C893 * C26498) * C52053) *
                         C79027 * C79259) *
                        C746 +
                    (((C199 * C26498 + C198 * C79306) * C52053 +
                      (C1828 * C26498 + C1829 * C79306) * C52054) *
                         C79027 * C79300 -
                     ((C4066 * C79306 + C4067 * C26498) * C52054 +
                      (C896 * C79306 + C895 * C26498) * C52053) *
                         C79027 * C79285 +
                     ((C898 * C26498 + C897 * C79306) * C52053 +
                      ((C166 * C7477 + C79308 * C7580) * C26498 +
                       (C166 * C7478 + C79308 * C7581) * C79306) *
                          C52054) *
                         C79027 * C79259) *
                        C79253)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                   (((((C166 * C96 + C79308 * C167) * C26498 +
                       (C166 * C102 + C79308 * C173) * C79306) *
                          C52053 +
                      (C53284 + C53285) * C52054) *
                         C79027 * C4921 -
                     ((C55325 + C55324) * C52054 +
                      ((C166 * C757 + C79308 * C867) * C79306 +
                       (C166 * C749 + C79308 * C859) * C26498) *
                          C52053) *
                         C79027 * C4922 +
                     (((C166 * C750 + C79308 * C860) * C26498 +
                       (C166 * C758 + C79308 * C868) * C79306) *
                          C52053 +
                      ((C166 * C6044 + C79308 * C6142) * C26498 +
                       (C166 * C6050 + C79308 * C6148) * C79306) *
                          C52054) *
                         C79027 * C79259) *
                        C79297 +
                    (((C892 * C26498 + C891 * C79306) * C52053 +
                      (C55318 + C55319) * C52054) *
                         C79027 * C4922 -
                     ((C53273 + C53272) * C52054 +
                      (C197 * C79306 + C196 * C26498) * C52053) *
                         C79027 * C4921 -
                     ((C7587 * C79306 + C7588 * C26498) * C52054 +
                      (C894 * C79306 + C893 * C26498) * C52053) *
                         C79027 * C79259) *
                        C79281 +
                    (((C199 * C26498 + C198 * C79306) * C52053 +
                      (C53276 + C53277) * C52054) *
                         C79027 * C4921 -
                     ((C55321 + C55320) * C52054 +
                      (C896 * C79306 + C895 * C26498) * C52053) *
                         C79027 * C4922 +
                     ((C898 * C26498 + C897 * C79306) * C52053 +
                      ((C166 * C7477 + C79308 * C7580) * C26498 +
                       (C166 * C7478 + C79308 * C7581) * C79306) *
                          C52054) *
                         C79027 * C79259) *
                        C79253)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                   ((((C166 * C96 + C79308 * C167) * C26498 +
                      (C166 * C102 + C79308 * C173) * C79306) *
                         C52053 +
                     (C53284 + C53285) * C52054) *
                        C79027 * C5561 -
                    ((C55325 + C55324) * C52054 +
                     ((C166 * C757 + C79308 * C867) * C79306 +
                      (C166 * C749 + C79308 * C859) * C26498) *
                         C52053) *
                        C79027 * C5562 +
                    (((C166 * C750 + C79308 * C860) * C26498 +
                      (C166 * C758 + C79308 * C868) * C79306) *
                         C52053 +
                     ((C166 * C6044 + C79308 * C6142) * C26498 +
                      (C166 * C6050 + C79308 * C6148) * C79306) *
                         C52054) *
                        C79027 * C5563 -
                    (((C166 * C8379 + C79308 * C8453) * C79306 +
                      (C166 * C8377 + C79308 * C8451) * C26498) *
                         C52054 +
                     ((C166 * C5572 + C79308 * C5630) * C79306 +
                      (C166 * C5568 + C79308 * C5626) * C26498) *
                         C52053) *
                        C79027 * C5564 +
                    (((C166 * C5569 + C79308 * C5627) * C26498 +
                      (C166 * C5573 + C79308 * C5631) * C79306) *
                         C52053 +
                     ((C166 * C34055 + C79308 * C34131) * C26498 +
                      (C166 * C34056 + C79308 * C34132) * C79306) *
                         C52054) *
                        C79027 * C5565) *
                   C78981) /
                      (p * q * std::sqrt(p + q));
    d2eexz[74] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
               C26498 +
           (C52140 * C102 + C52053 * C252 + C52141 * C1690 + C52054 * C1914) *
               C79306) *
              C79308 * C79027 * C79009 * C87 -
          ((C52141 * C1689 + C52054 * C1913 + C52140 * C103 + C52053 * C253) *
               C79306 +
           (C52141 * C1681 + C52054 * C1905 + C52140 * C97 + C52053 * C247) *
               C26498) *
              C79308 * C79027 * C79009 * C88 +
          ((C52140 * C98 + C52053 * C248 + C52141 * C1685 + C52054 * C1909) *
               C26498 +
           (C52140 * C104 + C52053 * C254 + C52141 * C1693 + C52054 * C1917) *
               C79306) *
              C79308 * C79027 * C79009 * C89 -
          ((C52141 * C1695 + C52054 * C1919 + C52140 * C105 + C52053 * C255) *
               C79306 +
           (C52141 * C1687 + C52054 * C1911 + C52140 * C99 + C52053 * C249) *
               C26498) *
              C79308 * C79027 * C79009 * C90 +
          ((C52140 * C100 + C52053 * C250 + C52141 * C3255 + C52054 * C3400) *
               C26498 +
           (C52140 * C106 + C52053 * C256 + C52141 * C3256 + C52054 * C3401) *
               C79306) *
              C79308 * C79027 * C79009 * C91)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
                C26498 +
            (C52140 * C102 + C52053 * C252 + C52141 * C1690 + C52054 * C1914) *
                C79306) *
               C79308 * C79027 * C79300 -
           ((C52141 * C3935 + C52054 * C4169 + C52140 * C757 + C52053 * C981) *
                C79306 +
            (C52141 * C3931 + C52054 * C4165 + C52140 * C749 + C52053 * C973) *
                C26498) *
               C79308 * C79027 * C79285 +
           ((C52140 * C750 + C52053 * C974 + C52141 * C6044 + C52054 * C6228) *
                C26498 +
            (C52140 * C758 + C52053 * C982 + C52141 * C6050 + C52054 * C6234) *
                C79306) *
               C79308 * C79027 * C79259) *
              C745 +
          (((C52140 * C748 + C52053 * C972 + C52141 * C3932 + C52054 * C4166) *
                C26498 +
            (C52140 * C756 + C52053 * C980 + C52141 * C3936 + C52054 * C4170) *
                C79306) *
               C79308 * C79027 * C79285 -
           ((C52141 * C1689 + C52054 * C1913 + C52140 * C103 + C52053 * C253) *
                C79306 +
            (C52141 * C1681 + C52054 * C1905 + C52140 * C97 + C52053 * C247) *
                C26498) *
               C79308 * C79027 * C79300 -
           ((C52141 * C6049 + C52054 * C6233 + C52140 * C759 + C52053 * C983) *
                C79306 +
            (C52141 * C6043 + C52054 * C6227 + C52140 * C751 + C52053 * C975) *
                C26498) *
               C79308 * C79027 * C79259) *
              C746 +
          (((C52140 * C98 + C52053 * C248 + C52141 * C1685 + C52054 * C1909) *
                C26498 +
            (C52140 * C104 + C52053 * C254 + C52141 * C1693 + C52054 * C1917) *
                C79306) *
               C79308 * C79027 * C79300 -
           ((C52141 * C3937 + C52054 * C4171 + C52140 * C760 + C52053 * C984) *
                C79306 +
            (C52141 * C3933 + C52054 * C4167 + C52140 * C752 + C52053 * C976) *
                C26498) *
               C79308 * C79027 * C79285 +
           ((C52140 * C753 + C52053 * C977 + C52141 * C7477 + C52054 * C7686) *
                C26498 +
            (C52140 * C761 + C52053 * C985 + C52141 * C7478 + C52054 * C7687) *
                C79306) *
               C79308 * C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
                C26498 +
            (C52140 * C102 + C52053 * C252 + C52141 * C1690 + C52054 * C1914) *
                C79306) *
               C79308 * C79027 * C4921 -
           ((C52141 * C3935 + C52054 * C4169 + C52140 * C757 + C52053 * C981) *
                C79306 +
            (C52141 * C3931 + C52054 * C4165 + C52140 * C749 + C52053 * C973) *
                C26498) *
               C79308 * C79027 * C4922 +
           ((C52140 * C750 + C52053 * C974 + C52141 * C6044 + C52054 * C6228) *
                C26498 +
            (C52140 * C758 + C52053 * C982 + C52141 * C6050 + C52054 * C6234) *
                C79306) *
               C79308 * C79027 * C79259) *
              C79297 +
          (((C52140 * C748 + C52053 * C972 + C52141 * C3932 + C52054 * C4166) *
                C26498 +
            (C52140 * C756 + C52053 * C980 + C52141 * C3936 + C52054 * C4170) *
                C79306) *
               C79308 * C79027 * C4922 -
           ((C52141 * C1689 + C52054 * C1913 + C52140 * C103 + C52053 * C253) *
                C79306 +
            (C52141 * C1681 + C52054 * C1905 + C52140 * C97 + C52053 * C247) *
                C26498) *
               C79308 * C79027 * C4921 -
           ((C52141 * C6049 + C52054 * C6233 + C52140 * C759 + C52053 * C983) *
                C79306 +
            (C52141 * C6043 + C52054 * C6227 + C52140 * C751 + C52053 * C975) *
                C26498) *
               C79308 * C79027 * C79259) *
              C79281 +
          (((C52140 * C98 + C52053 * C248 + C52141 * C1685 + C52054 * C1909) *
                C26498 +
            (C52140 * C104 + C52053 * C254 + C52141 * C1693 + C52054 * C1917) *
                C79306) *
               C79308 * C79027 * C4921 -
           ((C52141 * C3937 + C52054 * C4171 + C52140 * C760 + C52053 * C984) *
                C79306 +
            (C52141 * C3933 + C52054 * C4167 + C52140 * C752 + C52053 * C976) *
                C26498) *
               C79308 * C79027 * C4922 +
           ((C52140 * C753 + C52053 * C977 + C52141 * C7477 + C52054 * C7686) *
                C26498 +
            (C52140 * C761 + C52053 * C985 + C52141 * C7478 + C52054 * C7687) *
                C79306) *
               C79308 * C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
               C26498 +
           (C52140 * C102 + C52053 * C252 + C52141 * C1690 + C52054 * C1914) *
               C79306) *
              C79308 * C79027 * C5561 -
          ((C52141 * C3935 + C52054 * C4169 + C52140 * C757 + C52053 * C981) *
               C79306 +
           (C52141 * C3931 + C52054 * C4165 + C52140 * C749 + C52053 * C973) *
               C26498) *
              C79308 * C79027 * C5562 +
          ((C52140 * C750 + C52053 * C974 + C52141 * C6044 + C52054 * C6228) *
               C26498 +
           (C52140 * C758 + C52053 * C982 + C52141 * C6050 + C52054 * C6234) *
               C79306) *
              C79308 * C79027 * C5563 -
          ((C52141 * C8379 + C52054 * C8523 + C52140 * C5572 + C52053 * C5680) *
               C79306 +
           (C52141 * C8377 + C52054 * C8521 + C52140 * C5568 + C52053 * C5676) *
               C26498) *
              C79308 * C79027 * C5564 +
          ((C52140 * C5569 + C52053 * C5677 + C52141 * C34055 +
            C52054 * C34199) *
               C26498 +
           (C52140 * C5573 + C52053 * C5681 + C52141 * C34056 +
            C52054 * C34200) *
               C79306) *
              C79308 * C79027 * C5565) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eeyx[74] += (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                   ((((C26498 * C96 + C79306 * C102) * C166 +
                      (C26498 * C167 + C79306 * C324) * C79308) *
                         C52053 +
                     ((C26498 * C1682 + C79306 * C1690) * C166 +
                      (C26498 * C1792 + C79306 * C2020) * C79308) *
                         C52054) *
                        C79027 * C79009 * C87 -
                    (((C26498 * C1791 + C79306 * C2019) * C79308 +
                      (C26498 * C1681 + C79306 * C1689) * C166) *
                         C52054 +
                     ((C26498 * C168 + C79306 * C325) * C79308 +
                      (C26498 * C97 + C79306 * C103) * C166) *
                         C52053) *
                        C79027 * C79009 * C88 +
                    (((C26498 * C98 + C79306 * C104) * C166 +
                      (C26498 * C169 + C79306 * C326) * C79308) *
                         C52053 +
                     ((C26498 * C1685 + C79306 * C1693) * C166 +
                      (C26498 * C1795 + C79306 * C2023) * C79308) *
                         C52054) *
                        C79027 * C79009 * C89 -
                    (((C26498 * C1797 + C79306 * C2025) * C79308 +
                      (C26498 * C1687 + C79306 * C1695) * C166) *
                         C52054 +
                     ((C26498 * C170 + C79306 * C327) * C79308 +
                      (C26498 * C99 + C79306 * C105) * C166) *
                         C52053) *
                        C79027 * C79009 * C90 +
                    (((C26498 * C100 + C79306 * C106) * C166 +
                      (C26498 * C171 + C79306 * C328) * C79308) *
                         C52053 +
                     ((C26498 * C3255 + C79306 * C3256) * C166 +
                      (C26498 * C3326 + C79306 * C3474) * C79308) *
                         C52054) *
                        C79027 * C79009 * C91)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                   (((((C26498 * C96 + C79306 * C102) * C166 +
                       (C26498 * C167 + C79306 * C324) * C79308) *
                          C52053 +
                      ((C26498 * C1682 + C79306 * C1690) * C166 +
                       (C26498 * C1792 + C79306 * C2020) * C79308) *
                          C52054) *
                         C79027 * C79300 -
                     ((C30027 * C79308 + C30028 * C166) * C52054 +
                      (C27247 * C79308 + C27246 * C166) * C52053) *
                         C79027 * C79285 +
                     ((C27249 * C166 + C27248 * C79308) * C52053 +
                      (C32045 * C166 + C32046 * C79308) * C52054) *
                         C79027 * C79259) *
                        C745 +
                    (((C27250 * C166 + C27251 * C79308) * C52053 +
                      (C30029 * C166 + C30030 * C79308) * C52054) *
                         C79027 * C79285 -
                     (((C26498 * C1791 + C79306 * C2019) * C79308 +
                       (C26498 * C1681 + C79306 * C1689) * C166) *
                          C52054 +
                      ((C26498 * C168 + C79306 * C325) * C79308 +
                       (C26498 * C97 + C79306 * C103) * C166) *
                          C52053) *
                         C79027 * C79300 -
                     ((C33491 * C79308 + C33492 * C166) * C52054 +
                      (C27253 * C79308 + C27252 * C166) * C52053) *
                         C79027 * C79259) *
                        C746 +
                    ((((C26498 * C98 + C79306 * C104) * C166 +
                       (C26498 * C169 + C79306 * C326) * C79308) *
                          C52053 +
                      ((C26498 * C1685 + C79306 * C1693) * C166 +
                       (C26498 * C1795 + C79306 * C2023) * C79308) *
                          C52054) *
                         C79027 * C79300 -
                     ((C30031 * C79308 + C30032 * C166) * C52054 +
                      (C27255 * C79308 + C27254 * C166) * C52053) *
                         C79027 * C79285 +
                     ((C27257 * C166 + C27256 * C79308) * C52053 +
                      ((C26498 * C7477 + C79306 * C7478) * C166 +
                       (C26498 * C7580 + C79306 * C7792) * C79308) *
                          C52054) *
                         C79027 * C79259) *
                        C79253)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                   (((((C26498 * C96 + C79306 * C102) * C166 +
                       (C26498 * C167 + C79306 * C324) * C79308) *
                          C52053 +
                      (C53472 + C53473) * C52054) *
                         C79027 * C4921 -
                     ((C55523 + C55522) * C52054 +
                      (C27247 * C79308 + C27246 * C166) * C52053) *
                         C79027 * C4922 +
                     ((C27249 * C166 + C27248 * C79308) * C52053 +
                      (C32045 * C166 + C32046 * C79308) * C52054) *
                         C79027 * C79259) *
                        C79297 +
                    (((C27250 * C166 + C27251 * C79308) * C52053 +
                      (C55524 + C55525) * C52054) *
                         C79027 * C4922 -
                     ((C53477 + C53476) * C52054 +
                      ((C26498 * C168 + C79306 * C325) * C79308 +
                       (C26498 * C97 + C79306 * C103) * C166) *
                          C52053) *
                         C79027 * C4921 -
                     ((C33491 * C79308 + C33492 * C166) * C52054 +
                      (C27253 * C79308 + C27252 * C166) * C52053) *
                         C79027 * C79259) *
                        C79281 +
                    ((((C26498 * C98 + C79306 * C104) * C166 +
                       (C26498 * C169 + C79306 * C326) * C79308) *
                          C52053 +
                      (C53480 + C53481) * C52054) *
                         C79027 * C4921 -
                     ((C55527 + C55526) * C52054 +
                      (C27255 * C79308 + C27254 * C166) * C52053) *
                         C79027 * C4922 +
                     ((C27257 * C166 + C27256 * C79308) * C52053 +
                      ((C26498 * C7477 + C79306 * C7478) * C166 +
                       (C26498 * C7580 + C79306 * C7792) * C79308) *
                          C52054) *
                         C79027 * C79259) *
                        C79253)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                   ((((C26498 * C96 + C79306 * C102) * C166 +
                      (C26498 * C167 + C79306 * C324) * C79308) *
                         C52053 +
                     (C53472 + C53473) * C52054) *
                        C79027 * C5561 -
                    ((C55523 + C55522) * C52054 +
                     (C27247 * C79308 + C27246 * C166) * C52053) *
                        C79027 * C5562 +
                    ((C27249 * C166 + C27248 * C79308) * C52053 +
                     (C32045 * C166 + C32046 * C79308) * C52054) *
                        C79027 * C5563 -
                    ((C34281 * C79308 + C34282 * C166) * C52054 +
                     (C31433 * C79308 + C31432 * C166) * C52053) *
                        C79027 * C5564 +
                    ((C31435 * C166 + C31434 * C79308) * C52053 +
                     ((C26498 * C34055 + C79306 * C34056) * C166 +
                      (C26498 * C34131 + C79306 * C34275) * C79308) *
                         C52054) *
                        C79027 * C5565) *
                   C78981) /
                      (p * q * std::sqrt(p + q));
    d2eeyy[74] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C372 * C96 + C380 + C380 + C79308 * C373) * C79306 * C52053 +
           (C372 * C1682 + C2113 + C2113 + C79308 * C2102) * C79306 * C52054) *
              C79027 * C79009 * C87 -
          (C2134 * C79306 * C52054 + C402 * C79306 * C52053) * C79027 * C79009 *
              C88 +
          (C403 * C79306 * C52053 + C2136 * C79306 * C52054) * C79027 * C79009 *
              C89 -
          (C3548 * C79306 * C52054 + C404 * C79306 * C52053) * C79027 * C79009 *
              C90 +
          (C405 * C79306 * C52053 +
           (C372 * C3255 + C3545 + C3545 + C79308 * C3541) * C79306 * C52054) *
              C79027 * C79009 * C91)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C372 * C96 + C380 + C380 + C79308 * C373) * C79306 * C52053 +
            (C372 * C1682 + C2113 + C2113 + C79308 * C2102) * C79306 * C52054) *
               C79027 * C79300 -
           ((C372 * C3931 + C4390 + C4390 + C79308 * C4385) * C79306 * C52054 +
            (C372 * C749 + C1180 + C1180 + C79308 * C1169) * C79306 * C52053) *
               C79027 * C79285 +
           ((C372 * C750 + C1181 + C1181 + C79308 * C1170) * C79306 * C52053 +
            (C372 * C6044 + C6401 + C6401 + C79308 * C6394) * C79306 * C52054) *
               C79027 * C79259) *
              C745 +
          ((C1201 * C79306 * C52053 + C4402 * C79306 * C52054) * C79027 *
               C79285 -
           (C2134 * C79306 * C52054 + C402 * C79306 * C52053) * C79027 *
               C79300 -
           (C7898 * C79306 * C52054 + C1202 * C79306 * C52053) * C79027 *
               C79259) *
              C746 +
          ((C403 * C79306 * C52053 + C2136 * C79306 * C52054) * C79027 *
               C79300 -
           (C4403 * C79306 * C52054 + C1203 * C79306 * C52053) * C79027 *
               C79285 +
           (C1204 * C79306 * C52053 +
            (C372 * C7477 + C7895 + C7895 + C79308 * C7891) * C79306 * C52054) *
               C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C372 * C96 + C380 + C380 + C79308 * C373) * C79306 * C52053 +
            C53572 * C52054) *
               C79027 * C4921 -
           (C55633 * C52054 +
            (C372 * C749 + C1180 + C1180 + C79308 * C1169) * C79306 * C52053) *
               C79027 * C4922 +
           ((C372 * C750 + C1181 + C1181 + C79308 * C1170) * C79306 * C52053 +
            (C372 * C6044 + C6401 + C6401 + C79308 * C6394) * C79306 * C52054) *
               C79027 * C79259) *
              C79297 +
          ((C1201 * C79306 * C52053 + C55628 * C52054) * C79027 * C4922 -
           (C53562 * C52054 + C402 * C79306 * C52053) * C79027 * C4921 -
           (C7898 * C79306 * C52054 + C1202 * C79306 * C52053) * C79027 *
               C79259) *
              C79281 +
          ((C403 * C79306 * C52053 + C53564 * C52054) * C79027 * C4921 -
           (C55629 * C52054 + C1203 * C79306 * C52053) * C79027 * C4922 +
           (C1204 * C79306 * C52053 +
            (C372 * C7477 + C7895 + C7895 + C79308 * C7891) * C79306 * C52054) *
               C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C372 * C96 + C380 + C380 + C79308 * C373) * C79306 * C52053 +
           C53572 * C52054) *
              C79027 * C5561 -
          (C55633 * C52054 +
           (C372 * C749 + C1180 + C1180 + C79308 * C1169) * C79306 * C52053) *
              C79027 * C5562 +
          ((C372 * C750 + C1181 + C1181 + C79308 * C1170) * C79306 * C52053 +
           (C372 * C6044 + C6401 + C6401 + C79308 * C6394) * C79306 * C52054) *
              C79027 * C5563 -
          ((C372 * C8377 + C8662 + C8662 + C79308 * C8659) * C79306 * C52054 +
           (C372 * C5568 + C5777 + C5777 + C79308 * C5772) * C79306 * C52053) *
              C79027 * C5564 +
          ((C372 * C5569 + C5778 + C5778 + C79308 * C5773) * C79306 * C52053 +
           (C372 * C34055 + C56911 + C56911 + C79308 * C34348) * C79306 *
               C52054) *
              C79027 * C5565) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eeyz[74] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
               C166 +
           (C52140 * C167 + C52053 * C447 + C52141 * C1792 + C52054 * C2212) *
               C79308) *
              C79306 * C79027 * C79009 * C87 -
          ((C52141 * C1791 + C52054 * C2211 + C52140 * C168 + C52053 * C448) *
               C79308 +
           (C52141 * C1681 + C52054 * C1905 + C52140 * C97 + C52053 * C247) *
               C166) *
              C79306 * C79027 * C79009 * C88 +
          ((C52140 * C98 + C52053 * C248 + C52141 * C1685 + C52054 * C1909) *
               C166 +
           (C52140 * C169 + C52053 * C449 + C52141 * C1795 + C52054 * C2215) *
               C79308) *
              C79306 * C79027 * C79009 * C89 -
          ((C52141 * C1797 + C52054 * C2217 + C52140 * C170 + C52053 * C450) *
               C79308 +
           (C52141 * C1687 + C52054 * C1911 + C52140 * C99 + C52053 * C249) *
               C166) *
              C79306 * C79027 * C79009 * C90 +
          ((C52140 * C100 + C52053 * C250 + C52141 * C3255 + C52054 * C3400) *
               C166 +
           (C52140 * C171 + C52053 * C451 + C52141 * C3326 + C52054 * C3614) *
               C79308) *
              C79306 * C79027 * C79009 * C91)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
                C166 +
            (C52140 * C167 + C52053 * C447 + C52141 * C1792 + C52054 * C2212) *
                C79308) *
               C79306 * C79027 * C79300 -
           ((C52141 * C4047 + C52054 * C4501 + C52140 * C859 + C52053 * C1279) *
                C79308 +
            (C52141 * C3931 + C52054 * C4165 + C52140 * C749 + C52053 * C973) *
                C166) *
               C79306 * C79027 * C79285 +
           ((C52140 * C750 + C52053 * C974 + C52141 * C6044 + C52054 * C6228) *
                C166 +
            (C52140 * C860 + C52053 * C1280 + C52141 * C6142 + C52054 * C6480) *
                C79308) *
               C79306 * C79027 * C79259) *
              C745 +
          (((C52140 * C748 + C52053 * C972 + C52141 * C3932 + C52054 * C4166) *
                C166 +
            (C52140 * C858 + C52053 * C1278 + C52141 * C4048 + C52054 * C4502) *
                C79308) *
               C79306 * C79027 * C79285 -
           ((C52141 * C1791 + C52054 * C2211 + C52140 * C168 + C52053 * C448) *
                C79308 +
            (C52141 * C1681 + C52054 * C1905 + C52140 * C97 + C52053 * C247) *
                C166) *
               C79306 * C79027 * C79300 -
           ((C52141 * C6141 + C52054 * C6479 + C52140 * C861 + C52053 * C1281) *
                C79308 +
            (C52141 * C6043 + C52054 * C6227 + C52140 * C751 + C52053 * C975) *
                C166) *
               C79306 * C79027 * C79259) *
              C746 +
          (((C52140 * C98 + C52053 * C248 + C52141 * C1685 + C52054 * C1909) *
                C166 +
            (C52140 * C169 + C52053 * C449 + C52141 * C1795 + C52054 * C2215) *
                C79308) *
               C79306 * C79027 * C79300 -
           ((C52141 * C4049 + C52054 * C4503 + C52140 * C862 + C52053 * C1282) *
                C79308 +
            (C52141 * C3933 + C52054 * C4167 + C52140 * C752 + C52053 * C976) *
                C166) *
               C79306 * C79027 * C79285 +
           ((C52140 * C753 + C52053 * C977 + C52141 * C7477 + C52054 * C7686) *
                C166 +
            (C52140 * C863 + C52053 * C1283 + C52141 * C7580 + C52054 * C7996) *
                C79308) *
               C79306 * C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
                C166 +
            (C52140 * C167 + C52053 * C447 + C52141 * C1792 + C52054 * C2212) *
                C79308) *
               C79306 * C79027 * C4921 -
           ((C52141 * C4047 + C52054 * C4501 + C52140 * C859 + C52053 * C1279) *
                C79308 +
            (C52141 * C3931 + C52054 * C4165 + C52140 * C749 + C52053 * C973) *
                C166) *
               C79306 * C79027 * C4922 +
           ((C52140 * C750 + C52053 * C974 + C52141 * C6044 + C52054 * C6228) *
                C166 +
            (C52140 * C860 + C52053 * C1280 + C52141 * C6142 + C52054 * C6480) *
                C79308) *
               C79306 * C79027 * C79259) *
              C79297 +
          (((C52140 * C748 + C52053 * C972 + C52141 * C3932 + C52054 * C4166) *
                C166 +
            (C52140 * C858 + C52053 * C1278 + C52141 * C4048 + C52054 * C4502) *
                C79308) *
               C79306 * C79027 * C4922 -
           ((C52141 * C1791 + C52054 * C2211 + C52140 * C168 + C52053 * C448) *
                C79308 +
            (C52141 * C1681 + C52054 * C1905 + C52140 * C97 + C52053 * C247) *
                C166) *
               C79306 * C79027 * C4921 -
           ((C52141 * C6141 + C52054 * C6479 + C52140 * C861 + C52053 * C1281) *
                C79308 +
            (C52141 * C6043 + C52054 * C6227 + C52140 * C751 + C52053 * C975) *
                C166) *
               C79306 * C79027 * C79259) *
              C79281 +
          (((C52140 * C98 + C52053 * C248 + C52141 * C1685 + C52054 * C1909) *
                C166 +
            (C52140 * C169 + C52053 * C449 + C52141 * C1795 + C52054 * C2215) *
                C79308) *
               C79306 * C79027 * C4921 -
           ((C52141 * C4049 + C52054 * C4503 + C52140 * C862 + C52053 * C1282) *
                C79308 +
            (C52141 * C3933 + C52054 * C4167 + C52140 * C752 + C52053 * C976) *
                C166) *
               C79306 * C79027 * C4922 +
           ((C52140 * C753 + C52053 * C977 + C52141 * C7477 + C52054 * C7686) *
                C166 +
            (C52140 * C863 + C52053 * C1283 + C52141 * C7580 + C52054 * C7996) *
                C79308) *
               C79306 * C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C52140 * C96 + C52053 * C246 + C52141 * C1682 + C52054 * C1906) *
               C166 +
           (C52140 * C167 + C52053 * C447 + C52141 * C1792 + C52054 * C2212) *
               C79308) *
              C79306 * C79027 * C5561 -
          ((C52141 * C4047 + C52054 * C4501 + C52140 * C859 + C52053 * C1279) *
               C79308 +
           (C52141 * C3931 + C52054 * C4165 + C52140 * C749 + C52053 * C973) *
               C166) *
              C79306 * C79027 * C5562 +
          ((C52140 * C750 + C52053 * C974 + C52141 * C6044 + C52054 * C6228) *
               C166 +
           (C52140 * C860 + C52053 * C1280 + C52141 * C6142 + C52054 * C6480) *
               C79308) *
              C79306 * C79027 * C5563 -
          ((C52141 * C8451 + C52054 * C8729 + C52140 * C5626 + C52053 * C5822) *
               C79308 +
           (C52141 * C8377 + C52054 * C8521 + C52140 * C5568 + C52053 * C5676) *
               C166) *
              C79306 * C79027 * C5564 +
          ((C52140 * C5569 + C52053 * C5677 + C52141 * C34055 +
            C52054 * C34199) *
               C166 +
           (C52140 * C5627 + C52053 * C5823 + C52141 * C34131 +
            C52054 * C34417) *
               C79308) *
              C79306 * C79027 * C5565) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eezx[74] += (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                   (((C26498 * C96 + C79306 * C102) * C52140 +
                     (C26498 * C246 + C79306 * C515) * C52053 +
                     (C26498 * C1682 + C79306 * C1690) * C52141 +
                     (C26498 * C1906 + C79306 * C2314) * C52054) *
                        C79308 * C79027 * C79009 * C87 -
                    ((C26498 * C1905 + C79306 * C2313) * C52054 +
                     (C26498 * C1681 + C79306 * C1689) * C52141 +
                     (C26498 * C247 + C79306 * C516) * C52053 +
                     (C26498 * C97 + C79306 * C103) * C52140) *
                        C79308 * C79027 * C79009 * C88 +
                    ((C26498 * C98 + C79306 * C104) * C52140 +
                     (C26498 * C248 + C79306 * C517) * C52053 +
                     (C26498 * C1685 + C79306 * C1693) * C52141 +
                     (C26498 * C1909 + C79306 * C2317) * C52054) *
                        C79308 * C79027 * C79009 * C89 -
                    ((C26498 * C1911 + C79306 * C2319) * C52054 +
                     (C26498 * C1687 + C79306 * C1695) * C52141 +
                     (C26498 * C249 + C79306 * C518) * C52053 +
                     (C26498 * C99 + C79306 * C105) * C52140) *
                        C79308 * C79027 * C79009 * C90 +
                    ((C26498 * C100 + C79306 * C106) * C52140 +
                     (C26498 * C250 + C79306 * C519) * C52053 +
                     (C26498 * C3255 + C79306 * C3256) * C52141 +
                     (C26498 * C3400 + C79306 * C3686) * C52054) *
                        C79308 * C79027 * C79009 * C91)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                   ((((C26498 * C96 + C79306 * C102) * C52140 +
                      (C26498 * C246 + C79306 * C515) * C52053 +
                      (C26498 * C1682 + C79306 * C1690) * C52141 +
                      (C26498 * C1906 + C79306 * C2314) * C52054) *
                         C79308 * C79027 * C79300 -
                     (C30345 * C52054 + C30028 * C52141 + C27516 * C52053 +
                      C27246 * C52140) *
                         C79308 * C79027 * C79285 +
                     (C27249 * C52140 + C27517 * C52053 + C32045 * C52141 +
                      C32299 * C52054) *
                         C79308 * C79027 * C79259) *
                        C745 +
                    ((C27250 * C52140 + C27518 * C52053 + C30029 * C52141 +
                      C30346 * C52054) *
                         C79308 * C79027 * C79285 -
                     ((C26498 * C1905 + C79306 * C2313) * C52054 +
                      (C26498 * C1681 + C79306 * C1689) * C52141 +
                      (C26498 * C247 + C79306 * C516) * C52053 +
                      (C26498 * C97 + C79306 * C103) * C52140) *
                         C79308 * C79027 * C79300 -
                     (C33792 * C52054 + C33492 * C52141 + C27519 * C52053 +
                      C27252 * C52140) *
                         C79308 * C79027 * C79259) *
                        C746 +
                    (((C26498 * C98 + C79306 * C104) * C52140 +
                      (C26498 * C248 + C79306 * C517) * C52053 +
                      (C26498 * C1685 + C79306 * C1693) * C52141 +
                      (C26498 * C1909 + C79306 * C2317) * C52054) *
                         C79308 * C79027 * C79300 -
                     (C30347 * C52054 + C30032 * C52141 + C27520 * C52053 +
                      C27254 * C52140) *
                         C79308 * C79027 * C79285 +
                     (C27257 * C52140 + C27521 * C52053 +
                      (C26498 * C7477 + C79306 * C7478) * C52141 +
                      (C26498 * C7686 + C79306 * C8100) * C52054) *
                         C79308 * C79027 * C79259) *
                        C79253)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                   ((((C26498 * C96 + C79306 * C102) * C52140 +
                      (C26498 * C246 + C79306 * C515) * C52053 +
                      C53460 * C52141 + C53734 * C52054) *
                         C79308 * C79027 * C4921 -
                     (C30345 * C52054 + C30028 * C52141 + C27516 * C52053 +
                      C27246 * C52140) *
                         C79308 * C79027 * C4922 +
                     (C27249 * C52140 + C27517 * C52053 + C32045 * C52141 +
                      C32299 * C52054) *
                         C79308 * C79027 * C79259) *
                        C79297 +
                    ((C27250 * C52140 + C27518 * C52053 + C30029 * C52141 +
                      C30346 * C52054) *
                         C79308 * C79027 * C4922 -
                     (C53736 * C52054 + C53464 * C52141 +
                      (C26498 * C247 + C79306 * C516) * C52053 +
                      (C26498 * C97 + C79306 * C103) * C52140) *
                         C79308 * C79027 * C4921 -
                     (C33792 * C52054 + C33492 * C52141 + C27519 * C52053 +
                      C27252 * C52140) *
                         C79308 * C79027 * C79259) *
                        C79281 +
                    (((C26498 * C98 + C79306 * C104) * C52140 +
                      (C26498 * C248 + C79306 * C517) * C52053 +
                      C53468 * C52141 + C53738 * C52054) *
                         C79308 * C79027 * C4921 -
                     (C30347 * C52054 + C30032 * C52141 + C27520 * C52053 +
                      C27254 * C52140) *
                         C79308 * C79027 * C4922 +
                     (C27257 * C52140 + C27521 * C52053 +
                      (C26498 * C7477 + C79306 * C7478) * C52141 +
                      (C26498 * C7686 + C79306 * C8100) * C52054) *
                         C79308 * C79027 * C79259) *
                        C79253)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                   (((C26498 * C96 + C79306 * C102) * C52140 +
                     (C26498 * C246 + C79306 * C515) * C52053 +
                     C53460 * C52141 + C53734 * C52054) *
                        C79308 * C79027 * C5561 -
                    (C30345 * C52054 + C30028 * C52141 + C27516 * C52053 +
                     C27246 * C52140) *
                        C79308 * C79027 * C5562 +
                    (C27249 * C52140 + C27517 * C52053 + C32045 * C52141 +
                     C32299 * C52054) *
                        C79308 * C79027 * C5563 -
                    (C34492 * C52054 + C34282 * C52141 + C31581 * C52053 +
                     C31432 * C52140) *
                        C79308 * C79027 * C5564 +
                    (C31435 * C52140 + C31582 * C52053 +
                     (C26498 * C34055 + C79306 * C34056) * C52141 +
                     (C26498 * C34199 + C79306 * C34487) * C52054) *
                        C79308 * C79027 * C5565) *
                   C78981) /
                      (p * q * std::sqrt(p + q));
    d2eezy[74] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C166 * C96 + C79308 * C167) * C52140 +
           (C166 * C246 + C79308 * C563) * C52053 +
           (C166 * C1682 + C79308 * C1792) * C52141 +
           (C166 * C1906 + C79308 * C2396) * C52054) *
              C79306 * C79027 * C79009 * C87 -
          (C2416 * C52054 + C1825 * C52141 + C582 * C52053 + C196 * C52140) *
              C79306 * C79027 * C79009 * C88 +
          (C199 * C52140 + C583 * C52053 + C1828 * C52141 + C2418 * C52054) *
              C79306 * C79027 * C79009 * C89 -
          (C3758 * C52054 + C3334 * C52141 + C584 * C52053 + C200 * C52140) *
              C79306 * C79027 * C79009 * C90 +
          (C203 * C52140 + C585 * C52053 +
           (C166 * C3255 + C79308 * C3326) * C52141 +
           (C166 * C3400 + C79308 * C3753) * C52054) *
              C79306 * C79027 * C79009 * C91)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C166 * C96 + C79308 * C167) * C52140 +
            (C166 * C246 + C79308 * C563) * C52053 +
            (C166 * C1682 + C79308 * C1792) * C52141 +
            (C166 * C1906 + C79308 * C2396) * C52054) *
               C79306 * C79027 * C79300 -
           ((C166 * C4165 + C79308 * C4715) * C52054 +
            (C166 * C3931 + C79308 * C4047) * C52141 +
            (C166 * C973 + C79308 * C1463) * C52053 +
            (C166 * C749 + C79308 * C859) * C52140) *
               C79306 * C79027 * C79285 +
           ((C166 * C750 + C79308 * C860) * C52140 +
            (C166 * C974 + C79308 * C1464) * C52053 +
            (C166 * C6044 + C79308 * C6142) * C52141 +
            (C166 * C6228 + C79308 * C6640) * C52054) *
               C79306 * C79027 * C79259) *
              C745 +
          ((C892 * C52140 + C1483 * C52053 + C4064 * C52141 + C4726 * C52054) *
               C79306 * C79027 * C79285 -
           (C2416 * C52054 + C1825 * C52141 + C582 * C52053 + C196 * C52140) *
               C79306 * C79027 * C79300 -
           (C8204 * C52054 + C7588 * C52141 + C1484 * C52053 + C893 * C52140) *
               C79306 * C79027 * C79259) *
              C746 +
          ((C199 * C52140 + C583 * C52053 + C1828 * C52141 + C2418 * C52054) *
               C79306 * C79027 * C79300 -
           (C4727 * C52054 + C4067 * C52141 + C1485 * C52053 + C895 * C52140) *
               C79306 * C79027 * C79285 +
           (C898 * C52140 + C1486 * C52053 +
            (C166 * C7477 + C79308 * C7580) * C52141 +
            (C166 * C7686 + C79308 * C8199) * C52054) *
               C79306 * C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C166 * C96 + C79308 * C167) * C52140 +
            (C166 * C246 + C79308 * C563) * C52053 + C53280 * C52141 +
            C53818 * C52054) *
               C79306 * C79027 * C4921 -
           (C55930 * C52054 + C55322 * C52141 +
            (C166 * C973 + C79308 * C1463) * C52053 +
            (C166 * C749 + C79308 * C859) * C52140) *
               C79306 * C79027 * C4922 +
           ((C166 * C750 + C79308 * C860) * C52140 +
            (C166 * C974 + C79308 * C1464) * C52053 +
            (C166 * C6044 + C79308 * C6142) * C52141 +
            (C166 * C6228 + C79308 * C6640) * C52054) *
               C79306 * C79027 * C79259) *
              C79297 +
          ((C892 * C52140 + C1483 * C52053 + C4064 * C52141 + C4726 * C52054) *
               C79306 * C79027 * C4922 -
           (C2416 * C52054 + C1825 * C52141 + C582 * C52053 + C196 * C52140) *
               C79306 * C79027 * C4921 -
           (C8204 * C52054 + C7588 * C52141 + C1484 * C52053 + C893 * C52140) *
               C79306 * C79027 * C79259) *
              C79281 +
          ((C199 * C52140 + C583 * C52053 + C1828 * C52141 + C2418 * C52054) *
               C79306 * C79027 * C4921 -
           (C4727 * C52054 + C4067 * C52141 + C1485 * C52053 + C895 * C52140) *
               C79306 * C79027 * C4922 +
           (C898 * C52140 + C1486 * C52053 +
            (C166 * C7477 + C79308 * C7580) * C52141 +
            (C166 * C7686 + C79308 * C8199) * C52054) *
               C79306 * C79027 * C79259) *
              C79253)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C166 * C96 + C79308 * C167) * C52140 +
           (C166 * C246 + C79308 * C563) * C52053 + C53280 * C52141 +
           C53818 * C52054) *
              C79306 * C79027 * C5561 -
          (C55930 * C52054 + C55322 * C52141 +
           (C166 * C973 + C79308 * C1463) * C52053 +
           (C166 * C749 + C79308 * C859) * C52140) *
              C79306 * C79027 * C5562 +
          ((C166 * C750 + C79308 * C860) * C52140 +
           (C166 * C974 + C79308 * C1464) * C52053 +
           (C166 * C6044 + C79308 * C6142) * C52141 +
           (C166 * C6228 + C79308 * C6640) * C52054) *
              C79306 * C79027 * C5563 -
          ((C166 * C8521 + C79308 * C8865) * C52054 +
           (C166 * C8377 + C79308 * C8451) * C52141 +
           (C166 * C5676 + C79308 * C5914) * C52053 +
           (C166 * C5568 + C79308 * C5626) * C52140) *
              C79306 * C79027 * C5564 +
          ((C166 * C5569 + C79308 * C5627) * C52140 +
           (C166 * C5677 + C79308 * C5915) * C52053 +
           (C166 * C34055 + C79308 * C34131) * C52141 +
           (C166 * C34199 + C79308 * C34559) * C52054) *
              C79306 * C79027 * C5565) *
         C78981) /
            (p * q * std::sqrt(p + q));
    d2eezz[74] += (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                   ((C52394 * C96 + C52397 + C52397 + C52053 * C632 +
                     C52395 * C1682 + C52398 + C52398 + C52054 * C2498) *
                        C79308 * C79306 * C79027 * C79009 * C87 -
                    (C52395 * C1681 + C52399 + C52399 + C52054 * C2497 +
                     C52394 * C97 + C52400 + C52400 + C52053 * C633) *
                        C79308 * C79306 * C79027 * C79009 * C88 +
                    (C52394 * C98 + C52401 + C52401 + C52053 * C634 +
                     C52395 * C1685 + C52402 + C52402 + C52054 * C2501) *
                        C79308 * C79306 * C79027 * C79009 * C89 -
                    (C52395 * C1687 + C52403 + C52403 + C52054 * C2503 +
                     C52394 * C99 + C52404 + C52404 + C52053 * C635) *
                        C79308 * C79306 * C79027 * C79009 * C90 +
                    (C52394 * C100 + C52405 + C52405 + C52053 * C636 +
                     C52395 * C3255 + C52406 + C52406 + C52054 * C3825) *
                        C79308 * C79306 * C79027 * C79009 * C91)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                   (((C52394 * C96 + C52397 + C52397 + C52053 * C632 +
                      C52395 * C1682 + C52398 + C52398 + C52054 * C2498) *
                         C79308 * C79306 * C79027 * C79300 -
                     (C52395 * C3931 + C53073 + C53073 + C52054 * C4827 +
                      C52394 * C749 + C53074 + C53074 + C52053 * C1565) *
                         C79308 * C79306 * C79027 * C79285 +
                     (C52394 * C750 + C53075 + C53075 + C52053 * C1566 +
                      C52395 * C6044 + C53076 + C53076 + C52054 * C6720) *
                         C79308 * C79306 * C79027 * C79259) *
                        C745 +
                    ((C52394 * C748 + C53077 + C53077 + C52053 * C1564 +
                      C52395 * C3932 + C53078 + C53078 + C52054 * C4828) *
                         C79308 * C79306 * C79027 * C79285 -
                     (C52395 * C1681 + C52399 + C52399 + C52054 * C2497 +
                      C52394 * C97 + C52400 + C52400 + C52053 * C633) *
                         C79308 * C79306 * C79027 * C79300 -
                     (C52395 * C6043 + C53079 + C53079 + C52054 * C6719 +
                      C52394 * C751 + C53080 + C53080 + C52053 * C1567) *
                         C79308 * C79306 * C79027 * C79259) *
                        C746 +
                    ((C52394 * C98 + C52401 + C52401 + C52053 * C634 +
                      C52395 * C1685 + C52402 + C52402 + C52054 * C2501) *
                         C79308 * C79306 * C79027 * C79300 -
                     (C52395 * C3933 + C53081 + C53081 + C52054 * C4829 +
                      C52394 * C752 + C53082 + C53082 + C52053 * C1568) *
                         C79308 * C79306 * C79027 * C79285 +
                     (C52394 * C753 + C53083 + C53083 + C52053 * C1569 +
                      C52395 * C7477 + C53084 + C53084 + C52054 * C8303) *
                         C79308 * C79306 * C79027 * C79259) *
                        C79253)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                   (((C52394 * C96 + C52397 + C52397 + C52053 * C632 +
                      C52395 * C1682 + C52398 + C52398 + C52054 * C2498) *
                         C79308 * C79306 * C79027 * C4921 -
                     (C52395 * C3931 + C53073 + C53073 + C52054 * C4827 +
                      C52394 * C749 + C53074 + C53074 + C52053 * C1565) *
                         C79308 * C79306 * C79027 * C4922 +
                     (C52394 * C750 + C53075 + C53075 + C52053 * C1566 +
                      C52395 * C6044 + C53076 + C53076 + C52054 * C6720) *
                         C79308 * C79306 * C79027 * C79259) *
                        C79297 +
                    ((C52394 * C748 + C53077 + C53077 + C52053 * C1564 +
                      C52395 * C3932 + C53078 + C53078 + C52054 * C4828) *
                         C79308 * C79306 * C79027 * C4922 -
                     (C52395 * C1681 + C52399 + C52399 + C52054 * C2497 +
                      C52394 * C97 + C52400 + C52400 + C52053 * C633) *
                         C79308 * C79306 * C79027 * C4921 -
                     (C52395 * C6043 + C53079 + C53079 + C52054 * C6719 +
                      C52394 * C751 + C53080 + C53080 + C52053 * C1567) *
                         C79308 * C79306 * C79027 * C79259) *
                        C79281 +
                    ((C52394 * C98 + C52401 + C52401 + C52053 * C634 +
                      C52395 * C1685 + C52402 + C52402 + C52054 * C2501) *
                         C79308 * C79306 * C79027 * C4921 -
                     (C52395 * C3933 + C53081 + C53081 + C52054 * C4829 +
                      C52394 * C752 + C53082 + C53082 + C52053 * C1568) *
                         C79308 * C79306 * C79027 * C4922 +
                     (C52394 * C753 + C53083 + C53083 + C52053 * C1569 +
                      C52395 * C7477 + C53084 + C53084 + C52054 * C8303) *
                         C79308 * C79306 * C79027 * C79259) *
                        C79253)) /
                      (p * q * std::sqrt(p + q)) +
                  (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                   ((C52394 * C96 + C52397 + C52397 + C52053 * C632 +
                     C52395 * C1682 + C52398 + C52398 + C52054 * C2498) *
                        C79308 * C79306 * C79027 * C5561 -
                    (C52395 * C3931 + C53073 + C53073 + C52054 * C4827 +
                     C52394 * C749 + C53074 + C53074 + C52053 * C1565) *
                        C79308 * C79306 * C79027 * C5562 +
                    (C52394 * C750 + C53075 + C53075 + C52053 * C1566 +
                     C52395 * C6044 + C53076 + C53076 + C52054 * C6720) *
                        C79308 * C79306 * C79027 * C5563 -
                    (C52395 * C8377 + C57080 + C57080 + C52054 * C8933 +
                     C52394 * C5568 + C57081 + C57081 + C52053 * C5960) *
                        C79308 * C79306 * C79027 * C5564 +
                    (C52394 * C5569 + C57082 + C57082 + C52053 * C5961 +
                     C52395 * C34055 + C57083 + C57083 + C52054 * C34626) *
                        C79308 * C79306 * C79027 * C5565) *
                   C78981) /
                      (p * q * std::sqrt(p + q));
}
